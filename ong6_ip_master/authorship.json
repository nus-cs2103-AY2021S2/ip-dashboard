[{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027checkstyle\u0027"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027"},{"lineNumber":6,"author":{"gitId":"-"},"content":"}"},{"lineNumber":7,"author":{"gitId":"-"},"content":""},{"lineNumber":8,"author":{"gitId":"-"},"content":"repositories {"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    mavenCentral()"},{"lineNumber":10,"author":{"gitId":"-"},"content":"}"},{"lineNumber":11,"author":{"gitId":"-"},"content":""},{"lineNumber":12,"author":{"gitId":"-"},"content":"dependencies {"},{"lineNumber":13,"author":{"gitId":"ong6"},"content":"    String javaFxVersion \u003d \u002711\u0027"},{"lineNumber":14,"author":{"gitId":"ong6"},"content":""},{"lineNumber":15,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.5.0\u0027"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.5.0\u0027"},{"lineNumber":17,"author":{"gitId":"ong6"},"content":"    testImplementation(\u0027org.junit.platform:junit-platform-launcher:1.5.2\u0027)"},{"lineNumber":18,"author":{"gitId":"ong6"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027"},{"lineNumber":19,"author":{"gitId":"ong6"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"},{"lineNumber":20,"author":{"gitId":"ong6"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"},{"lineNumber":21,"author":{"gitId":"ong6"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027"},{"lineNumber":22,"author":{"gitId":"ong6"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"},{"lineNumber":23,"author":{"gitId":"ong6"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"},{"lineNumber":24,"author":{"gitId":"ong6"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027"},{"lineNumber":25,"author":{"gitId":"ong6"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"},{"lineNumber":26,"author":{"gitId":"ong6"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"},{"lineNumber":27,"author":{"gitId":"ong6"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027"},{"lineNumber":28,"author":{"gitId":"ong6"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"},{"lineNumber":29,"author":{"gitId":"ong6"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"},{"lineNumber":30,"author":{"gitId":"-"},"content":"}"},{"lineNumber":31,"author":{"gitId":"-"},"content":""},{"lineNumber":32,"author":{"gitId":"-"},"content":"test {"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    useJUnitPlatform()"},{"lineNumber":34,"author":{"gitId":"-"},"content":""},{"lineNumber":35,"author":{"gitId":"-"},"content":"    testLogging {"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\""},{"lineNumber":37,"author":{"gitId":"-"},"content":""},{"lineNumber":38,"author":{"gitId":"-"},"content":"        showExceptions true"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\""},{"lineNumber":40,"author":{"gitId":"-"},"content":"        showCauses true"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        showStackTraces true"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":44,"author":{"gitId":"-"},"content":"}"},{"lineNumber":45,"author":{"gitId":"-"},"content":""},{"lineNumber":46,"author":{"gitId":"-"},"content":"application {"},{"lineNumber":47,"author":{"gitId":"ong6"},"content":"    mainClassName \u003d \"Duke\""},{"lineNumber":48,"author":{"gitId":"-"},"content":"}"},{"lineNumber":49,"author":{"gitId":"-"},"content":""},{"lineNumber":50,"author":{"gitId":"-"},"content":"shadowJar {"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    archiveBaseName \u003d \"duke\""},{"lineNumber":52,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null"},{"lineNumber":53,"author":{"gitId":"-"},"content":"}"},{"lineNumber":54,"author":{"gitId":"-"},"content":""},{"lineNumber":55,"author":{"gitId":"-"},"content":"checkstyle {"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    toolVersion \u003d \u00278.29\u0027"},{"lineNumber":57,"author":{"gitId":"-"},"content":"}"},{"lineNumber":58,"author":{"gitId":"-"},"content":""},{"lineNumber":59,"author":{"gitId":"-"},"content":"run{"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in"},{"lineNumber":61,"author":{"gitId":"-"},"content":"}"},{"lineNumber":62,"author":{"gitId":"ong6"},"content":""},{"lineNumber":63,"author":{"gitId":"ong6"},"content":""}],"authorContributionMap":{"ong6":18,"-":45}},{"path":"src/main/java/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ong6"},"content":"import java.util.Scanner;"},{"lineNumber":2,"author":{"gitId":"ong6"},"content":""},{"lineNumber":3,"author":{"gitId":"ong6"},"content":"import duke.Parser;"},{"lineNumber":4,"author":{"gitId":"ong6"},"content":"import duke.Storage;"},{"lineNumber":5,"author":{"gitId":"ong6"},"content":"import duke.TaskList;"},{"lineNumber":6,"author":{"gitId":"ong6"},"content":"import duke.Ui;"},{"lineNumber":7,"author":{"gitId":"ong6"},"content":""},{"lineNumber":8,"author":{"gitId":"-"},"content":"public class Duke {"},{"lineNumber":9,"author":{"gitId":"ong6"},"content":""},{"lineNumber":10,"author":{"gitId":"ong6"},"content":"    private Ui ui;"},{"lineNumber":11,"author":{"gitId":"ong6"},"content":"    private Storage storage;"},{"lineNumber":12,"author":{"gitId":"ong6"},"content":"    private TaskList tasks;"},{"lineNumber":13,"author":{"gitId":"ong6"},"content":""},{"lineNumber":14,"author":{"gitId":"ong6"},"content":"    /**"},{"lineNumber":15,"author":{"gitId":"ong6"},"content":"     * Initialization of the Storage, TaskList and Ui."},{"lineNumber":16,"author":{"gitId":"ong6"},"content":"     * @param filePath The file path for storage of data."},{"lineNumber":17,"author":{"gitId":"ong6"},"content":"     */"},{"lineNumber":18,"author":{"gitId":"ong6"},"content":"    public Duke(String filePath) {"},{"lineNumber":19,"author":{"gitId":"ong6"},"content":"        try {"},{"lineNumber":20,"author":{"gitId":"ong6"},"content":"            this.storage \u003d new Storage(filePath);"},{"lineNumber":21,"author":{"gitId":"ong6"},"content":"            this.tasks \u003d new TaskList(storage.load());"},{"lineNumber":22,"author":{"gitId":"ong6"},"content":"        } catch (Exception e) {"},{"lineNumber":23,"author":{"gitId":"ong6"},"content":"            this.tasks \u003d new TaskList();"},{"lineNumber":24,"author":{"gitId":"ong6"},"content":"        }"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":26,"author":{"gitId":"ong6"},"content":""},{"lineNumber":27,"author":{"gitId":"ong6"},"content":"    /**"},{"lineNumber":28,"author":{"gitId":"ong6"},"content":"     * Starts the program to handle user interaction."},{"lineNumber":29,"author":{"gitId":"ong6"},"content":"     */"},{"lineNumber":30,"author":{"gitId":"ong6"},"content":"    public void run() {"},{"lineNumber":31,"author":{"gitId":"ong6"},"content":"        Scanner sc \u003d new Scanner(System.in);"},{"lineNumber":32,"author":{"gitId":"ong6"},"content":"        Parser p \u003d new Parser(storage, tasks);"},{"lineNumber":33,"author":{"gitId":"ong6"},"content":"        while (sc.hasNextLine()) {"},{"lineNumber":34,"author":{"gitId":"ong6"},"content":"            String input \u003d sc.nextLine();"},{"lineNumber":35,"author":{"gitId":"ong6"},"content":"            System.out.println(p.response(input));"},{"lineNumber":36,"author":{"gitId":"ong6"},"content":"            if (input.equals(\"bye\")) {"},{"lineNumber":37,"author":{"gitId":"ong6"},"content":"                break;"},{"lineNumber":38,"author":{"gitId":"ong6"},"content":"            }"},{"lineNumber":39,"author":{"gitId":"ong6"},"content":"        }"},{"lineNumber":40,"author":{"gitId":"ong6"},"content":"        sc.close();"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":42,"author":{"gitId":"ong6"},"content":""},{"lineNumber":43,"author":{"gitId":"ong6"},"content":"    /**"},{"lineNumber":44,"author":{"gitId":"ong6"},"content":"     * Starts the program."},{"lineNumber":45,"author":{"gitId":"ong6"},"content":"     */"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    public static void main(String[] args) {"},{"lineNumber":47,"author":{"gitId":"ong6"},"content":"        new Duke(\"duke.txt\").run();"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":49,"author":{"gitId":"ong6"},"content":""},{"lineNumber":50,"author":{"gitId":"-"},"content":"}"}],"authorContributionMap":{"ong6":44,"-":6}},{"path":"src/main/java/Launcher.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ong6"},"content":"import javafx.application.Application;"},{"lineNumber":2,"author":{"gitId":"ong6"},"content":"import gui.DukeUi;"},{"lineNumber":3,"author":{"gitId":"ong6"},"content":""},{"lineNumber":4,"author":{"gitId":"ong6"},"content":"/**"},{"lineNumber":5,"author":{"gitId":"ong6"},"content":" * A launcher class to workaround classpath issues."},{"lineNumber":6,"author":{"gitId":"ong6"},"content":" */"},{"lineNumber":7,"author":{"gitId":"ong6"},"content":"public class Launcher {"},{"lineNumber":8,"author":{"gitId":"ong6"},"content":"    public static void main(String[] args) {"},{"lineNumber":9,"author":{"gitId":"ong6"},"content":"        Application.launch(DukeUi.class, args);"},{"lineNumber":10,"author":{"gitId":"ong6"},"content":"    }"},{"lineNumber":11,"author":{"gitId":"ong6"},"content":"}"}],"authorContributionMap":{"ong6":11}},{"path":"src/main/java/duke/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ong6"},"content":"package duke;"},{"lineNumber":2,"author":{"gitId":"ong6"},"content":""},{"lineNumber":3,"author":{"gitId":"ong6"},"content":"public class Deadline extends Task {"},{"lineNumber":4,"author":{"gitId":"ong6"},"content":""},{"lineNumber":5,"author":{"gitId":"ong6"},"content":"    public Deadline(String input) {"},{"lineNumber":6,"author":{"gitId":"ong6"},"content":"        super(\"D\", input);"},{"lineNumber":7,"author":{"gitId":"ong6"},"content":"    }"},{"lineNumber":8,"author":{"gitId":"ong6"},"content":""},{"lineNumber":9,"author":{"gitId":"ong6"},"content":"    public Deadline(String[] arr) {"},{"lineNumber":10,"author":{"gitId":"ong6"},"content":"        super(\"D\", arr);"},{"lineNumber":11,"author":{"gitId":"ong6"},"content":"    }"},{"lineNumber":12,"author":{"gitId":"ong6"},"content":""},{"lineNumber":13,"author":{"gitId":"ong6"},"content":"    @Override"},{"lineNumber":14,"author":{"gitId":"ong6"},"content":"    public String toString() {"},{"lineNumber":15,"author":{"gitId":"ong6"},"content":"        if (this.getDate().equals(\" \")) {"},{"lineNumber":16,"author":{"gitId":"ong6"},"content":"            return super.toString();"},{"lineNumber":17,"author":{"gitId":"ong6"},"content":"        } else {"},{"lineNumber":18,"author":{"gitId":"ong6"},"content":"            return String.format(\"%s (by: %s)\", super.toString(), this.getDate());"},{"lineNumber":19,"author":{"gitId":"ong6"},"content":"        }"},{"lineNumber":20,"author":{"gitId":"ong6"},"content":"    }"},{"lineNumber":21,"author":{"gitId":"ong6"},"content":""},{"lineNumber":22,"author":{"gitId":"ong6"},"content":"}"}],"authorContributionMap":{"ong6":22}},{"path":"src/main/java/duke/DukeGeneralException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ong6"},"content":"package duke;"},{"lineNumber":2,"author":{"gitId":"ong6"},"content":""},{"lineNumber":3,"author":{"gitId":"ong6"},"content":"public class DukeGeneralException extends Exception {"},{"lineNumber":4,"author":{"gitId":"ong6"},"content":"    public DukeGeneralException(String msg) {"},{"lineNumber":5,"author":{"gitId":"ong6"},"content":"        super(msg);"},{"lineNumber":6,"author":{"gitId":"ong6"},"content":"    }"},{"lineNumber":7,"author":{"gitId":"ong6"},"content":"}"}],"authorContributionMap":{"ong6":7}},{"path":"src/main/java/duke/DukeTaskException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ong6"},"content":"package duke;"},{"lineNumber":2,"author":{"gitId":"ong6"},"content":""},{"lineNumber":3,"author":{"gitId":"ong6"},"content":"public class DukeTaskException extends Exception {"},{"lineNumber":4,"author":{"gitId":"ong6"},"content":"    public DukeTaskException(String msg) {"},{"lineNumber":5,"author":{"gitId":"ong6"},"content":"        super(msg);"},{"lineNumber":6,"author":{"gitId":"ong6"},"content":"    }"},{"lineNumber":7,"author":{"gitId":"ong6"},"content":"}"}],"authorContributionMap":{"ong6":7}},{"path":"src/main/java/duke/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ong6"},"content":"package duke;"},{"lineNumber":2,"author":{"gitId":"ong6"},"content":""},{"lineNumber":3,"author":{"gitId":"ong6"},"content":"public class Event extends Task {"},{"lineNumber":4,"author":{"gitId":"ong6"},"content":""},{"lineNumber":5,"author":{"gitId":"ong6"},"content":"    public Event(String input) {"},{"lineNumber":6,"author":{"gitId":"ong6"},"content":"        super(\"E\", input);"},{"lineNumber":7,"author":{"gitId":"ong6"},"content":"    }"},{"lineNumber":8,"author":{"gitId":"ong6"},"content":""},{"lineNumber":9,"author":{"gitId":"ong6"},"content":"    public Event(String[] array) {"},{"lineNumber":10,"author":{"gitId":"ong6"},"content":"        super(\"E\", array);"},{"lineNumber":11,"author":{"gitId":"ong6"},"content":"    }"},{"lineNumber":12,"author":{"gitId":"ong6"},"content":""},{"lineNumber":13,"author":{"gitId":"ong6"},"content":"    @Override"},{"lineNumber":14,"author":{"gitId":"ong6"},"content":"    public String toString() {"},{"lineNumber":15,"author":{"gitId":"ong6"},"content":"        if (this.getDate().equals(\" \")) {"},{"lineNumber":16,"author":{"gitId":"ong6"},"content":"            return super.toString();"},{"lineNumber":17,"author":{"gitId":"ong6"},"content":"        } else {"},{"lineNumber":18,"author":{"gitId":"ong6"},"content":"            return String.format(\"%s (at: %s)\", super.toString(), this.getDate());"},{"lineNumber":19,"author":{"gitId":"ong6"},"content":"        }"},{"lineNumber":20,"author":{"gitId":"ong6"},"content":"    }"},{"lineNumber":21,"author":{"gitId":"ong6"},"content":""},{"lineNumber":22,"author":{"gitId":"ong6"},"content":"}"}],"authorContributionMap":{"ong6":22}},{"path":"src/main/java/duke/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ong6"},"content":"package duke;"},{"lineNumber":2,"author":{"gitId":"ong6"},"content":""},{"lineNumber":3,"author":{"gitId":"ong6"},"content":"import java.io.IOException;"},{"lineNumber":4,"author":{"gitId":"ong6"},"content":""},{"lineNumber":5,"author":{"gitId":"ong6"},"content":"/**"},{"lineNumber":6,"author":{"gitId":"ong6"},"content":" * Utility class to parse user input."},{"lineNumber":7,"author":{"gitId":"ong6"},"content":" */"},{"lineNumber":8,"author":{"gitId":"ong6"},"content":"public class Parser {"},{"lineNumber":9,"author":{"gitId":"ong6"},"content":""},{"lineNumber":10,"author":{"gitId":"ong6"},"content":"    private Storage storage;"},{"lineNumber":11,"author":{"gitId":"ong6"},"content":"    private TaskList tasks;"},{"lineNumber":12,"author":{"gitId":"ong6"},"content":""},{"lineNumber":13,"author":{"gitId":"ong6"},"content":"    /**"},{"lineNumber":14,"author":{"gitId":"ong6"},"content":"     * Parser contains the Storage, Tasks, and return duke.Ui classes and acts as an"},{"lineNumber":15,"author":{"gitId":"ong6"},"content":"     * intermediary for them to interact."},{"lineNumber":16,"author":{"gitId":"ong6"},"content":"     * @param storage Storage class"},{"lineNumber":17,"author":{"gitId":"ong6"},"content":"     * @param tasks   TaskList class"},{"lineNumber":18,"author":{"gitId":"ong6"},"content":"     */"},{"lineNumber":19,"author":{"gitId":"ong6"},"content":"    public Parser(Storage storage, TaskList tasks) {"},{"lineNumber":20,"author":{"gitId":"ong6"},"content":"        this.storage \u003d storage;"},{"lineNumber":21,"author":{"gitId":"ong6"},"content":"        this.tasks \u003d tasks;"},{"lineNumber":22,"author":{"gitId":"ong6"},"content":"    }"},{"lineNumber":23,"author":{"gitId":"ong6"},"content":""},{"lineNumber":24,"author":{"gitId":"ong6"},"content":"    /**"},{"lineNumber":25,"author":{"gitId":"ong6"},"content":"     * Instantiates the scanner and parses inputs."},{"lineNumber":26,"author":{"gitId":"ong6"},"content":"     */"},{"lineNumber":27,"author":{"gitId":"ong6"},"content":"    public String response(String input) {"},{"lineNumber":28,"author":{"gitId":"ong6"},"content":"        try {"},{"lineNumber":29,"author":{"gitId":"ong6"},"content":"            return identifyInput(input);"},{"lineNumber":30,"author":{"gitId":"ong6"},"content":"        } catch (DukeTaskException e1) {"},{"lineNumber":31,"author":{"gitId":"ong6"},"content":"            return duke.Ui.showDukeTaskError();"},{"lineNumber":32,"author":{"gitId":"ong6"},"content":"        } catch (IndexOutOfBoundsException e) {"},{"lineNumber":33,"author":{"gitId":"ong6"},"content":"            return duke.Ui.showDukeEmptyListError();"},{"lineNumber":34,"author":{"gitId":"ong6"},"content":"        } catch (Exception e) {"},{"lineNumber":35,"author":{"gitId":"ong6"},"content":"            return duke.Ui.showDukeGeneralError();"},{"lineNumber":36,"author":{"gitId":"ong6"},"content":"        }"},{"lineNumber":37,"author":{"gitId":"ong6"},"content":"    }"},{"lineNumber":38,"author":{"gitId":"ong6"},"content":""},{"lineNumber":39,"author":{"gitId":"ong6"},"content":"    private String identifyInput(String input) throws DukeGeneralException, DukeTaskException {"},{"lineNumber":40,"author":{"gitId":"ong6"},"content":"        Task temp;"},{"lineNumber":41,"author":{"gitId":"ong6"},"content":"        String output;"},{"lineNumber":42,"author":{"gitId":"ong6"},"content":"        switch (getCommand(input)) {"},{"lineNumber":43,"author":{"gitId":"ong6"},"content":"        case \"bye\":"},{"lineNumber":44,"author":{"gitId":"ong6"},"content":"            try {"},{"lineNumber":45,"author":{"gitId":"ong6"},"content":"                storage.save(tasks);"},{"lineNumber":46,"author":{"gitId":"ong6"},"content":"            } catch (IOException e) {"},{"lineNumber":47,"author":{"gitId":"ong6"},"content":"                return duke.Ui.showLoadingError();"},{"lineNumber":48,"author":{"gitId":"ong6"},"content":"            }"},{"lineNumber":49,"author":{"gitId":"ong6"},"content":"            output \u003d duke.Ui.showBye();"},{"lineNumber":50,"author":{"gitId":"ong6"},"content":"            break;"},{"lineNumber":51,"author":{"gitId":"ong6"},"content":"        case \"list\":"},{"lineNumber":52,"author":{"gitId":"ong6"},"content":"            if (tasks.isEmpty()) {"},{"lineNumber":53,"author":{"gitId":"ong6"},"content":"                return duke.Ui.showDukeEmptyListError();"},{"lineNumber":54,"author":{"gitId":"ong6"},"content":"            }"},{"lineNumber":55,"author":{"gitId":"ong6"},"content":"            output \u003d duke.Ui.showList(tasks);"},{"lineNumber":56,"author":{"gitId":"ong6"},"content":"            break;"},{"lineNumber":57,"author":{"gitId":"ong6"},"content":"        case \"find\":"},{"lineNumber":58,"author":{"gitId":"ong6"},"content":"            output \u003d duke.Ui.showFind(tasks, getMessage(input).trim());"},{"lineNumber":59,"author":{"gitId":"ong6"},"content":"            break;"},{"lineNumber":60,"author":{"gitId":"ong6"},"content":"        case \"done\":"},{"lineNumber":61,"author":{"gitId":"ong6"},"content":"            tasks.setDone(duke.Ui.getIndex(input));"},{"lineNumber":62,"author":{"gitId":"ong6"},"content":"            output \u003d duke.Ui.showDone(input, tasks);"},{"lineNumber":63,"author":{"gitId":"ong6"},"content":"            break;"},{"lineNumber":64,"author":{"gitId":"ong6"},"content":"        case \"todo\":"},{"lineNumber":65,"author":{"gitId":"ong6"},"content":"            temp \u003d new ToDo(getMessage(input));"},{"lineNumber":66,"author":{"gitId":"ong6"},"content":"            output \u003d duke.Ui.showTaskAdded(tasks, temp);"},{"lineNumber":67,"author":{"gitId":"ong6"},"content":"            tasks.add(temp);"},{"lineNumber":68,"author":{"gitId":"ong6"},"content":"            break;"},{"lineNumber":69,"author":{"gitId":"ong6"},"content":"        case \"deadline\":"},{"lineNumber":70,"author":{"gitId":"ong6"},"content":"            temp \u003d new Deadline(getMessage(input));"},{"lineNumber":71,"author":{"gitId":"ong6"},"content":"            output \u003d duke.Ui.showTaskAdded(tasks, temp);"},{"lineNumber":72,"author":{"gitId":"ong6"},"content":"            tasks.add(temp);"},{"lineNumber":73,"author":{"gitId":"ong6"},"content":"            break;"},{"lineNumber":74,"author":{"gitId":"ong6"},"content":"        case \"event\":"},{"lineNumber":75,"author":{"gitId":"ong6"},"content":"            temp \u003d new Event(getMessage(input));"},{"lineNumber":76,"author":{"gitId":"ong6"},"content":"            output \u003d duke.Ui.showTaskAdded(tasks, temp);"},{"lineNumber":77,"author":{"gitId":"ong6"},"content":"            tasks.add(temp);"},{"lineNumber":78,"author":{"gitId":"ong6"},"content":"            break;"},{"lineNumber":79,"author":{"gitId":"ong6"},"content":"        case \"delete\":"},{"lineNumber":80,"author":{"gitId":"ong6"},"content":"            output \u003d duke.Ui.showDeleteTask(input, tasks);"},{"lineNumber":81,"author":{"gitId":"ong6"},"content":"            tasks.remove(duke.Ui.getIndex(input));"},{"lineNumber":82,"author":{"gitId":"ong6"},"content":"            break;"},{"lineNumber":83,"author":{"gitId":"ong6"},"content":"        case \"\":"},{"lineNumber":84,"author":{"gitId":"ong6"},"content":"        case \" \":"},{"lineNumber":85,"author":{"gitId":"ong6"},"content":"            output \u003d duke.Ui.showEmptyError();"},{"lineNumber":86,"author":{"gitId":"ong6"},"content":"            break;"},{"lineNumber":87,"author":{"gitId":"ong6"},"content":"        default:"},{"lineNumber":88,"author":{"gitId":"ong6"},"content":"            throw new DukeGeneralException(\"I\u0027m sorry, but I don\u0027t know what that means\");"},{"lineNumber":89,"author":{"gitId":"ong6"},"content":"        }"},{"lineNumber":90,"author":{"gitId":"ong6"},"content":"        return output;"},{"lineNumber":91,"author":{"gitId":"ong6"},"content":"    }"},{"lineNumber":92,"author":{"gitId":"ong6"},"content":""},{"lineNumber":93,"author":{"gitId":"ong6"},"content":"    private String getCommand(String input) throws DukeTaskException {"},{"lineNumber":94,"author":{"gitId":"ong6"},"content":"        try {"},{"lineNumber":95,"author":{"gitId":"ong6"},"content":"            String[] arr \u003d input.split(\" \", 2);"},{"lineNumber":96,"author":{"gitId":"ong6"},"content":"            return arr[0].toLowerCase();"},{"lineNumber":97,"author":{"gitId":"ong6"},"content":"        } catch (Exception e) {"},{"lineNumber":98,"author":{"gitId":"ong6"},"content":"            throw new DukeTaskException(\"\");"},{"lineNumber":99,"author":{"gitId":"ong6"},"content":"        }"},{"lineNumber":100,"author":{"gitId":"ong6"},"content":"    }"},{"lineNumber":101,"author":{"gitId":"ong6"},"content":""},{"lineNumber":102,"author":{"gitId":"ong6"},"content":"    private String getMessage(String input) throws DukeTaskException {"},{"lineNumber":103,"author":{"gitId":"ong6"},"content":"        try {"},{"lineNumber":104,"author":{"gitId":"ong6"},"content":"            String[] arr \u003d input.split(\" \", 2);"},{"lineNumber":105,"author":{"gitId":"ong6"},"content":"            return arr[1];"},{"lineNumber":106,"author":{"gitId":"ong6"},"content":"        } catch (Exception e) {"},{"lineNumber":107,"author":{"gitId":"ong6"},"content":"            throw new DukeTaskException(\"\");"},{"lineNumber":108,"author":{"gitId":"ong6"},"content":"        }"},{"lineNumber":109,"author":{"gitId":"ong6"},"content":"    }"},{"lineNumber":110,"author":{"gitId":"ong6"},"content":""},{"lineNumber":111,"author":{"gitId":"ong6"},"content":"}"}],"authorContributionMap":{"ong6":111}},{"path":"src/main/java/duke/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ong6"},"content":"package duke;"},{"lineNumber":2,"author":{"gitId":"ong6"},"content":""},{"lineNumber":3,"author":{"gitId":"ong6"},"content":"import java.io.File;"},{"lineNumber":4,"author":{"gitId":"ong6"},"content":"import java.io.FileNotFoundException;"},{"lineNumber":5,"author":{"gitId":"ong6"},"content":"import java.io.FileWriter;"},{"lineNumber":6,"author":{"gitId":"ong6"},"content":"import java.io.IOException;"},{"lineNumber":7,"author":{"gitId":"ong6"},"content":"import java.util.ArrayList;"},{"lineNumber":8,"author":{"gitId":"ong6"},"content":"import java.util.List;"},{"lineNumber":9,"author":{"gitId":"ong6"},"content":"import java.util.Scanner;"},{"lineNumber":10,"author":{"gitId":"ong6"},"content":""},{"lineNumber":11,"author":{"gitId":"ong6"},"content":"/**"},{"lineNumber":12,"author":{"gitId":"ong6"},"content":" * Utility class to read and write data from a .txt file."},{"lineNumber":13,"author":{"gitId":"ong6"},"content":" */"},{"lineNumber":14,"author":{"gitId":"ong6"},"content":"public class Storage {"},{"lineNumber":15,"author":{"gitId":"ong6"},"content":""},{"lineNumber":16,"author":{"gitId":"ong6"},"content":"    private String filePath;"},{"lineNumber":17,"author":{"gitId":"ong6"},"content":""},{"lineNumber":18,"author":{"gitId":"ong6"},"content":"    public Storage(String filePath) throws FileNotFoundException {"},{"lineNumber":19,"author":{"gitId":"ong6"},"content":"        this.filePath \u003d filePath;"},{"lineNumber":20,"author":{"gitId":"ong6"},"content":"    }"},{"lineNumber":21,"author":{"gitId":"ong6"},"content":""},{"lineNumber":22,"author":{"gitId":"ong6"},"content":"    /**"},{"lineNumber":23,"author":{"gitId":"ong6"},"content":"     * Saves the TaskList into a file."},{"lineNumber":24,"author":{"gitId":"ong6"},"content":"     * @param taskList The TaskList to be saved."},{"lineNumber":25,"author":{"gitId":"ong6"},"content":"     * @throws IOException If file does not exist."},{"lineNumber":26,"author":{"gitId":"ong6"},"content":"     */"},{"lineNumber":27,"author":{"gitId":"ong6"},"content":"    public void save(TaskList taskList) throws IOException {"},{"lineNumber":28,"author":{"gitId":"ong6"},"content":"        FileWriter fw \u003d new FileWriter(filePath);"},{"lineNumber":29,"author":{"gitId":"ong6"},"content":"        for (Task t : taskList) {"},{"lineNumber":30,"author":{"gitId":"ong6"},"content":"            fw.write(t.storeString() + \"\\n\");"},{"lineNumber":31,"author":{"gitId":"ong6"},"content":"        }"},{"lineNumber":32,"author":{"gitId":"ong6"},"content":"        fw.close();"},{"lineNumber":33,"author":{"gitId":"ong6"},"content":"    }"},{"lineNumber":34,"author":{"gitId":"ong6"},"content":""},{"lineNumber":35,"author":{"gitId":"ong6"},"content":"    /**"},{"lineNumber":36,"author":{"gitId":"ong6"},"content":"     * Loads Tasks from a file and stores them in a List."},{"lineNumber":37,"author":{"gitId":"ong6"},"content":"     * @return A List containing all the tasks."},{"lineNumber":38,"author":{"gitId":"ong6"},"content":"     * @throws FileNotFoundException If the file does not exist."},{"lineNumber":39,"author":{"gitId":"ong6"},"content":"     */"},{"lineNumber":40,"author":{"gitId":"ong6"},"content":"    public List\u003cTask\u003e load() throws FileNotFoundException {"},{"lineNumber":41,"author":{"gitId":"ong6"},"content":"        File f \u003d new File(filePath);"},{"lineNumber":42,"author":{"gitId":"ong6"},"content":"        Scanner s \u003d new Scanner(f);"},{"lineNumber":43,"author":{"gitId":"ong6"},"content":"        List\u003cTask\u003e tempTasks \u003d new ArrayList\u003c\u003e();"},{"lineNumber":44,"author":{"gitId":"ong6"},"content":"        while (s.hasNextLine()) {"},{"lineNumber":45,"author":{"gitId":"ong6"},"content":"            String[] strArr \u003d s.nextLine().split(\" \\\\| \");"},{"lineNumber":46,"author":{"gitId":"ong6"},"content":"            String type \u003d strArr[0];"},{"lineNumber":47,"author":{"gitId":"ong6"},"content":"            switch (type) {"},{"lineNumber":48,"author":{"gitId":"ong6"},"content":"            case \"T\":"},{"lineNumber":49,"author":{"gitId":"ong6"},"content":"                tempTasks.add(new ToDo(strArr));"},{"lineNumber":50,"author":{"gitId":"ong6"},"content":"                break;"},{"lineNumber":51,"author":{"gitId":"ong6"},"content":"            case \"D\":"},{"lineNumber":52,"author":{"gitId":"ong6"},"content":"                tempTasks.add(new Deadline(strArr));"},{"lineNumber":53,"author":{"gitId":"ong6"},"content":"                break;"},{"lineNumber":54,"author":{"gitId":"ong6"},"content":"            case \"E\":"},{"lineNumber":55,"author":{"gitId":"ong6"},"content":"                tempTasks.add(new Event(strArr));"},{"lineNumber":56,"author":{"gitId":"ong6"},"content":"                break;"},{"lineNumber":57,"author":{"gitId":"ong6"},"content":"            default:"},{"lineNumber":58,"author":{"gitId":"ong6"},"content":"                System.out.println(\"Error\");"},{"lineNumber":59,"author":{"gitId":"ong6"},"content":"                break;"},{"lineNumber":60,"author":{"gitId":"ong6"},"content":"            }"},{"lineNumber":61,"author":{"gitId":"ong6"},"content":"        }"},{"lineNumber":62,"author":{"gitId":"ong6"},"content":"        s.close();"},{"lineNumber":63,"author":{"gitId":"ong6"},"content":"        return tempTasks;"},{"lineNumber":64,"author":{"gitId":"ong6"},"content":"    }"},{"lineNumber":65,"author":{"gitId":"ong6"},"content":""},{"lineNumber":66,"author":{"gitId":"ong6"},"content":"}"}],"authorContributionMap":{"ong6":66}},{"path":"src/main/java/duke/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ong6"},"content":"package duke;"},{"lineNumber":2,"author":{"gitId":"ong6"},"content":""},{"lineNumber":3,"author":{"gitId":"ong6"},"content":"import java.time.LocalDate;"},{"lineNumber":4,"author":{"gitId":"ong6"},"content":"import java.time.format.DateTimeFormatter;"},{"lineNumber":5,"author":{"gitId":"ong6"},"content":"import java.util.regex.Matcher;"},{"lineNumber":6,"author":{"gitId":"ong6"},"content":"import java.util.regex.Pattern;"},{"lineNumber":7,"author":{"gitId":"ong6"},"content":""},{"lineNumber":8,"author":{"gitId":"ong6"},"content":"public class Task {"},{"lineNumber":9,"author":{"gitId":"ong6"},"content":"    private String identity;"},{"lineNumber":10,"author":{"gitId":"ong6"},"content":"    private String name;"},{"lineNumber":11,"author":{"gitId":"ong6"},"content":"    private boolean isCompleted;"},{"lineNumber":12,"author":{"gitId":"ong6"},"content":"    private String date;"},{"lineNumber":13,"author":{"gitId":"ong6"},"content":""},{"lineNumber":14,"author":{"gitId":"ong6"},"content":"    protected Task(String identity, String name) {"},{"lineNumber":15,"author":{"gitId":"ong6"},"content":"        this.identity \u003d identity;"},{"lineNumber":16,"author":{"gitId":"ong6"},"content":"        this.isCompleted \u003d false;"},{"lineNumber":17,"author":{"gitId":"ong6"},"content":"        if (name.contains(\"/\")) {"},{"lineNumber":18,"author":{"gitId":"ong6"},"content":"            String[] nameArr \u003d name.split(\"/...\");"},{"lineNumber":19,"author":{"gitId":"ong6"},"content":"            this.name \u003d nameArr[0];"},{"lineNumber":20,"author":{"gitId":"ong6"},"content":"            this.date \u003d formatDate(nameArr[1]);"},{"lineNumber":21,"author":{"gitId":"ong6"},"content":"        } else {"},{"lineNumber":22,"author":{"gitId":"ong6"},"content":"            this.name \u003d name;"},{"lineNumber":23,"author":{"gitId":"ong6"},"content":"            this.date \u003d \" \";"},{"lineNumber":24,"author":{"gitId":"ong6"},"content":"        }"},{"lineNumber":25,"author":{"gitId":"ong6"},"content":"    }"},{"lineNumber":26,"author":{"gitId":"ong6"},"content":""},{"lineNumber":27,"author":{"gitId":"ong6"},"content":"    protected Task(String identity, String[] strArr) {"},{"lineNumber":28,"author":{"gitId":"ong6"},"content":"        this.identity \u003d identity;"},{"lineNumber":29,"author":{"gitId":"ong6"},"content":"        this.isCompleted \u003d Integer.parseInt(strArr[1]) \u003d\u003d 1 ? true : false;"},{"lineNumber":30,"author":{"gitId":"ong6"},"content":"        this.name \u003d strArr[2];"},{"lineNumber":31,"author":{"gitId":"ong6"},"content":"        this.date \u003d strArr[3];"},{"lineNumber":32,"author":{"gitId":"ong6"},"content":"    }"},{"lineNumber":33,"author":{"gitId":"ong6"},"content":""},{"lineNumber":34,"author":{"gitId":"ong6"},"content":"    /**"},{"lineNumber":35,"author":{"gitId":"ong6"},"content":"     * Looks for inputs with the format yyyy-mm-dd and changes them to the MMM dd"},{"lineNumber":36,"author":{"gitId":"ong6"},"content":"     * yyyy format."},{"lineNumber":37,"author":{"gitId":"ong6"},"content":"     * @param date The date to be changed."},{"lineNumber":38,"author":{"gitId":"ong6"},"content":"     * @return The newly formatted date."},{"lineNumber":39,"author":{"gitId":"ong6"},"content":"     */"},{"lineNumber":40,"author":{"gitId":"ong6"},"content":"    protected String formatDate(String date) {"},{"lineNumber":41,"author":{"gitId":"ong6"},"content":"        //"},{"lineNumber":42,"author":{"gitId":"ong6"},"content":"        String regex \u003d \"(19|20)\\\\d\\\\d[- /.](0[1-9]|1[012])[- /.](0[1-9]|[12][0-9]|3[01])\";"},{"lineNumber":43,"author":{"gitId":"ong6"},"content":"        Matcher m \u003d Pattern.compile(regex).matcher(date);"},{"lineNumber":44,"author":{"gitId":"ong6"},"content":"        if (m.find()) {"},{"lineNumber":45,"author":{"gitId":"ong6"},"content":"            LocalDate tempDate \u003d LocalDate.parse(m.group(0));"},{"lineNumber":46,"author":{"gitId":"ong6"},"content":"            String dateFormat \u003d tempDate.format(DateTimeFormatter.ofPattern(\"MMM dd yyyy\"));"},{"lineNumber":47,"author":{"gitId":"ong6"},"content":"            return date.replaceAll(regex, dateFormat);"},{"lineNumber":48,"author":{"gitId":"ong6"},"content":"        } else {"},{"lineNumber":49,"author":{"gitId":"ong6"},"content":"            return date;"},{"lineNumber":50,"author":{"gitId":"ong6"},"content":"        }"},{"lineNumber":51,"author":{"gitId":"ong6"},"content":"    }"},{"lineNumber":52,"author":{"gitId":"ong6"},"content":""},{"lineNumber":53,"author":{"gitId":"ong6"},"content":"    /**"},{"lineNumber":54,"author":{"gitId":"ong6"},"content":"     * To Print out the Task in a nice format."},{"lineNumber":55,"author":{"gitId":"ong6"},"content":"     */"},{"lineNumber":56,"author":{"gitId":"ong6"},"content":"    public String toString() {"},{"lineNumber":57,"author":{"gitId":"ong6"},"content":"        if (!isCompleted()) {"},{"lineNumber":58,"author":{"gitId":"ong6"},"content":"            return String.format(\"[%s][ ] %s\", this.getIdentity(), this.getName());"},{"lineNumber":59,"author":{"gitId":"ong6"},"content":"        } else {"},{"lineNumber":60,"author":{"gitId":"ong6"},"content":"            return String.format(\"[%s][X] %s\", this.getIdentity(), this.getName());"},{"lineNumber":61,"author":{"gitId":"ong6"},"content":"        }"},{"lineNumber":62,"author":{"gitId":"ong6"},"content":"    }"},{"lineNumber":63,"author":{"gitId":"ong6"},"content":""},{"lineNumber":64,"author":{"gitId":"ong6"},"content":"    /**"},{"lineNumber":65,"author":{"gitId":"ong6"},"content":"     * To Print out the Task for use in the Storage file."},{"lineNumber":66,"author":{"gitId":"ong6"},"content":"     */"},{"lineNumber":67,"author":{"gitId":"ong6"},"content":"    public String storeString() {"},{"lineNumber":68,"author":{"gitId":"ong6"},"content":"        return String.format(\"%s | %d | %s | %s\", this.getIdentity(), this.isCompleted() ? 1 : 0, this.getName(),"},{"lineNumber":69,"author":{"gitId":"ong6"},"content":"                this.getDate());"},{"lineNumber":70,"author":{"gitId":"ong6"},"content":"    }"},{"lineNumber":71,"author":{"gitId":"ong6"},"content":""},{"lineNumber":72,"author":{"gitId":"ong6"},"content":"    public boolean isCompleted() {"},{"lineNumber":73,"author":{"gitId":"ong6"},"content":"        return isCompleted;"},{"lineNumber":74,"author":{"gitId":"ong6"},"content":"    }"},{"lineNumber":75,"author":{"gitId":"ong6"},"content":""},{"lineNumber":76,"author":{"gitId":"ong6"},"content":"    public String getName() {"},{"lineNumber":77,"author":{"gitId":"ong6"},"content":"        return name;"},{"lineNumber":78,"author":{"gitId":"ong6"},"content":"    }"},{"lineNumber":79,"author":{"gitId":"ong6"},"content":""},{"lineNumber":80,"author":{"gitId":"ong6"},"content":"    public String getIdentity() {"},{"lineNumber":81,"author":{"gitId":"ong6"},"content":"        return identity;"},{"lineNumber":82,"author":{"gitId":"ong6"},"content":"    }"},{"lineNumber":83,"author":{"gitId":"ong6"},"content":""},{"lineNumber":84,"author":{"gitId":"ong6"},"content":"    public void setCompleted() {"},{"lineNumber":85,"author":{"gitId":"ong6"},"content":"        this.isCompleted \u003d true;"},{"lineNumber":86,"author":{"gitId":"ong6"},"content":"    }"},{"lineNumber":87,"author":{"gitId":"ong6"},"content":""},{"lineNumber":88,"author":{"gitId":"ong6"},"content":"    public String getDate() {"},{"lineNumber":89,"author":{"gitId":"ong6"},"content":"        return date;"},{"lineNumber":90,"author":{"gitId":"ong6"},"content":"    }"},{"lineNumber":91,"author":{"gitId":"ong6"},"content":""},{"lineNumber":92,"author":{"gitId":"ong6"},"content":"    public void setDate(String date) {"},{"lineNumber":93,"author":{"gitId":"ong6"},"content":"        this.date \u003d date;"},{"lineNumber":94,"author":{"gitId":"ong6"},"content":"    }"},{"lineNumber":95,"author":{"gitId":"ong6"},"content":""},{"lineNumber":96,"author":{"gitId":"ong6"},"content":"    @Override"},{"lineNumber":97,"author":{"gitId":"ong6"},"content":"    public boolean equals(Object obj) {"},{"lineNumber":98,"author":{"gitId":"ong6"},"content":"        if (this \u003d\u003d obj) {"},{"lineNumber":99,"author":{"gitId":"ong6"},"content":"            return true;"},{"lineNumber":100,"author":{"gitId":"ong6"},"content":"        }"},{"lineNumber":101,"author":{"gitId":"ong6"},"content":""},{"lineNumber":102,"author":{"gitId":"ong6"},"content":"        if (this.name.equals(((Task) obj).getName())) {"},{"lineNumber":103,"author":{"gitId":"ong6"},"content":"            return true;"},{"lineNumber":104,"author":{"gitId":"ong6"},"content":"        }"},{"lineNumber":105,"author":{"gitId":"ong6"},"content":""},{"lineNumber":106,"author":{"gitId":"ong6"},"content":"        return super.equals(obj);"},{"lineNumber":107,"author":{"gitId":"ong6"},"content":"    }"},{"lineNumber":108,"author":{"gitId":"ong6"},"content":""},{"lineNumber":109,"author":{"gitId":"ong6"},"content":"}"}],"authorContributionMap":{"ong6":109}},{"path":"src/main/java/duke/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ong6"},"content":"package duke;"},{"lineNumber":2,"author":{"gitId":"ong6"},"content":""},{"lineNumber":3,"author":{"gitId":"ong6"},"content":"import java.util.ArrayList;"},{"lineNumber":4,"author":{"gitId":"ong6"},"content":"import java.util.List;"},{"lineNumber":5,"author":{"gitId":"ong6"},"content":""},{"lineNumber":6,"author":{"gitId":"ong6"},"content":"public class TaskList extends ArrayList\u003cTask\u003e {"},{"lineNumber":7,"author":{"gitId":"ong6"},"content":""},{"lineNumber":8,"author":{"gitId":"ong6"},"content":"    public TaskList() {"},{"lineNumber":9,"author":{"gitId":"ong6"},"content":"        super();"},{"lineNumber":10,"author":{"gitId":"ong6"},"content":"    }"},{"lineNumber":11,"author":{"gitId":"ong6"},"content":""},{"lineNumber":12,"author":{"gitId":"ong6"},"content":"    public TaskList(List\u003cTask\u003e lst) {"},{"lineNumber":13,"author":{"gitId":"ong6"},"content":"        super(lst);"},{"lineNumber":14,"author":{"gitId":"ong6"},"content":"    }"},{"lineNumber":15,"author":{"gitId":"ong6"},"content":""},{"lineNumber":16,"author":{"gitId":"ong6"},"content":"    public void setDone(int index) {"},{"lineNumber":17,"author":{"gitId":"ong6"},"content":"        this.get(index).setCompleted();"},{"lineNumber":18,"author":{"gitId":"ong6"},"content":"    }"},{"lineNumber":19,"author":{"gitId":"ong6"},"content":""},{"lineNumber":20,"author":{"gitId":"ong6"},"content":"}"}],"authorContributionMap":{"ong6":20}},{"path":"src/main/java/duke/ToDo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ong6"},"content":"package duke;"},{"lineNumber":2,"author":{"gitId":"ong6"},"content":""},{"lineNumber":3,"author":{"gitId":"ong6"},"content":"public class ToDo extends Task {"},{"lineNumber":4,"author":{"gitId":"ong6"},"content":""},{"lineNumber":5,"author":{"gitId":"ong6"},"content":"    public ToDo(String input) {"},{"lineNumber":6,"author":{"gitId":"ong6"},"content":"        super(\"T\", input);"},{"lineNumber":7,"author":{"gitId":"ong6"},"content":"    }"},{"lineNumber":8,"author":{"gitId":"ong6"},"content":""},{"lineNumber":9,"author":{"gitId":"ong6"},"content":"    public ToDo(String[] arr) {"},{"lineNumber":10,"author":{"gitId":"ong6"},"content":"        super(\"T\", arr);"},{"lineNumber":11,"author":{"gitId":"ong6"},"content":"    }"},{"lineNumber":12,"author":{"gitId":"ong6"},"content":""},{"lineNumber":13,"author":{"gitId":"ong6"},"content":"    @Override"},{"lineNumber":14,"author":{"gitId":"ong6"},"content":"    public String toString() {"},{"lineNumber":15,"author":{"gitId":"ong6"},"content":"        return super.toString();"},{"lineNumber":16,"author":{"gitId":"ong6"},"content":"    }"},{"lineNumber":17,"author":{"gitId":"ong6"},"content":"}"}],"authorContributionMap":{"ong6":17}},{"path":"src/main/java/duke/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ong6"},"content":"package duke;"},{"lineNumber":2,"author":{"gitId":"ong6"},"content":""},{"lineNumber":3,"author":{"gitId":"ong6"},"content":"import java.util.ArrayList;"},{"lineNumber":4,"author":{"gitId":"ong6"},"content":"import java.util.List;"},{"lineNumber":5,"author":{"gitId":"ong6"},"content":""},{"lineNumber":6,"author":{"gitId":"ong6"},"content":"public class Ui {"},{"lineNumber":7,"author":{"gitId":"ong6"},"content":""},{"lineNumber":8,"author":{"gitId":"ong6"},"content":"    private Ui() {"},{"lineNumber":9,"author":{"gitId":"ong6"},"content":"    }"},{"lineNumber":10,"author":{"gitId":"ong6"},"content":""},{"lineNumber":11,"author":{"gitId":"ong6"},"content":"    public static String showWelcome() {"},{"lineNumber":12,"author":{"gitId":"ong6"},"content":"        return textWrapper(\"Hello! I\u0027m Duke \\nWhat can I do for you?\");"},{"lineNumber":13,"author":{"gitId":"ong6"},"content":"    }"},{"lineNumber":14,"author":{"gitId":"ong6"},"content":""},{"lineNumber":15,"author":{"gitId":"ong6"},"content":"    public static String showBye() {"},{"lineNumber":16,"author":{"gitId":"ong6"},"content":"        return textWrapper(\"Bye. Hope to see you again soon!\\n\");"},{"lineNumber":17,"author":{"gitId":"ong6"},"content":"    }"},{"lineNumber":18,"author":{"gitId":"ong6"},"content":""},{"lineNumber":19,"author":{"gitId":"ong6"},"content":"    /**"},{"lineNumber":20,"author":{"gitId":"ong6"},"content":"     * Prints out the TaskList in a nice format."},{"lineNumber":21,"author":{"gitId":"ong6"},"content":"     * @param tasks the TaskList to be printed."},{"lineNumber":22,"author":{"gitId":"ong6"},"content":"     */"},{"lineNumber":23,"author":{"gitId":"ong6"},"content":"    public static String showList(TaskList tasks) {"},{"lineNumber":24,"author":{"gitId":"ong6"},"content":"        String out \u003d \"Here are the tasks in your list: \\n\";"},{"lineNumber":25,"author":{"gitId":"ong6"},"content":"        out +\u003d printList(tasks);"},{"lineNumber":26,"author":{"gitId":"ong6"},"content":"        return textWrapper(out);"},{"lineNumber":27,"author":{"gitId":"ong6"},"content":"    }"},{"lineNumber":28,"author":{"gitId":"ong6"},"content":""},{"lineNumber":29,"author":{"gitId":"ong6"},"content":"    /**"},{"lineNumber":30,"author":{"gitId":"ong6"},"content":"     * Searches the TaskList and prints out the items that matches the user"},{"lineNumber":31,"author":{"gitId":"ong6"},"content":"     * specifications."},{"lineNumber":32,"author":{"gitId":"ong6"},"content":"     * @param tasks  the TaskList to be searched."},{"lineNumber":33,"author":{"gitId":"ong6"},"content":"     * @param toFind the String that the user is looking for."},{"lineNumber":34,"author":{"gitId":"ong6"},"content":"     */"},{"lineNumber":35,"author":{"gitId":"ong6"},"content":"    public static String showFind(TaskList tasks, String toFind) {"},{"lineNumber":36,"author":{"gitId":"ong6"},"content":"        String out;"},{"lineNumber":37,"author":{"gitId":"ong6"},"content":"        List\u003cTask\u003e tempTasks \u003d new ArrayList\u003c\u003e();"},{"lineNumber":38,"author":{"gitId":"ong6"},"content":"        for (Task t : tasks) {"},{"lineNumber":39,"author":{"gitId":"ong6"},"content":"            if (t.getName().contains(toFind)) {"},{"lineNumber":40,"author":{"gitId":"ong6"},"content":"                tempTasks.add(t);"},{"lineNumber":41,"author":{"gitId":"ong6"},"content":"            }"},{"lineNumber":42,"author":{"gitId":"ong6"},"content":"        }"},{"lineNumber":43,"author":{"gitId":"ong6"},"content":"        if (!tempTasks.isEmpty()) {"},{"lineNumber":44,"author":{"gitId":"ong6"},"content":"            out \u003d \"Here are the matching tasks in your list: \\n\";"},{"lineNumber":45,"author":{"gitId":"ong6"},"content":"            out +\u003d printList(new TaskList(tempTasks));"},{"lineNumber":46,"author":{"gitId":"ong6"},"content":"        } else {"},{"lineNumber":47,"author":{"gitId":"ong6"},"content":"            out \u003d \"Nothing in the list matches\\n\";"},{"lineNumber":48,"author":{"gitId":"ong6"},"content":"        }"},{"lineNumber":49,"author":{"gitId":"ong6"},"content":"        return textWrapper(out);"},{"lineNumber":50,"author":{"gitId":"ong6"},"content":"    }"},{"lineNumber":51,"author":{"gitId":"ong6"},"content":""},{"lineNumber":52,"author":{"gitId":"ong6"},"content":"    /**"},{"lineNumber":53,"author":{"gitId":"ong6"},"content":"     * Prints out confirmation after marking an item as done."},{"lineNumber":54,"author":{"gitId":"ong6"},"content":"     * @param input The string input by the user."},{"lineNumber":55,"author":{"gitId":"ong6"},"content":"     * @param tasks The TaskList to be checked."},{"lineNumber":56,"author":{"gitId":"ong6"},"content":"     */"},{"lineNumber":57,"author":{"gitId":"ong6"},"content":"    public static String showDone(String input, TaskList tasks) {"},{"lineNumber":58,"author":{"gitId":"ong6"},"content":"        String out \u003d \"Nice! I\u0027ve marked this task as done: \\n  \";"},{"lineNumber":59,"author":{"gitId":"ong6"},"content":"        out +\u003d tasks.get(getIndex(input));"},{"lineNumber":60,"author":{"gitId":"ong6"},"content":"        return textWrapper(out);"},{"lineNumber":61,"author":{"gitId":"ong6"},"content":"    }"},{"lineNumber":62,"author":{"gitId":"ong6"},"content":""},{"lineNumber":63,"author":{"gitId":"ong6"},"content":"    /**"},{"lineNumber":64,"author":{"gitId":"ong6"},"content":"     * Prints out confirmations that the Task was added to the TaskList."},{"lineNumber":65,"author":{"gitId":"ong6"},"content":"     * @param tasks The TaskList to be added to."},{"lineNumber":66,"author":{"gitId":"ong6"},"content":"     * @param task  The Task to be added."},{"lineNumber":67,"author":{"gitId":"ong6"},"content":"     */"},{"lineNumber":68,"author":{"gitId":"ong6"},"content":"    public static String showTaskAdded(TaskList tasks, Task task) {"},{"lineNumber":69,"author":{"gitId":"ong6"},"content":"        String out \u003d \"Got it. I\u0027ve added this task:\\n \";"},{"lineNumber":70,"author":{"gitId":"ong6"},"content":"        out +\u003d task.toString() + \"\\n\";"},{"lineNumber":71,"author":{"gitId":"ong6"},"content":"        out +\u003d String.format(\"Now you have %d tasks in the list.\", tasks.size() + 1);"},{"lineNumber":72,"author":{"gitId":"ong6"},"content":"        return textWrapper(out);"},{"lineNumber":73,"author":{"gitId":"ong6"},"content":"    }"},{"lineNumber":74,"author":{"gitId":"ong6"},"content":""},{"lineNumber":75,"author":{"gitId":"ong6"},"content":"    /**"},{"lineNumber":76,"author":{"gitId":"ong6"},"content":"     * Prints out confirmation for deleting a task from the TaskList."},{"lineNumber":77,"author":{"gitId":"ong6"},"content":"     * @param input The input string."},{"lineNumber":78,"author":{"gitId":"ong6"},"content":"     * @param tasks The TaskList which the item is removed from."},{"lineNumber":79,"author":{"gitId":"ong6"},"content":"     */"},{"lineNumber":80,"author":{"gitId":"ong6"},"content":"    public static String showDeleteTask(String input, TaskList tasks) {"},{"lineNumber":81,"author":{"gitId":"ong6"},"content":"        String out \u003d \"Noted. I\u0027ve removed this task: \\n  \";"},{"lineNumber":82,"author":{"gitId":"ong6"},"content":"        out +\u003d tasks.get(getIndex(input)) + \"\\n\";"},{"lineNumber":83,"author":{"gitId":"ong6"},"content":"        out +\u003d String.format(\"Now you have %d tasks in the list.\", tasks.size() - 1);"},{"lineNumber":84,"author":{"gitId":"ong6"},"content":"        return textWrapper(out);"},{"lineNumber":85,"author":{"gitId":"ong6"},"content":"    }"},{"lineNumber":86,"author":{"gitId":"ong6"},"content":""},{"lineNumber":87,"author":{"gitId":"ong6"},"content":"    public static String showDukeTaskError() {"},{"lineNumber":88,"author":{"gitId":"ong6"},"content":"        return textWrapper(\"The description of a task cannot be empty.\");"},{"lineNumber":89,"author":{"gitId":"ong6"},"content":"    }"},{"lineNumber":90,"author":{"gitId":"ong6"},"content":""},{"lineNumber":91,"author":{"gitId":"ong6"},"content":"    public static String showDukeGeneralError() {"},{"lineNumber":92,"author":{"gitId":"ong6"},"content":"        return textWrapper(\"I\u0027m sorry, but I don\u0027t know what that means\");"},{"lineNumber":93,"author":{"gitId":"ong6"},"content":"    }"},{"lineNumber":94,"author":{"gitId":"ong6"},"content":""},{"lineNumber":95,"author":{"gitId":"ong6"},"content":"    public static String showDukeEmptyListError() {"},{"lineNumber":96,"author":{"gitId":"ong6"},"content":"        return textWrapper(\"You have nothing in the list!\");"},{"lineNumber":97,"author":{"gitId":"ong6"},"content":"    }"},{"lineNumber":98,"author":{"gitId":"ong6"},"content":""},{"lineNumber":99,"author":{"gitId":"ong6"},"content":"    public static String showLoadingError() {"},{"lineNumber":100,"author":{"gitId":"ong6"},"content":"        return textWrapper(\"This file cant be loaded! Creating a new file called duke.txt in CWD\");"},{"lineNumber":101,"author":{"gitId":"ong6"},"content":"    }"},{"lineNumber":102,"author":{"gitId":"ong6"},"content":""},{"lineNumber":103,"author":{"gitId":"ong6"},"content":"    public static String showEmptyError() {"},{"lineNumber":104,"author":{"gitId":"ong6"},"content":"        return textWrapper(\"Please Enter a command!\");"},{"lineNumber":105,"author":{"gitId":"ong6"},"content":"    }"},{"lineNumber":106,"author":{"gitId":"ong6"},"content":""},{"lineNumber":107,"author":{"gitId":"ong6"},"content":"    public static int getIndex(String input) {"},{"lineNumber":108,"author":{"gitId":"ong6"},"content":"        return Integer.parseInt(input.replaceAll(\"[^0-9]\", \"\")) - 1;"},{"lineNumber":109,"author":{"gitId":"ong6"},"content":"    }"},{"lineNumber":110,"author":{"gitId":"ong6"},"content":""},{"lineNumber":111,"author":{"gitId":"ong6"},"content":"    private static String printList(TaskList contentList) {"},{"lineNumber":112,"author":{"gitId":"ong6"},"content":"        StringBuilder printStr \u003d new StringBuilder();"},{"lineNumber":113,"author":{"gitId":"ong6"},"content":"        for (int i \u003d 0; i \u003c contentList.size(); i++) {"},{"lineNumber":114,"author":{"gitId":"ong6"},"content":"            String textToAdd \u003d String.format(\"%d. %s%n\", i + 1, contentList.get(i).toString());"},{"lineNumber":115,"author":{"gitId":"ong6"},"content":"            printStr.append(textToAdd);"},{"lineNumber":116,"author":{"gitId":"ong6"},"content":"        }"},{"lineNumber":117,"author":{"gitId":"ong6"},"content":"        return printStr.toString();"},{"lineNumber":118,"author":{"gitId":"ong6"},"content":"    }"},{"lineNumber":119,"author":{"gitId":"ong6"},"content":""},{"lineNumber":120,"author":{"gitId":"ong6"},"content":"    private static String textWrapper(String a) {"},{"lineNumber":121,"author":{"gitId":"ong6"},"content":"        return a;"},{"lineNumber":122,"author":{"gitId":"ong6"},"content":"    }"},{"lineNumber":123,"author":{"gitId":"ong6"},"content":""},{"lineNumber":124,"author":{"gitId":"ong6"},"content":"}"}],"authorContributionMap":{"ong6":124}},{"path":"src/main/java/gui/DialogBox.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ong6"},"content":"package gui;"},{"lineNumber":2,"author":{"gitId":"ong6"},"content":""},{"lineNumber":3,"author":{"gitId":"ong6"},"content":"import javafx.collections.FXCollections;"},{"lineNumber":4,"author":{"gitId":"ong6"},"content":"import javafx.collections.ObservableList;"},{"lineNumber":5,"author":{"gitId":"ong6"},"content":"import javafx.geometry.Pos;"},{"lineNumber":6,"author":{"gitId":"ong6"},"content":"import javafx.scene.Node;"},{"lineNumber":7,"author":{"gitId":"ong6"},"content":"import javafx.scene.control.Label;"},{"lineNumber":8,"author":{"gitId":"ong6"},"content":"import javafx.scene.image.ImageView;"},{"lineNumber":9,"author":{"gitId":"ong6"},"content":"import javafx.scene.layout.HBox;"},{"lineNumber":10,"author":{"gitId":"ong6"},"content":""},{"lineNumber":11,"author":{"gitId":"ong6"},"content":"public class DialogBox extends HBox {"},{"lineNumber":12,"author":{"gitId":"ong6"},"content":""},{"lineNumber":13,"author":{"gitId":"ong6"},"content":"    private Label text;"},{"lineNumber":14,"author":{"gitId":"ong6"},"content":"    private ImageView displayPicture;"},{"lineNumber":15,"author":{"gitId":"ong6"},"content":""},{"lineNumber":16,"author":{"gitId":"ong6"},"content":"    /**"},{"lineNumber":17,"author":{"gitId":"ong6"},"content":"     * Creates the user dialog box."},{"lineNumber":18,"author":{"gitId":"ong6"},"content":"     * @param l  The text"},{"lineNumber":19,"author":{"gitId":"ong6"},"content":"     * @param iv The profile pictures"},{"lineNumber":20,"author":{"gitId":"ong6"},"content":"     */"},{"lineNumber":21,"author":{"gitId":"ong6"},"content":"    public DialogBox(Label l, ImageView iv) {"},{"lineNumber":22,"author":{"gitId":"ong6"},"content":"        text \u003d l;"},{"lineNumber":23,"author":{"gitId":"ong6"},"content":"        displayPicture \u003d iv;"},{"lineNumber":24,"author":{"gitId":"ong6"},"content":""},{"lineNumber":25,"author":{"gitId":"ong6"},"content":"        text.setWrapText(true);"},{"lineNumber":26,"author":{"gitId":"ong6"},"content":"        displayPicture.setFitWidth(100.0);"},{"lineNumber":27,"author":{"gitId":"ong6"},"content":"        displayPicture.setFitHeight(100.0);"},{"lineNumber":28,"author":{"gitId":"ong6"},"content":""},{"lineNumber":29,"author":{"gitId":"ong6"},"content":"        this.setAlignment(Pos.TOP_RIGHT);"},{"lineNumber":30,"author":{"gitId":"ong6"},"content":"        this.getChildren().addAll(text, displayPicture);"},{"lineNumber":31,"author":{"gitId":"ong6"},"content":"    }"},{"lineNumber":32,"author":{"gitId":"ong6"},"content":""},{"lineNumber":33,"author":{"gitId":"ong6"},"content":"    private void flip() {"},{"lineNumber":34,"author":{"gitId":"ong6"},"content":"        this.setAlignment(Pos.TOP_LEFT);"},{"lineNumber":35,"author":{"gitId":"ong6"},"content":"        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());"},{"lineNumber":36,"author":{"gitId":"ong6"},"content":"        FXCollections.reverse(tmp);"},{"lineNumber":37,"author":{"gitId":"ong6"},"content":"        this.getChildren().setAll(tmp);"},{"lineNumber":38,"author":{"gitId":"ong6"},"content":"    }"},{"lineNumber":39,"author":{"gitId":"ong6"},"content":""},{"lineNumber":40,"author":{"gitId":"ong6"},"content":"    public static DialogBox getUserDialog(Label l, ImageView iv) {"},{"lineNumber":41,"author":{"gitId":"ong6"},"content":"        return new DialogBox(l, iv);"},{"lineNumber":42,"author":{"gitId":"ong6"},"content":"    }"},{"lineNumber":43,"author":{"gitId":"ong6"},"content":""},{"lineNumber":44,"author":{"gitId":"ong6"},"content":"    /**"},{"lineNumber":45,"author":{"gitId":"ong6"},"content":"     * Gets Duke Dialog."},{"lineNumber":46,"author":{"gitId":"ong6"},"content":"     * @param l The text"},{"lineNumber":47,"author":{"gitId":"ong6"},"content":"     * @param iv The profile picture"},{"lineNumber":48,"author":{"gitId":"ong6"},"content":"     * @return a DialogBox UI"},{"lineNumber":49,"author":{"gitId":"ong6"},"content":"     */"},{"lineNumber":50,"author":{"gitId":"ong6"},"content":"    public static DialogBox getDukeDialog(Label l, ImageView iv) {"},{"lineNumber":51,"author":{"gitId":"ong6"},"content":"        var db \u003d new DialogBox(l, iv);"},{"lineNumber":52,"author":{"gitId":"ong6"},"content":"        db.flip();"},{"lineNumber":53,"author":{"gitId":"ong6"},"content":"        return db;"},{"lineNumber":54,"author":{"gitId":"ong6"},"content":"    }"},{"lineNumber":55,"author":{"gitId":"ong6"},"content":"}"}],"authorContributionMap":{"ong6":55}},{"path":"src/main/java/gui/DukeUi.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ong6"},"content":"package gui;"},{"lineNumber":2,"author":{"gitId":"ong6"},"content":""},{"lineNumber":3,"author":{"gitId":"ong6"},"content":"import duke.Parser;"},{"lineNumber":4,"author":{"gitId":"ong6"},"content":"import duke.Storage;"},{"lineNumber":5,"author":{"gitId":"ong6"},"content":"import duke.TaskList;"},{"lineNumber":6,"author":{"gitId":"ong6"},"content":"import javafx.application.Application;"},{"lineNumber":7,"author":{"gitId":"ong6"},"content":"import javafx.scene.Scene;"},{"lineNumber":8,"author":{"gitId":"ong6"},"content":"import javafx.scene.control.Button;"},{"lineNumber":9,"author":{"gitId":"ong6"},"content":"import javafx.scene.control.Label;"},{"lineNumber":10,"author":{"gitId":"ong6"},"content":"import javafx.scene.control.ScrollPane;"},{"lineNumber":11,"author":{"gitId":"ong6"},"content":"import javafx.scene.control.TextField;"},{"lineNumber":12,"author":{"gitId":"ong6"},"content":"import javafx.scene.image.Image;"},{"lineNumber":13,"author":{"gitId":"ong6"},"content":"import javafx.scene.image.ImageView;"},{"lineNumber":14,"author":{"gitId":"ong6"},"content":"import javafx.scene.layout.AnchorPane;"},{"lineNumber":15,"author":{"gitId":"ong6"},"content":"import javafx.scene.layout.Region;"},{"lineNumber":16,"author":{"gitId":"ong6"},"content":"import javafx.scene.layout.VBox;"},{"lineNumber":17,"author":{"gitId":"ong6"},"content":"import javafx.stage.Stage;"},{"lineNumber":18,"author":{"gitId":"ong6"},"content":""},{"lineNumber":19,"author":{"gitId":"ong6"},"content":"public class DukeUi extends Application {"},{"lineNumber":20,"author":{"gitId":"ong6"},"content":""},{"lineNumber":21,"author":{"gitId":"ong6"},"content":"    private ScrollPane scrollPane;"},{"lineNumber":22,"author":{"gitId":"ong6"},"content":"    private VBox dialogContainer;"},{"lineNumber":23,"author":{"gitId":"ong6"},"content":"    private TextField userInput;"},{"lineNumber":24,"author":{"gitId":"ong6"},"content":"    private Button sendButton;"},{"lineNumber":25,"author":{"gitId":"ong6"},"content":"    private Scene scene;"},{"lineNumber":26,"author":{"gitId":"ong6"},"content":"    private Image user \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaUser.png\"));"},{"lineNumber":27,"author":{"gitId":"ong6"},"content":"    private Image duke \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaDuke.png\"));"},{"lineNumber":28,"author":{"gitId":"ong6"},"content":""},{"lineNumber":29,"author":{"gitId":"ong6"},"content":"    private Storage storage;"},{"lineNumber":30,"author":{"gitId":"ong6"},"content":"    private TaskList tasks;"},{"lineNumber":31,"author":{"gitId":"ong6"},"content":"    private Parser parser;"},{"lineNumber":32,"author":{"gitId":"ong6"},"content":""},{"lineNumber":33,"author":{"gitId":"ong6"},"content":"    @Override"},{"lineNumber":34,"author":{"gitId":"ong6"},"content":"    public void start(Stage stage) {"},{"lineNumber":35,"author":{"gitId":"ong6"},"content":""},{"lineNumber":36,"author":{"gitId":"ong6"},"content":"        initializeDuke(\"duke.txt\");"},{"lineNumber":37,"author":{"gitId":"ong6"},"content":""},{"lineNumber":38,"author":{"gitId":"ong6"},"content":"        // Step 1. Formatting the window to look as expected."},{"lineNumber":39,"author":{"gitId":"ong6"},"content":""},{"lineNumber":40,"author":{"gitId":"ong6"},"content":"        scrollPane \u003d new ScrollPane();"},{"lineNumber":41,"author":{"gitId":"ong6"},"content":"        dialogContainer \u003d new VBox();"},{"lineNumber":42,"author":{"gitId":"ong6"},"content":"        scrollPane.setContent(dialogContainer);"},{"lineNumber":43,"author":{"gitId":"ong6"},"content":""},{"lineNumber":44,"author":{"gitId":"ong6"},"content":"        userInput \u003d new TextField();"},{"lineNumber":45,"author":{"gitId":"ong6"},"content":"        sendButton \u003d new Button(\"Send\");"},{"lineNumber":46,"author":{"gitId":"ong6"},"content":""},{"lineNumber":47,"author":{"gitId":"ong6"},"content":"        AnchorPane mainLayout \u003d new AnchorPane();"},{"lineNumber":48,"author":{"gitId":"ong6"},"content":"        mainLayout.getChildren().addAll(scrollPane, userInput, sendButton);"},{"lineNumber":49,"author":{"gitId":"ong6"},"content":""},{"lineNumber":50,"author":{"gitId":"ong6"},"content":"        scene \u003d new Scene(mainLayout);"},{"lineNumber":51,"author":{"gitId":"ong6"},"content":""},{"lineNumber":52,"author":{"gitId":"ong6"},"content":"        stage.setScene(scene);"},{"lineNumber":53,"author":{"gitId":"ong6"},"content":"        stage.show();"},{"lineNumber":54,"author":{"gitId":"ong6"},"content":""},{"lineNumber":55,"author":{"gitId":"ong6"},"content":"        // Step 2. Formatting the window to look as expected"},{"lineNumber":56,"author":{"gitId":"ong6"},"content":"        stage.setTitle(\"Duke\");"},{"lineNumber":57,"author":{"gitId":"ong6"},"content":"        stage.setResizable(false);"},{"lineNumber":58,"author":{"gitId":"ong6"},"content":"        stage.setMinHeight(600.0);"},{"lineNumber":59,"author":{"gitId":"ong6"},"content":"        stage.setMinWidth(400.0);"},{"lineNumber":60,"author":{"gitId":"ong6"},"content":""},{"lineNumber":61,"author":{"gitId":"ong6"},"content":"        mainLayout.setPrefSize(400.0, 600.0);"},{"lineNumber":62,"author":{"gitId":"ong6"},"content":""},{"lineNumber":63,"author":{"gitId":"ong6"},"content":"        scrollPane.setPrefSize(385, 535);"},{"lineNumber":64,"author":{"gitId":"ong6"},"content":"        scrollPane.setHbarPolicy(ScrollPane.ScrollBarPolicy.NEVER);"},{"lineNumber":65,"author":{"gitId":"ong6"},"content":"        scrollPane.setVbarPolicy(ScrollPane.ScrollBarPolicy.ALWAYS);"},{"lineNumber":66,"author":{"gitId":"ong6"},"content":""},{"lineNumber":67,"author":{"gitId":"ong6"},"content":"        scrollPane.setVvalue(1.0);"},{"lineNumber":68,"author":{"gitId":"ong6"},"content":"        scrollPane.setFitToWidth(true);"},{"lineNumber":69,"author":{"gitId":"ong6"},"content":""},{"lineNumber":70,"author":{"gitId":"ong6"},"content":"        dialogContainer.setPrefHeight(Region.USE_COMPUTED_SIZE);"},{"lineNumber":71,"author":{"gitId":"ong6"},"content":"        userInput.setPrefWidth(325.0);"},{"lineNumber":72,"author":{"gitId":"ong6"},"content":"        sendButton.setPrefWidth(55.0);"},{"lineNumber":73,"author":{"gitId":"ong6"},"content":""},{"lineNumber":74,"author":{"gitId":"ong6"},"content":"        AnchorPane.setTopAnchor(scrollPane, 1.0);"},{"lineNumber":75,"author":{"gitId":"ong6"},"content":""},{"lineNumber":76,"author":{"gitId":"ong6"},"content":"        AnchorPane.setBottomAnchor(sendButton, 1.0);"},{"lineNumber":77,"author":{"gitId":"ong6"},"content":"        AnchorPane.setRightAnchor(sendButton, 1.0);"},{"lineNumber":78,"author":{"gitId":"ong6"},"content":""},{"lineNumber":79,"author":{"gitId":"ong6"},"content":"        AnchorPane.setLeftAnchor(userInput, 1.0);"},{"lineNumber":80,"author":{"gitId":"ong6"},"content":"        AnchorPane.setBottomAnchor(userInput, 1.0);"},{"lineNumber":81,"author":{"gitId":"ong6"},"content":""},{"lineNumber":82,"author":{"gitId":"ong6"},"content":"        // Step 3. Add functionality to handle user input."},{"lineNumber":83,"author":{"gitId":"ong6"},"content":"        sendButton.setOnMouseClicked((event) -\u003e {"},{"lineNumber":84,"author":{"gitId":"ong6"},"content":"            dialogContainer.getChildren().add(getDialogLabel(userInput.getText()));"},{"lineNumber":85,"author":{"gitId":"ong6"},"content":"            userInput.clear();"},{"lineNumber":86,"author":{"gitId":"ong6"},"content":"        });"},{"lineNumber":87,"author":{"gitId":"ong6"},"content":""},{"lineNumber":88,"author":{"gitId":"ong6"},"content":"        userInput.setOnAction((event) -\u003e {"},{"lineNumber":89,"author":{"gitId":"ong6"},"content":"            dialogContainer.getChildren().add(getDialogLabel(userInput.getText()));"},{"lineNumber":90,"author":{"gitId":"ong6"},"content":"            userInput.clear();"},{"lineNumber":91,"author":{"gitId":"ong6"},"content":"        });"},{"lineNumber":92,"author":{"gitId":"ong6"},"content":""},{"lineNumber":93,"author":{"gitId":"ong6"},"content":"        dialogContainer.heightProperty().addListener((observable) -\u003e scrollPane.setVvalue(1.0));"},{"lineNumber":94,"author":{"gitId":"ong6"},"content":""},{"lineNumber":95,"author":{"gitId":"ong6"},"content":"        sendButton.setOnMouseClicked((event) -\u003e {"},{"lineNumber":96,"author":{"gitId":"ong6"},"content":"            handleUserInput();"},{"lineNumber":97,"author":{"gitId":"ong6"},"content":"        });"},{"lineNumber":98,"author":{"gitId":"ong6"},"content":""},{"lineNumber":99,"author":{"gitId":"ong6"},"content":"        userInput.setOnAction((event) -\u003e {"},{"lineNumber":100,"author":{"gitId":"ong6"},"content":"            handleUserInput();"},{"lineNumber":101,"author":{"gitId":"ong6"},"content":"        });"},{"lineNumber":102,"author":{"gitId":"ong6"},"content":""},{"lineNumber":103,"author":{"gitId":"ong6"},"content":"    }"},{"lineNumber":104,"author":{"gitId":"ong6"},"content":""},{"lineNumber":105,"author":{"gitId":"ong6"},"content":"    private Label getDialogLabel(String text) {"},{"lineNumber":106,"author":{"gitId":"ong6"},"content":"        Label textToAdd \u003d new Label(text);"},{"lineNumber":107,"author":{"gitId":"ong6"},"content":"        textToAdd.setWrapText(true);"},{"lineNumber":108,"author":{"gitId":"ong6"},"content":""},{"lineNumber":109,"author":{"gitId":"ong6"},"content":"        return textToAdd;"},{"lineNumber":110,"author":{"gitId":"ong6"},"content":"    }"},{"lineNumber":111,"author":{"gitId":"ong6"},"content":""},{"lineNumber":112,"author":{"gitId":"ong6"},"content":"    private void handleUserInput() {"},{"lineNumber":113,"author":{"gitId":"ong6"},"content":""},{"lineNumber":114,"author":{"gitId":"ong6"},"content":"        Label userText \u003d new Label(userInput.getText());"},{"lineNumber":115,"author":{"gitId":"ong6"},"content":"        Label dukeText \u003d new Label(getResponse(userInput.getText()));"},{"lineNumber":116,"author":{"gitId":"ong6"},"content":"        dialogContainer.getChildren().addAll(DialogBox.getUserDialog(userText, new ImageView(user)),"},{"lineNumber":117,"author":{"gitId":"ong6"},"content":"                DialogBox.getDukeDialog(dukeText, new ImageView(duke)));"},{"lineNumber":118,"author":{"gitId":"ong6"},"content":"        userInput.clear();"},{"lineNumber":119,"author":{"gitId":"ong6"},"content":"    }"},{"lineNumber":120,"author":{"gitId":"ong6"},"content":""},{"lineNumber":121,"author":{"gitId":"ong6"},"content":"    private String getResponse(String input) {"},{"lineNumber":122,"author":{"gitId":"ong6"},"content":"        return this.parser.response(input);"},{"lineNumber":123,"author":{"gitId":"ong6"},"content":"    }"},{"lineNumber":124,"author":{"gitId":"ong6"},"content":""},{"lineNumber":125,"author":{"gitId":"ong6"},"content":"    private void initializeDuke(String filePath) {"},{"lineNumber":126,"author":{"gitId":"ong6"},"content":"        try {"},{"lineNumber":127,"author":{"gitId":"ong6"},"content":"            this.storage \u003d new Storage(filePath);"},{"lineNumber":128,"author":{"gitId":"ong6"},"content":"            this.tasks \u003d new TaskList(storage.load());"},{"lineNumber":129,"author":{"gitId":"ong6"},"content":"        } catch (Exception e) {"},{"lineNumber":130,"author":{"gitId":"ong6"},"content":"            this.tasks \u003d new TaskList();"},{"lineNumber":131,"author":{"gitId":"ong6"},"content":"        }"},{"lineNumber":132,"author":{"gitId":"ong6"},"content":"        this.parser \u003d new Parser(storage, tasks);"},{"lineNumber":133,"author":{"gitId":"ong6"},"content":"    }"},{"lineNumber":134,"author":{"gitId":"ong6"},"content":""},{"lineNumber":135,"author":{"gitId":"ong6"},"content":"}"}],"authorContributionMap":{"ong6":135}},{"path":"src/test/java/duke/StorageTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ong6"},"content":"package duke;"},{"lineNumber":2,"author":{"gitId":"ong6"},"content":""},{"lineNumber":3,"author":{"gitId":"ong6"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;"},{"lineNumber":4,"author":{"gitId":"ong6"},"content":""},{"lineNumber":5,"author":{"gitId":"ong6"},"content":"import java.io.File;"},{"lineNumber":6,"author":{"gitId":"ong6"},"content":"import java.io.FileNotFoundException;"},{"lineNumber":7,"author":{"gitId":"ong6"},"content":"import java.util.ArrayList;"},{"lineNumber":8,"author":{"gitId":"ong6"},"content":"import java.util.List;"},{"lineNumber":9,"author":{"gitId":"ong6"},"content":""},{"lineNumber":10,"author":{"gitId":"ong6"},"content":"import org.junit.jupiter.api.Test;"},{"lineNumber":11,"author":{"gitId":"ong6"},"content":""},{"lineNumber":12,"author":{"gitId":"ong6"},"content":"class StorageTest {"},{"lineNumber":13,"author":{"gitId":"ong6"},"content":""},{"lineNumber":14,"author":{"gitId":"ong6"},"content":"    @Test"},{"lineNumber":15,"author":{"gitId":"ong6"},"content":"    void save_file_success() {"},{"lineNumber":16,"author":{"gitId":"ong6"},"content":"        try {"},{"lineNumber":17,"author":{"gitId":"ong6"},"content":"            Storage testStorage \u003d new Storage(\"StorageTest.txt\");"},{"lineNumber":18,"author":{"gitId":"ong6"},"content":"            Task temp1 \u003d new ToDo(\"event do tasks /at 2020-01-15\");"},{"lineNumber":19,"author":{"gitId":"ong6"},"content":"            List\u003cTask\u003e saveList \u003d new ArrayList\u003c\u003e();"},{"lineNumber":20,"author":{"gitId":"ong6"},"content":"            saveList.add(temp1);"},{"lineNumber":21,"author":{"gitId":"ong6"},"content":"            testStorage.save(new TaskList(saveList));"},{"lineNumber":22,"author":{"gitId":"ong6"},"content":"            File f \u003d new File(\"StorageTest.txt\");"},{"lineNumber":23,"author":{"gitId":"ong6"},"content":"            assertEquals(true, f.exists());"},{"lineNumber":24,"author":{"gitId":"ong6"},"content":"        } catch (Exception e) {"},{"lineNumber":25,"author":{"gitId":"ong6"},"content":"            e.printStackTrace();"},{"lineNumber":26,"author":{"gitId":"ong6"},"content":"        }"},{"lineNumber":27,"author":{"gitId":"ong6"},"content":"    }"},{"lineNumber":28,"author":{"gitId":"ong6"},"content":""},{"lineNumber":29,"author":{"gitId":"ong6"},"content":"    @Test"},{"lineNumber":30,"author":{"gitId":"ong6"},"content":"    void load_file_success() {"},{"lineNumber":31,"author":{"gitId":"ong6"},"content":"        try {"},{"lineNumber":32,"author":{"gitId":"ong6"},"content":"            Storage testStorage \u003d new Storage(\"StorageTest.txt\");"},{"lineNumber":33,"author":{"gitId":"ong6"},"content":"            Task expectedTask \u003d new ToDo(\"event do tasks /at 2020-01-15\");"},{"lineNumber":34,"author":{"gitId":"ong6"},"content":"            List\u003cTask\u003e storeageTasks \u003d testStorage.load();"},{"lineNumber":35,"author":{"gitId":"ong6"},"content":"            assertEquals(false, storeageTasks.isEmpty());"},{"lineNumber":36,"author":{"gitId":"ong6"},"content":"            assertEquals(expectedTask, storeageTasks.get(0));"},{"lineNumber":37,"author":{"gitId":"ong6"},"content":"        } catch (FileNotFoundException e) {"},{"lineNumber":38,"author":{"gitId":"ong6"},"content":"            e.printStackTrace();"},{"lineNumber":39,"author":{"gitId":"ong6"},"content":"        }"},{"lineNumber":40,"author":{"gitId":"ong6"},"content":""},{"lineNumber":41,"author":{"gitId":"ong6"},"content":"    }"},{"lineNumber":42,"author":{"gitId":"ong6"},"content":"}"}],"authorContributionMap":{"ong6":42}},{"path":"src/test/java/duke/StorageTest.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"ong6"},"content":"E | 0 | do tasks  | Jan 15 2020"}],"authorContributionMap":{"ong6":1}},{"path":"src/test/java/duke/TaskListTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ong6"},"content":"package duke;"},{"lineNumber":2,"author":{"gitId":"ong6"},"content":""},{"lineNumber":3,"author":{"gitId":"ong6"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;"},{"lineNumber":4,"author":{"gitId":"ong6"},"content":""},{"lineNumber":5,"author":{"gitId":"ong6"},"content":"import org.junit.jupiter.api.Test;"},{"lineNumber":6,"author":{"gitId":"ong6"},"content":""},{"lineNumber":7,"author":{"gitId":"ong6"},"content":"class TaskListTest {"},{"lineNumber":8,"author":{"gitId":"ong6"},"content":""},{"lineNumber":9,"author":{"gitId":"ong6"},"content":"    @Test"},{"lineNumber":10,"author":{"gitId":"ong6"},"content":"    void taskList_setDone_success() {"},{"lineNumber":11,"author":{"gitId":"ong6"},"content":"        TaskList temp \u003d new TaskList();"},{"lineNumber":12,"author":{"gitId":"ong6"},"content":"        temp.add(new Task(\"Test\", \"Test\"));"},{"lineNumber":13,"author":{"gitId":"ong6"},"content":"        temp.setDone(0);"},{"lineNumber":14,"author":{"gitId":"ong6"},"content":"        assertEquals(\"[[Test][X] Test]\", temp.toString());"},{"lineNumber":15,"author":{"gitId":"ong6"},"content":"    }"},{"lineNumber":16,"author":{"gitId":"ong6"},"content":"}"}],"authorContributionMap":{"ong6":16}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"ong6"},"content":"todo borrow book"},{"lineNumber":2,"author":{"gitId":"ong6"},"content":"deadline return book /by Sunday"},{"lineNumber":3,"author":{"gitId":"ong6"},"content":"event project meeting /at Mon 2-4pm"},{"lineNumber":4,"author":{"gitId":"ong6"},"content":"deadline do homework /by no idea :-p"},{"lineNumber":5,"author":{"gitId":"ong6"},"content":"deadline do dishes /by 2019-10-11"},{"lineNumber":6,"author":{"gitId":"ong6"},"content":"event do tasks /at 2020-01-15"},{"lineNumber":7,"author":{"gitId":"ong6"},"content":"list"},{"lineNumber":8,"author":{"gitId":"ong6"},"content":"blah"},{"lineNumber":9,"author":{"gitId":"ong6"},"content":"todo"},{"lineNumber":10,"author":{"gitId":"ong6"},"content":"delete 3"},{"lineNumber":11,"author":{"gitId":"ong6"},"content":"list"},{"lineNumber":12,"author":{"gitId":"ong6"},"content":"find dishes"},{"lineNumber":13,"author":{"gitId":"ong6"},"content":"bye"}],"authorContributionMap":{"ong6":13}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF"},{"lineNumber":2,"author":{"gitId":"-"},"content":""},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin"},{"lineNumber":5,"author":{"gitId":"-"},"content":""},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run"},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT"},{"lineNumber":8,"author":{"gitId":"-"},"content":""},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder"},{"lineNumber":10,"author":{"gitId":"ong6"},"content":"javac  -cp ..\\src\\main\\java -Xlint:none ..\\src\\main\\java\\Duke.java"},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 ("},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1"},{"lineNumber":14,"author":{"gitId":"-"},"content":")"},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0"},{"lineNumber":16,"author":{"gitId":"-"},"content":""},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"},{"lineNumber":18,"author":{"gitId":"ong6"},"content":"java -classpath ../src/main/java Duke \u003c input.txt \u003e ACTUAL.TXT"},{"lineNumber":19,"author":{"gitId":"-"},"content":""},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM compare the output to the expected output"},{"lineNumber":21,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT"}],"authorContributionMap":{"ong6":2,"-":19}}]
