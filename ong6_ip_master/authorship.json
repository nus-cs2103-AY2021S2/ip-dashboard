[{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027checkstyle\u0027"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027"},{"lineNumber":6,"author":{"gitId":"-"},"content":"}"},{"lineNumber":7,"author":{"gitId":"-"},"content":""},{"lineNumber":8,"author":{"gitId":"-"},"content":"repositories {"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    mavenCentral()"},{"lineNumber":10,"author":{"gitId":"-"},"content":"}"},{"lineNumber":11,"author":{"gitId":"-"},"content":""},{"lineNumber":12,"author":{"gitId":"-"},"content":"dependencies {"},{"lineNumber":13,"author":{"gitId":"ong6"},"content":"    String javaFxVersion \u003d \u002711\u0027"},{"lineNumber":14,"author":{"gitId":"ong6"},"content":""},{"lineNumber":15,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.5.0\u0027"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.5.0\u0027"},{"lineNumber":17,"author":{"gitId":"ong6"},"content":"    testImplementation(\u0027org.junit.platform:junit-platform-launcher:1.5.2\u0027)"},{"lineNumber":18,"author":{"gitId":"ong6"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027"},{"lineNumber":19,"author":{"gitId":"ong6"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"},{"lineNumber":20,"author":{"gitId":"ong6"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"},{"lineNumber":21,"author":{"gitId":"ong6"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027"},{"lineNumber":22,"author":{"gitId":"ong6"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"},{"lineNumber":23,"author":{"gitId":"ong6"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"},{"lineNumber":24,"author":{"gitId":"ong6"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027"},{"lineNumber":25,"author":{"gitId":"ong6"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"},{"lineNumber":26,"author":{"gitId":"ong6"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"},{"lineNumber":27,"author":{"gitId":"ong6"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027"},{"lineNumber":28,"author":{"gitId":"ong6"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"},{"lineNumber":29,"author":{"gitId":"ong6"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"},{"lineNumber":30,"author":{"gitId":"-"},"content":"}"},{"lineNumber":31,"author":{"gitId":"-"},"content":""},{"lineNumber":32,"author":{"gitId":"-"},"content":"test {"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    useJUnitPlatform()"},{"lineNumber":34,"author":{"gitId":"-"},"content":""},{"lineNumber":35,"author":{"gitId":"-"},"content":"    testLogging {"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\""},{"lineNumber":37,"author":{"gitId":"-"},"content":""},{"lineNumber":38,"author":{"gitId":"-"},"content":"        showExceptions true"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\""},{"lineNumber":40,"author":{"gitId":"-"},"content":"        showCauses true"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        showStackTraces true"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":44,"author":{"gitId":"-"},"content":"}"},{"lineNumber":45,"author":{"gitId":"-"},"content":""},{"lineNumber":46,"author":{"gitId":"-"},"content":"application {"},{"lineNumber":47,"author":{"gitId":"ong6"},"content":"    mainClassName \u003d \"Launcher\""},{"lineNumber":48,"author":{"gitId":"-"},"content":"}"},{"lineNumber":49,"author":{"gitId":"-"},"content":""},{"lineNumber":50,"author":{"gitId":"-"},"content":"shadowJar {"},{"lineNumber":51,"author":{"gitId":"ong6"},"content":"    archiveBaseName \u003d \"Launcher\""},{"lineNumber":52,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null"},{"lineNumber":53,"author":{"gitId":"-"},"content":"}"},{"lineNumber":54,"author":{"gitId":"-"},"content":""},{"lineNumber":55,"author":{"gitId":"-"},"content":"checkstyle {"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    toolVersion \u003d \u00278.29\u0027"},{"lineNumber":57,"author":{"gitId":"-"},"content":"}"},{"lineNumber":58,"author":{"gitId":"-"},"content":""},{"lineNumber":59,"author":{"gitId":"-"},"content":"run{"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in"},{"lineNumber":61,"author":{"gitId":"-"},"content":"}"},{"lineNumber":62,"author":{"gitId":"ong6"},"content":""},{"lineNumber":63,"author":{"gitId":"ong6"},"content":""}],"authorContributionMap":{"ong6":19,"-":44}},{"path":"docs/README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"# User Guide"},{"lineNumber":2,"author":{"gitId":"-"},"content":""},{"lineNumber":3,"author":{"gitId":"ong6"},"content":"![DukeUiImg](Ui.png)"},{"lineNumber":4,"author":{"gitId":"-"},"content":""},{"lineNumber":5,"author":{"gitId":"-"},"content":"## Features"},{"lineNumber":6,"author":{"gitId":"-"},"content":""},{"lineNumber":7,"author":{"gitId":"ong6"},"content":"### Archive"},{"lineNumber":8,"author":{"gitId":"ong6"},"content":""},{"lineNumber":9,"author":{"gitId":"ong6"},"content":"- Archive information of tasks locally in resource file"},{"lineNumber":10,"author":{"gitId":"ong6"},"content":""},{"lineNumber":11,"author":{"gitId":"ong6"},"content":"### User interaction"},{"lineNumber":12,"author":{"gitId":"ong6"},"content":""},{"lineNumber":13,"author":{"gitId":"ong6"},"content":"- Key in command and send to the application"},{"lineNumber":14,"author":{"gitId":"ong6"},"content":"- See application response in the app"},{"lineNumber":15,"author":{"gitId":"ong6"},"content":"- See tips when the input command is invalid"},{"lineNumber":16,"author":{"gitId":"ong6"},"content":"- Exit the app using command"},{"lineNumber":17,"author":{"gitId":"ong6"},"content":""},{"lineNumber":18,"author":{"gitId":"ong6"},"content":"### View"},{"lineNumber":19,"author":{"gitId":"ong6"},"content":""},{"lineNumber":20,"author":{"gitId":"ong6"},"content":"- View the entire list of all tasks"},{"lineNumber":21,"author":{"gitId":"ong6"},"content":"- View tasks happening on a designated time"},{"lineNumber":22,"author":{"gitId":"ong6"},"content":""},{"lineNumber":23,"author":{"gitId":"ong6"},"content":"### Task management"},{"lineNumber":24,"author":{"gitId":"ong6"},"content":""},{"lineNumber":25,"author":{"gitId":"ong6"},"content":"- Create"},{"lineNumber":26,"author":{"gitId":"ong6"},"content":"- Mark as done"},{"lineNumber":27,"author":{"gitId":"ong6"},"content":"- Delete"},{"lineNumber":28,"author":{"gitId":"-"},"content":""},{"lineNumber":29,"author":{"gitId":"-"},"content":"## Usage"},{"lineNumber":30,"author":{"gitId":"-"},"content":""},{"lineNumber":31,"author":{"gitId":"ong6"},"content":"### `list` - List Command"},{"lineNumber":32,"author":{"gitId":"-"},"content":""},{"lineNumber":33,"author":{"gitId":"ong6"},"content":"List out all the tasks with their index, type, status (done or not),"},{"lineNumber":34,"author":{"gitId":"ong6"},"content":"description, and time."},{"lineNumber":35,"author":{"gitId":"-"},"content":""},{"lineNumber":36,"author":{"gitId":"ong6"},"content":"Example of usage:"},{"lineNumber":37,"author":{"gitId":"-"},"content":""},{"lineNumber":38,"author":{"gitId":"ong6"},"content":"`list`"},{"lineNumber":39,"author":{"gitId":"-"},"content":""},{"lineNumber":40,"author":{"gitId":"-"},"content":"Expected outcome:"},{"lineNumber":41,"author":{"gitId":"-"},"content":""},{"lineNumber":42,"author":{"gitId":"ong6"},"content":"```"},{"lineNumber":43,"author":{"gitId":"ong6"},"content":"Here are the tasks in your list:"},{"lineNumber":44,"author":{"gitId":"ong6"},"content":""},{"lineNumber":45,"author":{"gitId":"ong6"},"content":"1.[T][✘] borrow books"},{"lineNumber":46,"author":{"gitId":"ong6"},"content":"2.[D][ ] cs2102 tutorial 1 (by: Sep 4 2020)"},{"lineNumber":47,"author":{"gitId":"ong6"},"content":"3.[T][ ] return books"},{"lineNumber":48,"author":{"gitId":"ong6"},"content":"4.[D][✘] cs2101 email (by: Sep 14 2020)"},{"lineNumber":49,"author":{"gitId":"ong6"},"content":"5.[E][✘] cs2103 project meeting (at: 2020-09-30 12:00/2020-10-01 12:00)"},{"lineNumber":50,"author":{"gitId":"ong6"},"content":"6.[E][ ] cs2102 project meeting (Oct 1 2020)"},{"lineNumber":51,"author":{"gitId":"ong6"},"content":"```"},{"lineNumber":52,"author":{"gitId":"ong6"},"content":""},{"lineNumber":53,"author":{"gitId":"ong6"},"content":"### `bye` - Bye Command"},{"lineNumber":54,"author":{"gitId":"ong6"},"content":""},{"lineNumber":55,"author":{"gitId":"ong6"},"content":"Exit the app."},{"lineNumber":56,"author":{"gitId":"ong6"},"content":""},{"lineNumber":57,"author":{"gitId":"ong6"},"content":"Example of usage:"},{"lineNumber":58,"author":{"gitId":"ong6"},"content":""},{"lineNumber":59,"author":{"gitId":"ong6"},"content":"`bye`"},{"lineNumber":60,"author":{"gitId":"ong6"},"content":""},{"lineNumber":61,"author":{"gitId":"ong6"},"content":"### `todo` - Add todo Command"},{"lineNumber":62,"author":{"gitId":"ong6"},"content":""},{"lineNumber":63,"author":{"gitId":"ong6"},"content":"Add a todo task with given description."},{"lineNumber":64,"author":{"gitId":"-"},"content":""},{"lineNumber":65,"author":{"gitId":"ong6"},"content":"Format:"},{"lineNumber":66,"author":{"gitId":"ong6"},"content":""},{"lineNumber":67,"author":{"gitId":"ong6"},"content":"`todo \u003cdescription\u003e`"},{"lineNumber":68,"author":{"gitId":"ong6"},"content":""},{"lineNumber":69,"author":{"gitId":"ong6"},"content":"Example of usage:"},{"lineNumber":70,"author":{"gitId":"ong6"},"content":""},{"lineNumber":71,"author":{"gitId":"ong6"},"content":"`todo sample task`"},{"lineNumber":72,"author":{"gitId":"ong6"},"content":""},{"lineNumber":73,"author":{"gitId":"ong6"},"content":"Expected outcome:"},{"lineNumber":74,"author":{"gitId":"ong6"},"content":""},{"lineNumber":75,"author":{"gitId":"ong6"},"content":"```"},{"lineNumber":76,"author":{"gitId":"ong6"},"content":"Got it. I\u0027ve added this task:"},{"lineNumber":77,"author":{"gitId":"ong6"},"content":"[T][✘] sample task"},{"lineNumber":78,"author":{"gitId":"ong6"},"content":"Now your have 7 tasks in the list."},{"lineNumber":79,"author":{"gitId":"ong6"},"content":"```"},{"lineNumber":80,"author":{"gitId":"ong6"},"content":""},{"lineNumber":81,"author":{"gitId":"ong6"},"content":"### `deadline` - Add deadline Command"},{"lineNumber":82,"author":{"gitId":"ong6"},"content":""},{"lineNumber":83,"author":{"gitId":"ong6"},"content":"Add a deadline task with given description and date."},{"lineNumber":84,"author":{"gitId":"ong6"},"content":""},{"lineNumber":85,"author":{"gitId":"ong6"},"content":"Format:"},{"lineNumber":86,"author":{"gitId":"ong6"},"content":""},{"lineNumber":87,"author":{"gitId":"ong6"},"content":"`deadline \u003cdescription\u003e /by \u003cyyyy-MM-dd\u003e`"},{"lineNumber":88,"author":{"gitId":"-"},"content":""},{"lineNumber":89,"author":{"gitId":"-"},"content":"Example of usage:"},{"lineNumber":90,"author":{"gitId":"-"},"content":""},{"lineNumber":91,"author":{"gitId":"ong6"},"content":"`deadline sample deadline /by 2020-09-30`"},{"lineNumber":92,"author":{"gitId":"-"},"content":""},{"lineNumber":93,"author":{"gitId":"-"},"content":"Expected outcome:"},{"lineNumber":94,"author":{"gitId":"-"},"content":""},{"lineNumber":95,"author":{"gitId":"ong6"},"content":"```"},{"lineNumber":96,"author":{"gitId":"ong6"},"content":"Got it. I\u0027ve added this task:"},{"lineNumber":97,"author":{"gitId":"ong6"},"content":"[D][✘] sample deadline (by: Sep 30 2020)"},{"lineNumber":98,"author":{"gitId":"ong6"},"content":"Now your have 8 tasks in the list."},{"lineNumber":99,"author":{"gitId":"ong6"},"content":"```"},{"lineNumber":100,"author":{"gitId":"ong6"},"content":""},{"lineNumber":101,"author":{"gitId":"ong6"},"content":"### `event` - Add event Command"},{"lineNumber":102,"author":{"gitId":"ong6"},"content":""},{"lineNumber":103,"author":{"gitId":"ong6"},"content":"Add an event task with given description and date time. Multiple tentative slots"},{"lineNumber":104,"author":{"gitId":"ong6"},"content":"can be added to the event."},{"lineNumber":105,"author":{"gitId":"ong6"},"content":""},{"lineNumber":106,"author":{"gitId":"ong6"},"content":"Format:"},{"lineNumber":107,"author":{"gitId":"ong6"},"content":""},{"lineNumber":108,"author":{"gitId":"ong6"},"content":"`event \u003cdescription\u003e /at \u003cyyyy-MM-dd\u003e`"},{"lineNumber":109,"author":{"gitId":"ong6"},"content":""},{"lineNumber":110,"author":{"gitId":"ong6"},"content":"Example of usage 1:"},{"lineNumber":111,"author":{"gitId":"ong6"},"content":""},{"lineNumber":112,"author":{"gitId":"ong6"},"content":"`event sample event /at 2020-10-01`"},{"lineNumber":113,"author":{"gitId":"ong6"},"content":""},{"lineNumber":114,"author":{"gitId":"ong6"},"content":"Expected outcome 1:"},{"lineNumber":115,"author":{"gitId":"ong6"},"content":""},{"lineNumber":116,"author":{"gitId":"ong6"},"content":"```"},{"lineNumber":117,"author":{"gitId":"ong6"},"content":"Got it. I\u0027ve added this task:"},{"lineNumber":118,"author":{"gitId":"ong6"},"content":"[E][✘] sample event (at: 12:00 PM   Oct 1 2020)"},{"lineNumber":119,"author":{"gitId":"ong6"},"content":"Now your have 9 tasks in the list."},{"lineNumber":120,"author":{"gitId":"ong6"},"content":"```"},{"lineNumber":121,"author":{"gitId":"ong6"},"content":""},{"lineNumber":122,"author":{"gitId":"ong6"},"content":"### `delete` - Delete Command"},{"lineNumber":123,"author":{"gitId":"ong6"},"content":""},{"lineNumber":124,"author":{"gitId":"ong6"},"content":"Delete the task of the given index."},{"lineNumber":125,"author":{"gitId":"ong6"},"content":""},{"lineNumber":126,"author":{"gitId":"ong6"},"content":"Format:"},{"lineNumber":127,"author":{"gitId":"ong6"},"content":""},{"lineNumber":128,"author":{"gitId":"ong6"},"content":"`delete \u003cindex\u003e`"},{"lineNumber":129,"author":{"gitId":"ong6"},"content":""},{"lineNumber":130,"author":{"gitId":"ong6"},"content":"Example of usage:"},{"lineNumber":131,"author":{"gitId":"ong6"},"content":""},{"lineNumber":132,"author":{"gitId":"ong6"},"content":"`delete 7`"},{"lineNumber":133,"author":{"gitId":"ong6"},"content":""},{"lineNumber":134,"author":{"gitId":"ong6"},"content":"Expected outcome:"},{"lineNumber":135,"author":{"gitId":"ong6"},"content":""},{"lineNumber":136,"author":{"gitId":"ong6"},"content":"```"},{"lineNumber":137,"author":{"gitId":"ong6"},"content":"Noted. I\u0027ve removed this task:"},{"lineNumber":138,"author":{"gitId":"ong6"},"content":"[T][✘] sample task"},{"lineNumber":139,"author":{"gitId":"ong6"},"content":"Now your have 9 tasks."},{"lineNumber":140,"author":{"gitId":"ong6"},"content":"```"},{"lineNumber":141,"author":{"gitId":"ong6"},"content":""},{"lineNumber":142,"author":{"gitId":"ong6"},"content":"### `done` - Done Command"},{"lineNumber":143,"author":{"gitId":"ong6"},"content":""},{"lineNumber":144,"author":{"gitId":"ong6"},"content":"Mark the task of the given index as done."},{"lineNumber":145,"author":{"gitId":"ong6"},"content":""},{"lineNumber":146,"author":{"gitId":"ong6"},"content":"Format:"},{"lineNumber":147,"author":{"gitId":"ong6"},"content":""},{"lineNumber":148,"author":{"gitId":"ong6"},"content":"`done \u003cindex\u003e`"},{"lineNumber":149,"author":{"gitId":"ong6"},"content":""},{"lineNumber":150,"author":{"gitId":"ong6"},"content":"Example of usage:"},{"lineNumber":151,"author":{"gitId":"ong6"},"content":""},{"lineNumber":152,"author":{"gitId":"ong6"},"content":"`done 7`"},{"lineNumber":153,"author":{"gitId":"ong6"},"content":""},{"lineNumber":154,"author":{"gitId":"ong6"},"content":"Expected outcome:"},{"lineNumber":155,"author":{"gitId":"ong6"},"content":""},{"lineNumber":156,"author":{"gitId":"ong6"},"content":"```"},{"lineNumber":157,"author":{"gitId":"ong6"},"content":"Nice! I\u0027ve marked this task as done:"},{"lineNumber":158,"author":{"gitId":"ong6"},"content":"[D][✘] sample deadline (by Sep 30 2020)"},{"lineNumber":159,"author":{"gitId":"ong6"},"content":"```"},{"lineNumber":160,"author":{"gitId":"ong6"},"content":""},{"lineNumber":161,"author":{"gitId":"ong6"},"content":"### `find` - Find Filter Command"},{"lineNumber":162,"author":{"gitId":"ong6"},"content":""},{"lineNumber":163,"author":{"gitId":"ong6"},"content":"Filter tasks that contains the given substring. The end date should not occur"},{"lineNumber":164,"author":{"gitId":"ong6"},"content":"before the start date."},{"lineNumber":165,"author":{"gitId":"ong6"},"content":""},{"lineNumber":166,"author":{"gitId":"ong6"},"content":"Format:"},{"lineNumber":167,"author":{"gitId":"ong6"},"content":""},{"lineNumber":168,"author":{"gitId":"ong6"},"content":"`find \u003csubstring\u003e`"},{"lineNumber":169,"author":{"gitId":"ong6"},"content":""},{"lineNumber":170,"author":{"gitId":"ong6"},"content":"Example of usage:"},{"lineNumber":171,"author":{"gitId":"ong6"},"content":""},{"lineNumber":172,"author":{"gitId":"ong6"},"content":"`find cs`"},{"lineNumber":173,"author":{"gitId":"ong6"},"content":""},{"lineNumber":174,"author":{"gitId":"ong6"},"content":"Expected outcome:"},{"lineNumber":175,"author":{"gitId":"ong6"},"content":""},{"lineNumber":176,"author":{"gitId":"ong6"},"content":"```"},{"lineNumber":177,"author":{"gitId":"ong6"},"content":"Here are the tasks containing \u0027cs\u0027 in your list:"},{"lineNumber":178,"author":{"gitId":"ong6"},"content":""},{"lineNumber":179,"author":{"gitId":"ong6"},"content":"2.[D][✓] cs2102 tutorial 1 (by: Sep 4 2020 repeat every 1 days)"},{"lineNumber":180,"author":{"gitId":"ong6"},"content":"4.[D][✘] cs2101 email (by: Sep 14 2020)"},{"lineNumber":181,"author":{"gitId":"ong6"},"content":"5.[E][✘] cs2103 project meeting (at: 2020-09-30 12:00/2020-10-01 12:00)"},{"lineNumber":182,"author":{"gitId":"ong6"},"content":"6.[E][✓] cs2102 project meeting (at: 07:00 PM   Oct 1 2020 repeat every 3 days)"},{"lineNumber":183,"author":{"gitId":"ong6"},"content":"```"},{"lineNumber":184,"author":{"gitId":"ong6"},"content":""},{"lineNumber":185,"author":{"gitId":"ong6"},"content":"### `Archive` - Done Command"},{"lineNumber":186,"author":{"gitId":"ong6"},"content":""},{"lineNumber":187,"author":{"gitId":"ong6"},"content":"Saves the current list to a file of your choice."},{"lineNumber":188,"author":{"gitId":"ong6"},"content":""},{"lineNumber":189,"author":{"gitId":"ong6"},"content":"Format:"},{"lineNumber":190,"author":{"gitId":"ong6"},"content":""},{"lineNumber":191,"author":{"gitId":"ong6"},"content":"`archive \u003cfilename.txt\u003e`"},{"lineNumber":192,"author":{"gitId":"ong6"},"content":""},{"lineNumber":193,"author":{"gitId":"ong6"},"content":"Example of usage:"},{"lineNumber":194,"author":{"gitId":"ong6"},"content":""},{"lineNumber":195,"author":{"gitId":"ong6"},"content":"`archive test.txt`"},{"lineNumber":196,"author":{"gitId":"ong6"},"content":""},{"lineNumber":197,"author":{"gitId":"ong6"},"content":"Expected outcome:"},{"lineNumber":198,"author":{"gitId":"ong6"},"content":""},{"lineNumber":199,"author":{"gitId":"ong6"},"content":"```"},{"lineNumber":200,"author":{"gitId":"ong6"},"content":"Noted. The following tasks have been archived to this file test.txt:"},{"lineNumber":201,"author":{"gitId":"ong6"},"content":""},{"lineNumber":202,"author":{"gitId":"ong6"},"content":"1.[T][✘] borrow books"},{"lineNumber":203,"author":{"gitId":"ong6"},"content":"2.[D][ ] cs2102 tutorial 1 (by: Sep 4 2020)"},{"lineNumber":204,"author":{"gitId":"ong6"},"content":"3.[T][ ] return books"},{"lineNumber":205,"author":{"gitId":"ong6"},"content":"4.[D][✘] cs2101 email (by: Sep 14 2020)"},{"lineNumber":206,"author":{"gitId":"ong6"},"content":"5.[E][✘] cs2103 project meeting (at: 2020-09-30 12:00/2020-10-01 12:00)"},{"lineNumber":207,"author":{"gitId":"ong6"},"content":"6.[E][ ] cs2102 project meeting (Oct 1 2020)"},{"lineNumber":208,"author":{"gitId":"ong6"},"content":"```"},{"lineNumber":209,"author":{"gitId":"ong6"},"content":""},{"lineNumber":210,"author":{"gitId":"ong6"},"content":"## Trouble shooting"},{"lineNumber":211,"author":{"gitId":"ong6"},"content":""},{"lineNumber":212,"author":{"gitId":"ong6"},"content":"If you are sure that you have some tasks in your list but they don\u0027t show up,"},{"lineNumber":213,"author":{"gitId":"ong6"},"content":"please check the resource file located at src/main/resources/tasks.txt to see if"},{"lineNumber":214,"author":{"gitId":"ong6"},"content":"the input format of tasks are correct."},{"lineNumber":215,"author":{"gitId":"ong6"},"content":""},{"lineNumber":216,"author":{"gitId":"ong6"},"content":"## Acknowledgements"},{"lineNumber":217,"author":{"gitId":"ong6"},"content":""},{"lineNumber":218,"author":{"gitId":"ong6"},"content":"This user guide was adapted from https://github.com/lll-jy\u0027s user guide."}],"authorContributionMap":{"ong6":197,"-":21}},{"path":"duke.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"ong6"},"content":"T | 0 | borrow book |  "},{"lineNumber":2,"author":{"gitId":"ong6"},"content":"D | 0 | return book  | Sunday"},{"lineNumber":3,"author":{"gitId":"ong6"},"content":"D | 0 | do homework  | no idea :-p"},{"lineNumber":4,"author":{"gitId":"ong6"},"content":"D | 0 | do dishes  | Oct 11 2019"},{"lineNumber":5,"author":{"gitId":"ong6"},"content":"E | 0 | do tasks  | Jan 15 2020"}],"authorContributionMap":{"ong6":5}},{"path":"src/main/java/DialogBox.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ong6"},"content":""},{"lineNumber":2,"author":{"gitId":"ong6"},"content":"// Solution below are adapted from https://se-education.org/guides/tutorials/javaFx.html"},{"lineNumber":3,"author":{"gitId":"ong6"},"content":"import java.io.IOException;"},{"lineNumber":4,"author":{"gitId":"ong6"},"content":"import java.util.Collections;"},{"lineNumber":5,"author":{"gitId":"ong6"},"content":""},{"lineNumber":6,"author":{"gitId":"ong6"},"content":"import javafx.collections.FXCollections;"},{"lineNumber":7,"author":{"gitId":"ong6"},"content":"import javafx.collections.ObservableList;"},{"lineNumber":8,"author":{"gitId":"ong6"},"content":"import javafx.fxml.FXML;"},{"lineNumber":9,"author":{"gitId":"ong6"},"content":"import javafx.fxml.FXMLLoader;"},{"lineNumber":10,"author":{"gitId":"ong6"},"content":"import javafx.geometry.Pos;"},{"lineNumber":11,"author":{"gitId":"ong6"},"content":"import javafx.scene.Node;"},{"lineNumber":12,"author":{"gitId":"ong6"},"content":"import javafx.scene.control.Label;"},{"lineNumber":13,"author":{"gitId":"ong6"},"content":"import javafx.scene.image.Image;"},{"lineNumber":14,"author":{"gitId":"ong6"},"content":"import javafx.scene.image.ImageView;"},{"lineNumber":15,"author":{"gitId":"ong6"},"content":"import javafx.scene.layout.HBox;"},{"lineNumber":16,"author":{"gitId":"ong6"},"content":""},{"lineNumber":17,"author":{"gitId":"ong6"},"content":"/**"},{"lineNumber":18,"author":{"gitId":"ong6"},"content":" * An example of a custom control using FXML. This control represents a dialog"},{"lineNumber":19,"author":{"gitId":"ong6"},"content":" * box consisting of an ImageView to represent the speaker\u0027s face and a label"},{"lineNumber":20,"author":{"gitId":"ong6"},"content":" * containing text from the speaker."},{"lineNumber":21,"author":{"gitId":"ong6"},"content":" */"},{"lineNumber":22,"author":{"gitId":"ong6"},"content":"public class DialogBox extends HBox {"},{"lineNumber":23,"author":{"gitId":"ong6"},"content":"    @FXML"},{"lineNumber":24,"author":{"gitId":"ong6"},"content":"    private Label dialog;"},{"lineNumber":25,"author":{"gitId":"ong6"},"content":"    @FXML"},{"lineNumber":26,"author":{"gitId":"ong6"},"content":"    private ImageView displayPicture;"},{"lineNumber":27,"author":{"gitId":"ong6"},"content":""},{"lineNumber":28,"author":{"gitId":"ong6"},"content":"    private DialogBox(String text, Image img, boolean isUser) {"},{"lineNumber":29,"author":{"gitId":"ong6"},"content":"        FXMLLoader fxmlLoader;"},{"lineNumber":30,"author":{"gitId":"ong6"},"content":"        if (isUser) {"},{"lineNumber":31,"author":{"gitId":"ong6"},"content":"            fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(\"/view/DialogBoxUser.fxml\"));"},{"lineNumber":32,"author":{"gitId":"ong6"},"content":"        } else {"},{"lineNumber":33,"author":{"gitId":"ong6"},"content":"            fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(\"/view/DialogBox.fxml\"));"},{"lineNumber":34,"author":{"gitId":"ong6"},"content":"        }"},{"lineNumber":35,"author":{"gitId":"ong6"},"content":"        try {"},{"lineNumber":36,"author":{"gitId":"ong6"},"content":"            fxmlLoader.setController(this);"},{"lineNumber":37,"author":{"gitId":"ong6"},"content":"            fxmlLoader.setRoot(this);"},{"lineNumber":38,"author":{"gitId":"ong6"},"content":"            fxmlLoader.load();"},{"lineNumber":39,"author":{"gitId":"ong6"},"content":"        } catch (IOException e) {"},{"lineNumber":40,"author":{"gitId":"ong6"},"content":"            e.printStackTrace();"},{"lineNumber":41,"author":{"gitId":"ong6"},"content":"        }"},{"lineNumber":42,"author":{"gitId":"ong6"},"content":""},{"lineNumber":43,"author":{"gitId":"ong6"},"content":"        dialog.setText(text);"},{"lineNumber":44,"author":{"gitId":"ong6"},"content":"        displayPicture.setImage(img);"},{"lineNumber":45,"author":{"gitId":"ong6"},"content":"    }"},{"lineNumber":46,"author":{"gitId":"ong6"},"content":""},{"lineNumber":47,"author":{"gitId":"ong6"},"content":"    /**"},{"lineNumber":48,"author":{"gitId":"ong6"},"content":"     * Flips the dialog box such that the ImageView is on the left and text on the"},{"lineNumber":49,"author":{"gitId":"ong6"},"content":"     * right."},{"lineNumber":50,"author":{"gitId":"ong6"},"content":"     */"},{"lineNumber":51,"author":{"gitId":"ong6"},"content":"    private void flip() {"},{"lineNumber":52,"author":{"gitId":"ong6"},"content":"        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());"},{"lineNumber":53,"author":{"gitId":"ong6"},"content":"        Collections.reverse(tmp);"},{"lineNumber":54,"author":{"gitId":"ong6"},"content":"        getChildren().setAll(tmp);"},{"lineNumber":55,"author":{"gitId":"ong6"},"content":"        setAlignment(Pos.TOP_LEFT);"},{"lineNumber":56,"author":{"gitId":"ong6"},"content":"    }"},{"lineNumber":57,"author":{"gitId":"ong6"},"content":""},{"lineNumber":58,"author":{"gitId":"ong6"},"content":"    public static DialogBox getUserDialog(String text, Image img) {"},{"lineNumber":59,"author":{"gitId":"ong6"},"content":"        return new DialogBox(text, img, true);"},{"lineNumber":60,"author":{"gitId":"ong6"},"content":"    }"},{"lineNumber":61,"author":{"gitId":"ong6"},"content":""},{"lineNumber":62,"author":{"gitId":"ong6"},"content":"    /**"},{"lineNumber":63,"author":{"gitId":"ong6"},"content":"     * Creates the dialog box for Duke\u0027s reply."},{"lineNumber":64,"author":{"gitId":"ong6"},"content":"     * @param text the text output."},{"lineNumber":65,"author":{"gitId":"ong6"},"content":"     * @param img  duke\u0027s image"},{"lineNumber":66,"author":{"gitId":"ong6"},"content":"     * @return"},{"lineNumber":67,"author":{"gitId":"ong6"},"content":"     */"},{"lineNumber":68,"author":{"gitId":"ong6"},"content":"    public static DialogBox getDukeDialog(String text, Image img) {"},{"lineNumber":69,"author":{"gitId":"ong6"},"content":"        var db \u003d new DialogBox(text, img, false);"},{"lineNumber":70,"author":{"gitId":"ong6"},"content":"        db.flip();"},{"lineNumber":71,"author":{"gitId":"ong6"},"content":"        return db;"},{"lineNumber":72,"author":{"gitId":"ong6"},"content":"    }"},{"lineNumber":73,"author":{"gitId":"ong6"},"content":"}"}],"authorContributionMap":{"ong6":73}},{"path":"src/main/java/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ong6"},"content":"import java.util.Scanner;"},{"lineNumber":2,"author":{"gitId":"ong6"},"content":""},{"lineNumber":3,"author":{"gitId":"ong6"},"content":"import duke.Parser;"},{"lineNumber":4,"author":{"gitId":"ong6"},"content":"import duke.Storage;"},{"lineNumber":5,"author":{"gitId":"ong6"},"content":"import duke.TaskList;"},{"lineNumber":6,"author":{"gitId":"ong6"},"content":""},{"lineNumber":7,"author":{"gitId":"-"},"content":"public class Duke {"},{"lineNumber":8,"author":{"gitId":"ong6"},"content":""},{"lineNumber":9,"author":{"gitId":"ong6"},"content":"    private Storage storage;"},{"lineNumber":10,"author":{"gitId":"ong6"},"content":"    private TaskList tasks;"},{"lineNumber":11,"author":{"gitId":"ong6"},"content":""},{"lineNumber":12,"author":{"gitId":"ong6"},"content":"    /**"},{"lineNumber":13,"author":{"gitId":"ong6"},"content":"     * Initialization of the Storage, TaskList and Ui."},{"lineNumber":14,"author":{"gitId":"ong6"},"content":"     * @param filePath The file path for storage of data."},{"lineNumber":15,"author":{"gitId":"ong6"},"content":"     */"},{"lineNumber":16,"author":{"gitId":"ong6"},"content":"    public Duke(String filePath) {"},{"lineNumber":17,"author":{"gitId":"ong6"},"content":"        try {"},{"lineNumber":18,"author":{"gitId":"ong6"},"content":"            this.storage \u003d new Storage(filePath);"},{"lineNumber":19,"author":{"gitId":"ong6"},"content":"            this.tasks \u003d new TaskList(storage.load());"},{"lineNumber":20,"author":{"gitId":"ong6"},"content":"        } catch (Exception e) {"},{"lineNumber":21,"author":{"gitId":"ong6"},"content":"            this.tasks \u003d new TaskList();"},{"lineNumber":22,"author":{"gitId":"ong6"},"content":"        }"},{"lineNumber":23,"author":{"gitId":"ong6"},"content":"    }"},{"lineNumber":24,"author":{"gitId":"ong6"},"content":""},{"lineNumber":25,"author":{"gitId":"ong6"},"content":"    /**"},{"lineNumber":26,"author":{"gitId":"ong6"},"content":"     * Starts the program to handle user interaction."},{"lineNumber":27,"author":{"gitId":"ong6"},"content":"     */"},{"lineNumber":28,"author":{"gitId":"ong6"},"content":"    public void run() {"},{"lineNumber":29,"author":{"gitId":"ong6"},"content":"        Scanner sc \u003d new Scanner(System.in);"},{"lineNumber":30,"author":{"gitId":"ong6"},"content":"        Parser p \u003d new Parser(storage, tasks);"},{"lineNumber":31,"author":{"gitId":"ong6"},"content":"        while (sc.hasNextLine()) {"},{"lineNumber":32,"author":{"gitId":"ong6"},"content":"            String input \u003d sc.nextLine();"},{"lineNumber":33,"author":{"gitId":"ong6"},"content":"            System.out.println(p.response(input));"},{"lineNumber":34,"author":{"gitId":"ong6"},"content":"            if (input.equals(\"bye\")) {"},{"lineNumber":35,"author":{"gitId":"ong6"},"content":"                break;"},{"lineNumber":36,"author":{"gitId":"ong6"},"content":"            }"},{"lineNumber":37,"author":{"gitId":"ong6"},"content":"        }"},{"lineNumber":38,"author":{"gitId":"ong6"},"content":"        sc.close();"},{"lineNumber":39,"author":{"gitId":"ong6"},"content":"    }"},{"lineNumber":40,"author":{"gitId":"ong6"},"content":""},{"lineNumber":41,"author":{"gitId":"ong6"},"content":"    /**"},{"lineNumber":42,"author":{"gitId":"ong6"},"content":"     * Starts the program."},{"lineNumber":43,"author":{"gitId":"ong6"},"content":"     */"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public static void main(String[] args) {"},{"lineNumber":45,"author":{"gitId":"ong6"},"content":"        new Duke(\"duke.txt\").run();"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":47,"author":{"gitId":"ong6"},"content":""},{"lineNumber":48,"author":{"gitId":"-"},"content":"}"}],"authorContributionMap":{"ong6":44,"-":4}},{"path":"src/main/java/DukeUi.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ong6"},"content":"import duke.Parser;"},{"lineNumber":2,"author":{"gitId":"ong6"},"content":"import duke.Storage;"},{"lineNumber":3,"author":{"gitId":"ong6"},"content":"import duke.TaskList;"},{"lineNumber":4,"author":{"gitId":"ong6"},"content":""},{"lineNumber":5,"author":{"gitId":"ong6"},"content":"public class DukeUi {"},{"lineNumber":6,"author":{"gitId":"ong6"},"content":""},{"lineNumber":7,"author":{"gitId":"ong6"},"content":"    private Storage storage;"},{"lineNumber":8,"author":{"gitId":"ong6"},"content":"    private TaskList tasks;"},{"lineNumber":9,"author":{"gitId":"ong6"},"content":"    private Parser parser;"},{"lineNumber":10,"author":{"gitId":"ong6"},"content":""},{"lineNumber":11,"author":{"gitId":"ong6"},"content":"    /**"},{"lineNumber":12,"author":{"gitId":"ong6"},"content":"     * Runs DukeUi with a default file storage called \"duke.txt\""},{"lineNumber":13,"author":{"gitId":"ong6"},"content":"     * @param filePath location of file."},{"lineNumber":14,"author":{"gitId":"ong6"},"content":"     */"},{"lineNumber":15,"author":{"gitId":"ong6"},"content":"    public DukeUi(String filePath) {"},{"lineNumber":16,"author":{"gitId":"ong6"},"content":"        try {"},{"lineNumber":17,"author":{"gitId":"ong6"},"content":"            this.storage \u003d new Storage(filePath);"},{"lineNumber":18,"author":{"gitId":"ong6"},"content":"            this.tasks \u003d new TaskList(storage.load());"},{"lineNumber":19,"author":{"gitId":"ong6"},"content":"        } catch (Exception e) {"},{"lineNumber":20,"author":{"gitId":"ong6"},"content":"            this.tasks \u003d new TaskList();"},{"lineNumber":21,"author":{"gitId":"ong6"},"content":"        }"},{"lineNumber":22,"author":{"gitId":"ong6"},"content":"        this.parser \u003d new Parser(storage, tasks);"},{"lineNumber":23,"author":{"gitId":"ong6"},"content":"    }"},{"lineNumber":24,"author":{"gitId":"ong6"},"content":""},{"lineNumber":25,"author":{"gitId":"ong6"},"content":"    public String getResponse(String input) {"},{"lineNumber":26,"author":{"gitId":"ong6"},"content":"        return this.parser.response(input);"},{"lineNumber":27,"author":{"gitId":"ong6"},"content":"    }"},{"lineNumber":28,"author":{"gitId":"ong6"},"content":""},{"lineNumber":29,"author":{"gitId":"ong6"},"content":"}"}],"authorContributionMap":{"ong6":29}},{"path":"src/main/java/Launcher.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ong6"},"content":"import javafx.application.Application;"},{"lineNumber":2,"author":{"gitId":"ong6"},"content":""},{"lineNumber":3,"author":{"gitId":"ong6"},"content":"/**"},{"lineNumber":4,"author":{"gitId":"ong6"},"content":" * A launcher class to workaround classpath issues."},{"lineNumber":5,"author":{"gitId":"ong6"},"content":" */"},{"lineNumber":6,"author":{"gitId":"ong6"},"content":"public class Launcher {"},{"lineNumber":7,"author":{"gitId":"ong6"},"content":"    public static void main(String[] args) {"},{"lineNumber":8,"author":{"gitId":"ong6"},"content":"        Application.launch(Main.class, args);"},{"lineNumber":9,"author":{"gitId":"ong6"},"content":"    }"},{"lineNumber":10,"author":{"gitId":"ong6"},"content":"}"}],"authorContributionMap":{"ong6":10}},{"path":"src/main/java/Main.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ong6"},"content":"import java.io.IOException;"},{"lineNumber":2,"author":{"gitId":"ong6"},"content":""},{"lineNumber":3,"author":{"gitId":"ong6"},"content":"import javafx.application.Application;"},{"lineNumber":4,"author":{"gitId":"ong6"},"content":"import javafx.fxml.FXMLLoader;"},{"lineNumber":5,"author":{"gitId":"ong6"},"content":"import javafx.scene.Scene;"},{"lineNumber":6,"author":{"gitId":"ong6"},"content":"import javafx.scene.layout.AnchorPane;"},{"lineNumber":7,"author":{"gitId":"ong6"},"content":"import javafx.stage.Stage;"},{"lineNumber":8,"author":{"gitId":"ong6"},"content":""},{"lineNumber":9,"author":{"gitId":"ong6"},"content":"/**"},{"lineNumber":10,"author":{"gitId":"ong6"},"content":" * A GUI for Duke using FXML."},{"lineNumber":11,"author":{"gitId":"ong6"},"content":" */"},{"lineNumber":12,"author":{"gitId":"ong6"},"content":"public class Main extends Application {"},{"lineNumber":13,"author":{"gitId":"ong6"},"content":""},{"lineNumber":14,"author":{"gitId":"ong6"},"content":"    private DukeUi duke \u003d new DukeUi(\"duke.txt\");"},{"lineNumber":15,"author":{"gitId":"ong6"},"content":""},{"lineNumber":16,"author":{"gitId":"ong6"},"content":"    @Override"},{"lineNumber":17,"author":{"gitId":"ong6"},"content":"    public void start(Stage stage) {"},{"lineNumber":18,"author":{"gitId":"ong6"},"content":"        try {"},{"lineNumber":19,"author":{"gitId":"ong6"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(Main.class.getResource(\"/view/MainWindow.fxml\"));"},{"lineNumber":20,"author":{"gitId":"ong6"},"content":"            AnchorPane ap \u003d fxmlLoader.load();"},{"lineNumber":21,"author":{"gitId":"ong6"},"content":"            Scene scene \u003d new Scene(ap);"},{"lineNumber":22,"author":{"gitId":"ong6"},"content":"            stage.setScene(scene);"},{"lineNumber":23,"author":{"gitId":"ong6"},"content":"            fxmlLoader.\u003cMainWindow\u003egetController().setDuke(duke);"},{"lineNumber":24,"author":{"gitId":"ong6"},"content":"            stage.show();"},{"lineNumber":25,"author":{"gitId":"ong6"},"content":"        } catch (IOException e) {"},{"lineNumber":26,"author":{"gitId":"ong6"},"content":"            e.printStackTrace();"},{"lineNumber":27,"author":{"gitId":"ong6"},"content":"        }"},{"lineNumber":28,"author":{"gitId":"ong6"},"content":"    }"},{"lineNumber":29,"author":{"gitId":"ong6"},"content":"}"}],"authorContributionMap":{"ong6":29}},{"path":"src/main/java/MainWindow.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ong6"},"content":""},{"lineNumber":2,"author":{"gitId":"ong6"},"content":"// Solution below are adapted from https://se-education.org/guides/tutorials/javaFx.html"},{"lineNumber":3,"author":{"gitId":"ong6"},"content":"import duke.Ui;"},{"lineNumber":4,"author":{"gitId":"ong6"},"content":"import javafx.fxml.FXML;"},{"lineNumber":5,"author":{"gitId":"ong6"},"content":"import javafx.scene.control.Button;"},{"lineNumber":6,"author":{"gitId":"ong6"},"content":"import javafx.scene.control.ScrollPane;"},{"lineNumber":7,"author":{"gitId":"ong6"},"content":"import javafx.scene.control.TextField;"},{"lineNumber":8,"author":{"gitId":"ong6"},"content":"import javafx.scene.image.Image;"},{"lineNumber":9,"author":{"gitId":"ong6"},"content":"import javafx.scene.layout.AnchorPane;"},{"lineNumber":10,"author":{"gitId":"ong6"},"content":"import javafx.scene.layout.VBox;"},{"lineNumber":11,"author":{"gitId":"ong6"},"content":""},{"lineNumber":12,"author":{"gitId":"ong6"},"content":"/**"},{"lineNumber":13,"author":{"gitId":"ong6"},"content":" * Controller for MainWindow. Provides the layout for the other controls."},{"lineNumber":14,"author":{"gitId":"ong6"},"content":" */"},{"lineNumber":15,"author":{"gitId":"ong6"},"content":"public class MainWindow extends AnchorPane {"},{"lineNumber":16,"author":{"gitId":"ong6"},"content":"    @FXML"},{"lineNumber":17,"author":{"gitId":"ong6"},"content":"    private ScrollPane scrollPane;"},{"lineNumber":18,"author":{"gitId":"ong6"},"content":"    @FXML"},{"lineNumber":19,"author":{"gitId":"ong6"},"content":"    private VBox dialogContainer;"},{"lineNumber":20,"author":{"gitId":"ong6"},"content":"    @FXML"},{"lineNumber":21,"author":{"gitId":"ong6"},"content":"    private TextField userInput;"},{"lineNumber":22,"author":{"gitId":"ong6"},"content":"    @FXML"},{"lineNumber":23,"author":{"gitId":"ong6"},"content":"    private Button sendButton;"},{"lineNumber":24,"author":{"gitId":"ong6"},"content":""},{"lineNumber":25,"author":{"gitId":"ong6"},"content":"    private DukeUi duke;"},{"lineNumber":26,"author":{"gitId":"ong6"},"content":""},{"lineNumber":27,"author":{"gitId":"ong6"},"content":"    private Image userImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaUser.png\"));"},{"lineNumber":28,"author":{"gitId":"ong6"},"content":"    private Image dukeImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaDuke.png\"));"},{"lineNumber":29,"author":{"gitId":"ong6"},"content":""},{"lineNumber":30,"author":{"gitId":"ong6"},"content":"    @FXML"},{"lineNumber":31,"author":{"gitId":"ong6"},"content":"    public void initialize() {"},{"lineNumber":32,"author":{"gitId":"ong6"},"content":"        scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());"},{"lineNumber":33,"author":{"gitId":"ong6"},"content":"    }"},{"lineNumber":34,"author":{"gitId":"ong6"},"content":""},{"lineNumber":35,"author":{"gitId":"ong6"},"content":"    public void setDuke(DukeUi d) {"},{"lineNumber":36,"author":{"gitId":"ong6"},"content":"        duke \u003d d;"},{"lineNumber":37,"author":{"gitId":"ong6"},"content":"        dialogContainer.getChildren().addAll(DialogBox.getDukeDialog(Ui.showWelcome(), dukeImage));"},{"lineNumber":38,"author":{"gitId":"ong6"},"content":"    }"},{"lineNumber":39,"author":{"gitId":"ong6"},"content":""},{"lineNumber":40,"author":{"gitId":"ong6"},"content":"    /**"},{"lineNumber":41,"author":{"gitId":"ong6"},"content":"     * Creates two dialog boxes, one echoing user input and the other containing"},{"lineNumber":42,"author":{"gitId":"ong6"},"content":"     * Duke\u0027s reply and then appends them to the dialog container. Clears the user"},{"lineNumber":43,"author":{"gitId":"ong6"},"content":"     * input after processing."},{"lineNumber":44,"author":{"gitId":"ong6"},"content":"     */"},{"lineNumber":45,"author":{"gitId":"ong6"},"content":"    @FXML"},{"lineNumber":46,"author":{"gitId":"ong6"},"content":"    private void handleUserInput() {"},{"lineNumber":47,"author":{"gitId":"ong6"},"content":"        String input \u003d userInput.getText();"},{"lineNumber":48,"author":{"gitId":"ong6"},"content":"        String response \u003d duke.getResponse(input);"},{"lineNumber":49,"author":{"gitId":"ong6"},"content":"        dialogContainer.getChildren().addAll(DialogBox.getUserDialog(input, userImage),"},{"lineNumber":50,"author":{"gitId":"ong6"},"content":"                DialogBox.getDukeDialog(response, dukeImage));"},{"lineNumber":51,"author":{"gitId":"ong6"},"content":"        userInput.clear();"},{"lineNumber":52,"author":{"gitId":"ong6"},"content":"    }"},{"lineNumber":53,"author":{"gitId":"ong6"},"content":"}"}],"authorContributionMap":{"ong6":53}},{"path":"src/main/java/duke/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ong6"},"content":"package duke;"},{"lineNumber":2,"author":{"gitId":"ong6"},"content":""},{"lineNumber":3,"author":{"gitId":"ong6"},"content":"public class Deadline extends Task {"},{"lineNumber":4,"author":{"gitId":"ong6"},"content":""},{"lineNumber":5,"author":{"gitId":"ong6"},"content":"    public Deadline(String input) {"},{"lineNumber":6,"author":{"gitId":"ong6"},"content":"        super(\"D\", input);"},{"lineNumber":7,"author":{"gitId":"ong6"},"content":"    }"},{"lineNumber":8,"author":{"gitId":"ong6"},"content":""},{"lineNumber":9,"author":{"gitId":"ong6"},"content":"    public Deadline(String[] inputArray) {"},{"lineNumber":10,"author":{"gitId":"ong6"},"content":"        super(\"D\", inputArray);"},{"lineNumber":11,"author":{"gitId":"ong6"},"content":"    }"},{"lineNumber":12,"author":{"gitId":"ong6"},"content":""},{"lineNumber":13,"author":{"gitId":"ong6"},"content":"    @Override"},{"lineNumber":14,"author":{"gitId":"ong6"},"content":"    public String toString() {"},{"lineNumber":15,"author":{"gitId":"ong6"},"content":"        if (this.getDate().equals(\" \")) {"},{"lineNumber":16,"author":{"gitId":"ong6"},"content":"            return super.toString();"},{"lineNumber":17,"author":{"gitId":"ong6"},"content":"        } else {"},{"lineNumber":18,"author":{"gitId":"ong6"},"content":"            return String.format(\"%s (by: %s)\", super.toString(), this.getDate());"},{"lineNumber":19,"author":{"gitId":"ong6"},"content":"        }"},{"lineNumber":20,"author":{"gitId":"ong6"},"content":"    }"},{"lineNumber":21,"author":{"gitId":"ong6"},"content":""},{"lineNumber":22,"author":{"gitId":"ong6"},"content":"}"}],"authorContributionMap":{"ong6":22}},{"path":"src/main/java/duke/DukeGeneralException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ong6"},"content":"package duke;"},{"lineNumber":2,"author":{"gitId":"ong6"},"content":""},{"lineNumber":3,"author":{"gitId":"ong6"},"content":"public class DukeGeneralException extends Exception {"},{"lineNumber":4,"author":{"gitId":"ong6"},"content":"    public DukeGeneralException(String msg) {"},{"lineNumber":5,"author":{"gitId":"ong6"},"content":"        super(msg);"},{"lineNumber":6,"author":{"gitId":"ong6"},"content":"    }"},{"lineNumber":7,"author":{"gitId":"ong6"},"content":"}"}],"authorContributionMap":{"ong6":7}},{"path":"src/main/java/duke/DukeTaskException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ong6"},"content":"package duke;"},{"lineNumber":2,"author":{"gitId":"ong6"},"content":""},{"lineNumber":3,"author":{"gitId":"ong6"},"content":"public class DukeTaskException extends Exception {"},{"lineNumber":4,"author":{"gitId":"ong6"},"content":"    public DukeTaskException(String msg) {"},{"lineNumber":5,"author":{"gitId":"ong6"},"content":"        super(msg);"},{"lineNumber":6,"author":{"gitId":"ong6"},"content":"    }"},{"lineNumber":7,"author":{"gitId":"ong6"},"content":"}"}],"authorContributionMap":{"ong6":7}},{"path":"src/main/java/duke/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ong6"},"content":"package duke;"},{"lineNumber":2,"author":{"gitId":"ong6"},"content":""},{"lineNumber":3,"author":{"gitId":"ong6"},"content":"public class Event extends Task {"},{"lineNumber":4,"author":{"gitId":"ong6"},"content":""},{"lineNumber":5,"author":{"gitId":"ong6"},"content":"    public Event(String input) {"},{"lineNumber":6,"author":{"gitId":"ong6"},"content":"        super(\"E\", input);"},{"lineNumber":7,"author":{"gitId":"ong6"},"content":"    }"},{"lineNumber":8,"author":{"gitId":"ong6"},"content":""},{"lineNumber":9,"author":{"gitId":"ong6"},"content":"    public Event(String[] inputArray) {"},{"lineNumber":10,"author":{"gitId":"ong6"},"content":"        super(\"E\", inputArray);"},{"lineNumber":11,"author":{"gitId":"ong6"},"content":"    }"},{"lineNumber":12,"author":{"gitId":"ong6"},"content":""},{"lineNumber":13,"author":{"gitId":"ong6"},"content":"    @Override"},{"lineNumber":14,"author":{"gitId":"ong6"},"content":"    public String toString() {"},{"lineNumber":15,"author":{"gitId":"ong6"},"content":"        if (this.getDate().equals(\" \")) {"},{"lineNumber":16,"author":{"gitId":"ong6"},"content":"            return super.toString();"},{"lineNumber":17,"author":{"gitId":"ong6"},"content":"        } else {"},{"lineNumber":18,"author":{"gitId":"ong6"},"content":"            return String.format(\"%s (at: %s)\", super.toString(), this.getDate());"},{"lineNumber":19,"author":{"gitId":"ong6"},"content":"        }"},{"lineNumber":20,"author":{"gitId":"ong6"},"content":"    }"},{"lineNumber":21,"author":{"gitId":"ong6"},"content":""},{"lineNumber":22,"author":{"gitId":"ong6"},"content":"}"}],"authorContributionMap":{"ong6":22}},{"path":"src/main/java/duke/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ong6"},"content":"package duke;"},{"lineNumber":2,"author":{"gitId":"ong6"},"content":""},{"lineNumber":3,"author":{"gitId":"ong6"},"content":"import java.io.IOException;"},{"lineNumber":4,"author":{"gitId":"ong6"},"content":""},{"lineNumber":5,"author":{"gitId":"ong6"},"content":"/**"},{"lineNumber":6,"author":{"gitId":"ong6"},"content":" * Utility class to parse user input."},{"lineNumber":7,"author":{"gitId":"ong6"},"content":" */"},{"lineNumber":8,"author":{"gitId":"ong6"},"content":"public class Parser {"},{"lineNumber":9,"author":{"gitId":"ong6"},"content":""},{"lineNumber":10,"author":{"gitId":"ong6"},"content":"    private Storage storage;"},{"lineNumber":11,"author":{"gitId":"ong6"},"content":"    private TaskList tasks;"},{"lineNumber":12,"author":{"gitId":"ong6"},"content":""},{"lineNumber":13,"author":{"gitId":"ong6"},"content":"    /**"},{"lineNumber":14,"author":{"gitId":"ong6"},"content":"     * Parser contains the Storage, Tasks, and return duke.Ui classes and acts as an"},{"lineNumber":15,"author":{"gitId":"ong6"},"content":"     * intermediary for them to interact."},{"lineNumber":16,"author":{"gitId":"ong6"},"content":"     * @param storage Storage class"},{"lineNumber":17,"author":{"gitId":"ong6"},"content":"     * @param tasks   TaskList class"},{"lineNumber":18,"author":{"gitId":"ong6"},"content":"     */"},{"lineNumber":19,"author":{"gitId":"ong6"},"content":"    public Parser(Storage storage, TaskList tasks) {"},{"lineNumber":20,"author":{"gitId":"ong6"},"content":"        this.storage \u003d storage;"},{"lineNumber":21,"author":{"gitId":"ong6"},"content":"        this.tasks \u003d tasks;"},{"lineNumber":22,"author":{"gitId":"ong6"},"content":"    }"},{"lineNumber":23,"author":{"gitId":"ong6"},"content":""},{"lineNumber":24,"author":{"gitId":"ong6"},"content":"    /**"},{"lineNumber":25,"author":{"gitId":"ong6"},"content":"     * Instantiates the scanner and parses inputs."},{"lineNumber":26,"author":{"gitId":"ong6"},"content":"     */"},{"lineNumber":27,"author":{"gitId":"ong6"},"content":"    public String response(String input) {"},{"lineNumber":28,"author":{"gitId":"ong6"},"content":"        try {"},{"lineNumber":29,"author":{"gitId":"ong6"},"content":"            return identifyInput(input);"},{"lineNumber":30,"author":{"gitId":"ong6"},"content":"        } catch (DukeTaskException e1) {"},{"lineNumber":31,"author":{"gitId":"ong6"},"content":"            return duke.Ui.showDukeTaskError();"},{"lineNumber":32,"author":{"gitId":"ong6"},"content":"        } catch (IndexOutOfBoundsException e2) {"},{"lineNumber":33,"author":{"gitId":"ong6"},"content":"            return duke.Ui.showDukeEmptyListError();"},{"lineNumber":34,"author":{"gitId":"ong6"},"content":"        } catch (IOException e3) {"},{"lineNumber":35,"author":{"gitId":"ong6"},"content":"            return duke.Ui.showLoadingError();"},{"lineNumber":36,"author":{"gitId":"ong6"},"content":"        } catch (Exception e4) {"},{"lineNumber":37,"author":{"gitId":"ong6"},"content":"            return duke.Ui.showDukeGeneralError();"},{"lineNumber":38,"author":{"gitId":"ong6"},"content":"        }"},{"lineNumber":39,"author":{"gitId":"ong6"},"content":"    }"},{"lineNumber":40,"author":{"gitId":"ong6"},"content":""},{"lineNumber":41,"author":{"gitId":"ong6"},"content":"    private String identifyInput(String input) throws DukeGeneralException, DukeTaskException, IOException {"},{"lineNumber":42,"author":{"gitId":"ong6"},"content":"        Task temp;"},{"lineNumber":43,"author":{"gitId":"ong6"},"content":"        String output;"},{"lineNumber":44,"author":{"gitId":"ong6"},"content":"        switch (getCommand(input)) {"},{"lineNumber":45,"author":{"gitId":"ong6"},"content":"        case \"bye\":"},{"lineNumber":46,"author":{"gitId":"ong6"},"content":"            try {"},{"lineNumber":47,"author":{"gitId":"ong6"},"content":"                storage.save(tasks);"},{"lineNumber":48,"author":{"gitId":"ong6"},"content":"            } catch (IOException e) {"},{"lineNumber":49,"author":{"gitId":"ong6"},"content":"                return duke.Ui.showLoadingError();"},{"lineNumber":50,"author":{"gitId":"ong6"},"content":"            }"},{"lineNumber":51,"author":{"gitId":"ong6"},"content":"            output \u003d duke.Ui.showBye();"},{"lineNumber":52,"author":{"gitId":"ong6"},"content":"            break;"},{"lineNumber":53,"author":{"gitId":"ong6"},"content":"        case \"list\":"},{"lineNumber":54,"author":{"gitId":"ong6"},"content":"            if (tasks.isEmpty()) {"},{"lineNumber":55,"author":{"gitId":"ong6"},"content":"                return duke.Ui.showDukeEmptyListError();"},{"lineNumber":56,"author":{"gitId":"ong6"},"content":"            }"},{"lineNumber":57,"author":{"gitId":"ong6"},"content":"            output \u003d duke.Ui.showList(tasks);"},{"lineNumber":58,"author":{"gitId":"ong6"},"content":"            break;"},{"lineNumber":59,"author":{"gitId":"ong6"},"content":"        case \"find\":"},{"lineNumber":60,"author":{"gitId":"ong6"},"content":"            output \u003d duke.Ui.showFind(tasks, getMessage(input).trim());"},{"lineNumber":61,"author":{"gitId":"ong6"},"content":"            break;"},{"lineNumber":62,"author":{"gitId":"ong6"},"content":"        case \"done\":"},{"lineNumber":63,"author":{"gitId":"ong6"},"content":"            tasks.setDone(duke.Ui.getIndex(input));"},{"lineNumber":64,"author":{"gitId":"ong6"},"content":"            output \u003d duke.Ui.showDone(input, tasks);"},{"lineNumber":65,"author":{"gitId":"ong6"},"content":"            break;"},{"lineNumber":66,"author":{"gitId":"ong6"},"content":"        case \"todo\":"},{"lineNumber":67,"author":{"gitId":"ong6"},"content":"            temp \u003d new ToDo(getMessage(input));"},{"lineNumber":68,"author":{"gitId":"ong6"},"content":"            output \u003d duke.Ui.showTaskAdded(tasks, temp);"},{"lineNumber":69,"author":{"gitId":"ong6"},"content":"            tasks.add(temp);"},{"lineNumber":70,"author":{"gitId":"ong6"},"content":"            break;"},{"lineNumber":71,"author":{"gitId":"ong6"},"content":"        case \"deadline\":"},{"lineNumber":72,"author":{"gitId":"ong6"},"content":"            temp \u003d new Deadline(getMessage(input));"},{"lineNumber":73,"author":{"gitId":"ong6"},"content":"            output \u003d duke.Ui.showTaskAdded(tasks, temp);"},{"lineNumber":74,"author":{"gitId":"ong6"},"content":"            tasks.add(temp);"},{"lineNumber":75,"author":{"gitId":"ong6"},"content":"            break;"},{"lineNumber":76,"author":{"gitId":"ong6"},"content":"        case \"event\":"},{"lineNumber":77,"author":{"gitId":"ong6"},"content":"            temp \u003d new Event(getMessage(input));"},{"lineNumber":78,"author":{"gitId":"ong6"},"content":"            output \u003d duke.Ui.showTaskAdded(tasks, temp);"},{"lineNumber":79,"author":{"gitId":"ong6"},"content":"            tasks.add(temp);"},{"lineNumber":80,"author":{"gitId":"ong6"},"content":"            break;"},{"lineNumber":81,"author":{"gitId":"ong6"},"content":"        case \"delete\":"},{"lineNumber":82,"author":{"gitId":"ong6"},"content":"            output \u003d duke.Ui.showDeleteTask(input, tasks);"},{"lineNumber":83,"author":{"gitId":"ong6"},"content":"            tasks.remove(duke.Ui.getIndex(input));"},{"lineNumber":84,"author":{"gitId":"ong6"},"content":"            break;"},{"lineNumber":85,"author":{"gitId":"ong6"},"content":"        case \" \":"},{"lineNumber":86,"author":{"gitId":"ong6"},"content":"            output \u003d duke.Ui.showEmptyError();"},{"lineNumber":87,"author":{"gitId":"ong6"},"content":"            break;"},{"lineNumber":88,"author":{"gitId":"ong6"},"content":"        case \"archive\":"},{"lineNumber":89,"author":{"gitId":"ong6"},"content":"            String archivePath \u003d getMessage(input).trim();"},{"lineNumber":90,"author":{"gitId":"ong6"},"content":"            output \u003d duke.Ui.showArchiveTasks(tasks, archivePath);"},{"lineNumber":91,"author":{"gitId":"ong6"},"content":"            storage.archive(tasks, archivePath);"},{"lineNumber":92,"author":{"gitId":"ong6"},"content":"            break;"},{"lineNumber":93,"author":{"gitId":"ong6"},"content":"        default:"},{"lineNumber":94,"author":{"gitId":"ong6"},"content":"            throw new DukeGeneralException(\"\");"},{"lineNumber":95,"author":{"gitId":"ong6"},"content":"        }"},{"lineNumber":96,"author":{"gitId":"ong6"},"content":"        return output;"},{"lineNumber":97,"author":{"gitId":"ong6"},"content":"    }"},{"lineNumber":98,"author":{"gitId":"ong6"},"content":""},{"lineNumber":99,"author":{"gitId":"ong6"},"content":"    private String getCommand(String input) throws DukeTaskException {"},{"lineNumber":100,"author":{"gitId":"ong6"},"content":"        try {"},{"lineNumber":101,"author":{"gitId":"ong6"},"content":"            String[] inputArray \u003d input.split(\" \", 2);"},{"lineNumber":102,"author":{"gitId":"ong6"},"content":"            return inputArray[0].toLowerCase();"},{"lineNumber":103,"author":{"gitId":"ong6"},"content":"        } catch (Exception e) {"},{"lineNumber":104,"author":{"gitId":"ong6"},"content":"            throw new DukeTaskException(\"\");"},{"lineNumber":105,"author":{"gitId":"ong6"},"content":"        }"},{"lineNumber":106,"author":{"gitId":"ong6"},"content":"    }"},{"lineNumber":107,"author":{"gitId":"ong6"},"content":""},{"lineNumber":108,"author":{"gitId":"ong6"},"content":"    private String getMessage(String input) throws DukeTaskException {"},{"lineNumber":109,"author":{"gitId":"ong6"},"content":"        try {"},{"lineNumber":110,"author":{"gitId":"ong6"},"content":"            String[] inputArray \u003d input.split(\" \", 2);"},{"lineNumber":111,"author":{"gitId":"ong6"},"content":"            return inputArray[1];"},{"lineNumber":112,"author":{"gitId":"ong6"},"content":"        } catch (Exception e) {"},{"lineNumber":113,"author":{"gitId":"ong6"},"content":"            throw new DukeTaskException(\"\");"},{"lineNumber":114,"author":{"gitId":"ong6"},"content":"        }"},{"lineNumber":115,"author":{"gitId":"ong6"},"content":"    }"},{"lineNumber":116,"author":{"gitId":"ong6"},"content":""},{"lineNumber":117,"author":{"gitId":"ong6"},"content":"}"}],"authorContributionMap":{"ong6":117}},{"path":"src/main/java/duke/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ong6"},"content":"package duke;"},{"lineNumber":2,"author":{"gitId":"ong6"},"content":""},{"lineNumber":3,"author":{"gitId":"ong6"},"content":"import java.io.File;"},{"lineNumber":4,"author":{"gitId":"ong6"},"content":"import java.io.FileNotFoundException;"},{"lineNumber":5,"author":{"gitId":"ong6"},"content":"import java.io.FileWriter;"},{"lineNumber":6,"author":{"gitId":"ong6"},"content":"import java.io.IOException;"},{"lineNumber":7,"author":{"gitId":"ong6"},"content":"import java.util.ArrayList;"},{"lineNumber":8,"author":{"gitId":"ong6"},"content":"import java.util.List;"},{"lineNumber":9,"author":{"gitId":"ong6"},"content":"import java.util.Scanner;"},{"lineNumber":10,"author":{"gitId":"ong6"},"content":""},{"lineNumber":11,"author":{"gitId":"ong6"},"content":"/**"},{"lineNumber":12,"author":{"gitId":"ong6"},"content":" * Utility class to read and write data from a .txt file."},{"lineNumber":13,"author":{"gitId":"ong6"},"content":" */"},{"lineNumber":14,"author":{"gitId":"ong6"},"content":"public class Storage {"},{"lineNumber":15,"author":{"gitId":"ong6"},"content":""},{"lineNumber":16,"author":{"gitId":"ong6"},"content":"    private String filePath;"},{"lineNumber":17,"author":{"gitId":"ong6"},"content":""},{"lineNumber":18,"author":{"gitId":"ong6"},"content":"    public Storage(String filePath) {"},{"lineNumber":19,"author":{"gitId":"ong6"},"content":"        this.filePath \u003d filePath;"},{"lineNumber":20,"author":{"gitId":"ong6"},"content":"    }"},{"lineNumber":21,"author":{"gitId":"ong6"},"content":""},{"lineNumber":22,"author":{"gitId":"ong6"},"content":"    /**"},{"lineNumber":23,"author":{"gitId":"ong6"},"content":"     * Saves the TaskList into a file."},{"lineNumber":24,"author":{"gitId":"ong6"},"content":"     * @param taskList The TaskList to be saved."},{"lineNumber":25,"author":{"gitId":"ong6"},"content":"     * @throws IOException If file does not exist."},{"lineNumber":26,"author":{"gitId":"ong6"},"content":"     */"},{"lineNumber":27,"author":{"gitId":"ong6"},"content":"    public void save(TaskList taskList) throws IOException {"},{"lineNumber":28,"author":{"gitId":"ong6"},"content":"        FileWriter fw \u003d new FileWriter(filePath);"},{"lineNumber":29,"author":{"gitId":"ong6"},"content":"        for (Task t : taskList) {"},{"lineNumber":30,"author":{"gitId":"ong6"},"content":"            fw.write(t.storeString() + \"\\n\");"},{"lineNumber":31,"author":{"gitId":"ong6"},"content":"        }"},{"lineNumber":32,"author":{"gitId":"ong6"},"content":"        fw.close();"},{"lineNumber":33,"author":{"gitId":"ong6"},"content":"    }"},{"lineNumber":34,"author":{"gitId":"ong6"},"content":""},{"lineNumber":35,"author":{"gitId":"ong6"},"content":"    /**"},{"lineNumber":36,"author":{"gitId":"ong6"},"content":"     * Archives the current TaskList into a file."},{"lineNumber":37,"author":{"gitId":"ong6"},"content":"     * @param taskList    The TaskList to be saved."},{"lineNumber":38,"author":{"gitId":"ong6"},"content":"     * @param archivePath The archive file path"},{"lineNumber":39,"author":{"gitId":"ong6"},"content":"     * @throws IOException If file does not exist."},{"lineNumber":40,"author":{"gitId":"ong6"},"content":"     */"},{"lineNumber":41,"author":{"gitId":"ong6"},"content":"    public void archive(TaskList taskList, String archivePath) throws IOException {"},{"lineNumber":42,"author":{"gitId":"ong6"},"content":"        FileWriter fw \u003d new FileWriter(archivePath);"},{"lineNumber":43,"author":{"gitId":"ong6"},"content":"        for (Task t : taskList) {"},{"lineNumber":44,"author":{"gitId":"ong6"},"content":"            fw.write(t.storeString() + \"\\n\");"},{"lineNumber":45,"author":{"gitId":"ong6"},"content":"        }"},{"lineNumber":46,"author":{"gitId":"ong6"},"content":"        fw.close();"},{"lineNumber":47,"author":{"gitId":"ong6"},"content":"    }"},{"lineNumber":48,"author":{"gitId":"ong6"},"content":""},{"lineNumber":49,"author":{"gitId":"ong6"},"content":"    /**"},{"lineNumber":50,"author":{"gitId":"ong6"},"content":"     * Loads Tasks from a file and stores them in a List."},{"lineNumber":51,"author":{"gitId":"ong6"},"content":"     * @return A List containing all the tasks."},{"lineNumber":52,"author":{"gitId":"ong6"},"content":"     * @throws FileNotFoundException If the file does not exist."},{"lineNumber":53,"author":{"gitId":"ong6"},"content":"     */"},{"lineNumber":54,"author":{"gitId":"ong6"},"content":"    public List\u003cTask\u003e load() throws FileNotFoundException {"},{"lineNumber":55,"author":{"gitId":"ong6"},"content":"        File f \u003d new File(filePath);"},{"lineNumber":56,"author":{"gitId":"ong6"},"content":"        Scanner s \u003d new Scanner(f);"},{"lineNumber":57,"author":{"gitId":"ong6"},"content":"        List\u003cTask\u003e tempTasks \u003d new ArrayList\u003c\u003e();"},{"lineNumber":58,"author":{"gitId":"ong6"},"content":"        while (s.hasNextLine()) {"},{"lineNumber":59,"author":{"gitId":"ong6"},"content":"            String[] strArr \u003d s.nextLine().split(\" \\\\| \");"},{"lineNumber":60,"author":{"gitId":"ong6"},"content":"            String type \u003d strArr[0];"},{"lineNumber":61,"author":{"gitId":"ong6"},"content":"            switch (type) {"},{"lineNumber":62,"author":{"gitId":"ong6"},"content":"            case \"T\":"},{"lineNumber":63,"author":{"gitId":"ong6"},"content":"                tempTasks.add(new ToDo(strArr));"},{"lineNumber":64,"author":{"gitId":"ong6"},"content":"                break;"},{"lineNumber":65,"author":{"gitId":"ong6"},"content":"            case \"D\":"},{"lineNumber":66,"author":{"gitId":"ong6"},"content":"                tempTasks.add(new Deadline(strArr));"},{"lineNumber":67,"author":{"gitId":"ong6"},"content":"                break;"},{"lineNumber":68,"author":{"gitId":"ong6"},"content":"            case \"E\":"},{"lineNumber":69,"author":{"gitId":"ong6"},"content":"                tempTasks.add(new Event(strArr));"},{"lineNumber":70,"author":{"gitId":"ong6"},"content":"                break;"},{"lineNumber":71,"author":{"gitId":"ong6"},"content":"            default:"},{"lineNumber":72,"author":{"gitId":"ong6"},"content":"                System.out.println(\"Error\");"},{"lineNumber":73,"author":{"gitId":"ong6"},"content":"                break;"},{"lineNumber":74,"author":{"gitId":"ong6"},"content":"            }"},{"lineNumber":75,"author":{"gitId":"ong6"},"content":"        }"},{"lineNumber":76,"author":{"gitId":"ong6"},"content":"        s.close();"},{"lineNumber":77,"author":{"gitId":"ong6"},"content":"        return tempTasks;"},{"lineNumber":78,"author":{"gitId":"ong6"},"content":"    }"},{"lineNumber":79,"author":{"gitId":"ong6"},"content":""},{"lineNumber":80,"author":{"gitId":"ong6"},"content":"}"}],"authorContributionMap":{"ong6":80}},{"path":"src/main/java/duke/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ong6"},"content":"package duke;"},{"lineNumber":2,"author":{"gitId":"ong6"},"content":""},{"lineNumber":3,"author":{"gitId":"ong6"},"content":"import java.time.LocalDate;"},{"lineNumber":4,"author":{"gitId":"ong6"},"content":"import java.time.format.DateTimeFormatter;"},{"lineNumber":5,"author":{"gitId":"ong6"},"content":"import java.util.regex.Matcher;"},{"lineNumber":6,"author":{"gitId":"ong6"},"content":"import java.util.regex.Pattern;"},{"lineNumber":7,"author":{"gitId":"ong6"},"content":""},{"lineNumber":8,"author":{"gitId":"ong6"},"content":"public class Task {"},{"lineNumber":9,"author":{"gitId":"ong6"},"content":"    private String identity;"},{"lineNumber":10,"author":{"gitId":"ong6"},"content":"    private String name;"},{"lineNumber":11,"author":{"gitId":"ong6"},"content":"    private boolean isCompleted;"},{"lineNumber":12,"author":{"gitId":"ong6"},"content":"    private String date;"},{"lineNumber":13,"author":{"gitId":"ong6"},"content":""},{"lineNumber":14,"author":{"gitId":"ong6"},"content":"    /**"},{"lineNumber":15,"author":{"gitId":"ong6"},"content":"     * To initialize abd format tasks."},{"lineNumber":16,"author":{"gitId":"ong6"},"content":"     * @param identity the identity of the task"},{"lineNumber":17,"author":{"gitId":"ong6"},"content":"     * @param name     rest of the task"},{"lineNumber":18,"author":{"gitId":"ong6"},"content":"     */"},{"lineNumber":19,"author":{"gitId":"ong6"},"content":"    protected Task(String identity, String name) {"},{"lineNumber":20,"author":{"gitId":"ong6"},"content":"        this.identity \u003d identity;"},{"lineNumber":21,"author":{"gitId":"ong6"},"content":"        this.isCompleted \u003d false;"},{"lineNumber":22,"author":{"gitId":"ong6"},"content":"        //Sees if input has a due date and formats it."},{"lineNumber":23,"author":{"gitId":"ong6"},"content":"        if (name.contains(\"/\")) {"},{"lineNumber":24,"author":{"gitId":"ong6"},"content":"            String[] nameArr \u003d name.split(\"/...\");"},{"lineNumber":25,"author":{"gitId":"ong6"},"content":"            this.name \u003d nameArr[0];"},{"lineNumber":26,"author":{"gitId":"ong6"},"content":"            this.date \u003d formatDate(nameArr[1]);"},{"lineNumber":27,"author":{"gitId":"ong6"},"content":"        } else {"},{"lineNumber":28,"author":{"gitId":"ong6"},"content":"            this.name \u003d name;"},{"lineNumber":29,"author":{"gitId":"ong6"},"content":"            this.date \u003d \" \";"},{"lineNumber":30,"author":{"gitId":"ong6"},"content":"        }"},{"lineNumber":31,"author":{"gitId":"ong6"},"content":"    }"},{"lineNumber":32,"author":{"gitId":"ong6"},"content":""},{"lineNumber":33,"author":{"gitId":"ong6"},"content":"    /**"},{"lineNumber":34,"author":{"gitId":"ong6"},"content":"     * To load in tasks form storage."},{"lineNumber":35,"author":{"gitId":"ong6"},"content":"     * @param identity the identity of the task"},{"lineNumber":36,"author":{"gitId":"ong6"},"content":"     * @param strArr   the rest of the task"},{"lineNumber":37,"author":{"gitId":"ong6"},"content":"     */"},{"lineNumber":38,"author":{"gitId":"ong6"},"content":"    protected Task(String identity, String[] strArr) {"},{"lineNumber":39,"author":{"gitId":"ong6"},"content":"        this.identity \u003d identity;"},{"lineNumber":40,"author":{"gitId":"ong6"},"content":"        this.isCompleted \u003d Integer.parseInt(strArr[1]) \u003d\u003d 1 ? true : false;"},{"lineNumber":41,"author":{"gitId":"ong6"},"content":"        this.name \u003d strArr[2];"},{"lineNumber":42,"author":{"gitId":"ong6"},"content":"        this.date \u003d strArr[3];"},{"lineNumber":43,"author":{"gitId":"ong6"},"content":"    }"},{"lineNumber":44,"author":{"gitId":"ong6"},"content":""},{"lineNumber":45,"author":{"gitId":"ong6"},"content":"    /**"},{"lineNumber":46,"author":{"gitId":"ong6"},"content":"     * Looks for inputs with the format yyyy-mm-dd and changes them to the MMM dd"},{"lineNumber":47,"author":{"gitId":"ong6"},"content":"     * yyyy format, if no date is found, return original string."},{"lineNumber":48,"author":{"gitId":"ong6"},"content":"     * @param date The date to be changed."},{"lineNumber":49,"author":{"gitId":"ong6"},"content":"     * @return The newly formatted date."},{"lineNumber":50,"author":{"gitId":"ong6"},"content":"     */"},{"lineNumber":51,"author":{"gitId":"ong6"},"content":"    protected String formatDate(String date) {"},{"lineNumber":52,"author":{"gitId":"ong6"},"content":"        //Regex to scan for date"},{"lineNumber":53,"author":{"gitId":"ong6"},"content":"        String regex \u003d \"(19|20)\\\\d\\\\d[- /.](0[1-9]|1[012])[- /.](0[1-9]|[12][0-9]|3[01])\";"},{"lineNumber":54,"author":{"gitId":"ong6"},"content":"        Matcher m \u003d Pattern.compile(regex).matcher(date);"},{"lineNumber":55,"author":{"gitId":"ong6"},"content":"        if (m.find()) {"},{"lineNumber":56,"author":{"gitId":"ong6"},"content":"            LocalDate tempDate \u003d LocalDate.parse(m.group(0));"},{"lineNumber":57,"author":{"gitId":"ong6"},"content":"            String dateFormat \u003d tempDate.format(DateTimeFormatter.ofPattern(\"MMM dd yyyy\"));"},{"lineNumber":58,"author":{"gitId":"ong6"},"content":"            return date.replaceAll(regex, dateFormat);"},{"lineNumber":59,"author":{"gitId":"ong6"},"content":"        } else {"},{"lineNumber":60,"author":{"gitId":"ong6"},"content":"            return date;"},{"lineNumber":61,"author":{"gitId":"ong6"},"content":"        }"},{"lineNumber":62,"author":{"gitId":"ong6"},"content":"    }"},{"lineNumber":63,"author":{"gitId":"ong6"},"content":""},{"lineNumber":64,"author":{"gitId":"ong6"},"content":"    /**"},{"lineNumber":65,"author":{"gitId":"ong6"},"content":"     * To Print out the Task in a nice format."},{"lineNumber":66,"author":{"gitId":"ong6"},"content":"     */"},{"lineNumber":67,"author":{"gitId":"ong6"},"content":"    public String toString() {"},{"lineNumber":68,"author":{"gitId":"ong6"},"content":"        if (!isCompleted()) {"},{"lineNumber":69,"author":{"gitId":"ong6"},"content":"            return String.format(\"[%s][ ] %s\", this.getIdentity(), this.getName());"},{"lineNumber":70,"author":{"gitId":"ong6"},"content":"        } else {"},{"lineNumber":71,"author":{"gitId":"ong6"},"content":"            return String.format(\"[%s][X] %s\", this.getIdentity(), this.getName());"},{"lineNumber":72,"author":{"gitId":"ong6"},"content":"        }"},{"lineNumber":73,"author":{"gitId":"ong6"},"content":"    }"},{"lineNumber":74,"author":{"gitId":"ong6"},"content":""},{"lineNumber":75,"author":{"gitId":"ong6"},"content":"    /**"},{"lineNumber":76,"author":{"gitId":"ong6"},"content":"     * To Print out the Task for use in the Storage file."},{"lineNumber":77,"author":{"gitId":"ong6"},"content":"     */"},{"lineNumber":78,"author":{"gitId":"ong6"},"content":"    public String storeString() {"},{"lineNumber":79,"author":{"gitId":"ong6"},"content":"        return String.format(\"%s | %d | %s | %s\", this.getIdentity(), this.isCompleted() ? 1 : 0, this.getName(),"},{"lineNumber":80,"author":{"gitId":"ong6"},"content":"                this.getDate());"},{"lineNumber":81,"author":{"gitId":"ong6"},"content":"    }"},{"lineNumber":82,"author":{"gitId":"ong6"},"content":""},{"lineNumber":83,"author":{"gitId":"ong6"},"content":"    public boolean isCompleted() {"},{"lineNumber":84,"author":{"gitId":"ong6"},"content":"        return isCompleted;"},{"lineNumber":85,"author":{"gitId":"ong6"},"content":"    }"},{"lineNumber":86,"author":{"gitId":"ong6"},"content":""},{"lineNumber":87,"author":{"gitId":"ong6"},"content":"    public String getName() {"},{"lineNumber":88,"author":{"gitId":"ong6"},"content":"        return name;"},{"lineNumber":89,"author":{"gitId":"ong6"},"content":"    }"},{"lineNumber":90,"author":{"gitId":"ong6"},"content":""},{"lineNumber":91,"author":{"gitId":"ong6"},"content":"    public String getIdentity() {"},{"lineNumber":92,"author":{"gitId":"ong6"},"content":"        return identity;"},{"lineNumber":93,"author":{"gitId":"ong6"},"content":"    }"},{"lineNumber":94,"author":{"gitId":"ong6"},"content":""},{"lineNumber":95,"author":{"gitId":"ong6"},"content":"    public String getDate() {"},{"lineNumber":96,"author":{"gitId":"ong6"},"content":"        return date;"},{"lineNumber":97,"author":{"gitId":"ong6"},"content":"    }"},{"lineNumber":98,"author":{"gitId":"ong6"},"content":""},{"lineNumber":99,"author":{"gitId":"ong6"},"content":"    public void setCompleted() {"},{"lineNumber":100,"author":{"gitId":"ong6"},"content":"        this.isCompleted \u003d true;"},{"lineNumber":101,"author":{"gitId":"ong6"},"content":"    }"},{"lineNumber":102,"author":{"gitId":"ong6"},"content":""},{"lineNumber":103,"author":{"gitId":"ong6"},"content":"    @Override"},{"lineNumber":104,"author":{"gitId":"ong6"},"content":"    public boolean equals(Object obj) {"},{"lineNumber":105,"author":{"gitId":"ong6"},"content":"        if (this \u003d\u003d obj) {"},{"lineNumber":106,"author":{"gitId":"ong6"},"content":"            return true;"},{"lineNumber":107,"author":{"gitId":"ong6"},"content":"        }"},{"lineNumber":108,"author":{"gitId":"ong6"},"content":""},{"lineNumber":109,"author":{"gitId":"ong6"},"content":"        if (this.name.equals(((Task) obj).getName())) {"},{"lineNumber":110,"author":{"gitId":"ong6"},"content":"            return true;"},{"lineNumber":111,"author":{"gitId":"ong6"},"content":"        }"},{"lineNumber":112,"author":{"gitId":"ong6"},"content":""},{"lineNumber":113,"author":{"gitId":"ong6"},"content":"        return super.equals(obj);"},{"lineNumber":114,"author":{"gitId":"ong6"},"content":"    }"},{"lineNumber":115,"author":{"gitId":"ong6"},"content":""},{"lineNumber":116,"author":{"gitId":"ong6"},"content":"}"}],"authorContributionMap":{"ong6":116}},{"path":"src/main/java/duke/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ong6"},"content":"package duke;"},{"lineNumber":2,"author":{"gitId":"ong6"},"content":""},{"lineNumber":3,"author":{"gitId":"ong6"},"content":"import java.util.ArrayList;"},{"lineNumber":4,"author":{"gitId":"ong6"},"content":"import java.util.List;"},{"lineNumber":5,"author":{"gitId":"ong6"},"content":""},{"lineNumber":6,"author":{"gitId":"ong6"},"content":"public class TaskList extends ArrayList\u003cTask\u003e {"},{"lineNumber":7,"author":{"gitId":"ong6"},"content":""},{"lineNumber":8,"author":{"gitId":"ong6"},"content":"    public TaskList() {"},{"lineNumber":9,"author":{"gitId":"ong6"},"content":"        super();"},{"lineNumber":10,"author":{"gitId":"ong6"},"content":"    }"},{"lineNumber":11,"author":{"gitId":"ong6"},"content":""},{"lineNumber":12,"author":{"gitId":"ong6"},"content":"    public TaskList(List\u003cTask\u003e lst) {"},{"lineNumber":13,"author":{"gitId":"ong6"},"content":"        super(lst);"},{"lineNumber":14,"author":{"gitId":"ong6"},"content":"    }"},{"lineNumber":15,"author":{"gitId":"ong6"},"content":""},{"lineNumber":16,"author":{"gitId":"ong6"},"content":"    public void setDone(int index) {"},{"lineNumber":17,"author":{"gitId":"ong6"},"content":"        this.get(index).setCompleted();"},{"lineNumber":18,"author":{"gitId":"ong6"},"content":"    }"},{"lineNumber":19,"author":{"gitId":"ong6"},"content":""},{"lineNumber":20,"author":{"gitId":"ong6"},"content":"}"}],"authorContributionMap":{"ong6":20}},{"path":"src/main/java/duke/ToDo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ong6"},"content":"package duke;"},{"lineNumber":2,"author":{"gitId":"ong6"},"content":""},{"lineNumber":3,"author":{"gitId":"ong6"},"content":"public class ToDo extends Task {"},{"lineNumber":4,"author":{"gitId":"ong6"},"content":""},{"lineNumber":5,"author":{"gitId":"ong6"},"content":"    public ToDo(String input) {"},{"lineNumber":6,"author":{"gitId":"ong6"},"content":"        super(\"T\", input);"},{"lineNumber":7,"author":{"gitId":"ong6"},"content":"    }"},{"lineNumber":8,"author":{"gitId":"ong6"},"content":""},{"lineNumber":9,"author":{"gitId":"ong6"},"content":"    public ToDo(String[] arr) {"},{"lineNumber":10,"author":{"gitId":"ong6"},"content":"        super(\"T\", arr);"},{"lineNumber":11,"author":{"gitId":"ong6"},"content":"    }"},{"lineNumber":12,"author":{"gitId":"ong6"},"content":""},{"lineNumber":13,"author":{"gitId":"ong6"},"content":"    @Override"},{"lineNumber":14,"author":{"gitId":"ong6"},"content":"    public String toString() {"},{"lineNumber":15,"author":{"gitId":"ong6"},"content":"        return super.toString();"},{"lineNumber":16,"author":{"gitId":"ong6"},"content":"    }"},{"lineNumber":17,"author":{"gitId":"ong6"},"content":"}"}],"authorContributionMap":{"ong6":17}},{"path":"src/main/java/duke/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ong6"},"content":"package duke;"},{"lineNumber":2,"author":{"gitId":"ong6"},"content":""},{"lineNumber":3,"author":{"gitId":"ong6"},"content":"import java.util.ArrayList;"},{"lineNumber":4,"author":{"gitId":"ong6"},"content":"import java.util.List;"},{"lineNumber":5,"author":{"gitId":"ong6"},"content":""},{"lineNumber":6,"author":{"gitId":"ong6"},"content":"public class Ui {"},{"lineNumber":7,"author":{"gitId":"ong6"},"content":""},{"lineNumber":8,"author":{"gitId":"ong6"},"content":"    private Ui() {"},{"lineNumber":9,"author":{"gitId":"ong6"},"content":"    }"},{"lineNumber":10,"author":{"gitId":"ong6"},"content":""},{"lineNumber":11,"author":{"gitId":"ong6"},"content":"    public static String showWelcome() {"},{"lineNumber":12,"author":{"gitId":"ong6"},"content":"        return textWrapper(\"Hello! I\u0027m Duke \\nWhat can I do for you?\");"},{"lineNumber":13,"author":{"gitId":"ong6"},"content":"    }"},{"lineNumber":14,"author":{"gitId":"ong6"},"content":""},{"lineNumber":15,"author":{"gitId":"ong6"},"content":"    public static String showBye() {"},{"lineNumber":16,"author":{"gitId":"ong6"},"content":"        return textWrapper(\"Bye. Hope to see you again soon!\\n\");"},{"lineNumber":17,"author":{"gitId":"ong6"},"content":"    }"},{"lineNumber":18,"author":{"gitId":"ong6"},"content":""},{"lineNumber":19,"author":{"gitId":"ong6"},"content":"    /**"},{"lineNumber":20,"author":{"gitId":"ong6"},"content":"     * Prints out the TaskList in a nice format."},{"lineNumber":21,"author":{"gitId":"ong6"},"content":"     * @param tasks the TaskList to be printed."},{"lineNumber":22,"author":{"gitId":"ong6"},"content":"     */"},{"lineNumber":23,"author":{"gitId":"ong6"},"content":"    public static String showList(TaskList tasks) {"},{"lineNumber":24,"author":{"gitId":"ong6"},"content":"        String out \u003d \"Here are the tasks in your list: \\n\";"},{"lineNumber":25,"author":{"gitId":"ong6"},"content":"        out +\u003d printList(tasks);"},{"lineNumber":26,"author":{"gitId":"ong6"},"content":"        return textWrapper(out);"},{"lineNumber":27,"author":{"gitId":"ong6"},"content":"    }"},{"lineNumber":28,"author":{"gitId":"ong6"},"content":""},{"lineNumber":29,"author":{"gitId":"ong6"},"content":"    /**"},{"lineNumber":30,"author":{"gitId":"ong6"},"content":"     * Searches the TaskList and prints out the items that matches the user"},{"lineNumber":31,"author":{"gitId":"ong6"},"content":"     * specifications."},{"lineNumber":32,"author":{"gitId":"ong6"},"content":"     * @param tasks  the TaskList to be searched."},{"lineNumber":33,"author":{"gitId":"ong6"},"content":"     * @param toFind the String that the user is looking for."},{"lineNumber":34,"author":{"gitId":"ong6"},"content":"     */"},{"lineNumber":35,"author":{"gitId":"ong6"},"content":"    public static String showFind(TaskList tasks, String toFind) {"},{"lineNumber":36,"author":{"gitId":"ong6"},"content":"        String out;"},{"lineNumber":37,"author":{"gitId":"ong6"},"content":"        List\u003cTask\u003e tempTasks \u003d new ArrayList\u003c\u003e();"},{"lineNumber":38,"author":{"gitId":"ong6"},"content":"        tasks.stream().filter(t -\u003e t.getName().contains(toFind)).forEach(x -\u003e tempTasks.add(x));"},{"lineNumber":39,"author":{"gitId":"ong6"},"content":"        if (!tempTasks.isEmpty()) {"},{"lineNumber":40,"author":{"gitId":"ong6"},"content":"            out \u003d \"Here are the matching tasks in your list: \\n\";"},{"lineNumber":41,"author":{"gitId":"ong6"},"content":"            out +\u003d printList(new TaskList(tempTasks));"},{"lineNumber":42,"author":{"gitId":"ong6"},"content":"        } else {"},{"lineNumber":43,"author":{"gitId":"ong6"},"content":"            out \u003d \"Nothing in the list matches\\n\";"},{"lineNumber":44,"author":{"gitId":"ong6"},"content":"        }"},{"lineNumber":45,"author":{"gitId":"ong6"},"content":"        return textWrapper(out);"},{"lineNumber":46,"author":{"gitId":"ong6"},"content":"    }"},{"lineNumber":47,"author":{"gitId":"ong6"},"content":""},{"lineNumber":48,"author":{"gitId":"ong6"},"content":"    /**"},{"lineNumber":49,"author":{"gitId":"ong6"},"content":"     * Prints out confirmation after marking an item as done."},{"lineNumber":50,"author":{"gitId":"ong6"},"content":"     * @param input The string input by the user."},{"lineNumber":51,"author":{"gitId":"ong6"},"content":"     * @param tasks The TaskList to be checked."},{"lineNumber":52,"author":{"gitId":"ong6"},"content":"     */"},{"lineNumber":53,"author":{"gitId":"ong6"},"content":"    public static String showDone(String input, TaskList tasks) {"},{"lineNumber":54,"author":{"gitId":"ong6"},"content":"        String out \u003d \"Nice! I\u0027ve marked this task as done: \\n  \";"},{"lineNumber":55,"author":{"gitId":"ong6"},"content":"        out +\u003d tasks.get(getIndex(input));"},{"lineNumber":56,"author":{"gitId":"ong6"},"content":"        return textWrapper(out);"},{"lineNumber":57,"author":{"gitId":"ong6"},"content":"    }"},{"lineNumber":58,"author":{"gitId":"ong6"},"content":""},{"lineNumber":59,"author":{"gitId":"ong6"},"content":"    /**"},{"lineNumber":60,"author":{"gitId":"ong6"},"content":"     * Prints out confirmations that the Task was added to the TaskList."},{"lineNumber":61,"author":{"gitId":"ong6"},"content":"     * @param tasks The TaskList to be added to."},{"lineNumber":62,"author":{"gitId":"ong6"},"content":"     * @param task  The Task to be added."},{"lineNumber":63,"author":{"gitId":"ong6"},"content":"     */"},{"lineNumber":64,"author":{"gitId":"ong6"},"content":"    public static String showTaskAdded(TaskList tasks, Task task) {"},{"lineNumber":65,"author":{"gitId":"ong6"},"content":"        String out \u003d \"Got it. I\u0027ve added this task:\\n \";"},{"lineNumber":66,"author":{"gitId":"ong6"},"content":"        out +\u003d task.toString() + \"\\n\";"},{"lineNumber":67,"author":{"gitId":"ong6"},"content":"        out +\u003d String.format(\"Now you have %d tasks in the list.\", tasks.size() + 1);"},{"lineNumber":68,"author":{"gitId":"ong6"},"content":"        return textWrapper(out);"},{"lineNumber":69,"author":{"gitId":"ong6"},"content":"    }"},{"lineNumber":70,"author":{"gitId":"ong6"},"content":""},{"lineNumber":71,"author":{"gitId":"ong6"},"content":"    /**"},{"lineNumber":72,"author":{"gitId":"ong6"},"content":"     * Prints out confirmation for deleting a task from the TaskList."},{"lineNumber":73,"author":{"gitId":"ong6"},"content":"     * @param input The input string."},{"lineNumber":74,"author":{"gitId":"ong6"},"content":"     * @param tasks The TaskList which the item is removed from."},{"lineNumber":75,"author":{"gitId":"ong6"},"content":"     */"},{"lineNumber":76,"author":{"gitId":"ong6"},"content":"    public static String showDeleteTask(String input, TaskList tasks) {"},{"lineNumber":77,"author":{"gitId":"ong6"},"content":"        String out \u003d \"Noted. I\u0027ve removed this task: \\n  \";"},{"lineNumber":78,"author":{"gitId":"ong6"},"content":"        out +\u003d tasks.get(getIndex(input)) + \"\\n\";"},{"lineNumber":79,"author":{"gitId":"ong6"},"content":"        out +\u003d String.format(\"Now you have %d tasks in the list.\", tasks.size() - 1);"},{"lineNumber":80,"author":{"gitId":"ong6"},"content":"        return textWrapper(out);"},{"lineNumber":81,"author":{"gitId":"ong6"},"content":"    }"},{"lineNumber":82,"author":{"gitId":"ong6"},"content":""},{"lineNumber":83,"author":{"gitId":"ong6"},"content":"    /**"},{"lineNumber":84,"author":{"gitId":"ong6"},"content":"     * Prints out confirmation for deleting a task from the TaskList."},{"lineNumber":85,"author":{"gitId":"ong6"},"content":"     * @param archivePath The archive path."},{"lineNumber":86,"author":{"gitId":"ong6"},"content":"     * @param tasks       The TaskList which the item is removed from."},{"lineNumber":87,"author":{"gitId":"ong6"},"content":"     */"},{"lineNumber":88,"author":{"gitId":"ong6"},"content":"    public static String showArchiveTasks(TaskList tasks, String archivePath) {"},{"lineNumber":89,"author":{"gitId":"ong6"},"content":"        String out \u003d String.format("},{"lineNumber":90,"author":{"gitId":"ong6"},"content":"                \"Noted. The following tasks have been archived to this file %s: %n  \", archivePath);"},{"lineNumber":91,"author":{"gitId":"ong6"},"content":"        out +\u003d printList(tasks);"},{"lineNumber":92,"author":{"gitId":"ong6"},"content":"        return textWrapper(out);"},{"lineNumber":93,"author":{"gitId":"ong6"},"content":"    }"},{"lineNumber":94,"author":{"gitId":"ong6"},"content":""},{"lineNumber":95,"author":{"gitId":"ong6"},"content":"    public static String showDukeTaskError() {"},{"lineNumber":96,"author":{"gitId":"ong6"},"content":"        return textWrapper(\"The description of a task cannot be empty.\");"},{"lineNumber":97,"author":{"gitId":"ong6"},"content":"    }"},{"lineNumber":98,"author":{"gitId":"ong6"},"content":""},{"lineNumber":99,"author":{"gitId":"ong6"},"content":"    public static String showDukeGeneralError() {"},{"lineNumber":100,"author":{"gitId":"ong6"},"content":"        return textWrapper(\"I\u0027m sorry, but I don\u0027t know what that means\");"},{"lineNumber":101,"author":{"gitId":"ong6"},"content":"    }"},{"lineNumber":102,"author":{"gitId":"ong6"},"content":""},{"lineNumber":103,"author":{"gitId":"ong6"},"content":"    public static String showDukeEmptyListError() {"},{"lineNumber":104,"author":{"gitId":"ong6"},"content":"        return textWrapper(\"You have nothing in the list!\");"},{"lineNumber":105,"author":{"gitId":"ong6"},"content":"    }"},{"lineNumber":106,"author":{"gitId":"ong6"},"content":""},{"lineNumber":107,"author":{"gitId":"ong6"},"content":"    public static String showLoadingError() {"},{"lineNumber":108,"author":{"gitId":"ong6"},"content":"        return textWrapper(\"This file cant be loaded! Creating a new file called duke.txt in CWD\");"},{"lineNumber":109,"author":{"gitId":"ong6"},"content":"    }"},{"lineNumber":110,"author":{"gitId":"ong6"},"content":""},{"lineNumber":111,"author":{"gitId":"ong6"},"content":"    public static String showEmptyError() {"},{"lineNumber":112,"author":{"gitId":"ong6"},"content":"        return textWrapper(\"Please Enter a command!\");"},{"lineNumber":113,"author":{"gitId":"ong6"},"content":"    }"},{"lineNumber":114,"author":{"gitId":"ong6"},"content":""},{"lineNumber":115,"author":{"gitId":"ong6"},"content":"    public static int getIndex(String input) {"},{"lineNumber":116,"author":{"gitId":"ong6"},"content":"        return Integer.parseInt(input.replaceAll(\"[^0-9]\", \"\")) - 1;"},{"lineNumber":117,"author":{"gitId":"ong6"},"content":"    }"},{"lineNumber":118,"author":{"gitId":"ong6"},"content":""},{"lineNumber":119,"author":{"gitId":"ong6"},"content":"    private static String printList(TaskList contentList) {"},{"lineNumber":120,"author":{"gitId":"ong6"},"content":"        StringBuilder printStr \u003d new StringBuilder();"},{"lineNumber":121,"author":{"gitId":"ong6"},"content":"        for (int i \u003d 0; i \u003c contentList.size(); i++) {"},{"lineNumber":122,"author":{"gitId":"ong6"},"content":"            String textToAdd \u003d String.format(\"%d. %s%n\", i + 1, contentList.get(i).toString());"},{"lineNumber":123,"author":{"gitId":"ong6"},"content":"            printStr.append(textToAdd);"},{"lineNumber":124,"author":{"gitId":"ong6"},"content":"        }"},{"lineNumber":125,"author":{"gitId":"ong6"},"content":"        return printStr.toString();"},{"lineNumber":126,"author":{"gitId":"ong6"},"content":"    }"},{"lineNumber":127,"author":{"gitId":"ong6"},"content":""},{"lineNumber":128,"author":{"gitId":"ong6"},"content":"    /**"},{"lineNumber":129,"author":{"gitId":"ong6"},"content":"     * Used to format text in a unique way."},{"lineNumber":130,"author":{"gitId":"ong6"},"content":"     * @param input the string input"},{"lineNumber":131,"author":{"gitId":"ong6"},"content":"     * @return the formatted string"},{"lineNumber":132,"author":{"gitId":"ong6"},"content":"     */"},{"lineNumber":133,"author":{"gitId":"ong6"},"content":"    private static String textWrapper(String input) {"},{"lineNumber":134,"author":{"gitId":"ong6"},"content":"        return input;"},{"lineNumber":135,"author":{"gitId":"ong6"},"content":"    }"},{"lineNumber":136,"author":{"gitId":"ong6"},"content":""},{"lineNumber":137,"author":{"gitId":"ong6"},"content":"}"}],"authorContributionMap":{"ong6":137}},{"path":"src/main/resources/view/DialogBox.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"ong6"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"},{"lineNumber":2,"author":{"gitId":"ong6"},"content":""},{"lineNumber":3,"author":{"gitId":"ong6"},"content":"\u003c?import javafx.geometry.Insets?\u003e"},{"lineNumber":4,"author":{"gitId":"ong6"},"content":"\u003c?import javafx.scene.control.Label?\u003e"},{"lineNumber":5,"author":{"gitId":"ong6"},"content":"\u003c?import javafx.scene.image.ImageView?\u003e"},{"lineNumber":6,"author":{"gitId":"ong6"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e"},{"lineNumber":7,"author":{"gitId":"ong6"},"content":""},{"lineNumber":8,"author":{"gitId":"ong6"},"content":"\u003cfx:root alignment\u003d\"TOP_RIGHT\" maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\" prefWidth\u003d\"400.0\" style\u003d\"-fx-background-color: lightblue;\" type\u003d\"javafx.scene.layout.HBox\" xmlns\u003d\"http://javafx.com/javafx/15.0.1\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e"},{"lineNumber":9,"author":{"gitId":"ong6"},"content":"    \u003cchildren\u003e"},{"lineNumber":10,"author":{"gitId":"ong6"},"content":"        \u003cLabel fx:id\u003d\"dialog\" text\u003d\"Label\" wrapText\u003d\"true\" /\u003e"},{"lineNumber":11,"author":{"gitId":"ong6"},"content":"        \u003cImageView fx:id\u003d\"displayPicture\" fitHeight\u003d\"99.0\" fitWidth\u003d\"99.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\" style\u003d\"-fx-blend-mode: multiply; -fx-image: url(http://cdn.shopify.com/s/files/1/2209/1363/products/additional_megachess-44_33afb3f4-7bfe-4438-a46a-46b5d1b35078_1200x1200.png?v\u003d1535649501);\" /\u003e"},{"lineNumber":12,"author":{"gitId":"ong6"},"content":"    \u003c/children\u003e"},{"lineNumber":13,"author":{"gitId":"ong6"},"content":"    \u003cpadding\u003e"},{"lineNumber":14,"author":{"gitId":"ong6"},"content":"        \u003cInsets bottom\u003d\"15.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"15.0\" /\u003e"},{"lineNumber":15,"author":{"gitId":"ong6"},"content":"    \u003c/padding\u003e"},{"lineNumber":16,"author":{"gitId":"ong6"},"content":"\u003c/fx:root\u003e"}],"authorContributionMap":{"ong6":16}},{"path":"src/main/resources/view/DialogBoxUser.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"ong6"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"},{"lineNumber":2,"author":{"gitId":"ong6"},"content":""},{"lineNumber":3,"author":{"gitId":"ong6"},"content":"\u003c?import javafx.geometry.Insets?\u003e"},{"lineNumber":4,"author":{"gitId":"ong6"},"content":"\u003c?import javafx.scene.control.Label?\u003e"},{"lineNumber":5,"author":{"gitId":"ong6"},"content":"\u003c?import javafx.scene.image.ImageView?\u003e"},{"lineNumber":6,"author":{"gitId":"ong6"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e"},{"lineNumber":7,"author":{"gitId":"ong6"},"content":""},{"lineNumber":8,"author":{"gitId":"ong6"},"content":"\u003cfx:root alignment\u003d\"TOP_RIGHT\" maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\" prefWidth\u003d\"400.0\" style\u003d\"-fx-background-color: aquamarine;\" type\u003d\"javafx.scene.layout.HBox\" xmlns\u003d\"http://javafx.com/javafx/15.0.1\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e"},{"lineNumber":9,"author":{"gitId":"ong6"},"content":"    \u003cchildren\u003e"},{"lineNumber":10,"author":{"gitId":"ong6"},"content":"        \u003cLabel fx:id\u003d\"dialog\" text\u003d\"Label\" wrapText\u003d\"true\" /\u003e"},{"lineNumber":11,"author":{"gitId":"ong6"},"content":"        \u003cImageView fx:id\u003d\"displayPicture\" fitHeight\u003d\"99.0\" fitWidth\u003d\"99.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\" style\u003d\"-fx-blend-mode: multiply; -fx-image: url(https://encrypted-tbn0.gstatic.com/images?q\u003dtbn:ANd9GcSirxbjmZqCf--nN-qF84r1e9KyAnJk4bO_yw\u0026amp;usqp\u003dCAU);\" /\u003e"},{"lineNumber":12,"author":{"gitId":"ong6"},"content":"    \u003c/children\u003e"},{"lineNumber":13,"author":{"gitId":"ong6"},"content":"    \u003cpadding\u003e"},{"lineNumber":14,"author":{"gitId":"ong6"},"content":"        \u003cInsets bottom\u003d\"15.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"15.0\" /\u003e"},{"lineNumber":15,"author":{"gitId":"ong6"},"content":"    \u003c/padding\u003e"},{"lineNumber":16,"author":{"gitId":"ong6"},"content":"\u003c/fx:root\u003e"}],"authorContributionMap":{"ong6":16}},{"path":"src/main/resources/view/MainWindow.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"ong6"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"},{"lineNumber":2,"author":{"gitId":"ong6"},"content":""},{"lineNumber":3,"author":{"gitId":"ong6"},"content":"\u003c?import javafx.scene.control.Button?\u003e"},{"lineNumber":4,"author":{"gitId":"ong6"},"content":"\u003c?import javafx.scene.control.ScrollPane?\u003e"},{"lineNumber":5,"author":{"gitId":"ong6"},"content":"\u003c?import javafx.scene.control.TextField?\u003e"},{"lineNumber":6,"author":{"gitId":"ong6"},"content":"\u003c?import javafx.scene.layout.AnchorPane?\u003e"},{"lineNumber":7,"author":{"gitId":"ong6"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e"},{"lineNumber":8,"author":{"gitId":"ong6"},"content":""},{"lineNumber":9,"author":{"gitId":"ong6"},"content":"\u003cAnchorPane maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefHeight\u003d\"600.0\" prefWidth\u003d\"400.0\" xmlns\u003d\"http://javafx.com/javafx/15.0.1\" xmlns:fx\u003d\"http://javafx.com/fxml/1\" fx:controller\u003d\"MainWindow\"\u003e"},{"lineNumber":10,"author":{"gitId":"ong6"},"content":"    \u003cchildren\u003e"},{"lineNumber":11,"author":{"gitId":"ong6"},"content":"        \u003cTextField fx:id\u003d\"userInput\" layoutY\u003d\"558.0\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"324.0\" promptText\u003d\"Enter Input here\" AnchorPane.bottomAnchor\u003d\"1.0\" /\u003e"},{"lineNumber":12,"author":{"gitId":"ong6"},"content":"        \u003cButton fx:id\u003d\"sendButton\" layoutX\u003d\"324.0\" layoutY\u003d\"558.0\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"76.0\" text\u003d\"Send\" textFill\u003d\"#6f1313\" /\u003e"},{"lineNumber":13,"author":{"gitId":"ong6"},"content":"        \u003cScrollPane fx:id\u003d\"scrollPane\" hbarPolicy\u003d\"NEVER\" hvalue\u003d\"1.0\" prefHeight\u003d\"557.0\" prefWidth\u003d\"400.0\" vvalue\u003d\"1.0\"\u003e"},{"lineNumber":14,"author":{"gitId":"ong6"},"content":"            \u003ccontent\u003e"},{"lineNumber":15,"author":{"gitId":"ong6"},"content":"                \u003cVBox fx:id\u003d\"dialogContainer\" prefHeight\u003d\"552.0\" prefWidth\u003d\"388.0\" style\u003d\"-fx-background-color: aquamarine; -fx-border-color: blue;\" /\u003e"},{"lineNumber":16,"author":{"gitId":"ong6"},"content":"            \u003c/content\u003e"},{"lineNumber":17,"author":{"gitId":"ong6"},"content":"        \u003c/ScrollPane\u003e"},{"lineNumber":18,"author":{"gitId":"ong6"},"content":"    \u003c/children\u003e"},{"lineNumber":19,"author":{"gitId":"ong6"},"content":"\u003c/AnchorPane\u003e"}],"authorContributionMap":{"ong6":19}},{"path":"src/test/java/duke/StorageTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ong6"},"content":"package duke;"},{"lineNumber":2,"author":{"gitId":"ong6"},"content":""},{"lineNumber":3,"author":{"gitId":"ong6"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;"},{"lineNumber":4,"author":{"gitId":"ong6"},"content":""},{"lineNumber":5,"author":{"gitId":"ong6"},"content":"import java.io.File;"},{"lineNumber":6,"author":{"gitId":"ong6"},"content":"import java.io.FileNotFoundException;"},{"lineNumber":7,"author":{"gitId":"ong6"},"content":"import java.util.ArrayList;"},{"lineNumber":8,"author":{"gitId":"ong6"},"content":"import java.util.List;"},{"lineNumber":9,"author":{"gitId":"ong6"},"content":""},{"lineNumber":10,"author":{"gitId":"ong6"},"content":"import org.junit.jupiter.api.Test;"},{"lineNumber":11,"author":{"gitId":"ong6"},"content":""},{"lineNumber":12,"author":{"gitId":"ong6"},"content":"class StorageTest {"},{"lineNumber":13,"author":{"gitId":"ong6"},"content":""},{"lineNumber":14,"author":{"gitId":"ong6"},"content":"    @Test"},{"lineNumber":15,"author":{"gitId":"ong6"},"content":"    void save_file_success() {"},{"lineNumber":16,"author":{"gitId":"ong6"},"content":"        try {"},{"lineNumber":17,"author":{"gitId":"ong6"},"content":"            Storage testStorage \u003d new Storage(\"StorageTest.txt\");"},{"lineNumber":18,"author":{"gitId":"ong6"},"content":"            Task temp1 \u003d new ToDo(\"event do tasks /at 2020-01-15\");"},{"lineNumber":19,"author":{"gitId":"ong6"},"content":"            List\u003cTask\u003e saveList \u003d new ArrayList\u003c\u003e();"},{"lineNumber":20,"author":{"gitId":"ong6"},"content":"            saveList.add(temp1);"},{"lineNumber":21,"author":{"gitId":"ong6"},"content":"            testStorage.save(new TaskList(saveList));"},{"lineNumber":22,"author":{"gitId":"ong6"},"content":"            File f \u003d new File(\"StorageTest.txt\");"},{"lineNumber":23,"author":{"gitId":"ong6"},"content":"            assertEquals(true, f.exists());"},{"lineNumber":24,"author":{"gitId":"ong6"},"content":"        } catch (Exception e) {"},{"lineNumber":25,"author":{"gitId":"ong6"},"content":"            e.printStackTrace();"},{"lineNumber":26,"author":{"gitId":"ong6"},"content":"        }"},{"lineNumber":27,"author":{"gitId":"ong6"},"content":"    }"},{"lineNumber":28,"author":{"gitId":"ong6"},"content":""},{"lineNumber":29,"author":{"gitId":"ong6"},"content":"    @Test"},{"lineNumber":30,"author":{"gitId":"ong6"},"content":"    void load_file_success() {"},{"lineNumber":31,"author":{"gitId":"ong6"},"content":"        try {"},{"lineNumber":32,"author":{"gitId":"ong6"},"content":"            Storage testStorage \u003d new Storage(\"StorageTest.txt\");"},{"lineNumber":33,"author":{"gitId":"ong6"},"content":"            Task expectedTask \u003d new ToDo(\"event do tasks /at 2020-01-15\");"},{"lineNumber":34,"author":{"gitId":"ong6"},"content":"            List\u003cTask\u003e storeageTasks \u003d testStorage.load();"},{"lineNumber":35,"author":{"gitId":"ong6"},"content":"            assertEquals(false, storeageTasks.isEmpty());"},{"lineNumber":36,"author":{"gitId":"ong6"},"content":"            assertEquals(expectedTask, storeageTasks.get(0));"},{"lineNumber":37,"author":{"gitId":"ong6"},"content":"        } catch (FileNotFoundException e) {"},{"lineNumber":38,"author":{"gitId":"ong6"},"content":"            e.printStackTrace();"},{"lineNumber":39,"author":{"gitId":"ong6"},"content":"        }"},{"lineNumber":40,"author":{"gitId":"ong6"},"content":""},{"lineNumber":41,"author":{"gitId":"ong6"},"content":"    }"},{"lineNumber":42,"author":{"gitId":"ong6"},"content":"}"}],"authorContributionMap":{"ong6":42}},{"path":"src/test/java/duke/StorageTest.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"ong6"},"content":"E | 0 | do tasks  | Jan 15 2020"}],"authorContributionMap":{"ong6":1}},{"path":"src/test/java/duke/TaskListTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ong6"},"content":"package duke;"},{"lineNumber":2,"author":{"gitId":"ong6"},"content":""},{"lineNumber":3,"author":{"gitId":"ong6"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;"},{"lineNumber":4,"author":{"gitId":"ong6"},"content":""},{"lineNumber":5,"author":{"gitId":"ong6"},"content":"import org.junit.jupiter.api.Test;"},{"lineNumber":6,"author":{"gitId":"ong6"},"content":""},{"lineNumber":7,"author":{"gitId":"ong6"},"content":"class TaskListTest {"},{"lineNumber":8,"author":{"gitId":"ong6"},"content":""},{"lineNumber":9,"author":{"gitId":"ong6"},"content":"    @Test"},{"lineNumber":10,"author":{"gitId":"ong6"},"content":"    void taskList_setDone_success() {"},{"lineNumber":11,"author":{"gitId":"ong6"},"content":"        TaskList temp \u003d new TaskList();"},{"lineNumber":12,"author":{"gitId":"ong6"},"content":"        temp.add(new Task(\"Test\", \"Test\"));"},{"lineNumber":13,"author":{"gitId":"ong6"},"content":"        temp.setDone(0);"},{"lineNumber":14,"author":{"gitId":"ong6"},"content":"        assertEquals(\"[[Test][X] Test]\", temp.toString());"},{"lineNumber":15,"author":{"gitId":"ong6"},"content":"    }"},{"lineNumber":16,"author":{"gitId":"ong6"},"content":"}"}],"authorContributionMap":{"ong6":16}},{"path":"test.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"ong6"},"content":"T | 0 | borrow book |  "},{"lineNumber":2,"author":{"gitId":"ong6"},"content":"D | 0 | return book  | Sunday"},{"lineNumber":3,"author":{"gitId":"ong6"},"content":"D | 1 | do homework  | no idea :-p"},{"lineNumber":4,"author":{"gitId":"ong6"},"content":"E | 0 | do tasks  | Jan 15 2020"}],"authorContributionMap":{"ong6":4}},{"path":"text-ui-test/duke.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"ong6"},"content":"T | 0 | borrow book |  "},{"lineNumber":2,"author":{"gitId":"ong6"},"content":"D | 0 | return book  | Sunday"},{"lineNumber":3,"author":{"gitId":"ong6"},"content":"D | 0 | do dishes  | Oct 11 2019"},{"lineNumber":4,"author":{"gitId":"ong6"},"content":"E | 0 | do tasks  | Jan 15 2020"},{"lineNumber":5,"author":{"gitId":"ong6"},"content":"T | 0 | borrow book |  "},{"lineNumber":6,"author":{"gitId":"ong6"},"content":"D | 0 | return book  | Sunday"},{"lineNumber":7,"author":{"gitId":"ong6"},"content":"E | 0 | project meeting  | Mon 2-4pm"},{"lineNumber":8,"author":{"gitId":"ong6"},"content":"D | 0 | do homework  | no idea :-p"},{"lineNumber":9,"author":{"gitId":"ong6"},"content":"D | 0 | do dishes  | Oct 11 2019"},{"lineNumber":10,"author":{"gitId":"ong6"},"content":"E | 0 | do tasks  | Jan 15 2020"}],"authorContributionMap":{"ong6":10}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"ong6"},"content":"todo borrow book"},{"lineNumber":2,"author":{"gitId":"ong6"},"content":"deadline return book /by Sunday"},{"lineNumber":3,"author":{"gitId":"ong6"},"content":"event project meeting /at Mon 2-4pm"},{"lineNumber":4,"author":{"gitId":"ong6"},"content":"deadline do homework /by no idea :-p"},{"lineNumber":5,"author":{"gitId":"ong6"},"content":"deadline do dishes /by 2019-10-11"},{"lineNumber":6,"author":{"gitId":"ong6"},"content":"event do tasks /at 2020-01-15"},{"lineNumber":7,"author":{"gitId":"ong6"},"content":"list"},{"lineNumber":8,"author":{"gitId":"ong6"},"content":"blah"},{"lineNumber":9,"author":{"gitId":"ong6"},"content":"todo"},{"lineNumber":10,"author":{"gitId":"ong6"},"content":"delete 3"},{"lineNumber":11,"author":{"gitId":"ong6"},"content":"list"},{"lineNumber":12,"author":{"gitId":"ong6"},"content":"find dishes"},{"lineNumber":13,"author":{"gitId":"ong6"},"content":"bye"}],"authorContributionMap":{"ong6":13}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF"},{"lineNumber":2,"author":{"gitId":"-"},"content":""},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin"},{"lineNumber":5,"author":{"gitId":"-"},"content":""},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run"},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT"},{"lineNumber":8,"author":{"gitId":"-"},"content":""},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder"},{"lineNumber":10,"author":{"gitId":"ong6"},"content":"javac  -cp ..\\src\\main\\java -Xlint:none ..\\src\\main\\java\\Duke.java"},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 ("},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1"},{"lineNumber":14,"author":{"gitId":"-"},"content":")"},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0"},{"lineNumber":16,"author":{"gitId":"-"},"content":""},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"},{"lineNumber":18,"author":{"gitId":"ong6"},"content":"java -classpath ../src/main/java Duke \u003c input.txt \u003e ACTUAL.TXT"},{"lineNumber":19,"author":{"gitId":"-"},"content":""},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM compare the output to the expected output"},{"lineNumber":21,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT"}],"authorContributionMap":{"ong6":2,"-":19}}]
