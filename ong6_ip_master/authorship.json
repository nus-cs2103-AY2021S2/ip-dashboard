[{"path":"src/main/java/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ong6"},"content":"public class Deadline extends Task {"},{"lineNumber":2,"author":{"gitId":"ong6"},"content":""},{"lineNumber":3,"author":{"gitId":"ong6"},"content":"    public Deadline(String i) {"},{"lineNumber":4,"author":{"gitId":"ong6"},"content":"        super(i);"},{"lineNumber":5,"author":{"gitId":"ong6"},"content":"    }"},{"lineNumber":6,"author":{"gitId":"ong6"},"content":""},{"lineNumber":7,"author":{"gitId":"ong6"},"content":"    @Override"},{"lineNumber":8,"author":{"gitId":"ong6"},"content":"    public String toString() {"},{"lineNumber":9,"author":{"gitId":"ong6"},"content":"        String temp \u003d String.format(\"[D]%s\", super.toString());"},{"lineNumber":10,"author":{"gitId":"ong6"},"content":"        if (temp.contains(\"/by\")) {"},{"lineNumber":11,"author":{"gitId":"ong6"},"content":"            temp \u003d temp.replace(\"/by\", \"(by:\") + \")\";"},{"lineNumber":12,"author":{"gitId":"ong6"},"content":"        }"},{"lineNumber":13,"author":{"gitId":"ong6"},"content":"        return temp;"},{"lineNumber":14,"author":{"gitId":"ong6"},"content":"    }"},{"lineNumber":15,"author":{"gitId":"ong6"},"content":"}"}],"authorContributionMap":{"ong6":15}},{"path":"src/main/java/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ong6"},"content":"import java.util.ArrayList;"},{"lineNumber":2,"author":{"gitId":"ong6"},"content":"import java.util.List;"},{"lineNumber":3,"author":{"gitId":"ong6"},"content":"import java.util.Scanner;"},{"lineNumber":4,"author":{"gitId":"ong6"},"content":""},{"lineNumber":5,"author":{"gitId":"-"},"content":"public class Duke {"},{"lineNumber":6,"author":{"gitId":"ong6"},"content":"    public static void main(String[] args) throws DukeException {"},{"lineNumber":7,"author":{"gitId":"ong6"},"content":""},{"lineNumber":8,"author":{"gitId":"ong6"},"content":"        List\u003cTask\u003e contentList \u003d new ArrayList\u003c\u003e();"},{"lineNumber":9,"author":{"gitId":"ong6"},"content":""},{"lineNumber":10,"author":{"gitId":"ong6"},"content":"        System.out.println(\"Hello! I\u0027m Duke \\nWhat can I do for you?\");"},{"lineNumber":11,"author":{"gitId":"ong6"},"content":""},{"lineNumber":12,"author":{"gitId":"ong6"},"content":"        Scanner sc \u003d new Scanner(System.in);"},{"lineNumber":13,"author":{"gitId":"ong6"},"content":""},{"lineNumber":14,"author":{"gitId":"ong6"},"content":"        while (sc.hasNextLine()) {"},{"lineNumber":15,"author":{"gitId":"ong6"},"content":"            String input \u003d sc.nextLine();"},{"lineNumber":16,"author":{"gitId":"ong6"},"content":"            StringBuilder output \u003d new StringBuilder();"},{"lineNumber":17,"author":{"gitId":"ong6"},"content":""},{"lineNumber":18,"author":{"gitId":"ong6"},"content":"            try {"},{"lineNumber":19,"author":{"gitId":"ong6"},"content":"                if (input.equals(\"bye\")) {"},{"lineNumber":20,"author":{"gitId":"ong6"},"content":"                    textWarper(\"Bye. Hope to see you again soon!\");"},{"lineNumber":21,"author":{"gitId":"ong6"},"content":"                    break;"},{"lineNumber":22,"author":{"gitId":"ong6"},"content":""},{"lineNumber":23,"author":{"gitId":"ong6"},"content":"                } else if (input.equals(\"list\")) {"},{"lineNumber":24,"author":{"gitId":"ong6"},"content":"                    output.append(\"Here are the tasks in your list: \\n\");"},{"lineNumber":25,"author":{"gitId":"ong6"},"content":"                    for (int i \u003d 0; i \u003c contentList.size(); i++) {"},{"lineNumber":26,"author":{"gitId":"ong6"},"content":"                        output.append(String.format(\"%d.%s%n\", i + 1, contentList.get(i).toString()));"},{"lineNumber":27,"author":{"gitId":"ong6"},"content":"                    }"},{"lineNumber":28,"author":{"gitId":"ong6"},"content":""},{"lineNumber":29,"author":{"gitId":"ong6"},"content":"                } else if (input.startsWith(\"done\")) {"},{"lineNumber":30,"author":{"gitId":"ong6"},"content":"                    output.append(\"Nice! I\u0027ve marked this task as done: \\n  \");"},{"lineNumber":31,"author":{"gitId":"ong6"},"content":"                    int index \u003d Integer.parseInt(input.replaceAll(\"[^0-9]\", \"\")) - 1;"},{"lineNumber":32,"author":{"gitId":"ong6"},"content":"                    contentList.get(index).setCompleted();"},{"lineNumber":33,"author":{"gitId":"ong6"},"content":"                    output.append(contentList.get(index));"},{"lineNumber":34,"author":{"gitId":"ong6"},"content":""},{"lineNumber":35,"author":{"gitId":"ong6"},"content":"                } else if (input.endsWith(\"todo\") || input.endsWith(\"deadline\") || input.endsWith(\"event\")) {"},{"lineNumber":36,"author":{"gitId":"ong6"},"content":"                    throw new DukeException(\"☹ OOPS!!! The description of a todo cannot be empty.\");"},{"lineNumber":37,"author":{"gitId":"ong6"},"content":""},{"lineNumber":38,"author":{"gitId":"ong6"},"content":"                } else if (input.startsWith(\"todo\")) {"},{"lineNumber":39,"author":{"gitId":"ong6"},"content":"                    String[] arr \u003d input.split(\" \", 2);"},{"lineNumber":40,"author":{"gitId":"ong6"},"content":"                    Task temp \u003d new ToDo(arr[1]);"},{"lineNumber":41,"author":{"gitId":"ong6"},"content":"                    contentList.add(temp);"},{"lineNumber":42,"author":{"gitId":"ong6"},"content":"                    taskAdded(output, contentList, temp);"},{"lineNumber":43,"author":{"gitId":"ong6"},"content":""},{"lineNumber":44,"author":{"gitId":"ong6"},"content":"                } else if (input.startsWith(\"deadline\")) {"},{"lineNumber":45,"author":{"gitId":"ong6"},"content":"                    String[] arr \u003d input.split(\" \", 2);"},{"lineNumber":46,"author":{"gitId":"ong6"},"content":"                    Task temp \u003d new Deadline(arr[1]);"},{"lineNumber":47,"author":{"gitId":"ong6"},"content":"                    contentList.add(temp);"},{"lineNumber":48,"author":{"gitId":"ong6"},"content":"                    taskAdded(output, contentList, temp);"},{"lineNumber":49,"author":{"gitId":"ong6"},"content":""},{"lineNumber":50,"author":{"gitId":"ong6"},"content":"                } else if (input.startsWith(\"event\")) {"},{"lineNumber":51,"author":{"gitId":"ong6"},"content":"                    String[] arr \u003d input.split(\" \", 2);"},{"lineNumber":52,"author":{"gitId":"ong6"},"content":"                    Task temp \u003d new Event(arr[1]);"},{"lineNumber":53,"author":{"gitId":"ong6"},"content":"                    contentList.add(temp);"},{"lineNumber":54,"author":{"gitId":"ong6"},"content":"                    taskAdded(output, contentList, temp);"},{"lineNumber":55,"author":{"gitId":"ong6"},"content":""},{"lineNumber":56,"author":{"gitId":"ong6"},"content":"                } else if (input.startsWith(\"delete\")) {"},{"lineNumber":57,"author":{"gitId":"ong6"},"content":"                    int index \u003d Integer.parseInt(input.replaceAll(\"[^0-9]\", \"\")) - 1;"},{"lineNumber":58,"author":{"gitId":"ong6"},"content":"                    output.append(\"Noted. I\u0027ve removed this task: \\n  \");"},{"lineNumber":59,"author":{"gitId":"ong6"},"content":"                    output.append(contentList.get(index) + \"\\n\");"},{"lineNumber":60,"author":{"gitId":"ong6"},"content":"                    contentList.remove(index);"},{"lineNumber":61,"author":{"gitId":"ong6"},"content":"                    output.append(String.format(\"Now you have %d tasks in the list.\", contentList.size()));"},{"lineNumber":62,"author":{"gitId":"ong6"},"content":""},{"lineNumber":63,"author":{"gitId":"ong6"},"content":"                } else {"},{"lineNumber":64,"author":{"gitId":"ong6"},"content":"                    throw new DukeException(\"☹ OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\");"},{"lineNumber":65,"author":{"gitId":"ong6"},"content":"                }"},{"lineNumber":66,"author":{"gitId":"ong6"},"content":"            } catch (DukeException e) {"},{"lineNumber":67,"author":{"gitId":"ong6"},"content":"                output.append(e.toString());"},{"lineNumber":68,"author":{"gitId":"ong6"},"content":"            } catch (IndexOutOfBoundsException e) {"},{"lineNumber":69,"author":{"gitId":"ong6"},"content":"                output.append(\"You have nothing in the list!\");"},{"lineNumber":70,"author":{"gitId":"-"},"content":"            }"},{"lineNumber":71,"author":{"gitId":"ong6"},"content":""},{"lineNumber":72,"author":{"gitId":"ong6"},"content":"            textWarper(output.toString());"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":74,"author":{"gitId":"ong6"},"content":""},{"lineNumber":75,"author":{"gitId":"ong6"},"content":"    }"},{"lineNumber":76,"author":{"gitId":"ong6"},"content":""},{"lineNumber":77,"author":{"gitId":"ong6"},"content":"    public static void taskAdded(StringBuilder output, List\u003cTask\u003e contentList, Task temp) {"},{"lineNumber":78,"author":{"gitId":"ong6"},"content":"        output.append(\"Got it. I\u0027ve added this task:\\n \");"},{"lineNumber":79,"author":{"gitId":"ong6"},"content":"        output.append(temp.toString() + \"\\n\");"},{"lineNumber":80,"author":{"gitId":"ong6"},"content":"        output.append(String.format(\"Now you have %d tasks in the list.\", contentList.size()));"},{"lineNumber":81,"author":{"gitId":"ong6"},"content":"    }"},{"lineNumber":82,"author":{"gitId":"ong6"},"content":""},{"lineNumber":83,"author":{"gitId":"ong6"},"content":"    public static void textWarper(String a) {"},{"lineNumber":84,"author":{"gitId":"ong6"},"content":"        System.out.println(\"____________________________________________________________\");"},{"lineNumber":85,"author":{"gitId":"ong6"},"content":"        System.out.println(a);"},{"lineNumber":86,"author":{"gitId":"ong6"},"content":"        System.out.println(\"____________________________________________________________\");"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":88,"author":{"gitId":"-"},"content":"}"}],"authorContributionMap":{"ong6":83,"-":5}},{"path":"src/main/java/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ong6"},"content":"public class DukeException extends Exception {"},{"lineNumber":2,"author":{"gitId":"ong6"},"content":"    public DukeException(String msg) {"},{"lineNumber":3,"author":{"gitId":"ong6"},"content":"        super(msg);"},{"lineNumber":4,"author":{"gitId":"ong6"},"content":"    }"},{"lineNumber":5,"author":{"gitId":"ong6"},"content":"}"}],"authorContributionMap":{"ong6":5}},{"path":"src/main/java/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ong6"},"content":"public class Event extends Task {"},{"lineNumber":2,"author":{"gitId":"ong6"},"content":""},{"lineNumber":3,"author":{"gitId":"ong6"},"content":"    public Event(String i) {"},{"lineNumber":4,"author":{"gitId":"ong6"},"content":"        super(i);"},{"lineNumber":5,"author":{"gitId":"ong6"},"content":"    }"},{"lineNumber":6,"author":{"gitId":"ong6"},"content":""},{"lineNumber":7,"author":{"gitId":"ong6"},"content":"    @Override"},{"lineNumber":8,"author":{"gitId":"ong6"},"content":"    public String toString() {"},{"lineNumber":9,"author":{"gitId":"ong6"},"content":"        String temp \u003d String.format(\"[E]%s\", super.toString());"},{"lineNumber":10,"author":{"gitId":"ong6"},"content":"        if (temp.contains(\"/at\")) {"},{"lineNumber":11,"author":{"gitId":"ong6"},"content":"            temp \u003d temp.replace(\"/at\", \"(at:\") + \")\";"},{"lineNumber":12,"author":{"gitId":"ong6"},"content":"        }"},{"lineNumber":13,"author":{"gitId":"ong6"},"content":"        return temp;"},{"lineNumber":14,"author":{"gitId":"ong6"},"content":"    }"},{"lineNumber":15,"author":{"gitId":"ong6"},"content":"}"}],"authorContributionMap":{"ong6":15}},{"path":"src/main/java/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ong6"},"content":"public class Task {"},{"lineNumber":2,"author":{"gitId":"ong6"},"content":"    private boolean completed;"},{"lineNumber":3,"author":{"gitId":"ong6"},"content":"    private String name;"},{"lineNumber":4,"author":{"gitId":"ong6"},"content":""},{"lineNumber":5,"author":{"gitId":"ong6"},"content":"    public Task(String n) {"},{"lineNumber":6,"author":{"gitId":"ong6"},"content":"        this.completed \u003d false;"},{"lineNumber":7,"author":{"gitId":"ong6"},"content":"        this.name \u003d n;"},{"lineNumber":8,"author":{"gitId":"ong6"},"content":"    }"},{"lineNumber":9,"author":{"gitId":"ong6"},"content":""},{"lineNumber":10,"author":{"gitId":"ong6"},"content":"    public boolean isCompleted() {"},{"lineNumber":11,"author":{"gitId":"ong6"},"content":"        return completed;"},{"lineNumber":12,"author":{"gitId":"ong6"},"content":"    }"},{"lineNumber":13,"author":{"gitId":"ong6"},"content":""},{"lineNumber":14,"author":{"gitId":"ong6"},"content":"    public String getName() {"},{"lineNumber":15,"author":{"gitId":"ong6"},"content":"        return name;"},{"lineNumber":16,"author":{"gitId":"ong6"},"content":"    }"},{"lineNumber":17,"author":{"gitId":"ong6"},"content":""},{"lineNumber":18,"author":{"gitId":"ong6"},"content":"    public void setCompleted() {"},{"lineNumber":19,"author":{"gitId":"ong6"},"content":"        this.completed \u003d true;"},{"lineNumber":20,"author":{"gitId":"ong6"},"content":"    }"},{"lineNumber":21,"author":{"gitId":"ong6"},"content":""},{"lineNumber":22,"author":{"gitId":"ong6"},"content":"    public String toString() {"},{"lineNumber":23,"author":{"gitId":"ong6"},"content":"        if (!this.isCompleted()) {"},{"lineNumber":24,"author":{"gitId":"ong6"},"content":"            return String.format(\"[ ] %s\", this.getName());"},{"lineNumber":25,"author":{"gitId":"ong6"},"content":"        } else {"},{"lineNumber":26,"author":{"gitId":"ong6"},"content":"            return String.format(\"[X] %s\", this.getName());"},{"lineNumber":27,"author":{"gitId":"ong6"},"content":"        }"},{"lineNumber":28,"author":{"gitId":"ong6"},"content":"    }"},{"lineNumber":29,"author":{"gitId":"ong6"},"content":""},{"lineNumber":30,"author":{"gitId":"ong6"},"content":"}"}],"authorContributionMap":{"ong6":30}},{"path":"src/main/java/ToDo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ong6"},"content":"public class ToDo extends Task {"},{"lineNumber":2,"author":{"gitId":"ong6"},"content":""},{"lineNumber":3,"author":{"gitId":"ong6"},"content":"    public ToDo(String i) {"},{"lineNumber":4,"author":{"gitId":"ong6"},"content":"        super(i);"},{"lineNumber":5,"author":{"gitId":"ong6"},"content":"    }"},{"lineNumber":6,"author":{"gitId":"ong6"},"content":""},{"lineNumber":7,"author":{"gitId":"ong6"},"content":"    @Override"},{"lineNumber":8,"author":{"gitId":"ong6"},"content":"    public String toString() {"},{"lineNumber":9,"author":{"gitId":"ong6"},"content":"        return String.format(\"[T]%s\", super.toString());"},{"lineNumber":10,"author":{"gitId":"ong6"},"content":"    }"},{"lineNumber":11,"author":{"gitId":"ong6"},"content":"}"}],"authorContributionMap":{"ong6":11}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"ong6"},"content":"todo borrow book"},{"lineNumber":2,"author":{"gitId":"ong6"},"content":"deadline return book /by Sunday"},{"lineNumber":3,"author":{"gitId":"ong6"},"content":"event project meeting /at Mon 2-4pm"},{"lineNumber":4,"author":{"gitId":"ong6"},"content":"deadline do homework /by no idea :-p"},{"lineNumber":5,"author":{"gitId":"ong6"},"content":"list"},{"lineNumber":6,"author":{"gitId":"ong6"},"content":"blah"},{"lineNumber":7,"author":{"gitId":"ong6"},"content":"todo"},{"lineNumber":8,"author":{"gitId":"ong6"},"content":"list"},{"lineNumber":9,"author":{"gitId":"ong6"},"content":"delete 3"},{"lineNumber":10,"author":{"gitId":"ong6"},"content":"bye"}],"authorContributionMap":{"ong6":10}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF"},{"lineNumber":2,"author":{"gitId":"-"},"content":""},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin"},{"lineNumber":5,"author":{"gitId":"-"},"content":""},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run"},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT"},{"lineNumber":8,"author":{"gitId":"-"},"content":""},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder"},{"lineNumber":10,"author":{"gitId":"ong6"},"content":"javac  -cp ..\\src\\main\\java -Xlint:none ..\\src\\main\\java\\*.java"},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 ("},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1"},{"lineNumber":14,"author":{"gitId":"-"},"content":")"},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0"},{"lineNumber":16,"author":{"gitId":"-"},"content":""},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"},{"lineNumber":18,"author":{"gitId":"ong6"},"content":"java -classpath ../src/main/java Duke \u003c input.txt \u003e ACTUAL.TXT"},{"lineNumber":19,"author":{"gitId":"-"},"content":""},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM compare the output to the expected output"},{"lineNumber":21,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT"}],"authorContributionMap":{"ong6":2,"-":19}}]
