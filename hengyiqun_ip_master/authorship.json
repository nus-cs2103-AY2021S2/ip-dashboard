[{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027checkstyle\u0027"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027"},{"lineNumber":6,"author":{"gitId":"-"},"content":"}"},{"lineNumber":7,"author":{"gitId":"-"},"content":""},{"lineNumber":8,"author":{"gitId":"-"},"content":"repositories {"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    mavenCentral()"},{"lineNumber":10,"author":{"gitId":"-"},"content":"}"},{"lineNumber":11,"author":{"gitId":"-"},"content":""},{"lineNumber":12,"author":{"gitId":"-"},"content":"dependencies {"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.5.0\u0027"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.5.0\u0027"},{"lineNumber":15,"author":{"gitId":"hengyiqun"},"content":""},{"lineNumber":16,"author":{"gitId":"hengyiqun"},"content":"    String javaFxVersion \u003d \u002711\u0027"},{"lineNumber":17,"author":{"gitId":"hengyiqun"},"content":""},{"lineNumber":18,"author":{"gitId":"hengyiqun"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027"},{"lineNumber":19,"author":{"gitId":"hengyiqun"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"},{"lineNumber":20,"author":{"gitId":"hengyiqun"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"},{"lineNumber":21,"author":{"gitId":"hengyiqun"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027"},{"lineNumber":22,"author":{"gitId":"hengyiqun"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"},{"lineNumber":23,"author":{"gitId":"hengyiqun"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"},{"lineNumber":24,"author":{"gitId":"hengyiqun"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027"},{"lineNumber":25,"author":{"gitId":"hengyiqun"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"},{"lineNumber":26,"author":{"gitId":"hengyiqun"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"},{"lineNumber":27,"author":{"gitId":"hengyiqun"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027"},{"lineNumber":28,"author":{"gitId":"hengyiqun"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"},{"lineNumber":29,"author":{"gitId":"hengyiqun"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"},{"lineNumber":30,"author":{"gitId":"-"},"content":"}"},{"lineNumber":31,"author":{"gitId":"-"},"content":""},{"lineNumber":32,"author":{"gitId":"-"},"content":"test {"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    useJUnitPlatform()"},{"lineNumber":34,"author":{"gitId":"-"},"content":""},{"lineNumber":35,"author":{"gitId":"-"},"content":"    testLogging {"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\""},{"lineNumber":37,"author":{"gitId":"-"},"content":""},{"lineNumber":38,"author":{"gitId":"-"},"content":"        showExceptions true"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\""},{"lineNumber":40,"author":{"gitId":"-"},"content":"        showCauses true"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        showStackTraces true"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":44,"author":{"gitId":"-"},"content":"}"},{"lineNumber":45,"author":{"gitId":"-"},"content":""},{"lineNumber":46,"author":{"gitId":"-"},"content":"application {"},{"lineNumber":47,"author":{"gitId":"hengyiqun"},"content":"    mainClassName \u003d \"duke.Launcher\""},{"lineNumber":48,"author":{"gitId":"-"},"content":"}"},{"lineNumber":49,"author":{"gitId":"-"},"content":""},{"lineNumber":50,"author":{"gitId":"-"},"content":"shadowJar {"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    archiveBaseName \u003d \"duke\""},{"lineNumber":52,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null"},{"lineNumber":53,"author":{"gitId":"-"},"content":"}"},{"lineNumber":54,"author":{"gitId":"-"},"content":""},{"lineNumber":55,"author":{"gitId":"-"},"content":"checkstyle {"},{"lineNumber":56,"author":{"gitId":"hengyiqun"},"content":"    toolVersion \u003d \u00278.32\u0027"},{"lineNumber":57,"author":{"gitId":"-"},"content":"}"},{"lineNumber":58,"author":{"gitId":"-"},"content":""},{"lineNumber":59,"author":{"gitId":"-"},"content":"run{"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in"},{"lineNumber":61,"author":{"gitId":"-"},"content":"}"}],"authorContributionMap":{"hengyiqun":17,"-":44}},{"path":"data/duke.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"hengyiqun"},"content":"E | 1 | play | 2021-05-17"},{"lineNumber":2,"author":{"gitId":"hengyiqun"},"content":"E | 1 | career fair | 2021-03-12"},{"lineNumber":3,"author":{"gitId":"hengyiqun"},"content":"D | 0 | project submission | 2021-03-14"},{"lineNumber":4,"author":{"gitId":"hengyiqun"},"content":"T | 0 | read books"},{"lineNumber":5,"author":{"gitId":"hengyiqun"},"content":"D | 0 | return books | 2021-04-06"}],"authorContributionMap":{"hengyiqun":5}},{"path":"docs/README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"# User Guide"},{"lineNumber":2,"author":{"gitId":"-"},"content":""},{"lineNumber":3,"author":{"gitId":"hengyiqun"},"content":"## Introduction"},{"lineNumber":4,"author":{"gitId":"hengyiqun"},"content":"Duke is a task manager designed to keep track of your personal duke."},{"lineNumber":5,"author":{"gitId":"-"},"content":""},{"lineNumber":6,"author":{"gitId":"hengyiqun"},"content":"![Image](Ui.png)"},{"lineNumber":7,"author":{"gitId":"-"},"content":""},{"lineNumber":8,"author":{"gitId":"-"},"content":"## Usage"},{"lineNumber":9,"author":{"gitId":"hengyiqun"},"content":"Summary"},{"lineNumber":10,"author":{"gitId":"-"},"content":""},{"lineNumber":11,"author":{"gitId":"hengyiqun"},"content":"Command | Examples"},{"lineNumber":12,"author":{"gitId":"hengyiqun"},"content":"------- | --------"},{"lineNumber":13,"author":{"gitId":"hengyiqun"},"content":"`list`| `list`"},{"lineNumber":14,"author":{"gitId":"hengyiqun"},"content":"`done`| `done`"},{"lineNumber":15,"author":{"gitId":"hengyiqun"},"content":"`delete TASK_INDEX` | `delete 3`"},{"lineNumber":16,"author":{"gitId":"hengyiqun"},"content":"`bye`|`bye`"},{"lineNumber":17,"author":{"gitId":"hengyiqun"},"content":"`todo DESCRIPTION` | `todo read Sherlock Holmes`"},{"lineNumber":18,"author":{"gitId":"hengyiqun"},"content":"`deadline DESCRIPTION /by DATE` | `deadline project submission /by 2021-03-14`"},{"lineNumber":19,"author":{"gitId":"hengyiqun"},"content":"`event DESCRIPTION /at DATE` | `event career fair /at 2021-03-15`"},{"lineNumber":20,"author":{"gitId":"hengyiqun"},"content":"`find DESCRIPTION` |`find career fair`"},{"lineNumber":21,"author":{"gitId":"-"},"content":""},{"lineNumber":22,"author":{"gitId":"hengyiqun"},"content":"### `list` - lists your existing duke"},{"lineNumber":23,"author":{"gitId":"-"},"content":""},{"lineNumber":24,"author":{"gitId":"hengyiqun"},"content":"Example of usage: `list`"},{"lineNumber":25,"author":{"gitId":"-"},"content":""},{"lineNumber":26,"author":{"gitId":"hengyiqun"},"content":"### `done` - sets the 3rd task as completed"},{"lineNumber":27,"author":{"gitId":"-"},"content":""},{"lineNumber":28,"author":{"gitId":"hengyiqun"},"content":"Example of usage: `done 3`"},{"lineNumber":29,"author":{"gitId":"-"},"content":""},{"lineNumber":30,"author":{"gitId":"hengyiqun"},"content":"### `delete` - deletes the 3rd task"},{"lineNumber":31,"author":{"gitId":"hengyiqun"},"content":""},{"lineNumber":32,"author":{"gitId":"hengyiqun"},"content":"Example of usage: `delete 3`"},{"lineNumber":33,"author":{"gitId":"hengyiqun"},"content":""},{"lineNumber":34,"author":{"gitId":"hengyiqun"},"content":"### `bye` - thanks Duke for keeping track of your duke"},{"lineNumber":35,"author":{"gitId":"hengyiqun"},"content":""},{"lineNumber":36,"author":{"gitId":"hengyiqun"},"content":"Example of usage: `bye`"},{"lineNumber":37,"author":{"gitId":"hengyiqun"},"content":""},{"lineNumber":38,"author":{"gitId":"hengyiqun"},"content":"### `todo` - tells Duke of a task you have to do"},{"lineNumber":39,"author":{"gitId":"hengyiqun"},"content":""},{"lineNumber":40,"author":{"gitId":"hengyiqun"},"content":"Example of usage: `todo read Sherlock Holmes`"},{"lineNumber":41,"author":{"gitId":"hengyiqun"},"content":""},{"lineNumber":42,"author":{"gitId":"hengyiqun"},"content":"Tells Duke that you have to read Sherlock Holmes soon."},{"lineNumber":43,"author":{"gitId":"hengyiqun"},"content":""},{"lineNumber":44,"author":{"gitId":"hengyiqun"},"content":"### `deadline` - tells Duke of a deadline you have to meet"},{"lineNumber":45,"author":{"gitId":"hengyiqun"},"content":""},{"lineNumber":46,"author":{"gitId":"hengyiqun"},"content":"Example of usage: `deadline project submission /by 2021-03-14`"},{"lineNumber":47,"author":{"gitId":"hengyiqun"},"content":""},{"lineNumber":48,"author":{"gitId":"hengyiqun"},"content":"Tells Duke that you have a project submission to be performed by 2021 March 14."},{"lineNumber":49,"author":{"gitId":"hengyiqun"},"content":""},{"lineNumber":50,"author":{"gitId":"hengyiqun"},"content":"### `event` - tells Duke of an event you wish to attend"},{"lineNumber":51,"author":{"gitId":"hengyiqun"},"content":""},{"lineNumber":52,"author":{"gitId":"hengyiqun"},"content":"Example of usage: `event career fair /at 2021-03-15`"},{"lineNumber":53,"author":{"gitId":"hengyiqun"},"content":""},{"lineNumber":54,"author":{"gitId":"hengyiqun"},"content":"Tells Duke that you have a career fair to attend on 2021 March 15."},{"lineNumber":55,"author":{"gitId":"hengyiqun"},"content":""},{"lineNumber":56,"author":{"gitId":"hengyiqun"},"content":"### `find` - tells Duke to find one of your task"},{"lineNumber":57,"author":{"gitId":"hengyiqun"},"content":""},{"lineNumber":58,"author":{"gitId":"hengyiqun"},"content":"Example of usage: `find career fair`"},{"lineNumber":59,"author":{"gitId":"hengyiqun"},"content":""},{"lineNumber":60,"author":{"gitId":"hengyiqun"},"content":"Tells Duke to find if your have any duke related to career fair."},{"lineNumber":61,"author":{"gitId":"hengyiqun"},"content":""},{"lineNumber":62,"author":{"gitId":"hengyiqun"},"content":"## Acknowledgements"},{"lineNumber":63,"author":{"gitId":"hengyiqun"},"content":"The images of Pikachu and Psyduck are reproduced from https://premierespeakers.com/pikachu and https://sonicpokemon.fandom.com/wiki/Psyduck respectively"}],"authorContributionMap":{"hengyiqun":52,"-":11}},{"path":"src/main/java/duke/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"hengyiqun"},"content":"package duke;"},{"lineNumber":2,"author":{"gitId":"hengyiqun"},"content":""},{"lineNumber":3,"author":{"gitId":"hengyiqun"},"content":"import duke.parser.Parser;"},{"lineNumber":4,"author":{"gitId":"hengyiqun"},"content":"import duke.storage.Storage;"},{"lineNumber":5,"author":{"gitId":"hengyiqun"},"content":"import duke.tasks.TaskList;"},{"lineNumber":6,"author":{"gitId":"hengyiqun"},"content":"import duke.ui.Ui;"},{"lineNumber":7,"author":{"gitId":"hengyiqun"},"content":"import duke.commands.Command;"},{"lineNumber":8,"author":{"gitId":"hengyiqun"},"content":""},{"lineNumber":9,"author":{"gitId":"hengyiqun"},"content":"import java.io.FileNotFoundException;"},{"lineNumber":10,"author":{"gitId":"hengyiqun"},"content":""},{"lineNumber":11,"author":{"gitId":"hengyiqun"},"content":"/**"},{"lineNumber":12,"author":{"gitId":"hengyiqun"},"content":" * Duke allows the user to maintain a list of tasks, and responses to user commands."},{"lineNumber":13,"author":{"gitId":"hengyiqun"},"content":" */"},{"lineNumber":14,"author":{"gitId":"-"},"content":"public class Duke {"},{"lineNumber":15,"author":{"gitId":"hengyiqun"},"content":"    private Storage storage;"},{"lineNumber":16,"author":{"gitId":"hengyiqun"},"content":"    private TaskList tasks;"},{"lineNumber":17,"author":{"gitId":"hengyiqun"},"content":"    private Ui ui;"},{"lineNumber":18,"author":{"gitId":"hengyiqun"},"content":"    private String filePath \u003d \"\";"},{"lineNumber":19,"author":{"gitId":"hengyiqun"},"content":""},{"lineNumber":20,"author":{"gitId":"hengyiqun"},"content":"    /**"},{"lineNumber":21,"author":{"gitId":"hengyiqun"},"content":"     * Initialises Duke."},{"lineNumber":22,"author":{"gitId":"hengyiqun"},"content":"     *"},{"lineNumber":23,"author":{"gitId":"hengyiqun"},"content":"     * @param filePath File path to a .txt file containing the list of tasks."},{"lineNumber":24,"author":{"gitId":"hengyiqun"},"content":"     */"},{"lineNumber":25,"author":{"gitId":"hengyiqun"},"content":"    public Duke(String filePath) {"},{"lineNumber":26,"author":{"gitId":"hengyiqun"},"content":"        this.ui \u003d new Ui();"},{"lineNumber":27,"author":{"gitId":"hengyiqun"},"content":"        this.ui.greet();"},{"lineNumber":28,"author":{"gitId":"hengyiqun"},"content":"        this.storage \u003d new Storage(filePath);"},{"lineNumber":29,"author":{"gitId":"hengyiqun"},"content":"        this.filePath \u003d filePath;"},{"lineNumber":30,"author":{"gitId":"hengyiqun"},"content":"        try {"},{"lineNumber":31,"author":{"gitId":"hengyiqun"},"content":"            tasks \u003d new TaskList(storage.load());"},{"lineNumber":32,"author":{"gitId":"hengyiqun"},"content":"        } catch (FileNotFoundException e) {"},{"lineNumber":33,"author":{"gitId":"hengyiqun"},"content":"            tasks \u003d new TaskList();"},{"lineNumber":34,"author":{"gitId":"hengyiqun"},"content":"        }"},{"lineNumber":35,"author":{"gitId":"hengyiqun"},"content":"    }"},{"lineNumber":36,"author":{"gitId":"hengyiqun"},"content":""},{"lineNumber":37,"author":{"gitId":"hengyiqun"},"content":"    /**"},{"lineNumber":38,"author":{"gitId":"hengyiqun"},"content":"     * Returns response from Duke when the user keys in his / her input."},{"lineNumber":39,"author":{"gitId":"hengyiqun"},"content":"     *"},{"lineNumber":40,"author":{"gitId":"hengyiqun"},"content":"     * @param input String input from the user."},{"lineNumber":41,"author":{"gitId":"hengyiqun"},"content":"     * @return String response from Duke."},{"lineNumber":42,"author":{"gitId":"hengyiqun"},"content":"     */"},{"lineNumber":43,"author":{"gitId":"hengyiqun"},"content":"    public String getResponse(String input) {"},{"lineNumber":44,"author":{"gitId":"hengyiqun"},"content":"        Parser parser \u003d new Parser(this.tasks);"},{"lineNumber":45,"author":{"gitId":"hengyiqun"},"content":"        Command command \u003d parser.parse(input);"},{"lineNumber":46,"author":{"gitId":"hengyiqun"},"content":"        command \u003d command.process();"},{"lineNumber":47,"author":{"gitId":"hengyiqun"},"content":"        // message is generated before modifying the task list so that we can get"},{"lineNumber":48,"author":{"gitId":"hengyiqun"},"content":"        // the corresponding string for the deleted task when delete is called"},{"lineNumber":49,"author":{"gitId":"hengyiqun"},"content":"        String message \u003d command.toString();"},{"lineNumber":50,"author":{"gitId":"hengyiqun"},"content":"        this.tasks \u003d command.execute();"},{"lineNumber":51,"author":{"gitId":"hengyiqun"},"content":"        this.storage.save(this.tasks);"},{"lineNumber":52,"author":{"gitId":"hengyiqun"},"content":"        return \"Duke says:\\n\" + this.ui.format(message);"},{"lineNumber":53,"author":{"gitId":"hengyiqun"},"content":"    }"},{"lineNumber":54,"author":{"gitId":"hengyiqun"},"content":""},{"lineNumber":55,"author":{"gitId":"hengyiqun"},"content":"    /**"},{"lineNumber":56,"author":{"gitId":"hengyiqun"},"content":"     * Returns a greeting, in String, to the user."},{"lineNumber":57,"author":{"gitId":"hengyiqun"},"content":"     *"},{"lineNumber":58,"author":{"gitId":"hengyiqun"},"content":"     * @return Greeting, in String."},{"lineNumber":59,"author":{"gitId":"hengyiqun"},"content":"     */"},{"lineNumber":60,"author":{"gitId":"hengyiqun"},"content":"    public String getGreeting() {"},{"lineNumber":61,"author":{"gitId":"hengyiqun"},"content":"        return this.ui.greet();"},{"lineNumber":62,"author":{"gitId":"hengyiqun"},"content":"    }"},{"lineNumber":63,"author":{"gitId":"hengyiqun"},"content":"}"}],"authorContributionMap":{"hengyiqun":62,"-":1}},{"path":"src/main/java/duke/Launcher.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"hengyiqun"},"content":"package duke;"},{"lineNumber":2,"author":{"gitId":"hengyiqun"},"content":""},{"lineNumber":3,"author":{"gitId":"hengyiqun"},"content":"import duke.javafx.Main;"},{"lineNumber":4,"author":{"gitId":"hengyiqun"},"content":""},{"lineNumber":5,"author":{"gitId":"hengyiqun"},"content":"import javafx.application.Application;"},{"lineNumber":6,"author":{"gitId":"hengyiqun"},"content":""},{"lineNumber":7,"author":{"gitId":"hengyiqun"},"content":"/**"},{"lineNumber":8,"author":{"gitId":"hengyiqun"},"content":" * A launcher class to work around classpath issues."},{"lineNumber":9,"author":{"gitId":"hengyiqun"},"content":" */"},{"lineNumber":10,"author":{"gitId":"hengyiqun"},"content":"public class Launcher {"},{"lineNumber":11,"author":{"gitId":"hengyiqun"},"content":"    public static void main(String[] args) {"},{"lineNumber":12,"author":{"gitId":"hengyiqun"},"content":"        Application.launch(Main.class, args);"},{"lineNumber":13,"author":{"gitId":"hengyiqun"},"content":"    }"},{"lineNumber":14,"author":{"gitId":"hengyiqun"},"content":"}"}],"authorContributionMap":{"hengyiqun":14}},{"path":"src/main/java/duke/commands/ByeCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"hengyiqun"},"content":"package duke.commands;"},{"lineNumber":2,"author":{"gitId":"hengyiqun"},"content":""},{"lineNumber":3,"author":{"gitId":"hengyiqun"},"content":"import duke.tasks.TaskList;"},{"lineNumber":4,"author":{"gitId":"hengyiqun"},"content":""},{"lineNumber":5,"author":{"gitId":"hengyiqun"},"content":"/**"},{"lineNumber":6,"author":{"gitId":"hengyiqun"},"content":" * ByeCommand is called when the user indicates that he has finished using the Duke application."},{"lineNumber":7,"author":{"gitId":"hengyiqun"},"content":" */"},{"lineNumber":8,"author":{"gitId":"hengyiqun"},"content":"public class ByeCommand extends Command {"},{"lineNumber":9,"author":{"gitId":"hengyiqun"},"content":""},{"lineNumber":10,"author":{"gitId":"hengyiqun"},"content":"    public ByeCommand(TaskList taskList) {"},{"lineNumber":11,"author":{"gitId":"hengyiqun"},"content":"        super(taskList);"},{"lineNumber":12,"author":{"gitId":"hengyiqun"},"content":"    }"},{"lineNumber":13,"author":{"gitId":"hengyiqun"},"content":""},{"lineNumber":14,"author":{"gitId":"hengyiqun"},"content":"    public ByeCommand(String[] userInput, TaskList taskList) {"},{"lineNumber":15,"author":{"gitId":"hengyiqun"},"content":"        super(userInput, taskList);"},{"lineNumber":16,"author":{"gitId":"hengyiqun"},"content":"    }"},{"lineNumber":17,"author":{"gitId":"hengyiqun"},"content":""},{"lineNumber":18,"author":{"gitId":"hengyiqun"},"content":"    @Override"},{"lineNumber":19,"author":{"gitId":"hengyiqun"},"content":"    public Command process() {"},{"lineNumber":20,"author":{"gitId":"hengyiqun"},"content":"        return new ByeCommand(this.getTaskList());"},{"lineNumber":21,"author":{"gitId":"hengyiqun"},"content":"    }"},{"lineNumber":22,"author":{"gitId":"hengyiqun"},"content":""},{"lineNumber":23,"author":{"gitId":"hengyiqun"},"content":"    @Override"},{"lineNumber":24,"author":{"gitId":"hengyiqun"},"content":"    public TaskList execute() {"},{"lineNumber":25,"author":{"gitId":"hengyiqun"},"content":"        return this.getTaskList();"},{"lineNumber":26,"author":{"gitId":"hengyiqun"},"content":"    }"},{"lineNumber":27,"author":{"gitId":"hengyiqun"},"content":""},{"lineNumber":28,"author":{"gitId":"hengyiqun"},"content":"    @Override"},{"lineNumber":29,"author":{"gitId":"hengyiqun"},"content":"    public String toString() {"},{"lineNumber":30,"author":{"gitId":"hengyiqun"},"content":"        return \"Bye. Hope to see you again soon!\";"},{"lineNumber":31,"author":{"gitId":"hengyiqun"},"content":"    }"},{"lineNumber":32,"author":{"gitId":"hengyiqun"},"content":"}"}],"authorContributionMap":{"hengyiqun":32}},{"path":"src/main/java/duke/commands/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"hengyiqun"},"content":"package duke.commands;"},{"lineNumber":2,"author":{"gitId":"hengyiqun"},"content":""},{"lineNumber":3,"author":{"gitId":"hengyiqun"},"content":"import duke.tasks.TaskList;"},{"lineNumber":4,"author":{"gitId":"hengyiqun"},"content":""},{"lineNumber":5,"author":{"gitId":"hengyiqun"},"content":"import java.time.LocalDate;"},{"lineNumber":6,"author":{"gitId":"hengyiqun"},"content":""},{"lineNumber":7,"author":{"gitId":"hengyiqun"},"content":"/**"},{"lineNumber":8,"author":{"gitId":"hengyiqun"},"content":" * Command is a parent class for inheriting by specific commands."},{"lineNumber":9,"author":{"gitId":"hengyiqun"},"content":" */"},{"lineNumber":10,"author":{"gitId":"hengyiqun"},"content":"public abstract class Command {"},{"lineNumber":11,"author":{"gitId":"hengyiqun"},"content":"    private String[] userInput;"},{"lineNumber":12,"author":{"gitId":"hengyiqun"},"content":"    private TaskList taskList;"},{"lineNumber":13,"author":{"gitId":"hengyiqun"},"content":""},{"lineNumber":14,"author":{"gitId":"hengyiqun"},"content":"    protected Command(TaskList taskList) {"},{"lineNumber":15,"author":{"gitId":"hengyiqun"},"content":"        this.taskList \u003d taskList;"},{"lineNumber":16,"author":{"gitId":"hengyiqun"},"content":"    }"},{"lineNumber":17,"author":{"gitId":"hengyiqun"},"content":""},{"lineNumber":18,"author":{"gitId":"hengyiqun"},"content":"    protected Command(String[] userInput, TaskList taskList) {"},{"lineNumber":19,"author":{"gitId":"hengyiqun"},"content":"        this.userInput \u003d userInput;"},{"lineNumber":20,"author":{"gitId":"hengyiqun"},"content":"        this.taskList \u003d taskList;"},{"lineNumber":21,"author":{"gitId":"hengyiqun"},"content":"    }"},{"lineNumber":22,"author":{"gitId":"hengyiqun"},"content":""},{"lineNumber":23,"author":{"gitId":"hengyiqun"},"content":"    /**"},{"lineNumber":24,"author":{"gitId":"hengyiqun"},"content":"     * Gets the task description from the user input."},{"lineNumber":25,"author":{"gitId":"hengyiqun"},"content":"     *"},{"lineNumber":26,"author":{"gitId":"hengyiqun"},"content":"     * @param input String array containing the command entered by the user."},{"lineNumber":27,"author":{"gitId":"hengyiqun"},"content":"     * @param delimiter String used for identifying due date of the tasks."},{"lineNumber":28,"author":{"gitId":"hengyiqun"},"content":"     * @return A String description of the task."},{"lineNumber":29,"author":{"gitId":"hengyiqun"},"content":"     */"},{"lineNumber":30,"author":{"gitId":"hengyiqun"},"content":"    protected String getDescription(String[] input, String delimiter) {"},{"lineNumber":31,"author":{"gitId":"hengyiqun"},"content":"        String description \u003d \"\";"},{"lineNumber":32,"author":{"gitId":"hengyiqun"},"content":"        boolean first \u003d true;"},{"lineNumber":33,"author":{"gitId":"hengyiqun"},"content":"        for (int i \u003d 1; i \u003c input.length; ++i) {"},{"lineNumber":34,"author":{"gitId":"hengyiqun"},"content":"            if (!input[i].equals(delimiter)) {"},{"lineNumber":35,"author":{"gitId":"hengyiqun"},"content":"                if (!first) {"},{"lineNumber":36,"author":{"gitId":"hengyiqun"},"content":"                    description +\u003d \" \" + input[i];"},{"lineNumber":37,"author":{"gitId":"hengyiqun"},"content":"                } else {"},{"lineNumber":38,"author":{"gitId":"hengyiqun"},"content":"                    description +\u003d input[i];"},{"lineNumber":39,"author":{"gitId":"hengyiqun"},"content":"                }"},{"lineNumber":40,"author":{"gitId":"hengyiqun"},"content":"                first \u003d false;"},{"lineNumber":41,"author":{"gitId":"hengyiqun"},"content":"            } else {"},{"lineNumber":42,"author":{"gitId":"hengyiqun"},"content":"                break;"},{"lineNumber":43,"author":{"gitId":"hengyiqun"},"content":"            }"},{"lineNumber":44,"author":{"gitId":"hengyiqun"},"content":"        }"},{"lineNumber":45,"author":{"gitId":"hengyiqun"},"content":"        return description;"},{"lineNumber":46,"author":{"gitId":"hengyiqun"},"content":"    }"},{"lineNumber":47,"author":{"gitId":"hengyiqun"},"content":""},{"lineNumber":48,"author":{"gitId":"hengyiqun"},"content":"    /**"},{"lineNumber":49,"author":{"gitId":"hengyiqun"},"content":"     * Obtains the due date of the task of concern."},{"lineNumber":50,"author":{"gitId":"hengyiqun"},"content":"     *"},{"lineNumber":51,"author":{"gitId":"hengyiqun"},"content":"     * @param input String array containing the command entered by the user."},{"lineNumber":52,"author":{"gitId":"hengyiqun"},"content":"     * @param delimiter String used for identifying due date of the task."},{"lineNumber":53,"author":{"gitId":"hengyiqun"},"content":"     * @return Due date for the task of concern."},{"lineNumber":54,"author":{"gitId":"hengyiqun"},"content":"     */"},{"lineNumber":55,"author":{"gitId":"hengyiqun"},"content":"    protected LocalDate getDueDate(String[] input, String delimiter) {"},{"lineNumber":56,"author":{"gitId":"hengyiqun"},"content":"        boolean flag \u003d false;"},{"lineNumber":57,"author":{"gitId":"hengyiqun"},"content":"        boolean first \u003d true;"},{"lineNumber":58,"author":{"gitId":"hengyiqun"},"content":"        String dueDate \u003d \"\";"},{"lineNumber":59,"author":{"gitId":"hengyiqun"},"content":"        for (String s : input) {"},{"lineNumber":60,"author":{"gitId":"hengyiqun"},"content":"            if (flag) {"},{"lineNumber":61,"author":{"gitId":"hengyiqun"},"content":"                if (!first) {"},{"lineNumber":62,"author":{"gitId":"hengyiqun"},"content":"                    dueDate +\u003d \u0027 \u0027 + s;"},{"lineNumber":63,"author":{"gitId":"hengyiqun"},"content":"                } else {"},{"lineNumber":64,"author":{"gitId":"hengyiqun"},"content":"                    dueDate +\u003d s;"},{"lineNumber":65,"author":{"gitId":"hengyiqun"},"content":"                }"},{"lineNumber":66,"author":{"gitId":"hengyiqun"},"content":"                first \u003d false;"},{"lineNumber":67,"author":{"gitId":"hengyiqun"},"content":"            }"},{"lineNumber":68,"author":{"gitId":"hengyiqun"},"content":"            if (s.equals(delimiter)) {"},{"lineNumber":69,"author":{"gitId":"hengyiqun"},"content":"                flag \u003d true;"},{"lineNumber":70,"author":{"gitId":"hengyiqun"},"content":"            }"},{"lineNumber":71,"author":{"gitId":"hengyiqun"},"content":"        }"},{"lineNumber":72,"author":{"gitId":"hengyiqun"},"content":"        return LocalDate.parse(dueDate);"},{"lineNumber":73,"author":{"gitId":"hengyiqun"},"content":"    }"},{"lineNumber":74,"author":{"gitId":"hengyiqun"},"content":""},{"lineNumber":75,"author":{"gitId":"hengyiqun"},"content":"    public abstract TaskList execute();"},{"lineNumber":76,"author":{"gitId":"hengyiqun"},"content":""},{"lineNumber":77,"author":{"gitId":"hengyiqun"},"content":"    public abstract Command process();"},{"lineNumber":78,"author":{"gitId":"hengyiqun"},"content":""},{"lineNumber":79,"author":{"gitId":"hengyiqun"},"content":"    public String[] getUserInput() {"},{"lineNumber":80,"author":{"gitId":"hengyiqun"},"content":"        return this.userInput;"},{"lineNumber":81,"author":{"gitId":"hengyiqun"},"content":"    }"},{"lineNumber":82,"author":{"gitId":"hengyiqun"},"content":""},{"lineNumber":83,"author":{"gitId":"hengyiqun"},"content":"    public TaskList getTaskList() {"},{"lineNumber":84,"author":{"gitId":"hengyiqun"},"content":"        return this.taskList;"},{"lineNumber":85,"author":{"gitId":"hengyiqun"},"content":"    }"},{"lineNumber":86,"author":{"gitId":"hengyiqun"},"content":"}"}],"authorContributionMap":{"hengyiqun":86}},{"path":"src/main/java/duke/commands/DeadlineCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"hengyiqun"},"content":"package duke.commands;"},{"lineNumber":2,"author":{"gitId":"hengyiqun"},"content":""},{"lineNumber":3,"author":{"gitId":"hengyiqun"},"content":"import duke.parser.DuplicateException;"},{"lineNumber":4,"author":{"gitId":"hengyiqun"},"content":"import duke.parser.InsufficientArgumentsException;"},{"lineNumber":5,"author":{"gitId":"hengyiqun"},"content":"import duke.tasks.TaskList;"},{"lineNumber":6,"author":{"gitId":"hengyiqun"},"content":"import duke.tasks.Deadline;"},{"lineNumber":7,"author":{"gitId":"hengyiqun"},"content":""},{"lineNumber":8,"author":{"gitId":"hengyiqun"},"content":"import java.time.LocalDate;"},{"lineNumber":9,"author":{"gitId":"hengyiqun"},"content":""},{"lineNumber":10,"author":{"gitId":"hengyiqun"},"content":"/**"},{"lineNumber":11,"author":{"gitId":"hengyiqun"},"content":" * DeadlineCommand is a command that adds a Deadline to the task list."},{"lineNumber":12,"author":{"gitId":"hengyiqun"},"content":" */"},{"lineNumber":13,"author":{"gitId":"hengyiqun"},"content":"public class DeadlineCommand extends Command {"},{"lineNumber":14,"author":{"gitId":"hengyiqun"},"content":"    private String taskDescription;"},{"lineNumber":15,"author":{"gitId":"hengyiqun"},"content":"    private LocalDate dueDate;"},{"lineNumber":16,"author":{"gitId":"hengyiqun"},"content":""},{"lineNumber":17,"author":{"gitId":"hengyiqun"},"content":"    public DeadlineCommand(TaskList taskList, String taskDescription, LocalDate dueDate) {"},{"lineNumber":18,"author":{"gitId":"hengyiqun"},"content":"        super(taskList);"},{"lineNumber":19,"author":{"gitId":"hengyiqun"},"content":"        this.taskDescription \u003d taskDescription;"},{"lineNumber":20,"author":{"gitId":"hengyiqun"},"content":"        this.dueDate \u003d dueDate;"},{"lineNumber":21,"author":{"gitId":"hengyiqun"},"content":"    }"},{"lineNumber":22,"author":{"gitId":"hengyiqun"},"content":""},{"lineNumber":23,"author":{"gitId":"hengyiqun"},"content":"    public DeadlineCommand(String[] userInput, TaskList taskList) {"},{"lineNumber":24,"author":{"gitId":"hengyiqun"},"content":"        super(userInput, taskList);"},{"lineNumber":25,"author":{"gitId":"hengyiqun"},"content":"        this.taskDescription \u003d \"\";"},{"lineNumber":26,"author":{"gitId":"hengyiqun"},"content":"        this.dueDate \u003d null;"},{"lineNumber":27,"author":{"gitId":"hengyiqun"},"content":"    }"},{"lineNumber":28,"author":{"gitId":"hengyiqun"},"content":""},{"lineNumber":29,"author":{"gitId":"hengyiqun"},"content":"    @Override"},{"lineNumber":30,"author":{"gitId":"hengyiqun"},"content":"    public Command process() {"},{"lineNumber":31,"author":{"gitId":"hengyiqun"},"content":"        try {"},{"lineNumber":32,"author":{"gitId":"hengyiqun"},"content":"            if (this.getUserInput().length \u003d\u003d 1) {"},{"lineNumber":33,"author":{"gitId":"hengyiqun"},"content":"                throw new InsufficientArgumentsException(\"OOPS!!! The \""},{"lineNumber":34,"author":{"gitId":"hengyiqun"},"content":"                        + \"description of a deadline cannot be empty.\");"},{"lineNumber":35,"author":{"gitId":"hengyiqun"},"content":"            }"},{"lineNumber":36,"author":{"gitId":"hengyiqun"},"content":"            String taskDescription \u003d this.getDescription(this.getUserInput(), \"/by\");"},{"lineNumber":37,"author":{"gitId":"hengyiqun"},"content":"            this.getTaskList().hasDuplicate(taskDescription);"},{"lineNumber":38,"author":{"gitId":"hengyiqun"},"content":"            LocalDate dueDate \u003d this.getDueDate(this.getUserInput(), \"/by\");"},{"lineNumber":39,"author":{"gitId":"hengyiqun"},"content":"            return new DeadlineCommand(this.getTaskList(), taskDescription, dueDate);"},{"lineNumber":40,"author":{"gitId":"hengyiqun"},"content":"        } catch (InsufficientArgumentsException | DuplicateException e) {"},{"lineNumber":41,"author":{"gitId":"hengyiqun"},"content":"            return new ErrorCommand(this.getTaskList(), e.getMessage());"},{"lineNumber":42,"author":{"gitId":"hengyiqun"},"content":"        }"},{"lineNumber":43,"author":{"gitId":"hengyiqun"},"content":"    }"},{"lineNumber":44,"author":{"gitId":"hengyiqun"},"content":""},{"lineNumber":45,"author":{"gitId":"hengyiqun"},"content":"    @Override"},{"lineNumber":46,"author":{"gitId":"hengyiqun"},"content":"    public TaskList execute() {"},{"lineNumber":47,"author":{"gitId":"hengyiqun"},"content":"        LocalDate dueDate \u003d this.dueDate;"},{"lineNumber":48,"author":{"gitId":"hengyiqun"},"content":"        String taskDescription \u003d this.taskDescription;"},{"lineNumber":49,"author":{"gitId":"hengyiqun"},"content":"        Deadline deadline \u003d new Deadline(taskDescription, dueDate);"},{"lineNumber":50,"author":{"gitId":"hengyiqun"},"content":"        TaskList taskList \u003d this.getTaskList();"},{"lineNumber":51,"author":{"gitId":"hengyiqun"},"content":"        int initialSize \u003d taskList.size();"},{"lineNumber":52,"author":{"gitId":"hengyiqun"},"content":"        taskList \u003d taskList.add(deadline);"},{"lineNumber":53,"author":{"gitId":"hengyiqun"},"content":"        assert(initialSize + 1 \u003d\u003d taskList.size()); // ensure that event is properly added"},{"lineNumber":54,"author":{"gitId":"hengyiqun"},"content":"        return taskList;"},{"lineNumber":55,"author":{"gitId":"hengyiqun"},"content":"    }"},{"lineNumber":56,"author":{"gitId":"hengyiqun"},"content":""},{"lineNumber":57,"author":{"gitId":"hengyiqun"},"content":"    @Override"},{"lineNumber":58,"author":{"gitId":"hengyiqun"},"content":"    public String toString() {"},{"lineNumber":59,"author":{"gitId":"hengyiqun"},"content":"        String message \u003d \"Got it. I\u0027ve added this task:\\n\";"},{"lineNumber":60,"author":{"gitId":"hengyiqun"},"content":"        Deadline deadline \u003d new Deadline(this.taskDescription, this.dueDate);"},{"lineNumber":61,"author":{"gitId":"hengyiqun"},"content":"        message +\u003d deadline.toString() + \"\\n\";"},{"lineNumber":62,"author":{"gitId":"hengyiqun"},"content":"        message +\u003d \"Now you have \" + (this.getTaskList().size() + 1) + \" tasks in the list.\\n\";"},{"lineNumber":63,"author":{"gitId":"hengyiqun"},"content":"        return message;"},{"lineNumber":64,"author":{"gitId":"hengyiqun"},"content":"    }"},{"lineNumber":65,"author":{"gitId":"hengyiqun"},"content":"}"}],"authorContributionMap":{"hengyiqun":65}},{"path":"src/main/java/duke/commands/DeleteCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"hengyiqun"},"content":"package duke.commands;"},{"lineNumber":2,"author":{"gitId":"hengyiqun"},"content":""},{"lineNumber":3,"author":{"gitId":"hengyiqun"},"content":"import duke.parser.InsufficientArgumentsException;"},{"lineNumber":4,"author":{"gitId":"hengyiqun"},"content":"import duke.tasks.TaskList;"},{"lineNumber":5,"author":{"gitId":"hengyiqun"},"content":""},{"lineNumber":6,"author":{"gitId":"hengyiqun"},"content":"/**"},{"lineNumber":7,"author":{"gitId":"hengyiqun"},"content":" * DeleteCommand is a command that deletes a specified task from the task list."},{"lineNumber":8,"author":{"gitId":"hengyiqun"},"content":" */"},{"lineNumber":9,"author":{"gitId":"hengyiqun"},"content":"public class DeleteCommand extends Command {"},{"lineNumber":10,"author":{"gitId":"hengyiqun"},"content":"    private int indexOfTaskToDelete;"},{"lineNumber":11,"author":{"gitId":"hengyiqun"},"content":""},{"lineNumber":12,"author":{"gitId":"hengyiqun"},"content":"    public DeleteCommand(TaskList taskList, int indexOfTaskToDelete) {"},{"lineNumber":13,"author":{"gitId":"hengyiqun"},"content":"        super(taskList);"},{"lineNumber":14,"author":{"gitId":"hengyiqun"},"content":"        this.indexOfTaskToDelete \u003d indexOfTaskToDelete;"},{"lineNumber":15,"author":{"gitId":"hengyiqun"},"content":"    }"},{"lineNumber":16,"author":{"gitId":"hengyiqun"},"content":"    public DeleteCommand(String[] userInput, TaskList taskList) {"},{"lineNumber":17,"author":{"gitId":"hengyiqun"},"content":"        super(userInput, taskList);"},{"lineNumber":18,"author":{"gitId":"hengyiqun"},"content":"        this.indexOfTaskToDelete \u003d -1;"},{"lineNumber":19,"author":{"gitId":"hengyiqun"},"content":"    }"},{"lineNumber":20,"author":{"gitId":"hengyiqun"},"content":""},{"lineNumber":21,"author":{"gitId":"hengyiqun"},"content":"    @Override"},{"lineNumber":22,"author":{"gitId":"hengyiqun"},"content":"    public Command process() {"},{"lineNumber":23,"author":{"gitId":"hengyiqun"},"content":"        try {"},{"lineNumber":24,"author":{"gitId":"hengyiqun"},"content":"            if (this.getUserInput().length \u003d\u003d 1) {"},{"lineNumber":25,"author":{"gitId":"hengyiqun"},"content":"                throw new InsufficientArgumentsException(\"OOPS!!! The \""},{"lineNumber":26,"author":{"gitId":"hengyiqun"},"content":"                        + \"description of delete cannot be empty.\");"},{"lineNumber":27,"author":{"gitId":"hengyiqun"},"content":"            }"},{"lineNumber":28,"author":{"gitId":"hengyiqun"},"content":"            return new DeleteCommand(this.getTaskList(), Integer.parseInt(this.getUserInput()[1]));"},{"lineNumber":29,"author":{"gitId":"hengyiqun"},"content":"        } catch (InsufficientArgumentsException e) {"},{"lineNumber":30,"author":{"gitId":"hengyiqun"},"content":"            return new ErrorCommand(this.getTaskList(), e.getMessage());"},{"lineNumber":31,"author":{"gitId":"hengyiqun"},"content":"        }"},{"lineNumber":32,"author":{"gitId":"hengyiqun"},"content":"    }"},{"lineNumber":33,"author":{"gitId":"hengyiqun"},"content":""},{"lineNumber":34,"author":{"gitId":"hengyiqun"},"content":"    @Override"},{"lineNumber":35,"author":{"gitId":"hengyiqun"},"content":"    public TaskList execute() {"},{"lineNumber":36,"author":{"gitId":"hengyiqun"},"content":"        TaskList tasks \u003d this.getTaskList();"},{"lineNumber":37,"author":{"gitId":"hengyiqun"},"content":"        int initialSize \u003d tasks.size();"},{"lineNumber":38,"author":{"gitId":"hengyiqun"},"content":"        tasks.remove(this.indexOfTaskToDelete - 1);"},{"lineNumber":39,"author":{"gitId":"hengyiqun"},"content":"        assert (initialSize - 1 \u003d\u003d tasks.size());   // check that task is properly deleted"},{"lineNumber":40,"author":{"gitId":"hengyiqun"},"content":"        return tasks;"},{"lineNumber":41,"author":{"gitId":"hengyiqun"},"content":"    }"},{"lineNumber":42,"author":{"gitId":"hengyiqun"},"content":""},{"lineNumber":43,"author":{"gitId":"hengyiqun"},"content":"    @Override"},{"lineNumber":44,"author":{"gitId":"hengyiqun"},"content":"    public String toString() {"},{"lineNumber":45,"author":{"gitId":"hengyiqun"},"content":"        String message \u003d \"Noted. I\u0027ve removed this task: \\n\";"},{"lineNumber":46,"author":{"gitId":"hengyiqun"},"content":"        message +\u003d this.getTaskList().get(this.indexOfTaskToDelete - 1).toString() + \"\\n\";"},{"lineNumber":47,"author":{"gitId":"hengyiqun"},"content":"        message +\u003d \" Now you have \" + (this.getTaskList().size() - 1) + \" tasks in the list.\";"},{"lineNumber":48,"author":{"gitId":"hengyiqun"},"content":"        return message;"},{"lineNumber":49,"author":{"gitId":"hengyiqun"},"content":"    }"},{"lineNumber":50,"author":{"gitId":"hengyiqun"},"content":"}"}],"authorContributionMap":{"hengyiqun":50}},{"path":"src/main/java/duke/commands/DoneCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"hengyiqun"},"content":"package duke.commands;"},{"lineNumber":2,"author":{"gitId":"hengyiqun"},"content":""},{"lineNumber":3,"author":{"gitId":"hengyiqun"},"content":"import duke.parser.InsufficientArgumentsException;"},{"lineNumber":4,"author":{"gitId":"hengyiqun"},"content":"import duke.tasks.Task;"},{"lineNumber":5,"author":{"gitId":"hengyiqun"},"content":"import duke.tasks.TaskList;"},{"lineNumber":6,"author":{"gitId":"hengyiqun"},"content":""},{"lineNumber":7,"author":{"gitId":"hengyiqun"},"content":"import java.util.ArrayList;"},{"lineNumber":8,"author":{"gitId":"hengyiqun"},"content":""},{"lineNumber":9,"author":{"gitId":"hengyiqun"},"content":"/**"},{"lineNumber":10,"author":{"gitId":"hengyiqun"},"content":" * DoneCommand is a command that sets a specific task as completed."},{"lineNumber":11,"author":{"gitId":"hengyiqun"},"content":" */"},{"lineNumber":12,"author":{"gitId":"hengyiqun"},"content":"public class DoneCommand extends Command{"},{"lineNumber":13,"author":{"gitId":"hengyiqun"},"content":"    private int indexOfTaskDone;"},{"lineNumber":14,"author":{"gitId":"hengyiqun"},"content":""},{"lineNumber":15,"author":{"gitId":"hengyiqun"},"content":"    // for executing"},{"lineNumber":16,"author":{"gitId":"hengyiqun"},"content":"    public DoneCommand(TaskList taskList, int indexOfTaskDone) {"},{"lineNumber":17,"author":{"gitId":"hengyiqun"},"content":"        super(taskList);"},{"lineNumber":18,"author":{"gitId":"hengyiqun"},"content":"        this.indexOfTaskDone \u003d indexOfTaskDone;"},{"lineNumber":19,"author":{"gitId":"hengyiqun"},"content":"    }"},{"lineNumber":20,"author":{"gitId":"hengyiqun"},"content":""},{"lineNumber":21,"author":{"gitId":"hengyiqun"},"content":"    // for processing"},{"lineNumber":22,"author":{"gitId":"hengyiqun"},"content":"    public DoneCommand(String[] userInput, TaskList taskList) {"},{"lineNumber":23,"author":{"gitId":"hengyiqun"},"content":"        super(userInput, taskList);"},{"lineNumber":24,"author":{"gitId":"hengyiqun"},"content":"        this.indexOfTaskDone \u003d -1;"},{"lineNumber":25,"author":{"gitId":"hengyiqun"},"content":"    }"},{"lineNumber":26,"author":{"gitId":"hengyiqun"},"content":""},{"lineNumber":27,"author":{"gitId":"hengyiqun"},"content":"    @Override"},{"lineNumber":28,"author":{"gitId":"hengyiqun"},"content":"    public Command process() {"},{"lineNumber":29,"author":{"gitId":"hengyiqun"},"content":"        try {"},{"lineNumber":30,"author":{"gitId":"hengyiqun"},"content":"            if (this.getUserInput().length \u003d\u003d 1) {"},{"lineNumber":31,"author":{"gitId":"hengyiqun"},"content":"                throw new InsufficientArgumentsException(\"OOPS!!! The \""},{"lineNumber":32,"author":{"gitId":"hengyiqun"},"content":"                        + \"description of done cannot be empty.\");"},{"lineNumber":33,"author":{"gitId":"hengyiqun"},"content":"            }"},{"lineNumber":34,"author":{"gitId":"hengyiqun"},"content":"            return new DoneCommand(this.getTaskList(), Integer.parseInt(this.getUserInput()[1]));"},{"lineNumber":35,"author":{"gitId":"hengyiqun"},"content":"        } catch (InsufficientArgumentsException e) {"},{"lineNumber":36,"author":{"gitId":"hengyiqun"},"content":"            return new ErrorCommand(this.getTaskList(), e.getMessage());"},{"lineNumber":37,"author":{"gitId":"hengyiqun"},"content":"        }"},{"lineNumber":38,"author":{"gitId":"hengyiqun"},"content":"    }"},{"lineNumber":39,"author":{"gitId":"hengyiqun"},"content":""},{"lineNumber":40,"author":{"gitId":"hengyiqun"},"content":"    @Override"},{"lineNumber":41,"author":{"gitId":"hengyiqun"},"content":"    public TaskList execute() {"},{"lineNumber":42,"author":{"gitId":"hengyiqun"},"content":"        ArrayList\u003cTask\u003e tasks \u003d this.getTaskList().getList();"},{"lineNumber":43,"author":{"gitId":"hengyiqun"},"content":"        int size \u003d tasks.size();"},{"lineNumber":44,"author":{"gitId":"hengyiqun"},"content":"        for (int i \u003d 0; i \u003c size; ++i) {"},{"lineNumber":45,"author":{"gitId":"hengyiqun"},"content":"            if (i \u003d\u003d this.indexOfTaskDone - 1) {"},{"lineNumber":46,"author":{"gitId":"hengyiqun"},"content":"                tasks.set(i, tasks.get(i).markAsDone());"},{"lineNumber":47,"author":{"gitId":"hengyiqun"},"content":"            }"},{"lineNumber":48,"author":{"gitId":"hengyiqun"},"content":"        }"},{"lineNumber":49,"author":{"gitId":"hengyiqun"},"content":"        assert (tasks.size() \u003d\u003d size);  // check that marking a task as done does not remove the task"},{"lineNumber":50,"author":{"gitId":"hengyiqun"},"content":"        return new TaskList(tasks);"},{"lineNumber":51,"author":{"gitId":"hengyiqun"},"content":"    }"},{"lineNumber":52,"author":{"gitId":"hengyiqun"},"content":""},{"lineNumber":53,"author":{"gitId":"hengyiqun"},"content":"    @Override"},{"lineNumber":54,"author":{"gitId":"hengyiqun"},"content":"    public String toString() {"},{"lineNumber":55,"author":{"gitId":"hengyiqun"},"content":"        TaskList tasks \u003d this.getTaskList();"},{"lineNumber":56,"author":{"gitId":"hengyiqun"},"content":"        String message \u003d \"Nice! I\u0027ve marked this task as done:\\n\";"},{"lineNumber":57,"author":{"gitId":"hengyiqun"},"content":"        for (int i \u003d 0; i \u003c tasks.size(); ++i) {"},{"lineNumber":58,"author":{"gitId":"hengyiqun"},"content":"            if (i \u003d\u003d indexOfTaskDone - 1) {"},{"lineNumber":59,"author":{"gitId":"hengyiqun"},"content":"                message +\u003d tasks.get(i).markAsDone().toString();"},{"lineNumber":60,"author":{"gitId":"hengyiqun"},"content":"            }"},{"lineNumber":61,"author":{"gitId":"hengyiqun"},"content":"        }"},{"lineNumber":62,"author":{"gitId":"hengyiqun"},"content":"        return message;"},{"lineNumber":63,"author":{"gitId":"hengyiqun"},"content":"    }"},{"lineNumber":64,"author":{"gitId":"hengyiqun"},"content":"}"}],"authorContributionMap":{"hengyiqun":64}},{"path":"src/main/java/duke/commands/ErrorCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"hengyiqun"},"content":"package duke.commands;"},{"lineNumber":2,"author":{"gitId":"hengyiqun"},"content":""},{"lineNumber":3,"author":{"gitId":"hengyiqun"},"content":"import duke.tasks.TaskList;"},{"lineNumber":4,"author":{"gitId":"hengyiqun"},"content":""},{"lineNumber":5,"author":{"gitId":"hengyiqun"},"content":"/**"},{"lineNumber":6,"author":{"gitId":"hengyiqun"},"content":" * ErrorCommand is a command that indicates an error with the user-input command."},{"lineNumber":7,"author":{"gitId":"hengyiqun"},"content":" */"},{"lineNumber":8,"author":{"gitId":"hengyiqun"},"content":"public class ErrorCommand extends Command {"},{"lineNumber":9,"author":{"gitId":"hengyiqun"},"content":"    String errorDescription;"},{"lineNumber":10,"author":{"gitId":"hengyiqun"},"content":""},{"lineNumber":11,"author":{"gitId":"hengyiqun"},"content":"    public ErrorCommand(TaskList taskList, String errorDescription) {"},{"lineNumber":12,"author":{"gitId":"hengyiqun"},"content":"        super(taskList);"},{"lineNumber":13,"author":{"gitId":"hengyiqun"},"content":"        this.errorDescription \u003d errorDescription;"},{"lineNumber":14,"author":{"gitId":"hengyiqun"},"content":"    }"},{"lineNumber":15,"author":{"gitId":"hengyiqun"},"content":""},{"lineNumber":16,"author":{"gitId":"hengyiqun"},"content":"    @Override"},{"lineNumber":17,"author":{"gitId":"hengyiqun"},"content":"    public Command process() {"},{"lineNumber":18,"author":{"gitId":"hengyiqun"},"content":"        return this;"},{"lineNumber":19,"author":{"gitId":"hengyiqun"},"content":"    }"},{"lineNumber":20,"author":{"gitId":"hengyiqun"},"content":""},{"lineNumber":21,"author":{"gitId":"hengyiqun"},"content":"    @Override"},{"lineNumber":22,"author":{"gitId":"hengyiqun"},"content":"    public TaskList execute() {"},{"lineNumber":23,"author":{"gitId":"hengyiqun"},"content":"        return this.getTaskList();"},{"lineNumber":24,"author":{"gitId":"hengyiqun"},"content":"    }"},{"lineNumber":25,"author":{"gitId":"hengyiqun"},"content":""},{"lineNumber":26,"author":{"gitId":"hengyiqun"},"content":"    @Override"},{"lineNumber":27,"author":{"gitId":"hengyiqun"},"content":"    public String toString() {"},{"lineNumber":28,"author":{"gitId":"hengyiqun"},"content":"        return this.errorDescription;"},{"lineNumber":29,"author":{"gitId":"hengyiqun"},"content":"    }"},{"lineNumber":30,"author":{"gitId":"hengyiqun"},"content":"}"}],"authorContributionMap":{"hengyiqun":30}},{"path":"src/main/java/duke/commands/EventCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"hengyiqun"},"content":"package duke.commands;"},{"lineNumber":2,"author":{"gitId":"hengyiqun"},"content":""},{"lineNumber":3,"author":{"gitId":"hengyiqun"},"content":"import duke.parser.DuplicateException;"},{"lineNumber":4,"author":{"gitId":"hengyiqun"},"content":"import duke.parser.InsufficientArgumentsException;"},{"lineNumber":5,"author":{"gitId":"hengyiqun"},"content":"import duke.tasks.TaskList;"},{"lineNumber":6,"author":{"gitId":"hengyiqun"},"content":"import duke.tasks.Event;"},{"lineNumber":7,"author":{"gitId":"hengyiqun"},"content":""},{"lineNumber":8,"author":{"gitId":"hengyiqun"},"content":"import java.time.LocalDate;"},{"lineNumber":9,"author":{"gitId":"hengyiqun"},"content":""},{"lineNumber":10,"author":{"gitId":"hengyiqun"},"content":"/**"},{"lineNumber":11,"author":{"gitId":"hengyiqun"},"content":" * An EventCommand is a command that adds an event to the task list."},{"lineNumber":12,"author":{"gitId":"hengyiqun"},"content":" */"},{"lineNumber":13,"author":{"gitId":"hengyiqun"},"content":"public class EventCommand extends Command {"},{"lineNumber":14,"author":{"gitId":"hengyiqun"},"content":"    private String taskDescription;"},{"lineNumber":15,"author":{"gitId":"hengyiqun"},"content":"    private LocalDate eventDate;"},{"lineNumber":16,"author":{"gitId":"hengyiqun"},"content":""},{"lineNumber":17,"author":{"gitId":"hengyiqun"},"content":"    public EventCommand(TaskList taskList, String taskDescription, LocalDate eventDate) {"},{"lineNumber":18,"author":{"gitId":"hengyiqun"},"content":"        super(taskList);"},{"lineNumber":19,"author":{"gitId":"hengyiqun"},"content":"        this.taskDescription \u003d taskDescription;"},{"lineNumber":20,"author":{"gitId":"hengyiqun"},"content":"        this.eventDate \u003d eventDate;"},{"lineNumber":21,"author":{"gitId":"hengyiqun"},"content":"    }"},{"lineNumber":22,"author":{"gitId":"hengyiqun"},"content":""},{"lineNumber":23,"author":{"gitId":"hengyiqun"},"content":"    public EventCommand(String[] userInput, TaskList taskList) {"},{"lineNumber":24,"author":{"gitId":"hengyiqun"},"content":"        super(userInput, taskList);"},{"lineNumber":25,"author":{"gitId":"hengyiqun"},"content":"        this.taskDescription \u003d \"\";"},{"lineNumber":26,"author":{"gitId":"hengyiqun"},"content":"        this.eventDate \u003d null;"},{"lineNumber":27,"author":{"gitId":"hengyiqun"},"content":"    }"},{"lineNumber":28,"author":{"gitId":"hengyiqun"},"content":""},{"lineNumber":29,"author":{"gitId":"hengyiqun"},"content":"    @Override"},{"lineNumber":30,"author":{"gitId":"hengyiqun"},"content":"    public Command process() {"},{"lineNumber":31,"author":{"gitId":"hengyiqun"},"content":"        try {"},{"lineNumber":32,"author":{"gitId":"hengyiqun"},"content":"            if (this.getUserInput().length \u003d\u003d 1) {"},{"lineNumber":33,"author":{"gitId":"hengyiqun"},"content":"                throw new InsufficientArgumentsException(\"OOPS!!! The \""},{"lineNumber":34,"author":{"gitId":"hengyiqun"},"content":"                        + \"description of an event cannot be empty.\");"},{"lineNumber":35,"author":{"gitId":"hengyiqun"},"content":"            }"},{"lineNumber":36,"author":{"gitId":"hengyiqun"},"content":"            String taskDescription \u003d this.getDescription(this.getUserInput(), \"/at\");"},{"lineNumber":37,"author":{"gitId":"hengyiqun"},"content":"            this.getTaskList().hasDuplicate(taskDescription);"},{"lineNumber":38,"author":{"gitId":"hengyiqun"},"content":"            LocalDate dueDate \u003d this.getDueDate(this.getUserInput(), \"/at\");"},{"lineNumber":39,"author":{"gitId":"hengyiqun"},"content":"            return new EventCommand(this.getTaskList(), taskDescription, dueDate);"},{"lineNumber":40,"author":{"gitId":"hengyiqun"},"content":"        } catch (InsufficientArgumentsException | DuplicateException e) {"},{"lineNumber":41,"author":{"gitId":"hengyiqun"},"content":"            return new ErrorCommand(this.getTaskList(), e.getMessage());"},{"lineNumber":42,"author":{"gitId":"hengyiqun"},"content":"        }"},{"lineNumber":43,"author":{"gitId":"hengyiqun"},"content":"    }"},{"lineNumber":44,"author":{"gitId":"hengyiqun"},"content":""},{"lineNumber":45,"author":{"gitId":"hengyiqun"},"content":"    @Override"},{"lineNumber":46,"author":{"gitId":"hengyiqun"},"content":"    public TaskList execute() {"},{"lineNumber":47,"author":{"gitId":"hengyiqun"},"content":"        TaskList taskList \u003d this.getTaskList();"},{"lineNumber":48,"author":{"gitId":"hengyiqun"},"content":"        int initialSize \u003d taskList.size();"},{"lineNumber":49,"author":{"gitId":"hengyiqun"},"content":"        Event event \u003d new Event(this.taskDescription, this.eventDate);"},{"lineNumber":50,"author":{"gitId":"hengyiqun"},"content":"        taskList \u003d taskList.add(event);"},{"lineNumber":51,"author":{"gitId":"hengyiqun"},"content":"        assert(initialSize + 1 \u003d\u003d taskList.size()); // ensure that event is properly added"},{"lineNumber":52,"author":{"gitId":"hengyiqun"},"content":"        return taskList;"},{"lineNumber":53,"author":{"gitId":"hengyiqun"},"content":"    }"},{"lineNumber":54,"author":{"gitId":"hengyiqun"},"content":""},{"lineNumber":55,"author":{"gitId":"hengyiqun"},"content":"    @Override"},{"lineNumber":56,"author":{"gitId":"hengyiqun"},"content":"    public String toString() {"},{"lineNumber":57,"author":{"gitId":"hengyiqun"},"content":"        String message \u003d \"Got it. I\u0027ve added this task:\\n\";"},{"lineNumber":58,"author":{"gitId":"hengyiqun"},"content":"        Event event \u003d new Event(this.taskDescription, this.eventDate);"},{"lineNumber":59,"author":{"gitId":"hengyiqun"},"content":"        message +\u003d event + \"\\n\";"},{"lineNumber":60,"author":{"gitId":"hengyiqun"},"content":"        message +\u003d \"Now you have \" + (this.getTaskList().size() + 1) + \" tasks in the list.\";"},{"lineNumber":61,"author":{"gitId":"hengyiqun"},"content":"        return message;"},{"lineNumber":62,"author":{"gitId":"hengyiqun"},"content":"    }"},{"lineNumber":63,"author":{"gitId":"hengyiqun"},"content":"}"}],"authorContributionMap":{"hengyiqun":63}},{"path":"src/main/java/duke/commands/FindCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"hengyiqun"},"content":"package duke.commands;"},{"lineNumber":2,"author":{"gitId":"hengyiqun"},"content":""},{"lineNumber":3,"author":{"gitId":"hengyiqun"},"content":"import duke.parser.InsufficientArgumentsException;"},{"lineNumber":4,"author":{"gitId":"hengyiqun"},"content":"import duke.tasks.TaskList;"},{"lineNumber":5,"author":{"gitId":"hengyiqun"},"content":""},{"lineNumber":6,"author":{"gitId":"hengyiqun"},"content":"/**"},{"lineNumber":7,"author":{"gitId":"hengyiqun"},"content":" * FindCommand is a command that finds if a task exists within the task list."},{"lineNumber":8,"author":{"gitId":"hengyiqun"},"content":" */"},{"lineNumber":9,"author":{"gitId":"hengyiqun"},"content":"public class FindCommand extends Command {"},{"lineNumber":10,"author":{"gitId":"hengyiqun"},"content":"    private String taskDescription;"},{"lineNumber":11,"author":{"gitId":"hengyiqun"},"content":""},{"lineNumber":12,"author":{"gitId":"hengyiqun"},"content":"    public FindCommand(TaskList taskList, String taskDescription) {"},{"lineNumber":13,"author":{"gitId":"hengyiqun"},"content":"        super(taskList);"},{"lineNumber":14,"author":{"gitId":"hengyiqun"},"content":"        this.taskDescription \u003d taskDescription;"},{"lineNumber":15,"author":{"gitId":"hengyiqun"},"content":"    }"},{"lineNumber":16,"author":{"gitId":"hengyiqun"},"content":""},{"lineNumber":17,"author":{"gitId":"hengyiqun"},"content":"    public FindCommand(String[] userInput, TaskList taskList) {"},{"lineNumber":18,"author":{"gitId":"hengyiqun"},"content":"        super(userInput, taskList);"},{"lineNumber":19,"author":{"gitId":"hengyiqun"},"content":"        this.taskDescription \u003d \"\";"},{"lineNumber":20,"author":{"gitId":"hengyiqun"},"content":"    }"},{"lineNumber":21,"author":{"gitId":"hengyiqun"},"content":""},{"lineNumber":22,"author":{"gitId":"hengyiqun"},"content":"    @Override"},{"lineNumber":23,"author":{"gitId":"hengyiqun"},"content":"    public Command process() {"},{"lineNumber":24,"author":{"gitId":"hengyiqun"},"content":"        try {"},{"lineNumber":25,"author":{"gitId":"hengyiqun"},"content":"            if (getUserInput().length \u003d\u003d 1) {"},{"lineNumber":26,"author":{"gitId":"hengyiqun"},"content":"                throw new InsufficientArgumentsException(\"OOPS!!! The \""},{"lineNumber":27,"author":{"gitId":"hengyiqun"},"content":"                        + \"description of find cannot be empty.\");"},{"lineNumber":28,"author":{"gitId":"hengyiqun"},"content":"            }"},{"lineNumber":29,"author":{"gitId":"hengyiqun"},"content":"            String toFind \u003d \"\";"},{"lineNumber":30,"author":{"gitId":"hengyiqun"},"content":"            for (int i \u003d 1; i \u003c getUserInput().length; ++i) {"},{"lineNumber":31,"author":{"gitId":"hengyiqun"},"content":"                if (i !\u003d this.getUserInput().length - 1) {"},{"lineNumber":32,"author":{"gitId":"hengyiqun"},"content":"                    toFind +\u003d this.getUserInput()[i] + \" \";"},{"lineNumber":33,"author":{"gitId":"hengyiqun"},"content":"                } else {"},{"lineNumber":34,"author":{"gitId":"hengyiqun"},"content":"                    toFind +\u003d this.getUserInput()[i];"},{"lineNumber":35,"author":{"gitId":"hengyiqun"},"content":"                }"},{"lineNumber":36,"author":{"gitId":"hengyiqun"},"content":"            }"},{"lineNumber":37,"author":{"gitId":"hengyiqun"},"content":"            return new FindCommand(this.getTaskList(), toFind);"},{"lineNumber":38,"author":{"gitId":"hengyiqun"},"content":"        } catch (InsufficientArgumentsException e) {"},{"lineNumber":39,"author":{"gitId":"hengyiqun"},"content":"            return new ErrorCommand(this.getTaskList(), e.getMessage());"},{"lineNumber":40,"author":{"gitId":"hengyiqun"},"content":"        }"},{"lineNumber":41,"author":{"gitId":"hengyiqun"},"content":"    }"},{"lineNumber":42,"author":{"gitId":"hengyiqun"},"content":""},{"lineNumber":43,"author":{"gitId":"hengyiqun"},"content":"    @Override"},{"lineNumber":44,"author":{"gitId":"hengyiqun"},"content":"    public TaskList execute() {"},{"lineNumber":45,"author":{"gitId":"hengyiqun"},"content":"        return this.getTaskList();"},{"lineNumber":46,"author":{"gitId":"hengyiqun"},"content":"    }"},{"lineNumber":47,"author":{"gitId":"hengyiqun"},"content":""},{"lineNumber":48,"author":{"gitId":"hengyiqun"},"content":"    @Override"},{"lineNumber":49,"author":{"gitId":"hengyiqun"},"content":"    public String toString() {"},{"lineNumber":50,"author":{"gitId":"hengyiqun"},"content":"        String message \u003d \"Here are the matching tasks in your list:\\n\";"},{"lineNumber":51,"author":{"gitId":"hengyiqun"},"content":"        TaskList tasks \u003d this.getTaskList();"},{"lineNumber":52,"author":{"gitId":"hengyiqun"},"content":"        boolean first \u003d true;"},{"lineNumber":53,"author":{"gitId":"hengyiqun"},"content":"        for (int i \u003d 0; i \u003c tasks.size(); ++i) {"},{"lineNumber":54,"author":{"gitId":"hengyiqun"},"content":"            if (tasks.get(i).getDescription().contains(this.taskDescription)) {"},{"lineNumber":55,"author":{"gitId":"hengyiqun"},"content":"                if (first) {"},{"lineNumber":56,"author":{"gitId":"hengyiqun"},"content":"                    message +\u003d (i + 1) + \".\" + tasks.get(i).toString();"},{"lineNumber":57,"author":{"gitId":"hengyiqun"},"content":"                    first \u003d false;"},{"lineNumber":58,"author":{"gitId":"hengyiqun"},"content":"                } else {"},{"lineNumber":59,"author":{"gitId":"hengyiqun"},"content":"                    message +\u003d \"\\n\" + (i + 1) + \".\" + tasks.get(i).toString();"},{"lineNumber":60,"author":{"gitId":"hengyiqun"},"content":"                }"},{"lineNumber":61,"author":{"gitId":"hengyiqun"},"content":"            }"},{"lineNumber":62,"author":{"gitId":"hengyiqun"},"content":"        }"},{"lineNumber":63,"author":{"gitId":"hengyiqun"},"content":"        if (first) {"},{"lineNumber":64,"author":{"gitId":"hengyiqun"},"content":"            message \u003d \"There are no matching tasks\";"},{"lineNumber":65,"author":{"gitId":"hengyiqun"},"content":"        }"},{"lineNumber":66,"author":{"gitId":"hengyiqun"},"content":"        return message;"},{"lineNumber":67,"author":{"gitId":"hengyiqun"},"content":"    }"},{"lineNumber":68,"author":{"gitId":"hengyiqun"},"content":"}"}],"authorContributionMap":{"hengyiqun":68}},{"path":"src/main/java/duke/commands/ListCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"hengyiqun"},"content":"package duke.commands;"},{"lineNumber":2,"author":{"gitId":"hengyiqun"},"content":""},{"lineNumber":3,"author":{"gitId":"hengyiqun"},"content":"import duke.parser.WrongArgumentException;"},{"lineNumber":4,"author":{"gitId":"hengyiqun"},"content":"import duke.tasks.Task;"},{"lineNumber":5,"author":{"gitId":"hengyiqun"},"content":"import duke.tasks.TaskList;"},{"lineNumber":6,"author":{"gitId":"hengyiqun"},"content":""},{"lineNumber":7,"author":{"gitId":"hengyiqun"},"content":"import java.util.ArrayList;"},{"lineNumber":8,"author":{"gitId":"hengyiqun"},"content":""},{"lineNumber":9,"author":{"gitId":"hengyiqun"},"content":"/**"},{"lineNumber":10,"author":{"gitId":"hengyiqun"},"content":" * ListCommand is a command that lists out all the tasks in the task list."},{"lineNumber":11,"author":{"gitId":"hengyiqun"},"content":" */"},{"lineNumber":12,"author":{"gitId":"hengyiqun"},"content":"public class ListCommand extends Command {"},{"lineNumber":13,"author":{"gitId":"hengyiqun"},"content":""},{"lineNumber":14,"author":{"gitId":"hengyiqun"},"content":"    public ListCommand(TaskList taskList) {"},{"lineNumber":15,"author":{"gitId":"hengyiqun"},"content":"        super(taskList);"},{"lineNumber":16,"author":{"gitId":"hengyiqun"},"content":"    }"},{"lineNumber":17,"author":{"gitId":"hengyiqun"},"content":""},{"lineNumber":18,"author":{"gitId":"hengyiqun"},"content":"    public ListCommand(String[] userInput, TaskList taskList) {"},{"lineNumber":19,"author":{"gitId":"hengyiqun"},"content":"        super(userInput, taskList);"},{"lineNumber":20,"author":{"gitId":"hengyiqun"},"content":"    }"},{"lineNumber":21,"author":{"gitId":"hengyiqun"},"content":""},{"lineNumber":22,"author":{"gitId":"hengyiqun"},"content":"    @Override"},{"lineNumber":23,"author":{"gitId":"hengyiqun"},"content":"    public Command process() {"},{"lineNumber":24,"author":{"gitId":"hengyiqun"},"content":"        try {"},{"lineNumber":25,"author":{"gitId":"hengyiqun"},"content":"            if (this.getUserInput().length !\u003d 1) {"},{"lineNumber":26,"author":{"gitId":"hengyiqun"},"content":"                throw new WrongArgumentException(\"Oops, list \""},{"lineNumber":27,"author":{"gitId":"hengyiqun"},"content":"                        + \"does not come with a description\");"},{"lineNumber":28,"author":{"gitId":"hengyiqun"},"content":"            }"},{"lineNumber":29,"author":{"gitId":"hengyiqun"},"content":"            return new ListCommand(this.getTaskList());"},{"lineNumber":30,"author":{"gitId":"hengyiqun"},"content":"        } catch (WrongArgumentException e) {"},{"lineNumber":31,"author":{"gitId":"hengyiqun"},"content":"            return new ErrorCommand(this.getTaskList(), e.getMessage());"},{"lineNumber":32,"author":{"gitId":"hengyiqun"},"content":"        }"},{"lineNumber":33,"author":{"gitId":"hengyiqun"},"content":"    }"},{"lineNumber":34,"author":{"gitId":"hengyiqun"},"content":""},{"lineNumber":35,"author":{"gitId":"hengyiqun"},"content":"    @Override"},{"lineNumber":36,"author":{"gitId":"hengyiqun"},"content":"    public TaskList execute() {"},{"lineNumber":37,"author":{"gitId":"hengyiqun"},"content":"        return this.getTaskList();"},{"lineNumber":38,"author":{"gitId":"hengyiqun"},"content":"    }"},{"lineNumber":39,"author":{"gitId":"hengyiqun"},"content":""},{"lineNumber":40,"author":{"gitId":"hengyiqun"},"content":"    @Override"},{"lineNumber":41,"author":{"gitId":"hengyiqun"},"content":"    public String toString() {"},{"lineNumber":42,"author":{"gitId":"hengyiqun"},"content":"        String message \u003d \"Here are the tasks in your list:\\n\";"},{"lineNumber":43,"author":{"gitId":"hengyiqun"},"content":"        ArrayList\u003cTask\u003e tasks \u003d this.getTaskList().getList();"},{"lineNumber":44,"author":{"gitId":"hengyiqun"},"content":"        int count \u003d 1;"},{"lineNumber":45,"author":{"gitId":"hengyiqun"},"content":"        for (Task t : tasks) {"},{"lineNumber":46,"author":{"gitId":"hengyiqun"},"content":"            if (count \u003d\u003d tasks.size()) {"},{"lineNumber":47,"author":{"gitId":"hengyiqun"},"content":"                message +\u003d \"     \" + count + \".\" + t.toString();"},{"lineNumber":48,"author":{"gitId":"hengyiqun"},"content":"            } else {"},{"lineNumber":49,"author":{"gitId":"hengyiqun"},"content":"                message +\u003d \"     \" + count + \".\" + t.toString() + \"\\n\";"},{"lineNumber":50,"author":{"gitId":"hengyiqun"},"content":"            }"},{"lineNumber":51,"author":{"gitId":"hengyiqun"},"content":"            count++;"},{"lineNumber":52,"author":{"gitId":"hengyiqun"},"content":"        }"},{"lineNumber":53,"author":{"gitId":"hengyiqun"},"content":"        return message;"},{"lineNumber":54,"author":{"gitId":"hengyiqun"},"content":"    }"},{"lineNumber":55,"author":{"gitId":"hengyiqun"},"content":"}"}],"authorContributionMap":{"hengyiqun":55}},{"path":"src/main/java/duke/commands/ToDoCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"hengyiqun"},"content":"package duke.commands;"},{"lineNumber":2,"author":{"gitId":"hengyiqun"},"content":""},{"lineNumber":3,"author":{"gitId":"hengyiqun"},"content":"import duke.parser.DuplicateException;"},{"lineNumber":4,"author":{"gitId":"hengyiqun"},"content":"import duke.parser.InsufficientArgumentsException;"},{"lineNumber":5,"author":{"gitId":"hengyiqun"},"content":"import duke.tasks.TaskList;"},{"lineNumber":6,"author":{"gitId":"hengyiqun"},"content":"import duke.tasks.Todo;"},{"lineNumber":7,"author":{"gitId":"hengyiqun"},"content":""},{"lineNumber":8,"author":{"gitId":"hengyiqun"},"content":"/**"},{"lineNumber":9,"author":{"gitId":"hengyiqun"},"content":" * ToDoCommand is a command that adds a Todo to the task list."},{"lineNumber":10,"author":{"gitId":"hengyiqun"},"content":" */"},{"lineNumber":11,"author":{"gitId":"hengyiqun"},"content":"public class ToDoCommand extends Command {"},{"lineNumber":12,"author":{"gitId":"hengyiqun"},"content":"    private String taskDescription;"},{"lineNumber":13,"author":{"gitId":"hengyiqun"},"content":""},{"lineNumber":14,"author":{"gitId":"hengyiqun"},"content":"    public ToDoCommand(TaskList taskList, String taskDescription) {"},{"lineNumber":15,"author":{"gitId":"hengyiqun"},"content":"        super(taskList);"},{"lineNumber":16,"author":{"gitId":"hengyiqun"},"content":"        this.taskDescription \u003d taskDescription;"},{"lineNumber":17,"author":{"gitId":"hengyiqun"},"content":"    }"},{"lineNumber":18,"author":{"gitId":"hengyiqun"},"content":""},{"lineNumber":19,"author":{"gitId":"hengyiqun"},"content":"    public ToDoCommand(String[] userInput, TaskList taskList) {"},{"lineNumber":20,"author":{"gitId":"hengyiqun"},"content":"        super(userInput, taskList);"},{"lineNumber":21,"author":{"gitId":"hengyiqun"},"content":"        this.taskDescription \u003d \"\";"},{"lineNumber":22,"author":{"gitId":"hengyiqun"},"content":"    }"},{"lineNumber":23,"author":{"gitId":"hengyiqun"},"content":""},{"lineNumber":24,"author":{"gitId":"hengyiqun"},"content":"    @Override"},{"lineNumber":25,"author":{"gitId":"hengyiqun"},"content":"    public Command process() {"},{"lineNumber":26,"author":{"gitId":"hengyiqun"},"content":"        try {"},{"lineNumber":27,"author":{"gitId":"hengyiqun"},"content":"            if (this.getUserInput().length \u003d\u003d 1) {"},{"lineNumber":28,"author":{"gitId":"hengyiqun"},"content":"                throw new InsufficientArgumentsException(\"OOPS!!! The \""},{"lineNumber":29,"author":{"gitId":"hengyiqun"},"content":"                        + \"description of a todo cannot be empty.\");"},{"lineNumber":30,"author":{"gitId":"hengyiqun"},"content":"            }"},{"lineNumber":31,"author":{"gitId":"hengyiqun"},"content":"            String taskDescription \u003d this.getDescription(this.getUserInput(), \"\\n\");"},{"lineNumber":32,"author":{"gitId":"hengyiqun"},"content":"            this.getTaskList().hasDuplicate(taskDescription);"},{"lineNumber":33,"author":{"gitId":"hengyiqun"},"content":"            return new ToDoCommand(this.getTaskList(), taskDescription);"},{"lineNumber":34,"author":{"gitId":"hengyiqun"},"content":"        } catch (InsufficientArgumentsException | DuplicateException e) {"},{"lineNumber":35,"author":{"gitId":"hengyiqun"},"content":"            return new ErrorCommand(this.getTaskList(), e.getMessage());"},{"lineNumber":36,"author":{"gitId":"hengyiqun"},"content":"        }"},{"lineNumber":37,"author":{"gitId":"hengyiqun"},"content":"    }"},{"lineNumber":38,"author":{"gitId":"hengyiqun"},"content":""},{"lineNumber":39,"author":{"gitId":"hengyiqun"},"content":"    @Override"},{"lineNumber":40,"author":{"gitId":"hengyiqun"},"content":"    public TaskList execute() {"},{"lineNumber":41,"author":{"gitId":"hengyiqun"},"content":"        TaskList taskList \u003d this.getTaskList();"},{"lineNumber":42,"author":{"gitId":"hengyiqun"},"content":"        int initialSize \u003d taskList.size();"},{"lineNumber":43,"author":{"gitId":"hengyiqun"},"content":"        Todo todo \u003d new Todo(this.taskDescription);"},{"lineNumber":44,"author":{"gitId":"hengyiqun"},"content":"        taskList \u003d taskList.add(todo);"},{"lineNumber":45,"author":{"gitId":"hengyiqun"},"content":"        assert(initialSize + 1 \u003d\u003d taskList.size()); // ensure that todo is properly added"},{"lineNumber":46,"author":{"gitId":"hengyiqun"},"content":"        return taskList;"},{"lineNumber":47,"author":{"gitId":"hengyiqun"},"content":"    }"},{"lineNumber":48,"author":{"gitId":"hengyiqun"},"content":""},{"lineNumber":49,"author":{"gitId":"hengyiqun"},"content":"    @Override"},{"lineNumber":50,"author":{"gitId":"hengyiqun"},"content":"    public String toString() {"},{"lineNumber":51,"author":{"gitId":"hengyiqun"},"content":"        String message \u003d \"Got it. I\u0027ve added this task:\\n\";"},{"lineNumber":52,"author":{"gitId":"hengyiqun"},"content":"        Todo todo \u003d new Todo(this.taskDescription);"},{"lineNumber":53,"author":{"gitId":"hengyiqun"},"content":"        message +\u003d todo.toString() + \"\\n\";"},{"lineNumber":54,"author":{"gitId":"hengyiqun"},"content":"        message +\u003d \"Now you have \" + (this.getTaskList().size() + 1) + \" tasks in the list.\";"},{"lineNumber":55,"author":{"gitId":"hengyiqun"},"content":"        return message;"},{"lineNumber":56,"author":{"gitId":"hengyiqun"},"content":"    }"},{"lineNumber":57,"author":{"gitId":"hengyiqun"},"content":"}"}],"authorContributionMap":{"hengyiqun":57}},{"path":"src/main/java/duke/javafx/DialogBox.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"hengyiqun"},"content":"package duke.javafx;"},{"lineNumber":2,"author":{"gitId":"hengyiqun"},"content":""},{"lineNumber":3,"author":{"gitId":"hengyiqun"},"content":"import java.io.IOException;"},{"lineNumber":4,"author":{"gitId":"hengyiqun"},"content":"import java.util.Collections;"},{"lineNumber":5,"author":{"gitId":"hengyiqun"},"content":""},{"lineNumber":6,"author":{"gitId":"hengyiqun"},"content":"import javafx.collections.FXCollections;"},{"lineNumber":7,"author":{"gitId":"hengyiqun"},"content":"import javafx.collections.ObservableList;"},{"lineNumber":8,"author":{"gitId":"hengyiqun"},"content":"import javafx.fxml.FXML;"},{"lineNumber":9,"author":{"gitId":"hengyiqun"},"content":"import javafx.fxml.FXMLLoader;"},{"lineNumber":10,"author":{"gitId":"hengyiqun"},"content":"import javafx.geometry.Pos;"},{"lineNumber":11,"author":{"gitId":"hengyiqun"},"content":"import javafx.scene.Node;"},{"lineNumber":12,"author":{"gitId":"hengyiqun"},"content":"import javafx.scene.control.Label;"},{"lineNumber":13,"author":{"gitId":"hengyiqun"},"content":"import javafx.scene.image.Image;"},{"lineNumber":14,"author":{"gitId":"hengyiqun"},"content":"import javafx.scene.image.ImageView;"},{"lineNumber":15,"author":{"gitId":"hengyiqun"},"content":"import javafx.scene.layout.HBox;"},{"lineNumber":16,"author":{"gitId":"hengyiqun"},"content":"import javafx.scene.layout.Region;"},{"lineNumber":17,"author":{"gitId":"hengyiqun"},"content":""},{"lineNumber":18,"author":{"gitId":"hengyiqun"},"content":"/**"},{"lineNumber":19,"author":{"gitId":"hengyiqun"},"content":" * DialogBox represents a dialog box consisting of ImageView to represent the user and Duke,"},{"lineNumber":20,"author":{"gitId":"hengyiqun"},"content":" * as well as labels containing text from the user and Duke"},{"lineNumber":21,"author":{"gitId":"hengyiqun"},"content":" */"},{"lineNumber":22,"author":{"gitId":"hengyiqun"},"content":"public class DialogBox extends HBox {"},{"lineNumber":23,"author":{"gitId":"hengyiqun"},"content":"    @FXML"},{"lineNumber":24,"author":{"gitId":"hengyiqun"},"content":"    private Label dialog;"},{"lineNumber":25,"author":{"gitId":"hengyiqun"},"content":"    @FXML"},{"lineNumber":26,"author":{"gitId":"hengyiqun"},"content":"    private ImageView displayPicture;"},{"lineNumber":27,"author":{"gitId":"hengyiqun"},"content":""},{"lineNumber":28,"author":{"gitId":"hengyiqun"},"content":"    private DialogBox(String text, Image img) {"},{"lineNumber":29,"author":{"gitId":"hengyiqun"},"content":"        try {"},{"lineNumber":30,"author":{"gitId":"hengyiqun"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(\"/view/DialogBox.fxml\"));"},{"lineNumber":31,"author":{"gitId":"hengyiqun"},"content":"            fxmlLoader.setController(this);"},{"lineNumber":32,"author":{"gitId":"hengyiqun"},"content":"            fxmlLoader.setRoot(this);"},{"lineNumber":33,"author":{"gitId":"hengyiqun"},"content":"            fxmlLoader.load();"},{"lineNumber":34,"author":{"gitId":"hengyiqun"},"content":"        } catch (IOException e) {"},{"lineNumber":35,"author":{"gitId":"hengyiqun"},"content":"            e.printStackTrace();"},{"lineNumber":36,"author":{"gitId":"hengyiqun"},"content":"        }"},{"lineNumber":37,"author":{"gitId":"hengyiqun"},"content":""},{"lineNumber":38,"author":{"gitId":"hengyiqun"},"content":"        dialog.setMinHeight(Region.USE_PREF_SIZE);"},{"lineNumber":39,"author":{"gitId":"hengyiqun"},"content":"        dialog.setText(text);"},{"lineNumber":40,"author":{"gitId":"hengyiqun"},"content":"        displayPicture.setImage(img);"},{"lineNumber":41,"author":{"gitId":"hengyiqun"},"content":"    }"},{"lineNumber":42,"author":{"gitId":"hengyiqun"},"content":""},{"lineNumber":43,"author":{"gitId":"hengyiqun"},"content":"    /**"},{"lineNumber":44,"author":{"gitId":"hengyiqun"},"content":"     * Flips the dialog box such that the ImageView is on the left and text on the right."},{"lineNumber":45,"author":{"gitId":"hengyiqun"},"content":"     */"},{"lineNumber":46,"author":{"gitId":"hengyiqun"},"content":"    private void flip() {"},{"lineNumber":47,"author":{"gitId":"hengyiqun"},"content":"        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());"},{"lineNumber":48,"author":{"gitId":"hengyiqun"},"content":"        Collections.reverse(tmp);"},{"lineNumber":49,"author":{"gitId":"hengyiqun"},"content":"        getChildren().setAll(tmp);"},{"lineNumber":50,"author":{"gitId":"hengyiqun"},"content":"        setAlignment(Pos.TOP_LEFT);"},{"lineNumber":51,"author":{"gitId":"hengyiqun"},"content":"    }"},{"lineNumber":52,"author":{"gitId":"hengyiqun"},"content":""},{"lineNumber":53,"author":{"gitId":"hengyiqun"},"content":"    public static DialogBox getUserDialog(String text, Image img) {"},{"lineNumber":54,"author":{"gitId":"hengyiqun"},"content":"        return new DialogBox(text, img);"},{"lineNumber":55,"author":{"gitId":"hengyiqun"},"content":"    }"},{"lineNumber":56,"author":{"gitId":"hengyiqun"},"content":""},{"lineNumber":57,"author":{"gitId":"hengyiqun"},"content":"    public static DialogBox getDukeDialog(String text, Image img) {"},{"lineNumber":58,"author":{"gitId":"hengyiqun"},"content":"        var db \u003d new DialogBox(text, img);"},{"lineNumber":59,"author":{"gitId":"hengyiqun"},"content":"        db.flip();"},{"lineNumber":60,"author":{"gitId":"hengyiqun"},"content":"        return db;"},{"lineNumber":61,"author":{"gitId":"hengyiqun"},"content":"    }"},{"lineNumber":62,"author":{"gitId":"hengyiqun"},"content":"}"}],"authorContributionMap":{"hengyiqun":62}},{"path":"src/main/java/duke/javafx/Main.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"hengyiqun"},"content":"package duke.javafx;"},{"lineNumber":2,"author":{"gitId":"hengyiqun"},"content":""},{"lineNumber":3,"author":{"gitId":"hengyiqun"},"content":"import java.io.IOException;"},{"lineNumber":4,"author":{"gitId":"hengyiqun"},"content":""},{"lineNumber":5,"author":{"gitId":"hengyiqun"},"content":"import duke.Duke;"},{"lineNumber":6,"author":{"gitId":"hengyiqun"},"content":"import javafx.application.Application;"},{"lineNumber":7,"author":{"gitId":"hengyiqun"},"content":"import javafx.fxml.FXMLLoader;"},{"lineNumber":8,"author":{"gitId":"hengyiqun"},"content":"import javafx.scene.Scene;"},{"lineNumber":9,"author":{"gitId":"hengyiqun"},"content":"import javafx.scene.layout.AnchorPane;"},{"lineNumber":10,"author":{"gitId":"hengyiqun"},"content":"import javafx.stage.Stage;"},{"lineNumber":11,"author":{"gitId":"hengyiqun"},"content":""},{"lineNumber":12,"author":{"gitId":"hengyiqun"},"content":"/**"},{"lineNumber":13,"author":{"gitId":"hengyiqun"},"content":" * A GUI for Duke using FXML."},{"lineNumber":14,"author":{"gitId":"hengyiqun"},"content":" */"},{"lineNumber":15,"author":{"gitId":"hengyiqun"},"content":"public class Main extends Application {"},{"lineNumber":16,"author":{"gitId":"hengyiqun"},"content":""},{"lineNumber":17,"author":{"gitId":"hengyiqun"},"content":"    private Duke duke \u003d new Duke(\"data/duke.txt\");"},{"lineNumber":18,"author":{"gitId":"hengyiqun"},"content":""},{"lineNumber":19,"author":{"gitId":"hengyiqun"},"content":"    @Override"},{"lineNumber":20,"author":{"gitId":"hengyiqun"},"content":"    public void start(Stage stage) {"},{"lineNumber":21,"author":{"gitId":"hengyiqun"},"content":"        try {"},{"lineNumber":22,"author":{"gitId":"hengyiqun"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(Main.class.getResource(\"/view/MainWindow.fxml\"));"},{"lineNumber":23,"author":{"gitId":"hengyiqun"},"content":"            AnchorPane ap \u003d fxmlLoader.load();"},{"lineNumber":24,"author":{"gitId":"hengyiqun"},"content":"            Scene scene \u003d new Scene(ap);"},{"lineNumber":25,"author":{"gitId":"hengyiqun"},"content":"            stage.setScene(scene);"},{"lineNumber":26,"author":{"gitId":"hengyiqun"},"content":"            fxmlLoader.\u003cMainWindow\u003egetController().setDuke(duke);"},{"lineNumber":27,"author":{"gitId":"hengyiqun"},"content":"            fxmlLoader.\u003cMainWindow\u003egetController().setGreetingMessage();"},{"lineNumber":28,"author":{"gitId":"hengyiqun"},"content":"            stage.show();"},{"lineNumber":29,"author":{"gitId":"hengyiqun"},"content":"        } catch (IOException e) {"},{"lineNumber":30,"author":{"gitId":"hengyiqun"},"content":"            e.printStackTrace();"},{"lineNumber":31,"author":{"gitId":"hengyiqun"},"content":"        }"},{"lineNumber":32,"author":{"gitId":"hengyiqun"},"content":"    }"},{"lineNumber":33,"author":{"gitId":"hengyiqun"},"content":"}"}],"authorContributionMap":{"hengyiqun":33}},{"path":"src/main/java/duke/javafx/MainWindow.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"hengyiqun"},"content":"package duke.javafx;"},{"lineNumber":2,"author":{"gitId":"hengyiqun"},"content":""},{"lineNumber":3,"author":{"gitId":"hengyiqun"},"content":"import duke.Duke;"},{"lineNumber":4,"author":{"gitId":"hengyiqun"},"content":"import javafx.fxml.FXML;"},{"lineNumber":5,"author":{"gitId":"hengyiqun"},"content":"import javafx.scene.control.Button;"},{"lineNumber":6,"author":{"gitId":"hengyiqun"},"content":"import javafx.scene.control.ScrollPane;"},{"lineNumber":7,"author":{"gitId":"hengyiqun"},"content":"import javafx.scene.control.TextField;"},{"lineNumber":8,"author":{"gitId":"hengyiqun"},"content":"import javafx.scene.image.Image;"},{"lineNumber":9,"author":{"gitId":"hengyiqun"},"content":"import javafx.scene.layout.AnchorPane;"},{"lineNumber":10,"author":{"gitId":"hengyiqun"},"content":"import javafx.scene.layout.VBox;"},{"lineNumber":11,"author":{"gitId":"hengyiqun"},"content":"/**"},{"lineNumber":12,"author":{"gitId":"hengyiqun"},"content":" * Controller for MainWindow. Provides the layout for the other controls."},{"lineNumber":13,"author":{"gitId":"hengyiqun"},"content":" */"},{"lineNumber":14,"author":{"gitId":"hengyiqun"},"content":"public class MainWindow extends AnchorPane {"},{"lineNumber":15,"author":{"gitId":"hengyiqun"},"content":"    @FXML"},{"lineNumber":16,"author":{"gitId":"hengyiqun"},"content":"    private ScrollPane scrollPane;"},{"lineNumber":17,"author":{"gitId":"hengyiqun"},"content":"    @FXML"},{"lineNumber":18,"author":{"gitId":"hengyiqun"},"content":"    private VBox dialogContainer;"},{"lineNumber":19,"author":{"gitId":"hengyiqun"},"content":"    @FXML"},{"lineNumber":20,"author":{"gitId":"hengyiqun"},"content":"    private TextField userInput;"},{"lineNumber":21,"author":{"gitId":"hengyiqun"},"content":"    @FXML"},{"lineNumber":22,"author":{"gitId":"hengyiqun"},"content":"    private Button sendButton;"},{"lineNumber":23,"author":{"gitId":"hengyiqun"},"content":""},{"lineNumber":24,"author":{"gitId":"hengyiqun"},"content":"    private Duke duke;"},{"lineNumber":25,"author":{"gitId":"hengyiqun"},"content":""},{"lineNumber":26,"author":{"gitId":"hengyiqun"},"content":"    private Image userImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/Pikachu.png\"));"},{"lineNumber":27,"author":{"gitId":"hengyiqun"},"content":"    private Image dukeImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/Psyduck.png\"));"},{"lineNumber":28,"author":{"gitId":"hengyiqun"},"content":""},{"lineNumber":29,"author":{"gitId":"hengyiqun"},"content":"    @FXML"},{"lineNumber":30,"author":{"gitId":"hengyiqun"},"content":"    public void initialize() {"},{"lineNumber":31,"author":{"gitId":"hengyiqun"},"content":"        scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());"},{"lineNumber":32,"author":{"gitId":"hengyiqun"},"content":"    }"},{"lineNumber":33,"author":{"gitId":"hengyiqun"},"content":""},{"lineNumber":34,"author":{"gitId":"hengyiqun"},"content":"    public void setDuke(Duke d) {"},{"lineNumber":35,"author":{"gitId":"hengyiqun"},"content":"        duke \u003d d;"},{"lineNumber":36,"author":{"gitId":"hengyiqun"},"content":"    }"},{"lineNumber":37,"author":{"gitId":"hengyiqun"},"content":""},{"lineNumber":38,"author":{"gitId":"hengyiqun"},"content":"    public void setGreetingMessage() {"},{"lineNumber":39,"author":{"gitId":"hengyiqun"},"content":"        String greetMessage \u003d this.duke.getGreeting();"},{"lineNumber":40,"author":{"gitId":"hengyiqun"},"content":"        dialogContainer.getChildren().addAll("},{"lineNumber":41,"author":{"gitId":"hengyiqun"},"content":"                DialogBox.getDukeDialog(greetMessage, dukeImage)"},{"lineNumber":42,"author":{"gitId":"hengyiqun"},"content":"        );"},{"lineNumber":43,"author":{"gitId":"hengyiqun"},"content":"    }"},{"lineNumber":44,"author":{"gitId":"hengyiqun"},"content":""},{"lineNumber":45,"author":{"gitId":"hengyiqun"},"content":"    /**"},{"lineNumber":46,"author":{"gitId":"hengyiqun"},"content":"     * Creates two dialog boxes, one echoing user input and the other containing Duke\u0027s reply and then appends them to"},{"lineNumber":47,"author":{"gitId":"hengyiqun"},"content":"     * the dialog container. Clears the user input after processing."},{"lineNumber":48,"author":{"gitId":"hengyiqun"},"content":"     */"},{"lineNumber":49,"author":{"gitId":"hengyiqun"},"content":"    @FXML"},{"lineNumber":50,"author":{"gitId":"hengyiqun"},"content":"    private void handleUserInput() {"},{"lineNumber":51,"author":{"gitId":"hengyiqun"},"content":"        String input \u003d userInput.getText();"},{"lineNumber":52,"author":{"gitId":"hengyiqun"},"content":"        String response \u003d duke.getResponse(input);"},{"lineNumber":53,"author":{"gitId":"hengyiqun"},"content":"        dialogContainer.getChildren().addAll("},{"lineNumber":54,"author":{"gitId":"hengyiqun"},"content":"                DialogBox.getUserDialog(input, userImage),"},{"lineNumber":55,"author":{"gitId":"hengyiqun"},"content":"                DialogBox.getDukeDialog(response, dukeImage)"},{"lineNumber":56,"author":{"gitId":"hengyiqun"},"content":"        );"},{"lineNumber":57,"author":{"gitId":"hengyiqun"},"content":"        userInput.clear();"},{"lineNumber":58,"author":{"gitId":"hengyiqun"},"content":"    }"},{"lineNumber":59,"author":{"gitId":"hengyiqun"},"content":"}"}],"authorContributionMap":{"hengyiqun":59}},{"path":"src/main/java/duke/parser/DuplicateException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"hengyiqun"},"content":"package duke.parser;"},{"lineNumber":2,"author":{"gitId":"hengyiqun"},"content":""},{"lineNumber":3,"author":{"gitId":"hengyiqun"},"content":"/**"},{"lineNumber":4,"author":{"gitId":"hengyiqun"},"content":" * DuplicateException is raised when the user adds the same task more than one time"},{"lineNumber":5,"author":{"gitId":"hengyiqun"},"content":" */"},{"lineNumber":6,"author":{"gitId":"hengyiqun"},"content":"public class DuplicateException extends Exception {"},{"lineNumber":7,"author":{"gitId":"hengyiqun"},"content":""},{"lineNumber":8,"author":{"gitId":"hengyiqun"},"content":"    /**"},{"lineNumber":9,"author":{"gitId":"hengyiqun"},"content":"     * Constructs a duplicate exception."},{"lineNumber":10,"author":{"gitId":"hengyiqun"},"content":"     *"},{"lineNumber":11,"author":{"gitId":"hengyiqun"},"content":"     * @param e A String containing the error message."},{"lineNumber":12,"author":{"gitId":"hengyiqun"},"content":"     */"},{"lineNumber":13,"author":{"gitId":"hengyiqun"},"content":"    public DuplicateException(String e) {"},{"lineNumber":14,"author":{"gitId":"hengyiqun"},"content":"        super(e);"},{"lineNumber":15,"author":{"gitId":"hengyiqun"},"content":"    }"},{"lineNumber":16,"author":{"gitId":"hengyiqun"},"content":"}"}],"authorContributionMap":{"hengyiqun":16}},{"path":"src/main/java/duke/parser/InsufficientArgumentsException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"hengyiqun"},"content":"package duke.parser;"},{"lineNumber":2,"author":{"gitId":"hengyiqun"},"content":""},{"lineNumber":3,"author":{"gitId":"hengyiqun"},"content":"/**"},{"lineNumber":4,"author":{"gitId":"hengyiqun"},"content":" * InsufficientArgumentsException is raised when the user gives less command than required"},{"lineNumber":5,"author":{"gitId":"hengyiqun"},"content":" */"},{"lineNumber":6,"author":{"gitId":"hengyiqun"},"content":"public class InsufficientArgumentsException extends Exception {"},{"lineNumber":7,"author":{"gitId":"hengyiqun"},"content":""},{"lineNumber":8,"author":{"gitId":"hengyiqun"},"content":"    /**"},{"lineNumber":9,"author":{"gitId":"hengyiqun"},"content":"     * Constructs an insufficient arguments exception."},{"lineNumber":10,"author":{"gitId":"hengyiqun"},"content":"     *"},{"lineNumber":11,"author":{"gitId":"hengyiqun"},"content":"     * @param e A String containing the error message."},{"lineNumber":12,"author":{"gitId":"hengyiqun"},"content":"     */"},{"lineNumber":13,"author":{"gitId":"hengyiqun"},"content":"    public InsufficientArgumentsException(String e) {"},{"lineNumber":14,"author":{"gitId":"hengyiqun"},"content":"        super(e);"},{"lineNumber":15,"author":{"gitId":"hengyiqun"},"content":"    }"},{"lineNumber":16,"author":{"gitId":"hengyiqun"},"content":"}"}],"authorContributionMap":{"hengyiqun":16}},{"path":"src/main/java/duke/parser/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"hengyiqun"},"content":"package duke.parser;"},{"lineNumber":2,"author":{"gitId":"hengyiqun"},"content":""},{"lineNumber":3,"author":{"gitId":"hengyiqun"},"content":"import duke.commands.Command;"},{"lineNumber":4,"author":{"gitId":"hengyiqun"},"content":"import duke.commands.ByeCommand;"},{"lineNumber":5,"author":{"gitId":"hengyiqun"},"content":"import duke.commands.DeadlineCommand;"},{"lineNumber":6,"author":{"gitId":"hengyiqun"},"content":"import duke.commands.DeleteCommand;"},{"lineNumber":7,"author":{"gitId":"hengyiqun"},"content":"import duke.commands.DoneCommand;"},{"lineNumber":8,"author":{"gitId":"hengyiqun"},"content":"import duke.commands.EventCommand;"},{"lineNumber":9,"author":{"gitId":"hengyiqun"},"content":"import duke.commands.ErrorCommand;"},{"lineNumber":10,"author":{"gitId":"hengyiqun"},"content":"import duke.commands.FindCommand;"},{"lineNumber":11,"author":{"gitId":"hengyiqun"},"content":"import duke.commands.ListCommand;"},{"lineNumber":12,"author":{"gitId":"hengyiqun"},"content":"import duke.commands.ToDoCommand;"},{"lineNumber":13,"author":{"gitId":"hengyiqun"},"content":"import duke.tasks.TaskList;"},{"lineNumber":14,"author":{"gitId":"hengyiqun"},"content":""},{"lineNumber":15,"author":{"gitId":"hengyiqun"},"content":"/**"},{"lineNumber":16,"author":{"gitId":"hengyiqun"},"content":" * Parser makes sense of the user command and act accordingly"},{"lineNumber":17,"author":{"gitId":"hengyiqun"},"content":" */"},{"lineNumber":18,"author":{"gitId":"hengyiqun"},"content":"public class Parser {"},{"lineNumber":19,"author":{"gitId":"hengyiqun"},"content":"    private TaskList taskList;"},{"lineNumber":20,"author":{"gitId":"hengyiqun"},"content":""},{"lineNumber":21,"author":{"gitId":"hengyiqun"},"content":"    /**"},{"lineNumber":22,"author":{"gitId":"hengyiqun"},"content":"     * Constructs a parser for making sense of the user-input command."},{"lineNumber":23,"author":{"gitId":"hengyiqun"},"content":"     *"},{"lineNumber":24,"author":{"gitId":"hengyiqun"},"content":"     * @param taskList A task list."},{"lineNumber":25,"author":{"gitId":"hengyiqun"},"content":"     */"},{"lineNumber":26,"author":{"gitId":"hengyiqun"},"content":"    public Parser(TaskList taskList) {"},{"lineNumber":27,"author":{"gitId":"hengyiqun"},"content":"        this.taskList \u003d taskList;"},{"lineNumber":28,"author":{"gitId":"hengyiqun"},"content":"    }"},{"lineNumber":29,"author":{"gitId":"hengyiqun"},"content":""},{"lineNumber":30,"author":{"gitId":"hengyiqun"},"content":"    /**"},{"lineNumber":31,"author":{"gitId":"hengyiqun"},"content":"     * Identifies and returns a command based on the user input."},{"lineNumber":32,"author":{"gitId":"hengyiqun"},"content":"     *"},{"lineNumber":33,"author":{"gitId":"hengyiqun"},"content":"     * @param userInput A String containing the user input."},{"lineNumber":34,"author":{"gitId":"hengyiqun"},"content":"     * @return A command, which is indicated the user."},{"lineNumber":35,"author":{"gitId":"hengyiqun"},"content":"     */"},{"lineNumber":36,"author":{"gitId":"hengyiqun"},"content":"    public Command parse(String userInput) {"},{"lineNumber":37,"author":{"gitId":"hengyiqun"},"content":"        try {"},{"lineNumber":38,"author":{"gitId":"hengyiqun"},"content":"            String[] input \u003d userInput.split(\" \");"},{"lineNumber":39,"author":{"gitId":"hengyiqun"},"content":"            String action \u003d input[0];"},{"lineNumber":40,"author":{"gitId":"hengyiqun"},"content":"            if (action.equals(\"bye\")) {"},{"lineNumber":41,"author":{"gitId":"hengyiqun"},"content":"                return new ByeCommand(input, this.taskList);"},{"lineNumber":42,"author":{"gitId":"hengyiqun"},"content":"            } else if (action.equals(\"list\")) {"},{"lineNumber":43,"author":{"gitId":"hengyiqun"},"content":"                return new ListCommand(input, this.taskList);"},{"lineNumber":44,"author":{"gitId":"hengyiqun"},"content":"            } else if (action.equals(\"done\")) {"},{"lineNumber":45,"author":{"gitId":"hengyiqun"},"content":"                return new DoneCommand(input, this.taskList);"},{"lineNumber":46,"author":{"gitId":"hengyiqun"},"content":"            } else if (action.equals(\"delete\")) {"},{"lineNumber":47,"author":{"gitId":"hengyiqun"},"content":"                return new DeleteCommand(input, this.taskList);"},{"lineNumber":48,"author":{"gitId":"hengyiqun"},"content":"            } else if (action.equals(\"find\")) {"},{"lineNumber":49,"author":{"gitId":"hengyiqun"},"content":"                return new FindCommand(input, this.taskList);"},{"lineNumber":50,"author":{"gitId":"hengyiqun"},"content":"            } else if (action.equals(\"todo\")) {"},{"lineNumber":51,"author":{"gitId":"hengyiqun"},"content":"                return new ToDoCommand(input, this.taskList);"},{"lineNumber":52,"author":{"gitId":"hengyiqun"},"content":"            } else if (action.equals(\"deadline\")) {"},{"lineNumber":53,"author":{"gitId":"hengyiqun"},"content":"                return new DeadlineCommand(input, this.taskList);"},{"lineNumber":54,"author":{"gitId":"hengyiqun"},"content":"            } else if (action.equals(\"event\")) {"},{"lineNumber":55,"author":{"gitId":"hengyiqun"},"content":"                return new EventCommand(input, this.taskList);"},{"lineNumber":56,"author":{"gitId":"hengyiqun"},"content":"            } else {"},{"lineNumber":57,"author":{"gitId":"hengyiqun"},"content":"                throw new WrongArgumentException(\"OOPS!!! I\u0027m sorry, \""},{"lineNumber":58,"author":{"gitId":"hengyiqun"},"content":"                        + \"but I don\u0027t know what that means :-(\");"},{"lineNumber":59,"author":{"gitId":"hengyiqun"},"content":"            }"},{"lineNumber":60,"author":{"gitId":"hengyiqun"},"content":"        } catch (WrongArgumentException e) {"},{"lineNumber":61,"author":{"gitId":"hengyiqun"},"content":"            return new ErrorCommand(this.taskList, e.getMessage());"},{"lineNumber":62,"author":{"gitId":"hengyiqun"},"content":"        }"},{"lineNumber":63,"author":{"gitId":"hengyiqun"},"content":"    }"},{"lineNumber":64,"author":{"gitId":"hengyiqun"},"content":"}"}],"authorContributionMap":{"hengyiqun":64}},{"path":"src/main/java/duke/parser/WrongArgumentException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"hengyiqun"},"content":"package duke.parser;"},{"lineNumber":2,"author":{"gitId":"hengyiqun"},"content":""},{"lineNumber":3,"author":{"gitId":"hengyiqun"},"content":"/**"},{"lineNumber":4,"author":{"gitId":"hengyiqun"},"content":" * WrongArgumentsException is raised when the user gives invalid commands"},{"lineNumber":5,"author":{"gitId":"hengyiqun"},"content":" */"},{"lineNumber":6,"author":{"gitId":"hengyiqun"},"content":""},{"lineNumber":7,"author":{"gitId":"hengyiqun"},"content":"public class WrongArgumentException extends Exception {"},{"lineNumber":8,"author":{"gitId":"hengyiqun"},"content":"    /**"},{"lineNumber":9,"author":{"gitId":"hengyiqun"},"content":"     * Constructs a wrong argument exception."},{"lineNumber":10,"author":{"gitId":"hengyiqun"},"content":"     *"},{"lineNumber":11,"author":{"gitId":"hengyiqun"},"content":"     * @param e A String containing the error message."},{"lineNumber":12,"author":{"gitId":"hengyiqun"},"content":"     */"},{"lineNumber":13,"author":{"gitId":"hengyiqun"},"content":"    public WrongArgumentException(String e) {"},{"lineNumber":14,"author":{"gitId":"hengyiqun"},"content":"        super(e);"},{"lineNumber":15,"author":{"gitId":"hengyiqun"},"content":"    }"},{"lineNumber":16,"author":{"gitId":"hengyiqun"},"content":"}"}],"authorContributionMap":{"hengyiqun":16}},{"path":"src/main/java/duke/storage/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"hengyiqun"},"content":"package duke.storage;"},{"lineNumber":2,"author":{"gitId":"hengyiqun"},"content":""},{"lineNumber":3,"author":{"gitId":"hengyiqun"},"content":"import duke.tasks.Task;"},{"lineNumber":4,"author":{"gitId":"hengyiqun"},"content":"import duke.tasks.TaskList;"},{"lineNumber":5,"author":{"gitId":"hengyiqun"},"content":"import duke.tasks.Todo;"},{"lineNumber":6,"author":{"gitId":"hengyiqun"},"content":"import duke.tasks.Event;"},{"lineNumber":7,"author":{"gitId":"hengyiqun"},"content":"import duke.tasks.Deadline;"},{"lineNumber":8,"author":{"gitId":"hengyiqun"},"content":"import duke.tasks.DueDate;"},{"lineNumber":9,"author":{"gitId":"hengyiqun"},"content":""},{"lineNumber":10,"author":{"gitId":"hengyiqun"},"content":"import java.io.File;"},{"lineNumber":11,"author":{"gitId":"hengyiqun"},"content":"import java.io.FileNotFoundException;"},{"lineNumber":12,"author":{"gitId":"hengyiqun"},"content":"import java.io.FileWriter;"},{"lineNumber":13,"author":{"gitId":"hengyiqun"},"content":"import java.io.IOException;"},{"lineNumber":14,"author":{"gitId":"hengyiqun"},"content":"import java.time.LocalDate;"},{"lineNumber":15,"author":{"gitId":"hengyiqun"},"content":"import java.time.format.DateTimeFormatter;"},{"lineNumber":16,"author":{"gitId":"hengyiqun"},"content":"import java.util.ArrayList;"},{"lineNumber":17,"author":{"gitId":"hengyiqun"},"content":"import java.util.Scanner;"},{"lineNumber":18,"author":{"gitId":"hengyiqun"},"content":""},{"lineNumber":19,"author":{"gitId":"hengyiqun"},"content":"/**"},{"lineNumber":20,"author":{"gitId":"hengyiqun"},"content":" * Storage loads existing tasks from the file and saves tasks to the file when required."},{"lineNumber":21,"author":{"gitId":"hengyiqun"},"content":" */"},{"lineNumber":22,"author":{"gitId":"hengyiqun"},"content":"public class Storage {"},{"lineNumber":23,"author":{"gitId":"hengyiqun"},"content":"    private String filePath;"},{"lineNumber":24,"author":{"gitId":"hengyiqun"},"content":""},{"lineNumber":25,"author":{"gitId":"hengyiqun"},"content":"    /**"},{"lineNumber":26,"author":{"gitId":"hengyiqun"},"content":"     * Initialises storage with a file path."},{"lineNumber":27,"author":{"gitId":"hengyiqun"},"content":"     *"},{"lineNumber":28,"author":{"gitId":"hengyiqun"},"content":"     * @param filePath A String indicating the path of the file containing the task list."},{"lineNumber":29,"author":{"gitId":"hengyiqun"},"content":"     */"},{"lineNumber":30,"author":{"gitId":"hengyiqun"},"content":"    public Storage(String filePath) {"},{"lineNumber":31,"author":{"gitId":"hengyiqun"},"content":"        this.filePath \u003d filePath;"},{"lineNumber":32,"author":{"gitId":"hengyiqun"},"content":"    }"},{"lineNumber":33,"author":{"gitId":"hengyiqun"},"content":""},{"lineNumber":34,"author":{"gitId":"hengyiqun"},"content":"    /**"},{"lineNumber":35,"author":{"gitId":"hengyiqun"},"content":"     * Loads the task list from the filepath given during initialisation of Storage"},{"lineNumber":36,"author":{"gitId":"hengyiqun"},"content":"     *"},{"lineNumber":37,"author":{"gitId":"hengyiqun"},"content":"     * @return A task list containing the tasks for the user."},{"lineNumber":38,"author":{"gitId":"hengyiqun"},"content":"     * @throws FileNotFoundException If the file, given by the filepath during initialisation,"},{"lineNumber":39,"author":{"gitId":"hengyiqun"},"content":"     * does not exist"},{"lineNumber":40,"author":{"gitId":"hengyiqun"},"content":"     */"},{"lineNumber":41,"author":{"gitId":"hengyiqun"},"content":"    public ArrayList\u003cTask\u003e load() throws FileNotFoundException {"},{"lineNumber":42,"author":{"gitId":"hengyiqun"},"content":"        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"yyyy-MM-dd\");"},{"lineNumber":43,"author":{"gitId":"hengyiqun"},"content":"        ArrayList\u003cTask\u003e tasks \u003d new ArrayList\u003cTask\u003e();"},{"lineNumber":44,"author":{"gitId":"hengyiqun"},"content":"        File file \u003d new File(this.filePath);"},{"lineNumber":45,"author":{"gitId":"hengyiqun"},"content":"        Scanner fileScanner \u003d new Scanner(file);"},{"lineNumber":46,"author":{"gitId":"hengyiqun"},"content":"        while (fileScanner.hasNext()) {"},{"lineNumber":47,"author":{"gitId":"hengyiqun"},"content":"            String currentTask \u003d fileScanner.nextLine();"},{"lineNumber":48,"author":{"gitId":"hengyiqun"},"content":"            String[] items \u003d currentTask.split(\" \\\\| \");"},{"lineNumber":49,"author":{"gitId":"hengyiqun"},"content":"            boolean done \u003d (items[1].equals(\"1\") ? true : false);"},{"lineNumber":50,"author":{"gitId":"hengyiqun"},"content":"            Task temp \u003d new Todo(items[2]);"},{"lineNumber":51,"author":{"gitId":"hengyiqun"},"content":"            if (items[0].equals(\"E\")) {"},{"lineNumber":52,"author":{"gitId":"hengyiqun"},"content":"                LocalDate date \u003d LocalDate.parse(items[3], formatter);"},{"lineNumber":53,"author":{"gitId":"hengyiqun"},"content":"                temp \u003d new Event(items[2], date);"},{"lineNumber":54,"author":{"gitId":"hengyiqun"},"content":"            } else if (items[0].equals(\"D\")) {"},{"lineNumber":55,"author":{"gitId":"hengyiqun"},"content":"                LocalDate date \u003d LocalDate.parse(items[3], formatter);"},{"lineNumber":56,"author":{"gitId":"hengyiqun"},"content":"                temp \u003d new Deadline(items[2], date);"},{"lineNumber":57,"author":{"gitId":"hengyiqun"},"content":"            }"},{"lineNumber":58,"author":{"gitId":"hengyiqun"},"content":"            if (done) {"},{"lineNumber":59,"author":{"gitId":"hengyiqun"},"content":"                temp \u003d temp.markAsDone();"},{"lineNumber":60,"author":{"gitId":"hengyiqun"},"content":"            }"},{"lineNumber":61,"author":{"gitId":"hengyiqun"},"content":"            tasks.add(temp);"},{"lineNumber":62,"author":{"gitId":"hengyiqun"},"content":"        }"},{"lineNumber":63,"author":{"gitId":"hengyiqun"},"content":"        return tasks;"},{"lineNumber":64,"author":{"gitId":"hengyiqun"},"content":"    }"},{"lineNumber":65,"author":{"gitId":"hengyiqun"},"content":""},{"lineNumber":66,"author":{"gitId":"hengyiqun"},"content":"    /**"},{"lineNumber":67,"author":{"gitId":"hengyiqun"},"content":"     * Saves the list of tasks to the file indicated by the file path during initialisation."},{"lineNumber":68,"author":{"gitId":"hengyiqun"},"content":"     *"},{"lineNumber":69,"author":{"gitId":"hengyiqun"},"content":"     * @param taskList List of task to be saved."},{"lineNumber":70,"author":{"gitId":"hengyiqun"},"content":"     */"},{"lineNumber":71,"author":{"gitId":"hengyiqun"},"content":"    public void save(TaskList taskList) {"},{"lineNumber":72,"author":{"gitId":"hengyiqun"},"content":"        ArrayList\u003cTask\u003e tasks \u003d taskList.getList();"},{"lineNumber":73,"author":{"gitId":"hengyiqun"},"content":"        try {"},{"lineNumber":74,"author":{"gitId":"hengyiqun"},"content":"            FileWriter fw \u003d new FileWriter(this.filePath);"},{"lineNumber":75,"author":{"gitId":"hengyiqun"},"content":"            for (Task task : tasks) {"},{"lineNumber":76,"author":{"gitId":"hengyiqun"},"content":"                String taskToSave \u003d \"\";"},{"lineNumber":77,"author":{"gitId":"hengyiqun"},"content":"                if (task instanceof Event) {"},{"lineNumber":78,"author":{"gitId":"hengyiqun"},"content":"                    taskToSave +\u003d \"E\";"},{"lineNumber":79,"author":{"gitId":"hengyiqun"},"content":"                } else if (task instanceof Deadline) {"},{"lineNumber":80,"author":{"gitId":"hengyiqun"},"content":"                    taskToSave +\u003d \"D\";"},{"lineNumber":81,"author":{"gitId":"hengyiqun"},"content":"                } else if (task instanceof Todo) {"},{"lineNumber":82,"author":{"gitId":"hengyiqun"},"content":"                    taskToSave +\u003d \"T\";"},{"lineNumber":83,"author":{"gitId":"hengyiqun"},"content":"                }"},{"lineNumber":84,"author":{"gitId":"hengyiqun"},"content":"                taskToSave +\u003d \" | \";"},{"lineNumber":85,"author":{"gitId":"hengyiqun"},"content":"                if (task.isCompleted()) {"},{"lineNumber":86,"author":{"gitId":"hengyiqun"},"content":"                    taskToSave +\u003d \"1\";"},{"lineNumber":87,"author":{"gitId":"hengyiqun"},"content":"                } else {"},{"lineNumber":88,"author":{"gitId":"hengyiqun"},"content":"                    taskToSave +\u003d \"0\";"},{"lineNumber":89,"author":{"gitId":"hengyiqun"},"content":"                }"},{"lineNumber":90,"author":{"gitId":"hengyiqun"},"content":"                taskToSave +\u003d \" | \";"},{"lineNumber":91,"author":{"gitId":"hengyiqun"},"content":"                taskToSave +\u003d task.getDescription();"},{"lineNumber":92,"author":{"gitId":"hengyiqun"},"content":"                if (task instanceof DueDate) {"},{"lineNumber":93,"author":{"gitId":"hengyiqun"},"content":"                    taskToSave +\u003d \" | \";"},{"lineNumber":94,"author":{"gitId":"hengyiqun"},"content":"                    taskToSave +\u003d ((DueDate) task).getDueDate();"},{"lineNumber":95,"author":{"gitId":"hengyiqun"},"content":"                }"},{"lineNumber":96,"author":{"gitId":"hengyiqun"},"content":"                fw.write(taskToSave + \"\\n\");"},{"lineNumber":97,"author":{"gitId":"hengyiqun"},"content":"            }"},{"lineNumber":98,"author":{"gitId":"hengyiqun"},"content":"            fw.close();"},{"lineNumber":99,"author":{"gitId":"hengyiqun"},"content":"        } catch (IOException e) {"},{"lineNumber":100,"author":{"gitId":"hengyiqun"},"content":"            System.out.println(e.getMessage());"},{"lineNumber":101,"author":{"gitId":"hengyiqun"},"content":"        }"},{"lineNumber":102,"author":{"gitId":"hengyiqun"},"content":"    }"},{"lineNumber":103,"author":{"gitId":"hengyiqun"},"content":"}"}],"authorContributionMap":{"hengyiqun":103}},{"path":"src/main/java/duke/tasks/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"hengyiqun"},"content":"package duke.tasks;"},{"lineNumber":2,"author":{"gitId":"hengyiqun"},"content":""},{"lineNumber":3,"author":{"gitId":"hengyiqun"},"content":"import duke.parser.DuplicateException;"},{"lineNumber":4,"author":{"gitId":"hengyiqun"},"content":""},{"lineNumber":5,"author":{"gitId":"hengyiqun"},"content":"import java.time.LocalDate;"},{"lineNumber":6,"author":{"gitId":"hengyiqun"},"content":"import java.time.format.DateTimeFormatter;"},{"lineNumber":7,"author":{"gitId":"hengyiqun"},"content":""},{"lineNumber":8,"author":{"gitId":"hengyiqun"},"content":"/**"},{"lineNumber":9,"author":{"gitId":"hengyiqun"},"content":" * Deadline is task that is defined by a due date."},{"lineNumber":10,"author":{"gitId":"hengyiqun"},"content":" */"},{"lineNumber":11,"author":{"gitId":"hengyiqun"},"content":"public class Deadline extends Task implements DueDate {"},{"lineNumber":12,"author":{"gitId":"hengyiqun"},"content":"    protected LocalDate time;"},{"lineNumber":13,"author":{"gitId":"hengyiqun"},"content":""},{"lineNumber":14,"author":{"gitId":"hengyiqun"},"content":"    /**"},{"lineNumber":15,"author":{"gitId":"hengyiqun"},"content":"     * Constructs a deadline with its description, and due date."},{"lineNumber":16,"author":{"gitId":"hengyiqun"},"content":"     * The deadline has yet to be completed."},{"lineNumber":17,"author":{"gitId":"hengyiqun"},"content":"     *"},{"lineNumber":18,"author":{"gitId":"hengyiqun"},"content":"     * @param description A String description of the deadline."},{"lineNumber":19,"author":{"gitId":"hengyiqun"},"content":"     * @param time Due date in yyyy-MM-dd format (e.g. 2021-03-12)."},{"lineNumber":20,"author":{"gitId":"hengyiqun"},"content":"     */"},{"lineNumber":21,"author":{"gitId":"hengyiqun"},"content":"    public Deadline(String description, LocalDate time) {"},{"lineNumber":22,"author":{"gitId":"hengyiqun"},"content":"        super(description);"},{"lineNumber":23,"author":{"gitId":"hengyiqun"},"content":"        this.time \u003d time;"},{"lineNumber":24,"author":{"gitId":"hengyiqun"},"content":"    }"},{"lineNumber":25,"author":{"gitId":"hengyiqun"},"content":""},{"lineNumber":26,"author":{"gitId":"hengyiqun"},"content":"    /**"},{"lineNumber":27,"author":{"gitId":"hengyiqun"},"content":"     * Constructs a deadline with its description, due date, and its specified completion status."},{"lineNumber":28,"author":{"gitId":"hengyiqun"},"content":"     *"},{"lineNumber":29,"author":{"gitId":"hengyiqun"},"content":"     * @param description A String description of the deadline."},{"lineNumber":30,"author":{"gitId":"hengyiqun"},"content":"     * @param isDone A boolean variable indicating if the deadline is completed."},{"lineNumber":31,"author":{"gitId":"hengyiqun"},"content":"     * @param time Due date in yyyy-MM-dd format (e.g. 2021-03-12)."},{"lineNumber":32,"author":{"gitId":"hengyiqun"},"content":"     */"},{"lineNumber":33,"author":{"gitId":"hengyiqun"},"content":"    public Deadline(String description, boolean isDone, LocalDate time) {"},{"lineNumber":34,"author":{"gitId":"hengyiqun"},"content":"        super(description, isDone);"},{"lineNumber":35,"author":{"gitId":"hengyiqun"},"content":"        this.time \u003d time;"},{"lineNumber":36,"author":{"gitId":"hengyiqun"},"content":"    }"},{"lineNumber":37,"author":{"gitId":"hengyiqun"},"content":""},{"lineNumber":38,"author":{"gitId":"hengyiqun"},"content":"    /**"},{"lineNumber":39,"author":{"gitId":"hengyiqun"},"content":"     * Marks a deadline as completed."},{"lineNumber":40,"author":{"gitId":"hengyiqun"},"content":"     *"},{"lineNumber":41,"author":{"gitId":"hengyiqun"},"content":"     * @return A completed deadline with the same description."},{"lineNumber":42,"author":{"gitId":"hengyiqun"},"content":"     */"},{"lineNumber":43,"author":{"gitId":"hengyiqun"},"content":"    public Deadline markAsDone() {"},{"lineNumber":44,"author":{"gitId":"hengyiqun"},"content":"        return new Deadline(this.description, true, this.time);"},{"lineNumber":45,"author":{"gitId":"hengyiqun"},"content":"    }"},{"lineNumber":46,"author":{"gitId":"hengyiqun"},"content":""},{"lineNumber":47,"author":{"gitId":"hengyiqun"},"content":"    /**"},{"lineNumber":48,"author":{"gitId":"hengyiqun"},"content":"     * Returns the due date of the deadline."},{"lineNumber":49,"author":{"gitId":"hengyiqun"},"content":"     *"},{"lineNumber":50,"author":{"gitId":"hengyiqun"},"content":"     * @return A String representation of the due date of the deadline."},{"lineNumber":51,"author":{"gitId":"hengyiqun"},"content":"     */"},{"lineNumber":52,"author":{"gitId":"hengyiqun"},"content":"    @Override"},{"lineNumber":53,"author":{"gitId":"hengyiqun"},"content":"    public String getDueDate() {"},{"lineNumber":54,"author":{"gitId":"hengyiqun"},"content":"        return this.time.toString();"},{"lineNumber":55,"author":{"gitId":"hengyiqun"},"content":"    }"},{"lineNumber":56,"author":{"gitId":"hengyiqun"},"content":""},{"lineNumber":57,"author":{"gitId":"hengyiqun"},"content":"    /**"},{"lineNumber":58,"author":{"gitId":"hengyiqun"},"content":"     * Returns a String representation of the deadline."},{"lineNumber":59,"author":{"gitId":"hengyiqun"},"content":"     *"},{"lineNumber":60,"author":{"gitId":"hengyiqun"},"content":"     * @return A String representation of the deadline."},{"lineNumber":61,"author":{"gitId":"hengyiqun"},"content":"     */"},{"lineNumber":62,"author":{"gitId":"hengyiqun"},"content":"    @Override"},{"lineNumber":63,"author":{"gitId":"hengyiqun"},"content":"    public String toString() {"},{"lineNumber":64,"author":{"gitId":"hengyiqun"},"content":"        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"MMM dd yyyy\");"},{"lineNumber":65,"author":{"gitId":"hengyiqun"},"content":"        return \"[D]\" + super.toString() + \" (by: \" + time.format(formatter) + \")\";"},{"lineNumber":66,"author":{"gitId":"hengyiqun"},"content":"    }"},{"lineNumber":67,"author":{"gitId":"hengyiqun"},"content":"}"}],"authorContributionMap":{"hengyiqun":67}},{"path":"src/main/java/duke/tasks/DueDate.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"hengyiqun"},"content":"package duke.tasks;"},{"lineNumber":2,"author":{"gitId":"hengyiqun"},"content":""},{"lineNumber":3,"author":{"gitId":"hengyiqun"},"content":"/**"},{"lineNumber":4,"author":{"gitId":"hengyiqun"},"content":" * DueDate is an interface for inheritance by tasks that has a due date."},{"lineNumber":5,"author":{"gitId":"hengyiqun"},"content":" */"},{"lineNumber":6,"author":{"gitId":"hengyiqun"},"content":"public interface DueDate {"},{"lineNumber":7,"author":{"gitId":"hengyiqun"},"content":"    /**"},{"lineNumber":8,"author":{"gitId":"hengyiqun"},"content":"     * Returns a String representation of the task."},{"lineNumber":9,"author":{"gitId":"hengyiqun"},"content":"     *"},{"lineNumber":10,"author":{"gitId":"hengyiqun"},"content":"     * @return A String representation of the task."},{"lineNumber":11,"author":{"gitId":"hengyiqun"},"content":"     */"},{"lineNumber":12,"author":{"gitId":"hengyiqun"},"content":"    String getDueDate();"},{"lineNumber":13,"author":{"gitId":"hengyiqun"},"content":"}"}],"authorContributionMap":{"hengyiqun":13}},{"path":"src/main/java/duke/tasks/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"hengyiqun"},"content":"package duke.tasks;"},{"lineNumber":2,"author":{"gitId":"hengyiqun"},"content":""},{"lineNumber":3,"author":{"gitId":"hengyiqun"},"content":"import java.time.LocalDate;"},{"lineNumber":4,"author":{"gitId":"hengyiqun"},"content":"import java.time.format.DateTimeFormatter;"},{"lineNumber":5,"author":{"gitId":"hengyiqun"},"content":""},{"lineNumber":6,"author":{"gitId":"hengyiqun"},"content":"/**"},{"lineNumber":7,"author":{"gitId":"hengyiqun"},"content":" * Event is a task defined by a time at which it will occur."},{"lineNumber":8,"author":{"gitId":"hengyiqun"},"content":" */"},{"lineNumber":9,"author":{"gitId":"hengyiqun"},"content":"public class Event extends Task implements DueDate {"},{"lineNumber":10,"author":{"gitId":"hengyiqun"},"content":"    protected LocalDate time;"},{"lineNumber":11,"author":{"gitId":"hengyiqun"},"content":""},{"lineNumber":12,"author":{"gitId":"hengyiqun"},"content":"    /**"},{"lineNumber":13,"author":{"gitId":"hengyiqun"},"content":"     * Constructs an event with its description, and its time."},{"lineNumber":14,"author":{"gitId":"hengyiqun"},"content":"     * The event has yet to happen."},{"lineNumber":15,"author":{"gitId":"hengyiqun"},"content":"     *"},{"lineNumber":16,"author":{"gitId":"hengyiqun"},"content":"     * @param description A String description of the event."},{"lineNumber":17,"author":{"gitId":"hengyiqun"},"content":"     * @param time Time of the event in yyyy-MM-dd format (e.g. 2021-03-12)."},{"lineNumber":18,"author":{"gitId":"hengyiqun"},"content":"     */"},{"lineNumber":19,"author":{"gitId":"hengyiqun"},"content":"    public Event(String description, LocalDate time) {"},{"lineNumber":20,"author":{"gitId":"hengyiqun"},"content":"        super(description);"},{"lineNumber":21,"author":{"gitId":"hengyiqun"},"content":"        this.time \u003d time;"},{"lineNumber":22,"author":{"gitId":"hengyiqun"},"content":"    }"},{"lineNumber":23,"author":{"gitId":"hengyiqun"},"content":""},{"lineNumber":24,"author":{"gitId":"hengyiqun"},"content":"    /**"},{"lineNumber":25,"author":{"gitId":"hengyiqun"},"content":"     * Constructs an event with its description, time, and its specified completion status."},{"lineNumber":26,"author":{"gitId":"hengyiqun"},"content":"     *"},{"lineNumber":27,"author":{"gitId":"hengyiqun"},"content":"     * @param description A String description of the event."},{"lineNumber":28,"author":{"gitId":"hengyiqun"},"content":"     * @param isDone A boolean variable indicating if the event has happened."},{"lineNumber":29,"author":{"gitId":"hengyiqun"},"content":"     * @param time Time of the event in yyyy-MM-dd format (e.g. 2021-03-12)."},{"lineNumber":30,"author":{"gitId":"hengyiqun"},"content":"     */"},{"lineNumber":31,"author":{"gitId":"hengyiqun"},"content":"    public Event(String description, boolean isDone, LocalDate time) {"},{"lineNumber":32,"author":{"gitId":"hengyiqun"},"content":"        super(description, isDone);"},{"lineNumber":33,"author":{"gitId":"hengyiqun"},"content":"        this.time \u003d time;"},{"lineNumber":34,"author":{"gitId":"hengyiqun"},"content":"    }"},{"lineNumber":35,"author":{"gitId":"hengyiqun"},"content":""},{"lineNumber":36,"author":{"gitId":"hengyiqun"},"content":"    /**"},{"lineNumber":37,"author":{"gitId":"hengyiqun"},"content":"     * Marks an event as happened."},{"lineNumber":38,"author":{"gitId":"hengyiqun"},"content":"     *"},{"lineNumber":39,"author":{"gitId":"hengyiqun"},"content":"     * @return A completed event with the same description."},{"lineNumber":40,"author":{"gitId":"hengyiqun"},"content":"     */"},{"lineNumber":41,"author":{"gitId":"hengyiqun"},"content":"    public Event markAsDone() {"},{"lineNumber":42,"author":{"gitId":"hengyiqun"},"content":"        return new Event(this.description, true, this.time);"},{"lineNumber":43,"author":{"gitId":"hengyiqun"},"content":"    }"},{"lineNumber":44,"author":{"gitId":"hengyiqun"},"content":""},{"lineNumber":45,"author":{"gitId":"hengyiqun"},"content":"    /**"},{"lineNumber":46,"author":{"gitId":"hengyiqun"},"content":"     * Returns the time of the event."},{"lineNumber":47,"author":{"gitId":"hengyiqun"},"content":"     *"},{"lineNumber":48,"author":{"gitId":"hengyiqun"},"content":"     * @return A String representation of the time of the event."},{"lineNumber":49,"author":{"gitId":"hengyiqun"},"content":"     */"},{"lineNumber":50,"author":{"gitId":"hengyiqun"},"content":"    @Override"},{"lineNumber":51,"author":{"gitId":"hengyiqun"},"content":"    public String getDueDate() {"},{"lineNumber":52,"author":{"gitId":"hengyiqun"},"content":"        return this.time.toString();"},{"lineNumber":53,"author":{"gitId":"hengyiqun"},"content":"    }"},{"lineNumber":54,"author":{"gitId":"hengyiqun"},"content":""},{"lineNumber":55,"author":{"gitId":"hengyiqun"},"content":"    /**"},{"lineNumber":56,"author":{"gitId":"hengyiqun"},"content":"     * Returns a String representation of the event."},{"lineNumber":57,"author":{"gitId":"hengyiqun"},"content":"     *"},{"lineNumber":58,"author":{"gitId":"hengyiqun"},"content":"     * @return A String representation of the event."},{"lineNumber":59,"author":{"gitId":"hengyiqun"},"content":"     */"},{"lineNumber":60,"author":{"gitId":"hengyiqun"},"content":"    @Override"},{"lineNumber":61,"author":{"gitId":"hengyiqun"},"content":"    public String toString() {"},{"lineNumber":62,"author":{"gitId":"hengyiqun"},"content":"        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"MMM dd yyyy\");"},{"lineNumber":63,"author":{"gitId":"hengyiqun"},"content":"        return \"[E]\" + super.toString() + \" (at: \" + time.format(formatter) + \")\";"},{"lineNumber":64,"author":{"gitId":"hengyiqun"},"content":"    }"},{"lineNumber":65,"author":{"gitId":"hengyiqun"},"content":"}"}],"authorContributionMap":{"hengyiqun":65}},{"path":"src/main/java/duke/tasks/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"hengyiqun"},"content":"package duke.tasks;"},{"lineNumber":2,"author":{"gitId":"hengyiqun"},"content":""},{"lineNumber":3,"author":{"gitId":"hengyiqun"},"content":"/**"},{"lineNumber":4,"author":{"gitId":"hengyiqun"},"content":" * Task is a parent class for inheriting by specific tasks."},{"lineNumber":5,"author":{"gitId":"hengyiqun"},"content":" */"},{"lineNumber":6,"author":{"gitId":"hengyiqun"},"content":"public class Task {"},{"lineNumber":7,"author":{"gitId":"hengyiqun"},"content":"    protected String description;"},{"lineNumber":8,"author":{"gitId":"hengyiqun"},"content":"    protected boolean isDone;"},{"lineNumber":9,"author":{"gitId":"hengyiqun"},"content":""},{"lineNumber":10,"author":{"gitId":"hengyiqun"},"content":"    /**"},{"lineNumber":11,"author":{"gitId":"hengyiqun"},"content":"     * Initialises a task with its description. The task is not completed yet."},{"lineNumber":12,"author":{"gitId":"hengyiqun"},"content":"     *"},{"lineNumber":13,"author":{"gitId":"hengyiqun"},"content":"     * @param description A String description of the task."},{"lineNumber":14,"author":{"gitId":"hengyiqun"},"content":"     */"},{"lineNumber":15,"author":{"gitId":"hengyiqun"},"content":"    public Task(String description) {"},{"lineNumber":16,"author":{"gitId":"hengyiqun"},"content":"        this.description \u003d description;"},{"lineNumber":17,"author":{"gitId":"hengyiqun"},"content":"        this.isDone \u003d false;"},{"lineNumber":18,"author":{"gitId":"hengyiqun"},"content":"    }"},{"lineNumber":19,"author":{"gitId":"hengyiqun"},"content":""},{"lineNumber":20,"author":{"gitId":"hengyiqun"},"content":"    /**"},{"lineNumber":21,"author":{"gitId":"hengyiqun"},"content":"     * Initialises a task with its description, and its specified completion status."},{"lineNumber":22,"author":{"gitId":"hengyiqun"},"content":"     *"},{"lineNumber":23,"author":{"gitId":"hengyiqun"},"content":"     * @param description A String description of the task."},{"lineNumber":24,"author":{"gitId":"hengyiqun"},"content":"     * @param isDone A boolean variable specifying if the task is already completed."},{"lineNumber":25,"author":{"gitId":"hengyiqun"},"content":"     */"},{"lineNumber":26,"author":{"gitId":"hengyiqun"},"content":"    protected Task(String description, boolean isDone) {"},{"lineNumber":27,"author":{"gitId":"hengyiqun"},"content":"        this.description \u003d description;"},{"lineNumber":28,"author":{"gitId":"hengyiqun"},"content":"        this.isDone \u003d isDone;"},{"lineNumber":29,"author":{"gitId":"hengyiqun"},"content":"    }"},{"lineNumber":30,"author":{"gitId":"hengyiqun"},"content":""},{"lineNumber":31,"author":{"gitId":"hengyiqun"},"content":"    /**"},{"lineNumber":32,"author":{"gitId":"hengyiqun"},"content":"     * Returns the description, in String, of the task."},{"lineNumber":33,"author":{"gitId":"hengyiqun"},"content":"     *"},{"lineNumber":34,"author":{"gitId":"hengyiqun"},"content":"     * @return A String description of the task."},{"lineNumber":35,"author":{"gitId":"hengyiqun"},"content":"     */"},{"lineNumber":36,"author":{"gitId":"hengyiqun"},"content":"    public String getDescription() {"},{"lineNumber":37,"author":{"gitId":"hengyiqun"},"content":"        return this.description;"},{"lineNumber":38,"author":{"gitId":"hengyiqun"},"content":"    }"},{"lineNumber":39,"author":{"gitId":"hengyiqun"},"content":""},{"lineNumber":40,"author":{"gitId":"hengyiqun"},"content":"    /**"},{"lineNumber":41,"author":{"gitId":"hengyiqun"},"content":"     * Returns a boolean variable indicating the completion status of the task."},{"lineNumber":42,"author":{"gitId":"hengyiqun"},"content":"     *"},{"lineNumber":43,"author":{"gitId":"hengyiqun"},"content":"     * @return A boolean variable indicating the completion status of the task."},{"lineNumber":44,"author":{"gitId":"hengyiqun"},"content":"     */"},{"lineNumber":45,"author":{"gitId":"hengyiqun"},"content":"    public boolean isCompleted() {"},{"lineNumber":46,"author":{"gitId":"hengyiqun"},"content":"        return this.isDone;"},{"lineNumber":47,"author":{"gitId":"hengyiqun"},"content":"    }"},{"lineNumber":48,"author":{"gitId":"hengyiqun"},"content":""},{"lineNumber":49,"author":{"gitId":"hengyiqun"},"content":"    /**"},{"lineNumber":50,"author":{"gitId":"hengyiqun"},"content":"     * Marks a task as completed."},{"lineNumber":51,"author":{"gitId":"hengyiqun"},"content":"     *"},{"lineNumber":52,"author":{"gitId":"hengyiqun"},"content":"     * @return A completed task with the same description."},{"lineNumber":53,"author":{"gitId":"hengyiqun"},"content":"     */"},{"lineNumber":54,"author":{"gitId":"hengyiqun"},"content":"    public Task markAsDone() {"},{"lineNumber":55,"author":{"gitId":"hengyiqun"},"content":"        return new Task(this.description, true);"},{"lineNumber":56,"author":{"gitId":"hengyiqun"},"content":"    }"},{"lineNumber":57,"author":{"gitId":"hengyiqun"},"content":""},{"lineNumber":58,"author":{"gitId":"hengyiqun"},"content":"    /**"},{"lineNumber":59,"author":{"gitId":"hengyiqun"},"content":"     * Returns a String representation of the task."},{"lineNumber":60,"author":{"gitId":"hengyiqun"},"content":"     *"},{"lineNumber":61,"author":{"gitId":"hengyiqun"},"content":"     * @return A String representation of the task."},{"lineNumber":62,"author":{"gitId":"hengyiqun"},"content":"     */"},{"lineNumber":63,"author":{"gitId":"hengyiqun"},"content":"    @Override"},{"lineNumber":64,"author":{"gitId":"hengyiqun"},"content":"    public String toString() {"},{"lineNumber":65,"author":{"gitId":"hengyiqun"},"content":"        if (this.isDone) {"},{"lineNumber":66,"author":{"gitId":"hengyiqun"},"content":"            return \"[X] \" + this.description;"},{"lineNumber":67,"author":{"gitId":"hengyiqun"},"content":"        }"},{"lineNumber":68,"author":{"gitId":"hengyiqun"},"content":"        return \"[ ] \" + this.description;"},{"lineNumber":69,"author":{"gitId":"hengyiqun"},"content":"    }"},{"lineNumber":70,"author":{"gitId":"hengyiqun"},"content":"}"}],"authorContributionMap":{"hengyiqun":70}},{"path":"src/main/java/duke/tasks/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"hengyiqun"},"content":"package duke.tasks;"},{"lineNumber":2,"author":{"gitId":"hengyiqun"},"content":""},{"lineNumber":3,"author":{"gitId":"hengyiqun"},"content":"import duke.parser.DuplicateException;"},{"lineNumber":4,"author":{"gitId":"hengyiqun"},"content":""},{"lineNumber":5,"author":{"gitId":"hengyiqun"},"content":"import java.util.ArrayList;"},{"lineNumber":6,"author":{"gitId":"hengyiqun"},"content":""},{"lineNumber":7,"author":{"gitId":"hengyiqun"},"content":"/**"},{"lineNumber":8,"author":{"gitId":"hengyiqun"},"content":" * TaskList stores a list of Task Objects"},{"lineNumber":9,"author":{"gitId":"hengyiqun"},"content":" */"},{"lineNumber":10,"author":{"gitId":"hengyiqun"},"content":"public class TaskList {"},{"lineNumber":11,"author":{"gitId":"hengyiqun"},"content":"    private ArrayList\u003cTask\u003e tasks;"},{"lineNumber":12,"author":{"gitId":"hengyiqun"},"content":""},{"lineNumber":13,"author":{"gitId":"hengyiqun"},"content":"    /**"},{"lineNumber":14,"author":{"gitId":"hengyiqun"},"content":"     * Constructs an empty task list."},{"lineNumber":15,"author":{"gitId":"hengyiqun"},"content":"     */"},{"lineNumber":16,"author":{"gitId":"hengyiqun"},"content":"    public TaskList() {"},{"lineNumber":17,"author":{"gitId":"hengyiqun"},"content":"        this.tasks \u003d new ArrayList\u003cTask\u003e();"},{"lineNumber":18,"author":{"gitId":"hengyiqun"},"content":"    }"},{"lineNumber":19,"author":{"gitId":"hengyiqun"},"content":""},{"lineNumber":20,"author":{"gitId":"hengyiqun"},"content":"    /**"},{"lineNumber":21,"author":{"gitId":"hengyiqun"},"content":"     * Constructs a task list containing the elements of the specified ArrayList."},{"lineNumber":22,"author":{"gitId":"hengyiqun"},"content":"     *"},{"lineNumber":23,"author":{"gitId":"hengyiqun"},"content":"     * @param tasks The ArrayList whose elements are to be placed into the task list."},{"lineNumber":24,"author":{"gitId":"hengyiqun"},"content":"     */"},{"lineNumber":25,"author":{"gitId":"hengyiqun"},"content":"    public TaskList(ArrayList\u003cTask\u003e tasks) {"},{"lineNumber":26,"author":{"gitId":"hengyiqun"},"content":"        this.tasks \u003d tasks;"},{"lineNumber":27,"author":{"gitId":"hengyiqun"},"content":"    }"},{"lineNumber":28,"author":{"gitId":"hengyiqun"},"content":""},{"lineNumber":29,"author":{"gitId":"hengyiqun"},"content":"    /**"},{"lineNumber":30,"author":{"gitId":"hengyiqun"},"content":"     * Inserts the specified task to the end of the task list."},{"lineNumber":31,"author":{"gitId":"hengyiqun"},"content":"     *"},{"lineNumber":32,"author":{"gitId":"hengyiqun"},"content":"     * @param task Task to be added into the task list."},{"lineNumber":33,"author":{"gitId":"hengyiqun"},"content":"     * @return A new task list with the original tasks and the newly added task."},{"lineNumber":34,"author":{"gitId":"hengyiqun"},"content":"     */"},{"lineNumber":35,"author":{"gitId":"hengyiqun"},"content":"    public TaskList add(Task task) {"},{"lineNumber":36,"author":{"gitId":"hengyiqun"},"content":"        ArrayList\u003cTask\u003e newTaskList \u003d new ArrayList\u003c\u003e();"},{"lineNumber":37,"author":{"gitId":"hengyiqun"},"content":"        for (Task t: this.tasks) {"},{"lineNumber":38,"author":{"gitId":"hengyiqun"},"content":"            newTaskList.add(t);"},{"lineNumber":39,"author":{"gitId":"hengyiqun"},"content":"        }"},{"lineNumber":40,"author":{"gitId":"hengyiqun"},"content":"        newTaskList.add(task);"},{"lineNumber":41,"author":{"gitId":"hengyiqun"},"content":"        assert newTaskList.size() \u003e\u003d 1;"},{"lineNumber":42,"author":{"gitId":"hengyiqun"},"content":"        return new TaskList(newTaskList);"},{"lineNumber":43,"author":{"gitId":"hengyiqun"},"content":"    }"},{"lineNumber":44,"author":{"gitId":"hengyiqun"},"content":""},{"lineNumber":45,"author":{"gitId":"hengyiqun"},"content":"    /**"},{"lineNumber":46,"author":{"gitId":"hengyiqun"},"content":"     * Returns the task at the specified position in the task list."},{"lineNumber":47,"author":{"gitId":"hengyiqun"},"content":"     *"},{"lineNumber":48,"author":{"gitId":"hengyiqun"},"content":"     * @param index Index of the task to return."},{"lineNumber":49,"author":{"gitId":"hengyiqun"},"content":"     * @return The task at the specified position in the task list."},{"lineNumber":50,"author":{"gitId":"hengyiqun"},"content":"     */"},{"lineNumber":51,"author":{"gitId":"hengyiqun"},"content":"    public Task get(int index) {"},{"lineNumber":52,"author":{"gitId":"hengyiqun"},"content":"        return this.tasks.get(index);"},{"lineNumber":53,"author":{"gitId":"hengyiqun"},"content":"    }"},{"lineNumber":54,"author":{"gitId":"hengyiqun"},"content":""},{"lineNumber":55,"author":{"gitId":"hengyiqun"},"content":"    /**"},{"lineNumber":56,"author":{"gitId":"hengyiqun"},"content":"     * Removes the task at the specified position in the task list."},{"lineNumber":57,"author":{"gitId":"hengyiqun"},"content":"     * Shifts any subsequent tasks to the left (subtracts one from their indices)."},{"lineNumber":58,"author":{"gitId":"hengyiqun"},"content":"     *"},{"lineNumber":59,"author":{"gitId":"hengyiqun"},"content":"     * @param index The index of the task to be removed."},{"lineNumber":60,"author":{"gitId":"hengyiqun"},"content":"     * @return The new task list with all the original tasks expect the one that was deleted."},{"lineNumber":61,"author":{"gitId":"hengyiqun"},"content":"     */"},{"lineNumber":62,"author":{"gitId":"hengyiqun"},"content":"    public TaskList remove(int index) {"},{"lineNumber":63,"author":{"gitId":"hengyiqun"},"content":"        ArrayList\u003cTask\u003e newTaskList \u003d this.tasks;"},{"lineNumber":64,"author":{"gitId":"hengyiqun"},"content":"        newTaskList.remove(index);"},{"lineNumber":65,"author":{"gitId":"hengyiqun"},"content":"        return new TaskList(newTaskList);"},{"lineNumber":66,"author":{"gitId":"hengyiqun"},"content":"    }"},{"lineNumber":67,"author":{"gitId":"hengyiqun"},"content":""},{"lineNumber":68,"author":{"gitId":"hengyiqun"},"content":"    /**"},{"lineNumber":69,"author":{"gitId":"hengyiqun"},"content":"     * Returns the task list in an ArrayList."},{"lineNumber":70,"author":{"gitId":"hengyiqun"},"content":"     *"},{"lineNumber":71,"author":{"gitId":"hengyiqun"},"content":"     * @return An ArrayList containing all the tasks."},{"lineNumber":72,"author":{"gitId":"hengyiqun"},"content":"     */"},{"lineNumber":73,"author":{"gitId":"hengyiqun"},"content":"    public ArrayList\u003cTask\u003e getList() {"},{"lineNumber":74,"author":{"gitId":"hengyiqun"},"content":"        return this.tasks;"},{"lineNumber":75,"author":{"gitId":"hengyiqun"},"content":"    }"},{"lineNumber":76,"author":{"gitId":"hengyiqun"},"content":""},{"lineNumber":77,"author":{"gitId":"hengyiqun"},"content":"    /**"},{"lineNumber":78,"author":{"gitId":"hengyiqun"},"content":"     * Returns the number of tasks in the task list."},{"lineNumber":79,"author":{"gitId":"hengyiqun"},"content":"     *"},{"lineNumber":80,"author":{"gitId":"hengyiqun"},"content":"     * @return The number of tasks in the task list."},{"lineNumber":81,"author":{"gitId":"hengyiqun"},"content":"     */"},{"lineNumber":82,"author":{"gitId":"hengyiqun"},"content":"    public int size() {"},{"lineNumber":83,"author":{"gitId":"hengyiqun"},"content":"        return this.tasks.size();"},{"lineNumber":84,"author":{"gitId":"hengyiqun"},"content":"    }"},{"lineNumber":85,"author":{"gitId":"hengyiqun"},"content":""},{"lineNumber":86,"author":{"gitId":"hengyiqun"},"content":"    /**"},{"lineNumber":87,"author":{"gitId":"hengyiqun"},"content":"     * Checks if the task to be added already exists in the task list"},{"lineNumber":88,"author":{"gitId":"hengyiqun"},"content":"     *"},{"lineNumber":89,"author":{"gitId":"hengyiqun"},"content":"     * @param taskDescription Description of the task to be added into the task list."},{"lineNumber":90,"author":{"gitId":"hengyiqun"},"content":"     * @throws DuplicateException If the task to be added already exists in the task list."},{"lineNumber":91,"author":{"gitId":"hengyiqun"},"content":"     */"},{"lineNumber":92,"author":{"gitId":"hengyiqun"},"content":"    public void hasDuplicate(String taskDescription) throws DuplicateException {"},{"lineNumber":93,"author":{"gitId":"hengyiqun"},"content":"        for (Task t: this.tasks) {"},{"lineNumber":94,"author":{"gitId":"hengyiqun"},"content":"            if (t.getDescription().equals(taskDescription)) {"},{"lineNumber":95,"author":{"gitId":"hengyiqun"},"content":"                throw new DuplicateException(\"This task has already been recorded!\\n\""},{"lineNumber":96,"author":{"gitId":"hengyiqun"},"content":"                        + \"Please enter another task!\");"},{"lineNumber":97,"author":{"gitId":"hengyiqun"},"content":"            }"},{"lineNumber":98,"author":{"gitId":"hengyiqun"},"content":"        }"},{"lineNumber":99,"author":{"gitId":"hengyiqun"},"content":"    }"},{"lineNumber":100,"author":{"gitId":"hengyiqun"},"content":""},{"lineNumber":101,"author":{"gitId":"hengyiqun"},"content":"    /**"},{"lineNumber":102,"author":{"gitId":"hengyiqun"},"content":"     * Returns a well-formatted String representation of the tasks in the task list."},{"lineNumber":103,"author":{"gitId":"hengyiqun"},"content":"     *"},{"lineNumber":104,"author":{"gitId":"hengyiqun"},"content":"     * @return A String representation of the tasks in the task list."},{"lineNumber":105,"author":{"gitId":"hengyiqun"},"content":"     */"},{"lineNumber":106,"author":{"gitId":"hengyiqun"},"content":"    @Override"},{"lineNumber":107,"author":{"gitId":"hengyiqun"},"content":"    public String toString() {"},{"lineNumber":108,"author":{"gitId":"hengyiqun"},"content":"        String res \u003d \"Here are the tasks in your list:\\n\";"},{"lineNumber":109,"author":{"gitId":"hengyiqun"},"content":"        int count \u003d 1;"},{"lineNumber":110,"author":{"gitId":"hengyiqun"},"content":"        for (Task t : this.tasks) {"},{"lineNumber":111,"author":{"gitId":"hengyiqun"},"content":"            res +\u003d \"     \" + count + \".\" + t;"},{"lineNumber":112,"author":{"gitId":"hengyiqun"},"content":"            count++;"},{"lineNumber":113,"author":{"gitId":"hengyiqun"},"content":"        }"},{"lineNumber":114,"author":{"gitId":"hengyiqun"},"content":"        return res;"},{"lineNumber":115,"author":{"gitId":"hengyiqun"},"content":"    }"},{"lineNumber":116,"author":{"gitId":"hengyiqun"},"content":"}"}],"authorContributionMap":{"hengyiqun":116}},{"path":"src/main/java/duke/tasks/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"hengyiqun"},"content":"package duke.tasks;"},{"lineNumber":2,"author":{"gitId":"hengyiqun"},"content":""},{"lineNumber":3,"author":{"gitId":"hengyiqun"},"content":"/**"},{"lineNumber":4,"author":{"gitId":"hengyiqun"},"content":" * Todo is a task that can be done anytime. As such, it does not have a due date."},{"lineNumber":5,"author":{"gitId":"hengyiqun"},"content":" */"},{"lineNumber":6,"author":{"gitId":"hengyiqun"},"content":"public class Todo extends Task {"},{"lineNumber":7,"author":{"gitId":"hengyiqun"},"content":""},{"lineNumber":8,"author":{"gitId":"hengyiqun"},"content":"    /**"},{"lineNumber":9,"author":{"gitId":"hengyiqun"},"content":"     * Initialises a todo with its description. The todo is not completed yet."},{"lineNumber":10,"author":{"gitId":"hengyiqun"},"content":"     *"},{"lineNumber":11,"author":{"gitId":"hengyiqun"},"content":"     * @param description A String description of the todo."},{"lineNumber":12,"author":{"gitId":"hengyiqun"},"content":"     */"},{"lineNumber":13,"author":{"gitId":"hengyiqun"},"content":"    public Todo(String description) {"},{"lineNumber":14,"author":{"gitId":"hengyiqun"},"content":"        super(description);"},{"lineNumber":15,"author":{"gitId":"hengyiqun"},"content":"    }"},{"lineNumber":16,"author":{"gitId":"hengyiqun"},"content":""},{"lineNumber":17,"author":{"gitId":"hengyiqun"},"content":"    /**"},{"lineNumber":18,"author":{"gitId":"hengyiqun"},"content":"     * Initialises a todo with its description, and its specified completion status."},{"lineNumber":19,"author":{"gitId":"hengyiqun"},"content":"     *"},{"lineNumber":20,"author":{"gitId":"hengyiqun"},"content":"     * @param description A String description of the todo."},{"lineNumber":21,"author":{"gitId":"hengyiqun"},"content":"     * @param isDone A boolean variable specifying if the todo is already completed."},{"lineNumber":22,"author":{"gitId":"hengyiqun"},"content":"     */"},{"lineNumber":23,"author":{"gitId":"hengyiqun"},"content":"    public Todo(String description, boolean isDone) {"},{"lineNumber":24,"author":{"gitId":"hengyiqun"},"content":"        super(description, isDone);"},{"lineNumber":25,"author":{"gitId":"hengyiqun"},"content":"    }"},{"lineNumber":26,"author":{"gitId":"hengyiqun"},"content":""},{"lineNumber":27,"author":{"gitId":"hengyiqun"},"content":"    /**"},{"lineNumber":28,"author":{"gitId":"hengyiqun"},"content":"     * Marks a todo as completed."},{"lineNumber":29,"author":{"gitId":"hengyiqun"},"content":"     *"},{"lineNumber":30,"author":{"gitId":"hengyiqun"},"content":"     * @return A completed todo with the same description."},{"lineNumber":31,"author":{"gitId":"hengyiqun"},"content":"     */"},{"lineNumber":32,"author":{"gitId":"hengyiqun"},"content":"    public Todo markAsDone() {"},{"lineNumber":33,"author":{"gitId":"hengyiqun"},"content":"        return new Todo(this.description, true);"},{"lineNumber":34,"author":{"gitId":"hengyiqun"},"content":"    }"},{"lineNumber":35,"author":{"gitId":"hengyiqun"},"content":""},{"lineNumber":36,"author":{"gitId":"hengyiqun"},"content":"    /**"},{"lineNumber":37,"author":{"gitId":"hengyiqun"},"content":"     * Returns a String representation of the todo."},{"lineNumber":38,"author":{"gitId":"hengyiqun"},"content":"     *"},{"lineNumber":39,"author":{"gitId":"hengyiqun"},"content":"     * @return A String representation of the todo."},{"lineNumber":40,"author":{"gitId":"hengyiqun"},"content":"     */"},{"lineNumber":41,"author":{"gitId":"hengyiqun"},"content":"    @Override"},{"lineNumber":42,"author":{"gitId":"hengyiqun"},"content":"    public String toString() {"},{"lineNumber":43,"author":{"gitId":"hengyiqun"},"content":"        return \"[T]\" + super.toString();"},{"lineNumber":44,"author":{"gitId":"hengyiqun"},"content":"    }"},{"lineNumber":45,"author":{"gitId":"hengyiqun"},"content":"}"}],"authorContributionMap":{"hengyiqun":45}},{"path":"src/main/java/duke/ui/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"hengyiqun"},"content":"package duke.ui;"},{"lineNumber":2,"author":{"gitId":"hengyiqun"},"content":""},{"lineNumber":3,"author":{"gitId":"hengyiqun"},"content":"/**"},{"lineNumber":4,"author":{"gitId":"hengyiqun"},"content":" * Ui allows interactions with the user and formats Duke\u0027s responses to the user."},{"lineNumber":5,"author":{"gitId":"hengyiqun"},"content":" */"},{"lineNumber":6,"author":{"gitId":"hengyiqun"},"content":"public class Ui {"},{"lineNumber":7,"author":{"gitId":"hengyiqun"},"content":"    private boolean exit;"},{"lineNumber":8,"author":{"gitId":"hengyiqun"},"content":""},{"lineNumber":9,"author":{"gitId":"hengyiqun"},"content":"    /**"},{"lineNumber":10,"author":{"gitId":"hengyiqun"},"content":"     * Constructs a Ui."},{"lineNumber":11,"author":{"gitId":"hengyiqun"},"content":"     */"},{"lineNumber":12,"author":{"gitId":"hengyiqun"},"content":"    public Ui() {"},{"lineNumber":13,"author":{"gitId":"hengyiqun"},"content":"        this.exit \u003d false;"},{"lineNumber":14,"author":{"gitId":"hengyiqun"},"content":"    }"},{"lineNumber":15,"author":{"gitId":"hengyiqun"},"content":""},{"lineNumber":16,"author":{"gitId":"hengyiqun"},"content":"    /**"},{"lineNumber":17,"author":{"gitId":"hengyiqun"},"content":"     * Greets the user."},{"lineNumber":18,"author":{"gitId":"hengyiqun"},"content":"     *"},{"lineNumber":19,"author":{"gitId":"hengyiqun"},"content":"     * @return A String representing greetings to the user."},{"lineNumber":20,"author":{"gitId":"hengyiqun"},"content":"     */"},{"lineNumber":21,"author":{"gitId":"hengyiqun"},"content":"    public String greet() {"},{"lineNumber":22,"author":{"gitId":"hengyiqun"},"content":"        String logo \u003d \" ____         _        \\n\""},{"lineNumber":23,"author":{"gitId":"hengyiqun"},"content":"                    + \"|  _ \\\\ _   _| |  _____ \\n\""},{"lineNumber":24,"author":{"gitId":"hengyiqun"},"content":"                    + \"| | | | | | | |/ / _ \\\\\\n\""},{"lineNumber":25,"author":{"gitId":"hengyiqun"},"content":"                    + \"| |_| | |_| |   \u003c  __/\\n\""},{"lineNumber":26,"author":{"gitId":"hengyiqun"},"content":"                    + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\";"},{"lineNumber":27,"author":{"gitId":"hengyiqun"},"content":"        String greeting \u003d \"Hello from\\n\" + logo;"},{"lineNumber":28,"author":{"gitId":"hengyiqun"},"content":"        greeting +\u003d \"_____________________________________\\n\";"},{"lineNumber":29,"author":{"gitId":"hengyiqun"},"content":"        greeting +\u003d \"Hello! I\u0027m Duke\\n\";"},{"lineNumber":30,"author":{"gitId":"hengyiqun"},"content":"        greeting +\u003d \"What can I do for you?\\n\";"},{"lineNumber":31,"author":{"gitId":"hengyiqun"},"content":"        greeting +\u003d \"______________________________________\\n\";"},{"lineNumber":32,"author":{"gitId":"hengyiqun"},"content":"        return greeting;"},{"lineNumber":33,"author":{"gitId":"hengyiqun"},"content":"    }"},{"lineNumber":34,"author":{"gitId":"hengyiqun"},"content":""},{"lineNumber":35,"author":{"gitId":"hengyiqun"},"content":"    /**"},{"lineNumber":36,"author":{"gitId":"hengyiqun"},"content":"     * Formats a given string (from either the user or from Duke)"},{"lineNumber":37,"author":{"gitId":"hengyiqun"},"content":"     *"},{"lineNumber":38,"author":{"gitId":"hengyiqun"},"content":"     * @param response A String to be formatted."},{"lineNumber":39,"author":{"gitId":"hengyiqun"},"content":"     * @return Formatted input String."},{"lineNumber":40,"author":{"gitId":"hengyiqun"},"content":"     */"},{"lineNumber":41,"author":{"gitId":"hengyiqun"},"content":"    public String format(String response) {"},{"lineNumber":42,"author":{"gitId":"hengyiqun"},"content":"        String result \u003d \"_______________________________________________\\n\";"},{"lineNumber":43,"author":{"gitId":"hengyiqun"},"content":"        result +\u003d response + \"\\n\";"},{"lineNumber":44,"author":{"gitId":"hengyiqun"},"content":"        result +\u003d \"_______________________________________________\\n\";"},{"lineNumber":45,"author":{"gitId":"hengyiqun"},"content":"        return result;"},{"lineNumber":46,"author":{"gitId":"hengyiqun"},"content":"    }"},{"lineNumber":47,"author":{"gitId":"hengyiqun"},"content":"}"}],"authorContributionMap":{"hengyiqun":47}},{"path":"src/main/resources/view/DialogBox.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"hengyiqun"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"},{"lineNumber":2,"author":{"gitId":"hengyiqun"},"content":""},{"lineNumber":3,"author":{"gitId":"hengyiqun"},"content":"\u003c?import javafx.geometry.Insets?\u003e"},{"lineNumber":4,"author":{"gitId":"hengyiqun"},"content":"\u003c?import javafx.scene.control.Label?\u003e"},{"lineNumber":5,"author":{"gitId":"hengyiqun"},"content":"\u003c?import javafx.scene.image.ImageView?\u003e"},{"lineNumber":6,"author":{"gitId":"hengyiqun"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e"},{"lineNumber":7,"author":{"gitId":"hengyiqun"},"content":""},{"lineNumber":8,"author":{"gitId":"hengyiqun"},"content":"\u003cfx:root alignment\u003d\"TOP_RIGHT\" maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\" prefWidth\u003d\"400.0\" type\u003d\"javafx.scene.layout.HBox\" xmlns\u003d\"http://javafx.com/javafx/15.0.1\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e"},{"lineNumber":9,"author":{"gitId":"hengyiqun"},"content":"    \u003cchildren\u003e"},{"lineNumber":10,"author":{"gitId":"hengyiqun"},"content":"        \u003cLabel fx:id\u003d\"dialog\" text\u003d\"Label\" wrapText\u003d\"true\" /\u003e"},{"lineNumber":11,"author":{"gitId":"hengyiqun"},"content":"        \u003cImageView fx:id\u003d\"displayPicture\" fitHeight\u003d\"99.0\" fitWidth\u003d\"99.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\" /\u003e"},{"lineNumber":12,"author":{"gitId":"hengyiqun"},"content":"    \u003c/children\u003e"},{"lineNumber":13,"author":{"gitId":"hengyiqun"},"content":"    \u003cpadding\u003e"},{"lineNumber":14,"author":{"gitId":"hengyiqun"},"content":"        \u003cInsets bottom\u003d\"15.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"15.0\" /\u003e"},{"lineNumber":15,"author":{"gitId":"hengyiqun"},"content":"    \u003c/padding\u003e"},{"lineNumber":16,"author":{"gitId":"hengyiqun"},"content":"\u003c/fx:root\u003e"}],"authorContributionMap":{"hengyiqun":16}},{"path":"src/main/resources/view/MainWindow.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"hengyiqun"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"},{"lineNumber":2,"author":{"gitId":"hengyiqun"},"content":""},{"lineNumber":3,"author":{"gitId":"hengyiqun"},"content":"\u003c?import javafx.scene.control.Button?\u003e"},{"lineNumber":4,"author":{"gitId":"hengyiqun"},"content":"\u003c?import javafx.scene.control.ScrollPane?\u003e"},{"lineNumber":5,"author":{"gitId":"hengyiqun"},"content":"\u003c?import javafx.scene.control.TextField?\u003e"},{"lineNumber":6,"author":{"gitId":"hengyiqun"},"content":"\u003c?import javafx.scene.layout.AnchorPane?\u003e"},{"lineNumber":7,"author":{"gitId":"hengyiqun"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e"},{"lineNumber":8,"author":{"gitId":"hengyiqun"},"content":""},{"lineNumber":9,"author":{"gitId":"hengyiqun"},"content":"\u003cAnchorPane maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefHeight\u003d\"600.0\" prefWidth\u003d\"400.0\" xmlns\u003d\"http://javafx.com/javafx/8.0.171\" xmlns:fx\u003d\"http://javafx.com/fxml/1\" fx:controller\u003d\"duke.javafx.MainWindow\"\u003e"},{"lineNumber":10,"author":{"gitId":"hengyiqun"},"content":"    \u003cchildren\u003e"},{"lineNumber":11,"author":{"gitId":"hengyiqun"},"content":"        \u003cTextField fx:id\u003d\"userInput\" layoutY\u003d\"558.0\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"324.0\" AnchorPane.bottomAnchor\u003d\"1.0\" /\u003e"},{"lineNumber":12,"author":{"gitId":"hengyiqun"},"content":"        \u003cButton fx:id\u003d\"sendButton\" layoutX\u003d\"324.0\" layoutY\u003d\"558.0\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"76.0\" text\u003d\"Send\" /\u003e"},{"lineNumber":13,"author":{"gitId":"hengyiqun"},"content":"        \u003cScrollPane fx:id\u003d\"scrollPane\" hbarPolicy\u003d\"NEVER\" hvalue\u003d\"1.0\" prefHeight\u003d\"557.0\" prefWidth\u003d\"400.0\" vvalue\u003d\"1.0\"\u003e"},{"lineNumber":14,"author":{"gitId":"hengyiqun"},"content":"            \u003ccontent\u003e"},{"lineNumber":15,"author":{"gitId":"hengyiqun"},"content":"                \u003cVBox fx:id\u003d\"dialogContainer\" prefHeight\u003d\"552.0\" prefWidth\u003d\"388.0\" /\u003e"},{"lineNumber":16,"author":{"gitId":"hengyiqun"},"content":"            \u003c/content\u003e"},{"lineNumber":17,"author":{"gitId":"hengyiqun"},"content":"        \u003c/ScrollPane\u003e"},{"lineNumber":18,"author":{"gitId":"hengyiqun"},"content":"    \u003c/children\u003e"},{"lineNumber":19,"author":{"gitId":"hengyiqun"},"content":"\u003c/AnchorPane\u003e"}],"authorContributionMap":{"hengyiqun":19}},{"path":"src/test/java/duke/tasks/TaskListTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"hengyiqun"},"content":"package duke.tasks;"},{"lineNumber":2,"author":{"gitId":"hengyiqun"},"content":""},{"lineNumber":3,"author":{"gitId":"hengyiqun"},"content":"import org.junit.jupiter.api.Test;"},{"lineNumber":4,"author":{"gitId":"hengyiqun"},"content":""},{"lineNumber":5,"author":{"gitId":"hengyiqun"},"content":"import java.util.ArrayList;"},{"lineNumber":6,"author":{"gitId":"hengyiqun"},"content":""},{"lineNumber":7,"author":{"gitId":"hengyiqun"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;"},{"lineNumber":8,"author":{"gitId":"hengyiqun"},"content":"import static org.junit.jupiter.api.Assertions.assertNotEquals;"},{"lineNumber":9,"author":{"gitId":"hengyiqun"},"content":""},{"lineNumber":10,"author":{"gitId":"hengyiqun"},"content":"public class TaskListTest {"},{"lineNumber":11,"author":{"gitId":"hengyiqun"},"content":"    @Test"},{"lineNumber":12,"author":{"gitId":"hengyiqun"},"content":"    public void addTest() {"},{"lineNumber":13,"author":{"gitId":"hengyiqun"},"content":"        Task t1 \u003d new Task(\"random1\");"},{"lineNumber":14,"author":{"gitId":"hengyiqun"},"content":"        Task t2 \u003d new Task(\"random2\");"},{"lineNumber":15,"author":{"gitId":"hengyiqun"},"content":"        Task t3 \u003d new Task(\"random3\");"},{"lineNumber":16,"author":{"gitId":"hengyiqun"},"content":"        ArrayList\u003cTask\u003e tasks \u003d new ArrayList\u003cTask\u003e();"},{"lineNumber":17,"author":{"gitId":"hengyiqun"},"content":"        tasks.add(t1);"},{"lineNumber":18,"author":{"gitId":"hengyiqun"},"content":"        tasks.add(t2);"},{"lineNumber":19,"author":{"gitId":"hengyiqun"},"content":"        tasks.add(t3);"},{"lineNumber":20,"author":{"gitId":"hengyiqun"},"content":"        TaskList taskList \u003d new TaskList(tasks);"},{"lineNumber":21,"author":{"gitId":"hengyiqun"},"content":"        assertEquals(taskList.get(0), t1);"},{"lineNumber":22,"author":{"gitId":"hengyiqun"},"content":"        assertNotEquals(taskList.get(0), t3);"},{"lineNumber":23,"author":{"gitId":"hengyiqun"},"content":"    }"},{"lineNumber":24,"author":{"gitId":"hengyiqun"},"content":"}"}],"authorContributionMap":{"hengyiqun":24}},{"path":"src/test/java/duke/tasks/TaskTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"hengyiqun"},"content":"package duke.tasks;"},{"lineNumber":2,"author":{"gitId":"hengyiqun"},"content":""},{"lineNumber":3,"author":{"gitId":"hengyiqun"},"content":"import org.junit.jupiter.api.Test;"},{"lineNumber":4,"author":{"gitId":"hengyiqun"},"content":""},{"lineNumber":5,"author":{"gitId":"hengyiqun"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;"},{"lineNumber":6,"author":{"gitId":"hengyiqun"},"content":""},{"lineNumber":7,"author":{"gitId":"hengyiqun"},"content":"public class TaskTest {"},{"lineNumber":8,"author":{"gitId":"hengyiqun"},"content":"    @Test"},{"lineNumber":9,"author":{"gitId":"hengyiqun"},"content":"    public void initialisationTest() {"},{"lineNumber":10,"author":{"gitId":"hengyiqun"},"content":"        Task t \u003d new Task(\"random\");"},{"lineNumber":11,"author":{"gitId":"hengyiqun"},"content":"        assertEquals(t.isCompleted(), false);"},{"lineNumber":12,"author":{"gitId":"hengyiqun"},"content":"    }"},{"lineNumber":13,"author":{"gitId":"hengyiqun"},"content":""},{"lineNumber":14,"author":{"gitId":"hengyiqun"},"content":"    @Test"},{"lineNumber":15,"author":{"gitId":"hengyiqun"},"content":"    public void isDoneTest() {"},{"lineNumber":16,"author":{"gitId":"hengyiqun"},"content":"        Task t \u003d new Task(\"random\");"},{"lineNumber":17,"author":{"gitId":"hengyiqun"},"content":"        t \u003d t.markAsDone();"},{"lineNumber":18,"author":{"gitId":"hengyiqun"},"content":"        assertEquals(t.isCompleted(), true);"},{"lineNumber":19,"author":{"gitId":"hengyiqun"},"content":"    }"},{"lineNumber":20,"author":{"gitId":"hengyiqun"},"content":"}"}],"authorContributionMap":{"hengyiqun":20}},{"path":"src/test/java/duke/tasks/TodoTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"hengyiqun"},"content":"package duke.tasks;"},{"lineNumber":2,"author":{"gitId":"hengyiqun"},"content":""},{"lineNumber":3,"author":{"gitId":"hengyiqun"},"content":"import org.junit.jupiter.api.Test;"},{"lineNumber":4,"author":{"gitId":"hengyiqun"},"content":""},{"lineNumber":5,"author":{"gitId":"hengyiqun"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;"},{"lineNumber":6,"author":{"gitId":"hengyiqun"},"content":""},{"lineNumber":7,"author":{"gitId":"hengyiqun"},"content":"public class TodoTest {"},{"lineNumber":8,"author":{"gitId":"hengyiqun"},"content":"    @Test"},{"lineNumber":9,"author":{"gitId":"hengyiqun"},"content":"    public void initialisationTest() {"},{"lineNumber":10,"author":{"gitId":"hengyiqun"},"content":"        Todo t \u003d new Todo(\"random\");"},{"lineNumber":11,"author":{"gitId":"hengyiqun"},"content":"        assertEquals(t.isCompleted(), false);"},{"lineNumber":12,"author":{"gitId":"hengyiqun"},"content":"    }"},{"lineNumber":13,"author":{"gitId":"hengyiqun"},"content":""},{"lineNumber":14,"author":{"gitId":"hengyiqun"},"content":"    @Test"},{"lineNumber":15,"author":{"gitId":"hengyiqun"},"content":"    public void isDoneTest() {"},{"lineNumber":16,"author":{"gitId":"hengyiqun"},"content":"        Todo t \u003d new Todo(\"random\");"},{"lineNumber":17,"author":{"gitId":"hengyiqun"},"content":"        t \u003d t.markAsDone();"},{"lineNumber":18,"author":{"gitId":"hengyiqun"},"content":"        assertEquals(t.isCompleted(), true);"},{"lineNumber":19,"author":{"gitId":"hengyiqun"},"content":"    }"},{"lineNumber":20,"author":{"gitId":"hengyiqun"},"content":"}"}],"authorContributionMap":{"hengyiqun":20}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"hengyiqun"},"content":"todo borrow book"},{"lineNumber":2,"author":{"gitId":"hengyiqun"},"content":"list"},{"lineNumber":3,"author":{"gitId":"hengyiqun"},"content":"deadline return book /by Sunday"},{"lineNumber":4,"author":{"gitId":"hengyiqun"},"content":"event project meeting /at Mon 2-4pm"},{"lineNumber":5,"author":{"gitId":"hengyiqun"},"content":"deadline do homework /by no idea :-p"},{"lineNumber":6,"author":{"gitId":"hengyiqun"},"content":"done 1"},{"lineNumber":7,"author":{"gitId":"hengyiqun"},"content":"done 2"},{"lineNumber":8,"author":{"gitId":"hengyiqun"},"content":"list"},{"lineNumber":9,"author":{"gitId":"hengyiqun"},"content":"done 4"},{"lineNumber":10,"author":{"gitId":"hengyiqun"},"content":"list"},{"lineNumber":11,"author":{"gitId":"hengyiqun"},"content":"bye"}],"authorContributionMap":{"hengyiqun":11}}]
