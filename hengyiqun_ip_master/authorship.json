[{"path":"data/duke.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"hengyiqun"},"content":"E | 1 | play | 2021-05-17"},{"lineNumber":2,"author":{"gitId":"hengyiqun"},"content":"T | 0 | read books"},{"lineNumber":3,"author":{"gitId":"hengyiqun"},"content":"D | 0 | project submission | 2021-03-09"},{"lineNumber":4,"author":{"gitId":"hengyiqun"},"content":"E | 1 | project meeting | 2021-02-01"}],"authorContributionMap":{"hengyiqun":4}},{"path":"src/main/java/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"hengyiqun"},"content":"import java.time.LocalDate;"},{"lineNumber":2,"author":{"gitId":"hengyiqun"},"content":"import java.time.format.DateTimeFormatter;"},{"lineNumber":3,"author":{"gitId":"hengyiqun"},"content":""},{"lineNumber":4,"author":{"gitId":"hengyiqun"},"content":"/**"},{"lineNumber":5,"author":{"gitId":"hengyiqun"},"content":" * Deadline is a Task object that is define by a due date"},{"lineNumber":6,"author":{"gitId":"hengyiqun"},"content":" */"},{"lineNumber":7,"author":{"gitId":"hengyiqun"},"content":"public class Deadline extends Task implements DueDate {"},{"lineNumber":8,"author":{"gitId":"hengyiqun"},"content":"    protected LocalDate time;"},{"lineNumber":9,"author":{"gitId":"hengyiqun"},"content":""},{"lineNumber":10,"author":{"gitId":"hengyiqun"},"content":"    /**"},{"lineNumber":11,"author":{"gitId":"hengyiqun"},"content":"     * Constructs a deadline that has yet to be completed"},{"lineNumber":12,"author":{"gitId":"hengyiqun"},"content":"     * @param description description of the deadline"},{"lineNumber":13,"author":{"gitId":"hengyiqun"},"content":"     * @param time due date in yyyy-MM-dd format (e.g. 2021-03-12)"},{"lineNumber":14,"author":{"gitId":"hengyiqun"},"content":"     */"},{"lineNumber":15,"author":{"gitId":"hengyiqun"},"content":"    public Deadline(String description, LocalDate time) {"},{"lineNumber":16,"author":{"gitId":"hengyiqun"},"content":"        super(description);"},{"lineNumber":17,"author":{"gitId":"hengyiqun"},"content":"        this.time \u003d time;"},{"lineNumber":18,"author":{"gitId":"hengyiqun"},"content":"    }"},{"lineNumber":19,"author":{"gitId":"hengyiqun"},"content":""},{"lineNumber":20,"author":{"gitId":"hengyiqun"},"content":"    /**"},{"lineNumber":21,"author":{"gitId":"hengyiqun"},"content":"     * Constructs a deadline"},{"lineNumber":22,"author":{"gitId":"hengyiqun"},"content":"     * @param description description of the task"},{"lineNumber":23,"author":{"gitId":"hengyiqun"},"content":"     * @param isDone whether the task is completed (true indicated that the task is completed,"},{"lineNumber":24,"author":{"gitId":"hengyiqun"},"content":"     *              while false indicates that the task is incomplete"},{"lineNumber":25,"author":{"gitId":"hengyiqun"},"content":"     * @param time due date in yyyy-MM-dd format (e.g. 2021-03-12)"},{"lineNumber":26,"author":{"gitId":"hengyiqun"},"content":"     */"},{"lineNumber":27,"author":{"gitId":"hengyiqun"},"content":"    public Deadline(String description, boolean isDone, LocalDate time) {"},{"lineNumber":28,"author":{"gitId":"hengyiqun"},"content":"        super(description, isDone);"},{"lineNumber":29,"author":{"gitId":"hengyiqun"},"content":"        this.time \u003d time;"},{"lineNumber":30,"author":{"gitId":"hengyiqun"},"content":"    }"},{"lineNumber":31,"author":{"gitId":"hengyiqun"},"content":""},{"lineNumber":32,"author":{"gitId":"hengyiqun"},"content":"    /**"},{"lineNumber":33,"author":{"gitId":"hengyiqun"},"content":"     * Marks a deadline as completed"},{"lineNumber":34,"author":{"gitId":"hengyiqun"},"content":"     * @return a task that is completed"},{"lineNumber":35,"author":{"gitId":"hengyiqun"},"content":"     */"},{"lineNumber":36,"author":{"gitId":"hengyiqun"},"content":"    public Deadline markAsDone() {"},{"lineNumber":37,"author":{"gitId":"hengyiqun"},"content":"        return new Deadline(this.description, true, this.time);"},{"lineNumber":38,"author":{"gitId":"hengyiqun"},"content":"    }"},{"lineNumber":39,"author":{"gitId":"hengyiqun"},"content":""},{"lineNumber":40,"author":{"gitId":"hengyiqun"},"content":"    /**"},{"lineNumber":41,"author":{"gitId":"hengyiqun"},"content":"     * Method to know if the deadline has been completed or not"},{"lineNumber":42,"author":{"gitId":"hengyiqun"},"content":"     * @return true if the task is completed and false if it is not"},{"lineNumber":43,"author":{"gitId":"hengyiqun"},"content":"     */"},{"lineNumber":44,"author":{"gitId":"hengyiqun"},"content":"    @Override"},{"lineNumber":45,"author":{"gitId":"hengyiqun"},"content":"    public String getDueDate() {"},{"lineNumber":46,"author":{"gitId":"hengyiqun"},"content":"        return this.time.toString();"},{"lineNumber":47,"author":{"gitId":"hengyiqun"},"content":"    }"},{"lineNumber":48,"author":{"gitId":"hengyiqun"},"content":""},{"lineNumber":49,"author":{"gitId":"hengyiqun"},"content":"    /**"},{"lineNumber":50,"author":{"gitId":"hengyiqun"},"content":"     * Returns information on the deadline"},{"lineNumber":51,"author":{"gitId":"hengyiqun"},"content":"     * @return A String that describes the deadline"},{"lineNumber":52,"author":{"gitId":"hengyiqun"},"content":"     */"},{"lineNumber":53,"author":{"gitId":"hengyiqun"},"content":"    @Override"},{"lineNumber":54,"author":{"gitId":"hengyiqun"},"content":"    public String toString() {"},{"lineNumber":55,"author":{"gitId":"hengyiqun"},"content":"        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"MMM dd yyyy\");"},{"lineNumber":56,"author":{"gitId":"hengyiqun"},"content":"        return \"[D]\" + super.toString() + \" (by: \" + time.format(formatter) + \")\";"},{"lineNumber":57,"author":{"gitId":"hengyiqun"},"content":"    }"},{"lineNumber":58,"author":{"gitId":"hengyiqun"},"content":"}"}],"authorContributionMap":{"hengyiqun":58}},{"path":"src/main/java/DueDate.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"hengyiqun"},"content":"/**"},{"lineNumber":2,"author":{"gitId":"hengyiqun"},"content":" * DueDate is an interface for inheritance by tasks with a due date"},{"lineNumber":3,"author":{"gitId":"hengyiqun"},"content":" */"},{"lineNumber":4,"author":{"gitId":"hengyiqun"},"content":"public interface DueDate {"},{"lineNumber":5,"author":{"gitId":"hengyiqun"},"content":"    public String getDueDate();"},{"lineNumber":6,"author":{"gitId":"hengyiqun"},"content":"}"}],"authorContributionMap":{"hengyiqun":6}},{"path":"src/main/java/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"hengyiqun"},"content":"import java.io.IOException;"},{"lineNumber":2,"author":{"gitId":"hengyiqun"},"content":"import java.io.FileNotFoundException;"},{"lineNumber":3,"author":{"gitId":"hengyiqun"},"content":"import java.io.FileWriter;"},{"lineNumber":4,"author":{"gitId":"hengyiqun"},"content":""},{"lineNumber":5,"author":{"gitId":"hengyiqun"},"content":"/**"},{"lineNumber":6,"author":{"gitId":"hengyiqun"},"content":" * Duke allows the user to maintain a list of tasks"},{"lineNumber":7,"author":{"gitId":"hengyiqun"},"content":" */"},{"lineNumber":8,"author":{"gitId":"-"},"content":"public class Duke {"},{"lineNumber":9,"author":{"gitId":"hengyiqun"},"content":""},{"lineNumber":10,"author":{"gitId":"hengyiqun"},"content":"    private Storage storage;"},{"lineNumber":11,"author":{"gitId":"hengyiqun"},"content":"    private TaskList tasks;"},{"lineNumber":12,"author":{"gitId":"hengyiqun"},"content":"    private Ui ui;"},{"lineNumber":13,"author":{"gitId":"hengyiqun"},"content":"    private String filePath \u003d \"\";"},{"lineNumber":14,"author":{"gitId":"hengyiqun"},"content":""},{"lineNumber":15,"author":{"gitId":"hengyiqun"},"content":"    public Duke(String filePath) {"},{"lineNumber":16,"author":{"gitId":"hengyiqun"},"content":"        this.ui \u003d new Ui();"},{"lineNumber":17,"author":{"gitId":"hengyiqun"},"content":"        this.ui.greet();"},{"lineNumber":18,"author":{"gitId":"hengyiqun"},"content":"        this.storage \u003d new Storage(filePath);"},{"lineNumber":19,"author":{"gitId":"hengyiqun"},"content":"        this.filePath \u003d filePath;"},{"lineNumber":20,"author":{"gitId":"hengyiqun"},"content":"        try {"},{"lineNumber":21,"author":{"gitId":"hengyiqun"},"content":"            tasks \u003d new TaskList(storage.load());"},{"lineNumber":22,"author":{"gitId":"hengyiqun"},"content":"        } catch (FileNotFoundException e) {"},{"lineNumber":23,"author":{"gitId":"hengyiqun"},"content":"            tasks \u003d new TaskList();"},{"lineNumber":24,"author":{"gitId":"hengyiqun"},"content":"        }"},{"lineNumber":25,"author":{"gitId":"hengyiqun"},"content":"    }"},{"lineNumber":26,"author":{"gitId":"hengyiqun"},"content":""},{"lineNumber":27,"author":{"gitId":"hengyiqun"},"content":"    public void run() {"},{"lineNumber":28,"author":{"gitId":"hengyiqun"},"content":"        while (!this.ui.shouldExit() \u0026\u0026 this.ui.hasNext()) {"},{"lineNumber":29,"author":{"gitId":"hengyiqun"},"content":"            this.tasks \u003d ui.process(this.tasks);"},{"lineNumber":30,"author":{"gitId":"hengyiqun"},"content":"            try {"},{"lineNumber":31,"author":{"gitId":"hengyiqun"},"content":"                FileWriter fw \u003d new FileWriter(this.filePath);"},{"lineNumber":32,"author":{"gitId":"hengyiqun"},"content":"                for (Task t : this.tasks.getList()) {"},{"lineNumber":33,"author":{"gitId":"hengyiqun"},"content":"                    String rmb \u003d \"\";"},{"lineNumber":34,"author":{"gitId":"hengyiqun"},"content":"                    if (t instanceof Event) {"},{"lineNumber":35,"author":{"gitId":"hengyiqun"},"content":"                        rmb +\u003d \"E\";"},{"lineNumber":36,"author":{"gitId":"hengyiqun"},"content":"                    } else if (t instanceof Deadline) {"},{"lineNumber":37,"author":{"gitId":"hengyiqun"},"content":"                        rmb +\u003d \"D\";"},{"lineNumber":38,"author":{"gitId":"hengyiqun"},"content":"                    } else if (t instanceof Todo) {"},{"lineNumber":39,"author":{"gitId":"hengyiqun"},"content":"                        rmb +\u003d \"T\";"},{"lineNumber":40,"author":{"gitId":"hengyiqun"},"content":"                    }"},{"lineNumber":41,"author":{"gitId":"hengyiqun"},"content":"                    rmb +\u003d \" | \";"},{"lineNumber":42,"author":{"gitId":"hengyiqun"},"content":"                    if (t.isCompleted()) {"},{"lineNumber":43,"author":{"gitId":"hengyiqun"},"content":"                        rmb +\u003d \"1\";"},{"lineNumber":44,"author":{"gitId":"hengyiqun"},"content":"                    } else {"},{"lineNumber":45,"author":{"gitId":"hengyiqun"},"content":"                        rmb +\u003d \"0\";"},{"lineNumber":46,"author":{"gitId":"hengyiqun"},"content":"                    }"},{"lineNumber":47,"author":{"gitId":"hengyiqun"},"content":"                    rmb +\u003d \" | \";"},{"lineNumber":48,"author":{"gitId":"hengyiqun"},"content":"                    rmb +\u003d t.getDescription();"},{"lineNumber":49,"author":{"gitId":"hengyiqun"},"content":"                    if (t instanceof DueDate) {"},{"lineNumber":50,"author":{"gitId":"hengyiqun"},"content":"                        rmb +\u003d \" | \";"},{"lineNumber":51,"author":{"gitId":"hengyiqun"},"content":"                        rmb +\u003d ((DueDate) t).getDueDate();"},{"lineNumber":52,"author":{"gitId":"hengyiqun"},"content":"                    }"},{"lineNumber":53,"author":{"gitId":"hengyiqun"},"content":"                    fw.write(rmb + \"\\n\");"},{"lineNumber":54,"author":{"gitId":"hengyiqun"},"content":"                }"},{"lineNumber":55,"author":{"gitId":"hengyiqun"},"content":"                fw.close();"},{"lineNumber":56,"author":{"gitId":"hengyiqun"},"content":"            } catch (IOException e) {"},{"lineNumber":57,"author":{"gitId":"hengyiqun"},"content":"            }"},{"lineNumber":58,"author":{"gitId":"hengyiqun"},"content":"        }"},{"lineNumber":59,"author":{"gitId":"hengyiqun"},"content":"    }"},{"lineNumber":60,"author":{"gitId":"hengyiqun"},"content":""},{"lineNumber":61,"author":{"gitId":"-"},"content":"    public static void main(String[] args) {"},{"lineNumber":62,"author":{"gitId":"hengyiqun"},"content":"        new Duke(\"data/duke.txt\").run();"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":64,"author":{"gitId":"hengyiqun"},"content":""},{"lineNumber":65,"author":{"gitId":"hengyiqun"},"content":"    /*public static void main(String[] args) {"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        String logo \u003d \" ____         _        \\n\""},{"lineNumber":67,"author":{"gitId":"-"},"content":"                    + \"|  _ \\\\ _   _| | _____ \\n\""},{"lineNumber":68,"author":{"gitId":"-"},"content":"                    + \"| | | | | | | |/ / _ \\\\\\n\""},{"lineNumber":69,"author":{"gitId":"-"},"content":"                    + \"| |_| | |_| |   \u003c  __/\\n\""},{"lineNumber":70,"author":{"gitId":"-"},"content":"                    + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\";"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        System.out.println(\"Hello from\\n\" + logo);"},{"lineNumber":72,"author":{"gitId":"hengyiqun"},"content":"        System.out.println(\"    ____________________________________________________________\");"},{"lineNumber":73,"author":{"gitId":"hengyiqun"},"content":"        System.out.println(\"     Hello! I\u0027m Duke\");"},{"lineNumber":74,"author":{"gitId":"hengyiqun"},"content":"        System.out.println(\"     What can I do for you?\");"},{"lineNumber":75,"author":{"gitId":"hengyiqun"},"content":"        System.out.println(\"    ____________________________________________________________\");"},{"lineNumber":76,"author":{"gitId":"hengyiqun"},"content":"        List\u003cTask\u003e store \u003d new ArrayList\u003c\u003e();"},{"lineNumber":77,"author":{"gitId":"hengyiqun"},"content":"        Scanner sc \u003d new Scanner(System.in);"},{"lineNumber":78,"author":{"gitId":"hengyiqun"},"content":"        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"yyyy-MM-dd\");"},{"lineNumber":79,"author":{"gitId":"hengyiqun"},"content":"        String filePath \u003d \"data/duke.txt\";"},{"lineNumber":80,"author":{"gitId":"hengyiqun"},"content":"        try {"},{"lineNumber":81,"author":{"gitId":"hengyiqun"},"content":"            File file \u003d new File(filePath);"},{"lineNumber":82,"author":{"gitId":"hengyiqun"},"content":"            Scanner fileScanner \u003d new Scanner(file);"},{"lineNumber":83,"author":{"gitId":"hengyiqun"},"content":"            while (fileScanner.hasNext()) {"},{"lineNumber":84,"author":{"gitId":"hengyiqun"},"content":"                String curRecTask \u003d fileScanner.nextLine();"},{"lineNumber":85,"author":{"gitId":"hengyiqun"},"content":"                String[] items \u003d curRecTask.split(\" \\\\| \");"},{"lineNumber":86,"author":{"gitId":"hengyiqun"},"content":"                boolean done \u003d (items[1].equals(\"1\") ? true : false);"},{"lineNumber":87,"author":{"gitId":"hengyiqun"},"content":"                Task temp \u003d new Todo(items[2]);"},{"lineNumber":88,"author":{"gitId":"hengyiqun"},"content":"                if (items[0].equals(\"E\")) {"},{"lineNumber":89,"author":{"gitId":"hengyiqun"},"content":"                    LocalDate date \u003d LocalDate.parse(items[3], formatter);"},{"lineNumber":90,"author":{"gitId":"hengyiqun"},"content":"                    temp \u003d new Event(items[2], date);"},{"lineNumber":91,"author":{"gitId":"hengyiqun"},"content":"                } else if (items[0].equals(\"D\")) {"},{"lineNumber":92,"author":{"gitId":"hengyiqun"},"content":"                    LocalDate date \u003d LocalDate.parse(items[3], formatter);"},{"lineNumber":93,"author":{"gitId":"hengyiqun"},"content":"                    temp \u003d new Deadline(items[2], date);"},{"lineNumber":94,"author":{"gitId":"hengyiqun"},"content":"                }"},{"lineNumber":95,"author":{"gitId":"hengyiqun"},"content":"                if (done) {"},{"lineNumber":96,"author":{"gitId":"hengyiqun"},"content":"                    temp \u003d temp.markAsDone();"},{"lineNumber":97,"author":{"gitId":"hengyiqun"},"content":"                }"},{"lineNumber":98,"author":{"gitId":"hengyiqun"},"content":"                store.add(temp);"},{"lineNumber":99,"author":{"gitId":"hengyiqun"},"content":"            }"},{"lineNumber":100,"author":{"gitId":"hengyiqun"},"content":"        } catch (FileNotFoundException e) {"},{"lineNumber":101,"author":{"gitId":"hengyiqun"},"content":"            System.out.println(\"     There is no existing task list. Please create one.\");"},{"lineNumber":102,"author":{"gitId":"hengyiqun"},"content":"        }"},{"lineNumber":103,"author":{"gitId":"hengyiqun"},"content":""},{"lineNumber":104,"author":{"gitId":"hengyiqun"},"content":"        while (sc.hasNextLine()) {"},{"lineNumber":105,"author":{"gitId":"hengyiqun"},"content":"            try {"},{"lineNumber":106,"author":{"gitId":"hengyiqun"},"content":"                String input \u003d sc.nextLine();"},{"lineNumber":107,"author":{"gitId":"hengyiqun"},"content":"                String[] parts \u003d input.split(\" \");"},{"lineNumber":108,"author":{"gitId":"hengyiqun"},"content":"                System.out.println(\"    ____________________________________________________________\");"},{"lineNumber":109,"author":{"gitId":"hengyiqun"},"content":"                if (parts[0].equals(\"bye\")) {"},{"lineNumber":110,"author":{"gitId":"hengyiqun"},"content":"                    System.out.println(\"     Bye. Hope to see you again soon!\");"},{"lineNumber":111,"author":{"gitId":"hengyiqun"},"content":"                    System.out.println(\"    ____________________________________________________________\");"},{"lineNumber":112,"author":{"gitId":"hengyiqun"},"content":"                    break;"},{"lineNumber":113,"author":{"gitId":"hengyiqun"},"content":"                } else if (parts[0].equals(\"list\")) {"},{"lineNumber":114,"author":{"gitId":"hengyiqun"},"content":"                    System.out.println(\"     Here are the tasks in your list:\");"},{"lineNumber":115,"author":{"gitId":"hengyiqun"},"content":"                    int count \u003d 1;"},{"lineNumber":116,"author":{"gitId":"hengyiqun"},"content":"                    for (Task t : store) {"},{"lineNumber":117,"author":{"gitId":"hengyiqun"},"content":"                        System.out.println(\"     \" + count + \".\" + t);"},{"lineNumber":118,"author":{"gitId":"hengyiqun"},"content":"                        count++;"},{"lineNumber":119,"author":{"gitId":"hengyiqun"},"content":"                    }"},{"lineNumber":120,"author":{"gitId":"hengyiqun"},"content":"                } else if (parts[0].equals(\"done\")) {"},{"lineNumber":121,"author":{"gitId":"hengyiqun"},"content":"                    if (parts.length \u003d\u003d 1) {"},{"lineNumber":122,"author":{"gitId":"hengyiqun"},"content":"                        throw new InsufficientArgumentsException(\"     ☹ OOPS!!! The \" +"},{"lineNumber":123,"author":{"gitId":"hengyiqun"},"content":"                                \"description of done cannot be empty.\");"},{"lineNumber":124,"author":{"gitId":"hengyiqun"},"content":"                    }"},{"lineNumber":125,"author":{"gitId":"hengyiqun"},"content":"                    int taskDone \u003d Integer.parseInt(parts[1]);"},{"lineNumber":126,"author":{"gitId":"hengyiqun"},"content":"                    int count \u003d 1;"},{"lineNumber":127,"author":{"gitId":"hengyiqun"},"content":"                    for (Task t : store) {"},{"lineNumber":128,"author":{"gitId":"hengyiqun"},"content":"                        if (count \u003d\u003d taskDone) {"},{"lineNumber":129,"author":{"gitId":"hengyiqun"},"content":"                            System.out.println(\"     Nice! I\u0027ve marked this task as done:\");"},{"lineNumber":130,"author":{"gitId":"hengyiqun"},"content":"                            store.set(count - 1, store.get(count - 1).markAsDone());"},{"lineNumber":131,"author":{"gitId":"hengyiqun"},"content":"                            System.out.println(\"     \" + store.get(count - 1));"},{"lineNumber":132,"author":{"gitId":"hengyiqun"},"content":"                        }"},{"lineNumber":133,"author":{"gitId":"hengyiqun"},"content":"                        count++;"},{"lineNumber":134,"author":{"gitId":"hengyiqun"},"content":"                    }"},{"lineNumber":135,"author":{"gitId":"hengyiqun"},"content":"                } else if (parts[0].equals(\"delete\")) {"},{"lineNumber":136,"author":{"gitId":"hengyiqun"},"content":"                    if (parts.length \u003d\u003d 1) {"},{"lineNumber":137,"author":{"gitId":"hengyiqun"},"content":"                        throw new InsufficientArgumentsException(\"     ☹ OOPS!!! The \" +"},{"lineNumber":138,"author":{"gitId":"hengyiqun"},"content":"                                \"description of delete cannot be empty.\");"},{"lineNumber":139,"author":{"gitId":"hengyiqun"},"content":"                    }"},{"lineNumber":140,"author":{"gitId":"hengyiqun"},"content":"                    int taskToDelete \u003d Integer.parseInt(parts[1]);"},{"lineNumber":141,"author":{"gitId":"hengyiqun"},"content":"                    System.out.println(\"     Noted. I\u0027ve removed this task: \");"},{"lineNumber":142,"author":{"gitId":"hengyiqun"},"content":"                    System.out.println(\"     \" + store.get(taskToDelete - 1));"},{"lineNumber":143,"author":{"gitId":"hengyiqun"},"content":"                    store.remove(taskToDelete - 1);"},{"lineNumber":144,"author":{"gitId":"hengyiqun"},"content":"                    System.out.println(\"     Now you have \" + store.size() + \" tasks in the list.\");"},{"lineNumber":145,"author":{"gitId":"hengyiqun"},"content":"                } else if (parts[0].equals(\"todo\")) {"},{"lineNumber":146,"author":{"gitId":"hengyiqun"},"content":"                    if (parts.length \u003d\u003d 1) {"},{"lineNumber":147,"author":{"gitId":"hengyiqun"},"content":"                        throw new InsufficientArgumentsException(\"     ☹ OOPS!!! The \" +"},{"lineNumber":148,"author":{"gitId":"hengyiqun"},"content":"                                \"description of a todo cannot be empty.\");"},{"lineNumber":149,"author":{"gitId":"hengyiqun"},"content":"                    }"},{"lineNumber":150,"author":{"gitId":"hengyiqun"},"content":"                    System.out.println(\"     Got it. I\u0027ve added this task:\");"},{"lineNumber":151,"author":{"gitId":"hengyiqun"},"content":"                    String taskDescription \u003d \"\";"},{"lineNumber":152,"author":{"gitId":"hengyiqun"},"content":"                    boolean first \u003d true;"},{"lineNumber":153,"author":{"gitId":"hengyiqun"},"content":"                    for (int i \u003d 1; i \u003c parts.length; ++i) {"},{"lineNumber":154,"author":{"gitId":"hengyiqun"},"content":"                        if (!first) {"},{"lineNumber":155,"author":{"gitId":"hengyiqun"},"content":"                            taskDescription +\u003d \" \" + parts[i];"},{"lineNumber":156,"author":{"gitId":"hengyiqun"},"content":"                        } else {"},{"lineNumber":157,"author":{"gitId":"hengyiqun"},"content":"                            taskDescription +\u003d parts[i];"},{"lineNumber":158,"author":{"gitId":"hengyiqun"},"content":"                        }"},{"lineNumber":159,"author":{"gitId":"hengyiqun"},"content":"                        first \u003d false;"},{"lineNumber":160,"author":{"gitId":"hengyiqun"},"content":"                    }"},{"lineNumber":161,"author":{"gitId":"hengyiqun"},"content":"                    Todo todo \u003d new Todo(taskDescription);"},{"lineNumber":162,"author":{"gitId":"hengyiqun"},"content":"                    store.add(todo);"},{"lineNumber":163,"author":{"gitId":"hengyiqun"},"content":"                    System.out.println(\"     \" + todo);"},{"lineNumber":164,"author":{"gitId":"hengyiqun"},"content":"                    System.out.println(\"     Now you have \" + store.size() + \" tasks in the list.\");"},{"lineNumber":165,"author":{"gitId":"hengyiqun"},"content":"                } else if (parts[0].equals(\"deadline\")) {"},{"lineNumber":166,"author":{"gitId":"hengyiqun"},"content":"                    if (parts.length \u003d\u003d 1) {"},{"lineNumber":167,"author":{"gitId":"hengyiqun"},"content":"                        throw new InsufficientArgumentsException(\"     ☹ OOPS!!! The \" +"},{"lineNumber":168,"author":{"gitId":"hengyiqun"},"content":"                                \"description of a deadline cannot be empty.\");"},{"lineNumber":169,"author":{"gitId":"hengyiqun"},"content":"                    }"},{"lineNumber":170,"author":{"gitId":"hengyiqun"},"content":"                    System.out.println(\"     Got it. I\u0027ve added this task:\");"},{"lineNumber":171,"author":{"gitId":"hengyiqun"},"content":"                    boolean flag \u003d false, first \u003d true;"},{"lineNumber":172,"author":{"gitId":"hengyiqun"},"content":"                    String dueDate \u003d \"\";"},{"lineNumber":173,"author":{"gitId":"hengyiqun"},"content":"                    for (String s : parts) {"},{"lineNumber":174,"author":{"gitId":"hengyiqun"},"content":"                        if (flag) {"},{"lineNumber":175,"author":{"gitId":"hengyiqun"},"content":"                            if (!first) {"},{"lineNumber":176,"author":{"gitId":"hengyiqun"},"content":"                                dueDate +\u003d \u0027 \u0027 + s;"},{"lineNumber":177,"author":{"gitId":"hengyiqun"},"content":"                            } else {"},{"lineNumber":178,"author":{"gitId":"hengyiqun"},"content":"                                dueDate +\u003d s;"},{"lineNumber":179,"author":{"gitId":"hengyiqun"},"content":"                            }"},{"lineNumber":180,"author":{"gitId":"hengyiqun"},"content":"                            first \u003d false;"},{"lineNumber":181,"author":{"gitId":"hengyiqun"},"content":"                        }"},{"lineNumber":182,"author":{"gitId":"hengyiqun"},"content":"                        if (s.equals(\"/by\")) {"},{"lineNumber":183,"author":{"gitId":"hengyiqun"},"content":"                            flag \u003d true;"},{"lineNumber":184,"author":{"gitId":"hengyiqun"},"content":"                        }"},{"lineNumber":185,"author":{"gitId":"hengyiqun"},"content":"                    }"},{"lineNumber":186,"author":{"gitId":"hengyiqun"},"content":"                    LocalDate due \u003d LocalDate.parse(dueDate);"},{"lineNumber":187,"author":{"gitId":"hengyiqun"},"content":"                    String taskDescription \u003d \"\";"},{"lineNumber":188,"author":{"gitId":"hengyiqun"},"content":"                    first \u003d true;"},{"lineNumber":189,"author":{"gitId":"hengyiqun"},"content":"                    for (int i \u003d 1; i \u003c parts.length; ++i) {"},{"lineNumber":190,"author":{"gitId":"hengyiqun"},"content":"                        if (!parts[i].equals(\"/by\")) {"},{"lineNumber":191,"author":{"gitId":"hengyiqun"},"content":"                            if (!first) {"},{"lineNumber":192,"author":{"gitId":"hengyiqun"},"content":"                                taskDescription +\u003d \" \" + parts[i];"},{"lineNumber":193,"author":{"gitId":"hengyiqun"},"content":"                            } else {"},{"lineNumber":194,"author":{"gitId":"hengyiqun"},"content":"                                taskDescription +\u003d parts[i];"},{"lineNumber":195,"author":{"gitId":"hengyiqun"},"content":"                            }"},{"lineNumber":196,"author":{"gitId":"hengyiqun"},"content":"                            first \u003d false;"},{"lineNumber":197,"author":{"gitId":"hengyiqun"},"content":"                        } else {"},{"lineNumber":198,"author":{"gitId":"hengyiqun"},"content":"                            break;"},{"lineNumber":199,"author":{"gitId":"hengyiqun"},"content":"                        }"},{"lineNumber":200,"author":{"gitId":"hengyiqun"},"content":"                    }"},{"lineNumber":201,"author":{"gitId":"hengyiqun"},"content":"                    Deadline deadline \u003d new Deadline(taskDescription, due);"},{"lineNumber":202,"author":{"gitId":"hengyiqun"},"content":"                    store.add(deadline);"},{"lineNumber":203,"author":{"gitId":"hengyiqun"},"content":"                    System.out.println(\"     \" + deadline);"},{"lineNumber":204,"author":{"gitId":"hengyiqun"},"content":"                    System.out.println(\"     Now you have \" + store.size() + \" tasks in the list.\");"},{"lineNumber":205,"author":{"gitId":"hengyiqun"},"content":"                } else if (parts[0].equals(\"event\")) {"},{"lineNumber":206,"author":{"gitId":"hengyiqun"},"content":"                    if (parts.length \u003d\u003d 1) {"},{"lineNumber":207,"author":{"gitId":"hengyiqun"},"content":"                        throw new InsufficientArgumentsException(\"     ☹ OOPS!!! The \" +"},{"lineNumber":208,"author":{"gitId":"hengyiqun"},"content":"                                \"description of an event cannot be empty.\");"},{"lineNumber":209,"author":{"gitId":"hengyiqun"},"content":"                    }"},{"lineNumber":210,"author":{"gitId":"hengyiqun"},"content":"                    System.out.println(\"     Got it. I\u0027ve added this task:\");"},{"lineNumber":211,"author":{"gitId":"hengyiqun"},"content":"                    boolean flag \u003d false, first \u003d true;"},{"lineNumber":212,"author":{"gitId":"hengyiqun"},"content":"                    String eventDate \u003d \"\";"},{"lineNumber":213,"author":{"gitId":"hengyiqun"},"content":"                    for (String s : parts) {"},{"lineNumber":214,"author":{"gitId":"hengyiqun"},"content":"                        if (flag) {"},{"lineNumber":215,"author":{"gitId":"hengyiqun"},"content":"                            if (!first) {"},{"lineNumber":216,"author":{"gitId":"hengyiqun"},"content":"                                eventDate +\u003d \u0027 \u0027 + s;"},{"lineNumber":217,"author":{"gitId":"hengyiqun"},"content":"                            } else {"},{"lineNumber":218,"author":{"gitId":"hengyiqun"},"content":"                                eventDate +\u003d s;"},{"lineNumber":219,"author":{"gitId":"hengyiqun"},"content":"                            }"},{"lineNumber":220,"author":{"gitId":"hengyiqun"},"content":"                            first \u003d false;"},{"lineNumber":221,"author":{"gitId":"hengyiqun"},"content":"                        }"},{"lineNumber":222,"author":{"gitId":"hengyiqun"},"content":"                        if (s.equals(\"/at\")) {"},{"lineNumber":223,"author":{"gitId":"hengyiqun"},"content":"                            flag \u003d true;"},{"lineNumber":224,"author":{"gitId":"hengyiqun"},"content":"                        }"},{"lineNumber":225,"author":{"gitId":"hengyiqun"},"content":"                    }"},{"lineNumber":226,"author":{"gitId":"hengyiqun"},"content":"                    LocalDate date \u003d LocalDate.parse(eventDate);"},{"lineNumber":227,"author":{"gitId":"hengyiqun"},"content":"                    String eventDescription \u003d \"\";"},{"lineNumber":228,"author":{"gitId":"hengyiqun"},"content":"                    first \u003d true;"},{"lineNumber":229,"author":{"gitId":"hengyiqun"},"content":"                    for (int i \u003d 1; i \u003c parts.length; ++i) {"},{"lineNumber":230,"author":{"gitId":"hengyiqun"},"content":"                        if (!parts[i].equals(\"/at\")) {"},{"lineNumber":231,"author":{"gitId":"hengyiqun"},"content":"                            if (!first) {"},{"lineNumber":232,"author":{"gitId":"hengyiqun"},"content":"                                eventDescription +\u003d \" \" + parts[i];"},{"lineNumber":233,"author":{"gitId":"hengyiqun"},"content":"                            } else {"},{"lineNumber":234,"author":{"gitId":"hengyiqun"},"content":"                                eventDescription +\u003d parts[i];"},{"lineNumber":235,"author":{"gitId":"hengyiqun"},"content":"                            }"},{"lineNumber":236,"author":{"gitId":"hengyiqun"},"content":"                            first \u003d false;"},{"lineNumber":237,"author":{"gitId":"hengyiqun"},"content":"                        } else {"},{"lineNumber":238,"author":{"gitId":"hengyiqun"},"content":"                            break;"},{"lineNumber":239,"author":{"gitId":"hengyiqun"},"content":"                        }"},{"lineNumber":240,"author":{"gitId":"hengyiqun"},"content":"                    }"},{"lineNumber":241,"author":{"gitId":"hengyiqun"},"content":"                    Event event \u003d new Event(eventDescription, date);"},{"lineNumber":242,"author":{"gitId":"hengyiqun"},"content":"                    store.add(event);"},{"lineNumber":243,"author":{"gitId":"hengyiqun"},"content":"                    System.out.println(\"     \" + event);"},{"lineNumber":244,"author":{"gitId":"hengyiqun"},"content":"                    System.out.println(\"     Now you have \" + store.size() + \" tasks in the list.\");"},{"lineNumber":245,"author":{"gitId":"hengyiqun"},"content":"                } else {"},{"lineNumber":246,"author":{"gitId":"hengyiqun"},"content":"                    throw new WrongArgumentException(\"     ☹ OOPS!!! I\u0027m sorry, \" +"},{"lineNumber":247,"author":{"gitId":"hengyiqun"},"content":"                            \"but I don\u0027t know what that means :-(\");"},{"lineNumber":248,"author":{"gitId":"hengyiqun"},"content":"                }"},{"lineNumber":249,"author":{"gitId":"hengyiqun"},"content":"                System.out.println(\"    ____________________________________________________________\");"},{"lineNumber":250,"author":{"gitId":"hengyiqun"},"content":"                if (parts[0].equals(\"event\") || parts[0].equals(\"deadline\")"},{"lineNumber":251,"author":{"gitId":"hengyiqun"},"content":"                    || parts[0].equals(\"todo\") || parts[0].equals(\"done\")"},{"lineNumber":252,"author":{"gitId":"hengyiqun"},"content":"                        || parts[0].equals(\"delete\")) {"},{"lineNumber":253,"author":{"gitId":"hengyiqun"},"content":"                    try {"},{"lineNumber":254,"author":{"gitId":"hengyiqun"},"content":"                        FileWriter fw \u003d new FileWriter(filePath);"},{"lineNumber":255,"author":{"gitId":"hengyiqun"},"content":"                        for (Task t : store) {"},{"lineNumber":256,"author":{"gitId":"hengyiqun"},"content":"                            String rmb \u003d \"\";"},{"lineNumber":257,"author":{"gitId":"hengyiqun"},"content":"                            if (t instanceof Event) {"},{"lineNumber":258,"author":{"gitId":"hengyiqun"},"content":"                                rmb +\u003d \"E\";"},{"lineNumber":259,"author":{"gitId":"hengyiqun"},"content":"                            } else if (t instanceof Deadline) {"},{"lineNumber":260,"author":{"gitId":"hengyiqun"},"content":"                                rmb +\u003d \"D\";"},{"lineNumber":261,"author":{"gitId":"hengyiqun"},"content":"                            } else if (t instanceof Todo) {"},{"lineNumber":262,"author":{"gitId":"hengyiqun"},"content":"                                rmb +\u003d \"T\";"},{"lineNumber":263,"author":{"gitId":"hengyiqun"},"content":"                            }"},{"lineNumber":264,"author":{"gitId":"hengyiqun"},"content":"                            rmb +\u003d \" | \";"},{"lineNumber":265,"author":{"gitId":"hengyiqun"},"content":"                            if (t.isCompleted()) {"},{"lineNumber":266,"author":{"gitId":"hengyiqun"},"content":"                                rmb +\u003d \"1\";"},{"lineNumber":267,"author":{"gitId":"hengyiqun"},"content":"                            } else {"},{"lineNumber":268,"author":{"gitId":"hengyiqun"},"content":"                                rmb +\u003d \"0\";"},{"lineNumber":269,"author":{"gitId":"hengyiqun"},"content":"                            }"},{"lineNumber":270,"author":{"gitId":"hengyiqun"},"content":"                            rmb +\u003d \" | \";"},{"lineNumber":271,"author":{"gitId":"hengyiqun"},"content":"                            rmb +\u003d t.getDescription();"},{"lineNumber":272,"author":{"gitId":"hengyiqun"},"content":"                            if (t instanceof DueDate) {"},{"lineNumber":273,"author":{"gitId":"hengyiqun"},"content":"                                rmb +\u003d \" | \";"},{"lineNumber":274,"author":{"gitId":"hengyiqun"},"content":"                                rmb +\u003d ((DueDate) t).getDueDate();"},{"lineNumber":275,"author":{"gitId":"hengyiqun"},"content":"                            }"},{"lineNumber":276,"author":{"gitId":"hengyiqun"},"content":"                            fw.write(rmb + \"\\n\");"},{"lineNumber":277,"author":{"gitId":"hengyiqun"},"content":"                        }"},{"lineNumber":278,"author":{"gitId":"hengyiqun"},"content":"                        fw.close();"},{"lineNumber":279,"author":{"gitId":"hengyiqun"},"content":"                    } catch (IOException e) {"},{"lineNumber":280,"author":{"gitId":"hengyiqun"},"content":"                    }"},{"lineNumber":281,"author":{"gitId":"hengyiqun"},"content":"                }"},{"lineNumber":282,"author":{"gitId":"hengyiqun"},"content":"            } catch(WrongArgumentException e) {"},{"lineNumber":283,"author":{"gitId":"hengyiqun"},"content":"                System.out.println(e.getMessage());"},{"lineNumber":284,"author":{"gitId":"hengyiqun"},"content":"                System.out.println(\"    ____________________________________________________________\");"},{"lineNumber":285,"author":{"gitId":"hengyiqun"},"content":"            } catch (InsufficientArgumentsException e) {"},{"lineNumber":286,"author":{"gitId":"hengyiqun"},"content":"                System.out.println(e.getMessage());"},{"lineNumber":287,"author":{"gitId":"hengyiqun"},"content":"                System.out.println(\"    ____________________________________________________________\");"},{"lineNumber":288,"author":{"gitId":"hengyiqun"},"content":"            }"},{"lineNumber":289,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":290,"author":{"gitId":"hengyiqun"},"content":"    }*/"},{"lineNumber":291,"author":{"gitId":"hengyiqun"},"content":"}"}],"authorContributionMap":{"hengyiqun":281,"-":10}},{"path":"src/main/java/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"hengyiqun"},"content":"import java.time.LocalDate;"},{"lineNumber":2,"author":{"gitId":"hengyiqun"},"content":"import java.time.format.DateTimeFormatter;"},{"lineNumber":3,"author":{"gitId":"hengyiqun"},"content":""},{"lineNumber":4,"author":{"gitId":"hengyiqun"},"content":"/**"},{"lineNumber":5,"author":{"gitId":"hengyiqun"},"content":" * Event is a Task object defined by a time at which the event will occur"},{"lineNumber":6,"author":{"gitId":"hengyiqun"},"content":" */"},{"lineNumber":7,"author":{"gitId":"hengyiqun"},"content":"public class Event extends Task implements DueDate {"},{"lineNumber":8,"author":{"gitId":"hengyiqun"},"content":"    protected LocalDate time;"},{"lineNumber":9,"author":{"gitId":"hengyiqun"},"content":""},{"lineNumber":10,"author":{"gitId":"hengyiqun"},"content":"    public Event(String description, LocalDate time) {"},{"lineNumber":11,"author":{"gitId":"hengyiqun"},"content":"        super(description);"},{"lineNumber":12,"author":{"gitId":"hengyiqun"},"content":"        this.time \u003d time;"},{"lineNumber":13,"author":{"gitId":"hengyiqun"},"content":"    }"},{"lineNumber":14,"author":{"gitId":"hengyiqun"},"content":""},{"lineNumber":15,"author":{"gitId":"hengyiqun"},"content":"    public Event(String description, boolean isDone, LocalDate time) {"},{"lineNumber":16,"author":{"gitId":"hengyiqun"},"content":"        super(description, isDone);"},{"lineNumber":17,"author":{"gitId":"hengyiqun"},"content":"        this.time \u003d time;"},{"lineNumber":18,"author":{"gitId":"hengyiqun"},"content":"    }"},{"lineNumber":19,"author":{"gitId":"hengyiqun"},"content":""},{"lineNumber":20,"author":{"gitId":"hengyiqun"},"content":"    public Event markAsDone() {"},{"lineNumber":21,"author":{"gitId":"hengyiqun"},"content":"        return new Event(this.description, true, this.time);"},{"lineNumber":22,"author":{"gitId":"hengyiqun"},"content":"    }"},{"lineNumber":23,"author":{"gitId":"hengyiqun"},"content":""},{"lineNumber":24,"author":{"gitId":"hengyiqun"},"content":"    @Override"},{"lineNumber":25,"author":{"gitId":"hengyiqun"},"content":"    public String getDueDate() {"},{"lineNumber":26,"author":{"gitId":"hengyiqun"},"content":"        return this.time.toString();"},{"lineNumber":27,"author":{"gitId":"hengyiqun"},"content":"    }"},{"lineNumber":28,"author":{"gitId":"hengyiqun"},"content":""},{"lineNumber":29,"author":{"gitId":"hengyiqun"},"content":"    @Override"},{"lineNumber":30,"author":{"gitId":"hengyiqun"},"content":"    public String toString() {"},{"lineNumber":31,"author":{"gitId":"hengyiqun"},"content":"        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"MMM dd yyyy\");"},{"lineNumber":32,"author":{"gitId":"hengyiqun"},"content":"        return \"[E]\" + super.toString() + \" (at: \" + time.format(formatter) + \")\";"},{"lineNumber":33,"author":{"gitId":"hengyiqun"},"content":"    }"},{"lineNumber":34,"author":{"gitId":"hengyiqun"},"content":"}"}],"authorContributionMap":{"hengyiqun":34}},{"path":"src/main/java/InsufficientArgumentsException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"hengyiqun"},"content":"/**"},{"lineNumber":2,"author":{"gitId":"hengyiqun"},"content":" * InsufficientArgumentsException is raised when the user gives less command than required"},{"lineNumber":3,"author":{"gitId":"hengyiqun"},"content":" */"},{"lineNumber":4,"author":{"gitId":"hengyiqun"},"content":"public class InsufficientArgumentsException extends Exception {"},{"lineNumber":5,"author":{"gitId":"hengyiqun"},"content":"    public InsufficientArgumentsException(String e) {"},{"lineNumber":6,"author":{"gitId":"hengyiqun"},"content":"        super(e);"},{"lineNumber":7,"author":{"gitId":"hengyiqun"},"content":"    }"},{"lineNumber":8,"author":{"gitId":"hengyiqun"},"content":"}"}],"authorContributionMap":{"hengyiqun":8}},{"path":"src/main/java/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"hengyiqun"},"content":"import java.time.LocalDate;"},{"lineNumber":2,"author":{"gitId":"hengyiqun"},"content":""},{"lineNumber":3,"author":{"gitId":"hengyiqun"},"content":"/**"},{"lineNumber":4,"author":{"gitId":"hengyiqun"},"content":" * Parser makes sense of the user command and act accordingly"},{"lineNumber":5,"author":{"gitId":"hengyiqun"},"content":" */"},{"lineNumber":6,"author":{"gitId":"hengyiqun"},"content":"public class Parser {"},{"lineNumber":7,"author":{"gitId":"hengyiqun"},"content":"    private String taskType;"},{"lineNumber":8,"author":{"gitId":"hengyiqun"},"content":"    private String description;"},{"lineNumber":9,"author":{"gitId":"hengyiqun"},"content":"    private LocalDate due;"},{"lineNumber":10,"author":{"gitId":"hengyiqun"},"content":"    private int num;"},{"lineNumber":11,"author":{"gitId":"hengyiqun"},"content":""},{"lineNumber":12,"author":{"gitId":"hengyiqun"},"content":"    /**"},{"lineNumber":13,"author":{"gitId":"hengyiqun"},"content":"     * Constructs an empty Parser"},{"lineNumber":14,"author":{"gitId":"hengyiqun"},"content":"     */"},{"lineNumber":15,"author":{"gitId":"hengyiqun"},"content":"    public Parser() {"},{"lineNumber":16,"author":{"gitId":"hengyiqun"},"content":"        this.taskType \u003d null;"},{"lineNumber":17,"author":{"gitId":"hengyiqun"},"content":"        this.description \u003d null;"},{"lineNumber":18,"author":{"gitId":"hengyiqun"},"content":"        this.due \u003d null;"},{"lineNumber":19,"author":{"gitId":"hengyiqun"},"content":"        this.num \u003d -1;"},{"lineNumber":20,"author":{"gitId":"hengyiqun"},"content":"    }"},{"lineNumber":21,"author":{"gitId":"hengyiqun"},"content":""},{"lineNumber":22,"author":{"gitId":"hengyiqun"},"content":"    /**"},{"lineNumber":23,"author":{"gitId":"hengyiqun"},"content":"     * Constructs a Parser with details on the Task of concern"},{"lineNumber":24,"author":{"gitId":"hengyiqun"},"content":"     * @param taskType type of task"},{"lineNumber":25,"author":{"gitId":"hengyiqun"},"content":"     * @param description description of task"},{"lineNumber":26,"author":{"gitId":"hengyiqun"},"content":"     * @param due due date of task"},{"lineNumber":27,"author":{"gitId":"hengyiqun"},"content":"     * @param num the index of the task of concern"},{"lineNumber":28,"author":{"gitId":"hengyiqun"},"content":"     */"},{"lineNumber":29,"author":{"gitId":"hengyiqun"},"content":"    private Parser(String taskType, String description, LocalDate due, int num) {"},{"lineNumber":30,"author":{"gitId":"hengyiqun"},"content":"        this.taskType \u003d taskType;"},{"lineNumber":31,"author":{"gitId":"hengyiqun"},"content":"        this.description \u003d description;"},{"lineNumber":32,"author":{"gitId":"hengyiqun"},"content":"        this.due \u003d due;"},{"lineNumber":33,"author":{"gitId":"hengyiqun"},"content":"        this.num \u003d num;"},{"lineNumber":34,"author":{"gitId":"hengyiqun"},"content":"    }"},{"lineNumber":35,"author":{"gitId":"hengyiqun"},"content":""},{"lineNumber":36,"author":{"gitId":"hengyiqun"},"content":"    /**"},{"lineNumber":37,"author":{"gitId":"hengyiqun"},"content":"     * Makes sense of the command entered by user"},{"lineNumber":38,"author":{"gitId":"hengyiqun"},"content":"     * @param input Command entered by user"},{"lineNumber":39,"author":{"gitId":"hengyiqun"},"content":"     * @return A Parser containing details of the task of concern"},{"lineNumber":40,"author":{"gitId":"hengyiqun"},"content":"     */"},{"lineNumber":41,"author":{"gitId":"hengyiqun"},"content":"    public Parser parse(String input) {"},{"lineNumber":42,"author":{"gitId":"hengyiqun"},"content":"        try {"},{"lineNumber":43,"author":{"gitId":"hengyiqun"},"content":"            String[] parts \u003d input.split(\" \");"},{"lineNumber":44,"author":{"gitId":"hengyiqun"},"content":"            if (parts[0].equals(\"bye\")) {"},{"lineNumber":45,"author":{"gitId":"hengyiqun"},"content":"                return new Parser(\"bye\", null, null, -1);"},{"lineNumber":46,"author":{"gitId":"hengyiqun"},"content":"            } else if (parts[0].equals(\"list\")) {"},{"lineNumber":47,"author":{"gitId":"hengyiqun"},"content":"                return new Parser(\"list\", null, null, -1);"},{"lineNumber":48,"author":{"gitId":"hengyiqun"},"content":"            } else if (parts[0].equals(\"done\")) {"},{"lineNumber":49,"author":{"gitId":"hengyiqun"},"content":"                if (parts.length \u003d\u003d 1) {"},{"lineNumber":50,"author":{"gitId":"hengyiqun"},"content":"                    throw new InsufficientArgumentsException(\"     ☹ OOPS!!! The \" +"},{"lineNumber":51,"author":{"gitId":"hengyiqun"},"content":"                            \"description of done cannot be empty.\");"},{"lineNumber":52,"author":{"gitId":"hengyiqun"},"content":"                }"},{"lineNumber":53,"author":{"gitId":"hengyiqun"},"content":"                int taskDone \u003d Integer.parseInt(parts[1]);"},{"lineNumber":54,"author":{"gitId":"hengyiqun"},"content":"                return new Parser(\"done\", null, null, taskDone);"},{"lineNumber":55,"author":{"gitId":"hengyiqun"},"content":"            } else if (parts[0].equals(\"delete\")) {"},{"lineNumber":56,"author":{"gitId":"hengyiqun"},"content":"                if (parts.length \u003d\u003d 1) {"},{"lineNumber":57,"author":{"gitId":"hengyiqun"},"content":"                    throw new InsufficientArgumentsException(\"     ☹ OOPS!!! The \" +"},{"lineNumber":58,"author":{"gitId":"hengyiqun"},"content":"                            \"description of delete cannot be empty.\");"},{"lineNumber":59,"author":{"gitId":"hengyiqun"},"content":"                }"},{"lineNumber":60,"author":{"gitId":"hengyiqun"},"content":"                int taskToDelete \u003d Integer.parseInt(parts[1]);"},{"lineNumber":61,"author":{"gitId":"hengyiqun"},"content":"                return new Parser(\"delete\", null, null, taskToDelete);"},{"lineNumber":62,"author":{"gitId":"hengyiqun"},"content":"            } else if (parts[0].equals(\"find\")) {"},{"lineNumber":63,"author":{"gitId":"hengyiqun"},"content":"                if (parts.length \u003d\u003d 1) {"},{"lineNumber":64,"author":{"gitId":"hengyiqun"},"content":"                    throw new InsufficientArgumentsException(\"     ☹ OOPS!!! The \" +"},{"lineNumber":65,"author":{"gitId":"hengyiqun"},"content":"                            \"description of find cannot be empty.\");"},{"lineNumber":66,"author":{"gitId":"hengyiqun"},"content":"                }"},{"lineNumber":67,"author":{"gitId":"hengyiqun"},"content":"                String toFind \u003d \"\";"},{"lineNumber":68,"author":{"gitId":"hengyiqun"},"content":"                for (int i \u003d 1; i \u003c parts.length; ++i) {"},{"lineNumber":69,"author":{"gitId":"hengyiqun"},"content":"                    if (i !\u003d parts.length - 1) {"},{"lineNumber":70,"author":{"gitId":"hengyiqun"},"content":"                        toFind +\u003d parts[i] + \" \";"},{"lineNumber":71,"author":{"gitId":"hengyiqun"},"content":"                    } else {"},{"lineNumber":72,"author":{"gitId":"hengyiqun"},"content":"                        toFind +\u003d parts[i];"},{"lineNumber":73,"author":{"gitId":"hengyiqun"},"content":"                    }"},{"lineNumber":74,"author":{"gitId":"hengyiqun"},"content":"                }"},{"lineNumber":75,"author":{"gitId":"hengyiqun"},"content":"                return new Parser(\"find\", toFind, null, -1);"},{"lineNumber":76,"author":{"gitId":"hengyiqun"},"content":"            } else if (parts[0].equals(\"todo\")) {"},{"lineNumber":77,"author":{"gitId":"hengyiqun"},"content":"                if (parts.length \u003d\u003d 1) {"},{"lineNumber":78,"author":{"gitId":"hengyiqun"},"content":"                    throw new InsufficientArgumentsException(\"     ☹ OOPS!!! The \" +"},{"lineNumber":79,"author":{"gitId":"hengyiqun"},"content":"                            \"description of a todo cannot be empty.\");"},{"lineNumber":80,"author":{"gitId":"hengyiqun"},"content":"                }"},{"lineNumber":81,"author":{"gitId":"hengyiqun"},"content":"                String taskDescription \u003d this.getDescription(parts, \"\\n\");"},{"lineNumber":82,"author":{"gitId":"hengyiqun"},"content":"                return new Parser(\"todo\", taskDescription, null, -1);"},{"lineNumber":83,"author":{"gitId":"hengyiqun"},"content":"            } else if (parts[0].equals(\"deadline\")) {"},{"lineNumber":84,"author":{"gitId":"hengyiqun"},"content":"                if (parts.length \u003d\u003d 1) {"},{"lineNumber":85,"author":{"gitId":"hengyiqun"},"content":"                    throw new InsufficientArgumentsException(\"     ☹ OOPS!!! The \" +"},{"lineNumber":86,"author":{"gitId":"hengyiqun"},"content":"                            \"description of a deadline cannot be empty.\");"},{"lineNumber":87,"author":{"gitId":"hengyiqun"},"content":"                }"},{"lineNumber":88,"author":{"gitId":"hengyiqun"},"content":"                LocalDate due \u003d this.getDueDate(parts, \"/by\");"},{"lineNumber":89,"author":{"gitId":"hengyiqun"},"content":"                String taskDescription \u003d this.getDescription(parts, \"/by\");"},{"lineNumber":90,"author":{"gitId":"hengyiqun"},"content":"                return new Parser(\"deadline\", taskDescription, due, -1);"},{"lineNumber":91,"author":{"gitId":"hengyiqun"},"content":"            } else if (parts[0].equals(\"event\")) {"},{"lineNumber":92,"author":{"gitId":"hengyiqun"},"content":"                if (parts.length \u003d\u003d 1) {"},{"lineNumber":93,"author":{"gitId":"hengyiqun"},"content":"                    throw new InsufficientArgumentsException(\"     ☹ OOPS!!! The \" +"},{"lineNumber":94,"author":{"gitId":"hengyiqun"},"content":"                            \"description of an event cannot be empty.\");"},{"lineNumber":95,"author":{"gitId":"hengyiqun"},"content":"                }"},{"lineNumber":96,"author":{"gitId":"hengyiqun"},"content":"                LocalDate due \u003d this.getDueDate(parts, \"/at\");"},{"lineNumber":97,"author":{"gitId":"hengyiqun"},"content":"                String taskDescription \u003d this.getDescription(parts, \"/at\");"},{"lineNumber":98,"author":{"gitId":"hengyiqun"},"content":"                return new Parser(\"event\", taskDescription, due, -1);"},{"lineNumber":99,"author":{"gitId":"hengyiqun"},"content":"            } else {"},{"lineNumber":100,"author":{"gitId":"hengyiqun"},"content":"                throw new WrongArgumentException(\"     ☹ OOPS!!! I\u0027m sorry, \" +"},{"lineNumber":101,"author":{"gitId":"hengyiqun"},"content":"                        \"but I don\u0027t know what that means :-(\");"},{"lineNumber":102,"author":{"gitId":"hengyiqun"},"content":"            }"},{"lineNumber":103,"author":{"gitId":"hengyiqun"},"content":"        } catch (InsufficientArgumentsException e) {"},{"lineNumber":104,"author":{"gitId":"hengyiqun"},"content":"            return new Parser(\"\", e.getMessage(), null, -1);"},{"lineNumber":105,"author":{"gitId":"hengyiqun"},"content":"        } catch (WrongArgumentException e) {"},{"lineNumber":106,"author":{"gitId":"hengyiqun"},"content":"            return new Parser(\"\", e.getMessage(), null, -1);"},{"lineNumber":107,"author":{"gitId":"hengyiqun"},"content":"        }"},{"lineNumber":108,"author":{"gitId":"hengyiqun"},"content":"    }"},{"lineNumber":109,"author":{"gitId":"hengyiqun"},"content":""},{"lineNumber":110,"author":{"gitId":"hengyiqun"},"content":"    /**"},{"lineNumber":111,"author":{"gitId":"hengyiqun"},"content":"     * Gets the type for the task of concern"},{"lineNumber":112,"author":{"gitId":"hengyiqun"},"content":"     * @param parts Array containing the command entered by the user"},{"lineNumber":113,"author":{"gitId":"hengyiqun"},"content":"     * @param delimiter String used for identifying due date of the task"},{"lineNumber":114,"author":{"gitId":"hengyiqun"},"content":"     * @return Description of the task"},{"lineNumber":115,"author":{"gitId":"hengyiqun"},"content":"     */"},{"lineNumber":116,"author":{"gitId":"hengyiqun"},"content":"    private String getDescription(String[] parts, String delimiter) {"},{"lineNumber":117,"author":{"gitId":"hengyiqun"},"content":"        String description \u003d \"\";"},{"lineNumber":118,"author":{"gitId":"hengyiqun"},"content":"        boolean first \u003d true;"},{"lineNumber":119,"author":{"gitId":"hengyiqun"},"content":"        for (int i \u003d 1; i \u003c parts.length; ++i) {"},{"lineNumber":120,"author":{"gitId":"hengyiqun"},"content":"            if (!parts[i].equals(delimiter)) {"},{"lineNumber":121,"author":{"gitId":"hengyiqun"},"content":"                if (!first) {"},{"lineNumber":122,"author":{"gitId":"hengyiqun"},"content":"                    description +\u003d \" \" + parts[i];"},{"lineNumber":123,"author":{"gitId":"hengyiqun"},"content":"                } else {"},{"lineNumber":124,"author":{"gitId":"hengyiqun"},"content":"                    description +\u003d parts[i];"},{"lineNumber":125,"author":{"gitId":"hengyiqun"},"content":"                }"},{"lineNumber":126,"author":{"gitId":"hengyiqun"},"content":"                first \u003d false;"},{"lineNumber":127,"author":{"gitId":"hengyiqun"},"content":"            } else {"},{"lineNumber":128,"author":{"gitId":"hengyiqun"},"content":"                break;"},{"lineNumber":129,"author":{"gitId":"hengyiqun"},"content":"            }"},{"lineNumber":130,"author":{"gitId":"hengyiqun"},"content":"        }"},{"lineNumber":131,"author":{"gitId":"hengyiqun"},"content":"        return description;"},{"lineNumber":132,"author":{"gitId":"hengyiqun"},"content":"    }"},{"lineNumber":133,"author":{"gitId":"hengyiqun"},"content":""},{"lineNumber":134,"author":{"gitId":"hengyiqun"},"content":"    /**"},{"lineNumber":135,"author":{"gitId":"hengyiqun"},"content":"     * Obtains the due date of the task of concern"},{"lineNumber":136,"author":{"gitId":"hengyiqun"},"content":"     * @param parts Array containing the command entered by the user"},{"lineNumber":137,"author":{"gitId":"hengyiqun"},"content":"     * @param delimiter String used for identifying due date of the task"},{"lineNumber":138,"author":{"gitId":"hengyiqun"},"content":"     * @return Due date of the task of concern"},{"lineNumber":139,"author":{"gitId":"hengyiqun"},"content":"     */"},{"lineNumber":140,"author":{"gitId":"hengyiqun"},"content":"    private LocalDate getDueDate(String[] parts, String delimiter) {"},{"lineNumber":141,"author":{"gitId":"hengyiqun"},"content":"        boolean flag \u003d false, first \u003d true;"},{"lineNumber":142,"author":{"gitId":"hengyiqun"},"content":"        String dueDate \u003d \"\";"},{"lineNumber":143,"author":{"gitId":"hengyiqun"},"content":"        for (String s : parts) {"},{"lineNumber":144,"author":{"gitId":"hengyiqun"},"content":"            if (flag) {"},{"lineNumber":145,"author":{"gitId":"hengyiqun"},"content":"                if (!first) {"},{"lineNumber":146,"author":{"gitId":"hengyiqun"},"content":"                    dueDate +\u003d \u0027 \u0027 + s;"},{"lineNumber":147,"author":{"gitId":"hengyiqun"},"content":"                } else {"},{"lineNumber":148,"author":{"gitId":"hengyiqun"},"content":"                    dueDate +\u003d s;"},{"lineNumber":149,"author":{"gitId":"hengyiqun"},"content":"                }"},{"lineNumber":150,"author":{"gitId":"hengyiqun"},"content":"                first \u003d false;"},{"lineNumber":151,"author":{"gitId":"hengyiqun"},"content":"            }"},{"lineNumber":152,"author":{"gitId":"hengyiqun"},"content":"            if (s.equals(delimiter)) {"},{"lineNumber":153,"author":{"gitId":"hengyiqun"},"content":"                flag \u003d true;"},{"lineNumber":154,"author":{"gitId":"hengyiqun"},"content":"            }"},{"lineNumber":155,"author":{"gitId":"hengyiqun"},"content":"        }"},{"lineNumber":156,"author":{"gitId":"hengyiqun"},"content":"        return LocalDate.parse(dueDate);"},{"lineNumber":157,"author":{"gitId":"hengyiqun"},"content":"    }"},{"lineNumber":158,"author":{"gitId":"hengyiqun"},"content":""},{"lineNumber":159,"author":{"gitId":"hengyiqun"},"content":"    /**"},{"lineNumber":160,"author":{"gitId":"hengyiqun"},"content":"     * Returns a string about the type of task"},{"lineNumber":161,"author":{"gitId":"hengyiqun"},"content":"     * @return Type of task"},{"lineNumber":162,"author":{"gitId":"hengyiqun"},"content":"     */"},{"lineNumber":163,"author":{"gitId":"hengyiqun"},"content":"    public String getTaskType() {"},{"lineNumber":164,"author":{"gitId":"hengyiqun"},"content":"        return this.taskType;"},{"lineNumber":165,"author":{"gitId":"hengyiqun"},"content":"    }"},{"lineNumber":166,"author":{"gitId":"hengyiqun"},"content":""},{"lineNumber":167,"author":{"gitId":"hengyiqun"},"content":"    /**"},{"lineNumber":168,"author":{"gitId":"hengyiqun"},"content":"     * Returns a string containing description of the task of concern"},{"lineNumber":169,"author":{"gitId":"hengyiqun"},"content":"     * @return Description of task"},{"lineNumber":170,"author":{"gitId":"hengyiqun"},"content":"     */"},{"lineNumber":171,"author":{"gitId":"hengyiqun"},"content":"    public String getDescription() {"},{"lineNumber":172,"author":{"gitId":"hengyiqun"},"content":"        return this.description;"},{"lineNumber":173,"author":{"gitId":"hengyiqun"},"content":"    }"},{"lineNumber":174,"author":{"gitId":"hengyiqun"},"content":""},{"lineNumber":175,"author":{"gitId":"hengyiqun"},"content":"    /**"},{"lineNumber":176,"author":{"gitId":"hengyiqun"},"content":"     * Returns the due date of the task of concern"},{"lineNumber":177,"author":{"gitId":"hengyiqun"},"content":"     * @return Due date of the task"},{"lineNumber":178,"author":{"gitId":"hengyiqun"},"content":"     */"},{"lineNumber":179,"author":{"gitId":"hengyiqun"},"content":"    public LocalDate getDueDate() {"},{"lineNumber":180,"author":{"gitId":"hengyiqun"},"content":"        return this.due;"},{"lineNumber":181,"author":{"gitId":"hengyiqun"},"content":"    }"},{"lineNumber":182,"author":{"gitId":"hengyiqun"},"content":""},{"lineNumber":183,"author":{"gitId":"hengyiqun"},"content":"    /**"},{"lineNumber":184,"author":{"gitId":"hengyiqun"},"content":"     * Returns the index of the task of concern within the TaskList"},{"lineNumber":185,"author":{"gitId":"hengyiqun"},"content":"     * @return Index of the task of concern within the TaskList"},{"lineNumber":186,"author":{"gitId":"hengyiqun"},"content":"     */"},{"lineNumber":187,"author":{"gitId":"hengyiqun"},"content":"    public int getTaskIdx() {"},{"lineNumber":188,"author":{"gitId":"hengyiqun"},"content":"        return this.num;"},{"lineNumber":189,"author":{"gitId":"hengyiqun"},"content":"    }"},{"lineNumber":190,"author":{"gitId":"hengyiqun"},"content":"}"}],"authorContributionMap":{"hengyiqun":190}},{"path":"src/main/java/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"hengyiqun"},"content":"import java.io.File;"},{"lineNumber":2,"author":{"gitId":"hengyiqun"},"content":"import java.io.FileNotFoundException;"},{"lineNumber":3,"author":{"gitId":"hengyiqun"},"content":"import java.io.FileWriter;"},{"lineNumber":4,"author":{"gitId":"hengyiqun"},"content":"import java.io.IOException;"},{"lineNumber":5,"author":{"gitId":"hengyiqun"},"content":"import java.time.LocalDate;"},{"lineNumber":6,"author":{"gitId":"hengyiqun"},"content":"import java.time.format.DateTimeFormatter;"},{"lineNumber":7,"author":{"gitId":"hengyiqun"},"content":"import java.util.Scanner;"},{"lineNumber":8,"author":{"gitId":"hengyiqun"},"content":"import java.util.ArrayList;"},{"lineNumber":9,"author":{"gitId":"hengyiqun"},"content":""},{"lineNumber":10,"author":{"gitId":"hengyiqun"},"content":"/**"},{"lineNumber":11,"author":{"gitId":"hengyiqun"},"content":" * Storage loads existing tasks from the file and saves tasks to the file when required"},{"lineNumber":12,"author":{"gitId":"hengyiqun"},"content":" */"},{"lineNumber":13,"author":{"gitId":"hengyiqun"},"content":"public class Storage {"},{"lineNumber":14,"author":{"gitId":"hengyiqun"},"content":"    private String filePath;"},{"lineNumber":15,"author":{"gitId":"hengyiqun"},"content":""},{"lineNumber":16,"author":{"gitId":"hengyiqun"},"content":"    public Storage(String filePath) {"},{"lineNumber":17,"author":{"gitId":"hengyiqun"},"content":"        this.filePath \u003d filePath;"},{"lineNumber":18,"author":{"gitId":"hengyiqun"},"content":"    }"},{"lineNumber":19,"author":{"gitId":"hengyiqun"},"content":""},{"lineNumber":20,"author":{"gitId":"hengyiqun"},"content":"    public ArrayList\u003cTask\u003e load() throws FileNotFoundException{"},{"lineNumber":21,"author":{"gitId":"hengyiqun"},"content":"        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"yyyy-MM-dd\");"},{"lineNumber":22,"author":{"gitId":"hengyiqun"},"content":"        ArrayList\u003cTask\u003e tasks \u003d new ArrayList\u003cTask\u003e();"},{"lineNumber":23,"author":{"gitId":"hengyiqun"},"content":"        File file \u003d new File(this.filePath);"},{"lineNumber":24,"author":{"gitId":"hengyiqun"},"content":"        Scanner fileScanner \u003d new Scanner(file);"},{"lineNumber":25,"author":{"gitId":"hengyiqun"},"content":"        while (fileScanner.hasNext()) {"},{"lineNumber":26,"author":{"gitId":"hengyiqun"},"content":"            String curRecTask \u003d fileScanner.nextLine();"},{"lineNumber":27,"author":{"gitId":"hengyiqun"},"content":"            String[] items \u003d curRecTask.split(\" \\\\| \");"},{"lineNumber":28,"author":{"gitId":"hengyiqun"},"content":"            boolean done \u003d (items[1].equals(\"1\") ? true : false);"},{"lineNumber":29,"author":{"gitId":"hengyiqun"},"content":"            Task temp \u003d new Todo(items[2]);"},{"lineNumber":30,"author":{"gitId":"hengyiqun"},"content":"            if (items[0].equals(\"E\")) {"},{"lineNumber":31,"author":{"gitId":"hengyiqun"},"content":"                LocalDate date \u003d LocalDate.parse(items[3], formatter);"},{"lineNumber":32,"author":{"gitId":"hengyiqun"},"content":"                temp \u003d new Event(items[2], date);"},{"lineNumber":33,"author":{"gitId":"hengyiqun"},"content":"            } else if (items[0].equals(\"D\")) {"},{"lineNumber":34,"author":{"gitId":"hengyiqun"},"content":"                LocalDate date \u003d LocalDate.parse(items[3], formatter);"},{"lineNumber":35,"author":{"gitId":"hengyiqun"},"content":"                temp \u003d new Deadline(items[2], date);"},{"lineNumber":36,"author":{"gitId":"hengyiqun"},"content":"            }"},{"lineNumber":37,"author":{"gitId":"hengyiqun"},"content":"            if (done) {"},{"lineNumber":38,"author":{"gitId":"hengyiqun"},"content":"                temp \u003d temp.markAsDone();"},{"lineNumber":39,"author":{"gitId":"hengyiqun"},"content":"            }"},{"lineNumber":40,"author":{"gitId":"hengyiqun"},"content":"            tasks.add(temp);"},{"lineNumber":41,"author":{"gitId":"hengyiqun"},"content":"        }"},{"lineNumber":42,"author":{"gitId":"hengyiqun"},"content":"        return tasks;"},{"lineNumber":43,"author":{"gitId":"hengyiqun"},"content":"    }"},{"lineNumber":44,"author":{"gitId":"hengyiqun"},"content":""},{"lineNumber":45,"author":{"gitId":"hengyiqun"},"content":"    public void save(TaskList tasks) {"},{"lineNumber":46,"author":{"gitId":"hengyiqun"},"content":"        ArrayList\u003cTask\u003e store \u003d tasks.getList();"},{"lineNumber":47,"author":{"gitId":"hengyiqun"},"content":"        try {"},{"lineNumber":48,"author":{"gitId":"hengyiqun"},"content":"            FileWriter fw \u003d new FileWriter(this.filePath);"},{"lineNumber":49,"author":{"gitId":"hengyiqun"},"content":"            for (Task t : store) {"},{"lineNumber":50,"author":{"gitId":"hengyiqun"},"content":"                String rmb \u003d \"\";"},{"lineNumber":51,"author":{"gitId":"hengyiqun"},"content":"                if (t instanceof Event) {"},{"lineNumber":52,"author":{"gitId":"hengyiqun"},"content":"                    rmb +\u003d \"E\";"},{"lineNumber":53,"author":{"gitId":"hengyiqun"},"content":"                } else if (t instanceof Deadline) {"},{"lineNumber":54,"author":{"gitId":"hengyiqun"},"content":"                    rmb +\u003d \"D\";"},{"lineNumber":55,"author":{"gitId":"hengyiqun"},"content":"                } else if (t instanceof Todo) {"},{"lineNumber":56,"author":{"gitId":"hengyiqun"},"content":"                    rmb +\u003d \"T\";"},{"lineNumber":57,"author":{"gitId":"hengyiqun"},"content":"                }"},{"lineNumber":58,"author":{"gitId":"hengyiqun"},"content":"                rmb +\u003d \" | \";"},{"lineNumber":59,"author":{"gitId":"hengyiqun"},"content":"                if (t.isCompleted()) {"},{"lineNumber":60,"author":{"gitId":"hengyiqun"},"content":"                    rmb +\u003d \"1\";"},{"lineNumber":61,"author":{"gitId":"hengyiqun"},"content":"                } else {"},{"lineNumber":62,"author":{"gitId":"hengyiqun"},"content":"                    rmb +\u003d \"0\";"},{"lineNumber":63,"author":{"gitId":"hengyiqun"},"content":"                }"},{"lineNumber":64,"author":{"gitId":"hengyiqun"},"content":"                rmb +\u003d \" | \";"},{"lineNumber":65,"author":{"gitId":"hengyiqun"},"content":"                rmb +\u003d t.getDescription();"},{"lineNumber":66,"author":{"gitId":"hengyiqun"},"content":"                if (t instanceof DueDate) {"},{"lineNumber":67,"author":{"gitId":"hengyiqun"},"content":"                    rmb +\u003d \" | \";"},{"lineNumber":68,"author":{"gitId":"hengyiqun"},"content":"                    rmb +\u003d ((DueDate) t).getDueDate();"},{"lineNumber":69,"author":{"gitId":"hengyiqun"},"content":"                }"},{"lineNumber":70,"author":{"gitId":"hengyiqun"},"content":"                fw.write(rmb + \"\\n\");"},{"lineNumber":71,"author":{"gitId":"hengyiqun"},"content":"            }"},{"lineNumber":72,"author":{"gitId":"hengyiqun"},"content":"            fw.close();"},{"lineNumber":73,"author":{"gitId":"hengyiqun"},"content":"        } catch (IOException e) {"},{"lineNumber":74,"author":{"gitId":"hengyiqun"},"content":"        }"},{"lineNumber":75,"author":{"gitId":"hengyiqun"},"content":"    }"},{"lineNumber":76,"author":{"gitId":"hengyiqun"},"content":"}"}],"authorContributionMap":{"hengyiqun":76}},{"path":"src/main/java/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"hengyiqun"},"content":"/**"},{"lineNumber":2,"author":{"gitId":"hengyiqun"},"content":" * Task is a parent class for inheriting by specific tasks"},{"lineNumber":3,"author":{"gitId":"hengyiqun"},"content":" */"},{"lineNumber":4,"author":{"gitId":"hengyiqun"},"content":"public class Task {"},{"lineNumber":5,"author":{"gitId":"hengyiqun"},"content":"    protected String description;"},{"lineNumber":6,"author":{"gitId":"hengyiqun"},"content":"    protected boolean isDone;"},{"lineNumber":7,"author":{"gitId":"hengyiqun"},"content":""},{"lineNumber":8,"author":{"gitId":"hengyiqun"},"content":"    public Task(String task) {"},{"lineNumber":9,"author":{"gitId":"hengyiqun"},"content":"        this.description \u003d task;"},{"lineNumber":10,"author":{"gitId":"hengyiqun"},"content":"        this.isDone \u003d false;"},{"lineNumber":11,"author":{"gitId":"hengyiqun"},"content":"    }"},{"lineNumber":12,"author":{"gitId":"hengyiqun"},"content":""},{"lineNumber":13,"author":{"gitId":"hengyiqun"},"content":"    protected Task(String task, boolean isCompleted) {"},{"lineNumber":14,"author":{"gitId":"hengyiqun"},"content":"        this.description \u003d task;"},{"lineNumber":15,"author":{"gitId":"hengyiqun"},"content":"        this.isDone \u003d isCompleted;"},{"lineNumber":16,"author":{"gitId":"hengyiqun"},"content":"    }"},{"lineNumber":17,"author":{"gitId":"hengyiqun"},"content":""},{"lineNumber":18,"author":{"gitId":"hengyiqun"},"content":"    public String getDescription() {"},{"lineNumber":19,"author":{"gitId":"hengyiqun"},"content":"        return this.description;"},{"lineNumber":20,"author":{"gitId":"hengyiqun"},"content":"    }"},{"lineNumber":21,"author":{"gitId":"hengyiqun"},"content":""},{"lineNumber":22,"author":{"gitId":"hengyiqun"},"content":"    public boolean isCompleted() {"},{"lineNumber":23,"author":{"gitId":"hengyiqun"},"content":"        return this.isDone;"},{"lineNumber":24,"author":{"gitId":"hengyiqun"},"content":"    }"},{"lineNumber":25,"author":{"gitId":"hengyiqun"},"content":""},{"lineNumber":26,"author":{"gitId":"hengyiqun"},"content":"    public String isDone() {"},{"lineNumber":27,"author":{"gitId":"hengyiqun"},"content":"        return (isDone ? \"\\u2713\" : \"\\u2718\"); //return tick or X symbols"},{"lineNumber":28,"author":{"gitId":"hengyiqun"},"content":"    }"},{"lineNumber":29,"author":{"gitId":"hengyiqun"},"content":""},{"lineNumber":30,"author":{"gitId":"hengyiqun"},"content":"    public Task markAsDone() {"},{"lineNumber":31,"author":{"gitId":"hengyiqun"},"content":"        return new Task(this.description, true);"},{"lineNumber":32,"author":{"gitId":"hengyiqun"},"content":"    }"},{"lineNumber":33,"author":{"gitId":"hengyiqun"},"content":""},{"lineNumber":34,"author":{"gitId":"hengyiqun"},"content":"    public String toString() {"},{"lineNumber":35,"author":{"gitId":"hengyiqun"},"content":"        if (this.isDone) {"},{"lineNumber":36,"author":{"gitId":"hengyiqun"},"content":"            return \"[X] \" + this.description;"},{"lineNumber":37,"author":{"gitId":"hengyiqun"},"content":"        }"},{"lineNumber":38,"author":{"gitId":"hengyiqun"},"content":"        return \"[ ] \" + this.description;"},{"lineNumber":39,"author":{"gitId":"hengyiqun"},"content":"    }"},{"lineNumber":40,"author":{"gitId":"hengyiqun"},"content":"}"}],"authorContributionMap":{"hengyiqun":40}},{"path":"src/main/java/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"hengyiqun"},"content":"import java.util.ArrayList;"},{"lineNumber":2,"author":{"gitId":"hengyiqun"},"content":""},{"lineNumber":3,"author":{"gitId":"hengyiqun"},"content":"/**"},{"lineNumber":4,"author":{"gitId":"hengyiqun"},"content":" * TaskList stores a list of Task Objects"},{"lineNumber":5,"author":{"gitId":"hengyiqun"},"content":" */"},{"lineNumber":6,"author":{"gitId":"hengyiqun"},"content":"public class TaskList {"},{"lineNumber":7,"author":{"gitId":"hengyiqun"},"content":"    private ArrayList\u003cTask\u003e tasks;"},{"lineNumber":8,"author":{"gitId":"hengyiqun"},"content":""},{"lineNumber":9,"author":{"gitId":"hengyiqun"},"content":"    public TaskList() {"},{"lineNumber":10,"author":{"gitId":"hengyiqun"},"content":"        this.tasks \u003d new ArrayList\u003cTask\u003e();"},{"lineNumber":11,"author":{"gitId":"hengyiqun"},"content":"    }"},{"lineNumber":12,"author":{"gitId":"hengyiqun"},"content":""},{"lineNumber":13,"author":{"gitId":"hengyiqun"},"content":"    public TaskList(ArrayList\u003cTask\u003e tasks) {"},{"lineNumber":14,"author":{"gitId":"hengyiqun"},"content":"        this.tasks \u003d tasks;"},{"lineNumber":15,"author":{"gitId":"hengyiqun"},"content":"    }"},{"lineNumber":16,"author":{"gitId":"hengyiqun"},"content":"    "},{"lineNumber":17,"author":{"gitId":"hengyiqun"},"content":"    public TaskList add(Task task) {"},{"lineNumber":18,"author":{"gitId":"hengyiqun"},"content":"        ArrayList\u003cTask\u003e newTaskList \u003d new ArrayList\u003c\u003e();"},{"lineNumber":19,"author":{"gitId":"hengyiqun"},"content":"        for (Task t: this.tasks) {"},{"lineNumber":20,"author":{"gitId":"hengyiqun"},"content":"            newTaskList.add(t);"},{"lineNumber":21,"author":{"gitId":"hengyiqun"},"content":"        }"},{"lineNumber":22,"author":{"gitId":"hengyiqun"},"content":"        newTaskList.add(task);"},{"lineNumber":23,"author":{"gitId":"hengyiqun"},"content":"        return new TaskList(newTaskList);"},{"lineNumber":24,"author":{"gitId":"hengyiqun"},"content":"    }"},{"lineNumber":25,"author":{"gitId":"hengyiqun"},"content":""},{"lineNumber":26,"author":{"gitId":"hengyiqun"},"content":"    public Task get(int idx) {"},{"lineNumber":27,"author":{"gitId":"hengyiqun"},"content":"        return this.tasks.get(idx);"},{"lineNumber":28,"author":{"gitId":"hengyiqun"},"content":"    }"},{"lineNumber":29,"author":{"gitId":"hengyiqun"},"content":""},{"lineNumber":30,"author":{"gitId":"hengyiqun"},"content":"    public TaskList remove(int index) {"},{"lineNumber":31,"author":{"gitId":"hengyiqun"},"content":"        ArrayList\u003cTask\u003e newTaskList \u003d this.tasks;"},{"lineNumber":32,"author":{"gitId":"hengyiqun"},"content":"        newTaskList.remove(index);"},{"lineNumber":33,"author":{"gitId":"hengyiqun"},"content":"        return new TaskList(newTaskList);"},{"lineNumber":34,"author":{"gitId":"hengyiqun"},"content":"    }"},{"lineNumber":35,"author":{"gitId":"hengyiqun"},"content":""},{"lineNumber":36,"author":{"gitId":"hengyiqun"},"content":"    public ArrayList\u003cTask\u003e getList() {"},{"lineNumber":37,"author":{"gitId":"hengyiqun"},"content":"        return this.tasks;"},{"lineNumber":38,"author":{"gitId":"hengyiqun"},"content":"    }"},{"lineNumber":39,"author":{"gitId":"hengyiqun"},"content":""},{"lineNumber":40,"author":{"gitId":"hengyiqun"},"content":"    public int size() {"},{"lineNumber":41,"author":{"gitId":"hengyiqun"},"content":"        return this.tasks.size();"},{"lineNumber":42,"author":{"gitId":"hengyiqun"},"content":"    }"},{"lineNumber":43,"author":{"gitId":"hengyiqun"},"content":""},{"lineNumber":44,"author":{"gitId":"hengyiqun"},"content":"    public String toString() {"},{"lineNumber":45,"author":{"gitId":"hengyiqun"},"content":"        String res \u003d \"     Here are the tasks in your list:\\n\";"},{"lineNumber":46,"author":{"gitId":"hengyiqun"},"content":"        int count \u003d 1;"},{"lineNumber":47,"author":{"gitId":"hengyiqun"},"content":"        for (Task t : this.tasks) {"},{"lineNumber":48,"author":{"gitId":"hengyiqun"},"content":"            res +\u003d \"     \" + count + \".\" + t;"},{"lineNumber":49,"author":{"gitId":"hengyiqun"},"content":"            count++;"},{"lineNumber":50,"author":{"gitId":"hengyiqun"},"content":"        }"},{"lineNumber":51,"author":{"gitId":"hengyiqun"},"content":"        return res;"},{"lineNumber":52,"author":{"gitId":"hengyiqun"},"content":"    }"},{"lineNumber":53,"author":{"gitId":"hengyiqun"},"content":"}"}],"authorContributionMap":{"hengyiqun":53}},{"path":"src/main/java/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"hengyiqun"},"content":"/**"},{"lineNumber":2,"author":{"gitId":"hengyiqun"},"content":" * Todo is a Task object that does not have a due date"},{"lineNumber":3,"author":{"gitId":"hengyiqun"},"content":" */"},{"lineNumber":4,"author":{"gitId":"hengyiqun"},"content":"public class Todo extends Task {"},{"lineNumber":5,"author":{"gitId":"hengyiqun"},"content":""},{"lineNumber":6,"author":{"gitId":"hengyiqun"},"content":"    public Todo(String description) {"},{"lineNumber":7,"author":{"gitId":"hengyiqun"},"content":"        super(description);"},{"lineNumber":8,"author":{"gitId":"hengyiqun"},"content":"    }"},{"lineNumber":9,"author":{"gitId":"hengyiqun"},"content":""},{"lineNumber":10,"author":{"gitId":"hengyiqun"},"content":"    public Todo(String description, boolean isDone) {"},{"lineNumber":11,"author":{"gitId":"hengyiqun"},"content":"        super(description, isDone);"},{"lineNumber":12,"author":{"gitId":"hengyiqun"},"content":"    }"},{"lineNumber":13,"author":{"gitId":"hengyiqun"},"content":""},{"lineNumber":14,"author":{"gitId":"hengyiqun"},"content":"    public Todo markAsDone() {"},{"lineNumber":15,"author":{"gitId":"hengyiqun"},"content":"        return new Todo(this.description, true);"},{"lineNumber":16,"author":{"gitId":"hengyiqun"},"content":"    }"},{"lineNumber":17,"author":{"gitId":"hengyiqun"},"content":""},{"lineNumber":18,"author":{"gitId":"hengyiqun"},"content":"    @Override"},{"lineNumber":19,"author":{"gitId":"hengyiqun"},"content":"    public String toString() {"},{"lineNumber":20,"author":{"gitId":"hengyiqun"},"content":"        return \"[T]\" + super.toString();"},{"lineNumber":21,"author":{"gitId":"hengyiqun"},"content":"    }"},{"lineNumber":22,"author":{"gitId":"hengyiqun"},"content":"}"}],"authorContributionMap":{"hengyiqun":22}},{"path":"src/main/java/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"hengyiqun"},"content":"import java.time.LocalDate;"},{"lineNumber":2,"author":{"gitId":"hengyiqun"},"content":"import java.util.Scanner;"},{"lineNumber":3,"author":{"gitId":"hengyiqun"},"content":"import java.util.ArrayList;"},{"lineNumber":4,"author":{"gitId":"hengyiqun"},"content":""},{"lineNumber":5,"author":{"gitId":"hengyiqun"},"content":"/**"},{"lineNumber":6,"author":{"gitId":"hengyiqun"},"content":" * Ui allows interactions with the user and prompts user for command"},{"lineNumber":7,"author":{"gitId":"hengyiqun"},"content":" */"},{"lineNumber":8,"author":{"gitId":"hengyiqun"},"content":"public class Ui {"},{"lineNumber":9,"author":{"gitId":"hengyiqun"},"content":"    private final Scanner sc;"},{"lineNumber":10,"author":{"gitId":"hengyiqun"},"content":"    private boolean exit;"},{"lineNumber":11,"author":{"gitId":"hengyiqun"},"content":""},{"lineNumber":12,"author":{"gitId":"hengyiqun"},"content":"    public Ui() {"},{"lineNumber":13,"author":{"gitId":"hengyiqun"},"content":"        this.sc \u003d new Scanner(System.in);"},{"lineNumber":14,"author":{"gitId":"hengyiqun"},"content":"        this.exit \u003d false;"},{"lineNumber":15,"author":{"gitId":"hengyiqun"},"content":"    }"},{"lineNumber":16,"author":{"gitId":"hengyiqun"},"content":""},{"lineNumber":17,"author":{"gitId":"hengyiqun"},"content":"    public void greet() {"},{"lineNumber":18,"author":{"gitId":"hengyiqun"},"content":"        String logo \u003d  \" ____         _        \\n\""},{"lineNumber":19,"author":{"gitId":"hengyiqun"},"content":"                    + \"|  _ \\\\ _   _| | _____ \\n\""},{"lineNumber":20,"author":{"gitId":"hengyiqun"},"content":"                    + \"| | | | | | | |/ / _ \\\\\\n\""},{"lineNumber":21,"author":{"gitId":"hengyiqun"},"content":"                    + \"| |_| | |_| |   \u003c  __/\\n\""},{"lineNumber":22,"author":{"gitId":"hengyiqun"},"content":"                    + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\";"},{"lineNumber":23,"author":{"gitId":"hengyiqun"},"content":"        String greeting \u003d \"Hello from\\n\" + logo;"},{"lineNumber":24,"author":{"gitId":"hengyiqun"},"content":"        greeting +\u003d \"    ____________________________________________________________\\n\";"},{"lineNumber":25,"author":{"gitId":"hengyiqun"},"content":"        greeting +\u003d \"     Hello! I\u0027m Duke\\n\";"},{"lineNumber":26,"author":{"gitId":"hengyiqun"},"content":"        greeting +\u003d \"     What can I do for you?\\n\";"},{"lineNumber":27,"author":{"gitId":"hengyiqun"},"content":"        greeting +\u003d \"    ____________________________________________________________\\n\";"},{"lineNumber":28,"author":{"gitId":"hengyiqun"},"content":"        System.out.println(greeting);"},{"lineNumber":29,"author":{"gitId":"hengyiqun"},"content":"    }"},{"lineNumber":30,"author":{"gitId":"hengyiqun"},"content":""},{"lineNumber":31,"author":{"gitId":"hengyiqun"},"content":"    public TaskList process(TaskList tasks) {"},{"lineNumber":32,"author":{"gitId":"hengyiqun"},"content":"        String input \u003d this.next();"},{"lineNumber":33,"author":{"gitId":"hengyiqun"},"content":"        Parser parser \u003d new Parser();"},{"lineNumber":34,"author":{"gitId":"hengyiqun"},"content":"        parser \u003d parser.parse(input);"},{"lineNumber":35,"author":{"gitId":"hengyiqun"},"content":"        if (parser.getTaskType().equals(\"bye\")) {"},{"lineNumber":36,"author":{"gitId":"hengyiqun"},"content":"            String msg \u003d this.format(\"     Bye. Hope to see you again soon!\");"},{"lineNumber":37,"author":{"gitId":"hengyiqun"},"content":"            System.out.println(msg);"},{"lineNumber":38,"author":{"gitId":"hengyiqun"},"content":"            this.exit \u003d true;"},{"lineNumber":39,"author":{"gitId":"hengyiqun"},"content":"            return tasks;"},{"lineNumber":40,"author":{"gitId":"hengyiqun"},"content":"        } else if (parser.getTaskType().equals(\"list\")) {"},{"lineNumber":41,"author":{"gitId":"hengyiqun"},"content":"            String msg \u003d \"     Here are the tasks in your list:\\n\";"},{"lineNumber":42,"author":{"gitId":"hengyiqun"},"content":"            ArrayList\u003cTask\u003e taskList \u003d tasks.getList();"},{"lineNumber":43,"author":{"gitId":"hengyiqun"},"content":"            int count \u003d 1;"},{"lineNumber":44,"author":{"gitId":"hengyiqun"},"content":"            for (Task t : taskList) {"},{"lineNumber":45,"author":{"gitId":"hengyiqun"},"content":"                if (count \u003d\u003d taskList.size()) {"},{"lineNumber":46,"author":{"gitId":"hengyiqun"},"content":"                    msg +\u003d \"     \" + count + \".\" + t.toString();"},{"lineNumber":47,"author":{"gitId":"hengyiqun"},"content":"                } else {"},{"lineNumber":48,"author":{"gitId":"hengyiqun"},"content":"                    msg +\u003d \"     \" + count + \".\" + t.toString() + \"\\n\";"},{"lineNumber":49,"author":{"gitId":"hengyiqun"},"content":"                }"},{"lineNumber":50,"author":{"gitId":"hengyiqun"},"content":"                count++;"},{"lineNumber":51,"author":{"gitId":"hengyiqun"},"content":"            }"},{"lineNumber":52,"author":{"gitId":"hengyiqun"},"content":"            System.out.println(this.format(msg));"},{"lineNumber":53,"author":{"gitId":"hengyiqun"},"content":"            return tasks;"},{"lineNumber":54,"author":{"gitId":"hengyiqun"},"content":"        } else if (parser.getTaskType().equals(\"done\")) {"},{"lineNumber":55,"author":{"gitId":"hengyiqun"},"content":"            int count \u003d 1;"},{"lineNumber":56,"author":{"gitId":"hengyiqun"},"content":"            ArrayList\u003cTask\u003e taskList \u003d tasks.getList();"},{"lineNumber":57,"author":{"gitId":"hengyiqun"},"content":"            String msg \u003d \"     Nice! I\u0027ve marked this task as done:\\n\";"},{"lineNumber":58,"author":{"gitId":"hengyiqun"},"content":"            int taskDone \u003d parser.getTaskIdx();"},{"lineNumber":59,"author":{"gitId":"hengyiqun"},"content":"            for (int i \u003d 0; i \u003c taskList.size(); ++i) {"},{"lineNumber":60,"author":{"gitId":"hengyiqun"},"content":"                if (i \u003d\u003d taskDone - 1) {"},{"lineNumber":61,"author":{"gitId":"hengyiqun"},"content":"                    taskList.set(i, taskList.get(i).markAsDone());"},{"lineNumber":62,"author":{"gitId":"hengyiqun"},"content":"                    msg +\u003d \"     \" + taskList.get(i);"},{"lineNumber":63,"author":{"gitId":"hengyiqun"},"content":"                }"},{"lineNumber":64,"author":{"gitId":"hengyiqun"},"content":"            }"},{"lineNumber":65,"author":{"gitId":"hengyiqun"},"content":"            System.out.println(this.format(msg));"},{"lineNumber":66,"author":{"gitId":"hengyiqun"},"content":"            return new TaskList(taskList);"},{"lineNumber":67,"author":{"gitId":"hengyiqun"},"content":"        } else if (parser.getTaskType().equals(\"delete\")) {"},{"lineNumber":68,"author":{"gitId":"hengyiqun"},"content":"            int taskToDelete \u003d parser.getTaskIdx();"},{"lineNumber":69,"author":{"gitId":"hengyiqun"},"content":"            String msg \u003d \"     Noted. I\u0027ve removed this task: \\n\";"},{"lineNumber":70,"author":{"gitId":"hengyiqun"},"content":"            msg +\u003d \"     \" + tasks.get(taskToDelete - 1) + \"\\n\";"},{"lineNumber":71,"author":{"gitId":"hengyiqun"},"content":"            tasks.remove(taskToDelete - 1);"},{"lineNumber":72,"author":{"gitId":"hengyiqun"},"content":"            msg +\u003d \"     Now you have \" + tasks.size() + \" tasks in the list.\";"},{"lineNumber":73,"author":{"gitId":"hengyiqun"},"content":"            System.out.println(this.format(msg));"},{"lineNumber":74,"author":{"gitId":"hengyiqun"},"content":"            return tasks;"},{"lineNumber":75,"author":{"gitId":"hengyiqun"},"content":"        } else if (parser.getTaskType().equals(\"find\")) {"},{"lineNumber":76,"author":{"gitId":"hengyiqun"},"content":"            String toFind \u003d parser.getDescription();"},{"lineNumber":77,"author":{"gitId":"hengyiqun"},"content":"            ArrayList\u003cTask\u003e taskList \u003d tasks.getList();"},{"lineNumber":78,"author":{"gitId":"hengyiqun"},"content":"            String msg \u003d \"     Here are the matching tasks in your list:\\n\";"},{"lineNumber":79,"author":{"gitId":"hengyiqun"},"content":"            boolean first \u003d true;"},{"lineNumber":80,"author":{"gitId":"hengyiqun"},"content":"            for (int i \u003d 0; i \u003c taskList.size(); ++i) {"},{"lineNumber":81,"author":{"gitId":"hengyiqun"},"content":"                if (taskList.get(i).getDescription().contains(toFind)) {"},{"lineNumber":82,"author":{"gitId":"hengyiqun"},"content":"                    if (first) {"},{"lineNumber":83,"author":{"gitId":"hengyiqun"},"content":"                        msg +\u003d \"     \" + (i + 1) + \".\" + taskList.get(i).toString();"},{"lineNumber":84,"author":{"gitId":"hengyiqun"},"content":"                        first \u003d false;"},{"lineNumber":85,"author":{"gitId":"hengyiqun"},"content":"                    } else {"},{"lineNumber":86,"author":{"gitId":"hengyiqun"},"content":"                        msg +\u003d \"\\n     \" + (i + 1) + \".\" + taskList.get(i).toString();"},{"lineNumber":87,"author":{"gitId":"hengyiqun"},"content":"                    }"},{"lineNumber":88,"author":{"gitId":"hengyiqun"},"content":"                }"},{"lineNumber":89,"author":{"gitId":"hengyiqun"},"content":"            }"},{"lineNumber":90,"author":{"gitId":"hengyiqun"},"content":"            if (first) {"},{"lineNumber":91,"author":{"gitId":"hengyiqun"},"content":"                msg \u003d \"     There are no matching tasks\";"},{"lineNumber":92,"author":{"gitId":"hengyiqun"},"content":"            }"},{"lineNumber":93,"author":{"gitId":"hengyiqun"},"content":"            System.out.println(this.format(msg));"},{"lineNumber":94,"author":{"gitId":"hengyiqun"},"content":"            return tasks;"},{"lineNumber":95,"author":{"gitId":"hengyiqun"},"content":"        } else if (parser.getTaskType().equals(\"todo\")) {"},{"lineNumber":96,"author":{"gitId":"hengyiqun"},"content":"            String msg \u003d \"     Got it. I\u0027ve added this task:\\n\";"},{"lineNumber":97,"author":{"gitId":"hengyiqun"},"content":"            String taskDescription \u003d parser.getDescription();"},{"lineNumber":98,"author":{"gitId":"hengyiqun"},"content":"            Todo todo \u003d new Todo(taskDescription);"},{"lineNumber":99,"author":{"gitId":"hengyiqun"},"content":"            tasks \u003d tasks.add(todo);"},{"lineNumber":100,"author":{"gitId":"hengyiqun"},"content":"            msg +\u003d \"     \" + todo + \"\\n\";"},{"lineNumber":101,"author":{"gitId":"hengyiqun"},"content":"            msg +\u003d \"     Now you have \" + tasks.size() + \" tasks in the list.\";"},{"lineNumber":102,"author":{"gitId":"hengyiqun"},"content":"            System.out.println(this.format(msg));"},{"lineNumber":103,"author":{"gitId":"hengyiqun"},"content":"        } else if (parser.getTaskType().equals(\"deadline\")) {"},{"lineNumber":104,"author":{"gitId":"hengyiqun"},"content":"            String msg \u003d \"     Got it. I\u0027ve added this task:\\n\";"},{"lineNumber":105,"author":{"gitId":"hengyiqun"},"content":"            LocalDate dueDate \u003d parser.getDueDate();"},{"lineNumber":106,"author":{"gitId":"hengyiqun"},"content":"            String taskDescription \u003d parser.getDescription();"},{"lineNumber":107,"author":{"gitId":"hengyiqun"},"content":"            Deadline deadline \u003d new Deadline(taskDescription, dueDate);"},{"lineNumber":108,"author":{"gitId":"hengyiqun"},"content":"            tasks \u003d tasks.add(deadline);"},{"lineNumber":109,"author":{"gitId":"hengyiqun"},"content":"            msg +\u003d \"     \" + deadline + \"\\n\";"},{"lineNumber":110,"author":{"gitId":"hengyiqun"},"content":"            msg +\u003d \"     Now you have \" + tasks.size() + \" tasks in the list.\\n\";"},{"lineNumber":111,"author":{"gitId":"hengyiqun"},"content":"            System.out.println(this.format(msg));"},{"lineNumber":112,"author":{"gitId":"hengyiqun"},"content":"            return tasks;"},{"lineNumber":113,"author":{"gitId":"hengyiqun"},"content":"        } else if (parser.getTaskType().equals(\"event\")) {"},{"lineNumber":114,"author":{"gitId":"hengyiqun"},"content":"            String msg \u003d \"     Got it. I\u0027ve added this task:\\n\";"},{"lineNumber":115,"author":{"gitId":"hengyiqun"},"content":"            LocalDate date \u003d parser.getDueDate();"},{"lineNumber":116,"author":{"gitId":"hengyiqun"},"content":"            String eventDescription \u003d parser.getDescription();"},{"lineNumber":117,"author":{"gitId":"hengyiqun"},"content":"            Event event \u003d new Event(eventDescription, date);"},{"lineNumber":118,"author":{"gitId":"hengyiqun"},"content":"            tasks \u003d tasks.add(event);"},{"lineNumber":119,"author":{"gitId":"hengyiqun"},"content":"            msg +\u003d \"     \" + event + \"\\n\";"},{"lineNumber":120,"author":{"gitId":"hengyiqun"},"content":"            msg +\u003d \"     Now you have \" + tasks.size() + \" tasks in the list.\";"},{"lineNumber":121,"author":{"gitId":"hengyiqun"},"content":"            System.out.println(this.format(msg));"},{"lineNumber":122,"author":{"gitId":"hengyiqun"},"content":"            return tasks;"},{"lineNumber":123,"author":{"gitId":"hengyiqun"},"content":"        } else {"},{"lineNumber":124,"author":{"gitId":"hengyiqun"},"content":"            System.out.println(this.format(parser.getDescription()));"},{"lineNumber":125,"author":{"gitId":"hengyiqun"},"content":"        }"},{"lineNumber":126,"author":{"gitId":"hengyiqun"},"content":"        return tasks;"},{"lineNumber":127,"author":{"gitId":"hengyiqun"},"content":"    }"},{"lineNumber":128,"author":{"gitId":"hengyiqun"},"content":""},{"lineNumber":129,"author":{"gitId":"hengyiqun"},"content":"    public boolean hasNext() {"},{"lineNumber":130,"author":{"gitId":"hengyiqun"},"content":"        return this.sc.hasNext();"},{"lineNumber":131,"author":{"gitId":"hengyiqun"},"content":"    }"},{"lineNumber":132,"author":{"gitId":"hengyiqun"},"content":""},{"lineNumber":133,"author":{"gitId":"hengyiqun"},"content":"    private String next() {"},{"lineNumber":134,"author":{"gitId":"hengyiqun"},"content":"        return this.sc.nextLine();"},{"lineNumber":135,"author":{"gitId":"hengyiqun"},"content":"    }"},{"lineNumber":136,"author":{"gitId":"hengyiqun"},"content":""},{"lineNumber":137,"author":{"gitId":"hengyiqun"},"content":"    public boolean shouldExit() {"},{"lineNumber":138,"author":{"gitId":"hengyiqun"},"content":"        return this.exit;"},{"lineNumber":139,"author":{"gitId":"hengyiqun"},"content":"    }"},{"lineNumber":140,"author":{"gitId":"hengyiqun"},"content":""},{"lineNumber":141,"author":{"gitId":"hengyiqun"},"content":"    public String format(String response) {"},{"lineNumber":142,"author":{"gitId":"hengyiqun"},"content":"        String res \u003d \"    ____________________________________________________________\\n\";"},{"lineNumber":143,"author":{"gitId":"hengyiqun"},"content":"        res +\u003d response + \"\\n\";"},{"lineNumber":144,"author":{"gitId":"hengyiqun"},"content":"        res +\u003d \"    ____________________________________________________________\\n\";"},{"lineNumber":145,"author":{"gitId":"hengyiqun"},"content":"        return res;"},{"lineNumber":146,"author":{"gitId":"hengyiqun"},"content":"    }"},{"lineNumber":147,"author":{"gitId":"hengyiqun"},"content":"}"}],"authorContributionMap":{"hengyiqun":147}},{"path":"src/main/java/WrongArgumentException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"hengyiqun"},"content":"/**"},{"lineNumber":2,"author":{"gitId":"hengyiqun"},"content":" * WrongArgumentsException is raised when the user gives invalid commands"},{"lineNumber":3,"author":{"gitId":"hengyiqun"},"content":" */"},{"lineNumber":4,"author":{"gitId":"hengyiqun"},"content":""},{"lineNumber":5,"author":{"gitId":"hengyiqun"},"content":"public class WrongArgumentException extends Exception {"},{"lineNumber":6,"author":{"gitId":"hengyiqun"},"content":"    public WrongArgumentException(String e) {"},{"lineNumber":7,"author":{"gitId":"hengyiqun"},"content":"        super(e);"},{"lineNumber":8,"author":{"gitId":"hengyiqun"},"content":"    }"},{"lineNumber":9,"author":{"gitId":"hengyiqun"},"content":"}"}],"authorContributionMap":{"hengyiqun":9}},{"path":"src/test/java/TaskListTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"hengyiqun"},"content":"import org.junit.jupiter.api.Test;"},{"lineNumber":2,"author":{"gitId":"hengyiqun"},"content":""},{"lineNumber":3,"author":{"gitId":"hengyiqun"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;"},{"lineNumber":4,"author":{"gitId":"hengyiqun"},"content":"import static org.junit.jupiter.api.Assertions.assertNotEquals;"},{"lineNumber":5,"author":{"gitId":"hengyiqun"},"content":"import java.util.ArrayList;"},{"lineNumber":6,"author":{"gitId":"hengyiqun"},"content":""},{"lineNumber":7,"author":{"gitId":"hengyiqun"},"content":"public class TaskListTest {"},{"lineNumber":8,"author":{"gitId":"hengyiqun"},"content":"    @Test"},{"lineNumber":9,"author":{"gitId":"hengyiqun"},"content":"    public void addTest() {"},{"lineNumber":10,"author":{"gitId":"hengyiqun"},"content":"        Task t1 \u003d new Task(\"random1\");"},{"lineNumber":11,"author":{"gitId":"hengyiqun"},"content":"        Task t2 \u003d new Task(\"random2\");"},{"lineNumber":12,"author":{"gitId":"hengyiqun"},"content":"        Task t3 \u003d new Task(\"random3\");"},{"lineNumber":13,"author":{"gitId":"hengyiqun"},"content":"        ArrayList\u003cTask\u003e tasks \u003d new ArrayList\u003cTask\u003e();"},{"lineNumber":14,"author":{"gitId":"hengyiqun"},"content":"        tasks.add(t1);"},{"lineNumber":15,"author":{"gitId":"hengyiqun"},"content":"        tasks.add(t2);"},{"lineNumber":16,"author":{"gitId":"hengyiqun"},"content":"        tasks.add(t3);"},{"lineNumber":17,"author":{"gitId":"hengyiqun"},"content":"        TaskList taskList \u003d new TaskList(tasks);"},{"lineNumber":18,"author":{"gitId":"hengyiqun"},"content":"        assertEquals(taskList.get(0), t1);"},{"lineNumber":19,"author":{"gitId":"hengyiqun"},"content":"        assertNotEquals(taskList.get(0), t3);"},{"lineNumber":20,"author":{"gitId":"hengyiqun"},"content":"    }"},{"lineNumber":21,"author":{"gitId":"hengyiqun"},"content":"}"}],"authorContributionMap":{"hengyiqun":21}},{"path":"src/test/java/TaskTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"hengyiqun"},"content":"import org.junit.jupiter.api.Test;"},{"lineNumber":2,"author":{"gitId":"hengyiqun"},"content":""},{"lineNumber":3,"author":{"gitId":"hengyiqun"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;"},{"lineNumber":4,"author":{"gitId":"hengyiqun"},"content":""},{"lineNumber":5,"author":{"gitId":"hengyiqun"},"content":"public class TaskTest {"},{"lineNumber":6,"author":{"gitId":"hengyiqun"},"content":"    @Test"},{"lineNumber":7,"author":{"gitId":"hengyiqun"},"content":"    public void initialisationTest() {"},{"lineNumber":8,"author":{"gitId":"hengyiqun"},"content":"        Task t \u003d new Task(\"random\");"},{"lineNumber":9,"author":{"gitId":"hengyiqun"},"content":"        assertEquals(t.isCompleted(), false);"},{"lineNumber":10,"author":{"gitId":"hengyiqun"},"content":"    }"},{"lineNumber":11,"author":{"gitId":"hengyiqun"},"content":""},{"lineNumber":12,"author":{"gitId":"hengyiqun"},"content":"    @Test"},{"lineNumber":13,"author":{"gitId":"hengyiqun"},"content":"    public void isDoneTest() {"},{"lineNumber":14,"author":{"gitId":"hengyiqun"},"content":"        Task t \u003d new Task(\"random\");"},{"lineNumber":15,"author":{"gitId":"hengyiqun"},"content":"        t \u003d t.markAsDone();"},{"lineNumber":16,"author":{"gitId":"hengyiqun"},"content":"        assertEquals(t.isCompleted(), true);"},{"lineNumber":17,"author":{"gitId":"hengyiqun"},"content":"    }"},{"lineNumber":18,"author":{"gitId":"hengyiqun"},"content":"}"}],"authorContributionMap":{"hengyiqun":18}},{"path":"src/test/java/TodoTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"hengyiqun"},"content":"import org.junit.jupiter.api.Test;"},{"lineNumber":2,"author":{"gitId":"hengyiqun"},"content":""},{"lineNumber":3,"author":{"gitId":"hengyiqun"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;"},{"lineNumber":4,"author":{"gitId":"hengyiqun"},"content":""},{"lineNumber":5,"author":{"gitId":"hengyiqun"},"content":"public class TodoTest {"},{"lineNumber":6,"author":{"gitId":"hengyiqun"},"content":"    @Test"},{"lineNumber":7,"author":{"gitId":"hengyiqun"},"content":"    public void initialisationTest() {"},{"lineNumber":8,"author":{"gitId":"hengyiqun"},"content":"        Todo t \u003d new Todo(\"random\");"},{"lineNumber":9,"author":{"gitId":"hengyiqun"},"content":"        assertEquals(t.isCompleted(), false);"},{"lineNumber":10,"author":{"gitId":"hengyiqun"},"content":"    }"},{"lineNumber":11,"author":{"gitId":"hengyiqun"},"content":""},{"lineNumber":12,"author":{"gitId":"hengyiqun"},"content":"    @Test"},{"lineNumber":13,"author":{"gitId":"hengyiqun"},"content":"    public void isDoneTest() {"},{"lineNumber":14,"author":{"gitId":"hengyiqun"},"content":"        Todo t \u003d new Todo(\"random\");"},{"lineNumber":15,"author":{"gitId":"hengyiqun"},"content":"        t \u003d t.markAsDone();"},{"lineNumber":16,"author":{"gitId":"hengyiqun"},"content":"        assertEquals(t.isCompleted(), true);"},{"lineNumber":17,"author":{"gitId":"hengyiqun"},"content":"    }"},{"lineNumber":18,"author":{"gitId":"hengyiqun"},"content":"}"}],"authorContributionMap":{"hengyiqun":18}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"hengyiqun"},"content":"todo borrow book"},{"lineNumber":2,"author":{"gitId":"hengyiqun"},"content":"list"},{"lineNumber":3,"author":{"gitId":"hengyiqun"},"content":"deadline return book /by Sunday"},{"lineNumber":4,"author":{"gitId":"hengyiqun"},"content":"event project meeting /at Mon 2-4pm"},{"lineNumber":5,"author":{"gitId":"hengyiqun"},"content":"deadline do homework /by no idea :-p"},{"lineNumber":6,"author":{"gitId":"hengyiqun"},"content":"done 1"},{"lineNumber":7,"author":{"gitId":"hengyiqun"},"content":"done 2"},{"lineNumber":8,"author":{"gitId":"hengyiqun"},"content":"list"},{"lineNumber":9,"author":{"gitId":"hengyiqun"},"content":"done 4"},{"lineNumber":10,"author":{"gitId":"hengyiqun"},"content":"list"},{"lineNumber":11,"author":{"gitId":"hengyiqun"},"content":"bye"}],"authorContributionMap":{"hengyiqun":11}}]
