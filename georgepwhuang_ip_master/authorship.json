[{"path":"src/main/java/Blarb.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"georgepwhuang"},"content":"import java.util.ArrayList;"},{"lineNumber":2,"author":{"gitId":"georgepwhuang"},"content":"import java.util.List;"},{"lineNumber":3,"author":{"gitId":"georgepwhuang"},"content":""},{"lineNumber":4,"author":{"gitId":"georgepwhuang"},"content":"/**"},{"lineNumber":5,"author":{"gitId":"georgepwhuang"},"content":" * {@code Blarb} is the chat bot in used in the main {@code Duke} program."},{"lineNumber":6,"author":{"gitId":"georgepwhuang"},"content":" */"},{"lineNumber":7,"author":{"gitId":"georgepwhuang"},"content":"public class Blarb {"},{"lineNumber":8,"author":{"gitId":"georgepwhuang"},"content":"    private final List\u003cTask\u003e list;"},{"lineNumber":9,"author":{"gitId":"georgepwhuang"},"content":""},{"lineNumber":10,"author":{"gitId":"georgepwhuang"},"content":"    /**"},{"lineNumber":11,"author":{"gitId":"georgepwhuang"},"content":"     * Initializes Blarb."},{"lineNumber":12,"author":{"gitId":"georgepwhuang"},"content":"     */"},{"lineNumber":13,"author":{"gitId":"georgepwhuang"},"content":"    public Blarb() {"},{"lineNumber":14,"author":{"gitId":"georgepwhuang"},"content":"        list \u003d new ArrayList\u003c\u003e(100);"},{"lineNumber":15,"author":{"gitId":"georgepwhuang"},"content":"        blurt(\"This is BLARB.\\nYou may speak.\");"},{"lineNumber":16,"author":{"gitId":"georgepwhuang"},"content":"    }"},{"lineNumber":17,"author":{"gitId":"georgepwhuang"},"content":""},{"lineNumber":18,"author":{"gitId":"georgepwhuang"},"content":"    /**"},{"lineNumber":19,"author":{"gitId":"georgepwhuang"},"content":"     * Prints output in response format."},{"lineNumber":20,"author":{"gitId":"georgepwhuang"},"content":"     *"},{"lineNumber":21,"author":{"gitId":"georgepwhuang"},"content":"     * @param output Output string"},{"lineNumber":22,"author":{"gitId":"georgepwhuang"},"content":"     */"},{"lineNumber":23,"author":{"gitId":"georgepwhuang"},"content":"    private void blurt(String output) {"},{"lineNumber":24,"author":{"gitId":"georgepwhuang"},"content":"        String response \u003d \"%s\\n\\n\u003e \";"},{"lineNumber":25,"author":{"gitId":"georgepwhuang"},"content":"        System.out.printf(response, output);"},{"lineNumber":26,"author":{"gitId":"georgepwhuang"},"content":"    }"},{"lineNumber":27,"author":{"gitId":"georgepwhuang"},"content":""},{"lineNumber":28,"author":{"gitId":"georgepwhuang"},"content":"    /**"},{"lineNumber":29,"author":{"gitId":"georgepwhuang"},"content":"     * Prints the task list."},{"lineNumber":30,"author":{"gitId":"georgepwhuang"},"content":"     */"},{"lineNumber":31,"author":{"gitId":"georgepwhuang"},"content":"    private void list() {"},{"lineNumber":32,"author":{"gitId":"georgepwhuang"},"content":"        if (list.size() \u003c 1) {"},{"lineNumber":33,"author":{"gitId":"georgepwhuang"},"content":"            blurt(\"You have nothing on your list.\");"},{"lineNumber":34,"author":{"gitId":"georgepwhuang"},"content":"        } else {"},{"lineNumber":35,"author":{"gitId":"georgepwhuang"},"content":"            int i \u003d 1;"},{"lineNumber":36,"author":{"gitId":"georgepwhuang"},"content":"            StringBuilder sb \u003d new StringBuilder(\"Here are your tasks:\\n\");"},{"lineNumber":37,"author":{"gitId":"georgepwhuang"},"content":"            for (Task task : list) {"},{"lineNumber":38,"author":{"gitId":"georgepwhuang"},"content":"                sb.append(String.format(\"\\n%d. %s\", i++, task.toString()));"},{"lineNumber":39,"author":{"gitId":"georgepwhuang"},"content":"            }"},{"lineNumber":40,"author":{"gitId":"georgepwhuang"},"content":"            blurt(sb.substring(0));"},{"lineNumber":41,"author":{"gitId":"georgepwhuang"},"content":"        }"},{"lineNumber":42,"author":{"gitId":"georgepwhuang"},"content":"    }"},{"lineNumber":43,"author":{"gitId":"georgepwhuang"},"content":""},{"lineNumber":44,"author":{"gitId":"georgepwhuang"},"content":"    /**"},{"lineNumber":45,"author":{"gitId":"georgepwhuang"},"content":"     * Changes the indexed task to a completed state."},{"lineNumber":46,"author":{"gitId":"georgepwhuang"},"content":"     *"},{"lineNumber":47,"author":{"gitId":"georgepwhuang"},"content":"     * @param index The index of the task."},{"lineNumber":48,"author":{"gitId":"georgepwhuang"},"content":"     */"},{"lineNumber":49,"author":{"gitId":"georgepwhuang"},"content":"    private void done(int index) {"},{"lineNumber":50,"author":{"gitId":"georgepwhuang"},"content":"        try {"},{"lineNumber":51,"author":{"gitId":"georgepwhuang"},"content":"            list.get(index).markAsDone();"},{"lineNumber":52,"author":{"gitId":"georgepwhuang"},"content":"            String done \u003d \"I\u0027ve marked this task as done:\\n%s\";"},{"lineNumber":53,"author":{"gitId":"georgepwhuang"},"content":"            blurt(String.format(done, list.get(index)));"},{"lineNumber":54,"author":{"gitId":"georgepwhuang"},"content":"        } catch (IndexOutOfBoundsException ex) {"},{"lineNumber":55,"author":{"gitId":"georgepwhuang"},"content":"            blurt(\"There is no such task.\");"},{"lineNumber":56,"author":{"gitId":"georgepwhuang"},"content":"        }"},{"lineNumber":57,"author":{"gitId":"georgepwhuang"},"content":"    }"},{"lineNumber":58,"author":{"gitId":"georgepwhuang"},"content":""},{"lineNumber":59,"author":{"gitId":"georgepwhuang"},"content":"    /**"},{"lineNumber":60,"author":{"gitId":"georgepwhuang"},"content":"     * Delete the indexed task."},{"lineNumber":61,"author":{"gitId":"georgepwhuang"},"content":"     *"},{"lineNumber":62,"author":{"gitId":"georgepwhuang"},"content":"     * @param index The index of the task."},{"lineNumber":63,"author":{"gitId":"georgepwhuang"},"content":"     */"},{"lineNumber":64,"author":{"gitId":"georgepwhuang"},"content":"    private void delete(int index) {"},{"lineNumber":65,"author":{"gitId":"georgepwhuang"},"content":"        try {"},{"lineNumber":66,"author":{"gitId":"georgepwhuang"},"content":"            String delete \u003d \"The task is terminated:\\n%s\";"},{"lineNumber":67,"author":{"gitId":"georgepwhuang"},"content":"            blurt(String.format(delete, list.get(index)));"},{"lineNumber":68,"author":{"gitId":"georgepwhuang"},"content":"            list.remove(index);"},{"lineNumber":69,"author":{"gitId":"georgepwhuang"},"content":"        } catch (IndexOutOfBoundsException ex) {"},{"lineNumber":70,"author":{"gitId":"georgepwhuang"},"content":"            blurt(\"There is no such task.\");"},{"lineNumber":71,"author":{"gitId":"georgepwhuang"},"content":"        }"},{"lineNumber":72,"author":{"gitId":"georgepwhuang"},"content":"    }"},{"lineNumber":73,"author":{"gitId":"georgepwhuang"},"content":""},{"lineNumber":74,"author":{"gitId":"georgepwhuang"},"content":"    /**"},{"lineNumber":75,"author":{"gitId":"georgepwhuang"},"content":"     * Adds a new Task to the task list."},{"lineNumber":76,"author":{"gitId":"georgepwhuang"},"content":"     *"},{"lineNumber":77,"author":{"gitId":"georgepwhuang"},"content":"     * @param task Task to be added."},{"lineNumber":78,"author":{"gitId":"georgepwhuang"},"content":"     */"},{"lineNumber":79,"author":{"gitId":"georgepwhuang"},"content":"    private void add(Task task) {"},{"lineNumber":80,"author":{"gitId":"georgepwhuang"},"content":"        String addTask \u003d \"Affirmative. I\u0027ve added this task:\\n %s\\n\""},{"lineNumber":81,"author":{"gitId":"georgepwhuang"},"content":"                + \"Now you have %d tasks in the list.\";"},{"lineNumber":82,"author":{"gitId":"georgepwhuang"},"content":"        list.add(task);"},{"lineNumber":83,"author":{"gitId":"georgepwhuang"},"content":"        blurt(String.format(addTask, task.toString(), list.size()));"},{"lineNumber":84,"author":{"gitId":"georgepwhuang"},"content":"    }"},{"lineNumber":85,"author":{"gitId":"georgepwhuang"},"content":""},{"lineNumber":86,"author":{"gitId":"georgepwhuang"},"content":"    /**"},{"lineNumber":87,"author":{"gitId":"georgepwhuang"},"content":"     * Parses and determines course of action for Blurb."},{"lineNumber":88,"author":{"gitId":"georgepwhuang"},"content":"     *"},{"lineNumber":89,"author":{"gitId":"georgepwhuang"},"content":"     * @param input The inputted command."},{"lineNumber":90,"author":{"gitId":"georgepwhuang"},"content":"     * @return A boolean value that shows the availability for the next command intake."},{"lineNumber":91,"author":{"gitId":"georgepwhuang"},"content":"     */"},{"lineNumber":92,"author":{"gitId":"georgepwhuang"},"content":"    public boolean execute(String input) {"},{"lineNumber":93,"author":{"gitId":"georgepwhuang"},"content":"        if (input.equalsIgnoreCase(\"bye\")) {"},{"lineNumber":94,"author":{"gitId":"georgepwhuang"},"content":"            System.out.println(\"Hasta la vida, baby.\");"},{"lineNumber":95,"author":{"gitId":"georgepwhuang"},"content":"            return false;"},{"lineNumber":96,"author":{"gitId":"georgepwhuang"},"content":"        }"},{"lineNumber":97,"author":{"gitId":"georgepwhuang"},"content":""},{"lineNumber":98,"author":{"gitId":"georgepwhuang"},"content":"        //Splits the input into two parts -- the command and the description."},{"lineNumber":99,"author":{"gitId":"georgepwhuang"},"content":"        String[] tokens \u003d input.split(\" \", 2);"},{"lineNumber":100,"author":{"gitId":"georgepwhuang"},"content":""},{"lineNumber":101,"author":{"gitId":"georgepwhuang"},"content":"        //Calls method and handles exception according to command"},{"lineNumber":102,"author":{"gitId":"georgepwhuang"},"content":"        switch (Command.command(tokens[0])) {"},{"lineNumber":103,"author":{"gitId":"georgepwhuang"},"content":"        case DONE:"},{"lineNumber":104,"author":{"gitId":"georgepwhuang"},"content":"            try {"},{"lineNumber":105,"author":{"gitId":"georgepwhuang"},"content":"                int idx \u003d Integer.parseInt(tokens[1]) - 1;"},{"lineNumber":106,"author":{"gitId":"georgepwhuang"},"content":"                done(idx);"},{"lineNumber":107,"author":{"gitId":"georgepwhuang"},"content":"            } catch (ArrayIndexOutOfBoundsException ex) {"},{"lineNumber":108,"author":{"gitId":"georgepwhuang"},"content":"                blurt(\"What have you done! More specific!\");"},{"lineNumber":109,"author":{"gitId":"georgepwhuang"},"content":"            } catch (NumberFormatException ex) {"},{"lineNumber":110,"author":{"gitId":"georgepwhuang"},"content":"                blurt(\"Done what now? I don\u0027t understand\");"},{"lineNumber":111,"author":{"gitId":"georgepwhuang"},"content":"            }"},{"lineNumber":112,"author":{"gitId":"georgepwhuang"},"content":"            break;"},{"lineNumber":113,"author":{"gitId":"georgepwhuang"},"content":"        case DELETE:"},{"lineNumber":114,"author":{"gitId":"georgepwhuang"},"content":"            try {"},{"lineNumber":115,"author":{"gitId":"georgepwhuang"},"content":"                int idx \u003d Integer.parseInt(tokens[1]) - 1;"},{"lineNumber":116,"author":{"gitId":"georgepwhuang"},"content":"                delete(idx);"},{"lineNumber":117,"author":{"gitId":"georgepwhuang"},"content":"            } catch (ArrayIndexOutOfBoundsException ex) {"},{"lineNumber":118,"author":{"gitId":"georgepwhuang"},"content":"                blurt(\"What do you want to hide?\");"},{"lineNumber":119,"author":{"gitId":"georgepwhuang"},"content":"            } catch (NumberFormatException ex) {"},{"lineNumber":120,"author":{"gitId":"georgepwhuang"},"content":"                blurt(\"You can\u0027t delete your past.\");"},{"lineNumber":121,"author":{"gitId":"georgepwhuang"},"content":"            }"},{"lineNumber":122,"author":{"gitId":"georgepwhuang"},"content":"            break;"},{"lineNumber":123,"author":{"gitId":"georgepwhuang"},"content":"        case TODO:"},{"lineNumber":124,"author":{"gitId":"georgepwhuang"},"content":"            try {"},{"lineNumber":125,"author":{"gitId":"georgepwhuang"},"content":"                Task task \u003d new ToDo(tokens[1]);"},{"lineNumber":126,"author":{"gitId":"georgepwhuang"},"content":"                add(task);"},{"lineNumber":127,"author":{"gitId":"georgepwhuang"},"content":"            } catch (ArrayIndexOutOfBoundsException ex) {"},{"lineNumber":128,"author":{"gitId":"georgepwhuang"},"content":"                blurt(\"Todo what?\");"},{"lineNumber":129,"author":{"gitId":"georgepwhuang"},"content":"            }"},{"lineNumber":130,"author":{"gitId":"georgepwhuang"},"content":"            break;"},{"lineNumber":131,"author":{"gitId":"georgepwhuang"},"content":"        case DEADLINE:"},{"lineNumber":132,"author":{"gitId":"georgepwhuang"},"content":"            try {"},{"lineNumber":133,"author":{"gitId":"georgepwhuang"},"content":"                String[] fragments \u003d tokens[1].split(\" /by \");"},{"lineNumber":134,"author":{"gitId":"georgepwhuang"},"content":"                try {"},{"lineNumber":135,"author":{"gitId":"georgepwhuang"},"content":"                    Task task \u003d new Deadline(fragments[0], fragments[1]);"},{"lineNumber":136,"author":{"gitId":"georgepwhuang"},"content":"                    add(task);"},{"lineNumber":137,"author":{"gitId":"georgepwhuang"},"content":"                } catch (ArrayIndexOutOfBoundsException ex) {"},{"lineNumber":138,"author":{"gitId":"georgepwhuang"},"content":"                    blurt(\"Type the deadline, then give the time using \\\"/by\\\".\");"},{"lineNumber":139,"author":{"gitId":"georgepwhuang"},"content":"                }"},{"lineNumber":140,"author":{"gitId":"georgepwhuang"},"content":"            } catch (ArrayIndexOutOfBoundsException ex) {"},{"lineNumber":141,"author":{"gitId":"georgepwhuang"},"content":"                blurt(\"Someone\u0027s having trouble with deadlines.\");"},{"lineNumber":142,"author":{"gitId":"georgepwhuang"},"content":"            }"},{"lineNumber":143,"author":{"gitId":"georgepwhuang"},"content":"            break;"},{"lineNumber":144,"author":{"gitId":"georgepwhuang"},"content":"        case EVENT:"},{"lineNumber":145,"author":{"gitId":"georgepwhuang"},"content":"            try {"},{"lineNumber":146,"author":{"gitId":"georgepwhuang"},"content":"                String[] fragments \u003d tokens[1].split(\" /at \");"},{"lineNumber":147,"author":{"gitId":"georgepwhuang"},"content":"                try {"},{"lineNumber":148,"author":{"gitId":"georgepwhuang"},"content":"                    Task task \u003d new Event(fragments[0], fragments[1]);"},{"lineNumber":149,"author":{"gitId":"georgepwhuang"},"content":"                    add(task);"},{"lineNumber":150,"author":{"gitId":"georgepwhuang"},"content":"                } catch (ArrayIndexOutOfBoundsException ex) {"},{"lineNumber":151,"author":{"gitId":"georgepwhuang"},"content":"                    blurt(\"Type the event, then give the time using \\\"/at\\\".\");"},{"lineNumber":152,"author":{"gitId":"georgepwhuang"},"content":"                }"},{"lineNumber":153,"author":{"gitId":"georgepwhuang"},"content":"            } catch (ArrayIndexOutOfBoundsException ex) {"},{"lineNumber":154,"author":{"gitId":"georgepwhuang"},"content":"                blurt(\"Tell me the event!\");"},{"lineNumber":155,"author":{"gitId":"georgepwhuang"},"content":"            }"},{"lineNumber":156,"author":{"gitId":"georgepwhuang"},"content":"            break;"},{"lineNumber":157,"author":{"gitId":"georgepwhuang"},"content":"        case LIST:"},{"lineNumber":158,"author":{"gitId":"georgepwhuang"},"content":"            if (tokens.length \u003d\u003d 1) {"},{"lineNumber":159,"author":{"gitId":"georgepwhuang"},"content":"                list();"},{"lineNumber":160,"author":{"gitId":"georgepwhuang"},"content":"            } else {"},{"lineNumber":161,"author":{"gitId":"georgepwhuang"},"content":"                blurt(\"Listing is simple, so typing \\\"list\\\" would suffice.\");"},{"lineNumber":162,"author":{"gitId":"georgepwhuang"},"content":"            }"},{"lineNumber":163,"author":{"gitId":"georgepwhuang"},"content":"            break;"},{"lineNumber":164,"author":{"gitId":"georgepwhuang"},"content":"        default:"},{"lineNumber":165,"author":{"gitId":"georgepwhuang"},"content":"            blurt(String.format(\"I have detailed files on human anatomy, but not %s.\", input));"},{"lineNumber":166,"author":{"gitId":"georgepwhuang"},"content":"        }"},{"lineNumber":167,"author":{"gitId":"georgepwhuang"},"content":""},{"lineNumber":168,"author":{"gitId":"georgepwhuang"},"content":"        return true;"},{"lineNumber":169,"author":{"gitId":"georgepwhuang"},"content":"    }"},{"lineNumber":170,"author":{"gitId":"georgepwhuang"},"content":"}"},{"lineNumber":171,"author":{"gitId":"georgepwhuang"},"content":""}],"authorContributionMap":{"georgepwhuang":171}},{"path":"src/main/java/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"georgepwhuang"},"content":"/**"},{"lineNumber":2,"author":{"gitId":"georgepwhuang"},"content":" * {@code Command} is an enumeration of the possible commands."},{"lineNumber":3,"author":{"gitId":"georgepwhuang"},"content":" */"},{"lineNumber":4,"author":{"gitId":"georgepwhuang"},"content":"public enum Command {"},{"lineNumber":5,"author":{"gitId":"georgepwhuang"},"content":"    DONE(\"done\"), TODO(\"todo\"), DEADLINE(\"deadline\"), EVENT(\"event\"),"},{"lineNumber":6,"author":{"gitId":"georgepwhuang"},"content":"    LIST(\"list\"), DELETE(\"delete\"), UNKNOWN(\"\");"},{"lineNumber":7,"author":{"gitId":"georgepwhuang"},"content":""},{"lineNumber":8,"author":{"gitId":"georgepwhuang"},"content":"    private final String command;"},{"lineNumber":9,"author":{"gitId":"georgepwhuang"},"content":""},{"lineNumber":10,"author":{"gitId":"georgepwhuang"},"content":"    Command(String command) {"},{"lineNumber":11,"author":{"gitId":"georgepwhuang"},"content":"        this.command \u003d command;"},{"lineNumber":12,"author":{"gitId":"georgepwhuang"},"content":"    }"},{"lineNumber":13,"author":{"gitId":"georgepwhuang"},"content":""},{"lineNumber":14,"author":{"gitId":"georgepwhuang"},"content":"    /**"},{"lineNumber":15,"author":{"gitId":"georgepwhuang"},"content":"     * Reads in string and transforms to command."},{"lineNumber":16,"author":{"gitId":"georgepwhuang"},"content":"     *"},{"lineNumber":17,"author":{"gitId":"georgepwhuang"},"content":"     * @param string String form of command."},{"lineNumber":18,"author":{"gitId":"georgepwhuang"},"content":"     * @return The command"},{"lineNumber":19,"author":{"gitId":"georgepwhuang"},"content":"     */"},{"lineNumber":20,"author":{"gitId":"georgepwhuang"},"content":"    public static Command command(String string) {"},{"lineNumber":21,"author":{"gitId":"georgepwhuang"},"content":"        String command \u003d string.toLowerCase();"},{"lineNumber":22,"author":{"gitId":"georgepwhuang"},"content":"        for (Command c : Command.values()) {"},{"lineNumber":23,"author":{"gitId":"georgepwhuang"},"content":"            if (c.command.equals(command)) {"},{"lineNumber":24,"author":{"gitId":"georgepwhuang"},"content":"                return c;"},{"lineNumber":25,"author":{"gitId":"georgepwhuang"},"content":"            }"},{"lineNumber":26,"author":{"gitId":"georgepwhuang"},"content":"        }"},{"lineNumber":27,"author":{"gitId":"georgepwhuang"},"content":"        return UNKNOWN;"},{"lineNumber":28,"author":{"gitId":"georgepwhuang"},"content":"    }"},{"lineNumber":29,"author":{"gitId":"georgepwhuang"},"content":""},{"lineNumber":30,"author":{"gitId":"georgepwhuang"},"content":"}"}],"authorContributionMap":{"georgepwhuang":30}},{"path":"src/main/java/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"georgepwhuang"},"content":"/**"},{"lineNumber":2,"author":{"gitId":"georgepwhuang"},"content":" * {@code Deadline} is a Task that has to be done before a specific date/time."},{"lineNumber":3,"author":{"gitId":"georgepwhuang"},"content":" *"},{"lineNumber":4,"author":{"gitId":"georgepwhuang"},"content":" * @see Task"},{"lineNumber":5,"author":{"gitId":"georgepwhuang"},"content":" */"},{"lineNumber":6,"author":{"gitId":"georgepwhuang"},"content":"public class Deadline extends Task {"},{"lineNumber":7,"author":{"gitId":"georgepwhuang"},"content":"    private final String by;"},{"lineNumber":8,"author":{"gitId":"georgepwhuang"},"content":""},{"lineNumber":9,"author":{"gitId":"georgepwhuang"},"content":"    /**"},{"lineNumber":10,"author":{"gitId":"georgepwhuang"},"content":"     * Constructs a new uncompleted {@code Deadline}."},{"lineNumber":11,"author":{"gitId":"georgepwhuang"},"content":"     *"},{"lineNumber":12,"author":{"gitId":"georgepwhuang"},"content":"     * @param description The name of the task."},{"lineNumber":13,"author":{"gitId":"georgepwhuang"},"content":"     */"},{"lineNumber":14,"author":{"gitId":"georgepwhuang"},"content":"    public Deadline(String description, String by) {"},{"lineNumber":15,"author":{"gitId":"georgepwhuang"},"content":"        super(description);"},{"lineNumber":16,"author":{"gitId":"georgepwhuang"},"content":"        this.by \u003d by;"},{"lineNumber":17,"author":{"gitId":"georgepwhuang"},"content":"    }"},{"lineNumber":18,"author":{"gitId":"georgepwhuang"},"content":""},{"lineNumber":19,"author":{"gitId":"georgepwhuang"},"content":"    /**"},{"lineNumber":20,"author":{"gitId":"georgepwhuang"},"content":"     * String representation of the Deadline."},{"lineNumber":21,"author":{"gitId":"georgepwhuang"},"content":"     *"},{"lineNumber":22,"author":{"gitId":"georgepwhuang"},"content":"     * @return Deadline in check list form."},{"lineNumber":23,"author":{"gitId":"georgepwhuang"},"content":"     */"},{"lineNumber":24,"author":{"gitId":"georgepwhuang"},"content":"    @Override"},{"lineNumber":25,"author":{"gitId":"georgepwhuang"},"content":"    public String toString() {"},{"lineNumber":26,"author":{"gitId":"georgepwhuang"},"content":"        return \"[D]\" + super.toString() + \" (by: \" + by + \")\";"},{"lineNumber":27,"author":{"gitId":"georgepwhuang"},"content":"    }"},{"lineNumber":28,"author":{"gitId":"georgepwhuang"},"content":"}"}],"authorContributionMap":{"georgepwhuang":28}},{"path":"src/main/java/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"georgepwhuang"},"content":"import java.util.Scanner;"},{"lineNumber":2,"author":{"gitId":"georgepwhuang"},"content":""},{"lineNumber":3,"author":{"gitId":"georgepwhuang"},"content":"/**"},{"lineNumber":4,"author":{"gitId":"georgepwhuang"},"content":" * Main Class of Execution for IP."},{"lineNumber":5,"author":{"gitId":"georgepwhuang"},"content":" */"},{"lineNumber":6,"author":{"gitId":"-"},"content":"public class Duke {"},{"lineNumber":7,"author":{"gitId":"georgepwhuang"},"content":"    /**"},{"lineNumber":8,"author":{"gitId":"georgepwhuang"},"content":"     * Main method for execution."},{"lineNumber":9,"author":{"gitId":"georgepwhuang"},"content":"     *"},{"lineNumber":10,"author":{"gitId":"georgepwhuang"},"content":"     * @param args Command Line Argument"},{"lineNumber":11,"author":{"gitId":"georgepwhuang"},"content":"     */"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public static void main(String[] args) {"},{"lineNumber":13,"author":{"gitId":"georgepwhuang"},"content":"        //Logo Display"},{"lineNumber":14,"author":{"gitId":"georgepwhuang"},"content":"        String logo \u003d \" ____            _      ____   ____\\n\" +"},{"lineNumber":15,"author":{"gitId":"georgepwhuang"},"content":"                \"|    \\\\ |        / \\\\    |    \\\\ |    \\\\\\n\" +"},{"lineNumber":16,"author":{"gitId":"georgepwhuang"},"content":"                \"|____/ |       /___\\\\   |____/ |____/\\n\" +"},{"lineNumber":17,"author":{"gitId":"georgepwhuang"},"content":"                \"|    \\\\ |      /     \\\\  |  \\\\   |    \\\\\\n\" +"},{"lineNumber":18,"author":{"gitId":"georgepwhuang"},"content":"                \"|____/ |____ /       \\\\ |   \\\\_ |____/\\n\";"},{"lineNumber":19,"author":{"gitId":"georgepwhuang"},"content":"        System.out.println(\"You are now in the presence of\\n\" + logo);"},{"lineNumber":20,"author":{"gitId":"georgepwhuang"},"content":""},{"lineNumber":21,"author":{"gitId":"georgepwhuang"},"content":"        //Import IO"},{"lineNumber":22,"author":{"gitId":"georgepwhuang"},"content":"        Scanner sc \u003d new Scanner(System.in);"},{"lineNumber":23,"author":{"gitId":"georgepwhuang"},"content":"        Blarb blarb \u003d new Blarb();"},{"lineNumber":24,"author":{"gitId":"georgepwhuang"},"content":""},{"lineNumber":25,"author":{"gitId":"georgepwhuang"},"content":"        while (sc.hasNextLine()) {"},{"lineNumber":26,"author":{"gitId":"georgepwhuang"},"content":"            if (!blarb.execute(sc.nextLine())) {"},{"lineNumber":27,"author":{"gitId":"georgepwhuang"},"content":"                break;"},{"lineNumber":28,"author":{"gitId":"-"},"content":"            }"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":31,"author":{"gitId":"-"},"content":"}"},{"lineNumber":32,"author":{"gitId":"georgepwhuang"},"content":""}],"authorContributionMap":{"georgepwhuang":26,"-":6}},{"path":"src/main/java/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"georgepwhuang"},"content":"/**"},{"lineNumber":2,"author":{"gitId":"georgepwhuang"},"content":" * {@code Event} is a {@code Task} that has a specific time of occurrence."},{"lineNumber":3,"author":{"gitId":"georgepwhuang"},"content":" *"},{"lineNumber":4,"author":{"gitId":"georgepwhuang"},"content":" * @see Task"},{"lineNumber":5,"author":{"gitId":"georgepwhuang"},"content":" */"},{"lineNumber":6,"author":{"gitId":"georgepwhuang"},"content":"public class Event extends Task {"},{"lineNumber":7,"author":{"gitId":"georgepwhuang"},"content":"    private final String at;"},{"lineNumber":8,"author":{"gitId":"georgepwhuang"},"content":""},{"lineNumber":9,"author":{"gitId":"georgepwhuang"},"content":"    /**"},{"lineNumber":10,"author":{"gitId":"georgepwhuang"},"content":"     * Constructs a new uncompleted {@code Event}."},{"lineNumber":11,"author":{"gitId":"georgepwhuang"},"content":"     *"},{"lineNumber":12,"author":{"gitId":"georgepwhuang"},"content":"     * @param description The name of the task."},{"lineNumber":13,"author":{"gitId":"georgepwhuang"},"content":"     */"},{"lineNumber":14,"author":{"gitId":"georgepwhuang"},"content":"    public Event(String description, String at) {"},{"lineNumber":15,"author":{"gitId":"georgepwhuang"},"content":"        super(description);"},{"lineNumber":16,"author":{"gitId":"georgepwhuang"},"content":"        this.at \u003d at;"},{"lineNumber":17,"author":{"gitId":"georgepwhuang"},"content":"    }"},{"lineNumber":18,"author":{"gitId":"georgepwhuang"},"content":""},{"lineNumber":19,"author":{"gitId":"georgepwhuang"},"content":"    /**"},{"lineNumber":20,"author":{"gitId":"georgepwhuang"},"content":"     * String representation of the Event."},{"lineNumber":21,"author":{"gitId":"georgepwhuang"},"content":"     *"},{"lineNumber":22,"author":{"gitId":"georgepwhuang"},"content":"     * @return Event in check list form."},{"lineNumber":23,"author":{"gitId":"georgepwhuang"},"content":"     */"},{"lineNumber":24,"author":{"gitId":"georgepwhuang"},"content":"    @Override"},{"lineNumber":25,"author":{"gitId":"georgepwhuang"},"content":"    public String toString() {"},{"lineNumber":26,"author":{"gitId":"georgepwhuang"},"content":"        return \"[E]\" + super.toString() + \" (at: \" + at + \")\";"},{"lineNumber":27,"author":{"gitId":"georgepwhuang"},"content":"    }"},{"lineNumber":28,"author":{"gitId":"georgepwhuang"},"content":"}"}],"authorContributionMap":{"georgepwhuang":28}},{"path":"src/main/java/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"georgepwhuang"},"content":"/**"},{"lineNumber":2,"author":{"gitId":"georgepwhuang"},"content":" * {@code Task} contains an action and its completion status."},{"lineNumber":3,"author":{"gitId":"georgepwhuang"},"content":" */"},{"lineNumber":4,"author":{"gitId":"georgepwhuang"},"content":"public class Task {"},{"lineNumber":5,"author":{"gitId":"georgepwhuang"},"content":"    private final String description;"},{"lineNumber":6,"author":{"gitId":"georgepwhuang"},"content":"    private boolean isDone;"},{"lineNumber":7,"author":{"gitId":"georgepwhuang"},"content":""},{"lineNumber":8,"author":{"gitId":"georgepwhuang"},"content":"    /**"},{"lineNumber":9,"author":{"gitId":"georgepwhuang"},"content":"     * Constructs a new uncompleted  {@code Task}."},{"lineNumber":10,"author":{"gitId":"georgepwhuang"},"content":"     *"},{"lineNumber":11,"author":{"gitId":"georgepwhuang"},"content":"     * @param description The name of the task."},{"lineNumber":12,"author":{"gitId":"georgepwhuang"},"content":"     */"},{"lineNumber":13,"author":{"gitId":"georgepwhuang"},"content":"    public Task(String description) {"},{"lineNumber":14,"author":{"gitId":"georgepwhuang"},"content":"        this.description \u003d description;"},{"lineNumber":15,"author":{"gitId":"georgepwhuang"},"content":"        this.isDone \u003d false;"},{"lineNumber":16,"author":{"gitId":"georgepwhuang"},"content":"    }"},{"lineNumber":17,"author":{"gitId":"georgepwhuang"},"content":""},{"lineNumber":18,"author":{"gitId":"georgepwhuang"},"content":"    private String getStatusIcon() {"},{"lineNumber":19,"author":{"gitId":"georgepwhuang"},"content":"        return (isDone ? \"\\u2713\" : \"\\u2718\"); //return tick or X symbols"},{"lineNumber":20,"author":{"gitId":"georgepwhuang"},"content":"    }"},{"lineNumber":21,"author":{"gitId":"georgepwhuang"},"content":""},{"lineNumber":22,"author":{"gitId":"georgepwhuang"},"content":"    /**"},{"lineNumber":23,"author":{"gitId":"georgepwhuang"},"content":"     * Toggles to completion status to completed."},{"lineNumber":24,"author":{"gitId":"georgepwhuang"},"content":"     */"},{"lineNumber":25,"author":{"gitId":"georgepwhuang"},"content":"    public void markAsDone() {"},{"lineNumber":26,"author":{"gitId":"georgepwhuang"},"content":"        isDone \u003d true;"},{"lineNumber":27,"author":{"gitId":"georgepwhuang"},"content":"    }"},{"lineNumber":28,"author":{"gitId":"georgepwhuang"},"content":""},{"lineNumber":29,"author":{"gitId":"georgepwhuang"},"content":"    /**"},{"lineNumber":30,"author":{"gitId":"georgepwhuang"},"content":"     * String representation of the Task."},{"lineNumber":31,"author":{"gitId":"georgepwhuang"},"content":"     *"},{"lineNumber":32,"author":{"gitId":"georgepwhuang"},"content":"     * @return Task in check list form."},{"lineNumber":33,"author":{"gitId":"georgepwhuang"},"content":"     */"},{"lineNumber":34,"author":{"gitId":"georgepwhuang"},"content":"    @Override"},{"lineNumber":35,"author":{"gitId":"georgepwhuang"},"content":"    public String toString() {"},{"lineNumber":36,"author":{"gitId":"georgepwhuang"},"content":"        return String.format(\"[%s] %s\", getStatusIcon(), description);"},{"lineNumber":37,"author":{"gitId":"georgepwhuang"},"content":"    }"},{"lineNumber":38,"author":{"gitId":"georgepwhuang"},"content":"}"}],"authorContributionMap":{"georgepwhuang":38}},{"path":"src/main/java/ToDo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"georgepwhuang"},"content":"/**"},{"lineNumber":2,"author":{"gitId":"georgepwhuang"},"content":" * {@code ToDo} is a {@code Task} that does not have further details attached."},{"lineNumber":3,"author":{"gitId":"georgepwhuang"},"content":" *"},{"lineNumber":4,"author":{"gitId":"georgepwhuang"},"content":" * @see Task"},{"lineNumber":5,"author":{"gitId":"georgepwhuang"},"content":" */"},{"lineNumber":6,"author":{"gitId":"georgepwhuang"},"content":"public class ToDo extends Task {"},{"lineNumber":7,"author":{"gitId":"georgepwhuang"},"content":"    /**"},{"lineNumber":8,"author":{"gitId":"georgepwhuang"},"content":"     * Constructs a new uncompleted {@code ToDo}."},{"lineNumber":9,"author":{"gitId":"georgepwhuang"},"content":"     *"},{"lineNumber":10,"author":{"gitId":"georgepwhuang"},"content":"     * @param description The name of the task."},{"lineNumber":11,"author":{"gitId":"georgepwhuang"},"content":"     */"},{"lineNumber":12,"author":{"gitId":"georgepwhuang"},"content":"    public ToDo(String description) {"},{"lineNumber":13,"author":{"gitId":"georgepwhuang"},"content":"        super(description);"},{"lineNumber":14,"author":{"gitId":"georgepwhuang"},"content":"    }"},{"lineNumber":15,"author":{"gitId":"georgepwhuang"},"content":""},{"lineNumber":16,"author":{"gitId":"georgepwhuang"},"content":"    /**"},{"lineNumber":17,"author":{"gitId":"georgepwhuang"},"content":"     * String representation of the ToDo."},{"lineNumber":18,"author":{"gitId":"georgepwhuang"},"content":"     *"},{"lineNumber":19,"author":{"gitId":"georgepwhuang"},"content":"     * @return ToDo in check list form."},{"lineNumber":20,"author":{"gitId":"georgepwhuang"},"content":"     */"},{"lineNumber":21,"author":{"gitId":"georgepwhuang"},"content":"    @Override"},{"lineNumber":22,"author":{"gitId":"georgepwhuang"},"content":"    public String toString() {"},{"lineNumber":23,"author":{"gitId":"georgepwhuang"},"content":"        return \"[T]\" + super.toString();"},{"lineNumber":24,"author":{"gitId":"georgepwhuang"},"content":"    }"},{"lineNumber":25,"author":{"gitId":"georgepwhuang"},"content":"}"}],"authorContributionMap":{"georgepwhuang":25}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"georgepwhuang"},"content":"todo curl up and cry"},{"lineNumber":2,"author":{"gitId":"georgepwhuang"},"content":"deadline SWE IP /by Thursday"},{"lineNumber":3,"author":{"gitId":"georgepwhuang"},"content":"event barhopping /at Clarke Quay"},{"lineNumber":4,"author":{"gitId":"georgepwhuang"},"content":"list"},{"lineNumber":5,"author":{"gitId":"georgepwhuang"},"content":"delete 3"},{"lineNumber":6,"author":{"gitId":"georgepwhuang"},"content":"done 1"},{"lineNumber":7,"author":{"gitId":"georgepwhuang"},"content":"list"},{"lineNumber":8,"author":{"gitId":"georgepwhuang"},"content":"bye"}],"authorContributionMap":{"georgepwhuang":8}}]
