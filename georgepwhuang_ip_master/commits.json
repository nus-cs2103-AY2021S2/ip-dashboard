{"authorDailyContributionsMap":{"georgepwhuang":[{"date":"2021-01-19","commitResults":[{"hash":"6e6e8c115ee1c4758c96151955d5437d93466b30","messageTitle":"Implement greet, echo and exit","messageBody":"Project starts with a basic skeletal version.\n\nLet\u0027s allow BLARB, which is this version of Duke to greet the users\nand exit when called, and to echo all other unrecognized commands.\n\nThe skeletal version is to kick off the project without complications.\n","fileTypesAndContributionMap":{"java":{"insertions":32,"deletions":6}}},{"hash":"dfdc2a6247537535941368d55acb4c2801e7404d","messageTitle":"Add comments and change variable names","messageBody":"Increase clarity on the functionality of the code.\n\nVariable names are changed to fit the problem statement.\n","tags":["Level-1"],"fileTypesAndContributionMap":{"java":{"insertions":9,"deletions":4}}},{"hash":"9debf00fab91ad00c9653ff0c4133f4824de7f3d","messageTitle":"Implement add and list","messageBody":"BLARB should store and list text inputted by the user.\n\nEdit the echo utility into storing the inputted text.\nAdd listing utility to call stored text.\n\nSuch utility is used to later further implement other functions.\n","tags":["Level-2"],"fileTypesAndContributionMap":{"java":{"insertions":20,"deletions":2}}},{"hash":"b9428745e2998173f02e578f2a14ce2977ef74f7","messageTitle":"Implement ability to mark tasks as done","messageBody":"Allow stored tasks to function as checklist.\n\nConverted storage from Strings to self-defined immutable class Task.\n\nThis is so that the completion attribute is bundled with the task,\nrather than separately denoted.\n","tags":["Level-3"],"fileTypesAndContributionMap":{"java":{"insertions":64,"deletions":17}}},{"hash":"c20624154654a5523518f04aee036f69b3ef448a","messageTitle":"Add support for different types of Tasks","messageBody":"There are different types of tasks and their properties\nshould be taken into account.\n\nCreated three subtypes of Task. Changed Task to a mutable\nclass and allow toggling of the completion status.\nParsing of the input strings by split() is implemented.\n\nThe immutable state of the Task class is undesirable\nfor inheritance. Parsing method is made to fit the\ncommand-description style of input.\n","fileTypesAndContributionMap":{"java":{"insertions":133,"deletions":30}}},{"hash":"98d62c13ec8e2b234554a76c71eba68bb71fc4bd","messageTitle":"Abstract chat functions to a separate class","messageBody":"The Duke class is messy and not written in an object-oriented style.\n\nAbstracted all chatting functions to new class so that the Duke\nclass only does the logo printing and input looping.\n\nThe main class is made cleaner and the chatting functions are\nrewritten in OOP style to clear the code and enhance readability.\n","tags":["Level-4"],"fileTypesAndContributionMap":{"java":{"insertions":110,"deletions":66}}},{"hash":"06f33d5e3688ce1045357534d781d10e45b4f0ee","messageTitle":"Implement shell script testing","messageBody":"Shell script testing is used to faster debug the code.\n\nCreated test case and fixed minor bugs in the output in order to\ndecrease issues in the shell script, namely, the spaces at the end\nof output lines are deleted.\n\nSpaces at the end of a line cause comparability issues, and causes\nthe shell script to fail test cases even if outputs are the same.\n","tags":["A-TextUiTesting"],"fileTypesAndContributionMap":{"txt":{"insertions":7,"deletions":0},"java":{"insertions":5,"deletions":4}}},{"hash":"0735bf2c7b5b190971f67923d31af699ff8c4d46","messageTitle":"Increase exception handling cases","messageBody":"The code should have more flexibility for the acceptance of exceptions.\n\nVarious try-catch blocks are added to catch different exception types\nand to give different responses according to.\n\nThe use of Java inbuilt exceptions are used directly rather than self-\ndefined ones are due to the inbuilt exceptions being sufficient for\nthe current exceptions that may be caught.\n","tags":["Level-5"],"fileTypesAndContributionMap":{"txt":{"insertions":9,"deletions":6},"java":{"insertions":32,"deletions":10}}},{"hash":"9974edd2af9570887fedd269c12909aff167911f","messageTitle":"Add delete function","messageBody":"The user should be able to delete tasks that are no longer needed.\n\nA delete function is added to the code. Some Integer types are changed\nto int types.\n\nThe conversion of reference types to primitive types is implemented\nin order allow easier deletions in ArrayLists.\n","tags":["Level-6"],"fileTypesAndContributionMap":{"txt":{"insertions":7,"deletions":9},"java":{"insertions":24,"deletions":1}}},{"hash":"705cdaafe29adab2837f781b45d829ca6c48f035","messageTitle":"Convert commands to enum types","messageBody":"The commands in the Blarb class is implemented through a long\nif-else if-else block, while switch-case blocks would allow cleaner\ncode.\n\nThe enum type for commands are created, and the long if-else if-else\nblock in Blarb.java is replaced with a switch-case.\n\nThe enum type is used in order to allow for the switch-case block to\nbe used as it only accepted single variable types.\n","fileTypesAndContributionMap":{"java":{"insertions":88,"deletions":47}}},{"hash":"cff64a79b8f1811e3e810388ad46385f13aa57bb","messageTitle":"Add values to enum type Command and reformatted code","messageBody":"The Command class is still dependant on a long if-else is-else block.\n\nString values are attached to each Command.\nCleaned code to fit Java coding standards.\n\nCommands can be called directly from the input string rather than\ngoing through a long selection block.\n","tags":["A-Enums"],"fileTypesAndContributionMap":{"java":{"insertions":83,"deletions":71}}}]},{"date":"2021-01-22","commitResults":[{"hash":"e1c1cbd9df91540999ccca160d48826ed67e1143","messageTitle":"Add store function","messageBody":"The user should be able to call the same task list across multiple\niterations of program execution.\n\nfile() and refile() functions are added to store the current task list\ninto an output file. The file data is also transferred into the task\nlist upon initialization of the program.\n\nThe program has the flexibility to either append to the storage file or\ncompletely rewrite it, hence the two functions of file() and refile().\n\nThe main class is renamed as Main.java for the removal of Duke\nreferences to the program.\n","fileTypesAndContributionMap":{"java":{"insertions":140,"deletions":4}}},{"hash":"b136f291e5bbc5280d64da83cf5c0994202f2141","messageTitle":"Add datetime support","messageBody":"Deadlines should be shown in a datetime format.\n\nThe deadline task initializations now only supports deadlines in the\nform of yyyy-mm-dd.\n\nThis is to restrict the usage of random not time related deadlines.\n","fileTypesAndContributionMap":{"java":{"insertions":13,"deletions":4}}}]},{"date":"2021-01-23","commitResults":[{"hash":"4bbc815d880f3859f4e0f8b4339d91910f1fce6a","messageTitle":"Increase OOP extraction","messageBody":"OOP styled coding should be adopted to increase modularity.\n\nThe following classes have been extracted from Blarb:\nUi, Parser, Storage, and Tasklist.\nBlarb still retains the main execution of commands parsed from the\nParser.\n\nThis is to prevent the Blarb class from growing too large.\n","tags":["A-MoreOOP"],"fileTypesAndContributionMap":{"java":{"insertions":322,"deletions":219}}},{"hash":"83cec32f012337e17dea2e162a80f52aba5fbf8b","messageTitle":"Package classes into blarb package","messageBody":"Software engineering projects should be appropriately packaged to ensure\nthat implementation details are not seen by the client.\n\nAll classes except Main are wrapped into the blarb package. Access\nmodifiers for packaged classes, except Blarb are set to\npackage-private to hide details and as the Main class only requires\nthe Blarb class to execute.\n\nMost classes are set to package-private for proper encapsulation.\n","tags":["A-Packages"],"fileTypesAndContributionMap":{"java":{"insertions":60,"deletions":36}}},{"hash":"e1f1e37978c95d6021f9632d21ee4367df62ca33","messageTitle":"Add JUnit tests","messageBody":"Classes in a project should be tested to check their workability.\n\nJUnit tests are created for the Deadline class and Command class.\n\nThe two classes are chosen for their vitality and their independence as\na class.\n","tags":["A-Jar","A-JUnit"],"fileTypesAndContributionMap":{"java":{"insertions":43,"deletions":0}}},{"hash":"86ed141a712c6c7fd6b42b4b43818fbaeb599b38","messageTitle":"Add missing Javadocs","messageBody":"Javadocs are added to induce clarity of the code.\n\nMissing Javadocs of most methods are added and some existing Javadocs\nare edited.\n","fileTypesAndContributionMap":{"java":{"insertions":102,"deletions":22}}},{"hash":"e8ad143086400abf275dd97fbc49e63c54280559","messageTitle":"Add find function","messageBody":"Users should be able to search through their tasklist.\n\nThe find function is implemented. Some bugs caused from further OOP\nimplementation are fixed.\n","fileTypesAndContributionMap":{"java":{"insertions":55,"deletions":4}}},{"hash":"7359a69b0ec719035a1dd5d798d69f286cc68fcb","messageTitle":"Tweak code to follow Java coding standard","messageBody":"Coding practices should follow coding standards.\n\nImport statements and grouping are adjusted. Minor bugs fixed.\n","fileTypesAndContributionMap":{"java":{"insertions":6,"deletions":5}}}]}]},"authorFileTypeContributionMap":{"georgepwhuang":{"java":797,"md":0,"fxml":0,"sh":0,"bat":0,"gradle":0,"txt":8}},"authorContributionVariance":{"georgepwhuang":100445.03},"authorDisplayNameMap":{"georgepwhuang":"CS2103T-W12-3 HUAN.. WEI"}}
