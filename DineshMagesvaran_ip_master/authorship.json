[{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027checkstyle\u0027"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027"},{"lineNumber":6,"author":{"gitId":"-"},"content":"}"},{"lineNumber":7,"author":{"gitId":"-"},"content":""},{"lineNumber":8,"author":{"gitId":"-"},"content":"repositories {"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    mavenCentral()"},{"lineNumber":10,"author":{"gitId":"-"},"content":"}"},{"lineNumber":11,"author":{"gitId":"-"},"content":""},{"lineNumber":12,"author":{"gitId":"-"},"content":"dependencies {"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.5.0\u0027"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.5.0\u0027"},{"lineNumber":15,"author":{"gitId":"DineshMagesvaran"},"content":""},{"lineNumber":16,"author":{"gitId":"DineshMagesvaran"},"content":"    String javaFxVersion \u003d \u002711\u0027"},{"lineNumber":17,"author":{"gitId":"DineshMagesvaran"},"content":""},{"lineNumber":18,"author":{"gitId":"DineshMagesvaran"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027"},{"lineNumber":19,"author":{"gitId":"DineshMagesvaran"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"},{"lineNumber":20,"author":{"gitId":"DineshMagesvaran"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"},{"lineNumber":21,"author":{"gitId":"DineshMagesvaran"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027"},{"lineNumber":22,"author":{"gitId":"DineshMagesvaran"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"},{"lineNumber":23,"author":{"gitId":"DineshMagesvaran"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"},{"lineNumber":24,"author":{"gitId":"DineshMagesvaran"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027"},{"lineNumber":25,"author":{"gitId":"DineshMagesvaran"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"},{"lineNumber":26,"author":{"gitId":"DineshMagesvaran"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"},{"lineNumber":27,"author":{"gitId":"DineshMagesvaran"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027"},{"lineNumber":28,"author":{"gitId":"DineshMagesvaran"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"},{"lineNumber":29,"author":{"gitId":"DineshMagesvaran"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"},{"lineNumber":30,"author":{"gitId":"-"},"content":"}"},{"lineNumber":31,"author":{"gitId":"-"},"content":""},{"lineNumber":32,"author":{"gitId":"-"},"content":"test {"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    useJUnitPlatform()"},{"lineNumber":34,"author":{"gitId":"-"},"content":""},{"lineNumber":35,"author":{"gitId":"-"},"content":"    testLogging {"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\""},{"lineNumber":37,"author":{"gitId":"-"},"content":""},{"lineNumber":38,"author":{"gitId":"-"},"content":"        showExceptions true"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\""},{"lineNumber":40,"author":{"gitId":"-"},"content":"        showCauses true"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        showStackTraces true"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":44,"author":{"gitId":"-"},"content":"}"},{"lineNumber":45,"author":{"gitId":"-"},"content":""},{"lineNumber":46,"author":{"gitId":"-"},"content":"application {"},{"lineNumber":47,"author":{"gitId":"DineshMagesvaran"},"content":"    mainClassName \u003d \"Duke\""},{"lineNumber":48,"author":{"gitId":"-"},"content":"}"},{"lineNumber":49,"author":{"gitId":"-"},"content":""},{"lineNumber":50,"author":{"gitId":"-"},"content":"shadowJar {"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    archiveBaseName \u003d \"duke\""},{"lineNumber":52,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null"},{"lineNumber":53,"author":{"gitId":"-"},"content":"}"},{"lineNumber":54,"author":{"gitId":"-"},"content":""},{"lineNumber":55,"author":{"gitId":"-"},"content":"checkstyle {"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    toolVersion \u003d \u00278.29\u0027"},{"lineNumber":57,"author":{"gitId":"-"},"content":"}"},{"lineNumber":58,"author":{"gitId":"-"},"content":""},{"lineNumber":59,"author":{"gitId":"-"},"content":"run{"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in"},{"lineNumber":61,"author":{"gitId":"-"},"content":"}"}],"authorContributionMap":{"DineshMagesvaran":16,"-":45}},{"path":"docs/README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"# User Guide"},{"lineNumber":2,"author":{"gitId":"-"},"content":""},{"lineNumber":3,"author":{"gitId":"-"},"content":"## Features "},{"lineNumber":4,"author":{"gitId":"-"},"content":""},{"lineNumber":5,"author":{"gitId":"DineshMagesvaran"},"content":"### Feature 1 - Add task to list"},{"lineNumber":6,"author":{"gitId":"DineshMagesvaran"},"content":"Enables the user to add tasks(ToDos, Deadlines, Events) into the list"},{"lineNumber":7,"author":{"gitId":"-"},"content":""},{"lineNumber":8,"author":{"gitId":"-"},"content":"## Usage"},{"lineNumber":9,"author":{"gitId":"-"},"content":""},{"lineNumber":10,"author":{"gitId":"DineshMagesvaran"},"content":"### `todo/deadline/event` - Use one of the three keywords"},{"lineNumber":11,"author":{"gitId":"-"},"content":""},{"lineNumber":12,"author":{"gitId":"DineshMagesvaran"},"content":"The appropriate task will be added to the list."},{"lineNumber":13,"author":{"gitId":"-"},"content":""},{"lineNumber":14,"author":{"gitId":"-"},"content":"Example of usage: "},{"lineNumber":15,"author":{"gitId":"-"},"content":""},{"lineNumber":16,"author":{"gitId":"DineshMagesvaran"},"content":"`todo buy bread`"},{"lineNumber":17,"author":{"gitId":"-"},"content":""},{"lineNumber":18,"author":{"gitId":"-"},"content":"Expected outcome:"},{"lineNumber":19,"author":{"gitId":"-"},"content":""},{"lineNumber":20,"author":{"gitId":"DineshMagesvaran"},"content":"```"},{"lineNumber":21,"author":{"gitId":"DineshMagesvaran"},"content":"Got it. I\u0027ve added this task: "},{"lineNumber":22,"author":{"gitId":"DineshMagesvaran"},"content":"\t[T][ ] buy bread"},{"lineNumber":23,"author":{"gitId":"DineshMagesvaran"},"content":"Now you have 5 tasks in the list."},{"lineNumber":24,"author":{"gitId":"DineshMagesvaran"},"content":"```"},{"lineNumber":25,"author":{"gitId":"DineshMagesvaran"},"content":""},{"lineNumber":26,"author":{"gitId":"DineshMagesvaran"},"content":"Example of usage: "},{"lineNumber":27,"author":{"gitId":"DineshMagesvaran"},"content":""},{"lineNumber":28,"author":{"gitId":"DineshMagesvaran"},"content":"`deadline complete assignment /by 2021-01-05`"},{"lineNumber":29,"author":{"gitId":"DineshMagesvaran"},"content":""},{"lineNumber":30,"author":{"gitId":"DineshMagesvaran"},"content":"Expected outcome:"},{"lineNumber":31,"author":{"gitId":"DineshMagesvaran"},"content":""},{"lineNumber":32,"author":{"gitId":"DineshMagesvaran"},"content":"```"},{"lineNumber":33,"author":{"gitId":"DineshMagesvaran"},"content":"Got it. I\u0027ve added this task: "},{"lineNumber":34,"author":{"gitId":"DineshMagesvaran"},"content":"\t[D][ ] complete assignment (05 Jan 2021)"},{"lineNumber":35,"author":{"gitId":"DineshMagesvaran"},"content":"Now you have 6 tasks in the list."},{"lineNumber":36,"author":{"gitId":"DineshMagesvaran"},"content":"```"},{"lineNumber":37,"author":{"gitId":"DineshMagesvaran"},"content":"\t "},{"lineNumber":38,"author":{"gitId":"DineshMagesvaran"},"content":"Example of usage: "},{"lineNumber":39,"author":{"gitId":"DineshMagesvaran"},"content":""},{"lineNumber":40,"author":{"gitId":"DineshMagesvaran"},"content":"`event attend meeting /from 2021-01-05 to 2021-01-06`"},{"lineNumber":41,"author":{"gitId":"DineshMagesvaran"},"content":""},{"lineNumber":42,"author":{"gitId":"DineshMagesvaran"},"content":"Expected outcome:"},{"lineNumber":43,"author":{"gitId":"DineshMagesvaran"},"content":""},{"lineNumber":44,"author":{"gitId":"DineshMagesvaran"},"content":"```"},{"lineNumber":45,"author":{"gitId":"DineshMagesvaran"},"content":"Got it. I\u0027ve added this task: "},{"lineNumber":46,"author":{"gitId":"DineshMagesvaran"},"content":"\t[E][ ] attend meeting (05 Jan 2021 to 06 Jan 2021)"},{"lineNumber":47,"author":{"gitId":"DineshMagesvaran"},"content":"Now you have 7 tasks in the list."},{"lineNumber":48,"author":{"gitId":"DineshMagesvaran"},"content":"```"},{"lineNumber":49,"author":{"gitId":"DineshMagesvaran"},"content":""},{"lineNumber":50,"author":{"gitId":"DineshMagesvaran"},"content":"### Feature 2 - View list"},{"lineNumber":51,"author":{"gitId":"DineshMagesvaran"},"content":"Enables the user to view all the tasks in the list"},{"lineNumber":52,"author":{"gitId":"DineshMagesvaran"},"content":""},{"lineNumber":53,"author":{"gitId":"DineshMagesvaran"},"content":"## Usage"},{"lineNumber":54,"author":{"gitId":"DineshMagesvaran"},"content":""},{"lineNumber":55,"author":{"gitId":"DineshMagesvaran"},"content":"### `list` - Use the list keyword"},{"lineNumber":56,"author":{"gitId":"DineshMagesvaran"},"content":""},{"lineNumber":57,"author":{"gitId":"DineshMagesvaran"},"content":"The list will be displayed with all the current tasks."},{"lineNumber":58,"author":{"gitId":"DineshMagesvaran"},"content":""},{"lineNumber":59,"author":{"gitId":"DineshMagesvaran"},"content":"Example of usage: "},{"lineNumber":60,"author":{"gitId":"DineshMagesvaran"},"content":""},{"lineNumber":61,"author":{"gitId":"DineshMagesvaran"},"content":"`list`"},{"lineNumber":62,"author":{"gitId":"DineshMagesvaran"},"content":""},{"lineNumber":63,"author":{"gitId":"DineshMagesvaran"},"content":"Expected outcome:"},{"lineNumber":64,"author":{"gitId":"DineshMagesvaran"},"content":""},{"lineNumber":65,"author":{"gitId":"DineshMagesvaran"},"content":"```"},{"lineNumber":66,"author":{"gitId":"DineshMagesvaran"},"content":"Here are the tasks in your list:"},{"lineNumber":67,"author":{"gitId":"DineshMagesvaran"},"content":"1.[T][X] read book"},{"lineNumber":68,"author":{"gitId":"DineshMagesvaran"},"content":"```"},{"lineNumber":69,"author":{"gitId":"DineshMagesvaran"},"content":""},{"lineNumber":70,"author":{"gitId":"DineshMagesvaran"},"content":"### Feature 3 - Mark Task as Done"},{"lineNumber":71,"author":{"gitId":"DineshMagesvaran"},"content":"Enables the user to mark a task as done"},{"lineNumber":72,"author":{"gitId":"DineshMagesvaran"},"content":""},{"lineNumber":73,"author":{"gitId":"DineshMagesvaran"},"content":"## Usage"},{"lineNumber":74,"author":{"gitId":"DineshMagesvaran"},"content":""},{"lineNumber":75,"author":{"gitId":"DineshMagesvaran"},"content":"### `done` - Use the done keyword"},{"lineNumber":76,"author":{"gitId":"DineshMagesvaran"},"content":""},{"lineNumber":77,"author":{"gitId":"DineshMagesvaran"},"content":"The specified task on the list will be marked as done."},{"lineNumber":78,"author":{"gitId":"DineshMagesvaran"},"content":""},{"lineNumber":79,"author":{"gitId":"DineshMagesvaran"},"content":"Example of usage: "},{"lineNumber":80,"author":{"gitId":"DineshMagesvaran"},"content":""},{"lineNumber":81,"author":{"gitId":"DineshMagesvaran"},"content":"`done 2`"},{"lineNumber":82,"author":{"gitId":"DineshMagesvaran"},"content":""},{"lineNumber":83,"author":{"gitId":"DineshMagesvaran"},"content":"Expected outcome:"},{"lineNumber":84,"author":{"gitId":"DineshMagesvaran"},"content":""},{"lineNumber":85,"author":{"gitId":"DineshMagesvaran"},"content":"```"},{"lineNumber":86,"author":{"gitId":"DineshMagesvaran"},"content":"Nice! I\u0027ve marked this task as done: "},{"lineNumber":87,"author":{"gitId":"DineshMagesvaran"},"content":"\t[T][X] Second Task"},{"lineNumber":88,"author":{"gitId":"DineshMagesvaran"},"content":"```"},{"lineNumber":89,"author":{"gitId":"DineshMagesvaran"},"content":"\t   "},{"lineNumber":90,"author":{"gitId":"DineshMagesvaran"},"content":"### Feature 4 - Delete Task from list"},{"lineNumber":91,"author":{"gitId":"DineshMagesvaran"},"content":"Enables the user to remove a task from the task list"},{"lineNumber":92,"author":{"gitId":"DineshMagesvaran"},"content":""},{"lineNumber":93,"author":{"gitId":"DineshMagesvaran"},"content":"## Usage"},{"lineNumber":94,"author":{"gitId":"DineshMagesvaran"},"content":""},{"lineNumber":95,"author":{"gitId":"DineshMagesvaran"},"content":"### `delete` - Use the delete keyword"},{"lineNumber":96,"author":{"gitId":"DineshMagesvaran"},"content":""},{"lineNumber":97,"author":{"gitId":"DineshMagesvaran"},"content":"The specified task on the list will be deleted."},{"lineNumber":98,"author":{"gitId":"DineshMagesvaran"},"content":""},{"lineNumber":99,"author":{"gitId":"DineshMagesvaran"},"content":"Example of usage: "},{"lineNumber":100,"author":{"gitId":"DineshMagesvaran"},"content":""},{"lineNumber":101,"author":{"gitId":"DineshMagesvaran"},"content":"`delete 2`"},{"lineNumber":102,"author":{"gitId":"DineshMagesvaran"},"content":""},{"lineNumber":103,"author":{"gitId":"DineshMagesvaran"},"content":"Expected outcome:"},{"lineNumber":104,"author":{"gitId":"DineshMagesvaran"},"content":""},{"lineNumber":105,"author":{"gitId":"DineshMagesvaran"},"content":"```"},{"lineNumber":106,"author":{"gitId":"DineshMagesvaran"},"content":"Noted. I\u0027ve removed this task: "},{"lineNumber":107,"author":{"gitId":"DineshMagesvaran"},"content":"\t[T][X] Second Task"},{"lineNumber":108,"author":{"gitId":"DineshMagesvaran"},"content":"Now you have 4 tasks in the list."},{"lineNumber":109,"author":{"gitId":"DineshMagesvaran"},"content":"```"},{"lineNumber":110,"author":{"gitId":"DineshMagesvaran"},"content":"\t "},{"lineNumber":111,"author":{"gitId":"DineshMagesvaran"},"content":"### Feature 5 - Find Task from list"},{"lineNumber":112,"author":{"gitId":"DineshMagesvaran"},"content":"Enables the user to find for tasks from the task list"},{"lineNumber":113,"author":{"gitId":"DineshMagesvaran"},"content":""},{"lineNumber":114,"author":{"gitId":"DineshMagesvaran"},"content":"## Usage"},{"lineNumber":115,"author":{"gitId":"DineshMagesvaran"},"content":""},{"lineNumber":116,"author":{"gitId":"DineshMagesvaran"},"content":"### `find` - Use the find keyword"},{"lineNumber":117,"author":{"gitId":"DineshMagesvaran"},"content":""},{"lineNumber":118,"author":{"gitId":"DineshMagesvaran"},"content":"The tasks matching the word(s) to find for will be displayed."},{"lineNumber":119,"author":{"gitId":"DineshMagesvaran"},"content":""},{"lineNumber":120,"author":{"gitId":"DineshMagesvaran"},"content":"Example of usage: "},{"lineNumber":121,"author":{"gitId":"DineshMagesvaran"},"content":""},{"lineNumber":122,"author":{"gitId":"DineshMagesvaran"},"content":"`find meeting`"},{"lineNumber":123,"author":{"gitId":"DineshMagesvaran"},"content":""},{"lineNumber":124,"author":{"gitId":"DineshMagesvaran"},"content":"Expected outcome:"},{"lineNumber":125,"author":{"gitId":"DineshMagesvaran"},"content":""},{"lineNumber":126,"author":{"gitId":"DineshMagesvaran"},"content":"```"},{"lineNumber":127,"author":{"gitId":"DineshMagesvaran"},"content":"Here are the matching tasks in your list:"},{"lineNumber":128,"author":{"gitId":"DineshMagesvaran"},"content":"2. [D][X] prepare for meeting (05 Jan 2021)"},{"lineNumber":129,"author":{"gitId":"DineshMagesvaran"},"content":"5. [E][ ] attend meeting (05 Jan 2021 to 08 Jan 2021)"},{"lineNumber":130,"author":{"gitId":"DineshMagesvaran"},"content":"```"}],"authorContributionMap":{"DineshMagesvaran":116,"-":14}},{"path":"src/main/java/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"DineshMagesvaran"},"content":"import java.time.LocalDate;"},{"lineNumber":2,"author":{"gitId":"DineshMagesvaran"},"content":"import java.time.format.DateTimeFormatter;"},{"lineNumber":3,"author":{"gitId":"DineshMagesvaran"},"content":""},{"lineNumber":4,"author":{"gitId":"DineshMagesvaran"},"content":"/**"},{"lineNumber":5,"author":{"gitId":"DineshMagesvaran"},"content":" * Class that can create a deadline task object."},{"lineNumber":6,"author":{"gitId":"DineshMagesvaran"},"content":" */"},{"lineNumber":7,"author":{"gitId":"DineshMagesvaran"},"content":"public class Deadline extends Task {"},{"lineNumber":8,"author":{"gitId":"DineshMagesvaran"},"content":"    private static final String DEADLINE_DISPLAY_ICON \u003d \"[D]\";"},{"lineNumber":9,"author":{"gitId":"DineshMagesvaran"},"content":"    public static final String DEADLINE_DATA_ICON \u003d \"D\";"},{"lineNumber":10,"author":{"gitId":"DineshMagesvaran"},"content":"    private final LocalDate dateInfo;"},{"lineNumber":11,"author":{"gitId":"DineshMagesvaran"},"content":""},{"lineNumber":12,"author":{"gitId":"DineshMagesvaran"},"content":"    /**"},{"lineNumber":13,"author":{"gitId":"DineshMagesvaran"},"content":"     * Constructor that creates a deadline task."},{"lineNumber":14,"author":{"gitId":"DineshMagesvaran"},"content":"     * @param taskInfo the description of the deadline task."},{"lineNumber":15,"author":{"gitId":"DineshMagesvaran"},"content":"     * @param dateInfo the date of the deadline for the task."},{"lineNumber":16,"author":{"gitId":"DineshMagesvaran"},"content":"     */"},{"lineNumber":17,"author":{"gitId":"DineshMagesvaran"},"content":"    public Deadline(String taskInfo, LocalDate dateInfo) {"},{"lineNumber":18,"author":{"gitId":"DineshMagesvaran"},"content":"        super(taskInfo);"},{"lineNumber":19,"author":{"gitId":"DineshMagesvaran"},"content":"        this.dateInfo \u003d dateInfo;"},{"lineNumber":20,"author":{"gitId":"DineshMagesvaran"},"content":"    }"},{"lineNumber":21,"author":{"gitId":"DineshMagesvaran"},"content":""},{"lineNumber":22,"author":{"gitId":"DineshMagesvaran"},"content":"    @Override"},{"lineNumber":23,"author":{"gitId":"DineshMagesvaran"},"content":"    public String toString() {"},{"lineNumber":24,"author":{"gitId":"DineshMagesvaran"},"content":"        return DEADLINE_DISPLAY_ICON + super.toString() + \" (\" + dateInfo.format(DateTimeFormatter.ofPattern(\"dd MMM yyyy\")) + \")\";"},{"lineNumber":25,"author":{"gitId":"DineshMagesvaran"},"content":"    }"},{"lineNumber":26,"author":{"gitId":"DineshMagesvaran"},"content":""},{"lineNumber":27,"author":{"gitId":"DineshMagesvaran"},"content":"    public String getData() {"},{"lineNumber":28,"author":{"gitId":"DineshMagesvaran"},"content":"        if (isDone) {"},{"lineNumber":29,"author":{"gitId":"DineshMagesvaran"},"content":"            return DEADLINE_DATA_ICON + DELIMITER + IS_DONE_TRUE_DATA_ICON + DELIMITER + taskInfo"},{"lineNumber":30,"author":{"gitId":"DineshMagesvaran"},"content":"                    + DELIMITER + dateInfo;"},{"lineNumber":31,"author":{"gitId":"DineshMagesvaran"},"content":"        } else {"},{"lineNumber":32,"author":{"gitId":"DineshMagesvaran"},"content":"            return DEADLINE_DATA_ICON + DELIMITER + IS_DONE_FALSE_DATA_ICON + DELIMITER + taskInfo"},{"lineNumber":33,"author":{"gitId":"DineshMagesvaran"},"content":"                    + DELIMITER + dateInfo;"},{"lineNumber":34,"author":{"gitId":"DineshMagesvaran"},"content":"        }"},{"lineNumber":35,"author":{"gitId":"DineshMagesvaran"},"content":"    }"},{"lineNumber":36,"author":{"gitId":"DineshMagesvaran"},"content":"}"}],"authorContributionMap":{"DineshMagesvaran":36}},{"path":"src/main/java/DialogBox.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"DineshMagesvaran"},"content":"import javafx.collections.FXCollections;"},{"lineNumber":2,"author":{"gitId":"DineshMagesvaran"},"content":"import javafx.collections.ObservableList;"},{"lineNumber":3,"author":{"gitId":"DineshMagesvaran"},"content":"import javafx.geometry.Pos;"},{"lineNumber":4,"author":{"gitId":"DineshMagesvaran"},"content":"import javafx.scene.Node;"},{"lineNumber":5,"author":{"gitId":"DineshMagesvaran"},"content":"import javafx.scene.control.Label;"},{"lineNumber":6,"author":{"gitId":"DineshMagesvaran"},"content":"import javafx.scene.image.ImageView;"},{"lineNumber":7,"author":{"gitId":"DineshMagesvaran"},"content":"import javafx.scene.layout.HBox;"},{"lineNumber":8,"author":{"gitId":"DineshMagesvaran"},"content":""},{"lineNumber":9,"author":{"gitId":"DineshMagesvaran"},"content":"/**"},{"lineNumber":10,"author":{"gitId":"DineshMagesvaran"},"content":" * Class that can create a dialog box to be displayed on the"},{"lineNumber":11,"author":{"gitId":"DineshMagesvaran"},"content":" * user interface."},{"lineNumber":12,"author":{"gitId":"DineshMagesvaran"},"content":" */"},{"lineNumber":13,"author":{"gitId":"DineshMagesvaran"},"content":"public class DialogBox extends HBox {"},{"lineNumber":14,"author":{"gitId":"DineshMagesvaran"},"content":"    private final Label text;"},{"lineNumber":15,"author":{"gitId":"DineshMagesvaran"},"content":"    private final ImageView displayPicture;"},{"lineNumber":16,"author":{"gitId":"DineshMagesvaran"},"content":""},{"lineNumber":17,"author":{"gitId":"DineshMagesvaran"},"content":"    /**"},{"lineNumber":18,"author":{"gitId":"DineshMagesvaran"},"content":"     * Constructor that creates a DialogBox object."},{"lineNumber":19,"author":{"gitId":"DineshMagesvaran"},"content":"     *"},{"lineNumber":20,"author":{"gitId":"DineshMagesvaran"},"content":"     * @param l label to display in the dialog box."},{"lineNumber":21,"author":{"gitId":"DineshMagesvaran"},"content":"     * @param iv image view to display in the dialog box."},{"lineNumber":22,"author":{"gitId":"DineshMagesvaran"},"content":"     */"},{"lineNumber":23,"author":{"gitId":"DineshMagesvaran"},"content":"    public DialogBox(Label l, ImageView iv) {"},{"lineNumber":24,"author":{"gitId":"DineshMagesvaran"},"content":"        text \u003d l;"},{"lineNumber":25,"author":{"gitId":"DineshMagesvaran"},"content":"        displayPicture \u003d iv;"},{"lineNumber":26,"author":{"gitId":"DineshMagesvaran"},"content":""},{"lineNumber":27,"author":{"gitId":"DineshMagesvaran"},"content":"        text.setWrapText(true);"},{"lineNumber":28,"author":{"gitId":"DineshMagesvaran"},"content":"        displayPicture.setFitWidth(100.0);"},{"lineNumber":29,"author":{"gitId":"DineshMagesvaran"},"content":"        displayPicture.setFitHeight(100.0);"},{"lineNumber":30,"author":{"gitId":"DineshMagesvaran"},"content":""},{"lineNumber":31,"author":{"gitId":"DineshMagesvaran"},"content":"        this.setAlignment(Pos.TOP_RIGHT);"},{"lineNumber":32,"author":{"gitId":"DineshMagesvaran"},"content":"        this.getChildren().addAll(text, displayPicture);"},{"lineNumber":33,"author":{"gitId":"DineshMagesvaran"},"content":"    }"},{"lineNumber":34,"author":{"gitId":"DineshMagesvaran"},"content":""},{"lineNumber":35,"author":{"gitId":"DineshMagesvaran"},"content":"    /**"},{"lineNumber":36,"author":{"gitId":"DineshMagesvaran"},"content":"     * Flips the dialog box such that the ImageView is on the left and text on the right."},{"lineNumber":37,"author":{"gitId":"DineshMagesvaran"},"content":"     */"},{"lineNumber":38,"author":{"gitId":"DineshMagesvaran"},"content":"    private void flip() {"},{"lineNumber":39,"author":{"gitId":"DineshMagesvaran"},"content":"        this.setAlignment(Pos.TOP_LEFT);"},{"lineNumber":40,"author":{"gitId":"DineshMagesvaran"},"content":"        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());"},{"lineNumber":41,"author":{"gitId":"DineshMagesvaran"},"content":"        FXCollections.reverse(tmp);"},{"lineNumber":42,"author":{"gitId":"DineshMagesvaran"},"content":"        this.getChildren().setAll(tmp);"},{"lineNumber":43,"author":{"gitId":"DineshMagesvaran"},"content":"    }"},{"lineNumber":44,"author":{"gitId":"DineshMagesvaran"},"content":""},{"lineNumber":45,"author":{"gitId":"DineshMagesvaran"},"content":"    /**"},{"lineNumber":46,"author":{"gitId":"DineshMagesvaran"},"content":"     * Gets the user dialog box."},{"lineNumber":47,"author":{"gitId":"DineshMagesvaran"},"content":"     *"},{"lineNumber":48,"author":{"gitId":"DineshMagesvaran"},"content":"     * @param l label to display in the dialog box."},{"lineNumber":49,"author":{"gitId":"DineshMagesvaran"},"content":"     * @param iv image view to display in the dialog box."},{"lineNumber":50,"author":{"gitId":"DineshMagesvaran"},"content":"     * @return user dialog box to be displayed on the user interface."},{"lineNumber":51,"author":{"gitId":"DineshMagesvaran"},"content":"     */"},{"lineNumber":52,"author":{"gitId":"DineshMagesvaran"},"content":"    public static DialogBox getUserDialog(Label l, ImageView iv) {"},{"lineNumber":53,"author":{"gitId":"DineshMagesvaran"},"content":"        return new DialogBox(l, iv);"},{"lineNumber":54,"author":{"gitId":"DineshMagesvaran"},"content":"    }"},{"lineNumber":55,"author":{"gitId":"DineshMagesvaran"},"content":""},{"lineNumber":56,"author":{"gitId":"DineshMagesvaran"},"content":"    /**"},{"lineNumber":57,"author":{"gitId":"DineshMagesvaran"},"content":"     * Gets the duke dialog box."},{"lineNumber":58,"author":{"gitId":"DineshMagesvaran"},"content":"     *"},{"lineNumber":59,"author":{"gitId":"DineshMagesvaran"},"content":"     * @param l label to display in the dialog box."},{"lineNumber":60,"author":{"gitId":"DineshMagesvaran"},"content":"     * @param iv image view to display in the dialog box."},{"lineNumber":61,"author":{"gitId":"DineshMagesvaran"},"content":"     * @return duke dialog box to be displayed on the user interface."},{"lineNumber":62,"author":{"gitId":"DineshMagesvaran"},"content":"     */"},{"lineNumber":63,"author":{"gitId":"DineshMagesvaran"},"content":"    public static DialogBox getDukeDialog(Label l, ImageView iv) {"},{"lineNumber":64,"author":{"gitId":"DineshMagesvaran"},"content":"        var db \u003d new DialogBox(l, iv);"},{"lineNumber":65,"author":{"gitId":"DineshMagesvaran"},"content":"        db.flip();"},{"lineNumber":66,"author":{"gitId":"DineshMagesvaran"},"content":"        return db;"},{"lineNumber":67,"author":{"gitId":"DineshMagesvaran"},"content":"    }"},{"lineNumber":68,"author":{"gitId":"DineshMagesvaran"},"content":"}"}],"authorContributionMap":{"DineshMagesvaran":68}},{"path":"src/main/java/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"DineshMagesvaran"},"content":"import javafx.application.Application;"},{"lineNumber":2,"author":{"gitId":"DineshMagesvaran"},"content":""},{"lineNumber":3,"author":{"gitId":"DineshMagesvaran"},"content":"/**"},{"lineNumber":4,"author":{"gitId":"DineshMagesvaran"},"content":" * Class that can create Duke objects that help the user"},{"lineNumber":5,"author":{"gitId":"DineshMagesvaran"},"content":" * to maintain a list of tasks."},{"lineNumber":6,"author":{"gitId":"DineshMagesvaran"},"content":" */"},{"lineNumber":7,"author":{"gitId":"-"},"content":"public class Duke {"},{"lineNumber":8,"author":{"gitId":"DineshMagesvaran"},"content":"    /**"},{"lineNumber":9,"author":{"gitId":"DineshMagesvaran"},"content":"     * Method to run the Duke application."},{"lineNumber":10,"author":{"gitId":"DineshMagesvaran"},"content":"     */"},{"lineNumber":11,"author":{"gitId":"DineshMagesvaran"},"content":"    public void run() {"},{"lineNumber":12,"author":{"gitId":"DineshMagesvaran"},"content":"        Application.launch(UI.class);"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":14,"author":{"gitId":"DineshMagesvaran"},"content":""},{"lineNumber":15,"author":{"gitId":"-"},"content":"    public static void main(String[] args) {"},{"lineNumber":16,"author":{"gitId":"DineshMagesvaran"},"content":"        new Duke().run();"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":18,"author":{"gitId":"DineshMagesvaran"},"content":""},{"lineNumber":19,"author":{"gitId":"-"},"content":"}"}],"authorContributionMap":{"DineshMagesvaran":14,"-":5}},{"path":"src/main/java/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"DineshMagesvaran"},"content":"import java.time.LocalDate;"},{"lineNumber":2,"author":{"gitId":"DineshMagesvaran"},"content":"import java.time.format.DateTimeFormatter;"},{"lineNumber":3,"author":{"gitId":"DineshMagesvaran"},"content":""},{"lineNumber":4,"author":{"gitId":"DineshMagesvaran"},"content":"/**"},{"lineNumber":5,"author":{"gitId":"DineshMagesvaran"},"content":" * Class that can create a event task object."},{"lineNumber":6,"author":{"gitId":"DineshMagesvaran"},"content":" */"},{"lineNumber":7,"author":{"gitId":"DineshMagesvaran"},"content":"public class Event extends Task {"},{"lineNumber":8,"author":{"gitId":"DineshMagesvaran"},"content":"    private static final String EVENT_DISPLAY_ICON \u003d \"[E]\";"},{"lineNumber":9,"author":{"gitId":"DineshMagesvaran"},"content":"    public static final String EVENT_DATA_ICON \u003d \"E\";"},{"lineNumber":10,"author":{"gitId":"DineshMagesvaran"},"content":"    private final LocalDate startDateInfo;"},{"lineNumber":11,"author":{"gitId":"DineshMagesvaran"},"content":"    private final LocalDate endDateInfo;"},{"lineNumber":12,"author":{"gitId":"DineshMagesvaran"},"content":""},{"lineNumber":13,"author":{"gitId":"DineshMagesvaran"},"content":"    /**"},{"lineNumber":14,"author":{"gitId":"DineshMagesvaran"},"content":"     * Constructor that creates a event task."},{"lineNumber":15,"author":{"gitId":"DineshMagesvaran"},"content":"     * @param taskInfo the description of the event task."},{"lineNumber":16,"author":{"gitId":"DineshMagesvaran"},"content":"     * @param startDateInfo the start date of the event task."},{"lineNumber":17,"author":{"gitId":"DineshMagesvaran"},"content":"     * @param endDateInfo the end date of the event task."},{"lineNumber":18,"author":{"gitId":"DineshMagesvaran"},"content":"     */"},{"lineNumber":19,"author":{"gitId":"DineshMagesvaran"},"content":"    public Event(String taskInfo, LocalDate startDateInfo, LocalDate endDateInfo) {"},{"lineNumber":20,"author":{"gitId":"DineshMagesvaran"},"content":"        super(taskInfo);"},{"lineNumber":21,"author":{"gitId":"DineshMagesvaran"},"content":"        assert !endDateInfo.isBefore(startDateInfo);"},{"lineNumber":22,"author":{"gitId":"DineshMagesvaran"},"content":"        this.startDateInfo \u003d startDateInfo;"},{"lineNumber":23,"author":{"gitId":"DineshMagesvaran"},"content":"        this.endDateInfo \u003d endDateInfo;"},{"lineNumber":24,"author":{"gitId":"DineshMagesvaran"},"content":"    }"},{"lineNumber":25,"author":{"gitId":"DineshMagesvaran"},"content":""},{"lineNumber":26,"author":{"gitId":"DineshMagesvaran"},"content":"    @Override"},{"lineNumber":27,"author":{"gitId":"DineshMagesvaran"},"content":"    public String toString() {"},{"lineNumber":28,"author":{"gitId":"DineshMagesvaran"},"content":"        return EVENT_DISPLAY_ICON + super.toString() + \" (\""},{"lineNumber":29,"author":{"gitId":"DineshMagesvaran"},"content":"                + startDateInfo.format(DateTimeFormatter.ofPattern(\"dd MMM yyyy\")) + \" to \""},{"lineNumber":30,"author":{"gitId":"DineshMagesvaran"},"content":"                + endDateInfo.format(DateTimeFormatter.ofPattern(\"dd MMM yyyy\")) + \")\";"},{"lineNumber":31,"author":{"gitId":"DineshMagesvaran"},"content":"    }"},{"lineNumber":32,"author":{"gitId":"DineshMagesvaran"},"content":""},{"lineNumber":33,"author":{"gitId":"DineshMagesvaran"},"content":"    public String getData() {"},{"lineNumber":34,"author":{"gitId":"DineshMagesvaran"},"content":"        if (isDone) {"},{"lineNumber":35,"author":{"gitId":"DineshMagesvaran"},"content":"            return EVENT_DATA_ICON + DELIMITER + IS_DONE_TRUE_DATA_ICON + DELIMITER + taskInfo"},{"lineNumber":36,"author":{"gitId":"DineshMagesvaran"},"content":"                    + DELIMITER + startDateInfo + DELIMITER + endDateInfo;"},{"lineNumber":37,"author":{"gitId":"DineshMagesvaran"},"content":"        } else {"},{"lineNumber":38,"author":{"gitId":"DineshMagesvaran"},"content":"            return EVENT_DATA_ICON + DELIMITER + IS_DONE_FALSE_DATA_ICON + DELIMITER + taskInfo"},{"lineNumber":39,"author":{"gitId":"DineshMagesvaran"},"content":"                    + DELIMITER + startDateInfo + DELIMITER + endDateInfo;"},{"lineNumber":40,"author":{"gitId":"DineshMagesvaran"},"content":"        }"},{"lineNumber":41,"author":{"gitId":"DineshMagesvaran"},"content":"    }"},{"lineNumber":42,"author":{"gitId":"DineshMagesvaran"},"content":"}"}],"authorContributionMap":{"DineshMagesvaran":42}},{"path":"src/main/java/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"DineshMagesvaran"},"content":"import java.time.LocalDate;"},{"lineNumber":2,"author":{"gitId":"DineshMagesvaran"},"content":"import java.time.format.DateTimeParseException;"},{"lineNumber":3,"author":{"gitId":"DineshMagesvaran"},"content":""},{"lineNumber":4,"author":{"gitId":"DineshMagesvaran"},"content":"/**"},{"lineNumber":5,"author":{"gitId":"DineshMagesvaran"},"content":" * Class that can create a Parser object that can interpret the user"},{"lineNumber":6,"author":{"gitId":"DineshMagesvaran"},"content":" * commands."},{"lineNumber":7,"author":{"gitId":"DineshMagesvaran"},"content":" */"},{"lineNumber":8,"author":{"gitId":"DineshMagesvaran"},"content":"public class Parser {"},{"lineNumber":9,"author":{"gitId":"DineshMagesvaran"},"content":"    private static final String COMMAND_LIST \u003d \"list\";"},{"lineNumber":10,"author":{"gitId":"DineshMagesvaran"},"content":"    private static final String COMMAND_DONE \u003d \"done \";"},{"lineNumber":11,"author":{"gitId":"DineshMagesvaran"},"content":"    private static final String COMMAND_DELETE \u003d \"delete \";"},{"lineNumber":12,"author":{"gitId":"DineshMagesvaran"},"content":"    private static final String COMMAND_FIND \u003d \"find \";"},{"lineNumber":13,"author":{"gitId":"DineshMagesvaran"},"content":"    private static final String COMMAND_TODO \u003d \"todo\";"},{"lineNumber":14,"author":{"gitId":"DineshMagesvaran"},"content":"    private static final String COMMAND_DEADLINE \u003d \"deadline\";"},{"lineNumber":15,"author":{"gitId":"DineshMagesvaran"},"content":"    private static final String COMMAND_EVENT \u003d \"event\";"},{"lineNumber":16,"author":{"gitId":"DineshMagesvaran"},"content":""},{"lineNumber":17,"author":{"gitId":"DineshMagesvaran"},"content":"    /**"},{"lineNumber":18,"author":{"gitId":"DineshMagesvaran"},"content":"     * Method that interprets and executes the user command accordingly."},{"lineNumber":19,"author":{"gitId":"DineshMagesvaran"},"content":"     *"},{"lineNumber":20,"author":{"gitId":"DineshMagesvaran"},"content":"     * @param listOfTasks the list of tasks for the user."},{"lineNumber":21,"author":{"gitId":"DineshMagesvaran"},"content":"     * @param textInput the command that was given by the user."},{"lineNumber":22,"author":{"gitId":"DineshMagesvaran"},"content":"     */"},{"lineNumber":23,"author":{"gitId":"DineshMagesvaran"},"content":"    public String executeCommand(TaskList listOfTasks, String textInput) {"},{"lineNumber":24,"author":{"gitId":"DineshMagesvaran"},"content":"        String output \u003d \"\";"},{"lineNumber":25,"author":{"gitId":"DineshMagesvaran"},"content":"        if (textInput.toLowerCase().equals(COMMAND_LIST)) {"},{"lineNumber":26,"author":{"gitId":"DineshMagesvaran"},"content":"            output \u003d executeCommandList(listOfTasks, textInput);"},{"lineNumber":27,"author":{"gitId":"DineshMagesvaran"},"content":"        } else if (textInput.startsWith(COMMAND_DONE)) {"},{"lineNumber":28,"author":{"gitId":"DineshMagesvaran"},"content":"            output \u003d executeCommandDone(listOfTasks, textInput);"},{"lineNumber":29,"author":{"gitId":"DineshMagesvaran"},"content":"        } else if (textInput.startsWith(COMMAND_DELETE)) {"},{"lineNumber":30,"author":{"gitId":"DineshMagesvaran"},"content":"            output \u003d executeCommandDelete(listOfTasks, textInput);"},{"lineNumber":31,"author":{"gitId":"DineshMagesvaran"},"content":"        } else if (textInput.startsWith(COMMAND_FIND)) {"},{"lineNumber":32,"author":{"gitId":"DineshMagesvaran"},"content":"            output \u003d executeCommandFind(listOfTasks, textInput);"},{"lineNumber":33,"author":{"gitId":"DineshMagesvaran"},"content":"        } else if (textInput.startsWith(COMMAND_TODO)) {"},{"lineNumber":34,"author":{"gitId":"DineshMagesvaran"},"content":"            output \u003d executeCommandToDo(listOfTasks, textInput);"},{"lineNumber":35,"author":{"gitId":"DineshMagesvaran"},"content":"        } else if (textInput.startsWith(COMMAND_DEADLINE)) {"},{"lineNumber":36,"author":{"gitId":"DineshMagesvaran"},"content":"            output \u003d executeCommandDeadline(listOfTasks, textInput);"},{"lineNumber":37,"author":{"gitId":"DineshMagesvaran"},"content":"        } else if (textInput.startsWith(COMMAND_EVENT)) {"},{"lineNumber":38,"author":{"gitId":"DineshMagesvaran"},"content":"            output \u003d executeCommandEvent(listOfTasks, textInput);"},{"lineNumber":39,"author":{"gitId":"DineshMagesvaran"},"content":"        } else {"},{"lineNumber":40,"author":{"gitId":"DineshMagesvaran"},"content":"            output +\u003d \"\\t OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\\n\";"},{"lineNumber":41,"author":{"gitId":"DineshMagesvaran"},"content":"        }"},{"lineNumber":42,"author":{"gitId":"DineshMagesvaran"},"content":"        assert !output.equals(\"\");"},{"lineNumber":43,"author":{"gitId":"DineshMagesvaran"},"content":"\t\treturn output;"},{"lineNumber":44,"author":{"gitId":"DineshMagesvaran"},"content":"    }"},{"lineNumber":45,"author":{"gitId":"DineshMagesvaran"},"content":""},{"lineNumber":46,"author":{"gitId":"DineshMagesvaran"},"content":"    /**"},{"lineNumber":47,"author":{"gitId":"DineshMagesvaran"},"content":"     * Method that executes the list command."},{"lineNumber":48,"author":{"gitId":"DineshMagesvaran"},"content":"     *"},{"lineNumber":49,"author":{"gitId":"DineshMagesvaran"},"content":"     * @param listOfTasks the list of tasks to manage using commands."},{"lineNumber":50,"author":{"gitId":"DineshMagesvaran"},"content":"     * @param textInput the full command that needs to be executed."},{"lineNumber":51,"author":{"gitId":"DineshMagesvaran"},"content":"     * @return the output to be displayed on the user interface."},{"lineNumber":52,"author":{"gitId":"DineshMagesvaran"},"content":"     */"},{"lineNumber":53,"author":{"gitId":"DineshMagesvaran"},"content":"    public String executeCommandList(TaskList listOfTasks, String textInput) {"},{"lineNumber":54,"author":{"gitId":"DineshMagesvaran"},"content":"        String output \u003d \"\";"},{"lineNumber":55,"author":{"gitId":"DineshMagesvaran"},"content":"        int i \u003d 1;"},{"lineNumber":56,"author":{"gitId":"DineshMagesvaran"},"content":"        output +\u003d \"\\t Here are the tasks in your list:\\n\";"},{"lineNumber":57,"author":{"gitId":"DineshMagesvaran"},"content":"        for (Task task : listOfTasks) {"},{"lineNumber":58,"author":{"gitId":"DineshMagesvaran"},"content":"            output +\u003d \"\\t \" + i + \".\" + task + \"\\n\";"},{"lineNumber":59,"author":{"gitId":"DineshMagesvaran"},"content":"            i++;"},{"lineNumber":60,"author":{"gitId":"DineshMagesvaran"},"content":"        }"},{"lineNumber":61,"author":{"gitId":"DineshMagesvaran"},"content":"        return output;"},{"lineNumber":62,"author":{"gitId":"DineshMagesvaran"},"content":"    }"},{"lineNumber":63,"author":{"gitId":"DineshMagesvaran"},"content":""},{"lineNumber":64,"author":{"gitId":"DineshMagesvaran"},"content":"    /**"},{"lineNumber":65,"author":{"gitId":"DineshMagesvaran"},"content":"     * Method that executes the done command."},{"lineNumber":66,"author":{"gitId":"DineshMagesvaran"},"content":"     *"},{"lineNumber":67,"author":{"gitId":"DineshMagesvaran"},"content":"     * @param listOfTasks the list of tasks to manage using commands."},{"lineNumber":68,"author":{"gitId":"DineshMagesvaran"},"content":"     * @param textInput the full command that needs to be executed."},{"lineNumber":69,"author":{"gitId":"DineshMagesvaran"},"content":"     * @return the output to be displayed on the user interface."},{"lineNumber":70,"author":{"gitId":"DineshMagesvaran"},"content":"     */"},{"lineNumber":71,"author":{"gitId":"DineshMagesvaran"},"content":"    public String executeCommandDone(TaskList listOfTasks, String textInput) {"},{"lineNumber":72,"author":{"gitId":"DineshMagesvaran"},"content":"        String output \u003d \"\";"},{"lineNumber":73,"author":{"gitId":"DineshMagesvaran"},"content":"        try {"},{"lineNumber":74,"author":{"gitId":"DineshMagesvaran"},"content":"            int i \u003d Integer.parseInt(textInput.substring(5));"},{"lineNumber":75,"author":{"gitId":"DineshMagesvaran"},"content":"            Task task \u003d listOfTasks.get(i - 1);"},{"lineNumber":76,"author":{"gitId":"DineshMagesvaran"},"content":"            task.completeTask();"},{"lineNumber":77,"author":{"gitId":"DineshMagesvaran"},"content":"            output +\u003d \"\\t Nice! I\u0027ve marked this task as done:\\n\";"},{"lineNumber":78,"author":{"gitId":"DineshMagesvaran"},"content":"            output +\u003d \"\\t   \" + task + \"\\n\";"},{"lineNumber":79,"author":{"gitId":"DineshMagesvaran"},"content":"        } catch (NumberFormatException e) {"},{"lineNumber":80,"author":{"gitId":"DineshMagesvaran"},"content":"            output +\u003d \"INVALID COMMAND!\\n\";"},{"lineNumber":81,"author":{"gitId":"DineshMagesvaran"},"content":"        } catch (StringIndexOutOfBoundsException e) {"},{"lineNumber":82,"author":{"gitId":"DineshMagesvaran"},"content":"            output +\u003d \"INVALID COMMAND!\\n\";"},{"lineNumber":83,"author":{"gitId":"DineshMagesvaran"},"content":"        } catch (IndexOutOfBoundsException e) {"},{"lineNumber":84,"author":{"gitId":"DineshMagesvaran"},"content":"            output +\u003d \"INVALID COMMAND!\\n\";"},{"lineNumber":85,"author":{"gitId":"DineshMagesvaran"},"content":"        }"},{"lineNumber":86,"author":{"gitId":"DineshMagesvaran"},"content":"        return output;"},{"lineNumber":87,"author":{"gitId":"DineshMagesvaran"},"content":"    }"},{"lineNumber":88,"author":{"gitId":"DineshMagesvaran"},"content":""},{"lineNumber":89,"author":{"gitId":"DineshMagesvaran"},"content":"    /**"},{"lineNumber":90,"author":{"gitId":"DineshMagesvaran"},"content":"     * Method that executes the delete command."},{"lineNumber":91,"author":{"gitId":"DineshMagesvaran"},"content":"     *"},{"lineNumber":92,"author":{"gitId":"DineshMagesvaran"},"content":"     * @param listOfTasks the list of tasks to manage using commands."},{"lineNumber":93,"author":{"gitId":"DineshMagesvaran"},"content":"     * @param textInput the full command that needs to be executed."},{"lineNumber":94,"author":{"gitId":"DineshMagesvaran"},"content":"     * @return the output to be displayed on the user interface."},{"lineNumber":95,"author":{"gitId":"DineshMagesvaran"},"content":"     */"},{"lineNumber":96,"author":{"gitId":"DineshMagesvaran"},"content":"    public String executeCommandDelete(TaskList listOfTasks, String textInput) {"},{"lineNumber":97,"author":{"gitId":"DineshMagesvaran"},"content":"        String output \u003d \"\";"},{"lineNumber":98,"author":{"gitId":"DineshMagesvaran"},"content":"        try {"},{"lineNumber":99,"author":{"gitId":"DineshMagesvaran"},"content":"            int i \u003d Integer.parseInt(textInput.substring(7));"},{"lineNumber":100,"author":{"gitId":"DineshMagesvaran"},"content":"            Task task \u003d listOfTasks.get(i - 1);"},{"lineNumber":101,"author":{"gitId":"DineshMagesvaran"},"content":"            listOfTasks.remove(i - 1);"},{"lineNumber":102,"author":{"gitId":"DineshMagesvaran"},"content":"            output +\u003d \"\\t Noted. I\u0027ve removed this task:\\n\";"},{"lineNumber":103,"author":{"gitId":"DineshMagesvaran"},"content":"            output +\u003d \"\\t   \" + task + \"\\n\";"},{"lineNumber":104,"author":{"gitId":"DineshMagesvaran"},"content":"            output +\u003d \"\\t Now you have \" + listOfTasks.size() + \" tasks in the list.\\n\";"},{"lineNumber":105,"author":{"gitId":"DineshMagesvaran"},"content":"        } catch (NumberFormatException e) {"},{"lineNumber":106,"author":{"gitId":"DineshMagesvaran"},"content":"            output +\u003d \"INVALID COMMAND!\\n\";"},{"lineNumber":107,"author":{"gitId":"DineshMagesvaran"},"content":"        } catch (StringIndexOutOfBoundsException e) {"},{"lineNumber":108,"author":{"gitId":"DineshMagesvaran"},"content":"            output +\u003d \"INVALID COMMAND!\\n\";"},{"lineNumber":109,"author":{"gitId":"DineshMagesvaran"},"content":"        } catch (IndexOutOfBoundsException e) {"},{"lineNumber":110,"author":{"gitId":"DineshMagesvaran"},"content":"            output +\u003d \"INVALID COMMAND!\\n\";"},{"lineNumber":111,"author":{"gitId":"DineshMagesvaran"},"content":"        }"},{"lineNumber":112,"author":{"gitId":"DineshMagesvaran"},"content":"        return output;"},{"lineNumber":113,"author":{"gitId":"DineshMagesvaran"},"content":"    }"},{"lineNumber":114,"author":{"gitId":"DineshMagesvaran"},"content":""},{"lineNumber":115,"author":{"gitId":"DineshMagesvaran"},"content":"    /**"},{"lineNumber":116,"author":{"gitId":"DineshMagesvaran"},"content":"     * Method that executes the find command."},{"lineNumber":117,"author":{"gitId":"DineshMagesvaran"},"content":"     *"},{"lineNumber":118,"author":{"gitId":"DineshMagesvaran"},"content":"     * @param listOfTasks the list of tasks to manage using commands."},{"lineNumber":119,"author":{"gitId":"DineshMagesvaran"},"content":"     * @param textInput the full command that needs to be executed."},{"lineNumber":120,"author":{"gitId":"DineshMagesvaran"},"content":"     * @return the output to be displayed on the user interface."},{"lineNumber":121,"author":{"gitId":"DineshMagesvaran"},"content":"     */"},{"lineNumber":122,"author":{"gitId":"DineshMagesvaran"},"content":"    public String executeCommandFind(TaskList listOfTasks, String textInput) {"},{"lineNumber":123,"author":{"gitId":"DineshMagesvaran"},"content":"        String output \u003d \"\";"},{"lineNumber":124,"author":{"gitId":"DineshMagesvaran"},"content":"        String textToFind \u003d textInput.substring(5);"},{"lineNumber":125,"author":{"gitId":"DineshMagesvaran"},"content":"        if (textToFind.isBlank()) {"},{"lineNumber":126,"author":{"gitId":"DineshMagesvaran"},"content":"            output +\u003d \"\\t OOPS!!! The description of find cannot be empty.\\n\";"},{"lineNumber":127,"author":{"gitId":"DineshMagesvaran"},"content":"            return output;"},{"lineNumber":128,"author":{"gitId":"DineshMagesvaran"},"content":"        }"},{"lineNumber":129,"author":{"gitId":"DineshMagesvaran"},"content":"        if (textToFind.length() \u003c 3) {"},{"lineNumber":130,"author":{"gitId":"DineshMagesvaran"},"content":"            output +\u003d \"\\t Here are the matching tasks in your list:\\n\";"},{"lineNumber":131,"author":{"gitId":"DineshMagesvaran"},"content":"            int i \u003d 1;"},{"lineNumber":132,"author":{"gitId":"DineshMagesvaran"},"content":"            for (Task task : listOfTasks) {"},{"lineNumber":133,"author":{"gitId":"DineshMagesvaran"},"content":"                if (task.contains(textToFind)) {"},{"lineNumber":134,"author":{"gitId":"DineshMagesvaran"},"content":"                    output +\u003d \"\\t \" + i + \". \" + task + \"\\n\";"},{"lineNumber":135,"author":{"gitId":"DineshMagesvaran"},"content":"                }"},{"lineNumber":136,"author":{"gitId":"DineshMagesvaran"},"content":"                i++;"},{"lineNumber":137,"author":{"gitId":"DineshMagesvaran"},"content":"            }"},{"lineNumber":138,"author":{"gitId":"DineshMagesvaran"},"content":"        }"},{"lineNumber":139,"author":{"gitId":"DineshMagesvaran"},"content":"        output +\u003d \"\\t Here are the matching tasks in your list:\\n\";"},{"lineNumber":140,"author":{"gitId":"DineshMagesvaran"},"content":"        int i \u003d 1;"},{"lineNumber":141,"author":{"gitId":"DineshMagesvaran"},"content":"        for (Task task : listOfTasks) {"},{"lineNumber":142,"author":{"gitId":"DineshMagesvaran"},"content":"            if (isPartialMatch(task, textToFind)) {"},{"lineNumber":143,"author":{"gitId":"DineshMagesvaran"},"content":"                output +\u003d \"\\t \" + i + \". \" + task + \"\\n\";"},{"lineNumber":144,"author":{"gitId":"DineshMagesvaran"},"content":"            }"},{"lineNumber":145,"author":{"gitId":"DineshMagesvaran"},"content":"            i++;"},{"lineNumber":146,"author":{"gitId":"DineshMagesvaran"},"content":"        }"},{"lineNumber":147,"author":{"gitId":"DineshMagesvaran"},"content":"        return output;"},{"lineNumber":148,"author":{"gitId":"DineshMagesvaran"},"content":"    }"},{"lineNumber":149,"author":{"gitId":"DineshMagesvaran"},"content":""},{"lineNumber":150,"author":{"gitId":"DineshMagesvaran"},"content":"    /**"},{"lineNumber":151,"author":{"gitId":"DineshMagesvaran"},"content":"     * Method that finds if a task contains any substring from a given keyword."},{"lineNumber":152,"author":{"gitId":"DineshMagesvaran"},"content":"     *"},{"lineNumber":153,"author":{"gitId":"DineshMagesvaran"},"content":"     * @param task the task to find the substring in."},{"lineNumber":154,"author":{"gitId":"DineshMagesvaran"},"content":"     * @param keyword the keyword with substrings to find in the task."},{"lineNumber":155,"author":{"gitId":"DineshMagesvaran"},"content":"     * @return true if the task matches any part of the keyword."},{"lineNumber":156,"author":{"gitId":"DineshMagesvaran"},"content":"     */"},{"lineNumber":157,"author":{"gitId":"DineshMagesvaran"},"content":"    public boolean isPartialMatch(Task task, String keyword) {"},{"lineNumber":158,"author":{"gitId":"DineshMagesvaran"},"content":"        for (int i \u003d 3; i \u003c\u003d keyword.length(); i++) {"},{"lineNumber":159,"author":{"gitId":"DineshMagesvaran"},"content":"            for (int j \u003d 0; j \u003c\u003d keyword.length() - i; j++) {"},{"lineNumber":160,"author":{"gitId":"DineshMagesvaran"},"content":"                String subString \u003d keyword.substring(j, j + i);"},{"lineNumber":161,"author":{"gitId":"DineshMagesvaran"},"content":"                if (task.contains(subString)) {"},{"lineNumber":162,"author":{"gitId":"DineshMagesvaran"},"content":"                    return true;"},{"lineNumber":163,"author":{"gitId":"DineshMagesvaran"},"content":"                }"},{"lineNumber":164,"author":{"gitId":"DineshMagesvaran"},"content":"            }"},{"lineNumber":165,"author":{"gitId":"DineshMagesvaran"},"content":"        }"},{"lineNumber":166,"author":{"gitId":"DineshMagesvaran"},"content":"        return false;"},{"lineNumber":167,"author":{"gitId":"DineshMagesvaran"},"content":"    }"},{"lineNumber":168,"author":{"gitId":"DineshMagesvaran"},"content":""},{"lineNumber":169,"author":{"gitId":"DineshMagesvaran"},"content":"    /**"},{"lineNumber":170,"author":{"gitId":"DineshMagesvaran"},"content":"     * Method that executes the todo command."},{"lineNumber":171,"author":{"gitId":"DineshMagesvaran"},"content":"     *"},{"lineNumber":172,"author":{"gitId":"DineshMagesvaran"},"content":"     * @param listOfTasks the list of tasks to manage using commands."},{"lineNumber":173,"author":{"gitId":"DineshMagesvaran"},"content":"     * @param textInput the full command that needs to be executed."},{"lineNumber":174,"author":{"gitId":"DineshMagesvaran"},"content":"     * @return the output to be displayed on the user interface."},{"lineNumber":175,"author":{"gitId":"DineshMagesvaran"},"content":"     */"},{"lineNumber":176,"author":{"gitId":"DineshMagesvaran"},"content":"    public String executeCommandToDo(TaskList listOfTasks, String textInput) {"},{"lineNumber":177,"author":{"gitId":"DineshMagesvaran"},"content":"        String output \u003d \"\";"},{"lineNumber":178,"author":{"gitId":"DineshMagesvaran"},"content":"        try {"},{"lineNumber":179,"author":{"gitId":"DineshMagesvaran"},"content":"            textInput \u003d textInput.substring(5);"},{"lineNumber":180,"author":{"gitId":"DineshMagesvaran"},"content":"            if (textInput.isBlank()) {"},{"lineNumber":181,"author":{"gitId":"DineshMagesvaran"},"content":"                output +\u003d \"INVALID COMMAND!\\n\";"},{"lineNumber":182,"author":{"gitId":"DineshMagesvaran"},"content":"                return output;"},{"lineNumber":183,"author":{"gitId":"DineshMagesvaran"},"content":"            }"},{"lineNumber":184,"author":{"gitId":"DineshMagesvaran"},"content":"            Task task \u003d new ToDo(textInput);"},{"lineNumber":185,"author":{"gitId":"DineshMagesvaran"},"content":"            listOfTasks.add(task);"},{"lineNumber":186,"author":{"gitId":"DineshMagesvaran"},"content":"            output +\u003d \"\\t Got it. I\u0027ve added this task:\\n\";"},{"lineNumber":187,"author":{"gitId":"DineshMagesvaran"},"content":"            output +\u003d \"\\t   \" + task + \"\\n\";"},{"lineNumber":188,"author":{"gitId":"DineshMagesvaran"},"content":"            output +\u003d \"\\t Now you have \" + listOfTasks.size() + \" tasks in the list.\\n\";"},{"lineNumber":189,"author":{"gitId":"DineshMagesvaran"},"content":"        } catch (StringIndexOutOfBoundsException e) {"},{"lineNumber":190,"author":{"gitId":"DineshMagesvaran"},"content":"            output +\u003d \"\\t OOPS!!! The description of a todo cannot be empty.\\n\";"},{"lineNumber":191,"author":{"gitId":"DineshMagesvaran"},"content":"        }"},{"lineNumber":192,"author":{"gitId":"DineshMagesvaran"},"content":"        return output;"},{"lineNumber":193,"author":{"gitId":"DineshMagesvaran"},"content":"    }"},{"lineNumber":194,"author":{"gitId":"DineshMagesvaran"},"content":""},{"lineNumber":195,"author":{"gitId":"DineshMagesvaran"},"content":"    /**"},{"lineNumber":196,"author":{"gitId":"DineshMagesvaran"},"content":"     * Method that executes the deadline command."},{"lineNumber":197,"author":{"gitId":"DineshMagesvaran"},"content":"     *"},{"lineNumber":198,"author":{"gitId":"DineshMagesvaran"},"content":"     * @param listOfTasks the list of tasks to manage using commands."},{"lineNumber":199,"author":{"gitId":"DineshMagesvaran"},"content":"     * @param textInput the full command that needs to be executed."},{"lineNumber":200,"author":{"gitId":"DineshMagesvaran"},"content":"     * @return the output to be displayed on the user interface."},{"lineNumber":201,"author":{"gitId":"DineshMagesvaran"},"content":"     */"},{"lineNumber":202,"author":{"gitId":"DineshMagesvaran"},"content":"    public String executeCommandDeadline(TaskList listOfTasks, String textInput) {"},{"lineNumber":203,"author":{"gitId":"DineshMagesvaran"},"content":"        String output \u003d \"\";"},{"lineNumber":204,"author":{"gitId":"DineshMagesvaran"},"content":"        try {"},{"lineNumber":205,"author":{"gitId":"DineshMagesvaran"},"content":"            textInput \u003d textInput.substring(9);"},{"lineNumber":206,"author":{"gitId":"DineshMagesvaran"},"content":"            int index \u003d textInput.indexOf(\"/by \");"},{"lineNumber":207,"author":{"gitId":"DineshMagesvaran"},"content":"            if (index !\u003d -1) {"},{"lineNumber":208,"author":{"gitId":"DineshMagesvaran"},"content":"                String dateInfo \u003d textInput.substring(index + 4);"},{"lineNumber":209,"author":{"gitId":"DineshMagesvaran"},"content":"                LocalDate localDate \u003d LocalDate.parse(dateInfo);"},{"lineNumber":210,"author":{"gitId":"DineshMagesvaran"},"content":"                Task task \u003d new Deadline(textInput.substring(0, index - 1), localDate);"},{"lineNumber":211,"author":{"gitId":"DineshMagesvaran"},"content":"                listOfTasks.add(task);"},{"lineNumber":212,"author":{"gitId":"DineshMagesvaran"},"content":"                output +\u003d \"\\t Got it. I\u0027ve added this task:\\n\";"},{"lineNumber":213,"author":{"gitId":"DineshMagesvaran"},"content":"                output +\u003d \"\\t   \" + task + \"\\n\";"},{"lineNumber":214,"author":{"gitId":"DineshMagesvaran"},"content":"                output +\u003d \"\\t Now you have \" + listOfTasks.size() + \" tasks in the list.\\n\";"},{"lineNumber":215,"author":{"gitId":"DineshMagesvaran"},"content":"            } else {"},{"lineNumber":216,"author":{"gitId":"DineshMagesvaran"},"content":"                output +\u003d \"INVALID COMMAND!\\n\";"},{"lineNumber":217,"author":{"gitId":"DineshMagesvaran"},"content":"            }"},{"lineNumber":218,"author":{"gitId":"DineshMagesvaran"},"content":"        } catch (StringIndexOutOfBoundsException e) {"},{"lineNumber":219,"author":{"gitId":"DineshMagesvaran"},"content":"            output +\u003d \"\\t OOPS!!! The description of a deadline cannot be empty.\\n\";"},{"lineNumber":220,"author":{"gitId":"DineshMagesvaran"},"content":"        } catch (DateTimeParseException e) {"},{"lineNumber":221,"author":{"gitId":"DineshMagesvaran"},"content":"            output +\u003d \"INVALID COMMAND!\\n\";"},{"lineNumber":222,"author":{"gitId":"DineshMagesvaran"},"content":"        }"},{"lineNumber":223,"author":{"gitId":"DineshMagesvaran"},"content":"        return output;"},{"lineNumber":224,"author":{"gitId":"DineshMagesvaran"},"content":"    }"},{"lineNumber":225,"author":{"gitId":"DineshMagesvaran"},"content":""},{"lineNumber":226,"author":{"gitId":"DineshMagesvaran"},"content":"    /**"},{"lineNumber":227,"author":{"gitId":"DineshMagesvaran"},"content":"     * Method that executes the event command."},{"lineNumber":228,"author":{"gitId":"DineshMagesvaran"},"content":"     *"},{"lineNumber":229,"author":{"gitId":"DineshMagesvaran"},"content":"     * @param listOfTasks the list of tasks to manage using commands."},{"lineNumber":230,"author":{"gitId":"DineshMagesvaran"},"content":"     * @param textInput the full command that needs to be executed."},{"lineNumber":231,"author":{"gitId":"DineshMagesvaran"},"content":"     * @return the output to be displayed on the user interface."},{"lineNumber":232,"author":{"gitId":"DineshMagesvaran"},"content":"     */"},{"lineNumber":233,"author":{"gitId":"DineshMagesvaran"},"content":"    public String executeCommandEvent(TaskList listOfTasks, String textInput) {"},{"lineNumber":234,"author":{"gitId":"DineshMagesvaran"},"content":"        String output \u003d \"\";"},{"lineNumber":235,"author":{"gitId":"DineshMagesvaran"},"content":"        try {"},{"lineNumber":236,"author":{"gitId":"DineshMagesvaran"},"content":"            textInput \u003d textInput.substring(6);"},{"lineNumber":237,"author":{"gitId":"DineshMagesvaran"},"content":"            int index \u003d textInput.indexOf(\"/from \");"},{"lineNumber":238,"author":{"gitId":"DineshMagesvaran"},"content":"            if (index \u003d\u003d -1) {"},{"lineNumber":239,"author":{"gitId":"DineshMagesvaran"},"content":"                output +\u003d \"INVALID COMMAND!\\n\";"},{"lineNumber":240,"author":{"gitId":"DineshMagesvaran"},"content":"                return output;"},{"lineNumber":241,"author":{"gitId":"DineshMagesvaran"},"content":"            }"},{"lineNumber":242,"author":{"gitId":"DineshMagesvaran"},"content":"            String dateInfo \u003d textInput.substring(index + 6);"},{"lineNumber":243,"author":{"gitId":"DineshMagesvaran"},"content":"            int index2 \u003d dateInfo.indexOf(\"to \");"},{"lineNumber":244,"author":{"gitId":"DineshMagesvaran"},"content":"            if (index2 \u003d\u003d -1) {"},{"lineNumber":245,"author":{"gitId":"DineshMagesvaran"},"content":"                output +\u003d \"INVALID COMMAND!\\n\";"},{"lineNumber":246,"author":{"gitId":"DineshMagesvaran"},"content":"                return output;"},{"lineNumber":247,"author":{"gitId":"DineshMagesvaran"},"content":"            }"},{"lineNumber":248,"author":{"gitId":"DineshMagesvaran"},"content":"            LocalDate startDate \u003d LocalDate.parse(dateInfo.substring(0, index2 - 1));"},{"lineNumber":249,"author":{"gitId":"DineshMagesvaran"},"content":"            LocalDate endDate \u003d LocalDate.parse(dateInfo.substring(index2 + 3));"},{"lineNumber":250,"author":{"gitId":"DineshMagesvaran"},"content":"            if (endDate.isBefore(startDate)) {"},{"lineNumber":251,"author":{"gitId":"DineshMagesvaran"},"content":"                output +\u003d \"\\t OOPS!!! The end date of an event cannot be earlier than the start date.\\n\";"},{"lineNumber":252,"author":{"gitId":"DineshMagesvaran"},"content":"                return output;"},{"lineNumber":253,"author":{"gitId":"DineshMagesvaran"},"content":"            }"},{"lineNumber":254,"author":{"gitId":"DineshMagesvaran"},"content":"            Task task \u003d new Event(textInput.substring(0, index - 1), startDate, endDate);"},{"lineNumber":255,"author":{"gitId":"DineshMagesvaran"},"content":"            listOfTasks.add(task);"},{"lineNumber":256,"author":{"gitId":"DineshMagesvaran"},"content":"            output +\u003d \"\\t Got it. I\u0027ve added this task:\\n\";"},{"lineNumber":257,"author":{"gitId":"DineshMagesvaran"},"content":"            output +\u003d \"\\t   \" + task + \"\\n\";"},{"lineNumber":258,"author":{"gitId":"DineshMagesvaran"},"content":"            output +\u003d \"\\t Now you have \" + listOfTasks.size() + \" tasks in the list.\\n\";"},{"lineNumber":259,"author":{"gitId":"DineshMagesvaran"},"content":"        } catch (StringIndexOutOfBoundsException e) {"},{"lineNumber":260,"author":{"gitId":"DineshMagesvaran"},"content":"            output +\u003d \"\\t OOPS!!! The description of a event cannot be empty.\\n\";"},{"lineNumber":261,"author":{"gitId":"DineshMagesvaran"},"content":"        } catch (DateTimeParseException e) {"},{"lineNumber":262,"author":{"gitId":"DineshMagesvaran"},"content":"            output +\u003d \"INVALID COMMAND!\\n\";"},{"lineNumber":263,"author":{"gitId":"DineshMagesvaran"},"content":"        }"},{"lineNumber":264,"author":{"gitId":"DineshMagesvaran"},"content":"        return output;"},{"lineNumber":265,"author":{"gitId":"DineshMagesvaran"},"content":"    }"},{"lineNumber":266,"author":{"gitId":"DineshMagesvaran"},"content":"}"}],"authorContributionMap":{"DineshMagesvaran":266}},{"path":"src/main/java/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"DineshMagesvaran"},"content":"import java.io.File;"},{"lineNumber":2,"author":{"gitId":"DineshMagesvaran"},"content":"import java.io.FileNotFoundException;"},{"lineNumber":3,"author":{"gitId":"DineshMagesvaran"},"content":"import java.io.FileWriter;"},{"lineNumber":4,"author":{"gitId":"DineshMagesvaran"},"content":"import java.io.IOException;"},{"lineNumber":5,"author":{"gitId":"DineshMagesvaran"},"content":"import java.time.LocalDate;"},{"lineNumber":6,"author":{"gitId":"DineshMagesvaran"},"content":"import java.util.Scanner;"},{"lineNumber":7,"author":{"gitId":"DineshMagesvaran"},"content":""},{"lineNumber":8,"author":{"gitId":"DineshMagesvaran"},"content":"/**"},{"lineNumber":9,"author":{"gitId":"DineshMagesvaran"},"content":" * Class that can create a storage object that contains methods to"},{"lineNumber":10,"author":{"gitId":"DineshMagesvaran"},"content":" * read and write data to a file."},{"lineNumber":11,"author":{"gitId":"DineshMagesvaran"},"content":" */"},{"lineNumber":12,"author":{"gitId":"DineshMagesvaran"},"content":"public class Storage {"},{"lineNumber":13,"author":{"gitId":"DineshMagesvaran"},"content":"    private final String filePath;"},{"lineNumber":14,"author":{"gitId":"DineshMagesvaran"},"content":""},{"lineNumber":15,"author":{"gitId":"DineshMagesvaran"},"content":"    /**"},{"lineNumber":16,"author":{"gitId":"DineshMagesvaran"},"content":"     * Constructor that creates a new Storage object."},{"lineNumber":17,"author":{"gitId":"DineshMagesvaran"},"content":"     *"},{"lineNumber":18,"author":{"gitId":"DineshMagesvaran"},"content":"     * @param filePath the file path that is used to read and write"},{"lineNumber":19,"author":{"gitId":"DineshMagesvaran"},"content":"     *                 data to."},{"lineNumber":20,"author":{"gitId":"DineshMagesvaran"},"content":"     */"},{"lineNumber":21,"author":{"gitId":"DineshMagesvaran"},"content":"    public Storage(String filePath) {"},{"lineNumber":22,"author":{"gitId":"DineshMagesvaran"},"content":"        this.filePath \u003d filePath;"},{"lineNumber":23,"author":{"gitId":"DineshMagesvaran"},"content":"    }"},{"lineNumber":24,"author":{"gitId":"DineshMagesvaran"},"content":""},{"lineNumber":25,"author":{"gitId":"DineshMagesvaran"},"content":"    /**"},{"lineNumber":26,"author":{"gitId":"DineshMagesvaran"},"content":"     * Method that reads the data from the file located at the file path."},{"lineNumber":27,"author":{"gitId":"DineshMagesvaran"},"content":"     *"},{"lineNumber":28,"author":{"gitId":"DineshMagesvaran"},"content":"     * @return the list of tasks obtained from the stored data in the file."},{"lineNumber":29,"author":{"gitId":"DineshMagesvaran"},"content":"     */"},{"lineNumber":30,"author":{"gitId":"DineshMagesvaran"},"content":"    public TaskList readDataFromFile() {"},{"lineNumber":31,"author":{"gitId":"DineshMagesvaran"},"content":"        TaskList taskList \u003d new TaskList();"},{"lineNumber":32,"author":{"gitId":"DineshMagesvaran"},"content":"        try {"},{"lineNumber":33,"author":{"gitId":"DineshMagesvaran"},"content":"            File file \u003d new File(filePath);"},{"lineNumber":34,"author":{"gitId":"DineshMagesvaran"},"content":"            Scanner readFile \u003d new Scanner(file);"},{"lineNumber":35,"author":{"gitId":"DineshMagesvaran"},"content":"            while (readFile.hasNextLine()) {"},{"lineNumber":36,"author":{"gitId":"DineshMagesvaran"},"content":"                String taskData \u003d readFile.nextLine();"},{"lineNumber":37,"author":{"gitId":"DineshMagesvaran"},"content":"                if (taskData.startsWith(ToDo.TODO_DATA_ICON)) {"},{"lineNumber":38,"author":{"gitId":"DineshMagesvaran"},"content":"                    readToDoDataFromFile(taskList, taskData);"},{"lineNumber":39,"author":{"gitId":"DineshMagesvaran"},"content":"                } else if (taskData.startsWith(Deadline.DEADLINE_DATA_ICON)) {"},{"lineNumber":40,"author":{"gitId":"DineshMagesvaran"},"content":"                    readDeadlineDataFromFile(taskList, taskData);"},{"lineNumber":41,"author":{"gitId":"DineshMagesvaran"},"content":"                } else if (taskData.startsWith(Event.EVENT_DATA_ICON)) {"},{"lineNumber":42,"author":{"gitId":"DineshMagesvaran"},"content":"                    readEventDataFromFile(taskList, taskData);"},{"lineNumber":43,"author":{"gitId":"DineshMagesvaran"},"content":"                } else {"},{"lineNumber":44,"author":{"gitId":"DineshMagesvaran"},"content":"                    assert false;"},{"lineNumber":45,"author":{"gitId":"DineshMagesvaran"},"content":"                }"},{"lineNumber":46,"author":{"gitId":"DineshMagesvaran"},"content":"            }"},{"lineNumber":47,"author":{"gitId":"DineshMagesvaran"},"content":"        } catch (FileNotFoundException e) {"},{"lineNumber":48,"author":{"gitId":"DineshMagesvaran"},"content":"            File file \u003d new File(filePath);"},{"lineNumber":49,"author":{"gitId":"DineshMagesvaran"},"content":"            try {"},{"lineNumber":50,"author":{"gitId":"DineshMagesvaran"},"content":"                file.getParentFile().mkdirs();"},{"lineNumber":51,"author":{"gitId":"DineshMagesvaran"},"content":"                file.createNewFile();"},{"lineNumber":52,"author":{"gitId":"DineshMagesvaran"},"content":"            } catch (IOException ioException) {"},{"lineNumber":53,"author":{"gitId":"DineshMagesvaran"},"content":"                ioException.printStackTrace();"},{"lineNumber":54,"author":{"gitId":"DineshMagesvaran"},"content":"            }"},{"lineNumber":55,"author":{"gitId":"DineshMagesvaran"},"content":"        }"},{"lineNumber":56,"author":{"gitId":"DineshMagesvaran"},"content":"        return taskList;"},{"lineNumber":57,"author":{"gitId":"DineshMagesvaran"},"content":"    }"},{"lineNumber":58,"author":{"gitId":"DineshMagesvaran"},"content":""},{"lineNumber":59,"author":{"gitId":"DineshMagesvaran"},"content":"    /**"},{"lineNumber":60,"author":{"gitId":"DineshMagesvaran"},"content":"     * Method that reads the provided to-do task data and adds it to the task list."},{"lineNumber":61,"author":{"gitId":"DineshMagesvaran"},"content":"     *"},{"lineNumber":62,"author":{"gitId":"DineshMagesvaran"},"content":"     * @param taskList the task list to add the to-do task into."},{"lineNumber":63,"author":{"gitId":"DineshMagesvaran"},"content":"     * @param taskData the task data to read from the file."},{"lineNumber":64,"author":{"gitId":"DineshMagesvaran"},"content":"     */"},{"lineNumber":65,"author":{"gitId":"DineshMagesvaran"},"content":"    public void readToDoDataFromFile(TaskList taskList, String taskData) {"},{"lineNumber":66,"author":{"gitId":"DineshMagesvaran"},"content":"        String[] listOfData \u003d taskData.split(Task.DELIMITER, 3);"},{"lineNumber":67,"author":{"gitId":"DineshMagesvaran"},"content":"        Task newTodo \u003d new ToDo(listOfData[2]);"},{"lineNumber":68,"author":{"gitId":"DineshMagesvaran"},"content":"        if (listOfData[1].equals(Task.IS_DONE_TRUE_DATA_ICON)) {"},{"lineNumber":69,"author":{"gitId":"DineshMagesvaran"},"content":"            newTodo.completeTask();"},{"lineNumber":70,"author":{"gitId":"DineshMagesvaran"},"content":"        }"},{"lineNumber":71,"author":{"gitId":"DineshMagesvaran"},"content":"        taskList.addTask(newTodo);"},{"lineNumber":72,"author":{"gitId":"DineshMagesvaran"},"content":"    }"},{"lineNumber":73,"author":{"gitId":"DineshMagesvaran"},"content":""},{"lineNumber":74,"author":{"gitId":"DineshMagesvaran"},"content":"    /**"},{"lineNumber":75,"author":{"gitId":"DineshMagesvaran"},"content":"     * Method that reads the provided deadline task data and adds it to the task list."},{"lineNumber":76,"author":{"gitId":"DineshMagesvaran"},"content":"     *"},{"lineNumber":77,"author":{"gitId":"DineshMagesvaran"},"content":"     * @param taskList the task list to add the deadline task into."},{"lineNumber":78,"author":{"gitId":"DineshMagesvaran"},"content":"     * @param taskData the task data to read from the file."},{"lineNumber":79,"author":{"gitId":"DineshMagesvaran"},"content":"     */"},{"lineNumber":80,"author":{"gitId":"DineshMagesvaran"},"content":"    public void readDeadlineDataFromFile(TaskList taskList, String taskData) {"},{"lineNumber":81,"author":{"gitId":"DineshMagesvaran"},"content":"        String[] listOfData \u003d taskData.split(Task.DELIMITER, 4);"},{"lineNumber":82,"author":{"gitId":"DineshMagesvaran"},"content":"        LocalDate localDate \u003d LocalDate.parse(listOfData[3]);"},{"lineNumber":83,"author":{"gitId":"DineshMagesvaran"},"content":"        Task newDeadline \u003d new Deadline(listOfData[2], localDate);"},{"lineNumber":84,"author":{"gitId":"DineshMagesvaran"},"content":"        if (listOfData[1].equals(Task.IS_DONE_TRUE_DATA_ICON)) {"},{"lineNumber":85,"author":{"gitId":"DineshMagesvaran"},"content":"            newDeadline.completeTask();"},{"lineNumber":86,"author":{"gitId":"DineshMagesvaran"},"content":"        }"},{"lineNumber":87,"author":{"gitId":"DineshMagesvaran"},"content":"        taskList.addTask(newDeadline);"},{"lineNumber":88,"author":{"gitId":"DineshMagesvaran"},"content":"    }"},{"lineNumber":89,"author":{"gitId":"DineshMagesvaran"},"content":""},{"lineNumber":90,"author":{"gitId":"DineshMagesvaran"},"content":"    /**"},{"lineNumber":91,"author":{"gitId":"DineshMagesvaran"},"content":"     * Method that reads the provided event task data and adds it to the task list."},{"lineNumber":92,"author":{"gitId":"DineshMagesvaran"},"content":"     *"},{"lineNumber":93,"author":{"gitId":"DineshMagesvaran"},"content":"     * @param taskList the task list to add the event task into."},{"lineNumber":94,"author":{"gitId":"DineshMagesvaran"},"content":"     * @param taskData the task data to read from the file."},{"lineNumber":95,"author":{"gitId":"DineshMagesvaran"},"content":"     */"},{"lineNumber":96,"author":{"gitId":"DineshMagesvaran"},"content":"    public void readEventDataFromFile(TaskList taskList, String taskData) {"},{"lineNumber":97,"author":{"gitId":"DineshMagesvaran"},"content":"        String[] listOfData \u003d taskData.split(Task.DELIMITER, 5);"},{"lineNumber":98,"author":{"gitId":"DineshMagesvaran"},"content":"        LocalDate startDate \u003d LocalDate.parse(listOfData[3]);"},{"lineNumber":99,"author":{"gitId":"DineshMagesvaran"},"content":"        LocalDate endDate \u003d LocalDate.parse(listOfData[4]);"},{"lineNumber":100,"author":{"gitId":"DineshMagesvaran"},"content":"        Task newEvent \u003d new Event(listOfData[2], startDate, endDate);"},{"lineNumber":101,"author":{"gitId":"DineshMagesvaran"},"content":"        if (listOfData[1].equals(Task.IS_DONE_TRUE_DATA_ICON)) {"},{"lineNumber":102,"author":{"gitId":"DineshMagesvaran"},"content":"            newEvent.completeTask();"},{"lineNumber":103,"author":{"gitId":"DineshMagesvaran"},"content":"        }"},{"lineNumber":104,"author":{"gitId":"DineshMagesvaran"},"content":"        taskList.addTask(newEvent);"},{"lineNumber":105,"author":{"gitId":"DineshMagesvaran"},"content":"    }"},{"lineNumber":106,"author":{"gitId":"DineshMagesvaran"},"content":""},{"lineNumber":107,"author":{"gitId":"DineshMagesvaran"},"content":"    /**"},{"lineNumber":108,"author":{"gitId":"DineshMagesvaran"},"content":"     * Method that writes data to the file located at the file path."},{"lineNumber":109,"author":{"gitId":"DineshMagesvaran"},"content":"     *"},{"lineNumber":110,"author":{"gitId":"DineshMagesvaran"},"content":"     * @param taskList the list of tasks to be stored in the file."},{"lineNumber":111,"author":{"gitId":"DineshMagesvaran"},"content":"     */"},{"lineNumber":112,"author":{"gitId":"DineshMagesvaran"},"content":"    public void writeDataIntoFile(TaskList taskList) {"},{"lineNumber":113,"author":{"gitId":"DineshMagesvaran"},"content":"        try {"},{"lineNumber":114,"author":{"gitId":"DineshMagesvaran"},"content":"            FileWriter writeFile \u003d new FileWriter(filePath);"},{"lineNumber":115,"author":{"gitId":"DineshMagesvaran"},"content":"            while (taskList.size() !\u003d 0) {"},{"lineNumber":116,"author":{"gitId":"DineshMagesvaran"},"content":"                Task task \u003d taskList.deleteTask(0);"},{"lineNumber":117,"author":{"gitId":"DineshMagesvaran"},"content":"                writeFile.write(task.getData());"},{"lineNumber":118,"author":{"gitId":"DineshMagesvaran"},"content":"                writeFile.write(\"\\n\");"},{"lineNumber":119,"author":{"gitId":"DineshMagesvaran"},"content":"            }"},{"lineNumber":120,"author":{"gitId":"DineshMagesvaran"},"content":"            writeFile.close();"},{"lineNumber":121,"author":{"gitId":"DineshMagesvaran"},"content":"        } catch (IOException e) {"},{"lineNumber":122,"author":{"gitId":"DineshMagesvaran"},"content":"            e.printStackTrace();"},{"lineNumber":123,"author":{"gitId":"DineshMagesvaran"},"content":"        }"},{"lineNumber":124,"author":{"gitId":"DineshMagesvaran"},"content":"    }"},{"lineNumber":125,"author":{"gitId":"DineshMagesvaran"},"content":"}"}],"authorContributionMap":{"DineshMagesvaran":125}},{"path":"src/main/java/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"DineshMagesvaran"},"content":"/**"},{"lineNumber":2,"author":{"gitId":"DineshMagesvaran"},"content":" * Abstract class that contains the template of a task"},{"lineNumber":3,"author":{"gitId":"DineshMagesvaran"},"content":" * object."},{"lineNumber":4,"author":{"gitId":"DineshMagesvaran"},"content":" */"},{"lineNumber":5,"author":{"gitId":"DineshMagesvaran"},"content":"public abstract class Task {"},{"lineNumber":6,"author":{"gitId":"DineshMagesvaran"},"content":"    public static final String DELIMITER \u003d \"!@#\";"},{"lineNumber":7,"author":{"gitId":"DineshMagesvaran"},"content":"    private static final String IS_DONE_TRUE_DISPLAY_ICON \u003d \"[X]\";"},{"lineNumber":8,"author":{"gitId":"DineshMagesvaran"},"content":"    private static final String IS_DONE_FALSE_DISPLAY_ICON \u003d \"[ ]\";"},{"lineNumber":9,"author":{"gitId":"DineshMagesvaran"},"content":"    public static final String IS_DONE_TRUE_DATA_ICON \u003d \"1\";"},{"lineNumber":10,"author":{"gitId":"DineshMagesvaran"},"content":"    protected static final String IS_DONE_FALSE_DATA_ICON \u003d \"0\";"},{"lineNumber":11,"author":{"gitId":"DineshMagesvaran"},"content":"    protected Boolean isDone;"},{"lineNumber":12,"author":{"gitId":"DineshMagesvaran"},"content":"    protected final String taskInfo;"},{"lineNumber":13,"author":{"gitId":"DineshMagesvaran"},"content":""},{"lineNumber":14,"author":{"gitId":"DineshMagesvaran"},"content":"    /**"},{"lineNumber":15,"author":{"gitId":"DineshMagesvaran"},"content":"     * Constructor that creates a task object."},{"lineNumber":16,"author":{"gitId":"DineshMagesvaran"},"content":"     * @param taskInfo the description of the task."},{"lineNumber":17,"author":{"gitId":"DineshMagesvaran"},"content":"     */"},{"lineNumber":18,"author":{"gitId":"DineshMagesvaran"},"content":"    public Task(String taskInfo) {"},{"lineNumber":19,"author":{"gitId":"DineshMagesvaran"},"content":"        isDone \u003d false;"},{"lineNumber":20,"author":{"gitId":"DineshMagesvaran"},"content":"        this.taskInfo \u003d taskInfo;"},{"lineNumber":21,"author":{"gitId":"DineshMagesvaran"},"content":"    }"},{"lineNumber":22,"author":{"gitId":"DineshMagesvaran"},"content":""},{"lineNumber":23,"author":{"gitId":"DineshMagesvaran"},"content":"    @Override"},{"lineNumber":24,"author":{"gitId":"DineshMagesvaran"},"content":"    public String toString() {"},{"lineNumber":25,"author":{"gitId":"DineshMagesvaran"},"content":"        if (isDone) {"},{"lineNumber":26,"author":{"gitId":"DineshMagesvaran"},"content":"            return IS_DONE_TRUE_DISPLAY_ICON + \" \" + taskInfo;"},{"lineNumber":27,"author":{"gitId":"DineshMagesvaran"},"content":"        } else {"},{"lineNumber":28,"author":{"gitId":"DineshMagesvaran"},"content":"            return IS_DONE_FALSE_DISPLAY_ICON + \" \" + taskInfo;"},{"lineNumber":29,"author":{"gitId":"DineshMagesvaran"},"content":"        }"},{"lineNumber":30,"author":{"gitId":"DineshMagesvaran"},"content":"    }"},{"lineNumber":31,"author":{"gitId":"DineshMagesvaran"},"content":""},{"lineNumber":32,"author":{"gitId":"DineshMagesvaran"},"content":"    /**"},{"lineNumber":33,"author":{"gitId":"DineshMagesvaran"},"content":"     * Method that marks the task as done."},{"lineNumber":34,"author":{"gitId":"DineshMagesvaran"},"content":"     */"},{"lineNumber":35,"author":{"gitId":"DineshMagesvaran"},"content":"    public void completeTask() {"},{"lineNumber":36,"author":{"gitId":"DineshMagesvaran"},"content":"        isDone \u003d true;"},{"lineNumber":37,"author":{"gitId":"DineshMagesvaran"},"content":"    }"},{"lineNumber":38,"author":{"gitId":"DineshMagesvaran"},"content":""},{"lineNumber":39,"author":{"gitId":"DineshMagesvaran"},"content":"    /**"},{"lineNumber":40,"author":{"gitId":"DineshMagesvaran"},"content":"     * Method that checks if the task description contains"},{"lineNumber":41,"author":{"gitId":"DineshMagesvaran"},"content":"     * the given subString."},{"lineNumber":42,"author":{"gitId":"DineshMagesvaran"},"content":"     *"},{"lineNumber":43,"author":{"gitId":"DineshMagesvaran"},"content":"     * @param subString the subString to search for inside the task"},{"lineNumber":44,"author":{"gitId":"DineshMagesvaran"},"content":"     *                  description."},{"lineNumber":45,"author":{"gitId":"DineshMagesvaran"},"content":"     * @return true if task description contains subString, false otherwise."},{"lineNumber":46,"author":{"gitId":"DineshMagesvaran"},"content":"     */"},{"lineNumber":47,"author":{"gitId":"DineshMagesvaran"},"content":"    public boolean contains(String subString) {"},{"lineNumber":48,"author":{"gitId":"DineshMagesvaran"},"content":"        return taskInfo.contains(subString);"},{"lineNumber":49,"author":{"gitId":"DineshMagesvaran"},"content":"    }"},{"lineNumber":50,"author":{"gitId":"DineshMagesvaran"},"content":""},{"lineNumber":51,"author":{"gitId":"DineshMagesvaran"},"content":"    /**"},{"lineNumber":52,"author":{"gitId":"DineshMagesvaran"},"content":"     * Abstract method that converts the task into a"},{"lineNumber":53,"author":{"gitId":"DineshMagesvaran"},"content":"     * specific format before storing in a file."},{"lineNumber":54,"author":{"gitId":"DineshMagesvaran"},"content":"     * @return a string of data obtained from the task."},{"lineNumber":55,"author":{"gitId":"DineshMagesvaran"},"content":"     */"},{"lineNumber":56,"author":{"gitId":"DineshMagesvaran"},"content":"\tpublic abstract String getData();"},{"lineNumber":57,"author":{"gitId":"DineshMagesvaran"},"content":"}"}],"authorContributionMap":{"DineshMagesvaran":57}},{"path":"src/main/java/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"DineshMagesvaran"},"content":"import java.util.ArrayList;"},{"lineNumber":2,"author":{"gitId":"DineshMagesvaran"},"content":""},{"lineNumber":3,"author":{"gitId":"DineshMagesvaran"},"content":"/**"},{"lineNumber":4,"author":{"gitId":"DineshMagesvaran"},"content":" * Class that can create a task list object to store"},{"lineNumber":5,"author":{"gitId":"DineshMagesvaran"},"content":" * task objects in a list."},{"lineNumber":6,"author":{"gitId":"DineshMagesvaran"},"content":" */"},{"lineNumber":7,"author":{"gitId":"DineshMagesvaran"},"content":"public class TaskList extends ArrayList\u003cTask\u003e {"},{"lineNumber":8,"author":{"gitId":"DineshMagesvaran"},"content":"    /**"},{"lineNumber":9,"author":{"gitId":"DineshMagesvaran"},"content":"     * Constructor that creates a task list."},{"lineNumber":10,"author":{"gitId":"DineshMagesvaran"},"content":"     */"},{"lineNumber":11,"author":{"gitId":"DineshMagesvaran"},"content":"    public TaskList() {"},{"lineNumber":12,"author":{"gitId":"DineshMagesvaran"},"content":"        super();"},{"lineNumber":13,"author":{"gitId":"DineshMagesvaran"},"content":"    }"},{"lineNumber":14,"author":{"gitId":"DineshMagesvaran"},"content":""},{"lineNumber":15,"author":{"gitId":"DineshMagesvaran"},"content":"    /**"},{"lineNumber":16,"author":{"gitId":"DineshMagesvaran"},"content":"     * Method that adds a new task to the task list."},{"lineNumber":17,"author":{"gitId":"DineshMagesvaran"},"content":"     *"},{"lineNumber":18,"author":{"gitId":"DineshMagesvaran"},"content":"     * @param task the new task to be added to the task list."},{"lineNumber":19,"author":{"gitId":"DineshMagesvaran"},"content":"     */"},{"lineNumber":20,"author":{"gitId":"DineshMagesvaran"},"content":"    public void addTask(Task task) {"},{"lineNumber":21,"author":{"gitId":"DineshMagesvaran"},"content":"        super.add(task);"},{"lineNumber":22,"author":{"gitId":"DineshMagesvaran"},"content":"    }"},{"lineNumber":23,"author":{"gitId":"DineshMagesvaran"},"content":""},{"lineNumber":24,"author":{"gitId":"DineshMagesvaran"},"content":"    /**"},{"lineNumber":25,"author":{"gitId":"DineshMagesvaran"},"content":"     * Method that deletes a task from the task list."},{"lineNumber":26,"author":{"gitId":"DineshMagesvaran"},"content":"     * @param index the index corresponding to the task to be"},{"lineNumber":27,"author":{"gitId":"DineshMagesvaran"},"content":"     *              deleted."},{"lineNumber":28,"author":{"gitId":"DineshMagesvaran"},"content":"     * @return the task that was deleted from the task list."},{"lineNumber":29,"author":{"gitId":"DineshMagesvaran"},"content":"     */"},{"lineNumber":30,"author":{"gitId":"DineshMagesvaran"},"content":"    public Task deleteTask(int index) {"},{"lineNumber":31,"author":{"gitId":"DineshMagesvaran"},"content":"        return super.remove(index);"},{"lineNumber":32,"author":{"gitId":"DineshMagesvaran"},"content":"    }"},{"lineNumber":33,"author":{"gitId":"DineshMagesvaran"},"content":"}"}],"authorContributionMap":{"DineshMagesvaran":33}},{"path":"src/main/java/ToDo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"DineshMagesvaran"},"content":"/**"},{"lineNumber":2,"author":{"gitId":"DineshMagesvaran"},"content":" * Class that can create a todo task object."},{"lineNumber":3,"author":{"gitId":"DineshMagesvaran"},"content":" */"},{"lineNumber":4,"author":{"gitId":"DineshMagesvaran"},"content":"public class ToDo extends Task {"},{"lineNumber":5,"author":{"gitId":"DineshMagesvaran"},"content":"    private static final String TODO_DISPLAY_ICON \u003d \"[T]\";"},{"lineNumber":6,"author":{"gitId":"DineshMagesvaran"},"content":"    public static final String TODO_DATA_ICON \u003d \"T\";"},{"lineNumber":7,"author":{"gitId":"DineshMagesvaran"},"content":""},{"lineNumber":8,"author":{"gitId":"DineshMagesvaran"},"content":"    /**"},{"lineNumber":9,"author":{"gitId":"DineshMagesvaran"},"content":"     * Constructor that creates the todo task."},{"lineNumber":10,"author":{"gitId":"DineshMagesvaran"},"content":"     * @param taskInfo the description of the todo task."},{"lineNumber":11,"author":{"gitId":"DineshMagesvaran"},"content":"     */"},{"lineNumber":12,"author":{"gitId":"DineshMagesvaran"},"content":"    public ToDo(String taskInfo) {"},{"lineNumber":13,"author":{"gitId":"DineshMagesvaran"},"content":"        super(taskInfo);"},{"lineNumber":14,"author":{"gitId":"DineshMagesvaran"},"content":"    }"},{"lineNumber":15,"author":{"gitId":"DineshMagesvaran"},"content":""},{"lineNumber":16,"author":{"gitId":"DineshMagesvaran"},"content":"    @Override"},{"lineNumber":17,"author":{"gitId":"DineshMagesvaran"},"content":"    public String toString() {"},{"lineNumber":18,"author":{"gitId":"DineshMagesvaran"},"content":"        return TODO_DISPLAY_ICON + super.toString();"},{"lineNumber":19,"author":{"gitId":"DineshMagesvaran"},"content":"    }"},{"lineNumber":20,"author":{"gitId":"DineshMagesvaran"},"content":""},{"lineNumber":21,"author":{"gitId":"DineshMagesvaran"},"content":"    public String getData() {"},{"lineNumber":22,"author":{"gitId":"DineshMagesvaran"},"content":"        if (isDone) {"},{"lineNumber":23,"author":{"gitId":"DineshMagesvaran"},"content":"            return TODO_DATA_ICON + DELIMITER + IS_DONE_TRUE_DATA_ICON + DELIMITER + taskInfo;"},{"lineNumber":24,"author":{"gitId":"DineshMagesvaran"},"content":"        } else {"},{"lineNumber":25,"author":{"gitId":"DineshMagesvaran"},"content":"            return TODO_DATA_ICON + DELIMITER + IS_DONE_FALSE_DATA_ICON + DELIMITER + taskInfo;"},{"lineNumber":26,"author":{"gitId":"DineshMagesvaran"},"content":"        }"},{"lineNumber":27,"author":{"gitId":"DineshMagesvaran"},"content":"    }"},{"lineNumber":28,"author":{"gitId":"DineshMagesvaran"},"content":"}"}],"authorContributionMap":{"DineshMagesvaran":28}},{"path":"src/main/java/UI.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"DineshMagesvaran"},"content":"import javafx.application.Application;"},{"lineNumber":2,"author":{"gitId":"DineshMagesvaran"},"content":"import javafx.application.Platform;"},{"lineNumber":3,"author":{"gitId":"DineshMagesvaran"},"content":"import javafx.scene.Scene;"},{"lineNumber":4,"author":{"gitId":"DineshMagesvaran"},"content":"import javafx.scene.control.Label;"},{"lineNumber":5,"author":{"gitId":"DineshMagesvaran"},"content":"import javafx.scene.layout.Region;"},{"lineNumber":6,"author":{"gitId":"DineshMagesvaran"},"content":"import javafx.stage.Stage;"},{"lineNumber":7,"author":{"gitId":"DineshMagesvaran"},"content":"import javafx.scene.control.Button;"},{"lineNumber":8,"author":{"gitId":"DineshMagesvaran"},"content":"import javafx.scene.control.ScrollPane;"},{"lineNumber":9,"author":{"gitId":"DineshMagesvaran"},"content":"import javafx.scene.control.TextField;"},{"lineNumber":10,"author":{"gitId":"DineshMagesvaran"},"content":"import javafx.scene.layout.AnchorPane;"},{"lineNumber":11,"author":{"gitId":"DineshMagesvaran"},"content":"import javafx.scene.layout.VBox;"},{"lineNumber":12,"author":{"gitId":"DineshMagesvaran"},"content":"import javafx.scene.image.Image;"},{"lineNumber":13,"author":{"gitId":"DineshMagesvaran"},"content":"import javafx.scene.image.ImageView;"},{"lineNumber":14,"author":{"gitId":"DineshMagesvaran"},"content":""},{"lineNumber":15,"author":{"gitId":"DineshMagesvaran"},"content":""},{"lineNumber":16,"author":{"gitId":"DineshMagesvaran"},"content":"/**"},{"lineNumber":17,"author":{"gitId":"DineshMagesvaran"},"content":" * Class that can create a user interface object that"},{"lineNumber":18,"author":{"gitId":"DineshMagesvaran"},"content":" * can deal with interactions between the user and the"},{"lineNumber":19,"author":{"gitId":"DineshMagesvaran"},"content":" * application using a GUI."},{"lineNumber":20,"author":{"gitId":"DineshMagesvaran"},"content":" */"},{"lineNumber":21,"author":{"gitId":"DineshMagesvaran"},"content":"public class UI extends Application {"},{"lineNumber":22,"author":{"gitId":"DineshMagesvaran"},"content":"    private static final String FILE_PATH \u003d \"data/duke.txt\";"},{"lineNumber":23,"author":{"gitId":"DineshMagesvaran"},"content":"    private static final String SEND_BUTTON_DISPLAY_TEXT \u003d \"Send\";"},{"lineNumber":24,"author":{"gitId":"DineshMagesvaran"},"content":"    private static final String GREETING_MESSAGE \u003d \"\\t Hello! I\u0027m Duke\\n\\t What can I do for you\\n\";"},{"lineNumber":25,"author":{"gitId":"DineshMagesvaran"},"content":"    private static final String GOODBYE_MESSAGE \u003d \"\\t Bye. Hope to see you again soon!\";"},{"lineNumber":26,"author":{"gitId":"DineshMagesvaran"},"content":"    private static final String COMMAND_BYE \u003d \"bye\";"},{"lineNumber":27,"author":{"gitId":"DineshMagesvaran"},"content":"    private Storage storage;"},{"lineNumber":28,"author":{"gitId":"DineshMagesvaran"},"content":"    private TaskList taskList;"},{"lineNumber":29,"author":{"gitId":"DineshMagesvaran"},"content":"    private Parser parser;"},{"lineNumber":30,"author":{"gitId":"DineshMagesvaran"},"content":"    private ScrollPane scrollPane;"},{"lineNumber":31,"author":{"gitId":"DineshMagesvaran"},"content":"    private VBox dialogContainer;"},{"lineNumber":32,"author":{"gitId":"DineshMagesvaran"},"content":"    private TextField userInput;"},{"lineNumber":33,"author":{"gitId":"DineshMagesvaran"},"content":"    private Button sendButton;"},{"lineNumber":34,"author":{"gitId":"DineshMagesvaran"},"content":"    private Scene scene;"},{"lineNumber":35,"author":{"gitId":"DineshMagesvaran"},"content":"    private Image user \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaUser.png\"));"},{"lineNumber":36,"author":{"gitId":"DineshMagesvaran"},"content":"    private Image duke \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaDuke.png\"));"},{"lineNumber":37,"author":{"gitId":"DineshMagesvaran"},"content":"    private boolean isLastCommand;"},{"lineNumber":38,"author":{"gitId":"DineshMagesvaran"},"content":""},{"lineNumber":39,"author":{"gitId":"DineshMagesvaran"},"content":"    /**"},{"lineNumber":40,"author":{"gitId":"DineshMagesvaran"},"content":"     * Constructor that creates a UI object."},{"lineNumber":41,"author":{"gitId":"DineshMagesvaran"},"content":"     */"},{"lineNumber":42,"author":{"gitId":"DineshMagesvaran"},"content":"    public UI() {"},{"lineNumber":43,"author":{"gitId":"DineshMagesvaran"},"content":"        parser \u003d new Parser();"},{"lineNumber":44,"author":{"gitId":"DineshMagesvaran"},"content":"        storage \u003d new Storage(FILE_PATH);"},{"lineNumber":45,"author":{"gitId":"DineshMagesvaran"},"content":"        taskList \u003d storage.readDataFromFile();"},{"lineNumber":46,"author":{"gitId":"DineshMagesvaran"},"content":"        isLastCommand \u003d false;"},{"lineNumber":47,"author":{"gitId":"DineshMagesvaran"},"content":"    }"},{"lineNumber":48,"author":{"gitId":"DineshMagesvaran"},"content":""},{"lineNumber":49,"author":{"gitId":"DineshMagesvaran"},"content":"    @Override"},{"lineNumber":50,"author":{"gitId":"DineshMagesvaran"},"content":"    public void start(Stage stage) {"},{"lineNumber":51,"author":{"gitId":"DineshMagesvaran"},"content":"        scrollPane \u003d new ScrollPane();"},{"lineNumber":52,"author":{"gitId":"DineshMagesvaran"},"content":"        dialogContainer \u003d new VBox();"},{"lineNumber":53,"author":{"gitId":"DineshMagesvaran"},"content":"        scrollPane.setContent(dialogContainer);"},{"lineNumber":54,"author":{"gitId":"DineshMagesvaran"},"content":""},{"lineNumber":55,"author":{"gitId":"DineshMagesvaran"},"content":"        userInput \u003d new TextField();"},{"lineNumber":56,"author":{"gitId":"DineshMagesvaran"},"content":"        sendButton \u003d new Button(SEND_BUTTON_DISPLAY_TEXT);"},{"lineNumber":57,"author":{"gitId":"DineshMagesvaran"},"content":""},{"lineNumber":58,"author":{"gitId":"DineshMagesvaran"},"content":"        AnchorPane mainLayout \u003d new AnchorPane();"},{"lineNumber":59,"author":{"gitId":"DineshMagesvaran"},"content":"        mainLayout.getChildren().addAll(scrollPane, userInput, sendButton);"},{"lineNumber":60,"author":{"gitId":"DineshMagesvaran"},"content":""},{"lineNumber":61,"author":{"gitId":"DineshMagesvaran"},"content":"        scene \u003d new Scene(mainLayout);"},{"lineNumber":62,"author":{"gitId":"DineshMagesvaran"},"content":""},{"lineNumber":63,"author":{"gitId":"DineshMagesvaran"},"content":"        stage.setScene(scene);"},{"lineNumber":64,"author":{"gitId":"DineshMagesvaran"},"content":"        stage.show();"},{"lineNumber":65,"author":{"gitId":"DineshMagesvaran"},"content":""},{"lineNumber":66,"author":{"gitId":"DineshMagesvaran"},"content":"        stage.setTitle(\"Duke\");"},{"lineNumber":67,"author":{"gitId":"DineshMagesvaran"},"content":"        stage.setResizable(false);"},{"lineNumber":68,"author":{"gitId":"DineshMagesvaran"},"content":"        stage.setMinHeight(600.0);"},{"lineNumber":69,"author":{"gitId":"DineshMagesvaran"},"content":"        stage.setMinWidth(400.0);"},{"lineNumber":70,"author":{"gitId":"DineshMagesvaran"},"content":""},{"lineNumber":71,"author":{"gitId":"DineshMagesvaran"},"content":"        mainLayout.setPrefSize(400.0, 600.0);"},{"lineNumber":72,"author":{"gitId":"DineshMagesvaran"},"content":""},{"lineNumber":73,"author":{"gitId":"DineshMagesvaran"},"content":"        scrollPane.setPrefSize(385, 535);"},{"lineNumber":74,"author":{"gitId":"DineshMagesvaran"},"content":"        scrollPane.setHbarPolicy(ScrollPane.ScrollBarPolicy.NEVER);"},{"lineNumber":75,"author":{"gitId":"DineshMagesvaran"},"content":"        scrollPane.setVbarPolicy(ScrollPane.ScrollBarPolicy.ALWAYS);"},{"lineNumber":76,"author":{"gitId":"DineshMagesvaran"},"content":""},{"lineNumber":77,"author":{"gitId":"DineshMagesvaran"},"content":"        scrollPane.setVvalue(1.0);"},{"lineNumber":78,"author":{"gitId":"DineshMagesvaran"},"content":"        scrollPane.setFitToWidth(true);"},{"lineNumber":79,"author":{"gitId":"DineshMagesvaran"},"content":""},{"lineNumber":80,"author":{"gitId":"DineshMagesvaran"},"content":"        dialogContainer.setPrefHeight(Region.USE_COMPUTED_SIZE);"},{"lineNumber":81,"author":{"gitId":"DineshMagesvaran"},"content":""},{"lineNumber":82,"author":{"gitId":"DineshMagesvaran"},"content":"        userInput.setPrefWidth(325.0);"},{"lineNumber":83,"author":{"gitId":"DineshMagesvaran"},"content":""},{"lineNumber":84,"author":{"gitId":"DineshMagesvaran"},"content":"        sendButton.setPrefWidth(55.0);"},{"lineNumber":85,"author":{"gitId":"DineshMagesvaran"},"content":""},{"lineNumber":86,"author":{"gitId":"DineshMagesvaran"},"content":"        AnchorPane.setTopAnchor(scrollPane, 1.0);"},{"lineNumber":87,"author":{"gitId":"DineshMagesvaran"},"content":""},{"lineNumber":88,"author":{"gitId":"DineshMagesvaran"},"content":"        AnchorPane.setBottomAnchor(sendButton, 1.0);"},{"lineNumber":89,"author":{"gitId":"DineshMagesvaran"},"content":"        AnchorPane.setRightAnchor(sendButton, 1.0);"},{"lineNumber":90,"author":{"gitId":"DineshMagesvaran"},"content":""},{"lineNumber":91,"author":{"gitId":"DineshMagesvaran"},"content":"        AnchorPane.setLeftAnchor(userInput , 1.0);"},{"lineNumber":92,"author":{"gitId":"DineshMagesvaran"},"content":"        AnchorPane.setBottomAnchor(userInput, 1.0);"},{"lineNumber":93,"author":{"gitId":"DineshMagesvaran"},"content":""},{"lineNumber":94,"author":{"gitId":"DineshMagesvaran"},"content":"        sendButton.setOnMouseClicked((event) -\u003e {"},{"lineNumber":95,"author":{"gitId":"DineshMagesvaran"},"content":"            handleUserInput();"},{"lineNumber":96,"author":{"gitId":"DineshMagesvaran"},"content":"        });"},{"lineNumber":97,"author":{"gitId":"DineshMagesvaran"},"content":""},{"lineNumber":98,"author":{"gitId":"DineshMagesvaran"},"content":"        userInput.setOnAction((event) -\u003e {"},{"lineNumber":99,"author":{"gitId":"DineshMagesvaran"},"content":"            handleUserInput();"},{"lineNumber":100,"author":{"gitId":"DineshMagesvaran"},"content":"        });"},{"lineNumber":101,"author":{"gitId":"DineshMagesvaran"},"content":""},{"lineNumber":102,"author":{"gitId":"DineshMagesvaran"},"content":"        dialogContainer.heightProperty().addListener((observable) -\u003e scrollPane.setVvalue(1.0));"},{"lineNumber":103,"author":{"gitId":"DineshMagesvaran"},"content":""},{"lineNumber":104,"author":{"gitId":"DineshMagesvaran"},"content":"        dialogContainer.getChildren().add(DialogBox.getDukeDialog(new Label(GREETING_MESSAGE), new ImageView(duke)));"},{"lineNumber":105,"author":{"gitId":"DineshMagesvaran"},"content":"    }"},{"lineNumber":106,"author":{"gitId":"DineshMagesvaran"},"content":""},{"lineNumber":107,"author":{"gitId":"DineshMagesvaran"},"content":"    /**"},{"lineNumber":108,"author":{"gitId":"DineshMagesvaran"},"content":"     * Creates two dialog boxes, one echoing user input and the other containing Duke\u0027s reply and then appends them to"},{"lineNumber":109,"author":{"gitId":"DineshMagesvaran"},"content":"     * the dialog container. Clears the user input after processing."},{"lineNumber":110,"author":{"gitId":"DineshMagesvaran"},"content":"     */"},{"lineNumber":111,"author":{"gitId":"DineshMagesvaran"},"content":"    private void handleUserInput() {"},{"lineNumber":112,"author":{"gitId":"DineshMagesvaran"},"content":"        Label userText \u003d new Label(userInput.getText());"},{"lineNumber":113,"author":{"gitId":"DineshMagesvaran"},"content":"        Label dukeText \u003d new Label(getResponse(userInput.getText()));"},{"lineNumber":114,"author":{"gitId":"DineshMagesvaran"},"content":"        dialogContainer.getChildren().addAll("},{"lineNumber":115,"author":{"gitId":"DineshMagesvaran"},"content":"                DialogBox.getUserDialog(userText, new ImageView(user)),"},{"lineNumber":116,"author":{"gitId":"DineshMagesvaran"},"content":"                DialogBox.getDukeDialog(dukeText, new ImageView(duke))"},{"lineNumber":117,"author":{"gitId":"DineshMagesvaran"},"content":"        );"},{"lineNumber":118,"author":{"gitId":"DineshMagesvaran"},"content":"        userInput.clear();"},{"lineNumber":119,"author":{"gitId":"DineshMagesvaran"},"content":""},{"lineNumber":120,"author":{"gitId":"DineshMagesvaran"},"content":"        if (isLastCommand) {"},{"lineNumber":121,"author":{"gitId":"DineshMagesvaran"},"content":"            storage.writeDataIntoFile(taskList);"},{"lineNumber":122,"author":{"gitId":"DineshMagesvaran"},"content":"            Platform.exit();"},{"lineNumber":123,"author":{"gitId":"DineshMagesvaran"},"content":"        }"},{"lineNumber":124,"author":{"gitId":"DineshMagesvaran"},"content":"    }"},{"lineNumber":125,"author":{"gitId":"DineshMagesvaran"},"content":""},{"lineNumber":126,"author":{"gitId":"DineshMagesvaran"},"content":"    /**"},{"lineNumber":127,"author":{"gitId":"DineshMagesvaran"},"content":"     * Obtains a response based on the given user input."},{"lineNumber":128,"author":{"gitId":"DineshMagesvaran"},"content":"     *"},{"lineNumber":129,"author":{"gitId":"DineshMagesvaran"},"content":"     * @param input the input string given by the user."},{"lineNumber":130,"author":{"gitId":"DineshMagesvaran"},"content":"     * @return the output string based on the given input."},{"lineNumber":131,"author":{"gitId":"DineshMagesvaran"},"content":"     */"},{"lineNumber":132,"author":{"gitId":"DineshMagesvaran"},"content":"    private String getResponse(String input) {"},{"lineNumber":133,"author":{"gitId":"DineshMagesvaran"},"content":"        if (input.equals(COMMAND_BYE)) {"},{"lineNumber":134,"author":{"gitId":"DineshMagesvaran"},"content":"            isLastCommand \u003d true;"},{"lineNumber":135,"author":{"gitId":"DineshMagesvaran"},"content":"            return GOODBYE_MESSAGE;"},{"lineNumber":136,"author":{"gitId":"DineshMagesvaran"},"content":"        } else {"},{"lineNumber":137,"author":{"gitId":"DineshMagesvaran"},"content":"            return parser.executeCommand(taskList, input);"},{"lineNumber":138,"author":{"gitId":"DineshMagesvaran"},"content":"        }"},{"lineNumber":139,"author":{"gitId":"DineshMagesvaran"},"content":"    }"},{"lineNumber":140,"author":{"gitId":"DineshMagesvaran"},"content":"}"}],"authorContributionMap":{"DineshMagesvaran":140}},{"path":"src/test/java/DeadlineTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"DineshMagesvaran"},"content":"import org.junit.jupiter.api.Test;"},{"lineNumber":2,"author":{"gitId":"DineshMagesvaran"},"content":"import java.time.LocalDate;"},{"lineNumber":3,"author":{"gitId":"DineshMagesvaran"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;"},{"lineNumber":4,"author":{"gitId":"DineshMagesvaran"},"content":""},{"lineNumber":5,"author":{"gitId":"DineshMagesvaran"},"content":"public class DeadlineTest {"},{"lineNumber":6,"author":{"gitId":"DineshMagesvaran"},"content":"    @Test"},{"lineNumber":7,"author":{"gitId":"DineshMagesvaran"},"content":"    public void toStringTest() {"},{"lineNumber":8,"author":{"gitId":"DineshMagesvaran"},"content":"        assertEquals(\"[D][ ] example deadline task (05 Jan 2021)\","},{"lineNumber":9,"author":{"gitId":"DineshMagesvaran"},"content":"                new Deadline(\"example deadline task\", LocalDate.parse(\"2021-01-05\")).toString());"},{"lineNumber":10,"author":{"gitId":"DineshMagesvaran"},"content":"    }"},{"lineNumber":11,"author":{"gitId":"DineshMagesvaran"},"content":""},{"lineNumber":12,"author":{"gitId":"DineshMagesvaran"},"content":"    @Test"},{"lineNumber":13,"author":{"gitId":"DineshMagesvaran"},"content":"    public void getDataTest() {"},{"lineNumber":14,"author":{"gitId":"DineshMagesvaran"},"content":"        assertEquals(\"D!@#0!@#example deadline task!@#2021-01-05\","},{"lineNumber":15,"author":{"gitId":"DineshMagesvaran"},"content":"                new Deadline(\"example deadline task\", LocalDate.parse(\"2021-01-05\")).getData());"},{"lineNumber":16,"author":{"gitId":"DineshMagesvaran"},"content":"    }"},{"lineNumber":17,"author":{"gitId":"DineshMagesvaran"},"content":"}"}],"authorContributionMap":{"DineshMagesvaran":17}},{"path":"src/test/java/EventTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"DineshMagesvaran"},"content":"import org.junit.jupiter.api.Test;"},{"lineNumber":2,"author":{"gitId":"DineshMagesvaran"},"content":""},{"lineNumber":3,"author":{"gitId":"DineshMagesvaran"},"content":"import java.time.LocalDate;"},{"lineNumber":4,"author":{"gitId":"DineshMagesvaran"},"content":""},{"lineNumber":5,"author":{"gitId":"DineshMagesvaran"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;"},{"lineNumber":6,"author":{"gitId":"DineshMagesvaran"},"content":""},{"lineNumber":7,"author":{"gitId":"DineshMagesvaran"},"content":"public class EventTest {"},{"lineNumber":8,"author":{"gitId":"DineshMagesvaran"},"content":"    @Test"},{"lineNumber":9,"author":{"gitId":"DineshMagesvaran"},"content":"    public void toStringTest() {"},{"lineNumber":10,"author":{"gitId":"DineshMagesvaran"},"content":"        assertEquals(\"[E][ ] example event task (05 Jan 2021 to 06 Jan 2021)\","},{"lineNumber":11,"author":{"gitId":"DineshMagesvaran"},"content":"                new Event(\"example event task\", LocalDate.parse(\"2021-01-05\"),"},{"lineNumber":12,"author":{"gitId":"DineshMagesvaran"},"content":"                        LocalDate.parse(\"2021-01-06\")).toString());"},{"lineNumber":13,"author":{"gitId":"DineshMagesvaran"},"content":"    }"},{"lineNumber":14,"author":{"gitId":"DineshMagesvaran"},"content":""},{"lineNumber":15,"author":{"gitId":"DineshMagesvaran"},"content":"    @Test"},{"lineNumber":16,"author":{"gitId":"DineshMagesvaran"},"content":"    public void getDataTest() {"},{"lineNumber":17,"author":{"gitId":"DineshMagesvaran"},"content":"        assertEquals(\"E!@#0!@#example event task!@#2021-01-05!@#2021-01-06\","},{"lineNumber":18,"author":{"gitId":"DineshMagesvaran"},"content":"                new Event(\"example event task\", LocalDate.parse(\"2021-01-05\"),"},{"lineNumber":19,"author":{"gitId":"DineshMagesvaran"},"content":"                        LocalDate.parse(\"2021-01-06\")).getData());"},{"lineNumber":20,"author":{"gitId":"DineshMagesvaran"},"content":"    }"},{"lineNumber":21,"author":{"gitId":"DineshMagesvaran"},"content":"}"}],"authorContributionMap":{"DineshMagesvaran":21}},{"path":"src/test/java/TodoTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"DineshMagesvaran"},"content":"import org.junit.jupiter.api.Test;"},{"lineNumber":2,"author":{"gitId":"DineshMagesvaran"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;"},{"lineNumber":3,"author":{"gitId":"DineshMagesvaran"},"content":""},{"lineNumber":4,"author":{"gitId":"DineshMagesvaran"},"content":"public class TodoTest {"},{"lineNumber":5,"author":{"gitId":"DineshMagesvaran"},"content":"    @Test"},{"lineNumber":6,"author":{"gitId":"DineshMagesvaran"},"content":"    public void toStringTest() {"},{"lineNumber":7,"author":{"gitId":"DineshMagesvaran"},"content":"        assertEquals(\"[T][ ] example todo task\", new ToDo(\"example todo task\").toString());"},{"lineNumber":8,"author":{"gitId":"DineshMagesvaran"},"content":"    }"},{"lineNumber":9,"author":{"gitId":"DineshMagesvaran"},"content":""},{"lineNumber":10,"author":{"gitId":"DineshMagesvaran"},"content":"    @Test"},{"lineNumber":11,"author":{"gitId":"DineshMagesvaran"},"content":"    public void getDataTest() {"},{"lineNumber":12,"author":{"gitId":"DineshMagesvaran"},"content":"        assertEquals(\"T!@#0!@#example todo task\",new ToDo(\"example todo task\").getData());"},{"lineNumber":13,"author":{"gitId":"DineshMagesvaran"},"content":"    }"},{"lineNumber":14,"author":{"gitId":"DineshMagesvaran"},"content":"}"}],"authorContributionMap":{"DineshMagesvaran":14}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"DineshMagesvaran"},"content":"todo clean my room"},{"lineNumber":2,"author":{"gitId":"DineshMagesvaran"},"content":"deadline submit project /tonight 2359"},{"lineNumber":3,"author":{"gitId":"DineshMagesvaran"},"content":"list"},{"lineNumber":4,"author":{"gitId":"DineshMagesvaran"},"content":"done 1"},{"lineNumber":5,"author":{"gitId":"DineshMagesvaran"},"content":"event attend meeting /Fri 2pm-3pm"},{"lineNumber":6,"author":{"gitId":"DineshMagesvaran"},"content":"list"},{"lineNumber":7,"author":{"gitId":"DineshMagesvaran"},"content":"bye"}],"authorContributionMap":{"DineshMagesvaran":7}}]
