[{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027checkstyle\u0027"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027"},{"lineNumber":6,"author":{"gitId":"-"},"content":"}"},{"lineNumber":7,"author":{"gitId":"-"},"content":""},{"lineNumber":8,"author":{"gitId":"-"},"content":"repositories {"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    mavenCentral()"},{"lineNumber":10,"author":{"gitId":"-"},"content":"}"},{"lineNumber":11,"author":{"gitId":"-"},"content":""},{"lineNumber":12,"author":{"gitId":"-"},"content":"dependencies {"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.5.0\u0027"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.5.0\u0027"},{"lineNumber":15,"author":{"gitId":"DineshMagesvaran"},"content":""},{"lineNumber":16,"author":{"gitId":"DineshMagesvaran"},"content":"    String javaFxVersion \u003d \u002711\u0027"},{"lineNumber":17,"author":{"gitId":"DineshMagesvaran"},"content":""},{"lineNumber":18,"author":{"gitId":"DineshMagesvaran"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027"},{"lineNumber":19,"author":{"gitId":"DineshMagesvaran"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"},{"lineNumber":20,"author":{"gitId":"DineshMagesvaran"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"},{"lineNumber":21,"author":{"gitId":"DineshMagesvaran"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027"},{"lineNumber":22,"author":{"gitId":"DineshMagesvaran"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"},{"lineNumber":23,"author":{"gitId":"DineshMagesvaran"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"},{"lineNumber":24,"author":{"gitId":"DineshMagesvaran"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027"},{"lineNumber":25,"author":{"gitId":"DineshMagesvaran"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"},{"lineNumber":26,"author":{"gitId":"DineshMagesvaran"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"},{"lineNumber":27,"author":{"gitId":"DineshMagesvaran"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027"},{"lineNumber":28,"author":{"gitId":"DineshMagesvaran"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"},{"lineNumber":29,"author":{"gitId":"DineshMagesvaran"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"},{"lineNumber":30,"author":{"gitId":"-"},"content":"}"},{"lineNumber":31,"author":{"gitId":"-"},"content":""},{"lineNumber":32,"author":{"gitId":"-"},"content":"test {"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    useJUnitPlatform()"},{"lineNumber":34,"author":{"gitId":"-"},"content":""},{"lineNumber":35,"author":{"gitId":"-"},"content":"    testLogging {"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\""},{"lineNumber":37,"author":{"gitId":"-"},"content":""},{"lineNumber":38,"author":{"gitId":"-"},"content":"        showExceptions true"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\""},{"lineNumber":40,"author":{"gitId":"-"},"content":"        showCauses true"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        showStackTraces true"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":44,"author":{"gitId":"-"},"content":"}"},{"lineNumber":45,"author":{"gitId":"-"},"content":""},{"lineNumber":46,"author":{"gitId":"-"},"content":"application {"},{"lineNumber":47,"author":{"gitId":"DineshMagesvaran"},"content":"    mainClassName \u003d \"Duke\""},{"lineNumber":48,"author":{"gitId":"-"},"content":"}"},{"lineNumber":49,"author":{"gitId":"-"},"content":""},{"lineNumber":50,"author":{"gitId":"-"},"content":"shadowJar {"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    archiveBaseName \u003d \"duke\""},{"lineNumber":52,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null"},{"lineNumber":53,"author":{"gitId":"-"},"content":"}"},{"lineNumber":54,"author":{"gitId":"-"},"content":""},{"lineNumber":55,"author":{"gitId":"-"},"content":"checkstyle {"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    toolVersion \u003d \u00278.29\u0027"},{"lineNumber":57,"author":{"gitId":"-"},"content":"}"},{"lineNumber":58,"author":{"gitId":"-"},"content":""},{"lineNumber":59,"author":{"gitId":"-"},"content":"run{"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in"},{"lineNumber":61,"author":{"gitId":"-"},"content":"}"}],"authorContributionMap":{"DineshMagesvaran":16,"-":45}},{"path":"docs/README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"# User Guide"},{"lineNumber":2,"author":{"gitId":"-"},"content":""},{"lineNumber":3,"author":{"gitId":"-"},"content":"## Features "},{"lineNumber":4,"author":{"gitId":"-"},"content":""},{"lineNumber":5,"author":{"gitId":"DineshMagesvaran"},"content":"### Feature 1 - Add task to list"},{"lineNumber":6,"author":{"gitId":"DineshMagesvaran"},"content":"Enables the user to add tasks(ToDos, Deadlines, Events) into the list"},{"lineNumber":7,"author":{"gitId":"-"},"content":""},{"lineNumber":8,"author":{"gitId":"-"},"content":"## Usage"},{"lineNumber":9,"author":{"gitId":"-"},"content":""},{"lineNumber":10,"author":{"gitId":"DineshMagesvaran"},"content":"### `todo/deadline/event` - Use one of the three keywords"},{"lineNumber":11,"author":{"gitId":"-"},"content":""},{"lineNumber":12,"author":{"gitId":"DineshMagesvaran"},"content":"The appropriate task will be added to the list."},{"lineNumber":13,"author":{"gitId":"-"},"content":""},{"lineNumber":14,"author":{"gitId":"-"},"content":"Example of usage: "},{"lineNumber":15,"author":{"gitId":"-"},"content":""},{"lineNumber":16,"author":{"gitId":"DineshMagesvaran"},"content":"`todo buy bread`"},{"lineNumber":17,"author":{"gitId":"-"},"content":""},{"lineNumber":18,"author":{"gitId":"-"},"content":"Expected outcome:"},{"lineNumber":19,"author":{"gitId":"-"},"content":""},{"lineNumber":20,"author":{"gitId":"DineshMagesvaran"},"content":"`Got it. I\u0027ve added this task: "},{"lineNumber":21,"author":{"gitId":"DineshMagesvaran"},"content":"       [T][ ] buy bread"},{"lineNumber":22,"author":{"gitId":"DineshMagesvaran"},"content":"     Now you have 5 tasks in the list.`"},{"lineNumber":23,"author":{"gitId":"DineshMagesvaran"},"content":""},{"lineNumber":24,"author":{"gitId":"DineshMagesvaran"},"content":"Example of usage: "},{"lineNumber":25,"author":{"gitId":"DineshMagesvaran"},"content":""},{"lineNumber":26,"author":{"gitId":"DineshMagesvaran"},"content":"`deadline complete assignment /by 2021-01-05`"},{"lineNumber":27,"author":{"gitId":"DineshMagesvaran"},"content":""},{"lineNumber":28,"author":{"gitId":"DineshMagesvaran"},"content":"Expected outcome:"},{"lineNumber":29,"author":{"gitId":"DineshMagesvaran"},"content":""},{"lineNumber":30,"author":{"gitId":"DineshMagesvaran"},"content":"`Got it. I\u0027ve added this task: "},{"lineNumber":31,"author":{"gitId":"DineshMagesvaran"},"content":"       [D][ ] complete assignment (05 Jan 2021)"},{"lineNumber":32,"author":{"gitId":"DineshMagesvaran"},"content":"     Now you have 6 tasks in the list.`"},{"lineNumber":33,"author":{"gitId":"DineshMagesvaran"},"content":"\t "},{"lineNumber":34,"author":{"gitId":"DineshMagesvaran"},"content":"Example of usage: "},{"lineNumber":35,"author":{"gitId":"DineshMagesvaran"},"content":""},{"lineNumber":36,"author":{"gitId":"DineshMagesvaran"},"content":"`event attend meeting /from 2021-01-05 to 2021-01-06`"},{"lineNumber":37,"author":{"gitId":"DineshMagesvaran"},"content":""},{"lineNumber":38,"author":{"gitId":"DineshMagesvaran"},"content":"Expected outcome:"},{"lineNumber":39,"author":{"gitId":"DineshMagesvaran"},"content":""},{"lineNumber":40,"author":{"gitId":"DineshMagesvaran"},"content":"`Got it. I\u0027ve added this task: "},{"lineNumber":41,"author":{"gitId":"DineshMagesvaran"},"content":"       [E][ ] attend meeting (05 Jan 2021 to 06 Jan 2021)"},{"lineNumber":42,"author":{"gitId":"DineshMagesvaran"},"content":"     Now you have 7 tasks in the list.`"},{"lineNumber":43,"author":{"gitId":"DineshMagesvaran"},"content":""},{"lineNumber":44,"author":{"gitId":"DineshMagesvaran"},"content":"### Feature 2 - View list"},{"lineNumber":45,"author":{"gitId":"DineshMagesvaran"},"content":"Enables the user to view all the tasks in the list"},{"lineNumber":46,"author":{"gitId":"DineshMagesvaran"},"content":""},{"lineNumber":47,"author":{"gitId":"DineshMagesvaran"},"content":"## Usage"},{"lineNumber":48,"author":{"gitId":"DineshMagesvaran"},"content":""},{"lineNumber":49,"author":{"gitId":"DineshMagesvaran"},"content":"### `list` - Use the list keyword"},{"lineNumber":50,"author":{"gitId":"DineshMagesvaran"},"content":""},{"lineNumber":51,"author":{"gitId":"DineshMagesvaran"},"content":"The list will be displayed with all the current tasks."},{"lineNumber":52,"author":{"gitId":"DineshMagesvaran"},"content":""},{"lineNumber":53,"author":{"gitId":"DineshMagesvaran"},"content":"Example of usage: "},{"lineNumber":54,"author":{"gitId":"DineshMagesvaran"},"content":""},{"lineNumber":55,"author":{"gitId":"DineshMagesvaran"},"content":"`list`"},{"lineNumber":56,"author":{"gitId":"DineshMagesvaran"},"content":""},{"lineNumber":57,"author":{"gitId":"DineshMagesvaran"},"content":"Expected outcome:"},{"lineNumber":58,"author":{"gitId":"DineshMagesvaran"},"content":""},{"lineNumber":59,"author":{"gitId":"DineshMagesvaran"},"content":"`Here are the tasks in your list:"},{"lineNumber":60,"author":{"gitId":"DineshMagesvaran"},"content":"     1.[T][X] read book`"},{"lineNumber":61,"author":{"gitId":"DineshMagesvaran"},"content":""},{"lineNumber":62,"author":{"gitId":"DineshMagesvaran"},"content":"### Feature 3 - Mark Task as Done"},{"lineNumber":63,"author":{"gitId":"DineshMagesvaran"},"content":"Enables the user to mark a task as done"},{"lineNumber":64,"author":{"gitId":"DineshMagesvaran"},"content":""},{"lineNumber":65,"author":{"gitId":"DineshMagesvaran"},"content":"## Usage"},{"lineNumber":66,"author":{"gitId":"DineshMagesvaran"},"content":""},{"lineNumber":67,"author":{"gitId":"DineshMagesvaran"},"content":"### `done` - Use the done keyword"},{"lineNumber":68,"author":{"gitId":"DineshMagesvaran"},"content":""},{"lineNumber":69,"author":{"gitId":"DineshMagesvaran"},"content":"The specified task on the list will be marked as done."},{"lineNumber":70,"author":{"gitId":"DineshMagesvaran"},"content":""},{"lineNumber":71,"author":{"gitId":"DineshMagesvaran"},"content":"Example of usage: "},{"lineNumber":72,"author":{"gitId":"DineshMagesvaran"},"content":""},{"lineNumber":73,"author":{"gitId":"DineshMagesvaran"},"content":"`done 2`"},{"lineNumber":74,"author":{"gitId":"DineshMagesvaran"},"content":""},{"lineNumber":75,"author":{"gitId":"DineshMagesvaran"},"content":"Expected outcome:"},{"lineNumber":76,"author":{"gitId":"DineshMagesvaran"},"content":""},{"lineNumber":77,"author":{"gitId":"DineshMagesvaran"},"content":"`Nice! I\u0027ve marked this task as done: "},{"lineNumber":78,"author":{"gitId":"DineshMagesvaran"},"content":"       [T][X] Second Task`"},{"lineNumber":79,"author":{"gitId":"DineshMagesvaran"},"content":"\t   "},{"lineNumber":80,"author":{"gitId":"DineshMagesvaran"},"content":"### Feature 4 - Delete Task from list"},{"lineNumber":81,"author":{"gitId":"DineshMagesvaran"},"content":"Enables the user to remove a task from the task list"},{"lineNumber":82,"author":{"gitId":"DineshMagesvaran"},"content":""},{"lineNumber":83,"author":{"gitId":"DineshMagesvaran"},"content":"## Usage"},{"lineNumber":84,"author":{"gitId":"DineshMagesvaran"},"content":""},{"lineNumber":85,"author":{"gitId":"DineshMagesvaran"},"content":"### `delete` - Use the delete keyword"},{"lineNumber":86,"author":{"gitId":"DineshMagesvaran"},"content":""},{"lineNumber":87,"author":{"gitId":"DineshMagesvaran"},"content":"The specified task on the list will be deleted."},{"lineNumber":88,"author":{"gitId":"DineshMagesvaran"},"content":""},{"lineNumber":89,"author":{"gitId":"DineshMagesvaran"},"content":"Example of usage: "},{"lineNumber":90,"author":{"gitId":"DineshMagesvaran"},"content":""},{"lineNumber":91,"author":{"gitId":"DineshMagesvaran"},"content":"`delete 2`"},{"lineNumber":92,"author":{"gitId":"DineshMagesvaran"},"content":""},{"lineNumber":93,"author":{"gitId":"DineshMagesvaran"},"content":"Expected outcome:"},{"lineNumber":94,"author":{"gitId":"DineshMagesvaran"},"content":""},{"lineNumber":95,"author":{"gitId":"DineshMagesvaran"},"content":"`Noted. I\u0027ve removed this task: "},{"lineNumber":96,"author":{"gitId":"DineshMagesvaran"},"content":"       [T][X] Second Task"},{"lineNumber":97,"author":{"gitId":"DineshMagesvaran"},"content":"     Now you have 4 tasks in the list.`"},{"lineNumber":98,"author":{"gitId":"DineshMagesvaran"},"content":"\t "},{"lineNumber":99,"author":{"gitId":"DineshMagesvaran"},"content":"### Feature 5 - Find Task from list"},{"lineNumber":100,"author":{"gitId":"DineshMagesvaran"},"content":"Enables the user to find for tasks from the task list"},{"lineNumber":101,"author":{"gitId":"DineshMagesvaran"},"content":""},{"lineNumber":102,"author":{"gitId":"DineshMagesvaran"},"content":"## Usage"},{"lineNumber":103,"author":{"gitId":"DineshMagesvaran"},"content":""},{"lineNumber":104,"author":{"gitId":"DineshMagesvaran"},"content":"### `find` - Use the find keyword"},{"lineNumber":105,"author":{"gitId":"DineshMagesvaran"},"content":""},{"lineNumber":106,"author":{"gitId":"DineshMagesvaran"},"content":"The tasks matching the word(s) to find for will be displayed."},{"lineNumber":107,"author":{"gitId":"DineshMagesvaran"},"content":""},{"lineNumber":108,"author":{"gitId":"DineshMagesvaran"},"content":"Example of usage: "},{"lineNumber":109,"author":{"gitId":"DineshMagesvaran"},"content":""},{"lineNumber":110,"author":{"gitId":"DineshMagesvaran"},"content":"`find meeting`"},{"lineNumber":111,"author":{"gitId":"DineshMagesvaran"},"content":""},{"lineNumber":112,"author":{"gitId":"DineshMagesvaran"},"content":"Expected outcome:"},{"lineNumber":113,"author":{"gitId":"DineshMagesvaran"},"content":""},{"lineNumber":114,"author":{"gitId":"DineshMagesvaran"},"content":"`Here are the matching tasks in your list:"},{"lineNumber":115,"author":{"gitId":"DineshMagesvaran"},"content":"\t 2. [D][X] prepare for meeting (05 Jan 2021)"},{"lineNumber":116,"author":{"gitId":"DineshMagesvaran"},"content":"\t 5. [E][ ] attend meeting (05 Jan 2021 to 08 Jan 2021)`"}],"authorContributionMap":{"DineshMagesvaran":102,"-":14}},{"path":"src/main/java/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"DineshMagesvaran"},"content":"import java.time.LocalDate;"},{"lineNumber":2,"author":{"gitId":"DineshMagesvaran"},"content":"import java.time.format.DateTimeFormatter;"},{"lineNumber":3,"author":{"gitId":"DineshMagesvaran"},"content":""},{"lineNumber":4,"author":{"gitId":"DineshMagesvaran"},"content":"/**"},{"lineNumber":5,"author":{"gitId":"DineshMagesvaran"},"content":" * Class that can create a deadline task object."},{"lineNumber":6,"author":{"gitId":"DineshMagesvaran"},"content":" */"},{"lineNumber":7,"author":{"gitId":"DineshMagesvaran"},"content":"public class Deadline extends Task {"},{"lineNumber":8,"author":{"gitId":"DineshMagesvaran"},"content":"    private LocalDate dateInfo;"},{"lineNumber":9,"author":{"gitId":"DineshMagesvaran"},"content":""},{"lineNumber":10,"author":{"gitId":"DineshMagesvaran"},"content":"    /**"},{"lineNumber":11,"author":{"gitId":"DineshMagesvaran"},"content":"     * Constructor that creates a deadline task."},{"lineNumber":12,"author":{"gitId":"DineshMagesvaran"},"content":"     * @param taskInfo the description of the deadline task."},{"lineNumber":13,"author":{"gitId":"DineshMagesvaran"},"content":"     * @param dateInfo the date of the deadline for the task."},{"lineNumber":14,"author":{"gitId":"DineshMagesvaran"},"content":"     */"},{"lineNumber":15,"author":{"gitId":"DineshMagesvaran"},"content":"    public Deadline(String taskInfo, LocalDate dateInfo) {"},{"lineNumber":16,"author":{"gitId":"DineshMagesvaran"},"content":"        super(taskInfo);"},{"lineNumber":17,"author":{"gitId":"DineshMagesvaran"},"content":"        this.dateInfo \u003d dateInfo;"},{"lineNumber":18,"author":{"gitId":"DineshMagesvaran"},"content":"    }"},{"lineNumber":19,"author":{"gitId":"DineshMagesvaran"},"content":""},{"lineNumber":20,"author":{"gitId":"DineshMagesvaran"},"content":"    @Override"},{"lineNumber":21,"author":{"gitId":"DineshMagesvaran"},"content":"    public String toString() {"},{"lineNumber":22,"author":{"gitId":"DineshMagesvaran"},"content":"        return \"[D]\" + super.toString() + \" (\" + dateInfo.format(DateTimeFormatter.ofPattern(\"dd MMM yyyy\")) + \")\";"},{"lineNumber":23,"author":{"gitId":"DineshMagesvaran"},"content":"    }"},{"lineNumber":24,"author":{"gitId":"DineshMagesvaran"},"content":""},{"lineNumber":25,"author":{"gitId":"DineshMagesvaran"},"content":"    public String getData() {"},{"lineNumber":26,"author":{"gitId":"DineshMagesvaran"},"content":"        if (isDone \u003d\u003d true) {"},{"lineNumber":27,"author":{"gitId":"DineshMagesvaran"},"content":"            return \"D!@#1!@#\" + taskInfo + \"!@#\" + dateInfo;"},{"lineNumber":28,"author":{"gitId":"DineshMagesvaran"},"content":"        } else {"},{"lineNumber":29,"author":{"gitId":"DineshMagesvaran"},"content":"            return \"D!@#0!@#\" + taskInfo + \"!@#\" + dateInfo;"},{"lineNumber":30,"author":{"gitId":"DineshMagesvaran"},"content":"        }"},{"lineNumber":31,"author":{"gitId":"DineshMagesvaran"},"content":"    }"},{"lineNumber":32,"author":{"gitId":"DineshMagesvaran"},"content":"}"}],"authorContributionMap":{"DineshMagesvaran":32}},{"path":"src/main/java/DialogBox.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"DineshMagesvaran"},"content":"import javafx.collections.FXCollections;"},{"lineNumber":2,"author":{"gitId":"DineshMagesvaran"},"content":"import javafx.collections.ObservableList;"},{"lineNumber":3,"author":{"gitId":"DineshMagesvaran"},"content":"import javafx.geometry.Pos;"},{"lineNumber":4,"author":{"gitId":"DineshMagesvaran"},"content":"import javafx.scene.Node;"},{"lineNumber":5,"author":{"gitId":"DineshMagesvaran"},"content":"import javafx.scene.control.Label;"},{"lineNumber":6,"author":{"gitId":"DineshMagesvaran"},"content":"import javafx.scene.image.ImageView;"},{"lineNumber":7,"author":{"gitId":"DineshMagesvaran"},"content":"import javafx.scene.layout.HBox;"},{"lineNumber":8,"author":{"gitId":"DineshMagesvaran"},"content":""},{"lineNumber":9,"author":{"gitId":"DineshMagesvaran"},"content":"/**"},{"lineNumber":10,"author":{"gitId":"DineshMagesvaran"},"content":" * Class that can create a dialog box to be displayed on the"},{"lineNumber":11,"author":{"gitId":"DineshMagesvaran"},"content":" * user interface."},{"lineNumber":12,"author":{"gitId":"DineshMagesvaran"},"content":" */"},{"lineNumber":13,"author":{"gitId":"DineshMagesvaran"},"content":"public class DialogBox extends HBox {"},{"lineNumber":14,"author":{"gitId":"DineshMagesvaran"},"content":"    private Label text;"},{"lineNumber":15,"author":{"gitId":"DineshMagesvaran"},"content":"    private ImageView displayPicture;"},{"lineNumber":16,"author":{"gitId":"DineshMagesvaran"},"content":""},{"lineNumber":17,"author":{"gitId":"DineshMagesvaran"},"content":"    /**"},{"lineNumber":18,"author":{"gitId":"DineshMagesvaran"},"content":"     * Constructor that creates a DialogBox object."},{"lineNumber":19,"author":{"gitId":"DineshMagesvaran"},"content":"     *"},{"lineNumber":20,"author":{"gitId":"DineshMagesvaran"},"content":"     * @param l label to display in the dialog box."},{"lineNumber":21,"author":{"gitId":"DineshMagesvaran"},"content":"     * @param iv image view to display in the dialog box."},{"lineNumber":22,"author":{"gitId":"DineshMagesvaran"},"content":"     */"},{"lineNumber":23,"author":{"gitId":"DineshMagesvaran"},"content":"    public DialogBox(Label l, ImageView iv) {"},{"lineNumber":24,"author":{"gitId":"DineshMagesvaran"},"content":"        text \u003d l;"},{"lineNumber":25,"author":{"gitId":"DineshMagesvaran"},"content":"        displayPicture \u003d iv;"},{"lineNumber":26,"author":{"gitId":"DineshMagesvaran"},"content":""},{"lineNumber":27,"author":{"gitId":"DineshMagesvaran"},"content":"        text.setWrapText(true);"},{"lineNumber":28,"author":{"gitId":"DineshMagesvaran"},"content":"        displayPicture.setFitWidth(100.0);"},{"lineNumber":29,"author":{"gitId":"DineshMagesvaran"},"content":"        displayPicture.setFitHeight(100.0);"},{"lineNumber":30,"author":{"gitId":"DineshMagesvaran"},"content":""},{"lineNumber":31,"author":{"gitId":"DineshMagesvaran"},"content":"        this.setAlignment(Pos.TOP_RIGHT);"},{"lineNumber":32,"author":{"gitId":"DineshMagesvaran"},"content":"        this.getChildren().addAll(text, displayPicture);"},{"lineNumber":33,"author":{"gitId":"DineshMagesvaran"},"content":"    }"},{"lineNumber":34,"author":{"gitId":"DineshMagesvaran"},"content":""},{"lineNumber":35,"author":{"gitId":"DineshMagesvaran"},"content":"    /**"},{"lineNumber":36,"author":{"gitId":"DineshMagesvaran"},"content":"     * Flips the dialog box such that the ImageView is on the left and text on the right."},{"lineNumber":37,"author":{"gitId":"DineshMagesvaran"},"content":"     */"},{"lineNumber":38,"author":{"gitId":"DineshMagesvaran"},"content":"    private void flip() {"},{"lineNumber":39,"author":{"gitId":"DineshMagesvaran"},"content":"        this.setAlignment(Pos.TOP_LEFT);"},{"lineNumber":40,"author":{"gitId":"DineshMagesvaran"},"content":"        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());"},{"lineNumber":41,"author":{"gitId":"DineshMagesvaran"},"content":"        FXCollections.reverse(tmp);"},{"lineNumber":42,"author":{"gitId":"DineshMagesvaran"},"content":"        this.getChildren().setAll(tmp);"},{"lineNumber":43,"author":{"gitId":"DineshMagesvaran"},"content":"    }"},{"lineNumber":44,"author":{"gitId":"DineshMagesvaran"},"content":""},{"lineNumber":45,"author":{"gitId":"DineshMagesvaran"},"content":"    /**"},{"lineNumber":46,"author":{"gitId":"DineshMagesvaran"},"content":"     * Gets the user dialog box."},{"lineNumber":47,"author":{"gitId":"DineshMagesvaran"},"content":"     *"},{"lineNumber":48,"author":{"gitId":"DineshMagesvaran"},"content":"     * @param l label to display in the dialog box."},{"lineNumber":49,"author":{"gitId":"DineshMagesvaran"},"content":"     * @param iv image view to display in the dialog box."},{"lineNumber":50,"author":{"gitId":"DineshMagesvaran"},"content":"     * @return user dialog box to be displayed on the user interface."},{"lineNumber":51,"author":{"gitId":"DineshMagesvaran"},"content":"     */"},{"lineNumber":52,"author":{"gitId":"DineshMagesvaran"},"content":"    public static DialogBox getUserDialog(Label l, ImageView iv) {"},{"lineNumber":53,"author":{"gitId":"DineshMagesvaran"},"content":"        return new DialogBox(l, iv);"},{"lineNumber":54,"author":{"gitId":"DineshMagesvaran"},"content":"    }"},{"lineNumber":55,"author":{"gitId":"DineshMagesvaran"},"content":""},{"lineNumber":56,"author":{"gitId":"DineshMagesvaran"},"content":"    /**"},{"lineNumber":57,"author":{"gitId":"DineshMagesvaran"},"content":"     * Gets the duke dialog box."},{"lineNumber":58,"author":{"gitId":"DineshMagesvaran"},"content":"     *"},{"lineNumber":59,"author":{"gitId":"DineshMagesvaran"},"content":"     * @param l label to display in the dialog box."},{"lineNumber":60,"author":{"gitId":"DineshMagesvaran"},"content":"     * @param iv image view to display in the dialog box."},{"lineNumber":61,"author":{"gitId":"DineshMagesvaran"},"content":"     * @return duke dialog box to be displayed on the user interface."},{"lineNumber":62,"author":{"gitId":"DineshMagesvaran"},"content":"     */"},{"lineNumber":63,"author":{"gitId":"DineshMagesvaran"},"content":"    public static DialogBox getDukeDialog(Label l, ImageView iv) {"},{"lineNumber":64,"author":{"gitId":"DineshMagesvaran"},"content":"        var db \u003d new DialogBox(l, iv);"},{"lineNumber":65,"author":{"gitId":"DineshMagesvaran"},"content":"        db.flip();"},{"lineNumber":66,"author":{"gitId":"DineshMagesvaran"},"content":"        return db;"},{"lineNumber":67,"author":{"gitId":"DineshMagesvaran"},"content":"    }"},{"lineNumber":68,"author":{"gitId":"DineshMagesvaran"},"content":"}"}],"authorContributionMap":{"DineshMagesvaran":68}},{"path":"src/main/java/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"DineshMagesvaran"},"content":"import javafx.application.Application;"},{"lineNumber":2,"author":{"gitId":"DineshMagesvaran"},"content":""},{"lineNumber":3,"author":{"gitId":"DineshMagesvaran"},"content":"/**"},{"lineNumber":4,"author":{"gitId":"DineshMagesvaran"},"content":" * Class that can create Duke objects that help the user"},{"lineNumber":5,"author":{"gitId":"DineshMagesvaran"},"content":" * to maintain a list of tasks."},{"lineNumber":6,"author":{"gitId":"DineshMagesvaran"},"content":" */"},{"lineNumber":7,"author":{"gitId":"-"},"content":"public class Duke {"},{"lineNumber":8,"author":{"gitId":"DineshMagesvaran"},"content":"    /**"},{"lineNumber":9,"author":{"gitId":"DineshMagesvaran"},"content":"     * Method to run the Duke application."},{"lineNumber":10,"author":{"gitId":"DineshMagesvaran"},"content":"     */"},{"lineNumber":11,"author":{"gitId":"DineshMagesvaran"},"content":"    public void run() {"},{"lineNumber":12,"author":{"gitId":"DineshMagesvaran"},"content":"        Application.launch(UI.class);"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":14,"author":{"gitId":"DineshMagesvaran"},"content":""},{"lineNumber":15,"author":{"gitId":"-"},"content":"    public static void main(String[] args) {"},{"lineNumber":16,"author":{"gitId":"DineshMagesvaran"},"content":"        new Duke().run();"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":18,"author":{"gitId":"DineshMagesvaran"},"content":""},{"lineNumber":19,"author":{"gitId":"-"},"content":"}"}],"authorContributionMap":{"DineshMagesvaran":14,"-":5}},{"path":"src/main/java/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"DineshMagesvaran"},"content":"import java.time.LocalDate;"},{"lineNumber":2,"author":{"gitId":"DineshMagesvaran"},"content":"import java.time.format.DateTimeFormatter;"},{"lineNumber":3,"author":{"gitId":"DineshMagesvaran"},"content":""},{"lineNumber":4,"author":{"gitId":"DineshMagesvaran"},"content":"/**"},{"lineNumber":5,"author":{"gitId":"DineshMagesvaran"},"content":" * Class that can create a event task object."},{"lineNumber":6,"author":{"gitId":"DineshMagesvaran"},"content":" */"},{"lineNumber":7,"author":{"gitId":"DineshMagesvaran"},"content":"public class Event extends Task {"},{"lineNumber":8,"author":{"gitId":"DineshMagesvaran"},"content":"    private LocalDate startDateInfo;"},{"lineNumber":9,"author":{"gitId":"DineshMagesvaran"},"content":"    private LocalDate endDateInfo;"},{"lineNumber":10,"author":{"gitId":"DineshMagesvaran"},"content":""},{"lineNumber":11,"author":{"gitId":"DineshMagesvaran"},"content":"    /**"},{"lineNumber":12,"author":{"gitId":"DineshMagesvaran"},"content":"     * Constructor that creates a event task."},{"lineNumber":13,"author":{"gitId":"DineshMagesvaran"},"content":"     * @param taskInfo the description of the event task."},{"lineNumber":14,"author":{"gitId":"DineshMagesvaran"},"content":"     * @param startDateInfo the start date of the event task."},{"lineNumber":15,"author":{"gitId":"DineshMagesvaran"},"content":"     * @param endDateInfo the end date of the event task."},{"lineNumber":16,"author":{"gitId":"DineshMagesvaran"},"content":"     */"},{"lineNumber":17,"author":{"gitId":"DineshMagesvaran"},"content":"    public Event(String taskInfo, LocalDate startDateInfo, LocalDate endDateInfo) {"},{"lineNumber":18,"author":{"gitId":"DineshMagesvaran"},"content":"        super(taskInfo);"},{"lineNumber":19,"author":{"gitId":"DineshMagesvaran"},"content":"        this.startDateInfo \u003d startDateInfo;"},{"lineNumber":20,"author":{"gitId":"DineshMagesvaran"},"content":"        this.endDateInfo \u003d endDateInfo;"},{"lineNumber":21,"author":{"gitId":"DineshMagesvaran"},"content":"    }"},{"lineNumber":22,"author":{"gitId":"DineshMagesvaran"},"content":""},{"lineNumber":23,"author":{"gitId":"DineshMagesvaran"},"content":"    @Override"},{"lineNumber":24,"author":{"gitId":"DineshMagesvaran"},"content":"    public String toString() {"},{"lineNumber":25,"author":{"gitId":"DineshMagesvaran"},"content":"        return \"[E]\" + super.toString() + \" (\""},{"lineNumber":26,"author":{"gitId":"DineshMagesvaran"},"content":"                + startDateInfo.format(DateTimeFormatter.ofPattern(\"dd MMM yyyy\")) + \" to \""},{"lineNumber":27,"author":{"gitId":"DineshMagesvaran"},"content":"                + endDateInfo.format(DateTimeFormatter.ofPattern(\"dd MMM yyyy\")) + \")\";"},{"lineNumber":28,"author":{"gitId":"DineshMagesvaran"},"content":"    }"},{"lineNumber":29,"author":{"gitId":"DineshMagesvaran"},"content":""},{"lineNumber":30,"author":{"gitId":"DineshMagesvaran"},"content":"    public String getData() {"},{"lineNumber":31,"author":{"gitId":"DineshMagesvaran"},"content":"        if (isDone \u003d\u003d true) {"},{"lineNumber":32,"author":{"gitId":"DineshMagesvaran"},"content":"            return \"E!@#1!@#\" + taskInfo + \"!@#\" + startDateInfo + \"!@#\" + endDateInfo;"},{"lineNumber":33,"author":{"gitId":"DineshMagesvaran"},"content":"        } else {"},{"lineNumber":34,"author":{"gitId":"DineshMagesvaran"},"content":"            return \"E!@#0!@#\" + taskInfo + \"!@#\" + startDateInfo + \"!@#\" + endDateInfo;"},{"lineNumber":35,"author":{"gitId":"DineshMagesvaran"},"content":"        }"},{"lineNumber":36,"author":{"gitId":"DineshMagesvaran"},"content":"    }"},{"lineNumber":37,"author":{"gitId":"DineshMagesvaran"},"content":"}"}],"authorContributionMap":{"DineshMagesvaran":37}},{"path":"src/main/java/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"DineshMagesvaran"},"content":"import java.time.LocalDate;"},{"lineNumber":2,"author":{"gitId":"DineshMagesvaran"},"content":"import java.time.format.DateTimeParseException;"},{"lineNumber":3,"author":{"gitId":"DineshMagesvaran"},"content":""},{"lineNumber":4,"author":{"gitId":"DineshMagesvaran"},"content":"/**"},{"lineNumber":5,"author":{"gitId":"DineshMagesvaran"},"content":" * Class that can create a Parser object that can interpret the user"},{"lineNumber":6,"author":{"gitId":"DineshMagesvaran"},"content":" * commands."},{"lineNumber":7,"author":{"gitId":"DineshMagesvaran"},"content":" */"},{"lineNumber":8,"author":{"gitId":"DineshMagesvaran"},"content":"public class Parser {"},{"lineNumber":9,"author":{"gitId":"DineshMagesvaran"},"content":"    /**"},{"lineNumber":10,"author":{"gitId":"DineshMagesvaran"},"content":"     * Method that interprets and executes the user command accordingly."},{"lineNumber":11,"author":{"gitId":"DineshMagesvaran"},"content":"     *"},{"lineNumber":12,"author":{"gitId":"DineshMagesvaran"},"content":"     * @param listOfTasks the list of tasks for the user."},{"lineNumber":13,"author":{"gitId":"DineshMagesvaran"},"content":"     * @param textInput the command that was given by the user."},{"lineNumber":14,"author":{"gitId":"DineshMagesvaran"},"content":"     */"},{"lineNumber":15,"author":{"gitId":"DineshMagesvaran"},"content":"    public String executeCommand(TaskList listOfTasks, String textInput) {"},{"lineNumber":16,"author":{"gitId":"DineshMagesvaran"},"content":"        String output \u003d \"\";"},{"lineNumber":17,"author":{"gitId":"DineshMagesvaran"},"content":"        if (textInput.toLowerCase().equals(\"list\")) {"},{"lineNumber":18,"author":{"gitId":"DineshMagesvaran"},"content":"            int i \u003d 1;"},{"lineNumber":19,"author":{"gitId":"DineshMagesvaran"},"content":"            output +\u003d \"\\t Here are the tasks in your list:\\n\";"},{"lineNumber":20,"author":{"gitId":"DineshMagesvaran"},"content":"            for (Task task : listOfTasks) {"},{"lineNumber":21,"author":{"gitId":"DineshMagesvaran"},"content":"                output +\u003d \"\\t \" + i + \".\" + task + \"\\n\";"},{"lineNumber":22,"author":{"gitId":"DineshMagesvaran"},"content":"                i++;"},{"lineNumber":23,"author":{"gitId":"DineshMagesvaran"},"content":"            }"},{"lineNumber":24,"author":{"gitId":"DineshMagesvaran"},"content":"        } else if (textInput.startsWith(\"done \")) {"},{"lineNumber":25,"author":{"gitId":"DineshMagesvaran"},"content":"            try {"},{"lineNumber":26,"author":{"gitId":"DineshMagesvaran"},"content":"                int i \u003d Integer.parseInt(textInput.substring(5));"},{"lineNumber":27,"author":{"gitId":"DineshMagesvaran"},"content":"                Task task \u003d listOfTasks.get(i - 1);"},{"lineNumber":28,"author":{"gitId":"DineshMagesvaran"},"content":"                task.completeTask();"},{"lineNumber":29,"author":{"gitId":"DineshMagesvaran"},"content":"                output +\u003d \"\\t Nice! I\u0027ve marked this task as done:\\n\";"},{"lineNumber":30,"author":{"gitId":"DineshMagesvaran"},"content":"                output +\u003d \"\\t   \" + task + \"\\n\";"},{"lineNumber":31,"author":{"gitId":"DineshMagesvaran"},"content":"            } catch (NumberFormatException e) {"},{"lineNumber":32,"author":{"gitId":"DineshMagesvaran"},"content":"                output +\u003d \"INVALID COMMAND!\\n\";"},{"lineNumber":33,"author":{"gitId":"DineshMagesvaran"},"content":"            } catch (StringIndexOutOfBoundsException e) {"},{"lineNumber":34,"author":{"gitId":"DineshMagesvaran"},"content":"                output +\u003d \"INVALID COMMAND!\\n\";"},{"lineNumber":35,"author":{"gitId":"DineshMagesvaran"},"content":"            } catch (IndexOutOfBoundsException e) {"},{"lineNumber":36,"author":{"gitId":"DineshMagesvaran"},"content":"                output +\u003d \"INVALID COMMAND!\\n\";"},{"lineNumber":37,"author":{"gitId":"DineshMagesvaran"},"content":"            }"},{"lineNumber":38,"author":{"gitId":"DineshMagesvaran"},"content":"        } else if (textInput.startsWith(\"delete \")) {"},{"lineNumber":39,"author":{"gitId":"DineshMagesvaran"},"content":"            try {"},{"lineNumber":40,"author":{"gitId":"DineshMagesvaran"},"content":"                int i \u003d Integer.parseInt(textInput.substring(7));"},{"lineNumber":41,"author":{"gitId":"DineshMagesvaran"},"content":"                Task task \u003d listOfTasks.get(i - 1);"},{"lineNumber":42,"author":{"gitId":"DineshMagesvaran"},"content":"                listOfTasks.remove(i - 1);"},{"lineNumber":43,"author":{"gitId":"DineshMagesvaran"},"content":"                output +\u003d \"\\t Noted. I\u0027ve removed this task:\\n\";"},{"lineNumber":44,"author":{"gitId":"DineshMagesvaran"},"content":"                output +\u003d \"\\t   \" + task + \"\\n\";"},{"lineNumber":45,"author":{"gitId":"DineshMagesvaran"},"content":"                output +\u003d \"\\t Now you have \" + listOfTasks.size() + \" tasks in the list.\\n\";"},{"lineNumber":46,"author":{"gitId":"DineshMagesvaran"},"content":"            } catch (NumberFormatException e) {"},{"lineNumber":47,"author":{"gitId":"DineshMagesvaran"},"content":"                output +\u003d \"INVALID COMMAND!\\n\";"},{"lineNumber":48,"author":{"gitId":"DineshMagesvaran"},"content":"            } catch (StringIndexOutOfBoundsException e) {"},{"lineNumber":49,"author":{"gitId":"DineshMagesvaran"},"content":"                output +\u003d \"INVALID COMMAND!\\n\";"},{"lineNumber":50,"author":{"gitId":"DineshMagesvaran"},"content":"            } catch (IndexOutOfBoundsException e) {"},{"lineNumber":51,"author":{"gitId":"DineshMagesvaran"},"content":"                output +\u003d \"INVALID COMMAND!\\n\";"},{"lineNumber":52,"author":{"gitId":"DineshMagesvaran"},"content":"            }"},{"lineNumber":53,"author":{"gitId":"DineshMagesvaran"},"content":"        } else if (textInput.startsWith(\"find \")) {"},{"lineNumber":54,"author":{"gitId":"DineshMagesvaran"},"content":"            String textToFind \u003d textInput.substring(5);"},{"lineNumber":55,"author":{"gitId":"DineshMagesvaran"},"content":"            if (!textToFind.isBlank()) {"},{"lineNumber":56,"author":{"gitId":"DineshMagesvaran"},"content":"                output +\u003d \"\\t Here are the matching tasks in your list:\\n\";"},{"lineNumber":57,"author":{"gitId":"DineshMagesvaran"},"content":"                int i \u003d 1;"},{"lineNumber":58,"author":{"gitId":"DineshMagesvaran"},"content":"                for (Task task : listOfTasks) {"},{"lineNumber":59,"author":{"gitId":"DineshMagesvaran"},"content":"                    if (task.contains(textToFind)) {"},{"lineNumber":60,"author":{"gitId":"DineshMagesvaran"},"content":"                        output +\u003d \"\\t \" + i + \". \" + task + \"\\n\";"},{"lineNumber":61,"author":{"gitId":"DineshMagesvaran"},"content":"                    }"},{"lineNumber":62,"author":{"gitId":"DineshMagesvaran"},"content":"                    i++;"},{"lineNumber":63,"author":{"gitId":"DineshMagesvaran"},"content":"                }"},{"lineNumber":64,"author":{"gitId":"DineshMagesvaran"},"content":"            } else {"},{"lineNumber":65,"author":{"gitId":"DineshMagesvaran"},"content":"                output +\u003d \"\\t OOPS!!! The description of find cannot be empty.\\n\";"},{"lineNumber":66,"author":{"gitId":"DineshMagesvaran"},"content":"            }"},{"lineNumber":67,"author":{"gitId":"DineshMagesvaran"},"content":"        } else if (textInput.startsWith(\"todo\")) {"},{"lineNumber":68,"author":{"gitId":"DineshMagesvaran"},"content":"            try {"},{"lineNumber":69,"author":{"gitId":"DineshMagesvaran"},"content":"                textInput \u003d textInput.substring(5);"},{"lineNumber":70,"author":{"gitId":"DineshMagesvaran"},"content":"                Task task \u003d new ToDo(textInput);"},{"lineNumber":71,"author":{"gitId":"DineshMagesvaran"},"content":"                listOfTasks.add(task);"},{"lineNumber":72,"author":{"gitId":"DineshMagesvaran"},"content":"                output +\u003d \"\\t Got it. I\u0027ve added this task:\\n\";"},{"lineNumber":73,"author":{"gitId":"DineshMagesvaran"},"content":"                output +\u003d \"\\t   \" + task + \"\\n\";"},{"lineNumber":74,"author":{"gitId":"DineshMagesvaran"},"content":"                output +\u003d \"\\t Now you have \" + listOfTasks.size() + \" tasks in the list.\\n\";"},{"lineNumber":75,"author":{"gitId":"DineshMagesvaran"},"content":"            } catch (StringIndexOutOfBoundsException e) {"},{"lineNumber":76,"author":{"gitId":"DineshMagesvaran"},"content":"                output +\u003d \"\\t OOPS!!! The description of a todo cannot be empty.\\n\";"},{"lineNumber":77,"author":{"gitId":"DineshMagesvaran"},"content":"            }"},{"lineNumber":78,"author":{"gitId":"DineshMagesvaran"},"content":"        } else if (textInput.startsWith(\"deadline\")) {"},{"lineNumber":79,"author":{"gitId":"DineshMagesvaran"},"content":"            try {"},{"lineNumber":80,"author":{"gitId":"DineshMagesvaran"},"content":"                textInput \u003d textInput.substring(9);"},{"lineNumber":81,"author":{"gitId":"DineshMagesvaran"},"content":"                int index \u003d textInput.indexOf(\"/by \");"},{"lineNumber":82,"author":{"gitId":"DineshMagesvaran"},"content":"                if (index !\u003d -1) {"},{"lineNumber":83,"author":{"gitId":"DineshMagesvaran"},"content":"                    String dateInfo \u003d textInput.substring(index + 4);"},{"lineNumber":84,"author":{"gitId":"DineshMagesvaran"},"content":"                    LocalDate localDate \u003d LocalDate.parse(dateInfo);"},{"lineNumber":85,"author":{"gitId":"DineshMagesvaran"},"content":"                    Task task \u003d new Deadline(textInput.substring(0, index - 1), localDate);"},{"lineNumber":86,"author":{"gitId":"DineshMagesvaran"},"content":"                    listOfTasks.add(task);"},{"lineNumber":87,"author":{"gitId":"DineshMagesvaran"},"content":"                    output +\u003d \"\\t Got it. I\u0027ve added this task:\\n\";"},{"lineNumber":88,"author":{"gitId":"DineshMagesvaran"},"content":"                    output +\u003d \"\\t   \" + task + \"\\n\";"},{"lineNumber":89,"author":{"gitId":"DineshMagesvaran"},"content":"                    output +\u003d \"\\t Now you have \" + listOfTasks.size() + \" tasks in the list.\\n\";"},{"lineNumber":90,"author":{"gitId":"DineshMagesvaran"},"content":"                } else {"},{"lineNumber":91,"author":{"gitId":"DineshMagesvaran"},"content":"                    output +\u003d \"INVALID COMMAND!\\n\";"},{"lineNumber":92,"author":{"gitId":"DineshMagesvaran"},"content":"                }"},{"lineNumber":93,"author":{"gitId":"DineshMagesvaran"},"content":"            } catch (StringIndexOutOfBoundsException e) {"},{"lineNumber":94,"author":{"gitId":"DineshMagesvaran"},"content":"                output +\u003d \"\\t OOPS!!! The description of a deadline cannot be empty.\\n\";"},{"lineNumber":95,"author":{"gitId":"DineshMagesvaran"},"content":"            } catch (DateTimeParseException e) {"},{"lineNumber":96,"author":{"gitId":"DineshMagesvaran"},"content":"                output +\u003d \"INVALID COMMAND!\\n\";"},{"lineNumber":97,"author":{"gitId":"DineshMagesvaran"},"content":"            }"},{"lineNumber":98,"author":{"gitId":"DineshMagesvaran"},"content":"        } else if (textInput.startsWith(\"event\")) {"},{"lineNumber":99,"author":{"gitId":"DineshMagesvaran"},"content":"            try {"},{"lineNumber":100,"author":{"gitId":"DineshMagesvaran"},"content":"                textInput \u003d textInput.substring(6);"},{"lineNumber":101,"author":{"gitId":"DineshMagesvaran"},"content":"                int index \u003d textInput.indexOf(\"/from \");"},{"lineNumber":102,"author":{"gitId":"DineshMagesvaran"},"content":"                if (index !\u003d -1) {"},{"lineNumber":103,"author":{"gitId":"DineshMagesvaran"},"content":"                    String dateInfo \u003d textInput.substring(index + 6);"},{"lineNumber":104,"author":{"gitId":"DineshMagesvaran"},"content":"                    int index2 \u003d dateInfo.indexOf(\"to \");"},{"lineNumber":105,"author":{"gitId":"DineshMagesvaran"},"content":"                    if (index2 !\u003d -1) {"},{"lineNumber":106,"author":{"gitId":"DineshMagesvaran"},"content":"                        LocalDate startDate \u003d LocalDate.parse(dateInfo.substring(0, index2 - 1));"},{"lineNumber":107,"author":{"gitId":"DineshMagesvaran"},"content":"                        LocalDate endDate \u003d LocalDate.parse(dateInfo.substring(index2 + 3));"},{"lineNumber":108,"author":{"gitId":"DineshMagesvaran"},"content":"                        Task task \u003d new Event(textInput.substring(0, index - 1), startDate, endDate);"},{"lineNumber":109,"author":{"gitId":"DineshMagesvaran"},"content":"                        listOfTasks.add(task);"},{"lineNumber":110,"author":{"gitId":"DineshMagesvaran"},"content":"                        output +\u003d \"\\t Got it. I\u0027ve added this task:\\n\";"},{"lineNumber":111,"author":{"gitId":"DineshMagesvaran"},"content":"                        output +\u003d \"\\t   \" + task + \"\\n\";"},{"lineNumber":112,"author":{"gitId":"DineshMagesvaran"},"content":"                        output +\u003d \"\\t Now you have \" + listOfTasks.size() + \" tasks in the list.\\n\";"},{"lineNumber":113,"author":{"gitId":"DineshMagesvaran"},"content":"                    } else {"},{"lineNumber":114,"author":{"gitId":"DineshMagesvaran"},"content":"                        output +\u003d \"INVALID COMMAND!\\n\";"},{"lineNumber":115,"author":{"gitId":"DineshMagesvaran"},"content":"                    }"},{"lineNumber":116,"author":{"gitId":"DineshMagesvaran"},"content":"                } else {"},{"lineNumber":117,"author":{"gitId":"DineshMagesvaran"},"content":"                    output +\u003d \"INVALID COMMAND!\\n\";"},{"lineNumber":118,"author":{"gitId":"DineshMagesvaran"},"content":"                }"},{"lineNumber":119,"author":{"gitId":"DineshMagesvaran"},"content":"            } catch (StringIndexOutOfBoundsException e) {"},{"lineNumber":120,"author":{"gitId":"DineshMagesvaran"},"content":"                output +\u003d \"\\t OOPS!!! The description of a event cannot be empty.\\n\";"},{"lineNumber":121,"author":{"gitId":"DineshMagesvaran"},"content":"            } catch (DateTimeParseException e) {"},{"lineNumber":122,"author":{"gitId":"DineshMagesvaran"},"content":"                output +\u003d \"INVALID COMMAND!\\n\";"},{"lineNumber":123,"author":{"gitId":"DineshMagesvaran"},"content":"            }"},{"lineNumber":124,"author":{"gitId":"DineshMagesvaran"},"content":"        } else {"},{"lineNumber":125,"author":{"gitId":"DineshMagesvaran"},"content":"            output +\u003d \"\\t OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\\n\";"},{"lineNumber":126,"author":{"gitId":"DineshMagesvaran"},"content":"        }"},{"lineNumber":127,"author":{"gitId":"DineshMagesvaran"},"content":""},{"lineNumber":128,"author":{"gitId":"DineshMagesvaran"},"content":"        return output;"},{"lineNumber":129,"author":{"gitId":"DineshMagesvaran"},"content":"    }"},{"lineNumber":130,"author":{"gitId":"DineshMagesvaran"},"content":"}"}],"authorContributionMap":{"DineshMagesvaran":130}},{"path":"src/main/java/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"DineshMagesvaran"},"content":"import java.io.File;"},{"lineNumber":2,"author":{"gitId":"DineshMagesvaran"},"content":"import java.io.FileNotFoundException;"},{"lineNumber":3,"author":{"gitId":"DineshMagesvaran"},"content":"import java.io.FileWriter;"},{"lineNumber":4,"author":{"gitId":"DineshMagesvaran"},"content":"import java.io.IOException;"},{"lineNumber":5,"author":{"gitId":"DineshMagesvaran"},"content":"import java.time.LocalDate;"},{"lineNumber":6,"author":{"gitId":"DineshMagesvaran"},"content":"import java.util.Scanner;"},{"lineNumber":7,"author":{"gitId":"DineshMagesvaran"},"content":""},{"lineNumber":8,"author":{"gitId":"DineshMagesvaran"},"content":"/**"},{"lineNumber":9,"author":{"gitId":"DineshMagesvaran"},"content":" * Class that can create a storage object that contains methods to"},{"lineNumber":10,"author":{"gitId":"DineshMagesvaran"},"content":" * read and write data to a file."},{"lineNumber":11,"author":{"gitId":"DineshMagesvaran"},"content":" */"},{"lineNumber":12,"author":{"gitId":"DineshMagesvaran"},"content":"public class Storage {"},{"lineNumber":13,"author":{"gitId":"DineshMagesvaran"},"content":"    private String filePath;"},{"lineNumber":14,"author":{"gitId":"DineshMagesvaran"},"content":""},{"lineNumber":15,"author":{"gitId":"DineshMagesvaran"},"content":"    /**"},{"lineNumber":16,"author":{"gitId":"DineshMagesvaran"},"content":"     * Constructor that creates a new Storage object."},{"lineNumber":17,"author":{"gitId":"DineshMagesvaran"},"content":"     *"},{"lineNumber":18,"author":{"gitId":"DineshMagesvaran"},"content":"     * @param filePath the file path that is used to read and write"},{"lineNumber":19,"author":{"gitId":"DineshMagesvaran"},"content":"     *                 data to."},{"lineNumber":20,"author":{"gitId":"DineshMagesvaran"},"content":"     */"},{"lineNumber":21,"author":{"gitId":"DineshMagesvaran"},"content":"    public Storage(String filePath) {"},{"lineNumber":22,"author":{"gitId":"DineshMagesvaran"},"content":"        this.filePath \u003d filePath;"},{"lineNumber":23,"author":{"gitId":"DineshMagesvaran"},"content":"    }"},{"lineNumber":24,"author":{"gitId":"DineshMagesvaran"},"content":""},{"lineNumber":25,"author":{"gitId":"DineshMagesvaran"},"content":"    /**"},{"lineNumber":26,"author":{"gitId":"DineshMagesvaran"},"content":"     * Method that reads the data from the file located at the file path."},{"lineNumber":27,"author":{"gitId":"DineshMagesvaran"},"content":"     *"},{"lineNumber":28,"author":{"gitId":"DineshMagesvaran"},"content":"     * @return the list of tasks obtained from the stored data in the file."},{"lineNumber":29,"author":{"gitId":"DineshMagesvaran"},"content":"     */"},{"lineNumber":30,"author":{"gitId":"DineshMagesvaran"},"content":"    public TaskList readDataFromFile() {"},{"lineNumber":31,"author":{"gitId":"DineshMagesvaran"},"content":"        TaskList taskList \u003d new TaskList();"},{"lineNumber":32,"author":{"gitId":"DineshMagesvaran"},"content":"        try {"},{"lineNumber":33,"author":{"gitId":"DineshMagesvaran"},"content":"            File file \u003d new File(filePath);"},{"lineNumber":34,"author":{"gitId":"DineshMagesvaran"},"content":"            Scanner readFile \u003d new Scanner(file);"},{"lineNumber":35,"author":{"gitId":"DineshMagesvaran"},"content":"            while (readFile.hasNextLine()) {"},{"lineNumber":36,"author":{"gitId":"DineshMagesvaran"},"content":"                String taskData \u003d readFile.nextLine();"},{"lineNumber":37,"author":{"gitId":"DineshMagesvaran"},"content":"                if (taskData.startsWith(\"T\")) {"},{"lineNumber":38,"author":{"gitId":"DineshMagesvaran"},"content":"                    String[] listOfData \u003d taskData.split(\"!@#\", 3);"},{"lineNumber":39,"author":{"gitId":"DineshMagesvaran"},"content":"                    Task newTodo \u003d new ToDo(listOfData[2]);"},{"lineNumber":40,"author":{"gitId":"DineshMagesvaran"},"content":"                    if (listOfData[1].equals(\"1\")) {"},{"lineNumber":41,"author":{"gitId":"DineshMagesvaran"},"content":"                        newTodo.completeTask();"},{"lineNumber":42,"author":{"gitId":"DineshMagesvaran"},"content":"                    }"},{"lineNumber":43,"author":{"gitId":"DineshMagesvaran"},"content":"                    taskList.addTask(newTodo);"},{"lineNumber":44,"author":{"gitId":"DineshMagesvaran"},"content":"                } else if (taskData.startsWith(\"D\")) {"},{"lineNumber":45,"author":{"gitId":"DineshMagesvaran"},"content":"                    String[] listOfData \u003d taskData.split(\"!@#\", 4);"},{"lineNumber":46,"author":{"gitId":"DineshMagesvaran"},"content":"                    LocalDate localDate \u003d LocalDate.parse(listOfData[3]);"},{"lineNumber":47,"author":{"gitId":"DineshMagesvaran"},"content":"                    Task newDeadline \u003d new Deadline(listOfData[2], localDate);"},{"lineNumber":48,"author":{"gitId":"DineshMagesvaran"},"content":"                    if (listOfData[1].equals(\"1\")) {"},{"lineNumber":49,"author":{"gitId":"DineshMagesvaran"},"content":"                        newDeadline.completeTask();"},{"lineNumber":50,"author":{"gitId":"DineshMagesvaran"},"content":"                    }"},{"lineNumber":51,"author":{"gitId":"DineshMagesvaran"},"content":"                    taskList.addTask(newDeadline);"},{"lineNumber":52,"author":{"gitId":"DineshMagesvaran"},"content":"                } else if (taskData.startsWith(\"E\")) {"},{"lineNumber":53,"author":{"gitId":"DineshMagesvaran"},"content":"                    String[] listOfData \u003d taskData.split(\"!@#\", 5);"},{"lineNumber":54,"author":{"gitId":"DineshMagesvaran"},"content":"                    LocalDate startDate \u003d LocalDate.parse(listOfData[3]);"},{"lineNumber":55,"author":{"gitId":"DineshMagesvaran"},"content":"                    LocalDate endDate \u003d LocalDate.parse(listOfData[4]);"},{"lineNumber":56,"author":{"gitId":"DineshMagesvaran"},"content":"                    Task newEvent \u003d new Event(listOfData[2], startDate, endDate);"},{"lineNumber":57,"author":{"gitId":"DineshMagesvaran"},"content":"                    if (listOfData[1].equals(\"1\")) {"},{"lineNumber":58,"author":{"gitId":"DineshMagesvaran"},"content":"                        newEvent.completeTask();"},{"lineNumber":59,"author":{"gitId":"DineshMagesvaran"},"content":"                    }"},{"lineNumber":60,"author":{"gitId":"DineshMagesvaran"},"content":"                    taskList.addTask(newEvent);"},{"lineNumber":61,"author":{"gitId":"DineshMagesvaran"},"content":"                } else {"},{"lineNumber":62,"author":{"gitId":"DineshMagesvaran"},"content":"                    //"},{"lineNumber":63,"author":{"gitId":"DineshMagesvaran"},"content":"                }"},{"lineNumber":64,"author":{"gitId":"DineshMagesvaran"},"content":"            }"},{"lineNumber":65,"author":{"gitId":"DineshMagesvaran"},"content":"        } catch (FileNotFoundException e) {"},{"lineNumber":66,"author":{"gitId":"DineshMagesvaran"},"content":"            File file \u003d new File(filePath);"},{"lineNumber":67,"author":{"gitId":"DineshMagesvaran"},"content":"            try {"},{"lineNumber":68,"author":{"gitId":"DineshMagesvaran"},"content":"                file.getParentFile().mkdirs();"},{"lineNumber":69,"author":{"gitId":"DineshMagesvaran"},"content":"                file.createNewFile();"},{"lineNumber":70,"author":{"gitId":"DineshMagesvaran"},"content":"            } catch (IOException ioException) {"},{"lineNumber":71,"author":{"gitId":"DineshMagesvaran"},"content":"                ioException.printStackTrace();"},{"lineNumber":72,"author":{"gitId":"DineshMagesvaran"},"content":"            }"},{"lineNumber":73,"author":{"gitId":"DineshMagesvaran"},"content":"        }"},{"lineNumber":74,"author":{"gitId":"DineshMagesvaran"},"content":"        return taskList;"},{"lineNumber":75,"author":{"gitId":"DineshMagesvaran"},"content":"    }"},{"lineNumber":76,"author":{"gitId":"DineshMagesvaran"},"content":""},{"lineNumber":77,"author":{"gitId":"DineshMagesvaran"},"content":"    /**"},{"lineNumber":78,"author":{"gitId":"DineshMagesvaran"},"content":"     * Method that writes data to the file located at the file path."},{"lineNumber":79,"author":{"gitId":"DineshMagesvaran"},"content":"     *"},{"lineNumber":80,"author":{"gitId":"DineshMagesvaran"},"content":"     * @param taskList the list of tasks to be stored in the file."},{"lineNumber":81,"author":{"gitId":"DineshMagesvaran"},"content":"     */"},{"lineNumber":82,"author":{"gitId":"DineshMagesvaran"},"content":"    public void writeDataIntoFile(TaskList taskList) {"},{"lineNumber":83,"author":{"gitId":"DineshMagesvaran"},"content":"        try {"},{"lineNumber":84,"author":{"gitId":"DineshMagesvaran"},"content":"            FileWriter writeFile \u003d new FileWriter(filePath);"},{"lineNumber":85,"author":{"gitId":"DineshMagesvaran"},"content":"            while (taskList.size() !\u003d 0) {"},{"lineNumber":86,"author":{"gitId":"DineshMagesvaran"},"content":"                Task task \u003d taskList.deleteTask(0);"},{"lineNumber":87,"author":{"gitId":"DineshMagesvaran"},"content":"                writeFile.write(task.getData());"},{"lineNumber":88,"author":{"gitId":"DineshMagesvaran"},"content":"                writeFile.write(\"\\n\");"},{"lineNumber":89,"author":{"gitId":"DineshMagesvaran"},"content":"            }"},{"lineNumber":90,"author":{"gitId":"DineshMagesvaran"},"content":"            writeFile.close();"},{"lineNumber":91,"author":{"gitId":"DineshMagesvaran"},"content":"        } catch (IOException e) {"},{"lineNumber":92,"author":{"gitId":"DineshMagesvaran"},"content":"            e.printStackTrace();"},{"lineNumber":93,"author":{"gitId":"DineshMagesvaran"},"content":"        }"},{"lineNumber":94,"author":{"gitId":"DineshMagesvaran"},"content":"    }"},{"lineNumber":95,"author":{"gitId":"DineshMagesvaran"},"content":"}"}],"authorContributionMap":{"DineshMagesvaran":95}},{"path":"src/main/java/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"DineshMagesvaran"},"content":"/**"},{"lineNumber":2,"author":{"gitId":"DineshMagesvaran"},"content":" * Abstract class that contains the template of a task"},{"lineNumber":3,"author":{"gitId":"DineshMagesvaran"},"content":" * object."},{"lineNumber":4,"author":{"gitId":"DineshMagesvaran"},"content":" */"},{"lineNumber":5,"author":{"gitId":"DineshMagesvaran"},"content":"public abstract class Task {"},{"lineNumber":6,"author":{"gitId":"DineshMagesvaran"},"content":"    protected Boolean isDone;"},{"lineNumber":7,"author":{"gitId":"DineshMagesvaran"},"content":"    protected String taskInfo;"},{"lineNumber":8,"author":{"gitId":"DineshMagesvaran"},"content":""},{"lineNumber":9,"author":{"gitId":"DineshMagesvaran"},"content":"    /**"},{"lineNumber":10,"author":{"gitId":"DineshMagesvaran"},"content":"     * Constructor that creates a task object."},{"lineNumber":11,"author":{"gitId":"DineshMagesvaran"},"content":"     * @param taskInfo the description of the task."},{"lineNumber":12,"author":{"gitId":"DineshMagesvaran"},"content":"     */"},{"lineNumber":13,"author":{"gitId":"DineshMagesvaran"},"content":"    public Task(String taskInfo) {"},{"lineNumber":14,"author":{"gitId":"DineshMagesvaran"},"content":"        isDone \u003d false;"},{"lineNumber":15,"author":{"gitId":"DineshMagesvaran"},"content":"        this.taskInfo \u003d taskInfo;"},{"lineNumber":16,"author":{"gitId":"DineshMagesvaran"},"content":"    }"},{"lineNumber":17,"author":{"gitId":"DineshMagesvaran"},"content":""},{"lineNumber":18,"author":{"gitId":"DineshMagesvaran"},"content":"    @Override"},{"lineNumber":19,"author":{"gitId":"DineshMagesvaran"},"content":"    public String toString() {"},{"lineNumber":20,"author":{"gitId":"DineshMagesvaran"},"content":"        String s \u003d \"\";"},{"lineNumber":21,"author":{"gitId":"DineshMagesvaran"},"content":"        if (isDone) {"},{"lineNumber":22,"author":{"gitId":"DineshMagesvaran"},"content":"            s \u003d \"[X] \";"},{"lineNumber":23,"author":{"gitId":"DineshMagesvaran"},"content":"        } else {"},{"lineNumber":24,"author":{"gitId":"DineshMagesvaran"},"content":"            s \u003d \"[ ] \";"},{"lineNumber":25,"author":{"gitId":"DineshMagesvaran"},"content":"        }"},{"lineNumber":26,"author":{"gitId":"DineshMagesvaran"},"content":"        return s + taskInfo;"},{"lineNumber":27,"author":{"gitId":"DineshMagesvaran"},"content":"    }"},{"lineNumber":28,"author":{"gitId":"DineshMagesvaran"},"content":""},{"lineNumber":29,"author":{"gitId":"DineshMagesvaran"},"content":"    /**"},{"lineNumber":30,"author":{"gitId":"DineshMagesvaran"},"content":"     * Method that marks the task as done."},{"lineNumber":31,"author":{"gitId":"DineshMagesvaran"},"content":"     */"},{"lineNumber":32,"author":{"gitId":"DineshMagesvaran"},"content":"    public void completeTask() {"},{"lineNumber":33,"author":{"gitId":"DineshMagesvaran"},"content":"        isDone \u003d true;"},{"lineNumber":34,"author":{"gitId":"DineshMagesvaran"},"content":"    }"},{"lineNumber":35,"author":{"gitId":"DineshMagesvaran"},"content":""},{"lineNumber":36,"author":{"gitId":"DineshMagesvaran"},"content":"    /**"},{"lineNumber":37,"author":{"gitId":"DineshMagesvaran"},"content":"     * Method that checks if the task description contains"},{"lineNumber":38,"author":{"gitId":"DineshMagesvaran"},"content":"     * the given subString."},{"lineNumber":39,"author":{"gitId":"DineshMagesvaran"},"content":"     *"},{"lineNumber":40,"author":{"gitId":"DineshMagesvaran"},"content":"     * @param subString the subString to search for inside the task"},{"lineNumber":41,"author":{"gitId":"DineshMagesvaran"},"content":"     *                  description."},{"lineNumber":42,"author":{"gitId":"DineshMagesvaran"},"content":"     * @return true if task description contains subString, false otherwise."},{"lineNumber":43,"author":{"gitId":"DineshMagesvaran"},"content":"     */"},{"lineNumber":44,"author":{"gitId":"DineshMagesvaran"},"content":"    public boolean contains(String subString) {"},{"lineNumber":45,"author":{"gitId":"DineshMagesvaran"},"content":"        return taskInfo.contains(subString);"},{"lineNumber":46,"author":{"gitId":"DineshMagesvaran"},"content":"    }"},{"lineNumber":47,"author":{"gitId":"DineshMagesvaran"},"content":""},{"lineNumber":48,"author":{"gitId":"DineshMagesvaran"},"content":"    /**"},{"lineNumber":49,"author":{"gitId":"DineshMagesvaran"},"content":"     * Abstract method that converts the task into a"},{"lineNumber":50,"author":{"gitId":"DineshMagesvaran"},"content":"     * specific format before storing in a file."},{"lineNumber":51,"author":{"gitId":"DineshMagesvaran"},"content":"     * @return a string of data obtained from the task."},{"lineNumber":52,"author":{"gitId":"DineshMagesvaran"},"content":"     */"},{"lineNumber":53,"author":{"gitId":"DineshMagesvaran"},"content":"\tpublic abstract String getData();"},{"lineNumber":54,"author":{"gitId":"DineshMagesvaran"},"content":"}"}],"authorContributionMap":{"DineshMagesvaran":54}},{"path":"src/main/java/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"DineshMagesvaran"},"content":"import java.util.ArrayList;"},{"lineNumber":2,"author":{"gitId":"DineshMagesvaran"},"content":""},{"lineNumber":3,"author":{"gitId":"DineshMagesvaran"},"content":"/**"},{"lineNumber":4,"author":{"gitId":"DineshMagesvaran"},"content":" * Class that can create a task list object to store"},{"lineNumber":5,"author":{"gitId":"DineshMagesvaran"},"content":" * task objects in a list."},{"lineNumber":6,"author":{"gitId":"DineshMagesvaran"},"content":" */"},{"lineNumber":7,"author":{"gitId":"DineshMagesvaran"},"content":"public class TaskList extends ArrayList\u003cTask\u003e {"},{"lineNumber":8,"author":{"gitId":"DineshMagesvaran"},"content":"    /**"},{"lineNumber":9,"author":{"gitId":"DineshMagesvaran"},"content":"     * Constructor that creates a task list."},{"lineNumber":10,"author":{"gitId":"DineshMagesvaran"},"content":"     */"},{"lineNumber":11,"author":{"gitId":"DineshMagesvaran"},"content":"    public TaskList() {"},{"lineNumber":12,"author":{"gitId":"DineshMagesvaran"},"content":"        super();"},{"lineNumber":13,"author":{"gitId":"DineshMagesvaran"},"content":"    }"},{"lineNumber":14,"author":{"gitId":"DineshMagesvaran"},"content":""},{"lineNumber":15,"author":{"gitId":"DineshMagesvaran"},"content":"    /**"},{"lineNumber":16,"author":{"gitId":"DineshMagesvaran"},"content":"     * Method that adds a new task to the task list."},{"lineNumber":17,"author":{"gitId":"DineshMagesvaran"},"content":"     *"},{"lineNumber":18,"author":{"gitId":"DineshMagesvaran"},"content":"     * @param task the new task to be added to the task list."},{"lineNumber":19,"author":{"gitId":"DineshMagesvaran"},"content":"     */"},{"lineNumber":20,"author":{"gitId":"DineshMagesvaran"},"content":"    public void addTask(Task task) {"},{"lineNumber":21,"author":{"gitId":"DineshMagesvaran"},"content":"        super.add(task);"},{"lineNumber":22,"author":{"gitId":"DineshMagesvaran"},"content":"    }"},{"lineNumber":23,"author":{"gitId":"DineshMagesvaran"},"content":""},{"lineNumber":24,"author":{"gitId":"DineshMagesvaran"},"content":"    /**"},{"lineNumber":25,"author":{"gitId":"DineshMagesvaran"},"content":"     * Method that deletes a task from the task list."},{"lineNumber":26,"author":{"gitId":"DineshMagesvaran"},"content":"     * @param index the index corresponding to the task to be"},{"lineNumber":27,"author":{"gitId":"DineshMagesvaran"},"content":"     *              deleted."},{"lineNumber":28,"author":{"gitId":"DineshMagesvaran"},"content":"     * @return the task that was deleted from the task list."},{"lineNumber":29,"author":{"gitId":"DineshMagesvaran"},"content":"     */"},{"lineNumber":30,"author":{"gitId":"DineshMagesvaran"},"content":"    public Task deleteTask(int index) {"},{"lineNumber":31,"author":{"gitId":"DineshMagesvaran"},"content":"        return super.remove(index);"},{"lineNumber":32,"author":{"gitId":"DineshMagesvaran"},"content":"    }"},{"lineNumber":33,"author":{"gitId":"DineshMagesvaran"},"content":"}"}],"authorContributionMap":{"DineshMagesvaran":33}},{"path":"src/main/java/ToDo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"DineshMagesvaran"},"content":"/**"},{"lineNumber":2,"author":{"gitId":"DineshMagesvaran"},"content":" * Class that can create a todo task object."},{"lineNumber":3,"author":{"gitId":"DineshMagesvaran"},"content":" */"},{"lineNumber":4,"author":{"gitId":"DineshMagesvaran"},"content":"public class ToDo extends Task {"},{"lineNumber":5,"author":{"gitId":"DineshMagesvaran"},"content":"    /**"},{"lineNumber":6,"author":{"gitId":"DineshMagesvaran"},"content":"     * Constructor that creates the todo task."},{"lineNumber":7,"author":{"gitId":"DineshMagesvaran"},"content":"     * @param taskInfo the description of the todo task."},{"lineNumber":8,"author":{"gitId":"DineshMagesvaran"},"content":"     */"},{"lineNumber":9,"author":{"gitId":"DineshMagesvaran"},"content":"    public ToDo(String taskInfo) {"},{"lineNumber":10,"author":{"gitId":"DineshMagesvaran"},"content":"        super(taskInfo);"},{"lineNumber":11,"author":{"gitId":"DineshMagesvaran"},"content":"    }"},{"lineNumber":12,"author":{"gitId":"DineshMagesvaran"},"content":""},{"lineNumber":13,"author":{"gitId":"DineshMagesvaran"},"content":"    @Override"},{"lineNumber":14,"author":{"gitId":"DineshMagesvaran"},"content":"    public String toString() {"},{"lineNumber":15,"author":{"gitId":"DineshMagesvaran"},"content":"        return \"[T]\" + super.toString();"},{"lineNumber":16,"author":{"gitId":"DineshMagesvaran"},"content":"    }"},{"lineNumber":17,"author":{"gitId":"DineshMagesvaran"},"content":""},{"lineNumber":18,"author":{"gitId":"DineshMagesvaran"},"content":"    public String getData() {"},{"lineNumber":19,"author":{"gitId":"DineshMagesvaran"},"content":"        if (isDone \u003d\u003d true) {"},{"lineNumber":20,"author":{"gitId":"DineshMagesvaran"},"content":"            return \"T!@#1!@#\" + taskInfo;"},{"lineNumber":21,"author":{"gitId":"DineshMagesvaran"},"content":"        } else {"},{"lineNumber":22,"author":{"gitId":"DineshMagesvaran"},"content":"            return \"T!@#0!@#\" + taskInfo;"},{"lineNumber":23,"author":{"gitId":"DineshMagesvaran"},"content":"        }"},{"lineNumber":24,"author":{"gitId":"DineshMagesvaran"},"content":"    }"},{"lineNumber":25,"author":{"gitId":"DineshMagesvaran"},"content":"}"}],"authorContributionMap":{"DineshMagesvaran":25}},{"path":"src/main/java/UI.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"DineshMagesvaran"},"content":"import javafx.application.Application;"},{"lineNumber":2,"author":{"gitId":"DineshMagesvaran"},"content":"import javafx.application.Platform;"},{"lineNumber":3,"author":{"gitId":"DineshMagesvaran"},"content":"import javafx.scene.Scene;"},{"lineNumber":4,"author":{"gitId":"DineshMagesvaran"},"content":"import javafx.scene.control.Label;"},{"lineNumber":5,"author":{"gitId":"DineshMagesvaran"},"content":"import javafx.scene.layout.Region;"},{"lineNumber":6,"author":{"gitId":"DineshMagesvaran"},"content":"import javafx.stage.Stage;"},{"lineNumber":7,"author":{"gitId":"DineshMagesvaran"},"content":"import javafx.scene.control.Button;"},{"lineNumber":8,"author":{"gitId":"DineshMagesvaran"},"content":"import javafx.scene.control.ScrollPane;"},{"lineNumber":9,"author":{"gitId":"DineshMagesvaran"},"content":"import javafx.scene.control.TextField;"},{"lineNumber":10,"author":{"gitId":"DineshMagesvaran"},"content":"import javafx.scene.layout.AnchorPane;"},{"lineNumber":11,"author":{"gitId":"DineshMagesvaran"},"content":"import javafx.scene.layout.VBox;"},{"lineNumber":12,"author":{"gitId":"DineshMagesvaran"},"content":"import javafx.scene.image.Image;"},{"lineNumber":13,"author":{"gitId":"DineshMagesvaran"},"content":"import javafx.scene.image.ImageView;"},{"lineNumber":14,"author":{"gitId":"DineshMagesvaran"},"content":""},{"lineNumber":15,"author":{"gitId":"DineshMagesvaran"},"content":""},{"lineNumber":16,"author":{"gitId":"DineshMagesvaran"},"content":"/**"},{"lineNumber":17,"author":{"gitId":"DineshMagesvaran"},"content":" * Class that can create a user interface object that"},{"lineNumber":18,"author":{"gitId":"DineshMagesvaran"},"content":" * can deal with interactions between the user and the"},{"lineNumber":19,"author":{"gitId":"DineshMagesvaran"},"content":" * application using a GUI."},{"lineNumber":20,"author":{"gitId":"DineshMagesvaran"},"content":" */"},{"lineNumber":21,"author":{"gitId":"DineshMagesvaran"},"content":"public class UI extends Application {"},{"lineNumber":22,"author":{"gitId":"DineshMagesvaran"},"content":"    private Storage storage;"},{"lineNumber":23,"author":{"gitId":"DineshMagesvaran"},"content":"    private TaskList taskList;"},{"lineNumber":24,"author":{"gitId":"DineshMagesvaran"},"content":"    private Parser parser;"},{"lineNumber":25,"author":{"gitId":"DineshMagesvaran"},"content":"    private ScrollPane scrollPane;"},{"lineNumber":26,"author":{"gitId":"DineshMagesvaran"},"content":"    private VBox dialogContainer;"},{"lineNumber":27,"author":{"gitId":"DineshMagesvaran"},"content":"    private TextField userInput;"},{"lineNumber":28,"author":{"gitId":"DineshMagesvaran"},"content":"    private Button sendButton;"},{"lineNumber":29,"author":{"gitId":"DineshMagesvaran"},"content":"    private Scene scene;"},{"lineNumber":30,"author":{"gitId":"DineshMagesvaran"},"content":"    private Image user \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaUser.png\"));"},{"lineNumber":31,"author":{"gitId":"DineshMagesvaran"},"content":"    private Image duke \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaDuke.png\"));"},{"lineNumber":32,"author":{"gitId":"DineshMagesvaran"},"content":"    private boolean isLastCommand;"},{"lineNumber":33,"author":{"gitId":"DineshMagesvaran"},"content":""},{"lineNumber":34,"author":{"gitId":"DineshMagesvaran"},"content":"    /**"},{"lineNumber":35,"author":{"gitId":"DineshMagesvaran"},"content":"     * Constructor that creates a UI object."},{"lineNumber":36,"author":{"gitId":"DineshMagesvaran"},"content":"     */"},{"lineNumber":37,"author":{"gitId":"DineshMagesvaran"},"content":"    public UI() {"},{"lineNumber":38,"author":{"gitId":"DineshMagesvaran"},"content":"        parser \u003d new Parser();"},{"lineNumber":39,"author":{"gitId":"DineshMagesvaran"},"content":"        storage \u003d new Storage(\"data/duke.txt\");"},{"lineNumber":40,"author":{"gitId":"DineshMagesvaran"},"content":"        taskList \u003d storage.readDataFromFile();"},{"lineNumber":41,"author":{"gitId":"DineshMagesvaran"},"content":"        isLastCommand \u003d false;"},{"lineNumber":42,"author":{"gitId":"DineshMagesvaran"},"content":"    }"},{"lineNumber":43,"author":{"gitId":"DineshMagesvaran"},"content":""},{"lineNumber":44,"author":{"gitId":"DineshMagesvaran"},"content":"    @Override"},{"lineNumber":45,"author":{"gitId":"DineshMagesvaran"},"content":"    public void start(Stage stage) {"},{"lineNumber":46,"author":{"gitId":"DineshMagesvaran"},"content":"        scrollPane \u003d new ScrollPane();"},{"lineNumber":47,"author":{"gitId":"DineshMagesvaran"},"content":"        dialogContainer \u003d new VBox();"},{"lineNumber":48,"author":{"gitId":"DineshMagesvaran"},"content":"        scrollPane.setContent(dialogContainer);"},{"lineNumber":49,"author":{"gitId":"DineshMagesvaran"},"content":""},{"lineNumber":50,"author":{"gitId":"DineshMagesvaran"},"content":"        userInput \u003d new TextField();"},{"lineNumber":51,"author":{"gitId":"DineshMagesvaran"},"content":"        sendButton \u003d new Button(\"Send\");"},{"lineNumber":52,"author":{"gitId":"DineshMagesvaran"},"content":""},{"lineNumber":53,"author":{"gitId":"DineshMagesvaran"},"content":"        AnchorPane mainLayout \u003d new AnchorPane();"},{"lineNumber":54,"author":{"gitId":"DineshMagesvaran"},"content":"        mainLayout.getChildren().addAll(scrollPane, userInput, sendButton);"},{"lineNumber":55,"author":{"gitId":"DineshMagesvaran"},"content":""},{"lineNumber":56,"author":{"gitId":"DineshMagesvaran"},"content":"        scene \u003d new Scene(mainLayout);"},{"lineNumber":57,"author":{"gitId":"DineshMagesvaran"},"content":""},{"lineNumber":58,"author":{"gitId":"DineshMagesvaran"},"content":"        stage.setScene(scene);"},{"lineNumber":59,"author":{"gitId":"DineshMagesvaran"},"content":"        stage.show();"},{"lineNumber":60,"author":{"gitId":"DineshMagesvaran"},"content":""},{"lineNumber":61,"author":{"gitId":"DineshMagesvaran"},"content":"        stage.setTitle(\"Duke\");"},{"lineNumber":62,"author":{"gitId":"DineshMagesvaran"},"content":"        stage.setResizable(false);"},{"lineNumber":63,"author":{"gitId":"DineshMagesvaran"},"content":"        stage.setMinHeight(600.0);"},{"lineNumber":64,"author":{"gitId":"DineshMagesvaran"},"content":"        stage.setMinWidth(400.0);"},{"lineNumber":65,"author":{"gitId":"DineshMagesvaran"},"content":""},{"lineNumber":66,"author":{"gitId":"DineshMagesvaran"},"content":"        mainLayout.setPrefSize(400.0, 600.0);"},{"lineNumber":67,"author":{"gitId":"DineshMagesvaran"},"content":""},{"lineNumber":68,"author":{"gitId":"DineshMagesvaran"},"content":"        scrollPane.setPrefSize(385, 535);"},{"lineNumber":69,"author":{"gitId":"DineshMagesvaran"},"content":"        scrollPane.setHbarPolicy(ScrollPane.ScrollBarPolicy.NEVER);"},{"lineNumber":70,"author":{"gitId":"DineshMagesvaran"},"content":"        scrollPane.setVbarPolicy(ScrollPane.ScrollBarPolicy.ALWAYS);"},{"lineNumber":71,"author":{"gitId":"DineshMagesvaran"},"content":""},{"lineNumber":72,"author":{"gitId":"DineshMagesvaran"},"content":"        scrollPane.setVvalue(1.0);"},{"lineNumber":73,"author":{"gitId":"DineshMagesvaran"},"content":"        scrollPane.setFitToWidth(true);"},{"lineNumber":74,"author":{"gitId":"DineshMagesvaran"},"content":""},{"lineNumber":75,"author":{"gitId":"DineshMagesvaran"},"content":"        dialogContainer.setPrefHeight(Region.USE_COMPUTED_SIZE);"},{"lineNumber":76,"author":{"gitId":"DineshMagesvaran"},"content":""},{"lineNumber":77,"author":{"gitId":"DineshMagesvaran"},"content":"        userInput.setPrefWidth(325.0);"},{"lineNumber":78,"author":{"gitId":"DineshMagesvaran"},"content":""},{"lineNumber":79,"author":{"gitId":"DineshMagesvaran"},"content":"        sendButton.setPrefWidth(55.0);"},{"lineNumber":80,"author":{"gitId":"DineshMagesvaran"},"content":""},{"lineNumber":81,"author":{"gitId":"DineshMagesvaran"},"content":"        AnchorPane.setTopAnchor(scrollPane, 1.0);"},{"lineNumber":82,"author":{"gitId":"DineshMagesvaran"},"content":""},{"lineNumber":83,"author":{"gitId":"DineshMagesvaran"},"content":"        AnchorPane.setBottomAnchor(sendButton, 1.0);"},{"lineNumber":84,"author":{"gitId":"DineshMagesvaran"},"content":"        AnchorPane.setRightAnchor(sendButton, 1.0);"},{"lineNumber":85,"author":{"gitId":"DineshMagesvaran"},"content":""},{"lineNumber":86,"author":{"gitId":"DineshMagesvaran"},"content":"        AnchorPane.setLeftAnchor(userInput , 1.0);"},{"lineNumber":87,"author":{"gitId":"DineshMagesvaran"},"content":"        AnchorPane.setBottomAnchor(userInput, 1.0);"},{"lineNumber":88,"author":{"gitId":"DineshMagesvaran"},"content":""},{"lineNumber":89,"author":{"gitId":"DineshMagesvaran"},"content":"        sendButton.setOnMouseClicked((event) -\u003e {"},{"lineNumber":90,"author":{"gitId":"DineshMagesvaran"},"content":"            handleUserInput();"},{"lineNumber":91,"author":{"gitId":"DineshMagesvaran"},"content":"        });"},{"lineNumber":92,"author":{"gitId":"DineshMagesvaran"},"content":""},{"lineNumber":93,"author":{"gitId":"DineshMagesvaran"},"content":"        userInput.setOnAction((event) -\u003e {"},{"lineNumber":94,"author":{"gitId":"DineshMagesvaran"},"content":"            handleUserInput();"},{"lineNumber":95,"author":{"gitId":"DineshMagesvaran"},"content":"        });"},{"lineNumber":96,"author":{"gitId":"DineshMagesvaran"},"content":""},{"lineNumber":97,"author":{"gitId":"DineshMagesvaran"},"content":"        dialogContainer.heightProperty().addListener((observable) -\u003e scrollPane.setVvalue(1.0));"},{"lineNumber":98,"author":{"gitId":"DineshMagesvaran"},"content":""},{"lineNumber":99,"author":{"gitId":"DineshMagesvaran"},"content":"        String greetingMessage \u003d \"\\t Hello! I\u0027m Duke\\n\\t What can I do for you\\n\";"},{"lineNumber":100,"author":{"gitId":"DineshMagesvaran"},"content":"        dialogContainer.getChildren().add(DialogBox.getDukeDialog(new Label(greetingMessage), new ImageView(duke)));"},{"lineNumber":101,"author":{"gitId":"DineshMagesvaran"},"content":"    }"},{"lineNumber":102,"author":{"gitId":"DineshMagesvaran"},"content":""},{"lineNumber":103,"author":{"gitId":"DineshMagesvaran"},"content":"    /**"},{"lineNumber":104,"author":{"gitId":"DineshMagesvaran"},"content":"     * Creates two dialog boxes, one echoing user input and the other containing Duke\u0027s reply and then appends them to"},{"lineNumber":105,"author":{"gitId":"DineshMagesvaran"},"content":"     * the dialog container. Clears the user input after processing."},{"lineNumber":106,"author":{"gitId":"DineshMagesvaran"},"content":"     */"},{"lineNumber":107,"author":{"gitId":"DineshMagesvaran"},"content":"    private void handleUserInput() {"},{"lineNumber":108,"author":{"gitId":"DineshMagesvaran"},"content":"        Label userText \u003d new Label(userInput.getText());"},{"lineNumber":109,"author":{"gitId":"DineshMagesvaran"},"content":"        Label dukeText \u003d new Label(getResponse(userInput.getText()));"},{"lineNumber":110,"author":{"gitId":"DineshMagesvaran"},"content":"        dialogContainer.getChildren().addAll("},{"lineNumber":111,"author":{"gitId":"DineshMagesvaran"},"content":"                DialogBox.getUserDialog(userText, new ImageView(user)),"},{"lineNumber":112,"author":{"gitId":"DineshMagesvaran"},"content":"                DialogBox.getDukeDialog(dukeText, new ImageView(duke))"},{"lineNumber":113,"author":{"gitId":"DineshMagesvaran"},"content":"        );"},{"lineNumber":114,"author":{"gitId":"DineshMagesvaran"},"content":"        userInput.clear();"},{"lineNumber":115,"author":{"gitId":"DineshMagesvaran"},"content":""},{"lineNumber":116,"author":{"gitId":"DineshMagesvaran"},"content":"        if (isLastCommand) {"},{"lineNumber":117,"author":{"gitId":"DineshMagesvaran"},"content":"            storage.writeDataIntoFile(taskList);"},{"lineNumber":118,"author":{"gitId":"DineshMagesvaran"},"content":"            Platform.exit();"},{"lineNumber":119,"author":{"gitId":"DineshMagesvaran"},"content":"        }"},{"lineNumber":120,"author":{"gitId":"DineshMagesvaran"},"content":"    }"},{"lineNumber":121,"author":{"gitId":"DineshMagesvaran"},"content":""},{"lineNumber":122,"author":{"gitId":"DineshMagesvaran"},"content":"    /**"},{"lineNumber":123,"author":{"gitId":"DineshMagesvaran"},"content":"     * Obtains a response based on the given user input."},{"lineNumber":124,"author":{"gitId":"DineshMagesvaran"},"content":"     *"},{"lineNumber":125,"author":{"gitId":"DineshMagesvaran"},"content":"     * @param input the input string given by the user."},{"lineNumber":126,"author":{"gitId":"DineshMagesvaran"},"content":"     * @return the output string based on the given input."},{"lineNumber":127,"author":{"gitId":"DineshMagesvaran"},"content":"     */"},{"lineNumber":128,"author":{"gitId":"DineshMagesvaran"},"content":"    private String getResponse(String input) {"},{"lineNumber":129,"author":{"gitId":"DineshMagesvaran"},"content":"        if (input.equals(\"bye\")) {"},{"lineNumber":130,"author":{"gitId":"DineshMagesvaran"},"content":"            isLastCommand \u003d true;"},{"lineNumber":131,"author":{"gitId":"DineshMagesvaran"},"content":"            return \"\\t Bye. Hope to see you again soon!\";"},{"lineNumber":132,"author":{"gitId":"DineshMagesvaran"},"content":"        } else {"},{"lineNumber":133,"author":{"gitId":"DineshMagesvaran"},"content":"            return parser.executeCommand(taskList, input);"},{"lineNumber":134,"author":{"gitId":"DineshMagesvaran"},"content":"        }"},{"lineNumber":135,"author":{"gitId":"DineshMagesvaran"},"content":"    }"},{"lineNumber":136,"author":{"gitId":"DineshMagesvaran"},"content":"}"}],"authorContributionMap":{"DineshMagesvaran":136}},{"path":"src/test/java/DeadlineTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"DineshMagesvaran"},"content":"import org.junit.jupiter.api.Test;"},{"lineNumber":2,"author":{"gitId":"DineshMagesvaran"},"content":"import java.time.LocalDate;"},{"lineNumber":3,"author":{"gitId":"DineshMagesvaran"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;"},{"lineNumber":4,"author":{"gitId":"DineshMagesvaran"},"content":""},{"lineNumber":5,"author":{"gitId":"DineshMagesvaran"},"content":"public class DeadlineTest {"},{"lineNumber":6,"author":{"gitId":"DineshMagesvaran"},"content":"    @Test"},{"lineNumber":7,"author":{"gitId":"DineshMagesvaran"},"content":"    public void toStringTest() {"},{"lineNumber":8,"author":{"gitId":"DineshMagesvaran"},"content":"        assertEquals(\"[D][ ] example deadline task (05 Jan 2021)\","},{"lineNumber":9,"author":{"gitId":"DineshMagesvaran"},"content":"                new Deadline(\"example deadline task\", LocalDate.parse(\"2021-01-05\")).toString());"},{"lineNumber":10,"author":{"gitId":"DineshMagesvaran"},"content":"    }"},{"lineNumber":11,"author":{"gitId":"DineshMagesvaran"},"content":""},{"lineNumber":12,"author":{"gitId":"DineshMagesvaran"},"content":"    @Test"},{"lineNumber":13,"author":{"gitId":"DineshMagesvaran"},"content":"    public void getDataTest() {"},{"lineNumber":14,"author":{"gitId":"DineshMagesvaran"},"content":"        assertEquals(\"D!@#0!@#example deadline task!@#2021-01-05\","},{"lineNumber":15,"author":{"gitId":"DineshMagesvaran"},"content":"                new Deadline(\"example deadline task\", LocalDate.parse(\"2021-01-05\")).getData());"},{"lineNumber":16,"author":{"gitId":"DineshMagesvaran"},"content":"    }"},{"lineNumber":17,"author":{"gitId":"DineshMagesvaran"},"content":"}"}],"authorContributionMap":{"DineshMagesvaran":17}},{"path":"src/test/java/EventTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"DineshMagesvaran"},"content":"import org.junit.jupiter.api.Test;"},{"lineNumber":2,"author":{"gitId":"DineshMagesvaran"},"content":""},{"lineNumber":3,"author":{"gitId":"DineshMagesvaran"},"content":"import java.time.LocalDate;"},{"lineNumber":4,"author":{"gitId":"DineshMagesvaran"},"content":""},{"lineNumber":5,"author":{"gitId":"DineshMagesvaran"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;"},{"lineNumber":6,"author":{"gitId":"DineshMagesvaran"},"content":""},{"lineNumber":7,"author":{"gitId":"DineshMagesvaran"},"content":"public class EventTest {"},{"lineNumber":8,"author":{"gitId":"DineshMagesvaran"},"content":"    @Test"},{"lineNumber":9,"author":{"gitId":"DineshMagesvaran"},"content":"    public void toStringTest() {"},{"lineNumber":10,"author":{"gitId":"DineshMagesvaran"},"content":"        assertEquals(\"[E][ ] example event task (05 Jan 2021 to 06 Jan 2021)\","},{"lineNumber":11,"author":{"gitId":"DineshMagesvaran"},"content":"                new Event(\"example event task\", LocalDate.parse(\"2021-01-05\"),"},{"lineNumber":12,"author":{"gitId":"DineshMagesvaran"},"content":"                        LocalDate.parse(\"2021-01-06\")).toString());"},{"lineNumber":13,"author":{"gitId":"DineshMagesvaran"},"content":"    }"},{"lineNumber":14,"author":{"gitId":"DineshMagesvaran"},"content":""},{"lineNumber":15,"author":{"gitId":"DineshMagesvaran"},"content":"    @Test"},{"lineNumber":16,"author":{"gitId":"DineshMagesvaran"},"content":"    public void getDataTest() {"},{"lineNumber":17,"author":{"gitId":"DineshMagesvaran"},"content":"        assertEquals(\"E!@#0!@#example event task!@#2021-01-05!@#2021-01-06\","},{"lineNumber":18,"author":{"gitId":"DineshMagesvaran"},"content":"                new Event(\"example event task\", LocalDate.parse(\"2021-01-05\"),"},{"lineNumber":19,"author":{"gitId":"DineshMagesvaran"},"content":"                        LocalDate.parse(\"2021-01-06\")).getData());"},{"lineNumber":20,"author":{"gitId":"DineshMagesvaran"},"content":"    }"},{"lineNumber":21,"author":{"gitId":"DineshMagesvaran"},"content":"}"}],"authorContributionMap":{"DineshMagesvaran":21}},{"path":"src/test/java/TodoTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"DineshMagesvaran"},"content":"import org.junit.jupiter.api.Test;"},{"lineNumber":2,"author":{"gitId":"DineshMagesvaran"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;"},{"lineNumber":3,"author":{"gitId":"DineshMagesvaran"},"content":""},{"lineNumber":4,"author":{"gitId":"DineshMagesvaran"},"content":"public class TodoTest {"},{"lineNumber":5,"author":{"gitId":"DineshMagesvaran"},"content":"    @Test"},{"lineNumber":6,"author":{"gitId":"DineshMagesvaran"},"content":"    public void toStringTest() {"},{"lineNumber":7,"author":{"gitId":"DineshMagesvaran"},"content":"        assertEquals(\"[T][ ] example todo task\", new ToDo(\"example todo task\").toString());"},{"lineNumber":8,"author":{"gitId":"DineshMagesvaran"},"content":"    }"},{"lineNumber":9,"author":{"gitId":"DineshMagesvaran"},"content":""},{"lineNumber":10,"author":{"gitId":"DineshMagesvaran"},"content":"    @Test"},{"lineNumber":11,"author":{"gitId":"DineshMagesvaran"},"content":"    public void getDataTest() {"},{"lineNumber":12,"author":{"gitId":"DineshMagesvaran"},"content":"        assertEquals(\"T!@#0!@#example todo task\",new ToDo(\"example todo task\").getData());"},{"lineNumber":13,"author":{"gitId":"DineshMagesvaran"},"content":"    }"},{"lineNumber":14,"author":{"gitId":"DineshMagesvaran"},"content":"}"}],"authorContributionMap":{"DineshMagesvaran":14}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"DineshMagesvaran"},"content":"todo clean my room"},{"lineNumber":2,"author":{"gitId":"DineshMagesvaran"},"content":"deadline submit project /tonight 2359"},{"lineNumber":3,"author":{"gitId":"DineshMagesvaran"},"content":"list"},{"lineNumber":4,"author":{"gitId":"DineshMagesvaran"},"content":"done 1"},{"lineNumber":5,"author":{"gitId":"DineshMagesvaran"},"content":"event attend meeting /Fri 2pm-3pm"},{"lineNumber":6,"author":{"gitId":"DineshMagesvaran"},"content":"list"},{"lineNumber":7,"author":{"gitId":"DineshMagesvaran"},"content":"bye"}],"authorContributionMap":{"DineshMagesvaran":7}}]
