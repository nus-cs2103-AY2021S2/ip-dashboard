[{"path":"docs/README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"# User Guide"},{"lineNumber":2,"author":{"gitId":"-"},"content":""},{"lineNumber":3,"author":{"gitId":"-"},"content":"## Features "},{"lineNumber":4,"author":{"gitId":"-"},"content":""},{"lineNumber":5,"author":{"gitId":"DineshMagesvaran"},"content":"### Feature 1 - Add task to list"},{"lineNumber":6,"author":{"gitId":"DineshMagesvaran"},"content":"Enables the user to add tasks(ToDos, Deadlines, Events) into the list"},{"lineNumber":7,"author":{"gitId":"-"},"content":""},{"lineNumber":8,"author":{"gitId":"-"},"content":"## Usage"},{"lineNumber":9,"author":{"gitId":"-"},"content":""},{"lineNumber":10,"author":{"gitId":"DineshMagesvaran"},"content":"### `todo/deadline/event` - Use one of the three keywords"},{"lineNumber":11,"author":{"gitId":"-"},"content":""},{"lineNumber":12,"author":{"gitId":"DineshMagesvaran"},"content":"The appropriate task will be added to the list."},{"lineNumber":13,"author":{"gitId":"-"},"content":""},{"lineNumber":14,"author":{"gitId":"-"},"content":"Example of usage: "},{"lineNumber":15,"author":{"gitId":"-"},"content":""},{"lineNumber":16,"author":{"gitId":"DineshMagesvaran"},"content":"`todo buy bread`"},{"lineNumber":17,"author":{"gitId":"-"},"content":""},{"lineNumber":18,"author":{"gitId":"-"},"content":"Expected outcome:"},{"lineNumber":19,"author":{"gitId":"-"},"content":""},{"lineNumber":20,"author":{"gitId":"DineshMagesvaran"},"content":"`Got it. I\u0027ve added this task: "},{"lineNumber":21,"author":{"gitId":"DineshMagesvaran"},"content":"       [T][ ] buy bread"},{"lineNumber":22,"author":{"gitId":"DineshMagesvaran"},"content":"     Now you have 5 tasks in the list.`"},{"lineNumber":23,"author":{"gitId":"DineshMagesvaran"},"content":""},{"lineNumber":24,"author":{"gitId":"DineshMagesvaran"},"content":"Example of usage: "},{"lineNumber":25,"author":{"gitId":"DineshMagesvaran"},"content":""},{"lineNumber":26,"author":{"gitId":"DineshMagesvaran"},"content":"`deadline complete assignment /by 2021-01-05`"},{"lineNumber":27,"author":{"gitId":"DineshMagesvaran"},"content":""},{"lineNumber":28,"author":{"gitId":"DineshMagesvaran"},"content":"Expected outcome:"},{"lineNumber":29,"author":{"gitId":"DineshMagesvaran"},"content":""},{"lineNumber":30,"author":{"gitId":"DineshMagesvaran"},"content":"`Got it. I\u0027ve added this task: "},{"lineNumber":31,"author":{"gitId":"DineshMagesvaran"},"content":"       [D][ ] complete assignment (05 Jan 2021)"},{"lineNumber":32,"author":{"gitId":"DineshMagesvaran"},"content":"     Now you have 6 tasks in the list.`"},{"lineNumber":33,"author":{"gitId":"DineshMagesvaran"},"content":"\t "},{"lineNumber":34,"author":{"gitId":"DineshMagesvaran"},"content":"Example of usage: "},{"lineNumber":35,"author":{"gitId":"DineshMagesvaran"},"content":""},{"lineNumber":36,"author":{"gitId":"DineshMagesvaran"},"content":"`event attend meeting /from 2021-01-05 to 2021-01-06`"},{"lineNumber":37,"author":{"gitId":"DineshMagesvaran"},"content":""},{"lineNumber":38,"author":{"gitId":"DineshMagesvaran"},"content":"Expected outcome:"},{"lineNumber":39,"author":{"gitId":"DineshMagesvaran"},"content":""},{"lineNumber":40,"author":{"gitId":"DineshMagesvaran"},"content":"`Got it. I\u0027ve added this task: "},{"lineNumber":41,"author":{"gitId":"DineshMagesvaran"},"content":"       [E][ ] attend meeting (05 Jan 2021 to 06 Jan 2021)"},{"lineNumber":42,"author":{"gitId":"DineshMagesvaran"},"content":"     Now you have 7 tasks in the list.`"},{"lineNumber":43,"author":{"gitId":"DineshMagesvaran"},"content":""},{"lineNumber":44,"author":{"gitId":"DineshMagesvaran"},"content":"### Feature 2 - View list"},{"lineNumber":45,"author":{"gitId":"DineshMagesvaran"},"content":"Enables the user to view all the tasks in the list"},{"lineNumber":46,"author":{"gitId":"DineshMagesvaran"},"content":""},{"lineNumber":47,"author":{"gitId":"DineshMagesvaran"},"content":"## Usage"},{"lineNumber":48,"author":{"gitId":"DineshMagesvaran"},"content":""},{"lineNumber":49,"author":{"gitId":"DineshMagesvaran"},"content":"### `list` - Use the list keyword"},{"lineNumber":50,"author":{"gitId":"DineshMagesvaran"},"content":""},{"lineNumber":51,"author":{"gitId":"DineshMagesvaran"},"content":"The list will be displayed with all the current tasks."},{"lineNumber":52,"author":{"gitId":"DineshMagesvaran"},"content":""},{"lineNumber":53,"author":{"gitId":"DineshMagesvaran"},"content":"Example of usage: "},{"lineNumber":54,"author":{"gitId":"DineshMagesvaran"},"content":""},{"lineNumber":55,"author":{"gitId":"DineshMagesvaran"},"content":"`list`"},{"lineNumber":56,"author":{"gitId":"DineshMagesvaran"},"content":""},{"lineNumber":57,"author":{"gitId":"DineshMagesvaran"},"content":"Expected outcome:"},{"lineNumber":58,"author":{"gitId":"DineshMagesvaran"},"content":""},{"lineNumber":59,"author":{"gitId":"DineshMagesvaran"},"content":"`Here are the tasks in your list:"},{"lineNumber":60,"author":{"gitId":"DineshMagesvaran"},"content":"     1.[T][X] read book`"},{"lineNumber":61,"author":{"gitId":"DineshMagesvaran"},"content":""},{"lineNumber":62,"author":{"gitId":"DineshMagesvaran"},"content":"### Feature 3 - Mark Task as Done"},{"lineNumber":63,"author":{"gitId":"DineshMagesvaran"},"content":"Enables the user to mark a task as done"},{"lineNumber":64,"author":{"gitId":"DineshMagesvaran"},"content":""},{"lineNumber":65,"author":{"gitId":"DineshMagesvaran"},"content":"## Usage"},{"lineNumber":66,"author":{"gitId":"DineshMagesvaran"},"content":""},{"lineNumber":67,"author":{"gitId":"DineshMagesvaran"},"content":"### `done` - Use the done keyword"},{"lineNumber":68,"author":{"gitId":"DineshMagesvaran"},"content":""},{"lineNumber":69,"author":{"gitId":"DineshMagesvaran"},"content":"The specified task on the list will be marked as done."},{"lineNumber":70,"author":{"gitId":"DineshMagesvaran"},"content":""},{"lineNumber":71,"author":{"gitId":"DineshMagesvaran"},"content":"Example of usage: "},{"lineNumber":72,"author":{"gitId":"DineshMagesvaran"},"content":""},{"lineNumber":73,"author":{"gitId":"DineshMagesvaran"},"content":"`done 2`"},{"lineNumber":74,"author":{"gitId":"DineshMagesvaran"},"content":""},{"lineNumber":75,"author":{"gitId":"DineshMagesvaran"},"content":"Expected outcome:"},{"lineNumber":76,"author":{"gitId":"DineshMagesvaran"},"content":""},{"lineNumber":77,"author":{"gitId":"DineshMagesvaran"},"content":"`Nice! I\u0027ve marked this task as done: "},{"lineNumber":78,"author":{"gitId":"DineshMagesvaran"},"content":"       [T][X] Second Task`"},{"lineNumber":79,"author":{"gitId":"DineshMagesvaran"},"content":"\t   "},{"lineNumber":80,"author":{"gitId":"DineshMagesvaran"},"content":"### Feature 4 - Delete Task from list"},{"lineNumber":81,"author":{"gitId":"DineshMagesvaran"},"content":"Enables the user to remove a task from the task list"},{"lineNumber":82,"author":{"gitId":"DineshMagesvaran"},"content":""},{"lineNumber":83,"author":{"gitId":"DineshMagesvaran"},"content":"## Usage"},{"lineNumber":84,"author":{"gitId":"DineshMagesvaran"},"content":""},{"lineNumber":85,"author":{"gitId":"DineshMagesvaran"},"content":"### `delete` - Use the delete keyword"},{"lineNumber":86,"author":{"gitId":"DineshMagesvaran"},"content":""},{"lineNumber":87,"author":{"gitId":"DineshMagesvaran"},"content":"The specified task on the list will be deleted."},{"lineNumber":88,"author":{"gitId":"DineshMagesvaran"},"content":""},{"lineNumber":89,"author":{"gitId":"DineshMagesvaran"},"content":"Example of usage: "},{"lineNumber":90,"author":{"gitId":"DineshMagesvaran"},"content":""},{"lineNumber":91,"author":{"gitId":"DineshMagesvaran"},"content":"`delete 2`"},{"lineNumber":92,"author":{"gitId":"DineshMagesvaran"},"content":""},{"lineNumber":93,"author":{"gitId":"DineshMagesvaran"},"content":"Expected outcome:"},{"lineNumber":94,"author":{"gitId":"DineshMagesvaran"},"content":""},{"lineNumber":95,"author":{"gitId":"DineshMagesvaran"},"content":"`Noted. I\u0027ve removed this task: "},{"lineNumber":96,"author":{"gitId":"DineshMagesvaran"},"content":"       [T][X] Second Task"},{"lineNumber":97,"author":{"gitId":"DineshMagesvaran"},"content":"     Now you have 4 tasks in the list.`"},{"lineNumber":98,"author":{"gitId":"DineshMagesvaran"},"content":"\t "},{"lineNumber":99,"author":{"gitId":"DineshMagesvaran"},"content":"### Feature 5 - Find Task from list"},{"lineNumber":100,"author":{"gitId":"DineshMagesvaran"},"content":"Enables the user to find for tasks from the task list"},{"lineNumber":101,"author":{"gitId":"DineshMagesvaran"},"content":""},{"lineNumber":102,"author":{"gitId":"DineshMagesvaran"},"content":"## Usage"},{"lineNumber":103,"author":{"gitId":"DineshMagesvaran"},"content":""},{"lineNumber":104,"author":{"gitId":"DineshMagesvaran"},"content":"### `find` - Use the find keyword"},{"lineNumber":105,"author":{"gitId":"DineshMagesvaran"},"content":""},{"lineNumber":106,"author":{"gitId":"DineshMagesvaran"},"content":"The tasks matching the word(s) to find for will be displayed."},{"lineNumber":107,"author":{"gitId":"DineshMagesvaran"},"content":""},{"lineNumber":108,"author":{"gitId":"DineshMagesvaran"},"content":"Example of usage: "},{"lineNumber":109,"author":{"gitId":"DineshMagesvaran"},"content":""},{"lineNumber":110,"author":{"gitId":"DineshMagesvaran"},"content":"`find meeting`"},{"lineNumber":111,"author":{"gitId":"DineshMagesvaran"},"content":""},{"lineNumber":112,"author":{"gitId":"DineshMagesvaran"},"content":"Expected outcome:"},{"lineNumber":113,"author":{"gitId":"DineshMagesvaran"},"content":""},{"lineNumber":114,"author":{"gitId":"DineshMagesvaran"},"content":"`Here are the matching tasks in your list:"},{"lineNumber":115,"author":{"gitId":"DineshMagesvaran"},"content":"\t 2. [D][X] prepare for meeting (05 Jan 2021)"},{"lineNumber":116,"author":{"gitId":"DineshMagesvaran"},"content":"\t 5. [E][ ] attend meeting (05 Jan 2021 to 08 Jan 2021)`"}],"authorContributionMap":{"DineshMagesvaran":102,"-":14}},{"path":"src/main/java/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"DineshMagesvaran"},"content":"import java.time.LocalDate;"},{"lineNumber":2,"author":{"gitId":"DineshMagesvaran"},"content":"import java.time.format.DateTimeFormatter;"},{"lineNumber":3,"author":{"gitId":"DineshMagesvaran"},"content":""},{"lineNumber":4,"author":{"gitId":"DineshMagesvaran"},"content":"/**"},{"lineNumber":5,"author":{"gitId":"DineshMagesvaran"},"content":" * Class that can create a deadline task object."},{"lineNumber":6,"author":{"gitId":"DineshMagesvaran"},"content":" */"},{"lineNumber":7,"author":{"gitId":"DineshMagesvaran"},"content":"public class Deadline extends Task {"},{"lineNumber":8,"author":{"gitId":"DineshMagesvaran"},"content":"    private LocalDate dateInfo;"},{"lineNumber":9,"author":{"gitId":"DineshMagesvaran"},"content":""},{"lineNumber":10,"author":{"gitId":"DineshMagesvaran"},"content":"    /**"},{"lineNumber":11,"author":{"gitId":"DineshMagesvaran"},"content":"     * Constructor that creates a deadline task."},{"lineNumber":12,"author":{"gitId":"DineshMagesvaran"},"content":"     * @param taskInfo the description of the deadline task."},{"lineNumber":13,"author":{"gitId":"DineshMagesvaran"},"content":"     * @param dateInfo the date of the deadline for the task."},{"lineNumber":14,"author":{"gitId":"DineshMagesvaran"},"content":"     */"},{"lineNumber":15,"author":{"gitId":"DineshMagesvaran"},"content":"    public Deadline(String taskInfo, LocalDate dateInfo) {"},{"lineNumber":16,"author":{"gitId":"DineshMagesvaran"},"content":"        super(taskInfo);"},{"lineNumber":17,"author":{"gitId":"DineshMagesvaran"},"content":"        this.dateInfo \u003d dateInfo;"},{"lineNumber":18,"author":{"gitId":"DineshMagesvaran"},"content":"    }"},{"lineNumber":19,"author":{"gitId":"DineshMagesvaran"},"content":""},{"lineNumber":20,"author":{"gitId":"DineshMagesvaran"},"content":"    @Override"},{"lineNumber":21,"author":{"gitId":"DineshMagesvaran"},"content":"    public String toString() {"},{"lineNumber":22,"author":{"gitId":"DineshMagesvaran"},"content":"        return \"[D]\" + super.toString() + \" (\" + dateInfo.format(DateTimeFormatter.ofPattern(\"dd MMM yyyy\")) + \")\";"},{"lineNumber":23,"author":{"gitId":"DineshMagesvaran"},"content":"    }"},{"lineNumber":24,"author":{"gitId":"DineshMagesvaran"},"content":""},{"lineNumber":25,"author":{"gitId":"DineshMagesvaran"},"content":"    public String getData() {"},{"lineNumber":26,"author":{"gitId":"DineshMagesvaran"},"content":"        if (isDone \u003d\u003d true) {"},{"lineNumber":27,"author":{"gitId":"DineshMagesvaran"},"content":"            return \"D!@#1!@#\" + taskInfo + \"!@#\" + dateInfo;"},{"lineNumber":28,"author":{"gitId":"DineshMagesvaran"},"content":"        } else {"},{"lineNumber":29,"author":{"gitId":"DineshMagesvaran"},"content":"            return \"D!@#0!@#\" + taskInfo + \"!@#\" + dateInfo;"},{"lineNumber":30,"author":{"gitId":"DineshMagesvaran"},"content":"        }"},{"lineNumber":31,"author":{"gitId":"DineshMagesvaran"},"content":"    }"},{"lineNumber":32,"author":{"gitId":"DineshMagesvaran"},"content":"}"}],"authorContributionMap":{"DineshMagesvaran":32}},{"path":"src/main/java/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"DineshMagesvaran"},"content":"/**"},{"lineNumber":2,"author":{"gitId":"DineshMagesvaran"},"content":" * Class that can create Duke objects that help the user"},{"lineNumber":3,"author":{"gitId":"DineshMagesvaran"},"content":" * to maintain a list of tasks."},{"lineNumber":4,"author":{"gitId":"DineshMagesvaran"},"content":" */"},{"lineNumber":5,"author":{"gitId":"-"},"content":"public class Duke {"},{"lineNumber":6,"author":{"gitId":"DineshMagesvaran"},"content":"    private Storage storage;"},{"lineNumber":7,"author":{"gitId":"DineshMagesvaran"},"content":"    private TaskList taskList;"},{"lineNumber":8,"author":{"gitId":"DineshMagesvaran"},"content":"    private UI ui;"},{"lineNumber":9,"author":{"gitId":"DineshMagesvaran"},"content":""},{"lineNumber":10,"author":{"gitId":"DineshMagesvaran"},"content":"    /**"},{"lineNumber":11,"author":{"gitId":"DineshMagesvaran"},"content":"     * Constructor that creates a Duke object."},{"lineNumber":12,"author":{"gitId":"DineshMagesvaran"},"content":"     *"},{"lineNumber":13,"author":{"gitId":"DineshMagesvaran"},"content":"     * @param filePath the file path of the file that is used"},{"lineNumber":14,"author":{"gitId":"DineshMagesvaran"},"content":"     *                 to store the task data."},{"lineNumber":15,"author":{"gitId":"DineshMagesvaran"},"content":"     */"},{"lineNumber":16,"author":{"gitId":"DineshMagesvaran"},"content":"    public Duke(String filePath) {"},{"lineNumber":17,"author":{"gitId":"DineshMagesvaran"},"content":"        ui \u003d new UI();"},{"lineNumber":18,"author":{"gitId":"DineshMagesvaran"},"content":"        storage \u003d new Storage(filePath);"},{"lineNumber":19,"author":{"gitId":"DineshMagesvaran"},"content":"        taskList \u003d storage.readDataFromFile();"},{"lineNumber":20,"author":{"gitId":"DineshMagesvaran"},"content":"    }"},{"lineNumber":21,"author":{"gitId":"DineshMagesvaran"},"content":""},{"lineNumber":22,"author":{"gitId":"DineshMagesvaran"},"content":"    /**"},{"lineNumber":23,"author":{"gitId":"DineshMagesvaran"},"content":"     * Method to run the Duke application."},{"lineNumber":24,"author":{"gitId":"DineshMagesvaran"},"content":"     */"},{"lineNumber":25,"author":{"gitId":"DineshMagesvaran"},"content":"    public void run() {"},{"lineNumber":26,"author":{"gitId":"DineshMagesvaran"},"content":"        ui.launchUI(taskList);"},{"lineNumber":27,"author":{"gitId":"DineshMagesvaran"},"content":"        storage.writeDataIntoFile(taskList);"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":29,"author":{"gitId":"DineshMagesvaran"},"content":""},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public static void main(String[] args) {"},{"lineNumber":31,"author":{"gitId":"DineshMagesvaran"},"content":"        new Duke(\"data/duke.txt\").run();"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":33,"author":{"gitId":"DineshMagesvaran"},"content":""},{"lineNumber":34,"author":{"gitId":"-"},"content":"}"}],"authorContributionMap":{"DineshMagesvaran":29,"-":5}},{"path":"src/main/java/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"DineshMagesvaran"},"content":"import java.time.LocalDate;"},{"lineNumber":2,"author":{"gitId":"DineshMagesvaran"},"content":"import java.time.format.DateTimeFormatter;"},{"lineNumber":3,"author":{"gitId":"DineshMagesvaran"},"content":""},{"lineNumber":4,"author":{"gitId":"DineshMagesvaran"},"content":"/**"},{"lineNumber":5,"author":{"gitId":"DineshMagesvaran"},"content":" * Class that can create a event task object."},{"lineNumber":6,"author":{"gitId":"DineshMagesvaran"},"content":" */"},{"lineNumber":7,"author":{"gitId":"DineshMagesvaran"},"content":"public class Event extends Task {"},{"lineNumber":8,"author":{"gitId":"DineshMagesvaran"},"content":"    private LocalDate startDateInfo;"},{"lineNumber":9,"author":{"gitId":"DineshMagesvaran"},"content":"    private LocalDate endDateInfo;"},{"lineNumber":10,"author":{"gitId":"DineshMagesvaran"},"content":""},{"lineNumber":11,"author":{"gitId":"DineshMagesvaran"},"content":"    /**"},{"lineNumber":12,"author":{"gitId":"DineshMagesvaran"},"content":"     * Constructor that creates a event task."},{"lineNumber":13,"author":{"gitId":"DineshMagesvaran"},"content":"     * @param taskInfo the description of the event task."},{"lineNumber":14,"author":{"gitId":"DineshMagesvaran"},"content":"     * @param startDateInfo the start date of the event task."},{"lineNumber":15,"author":{"gitId":"DineshMagesvaran"},"content":"     * @param endDateInfo the end date of the event task."},{"lineNumber":16,"author":{"gitId":"DineshMagesvaran"},"content":"     */"},{"lineNumber":17,"author":{"gitId":"DineshMagesvaran"},"content":"    public Event(String taskInfo, LocalDate startDateInfo, LocalDate endDateInfo) {"},{"lineNumber":18,"author":{"gitId":"DineshMagesvaran"},"content":"        super(taskInfo);"},{"lineNumber":19,"author":{"gitId":"DineshMagesvaran"},"content":"        this.startDateInfo \u003d startDateInfo;"},{"lineNumber":20,"author":{"gitId":"DineshMagesvaran"},"content":"        this.endDateInfo \u003d endDateInfo;"},{"lineNumber":21,"author":{"gitId":"DineshMagesvaran"},"content":"    }"},{"lineNumber":22,"author":{"gitId":"DineshMagesvaran"},"content":""},{"lineNumber":23,"author":{"gitId":"DineshMagesvaran"},"content":"    @Override"},{"lineNumber":24,"author":{"gitId":"DineshMagesvaran"},"content":"    public String toString() {"},{"lineNumber":25,"author":{"gitId":"DineshMagesvaran"},"content":"        return \"[E]\" + super.toString() + \" (\""},{"lineNumber":26,"author":{"gitId":"DineshMagesvaran"},"content":"                + startDateInfo.format(DateTimeFormatter.ofPattern(\"dd MMM yyyy\")) + \" to \""},{"lineNumber":27,"author":{"gitId":"DineshMagesvaran"},"content":"                + endDateInfo.format(DateTimeFormatter.ofPattern(\"dd MMM yyyy\")) + \")\";"},{"lineNumber":28,"author":{"gitId":"DineshMagesvaran"},"content":"    }"},{"lineNumber":29,"author":{"gitId":"DineshMagesvaran"},"content":""},{"lineNumber":30,"author":{"gitId":"DineshMagesvaran"},"content":"    public String getData() {"},{"lineNumber":31,"author":{"gitId":"DineshMagesvaran"},"content":"        if (isDone \u003d\u003d true) {"},{"lineNumber":32,"author":{"gitId":"DineshMagesvaran"},"content":"            return \"E!@#1!@#\" + taskInfo + \"!@#\" + startDateInfo + \"!@#\" + endDateInfo;"},{"lineNumber":33,"author":{"gitId":"DineshMagesvaran"},"content":"        } else {"},{"lineNumber":34,"author":{"gitId":"DineshMagesvaran"},"content":"            return \"E!@#0!@#\" + taskInfo + \"!@#\" + startDateInfo + \"!@#\" + endDateInfo;"},{"lineNumber":35,"author":{"gitId":"DineshMagesvaran"},"content":"        }"},{"lineNumber":36,"author":{"gitId":"DineshMagesvaran"},"content":"    }"},{"lineNumber":37,"author":{"gitId":"DineshMagesvaran"},"content":"}"}],"authorContributionMap":{"DineshMagesvaran":37}},{"path":"src/main/java/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"DineshMagesvaran"},"content":"import java.time.LocalDate;"},{"lineNumber":2,"author":{"gitId":"DineshMagesvaran"},"content":"import java.time.format.DateTimeParseException;"},{"lineNumber":3,"author":{"gitId":"DineshMagesvaran"},"content":""},{"lineNumber":4,"author":{"gitId":"DineshMagesvaran"},"content":"/**"},{"lineNumber":5,"author":{"gitId":"DineshMagesvaran"},"content":" * Class that can create a Parser object that can interpret the user"},{"lineNumber":6,"author":{"gitId":"DineshMagesvaran"},"content":" * commands."},{"lineNumber":7,"author":{"gitId":"DineshMagesvaran"},"content":" */"},{"lineNumber":8,"author":{"gitId":"DineshMagesvaran"},"content":"public class Parser {"},{"lineNumber":9,"author":{"gitId":"DineshMagesvaran"},"content":"    /**"},{"lineNumber":10,"author":{"gitId":"DineshMagesvaran"},"content":"     * Method that interprets and executes the user command accordingly."},{"lineNumber":11,"author":{"gitId":"DineshMagesvaran"},"content":"     *"},{"lineNumber":12,"author":{"gitId":"DineshMagesvaran"},"content":"     * @param listOfTasks the list of tasks for the user."},{"lineNumber":13,"author":{"gitId":"DineshMagesvaran"},"content":"     * @param textInput the command that was given by the user."},{"lineNumber":14,"author":{"gitId":"DineshMagesvaran"},"content":"     */"},{"lineNumber":15,"author":{"gitId":"DineshMagesvaran"},"content":"    public void executeCommand(TaskList listOfTasks, String textInput) {"},{"lineNumber":16,"author":{"gitId":"DineshMagesvaran"},"content":"        if (textInput.toLowerCase().equals(\"list\")) {"},{"lineNumber":17,"author":{"gitId":"DineshMagesvaran"},"content":"            int i \u003d 1;"},{"lineNumber":18,"author":{"gitId":"DineshMagesvaran"},"content":"            System.out.println(\"\\t_____________________________________________________________\");"},{"lineNumber":19,"author":{"gitId":"DineshMagesvaran"},"content":"            System.out.println(\"\\t Here are the tasks in your list:\");"},{"lineNumber":20,"author":{"gitId":"DineshMagesvaran"},"content":"            for (Task task : listOfTasks) {"},{"lineNumber":21,"author":{"gitId":"DineshMagesvaran"},"content":"                System.out.println(\"\\t \" + i + \".\" + task);"},{"lineNumber":22,"author":{"gitId":"DineshMagesvaran"},"content":"                i++;"},{"lineNumber":23,"author":{"gitId":"DineshMagesvaran"},"content":"            }"},{"lineNumber":24,"author":{"gitId":"DineshMagesvaran"},"content":"            System.out.println(\"\\t_____________________________________________________________\");"},{"lineNumber":25,"author":{"gitId":"DineshMagesvaran"},"content":"        } else if (textInput.startsWith(\"done \")) {"},{"lineNumber":26,"author":{"gitId":"DineshMagesvaran"},"content":"            try {"},{"lineNumber":27,"author":{"gitId":"DineshMagesvaran"},"content":"                int i \u003d Integer.parseInt(textInput.substring(5));"},{"lineNumber":28,"author":{"gitId":"DineshMagesvaran"},"content":"                Task task \u003d listOfTasks.get(i - 1);"},{"lineNumber":29,"author":{"gitId":"DineshMagesvaran"},"content":"                task.completeTask();"},{"lineNumber":30,"author":{"gitId":"DineshMagesvaran"},"content":"                System.out.println(\"\\t_____________________________________________________________\");"},{"lineNumber":31,"author":{"gitId":"DineshMagesvaran"},"content":"                System.out.println(\"\\t Nice! I\u0027ve marked this task as done:\");"},{"lineNumber":32,"author":{"gitId":"DineshMagesvaran"},"content":"                System.out.println(\"\\t   \" + task);"},{"lineNumber":33,"author":{"gitId":"DineshMagesvaran"},"content":"                System.out.println(\"\\t_____________________________________________________________\");"},{"lineNumber":34,"author":{"gitId":"DineshMagesvaran"},"content":"            } catch (NumberFormatException e) {"},{"lineNumber":35,"author":{"gitId":"DineshMagesvaran"},"content":"                System.out.println(\"INVALID COMMAND!\");"},{"lineNumber":36,"author":{"gitId":"DineshMagesvaran"},"content":"            } catch (StringIndexOutOfBoundsException e) {"},{"lineNumber":37,"author":{"gitId":"DineshMagesvaran"},"content":"                System.out.println(\"INVALID COMMAND!\");"},{"lineNumber":38,"author":{"gitId":"DineshMagesvaran"},"content":"            } catch (IndexOutOfBoundsException e) {"},{"lineNumber":39,"author":{"gitId":"DineshMagesvaran"},"content":"                System.out.println(\"INVALID COMMAND!\");"},{"lineNumber":40,"author":{"gitId":"DineshMagesvaran"},"content":"            }"},{"lineNumber":41,"author":{"gitId":"DineshMagesvaran"},"content":"        } else if (textInput.startsWith(\"delete \")) {"},{"lineNumber":42,"author":{"gitId":"DineshMagesvaran"},"content":"            try {"},{"lineNumber":43,"author":{"gitId":"DineshMagesvaran"},"content":"                int i \u003d Integer.parseInt(textInput.substring(7));"},{"lineNumber":44,"author":{"gitId":"DineshMagesvaran"},"content":"                Task task \u003d listOfTasks.get(i - 1);"},{"lineNumber":45,"author":{"gitId":"DineshMagesvaran"},"content":"                listOfTasks.remove(i - 1);"},{"lineNumber":46,"author":{"gitId":"DineshMagesvaran"},"content":"                System.out.println(\"\\t_____________________________________________________________\");"},{"lineNumber":47,"author":{"gitId":"DineshMagesvaran"},"content":"                System.out.println(\"\\t Noted. I\u0027ve removed this task:\");"},{"lineNumber":48,"author":{"gitId":"DineshMagesvaran"},"content":"                System.out.println(\"\\t   \" + task);"},{"lineNumber":49,"author":{"gitId":"DineshMagesvaran"},"content":"                System.out.println(\"\\t Now you have \" + listOfTasks.size() + \" tasks in the list.\");"},{"lineNumber":50,"author":{"gitId":"DineshMagesvaran"},"content":"                System.out.println(\"\\t_____________________________________________________________\");"},{"lineNumber":51,"author":{"gitId":"DineshMagesvaran"},"content":"            } catch (NumberFormatException e) {"},{"lineNumber":52,"author":{"gitId":"DineshMagesvaran"},"content":"                System.out.println(\"INVALID COMMAND!\");"},{"lineNumber":53,"author":{"gitId":"DineshMagesvaran"},"content":"            } catch (StringIndexOutOfBoundsException e) {"},{"lineNumber":54,"author":{"gitId":"DineshMagesvaran"},"content":"                System.out.println(\"INVALID COMMAND!\");"},{"lineNumber":55,"author":{"gitId":"DineshMagesvaran"},"content":"            } catch (IndexOutOfBoundsException e) {"},{"lineNumber":56,"author":{"gitId":"DineshMagesvaran"},"content":"                System.out.println(\"INVALID COMMAND!\");"},{"lineNumber":57,"author":{"gitId":"DineshMagesvaran"},"content":"            }"},{"lineNumber":58,"author":{"gitId":"DineshMagesvaran"},"content":"        } else if (textInput.startsWith(\"find \")) {"},{"lineNumber":59,"author":{"gitId":"DineshMagesvaran"},"content":"            String textToFind \u003d textInput.substring(5);"},{"lineNumber":60,"author":{"gitId":"DineshMagesvaran"},"content":"            if (!textToFind.isBlank()) {"},{"lineNumber":61,"author":{"gitId":"DineshMagesvaran"},"content":"                System.out.println(\"\\t_____________________________________________________________\");"},{"lineNumber":62,"author":{"gitId":"DineshMagesvaran"},"content":"                System.out.println(\"\\t Here are the matching tasks in your list:\");"},{"lineNumber":63,"author":{"gitId":"DineshMagesvaran"},"content":"                int i \u003d 1;"},{"lineNumber":64,"author":{"gitId":"DineshMagesvaran"},"content":"                for (Task task : listOfTasks) {"},{"lineNumber":65,"author":{"gitId":"DineshMagesvaran"},"content":"                    if (task.contains(textToFind)) {"},{"lineNumber":66,"author":{"gitId":"DineshMagesvaran"},"content":"                        System.out.println(\"\\t \" + i + \". \" + task);"},{"lineNumber":67,"author":{"gitId":"DineshMagesvaran"},"content":"                    }"},{"lineNumber":68,"author":{"gitId":"DineshMagesvaran"},"content":"                    i++;"},{"lineNumber":69,"author":{"gitId":"DineshMagesvaran"},"content":"                }"},{"lineNumber":70,"author":{"gitId":"DineshMagesvaran"},"content":"                System.out.println(\"\\t_____________________________________________________________\");"},{"lineNumber":71,"author":{"gitId":"DineshMagesvaran"},"content":"            } else {"},{"lineNumber":72,"author":{"gitId":"DineshMagesvaran"},"content":"                System.out.println(\"\\t_____________________________________________________________\");"},{"lineNumber":73,"author":{"gitId":"DineshMagesvaran"},"content":"                System.out.println(\"\\t ☹ OOPS!!! The description of find cannot be empty.\");"},{"lineNumber":74,"author":{"gitId":"DineshMagesvaran"},"content":"                System.out.println(\"\\t_____________________________________________________________\");"},{"lineNumber":75,"author":{"gitId":"DineshMagesvaran"},"content":"            }"},{"lineNumber":76,"author":{"gitId":"DineshMagesvaran"},"content":"        } else if (textInput.startsWith(\"todo\")) {"},{"lineNumber":77,"author":{"gitId":"DineshMagesvaran"},"content":"            try {"},{"lineNumber":78,"author":{"gitId":"DineshMagesvaran"},"content":"                textInput \u003d textInput.substring(5);"},{"lineNumber":79,"author":{"gitId":"DineshMagesvaran"},"content":"                Task task \u003d new ToDo(textInput);"},{"lineNumber":80,"author":{"gitId":"DineshMagesvaran"},"content":"                listOfTasks.add(task);"},{"lineNumber":81,"author":{"gitId":"DineshMagesvaran"},"content":"                System.out.println(\"\\t_____________________________________________________________\");"},{"lineNumber":82,"author":{"gitId":"DineshMagesvaran"},"content":"                System.out.println(\"\\t Got it. I\u0027ve added this task:\");"},{"lineNumber":83,"author":{"gitId":"DineshMagesvaran"},"content":"                System.out.println(\"\\t   \" + task);"},{"lineNumber":84,"author":{"gitId":"DineshMagesvaran"},"content":"                System.out.println(\"\\t Now you have \" + listOfTasks.size() + \" tasks in the list.\");"},{"lineNumber":85,"author":{"gitId":"DineshMagesvaran"},"content":"                System.out.println(\"\\t_____________________________________________________________\");"},{"lineNumber":86,"author":{"gitId":"DineshMagesvaran"},"content":"            } catch (StringIndexOutOfBoundsException e) {"},{"lineNumber":87,"author":{"gitId":"DineshMagesvaran"},"content":"                System.out.println(\"\\t_____________________________________________________________\");"},{"lineNumber":88,"author":{"gitId":"DineshMagesvaran"},"content":"                System.out.println(\"\\t ☹ OOPS!!! The description of a todo cannot be empty.\");"},{"lineNumber":89,"author":{"gitId":"DineshMagesvaran"},"content":"                System.out.println(\"\\t_____________________________________________________________\");"},{"lineNumber":90,"author":{"gitId":"DineshMagesvaran"},"content":"            }"},{"lineNumber":91,"author":{"gitId":"DineshMagesvaran"},"content":"        } else if (textInput.startsWith(\"deadline\")) {"},{"lineNumber":92,"author":{"gitId":"DineshMagesvaran"},"content":"            try {"},{"lineNumber":93,"author":{"gitId":"DineshMagesvaran"},"content":"                textInput \u003d textInput.substring(9);"},{"lineNumber":94,"author":{"gitId":"DineshMagesvaran"},"content":"                int index \u003d textInput.indexOf(\"/by \");"},{"lineNumber":95,"author":{"gitId":"DineshMagesvaran"},"content":"                if (index !\u003d -1) {"},{"lineNumber":96,"author":{"gitId":"DineshMagesvaran"},"content":"                    String dateInfo \u003d textInput.substring(index + 4);"},{"lineNumber":97,"author":{"gitId":"DineshMagesvaran"},"content":"                    LocalDate localDate \u003d LocalDate.parse(dateInfo);"},{"lineNumber":98,"author":{"gitId":"DineshMagesvaran"},"content":"                    Task task \u003d new Deadline(textInput.substring(0, index - 1), localDate);"},{"lineNumber":99,"author":{"gitId":"DineshMagesvaran"},"content":"                    listOfTasks.add(task);"},{"lineNumber":100,"author":{"gitId":"DineshMagesvaran"},"content":"                    System.out.println(\"\\t_____________________________________________________________\");"},{"lineNumber":101,"author":{"gitId":"DineshMagesvaran"},"content":"                    System.out.println(\"\\t Got it. I\u0027ve added this task:\");"},{"lineNumber":102,"author":{"gitId":"DineshMagesvaran"},"content":"                    System.out.println(\"\\t   \" + task);"},{"lineNumber":103,"author":{"gitId":"DineshMagesvaran"},"content":"                    System.out.println(\"\\t Now you have \" + listOfTasks.size() + \" tasks in the list.\");"},{"lineNumber":104,"author":{"gitId":"DineshMagesvaran"},"content":"                    System.out.println(\"\\t_____________________________________________________________\");"},{"lineNumber":105,"author":{"gitId":"DineshMagesvaran"},"content":"                } else {"},{"lineNumber":106,"author":{"gitId":"DineshMagesvaran"},"content":"                    System.out.println(\"INVALID COMMAND!\");"},{"lineNumber":107,"author":{"gitId":"DineshMagesvaran"},"content":"                }"},{"lineNumber":108,"author":{"gitId":"DineshMagesvaran"},"content":"            } catch (StringIndexOutOfBoundsException e) {"},{"lineNumber":109,"author":{"gitId":"DineshMagesvaran"},"content":"                System.out.println(\"\\t_____________________________________________________________\");"},{"lineNumber":110,"author":{"gitId":"DineshMagesvaran"},"content":"                System.out.println(\"\\t ☹ OOPS!!! The description of a deadline cannot be empty.\");"},{"lineNumber":111,"author":{"gitId":"DineshMagesvaran"},"content":"                System.out.println(\"\\t_____________________________________________________________\");"},{"lineNumber":112,"author":{"gitId":"DineshMagesvaran"},"content":"            } catch (DateTimeParseException e) {"},{"lineNumber":113,"author":{"gitId":"DineshMagesvaran"},"content":"                System.out.println(\"INVALID COMMAND!\");"},{"lineNumber":114,"author":{"gitId":"DineshMagesvaran"},"content":"            }"},{"lineNumber":115,"author":{"gitId":"DineshMagesvaran"},"content":"        } else if (textInput.startsWith(\"event\")) {"},{"lineNumber":116,"author":{"gitId":"DineshMagesvaran"},"content":"            try {"},{"lineNumber":117,"author":{"gitId":"DineshMagesvaran"},"content":"                textInput \u003d textInput.substring(6);"},{"lineNumber":118,"author":{"gitId":"DineshMagesvaran"},"content":"                int index \u003d textInput.indexOf(\"/from \");"},{"lineNumber":119,"author":{"gitId":"DineshMagesvaran"},"content":"                if (index !\u003d -1) {"},{"lineNumber":120,"author":{"gitId":"DineshMagesvaran"},"content":"                    String dateInfo \u003d textInput.substring(index + 6);"},{"lineNumber":121,"author":{"gitId":"DineshMagesvaran"},"content":"                    int index2 \u003d dateInfo.indexOf(\"to \");"},{"lineNumber":122,"author":{"gitId":"DineshMagesvaran"},"content":"                    if (index2 !\u003d -1) {"},{"lineNumber":123,"author":{"gitId":"DineshMagesvaran"},"content":"                        LocalDate startDate \u003d LocalDate.parse(dateInfo.substring(0, index2 - 1));"},{"lineNumber":124,"author":{"gitId":"DineshMagesvaran"},"content":"                        LocalDate endDate \u003d LocalDate.parse(dateInfo.substring(index2 + 3));"},{"lineNumber":125,"author":{"gitId":"DineshMagesvaran"},"content":"                        Task task \u003d new Event(textInput.substring(0, index - 1), startDate, endDate);"},{"lineNumber":126,"author":{"gitId":"DineshMagesvaran"},"content":"                        listOfTasks.add(task);"},{"lineNumber":127,"author":{"gitId":"DineshMagesvaran"},"content":"                        System.out.println(\"\\t_____________________________________________________________\");"},{"lineNumber":128,"author":{"gitId":"DineshMagesvaran"},"content":"                        System.out.println(\"\\t Got it. I\u0027ve added this task:\");"},{"lineNumber":129,"author":{"gitId":"DineshMagesvaran"},"content":"                        System.out.println(\"\\t   \" + task);"},{"lineNumber":130,"author":{"gitId":"DineshMagesvaran"},"content":"                        System.out.println(\"\\t Now you have \" + listOfTasks.size() + \" tasks in the list.\");"},{"lineNumber":131,"author":{"gitId":"DineshMagesvaran"},"content":"                        System.out.println(\"\\t_____________________________________________________________\");"},{"lineNumber":132,"author":{"gitId":"DineshMagesvaran"},"content":"                    } else {"},{"lineNumber":133,"author":{"gitId":"DineshMagesvaran"},"content":"                        System.out.println(\"INVALID COMMAND!\");"},{"lineNumber":134,"author":{"gitId":"DineshMagesvaran"},"content":"                    }"},{"lineNumber":135,"author":{"gitId":"DineshMagesvaran"},"content":"                } else {"},{"lineNumber":136,"author":{"gitId":"DineshMagesvaran"},"content":"                    System.out.println(\"INVALID COMMAND!\");"},{"lineNumber":137,"author":{"gitId":"DineshMagesvaran"},"content":"                }"},{"lineNumber":138,"author":{"gitId":"DineshMagesvaran"},"content":"            } catch (StringIndexOutOfBoundsException e) {"},{"lineNumber":139,"author":{"gitId":"DineshMagesvaran"},"content":"                System.out.println(\"\\t_____________________________________________________________\");"},{"lineNumber":140,"author":{"gitId":"DineshMagesvaran"},"content":"                System.out.println(\"\\t ☹ OOPS!!! The description of a event cannot be empty.\");"},{"lineNumber":141,"author":{"gitId":"DineshMagesvaran"},"content":"                System.out.println(\"\\t_____________________________________________________________\");"},{"lineNumber":142,"author":{"gitId":"DineshMagesvaran"},"content":"            } catch (DateTimeParseException e) {"},{"lineNumber":143,"author":{"gitId":"DineshMagesvaran"},"content":"                System.out.println(\"INVALID COMMAND!\");"},{"lineNumber":144,"author":{"gitId":"DineshMagesvaran"},"content":"            }"},{"lineNumber":145,"author":{"gitId":"DineshMagesvaran"},"content":"        } else {"},{"lineNumber":146,"author":{"gitId":"DineshMagesvaran"},"content":"            System.out.println(\"\\t_____________________________________________________________\");"},{"lineNumber":147,"author":{"gitId":"DineshMagesvaran"},"content":"            System.out.println(\"\\t ☹ OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\");"},{"lineNumber":148,"author":{"gitId":"DineshMagesvaran"},"content":"            System.out.println(\"\\t_____________________________________________________________\");"},{"lineNumber":149,"author":{"gitId":"DineshMagesvaran"},"content":"        }"},{"lineNumber":150,"author":{"gitId":"DineshMagesvaran"},"content":"    }"},{"lineNumber":151,"author":{"gitId":"DineshMagesvaran"},"content":"}"}],"authorContributionMap":{"DineshMagesvaran":151}},{"path":"src/main/java/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"DineshMagesvaran"},"content":"import java.io.File;"},{"lineNumber":2,"author":{"gitId":"DineshMagesvaran"},"content":"import java.io.FileNotFoundException;"},{"lineNumber":3,"author":{"gitId":"DineshMagesvaran"},"content":"import java.io.FileWriter;"},{"lineNumber":4,"author":{"gitId":"DineshMagesvaran"},"content":"import java.io.IOException;"},{"lineNumber":5,"author":{"gitId":"DineshMagesvaran"},"content":"import java.time.LocalDate;"},{"lineNumber":6,"author":{"gitId":"DineshMagesvaran"},"content":"import java.util.Scanner;"},{"lineNumber":7,"author":{"gitId":"DineshMagesvaran"},"content":""},{"lineNumber":8,"author":{"gitId":"DineshMagesvaran"},"content":"/**"},{"lineNumber":9,"author":{"gitId":"DineshMagesvaran"},"content":" * Class that can create a storage object that contains methods to"},{"lineNumber":10,"author":{"gitId":"DineshMagesvaran"},"content":" * read and write data to a file."},{"lineNumber":11,"author":{"gitId":"DineshMagesvaran"},"content":" */"},{"lineNumber":12,"author":{"gitId":"DineshMagesvaran"},"content":"public class Storage {"},{"lineNumber":13,"author":{"gitId":"DineshMagesvaran"},"content":"    private String filePath;"},{"lineNumber":14,"author":{"gitId":"DineshMagesvaran"},"content":""},{"lineNumber":15,"author":{"gitId":"DineshMagesvaran"},"content":"    /**"},{"lineNumber":16,"author":{"gitId":"DineshMagesvaran"},"content":"     * Constructor that creates a new Storage object."},{"lineNumber":17,"author":{"gitId":"DineshMagesvaran"},"content":"     *"},{"lineNumber":18,"author":{"gitId":"DineshMagesvaran"},"content":"     * @param filePath the file path that is used to read and write"},{"lineNumber":19,"author":{"gitId":"DineshMagesvaran"},"content":"     *                 data to."},{"lineNumber":20,"author":{"gitId":"DineshMagesvaran"},"content":"     */"},{"lineNumber":21,"author":{"gitId":"DineshMagesvaran"},"content":"    public Storage(String filePath) {"},{"lineNumber":22,"author":{"gitId":"DineshMagesvaran"},"content":"        this.filePath \u003d filePath;"},{"lineNumber":23,"author":{"gitId":"DineshMagesvaran"},"content":"    }"},{"lineNumber":24,"author":{"gitId":"DineshMagesvaran"},"content":""},{"lineNumber":25,"author":{"gitId":"DineshMagesvaran"},"content":"    /**"},{"lineNumber":26,"author":{"gitId":"DineshMagesvaran"},"content":"     * Method that reads the data from the file located at the file path."},{"lineNumber":27,"author":{"gitId":"DineshMagesvaran"},"content":"     *"},{"lineNumber":28,"author":{"gitId":"DineshMagesvaran"},"content":"     * @return the list of tasks obtained from the stored data in the file."},{"lineNumber":29,"author":{"gitId":"DineshMagesvaran"},"content":"     */"},{"lineNumber":30,"author":{"gitId":"DineshMagesvaran"},"content":"    public TaskList readDataFromFile() {"},{"lineNumber":31,"author":{"gitId":"DineshMagesvaran"},"content":"        TaskList taskList \u003d new TaskList();"},{"lineNumber":32,"author":{"gitId":"DineshMagesvaran"},"content":"        try {"},{"lineNumber":33,"author":{"gitId":"DineshMagesvaran"},"content":"            File file \u003d new File(filePath);"},{"lineNumber":34,"author":{"gitId":"DineshMagesvaran"},"content":"            Scanner readFile \u003d new Scanner(file);"},{"lineNumber":35,"author":{"gitId":"DineshMagesvaran"},"content":"            while (readFile.hasNextLine()) {"},{"lineNumber":36,"author":{"gitId":"DineshMagesvaran"},"content":"                String taskData \u003d readFile.nextLine();"},{"lineNumber":37,"author":{"gitId":"DineshMagesvaran"},"content":"                if (taskData.startsWith(\"T\")) {"},{"lineNumber":38,"author":{"gitId":"DineshMagesvaran"},"content":"                    String[] listOfData \u003d taskData.split(\"!@#\", 3);"},{"lineNumber":39,"author":{"gitId":"DineshMagesvaran"},"content":"                    Task newTodo \u003d new ToDo(listOfData[2]);"},{"lineNumber":40,"author":{"gitId":"DineshMagesvaran"},"content":"                    if (listOfData[1].equals(\"1\")) {"},{"lineNumber":41,"author":{"gitId":"DineshMagesvaran"},"content":"                        newTodo.completeTask();"},{"lineNumber":42,"author":{"gitId":"DineshMagesvaran"},"content":"                    }"},{"lineNumber":43,"author":{"gitId":"DineshMagesvaran"},"content":"                    taskList.addTask(newTodo);"},{"lineNumber":44,"author":{"gitId":"DineshMagesvaran"},"content":"                } else if (taskData.startsWith(\"D\")) {"},{"lineNumber":45,"author":{"gitId":"DineshMagesvaran"},"content":"                    String[] listOfData \u003d taskData.split(\"!@#\", 4);"},{"lineNumber":46,"author":{"gitId":"DineshMagesvaran"},"content":"                    LocalDate localDate \u003d LocalDate.parse(listOfData[3]);"},{"lineNumber":47,"author":{"gitId":"DineshMagesvaran"},"content":"                    Task newDeadline \u003d new Deadline(listOfData[2], localDate);"},{"lineNumber":48,"author":{"gitId":"DineshMagesvaran"},"content":"                    if (listOfData[1].equals(\"1\")) {"},{"lineNumber":49,"author":{"gitId":"DineshMagesvaran"},"content":"                        newDeadline.completeTask();"},{"lineNumber":50,"author":{"gitId":"DineshMagesvaran"},"content":"                    }"},{"lineNumber":51,"author":{"gitId":"DineshMagesvaran"},"content":"                    taskList.addTask(newDeadline);"},{"lineNumber":52,"author":{"gitId":"DineshMagesvaran"},"content":"                } else if (taskData.startsWith(\"E\")) {"},{"lineNumber":53,"author":{"gitId":"DineshMagesvaran"},"content":"                    String[] listOfData \u003d taskData.split(\"!@#\", 5);"},{"lineNumber":54,"author":{"gitId":"DineshMagesvaran"},"content":"                    LocalDate startDate \u003d LocalDate.parse(listOfData[3]);"},{"lineNumber":55,"author":{"gitId":"DineshMagesvaran"},"content":"                    LocalDate endDate \u003d LocalDate.parse(listOfData[4]);"},{"lineNumber":56,"author":{"gitId":"DineshMagesvaran"},"content":"                    Task newEvent \u003d new Event(listOfData[2], startDate, endDate);"},{"lineNumber":57,"author":{"gitId":"DineshMagesvaran"},"content":"                    if (listOfData[1].equals(\"1\")) {"},{"lineNumber":58,"author":{"gitId":"DineshMagesvaran"},"content":"                        newEvent.completeTask();"},{"lineNumber":59,"author":{"gitId":"DineshMagesvaran"},"content":"                    }"},{"lineNumber":60,"author":{"gitId":"DineshMagesvaran"},"content":"                    taskList.addTask(newEvent);"},{"lineNumber":61,"author":{"gitId":"DineshMagesvaran"},"content":"                } else {"},{"lineNumber":62,"author":{"gitId":"DineshMagesvaran"},"content":"                    //"},{"lineNumber":63,"author":{"gitId":"DineshMagesvaran"},"content":"                }"},{"lineNumber":64,"author":{"gitId":"DineshMagesvaran"},"content":"            }"},{"lineNumber":65,"author":{"gitId":"DineshMagesvaran"},"content":"        } catch (FileNotFoundException e) {"},{"lineNumber":66,"author":{"gitId":"DineshMagesvaran"},"content":"            File file \u003d new File(filePath);"},{"lineNumber":67,"author":{"gitId":"DineshMagesvaran"},"content":"            try {"},{"lineNumber":68,"author":{"gitId":"DineshMagesvaran"},"content":"                file.createNewFile();"},{"lineNumber":69,"author":{"gitId":"DineshMagesvaran"},"content":"            } catch (IOException ioException) {"},{"lineNumber":70,"author":{"gitId":"DineshMagesvaran"},"content":"                ioException.printStackTrace();"},{"lineNumber":71,"author":{"gitId":"DineshMagesvaran"},"content":"            }"},{"lineNumber":72,"author":{"gitId":"DineshMagesvaran"},"content":"        }"},{"lineNumber":73,"author":{"gitId":"DineshMagesvaran"},"content":"        return taskList;"},{"lineNumber":74,"author":{"gitId":"DineshMagesvaran"},"content":"    }"},{"lineNumber":75,"author":{"gitId":"DineshMagesvaran"},"content":""},{"lineNumber":76,"author":{"gitId":"DineshMagesvaran"},"content":"    /**"},{"lineNumber":77,"author":{"gitId":"DineshMagesvaran"},"content":"     * Method that writes data to the file located at the file path."},{"lineNumber":78,"author":{"gitId":"DineshMagesvaran"},"content":"     *"},{"lineNumber":79,"author":{"gitId":"DineshMagesvaran"},"content":"     * @param taskList the list of tasks to be stored in the file."},{"lineNumber":80,"author":{"gitId":"DineshMagesvaran"},"content":"     */"},{"lineNumber":81,"author":{"gitId":"DineshMagesvaran"},"content":"    public void writeDataIntoFile(TaskList taskList) {"},{"lineNumber":82,"author":{"gitId":"DineshMagesvaran"},"content":"        try {"},{"lineNumber":83,"author":{"gitId":"DineshMagesvaran"},"content":"            FileWriter writeFile \u003d new FileWriter(filePath);"},{"lineNumber":84,"author":{"gitId":"DineshMagesvaran"},"content":"            while (taskList.size() !\u003d 0) {"},{"lineNumber":85,"author":{"gitId":"DineshMagesvaran"},"content":"                Task task \u003d taskList.deleteTask(0);"},{"lineNumber":86,"author":{"gitId":"DineshMagesvaran"},"content":"                writeFile.write(task.getData());"},{"lineNumber":87,"author":{"gitId":"DineshMagesvaran"},"content":"                writeFile.write(\"\\n\");"},{"lineNumber":88,"author":{"gitId":"DineshMagesvaran"},"content":"            }"},{"lineNumber":89,"author":{"gitId":"DineshMagesvaran"},"content":"            writeFile.close();"},{"lineNumber":90,"author":{"gitId":"DineshMagesvaran"},"content":"        } catch (IOException e) {"},{"lineNumber":91,"author":{"gitId":"DineshMagesvaran"},"content":"            e.printStackTrace();"},{"lineNumber":92,"author":{"gitId":"DineshMagesvaran"},"content":"        }"},{"lineNumber":93,"author":{"gitId":"DineshMagesvaran"},"content":"    }"},{"lineNumber":94,"author":{"gitId":"DineshMagesvaran"},"content":"}"}],"authorContributionMap":{"DineshMagesvaran":94}},{"path":"src/main/java/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"DineshMagesvaran"},"content":"/**"},{"lineNumber":2,"author":{"gitId":"DineshMagesvaran"},"content":" * Abstract class that contains the template of a task"},{"lineNumber":3,"author":{"gitId":"DineshMagesvaran"},"content":" * object."},{"lineNumber":4,"author":{"gitId":"DineshMagesvaran"},"content":" */"},{"lineNumber":5,"author":{"gitId":"DineshMagesvaran"},"content":"public abstract class Task {"},{"lineNumber":6,"author":{"gitId":"DineshMagesvaran"},"content":"    protected Boolean isDone;"},{"lineNumber":7,"author":{"gitId":"DineshMagesvaran"},"content":"    protected String taskInfo;"},{"lineNumber":8,"author":{"gitId":"DineshMagesvaran"},"content":""},{"lineNumber":9,"author":{"gitId":"DineshMagesvaran"},"content":"    /**"},{"lineNumber":10,"author":{"gitId":"DineshMagesvaran"},"content":"     * Constructor that creates a task object."},{"lineNumber":11,"author":{"gitId":"DineshMagesvaran"},"content":"     * @param taskInfo the description of the task."},{"lineNumber":12,"author":{"gitId":"DineshMagesvaran"},"content":"     */"},{"lineNumber":13,"author":{"gitId":"DineshMagesvaran"},"content":"    public Task(String taskInfo) {"},{"lineNumber":14,"author":{"gitId":"DineshMagesvaran"},"content":"        isDone \u003d false;"},{"lineNumber":15,"author":{"gitId":"DineshMagesvaran"},"content":"        this.taskInfo \u003d taskInfo;"},{"lineNumber":16,"author":{"gitId":"DineshMagesvaran"},"content":"    }"},{"lineNumber":17,"author":{"gitId":"DineshMagesvaran"},"content":""},{"lineNumber":18,"author":{"gitId":"DineshMagesvaran"},"content":"    @Override"},{"lineNumber":19,"author":{"gitId":"DineshMagesvaran"},"content":"    public String toString() {"},{"lineNumber":20,"author":{"gitId":"DineshMagesvaran"},"content":"        String s \u003d \"\";"},{"lineNumber":21,"author":{"gitId":"DineshMagesvaran"},"content":"        if (isDone) {"},{"lineNumber":22,"author":{"gitId":"DineshMagesvaran"},"content":"            s \u003d \"[X] \";"},{"lineNumber":23,"author":{"gitId":"DineshMagesvaran"},"content":"        } else {"},{"lineNumber":24,"author":{"gitId":"DineshMagesvaran"},"content":"            s \u003d \"[ ] \";"},{"lineNumber":25,"author":{"gitId":"DineshMagesvaran"},"content":"        }"},{"lineNumber":26,"author":{"gitId":"DineshMagesvaran"},"content":"        return s + taskInfo;"},{"lineNumber":27,"author":{"gitId":"DineshMagesvaran"},"content":"    }"},{"lineNumber":28,"author":{"gitId":"DineshMagesvaran"},"content":""},{"lineNumber":29,"author":{"gitId":"DineshMagesvaran"},"content":"    /**"},{"lineNumber":30,"author":{"gitId":"DineshMagesvaran"},"content":"     * Method that marks the task as done."},{"lineNumber":31,"author":{"gitId":"DineshMagesvaran"},"content":"     */"},{"lineNumber":32,"author":{"gitId":"DineshMagesvaran"},"content":"    public void completeTask() {"},{"lineNumber":33,"author":{"gitId":"DineshMagesvaran"},"content":"        isDone \u003d true;"},{"lineNumber":34,"author":{"gitId":"DineshMagesvaran"},"content":"    }"},{"lineNumber":35,"author":{"gitId":"DineshMagesvaran"},"content":""},{"lineNumber":36,"author":{"gitId":"DineshMagesvaran"},"content":"    /**"},{"lineNumber":37,"author":{"gitId":"DineshMagesvaran"},"content":"     * Method that checks if the task description contains"},{"lineNumber":38,"author":{"gitId":"DineshMagesvaran"},"content":"     * the given subString."},{"lineNumber":39,"author":{"gitId":"DineshMagesvaran"},"content":"     *"},{"lineNumber":40,"author":{"gitId":"DineshMagesvaran"},"content":"     * @param subString the subString to search for inside the task"},{"lineNumber":41,"author":{"gitId":"DineshMagesvaran"},"content":"     *                  description."},{"lineNumber":42,"author":{"gitId":"DineshMagesvaran"},"content":"     * @return true if task description contains subString, false otherwise."},{"lineNumber":43,"author":{"gitId":"DineshMagesvaran"},"content":"     */"},{"lineNumber":44,"author":{"gitId":"DineshMagesvaran"},"content":"    public boolean contains(String subString) {"},{"lineNumber":45,"author":{"gitId":"DineshMagesvaran"},"content":"        return taskInfo.contains(subString);"},{"lineNumber":46,"author":{"gitId":"DineshMagesvaran"},"content":"    }"},{"lineNumber":47,"author":{"gitId":"DineshMagesvaran"},"content":""},{"lineNumber":48,"author":{"gitId":"DineshMagesvaran"},"content":"    /**"},{"lineNumber":49,"author":{"gitId":"DineshMagesvaran"},"content":"     * Abstract method that converts the task into a"},{"lineNumber":50,"author":{"gitId":"DineshMagesvaran"},"content":"     * specific format before storing in a file."},{"lineNumber":51,"author":{"gitId":"DineshMagesvaran"},"content":"     * @return a string of data obtained from the task."},{"lineNumber":52,"author":{"gitId":"DineshMagesvaran"},"content":"     */"},{"lineNumber":53,"author":{"gitId":"DineshMagesvaran"},"content":"\tpublic abstract String getData();"},{"lineNumber":54,"author":{"gitId":"DineshMagesvaran"},"content":"}"}],"authorContributionMap":{"DineshMagesvaran":54}},{"path":"src/main/java/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"DineshMagesvaran"},"content":"import java.util.ArrayList;"},{"lineNumber":2,"author":{"gitId":"DineshMagesvaran"},"content":""},{"lineNumber":3,"author":{"gitId":"DineshMagesvaran"},"content":"/**"},{"lineNumber":4,"author":{"gitId":"DineshMagesvaran"},"content":" * Class that can create a task list object to store"},{"lineNumber":5,"author":{"gitId":"DineshMagesvaran"},"content":" * task objects in a list."},{"lineNumber":6,"author":{"gitId":"DineshMagesvaran"},"content":" */"},{"lineNumber":7,"author":{"gitId":"DineshMagesvaran"},"content":"public class TaskList extends ArrayList\u003cTask\u003e {"},{"lineNumber":8,"author":{"gitId":"DineshMagesvaran"},"content":"    /**"},{"lineNumber":9,"author":{"gitId":"DineshMagesvaran"},"content":"     * Constructor that creates a task list."},{"lineNumber":10,"author":{"gitId":"DineshMagesvaran"},"content":"     */"},{"lineNumber":11,"author":{"gitId":"DineshMagesvaran"},"content":"    public TaskList() {"},{"lineNumber":12,"author":{"gitId":"DineshMagesvaran"},"content":"        super();"},{"lineNumber":13,"author":{"gitId":"DineshMagesvaran"},"content":"    }"},{"lineNumber":14,"author":{"gitId":"DineshMagesvaran"},"content":""},{"lineNumber":15,"author":{"gitId":"DineshMagesvaran"},"content":"    /**"},{"lineNumber":16,"author":{"gitId":"DineshMagesvaran"},"content":"     * Method that adds a new task to the task list."},{"lineNumber":17,"author":{"gitId":"DineshMagesvaran"},"content":"     *"},{"lineNumber":18,"author":{"gitId":"DineshMagesvaran"},"content":"     * @param task the new task to be added to the task list."},{"lineNumber":19,"author":{"gitId":"DineshMagesvaran"},"content":"     */"},{"lineNumber":20,"author":{"gitId":"DineshMagesvaran"},"content":"    public void addTask(Task task) {"},{"lineNumber":21,"author":{"gitId":"DineshMagesvaran"},"content":"        super.add(task);"},{"lineNumber":22,"author":{"gitId":"DineshMagesvaran"},"content":"    }"},{"lineNumber":23,"author":{"gitId":"DineshMagesvaran"},"content":""},{"lineNumber":24,"author":{"gitId":"DineshMagesvaran"},"content":"    /**"},{"lineNumber":25,"author":{"gitId":"DineshMagesvaran"},"content":"     * Method that deletes a task from the task list."},{"lineNumber":26,"author":{"gitId":"DineshMagesvaran"},"content":"     * @param index the index corresponding to the task to be"},{"lineNumber":27,"author":{"gitId":"DineshMagesvaran"},"content":"     *              deleted."},{"lineNumber":28,"author":{"gitId":"DineshMagesvaran"},"content":"     * @return the task that was deleted from the task list."},{"lineNumber":29,"author":{"gitId":"DineshMagesvaran"},"content":"     */"},{"lineNumber":30,"author":{"gitId":"DineshMagesvaran"},"content":"    public Task deleteTask(int index) {"},{"lineNumber":31,"author":{"gitId":"DineshMagesvaran"},"content":"        return super.remove(index);"},{"lineNumber":32,"author":{"gitId":"DineshMagesvaran"},"content":"    }"},{"lineNumber":33,"author":{"gitId":"DineshMagesvaran"},"content":"}"}],"authorContributionMap":{"DineshMagesvaran":33}},{"path":"src/main/java/ToDo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"DineshMagesvaran"},"content":"/**"},{"lineNumber":2,"author":{"gitId":"DineshMagesvaran"},"content":" * Class that can create a todo task object."},{"lineNumber":3,"author":{"gitId":"DineshMagesvaran"},"content":" */"},{"lineNumber":4,"author":{"gitId":"DineshMagesvaran"},"content":"public class ToDo extends Task {"},{"lineNumber":5,"author":{"gitId":"DineshMagesvaran"},"content":"    /**"},{"lineNumber":6,"author":{"gitId":"DineshMagesvaran"},"content":"     * Constructor that creates the todo task."},{"lineNumber":7,"author":{"gitId":"DineshMagesvaran"},"content":"     * @param taskInfo the description of the todo task."},{"lineNumber":8,"author":{"gitId":"DineshMagesvaran"},"content":"     */"},{"lineNumber":9,"author":{"gitId":"DineshMagesvaran"},"content":"    public ToDo(String taskInfo) {"},{"lineNumber":10,"author":{"gitId":"DineshMagesvaran"},"content":"        super(taskInfo);"},{"lineNumber":11,"author":{"gitId":"DineshMagesvaran"},"content":"    }"},{"lineNumber":12,"author":{"gitId":"DineshMagesvaran"},"content":""},{"lineNumber":13,"author":{"gitId":"DineshMagesvaran"},"content":"    @Override"},{"lineNumber":14,"author":{"gitId":"DineshMagesvaran"},"content":"    public String toString() {"},{"lineNumber":15,"author":{"gitId":"DineshMagesvaran"},"content":"        return \"[T]\" + super.toString();"},{"lineNumber":16,"author":{"gitId":"DineshMagesvaran"},"content":"    }"},{"lineNumber":17,"author":{"gitId":"DineshMagesvaran"},"content":""},{"lineNumber":18,"author":{"gitId":"DineshMagesvaran"},"content":"    public String getData() {"},{"lineNumber":19,"author":{"gitId":"DineshMagesvaran"},"content":"        if (isDone \u003d\u003d true) {"},{"lineNumber":20,"author":{"gitId":"DineshMagesvaran"},"content":"            return \"T!@#1!@#\" + taskInfo;"},{"lineNumber":21,"author":{"gitId":"DineshMagesvaran"},"content":"        } else {"},{"lineNumber":22,"author":{"gitId":"DineshMagesvaran"},"content":"            return \"T!@#0!@#\" + taskInfo;"},{"lineNumber":23,"author":{"gitId":"DineshMagesvaran"},"content":"        }"},{"lineNumber":24,"author":{"gitId":"DineshMagesvaran"},"content":"    }"},{"lineNumber":25,"author":{"gitId":"DineshMagesvaran"},"content":"}"}],"authorContributionMap":{"DineshMagesvaran":25}},{"path":"src/main/java/UI.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"DineshMagesvaran"},"content":"import java.util.Scanner;"},{"lineNumber":2,"author":{"gitId":"DineshMagesvaran"},"content":""},{"lineNumber":3,"author":{"gitId":"DineshMagesvaran"},"content":"/**"},{"lineNumber":4,"author":{"gitId":"DineshMagesvaran"},"content":" * Class that can create a user interface object that"},{"lineNumber":5,"author":{"gitId":"DineshMagesvaran"},"content":" * can deal with inteactions between the user and the"},{"lineNumber":6,"author":{"gitId":"DineshMagesvaran"},"content":" * application."},{"lineNumber":7,"author":{"gitId":"DineshMagesvaran"},"content":" */"},{"lineNumber":8,"author":{"gitId":"DineshMagesvaran"},"content":"public class UI {"},{"lineNumber":9,"author":{"gitId":"DineshMagesvaran"},"content":"    private Parser parser;"},{"lineNumber":10,"author":{"gitId":"DineshMagesvaran"},"content":""},{"lineNumber":11,"author":{"gitId":"DineshMagesvaran"},"content":"    /**"},{"lineNumber":12,"author":{"gitId":"DineshMagesvaran"},"content":"     * Constructor that creates a UI object."},{"lineNumber":13,"author":{"gitId":"DineshMagesvaran"},"content":"     */"},{"lineNumber":14,"author":{"gitId":"DineshMagesvaran"},"content":"    public UI() {"},{"lineNumber":15,"author":{"gitId":"DineshMagesvaran"},"content":"        parser \u003d new Parser();"},{"lineNumber":16,"author":{"gitId":"DineshMagesvaran"},"content":"    }"},{"lineNumber":17,"author":{"gitId":"DineshMagesvaran"},"content":""},{"lineNumber":18,"author":{"gitId":"DineshMagesvaran"},"content":"    /**"},{"lineNumber":19,"author":{"gitId":"DineshMagesvaran"},"content":"     * Method that launches the UI for the user."},{"lineNumber":20,"author":{"gitId":"DineshMagesvaran"},"content":"     *"},{"lineNumber":21,"author":{"gitId":"DineshMagesvaran"},"content":"     * @param listOfTasks list of tasks available upon launching"},{"lineNumber":22,"author":{"gitId":"DineshMagesvaran"},"content":"     *                    the UI."},{"lineNumber":23,"author":{"gitId":"DineshMagesvaran"},"content":"     */"},{"lineNumber":24,"author":{"gitId":"DineshMagesvaran"},"content":"    public void launchUI(TaskList listOfTasks) {"},{"lineNumber":25,"author":{"gitId":"DineshMagesvaran"},"content":"        Scanner read \u003d new Scanner(System.in);"},{"lineNumber":26,"author":{"gitId":"DineshMagesvaran"},"content":""},{"lineNumber":27,"author":{"gitId":"DineshMagesvaran"},"content":"        System.out.println(\"\\t_____________________________________________________________\");"},{"lineNumber":28,"author":{"gitId":"DineshMagesvaran"},"content":"        System.out.println(\"\\t Hello! I\u0027m Duke\\n\\t What can I do for you\");"},{"lineNumber":29,"author":{"gitId":"DineshMagesvaran"},"content":"        System.out.println(\"\\t_____________________________________________________________\");"},{"lineNumber":30,"author":{"gitId":"DineshMagesvaran"},"content":""},{"lineNumber":31,"author":{"gitId":"DineshMagesvaran"},"content":"        String textInput \u003d read.nextLine();"},{"lineNumber":32,"author":{"gitId":"DineshMagesvaran"},"content":"        Boolean checkBye \u003d false;"},{"lineNumber":33,"author":{"gitId":"DineshMagesvaran"},"content":"        if (textInput.toLowerCase().equals(\"bye\")) {"},{"lineNumber":34,"author":{"gitId":"DineshMagesvaran"},"content":"            checkBye \u003d true;"},{"lineNumber":35,"author":{"gitId":"DineshMagesvaran"},"content":"        }"},{"lineNumber":36,"author":{"gitId":"DineshMagesvaran"},"content":""},{"lineNumber":37,"author":{"gitId":"DineshMagesvaran"},"content":"        while (!checkBye) {"},{"lineNumber":38,"author":{"gitId":"DineshMagesvaran"},"content":"            parser.executeCommand(listOfTasks, textInput);"},{"lineNumber":39,"author":{"gitId":"DineshMagesvaran"},"content":"            textInput \u003d read.nextLine();"},{"lineNumber":40,"author":{"gitId":"DineshMagesvaran"},"content":"            if (textInput.toLowerCase().equals(\"bye\")) {"},{"lineNumber":41,"author":{"gitId":"DineshMagesvaran"},"content":"                checkBye \u003d true;"},{"lineNumber":42,"author":{"gitId":"DineshMagesvaran"},"content":"            }"},{"lineNumber":43,"author":{"gitId":"DineshMagesvaran"},"content":"        }"},{"lineNumber":44,"author":{"gitId":"DineshMagesvaran"},"content":""},{"lineNumber":45,"author":{"gitId":"DineshMagesvaran"},"content":"        System.out.println(\"\\t_____________________________________________________________\");"},{"lineNumber":46,"author":{"gitId":"DineshMagesvaran"},"content":"        System.out.println(\"\\t Bye. Hope to see you again soon!\");"},{"lineNumber":47,"author":{"gitId":"DineshMagesvaran"},"content":"        System.out.println(\"\\t_____________________________________________________________\");"},{"lineNumber":48,"author":{"gitId":"DineshMagesvaran"},"content":"    }"},{"lineNumber":49,"author":{"gitId":"DineshMagesvaran"},"content":"}"}],"authorContributionMap":{"DineshMagesvaran":49}},{"path":"src/test/java/DeadlineTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"DineshMagesvaran"},"content":"import org.junit.jupiter.api.Test;"},{"lineNumber":2,"author":{"gitId":"DineshMagesvaran"},"content":"import java.time.LocalDate;"},{"lineNumber":3,"author":{"gitId":"DineshMagesvaran"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;"},{"lineNumber":4,"author":{"gitId":"DineshMagesvaran"},"content":""},{"lineNumber":5,"author":{"gitId":"DineshMagesvaran"},"content":"public class DeadlineTest {"},{"lineNumber":6,"author":{"gitId":"DineshMagesvaran"},"content":"    @Test"},{"lineNumber":7,"author":{"gitId":"DineshMagesvaran"},"content":"    public void toStringTest() {"},{"lineNumber":8,"author":{"gitId":"DineshMagesvaran"},"content":"        assertEquals(\"[D][ ] example deadline task (05 Jan 2021)\","},{"lineNumber":9,"author":{"gitId":"DineshMagesvaran"},"content":"                new Deadline(\"example deadline task\", LocalDate.parse(\"2021-01-05\")).toString());"},{"lineNumber":10,"author":{"gitId":"DineshMagesvaran"},"content":"    }"},{"lineNumber":11,"author":{"gitId":"DineshMagesvaran"},"content":""},{"lineNumber":12,"author":{"gitId":"DineshMagesvaran"},"content":"    @Test"},{"lineNumber":13,"author":{"gitId":"DineshMagesvaran"},"content":"    public void getDataTest() {"},{"lineNumber":14,"author":{"gitId":"DineshMagesvaran"},"content":"        assertEquals(\"D!@#0!@#example deadline task!@#2021-01-05\","},{"lineNumber":15,"author":{"gitId":"DineshMagesvaran"},"content":"                new Deadline(\"example deadline task\", LocalDate.parse(\"2021-01-05\")).getData());"},{"lineNumber":16,"author":{"gitId":"DineshMagesvaran"},"content":"    }"},{"lineNumber":17,"author":{"gitId":"DineshMagesvaran"},"content":"}"}],"authorContributionMap":{"DineshMagesvaran":17}},{"path":"src/test/java/EventTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"DineshMagesvaran"},"content":"import org.junit.jupiter.api.Test;"},{"lineNumber":2,"author":{"gitId":"DineshMagesvaran"},"content":""},{"lineNumber":3,"author":{"gitId":"DineshMagesvaran"},"content":"import java.time.LocalDate;"},{"lineNumber":4,"author":{"gitId":"DineshMagesvaran"},"content":""},{"lineNumber":5,"author":{"gitId":"DineshMagesvaran"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;"},{"lineNumber":6,"author":{"gitId":"DineshMagesvaran"},"content":""},{"lineNumber":7,"author":{"gitId":"DineshMagesvaran"},"content":"public class EventTest {"},{"lineNumber":8,"author":{"gitId":"DineshMagesvaran"},"content":"    @Test"},{"lineNumber":9,"author":{"gitId":"DineshMagesvaran"},"content":"    public void toStringTest() {"},{"lineNumber":10,"author":{"gitId":"DineshMagesvaran"},"content":"        assertEquals(\"[E][ ] example event task (05 Jan 2021 to 06 Jan 2021)\","},{"lineNumber":11,"author":{"gitId":"DineshMagesvaran"},"content":"                new Event(\"example event task\", LocalDate.parse(\"2021-01-05\"),"},{"lineNumber":12,"author":{"gitId":"DineshMagesvaran"},"content":"                        LocalDate.parse(\"2021-01-06\")).toString());"},{"lineNumber":13,"author":{"gitId":"DineshMagesvaran"},"content":"    }"},{"lineNumber":14,"author":{"gitId":"DineshMagesvaran"},"content":""},{"lineNumber":15,"author":{"gitId":"DineshMagesvaran"},"content":"    @Test"},{"lineNumber":16,"author":{"gitId":"DineshMagesvaran"},"content":"    public void getDataTest() {"},{"lineNumber":17,"author":{"gitId":"DineshMagesvaran"},"content":"        assertEquals(\"E!@#0!@#example event task!@#2021-01-05!@#2021-01-06\","},{"lineNumber":18,"author":{"gitId":"DineshMagesvaran"},"content":"                new Event(\"example event task\", LocalDate.parse(\"2021-01-05\"),"},{"lineNumber":19,"author":{"gitId":"DineshMagesvaran"},"content":"                        LocalDate.parse(\"2021-01-06\")).getData());"},{"lineNumber":20,"author":{"gitId":"DineshMagesvaran"},"content":"    }"},{"lineNumber":21,"author":{"gitId":"DineshMagesvaran"},"content":"}"}],"authorContributionMap":{"DineshMagesvaran":21}},{"path":"src/test/java/TodoTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"DineshMagesvaran"},"content":"import org.junit.jupiter.api.Test;"},{"lineNumber":2,"author":{"gitId":"DineshMagesvaran"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;"},{"lineNumber":3,"author":{"gitId":"DineshMagesvaran"},"content":""},{"lineNumber":4,"author":{"gitId":"DineshMagesvaran"},"content":"public class TodoTest {"},{"lineNumber":5,"author":{"gitId":"DineshMagesvaran"},"content":"    @Test"},{"lineNumber":6,"author":{"gitId":"DineshMagesvaran"},"content":"    public void toStringTest() {"},{"lineNumber":7,"author":{"gitId":"DineshMagesvaran"},"content":"        assertEquals(\"[T][ ] example todo task\", new ToDo(\"example todo task\").toString());"},{"lineNumber":8,"author":{"gitId":"DineshMagesvaran"},"content":"    }"},{"lineNumber":9,"author":{"gitId":"DineshMagesvaran"},"content":""},{"lineNumber":10,"author":{"gitId":"DineshMagesvaran"},"content":"    @Test"},{"lineNumber":11,"author":{"gitId":"DineshMagesvaran"},"content":"    public void getDataTest() {"},{"lineNumber":12,"author":{"gitId":"DineshMagesvaran"},"content":"        assertEquals(\"T!@#0!@#example todo task\",new ToDo(\"example todo task\").getData());"},{"lineNumber":13,"author":{"gitId":"DineshMagesvaran"},"content":"    }"},{"lineNumber":14,"author":{"gitId":"DineshMagesvaran"},"content":"}"}],"authorContributionMap":{"DineshMagesvaran":14}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"DineshMagesvaran"},"content":"todo clean my room"},{"lineNumber":2,"author":{"gitId":"DineshMagesvaran"},"content":"deadline submit project /tonight 2359"},{"lineNumber":3,"author":{"gitId":"DineshMagesvaran"},"content":"list"},{"lineNumber":4,"author":{"gitId":"DineshMagesvaran"},"content":"done 1"},{"lineNumber":5,"author":{"gitId":"DineshMagesvaran"},"content":"event attend meeting /Fri 2pm-3pm"},{"lineNumber":6,"author":{"gitId":"DineshMagesvaran"},"content":"list"},{"lineNumber":7,"author":{"gitId":"DineshMagesvaran"},"content":"bye"}],"authorContributionMap":{"DineshMagesvaran":7}}]
