[{"path":"README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"# Duke project template"},{"lineNumber":2,"author":{"gitId":"-"},"content":""},{"lineNumber":3,"author":{"gitId":"-"},"content":"This is a project template for a greenfield Java project. It\u0027s named after the Java mascot _Duke_. Given below are instructions on how to use it."},{"lineNumber":4,"author":{"gitId":"-"},"content":""},{"lineNumber":5,"author":{"gitId":"-"},"content":"## Setting up in Intellij"},{"lineNumber":6,"author":{"gitId":"-"},"content":""},{"lineNumber":7,"author":{"gitId":"-"},"content":"Prerequisites: JDK 11, update Intellij to the most recent version."},{"lineNumber":8,"author":{"gitId":"-"},"content":""},{"lineNumber":9,"author":{"gitId":"adidoesnt"},"content":"1. Open Intellij (if you are not in the welcome screen, click `File` \u003e `Close Project` to close the existing project first)"},{"lineNumber":10,"author":{"gitId":"adidoesnt"},"content":"1. Open the project into Intellij as follows:"},{"lineNumber":11,"author":{"gitId":"adidoesnt"},"content":"   1. Click `Open`."},{"lineNumber":12,"author":{"gitId":"adidoesnt"},"content":"   1. Select the project directory, and click `OK`."},{"lineNumber":13,"author":{"gitId":"-"},"content":"   1. If there are any further prompts, accept the defaults."},{"lineNumber":14,"author":{"gitId":"adidoesnt"},"content":"1. Configure the project to use **JDK 11** (not other versions) as explained in [here](https://www.jetbrains.com/help/idea/sdk.html#set-up-jdk)."},{"lineNumber":15,"author":{"gitId":"adidoesnt"},"content":"1. After that, locate the `src/main/java/Duke.java` file, right-click it, and choose `Run Duke.main()`. If the setup is correct, you should see something like the below:"},{"lineNumber":16,"author":{"gitId":"-"},"content":"   ```"},{"lineNumber":17,"author":{"gitId":"-"},"content":"   Hello from"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    ____        _        "},{"lineNumber":19,"author":{"gitId":"-"},"content":"   |  _ \\ _   _| | _____ "},{"lineNumber":20,"author":{"gitId":"-"},"content":"   | | | | | | | |/ / _ \\"},{"lineNumber":21,"author":{"gitId":"-"},"content":"   | |_| | |_| |   \u003c  __/"},{"lineNumber":22,"author":{"gitId":"-"},"content":"   |____/ \\__,_|_|\\_\\___|"},{"lineNumber":23,"author":{"gitId":"-"},"content":"   ```"}],"authorContributionMap":{"adidoesnt":6,"-":17}},{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"adidoesnt"},"content":"plugins {"},{"lineNumber":2,"author":{"gitId":"adidoesnt"},"content":"    id \u0027java\u0027"},{"lineNumber":3,"author":{"gitId":"adidoesnt"},"content":"    id \u0027application\u0027"},{"lineNumber":4,"author":{"gitId":"adidoesnt"},"content":"    id \"com.github.johnrengelman.shadow\" version \"6.1.0\""},{"lineNumber":5,"author":{"gitId":"adidoesnt"},"content":"    id \u0027checkstyle\u0027"},{"lineNumber":6,"author":{"gitId":"adidoesnt"},"content":"}"},{"lineNumber":7,"author":{"gitId":"adidoesnt"},"content":""},{"lineNumber":8,"author":{"gitId":"adidoesnt"},"content":"repositories {"},{"lineNumber":9,"author":{"gitId":"adidoesnt"},"content":"    mavenCentral()"},{"lineNumber":10,"author":{"gitId":"adidoesnt"},"content":"    jcenter()"},{"lineNumber":11,"author":{"gitId":"adidoesnt"},"content":"    google()"},{"lineNumber":12,"author":{"gitId":"adidoesnt"},"content":"    maven {"},{"lineNumber":13,"author":{"gitId":"adidoesnt"},"content":"        url \"https://maven.springframework.org/release\""},{"lineNumber":14,"author":{"gitId":"adidoesnt"},"content":"    }"},{"lineNumber":15,"author":{"gitId":"adidoesnt"},"content":"    maven {"},{"lineNumber":16,"author":{"gitId":"adidoesnt"},"content":"        url \"https://maven.restlet.com\""},{"lineNumber":17,"author":{"gitId":"adidoesnt"},"content":"    }"},{"lineNumber":18,"author":{"gitId":"adidoesnt"},"content":"}"},{"lineNumber":19,"author":{"gitId":"adidoesnt"},"content":""},{"lineNumber":20,"author":{"gitId":"adidoesnt"},"content":"dependencies {"},{"lineNumber":21,"author":{"gitId":"adidoesnt"},"content":"    implementation \u0027org.jetbrains:annotations:20.1.0\u0027"},{"lineNumber":22,"author":{"gitId":"adidoesnt"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.6.0\u0027"},{"lineNumber":23,"author":{"gitId":"adidoesnt"},"content":"    testRuntimeOnly \u0027org.junit.jupiter:junit-jupiter-engine\u0027"},{"lineNumber":24,"author":{"gitId":"adidoesnt"},"content":"    String javaFxVersion \u003d \u002711\u0027"},{"lineNumber":25,"author":{"gitId":"adidoesnt"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027"},{"lineNumber":26,"author":{"gitId":"adidoesnt"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"},{"lineNumber":27,"author":{"gitId":"adidoesnt"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"},{"lineNumber":28,"author":{"gitId":"adidoesnt"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027"},{"lineNumber":29,"author":{"gitId":"adidoesnt"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"},{"lineNumber":30,"author":{"gitId":"adidoesnt"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"},{"lineNumber":31,"author":{"gitId":"adidoesnt"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027"},{"lineNumber":32,"author":{"gitId":"adidoesnt"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"},{"lineNumber":33,"author":{"gitId":"adidoesnt"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"},{"lineNumber":34,"author":{"gitId":"adidoesnt"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027"},{"lineNumber":35,"author":{"gitId":"adidoesnt"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"},{"lineNumber":36,"author":{"gitId":"adidoesnt"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"},{"lineNumber":37,"author":{"gitId":"adidoesnt"},"content":"}"},{"lineNumber":38,"author":{"gitId":"adidoesnt"},"content":""},{"lineNumber":39,"author":{"gitId":"adidoesnt"},"content":"application {"},{"lineNumber":40,"author":{"gitId":"adidoesnt"},"content":"    mainClassName \u003d \"duke.Launcher\""},{"lineNumber":41,"author":{"gitId":"adidoesnt"},"content":"}"},{"lineNumber":42,"author":{"gitId":"adidoesnt"},"content":""},{"lineNumber":43,"author":{"gitId":"adidoesnt"},"content":"test {"},{"lineNumber":44,"author":{"gitId":"adidoesnt"},"content":"    useJUnitPlatform()"},{"lineNumber":45,"author":{"gitId":"adidoesnt"},"content":"}"},{"lineNumber":46,"author":{"gitId":"adidoesnt"},"content":""},{"lineNumber":47,"author":{"gitId":"adidoesnt"},"content":"checkstyle {"},{"lineNumber":48,"author":{"gitId":"adidoesnt"},"content":"    toolVersion \u003d \u00278.29\u0027"},{"lineNumber":49,"author":{"gitId":"adidoesnt"},"content":"}"},{"lineNumber":50,"author":{"gitId":"adidoesnt"},"content":""},{"lineNumber":51,"author":{"gitId":"adidoesnt"},"content":"run {"},{"lineNumber":52,"author":{"gitId":"adidoesnt"},"content":"    enableAssertions \u003d true"},{"lineNumber":53,"author":{"gitId":"adidoesnt"},"content":"}"}],"authorContributionMap":{"adidoesnt":53}},{"path":"docs/README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"adidoesnt"},"content":"# User Guide - Features "},{"lineNumber":2,"author":{"gitId":"-"},"content":""},{"lineNumber":3,"author":{"gitId":"adidoesnt"},"content":"## UI Sample"},{"lineNumber":4,"author":{"gitId":"adidoesnt"},"content":"![image](Ui.png)"},{"lineNumber":5,"author":{"gitId":"adidoesnt"},"content":"\u003cbr\u003e"},{"lineNumber":6,"author":{"gitId":"-"},"content":""},{"lineNumber":7,"author":{"gitId":"adidoesnt"},"content":"## `ToDo`"},{"lineNumber":8,"author":{"gitId":"-"},"content":""},{"lineNumber":9,"author":{"gitId":"adidoesnt"},"content":"### Usage"},{"lineNumber":10,"author":{"gitId":"adidoesnt"},"content":"`todo` *Description of Task*"},{"lineNumber":11,"author":{"gitId":"-"},"content":""},{"lineNumber":12,"author":{"gitId":"adidoesnt"},"content":"### Action"},{"lineNumber":13,"author":{"gitId":"adidoesnt"},"content":"Adds a new task of type \"ToDo\" to the task list."},{"lineNumber":14,"author":{"gitId":"-"},"content":""},{"lineNumber":15,"author":{"gitId":"adidoesnt"},"content":"### Example of usage: "},{"lineNumber":16,"author":{"gitId":"adidoesnt"},"content":"`todo` *buy groceries*"},{"lineNumber":17,"author":{"gitId":"-"},"content":""},{"lineNumber":18,"author":{"gitId":"adidoesnt"},"content":"### Expected outcome:"},{"lineNumber":19,"author":{"gitId":"adidoesnt"},"content":"Added Task!"},{"lineNumber":20,"author":{"gitId":"-"},"content":""},{"lineNumber":21,"author":{"gitId":"adidoesnt"},"content":"## `Deadline`"},{"lineNumber":22,"author":{"gitId":"-"},"content":""},{"lineNumber":23,"author":{"gitId":"adidoesnt"},"content":"### Usage"},{"lineNumber":24,"author":{"gitId":"adidoesnt"},"content":"`deadline` *Description of Task*/by *DD.MM.YYYY HH:MM*"},{"lineNumber":25,"author":{"gitId":"-"},"content":""},{"lineNumber":26,"author":{"gitId":"adidoesnt"},"content":"### Action"},{"lineNumber":27,"author":{"gitId":"adidoesnt"},"content":"Adds a new task of type \"Deadline\" to the task list."},{"lineNumber":28,"author":{"gitId":"adidoesnt"},"content":""},{"lineNumber":29,"author":{"gitId":"adidoesnt"},"content":"### Example of usage: "},{"lineNumber":30,"author":{"gitId":"adidoesnt"},"content":"`deadline` *return library book*/by *14.02.2021 14:00*"},{"lineNumber":31,"author":{"gitId":"adidoesnt"},"content":""},{"lineNumber":32,"author":{"gitId":"adidoesnt"},"content":"### Expected outcome:"},{"lineNumber":33,"author":{"gitId":"adidoesnt"},"content":"Added Task!"},{"lineNumber":34,"author":{"gitId":"adidoesnt"},"content":""},{"lineNumber":35,"author":{"gitId":"adidoesnt"},"content":"## `Event`"},{"lineNumber":36,"author":{"gitId":"adidoesnt"},"content":""},{"lineNumber":37,"author":{"gitId":"adidoesnt"},"content":"### Usage"},{"lineNumber":38,"author":{"gitId":"adidoesnt"},"content":"`event` *Description of Task*/from *DD.MM.YYYY HH:MM* to *DD.MM.YYYY HH:MM*"},{"lineNumber":39,"author":{"gitId":"adidoesnt"},"content":""},{"lineNumber":40,"author":{"gitId":"adidoesnt"},"content":"### Action"},{"lineNumber":41,"author":{"gitId":"adidoesnt"},"content":"Adds a new task of type \"Event\" to the task list."},{"lineNumber":42,"author":{"gitId":"adidoesnt"},"content":""},{"lineNumber":43,"author":{"gitId":"adidoesnt"},"content":"### Example of usage: "},{"lineNumber":44,"author":{"gitId":"adidoesnt"},"content":"`event` *Marcus\u0027s birthday party*/from *14.02.2021 18:00* to *14.02.2021 23:30*"},{"lineNumber":45,"author":{"gitId":"adidoesnt"},"content":""},{"lineNumber":46,"author":{"gitId":"adidoesnt"},"content":"### Expected outcome:"},{"lineNumber":47,"author":{"gitId":"adidoesnt"},"content":"Added Task!"},{"lineNumber":48,"author":{"gitId":"adidoesnt"},"content":""},{"lineNumber":49,"author":{"gitId":"adidoesnt"},"content":"## `List`"},{"lineNumber":50,"author":{"gitId":"adidoesnt"},"content":""},{"lineNumber":51,"author":{"gitId":"adidoesnt"},"content":"### Usage"},{"lineNumber":52,"author":{"gitId":"adidoesnt"},"content":"`list`"},{"lineNumber":53,"author":{"gitId":"adidoesnt"},"content":""},{"lineNumber":54,"author":{"gitId":"adidoesnt"},"content":"### Action"},{"lineNumber":55,"author":{"gitId":"adidoesnt"},"content":"Lists all tasks currently in the task list."},{"lineNumber":56,"author":{"gitId":"adidoesnt"},"content":""},{"lineNumber":57,"author":{"gitId":"adidoesnt"},"content":"### Example of usage: "},{"lineNumber":58,"author":{"gitId":"adidoesnt"},"content":"`list`"},{"lineNumber":59,"author":{"gitId":"adidoesnt"},"content":""},{"lineNumber":60,"author":{"gitId":"adidoesnt"},"content":"### Expected outcome:"},{"lineNumber":61,"author":{"gitId":"adidoesnt"},"content":"All Tasks:   "},{"lineNumber":62,"author":{"gitId":"adidoesnt"},"content":"[T][] buy groceries  "},{"lineNumber":63,"author":{"gitId":"adidoesnt"},"content":"[D][] deadline return library book/by Sun Feb 14 14:00:00 SGT 2021  "},{"lineNumber":64,"author":{"gitId":"adidoesnt"},"content":"[E][] Marcus\u0027s birthday party/from Sun Feb 14 18:00:00 SGT 2021 to Sun Feb 14 23:30:00 SGT 2021  "},{"lineNumber":65,"author":{"gitId":"adidoesnt"},"content":""},{"lineNumber":66,"author":{"gitId":"adidoesnt"},"content":"## `Complete`"},{"lineNumber":67,"author":{"gitId":"adidoesnt"},"content":""},{"lineNumber":68,"author":{"gitId":"adidoesnt"},"content":"### Usage"},{"lineNumber":69,"author":{"gitId":"adidoesnt"},"content":"`complete` *Task Type* *Task Description*"},{"lineNumber":70,"author":{"gitId":"adidoesnt"},"content":""},{"lineNumber":71,"author":{"gitId":"adidoesnt"},"content":"### Action"},{"lineNumber":72,"author":{"gitId":"adidoesnt"},"content":"Finds and marks the desired task complete."},{"lineNumber":73,"author":{"gitId":"adidoesnt"},"content":""},{"lineNumber":74,"author":{"gitId":"adidoesnt"},"content":"### Example of usage: "},{"lineNumber":75,"author":{"gitId":"adidoesnt"},"content":"`complete` *todo buy groceries*  "},{"lineNumber":76,"author":{"gitId":"adidoesnt"},"content":"`complete` *deadline* *return library book/by 14.02.2021 14:00*  "},{"lineNumber":77,"author":{"gitId":"adidoesnt"},"content":"`complete` *event* *Marcus\u0027s birthday party/from 14.02.2021 18:00 to 14.02.2021 23:30*"},{"lineNumber":78,"author":{"gitId":"adidoesnt"},"content":""},{"lineNumber":79,"author":{"gitId":"adidoesnt"},"content":"### Expected outcome:"},{"lineNumber":80,"author":{"gitId":"adidoesnt"},"content":"Task marked complete!"},{"lineNumber":81,"author":{"gitId":"adidoesnt"},"content":""},{"lineNumber":82,"author":{"gitId":"adidoesnt"},"content":"## `Remove`"},{"lineNumber":83,"author":{"gitId":"adidoesnt"},"content":""},{"lineNumber":84,"author":{"gitId":"adidoesnt"},"content":"### Usage"},{"lineNumber":85,"author":{"gitId":"adidoesnt"},"content":"`remove` *Task Type* *Task Description*"},{"lineNumber":86,"author":{"gitId":"adidoesnt"},"content":""},{"lineNumber":87,"author":{"gitId":"adidoesnt"},"content":"### Action"},{"lineNumber":88,"author":{"gitId":"adidoesnt"},"content":"Finds and removes the desired task from the task list."},{"lineNumber":89,"author":{"gitId":"adidoesnt"},"content":""},{"lineNumber":90,"author":{"gitId":"adidoesnt"},"content":"### Example of usage: "},{"lineNumber":91,"author":{"gitId":"adidoesnt"},"content":"`remove` *todo buy groceries*"},{"lineNumber":92,"author":{"gitId":"adidoesnt"},"content":"`remove` *deadline* *return library book/by 14.02.2021 14:00*  "},{"lineNumber":93,"author":{"gitId":"adidoesnt"},"content":"`remove` *event* *Marcus\u0027s birthday party/from 14.02.2021 18:00 to 14.02.2021 23:30*"},{"lineNumber":94,"author":{"gitId":"adidoesnt"},"content":""},{"lineNumber":95,"author":{"gitId":"adidoesnt"},"content":"### Expected outcome:"},{"lineNumber":96,"author":{"gitId":"adidoesnt"},"content":"Task removed."},{"lineNumber":97,"author":{"gitId":"adidoesnt"},"content":""},{"lineNumber":98,"author":{"gitId":"adidoesnt"},"content":"## `Find`"},{"lineNumber":99,"author":{"gitId":"adidoesnt"},"content":""},{"lineNumber":100,"author":{"gitId":"adidoesnt"},"content":"### Usage"},{"lineNumber":101,"author":{"gitId":"adidoesnt"},"content":"`find` *Key Word*"},{"lineNumber":102,"author":{"gitId":"adidoesnt"},"content":""},{"lineNumber":103,"author":{"gitId":"adidoesnt"},"content":"### Action"},{"lineNumber":104,"author":{"gitId":"adidoesnt"},"content":"Finds and lists all tasks from the task list that contain the entered key word."},{"lineNumber":105,"author":{"gitId":"adidoesnt"},"content":""},{"lineNumber":106,"author":{"gitId":"adidoesnt"},"content":"### Example of usage: "},{"lineNumber":107,"author":{"gitId":"adidoesnt"},"content":"`find` *book*"},{"lineNumber":108,"author":{"gitId":"adidoesnt"},"content":""},{"lineNumber":109,"author":{"gitId":"adidoesnt"},"content":"### Expected outcome:"},{"lineNumber":110,"author":{"gitId":"adidoesnt"},"content":"There were 1 tasks containing your keyword:   "},{"lineNumber":111,"author":{"gitId":"adidoesnt"},"content":"1: [D][] deadline return library book/by Sun Feb 14 14:00:00 SGT 2021"},{"lineNumber":112,"author":{"gitId":"adidoesnt"},"content":""},{"lineNumber":113,"author":{"gitId":"adidoesnt"},"content":"## `Help`"},{"lineNumber":114,"author":{"gitId":"adidoesnt"},"content":""},{"lineNumber":115,"author":{"gitId":"adidoesnt"},"content":"### Usage"},{"lineNumber":116,"author":{"gitId":"adidoesnt"},"content":"`help`"},{"lineNumber":117,"author":{"gitId":"adidoesnt"},"content":""},{"lineNumber":118,"author":{"gitId":"adidoesnt"},"content":"### Action"},{"lineNumber":119,"author":{"gitId":"adidoesnt"},"content":"Lists all commandss accepted by Duke"},{"lineNumber":120,"author":{"gitId":"adidoesnt"},"content":""},{"lineNumber":121,"author":{"gitId":"adidoesnt"},"content":"### Example of usage: "},{"lineNumber":122,"author":{"gitId":"adidoesnt"},"content":"`help`"},{"lineNumber":123,"author":{"gitId":"adidoesnt"},"content":""},{"lineNumber":124,"author":{"gitId":"adidoesnt"},"content":"### Expected outcome:"},{"lineNumber":125,"author":{"gitId":"adidoesnt"},"content":"Enter one of the following commands:  "},{"lineNumber":126,"author":{"gitId":"adidoesnt"},"content":"[1] Hello  "},{"lineNumber":127,"author":{"gitId":"adidoesnt"},"content":"[2] Todo \u003cDescription of Task\u003e  "},{"lineNumber":128,"author":{"gitId":"adidoesnt"},"content":"[3] Deadline \u003cDescription of Task\u003e/by \u003cDD.MM.YYYY HH:MM\u003e  "},{"lineNumber":129,"author":{"gitId":"adidoesnt"},"content":"[4] Event \u003cDescription of Task\u003e/from \u003cDD.MM.YYYY HH:MM\u003e to \u003cDD.MM.YYYY HH:MM\u003e  "},{"lineNumber":130,"author":{"gitId":"adidoesnt"},"content":"[5] List  "},{"lineNumber":131,"author":{"gitId":"adidoesnt"},"content":"[6] Find \u003cKey Word\u003e  "},{"lineNumber":132,"author":{"gitId":"adidoesnt"},"content":"[7] Complete \u003cTask Type\u003e \u003cDescription\u003e  "},{"lineNumber":133,"author":{"gitId":"adidoesnt"},"content":"[8] Remove \u003cTask Type\u003e \u003cDescription\u003e  "},{"lineNumber":134,"author":{"gitId":"adidoesnt"},"content":"[9] Help  "},{"lineNumber":135,"author":{"gitId":"adidoesnt"},"content":"[10] Bye  "},{"lineNumber":136,"author":{"gitId":"adidoesnt"},"content":""},{"lineNumber":137,"author":{"gitId":"adidoesnt"},"content":"## `Hello`"},{"lineNumber":138,"author":{"gitId":"adidoesnt"},"content":""},{"lineNumber":139,"author":{"gitId":"adidoesnt"},"content":"### Usage"},{"lineNumber":140,"author":{"gitId":"adidoesnt"},"content":"`hello`"},{"lineNumber":141,"author":{"gitId":"adidoesnt"},"content":""},{"lineNumber":142,"author":{"gitId":"adidoesnt"},"content":"### Action"},{"lineNumber":143,"author":{"gitId":"adidoesnt"},"content":"If entered upon launch, prompts a greeting and an instruction from Duke. Subsequently prompts an instruction from Duke only."},{"lineNumber":144,"author":{"gitId":"adidoesnt"},"content":""},{"lineNumber":145,"author":{"gitId":"adidoesnt"},"content":"### Example of usage: "},{"lineNumber":146,"author":{"gitId":"adidoesnt"},"content":"`hello`"},{"lineNumber":147,"author":{"gitId":"adidoesnt"},"content":""},{"lineNumber":148,"author":{"gitId":"adidoesnt"},"content":"### Expected outcome:"},{"lineNumber":149,"author":{"gitId":"adidoesnt"},"content":"Please enter a command."},{"lineNumber":150,"author":{"gitId":"adidoesnt"},"content":""},{"lineNumber":151,"author":{"gitId":"adidoesnt"},"content":"## `Bye`"},{"lineNumber":152,"author":{"gitId":"adidoesnt"},"content":""},{"lineNumber":153,"author":{"gitId":"adidoesnt"},"content":"### Usage"},{"lineNumber":154,"author":{"gitId":"adidoesnt"},"content":"`bye`"},{"lineNumber":155,"author":{"gitId":"adidoesnt"},"content":""},{"lineNumber":156,"author":{"gitId":"adidoesnt"},"content":"### Action"},{"lineNumber":157,"author":{"gitId":"adidoesnt"},"content":"Exits the application."},{"lineNumber":158,"author":{"gitId":"adidoesnt"},"content":""},{"lineNumber":159,"author":{"gitId":"adidoesnt"},"content":"### Example of usage: "},{"lineNumber":160,"author":{"gitId":"adidoesnt"},"content":"`bye`"},{"lineNumber":161,"author":{"gitId":"adidoesnt"},"content":""},{"lineNumber":162,"author":{"gitId":"adidoesnt"},"content":"### Expected outcome:"},{"lineNumber":163,"author":{"gitId":"adidoesnt"},"content":"Closure of application."}],"authorContributionMap":{"adidoesnt":154,"-":9}},{"path":"gradlew.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"adidoesnt"},"content":"@rem"},{"lineNumber":2,"author":{"gitId":"adidoesnt"},"content":"@rem Copyright 2015 the original author or authors."},{"lineNumber":3,"author":{"gitId":"adidoesnt"},"content":"@rem"},{"lineNumber":4,"author":{"gitId":"adidoesnt"},"content":"@rem Licensed under the Apache License, Version 2.0 (the \"License\");"},{"lineNumber":5,"author":{"gitId":"adidoesnt"},"content":"@rem you may not use this file except in compliance with the License."},{"lineNumber":6,"author":{"gitId":"adidoesnt"},"content":"@rem You may obtain a copy of the License at"},{"lineNumber":7,"author":{"gitId":"adidoesnt"},"content":"@rem"},{"lineNumber":8,"author":{"gitId":"adidoesnt"},"content":"@rem      https://www.apache.org/licenses/LICENSE-2.0"},{"lineNumber":9,"author":{"gitId":"adidoesnt"},"content":"@rem"},{"lineNumber":10,"author":{"gitId":"adidoesnt"},"content":"@rem Unless required by applicable law or agreed to in writing, software"},{"lineNumber":11,"author":{"gitId":"adidoesnt"},"content":"@rem distributed under the License is distributed on an \"AS IS\" BASIS,"},{"lineNumber":12,"author":{"gitId":"adidoesnt"},"content":"@rem WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied."},{"lineNumber":13,"author":{"gitId":"adidoesnt"},"content":"@rem See the License for the specific language governing permissions and"},{"lineNumber":14,"author":{"gitId":"adidoesnt"},"content":"@rem limitations under the License."},{"lineNumber":15,"author":{"gitId":"adidoesnt"},"content":"@rem"},{"lineNumber":16,"author":{"gitId":"adidoesnt"},"content":""},{"lineNumber":17,"author":{"gitId":"adidoesnt"},"content":"@if \"%DEBUG%\" \u003d\u003d \"\" @echo off"},{"lineNumber":18,"author":{"gitId":"adidoesnt"},"content":"@rem ##########################################################################"},{"lineNumber":19,"author":{"gitId":"adidoesnt"},"content":"@rem"},{"lineNumber":20,"author":{"gitId":"adidoesnt"},"content":"@rem  Gradle startup script for Windows"},{"lineNumber":21,"author":{"gitId":"adidoesnt"},"content":"@rem"},{"lineNumber":22,"author":{"gitId":"adidoesnt"},"content":"@rem ##########################################################################"},{"lineNumber":23,"author":{"gitId":"adidoesnt"},"content":""},{"lineNumber":24,"author":{"gitId":"adidoesnt"},"content":"@rem Set local scope for the variables with windows NT shell"},{"lineNumber":25,"author":{"gitId":"adidoesnt"},"content":"if \"%OS%\"\u003d\u003d\"Windows_NT\" setlocal"},{"lineNumber":26,"author":{"gitId":"adidoesnt"},"content":""},{"lineNumber":27,"author":{"gitId":"adidoesnt"},"content":"set DIRNAME\u003d%~dp0"},{"lineNumber":28,"author":{"gitId":"adidoesnt"},"content":"if \"%DIRNAME%\" \u003d\u003d \"\" set DIRNAME\u003d."},{"lineNumber":29,"author":{"gitId":"adidoesnt"},"content":"set APP_BASE_NAME\u003d%~n0"},{"lineNumber":30,"author":{"gitId":"adidoesnt"},"content":"set APP_HOME\u003d%DIRNAME%"},{"lineNumber":31,"author":{"gitId":"adidoesnt"},"content":""},{"lineNumber":32,"author":{"gitId":"adidoesnt"},"content":"@rem Resolve any \".\" and \"..\" in APP_HOME to make it shorter."},{"lineNumber":33,"author":{"gitId":"adidoesnt"},"content":"for %%i in (\"%APP_HOME%\") do set APP_HOME\u003d%%~fi"},{"lineNumber":34,"author":{"gitId":"adidoesnt"},"content":""},{"lineNumber":35,"author":{"gitId":"adidoesnt"},"content":"@rem Add default JVM options here. You can also use JAVA_OPTS and GRADLE_OPTS to pass JVM options to this script."},{"lineNumber":36,"author":{"gitId":"adidoesnt"},"content":"set DEFAULT_JVM_OPTS\u003d\"-Xmx64m\" \"-Xms64m\""},{"lineNumber":37,"author":{"gitId":"adidoesnt"},"content":""},{"lineNumber":38,"author":{"gitId":"adidoesnt"},"content":"@rem Find java.exe"},{"lineNumber":39,"author":{"gitId":"adidoesnt"},"content":"if defined JAVA_HOME goto findJavaFromJavaHome"},{"lineNumber":40,"author":{"gitId":"adidoesnt"},"content":""},{"lineNumber":41,"author":{"gitId":"adidoesnt"},"content":"set JAVA_EXE\u003djava.exe"},{"lineNumber":42,"author":{"gitId":"adidoesnt"},"content":"%JAVA_EXE% -version \u003eNUL 2\u003e\u00261"},{"lineNumber":43,"author":{"gitId":"adidoesnt"},"content":"if \"%ERRORLEVEL%\" \u003d\u003d \"0\" goto execute"},{"lineNumber":44,"author":{"gitId":"adidoesnt"},"content":""},{"lineNumber":45,"author":{"gitId":"adidoesnt"},"content":"echo."},{"lineNumber":46,"author":{"gitId":"adidoesnt"},"content":"echo ERROR: JAVA_HOME is not set and no \u0027java\u0027 command could be found in your PATH."},{"lineNumber":47,"author":{"gitId":"adidoesnt"},"content":"echo."},{"lineNumber":48,"author":{"gitId":"adidoesnt"},"content":"echo Please set the JAVA_HOME variable in your environment to match the"},{"lineNumber":49,"author":{"gitId":"adidoesnt"},"content":"echo location of your Java installation."},{"lineNumber":50,"author":{"gitId":"adidoesnt"},"content":""},{"lineNumber":51,"author":{"gitId":"adidoesnt"},"content":"goto fail"},{"lineNumber":52,"author":{"gitId":"adidoesnt"},"content":""},{"lineNumber":53,"author":{"gitId":"adidoesnt"},"content":":findJavaFromJavaHome"},{"lineNumber":54,"author":{"gitId":"adidoesnt"},"content":"set JAVA_HOME\u003d%JAVA_HOME:\"\u003d%"},{"lineNumber":55,"author":{"gitId":"adidoesnt"},"content":"set JAVA_EXE\u003d%JAVA_HOME%/bin/java.exe"},{"lineNumber":56,"author":{"gitId":"adidoesnt"},"content":""},{"lineNumber":57,"author":{"gitId":"adidoesnt"},"content":"if exist \"%JAVA_EXE%\" goto execute"},{"lineNumber":58,"author":{"gitId":"adidoesnt"},"content":""},{"lineNumber":59,"author":{"gitId":"adidoesnt"},"content":"echo."},{"lineNumber":60,"author":{"gitId":"adidoesnt"},"content":"echo ERROR: JAVA_HOME is set to an invalid directory: %JAVA_HOME%"},{"lineNumber":61,"author":{"gitId":"adidoesnt"},"content":"echo."},{"lineNumber":62,"author":{"gitId":"adidoesnt"},"content":"echo Please set the JAVA_HOME variable in your environment to match the"},{"lineNumber":63,"author":{"gitId":"adidoesnt"},"content":"echo location of your Java installation."},{"lineNumber":64,"author":{"gitId":"adidoesnt"},"content":""},{"lineNumber":65,"author":{"gitId":"adidoesnt"},"content":"goto fail"},{"lineNumber":66,"author":{"gitId":"adidoesnt"},"content":""},{"lineNumber":67,"author":{"gitId":"adidoesnt"},"content":":execute"},{"lineNumber":68,"author":{"gitId":"adidoesnt"},"content":"@rem Setup the command line"},{"lineNumber":69,"author":{"gitId":"adidoesnt"},"content":""},{"lineNumber":70,"author":{"gitId":"adidoesnt"},"content":"set CLASSPATH\u003d%APP_HOME%\\gradle\\wrapper\\gradle-wrapper.jar"},{"lineNumber":71,"author":{"gitId":"adidoesnt"},"content":""},{"lineNumber":72,"author":{"gitId":"adidoesnt"},"content":""},{"lineNumber":73,"author":{"gitId":"adidoesnt"},"content":"@rem Execute Gradle"},{"lineNumber":74,"author":{"gitId":"adidoesnt"},"content":"\"%JAVA_EXE%\" %DEFAULT_JVM_OPTS% %JAVA_OPTS% %GRADLE_OPTS% \"-Dorg.gradle.appname\u003d%APP_BASE_NAME%\" -classpath \"%CLASSPATH%\" org.gradle.wrapper.GradleWrapperMain %*"},{"lineNumber":75,"author":{"gitId":"adidoesnt"},"content":""},{"lineNumber":76,"author":{"gitId":"adidoesnt"},"content":":end"},{"lineNumber":77,"author":{"gitId":"adidoesnt"},"content":"@rem End local scope for the variables with windows NT shell"},{"lineNumber":78,"author":{"gitId":"adidoesnt"},"content":"if \"%ERRORLEVEL%\"\u003d\u003d\"0\" goto mainEnd"},{"lineNumber":79,"author":{"gitId":"adidoesnt"},"content":""},{"lineNumber":80,"author":{"gitId":"adidoesnt"},"content":":fail"},{"lineNumber":81,"author":{"gitId":"adidoesnt"},"content":"rem Set variable GRADLE_EXIT_CONSOLE if you need the _script_ return code instead of"},{"lineNumber":82,"author":{"gitId":"adidoesnt"},"content":"rem the _cmd.exe /c_ return code!"},{"lineNumber":83,"author":{"gitId":"adidoesnt"},"content":"if  not \"\" \u003d\u003d \"%GRADLE_EXIT_CONSOLE%\" exit 1"},{"lineNumber":84,"author":{"gitId":"adidoesnt"},"content":"exit /b 1"},{"lineNumber":85,"author":{"gitId":"adidoesnt"},"content":""},{"lineNumber":86,"author":{"gitId":"adidoesnt"},"content":":mainEnd"},{"lineNumber":87,"author":{"gitId":"adidoesnt"},"content":"if \"%OS%\"\u003d\u003d\"Windows_NT\" endlocal"},{"lineNumber":88,"author":{"gitId":"adidoesnt"},"content":""},{"lineNumber":89,"author":{"gitId":"adidoesnt"},"content":":omega"}],"authorContributionMap":{"adidoesnt":89}},{"path":"src/main/data/duke.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"adidoesnt"},"content":"[T][X] buy groceries"},{"lineNumber":2,"author":{"gitId":"adidoesnt"},"content":"[D][] submit IP/by Thu Jan 14 14:00:00 SGT 2021"},{"lineNumber":3,"author":{"gitId":"adidoesnt"},"content":"[E][] John birthday/from Thu Jan 14 18:00:00 SGT 2021 to Thu Jan 14 21:00:00 SGT 2021"}],"authorContributionMap":{"adidoesnt":3}},{"path":"src/main/java/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"adidoesnt"},"content":"import java.util.Scanner;"},{"lineNumber":2,"author":{"gitId":"adidoesnt"},"content":"import java.util.List;"},{"lineNumber":3,"author":{"gitId":"adidoesnt"},"content":"import java.util.ArrayList;"},{"lineNumber":4,"author":{"gitId":"adidoesnt"},"content":"import java.lang.Exception;"},{"lineNumber":5,"author":{"gitId":"adidoesnt"},"content":""},{"lineNumber":6,"author":{"gitId":"adidoesnt"},"content":"class DukeException extends Exception {"},{"lineNumber":7,"author":{"gitId":"adidoesnt"},"content":"    public DukeException(String errorMessage) {"},{"lineNumber":8,"author":{"gitId":"adidoesnt"},"content":"        super(errorMessage);"},{"lineNumber":9,"author":{"gitId":"adidoesnt"},"content":"    }"},{"lineNumber":10,"author":{"gitId":"adidoesnt"},"content":"}"},{"lineNumber":11,"author":{"gitId":"adidoesnt"},"content":""},{"lineNumber":12,"author":{"gitId":"adidoesnt"},"content":"class EmptyDescriptionException extends DukeException {"},{"lineNumber":13,"author":{"gitId":"adidoesnt"},"content":"    public EmptyDescriptionException(String errorMessage) {"},{"lineNumber":14,"author":{"gitId":"adidoesnt"},"content":"        super(errorMessage);"},{"lineNumber":15,"author":{"gitId":"adidoesnt"},"content":"    }"},{"lineNumber":16,"author":{"gitId":"adidoesnt"},"content":"}"},{"lineNumber":17,"author":{"gitId":"adidoesnt"},"content":"class InvalidCommandException extends DukeException {"},{"lineNumber":18,"author":{"gitId":"adidoesnt"},"content":"    public InvalidCommandException(String errorMessage) {"},{"lineNumber":19,"author":{"gitId":"adidoesnt"},"content":"        super(errorMessage);"},{"lineNumber":20,"author":{"gitId":"adidoesnt"},"content":"    }"},{"lineNumber":21,"author":{"gitId":"adidoesnt"},"content":"}"},{"lineNumber":22,"author":{"gitId":"adidoesnt"},"content":""},{"lineNumber":23,"author":{"gitId":"adidoesnt"},"content":"class Task {"},{"lineNumber":24,"author":{"gitId":"adidoesnt"},"content":"    public String name;"},{"lineNumber":25,"author":{"gitId":"adidoesnt"},"content":"    public String checkBox;"},{"lineNumber":26,"author":{"gitId":"adidoesnt"},"content":""},{"lineNumber":27,"author":{"gitId":"adidoesnt"},"content":"    public Task(String name){"},{"lineNumber":28,"author":{"gitId":"adidoesnt"},"content":"        this.name \u003d name;"},{"lineNumber":29,"author":{"gitId":"adidoesnt"},"content":"        this.checkBox \u003d \"[ ]\";"},{"lineNumber":30,"author":{"gitId":"adidoesnt"},"content":"    }"},{"lineNumber":31,"author":{"gitId":"adidoesnt"},"content":""},{"lineNumber":32,"author":{"gitId":"adidoesnt"},"content":"    public void completeTask(){"},{"lineNumber":33,"author":{"gitId":"adidoesnt"},"content":"        this.checkBox \u003d \"[X]\";"},{"lineNumber":34,"author":{"gitId":"adidoesnt"},"content":"    }"},{"lineNumber":35,"author":{"gitId":"adidoesnt"},"content":""},{"lineNumber":36,"author":{"gitId":"adidoesnt"},"content":"    @Override"},{"lineNumber":37,"author":{"gitId":"adidoesnt"},"content":"    public String toString(){"},{"lineNumber":38,"author":{"gitId":"adidoesnt"},"content":"        return this.checkBox + \" \" + this.name;"},{"lineNumber":39,"author":{"gitId":"adidoesnt"},"content":"    }"},{"lineNumber":40,"author":{"gitId":"adidoesnt"},"content":"}"},{"lineNumber":41,"author":{"gitId":"adidoesnt"},"content":""},{"lineNumber":42,"author":{"gitId":"adidoesnt"},"content":"class ToDo extends Task {"},{"lineNumber":43,"author":{"gitId":"adidoesnt"},"content":"    public String type;"},{"lineNumber":44,"author":{"gitId":"adidoesnt"},"content":""},{"lineNumber":45,"author":{"gitId":"adidoesnt"},"content":"    public ToDo (String name){"},{"lineNumber":46,"author":{"gitId":"adidoesnt"},"content":"        super(name);"},{"lineNumber":47,"author":{"gitId":"adidoesnt"},"content":"        this.type \u003d \"[T]\";"},{"lineNumber":48,"author":{"gitId":"adidoesnt"},"content":"    }"},{"lineNumber":49,"author":{"gitId":"adidoesnt"},"content":""},{"lineNumber":50,"author":{"gitId":"adidoesnt"},"content":"    @Override"},{"lineNumber":51,"author":{"gitId":"adidoesnt"},"content":"    public String toString(){"},{"lineNumber":52,"author":{"gitId":"adidoesnt"},"content":"        return this.type + this.checkBox + \" \" + this.name;"},{"lineNumber":53,"author":{"gitId":"adidoesnt"},"content":"    }"},{"lineNumber":54,"author":{"gitId":"adidoesnt"},"content":"}"},{"lineNumber":55,"author":{"gitId":"adidoesnt"},"content":""},{"lineNumber":56,"author":{"gitId":"adidoesnt"},"content":"class Deadline extends Task {"},{"lineNumber":57,"author":{"gitId":"adidoesnt"},"content":"    public String type;"},{"lineNumber":58,"author":{"gitId":"adidoesnt"},"content":"    public String date;"},{"lineNumber":59,"author":{"gitId":"adidoesnt"},"content":""},{"lineNumber":60,"author":{"gitId":"adidoesnt"},"content":"    public Deadline (String name, String date){"},{"lineNumber":61,"author":{"gitId":"adidoesnt"},"content":"        super(name);"},{"lineNumber":62,"author":{"gitId":"adidoesnt"},"content":"        this.date \u003d date;"},{"lineNumber":63,"author":{"gitId":"adidoesnt"},"content":"        this.type \u003d \"[D]\";"},{"lineNumber":64,"author":{"gitId":"adidoesnt"},"content":"    }"},{"lineNumber":65,"author":{"gitId":"adidoesnt"},"content":""},{"lineNumber":66,"author":{"gitId":"adidoesnt"},"content":"    @Override"},{"lineNumber":67,"author":{"gitId":"adidoesnt"},"content":"    public String toString(){"},{"lineNumber":68,"author":{"gitId":"adidoesnt"},"content":"        return this.type + this.checkBox + \" \" + this.name + \" \" + this.date;"},{"lineNumber":69,"author":{"gitId":"adidoesnt"},"content":"    }"},{"lineNumber":70,"author":{"gitId":"adidoesnt"},"content":"}"},{"lineNumber":71,"author":{"gitId":"adidoesnt"},"content":""},{"lineNumber":72,"author":{"gitId":"adidoesnt"},"content":"class Event extends Task {"},{"lineNumber":73,"author":{"gitId":"adidoesnt"},"content":"    public String type;"},{"lineNumber":74,"author":{"gitId":"adidoesnt"},"content":"    public String time;"},{"lineNumber":75,"author":{"gitId":"adidoesnt"},"content":""},{"lineNumber":76,"author":{"gitId":"adidoesnt"},"content":"    public Event(String name, String time){"},{"lineNumber":77,"author":{"gitId":"adidoesnt"},"content":"        super(name);"},{"lineNumber":78,"author":{"gitId":"adidoesnt"},"content":"        this.time \u003d time;"},{"lineNumber":79,"author":{"gitId":"adidoesnt"},"content":"        this.type \u003d \"[E]\";"},{"lineNumber":80,"author":{"gitId":"adidoesnt"},"content":"    }"},{"lineNumber":81,"author":{"gitId":"adidoesnt"},"content":""},{"lineNumber":82,"author":{"gitId":"adidoesnt"},"content":"    @Override"},{"lineNumber":83,"author":{"gitId":"adidoesnt"},"content":"    public String toString(){"},{"lineNumber":84,"author":{"gitId":"adidoesnt"},"content":"        return this.type + this.checkBox + \" \" + this.name + \" \" + this.time;"},{"lineNumber":85,"author":{"gitId":"adidoesnt"},"content":"    }"},{"lineNumber":86,"author":{"gitId":"adidoesnt"},"content":"}"},{"lineNumber":87,"author":{"gitId":"adidoesnt"},"content":""},{"lineNumber":88,"author":{"gitId":"-"},"content":"public class Duke {"},{"lineNumber":89,"author":{"gitId":"adidoesnt"},"content":"    public static Scanner input \u003d new Scanner(System.in);"},{"lineNumber":90,"author":{"gitId":"adidoesnt"},"content":"    public static List\u003cTask\u003e list \u003d new ArrayList\u003c\u003e();"},{"lineNumber":91,"author":{"gitId":"adidoesnt"},"content":""},{"lineNumber":92,"author":{"gitId":"adidoesnt"},"content":"    public static void printList(){"},{"lineNumber":93,"author":{"gitId":"adidoesnt"},"content":"        for(int i \u003d 0; i \u003c Duke.list.size(); i++){"},{"lineNumber":94,"author":{"gitId":"adidoesnt"},"content":"            System.out.println((i+1) + \": \" + Duke.list.get(i));"},{"lineNumber":95,"author":{"gitId":"adidoesnt"},"content":"        }"},{"lineNumber":96,"author":{"gitId":"adidoesnt"},"content":"    }"},{"lineNumber":97,"author":{"gitId":"adidoesnt"},"content":""},{"lineNumber":98,"author":{"gitId":"adidoesnt"},"content":"    public static String commandBuilder(String[] commandArray){"},{"lineNumber":99,"author":{"gitId":"adidoesnt"},"content":"        String result \u003d \"\";"},{"lineNumber":100,"author":{"gitId":"adidoesnt"},"content":"        for(int i \u003d 1; i \u003c commandArray.length; i++){"},{"lineNumber":101,"author":{"gitId":"adidoesnt"},"content":"            result +\u003d commandArray[i] + \" \";"},{"lineNumber":102,"author":{"gitId":"adidoesnt"},"content":"        }"},{"lineNumber":103,"author":{"gitId":"adidoesnt"},"content":"        return result;"},{"lineNumber":104,"author":{"gitId":"adidoesnt"},"content":"    }"},{"lineNumber":105,"author":{"gitId":"adidoesnt"},"content":""},{"lineNumber":106,"author":{"gitId":"adidoesnt"},"content":"    public static void main(String[] args) throws EmptyDescriptionException, InvalidCommandException {"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        String logo \u003d \" ____        _        \\n\""},{"lineNumber":108,"author":{"gitId":"-"},"content":"                + \"|  _ \\\\ _   _| | _____ \\n\""},{"lineNumber":109,"author":{"gitId":"-"},"content":"                + \"| | | | | | | |/ / _ \\\\\\n\""},{"lineNumber":110,"author":{"gitId":"-"},"content":"                + \"| |_| | |_| |   \u003c  __/\\n\""},{"lineNumber":111,"author":{"gitId":"-"},"content":"                + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\";"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        System.out.println(\"Hello from\\n\" + logo);"},{"lineNumber":113,"author":{"gitId":"adidoesnt"},"content":"        System.out.println(\"Hello! I\u0027m Duke\");"},{"lineNumber":114,"author":{"gitId":"adidoesnt"},"content":"        System.out.println(\"What can I do for you?\");"},{"lineNumber":115,"author":{"gitId":"adidoesnt"},"content":""},{"lineNumber":116,"author":{"gitId":"adidoesnt"},"content":"        while(true) {"},{"lineNumber":117,"author":{"gitId":"adidoesnt"},"content":"            String command \u003d input.nextLine();"},{"lineNumber":118,"author":{"gitId":"adidoesnt"},"content":"            if(command.equals(\"bye\")) {"},{"lineNumber":119,"author":{"gitId":"adidoesnt"},"content":"                System.out.println(\"Bye. Hope to see you again soon!\");"},{"lineNumber":120,"author":{"gitId":"adidoesnt"},"content":"                break;"},{"lineNumber":121,"author":{"gitId":"adidoesnt"},"content":"            } else if (command.equals(\"list\")) {"},{"lineNumber":122,"author":{"gitId":"adidoesnt"},"content":"                Duke.printList();"},{"lineNumber":123,"author":{"gitId":"adidoesnt"},"content":"            } else if(command.contains(\"done\")){"},{"lineNumber":124,"author":{"gitId":"adidoesnt"},"content":"                String[] doneCommand \u003d command.split(\" \");"},{"lineNumber":125,"author":{"gitId":"adidoesnt"},"content":"                Duke.list.get(Integer.parseInt(doneCommand[1]) - 1).completeTask();"},{"lineNumber":126,"author":{"gitId":"adidoesnt"},"content":"                System.out.println(\"Nice! I\u0027ve marked this task as done: \");"},{"lineNumber":127,"author":{"gitId":"adidoesnt"},"content":"                System.out.println(Duke.list.get(Integer.parseInt(doneCommand[1]) - 1));"},{"lineNumber":128,"author":{"gitId":"adidoesnt"},"content":"            } else if(command.contains(\"todo\")){"},{"lineNumber":129,"author":{"gitId":"adidoesnt"},"content":"                String[] commandArray \u003d command.split( \" \");"},{"lineNumber":130,"author":{"gitId":"adidoesnt"},"content":"                if(commandArray.length \u003d\u003d 1){"},{"lineNumber":131,"author":{"gitId":"adidoesnt"},"content":"                    throw new EmptyDescriptionException(\"OOPS!!! The description of a todo cannot be empty.\");"},{"lineNumber":132,"author":{"gitId":"adidoesnt"},"content":"                }"},{"lineNumber":133,"author":{"gitId":"adidoesnt"},"content":"                ToDo newTodo \u003d new ToDo(commandBuilder(commandArray));"},{"lineNumber":134,"author":{"gitId":"adidoesnt"},"content":"                Duke.list.add(newTodo);"},{"lineNumber":135,"author":{"gitId":"adidoesnt"},"content":"                System.out.println(\"Got it. I\u0027ve added this task: \");"},{"lineNumber":136,"author":{"gitId":"adidoesnt"},"content":"                System.out.println(newTodo);"},{"lineNumber":137,"author":{"gitId":"adidoesnt"},"content":"                System.out.println(\"Now you have \" + Duke.list.size() + \" tasks in the list.\");"},{"lineNumber":138,"author":{"gitId":"adidoesnt"},"content":"            } else if (command.contains(\"deadline\")){"},{"lineNumber":139,"author":{"gitId":"adidoesnt"},"content":"                String[] commandArray \u003d command.split( \" \");"},{"lineNumber":140,"author":{"gitId":"adidoesnt"},"content":"                String[] commandArray2 \u003d commandBuilder(commandArray).split(\"/\");"},{"lineNumber":141,"author":{"gitId":"adidoesnt"},"content":"                Deadline newDeadline \u003d new Deadline(commandArray2[0], commandArray2[1]);"},{"lineNumber":142,"author":{"gitId":"adidoesnt"},"content":"                Duke.list.add(newDeadline);"},{"lineNumber":143,"author":{"gitId":"adidoesnt"},"content":"                System.out.println(\"Got it. I\u0027ve added this task: \");"},{"lineNumber":144,"author":{"gitId":"adidoesnt"},"content":"                System.out.println(newDeadline);"},{"lineNumber":145,"author":{"gitId":"adidoesnt"},"content":"                System.out.println(\"Now you have \" + Duke.list.size() + \" tasks in the list.\");"},{"lineNumber":146,"author":{"gitId":"adidoesnt"},"content":"            } else if (command.contains(\"event\")) {"},{"lineNumber":147,"author":{"gitId":"adidoesnt"},"content":"                String[] commandArray \u003d command.split(\" \");"},{"lineNumber":148,"author":{"gitId":"adidoesnt"},"content":"                String[] commandArray2 \u003d commandBuilder(commandArray).split(\"/\");"},{"lineNumber":149,"author":{"gitId":"adidoesnt"},"content":"                Event newEvent \u003d new Event(commandArray2[0], commandArray2[1]);"},{"lineNumber":150,"author":{"gitId":"adidoesnt"},"content":"                Duke.list.add(newEvent);"},{"lineNumber":151,"author":{"gitId":"adidoesnt"},"content":"                System.out.println(\"Got it. I\u0027ve added this task: \");"},{"lineNumber":152,"author":{"gitId":"adidoesnt"},"content":"                System.out.println(newEvent);"},{"lineNumber":153,"author":{"gitId":"adidoesnt"},"content":"                System.out.println(\"Now you have \" + Duke.list.size() + \" tasks in the list.\");"},{"lineNumber":154,"author":{"gitId":"adidoesnt"},"content":"            } else if (command.contains(\"delete\")) {"},{"lineNumber":155,"author":{"gitId":"adidoesnt"},"content":"                String[] deleteCommand \u003d command.split(\" \");"},{"lineNumber":156,"author":{"gitId":"adidoesnt"},"content":"                System.out.println(\"Noted. I\u0027ve removed this task: \");"},{"lineNumber":157,"author":{"gitId":"adidoesnt"},"content":"                System.out.println(Duke.list.get(Integer.parseInt(deleteCommand[1]) - 1));"},{"lineNumber":158,"author":{"gitId":"adidoesnt"},"content":"                Duke.list.remove(Integer.valueOf(deleteCommand[1]) - 1);"},{"lineNumber":159,"author":{"gitId":"adidoesnt"},"content":"            } else {"},{"lineNumber":160,"author":{"gitId":"adidoesnt"},"content":"                throw new InvalidCommandException(\"OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\");"},{"lineNumber":161,"author":{"gitId":"adidoesnt"},"content":"            }"},{"lineNumber":162,"author":{"gitId":"adidoesnt"},"content":"        }"},{"lineNumber":163,"author":{"gitId":"adidoesnt"},"content":""},{"lineNumber":164,"author":{"gitId":"adidoesnt"},"content":"        System.exit(0);"},{"lineNumber":165,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":166,"author":{"gitId":"-"},"content":"}"}],"authorContributionMap":{"adidoesnt":157,"-":9}},{"path":"src/main/java/duke/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"adidoesnt"},"content":"package duke;"},{"lineNumber":2,"author":{"gitId":"adidoesnt"},"content":""},{"lineNumber":3,"author":{"gitId":"adidoesnt"},"content":"public enum Command {"},{"lineNumber":4,"author":{"gitId":"adidoesnt"},"content":"    TODO, HELLO, DEADLINE, EVENT, LIST, FIND, COMPLETE, REMOVE, BYE, HELP;"},{"lineNumber":5,"author":{"gitId":"adidoesnt"},"content":""},{"lineNumber":6,"author":{"gitId":"adidoesnt"},"content":"    @Override"},{"lineNumber":7,"author":{"gitId":"adidoesnt"},"content":"    public String toString() {"},{"lineNumber":8,"author":{"gitId":"adidoesnt"},"content":"        return this.name().toLowerCase();"},{"lineNumber":9,"author":{"gitId":"adidoesnt"},"content":"    }"},{"lineNumber":10,"author":{"gitId":"adidoesnt"},"content":"}"}],"authorContributionMap":{"adidoesnt":10}},{"path":"src/main/java/duke/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"adidoesnt"},"content":"package duke;"},{"lineNumber":2,"author":{"gitId":"adidoesnt"},"content":""},{"lineNumber":3,"author":{"gitId":"adidoesnt"},"content":"import java.util.Date;"},{"lineNumber":4,"author":{"gitId":"adidoesnt"},"content":""},{"lineNumber":5,"author":{"gitId":"adidoesnt"},"content":"public class Deadline extends Task {"},{"lineNumber":6,"author":{"gitId":"adidoesnt"},"content":"    public Date date;"},{"lineNumber":7,"author":{"gitId":"adidoesnt"},"content":""},{"lineNumber":8,"author":{"gitId":"adidoesnt"},"content":"    public Deadline(String description, Date date) {"},{"lineNumber":9,"author":{"gitId":"adidoesnt"},"content":"        super(description, \"[D]\");"},{"lineNumber":10,"author":{"gitId":"adidoesnt"},"content":"        this.date \u003d date;"},{"lineNumber":11,"author":{"gitId":"adidoesnt"},"content":"    }"},{"lineNumber":12,"author":{"gitId":"adidoesnt"},"content":""},{"lineNumber":13,"author":{"gitId":"adidoesnt"},"content":"    @Override"},{"lineNumber":14,"author":{"gitId":"adidoesnt"},"content":"    public String toString(){"},{"lineNumber":15,"author":{"gitId":"adidoesnt"},"content":"        return this.typeBox + this.checkBox + \" \" + this.description + \"/by \" + this.date;"},{"lineNumber":16,"author":{"gitId":"adidoesnt"},"content":"    }"},{"lineNumber":17,"author":{"gitId":"adidoesnt"},"content":"}"}],"authorContributionMap":{"adidoesnt":17}},{"path":"src/main/java/duke/DialogBox.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"adidoesnt"},"content":"package duke;"},{"lineNumber":2,"author":{"gitId":"adidoesnt"},"content":""},{"lineNumber":3,"author":{"gitId":"adidoesnt"},"content":"import javafx.collections.FXCollections;"},{"lineNumber":4,"author":{"gitId":"adidoesnt"},"content":"import javafx.collections.ObservableList;"},{"lineNumber":5,"author":{"gitId":"adidoesnt"},"content":"import javafx.geometry.Pos;"},{"lineNumber":6,"author":{"gitId":"adidoesnt"},"content":"import javafx.scene.Node;"},{"lineNumber":7,"author":{"gitId":"adidoesnt"},"content":"import javafx.scene.control.Label;"},{"lineNumber":8,"author":{"gitId":"adidoesnt"},"content":"import javafx.scene.image.ImageView;"},{"lineNumber":9,"author":{"gitId":"adidoesnt"},"content":"import javafx.scene.layout.HBox;"},{"lineNumber":10,"author":{"gitId":"adidoesnt"},"content":""},{"lineNumber":11,"author":{"gitId":"adidoesnt"},"content":"public class DialogBox extends HBox {"},{"lineNumber":12,"author":{"gitId":"adidoesnt"},"content":"    private Label text;"},{"lineNumber":13,"author":{"gitId":"adidoesnt"},"content":"    private ImageView displayPicture;"},{"lineNumber":14,"author":{"gitId":"adidoesnt"},"content":""},{"lineNumber":15,"author":{"gitId":"adidoesnt"},"content":"    public DialogBox(Label l, ImageView iv) {"},{"lineNumber":16,"author":{"gitId":"adidoesnt"},"content":"        text \u003d l;"},{"lineNumber":17,"author":{"gitId":"adidoesnt"},"content":"        displayPicture \u003d iv;"},{"lineNumber":18,"author":{"gitId":"adidoesnt"},"content":""},{"lineNumber":19,"author":{"gitId":"adidoesnt"},"content":"        text.setWrapText(true);"},{"lineNumber":20,"author":{"gitId":"adidoesnt"},"content":"        displayPicture.setFitWidth(100.0);"},{"lineNumber":21,"author":{"gitId":"adidoesnt"},"content":"        displayPicture.setFitHeight(100.0);"},{"lineNumber":22,"author":{"gitId":"adidoesnt"},"content":""},{"lineNumber":23,"author":{"gitId":"adidoesnt"},"content":"        this.setAlignment(Pos.TOP_RIGHT);"},{"lineNumber":24,"author":{"gitId":"adidoesnt"},"content":"        this.getChildren().addAll(text, displayPicture);"},{"lineNumber":25,"author":{"gitId":"adidoesnt"},"content":"    }"},{"lineNumber":26,"author":{"gitId":"adidoesnt"},"content":""},{"lineNumber":27,"author":{"gitId":"adidoesnt"},"content":"    private void flip() {"},{"lineNumber":28,"author":{"gitId":"adidoesnt"},"content":"        this.setAlignment(Pos.TOP_LEFT);"},{"lineNumber":29,"author":{"gitId":"adidoesnt"},"content":"        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());"},{"lineNumber":30,"author":{"gitId":"adidoesnt"},"content":"        FXCollections.reverse(tmp);"},{"lineNumber":31,"author":{"gitId":"adidoesnt"},"content":"        this.getChildren().setAll(tmp);"},{"lineNumber":32,"author":{"gitId":"adidoesnt"},"content":"    }"},{"lineNumber":33,"author":{"gitId":"adidoesnt"},"content":""},{"lineNumber":34,"author":{"gitId":"adidoesnt"},"content":"    public static DialogBox getUserDialog(Label l, ImageView iv) {"},{"lineNumber":35,"author":{"gitId":"adidoesnt"},"content":"        return new DialogBox(l, iv);"},{"lineNumber":36,"author":{"gitId":"adidoesnt"},"content":"    }"},{"lineNumber":37,"author":{"gitId":"adidoesnt"},"content":""},{"lineNumber":38,"author":{"gitId":"adidoesnt"},"content":"    public static DialogBox getDukeDialog(Label l, ImageView iv) {"},{"lineNumber":39,"author":{"gitId":"adidoesnt"},"content":"        var db \u003d new DialogBox(l, iv);"},{"lineNumber":40,"author":{"gitId":"adidoesnt"},"content":"        db.flip();"},{"lineNumber":41,"author":{"gitId":"adidoesnt"},"content":"        return db;"},{"lineNumber":42,"author":{"gitId":"adidoesnt"},"content":"    }"},{"lineNumber":43,"author":{"gitId":"adidoesnt"},"content":"}"}],"authorContributionMap":{"adidoesnt":43}},{"path":"src/main/java/duke/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"adidoesnt"},"content":"package duke;"},{"lineNumber":2,"author":{"gitId":"adidoesnt"},"content":""},{"lineNumber":3,"author":{"gitId":"adidoesnt"},"content":"import javafx.application.Application;"},{"lineNumber":4,"author":{"gitId":"adidoesnt"},"content":"import javafx.scene.Scene;"},{"lineNumber":5,"author":{"gitId":"adidoesnt"},"content":"import javafx.scene.control.Button;"},{"lineNumber":6,"author":{"gitId":"adidoesnt"},"content":"import javafx.scene.control.ScrollPane;"},{"lineNumber":7,"author":{"gitId":"adidoesnt"},"content":"import javafx.scene.control.TextField;"},{"lineNumber":8,"author":{"gitId":"adidoesnt"},"content":"import javafx.scene.layout.AnchorPane;"},{"lineNumber":9,"author":{"gitId":"adidoesnt"},"content":"import javafx.scene.layout.VBox;"},{"lineNumber":10,"author":{"gitId":"adidoesnt"},"content":"import javafx.stage.Stage;"},{"lineNumber":11,"author":{"gitId":"adidoesnt"},"content":"import javafx.scene.layout.Region;"},{"lineNumber":12,"author":{"gitId":"adidoesnt"},"content":"import javafx.scene.control.Label;"},{"lineNumber":13,"author":{"gitId":"adidoesnt"},"content":"import javafx.scene.image.Image;"},{"lineNumber":14,"author":{"gitId":"adidoesnt"},"content":"import javafx.scene.image.ImageView;"},{"lineNumber":15,"author":{"gitId":"adidoesnt"},"content":""},{"lineNumber":16,"author":{"gitId":"adidoesnt"},"content":"import java.io.IOException;"},{"lineNumber":17,"author":{"gitId":"adidoesnt"},"content":"import java.text.ParseException;"},{"lineNumber":18,"author":{"gitId":"adidoesnt"},"content":""},{"lineNumber":19,"author":{"gitId":"adidoesnt"},"content":"public class Duke extends Application {"},{"lineNumber":20,"author":{"gitId":"adidoesnt"},"content":"    public Parser parser;"},{"lineNumber":21,"author":{"gitId":"adidoesnt"},"content":"    public static int counter \u003d 0;"},{"lineNumber":22,"author":{"gitId":"adidoesnt"},"content":""},{"lineNumber":23,"author":{"gitId":"adidoesnt"},"content":"    private Image user \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaUser.png\"));"},{"lineNumber":24,"author":{"gitId":"adidoesnt"},"content":"    private Image duke \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaDuke.png\"));"},{"lineNumber":25,"author":{"gitId":"adidoesnt"},"content":"    private ScrollPane scrollPane;"},{"lineNumber":26,"author":{"gitId":"adidoesnt"},"content":"    private VBox dialogContainer;"},{"lineNumber":27,"author":{"gitId":"adidoesnt"},"content":"    private TextField userInput;"},{"lineNumber":28,"author":{"gitId":"adidoesnt"},"content":"    private Button sendButton;"},{"lineNumber":29,"author":{"gitId":"adidoesnt"},"content":"    private Scene scene;"},{"lineNumber":30,"author":{"gitId":"adidoesnt"},"content":""},{"lineNumber":31,"author":{"gitId":"adidoesnt"},"content":"    /**"},{"lineNumber":32,"author":{"gitId":"adidoesnt"},"content":"     * Iteration 1:"},{"lineNumber":33,"author":{"gitId":"adidoesnt"},"content":"     * Creates a label with the specified text and adds it to the dialog container."},{"lineNumber":34,"author":{"gitId":"adidoesnt"},"content":"     * @param text String containing text to add"},{"lineNumber":35,"author":{"gitId":"adidoesnt"},"content":"     * @return a label with the specified text that has word wrap enabled."},{"lineNumber":36,"author":{"gitId":"adidoesnt"},"content":"     */"},{"lineNumber":37,"author":{"gitId":"adidoesnt"},"content":"    private Label getDialogLabel(String text) {"},{"lineNumber":38,"author":{"gitId":"adidoesnt"},"content":"        Label textToAdd \u003d new Label(text);"},{"lineNumber":39,"author":{"gitId":"adidoesnt"},"content":"        textToAdd.setWrapText(true);"},{"lineNumber":40,"author":{"gitId":"adidoesnt"},"content":"        return textToAdd;"},{"lineNumber":41,"author":{"gitId":"adidoesnt"},"content":"    }"},{"lineNumber":42,"author":{"gitId":"adidoesnt"},"content":""},{"lineNumber":43,"author":{"gitId":"adidoesnt"},"content":"    private String getResponse(String input) throws IOException, ParseException {"},{"lineNumber":44,"author":{"gitId":"adidoesnt"},"content":"        if (counter \u003d\u003d 0) {"},{"lineNumber":45,"author":{"gitId":"adidoesnt"},"content":"            this.parser.storage.importTasks();"},{"lineNumber":46,"author":{"gitId":"adidoesnt"},"content":"            counter++;"},{"lineNumber":47,"author":{"gitId":"adidoesnt"},"content":"            return \"Hello from Duke!\\n\" + parser.process(input);"},{"lineNumber":48,"author":{"gitId":"adidoesnt"},"content":"        }"},{"lineNumber":49,"author":{"gitId":"adidoesnt"},"content":"        return parser.process(input);"},{"lineNumber":50,"author":{"gitId":"adidoesnt"},"content":"    }"},{"lineNumber":51,"author":{"gitId":"adidoesnt"},"content":""},{"lineNumber":52,"author":{"gitId":"adidoesnt"},"content":"    private void handleUserInput() throws IOException, ParseException {"},{"lineNumber":53,"author":{"gitId":"adidoesnt"},"content":"        Label userText \u003d new Label(userInput.getText());"},{"lineNumber":54,"author":{"gitId":"adidoesnt"},"content":"        Label dukeText \u003d new Label(getResponse(userInput.getText()));"},{"lineNumber":55,"author":{"gitId":"adidoesnt"},"content":"        dialogContainer.getChildren().addAll("},{"lineNumber":56,"author":{"gitId":"adidoesnt"},"content":"                DialogBox.getUserDialog(userText, new ImageView(user)),"},{"lineNumber":57,"author":{"gitId":"adidoesnt"},"content":"                DialogBox.getDukeDialog(dukeText, new ImageView(duke))"},{"lineNumber":58,"author":{"gitId":"adidoesnt"},"content":"        );"},{"lineNumber":59,"author":{"gitId":"adidoesnt"},"content":"        userInput.clear();"},{"lineNumber":60,"author":{"gitId":"adidoesnt"},"content":"    }"},{"lineNumber":61,"author":{"gitId":"adidoesnt"},"content":""},{"lineNumber":62,"author":{"gitId":"adidoesnt"},"content":"    @Override"},{"lineNumber":63,"author":{"gitId":"adidoesnt"},"content":"    public void start(Stage stage) {"},{"lineNumber":64,"author":{"gitId":"adidoesnt"},"content":"        scrollPane \u003d new ScrollPane();"},{"lineNumber":65,"author":{"gitId":"adidoesnt"},"content":"        dialogContainer \u003d new VBox();"},{"lineNumber":66,"author":{"gitId":"adidoesnt"},"content":"        scrollPane.setContent(dialogContainer);"},{"lineNumber":67,"author":{"gitId":"adidoesnt"},"content":"        dialogContainer.heightProperty().addListener((observable) -\u003e scrollPane.setVvalue(1.0));"},{"lineNumber":68,"author":{"gitId":"adidoesnt"},"content":"        userInput \u003d new TextField();"},{"lineNumber":69,"author":{"gitId":"adidoesnt"},"content":"        sendButton \u003d new Button(\"Send\");"},{"lineNumber":70,"author":{"gitId":"adidoesnt"},"content":"        AnchorPane mainLayout \u003d new AnchorPane();"},{"lineNumber":71,"author":{"gitId":"adidoesnt"},"content":"        mainLayout.getChildren().addAll(scrollPane, userInput, sendButton);"},{"lineNumber":72,"author":{"gitId":"adidoesnt"},"content":"        scene \u003d new Scene(mainLayout);"},{"lineNumber":73,"author":{"gitId":"adidoesnt"},"content":"        stage.setScene(scene);"},{"lineNumber":74,"author":{"gitId":"adidoesnt"},"content":"        stage.show();"},{"lineNumber":75,"author":{"gitId":"adidoesnt"},"content":"        stage.setTitle(\"Duke\");"},{"lineNumber":76,"author":{"gitId":"adidoesnt"},"content":"        stage.setResizable(false);"},{"lineNumber":77,"author":{"gitId":"adidoesnt"},"content":"        stage.setMinHeight(600.0);"},{"lineNumber":78,"author":{"gitId":"adidoesnt"},"content":"        stage.setMinWidth(400.0);"},{"lineNumber":79,"author":{"gitId":"adidoesnt"},"content":"        mainLayout.setPrefSize(400.0, 600.0);"},{"lineNumber":80,"author":{"gitId":"adidoesnt"},"content":"        scrollPane.setPrefSize(385, 535);"},{"lineNumber":81,"author":{"gitId":"adidoesnt"},"content":"        scrollPane.setHbarPolicy(ScrollPane.ScrollBarPolicy.NEVER);"},{"lineNumber":82,"author":{"gitId":"adidoesnt"},"content":"        scrollPane.setVbarPolicy(ScrollPane.ScrollBarPolicy.ALWAYS);"},{"lineNumber":83,"author":{"gitId":"adidoesnt"},"content":"        scrollPane.setVvalue(1.0);"},{"lineNumber":84,"author":{"gitId":"adidoesnt"},"content":"        scrollPane.setFitToWidth(true);"},{"lineNumber":85,"author":{"gitId":"adidoesnt"},"content":"        dialogContainer.setPrefHeight(Region.USE_COMPUTED_SIZE);"},{"lineNumber":86,"author":{"gitId":"adidoesnt"},"content":"        userInput.setPrefWidth(325.0);"},{"lineNumber":87,"author":{"gitId":"adidoesnt"},"content":"        sendButton.setPrefWidth(55.0);"},{"lineNumber":88,"author":{"gitId":"adidoesnt"},"content":"        AnchorPane.setTopAnchor(scrollPane, 1.0);"},{"lineNumber":89,"author":{"gitId":"adidoesnt"},"content":"        AnchorPane.setBottomAnchor(sendButton, 1.0);"},{"lineNumber":90,"author":{"gitId":"adidoesnt"},"content":"        AnchorPane.setRightAnchor(sendButton, 1.0);"},{"lineNumber":91,"author":{"gitId":"adidoesnt"},"content":"        AnchorPane.setLeftAnchor(userInput , 1.0);"},{"lineNumber":92,"author":{"gitId":"adidoesnt"},"content":"        AnchorPane.setBottomAnchor(userInput, 1.0);"},{"lineNumber":93,"author":{"gitId":"adidoesnt"},"content":""},{"lineNumber":94,"author":{"gitId":"adidoesnt"},"content":"        sendButton.setOnMouseClicked((event) -\u003e {"},{"lineNumber":95,"author":{"gitId":"adidoesnt"},"content":"            dialogContainer.getChildren().add(getDialogLabel(userInput.getText()));"},{"lineNumber":96,"author":{"gitId":"adidoesnt"},"content":"            userInput.clear();"},{"lineNumber":97,"author":{"gitId":"adidoesnt"},"content":"        });"},{"lineNumber":98,"author":{"gitId":"adidoesnt"},"content":"        userInput.setOnAction((event) -\u003e {"},{"lineNumber":99,"author":{"gitId":"adidoesnt"},"content":"            dialogContainer.getChildren().add(getDialogLabel(userInput.getText()));"},{"lineNumber":100,"author":{"gitId":"adidoesnt"},"content":"            userInput.clear();"},{"lineNumber":101,"author":{"gitId":"adidoesnt"},"content":"        });"},{"lineNumber":102,"author":{"gitId":"adidoesnt"},"content":""},{"lineNumber":103,"author":{"gitId":"adidoesnt"},"content":"        sendButton.setOnMouseClicked((event) -\u003e {"},{"lineNumber":104,"author":{"gitId":"adidoesnt"},"content":"            try {"},{"lineNumber":105,"author":{"gitId":"adidoesnt"},"content":"                handleUserInput();"},{"lineNumber":106,"author":{"gitId":"adidoesnt"},"content":"            } catch (IOException | ParseException e) {"},{"lineNumber":107,"author":{"gitId":"adidoesnt"},"content":"                e.printStackTrace();"},{"lineNumber":108,"author":{"gitId":"adidoesnt"},"content":"            }"},{"lineNumber":109,"author":{"gitId":"adidoesnt"},"content":"        });"},{"lineNumber":110,"author":{"gitId":"adidoesnt"},"content":""},{"lineNumber":111,"author":{"gitId":"adidoesnt"},"content":"        userInput.setOnAction((event) -\u003e {"},{"lineNumber":112,"author":{"gitId":"adidoesnt"},"content":"            try {"},{"lineNumber":113,"author":{"gitId":"adidoesnt"},"content":"                handleUserInput();"},{"lineNumber":114,"author":{"gitId":"adidoesnt"},"content":"            } catch (IOException | ParseException e) {"},{"lineNumber":115,"author":{"gitId":"adidoesnt"},"content":"                e.printStackTrace();"},{"lineNumber":116,"author":{"gitId":"adidoesnt"},"content":"            }"},{"lineNumber":117,"author":{"gitId":"adidoesnt"},"content":"        });"},{"lineNumber":118,"author":{"gitId":"adidoesnt"},"content":"    }"},{"lineNumber":119,"author":{"gitId":"adidoesnt"},"content":""},{"lineNumber":120,"author":{"gitId":"adidoesnt"},"content":"    public Duke() throws IOException {"},{"lineNumber":121,"author":{"gitId":"adidoesnt"},"content":"        this.parser \u003d new Parser();"},{"lineNumber":122,"author":{"gitId":"adidoesnt"},"content":"    }"},{"lineNumber":123,"author":{"gitId":"adidoesnt"},"content":"}"}],"authorContributionMap":{"adidoesnt":123}},{"path":"src/main/java/duke/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"adidoesnt"},"content":"package duke;"},{"lineNumber":2,"author":{"gitId":"adidoesnt"},"content":""},{"lineNumber":3,"author":{"gitId":"adidoesnt"},"content":"public class DukeException extends Exception {"},{"lineNumber":4,"author":{"gitId":"adidoesnt"},"content":"    public DukeException(String errorMessage) {"},{"lineNumber":5,"author":{"gitId":"adidoesnt"},"content":"        super(errorMessage);"},{"lineNumber":6,"author":{"gitId":"adidoesnt"},"content":"    }"},{"lineNumber":7,"author":{"gitId":"adidoesnt"},"content":"}"}],"authorContributionMap":{"adidoesnt":7}},{"path":"src/main/java/duke/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"adidoesnt"},"content":"package duke;"},{"lineNumber":2,"author":{"gitId":"adidoesnt"},"content":""},{"lineNumber":3,"author":{"gitId":"adidoesnt"},"content":"import java.util.Date;"},{"lineNumber":4,"author":{"gitId":"adidoesnt"},"content":""},{"lineNumber":5,"author":{"gitId":"adidoesnt"},"content":"public class Event extends Task {"},{"lineNumber":6,"author":{"gitId":"adidoesnt"},"content":"    public Date start;"},{"lineNumber":7,"author":{"gitId":"adidoesnt"},"content":"    public Date end;"},{"lineNumber":8,"author":{"gitId":"adidoesnt"},"content":""},{"lineNumber":9,"author":{"gitId":"adidoesnt"},"content":"    public Event(String description, Date start, Date end) {"},{"lineNumber":10,"author":{"gitId":"adidoesnt"},"content":"        super(description, \"[E]\");"},{"lineNumber":11,"author":{"gitId":"adidoesnt"},"content":"        this.start \u003d start;"},{"lineNumber":12,"author":{"gitId":"adidoesnt"},"content":"        this.end \u003d end;"},{"lineNumber":13,"author":{"gitId":"adidoesnt"},"content":"    }"},{"lineNumber":14,"author":{"gitId":"adidoesnt"},"content":""},{"lineNumber":15,"author":{"gitId":"adidoesnt"},"content":"    @Override"},{"lineNumber":16,"author":{"gitId":"adidoesnt"},"content":"    public String toString(){"},{"lineNumber":17,"author":{"gitId":"adidoesnt"},"content":"        return this.typeBox + this.checkBox + \" \" + this.description + \"/from \" + this.start + \" to \" + this.end;"},{"lineNumber":18,"author":{"gitId":"adidoesnt"},"content":"    }"},{"lineNumber":19,"author":{"gitId":"adidoesnt"},"content":"}"}],"authorContributionMap":{"adidoesnt":19}},{"path":"src/main/java/duke/InvalidCommandException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"adidoesnt"},"content":"package duke;"},{"lineNumber":2,"author":{"gitId":"adidoesnt"},"content":""},{"lineNumber":3,"author":{"gitId":"adidoesnt"},"content":"public class InvalidCommandException extends DukeException {"},{"lineNumber":4,"author":{"gitId":"adidoesnt"},"content":"    public InvalidCommandException(String errorMessage) {"},{"lineNumber":5,"author":{"gitId":"adidoesnt"},"content":"        super(errorMessage);"},{"lineNumber":6,"author":{"gitId":"adidoesnt"},"content":"    }"},{"lineNumber":7,"author":{"gitId":"adidoesnt"},"content":"}"}],"authorContributionMap":{"adidoesnt":7}},{"path":"src/main/java/duke/Launcher.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"adidoesnt"},"content":"package duke;"},{"lineNumber":2,"author":{"gitId":"adidoesnt"},"content":""},{"lineNumber":3,"author":{"gitId":"adidoesnt"},"content":"import javafx.application.Application;"},{"lineNumber":4,"author":{"gitId":"adidoesnt"},"content":""},{"lineNumber":5,"author":{"gitId":"adidoesnt"},"content":"public class Launcher {"},{"lineNumber":6,"author":{"gitId":"adidoesnt"},"content":"    public static void main(String[] args) {"},{"lineNumber":7,"author":{"gitId":"adidoesnt"},"content":"        Application.launch(Duke.class, args);"},{"lineNumber":8,"author":{"gitId":"adidoesnt"},"content":"    }"},{"lineNumber":9,"author":{"gitId":"adidoesnt"},"content":"}"}],"authorContributionMap":{"adidoesnt":9}},{"path":"src/main/java/duke/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"adidoesnt"},"content":"package duke;"},{"lineNumber":2,"author":{"gitId":"adidoesnt"},"content":""},{"lineNumber":3,"author":{"gitId":"adidoesnt"},"content":"import java.io.BufferedReader;"},{"lineNumber":4,"author":{"gitId":"adidoesnt"},"content":"import java.io.IOException;"},{"lineNumber":5,"author":{"gitId":"adidoesnt"},"content":"import java.io.InputStreamReader;"},{"lineNumber":6,"author":{"gitId":"adidoesnt"},"content":"import java.text.ParseException;"},{"lineNumber":7,"author":{"gitId":"adidoesnt"},"content":"import java.util.Date;"},{"lineNumber":8,"author":{"gitId":"adidoesnt"},"content":"import java.text.SimpleDateFormat;"},{"lineNumber":9,"author":{"gitId":"adidoesnt"},"content":"import java.util.List;"},{"lineNumber":10,"author":{"gitId":"adidoesnt"},"content":""},{"lineNumber":11,"author":{"gitId":"adidoesnt"},"content":"public class Parser {"},{"lineNumber":12,"author":{"gitId":"adidoesnt"},"content":"    public BufferedReader input;"},{"lineNumber":13,"author":{"gitId":"adidoesnt"},"content":"    public UserInterface UI;"},{"lineNumber":14,"author":{"gitId":"adidoesnt"},"content":"    public Storage storage;"},{"lineNumber":15,"author":{"gitId":"adidoesnt"},"content":""},{"lineNumber":16,"author":{"gitId":"adidoesnt"},"content":"    public Parser() throws IOException {"},{"lineNumber":17,"author":{"gitId":"adidoesnt"},"content":"        this.input \u003d new BufferedReader(new InputStreamReader(System.in));"},{"lineNumber":18,"author":{"gitId":"adidoesnt"},"content":"        this.UI \u003d new UserInterface();"},{"lineNumber":19,"author":{"gitId":"adidoesnt"},"content":"        this.storage \u003d new Storage(\"./src/main/DATA/duke.txt\");"},{"lineNumber":20,"author":{"gitId":"adidoesnt"},"content":"    }"},{"lineNumber":21,"author":{"gitId":"adidoesnt"},"content":""},{"lineNumber":22,"author":{"gitId":"adidoesnt"},"content":"    /*"},{"lineNumber":23,"author":{"gitId":"adidoesnt"},"content":"     * Process the user input provided by the UI."},{"lineNumber":24,"author":{"gitId":"adidoesnt"},"content":"     *"},{"lineNumber":25,"author":{"gitId":"adidoesnt"},"content":"     * @throws IOException"},{"lineNumber":26,"author":{"gitId":"adidoesnt"},"content":"     * @throws InvalidCommandException for unrecognised/invalid commands."},{"lineNumber":27,"author":{"gitId":"adidoesnt"},"content":"     * @throws ParseException for invalid date input."},{"lineNumber":28,"author":{"gitId":"adidoesnt"},"content":"     */"},{"lineNumber":29,"author":{"gitId":"adidoesnt"},"content":"    public String process(String command) throws IOException {"},{"lineNumber":30,"author":{"gitId":"adidoesnt"},"content":"        assert !command.equals(\"\");"},{"lineNumber":31,"author":{"gitId":"adidoesnt"},"content":"        String[] userInput \u003d command.split(\" \", 2);"},{"lineNumber":32,"author":{"gitId":"adidoesnt"},"content":"        String commandHeader \u003d userInput[0].toLowerCase();"},{"lineNumber":33,"author":{"gitId":"adidoesnt"},"content":"        if (commandHeader.equals(Command.TODO.toString())) {"},{"lineNumber":34,"author":{"gitId":"adidoesnt"},"content":"            String description \u003d  userInput[1];"},{"lineNumber":35,"author":{"gitId":"adidoesnt"},"content":"            return processTodo(description);"},{"lineNumber":36,"author":{"gitId":"adidoesnt"},"content":"        } else if (commandHeader.equals(Command.HELLO.toString())) {"},{"lineNumber":37,"author":{"gitId":"adidoesnt"},"content":"            return \"Please enter a command.\";"},{"lineNumber":38,"author":{"gitId":"adidoesnt"},"content":"        } else if (commandHeader.equals(Command.HELP.toString())) {"},{"lineNumber":39,"author":{"gitId":"adidoesnt"},"content":"            return UI.helpMenu();"},{"lineNumber":40,"author":{"gitId":"adidoesnt"},"content":"        } else if (commandHeader.equals(Command.DEADLINE.toString())) {"},{"lineNumber":41,"author":{"gitId":"adidoesnt"},"content":"            String[] details \u003d userInput[1].split(\"/\", 2);"},{"lineNumber":42,"author":{"gitId":"adidoesnt"},"content":"            return processDeadline(details);"},{"lineNumber":43,"author":{"gitId":"adidoesnt"},"content":"        } else if (commandHeader.equals(Command.EVENT.toString())) {"},{"lineNumber":44,"author":{"gitId":"adidoesnt"},"content":"            String[] details \u003d userInput[1].split(\"/\", 2);"},{"lineNumber":45,"author":{"gitId":"adidoesnt"},"content":"            return processEvent(details);"},{"lineNumber":46,"author":{"gitId":"adidoesnt"},"content":"        } else if (commandHeader.equals(Command.LIST.toString())) {"},{"lineNumber":47,"author":{"gitId":"adidoesnt"},"content":"            return UI.listTasks();"},{"lineNumber":48,"author":{"gitId":"adidoesnt"},"content":"        } else if (commandHeader.equals(Command.FIND.toString())) {"},{"lineNumber":49,"author":{"gitId":"adidoesnt"},"content":"            List\u003cTask\u003e foundTasks \u003d TaskList.find(userInput[1]);"},{"lineNumber":50,"author":{"gitId":"adidoesnt"},"content":"            return UI.listTasks(foundTasks);"},{"lineNumber":51,"author":{"gitId":"adidoesnt"},"content":"        } else if (commandHeader.equals(Command.REMOVE.toString())) {"},{"lineNumber":52,"author":{"gitId":"adidoesnt"},"content":"            String[] details \u003d userInput[1].split(\" \", 2);"},{"lineNumber":53,"author":{"gitId":"adidoesnt"},"content":"            return processRemove(details);"},{"lineNumber":54,"author":{"gitId":"adidoesnt"},"content":"        } else if (commandHeader.equals(Command.COMPLETE.toString())) {"},{"lineNumber":55,"author":{"gitId":"adidoesnt"},"content":"            String[] details \u003d userInput[1].split(\" \", 2);"},{"lineNumber":56,"author":{"gitId":"adidoesnt"},"content":"            return processComplete(details);"},{"lineNumber":57,"author":{"gitId":"adidoesnt"},"content":"        } else if (commandHeader.equals(Command.BYE.toString())) {"},{"lineNumber":58,"author":{"gitId":"adidoesnt"},"content":"            this.storage.exportTasks();"},{"lineNumber":59,"author":{"gitId":"adidoesnt"},"content":"            System.exit(0);"},{"lineNumber":60,"author":{"gitId":"adidoesnt"},"content":"        } else {"},{"lineNumber":61,"author":{"gitId":"adidoesnt"},"content":"            try {"},{"lineNumber":62,"author":{"gitId":"adidoesnt"},"content":"                throw new InvalidCommandException(\"Sorry, I don\u0027t know what that means!\\n\" +"},{"lineNumber":63,"author":{"gitId":"adidoesnt"},"content":"                        \"Please enter a valid command.\\n\");"},{"lineNumber":64,"author":{"gitId":"adidoesnt"},"content":"            } catch (InvalidCommandException e) {"},{"lineNumber":65,"author":{"gitId":"adidoesnt"},"content":"                e.printStackTrace();"},{"lineNumber":66,"author":{"gitId":"adidoesnt"},"content":"            }"},{"lineNumber":67,"author":{"gitId":"adidoesnt"},"content":"        }"},{"lineNumber":68,"author":{"gitId":"adidoesnt"},"content":"        return \"Please enter a valid command.\\n\";"},{"lineNumber":69,"author":{"gitId":"adidoesnt"},"content":"    }"},{"lineNumber":70,"author":{"gitId":"adidoesnt"},"content":""},{"lineNumber":71,"author":{"gitId":"adidoesnt"},"content":"    /*"},{"lineNumber":72,"author":{"gitId":"adidoesnt"},"content":"     * Processes commands with prefix todo"},{"lineNumber":73,"author":{"gitId":"adidoesnt"},"content":"     *"},{"lineNumber":74,"author":{"gitId":"adidoesnt"},"content":"     * @param description description of the todo task"},{"lineNumber":75,"author":{"gitId":"adidoesnt"},"content":"     * @return string detailing the outcome of the execution the command"},{"lineNumber":76,"author":{"gitId":"adidoesnt"},"content":"     */"},{"lineNumber":77,"author":{"gitId":"adidoesnt"},"content":"    public String processTodo(String description) {"},{"lineNumber":78,"author":{"gitId":"adidoesnt"},"content":"        ToDo newToDo \u003d new ToDo(description);"},{"lineNumber":79,"author":{"gitId":"adidoesnt"},"content":"        if (TaskList.contains(newToDo)) {"},{"lineNumber":80,"author":{"gitId":"adidoesnt"},"content":"            return \"This task already exists!\";"},{"lineNumber":81,"author":{"gitId":"adidoesnt"},"content":"        }"},{"lineNumber":82,"author":{"gitId":"adidoesnt"},"content":"        TaskList.taskList.add(newToDo);"},{"lineNumber":83,"author":{"gitId":"adidoesnt"},"content":"        return UI.addedTask();"},{"lineNumber":84,"author":{"gitId":"adidoesnt"},"content":"    }"},{"lineNumber":85,"author":{"gitId":"adidoesnt"},"content":""},{"lineNumber":86,"author":{"gitId":"adidoesnt"},"content":"    /*"},{"lineNumber":87,"author":{"gitId":"adidoesnt"},"content":"     * Processes commands with prefix deadline"},{"lineNumber":88,"author":{"gitId":"adidoesnt"},"content":"     *"},{"lineNumber":89,"author":{"gitId":"adidoesnt"},"content":"     * @param description description of the deadline task"},{"lineNumber":90,"author":{"gitId":"adidoesnt"},"content":"     * @return string detailing the outcome of the execution the command"},{"lineNumber":91,"author":{"gitId":"adidoesnt"},"content":"     */"},{"lineNumber":92,"author":{"gitId":"adidoesnt"},"content":"    public String processDeadline(String[] details) {"},{"lineNumber":93,"author":{"gitId":"adidoesnt"},"content":"        String result \u003d \"\";"},{"lineNumber":94,"author":{"gitId":"adidoesnt"},"content":"        SimpleDateFormat dateFormat \u003d new SimpleDateFormat(\"\u0027by\u0027 dd.MM.yyyy HH:mm\");"},{"lineNumber":95,"author":{"gitId":"adidoesnt"},"content":"        try {"},{"lineNumber":96,"author":{"gitId":"adidoesnt"},"content":"            Date by \u003d dateFormat.parse(details[1]);"},{"lineNumber":97,"author":{"gitId":"adidoesnt"},"content":"            Deadline newDeadline \u003d new Deadline(details[0], by);"},{"lineNumber":98,"author":{"gitId":"adidoesnt"},"content":"            if (TaskList.contains(newDeadline)) {"},{"lineNumber":99,"author":{"gitId":"adidoesnt"},"content":"                result \u003d \"This task already exists!\";"},{"lineNumber":100,"author":{"gitId":"adidoesnt"},"content":"            }"},{"lineNumber":101,"author":{"gitId":"adidoesnt"},"content":"            TaskList.taskList.add(newDeadline);"},{"lineNumber":102,"author":{"gitId":"adidoesnt"},"content":"            return UI.addedTask();"},{"lineNumber":103,"author":{"gitId":"adidoesnt"},"content":"        } catch (ParseException e) {"},{"lineNumber":104,"author":{"gitId":"adidoesnt"},"content":"            System.out.println(\"Please type the date in the format \\\"by dd.mm.yyyy hh:mm\\\"!\");"},{"lineNumber":105,"author":{"gitId":"adidoesnt"},"content":"        }"},{"lineNumber":106,"author":{"gitId":"adidoesnt"},"content":"        return result;"},{"lineNumber":107,"author":{"gitId":"adidoesnt"},"content":"    }"},{"lineNumber":108,"author":{"gitId":"adidoesnt"},"content":""},{"lineNumber":109,"author":{"gitId":"adidoesnt"},"content":"    /*"},{"lineNumber":110,"author":{"gitId":"adidoesnt"},"content":"     * Processes commands with prefix event"},{"lineNumber":111,"author":{"gitId":"adidoesnt"},"content":"     *"},{"lineNumber":112,"author":{"gitId":"adidoesnt"},"content":"     * @param description description of the event task"},{"lineNumber":113,"author":{"gitId":"adidoesnt"},"content":"     * @return string detailing the outcome of the execution the command"},{"lineNumber":114,"author":{"gitId":"adidoesnt"},"content":"     */"},{"lineNumber":115,"author":{"gitId":"adidoesnt"},"content":"    public String processEvent(String[] details) {"},{"lineNumber":116,"author":{"gitId":"adidoesnt"},"content":"        String result \u003d \"\";"},{"lineNumber":117,"author":{"gitId":"adidoesnt"},"content":"        SimpleDateFormat startDateFormat \u003d new SimpleDateFormat(\"\u0027from\u0027 dd.MM.yyyy HH:mm \");"},{"lineNumber":118,"author":{"gitId":"adidoesnt"},"content":"        SimpleDateFormat endDateFormat \u003d new SimpleDateFormat(\"dd.MM.yyyy HH:mm\");"},{"lineNumber":119,"author":{"gitId":"adidoesnt"},"content":"        String[] timings \u003d details[1].split(\"to \", 2);"},{"lineNumber":120,"author":{"gitId":"adidoesnt"},"content":"        try {"},{"lineNumber":121,"author":{"gitId":"adidoesnt"},"content":"            Date start \u003d startDateFormat.parse(timings[0]);"},{"lineNumber":122,"author":{"gitId":"adidoesnt"},"content":"            Date end \u003d endDateFormat.parse(timings[1]);"},{"lineNumber":123,"author":{"gitId":"adidoesnt"},"content":"            Event newEvent \u003d new Event(details[0], start, end);"},{"lineNumber":124,"author":{"gitId":"adidoesnt"},"content":"            if (TaskList.contains(newEvent)) {"},{"lineNumber":125,"author":{"gitId":"adidoesnt"},"content":"                result \u003d \"This task already exists!\";"},{"lineNumber":126,"author":{"gitId":"adidoesnt"},"content":"            }"},{"lineNumber":127,"author":{"gitId":"adidoesnt"},"content":"            TaskList.taskList.add(newEvent);"},{"lineNumber":128,"author":{"gitId":"adidoesnt"},"content":"            return UI.addedTask();"},{"lineNumber":129,"author":{"gitId":"adidoesnt"},"content":"        } catch (ParseException e){"},{"lineNumber":130,"author":{"gitId":"adidoesnt"},"content":"            System.out.println(\"Please type the date in the format \\\"from dd.mm.yyyy hh:mm to dd.mm.yyyy hh:mm\\\"!\");"},{"lineNumber":131,"author":{"gitId":"adidoesnt"},"content":"        }"},{"lineNumber":132,"author":{"gitId":"adidoesnt"},"content":"        return result;"},{"lineNumber":133,"author":{"gitId":"adidoesnt"},"content":"    }"},{"lineNumber":134,"author":{"gitId":"adidoesnt"},"content":""},{"lineNumber":135,"author":{"gitId":"adidoesnt"},"content":"    /*"},{"lineNumber":136,"author":{"gitId":"adidoesnt"},"content":"     * Processes commands with prefix remove"},{"lineNumber":137,"author":{"gitId":"adidoesnt"},"content":"     *"},{"lineNumber":138,"author":{"gitId":"adidoesnt"},"content":"     * @param description description of the remove task"},{"lineNumber":139,"author":{"gitId":"adidoesnt"},"content":"     * @return string detailing the outcome of the execution the command"},{"lineNumber":140,"author":{"gitId":"adidoesnt"},"content":"     */"},{"lineNumber":141,"author":{"gitId":"adidoesnt"},"content":"    public String processRemove(String[] details) {"},{"lineNumber":142,"author":{"gitId":"adidoesnt"},"content":"        if (details[0].toLowerCase().equals(Command.TODO.toString())) {"},{"lineNumber":143,"author":{"gitId":"adidoesnt"},"content":"            TaskList.removeTask(new ToDo(details[1]));"},{"lineNumber":144,"author":{"gitId":"adidoesnt"},"content":"            return \"Task removed.\\n\";"},{"lineNumber":145,"author":{"gitId":"adidoesnt"},"content":"        } else if (details[0].toLowerCase().equals(Command.DEADLINE.toString())) {"},{"lineNumber":146,"author":{"gitId":"adidoesnt"},"content":"            String description \u003d details[1].split(\"/\", 2)[0];"},{"lineNumber":147,"author":{"gitId":"adidoesnt"},"content":"            TaskList.removeTask(new Deadline(description, new Date()));"},{"lineNumber":148,"author":{"gitId":"adidoesnt"},"content":"            return \"Task removed.\\n\";"},{"lineNumber":149,"author":{"gitId":"adidoesnt"},"content":"        } else if (details[0].toLowerCase().equals(Command.EVENT.toString())) {"},{"lineNumber":150,"author":{"gitId":"adidoesnt"},"content":"            String description \u003d details[1].split(\"/\", 2)[0];"},{"lineNumber":151,"author":{"gitId":"adidoesnt"},"content":"            TaskList.removeTask(new Event(description, new Date(), new Date()));"},{"lineNumber":152,"author":{"gitId":"adidoesnt"},"content":"            return \"Task removed.\\n\";"},{"lineNumber":153,"author":{"gitId":"adidoesnt"},"content":"        }"},{"lineNumber":154,"author":{"gitId":"adidoesnt"},"content":"        return \"Please enter a valid task.\\n\";"},{"lineNumber":155,"author":{"gitId":"adidoesnt"},"content":"    }"},{"lineNumber":156,"author":{"gitId":"adidoesnt"},"content":""},{"lineNumber":157,"author":{"gitId":"adidoesnt"},"content":"    /*"},{"lineNumber":158,"author":{"gitId":"adidoesnt"},"content":"     * Processes commands with prefix complete"},{"lineNumber":159,"author":{"gitId":"adidoesnt"},"content":"     *"},{"lineNumber":160,"author":{"gitId":"adidoesnt"},"content":"     * @param description description of the complete task"},{"lineNumber":161,"author":{"gitId":"adidoesnt"},"content":"     * @return string detailing the outcome of the execution the command"},{"lineNumber":162,"author":{"gitId":"adidoesnt"},"content":"     */"},{"lineNumber":163,"author":{"gitId":"adidoesnt"},"content":"    public String processComplete(String[] details) {"},{"lineNumber":164,"author":{"gitId":"adidoesnt"},"content":"        if (details[0].toLowerCase().equals(Command.TODO.toString())) {"},{"lineNumber":165,"author":{"gitId":"adidoesnt"},"content":"            return TaskList.completeTask(new ToDo(details[1]));"},{"lineNumber":166,"author":{"gitId":"adidoesnt"},"content":"        } else if (details[0].toLowerCase().equals(Command.DEADLINE.toString())) {"},{"lineNumber":167,"author":{"gitId":"adidoesnt"},"content":"            String description \u003d details[1].split(\"/\", 2)[0];"},{"lineNumber":168,"author":{"gitId":"adidoesnt"},"content":"            return TaskList.completeTask(new Deadline(description, new Date()));"},{"lineNumber":169,"author":{"gitId":"adidoesnt"},"content":"        } else if (details[0].toLowerCase().equals(Command.EVENT.toString())) {"},{"lineNumber":170,"author":{"gitId":"adidoesnt"},"content":"            String description \u003d details[1].split(\"/\", 2)[0];"},{"lineNumber":171,"author":{"gitId":"adidoesnt"},"content":"            return TaskList.completeTask(new Event(description, new Date(), new Date()));"},{"lineNumber":172,"author":{"gitId":"adidoesnt"},"content":"        }"},{"lineNumber":173,"author":{"gitId":"adidoesnt"},"content":"        return \"Please enter a valid task.\\n\";"},{"lineNumber":174,"author":{"gitId":"adidoesnt"},"content":"    }"},{"lineNumber":175,"author":{"gitId":"adidoesnt"},"content":"}"}],"authorContributionMap":{"adidoesnt":175}},{"path":"src/main/java/duke/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"adidoesnt"},"content":"package duke;"},{"lineNumber":2,"author":{"gitId":"adidoesnt"},"content":""},{"lineNumber":3,"author":{"gitId":"adidoesnt"},"content":"import java.io.*;"},{"lineNumber":4,"author":{"gitId":"adidoesnt"},"content":"import java.text.ParseException;"},{"lineNumber":5,"author":{"gitId":"adidoesnt"},"content":"import java.text.SimpleDateFormat;"},{"lineNumber":6,"author":{"gitId":"adidoesnt"},"content":"import java.util.Date;"},{"lineNumber":7,"author":{"gitId":"adidoesnt"},"content":""},{"lineNumber":8,"author":{"gitId":"adidoesnt"},"content":""},{"lineNumber":9,"author":{"gitId":"adidoesnt"},"content":"public class Storage {"},{"lineNumber":10,"author":{"gitId":"adidoesnt"},"content":"    public String filePath;"},{"lineNumber":11,"author":{"gitId":"adidoesnt"},"content":"    public UserInterface UI;"},{"lineNumber":12,"author":{"gitId":"adidoesnt"},"content":""},{"lineNumber":13,"author":{"gitId":"adidoesnt"},"content":"    public Storage(String filePath) throws IOException {"},{"lineNumber":14,"author":{"gitId":"adidoesnt"},"content":"        this.filePath \u003d filePath;"},{"lineNumber":15,"author":{"gitId":"adidoesnt"},"content":"        this.UI \u003d new UserInterface();"},{"lineNumber":16,"author":{"gitId":"adidoesnt"},"content":"    }"},{"lineNumber":17,"author":{"gitId":"adidoesnt"},"content":""},{"lineNumber":18,"author":{"gitId":"adidoesnt"},"content":"    /*"},{"lineNumber":19,"author":{"gitId":"adidoesnt"},"content":"     * Writes the current contents of the task list to a file."},{"lineNumber":20,"author":{"gitId":"adidoesnt"},"content":"     */"},{"lineNumber":21,"author":{"gitId":"adidoesnt"},"content":"    public void exportTasks() throws IOException {"},{"lineNumber":22,"author":{"gitId":"adidoesnt"},"content":"        String output \u003d \"\";"},{"lineNumber":23,"author":{"gitId":"adidoesnt"},"content":"        for (Task t : TaskList.taskList) {"},{"lineNumber":24,"author":{"gitId":"adidoesnt"},"content":"            output +\u003d (t.toString() + \"\\n\");"},{"lineNumber":25,"author":{"gitId":"adidoesnt"},"content":"        }"},{"lineNumber":26,"author":{"gitId":"adidoesnt"},"content":"        try {"},{"lineNumber":27,"author":{"gitId":"adidoesnt"},"content":"            BufferedWriter bw \u003d new BufferedWriter(new FileWriter(this.filePath));"},{"lineNumber":28,"author":{"gitId":"adidoesnt"},"content":"            bw.write(output);"},{"lineNumber":29,"author":{"gitId":"adidoesnt"},"content":"            bw.close();"},{"lineNumber":30,"author":{"gitId":"adidoesnt"},"content":"        } catch (FileNotFoundException e) {"},{"lineNumber":31,"author":{"gitId":"adidoesnt"},"content":"            File data \u003d new File(\"./src/main/DATA\");"},{"lineNumber":32,"author":{"gitId":"adidoesnt"},"content":"            data.mkdirs();"},{"lineNumber":33,"author":{"gitId":"adidoesnt"},"content":"            File duke \u003d new File(data, \"duke.txt\");"},{"lineNumber":34,"author":{"gitId":"adidoesnt"},"content":"            duke.createNewFile();"},{"lineNumber":35,"author":{"gitId":"adidoesnt"},"content":"            BufferedWriter bw \u003d new BufferedWriter(new FileWriter(this.filePath));"},{"lineNumber":36,"author":{"gitId":"adidoesnt"},"content":"            bw.write(output);"},{"lineNumber":37,"author":{"gitId":"adidoesnt"},"content":"            bw.close();"},{"lineNumber":38,"author":{"gitId":"adidoesnt"},"content":"        }"},{"lineNumber":39,"author":{"gitId":"adidoesnt"},"content":"    }"},{"lineNumber":40,"author":{"gitId":"adidoesnt"},"content":""},{"lineNumber":41,"author":{"gitId":"adidoesnt"},"content":"    /*"},{"lineNumber":42,"author":{"gitId":"adidoesnt"},"content":"     * Reads tasks from save file into task list."},{"lineNumber":43,"author":{"gitId":"adidoesnt"},"content":"     */"},{"lineNumber":44,"author":{"gitId":"adidoesnt"},"content":"    public void importTasks() throws IOException, ParseException {"},{"lineNumber":45,"author":{"gitId":"adidoesnt"},"content":"        File data \u003d new File(\"./src/main/DATA/duke.txt\");"},{"lineNumber":46,"author":{"gitId":"adidoesnt"},"content":"        if (data.exists()) {"},{"lineNumber":47,"author":{"gitId":"adidoesnt"},"content":"            BufferedReader input \u003d new BufferedReader(new FileReader(this.filePath));"},{"lineNumber":48,"author":{"gitId":"adidoesnt"},"content":"            String content \u003d input.readLine();"},{"lineNumber":49,"author":{"gitId":"adidoesnt"},"content":"            while (content !\u003d null) {"},{"lineNumber":50,"author":{"gitId":"adidoesnt"},"content":"                String[] fileInput \u003d content.split(\" \", 2);"},{"lineNumber":51,"author":{"gitId":"adidoesnt"},"content":"                String header \u003d fileInput[0];"},{"lineNumber":52,"author":{"gitId":"adidoesnt"},"content":"                String type \u003d header.substring(0, 3);"},{"lineNumber":53,"author":{"gitId":"adidoesnt"},"content":"                if (\"[T]\".equals(type)) {"},{"lineNumber":54,"author":{"gitId":"adidoesnt"},"content":"                    String description \u003d fileInput[1];"},{"lineNumber":55,"author":{"gitId":"adidoesnt"},"content":"                    importTodo(header, description);"},{"lineNumber":56,"author":{"gitId":"adidoesnt"},"content":"                } else if (\"[D]\".equals(type)) {"},{"lineNumber":57,"author":{"gitId":"adidoesnt"},"content":"                    String[] details \u003d fileInput[1].split(\"/\", 2);"},{"lineNumber":58,"author":{"gitId":"adidoesnt"},"content":"                    importDeadline(header, details);"},{"lineNumber":59,"author":{"gitId":"adidoesnt"},"content":"                } else {"},{"lineNumber":60,"author":{"gitId":"adidoesnt"},"content":"                    String[] details \u003d fileInput[1].split(\"/\", 2);"},{"lineNumber":61,"author":{"gitId":"adidoesnt"},"content":"                    importEvent(header, details);"},{"lineNumber":62,"author":{"gitId":"adidoesnt"},"content":"                }"},{"lineNumber":63,"author":{"gitId":"adidoesnt"},"content":"                content \u003d input.readLine();"},{"lineNumber":64,"author":{"gitId":"adidoesnt"},"content":"            }"},{"lineNumber":65,"author":{"gitId":"adidoesnt"},"content":"            input.close();"},{"lineNumber":66,"author":{"gitId":"adidoesnt"},"content":"        }"},{"lineNumber":67,"author":{"gitId":"adidoesnt"},"content":"    }"},{"lineNumber":68,"author":{"gitId":"adidoesnt"},"content":""},{"lineNumber":69,"author":{"gitId":"adidoesnt"},"content":"    /*"},{"lineNumber":70,"author":{"gitId":"adidoesnt"},"content":"     * Processes tasks of type todo from save file"},{"lineNumber":71,"author":{"gitId":"adidoesnt"},"content":"     */"},{"lineNumber":72,"author":{"gitId":"adidoesnt"},"content":"    public void importTodo(String header, String description) {"},{"lineNumber":73,"author":{"gitId":"adidoesnt"},"content":"        ToDo newToDo \u003d new ToDo(description);"},{"lineNumber":74,"author":{"gitId":"adidoesnt"},"content":"        if (header.length() \u003e 5) {"},{"lineNumber":75,"author":{"gitId":"adidoesnt"},"content":"            newToDo.completeTask();"},{"lineNumber":76,"author":{"gitId":"adidoesnt"},"content":"        }"},{"lineNumber":77,"author":{"gitId":"adidoesnt"},"content":"        TaskList.taskList.add(newToDo);"},{"lineNumber":78,"author":{"gitId":"adidoesnt"},"content":"    }"},{"lineNumber":79,"author":{"gitId":"adidoesnt"},"content":""},{"lineNumber":80,"author":{"gitId":"adidoesnt"},"content":"    /*"},{"lineNumber":81,"author":{"gitId":"adidoesnt"},"content":"     * Processes tasks of type deadline from save file"},{"lineNumber":82,"author":{"gitId":"adidoesnt"},"content":"     */"},{"lineNumber":83,"author":{"gitId":"adidoesnt"},"content":"    public void importDeadline(String header, String[] details) throws ParseException {"},{"lineNumber":84,"author":{"gitId":"adidoesnt"},"content":"        SimpleDateFormat dateFormat \u003d new SimpleDateFormat(\"\u0027by\u0027 EEE MMM dd HH:mm:ss z yyyy\");"},{"lineNumber":85,"author":{"gitId":"adidoesnt"},"content":"        Date by \u003d dateFormat.parse(details[1]);"},{"lineNumber":86,"author":{"gitId":"adidoesnt"},"content":"        Deadline newDeadline \u003d new Deadline(details[0], by);"},{"lineNumber":87,"author":{"gitId":"adidoesnt"},"content":"        if (header.length() \u003e 5) {"},{"lineNumber":88,"author":{"gitId":"adidoesnt"},"content":"            newDeadline.completeTask();"},{"lineNumber":89,"author":{"gitId":"adidoesnt"},"content":"        }"},{"lineNumber":90,"author":{"gitId":"adidoesnt"},"content":"        TaskList.taskList.add(newDeadline);"},{"lineNumber":91,"author":{"gitId":"adidoesnt"},"content":"    }"},{"lineNumber":92,"author":{"gitId":"adidoesnt"},"content":""},{"lineNumber":93,"author":{"gitId":"adidoesnt"},"content":"    /*"},{"lineNumber":94,"author":{"gitId":"adidoesnt"},"content":"     * Processes tasks of type event from save file"},{"lineNumber":95,"author":{"gitId":"adidoesnt"},"content":"     */"},{"lineNumber":96,"author":{"gitId":"adidoesnt"},"content":"    public void importEvent(String header, String[] details) throws ParseException {"},{"lineNumber":97,"author":{"gitId":"adidoesnt"},"content":"        SimpleDateFormat startDateFormat \u003d new SimpleDateFormat(\"\u0027from\u0027 EEE MMM dd HH:mm:ss z yyyy \");"},{"lineNumber":98,"author":{"gitId":"adidoesnt"},"content":"        SimpleDateFormat endDateFormat \u003d new SimpleDateFormat(\"EEE MMM dd HH:mm:ss z yyyy\");"},{"lineNumber":99,"author":{"gitId":"adidoesnt"},"content":"        String[] timings \u003d details[1].split(\"to \", 2);"},{"lineNumber":100,"author":{"gitId":"adidoesnt"},"content":"        Date start \u003d startDateFormat.parse(timings[0]);"},{"lineNumber":101,"author":{"gitId":"adidoesnt"},"content":"        Date end \u003d endDateFormat.parse(timings[1]);"},{"lineNumber":102,"author":{"gitId":"adidoesnt"},"content":"        Event newEvent \u003d new Event(details[0], start, end);"},{"lineNumber":103,"author":{"gitId":"adidoesnt"},"content":"        if (header.length() \u003e 5) {"},{"lineNumber":104,"author":{"gitId":"adidoesnt"},"content":"            newEvent.completeTask();"},{"lineNumber":105,"author":{"gitId":"adidoesnt"},"content":"        }"},{"lineNumber":106,"author":{"gitId":"adidoesnt"},"content":"        TaskList.taskList.add(newEvent);"},{"lineNumber":107,"author":{"gitId":"adidoesnt"},"content":"    }"},{"lineNumber":108,"author":{"gitId":"adidoesnt"},"content":"}"}],"authorContributionMap":{"adidoesnt":108}},{"path":"src/main/java/duke/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"adidoesnt"},"content":"package duke;"},{"lineNumber":2,"author":{"gitId":"adidoesnt"},"content":""},{"lineNumber":3,"author":{"gitId":"adidoesnt"},"content":"public class Task {"},{"lineNumber":4,"author":{"gitId":"adidoesnt"},"content":"    public String description;"},{"lineNumber":5,"author":{"gitId":"adidoesnt"},"content":"    public String typeBox;"},{"lineNumber":6,"author":{"gitId":"adidoesnt"},"content":"    public String checkBox;"},{"lineNumber":7,"author":{"gitId":"adidoesnt"},"content":""},{"lineNumber":8,"author":{"gitId":"adidoesnt"},"content":"    public Task(String description, String typeBox) {"},{"lineNumber":9,"author":{"gitId":"adidoesnt"},"content":"        this.description \u003d description;"},{"lineNumber":10,"author":{"gitId":"adidoesnt"},"content":"        this.typeBox \u003d typeBox;"},{"lineNumber":11,"author":{"gitId":"adidoesnt"},"content":"        this.checkBox \u003d \"[]\";"},{"lineNumber":12,"author":{"gitId":"adidoesnt"},"content":"    }"},{"lineNumber":13,"author":{"gitId":"adidoesnt"},"content":""},{"lineNumber":14,"author":{"gitId":"adidoesnt"},"content":"    /*"},{"lineNumber":15,"author":{"gitId":"adidoesnt"},"content":"     * Marks the task as complete by marking its checkbox with an X."},{"lineNumber":16,"author":{"gitId":"adidoesnt"},"content":"     */"},{"lineNumber":17,"author":{"gitId":"adidoesnt"},"content":"    public void completeTask() {"},{"lineNumber":18,"author":{"gitId":"adidoesnt"},"content":"        this.checkBox \u003d \"[X]\";"},{"lineNumber":19,"author":{"gitId":"adidoesnt"},"content":"    }"},{"lineNumber":20,"author":{"gitId":"adidoesnt"},"content":""},{"lineNumber":21,"author":{"gitId":"adidoesnt"},"content":"    @Override"},{"lineNumber":22,"author":{"gitId":"adidoesnt"},"content":"    public boolean equals(Object o){"},{"lineNumber":23,"author":{"gitId":"adidoesnt"},"content":"        if (this \u003d\u003d o) {"},{"lineNumber":24,"author":{"gitId":"adidoesnt"},"content":"            return true;"},{"lineNumber":25,"author":{"gitId":"adidoesnt"},"content":"        } else if (!(o instanceof Task)) {"},{"lineNumber":26,"author":{"gitId":"adidoesnt"},"content":"            return false;"},{"lineNumber":27,"author":{"gitId":"adidoesnt"},"content":"        } else {"},{"lineNumber":28,"author":{"gitId":"adidoesnt"},"content":"            Task t \u003d (Task) o;"},{"lineNumber":29,"author":{"gitId":"adidoesnt"},"content":"            return (t.typeBox.equals(this.typeBox) \u0026\u0026 t.description.equals(this.description));"},{"lineNumber":30,"author":{"gitId":"adidoesnt"},"content":"        }"},{"lineNumber":31,"author":{"gitId":"adidoesnt"},"content":"    }"},{"lineNumber":32,"author":{"gitId":"adidoesnt"},"content":"}"}],"authorContributionMap":{"adidoesnt":32}},{"path":"src/main/java/duke/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"adidoesnt"},"content":"package duke;"},{"lineNumber":2,"author":{"gitId":"adidoesnt"},"content":""},{"lineNumber":3,"author":{"gitId":"adidoesnt"},"content":"import java.util.List;"},{"lineNumber":4,"author":{"gitId":"adidoesnt"},"content":"import java.util.ArrayList;"},{"lineNumber":5,"author":{"gitId":"adidoesnt"},"content":""},{"lineNumber":6,"author":{"gitId":"adidoesnt"},"content":"public class TaskList {"},{"lineNumber":7,"author":{"gitId":"adidoesnt"},"content":"    public static List\u003cTask\u003e taskList \u003d new ArrayList\u003c\u003e();"},{"lineNumber":8,"author":{"gitId":"adidoesnt"},"content":""},{"lineNumber":9,"author":{"gitId":"adidoesnt"},"content":"    /*"},{"lineNumber":10,"author":{"gitId":"adidoesnt"},"content":"     * Traverses the task list to find tasks containing a keyword provided by the user."},{"lineNumber":11,"author":{"gitId":"adidoesnt"},"content":"     *"},{"lineNumber":12,"author":{"gitId":"adidoesnt"},"content":"     * @param keyWord A keyword provided by the user."},{"lineNumber":13,"author":{"gitId":"adidoesnt"},"content":"     * @return A list of tasks containing the keyword provided by the user."},{"lineNumber":14,"author":{"gitId":"adidoesnt"},"content":"     */"},{"lineNumber":15,"author":{"gitId":"adidoesnt"},"content":"    public static List\u003cTask\u003e find(String keyWord) {"},{"lineNumber":16,"author":{"gitId":"adidoesnt"},"content":"        List\u003cTask\u003e foundTasks \u003d new ArrayList\u003c\u003e();"},{"lineNumber":17,"author":{"gitId":"adidoesnt"},"content":"        for (Task task : taskList) {"},{"lineNumber":18,"author":{"gitId":"adidoesnt"},"content":"            if (task.description.contains(keyWord)) {"},{"lineNumber":19,"author":{"gitId":"adidoesnt"},"content":"                foundTasks.add(task);"},{"lineNumber":20,"author":{"gitId":"adidoesnt"},"content":"            }"},{"lineNumber":21,"author":{"gitId":"adidoesnt"},"content":"        }"},{"lineNumber":22,"author":{"gitId":"adidoesnt"},"content":"        return foundTasks;"},{"lineNumber":23,"author":{"gitId":"adidoesnt"},"content":"    }"},{"lineNumber":24,"author":{"gitId":"adidoesnt"},"content":""},{"lineNumber":25,"author":{"gitId":"adidoesnt"},"content":"    /*"},{"lineNumber":26,"author":{"gitId":"adidoesnt"},"content":"     * Traverses the task list to mark a particular task complete."},{"lineNumber":27,"author":{"gitId":"adidoesnt"},"content":"     *"},{"lineNumber":28,"author":{"gitId":"adidoesnt"},"content":"     * @param task A task to be marked as complete."},{"lineNumber":29,"author":{"gitId":"adidoesnt"},"content":"     * @return a string representing the result of the execution of the complete method"},{"lineNumber":30,"author":{"gitId":"adidoesnt"},"content":"     */"},{"lineNumber":31,"author":{"gitId":"adidoesnt"},"content":"    public static String completeTask(Task task) {"},{"lineNumber":32,"author":{"gitId":"adidoesnt"},"content":"        for (Task t: taskList) {"},{"lineNumber":33,"author":{"gitId":"adidoesnt"},"content":"            if(t.equals(task)) {"},{"lineNumber":34,"author":{"gitId":"adidoesnt"},"content":"                t.completeTask();"},{"lineNumber":35,"author":{"gitId":"adidoesnt"},"content":"                return \"Task marked complete!\\n\";"},{"lineNumber":36,"author":{"gitId":"adidoesnt"},"content":"            }"},{"lineNumber":37,"author":{"gitId":"adidoesnt"},"content":"        }"},{"lineNumber":38,"author":{"gitId":"adidoesnt"},"content":"        return \"Task not found!\";"},{"lineNumber":39,"author":{"gitId":"adidoesnt"},"content":"    }"},{"lineNumber":40,"author":{"gitId":"adidoesnt"},"content":""},{"lineNumber":41,"author":{"gitId":"adidoesnt"},"content":"    /*"},{"lineNumber":42,"author":{"gitId":"adidoesnt"},"content":"     * Traverses the task list to remove a particular task."},{"lineNumber":43,"author":{"gitId":"adidoesnt"},"content":"     *"},{"lineNumber":44,"author":{"gitId":"adidoesnt"},"content":"     * @param task A task to be removed."},{"lineNumber":45,"author":{"gitId":"adidoesnt"},"content":"     * @return a string representing the result of the execution of the remove method"},{"lineNumber":46,"author":{"gitId":"adidoesnt"},"content":"     */"},{"lineNumber":47,"author":{"gitId":"adidoesnt"},"content":"    public static void removeTask(Task task) {"},{"lineNumber":48,"author":{"gitId":"adidoesnt"},"content":"        for (Task t: taskList) {"},{"lineNumber":49,"author":{"gitId":"adidoesnt"},"content":"            if (t.equals(task)) {"},{"lineNumber":50,"author":{"gitId":"adidoesnt"},"content":"                taskList.remove(t);"},{"lineNumber":51,"author":{"gitId":"adidoesnt"},"content":"                break;"},{"lineNumber":52,"author":{"gitId":"adidoesnt"},"content":"            }"},{"lineNumber":53,"author":{"gitId":"adidoesnt"},"content":"        }"},{"lineNumber":54,"author":{"gitId":"adidoesnt"},"content":"    }"},{"lineNumber":55,"author":{"gitId":"adidoesnt"},"content":""},{"lineNumber":56,"author":{"gitId":"adidoesnt"},"content":"    /*"},{"lineNumber":57,"author":{"gitId":"adidoesnt"},"content":"     * Traverses the task list to check if a particular task exists."},{"lineNumber":58,"author":{"gitId":"adidoesnt"},"content":"     *"},{"lineNumber":59,"author":{"gitId":"adidoesnt"},"content":"     * @param task A task to be removed."},{"lineNumber":60,"author":{"gitId":"adidoesnt"},"content":"     * @return true or false."},{"lineNumber":61,"author":{"gitId":"adidoesnt"},"content":"     */"},{"lineNumber":62,"author":{"gitId":"adidoesnt"},"content":"    public static boolean contains(Task task) {"},{"lineNumber":63,"author":{"gitId":"adidoesnt"},"content":"        for (Task t: taskList) {"},{"lineNumber":64,"author":{"gitId":"adidoesnt"},"content":"            if (t.equals(task)) {"},{"lineNumber":65,"author":{"gitId":"adidoesnt"},"content":"                return true;"},{"lineNumber":66,"author":{"gitId":"adidoesnt"},"content":"            }"},{"lineNumber":67,"author":{"gitId":"adidoesnt"},"content":"        }"},{"lineNumber":68,"author":{"gitId":"adidoesnt"},"content":"        return false;"},{"lineNumber":69,"author":{"gitId":"adidoesnt"},"content":"    }"},{"lineNumber":70,"author":{"gitId":"adidoesnt"},"content":"}"}],"authorContributionMap":{"adidoesnt":70}},{"path":"src/main/java/duke/ToDo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"adidoesnt"},"content":"package duke;"},{"lineNumber":2,"author":{"gitId":"adidoesnt"},"content":""},{"lineNumber":3,"author":{"gitId":"adidoesnt"},"content":"public class ToDo extends Task {"},{"lineNumber":4,"author":{"gitId":"adidoesnt"},"content":"    public ToDo(String description) {"},{"lineNumber":5,"author":{"gitId":"adidoesnt"},"content":"        super(description, \"[T]\");"},{"lineNumber":6,"author":{"gitId":"adidoesnt"},"content":"    }"},{"lineNumber":7,"author":{"gitId":"adidoesnt"},"content":""},{"lineNumber":8,"author":{"gitId":"adidoesnt"},"content":"    @Override"},{"lineNumber":9,"author":{"gitId":"adidoesnt"},"content":"    public String toString(){"},{"lineNumber":10,"author":{"gitId":"adidoesnt"},"content":"        return this.typeBox + this.checkBox + \" \" + this.description;"},{"lineNumber":11,"author":{"gitId":"adidoesnt"},"content":"    }"},{"lineNumber":12,"author":{"gitId":"adidoesnt"},"content":"}"}],"authorContributionMap":{"adidoesnt":12}},{"path":"src/main/java/duke/UserInterface.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"adidoesnt"},"content":"package duke;"},{"lineNumber":2,"author":{"gitId":"adidoesnt"},"content":""},{"lineNumber":3,"author":{"gitId":"adidoesnt"},"content":"import java.io.BufferedWriter;"},{"lineNumber":4,"author":{"gitId":"adidoesnt"},"content":"import java.io.OutputStreamWriter;"},{"lineNumber":5,"author":{"gitId":"adidoesnt"},"content":"import java.io.IOException;"},{"lineNumber":6,"author":{"gitId":"adidoesnt"},"content":"import java.util.List;"},{"lineNumber":7,"author":{"gitId":"adidoesnt"},"content":""},{"lineNumber":8,"author":{"gitId":"adidoesnt"},"content":"public class UserInterface {"},{"lineNumber":9,"author":{"gitId":"adidoesnt"},"content":"    public BufferedWriter output;"},{"lineNumber":10,"author":{"gitId":"adidoesnt"},"content":""},{"lineNumber":11,"author":{"gitId":"adidoesnt"},"content":"    public UserInterface() {"},{"lineNumber":12,"author":{"gitId":"adidoesnt"},"content":"        this.output \u003d new BufferedWriter(new OutputStreamWriter(System.out));"},{"lineNumber":13,"author":{"gitId":"adidoesnt"},"content":"    }"},{"lineNumber":14,"author":{"gitId":"adidoesnt"},"content":""},{"lineNumber":15,"author":{"gitId":"adidoesnt"},"content":"    /*"},{"lineNumber":16,"author":{"gitId":"adidoesnt"},"content":"     * Prints the Duke logo and greets the user with an initial greeting."},{"lineNumber":17,"author":{"gitId":"adidoesnt"},"content":"     *"},{"lineNumber":18,"author":{"gitId":"adidoesnt"},"content":"     * @throws IOException"},{"lineNumber":19,"author":{"gitId":"adidoesnt"},"content":"     */"},{"lineNumber":20,"author":{"gitId":"adidoesnt"},"content":"    public String logo() {"},{"lineNumber":21,"author":{"gitId":"adidoesnt"},"content":"        String logo \u003d \" ____        _        \\n\""},{"lineNumber":22,"author":{"gitId":"adidoesnt"},"content":"                + \"|  _ \\\\ _   _| | _____ \\n\""},{"lineNumber":23,"author":{"gitId":"adidoesnt"},"content":"                + \"| | | | | | | |/ / _ \\\\\\n\""},{"lineNumber":24,"author":{"gitId":"adidoesnt"},"content":"                + \"| |_| | |_| |   \u003c  __/\\n\""},{"lineNumber":25,"author":{"gitId":"adidoesnt"},"content":"                + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\";"},{"lineNumber":26,"author":{"gitId":"adidoesnt"},"content":"        return (\"Hello from\\n\" + logo + \"\\n\");"},{"lineNumber":27,"author":{"gitId":"adidoesnt"},"content":"    }"},{"lineNumber":28,"author":{"gitId":"adidoesnt"},"content":""},{"lineNumber":29,"author":{"gitId":"adidoesnt"},"content":"    /*"},{"lineNumber":30,"author":{"gitId":"adidoesnt"},"content":"     * Bids the user farewell."},{"lineNumber":31,"author":{"gitId":"adidoesnt"},"content":"     */"},{"lineNumber":32,"author":{"gitId":"adidoesnt"},"content":"    public String goodBye() {"},{"lineNumber":33,"author":{"gitId":"adidoesnt"},"content":"        return \"Goodbye\\n\";"},{"lineNumber":34,"author":{"gitId":"adidoesnt"},"content":"    }"},{"lineNumber":35,"author":{"gitId":"adidoesnt"},"content":""},{"lineNumber":36,"author":{"gitId":"adidoesnt"},"content":"    /*"},{"lineNumber":37,"author":{"gitId":"adidoesnt"},"content":"     * Lets the user know that a task has been added."},{"lineNumber":38,"author":{"gitId":"adidoesnt"},"content":"     */"},{"lineNumber":39,"author":{"gitId":"adidoesnt"},"content":"    public String addedTask() {"},{"lineNumber":40,"author":{"gitId":"adidoesnt"},"content":"        return \"Added task!\\n\";"},{"lineNumber":41,"author":{"gitId":"adidoesnt"},"content":"    }"},{"lineNumber":42,"author":{"gitId":"adidoesnt"},"content":""},{"lineNumber":43,"author":{"gitId":"adidoesnt"},"content":"    /*"},{"lineNumber":44,"author":{"gitId":"adidoesnt"},"content":"     * Lists all the tasks currently in the task list."},{"lineNumber":45,"author":{"gitId":"adidoesnt"},"content":"     *"},{"lineNumber":46,"author":{"gitId":"adidoesnt"},"content":"     * @throws IOException"},{"lineNumber":47,"author":{"gitId":"adidoesnt"},"content":"     */"},{"lineNumber":48,"author":{"gitId":"adidoesnt"},"content":"    public String listTasks() throws IOException {"},{"lineNumber":49,"author":{"gitId":"adidoesnt"},"content":"        int taskNumber \u003d 1;"},{"lineNumber":50,"author":{"gitId":"adidoesnt"},"content":"        String result \u003d \"All tasks: \\n\";"},{"lineNumber":51,"author":{"gitId":"adidoesnt"},"content":"        for (Task t : TaskList.taskList) {"},{"lineNumber":52,"author":{"gitId":"adidoesnt"},"content":"            result +\u003d (taskNumber + \": \" + t + \"\\n\");"},{"lineNumber":53,"author":{"gitId":"adidoesnt"},"content":"            this.output.flush();"},{"lineNumber":54,"author":{"gitId":"adidoesnt"},"content":"            taskNumber++;"},{"lineNumber":55,"author":{"gitId":"adidoesnt"},"content":"        }"},{"lineNumber":56,"author":{"gitId":"adidoesnt"},"content":"        return result;"},{"lineNumber":57,"author":{"gitId":"adidoesnt"},"content":"    }"},{"lineNumber":58,"author":{"gitId":"adidoesnt"},"content":""},{"lineNumber":59,"author":{"gitId":"adidoesnt"},"content":"    public String helpMenu() {"},{"lineNumber":60,"author":{"gitId":"adidoesnt"},"content":"        String help \u003d \"Enter one of the following commands:\\n\" +"},{"lineNumber":61,"author":{"gitId":"adidoesnt"},"content":"                \"[1] Hello\\n\" +"},{"lineNumber":62,"author":{"gitId":"adidoesnt"},"content":"                \"[2] Todo \u003cDescription of Task\u003e\\n\" +"},{"lineNumber":63,"author":{"gitId":"adidoesnt"},"content":"                \"[3] Deadline \u003cDescription of Task\u003e/by \u003cDD.MM.YYYY HH:MM\u003e\\n\" +"},{"lineNumber":64,"author":{"gitId":"adidoesnt"},"content":"                \"[4] Event \u003cDescription of Task\u003e/from \u003cDD.MM.YYYY HH:MM\u003e to \u003cDD.MM.YYYY HH:MM\u003e\\n\" +"},{"lineNumber":65,"author":{"gitId":"adidoesnt"},"content":"                \"[5] List\\n\" +"},{"lineNumber":66,"author":{"gitId":"adidoesnt"},"content":"                \"[6] Find \u003cKey Word\u003e\\n\" +"},{"lineNumber":67,"author":{"gitId":"adidoesnt"},"content":"                \"[7] Complete Todo \u003cDescription\u003e\\n\" +"},{"lineNumber":68,"author":{"gitId":"adidoesnt"},"content":"                \"[8] Complete Deadline \u003cDescription\u003e/by \u003cDD.MM.YYYY HH:MM\u003e\\n\" +"},{"lineNumber":69,"author":{"gitId":"adidoesnt"},"content":"                \"[9] Complete Event \u003cDescription\u003e/from \u003cDD.MM.YYYY HH:MM\u003e to \u003cDD.MM.YYYY HH:MM\u003e\\n\" +"},{"lineNumber":70,"author":{"gitId":"adidoesnt"},"content":"                \"[10] Remove Todo \u003cDescription\u003e\\n\" +"},{"lineNumber":71,"author":{"gitId":"adidoesnt"},"content":"                \"[11] Remove Deadline \u003cDescription\u003e/by \u003cDD.MM.YYYY HH:MM\u003e\\n\" +"},{"lineNumber":72,"author":{"gitId":"adidoesnt"},"content":"                \"[12] Remove Event \u003cDescription\u003e/from \u003cDD.MM.YYYY HH:MM\u003e to \u003cDD.MM.YYYY HH:MM\u003e\\n\" +"},{"lineNumber":73,"author":{"gitId":"adidoesnt"},"content":"                \"[13] Help\\n\" +"},{"lineNumber":74,"author":{"gitId":"adidoesnt"},"content":"                \"[14] Bye\";"},{"lineNumber":75,"author":{"gitId":"adidoesnt"},"content":"        return help;"},{"lineNumber":76,"author":{"gitId":"adidoesnt"},"content":"    }"},{"lineNumber":77,"author":{"gitId":"adidoesnt"},"content":""},{"lineNumber":78,"author":{"gitId":"adidoesnt"},"content":"    /*"},{"lineNumber":79,"author":{"gitId":"adidoesnt"},"content":"     * Lists all the tasks found from the search query provided by the user."},{"lineNumber":80,"author":{"gitId":"adidoesnt"},"content":"     *"},{"lineNumber":81,"author":{"gitId":"adidoesnt"},"content":"     * @throws IOException"},{"lineNumber":82,"author":{"gitId":"adidoesnt"},"content":"     */"},{"lineNumber":83,"author":{"gitId":"adidoesnt"},"content":"    public String listTasks(List\u003cTask\u003e foundTasks) throws IOException {"},{"lineNumber":84,"author":{"gitId":"adidoesnt"},"content":"        int taskNumber \u003d 1;"},{"lineNumber":85,"author":{"gitId":"adidoesnt"},"content":"        String result \u003d \"There were \" + foundTasks.size() + \" tasks containing your keyword:\\n\";"},{"lineNumber":86,"author":{"gitId":"adidoesnt"},"content":"        for (Task t : foundTasks) {"},{"lineNumber":87,"author":{"gitId":"adidoesnt"},"content":"            result +\u003d (taskNumber + \": \" + t + \"\\n\");"},{"lineNumber":88,"author":{"gitId":"adidoesnt"},"content":"            taskNumber++;"},{"lineNumber":89,"author":{"gitId":"adidoesnt"},"content":"        }"},{"lineNumber":90,"author":{"gitId":"adidoesnt"},"content":"        return result;"},{"lineNumber":91,"author":{"gitId":"adidoesnt"},"content":"    }"},{"lineNumber":92,"author":{"gitId":"adidoesnt"},"content":"}"}],"authorContributionMap":{"adidoesnt":92}},{"path":"src/main/java/duke/wrapper/dists/gradle-6.7-bin/efvqh8uyq79v2n7rcncuhu9sv/gradle-6.7/init.d/readme.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"adidoesnt"},"content":"You can add .gradle init scripts to this directory. Each one is executed at the start of the build."}],"authorContributionMap":{"adidoesnt":1}},{"path":"src/test/java/TaskListTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"adidoesnt"},"content":"import duke.Task;"},{"lineNumber":2,"author":{"gitId":"adidoesnt"},"content":"import duke.TaskList;"},{"lineNumber":3,"author":{"gitId":"adidoesnt"},"content":"import duke.ToDo;"},{"lineNumber":4,"author":{"gitId":"adidoesnt"},"content":"import org.junit.jupiter.api.Test;"},{"lineNumber":5,"author":{"gitId":"adidoesnt"},"content":""},{"lineNumber":6,"author":{"gitId":"adidoesnt"},"content":"import java.io.IOException;"},{"lineNumber":7,"author":{"gitId":"adidoesnt"},"content":"import java.util.ArrayList;"},{"lineNumber":8,"author":{"gitId":"adidoesnt"},"content":"import java.util.List;"},{"lineNumber":9,"author":{"gitId":"adidoesnt"},"content":""},{"lineNumber":10,"author":{"gitId":"adidoesnt"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;"},{"lineNumber":11,"author":{"gitId":"adidoesnt"},"content":""},{"lineNumber":12,"author":{"gitId":"adidoesnt"},"content":"public class TaskListTest {"},{"lineNumber":13,"author":{"gitId":"adidoesnt"},"content":"    @Test"},{"lineNumber":14,"author":{"gitId":"adidoesnt"},"content":"    public void completeTaskTest() throws IOException {"},{"lineNumber":15,"author":{"gitId":"adidoesnt"},"content":"        ToDo newToDo \u003d new ToDo(\"read book\");"},{"lineNumber":16,"author":{"gitId":"adidoesnt"},"content":"        TaskList.taskList.add(newToDo);"},{"lineNumber":17,"author":{"gitId":"adidoesnt"},"content":"        TaskList.completeTask(newToDo);"},{"lineNumber":18,"author":{"gitId":"adidoesnt"},"content":"        assertEquals(\"[X]\", TaskList.taskList.get(0).checkBox);"},{"lineNumber":19,"author":{"gitId":"adidoesnt"},"content":"    }"},{"lineNumber":20,"author":{"gitId":"adidoesnt"},"content":""},{"lineNumber":21,"author":{"gitId":"adidoesnt"},"content":"    @Test"},{"lineNumber":22,"author":{"gitId":"adidoesnt"},"content":"    public void findTest() throws IOException {"},{"lineNumber":23,"author":{"gitId":"adidoesnt"},"content":"        List\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();"},{"lineNumber":24,"author":{"gitId":"adidoesnt"},"content":"        ToDo newToDo1 \u003d new ToDo(\"read book\");"},{"lineNumber":25,"author":{"gitId":"adidoesnt"},"content":"        TaskList.completeTask(newToDo1);"},{"lineNumber":26,"author":{"gitId":"adidoesnt"},"content":"        ToDo newToDo2 \u003d new ToDo(\"return book\");"},{"lineNumber":27,"author":{"gitId":"adidoesnt"},"content":"        ToDo newToDo3 \u003d new ToDo(\"borrow new book\");"},{"lineNumber":28,"author":{"gitId":"adidoesnt"},"content":"        tasks.add(newToDo1);"},{"lineNumber":29,"author":{"gitId":"adidoesnt"},"content":"        tasks.add(newToDo2);"},{"lineNumber":30,"author":{"gitId":"adidoesnt"},"content":"        tasks.add(newToDo3);"},{"lineNumber":31,"author":{"gitId":"adidoesnt"},"content":"        TaskList.taskList.add(newToDo2);"},{"lineNumber":32,"author":{"gitId":"adidoesnt"},"content":"        TaskList.taskList.add(newToDo3);"},{"lineNumber":33,"author":{"gitId":"adidoesnt"},"content":"        assertEquals(tasks, TaskList.find(\"book\"));"},{"lineNumber":34,"author":{"gitId":"adidoesnt"},"content":"    }"},{"lineNumber":35,"author":{"gitId":"adidoesnt"},"content":"}"}],"authorContributionMap":{"adidoesnt":35}}]
