[{"path":"src/main/java/duke/AbstractTask.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"hojiefeng"},"content":"package duke;"},{"lineNumber":2,"author":{"gitId":"hojiefeng"},"content":""},{"lineNumber":3,"author":{"gitId":"hojiefeng"},"content":"import java.io.Serializable;"},{"lineNumber":4,"author":{"gitId":"hojiefeng"},"content":""},{"lineNumber":5,"author":{"gitId":"hojiefeng"},"content":"public abstract class AbstractTask implements Serializable {"},{"lineNumber":6,"author":{"gitId":"hojiefeng"},"content":"    protected String description;"},{"lineNumber":7,"author":{"gitId":"hojiefeng"},"content":"    protected boolean isDone;"},{"lineNumber":8,"author":{"gitId":"hojiefeng"},"content":""},{"lineNumber":9,"author":{"gitId":"hojiefeng"},"content":"    /*"},{"lineNumber":10,"author":{"gitId":"hojiefeng"},"content":"     * Constructs a task using the description"},{"lineNumber":11,"author":{"gitId":"hojiefeng"},"content":"     */"},{"lineNumber":12,"author":{"gitId":"hojiefeng"},"content":"    public AbstractTask(String description) throws DukeEmptyDescriptionException {"},{"lineNumber":13,"author":{"gitId":"hojiefeng"},"content":"        if (description.isEmpty()) {"},{"lineNumber":14,"author":{"gitId":"hojiefeng"},"content":"            throw new DukeEmptyDescriptionException();"},{"lineNumber":15,"author":{"gitId":"hojiefeng"},"content":"        }"},{"lineNumber":16,"author":{"gitId":"hojiefeng"},"content":"        this.description \u003d description;"},{"lineNumber":17,"author":{"gitId":"hojiefeng"},"content":"        this.isDone \u003d false;"},{"lineNumber":18,"author":{"gitId":"hojiefeng"},"content":"    }"},{"lineNumber":19,"author":{"gitId":"hojiefeng"},"content":""},{"lineNumber":20,"author":{"gitId":"hojiefeng"},"content":"    /*"},{"lineNumber":21,"author":{"gitId":"hojiefeng"},"content":"     * Mark the task as done"},{"lineNumber":22,"author":{"gitId":"hojiefeng"},"content":"     */"},{"lineNumber":23,"author":{"gitId":"hojiefeng"},"content":"    public void markDone() {"},{"lineNumber":24,"author":{"gitId":"hojiefeng"},"content":"        this.isDone \u003d true;"},{"lineNumber":25,"author":{"gitId":"hojiefeng"},"content":"    }"},{"lineNumber":26,"author":{"gitId":"hojiefeng"},"content":""},{"lineNumber":27,"author":{"gitId":"hojiefeng"},"content":"    /*"},{"lineNumber":28,"author":{"gitId":"hojiefeng"},"content":"     * Return a string representation of the task"},{"lineNumber":29,"author":{"gitId":"hojiefeng"},"content":"     */"},{"lineNumber":30,"author":{"gitId":"hojiefeng"},"content":"    @Override"},{"lineNumber":31,"author":{"gitId":"hojiefeng"},"content":"    public String toString() {"},{"lineNumber":32,"author":{"gitId":"hojiefeng"},"content":"        return String.format(\"[%s] %s\", isDone ? \"X\" : \" \", description);"},{"lineNumber":33,"author":{"gitId":"hojiefeng"},"content":"    }"},{"lineNumber":34,"author":{"gitId":"hojiefeng"},"content":"}"}],"authorContributionMap":{"hojiefeng":34}},{"path":"src/main/java/duke/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"hojiefeng"},"content":"package duke;"},{"lineNumber":2,"author":{"gitId":"hojiefeng"},"content":""},{"lineNumber":3,"author":{"gitId":"hojiefeng"},"content":"import java.time.LocalDate;"},{"lineNumber":4,"author":{"gitId":"hojiefeng"},"content":"import java.time.format.DateTimeFormatter;"},{"lineNumber":5,"author":{"gitId":"hojiefeng"},"content":"import java.time.format.DateTimeParseException;"},{"lineNumber":6,"author":{"gitId":"hojiefeng"},"content":""},{"lineNumber":7,"author":{"gitId":"hojiefeng"},"content":"public class Deadline extends AbstractTask {"},{"lineNumber":8,"author":{"gitId":"hojiefeng"},"content":"    protected LocalDate by;"},{"lineNumber":9,"author":{"gitId":"hojiefeng"},"content":""},{"lineNumber":10,"author":{"gitId":"hojiefeng"},"content":"    /*"},{"lineNumber":11,"author":{"gitId":"hojiefeng"},"content":"     * Constructs a deadline task using the description and the deadline timing"},{"lineNumber":12,"author":{"gitId":"hojiefeng"},"content":"     */"},{"lineNumber":13,"author":{"gitId":"hojiefeng"},"content":"    public Deadline(String description, String by) throws DukeEmptyDescriptionException, DateTimeParseException {"},{"lineNumber":14,"author":{"gitId":"hojiefeng"},"content":"        super(description);"},{"lineNumber":15,"author":{"gitId":"hojiefeng"},"content":"        this.by \u003d LocalDate.parse(by);"},{"lineNumber":16,"author":{"gitId":"hojiefeng"},"content":"    }"},{"lineNumber":17,"author":{"gitId":"hojiefeng"},"content":""},{"lineNumber":18,"author":{"gitId":"hojiefeng"},"content":"    /*"},{"lineNumber":19,"author":{"gitId":"hojiefeng"},"content":"     * Return a string representation of the task"},{"lineNumber":20,"author":{"gitId":"hojiefeng"},"content":"     */"},{"lineNumber":21,"author":{"gitId":"hojiefeng"},"content":"    @Override"},{"lineNumber":22,"author":{"gitId":"hojiefeng"},"content":"    public String toString() {"},{"lineNumber":23,"author":{"gitId":"hojiefeng"},"content":"        String byFormatted \u003d by.format(DateTimeFormatter.ofPattern(\"MMM dd yyyy\"));"},{"lineNumber":24,"author":{"gitId":"hojiefeng"},"content":"        return String.format(\"[D]%s (by: %s)\", super.toString(), byFormatted);"},{"lineNumber":25,"author":{"gitId":"hojiefeng"},"content":"    }"},{"lineNumber":26,"author":{"gitId":"hojiefeng"},"content":"}"}],"authorContributionMap":{"hojiefeng":26}},{"path":"src/main/java/duke/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"hojiefeng"},"content":"package duke;"},{"lineNumber":2,"author":{"gitId":"hojiefeng"},"content":""},{"lineNumber":3,"author":{"gitId":"hojiefeng"},"content":"import java.util.Scanner;"},{"lineNumber":4,"author":{"gitId":"hojiefeng"},"content":""},{"lineNumber":5,"author":{"gitId":"-"},"content":"public class Duke {"},{"lineNumber":6,"author":{"gitId":"hojiefeng"},"content":"    static String logo \u003d \" ____        _        \\n\""},{"lineNumber":7,"author":{"gitId":"-"},"content":"            + \"|  _ \\\\ _   _| | _____ \\n\""},{"lineNumber":8,"author":{"gitId":"-"},"content":"            + \"| | | | | | | |/ / _ \\\\\\n\""},{"lineNumber":9,"author":{"gitId":"-"},"content":"            + \"| |_| | |_| |   \u003c  __/\\n\""},{"lineNumber":10,"author":{"gitId":"-"},"content":"            + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\";"},{"lineNumber":11,"author":{"gitId":"hojiefeng"},"content":"    static TaskList tasks \u003d new TaskList();"},{"lineNumber":12,"author":{"gitId":"hojiefeng"},"content":""},{"lineNumber":13,"author":{"gitId":"hojiefeng"},"content":"    /*"},{"lineNumber":14,"author":{"gitId":"hojiefeng"},"content":"     * Main class to handle the input"},{"lineNumber":15,"author":{"gitId":"hojiefeng"},"content":"     *"},{"lineNumber":16,"author":{"gitId":"hojiefeng"},"content":"     * @param args the arguments to the program"},{"lineNumber":17,"author":{"gitId":"hojiefeng"},"content":"     */"},{"lineNumber":18,"author":{"gitId":"hojiefeng"},"content":"    public static void main(String[] args) {"},{"lineNumber":19,"author":{"gitId":"hojiefeng"},"content":"        Ui ui \u003d new Ui(tasks, logo);"},{"lineNumber":20,"author":{"gitId":"hojiefeng"},"content":"        Storage storage \u003d new Storage(\"data/duke.txt\");"},{"lineNumber":21,"author":{"gitId":"hojiefeng"},"content":"        Parser parser \u003d new Parser();"},{"lineNumber":22,"author":{"gitId":"hojiefeng"},"content":"        Scanner scanner \u003d new Scanner(System.in);"},{"lineNumber":23,"author":{"gitId":"hojiefeng"},"content":"        storage.readTasks(tasks);"},{"lineNumber":24,"author":{"gitId":"hojiefeng"},"content":""},{"lineNumber":25,"author":{"gitId":"hojiefeng"},"content":"        ui.printStart();"},{"lineNumber":26,"author":{"gitId":"hojiefeng"},"content":"        while(scanner.hasNextLine()) {"},{"lineNumber":27,"author":{"gitId":"hojiefeng"},"content":"            String line \u003d scanner.nextLine();"},{"lineNumber":28,"author":{"gitId":"hojiefeng"},"content":"            parser.processLine(line, tasks);"},{"lineNumber":29,"author":{"gitId":"hojiefeng"},"content":"            storage.saveTasks(tasks);"},{"lineNumber":30,"author":{"gitId":"hojiefeng"},"content":"        }"},{"lineNumber":31,"author":{"gitId":"hojiefeng"},"content":"    }"},{"lineNumber":32,"author":{"gitId":"hojiefeng"},"content":""},{"lineNumber":33,"author":{"gitId":"hojiefeng"},"content":""},{"lineNumber":34,"author":{"gitId":"hojiefeng"},"content":""},{"lineNumber":35,"author":{"gitId":"hojiefeng"},"content":""},{"lineNumber":36,"author":{"gitId":"hojiefeng"},"content":"}"}],"authorContributionMap":{"hojiefeng":31,"-":5}},{"path":"src/main/java/duke/DukeEmptyDescriptionException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"hojiefeng"},"content":"package duke;"},{"lineNumber":2,"author":{"gitId":"hojiefeng"},"content":""},{"lineNumber":3,"author":{"gitId":"hojiefeng"},"content":"public class DukeEmptyDescriptionException extends DukeException {"},{"lineNumber":4,"author":{"gitId":"hojiefeng"},"content":""},{"lineNumber":5,"author":{"gitId":"hojiefeng"},"content":"}"}],"authorContributionMap":{"hojiefeng":5}},{"path":"src/main/java/duke/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"hojiefeng"},"content":"package duke;"},{"lineNumber":2,"author":{"gitId":"hojiefeng"},"content":""},{"lineNumber":3,"author":{"gitId":"hojiefeng"},"content":"public class DukeException extends Exception {"},{"lineNumber":4,"author":{"gitId":"hojiefeng"},"content":""},{"lineNumber":5,"author":{"gitId":"hojiefeng"},"content":"}"}],"authorContributionMap":{"hojiefeng":5}},{"path":"src/main/java/duke/DukeUnknownCommandException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"hojiefeng"},"content":"package duke;"},{"lineNumber":2,"author":{"gitId":"hojiefeng"},"content":""},{"lineNumber":3,"author":{"gitId":"hojiefeng"},"content":"public class DukeUnknownCommandException extends DukeException {"},{"lineNumber":4,"author":{"gitId":"hojiefeng"},"content":""},{"lineNumber":5,"author":{"gitId":"hojiefeng"},"content":"}"}],"authorContributionMap":{"hojiefeng":5}},{"path":"src/main/java/duke/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"hojiefeng"},"content":"package duke;"},{"lineNumber":2,"author":{"gitId":"hojiefeng"},"content":""},{"lineNumber":3,"author":{"gitId":"hojiefeng"},"content":"public class Event extends AbstractTask {"},{"lineNumber":4,"author":{"gitId":"hojiefeng"},"content":"    protected String at;"},{"lineNumber":5,"author":{"gitId":"hojiefeng"},"content":""},{"lineNumber":6,"author":{"gitId":"hojiefeng"},"content":"    /*"},{"lineNumber":7,"author":{"gitId":"hojiefeng"},"content":"     * Constructs an event task using the description and the event timing"},{"lineNumber":8,"author":{"gitId":"hojiefeng"},"content":"     */"},{"lineNumber":9,"author":{"gitId":"hojiefeng"},"content":"    public Event(String description, String at) throws DukeEmptyDescriptionException {"},{"lineNumber":10,"author":{"gitId":"hojiefeng"},"content":"        super(description);"},{"lineNumber":11,"author":{"gitId":"hojiefeng"},"content":"        this.at \u003d at;"},{"lineNumber":12,"author":{"gitId":"hojiefeng"},"content":"    }"},{"lineNumber":13,"author":{"gitId":"hojiefeng"},"content":""},{"lineNumber":14,"author":{"gitId":"hojiefeng"},"content":"    /*"},{"lineNumber":15,"author":{"gitId":"hojiefeng"},"content":"     * Return a string representation of the task"},{"lineNumber":16,"author":{"gitId":"hojiefeng"},"content":"     */"},{"lineNumber":17,"author":{"gitId":"hojiefeng"},"content":"    @Override"},{"lineNumber":18,"author":{"gitId":"hojiefeng"},"content":"    public String toString() {"},{"lineNumber":19,"author":{"gitId":"hojiefeng"},"content":"        return String.format(\"[E]%s (at: %s)\", super.toString(), at);"},{"lineNumber":20,"author":{"gitId":"hojiefeng"},"content":"    }"},{"lineNumber":21,"author":{"gitId":"hojiefeng"},"content":"}"}],"authorContributionMap":{"hojiefeng":21}},{"path":"src/main/java/duke/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"hojiefeng"},"content":"package duke;"},{"lineNumber":2,"author":{"gitId":"hojiefeng"},"content":""},{"lineNumber":3,"author":{"gitId":"hojiefeng"},"content":"import java.time.format.DateTimeParseException;"},{"lineNumber":4,"author":{"gitId":"hojiefeng"},"content":""},{"lineNumber":5,"author":{"gitId":"hojiefeng"},"content":"public class Parser {"},{"lineNumber":6,"author":{"gitId":"hojiefeng"},"content":""},{"lineNumber":7,"author":{"gitId":"hojiefeng"},"content":"    /*"},{"lineNumber":8,"author":{"gitId":"hojiefeng"},"content":"     * Handle each line"},{"lineNumber":9,"author":{"gitId":"hojiefeng"},"content":"     *"},{"lineNumber":10,"author":{"gitId":"hojiefeng"},"content":"     * @param line the current line to process"},{"lineNumber":11,"author":{"gitId":"hojiefeng"},"content":"     */"},{"lineNumber":12,"author":{"gitId":"hojiefeng"},"content":"    public int processLine(String line, TaskList tasks) {"},{"lineNumber":13,"author":{"gitId":"hojiefeng"},"content":"        if (line.compareTo(\"bye\") \u003d\u003d 0) {"},{"lineNumber":14,"author":{"gitId":"hojiefeng"},"content":"            // Bye command, print and exit immediately."},{"lineNumber":15,"author":{"gitId":"hojiefeng"},"content":"            System.out.println(\"\\tDuke:\");"},{"lineNumber":16,"author":{"gitId":"hojiefeng"},"content":"            System.out.println(\"\\tBye!\");"},{"lineNumber":17,"author":{"gitId":"hojiefeng"},"content":"            return -1;"},{"lineNumber":18,"author":{"gitId":"hojiefeng"},"content":"        } else if (line.compareTo(\"list\") \u003d\u003d 0) {"},{"lineNumber":19,"author":{"gitId":"hojiefeng"},"content":"            // List command, print out all the previous lines."},{"lineNumber":20,"author":{"gitId":"hojiefeng"},"content":"            System.out.println(\"\\tDuke:\");"},{"lineNumber":21,"author":{"gitId":"hojiefeng"},"content":"            for(int i \u003d 0;i \u003c tasks.size();i++) {"},{"lineNumber":22,"author":{"gitId":"hojiefeng"},"content":"                System.out.printf(\"\\t%d. %s\\n\", i + 1, tasks.get(i));"},{"lineNumber":23,"author":{"gitId":"hojiefeng"},"content":"            }"},{"lineNumber":24,"author":{"gitId":"hojiefeng"},"content":"        } else if (line.startsWith(\"done \")) {"},{"lineNumber":25,"author":{"gitId":"hojiefeng"},"content":"            // Done command, set the task as done."},{"lineNumber":26,"author":{"gitId":"hojiefeng"},"content":"            String indexStr \u003d line.substring(5);"},{"lineNumber":27,"author":{"gitId":"hojiefeng"},"content":"            try {"},{"lineNumber":28,"author":{"gitId":"hojiefeng"},"content":"                int index \u003d Integer.parseInt(indexStr) - 1;"},{"lineNumber":29,"author":{"gitId":"hojiefeng"},"content":"                AbstractTask currentTask \u003d tasks.get(index);"},{"lineNumber":30,"author":{"gitId":"hojiefeng"},"content":"                currentTask.markDone();"},{"lineNumber":31,"author":{"gitId":"hojiefeng"},"content":"                System.out.printf(\"\\tDuke: Marked task %d as done:\\n\", index);"},{"lineNumber":32,"author":{"gitId":"hojiefeng"},"content":"                System.out.printf(\"\\t%s\\n\", currentTask);"},{"lineNumber":33,"author":{"gitId":"hojiefeng"},"content":"            } catch (NumberFormatException e){"},{"lineNumber":34,"author":{"gitId":"hojiefeng"},"content":"                System.out.println(\"Task index must be a number!\");"},{"lineNumber":35,"author":{"gitId":"hojiefeng"},"content":"            } catch (IndexOutOfBoundsException e) {"},{"lineNumber":36,"author":{"gitId":"hojiefeng"},"content":"                System.out.println(\"Task index must be in range!\");"},{"lineNumber":37,"author":{"gitId":"hojiefeng"},"content":"            }"},{"lineNumber":38,"author":{"gitId":"hojiefeng"},"content":"        } else if (line.startsWith(\"delete \")) {"},{"lineNumber":39,"author":{"gitId":"hojiefeng"},"content":"            // Done command, set the task as done."},{"lineNumber":40,"author":{"gitId":"hojiefeng"},"content":"            String indexStr \u003d line.substring(7);"},{"lineNumber":41,"author":{"gitId":"hojiefeng"},"content":"            try {"},{"lineNumber":42,"author":{"gitId":"hojiefeng"},"content":"                int index \u003d Integer.parseInt(indexStr) - 1;"},{"lineNumber":43,"author":{"gitId":"hojiefeng"},"content":"                System.out.printf(\"\\tDuke: Deleted task %d: %s\\n\", index, tasks.get(index));"},{"lineNumber":44,"author":{"gitId":"hojiefeng"},"content":"                tasks.remove(index);"},{"lineNumber":45,"author":{"gitId":"hojiefeng"},"content":"            } catch (NumberFormatException e){"},{"lineNumber":46,"author":{"gitId":"hojiefeng"},"content":"                System.out.println(\"Task index must be a number!\");"},{"lineNumber":47,"author":{"gitId":"hojiefeng"},"content":"            } catch (IndexOutOfBoundsException e) {"},{"lineNumber":48,"author":{"gitId":"hojiefeng"},"content":"                System.out.println(\"Task index must be in range!\");"},{"lineNumber":49,"author":{"gitId":"hojiefeng"},"content":"            }"},{"lineNumber":50,"author":{"gitId":"hojiefeng"},"content":"        } else if (line.startsWith(\"find \")) {"},{"lineNumber":51,"author":{"gitId":"hojiefeng"},"content":"            // Find string in the list of tasks"},{"lineNumber":52,"author":{"gitId":"hojiefeng"},"content":"            String findStr \u003d line.substring(5);"},{"lineNumber":53,"author":{"gitId":"hojiefeng"},"content":"            int index \u003d 0;"},{"lineNumber":54,"author":{"gitId":"hojiefeng"},"content":"            boolean isFound \u003d false;"},{"lineNumber":55,"author":{"gitId":"hojiefeng"},"content":"            for (AbstractTask task : tasks) {"},{"lineNumber":56,"author":{"gitId":"hojiefeng"},"content":"                if (task.toString().contains(findStr)) {"},{"lineNumber":57,"author":{"gitId":"hojiefeng"},"content":"                    isFound \u003d true;"},{"lineNumber":58,"author":{"gitId":"hojiefeng"},"content":"                    break;"},{"lineNumber":59,"author":{"gitId":"hojiefeng"},"content":"                }"},{"lineNumber":60,"author":{"gitId":"hojiefeng"},"content":"            }"},{"lineNumber":61,"author":{"gitId":"hojiefeng"},"content":"            if (!isFound) {"},{"lineNumber":62,"author":{"gitId":"hojiefeng"},"content":"                System.out.println(\"No tasks with the keyword found!\");"},{"lineNumber":63,"author":{"gitId":"hojiefeng"},"content":"            } else {"},{"lineNumber":64,"author":{"gitId":"hojiefeng"},"content":"                System.out.println(\"\\tI\u0027ve found the following task(s) with the specified keyword:\");"},{"lineNumber":65,"author":{"gitId":"hojiefeng"},"content":"                for (AbstractTask task : tasks) {"},{"lineNumber":66,"author":{"gitId":"hojiefeng"},"content":"                    if (task.toString().contains(findStr)) {"},{"lineNumber":67,"author":{"gitId":"hojiefeng"},"content":"                        index++;"},{"lineNumber":68,"author":{"gitId":"hojiefeng"},"content":"                        System.out.printf(\"\\t%d. %s\\n\", index, task.toString());"},{"lineNumber":69,"author":{"gitId":"hojiefeng"},"content":"                    }"},{"lineNumber":70,"author":{"gitId":"hojiefeng"},"content":"                }"},{"lineNumber":71,"author":{"gitId":"hojiefeng"},"content":"            }"},{"lineNumber":72,"author":{"gitId":"hojiefeng"},"content":"        } else {"},{"lineNumber":73,"author":{"gitId":"hojiefeng"},"content":"            // No command, add the line task based on the prefix inside."},{"lineNumber":74,"author":{"gitId":"hojiefeng"},"content":"            try {"},{"lineNumber":75,"author":{"gitId":"hojiefeng"},"content":"                processNewTask(line, tasks);"},{"lineNumber":76,"author":{"gitId":"hojiefeng"},"content":"            } catch (DukeUnknownCommandException e) {"},{"lineNumber":77,"author":{"gitId":"hojiefeng"},"content":"                //Handle Unknown Command Exception"},{"lineNumber":78,"author":{"gitId":"hojiefeng"},"content":"                System.out.println(\"Unknown command detected, ignoring!\");"},{"lineNumber":79,"author":{"gitId":"hojiefeng"},"content":"            } catch (DukeEmptyDescriptionException e) {"},{"lineNumber":80,"author":{"gitId":"hojiefeng"},"content":"                //Handle Empty Description Exception"},{"lineNumber":81,"author":{"gitId":"hojiefeng"},"content":"                System.out.println(\"Task description cannot be empty, ignoring!\");"},{"lineNumber":82,"author":{"gitId":"hojiefeng"},"content":"            } catch (DukeException e) {"},{"lineNumber":83,"author":{"gitId":"hojiefeng"},"content":"                System.out.println(\"Reached an error!\");"},{"lineNumber":84,"author":{"gitId":"hojiefeng"},"content":"            } catch (DateTimeParseException e) {"},{"lineNumber":85,"author":{"gitId":"hojiefeng"},"content":"                System.out.println(\"Invalid Date Format!\");"},{"lineNumber":86,"author":{"gitId":"hojiefeng"},"content":"            }"},{"lineNumber":87,"author":{"gitId":"hojiefeng"},"content":"        }"},{"lineNumber":88,"author":{"gitId":"hojiefeng"},"content":"        return 0;"},{"lineNumber":89,"author":{"gitId":"hojiefeng"},"content":"    }"},{"lineNumber":90,"author":{"gitId":"hojiefeng"},"content":""},{"lineNumber":91,"author":{"gitId":"hojiefeng"},"content":"    /*"},{"lineNumber":92,"author":{"gitId":"hojiefeng"},"content":"     * Handle a new task"},{"lineNumber":93,"author":{"gitId":"hojiefeng"},"content":"     *"},{"lineNumber":94,"author":{"gitId":"hojiefeng"},"content":"     * @param line the current task to process"},{"lineNumber":95,"author":{"gitId":"hojiefeng"},"content":"     */"},{"lineNumber":96,"author":{"gitId":"hojiefeng"},"content":"    public void processNewTask(String line, TaskList tasks) throws DukeException {"},{"lineNumber":97,"author":{"gitId":"hojiefeng"},"content":"        if (line.startsWith(\"todo \")) {"},{"lineNumber":98,"author":{"gitId":"hojiefeng"},"content":"            // Todo command, add a Todo class"},{"lineNumber":99,"author":{"gitId":"hojiefeng"},"content":"            line \u003d line.substring(5);"},{"lineNumber":100,"author":{"gitId":"hojiefeng"},"content":"            tasks.add(new Todo(line));"},{"lineNumber":101,"author":{"gitId":"hojiefeng"},"content":"        } else if (line.startsWith(\"deadline \")) {"},{"lineNumber":102,"author":{"gitId":"hojiefeng"},"content":"            // Deadline command, add a Deadline class"},{"lineNumber":103,"author":{"gitId":"hojiefeng"},"content":"            int byIdx \u003d line.indexOf(\" /by \");"},{"lineNumber":104,"author":{"gitId":"hojiefeng"},"content":"            if (byIdx \u003d\u003d -1) {"},{"lineNumber":105,"author":{"gitId":"hojiefeng"},"content":"                System.out.println(\"Need a time for the deadline, \\\"/by\\\" not found!\");"},{"lineNumber":106,"author":{"gitId":"hojiefeng"},"content":"                return;"},{"lineNumber":107,"author":{"gitId":"hojiefeng"},"content":"            }"},{"lineNumber":108,"author":{"gitId":"hojiefeng"},"content":"            String byStr \u003d line.substring(byIdx + 5);"},{"lineNumber":109,"author":{"gitId":"hojiefeng"},"content":"            String task \u003d line.substring(9, byIdx);"},{"lineNumber":110,"author":{"gitId":"hojiefeng"},"content":"            tasks.add(new Deadline(task, byStr));"},{"lineNumber":111,"author":{"gitId":"hojiefeng"},"content":"        } else if (line.startsWith(\"event \")) {"},{"lineNumber":112,"author":{"gitId":"hojiefeng"},"content":"            // Event command, add an Event class"},{"lineNumber":113,"author":{"gitId":"hojiefeng"},"content":"            int atIdx \u003d line.indexOf(\" /at \");"},{"lineNumber":114,"author":{"gitId":"hojiefeng"},"content":"            if (atIdx \u003d\u003d -1) {"},{"lineNumber":115,"author":{"gitId":"hojiefeng"},"content":"                System.out.println(\"Need a time for the event, \\\"/at\\\" not found!\");"},{"lineNumber":116,"author":{"gitId":"hojiefeng"},"content":"                return;"},{"lineNumber":117,"author":{"gitId":"hojiefeng"},"content":"            }"},{"lineNumber":118,"author":{"gitId":"hojiefeng"},"content":"            String atStr \u003d line.substring(atIdx + 5);"},{"lineNumber":119,"author":{"gitId":"hojiefeng"},"content":"            String task \u003d line.substring(6, atIdx);"},{"lineNumber":120,"author":{"gitId":"hojiefeng"},"content":"            tasks.add(new Event(task, atStr));"},{"lineNumber":121,"author":{"gitId":"hojiefeng"},"content":"        } else if (line.equals(\"todo\") || line.equals(\"deadline\") || line.equals(\"event\")) {"},{"lineNumber":122,"author":{"gitId":"hojiefeng"},"content":"            throw new DukeEmptyDescriptionException();"},{"lineNumber":123,"author":{"gitId":"hojiefeng"},"content":"        } else {"},{"lineNumber":124,"author":{"gitId":"hojiefeng"},"content":"            throw new DukeUnknownCommandException();"},{"lineNumber":125,"author":{"gitId":"hojiefeng"},"content":"        }"},{"lineNumber":126,"author":{"gitId":"hojiefeng"},"content":"        System.out.printf(\"\\tDuke: Now you have %d tasks.\\n\", tasks.size());"},{"lineNumber":127,"author":{"gitId":"hojiefeng"},"content":"        System.out.println(\"\\tadded: \" + tasks.get(tasks.size() - 1));"},{"lineNumber":128,"author":{"gitId":"hojiefeng"},"content":"    }"},{"lineNumber":129,"author":{"gitId":"hojiefeng"},"content":"}"}],"authorContributionMap":{"hojiefeng":129}},{"path":"src/main/java/duke/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"hojiefeng"},"content":"package duke;"},{"lineNumber":2,"author":{"gitId":"hojiefeng"},"content":""},{"lineNumber":3,"author":{"gitId":"hojiefeng"},"content":"import java.io.FileInputStream;"},{"lineNumber":4,"author":{"gitId":"hojiefeng"},"content":"import java.io.FileOutputStream;"},{"lineNumber":5,"author":{"gitId":"hojiefeng"},"content":"import java.io.IOException;"},{"lineNumber":6,"author":{"gitId":"hojiefeng"},"content":"import java.io.ObjectOutputStream;"},{"lineNumber":7,"author":{"gitId":"hojiefeng"},"content":"import java.io.ObjectInputStream;"},{"lineNumber":8,"author":{"gitId":"hojiefeng"},"content":"import java.io.File;"},{"lineNumber":9,"author":{"gitId":"hojiefeng"},"content":""},{"lineNumber":10,"author":{"gitId":"hojiefeng"},"content":"public class Storage {"},{"lineNumber":11,"author":{"gitId":"hojiefeng"},"content":"    String fileName;"},{"lineNumber":12,"author":{"gitId":"hojiefeng"},"content":""},{"lineNumber":13,"author":{"gitId":"hojiefeng"},"content":"    public Storage(String fileName) {"},{"lineNumber":14,"author":{"gitId":"hojiefeng"},"content":"        this.fileName \u003d fileName;"},{"lineNumber":15,"author":{"gitId":"hojiefeng"},"content":"    }"},{"lineNumber":16,"author":{"gitId":"hojiefeng"},"content":""},{"lineNumber":17,"author":{"gitId":"hojiefeng"},"content":"    /*"},{"lineNumber":18,"author":{"gitId":"hojiefeng"},"content":"     * Save the contents to disk"},{"lineNumber":19,"author":{"gitId":"hojiefeng"},"content":"     *"},{"lineNumber":20,"author":{"gitId":"hojiefeng"},"content":"     * @param tasks the object to store the tasks"},{"lineNumber":21,"author":{"gitId":"hojiefeng"},"content":"     */"},{"lineNumber":22,"author":{"gitId":"hojiefeng"},"content":"    public void saveTasks(TaskList tasks) {"},{"lineNumber":23,"author":{"gitId":"hojiefeng"},"content":"        try {"},{"lineNumber":24,"author":{"gitId":"hojiefeng"},"content":"            FileOutputStream taskFile \u003d new FileOutputStream(fileName);"},{"lineNumber":25,"author":{"gitId":"hojiefeng"},"content":"            ObjectOutputStream taskObjectStream \u003d new ObjectOutputStream(taskFile);"},{"lineNumber":26,"author":{"gitId":"hojiefeng"},"content":"            Integer taskSize \u003d Duke.tasks.size();"},{"lineNumber":27,"author":{"gitId":"hojiefeng"},"content":"            taskObjectStream.writeObject(taskSize);"},{"lineNumber":28,"author":{"gitId":"hojiefeng"},"content":"            for (AbstractTask task : Duke.tasks) {"},{"lineNumber":29,"author":{"gitId":"hojiefeng"},"content":"                taskObjectStream.writeObject(task);"},{"lineNumber":30,"author":{"gitId":"hojiefeng"},"content":"            }"},{"lineNumber":31,"author":{"gitId":"hojiefeng"},"content":"            taskObjectStream.flush();"},{"lineNumber":32,"author":{"gitId":"hojiefeng"},"content":"            taskObjectStream.close();"},{"lineNumber":33,"author":{"gitId":"hojiefeng"},"content":"        } catch (IOException e) {"},{"lineNumber":34,"author":{"gitId":"hojiefeng"},"content":"            //Create a new file anyways"},{"lineNumber":35,"author":{"gitId":"hojiefeng"},"content":"        }"},{"lineNumber":36,"author":{"gitId":"hojiefeng"},"content":"    }"},{"lineNumber":37,"author":{"gitId":"hojiefeng"},"content":""},{"lineNumber":38,"author":{"gitId":"hojiefeng"},"content":"    /*"},{"lineNumber":39,"author":{"gitId":"hojiefeng"},"content":"     * Read tasks from disk"},{"lineNumber":40,"author":{"gitId":"hojiefeng"},"content":"     *"},{"lineNumber":41,"author":{"gitId":"hojiefeng"},"content":"     * @param tasks the object to store the tasks"},{"lineNumber":42,"author":{"gitId":"hojiefeng"},"content":"     */"},{"lineNumber":43,"author":{"gitId":"hojiefeng"},"content":"    public void readTasks(TaskList tasks) {"},{"lineNumber":44,"author":{"gitId":"hojiefeng"},"content":"        try {"},{"lineNumber":45,"author":{"gitId":"hojiefeng"},"content":"            FileInputStream taskFile \u003d new FileInputStream(fileName);"},{"lineNumber":46,"author":{"gitId":"hojiefeng"},"content":"            ObjectInputStream taskObjectStream \u003d new ObjectInputStream(taskFile);"},{"lineNumber":47,"author":{"gitId":"hojiefeng"},"content":"            Integer taskSize \u003d (Integer) taskObjectStream.readObject();"},{"lineNumber":48,"author":{"gitId":"hojiefeng"},"content":"            for(int i \u003d 0;i \u003c taskSize;i++) {"},{"lineNumber":49,"author":{"gitId":"hojiefeng"},"content":"                AbstractTask task \u003d (AbstractTask) taskObjectStream.readObject();"},{"lineNumber":50,"author":{"gitId":"hojiefeng"},"content":"                Duke.tasks.add(task);"},{"lineNumber":51,"author":{"gitId":"hojiefeng"},"content":"            }"},{"lineNumber":52,"author":{"gitId":"hojiefeng"},"content":"            taskObjectStream.close();"},{"lineNumber":53,"author":{"gitId":"hojiefeng"},"content":"        } catch (IOException e) {"},{"lineNumber":54,"author":{"gitId":"hojiefeng"},"content":"            System.out.println(\"No saved task file, continuing with empty list!\\n\");"},{"lineNumber":55,"author":{"gitId":"hojiefeng"},"content":"        } catch (ClassNotFoundException e) {"},{"lineNumber":56,"author":{"gitId":"hojiefeng"},"content":"            System.out.println(\"Something went wrong, resetting task file!\\n\");"},{"lineNumber":57,"author":{"gitId":"hojiefeng"},"content":"            File taskFile \u003d new File(\"data/duke.txt\");"},{"lineNumber":58,"author":{"gitId":"hojiefeng"},"content":"            taskFile.delete();"},{"lineNumber":59,"author":{"gitId":"hojiefeng"},"content":"        }"},{"lineNumber":60,"author":{"gitId":"hojiefeng"},"content":"    }"},{"lineNumber":61,"author":{"gitId":"hojiefeng"},"content":"}"}],"authorContributionMap":{"hojiefeng":61}},{"path":"src/main/java/duke/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"hojiefeng"},"content":"package duke;"},{"lineNumber":2,"author":{"gitId":"hojiefeng"},"content":""},{"lineNumber":3,"author":{"gitId":"hojiefeng"},"content":"public class Task extends AbstractTask {"},{"lineNumber":4,"author":{"gitId":"hojiefeng"},"content":""},{"lineNumber":5,"author":{"gitId":"hojiefeng"},"content":"    /*"},{"lineNumber":6,"author":{"gitId":"hojiefeng"},"content":"     * Constructs a task using the description"},{"lineNumber":7,"author":{"gitId":"hojiefeng"},"content":"     */"},{"lineNumber":8,"author":{"gitId":"hojiefeng"},"content":"    public Task(String description) throws DukeEmptyDescriptionException {"},{"lineNumber":9,"author":{"gitId":"hojiefeng"},"content":"        super(description);"},{"lineNumber":10,"author":{"gitId":"hojiefeng"},"content":"    }"},{"lineNumber":11,"author":{"gitId":"hojiefeng"},"content":""},{"lineNumber":12,"author":{"gitId":"hojiefeng"},"content":"    /*"},{"lineNumber":13,"author":{"gitId":"hojiefeng"},"content":"     * Return a string representation of the task"},{"lineNumber":14,"author":{"gitId":"hojiefeng"},"content":"     */"},{"lineNumber":15,"author":{"gitId":"hojiefeng"},"content":"    @Override"},{"lineNumber":16,"author":{"gitId":"hojiefeng"},"content":"    public String toString() {"},{"lineNumber":17,"author":{"gitId":"hojiefeng"},"content":"        return String.format(\"   %s\", super.toString());"},{"lineNumber":18,"author":{"gitId":"hojiefeng"},"content":"    }"},{"lineNumber":19,"author":{"gitId":"hojiefeng"},"content":"}"}],"authorContributionMap":{"hojiefeng":19}},{"path":"src/main/java/duke/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"hojiefeng"},"content":"package duke;"},{"lineNumber":2,"author":{"gitId":"hojiefeng"},"content":""},{"lineNumber":3,"author":{"gitId":"hojiefeng"},"content":"import java.util.ArrayList;"},{"lineNumber":4,"author":{"gitId":"hojiefeng"},"content":""},{"lineNumber":5,"author":{"gitId":"hojiefeng"},"content":"public class TaskList extends ArrayList\u003cAbstractTask\u003e {"},{"lineNumber":6,"author":{"gitId":"hojiefeng"},"content":""},{"lineNumber":7,"author":{"gitId":"hojiefeng"},"content":"}"}],"authorContributionMap":{"hojiefeng":7}},{"path":"src/main/java/duke/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"hojiefeng"},"content":"package duke;"},{"lineNumber":2,"author":{"gitId":"hojiefeng"},"content":""},{"lineNumber":3,"author":{"gitId":"hojiefeng"},"content":"public class Todo extends AbstractTask {"},{"lineNumber":4,"author":{"gitId":"hojiefeng"},"content":""},{"lineNumber":5,"author":{"gitId":"hojiefeng"},"content":"    /*"},{"lineNumber":6,"author":{"gitId":"hojiefeng"},"content":"     * Constructs a task using the description"},{"lineNumber":7,"author":{"gitId":"hojiefeng"},"content":"     */"},{"lineNumber":8,"author":{"gitId":"hojiefeng"},"content":"    public Todo(String description) throws DukeEmptyDescriptionException {"},{"lineNumber":9,"author":{"gitId":"hojiefeng"},"content":"        super(description);"},{"lineNumber":10,"author":{"gitId":"hojiefeng"},"content":"    }"},{"lineNumber":11,"author":{"gitId":"hojiefeng"},"content":""},{"lineNumber":12,"author":{"gitId":"hojiefeng"},"content":"    /*"},{"lineNumber":13,"author":{"gitId":"hojiefeng"},"content":"     * Return a string representation of the task"},{"lineNumber":14,"author":{"gitId":"hojiefeng"},"content":"     */"},{"lineNumber":15,"author":{"gitId":"hojiefeng"},"content":"    @Override"},{"lineNumber":16,"author":{"gitId":"hojiefeng"},"content":"    public String toString() {"},{"lineNumber":17,"author":{"gitId":"hojiefeng"},"content":"        return String.format(\"[T]%s\", super.toString());"},{"lineNumber":18,"author":{"gitId":"hojiefeng"},"content":"    }"},{"lineNumber":19,"author":{"gitId":"hojiefeng"},"content":"}"}],"authorContributionMap":{"hojiefeng":19}},{"path":"src/main/java/duke/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"hojiefeng"},"content":"package duke;"},{"lineNumber":2,"author":{"gitId":"hojiefeng"},"content":""},{"lineNumber":3,"author":{"gitId":"hojiefeng"},"content":"public class Ui {"},{"lineNumber":4,"author":{"gitId":"hojiefeng"},"content":"    String logo;"},{"lineNumber":5,"author":{"gitId":"hojiefeng"},"content":""},{"lineNumber":6,"author":{"gitId":"hojiefeng"},"content":"    public Ui(TaskList tasks, String logo) {"},{"lineNumber":7,"author":{"gitId":"hojiefeng"},"content":"        this.logo \u003d logo;"},{"lineNumber":8,"author":{"gitId":"hojiefeng"},"content":"    }"},{"lineNumber":9,"author":{"gitId":"hojiefeng"},"content":""},{"lineNumber":10,"author":{"gitId":"hojiefeng"},"content":"    /*"},{"lineNumber":11,"author":{"gitId":"hojiefeng"},"content":"     * Print the strings for the start of the program"},{"lineNumber":12,"author":{"gitId":"hojiefeng"},"content":"     */"},{"lineNumber":13,"author":{"gitId":"hojiefeng"},"content":"    public void printStart() {"},{"lineNumber":14,"author":{"gitId":"hojiefeng"},"content":"        System.out.println(\"Hello from\\n\" + logo);"},{"lineNumber":15,"author":{"gitId":"hojiefeng"},"content":"        System.out.println(\"What can I do for you?\");"},{"lineNumber":16,"author":{"gitId":"hojiefeng"},"content":"    }"},{"lineNumber":17,"author":{"gitId":"hojiefeng"},"content":"}"}],"authorContributionMap":{"hojiefeng":17}},{"path":"src/test/java/duke/DeadlineTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"hojiefeng"},"content":"package java.duke;"},{"lineNumber":2,"author":{"gitId":"hojiefeng"},"content":""},{"lineNumber":3,"author":{"gitId":"hojiefeng"},"content":"import duke.Deadline;"},{"lineNumber":4,"author":{"gitId":"hojiefeng"},"content":"import duke.DukeEmptyDescriptionException;"},{"lineNumber":5,"author":{"gitId":"hojiefeng"},"content":"import duke.Event;"},{"lineNumber":6,"author":{"gitId":"hojiefeng"},"content":"import org.junit.jupiter.api.Test;"},{"lineNumber":7,"author":{"gitId":"hojiefeng"},"content":""},{"lineNumber":8,"author":{"gitId":"hojiefeng"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;"},{"lineNumber":9,"author":{"gitId":"hojiefeng"},"content":""},{"lineNumber":10,"author":{"gitId":"hojiefeng"},"content":"public class DeadlineTest {"},{"lineNumber":11,"author":{"gitId":"hojiefeng"},"content":"    @Test"},{"lineNumber":12,"author":{"gitId":"hojiefeng"},"content":"    public void eventTest(){"},{"lineNumber":13,"author":{"gitId":"hojiefeng"},"content":"        try {"},{"lineNumber":14,"author":{"gitId":"hojiefeng"},"content":"            assertEquals(new Deadline(\"deadline\", \"2019-10-15\").toString(), \"[D]deadline (by: Oct 15 2019)\");"},{"lineNumber":15,"author":{"gitId":"hojiefeng"},"content":"        } catch (DukeEmptyDescriptionException e) {"},{"lineNumber":16,"author":{"gitId":"hojiefeng"},"content":""},{"lineNumber":17,"author":{"gitId":"hojiefeng"},"content":"        }"},{"lineNumber":18,"author":{"gitId":"hojiefeng"},"content":"    }"},{"lineNumber":19,"author":{"gitId":"hojiefeng"},"content":"}"}],"authorContributionMap":{"hojiefeng":19}},{"path":"src/test/java/duke/EventTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"hojiefeng"},"content":"package java.duke;"},{"lineNumber":2,"author":{"gitId":"hojiefeng"},"content":""},{"lineNumber":3,"author":{"gitId":"hojiefeng"},"content":"import duke.DukeEmptyDescriptionException;"},{"lineNumber":4,"author":{"gitId":"hojiefeng"},"content":"import duke.Event;"},{"lineNumber":5,"author":{"gitId":"hojiefeng"},"content":"import org.junit.jupiter.api.Test;"},{"lineNumber":6,"author":{"gitId":"hojiefeng"},"content":""},{"lineNumber":7,"author":{"gitId":"hojiefeng"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;"},{"lineNumber":8,"author":{"gitId":"hojiefeng"},"content":""},{"lineNumber":9,"author":{"gitId":"hojiefeng"},"content":"public class EventTest {"},{"lineNumber":10,"author":{"gitId":"hojiefeng"},"content":"    @Test"},{"lineNumber":11,"author":{"gitId":"hojiefeng"},"content":"    public void eventTest(){"},{"lineNumber":12,"author":{"gitId":"hojiefeng"},"content":"        try {"},{"lineNumber":13,"author":{"gitId":"hojiefeng"},"content":"            assertEquals(new Event(\"event\", \"time\").toString(), \"[E]event (at: time)\");"},{"lineNumber":14,"author":{"gitId":"hojiefeng"},"content":"        } catch (DukeEmptyDescriptionException e) {"},{"lineNumber":15,"author":{"gitId":"hojiefeng"},"content":""},{"lineNumber":16,"author":{"gitId":"hojiefeng"},"content":"        }"},{"lineNumber":17,"author":{"gitId":"hojiefeng"},"content":"    }"},{"lineNumber":18,"author":{"gitId":"hojiefeng"},"content":"}"}],"authorContributionMap":{"hojiefeng":18}},{"path":"src/test/java/duke/TaskListTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"hojiefeng"},"content":"package java.duke;"},{"lineNumber":2,"author":{"gitId":"hojiefeng"},"content":""},{"lineNumber":3,"author":{"gitId":"hojiefeng"},"content":"import duke.DukeEmptyDescriptionException;"},{"lineNumber":4,"author":{"gitId":"hojiefeng"},"content":"import duke.Task;"},{"lineNumber":5,"author":{"gitId":"hojiefeng"},"content":"import duke.TaskList;"},{"lineNumber":6,"author":{"gitId":"hojiefeng"},"content":"import org.junit.jupiter.api.Test;"},{"lineNumber":7,"author":{"gitId":"hojiefeng"},"content":""},{"lineNumber":8,"author":{"gitId":"hojiefeng"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;"},{"lineNumber":9,"author":{"gitId":"hojiefeng"},"content":""},{"lineNumber":10,"author":{"gitId":"hojiefeng"},"content":"public class TaskListTest {"},{"lineNumber":11,"author":{"gitId":"hojiefeng"},"content":"    @Test"},{"lineNumber":12,"author":{"gitId":"hojiefeng"},"content":"    public void taskListTest() {"},{"lineNumber":13,"author":{"gitId":"hojiefeng"},"content":"        TaskList tasklist \u003d new TaskList();"},{"lineNumber":14,"author":{"gitId":"hojiefeng"},"content":"        try {"},{"lineNumber":15,"author":{"gitId":"hojiefeng"},"content":"            tasklist.add(new Task(\"task1\"));"},{"lineNumber":16,"author":{"gitId":"hojiefeng"},"content":"        } catch (DukeEmptyDescriptionException e) {"},{"lineNumber":17,"author":{"gitId":"hojiefeng"},"content":""},{"lineNumber":18,"author":{"gitId":"hojiefeng"},"content":"        }"},{"lineNumber":19,"author":{"gitId":"hojiefeng"},"content":"        assertEquals(tasklist.size(), 1);"},{"lineNumber":20,"author":{"gitId":"hojiefeng"},"content":"        tasklist.remove(0);"},{"lineNumber":21,"author":{"gitId":"hojiefeng"},"content":"        assertEquals(tasklist.size(), 0);"},{"lineNumber":22,"author":{"gitId":"hojiefeng"},"content":"    }"},{"lineNumber":23,"author":{"gitId":"hojiefeng"},"content":"}"}],"authorContributionMap":{"hojiefeng":23}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"hojiefeng"},"content":"task1"},{"lineNumber":2,"author":{"gitId":"hojiefeng"},"content":"task2"},{"lineNumber":3,"author":{"gitId":"hojiefeng"},"content":"task3"},{"lineNumber":4,"author":{"gitId":"hojiefeng"},"content":"todo task4"},{"lineNumber":5,"author":{"gitId":"hojiefeng"},"content":"event task5 /at task5time"},{"lineNumber":6,"author":{"gitId":"hojiefeng"},"content":"deadline task6 /by task6time"},{"lineNumber":7,"author":{"gitId":"hojiefeng"},"content":"list"},{"lineNumber":8,"author":{"gitId":"hojiefeng"},"content":"done 1"},{"lineNumber":9,"author":{"gitId":"hojiefeng"},"content":"done 2"},{"lineNumber":10,"author":{"gitId":"hojiefeng"},"content":"done 3"},{"lineNumber":11,"author":{"gitId":"hojiefeng"},"content":"list"},{"lineNumber":12,"author":{"gitId":"hojiefeng"},"content":"delete 3"},{"lineNumber":13,"author":{"gitId":"hojiefeng"},"content":"delete 2"},{"lineNumber":14,"author":{"gitId":"hojiefeng"},"content":"delete 1"},{"lineNumber":15,"author":{"gitId":"hojiefeng"},"content":"list"},{"lineNumber":16,"author":{"gitId":"hojiefeng"},"content":"bye"}],"authorContributionMap":{"hojiefeng":16}}]
