[{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027checkstyle\u0027"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027"},{"lineNumber":6,"author":{"gitId":"-"},"content":"}"},{"lineNumber":7,"author":{"gitId":"-"},"content":""},{"lineNumber":8,"author":{"gitId":"-"},"content":"repositories {"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    mavenCentral()"},{"lineNumber":10,"author":{"gitId":"-"},"content":"}"},{"lineNumber":11,"author":{"gitId":"-"},"content":""},{"lineNumber":12,"author":{"gitId":"-"},"content":"dependencies {"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.5.0\u0027"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.5.0\u0027"},{"lineNumber":15,"author":{"gitId":"hojiefeng"},"content":"    String javaFxVersion \u003d \u002711\u0027"},{"lineNumber":16,"author":{"gitId":"hojiefeng"},"content":""},{"lineNumber":17,"author":{"gitId":"hojiefeng"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027"},{"lineNumber":18,"author":{"gitId":"hojiefeng"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"},{"lineNumber":19,"author":{"gitId":"hojiefeng"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"},{"lineNumber":20,"author":{"gitId":"hojiefeng"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027"},{"lineNumber":21,"author":{"gitId":"hojiefeng"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"},{"lineNumber":22,"author":{"gitId":"hojiefeng"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"},{"lineNumber":23,"author":{"gitId":"hojiefeng"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027"},{"lineNumber":24,"author":{"gitId":"hojiefeng"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"},{"lineNumber":25,"author":{"gitId":"hojiefeng"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"},{"lineNumber":26,"author":{"gitId":"hojiefeng"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027"},{"lineNumber":27,"author":{"gitId":"hojiefeng"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"},{"lineNumber":28,"author":{"gitId":"hojiefeng"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"},{"lineNumber":29,"author":{"gitId":"hojiefeng"},"content":""},{"lineNumber":30,"author":{"gitId":"-"},"content":"}"},{"lineNumber":31,"author":{"gitId":"-"},"content":""},{"lineNumber":32,"author":{"gitId":"-"},"content":"test {"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    useJUnitPlatform()"},{"lineNumber":34,"author":{"gitId":"-"},"content":""},{"lineNumber":35,"author":{"gitId":"-"},"content":"    testLogging {"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\""},{"lineNumber":37,"author":{"gitId":"-"},"content":""},{"lineNumber":38,"author":{"gitId":"-"},"content":"        showExceptions true"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\""},{"lineNumber":40,"author":{"gitId":"-"},"content":"        showCauses true"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        showStackTraces true"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":44,"author":{"gitId":"-"},"content":"}"},{"lineNumber":45,"author":{"gitId":"-"},"content":""},{"lineNumber":46,"author":{"gitId":"-"},"content":"application {"},{"lineNumber":47,"author":{"gitId":"hojiefeng"},"content":"    mainClassName \u003d \"duke.Launcher\""},{"lineNumber":48,"author":{"gitId":"-"},"content":"}"},{"lineNumber":49,"author":{"gitId":"-"},"content":""},{"lineNumber":50,"author":{"gitId":"-"},"content":"shadowJar {"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    archiveBaseName \u003d \"duke\""},{"lineNumber":52,"author":{"gitId":"hojiefeng"},"content":"    archiveVersion \u003d \"0.2\""},{"lineNumber":53,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null"},{"lineNumber":54,"author":{"gitId":"-"},"content":"}"},{"lineNumber":55,"author":{"gitId":"-"},"content":""},{"lineNumber":56,"author":{"gitId":"-"},"content":"checkstyle {"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    toolVersion \u003d \u00278.29\u0027"},{"lineNumber":58,"author":{"gitId":"-"},"content":"}"},{"lineNumber":59,"author":{"gitId":"-"},"content":""},{"lineNumber":60,"author":{"gitId":"-"},"content":"run{"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in"},{"lineNumber":62,"author":{"gitId":"-"},"content":"}"}],"authorContributionMap":{"hojiefeng":17,"-":45}},{"path":"docs/README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"# User Guide"},{"lineNumber":2,"author":{"gitId":"-"},"content":""},{"lineNumber":3,"author":{"gitId":"hojiefeng"},"content":"## Keeping track of tasks"},{"lineNumber":4,"author":{"gitId":"-"},"content":""},{"lineNumber":5,"author":{"gitId":"hojiefeng"},"content":"### Add/delete tasks"},{"lineNumber":6,"author":{"gitId":"hojiefeng"},"content":""},{"lineNumber":7,"author":{"gitId":"hojiefeng"},"content":"Events can be of 3 types, todo, event and deadline."},{"lineNumber":8,"author":{"gitId":"hojiefeng"},"content":""},{"lineNumber":9,"author":{"gitId":"hojiefeng"},"content":"### Set task as done"},{"lineNumber":10,"author":{"gitId":"hojiefeng"},"content":""},{"lineNumber":11,"author":{"gitId":"hojiefeng"},"content":"Tasks can be set as done."},{"lineNumber":12,"author":{"gitId":"hojiefeng"},"content":""},{"lineNumber":13,"author":{"gitId":"hojiefeng"},"content":"### Search for tasks"},{"lineNumber":14,"author":{"gitId":"hojiefeng"},"content":""},{"lineNumber":15,"author":{"gitId":"hojiefeng"},"content":"The user can search for a string in the task."},{"lineNumber":16,"author":{"gitId":"hojiefeng"},"content":""},{"lineNumber":17,"author":{"gitId":"hojiefeng"},"content":"### Tag tasks"},{"lineNumber":18,"author":{"gitId":"hojiefeng"},"content":""},{"lineNumber":19,"author":{"gitId":"hojiefeng"},"content":"Tasks can be tagged to categorize them."},{"lineNumber":20,"author":{"gitId":"-"},"content":""},{"lineNumber":21,"author":{"gitId":"-"},"content":"## Usage"},{"lineNumber":22,"author":{"gitId":"-"},"content":""},{"lineNumber":23,"author":{"gitId":"hojiefeng"},"content":"### `todo` - Add a todo task"},{"lineNumber":24,"author":{"gitId":"hojiefeng"},"content":""},{"lineNumber":25,"author":{"gitId":"hojiefeng"},"content":"This adds a todo task."},{"lineNumber":26,"author":{"gitId":"hojiefeng"},"content":""},{"lineNumber":27,"author":{"gitId":"hojiefeng"},"content":"Example of usage:"},{"lineNumber":28,"author":{"gitId":"hojiefeng"},"content":""},{"lineNumber":29,"author":{"gitId":"hojiefeng"},"content":"`todo (task name)`"},{"lineNumber":30,"author":{"gitId":"hojiefeng"},"content":""},{"lineNumber":31,"author":{"gitId":"hojiefeng"},"content":"Expected outcome:"},{"lineNumber":32,"author":{"gitId":"hojiefeng"},"content":""},{"lineNumber":33,"author":{"gitId":"hojiefeng"},"content":"`added: [T][ ] task`"},{"lineNumber":34,"author":{"gitId":"hojiefeng"},"content":""},{"lineNumber":35,"author":{"gitId":"hojiefeng"},"content":"### `event` - Add an event task"},{"lineNumber":36,"author":{"gitId":"-"},"content":""},{"lineNumber":37,"author":{"gitId":"hojiefeng"},"content":"This adds an event task."},{"lineNumber":38,"author":{"gitId":"-"},"content":""},{"lineNumber":39,"author":{"gitId":"-"},"content":"Example of usage:"},{"lineNumber":40,"author":{"gitId":"-"},"content":""},{"lineNumber":41,"author":{"gitId":"hojiefeng"},"content":"`event (event name) /at (event time)`"},{"lineNumber":42,"author":{"gitId":"-"},"content":""},{"lineNumber":43,"author":{"gitId":"-"},"content":"Expected outcome:"},{"lineNumber":44,"author":{"gitId":"-"},"content":""},{"lineNumber":45,"author":{"gitId":"hojiefeng"},"content":"`added: [E][ ] event (at: 2021-02-16)`"},{"lineNumber":46,"author":{"gitId":"hojiefeng"},"content":""},{"lineNumber":47,"author":{"gitId":"hojiefeng"},"content":"### `deadline` - Add a deadline task"},{"lineNumber":48,"author":{"gitId":"hojiefeng"},"content":""},{"lineNumber":49,"author":{"gitId":"hojiefeng"},"content":"This adds a deadline task."},{"lineNumber":50,"author":{"gitId":"-"},"content":""},{"lineNumber":51,"author":{"gitId":"hojiefeng"},"content":"Example of usage:"},{"lineNumber":52,"author":{"gitId":"-"},"content":""},{"lineNumber":53,"author":{"gitId":"hojiefeng"},"content":"`deadline (deadline name) /by (deadline time)`"},{"lineNumber":54,"author":{"gitId":"-"},"content":""},{"lineNumber":55,"author":{"gitId":"hojiefeng"},"content":"Expected outcome:"},{"lineNumber":56,"author":{"gitId":"hojiefeng"},"content":""},{"lineNumber":57,"author":{"gitId":"hojiefeng"},"content":"`added: [D][ ] deadline (by: 2021-02-16)`"},{"lineNumber":58,"author":{"gitId":"hojiefeng"},"content":""},{"lineNumber":59,"author":{"gitId":"hojiefeng"},"content":"### `done` - Set a task as done"},{"lineNumber":60,"author":{"gitId":"hojiefeng"},"content":""},{"lineNumber":61,"author":{"gitId":"hojiefeng"},"content":"This marks the task as done."},{"lineNumber":62,"author":{"gitId":"hojiefeng"},"content":""},{"lineNumber":63,"author":{"gitId":"hojiefeng"},"content":"Example of usage:"},{"lineNumber":64,"author":{"gitId":"hojiefeng"},"content":""},{"lineNumber":65,"author":{"gitId":"hojiefeng"},"content":"`done (task id)`"},{"lineNumber":66,"author":{"gitId":"-"},"content":""},{"lineNumber":67,"author":{"gitId":"-"},"content":"Expected outcome:"},{"lineNumber":68,"author":{"gitId":"-"},"content":""},{"lineNumber":69,"author":{"gitId":"hojiefeng"},"content":"`[T][X] task`"},{"lineNumber":70,"author":{"gitId":"hojiefeng"},"content":""},{"lineNumber":71,"author":{"gitId":"hojiefeng"},"content":"### `find` - Search for a string in task"},{"lineNumber":72,"author":{"gitId":"hojiefeng"},"content":""},{"lineNumber":73,"author":{"gitId":"hojiefeng"},"content":"This prints any task that contains the specified string."},{"lineNumber":74,"author":{"gitId":"hojiefeng"},"content":""},{"lineNumber":75,"author":{"gitId":"hojiefeng"},"content":"Example of usage:"},{"lineNumber":76,"author":{"gitId":"hojiefeng"},"content":""},{"lineNumber":77,"author":{"gitId":"hojiefeng"},"content":"`search (search string)`"},{"lineNumber":78,"author":{"gitId":"hojiefeng"},"content":""},{"lineNumber":79,"author":{"gitId":"hojiefeng"},"content":"### `list` - List tasks"},{"lineNumber":80,"author":{"gitId":"hojiefeng"},"content":""},{"lineNumber":81,"author":{"gitId":"hojiefeng"},"content":"Lists all the tasks that have been added so far."},{"lineNumber":82,"author":{"gitId":"hojiefeng"},"content":""},{"lineNumber":83,"author":{"gitId":"hojiefeng"},"content":"Example of usage:"},{"lineNumber":84,"author":{"gitId":"hojiefeng"},"content":""},{"lineNumber":85,"author":{"gitId":"hojiefeng"},"content":"`list`"},{"lineNumber":86,"author":{"gitId":"hojiefeng"},"content":""},{"lineNumber":87,"author":{"gitId":"hojiefeng"},"content":"### `delete` - Delete a task"},{"lineNumber":88,"author":{"gitId":"hojiefeng"},"content":""},{"lineNumber":89,"author":{"gitId":"hojiefeng"},"content":"This deletes the task."},{"lineNumber":90,"author":{"gitId":"hojiefeng"},"content":""},{"lineNumber":91,"author":{"gitId":"hojiefeng"},"content":"Example of usage:"},{"lineNumber":92,"author":{"gitId":"hojiefeng"},"content":""},{"lineNumber":93,"author":{"gitId":"hojiefeng"},"content":"`delete (task id)`"},{"lineNumber":94,"author":{"gitId":"hojiefeng"},"content":""},{"lineNumber":95,"author":{"gitId":"hojiefeng"},"content":"### `tag` - Tags a task"},{"lineNumber":96,"author":{"gitId":"hojiefeng"},"content":""},{"lineNumber":97,"author":{"gitId":"hojiefeng"},"content":"This either attaches or removes a tag for a task."},{"lineNumber":98,"author":{"gitId":"hojiefeng"},"content":""},{"lineNumber":99,"author":{"gitId":"hojiefeng"},"content":"Example of usage:"},{"lineNumber":100,"author":{"gitId":"hojiefeng"},"content":""},{"lineNumber":101,"author":{"gitId":"hojiefeng"},"content":"`task add (task id) (tag name)`"},{"lineNumber":102,"author":{"gitId":"hojiefeng"},"content":"`task delete (task id) (tag name)`"}],"authorContributionMap":{"hojiefeng":83,"-":19}},{"path":"src/main/java/duke/AbstractTask.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"hojiefeng"},"content":"package duke;"},{"lineNumber":2,"author":{"gitId":"hojiefeng"},"content":""},{"lineNumber":3,"author":{"gitId":"hojiefeng"},"content":"import java.io.Serializable;"},{"lineNumber":4,"author":{"gitId":"hojiefeng"},"content":"import java.util.ArrayList;"},{"lineNumber":5,"author":{"gitId":"hojiefeng"},"content":"import java.util.List;"},{"lineNumber":6,"author":{"gitId":"hojiefeng"},"content":"import java.util.stream.Collectors;"},{"lineNumber":7,"author":{"gitId":"hojiefeng"},"content":""},{"lineNumber":8,"author":{"gitId":"hojiefeng"},"content":"public abstract class AbstractTask implements Serializable {"},{"lineNumber":9,"author":{"gitId":"hojiefeng"},"content":"    protected final String description;"},{"lineNumber":10,"author":{"gitId":"hojiefeng"},"content":"    protected final List\u003cString\u003e tags;"},{"lineNumber":11,"author":{"gitId":"hojiefeng"},"content":"    protected boolean isDone;"},{"lineNumber":12,"author":{"gitId":"hojiefeng"},"content":"    /**"},{"lineNumber":13,"author":{"gitId":"hojiefeng"},"content":"     * Constructs a task using the description"},{"lineNumber":14,"author":{"gitId":"hojiefeng"},"content":"     *"},{"lineNumber":15,"author":{"gitId":"hojiefeng"},"content":"     * @throws DukeEmptyDescriptionException if the description is empty"},{"lineNumber":16,"author":{"gitId":"hojiefeng"},"content":"     */"},{"lineNumber":17,"author":{"gitId":"hojiefeng"},"content":"    public AbstractTask(String description) throws DukeEmptyDescriptionException {"},{"lineNumber":18,"author":{"gitId":"hojiefeng"},"content":"        if (description.isEmpty()) {"},{"lineNumber":19,"author":{"gitId":"hojiefeng"},"content":"            throw new DukeEmptyDescriptionException();"},{"lineNumber":20,"author":{"gitId":"hojiefeng"},"content":"        }"},{"lineNumber":21,"author":{"gitId":"hojiefeng"},"content":"        this.description \u003d description;"},{"lineNumber":22,"author":{"gitId":"hojiefeng"},"content":"        this.tags \u003d new ArrayList\u003c\u003e();"},{"lineNumber":23,"author":{"gitId":"hojiefeng"},"content":"        this.isDone \u003d false;"},{"lineNumber":24,"author":{"gitId":"hojiefeng"},"content":"    }"},{"lineNumber":25,"author":{"gitId":"hojiefeng"},"content":""},{"lineNumber":26,"author":{"gitId":"hojiefeng"},"content":"    /**"},{"lineNumber":27,"author":{"gitId":"hojiefeng"},"content":"     * Mark the task as done"},{"lineNumber":28,"author":{"gitId":"hojiefeng"},"content":"     */"},{"lineNumber":29,"author":{"gitId":"hojiefeng"},"content":"    public void markDone() {"},{"lineNumber":30,"author":{"gitId":"hojiefeng"},"content":"        this.isDone \u003d true;"},{"lineNumber":31,"author":{"gitId":"hojiefeng"},"content":"    }"},{"lineNumber":32,"author":{"gitId":"hojiefeng"},"content":""},{"lineNumber":33,"author":{"gitId":"hojiefeng"},"content":"    /**"},{"lineNumber":34,"author":{"gitId":"hojiefeng"},"content":"     * Add a tag to a task"},{"lineNumber":35,"author":{"gitId":"hojiefeng"},"content":"     *"},{"lineNumber":36,"author":{"gitId":"hojiefeng"},"content":"     * @param tag tag name"},{"lineNumber":37,"author":{"gitId":"hojiefeng"},"content":"     */"},{"lineNumber":38,"author":{"gitId":"hojiefeng"},"content":"    public void addTag(String tag) {"},{"lineNumber":39,"author":{"gitId":"hojiefeng"},"content":"        tags.add(tag);"},{"lineNumber":40,"author":{"gitId":"hojiefeng"},"content":"    }"},{"lineNumber":41,"author":{"gitId":"hojiefeng"},"content":""},{"lineNumber":42,"author":{"gitId":"hojiefeng"},"content":"    /**"},{"lineNumber":43,"author":{"gitId":"hojiefeng"},"content":"     * Delete a tag from a task"},{"lineNumber":44,"author":{"gitId":"hojiefeng"},"content":"     *"},{"lineNumber":45,"author":{"gitId":"hojiefeng"},"content":"     * @param tag tag name"},{"lineNumber":46,"author":{"gitId":"hojiefeng"},"content":"     */"},{"lineNumber":47,"author":{"gitId":"hojiefeng"},"content":"    public void deleteTag(String tag) {"},{"lineNumber":48,"author":{"gitId":"hojiefeng"},"content":"        tags.remove(tag);"},{"lineNumber":49,"author":{"gitId":"hojiefeng"},"content":"    }"},{"lineNumber":50,"author":{"gitId":"hojiefeng"},"content":""},{"lineNumber":51,"author":{"gitId":"hojiefeng"},"content":"    /**"},{"lineNumber":52,"author":{"gitId":"hojiefeng"},"content":"     * Return a string representation of the task"},{"lineNumber":53,"author":{"gitId":"hojiefeng"},"content":"     */"},{"lineNumber":54,"author":{"gitId":"hojiefeng"},"content":"    @Override"},{"lineNumber":55,"author":{"gitId":"hojiefeng"},"content":"    public String toString() {"},{"lineNumber":56,"author":{"gitId":"hojiefeng"},"content":"        String tagString \u003d tags.stream().map(x -\u003e \"#\" + x).collect(Collectors.joining());"},{"lineNumber":57,"author":{"gitId":"hojiefeng"},"content":"        return String.format(\"[%s] %s %s\", isDone ? \"X\" : \" \", description, tagString);"},{"lineNumber":58,"author":{"gitId":"hojiefeng"},"content":"    }"},{"lineNumber":59,"author":{"gitId":"hojiefeng"},"content":"}"}],"authorContributionMap":{"hojiefeng":59}},{"path":"src/main/java/duke/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"hojiefeng"},"content":"package duke;"},{"lineNumber":2,"author":{"gitId":"hojiefeng"},"content":""},{"lineNumber":3,"author":{"gitId":"hojiefeng"},"content":"import java.time.LocalDate;"},{"lineNumber":4,"author":{"gitId":"hojiefeng"},"content":"import java.time.format.DateTimeFormatter;"},{"lineNumber":5,"author":{"gitId":"hojiefeng"},"content":"import java.time.format.DateTimeParseException;"},{"lineNumber":6,"author":{"gitId":"hojiefeng"},"content":""},{"lineNumber":7,"author":{"gitId":"hojiefeng"},"content":"public class Deadline extends AbstractTask {"},{"lineNumber":8,"author":{"gitId":"hojiefeng"},"content":"    protected final LocalDate by;"},{"lineNumber":9,"author":{"gitId":"hojiefeng"},"content":""},{"lineNumber":10,"author":{"gitId":"hojiefeng"},"content":"    /**"},{"lineNumber":11,"author":{"gitId":"hojiefeng"},"content":"     * Constructs a deadline task using the description and the deadline timing"},{"lineNumber":12,"author":{"gitId":"hojiefeng"},"content":"     *"},{"lineNumber":13,"author":{"gitId":"hojiefeng"},"content":"     * @throws DukeEmptyDescriptionException if the description is empty"},{"lineNumber":14,"author":{"gitId":"hojiefeng"},"content":"     * @throws DateTimeParseException if the date cannot be parsed"},{"lineNumber":15,"author":{"gitId":"hojiefeng"},"content":"     */"},{"lineNumber":16,"author":{"gitId":"hojiefeng"},"content":"    public Deadline(String description, String by) throws DukeEmptyDescriptionException, DateTimeParseException {"},{"lineNumber":17,"author":{"gitId":"hojiefeng"},"content":"        super(description);"},{"lineNumber":18,"author":{"gitId":"hojiefeng"},"content":"        this.by \u003d LocalDate.parse(by);"},{"lineNumber":19,"author":{"gitId":"hojiefeng"},"content":"    }"},{"lineNumber":20,"author":{"gitId":"hojiefeng"},"content":""},{"lineNumber":21,"author":{"gitId":"hojiefeng"},"content":"    /*"},{"lineNumber":22,"author":{"gitId":"hojiefeng"},"content":"     * Return a string representation of the task"},{"lineNumber":23,"author":{"gitId":"hojiefeng"},"content":"     */"},{"lineNumber":24,"author":{"gitId":"hojiefeng"},"content":"    @Override"},{"lineNumber":25,"author":{"gitId":"hojiefeng"},"content":"    public String toString() {"},{"lineNumber":26,"author":{"gitId":"hojiefeng"},"content":"        String byFormatted \u003d by.format(DateTimeFormatter.ofPattern(\"MMM dd yyyy\"));"},{"lineNumber":27,"author":{"gitId":"hojiefeng"},"content":"        return String.format(\"[D]%s (by: %s)\", super.toString(), byFormatted);"},{"lineNumber":28,"author":{"gitId":"hojiefeng"},"content":"    }"},{"lineNumber":29,"author":{"gitId":"hojiefeng"},"content":"}"}],"authorContributionMap":{"hojiefeng":29}},{"path":"src/main/java/duke/DialogBox.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"hojiefeng"},"content":"package duke;"},{"lineNumber":2,"author":{"gitId":"hojiefeng"},"content":"import java.io.IOException;"},{"lineNumber":3,"author":{"gitId":"hojiefeng"},"content":"import java.util.Collections;"},{"lineNumber":4,"author":{"gitId":"hojiefeng"},"content":""},{"lineNumber":5,"author":{"gitId":"hojiefeng"},"content":"import javafx.collections.FXCollections;"},{"lineNumber":6,"author":{"gitId":"hojiefeng"},"content":"import javafx.collections.ObservableList;"},{"lineNumber":7,"author":{"gitId":"hojiefeng"},"content":"import javafx.fxml.FXML;"},{"lineNumber":8,"author":{"gitId":"hojiefeng"},"content":"import javafx.fxml.FXMLLoader;"},{"lineNumber":9,"author":{"gitId":"hojiefeng"},"content":"import javafx.geometry.Pos;"},{"lineNumber":10,"author":{"gitId":"hojiefeng"},"content":"import javafx.scene.Node;"},{"lineNumber":11,"author":{"gitId":"hojiefeng"},"content":"import javafx.scene.control.Label;"},{"lineNumber":12,"author":{"gitId":"hojiefeng"},"content":"import javafx.scene.image.Image;"},{"lineNumber":13,"author":{"gitId":"hojiefeng"},"content":"import javafx.scene.image.ImageView;"},{"lineNumber":14,"author":{"gitId":"hojiefeng"},"content":"import javafx.scene.layout.HBox;"},{"lineNumber":15,"author":{"gitId":"hojiefeng"},"content":"import javafx.scene.layout.Priority;"},{"lineNumber":16,"author":{"gitId":"hojiefeng"},"content":"import javafx.scene.paint.Color;"},{"lineNumber":17,"author":{"gitId":"hojiefeng"},"content":""},{"lineNumber":18,"author":{"gitId":"hojiefeng"},"content":"/**"},{"lineNumber":19,"author":{"gitId":"hojiefeng"},"content":" * An example of a custom control using FXML."},{"lineNumber":20,"author":{"gitId":"hojiefeng"},"content":" * This control represents a dialog box consisting of an ImageView to represent the speaker\u0027s face and a label"},{"lineNumber":21,"author":{"gitId":"hojiefeng"},"content":" * containing text from the speaker."},{"lineNumber":22,"author":{"gitId":"hojiefeng"},"content":" */"},{"lineNumber":23,"author":{"gitId":"hojiefeng"},"content":"public class DialogBox extends HBox {"},{"lineNumber":24,"author":{"gitId":"hojiefeng"},"content":"    @FXML"},{"lineNumber":25,"author":{"gitId":"hojiefeng"},"content":"    private Label dialogTitle;"},{"lineNumber":26,"author":{"gitId":"hojiefeng"},"content":"    @FXML"},{"lineNumber":27,"author":{"gitId":"hojiefeng"},"content":"    private Label dialog;"},{"lineNumber":28,"author":{"gitId":"hojiefeng"},"content":"    @FXML"},{"lineNumber":29,"author":{"gitId":"hojiefeng"},"content":"    private ImageView displayPicture;"},{"lineNumber":30,"author":{"gitId":"hojiefeng"},"content":""},{"lineNumber":31,"author":{"gitId":"hojiefeng"},"content":"    private DialogBox(String text, Image img) {"},{"lineNumber":32,"author":{"gitId":"hojiefeng"},"content":"        try {"},{"lineNumber":33,"author":{"gitId":"hojiefeng"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(\"/view/DialogBox.fxml\"));"},{"lineNumber":34,"author":{"gitId":"hojiefeng"},"content":"            fxmlLoader.setController(this);"},{"lineNumber":35,"author":{"gitId":"hojiefeng"},"content":"            fxmlLoader.setRoot(this);"},{"lineNumber":36,"author":{"gitId":"hojiefeng"},"content":"            fxmlLoader.load();"},{"lineNumber":37,"author":{"gitId":"hojiefeng"},"content":"        } catch (IOException e) {"},{"lineNumber":38,"author":{"gitId":"hojiefeng"},"content":"            e.printStackTrace();"},{"lineNumber":39,"author":{"gitId":"hojiefeng"},"content":"        }"},{"lineNumber":40,"author":{"gitId":"hojiefeng"},"content":""},{"lineNumber":41,"author":{"gitId":"hojiefeng"},"content":"        dialog.setText(text);"},{"lineNumber":42,"author":{"gitId":"hojiefeng"},"content":"        displayPicture.setImage(img);"},{"lineNumber":43,"author":{"gitId":"hojiefeng"},"content":"    }"},{"lineNumber":44,"author":{"gitId":"hojiefeng"},"content":""},{"lineNumber":45,"author":{"gitId":"hojiefeng"},"content":"    /**"},{"lineNumber":46,"author":{"gitId":"hojiefeng"},"content":"     * Flips the dialog box such that the ImageView is on the left and text on the right."},{"lineNumber":47,"author":{"gitId":"hojiefeng"},"content":"     */"},{"lineNumber":48,"author":{"gitId":"hojiefeng"},"content":"    private void flip() {"},{"lineNumber":49,"author":{"gitId":"hojiefeng"},"content":"        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());"},{"lineNumber":50,"author":{"gitId":"hojiefeng"},"content":"        Collections.reverse(tmp);"},{"lineNumber":51,"author":{"gitId":"hojiefeng"},"content":"        getChildren().setAll(tmp);"},{"lineNumber":52,"author":{"gitId":"hojiefeng"},"content":"        setAlignment(Pos.TOP_LEFT);"},{"lineNumber":53,"author":{"gitId":"hojiefeng"},"content":"    }"},{"lineNumber":54,"author":{"gitId":"hojiefeng"},"content":""},{"lineNumber":55,"author":{"gitId":"hojiefeng"},"content":"    public static DialogBox getUserDialog(String text, Image img) {"},{"lineNumber":56,"author":{"gitId":"hojiefeng"},"content":"        return new DialogBox(text, img);"},{"lineNumber":57,"author":{"gitId":"hojiefeng"},"content":"    }"},{"lineNumber":58,"author":{"gitId":"hojiefeng"},"content":""},{"lineNumber":59,"author":{"gitId":"hojiefeng"},"content":"    public static DialogBox getDukeDialog(String text, Image img, Color textColor) {"},{"lineNumber":60,"author":{"gitId":"hojiefeng"},"content":"        var db \u003d new DialogBox(text, img);"},{"lineNumber":61,"author":{"gitId":"hojiefeng"},"content":"        db.dialog.setTextFill(textColor);"},{"lineNumber":62,"author":{"gitId":"hojiefeng"},"content":"        db.flip();"},{"lineNumber":63,"author":{"gitId":"hojiefeng"},"content":"        return db;"},{"lineNumber":64,"author":{"gitId":"hojiefeng"},"content":"    }"},{"lineNumber":65,"author":{"gitId":"hojiefeng"},"content":"}"}],"authorContributionMap":{"hojiefeng":65}},{"path":"src/main/java/duke/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"hojiefeng"},"content":"package duke;"},{"lineNumber":2,"author":{"gitId":"hojiefeng"},"content":""},{"lineNumber":3,"author":{"gitId":"-"},"content":"public class Duke {"},{"lineNumber":4,"author":{"gitId":"hojiefeng"},"content":""},{"lineNumber":5,"author":{"gitId":"hojiefeng"},"content":"    private static final String DUKE_LOGO \u003d \" ____        _        \\n\""},{"lineNumber":6,"author":{"gitId":"-"},"content":"            + \"|  _ \\\\ _   _| | _____ \\n\""},{"lineNumber":7,"author":{"gitId":"-"},"content":"            + \"| | | | | | | |/ / _ \\\\\\n\""},{"lineNumber":8,"author":{"gitId":"-"},"content":"            + \"| |_| | |_| |   \u003c  __/\\n\""},{"lineNumber":9,"author":{"gitId":"-"},"content":"            + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\";"},{"lineNumber":10,"author":{"gitId":"hojiefeng"},"content":"    protected final TaskList tasks;"},{"lineNumber":11,"author":{"gitId":"hojiefeng"},"content":"    protected final Storage storage;"},{"lineNumber":12,"author":{"gitId":"hojiefeng"},"content":"    protected final Parser parser;"},{"lineNumber":13,"author":{"gitId":"hojiefeng"},"content":"    protected final Ui ui;"},{"lineNumber":14,"author":{"gitId":"hojiefeng"},"content":""},{"lineNumber":15,"author":{"gitId":"hojiefeng"},"content":"    /**"},{"lineNumber":16,"author":{"gitId":"hojiefeng"},"content":"     * Instantiates the main duke class"},{"lineNumber":17,"author":{"gitId":"hojiefeng"},"content":"     */"},{"lineNumber":18,"author":{"gitId":"hojiefeng"},"content":"    public Duke() {"},{"lineNumber":19,"author":{"gitId":"hojiefeng"},"content":"        tasks \u003d new TaskList();"},{"lineNumber":20,"author":{"gitId":"hojiefeng"},"content":"        storage \u003d new Storage(\"data/duke.txt\");"},{"lineNumber":21,"author":{"gitId":"hojiefeng"},"content":"        parser \u003d new Parser();"},{"lineNumber":22,"author":{"gitId":"hojiefeng"},"content":"        ui \u003d new Ui(tasks, DUKE_LOGO);"},{"lineNumber":23,"author":{"gitId":"hojiefeng"},"content":"        storage.readTasks(tasks);"},{"lineNumber":24,"author":{"gitId":"hojiefeng"},"content":"    }"},{"lineNumber":25,"author":{"gitId":"hojiefeng"},"content":""},{"lineNumber":26,"author":{"gitId":"hojiefeng"},"content":"    /**"},{"lineNumber":27,"author":{"gitId":"hojiefeng"},"content":"     * Generate a response to user input."},{"lineNumber":28,"author":{"gitId":"hojiefeng"},"content":"     */"},{"lineNumber":29,"author":{"gitId":"hojiefeng"},"content":"    public String getResponse(String input) {"},{"lineNumber":30,"author":{"gitId":"hojiefeng"},"content":"        String response \u003d parser.processLine(input, tasks);"},{"lineNumber":31,"author":{"gitId":"hojiefeng"},"content":"        assert(response !\u003d null);"},{"lineNumber":32,"author":{"gitId":"hojiefeng"},"content":"        storage.saveTasks(tasks);"},{"lineNumber":33,"author":{"gitId":"hojiefeng"},"content":"        return response;"},{"lineNumber":34,"author":{"gitId":"hojiefeng"},"content":"    }"},{"lineNumber":35,"author":{"gitId":"hojiefeng"},"content":"}"}],"authorContributionMap":{"hojiefeng":30,"-":5}},{"path":"src/main/java/duke/DukeEmptyDescriptionException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"hojiefeng"},"content":"package duke;"},{"lineNumber":2,"author":{"gitId":"hojiefeng"},"content":""},{"lineNumber":3,"author":{"gitId":"hojiefeng"},"content":"public class DukeEmptyDescriptionException extends DukeException {"},{"lineNumber":4,"author":{"gitId":"hojiefeng"},"content":""},{"lineNumber":5,"author":{"gitId":"hojiefeng"},"content":"}"}],"authorContributionMap":{"hojiefeng":5}},{"path":"src/main/java/duke/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"hojiefeng"},"content":"package duke;"},{"lineNumber":2,"author":{"gitId":"hojiefeng"},"content":""},{"lineNumber":3,"author":{"gitId":"hojiefeng"},"content":"public class DukeException extends Exception {"},{"lineNumber":4,"author":{"gitId":"hojiefeng"},"content":""},{"lineNumber":5,"author":{"gitId":"hojiefeng"},"content":"}"}],"authorContributionMap":{"hojiefeng":5}},{"path":"src/main/java/duke/DukeUnknownCommandException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"hojiefeng"},"content":"package duke;"},{"lineNumber":2,"author":{"gitId":"hojiefeng"},"content":""},{"lineNumber":3,"author":{"gitId":"hojiefeng"},"content":"public class DukeUnknownCommandException extends DukeException {"},{"lineNumber":4,"author":{"gitId":"hojiefeng"},"content":""},{"lineNumber":5,"author":{"gitId":"hojiefeng"},"content":"}"}],"authorContributionMap":{"hojiefeng":5}},{"path":"src/main/java/duke/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"hojiefeng"},"content":"package duke;"},{"lineNumber":2,"author":{"gitId":"hojiefeng"},"content":""},{"lineNumber":3,"author":{"gitId":"hojiefeng"},"content":"public class Event extends AbstractTask {"},{"lineNumber":4,"author":{"gitId":"hojiefeng"},"content":"    protected final String at;"},{"lineNumber":5,"author":{"gitId":"hojiefeng"},"content":""},{"lineNumber":6,"author":{"gitId":"hojiefeng"},"content":"    /**"},{"lineNumber":7,"author":{"gitId":"hojiefeng"},"content":"     * Constructs an event task using the description and the event timing"},{"lineNumber":8,"author":{"gitId":"hojiefeng"},"content":"     *"},{"lineNumber":9,"author":{"gitId":"hojiefeng"},"content":"     * @param description class description"},{"lineNumber":10,"author":{"gitId":"hojiefeng"},"content":"     * @param at time of the event"},{"lineNumber":11,"author":{"gitId":"hojiefeng"},"content":"     * @throws DukeEmptyDescriptionException if the description is empty"},{"lineNumber":12,"author":{"gitId":"hojiefeng"},"content":"     */"},{"lineNumber":13,"author":{"gitId":"hojiefeng"},"content":"    public Event(String description, String at) throws DukeEmptyDescriptionException {"},{"lineNumber":14,"author":{"gitId":"hojiefeng"},"content":"        super(description);"},{"lineNumber":15,"author":{"gitId":"hojiefeng"},"content":"        this.at \u003d at;"},{"lineNumber":16,"author":{"gitId":"hojiefeng"},"content":"    }"},{"lineNumber":17,"author":{"gitId":"hojiefeng"},"content":""},{"lineNumber":18,"author":{"gitId":"hojiefeng"},"content":"    /**"},{"lineNumber":19,"author":{"gitId":"hojiefeng"},"content":"     * Return a string representation of the task"},{"lineNumber":20,"author":{"gitId":"hojiefeng"},"content":"     */"},{"lineNumber":21,"author":{"gitId":"hojiefeng"},"content":"    @Override"},{"lineNumber":22,"author":{"gitId":"hojiefeng"},"content":"    public String toString() {"},{"lineNumber":23,"author":{"gitId":"hojiefeng"},"content":"        return String.format(\"[E]%s (at: %s)\", super.toString(), at);"},{"lineNumber":24,"author":{"gitId":"hojiefeng"},"content":"    }"},{"lineNumber":25,"author":{"gitId":"hojiefeng"},"content":"}"}],"authorContributionMap":{"hojiefeng":25}},{"path":"src/main/java/duke/Launcher.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"hojiefeng"},"content":"package duke;"},{"lineNumber":2,"author":{"gitId":"hojiefeng"},"content":""},{"lineNumber":3,"author":{"gitId":"hojiefeng"},"content":"import javafx.application.Application;"},{"lineNumber":4,"author":{"gitId":"hojiefeng"},"content":""},{"lineNumber":5,"author":{"gitId":"hojiefeng"},"content":"/**"},{"lineNumber":6,"author":{"gitId":"hojiefeng"},"content":" * A launcher class to workaround classpath issues."},{"lineNumber":7,"author":{"gitId":"hojiefeng"},"content":" */"},{"lineNumber":8,"author":{"gitId":"hojiefeng"},"content":"public class Launcher {"},{"lineNumber":9,"author":{"gitId":"hojiefeng"},"content":"    public static void main(String[] args) {"},{"lineNumber":10,"author":{"gitId":"hojiefeng"},"content":"        Application.launch(Main.class, args);"},{"lineNumber":11,"author":{"gitId":"hojiefeng"},"content":"    }"},{"lineNumber":12,"author":{"gitId":"hojiefeng"},"content":"}"}],"authorContributionMap":{"hojiefeng":12}},{"path":"src/main/java/duke/Main.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"hojiefeng"},"content":"package duke;"},{"lineNumber":2,"author":{"gitId":"hojiefeng"},"content":""},{"lineNumber":3,"author":{"gitId":"hojiefeng"},"content":"import java.io.IOException;"},{"lineNumber":4,"author":{"gitId":"hojiefeng"},"content":""},{"lineNumber":5,"author":{"gitId":"hojiefeng"},"content":"import javafx.application.Application;"},{"lineNumber":6,"author":{"gitId":"hojiefeng"},"content":"import javafx.fxml.FXMLLoader;"},{"lineNumber":7,"author":{"gitId":"hojiefeng"},"content":"import javafx.scene.Scene;"},{"lineNumber":8,"author":{"gitId":"hojiefeng"},"content":"import javafx.scene.layout.AnchorPane;"},{"lineNumber":9,"author":{"gitId":"hojiefeng"},"content":"import javafx.stage.Stage;"},{"lineNumber":10,"author":{"gitId":"hojiefeng"},"content":""},{"lineNumber":11,"author":{"gitId":"hojiefeng"},"content":"/**"},{"lineNumber":12,"author":{"gitId":"hojiefeng"},"content":" * A GUI for Duke using FXML."},{"lineNumber":13,"author":{"gitId":"hojiefeng"},"content":" */"},{"lineNumber":14,"author":{"gitId":"hojiefeng"},"content":"public class Main extends Application {"},{"lineNumber":15,"author":{"gitId":"hojiefeng"},"content":""},{"lineNumber":16,"author":{"gitId":"hojiefeng"},"content":"    private Duke duke \u003d new Duke();"},{"lineNumber":17,"author":{"gitId":"hojiefeng"},"content":""},{"lineNumber":18,"author":{"gitId":"hojiefeng"},"content":"    @Override"},{"lineNumber":19,"author":{"gitId":"hojiefeng"},"content":"    public void start(Stage stage) {"},{"lineNumber":20,"author":{"gitId":"hojiefeng"},"content":"        try {"},{"lineNumber":21,"author":{"gitId":"hojiefeng"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(Main.class.getResource(\"/view/MainWindow.fxml\"));"},{"lineNumber":22,"author":{"gitId":"hojiefeng"},"content":"            AnchorPane ap \u003d fxmlLoader.load();"},{"lineNumber":23,"author":{"gitId":"hojiefeng"},"content":"            Scene scene \u003d new Scene(ap);"},{"lineNumber":24,"author":{"gitId":"hojiefeng"},"content":"            stage.setScene(scene);"},{"lineNumber":25,"author":{"gitId":"hojiefeng"},"content":"            fxmlLoader.\u003cMainWindow\u003egetController().setDuke(duke);"},{"lineNumber":26,"author":{"gitId":"hojiefeng"},"content":"            stage.show();"},{"lineNumber":27,"author":{"gitId":"hojiefeng"},"content":"        } catch (IOException e) {"},{"lineNumber":28,"author":{"gitId":"hojiefeng"},"content":"            e.printStackTrace();"},{"lineNumber":29,"author":{"gitId":"hojiefeng"},"content":"        }"},{"lineNumber":30,"author":{"gitId":"hojiefeng"},"content":"    }"},{"lineNumber":31,"author":{"gitId":"hojiefeng"},"content":"}"},{"lineNumber":32,"author":{"gitId":"hojiefeng"},"content":""}],"authorContributionMap":{"hojiefeng":32}},{"path":"src/main/java/duke/MainWindow.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"hojiefeng"},"content":"package duke;"},{"lineNumber":2,"author":{"gitId":"hojiefeng"},"content":""},{"lineNumber":3,"author":{"gitId":"hojiefeng"},"content":"import javafx.fxml.FXML;"},{"lineNumber":4,"author":{"gitId":"hojiefeng"},"content":"import javafx.scene.control.Button;"},{"lineNumber":5,"author":{"gitId":"hojiefeng"},"content":"import javafx.scene.control.ScrollPane;"},{"lineNumber":6,"author":{"gitId":"hojiefeng"},"content":"import javafx.scene.control.TextField;"},{"lineNumber":7,"author":{"gitId":"hojiefeng"},"content":"import javafx.scene.image.Image;"},{"lineNumber":8,"author":{"gitId":"hojiefeng"},"content":"import javafx.scene.layout.AnchorPane;"},{"lineNumber":9,"author":{"gitId":"hojiefeng"},"content":"import javafx.scene.layout.VBox;"},{"lineNumber":10,"author":{"gitId":"hojiefeng"},"content":"import javafx.scene.paint.Color;"},{"lineNumber":11,"author":{"gitId":"hojiefeng"},"content":""},{"lineNumber":12,"author":{"gitId":"hojiefeng"},"content":"/**"},{"lineNumber":13,"author":{"gitId":"hojiefeng"},"content":" * Controller for MainWindow. Provides the layout for the other controls."},{"lineNumber":14,"author":{"gitId":"hojiefeng"},"content":" */"},{"lineNumber":15,"author":{"gitId":"hojiefeng"},"content":"public class MainWindow extends AnchorPane {"},{"lineNumber":16,"author":{"gitId":"hojiefeng"},"content":"    @FXML"},{"lineNumber":17,"author":{"gitId":"hojiefeng"},"content":"    private ScrollPane scrollPane;"},{"lineNumber":18,"author":{"gitId":"hojiefeng"},"content":"    @FXML"},{"lineNumber":19,"author":{"gitId":"hojiefeng"},"content":"    private VBox dialogContainer;"},{"lineNumber":20,"author":{"gitId":"hojiefeng"},"content":"    @FXML"},{"lineNumber":21,"author":{"gitId":"hojiefeng"},"content":"    private TextField userInput;"},{"lineNumber":22,"author":{"gitId":"hojiefeng"},"content":"    @FXML"},{"lineNumber":23,"author":{"gitId":"hojiefeng"},"content":"    private Button sendButton;"},{"lineNumber":24,"author":{"gitId":"hojiefeng"},"content":""},{"lineNumber":25,"author":{"gitId":"hojiefeng"},"content":"    private Duke duke;"},{"lineNumber":26,"author":{"gitId":"hojiefeng"},"content":""},{"lineNumber":27,"author":{"gitId":"hojiefeng"},"content":"    private Image userImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaUser.png\"));"},{"lineNumber":28,"author":{"gitId":"hojiefeng"},"content":"    private Image dukeImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaDuke.png\"));"},{"lineNumber":29,"author":{"gitId":"hojiefeng"},"content":""},{"lineNumber":30,"author":{"gitId":"hojiefeng"},"content":"    @FXML"},{"lineNumber":31,"author":{"gitId":"hojiefeng"},"content":"    public void initialize() {"},{"lineNumber":32,"author":{"gitId":"hojiefeng"},"content":"        scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());"},{"lineNumber":33,"author":{"gitId":"hojiefeng"},"content":"    }"},{"lineNumber":34,"author":{"gitId":"hojiefeng"},"content":""},{"lineNumber":35,"author":{"gitId":"hojiefeng"},"content":"    public void setDuke(Duke d) {"},{"lineNumber":36,"author":{"gitId":"hojiefeng"},"content":"        duke \u003d d;"},{"lineNumber":37,"author":{"gitId":"hojiefeng"},"content":"    }"},{"lineNumber":38,"author":{"gitId":"hojiefeng"},"content":""},{"lineNumber":39,"author":{"gitId":"hojiefeng"},"content":"    /**"},{"lineNumber":40,"author":{"gitId":"hojiefeng"},"content":"     * Creates two dialog boxes, one echoing user input and the other containing Duke\u0027s reply and then appends them to"},{"lineNumber":41,"author":{"gitId":"hojiefeng"},"content":"     * the dialog container. Clears the user input after processing."},{"lineNumber":42,"author":{"gitId":"hojiefeng"},"content":"     */"},{"lineNumber":43,"author":{"gitId":"hojiefeng"},"content":"    @FXML"},{"lineNumber":44,"author":{"gitId":"hojiefeng"},"content":"    private void handleUserInput() {"},{"lineNumber":45,"author":{"gitId":"hojiefeng"},"content":"        String input \u003d userInput.getText();"},{"lineNumber":46,"author":{"gitId":"hojiefeng"},"content":"        String response \u003d duke.getResponse(input);"},{"lineNumber":47,"author":{"gitId":"hojiefeng"},"content":"        if (response.equals(\"Bye!\")) {"},{"lineNumber":48,"author":{"gitId":"hojiefeng"},"content":"            System.exit(0);"},{"lineNumber":49,"author":{"gitId":"hojiefeng"},"content":"        }"},{"lineNumber":50,"author":{"gitId":"hojiefeng"},"content":"        Color textColor \u003d Color.BLACK;"},{"lineNumber":51,"author":{"gitId":"hojiefeng"},"content":"        if (response.contains(\"!\")) {"},{"lineNumber":52,"author":{"gitId":"hojiefeng"},"content":"            textColor \u003d Color.RED;"},{"lineNumber":53,"author":{"gitId":"hojiefeng"},"content":"        } else if (response.contains(\"added\")) {"},{"lineNumber":54,"author":{"gitId":"hojiefeng"},"content":"            textColor \u003d Color.GREEN;"},{"lineNumber":55,"author":{"gitId":"hojiefeng"},"content":"        }"},{"lineNumber":56,"author":{"gitId":"hojiefeng"},"content":"        dialogContainer.getChildren().addAll("},{"lineNumber":57,"author":{"gitId":"hojiefeng"},"content":"                DialogBox.getUserDialog(input, userImage),"},{"lineNumber":58,"author":{"gitId":"hojiefeng"},"content":"                DialogBox.getDukeDialog(response, dukeImage, textColor)"},{"lineNumber":59,"author":{"gitId":"hojiefeng"},"content":"        );"},{"lineNumber":60,"author":{"gitId":"hojiefeng"},"content":"        userInput.clear();"},{"lineNumber":61,"author":{"gitId":"hojiefeng"},"content":"    }"},{"lineNumber":62,"author":{"gitId":"hojiefeng"},"content":"}"}],"authorContributionMap":{"hojiefeng":62}},{"path":"src/main/java/duke/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"hojiefeng"},"content":"package duke;"},{"lineNumber":2,"author":{"gitId":"hojiefeng"},"content":""},{"lineNumber":3,"author":{"gitId":"hojiefeng"},"content":"import java.time.format.DateTimeParseException;"},{"lineNumber":4,"author":{"gitId":"hojiefeng"},"content":"import java.util.ArrayList;"},{"lineNumber":5,"author":{"gitId":"hojiefeng"},"content":"import java.util.stream.Collectors;"},{"lineNumber":6,"author":{"gitId":"hojiefeng"},"content":"import java.util.stream.IntStream;"},{"lineNumber":7,"author":{"gitId":"hojiefeng"},"content":""},{"lineNumber":8,"author":{"gitId":"hojiefeng"},"content":""},{"lineNumber":9,"author":{"gitId":"hojiefeng"},"content":"public class Parser {"},{"lineNumber":10,"author":{"gitId":"hojiefeng"},"content":"    /**"},{"lineNumber":11,"author":{"gitId":"hojiefeng"},"content":"     * Handle each line"},{"lineNumber":12,"author":{"gitId":"hojiefeng"},"content":"     *"},{"lineNumber":13,"author":{"gitId":"hojiefeng"},"content":"     * @param line the current line to process"},{"lineNumber":14,"author":{"gitId":"hojiefeng"},"content":"     * @param tasks the current task list to process"},{"lineNumber":15,"author":{"gitId":"hojiefeng"},"content":"     * @return response of the command"},{"lineNumber":16,"author":{"gitId":"hojiefeng"},"content":"     */"},{"lineNumber":17,"author":{"gitId":"hojiefeng"},"content":"    public String processLine(String line, TaskList tasks) {"},{"lineNumber":18,"author":{"gitId":"hojiefeng"},"content":"        try {"},{"lineNumber":19,"author":{"gitId":"hojiefeng"},"content":"            if (line.compareTo(\"bye\") \u003d\u003d 0) {"},{"lineNumber":20,"author":{"gitId":"hojiefeng"},"content":"                // Bye command, print and exit immediately."},{"lineNumber":21,"author":{"gitId":"hojiefeng"},"content":"                return \"Bye!\";"},{"lineNumber":22,"author":{"gitId":"hojiefeng"},"content":"            } else if (line.compareTo(\"list\") \u003d\u003d 0) {"},{"lineNumber":23,"author":{"gitId":"hojiefeng"},"content":"                return commandList(line, tasks);"},{"lineNumber":24,"author":{"gitId":"hojiefeng"},"content":"            } else if (line.startsWith(\"done \")) {"},{"lineNumber":25,"author":{"gitId":"hojiefeng"},"content":"                return commandDone(line, tasks);"},{"lineNumber":26,"author":{"gitId":"hojiefeng"},"content":"            } else if (line.startsWith(\"delete \")) {"},{"lineNumber":27,"author":{"gitId":"hojiefeng"},"content":"                return commandDelete(line, tasks);"},{"lineNumber":28,"author":{"gitId":"hojiefeng"},"content":"            } else if (line.startsWith(\"find \")) {"},{"lineNumber":29,"author":{"gitId":"hojiefeng"},"content":"                return commandFind(line, tasks);"},{"lineNumber":30,"author":{"gitId":"hojiefeng"},"content":"            } else if (line.startsWith(\"tag \")) {"},{"lineNumber":31,"author":{"gitId":"hojiefeng"},"content":"                return commandTag(line, tasks);"},{"lineNumber":32,"author":{"gitId":"hojiefeng"},"content":"            } else {"},{"lineNumber":33,"author":{"gitId":"hojiefeng"},"content":"                // No command, add the line task based on the prefix inside."},{"lineNumber":34,"author":{"gitId":"hojiefeng"},"content":"                return processNewTask(line, tasks);"},{"lineNumber":35,"author":{"gitId":"hojiefeng"},"content":"            }"},{"lineNumber":36,"author":{"gitId":"hojiefeng"},"content":"        } catch (NumberFormatException e) {"},{"lineNumber":37,"author":{"gitId":"hojiefeng"},"content":"            return \"Task index must be a number!\";"},{"lineNumber":38,"author":{"gitId":"hojiefeng"},"content":"        } catch (IndexOutOfBoundsException e) {"},{"lineNumber":39,"author":{"gitId":"hojiefeng"},"content":"            return \"Task index must be in range!\";"},{"lineNumber":40,"author":{"gitId":"hojiefeng"},"content":"        } catch (DukeUnknownCommandException e) {"},{"lineNumber":41,"author":{"gitId":"hojiefeng"},"content":"            return \"Unknown command detected, ignoring!\";"},{"lineNumber":42,"author":{"gitId":"hojiefeng"},"content":"        } catch (DukeEmptyDescriptionException e) {"},{"lineNumber":43,"author":{"gitId":"hojiefeng"},"content":"            return \"Task description cannot be empty, ignoring!\";"},{"lineNumber":44,"author":{"gitId":"hojiefeng"},"content":"        } catch (DukeException e) {"},{"lineNumber":45,"author":{"gitId":"hojiefeng"},"content":"            return \"Reached an error!\";"},{"lineNumber":46,"author":{"gitId":"hojiefeng"},"content":"        } catch (DateTimeParseException e) {"},{"lineNumber":47,"author":{"gitId":"hojiefeng"},"content":"            return \"Invalid Date Format!\";"},{"lineNumber":48,"author":{"gitId":"hojiefeng"},"content":"        }"},{"lineNumber":49,"author":{"gitId":"hojiefeng"},"content":"    }"},{"lineNumber":50,"author":{"gitId":"hojiefeng"},"content":""},{"lineNumber":51,"author":{"gitId":"hojiefeng"},"content":"    /**"},{"lineNumber":52,"author":{"gitId":"hojiefeng"},"content":"     * List command, print out all the previous lines."},{"lineNumber":53,"author":{"gitId":"hojiefeng"},"content":"     *"},{"lineNumber":54,"author":{"gitId":"hojiefeng"},"content":"     * @param line the current line to process"},{"lineNumber":55,"author":{"gitId":"hojiefeng"},"content":"     * @param tasks the current task list to process"},{"lineNumber":56,"author":{"gitId":"hojiefeng"},"content":"     * @return response of the command"},{"lineNumber":57,"author":{"gitId":"hojiefeng"},"content":"     */"},{"lineNumber":58,"author":{"gitId":"hojiefeng"},"content":"    public String commandList(String line, TaskList tasks) {"},{"lineNumber":59,"author":{"gitId":"hojiefeng"},"content":"        String response \u003d IntStream.range(0, tasks.size())"},{"lineNumber":60,"author":{"gitId":"hojiefeng"},"content":"                .mapToObj(i -\u003e String.format(\"%d. %s\\n\", i + 1, tasks.get(i)))"},{"lineNumber":61,"author":{"gitId":"hojiefeng"},"content":"                .collect(Collectors.joining());"},{"lineNumber":62,"author":{"gitId":"hojiefeng"},"content":"        return response;"},{"lineNumber":63,"author":{"gitId":"hojiefeng"},"content":"    }"},{"lineNumber":64,"author":{"gitId":"hojiefeng"},"content":""},{"lineNumber":65,"author":{"gitId":"hojiefeng"},"content":"    /**"},{"lineNumber":66,"author":{"gitId":"hojiefeng"},"content":"     * Done command, set the task as done."},{"lineNumber":67,"author":{"gitId":"hojiefeng"},"content":"     *"},{"lineNumber":68,"author":{"gitId":"hojiefeng"},"content":"     * @param line the current line to process"},{"lineNumber":69,"author":{"gitId":"hojiefeng"},"content":"     * @param tasks the current task list to process"},{"lineNumber":70,"author":{"gitId":"hojiefeng"},"content":"     * @return response of the command"},{"lineNumber":71,"author":{"gitId":"hojiefeng"},"content":"     */"},{"lineNumber":72,"author":{"gitId":"hojiefeng"},"content":"    public String commandDone(String line, TaskList tasks) {"},{"lineNumber":73,"author":{"gitId":"hojiefeng"},"content":"        String indexStr \u003d line.substring(5);"},{"lineNumber":74,"author":{"gitId":"hojiefeng"},"content":"        int index \u003d Integer.parseInt(indexStr) - 1;"},{"lineNumber":75,"author":{"gitId":"hojiefeng"},"content":"        AbstractTask currentTask \u003d tasks.get(index);"},{"lineNumber":76,"author":{"gitId":"hojiefeng"},"content":"        currentTask.markDone();"},{"lineNumber":77,"author":{"gitId":"hojiefeng"},"content":"        return String.format(\"Marked task %d as done:\\n%s\\n\", index, currentTask);"},{"lineNumber":78,"author":{"gitId":"hojiefeng"},"content":"    }"},{"lineNumber":79,"author":{"gitId":"hojiefeng"},"content":""},{"lineNumber":80,"author":{"gitId":"hojiefeng"},"content":"    /**"},{"lineNumber":81,"author":{"gitId":"hojiefeng"},"content":"     * Delete command, delete the task."},{"lineNumber":82,"author":{"gitId":"hojiefeng"},"content":"     *"},{"lineNumber":83,"author":{"gitId":"hojiefeng"},"content":"     * @param line the current line to process"},{"lineNumber":84,"author":{"gitId":"hojiefeng"},"content":"     * @param tasks the current task list to process"},{"lineNumber":85,"author":{"gitId":"hojiefeng"},"content":"     * @return response of the command"},{"lineNumber":86,"author":{"gitId":"hojiefeng"},"content":"     */"},{"lineNumber":87,"author":{"gitId":"hojiefeng"},"content":"    public String commandDelete(String line, TaskList tasks) {"},{"lineNumber":88,"author":{"gitId":"hojiefeng"},"content":"        String indexStr \u003d line.substring(7);"},{"lineNumber":89,"author":{"gitId":"hojiefeng"},"content":"        int index \u003d Integer.parseInt(indexStr) - 1;"},{"lineNumber":90,"author":{"gitId":"hojiefeng"},"content":"        String response \u003d String.format(\"Deleted task %d: %s\\n\", index, tasks.get(index));"},{"lineNumber":91,"author":{"gitId":"hojiefeng"},"content":"        tasks.remove(index);"},{"lineNumber":92,"author":{"gitId":"hojiefeng"},"content":"        return response;"},{"lineNumber":93,"author":{"gitId":"hojiefeng"},"content":"    }"},{"lineNumber":94,"author":{"gitId":"hojiefeng"},"content":""},{"lineNumber":95,"author":{"gitId":"hojiefeng"},"content":"    /**"},{"lineNumber":96,"author":{"gitId":"hojiefeng"},"content":"     * Find string in the list of tasks"},{"lineNumber":97,"author":{"gitId":"hojiefeng"},"content":"     *"},{"lineNumber":98,"author":{"gitId":"hojiefeng"},"content":"     * @param line the current line to process"},{"lineNumber":99,"author":{"gitId":"hojiefeng"},"content":"     * @param tasks the current task list to process"},{"lineNumber":100,"author":{"gitId":"hojiefeng"},"content":"     * @return response of the command"},{"lineNumber":101,"author":{"gitId":"hojiefeng"},"content":"     */"},{"lineNumber":102,"author":{"gitId":"hojiefeng"},"content":"    public String commandFind(String line, TaskList tasks) {"},{"lineNumber":103,"author":{"gitId":"hojiefeng"},"content":"        String findStr \u003d line.substring(5);"},{"lineNumber":104,"author":{"gitId":"hojiefeng"},"content":"        boolean isFound \u003d tasks.stream()"},{"lineNumber":105,"author":{"gitId":"hojiefeng"},"content":"                .map(AbstractTask::toString)"},{"lineNumber":106,"author":{"gitId":"hojiefeng"},"content":"                .anyMatch(x -\u003e x.contains(findStr));"},{"lineNumber":107,"author":{"gitId":"hojiefeng"},"content":"        if (!isFound) {"},{"lineNumber":108,"author":{"gitId":"hojiefeng"},"content":"            return \"No tasks with the keyword found!\";"},{"lineNumber":109,"author":{"gitId":"hojiefeng"},"content":"        }"},{"lineNumber":110,"author":{"gitId":"hojiefeng"},"content":"        String response \u003d \"I\u0027ve found the following task(s) with the specified keyword:\\n\";"},{"lineNumber":111,"author":{"gitId":"hojiefeng"},"content":"        ArrayList\u003cString\u003e foundTasks \u003d tasks.stream()"},{"lineNumber":112,"author":{"gitId":"hojiefeng"},"content":"                .map(AbstractTask::toString)"},{"lineNumber":113,"author":{"gitId":"hojiefeng"},"content":"                .filter(x -\u003e x.contains(findStr))"},{"lineNumber":114,"author":{"gitId":"hojiefeng"},"content":"                .collect(Collectors.toCollection(ArrayList::new));"},{"lineNumber":115,"author":{"gitId":"hojiefeng"},"content":"        response +\u003d IntStream.range(0, foundTasks.size())"},{"lineNumber":116,"author":{"gitId":"hojiefeng"},"content":"                .mapToObj(x -\u003e String.format(\"%d. %s\\n\", x + 1, foundTasks.get(x)))"},{"lineNumber":117,"author":{"gitId":"hojiefeng"},"content":"                .collect(Collectors.joining());"},{"lineNumber":118,"author":{"gitId":"hojiefeng"},"content":"        return response;"},{"lineNumber":119,"author":{"gitId":"hojiefeng"},"content":"    }"},{"lineNumber":120,"author":{"gitId":"hojiefeng"},"content":""},{"lineNumber":121,"author":{"gitId":"hojiefeng"},"content":"    /**"},{"lineNumber":122,"author":{"gitId":"hojiefeng"},"content":"     * Add a tag to a task"},{"lineNumber":123,"author":{"gitId":"hojiefeng"},"content":"     *"},{"lineNumber":124,"author":{"gitId":"hojiefeng"},"content":"     * @param line the current line to process"},{"lineNumber":125,"author":{"gitId":"hojiefeng"},"content":"     * @param tasks the current task list to process"},{"lineNumber":126,"author":{"gitId":"hojiefeng"},"content":"     * @return response of the command"},{"lineNumber":127,"author":{"gitId":"hojiefeng"},"content":"     */"},{"lineNumber":128,"author":{"gitId":"hojiefeng"},"content":"    public String commandTag(String line, TaskList tasks) {"},{"lineNumber":129,"author":{"gitId":"hojiefeng"},"content":"        String[] tokens \u003d line.split(\" \");"},{"lineNumber":130,"author":{"gitId":"hojiefeng"},"content":"        assert(tokens[0].equals(\"find\"));"},{"lineNumber":131,"author":{"gitId":"hojiefeng"},"content":""},{"lineNumber":132,"author":{"gitId":"hojiefeng"},"content":"        if (tokens.length \u003c 4) {"},{"lineNumber":133,"author":{"gitId":"hojiefeng"},"content":"            return \"Invalid command for tag!\";"},{"lineNumber":134,"author":{"gitId":"hojiefeng"},"content":"        }"},{"lineNumber":135,"author":{"gitId":"hojiefeng"},"content":"        int taskIdx \u003d Integer.parseInt(tokens[2]) - 1;"},{"lineNumber":136,"author":{"gitId":"hojiefeng"},"content":"        if (tokens[1].equals(\"add\")) {"},{"lineNumber":137,"author":{"gitId":"hojiefeng"},"content":"            tasks.get(taskIdx).addTag(tokens[3]);"},{"lineNumber":138,"author":{"gitId":"hojiefeng"},"content":"        } else if (tokens[1].equals(\"delete\")) {"},{"lineNumber":139,"author":{"gitId":"hojiefeng"},"content":"            tasks.get(taskIdx).deleteTag(tokens[3]);"},{"lineNumber":140,"author":{"gitId":"hojiefeng"},"content":"        } else {"},{"lineNumber":141,"author":{"gitId":"hojiefeng"},"content":"            return \"Invalid tag command!\";"},{"lineNumber":142,"author":{"gitId":"hojiefeng"},"content":"        }"},{"lineNumber":143,"author":{"gitId":"hojiefeng"},"content":"        return \"Task tag \" + tokens[1] + \" complete\";"},{"lineNumber":144,"author":{"gitId":"hojiefeng"},"content":"    }"},{"lineNumber":145,"author":{"gitId":"hojiefeng"},"content":""},{"lineNumber":146,"author":{"gitId":"hojiefeng"},"content":"    /**"},{"lineNumber":147,"author":{"gitId":"hojiefeng"},"content":"     * Handle a new task"},{"lineNumber":148,"author":{"gitId":"hojiefeng"},"content":"     *"},{"lineNumber":149,"author":{"gitId":"hojiefeng"},"content":"     * @param line the current task to process"},{"lineNumber":150,"author":{"gitId":"hojiefeng"},"content":"     * @param tasks the current task list to process"},{"lineNumber":151,"author":{"gitId":"hojiefeng"},"content":"     */"},{"lineNumber":152,"author":{"gitId":"hojiefeng"},"content":"    public String processNewTask(String line, TaskList tasks) throws DukeException {"},{"lineNumber":153,"author":{"gitId":"hojiefeng"},"content":"        if (line.startsWith(\"todo \")) {"},{"lineNumber":154,"author":{"gitId":"hojiefeng"},"content":"            // Todo command, add a Todo class"},{"lineNumber":155,"author":{"gitId":"hojiefeng"},"content":"            line \u003d line.substring(5);"},{"lineNumber":156,"author":{"gitId":"hojiefeng"},"content":"            tasks.add(new Todo(line));"},{"lineNumber":157,"author":{"gitId":"hojiefeng"},"content":"        } else if (line.startsWith(\"deadline \")) {"},{"lineNumber":158,"author":{"gitId":"hojiefeng"},"content":"            // Deadline command, add a Deadline class"},{"lineNumber":159,"author":{"gitId":"hojiefeng"},"content":"            int byIdx \u003d line.indexOf(\" /by \");"},{"lineNumber":160,"author":{"gitId":"hojiefeng"},"content":"            if (byIdx \u003d\u003d -1) {"},{"lineNumber":161,"author":{"gitId":"hojiefeng"},"content":"                return \"Need a time for the deadline, \\\"/by\\\" not found!\";"},{"lineNumber":162,"author":{"gitId":"hojiefeng"},"content":"            }"},{"lineNumber":163,"author":{"gitId":"hojiefeng"},"content":"            String byStr \u003d line.substring(byIdx + 5);"},{"lineNumber":164,"author":{"gitId":"hojiefeng"},"content":"            String task \u003d line.substring(9, byIdx);"},{"lineNumber":165,"author":{"gitId":"hojiefeng"},"content":"            tasks.add(new Deadline(task, byStr));"},{"lineNumber":166,"author":{"gitId":"hojiefeng"},"content":"        } else if (line.startsWith(\"event \")) {"},{"lineNumber":167,"author":{"gitId":"hojiefeng"},"content":"            // Event command, add an Event class"},{"lineNumber":168,"author":{"gitId":"hojiefeng"},"content":"            int atIdx \u003d line.indexOf(\" /at \");"},{"lineNumber":169,"author":{"gitId":"hojiefeng"},"content":"            if (atIdx \u003d\u003d -1) {"},{"lineNumber":170,"author":{"gitId":"hojiefeng"},"content":"                return \"Need a time for the event, \\\"/at\\\" not found!\";"},{"lineNumber":171,"author":{"gitId":"hojiefeng"},"content":"            }"},{"lineNumber":172,"author":{"gitId":"hojiefeng"},"content":"            String atStr \u003d line.substring(atIdx + 5);"},{"lineNumber":173,"author":{"gitId":"hojiefeng"},"content":"            String task \u003d line.substring(6, atIdx);"},{"lineNumber":174,"author":{"gitId":"hojiefeng"},"content":"            tasks.add(new Event(task, atStr));"},{"lineNumber":175,"author":{"gitId":"hojiefeng"},"content":"        } else if (line.equals(\"todo\") || line.equals(\"deadline\") || line.equals(\"event\")) {"},{"lineNumber":176,"author":{"gitId":"hojiefeng"},"content":"            throw new DukeEmptyDescriptionException();"},{"lineNumber":177,"author":{"gitId":"hojiefeng"},"content":"        } else {"},{"lineNumber":178,"author":{"gitId":"hojiefeng"},"content":"            throw new DukeUnknownCommandException();"},{"lineNumber":179,"author":{"gitId":"hojiefeng"},"content":"        }"},{"lineNumber":180,"author":{"gitId":"hojiefeng"},"content":"        String response \u003d String.format(\"Now you have %d tasks.\\n\", tasks.size());"},{"lineNumber":181,"author":{"gitId":"hojiefeng"},"content":"        response +\u003d \"added: \" + tasks.get(tasks.size() - 1);"},{"lineNumber":182,"author":{"gitId":"hojiefeng"},"content":"        return response;"},{"lineNumber":183,"author":{"gitId":"hojiefeng"},"content":"    }"},{"lineNumber":184,"author":{"gitId":"hojiefeng"},"content":"}"}],"authorContributionMap":{"hojiefeng":184}},{"path":"src/main/java/duke/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"hojiefeng"},"content":"package duke;"},{"lineNumber":2,"author":{"gitId":"hojiefeng"},"content":""},{"lineNumber":3,"author":{"gitId":"hojiefeng"},"content":"import java.io.File;"},{"lineNumber":4,"author":{"gitId":"hojiefeng"},"content":"import java.io.FileInputStream;"},{"lineNumber":5,"author":{"gitId":"hojiefeng"},"content":"import java.io.FileOutputStream;"},{"lineNumber":6,"author":{"gitId":"hojiefeng"},"content":"import java.io.IOException;"},{"lineNumber":7,"author":{"gitId":"hojiefeng"},"content":"import java.io.ObjectInputStream;"},{"lineNumber":8,"author":{"gitId":"hojiefeng"},"content":"import java.io.ObjectOutputStream;"},{"lineNumber":9,"author":{"gitId":"hojiefeng"},"content":""},{"lineNumber":10,"author":{"gitId":"hojiefeng"},"content":"public class Storage {"},{"lineNumber":11,"author":{"gitId":"hojiefeng"},"content":"    private final String fileName;"},{"lineNumber":12,"author":{"gitId":"hojiefeng"},"content":""},{"lineNumber":13,"author":{"gitId":"hojiefeng"},"content":"    public Storage(String fileName) {"},{"lineNumber":14,"author":{"gitId":"hojiefeng"},"content":"        this.fileName \u003d fileName;"},{"lineNumber":15,"author":{"gitId":"hojiefeng"},"content":"    }"},{"lineNumber":16,"author":{"gitId":"hojiefeng"},"content":""},{"lineNumber":17,"author":{"gitId":"hojiefeng"},"content":"    /**"},{"lineNumber":18,"author":{"gitId":"hojiefeng"},"content":"     * Save the contents to disk"},{"lineNumber":19,"author":{"gitId":"hojiefeng"},"content":"     *"},{"lineNumber":20,"author":{"gitId":"hojiefeng"},"content":"     * @param tasks the object to store the tasks"},{"lineNumber":21,"author":{"gitId":"hojiefeng"},"content":"     */"},{"lineNumber":22,"author":{"gitId":"hojiefeng"},"content":"    public void saveTasks(TaskList tasks) {"},{"lineNumber":23,"author":{"gitId":"hojiefeng"},"content":"        try {"},{"lineNumber":24,"author":{"gitId":"hojiefeng"},"content":"            FileOutputStream taskFile \u003d new FileOutputStream(fileName);"},{"lineNumber":25,"author":{"gitId":"hojiefeng"},"content":"            ObjectOutputStream taskObjectStream \u003d new ObjectOutputStream(taskFile);"},{"lineNumber":26,"author":{"gitId":"hojiefeng"},"content":"            Integer taskSize \u003d tasks.size();"},{"lineNumber":27,"author":{"gitId":"hojiefeng"},"content":"            taskObjectStream.writeObject(taskSize);"},{"lineNumber":28,"author":{"gitId":"hojiefeng"},"content":"            for (AbstractTask task : tasks) {"},{"lineNumber":29,"author":{"gitId":"hojiefeng"},"content":"                taskObjectStream.writeObject(task);"},{"lineNumber":30,"author":{"gitId":"hojiefeng"},"content":"            }"},{"lineNumber":31,"author":{"gitId":"hojiefeng"},"content":"            taskObjectStream.flush();"},{"lineNumber":32,"author":{"gitId":"hojiefeng"},"content":"            taskObjectStream.close();"},{"lineNumber":33,"author":{"gitId":"hojiefeng"},"content":"        } catch (IOException e) {"},{"lineNumber":34,"author":{"gitId":"hojiefeng"},"content":"            //Create a new file anyways"},{"lineNumber":35,"author":{"gitId":"hojiefeng"},"content":"        }"},{"lineNumber":36,"author":{"gitId":"hojiefeng"},"content":"    }"},{"lineNumber":37,"author":{"gitId":"hojiefeng"},"content":""},{"lineNumber":38,"author":{"gitId":"hojiefeng"},"content":"    /**"},{"lineNumber":39,"author":{"gitId":"hojiefeng"},"content":"     * Read tasks from disk"},{"lineNumber":40,"author":{"gitId":"hojiefeng"},"content":"     *"},{"lineNumber":41,"author":{"gitId":"hojiefeng"},"content":"     * @param tasks the object to store the tasks"},{"lineNumber":42,"author":{"gitId":"hojiefeng"},"content":"     */"},{"lineNumber":43,"author":{"gitId":"hojiefeng"},"content":"    public void readTasks(TaskList tasks) {"},{"lineNumber":44,"author":{"gitId":"hojiefeng"},"content":"        try {"},{"lineNumber":45,"author":{"gitId":"hojiefeng"},"content":"            FileInputStream taskFile \u003d new FileInputStream(fileName);"},{"lineNumber":46,"author":{"gitId":"hojiefeng"},"content":"            ObjectInputStream taskObjectStream \u003d new ObjectInputStream(taskFile);"},{"lineNumber":47,"author":{"gitId":"hojiefeng"},"content":"            Integer taskSize \u003d (Integer) taskObjectStream.readObject();"},{"lineNumber":48,"author":{"gitId":"hojiefeng"},"content":"            for (int i \u003d 0; i \u003c taskSize; i++) {"},{"lineNumber":49,"author":{"gitId":"hojiefeng"},"content":"                AbstractTask task \u003d (AbstractTask) taskObjectStream.readObject();"},{"lineNumber":50,"author":{"gitId":"hojiefeng"},"content":"                tasks.add(task);"},{"lineNumber":51,"author":{"gitId":"hojiefeng"},"content":"            }"},{"lineNumber":52,"author":{"gitId":"hojiefeng"},"content":"            taskObjectStream.close();"},{"lineNumber":53,"author":{"gitId":"hojiefeng"},"content":"        } catch (IOException e) {"},{"lineNumber":54,"author":{"gitId":"hojiefeng"},"content":"            System.out.println(\"No saved task file, continuing with empty list!\\n\");"},{"lineNumber":55,"author":{"gitId":"hojiefeng"},"content":"        } catch (ClassNotFoundException e) {"},{"lineNumber":56,"author":{"gitId":"hojiefeng"},"content":"            System.out.println(\"Something went wrong, resetting task file!\\n\");"},{"lineNumber":57,"author":{"gitId":"hojiefeng"},"content":"            File taskFile \u003d new File(\"data/duke.txt\");"},{"lineNumber":58,"author":{"gitId":"hojiefeng"},"content":"            taskFile.delete();"},{"lineNumber":59,"author":{"gitId":"hojiefeng"},"content":"        }"},{"lineNumber":60,"author":{"gitId":"hojiefeng"},"content":"    }"},{"lineNumber":61,"author":{"gitId":"hojiefeng"},"content":"}"}],"authorContributionMap":{"hojiefeng":61}},{"path":"src/main/java/duke/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"hojiefeng"},"content":"package duke;"},{"lineNumber":2,"author":{"gitId":"hojiefeng"},"content":""},{"lineNumber":3,"author":{"gitId":"hojiefeng"},"content":"public class Task extends AbstractTask {"},{"lineNumber":4,"author":{"gitId":"hojiefeng"},"content":""},{"lineNumber":5,"author":{"gitId":"hojiefeng"},"content":"    /*"},{"lineNumber":6,"author":{"gitId":"hojiefeng"},"content":"     * Constructs a task using the description"},{"lineNumber":7,"author":{"gitId":"hojiefeng"},"content":"     */"},{"lineNumber":8,"author":{"gitId":"hojiefeng"},"content":"    public Task(String description) throws DukeEmptyDescriptionException {"},{"lineNumber":9,"author":{"gitId":"hojiefeng"},"content":"        super(description);"},{"lineNumber":10,"author":{"gitId":"hojiefeng"},"content":"    }"},{"lineNumber":11,"author":{"gitId":"hojiefeng"},"content":""},{"lineNumber":12,"author":{"gitId":"hojiefeng"},"content":"    /*"},{"lineNumber":13,"author":{"gitId":"hojiefeng"},"content":"     * Return a string representation of the task"},{"lineNumber":14,"author":{"gitId":"hojiefeng"},"content":"     */"},{"lineNumber":15,"author":{"gitId":"hojiefeng"},"content":"    @Override"},{"lineNumber":16,"author":{"gitId":"hojiefeng"},"content":"    public String toString() {"},{"lineNumber":17,"author":{"gitId":"hojiefeng"},"content":"        return String.format(\"   %s\", super.toString());"},{"lineNumber":18,"author":{"gitId":"hojiefeng"},"content":"    }"},{"lineNumber":19,"author":{"gitId":"hojiefeng"},"content":"}"}],"authorContributionMap":{"hojiefeng":19}},{"path":"src/main/java/duke/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"hojiefeng"},"content":"package duke;"},{"lineNumber":2,"author":{"gitId":"hojiefeng"},"content":""},{"lineNumber":3,"author":{"gitId":"hojiefeng"},"content":"import java.util.ArrayList;"},{"lineNumber":4,"author":{"gitId":"hojiefeng"},"content":""},{"lineNumber":5,"author":{"gitId":"hojiefeng"},"content":"public class TaskList extends ArrayList\u003cAbstractTask\u003e {"},{"lineNumber":6,"author":{"gitId":"hojiefeng"},"content":""},{"lineNumber":7,"author":{"gitId":"hojiefeng"},"content":"}"}],"authorContributionMap":{"hojiefeng":7}},{"path":"src/main/java/duke/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"hojiefeng"},"content":"package duke;"},{"lineNumber":2,"author":{"gitId":"hojiefeng"},"content":""},{"lineNumber":3,"author":{"gitId":"hojiefeng"},"content":"public class Todo extends AbstractTask {"},{"lineNumber":4,"author":{"gitId":"hojiefeng"},"content":""},{"lineNumber":5,"author":{"gitId":"hojiefeng"},"content":"    /*"},{"lineNumber":6,"author":{"gitId":"hojiefeng"},"content":"     * Constructs a task using the description"},{"lineNumber":7,"author":{"gitId":"hojiefeng"},"content":"     */"},{"lineNumber":8,"author":{"gitId":"hojiefeng"},"content":"    public Todo(String description) throws DukeEmptyDescriptionException {"},{"lineNumber":9,"author":{"gitId":"hojiefeng"},"content":"        super(description);"},{"lineNumber":10,"author":{"gitId":"hojiefeng"},"content":"    }"},{"lineNumber":11,"author":{"gitId":"hojiefeng"},"content":""},{"lineNumber":12,"author":{"gitId":"hojiefeng"},"content":"    /*"},{"lineNumber":13,"author":{"gitId":"hojiefeng"},"content":"     * Return a string representation of the task"},{"lineNumber":14,"author":{"gitId":"hojiefeng"},"content":"     */"},{"lineNumber":15,"author":{"gitId":"hojiefeng"},"content":"    @Override"},{"lineNumber":16,"author":{"gitId":"hojiefeng"},"content":"    public String toString() {"},{"lineNumber":17,"author":{"gitId":"hojiefeng"},"content":"        return String.format(\"[T]%s\", super.toString());"},{"lineNumber":18,"author":{"gitId":"hojiefeng"},"content":"    }"},{"lineNumber":19,"author":{"gitId":"hojiefeng"},"content":"}"}],"authorContributionMap":{"hojiefeng":19}},{"path":"src/main/java/duke/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"hojiefeng"},"content":"package duke;"},{"lineNumber":2,"author":{"gitId":"hojiefeng"},"content":""},{"lineNumber":3,"author":{"gitId":"hojiefeng"},"content":"public class Ui {"},{"lineNumber":4,"author":{"gitId":"hojiefeng"},"content":"    private final String logo;"},{"lineNumber":5,"author":{"gitId":"hojiefeng"},"content":""},{"lineNumber":6,"author":{"gitId":"hojiefeng"},"content":"    public Ui(TaskList tasks, String logo) {"},{"lineNumber":7,"author":{"gitId":"hojiefeng"},"content":"        this.logo \u003d logo;"},{"lineNumber":8,"author":{"gitId":"hojiefeng"},"content":"    }"},{"lineNumber":9,"author":{"gitId":"hojiefeng"},"content":""},{"lineNumber":10,"author":{"gitId":"hojiefeng"},"content":"    /**"},{"lineNumber":11,"author":{"gitId":"hojiefeng"},"content":"     * Print the strings for the start of the program"},{"lineNumber":12,"author":{"gitId":"hojiefeng"},"content":"     */"},{"lineNumber":13,"author":{"gitId":"hojiefeng"},"content":"    public void printStart() {"},{"lineNumber":14,"author":{"gitId":"hojiefeng"},"content":"        System.out.println(\"Hello from\\n\" + logo);"},{"lineNumber":15,"author":{"gitId":"hojiefeng"},"content":"        System.out.println(\"What can I do for you?\");"},{"lineNumber":16,"author":{"gitId":"hojiefeng"},"content":"    }"},{"lineNumber":17,"author":{"gitId":"hojiefeng"},"content":"}"}],"authorContributionMap":{"hojiefeng":17}},{"path":"src/main/resources/view/DialogBox.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"hojiefeng"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"},{"lineNumber":2,"author":{"gitId":"hojiefeng"},"content":""},{"lineNumber":3,"author":{"gitId":"hojiefeng"},"content":"\u003c?import javafx.geometry.Insets?\u003e"},{"lineNumber":4,"author":{"gitId":"hojiefeng"},"content":"\u003c?import javafx.scene.control.Label?\u003e"},{"lineNumber":5,"author":{"gitId":"hojiefeng"},"content":"\u003c?import javafx.scene.image.ImageView?\u003e"},{"lineNumber":6,"author":{"gitId":"hojiefeng"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e"},{"lineNumber":7,"author":{"gitId":"hojiefeng"},"content":""},{"lineNumber":8,"author":{"gitId":"hojiefeng"},"content":"\u003cfx:root alignment\u003d\"TOP_RIGHT\" minHeight\u003d\"-Infinity\" maxHeight\u003d\"Infinity\" maxWidth\u003d\"1.7976931348623157E308\" prefWidth\u003d\"400.0\" type\u003d\"javafx.scene.layout.HBox\" xmlns\u003d\"http://javafx.com/javafx/8.0.171\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e"},{"lineNumber":9,"author":{"gitId":"hojiefeng"},"content":"  \u003cchildren\u003e"},{"lineNumber":10,"author":{"gitId":"hojiefeng"},"content":"    \u003cLabel fx:id\u003d\"dialog\" text\u003d\"Label\" wrapText\u003d\"true\" style\u003d\"-fx-padding: 15 15 15 15;\" /\u003e"},{"lineNumber":11,"author":{"gitId":"hojiefeng"},"content":"    \u003cImageView fx:id\u003d\"displayPicture\" fitHeight\u003d\"99.0\" fitWidth\u003d\"99.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\" /\u003e"},{"lineNumber":12,"author":{"gitId":"hojiefeng"},"content":"  \u003c/children\u003e"},{"lineNumber":13,"author":{"gitId":"hojiefeng"},"content":"  \u003cpadding\u003e"},{"lineNumber":14,"author":{"gitId":"hojiefeng"},"content":"    \u003cInsets bottom\u003d\"15.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"15.0\" /\u003e"},{"lineNumber":15,"author":{"gitId":"hojiefeng"},"content":"  \u003c/padding\u003e"},{"lineNumber":16,"author":{"gitId":"hojiefeng"},"content":"\u003c/fx:root\u003e"},{"lineNumber":17,"author":{"gitId":"hojiefeng"},"content":""}],"authorContributionMap":{"hojiefeng":17}},{"path":"src/main/resources/view/MainWindow.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"hojiefeng"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"},{"lineNumber":2,"author":{"gitId":"hojiefeng"},"content":""},{"lineNumber":3,"author":{"gitId":"hojiefeng"},"content":"\u003c?import javafx.scene.control.Button?\u003e"},{"lineNumber":4,"author":{"gitId":"hojiefeng"},"content":"\u003c?import javafx.scene.control.ScrollPane?\u003e"},{"lineNumber":5,"author":{"gitId":"hojiefeng"},"content":"\u003c?import javafx.scene.control.TextField?\u003e"},{"lineNumber":6,"author":{"gitId":"hojiefeng"},"content":"\u003c?import javafx.scene.layout.AnchorPane?\u003e"},{"lineNumber":7,"author":{"gitId":"hojiefeng"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e"},{"lineNumber":8,"author":{"gitId":"hojiefeng"},"content":""},{"lineNumber":9,"author":{"gitId":"hojiefeng"},"content":"\u003cAnchorPane maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefHeight\u003d\"600.0\" prefWidth\u003d\"400.0\" xmlns\u003d\"http://javafx.com/javafx/8.0.171\" xmlns:fx\u003d\"http://javafx.com/fxml/1\" fx:controller\u003d\"duke.MainWindow\"\u003e"},{"lineNumber":10,"author":{"gitId":"hojiefeng"},"content":"  \u003cchildren\u003e"},{"lineNumber":11,"author":{"gitId":"hojiefeng"},"content":"    \u003cTextField fx:id\u003d\"userInput\" layoutY\u003d\"558.0\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"324.0\" AnchorPane.bottomAnchor\u003d\"1.0\" /\u003e"},{"lineNumber":12,"author":{"gitId":"hojiefeng"},"content":"    \u003cButton fx:id\u003d\"sendButton\" layoutX\u003d\"324.0\" layoutY\u003d\"558.0\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"76.0\" text\u003d\"Send\" /\u003e"},{"lineNumber":13,"author":{"gitId":"hojiefeng"},"content":"    \u003cScrollPane fx:id\u003d\"scrollPane\" hbarPolicy\u003d\"NEVER\" hvalue\u003d\"1.0\" prefHeight\u003d\"557.0\" prefWidth\u003d\"400.0\" vvalue\u003d\"1.0\"\u003e"},{"lineNumber":14,"author":{"gitId":"hojiefeng"},"content":"      \u003ccontent\u003e"},{"lineNumber":15,"author":{"gitId":"hojiefeng"},"content":"        \u003cVBox fx:id\u003d\"dialogContainer\" prefHeight\u003d\"552.0\" prefWidth\u003d\"388.0\" /\u003e"},{"lineNumber":16,"author":{"gitId":"hojiefeng"},"content":"      \u003c/content\u003e"},{"lineNumber":17,"author":{"gitId":"hojiefeng"},"content":"    \u003c/ScrollPane\u003e"},{"lineNumber":18,"author":{"gitId":"hojiefeng"},"content":"  \u003c/children\u003e"},{"lineNumber":19,"author":{"gitId":"hojiefeng"},"content":"\u003c/AnchorPane\u003e"},{"lineNumber":20,"author":{"gitId":"hojiefeng"},"content":""}],"authorContributionMap":{"hojiefeng":20}},{"path":"src/test/java/duke/DeadlineTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"hojiefeng"},"content":"package duke;"},{"lineNumber":2,"author":{"gitId":"hojiefeng"},"content":""},{"lineNumber":3,"author":{"gitId":"hojiefeng"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;"},{"lineNumber":4,"author":{"gitId":"hojiefeng"},"content":""},{"lineNumber":5,"author":{"gitId":"hojiefeng"},"content":"import org.junit.jupiter.api.Test;"},{"lineNumber":6,"author":{"gitId":"hojiefeng"},"content":""},{"lineNumber":7,"author":{"gitId":"hojiefeng"},"content":"public class DeadlineTest {"},{"lineNumber":8,"author":{"gitId":"hojiefeng"},"content":"    @Test"},{"lineNumber":9,"author":{"gitId":"hojiefeng"},"content":"    public void deadlineTest(){"},{"lineNumber":10,"author":{"gitId":"hojiefeng"},"content":"        try {"},{"lineNumber":11,"author":{"gitId":"hojiefeng"},"content":"            assertEquals(new Deadline(\"deadline\", \"2019-10-15\").toString(), \"[D][ ] deadline (by: Oct 15 2019)\");"},{"lineNumber":12,"author":{"gitId":"hojiefeng"},"content":"        } catch (DukeEmptyDescriptionException e) {"},{"lineNumber":13,"author":{"gitId":"hojiefeng"},"content":""},{"lineNumber":14,"author":{"gitId":"hojiefeng"},"content":"        }"},{"lineNumber":15,"author":{"gitId":"hojiefeng"},"content":"    }"},{"lineNumber":16,"author":{"gitId":"hojiefeng"},"content":"}"}],"authorContributionMap":{"hojiefeng":16}},{"path":"src/test/java/duke/EventTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"hojiefeng"},"content":"package duke;"},{"lineNumber":2,"author":{"gitId":"hojiefeng"},"content":""},{"lineNumber":3,"author":{"gitId":"hojiefeng"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;"},{"lineNumber":4,"author":{"gitId":"hojiefeng"},"content":""},{"lineNumber":5,"author":{"gitId":"hojiefeng"},"content":"import org.junit.jupiter.api.Test;"},{"lineNumber":6,"author":{"gitId":"hojiefeng"},"content":""},{"lineNumber":7,"author":{"gitId":"hojiefeng"},"content":"public class EventTest {"},{"lineNumber":8,"author":{"gitId":"hojiefeng"},"content":"    @Test"},{"lineNumber":9,"author":{"gitId":"hojiefeng"},"content":"    public void eventTest(){"},{"lineNumber":10,"author":{"gitId":"hojiefeng"},"content":"        try {"},{"lineNumber":11,"author":{"gitId":"hojiefeng"},"content":"            assertEquals(new Event(\"event\", \"time\").toString(), \"[E][ ] event (at: time)\");"},{"lineNumber":12,"author":{"gitId":"hojiefeng"},"content":"        } catch (DukeEmptyDescriptionException e) {"},{"lineNumber":13,"author":{"gitId":"hojiefeng"},"content":""},{"lineNumber":14,"author":{"gitId":"hojiefeng"},"content":"        }"},{"lineNumber":15,"author":{"gitId":"hojiefeng"},"content":"    }"},{"lineNumber":16,"author":{"gitId":"hojiefeng"},"content":"}"}],"authorContributionMap":{"hojiefeng":16}},{"path":"src/test/java/duke/TaskListTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"hojiefeng"},"content":"package duke;"},{"lineNumber":2,"author":{"gitId":"hojiefeng"},"content":""},{"lineNumber":3,"author":{"gitId":"hojiefeng"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;"},{"lineNumber":4,"author":{"gitId":"hojiefeng"},"content":""},{"lineNumber":5,"author":{"gitId":"hojiefeng"},"content":"import org.junit.jupiter.api.Test;"},{"lineNumber":6,"author":{"gitId":"hojiefeng"},"content":""},{"lineNumber":7,"author":{"gitId":"hojiefeng"},"content":"public class TaskListTest {"},{"lineNumber":8,"author":{"gitId":"hojiefeng"},"content":"    @Test"},{"lineNumber":9,"author":{"gitId":"hojiefeng"},"content":"    public void taskListTest() {"},{"lineNumber":10,"author":{"gitId":"hojiefeng"},"content":"        TaskList tasklist \u003d new TaskList();"},{"lineNumber":11,"author":{"gitId":"hojiefeng"},"content":"        try {"},{"lineNumber":12,"author":{"gitId":"hojiefeng"},"content":"            tasklist.add(new Task(\"task1\"));"},{"lineNumber":13,"author":{"gitId":"hojiefeng"},"content":"        } catch (DukeEmptyDescriptionException e) {"},{"lineNumber":14,"author":{"gitId":"hojiefeng"},"content":""},{"lineNumber":15,"author":{"gitId":"hojiefeng"},"content":"        }"},{"lineNumber":16,"author":{"gitId":"hojiefeng"},"content":"        assertEquals(tasklist.size(), 1);"},{"lineNumber":17,"author":{"gitId":"hojiefeng"},"content":"        tasklist.remove(0);"},{"lineNumber":18,"author":{"gitId":"hojiefeng"},"content":"        assertEquals(tasklist.size(), 0);"},{"lineNumber":19,"author":{"gitId":"hojiefeng"},"content":"    }"},{"lineNumber":20,"author":{"gitId":"hojiefeng"},"content":"}"}],"authorContributionMap":{"hojiefeng":20}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"hojiefeng"},"content":"task1"},{"lineNumber":2,"author":{"gitId":"hojiefeng"},"content":"task2"},{"lineNumber":3,"author":{"gitId":"hojiefeng"},"content":"task3"},{"lineNumber":4,"author":{"gitId":"hojiefeng"},"content":"todo task4"},{"lineNumber":5,"author":{"gitId":"hojiefeng"},"content":"event task5 /at task5time"},{"lineNumber":6,"author":{"gitId":"hojiefeng"},"content":"deadline task6 /by task6time"},{"lineNumber":7,"author":{"gitId":"hojiefeng"},"content":"list"},{"lineNumber":8,"author":{"gitId":"hojiefeng"},"content":"done 1"},{"lineNumber":9,"author":{"gitId":"hojiefeng"},"content":"done 2"},{"lineNumber":10,"author":{"gitId":"hojiefeng"},"content":"done 3"},{"lineNumber":11,"author":{"gitId":"hojiefeng"},"content":"list"},{"lineNumber":12,"author":{"gitId":"hojiefeng"},"content":"delete 3"},{"lineNumber":13,"author":{"gitId":"hojiefeng"},"content":"delete 2"},{"lineNumber":14,"author":{"gitId":"hojiefeng"},"content":"delete 1"},{"lineNumber":15,"author":{"gitId":"hojiefeng"},"content":"list"},{"lineNumber":16,"author":{"gitId":"hojiefeng"},"content":"bye"}],"authorContributionMap":{"hojiefeng":16}},{"path":"data/duke.txt","fileType":"txt","isBinary":true,"lines":[],"authorContributionMap":{"hojiefeng":0}}]
