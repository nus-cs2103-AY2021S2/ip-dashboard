[{"path":"JUnitTest/AlignerTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"mesyeux"},"content":"import org.junit.jupiter.api.Test;"},{"lineNumber":2,"author":{"gitId":"mesyeux"},"content":""},{"lineNumber":3,"author":{"gitId":"mesyeux"},"content":"import static org.junit.jupiter.api.Assertions.*;"},{"lineNumber":4,"author":{"gitId":"mesyeux"},"content":""},{"lineNumber":5,"author":{"gitId":"mesyeux"},"content":"class AlignerTest {"},{"lineNumber":6,"author":{"gitId":"mesyeux"},"content":""},{"lineNumber":7,"author":{"gitId":"mesyeux"},"content":"    @Test"},{"lineNumber":8,"author":{"gitId":"mesyeux"},"content":"    void align_string_success() {"},{"lineNumber":9,"author":{"gitId":"mesyeux"},"content":"        String s \u003d \"Testing alignment!\";"},{"lineNumber":10,"author":{"gitId":"mesyeux"},"content":"        assertEquals(\"                           Testing alignment!                           \","},{"lineNumber":11,"author":{"gitId":"mesyeux"},"content":"                            Aligner.align(s));"},{"lineNumber":12,"author":{"gitId":"mesyeux"},"content":"    }"},{"lineNumber":13,"author":{"gitId":"mesyeux"},"content":"}"}],"authorContributionMap":{"mesyeux":13}},{"path":"JUnitTest/TaskListTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"mesyeux"},"content":"import org.junit.jupiter.api.Test;"},{"lineNumber":2,"author":{"gitId":"mesyeux"},"content":""},{"lineNumber":3,"author":{"gitId":"mesyeux"},"content":"import java.time.LocalDate;"},{"lineNumber":4,"author":{"gitId":"mesyeux"},"content":"import java.time.LocalTime;"},{"lineNumber":5,"author":{"gitId":"mesyeux"},"content":"import java.time.Month;"},{"lineNumber":6,"author":{"gitId":"mesyeux"},"content":"import java.util.ArrayList;"},{"lineNumber":7,"author":{"gitId":"mesyeux"},"content":"import java.util.List;"},{"lineNumber":8,"author":{"gitId":"mesyeux"},"content":""},{"lineNumber":9,"author":{"gitId":"mesyeux"},"content":"import static org.junit.jupiter.api.Assertions.*;"},{"lineNumber":10,"author":{"gitId":"mesyeux"},"content":""},{"lineNumber":11,"author":{"gitId":"mesyeux"},"content":"class TaskListTest {"},{"lineNumber":12,"author":{"gitId":"mesyeux"},"content":"    List\u003cTask\u003e list \u003d List.of(new ToDo(\"buy a car\"),"},{"lineNumber":13,"author":{"gitId":"mesyeux"},"content":"                            new Deadline(\"finish iP\", LocalDate.of(2021, Month.AUGUST, 8), LocalTime.of(14, 14)),"},{"lineNumber":14,"author":{"gitId":"mesyeux"},"content":"                                new Event(\"casting\", LocalDate.of(2021, Month.JANUARY, 27),"},{"lineNumber":15,"author":{"gitId":"mesyeux"},"content":"                                            LocalTime.of(16, 30), LocalTime.of(17, 0)));"},{"lineNumber":16,"author":{"gitId":"mesyeux"},"content":"    Task event \u003d list.get(2);"},{"lineNumber":17,"author":{"gitId":"mesyeux"},"content":"    TaskList tl \u003d new TaskList(list);"},{"lineNumber":18,"author":{"gitId":"mesyeux"},"content":""},{"lineNumber":19,"author":{"gitId":"mesyeux"},"content":"    @Test"},{"lineNumber":20,"author":{"gitId":"mesyeux"},"content":"    void listing() {"},{"lineNumber":21,"author":{"gitId":"mesyeux"},"content":""},{"lineNumber":22,"author":{"gitId":"mesyeux"},"content":"    }"},{"lineNumber":23,"author":{"gitId":"mesyeux"},"content":""},{"lineNumber":24,"author":{"gitId":"mesyeux"},"content":"    @Test"},{"lineNumber":25,"author":{"gitId":"mesyeux"},"content":"    void getList() {"},{"lineNumber":26,"author":{"gitId":"mesyeux"},"content":"        assertEquals(list, tl.getList());"},{"lineNumber":27,"author":{"gitId":"mesyeux"},"content":"    }"},{"lineNumber":28,"author":{"gitId":"mesyeux"},"content":""},{"lineNumber":29,"author":{"gitId":"mesyeux"},"content":"    @Test"},{"lineNumber":30,"author":{"gitId":"mesyeux"},"content":"    void makeDone() {"},{"lineNumber":31,"author":{"gitId":"mesyeux"},"content":"        Event e \u003d new Event(\"casting\", LocalDate.of(2021, Month.JANUARY, 27),"},{"lineNumber":32,"author":{"gitId":"mesyeux"},"content":"                LocalTime.of(16, 30), LocalTime.of(17, 0));"},{"lineNumber":33,"author":{"gitId":"mesyeux"},"content":"        e.isDone \u003d true;"},{"lineNumber":34,"author":{"gitId":"mesyeux"},"content":"        assertEquals(e.toString(), tl.makeDone(2));"},{"lineNumber":35,"author":{"gitId":"mesyeux"},"content":"    }"},{"lineNumber":36,"author":{"gitId":"mesyeux"},"content":""},{"lineNumber":37,"author":{"gitId":"mesyeux"},"content":"    @Test"},{"lineNumber":38,"author":{"gitId":"mesyeux"},"content":"    void size() {"},{"lineNumber":39,"author":{"gitId":"mesyeux"},"content":"        assertEquals(3, tl.size());"},{"lineNumber":40,"author":{"gitId":"mesyeux"},"content":"    }"},{"lineNumber":41,"author":{"gitId":"mesyeux"},"content":""},{"lineNumber":42,"author":{"gitId":"mesyeux"},"content":"    @Test"},{"lineNumber":43,"author":{"gitId":"mesyeux"},"content":"    void addByTask_todo_success() {"},{"lineNumber":44,"author":{"gitId":"mesyeux"},"content":"    }"},{"lineNumber":45,"author":{"gitId":"mesyeux"},"content":""},{"lineNumber":46,"author":{"gitId":"mesyeux"},"content":"    @Test"},{"lineNumber":47,"author":{"gitId":"mesyeux"},"content":"    void addByCommand_todo_success() {"},{"lineNumber":48,"author":{"gitId":"mesyeux"},"content":"    }"},{"lineNumber":49,"author":{"gitId":"mesyeux"},"content":""},{"lineNumber":50,"author":{"gitId":"mesyeux"},"content":"    @Test"},{"lineNumber":51,"author":{"gitId":"mesyeux"},"content":"    void testAdd() {"},{"lineNumber":52,"author":{"gitId":"mesyeux"},"content":"    }"},{"lineNumber":53,"author":{"gitId":"mesyeux"},"content":""},{"lineNumber":54,"author":{"gitId":"mesyeux"},"content":"    @Test"},{"lineNumber":55,"author":{"gitId":"mesyeux"},"content":"    void remove() {"},{"lineNumber":56,"author":{"gitId":"mesyeux"},"content":"    }"},{"lineNumber":57,"author":{"gitId":"mesyeux"},"content":""},{"lineNumber":58,"author":{"gitId":"mesyeux"},"content":"    @Test"},{"lineNumber":59,"author":{"gitId":"mesyeux"},"content":"    void print() {"},{"lineNumber":60,"author":{"gitId":"mesyeux"},"content":"    }"},{"lineNumber":61,"author":{"gitId":"mesyeux"},"content":"}"}],"authorContributionMap":{"mesyeux":61}},{"path":"data/duke.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"mesyeux"},"content":"T # 0 # run with dog"},{"lineNumber":2,"author":{"gitId":"mesyeux"},"content":"T # 0 # buy leash"},{"lineNumber":3,"author":{"gitId":"mesyeux"},"content":"E # 0 # dog party  # 2021-02-03 1600-1700"},{"lineNumber":4,"author":{"gitId":"mesyeux"},"content":"D # 1 # buy dog food  # 2021-02-02 1600"}],"authorContributionMap":{"mesyeux":4}},{"path":"src/main/java/AddCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"mesyeux"},"content":"/**"},{"lineNumber":2,"author":{"gitId":"mesyeux"},"content":" * Represents a command to add a task(ToDo/Deadline/Event) to"},{"lineNumber":3,"author":{"gitId":"mesyeux"},"content":" * the existing task list."},{"lineNumber":4,"author":{"gitId":"mesyeux"},"content":" */"},{"lineNumber":5,"author":{"gitId":"mesyeux"},"content":""},{"lineNumber":6,"author":{"gitId":"mesyeux"},"content":"public class AddCommand extends Command {"},{"lineNumber":7,"author":{"gitId":"mesyeux"},"content":"    /**"},{"lineNumber":8,"author":{"gitId":"mesyeux"},"content":"     * Constructor that takes in two parameters, \u003ccode\u003efullCommand\u003c/code\u003e and \u003ccode\u003eaction\u003c/code\u003e,"},{"lineNumber":9,"author":{"gitId":"mesyeux"},"content":"     * where \u003ccode\u003efullCommand\u003c/code\u003e is the full input entered by the user, and"},{"lineNumber":10,"author":{"gitId":"mesyeux"},"content":"     * \u003ccode\u003eaction\u003c/code\u003e is the type of task (\u003ccode\u003eToDo\u003c/code\u003e/\u003ccode\u003eDeadline\u003c/code\u003e/\u003ccode\u003eEvent\u003c/code\u003e)"},{"lineNumber":11,"author":{"gitId":"mesyeux"},"content":"     * that is to be added"},{"lineNumber":12,"author":{"gitId":"mesyeux"},"content":"     * @param fullCommand the full user input"},{"lineNumber":13,"author":{"gitId":"mesyeux"},"content":"     * @param action the type of task to be added"},{"lineNumber":14,"author":{"gitId":"mesyeux"},"content":"     */"},{"lineNumber":15,"author":{"gitId":"mesyeux"},"content":"    public AddCommand(String fullCommand, String action) {"},{"lineNumber":16,"author":{"gitId":"mesyeux"},"content":"        super(fullCommand, action);"},{"lineNumber":17,"author":{"gitId":"mesyeux"},"content":"    }"},{"lineNumber":18,"author":{"gitId":"mesyeux"},"content":""},{"lineNumber":19,"author":{"gitId":"mesyeux"},"content":"    /**"},{"lineNumber":20,"author":{"gitId":"mesyeux"},"content":"     * Adds a task (\u003ccode\u003eToDo\u003c/code\u003e/\u003ccode\u003eDeadline\u003c/code\u003e/\u003ccode\u003eEvent\u003c/code\u003e)"},{"lineNumber":21,"author":{"gitId":"mesyeux"},"content":"     * into the given task list."},{"lineNumber":22,"author":{"gitId":"mesyeux"},"content":"     * @param tasks a task list that the task in question is to be added into"},{"lineNumber":23,"author":{"gitId":"mesyeux"},"content":"     * @throws DukeException If the given command does not correspond to adding"},{"lineNumber":24,"author":{"gitId":"mesyeux"},"content":"     * either a \u003ccode\u003eTodo\u003c/code\u003e, \u003ccode\u003eDeadline\u003c/code\u003e or \u003ccode\u003eEvent\u003c/code\u003e"},{"lineNumber":25,"author":{"gitId":"mesyeux"},"content":"     */"},{"lineNumber":26,"author":{"gitId":"mesyeux"},"content":""},{"lineNumber":27,"author":{"gitId":"mesyeux"},"content":"    @Override"},{"lineNumber":28,"author":{"gitId":"mesyeux"},"content":"    public void execute(TaskList tasks) throws DukeException {"},{"lineNumber":29,"author":{"gitId":"mesyeux"},"content":"        Ui.printLine();"},{"lineNumber":30,"author":{"gitId":"mesyeux"},"content":"        String[] inputs \u003d this.fullCommand.split(\" \");"},{"lineNumber":31,"author":{"gitId":"mesyeux"},"content":"        String action \u003d inputs[0];"},{"lineNumber":32,"author":{"gitId":"mesyeux"},"content":"        if (action.equals(\"todo\")) {"},{"lineNumber":33,"author":{"gitId":"mesyeux"},"content":"            if (inputs.length \u003d\u003d 1) {"},{"lineNumber":34,"author":{"gitId":"mesyeux"},"content":"                throw new DukeException(\"OOPS! The description of a todo cannot be empty.\");"},{"lineNumber":35,"author":{"gitId":"mesyeux"},"content":"            }"},{"lineNumber":36,"author":{"gitId":"mesyeux"},"content":"            Ui.print("},{"lineNumber":37,"author":{"gitId":"mesyeux"},"content":"                    Aligner.align(\"Sure! I\u0027ve added this todo:\"));"},{"lineNumber":38,"author":{"gitId":"mesyeux"},"content":"            String toPrint \u003d tasks.addByCommand(fullCommand,"},{"lineNumber":39,"author":{"gitId":"mesyeux"},"content":"                    \"todo\");"},{"lineNumber":40,"author":{"gitId":"mesyeux"},"content":"            Ui.print("},{"lineNumber":41,"author":{"gitId":"mesyeux"},"content":"                    Aligner.align(toPrint));"},{"lineNumber":42,"author":{"gitId":"mesyeux"},"content":"            Ui.print("},{"lineNumber":43,"author":{"gitId":"mesyeux"},"content":"                    Aligner.align(\"Now you have a whopping \""},{"lineNumber":44,"author":{"gitId":"mesyeux"},"content":"                            + tasks.size()"},{"lineNumber":45,"author":{"gitId":"mesyeux"},"content":"                                    + \" task(s) in the list.\"));"},{"lineNumber":46,"author":{"gitId":"mesyeux"},"content":"        } else if (action.equals(\"deadline\")) { //input format yyyy-mm-dd tttt"},{"lineNumber":47,"author":{"gitId":"mesyeux"},"content":"            if (inputs.length \u003d\u003d 1) {"},{"lineNumber":48,"author":{"gitId":"mesyeux"},"content":"                throw new DukeException(\"OOPS! The description of a deadline cannot be empty.\");"},{"lineNumber":49,"author":{"gitId":"mesyeux"},"content":"            }"},{"lineNumber":50,"author":{"gitId":"mesyeux"},"content":"            Ui.print("},{"lineNumber":51,"author":{"gitId":"mesyeux"},"content":"                    Aligner.align(\"Sure! I\u0027ve added this deadline:\"));"},{"lineNumber":52,"author":{"gitId":"mesyeux"},"content":"            String toPrint \u003d tasks.addByCommand(fullCommand,"},{"lineNumber":53,"author":{"gitId":"mesyeux"},"content":"                    \"deadline\");"},{"lineNumber":54,"author":{"gitId":"mesyeux"},"content":"            Ui.print("},{"lineNumber":55,"author":{"gitId":"mesyeux"},"content":"                    Aligner.align(toPrint));"},{"lineNumber":56,"author":{"gitId":"mesyeux"},"content":"            Ui.print("},{"lineNumber":57,"author":{"gitId":"mesyeux"},"content":"                    Aligner.align(\"Now you have a whopping \""},{"lineNumber":58,"author":{"gitId":"mesyeux"},"content":"                            + tasks.size()"},{"lineNumber":59,"author":{"gitId":"mesyeux"},"content":"                                    + \" task(s) in the list.\"));"},{"lineNumber":60,"author":{"gitId":"mesyeux"},"content":"        } else if (action.equals(\"event\")) { //input format: yyyy-mm-dd tttt-tttt"},{"lineNumber":61,"author":{"gitId":"mesyeux"},"content":"            if (inputs.length \u003d\u003d 1) {"},{"lineNumber":62,"author":{"gitId":"mesyeux"},"content":"                throw new DukeException(\"OOPS! The description of an event cannot be empty.\");"},{"lineNumber":63,"author":{"gitId":"mesyeux"},"content":"            }"},{"lineNumber":64,"author":{"gitId":"mesyeux"},"content":"            Ui.print("},{"lineNumber":65,"author":{"gitId":"mesyeux"},"content":"                    Aligner.align(\"Sure! I\u0027ve added this event:\"));"},{"lineNumber":66,"author":{"gitId":"mesyeux"},"content":"            String toPrint \u003d tasks.addByCommand(fullCommand,"},{"lineNumber":67,"author":{"gitId":"mesyeux"},"content":"                    \"event\");"},{"lineNumber":68,"author":{"gitId":"mesyeux"},"content":"            Ui.print("},{"lineNumber":69,"author":{"gitId":"mesyeux"},"content":"                    Aligner.align(toPrint));"},{"lineNumber":70,"author":{"gitId":"mesyeux"},"content":"            Ui.print("},{"lineNumber":71,"author":{"gitId":"mesyeux"},"content":"                    Aligner.align(\"Now you have a whopping \""},{"lineNumber":72,"author":{"gitId":"mesyeux"},"content":"                            + tasks.size()"},{"lineNumber":73,"author":{"gitId":"mesyeux"},"content":"                                    + \" task(s) in the list.\"));"},{"lineNumber":74,"author":{"gitId":"mesyeux"},"content":"        } else {"},{"lineNumber":75,"author":{"gitId":"mesyeux"},"content":"            throw new DukeException(\"OOPS! Sorry, I have no idea what that means :(\");"},{"lineNumber":76,"author":{"gitId":"mesyeux"},"content":"        }"},{"lineNumber":77,"author":{"gitId":"mesyeux"},"content":"        Ui.printLine();"},{"lineNumber":78,"author":{"gitId":"mesyeux"},"content":"    }"},{"lineNumber":79,"author":{"gitId":"mesyeux"},"content":"}"}],"authorContributionMap":{"mesyeux":79}},{"path":"src/main/java/Aligner.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"mesyeux"},"content":"/**"},{"lineNumber":2,"author":{"gitId":"mesyeux"},"content":" * A class that is used to align text."},{"lineNumber":3,"author":{"gitId":"mesyeux"},"content":" */"},{"lineNumber":4,"author":{"gitId":"mesyeux"},"content":""},{"lineNumber":5,"author":{"gitId":"mesyeux"},"content":"public class Aligner {"},{"lineNumber":6,"author":{"gitId":"mesyeux"},"content":"    public Aligner() { }"},{"lineNumber":7,"author":{"gitId":"mesyeux"},"content":""},{"lineNumber":8,"author":{"gitId":"mesyeux"},"content":"    /**"},{"lineNumber":9,"author":{"gitId":"mesyeux"},"content":"     * Returns a string that is properly aligned."},{"lineNumber":10,"author":{"gitId":"mesyeux"},"content":"     * @param s the String that needs to be aligned"},{"lineNumber":11,"author":{"gitId":"mesyeux"},"content":"     * @return an aligned String"},{"lineNumber":12,"author":{"gitId":"mesyeux"},"content":"     */"},{"lineNumber":13,"author":{"gitId":"mesyeux"},"content":"    public static String align(String s) {"},{"lineNumber":14,"author":{"gitId":"mesyeux"},"content":"        int stringLength \u003d s.length();"},{"lineNumber":15,"author":{"gitId":"mesyeux"},"content":"        int LINELENGTH \u003d 73;"},{"lineNumber":16,"author":{"gitId":"mesyeux"},"content":"        int left \u003d (int) Math.ceil((LINELENGTH - stringLength) / 2);"},{"lineNumber":17,"author":{"gitId":"mesyeux"},"content":"        int right \u003d (int) Math.floor((LINELENGTH - stringLength) / 2);"},{"lineNumber":18,"author":{"gitId":"mesyeux"},"content":"        String newString;"},{"lineNumber":19,"author":{"gitId":"mesyeux"},"content":"        newString \u003d String.format(\"%\" + left + \"s\", \" \") + s"},{"lineNumber":20,"author":{"gitId":"mesyeux"},"content":"                + String.format(\"%\" + right + \"s\", \" \");"},{"lineNumber":21,"author":{"gitId":"mesyeux"},"content":"        return newString;"},{"lineNumber":22,"author":{"gitId":"mesyeux"},"content":"    }"},{"lineNumber":23,"author":{"gitId":"mesyeux"},"content":"}"}],"authorContributionMap":{"mesyeux":23}},{"path":"src/main/java/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"mesyeux"},"content":"/**"},{"lineNumber":2,"author":{"gitId":"mesyeux"},"content":" * Represents a user command."},{"lineNumber":3,"author":{"gitId":"mesyeux"},"content":" */"},{"lineNumber":4,"author":{"gitId":"mesyeux"},"content":""},{"lineNumber":5,"author":{"gitId":"mesyeux"},"content":""},{"lineNumber":6,"author":{"gitId":"mesyeux"},"content":"public abstract class Command {"},{"lineNumber":7,"author":{"gitId":"mesyeux"},"content":"    protected final String fullCommand;"},{"lineNumber":8,"author":{"gitId":"mesyeux"},"content":"    protected final String action;"},{"lineNumber":9,"author":{"gitId":"mesyeux"},"content":""},{"lineNumber":10,"author":{"gitId":"mesyeux"},"content":"    /**"},{"lineNumber":11,"author":{"gitId":"mesyeux"},"content":"     * Constructor takes in a \u003ccode\u003efullCommand\u003c/code\u003e, the full user input"},{"lineNumber":12,"author":{"gitId":"mesyeux"},"content":"     * consisting of the desired command, and a \u003ccode\u003eaction\u003c/code\u003e which"},{"lineNumber":13,"author":{"gitId":"mesyeux"},"content":"     * states the type of command to be executed"},{"lineNumber":14,"author":{"gitId":"mesyeux"},"content":"     * @param fullCommand the full user input"},{"lineNumber":15,"author":{"gitId":"mesyeux"},"content":"     * @param action the type of command to be executed"},{"lineNumber":16,"author":{"gitId":"mesyeux"},"content":"     */"},{"lineNumber":17,"author":{"gitId":"mesyeux"},"content":""},{"lineNumber":18,"author":{"gitId":"mesyeux"},"content":"    public Command(String fullCommand, String action) {"},{"lineNumber":19,"author":{"gitId":"mesyeux"},"content":"        this.fullCommand \u003d fullCommand;"},{"lineNumber":20,"author":{"gitId":"mesyeux"},"content":"        this.action \u003d action;"},{"lineNumber":21,"author":{"gitId":"mesyeux"},"content":"    }"},{"lineNumber":22,"author":{"gitId":"mesyeux"},"content":""},{"lineNumber":23,"author":{"gitId":"mesyeux"},"content":"    /**"},{"lineNumber":24,"author":{"gitId":"mesyeux"},"content":"     * A method that carries out the desired command taken from the user"},{"lineNumber":25,"author":{"gitId":"mesyeux"},"content":"     * on the task list"},{"lineNumber":26,"author":{"gitId":"mesyeux"},"content":"     * @param tasks the task list that the command must be carried out on"},{"lineNumber":27,"author":{"gitId":"mesyeux"},"content":"     * @throws DukeException"},{"lineNumber":28,"author":{"gitId":"mesyeux"},"content":"     */"},{"lineNumber":29,"author":{"gitId":"mesyeux"},"content":"    public abstract void execute(TaskList tasks) throws DukeException;"},{"lineNumber":30,"author":{"gitId":"mesyeux"},"content":"}"}],"authorContributionMap":{"mesyeux":30}},{"path":"src/main/java/DateCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"mesyeux"},"content":"import java.time.LocalDate;"},{"lineNumber":2,"author":{"gitId":"mesyeux"},"content":"import java.util.List;"},{"lineNumber":3,"author":{"gitId":"mesyeux"},"content":""},{"lineNumber":4,"author":{"gitId":"mesyeux"},"content":"/**"},{"lineNumber":5,"author":{"gitId":"mesyeux"},"content":" * Represents a command to print out all the tasks (\u003ccode\u003eDeadline\u003c/code\u003e, \u003ccode\u003eEvent\u003c/code\u003e)"},{"lineNumber":6,"author":{"gitId":"mesyeux"},"content":" * that falls on a particular date and time."},{"lineNumber":7,"author":{"gitId":"mesyeux"},"content":" */"},{"lineNumber":8,"author":{"gitId":"mesyeux"},"content":""},{"lineNumber":9,"author":{"gitId":"mesyeux"},"content":"public class DateCommand extends Command {"},{"lineNumber":10,"author":{"gitId":"mesyeux"},"content":"    /**"},{"lineNumber":11,"author":{"gitId":"mesyeux"},"content":"     * Constructor takes in a \u003ccode\u003efullCommand\u003c/code\u003e, the full user input"},{"lineNumber":12,"author":{"gitId":"mesyeux"},"content":"     * consisting of the desired command, and a \u003ccode\u003eaction\u003c/code\u003e which"},{"lineNumber":13,"author":{"gitId":"mesyeux"},"content":"     * in this case should specify \"date\""},{"lineNumber":14,"author":{"gitId":"mesyeux"},"content":"     * @param fullCommand the full user input"},{"lineNumber":15,"author":{"gitId":"mesyeux"},"content":"     * @param action should be \"date\""},{"lineNumber":16,"author":{"gitId":"mesyeux"},"content":"     */"},{"lineNumber":17,"author":{"gitId":"mesyeux"},"content":"    public DateCommand(String fullCommand, String action) {"},{"lineNumber":18,"author":{"gitId":"mesyeux"},"content":"        super(fullCommand, action);"},{"lineNumber":19,"author":{"gitId":"mesyeux"},"content":"    }"},{"lineNumber":20,"author":{"gitId":"mesyeux"},"content":""},{"lineNumber":21,"author":{"gitId":"mesyeux"},"content":"    /**"},{"lineNumber":22,"author":{"gitId":"mesyeux"},"content":"     * Prints out all the tasks (\u003ccode\u003eDeadline\u003c/code\u003e/\u003ccode\u003eEvent\u003c/code\u003e)"},{"lineNumber":23,"author":{"gitId":"mesyeux"},"content":"     * that falls on the user specified date in the \u003ccode\u003efullCommand\u003c/code\u003e"},{"lineNumber":24,"author":{"gitId":"mesyeux"},"content":"     * @param tasks the task list consisting all the tasks"},{"lineNumber":25,"author":{"gitId":"mesyeux"},"content":"     * @throws DukeException if no date is specified"},{"lineNumber":26,"author":{"gitId":"mesyeux"},"content":"     */"},{"lineNumber":27,"author":{"gitId":"mesyeux"},"content":"    @Override"},{"lineNumber":28,"author":{"gitId":"mesyeux"},"content":"    public void execute(TaskList tasks) throws DukeException {"},{"lineNumber":29,"author":{"gitId":"mesyeux"},"content":"        Ui.printLine();"},{"lineNumber":30,"author":{"gitId":"mesyeux"},"content":"        String[] inputs \u003d this.fullCommand.split(\" \");"},{"lineNumber":31,"author":{"gitId":"mesyeux"},"content":"        if (inputs.length \u003d\u003d 1) {"},{"lineNumber":32,"author":{"gitId":"mesyeux"},"content":"            throw new DukeException(\"OOPS! Please give me the date that you want to check in YYYY-MM-DD format.\");"},{"lineNumber":33,"author":{"gitId":"mesyeux"},"content":"        }"},{"lineNumber":34,"author":{"gitId":"mesyeux"},"content":"        LocalDate d \u003d LocalDate.parse(inputs[1]);"},{"lineNumber":35,"author":{"gitId":"mesyeux"},"content":"        List\u003cTask\u003e toPrint \u003d tasks.print(d);"},{"lineNumber":36,"author":{"gitId":"mesyeux"},"content":"        for (int i \u003d 1; i \u003c toPrint.size() + 1; i++) {"},{"lineNumber":37,"author":{"gitId":"mesyeux"},"content":"            Ui.print("},{"lineNumber":38,"author":{"gitId":"mesyeux"},"content":"                    Aligner.align(i + \".\""},{"lineNumber":39,"author":{"gitId":"mesyeux"},"content":"                            + toPrint.get(i - 1).toString()));"},{"lineNumber":40,"author":{"gitId":"mesyeux"},"content":"        }"},{"lineNumber":41,"author":{"gitId":"mesyeux"},"content":"        Ui.printLine();"},{"lineNumber":42,"author":{"gitId":"mesyeux"},"content":"    }"},{"lineNumber":43,"author":{"gitId":"mesyeux"},"content":"}"}],"authorContributionMap":{"mesyeux":43}},{"path":"src/main/java/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"mesyeux"},"content":"import java.time.LocalDate;"},{"lineNumber":2,"author":{"gitId":"mesyeux"},"content":"import java.time.LocalTime;"},{"lineNumber":3,"author":{"gitId":"mesyeux"},"content":"import java.time.format.DateTimeFormatter;"},{"lineNumber":4,"author":{"gitId":"mesyeux"},"content":""},{"lineNumber":5,"author":{"gitId":"mesyeux"},"content":"/**"},{"lineNumber":6,"author":{"gitId":"mesyeux"},"content":" * Represents a task in the form of a deadline which has a date and time"},{"lineNumber":7,"author":{"gitId":"mesyeux"},"content":" * that it must be done by"},{"lineNumber":8,"author":{"gitId":"mesyeux"},"content":" */"},{"lineNumber":9,"author":{"gitId":"mesyeux"},"content":""},{"lineNumber":10,"author":{"gitId":"mesyeux"},"content":"public class Deadline extends Task {"},{"lineNumber":11,"author":{"gitId":"mesyeux"},"content":"    private final LocalDate dateBy; //deadline of task"},{"lineNumber":12,"author":{"gitId":"mesyeux"},"content":"    private final LocalTime timeBy;"},{"lineNumber":13,"author":{"gitId":"mesyeux"},"content":""},{"lineNumber":14,"author":{"gitId":"mesyeux"},"content":"    /**"},{"lineNumber":15,"author":{"gitId":"mesyeux"},"content":"     * Constructor takes in three parameters, \u003ccode\u003edescription\u003c/code\u003e (description of deadline),"},{"lineNumber":16,"author":{"gitId":"mesyeux"},"content":"     * \u003ccode\u003edateBy\u003c/code\u003e (date of deadline) and \u003ccode\u003etimeBy\u003c/code\u003e (time of deadline)"},{"lineNumber":17,"author":{"gitId":"mesyeux"},"content":"     * @param description a \u003ccode\u003eString\u003c/code\u003e that describes the deadline"},{"lineNumber":18,"author":{"gitId":"mesyeux"},"content":"     * @param dateBy a \u003ccode\u003eLocalDate\u003c/code\u003e specifying the date of deadline"},{"lineNumber":19,"author":{"gitId":"mesyeux"},"content":"     * @param timeBy a \u003ccode\u003eLocalTime\u003c/code\u003e specifying the time of deadline"},{"lineNumber":20,"author":{"gitId":"mesyeux"},"content":"     */"},{"lineNumber":21,"author":{"gitId":"mesyeux"},"content":""},{"lineNumber":22,"author":{"gitId":"mesyeux"},"content":"    public Deadline(String description, LocalDate dateBy, LocalTime timeBy) {"},{"lineNumber":23,"author":{"gitId":"mesyeux"},"content":"        super(description);"},{"lineNumber":24,"author":{"gitId":"mesyeux"},"content":"        this.dateBy \u003d dateBy;"},{"lineNumber":25,"author":{"gitId":"mesyeux"},"content":"        this.timeBy \u003d timeBy;"},{"lineNumber":26,"author":{"gitId":"mesyeux"},"content":"    }"},{"lineNumber":27,"author":{"gitId":"mesyeux"},"content":""},{"lineNumber":28,"author":{"gitId":"mesyeux"},"content":"    /**"},{"lineNumber":29,"author":{"gitId":"mesyeux"},"content":"     * A method that returns the date of the deadline"},{"lineNumber":30,"author":{"gitId":"mesyeux"},"content":"     * @return a \u003ccode\u003eLocalDate\u003c/code\u003e object that specifies the date of"},{"lineNumber":31,"author":{"gitId":"mesyeux"},"content":"     * the deadline"},{"lineNumber":32,"author":{"gitId":"mesyeux"},"content":"     */"},{"lineNumber":33,"author":{"gitId":"mesyeux"},"content":"    @Override"},{"lineNumber":34,"author":{"gitId":"mesyeux"},"content":"    public LocalDate getDate() {"},{"lineNumber":35,"author":{"gitId":"mesyeux"},"content":"        return this.dateBy;"},{"lineNumber":36,"author":{"gitId":"mesyeux"},"content":"    }"},{"lineNumber":37,"author":{"gitId":"mesyeux"},"content":""},{"lineNumber":38,"author":{"gitId":"mesyeux"},"content":"    /**"},{"lineNumber":39,"author":{"gitId":"mesyeux"},"content":"     * A method that generates the text to be stored into the text file"},{"lineNumber":40,"author":{"gitId":"mesyeux"},"content":"     * at the end of execution"},{"lineNumber":41,"author":{"gitId":"mesyeux"},"content":"     * @return A \u003ccode\u003eString\u003c/code\u003e text in the proper format to be stored"},{"lineNumber":42,"author":{"gitId":"mesyeux"},"content":"     * into the text file"},{"lineNumber":43,"author":{"gitId":"mesyeux"},"content":"     */"},{"lineNumber":44,"author":{"gitId":"mesyeux"},"content":"    @Override"},{"lineNumber":45,"author":{"gitId":"mesyeux"},"content":"    public String generateText() {"},{"lineNumber":46,"author":{"gitId":"mesyeux"},"content":"        return String.format(\"D # %d # %s # %s %s\","},{"lineNumber":47,"author":{"gitId":"mesyeux"},"content":"                this.isDone ? 1 : 0,"},{"lineNumber":48,"author":{"gitId":"mesyeux"},"content":"                        this.description, this.dateBy,"},{"lineNumber":49,"author":{"gitId":"mesyeux"},"content":"                                this.timeBy.format("},{"lineNumber":50,"author":{"gitId":"mesyeux"},"content":"                                        DateTimeFormatter.ofPattern(\"HHmm\")));"},{"lineNumber":51,"author":{"gitId":"mesyeux"},"content":"    }"},{"lineNumber":52,"author":{"gitId":"mesyeux"},"content":""},{"lineNumber":53,"author":{"gitId":"mesyeux"},"content":"    /**"},{"lineNumber":54,"author":{"gitId":"mesyeux"},"content":"     * A method that returns the date and time of deadline in the format of"},{"lineNumber":55,"author":{"gitId":"mesyeux"},"content":"     * MMM-d-yyyy hh:mma"},{"lineNumber":56,"author":{"gitId":"mesyeux"},"content":"     * @return a \u003ccode\u003eString\u003c/code\u003e of the date ond time of deadline"},{"lineNumber":57,"author":{"gitId":"mesyeux"},"content":"     */"},{"lineNumber":58,"author":{"gitId":"mesyeux"},"content":""},{"lineNumber":59,"author":{"gitId":"mesyeux"},"content":"    public String getDeadline() { //get deadline in format of String eg. (by: Sunday)"},{"lineNumber":60,"author":{"gitId":"mesyeux"},"content":"        return \"(by: \" + dateBy.format("},{"lineNumber":61,"author":{"gitId":"mesyeux"},"content":"                DateTimeFormatter.ofPattern(\"MMM d yyyy\")) + \" \""},{"lineNumber":62,"author":{"gitId":"mesyeux"},"content":"                        + timeBy.format("},{"lineNumber":63,"author":{"gitId":"mesyeux"},"content":"                                DateTimeFormatter.ofPattern(\"hh:mma\")) + \")\";"},{"lineNumber":64,"author":{"gitId":"mesyeux"},"content":"    }"},{"lineNumber":65,"author":{"gitId":"mesyeux"},"content":""},{"lineNumber":66,"author":{"gitId":"mesyeux"},"content":"    @Override"},{"lineNumber":67,"author":{"gitId":"mesyeux"},"content":"    public String toString() {"},{"lineNumber":68,"author":{"gitId":"mesyeux"},"content":"        if (this.isDone) {"},{"lineNumber":69,"author":{"gitId":"mesyeux"},"content":"            return \"[D][X] \" + this.description + this.getDeadline();"},{"lineNumber":70,"author":{"gitId":"mesyeux"},"content":"        } else {"},{"lineNumber":71,"author":{"gitId":"mesyeux"},"content":"            return \"[D][ ] \" + this.description + this.getDeadline();"},{"lineNumber":72,"author":{"gitId":"mesyeux"},"content":"        }"},{"lineNumber":73,"author":{"gitId":"mesyeux"},"content":"    }"},{"lineNumber":74,"author":{"gitId":"mesyeux"},"content":"}"}],"authorContributionMap":{"mesyeux":74}},{"path":"src/main/java/DeleteCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"mesyeux"},"content":"/**"},{"lineNumber":2,"author":{"gitId":"mesyeux"},"content":" * Represents a command to delete a task from the task list"},{"lineNumber":3,"author":{"gitId":"mesyeux"},"content":" */"},{"lineNumber":4,"author":{"gitId":"mesyeux"},"content":""},{"lineNumber":5,"author":{"gitId":"mesyeux"},"content":"public class DeleteCommand extends Command {"},{"lineNumber":6,"author":{"gitId":"mesyeux"},"content":"    /**"},{"lineNumber":7,"author":{"gitId":"mesyeux"},"content":"     * Constructor takes in a \u003ccode\u003efullCommand\u003c/code\u003e, the full user input"},{"lineNumber":8,"author":{"gitId":"mesyeux"},"content":"     * consisting of the desired command, and a \u003ccode\u003eaction\u003c/code\u003e which"},{"lineNumber":9,"author":{"gitId":"mesyeux"},"content":"     * in this case should specify \"delete\""},{"lineNumber":10,"author":{"gitId":"mesyeux"},"content":"     * @param fullCommand the full user input"},{"lineNumber":11,"author":{"gitId":"mesyeux"},"content":"     * @param action should be \"delete\""},{"lineNumber":12,"author":{"gitId":"mesyeux"},"content":"     */"},{"lineNumber":13,"author":{"gitId":"mesyeux"},"content":"    public DeleteCommand(String fullCommand, String action) {"},{"lineNumber":14,"author":{"gitId":"mesyeux"},"content":"        super(fullCommand, action);"},{"lineNumber":15,"author":{"gitId":"mesyeux"},"content":"    }"},{"lineNumber":16,"author":{"gitId":"mesyeux"},"content":""},{"lineNumber":17,"author":{"gitId":"mesyeux"},"content":"    /**"},{"lineNumber":18,"author":{"gitId":"mesyeux"},"content":"     * Deletes a task from the given task list"},{"lineNumber":19,"author":{"gitId":"mesyeux"},"content":"     * @param tasks the task list consisting the task to be deleted"},{"lineNumber":20,"author":{"gitId":"mesyeux"},"content":"     * @throws DukeException"},{"lineNumber":21,"author":{"gitId":"mesyeux"},"content":"     */"},{"lineNumber":22,"author":{"gitId":"mesyeux"},"content":"    @Override"},{"lineNumber":23,"author":{"gitId":"mesyeux"},"content":"    public void execute(TaskList tasks) throws DukeException {"},{"lineNumber":24,"author":{"gitId":"mesyeux"},"content":"        Ui.printLine();"},{"lineNumber":25,"author":{"gitId":"mesyeux"},"content":"        int taskNo \u003d Integer.parseInt(String.valueOf(fullCommand.charAt(7))) - 1;"},{"lineNumber":26,"author":{"gitId":"mesyeux"},"content":"        String toPrint \u003d tasks.remove(taskNo);"},{"lineNumber":27,"author":{"gitId":"mesyeux"},"content":"        Ui.print("},{"lineNumber":28,"author":{"gitId":"mesyeux"},"content":"                Aligner.align(\"Alright! I\u0027ve removed this task:\"));"},{"lineNumber":29,"author":{"gitId":"mesyeux"},"content":"        Ui.print("},{"lineNumber":30,"author":{"gitId":"mesyeux"},"content":"                Aligner.align(toPrint));"},{"lineNumber":31,"author":{"gitId":"mesyeux"},"content":"        Ui.print("},{"lineNumber":32,"author":{"gitId":"mesyeux"},"content":"                Aligner.align(\"Now you have a whopping \""},{"lineNumber":33,"author":{"gitId":"mesyeux"},"content":"                        + tasks.size()"},{"lineNumber":34,"author":{"gitId":"mesyeux"},"content":"                                + \" task(s) in the list.\"));"},{"lineNumber":35,"author":{"gitId":"mesyeux"},"content":"        Ui.printLine();"},{"lineNumber":36,"author":{"gitId":"mesyeux"},"content":"    }"},{"lineNumber":37,"author":{"gitId":"mesyeux"},"content":"}"}],"authorContributionMap":{"mesyeux":37}},{"path":"src/main/java/DoneCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"mesyeux"},"content":"/**"},{"lineNumber":2,"author":{"gitId":"mesyeux"},"content":" * Represents a command to mark a task as done within the task list"},{"lineNumber":3,"author":{"gitId":"mesyeux"},"content":" */"},{"lineNumber":4,"author":{"gitId":"mesyeux"},"content":""},{"lineNumber":5,"author":{"gitId":"mesyeux"},"content":"public class DoneCommand extends Command {"},{"lineNumber":6,"author":{"gitId":"mesyeux"},"content":"    /**"},{"lineNumber":7,"author":{"gitId":"mesyeux"},"content":"     * Constructor takes in a \u003ccode\u003efullCommand\u003c/code\u003e, the full user input"},{"lineNumber":8,"author":{"gitId":"mesyeux"},"content":"     * consisting of the desired command, and a \u003ccode\u003eaction\u003c/code\u003e which"},{"lineNumber":9,"author":{"gitId":"mesyeux"},"content":"     * in this case should specify \"done\""},{"lineNumber":10,"author":{"gitId":"mesyeux"},"content":"     * @param fullCommand the full user input"},{"lineNumber":11,"author":{"gitId":"mesyeux"},"content":"     * @param action should be \"done\""},{"lineNumber":12,"author":{"gitId":"mesyeux"},"content":"     */"},{"lineNumber":13,"author":{"gitId":"mesyeux"},"content":"    public DoneCommand(String fullCommand, String action) {"},{"lineNumber":14,"author":{"gitId":"mesyeux"},"content":"        super(fullCommand, action);"},{"lineNumber":15,"author":{"gitId":"mesyeux"},"content":"    }"},{"lineNumber":16,"author":{"gitId":"mesyeux"},"content":""},{"lineNumber":17,"author":{"gitId":"mesyeux"},"content":"    /**"},{"lineNumber":18,"author":{"gitId":"mesyeux"},"content":"     * Marks a task within the task list as done"},{"lineNumber":19,"author":{"gitId":"mesyeux"},"content":"     * @param tasks the task list consisting the task to be marked as done"},{"lineNumber":20,"author":{"gitId":"mesyeux"},"content":"     * @throws DukeException if user did not type in a task number"},{"lineNumber":21,"author":{"gitId":"mesyeux"},"content":"     */"},{"lineNumber":22,"author":{"gitId":"mesyeux"},"content":"    public void execute(TaskList tasks) throws DukeException {"},{"lineNumber":23,"author":{"gitId":"mesyeux"},"content":"        Ui.printLine();"},{"lineNumber":24,"author":{"gitId":"mesyeux"},"content":"        String[] inputs \u003d this.fullCommand.split(\" \");"},{"lineNumber":25,"author":{"gitId":"mesyeux"},"content":"        if (inputs.length \u003d\u003d 1) {"},{"lineNumber":26,"author":{"gitId":"mesyeux"},"content":"            throw new DukeException(\"OOPS! Please tell me what to mark as done!\");"},{"lineNumber":27,"author":{"gitId":"mesyeux"},"content":"        }"},{"lineNumber":28,"author":{"gitId":"mesyeux"},"content":"        int taskNo \u003d Integer.parseInt(String.valueOf(fullCommand.charAt(5))) - 1;"},{"lineNumber":29,"author":{"gitId":"mesyeux"},"content":"        String toPrint \u003d tasks.makeDone(taskNo);"},{"lineNumber":30,"author":{"gitId":"mesyeux"},"content":"        Ui.print("},{"lineNumber":31,"author":{"gitId":"mesyeux"},"content":"                Aligner.align(\"Good job! I\u0027ve marked this task as done:\"));"},{"lineNumber":32,"author":{"gitId":"mesyeux"},"content":"        Ui.print("},{"lineNumber":33,"author":{"gitId":"mesyeux"},"content":"                Aligner.align(toPrint));"},{"lineNumber":34,"author":{"gitId":"mesyeux"},"content":"        Ui.printLine();"},{"lineNumber":35,"author":{"gitId":"mesyeux"},"content":"    }"},{"lineNumber":36,"author":{"gitId":"mesyeux"},"content":"}"}],"authorContributionMap":{"mesyeux":36}},{"path":"src/main/java/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"mesyeux"},"content":"import java.io.IOException;"},{"lineNumber":2,"author":{"gitId":"mesyeux"},"content":"import java.util.*;"},{"lineNumber":3,"author":{"gitId":"mesyeux"},"content":"import java.io.File;"},{"lineNumber":4,"author":{"gitId":"mesyeux"},"content":""},{"lineNumber":5,"author":{"gitId":"-"},"content":"public class Duke {"},{"lineNumber":6,"author":{"gitId":"mesyeux"},"content":"    public static final Scanner sc \u003d new Scanner(System.in);"},{"lineNumber":7,"author":{"gitId":"mesyeux"},"content":"    public static TaskList tasks;"},{"lineNumber":8,"author":{"gitId":"mesyeux"},"content":"    public static FileHandler fh;"},{"lineNumber":9,"author":{"gitId":"mesyeux"},"content":"    public static Ui ui;"},{"lineNumber":10,"author":{"gitId":"mesyeux"},"content":""},{"lineNumber":11,"author":{"gitId":"mesyeux"},"content":"    public Duke() {"},{"lineNumber":12,"author":{"gitId":"mesyeux"},"content":"        ui \u003d new Ui();"},{"lineNumber":13,"author":{"gitId":"mesyeux"},"content":"        fh \u003d new FileHandler();"},{"lineNumber":14,"author":{"gitId":"mesyeux"},"content":"        tasks \u003d new TaskList();"},{"lineNumber":15,"author":{"gitId":"mesyeux"},"content":"    }"},{"lineNumber":16,"author":{"gitId":"mesyeux"},"content":""},{"lineNumber":17,"author":{"gitId":"mesyeux"},"content":"    public static void start() {"},{"lineNumber":18,"author":{"gitId":"mesyeux"},"content":"        ui.printStart();"},{"lineNumber":19,"author":{"gitId":"mesyeux"},"content":"        readData();"},{"lineNumber":20,"author":{"gitId":"mesyeux"},"content":"    }"},{"lineNumber":21,"author":{"gitId":"mesyeux"},"content":""},{"lineNumber":22,"author":{"gitId":"mesyeux"},"content":"    public static void run() {"},{"lineNumber":23,"author":{"gitId":"mesyeux"},"content":"        start();"},{"lineNumber":24,"author":{"gitId":"mesyeux"},"content":"        String fullCommand \u003d ui.readCommand();"},{"lineNumber":25,"author":{"gitId":"mesyeux"},"content":"        while (!fullCommand.equals(\"bye\")) {"},{"lineNumber":26,"author":{"gitId":"mesyeux"},"content":"            try {"},{"lineNumber":27,"author":{"gitId":"mesyeux"},"content":"                Command c \u003d Parser.parse(fullCommand);"},{"lineNumber":28,"author":{"gitId":"mesyeux"},"content":"                c.execute(tasks);"},{"lineNumber":29,"author":{"gitId":"mesyeux"},"content":"                fullCommand \u003d ui.readCommand();"},{"lineNumber":30,"author":{"gitId":"mesyeux"},"content":"            } catch (DukeException ex) {"},{"lineNumber":31,"author":{"gitId":"mesyeux"},"content":"                System.out.println(ex);"},{"lineNumber":32,"author":{"gitId":"mesyeux"},"content":"                Ui.printLine();"},{"lineNumber":33,"author":{"gitId":"mesyeux"},"content":"                fullCommand \u003d ui.readCommand();"},{"lineNumber":34,"author":{"gitId":"mesyeux"},"content":"                Ui.printLine();"},{"lineNumber":35,"author":{"gitId":"mesyeux"},"content":"            }"},{"lineNumber":36,"author":{"gitId":"mesyeux"},"content":"        }"},{"lineNumber":37,"author":{"gitId":"mesyeux"},"content":"        end();"},{"lineNumber":38,"author":{"gitId":"mesyeux"},"content":"    }"},{"lineNumber":39,"author":{"gitId":"mesyeux"},"content":""},{"lineNumber":40,"author":{"gitId":"mesyeux"},"content":"    public static void end() {"},{"lineNumber":41,"author":{"gitId":"mesyeux"},"content":"        writeData();"},{"lineNumber":42,"author":{"gitId":"mesyeux"},"content":"        ui.printEnd();"},{"lineNumber":43,"author":{"gitId":"mesyeux"},"content":"    }"},{"lineNumber":44,"author":{"gitId":"mesyeux"},"content":""},{"lineNumber":45,"author":{"gitId":"mesyeux"},"content":"    public static void readData() {"},{"lineNumber":46,"author":{"gitId":"mesyeux"},"content":"        try {"},{"lineNumber":47,"author":{"gitId":"mesyeux"},"content":"            //reading input and putting into list"},{"lineNumber":48,"author":{"gitId":"mesyeux"},"content":"            tasks \u003d fh.readFromFile(tasks);"},{"lineNumber":49,"author":{"gitId":"mesyeux"},"content":"        } catch (DukeException ex) {"},{"lineNumber":50,"author":{"gitId":"mesyeux"},"content":"            ui.showError(ex.getMessage());"},{"lineNumber":51,"author":{"gitId":"mesyeux"},"content":"        } catch (IOException ex) {"},{"lineNumber":52,"author":{"gitId":"mesyeux"},"content":"            System.out.println(\"Oops! Something went wrong: \" + ex.getMessage());"},{"lineNumber":53,"author":{"gitId":"mesyeux"},"content":"        }"},{"lineNumber":54,"author":{"gitId":"mesyeux"},"content":"    }"},{"lineNumber":55,"author":{"gitId":"mesyeux"},"content":""},{"lineNumber":56,"author":{"gitId":"mesyeux"},"content":"    public static void writeData() {"},{"lineNumber":57,"author":{"gitId":"mesyeux"},"content":"        try {"},{"lineNumber":58,"author":{"gitId":"mesyeux"},"content":"            fh.writeToFile(tasks);"},{"lineNumber":59,"author":{"gitId":"mesyeux"},"content":"        } catch (IOException ex) {"},{"lineNumber":60,"author":{"gitId":"mesyeux"},"content":"            System.out.println(\"Oops! Something went wrong: \" + ex.getMessage());"},{"lineNumber":61,"author":{"gitId":"mesyeux"},"content":"        }"},{"lineNumber":62,"author":{"gitId":"mesyeux"},"content":"    }"},{"lineNumber":63,"author":{"gitId":"mesyeux"},"content":""},{"lineNumber":64,"author":{"gitId":"mesyeux"},"content":""},{"lineNumber":65,"author":{"gitId":"-"},"content":"    public static void main(String[] args) {"},{"lineNumber":66,"author":{"gitId":"mesyeux"},"content":"        new Duke().run();"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":68,"author":{"gitId":"-"},"content":"}"}],"authorContributionMap":{"mesyeux":64,"-":4}},{"path":"src/main/java/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"mesyeux"},"content":"public class DukeException extends Exception {"},{"lineNumber":2,"author":{"gitId":"mesyeux"},"content":"    public DukeException(String message) {"},{"lineNumber":3,"author":{"gitId":"mesyeux"},"content":"        super(message);"},{"lineNumber":4,"author":{"gitId":"mesyeux"},"content":"    }"},{"lineNumber":5,"author":{"gitId":"mesyeux"},"content":"}"}],"authorContributionMap":{"mesyeux":5}},{"path":"src/main/java/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"mesyeux"},"content":"import java.time.LocalDate;"},{"lineNumber":2,"author":{"gitId":"mesyeux"},"content":"import java.time.LocalTime;"},{"lineNumber":3,"author":{"gitId":"mesyeux"},"content":"import java.time.format.DateTimeFormatter;"},{"lineNumber":4,"author":{"gitId":"mesyeux"},"content":""},{"lineNumber":5,"author":{"gitId":"mesyeux"},"content":"/**"},{"lineNumber":6,"author":{"gitId":"mesyeux"},"content":" * Represents a task in the form of an event which has a date,"},{"lineNumber":7,"author":{"gitId":"mesyeux"},"content":" * an event starting time and an event ending time"},{"lineNumber":8,"author":{"gitId":"mesyeux"},"content":" */"},{"lineNumber":9,"author":{"gitId":"mesyeux"},"content":""},{"lineNumber":10,"author":{"gitId":"mesyeux"},"content":"public class Event extends Task {"},{"lineNumber":11,"author":{"gitId":"mesyeux"},"content":"    private final LocalDate date;"},{"lineNumber":12,"author":{"gitId":"mesyeux"},"content":"    private final LocalTime startTime; //in 24h format"},{"lineNumber":13,"author":{"gitId":"mesyeux"},"content":"    private final LocalTime endTime;"},{"lineNumber":14,"author":{"gitId":"mesyeux"},"content":""},{"lineNumber":15,"author":{"gitId":"mesyeux"},"content":"    /**"},{"lineNumber":16,"author":{"gitId":"mesyeux"},"content":"     * Constructor takes in four parameters \u003ccode\u003edescription\u003c/code\u003e,"},{"lineNumber":17,"author":{"gitId":"mesyeux"},"content":"     * \u003ccode\u003edate\u003c/code\u003e, \u003ccode\u003estartTime\u003c/code\u003e and \u003ccode\u003eendTime\u003c/code\u003e"},{"lineNumber":18,"author":{"gitId":"mesyeux"},"content":"     * @param description the description of the event in the form of a \u003ccode\u003eString\u003c/code\u003e"},{"lineNumber":19,"author":{"gitId":"mesyeux"},"content":"     * @param date the date of the event in the form of a \u003ccode\u003eLocalDate\u003c/code\u003e"},{"lineNumber":20,"author":{"gitId":"mesyeux"},"content":"     * @param startTime the starting time of the event in the form of a \u003ccode\u003eLocalTime\u003c/code\u003e"},{"lineNumber":21,"author":{"gitId":"mesyeux"},"content":"     * @param endTime the ending time of the event in the form of a \u003ccode\u003eLocalTime\u003c/code\u003e"},{"lineNumber":22,"author":{"gitId":"mesyeux"},"content":"     */"},{"lineNumber":23,"author":{"gitId":"mesyeux"},"content":"    public Event(String description, LocalDate date, LocalTime startTime, LocalTime endTime) {"},{"lineNumber":24,"author":{"gitId":"mesyeux"},"content":"        super(description);"},{"lineNumber":25,"author":{"gitId":"mesyeux"},"content":"        this.date \u003d date;"},{"lineNumber":26,"author":{"gitId":"mesyeux"},"content":"        this.startTime \u003d startTime;"},{"lineNumber":27,"author":{"gitId":"mesyeux"},"content":"        this.endTime \u003d endTime;"},{"lineNumber":28,"author":{"gitId":"mesyeux"},"content":"    }"},{"lineNumber":29,"author":{"gitId":"mesyeux"},"content":""},{"lineNumber":30,"author":{"gitId":"mesyeux"},"content":"    /**"},{"lineNumber":31,"author":{"gitId":"mesyeux"},"content":"     * A method returning the date of the event"},{"lineNumber":32,"author":{"gitId":"mesyeux"},"content":"     * @return a \u003ccode\u003eLocalDate\u003c/code\u003e object that specifies"},{"lineNumber":33,"author":{"gitId":"mesyeux"},"content":"     * the date of the event"},{"lineNumber":34,"author":{"gitId":"mesyeux"},"content":"     */"},{"lineNumber":35,"author":{"gitId":"mesyeux"},"content":""},{"lineNumber":36,"author":{"gitId":"mesyeux"},"content":"    @Override"},{"lineNumber":37,"author":{"gitId":"mesyeux"},"content":"    public LocalDate getDate() {"},{"lineNumber":38,"author":{"gitId":"mesyeux"},"content":"        return this.date;"},{"lineNumber":39,"author":{"gitId":"mesyeux"},"content":"    }"},{"lineNumber":40,"author":{"gitId":"mesyeux"},"content":""},{"lineNumber":41,"author":{"gitId":"mesyeux"},"content":"    /**"},{"lineNumber":42,"author":{"gitId":"mesyeux"},"content":"     * A method that generates the text to be stored into the text file"},{"lineNumber":43,"author":{"gitId":"mesyeux"},"content":"     * at the end of execution"},{"lineNumber":44,"author":{"gitId":"mesyeux"},"content":"     * @return A \u003ccode\u003eString\u003c/code\u003e text in the proper format to be stored"},{"lineNumber":45,"author":{"gitId":"mesyeux"},"content":"     * into the text file"},{"lineNumber":46,"author":{"gitId":"mesyeux"},"content":"     */"},{"lineNumber":47,"author":{"gitId":"mesyeux"},"content":"    @Override"},{"lineNumber":48,"author":{"gitId":"mesyeux"},"content":"    public String generateText() {"},{"lineNumber":49,"author":{"gitId":"mesyeux"},"content":"        return String.format(\"E # %d # %s # %s %s-%s\", this.isDone ? 1 : 0, this.description, this.date,"},{"lineNumber":50,"author":{"gitId":"mesyeux"},"content":"                this.startTime.format("},{"lineNumber":51,"author":{"gitId":"mesyeux"},"content":"                        DateTimeFormatter.ofPattern(\"HHmm\")),"},{"lineNumber":52,"author":{"gitId":"mesyeux"},"content":"                this.endTime.format("},{"lineNumber":53,"author":{"gitId":"mesyeux"},"content":"                        DateTimeFormatter.ofPattern(\"HHmm\")));"},{"lineNumber":54,"author":{"gitId":"mesyeux"},"content":"    }"},{"lineNumber":55,"author":{"gitId":"mesyeux"},"content":""},{"lineNumber":56,"author":{"gitId":"mesyeux"},"content":"    /**"},{"lineNumber":57,"author":{"gitId":"mesyeux"},"content":"     * A method that returns the date, starting time and ending time of the event"},{"lineNumber":58,"author":{"gitId":"mesyeux"},"content":"     * in the format of MMM-d-yyyy hh:mma-hh:mma"},{"lineNumber":59,"author":{"gitId":"mesyeux"},"content":"     * @return a \u003ccode\u003eString\u003c/code\u003e of the date, starting time and ending time"},{"lineNumber":60,"author":{"gitId":"mesyeux"},"content":"     * of the event"},{"lineNumber":61,"author":{"gitId":"mesyeux"},"content":"     */"},{"lineNumber":62,"author":{"gitId":"mesyeux"},"content":"    public String getTime() {"},{"lineNumber":63,"author":{"gitId":"mesyeux"},"content":"        return \"(at: \" + this.date.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\")) + \" \""},{"lineNumber":64,"author":{"gitId":"mesyeux"},"content":"                + this.startTime.format(DateTimeFormatter.ofPattern(\"hh:mma\")) + \"-\""},{"lineNumber":65,"author":{"gitId":"mesyeux"},"content":"                        + this.endTime.format(DateTimeFormatter.ofPattern(\"hh:mma\")) + \")\";"},{"lineNumber":66,"author":{"gitId":"mesyeux"},"content":"    }"},{"lineNumber":67,"author":{"gitId":"mesyeux"},"content":""},{"lineNumber":68,"author":{"gitId":"mesyeux"},"content":"    @Override"},{"lineNumber":69,"author":{"gitId":"mesyeux"},"content":"    public String toString() {"},{"lineNumber":70,"author":{"gitId":"mesyeux"},"content":"        if (this.isDone) {"},{"lineNumber":71,"author":{"gitId":"mesyeux"},"content":"            return \"[E][X] \" + this.description + this.getTime();"},{"lineNumber":72,"author":{"gitId":"mesyeux"},"content":"        } else {"},{"lineNumber":73,"author":{"gitId":"mesyeux"},"content":"            return \"[E][ ] \" + this.description + this.getTime();"},{"lineNumber":74,"author":{"gitId":"mesyeux"},"content":"        }"},{"lineNumber":75,"author":{"gitId":"mesyeux"},"content":"    }"},{"lineNumber":76,"author":{"gitId":"mesyeux"},"content":"}"}],"authorContributionMap":{"mesyeux":76}},{"path":"src/main/java/FileHandler.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"mesyeux"},"content":"import java.io.File;"},{"lineNumber":2,"author":{"gitId":"mesyeux"},"content":"import java.io.FileWriter;"},{"lineNumber":3,"author":{"gitId":"mesyeux"},"content":"import java.io.IOException;"},{"lineNumber":4,"author":{"gitId":"mesyeux"},"content":"import java.io.PrintWriter;"},{"lineNumber":5,"author":{"gitId":"mesyeux"},"content":"import java.time.LocalDate;"},{"lineNumber":6,"author":{"gitId":"mesyeux"},"content":"import java.time.LocalTime;"},{"lineNumber":7,"author":{"gitId":"mesyeux"},"content":"import java.time.format.DateTimeFormatter;"},{"lineNumber":8,"author":{"gitId":"mesyeux"},"content":"import java.util.Scanner;"},{"lineNumber":9,"author":{"gitId":"mesyeux"},"content":""},{"lineNumber":10,"author":{"gitId":"mesyeux"},"content":"/**"},{"lineNumber":11,"author":{"gitId":"mesyeux"},"content":" * A class that is responsible for the interactions with a text file (i.e"},{"lineNumber":12,"author":{"gitId":"mesyeux"},"content":" * writing to the file and reading from the file)"},{"lineNumber":13,"author":{"gitId":"mesyeux"},"content":" */"},{"lineNumber":14,"author":{"gitId":"mesyeux"},"content":""},{"lineNumber":15,"author":{"gitId":"mesyeux"},"content":"public class FileHandler {"},{"lineNumber":16,"author":{"gitId":"mesyeux"},"content":""},{"lineNumber":17,"author":{"gitId":"mesyeux"},"content":"    public FileHandler() { }"},{"lineNumber":18,"author":{"gitId":"mesyeux"},"content":""},{"lineNumber":19,"author":{"gitId":"mesyeux"},"content":"    /**"},{"lineNumber":20,"author":{"gitId":"mesyeux"},"content":"     * A method that reads a command containing a task and stores it in a task list"},{"lineNumber":21,"author":{"gitId":"mesyeux"},"content":"     * @param command a \u003ccode\u003eString\u003c/code\u003e specifying a task to be stored"},{"lineNumber":22,"author":{"gitId":"mesyeux"},"content":"     * @param tasks a \u003ccode\u003eTaskList\u003c/code\u003e"},{"lineNumber":23,"author":{"gitId":"mesyeux"},"content":"     * @return a \u003ccode\u003eTaskList\u003c/code\u003e with the new task added"},{"lineNumber":24,"author":{"gitId":"mesyeux"},"content":"     * @throws DukeException if the command is not \"T\" (for ToDo),"},{"lineNumber":25,"author":{"gitId":"mesyeux"},"content":"     * \"D\" (for Deadline) or \"E\" (for Event)"},{"lineNumber":26,"author":{"gitId":"mesyeux"},"content":"     */"},{"lineNumber":27,"author":{"gitId":"mesyeux"},"content":"    public TaskList handleFileCommand(String command, TaskList tasks) throws DukeException { //T # 1 # read book # June 6th"},{"lineNumber":28,"author":{"gitId":"mesyeux"},"content":"        String[] inputs \u003d command.split(\" # \");"},{"lineNumber":29,"author":{"gitId":"mesyeux"},"content":"        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"HHmm\");"},{"lineNumber":30,"author":{"gitId":"mesyeux"},"content":"        String action \u003d inputs[0];"},{"lineNumber":31,"author":{"gitId":"mesyeux"},"content":"        if (action.equals(\"T\")) {"},{"lineNumber":32,"author":{"gitId":"mesyeux"},"content":"            ToDo newTask \u003d new ToDo(inputs[2]);"},{"lineNumber":33,"author":{"gitId":"mesyeux"},"content":"            if (Integer.parseInt(inputs[1]) \u003d\u003d 1) {"},{"lineNumber":34,"author":{"gitId":"mesyeux"},"content":"                newTask.markAsDone();"},{"lineNumber":35,"author":{"gitId":"mesyeux"},"content":"            }"},{"lineNumber":36,"author":{"gitId":"mesyeux"},"content":"            tasks \u003d tasks.addByTask(newTask);"},{"lineNumber":37,"author":{"gitId":"mesyeux"},"content":"        } else if (action.equals(\"D\")) {"},{"lineNumber":38,"author":{"gitId":"mesyeux"},"content":"            String dateAndTime \u003d inputs[3];"},{"lineNumber":39,"author":{"gitId":"mesyeux"},"content":"            String date \u003d dateAndTime.split(\" \")[0];"},{"lineNumber":40,"author":{"gitId":"mesyeux"},"content":"            String time \u003d dateAndTime.split(\" \")[1];"},{"lineNumber":41,"author":{"gitId":"mesyeux"},"content":"            Deadline newDeadline \u003d new Deadline(inputs[2], LocalDate.parse(date),"},{"lineNumber":42,"author":{"gitId":"mesyeux"},"content":"                    LocalTime.parse(time, formatter));"},{"lineNumber":43,"author":{"gitId":"mesyeux"},"content":"            if (Integer.parseInt(inputs[1]) \u003d\u003d 1) {"},{"lineNumber":44,"author":{"gitId":"mesyeux"},"content":"                newDeadline.markAsDone();"},{"lineNumber":45,"author":{"gitId":"mesyeux"},"content":"            }"},{"lineNumber":46,"author":{"gitId":"mesyeux"},"content":"            tasks \u003d tasks.addByTask(newDeadline);"},{"lineNumber":47,"author":{"gitId":"mesyeux"},"content":"        } else if (action.equals(\"E\")) {"},{"lineNumber":48,"author":{"gitId":"mesyeux"},"content":"            String dateAndTime \u003d inputs[3];"},{"lineNumber":49,"author":{"gitId":"mesyeux"},"content":"            String date \u003d dateAndTime.split(\" \")[0];"},{"lineNumber":50,"author":{"gitId":"mesyeux"},"content":"            String startTime \u003d dateAndTime"},{"lineNumber":51,"author":{"gitId":"mesyeux"},"content":"                                    .split(\" \")[1]"},{"lineNumber":52,"author":{"gitId":"mesyeux"},"content":"                                            .split(\"-\")[0];"},{"lineNumber":53,"author":{"gitId":"mesyeux"},"content":"            String endTime \u003d dateAndTime"},{"lineNumber":54,"author":{"gitId":"mesyeux"},"content":"                                    .split(\" \")[1]"},{"lineNumber":55,"author":{"gitId":"mesyeux"},"content":"                                            .split(\"-\")[1];"},{"lineNumber":56,"author":{"gitId":"mesyeux"},"content":"            Event newEvent \u003d new Event(inputs[2], LocalDate.parse(date),"},{"lineNumber":57,"author":{"gitId":"mesyeux"},"content":"                    LocalTime.parse(startTime, formatter),"},{"lineNumber":58,"author":{"gitId":"mesyeux"},"content":"                            LocalTime.parse(endTime, formatter));"},{"lineNumber":59,"author":{"gitId":"mesyeux"},"content":""},{"lineNumber":60,"author":{"gitId":"mesyeux"},"content":"            if (Integer.parseInt(inputs[1]) \u003d\u003d 1) {"},{"lineNumber":61,"author":{"gitId":"mesyeux"},"content":"                newEvent.markAsDone();"},{"lineNumber":62,"author":{"gitId":"mesyeux"},"content":"            }"},{"lineNumber":63,"author":{"gitId":"mesyeux"},"content":"            tasks \u003d tasks.addByTask(newEvent);"},{"lineNumber":64,"author":{"gitId":"mesyeux"},"content":"        } else {"},{"lineNumber":65,"author":{"gitId":"mesyeux"},"content":"            throw new DukeException(\"Sorry! No such command is allowed.\");"},{"lineNumber":66,"author":{"gitId":"mesyeux"},"content":"        }"},{"lineNumber":67,"author":{"gitId":"mesyeux"},"content":"        return tasks;"},{"lineNumber":68,"author":{"gitId":"mesyeux"},"content":"    }"},{"lineNumber":69,"author":{"gitId":"mesyeux"},"content":""},{"lineNumber":70,"author":{"gitId":"mesyeux"},"content":"    /**"},{"lineNumber":71,"author":{"gitId":"mesyeux"},"content":"     * A method that reads from a text file and stores all the tasks specified within"},{"lineNumber":72,"author":{"gitId":"mesyeux"},"content":"     * into a task list"},{"lineNumber":73,"author":{"gitId":"mesyeux"},"content":"     * @param tasks a \u003ccode\u003eTaskList\u003c/code\u003e to store the tasks into"},{"lineNumber":74,"author":{"gitId":"mesyeux"},"content":"     * @return a \u003ccode\u003eTaskList\u003c/code\u003e containing all the new tasks"},{"lineNumber":75,"author":{"gitId":"mesyeux"},"content":"     * read from the file"},{"lineNumber":76,"author":{"gitId":"mesyeux"},"content":"     * @throws IOException"},{"lineNumber":77,"author":{"gitId":"mesyeux"},"content":"     * @throws DukeException"},{"lineNumber":78,"author":{"gitId":"mesyeux"},"content":"     */"},{"lineNumber":79,"author":{"gitId":"mesyeux"},"content":""},{"lineNumber":80,"author":{"gitId":"mesyeux"},"content":"    public TaskList readFromFile(TaskList tasks) throws IOException, DukeException {"},{"lineNumber":81,"author":{"gitId":"mesyeux"},"content":"        File directory \u003d new File(\"data\");"},{"lineNumber":82,"author":{"gitId":"mesyeux"},"content":"        if (!directory.exists()) { //creating directory if it doesn\u0027t exist"},{"lineNumber":83,"author":{"gitId":"mesyeux"},"content":"            directory.mkdir();"},{"lineNumber":84,"author":{"gitId":"mesyeux"},"content":"        }"},{"lineNumber":85,"author":{"gitId":"mesyeux"},"content":"        File f \u003d new File(\"data/duke.txt\");"},{"lineNumber":86,"author":{"gitId":"mesyeux"},"content":"        if (!f.exists()) {"},{"lineNumber":87,"author":{"gitId":"mesyeux"},"content":"            f.createNewFile();"},{"lineNumber":88,"author":{"gitId":"mesyeux"},"content":"        }"},{"lineNumber":89,"author":{"gitId":"mesyeux"},"content":"        Scanner scf \u003d new Scanner(f);"},{"lineNumber":90,"author":{"gitId":"mesyeux"},"content":"        while (scf.hasNext()) {"},{"lineNumber":91,"author":{"gitId":"mesyeux"},"content":"            try {"},{"lineNumber":92,"author":{"gitId":"mesyeux"},"content":"                String nextLine \u003d scf.nextLine();"},{"lineNumber":93,"author":{"gitId":"mesyeux"},"content":"                tasks \u003d handleFileCommand(nextLine, tasks); //input format: deadline 0 return book /by June 6th"},{"lineNumber":94,"author":{"gitId":"mesyeux"},"content":"            } catch (DukeException ex) {"},{"lineNumber":95,"author":{"gitId":"mesyeux"},"content":"                System.out.println(ex);"},{"lineNumber":96,"author":{"gitId":"mesyeux"},"content":"            }"},{"lineNumber":97,"author":{"gitId":"mesyeux"},"content":"        }"},{"lineNumber":98,"author":{"gitId":"mesyeux"},"content":"        return tasks;"},{"lineNumber":99,"author":{"gitId":"mesyeux"},"content":"    }"},{"lineNumber":100,"author":{"gitId":"mesyeux"},"content":""},{"lineNumber":101,"author":{"gitId":"mesyeux"},"content":"    /**"},{"lineNumber":102,"author":{"gitId":"mesyeux"},"content":"     * A method to write all the tasks contained within the task list into a text file"},{"lineNumber":103,"author":{"gitId":"mesyeux"},"content":"     * @param list the \u003ccode\u003eTaskList\u003c/code\u003e that contains the tasks to be written"},{"lineNumber":104,"author":{"gitId":"mesyeux"},"content":"     *             into the text file"},{"lineNumber":105,"author":{"gitId":"mesyeux"},"content":"     * @throws IOException"},{"lineNumber":106,"author":{"gitId":"mesyeux"},"content":"     */"},{"lineNumber":107,"author":{"gitId":"mesyeux"},"content":""},{"lineNumber":108,"author":{"gitId":"mesyeux"},"content":"    public void writeToFile(TaskList list) throws IOException {"},{"lineNumber":109,"author":{"gitId":"mesyeux"},"content":"        //before writing to it, clear file to make sure it is empty and no content is leftover from last run"},{"lineNumber":110,"author":{"gitId":"mesyeux"},"content":"        FileWriter fw \u003d new FileWriter(\"data/duke.txt\");"},{"lineNumber":111,"author":{"gitId":"mesyeux"},"content":"        PrintWriter pw \u003d new PrintWriter(\"data/duke.txt\");"},{"lineNumber":112,"author":{"gitId":"mesyeux"},"content":"        pw.print(\"\");"},{"lineNumber":113,"author":{"gitId":"mesyeux"},"content":"        pw.close();"},{"lineNumber":114,"author":{"gitId":"mesyeux"},"content":"        String textToAdd \u003d \"\";"},{"lineNumber":115,"author":{"gitId":"mesyeux"},"content":"        for (Task t : list.getList()) {"},{"lineNumber":116,"author":{"gitId":"mesyeux"},"content":"            textToAdd \u003d textToAdd + t.generateText() + \"\\n\";"},{"lineNumber":117,"author":{"gitId":"mesyeux"},"content":"        }"},{"lineNumber":118,"author":{"gitId":"mesyeux"},"content":"        fw.write(textToAdd);"},{"lineNumber":119,"author":{"gitId":"mesyeux"},"content":"        fw.close();"},{"lineNumber":120,"author":{"gitId":"mesyeux"},"content":"    }"},{"lineNumber":121,"author":{"gitId":"mesyeux"},"content":""},{"lineNumber":122,"author":{"gitId":"mesyeux"},"content":""},{"lineNumber":123,"author":{"gitId":"mesyeux"},"content":"}"}],"authorContributionMap":{"mesyeux":123}},{"path":"src/main/java/FindCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"mesyeux"},"content":"import java.util.List;"},{"lineNumber":2,"author":{"gitId":"mesyeux"},"content":""},{"lineNumber":3,"author":{"gitId":"mesyeux"},"content":"public class FindCommand extends Command {"},{"lineNumber":4,"author":{"gitId":"mesyeux"},"content":"    public FindCommand(String fullCommand, String action) {"},{"lineNumber":5,"author":{"gitId":"mesyeux"},"content":"        super(fullCommand, action);"},{"lineNumber":6,"author":{"gitId":"mesyeux"},"content":"    }"},{"lineNumber":7,"author":{"gitId":"mesyeux"},"content":""},{"lineNumber":8,"author":{"gitId":"mesyeux"},"content":"    @Override"},{"lineNumber":9,"author":{"gitId":"mesyeux"},"content":"    public void execute(TaskList tasks) throws DukeException {"},{"lineNumber":10,"author":{"gitId":"mesyeux"},"content":"        Ui.printLine();"},{"lineNumber":11,"author":{"gitId":"mesyeux"},"content":"        String[] inputs \u003d this.fullCommand.split(\" \");"},{"lineNumber":12,"author":{"gitId":"mesyeux"},"content":"        if (inputs.length \u003d\u003d 1) {"},{"lineNumber":13,"author":{"gitId":"mesyeux"},"content":"            throw new DukeException(\"Please give me a keyword to search for!\");"},{"lineNumber":14,"author":{"gitId":"mesyeux"},"content":"        } else if (inputs.length \u003e 2) {"},{"lineNumber":15,"author":{"gitId":"mesyeux"},"content":"            throw new DukeException(\"Sorry! I can\u0027t search for more than one keyword.\");"},{"lineNumber":16,"author":{"gitId":"mesyeux"},"content":"        } else { }"},{"lineNumber":17,"author":{"gitId":"mesyeux"},"content":"        Ui.print(Aligner.align(\"Here are the matching tasks in your list:\"));"},{"lineNumber":18,"author":{"gitId":"mesyeux"},"content":"        String keyword \u003d inputs[1];"},{"lineNumber":19,"author":{"gitId":"mesyeux"},"content":"        List\u003cTask\u003e toPrint \u003d tasks.findKeyword(keyword);"},{"lineNumber":20,"author":{"gitId":"mesyeux"},"content":"        for (int i \u003d 1; i \u003c toPrint.size() + 1; i++) {"},{"lineNumber":21,"author":{"gitId":"mesyeux"},"content":"            Ui.print(Aligner.align(i + \".\" + toPrint.get(i - 1).toString()));"},{"lineNumber":22,"author":{"gitId":"mesyeux"},"content":"        }"},{"lineNumber":23,"author":{"gitId":"mesyeux"},"content":"        Ui.printLine();"},{"lineNumber":24,"author":{"gitId":"mesyeux"},"content":"    }"},{"lineNumber":25,"author":{"gitId":"mesyeux"},"content":"}"}],"authorContributionMap":{"mesyeux":25}},{"path":"src/main/java/ListCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"mesyeux"},"content":"/**"},{"lineNumber":2,"author":{"gitId":"mesyeux"},"content":" * Represents a command to list out all the lists"},{"lineNumber":3,"author":{"gitId":"mesyeux"},"content":" * within the task list"},{"lineNumber":4,"author":{"gitId":"mesyeux"},"content":" */"},{"lineNumber":5,"author":{"gitId":"mesyeux"},"content":""},{"lineNumber":6,"author":{"gitId":"mesyeux"},"content":"public class ListCommand extends Command {"},{"lineNumber":7,"author":{"gitId":"mesyeux"},"content":""},{"lineNumber":8,"author":{"gitId":"mesyeux"},"content":"    /**"},{"lineNumber":9,"author":{"gitId":"mesyeux"},"content":"     * Constructor takes in a \u003ccode\u003efullCommand\u003c/code\u003e, the full user input"},{"lineNumber":10,"author":{"gitId":"mesyeux"},"content":"     * consisting of the desired command, and a \u003ccode\u003eaction\u003c/code\u003e which"},{"lineNumber":11,"author":{"gitId":"mesyeux"},"content":"     * in this case should specify \"list\""},{"lineNumber":12,"author":{"gitId":"mesyeux"},"content":"     * @param fullCommand the full user input"},{"lineNumber":13,"author":{"gitId":"mesyeux"},"content":"     * @param action should be \"list\""},{"lineNumber":14,"author":{"gitId":"mesyeux"},"content":"     */"},{"lineNumber":15,"author":{"gitId":"mesyeux"},"content":"    public ListCommand(String fullCommand, String action) {"},{"lineNumber":16,"author":{"gitId":"mesyeux"},"content":"        super(fullCommand, action);"},{"lineNumber":17,"author":{"gitId":"mesyeux"},"content":"    }"},{"lineNumber":18,"author":{"gitId":"mesyeux"},"content":""},{"lineNumber":19,"author":{"gitId":"mesyeux"},"content":"    /**"},{"lineNumber":20,"author":{"gitId":"mesyeux"},"content":"     * Prints out all the tasks in the task list"},{"lineNumber":21,"author":{"gitId":"mesyeux"},"content":"     * @param tasks the task list containing all the tasks"},{"lineNumber":22,"author":{"gitId":"mesyeux"},"content":"     * @throws DukeException"},{"lineNumber":23,"author":{"gitId":"mesyeux"},"content":"     */"},{"lineNumber":24,"author":{"gitId":"mesyeux"},"content":"    @Override"},{"lineNumber":25,"author":{"gitId":"mesyeux"},"content":"    public void execute(TaskList tasks) throws DukeException {"},{"lineNumber":26,"author":{"gitId":"mesyeux"},"content":"        Ui.printLine();"},{"lineNumber":27,"author":{"gitId":"mesyeux"},"content":"        String[] inputs \u003d this.fullCommand.split(\" \");"},{"lineNumber":28,"author":{"gitId":"mesyeux"},"content":"        if (inputs.length \u003d\u003d 0) {"},{"lineNumber":29,"author":{"gitId":"mesyeux"},"content":"            throw new DukeException(\"OOPS! Please enter a command or say bye so I can go back to sleep!\");"},{"lineNumber":30,"author":{"gitId":"mesyeux"},"content":"        }"},{"lineNumber":31,"author":{"gitId":"mesyeux"},"content":"        Ui.print("},{"lineNumber":32,"author":{"gitId":"mesyeux"},"content":"                Aligner.align(\"Here are the tasks in your list:\"));"},{"lineNumber":33,"author":{"gitId":"mesyeux"},"content":"        tasks.listing();"},{"lineNumber":34,"author":{"gitId":"mesyeux"},"content":"        Ui.printLine();"},{"lineNumber":35,"author":{"gitId":"mesyeux"},"content":"    }"},{"lineNumber":36,"author":{"gitId":"mesyeux"},"content":"}"}],"authorContributionMap":{"mesyeux":36}},{"path":"src/main/java/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"mesyeux"},"content":"/**"},{"lineNumber":2,"author":{"gitId":"mesyeux"},"content":" * A class that deals with making sense of the user command"},{"lineNumber":3,"author":{"gitId":"mesyeux"},"content":" */"},{"lineNumber":4,"author":{"gitId":"mesyeux"},"content":""},{"lineNumber":5,"author":{"gitId":"mesyeux"},"content":"public class Parser {"},{"lineNumber":6,"author":{"gitId":"mesyeux"},"content":""},{"lineNumber":7,"author":{"gitId":"mesyeux"},"content":"    /**"},{"lineNumber":8,"author":{"gitId":"mesyeux"},"content":"     * A static method that parses the user input in the form of a \u003ccode\u003eString\u003c/code\u003e"},{"lineNumber":9,"author":{"gitId":"mesyeux"},"content":"     * to generate the corresponding \u003ccode\u003eCommand\u003c/code\u003e"},{"lineNumber":10,"author":{"gitId":"mesyeux"},"content":"     * @param userInput the user input in the form of a \u003ccode\u003eString\u003c/code\u003e"},{"lineNumber":11,"author":{"gitId":"mesyeux"},"content":"     * @return a specific type of \u003ccode\u003eCommand\u003c/code\u003e"},{"lineNumber":12,"author":{"gitId":"mesyeux"},"content":"     * @throws DukeException"},{"lineNumber":13,"author":{"gitId":"mesyeux"},"content":"     */"},{"lineNumber":14,"author":{"gitId":"mesyeux"},"content":"    public static Command parse(String userInput) throws DukeException {"},{"lineNumber":15,"author":{"gitId":"mesyeux"},"content":"        String[] inputs \u003d userInput.split(\" \");"},{"lineNumber":16,"author":{"gitId":"mesyeux"},"content":"        if (inputs.length \u003d\u003d 0) {"},{"lineNumber":17,"author":{"gitId":"mesyeux"},"content":"            throw new DukeException(\"OOPS! Please enter a command or say bye so I can go back to sleep!\");"},{"lineNumber":18,"author":{"gitId":"mesyeux"},"content":"        }"},{"lineNumber":19,"author":{"gitId":"mesyeux"},"content":"        String action \u003d inputs[0];"},{"lineNumber":20,"author":{"gitId":"mesyeux"},"content":"        if (action.equals(\"list\")) {"},{"lineNumber":21,"author":{"gitId":"mesyeux"},"content":"            return new ListCommand(userInput, \"list\");"},{"lineNumber":22,"author":{"gitId":"mesyeux"},"content":"        } else if (action.equals(\"done\")) {"},{"lineNumber":23,"author":{"gitId":"mesyeux"},"content":"            return new DoneCommand(userInput, \"done\");"},{"lineNumber":24,"author":{"gitId":"mesyeux"},"content":"        } else if (action.equals(\"todo\")) {"},{"lineNumber":25,"author":{"gitId":"mesyeux"},"content":"            return new AddCommand(userInput, \"todo\");"},{"lineNumber":26,"author":{"gitId":"mesyeux"},"content":"        } else if (action.equals(\"deadline\")) {"},{"lineNumber":27,"author":{"gitId":"mesyeux"},"content":"            return new AddCommand(userInput, \"deadline\");"},{"lineNumber":28,"author":{"gitId":"mesyeux"},"content":"        } else if (action.equals(\"event\")) {"},{"lineNumber":29,"author":{"gitId":"mesyeux"},"content":"            return new AddCommand(userInput, \"event\");"},{"lineNumber":30,"author":{"gitId":"mesyeux"},"content":"        } else if (action.equals(\"delete\")) {"},{"lineNumber":31,"author":{"gitId":"mesyeux"},"content":"            return new DeleteCommand(userInput, \"delete\");"},{"lineNumber":32,"author":{"gitId":"mesyeux"},"content":"        } else if (action.equals(\"date\")) {"},{"lineNumber":33,"author":{"gitId":"mesyeux"},"content":"            return new DateCommand(userInput, \"date\");"},{"lineNumber":34,"author":{"gitId":"mesyeux"},"content":"        } else if (action.equals(\"find\")) {"},{"lineNumber":35,"author":{"gitId":"mesyeux"},"content":"            return new FindCommand(userInput, \"find\");"},{"lineNumber":36,"author":{"gitId":"mesyeux"},"content":"        } else {"},{"lineNumber":37,"author":{"gitId":"mesyeux"},"content":"            throw new DukeException(\"OOPS! Sorry, I have no idea what that means :(\");"},{"lineNumber":38,"author":{"gitId":"mesyeux"},"content":"        }"},{"lineNumber":39,"author":{"gitId":"mesyeux"},"content":"    }"},{"lineNumber":40,"author":{"gitId":"mesyeux"},"content":"}"}],"authorContributionMap":{"mesyeux":40}},{"path":"src/main/java/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"mesyeux"},"content":"import java.time.LocalDate;"},{"lineNumber":2,"author":{"gitId":"mesyeux"},"content":""},{"lineNumber":3,"author":{"gitId":"mesyeux"},"content":"public class Task {"},{"lineNumber":4,"author":{"gitId":"mesyeux"},"content":"    protected final String description;"},{"lineNumber":5,"author":{"gitId":"mesyeux"},"content":"    protected boolean isDone;"},{"lineNumber":6,"author":{"gitId":"mesyeux"},"content":""},{"lineNumber":7,"author":{"gitId":"mesyeux"},"content":"    Task(String description) {"},{"lineNumber":8,"author":{"gitId":"mesyeux"},"content":"        this.description \u003d description;"},{"lineNumber":9,"author":{"gitId":"mesyeux"},"content":"        this.isDone \u003d false;"},{"lineNumber":10,"author":{"gitId":"mesyeux"},"content":"    }"},{"lineNumber":11,"author":{"gitId":"mesyeux"},"content":""},{"lineNumber":12,"author":{"gitId":"mesyeux"},"content":"    public String generateText() { return this.description; }"},{"lineNumber":13,"author":{"gitId":"mesyeux"},"content":""},{"lineNumber":14,"author":{"gitId":"mesyeux"},"content":"    public LocalDate getDate() {"},{"lineNumber":15,"author":{"gitId":"mesyeux"},"content":"        return null;"},{"lineNumber":16,"author":{"gitId":"mesyeux"},"content":"    }"},{"lineNumber":17,"author":{"gitId":"mesyeux"},"content":""},{"lineNumber":18,"author":{"gitId":"mesyeux"},"content":"    public void markAsDone() {"},{"lineNumber":19,"author":{"gitId":"mesyeux"},"content":"        this.isDone \u003d true;"},{"lineNumber":20,"author":{"gitId":"mesyeux"},"content":"    }"},{"lineNumber":21,"author":{"gitId":"mesyeux"},"content":""},{"lineNumber":22,"author":{"gitId":"mesyeux"},"content":"    public String getDescription() {"},{"lineNumber":23,"author":{"gitId":"mesyeux"},"content":"        return this.description;"},{"lineNumber":24,"author":{"gitId":"mesyeux"},"content":"    }"},{"lineNumber":25,"author":{"gitId":"mesyeux"},"content":""},{"lineNumber":26,"author":{"gitId":"mesyeux"},"content":"    @Override"},{"lineNumber":27,"author":{"gitId":"mesyeux"},"content":"    public String toString() {"},{"lineNumber":28,"author":{"gitId":"mesyeux"},"content":"        if (isDone) {"},{"lineNumber":29,"author":{"gitId":"mesyeux"},"content":"            return \"[X] \" + description;"},{"lineNumber":30,"author":{"gitId":"mesyeux"},"content":"        } else {"},{"lineNumber":31,"author":{"gitId":"mesyeux"},"content":"            return \"[ ] \" + description;"},{"lineNumber":32,"author":{"gitId":"mesyeux"},"content":"        }"},{"lineNumber":33,"author":{"gitId":"mesyeux"},"content":"    }"},{"lineNumber":34,"author":{"gitId":"mesyeux"},"content":"}"}],"authorContributionMap":{"mesyeux":34}},{"path":"src/main/java/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"mesyeux"},"content":"import java.time.LocalDate;"},{"lineNumber":2,"author":{"gitId":"mesyeux"},"content":"import java.time.LocalTime;"},{"lineNumber":3,"author":{"gitId":"mesyeux"},"content":"import java.time.format.DateTimeFormatter;"},{"lineNumber":4,"author":{"gitId":"mesyeux"},"content":"import java.util.*;"},{"lineNumber":5,"author":{"gitId":"mesyeux"},"content":""},{"lineNumber":6,"author":{"gitId":"mesyeux"},"content":"public class TaskList {"},{"lineNumber":7,"author":{"gitId":"mesyeux"},"content":"    private List\u003cTask\u003e tasks;"},{"lineNumber":8,"author":{"gitId":"mesyeux"},"content":"    private int size;"},{"lineNumber":9,"author":{"gitId":"mesyeux"},"content":""},{"lineNumber":10,"author":{"gitId":"mesyeux"},"content":"    public TaskList() {"},{"lineNumber":11,"author":{"gitId":"mesyeux"},"content":"        this.tasks \u003d new ArrayList\u003c\u003e();"},{"lineNumber":12,"author":{"gitId":"mesyeux"},"content":"        this.size \u003d 0;"},{"lineNumber":13,"author":{"gitId":"mesyeux"},"content":"    }"},{"lineNumber":14,"author":{"gitId":"mesyeux"},"content":""},{"lineNumber":15,"author":{"gitId":"mesyeux"},"content":"    public TaskList(List\u003cTask\u003e tasks) {"},{"lineNumber":16,"author":{"gitId":"mesyeux"},"content":"        this.tasks \u003d tasks;"},{"lineNumber":17,"author":{"gitId":"mesyeux"},"content":"        this.size \u003d tasks.size();"},{"lineNumber":18,"author":{"gitId":"mesyeux"},"content":"    }"},{"lineNumber":19,"author":{"gitId":"mesyeux"},"content":""},{"lineNumber":20,"author":{"gitId":"mesyeux"},"content":"    public void listing() {"},{"lineNumber":21,"author":{"gitId":"mesyeux"},"content":"        for (int i \u003d 1; i \u003c tasks.size() + 1; i++) {"},{"lineNumber":22,"author":{"gitId":"mesyeux"},"content":"            Ui.print("},{"lineNumber":23,"author":{"gitId":"mesyeux"},"content":"                    Aligner.align(i + \".\" + tasks.get(i - 1).toString()));"},{"lineNumber":24,"author":{"gitId":"mesyeux"},"content":"        }"},{"lineNumber":25,"author":{"gitId":"mesyeux"},"content":"    }"},{"lineNumber":26,"author":{"gitId":"mesyeux"},"content":""},{"lineNumber":27,"author":{"gitId":"mesyeux"},"content":"    public List\u003cTask\u003e getList() {"},{"lineNumber":28,"author":{"gitId":"mesyeux"},"content":"        return this.tasks;"},{"lineNumber":29,"author":{"gitId":"mesyeux"},"content":"    }"},{"lineNumber":30,"author":{"gitId":"mesyeux"},"content":""},{"lineNumber":31,"author":{"gitId":"mesyeux"},"content":"    public String makeDone(int taskNo) {"},{"lineNumber":32,"author":{"gitId":"mesyeux"},"content":"        tasks.get(taskNo).markAsDone();"},{"lineNumber":33,"author":{"gitId":"mesyeux"},"content":"        return tasks.get(taskNo).toString();"},{"lineNumber":34,"author":{"gitId":"mesyeux"},"content":"    }"},{"lineNumber":35,"author":{"gitId":"mesyeux"},"content":""},{"lineNumber":36,"author":{"gitId":"mesyeux"},"content":"    public int size() {"},{"lineNumber":37,"author":{"gitId":"mesyeux"},"content":"        return this.size;"},{"lineNumber":38,"author":{"gitId":"mesyeux"},"content":"    }"},{"lineNumber":39,"author":{"gitId":"mesyeux"},"content":""},{"lineNumber":40,"author":{"gitId":"mesyeux"},"content":"    public String addByCommand(String fullCommand, String action) {"},{"lineNumber":41,"author":{"gitId":"mesyeux"},"content":"        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"HHmm\");"},{"lineNumber":42,"author":{"gitId":"mesyeux"},"content":"        if (action.equals(\"todo\")) {"},{"lineNumber":43,"author":{"gitId":"mesyeux"},"content":"            ToDo newToDo \u003d new ToDo(fullCommand.substring(5));"},{"lineNumber":44,"author":{"gitId":"mesyeux"},"content":"            tasks.add(newToDo);"},{"lineNumber":45,"author":{"gitId":"mesyeux"},"content":"            this.size++;"},{"lineNumber":46,"author":{"gitId":"mesyeux"},"content":"            return newToDo.toString();"},{"lineNumber":47,"author":{"gitId":"mesyeux"},"content":"        } else if (action.equals(\"deadline\")) {"},{"lineNumber":48,"author":{"gitId":"mesyeux"},"content":"            int indexOfDate \u003d fullCommand.indexOf(\"/\");"},{"lineNumber":49,"author":{"gitId":"mesyeux"},"content":"            String dateAndTime \u003d fullCommand.substring(indexOfDate + 4);"},{"lineNumber":50,"author":{"gitId":"mesyeux"},"content":"            String date \u003d dateAndTime.split(\" \")[0];"},{"lineNumber":51,"author":{"gitId":"mesyeux"},"content":"            String time \u003d dateAndTime.split(\" \")[1];"},{"lineNumber":52,"author":{"gitId":"mesyeux"},"content":"            Deadline newDeadline \u003d new Deadline(fullCommand.substring(9, indexOfDate),"},{"lineNumber":53,"author":{"gitId":"mesyeux"},"content":"                    LocalDate.parse(date),"},{"lineNumber":54,"author":{"gitId":"mesyeux"},"content":"                            LocalTime.parse(time, formatter));"},{"lineNumber":55,"author":{"gitId":"mesyeux"},"content":"            tasks.add(newDeadline);"},{"lineNumber":56,"author":{"gitId":"mesyeux"},"content":"            this.size++;"},{"lineNumber":57,"author":{"gitId":"mesyeux"},"content":"            return newDeadline.toString();"},{"lineNumber":58,"author":{"gitId":"mesyeux"},"content":"        } else { //type \u003d\u003d event"},{"lineNumber":59,"author":{"gitId":"mesyeux"},"content":"            int indexOfDate \u003d fullCommand.indexOf(\"/\");"},{"lineNumber":60,"author":{"gitId":"mesyeux"},"content":""},{"lineNumber":61,"author":{"gitId":"mesyeux"},"content":"            String dateAndTime \u003d fullCommand.substring(indexOfDate + 4);"},{"lineNumber":62,"author":{"gitId":"mesyeux"},"content":"            String date \u003d dateAndTime.split(\" \")[0];"},{"lineNumber":63,"author":{"gitId":"mesyeux"},"content":"            String startTime \u003d dateAndTime"},{"lineNumber":64,"author":{"gitId":"mesyeux"},"content":"                                    .split(\" \")[1]"},{"lineNumber":65,"author":{"gitId":"mesyeux"},"content":"                                            .split(\"-\")[0];"},{"lineNumber":66,"author":{"gitId":"mesyeux"},"content":"            String endTime \u003d dateAndTime"},{"lineNumber":67,"author":{"gitId":"mesyeux"},"content":"                                    .split(\" \")[1]"},{"lineNumber":68,"author":{"gitId":"mesyeux"},"content":"                                            .split(\"-\")[1];"},{"lineNumber":69,"author":{"gitId":"mesyeux"},"content":"            Event newEvent \u003d new Event(fullCommand.substring(6, indexOfDate), LocalDate.parse(date),"},{"lineNumber":70,"author":{"gitId":"mesyeux"},"content":"                    LocalTime.parse(startTime, formatter), LocalTime.parse(endTime, formatter));"},{"lineNumber":71,"author":{"gitId":"mesyeux"},"content":"            tasks.add(newEvent);"},{"lineNumber":72,"author":{"gitId":"mesyeux"},"content":"            this.size++;"},{"lineNumber":73,"author":{"gitId":"mesyeux"},"content":"            return newEvent.toString();"},{"lineNumber":74,"author":{"gitId":"mesyeux"},"content":"        }"},{"lineNumber":75,"author":{"gitId":"mesyeux"},"content":"    }"},{"lineNumber":76,"author":{"gitId":"mesyeux"},"content":""},{"lineNumber":77,"author":{"gitId":"mesyeux"},"content":"    public TaskList addByTask(Task newTask) {"},{"lineNumber":78,"author":{"gitId":"mesyeux"},"content":"        this.tasks.add(newTask);"},{"lineNumber":79,"author":{"gitId":"mesyeux"},"content":"        this.size++;"},{"lineNumber":80,"author":{"gitId":"mesyeux"},"content":"        return this;"},{"lineNumber":81,"author":{"gitId":"mesyeux"},"content":"    }"},{"lineNumber":82,"author":{"gitId":"mesyeux"},"content":""},{"lineNumber":83,"author":{"gitId":"mesyeux"},"content":"    public String remove(int taskNo) {"},{"lineNumber":84,"author":{"gitId":"mesyeux"},"content":"        Task removed \u003d tasks.remove(taskNo);"},{"lineNumber":85,"author":{"gitId":"mesyeux"},"content":"        this.size--;"},{"lineNumber":86,"author":{"gitId":"mesyeux"},"content":"        return removed.toString();"},{"lineNumber":87,"author":{"gitId":"mesyeux"},"content":"    }"},{"lineNumber":88,"author":{"gitId":"mesyeux"},"content":""},{"lineNumber":89,"author":{"gitId":"mesyeux"},"content":"    public List\u003cTask\u003e print(LocalDate d) {"},{"lineNumber":90,"author":{"gitId":"mesyeux"},"content":"        List\u003cTask\u003e toPrint \u003d new ArrayList\u003c\u003e();"},{"lineNumber":91,"author":{"gitId":"mesyeux"},"content":"        for (Task t : tasks) {"},{"lineNumber":92,"author":{"gitId":"mesyeux"},"content":"            if (t.getDate() !\u003d null \u0026\u0026 t.getDate().equals(d)) {"},{"lineNumber":93,"author":{"gitId":"mesyeux"},"content":"                toPrint.add(t);"},{"lineNumber":94,"author":{"gitId":"mesyeux"},"content":"            }"},{"lineNumber":95,"author":{"gitId":"mesyeux"},"content":"        }"},{"lineNumber":96,"author":{"gitId":"mesyeux"},"content":"        return toPrint;"},{"lineNumber":97,"author":{"gitId":"mesyeux"},"content":"    }"},{"lineNumber":98,"author":{"gitId":"mesyeux"},"content":""},{"lineNumber":99,"author":{"gitId":"mesyeux"},"content":"    public List\u003cTask\u003e findKeyword(String keyword) {"},{"lineNumber":100,"author":{"gitId":"mesyeux"},"content":"        List\u003cTask\u003e tasksWithKeywords \u003d new ArrayList\u003c\u003e();"},{"lineNumber":101,"author":{"gitId":"mesyeux"},"content":"        for (Task t : tasks) {"},{"lineNumber":102,"author":{"gitId":"mesyeux"},"content":"            String[] wordsOfDescription \u003d t.getDescription().split(\" \");"},{"lineNumber":103,"author":{"gitId":"mesyeux"},"content":"            for (int i \u003d 0; i \u003c wordsOfDescription.length; i++) {"},{"lineNumber":104,"author":{"gitId":"mesyeux"},"content":"                if (wordsOfDescription[i].equals(keyword)) {"},{"lineNumber":105,"author":{"gitId":"mesyeux"},"content":"                    tasksWithKeywords.add(t);"},{"lineNumber":106,"author":{"gitId":"mesyeux"},"content":"                    break;"},{"lineNumber":107,"author":{"gitId":"mesyeux"},"content":"                }"},{"lineNumber":108,"author":{"gitId":"mesyeux"},"content":"            }"},{"lineNumber":109,"author":{"gitId":"mesyeux"},"content":"        }"},{"lineNumber":110,"author":{"gitId":"mesyeux"},"content":"        return tasksWithKeywords;"},{"lineNumber":111,"author":{"gitId":"mesyeux"},"content":"    }"},{"lineNumber":112,"author":{"gitId":"mesyeux"},"content":"}"}],"authorContributionMap":{"mesyeux":112}},{"path":"src/main/java/ToDo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"mesyeux"},"content":"import java.time.LocalDate;"},{"lineNumber":2,"author":{"gitId":"mesyeux"},"content":""},{"lineNumber":3,"author":{"gitId":"mesyeux"},"content":"public class ToDo extends Task {"},{"lineNumber":4,"author":{"gitId":"mesyeux"},"content":"    public ToDo(String description) {"},{"lineNumber":5,"author":{"gitId":"mesyeux"},"content":"        super(description);"},{"lineNumber":6,"author":{"gitId":"mesyeux"},"content":"    }"},{"lineNumber":7,"author":{"gitId":"mesyeux"},"content":""},{"lineNumber":8,"author":{"gitId":"mesyeux"},"content":"    @Override"},{"lineNumber":9,"author":{"gitId":"mesyeux"},"content":""},{"lineNumber":10,"author":{"gitId":"mesyeux"},"content":"    public String generateText() {"},{"lineNumber":11,"author":{"gitId":"mesyeux"},"content":"        return String.format(\"T # %d # %s\","},{"lineNumber":12,"author":{"gitId":"mesyeux"},"content":"                                this.isDone ? 1 : 0,"},{"lineNumber":13,"author":{"gitId":"mesyeux"},"content":"                                        this.description);"},{"lineNumber":14,"author":{"gitId":"mesyeux"},"content":"    }"},{"lineNumber":15,"author":{"gitId":"mesyeux"},"content":""},{"lineNumber":16,"author":{"gitId":"mesyeux"},"content":"    public LocalDate getDate() {"},{"lineNumber":17,"author":{"gitId":"mesyeux"},"content":"        return null;"},{"lineNumber":18,"author":{"gitId":"mesyeux"},"content":"    }"},{"lineNumber":19,"author":{"gitId":"mesyeux"},"content":""},{"lineNumber":20,"author":{"gitId":"mesyeux"},"content":"    @Override"},{"lineNumber":21,"author":{"gitId":"mesyeux"},"content":"    public String toString() {"},{"lineNumber":22,"author":{"gitId":"mesyeux"},"content":"        if (this.isDone) {"},{"lineNumber":23,"author":{"gitId":"mesyeux"},"content":"            return \"[T][X] \" + this.description;"},{"lineNumber":24,"author":{"gitId":"mesyeux"},"content":"        } else {"},{"lineNumber":25,"author":{"gitId":"mesyeux"},"content":"            return \"[T][ ] \" + this.description;"},{"lineNumber":26,"author":{"gitId":"mesyeux"},"content":"        }"},{"lineNumber":27,"author":{"gitId":"mesyeux"},"content":"    }"},{"lineNumber":28,"author":{"gitId":"mesyeux"},"content":"}"}],"authorContributionMap":{"mesyeux":28}},{"path":"src/main/java/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"mesyeux"},"content":"import java.util.Scanner;"},{"lineNumber":2,"author":{"gitId":"mesyeux"},"content":""},{"lineNumber":3,"author":{"gitId":"mesyeux"},"content":"public class Ui {"},{"lineNumber":4,"author":{"gitId":"mesyeux"},"content":"    private static final String LINE \u003d String.format(\"%\" + 5 + \"s\", \" \")"},{"lineNumber":5,"author":{"gitId":"mesyeux"},"content":"            + \"____________________________________________________________________\";"},{"lineNumber":6,"author":{"gitId":"mesyeux"},"content":"    private final Scanner sc \u003d new Scanner(System.in);"},{"lineNumber":7,"author":{"gitId":"mesyeux"},"content":""},{"lineNumber":8,"author":{"gitId":"mesyeux"},"content":"    public Ui() { }"},{"lineNumber":9,"author":{"gitId":"mesyeux"},"content":""},{"lineNumber":10,"author":{"gitId":"mesyeux"},"content":"    public String readCommand() {"},{"lineNumber":11,"author":{"gitId":"mesyeux"},"content":"        return sc.nextLine();"},{"lineNumber":12,"author":{"gitId":"mesyeux"},"content":"    }"},{"lineNumber":13,"author":{"gitId":"mesyeux"},"content":""},{"lineNumber":14,"author":{"gitId":"mesyeux"},"content":"    //user output at start"},{"lineNumber":15,"author":{"gitId":"mesyeux"},"content":"    public void printStart() {"},{"lineNumber":16,"author":{"gitId":"mesyeux"},"content":"        System.out.println(LINE);"},{"lineNumber":17,"author":{"gitId":"mesyeux"},"content":"        String logo \u003d"},{"lineNumber":18,"author":{"gitId":"mesyeux"},"content":"                \"      _ __ ___   ___  _   _ _ __ ___   ___  _   _ \\n\" +"},{"lineNumber":19,"author":{"gitId":"mesyeux"},"content":"                        \"     | \u0027_ ` _ \\\\ / _ \\\\| | | | \u0027_ ` _ \\\\ / _ \\\\| | | |\\n\" +"},{"lineNumber":20,"author":{"gitId":"mesyeux"},"content":"                        \"     | | | | | | (_) | |_| | | | | | | (_) | |_| |\\n\" +"},{"lineNumber":21,"author":{"gitId":"mesyeux"},"content":"                        \"     |_| |_| |_|\\\\___/ \\\\__,_|_| |_| |_|\\\\___/ \\\\__,_|\";"},{"lineNumber":22,"author":{"gitId":"mesyeux"},"content":"        System.out.println(logo + \" is back!\\n     What have you awoken MouMou for?\");"},{"lineNumber":23,"author":{"gitId":"mesyeux"},"content":"        System.out.println(LINE);"},{"lineNumber":24,"author":{"gitId":"mesyeux"},"content":"    }"},{"lineNumber":25,"author":{"gitId":"mesyeux"},"content":""},{"lineNumber":26,"author":{"gitId":"mesyeux"},"content":"    //output at the end"},{"lineNumber":27,"author":{"gitId":"mesyeux"},"content":"    public void printEnd() {"},{"lineNumber":28,"author":{"gitId":"mesyeux"},"content":"        System.out.println(LINE);"},{"lineNumber":29,"author":{"gitId":"mesyeux"},"content":"        System.out.println(Aligner.align(\"Goodnight! MouMou will go back to sleep now.\"));"},{"lineNumber":30,"author":{"gitId":"mesyeux"},"content":"        System.out.println(LINE);"},{"lineNumber":31,"author":{"gitId":"mesyeux"},"content":"    }"},{"lineNumber":32,"author":{"gitId":"mesyeux"},"content":""},{"lineNumber":33,"author":{"gitId":"mesyeux"},"content":"    public static void printLine() {"},{"lineNumber":34,"author":{"gitId":"mesyeux"},"content":"        System.out.println(LINE);"},{"lineNumber":35,"author":{"gitId":"mesyeux"},"content":"    }"},{"lineNumber":36,"author":{"gitId":"mesyeux"},"content":""},{"lineNumber":37,"author":{"gitId":"mesyeux"},"content":"    public static void print(String str) {"},{"lineNumber":38,"author":{"gitId":"mesyeux"},"content":"        System.out.println(str);"},{"lineNumber":39,"author":{"gitId":"mesyeux"},"content":"    }"},{"lineNumber":40,"author":{"gitId":"mesyeux"},"content":""},{"lineNumber":41,"author":{"gitId":"mesyeux"},"content":"    public void showError(String message) {"},{"lineNumber":42,"author":{"gitId":"mesyeux"},"content":"        System.out.println(LINE);"},{"lineNumber":43,"author":{"gitId":"mesyeux"},"content":"        System.out.println(message);"},{"lineNumber":44,"author":{"gitId":"mesyeux"},"content":"        System.out.println(LINE);"},{"lineNumber":45,"author":{"gitId":"mesyeux"},"content":"    }"},{"lineNumber":46,"author":{"gitId":"mesyeux"},"content":"}"}],"authorContributionMap":{"mesyeux":46}},{"path":"text-ui-test/data/duke.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"mesyeux"},"content":"T # 0 # get a goldendoodle "},{"lineNumber":2,"author":{"gitId":"mesyeux"},"content":"E # 0 # ethel\u0027s birthday party  # 2021-01-26 2000-0000"},{"lineNumber":3,"author":{"gitId":"mesyeux"},"content":"T # 0 # get a manicure "}],"authorContributionMap":{"mesyeux":3}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"mesyeux"},"content":"todo get a goldendoodle "},{"lineNumber":2,"author":{"gitId":"mesyeux"},"content":"deadline get present for ethel /by 2021-01-26 1400"},{"lineNumber":3,"author":{"gitId":"mesyeux"},"content":"list"},{"lineNumber":4,"author":{"gitId":"mesyeux"},"content":"event ethel\u0027s birthday party /at 2021-01-26 2000-0000"},{"lineNumber":5,"author":{"gitId":"mesyeux"},"content":"done 2"},{"lineNumber":6,"author":{"gitId":"mesyeux"},"content":"list"},{"lineNumber":7,"author":{"gitId":"mesyeux"},"content":"todo get a manicure "},{"lineNumber":8,"author":{"gitId":"mesyeux"},"content":"date 2021-01-26"},{"lineNumber":9,"author":{"gitId":"mesyeux"},"content":"delete 2"},{"lineNumber":10,"author":{"gitId":"mesyeux"},"content":"list"},{"lineNumber":11,"author":{"gitId":"mesyeux"},"content":"bye"}],"authorContributionMap":{"mesyeux":11}}]
