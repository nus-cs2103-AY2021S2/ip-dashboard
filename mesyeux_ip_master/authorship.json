[{"path":"JUnitTest/AlignerTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"mesyeux"},"content":"import org.junit.jupiter.api.Test;"},{"lineNumber":2,"author":{"gitId":"mesyeux"},"content":""},{"lineNumber":3,"author":{"gitId":"mesyeux"},"content":"import static org.junit.jupiter.api.Assertions.*;"},{"lineNumber":4,"author":{"gitId":"mesyeux"},"content":""},{"lineNumber":5,"author":{"gitId":"mesyeux"},"content":"class AlignerTest {"},{"lineNumber":6,"author":{"gitId":"mesyeux"},"content":""},{"lineNumber":7,"author":{"gitId":"mesyeux"},"content":"    @Test"},{"lineNumber":8,"author":{"gitId":"mesyeux"},"content":"    void align_string_success() {"},{"lineNumber":9,"author":{"gitId":"mesyeux"},"content":"        String s \u003d \"Testing alignment!\";"},{"lineNumber":10,"author":{"gitId":"mesyeux"},"content":"        assertEquals(\"                           Testing alignment!                           \","},{"lineNumber":11,"author":{"gitId":"mesyeux"},"content":"                            Aligner.align(s));"},{"lineNumber":12,"author":{"gitId":"mesyeux"},"content":"    }"},{"lineNumber":13,"author":{"gitId":"mesyeux"},"content":"}"}],"authorContributionMap":{"mesyeux":13}},{"path":"JUnitTest/TaskListTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"mesyeux"},"content":"import org.junit.jupiter.api.Test;"},{"lineNumber":2,"author":{"gitId":"mesyeux"},"content":""},{"lineNumber":3,"author":{"gitId":"mesyeux"},"content":"import java.time.LocalDate;"},{"lineNumber":4,"author":{"gitId":"mesyeux"},"content":"import java.time.LocalTime;"},{"lineNumber":5,"author":{"gitId":"mesyeux"},"content":"import java.time.Month;"},{"lineNumber":6,"author":{"gitId":"mesyeux"},"content":"import java.util.ArrayList;"},{"lineNumber":7,"author":{"gitId":"mesyeux"},"content":"import java.util.List;"},{"lineNumber":8,"author":{"gitId":"mesyeux"},"content":""},{"lineNumber":9,"author":{"gitId":"mesyeux"},"content":"import static org.junit.jupiter.api.Assertions.*;"},{"lineNumber":10,"author":{"gitId":"mesyeux"},"content":""},{"lineNumber":11,"author":{"gitId":"mesyeux"},"content":"class TaskListTest {"},{"lineNumber":12,"author":{"gitId":"mesyeux"},"content":"    List\u003cTask\u003e list \u003d List.of(new ToDo(\"buy a car\"),"},{"lineNumber":13,"author":{"gitId":"mesyeux"},"content":"                            new Deadline(\"finish iP\", LocalDate.of(2021, Month.AUGUST, 8), LocalTime.of(14, 14)),"},{"lineNumber":14,"author":{"gitId":"mesyeux"},"content":"                                new Event(\"casting\", LocalDate.of(2021, Month.JANUARY, 27),"},{"lineNumber":15,"author":{"gitId":"mesyeux"},"content":"                                            LocalTime.of(16, 30), LocalTime.of(17, 0)));"},{"lineNumber":16,"author":{"gitId":"mesyeux"},"content":"    Task event \u003d list.get(2);"},{"lineNumber":17,"author":{"gitId":"mesyeux"},"content":"    TaskList tl \u003d new TaskList(list);"},{"lineNumber":18,"author":{"gitId":"mesyeux"},"content":""},{"lineNumber":19,"author":{"gitId":"mesyeux"},"content":"    @Test"},{"lineNumber":20,"author":{"gitId":"mesyeux"},"content":"    void listing() {"},{"lineNumber":21,"author":{"gitId":"mesyeux"},"content":""},{"lineNumber":22,"author":{"gitId":"mesyeux"},"content":"    }"},{"lineNumber":23,"author":{"gitId":"mesyeux"},"content":""},{"lineNumber":24,"author":{"gitId":"mesyeux"},"content":"    @Test"},{"lineNumber":25,"author":{"gitId":"mesyeux"},"content":"    void getList() {"},{"lineNumber":26,"author":{"gitId":"mesyeux"},"content":"        assertEquals(list, tl.getList());"},{"lineNumber":27,"author":{"gitId":"mesyeux"},"content":"    }"},{"lineNumber":28,"author":{"gitId":"mesyeux"},"content":""},{"lineNumber":29,"author":{"gitId":"mesyeux"},"content":"    @Test"},{"lineNumber":30,"author":{"gitId":"mesyeux"},"content":"    void makeDone() {"},{"lineNumber":31,"author":{"gitId":"mesyeux"},"content":"        Event e \u003d new Event(\"casting\", LocalDate.of(2021, Month.JANUARY, 27),"},{"lineNumber":32,"author":{"gitId":"mesyeux"},"content":"                LocalTime.of(16, 30), LocalTime.of(17, 0));"},{"lineNumber":33,"author":{"gitId":"mesyeux"},"content":"        e.isDone \u003d true;"},{"lineNumber":34,"author":{"gitId":"mesyeux"},"content":"        assertEquals(e.toString(), tl.makeDone(2));"},{"lineNumber":35,"author":{"gitId":"mesyeux"},"content":"    }"},{"lineNumber":36,"author":{"gitId":"mesyeux"},"content":""},{"lineNumber":37,"author":{"gitId":"mesyeux"},"content":"    @Test"},{"lineNumber":38,"author":{"gitId":"mesyeux"},"content":"    void size() {"},{"lineNumber":39,"author":{"gitId":"mesyeux"},"content":"        assertEquals(3, tl.size());"},{"lineNumber":40,"author":{"gitId":"mesyeux"},"content":"    }"},{"lineNumber":41,"author":{"gitId":"mesyeux"},"content":""},{"lineNumber":42,"author":{"gitId":"mesyeux"},"content":"    @Test"},{"lineNumber":43,"author":{"gitId":"mesyeux"},"content":"    void addByTask_todo_success() {"},{"lineNumber":44,"author":{"gitId":"mesyeux"},"content":"    }"},{"lineNumber":45,"author":{"gitId":"mesyeux"},"content":""},{"lineNumber":46,"author":{"gitId":"mesyeux"},"content":"    @Test"},{"lineNumber":47,"author":{"gitId":"mesyeux"},"content":"    void addByCommand_todo_success() {"},{"lineNumber":48,"author":{"gitId":"mesyeux"},"content":"    }"},{"lineNumber":49,"author":{"gitId":"mesyeux"},"content":""},{"lineNumber":50,"author":{"gitId":"mesyeux"},"content":"    @Test"},{"lineNumber":51,"author":{"gitId":"mesyeux"},"content":"    void testAdd() {"},{"lineNumber":52,"author":{"gitId":"mesyeux"},"content":"    }"},{"lineNumber":53,"author":{"gitId":"mesyeux"},"content":""},{"lineNumber":54,"author":{"gitId":"mesyeux"},"content":"    @Test"},{"lineNumber":55,"author":{"gitId":"mesyeux"},"content":"    void remove() {"},{"lineNumber":56,"author":{"gitId":"mesyeux"},"content":"    }"},{"lineNumber":57,"author":{"gitId":"mesyeux"},"content":""},{"lineNumber":58,"author":{"gitId":"mesyeux"},"content":"    @Test"},{"lineNumber":59,"author":{"gitId":"mesyeux"},"content":"    void print() {"},{"lineNumber":60,"author":{"gitId":"mesyeux"},"content":"    }"},{"lineNumber":61,"author":{"gitId":"mesyeux"},"content":"}"}],"authorContributionMap":{"mesyeux":61}},{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"mesyeux"},"content":"/*"},{"lineNumber":2,"author":{"gitId":"mesyeux"},"content":" * This file was generated by the Gradle \u0027init\u0027 task."},{"lineNumber":3,"author":{"gitId":"mesyeux"},"content":" *"},{"lineNumber":4,"author":{"gitId":"mesyeux"},"content":" * This is a general purpose Gradle build."},{"lineNumber":5,"author":{"gitId":"mesyeux"},"content":" * Learn more about Gradle by exploring our samples at https://docs.gradle.org/6.7/samples"},{"lineNumber":6,"author":{"gitId":"mesyeux"},"content":" */"},{"lineNumber":7,"author":{"gitId":"-"},"content":"plugins {"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    id \u0027java\u0027"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    id \u0027application\u0027"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    id \u0027checkstyle\u0027"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027"},{"lineNumber":12,"author":{"gitId":"-"},"content":"}"},{"lineNumber":13,"author":{"gitId":"-"},"content":""},{"lineNumber":14,"author":{"gitId":"-"},"content":"repositories {"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    mavenCentral()"},{"lineNumber":16,"author":{"gitId":"-"},"content":"}"},{"lineNumber":17,"author":{"gitId":"-"},"content":""},{"lineNumber":18,"author":{"gitId":"-"},"content":"dependencies {"},{"lineNumber":19,"author":{"gitId":"mesyeux"},"content":"    String javaFxVersion \u003d \u002711\u0027"},{"lineNumber":20,"author":{"gitId":"mesyeux"},"content":""},{"lineNumber":21,"author":{"gitId":"mesyeux"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027"},{"lineNumber":22,"author":{"gitId":"mesyeux"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"},{"lineNumber":23,"author":{"gitId":"mesyeux"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"},{"lineNumber":24,"author":{"gitId":"mesyeux"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027"},{"lineNumber":25,"author":{"gitId":"mesyeux"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"},{"lineNumber":26,"author":{"gitId":"mesyeux"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"},{"lineNumber":27,"author":{"gitId":"mesyeux"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027"},{"lineNumber":28,"author":{"gitId":"mesyeux"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"},{"lineNumber":29,"author":{"gitId":"mesyeux"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"},{"lineNumber":30,"author":{"gitId":"mesyeux"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027"},{"lineNumber":31,"author":{"gitId":"mesyeux"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"},{"lineNumber":32,"author":{"gitId":"mesyeux"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"},{"lineNumber":33,"author":{"gitId":"mesyeux"},"content":""},{"lineNumber":34,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.5.0\u0027"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.5.0\u0027"},{"lineNumber":36,"author":{"gitId":"-"},"content":"}"},{"lineNumber":37,"author":{"gitId":"-"},"content":""},{"lineNumber":38,"author":{"gitId":"-"},"content":"test {"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    useJUnitPlatform()"},{"lineNumber":40,"author":{"gitId":"-"},"content":""},{"lineNumber":41,"author":{"gitId":"-"},"content":"    testLogging {"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\""},{"lineNumber":43,"author":{"gitId":"-"},"content":""},{"lineNumber":44,"author":{"gitId":"-"},"content":"        showExceptions true"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\""},{"lineNumber":46,"author":{"gitId":"-"},"content":"        showCauses true"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        showStackTraces true"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":50,"author":{"gitId":"-"},"content":"}"},{"lineNumber":51,"author":{"gitId":"-"},"content":""},{"lineNumber":52,"author":{"gitId":"-"},"content":"application {"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    mainClassName \u003d \"seedu.duke.Duke\""},{"lineNumber":54,"author":{"gitId":"-"},"content":"}"},{"lineNumber":55,"author":{"gitId":"-"},"content":""},{"lineNumber":56,"author":{"gitId":"-"},"content":"shadowJar {"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    archiveBaseName \u003d \"duke\""},{"lineNumber":58,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null"},{"lineNumber":59,"author":{"gitId":"-"},"content":"}"},{"lineNumber":60,"author":{"gitId":"-"},"content":""},{"lineNumber":61,"author":{"gitId":"-"},"content":"checkstyle {"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    toolVersion \u003d \u00278.29\u0027"},{"lineNumber":63,"author":{"gitId":"-"},"content":"}"},{"lineNumber":64,"author":{"gitId":"-"},"content":""},{"lineNumber":65,"author":{"gitId":"-"},"content":"run{"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in"},{"lineNumber":67,"author":{"gitId":"-"},"content":"}"},{"lineNumber":68,"author":{"gitId":"mesyeux"},"content":""}],"authorContributionMap":{"mesyeux":22,"-":46}},{"path":"config/travis/check-eof-newline.sh","fileType":"sh","lines":[{"lineNumber":1,"author":{"gitId":"mesyeux"},"content":"#!/bin/sh"},{"lineNumber":2,"author":{"gitId":"mesyeux"},"content":"# Checks that all text files end with a newline."},{"lineNumber":3,"author":{"gitId":"mesyeux"},"content":""},{"lineNumber":4,"author":{"gitId":"mesyeux"},"content":"ret\u003d0"},{"lineNumber":5,"author":{"gitId":"mesyeux"},"content":""},{"lineNumber":6,"author":{"gitId":"mesyeux"},"content":"# Preserve filename with spaces by only splitting on newlines."},{"lineNumber":7,"author":{"gitId":"mesyeux"},"content":"IFS\u003d\u0027"},{"lineNumber":8,"author":{"gitId":"mesyeux"},"content":"\u0027"},{"lineNumber":9,"author":{"gitId":"mesyeux"},"content":""},{"lineNumber":10,"author":{"gitId":"mesyeux"},"content":"for filename in $(git grep --cached -I -l -e \u0027\u0027 -- \u0027:/\u0027); do"},{"lineNumber":11,"author":{"gitId":"mesyeux"},"content":"    if [ \"$(tail -c 1 \"./$filename\")\" !\u003d \u0027\u0027 ]; then"},{"lineNumber":12,"author":{"gitId":"mesyeux"},"content":"        line\u003d\"$(wc -l \"./$filename\" | cut -d\u0027 \u0027 -f1)\""},{"lineNumber":13,"author":{"gitId":"mesyeux"},"content":"        echo \"ERROR:$filename:$line: no newline at EOF.\""},{"lineNumber":14,"author":{"gitId":"mesyeux"},"content":"        ret\u003d1"},{"lineNumber":15,"author":{"gitId":"mesyeux"},"content":"    fi"},{"lineNumber":16,"author":{"gitId":"mesyeux"},"content":"done"},{"lineNumber":17,"author":{"gitId":"mesyeux"},"content":""},{"lineNumber":18,"author":{"gitId":"mesyeux"},"content":"exit $ret"}],"authorContributionMap":{"mesyeux":18}},{"path":"config/travis/check-line-endings.sh","fileType":"sh","lines":[{"lineNumber":1,"author":{"gitId":"mesyeux"},"content":"#!/bin/sh"},{"lineNumber":2,"author":{"gitId":"mesyeux"},"content":"# Checks for prohibited line endings."},{"lineNumber":3,"author":{"gitId":"mesyeux"},"content":"# Prohibited line endings: \\r\\n"},{"lineNumber":4,"author":{"gitId":"mesyeux"},"content":""},{"lineNumber":5,"author":{"gitId":"mesyeux"},"content":"git grep --cached -I -n --no-color -P \u0027\\r$\u0027 -- \u0027:/\u0027 |"},{"lineNumber":6,"author":{"gitId":"mesyeux"},"content":"awk \u0027"},{"lineNumber":7,"author":{"gitId":"mesyeux"},"content":"    BEGIN {"},{"lineNumber":8,"author":{"gitId":"mesyeux"},"content":"        FS \u003d \":\""},{"lineNumber":9,"author":{"gitId":"mesyeux"},"content":"        OFS \u003d \":\""},{"lineNumber":10,"author":{"gitId":"mesyeux"},"content":"        ret \u003d 0"},{"lineNumber":11,"author":{"gitId":"mesyeux"},"content":"    }"},{"lineNumber":12,"author":{"gitId":"mesyeux"},"content":"    {"},{"lineNumber":13,"author":{"gitId":"mesyeux"},"content":"        ret \u003d 1"},{"lineNumber":14,"author":{"gitId":"mesyeux"},"content":"        print \"ERROR\", $1, $2, \" prohibited \\\\r\\\\n line ending, use \\\\n instead.\""},{"lineNumber":15,"author":{"gitId":"mesyeux"},"content":"    }"},{"lineNumber":16,"author":{"gitId":"mesyeux"},"content":"    END {"},{"lineNumber":17,"author":{"gitId":"mesyeux"},"content":"        exit ret"},{"lineNumber":18,"author":{"gitId":"mesyeux"},"content":"    }"},{"lineNumber":19,"author":{"gitId":"mesyeux"},"content":"\u0027"}],"authorContributionMap":{"mesyeux":19}},{"path":"config/travis/check-trailing-whitespace.sh","fileType":"sh","lines":[{"lineNumber":1,"author":{"gitId":"mesyeux"},"content":"#!/bin/sh"},{"lineNumber":2,"author":{"gitId":"mesyeux"},"content":"# Checks for trailing whitespace"},{"lineNumber":3,"author":{"gitId":"mesyeux"},"content":""},{"lineNumber":4,"author":{"gitId":"mesyeux"},"content":"git grep --cached -I -n --no-color -P \u0027[ \\t]+$\u0027 -- \u0027:/\u0027 |"},{"lineNumber":5,"author":{"gitId":"mesyeux"},"content":"awk \u0027"},{"lineNumber":6,"author":{"gitId":"mesyeux"},"content":"    BEGIN {"},{"lineNumber":7,"author":{"gitId":"mesyeux"},"content":"        FS \u003d \":\""},{"lineNumber":8,"author":{"gitId":"mesyeux"},"content":"        OFS \u003d \":\""},{"lineNumber":9,"author":{"gitId":"mesyeux"},"content":"        ret \u003d 0"},{"lineNumber":10,"author":{"gitId":"mesyeux"},"content":"    }"},{"lineNumber":11,"author":{"gitId":"mesyeux"},"content":"    {"},{"lineNumber":12,"author":{"gitId":"mesyeux"},"content":"        # Only warn for markdown files (*.md) to accomodate text editors"},{"lineNumber":13,"author":{"gitId":"mesyeux"},"content":"        # which do not properly handle trailing whitespace."},{"lineNumber":14,"author":{"gitId":"mesyeux"},"content":"        # (e.g. GitHub web editor)"},{"lineNumber":15,"author":{"gitId":"mesyeux"},"content":"        if ($1 ~ /\\.md$/) {"},{"lineNumber":16,"author":{"gitId":"mesyeux"},"content":"            severity \u003d \"WARN\""},{"lineNumber":17,"author":{"gitId":"mesyeux"},"content":"        } else {"},{"lineNumber":18,"author":{"gitId":"mesyeux"},"content":"            severity \u003d \"ERROR\""},{"lineNumber":19,"author":{"gitId":"mesyeux"},"content":"            ret \u003d 1"},{"lineNumber":20,"author":{"gitId":"mesyeux"},"content":"        }"},{"lineNumber":21,"author":{"gitId":"mesyeux"},"content":"        print severity, $1, $2, \" trailing whitespace.\""},{"lineNumber":22,"author":{"gitId":"mesyeux"},"content":"    }"},{"lineNumber":23,"author":{"gitId":"mesyeux"},"content":"    END {"},{"lineNumber":24,"author":{"gitId":"mesyeux"},"content":"        exit ret"},{"lineNumber":25,"author":{"gitId":"mesyeux"},"content":"    }"},{"lineNumber":26,"author":{"gitId":"mesyeux"},"content":"\u0027"}],"authorContributionMap":{"mesyeux":26}},{"path":"config/travis/run-checks.sh","fileType":"sh","lines":[{"lineNumber":1,"author":{"gitId":"mesyeux"},"content":"#!/bin/sh"},{"lineNumber":2,"author":{"gitId":"mesyeux"},"content":"# Runs all check-* scripts, and returns a non-zero exit code if any of them fail."},{"lineNumber":3,"author":{"gitId":"mesyeux"},"content":""},{"lineNumber":4,"author":{"gitId":"mesyeux"},"content":"dir\u003d$(CDPATH\u003d cd -- \"$(dirname -- \"$0\")\" \u0026\u0026 pwd) \u0026\u0026"},{"lineNumber":5,"author":{"gitId":"mesyeux"},"content":"ret\u003d0 \u0026\u0026"},{"lineNumber":6,"author":{"gitId":"mesyeux"},"content":"for checkscript in \"$dir\"/check-*; do"},{"lineNumber":7,"author":{"gitId":"mesyeux"},"content":"    if ! \"$checkscript\"; then"},{"lineNumber":8,"author":{"gitId":"mesyeux"},"content":"        ret\u003d1"},{"lineNumber":9,"author":{"gitId":"mesyeux"},"content":"    fi"},{"lineNumber":10,"author":{"gitId":"mesyeux"},"content":"done"},{"lineNumber":11,"author":{"gitId":"mesyeux"},"content":"exit $ret"}],"authorContributionMap":{"mesyeux":11}},{"path":"gradlew.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@rem"},{"lineNumber":2,"author":{"gitId":"-"},"content":"@rem Copyright 2015 the original author or authors."},{"lineNumber":3,"author":{"gitId":"-"},"content":"@rem"},{"lineNumber":4,"author":{"gitId":"-"},"content":"@rem Licensed under the Apache License, Version 2.0 (the \"License\");"},{"lineNumber":5,"author":{"gitId":"-"},"content":"@rem you may not use this file except in compliance with the License."},{"lineNumber":6,"author":{"gitId":"-"},"content":"@rem You may obtain a copy of the License at"},{"lineNumber":7,"author":{"gitId":"-"},"content":"@rem"},{"lineNumber":8,"author":{"gitId":"-"},"content":"@rem      https://www.apache.org/licenses/LICENSE-2.0"},{"lineNumber":9,"author":{"gitId":"-"},"content":"@rem"},{"lineNumber":10,"author":{"gitId":"-"},"content":"@rem Unless required by applicable law or agreed to in writing, software"},{"lineNumber":11,"author":{"gitId":"-"},"content":"@rem distributed under the License is distributed on an \"AS IS\" BASIS,"},{"lineNumber":12,"author":{"gitId":"-"},"content":"@rem WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied."},{"lineNumber":13,"author":{"gitId":"-"},"content":"@rem See the License for the specific language governing permissions and"},{"lineNumber":14,"author":{"gitId":"-"},"content":"@rem limitations under the License."},{"lineNumber":15,"author":{"gitId":"-"},"content":"@rem"},{"lineNumber":16,"author":{"gitId":"-"},"content":""},{"lineNumber":17,"author":{"gitId":"-"},"content":"@if \"%DEBUG%\" \u003d\u003d \"\" @echo off"},{"lineNumber":18,"author":{"gitId":"-"},"content":"@rem ##########################################################################"},{"lineNumber":19,"author":{"gitId":"-"},"content":"@rem"},{"lineNumber":20,"author":{"gitId":"-"},"content":"@rem  Gradle startup script for Windows"},{"lineNumber":21,"author":{"gitId":"-"},"content":"@rem"},{"lineNumber":22,"author":{"gitId":"-"},"content":"@rem ##########################################################################"},{"lineNumber":23,"author":{"gitId":"-"},"content":""},{"lineNumber":24,"author":{"gitId":"-"},"content":"@rem Set local scope for the variables with windows NT shell"},{"lineNumber":25,"author":{"gitId":"-"},"content":"if \"%OS%\"\u003d\u003d\"Windows_NT\" setlocal"},{"lineNumber":26,"author":{"gitId":"-"},"content":""},{"lineNumber":27,"author":{"gitId":"-"},"content":"set DIRNAME\u003d%~dp0"},{"lineNumber":28,"author":{"gitId":"-"},"content":"if \"%DIRNAME%\" \u003d\u003d \"\" set DIRNAME\u003d."},{"lineNumber":29,"author":{"gitId":"-"},"content":"set APP_BASE_NAME\u003d%~n0"},{"lineNumber":30,"author":{"gitId":"-"},"content":"set APP_HOME\u003d%DIRNAME%"},{"lineNumber":31,"author":{"gitId":"-"},"content":""},{"lineNumber":32,"author":{"gitId":"-"},"content":"@rem Resolve any \".\" and \"..\" in APP_HOME to make it shorter."},{"lineNumber":33,"author":{"gitId":"-"},"content":"for %%i in (\"%APP_HOME%\") do set APP_HOME\u003d%%~fi"},{"lineNumber":34,"author":{"gitId":"-"},"content":""},{"lineNumber":35,"author":{"gitId":"-"},"content":"@rem Add default JVM options here. You can also use JAVA_OPTS and GRADLE_OPTS to pass JVM options to this script."},{"lineNumber":36,"author":{"gitId":"-"},"content":"set DEFAULT_JVM_OPTS\u003d\"-Xmx64m\" \"-Xms64m\""},{"lineNumber":37,"author":{"gitId":"-"},"content":""},{"lineNumber":38,"author":{"gitId":"-"},"content":"@rem Find java.exe"},{"lineNumber":39,"author":{"gitId":"-"},"content":"if defined JAVA_HOME goto findJavaFromJavaHome"},{"lineNumber":40,"author":{"gitId":"-"},"content":""},{"lineNumber":41,"author":{"gitId":"-"},"content":"set JAVA_EXE\u003djava.exe"},{"lineNumber":42,"author":{"gitId":"-"},"content":"%JAVA_EXE% -version \u003eNUL 2\u003e\u00261"},{"lineNumber":43,"author":{"gitId":"mesyeux"},"content":"\u003c\u003c\u003c\u003c\u003c\u003c\u003c HEAD"},{"lineNumber":44,"author":{"gitId":"mesyeux"},"content":"\u003c\u003c\u003c\u003c\u003c\u003c\u003c HEAD"},{"lineNumber":45,"author":{"gitId":"-"},"content":"if \"%ERRORLEVEL%\" \u003d\u003d \"0\" goto init"},{"lineNumber":46,"author":{"gitId":"mesyeux"},"content":"\u003d\u003d\u003d\u003d\u003d\u003d\u003d"},{"lineNumber":47,"author":{"gitId":"mesyeux"},"content":"if \"%ERRORLEVEL%\" \u003d\u003d \"0\" goto execute"},{"lineNumber":48,"author":{"gitId":"mesyeux"},"content":"\u003e\u003e\u003e\u003e\u003e\u003e\u003e branch-A-Gradle"},{"lineNumber":49,"author":{"gitId":"mesyeux"},"content":"\u003d\u003d\u003d\u003d\u003d\u003d\u003d"},{"lineNumber":50,"author":{"gitId":"mesyeux"},"content":"if \"%ERRORLEVEL%\" \u003d\u003d \"0\" goto execute"},{"lineNumber":51,"author":{"gitId":"mesyeux"},"content":"\u003e\u003e\u003e\u003e\u003e\u003e\u003e branch-Level10"},{"lineNumber":52,"author":{"gitId":"-"},"content":""},{"lineNumber":53,"author":{"gitId":"-"},"content":"echo."},{"lineNumber":54,"author":{"gitId":"-"},"content":"echo ERROR: JAVA_HOME is not set and no \u0027java\u0027 command could be found in your PATH."},{"lineNumber":55,"author":{"gitId":"-"},"content":"echo."},{"lineNumber":56,"author":{"gitId":"-"},"content":"echo Please set the JAVA_HOME variable in your environment to match the"},{"lineNumber":57,"author":{"gitId":"-"},"content":"echo location of your Java installation."},{"lineNumber":58,"author":{"gitId":"-"},"content":""},{"lineNumber":59,"author":{"gitId":"-"},"content":"goto fail"},{"lineNumber":60,"author":{"gitId":"-"},"content":""},{"lineNumber":61,"author":{"gitId":"-"},"content":":findJavaFromJavaHome"},{"lineNumber":62,"author":{"gitId":"-"},"content":"set JAVA_HOME\u003d%JAVA_HOME:\"\u003d%"},{"lineNumber":63,"author":{"gitId":"-"},"content":"set JAVA_EXE\u003d%JAVA_HOME%/bin/java.exe"},{"lineNumber":64,"author":{"gitId":"-"},"content":""},{"lineNumber":65,"author":{"gitId":"mesyeux"},"content":""},{"lineNumber":66,"author":{"gitId":"-"},"content":"if exist \"%JAVA_EXE%\" goto init"},{"lineNumber":67,"author":{"gitId":"mesyeux"},"content":"\u003d\u003d\u003d\u003d\u003d\u003d\u003d"},{"lineNumber":68,"author":{"gitId":"mesyeux"},"content":"if exist \"%JAVA_EXE%\" goto execute"},{"lineNumber":69,"author":{"gitId":"-"},"content":""},{"lineNumber":70,"author":{"gitId":"-"},"content":"echo."},{"lineNumber":71,"author":{"gitId":"-"},"content":"echo ERROR: JAVA_HOME is set to an invalid directory: %JAVA_HOME%"},{"lineNumber":72,"author":{"gitId":"-"},"content":"echo."},{"lineNumber":73,"author":{"gitId":"-"},"content":"echo Please set the JAVA_HOME variable in your environment to match the"},{"lineNumber":74,"author":{"gitId":"-"},"content":"echo location of your Java installation."},{"lineNumber":75,"author":{"gitId":"-"},"content":""},{"lineNumber":76,"author":{"gitId":"-"},"content":"goto fail"},{"lineNumber":77,"author":{"gitId":"-"},"content":""},{"lineNumber":78,"author":{"gitId":"-"},"content":":init"},{"lineNumber":79,"author":{"gitId":"-"},"content":"@rem Get command-line arguments, handling Windows variants"},{"lineNumber":80,"author":{"gitId":"-"},"content":""},{"lineNumber":81,"author":{"gitId":"-"},"content":"if not \"%OS%\" \u003d\u003d \"Windows_NT\" goto win9xME_args"},{"lineNumber":82,"author":{"gitId":"-"},"content":""},{"lineNumber":83,"author":{"gitId":"-"},"content":":win9xME_args"},{"lineNumber":84,"author":{"gitId":"-"},"content":"@rem Slurp the command line arguments."},{"lineNumber":85,"author":{"gitId":"-"},"content":"set CMD_LINE_ARGS\u003d"},{"lineNumber":86,"author":{"gitId":"-"},"content":"set _SKIP\u003d2"},{"lineNumber":87,"author":{"gitId":"-"},"content":""},{"lineNumber":88,"author":{"gitId":"-"},"content":":win9xME_args_slurp"},{"lineNumber":89,"author":{"gitId":"-"},"content":"if \"x%~1\" \u003d\u003d \"x\" goto execute"},{"lineNumber":90,"author":{"gitId":"-"},"content":""},{"lineNumber":91,"author":{"gitId":"-"},"content":"set CMD_LINE_ARGS\u003d%*"},{"lineNumber":92,"author":{"gitId":"-"},"content":""},{"lineNumber":93,"author":{"gitId":"mesyeux"},"content":""},{"lineNumber":94,"author":{"gitId":"-"},"content":":execute"},{"lineNumber":95,"author":{"gitId":"-"},"content":"@rem Setup the command line"},{"lineNumber":96,"author":{"gitId":"-"},"content":""},{"lineNumber":97,"author":{"gitId":"-"},"content":"set CLASSPATH\u003d%APP_HOME%\\gradle\\wrapper\\gradle-wrapper.jar"},{"lineNumber":98,"author":{"gitId":"-"},"content":""},{"lineNumber":99,"author":{"gitId":"-"},"content":"@rem Execute Gradle"},{"lineNumber":100,"author":{"gitId":"-"},"content":"\"%JAVA_EXE%\" %DEFAULT_JVM_OPTS% %JAVA_OPTS% %GRADLE_OPTS% \"-Dorg.gradle.appname\u003d%APP_BASE_NAME%\" -classpath \"%CLASSPATH%\" org.gradle.wrapper.GradleWrapperMain %CMD_LINE_ARGS%"},{"lineNumber":101,"author":{"gitId":"mesyeux"},"content":"\u003d\u003d\u003d\u003d\u003d\u003d\u003d"},{"lineNumber":102,"author":{"gitId":"mesyeux"},"content":""},{"lineNumber":103,"author":{"gitId":"mesyeux"},"content":"@rem Execute Gradle"},{"lineNumber":104,"author":{"gitId":"mesyeux"},"content":"\"%JAVA_EXE%\" %DEFAULT_JVM_OPTS% %JAVA_OPTS% %GRADLE_OPTS% \"-Dorg.gradle.appname\u003d%APP_BASE_NAME%\" -classpath \"%CLASSPATH%\" org.gradle.wrapper.GradleWrapperMain %*"},{"lineNumber":105,"author":{"gitId":"-"},"content":""},{"lineNumber":106,"author":{"gitId":"-"},"content":":end"},{"lineNumber":107,"author":{"gitId":"-"},"content":"@rem End local scope for the variables with windows NT shell"},{"lineNumber":108,"author":{"gitId":"-"},"content":"if \"%ERRORLEVEL%\"\u003d\u003d\"0\" goto mainEnd"},{"lineNumber":109,"author":{"gitId":"-"},"content":""},{"lineNumber":110,"author":{"gitId":"-"},"content":":fail"},{"lineNumber":111,"author":{"gitId":"-"},"content":"rem Set variable GRADLE_EXIT_CONSOLE if you need the _script_ return code instead of"},{"lineNumber":112,"author":{"gitId":"-"},"content":"rem the _cmd.exe /c_ return code!"},{"lineNumber":113,"author":{"gitId":"-"},"content":"if  not \"\" \u003d\u003d \"%GRADLE_EXIT_CONSOLE%\" exit 1"},{"lineNumber":114,"author":{"gitId":"-"},"content":"exit /b 1"},{"lineNumber":115,"author":{"gitId":"-"},"content":""},{"lineNumber":116,"author":{"gitId":"-"},"content":":mainEnd"},{"lineNumber":117,"author":{"gitId":"-"},"content":"if \"%OS%\"\u003d\u003d\"Windows_NT\" endlocal"},{"lineNumber":118,"author":{"gitId":"-"},"content":""},{"lineNumber":119,"author":{"gitId":"-"},"content":":omega"}],"authorContributionMap":{"mesyeux":16,"-":103}},{"path":"settings.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"mesyeux"},"content":"/*"},{"lineNumber":2,"author":{"gitId":"mesyeux"},"content":" * This file was generated by the Gradle \u0027init\u0027 task."},{"lineNumber":3,"author":{"gitId":"mesyeux"},"content":" *"},{"lineNumber":4,"author":{"gitId":"mesyeux"},"content":" * The settings file is used to specify which projects to include in your build."},{"lineNumber":5,"author":{"gitId":"mesyeux"},"content":" *"},{"lineNumber":6,"author":{"gitId":"mesyeux"},"content":" * Detailed information about configuring a multi-project build in Gradle can be found"},{"lineNumber":7,"author":{"gitId":"mesyeux"},"content":" * in the user manual at https://docs.gradle.org/6.7/userguide/multi_project_builds.html"},{"lineNumber":8,"author":{"gitId":"mesyeux"},"content":" */"},{"lineNumber":9,"author":{"gitId":"mesyeux"},"content":""},{"lineNumber":10,"author":{"gitId":"mesyeux"},"content":"rootProject.name \u003d \u0027IP\u0027"}],"authorContributionMap":{"mesyeux":10}},{"path":"src/main/java/AddCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"mesyeux"},"content":"/**"},{"lineNumber":2,"author":{"gitId":"mesyeux"},"content":" * Represents a command to add a task(ToDo/Deadline/Event) to"},{"lineNumber":3,"author":{"gitId":"mesyeux"},"content":" * the existing task list."},{"lineNumber":4,"author":{"gitId":"mesyeux"},"content":" */"},{"lineNumber":5,"author":{"gitId":"mesyeux"},"content":""},{"lineNumber":6,"author":{"gitId":"mesyeux"},"content":"public class AddCommand extends Command {"},{"lineNumber":7,"author":{"gitId":"mesyeux"},"content":"    /**"},{"lineNumber":8,"author":{"gitId":"mesyeux"},"content":"     * Constructor that takes in two parameters, \u003ccode\u003efullCommand\u003c/code\u003e and \u003ccode\u003eaction\u003c/code\u003e,"},{"lineNumber":9,"author":{"gitId":"mesyeux"},"content":"     * where \u003ccode\u003efullCommand\u003c/code\u003e is the full input entered by the user, and"},{"lineNumber":10,"author":{"gitId":"mesyeux"},"content":"     * \u003ccode\u003eaction\u003c/code\u003e is the type of task (\u003ccode\u003eToDo\u003c/code\u003e/\u003ccode\u003eDeadline\u003c/code\u003e/\u003ccode\u003eEvent\u003c/code\u003e)"},{"lineNumber":11,"author":{"gitId":"mesyeux"},"content":"     * that is to be added"},{"lineNumber":12,"author":{"gitId":"mesyeux"},"content":"     * @param fullCommand the full user input"},{"lineNumber":13,"author":{"gitId":"mesyeux"},"content":"     * @param action the type of task to be added"},{"lineNumber":14,"author":{"gitId":"mesyeux"},"content":"     */"},{"lineNumber":15,"author":{"gitId":"mesyeux"},"content":"    public AddCommand(String fullCommand, String action) {"},{"lineNumber":16,"author":{"gitId":"mesyeux"},"content":"        super(fullCommand, action);"},{"lineNumber":17,"author":{"gitId":"mesyeux"},"content":"    }"},{"lineNumber":18,"author":{"gitId":"mesyeux"},"content":""},{"lineNumber":19,"author":{"gitId":"mesyeux"},"content":"    /**"},{"lineNumber":20,"author":{"gitId":"mesyeux"},"content":"     * Adds a task (\u003ccode\u003eToDo\u003c/code\u003e/\u003ccode\u003eDeadline\u003c/code\u003e/\u003ccode\u003eEvent\u003c/code\u003e)"},{"lineNumber":21,"author":{"gitId":"mesyeux"},"content":"     * into the given task list."},{"lineNumber":22,"author":{"gitId":"mesyeux"},"content":"     * @param tasks a task list that the task in question is to be added into"},{"lineNumber":23,"author":{"gitId":"mesyeux"},"content":"     * @throws DukeException If the given command does not correspond to adding"},{"lineNumber":24,"author":{"gitId":"mesyeux"},"content":"     * either a \u003ccode\u003eTodo\u003c/code\u003e, \u003ccode\u003eDeadline\u003c/code\u003e or \u003ccode\u003eEvent\u003c/code\u003e"},{"lineNumber":25,"author":{"gitId":"mesyeux"},"content":"     */"},{"lineNumber":26,"author":{"gitId":"mesyeux"},"content":""},{"lineNumber":27,"author":{"gitId":"mesyeux"},"content":"    @Override"},{"lineNumber":28,"author":{"gitId":"mesyeux"},"content":"    public String execute(TaskList tasks) throws DukeException {"},{"lineNumber":29,"author":{"gitId":"mesyeux"},"content":"        String response;"},{"lineNumber":30,"author":{"gitId":"mesyeux"},"content":"        String[] inputs \u003d this.fullCommand.split(\" \");"},{"lineNumber":31,"author":{"gitId":"mesyeux"},"content":"        String action \u003d inputs[0];"},{"lineNumber":32,"author":{"gitId":"mesyeux"},"content":"        if (action.equals(\"todo\")) {"},{"lineNumber":33,"author":{"gitId":"mesyeux"},"content":"            if (inputs.length \u003d\u003d 1) {"},{"lineNumber":34,"author":{"gitId":"mesyeux"},"content":"                throw new DukeException(\"OOPS! The description of a todo cannot be empty.\");"},{"lineNumber":35,"author":{"gitId":"mesyeux"},"content":"            }"},{"lineNumber":36,"author":{"gitId":"mesyeux"},"content":"            String toPrint \u003d tasks.addByCommand(fullCommand, \"todo\");"},{"lineNumber":37,"author":{"gitId":"mesyeux"},"content":"            response \u003d \"Sure! I\u0027ve added this todo: \\n\" + toPrint + \"\\n\" + \"Now you have a whopping \""},{"lineNumber":38,"author":{"gitId":"mesyeux"},"content":"                        + tasks.size() + \" task(s) in the list.\";"},{"lineNumber":39,"author":{"gitId":"mesyeux"},"content":"            return response;"},{"lineNumber":40,"author":{"gitId":"mesyeux"},"content":"        } else if (action.equals(\"deadline\")) { //input format yyyy-mm-dd tttt"},{"lineNumber":41,"author":{"gitId":"mesyeux"},"content":"            if (inputs.length \u003d\u003d 1) {"},{"lineNumber":42,"author":{"gitId":"mesyeux"},"content":"                throw new DukeException(\"OOPS! The description of a deadline cannot be empty.\");"},{"lineNumber":43,"author":{"gitId":"mesyeux"},"content":"            }"},{"lineNumber":44,"author":{"gitId":"mesyeux"},"content":"            String toPrint \u003d tasks.addByCommand(fullCommand, \"deadline\");"},{"lineNumber":45,"author":{"gitId":"mesyeux"},"content":"            response \u003d \"Sure! I\u0027ve added this deadline: \\n\" + toPrint + \"\\n\" + \"Now you have a whopping \""},{"lineNumber":46,"author":{"gitId":"mesyeux"},"content":"                    + tasks.size() + \" task(s) in the list.\";"},{"lineNumber":47,"author":{"gitId":"mesyeux"},"content":"            return response;"},{"lineNumber":48,"author":{"gitId":"mesyeux"},"content":"        } else if (action.equals(\"event\")) { //input format: yyyy-mm-dd tttt-tttt"},{"lineNumber":49,"author":{"gitId":"mesyeux"},"content":"            if (inputs.length \u003d\u003d 1) {"},{"lineNumber":50,"author":{"gitId":"mesyeux"},"content":"                throw new DukeException(\"OOPS! The description of an event cannot be empty.\");"},{"lineNumber":51,"author":{"gitId":"mesyeux"},"content":"            }"},{"lineNumber":52,"author":{"gitId":"mesyeux"},"content":"            String toPrint \u003d tasks.addByCommand(fullCommand,"},{"lineNumber":53,"author":{"gitId":"mesyeux"},"content":"                    \"event\");"},{"lineNumber":54,"author":{"gitId":"mesyeux"},"content":"            response \u003d \"Sure! I\u0027ve added this event: \\n\" + toPrint + \"\\n\" + \"Now you have a whopping \""},{"lineNumber":55,"author":{"gitId":"mesyeux"},"content":"                    + tasks.size() + \" task(s) in the list.\";"},{"lineNumber":56,"author":{"gitId":"mesyeux"},"content":"            return response;"},{"lineNumber":57,"author":{"gitId":"mesyeux"},"content":"        } else {"},{"lineNumber":58,"author":{"gitId":"mesyeux"},"content":"            throw new DukeException(\"OOPS! Sorry, I have no idea what that means :(\");"},{"lineNumber":59,"author":{"gitId":"mesyeux"},"content":"        }"},{"lineNumber":60,"author":{"gitId":"mesyeux"},"content":"    }"},{"lineNumber":61,"author":{"gitId":"mesyeux"},"content":"}"}],"authorContributionMap":{"mesyeux":61}},{"path":"src/main/java/Aligner.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"mesyeux"},"content":"/**"},{"lineNumber":2,"author":{"gitId":"mesyeux"},"content":" * A class that is used to align text."},{"lineNumber":3,"author":{"gitId":"mesyeux"},"content":" */"},{"lineNumber":4,"author":{"gitId":"mesyeux"},"content":""},{"lineNumber":5,"author":{"gitId":"mesyeux"},"content":"public class Aligner {"},{"lineNumber":6,"author":{"gitId":"mesyeux"},"content":"    private static final int LINELENGTH \u003d 73;"},{"lineNumber":7,"author":{"gitId":"mesyeux"},"content":"    public Aligner() { }"},{"lineNumber":8,"author":{"gitId":"mesyeux"},"content":""},{"lineNumber":9,"author":{"gitId":"mesyeux"},"content":"    /**"},{"lineNumber":10,"author":{"gitId":"mesyeux"},"content":"     * Returns a string that is properly aligned."},{"lineNumber":11,"author":{"gitId":"mesyeux"},"content":"     * @param s the String that needs to be aligned"},{"lineNumber":12,"author":{"gitId":"mesyeux"},"content":"     * @return an aligned String"},{"lineNumber":13,"author":{"gitId":"mesyeux"},"content":"     */"},{"lineNumber":14,"author":{"gitId":"mesyeux"},"content":"    public static String align(String s) {"},{"lineNumber":15,"author":{"gitId":"mesyeux"},"content":"        int stringLength \u003d s.length();"},{"lineNumber":16,"author":{"gitId":"mesyeux"},"content":"        int left \u003d (int) Math.ceil((LINELENGTH - stringLength) / 2);"},{"lineNumber":17,"author":{"gitId":"mesyeux"},"content":"        int right \u003d (int) Math.floor((LINELENGTH - stringLength) / 2);"},{"lineNumber":18,"author":{"gitId":"mesyeux"},"content":"        String newString;"},{"lineNumber":19,"author":{"gitId":"mesyeux"},"content":"        newString \u003d String.format(\"%\" + left + \"s\", \" \") + s"},{"lineNumber":20,"author":{"gitId":"mesyeux"},"content":"                + String.format(\"%\" + right + \"s\", \" \");"},{"lineNumber":21,"author":{"gitId":"mesyeux"},"content":"        return newString;"},{"lineNumber":22,"author":{"gitId":"mesyeux"},"content":"    }"},{"lineNumber":23,"author":{"gitId":"mesyeux"},"content":"}"}],"authorContributionMap":{"mesyeux":23}},{"path":"src/main/java/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"mesyeux"},"content":"/**"},{"lineNumber":2,"author":{"gitId":"mesyeux"},"content":" * Represents a user command."},{"lineNumber":3,"author":{"gitId":"mesyeux"},"content":" */"},{"lineNumber":4,"author":{"gitId":"mesyeux"},"content":""},{"lineNumber":5,"author":{"gitId":"mesyeux"},"content":""},{"lineNumber":6,"author":{"gitId":"mesyeux"},"content":"public abstract class Command {"},{"lineNumber":7,"author":{"gitId":"mesyeux"},"content":"    protected final String fullCommand;"},{"lineNumber":8,"author":{"gitId":"mesyeux"},"content":"    protected final String action;"},{"lineNumber":9,"author":{"gitId":"mesyeux"},"content":""},{"lineNumber":10,"author":{"gitId":"mesyeux"},"content":"    /**"},{"lineNumber":11,"author":{"gitId":"mesyeux"},"content":"     * Constructor takes in a \u003ccode\u003efullCommand\u003c/code\u003e, the full user input"},{"lineNumber":12,"author":{"gitId":"mesyeux"},"content":"     * consisting of the desired command, and a \u003ccode\u003eaction\u003c/code\u003e which"},{"lineNumber":13,"author":{"gitId":"mesyeux"},"content":"     * states the type of command to be executed"},{"lineNumber":14,"author":{"gitId":"mesyeux"},"content":"     * @param fullCommand the full user input"},{"lineNumber":15,"author":{"gitId":"mesyeux"},"content":"     * @param action the type of command to be executed"},{"lineNumber":16,"author":{"gitId":"mesyeux"},"content":"     */"},{"lineNumber":17,"author":{"gitId":"mesyeux"},"content":""},{"lineNumber":18,"author":{"gitId":"mesyeux"},"content":"    public Command(String fullCommand, String action) {"},{"lineNumber":19,"author":{"gitId":"mesyeux"},"content":"        this.fullCommand \u003d fullCommand;"},{"lineNumber":20,"author":{"gitId":"mesyeux"},"content":"        this.action \u003d action;"},{"lineNumber":21,"author":{"gitId":"mesyeux"},"content":"    }"},{"lineNumber":22,"author":{"gitId":"mesyeux"},"content":""},{"lineNumber":23,"author":{"gitId":"mesyeux"},"content":"    /**"},{"lineNumber":24,"author":{"gitId":"mesyeux"},"content":"     * A method that carries out the desired command taken from the user"},{"lineNumber":25,"author":{"gitId":"mesyeux"},"content":"     * on the task list"},{"lineNumber":26,"author":{"gitId":"mesyeux"},"content":"     * @param tasks the task list that the command must be carried out on"},{"lineNumber":27,"author":{"gitId":"mesyeux"},"content":"     * @throws DukeException"},{"lineNumber":28,"author":{"gitId":"mesyeux"},"content":"     */"},{"lineNumber":29,"author":{"gitId":"mesyeux"},"content":"    public abstract String execute(TaskList tasks) throws DukeException;"},{"lineNumber":30,"author":{"gitId":"mesyeux"},"content":"}"}],"authorContributionMap":{"mesyeux":30}},{"path":"src/main/java/DateCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"mesyeux"},"content":"import java.time.LocalDate;"},{"lineNumber":2,"author":{"gitId":"mesyeux"},"content":"import java.util.List;"},{"lineNumber":3,"author":{"gitId":"mesyeux"},"content":""},{"lineNumber":4,"author":{"gitId":"mesyeux"},"content":"/**"},{"lineNumber":5,"author":{"gitId":"mesyeux"},"content":" * Represents a command to print out all the tasks (\u003ccode\u003eDeadline\u003c/code\u003e, \u003ccode\u003eEvent\u003c/code\u003e)"},{"lineNumber":6,"author":{"gitId":"mesyeux"},"content":" * that falls on a particular date and time."},{"lineNumber":7,"author":{"gitId":"mesyeux"},"content":" */"},{"lineNumber":8,"author":{"gitId":"mesyeux"},"content":""},{"lineNumber":9,"author":{"gitId":"mesyeux"},"content":"public class DateCommand extends Command {"},{"lineNumber":10,"author":{"gitId":"mesyeux"},"content":"    /**"},{"lineNumber":11,"author":{"gitId":"mesyeux"},"content":"     * Constructor takes in a \u003ccode\u003efullCommand\u003c/code\u003e, the full user input"},{"lineNumber":12,"author":{"gitId":"mesyeux"},"content":"     * consisting of the desired command, and a \u003ccode\u003eaction\u003c/code\u003e which"},{"lineNumber":13,"author":{"gitId":"mesyeux"},"content":"     * in this case should specify \"date\""},{"lineNumber":14,"author":{"gitId":"mesyeux"},"content":"     * @param fullCommand the full user input"},{"lineNumber":15,"author":{"gitId":"mesyeux"},"content":"     * @param action should be \"date\""},{"lineNumber":16,"author":{"gitId":"mesyeux"},"content":"     */"},{"lineNumber":17,"author":{"gitId":"mesyeux"},"content":"    public DateCommand(String fullCommand, String action) {"},{"lineNumber":18,"author":{"gitId":"mesyeux"},"content":"        super(fullCommand, action);"},{"lineNumber":19,"author":{"gitId":"mesyeux"},"content":"    }"},{"lineNumber":20,"author":{"gitId":"mesyeux"},"content":""},{"lineNumber":21,"author":{"gitId":"mesyeux"},"content":"    /**"},{"lineNumber":22,"author":{"gitId":"mesyeux"},"content":"     * Prints out all the tasks (\u003ccode\u003eDeadline\u003c/code\u003e/\u003ccode\u003eEvent\u003c/code\u003e)"},{"lineNumber":23,"author":{"gitId":"mesyeux"},"content":"     * that falls on the user specified date in the \u003ccode\u003efullCommand\u003c/code\u003e"},{"lineNumber":24,"author":{"gitId":"mesyeux"},"content":"     * @param tasks the task list consisting all the tasks"},{"lineNumber":25,"author":{"gitId":"mesyeux"},"content":"     * @throws DukeException if no date is specified"},{"lineNumber":26,"author":{"gitId":"mesyeux"},"content":"     */"},{"lineNumber":27,"author":{"gitId":"mesyeux"},"content":"    @Override"},{"lineNumber":28,"author":{"gitId":"mesyeux"},"content":"    public String execute(TaskList tasks) throws DukeException {"},{"lineNumber":29,"author":{"gitId":"mesyeux"},"content":"        String response \u003d \"\";"},{"lineNumber":30,"author":{"gitId":"mesyeux"},"content":"        String[] inputs \u003d this.fullCommand.split(\" \");"},{"lineNumber":31,"author":{"gitId":"mesyeux"},"content":"        if (inputs.length \u003d\u003d 1) {"},{"lineNumber":32,"author":{"gitId":"mesyeux"},"content":"            throw new DukeException(\"OOPS! Please give me the date that you want to check in YYYY-MM-DD format.\");"},{"lineNumber":33,"author":{"gitId":"mesyeux"},"content":"        }"},{"lineNumber":34,"author":{"gitId":"mesyeux"},"content":"        LocalDate d \u003d LocalDate.parse(inputs[1]);"},{"lineNumber":35,"author":{"gitId":"mesyeux"},"content":"        List\u003cTask\u003e toPrint \u003d tasks.print(d);"},{"lineNumber":36,"author":{"gitId":"mesyeux"},"content":"        for (int i \u003d 1; i \u003c toPrint.size() + 1; i++) {"},{"lineNumber":37,"author":{"gitId":"mesyeux"},"content":"            response \u003d response + i + \".\" + toPrint.get(i - 1).toString() + \"\\n\";"},{"lineNumber":38,"author":{"gitId":"mesyeux"},"content":"        }"},{"lineNumber":39,"author":{"gitId":"mesyeux"},"content":"        return response;"},{"lineNumber":40,"author":{"gitId":"mesyeux"},"content":"    }"},{"lineNumber":41,"author":{"gitId":"mesyeux"},"content":"}"}],"authorContributionMap":{"mesyeux":41}},{"path":"src/main/java/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"mesyeux"},"content":"import java.time.LocalDate;"},{"lineNumber":2,"author":{"gitId":"mesyeux"},"content":"import java.time.LocalTime;"},{"lineNumber":3,"author":{"gitId":"mesyeux"},"content":"import java.time.format.DateTimeFormatter;"},{"lineNumber":4,"author":{"gitId":"mesyeux"},"content":""},{"lineNumber":5,"author":{"gitId":"mesyeux"},"content":"/**"},{"lineNumber":6,"author":{"gitId":"mesyeux"},"content":" * Represents a task in the form of a deadline which has a date and time"},{"lineNumber":7,"author":{"gitId":"mesyeux"},"content":" * that it must be done by"},{"lineNumber":8,"author":{"gitId":"mesyeux"},"content":" */"},{"lineNumber":9,"author":{"gitId":"mesyeux"},"content":""},{"lineNumber":10,"author":{"gitId":"mesyeux"},"content":"public class Deadline extends Task {"},{"lineNumber":11,"author":{"gitId":"mesyeux"},"content":"    private final LocalDate dateBy; //deadline of task"},{"lineNumber":12,"author":{"gitId":"mesyeux"},"content":"    private final LocalTime timeBy;"},{"lineNumber":13,"author":{"gitId":"mesyeux"},"content":""},{"lineNumber":14,"author":{"gitId":"mesyeux"},"content":"    /**"},{"lineNumber":15,"author":{"gitId":"mesyeux"},"content":"     * Constructor takes in three parameters, \u003ccode\u003edescription\u003c/code\u003e (description of deadline),"},{"lineNumber":16,"author":{"gitId":"mesyeux"},"content":"     * \u003ccode\u003edateBy\u003c/code\u003e (date of deadline) and \u003ccode\u003etimeBy\u003c/code\u003e (time of deadline)"},{"lineNumber":17,"author":{"gitId":"mesyeux"},"content":"     * @param description a \u003ccode\u003eString\u003c/code\u003e that describes the deadline"},{"lineNumber":18,"author":{"gitId":"mesyeux"},"content":"     * @param dateBy a \u003ccode\u003eLocalDate\u003c/code\u003e specifying the date of deadline"},{"lineNumber":19,"author":{"gitId":"mesyeux"},"content":"     * @param timeBy a \u003ccode\u003eLocalTime\u003c/code\u003e specifying the time of deadline"},{"lineNumber":20,"author":{"gitId":"mesyeux"},"content":"     */"},{"lineNumber":21,"author":{"gitId":"mesyeux"},"content":""},{"lineNumber":22,"author":{"gitId":"mesyeux"},"content":"    public Deadline(String description, LocalDate dateBy, LocalTime timeBy) {"},{"lineNumber":23,"author":{"gitId":"mesyeux"},"content":"        super(description);"},{"lineNumber":24,"author":{"gitId":"mesyeux"},"content":"        this.dateBy \u003d dateBy;"},{"lineNumber":25,"author":{"gitId":"mesyeux"},"content":"        this.timeBy \u003d timeBy;"},{"lineNumber":26,"author":{"gitId":"mesyeux"},"content":"    }"},{"lineNumber":27,"author":{"gitId":"mesyeux"},"content":""},{"lineNumber":28,"author":{"gitId":"mesyeux"},"content":"    /**"},{"lineNumber":29,"author":{"gitId":"mesyeux"},"content":"     * A method that returns the date of the deadline"},{"lineNumber":30,"author":{"gitId":"mesyeux"},"content":"     * @return a \u003ccode\u003eLocalDate\u003c/code\u003e object that specifies the date of"},{"lineNumber":31,"author":{"gitId":"mesyeux"},"content":"     * the deadline"},{"lineNumber":32,"author":{"gitId":"mesyeux"},"content":"     */"},{"lineNumber":33,"author":{"gitId":"mesyeux"},"content":"    @Override"},{"lineNumber":34,"author":{"gitId":"mesyeux"},"content":"    public LocalDate getDate() {"},{"lineNumber":35,"author":{"gitId":"mesyeux"},"content":"        return this.dateBy;"},{"lineNumber":36,"author":{"gitId":"mesyeux"},"content":"    }"},{"lineNumber":37,"author":{"gitId":"mesyeux"},"content":""},{"lineNumber":38,"author":{"gitId":"mesyeux"},"content":"    /**"},{"lineNumber":39,"author":{"gitId":"mesyeux"},"content":"     * A method that generates the text to be stored into the text file"},{"lineNumber":40,"author":{"gitId":"mesyeux"},"content":"     * at the end of execution"},{"lineNumber":41,"author":{"gitId":"mesyeux"},"content":"     * @return A \u003ccode\u003eString\u003c/code\u003e text in the proper format to be stored"},{"lineNumber":42,"author":{"gitId":"mesyeux"},"content":"     * into the text file"},{"lineNumber":43,"author":{"gitId":"mesyeux"},"content":"     */"},{"lineNumber":44,"author":{"gitId":"mesyeux"},"content":"    @Override"},{"lineNumber":45,"author":{"gitId":"mesyeux"},"content":"    public String generateText() {"},{"lineNumber":46,"author":{"gitId":"mesyeux"},"content":"        return String.format(\"D # %d # %s # %s %s\","},{"lineNumber":47,"author":{"gitId":"mesyeux"},"content":"                this.isDone ? 1 : 0,"},{"lineNumber":48,"author":{"gitId":"mesyeux"},"content":"                        this.description, this.dateBy,"},{"lineNumber":49,"author":{"gitId":"mesyeux"},"content":"                                this.timeBy.format("},{"lineNumber":50,"author":{"gitId":"mesyeux"},"content":"                                        DateTimeFormatter.ofPattern(\"HHmm\")));"},{"lineNumber":51,"author":{"gitId":"mesyeux"},"content":"    }"},{"lineNumber":52,"author":{"gitId":"mesyeux"},"content":""},{"lineNumber":53,"author":{"gitId":"mesyeux"},"content":"    /**"},{"lineNumber":54,"author":{"gitId":"mesyeux"},"content":"     * A method that returns the date and time of deadline in the format of"},{"lineNumber":55,"author":{"gitId":"mesyeux"},"content":"     * MMM-d-yyyy hh:mma"},{"lineNumber":56,"author":{"gitId":"mesyeux"},"content":"     * @return a \u003ccode\u003eString\u003c/code\u003e of the date ond time of deadline"},{"lineNumber":57,"author":{"gitId":"mesyeux"},"content":"     */"},{"lineNumber":58,"author":{"gitId":"mesyeux"},"content":""},{"lineNumber":59,"author":{"gitId":"mesyeux"},"content":"    public String getDeadline() { //get deadline in format of String eg. (by: Sunday)"},{"lineNumber":60,"author":{"gitId":"mesyeux"},"content":"        return \"(by: \" + dateBy.format("},{"lineNumber":61,"author":{"gitId":"mesyeux"},"content":"                DateTimeFormatter.ofPattern(\"MMM d yyyy\")) + \" \""},{"lineNumber":62,"author":{"gitId":"mesyeux"},"content":"                        + timeBy.format("},{"lineNumber":63,"author":{"gitId":"mesyeux"},"content":"                                DateTimeFormatter.ofPattern(\"hh:mma\")) + \")\";"},{"lineNumber":64,"author":{"gitId":"mesyeux"},"content":"    }"},{"lineNumber":65,"author":{"gitId":"mesyeux"},"content":""},{"lineNumber":66,"author":{"gitId":"mesyeux"},"content":"    @Override"},{"lineNumber":67,"author":{"gitId":"mesyeux"},"content":"    public String toString() {"},{"lineNumber":68,"author":{"gitId":"mesyeux"},"content":"        if (this.isDone) {"},{"lineNumber":69,"author":{"gitId":"mesyeux"},"content":"            return \"[D][X] \" + this.description + this.getDeadline();"},{"lineNumber":70,"author":{"gitId":"mesyeux"},"content":"        } else {"},{"lineNumber":71,"author":{"gitId":"mesyeux"},"content":"            return \"[D][ ] \" + this.description + this.getDeadline();"},{"lineNumber":72,"author":{"gitId":"mesyeux"},"content":"        }"},{"lineNumber":73,"author":{"gitId":"mesyeux"},"content":"    }"},{"lineNumber":74,"author":{"gitId":"mesyeux"},"content":"}"}],"authorContributionMap":{"mesyeux":74}},{"path":"src/main/java/DeleteCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"mesyeux"},"content":"/**"},{"lineNumber":2,"author":{"gitId":"mesyeux"},"content":" * Represents a command to delete a task from the task list"},{"lineNumber":3,"author":{"gitId":"mesyeux"},"content":" */"},{"lineNumber":4,"author":{"gitId":"mesyeux"},"content":""},{"lineNumber":5,"author":{"gitId":"mesyeux"},"content":"public class DeleteCommand extends Command {"},{"lineNumber":6,"author":{"gitId":"mesyeux"},"content":"    /**"},{"lineNumber":7,"author":{"gitId":"mesyeux"},"content":"     * Constructor takes in a \u003ccode\u003efullCommand\u003c/code\u003e, the full user input"},{"lineNumber":8,"author":{"gitId":"mesyeux"},"content":"     * consisting of the desired command, and a \u003ccode\u003eaction\u003c/code\u003e which"},{"lineNumber":9,"author":{"gitId":"mesyeux"},"content":"     * in this case should specify \"delete\""},{"lineNumber":10,"author":{"gitId":"mesyeux"},"content":"     * @param fullCommand the full user input"},{"lineNumber":11,"author":{"gitId":"mesyeux"},"content":"     * @param action should be \"delete\""},{"lineNumber":12,"author":{"gitId":"mesyeux"},"content":"     */"},{"lineNumber":13,"author":{"gitId":"mesyeux"},"content":"    public DeleteCommand(String fullCommand, String action) {"},{"lineNumber":14,"author":{"gitId":"mesyeux"},"content":"        super(fullCommand, action);"},{"lineNumber":15,"author":{"gitId":"mesyeux"},"content":"    }"},{"lineNumber":16,"author":{"gitId":"mesyeux"},"content":""},{"lineNumber":17,"author":{"gitId":"mesyeux"},"content":"    /**"},{"lineNumber":18,"author":{"gitId":"mesyeux"},"content":"     * Deletes a task from the given task list"},{"lineNumber":19,"author":{"gitId":"mesyeux"},"content":"     * @param tasks the task list consisting the task to be deleted"},{"lineNumber":20,"author":{"gitId":"mesyeux"},"content":"     * @throws DukeException"},{"lineNumber":21,"author":{"gitId":"mesyeux"},"content":"     */"},{"lineNumber":22,"author":{"gitId":"mesyeux"},"content":"    @Override"},{"lineNumber":23,"author":{"gitId":"mesyeux"},"content":"    public String execute(TaskList tasks) throws DukeException {"},{"lineNumber":24,"author":{"gitId":"mesyeux"},"content":"        String response;"},{"lineNumber":25,"author":{"gitId":"mesyeux"},"content":"        int taskNo \u003d Integer.parseInt(String.valueOf(fullCommand.charAt(7))) - 1;"},{"lineNumber":26,"author":{"gitId":"mesyeux"},"content":"        String toPrint \u003d tasks.remove(taskNo);"},{"lineNumber":27,"author":{"gitId":"mesyeux"},"content":"        response \u003d \"Alright! I\u0027ve removed this task:\\n\" + toPrint + \"\\n\" + \"Now you have a whopping \""},{"lineNumber":28,"author":{"gitId":"mesyeux"},"content":"                    + tasks.size() + \" task(s) in the list.\";"},{"lineNumber":29,"author":{"gitId":"mesyeux"},"content":"        return response;"},{"lineNumber":30,"author":{"gitId":"mesyeux"},"content":"    }"},{"lineNumber":31,"author":{"gitId":"mesyeux"},"content":"}"}],"authorContributionMap":{"mesyeux":31}},{"path":"src/main/java/DialogBox.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"mesyeux"},"content":"import java.io.IOException;"},{"lineNumber":2,"author":{"gitId":"mesyeux"},"content":"import java.util.Collections;"},{"lineNumber":3,"author":{"gitId":"mesyeux"},"content":""},{"lineNumber":4,"author":{"gitId":"mesyeux"},"content":"import javafx.collections.FXCollections;"},{"lineNumber":5,"author":{"gitId":"mesyeux"},"content":"import javafx.collections.ObservableList;"},{"lineNumber":6,"author":{"gitId":"mesyeux"},"content":"import javafx.fxml.FXML;"},{"lineNumber":7,"author":{"gitId":"mesyeux"},"content":"import javafx.fxml.FXMLLoader;"},{"lineNumber":8,"author":{"gitId":"mesyeux"},"content":"import javafx.geometry.Pos;"},{"lineNumber":9,"author":{"gitId":"mesyeux"},"content":"import javafx.scene.Node;"},{"lineNumber":10,"author":{"gitId":"mesyeux"},"content":"import javafx.scene.control.Label;"},{"lineNumber":11,"author":{"gitId":"mesyeux"},"content":"import javafx.scene.image.Image;"},{"lineNumber":12,"author":{"gitId":"mesyeux"},"content":"import javafx.scene.image.ImageView;"},{"lineNumber":13,"author":{"gitId":"mesyeux"},"content":"import javafx.scene.layout.HBox;"},{"lineNumber":14,"author":{"gitId":"mesyeux"},"content":"import javafx.scene.layout.Region;"},{"lineNumber":15,"author":{"gitId":"mesyeux"},"content":""},{"lineNumber":16,"author":{"gitId":"mesyeux"},"content":"/**"},{"lineNumber":17,"author":{"gitId":"mesyeux"},"content":" * An example of a custom control using FXML."},{"lineNumber":18,"author":{"gitId":"mesyeux"},"content":" * This control represents a dialog box consisting of an ImageView to represent the speaker\u0027s face and a label"},{"lineNumber":19,"author":{"gitId":"mesyeux"},"content":" * containing text from the speaker."},{"lineNumber":20,"author":{"gitId":"mesyeux"},"content":" */"},{"lineNumber":21,"author":{"gitId":"mesyeux"},"content":"public class DialogBox extends HBox {"},{"lineNumber":22,"author":{"gitId":"mesyeux"},"content":"    @FXML"},{"lineNumber":23,"author":{"gitId":"mesyeux"},"content":"    private Label dialog;"},{"lineNumber":24,"author":{"gitId":"mesyeux"},"content":"    @FXML"},{"lineNumber":25,"author":{"gitId":"mesyeux"},"content":"    private ImageView displayPicture;"},{"lineNumber":26,"author":{"gitId":"mesyeux"},"content":""},{"lineNumber":27,"author":{"gitId":"mesyeux"},"content":"    private DialogBox(String text, Image img) {"},{"lineNumber":28,"author":{"gitId":"mesyeux"},"content":"        try {"},{"lineNumber":29,"author":{"gitId":"mesyeux"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(\"/view/DialogBox.fxml\"));"},{"lineNumber":30,"author":{"gitId":"mesyeux"},"content":"            fxmlLoader.setController(this);"},{"lineNumber":31,"author":{"gitId":"mesyeux"},"content":"            fxmlLoader.setRoot(this);"},{"lineNumber":32,"author":{"gitId":"mesyeux"},"content":"            fxmlLoader.load();"},{"lineNumber":33,"author":{"gitId":"mesyeux"},"content":"        } catch (IOException e) {"},{"lineNumber":34,"author":{"gitId":"mesyeux"},"content":"            e.printStackTrace();"},{"lineNumber":35,"author":{"gitId":"mesyeux"},"content":"        }"},{"lineNumber":36,"author":{"gitId":"mesyeux"},"content":""},{"lineNumber":37,"author":{"gitId":"mesyeux"},"content":"        dialog.setText(text);"},{"lineNumber":38,"author":{"gitId":"mesyeux"},"content":"        displayPicture.setImage(img);"},{"lineNumber":39,"author":{"gitId":"mesyeux"},"content":"    }"},{"lineNumber":40,"author":{"gitId":"mesyeux"},"content":""},{"lineNumber":41,"author":{"gitId":"mesyeux"},"content":"    /**"},{"lineNumber":42,"author":{"gitId":"mesyeux"},"content":"     * Flips the dialog box such that the ImageView is on the left and text on the right."},{"lineNumber":43,"author":{"gitId":"mesyeux"},"content":"     */"},{"lineNumber":44,"author":{"gitId":"mesyeux"},"content":"    private void flip() {"},{"lineNumber":45,"author":{"gitId":"mesyeux"},"content":"        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());"},{"lineNumber":46,"author":{"gitId":"mesyeux"},"content":"        Collections.reverse(tmp);"},{"lineNumber":47,"author":{"gitId":"mesyeux"},"content":"        getChildren().setAll(tmp);"},{"lineNumber":48,"author":{"gitId":"mesyeux"},"content":"        setAlignment(Pos.TOP_LEFT);"},{"lineNumber":49,"author":{"gitId":"mesyeux"},"content":"    }"},{"lineNumber":50,"author":{"gitId":"mesyeux"},"content":""},{"lineNumber":51,"author":{"gitId":"mesyeux"},"content":"    public static DialogBox getUserDialog(String text, Image img) {"},{"lineNumber":52,"author":{"gitId":"mesyeux"},"content":"        return new DialogBox(text, img);"},{"lineNumber":53,"author":{"gitId":"mesyeux"},"content":"    }"},{"lineNumber":54,"author":{"gitId":"mesyeux"},"content":""},{"lineNumber":55,"author":{"gitId":"mesyeux"},"content":"    public static DialogBox getDukeDialog(String text, Image img) {"},{"lineNumber":56,"author":{"gitId":"mesyeux"},"content":"        var db \u003d new DialogBox(text, img);"},{"lineNumber":57,"author":{"gitId":"mesyeux"},"content":"        db.flip();"},{"lineNumber":58,"author":{"gitId":"mesyeux"},"content":"        return db;"},{"lineNumber":59,"author":{"gitId":"mesyeux"},"content":"    }"},{"lineNumber":60,"author":{"gitId":"mesyeux"},"content":"}"}],"authorContributionMap":{"mesyeux":60}},{"path":"src/main/java/DoneCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"mesyeux"},"content":"/**"},{"lineNumber":2,"author":{"gitId":"mesyeux"},"content":" * Represents a command to mark a task as done within the task list"},{"lineNumber":3,"author":{"gitId":"mesyeux"},"content":" */"},{"lineNumber":4,"author":{"gitId":"mesyeux"},"content":""},{"lineNumber":5,"author":{"gitId":"mesyeux"},"content":"public class DoneCommand extends Command {"},{"lineNumber":6,"author":{"gitId":"mesyeux"},"content":"    /**"},{"lineNumber":7,"author":{"gitId":"mesyeux"},"content":"     * Constructor takes in a \u003ccode\u003efullCommand\u003c/code\u003e, the full user input"},{"lineNumber":8,"author":{"gitId":"mesyeux"},"content":"     * consisting of the desired command, and a \u003ccode\u003eaction\u003c/code\u003e which"},{"lineNumber":9,"author":{"gitId":"mesyeux"},"content":"     * in this case should specify \"done\""},{"lineNumber":10,"author":{"gitId":"mesyeux"},"content":"     * @param fullCommand the full user input"},{"lineNumber":11,"author":{"gitId":"mesyeux"},"content":"     * @param action should be \"done\""},{"lineNumber":12,"author":{"gitId":"mesyeux"},"content":"     */"},{"lineNumber":13,"author":{"gitId":"mesyeux"},"content":"    public DoneCommand(String fullCommand, String action) {"},{"lineNumber":14,"author":{"gitId":"mesyeux"},"content":"        super(fullCommand, action);"},{"lineNumber":15,"author":{"gitId":"mesyeux"},"content":"    }"},{"lineNumber":16,"author":{"gitId":"mesyeux"},"content":""},{"lineNumber":17,"author":{"gitId":"mesyeux"},"content":"    /**"},{"lineNumber":18,"author":{"gitId":"mesyeux"},"content":"     * Marks a task within the task list as done"},{"lineNumber":19,"author":{"gitId":"mesyeux"},"content":"     * @param tasks the task list consisting the task to be marked as done"},{"lineNumber":20,"author":{"gitId":"mesyeux"},"content":"     * @throws DukeException if user did not type in a task number"},{"lineNumber":21,"author":{"gitId":"mesyeux"},"content":"     */"},{"lineNumber":22,"author":{"gitId":"mesyeux"},"content":"    public String execute(TaskList tasks) throws DukeException {"},{"lineNumber":23,"author":{"gitId":"mesyeux"},"content":"        String response;"},{"lineNumber":24,"author":{"gitId":"mesyeux"},"content":"        String[] inputs \u003d this.fullCommand.split(\" \");"},{"lineNumber":25,"author":{"gitId":"mesyeux"},"content":"        if (inputs.length \u003d\u003d 1) {"},{"lineNumber":26,"author":{"gitId":"mesyeux"},"content":"            throw new DukeException(\"OOPS! Please tell me what to mark as done!\");"},{"lineNumber":27,"author":{"gitId":"mesyeux"},"content":"        }"},{"lineNumber":28,"author":{"gitId":"mesyeux"},"content":"        int taskNo \u003d Integer.parseInt(String.valueOf(fullCommand.charAt(5))) - 1;"},{"lineNumber":29,"author":{"gitId":"mesyeux"},"content":"        String toPrint \u003d tasks.makeDone(taskNo);"},{"lineNumber":30,"author":{"gitId":"mesyeux"},"content":"        response \u003d \"Good job! I\u0027ve marked this task as done:\\n\" + toPrint;"},{"lineNumber":31,"author":{"gitId":"mesyeux"},"content":"        return response;"},{"lineNumber":32,"author":{"gitId":"mesyeux"},"content":"    }"},{"lineNumber":33,"author":{"gitId":"mesyeux"},"content":"}"}],"authorContributionMap":{"mesyeux":33}},{"path":"src/main/java/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"mesyeux"},"content":"import java.io.IOException;"},{"lineNumber":2,"author":{"gitId":"mesyeux"},"content":"import java.util.Scanner;"},{"lineNumber":3,"author":{"gitId":"mesyeux"},"content":""},{"lineNumber":4,"author":{"gitId":"-"},"content":"public class Duke {"},{"lineNumber":5,"author":{"gitId":"mesyeux"},"content":"    private static final Scanner sc \u003d new Scanner(System.in);"},{"lineNumber":6,"author":{"gitId":"mesyeux"},"content":"    private static TaskList tasks;"},{"lineNumber":7,"author":{"gitId":"mesyeux"},"content":"    private static FileHandler fh;"},{"lineNumber":8,"author":{"gitId":"mesyeux"},"content":"    private static Ui ui;"},{"lineNumber":9,"author":{"gitId":"mesyeux"},"content":""},{"lineNumber":10,"author":{"gitId":"mesyeux"},"content":"    public Duke() {"},{"lineNumber":11,"author":{"gitId":"mesyeux"},"content":"        ui \u003d new Ui();"},{"lineNumber":12,"author":{"gitId":"mesyeux"},"content":"        fh \u003d new FileHandler();"},{"lineNumber":13,"author":{"gitId":"mesyeux"},"content":"        tasks \u003d new TaskList();"},{"lineNumber":14,"author":{"gitId":"mesyeux"},"content":"    }"},{"lineNumber":15,"author":{"gitId":"mesyeux"},"content":""},{"lineNumber":16,"author":{"gitId":"mesyeux"},"content":"    public String getResponse(String input) {"},{"lineNumber":17,"author":{"gitId":"mesyeux"},"content":"            try {"},{"lineNumber":18,"author":{"gitId":"mesyeux"},"content":"                if (input.equals(\"bye\")) {"},{"lineNumber":19,"author":{"gitId":"mesyeux"},"content":"                    end();"},{"lineNumber":20,"author":{"gitId":"mesyeux"},"content":"                    return ui.printEnd();"},{"lineNumber":21,"author":{"gitId":"mesyeux"},"content":"                } else {"},{"lineNumber":22,"author":{"gitId":"mesyeux"},"content":"                    Command c \u003d Parser.parse(input);"},{"lineNumber":23,"author":{"gitId":"mesyeux"},"content":"                    String response \u003d c.execute(tasks);"},{"lineNumber":24,"author":{"gitId":"mesyeux"},"content":"                    return response;"},{"lineNumber":25,"author":{"gitId":"mesyeux"},"content":"                }"},{"lineNumber":26,"author":{"gitId":"mesyeux"},"content":"            } catch (DukeException ex) {"},{"lineNumber":27,"author":{"gitId":"mesyeux"},"content":"                return ex.getMessage();"},{"lineNumber":28,"author":{"gitId":"mesyeux"},"content":"            }"},{"lineNumber":29,"author":{"gitId":"mesyeux"},"content":"    }"},{"lineNumber":30,"author":{"gitId":"mesyeux"},"content":""},{"lineNumber":31,"author":{"gitId":"mesyeux"},"content":"    public static void start() {"},{"lineNumber":32,"author":{"gitId":"mesyeux"},"content":"        ui.printStart();"},{"lineNumber":33,"author":{"gitId":"mesyeux"},"content":"        readData();"},{"lineNumber":34,"author":{"gitId":"mesyeux"},"content":"    }"},{"lineNumber":35,"author":{"gitId":"mesyeux"},"content":""},{"lineNumber":36,"author":{"gitId":"mesyeux"},"content":"    public static void run() {"},{"lineNumber":37,"author":{"gitId":"mesyeux"},"content":"        start();"},{"lineNumber":38,"author":{"gitId":"mesyeux"},"content":"        String fullCommand \u003d ui.readCommand();"},{"lineNumber":39,"author":{"gitId":"mesyeux"},"content":"        while (!fullCommand.equals(\"bye\")) {"},{"lineNumber":40,"author":{"gitId":"mesyeux"},"content":"            try {"},{"lineNumber":41,"author":{"gitId":"mesyeux"},"content":"                Command c \u003d Parser.parse(fullCommand);"},{"lineNumber":42,"author":{"gitId":"mesyeux"},"content":"                c.execute(tasks);"},{"lineNumber":43,"author":{"gitId":"mesyeux"},"content":"                fullCommand \u003d ui.readCommand();"},{"lineNumber":44,"author":{"gitId":"mesyeux"},"content":"            } catch (DukeException ex) {"},{"lineNumber":45,"author":{"gitId":"mesyeux"},"content":"                System.out.println(ex);"},{"lineNumber":46,"author":{"gitId":"mesyeux"},"content":"                Ui.printLine();"},{"lineNumber":47,"author":{"gitId":"mesyeux"},"content":"                fullCommand \u003d ui.readCommand();"},{"lineNumber":48,"author":{"gitId":"mesyeux"},"content":"                Ui.printLine();"},{"lineNumber":49,"author":{"gitId":"mesyeux"},"content":"            }"},{"lineNumber":50,"author":{"gitId":"mesyeux"},"content":"        }"},{"lineNumber":51,"author":{"gitId":"mesyeux"},"content":"        end();"},{"lineNumber":52,"author":{"gitId":"mesyeux"},"content":"    }"},{"lineNumber":53,"author":{"gitId":"mesyeux"},"content":""},{"lineNumber":54,"author":{"gitId":"mesyeux"},"content":"    public static void end() {"},{"lineNumber":55,"author":{"gitId":"mesyeux"},"content":"        writeData();"},{"lineNumber":56,"author":{"gitId":"mesyeux"},"content":"        ui.printEnd();"},{"lineNumber":57,"author":{"gitId":"mesyeux"},"content":"    }"},{"lineNumber":58,"author":{"gitId":"mesyeux"},"content":""},{"lineNumber":59,"author":{"gitId":"mesyeux"},"content":"    public static void readData() {"},{"lineNumber":60,"author":{"gitId":"mesyeux"},"content":"        try {"},{"lineNumber":61,"author":{"gitId":"mesyeux"},"content":"            //reading input and putting into list"},{"lineNumber":62,"author":{"gitId":"mesyeux"},"content":"            tasks \u003d fh.readFromFile(tasks);"},{"lineNumber":63,"author":{"gitId":"mesyeux"},"content":"        } catch (DukeException ex) {"},{"lineNumber":64,"author":{"gitId":"mesyeux"},"content":"            ui.showError(ex.getMessage());"},{"lineNumber":65,"author":{"gitId":"mesyeux"},"content":"        } catch (IOException ex) {"},{"lineNumber":66,"author":{"gitId":"mesyeux"},"content":"            System.out.println(\"Oops! Something went wrong: \" + ex.getMessage());"},{"lineNumber":67,"author":{"gitId":"mesyeux"},"content":"        }"},{"lineNumber":68,"author":{"gitId":"mesyeux"},"content":"    }"},{"lineNumber":69,"author":{"gitId":"mesyeux"},"content":""},{"lineNumber":70,"author":{"gitId":"mesyeux"},"content":"    public static void writeData() {"},{"lineNumber":71,"author":{"gitId":"mesyeux"},"content":"        try {"},{"lineNumber":72,"author":{"gitId":"mesyeux"},"content":"            fh.writeToFile(tasks);"},{"lineNumber":73,"author":{"gitId":"mesyeux"},"content":"        } catch (IOException ex) {"},{"lineNumber":74,"author":{"gitId":"mesyeux"},"content":"            System.out.println(\"Oops! Something went wrong: \" + ex.getMessage());"},{"lineNumber":75,"author":{"gitId":"mesyeux"},"content":"        }"},{"lineNumber":76,"author":{"gitId":"mesyeux"},"content":"    }"},{"lineNumber":77,"author":{"gitId":"mesyeux"},"content":""},{"lineNumber":78,"author":{"gitId":"mesyeux"},"content":""},{"lineNumber":79,"author":{"gitId":"-"},"content":"    public static void main(String[] args) {"},{"lineNumber":80,"author":{"gitId":"mesyeux"},"content":"        new Duke().run();"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":82,"author":{"gitId":"-"},"content":"}"}],"authorContributionMap":{"mesyeux":78,"-":4}},{"path":"src/main/java/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"mesyeux"},"content":"public class DukeException extends Exception {"},{"lineNumber":2,"author":{"gitId":"mesyeux"},"content":"    public DukeException(String message) {"},{"lineNumber":3,"author":{"gitId":"mesyeux"},"content":"        super(message);"},{"lineNumber":4,"author":{"gitId":"mesyeux"},"content":"    }"},{"lineNumber":5,"author":{"gitId":"mesyeux"},"content":"}"}],"authorContributionMap":{"mesyeux":5}},{"path":"src/main/java/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"mesyeux"},"content":"import java.time.LocalDate;"},{"lineNumber":2,"author":{"gitId":"mesyeux"},"content":"import java.time.LocalTime;"},{"lineNumber":3,"author":{"gitId":"mesyeux"},"content":"import java.time.format.DateTimeFormatter;"},{"lineNumber":4,"author":{"gitId":"mesyeux"},"content":""},{"lineNumber":5,"author":{"gitId":"mesyeux"},"content":"/**"},{"lineNumber":6,"author":{"gitId":"mesyeux"},"content":" * Represents a task in the form of an event which has a date,"},{"lineNumber":7,"author":{"gitId":"mesyeux"},"content":" * an event starting time and an event ending time"},{"lineNumber":8,"author":{"gitId":"mesyeux"},"content":" */"},{"lineNumber":9,"author":{"gitId":"mesyeux"},"content":""},{"lineNumber":10,"author":{"gitId":"mesyeux"},"content":"public class Event extends Task {"},{"lineNumber":11,"author":{"gitId":"mesyeux"},"content":"    private final LocalDate date;"},{"lineNumber":12,"author":{"gitId":"mesyeux"},"content":"    private final LocalTime startTime; //in 24h format"},{"lineNumber":13,"author":{"gitId":"mesyeux"},"content":"    private final LocalTime endTime;"},{"lineNumber":14,"author":{"gitId":"mesyeux"},"content":""},{"lineNumber":15,"author":{"gitId":"mesyeux"},"content":"    /**"},{"lineNumber":16,"author":{"gitId":"mesyeux"},"content":"     * Constructor takes in four parameters \u003ccode\u003edescription\u003c/code\u003e,"},{"lineNumber":17,"author":{"gitId":"mesyeux"},"content":"     * \u003ccode\u003edate\u003c/code\u003e, \u003ccode\u003estartTime\u003c/code\u003e and \u003ccode\u003eendTime\u003c/code\u003e"},{"lineNumber":18,"author":{"gitId":"mesyeux"},"content":"     * @param description the description of the event in the form of a \u003ccode\u003eString\u003c/code\u003e"},{"lineNumber":19,"author":{"gitId":"mesyeux"},"content":"     * @param date the date of the event in the form of a \u003ccode\u003eLocalDate\u003c/code\u003e"},{"lineNumber":20,"author":{"gitId":"mesyeux"},"content":"     * @param startTime the starting time of the event in the form of a \u003ccode\u003eLocalTime\u003c/code\u003e"},{"lineNumber":21,"author":{"gitId":"mesyeux"},"content":"     * @param endTime the ending time of the event in the form of a \u003ccode\u003eLocalTime\u003c/code\u003e"},{"lineNumber":22,"author":{"gitId":"mesyeux"},"content":"     */"},{"lineNumber":23,"author":{"gitId":"mesyeux"},"content":"    public Event(String description, LocalDate date, LocalTime startTime, LocalTime endTime) {"},{"lineNumber":24,"author":{"gitId":"mesyeux"},"content":"        super(description);"},{"lineNumber":25,"author":{"gitId":"mesyeux"},"content":"        this.date \u003d date;"},{"lineNumber":26,"author":{"gitId":"mesyeux"},"content":"        this.startTime \u003d startTime;"},{"lineNumber":27,"author":{"gitId":"mesyeux"},"content":"        this.endTime \u003d endTime;"},{"lineNumber":28,"author":{"gitId":"mesyeux"},"content":"    }"},{"lineNumber":29,"author":{"gitId":"mesyeux"},"content":""},{"lineNumber":30,"author":{"gitId":"mesyeux"},"content":"    /**"},{"lineNumber":31,"author":{"gitId":"mesyeux"},"content":"     * A method returning the date of the event"},{"lineNumber":32,"author":{"gitId":"mesyeux"},"content":"     * @return a \u003ccode\u003eLocalDate\u003c/code\u003e object that specifies"},{"lineNumber":33,"author":{"gitId":"mesyeux"},"content":"     * the date of the event"},{"lineNumber":34,"author":{"gitId":"mesyeux"},"content":"     */"},{"lineNumber":35,"author":{"gitId":"mesyeux"},"content":""},{"lineNumber":36,"author":{"gitId":"mesyeux"},"content":"    @Override"},{"lineNumber":37,"author":{"gitId":"mesyeux"},"content":"    public LocalDate getDate() {"},{"lineNumber":38,"author":{"gitId":"mesyeux"},"content":"        return this.date;"},{"lineNumber":39,"author":{"gitId":"mesyeux"},"content":"    }"},{"lineNumber":40,"author":{"gitId":"mesyeux"},"content":""},{"lineNumber":41,"author":{"gitId":"mesyeux"},"content":"    /**"},{"lineNumber":42,"author":{"gitId":"mesyeux"},"content":"     * A method that generates the text to be stored into the text file"},{"lineNumber":43,"author":{"gitId":"mesyeux"},"content":"     * at the end of execution"},{"lineNumber":44,"author":{"gitId":"mesyeux"},"content":"     * @return A \u003ccode\u003eString\u003c/code\u003e text in the proper format to be stored"},{"lineNumber":45,"author":{"gitId":"mesyeux"},"content":"     * into the text file"},{"lineNumber":46,"author":{"gitId":"mesyeux"},"content":"     */"},{"lineNumber":47,"author":{"gitId":"mesyeux"},"content":"    @Override"},{"lineNumber":48,"author":{"gitId":"mesyeux"},"content":"    public String generateText() {"},{"lineNumber":49,"author":{"gitId":"mesyeux"},"content":"        return String.format(\"E # %d # %s # %s %s-%s\", this.isDone ? 1 : 0, this.description, this.date,"},{"lineNumber":50,"author":{"gitId":"mesyeux"},"content":"                this.startTime.format("},{"lineNumber":51,"author":{"gitId":"mesyeux"},"content":"                        DateTimeFormatter.ofPattern(\"HHmm\")),"},{"lineNumber":52,"author":{"gitId":"mesyeux"},"content":"                this.endTime.format("},{"lineNumber":53,"author":{"gitId":"mesyeux"},"content":"                        DateTimeFormatter.ofPattern(\"HHmm\")));"},{"lineNumber":54,"author":{"gitId":"mesyeux"},"content":"    }"},{"lineNumber":55,"author":{"gitId":"mesyeux"},"content":""},{"lineNumber":56,"author":{"gitId":"mesyeux"},"content":"    /**"},{"lineNumber":57,"author":{"gitId":"mesyeux"},"content":"     * A method that returns the date, starting time and ending time of the event"},{"lineNumber":58,"author":{"gitId":"mesyeux"},"content":"     * in the format of MMM-d-yyyy hh:mma-hh:mma"},{"lineNumber":59,"author":{"gitId":"mesyeux"},"content":"     * @return a \u003ccode\u003eString\u003c/code\u003e of the date, starting time and ending time"},{"lineNumber":60,"author":{"gitId":"mesyeux"},"content":"     * of the event"},{"lineNumber":61,"author":{"gitId":"mesyeux"},"content":"     */"},{"lineNumber":62,"author":{"gitId":"mesyeux"},"content":"    public String getTime() {"},{"lineNumber":63,"author":{"gitId":"mesyeux"},"content":"        return \"(at: \" + this.date.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\")) + \" \""},{"lineNumber":64,"author":{"gitId":"mesyeux"},"content":"                + this.startTime.format(DateTimeFormatter.ofPattern(\"hh:mma\")) + \"-\""},{"lineNumber":65,"author":{"gitId":"mesyeux"},"content":"                        + this.endTime.format(DateTimeFormatter.ofPattern(\"hh:mma\")) + \")\";"},{"lineNumber":66,"author":{"gitId":"mesyeux"},"content":"    }"},{"lineNumber":67,"author":{"gitId":"mesyeux"},"content":""},{"lineNumber":68,"author":{"gitId":"mesyeux"},"content":"    @Override"},{"lineNumber":69,"author":{"gitId":"mesyeux"},"content":"    public String toString() {"},{"lineNumber":70,"author":{"gitId":"mesyeux"},"content":"        if (this.isDone) {"},{"lineNumber":71,"author":{"gitId":"mesyeux"},"content":"            return \"[E][X] \" + this.description + this.getTime();"},{"lineNumber":72,"author":{"gitId":"mesyeux"},"content":"        } else {"},{"lineNumber":73,"author":{"gitId":"mesyeux"},"content":"            return \"[E][ ] \" + this.description + this.getTime();"},{"lineNumber":74,"author":{"gitId":"mesyeux"},"content":"        }"},{"lineNumber":75,"author":{"gitId":"mesyeux"},"content":"    }"},{"lineNumber":76,"author":{"gitId":"mesyeux"},"content":"}"}],"authorContributionMap":{"mesyeux":76}},{"path":"src/main/java/FileHandler.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"mesyeux"},"content":"import java.io.File;"},{"lineNumber":2,"author":{"gitId":"mesyeux"},"content":"import java.io.FileWriter;"},{"lineNumber":3,"author":{"gitId":"mesyeux"},"content":"import java.io.IOException;"},{"lineNumber":4,"author":{"gitId":"mesyeux"},"content":"import java.io.PrintWriter;"},{"lineNumber":5,"author":{"gitId":"mesyeux"},"content":"import java.time.LocalDate;"},{"lineNumber":6,"author":{"gitId":"mesyeux"},"content":"import java.time.LocalTime;"},{"lineNumber":7,"author":{"gitId":"mesyeux"},"content":"import java.time.format.DateTimeFormatter;"},{"lineNumber":8,"author":{"gitId":"mesyeux"},"content":"import java.util.Scanner;"},{"lineNumber":9,"author":{"gitId":"mesyeux"},"content":""},{"lineNumber":10,"author":{"gitId":"mesyeux"},"content":"/**"},{"lineNumber":11,"author":{"gitId":"mesyeux"},"content":" * A class that is responsible for the interactions with a text file (i.e"},{"lineNumber":12,"author":{"gitId":"mesyeux"},"content":" * writing to the file and reading from the file)"},{"lineNumber":13,"author":{"gitId":"mesyeux"},"content":" */"},{"lineNumber":14,"author":{"gitId":"mesyeux"},"content":""},{"lineNumber":15,"author":{"gitId":"mesyeux"},"content":"public class FileHandler {"},{"lineNumber":16,"author":{"gitId":"mesyeux"},"content":""},{"lineNumber":17,"author":{"gitId":"mesyeux"},"content":"    public FileHandler() { }"},{"lineNumber":18,"author":{"gitId":"mesyeux"},"content":""},{"lineNumber":19,"author":{"gitId":"mesyeux"},"content":"    /**"},{"lineNumber":20,"author":{"gitId":"mesyeux"},"content":"     * A method that reads a command containing a task and stores it in a task list"},{"lineNumber":21,"author":{"gitId":"mesyeux"},"content":"     * @param command a \u003ccode\u003eString\u003c/code\u003e specifying a task to be stored"},{"lineNumber":22,"author":{"gitId":"mesyeux"},"content":"     * @param tasks a \u003ccode\u003eTaskList\u003c/code\u003e"},{"lineNumber":23,"author":{"gitId":"mesyeux"},"content":"     * @return a \u003ccode\u003eTaskList\u003c/code\u003e with the new task added"},{"lineNumber":24,"author":{"gitId":"mesyeux"},"content":"     * @throws DukeException if the command is not \"T\" (for ToDo),"},{"lineNumber":25,"author":{"gitId":"mesyeux"},"content":"     * \"D\" (for Deadline) or \"E\" (for Event)"},{"lineNumber":26,"author":{"gitId":"mesyeux"},"content":"     */"},{"lineNumber":27,"author":{"gitId":"mesyeux"},"content":"    public TaskList handleFileCommand(String command, TaskList tasks) throws DukeException {"},{"lineNumber":28,"author":{"gitId":"mesyeux"},"content":"        String[] inputs \u003d command.split(\" # \");"},{"lineNumber":29,"author":{"gitId":"mesyeux"},"content":"        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"HHmm\");"},{"lineNumber":30,"author":{"gitId":"mesyeux"},"content":"        String action \u003d inputs[0];"},{"lineNumber":31,"author":{"gitId":"mesyeux"},"content":"        if (action.equals(\"T\")) {"},{"lineNumber":32,"author":{"gitId":"mesyeux"},"content":"            ToDo newTask \u003d new ToDo(inputs[2]);"},{"lineNumber":33,"author":{"gitId":"mesyeux"},"content":"            if (Integer.parseInt(inputs[1]) \u003d\u003d 1) {"},{"lineNumber":34,"author":{"gitId":"mesyeux"},"content":"                newTask.markAsDone();"},{"lineNumber":35,"author":{"gitId":"mesyeux"},"content":"            }"},{"lineNumber":36,"author":{"gitId":"mesyeux"},"content":"            tasks \u003d tasks.addByTask(newTask);"},{"lineNumber":37,"author":{"gitId":"mesyeux"},"content":"        } else if (action.equals(\"D\")) {"},{"lineNumber":38,"author":{"gitId":"mesyeux"},"content":"            String dateAndTime \u003d inputs[3];"},{"lineNumber":39,"author":{"gitId":"mesyeux"},"content":"            String date \u003d dateAndTime.split(\" \")[0];"},{"lineNumber":40,"author":{"gitId":"mesyeux"},"content":"            String time \u003d dateAndTime.split(\" \")[1];"},{"lineNumber":41,"author":{"gitId":"mesyeux"},"content":"            Deadline newDeadline \u003d new Deadline(inputs[2], LocalDate.parse(date),"},{"lineNumber":42,"author":{"gitId":"mesyeux"},"content":"                    LocalTime.parse(time, formatter));"},{"lineNumber":43,"author":{"gitId":"mesyeux"},"content":"            if (Integer.parseInt(inputs[1]) \u003d\u003d 1) {"},{"lineNumber":44,"author":{"gitId":"mesyeux"},"content":"                newDeadline.markAsDone();"},{"lineNumber":45,"author":{"gitId":"mesyeux"},"content":"            }"},{"lineNumber":46,"author":{"gitId":"mesyeux"},"content":"            tasks \u003d tasks.addByTask(newDeadline);"},{"lineNumber":47,"author":{"gitId":"mesyeux"},"content":"        } else if (action.equals(\"E\")) {"},{"lineNumber":48,"author":{"gitId":"mesyeux"},"content":"            String dateAndTime \u003d inputs[3];"},{"lineNumber":49,"author":{"gitId":"mesyeux"},"content":"            String date \u003d dateAndTime.split(\" \")[0];"},{"lineNumber":50,"author":{"gitId":"mesyeux"},"content":"            String startTime \u003d dateAndTime"},{"lineNumber":51,"author":{"gitId":"mesyeux"},"content":"                                    .split(\" \")[1]"},{"lineNumber":52,"author":{"gitId":"mesyeux"},"content":"                                            .split(\"-\")[0];"},{"lineNumber":53,"author":{"gitId":"mesyeux"},"content":"            String endTime \u003d dateAndTime"},{"lineNumber":54,"author":{"gitId":"mesyeux"},"content":"                                    .split(\" \")[1]"},{"lineNumber":55,"author":{"gitId":"mesyeux"},"content":"                                            .split(\"-\")[1];"},{"lineNumber":56,"author":{"gitId":"mesyeux"},"content":"            Event newEvent \u003d new Event(inputs[2], LocalDate.parse(date),"},{"lineNumber":57,"author":{"gitId":"mesyeux"},"content":"                    LocalTime.parse(startTime, formatter),"},{"lineNumber":58,"author":{"gitId":"mesyeux"},"content":"                            LocalTime.parse(endTime, formatter));"},{"lineNumber":59,"author":{"gitId":"mesyeux"},"content":""},{"lineNumber":60,"author":{"gitId":"mesyeux"},"content":"            if (Integer.parseInt(inputs[1]) \u003d\u003d 1) {"},{"lineNumber":61,"author":{"gitId":"mesyeux"},"content":"                newEvent.markAsDone();"},{"lineNumber":62,"author":{"gitId":"mesyeux"},"content":"            }"},{"lineNumber":63,"author":{"gitId":"mesyeux"},"content":"            tasks \u003d tasks.addByTask(newEvent);"},{"lineNumber":64,"author":{"gitId":"mesyeux"},"content":"        } else {"},{"lineNumber":65,"author":{"gitId":"mesyeux"},"content":"            throw new DukeException(\"Sorry! No such command is allowed.\");"},{"lineNumber":66,"author":{"gitId":"mesyeux"},"content":"        }"},{"lineNumber":67,"author":{"gitId":"mesyeux"},"content":"        return tasks;"},{"lineNumber":68,"author":{"gitId":"mesyeux"},"content":"    }"},{"lineNumber":69,"author":{"gitId":"mesyeux"},"content":""},{"lineNumber":70,"author":{"gitId":"mesyeux"},"content":"    /**"},{"lineNumber":71,"author":{"gitId":"mesyeux"},"content":"     * A method that reads from a text file and stores all the tasks specified within"},{"lineNumber":72,"author":{"gitId":"mesyeux"},"content":"     * into a task list"},{"lineNumber":73,"author":{"gitId":"mesyeux"},"content":"     * @param tasks a \u003ccode\u003eTaskList\u003c/code\u003e to store the tasks into"},{"lineNumber":74,"author":{"gitId":"mesyeux"},"content":"     * @return a \u003ccode\u003eTaskList\u003c/code\u003e containing all the new tasks"},{"lineNumber":75,"author":{"gitId":"mesyeux"},"content":"     * read from the file"},{"lineNumber":76,"author":{"gitId":"mesyeux"},"content":"     * @throws IOException"},{"lineNumber":77,"author":{"gitId":"mesyeux"},"content":"     * @throws DukeException"},{"lineNumber":78,"author":{"gitId":"mesyeux"},"content":"     */"},{"lineNumber":79,"author":{"gitId":"mesyeux"},"content":""},{"lineNumber":80,"author":{"gitId":"mesyeux"},"content":"    public TaskList readFromFile(TaskList tasks) throws IOException, DukeException {"},{"lineNumber":81,"author":{"gitId":"mesyeux"},"content":"        File directory \u003d new File(\"data\");"},{"lineNumber":82,"author":{"gitId":"mesyeux"},"content":"        if (!directory.exists()) { //creating directory if it doesn\u0027t exist"},{"lineNumber":83,"author":{"gitId":"mesyeux"},"content":"            directory.mkdir();"},{"lineNumber":84,"author":{"gitId":"mesyeux"},"content":"        }"},{"lineNumber":85,"author":{"gitId":"mesyeux"},"content":"        File f \u003d new File(\"data/duke.txt\");"},{"lineNumber":86,"author":{"gitId":"mesyeux"},"content":"        if (!f.exists()) {"},{"lineNumber":87,"author":{"gitId":"mesyeux"},"content":"            f.createNewFile();"},{"lineNumber":88,"author":{"gitId":"mesyeux"},"content":"        }"},{"lineNumber":89,"author":{"gitId":"mesyeux"},"content":"        Scanner scf \u003d new Scanner(f);"},{"lineNumber":90,"author":{"gitId":"mesyeux"},"content":"        while (scf.hasNext()) {"},{"lineNumber":91,"author":{"gitId":"mesyeux"},"content":"            try {"},{"lineNumber":92,"author":{"gitId":"mesyeux"},"content":"                String nextLine \u003d scf.nextLine();"},{"lineNumber":93,"author":{"gitId":"mesyeux"},"content":"                tasks \u003d handleFileCommand(nextLine, tasks); //input format: deadline 0 return book /by June 6th"},{"lineNumber":94,"author":{"gitId":"mesyeux"},"content":"            } catch (DukeException ex) {"},{"lineNumber":95,"author":{"gitId":"mesyeux"},"content":"                System.out.println(ex);"},{"lineNumber":96,"author":{"gitId":"mesyeux"},"content":"            }"},{"lineNumber":97,"author":{"gitId":"mesyeux"},"content":"        }"},{"lineNumber":98,"author":{"gitId":"mesyeux"},"content":"        return tasks;"},{"lineNumber":99,"author":{"gitId":"mesyeux"},"content":"    }"},{"lineNumber":100,"author":{"gitId":"mesyeux"},"content":""},{"lineNumber":101,"author":{"gitId":"mesyeux"},"content":"    /**"},{"lineNumber":102,"author":{"gitId":"mesyeux"},"content":"     * A method to write all the tasks contained within the task list into a text file"},{"lineNumber":103,"author":{"gitId":"mesyeux"},"content":"     * @param list the \u003ccode\u003eTaskList\u003c/code\u003e that contains the tasks to be written"},{"lineNumber":104,"author":{"gitId":"mesyeux"},"content":"     *             into the text file"},{"lineNumber":105,"author":{"gitId":"mesyeux"},"content":"     * @throws IOException"},{"lineNumber":106,"author":{"gitId":"mesyeux"},"content":"     */"},{"lineNumber":107,"author":{"gitId":"mesyeux"},"content":""},{"lineNumber":108,"author":{"gitId":"mesyeux"},"content":"    public void writeToFile(TaskList list) throws IOException {"},{"lineNumber":109,"author":{"gitId":"mesyeux"},"content":"        //before writing to it, clear file to make sure it is empty and no content is leftover from last run"},{"lineNumber":110,"author":{"gitId":"mesyeux"},"content":"        FileWriter fw \u003d new FileWriter(\"data/duke.txt\");"},{"lineNumber":111,"author":{"gitId":"mesyeux"},"content":"        PrintWriter pw \u003d new PrintWriter(\"data/duke.txt\");"},{"lineNumber":112,"author":{"gitId":"mesyeux"},"content":"        pw.print(\"\");"},{"lineNumber":113,"author":{"gitId":"mesyeux"},"content":"        pw.close();"},{"lineNumber":114,"author":{"gitId":"mesyeux"},"content":"        String textToAdd \u003d \"\";"},{"lineNumber":115,"author":{"gitId":"mesyeux"},"content":"        for (Task t : list.getList()) {"},{"lineNumber":116,"author":{"gitId":"mesyeux"},"content":"            textToAdd \u003d textToAdd + t.generateText() + \"\\n\";"},{"lineNumber":117,"author":{"gitId":"mesyeux"},"content":"        }"},{"lineNumber":118,"author":{"gitId":"mesyeux"},"content":"        fw.write(textToAdd);"},{"lineNumber":119,"author":{"gitId":"mesyeux"},"content":"        fw.close();"},{"lineNumber":120,"author":{"gitId":"mesyeux"},"content":"    }"},{"lineNumber":121,"author":{"gitId":"mesyeux"},"content":""},{"lineNumber":122,"author":{"gitId":"mesyeux"},"content":""},{"lineNumber":123,"author":{"gitId":"mesyeux"},"content":"}"}],"authorContributionMap":{"mesyeux":123}},{"path":"src/main/java/FindCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"mesyeux"},"content":"import java.util.List;"},{"lineNumber":2,"author":{"gitId":"mesyeux"},"content":""},{"lineNumber":3,"author":{"gitId":"mesyeux"},"content":"public class FindCommand extends Command {"},{"lineNumber":4,"author":{"gitId":"mesyeux"},"content":"    public FindCommand(String fullCommand, String action) {"},{"lineNumber":5,"author":{"gitId":"mesyeux"},"content":"        super(fullCommand, action);"},{"lineNumber":6,"author":{"gitId":"mesyeux"},"content":"    }"},{"lineNumber":7,"author":{"gitId":"mesyeux"},"content":""},{"lineNumber":8,"author":{"gitId":"mesyeux"},"content":"    @Override"},{"lineNumber":9,"author":{"gitId":"mesyeux"},"content":"    public String execute(TaskList tasks) throws DukeException {"},{"lineNumber":10,"author":{"gitId":"mesyeux"},"content":"        String response \u003d \"\";"},{"lineNumber":11,"author":{"gitId":"mesyeux"},"content":"        String[] inputs \u003d this.fullCommand.split(\" \");"},{"lineNumber":12,"author":{"gitId":"mesyeux"},"content":"        if (inputs.length \u003d\u003d 1) {"},{"lineNumber":13,"author":{"gitId":"mesyeux"},"content":"            throw new DukeException(\"Please give me a keyword to search for!\");"},{"lineNumber":14,"author":{"gitId":"mesyeux"},"content":"        } else if (inputs.length \u003e 2) {"},{"lineNumber":15,"author":{"gitId":"mesyeux"},"content":"            throw new DukeException(\"Sorry! I can\u0027t search for more than one keyword.\");"},{"lineNumber":16,"author":{"gitId":"mesyeux"},"content":"        } else { }"},{"lineNumber":17,"author":{"gitId":"mesyeux"},"content":"        String keyword \u003d inputs[1];"},{"lineNumber":18,"author":{"gitId":"mesyeux"},"content":"        List\u003cTask\u003e toPrint \u003d tasks.findKeyword(keyword);"},{"lineNumber":19,"author":{"gitId":"mesyeux"},"content":"        for (int i \u003d 1; i \u003c toPrint.size() + 1; i++) {"},{"lineNumber":20,"author":{"gitId":"mesyeux"},"content":"            response \u003d response + i + \".\" + toPrint.get(i - 1).toString() + \"\\n\";"},{"lineNumber":21,"author":{"gitId":"mesyeux"},"content":"        }"},{"lineNumber":22,"author":{"gitId":"mesyeux"},"content":"        return \"Here are the matching tasks in your list:\\n\" + response;"},{"lineNumber":23,"author":{"gitId":"mesyeux"},"content":"    }"},{"lineNumber":24,"author":{"gitId":"mesyeux"},"content":"}"}],"authorContributionMap":{"mesyeux":24}},{"path":"src/main/java/Launcher.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"mesyeux"},"content":"import javafx.application.Application;"},{"lineNumber":2,"author":{"gitId":"mesyeux"},"content":""},{"lineNumber":3,"author":{"gitId":"mesyeux"},"content":"public class Launcher {"},{"lineNumber":4,"author":{"gitId":"mesyeux"},"content":"    public static void main(String[] args) {"},{"lineNumber":5,"author":{"gitId":"mesyeux"},"content":"        Application.launch(Main.class, args);"},{"lineNumber":6,"author":{"gitId":"mesyeux"},"content":"    }"},{"lineNumber":7,"author":{"gitId":"mesyeux"},"content":"}"}],"authorContributionMap":{"mesyeux":7}},{"path":"src/main/java/ListCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"mesyeux"},"content":"/**"},{"lineNumber":2,"author":{"gitId":"mesyeux"},"content":" * Represents a command to list out all the lists"},{"lineNumber":3,"author":{"gitId":"mesyeux"},"content":" * within the task list"},{"lineNumber":4,"author":{"gitId":"mesyeux"},"content":" */"},{"lineNumber":5,"author":{"gitId":"mesyeux"},"content":""},{"lineNumber":6,"author":{"gitId":"mesyeux"},"content":"public class ListCommand extends Command {"},{"lineNumber":7,"author":{"gitId":"mesyeux"},"content":""},{"lineNumber":8,"author":{"gitId":"mesyeux"},"content":"    /**"},{"lineNumber":9,"author":{"gitId":"mesyeux"},"content":"     * Constructor takes in a \u003ccode\u003efullCommand\u003c/code\u003e, the full user input"},{"lineNumber":10,"author":{"gitId":"mesyeux"},"content":"     * consisting of the desired command, and a \u003ccode\u003eaction\u003c/code\u003e which"},{"lineNumber":11,"author":{"gitId":"mesyeux"},"content":"     * in this case should specify \"list\""},{"lineNumber":12,"author":{"gitId":"mesyeux"},"content":"     * @param fullCommand the full user input"},{"lineNumber":13,"author":{"gitId":"mesyeux"},"content":"     * @param action should be \"list\""},{"lineNumber":14,"author":{"gitId":"mesyeux"},"content":"     */"},{"lineNumber":15,"author":{"gitId":"mesyeux"},"content":"    public ListCommand(String fullCommand, String action) {"},{"lineNumber":16,"author":{"gitId":"mesyeux"},"content":"        super(fullCommand, action);"},{"lineNumber":17,"author":{"gitId":"mesyeux"},"content":"    }"},{"lineNumber":18,"author":{"gitId":"mesyeux"},"content":""},{"lineNumber":19,"author":{"gitId":"mesyeux"},"content":"    /**"},{"lineNumber":20,"author":{"gitId":"mesyeux"},"content":"     * Prints out all the tasks in the task list"},{"lineNumber":21,"author":{"gitId":"mesyeux"},"content":"     * @param tasks the task list containing all the tasks"},{"lineNumber":22,"author":{"gitId":"mesyeux"},"content":"     * @throws DukeException"},{"lineNumber":23,"author":{"gitId":"mesyeux"},"content":"     */"},{"lineNumber":24,"author":{"gitId":"mesyeux"},"content":"    @Override"},{"lineNumber":25,"author":{"gitId":"mesyeux"},"content":"    public String execute(TaskList tasks) throws DukeException {"},{"lineNumber":26,"author":{"gitId":"mesyeux"},"content":"        String response;"},{"lineNumber":27,"author":{"gitId":"mesyeux"},"content":"        String[] inputs \u003d this.fullCommand.split(\" \");"},{"lineNumber":28,"author":{"gitId":"mesyeux"},"content":"        if (inputs.length \u003d\u003d 0) {"},{"lineNumber":29,"author":{"gitId":"mesyeux"},"content":"            throw new DukeException(\"OOPS! Please enter a command or say bye so I can go back to sleep!\");"},{"lineNumber":30,"author":{"gitId":"mesyeux"},"content":"        }"},{"lineNumber":31,"author":{"gitId":"mesyeux"},"content":""},{"lineNumber":32,"author":{"gitId":"mesyeux"},"content":"        response \u003d \"Here are the tasks in your list:\\n\" + tasks.listing();"},{"lineNumber":33,"author":{"gitId":"mesyeux"},"content":"        return response;"},{"lineNumber":34,"author":{"gitId":"mesyeux"},"content":"    }"},{"lineNumber":35,"author":{"gitId":"mesyeux"},"content":"}"}],"authorContributionMap":{"mesyeux":35}},{"path":"src/main/java/Main.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"mesyeux"},"content":"import java.io.IOException;"},{"lineNumber":2,"author":{"gitId":"mesyeux"},"content":""},{"lineNumber":3,"author":{"gitId":"mesyeux"},"content":"import javafx.application.Application;"},{"lineNumber":4,"author":{"gitId":"mesyeux"},"content":"import javafx.fxml.FXMLLoader;"},{"lineNumber":5,"author":{"gitId":"mesyeux"},"content":"import javafx.scene.Scene;"},{"lineNumber":6,"author":{"gitId":"mesyeux"},"content":"import javafx.scene.layout.AnchorPane;"},{"lineNumber":7,"author":{"gitId":"mesyeux"},"content":"import javafx.stage.Stage;"},{"lineNumber":8,"author":{"gitId":"mesyeux"},"content":""},{"lineNumber":9,"author":{"gitId":"mesyeux"},"content":"/**"},{"lineNumber":10,"author":{"gitId":"mesyeux"},"content":" * A GUI for Duke using FXML."},{"lineNumber":11,"author":{"gitId":"mesyeux"},"content":" */"},{"lineNumber":12,"author":{"gitId":"mesyeux"},"content":"public class Main extends Application {"},{"lineNumber":13,"author":{"gitId":"mesyeux"},"content":""},{"lineNumber":14,"author":{"gitId":"mesyeux"},"content":"    private Duke duke \u003d new Duke();"},{"lineNumber":15,"author":{"gitId":"mesyeux"},"content":""},{"lineNumber":16,"author":{"gitId":"mesyeux"},"content":"    @Override"},{"lineNumber":17,"author":{"gitId":"mesyeux"},"content":"    public void start(Stage stage) {"},{"lineNumber":18,"author":{"gitId":"mesyeux"},"content":"        try {"},{"lineNumber":19,"author":{"gitId":"mesyeux"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(Main.class.getResource(\"/view/MainWindow.fxml\"));"},{"lineNumber":20,"author":{"gitId":"mesyeux"},"content":"            AnchorPane ap \u003d fxmlLoader.load();"},{"lineNumber":21,"author":{"gitId":"mesyeux"},"content":"            Scene scene \u003d new Scene(ap);"},{"lineNumber":22,"author":{"gitId":"mesyeux"},"content":"            stage.setScene(scene);"},{"lineNumber":23,"author":{"gitId":"mesyeux"},"content":"            stage.setTitle(\"MouMou\");"},{"lineNumber":24,"author":{"gitId":"mesyeux"},"content":"            fxmlLoader.\u003cMainWindow\u003egetController().setDuke(duke);"},{"lineNumber":25,"author":{"gitId":"mesyeux"},"content":"            stage.show();"},{"lineNumber":26,"author":{"gitId":"mesyeux"},"content":"            Duke.readData();"},{"lineNumber":27,"author":{"gitId":"mesyeux"},"content":"        } catch (IOException e) {"},{"lineNumber":28,"author":{"gitId":"mesyeux"},"content":"            e.printStackTrace();"},{"lineNumber":29,"author":{"gitId":"mesyeux"},"content":"        }"},{"lineNumber":30,"author":{"gitId":"mesyeux"},"content":"    }"},{"lineNumber":31,"author":{"gitId":"mesyeux"},"content":"}"}],"authorContributionMap":{"mesyeux":31}},{"path":"src/main/java/MainWindow.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"mesyeux"},"content":"import javafx.fxml.FXML;"},{"lineNumber":2,"author":{"gitId":"mesyeux"},"content":"import javafx.scene.control.Button;"},{"lineNumber":3,"author":{"gitId":"mesyeux"},"content":"import javafx.scene.control.ScrollPane;"},{"lineNumber":4,"author":{"gitId":"mesyeux"},"content":"import javafx.scene.control.TextField;"},{"lineNumber":5,"author":{"gitId":"mesyeux"},"content":"import javafx.scene.image.Image;"},{"lineNumber":6,"author":{"gitId":"mesyeux"},"content":"import javafx.scene.layout.AnchorPane;"},{"lineNumber":7,"author":{"gitId":"mesyeux"},"content":"import javafx.scene.layout.VBox;"},{"lineNumber":8,"author":{"gitId":"mesyeux"},"content":"/**"},{"lineNumber":9,"author":{"gitId":"mesyeux"},"content":" * Controller for MainWindow. Provides the layout for the other controls."},{"lineNumber":10,"author":{"gitId":"mesyeux"},"content":" */"},{"lineNumber":11,"author":{"gitId":"mesyeux"},"content":"public class MainWindow extends AnchorPane {"},{"lineNumber":12,"author":{"gitId":"mesyeux"},"content":"    @FXML"},{"lineNumber":13,"author":{"gitId":"mesyeux"},"content":"    private ScrollPane scrollPane;"},{"lineNumber":14,"author":{"gitId":"mesyeux"},"content":"    @FXML"},{"lineNumber":15,"author":{"gitId":"mesyeux"},"content":"    private VBox dialogContainer;"},{"lineNumber":16,"author":{"gitId":"mesyeux"},"content":"    @FXML"},{"lineNumber":17,"author":{"gitId":"mesyeux"},"content":"    private TextField userInput;"},{"lineNumber":18,"author":{"gitId":"mesyeux"},"content":"    @FXML"},{"lineNumber":19,"author":{"gitId":"mesyeux"},"content":"    private Button sendButton;"},{"lineNumber":20,"author":{"gitId":"mesyeux"},"content":""},{"lineNumber":21,"author":{"gitId":"mesyeux"},"content":"    private Duke duke;"},{"lineNumber":22,"author":{"gitId":"mesyeux"},"content":""},{"lineNumber":23,"author":{"gitId":"mesyeux"},"content":"    private Image userImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaUser.png\"));"},{"lineNumber":24,"author":{"gitId":"mesyeux"},"content":"    private Image dukeImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaDuke.png\"));"},{"lineNumber":25,"author":{"gitId":"mesyeux"},"content":""},{"lineNumber":26,"author":{"gitId":"mesyeux"},"content":"    @FXML"},{"lineNumber":27,"author":{"gitId":"mesyeux"},"content":"    public void initialize() {"},{"lineNumber":28,"author":{"gitId":"mesyeux"},"content":"        scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());"},{"lineNumber":29,"author":{"gitId":"mesyeux"},"content":"    }"},{"lineNumber":30,"author":{"gitId":"mesyeux"},"content":""},{"lineNumber":31,"author":{"gitId":"mesyeux"},"content":"    public void setDuke(Duke d) {"},{"lineNumber":32,"author":{"gitId":"mesyeux"},"content":"        duke \u003d d;"},{"lineNumber":33,"author":{"gitId":"mesyeux"},"content":"    }"},{"lineNumber":34,"author":{"gitId":"mesyeux"},"content":""},{"lineNumber":35,"author":{"gitId":"mesyeux"},"content":"    /**"},{"lineNumber":36,"author":{"gitId":"mesyeux"},"content":"     * Creates two dialog boxes, one echoing user input and the other containing Duke\u0027s reply and then appends them to"},{"lineNumber":37,"author":{"gitId":"mesyeux"},"content":"     * the dialog container. Clears the user input after processing."},{"lineNumber":38,"author":{"gitId":"mesyeux"},"content":"     */"},{"lineNumber":39,"author":{"gitId":"mesyeux"},"content":"    @FXML"},{"lineNumber":40,"author":{"gitId":"mesyeux"},"content":"    private void handleUserInput() {"},{"lineNumber":41,"author":{"gitId":"mesyeux"},"content":"        String input \u003d userInput.getText();"},{"lineNumber":42,"author":{"gitId":"mesyeux"},"content":"        String response \u003d duke.getResponse(input);"},{"lineNumber":43,"author":{"gitId":"mesyeux"},"content":"        dialogContainer.getChildren().addAll("},{"lineNumber":44,"author":{"gitId":"mesyeux"},"content":"                DialogBox.getUserDialog(input, userImage),"},{"lineNumber":45,"author":{"gitId":"mesyeux"},"content":"                DialogBox.getDukeDialog(response, dukeImage)"},{"lineNumber":46,"author":{"gitId":"mesyeux"},"content":"        );"},{"lineNumber":47,"author":{"gitId":"mesyeux"},"content":"        userInput.clear();"},{"lineNumber":48,"author":{"gitId":"mesyeux"},"content":"    }"},{"lineNumber":49,"author":{"gitId":"mesyeux"},"content":"}"}],"authorContributionMap":{"mesyeux":49}},{"path":"src/main/java/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"mesyeux"},"content":"/**"},{"lineNumber":2,"author":{"gitId":"mesyeux"},"content":" * A class that deals with making sense of the user command"},{"lineNumber":3,"author":{"gitId":"mesyeux"},"content":" */"},{"lineNumber":4,"author":{"gitId":"mesyeux"},"content":""},{"lineNumber":5,"author":{"gitId":"mesyeux"},"content":"public class Parser {"},{"lineNumber":6,"author":{"gitId":"mesyeux"},"content":""},{"lineNumber":7,"author":{"gitId":"mesyeux"},"content":"    /**"},{"lineNumber":8,"author":{"gitId":"mesyeux"},"content":"     * A static method that parses the user input in the form of a \u003ccode\u003eString\u003c/code\u003e"},{"lineNumber":9,"author":{"gitId":"mesyeux"},"content":"     * to generate the corresponding \u003ccode\u003eCommand\u003c/code\u003e"},{"lineNumber":10,"author":{"gitId":"mesyeux"},"content":"     * @param userInput the user input in the form of a \u003ccode\u003eString\u003c/code\u003e"},{"lineNumber":11,"author":{"gitId":"mesyeux"},"content":"     * @return a specific type of \u003ccode\u003eCommand\u003c/code\u003e"},{"lineNumber":12,"author":{"gitId":"mesyeux"},"content":"     * @throws DukeException"},{"lineNumber":13,"author":{"gitId":"mesyeux"},"content":"     */"},{"lineNumber":14,"author":{"gitId":"mesyeux"},"content":"    public static Command parse(String userInput) throws DukeException {"},{"lineNumber":15,"author":{"gitId":"mesyeux"},"content":"        String[] inputs \u003d userInput.split(\" \");"},{"lineNumber":16,"author":{"gitId":"mesyeux"},"content":"        if (inputs.length \u003d\u003d 0) {"},{"lineNumber":17,"author":{"gitId":"mesyeux"},"content":"            throw new DukeException(\"OOPS! Please enter a command or say bye so I can go back to sleep!\");"},{"lineNumber":18,"author":{"gitId":"mesyeux"},"content":"        }"},{"lineNumber":19,"author":{"gitId":"mesyeux"},"content":"        String action \u003d inputs[0];"},{"lineNumber":20,"author":{"gitId":"mesyeux"},"content":"        if (action.equals(\"list\")) {"},{"lineNumber":21,"author":{"gitId":"mesyeux"},"content":"            return new ListCommand(userInput, \"list\");"},{"lineNumber":22,"author":{"gitId":"mesyeux"},"content":"        } else if (action.equals(\"done\")) {"},{"lineNumber":23,"author":{"gitId":"mesyeux"},"content":"            return new DoneCommand(userInput, \"done\");"},{"lineNumber":24,"author":{"gitId":"mesyeux"},"content":"        } else if (action.equals(\"todo\")) {"},{"lineNumber":25,"author":{"gitId":"mesyeux"},"content":"            return new AddCommand(userInput, \"todo\");"},{"lineNumber":26,"author":{"gitId":"mesyeux"},"content":"        } else if (action.equals(\"deadline\")) {"},{"lineNumber":27,"author":{"gitId":"mesyeux"},"content":"            return new AddCommand(userInput, \"deadline\");"},{"lineNumber":28,"author":{"gitId":"mesyeux"},"content":"        } else if (action.equals(\"event\")) {"},{"lineNumber":29,"author":{"gitId":"mesyeux"},"content":"            return new AddCommand(userInput, \"event\");"},{"lineNumber":30,"author":{"gitId":"mesyeux"},"content":"        } else if (action.equals(\"delete\")) {"},{"lineNumber":31,"author":{"gitId":"mesyeux"},"content":"            return new DeleteCommand(userInput, \"delete\");"},{"lineNumber":32,"author":{"gitId":"mesyeux"},"content":"        } else if (action.equals(\"date\")) {"},{"lineNumber":33,"author":{"gitId":"mesyeux"},"content":"            return new DateCommand(userInput, \"date\");"},{"lineNumber":34,"author":{"gitId":"mesyeux"},"content":"        } else if (action.equals(\"find\")) {"},{"lineNumber":35,"author":{"gitId":"mesyeux"},"content":"            return new FindCommand(userInput, \"find\");"},{"lineNumber":36,"author":{"gitId":"mesyeux"},"content":"        } else {"},{"lineNumber":37,"author":{"gitId":"mesyeux"},"content":"            throw new DukeException(\"OOPS! Sorry, I have no idea what that means :(\");"},{"lineNumber":38,"author":{"gitId":"mesyeux"},"content":"        }"},{"lineNumber":39,"author":{"gitId":"mesyeux"},"content":"    }"},{"lineNumber":40,"author":{"gitId":"mesyeux"},"content":"}"}],"authorContributionMap":{"mesyeux":40}},{"path":"src/main/java/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"mesyeux"},"content":"import java.time.LocalDate;"},{"lineNumber":2,"author":{"gitId":"mesyeux"},"content":""},{"lineNumber":3,"author":{"gitId":"mesyeux"},"content":"public class Task {"},{"lineNumber":4,"author":{"gitId":"mesyeux"},"content":"    protected final String description;"},{"lineNumber":5,"author":{"gitId":"mesyeux"},"content":"    protected boolean isDone;"},{"lineNumber":6,"author":{"gitId":"mesyeux"},"content":""},{"lineNumber":7,"author":{"gitId":"mesyeux"},"content":"    Task(String description) {"},{"lineNumber":8,"author":{"gitId":"mesyeux"},"content":"        this.description \u003d description;"},{"lineNumber":9,"author":{"gitId":"mesyeux"},"content":"        this.isDone \u003d false;"},{"lineNumber":10,"author":{"gitId":"mesyeux"},"content":"    }"},{"lineNumber":11,"author":{"gitId":"mesyeux"},"content":""},{"lineNumber":12,"author":{"gitId":"mesyeux"},"content":"    public String generateText() {"},{"lineNumber":13,"author":{"gitId":"mesyeux"},"content":"        return this.description;"},{"lineNumber":14,"author":{"gitId":"mesyeux"},"content":"    }"},{"lineNumber":15,"author":{"gitId":"mesyeux"},"content":""},{"lineNumber":16,"author":{"gitId":"mesyeux"},"content":"    public LocalDate getDate() {"},{"lineNumber":17,"author":{"gitId":"mesyeux"},"content":"        return null;"},{"lineNumber":18,"author":{"gitId":"mesyeux"},"content":"    }"},{"lineNumber":19,"author":{"gitId":"mesyeux"},"content":""},{"lineNumber":20,"author":{"gitId":"mesyeux"},"content":"    public void markAsDone() {"},{"lineNumber":21,"author":{"gitId":"mesyeux"},"content":"        this.isDone \u003d true;"},{"lineNumber":22,"author":{"gitId":"mesyeux"},"content":"    }"},{"lineNumber":23,"author":{"gitId":"mesyeux"},"content":""},{"lineNumber":24,"author":{"gitId":"mesyeux"},"content":"    public String getDescription() {"},{"lineNumber":25,"author":{"gitId":"mesyeux"},"content":"        return this.description;"},{"lineNumber":26,"author":{"gitId":"mesyeux"},"content":"    }"},{"lineNumber":27,"author":{"gitId":"mesyeux"},"content":""},{"lineNumber":28,"author":{"gitId":"mesyeux"},"content":"    @Override"},{"lineNumber":29,"author":{"gitId":"mesyeux"},"content":"    public String toString() {"},{"lineNumber":30,"author":{"gitId":"mesyeux"},"content":"        if (isDone) {"},{"lineNumber":31,"author":{"gitId":"mesyeux"},"content":"            return \"[X] \" + description;"},{"lineNumber":32,"author":{"gitId":"mesyeux"},"content":"        } else {"},{"lineNumber":33,"author":{"gitId":"mesyeux"},"content":"            return \"[ ] \" + description;"},{"lineNumber":34,"author":{"gitId":"mesyeux"},"content":"        }"},{"lineNumber":35,"author":{"gitId":"mesyeux"},"content":"    }"},{"lineNumber":36,"author":{"gitId":"mesyeux"},"content":"}"}],"authorContributionMap":{"mesyeux":36}},{"path":"src/main/java/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"mesyeux"},"content":"import java.time.LocalDate;"},{"lineNumber":2,"author":{"gitId":"mesyeux"},"content":"import java.time.LocalTime;"},{"lineNumber":3,"author":{"gitId":"mesyeux"},"content":"import java.time.format.DateTimeFormatter;"},{"lineNumber":4,"author":{"gitId":"mesyeux"},"content":"import java.util.ArrayList;"},{"lineNumber":5,"author":{"gitId":"mesyeux"},"content":"import java.util.List;"},{"lineNumber":6,"author":{"gitId":"mesyeux"},"content":""},{"lineNumber":7,"author":{"gitId":"mesyeux"},"content":"public class TaskList {"},{"lineNumber":8,"author":{"gitId":"mesyeux"},"content":"    private List\u003cTask\u003e tasks;"},{"lineNumber":9,"author":{"gitId":"mesyeux"},"content":"    private int size;"},{"lineNumber":10,"author":{"gitId":"mesyeux"},"content":""},{"lineNumber":11,"author":{"gitId":"mesyeux"},"content":"    public TaskList() {"},{"lineNumber":12,"author":{"gitId":"mesyeux"},"content":"        this.tasks \u003d new ArrayList\u003c\u003e();"},{"lineNumber":13,"author":{"gitId":"mesyeux"},"content":"        this.size \u003d 0;"},{"lineNumber":14,"author":{"gitId":"mesyeux"},"content":"    }"},{"lineNumber":15,"author":{"gitId":"mesyeux"},"content":""},{"lineNumber":16,"author":{"gitId":"mesyeux"},"content":"    public TaskList(List\u003cTask\u003e tasks) {"},{"lineNumber":17,"author":{"gitId":"mesyeux"},"content":"        this.tasks \u003d tasks;"},{"lineNumber":18,"author":{"gitId":"mesyeux"},"content":"        this.size \u003d tasks.size();"},{"lineNumber":19,"author":{"gitId":"mesyeux"},"content":"    }"},{"lineNumber":20,"author":{"gitId":"mesyeux"},"content":""},{"lineNumber":21,"author":{"gitId":"mesyeux"},"content":"    public String listing() {"},{"lineNumber":22,"author":{"gitId":"mesyeux"},"content":"        String output \u003d \"\";"},{"lineNumber":23,"author":{"gitId":"mesyeux"},"content":"        for (int i \u003d 1; i \u003c tasks.size() + 1; i++) {"},{"lineNumber":24,"author":{"gitId":"mesyeux"},"content":"            output \u003d output + i + \".\" + tasks.get(i - 1).toString() + \"\\n\";"},{"lineNumber":25,"author":{"gitId":"mesyeux"},"content":"        }"},{"lineNumber":26,"author":{"gitId":"mesyeux"},"content":"        return output;"},{"lineNumber":27,"author":{"gitId":"mesyeux"},"content":"    }"},{"lineNumber":28,"author":{"gitId":"mesyeux"},"content":""},{"lineNumber":29,"author":{"gitId":"mesyeux"},"content":"    public List\u003cTask\u003e getList() {"},{"lineNumber":30,"author":{"gitId":"mesyeux"},"content":"        return this.tasks;"},{"lineNumber":31,"author":{"gitId":"mesyeux"},"content":"    }"},{"lineNumber":32,"author":{"gitId":"mesyeux"},"content":""},{"lineNumber":33,"author":{"gitId":"mesyeux"},"content":"    public String makeDone(int taskNo) {"},{"lineNumber":34,"author":{"gitId":"mesyeux"},"content":"        tasks.get(taskNo).markAsDone();"},{"lineNumber":35,"author":{"gitId":"mesyeux"},"content":"        return tasks.get(taskNo).toString();"},{"lineNumber":36,"author":{"gitId":"mesyeux"},"content":"    }"},{"lineNumber":37,"author":{"gitId":"mesyeux"},"content":""},{"lineNumber":38,"author":{"gitId":"mesyeux"},"content":"    public int size() {"},{"lineNumber":39,"author":{"gitId":"mesyeux"},"content":"        return this.size;"},{"lineNumber":40,"author":{"gitId":"mesyeux"},"content":"    }"},{"lineNumber":41,"author":{"gitId":"mesyeux"},"content":""},{"lineNumber":42,"author":{"gitId":"mesyeux"},"content":"    public String addByCommand(String fullCommand, String action) {"},{"lineNumber":43,"author":{"gitId":"mesyeux"},"content":"        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"HHmm\");"},{"lineNumber":44,"author":{"gitId":"mesyeux"},"content":"        if (action.equals(\"todo\")) {"},{"lineNumber":45,"author":{"gitId":"mesyeux"},"content":"            ToDo newToDo \u003d new ToDo(fullCommand.substring(5));"},{"lineNumber":46,"author":{"gitId":"mesyeux"},"content":"            tasks.add(newToDo);"},{"lineNumber":47,"author":{"gitId":"mesyeux"},"content":"            this.size++;"},{"lineNumber":48,"author":{"gitId":"mesyeux"},"content":"            return newToDo.toString();"},{"lineNumber":49,"author":{"gitId":"mesyeux"},"content":"        } else if (action.equals(\"deadline\")) {"},{"lineNumber":50,"author":{"gitId":"mesyeux"},"content":"            int indexOfDate \u003d fullCommand.indexOf(\"/\");"},{"lineNumber":51,"author":{"gitId":"mesyeux"},"content":"            String dateAndTime \u003d fullCommand.substring(indexOfDate + 4);"},{"lineNumber":52,"author":{"gitId":"mesyeux"},"content":"            String date \u003d dateAndTime.split(\" \")[0];"},{"lineNumber":53,"author":{"gitId":"mesyeux"},"content":"            String time \u003d dateAndTime.split(\" \")[1];"},{"lineNumber":54,"author":{"gitId":"mesyeux"},"content":"            Deadline newDeadline \u003d new Deadline(fullCommand.substring(9, indexOfDate),"},{"lineNumber":55,"author":{"gitId":"mesyeux"},"content":"                    LocalDate.parse(date),"},{"lineNumber":56,"author":{"gitId":"mesyeux"},"content":"                            LocalTime.parse(time, formatter));"},{"lineNumber":57,"author":{"gitId":"mesyeux"},"content":"            tasks.add(newDeadline);"},{"lineNumber":58,"author":{"gitId":"mesyeux"},"content":"            this.size++;"},{"lineNumber":59,"author":{"gitId":"mesyeux"},"content":"            return newDeadline.toString();"},{"lineNumber":60,"author":{"gitId":"mesyeux"},"content":"        } else { //type \u003d\u003d event"},{"lineNumber":61,"author":{"gitId":"mesyeux"},"content":"            int indexOfDate \u003d fullCommand.indexOf(\"/\");"},{"lineNumber":62,"author":{"gitId":"mesyeux"},"content":""},{"lineNumber":63,"author":{"gitId":"mesyeux"},"content":"            String dateAndTime \u003d fullCommand.substring(indexOfDate + 4);"},{"lineNumber":64,"author":{"gitId":"mesyeux"},"content":"            String date \u003d dateAndTime.split(\" \")[0];"},{"lineNumber":65,"author":{"gitId":"mesyeux"},"content":"            String startTime \u003d dateAndTime"},{"lineNumber":66,"author":{"gitId":"mesyeux"},"content":"                                    .split(\" \")[1]"},{"lineNumber":67,"author":{"gitId":"mesyeux"},"content":"                                            .split(\"-\")[0];"},{"lineNumber":68,"author":{"gitId":"mesyeux"},"content":"            String endTime \u003d dateAndTime"},{"lineNumber":69,"author":{"gitId":"mesyeux"},"content":"                                    .split(\" \")[1]"},{"lineNumber":70,"author":{"gitId":"mesyeux"},"content":"                                            .split(\"-\")[1];"},{"lineNumber":71,"author":{"gitId":"mesyeux"},"content":"            Event newEvent \u003d new Event(fullCommand.substring(6, indexOfDate), LocalDate.parse(date),"},{"lineNumber":72,"author":{"gitId":"mesyeux"},"content":"                    LocalTime.parse(startTime, formatter), LocalTime.parse(endTime, formatter));"},{"lineNumber":73,"author":{"gitId":"mesyeux"},"content":"            tasks.add(newEvent);"},{"lineNumber":74,"author":{"gitId":"mesyeux"},"content":"            this.size++;"},{"lineNumber":75,"author":{"gitId":"mesyeux"},"content":"            return newEvent.toString();"},{"lineNumber":76,"author":{"gitId":"mesyeux"},"content":"        }"},{"lineNumber":77,"author":{"gitId":"mesyeux"},"content":"    }"},{"lineNumber":78,"author":{"gitId":"mesyeux"},"content":""},{"lineNumber":79,"author":{"gitId":"mesyeux"},"content":"    public TaskList addByTask(Task newTask) {"},{"lineNumber":80,"author":{"gitId":"mesyeux"},"content":"        this.tasks.add(newTask);"},{"lineNumber":81,"author":{"gitId":"mesyeux"},"content":"        this.size++;"},{"lineNumber":82,"author":{"gitId":"mesyeux"},"content":"        return this;"},{"lineNumber":83,"author":{"gitId":"mesyeux"},"content":"    }"},{"lineNumber":84,"author":{"gitId":"mesyeux"},"content":""},{"lineNumber":85,"author":{"gitId":"mesyeux"},"content":"    public String remove(int taskNo) {"},{"lineNumber":86,"author":{"gitId":"mesyeux"},"content":"        Task removed \u003d tasks.remove(taskNo);"},{"lineNumber":87,"author":{"gitId":"mesyeux"},"content":"        this.size--;"},{"lineNumber":88,"author":{"gitId":"mesyeux"},"content":"        return removed.toString();"},{"lineNumber":89,"author":{"gitId":"mesyeux"},"content":"    }"},{"lineNumber":90,"author":{"gitId":"mesyeux"},"content":""},{"lineNumber":91,"author":{"gitId":"mesyeux"},"content":"    public List\u003cTask\u003e print(LocalDate d) {"},{"lineNumber":92,"author":{"gitId":"mesyeux"},"content":"        List\u003cTask\u003e toPrint \u003d new ArrayList\u003c\u003e();"},{"lineNumber":93,"author":{"gitId":"mesyeux"},"content":"        for (Task t : tasks) {"},{"lineNumber":94,"author":{"gitId":"mesyeux"},"content":"            if (t.getDate() !\u003d null \u0026\u0026 t.getDate().equals(d)) {"},{"lineNumber":95,"author":{"gitId":"mesyeux"},"content":"                toPrint.add(t);"},{"lineNumber":96,"author":{"gitId":"mesyeux"},"content":"            }"},{"lineNumber":97,"author":{"gitId":"mesyeux"},"content":"        }"},{"lineNumber":98,"author":{"gitId":"mesyeux"},"content":"        return toPrint;"},{"lineNumber":99,"author":{"gitId":"mesyeux"},"content":"    }"},{"lineNumber":100,"author":{"gitId":"mesyeux"},"content":""},{"lineNumber":101,"author":{"gitId":"mesyeux"},"content":"    public List\u003cTask\u003e findKeyword(String keyword) {"},{"lineNumber":102,"author":{"gitId":"mesyeux"},"content":"        List\u003cTask\u003e tasksWithKeywords \u003d new ArrayList\u003c\u003e();"},{"lineNumber":103,"author":{"gitId":"mesyeux"},"content":"        for (Task t : tasks) {"},{"lineNumber":104,"author":{"gitId":"mesyeux"},"content":"            String[] wordsOfDescription \u003d t.getDescription().split(\" \");"},{"lineNumber":105,"author":{"gitId":"mesyeux"},"content":"            for (int i \u003d 0; i \u003c wordsOfDescription.length; i++) {"},{"lineNumber":106,"author":{"gitId":"mesyeux"},"content":"                if (wordsOfDescription[i].equals(keyword)) {"},{"lineNumber":107,"author":{"gitId":"mesyeux"},"content":"                    tasksWithKeywords.add(t);"},{"lineNumber":108,"author":{"gitId":"mesyeux"},"content":"                    break;"},{"lineNumber":109,"author":{"gitId":"mesyeux"},"content":"                }"},{"lineNumber":110,"author":{"gitId":"mesyeux"},"content":"            }"},{"lineNumber":111,"author":{"gitId":"mesyeux"},"content":"        }"},{"lineNumber":112,"author":{"gitId":"mesyeux"},"content":"        return tasksWithKeywords;"},{"lineNumber":113,"author":{"gitId":"mesyeux"},"content":"    }"},{"lineNumber":114,"author":{"gitId":"mesyeux"},"content":"}"}],"authorContributionMap":{"mesyeux":114}},{"path":"src/main/java/ToDo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"mesyeux"},"content":"import java.time.LocalDate;"},{"lineNumber":2,"author":{"gitId":"mesyeux"},"content":""},{"lineNumber":3,"author":{"gitId":"mesyeux"},"content":"public class ToDo extends Task {"},{"lineNumber":4,"author":{"gitId":"mesyeux"},"content":"    public ToDo(String description) {"},{"lineNumber":5,"author":{"gitId":"mesyeux"},"content":"        super(description);"},{"lineNumber":6,"author":{"gitId":"mesyeux"},"content":"    }"},{"lineNumber":7,"author":{"gitId":"mesyeux"},"content":""},{"lineNumber":8,"author":{"gitId":"mesyeux"},"content":"    @Override"},{"lineNumber":9,"author":{"gitId":"mesyeux"},"content":""},{"lineNumber":10,"author":{"gitId":"mesyeux"},"content":"    public String generateText() {"},{"lineNumber":11,"author":{"gitId":"mesyeux"},"content":"        return String.format(\"T # %d # %s\","},{"lineNumber":12,"author":{"gitId":"mesyeux"},"content":"                                this.isDone ? 1 : 0,"},{"lineNumber":13,"author":{"gitId":"mesyeux"},"content":"                                        this.description);"},{"lineNumber":14,"author":{"gitId":"mesyeux"},"content":"    }"},{"lineNumber":15,"author":{"gitId":"mesyeux"},"content":""},{"lineNumber":16,"author":{"gitId":"mesyeux"},"content":"    public LocalDate getDate() {"},{"lineNumber":17,"author":{"gitId":"mesyeux"},"content":"        return null;"},{"lineNumber":18,"author":{"gitId":"mesyeux"},"content":"    }"},{"lineNumber":19,"author":{"gitId":"mesyeux"},"content":""},{"lineNumber":20,"author":{"gitId":"mesyeux"},"content":"    @Override"},{"lineNumber":21,"author":{"gitId":"mesyeux"},"content":"    public String toString() {"},{"lineNumber":22,"author":{"gitId":"mesyeux"},"content":"        if (this.isDone) {"},{"lineNumber":23,"author":{"gitId":"mesyeux"},"content":"            return \"[T][X] \" + this.description;"},{"lineNumber":24,"author":{"gitId":"mesyeux"},"content":"        } else {"},{"lineNumber":25,"author":{"gitId":"mesyeux"},"content":"            return \"[T][ ] \" + this.description;"},{"lineNumber":26,"author":{"gitId":"mesyeux"},"content":"        }"},{"lineNumber":27,"author":{"gitId":"mesyeux"},"content":"    }"},{"lineNumber":28,"author":{"gitId":"mesyeux"},"content":"}"}],"authorContributionMap":{"mesyeux":28}},{"path":"src/main/java/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"mesyeux"},"content":"import java.util.Scanner;"},{"lineNumber":2,"author":{"gitId":"mesyeux"},"content":""},{"lineNumber":3,"author":{"gitId":"mesyeux"},"content":"public class Ui {"},{"lineNumber":4,"author":{"gitId":"mesyeux"},"content":"    private static final String LINE \u003d String.format(\"%\" + 5 + \"s\", \" \")"},{"lineNumber":5,"author":{"gitId":"mesyeux"},"content":"            + \"____________________________________________________________________\";"},{"lineNumber":6,"author":{"gitId":"mesyeux"},"content":"    private final Scanner sc \u003d new Scanner(System.in);"},{"lineNumber":7,"author":{"gitId":"mesyeux"},"content":""},{"lineNumber":8,"author":{"gitId":"mesyeux"},"content":"    public Ui() { }"},{"lineNumber":9,"author":{"gitId":"mesyeux"},"content":""},{"lineNumber":10,"author":{"gitId":"mesyeux"},"content":"    public String readCommand() {"},{"lineNumber":11,"author":{"gitId":"mesyeux"},"content":"        return sc.nextLine();"},{"lineNumber":12,"author":{"gitId":"mesyeux"},"content":"    }"},{"lineNumber":13,"author":{"gitId":"mesyeux"},"content":""},{"lineNumber":14,"author":{"gitId":"mesyeux"},"content":"    //user output at start"},{"lineNumber":15,"author":{"gitId":"mesyeux"},"content":"    public String printStart() {"},{"lineNumber":16,"author":{"gitId":"mesyeux"},"content":"        String logo \u003d"},{"lineNumber":17,"author":{"gitId":"mesyeux"},"content":"                \"      _ __ ___   ___  _   _ _ __ ___   ___  _   _ \\n\""},{"lineNumber":18,"author":{"gitId":"mesyeux"},"content":"                      + \"     | \u0027_ ` _ \\\\ / _ \\\\| | | | \u0027_ ` _ \\\\ / _ \\\\| | | |\\n\""},{"lineNumber":19,"author":{"gitId":"mesyeux"},"content":"                      + \"     | | | | | | (_) | |_| | | | | | | (_) | |_| |\\n\""},{"lineNumber":20,"author":{"gitId":"mesyeux"},"content":"                      + \"     |_| |_| |_|\\\\___/ \\\\__,_|_| |_| |_|\\\\___/ \\\\__,_|\""},{"lineNumber":21,"author":{"gitId":"mesyeux"},"content":"                        + \" is back!\\n     What have you awoken MouMou for?\";"},{"lineNumber":22,"author":{"gitId":"mesyeux"},"content":"        return logo;"},{"lineNumber":23,"author":{"gitId":"mesyeux"},"content":"    }"},{"lineNumber":24,"author":{"gitId":"mesyeux"},"content":""},{"lineNumber":25,"author":{"gitId":"mesyeux"},"content":"    //output at the end"},{"lineNumber":26,"author":{"gitId":"mesyeux"},"content":"    public String printEnd() {"},{"lineNumber":27,"author":{"gitId":"mesyeux"},"content":"        return \"Goodnight! MouMou will go back to sleep now.\";"},{"lineNumber":28,"author":{"gitId":"mesyeux"},"content":"    }"},{"lineNumber":29,"author":{"gitId":"mesyeux"},"content":""},{"lineNumber":30,"author":{"gitId":"mesyeux"},"content":"    public static void printLine() {"},{"lineNumber":31,"author":{"gitId":"mesyeux"},"content":"        System.out.println(LINE);"},{"lineNumber":32,"author":{"gitId":"mesyeux"},"content":"    }"},{"lineNumber":33,"author":{"gitId":"mesyeux"},"content":""},{"lineNumber":34,"author":{"gitId":"mesyeux"},"content":"    public static void print(String str) {"},{"lineNumber":35,"author":{"gitId":"mesyeux"},"content":"        System.out.println(str);"},{"lineNumber":36,"author":{"gitId":"mesyeux"},"content":"    }"},{"lineNumber":37,"author":{"gitId":"mesyeux"},"content":""},{"lineNumber":38,"author":{"gitId":"mesyeux"},"content":"    public void showError(String message) {"},{"lineNumber":39,"author":{"gitId":"mesyeux"},"content":"        System.out.println(LINE);"},{"lineNumber":40,"author":{"gitId":"mesyeux"},"content":"        System.out.println(message);"},{"lineNumber":41,"author":{"gitId":"mesyeux"},"content":"        System.out.println(LINE);"},{"lineNumber":42,"author":{"gitId":"mesyeux"},"content":"    }"},{"lineNumber":43,"author":{"gitId":"mesyeux"},"content":"}"}],"authorContributionMap":{"mesyeux":43}},{"path":"src/main/resources/view/DialogBox.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"mesyeux"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"},{"lineNumber":2,"author":{"gitId":"mesyeux"},"content":""},{"lineNumber":3,"author":{"gitId":"mesyeux"},"content":"\u003c?import javafx.geometry.Insets?\u003e"},{"lineNumber":4,"author":{"gitId":"mesyeux"},"content":"\u003c?import javafx.scene.control.Label?\u003e"},{"lineNumber":5,"author":{"gitId":"mesyeux"},"content":"\u003c?import javafx.scene.image.ImageView?\u003e"},{"lineNumber":6,"author":{"gitId":"mesyeux"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e"},{"lineNumber":7,"author":{"gitId":"mesyeux"},"content":""},{"lineNumber":8,"author":{"gitId":"mesyeux"},"content":"\u003cfx:root alignment\u003d\"TOP_RIGHT\" maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\" prefWidth\u003d\"400.0\" type\u003d\"javafx.scene.layout.HBox\" xmlns\u003d\"http://javafx.com/javafx/15.0.1\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e"},{"lineNumber":9,"author":{"gitId":"mesyeux"},"content":"    \u003cchildren\u003e"},{"lineNumber":10,"author":{"gitId":"mesyeux"},"content":"        \u003cLabel fx:id\u003d\"dialog\" maxHeight\u003d\"1.7976931348623157E308\" minHeight\u003d\"-Infinity\" text\u003d\"Label\" textAlignment\u003d\"CENTER\" wrapText\u003d\"true\" HBox.hgrow\u003d\"ALWAYS\" /\u003e"},{"lineNumber":11,"author":{"gitId":"mesyeux"},"content":"        \u003cImageView fx:id\u003d\"displayPicture\" fitHeight\u003d\"99.0\" fitWidth\u003d\"99.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\" /\u003e"},{"lineNumber":12,"author":{"gitId":"mesyeux"},"content":"    \u003c/children\u003e"},{"lineNumber":13,"author":{"gitId":"mesyeux"},"content":"    \u003cpadding\u003e"},{"lineNumber":14,"author":{"gitId":"mesyeux"},"content":"        \u003cInsets bottom\u003d\"15.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"15.0\" /\u003e"},{"lineNumber":15,"author":{"gitId":"mesyeux"},"content":"    \u003c/padding\u003e"},{"lineNumber":16,"author":{"gitId":"mesyeux"},"content":"\u003c/fx:root\u003e"}],"authorContributionMap":{"mesyeux":16}},{"path":"src/main/resources/view/MainWindow.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"mesyeux"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"},{"lineNumber":2,"author":{"gitId":"mesyeux"},"content":""},{"lineNumber":3,"author":{"gitId":"mesyeux"},"content":"\u003c?import javafx.scene.control.Button?\u003e"},{"lineNumber":4,"author":{"gitId":"mesyeux"},"content":"\u003c?import javafx.scene.control.ScrollPane?\u003e"},{"lineNumber":5,"author":{"gitId":"mesyeux"},"content":"\u003c?import javafx.scene.control.TextField?\u003e"},{"lineNumber":6,"author":{"gitId":"mesyeux"},"content":"\u003c?import javafx.scene.layout.AnchorPane?\u003e"},{"lineNumber":7,"author":{"gitId":"mesyeux"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e"},{"lineNumber":8,"author":{"gitId":"mesyeux"},"content":"\u003c?import javafx.scene.text.Font?\u003e"},{"lineNumber":9,"author":{"gitId":"mesyeux"},"content":""},{"lineNumber":10,"author":{"gitId":"mesyeux"},"content":"\u003cAnchorPane maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefHeight\u003d\"600.0\" prefWidth\u003d\"400.0\" xmlns\u003d\"http://javafx.com/javafx/15.0.1\" xmlns:fx\u003d\"http://javafx.com/fxml/1\" fx:controller\u003d\"MainWindow\"\u003e"},{"lineNumber":11,"author":{"gitId":"mesyeux"},"content":"    \u003cchildren\u003e"},{"lineNumber":12,"author":{"gitId":"mesyeux"},"content":"        \u003cTextField fx:id\u003d\"userInput\" layoutY\u003d\"558.0\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"324.0\" AnchorPane.bottomAnchor\u003d\"1.0\" /\u003e"},{"lineNumber":13,"author":{"gitId":"mesyeux"},"content":"        \u003cButton fx:id\u003d\"sendButton\" layoutX\u003d\"324.0\" layoutY\u003d\"558.0\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"76.0\" text\u003d\"Send\" textAlignment\u003d\"CENTER\" textFill\u003d\"#851414f7\" textOverrun\u003d\"WORD_ELLIPSIS\"\u003e"},{"lineNumber":14,"author":{"gitId":"mesyeux"},"content":"         \u003cfont\u003e"},{"lineNumber":15,"author":{"gitId":"mesyeux"},"content":"            \u003cFont name\u003d\"System Bold\" size\u003d\"13.0\" /\u003e"},{"lineNumber":16,"author":{"gitId":"mesyeux"},"content":"         \u003c/font\u003e\u003c/Button\u003e"},{"lineNumber":17,"author":{"gitId":"mesyeux"},"content":"        \u003cScrollPane fx:id\u003d\"scrollPane\" hbarPolicy\u003d\"NEVER\" hvalue\u003d\"1.0\" prefHeight\u003d\"557.0\" prefWidth\u003d\"400.0\" vvalue\u003d\"1.0\"\u003e"},{"lineNumber":18,"author":{"gitId":"mesyeux"},"content":"            \u003ccontent\u003e"},{"lineNumber":19,"author":{"gitId":"mesyeux"},"content":"                \u003cVBox fx:id\u003d\"dialogContainer\" prefHeight\u003d\"552.0\" prefWidth\u003d\"388.0\" /\u003e"},{"lineNumber":20,"author":{"gitId":"mesyeux"},"content":"            \u003c/content\u003e"},{"lineNumber":21,"author":{"gitId":"mesyeux"},"content":"        \u003c/ScrollPane\u003e"},{"lineNumber":22,"author":{"gitId":"mesyeux"},"content":"    \u003c/children\u003e"},{"lineNumber":23,"author":{"gitId":"mesyeux"},"content":"\u003c/AnchorPane\u003e"}],"authorContributionMap":{"mesyeux":23}},{"path":"text-ui-test/data/duke.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"mesyeux"},"content":"T # 0 # get a goldendoodle "},{"lineNumber":2,"author":{"gitId":"mesyeux"},"content":"E # 0 # ethel\u0027s birthday party  # 2021-01-26 2000-0000"},{"lineNumber":3,"author":{"gitId":"mesyeux"},"content":"T # 0 # get a manicure "}],"authorContributionMap":{"mesyeux":3}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"mesyeux"},"content":"todo get a goldendoodle "},{"lineNumber":2,"author":{"gitId":"mesyeux"},"content":"deadline get present for ethel /by 2021-01-26 1400"},{"lineNumber":3,"author":{"gitId":"mesyeux"},"content":"list"},{"lineNumber":4,"author":{"gitId":"mesyeux"},"content":"event ethel\u0027s birthday party /at 2021-01-26 2000-0000"},{"lineNumber":5,"author":{"gitId":"mesyeux"},"content":"done 2"},{"lineNumber":6,"author":{"gitId":"mesyeux"},"content":"list"},{"lineNumber":7,"author":{"gitId":"mesyeux"},"content":"todo get a manicure "},{"lineNumber":8,"author":{"gitId":"mesyeux"},"content":"date 2021-01-26"},{"lineNumber":9,"author":{"gitId":"mesyeux"},"content":"delete 2"},{"lineNumber":10,"author":{"gitId":"mesyeux"},"content":"list"},{"lineNumber":11,"author":{"gitId":"mesyeux"},"content":"bye"}],"authorContributionMap":{"mesyeux":11}}]
