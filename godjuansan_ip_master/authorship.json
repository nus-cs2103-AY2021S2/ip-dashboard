[{"path":"src/main/java/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"godjuansan"},"content":"public class Deadline extends Task{"},{"lineNumber":2,"author":{"gitId":"godjuansan"},"content":"    private final String type;"},{"lineNumber":3,"author":{"gitId":"godjuansan"},"content":"    private final String time;"},{"lineNumber":4,"author":{"gitId":"godjuansan"},"content":"    Deadline(String job, String time) {"},{"lineNumber":5,"author":{"gitId":"godjuansan"},"content":"        super(job);"},{"lineNumber":6,"author":{"gitId":"godjuansan"},"content":"        this.type \u003d \"D\";"},{"lineNumber":7,"author":{"gitId":"godjuansan"},"content":"        this.time \u003d time;"},{"lineNumber":8,"author":{"gitId":"godjuansan"},"content":"    }"},{"lineNumber":9,"author":{"gitId":"godjuansan"},"content":""},{"lineNumber":10,"author":{"gitId":"godjuansan"},"content":"    Deadline(String job, Boolean done, String time) {"},{"lineNumber":11,"author":{"gitId":"godjuansan"},"content":"        super(job, done);"},{"lineNumber":12,"author":{"gitId":"godjuansan"},"content":"        this.type \u003d \"D\";"},{"lineNumber":13,"author":{"gitId":"godjuansan"},"content":"        this.time \u003d time;"},{"lineNumber":14,"author":{"gitId":"godjuansan"},"content":"    }"},{"lineNumber":15,"author":{"gitId":"godjuansan"},"content":""},{"lineNumber":16,"author":{"gitId":"godjuansan"},"content":"    @Override"},{"lineNumber":17,"author":{"gitId":"godjuansan"},"content":"    public Task doTask() {"},{"lineNumber":18,"author":{"gitId":"godjuansan"},"content":"        return new Deadline(this.job, true, this.time);"},{"lineNumber":19,"author":{"gitId":"godjuansan"},"content":"    }"},{"lineNumber":20,"author":{"gitId":"godjuansan"},"content":""},{"lineNumber":21,"author":{"gitId":"godjuansan"},"content":"    @Override"},{"lineNumber":22,"author":{"gitId":"godjuansan"},"content":"    public String toString() {"},{"lineNumber":23,"author":{"gitId":"godjuansan"},"content":"        return \"[\" + this.type + \"]\" + super.toString() + \"(by:\" + this.time + \")\";"},{"lineNumber":24,"author":{"gitId":"godjuansan"},"content":"    }"},{"lineNumber":25,"author":{"gitId":"godjuansan"},"content":"}"}],"authorContributionMap":{"godjuansan":25}},{"path":"src/main/java/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"godjuansan"},"content":"import java.util.Scanner;"},{"lineNumber":2,"author":{"gitId":"godjuansan"},"content":"import java.util.ArrayList;"},{"lineNumber":3,"author":{"gitId":"godjuansan"},"content":"import java.util.List;"},{"lineNumber":4,"author":{"gitId":"-"},"content":"public class Duke {"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    public static void main(String[] args) {"},{"lineNumber":6,"author":{"gitId":"godjuansan"},"content":"        Scanner sc \u003d new Scanner(System.in);"},{"lineNumber":7,"author":{"gitId":"-"},"content":"        String logo \u003d \" ____        _        \\n\""},{"lineNumber":8,"author":{"gitId":"-"},"content":"                + \"|  _ \\\\ _   _| | _____ \\n\""},{"lineNumber":9,"author":{"gitId":"-"},"content":"                + \"| | | | | | | |/ / _ \\\\\\n\""},{"lineNumber":10,"author":{"gitId":"-"},"content":"                + \"| |_| | |_| |   \u003c  __/\\n\""},{"lineNumber":11,"author":{"gitId":"-"},"content":"                + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\";"},{"lineNumber":12,"author":{"gitId":"godjuansan"},"content":"        String greetings \u003d \"Hi, I am Bebong, a self-centered bot. I can\u0027t do anything for you.\";"},{"lineNumber":13,"author":{"gitId":"godjuansan"},"content":"        String bye \u003d \"Goodbye, hope to not see you again.\";"},{"lineNumber":14,"author":{"gitId":"godjuansan"},"content":"        List\u003cTask\u003e lst \u003d new ArrayList\u003c\u003e();"},{"lineNumber":15,"author":{"gitId":"godjuansan"},"content":"//        System.out.println(\"Hello from\\n\" + logo);"},{"lineNumber":16,"author":{"gitId":"godjuansan"},"content":"        System.out.println(greetings);"},{"lineNumber":17,"author":{"gitId":"godjuansan"},"content":"        while (sc.hasNext()) {"},{"lineNumber":18,"author":{"gitId":"godjuansan"},"content":"            String word \u003d sc.nextLine();"},{"lineNumber":19,"author":{"gitId":"godjuansan"},"content":"            String[] tmp \u003d word.split(\" \");"},{"lineNumber":20,"author":{"gitId":"godjuansan"},"content":"            String command \u003d tmp[0];"},{"lineNumber":21,"author":{"gitId":"godjuansan"},"content":"            if (word.equals(\"bye\")) {"},{"lineNumber":22,"author":{"gitId":"godjuansan"},"content":"                System.out.println(bye);"},{"lineNumber":23,"author":{"gitId":"godjuansan"},"content":"                break;"},{"lineNumber":24,"author":{"gitId":"godjuansan"},"content":"            }"},{"lineNumber":25,"author":{"gitId":"godjuansan"},"content":"            else if (word.equals(\"list\")) {"},{"lineNumber":26,"author":{"gitId":"godjuansan"},"content":"                for (int i\u003d0; i \u003c lst.size(); i++) {"},{"lineNumber":27,"author":{"gitId":"godjuansan"},"content":"                    System.out.print(i+1);"},{"lineNumber":28,"author":{"gitId":"godjuansan"},"content":"                    System.out.print(\".\");"},{"lineNumber":29,"author":{"gitId":"godjuansan"},"content":"                    System.out.println(lst.get(i));"},{"lineNumber":30,"author":{"gitId":"godjuansan"},"content":"                }"},{"lineNumber":31,"author":{"gitId":"godjuansan"},"content":"            }"},{"lineNumber":32,"author":{"gitId":"godjuansan"},"content":"            else if (command.equals(\"done\")) {"},{"lineNumber":33,"author":{"gitId":"godjuansan"},"content":"                try {"},{"lineNumber":34,"author":{"gitId":"godjuansan"},"content":"                    Task currTask \u003d lst.get(Integer.parseInt(tmp[1]) - 1);"},{"lineNumber":35,"author":{"gitId":"godjuansan"},"content":"                    currTask \u003d currTask.doTask();"},{"lineNumber":36,"author":{"gitId":"godjuansan"},"content":"                    lst.set(Integer.parseInt(tmp[1]) - 1, currTask);"},{"lineNumber":37,"author":{"gitId":"godjuansan"},"content":"                    System.out.println(\"Nice I have marked this task as done!\");"},{"lineNumber":38,"author":{"gitId":"godjuansan"},"content":"                    System.out.println(currTask);"},{"lineNumber":39,"author":{"gitId":"godjuansan"},"content":"                }"},{"lineNumber":40,"author":{"gitId":"godjuansan"},"content":"                catch (ArrayIndexOutOfBoundsException e) {"},{"lineNumber":41,"author":{"gitId":"godjuansan"},"content":"                    System.out.println(\"☹ OOPS!!! The description of a done cannot be empty.\");"},{"lineNumber":42,"author":{"gitId":"godjuansan"},"content":"                }"},{"lineNumber":43,"author":{"gitId":"godjuansan"},"content":"            }"},{"lineNumber":44,"author":{"gitId":"godjuansan"},"content":"            else if (command.equals(\"delete\")) {"},{"lineNumber":45,"author":{"gitId":"godjuansan"},"content":"                try {"},{"lineNumber":46,"author":{"gitId":"godjuansan"},"content":"                    Task currTask \u003d lst.get(Integer.parseInt(tmp[1]) - 1);"},{"lineNumber":47,"author":{"gitId":"godjuansan"},"content":"                    System.out.println(\"Noted. I\u0027ve removed this task: \");"},{"lineNumber":48,"author":{"gitId":"godjuansan"},"content":"                    System.out.println(currTask);"},{"lineNumber":49,"author":{"gitId":"godjuansan"},"content":"                    lst.remove(Integer.parseInt(tmp[1]) - 1);"},{"lineNumber":50,"author":{"gitId":"godjuansan"},"content":"                    System.out.println(\"Now you have \" + lst.size() + \" tasks in the list.\");"},{"lineNumber":51,"author":{"gitId":"godjuansan"},"content":"                }"},{"lineNumber":52,"author":{"gitId":"godjuansan"},"content":"                catch (ArrayIndexOutOfBoundsException e) {"},{"lineNumber":53,"author":{"gitId":"godjuansan"},"content":"                    System.out.println(\"☹ OOPS!!! The description of a delete cannot be empty.\");"},{"lineNumber":54,"author":{"gitId":"godjuansan"},"content":"                }"},{"lineNumber":55,"author":{"gitId":"godjuansan"},"content":"            }"},{"lineNumber":56,"author":{"gitId":"godjuansan"},"content":"            else {"},{"lineNumber":57,"author":{"gitId":"godjuansan"},"content":"                try {"},{"lineNumber":58,"author":{"gitId":"godjuansan"},"content":"                    Task task \u003d new Task(\"dummy\");"},{"lineNumber":59,"author":{"gitId":"godjuansan"},"content":"                    if (command.equals(\"todo\")) {"},{"lineNumber":60,"author":{"gitId":"godjuansan"},"content":"                        try {"},{"lineNumber":61,"author":{"gitId":"godjuansan"},"content":"                            String realWord \u003d word.substring(5);"},{"lineNumber":62,"author":{"gitId":"godjuansan"},"content":"                            task \u003d new ToDo(realWord);"},{"lineNumber":63,"author":{"gitId":"godjuansan"},"content":"                            lst.add(task);"},{"lineNumber":64,"author":{"gitId":"godjuansan"},"content":"                        } catch (StringIndexOutOfBoundsException e) {"},{"lineNumber":65,"author":{"gitId":"godjuansan"},"content":"                            throw new NoMeaningException(\"☹ OOPS!!! The description of a todo cannot be empty.\");"},{"lineNumber":66,"author":{"gitId":"godjuansan"},"content":"                        }"},{"lineNumber":67,"author":{"gitId":"godjuansan"},"content":"                    }"},{"lineNumber":68,"author":{"gitId":"godjuansan"},"content":"                    else if (command.equals(\"deadline\")) {"},{"lineNumber":69,"author":{"gitId":"godjuansan"},"content":"                        try {"},{"lineNumber":70,"author":{"gitId":"godjuansan"},"content":"                            String realWord \u003d word.substring(9);"},{"lineNumber":71,"author":{"gitId":"godjuansan"},"content":"                            String[] deadlineWords \u003d realWord.split(\"/by\");"},{"lineNumber":72,"author":{"gitId":"godjuansan"},"content":"                            String deadlineWord \u003d deadlineWords[0];"},{"lineNumber":73,"author":{"gitId":"godjuansan"},"content":"                            String deadlineTime \u003d deadlineWords[1];"},{"lineNumber":74,"author":{"gitId":"godjuansan"},"content":"                            task \u003d new Deadline(deadlineWord, deadlineTime);"},{"lineNumber":75,"author":{"gitId":"godjuansan"},"content":"                            lst.add(task);"},{"lineNumber":76,"author":{"gitId":"godjuansan"},"content":"                        } catch (StringIndexOutOfBoundsException e) {"},{"lineNumber":77,"author":{"gitId":"godjuansan"},"content":"                            throw new NoMeaningException(\"☹ OOPS!!! The description of a deadline cannot be empty.\");"},{"lineNumber":78,"author":{"gitId":"godjuansan"},"content":"                        }"},{"lineNumber":79,"author":{"gitId":"godjuansan"},"content":"                    }"},{"lineNumber":80,"author":{"gitId":"godjuansan"},"content":"                    else if (command.equals(\"event\")) {"},{"lineNumber":81,"author":{"gitId":"godjuansan"},"content":"                        try {"},{"lineNumber":82,"author":{"gitId":"godjuansan"},"content":"                            String realWord \u003d word.substring(6);"},{"lineNumber":83,"author":{"gitId":"godjuansan"},"content":"                            String[] eventWords \u003d realWord.split(\"/at\");"},{"lineNumber":84,"author":{"gitId":"godjuansan"},"content":"                            String eventWord \u003d eventWords[0];"},{"lineNumber":85,"author":{"gitId":"godjuansan"},"content":"                            String eventTime \u003d eventWords[1];"},{"lineNumber":86,"author":{"gitId":"godjuansan"},"content":"                            task \u003d new Event(eventWord, eventTime);"},{"lineNumber":87,"author":{"gitId":"godjuansan"},"content":"                            lst.add(task);"},{"lineNumber":88,"author":{"gitId":"godjuansan"},"content":"                        } catch (StringIndexOutOfBoundsException e) {"},{"lineNumber":89,"author":{"gitId":"godjuansan"},"content":"                            throw new NoMeaningException(\"☹ OOPS!!! The description of a event cannot be empty.\");"},{"lineNumber":90,"author":{"gitId":"godjuansan"},"content":"                        }"},{"lineNumber":91,"author":{"gitId":"godjuansan"},"content":"                    }"},{"lineNumber":92,"author":{"gitId":"godjuansan"},"content":"                    else {"},{"lineNumber":93,"author":{"gitId":"godjuansan"},"content":"                        throw new NoMeaningException(\"☹ OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-()\");"},{"lineNumber":94,"author":{"gitId":"godjuansan"},"content":"                    }"},{"lineNumber":95,"author":{"gitId":"godjuansan"},"content":"                    System.out.println(\"Got it. I\u0027ve added this task:\");"},{"lineNumber":96,"author":{"gitId":"godjuansan"},"content":"                    System.out.println(task);"},{"lineNumber":97,"author":{"gitId":"godjuansan"},"content":"                    System.out.println(\"Now you have \" + lst.size() + \" tasks in the list.\");"},{"lineNumber":98,"author":{"gitId":"godjuansan"},"content":"                }"},{"lineNumber":99,"author":{"gitId":"godjuansan"},"content":"                catch (NoMeaningException e){"},{"lineNumber":100,"author":{"gitId":"godjuansan"},"content":"                    System.out.println(e.getMessage());"},{"lineNumber":101,"author":{"gitId":"godjuansan"},"content":"                }"},{"lineNumber":102,"author":{"gitId":"godjuansan"},"content":"            }"},{"lineNumber":103,"author":{"gitId":"godjuansan"},"content":"        }"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":105,"author":{"gitId":"-"},"content":"}"}],"authorContributionMap":{"godjuansan":96,"-":9}},{"path":"src/main/java/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"godjuansan"},"content":"public class Event extends Task{"},{"lineNumber":2,"author":{"gitId":"godjuansan"},"content":"    private final String type;"},{"lineNumber":3,"author":{"gitId":"godjuansan"},"content":"    private final String time;"},{"lineNumber":4,"author":{"gitId":"godjuansan"},"content":"    Event(String job, String time) {"},{"lineNumber":5,"author":{"gitId":"godjuansan"},"content":"        super(job);"},{"lineNumber":6,"author":{"gitId":"godjuansan"},"content":"        this.type \u003d \"E\";"},{"lineNumber":7,"author":{"gitId":"godjuansan"},"content":"        this.time \u003d time;"},{"lineNumber":8,"author":{"gitId":"godjuansan"},"content":"    }"},{"lineNumber":9,"author":{"gitId":"godjuansan"},"content":""},{"lineNumber":10,"author":{"gitId":"godjuansan"},"content":"    Event(String job, Boolean done, String time) {"},{"lineNumber":11,"author":{"gitId":"godjuansan"},"content":"        super(job, done);"},{"lineNumber":12,"author":{"gitId":"godjuansan"},"content":"        this.type \u003d \"E\";"},{"lineNumber":13,"author":{"gitId":"godjuansan"},"content":"        this.time \u003d time;"},{"lineNumber":14,"author":{"gitId":"godjuansan"},"content":"    }"},{"lineNumber":15,"author":{"gitId":"godjuansan"},"content":""},{"lineNumber":16,"author":{"gitId":"godjuansan"},"content":"    @Override"},{"lineNumber":17,"author":{"gitId":"godjuansan"},"content":"    public Event doTask() {"},{"lineNumber":18,"author":{"gitId":"godjuansan"},"content":"        return new Event(this.job, true, this.time);"},{"lineNumber":19,"author":{"gitId":"godjuansan"},"content":"    }"},{"lineNumber":20,"author":{"gitId":"godjuansan"},"content":""},{"lineNumber":21,"author":{"gitId":"godjuansan"},"content":"    @Override"},{"lineNumber":22,"author":{"gitId":"godjuansan"},"content":"    public String toString() {"},{"lineNumber":23,"author":{"gitId":"godjuansan"},"content":"        return \"[\" + this.type + \"]\" + super.toString() + \"(at:\" + this.time + \")\";"},{"lineNumber":24,"author":{"gitId":"godjuansan"},"content":"    }"},{"lineNumber":25,"author":{"gitId":"godjuansan"},"content":"}"}],"authorContributionMap":{"godjuansan":25}},{"path":"src/main/java/NoMeaningException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"godjuansan"},"content":"public class NoMeaningException extends Exception {"},{"lineNumber":2,"author":{"gitId":"godjuansan"},"content":"    public NoMeaningException(String errorMessage) {"},{"lineNumber":3,"author":{"gitId":"godjuansan"},"content":"        super(errorMessage);"},{"lineNumber":4,"author":{"gitId":"godjuansan"},"content":"    }"},{"lineNumber":5,"author":{"gitId":"godjuansan"},"content":"}"}],"authorContributionMap":{"godjuansan":5}},{"path":"src/main/java/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"godjuansan"},"content":"public class Task {"},{"lineNumber":2,"author":{"gitId":"godjuansan"},"content":"    protected final String job;"},{"lineNumber":3,"author":{"gitId":"godjuansan"},"content":"    private final Boolean done;"},{"lineNumber":4,"author":{"gitId":"godjuansan"},"content":"    public Task(String job) {"},{"lineNumber":5,"author":{"gitId":"godjuansan"},"content":"        this.job \u003d job;"},{"lineNumber":6,"author":{"gitId":"godjuansan"},"content":"        this.done \u003d false;"},{"lineNumber":7,"author":{"gitId":"godjuansan"},"content":"    }"},{"lineNumber":8,"author":{"gitId":"godjuansan"},"content":""},{"lineNumber":9,"author":{"gitId":"godjuansan"},"content":"    public Task(String job, Boolean done) {"},{"lineNumber":10,"author":{"gitId":"godjuansan"},"content":"        this.job \u003d job;"},{"lineNumber":11,"author":{"gitId":"godjuansan"},"content":"        this.done \u003d done;"},{"lineNumber":12,"author":{"gitId":"godjuansan"},"content":"    }"},{"lineNumber":13,"author":{"gitId":"godjuansan"},"content":""},{"lineNumber":14,"author":{"gitId":"godjuansan"},"content":"    public Task doTask() {"},{"lineNumber":15,"author":{"gitId":"godjuansan"},"content":"        return new Task(this.job, true);"},{"lineNumber":16,"author":{"gitId":"godjuansan"},"content":"    }"},{"lineNumber":17,"author":{"gitId":"godjuansan"},"content":""},{"lineNumber":18,"author":{"gitId":"godjuansan"},"content":"    public String getJob() {"},{"lineNumber":19,"author":{"gitId":"godjuansan"},"content":"        return this.job;"},{"lineNumber":20,"author":{"gitId":"godjuansan"},"content":"    }"},{"lineNumber":21,"author":{"gitId":"godjuansan"},"content":""},{"lineNumber":22,"author":{"gitId":"godjuansan"},"content":"    public String toString() {"},{"lineNumber":23,"author":{"gitId":"godjuansan"},"content":"        String status \u003d \"\";"},{"lineNumber":24,"author":{"gitId":"godjuansan"},"content":"        if (done) {"},{"lineNumber":25,"author":{"gitId":"godjuansan"},"content":"            status \u003d \"[X] \";"},{"lineNumber":26,"author":{"gitId":"godjuansan"},"content":"        }"},{"lineNumber":27,"author":{"gitId":"godjuansan"},"content":"        else {"},{"lineNumber":28,"author":{"gitId":"godjuansan"},"content":"            status \u003d \"[ ] \";"},{"lineNumber":29,"author":{"gitId":"godjuansan"},"content":"        }"},{"lineNumber":30,"author":{"gitId":"godjuansan"},"content":"        return status + job;"},{"lineNumber":31,"author":{"gitId":"godjuansan"},"content":"    }"},{"lineNumber":32,"author":{"gitId":"godjuansan"},"content":"}"}],"authorContributionMap":{"godjuansan":32}},{"path":"src/main/java/TaskName.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"godjuansan"},"content":"public enum TaskName {"},{"lineNumber":2,"author":{"gitId":"godjuansan"},"content":"    TODO, DEADLINE, EVENT"},{"lineNumber":3,"author":{"gitId":"godjuansan"},"content":"}"}],"authorContributionMap":{"godjuansan":3}},{"path":"src/main/java/ToDo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"godjuansan"},"content":"public class ToDo extends Task{"},{"lineNumber":2,"author":{"gitId":"godjuansan"},"content":"    private final String type;"},{"lineNumber":3,"author":{"gitId":"godjuansan"},"content":"    ToDo(String job) {"},{"lineNumber":4,"author":{"gitId":"godjuansan"},"content":"        super(job);"},{"lineNumber":5,"author":{"gitId":"godjuansan"},"content":"        this.type \u003d \"T\";"},{"lineNumber":6,"author":{"gitId":"godjuansan"},"content":"    }"},{"lineNumber":7,"author":{"gitId":"godjuansan"},"content":""},{"lineNumber":8,"author":{"gitId":"godjuansan"},"content":"    public ToDo(String job, Boolean done) {"},{"lineNumber":9,"author":{"gitId":"godjuansan"},"content":"        super(job, done);"},{"lineNumber":10,"author":{"gitId":"godjuansan"},"content":"        this.type \u003d \"T\";"},{"lineNumber":11,"author":{"gitId":"godjuansan"},"content":"    }"},{"lineNumber":12,"author":{"gitId":"godjuansan"},"content":""},{"lineNumber":13,"author":{"gitId":"godjuansan"},"content":"    @Override"},{"lineNumber":14,"author":{"gitId":"godjuansan"},"content":"    public Task doTask() {"},{"lineNumber":15,"author":{"gitId":"godjuansan"},"content":"        return new ToDo(this.job, true);"},{"lineNumber":16,"author":{"gitId":"godjuansan"},"content":"    }"},{"lineNumber":17,"author":{"gitId":"godjuansan"},"content":""},{"lineNumber":18,"author":{"gitId":"godjuansan"},"content":"    @Override"},{"lineNumber":19,"author":{"gitId":"godjuansan"},"content":"    public String toString() {"},{"lineNumber":20,"author":{"gitId":"godjuansan"},"content":"        return \"[\" + this.type + \"]\" + super.toString();"},{"lineNumber":21,"author":{"gitId":"godjuansan"},"content":"    }"},{"lineNumber":22,"author":{"gitId":"godjuansan"},"content":"}"}],"authorContributionMap":{"godjuansan":22}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"godjuansan"},"content":"todo borrow book"},{"lineNumber":2,"author":{"gitId":"godjuansan"},"content":"deadline return book /by Sunday"}],"authorContributionMap":{"godjuansan":2}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF"},{"lineNumber":2,"author":{"gitId":"-"},"content":""},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin"},{"lineNumber":5,"author":{"gitId":"-"},"content":""},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run"},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT"},{"lineNumber":8,"author":{"gitId":"-"},"content":""},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder"},{"lineNumber":10,"author":{"gitId":"godjuansan"},"content":"javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\Duke.java"},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 ("},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1"},{"lineNumber":14,"author":{"gitId":"-"},"content":")"},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0"},{"lineNumber":16,"author":{"gitId":"-"},"content":""},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"},{"lineNumber":18,"author":{"gitId":"-"},"content":"java -classpath ..\\bin Duke \u003c input.txt \u003e ACTUAL.TXT"},{"lineNumber":19,"author":{"gitId":"-"},"content":""},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM compare the output to the expected output"},{"lineNumber":21,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT"}],"authorContributionMap":{"godjuansan":1,"-":20}},{"path":"text-ui-test/runtest.sh","fileType":"sh","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"#!/usr/bin/env bash"},{"lineNumber":2,"author":{"gitId":"-"},"content":""},{"lineNumber":3,"author":{"gitId":"-"},"content":"# create bin directory if it doesn\u0027t exist"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if [ ! -d \"../bin\" ]"},{"lineNumber":5,"author":{"gitId":"-"},"content":"then"},{"lineNumber":6,"author":{"gitId":"-"},"content":"    mkdir ../bin"},{"lineNumber":7,"author":{"gitId":"-"},"content":"fi"},{"lineNumber":8,"author":{"gitId":"-"},"content":""},{"lineNumber":9,"author":{"gitId":"-"},"content":"# delete output from previous run"},{"lineNumber":10,"author":{"gitId":"-"},"content":"if [ -e \"./ACTUAL.TXT\" ]"},{"lineNumber":11,"author":{"gitId":"-"},"content":"then"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    rm ACTUAL.TXT"},{"lineNumber":13,"author":{"gitId":"-"},"content":"fi"},{"lineNumber":14,"author":{"gitId":"-"},"content":""},{"lineNumber":15,"author":{"gitId":"-"},"content":"# compile the code into the bin folder, terminates if error occurred"},{"lineNumber":16,"author":{"gitId":"godjuansan"},"content":"if ! javac -cp ../src/main/java -Xlint:none -d ../bin ../src/main/java/Duke.java"},{"lineNumber":17,"author":{"gitId":"-"},"content":"then"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    echo \"********** BUILD FAILURE **********\""},{"lineNumber":19,"author":{"gitId":"-"},"content":"    exit 1"},{"lineNumber":20,"author":{"gitId":"-"},"content":"fi"},{"lineNumber":21,"author":{"gitId":"-"},"content":""},{"lineNumber":22,"author":{"gitId":"-"},"content":"# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"},{"lineNumber":23,"author":{"gitId":"-"},"content":"java -classpath ../bin Duke \u003c input.txt \u003e ACTUAL.TXT"},{"lineNumber":24,"author":{"gitId":"-"},"content":""},{"lineNumber":25,"author":{"gitId":"-"},"content":"# convert to UNIX format"},{"lineNumber":26,"author":{"gitId":"-"},"content":"cp EXPECTED.TXT EXPECTED-UNIX.TXT"},{"lineNumber":27,"author":{"gitId":"-"},"content":"dos2unix ACTUAL.TXT EXPECTED-UNIX.TXT"},{"lineNumber":28,"author":{"gitId":"-"},"content":""},{"lineNumber":29,"author":{"gitId":"-"},"content":"# compare the output to the expected output"},{"lineNumber":30,"author":{"gitId":"-"},"content":"diff ACTUAL.TXT EXPECTED-UNIX.TXT"},{"lineNumber":31,"author":{"gitId":"-"},"content":"if [ $? -eq 0 ]"},{"lineNumber":32,"author":{"gitId":"-"},"content":"then"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    echo \"Test result: PASSED\""},{"lineNumber":34,"author":{"gitId":"-"},"content":"    exit 0"},{"lineNumber":35,"author":{"gitId":"-"},"content":"else"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    echo \"Test result: FAILED\""},{"lineNumber":37,"author":{"gitId":"-"},"content":"    exit 1"},{"lineNumber":38,"author":{"gitId":"-"},"content":"fi"}],"authorContributionMap":{"godjuansan":1,"-":37}}]
