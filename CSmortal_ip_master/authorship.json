[{"path":"src/main/java/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"CSmortal"},"content":"package main.java;"},{"lineNumber":2,"author":{"gitId":"CSmortal"},"content":""},{"lineNumber":3,"author":{"gitId":"CSmortal"},"content":"public class Deadline extends Task {"},{"lineNumber":4,"author":{"gitId":"CSmortal"},"content":"    private String doneBy;"},{"lineNumber":5,"author":{"gitId":"CSmortal"},"content":""},{"lineNumber":6,"author":{"gitId":"CSmortal"},"content":"    public Deadline(String description, String doneBy) {"},{"lineNumber":7,"author":{"gitId":"CSmortal"},"content":"        super(description);"},{"lineNumber":8,"author":{"gitId":"CSmortal"},"content":"        this.doneBy \u003d doneBy;"},{"lineNumber":9,"author":{"gitId":"CSmortal"},"content":"    }"},{"lineNumber":10,"author":{"gitId":"CSmortal"},"content":""},{"lineNumber":11,"author":{"gitId":"CSmortal"},"content":"    public Deadline(String description, String doneBy, boolean isDone) {"},{"lineNumber":12,"author":{"gitId":"CSmortal"},"content":"        super(description, isDone);"},{"lineNumber":13,"author":{"gitId":"CSmortal"},"content":"        this.doneBy \u003d doneBy;"},{"lineNumber":14,"author":{"gitId":"CSmortal"},"content":"    }"},{"lineNumber":15,"author":{"gitId":"CSmortal"},"content":""},{"lineNumber":16,"author":{"gitId":"CSmortal"},"content":"    @Override"},{"lineNumber":17,"author":{"gitId":"CSmortal"},"content":"    public Deadline markAsDone() {"},{"lineNumber":18,"author":{"gitId":"CSmortal"},"content":"        return new Deadline(description, doneBy, true);"},{"lineNumber":19,"author":{"gitId":"CSmortal"},"content":"    }"},{"lineNumber":20,"author":{"gitId":"CSmortal"},"content":""},{"lineNumber":21,"author":{"gitId":"CSmortal"},"content":"    @Override"},{"lineNumber":22,"author":{"gitId":"CSmortal"},"content":"    public String toString() {"},{"lineNumber":23,"author":{"gitId":"CSmortal"},"content":"        return \"[D][\" + getStatusIcon() + \"] \" + description + \" (by: \" + doneBy + \")\";"},{"lineNumber":24,"author":{"gitId":"CSmortal"},"content":"    }"},{"lineNumber":25,"author":{"gitId":"CSmortal"},"content":""},{"lineNumber":26,"author":{"gitId":"CSmortal"},"content":"}"}],"authorContributionMap":{"CSmortal":26}},{"path":"src/main/java/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"CSmortal"},"content":"import main.java.*;"},{"lineNumber":2,"author":{"gitId":"CSmortal"},"content":""},{"lineNumber":3,"author":{"gitId":"CSmortal"},"content":"import java.util.*;"},{"lineNumber":4,"author":{"gitId":"CSmortal"},"content":"import java.util.regex.Matcher;"},{"lineNumber":5,"author":{"gitId":"CSmortal"},"content":"import java.util.regex.Pattern;"},{"lineNumber":6,"author":{"gitId":"CSmortal"},"content":""},{"lineNumber":7,"author":{"gitId":"-"},"content":"public class Duke {"},{"lineNumber":8,"author":{"gitId":"CSmortal"},"content":""},{"lineNumber":9,"author":{"gitId":"CSmortal"},"content":""},{"lineNumber":10,"author":{"gitId":"CSmortal"},"content":""},{"lineNumber":11,"author":{"gitId":"-"},"content":"    public static void main(String[] args) {"},{"lineNumber":12,"author":{"gitId":"CSmortal"},"content":"//        String logo \u003d \" ____        _        \\n\""},{"lineNumber":13,"author":{"gitId":"CSmortal"},"content":"//                + \"|  _ \\\\ _   _| | _____ \\n\""},{"lineNumber":14,"author":{"gitId":"CSmortal"},"content":"//                + \"| | | | | | | |/ / _ \\\\\\n\""},{"lineNumber":15,"author":{"gitId":"CSmortal"},"content":"//                + \"| |_| | |_| |   \u003c  __/\\n\""},{"lineNumber":16,"author":{"gitId":"CSmortal"},"content":"//                + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\";"},{"lineNumber":17,"author":{"gitId":"CSmortal"},"content":"//        System.out.println(\"Hello from\\n\" + logo);"},{"lineNumber":18,"author":{"gitId":"CSmortal"},"content":"        List\u003cTask\u003e taskList \u003d new ArrayList\u003c\u003e();"},{"lineNumber":19,"author":{"gitId":"CSmortal"},"content":""},{"lineNumber":20,"author":{"gitId":"CSmortal"},"content":""},{"lineNumber":21,"author":{"gitId":"CSmortal"},"content":"        String indent \u003d \"         \";"},{"lineNumber":22,"author":{"gitId":"CSmortal"},"content":"        String horizSep \u003d indent + \"________________________________________________\";"},{"lineNumber":23,"author":{"gitId":"CSmortal"},"content":""},{"lineNumber":24,"author":{"gitId":"CSmortal"},"content":"        String greeting \u003d indent + \" Hello! I\u0027m Duke\\n\" + indent + \" What can I do for you?\\n\";"},{"lineNumber":25,"author":{"gitId":"CSmortal"},"content":"        String farewell \u003d indent + \" Bye. Hope to see you again soon!\\n\";"},{"lineNumber":26,"author":{"gitId":"CSmortal"},"content":"        Scanner sc \u003d new Scanner(System.in);"},{"lineNumber":27,"author":{"gitId":"CSmortal"},"content":""},{"lineNumber":28,"author":{"gitId":"CSmortal"},"content":""},{"lineNumber":29,"author":{"gitId":"CSmortal"},"content":""},{"lineNumber":30,"author":{"gitId":"CSmortal"},"content":"        System.out.println(horizSep + \"\\n\" + greeting + horizSep + \"\\n\");"},{"lineNumber":31,"author":{"gitId":"CSmortal"},"content":""},{"lineNumber":32,"author":{"gitId":"CSmortal"},"content":""},{"lineNumber":33,"author":{"gitId":"CSmortal"},"content":"        while (sc.hasNextLine()) {"},{"lineNumber":34,"author":{"gitId":"CSmortal"},"content":""},{"lineNumber":35,"author":{"gitId":"CSmortal"},"content":"            String next \u003d sc.nextLine();"},{"lineNumber":36,"author":{"gitId":"CSmortal"},"content":"            String[] params \u003d next.split(\" \", 2);"},{"lineNumber":37,"author":{"gitId":"CSmortal"},"content":"//            System.out.println(\"params: \" + Arrays.toString(params));"},{"lineNumber":38,"author":{"gitId":"CSmortal"},"content":"//            System.out.println(params.length);"},{"lineNumber":39,"author":{"gitId":"CSmortal"},"content":""},{"lineNumber":40,"author":{"gitId":"CSmortal"},"content":"            try {"},{"lineNumber":41,"author":{"gitId":"CSmortal"},"content":""},{"lineNumber":42,"author":{"gitId":"CSmortal"},"content":"                if (next.equals(\"bye\")) {"},{"lineNumber":43,"author":{"gitId":"CSmortal"},"content":""},{"lineNumber":44,"author":{"gitId":"CSmortal"},"content":"                    System.out.println(horizSep + \"\\n\" + farewell + horizSep + \"\\n\");"},{"lineNumber":45,"author":{"gitId":"CSmortal"},"content":"                    sc.close();"},{"lineNumber":46,"author":{"gitId":"CSmortal"},"content":"                    return;"},{"lineNumber":47,"author":{"gitId":"CSmortal"},"content":""},{"lineNumber":48,"author":{"gitId":"CSmortal"},"content":"                } else if (params[0].equals(\"delete\")) {"},{"lineNumber":49,"author":{"gitId":"CSmortal"},"content":""},{"lineNumber":50,"author":{"gitId":"CSmortal"},"content":"                    try {"},{"lineNumber":51,"author":{"gitId":"CSmortal"},"content":"                        Integer index \u003d Integer.parseInt(params[1]) - 1;"},{"lineNumber":52,"author":{"gitId":"CSmortal"},"content":""},{"lineNumber":53,"author":{"gitId":"CSmortal"},"content":"                        if (index \u003e\u003d taskList.size()) {"},{"lineNumber":54,"author":{"gitId":"CSmortal"},"content":"                            throw new DukeException(\"No such task in the list\");"},{"lineNumber":55,"author":{"gitId":"CSmortal"},"content":"                        }"},{"lineNumber":56,"author":{"gitId":"CSmortal"},"content":""},{"lineNumber":57,"author":{"gitId":"CSmortal"},"content":"                        Task removedTask \u003d taskList.remove(Integer.parseInt(params[1]) - 1);"},{"lineNumber":58,"author":{"gitId":"CSmortal"},"content":"                        System.out.println(horizSep + \"\\n\" +  indent + \" Noted. I\u0027ve removed this task \");"},{"lineNumber":59,"author":{"gitId":"CSmortal"},"content":"                        System.out.println(indent + \"   \" + removedTask);"},{"lineNumber":60,"author":{"gitId":"CSmortal"},"content":"                        System.out.println(indent + \" Now you have \" + taskList.size() + \" tasks in the list.\");"},{"lineNumber":61,"author":{"gitId":"CSmortal"},"content":"                        System.out.println(horizSep + \"\\n\");"},{"lineNumber":62,"author":{"gitId":"CSmortal"},"content":""},{"lineNumber":63,"author":{"gitId":"CSmortal"},"content":"                    } catch (Exception err) {"},{"lineNumber":64,"author":{"gitId":"CSmortal"},"content":"                        throw new DukeException(err.getMessage());"},{"lineNumber":65,"author":{"gitId":"CSmortal"},"content":"                    }"},{"lineNumber":66,"author":{"gitId":"CSmortal"},"content":""},{"lineNumber":67,"author":{"gitId":"CSmortal"},"content":""},{"lineNumber":68,"author":{"gitId":"CSmortal"},"content":""},{"lineNumber":69,"author":{"gitId":"CSmortal"},"content":"                } else if (next.equals(\"list\")) {"},{"lineNumber":70,"author":{"gitId":"CSmortal"},"content":"                    ListIterator\u003cTask\u003e taskIter \u003d taskList.listIterator();"},{"lineNumber":71,"author":{"gitId":"CSmortal"},"content":""},{"lineNumber":72,"author":{"gitId":"CSmortal"},"content":"                    System.out.println(horizSep);"},{"lineNumber":73,"author":{"gitId":"CSmortal"},"content":"                    System.out.println(indent + \" Here are the tasks in your list:\");"},{"lineNumber":74,"author":{"gitId":"CSmortal"},"content":"                    while (taskIter.hasNext()) {"},{"lineNumber":75,"author":{"gitId":"CSmortal"},"content":""},{"lineNumber":76,"author":{"gitId":"CSmortal"},"content":"                        Task curr \u003d taskIter.next();"},{"lineNumber":77,"author":{"gitId":"CSmortal"},"content":""},{"lineNumber":78,"author":{"gitId":"CSmortal"},"content":"                        System.out.println(indent + \" \" + String.valueOf(taskIter.nextIndex()) + \".\" + curr);"},{"lineNumber":79,"author":{"gitId":"CSmortal"},"content":"                    }"},{"lineNumber":80,"author":{"gitId":"CSmortal"},"content":"                    System.out.println(horizSep + \"\\n\");"},{"lineNumber":81,"author":{"gitId":"CSmortal"},"content":""},{"lineNumber":82,"author":{"gitId":"CSmortal"},"content":"                } else if (params[0].equals(\"done\")) {"},{"lineNumber":83,"author":{"gitId":"CSmortal"},"content":""},{"lineNumber":84,"author":{"gitId":"CSmortal"},"content":"                    Integer index \u003d Integer.parseInt(params[1]) - 1;"},{"lineNumber":85,"author":{"gitId":"CSmortal"},"content":""},{"lineNumber":86,"author":{"gitId":"CSmortal"},"content":"                    if (index \u003e\u003d taskList.size()) {"},{"lineNumber":87,"author":{"gitId":"CSmortal"},"content":"                        throw new DukeException(\"No such task in the list\");"},{"lineNumber":88,"author":{"gitId":"CSmortal"},"content":"                    }"},{"lineNumber":89,"author":{"gitId":"CSmortal"},"content":""},{"lineNumber":90,"author":{"gitId":"CSmortal"},"content":"                    taskList.set(index, taskList.get(index).markAsDone());"},{"lineNumber":91,"author":{"gitId":"CSmortal"},"content":"                    System.out.println(horizSep + \"\\n\" + indent + \" Nice! I\u0027ve marked this task as done:\");"},{"lineNumber":92,"author":{"gitId":"CSmortal"},"content":"                    Task curr \u003d taskList.get(index);"},{"lineNumber":93,"author":{"gitId":"CSmortal"},"content":"                    System.out.println(indent + \"   \" + curr);"},{"lineNumber":94,"author":{"gitId":"CSmortal"},"content":"                    System.out.println(horizSep + \"\\n\");"},{"lineNumber":95,"author":{"gitId":"CSmortal"},"content":""},{"lineNumber":96,"author":{"gitId":"CSmortal"},"content":"                } else if (params[0].equals(\"todo\")) {"},{"lineNumber":97,"author":{"gitId":"CSmortal"},"content":"                    if (params.length \u003d\u003d 1) {"},{"lineNumber":98,"author":{"gitId":"CSmortal"},"content":"                        throw new DukeException(\"☹ OOPS!!! The description of a todo cannot be empty\");"},{"lineNumber":99,"author":{"gitId":"CSmortal"},"content":"                    }"},{"lineNumber":100,"author":{"gitId":"CSmortal"},"content":""},{"lineNumber":101,"author":{"gitId":"CSmortal"},"content":"                    Todo newTask \u003d new Todo(params[1]);"},{"lineNumber":102,"author":{"gitId":"CSmortal"},"content":"                    taskList.add(newTask);"},{"lineNumber":103,"author":{"gitId":"CSmortal"},"content":"                    System.out.println(horizSep + \"\\n\" +  indent + \" Got it. I\u0027ve added this task: \");"},{"lineNumber":104,"author":{"gitId":"CSmortal"},"content":"                    System.out.println(indent + \"   \" + newTask);"},{"lineNumber":105,"author":{"gitId":"CSmortal"},"content":"                    System.out.println(indent + \" Now you have \" + taskList.size() + \" tasks in the list.\");"},{"lineNumber":106,"author":{"gitId":"CSmortal"},"content":"                    System.out.println(horizSep + \"\\n\");"},{"lineNumber":107,"author":{"gitId":"CSmortal"},"content":""},{"lineNumber":108,"author":{"gitId":"CSmortal"},"content":""},{"lineNumber":109,"author":{"gitId":"CSmortal"},"content":"                } else if (params[0].equals(\"deadline\")) {"},{"lineNumber":110,"author":{"gitId":"CSmortal"},"content":""},{"lineNumber":111,"author":{"gitId":"CSmortal"},"content":"                    if (params.length \u003d\u003d 1) {"},{"lineNumber":112,"author":{"gitId":"CSmortal"},"content":"                        throw new DukeException(\"☹ OOPS!!! The description of a deadline cannot be empty\");"},{"lineNumber":113,"author":{"gitId":"CSmortal"},"content":"                    }"},{"lineNumber":114,"author":{"gitId":"CSmortal"},"content":""},{"lineNumber":115,"author":{"gitId":"CSmortal"},"content":"                    String[] deadlineParams \u003d params[1].split(\" /by \");"},{"lineNumber":116,"author":{"gitId":"CSmortal"},"content":""},{"lineNumber":117,"author":{"gitId":"CSmortal"},"content":"                    if (deadlineParams.length \u003d\u003d 1) {"},{"lineNumber":118,"author":{"gitId":"CSmortal"},"content":"                        throw new DukeException(\"deadline not given for this Deadline!\");"},{"lineNumber":119,"author":{"gitId":"CSmortal"},"content":"                    }"},{"lineNumber":120,"author":{"gitId":"CSmortal"},"content":""},{"lineNumber":121,"author":{"gitId":"CSmortal"},"content":""},{"lineNumber":122,"author":{"gitId":"CSmortal"},"content":""},{"lineNumber":123,"author":{"gitId":"CSmortal"},"content":"                    Deadline newTask \u003d new Deadline(deadlineParams[0], deadlineParams[1]);"},{"lineNumber":124,"author":{"gitId":"CSmortal"},"content":"                    taskList.add(newTask);"},{"lineNumber":125,"author":{"gitId":"CSmortal"},"content":"                    System.out.println(horizSep + \"\\n\" +  indent + \" Got it. I\u0027ve added this task: \");"},{"lineNumber":126,"author":{"gitId":"CSmortal"},"content":"                    System.out.println(indent + \"   \" + newTask);"},{"lineNumber":127,"author":{"gitId":"CSmortal"},"content":"                    System.out.println(indent + \" Now you have \" + taskList.size() + \" tasks in the list.\");"},{"lineNumber":128,"author":{"gitId":"CSmortal"},"content":"                    System.out.println(horizSep + \"\\n\");"},{"lineNumber":129,"author":{"gitId":"CSmortal"},"content":""},{"lineNumber":130,"author":{"gitId":"CSmortal"},"content":"                } else if (params[0].equals(\"event\")) {"},{"lineNumber":131,"author":{"gitId":"CSmortal"},"content":""},{"lineNumber":132,"author":{"gitId":"CSmortal"},"content":"                    if (params.length \u003d\u003d 1) {"},{"lineNumber":133,"author":{"gitId":"CSmortal"},"content":"                        throw new DukeException(\"☹ OOPS!!! The description of an event cannot be empty\");"},{"lineNumber":134,"author":{"gitId":"CSmortal"},"content":"                    }"},{"lineNumber":135,"author":{"gitId":"CSmortal"},"content":""},{"lineNumber":136,"author":{"gitId":"CSmortal"},"content":"                    String[] eventParams \u003d params[1].split(\" /at \");"},{"lineNumber":137,"author":{"gitId":"CSmortal"},"content":""},{"lineNumber":138,"author":{"gitId":"CSmortal"},"content":"                    if (eventParams.length \u003d\u003d 1) {"},{"lineNumber":139,"author":{"gitId":"CSmortal"},"content":"                        throw new DukeException(\"no date and time given for this Event!\");"},{"lineNumber":140,"author":{"gitId":"CSmortal"},"content":"                    }"},{"lineNumber":141,"author":{"gitId":"CSmortal"},"content":""},{"lineNumber":142,"author":{"gitId":"CSmortal"},"content":"                    String[] timeParams \u003d eventParams[1].split(\" \");"},{"lineNumber":143,"author":{"gitId":"CSmortal"},"content":""},{"lineNumber":144,"author":{"gitId":"CSmortal"},"content":"                    if (timeParams.length \u003d\u003d 1) {"},{"lineNumber":145,"author":{"gitId":"CSmortal"},"content":"                        throw new DukeException(\"time of Event was not specified!\");"},{"lineNumber":146,"author":{"gitId":"CSmortal"},"content":"                    }"},{"lineNumber":147,"author":{"gitId":"CSmortal"},"content":""},{"lineNumber":148,"author":{"gitId":"CSmortal"},"content":"                    Pattern pt \u003d Pattern.compile(\"\\\\d-\\\\dp?a?m\");"},{"lineNumber":149,"author":{"gitId":"CSmortal"},"content":"                    Matcher mt \u003d pt.matcher(timeParams[1]);"},{"lineNumber":150,"author":{"gitId":"CSmortal"},"content":""},{"lineNumber":151,"author":{"gitId":"CSmortal"},"content":"                    if (!mt.find()) {"},{"lineNumber":152,"author":{"gitId":"CSmortal"},"content":"                        throw new DukeException(\"Invalid time range for the event!\");"},{"lineNumber":153,"author":{"gitId":"CSmortal"},"content":"                    }"},{"lineNumber":154,"author":{"gitId":"CSmortal"},"content":""},{"lineNumber":155,"author":{"gitId":"CSmortal"},"content":"                    Event newTask \u003d new Event(eventParams[0], eventParams[1]);"},{"lineNumber":156,"author":{"gitId":"CSmortal"},"content":"                    taskList.add(newTask);"},{"lineNumber":157,"author":{"gitId":"CSmortal"},"content":"                    System.out.println(horizSep + \"\\n\" +  indent + \" Got it. I\u0027ve added this task: \");"},{"lineNumber":158,"author":{"gitId":"CSmortal"},"content":"                    System.out.println(indent + \"   \" + newTask);"},{"lineNumber":159,"author":{"gitId":"CSmortal"},"content":"                    System.out.println(indent + \" Now you have \" + taskList.size() + \" tasks in the list.\");"},{"lineNumber":160,"author":{"gitId":"CSmortal"},"content":"                    System.out.println(horizSep + \"\\n\");"},{"lineNumber":161,"author":{"gitId":"CSmortal"},"content":""},{"lineNumber":162,"author":{"gitId":"CSmortal"},"content":"                } else {"},{"lineNumber":163,"author":{"gitId":"CSmortal"},"content":"                    throw new DukeException(\"☹ OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-()\");"},{"lineNumber":164,"author":{"gitId":"CSmortal"},"content":"                }"},{"lineNumber":165,"author":{"gitId":"CSmortal"},"content":""},{"lineNumber":166,"author":{"gitId":"CSmortal"},"content":""},{"lineNumber":167,"author":{"gitId":"CSmortal"},"content":"            } catch(DukeException exp) {"},{"lineNumber":168,"author":{"gitId":"CSmortal"},"content":"                System.out.println(horizSep);"},{"lineNumber":169,"author":{"gitId":"CSmortal"},"content":"                System.out.println(indent + \" \" + exp);"},{"lineNumber":170,"author":{"gitId":"CSmortal"},"content":"                System.out.println(horizSep + \"\\n\");"},{"lineNumber":171,"author":{"gitId":"CSmortal"},"content":"            }"},{"lineNumber":172,"author":{"gitId":"CSmortal"},"content":""},{"lineNumber":173,"author":{"gitId":"CSmortal"},"content":"            "},{"lineNumber":174,"author":{"gitId":"CSmortal"},"content":"        }"},{"lineNumber":175,"author":{"gitId":"CSmortal"},"content":""},{"lineNumber":176,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":177,"author":{"gitId":"-"},"content":"}"}],"authorContributionMap":{"CSmortal":173,"-":4}},{"path":"src/main/java/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"CSmortal"},"content":"package main.java;"},{"lineNumber":2,"author":{"gitId":"CSmortal"},"content":""},{"lineNumber":3,"author":{"gitId":"CSmortal"},"content":"public class DukeException extends Exception {"},{"lineNumber":4,"author":{"gitId":"CSmortal"},"content":"    private final String err;"},{"lineNumber":5,"author":{"gitId":"CSmortal"},"content":""},{"lineNumber":6,"author":{"gitId":"CSmortal"},"content":"    public DukeException(String err) {"},{"lineNumber":7,"author":{"gitId":"CSmortal"},"content":"        this.err \u003d err;"},{"lineNumber":8,"author":{"gitId":"CSmortal"},"content":"    }"},{"lineNumber":9,"author":{"gitId":"CSmortal"},"content":""},{"lineNumber":10,"author":{"gitId":"CSmortal"},"content":"    @Override"},{"lineNumber":11,"author":{"gitId":"CSmortal"},"content":"    public String toString() {"},{"lineNumber":12,"author":{"gitId":"CSmortal"},"content":"        return err;"},{"lineNumber":13,"author":{"gitId":"CSmortal"},"content":"    }"},{"lineNumber":14,"author":{"gitId":"CSmortal"},"content":"}"}],"authorContributionMap":{"CSmortal":14}},{"path":"src/main/java/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"CSmortal"},"content":"package main.java;"},{"lineNumber":2,"author":{"gitId":"CSmortal"},"content":""},{"lineNumber":3,"author":{"gitId":"CSmortal"},"content":"public class Event extends Task {"},{"lineNumber":4,"author":{"gitId":"CSmortal"},"content":"    private String timeRange;"},{"lineNumber":5,"author":{"gitId":"CSmortal"},"content":""},{"lineNumber":6,"author":{"gitId":"CSmortal"},"content":"    public Event(String description, String timeRange) {"},{"lineNumber":7,"author":{"gitId":"CSmortal"},"content":"        super(description);"},{"lineNumber":8,"author":{"gitId":"CSmortal"},"content":"        this.timeRange \u003d timeRange;"},{"lineNumber":9,"author":{"gitId":"CSmortal"},"content":"    }"},{"lineNumber":10,"author":{"gitId":"CSmortal"},"content":""},{"lineNumber":11,"author":{"gitId":"CSmortal"},"content":"    public Event(String description, String timeRange, boolean isDone) {"},{"lineNumber":12,"author":{"gitId":"CSmortal"},"content":"        super(description, isDone);"},{"lineNumber":13,"author":{"gitId":"CSmortal"},"content":"        this.timeRange \u003d timeRange;"},{"lineNumber":14,"author":{"gitId":"CSmortal"},"content":"    }"},{"lineNumber":15,"author":{"gitId":"CSmortal"},"content":""},{"lineNumber":16,"author":{"gitId":"CSmortal"},"content":"    @Override"},{"lineNumber":17,"author":{"gitId":"CSmortal"},"content":"    public Event markAsDone() {"},{"lineNumber":18,"author":{"gitId":"CSmortal"},"content":"        return new Event(description, timeRange, true);"},{"lineNumber":19,"author":{"gitId":"CSmortal"},"content":"    }"},{"lineNumber":20,"author":{"gitId":"CSmortal"},"content":""},{"lineNumber":21,"author":{"gitId":"CSmortal"},"content":"    @Override"},{"lineNumber":22,"author":{"gitId":"CSmortal"},"content":"    public String toString() {"},{"lineNumber":23,"author":{"gitId":"CSmortal"},"content":"        return \"[E][\" + getStatusIcon() + \"] \" + description + \" (at: \" + timeRange + \")\";"},{"lineNumber":24,"author":{"gitId":"CSmortal"},"content":"    }"},{"lineNumber":25,"author":{"gitId":"CSmortal"},"content":"}"}],"authorContributionMap":{"CSmortal":25}},{"path":"src/main/java/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"CSmortal"},"content":"package main.java;"},{"lineNumber":2,"author":{"gitId":"CSmortal"},"content":""},{"lineNumber":3,"author":{"gitId":"CSmortal"},"content":"public class Task {"},{"lineNumber":4,"author":{"gitId":"CSmortal"},"content":"    protected String description;"},{"lineNumber":5,"author":{"gitId":"CSmortal"},"content":"    protected boolean isDone;"},{"lineNumber":6,"author":{"gitId":"CSmortal"},"content":""},{"lineNumber":7,"author":{"gitId":"CSmortal"},"content":"    public Task(String description) {"},{"lineNumber":8,"author":{"gitId":"CSmortal"},"content":"        this.description \u003d description;"},{"lineNumber":9,"author":{"gitId":"CSmortal"},"content":"        this.isDone \u003d false;"},{"lineNumber":10,"author":{"gitId":"CSmortal"},"content":"    }"},{"lineNumber":11,"author":{"gitId":"CSmortal"},"content":""},{"lineNumber":12,"author":{"gitId":"CSmortal"},"content":"    public Task(String description, boolean isDone) {"},{"lineNumber":13,"author":{"gitId":"CSmortal"},"content":"        this.description \u003d description;"},{"lineNumber":14,"author":{"gitId":"CSmortal"},"content":"        this.isDone \u003d isDone;"},{"lineNumber":15,"author":{"gitId":"CSmortal"},"content":"    }"},{"lineNumber":16,"author":{"gitId":"CSmortal"},"content":""},{"lineNumber":17,"author":{"gitId":"CSmortal"},"content":""},{"lineNumber":18,"author":{"gitId":"CSmortal"},"content":"    public String getStatusIcon() {"},{"lineNumber":19,"author":{"gitId":"CSmortal"},"content":"        return (isDone ? \"\\u2713\" : \"\\u2718\"); //return tick or X symbols"},{"lineNumber":20,"author":{"gitId":"CSmortal"},"content":"    }"},{"lineNumber":21,"author":{"gitId":"CSmortal"},"content":""},{"lineNumber":22,"author":{"gitId":"CSmortal"},"content":"    public Task markAsDone() {"},{"lineNumber":23,"author":{"gitId":"CSmortal"},"content":"        return new Task(description, true);"},{"lineNumber":24,"author":{"gitId":"CSmortal"},"content":"    }"},{"lineNumber":25,"author":{"gitId":"CSmortal"},"content":""},{"lineNumber":26,"author":{"gitId":"CSmortal"},"content":"    @Override"},{"lineNumber":27,"author":{"gitId":"CSmortal"},"content":"    public String toString() {"},{"lineNumber":28,"author":{"gitId":"CSmortal"},"content":"        return description;"},{"lineNumber":29,"author":{"gitId":"CSmortal"},"content":"    }"},{"lineNumber":30,"author":{"gitId":"CSmortal"},"content":"}"}],"authorContributionMap":{"CSmortal":30}},{"path":"src/main/java/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"CSmortal"},"content":"package main.java;"},{"lineNumber":2,"author":{"gitId":"CSmortal"},"content":""},{"lineNumber":3,"author":{"gitId":"CSmortal"},"content":"public class Todo extends Task {"},{"lineNumber":4,"author":{"gitId":"CSmortal"},"content":""},{"lineNumber":5,"author":{"gitId":"CSmortal"},"content":"    public Todo(String description) {"},{"lineNumber":6,"author":{"gitId":"CSmortal"},"content":"        super(description);"},{"lineNumber":7,"author":{"gitId":"CSmortal"},"content":"    }"},{"lineNumber":8,"author":{"gitId":"CSmortal"},"content":""},{"lineNumber":9,"author":{"gitId":"CSmortal"},"content":"    public Todo(String description, boolean isDone) {"},{"lineNumber":10,"author":{"gitId":"CSmortal"},"content":"        super(description, isDone);"},{"lineNumber":11,"author":{"gitId":"CSmortal"},"content":"    }"},{"lineNumber":12,"author":{"gitId":"CSmortal"},"content":""},{"lineNumber":13,"author":{"gitId":"CSmortal"},"content":"    @Override"},{"lineNumber":14,"author":{"gitId":"CSmortal"},"content":"    public Todo markAsDone() {"},{"lineNumber":15,"author":{"gitId":"CSmortal"},"content":"        return new Todo(description, true);"},{"lineNumber":16,"author":{"gitId":"CSmortal"},"content":"    }"},{"lineNumber":17,"author":{"gitId":"CSmortal"},"content":""},{"lineNumber":18,"author":{"gitId":"CSmortal"},"content":"    @Override"},{"lineNumber":19,"author":{"gitId":"CSmortal"},"content":"    public String toString() {"},{"lineNumber":20,"author":{"gitId":"CSmortal"},"content":"        return \"[T][\" + getStatusIcon() + \"] \" + description;"},{"lineNumber":21,"author":{"gitId":"CSmortal"},"content":"    }"},{"lineNumber":22,"author":{"gitId":"CSmortal"},"content":"}"}],"authorContributionMap":{"CSmortal":22}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"CSmortal"},"content":"todo borrow book"},{"lineNumber":2,"author":{"gitId":"CSmortal"},"content":"list"},{"lineNumber":3,"author":{"gitId":"CSmortal"},"content":"deadline return book /by Sunday"},{"lineNumber":4,"author":{"gitId":"CSmortal"},"content":"event project meeting /at Mon 2-4pm"},{"lineNumber":5,"author":{"gitId":"CSmortal"},"content":"done 2"},{"lineNumber":6,"author":{"gitId":"CSmortal"},"content":"list"}],"authorContributionMap":{"CSmortal":6}}]
