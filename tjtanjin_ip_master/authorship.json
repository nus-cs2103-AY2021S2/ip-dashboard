[{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027checkstyle\u0027"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027"},{"lineNumber":6,"author":{"gitId":"-"},"content":"}"},{"lineNumber":7,"author":{"gitId":"-"},"content":""},{"lineNumber":8,"author":{"gitId":"-"},"content":"repositories {"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    mavenCentral()"},{"lineNumber":10,"author":{"gitId":"-"},"content":"}"},{"lineNumber":11,"author":{"gitId":"-"},"content":""},{"lineNumber":12,"author":{"gitId":"-"},"content":"dependencies {"},{"lineNumber":13,"author":{"gitId":"tjtanjin"},"content":"    implementation \u0027com.googlecode.json-simple:json-simple:1.1.1\u0027"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.5.0\u0027"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.5.0\u0027"},{"lineNumber":16,"author":{"gitId":"-"},"content":"}"},{"lineNumber":17,"author":{"gitId":"-"},"content":""},{"lineNumber":18,"author":{"gitId":"-"},"content":"test {"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    useJUnitPlatform()"},{"lineNumber":20,"author":{"gitId":"-"},"content":""},{"lineNumber":21,"author":{"gitId":"-"},"content":"    testLogging {"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\""},{"lineNumber":23,"author":{"gitId":"-"},"content":""},{"lineNumber":24,"author":{"gitId":"-"},"content":"        showExceptions true"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\""},{"lineNumber":26,"author":{"gitId":"-"},"content":"        showCauses true"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        showStackTraces true"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":30,"author":{"gitId":"-"},"content":"}"},{"lineNumber":31,"author":{"gitId":"-"},"content":""},{"lineNumber":32,"author":{"gitId":"-"},"content":"application {"},{"lineNumber":33,"author":{"gitId":"tjtanjin"},"content":"    mainClassName \u003d \"com.tjtanjin.ip.Duke\""},{"lineNumber":34,"author":{"gitId":"-"},"content":"}"},{"lineNumber":35,"author":{"gitId":"-"},"content":""},{"lineNumber":36,"author":{"gitId":"-"},"content":"shadowJar {"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    archiveBaseName \u003d \"duke\""},{"lineNumber":38,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null"},{"lineNumber":39,"author":{"gitId":"-"},"content":"}"},{"lineNumber":40,"author":{"gitId":"-"},"content":""},{"lineNumber":41,"author":{"gitId":"-"},"content":"checkstyle {"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    toolVersion \u003d \u00278.29\u0027"},{"lineNumber":43,"author":{"gitId":"-"},"content":"}"},{"lineNumber":44,"author":{"gitId":"-"},"content":""},{"lineNumber":45,"author":{"gitId":"-"},"content":"run{"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in"},{"lineNumber":47,"author":{"gitId":"-"},"content":"}"}],"authorContributionMap":{"-":45,"tjtanjin":2}},{"path":"src/main/java/com/tjtanjin/ip/AddCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tjtanjin"},"content":"package com.tjtanjin.ip;"},{"lineNumber":2,"author":{"gitId":"tjtanjin"},"content":""},{"lineNumber":3,"author":{"gitId":"tjtanjin"},"content":"import java.time.LocalDate;"},{"lineNumber":4,"author":{"gitId":"tjtanjin"},"content":""},{"lineNumber":5,"author":{"gitId":"tjtanjin"},"content":"/**"},{"lineNumber":6,"author":{"gitId":"tjtanjin"},"content":" * Entry point for handling logic and execution of add command."},{"lineNumber":7,"author":{"gitId":"tjtanjin"},"content":" */"},{"lineNumber":8,"author":{"gitId":"tjtanjin"},"content":"public class AddCommand {"},{"lineNumber":9,"author":{"gitId":"tjtanjin"},"content":""},{"lineNumber":10,"author":{"gitId":"tjtanjin"},"content":"    /**"},{"lineNumber":11,"author":{"gitId":"tjtanjin"},"content":"     * Forwards the add task operation to TaskList."},{"lineNumber":12,"author":{"gitId":"tjtanjin"},"content":"     * @param taskType type of task (todo, deadline or event)"},{"lineNumber":13,"author":{"gitId":"tjtanjin"},"content":"     * @param taskName name of task"},{"lineNumber":14,"author":{"gitId":"tjtanjin"},"content":"     * @param taskDates array of dates"},{"lineNumber":15,"author":{"gitId":"tjtanjin"},"content":"     */"},{"lineNumber":16,"author":{"gitId":"tjtanjin"},"content":"    public void execute(TaskHandler taskList, String taskType, String taskName, LocalDate[] taskDates) {"},{"lineNumber":17,"author":{"gitId":"tjtanjin"},"content":"        taskList.addTask(taskType, taskName, taskDates);"},{"lineNumber":18,"author":{"gitId":"tjtanjin"},"content":"    }"},{"lineNumber":19,"author":{"gitId":"tjtanjin"},"content":"}"}],"authorContributionMap":{"tjtanjin":19}},{"path":"src/main/java/com/tjtanjin/ip/ByeCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tjtanjin"},"content":"package com.tjtanjin.ip;"},{"lineNumber":2,"author":{"gitId":"tjtanjin"},"content":""},{"lineNumber":3,"author":{"gitId":"tjtanjin"},"content":"/**"},{"lineNumber":4,"author":{"gitId":"tjtanjin"},"content":" * Entry point for handling logic and execution of bye command."},{"lineNumber":5,"author":{"gitId":"tjtanjin"},"content":" */"},{"lineNumber":6,"author":{"gitId":"tjtanjin"},"content":"public class ByeCommand {"},{"lineNumber":7,"author":{"gitId":"tjtanjin"},"content":""},{"lineNumber":8,"author":{"gitId":"tjtanjin"},"content":"    /**"},{"lineNumber":9,"author":{"gitId":"tjtanjin"},"content":"     * Exits the program."},{"lineNumber":10,"author":{"gitId":"tjtanjin"},"content":"     */"},{"lineNumber":11,"author":{"gitId":"tjtanjin"},"content":"    public void execute() {"},{"lineNumber":12,"author":{"gitId":"tjtanjin"},"content":"        Ui.showInfo(\"Bye! See you later :D\");"},{"lineNumber":13,"author":{"gitId":"tjtanjin"},"content":"        System.exit(0);"},{"lineNumber":14,"author":{"gitId":"tjtanjin"},"content":"    }"},{"lineNumber":15,"author":{"gitId":"tjtanjin"},"content":"}"}],"authorContributionMap":{"tjtanjin":15}},{"path":"src/main/java/com/tjtanjin/ip/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tjtanjin"},"content":"package com.tjtanjin.ip;"},{"lineNumber":2,"author":{"gitId":"tjtanjin"},"content":""},{"lineNumber":3,"author":{"gitId":"tjtanjin"},"content":"import java.time.LocalDate;"},{"lineNumber":4,"author":{"gitId":"tjtanjin"},"content":"import java.time.format.DateTimeFormatter;"},{"lineNumber":5,"author":{"gitId":"tjtanjin"},"content":""},{"lineNumber":6,"author":{"gitId":"tjtanjin"},"content":"/**"},{"lineNumber":7,"author":{"gitId":"tjtanjin"},"content":" * Deadline is a child class of Task, containing additional"},{"lineNumber":8,"author":{"gitId":"tjtanjin"},"content":" * support for an endDate."},{"lineNumber":9,"author":{"gitId":"tjtanjin"},"content":" */"},{"lineNumber":10,"author":{"gitId":"tjtanjin"},"content":"public class Deadline extends Task {"},{"lineNumber":11,"author":{"gitId":"tjtanjin"},"content":"    private final LocalDate endDate;"},{"lineNumber":12,"author":{"gitId":"tjtanjin"},"content":""},{"lineNumber":13,"author":{"gitId":"tjtanjin"},"content":"    /**"},{"lineNumber":14,"author":{"gitId":"tjtanjin"},"content":"     * Constructor for Deadline class."},{"lineNumber":15,"author":{"gitId":"tjtanjin"},"content":"     * @param taskName name of task"},{"lineNumber":16,"author":{"gitId":"tjtanjin"},"content":"     * @param status task completion status"},{"lineNumber":17,"author":{"gitId":"tjtanjin"},"content":"     * @param taskDates array of dates (defaults to first element for deadline end date)"},{"lineNumber":18,"author":{"gitId":"tjtanjin"},"content":"     */"},{"lineNumber":19,"author":{"gitId":"tjtanjin"},"content":"    public Deadline(String taskName, String status, LocalDate[] taskDates) {"},{"lineNumber":20,"author":{"gitId":"tjtanjin"},"content":"        super(taskName, status, \"DEADLINE\");"},{"lineNumber":21,"author":{"gitId":"tjtanjin"},"content":"        this.endDate \u003d taskDates[0];"},{"lineNumber":22,"author":{"gitId":"tjtanjin"},"content":"    }"},{"lineNumber":23,"author":{"gitId":"tjtanjin"},"content":""},{"lineNumber":24,"author":{"gitId":"tjtanjin"},"content":"    @Override"},{"lineNumber":25,"author":{"gitId":"tjtanjin"},"content":"    public LocalDate[] getDates() {"},{"lineNumber":26,"author":{"gitId":"tjtanjin"},"content":"        LocalDate[] taskDates \u003d new LocalDate[1];"},{"lineNumber":27,"author":{"gitId":"tjtanjin"},"content":"        taskDates[0] \u003d this.endDate;"},{"lineNumber":28,"author":{"gitId":"tjtanjin"},"content":"        return taskDates;"},{"lineNumber":29,"author":{"gitId":"tjtanjin"},"content":"    }"},{"lineNumber":30,"author":{"gitId":"tjtanjin"},"content":""},{"lineNumber":31,"author":{"gitId":"tjtanjin"},"content":"    @Override"},{"lineNumber":32,"author":{"gitId":"tjtanjin"},"content":"    public String toString() {"},{"lineNumber":33,"author":{"gitId":"tjtanjin"},"content":"        return super.toString()"},{"lineNumber":34,"author":{"gitId":"tjtanjin"},"content":"                + \" (by: \" + this.endDate.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\")) + \")\";"},{"lineNumber":35,"author":{"gitId":"tjtanjin"},"content":"    }"},{"lineNumber":36,"author":{"gitId":"tjtanjin"},"content":"}"}],"authorContributionMap":{"tjtanjin":36}},{"path":"src/main/java/com/tjtanjin/ip/DeleteCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tjtanjin"},"content":"package com.tjtanjin.ip;"},{"lineNumber":2,"author":{"gitId":"tjtanjin"},"content":""},{"lineNumber":3,"author":{"gitId":"tjtanjin"},"content":"/**"},{"lineNumber":4,"author":{"gitId":"tjtanjin"},"content":" * Entry point for handling logic and execution of delete command."},{"lineNumber":5,"author":{"gitId":"tjtanjin"},"content":" */"},{"lineNumber":6,"author":{"gitId":"tjtanjin"},"content":"public class DeleteCommand {"},{"lineNumber":7,"author":{"gitId":"tjtanjin"},"content":"    /**"},{"lineNumber":8,"author":{"gitId":"tjtanjin"},"content":"     * Forwards the delete task operation to TaskList."},{"lineNumber":9,"author":{"gitId":"tjtanjin"},"content":"     * @param index of task to delete"},{"lineNumber":10,"author":{"gitId":"tjtanjin"},"content":"     */"},{"lineNumber":11,"author":{"gitId":"tjtanjin"},"content":"    public void execute(TaskHandler taskList, int index) {"},{"lineNumber":12,"author":{"gitId":"tjtanjin"},"content":"        taskList.deleteTask(index);"},{"lineNumber":13,"author":{"gitId":"tjtanjin"},"content":"    }"},{"lineNumber":14,"author":{"gitId":"tjtanjin"},"content":"}"}],"authorContributionMap":{"tjtanjin":14}},{"path":"src/main/java/com/tjtanjin/ip/DoneCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tjtanjin"},"content":"package com.tjtanjin.ip;"},{"lineNumber":2,"author":{"gitId":"tjtanjin"},"content":""},{"lineNumber":3,"author":{"gitId":"tjtanjin"},"content":"/**"},{"lineNumber":4,"author":{"gitId":"tjtanjin"},"content":" * Entry point for handling logic and execution of done command."},{"lineNumber":5,"author":{"gitId":"tjtanjin"},"content":" */"},{"lineNumber":6,"author":{"gitId":"tjtanjin"},"content":"public class DoneCommand {"},{"lineNumber":7,"author":{"gitId":"tjtanjin"},"content":""},{"lineNumber":8,"author":{"gitId":"tjtanjin"},"content":"    /**"},{"lineNumber":9,"author":{"gitId":"tjtanjin"},"content":"     * Forwards the mark task as done operation to TaskList."},{"lineNumber":10,"author":{"gitId":"tjtanjin"},"content":"     * @param index of task to mark as done"},{"lineNumber":11,"author":{"gitId":"tjtanjin"},"content":"     */"},{"lineNumber":12,"author":{"gitId":"tjtanjin"},"content":"    public void execute(TaskHandler taskList, int index) {"},{"lineNumber":13,"author":{"gitId":"tjtanjin"},"content":"        taskList.markTaskDone(index);"},{"lineNumber":14,"author":{"gitId":"tjtanjin"},"content":"    }"},{"lineNumber":15,"author":{"gitId":"tjtanjin"},"content":"}"}],"authorContributionMap":{"tjtanjin":15}},{"path":"src/main/java/com/tjtanjin/ip/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tjtanjin"},"content":"package com.tjtanjin.ip;"},{"lineNumber":2,"author":{"gitId":"tjtanjin"},"content":""},{"lineNumber":3,"author":{"gitId":"tjtanjin"},"content":"import java.util.Scanner;"},{"lineNumber":4,"author":{"gitId":"tjtanjin"},"content":""},{"lineNumber":5,"author":{"gitId":"tjtanjin"},"content":"/**"},{"lineNumber":6,"author":{"gitId":"tjtanjin"},"content":" * Duke is a project that eventually builds into a personal assistant chat bot."},{"lineNumber":7,"author":{"gitId":"tjtanjin"},"content":" */"},{"lineNumber":8,"author":{"gitId":"-"},"content":"public class Duke {"},{"lineNumber":9,"author":{"gitId":"tjtanjin"},"content":""},{"lineNumber":10,"author":{"gitId":"tjtanjin"},"content":"    /**"},{"lineNumber":11,"author":{"gitId":"tjtanjin"},"content":"     * Entry point of the program, first greets then listens for input from user."},{"lineNumber":12,"author":{"gitId":"tjtanjin"},"content":"     * @param args command line arguments"},{"lineNumber":13,"author":{"gitId":"tjtanjin"},"content":"     */"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    public static void main(String[] args) {"},{"lineNumber":15,"author":{"gitId":"tjtanjin"},"content":""},{"lineNumber":16,"author":{"gitId":"tjtanjin"},"content":"        //initialize storage handler, task handler and parser"},{"lineNumber":17,"author":{"gitId":"tjtanjin"},"content":"        StorageHandler storageHandler \u003d new StorageHandler(\"./data/tasks.json\");"},{"lineNumber":18,"author":{"gitId":"tjtanjin"},"content":"        TaskHandler taskHandler \u003d new TaskHandler(storageHandler);"},{"lineNumber":19,"author":{"gitId":"tjtanjin"},"content":"        Parser parser \u003d new Parser(taskHandler);"},{"lineNumber":20,"author":{"gitId":"tjtanjin"},"content":"        Ui.showWelcome();"},{"lineNumber":21,"author":{"gitId":"tjtanjin"},"content":"        listenInput(parser);"},{"lineNumber":22,"author":{"gitId":"tjtanjin"},"content":"    }"},{"lineNumber":23,"author":{"gitId":"tjtanjin"},"content":""},{"lineNumber":24,"author":{"gitId":"tjtanjin"},"content":"    /**"},{"lineNumber":25,"author":{"gitId":"tjtanjin"},"content":"     * Listens for input from the user."},{"lineNumber":26,"author":{"gitId":"tjtanjin"},"content":"     * @param parser class that handles parsing of input"},{"lineNumber":27,"author":{"gitId":"tjtanjin"},"content":"     */"},{"lineNumber":28,"author":{"gitId":"tjtanjin"},"content":"    private static void listenInput(Parser parser) {"},{"lineNumber":29,"author":{"gitId":"tjtanjin"},"content":"        Scanner sc \u003d new Scanner(System.in);"},{"lineNumber":30,"author":{"gitId":"tjtanjin"},"content":"        Ui.showDivider();"},{"lineNumber":31,"author":{"gitId":"tjtanjin"},"content":""},{"lineNumber":32,"author":{"gitId":"tjtanjin"},"content":"        while (sc.hasNextLine()) {"},{"lineNumber":33,"author":{"gitId":"tjtanjin"},"content":"            Ui.showDivider();"},{"lineNumber":34,"author":{"gitId":"tjtanjin"},"content":""},{"lineNumber":35,"author":{"gitId":"tjtanjin"},"content":"            String input \u003d Ui.readCommand(sc);"},{"lineNumber":36,"author":{"gitId":"tjtanjin"},"content":""},{"lineNumber":37,"author":{"gitId":"tjtanjin"},"content":"            parser.parseInput(input);"},{"lineNumber":38,"author":{"gitId":"tjtanjin"},"content":""},{"lineNumber":39,"author":{"gitId":"tjtanjin"},"content":"            Ui.showDivider();"},{"lineNumber":40,"author":{"gitId":"tjtanjin"},"content":"        }"},{"lineNumber":41,"author":{"gitId":"tjtanjin"},"content":"    }"},{"lineNumber":42,"author":{"gitId":"-"},"content":"}"}],"authorContributionMap":{"tjtanjin":39,"-":3}},{"path":"src/main/java/com/tjtanjin/ip/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tjtanjin"},"content":"package com.tjtanjin.ip;"},{"lineNumber":2,"author":{"gitId":"tjtanjin"},"content":""},{"lineNumber":3,"author":{"gitId":"tjtanjin"},"content":"/**"},{"lineNumber":4,"author":{"gitId":"tjtanjin"},"content":" * Class for custom exception handling."},{"lineNumber":5,"author":{"gitId":"tjtanjin"},"content":" */"},{"lineNumber":6,"author":{"gitId":"tjtanjin"},"content":"public class DukeException extends Exception {"},{"lineNumber":7,"author":{"gitId":"tjtanjin"},"content":""},{"lineNumber":8,"author":{"gitId":"tjtanjin"},"content":"    /**"},{"lineNumber":9,"author":{"gitId":"tjtanjin"},"content":"     * Constructor for DukeException class for custom exceptions."},{"lineNumber":10,"author":{"gitId":"tjtanjin"},"content":"     */"},{"lineNumber":11,"author":{"gitId":"tjtanjin"},"content":"    public DukeException() {"},{"lineNumber":12,"author":{"gitId":"tjtanjin"},"content":"        super();"},{"lineNumber":13,"author":{"gitId":"tjtanjin"},"content":"    }"},{"lineNumber":14,"author":{"gitId":"tjtanjin"},"content":"}"}],"authorContributionMap":{"tjtanjin":14}},{"path":"src/main/java/com/tjtanjin/ip/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tjtanjin"},"content":"package com.tjtanjin.ip;"},{"lineNumber":2,"author":{"gitId":"tjtanjin"},"content":""},{"lineNumber":3,"author":{"gitId":"tjtanjin"},"content":"import java.time.LocalDate;"},{"lineNumber":4,"author":{"gitId":"tjtanjin"},"content":"import java.time.format.DateTimeFormatter;"},{"lineNumber":5,"author":{"gitId":"tjtanjin"},"content":""},{"lineNumber":6,"author":{"gitId":"tjtanjin"},"content":"/**"},{"lineNumber":7,"author":{"gitId":"tjtanjin"},"content":" * Event is a child class of Task, containing additional"},{"lineNumber":8,"author":{"gitId":"tjtanjin"},"content":" * support for an endDate."},{"lineNumber":9,"author":{"gitId":"tjtanjin"},"content":" */"},{"lineNumber":10,"author":{"gitId":"tjtanjin"},"content":"public class Event extends Task {"},{"lineNumber":11,"author":{"gitId":"tjtanjin"},"content":"    private final LocalDate startDate;"},{"lineNumber":12,"author":{"gitId":"tjtanjin"},"content":"    private final LocalDate endDate;"},{"lineNumber":13,"author":{"gitId":"tjtanjin"},"content":""},{"lineNumber":14,"author":{"gitId":"tjtanjin"},"content":"    /**"},{"lineNumber":15,"author":{"gitId":"tjtanjin"},"content":"     * Constructor for Event class."},{"lineNumber":16,"author":{"gitId":"tjtanjin"},"content":"     * @param taskName name of task"},{"lineNumber":17,"author":{"gitId":"tjtanjin"},"content":"     * @param status task completion status"},{"lineNumber":18,"author":{"gitId":"tjtanjin"},"content":"     * @param taskDates array of dates (first element is start date, second element is end date)"},{"lineNumber":19,"author":{"gitId":"tjtanjin"},"content":"     */"},{"lineNumber":20,"author":{"gitId":"tjtanjin"},"content":"    public Event(String taskName, String status, LocalDate[] taskDates) {"},{"lineNumber":21,"author":{"gitId":"tjtanjin"},"content":"        super(taskName, status, \"EVENT\");"},{"lineNumber":22,"author":{"gitId":"tjtanjin"},"content":"        this.startDate \u003d taskDates[0];"},{"lineNumber":23,"author":{"gitId":"tjtanjin"},"content":"        this.endDate \u003d taskDates[1];"},{"lineNumber":24,"author":{"gitId":"tjtanjin"},"content":"    }"},{"lineNumber":25,"author":{"gitId":"tjtanjin"},"content":""},{"lineNumber":26,"author":{"gitId":"tjtanjin"},"content":"    @Override"},{"lineNumber":27,"author":{"gitId":"tjtanjin"},"content":"    public LocalDate[] getDates() {"},{"lineNumber":28,"author":{"gitId":"tjtanjin"},"content":"        LocalDate[] taskDates \u003d new LocalDate[2];"},{"lineNumber":29,"author":{"gitId":"tjtanjin"},"content":"        taskDates[0] \u003d this.startDate;"},{"lineNumber":30,"author":{"gitId":"tjtanjin"},"content":"        taskDates[1] \u003d this.endDate;"},{"lineNumber":31,"author":{"gitId":"tjtanjin"},"content":"        return taskDates;"},{"lineNumber":32,"author":{"gitId":"tjtanjin"},"content":"    }"},{"lineNumber":33,"author":{"gitId":"tjtanjin"},"content":""},{"lineNumber":34,"author":{"gitId":"tjtanjin"},"content":"    @Override"},{"lineNumber":35,"author":{"gitId":"tjtanjin"},"content":"    public String toString() {"},{"lineNumber":36,"author":{"gitId":"tjtanjin"},"content":"        return super.toString()"},{"lineNumber":37,"author":{"gitId":"tjtanjin"},"content":"                + \" (from: \" + this.startDate.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\"))"},{"lineNumber":38,"author":{"gitId":"tjtanjin"},"content":"                        + \" to: \" + this.endDate.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\")) + \")\";"},{"lineNumber":39,"author":{"gitId":"tjtanjin"},"content":"    }"},{"lineNumber":40,"author":{"gitId":"tjtanjin"},"content":"}"}],"authorContributionMap":{"tjtanjin":40}},{"path":"src/main/java/com/tjtanjin/ip/FindCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tjtanjin"},"content":"package com.tjtanjin.ip;"},{"lineNumber":2,"author":{"gitId":"tjtanjin"},"content":""},{"lineNumber":3,"author":{"gitId":"tjtanjin"},"content":"/**"},{"lineNumber":4,"author":{"gitId":"tjtanjin"},"content":" * Entry point for handling logic and execution of find command."},{"lineNumber":5,"author":{"gitId":"tjtanjin"},"content":" */"},{"lineNumber":6,"author":{"gitId":"tjtanjin"},"content":"public class FindCommand {"},{"lineNumber":7,"author":{"gitId":"tjtanjin"},"content":""},{"lineNumber":8,"author":{"gitId":"tjtanjin"},"content":"    /**"},{"lineNumber":9,"author":{"gitId":"tjtanjin"},"content":"     * Forwards the find task operation to TaskList."},{"lineNumber":10,"author":{"gitId":"tjtanjin"},"content":"     */"},{"lineNumber":11,"author":{"gitId":"tjtanjin"},"content":"    public void execute(TaskHandler taskList, String taskName) {"},{"lineNumber":12,"author":{"gitId":"tjtanjin"},"content":"        taskList.findTask(taskName);"},{"lineNumber":13,"author":{"gitId":"tjtanjin"},"content":"    }"},{"lineNumber":14,"author":{"gitId":"tjtanjin"},"content":"}"}],"authorContributionMap":{"tjtanjin":14}},{"path":"src/main/java/com/tjtanjin/ip/HelpCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tjtanjin"},"content":"package com.tjtanjin.ip;"},{"lineNumber":2,"author":{"gitId":"tjtanjin"},"content":""},{"lineNumber":3,"author":{"gitId":"tjtanjin"},"content":"import java.util.HashMap;"},{"lineNumber":4,"author":{"gitId":"tjtanjin"},"content":""},{"lineNumber":5,"author":{"gitId":"tjtanjin"},"content":"/**"},{"lineNumber":6,"author":{"gitId":"tjtanjin"},"content":" * Entry point for handling logic and execution of help command."},{"lineNumber":7,"author":{"gitId":"tjtanjin"},"content":" */"},{"lineNumber":8,"author":{"gitId":"tjtanjin"},"content":"public class HelpCommand {"},{"lineNumber":9,"author":{"gitId":"tjtanjin"},"content":"    /**"},{"lineNumber":10,"author":{"gitId":"tjtanjin"},"content":"     * List all available command usage and descriptions."},{"lineNumber":11,"author":{"gitId":"tjtanjin"},"content":"     * @param cmdInfo mapping of each command and their information"},{"lineNumber":12,"author":{"gitId":"tjtanjin"},"content":"     */"},{"lineNumber":13,"author":{"gitId":"tjtanjin"},"content":"    public void execute(HashMap\u003cString, String\u003e cmdInfo) {"},{"lineNumber":14,"author":{"gitId":"tjtanjin"},"content":"        Ui.showInfo(\"The available commands are as listed below:\");"},{"lineNumber":15,"author":{"gitId":"tjtanjin"},"content":"        for (String info : cmdInfo.values()) {"},{"lineNumber":16,"author":{"gitId":"tjtanjin"},"content":"            Ui.showInfo(info);"},{"lineNumber":17,"author":{"gitId":"tjtanjin"},"content":"        }"},{"lineNumber":18,"author":{"gitId":"tjtanjin"},"content":"    }"},{"lineNumber":19,"author":{"gitId":"tjtanjin"},"content":"}"}],"authorContributionMap":{"tjtanjin":19}},{"path":"src/main/java/com/tjtanjin/ip/ListCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tjtanjin"},"content":"package com.tjtanjin.ip;"},{"lineNumber":2,"author":{"gitId":"tjtanjin"},"content":""},{"lineNumber":3,"author":{"gitId":"tjtanjin"},"content":"/**"},{"lineNumber":4,"author":{"gitId":"tjtanjin"},"content":" * Entry point for handling logic and execution of list command."},{"lineNumber":5,"author":{"gitId":"tjtanjin"},"content":" */"},{"lineNumber":6,"author":{"gitId":"tjtanjin"},"content":"public class ListCommand {"},{"lineNumber":7,"author":{"gitId":"tjtanjin"},"content":"    /**"},{"lineNumber":8,"author":{"gitId":"tjtanjin"},"content":"     * List all tasks entered by user."},{"lineNumber":9,"author":{"gitId":"tjtanjin"},"content":"     */"},{"lineNumber":10,"author":{"gitId":"tjtanjin"},"content":"    public void execute(TaskHandler taskList) {"},{"lineNumber":11,"author":{"gitId":"tjtanjin"},"content":"        taskList.showAllTasks();"},{"lineNumber":12,"author":{"gitId":"tjtanjin"},"content":"    }"},{"lineNumber":13,"author":{"gitId":"tjtanjin"},"content":"}"}],"authorContributionMap":{"tjtanjin":13}},{"path":"src/main/java/com/tjtanjin/ip/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tjtanjin"},"content":"package com.tjtanjin.ip;"},{"lineNumber":2,"author":{"gitId":"tjtanjin"},"content":""},{"lineNumber":3,"author":{"gitId":"tjtanjin"},"content":"import java.time.DateTimeException;"},{"lineNumber":4,"author":{"gitId":"tjtanjin"},"content":"import java.time.LocalDate;"},{"lineNumber":5,"author":{"gitId":"tjtanjin"},"content":"import java.util.HashMap;"},{"lineNumber":6,"author":{"gitId":"tjtanjin"},"content":""},{"lineNumber":7,"author":{"gitId":"tjtanjin"},"content":"/**"},{"lineNumber":8,"author":{"gitId":"tjtanjin"},"content":" * The Parser class parses user input before calling the appropriate command classes for execution."},{"lineNumber":9,"author":{"gitId":"tjtanjin"},"content":" */"},{"lineNumber":10,"author":{"gitId":"tjtanjin"},"content":"public class Parser {"},{"lineNumber":11,"author":{"gitId":"tjtanjin"},"content":""},{"lineNumber":12,"author":{"gitId":"tjtanjin"},"content":"    //tracks all valid commands"},{"lineNumber":13,"author":{"gitId":"tjtanjin"},"content":"    private enum Cmd {"},{"lineNumber":14,"author":{"gitId":"tjtanjin"},"content":"        BYE,"},{"lineNumber":15,"author":{"gitId":"tjtanjin"},"content":"        LIST,"},{"lineNumber":16,"author":{"gitId":"tjtanjin"},"content":"        DONE,"},{"lineNumber":17,"author":{"gitId":"tjtanjin"},"content":"        TODO,"},{"lineNumber":18,"author":{"gitId":"tjtanjin"},"content":"        DEADLINE,"},{"lineNumber":19,"author":{"gitId":"tjtanjin"},"content":"        EVENT,"},{"lineNumber":20,"author":{"gitId":"tjtanjin"},"content":"        DELETE,"},{"lineNumber":21,"author":{"gitId":"tjtanjin"},"content":"        HELP,"},{"lineNumber":22,"author":{"gitId":"tjtanjin"},"content":"        FIND"},{"lineNumber":23,"author":{"gitId":"tjtanjin"},"content":"    }"},{"lineNumber":24,"author":{"gitId":"tjtanjin"},"content":""},{"lineNumber":25,"author":{"gitId":"tjtanjin"},"content":"    //list storing commands/descriptions, ideally store in json file"},{"lineNumber":26,"author":{"gitId":"tjtanjin"},"content":"    private final HashMap\u003cString, String\u003e cmdInfo \u003d new HashMap\u003c\u003e();"},{"lineNumber":27,"author":{"gitId":"tjtanjin"},"content":"    private final TaskHandler taskHandler;"},{"lineNumber":28,"author":{"gitId":"tjtanjin"},"content":"    private final AddCommand addCommand \u003d new AddCommand();"},{"lineNumber":29,"author":{"gitId":"tjtanjin"},"content":"    private final ByeCommand byeCommand \u003d new ByeCommand();"},{"lineNumber":30,"author":{"gitId":"tjtanjin"},"content":"    private final ListCommand listCommand \u003d new ListCommand();"},{"lineNumber":31,"author":{"gitId":"tjtanjin"},"content":"    private final DoneCommand doneCommand \u003d new DoneCommand();"},{"lineNumber":32,"author":{"gitId":"tjtanjin"},"content":"    private final DeleteCommand deleteCommand \u003d new DeleteCommand();"},{"lineNumber":33,"author":{"gitId":"tjtanjin"},"content":"    private final HelpCommand helpCommand \u003d new HelpCommand();"},{"lineNumber":34,"author":{"gitId":"tjtanjin"},"content":"    private final FindCommand findCommand \u003d new FindCommand();"},{"lineNumber":35,"author":{"gitId":"tjtanjin"},"content":""},{"lineNumber":36,"author":{"gitId":"tjtanjin"},"content":"    /**"},{"lineNumber":37,"author":{"gitId":"tjtanjin"},"content":"     * Constructor for Parser class that initialises all valid commands."},{"lineNumber":38,"author":{"gitId":"tjtanjin"},"content":"     */"},{"lineNumber":39,"author":{"gitId":"tjtanjin"},"content":"    public Parser(TaskHandler taskHandler) {"},{"lineNumber":40,"author":{"gitId":"tjtanjin"},"content":"        cmdInfo.put(Cmd.BYE.toString(), \"bye | Description: exits the program\");"},{"lineNumber":41,"author":{"gitId":"tjtanjin"},"content":"        cmdInfo.put(Cmd.LIST.toString(), \"list | Description: list all entered tasks\");"},{"lineNumber":42,"author":{"gitId":"tjtanjin"},"content":"        cmdInfo.put(Cmd.DONE.toString(),"},{"lineNumber":43,"author":{"gitId":"tjtanjin"},"content":"                \"done \u003ctask index\u003e | Description: marks by index a given task as done\");"},{"lineNumber":44,"author":{"gitId":"tjtanjin"},"content":"        cmdInfo.put(Cmd.TODO.toString(), \"todo \u003cname\u003e | Description: adds a new todo task\");"},{"lineNumber":45,"author":{"gitId":"tjtanjin"},"content":"        cmdInfo.put(Cmd.DEADLINE.toString(),"},{"lineNumber":46,"author":{"gitId":"tjtanjin"},"content":"                \"deadline \u003cname\u003e /by \u003cend date\u003e | Description: adds a new deadline task\");"},{"lineNumber":47,"author":{"gitId":"tjtanjin"},"content":"        cmdInfo.put(Cmd.EVENT.toString(),"},{"lineNumber":48,"author":{"gitId":"tjtanjin"},"content":"                \"event \u003cname\u003e /from \u003cstart date\u003e /to \u003cend date\u003e | Description: adds a new event task\");"},{"lineNumber":49,"author":{"gitId":"tjtanjin"},"content":"        cmdInfo.put(Cmd.DELETE.toString(), \"delete \u003ctask index\u003e | Description: delete by index a given task\");"},{"lineNumber":50,"author":{"gitId":"tjtanjin"},"content":"        cmdInfo.put(Cmd.HELP.toString(), \"help | Description: list this help menu\");"},{"lineNumber":51,"author":{"gitId":"tjtanjin"},"content":"        cmdInfo.put(Cmd.FIND.toString(), \"find \u003cname\u003e | Description: finds task by name\");"},{"lineNumber":52,"author":{"gitId":"tjtanjin"},"content":""},{"lineNumber":53,"author":{"gitId":"tjtanjin"},"content":"        this.taskHandler \u003d taskHandler;"},{"lineNumber":54,"author":{"gitId":"tjtanjin"},"content":"    }"},{"lineNumber":55,"author":{"gitId":"tjtanjin"},"content":""},{"lineNumber":56,"author":{"gitId":"tjtanjin"},"content":"    /**"},{"lineNumber":57,"author":{"gitId":"tjtanjin"},"content":"     * Parses input from user to determine action to take."},{"lineNumber":58,"author":{"gitId":"tjtanjin"},"content":"     * @param input input provided by user"},{"lineNumber":59,"author":{"gitId":"tjtanjin"},"content":"     */"},{"lineNumber":60,"author":{"gitId":"tjtanjin"},"content":"    public void parseInput(String input) {"},{"lineNumber":61,"author":{"gitId":"tjtanjin"},"content":""},{"lineNumber":62,"author":{"gitId":"tjtanjin"},"content":"        //program exits on bye"},{"lineNumber":63,"author":{"gitId":"tjtanjin"},"content":"        if (input.toUpperCase().equals(Cmd.BYE.toString())) {"},{"lineNumber":64,"author":{"gitId":"tjtanjin"},"content":"            byeCommand.execute();"},{"lineNumber":65,"author":{"gitId":"tjtanjin"},"content":""},{"lineNumber":66,"author":{"gitId":"tjtanjin"},"content":"        //program shows entered tasks on list"},{"lineNumber":67,"author":{"gitId":"tjtanjin"},"content":"        } else if (input.toUpperCase().equals(Cmd.LIST.toString())) {"},{"lineNumber":68,"author":{"gitId":"tjtanjin"},"content":"            listCommand.execute(taskHandler);"},{"lineNumber":69,"author":{"gitId":"tjtanjin"},"content":""},{"lineNumber":70,"author":{"gitId":"tjtanjin"},"content":"        //program marks task as complete on done"},{"lineNumber":71,"author":{"gitId":"tjtanjin"},"content":"        } else if (input.toUpperCase().startsWith(Cmd.DONE.toString())) {"},{"lineNumber":72,"author":{"gitId":"tjtanjin"},"content":"            int index \u003d parseIndex(\"done\", input);"},{"lineNumber":73,"author":{"gitId":"tjtanjin"},"content":"            if (index !\u003d -1) {"},{"lineNumber":74,"author":{"gitId":"tjtanjin"},"content":"                doneCommand.execute(taskHandler, index);"},{"lineNumber":75,"author":{"gitId":"tjtanjin"},"content":"            }"},{"lineNumber":76,"author":{"gitId":"tjtanjin"},"content":""},{"lineNumber":77,"author":{"gitId":"tjtanjin"},"content":"        //program removes task on delete"},{"lineNumber":78,"author":{"gitId":"tjtanjin"},"content":"        } else if (input.toUpperCase().startsWith(Cmd.DELETE.toString())) {"},{"lineNumber":79,"author":{"gitId":"tjtanjin"},"content":"            int index \u003d parseIndex(\"delete\", input);"},{"lineNumber":80,"author":{"gitId":"tjtanjin"},"content":"            if (index !\u003d -1) {"},{"lineNumber":81,"author":{"gitId":"tjtanjin"},"content":"                deleteCommand.execute(taskHandler, index);"},{"lineNumber":82,"author":{"gitId":"tjtanjin"},"content":"            }"},{"lineNumber":83,"author":{"gitId":"tjtanjin"},"content":""},{"lineNumber":84,"author":{"gitId":"tjtanjin"},"content":"        //program list help commands"},{"lineNumber":85,"author":{"gitId":"tjtanjin"},"content":"        } else if (input.toUpperCase().equals(Cmd.HELP.toString())) {"},{"lineNumber":86,"author":{"gitId":"tjtanjin"},"content":"            helpCommand.execute(cmdInfo);"},{"lineNumber":87,"author":{"gitId":"tjtanjin"},"content":""},{"lineNumber":88,"author":{"gitId":"tjtanjin"},"content":"        //program adds task on todo, deadline or event"},{"lineNumber":89,"author":{"gitId":"tjtanjin"},"content":"        } else if (input.toUpperCase().startsWith(Cmd.TODO.toString())"},{"lineNumber":90,"author":{"gitId":"tjtanjin"},"content":"                || input.toUpperCase().startsWith(Cmd.DEADLINE.toString())"},{"lineNumber":91,"author":{"gitId":"tjtanjin"},"content":"                        || input.toUpperCase().startsWith(Cmd.EVENT.toString())"},{"lineNumber":92,"author":{"gitId":"tjtanjin"},"content":"        ) {"},{"lineNumber":93,"author":{"gitId":"tjtanjin"},"content":"            String taskType \u003d parseTaskType(input);"},{"lineNumber":94,"author":{"gitId":"tjtanjin"},"content":"            String taskName \u003d parseTaskName(input);"},{"lineNumber":95,"author":{"gitId":"tjtanjin"},"content":"            if (taskName \u003d\u003d null) {"},{"lineNumber":96,"author":{"gitId":"tjtanjin"},"content":"                return;"},{"lineNumber":97,"author":{"gitId":"tjtanjin"},"content":"            }"},{"lineNumber":98,"author":{"gitId":"tjtanjin"},"content":"            LocalDate[] taskDates \u003d parseTaskDates(input);"},{"lineNumber":99,"author":{"gitId":"tjtanjin"},"content":"            if (!taskType.equalsIgnoreCase(Cmd.TODO.toString()) \u0026\u0026 taskDates[0] \u003d\u003d null) {"},{"lineNumber":100,"author":{"gitId":"tjtanjin"},"content":"                return;"},{"lineNumber":101,"author":{"gitId":"tjtanjin"},"content":"            }"},{"lineNumber":102,"author":{"gitId":"tjtanjin"},"content":"            addCommand.execute(taskHandler, taskType, taskName, taskDates);"},{"lineNumber":103,"author":{"gitId":"tjtanjin"},"content":""},{"lineNumber":104,"author":{"gitId":"tjtanjin"},"content":"        //program finds task by name on find"},{"lineNumber":105,"author":{"gitId":"tjtanjin"},"content":"        } else if (input.toUpperCase().startsWith(Cmd.FIND.toString())) {"},{"lineNumber":106,"author":{"gitId":"tjtanjin"},"content":"            String taskName \u003d parseTaskName(input);"},{"lineNumber":107,"author":{"gitId":"tjtanjin"},"content":"            if (taskName !\u003d null) {"},{"lineNumber":108,"author":{"gitId":"tjtanjin"},"content":"                findCommand.execute(taskHandler, taskName);"},{"lineNumber":109,"author":{"gitId":"tjtanjin"},"content":"            }"},{"lineNumber":110,"author":{"gitId":"tjtanjin"},"content":""},{"lineNumber":111,"author":{"gitId":"tjtanjin"},"content":"        //program informs user of invalid input"},{"lineNumber":112,"author":{"gitId":"tjtanjin"},"content":"        } else {"},{"lineNumber":113,"author":{"gitId":"tjtanjin"},"content":"            Ui.showError(\"Invalid instruction, type \u0027help\u0027 for more options.\");"},{"lineNumber":114,"author":{"gitId":"tjtanjin"},"content":"        }"},{"lineNumber":115,"author":{"gitId":"tjtanjin"},"content":"    }"},{"lineNumber":116,"author":{"gitId":"tjtanjin"},"content":""},{"lineNumber":117,"author":{"gitId":"tjtanjin"},"content":"    /**"},{"lineNumber":118,"author":{"gitId":"tjtanjin"},"content":"     * Parses index from user for done and delete command."},{"lineNumber":119,"author":{"gitId":"tjtanjin"},"content":"     * @param cmd cmd from user (done or delete)"},{"lineNumber":120,"author":{"gitId":"tjtanjin"},"content":"     * @param input input provided by user"},{"lineNumber":121,"author":{"gitId":"tjtanjin"},"content":"     */"},{"lineNumber":122,"author":{"gitId":"tjtanjin"},"content":"    public int parseIndex(String cmd, String input) {"},{"lineNumber":123,"author":{"gitId":"tjtanjin"},"content":"        String[] parsedString \u003d input.split(\"\\\\s+\");"},{"lineNumber":124,"author":{"gitId":"tjtanjin"},"content":""},{"lineNumber":125,"author":{"gitId":"tjtanjin"},"content":"        try {"},{"lineNumber":126,"author":{"gitId":"tjtanjin"},"content":"            int index \u003d Integer.parseInt(parsedString[1]) - 1;"},{"lineNumber":127,"author":{"gitId":"tjtanjin"},"content":"            if (index \u003c taskHandler.getTasks().size() \u0026\u0026 index \u003e\u003d 0) {"},{"lineNumber":128,"author":{"gitId":"tjtanjin"},"content":"                return index;"},{"lineNumber":129,"author":{"gitId":"tjtanjin"},"content":"            } else {"},{"lineNumber":130,"author":{"gitId":"tjtanjin"},"content":"                throw new DukeException();"},{"lineNumber":131,"author":{"gitId":"tjtanjin"},"content":"            }"},{"lineNumber":132,"author":{"gitId":"tjtanjin"},"content":"        } catch (IndexOutOfBoundsException | DukeException e) {"},{"lineNumber":133,"author":{"gitId":"tjtanjin"},"content":"            if (cmd.equals(\"done\")) {"},{"lineNumber":134,"author":{"gitId":"tjtanjin"},"content":"                Ui.showError(\"Usage for done: \" + cmdInfo.get(Cmd.DONE.toString()));"},{"lineNumber":135,"author":{"gitId":"tjtanjin"},"content":"            } else {"},{"lineNumber":136,"author":{"gitId":"tjtanjin"},"content":"                Ui.showError(\"Usage for delete: \" + cmdInfo.get(Cmd.DELETE.toString()));"},{"lineNumber":137,"author":{"gitId":"tjtanjin"},"content":"            }"},{"lineNumber":138,"author":{"gitId":"tjtanjin"},"content":"            return -1;"},{"lineNumber":139,"author":{"gitId":"tjtanjin"},"content":"        } catch (NumberFormatException e) {"},{"lineNumber":140,"author":{"gitId":"tjtanjin"},"content":"            if (cmd.equals(\"done\")) {"},{"lineNumber":141,"author":{"gitId":"tjtanjin"},"content":"                Ui.showError(\"Index of task to mark as done must be a number!\");"},{"lineNumber":142,"author":{"gitId":"tjtanjin"},"content":"            } else {"},{"lineNumber":143,"author":{"gitId":"tjtanjin"},"content":"                Ui.showError(\"Index of task to delete must be a number!\");"},{"lineNumber":144,"author":{"gitId":"tjtanjin"},"content":"            }"},{"lineNumber":145,"author":{"gitId":"tjtanjin"},"content":"            return -1;"},{"lineNumber":146,"author":{"gitId":"tjtanjin"},"content":"        }"},{"lineNumber":147,"author":{"gitId":"tjtanjin"},"content":"    }"},{"lineNumber":148,"author":{"gitId":"tjtanjin"},"content":""},{"lineNumber":149,"author":{"gitId":"tjtanjin"},"content":"    /**"},{"lineNumber":150,"author":{"gitId":"tjtanjin"},"content":"     * Parses task type from user input"},{"lineNumber":151,"author":{"gitId":"tjtanjin"},"content":"     * @param input input provided by user"},{"lineNumber":152,"author":{"gitId":"tjtanjin"},"content":"     */"},{"lineNumber":153,"author":{"gitId":"tjtanjin"},"content":"    public String parseTaskType(String input) {"},{"lineNumber":154,"author":{"gitId":"tjtanjin"},"content":"        //split input on first space to retrieve task type"},{"lineNumber":155,"author":{"gitId":"tjtanjin"},"content":"        String[] parsedString \u003d input.split(\"\\\\s+\", 2);"},{"lineNumber":156,"author":{"gitId":"tjtanjin"},"content":"        return parsedString[0];"},{"lineNumber":157,"author":{"gitId":"tjtanjin"},"content":"    }"},{"lineNumber":158,"author":{"gitId":"tjtanjin"},"content":""},{"lineNumber":159,"author":{"gitId":"tjtanjin"},"content":"    /**"},{"lineNumber":160,"author":{"gitId":"tjtanjin"},"content":"     * Parses task name from user input"},{"lineNumber":161,"author":{"gitId":"tjtanjin"},"content":"     * @param input input provided by user"},{"lineNumber":162,"author":{"gitId":"tjtanjin"},"content":"     */"},{"lineNumber":163,"author":{"gitId":"tjtanjin"},"content":"    public String parseTaskName(String input) {"},{"lineNumber":164,"author":{"gitId":"tjtanjin"},"content":"        String[] parsedString \u003d input.split(\"\\\\s+\", 2);"},{"lineNumber":165,"author":{"gitId":"tjtanjin"},"content":"        String taskType \u003d parsedString[0];"},{"lineNumber":166,"author":{"gitId":"tjtanjin"},"content":"        String taskDetails;"},{"lineNumber":167,"author":{"gitId":"tjtanjin"},"content":"        String taskName;"},{"lineNumber":168,"author":{"gitId":"tjtanjin"},"content":""},{"lineNumber":169,"author":{"gitId":"tjtanjin"},"content":"        try {"},{"lineNumber":170,"author":{"gitId":"tjtanjin"},"content":"            taskDetails \u003d parsedString[1];"},{"lineNumber":171,"author":{"gitId":"tjtanjin"},"content":"            if (taskType.toUpperCase().equals(Cmd.TODO.toString())) {"},{"lineNumber":172,"author":{"gitId":"tjtanjin"},"content":"                taskName \u003d taskDetails.trim();"},{"lineNumber":173,"author":{"gitId":"tjtanjin"},"content":"            } else if (taskType.toUpperCase().equals(Cmd.DEADLINE.toString())) {"},{"lineNumber":174,"author":{"gitId":"tjtanjin"},"content":"                taskName \u003d taskDetails.split(\"/by\", 2)[0].trim();"},{"lineNumber":175,"author":{"gitId":"tjtanjin"},"content":"            } else {"},{"lineNumber":176,"author":{"gitId":"tjtanjin"},"content":"                taskName \u003d taskDetails.split(\"/from\", 2)[0].trim();"},{"lineNumber":177,"author":{"gitId":"tjtanjin"},"content":"            }"},{"lineNumber":178,"author":{"gitId":"tjtanjin"},"content":"            return taskName;"},{"lineNumber":179,"author":{"gitId":"tjtanjin"},"content":"        } catch (IndexOutOfBoundsException e) {"},{"lineNumber":180,"author":{"gitId":"tjtanjin"},"content":"            if (taskType.equalsIgnoreCase(\"TODO\")) {"},{"lineNumber":181,"author":{"gitId":"tjtanjin"},"content":"                Ui.showError(\"Usage for todo: \" + cmdInfo.get(Cmd.TODO.toString()));"},{"lineNumber":182,"author":{"gitId":"tjtanjin"},"content":"            } else if (taskType.equalsIgnoreCase(\"DEADLINE\")) {"},{"lineNumber":183,"author":{"gitId":"tjtanjin"},"content":"                Ui.showError(\"Usage for deadline: \" + cmdInfo.get(Cmd.DEADLINE.toString()));"},{"lineNumber":184,"author":{"gitId":"tjtanjin"},"content":"            } else if (taskType.equalsIgnoreCase(\"EVENT\")) {"},{"lineNumber":185,"author":{"gitId":"tjtanjin"},"content":"                Ui.showError(\"Usage for event: \" + cmdInfo.get(Cmd.EVENT.toString()));"},{"lineNumber":186,"author":{"gitId":"tjtanjin"},"content":"            } else if (taskType.equalsIgnoreCase(\"FIND\")) {"},{"lineNumber":187,"author":{"gitId":"tjtanjin"},"content":"                Ui.showError(\"Usage for find: \" + cmdInfo.get(Cmd.FIND.toString()));"},{"lineNumber":188,"author":{"gitId":"tjtanjin"},"content":"            } else {"},{"lineNumber":189,"author":{"gitId":"tjtanjin"},"content":"                Ui.showError(\"Invalid instruction, perhaps you meant todo, deadline or event?\");"},{"lineNumber":190,"author":{"gitId":"tjtanjin"},"content":"            }"},{"lineNumber":191,"author":{"gitId":"tjtanjin"},"content":"            return null;"},{"lineNumber":192,"author":{"gitId":"tjtanjin"},"content":"        }"},{"lineNumber":193,"author":{"gitId":"tjtanjin"},"content":"    }"},{"lineNumber":194,"author":{"gitId":"tjtanjin"},"content":""},{"lineNumber":195,"author":{"gitId":"tjtanjin"},"content":"    /**"},{"lineNumber":196,"author":{"gitId":"tjtanjin"},"content":"     * Parses task due date from user input"},{"lineNumber":197,"author":{"gitId":"tjtanjin"},"content":"     * @param input input provided by user"},{"lineNumber":198,"author":{"gitId":"tjtanjin"},"content":"     */"},{"lineNumber":199,"author":{"gitId":"tjtanjin"},"content":"    public LocalDate[] parseTaskDates(String input) {"},{"lineNumber":200,"author":{"gitId":"tjtanjin"},"content":"        String[] parsedString \u003d input.split(\"\\\\s+\", 2);"},{"lineNumber":201,"author":{"gitId":"tjtanjin"},"content":"        String taskType \u003d parsedString[0];"},{"lineNumber":202,"author":{"gitId":"tjtanjin"},"content":"        String taskDetails \u003d parsedString[1];"},{"lineNumber":203,"author":{"gitId":"tjtanjin"},"content":"        LocalDate[] taskDates \u003d new LocalDate[2];"},{"lineNumber":204,"author":{"gitId":"tjtanjin"},"content":""},{"lineNumber":205,"author":{"gitId":"tjtanjin"},"content":"        try {"},{"lineNumber":206,"author":{"gitId":"tjtanjin"},"content":"            if (taskType.toUpperCase().equals(Cmd.DEADLINE.toString())) {"},{"lineNumber":207,"author":{"gitId":"tjtanjin"},"content":"                taskDates[0] \u003d LocalDate.parse(taskDetails.split(\"/by\", 2)[1].trim());"},{"lineNumber":208,"author":{"gitId":"tjtanjin"},"content":"            } else if (taskType.toUpperCase().equals(Cmd.EVENT.toString())) {"},{"lineNumber":209,"author":{"gitId":"tjtanjin"},"content":"                String[] startEndDates \u003d taskDetails.split(\"/from\", 2)[1].split(\"/to\", 2);"},{"lineNumber":210,"author":{"gitId":"tjtanjin"},"content":"                taskDates[0] \u003d LocalDate.parse(startEndDates[0].trim());"},{"lineNumber":211,"author":{"gitId":"tjtanjin"},"content":"                taskDates[1] \u003d LocalDate.parse(startEndDates[1].trim());"},{"lineNumber":212,"author":{"gitId":"tjtanjin"},"content":"            }"},{"lineNumber":213,"author":{"gitId":"tjtanjin"},"content":"        } catch (IndexOutOfBoundsException | NullPointerException | DateTimeException e) {"},{"lineNumber":214,"author":{"gitId":"tjtanjin"},"content":"            if (taskType.equalsIgnoreCase(Cmd.DEADLINE.toString())) {"},{"lineNumber":215,"author":{"gitId":"tjtanjin"},"content":"                Ui.showError(\"Invalid date specified, please adhere to the format: /by YYYY-MM-DD\");"},{"lineNumber":216,"author":{"gitId":"tjtanjin"},"content":"            } else {"},{"lineNumber":217,"author":{"gitId":"tjtanjin"},"content":"                Ui.showError(\"Invalid date specified, \""},{"lineNumber":218,"author":{"gitId":"tjtanjin"},"content":"                        + \"please adhere to the format: /from YYYY-MM-DD /to YYYY-MM-DD\");"},{"lineNumber":219,"author":{"gitId":"tjtanjin"},"content":"            }"},{"lineNumber":220,"author":{"gitId":"tjtanjin"},"content":"        }"},{"lineNumber":221,"author":{"gitId":"tjtanjin"},"content":"        return taskDates;"},{"lineNumber":222,"author":{"gitId":"tjtanjin"},"content":"    }"},{"lineNumber":223,"author":{"gitId":"tjtanjin"},"content":"}"}],"authorContributionMap":{"tjtanjin":223}},{"path":"src/main/java/com/tjtanjin/ip/StorageHandler.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tjtanjin"},"content":"package com.tjtanjin.ip;"},{"lineNumber":2,"author":{"gitId":"tjtanjin"},"content":""},{"lineNumber":3,"author":{"gitId":"tjtanjin"},"content":"import java.io.File;"},{"lineNumber":4,"author":{"gitId":"tjtanjin"},"content":"import java.io.FileReader;"},{"lineNumber":5,"author":{"gitId":"tjtanjin"},"content":"import java.io.FileWriter;"},{"lineNumber":6,"author":{"gitId":"tjtanjin"},"content":"import java.io.IOException;"},{"lineNumber":7,"author":{"gitId":"tjtanjin"},"content":"import java.time.LocalDate;"},{"lineNumber":8,"author":{"gitId":"tjtanjin"},"content":"import java.time.format.DateTimeFormatter;"},{"lineNumber":9,"author":{"gitId":"tjtanjin"},"content":"import java.util.ArrayList;"},{"lineNumber":10,"author":{"gitId":"tjtanjin"},"content":""},{"lineNumber":11,"author":{"gitId":"tjtanjin"},"content":"import org.json.simple.JSONArray;"},{"lineNumber":12,"author":{"gitId":"tjtanjin"},"content":"import org.json.simple.JSONObject;"},{"lineNumber":13,"author":{"gitId":"tjtanjin"},"content":"import org.json.simple.parser.JSONParser;"},{"lineNumber":14,"author":{"gitId":"tjtanjin"},"content":"import org.json.simple.parser.ParseException;"},{"lineNumber":15,"author":{"gitId":"tjtanjin"},"content":""},{"lineNumber":16,"author":{"gitId":"tjtanjin"},"content":"/**"},{"lineNumber":17,"author":{"gitId":"tjtanjin"},"content":" * The Storage class handles the saving/loading of tasks from hard disk."},{"lineNumber":18,"author":{"gitId":"tjtanjin"},"content":" */"},{"lineNumber":19,"author":{"gitId":"tjtanjin"},"content":"public class StorageHandler {"},{"lineNumber":20,"author":{"gitId":"tjtanjin"},"content":""},{"lineNumber":21,"author":{"gitId":"tjtanjin"},"content":"    private JSONArray taskList \u003d new JSONArray();"},{"lineNumber":22,"author":{"gitId":"tjtanjin"},"content":"    private final ArrayList\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();"},{"lineNumber":23,"author":{"gitId":"tjtanjin"},"content":"    private final String path;"},{"lineNumber":24,"author":{"gitId":"tjtanjin"},"content":""},{"lineNumber":25,"author":{"gitId":"tjtanjin"},"content":"    public StorageHandler(String path) {"},{"lineNumber":26,"author":{"gitId":"tjtanjin"},"content":"        this.path \u003d path;"},{"lineNumber":27,"author":{"gitId":"tjtanjin"},"content":"    }"},{"lineNumber":28,"author":{"gitId":"tjtanjin"},"content":""},{"lineNumber":29,"author":{"gitId":"tjtanjin"},"content":"    //solution below adapted from https://howtodoinjava.com/java/library/json-simple-read-write-json-examples/"},{"lineNumber":30,"author":{"gitId":"tjtanjin"},"content":"    /**"},{"lineNumber":31,"author":{"gitId":"tjtanjin"},"content":"     * Loads saved tasks from hard disk."},{"lineNumber":32,"author":{"gitId":"tjtanjin"},"content":"     */"},{"lineNumber":33,"author":{"gitId":"tjtanjin"},"content":"    @SuppressWarnings(\"unchecked\")"},{"lineNumber":34,"author":{"gitId":"tjtanjin"},"content":"    public ArrayList\u003cTask\u003e loadTasks() {"},{"lineNumber":35,"author":{"gitId":"tjtanjin"},"content":""},{"lineNumber":36,"author":{"gitId":"tjtanjin"},"content":"        File tasksFile \u003d new File(this.path);"},{"lineNumber":37,"author":{"gitId":"tjtanjin"},"content":"        if (!tasksFile.getParentFile().isDirectory()) {"},{"lineNumber":38,"author":{"gitId":"tjtanjin"},"content":"            try {"},{"lineNumber":39,"author":{"gitId":"tjtanjin"},"content":"                if (!tasksFile.getParentFile().mkdirs()) {"},{"lineNumber":40,"author":{"gitId":"tjtanjin"},"content":"                    throw new DukeException();"},{"lineNumber":41,"author":{"gitId":"tjtanjin"},"content":"                }"},{"lineNumber":42,"author":{"gitId":"tjtanjin"},"content":"            } catch (DukeException e) {"},{"lineNumber":43,"author":{"gitId":"tjtanjin"},"content":"                Ui.showError(\"Unable to create storage directory.\");"},{"lineNumber":44,"author":{"gitId":"tjtanjin"},"content":"            }"},{"lineNumber":45,"author":{"gitId":"tjtanjin"},"content":"        }"},{"lineNumber":46,"author":{"gitId":"tjtanjin"},"content":"        if (!tasksFile.exists()) {"},{"lineNumber":47,"author":{"gitId":"tjtanjin"},"content":"            try {"},{"lineNumber":48,"author":{"gitId":"tjtanjin"},"content":"                if (!tasksFile.createNewFile()) {"},{"lineNumber":49,"author":{"gitId":"tjtanjin"},"content":"                    throw new DukeException();"},{"lineNumber":50,"author":{"gitId":"tjtanjin"},"content":"                }"},{"lineNumber":51,"author":{"gitId":"tjtanjin"},"content":"            } catch (IOException | DukeException e) {"},{"lineNumber":52,"author":{"gitId":"tjtanjin"},"content":"                Ui.showError(\"Unable to create storage file.\");"},{"lineNumber":53,"author":{"gitId":"tjtanjin"},"content":"            }"},{"lineNumber":54,"author":{"gitId":"tjtanjin"},"content":"        }"},{"lineNumber":55,"author":{"gitId":"tjtanjin"},"content":""},{"lineNumber":56,"author":{"gitId":"tjtanjin"},"content":"        //JSON parser object to parse read file"},{"lineNumber":57,"author":{"gitId":"tjtanjin"},"content":"        JSONParser jsonParser \u003d new JSONParser();"},{"lineNumber":58,"author":{"gitId":"tjtanjin"},"content":""},{"lineNumber":59,"author":{"gitId":"tjtanjin"},"content":"        try (FileReader reader \u003d new FileReader(this.path)) {"},{"lineNumber":60,"author":{"gitId":"tjtanjin"},"content":"            //read JSON file"},{"lineNumber":61,"author":{"gitId":"tjtanjin"},"content":"            Object obj \u003d jsonParser.parse(reader);"},{"lineNumber":62,"author":{"gitId":"tjtanjin"},"content":""},{"lineNumber":63,"author":{"gitId":"tjtanjin"},"content":"            taskList \u003d (JSONArray) obj;"},{"lineNumber":64,"author":{"gitId":"tjtanjin"},"content":""},{"lineNumber":65,"author":{"gitId":"tjtanjin"},"content":"            //load each task"},{"lineNumber":66,"author":{"gitId":"tjtanjin"},"content":"            taskList.forEach(emp -\u003e parseTaskGroup((JSONObject) emp));"},{"lineNumber":67,"author":{"gitId":"tjtanjin"},"content":"        } catch (IOException | ParseException e) {"},{"lineNumber":68,"author":{"gitId":"tjtanjin"},"content":"            System.out.println(\"No saved task found.\");"},{"lineNumber":69,"author":{"gitId":"tjtanjin"},"content":"        }"},{"lineNumber":70,"author":{"gitId":"tjtanjin"},"content":"        return tasks;"},{"lineNumber":71,"author":{"gitId":"tjtanjin"},"content":"    }"},{"lineNumber":72,"author":{"gitId":"tjtanjin"},"content":""},{"lineNumber":73,"author":{"gitId":"tjtanjin"},"content":"    /**"},{"lineNumber":74,"author":{"gitId":"tjtanjin"},"content":"     * Retrieve individual task information and repopulate them into taskList."},{"lineNumber":75,"author":{"gitId":"tjtanjin"},"content":"     * @param task task to retrieve information for"},{"lineNumber":76,"author":{"gitId":"tjtanjin"},"content":"     */"},{"lineNumber":77,"author":{"gitId":"tjtanjin"},"content":"    private void parseTaskGroup(JSONObject task) {"},{"lineNumber":78,"author":{"gitId":"tjtanjin"},"content":"        JSONObject taskDetails \u003d (JSONObject) task.get(\"task\");"},{"lineNumber":79,"author":{"gitId":"tjtanjin"},"content":""},{"lineNumber":80,"author":{"gitId":"tjtanjin"},"content":"        String taskName \u003d (String) taskDetails.get(\"taskName\");"},{"lineNumber":81,"author":{"gitId":"tjtanjin"},"content":""},{"lineNumber":82,"author":{"gitId":"tjtanjin"},"content":"        String status \u003d (String) taskDetails.get(\"status\");"},{"lineNumber":83,"author":{"gitId":"tjtanjin"},"content":""},{"lineNumber":84,"author":{"gitId":"tjtanjin"},"content":"        String type \u003d (String) taskDetails.get(\"type\");"},{"lineNumber":85,"author":{"gitId":"tjtanjin"},"content":""},{"lineNumber":86,"author":{"gitId":"tjtanjin"},"content":"        if (type.equals(\"TODO\")) {"},{"lineNumber":87,"author":{"gitId":"tjtanjin"},"content":"            tasks.add(new ToDo(taskName, status));"},{"lineNumber":88,"author":{"gitId":"tjtanjin"},"content":"        } else if (type.equals(\"DEADLINE\")) {"},{"lineNumber":89,"author":{"gitId":"tjtanjin"},"content":"            String endDate \u003d (String) taskDetails.get(\"endDate\");"},{"lineNumber":90,"author":{"gitId":"tjtanjin"},"content":"            LocalDate[] taskDates \u003d new LocalDate[1];"},{"lineNumber":91,"author":{"gitId":"tjtanjin"},"content":"            taskDates[0] \u003d LocalDate.parse(endDate);"},{"lineNumber":92,"author":{"gitId":"tjtanjin"},"content":"            tasks.add(new Deadline(taskName, status, taskDates));"},{"lineNumber":93,"author":{"gitId":"tjtanjin"},"content":"        } else {"},{"lineNumber":94,"author":{"gitId":"tjtanjin"},"content":"            String startDate \u003d (String) taskDetails.get(\"startDate\");"},{"lineNumber":95,"author":{"gitId":"tjtanjin"},"content":"            String endDate \u003d (String) taskDetails.get(\"endDate\");"},{"lineNumber":96,"author":{"gitId":"tjtanjin"},"content":"            LocalDate[] taskDates \u003d new LocalDate[2];"},{"lineNumber":97,"author":{"gitId":"tjtanjin"},"content":"            taskDates[0] \u003d LocalDate.parse(startDate);"},{"lineNumber":98,"author":{"gitId":"tjtanjin"},"content":"            taskDates[1] \u003d LocalDate.parse(endDate);"},{"lineNumber":99,"author":{"gitId":"tjtanjin"},"content":"            tasks.add(new Event(taskName, status, taskDates));"},{"lineNumber":100,"author":{"gitId":"tjtanjin"},"content":"        }"},{"lineNumber":101,"author":{"gitId":"tjtanjin"},"content":"    }"},{"lineNumber":102,"author":{"gitId":"tjtanjin"},"content":""},{"lineNumber":103,"author":{"gitId":"tjtanjin"},"content":"    //solution below adapted from https://howtodoinjava.com/java/library/json-simple-read-write-json-examples/"},{"lineNumber":104,"author":{"gitId":"tjtanjin"},"content":"    /**"},{"lineNumber":105,"author":{"gitId":"tjtanjin"},"content":"     * Saves task into hard disk."},{"lineNumber":106,"author":{"gitId":"tjtanjin"},"content":"     * @param index index of task being saved"},{"lineNumber":107,"author":{"gitId":"tjtanjin"},"content":"     * @param saveType type of save operation (new task, modify existing task or deleting task)"},{"lineNumber":108,"author":{"gitId":"tjtanjin"},"content":"     * @param taskName name of task"},{"lineNumber":109,"author":{"gitId":"tjtanjin"},"content":"     * @param status status of task (incomplete or complete)"},{"lineNumber":110,"author":{"gitId":"tjtanjin"},"content":"     * @param type type of task (todo, deadline or event)"},{"lineNumber":111,"author":{"gitId":"tjtanjin"},"content":"     * @param taskDates array of dates (defaults to first element for deadline end date)"},{"lineNumber":112,"author":{"gitId":"tjtanjin"},"content":"     */"},{"lineNumber":113,"author":{"gitId":"tjtanjin"},"content":"    @SuppressWarnings(\"unchecked\")"},{"lineNumber":114,"author":{"gitId":"tjtanjin"},"content":"    public void saveTask(int index, String saveType, String taskName,"},{"lineNumber":115,"author":{"gitId":"tjtanjin"},"content":"            String status, String type, LocalDate[] taskDates) {"},{"lineNumber":116,"author":{"gitId":"tjtanjin"},"content":""},{"lineNumber":117,"author":{"gitId":"tjtanjin"},"content":"        JSONObject taskDetails \u003d new JSONObject();"},{"lineNumber":118,"author":{"gitId":"tjtanjin"},"content":"        taskDetails.put(\"taskName\", taskName);"},{"lineNumber":119,"author":{"gitId":"tjtanjin"},"content":"        taskDetails.put(\"status\", status);"},{"lineNumber":120,"author":{"gitId":"tjtanjin"},"content":"        taskDetails.put(\"type\", type);"},{"lineNumber":121,"author":{"gitId":"tjtanjin"},"content":""},{"lineNumber":122,"author":{"gitId":"tjtanjin"},"content":"        //convert datetime to string"},{"lineNumber":123,"author":{"gitId":"tjtanjin"},"content":"        if (taskDates[0] !\u003d null) {"},{"lineNumber":124,"author":{"gitId":"tjtanjin"},"content":"            if (type.equals(\"DEADLINE\")) {"},{"lineNumber":125,"author":{"gitId":"tjtanjin"},"content":"                String dueDateStr \u003d taskDates[0].format(DateTimeFormatter.ofPattern(\"yyyy-MM-dd\"));"},{"lineNumber":126,"author":{"gitId":"tjtanjin"},"content":"                taskDetails.put(\"endDate\", dueDateStr);"},{"lineNumber":127,"author":{"gitId":"tjtanjin"},"content":"            } else if (type.equals(\"EVENT\")) {"},{"lineNumber":128,"author":{"gitId":"tjtanjin"},"content":"                String startDateStr \u003d taskDates[0].format(DateTimeFormatter.ofPattern(\"yyyy-MM-dd\"));"},{"lineNumber":129,"author":{"gitId":"tjtanjin"},"content":"                String endDateStr \u003d taskDates[1].format(DateTimeFormatter.ofPattern(\"yyyy-MM-dd\"));"},{"lineNumber":130,"author":{"gitId":"tjtanjin"},"content":"                taskDetails.put(\"startDate\", startDateStr);"},{"lineNumber":131,"author":{"gitId":"tjtanjin"},"content":"                taskDetails.put(\"endDate\", endDateStr);"},{"lineNumber":132,"author":{"gitId":"tjtanjin"},"content":"            }"},{"lineNumber":133,"author":{"gitId":"tjtanjin"},"content":"        }"},{"lineNumber":134,"author":{"gitId":"tjtanjin"},"content":""},{"lineNumber":135,"author":{"gitId":"tjtanjin"},"content":"        JSONObject taskGroup \u003d new JSONObject();"},{"lineNumber":136,"author":{"gitId":"tjtanjin"},"content":"        taskGroup.put(\"task\", taskDetails);"},{"lineNumber":137,"author":{"gitId":"tjtanjin"},"content":""},{"lineNumber":138,"author":{"gitId":"tjtanjin"},"content":"        //add each task to list"},{"lineNumber":139,"author":{"gitId":"tjtanjin"},"content":"        if (saveType.equals(\"NEW\")) {"},{"lineNumber":140,"author":{"gitId":"tjtanjin"},"content":"            taskList.add(taskGroup);"},{"lineNumber":141,"author":{"gitId":"tjtanjin"},"content":"        } else if (saveType.equals(\"DONE\")) {"},{"lineNumber":142,"author":{"gitId":"tjtanjin"},"content":"            taskList.set(index, taskGroup);"},{"lineNumber":143,"author":{"gitId":"tjtanjin"},"content":"        } else {"},{"lineNumber":144,"author":{"gitId":"tjtanjin"},"content":"            taskList.remove(index);"},{"lineNumber":145,"author":{"gitId":"tjtanjin"},"content":"        }"},{"lineNumber":146,"author":{"gitId":"tjtanjin"},"content":""},{"lineNumber":147,"author":{"gitId":"tjtanjin"},"content":"        //write JSON file"},{"lineNumber":148,"author":{"gitId":"tjtanjin"},"content":"        try (FileWriter file \u003d new FileWriter(this.path)) {"},{"lineNumber":149,"author":{"gitId":"tjtanjin"},"content":""},{"lineNumber":150,"author":{"gitId":"tjtanjin"},"content":"            file.write(taskList.toJSONString());"},{"lineNumber":151,"author":{"gitId":"tjtanjin"},"content":"            file.flush();"},{"lineNumber":152,"author":{"gitId":"tjtanjin"},"content":""},{"lineNumber":153,"author":{"gitId":"tjtanjin"},"content":"        } catch (IOException e) {"},{"lineNumber":154,"author":{"gitId":"tjtanjin"},"content":"            e.printStackTrace();"},{"lineNumber":155,"author":{"gitId":"tjtanjin"},"content":"        }"},{"lineNumber":156,"author":{"gitId":"tjtanjin"},"content":"    }"},{"lineNumber":157,"author":{"gitId":"tjtanjin"},"content":"}"}],"authorContributionMap":{"tjtanjin":157}},{"path":"src/main/java/com/tjtanjin/ip/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tjtanjin"},"content":"package com.tjtanjin.ip;"},{"lineNumber":2,"author":{"gitId":"tjtanjin"},"content":""},{"lineNumber":3,"author":{"gitId":"tjtanjin"},"content":"import java.time.LocalDate;"},{"lineNumber":4,"author":{"gitId":"tjtanjin"},"content":""},{"lineNumber":5,"author":{"gitId":"tjtanjin"},"content":"/**"},{"lineNumber":6,"author":{"gitId":"tjtanjin"},"content":" * Encapsulates a task and supports operators to retrieve"},{"lineNumber":7,"author":{"gitId":"tjtanjin"},"content":" * information about the task such as taskName, status and type."},{"lineNumber":8,"author":{"gitId":"tjtanjin"},"content":" */"},{"lineNumber":9,"author":{"gitId":"tjtanjin"},"content":"public class Task {"},{"lineNumber":10,"author":{"gitId":"tjtanjin"},"content":""},{"lineNumber":11,"author":{"gitId":"tjtanjin"},"content":"    //task details"},{"lineNumber":12,"author":{"gitId":"tjtanjin"},"content":"    private final String taskName;"},{"lineNumber":13,"author":{"gitId":"tjtanjin"},"content":"    private String status;"},{"lineNumber":14,"author":{"gitId":"tjtanjin"},"content":"    private final String type;"},{"lineNumber":15,"author":{"gitId":"tjtanjin"},"content":""},{"lineNumber":16,"author":{"gitId":"tjtanjin"},"content":"    /**"},{"lineNumber":17,"author":{"gitId":"tjtanjin"},"content":"     * Constructor for Task class."},{"lineNumber":18,"author":{"gitId":"tjtanjin"},"content":"     * @param taskName name of task"},{"lineNumber":19,"author":{"gitId":"tjtanjin"},"content":"     * @param status task completion status"},{"lineNumber":20,"author":{"gitId":"tjtanjin"},"content":"     * @param type type of task"},{"lineNumber":21,"author":{"gitId":"tjtanjin"},"content":"     */"},{"lineNumber":22,"author":{"gitId":"tjtanjin"},"content":"    public Task(String taskName, String status, String type) {"},{"lineNumber":23,"author":{"gitId":"tjtanjin"},"content":"        this.taskName \u003d taskName;"},{"lineNumber":24,"author":{"gitId":"tjtanjin"},"content":"        this.status \u003d status;"},{"lineNumber":25,"author":{"gitId":"tjtanjin"},"content":"        this.type \u003d type;"},{"lineNumber":26,"author":{"gitId":"tjtanjin"},"content":"    }"},{"lineNumber":27,"author":{"gitId":"tjtanjin"},"content":""},{"lineNumber":28,"author":{"gitId":"tjtanjin"},"content":"    public String getTaskName() {"},{"lineNumber":29,"author":{"gitId":"tjtanjin"},"content":"        return this.taskName;"},{"lineNumber":30,"author":{"gitId":"tjtanjin"},"content":"    }"},{"lineNumber":31,"author":{"gitId":"tjtanjin"},"content":""},{"lineNumber":32,"author":{"gitId":"tjtanjin"},"content":"    public String getStatus() {"},{"lineNumber":33,"author":{"gitId":"tjtanjin"},"content":"        return this.status;"},{"lineNumber":34,"author":{"gitId":"tjtanjin"},"content":"    }"},{"lineNumber":35,"author":{"gitId":"tjtanjin"},"content":""},{"lineNumber":36,"author":{"gitId":"tjtanjin"},"content":"    public String getType() {"},{"lineNumber":37,"author":{"gitId":"tjtanjin"},"content":"        return this.type;"},{"lineNumber":38,"author":{"gitId":"tjtanjin"},"content":"    }"},{"lineNumber":39,"author":{"gitId":"tjtanjin"},"content":""},{"lineNumber":40,"author":{"gitId":"tjtanjin"},"content":"    public LocalDate[] getDates() {"},{"lineNumber":41,"author":{"gitId":"tjtanjin"},"content":"        return new LocalDate[1];"},{"lineNumber":42,"author":{"gitId":"tjtanjin"},"content":"    }"},{"lineNumber":43,"author":{"gitId":"tjtanjin"},"content":""},{"lineNumber":44,"author":{"gitId":"tjtanjin"},"content":"    /**"},{"lineNumber":45,"author":{"gitId":"tjtanjin"},"content":"     * Marks the task as completed."},{"lineNumber":46,"author":{"gitId":"tjtanjin"},"content":"     */"},{"lineNumber":47,"author":{"gitId":"tjtanjin"},"content":"    public void markCompleted() {"},{"lineNumber":48,"author":{"gitId":"tjtanjin"},"content":"        this.status \u003d \"complete\";"},{"lineNumber":49,"author":{"gitId":"tjtanjin"},"content":"    }"},{"lineNumber":50,"author":{"gitId":"tjtanjin"},"content":""},{"lineNumber":51,"author":{"gitId":"tjtanjin"},"content":"    @Override"},{"lineNumber":52,"author":{"gitId":"tjtanjin"},"content":"    public String toString() {"},{"lineNumber":53,"author":{"gitId":"tjtanjin"},"content":"        if (this.getStatus().equals(\"incomplete\")) {"},{"lineNumber":54,"author":{"gitId":"tjtanjin"},"content":"            return \"[\" + this.getType().charAt(0) + \"][ ] \" + this.getTaskName();"},{"lineNumber":55,"author":{"gitId":"tjtanjin"},"content":"        } else {"},{"lineNumber":56,"author":{"gitId":"tjtanjin"},"content":"            return \"[\" + this.getType().charAt(0) + \"][X] \" + this.getTaskName();"},{"lineNumber":57,"author":{"gitId":"tjtanjin"},"content":"        }"},{"lineNumber":58,"author":{"gitId":"tjtanjin"},"content":"    }"},{"lineNumber":59,"author":{"gitId":"tjtanjin"},"content":"}"}],"authorContributionMap":{"tjtanjin":59}},{"path":"src/main/java/com/tjtanjin/ip/TaskHandler.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tjtanjin"},"content":"package com.tjtanjin.ip;"},{"lineNumber":2,"author":{"gitId":"tjtanjin"},"content":""},{"lineNumber":3,"author":{"gitId":"tjtanjin"},"content":"import java.time.LocalDate;"},{"lineNumber":4,"author":{"gitId":"tjtanjin"},"content":"import java.util.ArrayList;"},{"lineNumber":5,"author":{"gitId":"tjtanjin"},"content":""},{"lineNumber":6,"author":{"gitId":"tjtanjin"},"content":"/**"},{"lineNumber":7,"author":{"gitId":"tjtanjin"},"content":" * TaskList manages all tasks and their operations."},{"lineNumber":8,"author":{"gitId":"tjtanjin"},"content":" */"},{"lineNumber":9,"author":{"gitId":"tjtanjin"},"content":"public class TaskHandler {"},{"lineNumber":10,"author":{"gitId":"tjtanjin"},"content":""},{"lineNumber":11,"author":{"gitId":"tjtanjin"},"content":"    //use arraylist to store tasks"},{"lineNumber":12,"author":{"gitId":"tjtanjin"},"content":"    private final StorageHandler storageHandler;"},{"lineNumber":13,"author":{"gitId":"tjtanjin"},"content":"    private final ArrayList\u003cTask\u003e tasks;"},{"lineNumber":14,"author":{"gitId":"tjtanjin"},"content":""},{"lineNumber":15,"author":{"gitId":"tjtanjin"},"content":"    /**"},{"lineNumber":16,"author":{"gitId":"tjtanjin"},"content":"     * Constructor for TaskList."},{"lineNumber":17,"author":{"gitId":"tjtanjin"},"content":"     * @param storageHandler storage to store and load tasks from"},{"lineNumber":18,"author":{"gitId":"tjtanjin"},"content":"     */"},{"lineNumber":19,"author":{"gitId":"tjtanjin"},"content":"    public TaskHandler(StorageHandler storageHandler) {"},{"lineNumber":20,"author":{"gitId":"tjtanjin"},"content":"        this.storageHandler \u003d storageHandler;"},{"lineNumber":21,"author":{"gitId":"tjtanjin"},"content":"        this.tasks \u003d storageHandler.loadTasks();"},{"lineNumber":22,"author":{"gitId":"tjtanjin"},"content":"    }"},{"lineNumber":23,"author":{"gitId":"tjtanjin"},"content":""},{"lineNumber":24,"author":{"gitId":"tjtanjin"},"content":"    /**"},{"lineNumber":25,"author":{"gitId":"tjtanjin"},"content":"     * Adds a new task."},{"lineNumber":26,"author":{"gitId":"tjtanjin"},"content":"     * @param taskType type of task (todo, deadline or event)"},{"lineNumber":27,"author":{"gitId":"tjtanjin"},"content":"     * @param taskName name of task"},{"lineNumber":28,"author":{"gitId":"tjtanjin"},"content":"     * @param taskDates taskDates array of dates (defaults to first element for deadline end date)"},{"lineNumber":29,"author":{"gitId":"tjtanjin"},"content":"     */"},{"lineNumber":30,"author":{"gitId":"tjtanjin"},"content":"    public void addTask(String taskType, String taskName, LocalDate[] taskDates) {"},{"lineNumber":31,"author":{"gitId":"tjtanjin"},"content":"        Task task;"},{"lineNumber":32,"author":{"gitId":"tjtanjin"},"content":"        if (taskType.equalsIgnoreCase(\"DEADLINE\")) {"},{"lineNumber":33,"author":{"gitId":"tjtanjin"},"content":"            task \u003d new Deadline(taskName, \"incomplete\", taskDates);"},{"lineNumber":34,"author":{"gitId":"tjtanjin"},"content":"        } else if (taskType.equalsIgnoreCase(\"EVENT\")) {"},{"lineNumber":35,"author":{"gitId":"tjtanjin"},"content":"            task \u003d new Event(taskName, \"incomplete\", taskDates);"},{"lineNumber":36,"author":{"gitId":"tjtanjin"},"content":"        } else {"},{"lineNumber":37,"author":{"gitId":"tjtanjin"},"content":"            task \u003d new ToDo(taskName, \"incomplete\");"},{"lineNumber":38,"author":{"gitId":"tjtanjin"},"content":"        }"},{"lineNumber":39,"author":{"gitId":"tjtanjin"},"content":"        tasks.add(task);"},{"lineNumber":40,"author":{"gitId":"tjtanjin"},"content":"        storageHandler.saveTask(tasks.size(), \"NEW\","},{"lineNumber":41,"author":{"gitId":"tjtanjin"},"content":"                taskName, \"incomplete\", taskType.toUpperCase(), taskDates);"},{"lineNumber":42,"author":{"gitId":"tjtanjin"},"content":"        int numTasks \u003d tasks.size();"},{"lineNumber":43,"author":{"gitId":"tjtanjin"},"content":"        Ui.showInfo(\"Task successfully added! You now have \" + numTasks + \" task(s)!\");"},{"lineNumber":44,"author":{"gitId":"tjtanjin"},"content":"    }"},{"lineNumber":45,"author":{"gitId":"tjtanjin"},"content":""},{"lineNumber":46,"author":{"gitId":"tjtanjin"},"content":"    public ArrayList\u003cTask\u003e getTasks() {"},{"lineNumber":47,"author":{"gitId":"tjtanjin"},"content":"        return tasks;"},{"lineNumber":48,"author":{"gitId":"tjtanjin"},"content":"    }"},{"lineNumber":49,"author":{"gitId":"tjtanjin"},"content":""},{"lineNumber":50,"author":{"gitId":"tjtanjin"},"content":"    /**"},{"lineNumber":51,"author":{"gitId":"tjtanjin"},"content":"     * Marks a task as done."},{"lineNumber":52,"author":{"gitId":"tjtanjin"},"content":"     * @param index index of task to mark as done"},{"lineNumber":53,"author":{"gitId":"tjtanjin"},"content":"     */"},{"lineNumber":54,"author":{"gitId":"tjtanjin"},"content":"    public void markTaskDone(int index) {"},{"lineNumber":55,"author":{"gitId":"tjtanjin"},"content":"        try {"},{"lineNumber":56,"author":{"gitId":"tjtanjin"},"content":"            Task task \u003d tasks.get(index);"},{"lineNumber":57,"author":{"gitId":"tjtanjin"},"content":"            if (task.getStatus().equals(\"complete\")) {"},{"lineNumber":58,"author":{"gitId":"tjtanjin"},"content":"                Ui.showError(\"Task is already completed!\");"},{"lineNumber":59,"author":{"gitId":"tjtanjin"},"content":"            } else {"},{"lineNumber":60,"author":{"gitId":"tjtanjin"},"content":"                task.markCompleted();"},{"lineNumber":61,"author":{"gitId":"tjtanjin"},"content":"                String taskName \u003d task.getTaskName();"},{"lineNumber":62,"author":{"gitId":"tjtanjin"},"content":"                String taskType \u003d task.getType().toUpperCase();"},{"lineNumber":63,"author":{"gitId":"tjtanjin"},"content":"                LocalDate[] taskDates \u003d task.getDates();"},{"lineNumber":64,"author":{"gitId":"tjtanjin"},"content":"                storageHandler.saveTask(index, \"DONE\", taskName, \"complete\", taskType, taskDates);"},{"lineNumber":65,"author":{"gitId":"tjtanjin"},"content":"                Ui.showInfo(\"Yay your task is done! :D\");"},{"lineNumber":66,"author":{"gitId":"tjtanjin"},"content":"            }"},{"lineNumber":67,"author":{"gitId":"tjtanjin"},"content":"        } catch (IndexOutOfBoundsException e) {"},{"lineNumber":68,"author":{"gitId":"tjtanjin"},"content":"            Ui.showError(\"The specified task index does not exist!\");"},{"lineNumber":69,"author":{"gitId":"tjtanjin"},"content":"        }"},{"lineNumber":70,"author":{"gitId":"tjtanjin"},"content":"    }"},{"lineNumber":71,"author":{"gitId":"tjtanjin"},"content":""},{"lineNumber":72,"author":{"gitId":"tjtanjin"},"content":"    /**"},{"lineNumber":73,"author":{"gitId":"tjtanjin"},"content":"     * Deletes a task."},{"lineNumber":74,"author":{"gitId":"tjtanjin"},"content":"     * @param index index of task to delete"},{"lineNumber":75,"author":{"gitId":"tjtanjin"},"content":"     */"},{"lineNumber":76,"author":{"gitId":"tjtanjin"},"content":"    public void deleteTask(int index) {"},{"lineNumber":77,"author":{"gitId":"tjtanjin"},"content":"        try {"},{"lineNumber":78,"author":{"gitId":"tjtanjin"},"content":"            Task task \u003d tasks.get(index);"},{"lineNumber":79,"author":{"gitId":"tjtanjin"},"content":"            tasks.remove(task);"},{"lineNumber":80,"author":{"gitId":"tjtanjin"},"content":"            String taskName \u003d task.getTaskName();"},{"lineNumber":81,"author":{"gitId":"tjtanjin"},"content":"            String taskType \u003d task.getType().toUpperCase();"},{"lineNumber":82,"author":{"gitId":"tjtanjin"},"content":"            LocalDate[] taskDates \u003d task.getDates();"},{"lineNumber":83,"author":{"gitId":"tjtanjin"},"content":"            storageHandler.saveTask(index, \"DELETE\", taskName, \"complete\", taskType, taskDates);"},{"lineNumber":84,"author":{"gitId":"tjtanjin"},"content":"            Ui.showInfo(\"The following task has been deleted:\\n\" + task);"},{"lineNumber":85,"author":{"gitId":"tjtanjin"},"content":"        } catch (IndexOutOfBoundsException e) {"},{"lineNumber":86,"author":{"gitId":"tjtanjin"},"content":"            Ui.showError(\"The specified task index does not exist!\");"},{"lineNumber":87,"author":{"gitId":"tjtanjin"},"content":"        }"},{"lineNumber":88,"author":{"gitId":"tjtanjin"},"content":"    }"},{"lineNumber":89,"author":{"gitId":"tjtanjin"},"content":""},{"lineNumber":90,"author":{"gitId":"tjtanjin"},"content":"    /**"},{"lineNumber":91,"author":{"gitId":"tjtanjin"},"content":"     * Shows all tasks to user"},{"lineNumber":92,"author":{"gitId":"tjtanjin"},"content":"     */"},{"lineNumber":93,"author":{"gitId":"tjtanjin"},"content":"    public void showAllTasks() {"},{"lineNumber":94,"author":{"gitId":"tjtanjin"},"content":"        if (tasks.size() \u003d\u003d 0) {"},{"lineNumber":95,"author":{"gitId":"tjtanjin"},"content":"            Ui.showInfo(\"You have no task at the moment!\");"},{"lineNumber":96,"author":{"gitId":"tjtanjin"},"content":"        } else {"},{"lineNumber":97,"author":{"gitId":"tjtanjin"},"content":"            for (int i \u003d 1; i \u003c\u003d tasks.size(); i++) {"},{"lineNumber":98,"author":{"gitId":"tjtanjin"},"content":"                Task task \u003d tasks.get(i - 1);"},{"lineNumber":99,"author":{"gitId":"tjtanjin"},"content":"                Ui.showInfo(i + \".\" + task);"},{"lineNumber":100,"author":{"gitId":"tjtanjin"},"content":"            }"},{"lineNumber":101,"author":{"gitId":"tjtanjin"},"content":"        }"},{"lineNumber":102,"author":{"gitId":"tjtanjin"},"content":"    }"},{"lineNumber":103,"author":{"gitId":"tjtanjin"},"content":""},{"lineNumber":104,"author":{"gitId":"tjtanjin"},"content":"    /**"},{"lineNumber":105,"author":{"gitId":"tjtanjin"},"content":"     * Find tasks whose name contains input from user."},{"lineNumber":106,"author":{"gitId":"tjtanjin"},"content":"     * @param taskName name of task"},{"lineNumber":107,"author":{"gitId":"tjtanjin"},"content":"     */"},{"lineNumber":108,"author":{"gitId":"tjtanjin"},"content":"    public void findTask(String taskName) {"},{"lineNumber":109,"author":{"gitId":"tjtanjin"},"content":"        if (tasks.size() \u003d\u003d 0) {"},{"lineNumber":110,"author":{"gitId":"tjtanjin"},"content":"            Ui.showInfo(\"You have no task at the moment!\");"},{"lineNumber":111,"author":{"gitId":"tjtanjin"},"content":"        } else {"},{"lineNumber":112,"author":{"gitId":"tjtanjin"},"content":"            int counter \u003d 0;"},{"lineNumber":113,"author":{"gitId":"tjtanjin"},"content":"            for (int i \u003d 1; i \u003c\u003d tasks.size(); i++) {"},{"lineNumber":114,"author":{"gitId":"tjtanjin"},"content":"                Task task \u003d tasks.get(i - 1);"},{"lineNumber":115,"author":{"gitId":"tjtanjin"},"content":"                if (task.getTaskName().contains(taskName)) {"},{"lineNumber":116,"author":{"gitId":"tjtanjin"},"content":"                    counter +\u003d 1;"},{"lineNumber":117,"author":{"gitId":"tjtanjin"},"content":"                    Ui.showInfo(counter + \".\" + task);"},{"lineNumber":118,"author":{"gitId":"tjtanjin"},"content":"                }"},{"lineNumber":119,"author":{"gitId":"tjtanjin"},"content":"            }"},{"lineNumber":120,"author":{"gitId":"tjtanjin"},"content":"            Ui.showInfo(\"A total of \" + counter + \" task(s) were found.\");"},{"lineNumber":121,"author":{"gitId":"tjtanjin"},"content":"        }"},{"lineNumber":122,"author":{"gitId":"tjtanjin"},"content":"    }"},{"lineNumber":123,"author":{"gitId":"tjtanjin"},"content":"}"}],"authorContributionMap":{"tjtanjin":123}},{"path":"src/main/java/com/tjtanjin/ip/ToDo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tjtanjin"},"content":"package com.tjtanjin.ip;"},{"lineNumber":2,"author":{"gitId":"tjtanjin"},"content":""},{"lineNumber":3,"author":{"gitId":"tjtanjin"},"content":"/**"},{"lineNumber":4,"author":{"gitId":"tjtanjin"},"content":" * ToDo is a child class of Task, retaining all the"},{"lineNumber":5,"author":{"gitId":"tjtanjin"},"content":" * same functionalities as its parent."},{"lineNumber":6,"author":{"gitId":"tjtanjin"},"content":" */"},{"lineNumber":7,"author":{"gitId":"tjtanjin"},"content":"public class ToDo extends Task {"},{"lineNumber":8,"author":{"gitId":"tjtanjin"},"content":""},{"lineNumber":9,"author":{"gitId":"tjtanjin"},"content":"    /**"},{"lineNumber":10,"author":{"gitId":"tjtanjin"},"content":"     * Constructor for ToDo class."},{"lineNumber":11,"author":{"gitId":"tjtanjin"},"content":"     * @param taskName name of task"},{"lineNumber":12,"author":{"gitId":"tjtanjin"},"content":"     * @param status task completion status"},{"lineNumber":13,"author":{"gitId":"tjtanjin"},"content":"     */"},{"lineNumber":14,"author":{"gitId":"tjtanjin"},"content":"    public ToDo(String taskName, String status) {"},{"lineNumber":15,"author":{"gitId":"tjtanjin"},"content":"        super(taskName, status, \"TODO\");"},{"lineNumber":16,"author":{"gitId":"tjtanjin"},"content":"    }"},{"lineNumber":17,"author":{"gitId":"tjtanjin"},"content":"}"}],"authorContributionMap":{"tjtanjin":17}},{"path":"src/main/java/com/tjtanjin/ip/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tjtanjin"},"content":"package com.tjtanjin.ip;"},{"lineNumber":2,"author":{"gitId":"tjtanjin"},"content":""},{"lineNumber":3,"author":{"gitId":"tjtanjin"},"content":"import java.util.Scanner;"},{"lineNumber":4,"author":{"gitId":"tjtanjin"},"content":""},{"lineNumber":5,"author":{"gitId":"tjtanjin"},"content":"/**"},{"lineNumber":6,"author":{"gitId":"tjtanjin"},"content":" * Ui class handles direct interactions between the application and the user"},{"lineNumber":7,"author":{"gitId":"tjtanjin"},"content":" */"},{"lineNumber":8,"author":{"gitId":"tjtanjin"},"content":"public class Ui {"},{"lineNumber":9,"author":{"gitId":"tjtanjin"},"content":""},{"lineNumber":10,"author":{"gitId":"tjtanjin"},"content":"    /**"},{"lineNumber":11,"author":{"gitId":"tjtanjin"},"content":"     * Greets the user upon program launch."},{"lineNumber":12,"author":{"gitId":"tjtanjin"},"content":"     */"},{"lineNumber":13,"author":{"gitId":"tjtanjin"},"content":"    public static void showWelcome() {"},{"lineNumber":14,"author":{"gitId":"tjtanjin"},"content":"        String logo \u003d \" ____        _        \\n\""},{"lineNumber":15,"author":{"gitId":"tjtanjin"},"content":"                + \"|  _ \\\\ _   _| | _____ \\n\""},{"lineNumber":16,"author":{"gitId":"tjtanjin"},"content":"                + \"| | | | | | | |/ / _ \\\\\\n\""},{"lineNumber":17,"author":{"gitId":"tjtanjin"},"content":"                + \"| |_| | |_| |   \u003c  __/\\n\""},{"lineNumber":18,"author":{"gitId":"tjtanjin"},"content":"                + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\";"},{"lineNumber":19,"author":{"gitId":"tjtanjin"},"content":"        System.out.println(\"Hello from\\n\" + logo + \"\\nWhat can I do for you?\");"},{"lineNumber":20,"author":{"gitId":"tjtanjin"},"content":"    }"},{"lineNumber":21,"author":{"gitId":"tjtanjin"},"content":""},{"lineNumber":22,"author":{"gitId":"tjtanjin"},"content":"    /**"},{"lineNumber":23,"author":{"gitId":"tjtanjin"},"content":"     * Prints line divider between commands for clarity."},{"lineNumber":24,"author":{"gitId":"tjtanjin"},"content":"     */"},{"lineNumber":25,"author":{"gitId":"tjtanjin"},"content":"    public static void showDivider() {"},{"lineNumber":26,"author":{"gitId":"tjtanjin"},"content":"        System.out.println(\"------------------------------------\");"},{"lineNumber":27,"author":{"gitId":"tjtanjin"},"content":"    }"},{"lineNumber":28,"author":{"gitId":"tjtanjin"},"content":""},{"lineNumber":29,"author":{"gitId":"tjtanjin"},"content":"    /**"},{"lineNumber":30,"author":{"gitId":"tjtanjin"},"content":"     * Prints information to the user"},{"lineNumber":31,"author":{"gitId":"tjtanjin"},"content":"     * @param info information to print"},{"lineNumber":32,"author":{"gitId":"tjtanjin"},"content":"     */"},{"lineNumber":33,"author":{"gitId":"tjtanjin"},"content":"    public static void showInfo(String info) {"},{"lineNumber":34,"author":{"gitId":"tjtanjin"},"content":"        System.out.println(info);"},{"lineNumber":35,"author":{"gitId":"tjtanjin"},"content":"    }"},{"lineNumber":36,"author":{"gitId":"tjtanjin"},"content":""},{"lineNumber":37,"author":{"gitId":"tjtanjin"},"content":"    /**"},{"lineNumber":38,"author":{"gitId":"tjtanjin"},"content":"     * Prints error message to the yser"},{"lineNumber":39,"author":{"gitId":"tjtanjin"},"content":"     * @param msg error message to print"},{"lineNumber":40,"author":{"gitId":"tjtanjin"},"content":"     */"},{"lineNumber":41,"author":{"gitId":"tjtanjin"},"content":"    public static void showError(String msg) {"},{"lineNumber":42,"author":{"gitId":"tjtanjin"},"content":"        System.out.println(\"Error: \" + msg);"},{"lineNumber":43,"author":{"gitId":"tjtanjin"},"content":"    }"},{"lineNumber":44,"author":{"gitId":"tjtanjin"},"content":""},{"lineNumber":45,"author":{"gitId":"tjtanjin"},"content":"    /**"},{"lineNumber":46,"author":{"gitId":"tjtanjin"},"content":"     * Read and return input from the user."},{"lineNumber":47,"author":{"gitId":"tjtanjin"},"content":"     * @param sc scanner to read next line"},{"lineNumber":48,"author":{"gitId":"tjtanjin"},"content":"     * @return input from user"},{"lineNumber":49,"author":{"gitId":"tjtanjin"},"content":"     */"},{"lineNumber":50,"author":{"gitId":"tjtanjin"},"content":"    public static String readCommand(Scanner sc) {"},{"lineNumber":51,"author":{"gitId":"tjtanjin"},"content":"        return sc.nextLine();"},{"lineNumber":52,"author":{"gitId":"tjtanjin"},"content":"    }"},{"lineNumber":53,"author":{"gitId":"tjtanjin"},"content":"}"}],"authorContributionMap":{"tjtanjin":53}},{"path":"src/test/java/com/tjtanjin/ip/TaskTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tjtanjin"},"content":"package com.tjtanjin.ip;"},{"lineNumber":2,"author":{"gitId":"tjtanjin"},"content":""},{"lineNumber":3,"author":{"gitId":"tjtanjin"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;"},{"lineNumber":4,"author":{"gitId":"tjtanjin"},"content":""},{"lineNumber":5,"author":{"gitId":"tjtanjin"},"content":"import java.time.LocalDate;"},{"lineNumber":6,"author":{"gitId":"tjtanjin"},"content":""},{"lineNumber":7,"author":{"gitId":"tjtanjin"},"content":"import org.junit.jupiter.api.Test;"},{"lineNumber":8,"author":{"gitId":"tjtanjin"},"content":""},{"lineNumber":9,"author":{"gitId":"tjtanjin"},"content":"public class TaskTest {"},{"lineNumber":10,"author":{"gitId":"tjtanjin"},"content":"    private final Task task \u003d new Task(\"Test Task\", \"incomplete\", \"TODO\");"},{"lineNumber":11,"author":{"gitId":"tjtanjin"},"content":""},{"lineNumber":12,"author":{"gitId":"tjtanjin"},"content":"    @Test"},{"lineNumber":13,"author":{"gitId":"tjtanjin"},"content":"    void getTaskName_whenInvoke_thenOutputTaskName() {"},{"lineNumber":14,"author":{"gitId":"tjtanjin"},"content":"        String expected \u003d \"Test Task\";"},{"lineNumber":15,"author":{"gitId":"tjtanjin"},"content":"        String taskName \u003d task.getTaskName();"},{"lineNumber":16,"author":{"gitId":"tjtanjin"},"content":"        assertEquals(expected, taskName);"},{"lineNumber":17,"author":{"gitId":"tjtanjin"},"content":"    }"},{"lineNumber":18,"author":{"gitId":"tjtanjin"},"content":""},{"lineNumber":19,"author":{"gitId":"tjtanjin"},"content":"    @Test"},{"lineNumber":20,"author":{"gitId":"tjtanjin"},"content":"    void getStatus_whenInvoke_thenOutputTaskStatus() {"},{"lineNumber":21,"author":{"gitId":"tjtanjin"},"content":"        String expected \u003d \"incomplete\";"},{"lineNumber":22,"author":{"gitId":"tjtanjin"},"content":"        String taskStatus \u003d task.getStatus();"},{"lineNumber":23,"author":{"gitId":"tjtanjin"},"content":"        assertEquals(expected, taskStatus);"},{"lineNumber":24,"author":{"gitId":"tjtanjin"},"content":"    }"},{"lineNumber":25,"author":{"gitId":"tjtanjin"},"content":""},{"lineNumber":26,"author":{"gitId":"tjtanjin"},"content":"    @Test"},{"lineNumber":27,"author":{"gitId":"tjtanjin"},"content":"    void getType_whenInvoke_thenOutputTaskType() {"},{"lineNumber":28,"author":{"gitId":"tjtanjin"},"content":"        String expected \u003d \"TODO\";"},{"lineNumber":29,"author":{"gitId":"tjtanjin"},"content":"        String taskType \u003d task.getType();"},{"lineNumber":30,"author":{"gitId":"tjtanjin"},"content":"        assertEquals(expected, taskType);"},{"lineNumber":31,"author":{"gitId":"tjtanjin"},"content":"    }"},{"lineNumber":32,"author":{"gitId":"tjtanjin"},"content":""},{"lineNumber":33,"author":{"gitId":"tjtanjin"},"content":"    @Test"},{"lineNumber":34,"author":{"gitId":"tjtanjin"},"content":"    void getDate_whenInvoke_thenOutputTaskDate() {"},{"lineNumber":35,"author":{"gitId":"tjtanjin"},"content":"        LocalDate[] expected \u003d new LocalDate[1];"},{"lineNumber":36,"author":{"gitId":"tjtanjin"},"content":"        LocalDate[] taskDate \u003d task.getDates();"},{"lineNumber":37,"author":{"gitId":"tjtanjin"},"content":"        assertEquals(expected[0], taskDate[0]);"},{"lineNumber":38,"author":{"gitId":"tjtanjin"},"content":"    }"},{"lineNumber":39,"author":{"gitId":"tjtanjin"},"content":""},{"lineNumber":40,"author":{"gitId":"tjtanjin"},"content":"    @Test"},{"lineNumber":41,"author":{"gitId":"tjtanjin"},"content":"    void markCompleted() {"},{"lineNumber":42,"author":{"gitId":"tjtanjin"},"content":"        String expected \u003d \"complete\";"},{"lineNumber":43,"author":{"gitId":"tjtanjin"},"content":"        task.markCompleted();"},{"lineNumber":44,"author":{"gitId":"tjtanjin"},"content":"        String taskStatus \u003d task.getStatus();"},{"lineNumber":45,"author":{"gitId":"tjtanjin"},"content":"        assertEquals(expected, taskStatus);"},{"lineNumber":46,"author":{"gitId":"tjtanjin"},"content":"    }"},{"lineNumber":47,"author":{"gitId":"tjtanjin"},"content":"}"}],"authorContributionMap":{"tjtanjin":47}},{"path":"src/test/java/com/tjtanjin/ip/UiTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tjtanjin"},"content":"package com.tjtanjin.ip;"},{"lineNumber":2,"author":{"gitId":"tjtanjin"},"content":""},{"lineNumber":3,"author":{"gitId":"tjtanjin"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;"},{"lineNumber":4,"author":{"gitId":"tjtanjin"},"content":""},{"lineNumber":5,"author":{"gitId":"tjtanjin"},"content":"import java.io.ByteArrayOutputStream;"},{"lineNumber":6,"author":{"gitId":"tjtanjin"},"content":"import java.io.PrintStream;"},{"lineNumber":7,"author":{"gitId":"tjtanjin"},"content":""},{"lineNumber":8,"author":{"gitId":"tjtanjin"},"content":"import org.junit.jupiter.api.AfterEach;"},{"lineNumber":9,"author":{"gitId":"tjtanjin"},"content":"import org.junit.jupiter.api.BeforeEach;"},{"lineNumber":10,"author":{"gitId":"tjtanjin"},"content":"import org.junit.jupiter.api.Test;"},{"lineNumber":11,"author":{"gitId":"tjtanjin"},"content":""},{"lineNumber":12,"author":{"gitId":"tjtanjin"},"content":""},{"lineNumber":13,"author":{"gitId":"tjtanjin"},"content":"public class UiTest {"},{"lineNumber":14,"author":{"gitId":"tjtanjin"},"content":""},{"lineNumber":15,"author":{"gitId":"tjtanjin"},"content":"    //reused from https://www.baeldung.com/java-testing-system-out-println"},{"lineNumber":16,"author":{"gitId":"tjtanjin"},"content":"    private final PrintStream standardOut \u003d System.out;"},{"lineNumber":17,"author":{"gitId":"tjtanjin"},"content":"    private final ByteArrayOutputStream outputStreamCaptor \u003d new ByteArrayOutputStream();"},{"lineNumber":18,"author":{"gitId":"tjtanjin"},"content":""},{"lineNumber":19,"author":{"gitId":"tjtanjin"},"content":"    @BeforeEach"},{"lineNumber":20,"author":{"gitId":"tjtanjin"},"content":"    public void setUp() {"},{"lineNumber":21,"author":{"gitId":"tjtanjin"},"content":"        System.setOut(new PrintStream(outputStreamCaptor));"},{"lineNumber":22,"author":{"gitId":"tjtanjin"},"content":"    }"},{"lineNumber":23,"author":{"gitId":"tjtanjin"},"content":""},{"lineNumber":24,"author":{"gitId":"tjtanjin"},"content":"    @AfterEach"},{"lineNumber":25,"author":{"gitId":"tjtanjin"},"content":"    public void tearDown() {"},{"lineNumber":26,"author":{"gitId":"tjtanjin"},"content":"        System.setOut(standardOut);"},{"lineNumber":27,"author":{"gitId":"tjtanjin"},"content":"    }"},{"lineNumber":28,"author":{"gitId":"tjtanjin"},"content":""},{"lineNumber":29,"author":{"gitId":"tjtanjin"},"content":"    @Test"},{"lineNumber":30,"author":{"gitId":"tjtanjin"},"content":"    void showWelcome_whenInvokePrintln_thenOutputCaptorSuccess() {"},{"lineNumber":31,"author":{"gitId":"tjtanjin"},"content":"        String logo \u003d \" ____        _        \\n\""},{"lineNumber":32,"author":{"gitId":"tjtanjin"},"content":"                + \"|  _ \\\\ _   _| | _____ \\n\""},{"lineNumber":33,"author":{"gitId":"tjtanjin"},"content":"                + \"| | | | | | | |/ / _ \\\\\\n\""},{"lineNumber":34,"author":{"gitId":"tjtanjin"},"content":"                + \"| |_| | |_| |   \u003c  __/\\n\""},{"lineNumber":35,"author":{"gitId":"tjtanjin"},"content":"                + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\";"},{"lineNumber":36,"author":{"gitId":"tjtanjin"},"content":"        String expected \u003d \"Hello from\\n\" + logo + \"\\nWhat can I do for you?\";"},{"lineNumber":37,"author":{"gitId":"tjtanjin"},"content":"        Ui.showWelcome();"},{"lineNumber":38,"author":{"gitId":"tjtanjin"},"content":"        assertEquals(expected, outputStreamCaptor.toString().trim());"},{"lineNumber":39,"author":{"gitId":"tjtanjin"},"content":"    }"},{"lineNumber":40,"author":{"gitId":"tjtanjin"},"content":""},{"lineNumber":41,"author":{"gitId":"tjtanjin"},"content":"    @Test"},{"lineNumber":42,"author":{"gitId":"tjtanjin"},"content":"    void showDivider_whenInvokePrintln_thenOutputCaptorSuccess() {"},{"lineNumber":43,"author":{"gitId":"tjtanjin"},"content":"        String expected \u003d \"------------------------------------\";"},{"lineNumber":44,"author":{"gitId":"tjtanjin"},"content":"        Ui.showDivider();"},{"lineNumber":45,"author":{"gitId":"tjtanjin"},"content":"        assertEquals(expected, outputStreamCaptor.toString().trim());"},{"lineNumber":46,"author":{"gitId":"tjtanjin"},"content":"    }"},{"lineNumber":47,"author":{"gitId":"tjtanjin"},"content":""},{"lineNumber":48,"author":{"gitId":"tjtanjin"},"content":"    @Test"},{"lineNumber":49,"author":{"gitId":"tjtanjin"},"content":"    void showInfo_whenInvokePrintln_thenOutputCaptorSuccess() {"},{"lineNumber":50,"author":{"gitId":"tjtanjin"},"content":"        String expected \u003d \"Test print information message!\";"},{"lineNumber":51,"author":{"gitId":"tjtanjin"},"content":"        Ui.showInfo(expected);"},{"lineNumber":52,"author":{"gitId":"tjtanjin"},"content":"        assertEquals(expected, outputStreamCaptor.toString().trim());"},{"lineNumber":53,"author":{"gitId":"tjtanjin"},"content":"    }"},{"lineNumber":54,"author":{"gitId":"tjtanjin"},"content":""},{"lineNumber":55,"author":{"gitId":"tjtanjin"},"content":"    @Test"},{"lineNumber":56,"author":{"gitId":"tjtanjin"},"content":"    void showError_whenInvokePrintln_thenOutputCaptorSuccess() {"},{"lineNumber":57,"author":{"gitId":"tjtanjin"},"content":"        String errMsg \u003d \"Test print error message!\";"},{"lineNumber":58,"author":{"gitId":"tjtanjin"},"content":"        String expected \u003d \"Error: \" + \"Test print error message!\";"},{"lineNumber":59,"author":{"gitId":"tjtanjin"},"content":"        Ui.showError(errMsg);"},{"lineNumber":60,"author":{"gitId":"tjtanjin"},"content":"        assertEquals(expected, outputStreamCaptor.toString().trim());"},{"lineNumber":61,"author":{"gitId":"tjtanjin"},"content":"    }"},{"lineNumber":62,"author":{"gitId":"tjtanjin"},"content":"}"}],"authorContributionMap":{"tjtanjin":62}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"tjtanjin"},"content":"come and catch me"},{"lineNumber":2,"author":{"gitId":"tjtanjin"},"content":"todo play catching"},{"lineNumber":3,"author":{"gitId":"tjtanjin"},"content":"deadline read book /by sunday 3pm"},{"lineNumber":4,"author":{"gitId":"tjtanjin"},"content":"event swimming class /from monday 4-6pm"},{"lineNumber":5,"author":{"gitId":"tjtanjin"},"content":"event swimming class /from 2020-03-03 /to 2020-03-03"},{"lineNumber":6,"author":{"gitId":"tjtanjin"},"content":"list"},{"lineNumber":7,"author":{"gitId":"tjtanjin"},"content":"done 1"},{"lineNumber":8,"author":{"gitId":"tjtanjin"},"content":"list"},{"lineNumber":9,"author":{"gitId":"tjtanjin"},"content":"done 1"},{"lineNumber":10,"author":{"gitId":"tjtanjin"},"content":"list"},{"lineNumber":11,"author":{"gitId":"tjtanjin"},"content":"done 2"},{"lineNumber":12,"author":{"gitId":"tjtanjin"},"content":"list"},{"lineNumber":13,"author":{"gitId":"tjtanjin"},"content":"delete 1"},{"lineNumber":14,"author":{"gitId":"tjtanjin"},"content":"list"},{"lineNumber":15,"author":{"gitId":"tjtanjin"},"content":"delete 2"},{"lineNumber":16,"author":{"gitId":"tjtanjin"},"content":"list"},{"lineNumber":17,"author":{"gitId":"tjtanjin"},"content":"delete 1"},{"lineNumber":18,"author":{"gitId":"tjtanjin"},"content":"todo final one"},{"lineNumber":19,"author":{"gitId":"tjtanjin"},"content":"todo really meh"},{"lineNumber":20,"author":{"gitId":"tjtanjin"},"content":"find final"},{"lineNumber":21,"author":{"gitId":"tjtanjin"},"content":"list"},{"lineNumber":22,"author":{"gitId":"tjtanjin"},"content":"delete 1"},{"lineNumber":23,"author":{"gitId":"tjtanjin"},"content":"delete 1"},{"lineNumber":24,"author":{"gitId":"tjtanjin"},"content":"list"},{"lineNumber":25,"author":{"gitId":"tjtanjin"},"content":"bye"}],"authorContributionMap":{"tjtanjin":25}},{"path":"text-ui-test/runtest.sh","fileType":"sh","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"#!/usr/bin/env bash"},{"lineNumber":2,"author":{"gitId":"-"},"content":""},{"lineNumber":3,"author":{"gitId":"-"},"content":"# create bin directory if it doesn\u0027t exist"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if [ ! -d \"../bin\" ]"},{"lineNumber":5,"author":{"gitId":"-"},"content":"then"},{"lineNumber":6,"author":{"gitId":"-"},"content":"    mkdir ../bin"},{"lineNumber":7,"author":{"gitId":"-"},"content":"fi"},{"lineNumber":8,"author":{"gitId":"-"},"content":""},{"lineNumber":9,"author":{"gitId":"tjtanjin"},"content":"# create data directory and tasks.json if it doesn\u0027t exist (for testing consistency)"},{"lineNumber":10,"author":{"gitId":"tjtanjin"},"content":"if [ ! -d \"./data\" ]"},{"lineNumber":11,"author":{"gitId":"tjtanjin"},"content":"then"},{"lineNumber":12,"author":{"gitId":"tjtanjin"},"content":"    mkdir ./data"},{"lineNumber":13,"author":{"gitId":"tjtanjin"},"content":"    echo \"[]\" \u003e ./data/tasks.json"},{"lineNumber":14,"author":{"gitId":"tjtanjin"},"content":"fi"},{"lineNumber":15,"author":{"gitId":"tjtanjin"},"content":""},{"lineNumber":16,"author":{"gitId":"-"},"content":"# delete output from previous run"},{"lineNumber":17,"author":{"gitId":"-"},"content":"if [ -e \"./ACTUAL.TXT\" ]"},{"lineNumber":18,"author":{"gitId":"-"},"content":"then"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    rm ACTUAL.TXT"},{"lineNumber":20,"author":{"gitId":"-"},"content":"fi"},{"lineNumber":21,"author":{"gitId":"-"},"content":""},{"lineNumber":22,"author":{"gitId":"tjtanjin"},"content":"# modified to compile with json-simple"},{"lineNumber":23,"author":{"gitId":"-"},"content":"# compile the code into the bin folder, terminates if error occurred"},{"lineNumber":24,"author":{"gitId":"tjtanjin"},"content":"if ! javac -cp ~/.gradle/caches/modules-2/files-2.1/com.googlecode.json-simple/json-simple/1.1.1/c9ad4a0850ab676c5c64461a05ca524cdfff59f1/json-simple-1.1.1.jar:./ ../src/main/java/com/tjtanjin/ip/*.java -Xlint:none -d ../bin ../src/main/java/com/tjtanjin/ip/*.java"},{"lineNumber":25,"author":{"gitId":"-"},"content":"then"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    echo \"********** BUILD FAILURE **********\""},{"lineNumber":27,"author":{"gitId":"-"},"content":"    exit 1"},{"lineNumber":28,"author":{"gitId":"-"},"content":"fi"},{"lineNumber":29,"author":{"gitId":"-"},"content":""},{"lineNumber":30,"author":{"gitId":"tjtanjin"},"content":"# modified to run with json-simple"},{"lineNumber":31,"author":{"gitId":"-"},"content":"# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"},{"lineNumber":32,"author":{"gitId":"tjtanjin"},"content":"java -cp ~/.gradle/caches/modules-2/files-2.1/com.googlecode.json-simple/json-simple/1.1.1/c9ad4a0850ab676c5c64461a05ca524cdfff59f1/json-simple-1.1.1.jar:./:../bin com.tjtanjin.ip.Duke \u003c input.txt \u003e ACTUAL.TXT"},{"lineNumber":33,"author":{"gitId":"-"},"content":""},{"lineNumber":34,"author":{"gitId":"-"},"content":"# convert to UNIX format"},{"lineNumber":35,"author":{"gitId":"-"},"content":"cp EXPECTED.TXT EXPECTED-UNIX.TXT"},{"lineNumber":36,"author":{"gitId":"-"},"content":"dos2unix ACTUAL.TXT EXPECTED-UNIX.TXT"},{"lineNumber":37,"author":{"gitId":"-"},"content":""},{"lineNumber":38,"author":{"gitId":"-"},"content":"# compare the output to the expected output"},{"lineNumber":39,"author":{"gitId":"-"},"content":"diff ACTUAL.TXT EXPECTED-UNIX.TXT"},{"lineNumber":40,"author":{"gitId":"-"},"content":"if [ $? -eq 0 ]"},{"lineNumber":41,"author":{"gitId":"-"},"content":"then"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    echo \"Test result: PASSED\""},{"lineNumber":43,"author":{"gitId":"-"},"content":"    exit 0"},{"lineNumber":44,"author":{"gitId":"-"},"content":"else"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    echo \"Test result: FAILED\""},{"lineNumber":46,"author":{"gitId":"-"},"content":"    exit 1"},{"lineNumber":47,"author":{"gitId":"-"},"content":"fi"}],"authorContributionMap":{"-":36,"tjtanjin":11}}]
