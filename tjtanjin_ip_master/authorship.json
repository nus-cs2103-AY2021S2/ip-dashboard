[{"path":"src/main/java/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tjtanjin"},"content":"import java.util.ArrayList;"},{"lineNumber":2,"author":{"gitId":"tjtanjin"},"content":"import java.util.HashMap;"},{"lineNumber":3,"author":{"gitId":"tjtanjin"},"content":""},{"lineNumber":4,"author":{"gitId":"tjtanjin"},"content":"/**"},{"lineNumber":5,"author":{"gitId":"tjtanjin"},"content":" * The Command class handles the logic of all allowed user commands for Duke."},{"lineNumber":6,"author":{"gitId":"tjtanjin"},"content":" */"},{"lineNumber":7,"author":{"gitId":"tjtanjin"},"content":"public class Command {"},{"lineNumber":8,"author":{"gitId":"tjtanjin"},"content":""},{"lineNumber":9,"author":{"gitId":"tjtanjin"},"content":"    //tracks all valid commands"},{"lineNumber":10,"author":{"gitId":"tjtanjin"},"content":"    private enum Cmd {"},{"lineNumber":11,"author":{"gitId":"tjtanjin"},"content":"        BYE,"},{"lineNumber":12,"author":{"gitId":"tjtanjin"},"content":"        LIST,"},{"lineNumber":13,"author":{"gitId":"tjtanjin"},"content":"        DONE,"},{"lineNumber":14,"author":{"gitId":"tjtanjin"},"content":"        TODO,"},{"lineNumber":15,"author":{"gitId":"tjtanjin"},"content":"        DEADLINE,"},{"lineNumber":16,"author":{"gitId":"tjtanjin"},"content":"        EVENT,"},{"lineNumber":17,"author":{"gitId":"tjtanjin"},"content":"        DELETE,"},{"lineNumber":18,"author":{"gitId":"tjtanjin"},"content":"        HELP"},{"lineNumber":19,"author":{"gitId":"tjtanjin"},"content":"    }"},{"lineNumber":20,"author":{"gitId":"tjtanjin"},"content":""},{"lineNumber":21,"author":{"gitId":"tjtanjin"},"content":"    //list storing commands/descriptions, ideally store in json file"},{"lineNumber":22,"author":{"gitId":"tjtanjin"},"content":"    private final static HashMap\u003cString, String\u003e cmdInfo \u003d new HashMap\u003c\u003e();"},{"lineNumber":23,"author":{"gitId":"tjtanjin"},"content":""},{"lineNumber":24,"author":{"gitId":"tjtanjin"},"content":"    /**"},{"lineNumber":25,"author":{"gitId":"tjtanjin"},"content":"     * Constructor for Command class that initialises all valid commands."},{"lineNumber":26,"author":{"gitId":"tjtanjin"},"content":"     */"},{"lineNumber":27,"author":{"gitId":"tjtanjin"},"content":"    public Command() {"},{"lineNumber":28,"author":{"gitId":"tjtanjin"},"content":"        cmdInfo.put(Cmd.BYE.toString(), \"bye | Description: exits the program\");"},{"lineNumber":29,"author":{"gitId":"tjtanjin"},"content":"        cmdInfo.put(Cmd.LIST.toString(), \"list | Description: list all entered tasks\");"},{"lineNumber":30,"author":{"gitId":"tjtanjin"},"content":"        cmdInfo.put(Cmd.DONE.toString(), \"done \u003ctask index\u003e | Description: marks by index a given task as done\");"},{"lineNumber":31,"author":{"gitId":"tjtanjin"},"content":"        cmdInfo.put(Cmd.TODO.toString(), \"todo \u003cname\u003e | Description: adds a new todo task\");"},{"lineNumber":32,"author":{"gitId":"tjtanjin"},"content":"        cmdInfo.put(Cmd.DEADLINE.toString(), \"deadline \u003cname\u003e /by \u003cend date\u003e | Description: adds a new deadline task\");"},{"lineNumber":33,"author":{"gitId":"tjtanjin"},"content":"        cmdInfo.put(Cmd.EVENT.toString(), \"event \u003cname\u003e /at \u003cstart date - end date\u003e | Description: adds a new event task\");"},{"lineNumber":34,"author":{"gitId":"tjtanjin"},"content":"        cmdInfo.put(Cmd.DELETE.toString(), \"delete \u003ctask index\u003e | Description: delete by index a given task\");"},{"lineNumber":35,"author":{"gitId":"tjtanjin"},"content":"        cmdInfo.put(Cmd.HELP.toString(), \"help | Description: list this help menu\");"},{"lineNumber":36,"author":{"gitId":"tjtanjin"},"content":"    }"},{"lineNumber":37,"author":{"gitId":"tjtanjin"},"content":""},{"lineNumber":38,"author":{"gitId":"tjtanjin"},"content":"    /**"},{"lineNumber":39,"author":{"gitId":"tjtanjin"},"content":"     * Parses input from user to determine action to take."},{"lineNumber":40,"author":{"gitId":"tjtanjin"},"content":"     * @param input input provided by user"},{"lineNumber":41,"author":{"gitId":"tjtanjin"},"content":"     * @param tasks list of tasks entered by user"},{"lineNumber":42,"author":{"gitId":"tjtanjin"},"content":"     */"},{"lineNumber":43,"author":{"gitId":"tjtanjin"},"content":"    public void parseInput(String input, ArrayList\u003cTask\u003e tasks) {"},{"lineNumber":44,"author":{"gitId":"tjtanjin"},"content":"        //program exits on bye"},{"lineNumber":45,"author":{"gitId":"tjtanjin"},"content":"        if (input.toUpperCase().equals(Cmd.BYE.toString())) {"},{"lineNumber":46,"author":{"gitId":"tjtanjin"},"content":"            exit();"},{"lineNumber":47,"author":{"gitId":"tjtanjin"},"content":"            //program shows entered tasks on list"},{"lineNumber":48,"author":{"gitId":"tjtanjin"},"content":"        } else if (input.toUpperCase().equals(Cmd.LIST.toString())) {"},{"lineNumber":49,"author":{"gitId":"tjtanjin"},"content":"            list(tasks);"},{"lineNumber":50,"author":{"gitId":"tjtanjin"},"content":"            //program marks task as complete on done"},{"lineNumber":51,"author":{"gitId":"tjtanjin"},"content":"        } else if (input.toUpperCase().startsWith(Cmd.DONE.toString())) {"},{"lineNumber":52,"author":{"gitId":"tjtanjin"},"content":"            done(input, tasks);"},{"lineNumber":53,"author":{"gitId":"tjtanjin"},"content":"            //program removes task on delete"},{"lineNumber":54,"author":{"gitId":"tjtanjin"},"content":"        } else if (input.toUpperCase().startsWith(Cmd.DELETE.toString())) {"},{"lineNumber":55,"author":{"gitId":"tjtanjin"},"content":"            delete(input, tasks);"},{"lineNumber":56,"author":{"gitId":"tjtanjin"},"content":"            //program list help commands"},{"lineNumber":57,"author":{"gitId":"tjtanjin"},"content":"        } else if (input.toUpperCase().equals(Cmd.HELP.toString())) {"},{"lineNumber":58,"author":{"gitId":"tjtanjin"},"content":"            help();"},{"lineNumber":59,"author":{"gitId":"tjtanjin"},"content":"            //program tries to add task otherwise"},{"lineNumber":60,"author":{"gitId":"tjtanjin"},"content":"        } else {"},{"lineNumber":61,"author":{"gitId":"tjtanjin"},"content":"            add(input, tasks);"},{"lineNumber":62,"author":{"gitId":"tjtanjin"},"content":"        }"},{"lineNumber":63,"author":{"gitId":"tjtanjin"},"content":"    }"},{"lineNumber":64,"author":{"gitId":"tjtanjin"},"content":""},{"lineNumber":65,"author":{"gitId":"tjtanjin"},"content":"    /**"},{"lineNumber":66,"author":{"gitId":"tjtanjin"},"content":"     * Exits the program."},{"lineNumber":67,"author":{"gitId":"tjtanjin"},"content":"     */"},{"lineNumber":68,"author":{"gitId":"tjtanjin"},"content":"    public void exit() {"},{"lineNumber":69,"author":{"gitId":"tjtanjin"},"content":"        System.out.println(\"Bye! See you later :D\");"},{"lineNumber":70,"author":{"gitId":"tjtanjin"},"content":"    }"},{"lineNumber":71,"author":{"gitId":"tjtanjin"},"content":""},{"lineNumber":72,"author":{"gitId":"tjtanjin"},"content":"    /**"},{"lineNumber":73,"author":{"gitId":"tjtanjin"},"content":"     * Parses, adds and prints the input from user as task."},{"lineNumber":74,"author":{"gitId":"tjtanjin"},"content":"     * @param input input provided by user"},{"lineNumber":75,"author":{"gitId":"tjtanjin"},"content":"      * @param tasks list of tasks entered by user"},{"lineNumber":76,"author":{"gitId":"tjtanjin"},"content":"     */"},{"lineNumber":77,"author":{"gitId":"tjtanjin"},"content":"    public void add(String input, ArrayList\u003cTask\u003e tasks) {"},{"lineNumber":78,"author":{"gitId":"tjtanjin"},"content":"        //split input on first space to retrieve task type"},{"lineNumber":79,"author":{"gitId":"tjtanjin"},"content":"        String[] parsedString \u003d input.split(\"\\\\s+\", 2);"},{"lineNumber":80,"author":{"gitId":"tjtanjin"},"content":"        Task task;"},{"lineNumber":81,"author":{"gitId":"tjtanjin"},"content":"        String taskType;"},{"lineNumber":82,"author":{"gitId":"tjtanjin"},"content":"        String taskDetails;"},{"lineNumber":83,"author":{"gitId":"tjtanjin"},"content":""},{"lineNumber":84,"author":{"gitId":"tjtanjin"},"content":"        //attempt to create a task, inform user if input is invalid"},{"lineNumber":85,"author":{"gitId":"tjtanjin"},"content":"        try {"},{"lineNumber":86,"author":{"gitId":"tjtanjin"},"content":"            taskType \u003d parsedString[0];"},{"lineNumber":87,"author":{"gitId":"tjtanjin"},"content":"            if (!taskType.toUpperCase().equals(Cmd.TODO.toString())"},{"lineNumber":88,"author":{"gitId":"tjtanjin"},"content":"                \u0026\u0026 !taskType.toUpperCase().equals(Cmd.DEADLINE.toString())"},{"lineNumber":89,"author":{"gitId":"tjtanjin"},"content":"                \u0026\u0026 !taskType.toUpperCase().equals(Cmd.EVENT.toString()))"},{"lineNumber":90,"author":{"gitId":"tjtanjin"},"content":"            {"},{"lineNumber":91,"author":{"gitId":"tjtanjin"},"content":"                throw new DukeException(\"Invalid action, type \u0027help\u0027 for more options\");"},{"lineNumber":92,"author":{"gitId":"tjtanjin"},"content":"            }"},{"lineNumber":93,"author":{"gitId":"tjtanjin"},"content":"        } catch (DukeException e) {"},{"lineNumber":94,"author":{"gitId":"tjtanjin"},"content":"            System.out.println(e.getMessage());"},{"lineNumber":95,"author":{"gitId":"tjtanjin"},"content":"            return;"},{"lineNumber":96,"author":{"gitId":"tjtanjin"},"content":"        }"},{"lineNumber":97,"author":{"gitId":"tjtanjin"},"content":""},{"lineNumber":98,"author":{"gitId":"tjtanjin"},"content":"        String taskName;"},{"lineNumber":99,"author":{"gitId":"tjtanjin"},"content":"        String[] parsedTaskDetails;"},{"lineNumber":100,"author":{"gitId":"tjtanjin"},"content":""},{"lineNumber":101,"author":{"gitId":"tjtanjin"},"content":"        try {"},{"lineNumber":102,"author":{"gitId":"tjtanjin"},"content":"            taskDetails \u003d parsedString[1];"},{"lineNumber":103,"author":{"gitId":"tjtanjin"},"content":"            switch (Cmd.valueOf(taskType.toUpperCase())) {"},{"lineNumber":104,"author":{"gitId":"tjtanjin"},"content":"                case TODO:"},{"lineNumber":105,"author":{"gitId":"tjtanjin"},"content":"                    taskName \u003d taskDetails.trim();"},{"lineNumber":106,"author":{"gitId":"tjtanjin"},"content":"                    task \u003d new ToDo(Task.numTasks + 1, taskName, \"incomplete\");"},{"lineNumber":107,"author":{"gitId":"tjtanjin"},"content":"                    break;"},{"lineNumber":108,"author":{"gitId":"tjtanjin"},"content":"                case DEADLINE:"},{"lineNumber":109,"author":{"gitId":"tjtanjin"},"content":"                    parsedTaskDetails \u003d taskDetails.split(\"/by\");"},{"lineNumber":110,"author":{"gitId":"tjtanjin"},"content":"                    taskName \u003d parsedTaskDetails[0].trim();"},{"lineNumber":111,"author":{"gitId":"tjtanjin"},"content":"                    String endDate \u003d parsedTaskDetails[1].trim();"},{"lineNumber":112,"author":{"gitId":"tjtanjin"},"content":"                    task \u003d new Deadline(Task.numTasks + 1, taskName, \"incomplete\", endDate);"},{"lineNumber":113,"author":{"gitId":"tjtanjin"},"content":"                    break;"},{"lineNumber":114,"author":{"gitId":"tjtanjin"},"content":"                case EVENT:"},{"lineNumber":115,"author":{"gitId":"tjtanjin"},"content":"                    parsedTaskDetails \u003d taskDetails.split(\"/at\");"},{"lineNumber":116,"author":{"gitId":"tjtanjin"},"content":"                    taskName \u003d parsedTaskDetails[0].trim();"},{"lineNumber":117,"author":{"gitId":"tjtanjin"},"content":"                    String startEndDate \u003d parsedTaskDetails[1].trim();"},{"lineNumber":118,"author":{"gitId":"tjtanjin"},"content":"                    task \u003d new Event(Task.numTasks + 1, taskName, \"incomplete\", startEndDate);"},{"lineNumber":119,"author":{"gitId":"tjtanjin"},"content":"                    break;"},{"lineNumber":120,"author":{"gitId":"tjtanjin"},"content":"                default:"},{"lineNumber":121,"author":{"gitId":"tjtanjin"},"content":"                    throw new IndexOutOfBoundsException();"},{"lineNumber":122,"author":{"gitId":"tjtanjin"},"content":"            }"},{"lineNumber":123,"author":{"gitId":"tjtanjin"},"content":"            tasks.add(task);"},{"lineNumber":124,"author":{"gitId":"tjtanjin"},"content":"            System.out.print(\"Got it! I have added this task:\\n\" + task + \"\\nYou have \" + Task.numTasks + \" task(s) now!\\n\");"},{"lineNumber":125,"author":{"gitId":"tjtanjin"},"content":"        } catch (IndexOutOfBoundsException e) {"},{"lineNumber":126,"author":{"gitId":"tjtanjin"},"content":"            System.out.println(\"Usage for \" + taskType + \": \" + cmdInfo.get(taskType.toUpperCase()));"},{"lineNumber":127,"author":{"gitId":"tjtanjin"},"content":"        }"},{"lineNumber":128,"author":{"gitId":"tjtanjin"},"content":"    }"},{"lineNumber":129,"author":{"gitId":"tjtanjin"},"content":""},{"lineNumber":130,"author":{"gitId":"tjtanjin"},"content":"    /**"},{"lineNumber":131,"author":{"gitId":"tjtanjin"},"content":"     * List all tasks entered by user."},{"lineNumber":132,"author":{"gitId":"tjtanjin"},"content":"     * @param tasks list of tasks entered by user"},{"lineNumber":133,"author":{"gitId":"tjtanjin"},"content":"     */"},{"lineNumber":134,"author":{"gitId":"tjtanjin"},"content":"    public void list(ArrayList\u003cTask\u003e tasks) {"},{"lineNumber":135,"author":{"gitId":"tjtanjin"},"content":"        if (tasks.size() \u003d\u003d 0) {"},{"lineNumber":136,"author":{"gitId":"tjtanjin"},"content":"            System.out.println(\"You have no task at the moment!\");"},{"lineNumber":137,"author":{"gitId":"tjtanjin"},"content":"        } else {"},{"lineNumber":138,"author":{"gitId":"tjtanjin"},"content":"            for (int i \u003d 1; i \u003c\u003d tasks.size(); i++) {"},{"lineNumber":139,"author":{"gitId":"tjtanjin"},"content":"                Task task \u003d tasks.get(i - 1);"},{"lineNumber":140,"author":{"gitId":"tjtanjin"},"content":"                System.out.println(i + \".\" + task);"},{"lineNumber":141,"author":{"gitId":"tjtanjin"},"content":"            }"},{"lineNumber":142,"author":{"gitId":"tjtanjin"},"content":"        }"},{"lineNumber":143,"author":{"gitId":"tjtanjin"},"content":"    }"},{"lineNumber":144,"author":{"gitId":"tjtanjin"},"content":""},{"lineNumber":145,"author":{"gitId":"tjtanjin"},"content":"    /**"},{"lineNumber":146,"author":{"gitId":"tjtanjin"},"content":"     * Checks and marks given task as done and informs user of success/failure."},{"lineNumber":147,"author":{"gitId":"tjtanjin"},"content":"     * @param input input provided by user"},{"lineNumber":148,"author":{"gitId":"tjtanjin"},"content":"     * @param tasks list of tasks entered by user"},{"lineNumber":149,"author":{"gitId":"tjtanjin"},"content":"     */"},{"lineNumber":150,"author":{"gitId":"tjtanjin"},"content":"    public void done(String input, ArrayList\u003cTask\u003e tasks) {"},{"lineNumber":151,"author":{"gitId":"tjtanjin"},"content":"        String[] parsedString \u003d input.split(\"\\\\s+\");"},{"lineNumber":152,"author":{"gitId":"tjtanjin"},"content":"        int taskId;"},{"lineNumber":153,"author":{"gitId":"tjtanjin"},"content":""},{"lineNumber":154,"author":{"gitId":"tjtanjin"},"content":"        try {"},{"lineNumber":155,"author":{"gitId":"tjtanjin"},"content":"            taskId \u003d Integer.parseInt(parsedString[1]);"},{"lineNumber":156,"author":{"gitId":"tjtanjin"},"content":"        } catch (IndexOutOfBoundsException e) {"},{"lineNumber":157,"author":{"gitId":"tjtanjin"},"content":"            System.out.println(\"Usage for done: \" + cmdInfo.get(Cmd.DONE.toString()));"},{"lineNumber":158,"author":{"gitId":"tjtanjin"},"content":"            return;"},{"lineNumber":159,"author":{"gitId":"tjtanjin"},"content":"        } catch (NumberFormatException e) {"},{"lineNumber":160,"author":{"gitId":"tjtanjin"},"content":"            System.out.println(\"Specify a valid task number to mark as complete!\");"},{"lineNumber":161,"author":{"gitId":"tjtanjin"},"content":"            return;"},{"lineNumber":162,"author":{"gitId":"tjtanjin"},"content":"        }"},{"lineNumber":163,"author":{"gitId":"tjtanjin"},"content":""},{"lineNumber":164,"author":{"gitId":"tjtanjin"},"content":"        try {"},{"lineNumber":165,"author":{"gitId":"tjtanjin"},"content":"            Task task \u003d tasks.get(taskId - 1);"},{"lineNumber":166,"author":{"gitId":"tjtanjin"},"content":"            if (task.getStatus().equals(\"complete\")) {"},{"lineNumber":167,"author":{"gitId":"tjtanjin"},"content":"                System.out.println(\"Task is already completed!\");"},{"lineNumber":168,"author":{"gitId":"tjtanjin"},"content":"            } else {"},{"lineNumber":169,"author":{"gitId":"tjtanjin"},"content":"                task.markCompleted();"},{"lineNumber":170,"author":{"gitId":"tjtanjin"},"content":"                System.out.println(\"Yay your task is done! :D\");"},{"lineNumber":171,"author":{"gitId":"tjtanjin"},"content":"            }"},{"lineNumber":172,"author":{"gitId":"tjtanjin"},"content":"        } catch (IndexOutOfBoundsException e) {"},{"lineNumber":173,"author":{"gitId":"tjtanjin"},"content":"            System.out.println(\"The specified task index does not exist!\");"},{"lineNumber":174,"author":{"gitId":"tjtanjin"},"content":"        }"},{"lineNumber":175,"author":{"gitId":"tjtanjin"},"content":"    }"},{"lineNumber":176,"author":{"gitId":"tjtanjin"},"content":""},{"lineNumber":177,"author":{"gitId":"tjtanjin"},"content":"    /**"},{"lineNumber":178,"author":{"gitId":"tjtanjin"},"content":"     * Deletes given task as done and informs user of success/failure."},{"lineNumber":179,"author":{"gitId":"tjtanjin"},"content":"     * @param input input provided by user"},{"lineNumber":180,"author":{"gitId":"tjtanjin"},"content":"     * @param tasks list of tasks entered by user"},{"lineNumber":181,"author":{"gitId":"tjtanjin"},"content":"     */"},{"lineNumber":182,"author":{"gitId":"tjtanjin"},"content":"    public void delete(String input, ArrayList\u003cTask\u003e tasks) {"},{"lineNumber":183,"author":{"gitId":"tjtanjin"},"content":"        String[] parsedString \u003d input.split(\"\\\\s+\");"},{"lineNumber":184,"author":{"gitId":"tjtanjin"},"content":"        int taskId;"},{"lineNumber":185,"author":{"gitId":"tjtanjin"},"content":""},{"lineNumber":186,"author":{"gitId":"tjtanjin"},"content":"        try {"},{"lineNumber":187,"author":{"gitId":"tjtanjin"},"content":"            taskId \u003d Integer.parseInt(parsedString[1]);"},{"lineNumber":188,"author":{"gitId":"tjtanjin"},"content":"        } catch (IndexOutOfBoundsException e) {"},{"lineNumber":189,"author":{"gitId":"tjtanjin"},"content":"            System.out.println(\"Usage for delete: \" + cmdInfo.get(Cmd.DELETE.toString()));"},{"lineNumber":190,"author":{"gitId":"tjtanjin"},"content":"            return;"},{"lineNumber":191,"author":{"gitId":"tjtanjin"},"content":"        } catch (NumberFormatException e) {"},{"lineNumber":192,"author":{"gitId":"tjtanjin"},"content":"            System.out.println(\"Specify a valid task number to delete!\");"},{"lineNumber":193,"author":{"gitId":"tjtanjin"},"content":"            return;"},{"lineNumber":194,"author":{"gitId":"tjtanjin"},"content":"        }"},{"lineNumber":195,"author":{"gitId":"tjtanjin"},"content":""},{"lineNumber":196,"author":{"gitId":"tjtanjin"},"content":"        try {"},{"lineNumber":197,"author":{"gitId":"tjtanjin"},"content":"            Task task \u003d tasks.get(taskId - 1);"},{"lineNumber":198,"author":{"gitId":"tjtanjin"},"content":"            tasks.remove(task);"},{"lineNumber":199,"author":{"gitId":"tjtanjin"},"content":"            System.out.println(\"The following task has been deleted:\\n\" + task);"},{"lineNumber":200,"author":{"gitId":"tjtanjin"},"content":"        } catch (IndexOutOfBoundsException e) {"},{"lineNumber":201,"author":{"gitId":"tjtanjin"},"content":"            System.out.println(\"The specified task index does not exist!\");"},{"lineNumber":202,"author":{"gitId":"tjtanjin"},"content":"        }"},{"lineNumber":203,"author":{"gitId":"tjtanjin"},"content":"    }"},{"lineNumber":204,"author":{"gitId":"tjtanjin"},"content":""},{"lineNumber":205,"author":{"gitId":"tjtanjin"},"content":"    /**"},{"lineNumber":206,"author":{"gitId":"tjtanjin"},"content":"     * List all available command usage and descriptions."},{"lineNumber":207,"author":{"gitId":"tjtanjin"},"content":"     */"},{"lineNumber":208,"author":{"gitId":"tjtanjin"},"content":"    public void help() {"},{"lineNumber":209,"author":{"gitId":"tjtanjin"},"content":"        System.out.println(\"The available commands are as listed below:\");"},{"lineNumber":210,"author":{"gitId":"tjtanjin"},"content":"        for (String info : cmdInfo.values()) {"},{"lineNumber":211,"author":{"gitId":"tjtanjin"},"content":"            System.out.println(info);"},{"lineNumber":212,"author":{"gitId":"tjtanjin"},"content":"        }"},{"lineNumber":213,"author":{"gitId":"tjtanjin"},"content":"    }"},{"lineNumber":214,"author":{"gitId":"tjtanjin"},"content":"}"}],"authorContributionMap":{"tjtanjin":214}},{"path":"src/main/java/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tjtanjin"},"content":"/**"},{"lineNumber":2,"author":{"gitId":"tjtanjin"},"content":" * Deadline is a child class of Task, containing additional"},{"lineNumber":3,"author":{"gitId":"tjtanjin"},"content":" * support for an endDate."},{"lineNumber":4,"author":{"gitId":"tjtanjin"},"content":" */"},{"lineNumber":5,"author":{"gitId":"tjtanjin"},"content":"public class Deadline extends Task {"},{"lineNumber":6,"author":{"gitId":"tjtanjin"},"content":"    private final String endDate;"},{"lineNumber":7,"author":{"gitId":"tjtanjin"},"content":""},{"lineNumber":8,"author":{"gitId":"tjtanjin"},"content":"    /**"},{"lineNumber":9,"author":{"gitId":"tjtanjin"},"content":"     * Constructor for Deadline class."},{"lineNumber":10,"author":{"gitId":"tjtanjin"},"content":"     * @param id id of task"},{"lineNumber":11,"author":{"gitId":"tjtanjin"},"content":"     * @param taskName name of task"},{"lineNumber":12,"author":{"gitId":"tjtanjin"},"content":"     * @param status task completion status"},{"lineNumber":13,"author":{"gitId":"tjtanjin"},"content":"     * @param endDate end datetime for given task"},{"lineNumber":14,"author":{"gitId":"tjtanjin"},"content":"     */"},{"lineNumber":15,"author":{"gitId":"tjtanjin"},"content":"    public Deadline(int id, String taskName, String status, String endDate) {"},{"lineNumber":16,"author":{"gitId":"tjtanjin"},"content":"        super(id, taskName, status, \"D\");"},{"lineNumber":17,"author":{"gitId":"tjtanjin"},"content":"        this.endDate \u003d endDate;"},{"lineNumber":18,"author":{"gitId":"tjtanjin"},"content":"    }"},{"lineNumber":19,"author":{"gitId":"tjtanjin"},"content":""},{"lineNumber":20,"author":{"gitId":"tjtanjin"},"content":"    @Override"},{"lineNumber":21,"author":{"gitId":"tjtanjin"},"content":"    public String toString() {"},{"lineNumber":22,"author":{"gitId":"tjtanjin"},"content":"        return super.toString() + \" (by: \" + this.endDate + \")\";"},{"lineNumber":23,"author":{"gitId":"tjtanjin"},"content":"    }"},{"lineNumber":24,"author":{"gitId":"tjtanjin"},"content":"}"}],"authorContributionMap":{"tjtanjin":24}},{"path":"src/main/java/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tjtanjin"},"content":"import java.util.Scanner;"},{"lineNumber":2,"author":{"gitId":"tjtanjin"},"content":"import java.util.ArrayList;"},{"lineNumber":3,"author":{"gitId":"tjtanjin"},"content":""},{"lineNumber":4,"author":{"gitId":"tjtanjin"},"content":"/**"},{"lineNumber":5,"author":{"gitId":"tjtanjin"},"content":" * Duke is a project that eventually builds into a personal assistant chat bot."},{"lineNumber":6,"author":{"gitId":"tjtanjin"},"content":" */"},{"lineNumber":7,"author":{"gitId":"-"},"content":"public class Duke {"},{"lineNumber":8,"author":{"gitId":"tjtanjin"},"content":""},{"lineNumber":9,"author":{"gitId":"tjtanjin"},"content":"    //tracks all tasks"},{"lineNumber":10,"author":{"gitId":"tjtanjin"},"content":"    public static ArrayList\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();"},{"lineNumber":11,"author":{"gitId":"tjtanjin"},"content":""},{"lineNumber":12,"author":{"gitId":"tjtanjin"},"content":"    /**"},{"lineNumber":13,"author":{"gitId":"tjtanjin"},"content":"     * Entry point of the program, first greets then listens for input from user."},{"lineNumber":14,"author":{"gitId":"tjtanjin"},"content":"     * @param args command line arguments"},{"lineNumber":15,"author":{"gitId":"tjtanjin"},"content":"     */"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public static void main(String[] args) {"},{"lineNumber":17,"author":{"gitId":"tjtanjin"},"content":""},{"lineNumber":18,"author":{"gitId":"tjtanjin"},"content":"        Command command \u003d new Command();"},{"lineNumber":19,"author":{"gitId":"tjtanjin"},"content":"        greet();"},{"lineNumber":20,"author":{"gitId":"tjtanjin"},"content":"        listenInput(command);"},{"lineNumber":21,"author":{"gitId":"tjtanjin"},"content":"    }"},{"lineNumber":22,"author":{"gitId":"tjtanjin"},"content":""},{"lineNumber":23,"author":{"gitId":"tjtanjin"},"content":"    /**"},{"lineNumber":24,"author":{"gitId":"tjtanjin"},"content":"     * Listens for input from the user."},{"lineNumber":25,"author":{"gitId":"tjtanjin"},"content":"     * @param command command class that handles parsing of input"},{"lineNumber":26,"author":{"gitId":"tjtanjin"},"content":"     */"},{"lineNumber":27,"author":{"gitId":"tjtanjin"},"content":"    public static void listenInput(Command command) {"},{"lineNumber":28,"author":{"gitId":"tjtanjin"},"content":"        Scanner sc \u003d new Scanner(System.in);"},{"lineNumber":29,"author":{"gitId":"tjtanjin"},"content":"        String input;"},{"lineNumber":30,"author":{"gitId":"tjtanjin"},"content":"        System.out.println(\"------------------------------------\");"},{"lineNumber":31,"author":{"gitId":"tjtanjin"},"content":""},{"lineNumber":32,"author":{"gitId":"tjtanjin"},"content":"        while (sc.hasNextLine()) {"},{"lineNumber":33,"author":{"gitId":"tjtanjin"},"content":"            System.out.println(\"------------------------------------\");"},{"lineNumber":34,"author":{"gitId":"tjtanjin"},"content":""},{"lineNumber":35,"author":{"gitId":"tjtanjin"},"content":"            input \u003d sc.nextLine();"},{"lineNumber":36,"author":{"gitId":"tjtanjin"},"content":"            command.parseInput(input, tasks);"},{"lineNumber":37,"author":{"gitId":"tjtanjin"},"content":""},{"lineNumber":38,"author":{"gitId":"tjtanjin"},"content":"            System.out.println(\"------------------------------------\");"},{"lineNumber":39,"author":{"gitId":"tjtanjin"},"content":"        }"},{"lineNumber":40,"author":{"gitId":"tjtanjin"},"content":"    }"},{"lineNumber":41,"author":{"gitId":"tjtanjin"},"content":""},{"lineNumber":42,"author":{"gitId":"tjtanjin"},"content":"    /**"},{"lineNumber":43,"author":{"gitId":"tjtanjin"},"content":"     * Greets the user upon program launch."},{"lineNumber":44,"author":{"gitId":"tjtanjin"},"content":"     */"},{"lineNumber":45,"author":{"gitId":"tjtanjin"},"content":"    public static void greet() {"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        String logo \u003d \" ____        _        \\n\""},{"lineNumber":47,"author":{"gitId":"-"},"content":"                + \"|  _ \\\\ _   _| | _____ \\n\""},{"lineNumber":48,"author":{"gitId":"-"},"content":"                + \"| | | | | | | |/ / _ \\\\\\n\""},{"lineNumber":49,"author":{"gitId":"-"},"content":"                + \"| |_| | |_| |   \u003c  __/\\n\""},{"lineNumber":50,"author":{"gitId":"-"},"content":"                + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\";"},{"lineNumber":51,"author":{"gitId":"tjtanjin"},"content":"        System.out.println(\"Hello from\\n\" + logo + \"\\nWhat can I do for you?\");"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":53,"author":{"gitId":"-"},"content":"}"}],"authorContributionMap":{"tjtanjin":44,"-":9}},{"path":"src/main/java/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tjtanjin"},"content":"/**"},{"lineNumber":2,"author":{"gitId":"tjtanjin"},"content":" * Class for custom exception handling."},{"lineNumber":3,"author":{"gitId":"tjtanjin"},"content":" */"},{"lineNumber":4,"author":{"gitId":"tjtanjin"},"content":"public class DukeException extends Exception {"},{"lineNumber":5,"author":{"gitId":"tjtanjin"},"content":"    public DukeException(String errMsg) {"},{"lineNumber":6,"author":{"gitId":"tjtanjin"},"content":"        super(errMsg);"},{"lineNumber":7,"author":{"gitId":"tjtanjin"},"content":"    }"},{"lineNumber":8,"author":{"gitId":"tjtanjin"},"content":"}"}],"authorContributionMap":{"tjtanjin":8}},{"path":"src/main/java/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tjtanjin"},"content":"/**"},{"lineNumber":2,"author":{"gitId":"tjtanjin"},"content":" * Event is a child class of Task, containing additional"},{"lineNumber":3,"author":{"gitId":"tjtanjin"},"content":" * support for an endDate."},{"lineNumber":4,"author":{"gitId":"tjtanjin"},"content":" */"},{"lineNumber":5,"author":{"gitId":"tjtanjin"},"content":"public class Event extends Task {"},{"lineNumber":6,"author":{"gitId":"tjtanjin"},"content":"    private final String startEndDate;"},{"lineNumber":7,"author":{"gitId":"tjtanjin"},"content":""},{"lineNumber":8,"author":{"gitId":"tjtanjin"},"content":"    /**"},{"lineNumber":9,"author":{"gitId":"tjtanjin"},"content":"     * Constructor for Event class."},{"lineNumber":10,"author":{"gitId":"tjtanjin"},"content":"     * @param id id of task"},{"lineNumber":11,"author":{"gitId":"tjtanjin"},"content":"     * @param taskName name of task"},{"lineNumber":12,"author":{"gitId":"tjtanjin"},"content":"     * @param status task completion status"},{"lineNumber":13,"author":{"gitId":"tjtanjin"},"content":"     * @param startEndDate start to end datetime for given task"},{"lineNumber":14,"author":{"gitId":"tjtanjin"},"content":"     */"},{"lineNumber":15,"author":{"gitId":"tjtanjin"},"content":"    public Event(int id, String taskName, String status, String startEndDate) {"},{"lineNumber":16,"author":{"gitId":"tjtanjin"},"content":"        super(id, taskName, status, \"E\");"},{"lineNumber":17,"author":{"gitId":"tjtanjin"},"content":"        this.startEndDate \u003d startEndDate;"},{"lineNumber":18,"author":{"gitId":"tjtanjin"},"content":"    }"},{"lineNumber":19,"author":{"gitId":"tjtanjin"},"content":""},{"lineNumber":20,"author":{"gitId":"tjtanjin"},"content":"    @Override"},{"lineNumber":21,"author":{"gitId":"tjtanjin"},"content":"    public String toString() {"},{"lineNumber":22,"author":{"gitId":"tjtanjin"},"content":"        return super.toString() + \" (at: \" + this.startEndDate + \")\";"},{"lineNumber":23,"author":{"gitId":"tjtanjin"},"content":"    }"},{"lineNumber":24,"author":{"gitId":"tjtanjin"},"content":"}"}],"authorContributionMap":{"tjtanjin":24}},{"path":"src/main/java/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tjtanjin"},"content":"/**"},{"lineNumber":2,"author":{"gitId":"tjtanjin"},"content":" * Encapsulates a task and supports operators to retrieve"},{"lineNumber":3,"author":{"gitId":"tjtanjin"},"content":" * information about the task such as id, taskName, status and type."},{"lineNumber":4,"author":{"gitId":"tjtanjin"},"content":" */"},{"lineNumber":5,"author":{"gitId":"tjtanjin"},"content":"public class Task {"},{"lineNumber":6,"author":{"gitId":"tjtanjin"},"content":"    //tracks total number of tasks"},{"lineNumber":7,"author":{"gitId":"tjtanjin"},"content":"    public static int numTasks \u003d 0;"},{"lineNumber":8,"author":{"gitId":"tjtanjin"},"content":""},{"lineNumber":9,"author":{"gitId":"tjtanjin"},"content":"    //task details"},{"lineNumber":10,"author":{"gitId":"tjtanjin"},"content":"    private final int id;"},{"lineNumber":11,"author":{"gitId":"tjtanjin"},"content":"    private final String taskName;"},{"lineNumber":12,"author":{"gitId":"tjtanjin"},"content":"    private String status;"},{"lineNumber":13,"author":{"gitId":"tjtanjin"},"content":"    private final String type;"},{"lineNumber":14,"author":{"gitId":"tjtanjin"},"content":""},{"lineNumber":15,"author":{"gitId":"tjtanjin"},"content":"    /**"},{"lineNumber":16,"author":{"gitId":"tjtanjin"},"content":"     * Constructor for Task class."},{"lineNumber":17,"author":{"gitId":"tjtanjin"},"content":"     * @param id id of task"},{"lineNumber":18,"author":{"gitId":"tjtanjin"},"content":"     * @param taskName name of task"},{"lineNumber":19,"author":{"gitId":"tjtanjin"},"content":"     * @param status task completion status"},{"lineNumber":20,"author":{"gitId":"tjtanjin"},"content":"     * @param type type of task"},{"lineNumber":21,"author":{"gitId":"tjtanjin"},"content":"     */"},{"lineNumber":22,"author":{"gitId":"tjtanjin"},"content":"    public Task(int id, String taskName, String status, String type) {"},{"lineNumber":23,"author":{"gitId":"tjtanjin"},"content":"        this.id \u003d id;"},{"lineNumber":24,"author":{"gitId":"tjtanjin"},"content":"        this.taskName \u003d taskName;"},{"lineNumber":25,"author":{"gitId":"tjtanjin"},"content":"        this.status \u003d status;"},{"lineNumber":26,"author":{"gitId":"tjtanjin"},"content":"        this.type \u003d type;"},{"lineNumber":27,"author":{"gitId":"tjtanjin"},"content":"        Task.numTasks +\u003d 1;"},{"lineNumber":28,"author":{"gitId":"tjtanjin"},"content":"    }"},{"lineNumber":29,"author":{"gitId":"tjtanjin"},"content":""},{"lineNumber":30,"author":{"gitId":"tjtanjin"},"content":"    public int getId() {"},{"lineNumber":31,"author":{"gitId":"tjtanjin"},"content":"        return this.id;"},{"lineNumber":32,"author":{"gitId":"tjtanjin"},"content":"    }"},{"lineNumber":33,"author":{"gitId":"tjtanjin"},"content":""},{"lineNumber":34,"author":{"gitId":"tjtanjin"},"content":"    public String getTaskName() {"},{"lineNumber":35,"author":{"gitId":"tjtanjin"},"content":"        return this.taskName;"},{"lineNumber":36,"author":{"gitId":"tjtanjin"},"content":"    }"},{"lineNumber":37,"author":{"gitId":"tjtanjin"},"content":""},{"lineNumber":38,"author":{"gitId":"tjtanjin"},"content":"    public String getStatus() {"},{"lineNumber":39,"author":{"gitId":"tjtanjin"},"content":"        return this.status;"},{"lineNumber":40,"author":{"gitId":"tjtanjin"},"content":"    }"},{"lineNumber":41,"author":{"gitId":"tjtanjin"},"content":""},{"lineNumber":42,"author":{"gitId":"tjtanjin"},"content":"    public String getType() {"},{"lineNumber":43,"author":{"gitId":"tjtanjin"},"content":"        return this.type;"},{"lineNumber":44,"author":{"gitId":"tjtanjin"},"content":"    }"},{"lineNumber":45,"author":{"gitId":"tjtanjin"},"content":""},{"lineNumber":46,"author":{"gitId":"tjtanjin"},"content":"    /**"},{"lineNumber":47,"author":{"gitId":"tjtanjin"},"content":"     * Marks the task as completed."},{"lineNumber":48,"author":{"gitId":"tjtanjin"},"content":"     */"},{"lineNumber":49,"author":{"gitId":"tjtanjin"},"content":"    public void markCompleted() {"},{"lineNumber":50,"author":{"gitId":"tjtanjin"},"content":"        this.status \u003d \"complete\";"},{"lineNumber":51,"author":{"gitId":"tjtanjin"},"content":"    }"},{"lineNumber":52,"author":{"gitId":"tjtanjin"},"content":""},{"lineNumber":53,"author":{"gitId":"tjtanjin"},"content":"    @Override"},{"lineNumber":54,"author":{"gitId":"tjtanjin"},"content":"    public String toString() {"},{"lineNumber":55,"author":{"gitId":"tjtanjin"},"content":"        if (this.getStatus().equals(\"incomplete\")) {"},{"lineNumber":56,"author":{"gitId":"tjtanjin"},"content":"            return \"[\" + this.getType() + \"][ ] \" + this.getTaskName();"},{"lineNumber":57,"author":{"gitId":"tjtanjin"},"content":"        } else {"},{"lineNumber":58,"author":{"gitId":"tjtanjin"},"content":"            return \"[\" + this.getType() + \"][X] \" + this.getTaskName();"},{"lineNumber":59,"author":{"gitId":"tjtanjin"},"content":"        }"},{"lineNumber":60,"author":{"gitId":"tjtanjin"},"content":"    }"},{"lineNumber":61,"author":{"gitId":"tjtanjin"},"content":"}"}],"authorContributionMap":{"tjtanjin":61}},{"path":"src/main/java/ToDo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tjtanjin"},"content":"/**"},{"lineNumber":2,"author":{"gitId":"tjtanjin"},"content":" * ToDo is a child class of Task, retaining all the"},{"lineNumber":3,"author":{"gitId":"tjtanjin"},"content":" * same functionalities as its parent."},{"lineNumber":4,"author":{"gitId":"tjtanjin"},"content":" */"},{"lineNumber":5,"author":{"gitId":"tjtanjin"},"content":"public class ToDo extends Task {"},{"lineNumber":6,"author":{"gitId":"tjtanjin"},"content":""},{"lineNumber":7,"author":{"gitId":"tjtanjin"},"content":"    /**"},{"lineNumber":8,"author":{"gitId":"tjtanjin"},"content":"     * Constructor for ToDo class."},{"lineNumber":9,"author":{"gitId":"tjtanjin"},"content":"     * @param id id of task"},{"lineNumber":10,"author":{"gitId":"tjtanjin"},"content":"     * @param taskName name of task"},{"lineNumber":11,"author":{"gitId":"tjtanjin"},"content":"     * @param status task completion status"},{"lineNumber":12,"author":{"gitId":"tjtanjin"},"content":"     */"},{"lineNumber":13,"author":{"gitId":"tjtanjin"},"content":"    public ToDo(int id, String taskName, String status) {"},{"lineNumber":14,"author":{"gitId":"tjtanjin"},"content":"        super(id, taskName, status, \"T\");"},{"lineNumber":15,"author":{"gitId":"tjtanjin"},"content":"    }"},{"lineNumber":16,"author":{"gitId":"tjtanjin"},"content":"}"}],"authorContributionMap":{"tjtanjin":16}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"tjtanjin"},"content":"come and catch me"},{"lineNumber":2,"author":{"gitId":"tjtanjin"},"content":"todo play catching"},{"lineNumber":3,"author":{"gitId":"tjtanjin"},"content":"deadline read book /by sunday 3pm"},{"lineNumber":4,"author":{"gitId":"tjtanjin"},"content":"event swimming class /at monday 4-6pm"},{"lineNumber":5,"author":{"gitId":"tjtanjin"},"content":"list"},{"lineNumber":6,"author":{"gitId":"tjtanjin"},"content":"done 1"},{"lineNumber":7,"author":{"gitId":"tjtanjin"},"content":"list"},{"lineNumber":8,"author":{"gitId":"tjtanjin"},"content":"done 1"},{"lineNumber":9,"author":{"gitId":"tjtanjin"},"content":"list"},{"lineNumber":10,"author":{"gitId":"tjtanjin"},"content":"done 2"},{"lineNumber":11,"author":{"gitId":"tjtanjin"},"content":"list"},{"lineNumber":12,"author":{"gitId":"tjtanjin"},"content":"bye"}],"authorContributionMap":{"tjtanjin":12}}]
