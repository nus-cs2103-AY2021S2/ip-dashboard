[{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027checkstyle\u0027"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027"},{"lineNumber":6,"author":{"gitId":"-"},"content":"}"},{"lineNumber":7,"author":{"gitId":"-"},"content":""},{"lineNumber":8,"author":{"gitId":"-"},"content":"repositories {"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    mavenCentral()"},{"lineNumber":10,"author":{"gitId":"-"},"content":"}"},{"lineNumber":11,"author":{"gitId":"-"},"content":""},{"lineNumber":12,"author":{"gitId":"-"},"content":"dependencies {"},{"lineNumber":13,"author":{"gitId":"tjtanjin"},"content":"    String javaFxVersion \u003d \u002711\u0027"},{"lineNumber":14,"author":{"gitId":"tjtanjin"},"content":""},{"lineNumber":15,"author":{"gitId":"tjtanjin"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027"},{"lineNumber":16,"author":{"gitId":"tjtanjin"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"},{"lineNumber":17,"author":{"gitId":"tjtanjin"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"},{"lineNumber":18,"author":{"gitId":"tjtanjin"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027"},{"lineNumber":19,"author":{"gitId":"tjtanjin"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"},{"lineNumber":20,"author":{"gitId":"tjtanjin"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"},{"lineNumber":21,"author":{"gitId":"tjtanjin"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027"},{"lineNumber":22,"author":{"gitId":"tjtanjin"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"},{"lineNumber":23,"author":{"gitId":"tjtanjin"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"},{"lineNumber":24,"author":{"gitId":"tjtanjin"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027"},{"lineNumber":25,"author":{"gitId":"tjtanjin"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"},{"lineNumber":26,"author":{"gitId":"tjtanjin"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"},{"lineNumber":27,"author":{"gitId":"tjtanjin"},"content":""},{"lineNumber":28,"author":{"gitId":"tjtanjin"},"content":"    implementation \u0027com.googlecode.json-simple:json-simple:1.1.1\u0027"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.5.0\u0027"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.5.0\u0027"},{"lineNumber":31,"author":{"gitId":"-"},"content":"}"},{"lineNumber":32,"author":{"gitId":"-"},"content":""},{"lineNumber":33,"author":{"gitId":"-"},"content":"test {"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    useJUnitPlatform()"},{"lineNumber":35,"author":{"gitId":"-"},"content":""},{"lineNumber":36,"author":{"gitId":"-"},"content":"    testLogging {"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\""},{"lineNumber":38,"author":{"gitId":"-"},"content":""},{"lineNumber":39,"author":{"gitId":"-"},"content":"        showExceptions true"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\""},{"lineNumber":41,"author":{"gitId":"-"},"content":"        showCauses true"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        showStackTraces true"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":45,"author":{"gitId":"-"},"content":"}"},{"lineNumber":46,"author":{"gitId":"-"},"content":""},{"lineNumber":47,"author":{"gitId":"-"},"content":"application {"},{"lineNumber":48,"author":{"gitId":"tjtanjin"},"content":"    mainClassName \u003d \"com.tjtanjin.steve.Launcher\""},{"lineNumber":49,"author":{"gitId":"-"},"content":"}"},{"lineNumber":50,"author":{"gitId":"-"},"content":""},{"lineNumber":51,"author":{"gitId":"-"},"content":"shadowJar {"},{"lineNumber":52,"author":{"gitId":"tjtanjin"},"content":"    archiveBaseName \u003d \"steve\""},{"lineNumber":53,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null"},{"lineNumber":54,"author":{"gitId":"-"},"content":"}"},{"lineNumber":55,"author":{"gitId":"-"},"content":""},{"lineNumber":56,"author":{"gitId":"-"},"content":"checkstyle {"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    toolVersion \u003d \u00278.29\u0027"},{"lineNumber":58,"author":{"gitId":"-"},"content":"}"},{"lineNumber":59,"author":{"gitId":"-"},"content":""},{"lineNumber":60,"author":{"gitId":"-"},"content":"run{"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in"},{"lineNumber":62,"author":{"gitId":"-"},"content":"}"}],"authorContributionMap":{"-":44,"tjtanjin":18}},{"path":"src/main/java/com/tjtanjin/steve/Launcher.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tjtanjin"},"content":"package com.tjtanjin.steve;"},{"lineNumber":2,"author":{"gitId":"tjtanjin"},"content":""},{"lineNumber":3,"author":{"gitId":"tjtanjin"},"content":"import javafx.application.Application;"},{"lineNumber":4,"author":{"gitId":"tjtanjin"},"content":""},{"lineNumber":5,"author":{"gitId":"tjtanjin"},"content":"/**"},{"lineNumber":6,"author":{"gitId":"tjtanjin"},"content":" * A launcher class to workaround classpath issues."},{"lineNumber":7,"author":{"gitId":"tjtanjin"},"content":" */"},{"lineNumber":8,"author":{"gitId":"tjtanjin"},"content":"public class Launcher {"},{"lineNumber":9,"author":{"gitId":"tjtanjin"},"content":""},{"lineNumber":10,"author":{"gitId":"tjtanjin"},"content":"    /**"},{"lineNumber":11,"author":{"gitId":"tjtanjin"},"content":"     * Launches the Main class."},{"lineNumber":12,"author":{"gitId":"tjtanjin"},"content":"     *"},{"lineNumber":13,"author":{"gitId":"tjtanjin"},"content":"     * @param args command line arguments"},{"lineNumber":14,"author":{"gitId":"tjtanjin"},"content":"     */"},{"lineNumber":15,"author":{"gitId":"tjtanjin"},"content":"    public static void main(String[] args) {"},{"lineNumber":16,"author":{"gitId":"tjtanjin"},"content":"        Application.launch(Main.class, args);"},{"lineNumber":17,"author":{"gitId":"tjtanjin"},"content":"    }"},{"lineNumber":18,"author":{"gitId":"tjtanjin"},"content":"}"}],"authorContributionMap":{"tjtanjin":18}},{"path":"src/main/java/com/tjtanjin/steve/Main.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tjtanjin"},"content":"package com.tjtanjin.steve;"},{"lineNumber":2,"author":{"gitId":"tjtanjin"},"content":""},{"lineNumber":3,"author":{"gitId":"tjtanjin"},"content":"import java.io.IOException;"},{"lineNumber":4,"author":{"gitId":"tjtanjin"},"content":""},{"lineNumber":5,"author":{"gitId":"tjtanjin"},"content":"import com.tjtanjin.steve.ui.UiHandler;"},{"lineNumber":6,"author":{"gitId":"tjtanjin"},"content":""},{"lineNumber":7,"author":{"gitId":"tjtanjin"},"content":"import javafx.application.Application;"},{"lineNumber":8,"author":{"gitId":"tjtanjin"},"content":"import javafx.fxml.FXMLLoader;"},{"lineNumber":9,"author":{"gitId":"tjtanjin"},"content":"import javafx.scene.Scene;"},{"lineNumber":10,"author":{"gitId":"tjtanjin"},"content":"import javafx.scene.layout.AnchorPane;"},{"lineNumber":11,"author":{"gitId":"tjtanjin"},"content":"import javafx.stage.Stage;"},{"lineNumber":12,"author":{"gitId":"tjtanjin"},"content":""},{"lineNumber":13,"author":{"gitId":"tjtanjin"},"content":"/**"},{"lineNumber":14,"author":{"gitId":"tjtanjin"},"content":" * A GUI for Steve using FXML."},{"lineNumber":15,"author":{"gitId":"tjtanjin"},"content":" */"},{"lineNumber":16,"author":{"gitId":"tjtanjin"},"content":"public class Main extends Application {"},{"lineNumber":17,"author":{"gitId":"tjtanjin"},"content":""},{"lineNumber":18,"author":{"gitId":"tjtanjin"},"content":"    private final Steve STEVE \u003d new Steve();"},{"lineNumber":19,"author":{"gitId":"tjtanjin"},"content":""},{"lineNumber":20,"author":{"gitId":"tjtanjin"},"content":"    /**"},{"lineNumber":21,"author":{"gitId":"tjtanjin"},"content":"     * Overrides default start method of application in javafx."},{"lineNumber":22,"author":{"gitId":"tjtanjin"},"content":"     *"},{"lineNumber":23,"author":{"gitId":"tjtanjin"},"content":"     * @param stage primary stage of javafx"},{"lineNumber":24,"author":{"gitId":"tjtanjin"},"content":"     */"},{"lineNumber":25,"author":{"gitId":"tjtanjin"},"content":"    @Override"},{"lineNumber":26,"author":{"gitId":"tjtanjin"},"content":"    public void start(Stage stage) {"},{"lineNumber":27,"author":{"gitId":"tjtanjin"},"content":"        try {"},{"lineNumber":28,"author":{"gitId":"tjtanjin"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(Main.class.getResource(\"/view/UiHandler.fxml\"));"},{"lineNumber":29,"author":{"gitId":"tjtanjin"},"content":"            AnchorPane ap \u003d fxmlLoader.load();"},{"lineNumber":30,"author":{"gitId":"tjtanjin"},"content":"            Scene scene \u003d new Scene(ap);"},{"lineNumber":31,"author":{"gitId":"tjtanjin"},"content":"            stage.setScene(scene);"},{"lineNumber":32,"author":{"gitId":"tjtanjin"},"content":"            fxmlLoader.\u003cUiHandler\u003egetController().setSteve(STEVE, fxmlLoader);"},{"lineNumber":33,"author":{"gitId":"tjtanjin"},"content":"            stage.show();"},{"lineNumber":34,"author":{"gitId":"tjtanjin"},"content":"            stage.setTitle(\"Steve\");"},{"lineNumber":35,"author":{"gitId":"tjtanjin"},"content":"            stage.setResizable(false);"},{"lineNumber":36,"author":{"gitId":"tjtanjin"},"content":"        } catch (IOException e) {"},{"lineNumber":37,"author":{"gitId":"tjtanjin"},"content":"            e.printStackTrace();"},{"lineNumber":38,"author":{"gitId":"tjtanjin"},"content":"        }"},{"lineNumber":39,"author":{"gitId":"tjtanjin"},"content":"    }"},{"lineNumber":40,"author":{"gitId":"tjtanjin"},"content":"}"}],"authorContributionMap":{"tjtanjin":40}},{"path":"src/main/java/com/tjtanjin/steve/Steve.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tjtanjin"},"content":"package com.tjtanjin.steve;"},{"lineNumber":2,"author":{"gitId":"tjtanjin"},"content":""},{"lineNumber":3,"author":{"gitId":"tjtanjin"},"content":"import com.tjtanjin.steve.commands.CommandHandler;"},{"lineNumber":4,"author":{"gitId":"tjtanjin"},"content":"import com.tjtanjin.steve.parser.Parser;"},{"lineNumber":5,"author":{"gitId":"tjtanjin"},"content":"import com.tjtanjin.steve.storage.StorageHandler;"},{"lineNumber":6,"author":{"gitId":"tjtanjin"},"content":"import com.tjtanjin.steve.tasks.TaskHandler;"},{"lineNumber":7,"author":{"gitId":"tjtanjin"},"content":""},{"lineNumber":8,"author":{"gitId":"tjtanjin"},"content":"/**"},{"lineNumber":9,"author":{"gitId":"tjtanjin"},"content":" * Steve class creates and allocates all key objects."},{"lineNumber":10,"author":{"gitId":"tjtanjin"},"content":" */"},{"lineNumber":11,"author":{"gitId":"tjtanjin"},"content":"public class Steve {"},{"lineNumber":12,"author":{"gitId":"tjtanjin"},"content":""},{"lineNumber":13,"author":{"gitId":"tjtanjin"},"content":"    private final Parser PARSER;"},{"lineNumber":14,"author":{"gitId":"tjtanjin"},"content":""},{"lineNumber":15,"author":{"gitId":"tjtanjin"},"content":"    /**"},{"lineNumber":16,"author":{"gitId":"tjtanjin"},"content":"     * Constructor for Steve which stores initializes key classes and stores parser to be used by UiHandler."},{"lineNumber":17,"author":{"gitId":"tjtanjin"},"content":"     */"},{"lineNumber":18,"author":{"gitId":"tjtanjin"},"content":"    public Steve() {"},{"lineNumber":19,"author":{"gitId":"tjtanjin"},"content":"        StorageHandler storageHandler \u003d new StorageHandler(\"./data/tasks.json\");"},{"lineNumber":20,"author":{"gitId":"tjtanjin"},"content":"        TaskHandler taskHandler \u003d new TaskHandler(storageHandler);"},{"lineNumber":21,"author":{"gitId":"tjtanjin"},"content":"        CommandHandler commandHandler \u003d new CommandHandler(taskHandler);"},{"lineNumber":22,"author":{"gitId":"tjtanjin"},"content":"        this.PARSER \u003d new Parser(commandHandler);"},{"lineNumber":23,"author":{"gitId":"tjtanjin"},"content":"    }"},{"lineNumber":24,"author":{"gitId":"tjtanjin"},"content":""},{"lineNumber":25,"author":{"gitId":"tjtanjin"},"content":"    /**"},{"lineNumber":26,"author":{"gitId":"tjtanjin"},"content":"     * Gets the parser."},{"lineNumber":27,"author":{"gitId":"tjtanjin"},"content":"     * @return parser"},{"lineNumber":28,"author":{"gitId":"tjtanjin"},"content":"     */"},{"lineNumber":29,"author":{"gitId":"tjtanjin"},"content":"    public Parser getParser() {"},{"lineNumber":30,"author":{"gitId":"tjtanjin"},"content":"        return this.PARSER;"},{"lineNumber":31,"author":{"gitId":"tjtanjin"},"content":"    }"},{"lineNumber":32,"author":{"gitId":"-"},"content":"}"}],"authorContributionMap":{"tjtanjin":31,"-":1}},{"path":"src/main/java/com/tjtanjin/steve/commands/ByeCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tjtanjin"},"content":"package com.tjtanjin.steve.commands;"},{"lineNumber":2,"author":{"gitId":"tjtanjin"},"content":""},{"lineNumber":3,"author":{"gitId":"tjtanjin"},"content":"/**"},{"lineNumber":4,"author":{"gitId":"tjtanjin"},"content":" * Entry point for handling logic and execution of bye command."},{"lineNumber":5,"author":{"gitId":"tjtanjin"},"content":" */"},{"lineNumber":6,"author":{"gitId":"tjtanjin"},"content":"public class ByeCommand {"},{"lineNumber":7,"author":{"gitId":"tjtanjin"},"content":""},{"lineNumber":8,"author":{"gitId":"tjtanjin"},"content":"    private final String DESCRIPTION;"},{"lineNumber":9,"author":{"gitId":"tjtanjin"},"content":""},{"lineNumber":10,"author":{"gitId":"tjtanjin"},"content":"    /**"},{"lineNumber":11,"author":{"gitId":"tjtanjin"},"content":"     * Constructor for ByeCommand."},{"lineNumber":12,"author":{"gitId":"tjtanjin"},"content":"     */"},{"lineNumber":13,"author":{"gitId":"tjtanjin"},"content":"    public ByeCommand(String description) {"},{"lineNumber":14,"author":{"gitId":"tjtanjin"},"content":"        this.DESCRIPTION \u003d description;"},{"lineNumber":15,"author":{"gitId":"tjtanjin"},"content":"    }"},{"lineNumber":16,"author":{"gitId":"tjtanjin"},"content":""},{"lineNumber":17,"author":{"gitId":"tjtanjin"},"content":"    /**"},{"lineNumber":18,"author":{"gitId":"tjtanjin"},"content":"     * Gets the description of bye command, currently unused."},{"lineNumber":19,"author":{"gitId":"tjtanjin"},"content":"     *"},{"lineNumber":20,"author":{"gitId":"tjtanjin"},"content":"     * @return description of bye command"},{"lineNumber":21,"author":{"gitId":"tjtanjin"},"content":"     */"},{"lineNumber":22,"author":{"gitId":"tjtanjin"},"content":"    public String getDescription() {"},{"lineNumber":23,"author":{"gitId":"tjtanjin"},"content":"        return this.DESCRIPTION;"},{"lineNumber":24,"author":{"gitId":"tjtanjin"},"content":"    }"},{"lineNumber":25,"author":{"gitId":"tjtanjin"},"content":""},{"lineNumber":26,"author":{"gitId":"tjtanjin"},"content":"    /**"},{"lineNumber":27,"author":{"gitId":"tjtanjin"},"content":"     * Exits the program."},{"lineNumber":28,"author":{"gitId":"tjtanjin"},"content":"     */"},{"lineNumber":29,"author":{"gitId":"tjtanjin"},"content":"    public String execute() {"},{"lineNumber":30,"author":{"gitId":"tjtanjin"},"content":"        return \"Terminated: Good bye, see you soon! :D\";"},{"lineNumber":31,"author":{"gitId":"tjtanjin"},"content":"    }"},{"lineNumber":32,"author":{"gitId":"tjtanjin"},"content":"}"}],"authorContributionMap":{"tjtanjin":32}},{"path":"src/main/java/com/tjtanjin/steve/commands/CommandHandler.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tjtanjin"},"content":"package com.tjtanjin.steve.commands;"},{"lineNumber":2,"author":{"gitId":"tjtanjin"},"content":""},{"lineNumber":3,"author":{"gitId":"tjtanjin"},"content":"import java.util.HashMap;"},{"lineNumber":4,"author":{"gitId":"tjtanjin"},"content":""},{"lineNumber":5,"author":{"gitId":"tjtanjin"},"content":"import com.tjtanjin.steve.tasks.TaskHandler;"},{"lineNumber":6,"author":{"gitId":"tjtanjin"},"content":""},{"lineNumber":7,"author":{"gitId":"tjtanjin"},"content":"/**"},{"lineNumber":8,"author":{"gitId":"tjtanjin"},"content":" * The CommandHandler class manages all supported commands and provides them with the"},{"lineNumber":9,"author":{"gitId":"tjtanjin"},"content":" * TaskHandler to modify tasks when necessary."},{"lineNumber":10,"author":{"gitId":"tjtanjin"},"content":" */"},{"lineNumber":11,"author":{"gitId":"tjtanjin"},"content":"public class CommandHandler {"},{"lineNumber":12,"author":{"gitId":"tjtanjin"},"content":""},{"lineNumber":13,"author":{"gitId":"tjtanjin"},"content":"    private final ByeCommand BYE_COMMAND;"},{"lineNumber":14,"author":{"gitId":"tjtanjin"},"content":"    private final DeadlineCommand DEADLINE_COMMAND;"},{"lineNumber":15,"author":{"gitId":"tjtanjin"},"content":"    private final DeleteCommand DELETE_COMMAND;"},{"lineNumber":16,"author":{"gitId":"tjtanjin"},"content":"    private final DoneCommand DONE_COMMAND;"},{"lineNumber":17,"author":{"gitId":"tjtanjin"},"content":"    private final EventCommand EVENT_COMMAND;"},{"lineNumber":18,"author":{"gitId":"tjtanjin"},"content":"    private final FindCommand FIND_COMMAND;"},{"lineNumber":19,"author":{"gitId":"tjtanjin"},"content":"    private final HelpCommand HELP_COMMAND;"},{"lineNumber":20,"author":{"gitId":"tjtanjin"},"content":"    private final ListCommand LIST_COMMAND;"},{"lineNumber":21,"author":{"gitId":"tjtanjin"},"content":"    private final TodoCommand TODO_COMMAND;"},{"lineNumber":22,"author":{"gitId":"tjtanjin"},"content":""},{"lineNumber":23,"author":{"gitId":"tjtanjin"},"content":"    /**"},{"lineNumber":24,"author":{"gitId":"tjtanjin"},"content":"     * Constructor for CommandHandler."},{"lineNumber":25,"author":{"gitId":"tjtanjin"},"content":"     *"},{"lineNumber":26,"author":{"gitId":"tjtanjin"},"content":"     * @param taskHandler task handler to pass to commands that modify tasks"},{"lineNumber":27,"author":{"gitId":"tjtanjin"},"content":"     */"},{"lineNumber":28,"author":{"gitId":"tjtanjin"},"content":"    public CommandHandler(TaskHandler taskHandler) {"},{"lineNumber":29,"author":{"gitId":"tjtanjin"},"content":""},{"lineNumber":30,"author":{"gitId":"tjtanjin"},"content":"        //load command descriptions"},{"lineNumber":31,"author":{"gitId":"tjtanjin"},"content":"        //list storing commands/descriptions, ideally store in json file"},{"lineNumber":32,"author":{"gitId":"tjtanjin"},"content":"        HashMap\u003cString, String\u003e cmdInfo \u003d new HashMap\u003c\u003e();"},{"lineNumber":33,"author":{"gitId":"tjtanjin"},"content":"        cmdInfo.put(\"BYE\", \"bye | Description: exits the program\");"},{"lineNumber":34,"author":{"gitId":"tjtanjin"},"content":"        cmdInfo.put(\"LIST\", \"list | Description: lists all entered tasks\");"},{"lineNumber":35,"author":{"gitId":"tjtanjin"},"content":"        cmdInfo.put(\"DONE\","},{"lineNumber":36,"author":{"gitId":"tjtanjin"},"content":"                \"done \u003ctask index\u003e | Description: marks by index a given task as done\");"},{"lineNumber":37,"author":{"gitId":"tjtanjin"},"content":"        cmdInfo.put(\"TODO\", \"todo \u003cname\u003e | Description: adds a new todo task\");"},{"lineNumber":38,"author":{"gitId":"tjtanjin"},"content":"        cmdInfo.put(\"DEADLINE\","},{"lineNumber":39,"author":{"gitId":"tjtanjin"},"content":"                \"deadline \u003cname\u003e /by \u003cend date\u003e | Description: adds a new deadline task\");"},{"lineNumber":40,"author":{"gitId":"tjtanjin"},"content":"        cmdInfo.put(\"EVENT\","},{"lineNumber":41,"author":{"gitId":"tjtanjin"},"content":"                \"event \u003cname\u003e /from \u003cstart date\u003e /to \u003cend date\u003e | Description: adds a new event task\");"},{"lineNumber":42,"author":{"gitId":"tjtanjin"},"content":"        cmdInfo.put(\"DELETE\", \"delete \u003ctask index\u003e | Description: deletes by index a given task\");"},{"lineNumber":43,"author":{"gitId":"tjtanjin"},"content":"        cmdInfo.put(\"HELP\", \"help | Description: lists this help menu\");"},{"lineNumber":44,"author":{"gitId":"tjtanjin"},"content":"        cmdInfo.put(\"FIND\", \"find \u003cname\u003e | Description: finds task by name\");"},{"lineNumber":45,"author":{"gitId":"tjtanjin"},"content":""},{"lineNumber":46,"author":{"gitId":"tjtanjin"},"content":"        //initialize commands"},{"lineNumber":47,"author":{"gitId":"tjtanjin"},"content":"        this.BYE_COMMAND \u003d new ByeCommand(cmdInfo.get(\"BYE\"));"},{"lineNumber":48,"author":{"gitId":"tjtanjin"},"content":"        this.DEADLINE_COMMAND \u003d new DeadlineCommand(cmdInfo.get(\"DEADLINE\"), taskHandler);"},{"lineNumber":49,"author":{"gitId":"tjtanjin"},"content":"        this.DELETE_COMMAND \u003d new DeleteCommand(cmdInfo.get(\"DELETE\"), taskHandler);"},{"lineNumber":50,"author":{"gitId":"tjtanjin"},"content":"        this.DONE_COMMAND \u003d new DoneCommand(cmdInfo.get(\"DONE\"), taskHandler);"},{"lineNumber":51,"author":{"gitId":"tjtanjin"},"content":"        this.EVENT_COMMAND \u003d new EventCommand(cmdInfo.get(\"EVENT\"), taskHandler);"},{"lineNumber":52,"author":{"gitId":"tjtanjin"},"content":"        this.FIND_COMMAND \u003d new FindCommand(cmdInfo.get(\"FIND\"), taskHandler);"},{"lineNumber":53,"author":{"gitId":"tjtanjin"},"content":"        this.HELP_COMMAND \u003d new HelpCommand(cmdInfo.get(\"HELP\"), cmdInfo);"},{"lineNumber":54,"author":{"gitId":"tjtanjin"},"content":"        this.LIST_COMMAND \u003d new ListCommand(cmdInfo.get(\"LIST\"), taskHandler);"},{"lineNumber":55,"author":{"gitId":"tjtanjin"},"content":"        this.TODO_COMMAND \u003d new TodoCommand(cmdInfo.get(\"TODO\"), taskHandler);"},{"lineNumber":56,"author":{"gitId":"tjtanjin"},"content":"    }"},{"lineNumber":57,"author":{"gitId":"tjtanjin"},"content":""},{"lineNumber":58,"author":{"gitId":"tjtanjin"},"content":"    /**"},{"lineNumber":59,"author":{"gitId":"tjtanjin"},"content":"     * Gets the bye command object."},{"lineNumber":60,"author":{"gitId":"tjtanjin"},"content":"     *"},{"lineNumber":61,"author":{"gitId":"tjtanjin"},"content":"     * @return bye command object"},{"lineNumber":62,"author":{"gitId":"tjtanjin"},"content":"     */"},{"lineNumber":63,"author":{"gitId":"tjtanjin"},"content":"    public ByeCommand getByeCommand() {"},{"lineNumber":64,"author":{"gitId":"tjtanjin"},"content":"        return this.BYE_COMMAND;"},{"lineNumber":65,"author":{"gitId":"tjtanjin"},"content":"    }"},{"lineNumber":66,"author":{"gitId":"tjtanjin"},"content":""},{"lineNumber":67,"author":{"gitId":"tjtanjin"},"content":"    /**"},{"lineNumber":68,"author":{"gitId":"tjtanjin"},"content":"     * Gets the deadline command object."},{"lineNumber":69,"author":{"gitId":"tjtanjin"},"content":"     *"},{"lineNumber":70,"author":{"gitId":"tjtanjin"},"content":"     * @return deadline command object"},{"lineNumber":71,"author":{"gitId":"tjtanjin"},"content":"     */"},{"lineNumber":72,"author":{"gitId":"tjtanjin"},"content":"    public DeadlineCommand getDeadlineCommand() {"},{"lineNumber":73,"author":{"gitId":"tjtanjin"},"content":"        return this.DEADLINE_COMMAND;"},{"lineNumber":74,"author":{"gitId":"tjtanjin"},"content":"    }"},{"lineNumber":75,"author":{"gitId":"tjtanjin"},"content":""},{"lineNumber":76,"author":{"gitId":"tjtanjin"},"content":"    /**"},{"lineNumber":77,"author":{"gitId":"tjtanjin"},"content":"     * Gets the delete command object."},{"lineNumber":78,"author":{"gitId":"tjtanjin"},"content":"     *"},{"lineNumber":79,"author":{"gitId":"tjtanjin"},"content":"     * @return delete command object"},{"lineNumber":80,"author":{"gitId":"tjtanjin"},"content":"     */"},{"lineNumber":81,"author":{"gitId":"tjtanjin"},"content":"    public DeleteCommand getDeleteCommand() {"},{"lineNumber":82,"author":{"gitId":"tjtanjin"},"content":"        return this.DELETE_COMMAND;"},{"lineNumber":83,"author":{"gitId":"tjtanjin"},"content":"    }"},{"lineNumber":84,"author":{"gitId":"tjtanjin"},"content":""},{"lineNumber":85,"author":{"gitId":"tjtanjin"},"content":"    /**"},{"lineNumber":86,"author":{"gitId":"tjtanjin"},"content":"     * Gets the done command object."},{"lineNumber":87,"author":{"gitId":"tjtanjin"},"content":"     *"},{"lineNumber":88,"author":{"gitId":"tjtanjin"},"content":"     * @return done command object"},{"lineNumber":89,"author":{"gitId":"tjtanjin"},"content":"     */"},{"lineNumber":90,"author":{"gitId":"tjtanjin"},"content":"    public DoneCommand getDoneCommand() {"},{"lineNumber":91,"author":{"gitId":"tjtanjin"},"content":"        return this.DONE_COMMAND;"},{"lineNumber":92,"author":{"gitId":"tjtanjin"},"content":"    }"},{"lineNumber":93,"author":{"gitId":"tjtanjin"},"content":""},{"lineNumber":94,"author":{"gitId":"tjtanjin"},"content":"    /**"},{"lineNumber":95,"author":{"gitId":"tjtanjin"},"content":"     * Gets the event command object."},{"lineNumber":96,"author":{"gitId":"tjtanjin"},"content":"     *"},{"lineNumber":97,"author":{"gitId":"tjtanjin"},"content":"     * @return event command object"},{"lineNumber":98,"author":{"gitId":"tjtanjin"},"content":"     */"},{"lineNumber":99,"author":{"gitId":"tjtanjin"},"content":"    public EventCommand getEventCommand() {"},{"lineNumber":100,"author":{"gitId":"tjtanjin"},"content":"        return this.EVENT_COMMAND;"},{"lineNumber":101,"author":{"gitId":"tjtanjin"},"content":"    }"},{"lineNumber":102,"author":{"gitId":"tjtanjin"},"content":""},{"lineNumber":103,"author":{"gitId":"tjtanjin"},"content":"    /**"},{"lineNumber":104,"author":{"gitId":"tjtanjin"},"content":"     * Gets the find command object."},{"lineNumber":105,"author":{"gitId":"tjtanjin"},"content":"     *"},{"lineNumber":106,"author":{"gitId":"tjtanjin"},"content":"     * @return find command object"},{"lineNumber":107,"author":{"gitId":"tjtanjin"},"content":"     */"},{"lineNumber":108,"author":{"gitId":"tjtanjin"},"content":"    public FindCommand getFindCommand() {"},{"lineNumber":109,"author":{"gitId":"tjtanjin"},"content":"        return this.FIND_COMMAND;"},{"lineNumber":110,"author":{"gitId":"tjtanjin"},"content":"    }"},{"lineNumber":111,"author":{"gitId":"tjtanjin"},"content":""},{"lineNumber":112,"author":{"gitId":"tjtanjin"},"content":"    /**"},{"lineNumber":113,"author":{"gitId":"tjtanjin"},"content":"     * Gets the help command object."},{"lineNumber":114,"author":{"gitId":"tjtanjin"},"content":"     *"},{"lineNumber":115,"author":{"gitId":"tjtanjin"},"content":"     * @return help command object"},{"lineNumber":116,"author":{"gitId":"tjtanjin"},"content":"     */"},{"lineNumber":117,"author":{"gitId":"tjtanjin"},"content":"    public HelpCommand getHelpCommand() {"},{"lineNumber":118,"author":{"gitId":"tjtanjin"},"content":"        return this.HELP_COMMAND;"},{"lineNumber":119,"author":{"gitId":"tjtanjin"},"content":"    }"},{"lineNumber":120,"author":{"gitId":"tjtanjin"},"content":""},{"lineNumber":121,"author":{"gitId":"tjtanjin"},"content":"    /**"},{"lineNumber":122,"author":{"gitId":"tjtanjin"},"content":"     * Gets the list command object."},{"lineNumber":123,"author":{"gitId":"tjtanjin"},"content":"     *"},{"lineNumber":124,"author":{"gitId":"tjtanjin"},"content":"     * @return list command object"},{"lineNumber":125,"author":{"gitId":"tjtanjin"},"content":"     */"},{"lineNumber":126,"author":{"gitId":"tjtanjin"},"content":"    public ListCommand getListCommand() {"},{"lineNumber":127,"author":{"gitId":"tjtanjin"},"content":"        return this.LIST_COMMAND;"},{"lineNumber":128,"author":{"gitId":"tjtanjin"},"content":"    }"},{"lineNumber":129,"author":{"gitId":"tjtanjin"},"content":""},{"lineNumber":130,"author":{"gitId":"tjtanjin"},"content":"    /**"},{"lineNumber":131,"author":{"gitId":"tjtanjin"},"content":"     * Gets the todo command object."},{"lineNumber":132,"author":{"gitId":"tjtanjin"},"content":"     *"},{"lineNumber":133,"author":{"gitId":"tjtanjin"},"content":"     * @return todo command object"},{"lineNumber":134,"author":{"gitId":"tjtanjin"},"content":"     */"},{"lineNumber":135,"author":{"gitId":"tjtanjin"},"content":"    public TodoCommand getTodoCommand() {"},{"lineNumber":136,"author":{"gitId":"tjtanjin"},"content":"        return this.TODO_COMMAND;"},{"lineNumber":137,"author":{"gitId":"tjtanjin"},"content":"    }"},{"lineNumber":138,"author":{"gitId":"tjtanjin"},"content":"}"}],"authorContributionMap":{"tjtanjin":138}},{"path":"src/main/java/com/tjtanjin/steve/commands/DeadlineCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tjtanjin"},"content":"package com.tjtanjin.steve.commands;"},{"lineNumber":2,"author":{"gitId":"tjtanjin"},"content":""},{"lineNumber":3,"author":{"gitId":"tjtanjin"},"content":"import java.time.LocalDate;"},{"lineNumber":4,"author":{"gitId":"tjtanjin"},"content":""},{"lineNumber":5,"author":{"gitId":"tjtanjin"},"content":"import com.tjtanjin.steve.tasks.TaskHandler;"},{"lineNumber":6,"author":{"gitId":"tjtanjin"},"content":""},{"lineNumber":7,"author":{"gitId":"tjtanjin"},"content":"/**"},{"lineNumber":8,"author":{"gitId":"tjtanjin"},"content":" * Entry point for handling logic and execution of deadline command."},{"lineNumber":9,"author":{"gitId":"tjtanjin"},"content":" */"},{"lineNumber":10,"author":{"gitId":"tjtanjin"},"content":"public class DeadlineCommand {"},{"lineNumber":11,"author":{"gitId":"tjtanjin"},"content":""},{"lineNumber":12,"author":{"gitId":"tjtanjin"},"content":"    private final TaskHandler TASK_HANDLER;"},{"lineNumber":13,"author":{"gitId":"tjtanjin"},"content":"    private final String DESCRIPTION;"},{"lineNumber":14,"author":{"gitId":"tjtanjin"},"content":""},{"lineNumber":15,"author":{"gitId":"tjtanjin"},"content":"    /**"},{"lineNumber":16,"author":{"gitId":"tjtanjin"},"content":"     * Constructor for DeadlineCommand."},{"lineNumber":17,"author":{"gitId":"tjtanjin"},"content":"     *"},{"lineNumber":18,"author":{"gitId":"tjtanjin"},"content":"     * @param taskHandler provides access for command to modify tasks"},{"lineNumber":19,"author":{"gitId":"tjtanjin"},"content":"     */"},{"lineNumber":20,"author":{"gitId":"tjtanjin"},"content":"    public DeadlineCommand(String description, TaskHandler taskHandler) {"},{"lineNumber":21,"author":{"gitId":"tjtanjin"},"content":"        this.DESCRIPTION \u003d description;"},{"lineNumber":22,"author":{"gitId":"tjtanjin"},"content":"        this.TASK_HANDLER \u003d taskHandler;"},{"lineNumber":23,"author":{"gitId":"tjtanjin"},"content":"    }"},{"lineNumber":24,"author":{"gitId":"tjtanjin"},"content":""},{"lineNumber":25,"author":{"gitId":"tjtanjin"},"content":"    /**"},{"lineNumber":26,"author":{"gitId":"tjtanjin"},"content":"     * Gets the description of deadline command."},{"lineNumber":27,"author":{"gitId":"tjtanjin"},"content":"     *"},{"lineNumber":28,"author":{"gitId":"tjtanjin"},"content":"     * @return description of deadline command"},{"lineNumber":29,"author":{"gitId":"tjtanjin"},"content":"     */"},{"lineNumber":30,"author":{"gitId":"tjtanjin"},"content":"    public String getDescription() {"},{"lineNumber":31,"author":{"gitId":"tjtanjin"},"content":"        return this.DESCRIPTION;"},{"lineNumber":32,"author":{"gitId":"tjtanjin"},"content":"    }"},{"lineNumber":33,"author":{"gitId":"tjtanjin"},"content":""},{"lineNumber":34,"author":{"gitId":"tjtanjin"},"content":"    /**"},{"lineNumber":35,"author":{"gitId":"tjtanjin"},"content":"     * Forwards the add deadline task operation to TaskHandler."},{"lineNumber":36,"author":{"gitId":"tjtanjin"},"content":"     *"},{"lineNumber":37,"author":{"gitId":"tjtanjin"},"content":"     * @param taskType type of task (todo, deadline or event)"},{"lineNumber":38,"author":{"gitId":"tjtanjin"},"content":"     * @param taskName name of task"},{"lineNumber":39,"author":{"gitId":"tjtanjin"},"content":"     * @param taskDates array of dates"},{"lineNumber":40,"author":{"gitId":"tjtanjin"},"content":"     * @return string response after operation is done"},{"lineNumber":41,"author":{"gitId":"tjtanjin"},"content":"     */"},{"lineNumber":42,"author":{"gitId":"tjtanjin"},"content":"    public String execute(String taskType, String taskName, LocalDate[] taskDates) {"},{"lineNumber":43,"author":{"gitId":"tjtanjin"},"content":"        return TASK_HANDLER.addTask(taskType, taskName, taskDates);"},{"lineNumber":44,"author":{"gitId":"tjtanjin"},"content":"    }"},{"lineNumber":45,"author":{"gitId":"tjtanjin"},"content":"}"}],"authorContributionMap":{"tjtanjin":45}},{"path":"src/main/java/com/tjtanjin/steve/commands/DeleteCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tjtanjin"},"content":"package com.tjtanjin.steve.commands;"},{"lineNumber":2,"author":{"gitId":"tjtanjin"},"content":""},{"lineNumber":3,"author":{"gitId":"tjtanjin"},"content":"import com.tjtanjin.steve.tasks.TaskHandler;"},{"lineNumber":4,"author":{"gitId":"tjtanjin"},"content":""},{"lineNumber":5,"author":{"gitId":"tjtanjin"},"content":"/**"},{"lineNumber":6,"author":{"gitId":"tjtanjin"},"content":" * Entry point for handling logic and execution of delete command."},{"lineNumber":7,"author":{"gitId":"tjtanjin"},"content":" */"},{"lineNumber":8,"author":{"gitId":"tjtanjin"},"content":"public class DeleteCommand {"},{"lineNumber":9,"author":{"gitId":"tjtanjin"},"content":""},{"lineNumber":10,"author":{"gitId":"tjtanjin"},"content":"    private final TaskHandler TASK_HANDLER;"},{"lineNumber":11,"author":{"gitId":"tjtanjin"},"content":"    private final String DESCRIPTION;"},{"lineNumber":12,"author":{"gitId":"tjtanjin"},"content":""},{"lineNumber":13,"author":{"gitId":"tjtanjin"},"content":"    /**"},{"lineNumber":14,"author":{"gitId":"tjtanjin"},"content":"     * Constructor for DeleteCommand."},{"lineNumber":15,"author":{"gitId":"tjtanjin"},"content":"     *"},{"lineNumber":16,"author":{"gitId":"tjtanjin"},"content":"     * @param taskHandler provides access for command to modify tasks"},{"lineNumber":17,"author":{"gitId":"tjtanjin"},"content":"     */"},{"lineNumber":18,"author":{"gitId":"tjtanjin"},"content":"    public DeleteCommand(String description, TaskHandler taskHandler) {"},{"lineNumber":19,"author":{"gitId":"tjtanjin"},"content":"        this.DESCRIPTION \u003d description;"},{"lineNumber":20,"author":{"gitId":"tjtanjin"},"content":"        this.TASK_HANDLER \u003d taskHandler;"},{"lineNumber":21,"author":{"gitId":"tjtanjin"},"content":"    }"},{"lineNumber":22,"author":{"gitId":"tjtanjin"},"content":""},{"lineNumber":23,"author":{"gitId":"tjtanjin"},"content":"    /**"},{"lineNumber":24,"author":{"gitId":"tjtanjin"},"content":"     * Gets the description of delete command."},{"lineNumber":25,"author":{"gitId":"tjtanjin"},"content":"     *"},{"lineNumber":26,"author":{"gitId":"tjtanjin"},"content":"     * @return description of delete command"},{"lineNumber":27,"author":{"gitId":"tjtanjin"},"content":"     */"},{"lineNumber":28,"author":{"gitId":"tjtanjin"},"content":"    public String getDescription() {"},{"lineNumber":29,"author":{"gitId":"tjtanjin"},"content":"        return this.DESCRIPTION;"},{"lineNumber":30,"author":{"gitId":"tjtanjin"},"content":"    }"},{"lineNumber":31,"author":{"gitId":"tjtanjin"},"content":""},{"lineNumber":32,"author":{"gitId":"tjtanjin"},"content":"    /**"},{"lineNumber":33,"author":{"gitId":"tjtanjin"},"content":"     * Forwards the delete task operation to TaskHandler."},{"lineNumber":34,"author":{"gitId":"tjtanjin"},"content":"     *"},{"lineNumber":35,"author":{"gitId":"tjtanjin"},"content":"     * @param index of task to delete"},{"lineNumber":36,"author":{"gitId":"tjtanjin"},"content":"     * @return string response after operation is done"},{"lineNumber":37,"author":{"gitId":"tjtanjin"},"content":"     */"},{"lineNumber":38,"author":{"gitId":"tjtanjin"},"content":"    public String execute(int index) {"},{"lineNumber":39,"author":{"gitId":"tjtanjin"},"content":"        return TASK_HANDLER.deleteTask(index);"},{"lineNumber":40,"author":{"gitId":"tjtanjin"},"content":"    }"},{"lineNumber":41,"author":{"gitId":"tjtanjin"},"content":"}"}],"authorContributionMap":{"tjtanjin":41}},{"path":"src/main/java/com/tjtanjin/steve/commands/DoneCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tjtanjin"},"content":"package com.tjtanjin.steve.commands;"},{"lineNumber":2,"author":{"gitId":"tjtanjin"},"content":""},{"lineNumber":3,"author":{"gitId":"tjtanjin"},"content":"import com.tjtanjin.steve.tasks.TaskHandler;"},{"lineNumber":4,"author":{"gitId":"tjtanjin"},"content":""},{"lineNumber":5,"author":{"gitId":"tjtanjin"},"content":"/**"},{"lineNumber":6,"author":{"gitId":"tjtanjin"},"content":" * Entry point for handling logic and execution of done command."},{"lineNumber":7,"author":{"gitId":"tjtanjin"},"content":" */"},{"lineNumber":8,"author":{"gitId":"tjtanjin"},"content":"public class DoneCommand {"},{"lineNumber":9,"author":{"gitId":"tjtanjin"},"content":""},{"lineNumber":10,"author":{"gitId":"tjtanjin"},"content":"    private final TaskHandler TASK_HANDLER;"},{"lineNumber":11,"author":{"gitId":"tjtanjin"},"content":"    private final String DESCRIPTION;"},{"lineNumber":12,"author":{"gitId":"tjtanjin"},"content":""},{"lineNumber":13,"author":{"gitId":"tjtanjin"},"content":"    /**"},{"lineNumber":14,"author":{"gitId":"tjtanjin"},"content":"     * Constructor for DoneCommand."},{"lineNumber":15,"author":{"gitId":"tjtanjin"},"content":"     *"},{"lineNumber":16,"author":{"gitId":"tjtanjin"},"content":"     * @param taskHandler provides access for command to modify tasks"},{"lineNumber":17,"author":{"gitId":"tjtanjin"},"content":"     */"},{"lineNumber":18,"author":{"gitId":"tjtanjin"},"content":"    public DoneCommand(String description, TaskHandler taskHandler) {"},{"lineNumber":19,"author":{"gitId":"tjtanjin"},"content":"        this.DESCRIPTION \u003d description;"},{"lineNumber":20,"author":{"gitId":"tjtanjin"},"content":"        this.TASK_HANDLER \u003d taskHandler;"},{"lineNumber":21,"author":{"gitId":"tjtanjin"},"content":"    }"},{"lineNumber":22,"author":{"gitId":"tjtanjin"},"content":""},{"lineNumber":23,"author":{"gitId":"tjtanjin"},"content":"    /**"},{"lineNumber":24,"author":{"gitId":"tjtanjin"},"content":"     * Gets the description of done command."},{"lineNumber":25,"author":{"gitId":"tjtanjin"},"content":"     *"},{"lineNumber":26,"author":{"gitId":"tjtanjin"},"content":"     * @return description of done command"},{"lineNumber":27,"author":{"gitId":"tjtanjin"},"content":"     */"},{"lineNumber":28,"author":{"gitId":"tjtanjin"},"content":"    public String getDescription() {"},{"lineNumber":29,"author":{"gitId":"tjtanjin"},"content":"        return this.DESCRIPTION;"},{"lineNumber":30,"author":{"gitId":"tjtanjin"},"content":"    }"},{"lineNumber":31,"author":{"gitId":"tjtanjin"},"content":""},{"lineNumber":32,"author":{"gitId":"tjtanjin"},"content":"    /**"},{"lineNumber":33,"author":{"gitId":"tjtanjin"},"content":"     * Forwards the mark task as done operation to TaskHandler."},{"lineNumber":34,"author":{"gitId":"tjtanjin"},"content":"     *"},{"lineNumber":35,"author":{"gitId":"tjtanjin"},"content":"     * @param index of task to mark as done"},{"lineNumber":36,"author":{"gitId":"tjtanjin"},"content":"     * @return string response after operation is done"},{"lineNumber":37,"author":{"gitId":"tjtanjin"},"content":"     */"},{"lineNumber":38,"author":{"gitId":"tjtanjin"},"content":"    public String execute(int index) {"},{"lineNumber":39,"author":{"gitId":"tjtanjin"},"content":"        return TASK_HANDLER.markTaskDone(index);"},{"lineNumber":40,"author":{"gitId":"tjtanjin"},"content":"    }"},{"lineNumber":41,"author":{"gitId":"tjtanjin"},"content":"}"}],"authorContributionMap":{"tjtanjin":41}},{"path":"src/main/java/com/tjtanjin/steve/commands/EventCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tjtanjin"},"content":"package com.tjtanjin.steve.commands;"},{"lineNumber":2,"author":{"gitId":"tjtanjin"},"content":""},{"lineNumber":3,"author":{"gitId":"tjtanjin"},"content":"import java.time.LocalDate;"},{"lineNumber":4,"author":{"gitId":"tjtanjin"},"content":""},{"lineNumber":5,"author":{"gitId":"tjtanjin"},"content":"import com.tjtanjin.steve.tasks.TaskHandler;"},{"lineNumber":6,"author":{"gitId":"tjtanjin"},"content":""},{"lineNumber":7,"author":{"gitId":"tjtanjin"},"content":"/**"},{"lineNumber":8,"author":{"gitId":"tjtanjin"},"content":" * Entry point for handling logic and execution of event command."},{"lineNumber":9,"author":{"gitId":"tjtanjin"},"content":" */"},{"lineNumber":10,"author":{"gitId":"tjtanjin"},"content":"public class EventCommand {"},{"lineNumber":11,"author":{"gitId":"tjtanjin"},"content":""},{"lineNumber":12,"author":{"gitId":"tjtanjin"},"content":"    private final TaskHandler TASK_HANDLER;"},{"lineNumber":13,"author":{"gitId":"tjtanjin"},"content":"    private final String DESCRIPTION;"},{"lineNumber":14,"author":{"gitId":"tjtanjin"},"content":""},{"lineNumber":15,"author":{"gitId":"tjtanjin"},"content":"    /**"},{"lineNumber":16,"author":{"gitId":"tjtanjin"},"content":"     * Constructor for EventCommand."},{"lineNumber":17,"author":{"gitId":"tjtanjin"},"content":"     *"},{"lineNumber":18,"author":{"gitId":"tjtanjin"},"content":"     * @param taskHandler provides access for command to modify tasks"},{"lineNumber":19,"author":{"gitId":"tjtanjin"},"content":"     */"},{"lineNumber":20,"author":{"gitId":"tjtanjin"},"content":"    public EventCommand(String description, TaskHandler taskHandler) {"},{"lineNumber":21,"author":{"gitId":"tjtanjin"},"content":"        this.DESCRIPTION \u003d description;"},{"lineNumber":22,"author":{"gitId":"tjtanjin"},"content":"        this.TASK_HANDLER \u003d taskHandler;"},{"lineNumber":23,"author":{"gitId":"tjtanjin"},"content":"    }"},{"lineNumber":24,"author":{"gitId":"tjtanjin"},"content":""},{"lineNumber":25,"author":{"gitId":"tjtanjin"},"content":"    /**"},{"lineNumber":26,"author":{"gitId":"tjtanjin"},"content":"     * Gets the description of event command."},{"lineNumber":27,"author":{"gitId":"tjtanjin"},"content":"     *"},{"lineNumber":28,"author":{"gitId":"tjtanjin"},"content":"     * @return description of event command"},{"lineNumber":29,"author":{"gitId":"tjtanjin"},"content":"     */"},{"lineNumber":30,"author":{"gitId":"tjtanjin"},"content":"    public String getDescription() {"},{"lineNumber":31,"author":{"gitId":"tjtanjin"},"content":"        return this.DESCRIPTION;"},{"lineNumber":32,"author":{"gitId":"tjtanjin"},"content":"    }"},{"lineNumber":33,"author":{"gitId":"tjtanjin"},"content":""},{"lineNumber":34,"author":{"gitId":"tjtanjin"},"content":"    /**"},{"lineNumber":35,"author":{"gitId":"tjtanjin"},"content":"     * Forwards the add event task operation to TaskHandler."},{"lineNumber":36,"author":{"gitId":"tjtanjin"},"content":"     *"},{"lineNumber":37,"author":{"gitId":"tjtanjin"},"content":"     * @param taskType type of task (todo, deadline or event)"},{"lineNumber":38,"author":{"gitId":"tjtanjin"},"content":"     * @param taskName name of task"},{"lineNumber":39,"author":{"gitId":"tjtanjin"},"content":"     * @param taskDates array of dates"},{"lineNumber":40,"author":{"gitId":"tjtanjin"},"content":"     * @return string response after operation is done"},{"lineNumber":41,"author":{"gitId":"tjtanjin"},"content":"     */"},{"lineNumber":42,"author":{"gitId":"tjtanjin"},"content":"    public String execute(String taskType, String taskName, LocalDate[] taskDates) {"},{"lineNumber":43,"author":{"gitId":"tjtanjin"},"content":"        return TASK_HANDLER.addTask(taskType, taskName, taskDates);"},{"lineNumber":44,"author":{"gitId":"tjtanjin"},"content":"    }"},{"lineNumber":45,"author":{"gitId":"tjtanjin"},"content":"}"}],"authorContributionMap":{"tjtanjin":45}},{"path":"src/main/java/com/tjtanjin/steve/commands/FindCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tjtanjin"},"content":"package com.tjtanjin.steve.commands;"},{"lineNumber":2,"author":{"gitId":"tjtanjin"},"content":""},{"lineNumber":3,"author":{"gitId":"tjtanjin"},"content":"import com.tjtanjin.steve.tasks.TaskHandler;"},{"lineNumber":4,"author":{"gitId":"tjtanjin"},"content":""},{"lineNumber":5,"author":{"gitId":"tjtanjin"},"content":"/**"},{"lineNumber":6,"author":{"gitId":"tjtanjin"},"content":" * Entry point for handling logic and execution of find command."},{"lineNumber":7,"author":{"gitId":"tjtanjin"},"content":" */"},{"lineNumber":8,"author":{"gitId":"tjtanjin"},"content":"public class FindCommand {"},{"lineNumber":9,"author":{"gitId":"tjtanjin"},"content":""},{"lineNumber":10,"author":{"gitId":"tjtanjin"},"content":"    private final TaskHandler TASK_HANDLER;"},{"lineNumber":11,"author":{"gitId":"tjtanjin"},"content":"    private final String DESCRIPTION;"},{"lineNumber":12,"author":{"gitId":"tjtanjin"},"content":""},{"lineNumber":13,"author":{"gitId":"tjtanjin"},"content":"    /**"},{"lineNumber":14,"author":{"gitId":"tjtanjin"},"content":"     * Constructor for FindCommand."},{"lineNumber":15,"author":{"gitId":"tjtanjin"},"content":"     *"},{"lineNumber":16,"author":{"gitId":"tjtanjin"},"content":"     * @param taskHandler provides access for command to modify tasks"},{"lineNumber":17,"author":{"gitId":"tjtanjin"},"content":"     */"},{"lineNumber":18,"author":{"gitId":"tjtanjin"},"content":"    public FindCommand(String description, TaskHandler taskHandler) {"},{"lineNumber":19,"author":{"gitId":"tjtanjin"},"content":"        this.DESCRIPTION \u003d description;"},{"lineNumber":20,"author":{"gitId":"tjtanjin"},"content":"        this.TASK_HANDLER \u003d taskHandler;"},{"lineNumber":21,"author":{"gitId":"tjtanjin"},"content":"    }"},{"lineNumber":22,"author":{"gitId":"tjtanjin"},"content":""},{"lineNumber":23,"author":{"gitId":"tjtanjin"},"content":"    /**"},{"lineNumber":24,"author":{"gitId":"tjtanjin"},"content":"     * Gets the description of find command."},{"lineNumber":25,"author":{"gitId":"tjtanjin"},"content":"     *"},{"lineNumber":26,"author":{"gitId":"tjtanjin"},"content":"     * @return description of find command"},{"lineNumber":27,"author":{"gitId":"tjtanjin"},"content":"     */"},{"lineNumber":28,"author":{"gitId":"tjtanjin"},"content":"    public String getDescription() {"},{"lineNumber":29,"author":{"gitId":"tjtanjin"},"content":"        return this.DESCRIPTION;"},{"lineNumber":30,"author":{"gitId":"tjtanjin"},"content":"    }"},{"lineNumber":31,"author":{"gitId":"tjtanjin"},"content":""},{"lineNumber":32,"author":{"gitId":"tjtanjin"},"content":"    /**"},{"lineNumber":33,"author":{"gitId":"tjtanjin"},"content":"     * Forwards the find task operation to TaskHandler."},{"lineNumber":34,"author":{"gitId":"tjtanjin"},"content":"     *"},{"lineNumber":35,"author":{"gitId":"tjtanjin"},"content":"     * @param taskName name of task"},{"lineNumber":36,"author":{"gitId":"tjtanjin"},"content":"     * @return string response after operation is done"},{"lineNumber":37,"author":{"gitId":"tjtanjin"},"content":"     */"},{"lineNumber":38,"author":{"gitId":"tjtanjin"},"content":"    public String execute(String taskName) {"},{"lineNumber":39,"author":{"gitId":"tjtanjin"},"content":"        return TASK_HANDLER.findTask(taskName.split(\" \"));"},{"lineNumber":40,"author":{"gitId":"tjtanjin"},"content":"    }"},{"lineNumber":41,"author":{"gitId":"tjtanjin"},"content":"}"}],"authorContributionMap":{"tjtanjin":41}},{"path":"src/main/java/com/tjtanjin/steve/commands/HelpCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tjtanjin"},"content":"package com.tjtanjin.steve.commands;"},{"lineNumber":2,"author":{"gitId":"tjtanjin"},"content":""},{"lineNumber":3,"author":{"gitId":"tjtanjin"},"content":"import java.util.HashMap;"},{"lineNumber":4,"author":{"gitId":"tjtanjin"},"content":""},{"lineNumber":5,"author":{"gitId":"tjtanjin"},"content":"/**"},{"lineNumber":6,"author":{"gitId":"tjtanjin"},"content":" * Entry point for handling logic and execution of help command."},{"lineNumber":7,"author":{"gitId":"tjtanjin"},"content":" */"},{"lineNumber":8,"author":{"gitId":"tjtanjin"},"content":"public class HelpCommand {"},{"lineNumber":9,"author":{"gitId":"tjtanjin"},"content":""},{"lineNumber":10,"author":{"gitId":"tjtanjin"},"content":"    private final HashMap\u003cString, String\u003e CMD_INFO;"},{"lineNumber":11,"author":{"gitId":"tjtanjin"},"content":"    private final String DESCRIPTION;"},{"lineNumber":12,"author":{"gitId":"tjtanjin"},"content":""},{"lineNumber":13,"author":{"gitId":"tjtanjin"},"content":"    /**"},{"lineNumber":14,"author":{"gitId":"tjtanjin"},"content":"     * Constructor for HelpCommand."},{"lineNumber":15,"author":{"gitId":"tjtanjin"},"content":"     */"},{"lineNumber":16,"author":{"gitId":"tjtanjin"},"content":"    public HelpCommand(String description, HashMap\u003cString, String\u003e cmdInfo) {"},{"lineNumber":17,"author":{"gitId":"tjtanjin"},"content":"        this.DESCRIPTION \u003d description;"},{"lineNumber":18,"author":{"gitId":"tjtanjin"},"content":"        this.CMD_INFO \u003d cmdInfo;"},{"lineNumber":19,"author":{"gitId":"tjtanjin"},"content":"    }"},{"lineNumber":20,"author":{"gitId":"tjtanjin"},"content":""},{"lineNumber":21,"author":{"gitId":"tjtanjin"},"content":"    /**"},{"lineNumber":22,"author":{"gitId":"tjtanjin"},"content":"     * Gets the description of help command, currently unused."},{"lineNumber":23,"author":{"gitId":"tjtanjin"},"content":"     *"},{"lineNumber":24,"author":{"gitId":"tjtanjin"},"content":"     * @return description of help command"},{"lineNumber":25,"author":{"gitId":"tjtanjin"},"content":"     */"},{"lineNumber":26,"author":{"gitId":"tjtanjin"},"content":"    public String getDescription() {"},{"lineNumber":27,"author":{"gitId":"tjtanjin"},"content":"        return this.DESCRIPTION;"},{"lineNumber":28,"author":{"gitId":"tjtanjin"},"content":"    }"},{"lineNumber":29,"author":{"gitId":"tjtanjin"},"content":""},{"lineNumber":30,"author":{"gitId":"tjtanjin"},"content":"    /**"},{"lineNumber":31,"author":{"gitId":"tjtanjin"},"content":"     * Lists out all available command usage and descriptions."},{"lineNumber":32,"author":{"gitId":"tjtanjin"},"content":"     *"},{"lineNumber":33,"author":{"gitId":"tjtanjin"},"content":"     * @return string response after operation is done"},{"lineNumber":34,"author":{"gitId":"tjtanjin"},"content":"     */"},{"lineNumber":35,"author":{"gitId":"tjtanjin"},"content":"    public String execute() {"},{"lineNumber":36,"author":{"gitId":"tjtanjin"},"content":"        StringBuilder str \u003d new StringBuilder(\"Info: The available commands are as listed below:\");"},{"lineNumber":37,"author":{"gitId":"tjtanjin"},"content":"        for (String info : CMD_INFO.values()) {"},{"lineNumber":38,"author":{"gitId":"tjtanjin"},"content":"            str.append(\"\\n\").append(info);"},{"lineNumber":39,"author":{"gitId":"tjtanjin"},"content":"        }"},{"lineNumber":40,"author":{"gitId":"tjtanjin"},"content":"        return str.toString();"},{"lineNumber":41,"author":{"gitId":"tjtanjin"},"content":"    }"},{"lineNumber":42,"author":{"gitId":"tjtanjin"},"content":"}"}],"authorContributionMap":{"tjtanjin":42}},{"path":"src/main/java/com/tjtanjin/steve/commands/ListCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tjtanjin"},"content":"package com.tjtanjin.steve.commands;"},{"lineNumber":2,"author":{"gitId":"tjtanjin"},"content":""},{"lineNumber":3,"author":{"gitId":"tjtanjin"},"content":"import com.tjtanjin.steve.tasks.TaskHandler;"},{"lineNumber":4,"author":{"gitId":"tjtanjin"},"content":""},{"lineNumber":5,"author":{"gitId":"tjtanjin"},"content":"/**"},{"lineNumber":6,"author":{"gitId":"tjtanjin"},"content":" * Entry point for handling logic and execution of list command."},{"lineNumber":7,"author":{"gitId":"tjtanjin"},"content":" */"},{"lineNumber":8,"author":{"gitId":"tjtanjin"},"content":"public class ListCommand {"},{"lineNumber":9,"author":{"gitId":"tjtanjin"},"content":""},{"lineNumber":10,"author":{"gitId":"tjtanjin"},"content":"    private final TaskHandler TASK_HANDLER;"},{"lineNumber":11,"author":{"gitId":"tjtanjin"},"content":"    private final String DESCRIPTION;"},{"lineNumber":12,"author":{"gitId":"tjtanjin"},"content":""},{"lineNumber":13,"author":{"gitId":"tjtanjin"},"content":"    /**"},{"lineNumber":14,"author":{"gitId":"tjtanjin"},"content":"     * Constructor for ListCommand."},{"lineNumber":15,"author":{"gitId":"tjtanjin"},"content":"     *"},{"lineNumber":16,"author":{"gitId":"tjtanjin"},"content":"     * @param taskHandler provides access for command to modify tasks"},{"lineNumber":17,"author":{"gitId":"tjtanjin"},"content":"     */"},{"lineNumber":18,"author":{"gitId":"tjtanjin"},"content":"    public ListCommand(String description, TaskHandler taskHandler) {"},{"lineNumber":19,"author":{"gitId":"tjtanjin"},"content":"        this.DESCRIPTION \u003d description;"},{"lineNumber":20,"author":{"gitId":"tjtanjin"},"content":"        this.TASK_HANDLER \u003d taskHandler;"},{"lineNumber":21,"author":{"gitId":"tjtanjin"},"content":"    }"},{"lineNumber":22,"author":{"gitId":"tjtanjin"},"content":""},{"lineNumber":23,"author":{"gitId":"tjtanjin"},"content":"    /**"},{"lineNumber":24,"author":{"gitId":"tjtanjin"},"content":"     * Gets the description of list command, currently unused."},{"lineNumber":25,"author":{"gitId":"tjtanjin"},"content":"     *"},{"lineNumber":26,"author":{"gitId":"tjtanjin"},"content":"     * @return description of list command"},{"lineNumber":27,"author":{"gitId":"tjtanjin"},"content":"     */"},{"lineNumber":28,"author":{"gitId":"tjtanjin"},"content":"    public String getDescription() {"},{"lineNumber":29,"author":{"gitId":"tjtanjin"},"content":"        return this.DESCRIPTION;"},{"lineNumber":30,"author":{"gitId":"tjtanjin"},"content":"    }"},{"lineNumber":31,"author":{"gitId":"tjtanjin"},"content":""},{"lineNumber":32,"author":{"gitId":"tjtanjin"},"content":"    /**"},{"lineNumber":33,"author":{"gitId":"tjtanjin"},"content":"     * Lists out all tasks entered by user."},{"lineNumber":34,"author":{"gitId":"tjtanjin"},"content":"     *"},{"lineNumber":35,"author":{"gitId":"tjtanjin"},"content":"     * @return string response after operation is done"},{"lineNumber":36,"author":{"gitId":"tjtanjin"},"content":"     */"},{"lineNumber":37,"author":{"gitId":"tjtanjin"},"content":"    public String execute() {"},{"lineNumber":38,"author":{"gitId":"tjtanjin"},"content":"        return TASK_HANDLER.showAllTasks();"},{"lineNumber":39,"author":{"gitId":"tjtanjin"},"content":"    }"},{"lineNumber":40,"author":{"gitId":"tjtanjin"},"content":"}"}],"authorContributionMap":{"tjtanjin":40}},{"path":"src/main/java/com/tjtanjin/steve/commands/TodoCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tjtanjin"},"content":"package com.tjtanjin.steve.commands;"},{"lineNumber":2,"author":{"gitId":"tjtanjin"},"content":""},{"lineNumber":3,"author":{"gitId":"tjtanjin"},"content":"import com.tjtanjin.steve.tasks.TaskHandler;"},{"lineNumber":4,"author":{"gitId":"tjtanjin"},"content":""},{"lineNumber":5,"author":{"gitId":"tjtanjin"},"content":"/**"},{"lineNumber":6,"author":{"gitId":"tjtanjin"},"content":" * Entry point for handling logic and execution of todo command."},{"lineNumber":7,"author":{"gitId":"tjtanjin"},"content":" */"},{"lineNumber":8,"author":{"gitId":"tjtanjin"},"content":"public class TodoCommand {"},{"lineNumber":9,"author":{"gitId":"tjtanjin"},"content":""},{"lineNumber":10,"author":{"gitId":"tjtanjin"},"content":"    private final TaskHandler TASK_HANDLER;"},{"lineNumber":11,"author":{"gitId":"tjtanjin"},"content":"    private final String DESCRIPTION;"},{"lineNumber":12,"author":{"gitId":"tjtanjin"},"content":""},{"lineNumber":13,"author":{"gitId":"tjtanjin"},"content":"    /**"},{"lineNumber":14,"author":{"gitId":"tjtanjin"},"content":"     * Constructor for TodoCommand."},{"lineNumber":15,"author":{"gitId":"tjtanjin"},"content":"     *"},{"lineNumber":16,"author":{"gitId":"tjtanjin"},"content":"     * @param taskHandler provides access for command to modify tasks"},{"lineNumber":17,"author":{"gitId":"tjtanjin"},"content":"     */"},{"lineNumber":18,"author":{"gitId":"tjtanjin"},"content":"    public TodoCommand(String description, TaskHandler taskHandler) {"},{"lineNumber":19,"author":{"gitId":"tjtanjin"},"content":"        this.DESCRIPTION \u003d description;"},{"lineNumber":20,"author":{"gitId":"tjtanjin"},"content":"        this.TASK_HANDLER \u003d taskHandler;"},{"lineNumber":21,"author":{"gitId":"tjtanjin"},"content":"    }"},{"lineNumber":22,"author":{"gitId":"tjtanjin"},"content":""},{"lineNumber":23,"author":{"gitId":"tjtanjin"},"content":"    /**"},{"lineNumber":24,"author":{"gitId":"tjtanjin"},"content":"     * Gets the description of todo command."},{"lineNumber":25,"author":{"gitId":"tjtanjin"},"content":"     *"},{"lineNumber":26,"author":{"gitId":"tjtanjin"},"content":"     * @return description of todo command"},{"lineNumber":27,"author":{"gitId":"tjtanjin"},"content":"     */"},{"lineNumber":28,"author":{"gitId":"tjtanjin"},"content":"    public String getDescription() {"},{"lineNumber":29,"author":{"gitId":"tjtanjin"},"content":"        return this.DESCRIPTION;"},{"lineNumber":30,"author":{"gitId":"tjtanjin"},"content":"    }"},{"lineNumber":31,"author":{"gitId":"tjtanjin"},"content":""},{"lineNumber":32,"author":{"gitId":"tjtanjin"},"content":"    /**"},{"lineNumber":33,"author":{"gitId":"tjtanjin"},"content":"     * Forwards the add todo task operation to TaskHandler."},{"lineNumber":34,"author":{"gitId":"tjtanjin"},"content":"     *"},{"lineNumber":35,"author":{"gitId":"tjtanjin"},"content":"     * @param taskType type of task (todo, deadline or event)"},{"lineNumber":36,"author":{"gitId":"tjtanjin"},"content":"     * @param taskName name of task"},{"lineNumber":37,"author":{"gitId":"tjtanjin"},"content":"     * @return string response after operation is done"},{"lineNumber":38,"author":{"gitId":"tjtanjin"},"content":"     */"},{"lineNumber":39,"author":{"gitId":"tjtanjin"},"content":"    public String execute(String taskType, String taskName) {"},{"lineNumber":40,"author":{"gitId":"tjtanjin"},"content":"        return TASK_HANDLER.addTask(taskType, taskName, null);"},{"lineNumber":41,"author":{"gitId":"tjtanjin"},"content":"    }"},{"lineNumber":42,"author":{"gitId":"tjtanjin"},"content":"}"}],"authorContributionMap":{"tjtanjin":42}},{"path":"src/main/java/com/tjtanjin/steve/parser/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tjtanjin"},"content":"package com.tjtanjin.steve.parser;"},{"lineNumber":2,"author":{"gitId":"tjtanjin"},"content":""},{"lineNumber":3,"author":{"gitId":"tjtanjin"},"content":"import java.time.DateTimeException;"},{"lineNumber":4,"author":{"gitId":"tjtanjin"},"content":"import java.time.LocalDate;"},{"lineNumber":5,"author":{"gitId":"tjtanjin"},"content":""},{"lineNumber":6,"author":{"gitId":"tjtanjin"},"content":"import com.tjtanjin.steve.commands.ByeCommand;"},{"lineNumber":7,"author":{"gitId":"tjtanjin"},"content":"import com.tjtanjin.steve.commands.CommandHandler;"},{"lineNumber":8,"author":{"gitId":"tjtanjin"},"content":"import com.tjtanjin.steve.commands.DeadlineCommand;"},{"lineNumber":9,"author":{"gitId":"tjtanjin"},"content":"import com.tjtanjin.steve.commands.DeleteCommand;"},{"lineNumber":10,"author":{"gitId":"tjtanjin"},"content":"import com.tjtanjin.steve.commands.DoneCommand;"},{"lineNumber":11,"author":{"gitId":"tjtanjin"},"content":"import com.tjtanjin.steve.commands.EventCommand;"},{"lineNumber":12,"author":{"gitId":"tjtanjin"},"content":"import com.tjtanjin.steve.commands.FindCommand;"},{"lineNumber":13,"author":{"gitId":"tjtanjin"},"content":"import com.tjtanjin.steve.commands.HelpCommand;"},{"lineNumber":14,"author":{"gitId":"tjtanjin"},"content":"import com.tjtanjin.steve.commands.ListCommand;"},{"lineNumber":15,"author":{"gitId":"tjtanjin"},"content":"import com.tjtanjin.steve.commands.TodoCommand;"},{"lineNumber":16,"author":{"gitId":"tjtanjin"},"content":""},{"lineNumber":17,"author":{"gitId":"tjtanjin"},"content":"/**"},{"lineNumber":18,"author":{"gitId":"tjtanjin"},"content":" * Parser class parses user input and returns a response. It also deals directly with the CommandHandler"},{"lineNumber":19,"author":{"gitId":"tjtanjin"},"content":" * for command execution."},{"lineNumber":20,"author":{"gitId":"tjtanjin"},"content":" */"},{"lineNumber":21,"author":{"gitId":"tjtanjin"},"content":"public class Parser {"},{"lineNumber":22,"author":{"gitId":"tjtanjin"},"content":""},{"lineNumber":23,"author":{"gitId":"tjtanjin"},"content":"    //tracks all valid commands"},{"lineNumber":24,"author":{"gitId":"tjtanjin"},"content":"    private enum Cmd {"},{"lineNumber":25,"author":{"gitId":"tjtanjin"},"content":"        BYE,"},{"lineNumber":26,"author":{"gitId":"tjtanjin"},"content":"        LIST,"},{"lineNumber":27,"author":{"gitId":"tjtanjin"},"content":"        DONE,"},{"lineNumber":28,"author":{"gitId":"tjtanjin"},"content":"        TODO,"},{"lineNumber":29,"author":{"gitId":"tjtanjin"},"content":"        DEADLINE,"},{"lineNumber":30,"author":{"gitId":"tjtanjin"},"content":"        EVENT,"},{"lineNumber":31,"author":{"gitId":"tjtanjin"},"content":"        DELETE,"},{"lineNumber":32,"author":{"gitId":"tjtanjin"},"content":"        HELP,"},{"lineNumber":33,"author":{"gitId":"tjtanjin"},"content":"        FIND"},{"lineNumber":34,"author":{"gitId":"tjtanjin"},"content":"    }"},{"lineNumber":35,"author":{"gitId":"tjtanjin"},"content":""},{"lineNumber":36,"author":{"gitId":"tjtanjin"},"content":"    //all commands"},{"lineNumber":37,"author":{"gitId":"tjtanjin"},"content":"    private final ByeCommand BYE_COMMAND;"},{"lineNumber":38,"author":{"gitId":"tjtanjin"},"content":"    private final DeadlineCommand DEADLINE_COMMAND;"},{"lineNumber":39,"author":{"gitId":"tjtanjin"},"content":"    private final DeleteCommand DELETE_COMMAND;"},{"lineNumber":40,"author":{"gitId":"tjtanjin"},"content":"    private final DoneCommand DONE_COMMAND;"},{"lineNumber":41,"author":{"gitId":"tjtanjin"},"content":"    private final EventCommand EVENT_COMMAND;"},{"lineNumber":42,"author":{"gitId":"tjtanjin"},"content":"    private final FindCommand FIND_COMMAND;"},{"lineNumber":43,"author":{"gitId":"tjtanjin"},"content":"    private final HelpCommand HELP_COMMAND;"},{"lineNumber":44,"author":{"gitId":"tjtanjin"},"content":"    private final ListCommand LIST_COMMAND;"},{"lineNumber":45,"author":{"gitId":"tjtanjin"},"content":"    private final TodoCommand TODO_COMMAND;"},{"lineNumber":46,"author":{"gitId":"tjtanjin"},"content":""},{"lineNumber":47,"author":{"gitId":"tjtanjin"},"content":"    /**"},{"lineNumber":48,"author":{"gitId":"tjtanjin"},"content":"     * Constructor for Parser class that initialises all valid commands."},{"lineNumber":49,"author":{"gitId":"tjtanjin"},"content":"     */"},{"lineNumber":50,"author":{"gitId":"tjtanjin"},"content":"    public Parser(CommandHandler commandHandler) {"},{"lineNumber":51,"author":{"gitId":"tjtanjin"},"content":"        this.BYE_COMMAND \u003d commandHandler.getByeCommand();"},{"lineNumber":52,"author":{"gitId":"tjtanjin"},"content":"        this.DEADLINE_COMMAND \u003d commandHandler.getDeadlineCommand();"},{"lineNumber":53,"author":{"gitId":"tjtanjin"},"content":"        this.DELETE_COMMAND \u003d commandHandler.getDeleteCommand();"},{"lineNumber":54,"author":{"gitId":"tjtanjin"},"content":"        this.DONE_COMMAND \u003d commandHandler.getDoneCommand();"},{"lineNumber":55,"author":{"gitId":"tjtanjin"},"content":"        this.EVENT_COMMAND \u003d commandHandler.getEventCommand();"},{"lineNumber":56,"author":{"gitId":"tjtanjin"},"content":"        this.FIND_COMMAND \u003d commandHandler.getFindCommand();"},{"lineNumber":57,"author":{"gitId":"tjtanjin"},"content":"        this.HELP_COMMAND \u003d commandHandler.getHelpCommand();"},{"lineNumber":58,"author":{"gitId":"tjtanjin"},"content":"        this.LIST_COMMAND \u003d commandHandler.getListCommand();"},{"lineNumber":59,"author":{"gitId":"tjtanjin"},"content":"        this.TODO_COMMAND \u003d commandHandler.getTodoCommand();"},{"lineNumber":60,"author":{"gitId":"tjtanjin"},"content":"    }"},{"lineNumber":61,"author":{"gitId":"tjtanjin"},"content":""},{"lineNumber":62,"author":{"gitId":"tjtanjin"},"content":"    /**"},{"lineNumber":63,"author":{"gitId":"tjtanjin"},"content":"     * Parses input from user to determine action to take."},{"lineNumber":64,"author":{"gitId":"tjtanjin"},"content":"     *"},{"lineNumber":65,"author":{"gitId":"tjtanjin"},"content":"     * @param input input provided by user"},{"lineNumber":66,"author":{"gitId":"tjtanjin"},"content":"     * @return string response after operation is done"},{"lineNumber":67,"author":{"gitId":"tjtanjin"},"content":"     */"},{"lineNumber":68,"author":{"gitId":"tjtanjin"},"content":"    public String parseInput(String input) {"},{"lineNumber":69,"author":{"gitId":"tjtanjin"},"content":""},{"lineNumber":70,"author":{"gitId":"tjtanjin"},"content":"        String[] parsedInput \u003d input.split(\" \", 2);"},{"lineNumber":71,"author":{"gitId":"tjtanjin"},"content":""},{"lineNumber":72,"author":{"gitId":"tjtanjin"},"content":"        String command \u003d parsedInput[0].toUpperCase();"},{"lineNumber":73,"author":{"gitId":"tjtanjin"},"content":"        if (!isValidCommand(command)) {"},{"lineNumber":74,"author":{"gitId":"tjtanjin"},"content":"            return \"Error: Invalid instruction, type \u0027help\u0027 for more options\";"},{"lineNumber":75,"author":{"gitId":"tjtanjin"},"content":"        }"},{"lineNumber":76,"author":{"gitId":"tjtanjin"},"content":""},{"lineNumber":77,"author":{"gitId":"tjtanjin"},"content":"        try {"},{"lineNumber":78,"author":{"gitId":"tjtanjin"},"content":"            switch (Cmd.valueOf(command)) {"},{"lineNumber":79,"author":{"gitId":"tjtanjin"},"content":"            case BYE:"},{"lineNumber":80,"author":{"gitId":"tjtanjin"},"content":"                return BYE_COMMAND.execute();"},{"lineNumber":81,"author":{"gitId":"tjtanjin"},"content":"            case DEADLINE:"},{"lineNumber":82,"author":{"gitId":"tjtanjin"},"content":"                String deadlineTaskName \u003d parseTaskName(input);"},{"lineNumber":83,"author":{"gitId":"tjtanjin"},"content":"                LocalDate[] deadlineTaskDates \u003d parseTaskDates(input);"},{"lineNumber":84,"author":{"gitId":"tjtanjin"},"content":"                return DEADLINE_COMMAND.execute(command, deadlineTaskName, deadlineTaskDates);"},{"lineNumber":85,"author":{"gitId":"tjtanjin"},"content":"            case DELETE:"},{"lineNumber":86,"author":{"gitId":"tjtanjin"},"content":"                int deleteIndex \u003d parseIndex(\"delete\", input);"},{"lineNumber":87,"author":{"gitId":"tjtanjin"},"content":"                return DELETE_COMMAND.execute(deleteIndex);"},{"lineNumber":88,"author":{"gitId":"tjtanjin"},"content":"            case DONE:"},{"lineNumber":89,"author":{"gitId":"tjtanjin"},"content":"                int doneIndex \u003d parseIndex(\"done\", input);"},{"lineNumber":90,"author":{"gitId":"tjtanjin"},"content":"                return DONE_COMMAND.execute(doneIndex);"},{"lineNumber":91,"author":{"gitId":"tjtanjin"},"content":"            case EVENT:"},{"lineNumber":92,"author":{"gitId":"tjtanjin"},"content":"                String eventTaskName \u003d parseTaskName(input);"},{"lineNumber":93,"author":{"gitId":"tjtanjin"},"content":"                LocalDate[] eventTaskDates \u003d parseTaskDates(input);"},{"lineNumber":94,"author":{"gitId":"tjtanjin"},"content":"                return EVENT_COMMAND.execute(command, eventTaskName, eventTaskDates);"},{"lineNumber":95,"author":{"gitId":"tjtanjin"},"content":"            case FIND:"},{"lineNumber":96,"author":{"gitId":"tjtanjin"},"content":"                String searchTerm \u003d parseTaskName(input);"},{"lineNumber":97,"author":{"gitId":"tjtanjin"},"content":"                return FIND_COMMAND.execute(searchTerm);"},{"lineNumber":98,"author":{"gitId":"tjtanjin"},"content":"            case HELP:"},{"lineNumber":99,"author":{"gitId":"tjtanjin"},"content":"                return HELP_COMMAND.execute();"},{"lineNumber":100,"author":{"gitId":"tjtanjin"},"content":"            case LIST:"},{"lineNumber":101,"author":{"gitId":"tjtanjin"},"content":"                return LIST_COMMAND.execute();"},{"lineNumber":102,"author":{"gitId":"tjtanjin"},"content":"            case TODO:"},{"lineNumber":103,"author":{"gitId":"tjtanjin"},"content":"                String todoTaskName \u003d parseTaskName(input);"},{"lineNumber":104,"author":{"gitId":"tjtanjin"},"content":"                return TODO_COMMAND.execute(command, todoTaskName);"},{"lineNumber":105,"author":{"gitId":"tjtanjin"},"content":"            default:"},{"lineNumber":106,"author":{"gitId":"tjtanjin"},"content":"                return \"Error: Invalid instruction, type \u0027help\u0027 to see the options.\";"},{"lineNumber":107,"author":{"gitId":"tjtanjin"},"content":"            }"},{"lineNumber":108,"author":{"gitId":"tjtanjin"},"content":"        } catch (SteveInvalidFormatException | SteveInvalidParamsException e) {"},{"lineNumber":109,"author":{"gitId":"tjtanjin"},"content":"            return e.getMessage();"},{"lineNumber":110,"author":{"gitId":"tjtanjin"},"content":"        }"},{"lineNumber":111,"author":{"gitId":"tjtanjin"},"content":"    }"},{"lineNumber":112,"author":{"gitId":"tjtanjin"},"content":""},{"lineNumber":113,"author":{"gitId":"tjtanjin"},"content":"    /**"},{"lineNumber":114,"author":{"gitId":"tjtanjin"},"content":"     * Checks if a command provided by user is valid."},{"lineNumber":115,"author":{"gitId":"tjtanjin"},"content":"     *"},{"lineNumber":116,"author":{"gitId":"tjtanjin"},"content":"     * @param command command provided by user"},{"lineNumber":117,"author":{"gitId":"tjtanjin"},"content":"     * @return true if command is valid, false otherwise"},{"lineNumber":118,"author":{"gitId":"tjtanjin"},"content":"     */"},{"lineNumber":119,"author":{"gitId":"tjtanjin"},"content":"    private boolean isValidCommand(String command) {"},{"lineNumber":120,"author":{"gitId":"tjtanjin"},"content":"        Cmd[] cmds \u003d Cmd.values();"},{"lineNumber":121,"author":{"gitId":"tjtanjin"},"content":"        for (Cmd cmd: cmds) {"},{"lineNumber":122,"author":{"gitId":"tjtanjin"},"content":"            if (cmd.name().equals(command)) {"},{"lineNumber":123,"author":{"gitId":"tjtanjin"},"content":"                return true;"},{"lineNumber":124,"author":{"gitId":"tjtanjin"},"content":"            }"},{"lineNumber":125,"author":{"gitId":"tjtanjin"},"content":"        }"},{"lineNumber":126,"author":{"gitId":"tjtanjin"},"content":"        return false;"},{"lineNumber":127,"author":{"gitId":"tjtanjin"},"content":"    }"},{"lineNumber":128,"author":{"gitId":"tjtanjin"},"content":""},{"lineNumber":129,"author":{"gitId":"tjtanjin"},"content":"    /**"},{"lineNumber":130,"author":{"gitId":"tjtanjin"},"content":"     * Parses index from user for done and delete command."},{"lineNumber":131,"author":{"gitId":"tjtanjin"},"content":"     *"},{"lineNumber":132,"author":{"gitId":"tjtanjin"},"content":"     * @param cmd cmd from user (done or delete)"},{"lineNumber":133,"author":{"gitId":"tjtanjin"},"content":"     * @param input input provided by user"},{"lineNumber":134,"author":{"gitId":"tjtanjin"},"content":"     * @return index of task"},{"lineNumber":135,"author":{"gitId":"tjtanjin"},"content":"     */"},{"lineNumber":136,"author":{"gitId":"tjtanjin"},"content":"    private int parseIndex(String cmd, String input)"},{"lineNumber":137,"author":{"gitId":"tjtanjin"},"content":"            throws SteveInvalidFormatException, SteveInvalidParamsException {"},{"lineNumber":138,"author":{"gitId":"tjtanjin"},"content":"        String[] parsedString \u003d input.split(\"\\\\s+\");"},{"lineNumber":139,"author":{"gitId":"tjtanjin"},"content":""},{"lineNumber":140,"author":{"gitId":"tjtanjin"},"content":"        try {"},{"lineNumber":141,"author":{"gitId":"tjtanjin"},"content":"            return Integer.parseInt(parsedString[1]) - 1;"},{"lineNumber":142,"author":{"gitId":"tjtanjin"},"content":"        } catch (IndexOutOfBoundsException e) {"},{"lineNumber":143,"author":{"gitId":"tjtanjin"},"content":"            if (cmd.equals(\"done\")) {"},{"lineNumber":144,"author":{"gitId":"tjtanjin"},"content":"                throw new SteveInvalidFormatException(\"Info: Usage for done: \" + DONE_COMMAND.getDescription());"},{"lineNumber":145,"author":{"gitId":"tjtanjin"},"content":"            } else {"},{"lineNumber":146,"author":{"gitId":"tjtanjin"},"content":"                throw new SteveInvalidFormatException(\"Info: Usage for delete: \" + DELETE_COMMAND.getDescription());"},{"lineNumber":147,"author":{"gitId":"tjtanjin"},"content":"            }"},{"lineNumber":148,"author":{"gitId":"tjtanjin"},"content":"        } catch (NumberFormatException e) {"},{"lineNumber":149,"author":{"gitId":"tjtanjin"},"content":"            if (cmd.equals(\"done\")) {"},{"lineNumber":150,"author":{"gitId":"tjtanjin"},"content":"                throw new SteveInvalidParamsException(\"Info: Index of task to mark as done must be a number!\");"},{"lineNumber":151,"author":{"gitId":"tjtanjin"},"content":"            } else {"},{"lineNumber":152,"author":{"gitId":"tjtanjin"},"content":"                throw new SteveInvalidParamsException(\"Info: Index of task to delete must be a number!\");"},{"lineNumber":153,"author":{"gitId":"tjtanjin"},"content":"            }"},{"lineNumber":154,"author":{"gitId":"tjtanjin"},"content":"        }"},{"lineNumber":155,"author":{"gitId":"tjtanjin"},"content":"    }"},{"lineNumber":156,"author":{"gitId":"tjtanjin"},"content":""},{"lineNumber":157,"author":{"gitId":"tjtanjin"},"content":"    /**"},{"lineNumber":158,"author":{"gitId":"tjtanjin"},"content":"     * Parses task name from user input."},{"lineNumber":159,"author":{"gitId":"tjtanjin"},"content":"     *"},{"lineNumber":160,"author":{"gitId":"tjtanjin"},"content":"     * @param input input provided by user"},{"lineNumber":161,"author":{"gitId":"tjtanjin"},"content":"     * @return name of task"},{"lineNumber":162,"author":{"gitId":"tjtanjin"},"content":"     */"},{"lineNumber":163,"author":{"gitId":"tjtanjin"},"content":"    private String parseTaskName(String input) throws SteveInvalidFormatException {"},{"lineNumber":164,"author":{"gitId":"tjtanjin"},"content":"        String[] parsedString \u003d input.split(\"\\\\s+\", 2);"},{"lineNumber":165,"author":{"gitId":"tjtanjin"},"content":"        String taskType \u003d parsedString[0];"},{"lineNumber":166,"author":{"gitId":"tjtanjin"},"content":"        String taskDetails;"},{"lineNumber":167,"author":{"gitId":"tjtanjin"},"content":"        String taskName;"},{"lineNumber":168,"author":{"gitId":"tjtanjin"},"content":""},{"lineNumber":169,"author":{"gitId":"tjtanjin"},"content":"        try {"},{"lineNumber":170,"author":{"gitId":"tjtanjin"},"content":"            taskDetails \u003d parsedString[1];"},{"lineNumber":171,"author":{"gitId":"tjtanjin"},"content":"            if (taskType.toUpperCase().equals(Cmd.TODO.toString())) {"},{"lineNumber":172,"author":{"gitId":"tjtanjin"},"content":"                taskName \u003d taskDetails.trim();"},{"lineNumber":173,"author":{"gitId":"tjtanjin"},"content":"            } else if (taskType.toUpperCase().equals(Cmd.DEADLINE.toString())) {"},{"lineNumber":174,"author":{"gitId":"tjtanjin"},"content":"                taskName \u003d taskDetails.split(\"/by\", 2)[0].trim();"},{"lineNumber":175,"author":{"gitId":"tjtanjin"},"content":"            } else if (taskType.toUpperCase().equals(Cmd.EVENT.toString())) {"},{"lineNumber":176,"author":{"gitId":"tjtanjin"},"content":"                taskName \u003d taskDetails.split(\"/from\", 2)[0].trim();"},{"lineNumber":177,"author":{"gitId":"tjtanjin"},"content":"            } else {"},{"lineNumber":178,"author":{"gitId":"tjtanjin"},"content":"                taskName \u003d parsedString[1];"},{"lineNumber":179,"author":{"gitId":"tjtanjin"},"content":"            }"},{"lineNumber":180,"author":{"gitId":"tjtanjin"},"content":"            return taskName;"},{"lineNumber":181,"author":{"gitId":"tjtanjin"},"content":"        } catch (IndexOutOfBoundsException e) {"},{"lineNumber":182,"author":{"gitId":"tjtanjin"},"content":"            if (taskType.equalsIgnoreCase(\"TODO\")) {"},{"lineNumber":183,"author":{"gitId":"tjtanjin"},"content":"                throw new SteveInvalidFormatException(\"Info: Usage for todo: \""},{"lineNumber":184,"author":{"gitId":"tjtanjin"},"content":"                        + TODO_COMMAND.getDescription());"},{"lineNumber":185,"author":{"gitId":"tjtanjin"},"content":"            } else if (taskType.equalsIgnoreCase(\"DEADLINE\")) {"},{"lineNumber":186,"author":{"gitId":"tjtanjin"},"content":"                throw new SteveInvalidFormatException(\"Info: Usage for deadline: \""},{"lineNumber":187,"author":{"gitId":"tjtanjin"},"content":"                        + DEADLINE_COMMAND.getDescription());"},{"lineNumber":188,"author":{"gitId":"tjtanjin"},"content":"            } else if (taskType.equalsIgnoreCase(\"EVENT\")) {"},{"lineNumber":189,"author":{"gitId":"tjtanjin"},"content":"                throw new SteveInvalidFormatException(\"Info: Usage for event: \""},{"lineNumber":190,"author":{"gitId":"tjtanjin"},"content":"                        + EVENT_COMMAND.getDescription());"},{"lineNumber":191,"author":{"gitId":"tjtanjin"},"content":"            } else {"},{"lineNumber":192,"author":{"gitId":"tjtanjin"},"content":"                throw new SteveInvalidFormatException(\"Info: Usage for find: \""},{"lineNumber":193,"author":{"gitId":"tjtanjin"},"content":"                        + FIND_COMMAND.getDescription());"},{"lineNumber":194,"author":{"gitId":"tjtanjin"},"content":"            }"},{"lineNumber":195,"author":{"gitId":"tjtanjin"},"content":"        }"},{"lineNumber":196,"author":{"gitId":"tjtanjin"},"content":"    }"},{"lineNumber":197,"author":{"gitId":"tjtanjin"},"content":""},{"lineNumber":198,"author":{"gitId":"tjtanjin"},"content":"    /**"},{"lineNumber":199,"author":{"gitId":"tjtanjin"},"content":"     * Parses task due date from user input."},{"lineNumber":200,"author":{"gitId":"tjtanjin"},"content":"     *"},{"lineNumber":201,"author":{"gitId":"tjtanjin"},"content":"     * @param input input provided by user"},{"lineNumber":202,"author":{"gitId":"tjtanjin"},"content":"     * @return array of dates for task"},{"lineNumber":203,"author":{"gitId":"tjtanjin"},"content":"     */"},{"lineNumber":204,"author":{"gitId":"tjtanjin"},"content":"    private LocalDate[] parseTaskDates(String input) throws SteveInvalidFormatException {"},{"lineNumber":205,"author":{"gitId":"tjtanjin"},"content":"        String[] parsedString \u003d input.split(\"\\\\s+\", 2);"},{"lineNumber":206,"author":{"gitId":"tjtanjin"},"content":"        String taskType \u003d parsedString[0];"},{"lineNumber":207,"author":{"gitId":"tjtanjin"},"content":"        String taskDetails \u003d parsedString[1];"},{"lineNumber":208,"author":{"gitId":"tjtanjin"},"content":"        LocalDate[] taskDates \u003d new LocalDate[2];"},{"lineNumber":209,"author":{"gitId":"tjtanjin"},"content":""},{"lineNumber":210,"author":{"gitId":"tjtanjin"},"content":"        try {"},{"lineNumber":211,"author":{"gitId":"tjtanjin"},"content":"            if (taskType.toUpperCase().equals(Cmd.DEADLINE.toString())) {"},{"lineNumber":212,"author":{"gitId":"tjtanjin"},"content":"                taskDates[0] \u003d LocalDate.parse(taskDetails.split(\"/by\", 2)[1].trim());"},{"lineNumber":213,"author":{"gitId":"tjtanjin"},"content":"            } else if (taskType.toUpperCase().equals(Cmd.EVENT.toString())) {"},{"lineNumber":214,"author":{"gitId":"tjtanjin"},"content":"                String[] startEndDates \u003d taskDetails.split(\"/from\", 2)[1].split(\"/to\", 2);"},{"lineNumber":215,"author":{"gitId":"tjtanjin"},"content":"                taskDates[0] \u003d LocalDate.parse(startEndDates[0].trim());"},{"lineNumber":216,"author":{"gitId":"tjtanjin"},"content":"                taskDates[1] \u003d LocalDate.parse(startEndDates[1].trim());"},{"lineNumber":217,"author":{"gitId":"tjtanjin"},"content":"            }"},{"lineNumber":218,"author":{"gitId":"tjtanjin"},"content":"        } catch (IndexOutOfBoundsException | NullPointerException | DateTimeException e) {"},{"lineNumber":219,"author":{"gitId":"tjtanjin"},"content":"            if (taskType.equalsIgnoreCase(Cmd.DEADLINE.toString())) {"},{"lineNumber":220,"author":{"gitId":"tjtanjin"},"content":"                throw new SteveInvalidFormatException(\"Error: Invalid date specified, \""},{"lineNumber":221,"author":{"gitId":"tjtanjin"},"content":"                        + \"please adhere to the format: /by YYYY-MM-DD\");"},{"lineNumber":222,"author":{"gitId":"tjtanjin"},"content":"            } else {"},{"lineNumber":223,"author":{"gitId":"tjtanjin"},"content":"                throw new SteveInvalidFormatException(\"Error: Invalid date specified, \""},{"lineNumber":224,"author":{"gitId":"tjtanjin"},"content":"                        + \"please adhere to the format: /from YYYY-MM-DD /to YYYY-MM-DD\");"},{"lineNumber":225,"author":{"gitId":"tjtanjin"},"content":"            }"},{"lineNumber":226,"author":{"gitId":"tjtanjin"},"content":"        }"},{"lineNumber":227,"author":{"gitId":"tjtanjin"},"content":"        return taskDates;"},{"lineNumber":228,"author":{"gitId":"tjtanjin"},"content":"    }"},{"lineNumber":229,"author":{"gitId":"tjtanjin"},"content":"}"}],"authorContributionMap":{"tjtanjin":229}},{"path":"src/main/java/com/tjtanjin/steve/parser/SteveInvalidFormatException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tjtanjin"},"content":"package com.tjtanjin.steve.parser;"},{"lineNumber":2,"author":{"gitId":"tjtanjin"},"content":""},{"lineNumber":3,"author":{"gitId":"tjtanjin"},"content":"/**"},{"lineNumber":4,"author":{"gitId":"tjtanjin"},"content":" * Class for custom exception handling of invalid input format."},{"lineNumber":5,"author":{"gitId":"tjtanjin"},"content":" */"},{"lineNumber":6,"author":{"gitId":"tjtanjin"},"content":"public class SteveInvalidFormatException extends Exception {"},{"lineNumber":7,"author":{"gitId":"tjtanjin"},"content":""},{"lineNumber":8,"author":{"gitId":"tjtanjin"},"content":"    /**"},{"lineNumber":9,"author":{"gitId":"tjtanjin"},"content":"     * Constructor for SteveInvalidFormatException class for custom exceptions"},{"lineNumber":10,"author":{"gitId":"tjtanjin"},"content":"     * of invalid input format."},{"lineNumber":11,"author":{"gitId":"tjtanjin"},"content":"     *"},{"lineNumber":12,"author":{"gitId":"tjtanjin"},"content":"     * @param errMsg error message"},{"lineNumber":13,"author":{"gitId":"tjtanjin"},"content":"     */"},{"lineNumber":14,"author":{"gitId":"tjtanjin"},"content":"    public SteveInvalidFormatException(String errMsg) {"},{"lineNumber":15,"author":{"gitId":"tjtanjin"},"content":"        super(errMsg);"},{"lineNumber":16,"author":{"gitId":"tjtanjin"},"content":"    }"},{"lineNumber":17,"author":{"gitId":"tjtanjin"},"content":"}"}],"authorContributionMap":{"tjtanjin":17}},{"path":"src/main/java/com/tjtanjin/steve/parser/SteveInvalidParamsException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tjtanjin"},"content":"package com.tjtanjin.steve.parser;"},{"lineNumber":2,"author":{"gitId":"tjtanjin"},"content":""},{"lineNumber":3,"author":{"gitId":"tjtanjin"},"content":"/**"},{"lineNumber":4,"author":{"gitId":"tjtanjin"},"content":" * Class for custom exception handling of invalid params format."},{"lineNumber":5,"author":{"gitId":"tjtanjin"},"content":" */"},{"lineNumber":6,"author":{"gitId":"tjtanjin"},"content":"public class SteveInvalidParamsException extends Exception {"},{"lineNumber":7,"author":{"gitId":"tjtanjin"},"content":""},{"lineNumber":8,"author":{"gitId":"tjtanjin"},"content":"    /**"},{"lineNumber":9,"author":{"gitId":"tjtanjin"},"content":"     * Constructor for SteveInvalidParamsException class for custom exceptions"},{"lineNumber":10,"author":{"gitId":"tjtanjin"},"content":"     * of invalid params format."},{"lineNumber":11,"author":{"gitId":"tjtanjin"},"content":"     *"},{"lineNumber":12,"author":{"gitId":"tjtanjin"},"content":"     * @param errMsg error message"},{"lineNumber":13,"author":{"gitId":"tjtanjin"},"content":"     */"},{"lineNumber":14,"author":{"gitId":"tjtanjin"},"content":"    public SteveInvalidParamsException(String errMsg) {"},{"lineNumber":15,"author":{"gitId":"tjtanjin"},"content":"        super(errMsg);"},{"lineNumber":16,"author":{"gitId":"tjtanjin"},"content":"    }"},{"lineNumber":17,"author":{"gitId":"tjtanjin"},"content":"}"}],"authorContributionMap":{"tjtanjin":17}},{"path":"src/main/java/com/tjtanjin/steve/storage/StorageHandler.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tjtanjin"},"content":"package com.tjtanjin.steve.storage;"},{"lineNumber":2,"author":{"gitId":"tjtanjin"},"content":""},{"lineNumber":3,"author":{"gitId":"tjtanjin"},"content":"import java.io.File;"},{"lineNumber":4,"author":{"gitId":"tjtanjin"},"content":"import java.io.FileReader;"},{"lineNumber":5,"author":{"gitId":"tjtanjin"},"content":"import java.io.FileWriter;"},{"lineNumber":6,"author":{"gitId":"tjtanjin"},"content":"import java.io.IOException;"},{"lineNumber":7,"author":{"gitId":"tjtanjin"},"content":"import java.time.LocalDate;"},{"lineNumber":8,"author":{"gitId":"tjtanjin"},"content":"import java.time.format.DateTimeFormatter;"},{"lineNumber":9,"author":{"gitId":"tjtanjin"},"content":"import java.util.ArrayList;"},{"lineNumber":10,"author":{"gitId":"tjtanjin"},"content":""},{"lineNumber":11,"author":{"gitId":"tjtanjin"},"content":"import org.json.simple.JSONArray;"},{"lineNumber":12,"author":{"gitId":"tjtanjin"},"content":"import org.json.simple.JSONObject;"},{"lineNumber":13,"author":{"gitId":"tjtanjin"},"content":"import org.json.simple.parser.JSONParser;"},{"lineNumber":14,"author":{"gitId":"tjtanjin"},"content":"import org.json.simple.parser.ParseException;"},{"lineNumber":15,"author":{"gitId":"tjtanjin"},"content":""},{"lineNumber":16,"author":{"gitId":"tjtanjin"},"content":"import com.tjtanjin.steve.tasks.Deadline;"},{"lineNumber":17,"author":{"gitId":"tjtanjin"},"content":"import com.tjtanjin.steve.tasks.Event;"},{"lineNumber":18,"author":{"gitId":"tjtanjin"},"content":"import com.tjtanjin.steve.tasks.Task;"},{"lineNumber":19,"author":{"gitId":"tjtanjin"},"content":"import com.tjtanjin.steve.tasks.ToDo;"},{"lineNumber":20,"author":{"gitId":"tjtanjin"},"content":"import com.tjtanjin.steve.ui.UiHandler;"},{"lineNumber":21,"author":{"gitId":"tjtanjin"},"content":""},{"lineNumber":22,"author":{"gitId":"tjtanjin"},"content":"/**"},{"lineNumber":23,"author":{"gitId":"tjtanjin"},"content":" * StorageHandler manages the saving/loading of tasks from hard disk and is managed through the"},{"lineNumber":24,"author":{"gitId":"tjtanjin"},"content":" * TaskHandler."},{"lineNumber":25,"author":{"gitId":"tjtanjin"},"content":" */"},{"lineNumber":26,"author":{"gitId":"tjtanjin"},"content":"public class StorageHandler {"},{"lineNumber":27,"author":{"gitId":"tjtanjin"},"content":""},{"lineNumber":28,"author":{"gitId":"tjtanjin"},"content":"    private final ArrayList\u003cTask\u003e TASKS \u003d new ArrayList\u003c\u003e();"},{"lineNumber":29,"author":{"gitId":"tjtanjin"},"content":"    private final String PATH;"},{"lineNumber":30,"author":{"gitId":"tjtanjin"},"content":"    private JSONArray taskList \u003d new JSONArray();"},{"lineNumber":31,"author":{"gitId":"tjtanjin"},"content":""},{"lineNumber":32,"author":{"gitId":"tjtanjin"},"content":"    /**"},{"lineNumber":33,"author":{"gitId":"tjtanjin"},"content":"     * Constructor for StorageHandler."},{"lineNumber":34,"author":{"gitId":"tjtanjin"},"content":"     *"},{"lineNumber":35,"author":{"gitId":"tjtanjin"},"content":"     * @param path path to look for or create storage file"},{"lineNumber":36,"author":{"gitId":"tjtanjin"},"content":"     */"},{"lineNumber":37,"author":{"gitId":"tjtanjin"},"content":"    public StorageHandler(String path) {"},{"lineNumber":38,"author":{"gitId":"tjtanjin"},"content":"        this.PATH \u003d path;"},{"lineNumber":39,"author":{"gitId":"tjtanjin"},"content":"    }"},{"lineNumber":40,"author":{"gitId":"tjtanjin"},"content":""},{"lineNumber":41,"author":{"gitId":"tjtanjin"},"content":"    //solution below adapted from https://howtodoinjava.com/java/library/json-simple-read-write-json-examples/"},{"lineNumber":42,"author":{"gitId":"tjtanjin"},"content":"    /**"},{"lineNumber":43,"author":{"gitId":"tjtanjin"},"content":"     * Loads saved tasks from hard disk."},{"lineNumber":44,"author":{"gitId":"tjtanjin"},"content":"     *"},{"lineNumber":45,"author":{"gitId":"tjtanjin"},"content":"     * @return array list of tasks"},{"lineNumber":46,"author":{"gitId":"tjtanjin"},"content":"     */"},{"lineNumber":47,"author":{"gitId":"tjtanjin"},"content":"    @SuppressWarnings(\"unchecked\")"},{"lineNumber":48,"author":{"gitId":"tjtanjin"},"content":"    public ArrayList\u003cTask\u003e loadTasks() {"},{"lineNumber":49,"author":{"gitId":"tjtanjin"},"content":""},{"lineNumber":50,"author":{"gitId":"tjtanjin"},"content":"        File tasksFile \u003d new File(this.PATH);"},{"lineNumber":51,"author":{"gitId":"tjtanjin"},"content":"        try {"},{"lineNumber":52,"author":{"gitId":"tjtanjin"},"content":"            tasksFile.getParentFile().mkdirs();"},{"lineNumber":53,"author":{"gitId":"tjtanjin"},"content":"            tasksFile.createNewFile();"},{"lineNumber":54,"author":{"gitId":"tjtanjin"},"content":"        } catch (IOException e) {"},{"lineNumber":55,"author":{"gitId":"tjtanjin"},"content":"            //special case of directly accessing controller due to critical error"},{"lineNumber":56,"author":{"gitId":"tjtanjin"},"content":"            UiHandler.getFxmlLoader().\u003cUiHandler\u003egetController().showResponse(\"Terminated: Steve has no permission\""},{"lineNumber":57,"author":{"gitId":"tjtanjin"},"content":"                    + \"to create storage file. Please check and restart the application.\");"},{"lineNumber":58,"author":{"gitId":"tjtanjin"},"content":"        }"},{"lineNumber":59,"author":{"gitId":"tjtanjin"},"content":""},{"lineNumber":60,"author":{"gitId":"tjtanjin"},"content":"        //JSON parser object to parse read file"},{"lineNumber":61,"author":{"gitId":"tjtanjin"},"content":"        JSONParser jsonParser \u003d new JSONParser();"},{"lineNumber":62,"author":{"gitId":"tjtanjin"},"content":""},{"lineNumber":63,"author":{"gitId":"tjtanjin"},"content":"        try (FileReader reader \u003d new FileReader(this.PATH)) {"},{"lineNumber":64,"author":{"gitId":"tjtanjin"},"content":"            //read JSON file"},{"lineNumber":65,"author":{"gitId":"tjtanjin"},"content":"            Object obj \u003d jsonParser.parse(reader);"},{"lineNumber":66,"author":{"gitId":"tjtanjin"},"content":""},{"lineNumber":67,"author":{"gitId":"tjtanjin"},"content":"            taskList \u003d (JSONArray) obj;"},{"lineNumber":68,"author":{"gitId":"tjtanjin"},"content":""},{"lineNumber":69,"author":{"gitId":"tjtanjin"},"content":"            //load each task"},{"lineNumber":70,"author":{"gitId":"tjtanjin"},"content":"            taskList.forEach(emp -\u003e parseTaskGroup((JSONObject) emp));"},{"lineNumber":71,"author":{"gitId":"tjtanjin"},"content":"        } catch (IOException | ParseException e) {"},{"lineNumber":72,"author":{"gitId":"tjtanjin"},"content":"            //do nothing, empty file is ok just means nothing to load"},{"lineNumber":73,"author":{"gitId":"tjtanjin"},"content":"        }"},{"lineNumber":74,"author":{"gitId":"tjtanjin"},"content":"        return TASKS;"},{"lineNumber":75,"author":{"gitId":"tjtanjin"},"content":"    }"},{"lineNumber":76,"author":{"gitId":"tjtanjin"},"content":""},{"lineNumber":77,"author":{"gitId":"tjtanjin"},"content":"    /**"},{"lineNumber":78,"author":{"gitId":"tjtanjin"},"content":"     * Retrieves individual task information and repopulate them into taskList."},{"lineNumber":79,"author":{"gitId":"tjtanjin"},"content":"     *"},{"lineNumber":80,"author":{"gitId":"tjtanjin"},"content":"     * @param task task to retrieve information for"},{"lineNumber":81,"author":{"gitId":"tjtanjin"},"content":"     */"},{"lineNumber":82,"author":{"gitId":"tjtanjin"},"content":"    private void parseTaskGroup(JSONObject task) {"},{"lineNumber":83,"author":{"gitId":"tjtanjin"},"content":"        JSONObject taskDetails \u003d (JSONObject) task.get(\"task\");"},{"lineNumber":84,"author":{"gitId":"tjtanjin"},"content":""},{"lineNumber":85,"author":{"gitId":"tjtanjin"},"content":"        String taskName \u003d (String) taskDetails.get(\"taskName\");"},{"lineNumber":86,"author":{"gitId":"tjtanjin"},"content":""},{"lineNumber":87,"author":{"gitId":"tjtanjin"},"content":"        String status \u003d (String) taskDetails.get(\"status\");"},{"lineNumber":88,"author":{"gitId":"tjtanjin"},"content":""},{"lineNumber":89,"author":{"gitId":"tjtanjin"},"content":"        String type \u003d (String) taskDetails.get(\"type\");"},{"lineNumber":90,"author":{"gitId":"tjtanjin"},"content":""},{"lineNumber":91,"author":{"gitId":"tjtanjin"},"content":"        if (type.equals(\"TODO\")) {"},{"lineNumber":92,"author":{"gitId":"tjtanjin"},"content":"            TASKS.add(new ToDo(taskName, status));"},{"lineNumber":93,"author":{"gitId":"tjtanjin"},"content":"        } else if (type.equals(\"DEADLINE\")) {"},{"lineNumber":94,"author":{"gitId":"tjtanjin"},"content":"            String endDate \u003d (String) taskDetails.get(\"endDate\");"},{"lineNumber":95,"author":{"gitId":"tjtanjin"},"content":"            LocalDate[] taskDates \u003d new LocalDate[1];"},{"lineNumber":96,"author":{"gitId":"tjtanjin"},"content":"            taskDates[0] \u003d LocalDate.parse(endDate);"},{"lineNumber":97,"author":{"gitId":"tjtanjin"},"content":"            TASKS.add(new Deadline(taskName, status, taskDates));"},{"lineNumber":98,"author":{"gitId":"tjtanjin"},"content":"        } else {"},{"lineNumber":99,"author":{"gitId":"tjtanjin"},"content":"            String startDate \u003d (String) taskDetails.get(\"startDate\");"},{"lineNumber":100,"author":{"gitId":"tjtanjin"},"content":"            String endDate \u003d (String) taskDetails.get(\"endDate\");"},{"lineNumber":101,"author":{"gitId":"tjtanjin"},"content":"            LocalDate[] taskDates \u003d new LocalDate[2];"},{"lineNumber":102,"author":{"gitId":"tjtanjin"},"content":"            taskDates[0] \u003d LocalDate.parse(startDate);"},{"lineNumber":103,"author":{"gitId":"tjtanjin"},"content":"            taskDates[1] \u003d LocalDate.parse(endDate);"},{"lineNumber":104,"author":{"gitId":"tjtanjin"},"content":"            TASKS.add(new Event(taskName, status, taskDates));"},{"lineNumber":105,"author":{"gitId":"tjtanjin"},"content":"        }"},{"lineNumber":106,"author":{"gitId":"tjtanjin"},"content":"    }"},{"lineNumber":107,"author":{"gitId":"tjtanjin"},"content":""},{"lineNumber":108,"author":{"gitId":"tjtanjin"},"content":"    //solution below adapted from https://howtodoinjava.com/java/library/json-simple-read-write-json-examples/"},{"lineNumber":109,"author":{"gitId":"tjtanjin"},"content":"    /**"},{"lineNumber":110,"author":{"gitId":"tjtanjin"},"content":"     * Saves task into hard disk."},{"lineNumber":111,"author":{"gitId":"tjtanjin"},"content":"     *"},{"lineNumber":112,"author":{"gitId":"tjtanjin"},"content":"     * @param index index of task being saved"},{"lineNumber":113,"author":{"gitId":"tjtanjin"},"content":"     * @param saveType type of save operation (new task, modify existing task or deleting task)"},{"lineNumber":114,"author":{"gitId":"tjtanjin"},"content":"     * @param taskName name of task"},{"lineNumber":115,"author":{"gitId":"tjtanjin"},"content":"     * @param status status of task (incomplete or complete)"},{"lineNumber":116,"author":{"gitId":"tjtanjin"},"content":"     * @param type type of task (todo, deadline or event)"},{"lineNumber":117,"author":{"gitId":"tjtanjin"},"content":"     * @param taskDates array of dates (defaults to first element for deadline end date)"},{"lineNumber":118,"author":{"gitId":"tjtanjin"},"content":"     * @return true if saving task was successful, false otherwise"},{"lineNumber":119,"author":{"gitId":"tjtanjin"},"content":"     */"},{"lineNumber":120,"author":{"gitId":"tjtanjin"},"content":"    @SuppressWarnings(\"unchecked\")"},{"lineNumber":121,"author":{"gitId":"tjtanjin"},"content":"    public boolean saveTask(int index, String saveType, String taskName,"},{"lineNumber":122,"author":{"gitId":"tjtanjin"},"content":"            String status, String type, LocalDate[] taskDates) {"},{"lineNumber":123,"author":{"gitId":"tjtanjin"},"content":""},{"lineNumber":124,"author":{"gitId":"tjtanjin"},"content":"        JSONObject taskDetails \u003d new JSONObject();"},{"lineNumber":125,"author":{"gitId":"tjtanjin"},"content":"        taskDetails.put(\"taskName\", taskName);"},{"lineNumber":126,"author":{"gitId":"tjtanjin"},"content":"        taskDetails.put(\"status\", status);"},{"lineNumber":127,"author":{"gitId":"tjtanjin"},"content":"        taskDetails.put(\"type\", type);"},{"lineNumber":128,"author":{"gitId":"tjtanjin"},"content":""},{"lineNumber":129,"author":{"gitId":"tjtanjin"},"content":"        //convert datetime to string"},{"lineNumber":130,"author":{"gitId":"tjtanjin"},"content":"        if (taskDates !\u003d null) {"},{"lineNumber":131,"author":{"gitId":"tjtanjin"},"content":"            if (type.equals(\"DEADLINE\")) {"},{"lineNumber":132,"author":{"gitId":"tjtanjin"},"content":"                String dueDateStr \u003d taskDates[0].format(DateTimeFormatter.ofPattern(\"yyyy-MM-dd\"));"},{"lineNumber":133,"author":{"gitId":"tjtanjin"},"content":"                taskDetails.put(\"endDate\", dueDateStr);"},{"lineNumber":134,"author":{"gitId":"tjtanjin"},"content":"            } else if (type.equals(\"EVENT\")) {"},{"lineNumber":135,"author":{"gitId":"tjtanjin"},"content":"                String startDateStr \u003d taskDates[0].format(DateTimeFormatter.ofPattern(\"yyyy-MM-dd\"));"},{"lineNumber":136,"author":{"gitId":"tjtanjin"},"content":"                String endDateStr \u003d taskDates[1].format(DateTimeFormatter.ofPattern(\"yyyy-MM-dd\"));"},{"lineNumber":137,"author":{"gitId":"tjtanjin"},"content":"                taskDetails.put(\"startDate\", startDateStr);"},{"lineNumber":138,"author":{"gitId":"tjtanjin"},"content":"                taskDetails.put(\"endDate\", endDateStr);"},{"lineNumber":139,"author":{"gitId":"tjtanjin"},"content":"            }"},{"lineNumber":140,"author":{"gitId":"tjtanjin"},"content":"        }"},{"lineNumber":141,"author":{"gitId":"tjtanjin"},"content":""},{"lineNumber":142,"author":{"gitId":"tjtanjin"},"content":"        JSONObject taskGroup \u003d new JSONObject();"},{"lineNumber":143,"author":{"gitId":"tjtanjin"},"content":"        taskGroup.put(\"task\", taskDetails);"},{"lineNumber":144,"author":{"gitId":"tjtanjin"},"content":""},{"lineNumber":145,"author":{"gitId":"tjtanjin"},"content":"        //add or update or delete task"},{"lineNumber":146,"author":{"gitId":"tjtanjin"},"content":"        if (saveType.equals(\"NEW\")) {"},{"lineNumber":147,"author":{"gitId":"tjtanjin"},"content":"            taskList.add(taskGroup);"},{"lineNumber":148,"author":{"gitId":"tjtanjin"},"content":"        } else if (saveType.equals(\"DONE\")) {"},{"lineNumber":149,"author":{"gitId":"tjtanjin"},"content":"            taskList.set(index, taskGroup);"},{"lineNumber":150,"author":{"gitId":"tjtanjin"},"content":"        } else {"},{"lineNumber":151,"author":{"gitId":"tjtanjin"},"content":"            taskList.remove(index);"},{"lineNumber":152,"author":{"gitId":"tjtanjin"},"content":"        }"},{"lineNumber":153,"author":{"gitId":"tjtanjin"},"content":""},{"lineNumber":154,"author":{"gitId":"tjtanjin"},"content":"        //write JSON file"},{"lineNumber":155,"author":{"gitId":"tjtanjin"},"content":"        try (FileWriter file \u003d new FileWriter(this.PATH)) {"},{"lineNumber":156,"author":{"gitId":"tjtanjin"},"content":""},{"lineNumber":157,"author":{"gitId":"tjtanjin"},"content":"            file.write(taskList.toJSONString());"},{"lineNumber":158,"author":{"gitId":"tjtanjin"},"content":"            file.flush();"},{"lineNumber":159,"author":{"gitId":"tjtanjin"},"content":"            return true;"},{"lineNumber":160,"author":{"gitId":"tjtanjin"},"content":""},{"lineNumber":161,"author":{"gitId":"tjtanjin"},"content":"        } catch (IOException e) {"},{"lineNumber":162,"author":{"gitId":"tjtanjin"},"content":"            return false;"},{"lineNumber":163,"author":{"gitId":"tjtanjin"},"content":"        }"},{"lineNumber":164,"author":{"gitId":"tjtanjin"},"content":"    }"},{"lineNumber":165,"author":{"gitId":"tjtanjin"},"content":"}"}],"authorContributionMap":{"tjtanjin":165}},{"path":"src/main/java/com/tjtanjin/steve/tasks/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tjtanjin"},"content":"package com.tjtanjin.steve.tasks;"},{"lineNumber":2,"author":{"gitId":"tjtanjin"},"content":""},{"lineNumber":3,"author":{"gitId":"tjtanjin"},"content":"import java.time.LocalDate;"},{"lineNumber":4,"author":{"gitId":"tjtanjin"},"content":"import java.time.format.DateTimeFormatter;"},{"lineNumber":5,"author":{"gitId":"tjtanjin"},"content":""},{"lineNumber":6,"author":{"gitId":"tjtanjin"},"content":"/**"},{"lineNumber":7,"author":{"gitId":"tjtanjin"},"content":" * Deadline is a child class of Task, containing additional"},{"lineNumber":8,"author":{"gitId":"tjtanjin"},"content":" * support for an endDate."},{"lineNumber":9,"author":{"gitId":"tjtanjin"},"content":" */"},{"lineNumber":10,"author":{"gitId":"tjtanjin"},"content":"public class Deadline extends Task {"},{"lineNumber":11,"author":{"gitId":"tjtanjin"},"content":"    private final LocalDate END_DATE;"},{"lineNumber":12,"author":{"gitId":"tjtanjin"},"content":""},{"lineNumber":13,"author":{"gitId":"tjtanjin"},"content":"    /**"},{"lineNumber":14,"author":{"gitId":"tjtanjin"},"content":"     * Constructor for Deadline class."},{"lineNumber":15,"author":{"gitId":"tjtanjin"},"content":"     *"},{"lineNumber":16,"author":{"gitId":"tjtanjin"},"content":"     * @param taskName name of task"},{"lineNumber":17,"author":{"gitId":"tjtanjin"},"content":"     * @param status task completion status"},{"lineNumber":18,"author":{"gitId":"tjtanjin"},"content":"     * @param taskDates array of dates (defaults to first element for deadline end date)"},{"lineNumber":19,"author":{"gitId":"tjtanjin"},"content":"     */"},{"lineNumber":20,"author":{"gitId":"tjtanjin"},"content":"    public Deadline(String taskName, String status, LocalDate[] taskDates) {"},{"lineNumber":21,"author":{"gitId":"tjtanjin"},"content":"        super(taskName, status, \"DEADLINE\");"},{"lineNumber":22,"author":{"gitId":"tjtanjin"},"content":"        this.END_DATE \u003d taskDates[0];"},{"lineNumber":23,"author":{"gitId":"tjtanjin"},"content":"    }"},{"lineNumber":24,"author":{"gitId":"tjtanjin"},"content":""},{"lineNumber":25,"author":{"gitId":"tjtanjin"},"content":"    /**"},{"lineNumber":26,"author":{"gitId":"tjtanjin"},"content":"     * Gets array of due dates, only 1 element for Deadline class."},{"lineNumber":27,"author":{"gitId":"tjtanjin"},"content":"     *"},{"lineNumber":28,"author":{"gitId":"tjtanjin"},"content":"     * @return array of due dates with 1 element"},{"lineNumber":29,"author":{"gitId":"tjtanjin"},"content":"     */"},{"lineNumber":30,"author":{"gitId":"tjtanjin"},"content":"    @Override"},{"lineNumber":31,"author":{"gitId":"tjtanjin"},"content":"    public LocalDate[] getDates() {"},{"lineNumber":32,"author":{"gitId":"tjtanjin"},"content":"        LocalDate[] taskDates \u003d new LocalDate[1];"},{"lineNumber":33,"author":{"gitId":"tjtanjin"},"content":"        taskDates[0] \u003d this.END_DATE;"},{"lineNumber":34,"author":{"gitId":"tjtanjin"},"content":"        return taskDates;"},{"lineNumber":35,"author":{"gitId":"tjtanjin"},"content":"    }"},{"lineNumber":36,"author":{"gitId":"tjtanjin"},"content":""},{"lineNumber":37,"author":{"gitId":"tjtanjin"},"content":"    /**"},{"lineNumber":38,"author":{"gitId":"tjtanjin"},"content":"     * Gets the string describing deadline."},{"lineNumber":39,"author":{"gitId":"tjtanjin"},"content":"     *"},{"lineNumber":40,"author":{"gitId":"tjtanjin"},"content":"     * @return String describing deadline"},{"lineNumber":41,"author":{"gitId":"tjtanjin"},"content":"     */"},{"lineNumber":42,"author":{"gitId":"tjtanjin"},"content":"    @Override"},{"lineNumber":43,"author":{"gitId":"tjtanjin"},"content":"    public String toString() {"},{"lineNumber":44,"author":{"gitId":"tjtanjin"},"content":"        return super.toString()"},{"lineNumber":45,"author":{"gitId":"tjtanjin"},"content":"                + \" (by: \" + this.END_DATE.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\")) + \")\";"},{"lineNumber":46,"author":{"gitId":"tjtanjin"},"content":"    }"},{"lineNumber":47,"author":{"gitId":"tjtanjin"},"content":"}"}],"authorContributionMap":{"tjtanjin":47}},{"path":"src/main/java/com/tjtanjin/steve/tasks/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tjtanjin"},"content":"package com.tjtanjin.steve.tasks;"},{"lineNumber":2,"author":{"gitId":"tjtanjin"},"content":""},{"lineNumber":3,"author":{"gitId":"tjtanjin"},"content":"import java.time.LocalDate;"},{"lineNumber":4,"author":{"gitId":"tjtanjin"},"content":"import java.time.format.DateTimeFormatter;"},{"lineNumber":5,"author":{"gitId":"tjtanjin"},"content":""},{"lineNumber":6,"author":{"gitId":"tjtanjin"},"content":"/**"},{"lineNumber":7,"author":{"gitId":"tjtanjin"},"content":" * Event is a child class of Task, containing additional"},{"lineNumber":8,"author":{"gitId":"tjtanjin"},"content":" * support for an endDate."},{"lineNumber":9,"author":{"gitId":"tjtanjin"},"content":" */"},{"lineNumber":10,"author":{"gitId":"tjtanjin"},"content":"public class Event extends Task {"},{"lineNumber":11,"author":{"gitId":"tjtanjin"},"content":"    private final LocalDate START_DATE;"},{"lineNumber":12,"author":{"gitId":"tjtanjin"},"content":"    private final LocalDate END_DATE;"},{"lineNumber":13,"author":{"gitId":"tjtanjin"},"content":""},{"lineNumber":14,"author":{"gitId":"tjtanjin"},"content":"    /**"},{"lineNumber":15,"author":{"gitId":"tjtanjin"},"content":"     * Constructor for Event class."},{"lineNumber":16,"author":{"gitId":"tjtanjin"},"content":"     *"},{"lineNumber":17,"author":{"gitId":"tjtanjin"},"content":"     * @param taskName name of task"},{"lineNumber":18,"author":{"gitId":"tjtanjin"},"content":"     * @param status task completion status"},{"lineNumber":19,"author":{"gitId":"tjtanjin"},"content":"     * @param taskDates array of dates (first element is start date, second element is end date)"},{"lineNumber":20,"author":{"gitId":"tjtanjin"},"content":"     */"},{"lineNumber":21,"author":{"gitId":"tjtanjin"},"content":"    public Event(String taskName, String status, LocalDate[] taskDates) {"},{"lineNumber":22,"author":{"gitId":"tjtanjin"},"content":"        super(taskName, status, \"EVENT\");"},{"lineNumber":23,"author":{"gitId":"tjtanjin"},"content":"        this.START_DATE \u003d taskDates[0];"},{"lineNumber":24,"author":{"gitId":"tjtanjin"},"content":"        this.END_DATE \u003d taskDates[1];"},{"lineNumber":25,"author":{"gitId":"tjtanjin"},"content":"    }"},{"lineNumber":26,"author":{"gitId":"tjtanjin"},"content":""},{"lineNumber":27,"author":{"gitId":"tjtanjin"},"content":"    /**"},{"lineNumber":28,"author":{"gitId":"tjtanjin"},"content":"     * Gets array of due dates, 2 elements for event class."},{"lineNumber":29,"author":{"gitId":"tjtanjin"},"content":"     *"},{"lineNumber":30,"author":{"gitId":"tjtanjin"},"content":"     * @return array with 2 elements representing start and end date"},{"lineNumber":31,"author":{"gitId":"tjtanjin"},"content":"     */"},{"lineNumber":32,"author":{"gitId":"tjtanjin"},"content":"    @Override"},{"lineNumber":33,"author":{"gitId":"tjtanjin"},"content":"    public LocalDate[] getDates() {"},{"lineNumber":34,"author":{"gitId":"tjtanjin"},"content":"        LocalDate[] taskDates \u003d new LocalDate[2];"},{"lineNumber":35,"author":{"gitId":"tjtanjin"},"content":"        taskDates[0] \u003d this.START_DATE;"},{"lineNumber":36,"author":{"gitId":"tjtanjin"},"content":"        taskDates[1] \u003d this.END_DATE;"},{"lineNumber":37,"author":{"gitId":"tjtanjin"},"content":"        return taskDates;"},{"lineNumber":38,"author":{"gitId":"tjtanjin"},"content":"    }"},{"lineNumber":39,"author":{"gitId":"tjtanjin"},"content":""},{"lineNumber":40,"author":{"gitId":"tjtanjin"},"content":"    /**"},{"lineNumber":41,"author":{"gitId":"tjtanjin"},"content":"     * Gets the string describing event."},{"lineNumber":42,"author":{"gitId":"tjtanjin"},"content":"     *"},{"lineNumber":43,"author":{"gitId":"tjtanjin"},"content":"     * @return String describing event"},{"lineNumber":44,"author":{"gitId":"tjtanjin"},"content":"     */"},{"lineNumber":45,"author":{"gitId":"tjtanjin"},"content":"    @Override"},{"lineNumber":46,"author":{"gitId":"tjtanjin"},"content":"    public String toString() {"},{"lineNumber":47,"author":{"gitId":"tjtanjin"},"content":"        return super.toString()"},{"lineNumber":48,"author":{"gitId":"tjtanjin"},"content":"                + \" (from: \" + this.START_DATE.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\"))"},{"lineNumber":49,"author":{"gitId":"tjtanjin"},"content":"                        + \" to: \" + this.END_DATE.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\")) + \")\";"},{"lineNumber":50,"author":{"gitId":"tjtanjin"},"content":"    }"},{"lineNumber":51,"author":{"gitId":"tjtanjin"},"content":"}"}],"authorContributionMap":{"tjtanjin":51}},{"path":"src/main/java/com/tjtanjin/steve/tasks/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tjtanjin"},"content":"package com.tjtanjin.steve.tasks;"},{"lineNumber":2,"author":{"gitId":"tjtanjin"},"content":""},{"lineNumber":3,"author":{"gitId":"tjtanjin"},"content":"import java.time.LocalDate;"},{"lineNumber":4,"author":{"gitId":"tjtanjin"},"content":""},{"lineNumber":5,"author":{"gitId":"tjtanjin"},"content":"/**"},{"lineNumber":6,"author":{"gitId":"tjtanjin"},"content":" * Encapsulates a task and supports operators to retrieve"},{"lineNumber":7,"author":{"gitId":"tjtanjin"},"content":" * information about the task such as taskName, status and type."},{"lineNumber":8,"author":{"gitId":"tjtanjin"},"content":" */"},{"lineNumber":9,"author":{"gitId":"tjtanjin"},"content":"public class Task {"},{"lineNumber":10,"author":{"gitId":"tjtanjin"},"content":""},{"lineNumber":11,"author":{"gitId":"tjtanjin"},"content":"    //task details"},{"lineNumber":12,"author":{"gitId":"tjtanjin"},"content":"    private final String TASK_NAME;"},{"lineNumber":13,"author":{"gitId":"tjtanjin"},"content":"    private final String TYPE;"},{"lineNumber":14,"author":{"gitId":"tjtanjin"},"content":"    private String status;"},{"lineNumber":15,"author":{"gitId":"tjtanjin"},"content":""},{"lineNumber":16,"author":{"gitId":"tjtanjin"},"content":"    /**"},{"lineNumber":17,"author":{"gitId":"tjtanjin"},"content":"     * Constructor for Task class."},{"lineNumber":18,"author":{"gitId":"tjtanjin"},"content":"     *"},{"lineNumber":19,"author":{"gitId":"tjtanjin"},"content":"     * @param taskName name of task"},{"lineNumber":20,"author":{"gitId":"tjtanjin"},"content":"     * @param status task completion status"},{"lineNumber":21,"author":{"gitId":"tjtanjin"},"content":"     * @param type type of task"},{"lineNumber":22,"author":{"gitId":"tjtanjin"},"content":"     */"},{"lineNumber":23,"author":{"gitId":"tjtanjin"},"content":"    public Task(String taskName, String status, String type) {"},{"lineNumber":24,"author":{"gitId":"tjtanjin"},"content":"        this.TASK_NAME \u003d taskName;"},{"lineNumber":25,"author":{"gitId":"tjtanjin"},"content":"        this.status \u003d status;"},{"lineNumber":26,"author":{"gitId":"tjtanjin"},"content":"        this.TYPE \u003d type;"},{"lineNumber":27,"author":{"gitId":"tjtanjin"},"content":"    }"},{"lineNumber":28,"author":{"gitId":"tjtanjin"},"content":""},{"lineNumber":29,"author":{"gitId":"tjtanjin"},"content":"    /**"},{"lineNumber":30,"author":{"gitId":"tjtanjin"},"content":"     * Gets name of task."},{"lineNumber":31,"author":{"gitId":"tjtanjin"},"content":"     *"},{"lineNumber":32,"author":{"gitId":"tjtanjin"},"content":"     * @return name of task"},{"lineNumber":33,"author":{"gitId":"tjtanjin"},"content":"     */"},{"lineNumber":34,"author":{"gitId":"tjtanjin"},"content":"    public String getTaskName() {"},{"lineNumber":35,"author":{"gitId":"tjtanjin"},"content":"        return this.TASK_NAME;"},{"lineNumber":36,"author":{"gitId":"tjtanjin"},"content":"    }"},{"lineNumber":37,"author":{"gitId":"tjtanjin"},"content":""},{"lineNumber":38,"author":{"gitId":"tjtanjin"},"content":"    /**"},{"lineNumber":39,"author":{"gitId":"tjtanjin"},"content":"     * Gets status of task."},{"lineNumber":40,"author":{"gitId":"tjtanjin"},"content":"     *"},{"lineNumber":41,"author":{"gitId":"tjtanjin"},"content":"     * @return status of task"},{"lineNumber":42,"author":{"gitId":"tjtanjin"},"content":"     */"},{"lineNumber":43,"author":{"gitId":"tjtanjin"},"content":"    public String getStatus() {"},{"lineNumber":44,"author":{"gitId":"tjtanjin"},"content":"        return this.status;"},{"lineNumber":45,"author":{"gitId":"tjtanjin"},"content":"    }"},{"lineNumber":46,"author":{"gitId":"tjtanjin"},"content":""},{"lineNumber":47,"author":{"gitId":"tjtanjin"},"content":"    /**"},{"lineNumber":48,"author":{"gitId":"tjtanjin"},"content":"     * Gets type of task."},{"lineNumber":49,"author":{"gitId":"tjtanjin"},"content":"     *"},{"lineNumber":50,"author":{"gitId":"tjtanjin"},"content":"     * @return type of task"},{"lineNumber":51,"author":{"gitId":"tjtanjin"},"content":"     */"},{"lineNumber":52,"author":{"gitId":"tjtanjin"},"content":"    public String getType() {"},{"lineNumber":53,"author":{"gitId":"tjtanjin"},"content":"        return this.TYPE;"},{"lineNumber":54,"author":{"gitId":"tjtanjin"},"content":"    }"},{"lineNumber":55,"author":{"gitId":"tjtanjin"},"content":""},{"lineNumber":56,"author":{"gitId":"tjtanjin"},"content":"    /**"},{"lineNumber":57,"author":{"gitId":"tjtanjin"},"content":"     * Gets empty array of dates since overridden in deadline and event child class."},{"lineNumber":58,"author":{"gitId":"tjtanjin"},"content":"     *"},{"lineNumber":59,"author":{"gitId":"tjtanjin"},"content":"     * @return empty array of size 1"},{"lineNumber":60,"author":{"gitId":"tjtanjin"},"content":"     */"},{"lineNumber":61,"author":{"gitId":"tjtanjin"},"content":"    public LocalDate[] getDates() {"},{"lineNumber":62,"author":{"gitId":"tjtanjin"},"content":"        return new LocalDate[1];"},{"lineNumber":63,"author":{"gitId":"tjtanjin"},"content":"    }"},{"lineNumber":64,"author":{"gitId":"tjtanjin"},"content":""},{"lineNumber":65,"author":{"gitId":"tjtanjin"},"content":"    /**"},{"lineNumber":66,"author":{"gitId":"tjtanjin"},"content":"     * Marks the task as completed."},{"lineNumber":67,"author":{"gitId":"tjtanjin"},"content":"     */"},{"lineNumber":68,"author":{"gitId":"tjtanjin"},"content":"    public void markCompleted() {"},{"lineNumber":69,"author":{"gitId":"tjtanjin"},"content":"        this.status \u003d \"complete\";"},{"lineNumber":70,"author":{"gitId":"tjtanjin"},"content":"    }"},{"lineNumber":71,"author":{"gitId":"tjtanjin"},"content":""},{"lineNumber":72,"author":{"gitId":"tjtanjin"},"content":"    /**"},{"lineNumber":73,"author":{"gitId":"tjtanjin"},"content":"     * Gets the string describing task."},{"lineNumber":74,"author":{"gitId":"tjtanjin"},"content":"     *"},{"lineNumber":75,"author":{"gitId":"tjtanjin"},"content":"     * @return String describing task"},{"lineNumber":76,"author":{"gitId":"tjtanjin"},"content":"     */"},{"lineNumber":77,"author":{"gitId":"tjtanjin"},"content":"    @Override"},{"lineNumber":78,"author":{"gitId":"tjtanjin"},"content":"    public String toString() {"},{"lineNumber":79,"author":{"gitId":"tjtanjin"},"content":"        if (this.getStatus().equals(\"incomplete\")) {"},{"lineNumber":80,"author":{"gitId":"tjtanjin"},"content":"            return \"[\" + this.getType().charAt(0) + \"][ ] \" + this.getTaskName();"},{"lineNumber":81,"author":{"gitId":"tjtanjin"},"content":"        } else {"},{"lineNumber":82,"author":{"gitId":"tjtanjin"},"content":"            return \"[\" + this.getType().charAt(0) + \"][X] \" + this.getTaskName();"},{"lineNumber":83,"author":{"gitId":"tjtanjin"},"content":"        }"},{"lineNumber":84,"author":{"gitId":"tjtanjin"},"content":"    }"},{"lineNumber":85,"author":{"gitId":"tjtanjin"},"content":"}"}],"authorContributionMap":{"tjtanjin":85}},{"path":"src/main/java/com/tjtanjin/steve/tasks/TaskHandler.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tjtanjin"},"content":"package com.tjtanjin.steve.tasks;"},{"lineNumber":2,"author":{"gitId":"tjtanjin"},"content":""},{"lineNumber":3,"author":{"gitId":"tjtanjin"},"content":"import java.time.LocalDate;"},{"lineNumber":4,"author":{"gitId":"tjtanjin"},"content":"import java.util.ArrayList;"},{"lineNumber":5,"author":{"gitId":"tjtanjin"},"content":""},{"lineNumber":6,"author":{"gitId":"tjtanjin"},"content":"import com.tjtanjin.steve.storage.StorageHandler;"},{"lineNumber":7,"author":{"gitId":"tjtanjin"},"content":""},{"lineNumber":8,"author":{"gitId":"tjtanjin"},"content":"/**"},{"lineNumber":9,"author":{"gitId":"tjtanjin"},"content":" * TaskHandler manages all task operations. It is managed through the CommandHandler and works directly"},{"lineNumber":10,"author":{"gitId":"tjtanjin"},"content":" * with StorageHandler to store/load tasks."},{"lineNumber":11,"author":{"gitId":"tjtanjin"},"content":" */"},{"lineNumber":12,"author":{"gitId":"tjtanjin"},"content":"public class TaskHandler {"},{"lineNumber":13,"author":{"gitId":"tjtanjin"},"content":""},{"lineNumber":14,"author":{"gitId":"tjtanjin"},"content":"    //use arraylist to store tasks"},{"lineNumber":15,"author":{"gitId":"tjtanjin"},"content":"    private final StorageHandler STORAGE_HANDLER;"},{"lineNumber":16,"author":{"gitId":"tjtanjin"},"content":"    private final ArrayList\u003cTask\u003e TASKS;"},{"lineNumber":17,"author":{"gitId":"tjtanjin"},"content":""},{"lineNumber":18,"author":{"gitId":"tjtanjin"},"content":"    /**"},{"lineNumber":19,"author":{"gitId":"tjtanjin"},"content":"     * Constructor for TaskList."},{"lineNumber":20,"author":{"gitId":"tjtanjin"},"content":"     *"},{"lineNumber":21,"author":{"gitId":"tjtanjin"},"content":"     * @param storageHandler storage to store and load tasks from"},{"lineNumber":22,"author":{"gitId":"tjtanjin"},"content":"     */"},{"lineNumber":23,"author":{"gitId":"tjtanjin"},"content":"    public TaskHandler(StorageHandler storageHandler) {"},{"lineNumber":24,"author":{"gitId":"tjtanjin"},"content":"        this.STORAGE_HANDLER \u003d storageHandler;"},{"lineNumber":25,"author":{"gitId":"tjtanjin"},"content":"        this.TASKS \u003d storageHandler.loadTasks();"},{"lineNumber":26,"author":{"gitId":"tjtanjin"},"content":"    }"},{"lineNumber":27,"author":{"gitId":"tjtanjin"},"content":""},{"lineNumber":28,"author":{"gitId":"tjtanjin"},"content":"    /**"},{"lineNumber":29,"author":{"gitId":"tjtanjin"},"content":"     * Adds a new task."},{"lineNumber":30,"author":{"gitId":"tjtanjin"},"content":"     *"},{"lineNumber":31,"author":{"gitId":"tjtanjin"},"content":"     * @param taskType type of task (todo, deadline or event)"},{"lineNumber":32,"author":{"gitId":"tjtanjin"},"content":"     * @param taskName name of task"},{"lineNumber":33,"author":{"gitId":"tjtanjin"},"content":"     * @param taskDates taskDates array of dates (defaults to first element for deadline end date)"},{"lineNumber":34,"author":{"gitId":"tjtanjin"},"content":"     * @return string response after operation is done"},{"lineNumber":35,"author":{"gitId":"tjtanjin"},"content":"     */"},{"lineNumber":36,"author":{"gitId":"tjtanjin"},"content":"    public String addTask(String taskType, String taskName, LocalDate[] taskDates) {"},{"lineNumber":37,"author":{"gitId":"tjtanjin"},"content":"        Task task;"},{"lineNumber":38,"author":{"gitId":"tjtanjin"},"content":"        if (taskType.equalsIgnoreCase(\"DEADLINE\")) {"},{"lineNumber":39,"author":{"gitId":"tjtanjin"},"content":"            task \u003d new Deadline(taskName, \"incomplete\", taskDates);"},{"lineNumber":40,"author":{"gitId":"tjtanjin"},"content":"        } else if (taskType.equalsIgnoreCase(\"EVENT\")) {"},{"lineNumber":41,"author":{"gitId":"tjtanjin"},"content":"            task \u003d new Event(taskName, \"incomplete\", taskDates);"},{"lineNumber":42,"author":{"gitId":"tjtanjin"},"content":"        } else {"},{"lineNumber":43,"author":{"gitId":"tjtanjin"},"content":"            task \u003d new ToDo(taskName, \"incomplete\");"},{"lineNumber":44,"author":{"gitId":"tjtanjin"},"content":"        }"},{"lineNumber":45,"author":{"gitId":"tjtanjin"},"content":"        TASKS.add(task);"},{"lineNumber":46,"author":{"gitId":"tjtanjin"},"content":"        if (STORAGE_HANDLER.saveTask(TASKS.size(), \"NEW\","},{"lineNumber":47,"author":{"gitId":"tjtanjin"},"content":"                taskName, \"incomplete\", taskType.toUpperCase(), taskDates)) {"},{"lineNumber":48,"author":{"gitId":"tjtanjin"},"content":"            return \"Info: Your task has been added! You now have \" + TASKS.size() + \" task(s)!\";"},{"lineNumber":49,"author":{"gitId":"tjtanjin"},"content":"        } else {"},{"lineNumber":50,"author":{"gitId":"tjtanjin"},"content":"            return \"Error: There was an error saving your task, please check your syntax and try again.\";"},{"lineNumber":51,"author":{"gitId":"tjtanjin"},"content":"        }"},{"lineNumber":52,"author":{"gitId":"tjtanjin"},"content":"    }"},{"lineNumber":53,"author":{"gitId":"tjtanjin"},"content":""},{"lineNumber":54,"author":{"gitId":"tjtanjin"},"content":"    /**"},{"lineNumber":55,"author":{"gitId":"tjtanjin"},"content":"     * Gets array list of tasks."},{"lineNumber":56,"author":{"gitId":"tjtanjin"},"content":"     *"},{"lineNumber":57,"author":{"gitId":"tjtanjin"},"content":"     * @return array list of tasks"},{"lineNumber":58,"author":{"gitId":"tjtanjin"},"content":"     */"},{"lineNumber":59,"author":{"gitId":"tjtanjin"},"content":"    public ArrayList\u003cTask\u003e getTasks() {"},{"lineNumber":60,"author":{"gitId":"tjtanjin"},"content":"        return TASKS;"},{"lineNumber":61,"author":{"gitId":"tjtanjin"},"content":"    }"},{"lineNumber":62,"author":{"gitId":"tjtanjin"},"content":""},{"lineNumber":63,"author":{"gitId":"tjtanjin"},"content":"    /**"},{"lineNumber":64,"author":{"gitId":"tjtanjin"},"content":"     * Marks a task as done."},{"lineNumber":65,"author":{"gitId":"tjtanjin"},"content":"     *"},{"lineNumber":66,"author":{"gitId":"tjtanjin"},"content":"     * @param index index of task to mark as done"},{"lineNumber":67,"author":{"gitId":"tjtanjin"},"content":"     * @return string response after operation is done"},{"lineNumber":68,"author":{"gitId":"tjtanjin"},"content":"     */"},{"lineNumber":69,"author":{"gitId":"tjtanjin"},"content":"    public String markTaskDone(int index) {"},{"lineNumber":70,"author":{"gitId":"tjtanjin"},"content":"        try {"},{"lineNumber":71,"author":{"gitId":"tjtanjin"},"content":"            Task task \u003d TASKS.get(index);"},{"lineNumber":72,"author":{"gitId":"tjtanjin"},"content":"            if (task.getStatus().equals(\"complete\")) {"},{"lineNumber":73,"author":{"gitId":"tjtanjin"},"content":"                return \"Error: Task is already completed!\";"},{"lineNumber":74,"author":{"gitId":"tjtanjin"},"content":"            } else {"},{"lineNumber":75,"author":{"gitId":"tjtanjin"},"content":"                task.markCompleted();"},{"lineNumber":76,"author":{"gitId":"tjtanjin"},"content":"                String taskName \u003d task.getTaskName();"},{"lineNumber":77,"author":{"gitId":"tjtanjin"},"content":"                String taskType \u003d task.getType().toUpperCase();"},{"lineNumber":78,"author":{"gitId":"tjtanjin"},"content":"                LocalDate[] taskDates \u003d task.getDates();"},{"lineNumber":79,"author":{"gitId":"tjtanjin"},"content":"                if (STORAGE_HANDLER.saveTask(index, \"DONE\","},{"lineNumber":80,"author":{"gitId":"tjtanjin"},"content":"                        taskName, \"complete\", taskType, taskDates)) {"},{"lineNumber":81,"author":{"gitId":"tjtanjin"},"content":"                    return \"Info: Yay your task is done! :D\";"},{"lineNumber":82,"author":{"gitId":"tjtanjin"},"content":"                } else {"},{"lineNumber":83,"author":{"gitId":"tjtanjin"},"content":"                    return \"Error: There was an error marking your task as done, \""},{"lineNumber":84,"author":{"gitId":"tjtanjin"},"content":"                            + \"please check your syntax and try again.\";"},{"lineNumber":85,"author":{"gitId":"tjtanjin"},"content":"                }"},{"lineNumber":86,"author":{"gitId":"tjtanjin"},"content":"            }"},{"lineNumber":87,"author":{"gitId":"tjtanjin"},"content":"        } catch (IndexOutOfBoundsException e) {"},{"lineNumber":88,"author":{"gitId":"tjtanjin"},"content":"            return \"Error: The specified task index does not exist!\";"},{"lineNumber":89,"author":{"gitId":"tjtanjin"},"content":"        }"},{"lineNumber":90,"author":{"gitId":"tjtanjin"},"content":"    }"},{"lineNumber":91,"author":{"gitId":"tjtanjin"},"content":""},{"lineNumber":92,"author":{"gitId":"tjtanjin"},"content":"    /**"},{"lineNumber":93,"author":{"gitId":"tjtanjin"},"content":"     * Deletes a task."},{"lineNumber":94,"author":{"gitId":"tjtanjin"},"content":"     *"},{"lineNumber":95,"author":{"gitId":"tjtanjin"},"content":"     * @param index index of task to delete"},{"lineNumber":96,"author":{"gitId":"tjtanjin"},"content":"     * @return string response after operation is done"},{"lineNumber":97,"author":{"gitId":"tjtanjin"},"content":"     */"},{"lineNumber":98,"author":{"gitId":"tjtanjin"},"content":"    public String deleteTask(int index) {"},{"lineNumber":99,"author":{"gitId":"tjtanjin"},"content":"        try {"},{"lineNumber":100,"author":{"gitId":"tjtanjin"},"content":"            Task task \u003d TASKS.get(index);"},{"lineNumber":101,"author":{"gitId":"tjtanjin"},"content":"            TASKS.remove(task);"},{"lineNumber":102,"author":{"gitId":"tjtanjin"},"content":"            String taskName \u003d task.getTaskName();"},{"lineNumber":103,"author":{"gitId":"tjtanjin"},"content":"            String taskType \u003d task.getType().toUpperCase();"},{"lineNumber":104,"author":{"gitId":"tjtanjin"},"content":"            LocalDate[] taskDates \u003d task.getDates();"},{"lineNumber":105,"author":{"gitId":"tjtanjin"},"content":"            if (STORAGE_HANDLER.saveTask(index, \"DELETE\","},{"lineNumber":106,"author":{"gitId":"tjtanjin"},"content":"                    taskName, \"complete\", taskType, taskDates)) {"},{"lineNumber":107,"author":{"gitId":"tjtanjin"},"content":"                return \"Info: The following task has been deleted:\\n\" + task;"},{"lineNumber":108,"author":{"gitId":"tjtanjin"},"content":"            } else {"},{"lineNumber":109,"author":{"gitId":"tjtanjin"},"content":"                return \"Error: There was an error deleting your task, \""},{"lineNumber":110,"author":{"gitId":"tjtanjin"},"content":"                        + \"please check your syntax and try again.\";"},{"lineNumber":111,"author":{"gitId":"tjtanjin"},"content":"            }"},{"lineNumber":112,"author":{"gitId":"tjtanjin"},"content":"        } catch (IndexOutOfBoundsException e) {"},{"lineNumber":113,"author":{"gitId":"tjtanjin"},"content":"            return \"Error: The specified task index does not exist!\";"},{"lineNumber":114,"author":{"gitId":"tjtanjin"},"content":"        }"},{"lineNumber":115,"author":{"gitId":"tjtanjin"},"content":"    }"},{"lineNumber":116,"author":{"gitId":"tjtanjin"},"content":""},{"lineNumber":117,"author":{"gitId":"tjtanjin"},"content":"    /**"},{"lineNumber":118,"author":{"gitId":"tjtanjin"},"content":"     * Shows all tasks to user"},{"lineNumber":119,"author":{"gitId":"tjtanjin"},"content":"     *"},{"lineNumber":120,"author":{"gitId":"tjtanjin"},"content":"     * @return string response after operation is done"},{"lineNumber":121,"author":{"gitId":"tjtanjin"},"content":"     */"},{"lineNumber":122,"author":{"gitId":"tjtanjin"},"content":"    public String showAllTasks() {"},{"lineNumber":123,"author":{"gitId":"tjtanjin"},"content":"        if (TASKS.size() \u003d\u003d 0) {"},{"lineNumber":124,"author":{"gitId":"tjtanjin"},"content":"            return \"Info: You have no task at the moment!\";"},{"lineNumber":125,"author":{"gitId":"tjtanjin"},"content":"        } else {"},{"lineNumber":126,"author":{"gitId":"tjtanjin"},"content":"            StringBuilder strOfTasks \u003d new StringBuilder(\"Info: \");"},{"lineNumber":127,"author":{"gitId":"tjtanjin"},"content":"            for (int i \u003d 1; i \u003c\u003d TASKS.size(); i++) {"},{"lineNumber":128,"author":{"gitId":"tjtanjin"},"content":"                Task task \u003d TASKS.get(i - 1);"},{"lineNumber":129,"author":{"gitId":"tjtanjin"},"content":"                strOfTasks.append(i).append(\".\").append(task).append(\"\\n\");"},{"lineNumber":130,"author":{"gitId":"tjtanjin"},"content":"            }"},{"lineNumber":131,"author":{"gitId":"tjtanjin"},"content":"            strOfTasks.append(\"You have \").append(TASKS.size()).append(\" task(s)!\");"},{"lineNumber":132,"author":{"gitId":"tjtanjin"},"content":"            return strOfTasks.toString();"},{"lineNumber":133,"author":{"gitId":"tjtanjin"},"content":"        }"},{"lineNumber":134,"author":{"gitId":"tjtanjin"},"content":"    }"},{"lineNumber":135,"author":{"gitId":"tjtanjin"},"content":""},{"lineNumber":136,"author":{"gitId":"tjtanjin"},"content":"    /**"},{"lineNumber":137,"author":{"gitId":"tjtanjin"},"content":"     * Finds all tasks whose name contains input from user."},{"lineNumber":138,"author":{"gitId":"tjtanjin"},"content":"     *"},{"lineNumber":139,"author":{"gitId":"tjtanjin"},"content":"     * @param taskNames names of task to check against"},{"lineNumber":140,"author":{"gitId":"tjtanjin"},"content":"     * @return string response after operation is done"},{"lineNumber":141,"author":{"gitId":"tjtanjin"},"content":"     */"},{"lineNumber":142,"author":{"gitId":"tjtanjin"},"content":"    public String findTask(String ... taskNames) {"},{"lineNumber":143,"author":{"gitId":"tjtanjin"},"content":"        if (TASKS.size() \u003d\u003d 0) {"},{"lineNumber":144,"author":{"gitId":"tjtanjin"},"content":"            return \"Info: You have no task at the moment!\";"},{"lineNumber":145,"author":{"gitId":"tjtanjin"},"content":"        } else {"},{"lineNumber":146,"author":{"gitId":"tjtanjin"},"content":"            int counter \u003d 0;"},{"lineNumber":147,"author":{"gitId":"tjtanjin"},"content":"            StringBuilder strOfTasks \u003d new StringBuilder(\"Info: \");"},{"lineNumber":148,"author":{"gitId":"tjtanjin"},"content":"            for (String taskName : taskNames) {"},{"lineNumber":149,"author":{"gitId":"tjtanjin"},"content":"                System.out.println(taskName);"},{"lineNumber":150,"author":{"gitId":"tjtanjin"},"content":"                for (int j \u003d 1; j \u003c\u003d TASKS.size(); j++) {"},{"lineNumber":151,"author":{"gitId":"tjtanjin"},"content":"                    Task task \u003d TASKS.get(j - 1);"},{"lineNumber":152,"author":{"gitId":"tjtanjin"},"content":"                    if (task.getTaskName().contains(taskName)) {"},{"lineNumber":153,"author":{"gitId":"tjtanjin"},"content":"                        counter +\u003d 1;"},{"lineNumber":154,"author":{"gitId":"tjtanjin"},"content":"                        strOfTasks.append(counter).append(\".\").append(task).append(\"\\n\");"},{"lineNumber":155,"author":{"gitId":"tjtanjin"},"content":"                    }"},{"lineNumber":156,"author":{"gitId":"tjtanjin"},"content":"                }"},{"lineNumber":157,"author":{"gitId":"tjtanjin"},"content":"            }"},{"lineNumber":158,"author":{"gitId":"tjtanjin"},"content":"            strOfTasks.append(\"A total of \").append(counter).append(\" task(s) were found.\");"},{"lineNumber":159,"author":{"gitId":"tjtanjin"},"content":"            return strOfTasks.toString();"},{"lineNumber":160,"author":{"gitId":"tjtanjin"},"content":"        }"},{"lineNumber":161,"author":{"gitId":"tjtanjin"},"content":"    }"},{"lineNumber":162,"author":{"gitId":"tjtanjin"},"content":"}"}],"authorContributionMap":{"tjtanjin":162}},{"path":"src/main/java/com/tjtanjin/steve/tasks/ToDo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tjtanjin"},"content":"package com.tjtanjin.steve.tasks;"},{"lineNumber":2,"author":{"gitId":"tjtanjin"},"content":""},{"lineNumber":3,"author":{"gitId":"tjtanjin"},"content":"/**"},{"lineNumber":4,"author":{"gitId":"tjtanjin"},"content":" * ToDo is a child class of Task, retaining all the"},{"lineNumber":5,"author":{"gitId":"tjtanjin"},"content":" * same functionalities as its parent."},{"lineNumber":6,"author":{"gitId":"tjtanjin"},"content":" */"},{"lineNumber":7,"author":{"gitId":"tjtanjin"},"content":"public class ToDo extends Task {"},{"lineNumber":8,"author":{"gitId":"tjtanjin"},"content":""},{"lineNumber":9,"author":{"gitId":"tjtanjin"},"content":"    /**"},{"lineNumber":10,"author":{"gitId":"tjtanjin"},"content":"     * Constructor for ToDo class."},{"lineNumber":11,"author":{"gitId":"tjtanjin"},"content":"     *"},{"lineNumber":12,"author":{"gitId":"tjtanjin"},"content":"     * @param taskName name of task"},{"lineNumber":13,"author":{"gitId":"tjtanjin"},"content":"     * @param status task completion status"},{"lineNumber":14,"author":{"gitId":"tjtanjin"},"content":"     */"},{"lineNumber":15,"author":{"gitId":"tjtanjin"},"content":"    public ToDo(String taskName, String status) {"},{"lineNumber":16,"author":{"gitId":"tjtanjin"},"content":"        super(taskName, status, \"TODO\");"},{"lineNumber":17,"author":{"gitId":"tjtanjin"},"content":"    }"},{"lineNumber":18,"author":{"gitId":"tjtanjin"},"content":"}"}],"authorContributionMap":{"tjtanjin":18}},{"path":"src/main/java/com/tjtanjin/steve/ui/DialogBox.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tjtanjin"},"content":"//Solution taken from https://se-education.org/guides/tutorials/javaFx.html"},{"lineNumber":2,"author":{"gitId":"tjtanjin"},"content":""},{"lineNumber":3,"author":{"gitId":"tjtanjin"},"content":"package com.tjtanjin.steve.ui;"},{"lineNumber":4,"author":{"gitId":"tjtanjin"},"content":""},{"lineNumber":5,"author":{"gitId":"tjtanjin"},"content":"import java.io.IOException;"},{"lineNumber":6,"author":{"gitId":"tjtanjin"},"content":"import java.util.Collections;"},{"lineNumber":7,"author":{"gitId":"tjtanjin"},"content":""},{"lineNumber":8,"author":{"gitId":"tjtanjin"},"content":"import javafx.collections.FXCollections;"},{"lineNumber":9,"author":{"gitId":"tjtanjin"},"content":"import javafx.collections.ObservableList;"},{"lineNumber":10,"author":{"gitId":"tjtanjin"},"content":"import javafx.fxml.FXML;"},{"lineNumber":11,"author":{"gitId":"tjtanjin"},"content":"import javafx.fxml.FXMLLoader;"},{"lineNumber":12,"author":{"gitId":"tjtanjin"},"content":"import javafx.geometry.Pos;"},{"lineNumber":13,"author":{"gitId":"tjtanjin"},"content":"import javafx.scene.Node;"},{"lineNumber":14,"author":{"gitId":"tjtanjin"},"content":"import javafx.scene.control.Label;"},{"lineNumber":15,"author":{"gitId":"tjtanjin"},"content":"import javafx.scene.image.Image;"},{"lineNumber":16,"author":{"gitId":"tjtanjin"},"content":"import javafx.scene.image.ImageView;"},{"lineNumber":17,"author":{"gitId":"tjtanjin"},"content":"import javafx.scene.layout.HBox;"},{"lineNumber":18,"author":{"gitId":"tjtanjin"},"content":""},{"lineNumber":19,"author":{"gitId":"tjtanjin"},"content":"/**"},{"lineNumber":20,"author":{"gitId":"tjtanjin"},"content":" * DialogBox is a custom control created to display chat messages in Steve."},{"lineNumber":21,"author":{"gitId":"tjtanjin"},"content":" */"},{"lineNumber":22,"author":{"gitId":"tjtanjin"},"content":"public class DialogBox extends HBox {"},{"lineNumber":23,"author":{"gitId":"tjtanjin"},"content":"    @FXML"},{"lineNumber":24,"author":{"gitId":"tjtanjin"},"content":"    private Label dialog;"},{"lineNumber":25,"author":{"gitId":"tjtanjin"},"content":"    @FXML"},{"lineNumber":26,"author":{"gitId":"tjtanjin"},"content":"    private ImageView displayPicture;"},{"lineNumber":27,"author":{"gitId":"tjtanjin"},"content":""},{"lineNumber":28,"author":{"gitId":"tjtanjin"},"content":"    /**"},{"lineNumber":29,"author":{"gitId":"tjtanjin"},"content":"     * Constructor for DialogBox."},{"lineNumber":30,"author":{"gitId":"tjtanjin"},"content":"     *"},{"lineNumber":31,"author":{"gitId":"tjtanjin"},"content":"     * @param text chat message"},{"lineNumber":32,"author":{"gitId":"tjtanjin"},"content":"     * @param img image of the sender/receiver"},{"lineNumber":33,"author":{"gitId":"tjtanjin"},"content":"     */"},{"lineNumber":34,"author":{"gitId":"tjtanjin"},"content":"    private DialogBox(String text, Image img) {"},{"lineNumber":35,"author":{"gitId":"tjtanjin"},"content":"        try {"},{"lineNumber":36,"author":{"gitId":"tjtanjin"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(UiHandler.class.getResource(\"/view/DialogBox.fxml\"));"},{"lineNumber":37,"author":{"gitId":"tjtanjin"},"content":"            fxmlLoader.setController(this);"},{"lineNumber":38,"author":{"gitId":"tjtanjin"},"content":"            fxmlLoader.setRoot(this);"},{"lineNumber":39,"author":{"gitId":"tjtanjin"},"content":"            fxmlLoader.load();"},{"lineNumber":40,"author":{"gitId":"tjtanjin"},"content":"        } catch (IOException e) {"},{"lineNumber":41,"author":{"gitId":"tjtanjin"},"content":"            e.printStackTrace();"},{"lineNumber":42,"author":{"gitId":"tjtanjin"},"content":"        }"},{"lineNumber":43,"author":{"gitId":"tjtanjin"},"content":""},{"lineNumber":44,"author":{"gitId":"tjtanjin"},"content":"        dialog.setText(text);"},{"lineNumber":45,"author":{"gitId":"tjtanjin"},"content":"        displayPicture.setImage(img);"},{"lineNumber":46,"author":{"gitId":"tjtanjin"},"content":"    }"},{"lineNumber":47,"author":{"gitId":"tjtanjin"},"content":""},{"lineNumber":48,"author":{"gitId":"tjtanjin"},"content":"    /**"},{"lineNumber":49,"author":{"gitId":"tjtanjin"},"content":"     * Flips the dialog box such that the ImageView is on the left and text on the right."},{"lineNumber":50,"author":{"gitId":"tjtanjin"},"content":"     */"},{"lineNumber":51,"author":{"gitId":"tjtanjin"},"content":"    private void flip() {"},{"lineNumber":52,"author":{"gitId":"tjtanjin"},"content":"        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());"},{"lineNumber":53,"author":{"gitId":"tjtanjin"},"content":"        Collections.reverse(tmp);"},{"lineNumber":54,"author":{"gitId":"tjtanjin"},"content":"        getChildren().setAll(tmp);"},{"lineNumber":55,"author":{"gitId":"tjtanjin"},"content":"        setAlignment(Pos.TOP_LEFT);"},{"lineNumber":56,"author":{"gitId":"tjtanjin"},"content":"    }"},{"lineNumber":57,"author":{"gitId":"tjtanjin"},"content":""},{"lineNumber":58,"author":{"gitId":"tjtanjin"},"content":"    /**"},{"lineNumber":59,"author":{"gitId":"tjtanjin"},"content":"     * Gets the dialog box for user."},{"lineNumber":60,"author":{"gitId":"tjtanjin"},"content":"     *"},{"lineNumber":61,"author":{"gitId":"tjtanjin"},"content":"     * @param msg chat message of user"},{"lineNumber":62,"author":{"gitId":"tjtanjin"},"content":"     * @param img image of user"},{"lineNumber":63,"author":{"gitId":"tjtanjin"},"content":"     * @return dialog box for user"},{"lineNumber":64,"author":{"gitId":"tjtanjin"},"content":"     */"},{"lineNumber":65,"author":{"gitId":"tjtanjin"},"content":"    public static DialogBox getUserDialog(String msg, Image img) {"},{"lineNumber":66,"author":{"gitId":"tjtanjin"},"content":"        return new DialogBox(msg, img);"},{"lineNumber":67,"author":{"gitId":"tjtanjin"},"content":"    }"},{"lineNumber":68,"author":{"gitId":"tjtanjin"},"content":""},{"lineNumber":69,"author":{"gitId":"tjtanjin"},"content":"    /**"},{"lineNumber":70,"author":{"gitId":"tjtanjin"},"content":"     * Gets the dialog box for Steve."},{"lineNumber":71,"author":{"gitId":"tjtanjin"},"content":"     *"},{"lineNumber":72,"author":{"gitId":"tjtanjin"},"content":"     * @param msg chat message of steve"},{"lineNumber":73,"author":{"gitId":"tjtanjin"},"content":"     * @param img image of steve"},{"lineNumber":74,"author":{"gitId":"tjtanjin"},"content":"     * @return dialog box for steve"},{"lineNumber":75,"author":{"gitId":"tjtanjin"},"content":"     */"},{"lineNumber":76,"author":{"gitId":"tjtanjin"},"content":"    public static DialogBox getSteveDialog(String msg, Image img) {"},{"lineNumber":77,"author":{"gitId":"tjtanjin"},"content":"        var db \u003d new DialogBox(msg, img);"},{"lineNumber":78,"author":{"gitId":"tjtanjin"},"content":"        db.flip();"},{"lineNumber":79,"author":{"gitId":"tjtanjin"},"content":"        return db;"},{"lineNumber":80,"author":{"gitId":"tjtanjin"},"content":"    }"},{"lineNumber":81,"author":{"gitId":"tjtanjin"},"content":"}"}],"authorContributionMap":{"tjtanjin":81}},{"path":"src/main/java/com/tjtanjin/steve/ui/UiHandler.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tjtanjin"},"content":"package com.tjtanjin.steve.ui;"},{"lineNumber":2,"author":{"gitId":"tjtanjin"},"content":""},{"lineNumber":3,"author":{"gitId":"tjtanjin"},"content":"import com.tjtanjin.steve.Steve;"},{"lineNumber":4,"author":{"gitId":"tjtanjin"},"content":""},{"lineNumber":5,"author":{"gitId":"tjtanjin"},"content":"import javafx.fxml.FXML;"},{"lineNumber":6,"author":{"gitId":"tjtanjin"},"content":"import javafx.fxml.FXMLLoader;"},{"lineNumber":7,"author":{"gitId":"tjtanjin"},"content":"import javafx.scene.control.Button;"},{"lineNumber":8,"author":{"gitId":"tjtanjin"},"content":"import javafx.scene.control.ScrollPane;"},{"lineNumber":9,"author":{"gitId":"tjtanjin"},"content":"import javafx.scene.control.TextField;"},{"lineNumber":10,"author":{"gitId":"tjtanjin"},"content":"import javafx.scene.image.Image;"},{"lineNumber":11,"author":{"gitId":"tjtanjin"},"content":"import javafx.scene.layout.AnchorPane;"},{"lineNumber":12,"author":{"gitId":"tjtanjin"},"content":"import javafx.scene.layout.VBox;"},{"lineNumber":13,"author":{"gitId":"tjtanjin"},"content":""},{"lineNumber":14,"author":{"gitId":"tjtanjin"},"content":"/**"},{"lineNumber":15,"author":{"gitId":"tjtanjin"},"content":" * Controller for UiHandler. Provides the layout for the other controls."},{"lineNumber":16,"author":{"gitId":"tjtanjin"},"content":" */"},{"lineNumber":17,"author":{"gitId":"tjtanjin"},"content":"public class UiHandler extends AnchorPane {"},{"lineNumber":18,"author":{"gitId":"tjtanjin"},"content":""},{"lineNumber":19,"author":{"gitId":"tjtanjin"},"content":"    private static FXMLLoader fxmlLoader;"},{"lineNumber":20,"author":{"gitId":"tjtanjin"},"content":""},{"lineNumber":21,"author":{"gitId":"tjtanjin"},"content":"    @FXML"},{"lineNumber":22,"author":{"gitId":"tjtanjin"},"content":"    private ScrollPane scrollPane;"},{"lineNumber":23,"author":{"gitId":"tjtanjin"},"content":"    @FXML"},{"lineNumber":24,"author":{"gitId":"tjtanjin"},"content":"    private VBox dialogContainer;"},{"lineNumber":25,"author":{"gitId":"tjtanjin"},"content":"    @FXML"},{"lineNumber":26,"author":{"gitId":"tjtanjin"},"content":"    private TextField userInput;"},{"lineNumber":27,"author":{"gitId":"tjtanjin"},"content":"    @FXML"},{"lineNumber":28,"author":{"gitId":"tjtanjin"},"content":"    private Button sendButton;"},{"lineNumber":29,"author":{"gitId":"tjtanjin"},"content":""},{"lineNumber":30,"author":{"gitId":"tjtanjin"},"content":"    private Steve steve;"},{"lineNumber":31,"author":{"gitId":"tjtanjin"},"content":""},{"lineNumber":32,"author":{"gitId":"tjtanjin"},"content":"    private final Image USER_IMAGE \u003d new Image(this.getClass().getResourceAsStream(\"/images/user.png\"));"},{"lineNumber":33,"author":{"gitId":"tjtanjin"},"content":"    private final Image STEVE_IMAGE \u003d new Image(this.getClass().getResourceAsStream(\"/images/steve.png\"));"},{"lineNumber":34,"author":{"gitId":"tjtanjin"},"content":""},{"lineNumber":35,"author":{"gitId":"tjtanjin"},"content":"    /**"},{"lineNumber":36,"author":{"gitId":"tjtanjin"},"content":"     * Initialize ui window."},{"lineNumber":37,"author":{"gitId":"tjtanjin"},"content":"     */"},{"lineNumber":38,"author":{"gitId":"tjtanjin"},"content":"    @FXML"},{"lineNumber":39,"author":{"gitId":"tjtanjin"},"content":"    public void initialize() {"},{"lineNumber":40,"author":{"gitId":"tjtanjin"},"content":"        scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());"},{"lineNumber":41,"author":{"gitId":"tjtanjin"},"content":"        showWelcomeMsg();"},{"lineNumber":42,"author":{"gitId":"tjtanjin"},"content":"    }"},{"lineNumber":43,"author":{"gitId":"tjtanjin"},"content":""},{"lineNumber":44,"author":{"gitId":"tjtanjin"},"content":"    /**"},{"lineNumber":45,"author":{"gitId":"tjtanjin"},"content":"     * Gets fxml loader."},{"lineNumber":46,"author":{"gitId":"tjtanjin"},"content":"     * @return fxml loader"},{"lineNumber":47,"author":{"gitId":"tjtanjin"},"content":"     */"},{"lineNumber":48,"author":{"gitId":"tjtanjin"},"content":"    public static FXMLLoader getFxmlLoader() {"},{"lineNumber":49,"author":{"gitId":"tjtanjin"},"content":"        return fxmlLoader;"},{"lineNumber":50,"author":{"gitId":"tjtanjin"},"content":"    }"},{"lineNumber":51,"author":{"gitId":"tjtanjin"},"content":""},{"lineNumber":52,"author":{"gitId":"tjtanjin"},"content":"    /**"},{"lineNumber":53,"author":{"gitId":"tjtanjin"},"content":"     * Sets private attribute Steve."},{"lineNumber":54,"author":{"gitId":"tjtanjin"},"content":"     *"},{"lineNumber":55,"author":{"gitId":"tjtanjin"},"content":"     * @param steve steve parsed from main class"},{"lineNumber":56,"author":{"gitId":"tjtanjin"},"content":"     */"},{"lineNumber":57,"author":{"gitId":"tjtanjin"},"content":"    public void setSteve(Steve steve, FXMLLoader loader) {"},{"lineNumber":58,"author":{"gitId":"tjtanjin"},"content":"        this.steve \u003d steve;"},{"lineNumber":59,"author":{"gitId":"tjtanjin"},"content":"        fxmlLoader \u003d loader;"},{"lineNumber":60,"author":{"gitId":"tjtanjin"},"content":"    }"},{"lineNumber":61,"author":{"gitId":"tjtanjin"},"content":""},{"lineNumber":62,"author":{"gitId":"tjtanjin"},"content":"    /**"},{"lineNumber":63,"author":{"gitId":"tjtanjin"},"content":"     * Greets the user upon program launch."},{"lineNumber":64,"author":{"gitId":"tjtanjin"},"content":"     */"},{"lineNumber":65,"author":{"gitId":"tjtanjin"},"content":"    public void showWelcomeMsg() {"},{"lineNumber":66,"author":{"gitId":"tjtanjin"},"content":"        showInfoMsg(\"Info: Hello, I am Steve! How can I help you?\");"},{"lineNumber":67,"author":{"gitId":"tjtanjin"},"content":"    }"},{"lineNumber":68,"author":{"gitId":"tjtanjin"},"content":""},{"lineNumber":69,"author":{"gitId":"tjtanjin"},"content":"    /**"},{"lineNumber":70,"author":{"gitId":"tjtanjin"},"content":"     * Prints information to the user."},{"lineNumber":71,"author":{"gitId":"tjtanjin"},"content":"     *"},{"lineNumber":72,"author":{"gitId":"tjtanjin"},"content":"     * @param info information to print"},{"lineNumber":73,"author":{"gitId":"tjtanjin"},"content":"     */"},{"lineNumber":74,"author":{"gitId":"tjtanjin"},"content":"    private void showInfoMsg(String info) {"},{"lineNumber":75,"author":{"gitId":"tjtanjin"},"content":"        dialogContainer.getChildren().add(DialogBox.getSteveDialog(info.split(\" \", 2)[1], STEVE_IMAGE));"},{"lineNumber":76,"author":{"gitId":"tjtanjin"},"content":"    }"},{"lineNumber":77,"author":{"gitId":"tjtanjin"},"content":""},{"lineNumber":78,"author":{"gitId":"tjtanjin"},"content":"    /**"},{"lineNumber":79,"author":{"gitId":"tjtanjin"},"content":"     * Prints error message to the user."},{"lineNumber":80,"author":{"gitId":"tjtanjin"},"content":"     *"},{"lineNumber":81,"author":{"gitId":"tjtanjin"},"content":"     * @param msg error message to print"},{"lineNumber":82,"author":{"gitId":"tjtanjin"},"content":"     */"},{"lineNumber":83,"author":{"gitId":"tjtanjin"},"content":"    private void showErrorMsg(String msg) {"},{"lineNumber":84,"author":{"gitId":"tjtanjin"},"content":"        dialogContainer.getChildren().add(DialogBox.getSteveDialog(msg, STEVE_IMAGE));"},{"lineNumber":85,"author":{"gitId":"tjtanjin"},"content":"    }"},{"lineNumber":86,"author":{"gitId":"tjtanjin"},"content":""},{"lineNumber":87,"author":{"gitId":"tjtanjin"},"content":"    /**"},{"lineNumber":88,"author":{"gitId":"tjtanjin"},"content":"     * Terminates the program with a final message."},{"lineNumber":89,"author":{"gitId":"tjtanjin"},"content":"     *"},{"lineNumber":90,"author":{"gitId":"tjtanjin"},"content":"     * @param crashMsg message to print before termination"},{"lineNumber":91,"author":{"gitId":"tjtanjin"},"content":"     */"},{"lineNumber":92,"author":{"gitId":"tjtanjin"},"content":"    private void showTerminateMsg(String crashMsg) {"},{"lineNumber":93,"author":{"gitId":"tjtanjin"},"content":"        dialogContainer.getChildren().add(DialogBox.getSteveDialog(crashMsg, STEVE_IMAGE));"},{"lineNumber":94,"author":{"gitId":"tjtanjin"},"content":"    }"},{"lineNumber":95,"author":{"gitId":"tjtanjin"},"content":""},{"lineNumber":96,"author":{"gitId":"tjtanjin"},"content":"    /**"},{"lineNumber":97,"author":{"gitId":"tjtanjin"},"content":"     * Handles the dialog container. Clears the user input after processing."},{"lineNumber":98,"author":{"gitId":"tjtanjin"},"content":"     */"},{"lineNumber":99,"author":{"gitId":"tjtanjin"},"content":"    @FXML"},{"lineNumber":100,"author":{"gitId":"tjtanjin"},"content":"    private void handleUserInput() {"},{"lineNumber":101,"author":{"gitId":"tjtanjin"},"content":"        String input \u003d userInput.getText();"},{"lineNumber":102,"author":{"gitId":"tjtanjin"},"content":"        dialogContainer.getChildren().add("},{"lineNumber":103,"author":{"gitId":"tjtanjin"},"content":"                DialogBox.getUserDialog(input, USER_IMAGE)"},{"lineNumber":104,"author":{"gitId":"tjtanjin"},"content":"        );"},{"lineNumber":105,"author":{"gitId":"tjtanjin"},"content":"        userInput.clear();"},{"lineNumber":106,"author":{"gitId":"tjtanjin"},"content":"        showResponse(steve.getParser().parseInput(input));"},{"lineNumber":107,"author":{"gitId":"tjtanjin"},"content":"        //special case of termination command"},{"lineNumber":108,"author":{"gitId":"tjtanjin"},"content":"        if (input.split(\" \", 2)[0].equalsIgnoreCase(\"BYE\")) {"},{"lineNumber":109,"author":{"gitId":"tjtanjin"},"content":"            System.exit(0);"},{"lineNumber":110,"author":{"gitId":"tjtanjin"},"content":"        }"},{"lineNumber":111,"author":{"gitId":"tjtanjin"},"content":"    }"},{"lineNumber":112,"author":{"gitId":"tjtanjin"},"content":""},{"lineNumber":113,"author":{"gitId":"tjtanjin"},"content":"    /**"},{"lineNumber":114,"author":{"gitId":"tjtanjin"},"content":"     * Checks response and print as info or error."},{"lineNumber":115,"author":{"gitId":"tjtanjin"},"content":"     *"},{"lineNumber":116,"author":{"gitId":"tjtanjin"},"content":"     * @param response error message to print"},{"lineNumber":117,"author":{"gitId":"tjtanjin"},"content":"     */"},{"lineNumber":118,"author":{"gitId":"tjtanjin"},"content":"    public void showResponse(String response) {"},{"lineNumber":119,"author":{"gitId":"tjtanjin"},"content":"        if (response.startsWith(\"Error:\")) {"},{"lineNumber":120,"author":{"gitId":"tjtanjin"},"content":"            showErrorMsg(response);"},{"lineNumber":121,"author":{"gitId":"tjtanjin"},"content":"        } else if (response.startsWith(\"Terminated: \")) {"},{"lineNumber":122,"author":{"gitId":"tjtanjin"},"content":"            showTerminateMsg(response);"},{"lineNumber":123,"author":{"gitId":"tjtanjin"},"content":"        } else {"},{"lineNumber":124,"author":{"gitId":"tjtanjin"},"content":"            showInfoMsg(response);"},{"lineNumber":125,"author":{"gitId":"tjtanjin"},"content":"        }"},{"lineNumber":126,"author":{"gitId":"tjtanjin"},"content":"    }"},{"lineNumber":127,"author":{"gitId":"tjtanjin"},"content":"}"}],"authorContributionMap":{"tjtanjin":127}},{"path":"src/main/resources/view/DialogBox.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"tjtanjin"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"},{"lineNumber":2,"author":{"gitId":"tjtanjin"},"content":""},{"lineNumber":3,"author":{"gitId":"tjtanjin"},"content":"\u003c?import javafx.geometry.Insets?\u003e"},{"lineNumber":4,"author":{"gitId":"tjtanjin"},"content":"\u003c?import javafx.scene.control.Label?\u003e"},{"lineNumber":5,"author":{"gitId":"tjtanjin"},"content":"\u003c?import javafx.scene.image.ImageView?\u003e"},{"lineNumber":6,"author":{"gitId":"tjtanjin"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e"},{"lineNumber":7,"author":{"gitId":"tjtanjin"},"content":""},{"lineNumber":8,"author":{"gitId":"tjtanjin"},"content":"\u003cfx:root alignment\u003d\"TOP_RIGHT\" maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\" prefWidth\u003d\"400.0\" type\u003d\"javafx.scene.layout.HBox\" xmlns\u003d\"http://javafx.com/javafx/15.0.1\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e"},{"lineNumber":9,"author":{"gitId":"tjtanjin"},"content":"  \u003cchildren\u003e"},{"lineNumber":10,"author":{"gitId":"tjtanjin"},"content":"    \u003cLabel fx:id\u003d\"dialog\" maxHeight\u003d\"1.7976931348623157E308\" minHeight\u003d\"-Infinity\" style\u003d\"-fx-shape: \u0026quot;M100,100 h200 a20,20 0 0 1 20,20 v200 a20,20 0 0 1 -20,20 h-200 a20,20 0 0 1 -20,-20 v-200 a20,20 0 0 1 20,-20 z\u0026quot;\u0026quot;M100,100 h200 a20,20 0 0 1 20,20 v200 a20,20 0 0 1 -20,20 h-200 a20,20 0 0 1 -20,-20 v-200 a20,20 0 0 1 20,-20 z\u0026quot;; -fx-padding: 30; -fx-background-color: rgba(53,89,119,0.4)rgba(53,89,119,0.4); -fx-background-insets: 5;\" text\u003d\"Label\" wrapText\u003d\"true\" HBox.hgrow\u003d\"ALWAYS\" /\u003e"},{"lineNumber":11,"author":{"gitId":"tjtanjin"},"content":"    \u003cImageView fx:id\u003d\"displayPicture\" fitHeight\u003d\"99.0\" fitWidth\u003d\"99.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\" /\u003e"},{"lineNumber":12,"author":{"gitId":"tjtanjin"},"content":"  \u003c/children\u003e"},{"lineNumber":13,"author":{"gitId":"tjtanjin"},"content":"  \u003cpadding\u003e"},{"lineNumber":14,"author":{"gitId":"tjtanjin"},"content":"    \u003cInsets bottom\u003d\"15.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"15.0\" /\u003e"},{"lineNumber":15,"author":{"gitId":"tjtanjin"},"content":"  \u003c/padding\u003e"},{"lineNumber":16,"author":{"gitId":"tjtanjin"},"content":"\u003c/fx:root\u003e"}],"authorContributionMap":{"tjtanjin":16}},{"path":"src/main/resources/view/UiHandler.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"tjtanjin"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"},{"lineNumber":2,"author":{"gitId":"tjtanjin"},"content":""},{"lineNumber":3,"author":{"gitId":"tjtanjin"},"content":"\u003c?import javafx.scene.control.Button?\u003e"},{"lineNumber":4,"author":{"gitId":"tjtanjin"},"content":"\u003c?import javafx.scene.control.ScrollPane?\u003e"},{"lineNumber":5,"author":{"gitId":"tjtanjin"},"content":"\u003c?import javafx.scene.control.TextField?\u003e"},{"lineNumber":6,"author":{"gitId":"tjtanjin"},"content":"\u003c?import javafx.scene.layout.AnchorPane?\u003e"},{"lineNumber":7,"author":{"gitId":"tjtanjin"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e"},{"lineNumber":8,"author":{"gitId":"tjtanjin"},"content":""},{"lineNumber":9,"author":{"gitId":"tjtanjin"},"content":"\u003cAnchorPane maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefHeight\u003d\"600.0\" prefWidth\u003d\"400.0\" xmlns\u003d\"http://javafx.com/javafx/8.0.171\" xmlns:fx\u003d\"http://javafx.com/fxml/1\" fx:controller\u003d\"com.tjtanjin.steve.ui.UiHandler\"\u003e"},{"lineNumber":10,"author":{"gitId":"tjtanjin"},"content":"  \u003cchildren\u003e"},{"lineNumber":11,"author":{"gitId":"tjtanjin"},"content":"    \u003cTextField fx:id\u003d\"userInput\" layoutY\u003d\"558.0\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"324.0\" AnchorPane.bottomAnchor\u003d\"1.0\" /\u003e"},{"lineNumber":12,"author":{"gitId":"tjtanjin"},"content":"    \u003cButton fx:id\u003d\"sendButton\" layoutX\u003d\"324.0\" layoutY\u003d\"558.0\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"76.0\" text\u003d\"Send\" /\u003e"},{"lineNumber":13,"author":{"gitId":"tjtanjin"},"content":"    \u003cScrollPane fx:id\u003d\"scrollPane\" hbarPolicy\u003d\"NEVER\" hvalue\u003d\"1.0\" prefHeight\u003d\"557.0\" prefWidth\u003d\"400.0\" vvalue\u003d\"1.0\"\u003e"},{"lineNumber":14,"author":{"gitId":"tjtanjin"},"content":"      \u003ccontent\u003e"},{"lineNumber":15,"author":{"gitId":"tjtanjin"},"content":"        \u003cVBox fx:id\u003d\"dialogContainer\" prefHeight\u003d\"552.0\" prefWidth\u003d\"388.0\" /\u003e"},{"lineNumber":16,"author":{"gitId":"tjtanjin"},"content":"      \u003c/content\u003e"},{"lineNumber":17,"author":{"gitId":"tjtanjin"},"content":"    \u003c/ScrollPane\u003e"},{"lineNumber":18,"author":{"gitId":"tjtanjin"},"content":"  \u003c/children\u003e"},{"lineNumber":19,"author":{"gitId":"tjtanjin"},"content":"\u003c/AnchorPane\u003e"}],"authorContributionMap":{"tjtanjin":19}},{"path":"src/test/java/com/tjtanjin/steve/tasks/TaskTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tjtanjin"},"content":"package com.tjtanjin.steve.tasks;"},{"lineNumber":2,"author":{"gitId":"tjtanjin"},"content":""},{"lineNumber":3,"author":{"gitId":"tjtanjin"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;"},{"lineNumber":4,"author":{"gitId":"tjtanjin"},"content":""},{"lineNumber":5,"author":{"gitId":"tjtanjin"},"content":"import java.time.LocalDate;"},{"lineNumber":6,"author":{"gitId":"tjtanjin"},"content":""},{"lineNumber":7,"author":{"gitId":"tjtanjin"},"content":"import org.junit.jupiter.api.Test;"},{"lineNumber":8,"author":{"gitId":"tjtanjin"},"content":""},{"lineNumber":9,"author":{"gitId":"tjtanjin"},"content":"public class TaskTest {"},{"lineNumber":10,"author":{"gitId":"tjtanjin"},"content":"    private final Task TASK \u003d new Task(\"Test Task\", \"incomplete\", \"TODO\");"},{"lineNumber":11,"author":{"gitId":"tjtanjin"},"content":""},{"lineNumber":12,"author":{"gitId":"tjtanjin"},"content":"    @Test"},{"lineNumber":13,"author":{"gitId":"tjtanjin"},"content":"    void getTaskName_whenInvoke_thenOutputTaskName() {"},{"lineNumber":14,"author":{"gitId":"tjtanjin"},"content":"        String expected \u003d \"Test Task\";"},{"lineNumber":15,"author":{"gitId":"tjtanjin"},"content":"        String taskName \u003d TASK.getTaskName();"},{"lineNumber":16,"author":{"gitId":"tjtanjin"},"content":"        assertEquals(expected, taskName);"},{"lineNumber":17,"author":{"gitId":"tjtanjin"},"content":"    }"},{"lineNumber":18,"author":{"gitId":"tjtanjin"},"content":""},{"lineNumber":19,"author":{"gitId":"tjtanjin"},"content":"    @Test"},{"lineNumber":20,"author":{"gitId":"tjtanjin"},"content":"    void getStatus_whenInvoke_thenOutputTaskStatus() {"},{"lineNumber":21,"author":{"gitId":"tjtanjin"},"content":"        String expected \u003d \"incomplete\";"},{"lineNumber":22,"author":{"gitId":"tjtanjin"},"content":"        String taskStatus \u003d TASK.getStatus();"},{"lineNumber":23,"author":{"gitId":"tjtanjin"},"content":"        assertEquals(expected, taskStatus);"},{"lineNumber":24,"author":{"gitId":"tjtanjin"},"content":"    }"},{"lineNumber":25,"author":{"gitId":"tjtanjin"},"content":""},{"lineNumber":26,"author":{"gitId":"tjtanjin"},"content":"    @Test"},{"lineNumber":27,"author":{"gitId":"tjtanjin"},"content":"    void getType_whenInvoke_thenOutputTaskType() {"},{"lineNumber":28,"author":{"gitId":"tjtanjin"},"content":"        String expected \u003d \"TODO\";"},{"lineNumber":29,"author":{"gitId":"tjtanjin"},"content":"        String taskType \u003d TASK.getType();"},{"lineNumber":30,"author":{"gitId":"tjtanjin"},"content":"        assertEquals(expected, taskType);"},{"lineNumber":31,"author":{"gitId":"tjtanjin"},"content":"    }"},{"lineNumber":32,"author":{"gitId":"tjtanjin"},"content":""},{"lineNumber":33,"author":{"gitId":"tjtanjin"},"content":"    @Test"},{"lineNumber":34,"author":{"gitId":"tjtanjin"},"content":"    void getDate_whenInvoke_thenOutputTaskDate() {"},{"lineNumber":35,"author":{"gitId":"tjtanjin"},"content":"        LocalDate[] expected \u003d new LocalDate[1];"},{"lineNumber":36,"author":{"gitId":"tjtanjin"},"content":"        LocalDate[] taskDate \u003d TASK.getDates();"},{"lineNumber":37,"author":{"gitId":"tjtanjin"},"content":"        assertEquals(expected[0], taskDate[0]);"},{"lineNumber":38,"author":{"gitId":"tjtanjin"},"content":"    }"},{"lineNumber":39,"author":{"gitId":"tjtanjin"},"content":""},{"lineNumber":40,"author":{"gitId":"tjtanjin"},"content":"    @Test"},{"lineNumber":41,"author":{"gitId":"tjtanjin"},"content":"    void markCompleted() {"},{"lineNumber":42,"author":{"gitId":"tjtanjin"},"content":"        String expected \u003d \"complete\";"},{"lineNumber":43,"author":{"gitId":"tjtanjin"},"content":"        TASK.markCompleted();"},{"lineNumber":44,"author":{"gitId":"tjtanjin"},"content":"        String taskStatus \u003d TASK.getStatus();"},{"lineNumber":45,"author":{"gitId":"tjtanjin"},"content":"        assertEquals(expected, taskStatus);"},{"lineNumber":46,"author":{"gitId":"tjtanjin"},"content":"    }"},{"lineNumber":47,"author":{"gitId":"tjtanjin"},"content":"}"}],"authorContributionMap":{"tjtanjin":47}},{"path":"src/test/java/com/tjtanjin/steve/ui/UiHandlerTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tjtanjin"},"content":"package com.tjtanjin.steve.ui;"},{"lineNumber":2,"author":{"gitId":"tjtanjin"},"content":""},{"lineNumber":3,"author":{"gitId":"tjtanjin"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;"},{"lineNumber":4,"author":{"gitId":"tjtanjin"},"content":""},{"lineNumber":5,"author":{"gitId":"tjtanjin"},"content":"import java.io.ByteArrayOutputStream;"},{"lineNumber":6,"author":{"gitId":"tjtanjin"},"content":"import java.io.PrintStream;"},{"lineNumber":7,"author":{"gitId":"tjtanjin"},"content":""},{"lineNumber":8,"author":{"gitId":"tjtanjin"},"content":"import org.junit.jupiter.api.AfterEach;"},{"lineNumber":9,"author":{"gitId":"tjtanjin"},"content":"import org.junit.jupiter.api.BeforeEach;"},{"lineNumber":10,"author":{"gitId":"tjtanjin"},"content":"import org.junit.jupiter.api.Test;"},{"lineNumber":11,"author":{"gitId":"tjtanjin"},"content":""},{"lineNumber":12,"author":{"gitId":"tjtanjin"},"content":"import javafx.scene.layout.AnchorPane;"},{"lineNumber":13,"author":{"gitId":"tjtanjin"},"content":""},{"lineNumber":14,"author":{"gitId":"tjtanjin"},"content":"public class UiHandlerTest extends AnchorPane {"},{"lineNumber":15,"author":{"gitId":"tjtanjin"},"content":""},{"lineNumber":16,"author":{"gitId":"tjtanjin"},"content":"    //reused from https://www.baeldung.com/java-testing-system-out-println"},{"lineNumber":17,"author":{"gitId":"tjtanjin"},"content":"    private final PrintStream STANDARD_OUT \u003d System.out;"},{"lineNumber":18,"author":{"gitId":"tjtanjin"},"content":"    private final ByteArrayOutputStream OUTPUT_STREAM_CAPTOR \u003d new ByteArrayOutputStream();"},{"lineNumber":19,"author":{"gitId":"tjtanjin"},"content":"    private final UiHandler UI_HANDLER \u003d new UiHandler();"},{"lineNumber":20,"author":{"gitId":"tjtanjin"},"content":""},{"lineNumber":21,"author":{"gitId":"tjtanjin"},"content":"    @BeforeEach"},{"lineNumber":22,"author":{"gitId":"tjtanjin"},"content":"    public void setUp() {"},{"lineNumber":23,"author":{"gitId":"tjtanjin"},"content":"        System.setOut(new PrintStream(OUTPUT_STREAM_CAPTOR));"},{"lineNumber":24,"author":{"gitId":"tjtanjin"},"content":"    }"},{"lineNumber":25,"author":{"gitId":"tjtanjin"},"content":""},{"lineNumber":26,"author":{"gitId":"tjtanjin"},"content":"    @AfterEach"},{"lineNumber":27,"author":{"gitId":"tjtanjin"},"content":"    public void tearDown() {"},{"lineNumber":28,"author":{"gitId":"tjtanjin"},"content":"        System.setOut(STANDARD_OUT);"},{"lineNumber":29,"author":{"gitId":"tjtanjin"},"content":"    }"},{"lineNumber":30,"author":{"gitId":"tjtanjin"},"content":""},{"lineNumber":31,"author":{"gitId":"tjtanjin"},"content":"    @Test"},{"lineNumber":32,"author":{"gitId":"tjtanjin"},"content":"    void showWelcome_whenInvokePrintln_thenOutputCaptorSuccess() {"},{"lineNumber":33,"author":{"gitId":"tjtanjin"},"content":"        String logo \u003d \" ____        _        \\n\""},{"lineNumber":34,"author":{"gitId":"tjtanjin"},"content":"                + \"|  _ \\\\ _   _| | _____ \\n\""},{"lineNumber":35,"author":{"gitId":"tjtanjin"},"content":"                + \"| | | | | | | |/ / _ \\\\\\n\""},{"lineNumber":36,"author":{"gitId":"tjtanjin"},"content":"                + \"| |_| | |_| |   \u003c  __/\\n\""},{"lineNumber":37,"author":{"gitId":"tjtanjin"},"content":"                + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\";"},{"lineNumber":38,"author":{"gitId":"tjtanjin"},"content":"        String expectedMsg \u003d \"Hello from\\n\" + logo + \"\\nWhat can I do for you?\";"},{"lineNumber":39,"author":{"gitId":"tjtanjin"},"content":"        UI_HANDLER.showWelcome();"},{"lineNumber":40,"author":{"gitId":"tjtanjin"},"content":"        assertEquals(expectedMsg, OUTPUT_STREAM_CAPTOR.toString().trim());"},{"lineNumber":41,"author":{"gitId":"tjtanjin"},"content":"    }"},{"lineNumber":42,"author":{"gitId":"tjtanjin"},"content":""},{"lineNumber":43,"author":{"gitId":"tjtanjin"},"content":"    @Test"},{"lineNumber":44,"author":{"gitId":"tjtanjin"},"content":"    void showInfo_whenInvokePrintln_thenOutputCaptorSuccess() {"},{"lineNumber":45,"author":{"gitId":"tjtanjin"},"content":"        String expectedMsg \u003d \"Test print information message!\";"},{"lineNumber":46,"author":{"gitId":"tjtanjin"},"content":"        UI_HANDLER.showResponse(expectedMsg);"},{"lineNumber":47,"author":{"gitId":"tjtanjin"},"content":"        assertEquals(expectedMsg, OUTPUT_STREAM_CAPTOR.toString().trim());"},{"lineNumber":48,"author":{"gitId":"tjtanjin"},"content":"    }"},{"lineNumber":49,"author":{"gitId":"tjtanjin"},"content":""},{"lineNumber":50,"author":{"gitId":"tjtanjin"},"content":"    @Test"},{"lineNumber":51,"author":{"gitId":"tjtanjin"},"content":"    void showError_whenInvokePrintln_thenOutputCaptorSuccess() {"},{"lineNumber":52,"author":{"gitId":"tjtanjin"},"content":"        String errMsg \u003d \"Test print error message!\";"},{"lineNumber":53,"author":{"gitId":"tjtanjin"},"content":"        String expectedMsg \u003d \"Error: \" + \"Test print error message!\";"},{"lineNumber":54,"author":{"gitId":"tjtanjin"},"content":"        UI_HANDLER.showResponse(errMsg);"},{"lineNumber":55,"author":{"gitId":"tjtanjin"},"content":"        assertEquals(expectedMsg, OUTPUT_STREAM_CAPTOR.toString().trim());"},{"lineNumber":56,"author":{"gitId":"tjtanjin"},"content":"    }"},{"lineNumber":57,"author":{"gitId":"tjtanjin"},"content":"}"}],"authorContributionMap":{"tjtanjin":57}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"tjtanjin"},"content":"come and catch me"},{"lineNumber":2,"author":{"gitId":"tjtanjin"},"content":"todo play catching"},{"lineNumber":3,"author":{"gitId":"tjtanjin"},"content":"deadline read book /by sunday 3pm"},{"lineNumber":4,"author":{"gitId":"tjtanjin"},"content":"event swimming class /from monday 4-6pm"},{"lineNumber":5,"author":{"gitId":"tjtanjin"},"content":"event swimming class /from 2020-03-03 /to 2020-03-03"},{"lineNumber":6,"author":{"gitId":"tjtanjin"},"content":"list"},{"lineNumber":7,"author":{"gitId":"tjtanjin"},"content":"done 1"},{"lineNumber":8,"author":{"gitId":"tjtanjin"},"content":"list"},{"lineNumber":9,"author":{"gitId":"tjtanjin"},"content":"done 1"},{"lineNumber":10,"author":{"gitId":"tjtanjin"},"content":"list"},{"lineNumber":11,"author":{"gitId":"tjtanjin"},"content":"done 2"},{"lineNumber":12,"author":{"gitId":"tjtanjin"},"content":"list"},{"lineNumber":13,"author":{"gitId":"tjtanjin"},"content":"delete 1"},{"lineNumber":14,"author":{"gitId":"tjtanjin"},"content":"list"},{"lineNumber":15,"author":{"gitId":"tjtanjin"},"content":"delete 2"},{"lineNumber":16,"author":{"gitId":"tjtanjin"},"content":"list"},{"lineNumber":17,"author":{"gitId":"tjtanjin"},"content":"delete 1"},{"lineNumber":18,"author":{"gitId":"tjtanjin"},"content":"todo final one"},{"lineNumber":19,"author":{"gitId":"tjtanjin"},"content":"todo really meh"},{"lineNumber":20,"author":{"gitId":"tjtanjin"},"content":"find final"},{"lineNumber":21,"author":{"gitId":"tjtanjin"},"content":"list"},{"lineNumber":22,"author":{"gitId":"tjtanjin"},"content":"delete 1"},{"lineNumber":23,"author":{"gitId":"tjtanjin"},"content":"delete 1"},{"lineNumber":24,"author":{"gitId":"tjtanjin"},"content":"list"},{"lineNumber":25,"author":{"gitId":"tjtanjin"},"content":"bye"}],"authorContributionMap":{"tjtanjin":25}},{"path":"text-ui-test/runtest.sh","fileType":"sh","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"#!/usr/bin/env bash"},{"lineNumber":2,"author":{"gitId":"-"},"content":""},{"lineNumber":3,"author":{"gitId":"-"},"content":"# create bin directory if it doesn\u0027t exist"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if [ ! -d \"../bin\" ]"},{"lineNumber":5,"author":{"gitId":"-"},"content":"then"},{"lineNumber":6,"author":{"gitId":"-"},"content":"    mkdir ../bin"},{"lineNumber":7,"author":{"gitId":"-"},"content":"fi"},{"lineNumber":8,"author":{"gitId":"-"},"content":""},{"lineNumber":9,"author":{"gitId":"tjtanjin"},"content":"# create data directory and tasks.json if it doesn\u0027t exist (for testing consistency)"},{"lineNumber":10,"author":{"gitId":"tjtanjin"},"content":"if [ ! -d \"./data\" ]"},{"lineNumber":11,"author":{"gitId":"tjtanjin"},"content":"then"},{"lineNumber":12,"author":{"gitId":"tjtanjin"},"content":"    mkdir ./data"},{"lineNumber":13,"author":{"gitId":"tjtanjin"},"content":"    echo \"[]\" \u003e ./data/tasks.json"},{"lineNumber":14,"author":{"gitId":"tjtanjin"},"content":"fi"},{"lineNumber":15,"author":{"gitId":"tjtanjin"},"content":""},{"lineNumber":16,"author":{"gitId":"-"},"content":"# delete output from previous run"},{"lineNumber":17,"author":{"gitId":"-"},"content":"if [ -e \"./ACTUAL.TXT\" ]"},{"lineNumber":18,"author":{"gitId":"-"},"content":"then"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    rm ACTUAL.TXT"},{"lineNumber":20,"author":{"gitId":"-"},"content":"fi"},{"lineNumber":21,"author":{"gitId":"-"},"content":""},{"lineNumber":22,"author":{"gitId":"tjtanjin"},"content":"# modified to compile with json-simple"},{"lineNumber":23,"author":{"gitId":"-"},"content":"# compile the code into the bin folder, terminates if error occurred"},{"lineNumber":24,"author":{"gitId":"tjtanjin"},"content":"if ! javac -cp ~/.gradle/caches/modules-2/files-2.1/com.googlecode.json-simple/json-simple/1.1.1/c9ad4a0850ab676c5c64461a05ca524cdfff59f1/json-simple-1.1.1.jar:./ ../src/main/java/com/tjtanjin/steve/*.java ../src/main/java/com/tjtanjin/steve/*/*.java -Xlint:none -d ../bin ../src/main/java/com/tjtanjin/steve/*.java"},{"lineNumber":25,"author":{"gitId":"-"},"content":"then"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    echo \"********** BUILD FAILURE **********\""},{"lineNumber":27,"author":{"gitId":"-"},"content":"    exit 1"},{"lineNumber":28,"author":{"gitId":"-"},"content":"fi"},{"lineNumber":29,"author":{"gitId":"-"},"content":""},{"lineNumber":30,"author":{"gitId":"tjtanjin"},"content":"# modified to run with json-simple"},{"lineNumber":31,"author":{"gitId":"-"},"content":"# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"},{"lineNumber":32,"author":{"gitId":"tjtanjin"},"content":"java -cp ~/.gradle/caches/modules-2/files-2.1/com.googlecode.json-simple/json-simple/1.1.1/c9ad4a0850ab676c5c64461a05ca524cdfff59f1/json-simple-1.1.1.jar:./:../bin com.tjtanjin.steve.Steve \u003c input.txt \u003e ACTUAL.TXT"},{"lineNumber":33,"author":{"gitId":"-"},"content":""},{"lineNumber":34,"author":{"gitId":"-"},"content":"# convert to UNIX format"},{"lineNumber":35,"author":{"gitId":"-"},"content":"cp EXPECTED.TXT EXPECTED-UNIX.TXT"},{"lineNumber":36,"author":{"gitId":"-"},"content":"dos2unix ACTUAL.TXT EXPECTED-UNIX.TXT"},{"lineNumber":37,"author":{"gitId":"-"},"content":""},{"lineNumber":38,"author":{"gitId":"-"},"content":"# compare the output to the expected output"},{"lineNumber":39,"author":{"gitId":"-"},"content":"diff ACTUAL.TXT EXPECTED-UNIX.TXT"},{"lineNumber":40,"author":{"gitId":"-"},"content":"if [ $? -eq 0 ]"},{"lineNumber":41,"author":{"gitId":"-"},"content":"then"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    echo \"Test result: PASSED\""},{"lineNumber":43,"author":{"gitId":"-"},"content":"    exit 0"},{"lineNumber":44,"author":{"gitId":"-"},"content":"else"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    echo \"Test result: FAILED\""},{"lineNumber":46,"author":{"gitId":"-"},"content":"    exit 1"},{"lineNumber":47,"author":{"gitId":"-"},"content":"fi"}],"authorContributionMap":{"-":36,"tjtanjin":11}}]
