[{"path":"README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"tjtanjin"},"content":"\u003cp align\u003d\"center\"\u003e"},{"lineNumber":2,"author":{"gitId":"tjtanjin"},"content":"  \u003cimg src\u003d\"https://raw.githubusercontent.com/tjtanjin/ip/master/docs/images/steve.png\" /\u003e"},{"lineNumber":3,"author":{"gitId":"tjtanjin"},"content":"  \u003ch1 align\u003d\"center\"\u003eSteve\u003c/h1\u003e"},{"lineNumber":4,"author":{"gitId":"tjtanjin"},"content":"\u003c/p\u003e"},{"lineNumber":5,"author":{"gitId":"-"},"content":""},{"lineNumber":6,"author":{"gitId":"tjtanjin"},"content":"\u003cp align\u003d\"center\"\u003e"},{"lineNumber":7,"author":{"gitId":"tjtanjin"},"content":"  \u003ca href\u003d\"https://github.com/tjtanjin/ip/actions\"\u003e \u003cimg src\u003d\"https://github.com/tjtanjin/ip/workflows/Java%20CI/badge.svg\" /\u003e \u003c/a\u003e"},{"lineNumber":8,"author":{"gitId":"tjtanjin"},"content":"\u003c/p\u003e"},{"lineNumber":9,"author":{"gitId":"tjtanjin"},"content":""},{"lineNumber":10,"author":{"gitId":"tjtanjin"},"content":"## Table of Contents"},{"lineNumber":11,"author":{"gitId":"tjtanjin"},"content":"* [Introduction](#introduction)"},{"lineNumber":12,"author":{"gitId":"tjtanjin"},"content":"* [Features](#features)"},{"lineNumber":13,"author":{"gitId":"tjtanjin"},"content":"* [Technologies](#technologies)"},{"lineNumber":14,"author":{"gitId":"tjtanjin"},"content":"* [Setup](#setup)"},{"lineNumber":15,"author":{"gitId":"tjtanjin"},"content":"* [Team](#team)"},{"lineNumber":16,"author":{"gitId":"tjtanjin"},"content":"* [Contributing](#contributing)"},{"lineNumber":17,"author":{"gitId":"tjtanjin"},"content":"* [Others](#others)"},{"lineNumber":18,"author":{"gitId":"-"},"content":""},{"lineNumber":19,"author":{"gitId":"tjtanjin"},"content":"### Introduction"},{"lineNumber":20,"author":{"gitId":"tjtanjin"},"content":"Steve is a simple task tracker done as part of the CS2103T module in NUS. The latest releases for download are available [here](https://github.com/tjtanjin/ip/releases/)."},{"lineNumber":21,"author":{"gitId":"-"},"content":""},{"lineNumber":22,"author":{"gitId":"tjtanjin"},"content":"### Features"},{"lineNumber":23,"author":{"gitId":"tjtanjin"},"content":"Steve runs locally on your computer and offers support for the following task types:"},{"lineNumber":24,"author":{"gitId":"tjtanjin"},"content":"```"},{"lineNumber":25,"author":{"gitId":"tjtanjin"},"content":"1) Todo (no due dates)"},{"lineNumber":26,"author":{"gitId":"tjtanjin"},"content":"2) Deadline (specifies a due date)"},{"lineNumber":27,"author":{"gitId":"tjtanjin"},"content":"3) Event (specifies start date and end date)"},{"lineNumber":28,"author":{"gitId":"tjtanjin"},"content":"```"},{"lineNumber":29,"author":{"gitId":"tjtanjin"},"content":"For more details on the features and their usage, please refer to the [user guide](https://tjtanjin.github.io/ip)."},{"lineNumber":30,"author":{"gitId":"tjtanjin"},"content":""},{"lineNumber":31,"author":{"gitId":"tjtanjin"},"content":"### Technologies"},{"lineNumber":32,"author":{"gitId":"tjtanjin"},"content":"Technologies used by Steve are as below:"},{"lineNumber":33,"author":{"gitId":"tjtanjin"},"content":"##### Done with:"},{"lineNumber":34,"author":{"gitId":"tjtanjin"},"content":"\u003cp align\u003d\"center\"\u003e"},{"lineNumber":35,"author":{"gitId":"tjtanjin"},"content":"  \u003cimg height\u003d\"150\" width\u003d\"150\" src\u003d\"https://i.imgur.com/5zlrxVc.png\"/\u003e"},{"lineNumber":36,"author":{"gitId":"tjtanjin"},"content":"\u003c/p\u003e"},{"lineNumber":37,"author":{"gitId":"tjtanjin"},"content":"\u003cp align\u003d\"center\"\u003e"},{"lineNumber":38,"author":{"gitId":"tjtanjin"},"content":"Java"},{"lineNumber":39,"author":{"gitId":"tjtanjin"},"content":"\u003c/p\u003e"},{"lineNumber":40,"author":{"gitId":"tjtanjin"},"content":""},{"lineNumber":41,"author":{"gitId":"tjtanjin"},"content":"##### Deployed on:"},{"lineNumber":42,"author":{"gitId":"tjtanjin"},"content":"\u003cp align\u003d\"center\"\u003e"},{"lineNumber":43,"author":{"gitId":"tjtanjin"},"content":"None (Local Application)"},{"lineNumber":44,"author":{"gitId":"tjtanjin"},"content":"\u003c/p\u003e"},{"lineNumber":45,"author":{"gitId":"tjtanjin"},"content":""},{"lineNumber":46,"author":{"gitId":"tjtanjin"},"content":"##### Project Repository"},{"lineNumber":47,"author":{"gitId":"tjtanjin"},"content":"```"},{"lineNumber":48,"author":{"gitId":"tjtanjin"},"content":"https://github.com/tjtanjin/ip"},{"lineNumber":49,"author":{"gitId":"tjtanjin"},"content":"```"},{"lineNumber":50,"author":{"gitId":"-"},"content":""},{"lineNumber":51,"author":{"gitId":"tjtanjin"},"content":"### Setup"},{"lineNumber":52,"author":{"gitId":"tjtanjin"},"content":"While the simplest way to work with Steve is to download the latest jar release, the following section will guide you through setting up Steve as a project on IntelliJ for the more adventurous!"},{"lineNumber":53,"author":{"gitId":"tjtanjin"},"content":"* First, cd to the directory of where you wish to store the project and clone this repository. An example is provided below:"},{"lineNumber":54,"author":{"gitId":"-"},"content":"```"},{"lineNumber":55,"author":{"gitId":"tjtanjin"},"content":"$ cd /home/user/exampleuser/projects/"},{"lineNumber":56,"author":{"gitId":"tjtanjin"},"content":"$ git clone https://github.com/tjtanjin/ip.git"},{"lineNumber":57,"author":{"gitId":"-"},"content":"```"},{"lineNumber":58,"author":{"gitId":"tjtanjin"},"content":"* Next, open Intellij and select the project directory. Configure the project to use **JDK 11** (not other versions) as explained in [here](https://www.jetbrains.com/help/idea/sdk.html#set-up-jdk)."},{"lineNumber":59,"author":{"gitId":"tjtanjin"},"content":"* Finally, locate the `src/main/java/com/tjtanjin/steve/Launcher.java` file, right-click it, and choose `Run Launcher.main()`. If the setup is correct, you should see something like the below:"},{"lineNumber":60,"author":{"gitId":"tjtanjin"},"content":"\u003cp align\u003d\"center\"\u003e"},{"lineNumber":61,"author":{"gitId":"tjtanjin"},"content":"  \u003cimg height\u003d\"740\" width\u003d\"512\" src\u003d\"https://raw.githubusercontent.com/tjtanjin/ip/master/docs/images/welcome_screen.png\"\u003e"},{"lineNumber":62,"author":{"gitId":"tjtanjin"},"content":"\u003c/p\u003e"},{"lineNumber":63,"author":{"gitId":"tjtanjin"},"content":""},{"lineNumber":64,"author":{"gitId":"tjtanjin"},"content":"### Team"},{"lineNumber":65,"author":{"gitId":"tjtanjin"},"content":"* [Tan Jin](https://github.com/tjtanjin)"},{"lineNumber":66,"author":{"gitId":"tjtanjin"},"content":""},{"lineNumber":67,"author":{"gitId":"tjtanjin"},"content":"### Contributing"},{"lineNumber":68,"author":{"gitId":"tjtanjin"},"content":"If you have code to contribute to the project, open a pull request and describe clearly the changes and what they are intended to do (enhancement, bug fixes etc). Alternatively, you may simply raise bugs or suggestions by opening an issue."},{"lineNumber":69,"author":{"gitId":"tjtanjin"},"content":""},{"lineNumber":70,"author":{"gitId":"tjtanjin"},"content":"### Others"},{"lineNumber":71,"author":{"gitId":"tjtanjin"},"content":"For any questions regarding the implementation of the project, please drop an email to: cjtanjin@gmail.com."}],"authorContributionMap":{"tjtanjin":65,"-":6}},{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027checkstyle\u0027"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027"},{"lineNumber":6,"author":{"gitId":"-"},"content":"}"},{"lineNumber":7,"author":{"gitId":"-"},"content":""},{"lineNumber":8,"author":{"gitId":"-"},"content":"repositories {"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    mavenCentral()"},{"lineNumber":10,"author":{"gitId":"-"},"content":"}"},{"lineNumber":11,"author":{"gitId":"-"},"content":""},{"lineNumber":12,"author":{"gitId":"-"},"content":"dependencies {"},{"lineNumber":13,"author":{"gitId":"tjtanjin"},"content":"    String javaFxVersion \u003d \u002711\u0027"},{"lineNumber":14,"author":{"gitId":"tjtanjin"},"content":""},{"lineNumber":15,"author":{"gitId":"tjtanjin"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027"},{"lineNumber":16,"author":{"gitId":"tjtanjin"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"},{"lineNumber":17,"author":{"gitId":"tjtanjin"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"},{"lineNumber":18,"author":{"gitId":"tjtanjin"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027"},{"lineNumber":19,"author":{"gitId":"tjtanjin"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"},{"lineNumber":20,"author":{"gitId":"tjtanjin"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"},{"lineNumber":21,"author":{"gitId":"tjtanjin"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027"},{"lineNumber":22,"author":{"gitId":"tjtanjin"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"},{"lineNumber":23,"author":{"gitId":"tjtanjin"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"},{"lineNumber":24,"author":{"gitId":"tjtanjin"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027"},{"lineNumber":25,"author":{"gitId":"tjtanjin"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"},{"lineNumber":26,"author":{"gitId":"tjtanjin"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"},{"lineNumber":27,"author":{"gitId":"tjtanjin"},"content":""},{"lineNumber":28,"author":{"gitId":"tjtanjin"},"content":"    implementation \u0027com.googlecode.json-simple:json-simple:1.1.1\u0027"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.5.0\u0027"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.5.0\u0027"},{"lineNumber":31,"author":{"gitId":"-"},"content":"}"},{"lineNumber":32,"author":{"gitId":"-"},"content":""},{"lineNumber":33,"author":{"gitId":"-"},"content":"test {"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    useJUnitPlatform()"},{"lineNumber":35,"author":{"gitId":"-"},"content":""},{"lineNumber":36,"author":{"gitId":"-"},"content":"    testLogging {"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\""},{"lineNumber":38,"author":{"gitId":"-"},"content":""},{"lineNumber":39,"author":{"gitId":"-"},"content":"        showExceptions true"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\""},{"lineNumber":41,"author":{"gitId":"-"},"content":"        showCauses true"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        showStackTraces true"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":45,"author":{"gitId":"-"},"content":"}"},{"lineNumber":46,"author":{"gitId":"-"},"content":""},{"lineNumber":47,"author":{"gitId":"-"},"content":"application {"},{"lineNumber":48,"author":{"gitId":"tjtanjin"},"content":"    mainClassName \u003d \"com.tjtanjin.steve.Launcher\""},{"lineNumber":49,"author":{"gitId":"-"},"content":"}"},{"lineNumber":50,"author":{"gitId":"-"},"content":""},{"lineNumber":51,"author":{"gitId":"-"},"content":"shadowJar {"},{"lineNumber":52,"author":{"gitId":"tjtanjin"},"content":"    archiveBaseName \u003d \"steve\""},{"lineNumber":53,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null"},{"lineNumber":54,"author":{"gitId":"-"},"content":"}"},{"lineNumber":55,"author":{"gitId":"-"},"content":""},{"lineNumber":56,"author":{"gitId":"-"},"content":"checkstyle {"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    toolVersion \u003d \u00278.29\u0027"},{"lineNumber":58,"author":{"gitId":"-"},"content":"}"},{"lineNumber":59,"author":{"gitId":"-"},"content":""},{"lineNumber":60,"author":{"gitId":"-"},"content":"run {"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in"},{"lineNumber":62,"author":{"gitId":"tjtanjin"},"content":"    enableAssertions \u003d true"},{"lineNumber":63,"author":{"gitId":"-"},"content":"}"}],"authorContributionMap":{"-":44,"tjtanjin":19}},{"path":"docs/README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"tjtanjin"},"content":"\u003cp align\u003d\"center\"\u003e"},{"lineNumber":2,"author":{"gitId":"tjtanjin"},"content":"  \u003cimg src\u003d\"https://raw.githubusercontent.com/tjtanjin/ip/master/docs/images/steve.png\"\u003e"},{"lineNumber":3,"author":{"gitId":"tjtanjin"},"content":"  \u003ch1 align\u003d\"center\"\u003eSteve User Guide\u003c/h1\u003e"},{"lineNumber":4,"author":{"gitId":"tjtanjin"},"content":"\u003c/p\u003e"},{"lineNumber":5,"author":{"gitId":"-"},"content":""},{"lineNumber":6,"author":{"gitId":"tjtanjin"},"content":"## Introduction"},{"lineNumber":7,"author":{"gitId":"tjtanjin"},"content":"Steve is a simple task tracker done as part of the CS2103T module in NUS. The latest releases for download are available [here](https://github.com/tjtanjin/ip/releases/)."},{"lineNumber":8,"author":{"gitId":"tjtanjin"},"content":"\u003cbr/\u003e\u003cbr/\u003e"},{"lineNumber":9,"author":{"gitId":"-"},"content":""},{"lineNumber":10,"author":{"gitId":"tjtanjin"},"content":"## Content Page"},{"lineNumber":11,"author":{"gitId":"tjtanjin"},"content":"* [Create Todo Task](#create-todo-task)"},{"lineNumber":12,"author":{"gitId":"tjtanjin"},"content":"* [Create Deadline Task](#create-deadline-task)"},{"lineNumber":13,"author":{"gitId":"tjtanjin"},"content":"* [Create Event Task](#create-event-task)"},{"lineNumber":14,"author":{"gitId":"tjtanjin"},"content":"* [Delete Task](#delete-task)"},{"lineNumber":15,"author":{"gitId":"tjtanjin"},"content":"* [Find Task](#find-task)"},{"lineNumber":16,"author":{"gitId":"tjtanjin"},"content":"* [Mark Task As Complete](#mark-task-as-complete)"},{"lineNumber":17,"author":{"gitId":"tjtanjin"},"content":"* [Undo Task Modification](#undo-task-modification)"},{"lineNumber":18,"author":{"gitId":"tjtanjin"},"content":"* [View All Tasks](#view-all-tasks)"},{"lineNumber":19,"author":{"gitId":"tjtanjin"},"content":"* [View Command Help](#view-command-help)"},{"lineNumber":20,"author":{"gitId":"tjtanjin"},"content":"* [Exit Application](#exit-application)"},{"lineNumber":21,"author":{"gitId":"tjtanjin"},"content":"\u003cbr/\u003e\u003cbr/\u003e"},{"lineNumber":22,"author":{"gitId":"-"},"content":""},{"lineNumber":23,"author":{"gitId":"-"},"content":"## Features"},{"lineNumber":24,"author":{"gitId":"tjtanjin"},"content":"### Create Todo Task"},{"lineNumber":25,"author":{"gitId":"tjtanjin"},"content":"* Description: Creates a todo task."},{"lineNumber":26,"author":{"gitId":"tjtanjin"},"content":"* Format: `todo \u003ctask description\u003e`"},{"lineNumber":27,"author":{"gitId":"tjtanjin"},"content":"* Example: `todo finish ip project`"},{"lineNumber":28,"author":{"gitId":"tjtanjin"},"content":"\u003cp align\u003d\"center\"\u003e"},{"lineNumber":29,"author":{"gitId":"tjtanjin"},"content":"  \u003cimg height\u003d\"740\" width\u003d\"512\" src\u003d\"https://raw.githubusercontent.com/tjtanjin/ip/master/docs/images/create_todo_task.png\"\u003e"},{"lineNumber":30,"author":{"gitId":"tjtanjin"},"content":"\u003c/p\u003e"},{"lineNumber":31,"author":{"gitId":"-"},"content":""},{"lineNumber":32,"author":{"gitId":"tjtanjin"},"content":"### Create Deadline Task"},{"lineNumber":33,"author":{"gitId":"tjtanjin"},"content":"* Description: Creates a deadline task with a due date."},{"lineNumber":34,"author":{"gitId":"tjtanjin"},"content":"* Format: `deadline \u003ctask description\u003e /by YYYY-MM-DD`"},{"lineNumber":35,"author":{"gitId":"tjtanjin"},"content":"* Example: `deadline finish ip project /by 2021-02-17`"},{"lineNumber":36,"author":{"gitId":"tjtanjin"},"content":"\u003cp align\u003d\"center\"\u003e"},{"lineNumber":37,"author":{"gitId":"tjtanjin"},"content":"  \u003cimg height\u003d\"740\" width\u003d\"512\" src\u003d\"https://raw.githubusercontent.com/tjtanjin/ip/master/docs/images/create_deadline_task.png\"\u003e"},{"lineNumber":38,"author":{"gitId":"tjtanjin"},"content":"\u003c/p\u003e"},{"lineNumber":39,"author":{"gitId":"-"},"content":""},{"lineNumber":40,"author":{"gitId":"tjtanjin"},"content":"### Create Event Task"},{"lineNumber":41,"author":{"gitId":"tjtanjin"},"content":"* Description: Creates an event task with a start date and end date."},{"lineNumber":42,"author":{"gitId":"tjtanjin"},"content":"* Format: `event \u003ctask description\u003e /from YYYY-MM-DD /to YYYY-MM-DD `"},{"lineNumber":43,"author":{"gitId":"tjtanjin"},"content":"* Example: `event do assignment /from 2021-02-17 /to 2021-02-17`"},{"lineNumber":44,"author":{"gitId":"tjtanjin"},"content":"\u003cp align\u003d\"center\"\u003e"},{"lineNumber":45,"author":{"gitId":"tjtanjin"},"content":"  \u003cimg height\u003d\"740\" width\u003d\"512\" src\u003d\"https://raw.githubusercontent.com/tjtanjin/ip/master/docs/images/create_event_task.png\"\u003e"},{"lineNumber":46,"author":{"gitId":"tjtanjin"},"content":"\u003c/p\u003e"},{"lineNumber":47,"author":{"gitId":"-"},"content":""},{"lineNumber":48,"author":{"gitId":"tjtanjin"},"content":"### Delete Task"},{"lineNumber":49,"author":{"gitId":"tjtanjin"},"content":"* Description: Deletes the task with the matching index given."},{"lineNumber":50,"author":{"gitId":"tjtanjin"},"content":"* Format: `delete \u003ctask index\u003e`"},{"lineNumber":51,"author":{"gitId":"tjtanjin"},"content":"* Example: `delete 1`"},{"lineNumber":52,"author":{"gitId":"tjtanjin"},"content":"\u003cp align\u003d\"center\"\u003e"},{"lineNumber":53,"author":{"gitId":"tjtanjin"},"content":"  \u003cimg height\u003d\"740\" width\u003d\"512\" src\u003d\"https://raw.githubusercontent.com/tjtanjin/ip/master/docs/images/delete_task.png\"\u003e"},{"lineNumber":54,"author":{"gitId":"tjtanjin"},"content":"\u003c/p\u003e"},{"lineNumber":55,"author":{"gitId":"-"},"content":""},{"lineNumber":56,"author":{"gitId":"tjtanjin"},"content":"### Find Task"},{"lineNumber":57,"author":{"gitId":"tjtanjin"},"content":"* Description: Finds all task(s) with details matching the given search term(s)."},{"lineNumber":58,"author":{"gitId":"tjtanjin"},"content":"* Format: `find \u003csearch term 1\u003e \u003csearch term 2\u003e ...`"},{"lineNumber":59,"author":{"gitId":"tjtanjin"},"content":"* Example: `find ip assignment`"},{"lineNumber":60,"author":{"gitId":"tjtanjin"},"content":"\u003cp align\u003d\"center\"\u003e"},{"lineNumber":61,"author":{"gitId":"tjtanjin"},"content":"  \u003cimg height\u003d\"740\" width\u003d\"512\" src\u003d\"https://raw.githubusercontent.com/tjtanjin/ip/master/docs/images/find_task.png\"\u003e"},{"lineNumber":62,"author":{"gitId":"tjtanjin"},"content":"\u003c/p\u003e"},{"lineNumber":63,"author":{"gitId":"-"},"content":""},{"lineNumber":64,"author":{"gitId":"tjtanjin"},"content":"### Mark Task As Complete"},{"lineNumber":65,"author":{"gitId":"tjtanjin"},"content":"* Description: Marks the task with the matching index given as complete."},{"lineNumber":66,"author":{"gitId":"tjtanjin"},"content":"* Format: `done \u003ctask index\u003e`"},{"lineNumber":67,"author":{"gitId":"tjtanjin"},"content":"* Example: `done 1`"},{"lineNumber":68,"author":{"gitId":"tjtanjin"},"content":"\u003cp align\u003d\"center\"\u003e"},{"lineNumber":69,"author":{"gitId":"tjtanjin"},"content":"  \u003cimg height\u003d\"740\" width\u003d\"512\" src\u003d\"https://raw.githubusercontent.com/tjtanjin/ip/master/docs/images/mark_task_as_complete.png\"\u003e"},{"lineNumber":70,"author":{"gitId":"tjtanjin"},"content":"\u003c/p\u003e"},{"lineNumber":71,"author":{"gitId":"-"},"content":""},{"lineNumber":72,"author":{"gitId":"tjtanjin"},"content":"### Undo Task Modification"},{"lineNumber":73,"author":{"gitId":"tjtanjin"},"content":"* Description: Undo the last modification done to a task (create, delete or mark as complete)"},{"lineNumber":74,"author":{"gitId":"tjtanjin"},"content":"* Format: `undo`"},{"lineNumber":75,"author":{"gitId":"tjtanjin"},"content":"* Example: `undo`"},{"lineNumber":76,"author":{"gitId":"tjtanjin"},"content":"\u003cp align\u003d\"center\"\u003e"},{"lineNumber":77,"author":{"gitId":"tjtanjin"},"content":"  \u003cimg height\u003d\"740\" width\u003d\"512\" src\u003d\"https://raw.githubusercontent.com/tjtanjin/ip/master/docs/images/undo_task_modification.png\"\u003e"},{"lineNumber":78,"author":{"gitId":"tjtanjin"},"content":"\u003c/p\u003e"},{"lineNumber":79,"author":{"gitId":"-"},"content":""},{"lineNumber":80,"author":{"gitId":"tjtanjin"},"content":"### View All Tasks"},{"lineNumber":81,"author":{"gitId":"tjtanjin"},"content":"* Description: Shows a list of all tasks."},{"lineNumber":82,"author":{"gitId":"tjtanjin"},"content":"* Format: `list`"},{"lineNumber":83,"author":{"gitId":"tjtanjin"},"content":"* Example: `list`"},{"lineNumber":84,"author":{"gitId":"tjtanjin"},"content":"\u003cp align\u003d\"center\"\u003e"},{"lineNumber":85,"author":{"gitId":"tjtanjin"},"content":"  \u003cimg height\u003d\"740\" width\u003d\"512\" src\u003d\"https://raw.githubusercontent.com/tjtanjin/ip/master/docs/images/view_all_tasks.png\"\u003e"},{"lineNumber":86,"author":{"gitId":"tjtanjin"},"content":"\u003c/p\u003e"},{"lineNumber":87,"author":{"gitId":"-"},"content":""},{"lineNumber":88,"author":{"gitId":"tjtanjin"},"content":"### View Command Help"},{"lineNumber":89,"author":{"gitId":"tjtanjin"},"content":"* Description: Shows a list of supported commands and their descriptions."},{"lineNumber":90,"author":{"gitId":"tjtanjin"},"content":"* Format: `help`"},{"lineNumber":91,"author":{"gitId":"tjtanjin"},"content":"* Example: `help`"},{"lineNumber":92,"author":{"gitId":"tjtanjin"},"content":"\u003cp align\u003d\"center\"\u003e"},{"lineNumber":93,"author":{"gitId":"tjtanjin"},"content":"  \u003cimg height\u003d\"740\" width\u003d\"512\" src\u003d\"https://raw.githubusercontent.com/tjtanjin/ip/master/docs/images/view_command_help.png\"\u003e"},{"lineNumber":94,"author":{"gitId":"tjtanjin"},"content":"\u003c/p\u003e"},{"lineNumber":95,"author":{"gitId":"-"},"content":""},{"lineNumber":96,"author":{"gitId":"tjtanjin"},"content":"### Exit Application"},{"lineNumber":97,"author":{"gitId":"tjtanjin"},"content":"* Description: Exits the application."},{"lineNumber":98,"author":{"gitId":"tjtanjin"},"content":"* Format: `bye`"},{"lineNumber":99,"author":{"gitId":"tjtanjin"},"content":"* Example: `bye`"}],"authorContributionMap":{"tjtanjin":86,"-":13}},{"path":"src/main/java/com/tjtanjin/steve/Launcher.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tjtanjin"},"content":"package com.tjtanjin.steve;"},{"lineNumber":2,"author":{"gitId":"tjtanjin"},"content":""},{"lineNumber":3,"author":{"gitId":"tjtanjin"},"content":"import javafx.application.Application;"},{"lineNumber":4,"author":{"gitId":"tjtanjin"},"content":""},{"lineNumber":5,"author":{"gitId":"tjtanjin"},"content":"/**"},{"lineNumber":6,"author":{"gitId":"tjtanjin"},"content":" * A launcher class to workaround classpath issues."},{"lineNumber":7,"author":{"gitId":"tjtanjin"},"content":" */"},{"lineNumber":8,"author":{"gitId":"tjtanjin"},"content":"public class Launcher {"},{"lineNumber":9,"author":{"gitId":"tjtanjin"},"content":""},{"lineNumber":10,"author":{"gitId":"tjtanjin"},"content":"    /**"},{"lineNumber":11,"author":{"gitId":"tjtanjin"},"content":"     * Launches the Main class."},{"lineNumber":12,"author":{"gitId":"tjtanjin"},"content":"     *"},{"lineNumber":13,"author":{"gitId":"tjtanjin"},"content":"     * @param args command line arguments"},{"lineNumber":14,"author":{"gitId":"tjtanjin"},"content":"     */"},{"lineNumber":15,"author":{"gitId":"tjtanjin"},"content":"    public static void main(String[] args) {"},{"lineNumber":16,"author":{"gitId":"tjtanjin"},"content":"        Application.launch(Main.class, args);"},{"lineNumber":17,"author":{"gitId":"tjtanjin"},"content":"    }"},{"lineNumber":18,"author":{"gitId":"tjtanjin"},"content":"}"}],"authorContributionMap":{"tjtanjin":18}},{"path":"src/main/java/com/tjtanjin/steve/Main.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tjtanjin"},"content":"package com.tjtanjin.steve;"},{"lineNumber":2,"author":{"gitId":"tjtanjin"},"content":""},{"lineNumber":3,"author":{"gitId":"tjtanjin"},"content":"import java.io.IOException;"},{"lineNumber":4,"author":{"gitId":"tjtanjin"},"content":""},{"lineNumber":5,"author":{"gitId":"tjtanjin"},"content":"import com.tjtanjin.steve.ui.UiHandler;"},{"lineNumber":6,"author":{"gitId":"tjtanjin"},"content":""},{"lineNumber":7,"author":{"gitId":"tjtanjin"},"content":"import javafx.application.Application;"},{"lineNumber":8,"author":{"gitId":"tjtanjin"},"content":"import javafx.fxml.FXMLLoader;"},{"lineNumber":9,"author":{"gitId":"tjtanjin"},"content":"import javafx.scene.Scene;"},{"lineNumber":10,"author":{"gitId":"tjtanjin"},"content":"import javafx.scene.layout.AnchorPane;"},{"lineNumber":11,"author":{"gitId":"tjtanjin"},"content":"import javafx.stage.Stage;"},{"lineNumber":12,"author":{"gitId":"tjtanjin"},"content":""},{"lineNumber":13,"author":{"gitId":"tjtanjin"},"content":"/**"},{"lineNumber":14,"author":{"gitId":"tjtanjin"},"content":" * A GUI for Steve using FXML."},{"lineNumber":15,"author":{"gitId":"tjtanjin"},"content":" */"},{"lineNumber":16,"author":{"gitId":"tjtanjin"},"content":"public class Main extends Application {"},{"lineNumber":17,"author":{"gitId":"tjtanjin"},"content":""},{"lineNumber":18,"author":{"gitId":"tjtanjin"},"content":"    private final Steve STEVE \u003d new Steve();"},{"lineNumber":19,"author":{"gitId":"tjtanjin"},"content":""},{"lineNumber":20,"author":{"gitId":"tjtanjin"},"content":"    /**"},{"lineNumber":21,"author":{"gitId":"tjtanjin"},"content":"     * Overrides default start method of application in javafx."},{"lineNumber":22,"author":{"gitId":"tjtanjin"},"content":"     *"},{"lineNumber":23,"author":{"gitId":"tjtanjin"},"content":"     * @param stage primary stage of javafx"},{"lineNumber":24,"author":{"gitId":"tjtanjin"},"content":"     */"},{"lineNumber":25,"author":{"gitId":"tjtanjin"},"content":"    @Override"},{"lineNumber":26,"author":{"gitId":"tjtanjin"},"content":"    public void start(Stage stage) {"},{"lineNumber":27,"author":{"gitId":"tjtanjin"},"content":"        try {"},{"lineNumber":28,"author":{"gitId":"tjtanjin"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(Main.class.getResource(\"/view/UiHandler.fxml\"));"},{"lineNumber":29,"author":{"gitId":"tjtanjin"},"content":"            AnchorPane ap \u003d fxmlLoader.load();"},{"lineNumber":30,"author":{"gitId":"tjtanjin"},"content":"            Scene scene \u003d new Scene(ap);"},{"lineNumber":31,"author":{"gitId":"tjtanjin"},"content":"            stage.setScene(scene);"},{"lineNumber":32,"author":{"gitId":"tjtanjin"},"content":"            fxmlLoader.\u003cUiHandler\u003egetController().setSteve(STEVE, fxmlLoader);"},{"lineNumber":33,"author":{"gitId":"tjtanjin"},"content":"            stage.show();"},{"lineNumber":34,"author":{"gitId":"tjtanjin"},"content":"            stage.setTitle(\"Steve\");"},{"lineNumber":35,"author":{"gitId":"tjtanjin"},"content":"            stage.setResizable(false);"},{"lineNumber":36,"author":{"gitId":"tjtanjin"},"content":"        } catch (IOException e) {"},{"lineNumber":37,"author":{"gitId":"tjtanjin"},"content":"            e.printStackTrace();"},{"lineNumber":38,"author":{"gitId":"tjtanjin"},"content":"        }"},{"lineNumber":39,"author":{"gitId":"tjtanjin"},"content":"    }"},{"lineNumber":40,"author":{"gitId":"tjtanjin"},"content":"}"}],"authorContributionMap":{"tjtanjin":40}},{"path":"src/main/java/com/tjtanjin/steve/Steve.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tjtanjin"},"content":"package com.tjtanjin.steve;"},{"lineNumber":2,"author":{"gitId":"tjtanjin"},"content":""},{"lineNumber":3,"author":{"gitId":"tjtanjin"},"content":"import com.tjtanjin.steve.commands.CommandHandler;"},{"lineNumber":4,"author":{"gitId":"tjtanjin"},"content":"import com.tjtanjin.steve.parser.Parser;"},{"lineNumber":5,"author":{"gitId":"tjtanjin"},"content":"import com.tjtanjin.steve.storage.StorageHandler;"},{"lineNumber":6,"author":{"gitId":"tjtanjin"},"content":"import com.tjtanjin.steve.tasks.TaskHandler;"},{"lineNumber":7,"author":{"gitId":"tjtanjin"},"content":""},{"lineNumber":8,"author":{"gitId":"tjtanjin"},"content":"/**"},{"lineNumber":9,"author":{"gitId":"tjtanjin"},"content":" * Steve class creates and allocates all key objects."},{"lineNumber":10,"author":{"gitId":"tjtanjin"},"content":" */"},{"lineNumber":11,"author":{"gitId":"tjtanjin"},"content":"public class Steve {"},{"lineNumber":12,"author":{"gitId":"tjtanjin"},"content":""},{"lineNumber":13,"author":{"gitId":"tjtanjin"},"content":"    private final Parser PARSER;"},{"lineNumber":14,"author":{"gitId":"tjtanjin"},"content":""},{"lineNumber":15,"author":{"gitId":"tjtanjin"},"content":"    /**"},{"lineNumber":16,"author":{"gitId":"tjtanjin"},"content":"     * Constructor for Steve which stores initializes key classes and stores parser to be used by UiHandler."},{"lineNumber":17,"author":{"gitId":"tjtanjin"},"content":"     */"},{"lineNumber":18,"author":{"gitId":"tjtanjin"},"content":"    public Steve() {"},{"lineNumber":19,"author":{"gitId":"tjtanjin"},"content":"        StorageHandler storageHandler \u003d new StorageHandler(\"./data/tasks.json\");"},{"lineNumber":20,"author":{"gitId":"tjtanjin"},"content":"        TaskHandler taskHandler \u003d new TaskHandler(storageHandler);"},{"lineNumber":21,"author":{"gitId":"tjtanjin"},"content":"        CommandHandler commandHandler \u003d new CommandHandler(taskHandler);"},{"lineNumber":22,"author":{"gitId":"tjtanjin"},"content":"        this.PARSER \u003d new Parser(commandHandler);"},{"lineNumber":23,"author":{"gitId":"tjtanjin"},"content":"    }"},{"lineNumber":24,"author":{"gitId":"tjtanjin"},"content":""},{"lineNumber":25,"author":{"gitId":"tjtanjin"},"content":"    /**"},{"lineNumber":26,"author":{"gitId":"tjtanjin"},"content":"     * Gets the parser."},{"lineNumber":27,"author":{"gitId":"tjtanjin"},"content":"     *"},{"lineNumber":28,"author":{"gitId":"tjtanjin"},"content":"     * @return parser"},{"lineNumber":29,"author":{"gitId":"tjtanjin"},"content":"     */"},{"lineNumber":30,"author":{"gitId":"tjtanjin"},"content":"    public Parser getParser() {"},{"lineNumber":31,"author":{"gitId":"tjtanjin"},"content":"        return this.PARSER;"},{"lineNumber":32,"author":{"gitId":"tjtanjin"},"content":"    }"},{"lineNumber":33,"author":{"gitId":"-"},"content":"}"}],"authorContributionMap":{"tjtanjin":32,"-":1}},{"path":"src/main/java/com/tjtanjin/steve/commands/ByeCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tjtanjin"},"content":"package com.tjtanjin.steve.commands;"},{"lineNumber":2,"author":{"gitId":"tjtanjin"},"content":""},{"lineNumber":3,"author":{"gitId":"tjtanjin"},"content":"/**"},{"lineNumber":4,"author":{"gitId":"tjtanjin"},"content":" * Entry point for handling logic and execution of bye command."},{"lineNumber":5,"author":{"gitId":"tjtanjin"},"content":" */"},{"lineNumber":6,"author":{"gitId":"tjtanjin"},"content":"public class ByeCommand {"},{"lineNumber":7,"author":{"gitId":"tjtanjin"},"content":""},{"lineNumber":8,"author":{"gitId":"tjtanjin"},"content":"    private final String DESCRIPTION;"},{"lineNumber":9,"author":{"gitId":"tjtanjin"},"content":""},{"lineNumber":10,"author":{"gitId":"tjtanjin"},"content":"    /**"},{"lineNumber":11,"author":{"gitId":"tjtanjin"},"content":"     * Constructor for ByeCommand."},{"lineNumber":12,"author":{"gitId":"tjtanjin"},"content":"     */"},{"lineNumber":13,"author":{"gitId":"tjtanjin"},"content":"    public ByeCommand(String description) {"},{"lineNumber":14,"author":{"gitId":"tjtanjin"},"content":"        this.DESCRIPTION \u003d description;"},{"lineNumber":15,"author":{"gitId":"tjtanjin"},"content":"    }"},{"lineNumber":16,"author":{"gitId":"tjtanjin"},"content":""},{"lineNumber":17,"author":{"gitId":"tjtanjin"},"content":"    /**"},{"lineNumber":18,"author":{"gitId":"tjtanjin"},"content":"     * Gets the description of bye command."},{"lineNumber":19,"author":{"gitId":"tjtanjin"},"content":"     *"},{"lineNumber":20,"author":{"gitId":"tjtanjin"},"content":"     * @return description of bye command"},{"lineNumber":21,"author":{"gitId":"tjtanjin"},"content":"     */"},{"lineNumber":22,"author":{"gitId":"tjtanjin"},"content":"    public String getDescription() {"},{"lineNumber":23,"author":{"gitId":"tjtanjin"},"content":"        return this.DESCRIPTION;"},{"lineNumber":24,"author":{"gitId":"tjtanjin"},"content":"    }"},{"lineNumber":25,"author":{"gitId":"tjtanjin"},"content":""},{"lineNumber":26,"author":{"gitId":"tjtanjin"},"content":"    /**"},{"lineNumber":27,"author":{"gitId":"tjtanjin"},"content":"     * Exits the program."},{"lineNumber":28,"author":{"gitId":"tjtanjin"},"content":"     */"},{"lineNumber":29,"author":{"gitId":"tjtanjin"},"content":"    public String execute() {"},{"lineNumber":30,"author":{"gitId":"tjtanjin"},"content":"        return \"Terminated: Good bye, see you soon! :D\";"},{"lineNumber":31,"author":{"gitId":"tjtanjin"},"content":"    }"},{"lineNumber":32,"author":{"gitId":"tjtanjin"},"content":"}"}],"authorContributionMap":{"tjtanjin":32}},{"path":"src/main/java/com/tjtanjin/steve/commands/CommandHandler.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tjtanjin"},"content":"package com.tjtanjin.steve.commands;"},{"lineNumber":2,"author":{"gitId":"tjtanjin"},"content":""},{"lineNumber":3,"author":{"gitId":"tjtanjin"},"content":"import java.util.HashMap;"},{"lineNumber":4,"author":{"gitId":"tjtanjin"},"content":""},{"lineNumber":5,"author":{"gitId":"tjtanjin"},"content":"import com.tjtanjin.steve.tasks.TaskHandler;"},{"lineNumber":6,"author":{"gitId":"tjtanjin"},"content":""},{"lineNumber":7,"author":{"gitId":"tjtanjin"},"content":"/**"},{"lineNumber":8,"author":{"gitId":"tjtanjin"},"content":" * The CommandHandler class manages all supported commands and provides them with the"},{"lineNumber":9,"author":{"gitId":"tjtanjin"},"content":" * TaskHandler to modify tasks when necessary."},{"lineNumber":10,"author":{"gitId":"tjtanjin"},"content":" */"},{"lineNumber":11,"author":{"gitId":"tjtanjin"},"content":"public class CommandHandler {"},{"lineNumber":12,"author":{"gitId":"tjtanjin"},"content":""},{"lineNumber":13,"author":{"gitId":"tjtanjin"},"content":"    private final ByeCommand BYE_COMMAND;"},{"lineNumber":14,"author":{"gitId":"tjtanjin"},"content":"    private final DeadlineCommand DEADLINE_COMMAND;"},{"lineNumber":15,"author":{"gitId":"tjtanjin"},"content":"    private final DeleteCommand DELETE_COMMAND;"},{"lineNumber":16,"author":{"gitId":"tjtanjin"},"content":"    private final DoneCommand DONE_COMMAND;"},{"lineNumber":17,"author":{"gitId":"tjtanjin"},"content":"    private final EventCommand EVENT_COMMAND;"},{"lineNumber":18,"author":{"gitId":"tjtanjin"},"content":"    private final FindCommand FIND_COMMAND;"},{"lineNumber":19,"author":{"gitId":"tjtanjin"},"content":"    private final HelpCommand HELP_COMMAND;"},{"lineNumber":20,"author":{"gitId":"tjtanjin"},"content":"    private final ListCommand LIST_COMMAND;"},{"lineNumber":21,"author":{"gitId":"tjtanjin"},"content":"    private final TodoCommand TODO_COMMAND;"},{"lineNumber":22,"author":{"gitId":"tjtanjin"},"content":"    private final UndoCommand UNDO_COMMAND;"},{"lineNumber":23,"author":{"gitId":"tjtanjin"},"content":""},{"lineNumber":24,"author":{"gitId":"tjtanjin"},"content":"    /**"},{"lineNumber":25,"author":{"gitId":"tjtanjin"},"content":"     * Constructor for CommandHandler."},{"lineNumber":26,"author":{"gitId":"tjtanjin"},"content":"     *"},{"lineNumber":27,"author":{"gitId":"tjtanjin"},"content":"     * @param taskHandler task handler to pass to commands that modify tasks"},{"lineNumber":28,"author":{"gitId":"tjtanjin"},"content":"     */"},{"lineNumber":29,"author":{"gitId":"tjtanjin"},"content":"    public CommandHandler(TaskHandler taskHandler) {"},{"lineNumber":30,"author":{"gitId":"tjtanjin"},"content":"        //list storing commands/descriptions, ideally store in json file"},{"lineNumber":31,"author":{"gitId":"tjtanjin"},"content":"        HashMap\u003cString, String\u003e cmdInfo \u003d new HashMap\u003c\u003e();"},{"lineNumber":32,"author":{"gitId":"tjtanjin"},"content":"        cmdInfo.put(\"BYE\", \"bye | Description: exits the program\");"},{"lineNumber":33,"author":{"gitId":"tjtanjin"},"content":"        cmdInfo.put(\"LIST\", \"list | Description: lists all entered tasks\");"},{"lineNumber":34,"author":{"gitId":"tjtanjin"},"content":"        cmdInfo.put(\"DONE\","},{"lineNumber":35,"author":{"gitId":"tjtanjin"},"content":"                \"done \u003ctask index\u003e | Description: marks by index a given task as done\");"},{"lineNumber":36,"author":{"gitId":"tjtanjin"},"content":"        cmdInfo.put(\"TODO\", \"todo \u003cname\u003e | Description: adds a new todo task\");"},{"lineNumber":37,"author":{"gitId":"tjtanjin"},"content":"        cmdInfo.put(\"DEADLINE\","},{"lineNumber":38,"author":{"gitId":"tjtanjin"},"content":"                \"deadline \u003cname\u003e /by \u003cend date\u003e | Description: adds a new deadline task\");"},{"lineNumber":39,"author":{"gitId":"tjtanjin"},"content":"        cmdInfo.put(\"EVENT\","},{"lineNumber":40,"author":{"gitId":"tjtanjin"},"content":"                \"event \u003cname\u003e /from \u003cstart date\u003e /to \u003cend date\u003e | Description: adds a new event task\");"},{"lineNumber":41,"author":{"gitId":"tjtanjin"},"content":"        cmdInfo.put(\"DELETE\", \"delete \u003ctask index\u003e | Description: deletes by index a given task\");"},{"lineNumber":42,"author":{"gitId":"tjtanjin"},"content":"        cmdInfo.put(\"HELP\", \"help | Description: lists this help menu\");"},{"lineNumber":43,"author":{"gitId":"tjtanjin"},"content":"        cmdInfo.put(\"FIND\", \"find \u003cname\u003e | Description: finds task by name\");"},{"lineNumber":44,"author":{"gitId":"tjtanjin"},"content":"        cmdInfo.put(\"UNDO\", \"undo | Description: undo the last task modification\");"},{"lineNumber":45,"author":{"gitId":"tjtanjin"},"content":""},{"lineNumber":46,"author":{"gitId":"tjtanjin"},"content":"        //initialize commands"},{"lineNumber":47,"author":{"gitId":"tjtanjin"},"content":"        this.BYE_COMMAND \u003d new ByeCommand(cmdInfo.get(\"BYE\"));"},{"lineNumber":48,"author":{"gitId":"tjtanjin"},"content":"        this.DEADLINE_COMMAND \u003d new DeadlineCommand(cmdInfo.get(\"DEADLINE\"), taskHandler);"},{"lineNumber":49,"author":{"gitId":"tjtanjin"},"content":"        this.DELETE_COMMAND \u003d new DeleteCommand(cmdInfo.get(\"DELETE\"), taskHandler);"},{"lineNumber":50,"author":{"gitId":"tjtanjin"},"content":"        this.DONE_COMMAND \u003d new DoneCommand(cmdInfo.get(\"DONE\"), taskHandler);"},{"lineNumber":51,"author":{"gitId":"tjtanjin"},"content":"        this.EVENT_COMMAND \u003d new EventCommand(cmdInfo.get(\"EVENT\"), taskHandler);"},{"lineNumber":52,"author":{"gitId":"tjtanjin"},"content":"        this.FIND_COMMAND \u003d new FindCommand(cmdInfo.get(\"FIND\"), taskHandler);"},{"lineNumber":53,"author":{"gitId":"tjtanjin"},"content":"        this.HELP_COMMAND \u003d new HelpCommand(cmdInfo.get(\"HELP\"), cmdInfo);"},{"lineNumber":54,"author":{"gitId":"tjtanjin"},"content":"        this.LIST_COMMAND \u003d new ListCommand(cmdInfo.get(\"LIST\"), taskHandler);"},{"lineNumber":55,"author":{"gitId":"tjtanjin"},"content":"        this.TODO_COMMAND \u003d new TodoCommand(cmdInfo.get(\"TODO\"), taskHandler);"},{"lineNumber":56,"author":{"gitId":"tjtanjin"},"content":"        this.UNDO_COMMAND \u003d new UndoCommand(cmdInfo.get(\"UNDO\"), taskHandler);"},{"lineNumber":57,"author":{"gitId":"tjtanjin"},"content":"    }"},{"lineNumber":58,"author":{"gitId":"tjtanjin"},"content":""},{"lineNumber":59,"author":{"gitId":"tjtanjin"},"content":"    /**"},{"lineNumber":60,"author":{"gitId":"tjtanjin"},"content":"     * Gets the bye command object."},{"lineNumber":61,"author":{"gitId":"tjtanjin"},"content":"     *"},{"lineNumber":62,"author":{"gitId":"tjtanjin"},"content":"     * @return bye command object"},{"lineNumber":63,"author":{"gitId":"tjtanjin"},"content":"     */"},{"lineNumber":64,"author":{"gitId":"tjtanjin"},"content":"    public ByeCommand getByeCommand() {"},{"lineNumber":65,"author":{"gitId":"tjtanjin"},"content":"        return this.BYE_COMMAND;"},{"lineNumber":66,"author":{"gitId":"tjtanjin"},"content":"    }"},{"lineNumber":67,"author":{"gitId":"tjtanjin"},"content":""},{"lineNumber":68,"author":{"gitId":"tjtanjin"},"content":"    /**"},{"lineNumber":69,"author":{"gitId":"tjtanjin"},"content":"     * Gets the deadline command object."},{"lineNumber":70,"author":{"gitId":"tjtanjin"},"content":"     *"},{"lineNumber":71,"author":{"gitId":"tjtanjin"},"content":"     * @return deadline command object"},{"lineNumber":72,"author":{"gitId":"tjtanjin"},"content":"     */"},{"lineNumber":73,"author":{"gitId":"tjtanjin"},"content":"    public DeadlineCommand getDeadlineCommand() {"},{"lineNumber":74,"author":{"gitId":"tjtanjin"},"content":"        return this.DEADLINE_COMMAND;"},{"lineNumber":75,"author":{"gitId":"tjtanjin"},"content":"    }"},{"lineNumber":76,"author":{"gitId":"tjtanjin"},"content":""},{"lineNumber":77,"author":{"gitId":"tjtanjin"},"content":"    /**"},{"lineNumber":78,"author":{"gitId":"tjtanjin"},"content":"     * Gets the delete command object."},{"lineNumber":79,"author":{"gitId":"tjtanjin"},"content":"     *"},{"lineNumber":80,"author":{"gitId":"tjtanjin"},"content":"     * @return delete command object"},{"lineNumber":81,"author":{"gitId":"tjtanjin"},"content":"     */"},{"lineNumber":82,"author":{"gitId":"tjtanjin"},"content":"    public DeleteCommand getDeleteCommand() {"},{"lineNumber":83,"author":{"gitId":"tjtanjin"},"content":"        return this.DELETE_COMMAND;"},{"lineNumber":84,"author":{"gitId":"tjtanjin"},"content":"    }"},{"lineNumber":85,"author":{"gitId":"tjtanjin"},"content":""},{"lineNumber":86,"author":{"gitId":"tjtanjin"},"content":"    /**"},{"lineNumber":87,"author":{"gitId":"tjtanjin"},"content":"     * Gets the done command object."},{"lineNumber":88,"author":{"gitId":"tjtanjin"},"content":"     *"},{"lineNumber":89,"author":{"gitId":"tjtanjin"},"content":"     * @return done command object"},{"lineNumber":90,"author":{"gitId":"tjtanjin"},"content":"     */"},{"lineNumber":91,"author":{"gitId":"tjtanjin"},"content":"    public DoneCommand getDoneCommand() {"},{"lineNumber":92,"author":{"gitId":"tjtanjin"},"content":"        return this.DONE_COMMAND;"},{"lineNumber":93,"author":{"gitId":"tjtanjin"},"content":"    }"},{"lineNumber":94,"author":{"gitId":"tjtanjin"},"content":""},{"lineNumber":95,"author":{"gitId":"tjtanjin"},"content":"    /**"},{"lineNumber":96,"author":{"gitId":"tjtanjin"},"content":"     * Gets the event command object."},{"lineNumber":97,"author":{"gitId":"tjtanjin"},"content":"     *"},{"lineNumber":98,"author":{"gitId":"tjtanjin"},"content":"     * @return event command object"},{"lineNumber":99,"author":{"gitId":"tjtanjin"},"content":"     */"},{"lineNumber":100,"author":{"gitId":"tjtanjin"},"content":"    public EventCommand getEventCommand() {"},{"lineNumber":101,"author":{"gitId":"tjtanjin"},"content":"        return this.EVENT_COMMAND;"},{"lineNumber":102,"author":{"gitId":"tjtanjin"},"content":"    }"},{"lineNumber":103,"author":{"gitId":"tjtanjin"},"content":""},{"lineNumber":104,"author":{"gitId":"tjtanjin"},"content":"    /**"},{"lineNumber":105,"author":{"gitId":"tjtanjin"},"content":"     * Gets the find command object."},{"lineNumber":106,"author":{"gitId":"tjtanjin"},"content":"     *"},{"lineNumber":107,"author":{"gitId":"tjtanjin"},"content":"     * @return find command object"},{"lineNumber":108,"author":{"gitId":"tjtanjin"},"content":"     */"},{"lineNumber":109,"author":{"gitId":"tjtanjin"},"content":"    public FindCommand getFindCommand() {"},{"lineNumber":110,"author":{"gitId":"tjtanjin"},"content":"        return this.FIND_COMMAND;"},{"lineNumber":111,"author":{"gitId":"tjtanjin"},"content":"    }"},{"lineNumber":112,"author":{"gitId":"tjtanjin"},"content":""},{"lineNumber":113,"author":{"gitId":"tjtanjin"},"content":"    /**"},{"lineNumber":114,"author":{"gitId":"tjtanjin"},"content":"     * Gets the help command object."},{"lineNumber":115,"author":{"gitId":"tjtanjin"},"content":"     *"},{"lineNumber":116,"author":{"gitId":"tjtanjin"},"content":"     * @return help command object"},{"lineNumber":117,"author":{"gitId":"tjtanjin"},"content":"     */"},{"lineNumber":118,"author":{"gitId":"tjtanjin"},"content":"    public HelpCommand getHelpCommand() {"},{"lineNumber":119,"author":{"gitId":"tjtanjin"},"content":"        return this.HELP_COMMAND;"},{"lineNumber":120,"author":{"gitId":"tjtanjin"},"content":"    }"},{"lineNumber":121,"author":{"gitId":"tjtanjin"},"content":""},{"lineNumber":122,"author":{"gitId":"tjtanjin"},"content":"    /**"},{"lineNumber":123,"author":{"gitId":"tjtanjin"},"content":"     * Gets the list command object."},{"lineNumber":124,"author":{"gitId":"tjtanjin"},"content":"     *"},{"lineNumber":125,"author":{"gitId":"tjtanjin"},"content":"     * @return list command object"},{"lineNumber":126,"author":{"gitId":"tjtanjin"},"content":"     */"},{"lineNumber":127,"author":{"gitId":"tjtanjin"},"content":"    public ListCommand getListCommand() {"},{"lineNumber":128,"author":{"gitId":"tjtanjin"},"content":"        return this.LIST_COMMAND;"},{"lineNumber":129,"author":{"gitId":"tjtanjin"},"content":"    }"},{"lineNumber":130,"author":{"gitId":"tjtanjin"},"content":""},{"lineNumber":131,"author":{"gitId":"tjtanjin"},"content":"    /**"},{"lineNumber":132,"author":{"gitId":"tjtanjin"},"content":"     * Gets the todo command object."},{"lineNumber":133,"author":{"gitId":"tjtanjin"},"content":"     *"},{"lineNumber":134,"author":{"gitId":"tjtanjin"},"content":"     * @return todo command object"},{"lineNumber":135,"author":{"gitId":"tjtanjin"},"content":"     */"},{"lineNumber":136,"author":{"gitId":"tjtanjin"},"content":"    public TodoCommand getTodoCommand() {"},{"lineNumber":137,"author":{"gitId":"tjtanjin"},"content":"        return this.TODO_COMMAND;"},{"lineNumber":138,"author":{"gitId":"tjtanjin"},"content":"    }"},{"lineNumber":139,"author":{"gitId":"tjtanjin"},"content":""},{"lineNumber":140,"author":{"gitId":"tjtanjin"},"content":"    /**"},{"lineNumber":141,"author":{"gitId":"tjtanjin"},"content":"     * Gets the undo command object."},{"lineNumber":142,"author":{"gitId":"tjtanjin"},"content":"     *"},{"lineNumber":143,"author":{"gitId":"tjtanjin"},"content":"     * @return undo command object"},{"lineNumber":144,"author":{"gitId":"tjtanjin"},"content":"     */"},{"lineNumber":145,"author":{"gitId":"tjtanjin"},"content":"    public UndoCommand getUndoCommand() {"},{"lineNumber":146,"author":{"gitId":"tjtanjin"},"content":"        return this.UNDO_COMMAND;"},{"lineNumber":147,"author":{"gitId":"tjtanjin"},"content":"    }"},{"lineNumber":148,"author":{"gitId":"tjtanjin"},"content":"}"}],"authorContributionMap":{"tjtanjin":148}},{"path":"src/main/java/com/tjtanjin/steve/commands/DeadlineCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tjtanjin"},"content":"package com.tjtanjin.steve.commands;"},{"lineNumber":2,"author":{"gitId":"tjtanjin"},"content":""},{"lineNumber":3,"author":{"gitId":"tjtanjin"},"content":"import java.time.LocalDate;"},{"lineNumber":4,"author":{"gitId":"tjtanjin"},"content":""},{"lineNumber":5,"author":{"gitId":"tjtanjin"},"content":"import com.tjtanjin.steve.tasks.TaskHandler;"},{"lineNumber":6,"author":{"gitId":"tjtanjin"},"content":""},{"lineNumber":7,"author":{"gitId":"tjtanjin"},"content":"/**"},{"lineNumber":8,"author":{"gitId":"tjtanjin"},"content":" * Entry point for handling logic and execution of deadline command."},{"lineNumber":9,"author":{"gitId":"tjtanjin"},"content":" */"},{"lineNumber":10,"author":{"gitId":"tjtanjin"},"content":"public class DeadlineCommand {"},{"lineNumber":11,"author":{"gitId":"tjtanjin"},"content":""},{"lineNumber":12,"author":{"gitId":"tjtanjin"},"content":"    private final TaskHandler TASK_HANDLER;"},{"lineNumber":13,"author":{"gitId":"tjtanjin"},"content":"    private final String DESCRIPTION;"},{"lineNumber":14,"author":{"gitId":"tjtanjin"},"content":""},{"lineNumber":15,"author":{"gitId":"tjtanjin"},"content":"    /**"},{"lineNumber":16,"author":{"gitId":"tjtanjin"},"content":"     * Constructor for DeadlineCommand."},{"lineNumber":17,"author":{"gitId":"tjtanjin"},"content":"     *"},{"lineNumber":18,"author":{"gitId":"tjtanjin"},"content":"     * @param taskHandler provides access for command to modify tasks"},{"lineNumber":19,"author":{"gitId":"tjtanjin"},"content":"     */"},{"lineNumber":20,"author":{"gitId":"tjtanjin"},"content":"    public DeadlineCommand(String description, TaskHandler taskHandler) {"},{"lineNumber":21,"author":{"gitId":"tjtanjin"},"content":"        this.DESCRIPTION \u003d description;"},{"lineNumber":22,"author":{"gitId":"tjtanjin"},"content":"        this.TASK_HANDLER \u003d taskHandler;"},{"lineNumber":23,"author":{"gitId":"tjtanjin"},"content":"    }"},{"lineNumber":24,"author":{"gitId":"tjtanjin"},"content":""},{"lineNumber":25,"author":{"gitId":"tjtanjin"},"content":"    /**"},{"lineNumber":26,"author":{"gitId":"tjtanjin"},"content":"     * Gets the description of deadline command."},{"lineNumber":27,"author":{"gitId":"tjtanjin"},"content":"     *"},{"lineNumber":28,"author":{"gitId":"tjtanjin"},"content":"     * @return description of deadline command"},{"lineNumber":29,"author":{"gitId":"tjtanjin"},"content":"     */"},{"lineNumber":30,"author":{"gitId":"tjtanjin"},"content":"    public String getDescription() {"},{"lineNumber":31,"author":{"gitId":"tjtanjin"},"content":"        return this.DESCRIPTION;"},{"lineNumber":32,"author":{"gitId":"tjtanjin"},"content":"    }"},{"lineNumber":33,"author":{"gitId":"tjtanjin"},"content":""},{"lineNumber":34,"author":{"gitId":"tjtanjin"},"content":"    /**"},{"lineNumber":35,"author":{"gitId":"tjtanjin"},"content":"     * Forwards the add deadline task operation to TaskHandler."},{"lineNumber":36,"author":{"gitId":"tjtanjin"},"content":"     *"},{"lineNumber":37,"author":{"gitId":"tjtanjin"},"content":"     * @param taskType type of task (todo, deadline or event)"},{"lineNumber":38,"author":{"gitId":"tjtanjin"},"content":"     * @param taskName name of task"},{"lineNumber":39,"author":{"gitId":"tjtanjin"},"content":"     * @param taskDates array of dates containing due date of deadline task"},{"lineNumber":40,"author":{"gitId":"tjtanjin"},"content":"     * @return string response after operation is done"},{"lineNumber":41,"author":{"gitId":"tjtanjin"},"content":"     */"},{"lineNumber":42,"author":{"gitId":"tjtanjin"},"content":"    public String execute(String taskType, String taskName, LocalDate[] taskDates) {"},{"lineNumber":43,"author":{"gitId":"tjtanjin"},"content":"        return TASK_HANDLER.addTask(taskType, taskName, taskDates);"},{"lineNumber":44,"author":{"gitId":"tjtanjin"},"content":"    }"},{"lineNumber":45,"author":{"gitId":"tjtanjin"},"content":"}"}],"authorContributionMap":{"tjtanjin":45}},{"path":"src/main/java/com/tjtanjin/steve/commands/DeleteCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tjtanjin"},"content":"package com.tjtanjin.steve.commands;"},{"lineNumber":2,"author":{"gitId":"tjtanjin"},"content":""},{"lineNumber":3,"author":{"gitId":"tjtanjin"},"content":"import com.tjtanjin.steve.tasks.TaskHandler;"},{"lineNumber":4,"author":{"gitId":"tjtanjin"},"content":""},{"lineNumber":5,"author":{"gitId":"tjtanjin"},"content":"/**"},{"lineNumber":6,"author":{"gitId":"tjtanjin"},"content":" * Entry point for handling logic and execution of delete command."},{"lineNumber":7,"author":{"gitId":"tjtanjin"},"content":" */"},{"lineNumber":8,"author":{"gitId":"tjtanjin"},"content":"public class DeleteCommand {"},{"lineNumber":9,"author":{"gitId":"tjtanjin"},"content":""},{"lineNumber":10,"author":{"gitId":"tjtanjin"},"content":"    private final TaskHandler TASK_HANDLER;"},{"lineNumber":11,"author":{"gitId":"tjtanjin"},"content":"    private final String DESCRIPTION;"},{"lineNumber":12,"author":{"gitId":"tjtanjin"},"content":""},{"lineNumber":13,"author":{"gitId":"tjtanjin"},"content":"    /**"},{"lineNumber":14,"author":{"gitId":"tjtanjin"},"content":"     * Constructor for DeleteCommand."},{"lineNumber":15,"author":{"gitId":"tjtanjin"},"content":"     *"},{"lineNumber":16,"author":{"gitId":"tjtanjin"},"content":"     * @param taskHandler provides access for command to modify tasks"},{"lineNumber":17,"author":{"gitId":"tjtanjin"},"content":"     */"},{"lineNumber":18,"author":{"gitId":"tjtanjin"},"content":"    public DeleteCommand(String description, TaskHandler taskHandler) {"},{"lineNumber":19,"author":{"gitId":"tjtanjin"},"content":"        this.DESCRIPTION \u003d description;"},{"lineNumber":20,"author":{"gitId":"tjtanjin"},"content":"        this.TASK_HANDLER \u003d taskHandler;"},{"lineNumber":21,"author":{"gitId":"tjtanjin"},"content":"    }"},{"lineNumber":22,"author":{"gitId":"tjtanjin"},"content":""},{"lineNumber":23,"author":{"gitId":"tjtanjin"},"content":"    /**"},{"lineNumber":24,"author":{"gitId":"tjtanjin"},"content":"     * Gets the description of delete command."},{"lineNumber":25,"author":{"gitId":"tjtanjin"},"content":"     *"},{"lineNumber":26,"author":{"gitId":"tjtanjin"},"content":"     * @return description of delete command"},{"lineNumber":27,"author":{"gitId":"tjtanjin"},"content":"     */"},{"lineNumber":28,"author":{"gitId":"tjtanjin"},"content":"    public String getDescription() {"},{"lineNumber":29,"author":{"gitId":"tjtanjin"},"content":"        return this.DESCRIPTION;"},{"lineNumber":30,"author":{"gitId":"tjtanjin"},"content":"    }"},{"lineNumber":31,"author":{"gitId":"tjtanjin"},"content":""},{"lineNumber":32,"author":{"gitId":"tjtanjin"},"content":"    /**"},{"lineNumber":33,"author":{"gitId":"tjtanjin"},"content":"     * Forwards the delete task operation to TaskHandler."},{"lineNumber":34,"author":{"gitId":"tjtanjin"},"content":"     *"},{"lineNumber":35,"author":{"gitId":"tjtanjin"},"content":"     * @param index of task to delete"},{"lineNumber":36,"author":{"gitId":"tjtanjin"},"content":"     * @return string response after operation is done"},{"lineNumber":37,"author":{"gitId":"tjtanjin"},"content":"     */"},{"lineNumber":38,"author":{"gitId":"tjtanjin"},"content":"    public String execute(int index) {"},{"lineNumber":39,"author":{"gitId":"tjtanjin"},"content":"        return TASK_HANDLER.deleteTask(index);"},{"lineNumber":40,"author":{"gitId":"tjtanjin"},"content":"    }"},{"lineNumber":41,"author":{"gitId":"tjtanjin"},"content":"}"}],"authorContributionMap":{"tjtanjin":41}},{"path":"src/main/java/com/tjtanjin/steve/commands/DoneCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tjtanjin"},"content":"package com.tjtanjin.steve.commands;"},{"lineNumber":2,"author":{"gitId":"tjtanjin"},"content":""},{"lineNumber":3,"author":{"gitId":"tjtanjin"},"content":"import com.tjtanjin.steve.tasks.TaskHandler;"},{"lineNumber":4,"author":{"gitId":"tjtanjin"},"content":""},{"lineNumber":5,"author":{"gitId":"tjtanjin"},"content":"/**"},{"lineNumber":6,"author":{"gitId":"tjtanjin"},"content":" * Entry point for handling logic and execution of done command."},{"lineNumber":7,"author":{"gitId":"tjtanjin"},"content":" */"},{"lineNumber":8,"author":{"gitId":"tjtanjin"},"content":"public class DoneCommand {"},{"lineNumber":9,"author":{"gitId":"tjtanjin"},"content":""},{"lineNumber":10,"author":{"gitId":"tjtanjin"},"content":"    private final TaskHandler TASK_HANDLER;"},{"lineNumber":11,"author":{"gitId":"tjtanjin"},"content":"    private final String DESCRIPTION;"},{"lineNumber":12,"author":{"gitId":"tjtanjin"},"content":""},{"lineNumber":13,"author":{"gitId":"tjtanjin"},"content":"    /**"},{"lineNumber":14,"author":{"gitId":"tjtanjin"},"content":"     * Constructor for DoneCommand."},{"lineNumber":15,"author":{"gitId":"tjtanjin"},"content":"     *"},{"lineNumber":16,"author":{"gitId":"tjtanjin"},"content":"     * @param taskHandler provides access for command to modify tasks"},{"lineNumber":17,"author":{"gitId":"tjtanjin"},"content":"     */"},{"lineNumber":18,"author":{"gitId":"tjtanjin"},"content":"    public DoneCommand(String description, TaskHandler taskHandler) {"},{"lineNumber":19,"author":{"gitId":"tjtanjin"},"content":"        this.DESCRIPTION \u003d description;"},{"lineNumber":20,"author":{"gitId":"tjtanjin"},"content":"        this.TASK_HANDLER \u003d taskHandler;"},{"lineNumber":21,"author":{"gitId":"tjtanjin"},"content":"    }"},{"lineNumber":22,"author":{"gitId":"tjtanjin"},"content":""},{"lineNumber":23,"author":{"gitId":"tjtanjin"},"content":"    /**"},{"lineNumber":24,"author":{"gitId":"tjtanjin"},"content":"     * Gets the description of done command."},{"lineNumber":25,"author":{"gitId":"tjtanjin"},"content":"     *"},{"lineNumber":26,"author":{"gitId":"tjtanjin"},"content":"     * @return description of done command"},{"lineNumber":27,"author":{"gitId":"tjtanjin"},"content":"     */"},{"lineNumber":28,"author":{"gitId":"tjtanjin"},"content":"    public String getDescription() {"},{"lineNumber":29,"author":{"gitId":"tjtanjin"},"content":"        return this.DESCRIPTION;"},{"lineNumber":30,"author":{"gitId":"tjtanjin"},"content":"    }"},{"lineNumber":31,"author":{"gitId":"tjtanjin"},"content":""},{"lineNumber":32,"author":{"gitId":"tjtanjin"},"content":"    /**"},{"lineNumber":33,"author":{"gitId":"tjtanjin"},"content":"     * Forwards the mark task as done operation to TaskHandler."},{"lineNumber":34,"author":{"gitId":"tjtanjin"},"content":"     *"},{"lineNumber":35,"author":{"gitId":"tjtanjin"},"content":"     * @param index of task to mark as done"},{"lineNumber":36,"author":{"gitId":"tjtanjin"},"content":"     * @return string response after operation is done"},{"lineNumber":37,"author":{"gitId":"tjtanjin"},"content":"     */"},{"lineNumber":38,"author":{"gitId":"tjtanjin"},"content":"    public String execute(int index) {"},{"lineNumber":39,"author":{"gitId":"tjtanjin"},"content":"        return TASK_HANDLER.markTaskDone(index);"},{"lineNumber":40,"author":{"gitId":"tjtanjin"},"content":"    }"},{"lineNumber":41,"author":{"gitId":"tjtanjin"},"content":"}"}],"authorContributionMap":{"tjtanjin":41}},{"path":"src/main/java/com/tjtanjin/steve/commands/EventCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tjtanjin"},"content":"package com.tjtanjin.steve.commands;"},{"lineNumber":2,"author":{"gitId":"tjtanjin"},"content":""},{"lineNumber":3,"author":{"gitId":"tjtanjin"},"content":"import java.time.LocalDate;"},{"lineNumber":4,"author":{"gitId":"tjtanjin"},"content":""},{"lineNumber":5,"author":{"gitId":"tjtanjin"},"content":"import com.tjtanjin.steve.tasks.TaskHandler;"},{"lineNumber":6,"author":{"gitId":"tjtanjin"},"content":""},{"lineNumber":7,"author":{"gitId":"tjtanjin"},"content":"/**"},{"lineNumber":8,"author":{"gitId":"tjtanjin"},"content":" * Entry point for handling logic and execution of event command."},{"lineNumber":9,"author":{"gitId":"tjtanjin"},"content":" */"},{"lineNumber":10,"author":{"gitId":"tjtanjin"},"content":"public class EventCommand {"},{"lineNumber":11,"author":{"gitId":"tjtanjin"},"content":""},{"lineNumber":12,"author":{"gitId":"tjtanjin"},"content":"    private final TaskHandler TASK_HANDLER;"},{"lineNumber":13,"author":{"gitId":"tjtanjin"},"content":"    private final String DESCRIPTION;"},{"lineNumber":14,"author":{"gitId":"tjtanjin"},"content":""},{"lineNumber":15,"author":{"gitId":"tjtanjin"},"content":"    /**"},{"lineNumber":16,"author":{"gitId":"tjtanjin"},"content":"     * Constructor for EventCommand."},{"lineNumber":17,"author":{"gitId":"tjtanjin"},"content":"     *"},{"lineNumber":18,"author":{"gitId":"tjtanjin"},"content":"     * @param taskHandler provides access for command to modify tasks"},{"lineNumber":19,"author":{"gitId":"tjtanjin"},"content":"     */"},{"lineNumber":20,"author":{"gitId":"tjtanjin"},"content":"    public EventCommand(String description, TaskHandler taskHandler) {"},{"lineNumber":21,"author":{"gitId":"tjtanjin"},"content":"        this.DESCRIPTION \u003d description;"},{"lineNumber":22,"author":{"gitId":"tjtanjin"},"content":"        this.TASK_HANDLER \u003d taskHandler;"},{"lineNumber":23,"author":{"gitId":"tjtanjin"},"content":"    }"},{"lineNumber":24,"author":{"gitId":"tjtanjin"},"content":""},{"lineNumber":25,"author":{"gitId":"tjtanjin"},"content":"    /**"},{"lineNumber":26,"author":{"gitId":"tjtanjin"},"content":"     * Gets the description of event command."},{"lineNumber":27,"author":{"gitId":"tjtanjin"},"content":"     *"},{"lineNumber":28,"author":{"gitId":"tjtanjin"},"content":"     * @return description of event command"},{"lineNumber":29,"author":{"gitId":"tjtanjin"},"content":"     */"},{"lineNumber":30,"author":{"gitId":"tjtanjin"},"content":"    public String getDescription() {"},{"lineNumber":31,"author":{"gitId":"tjtanjin"},"content":"        return this.DESCRIPTION;"},{"lineNumber":32,"author":{"gitId":"tjtanjin"},"content":"    }"},{"lineNumber":33,"author":{"gitId":"tjtanjin"},"content":""},{"lineNumber":34,"author":{"gitId":"tjtanjin"},"content":"    /**"},{"lineNumber":35,"author":{"gitId":"tjtanjin"},"content":"     * Forwards the add event task operation to TaskHandler."},{"lineNumber":36,"author":{"gitId":"tjtanjin"},"content":"     *"},{"lineNumber":37,"author":{"gitId":"tjtanjin"},"content":"     * @param taskType type of task (todo, deadline or event)"},{"lineNumber":38,"author":{"gitId":"tjtanjin"},"content":"     * @param taskName name of task"},{"lineNumber":39,"author":{"gitId":"tjtanjin"},"content":"     * @param taskDates array of dates containing start and end dates of event task"},{"lineNumber":40,"author":{"gitId":"tjtanjin"},"content":"     * @return string response after operation is done"},{"lineNumber":41,"author":{"gitId":"tjtanjin"},"content":"     */"},{"lineNumber":42,"author":{"gitId":"tjtanjin"},"content":"    public String execute(String taskType, String taskName, LocalDate[] taskDates) {"},{"lineNumber":43,"author":{"gitId":"tjtanjin"},"content":"        return TASK_HANDLER.addTask(taskType, taskName, taskDates);"},{"lineNumber":44,"author":{"gitId":"tjtanjin"},"content":"    }"},{"lineNumber":45,"author":{"gitId":"tjtanjin"},"content":"}"}],"authorContributionMap":{"tjtanjin":45}},{"path":"src/main/java/com/tjtanjin/steve/commands/FindCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tjtanjin"},"content":"package com.tjtanjin.steve.commands;"},{"lineNumber":2,"author":{"gitId":"tjtanjin"},"content":""},{"lineNumber":3,"author":{"gitId":"tjtanjin"},"content":"import com.tjtanjin.steve.tasks.TaskHandler;"},{"lineNumber":4,"author":{"gitId":"tjtanjin"},"content":""},{"lineNumber":5,"author":{"gitId":"tjtanjin"},"content":"/**"},{"lineNumber":6,"author":{"gitId":"tjtanjin"},"content":" * Entry point for handling logic and execution of find command."},{"lineNumber":7,"author":{"gitId":"tjtanjin"},"content":" */"},{"lineNumber":8,"author":{"gitId":"tjtanjin"},"content":"public class FindCommand {"},{"lineNumber":9,"author":{"gitId":"tjtanjin"},"content":""},{"lineNumber":10,"author":{"gitId":"tjtanjin"},"content":"    private final TaskHandler TASK_HANDLER;"},{"lineNumber":11,"author":{"gitId":"tjtanjin"},"content":"    private final String DESCRIPTION;"},{"lineNumber":12,"author":{"gitId":"tjtanjin"},"content":""},{"lineNumber":13,"author":{"gitId":"tjtanjin"},"content":"    /**"},{"lineNumber":14,"author":{"gitId":"tjtanjin"},"content":"     * Constructor for FindCommand."},{"lineNumber":15,"author":{"gitId":"tjtanjin"},"content":"     *"},{"lineNumber":16,"author":{"gitId":"tjtanjin"},"content":"     * @param taskHandler provides access for command to modify tasks"},{"lineNumber":17,"author":{"gitId":"tjtanjin"},"content":"     */"},{"lineNumber":18,"author":{"gitId":"tjtanjin"},"content":"    public FindCommand(String description, TaskHandler taskHandler) {"},{"lineNumber":19,"author":{"gitId":"tjtanjin"},"content":"        this.DESCRIPTION \u003d description;"},{"lineNumber":20,"author":{"gitId":"tjtanjin"},"content":"        this.TASK_HANDLER \u003d taskHandler;"},{"lineNumber":21,"author":{"gitId":"tjtanjin"},"content":"    }"},{"lineNumber":22,"author":{"gitId":"tjtanjin"},"content":""},{"lineNumber":23,"author":{"gitId":"tjtanjin"},"content":"    /**"},{"lineNumber":24,"author":{"gitId":"tjtanjin"},"content":"     * Gets the description of find command."},{"lineNumber":25,"author":{"gitId":"tjtanjin"},"content":"     *"},{"lineNumber":26,"author":{"gitId":"tjtanjin"},"content":"     * @return description of find command"},{"lineNumber":27,"author":{"gitId":"tjtanjin"},"content":"     */"},{"lineNumber":28,"author":{"gitId":"tjtanjin"},"content":"    public String getDescription() {"},{"lineNumber":29,"author":{"gitId":"tjtanjin"},"content":"        return this.DESCRIPTION;"},{"lineNumber":30,"author":{"gitId":"tjtanjin"},"content":"    }"},{"lineNumber":31,"author":{"gitId":"tjtanjin"},"content":""},{"lineNumber":32,"author":{"gitId":"tjtanjin"},"content":"    /**"},{"lineNumber":33,"author":{"gitId":"tjtanjin"},"content":"     * Forwards the find task operation to TaskHandler."},{"lineNumber":34,"author":{"gitId":"tjtanjin"},"content":"     *"},{"lineNumber":35,"author":{"gitId":"tjtanjin"},"content":"     * @param searchTerms search terms for finding task"},{"lineNumber":36,"author":{"gitId":"tjtanjin"},"content":"     * @return string response after operation is done"},{"lineNumber":37,"author":{"gitId":"tjtanjin"},"content":"     */"},{"lineNumber":38,"author":{"gitId":"tjtanjin"},"content":"    public String execute(String searchTerms) {"},{"lineNumber":39,"author":{"gitId":"tjtanjin"},"content":"        return TASK_HANDLER.findTask(searchTerms.split(\" \"));"},{"lineNumber":40,"author":{"gitId":"tjtanjin"},"content":"    }"},{"lineNumber":41,"author":{"gitId":"tjtanjin"},"content":"}"}],"authorContributionMap":{"tjtanjin":41}},{"path":"src/main/java/com/tjtanjin/steve/commands/HelpCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tjtanjin"},"content":"package com.tjtanjin.steve.commands;"},{"lineNumber":2,"author":{"gitId":"tjtanjin"},"content":""},{"lineNumber":3,"author":{"gitId":"tjtanjin"},"content":"import java.util.HashMap;"},{"lineNumber":4,"author":{"gitId":"tjtanjin"},"content":""},{"lineNumber":5,"author":{"gitId":"tjtanjin"},"content":"/**"},{"lineNumber":6,"author":{"gitId":"tjtanjin"},"content":" * Entry point for handling logic and execution of help command."},{"lineNumber":7,"author":{"gitId":"tjtanjin"},"content":" */"},{"lineNumber":8,"author":{"gitId":"tjtanjin"},"content":"public class HelpCommand {"},{"lineNumber":9,"author":{"gitId":"tjtanjin"},"content":""},{"lineNumber":10,"author":{"gitId":"tjtanjin"},"content":"    private final HashMap\u003cString, String\u003e CMD_INFO;"},{"lineNumber":11,"author":{"gitId":"tjtanjin"},"content":"    private final String DESCRIPTION;"},{"lineNumber":12,"author":{"gitId":"tjtanjin"},"content":""},{"lineNumber":13,"author":{"gitId":"tjtanjin"},"content":"    /**"},{"lineNumber":14,"author":{"gitId":"tjtanjin"},"content":"     * Constructor for HelpCommand."},{"lineNumber":15,"author":{"gitId":"tjtanjin"},"content":"     */"},{"lineNumber":16,"author":{"gitId":"tjtanjin"},"content":"    public HelpCommand(String description, HashMap\u003cString, String\u003e cmdInfo) {"},{"lineNumber":17,"author":{"gitId":"tjtanjin"},"content":"        this.DESCRIPTION \u003d description;"},{"lineNumber":18,"author":{"gitId":"tjtanjin"},"content":"        this.CMD_INFO \u003d cmdInfo;"},{"lineNumber":19,"author":{"gitId":"tjtanjin"},"content":"    }"},{"lineNumber":20,"author":{"gitId":"tjtanjin"},"content":""},{"lineNumber":21,"author":{"gitId":"tjtanjin"},"content":"    /**"},{"lineNumber":22,"author":{"gitId":"tjtanjin"},"content":"     * Gets the description of help command."},{"lineNumber":23,"author":{"gitId":"tjtanjin"},"content":"     *"},{"lineNumber":24,"author":{"gitId":"tjtanjin"},"content":"     * @return description of help command"},{"lineNumber":25,"author":{"gitId":"tjtanjin"},"content":"     */"},{"lineNumber":26,"author":{"gitId":"tjtanjin"},"content":"    public String getDescription() {"},{"lineNumber":27,"author":{"gitId":"tjtanjin"},"content":"        return this.DESCRIPTION;"},{"lineNumber":28,"author":{"gitId":"tjtanjin"},"content":"    }"},{"lineNumber":29,"author":{"gitId":"tjtanjin"},"content":""},{"lineNumber":30,"author":{"gitId":"tjtanjin"},"content":"    /**"},{"lineNumber":31,"author":{"gitId":"tjtanjin"},"content":"     * Lists out all available command usage and descriptions."},{"lineNumber":32,"author":{"gitId":"tjtanjin"},"content":"     *"},{"lineNumber":33,"author":{"gitId":"tjtanjin"},"content":"     * @return string response after operation is done"},{"lineNumber":34,"author":{"gitId":"tjtanjin"},"content":"     */"},{"lineNumber":35,"author":{"gitId":"tjtanjin"},"content":"    public String execute() {"},{"lineNumber":36,"author":{"gitId":"tjtanjin"},"content":"        StringBuilder str \u003d new StringBuilder(\"Info: The available commands are as listed below:\");"},{"lineNumber":37,"author":{"gitId":"tjtanjin"},"content":"        for (String info : CMD_INFO.values()) {"},{"lineNumber":38,"author":{"gitId":"tjtanjin"},"content":"            str.append(\"\\n\").append(info);"},{"lineNumber":39,"author":{"gitId":"tjtanjin"},"content":"        }"},{"lineNumber":40,"author":{"gitId":"tjtanjin"},"content":"        return str.toString();"},{"lineNumber":41,"author":{"gitId":"tjtanjin"},"content":"    }"},{"lineNumber":42,"author":{"gitId":"tjtanjin"},"content":"}"}],"authorContributionMap":{"tjtanjin":42}},{"path":"src/main/java/com/tjtanjin/steve/commands/ListCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tjtanjin"},"content":"package com.tjtanjin.steve.commands;"},{"lineNumber":2,"author":{"gitId":"tjtanjin"},"content":""},{"lineNumber":3,"author":{"gitId":"tjtanjin"},"content":"import com.tjtanjin.steve.tasks.TaskHandler;"},{"lineNumber":4,"author":{"gitId":"tjtanjin"},"content":""},{"lineNumber":5,"author":{"gitId":"tjtanjin"},"content":"/**"},{"lineNumber":6,"author":{"gitId":"tjtanjin"},"content":" * Entry point for handling logic and execution of list command."},{"lineNumber":7,"author":{"gitId":"tjtanjin"},"content":" */"},{"lineNumber":8,"author":{"gitId":"tjtanjin"},"content":"public class ListCommand {"},{"lineNumber":9,"author":{"gitId":"tjtanjin"},"content":""},{"lineNumber":10,"author":{"gitId":"tjtanjin"},"content":"    private final TaskHandler TASK_HANDLER;"},{"lineNumber":11,"author":{"gitId":"tjtanjin"},"content":"    private final String DESCRIPTION;"},{"lineNumber":12,"author":{"gitId":"tjtanjin"},"content":""},{"lineNumber":13,"author":{"gitId":"tjtanjin"},"content":"    /**"},{"lineNumber":14,"author":{"gitId":"tjtanjin"},"content":"     * Constructor for ListCommand."},{"lineNumber":15,"author":{"gitId":"tjtanjin"},"content":"     *"},{"lineNumber":16,"author":{"gitId":"tjtanjin"},"content":"     * @param taskHandler provides access for command to modify tasks"},{"lineNumber":17,"author":{"gitId":"tjtanjin"},"content":"     */"},{"lineNumber":18,"author":{"gitId":"tjtanjin"},"content":"    public ListCommand(String description, TaskHandler taskHandler) {"},{"lineNumber":19,"author":{"gitId":"tjtanjin"},"content":"        this.DESCRIPTION \u003d description;"},{"lineNumber":20,"author":{"gitId":"tjtanjin"},"content":"        this.TASK_HANDLER \u003d taskHandler;"},{"lineNumber":21,"author":{"gitId":"tjtanjin"},"content":"    }"},{"lineNumber":22,"author":{"gitId":"tjtanjin"},"content":""},{"lineNumber":23,"author":{"gitId":"tjtanjin"},"content":"    /**"},{"lineNumber":24,"author":{"gitId":"tjtanjin"},"content":"     * Gets the description of list command."},{"lineNumber":25,"author":{"gitId":"tjtanjin"},"content":"     *"},{"lineNumber":26,"author":{"gitId":"tjtanjin"},"content":"     * @return description of list command"},{"lineNumber":27,"author":{"gitId":"tjtanjin"},"content":"     */"},{"lineNumber":28,"author":{"gitId":"tjtanjin"},"content":"    public String getDescription() {"},{"lineNumber":29,"author":{"gitId":"tjtanjin"},"content":"        return this.DESCRIPTION;"},{"lineNumber":30,"author":{"gitId":"tjtanjin"},"content":"    }"},{"lineNumber":31,"author":{"gitId":"tjtanjin"},"content":""},{"lineNumber":32,"author":{"gitId":"tjtanjin"},"content":"    /**"},{"lineNumber":33,"author":{"gitId":"tjtanjin"},"content":"     * Lists out all tasks entered by user."},{"lineNumber":34,"author":{"gitId":"tjtanjin"},"content":"     *"},{"lineNumber":35,"author":{"gitId":"tjtanjin"},"content":"     * @return string response after operation is done"},{"lineNumber":36,"author":{"gitId":"tjtanjin"},"content":"     */"},{"lineNumber":37,"author":{"gitId":"tjtanjin"},"content":"    public String execute() {"},{"lineNumber":38,"author":{"gitId":"tjtanjin"},"content":"        return TASK_HANDLER.showAllTasks();"},{"lineNumber":39,"author":{"gitId":"tjtanjin"},"content":"    }"},{"lineNumber":40,"author":{"gitId":"tjtanjin"},"content":"}"}],"authorContributionMap":{"tjtanjin":40}},{"path":"src/main/java/com/tjtanjin/steve/commands/TodoCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tjtanjin"},"content":"package com.tjtanjin.steve.commands;"},{"lineNumber":2,"author":{"gitId":"tjtanjin"},"content":""},{"lineNumber":3,"author":{"gitId":"tjtanjin"},"content":"import com.tjtanjin.steve.tasks.TaskHandler;"},{"lineNumber":4,"author":{"gitId":"tjtanjin"},"content":""},{"lineNumber":5,"author":{"gitId":"tjtanjin"},"content":"/**"},{"lineNumber":6,"author":{"gitId":"tjtanjin"},"content":" * Entry point for handling logic and execution of todo command."},{"lineNumber":7,"author":{"gitId":"tjtanjin"},"content":" */"},{"lineNumber":8,"author":{"gitId":"tjtanjin"},"content":"public class TodoCommand {"},{"lineNumber":9,"author":{"gitId":"tjtanjin"},"content":""},{"lineNumber":10,"author":{"gitId":"tjtanjin"},"content":"    private final TaskHandler TASK_HANDLER;"},{"lineNumber":11,"author":{"gitId":"tjtanjin"},"content":"    private final String DESCRIPTION;"},{"lineNumber":12,"author":{"gitId":"tjtanjin"},"content":""},{"lineNumber":13,"author":{"gitId":"tjtanjin"},"content":"    /**"},{"lineNumber":14,"author":{"gitId":"tjtanjin"},"content":"     * Constructor for TodoCommand."},{"lineNumber":15,"author":{"gitId":"tjtanjin"},"content":"     *"},{"lineNumber":16,"author":{"gitId":"tjtanjin"},"content":"     * @param taskHandler provides access for command to modify tasks"},{"lineNumber":17,"author":{"gitId":"tjtanjin"},"content":"     */"},{"lineNumber":18,"author":{"gitId":"tjtanjin"},"content":"    public TodoCommand(String description, TaskHandler taskHandler) {"},{"lineNumber":19,"author":{"gitId":"tjtanjin"},"content":"        this.DESCRIPTION \u003d description;"},{"lineNumber":20,"author":{"gitId":"tjtanjin"},"content":"        this.TASK_HANDLER \u003d taskHandler;"},{"lineNumber":21,"author":{"gitId":"tjtanjin"},"content":"    }"},{"lineNumber":22,"author":{"gitId":"tjtanjin"},"content":""},{"lineNumber":23,"author":{"gitId":"tjtanjin"},"content":"    /**"},{"lineNumber":24,"author":{"gitId":"tjtanjin"},"content":"     * Gets the description of todo command."},{"lineNumber":25,"author":{"gitId":"tjtanjin"},"content":"     *"},{"lineNumber":26,"author":{"gitId":"tjtanjin"},"content":"     * @return description of todo command"},{"lineNumber":27,"author":{"gitId":"tjtanjin"},"content":"     */"},{"lineNumber":28,"author":{"gitId":"tjtanjin"},"content":"    public String getDescription() {"},{"lineNumber":29,"author":{"gitId":"tjtanjin"},"content":"        return this.DESCRIPTION;"},{"lineNumber":30,"author":{"gitId":"tjtanjin"},"content":"    }"},{"lineNumber":31,"author":{"gitId":"tjtanjin"},"content":""},{"lineNumber":32,"author":{"gitId":"tjtanjin"},"content":"    /**"},{"lineNumber":33,"author":{"gitId":"tjtanjin"},"content":"     * Forwards the add todo task operation to TaskHandler."},{"lineNumber":34,"author":{"gitId":"tjtanjin"},"content":"     *"},{"lineNumber":35,"author":{"gitId":"tjtanjin"},"content":"     * @param taskType type of task (todo, deadline or event)"},{"lineNumber":36,"author":{"gitId":"tjtanjin"},"content":"     * @param taskName name of task"},{"lineNumber":37,"author":{"gitId":"tjtanjin"},"content":"     * @return string response after operation is done"},{"lineNumber":38,"author":{"gitId":"tjtanjin"},"content":"     */"},{"lineNumber":39,"author":{"gitId":"tjtanjin"},"content":"    public String execute(String taskType, String taskName) {"},{"lineNumber":40,"author":{"gitId":"tjtanjin"},"content":"        return TASK_HANDLER.addTask(taskType, taskName, null);"},{"lineNumber":41,"author":{"gitId":"tjtanjin"},"content":"    }"},{"lineNumber":42,"author":{"gitId":"tjtanjin"},"content":"}"}],"authorContributionMap":{"tjtanjin":42}},{"path":"src/main/java/com/tjtanjin/steve/commands/UndoCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tjtanjin"},"content":"package com.tjtanjin.steve.commands;"},{"lineNumber":2,"author":{"gitId":"tjtanjin"},"content":""},{"lineNumber":3,"author":{"gitId":"tjtanjin"},"content":"import com.tjtanjin.steve.tasks.TaskHandler;"},{"lineNumber":4,"author":{"gitId":"tjtanjin"},"content":""},{"lineNumber":5,"author":{"gitId":"tjtanjin"},"content":"/**"},{"lineNumber":6,"author":{"gitId":"tjtanjin"},"content":" * Entry point for handling logic and execution of undo command."},{"lineNumber":7,"author":{"gitId":"tjtanjin"},"content":" */"},{"lineNumber":8,"author":{"gitId":"tjtanjin"},"content":"public class UndoCommand {"},{"lineNumber":9,"author":{"gitId":"tjtanjin"},"content":""},{"lineNumber":10,"author":{"gitId":"tjtanjin"},"content":"    private final TaskHandler TASK_HANDLER;"},{"lineNumber":11,"author":{"gitId":"tjtanjin"},"content":"    private final String DESCRIPTION;"},{"lineNumber":12,"author":{"gitId":"tjtanjin"},"content":""},{"lineNumber":13,"author":{"gitId":"tjtanjin"},"content":"    /**"},{"lineNumber":14,"author":{"gitId":"tjtanjin"},"content":"     * Constructor for UndoCommand."},{"lineNumber":15,"author":{"gitId":"tjtanjin"},"content":"     *"},{"lineNumber":16,"author":{"gitId":"tjtanjin"},"content":"     * @param taskHandler provides access for command to modify tasks"},{"lineNumber":17,"author":{"gitId":"tjtanjin"},"content":"     */"},{"lineNumber":18,"author":{"gitId":"tjtanjin"},"content":"    public UndoCommand(String description, TaskHandler taskHandler) {"},{"lineNumber":19,"author":{"gitId":"tjtanjin"},"content":"        this.DESCRIPTION \u003d description;"},{"lineNumber":20,"author":{"gitId":"tjtanjin"},"content":"        this.TASK_HANDLER \u003d taskHandler;"},{"lineNumber":21,"author":{"gitId":"tjtanjin"},"content":"    }"},{"lineNumber":22,"author":{"gitId":"tjtanjin"},"content":""},{"lineNumber":23,"author":{"gitId":"tjtanjin"},"content":"    /**"},{"lineNumber":24,"author":{"gitId":"tjtanjin"},"content":"     * Gets the description of undo command."},{"lineNumber":25,"author":{"gitId":"tjtanjin"},"content":"     *"},{"lineNumber":26,"author":{"gitId":"tjtanjin"},"content":"     * @return description of undo command"},{"lineNumber":27,"author":{"gitId":"tjtanjin"},"content":"     */"},{"lineNumber":28,"author":{"gitId":"tjtanjin"},"content":"    public String getDescription() {"},{"lineNumber":29,"author":{"gitId":"tjtanjin"},"content":"        return this.DESCRIPTION;"},{"lineNumber":30,"author":{"gitId":"tjtanjin"},"content":"    }"},{"lineNumber":31,"author":{"gitId":"tjtanjin"},"content":""},{"lineNumber":32,"author":{"gitId":"tjtanjin"},"content":"    /**"},{"lineNumber":33,"author":{"gitId":"tjtanjin"},"content":"     * Forwards the undo operation to TaskHandler."},{"lineNumber":34,"author":{"gitId":"tjtanjin"},"content":"     *"},{"lineNumber":35,"author":{"gitId":"tjtanjin"},"content":"     * @return string response after operation is done"},{"lineNumber":36,"author":{"gitId":"tjtanjin"},"content":"     */"},{"lineNumber":37,"author":{"gitId":"tjtanjin"},"content":"    public String execute() {"},{"lineNumber":38,"author":{"gitId":"tjtanjin"},"content":"        return TASK_HANDLER.undoTaskAction();"},{"lineNumber":39,"author":{"gitId":"tjtanjin"},"content":"    }"},{"lineNumber":40,"author":{"gitId":"tjtanjin"},"content":"}"}],"authorContributionMap":{"tjtanjin":40}},{"path":"src/main/java/com/tjtanjin/steve/parser/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tjtanjin"},"content":"package com.tjtanjin.steve.parser;"},{"lineNumber":2,"author":{"gitId":"tjtanjin"},"content":""},{"lineNumber":3,"author":{"gitId":"tjtanjin"},"content":"import java.time.DateTimeException;"},{"lineNumber":4,"author":{"gitId":"tjtanjin"},"content":"import java.time.LocalDate;"},{"lineNumber":5,"author":{"gitId":"tjtanjin"},"content":""},{"lineNumber":6,"author":{"gitId":"tjtanjin"},"content":"import com.tjtanjin.steve.commands.ByeCommand;"},{"lineNumber":7,"author":{"gitId":"tjtanjin"},"content":"import com.tjtanjin.steve.commands.CommandHandler;"},{"lineNumber":8,"author":{"gitId":"tjtanjin"},"content":"import com.tjtanjin.steve.commands.DeadlineCommand;"},{"lineNumber":9,"author":{"gitId":"tjtanjin"},"content":"import com.tjtanjin.steve.commands.DeleteCommand;"},{"lineNumber":10,"author":{"gitId":"tjtanjin"},"content":"import com.tjtanjin.steve.commands.DoneCommand;"},{"lineNumber":11,"author":{"gitId":"tjtanjin"},"content":"import com.tjtanjin.steve.commands.EventCommand;"},{"lineNumber":12,"author":{"gitId":"tjtanjin"},"content":"import com.tjtanjin.steve.commands.FindCommand;"},{"lineNumber":13,"author":{"gitId":"tjtanjin"},"content":"import com.tjtanjin.steve.commands.HelpCommand;"},{"lineNumber":14,"author":{"gitId":"tjtanjin"},"content":"import com.tjtanjin.steve.commands.ListCommand;"},{"lineNumber":15,"author":{"gitId":"tjtanjin"},"content":"import com.tjtanjin.steve.commands.TodoCommand;"},{"lineNumber":16,"author":{"gitId":"tjtanjin"},"content":"import com.tjtanjin.steve.commands.UndoCommand;"},{"lineNumber":17,"author":{"gitId":"tjtanjin"},"content":""},{"lineNumber":18,"author":{"gitId":"tjtanjin"},"content":"/**"},{"lineNumber":19,"author":{"gitId":"tjtanjin"},"content":" * Parser class parses user input and returns a response. It also deals directly with the CommandHandler"},{"lineNumber":20,"author":{"gitId":"tjtanjin"},"content":" * for command execution."},{"lineNumber":21,"author":{"gitId":"tjtanjin"},"content":" */"},{"lineNumber":22,"author":{"gitId":"tjtanjin"},"content":"public class Parser {"},{"lineNumber":23,"author":{"gitId":"tjtanjin"},"content":""},{"lineNumber":24,"author":{"gitId":"tjtanjin"},"content":"    //tracks all valid commands"},{"lineNumber":25,"author":{"gitId":"tjtanjin"},"content":"    private enum Cmd {"},{"lineNumber":26,"author":{"gitId":"tjtanjin"},"content":"        BYE,"},{"lineNumber":27,"author":{"gitId":"tjtanjin"},"content":"        LIST,"},{"lineNumber":28,"author":{"gitId":"tjtanjin"},"content":"        DONE,"},{"lineNumber":29,"author":{"gitId":"tjtanjin"},"content":"        TODO,"},{"lineNumber":30,"author":{"gitId":"tjtanjin"},"content":"        DEADLINE,"},{"lineNumber":31,"author":{"gitId":"tjtanjin"},"content":"        EVENT,"},{"lineNumber":32,"author":{"gitId":"tjtanjin"},"content":"        DELETE,"},{"lineNumber":33,"author":{"gitId":"tjtanjin"},"content":"        HELP,"},{"lineNumber":34,"author":{"gitId":"tjtanjin"},"content":"        FIND,"},{"lineNumber":35,"author":{"gitId":"tjtanjin"},"content":"        UNDO"},{"lineNumber":36,"author":{"gitId":"tjtanjin"},"content":"    }"},{"lineNumber":37,"author":{"gitId":"tjtanjin"},"content":""},{"lineNumber":38,"author":{"gitId":"tjtanjin"},"content":"    //all commands"},{"lineNumber":39,"author":{"gitId":"tjtanjin"},"content":"    private final ByeCommand BYE_COMMAND;"},{"lineNumber":40,"author":{"gitId":"tjtanjin"},"content":"    private final DeadlineCommand DEADLINE_COMMAND;"},{"lineNumber":41,"author":{"gitId":"tjtanjin"},"content":"    private final DeleteCommand DELETE_COMMAND;"},{"lineNumber":42,"author":{"gitId":"tjtanjin"},"content":"    private final DoneCommand DONE_COMMAND;"},{"lineNumber":43,"author":{"gitId":"tjtanjin"},"content":"    private final EventCommand EVENT_COMMAND;"},{"lineNumber":44,"author":{"gitId":"tjtanjin"},"content":"    private final FindCommand FIND_COMMAND;"},{"lineNumber":45,"author":{"gitId":"tjtanjin"},"content":"    private final HelpCommand HELP_COMMAND;"},{"lineNumber":46,"author":{"gitId":"tjtanjin"},"content":"    private final ListCommand LIST_COMMAND;"},{"lineNumber":47,"author":{"gitId":"tjtanjin"},"content":"    private final TodoCommand TODO_COMMAND;"},{"lineNumber":48,"author":{"gitId":"tjtanjin"},"content":"    private final UndoCommand UNDO_COMMAND;"},{"lineNumber":49,"author":{"gitId":"tjtanjin"},"content":""},{"lineNumber":50,"author":{"gitId":"tjtanjin"},"content":"    /**"},{"lineNumber":51,"author":{"gitId":"tjtanjin"},"content":"     * Constructor for Parser class that initialises all valid commands."},{"lineNumber":52,"author":{"gitId":"tjtanjin"},"content":"     *"},{"lineNumber":53,"author":{"gitId":"tjtanjin"},"content":"     * @param commandHandler provides access for commands to be executed"},{"lineNumber":54,"author":{"gitId":"tjtanjin"},"content":"     */"},{"lineNumber":55,"author":{"gitId":"tjtanjin"},"content":"    public Parser(CommandHandler commandHandler) {"},{"lineNumber":56,"author":{"gitId":"tjtanjin"},"content":"        this.BYE_COMMAND \u003d commandHandler.getByeCommand();"},{"lineNumber":57,"author":{"gitId":"tjtanjin"},"content":"        this.DEADLINE_COMMAND \u003d commandHandler.getDeadlineCommand();"},{"lineNumber":58,"author":{"gitId":"tjtanjin"},"content":"        this.DELETE_COMMAND \u003d commandHandler.getDeleteCommand();"},{"lineNumber":59,"author":{"gitId":"tjtanjin"},"content":"        this.DONE_COMMAND \u003d commandHandler.getDoneCommand();"},{"lineNumber":60,"author":{"gitId":"tjtanjin"},"content":"        this.EVENT_COMMAND \u003d commandHandler.getEventCommand();"},{"lineNumber":61,"author":{"gitId":"tjtanjin"},"content":"        this.FIND_COMMAND \u003d commandHandler.getFindCommand();"},{"lineNumber":62,"author":{"gitId":"tjtanjin"},"content":"        this.HELP_COMMAND \u003d commandHandler.getHelpCommand();"},{"lineNumber":63,"author":{"gitId":"tjtanjin"},"content":"        this.LIST_COMMAND \u003d commandHandler.getListCommand();"},{"lineNumber":64,"author":{"gitId":"tjtanjin"},"content":"        this.TODO_COMMAND \u003d commandHandler.getTodoCommand();"},{"lineNumber":65,"author":{"gitId":"tjtanjin"},"content":"        this.UNDO_COMMAND \u003d commandHandler.getUndoCommand();"},{"lineNumber":66,"author":{"gitId":"tjtanjin"},"content":"    }"},{"lineNumber":67,"author":{"gitId":"tjtanjin"},"content":""},{"lineNumber":68,"author":{"gitId":"tjtanjin"},"content":"    /**"},{"lineNumber":69,"author":{"gitId":"tjtanjin"},"content":"     * Parses input from user to determine action to take."},{"lineNumber":70,"author":{"gitId":"tjtanjin"},"content":"     *"},{"lineNumber":71,"author":{"gitId":"tjtanjin"},"content":"     * @param input input provided by user"},{"lineNumber":72,"author":{"gitId":"tjtanjin"},"content":"     * @return string response after operation is done"},{"lineNumber":73,"author":{"gitId":"tjtanjin"},"content":"     */"},{"lineNumber":74,"author":{"gitId":"tjtanjin"},"content":"    public String parseInput(String input) {"},{"lineNumber":75,"author":{"gitId":"tjtanjin"},"content":""},{"lineNumber":76,"author":{"gitId":"tjtanjin"},"content":"        String[] parsedInput \u003d input.split(\" \", 2);"},{"lineNumber":77,"author":{"gitId":"tjtanjin"},"content":""},{"lineNumber":78,"author":{"gitId":"tjtanjin"},"content":"        String command \u003d parsedInput[0].toUpperCase();"},{"lineNumber":79,"author":{"gitId":"tjtanjin"},"content":"        if (!isValidCommand(command)) {"},{"lineNumber":80,"author":{"gitId":"tjtanjin"},"content":"            return \"Error: Invalid instruction, type \u0027help\u0027 for more options\";"},{"lineNumber":81,"author":{"gitId":"tjtanjin"},"content":"        }"},{"lineNumber":82,"author":{"gitId":"tjtanjin"},"content":""},{"lineNumber":83,"author":{"gitId":"tjtanjin"},"content":"        try {"},{"lineNumber":84,"author":{"gitId":"tjtanjin"},"content":"            switch (Cmd.valueOf(command)) {"},{"lineNumber":85,"author":{"gitId":"tjtanjin"},"content":"            case BYE:"},{"lineNumber":86,"author":{"gitId":"tjtanjin"},"content":"                return BYE_COMMAND.execute();"},{"lineNumber":87,"author":{"gitId":"tjtanjin"},"content":"            case DEADLINE:"},{"lineNumber":88,"author":{"gitId":"tjtanjin"},"content":"                String deadlineTaskName \u003d parseTaskName(input);"},{"lineNumber":89,"author":{"gitId":"tjtanjin"},"content":"                LocalDate[] deadlineTaskDates \u003d parseTaskDates(input);"},{"lineNumber":90,"author":{"gitId":"tjtanjin"},"content":"                return DEADLINE_COMMAND.execute(command, deadlineTaskName, deadlineTaskDates);"},{"lineNumber":91,"author":{"gitId":"tjtanjin"},"content":"            case DELETE:"},{"lineNumber":92,"author":{"gitId":"tjtanjin"},"content":"                int deleteIndex \u003d parseIndex(\"delete\", input);"},{"lineNumber":93,"author":{"gitId":"tjtanjin"},"content":"                return DELETE_COMMAND.execute(deleteIndex);"},{"lineNumber":94,"author":{"gitId":"tjtanjin"},"content":"            case DONE:"},{"lineNumber":95,"author":{"gitId":"tjtanjin"},"content":"                int doneIndex \u003d parseIndex(\"done\", input);"},{"lineNumber":96,"author":{"gitId":"tjtanjin"},"content":"                return DONE_COMMAND.execute(doneIndex);"},{"lineNumber":97,"author":{"gitId":"tjtanjin"},"content":"            case EVENT:"},{"lineNumber":98,"author":{"gitId":"tjtanjin"},"content":"                String eventTaskName \u003d parseTaskName(input);"},{"lineNumber":99,"author":{"gitId":"tjtanjin"},"content":"                LocalDate[] eventTaskDates \u003d parseTaskDates(input);"},{"lineNumber":100,"author":{"gitId":"tjtanjin"},"content":"                return EVENT_COMMAND.execute(command, eventTaskName, eventTaskDates);"},{"lineNumber":101,"author":{"gitId":"tjtanjin"},"content":"            case FIND:"},{"lineNumber":102,"author":{"gitId":"tjtanjin"},"content":"                String searchTerms \u003d parseTaskName(input);"},{"lineNumber":103,"author":{"gitId":"tjtanjin"},"content":"                return FIND_COMMAND.execute(searchTerms);"},{"lineNumber":104,"author":{"gitId":"tjtanjin"},"content":"            case HELP:"},{"lineNumber":105,"author":{"gitId":"tjtanjin"},"content":"                return HELP_COMMAND.execute();"},{"lineNumber":106,"author":{"gitId":"tjtanjin"},"content":"            case LIST:"},{"lineNumber":107,"author":{"gitId":"tjtanjin"},"content":"                return LIST_COMMAND.execute();"},{"lineNumber":108,"author":{"gitId":"tjtanjin"},"content":"            case TODO:"},{"lineNumber":109,"author":{"gitId":"tjtanjin"},"content":"                String todoTaskName \u003d parseTaskName(input);"},{"lineNumber":110,"author":{"gitId":"tjtanjin"},"content":"                return TODO_COMMAND.execute(command, todoTaskName);"},{"lineNumber":111,"author":{"gitId":"tjtanjin"},"content":"            case UNDO:"},{"lineNumber":112,"author":{"gitId":"tjtanjin"},"content":"                return UNDO_COMMAND.execute();"},{"lineNumber":113,"author":{"gitId":"tjtanjin"},"content":"            default:"},{"lineNumber":114,"author":{"gitId":"tjtanjin"},"content":"                return \"Error: Invalid instruction, type \u0027help\u0027 to see the options.\";"},{"lineNumber":115,"author":{"gitId":"tjtanjin"},"content":"            }"},{"lineNumber":116,"author":{"gitId":"tjtanjin"},"content":"        } catch (SteveInvalidFormatException | SteveInvalidParamsException e) {"},{"lineNumber":117,"author":{"gitId":"tjtanjin"},"content":"            return e.getMessage();"},{"lineNumber":118,"author":{"gitId":"tjtanjin"},"content":"        }"},{"lineNumber":119,"author":{"gitId":"tjtanjin"},"content":"    }"},{"lineNumber":120,"author":{"gitId":"tjtanjin"},"content":""},{"lineNumber":121,"author":{"gitId":"tjtanjin"},"content":"    /**"},{"lineNumber":122,"author":{"gitId":"tjtanjin"},"content":"     * Checks if a command provided by user is valid."},{"lineNumber":123,"author":{"gitId":"tjtanjin"},"content":"     *"},{"lineNumber":124,"author":{"gitId":"tjtanjin"},"content":"     * @param command command provided by user"},{"lineNumber":125,"author":{"gitId":"tjtanjin"},"content":"     * @return true if command is valid, false otherwise"},{"lineNumber":126,"author":{"gitId":"tjtanjin"},"content":"     */"},{"lineNumber":127,"author":{"gitId":"tjtanjin"},"content":"    private boolean isValidCommand(String command) {"},{"lineNumber":128,"author":{"gitId":"tjtanjin"},"content":"        Cmd[] cmds \u003d Cmd.values();"},{"lineNumber":129,"author":{"gitId":"tjtanjin"},"content":"        for (Cmd cmd: cmds) {"},{"lineNumber":130,"author":{"gitId":"tjtanjin"},"content":"            if (cmd.name().equals(command)) {"},{"lineNumber":131,"author":{"gitId":"tjtanjin"},"content":"                return true;"},{"lineNumber":132,"author":{"gitId":"tjtanjin"},"content":"            }"},{"lineNumber":133,"author":{"gitId":"tjtanjin"},"content":"        }"},{"lineNumber":134,"author":{"gitId":"tjtanjin"},"content":"        return false;"},{"lineNumber":135,"author":{"gitId":"tjtanjin"},"content":"    }"},{"lineNumber":136,"author":{"gitId":"tjtanjin"},"content":""},{"lineNumber":137,"author":{"gitId":"tjtanjin"},"content":"    /**"},{"lineNumber":138,"author":{"gitId":"tjtanjin"},"content":"     * Parses index from user for done and delete command."},{"lineNumber":139,"author":{"gitId":"tjtanjin"},"content":"     *"},{"lineNumber":140,"author":{"gitId":"tjtanjin"},"content":"     * @param cmd cmd from user (done or delete)"},{"lineNumber":141,"author":{"gitId":"tjtanjin"},"content":"     * @param input input provided by user"},{"lineNumber":142,"author":{"gitId":"tjtanjin"},"content":"     * @return index of task"},{"lineNumber":143,"author":{"gitId":"tjtanjin"},"content":"     */"},{"lineNumber":144,"author":{"gitId":"tjtanjin"},"content":"    private int parseIndex(String cmd, String input)"},{"lineNumber":145,"author":{"gitId":"tjtanjin"},"content":"            throws SteveInvalidFormatException, SteveInvalidParamsException {"},{"lineNumber":146,"author":{"gitId":"tjtanjin"},"content":"        String[] parsedString \u003d input.split(\"\\\\s+\");"},{"lineNumber":147,"author":{"gitId":"tjtanjin"},"content":""},{"lineNumber":148,"author":{"gitId":"tjtanjin"},"content":"        try {"},{"lineNumber":149,"author":{"gitId":"tjtanjin"},"content":"            return Integer.parseInt(parsedString[1]) - 1;"},{"lineNumber":150,"author":{"gitId":"tjtanjin"},"content":"        } catch (IndexOutOfBoundsException e) {"},{"lineNumber":151,"author":{"gitId":"tjtanjin"},"content":"            if (cmd.equals(\"done\")) {"},{"lineNumber":152,"author":{"gitId":"tjtanjin"},"content":"                throw new SteveInvalidFormatException(\"Info: Usage for done: \" + DONE_COMMAND.getDescription());"},{"lineNumber":153,"author":{"gitId":"tjtanjin"},"content":"            } else {"},{"lineNumber":154,"author":{"gitId":"tjtanjin"},"content":"                throw new SteveInvalidFormatException(\"Info: Usage for delete: \" + DELETE_COMMAND.getDescription());"},{"lineNumber":155,"author":{"gitId":"tjtanjin"},"content":"            }"},{"lineNumber":156,"author":{"gitId":"tjtanjin"},"content":"        } catch (NumberFormatException e) {"},{"lineNumber":157,"author":{"gitId":"tjtanjin"},"content":"            if (cmd.equals(\"done\")) {"},{"lineNumber":158,"author":{"gitId":"tjtanjin"},"content":"                throw new SteveInvalidParamsException(\"Info: Index of task to mark as done must be a number!\");"},{"lineNumber":159,"author":{"gitId":"tjtanjin"},"content":"            } else {"},{"lineNumber":160,"author":{"gitId":"tjtanjin"},"content":"                throw new SteveInvalidParamsException(\"Info: Index of task to delete must be a number!\");"},{"lineNumber":161,"author":{"gitId":"tjtanjin"},"content":"            }"},{"lineNumber":162,"author":{"gitId":"tjtanjin"},"content":"        }"},{"lineNumber":163,"author":{"gitId":"tjtanjin"},"content":"    }"},{"lineNumber":164,"author":{"gitId":"tjtanjin"},"content":""},{"lineNumber":165,"author":{"gitId":"tjtanjin"},"content":"    /**"},{"lineNumber":166,"author":{"gitId":"tjtanjin"},"content":"     * Parses task name from user input."},{"lineNumber":167,"author":{"gitId":"tjtanjin"},"content":"     *"},{"lineNumber":168,"author":{"gitId":"tjtanjin"},"content":"     * @param input input provided by user"},{"lineNumber":169,"author":{"gitId":"tjtanjin"},"content":"     * @return name of task"},{"lineNumber":170,"author":{"gitId":"tjtanjin"},"content":"     */"},{"lineNumber":171,"author":{"gitId":"tjtanjin"},"content":"    private String parseTaskName(String input) throws SteveInvalidFormatException {"},{"lineNumber":172,"author":{"gitId":"tjtanjin"},"content":"        String[] parsedString \u003d input.split(\"\\\\s+\", 2);"},{"lineNumber":173,"author":{"gitId":"tjtanjin"},"content":"        String taskType \u003d parsedString[0];"},{"lineNumber":174,"author":{"gitId":"tjtanjin"},"content":"        String taskDetails;"},{"lineNumber":175,"author":{"gitId":"tjtanjin"},"content":"        String taskName;"},{"lineNumber":176,"author":{"gitId":"tjtanjin"},"content":""},{"lineNumber":177,"author":{"gitId":"tjtanjin"},"content":"        try {"},{"lineNumber":178,"author":{"gitId":"tjtanjin"},"content":"            taskDetails \u003d parsedString[1];"},{"lineNumber":179,"author":{"gitId":"tjtanjin"},"content":"            if (taskType.toUpperCase().equals(Cmd.TODO.toString())) {"},{"lineNumber":180,"author":{"gitId":"tjtanjin"},"content":"                taskName \u003d taskDetails.trim();"},{"lineNumber":181,"author":{"gitId":"tjtanjin"},"content":"            } else if (taskType.toUpperCase().equals(Cmd.DEADLINE.toString())) {"},{"lineNumber":182,"author":{"gitId":"tjtanjin"},"content":"                taskName \u003d taskDetails.split(\"/by\", 2)[0].trim();"},{"lineNumber":183,"author":{"gitId":"tjtanjin"},"content":"            } else if (taskType.toUpperCase().equals(Cmd.EVENT.toString())) {"},{"lineNumber":184,"author":{"gitId":"tjtanjin"},"content":"                taskName \u003d taskDetails.split(\"/from\", 2)[0].trim();"},{"lineNumber":185,"author":{"gitId":"tjtanjin"},"content":"            } else {"},{"lineNumber":186,"author":{"gitId":"tjtanjin"},"content":"                taskName \u003d parsedString[1];"},{"lineNumber":187,"author":{"gitId":"tjtanjin"},"content":"            }"},{"lineNumber":188,"author":{"gitId":"tjtanjin"},"content":"            return taskName;"},{"lineNumber":189,"author":{"gitId":"tjtanjin"},"content":"        } catch (IndexOutOfBoundsException e) {"},{"lineNumber":190,"author":{"gitId":"tjtanjin"},"content":"            if (taskType.equalsIgnoreCase(\"TODO\")) {"},{"lineNumber":191,"author":{"gitId":"tjtanjin"},"content":"                throw new SteveInvalidFormatException(\"Info: Usage for todo: \""},{"lineNumber":192,"author":{"gitId":"tjtanjin"},"content":"                        + TODO_COMMAND.getDescription());"},{"lineNumber":193,"author":{"gitId":"tjtanjin"},"content":"            } else if (taskType.equalsIgnoreCase(\"DEADLINE\")) {"},{"lineNumber":194,"author":{"gitId":"tjtanjin"},"content":"                throw new SteveInvalidFormatException(\"Info: Usage for deadline: \""},{"lineNumber":195,"author":{"gitId":"tjtanjin"},"content":"                        + DEADLINE_COMMAND.getDescription());"},{"lineNumber":196,"author":{"gitId":"tjtanjin"},"content":"            } else if (taskType.equalsIgnoreCase(\"EVENT\")) {"},{"lineNumber":197,"author":{"gitId":"tjtanjin"},"content":"                throw new SteveInvalidFormatException(\"Info: Usage for event: \""},{"lineNumber":198,"author":{"gitId":"tjtanjin"},"content":"                        + EVENT_COMMAND.getDescription());"},{"lineNumber":199,"author":{"gitId":"tjtanjin"},"content":"            } else {"},{"lineNumber":200,"author":{"gitId":"tjtanjin"},"content":"                throw new SteveInvalidFormatException(\"Info: Usage for find: \""},{"lineNumber":201,"author":{"gitId":"tjtanjin"},"content":"                        + FIND_COMMAND.getDescription());"},{"lineNumber":202,"author":{"gitId":"tjtanjin"},"content":"            }"},{"lineNumber":203,"author":{"gitId":"tjtanjin"},"content":"        }"},{"lineNumber":204,"author":{"gitId":"tjtanjin"},"content":"    }"},{"lineNumber":205,"author":{"gitId":"tjtanjin"},"content":""},{"lineNumber":206,"author":{"gitId":"tjtanjin"},"content":"    /**"},{"lineNumber":207,"author":{"gitId":"tjtanjin"},"content":"     * Parses task due date from user input."},{"lineNumber":208,"author":{"gitId":"tjtanjin"},"content":"     *"},{"lineNumber":209,"author":{"gitId":"tjtanjin"},"content":"     * @param input input provided by user"},{"lineNumber":210,"author":{"gitId":"tjtanjin"},"content":"     * @return array of dates for task"},{"lineNumber":211,"author":{"gitId":"tjtanjin"},"content":"     */"},{"lineNumber":212,"author":{"gitId":"tjtanjin"},"content":"    private LocalDate[] parseTaskDates(String input) throws SteveInvalidFormatException {"},{"lineNumber":213,"author":{"gitId":"tjtanjin"},"content":"        String[] parsedString \u003d input.split(\"\\\\s+\", 2);"},{"lineNumber":214,"author":{"gitId":"tjtanjin"},"content":"        String taskType \u003d parsedString[0];"},{"lineNumber":215,"author":{"gitId":"tjtanjin"},"content":"        String taskDetails \u003d parsedString[1];"},{"lineNumber":216,"author":{"gitId":"tjtanjin"},"content":"        LocalDate[] taskDates \u003d new LocalDate[2];"},{"lineNumber":217,"author":{"gitId":"tjtanjin"},"content":""},{"lineNumber":218,"author":{"gitId":"tjtanjin"},"content":"        try {"},{"lineNumber":219,"author":{"gitId":"tjtanjin"},"content":"            if (taskType.toUpperCase().equals(Cmd.DEADLINE.toString())) {"},{"lineNumber":220,"author":{"gitId":"tjtanjin"},"content":"                taskDates[0] \u003d LocalDate.parse(taskDetails.split(\"/by\", 2)[1].trim());"},{"lineNumber":221,"author":{"gitId":"tjtanjin"},"content":"            } else if (taskType.toUpperCase().equals(Cmd.EVENT.toString())) {"},{"lineNumber":222,"author":{"gitId":"tjtanjin"},"content":"                String[] startEndDates \u003d taskDetails.split(\"/from\", 2)[1].split(\"/to\", 2);"},{"lineNumber":223,"author":{"gitId":"tjtanjin"},"content":"                taskDates[0] \u003d LocalDate.parse(startEndDates[0].trim());"},{"lineNumber":224,"author":{"gitId":"tjtanjin"},"content":"                taskDates[1] \u003d LocalDate.parse(startEndDates[1].trim());"},{"lineNumber":225,"author":{"gitId":"tjtanjin"},"content":"            }"},{"lineNumber":226,"author":{"gitId":"tjtanjin"},"content":"        } catch (IndexOutOfBoundsException | NullPointerException | DateTimeException e) {"},{"lineNumber":227,"author":{"gitId":"tjtanjin"},"content":"            if (taskType.equalsIgnoreCase(Cmd.DEADLINE.toString())) {"},{"lineNumber":228,"author":{"gitId":"tjtanjin"},"content":"                throw new SteveInvalidFormatException(\"Error: Invalid date specified, \""},{"lineNumber":229,"author":{"gitId":"tjtanjin"},"content":"                        + \"please adhere to the format: /by YYYY-MM-DD\");"},{"lineNumber":230,"author":{"gitId":"tjtanjin"},"content":"            } else {"},{"lineNumber":231,"author":{"gitId":"tjtanjin"},"content":"                throw new SteveInvalidFormatException(\"Error: Invalid date specified, \""},{"lineNumber":232,"author":{"gitId":"tjtanjin"},"content":"                        + \"please adhere to the format: /from YYYY-MM-DD /to YYYY-MM-DD\");"},{"lineNumber":233,"author":{"gitId":"tjtanjin"},"content":"            }"},{"lineNumber":234,"author":{"gitId":"tjtanjin"},"content":"        }"},{"lineNumber":235,"author":{"gitId":"tjtanjin"},"content":"        return taskDates;"},{"lineNumber":236,"author":{"gitId":"tjtanjin"},"content":"    }"},{"lineNumber":237,"author":{"gitId":"tjtanjin"},"content":"}"}],"authorContributionMap":{"tjtanjin":237}},{"path":"src/main/java/com/tjtanjin/steve/parser/SteveInvalidFormatException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tjtanjin"},"content":"package com.tjtanjin.steve.parser;"},{"lineNumber":2,"author":{"gitId":"tjtanjin"},"content":""},{"lineNumber":3,"author":{"gitId":"tjtanjin"},"content":"/**"},{"lineNumber":4,"author":{"gitId":"tjtanjin"},"content":" * Class for custom exception handling of invalid input format."},{"lineNumber":5,"author":{"gitId":"tjtanjin"},"content":" */"},{"lineNumber":6,"author":{"gitId":"tjtanjin"},"content":"public class SteveInvalidFormatException extends Exception {"},{"lineNumber":7,"author":{"gitId":"tjtanjin"},"content":""},{"lineNumber":8,"author":{"gitId":"tjtanjin"},"content":"    /**"},{"lineNumber":9,"author":{"gitId":"tjtanjin"},"content":"     * Constructor for SteveInvalidFormatException class for custom exceptions"},{"lineNumber":10,"author":{"gitId":"tjtanjin"},"content":"     * of invalid input format."},{"lineNumber":11,"author":{"gitId":"tjtanjin"},"content":"     *"},{"lineNumber":12,"author":{"gitId":"tjtanjin"},"content":"     * @param errMsg error message"},{"lineNumber":13,"author":{"gitId":"tjtanjin"},"content":"     */"},{"lineNumber":14,"author":{"gitId":"tjtanjin"},"content":"    public SteveInvalidFormatException(String errMsg) {"},{"lineNumber":15,"author":{"gitId":"tjtanjin"},"content":"        super(errMsg);"},{"lineNumber":16,"author":{"gitId":"tjtanjin"},"content":"    }"},{"lineNumber":17,"author":{"gitId":"tjtanjin"},"content":"}"}],"authorContributionMap":{"tjtanjin":17}},{"path":"src/main/java/com/tjtanjin/steve/parser/SteveInvalidParamsException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tjtanjin"},"content":"package com.tjtanjin.steve.parser;"},{"lineNumber":2,"author":{"gitId":"tjtanjin"},"content":""},{"lineNumber":3,"author":{"gitId":"tjtanjin"},"content":"/**"},{"lineNumber":4,"author":{"gitId":"tjtanjin"},"content":" * Class for custom exception handling of invalid params format."},{"lineNumber":5,"author":{"gitId":"tjtanjin"},"content":" */"},{"lineNumber":6,"author":{"gitId":"tjtanjin"},"content":"public class SteveInvalidParamsException extends Exception {"},{"lineNumber":7,"author":{"gitId":"tjtanjin"},"content":""},{"lineNumber":8,"author":{"gitId":"tjtanjin"},"content":"    /**"},{"lineNumber":9,"author":{"gitId":"tjtanjin"},"content":"     * Constructor for SteveInvalidParamsException class for custom exceptions"},{"lineNumber":10,"author":{"gitId":"tjtanjin"},"content":"     * of invalid params format."},{"lineNumber":11,"author":{"gitId":"tjtanjin"},"content":"     *"},{"lineNumber":12,"author":{"gitId":"tjtanjin"},"content":"     * @param errMsg error message"},{"lineNumber":13,"author":{"gitId":"tjtanjin"},"content":"     */"},{"lineNumber":14,"author":{"gitId":"tjtanjin"},"content":"    public SteveInvalidParamsException(String errMsg) {"},{"lineNumber":15,"author":{"gitId":"tjtanjin"},"content":"        super(errMsg);"},{"lineNumber":16,"author":{"gitId":"tjtanjin"},"content":"    }"},{"lineNumber":17,"author":{"gitId":"tjtanjin"},"content":"}"}],"authorContributionMap":{"tjtanjin":17}},{"path":"src/main/java/com/tjtanjin/steve/storage/StorageHandler.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tjtanjin"},"content":"package com.tjtanjin.steve.storage;"},{"lineNumber":2,"author":{"gitId":"tjtanjin"},"content":""},{"lineNumber":3,"author":{"gitId":"tjtanjin"},"content":"import java.io.File;"},{"lineNumber":4,"author":{"gitId":"tjtanjin"},"content":"import java.io.FileReader;"},{"lineNumber":5,"author":{"gitId":"tjtanjin"},"content":"import java.io.FileWriter;"},{"lineNumber":6,"author":{"gitId":"tjtanjin"},"content":"import java.io.IOException;"},{"lineNumber":7,"author":{"gitId":"tjtanjin"},"content":"import java.time.LocalDate;"},{"lineNumber":8,"author":{"gitId":"tjtanjin"},"content":"import java.time.format.DateTimeFormatter;"},{"lineNumber":9,"author":{"gitId":"tjtanjin"},"content":"import java.util.ArrayList;"},{"lineNumber":10,"author":{"gitId":"tjtanjin"},"content":""},{"lineNumber":11,"author":{"gitId":"tjtanjin"},"content":"import org.json.simple.JSONArray;"},{"lineNumber":12,"author":{"gitId":"tjtanjin"},"content":"import org.json.simple.JSONObject;"},{"lineNumber":13,"author":{"gitId":"tjtanjin"},"content":"import org.json.simple.parser.JSONParser;"},{"lineNumber":14,"author":{"gitId":"tjtanjin"},"content":"import org.json.simple.parser.ParseException;"},{"lineNumber":15,"author":{"gitId":"tjtanjin"},"content":""},{"lineNumber":16,"author":{"gitId":"tjtanjin"},"content":"import com.tjtanjin.steve.tasks.Deadline;"},{"lineNumber":17,"author":{"gitId":"tjtanjin"},"content":"import com.tjtanjin.steve.tasks.Event;"},{"lineNumber":18,"author":{"gitId":"tjtanjin"},"content":"import com.tjtanjin.steve.tasks.Task;"},{"lineNumber":19,"author":{"gitId":"tjtanjin"},"content":"import com.tjtanjin.steve.tasks.ToDo;"},{"lineNumber":20,"author":{"gitId":"tjtanjin"},"content":"import com.tjtanjin.steve.ui.UiHandler;"},{"lineNumber":21,"author":{"gitId":"tjtanjin"},"content":""},{"lineNumber":22,"author":{"gitId":"tjtanjin"},"content":"/**"},{"lineNumber":23,"author":{"gitId":"tjtanjin"},"content":" * StorageHandler manages the saving/loading of tasks from hard disk and is managed through the"},{"lineNumber":24,"author":{"gitId":"tjtanjin"},"content":" * TaskHandler."},{"lineNumber":25,"author":{"gitId":"tjtanjin"},"content":" */"},{"lineNumber":26,"author":{"gitId":"tjtanjin"},"content":"public class StorageHandler {"},{"lineNumber":27,"author":{"gitId":"tjtanjin"},"content":""},{"lineNumber":28,"author":{"gitId":"tjtanjin"},"content":"    private ArrayList\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();"},{"lineNumber":29,"author":{"gitId":"tjtanjin"},"content":"    private final String PATH;"},{"lineNumber":30,"author":{"gitId":"tjtanjin"},"content":"    private JSONArray taskList \u003d new JSONArray();"},{"lineNumber":31,"author":{"gitId":"tjtanjin"},"content":""},{"lineNumber":32,"author":{"gitId":"tjtanjin"},"content":"    /**"},{"lineNumber":33,"author":{"gitId":"tjtanjin"},"content":"     * Constructor for StorageHandler."},{"lineNumber":34,"author":{"gitId":"tjtanjin"},"content":"     *"},{"lineNumber":35,"author":{"gitId":"tjtanjin"},"content":"     * @param path path to look for or create storage file"},{"lineNumber":36,"author":{"gitId":"tjtanjin"},"content":"     */"},{"lineNumber":37,"author":{"gitId":"tjtanjin"},"content":"    public StorageHandler(String path) {"},{"lineNumber":38,"author":{"gitId":"tjtanjin"},"content":"        this.PATH \u003d path;"},{"lineNumber":39,"author":{"gitId":"tjtanjin"},"content":"    }"},{"lineNumber":40,"author":{"gitId":"tjtanjin"},"content":""},{"lineNumber":41,"author":{"gitId":"tjtanjin"},"content":"    //solution below adapted from https://howtodoinjava.com/java/library/json-simple-read-write-json-examples/"},{"lineNumber":42,"author":{"gitId":"tjtanjin"},"content":"    /**"},{"lineNumber":43,"author":{"gitId":"tjtanjin"},"content":"     * Loads saved tasks from hard disk."},{"lineNumber":44,"author":{"gitId":"tjtanjin"},"content":"     *"},{"lineNumber":45,"author":{"gitId":"tjtanjin"},"content":"     * @return array list of tasks"},{"lineNumber":46,"author":{"gitId":"tjtanjin"},"content":"     */"},{"lineNumber":47,"author":{"gitId":"tjtanjin"},"content":"    @SuppressWarnings(\"unchecked\")"},{"lineNumber":48,"author":{"gitId":"tjtanjin"},"content":"    public ArrayList\u003cTask\u003e loadTasks() {"},{"lineNumber":49,"author":{"gitId":"tjtanjin"},"content":""},{"lineNumber":50,"author":{"gitId":"tjtanjin"},"content":"        File tasksFile \u003d new File(this.PATH);"},{"lineNumber":51,"author":{"gitId":"tjtanjin"},"content":"        try {"},{"lineNumber":52,"author":{"gitId":"tjtanjin"},"content":"            tasksFile.getParentFile().mkdirs();"},{"lineNumber":53,"author":{"gitId":"tjtanjin"},"content":"            tasksFile.createNewFile();"},{"lineNumber":54,"author":{"gitId":"tjtanjin"},"content":"        } catch (IOException e) {"},{"lineNumber":55,"author":{"gitId":"tjtanjin"},"content":"            //special case of directly accessing controller due to critical error"},{"lineNumber":56,"author":{"gitId":"tjtanjin"},"content":"            UiHandler.getFxmlLoader().\u003cUiHandler\u003egetController().showResponse(\"Terminated: Steve has no permission\""},{"lineNumber":57,"author":{"gitId":"tjtanjin"},"content":"                    + \"to create storage file. Please check and restart the application.\");"},{"lineNumber":58,"author":{"gitId":"tjtanjin"},"content":"        }"},{"lineNumber":59,"author":{"gitId":"tjtanjin"},"content":""},{"lineNumber":60,"author":{"gitId":"tjtanjin"},"content":"        //JSON parser object to parse read file"},{"lineNumber":61,"author":{"gitId":"tjtanjin"},"content":"        JSONParser jsonParser \u003d new JSONParser();"},{"lineNumber":62,"author":{"gitId":"tjtanjin"},"content":""},{"lineNumber":63,"author":{"gitId":"tjtanjin"},"content":"        try (FileReader reader \u003d new FileReader(this.PATH)) {"},{"lineNumber":64,"author":{"gitId":"tjtanjin"},"content":"            //read JSON file"},{"lineNumber":65,"author":{"gitId":"tjtanjin"},"content":"            Object obj \u003d jsonParser.parse(reader);"},{"lineNumber":66,"author":{"gitId":"tjtanjin"},"content":""},{"lineNumber":67,"author":{"gitId":"tjtanjin"},"content":"            taskList \u003d (JSONArray) obj;"},{"lineNumber":68,"author":{"gitId":"tjtanjin"},"content":""},{"lineNumber":69,"author":{"gitId":"tjtanjin"},"content":"            //load each task"},{"lineNumber":70,"author":{"gitId":"tjtanjin"},"content":"            taskList.forEach(emp -\u003e parseTaskGroup((JSONObject) emp));"},{"lineNumber":71,"author":{"gitId":"tjtanjin"},"content":"        } catch (IOException | ParseException e) {"},{"lineNumber":72,"author":{"gitId":"tjtanjin"},"content":"            //do nothing, empty file is ok just means nothing to load"},{"lineNumber":73,"author":{"gitId":"tjtanjin"},"content":"        }"},{"lineNumber":74,"author":{"gitId":"tjtanjin"},"content":"        return tasks;"},{"lineNumber":75,"author":{"gitId":"tjtanjin"},"content":"    }"},{"lineNumber":76,"author":{"gitId":"tjtanjin"},"content":""},{"lineNumber":77,"author":{"gitId":"tjtanjin"},"content":"    /**"},{"lineNumber":78,"author":{"gitId":"tjtanjin"},"content":"     * Retrieves individual task information and repopulate them into taskList."},{"lineNumber":79,"author":{"gitId":"tjtanjin"},"content":"     *"},{"lineNumber":80,"author":{"gitId":"tjtanjin"},"content":"     * @param task task to retrieve information for"},{"lineNumber":81,"author":{"gitId":"tjtanjin"},"content":"     */"},{"lineNumber":82,"author":{"gitId":"tjtanjin"},"content":"    private void parseTaskGroup(JSONObject task) {"},{"lineNumber":83,"author":{"gitId":"tjtanjin"},"content":"        JSONObject taskDetails \u003d (JSONObject) task.get(\"task\");"},{"lineNumber":84,"author":{"gitId":"tjtanjin"},"content":""},{"lineNumber":85,"author":{"gitId":"tjtanjin"},"content":"        String taskName \u003d (String) taskDetails.get(\"taskName\");"},{"lineNumber":86,"author":{"gitId":"tjtanjin"},"content":""},{"lineNumber":87,"author":{"gitId":"tjtanjin"},"content":"        String status \u003d (String) taskDetails.get(\"status\");"},{"lineNumber":88,"author":{"gitId":"tjtanjin"},"content":""},{"lineNumber":89,"author":{"gitId":"tjtanjin"},"content":"        String type \u003d (String) taskDetails.get(\"type\");"},{"lineNumber":90,"author":{"gitId":"tjtanjin"},"content":""},{"lineNumber":91,"author":{"gitId":"tjtanjin"},"content":"        assert taskName !\u003d null;"},{"lineNumber":92,"author":{"gitId":"tjtanjin"},"content":"        assert status !\u003d null;"},{"lineNumber":93,"author":{"gitId":"tjtanjin"},"content":"        assert type !\u003d null;"},{"lineNumber":94,"author":{"gitId":"tjtanjin"},"content":""},{"lineNumber":95,"author":{"gitId":"tjtanjin"},"content":"        if (type.equals(\"TODO\")) {"},{"lineNumber":96,"author":{"gitId":"tjtanjin"},"content":"            tasks.add(new ToDo(taskName, status));"},{"lineNumber":97,"author":{"gitId":"tjtanjin"},"content":"        } else if (type.equals(\"DEADLINE\")) {"},{"lineNumber":98,"author":{"gitId":"tjtanjin"},"content":"            String endDate \u003d (String) taskDetails.get(\"endDate\");"},{"lineNumber":99,"author":{"gitId":"tjtanjin"},"content":"            LocalDate[] taskDates \u003d new LocalDate[1];"},{"lineNumber":100,"author":{"gitId":"tjtanjin"},"content":"            taskDates[0] \u003d LocalDate.parse(endDate);"},{"lineNumber":101,"author":{"gitId":"tjtanjin"},"content":"            tasks.add(new Deadline(taskName, status, taskDates));"},{"lineNumber":102,"author":{"gitId":"tjtanjin"},"content":"        } else {"},{"lineNumber":103,"author":{"gitId":"tjtanjin"},"content":"            String startDate \u003d (String) taskDetails.get(\"startDate\");"},{"lineNumber":104,"author":{"gitId":"tjtanjin"},"content":"            String endDate \u003d (String) taskDetails.get(\"endDate\");"},{"lineNumber":105,"author":{"gitId":"tjtanjin"},"content":"            LocalDate[] taskDates \u003d new LocalDate[2];"},{"lineNumber":106,"author":{"gitId":"tjtanjin"},"content":"            taskDates[0] \u003d LocalDate.parse(startDate);"},{"lineNumber":107,"author":{"gitId":"tjtanjin"},"content":"            taskDates[1] \u003d LocalDate.parse(endDate);"},{"lineNumber":108,"author":{"gitId":"tjtanjin"},"content":"            tasks.add(new Event(taskName, status, taskDates));"},{"lineNumber":109,"author":{"gitId":"tjtanjin"},"content":"        }"},{"lineNumber":110,"author":{"gitId":"tjtanjin"},"content":"    }"},{"lineNumber":111,"author":{"gitId":"tjtanjin"},"content":""},{"lineNumber":112,"author":{"gitId":"tjtanjin"},"content":"    //solution below adapted from https://howtodoinjava.com/java/library/json-simple-read-write-json-examples/"},{"lineNumber":113,"author":{"gitId":"tjtanjin"},"content":"    /**"},{"lineNumber":114,"author":{"gitId":"tjtanjin"},"content":"     * Saves task into hard disk."},{"lineNumber":115,"author":{"gitId":"tjtanjin"},"content":"     *"},{"lineNumber":116,"author":{"gitId":"tjtanjin"},"content":"     * @param index index of task being saved"},{"lineNumber":117,"author":{"gitId":"tjtanjin"},"content":"     * @param saveType type of save operation (new task, modify existing task or deleting task)"},{"lineNumber":118,"author":{"gitId":"tjtanjin"},"content":"     * @param taskName name of task"},{"lineNumber":119,"author":{"gitId":"tjtanjin"},"content":"     * @param status status of task (incomplete or complete)"},{"lineNumber":120,"author":{"gitId":"tjtanjin"},"content":"     * @param type type of task (todo, deadline or event)"},{"lineNumber":121,"author":{"gitId":"tjtanjin"},"content":"     * @param taskDates array of dates (defaults to first element for deadline end date)"},{"lineNumber":122,"author":{"gitId":"tjtanjin"},"content":"     * @return true if saving task was successful, false otherwise"},{"lineNumber":123,"author":{"gitId":"tjtanjin"},"content":"     */"},{"lineNumber":124,"author":{"gitId":"tjtanjin"},"content":"    @SuppressWarnings(\"unchecked\")"},{"lineNumber":125,"author":{"gitId":"tjtanjin"},"content":"    public boolean saveTask(int index, String saveType, String taskName,"},{"lineNumber":126,"author":{"gitId":"tjtanjin"},"content":"            String status, String type, LocalDate[] taskDates) {"},{"lineNumber":127,"author":{"gitId":"tjtanjin"},"content":""},{"lineNumber":128,"author":{"gitId":"tjtanjin"},"content":"        JSONObject taskDetails \u003d parseTaskToJson(taskName, status, type, taskDates);"},{"lineNumber":129,"author":{"gitId":"tjtanjin"},"content":""},{"lineNumber":130,"author":{"gitId":"tjtanjin"},"content":"        JSONObject taskGroup \u003d new JSONObject();"},{"lineNumber":131,"author":{"gitId":"tjtanjin"},"content":"        taskGroup.put(\"task\", taskDetails);"},{"lineNumber":132,"author":{"gitId":"tjtanjin"},"content":""},{"lineNumber":133,"author":{"gitId":"tjtanjin"},"content":"        //add or update or delete task"},{"lineNumber":134,"author":{"gitId":"tjtanjin"},"content":"        if (saveType.equals(\"NEW\")) {"},{"lineNumber":135,"author":{"gitId":"tjtanjin"},"content":"            taskList.add(taskGroup);"},{"lineNumber":136,"author":{"gitId":"tjtanjin"},"content":"        } else if (saveType.equals(\"DONE\")) {"},{"lineNumber":137,"author":{"gitId":"tjtanjin"},"content":"            taskList.set(index, taskGroup);"},{"lineNumber":138,"author":{"gitId":"tjtanjin"},"content":"        } else {"},{"lineNumber":139,"author":{"gitId":"tjtanjin"},"content":"            taskList.remove(index);"},{"lineNumber":140,"author":{"gitId":"tjtanjin"},"content":"        }"},{"lineNumber":141,"author":{"gitId":"tjtanjin"},"content":""},{"lineNumber":142,"author":{"gitId":"tjtanjin"},"content":"        return writeToFile();"},{"lineNumber":143,"author":{"gitId":"tjtanjin"},"content":"    }"},{"lineNumber":144,"author":{"gitId":"tjtanjin"},"content":""},{"lineNumber":145,"author":{"gitId":"tjtanjin"},"content":"    /**"},{"lineNumber":146,"author":{"gitId":"tjtanjin"},"content":"     * Reverts task list by one modification."},{"lineNumber":147,"author":{"gitId":"tjtanjin"},"content":"     */"},{"lineNumber":148,"author":{"gitId":"tjtanjin"},"content":"    public boolean revertTask(ArrayList\u003cTask\u003e revertedTasks) {"},{"lineNumber":149,"author":{"gitId":"tjtanjin"},"content":"        System.out.println(revertedTasks.size());"},{"lineNumber":150,"author":{"gitId":"tjtanjin"},"content":"        this.tasks \u003d revertedTasks;"},{"lineNumber":151,"author":{"gitId":"tjtanjin"},"content":"        JSONArray taskList \u003d new JSONArray();"},{"lineNumber":152,"author":{"gitId":"tjtanjin"},"content":""},{"lineNumber":153,"author":{"gitId":"tjtanjin"},"content":"        this.tasks.forEach(task -\u003e {"},{"lineNumber":154,"author":{"gitId":"tjtanjin"},"content":"            String taskName \u003d task.getTaskName();"},{"lineNumber":155,"author":{"gitId":"tjtanjin"},"content":"            String status \u003d task.getStatus();"},{"lineNumber":156,"author":{"gitId":"tjtanjin"},"content":"            String type \u003d task.getType();"},{"lineNumber":157,"author":{"gitId":"tjtanjin"},"content":"            LocalDate[] taskDates \u003d task.getDates();"},{"lineNumber":158,"author":{"gitId":"tjtanjin"},"content":"            JSONObject taskDetails \u003d parseTaskToJson(taskName, status, type, taskDates);"},{"lineNumber":159,"author":{"gitId":"tjtanjin"},"content":"            JSONObject taskGroup \u003d new JSONObject();"},{"lineNumber":160,"author":{"gitId":"tjtanjin"},"content":"            taskGroup.put(\"task\", taskDetails);"},{"lineNumber":161,"author":{"gitId":"tjtanjin"},"content":"            taskList.add(taskGroup);"},{"lineNumber":162,"author":{"gitId":"tjtanjin"},"content":"        });"},{"lineNumber":163,"author":{"gitId":"tjtanjin"},"content":"        this.taskList \u003d taskList;"},{"lineNumber":164,"author":{"gitId":"tjtanjin"},"content":"        return writeToFile();"},{"lineNumber":165,"author":{"gitId":"tjtanjin"},"content":"    }"},{"lineNumber":166,"author":{"gitId":"tjtanjin"},"content":""},{"lineNumber":167,"author":{"gitId":"tjtanjin"},"content":"    /**"},{"lineNumber":168,"author":{"gitId":"tjtanjin"},"content":"     * Groups task information into a json object."},{"lineNumber":169,"author":{"gitId":"tjtanjin"},"content":"     *"},{"lineNumber":170,"author":{"gitId":"tjtanjin"},"content":"     * @param taskName name of task"},{"lineNumber":171,"author":{"gitId":"tjtanjin"},"content":"     * @param status status of task"},{"lineNumber":172,"author":{"gitId":"tjtanjin"},"content":"     * @param type type of task"},{"lineNumber":173,"author":{"gitId":"tjtanjin"},"content":"     * @param taskDates due dates of task"},{"lineNumber":174,"author":{"gitId":"tjtanjin"},"content":"     * @return json object containing task information"},{"lineNumber":175,"author":{"gitId":"tjtanjin"},"content":"     */"},{"lineNumber":176,"author":{"gitId":"tjtanjin"},"content":"    public JSONObject parseTaskToJson(String taskName, String status, String type, LocalDate[] taskDates) {"},{"lineNumber":177,"author":{"gitId":"tjtanjin"},"content":"        JSONObject taskDetails \u003d new JSONObject();"},{"lineNumber":178,"author":{"gitId":"tjtanjin"},"content":"        taskDetails.put(\"taskName\", taskName);"},{"lineNumber":179,"author":{"gitId":"tjtanjin"},"content":"        taskDetails.put(\"status\", status);"},{"lineNumber":180,"author":{"gitId":"tjtanjin"},"content":"        taskDetails.put(\"type\", type);"},{"lineNumber":181,"author":{"gitId":"tjtanjin"},"content":""},{"lineNumber":182,"author":{"gitId":"tjtanjin"},"content":"        //convert datetime to string"},{"lineNumber":183,"author":{"gitId":"tjtanjin"},"content":"        if (taskDates !\u003d null) {"},{"lineNumber":184,"author":{"gitId":"tjtanjin"},"content":"            if (type.equals(\"DEADLINE\")) {"},{"lineNumber":185,"author":{"gitId":"tjtanjin"},"content":"                String dueDateStr \u003d taskDates[0].format(DateTimeFormatter.ofPattern(\"yyyy-MM-dd\"));"},{"lineNumber":186,"author":{"gitId":"tjtanjin"},"content":"                taskDetails.put(\"endDate\", dueDateStr);"},{"lineNumber":187,"author":{"gitId":"tjtanjin"},"content":"            } else if (type.equals(\"EVENT\")) {"},{"lineNumber":188,"author":{"gitId":"tjtanjin"},"content":"                String startDateStr \u003d taskDates[0].format(DateTimeFormatter.ofPattern(\"yyyy-MM-dd\"));"},{"lineNumber":189,"author":{"gitId":"tjtanjin"},"content":"                String endDateStr \u003d taskDates[1].format(DateTimeFormatter.ofPattern(\"yyyy-MM-dd\"));"},{"lineNumber":190,"author":{"gitId":"tjtanjin"},"content":"                taskDetails.put(\"startDate\", startDateStr);"},{"lineNumber":191,"author":{"gitId":"tjtanjin"},"content":"                taskDetails.put(\"endDate\", endDateStr);"},{"lineNumber":192,"author":{"gitId":"tjtanjin"},"content":"            }"},{"lineNumber":193,"author":{"gitId":"tjtanjin"},"content":"        }"},{"lineNumber":194,"author":{"gitId":"tjtanjin"},"content":"        return taskDetails;"},{"lineNumber":195,"author":{"gitId":"tjtanjin"},"content":"    }"},{"lineNumber":196,"author":{"gitId":"tjtanjin"},"content":""},{"lineNumber":197,"author":{"gitId":"tjtanjin"},"content":"    /**"},{"lineNumber":198,"author":{"gitId":"tjtanjin"},"content":"     * Writes task information into json file."},{"lineNumber":199,"author":{"gitId":"tjtanjin"},"content":"     *"},{"lineNumber":200,"author":{"gitId":"tjtanjin"},"content":"     * @return true or false to indicate if file was written to successfully"},{"lineNumber":201,"author":{"gitId":"tjtanjin"},"content":"     */"},{"lineNumber":202,"author":{"gitId":"tjtanjin"},"content":"    public boolean writeToFile() {"},{"lineNumber":203,"author":{"gitId":"tjtanjin"},"content":"        try (FileWriter file \u003d new FileWriter(this.PATH)) {"},{"lineNumber":204,"author":{"gitId":"tjtanjin"},"content":""},{"lineNumber":205,"author":{"gitId":"tjtanjin"},"content":"            file.write(taskList.toJSONString());"},{"lineNumber":206,"author":{"gitId":"tjtanjin"},"content":"            file.flush();"},{"lineNumber":207,"author":{"gitId":"tjtanjin"},"content":"            return true;"},{"lineNumber":208,"author":{"gitId":"tjtanjin"},"content":""},{"lineNumber":209,"author":{"gitId":"tjtanjin"},"content":"        } catch (IOException e) {"},{"lineNumber":210,"author":{"gitId":"tjtanjin"},"content":"            return false;"},{"lineNumber":211,"author":{"gitId":"tjtanjin"},"content":"        }"},{"lineNumber":212,"author":{"gitId":"tjtanjin"},"content":"    }"},{"lineNumber":213,"author":{"gitId":"tjtanjin"},"content":"}"}],"authorContributionMap":{"tjtanjin":213}},{"path":"src/main/java/com/tjtanjin/steve/tasks/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tjtanjin"},"content":"package com.tjtanjin.steve.tasks;"},{"lineNumber":2,"author":{"gitId":"tjtanjin"},"content":""},{"lineNumber":3,"author":{"gitId":"tjtanjin"},"content":"import java.time.LocalDate;"},{"lineNumber":4,"author":{"gitId":"tjtanjin"},"content":"import java.time.format.DateTimeFormatter;"},{"lineNumber":5,"author":{"gitId":"tjtanjin"},"content":""},{"lineNumber":6,"author":{"gitId":"tjtanjin"},"content":"/**"},{"lineNumber":7,"author":{"gitId":"tjtanjin"},"content":" * Deadline is a child class of Task, containing additional"},{"lineNumber":8,"author":{"gitId":"tjtanjin"},"content":" * support for an endDate."},{"lineNumber":9,"author":{"gitId":"tjtanjin"},"content":" */"},{"lineNumber":10,"author":{"gitId":"tjtanjin"},"content":"public class Deadline extends Task {"},{"lineNumber":11,"author":{"gitId":"tjtanjin"},"content":"    private final LocalDate END_DATE;"},{"lineNumber":12,"author":{"gitId":"tjtanjin"},"content":""},{"lineNumber":13,"author":{"gitId":"tjtanjin"},"content":"    /**"},{"lineNumber":14,"author":{"gitId":"tjtanjin"},"content":"     * Constructor for Deadline class."},{"lineNumber":15,"author":{"gitId":"tjtanjin"},"content":"     *"},{"lineNumber":16,"author":{"gitId":"tjtanjin"},"content":"     * @param taskName name of task"},{"lineNumber":17,"author":{"gitId":"tjtanjin"},"content":"     * @param status task completion status"},{"lineNumber":18,"author":{"gitId":"tjtanjin"},"content":"     * @param taskDates array of dates (defaults to first element for deadline end date)"},{"lineNumber":19,"author":{"gitId":"tjtanjin"},"content":"     */"},{"lineNumber":20,"author":{"gitId":"tjtanjin"},"content":"    public Deadline(String taskName, String status, LocalDate[] taskDates) {"},{"lineNumber":21,"author":{"gitId":"tjtanjin"},"content":"        super(taskName, status, \"DEADLINE\");"},{"lineNumber":22,"author":{"gitId":"tjtanjin"},"content":"        this.END_DATE \u003d taskDates[0];"},{"lineNumber":23,"author":{"gitId":"tjtanjin"},"content":"    }"},{"lineNumber":24,"author":{"gitId":"tjtanjin"},"content":""},{"lineNumber":25,"author":{"gitId":"tjtanjin"},"content":"    /**"},{"lineNumber":26,"author":{"gitId":"tjtanjin"},"content":"     * Gets array of due dates, only 1 element for Deadline class."},{"lineNumber":27,"author":{"gitId":"tjtanjin"},"content":"     *"},{"lineNumber":28,"author":{"gitId":"tjtanjin"},"content":"     * @return array of due dates with 1 element"},{"lineNumber":29,"author":{"gitId":"tjtanjin"},"content":"     */"},{"lineNumber":30,"author":{"gitId":"tjtanjin"},"content":"    @Override"},{"lineNumber":31,"author":{"gitId":"tjtanjin"},"content":"    public LocalDate[] getDates() {"},{"lineNumber":32,"author":{"gitId":"tjtanjin"},"content":"        LocalDate[] taskDates \u003d new LocalDate[1];"},{"lineNumber":33,"author":{"gitId":"tjtanjin"},"content":"        taskDates[0] \u003d this.END_DATE;"},{"lineNumber":34,"author":{"gitId":"tjtanjin"},"content":"        return taskDates;"},{"lineNumber":35,"author":{"gitId":"tjtanjin"},"content":"    }"},{"lineNumber":36,"author":{"gitId":"tjtanjin"},"content":""},{"lineNumber":37,"author":{"gitId":"tjtanjin"},"content":"    /**"},{"lineNumber":38,"author":{"gitId":"tjtanjin"},"content":"     * Marks deadline task as completed."},{"lineNumber":39,"author":{"gitId":"tjtanjin"},"content":"     *"},{"lineNumber":40,"author":{"gitId":"tjtanjin"},"content":"     * @return task with status marked as complete"},{"lineNumber":41,"author":{"gitId":"tjtanjin"},"content":"     */"},{"lineNumber":42,"author":{"gitId":"tjtanjin"},"content":"    @Override"},{"lineNumber":43,"author":{"gitId":"tjtanjin"},"content":"    public Task markCompleted() {"},{"lineNumber":44,"author":{"gitId":"tjtanjin"},"content":"        return new Deadline(getTaskName(), \"complete\", getDates());"},{"lineNumber":45,"author":{"gitId":"tjtanjin"},"content":"    }"},{"lineNumber":46,"author":{"gitId":"tjtanjin"},"content":""},{"lineNumber":47,"author":{"gitId":"tjtanjin"},"content":"    /**"},{"lineNumber":48,"author":{"gitId":"tjtanjin"},"content":"     * Gets the string describing deadline."},{"lineNumber":49,"author":{"gitId":"tjtanjin"},"content":"     *"},{"lineNumber":50,"author":{"gitId":"tjtanjin"},"content":"     * @return String describing deadline"},{"lineNumber":51,"author":{"gitId":"tjtanjin"},"content":"     */"},{"lineNumber":52,"author":{"gitId":"tjtanjin"},"content":"    @Override"},{"lineNumber":53,"author":{"gitId":"tjtanjin"},"content":"    public String toString() {"},{"lineNumber":54,"author":{"gitId":"tjtanjin"},"content":"        return super.toString()"},{"lineNumber":55,"author":{"gitId":"tjtanjin"},"content":"                + \" (by: \" + this.END_DATE.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\")) + \")\";"},{"lineNumber":56,"author":{"gitId":"tjtanjin"},"content":"    }"},{"lineNumber":57,"author":{"gitId":"tjtanjin"},"content":"}"}],"authorContributionMap":{"tjtanjin":57}},{"path":"src/main/java/com/tjtanjin/steve/tasks/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tjtanjin"},"content":"package com.tjtanjin.steve.tasks;"},{"lineNumber":2,"author":{"gitId":"tjtanjin"},"content":""},{"lineNumber":3,"author":{"gitId":"tjtanjin"},"content":"import java.time.LocalDate;"},{"lineNumber":4,"author":{"gitId":"tjtanjin"},"content":"import java.time.format.DateTimeFormatter;"},{"lineNumber":5,"author":{"gitId":"tjtanjin"},"content":""},{"lineNumber":6,"author":{"gitId":"tjtanjin"},"content":"/**"},{"lineNumber":7,"author":{"gitId":"tjtanjin"},"content":" * Event is a child class of Task, containing additional"},{"lineNumber":8,"author":{"gitId":"tjtanjin"},"content":" * support for an endDate."},{"lineNumber":9,"author":{"gitId":"tjtanjin"},"content":" */"},{"lineNumber":10,"author":{"gitId":"tjtanjin"},"content":"public class Event extends Task {"},{"lineNumber":11,"author":{"gitId":"tjtanjin"},"content":"    private final LocalDate START_DATE;"},{"lineNumber":12,"author":{"gitId":"tjtanjin"},"content":"    private final LocalDate END_DATE;"},{"lineNumber":13,"author":{"gitId":"tjtanjin"},"content":""},{"lineNumber":14,"author":{"gitId":"tjtanjin"},"content":"    /**"},{"lineNumber":15,"author":{"gitId":"tjtanjin"},"content":"     * Constructor for Event class."},{"lineNumber":16,"author":{"gitId":"tjtanjin"},"content":"     *"},{"lineNumber":17,"author":{"gitId":"tjtanjin"},"content":"     * @param taskName name of task"},{"lineNumber":18,"author":{"gitId":"tjtanjin"},"content":"     * @param status task completion status"},{"lineNumber":19,"author":{"gitId":"tjtanjin"},"content":"     * @param taskDates array of dates (first element is start date, second element is end date)"},{"lineNumber":20,"author":{"gitId":"tjtanjin"},"content":"     */"},{"lineNumber":21,"author":{"gitId":"tjtanjin"},"content":"    public Event(String taskName, String status, LocalDate[] taskDates) {"},{"lineNumber":22,"author":{"gitId":"tjtanjin"},"content":"        super(taskName, status, \"EVENT\");"},{"lineNumber":23,"author":{"gitId":"tjtanjin"},"content":"        this.START_DATE \u003d taskDates[0];"},{"lineNumber":24,"author":{"gitId":"tjtanjin"},"content":"        this.END_DATE \u003d taskDates[1];"},{"lineNumber":25,"author":{"gitId":"tjtanjin"},"content":"    }"},{"lineNumber":26,"author":{"gitId":"tjtanjin"},"content":""},{"lineNumber":27,"author":{"gitId":"tjtanjin"},"content":"    /**"},{"lineNumber":28,"author":{"gitId":"tjtanjin"},"content":"     * Gets array of due dates, 2 elements for event class."},{"lineNumber":29,"author":{"gitId":"tjtanjin"},"content":"     *"},{"lineNumber":30,"author":{"gitId":"tjtanjin"},"content":"     * @return array with 2 elements representing start and end date"},{"lineNumber":31,"author":{"gitId":"tjtanjin"},"content":"     */"},{"lineNumber":32,"author":{"gitId":"tjtanjin"},"content":"    @Override"},{"lineNumber":33,"author":{"gitId":"tjtanjin"},"content":"    public LocalDate[] getDates() {"},{"lineNumber":34,"author":{"gitId":"tjtanjin"},"content":"        LocalDate[] taskDates \u003d new LocalDate[2];"},{"lineNumber":35,"author":{"gitId":"tjtanjin"},"content":"        taskDates[0] \u003d this.START_DATE;"},{"lineNumber":36,"author":{"gitId":"tjtanjin"},"content":"        taskDates[1] \u003d this.END_DATE;"},{"lineNumber":37,"author":{"gitId":"tjtanjin"},"content":"        return taskDates;"},{"lineNumber":38,"author":{"gitId":"tjtanjin"},"content":"    }"},{"lineNumber":39,"author":{"gitId":"tjtanjin"},"content":""},{"lineNumber":40,"author":{"gitId":"tjtanjin"},"content":"    /**"},{"lineNumber":41,"author":{"gitId":"tjtanjin"},"content":"     * Marks event task as completed."},{"lineNumber":42,"author":{"gitId":"tjtanjin"},"content":"     *"},{"lineNumber":43,"author":{"gitId":"tjtanjin"},"content":"     * @return task with status marked as complete"},{"lineNumber":44,"author":{"gitId":"tjtanjin"},"content":"     */"},{"lineNumber":45,"author":{"gitId":"tjtanjin"},"content":"    @Override"},{"lineNumber":46,"author":{"gitId":"tjtanjin"},"content":"    public Task markCompleted() {"},{"lineNumber":47,"author":{"gitId":"tjtanjin"},"content":"        return new Event(getTaskName(), \"complete\", getDates());"},{"lineNumber":48,"author":{"gitId":"tjtanjin"},"content":"    }"},{"lineNumber":49,"author":{"gitId":"tjtanjin"},"content":""},{"lineNumber":50,"author":{"gitId":"tjtanjin"},"content":"    /**"},{"lineNumber":51,"author":{"gitId":"tjtanjin"},"content":"     * Gets the string describing event."},{"lineNumber":52,"author":{"gitId":"tjtanjin"},"content":"     *"},{"lineNumber":53,"author":{"gitId":"tjtanjin"},"content":"     * @return String describing event"},{"lineNumber":54,"author":{"gitId":"tjtanjin"},"content":"     */"},{"lineNumber":55,"author":{"gitId":"tjtanjin"},"content":"    @Override"},{"lineNumber":56,"author":{"gitId":"tjtanjin"},"content":"    public String toString() {"},{"lineNumber":57,"author":{"gitId":"tjtanjin"},"content":"        return super.toString()"},{"lineNumber":58,"author":{"gitId":"tjtanjin"},"content":"                + \" (from: \" + this.START_DATE.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\"))"},{"lineNumber":59,"author":{"gitId":"tjtanjin"},"content":"                        + \" to: \" + this.END_DATE.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\")) + \")\";"},{"lineNumber":60,"author":{"gitId":"tjtanjin"},"content":"    }"},{"lineNumber":61,"author":{"gitId":"tjtanjin"},"content":"}"}],"authorContributionMap":{"tjtanjin":61}},{"path":"src/main/java/com/tjtanjin/steve/tasks/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tjtanjin"},"content":"package com.tjtanjin.steve.tasks;"},{"lineNumber":2,"author":{"gitId":"tjtanjin"},"content":""},{"lineNumber":3,"author":{"gitId":"tjtanjin"},"content":"import java.time.LocalDate;"},{"lineNumber":4,"author":{"gitId":"tjtanjin"},"content":""},{"lineNumber":5,"author":{"gitId":"tjtanjin"},"content":"/**"},{"lineNumber":6,"author":{"gitId":"tjtanjin"},"content":" * Encapsulates a task and supports operators to retrieve"},{"lineNumber":7,"author":{"gitId":"tjtanjin"},"content":" * information about the task such as taskName, status and type."},{"lineNumber":8,"author":{"gitId":"tjtanjin"},"content":" */"},{"lineNumber":9,"author":{"gitId":"tjtanjin"},"content":"public abstract class Task {"},{"lineNumber":10,"author":{"gitId":"tjtanjin"},"content":""},{"lineNumber":11,"author":{"gitId":"tjtanjin"},"content":"    //task details"},{"lineNumber":12,"author":{"gitId":"tjtanjin"},"content":"    private final String TASK_NAME;"},{"lineNumber":13,"author":{"gitId":"tjtanjin"},"content":"    private final String TYPE;"},{"lineNumber":14,"author":{"gitId":"tjtanjin"},"content":"    private String status;"},{"lineNumber":15,"author":{"gitId":"tjtanjin"},"content":""},{"lineNumber":16,"author":{"gitId":"tjtanjin"},"content":"    /**"},{"lineNumber":17,"author":{"gitId":"tjtanjin"},"content":"     * Constructor for Task class."},{"lineNumber":18,"author":{"gitId":"tjtanjin"},"content":"     *"},{"lineNumber":19,"author":{"gitId":"tjtanjin"},"content":"     * @param taskName name of task"},{"lineNumber":20,"author":{"gitId":"tjtanjin"},"content":"     * @param status task completion status"},{"lineNumber":21,"author":{"gitId":"tjtanjin"},"content":"     * @param type type of task"},{"lineNumber":22,"author":{"gitId":"tjtanjin"},"content":"     */"},{"lineNumber":23,"author":{"gitId":"tjtanjin"},"content":"    public Task(String taskName, String status, String type) {"},{"lineNumber":24,"author":{"gitId":"tjtanjin"},"content":"        this.TASK_NAME \u003d taskName;"},{"lineNumber":25,"author":{"gitId":"tjtanjin"},"content":"        this.status \u003d status;"},{"lineNumber":26,"author":{"gitId":"tjtanjin"},"content":"        this.TYPE \u003d type;"},{"lineNumber":27,"author":{"gitId":"tjtanjin"},"content":"    }"},{"lineNumber":28,"author":{"gitId":"tjtanjin"},"content":""},{"lineNumber":29,"author":{"gitId":"tjtanjin"},"content":"    /**"},{"lineNumber":30,"author":{"gitId":"tjtanjin"},"content":"     * Gets name of task."},{"lineNumber":31,"author":{"gitId":"tjtanjin"},"content":"     *"},{"lineNumber":32,"author":{"gitId":"tjtanjin"},"content":"     * @return name of task"},{"lineNumber":33,"author":{"gitId":"tjtanjin"},"content":"     */"},{"lineNumber":34,"author":{"gitId":"tjtanjin"},"content":"    public String getTaskName() {"},{"lineNumber":35,"author":{"gitId":"tjtanjin"},"content":"        return this.TASK_NAME;"},{"lineNumber":36,"author":{"gitId":"tjtanjin"},"content":"    }"},{"lineNumber":37,"author":{"gitId":"tjtanjin"},"content":""},{"lineNumber":38,"author":{"gitId":"tjtanjin"},"content":"    /**"},{"lineNumber":39,"author":{"gitId":"tjtanjin"},"content":"     * Gets status of task."},{"lineNumber":40,"author":{"gitId":"tjtanjin"},"content":"     *"},{"lineNumber":41,"author":{"gitId":"tjtanjin"},"content":"     * @return status of task"},{"lineNumber":42,"author":{"gitId":"tjtanjin"},"content":"     */"},{"lineNumber":43,"author":{"gitId":"tjtanjin"},"content":"    public String getStatus() {"},{"lineNumber":44,"author":{"gitId":"tjtanjin"},"content":"        return this.status;"},{"lineNumber":45,"author":{"gitId":"tjtanjin"},"content":"    }"},{"lineNumber":46,"author":{"gitId":"tjtanjin"},"content":""},{"lineNumber":47,"author":{"gitId":"tjtanjin"},"content":"    /**"},{"lineNumber":48,"author":{"gitId":"tjtanjin"},"content":"     * Gets type of task."},{"lineNumber":49,"author":{"gitId":"tjtanjin"},"content":"     *"},{"lineNumber":50,"author":{"gitId":"tjtanjin"},"content":"     * @return type of task"},{"lineNumber":51,"author":{"gitId":"tjtanjin"},"content":"     */"},{"lineNumber":52,"author":{"gitId":"tjtanjin"},"content":"    public String getType() {"},{"lineNumber":53,"author":{"gitId":"tjtanjin"},"content":"        return this.TYPE;"},{"lineNumber":54,"author":{"gitId":"tjtanjin"},"content":"    }"},{"lineNumber":55,"author":{"gitId":"tjtanjin"},"content":""},{"lineNumber":56,"author":{"gitId":"tjtanjin"},"content":"    /**"},{"lineNumber":57,"author":{"gitId":"tjtanjin"},"content":"     * Gets empty array of dates since overridden in deadline and event child class."},{"lineNumber":58,"author":{"gitId":"tjtanjin"},"content":"     *"},{"lineNumber":59,"author":{"gitId":"tjtanjin"},"content":"     * @return empty array of size 1"},{"lineNumber":60,"author":{"gitId":"tjtanjin"},"content":"     */"},{"lineNumber":61,"author":{"gitId":"tjtanjin"},"content":"    public LocalDate[] getDates() {"},{"lineNumber":62,"author":{"gitId":"tjtanjin"},"content":"        return new LocalDate[1];"},{"lineNumber":63,"author":{"gitId":"tjtanjin"},"content":"    }"},{"lineNumber":64,"author":{"gitId":"tjtanjin"},"content":""},{"lineNumber":65,"author":{"gitId":"tjtanjin"},"content":"    /**"},{"lineNumber":66,"author":{"gitId":"tjtanjin"},"content":"     * Marks the task as completed."},{"lineNumber":67,"author":{"gitId":"tjtanjin"},"content":"     */"},{"lineNumber":68,"author":{"gitId":"tjtanjin"},"content":"    public abstract Task markCompleted();"},{"lineNumber":69,"author":{"gitId":"tjtanjin"},"content":""},{"lineNumber":70,"author":{"gitId":"tjtanjin"},"content":"    /**"},{"lineNumber":71,"author":{"gitId":"tjtanjin"},"content":"     * Gets the string describing task."},{"lineNumber":72,"author":{"gitId":"tjtanjin"},"content":"     *"},{"lineNumber":73,"author":{"gitId":"tjtanjin"},"content":"     * @return String describing task"},{"lineNumber":74,"author":{"gitId":"tjtanjin"},"content":"     */"},{"lineNumber":75,"author":{"gitId":"tjtanjin"},"content":"    @Override"},{"lineNumber":76,"author":{"gitId":"tjtanjin"},"content":"    public String toString() {"},{"lineNumber":77,"author":{"gitId":"tjtanjin"},"content":"        if (this.getStatus().equals(\"incomplete\")) {"},{"lineNumber":78,"author":{"gitId":"tjtanjin"},"content":"            return \"[\" + this.getType().charAt(0) + \"][ ] \" + this.getTaskName();"},{"lineNumber":79,"author":{"gitId":"tjtanjin"},"content":"        } else {"},{"lineNumber":80,"author":{"gitId":"tjtanjin"},"content":"            return \"[\" + this.getType().charAt(0) + \"][X] \" + this.getTaskName();"},{"lineNumber":81,"author":{"gitId":"tjtanjin"},"content":"        }"},{"lineNumber":82,"author":{"gitId":"tjtanjin"},"content":"    }"},{"lineNumber":83,"author":{"gitId":"tjtanjin"},"content":"}"}],"authorContributionMap":{"tjtanjin":83}},{"path":"src/main/java/com/tjtanjin/steve/tasks/TaskHandler.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tjtanjin"},"content":"package com.tjtanjin.steve.tasks;"},{"lineNumber":2,"author":{"gitId":"tjtanjin"},"content":""},{"lineNumber":3,"author":{"gitId":"tjtanjin"},"content":"import java.time.LocalDate;"},{"lineNumber":4,"author":{"gitId":"tjtanjin"},"content":"import java.util.ArrayList;"},{"lineNumber":5,"author":{"gitId":"tjtanjin"},"content":""},{"lineNumber":6,"author":{"gitId":"tjtanjin"},"content":"import com.tjtanjin.steve.storage.StorageHandler;"},{"lineNumber":7,"author":{"gitId":"tjtanjin"},"content":""},{"lineNumber":8,"author":{"gitId":"tjtanjin"},"content":"/**"},{"lineNumber":9,"author":{"gitId":"tjtanjin"},"content":" * TaskHandler manages all task operations. It is managed through the CommandHandler and works directly"},{"lineNumber":10,"author":{"gitId":"tjtanjin"},"content":" * with StorageHandler to store/load tasks."},{"lineNumber":11,"author":{"gitId":"tjtanjin"},"content":" */"},{"lineNumber":12,"author":{"gitId":"tjtanjin"},"content":"public class TaskHandler {"},{"lineNumber":13,"author":{"gitId":"tjtanjin"},"content":""},{"lineNumber":14,"author":{"gitId":"tjtanjin"},"content":"    //use arraylist to store tasks"},{"lineNumber":15,"author":{"gitId":"tjtanjin"},"content":"    private final StorageHandler STORAGE_HANDLER;"},{"lineNumber":16,"author":{"gitId":"tjtanjin"},"content":"    private ArrayList\u003cTask\u003e tasks;"},{"lineNumber":17,"author":{"gitId":"tjtanjin"},"content":"    private final ArrayList\u003cArrayList\u003cTask\u003e\u003e TASKS_TRACKER \u003d new ArrayList\u003c\u003e();"},{"lineNumber":18,"author":{"gitId":"tjtanjin"},"content":""},{"lineNumber":19,"author":{"gitId":"tjtanjin"},"content":"    /**"},{"lineNumber":20,"author":{"gitId":"tjtanjin"},"content":"     * Constructor for TaskList."},{"lineNumber":21,"author":{"gitId":"tjtanjin"},"content":"     *"},{"lineNumber":22,"author":{"gitId":"tjtanjin"},"content":"     * @param storageHandler storage to store and load tasks from"},{"lineNumber":23,"author":{"gitId":"tjtanjin"},"content":"     */"},{"lineNumber":24,"author":{"gitId":"tjtanjin"},"content":"    public TaskHandler(StorageHandler storageHandler) {"},{"lineNumber":25,"author":{"gitId":"tjtanjin"},"content":"        this.STORAGE_HANDLER \u003d storageHandler;"},{"lineNumber":26,"author":{"gitId":"tjtanjin"},"content":"        this.tasks \u003d storageHandler.loadTasks();"},{"lineNumber":27,"author":{"gitId":"tjtanjin"},"content":"    }"},{"lineNumber":28,"author":{"gitId":"tjtanjin"},"content":""},{"lineNumber":29,"author":{"gitId":"tjtanjin"},"content":"    /**"},{"lineNumber":30,"author":{"gitId":"tjtanjin"},"content":"     * Adds a new task."},{"lineNumber":31,"author":{"gitId":"tjtanjin"},"content":"     *"},{"lineNumber":32,"author":{"gitId":"tjtanjin"},"content":"     * @param taskType type of task (todo, deadline or event)"},{"lineNumber":33,"author":{"gitId":"tjtanjin"},"content":"     * @param taskName name of task"},{"lineNumber":34,"author":{"gitId":"tjtanjin"},"content":"     * @param taskDates taskDates array of dates (defaults to first element for deadline end date)"},{"lineNumber":35,"author":{"gitId":"tjtanjin"},"content":"     * @return string response after operation is done"},{"lineNumber":36,"author":{"gitId":"tjtanjin"},"content":"     */"},{"lineNumber":37,"author":{"gitId":"tjtanjin"},"content":"    public String addTask(String taskType, String taskName, LocalDate[] taskDates) {"},{"lineNumber":38,"author":{"gitId":"tjtanjin"},"content":"        Task task;"},{"lineNumber":39,"author":{"gitId":"tjtanjin"},"content":"        if (taskType.equalsIgnoreCase(\"DEADLINE\")) {"},{"lineNumber":40,"author":{"gitId":"tjtanjin"},"content":"            task \u003d new Deadline(taskName, \"incomplete\", taskDates);"},{"lineNumber":41,"author":{"gitId":"tjtanjin"},"content":"        } else if (taskType.equalsIgnoreCase(\"EVENT\")) {"},{"lineNumber":42,"author":{"gitId":"tjtanjin"},"content":"            task \u003d new Event(taskName, \"incomplete\", taskDates);"},{"lineNumber":43,"author":{"gitId":"tjtanjin"},"content":"        } else {"},{"lineNumber":44,"author":{"gitId":"tjtanjin"},"content":"            task \u003d new ToDo(taskName, \"incomplete\");"},{"lineNumber":45,"author":{"gitId":"tjtanjin"},"content":"        }"},{"lineNumber":46,"author":{"gitId":"tjtanjin"},"content":""},{"lineNumber":47,"author":{"gitId":"tjtanjin"},"content":"        TASKS_TRACKER.add((ArrayList\u003cTask\u003e) tasks.clone());"},{"lineNumber":48,"author":{"gitId":"tjtanjin"},"content":"        tasks.add(task);"},{"lineNumber":49,"author":{"gitId":"tjtanjin"},"content":"        if (STORAGE_HANDLER.saveTask(tasks.size(), \"NEW\","},{"lineNumber":50,"author":{"gitId":"tjtanjin"},"content":"                taskName, \"incomplete\", taskType.toUpperCase(), taskDates)) {"},{"lineNumber":51,"author":{"gitId":"tjtanjin"},"content":"            return \"Info: Your task has been added! You now have \" + tasks.size() + \" task(s)!\";"},{"lineNumber":52,"author":{"gitId":"tjtanjin"},"content":"        } else {"},{"lineNumber":53,"author":{"gitId":"tjtanjin"},"content":"            return \"Error: There was an error saving your task, please check your syntax and try again.\";"},{"lineNumber":54,"author":{"gitId":"tjtanjin"},"content":"        }"},{"lineNumber":55,"author":{"gitId":"tjtanjin"},"content":"    }"},{"lineNumber":56,"author":{"gitId":"tjtanjin"},"content":""},{"lineNumber":57,"author":{"gitId":"tjtanjin"},"content":"    /**"},{"lineNumber":58,"author":{"gitId":"tjtanjin"},"content":"     * Gets array list of tasks."},{"lineNumber":59,"author":{"gitId":"tjtanjin"},"content":"     *"},{"lineNumber":60,"author":{"gitId":"tjtanjin"},"content":"     * @return array list of tasks"},{"lineNumber":61,"author":{"gitId":"tjtanjin"},"content":"     */"},{"lineNumber":62,"author":{"gitId":"tjtanjin"},"content":"    public ArrayList\u003cTask\u003e getTasks() {"},{"lineNumber":63,"author":{"gitId":"tjtanjin"},"content":"        return tasks;"},{"lineNumber":64,"author":{"gitId":"tjtanjin"},"content":"    }"},{"lineNumber":65,"author":{"gitId":"tjtanjin"},"content":""},{"lineNumber":66,"author":{"gitId":"tjtanjin"},"content":"    /**"},{"lineNumber":67,"author":{"gitId":"tjtanjin"},"content":"     * Marks a task as done."},{"lineNumber":68,"author":{"gitId":"tjtanjin"},"content":"     *"},{"lineNumber":69,"author":{"gitId":"tjtanjin"},"content":"     * @param index index of task to mark as done"},{"lineNumber":70,"author":{"gitId":"tjtanjin"},"content":"     * @return string response after operation is done"},{"lineNumber":71,"author":{"gitId":"tjtanjin"},"content":"     */"},{"lineNumber":72,"author":{"gitId":"tjtanjin"},"content":"    public String markTaskDone(int index) {"},{"lineNumber":73,"author":{"gitId":"tjtanjin"},"content":"        try {"},{"lineNumber":74,"author":{"gitId":"tjtanjin"},"content":"            Task task \u003d tasks.get(index);"},{"lineNumber":75,"author":{"gitId":"tjtanjin"},"content":"            if (task.getStatus().equals(\"complete\")) {"},{"lineNumber":76,"author":{"gitId":"tjtanjin"},"content":"                return \"Error: Task is already completed!\";"},{"lineNumber":77,"author":{"gitId":"tjtanjin"},"content":"            }"},{"lineNumber":78,"author":{"gitId":"tjtanjin"},"content":""},{"lineNumber":79,"author":{"gitId":"tjtanjin"},"content":"            TASKS_TRACKER.add((ArrayList\u003cTask\u003e) tasks.clone());"},{"lineNumber":80,"author":{"gitId":"tjtanjin"},"content":"            Task completedTask \u003d task.markCompleted();"},{"lineNumber":81,"author":{"gitId":"tjtanjin"},"content":"            tasks.set(index, completedTask);"},{"lineNumber":82,"author":{"gitId":"tjtanjin"},"content":"            String taskName \u003d task.getTaskName();"},{"lineNumber":83,"author":{"gitId":"tjtanjin"},"content":"            String taskType \u003d task.getType().toUpperCase();"},{"lineNumber":84,"author":{"gitId":"tjtanjin"},"content":"            LocalDate[] taskDates \u003d task.getDates();"},{"lineNumber":85,"author":{"gitId":"tjtanjin"},"content":"            if (STORAGE_HANDLER.saveTask(index, \"DONE\","},{"lineNumber":86,"author":{"gitId":"tjtanjin"},"content":"                    taskName, \"complete\", taskType, taskDates)) {"},{"lineNumber":87,"author":{"gitId":"tjtanjin"},"content":"                return \"Info: Yay your task is done! :D\";"},{"lineNumber":88,"author":{"gitId":"tjtanjin"},"content":"            }"},{"lineNumber":89,"author":{"gitId":"tjtanjin"},"content":""},{"lineNumber":90,"author":{"gitId":"tjtanjin"},"content":"            return \"Error: There was an error marking your task as done, \""},{"lineNumber":91,"author":{"gitId":"tjtanjin"},"content":"                    + \"please check your syntax and try again.\";"},{"lineNumber":92,"author":{"gitId":"tjtanjin"},"content":"        } catch (IndexOutOfBoundsException e) {"},{"lineNumber":93,"author":{"gitId":"tjtanjin"},"content":"            return \"Error: The specified task index does not exist!\";"},{"lineNumber":94,"author":{"gitId":"tjtanjin"},"content":"        }"},{"lineNumber":95,"author":{"gitId":"tjtanjin"},"content":"    }"},{"lineNumber":96,"author":{"gitId":"tjtanjin"},"content":""},{"lineNumber":97,"author":{"gitId":"tjtanjin"},"content":"    /**"},{"lineNumber":98,"author":{"gitId":"tjtanjin"},"content":"     * Deletes a task."},{"lineNumber":99,"author":{"gitId":"tjtanjin"},"content":"     *"},{"lineNumber":100,"author":{"gitId":"tjtanjin"},"content":"     * @param index index of task to delete"},{"lineNumber":101,"author":{"gitId":"tjtanjin"},"content":"     * @return string response after operation is done"},{"lineNumber":102,"author":{"gitId":"tjtanjin"},"content":"     */"},{"lineNumber":103,"author":{"gitId":"tjtanjin"},"content":"    public String deleteTask(int index) {"},{"lineNumber":104,"author":{"gitId":"tjtanjin"},"content":"        try {"},{"lineNumber":105,"author":{"gitId":"tjtanjin"},"content":"            Task task \u003d tasks.get(index);"},{"lineNumber":106,"author":{"gitId":"tjtanjin"},"content":"            TASKS_TRACKER.add((ArrayList\u003cTask\u003e) tasks.clone());"},{"lineNumber":107,"author":{"gitId":"tjtanjin"},"content":"            System.out.println(tasks.size());"},{"lineNumber":108,"author":{"gitId":"tjtanjin"},"content":"            tasks.remove(task);"},{"lineNumber":109,"author":{"gitId":"tjtanjin"},"content":"            System.out.println(tasks.size());"},{"lineNumber":110,"author":{"gitId":"tjtanjin"},"content":"            String taskName \u003d task.getTaskName();"},{"lineNumber":111,"author":{"gitId":"tjtanjin"},"content":"            String taskType \u003d task.getType().toUpperCase();"},{"lineNumber":112,"author":{"gitId":"tjtanjin"},"content":"            LocalDate[] taskDates \u003d task.getDates();"},{"lineNumber":113,"author":{"gitId":"tjtanjin"},"content":"            if (STORAGE_HANDLER.saveTask(index, \"DELETE\","},{"lineNumber":114,"author":{"gitId":"tjtanjin"},"content":"                    taskName, \"complete\", taskType, taskDates)) {"},{"lineNumber":115,"author":{"gitId":"tjtanjin"},"content":"                return \"Info: The following task has been deleted:\\n\" + task;"},{"lineNumber":116,"author":{"gitId":"tjtanjin"},"content":"            }"},{"lineNumber":117,"author":{"gitId":"tjtanjin"},"content":""},{"lineNumber":118,"author":{"gitId":"tjtanjin"},"content":"            return \"Error: There was an error deleting your task, \""},{"lineNumber":119,"author":{"gitId":"tjtanjin"},"content":"                    + \"please check your syntax and try again.\";"},{"lineNumber":120,"author":{"gitId":"tjtanjin"},"content":"        } catch (IndexOutOfBoundsException e) {"},{"lineNumber":121,"author":{"gitId":"tjtanjin"},"content":"            return \"Error: The specified task index does not exist!\";"},{"lineNumber":122,"author":{"gitId":"tjtanjin"},"content":"        }"},{"lineNumber":123,"author":{"gitId":"tjtanjin"},"content":"    }"},{"lineNumber":124,"author":{"gitId":"tjtanjin"},"content":""},{"lineNumber":125,"author":{"gitId":"tjtanjin"},"content":"    /**"},{"lineNumber":126,"author":{"gitId":"tjtanjin"},"content":"     * Shows all tasks to user"},{"lineNumber":127,"author":{"gitId":"tjtanjin"},"content":"     *"},{"lineNumber":128,"author":{"gitId":"tjtanjin"},"content":"     * @return string response after operation is done"},{"lineNumber":129,"author":{"gitId":"tjtanjin"},"content":"     */"},{"lineNumber":130,"author":{"gitId":"tjtanjin"},"content":"    public String showAllTasks() {"},{"lineNumber":131,"author":{"gitId":"tjtanjin"},"content":"        if (tasks.size() \u003d\u003d 0) {"},{"lineNumber":132,"author":{"gitId":"tjtanjin"},"content":"            return \"Info: You have no task at the moment!\";"},{"lineNumber":133,"author":{"gitId":"tjtanjin"},"content":"        } else {"},{"lineNumber":134,"author":{"gitId":"tjtanjin"},"content":"            StringBuilder strOfTasks \u003d new StringBuilder(\"Info: \");"},{"lineNumber":135,"author":{"gitId":"tjtanjin"},"content":"            for (int i \u003d 1; i \u003c\u003d tasks.size(); i++) {"},{"lineNumber":136,"author":{"gitId":"tjtanjin"},"content":"                Task task \u003d tasks.get(i - 1);"},{"lineNumber":137,"author":{"gitId":"tjtanjin"},"content":"                strOfTasks.append(i).append(\".\").append(task).append(\"\\n\");"},{"lineNumber":138,"author":{"gitId":"tjtanjin"},"content":"            }"},{"lineNumber":139,"author":{"gitId":"tjtanjin"},"content":"            strOfTasks.append(\"You have \").append(tasks.size()).append(\" task(s)!\");"},{"lineNumber":140,"author":{"gitId":"tjtanjin"},"content":"            return strOfTasks.toString();"},{"lineNumber":141,"author":{"gitId":"tjtanjin"},"content":"        }"},{"lineNumber":142,"author":{"gitId":"tjtanjin"},"content":"    }"},{"lineNumber":143,"author":{"gitId":"tjtanjin"},"content":""},{"lineNumber":144,"author":{"gitId":"tjtanjin"},"content":"    /**"},{"lineNumber":145,"author":{"gitId":"tjtanjin"},"content":"     * Finds all tasks whose name contains input from user."},{"lineNumber":146,"author":{"gitId":"tjtanjin"},"content":"     *"},{"lineNumber":147,"author":{"gitId":"tjtanjin"},"content":"     * @param searchTerms search terms for finding tasks"},{"lineNumber":148,"author":{"gitId":"tjtanjin"},"content":"     * @return string response after operation is done"},{"lineNumber":149,"author":{"gitId":"tjtanjin"},"content":"     */"},{"lineNumber":150,"author":{"gitId":"tjtanjin"},"content":"    public String findTask(String ... searchTerms) {"},{"lineNumber":151,"author":{"gitId":"tjtanjin"},"content":"        if (tasks.size() \u003d\u003d 0) {"},{"lineNumber":152,"author":{"gitId":"tjtanjin"},"content":"            return \"Info: You have no task at the moment!\";"},{"lineNumber":153,"author":{"gitId":"tjtanjin"},"content":"        } else {"},{"lineNumber":154,"author":{"gitId":"tjtanjin"},"content":"            int counter \u003d 0;"},{"lineNumber":155,"author":{"gitId":"tjtanjin"},"content":"            StringBuilder strOfTasks \u003d new StringBuilder(\"Info: \");"},{"lineNumber":156,"author":{"gitId":"tjtanjin"},"content":"            for (String searchTerm : searchTerms) {"},{"lineNumber":157,"author":{"gitId":"tjtanjin"},"content":"                for (int j \u003d 1; j \u003c\u003d tasks.size(); j++) {"},{"lineNumber":158,"author":{"gitId":"tjtanjin"},"content":"                    Task task \u003d tasks.get(j - 1);"},{"lineNumber":159,"author":{"gitId":"tjtanjin"},"content":"                    if (task.getTaskName().contains(searchTerm)) {"},{"lineNumber":160,"author":{"gitId":"tjtanjin"},"content":"                        counter +\u003d 1;"},{"lineNumber":161,"author":{"gitId":"tjtanjin"},"content":"                        strOfTasks.append(counter).append(\".\").append(task).append(\"\\n\");"},{"lineNumber":162,"author":{"gitId":"tjtanjin"},"content":"                    }"},{"lineNumber":163,"author":{"gitId":"tjtanjin"},"content":"                }"},{"lineNumber":164,"author":{"gitId":"tjtanjin"},"content":"            }"},{"lineNumber":165,"author":{"gitId":"tjtanjin"},"content":"            strOfTasks.append(\"A total of \").append(counter).append(\" task(s) were found.\");"},{"lineNumber":166,"author":{"gitId":"tjtanjin"},"content":"            return strOfTasks.toString();"},{"lineNumber":167,"author":{"gitId":"tjtanjin"},"content":"        }"},{"lineNumber":168,"author":{"gitId":"tjtanjin"},"content":"    }"},{"lineNumber":169,"author":{"gitId":"tjtanjin"},"content":""},{"lineNumber":170,"author":{"gitId":"tjtanjin"},"content":"    /**"},{"lineNumber":171,"author":{"gitId":"tjtanjin"},"content":"     * Undos the previous task modification."},{"lineNumber":172,"author":{"gitId":"tjtanjin"},"content":"     *"},{"lineNumber":173,"author":{"gitId":"tjtanjin"},"content":"     * @return string response after operation is done"},{"lineNumber":174,"author":{"gitId":"tjtanjin"},"content":"     */"},{"lineNumber":175,"author":{"gitId":"tjtanjin"},"content":"    public String undoTaskAction() {"},{"lineNumber":176,"author":{"gitId":"tjtanjin"},"content":"        if (TASKS_TRACKER.size() \u003e 0 \u0026\u0026 tasks.size() \u003e 0) {"},{"lineNumber":177,"author":{"gitId":"tjtanjin"},"content":"            int index \u003d TASKS_TRACKER.size() - 1;"},{"lineNumber":178,"author":{"gitId":"tjtanjin"},"content":"            this.tasks \u003d TASKS_TRACKER.remove(index);"},{"lineNumber":179,"author":{"gitId":"tjtanjin"},"content":"            if (STORAGE_HANDLER.revertTask(tasks)) {"},{"lineNumber":180,"author":{"gitId":"tjtanjin"},"content":"                return \"Info: Undo successful for previous task modification!\";"},{"lineNumber":181,"author":{"gitId":"tjtanjin"},"content":"            } else {"},{"lineNumber":182,"author":{"gitId":"tjtanjin"},"content":"                return \"Error: There was an error undo-ing your task, please check your syntax and try again.\";"},{"lineNumber":183,"author":{"gitId":"tjtanjin"},"content":"            }"},{"lineNumber":184,"author":{"gitId":"tjtanjin"},"content":"        } else {"},{"lineNumber":185,"author":{"gitId":"tjtanjin"},"content":"            return \"Error: There is no action to undo!\";"},{"lineNumber":186,"author":{"gitId":"tjtanjin"},"content":"        }"},{"lineNumber":187,"author":{"gitId":"tjtanjin"},"content":"    }"},{"lineNumber":188,"author":{"gitId":"tjtanjin"},"content":"}"}],"authorContributionMap":{"tjtanjin":188}},{"path":"src/main/java/com/tjtanjin/steve/tasks/ToDo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tjtanjin"},"content":"package com.tjtanjin.steve.tasks;"},{"lineNumber":2,"author":{"gitId":"tjtanjin"},"content":""},{"lineNumber":3,"author":{"gitId":"tjtanjin"},"content":"/**"},{"lineNumber":4,"author":{"gitId":"tjtanjin"},"content":" * ToDo is a child class of Task, retaining all the"},{"lineNumber":5,"author":{"gitId":"tjtanjin"},"content":" * same functionalities as its parent."},{"lineNumber":6,"author":{"gitId":"tjtanjin"},"content":" */"},{"lineNumber":7,"author":{"gitId":"tjtanjin"},"content":"public class ToDo extends Task {"},{"lineNumber":8,"author":{"gitId":"tjtanjin"},"content":""},{"lineNumber":9,"author":{"gitId":"tjtanjin"},"content":"    /**"},{"lineNumber":10,"author":{"gitId":"tjtanjin"},"content":"     * Constructor for ToDo class."},{"lineNumber":11,"author":{"gitId":"tjtanjin"},"content":"     *"},{"lineNumber":12,"author":{"gitId":"tjtanjin"},"content":"     * @param taskName name of task"},{"lineNumber":13,"author":{"gitId":"tjtanjin"},"content":"     * @param status task completion status"},{"lineNumber":14,"author":{"gitId":"tjtanjin"},"content":"     */"},{"lineNumber":15,"author":{"gitId":"tjtanjin"},"content":"    public ToDo(String taskName, String status) {"},{"lineNumber":16,"author":{"gitId":"tjtanjin"},"content":"        super(taskName, status, \"TODO\");"},{"lineNumber":17,"author":{"gitId":"tjtanjin"},"content":"    }"},{"lineNumber":18,"author":{"gitId":"tjtanjin"},"content":""},{"lineNumber":19,"author":{"gitId":"tjtanjin"},"content":"    /**"},{"lineNumber":20,"author":{"gitId":"tjtanjin"},"content":"     * Marks todo task as completed."},{"lineNumber":21,"author":{"gitId":"tjtanjin"},"content":"     *"},{"lineNumber":22,"author":{"gitId":"tjtanjin"},"content":"     * @return task with status marked as complete"},{"lineNumber":23,"author":{"gitId":"tjtanjin"},"content":"     */"},{"lineNumber":24,"author":{"gitId":"tjtanjin"},"content":"    @Override"},{"lineNumber":25,"author":{"gitId":"tjtanjin"},"content":"    public Task markCompleted() {"},{"lineNumber":26,"author":{"gitId":"tjtanjin"},"content":"        return new ToDo(super.getTaskName(), \"complete\");"},{"lineNumber":27,"author":{"gitId":"tjtanjin"},"content":"    }"},{"lineNumber":28,"author":{"gitId":"tjtanjin"},"content":"}"}],"authorContributionMap":{"tjtanjin":28}},{"path":"src/main/java/com/tjtanjin/steve/ui/DialogBox.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tjtanjin"},"content":"//Solution taken from https://se-education.org/guides/tutorials/javaFx.html"},{"lineNumber":2,"author":{"gitId":"tjtanjin"},"content":""},{"lineNumber":3,"author":{"gitId":"tjtanjin"},"content":"package com.tjtanjin.steve.ui;"},{"lineNumber":4,"author":{"gitId":"tjtanjin"},"content":""},{"lineNumber":5,"author":{"gitId":"tjtanjin"},"content":"import java.io.IOException;"},{"lineNumber":6,"author":{"gitId":"tjtanjin"},"content":"import java.util.Collections;"},{"lineNumber":7,"author":{"gitId":"tjtanjin"},"content":""},{"lineNumber":8,"author":{"gitId":"tjtanjin"},"content":"import javafx.collections.FXCollections;"},{"lineNumber":9,"author":{"gitId":"tjtanjin"},"content":"import javafx.collections.ObservableList;"},{"lineNumber":10,"author":{"gitId":"tjtanjin"},"content":"import javafx.fxml.FXML;"},{"lineNumber":11,"author":{"gitId":"tjtanjin"},"content":"import javafx.fxml.FXMLLoader;"},{"lineNumber":12,"author":{"gitId":"tjtanjin"},"content":"import javafx.geometry.Pos;"},{"lineNumber":13,"author":{"gitId":"tjtanjin"},"content":"import javafx.scene.Node;"},{"lineNumber":14,"author":{"gitId":"tjtanjin"},"content":"import javafx.scene.control.Label;"},{"lineNumber":15,"author":{"gitId":"tjtanjin"},"content":"import javafx.scene.image.Image;"},{"lineNumber":16,"author":{"gitId":"tjtanjin"},"content":"import javafx.scene.image.ImageView;"},{"lineNumber":17,"author":{"gitId":"tjtanjin"},"content":"import javafx.scene.layout.HBox;"},{"lineNumber":18,"author":{"gitId":"tjtanjin"},"content":""},{"lineNumber":19,"author":{"gitId":"tjtanjin"},"content":"/**"},{"lineNumber":20,"author":{"gitId":"tjtanjin"},"content":" * DialogBox is a custom control created to display chat messages in Steve."},{"lineNumber":21,"author":{"gitId":"tjtanjin"},"content":" */"},{"lineNumber":22,"author":{"gitId":"tjtanjin"},"content":"public class DialogBox extends HBox {"},{"lineNumber":23,"author":{"gitId":"tjtanjin"},"content":"    @FXML"},{"lineNumber":24,"author":{"gitId":"tjtanjin"},"content":"    private Label dialog;"},{"lineNumber":25,"author":{"gitId":"tjtanjin"},"content":"    @FXML"},{"lineNumber":26,"author":{"gitId":"tjtanjin"},"content":"    private ImageView displayPicture;"},{"lineNumber":27,"author":{"gitId":"tjtanjin"},"content":""},{"lineNumber":28,"author":{"gitId":"tjtanjin"},"content":"    /**"},{"lineNumber":29,"author":{"gitId":"tjtanjin"},"content":"     * Constructor for DialogBox."},{"lineNumber":30,"author":{"gitId":"tjtanjin"},"content":"     *"},{"lineNumber":31,"author":{"gitId":"tjtanjin"},"content":"     * @param text chat message"},{"lineNumber":32,"author":{"gitId":"tjtanjin"},"content":"     * @param img image of the sender/receiver"},{"lineNumber":33,"author":{"gitId":"tjtanjin"},"content":"     */"},{"lineNumber":34,"author":{"gitId":"tjtanjin"},"content":"    private DialogBox(String text, Image img) {"},{"lineNumber":35,"author":{"gitId":"tjtanjin"},"content":"        try {"},{"lineNumber":36,"author":{"gitId":"tjtanjin"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(UiHandler.class.getResource(\"/view/DialogBox.fxml\"));"},{"lineNumber":37,"author":{"gitId":"tjtanjin"},"content":"            fxmlLoader.setController(this);"},{"lineNumber":38,"author":{"gitId":"tjtanjin"},"content":"            fxmlLoader.setRoot(this);"},{"lineNumber":39,"author":{"gitId":"tjtanjin"},"content":"            fxmlLoader.load();"},{"lineNumber":40,"author":{"gitId":"tjtanjin"},"content":"        } catch (IOException e) {"},{"lineNumber":41,"author":{"gitId":"tjtanjin"},"content":"            e.printStackTrace();"},{"lineNumber":42,"author":{"gitId":"tjtanjin"},"content":"        }"},{"lineNumber":43,"author":{"gitId":"tjtanjin"},"content":""},{"lineNumber":44,"author":{"gitId":"tjtanjin"},"content":"        dialog.setText(text);"},{"lineNumber":45,"author":{"gitId":"tjtanjin"},"content":"        displayPicture.setImage(img);"},{"lineNumber":46,"author":{"gitId":"tjtanjin"},"content":"    }"},{"lineNumber":47,"author":{"gitId":"tjtanjin"},"content":""},{"lineNumber":48,"author":{"gitId":"tjtanjin"},"content":"    /**"},{"lineNumber":49,"author":{"gitId":"tjtanjin"},"content":"     * Flips the dialog box such that the ImageView is on the left and text on the right."},{"lineNumber":50,"author":{"gitId":"tjtanjin"},"content":"     */"},{"lineNumber":51,"author":{"gitId":"tjtanjin"},"content":"    private void flip() {"},{"lineNumber":52,"author":{"gitId":"tjtanjin"},"content":"        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());"},{"lineNumber":53,"author":{"gitId":"tjtanjin"},"content":"        Collections.reverse(tmp);"},{"lineNumber":54,"author":{"gitId":"tjtanjin"},"content":"        getChildren().setAll(tmp);"},{"lineNumber":55,"author":{"gitId":"tjtanjin"},"content":"        setAlignment(Pos.TOP_LEFT);"},{"lineNumber":56,"author":{"gitId":"tjtanjin"},"content":"    }"},{"lineNumber":57,"author":{"gitId":"tjtanjin"},"content":""},{"lineNumber":58,"author":{"gitId":"tjtanjin"},"content":"    /**"},{"lineNumber":59,"author":{"gitId":"tjtanjin"},"content":"     * Gets the dialog box for user."},{"lineNumber":60,"author":{"gitId":"tjtanjin"},"content":"     *"},{"lineNumber":61,"author":{"gitId":"tjtanjin"},"content":"     * @param msg chat message of user"},{"lineNumber":62,"author":{"gitId":"tjtanjin"},"content":"     * @param img image of user"},{"lineNumber":63,"author":{"gitId":"tjtanjin"},"content":"     * @return dialog box for user"},{"lineNumber":64,"author":{"gitId":"tjtanjin"},"content":"     */"},{"lineNumber":65,"author":{"gitId":"tjtanjin"},"content":"    public static DialogBox getUserDialog(String msg, Image img) {"},{"lineNumber":66,"author":{"gitId":"tjtanjin"},"content":"        return new DialogBox(msg, img);"},{"lineNumber":67,"author":{"gitId":"tjtanjin"},"content":"    }"},{"lineNumber":68,"author":{"gitId":"tjtanjin"},"content":""},{"lineNumber":69,"author":{"gitId":"tjtanjin"},"content":"    /**"},{"lineNumber":70,"author":{"gitId":"tjtanjin"},"content":"     * Gets the dialog box for Steve."},{"lineNumber":71,"author":{"gitId":"tjtanjin"},"content":"     *"},{"lineNumber":72,"author":{"gitId":"tjtanjin"},"content":"     * @param msg chat message of steve"},{"lineNumber":73,"author":{"gitId":"tjtanjin"},"content":"     * @param img image of steve"},{"lineNumber":74,"author":{"gitId":"tjtanjin"},"content":"     * @return dialog box for steve"},{"lineNumber":75,"author":{"gitId":"tjtanjin"},"content":"     */"},{"lineNumber":76,"author":{"gitId":"tjtanjin"},"content":"    public static DialogBox getSteveDialog(String msg, Image img) {"},{"lineNumber":77,"author":{"gitId":"tjtanjin"},"content":"        var db \u003d new DialogBox(msg, img);"},{"lineNumber":78,"author":{"gitId":"tjtanjin"},"content":"        db.flip();"},{"lineNumber":79,"author":{"gitId":"tjtanjin"},"content":"        return db;"},{"lineNumber":80,"author":{"gitId":"tjtanjin"},"content":"    }"},{"lineNumber":81,"author":{"gitId":"tjtanjin"},"content":"}"}],"authorContributionMap":{"tjtanjin":81}},{"path":"src/main/java/com/tjtanjin/steve/ui/UiHandler.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tjtanjin"},"content":"package com.tjtanjin.steve.ui;"},{"lineNumber":2,"author":{"gitId":"tjtanjin"},"content":""},{"lineNumber":3,"author":{"gitId":"tjtanjin"},"content":"import com.tjtanjin.steve.Steve;"},{"lineNumber":4,"author":{"gitId":"tjtanjin"},"content":""},{"lineNumber":5,"author":{"gitId":"tjtanjin"},"content":"import javafx.fxml.FXML;"},{"lineNumber":6,"author":{"gitId":"tjtanjin"},"content":"import javafx.fxml.FXMLLoader;"},{"lineNumber":7,"author":{"gitId":"tjtanjin"},"content":"import javafx.scene.control.Button;"},{"lineNumber":8,"author":{"gitId":"tjtanjin"},"content":"import javafx.scene.control.ScrollPane;"},{"lineNumber":9,"author":{"gitId":"tjtanjin"},"content":"import javafx.scene.control.TextField;"},{"lineNumber":10,"author":{"gitId":"tjtanjin"},"content":"import javafx.scene.image.Image;"},{"lineNumber":11,"author":{"gitId":"tjtanjin"},"content":"import javafx.scene.layout.AnchorPane;"},{"lineNumber":12,"author":{"gitId":"tjtanjin"},"content":"import javafx.scene.layout.VBox;"},{"lineNumber":13,"author":{"gitId":"tjtanjin"},"content":""},{"lineNumber":14,"author":{"gitId":"tjtanjin"},"content":"/**"},{"lineNumber":15,"author":{"gitId":"tjtanjin"},"content":" * Controller for UiHandler. Provides the layout for the other controls."},{"lineNumber":16,"author":{"gitId":"tjtanjin"},"content":" */"},{"lineNumber":17,"author":{"gitId":"tjtanjin"},"content":"public class UiHandler extends AnchorPane {"},{"lineNumber":18,"author":{"gitId":"tjtanjin"},"content":""},{"lineNumber":19,"author":{"gitId":"tjtanjin"},"content":"    private static FXMLLoader fxmlLoader;"},{"lineNumber":20,"author":{"gitId":"tjtanjin"},"content":""},{"lineNumber":21,"author":{"gitId":"tjtanjin"},"content":"    @FXML"},{"lineNumber":22,"author":{"gitId":"tjtanjin"},"content":"    private ScrollPane scrollPane;"},{"lineNumber":23,"author":{"gitId":"tjtanjin"},"content":"    @FXML"},{"lineNumber":24,"author":{"gitId":"tjtanjin"},"content":"    private VBox dialogContainer;"},{"lineNumber":25,"author":{"gitId":"tjtanjin"},"content":"    @FXML"},{"lineNumber":26,"author":{"gitId":"tjtanjin"},"content":"    private TextField userInput;"},{"lineNumber":27,"author":{"gitId":"tjtanjin"},"content":"    @FXML"},{"lineNumber":28,"author":{"gitId":"tjtanjin"},"content":"    private Button sendButton;"},{"lineNumber":29,"author":{"gitId":"tjtanjin"},"content":""},{"lineNumber":30,"author":{"gitId":"tjtanjin"},"content":"    private Steve steve;"},{"lineNumber":31,"author":{"gitId":"tjtanjin"},"content":""},{"lineNumber":32,"author":{"gitId":"tjtanjin"},"content":"    //application theme and characters used are from minecraft and is strictly for learning purposes"},{"lineNumber":33,"author":{"gitId":"tjtanjin"},"content":"    private final Image USER_IMAGE \u003d new Image(this.getClass().getResourceAsStream(\"/images/user.png\"));"},{"lineNumber":34,"author":{"gitId":"tjtanjin"},"content":"    private final Image STEVE_IMAGE \u003d new Image(this.getClass().getResourceAsStream(\"/images/steve.png\"));"},{"lineNumber":35,"author":{"gitId":"tjtanjin"},"content":""},{"lineNumber":36,"author":{"gitId":"tjtanjin"},"content":"    /**"},{"lineNumber":37,"author":{"gitId":"tjtanjin"},"content":"     * Initialize ui window."},{"lineNumber":38,"author":{"gitId":"tjtanjin"},"content":"     */"},{"lineNumber":39,"author":{"gitId":"tjtanjin"},"content":"    @FXML"},{"lineNumber":40,"author":{"gitId":"tjtanjin"},"content":"    public void initialize() {"},{"lineNumber":41,"author":{"gitId":"tjtanjin"},"content":"        scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());"},{"lineNumber":42,"author":{"gitId":"tjtanjin"},"content":"        showWelcomeMsg();"},{"lineNumber":43,"author":{"gitId":"tjtanjin"},"content":"    }"},{"lineNumber":44,"author":{"gitId":"tjtanjin"},"content":""},{"lineNumber":45,"author":{"gitId":"tjtanjin"},"content":"    /**"},{"lineNumber":46,"author":{"gitId":"tjtanjin"},"content":"     * Gets fxml loader."},{"lineNumber":47,"author":{"gitId":"tjtanjin"},"content":"     * @return fxml loader"},{"lineNumber":48,"author":{"gitId":"tjtanjin"},"content":"     */"},{"lineNumber":49,"author":{"gitId":"tjtanjin"},"content":"    public static FXMLLoader getFxmlLoader() {"},{"lineNumber":50,"author":{"gitId":"tjtanjin"},"content":"        return fxmlLoader;"},{"lineNumber":51,"author":{"gitId":"tjtanjin"},"content":"    }"},{"lineNumber":52,"author":{"gitId":"tjtanjin"},"content":""},{"lineNumber":53,"author":{"gitId":"tjtanjin"},"content":"    /**"},{"lineNumber":54,"author":{"gitId":"tjtanjin"},"content":"     * Sets private attribute Steve."},{"lineNumber":55,"author":{"gitId":"tjtanjin"},"content":"     *"},{"lineNumber":56,"author":{"gitId":"tjtanjin"},"content":"     * @param steve steve parsed from main class"},{"lineNumber":57,"author":{"gitId":"tjtanjin"},"content":"     */"},{"lineNumber":58,"author":{"gitId":"tjtanjin"},"content":"    public void setSteve(Steve steve, FXMLLoader loader) {"},{"lineNumber":59,"author":{"gitId":"tjtanjin"},"content":"        this.steve \u003d steve;"},{"lineNumber":60,"author":{"gitId":"tjtanjin"},"content":"        fxmlLoader \u003d loader;"},{"lineNumber":61,"author":{"gitId":"tjtanjin"},"content":"    }"},{"lineNumber":62,"author":{"gitId":"tjtanjin"},"content":""},{"lineNumber":63,"author":{"gitId":"tjtanjin"},"content":"    /**"},{"lineNumber":64,"author":{"gitId":"tjtanjin"},"content":"     * Greets the user upon program launch."},{"lineNumber":65,"author":{"gitId":"tjtanjin"},"content":"     */"},{"lineNumber":66,"author":{"gitId":"tjtanjin"},"content":"    public void showWelcomeMsg() {"},{"lineNumber":67,"author":{"gitId":"tjtanjin"},"content":"        showInfoMsg(\"Info: Hello, I am Steve! How can I help you?\");"},{"lineNumber":68,"author":{"gitId":"tjtanjin"},"content":"    }"},{"lineNumber":69,"author":{"gitId":"tjtanjin"},"content":""},{"lineNumber":70,"author":{"gitId":"tjtanjin"},"content":"    /**"},{"lineNumber":71,"author":{"gitId":"tjtanjin"},"content":"     * Prints information to the user."},{"lineNumber":72,"author":{"gitId":"tjtanjin"},"content":"     *"},{"lineNumber":73,"author":{"gitId":"tjtanjin"},"content":"     * @param info information to print"},{"lineNumber":74,"author":{"gitId":"tjtanjin"},"content":"     */"},{"lineNumber":75,"author":{"gitId":"tjtanjin"},"content":"    private void showInfoMsg(String info) {"},{"lineNumber":76,"author":{"gitId":"tjtanjin"},"content":"        dialogContainer.getChildren().add(DialogBox.getSteveDialog(info.split(\" \", 2)[1], STEVE_IMAGE));"},{"lineNumber":77,"author":{"gitId":"tjtanjin"},"content":"    }"},{"lineNumber":78,"author":{"gitId":"tjtanjin"},"content":""},{"lineNumber":79,"author":{"gitId":"tjtanjin"},"content":"    /**"},{"lineNumber":80,"author":{"gitId":"tjtanjin"},"content":"     * Prints error message to the user."},{"lineNumber":81,"author":{"gitId":"tjtanjin"},"content":"     *"},{"lineNumber":82,"author":{"gitId":"tjtanjin"},"content":"     * @param msg error message to print"},{"lineNumber":83,"author":{"gitId":"tjtanjin"},"content":"     */"},{"lineNumber":84,"author":{"gitId":"tjtanjin"},"content":"    private void showErrorMsg(String msg) {"},{"lineNumber":85,"author":{"gitId":"tjtanjin"},"content":"        dialogContainer.getChildren().add(DialogBox.getSteveDialog(msg, STEVE_IMAGE));"},{"lineNumber":86,"author":{"gitId":"tjtanjin"},"content":"    }"},{"lineNumber":87,"author":{"gitId":"tjtanjin"},"content":""},{"lineNumber":88,"author":{"gitId":"tjtanjin"},"content":"    /**"},{"lineNumber":89,"author":{"gitId":"tjtanjin"},"content":"     * Terminates the program with a final message."},{"lineNumber":90,"author":{"gitId":"tjtanjin"},"content":"     *"},{"lineNumber":91,"author":{"gitId":"tjtanjin"},"content":"     * @param crashMsg message to print before termination"},{"lineNumber":92,"author":{"gitId":"tjtanjin"},"content":"     */"},{"lineNumber":93,"author":{"gitId":"tjtanjin"},"content":"    private void showTerminateMsg(String crashMsg) {"},{"lineNumber":94,"author":{"gitId":"tjtanjin"},"content":"        dialogContainer.getChildren().add(DialogBox.getSteveDialog(crashMsg, STEVE_IMAGE));"},{"lineNumber":95,"author":{"gitId":"tjtanjin"},"content":"    }"},{"lineNumber":96,"author":{"gitId":"tjtanjin"},"content":""},{"lineNumber":97,"author":{"gitId":"tjtanjin"},"content":"    /**"},{"lineNumber":98,"author":{"gitId":"tjtanjin"},"content":"     * Handles the dialog container. Clears the user input after processing."},{"lineNumber":99,"author":{"gitId":"tjtanjin"},"content":"     */"},{"lineNumber":100,"author":{"gitId":"tjtanjin"},"content":"    @FXML"},{"lineNumber":101,"author":{"gitId":"tjtanjin"},"content":"    private void handleUserInput() {"},{"lineNumber":102,"author":{"gitId":"tjtanjin"},"content":"        String input \u003d userInput.getText();"},{"lineNumber":103,"author":{"gitId":"tjtanjin"},"content":"        dialogContainer.getChildren().add("},{"lineNumber":104,"author":{"gitId":"tjtanjin"},"content":"                DialogBox.getUserDialog(input, USER_IMAGE)"},{"lineNumber":105,"author":{"gitId":"tjtanjin"},"content":"        );"},{"lineNumber":106,"author":{"gitId":"tjtanjin"},"content":"        userInput.clear();"},{"lineNumber":107,"author":{"gitId":"tjtanjin"},"content":"        showResponse(steve.getParser().parseInput(input));"},{"lineNumber":108,"author":{"gitId":"tjtanjin"},"content":"        //special case of termination command"},{"lineNumber":109,"author":{"gitId":"tjtanjin"},"content":"        if (input.split(\" \", 2)[0].equalsIgnoreCase(\"BYE\")) {"},{"lineNumber":110,"author":{"gitId":"tjtanjin"},"content":"            System.exit(0);"},{"lineNumber":111,"author":{"gitId":"tjtanjin"},"content":"        }"},{"lineNumber":112,"author":{"gitId":"tjtanjin"},"content":"    }"},{"lineNumber":113,"author":{"gitId":"tjtanjin"},"content":""},{"lineNumber":114,"author":{"gitId":"tjtanjin"},"content":"    /**"},{"lineNumber":115,"author":{"gitId":"tjtanjin"},"content":"     * Checks response and print as info or error."},{"lineNumber":116,"author":{"gitId":"tjtanjin"},"content":"     *"},{"lineNumber":117,"author":{"gitId":"tjtanjin"},"content":"     * @param response error message to print"},{"lineNumber":118,"author":{"gitId":"tjtanjin"},"content":"     */"},{"lineNumber":119,"author":{"gitId":"tjtanjin"},"content":"    public void showResponse(String response) {"},{"lineNumber":120,"author":{"gitId":"tjtanjin"},"content":"        if (response.startsWith(\"Error:\")) {"},{"lineNumber":121,"author":{"gitId":"tjtanjin"},"content":"            showErrorMsg(response);"},{"lineNumber":122,"author":{"gitId":"tjtanjin"},"content":"        } else if (response.startsWith(\"Terminated: \")) {"},{"lineNumber":123,"author":{"gitId":"tjtanjin"},"content":"            showTerminateMsg(response);"},{"lineNumber":124,"author":{"gitId":"tjtanjin"},"content":"        } else {"},{"lineNumber":125,"author":{"gitId":"tjtanjin"},"content":"            showInfoMsg(response);"},{"lineNumber":126,"author":{"gitId":"tjtanjin"},"content":"        }"},{"lineNumber":127,"author":{"gitId":"tjtanjin"},"content":"    }"},{"lineNumber":128,"author":{"gitId":"tjtanjin"},"content":"}"}],"authorContributionMap":{"tjtanjin":128}},{"path":"src/main/resources/view/DialogBox.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"tjtanjin"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"},{"lineNumber":2,"author":{"gitId":"tjtanjin"},"content":""},{"lineNumber":3,"author":{"gitId":"tjtanjin"},"content":"\u003c?import javafx.geometry.Insets?\u003e"},{"lineNumber":4,"author":{"gitId":"tjtanjin"},"content":"\u003c?import javafx.scene.control.Label?\u003e"},{"lineNumber":5,"author":{"gitId":"tjtanjin"},"content":"\u003c?import javafx.scene.image.ImageView?\u003e"},{"lineNumber":6,"author":{"gitId":"tjtanjin"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e"},{"lineNumber":7,"author":{"gitId":"tjtanjin"},"content":""},{"lineNumber":8,"author":{"gitId":"tjtanjin"},"content":"\u003cfx:root alignment\u003d\"TOP_RIGHT\" maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\" prefWidth\u003d\"400.0\" type\u003d\"javafx.scene.layout.HBox\" xmlns\u003d\"http://javafx.com/javafx/15.0.1\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e"},{"lineNumber":9,"author":{"gitId":"tjtanjin"},"content":"  \u003cchildren\u003e"},{"lineNumber":10,"author":{"gitId":"tjtanjin"},"content":"    \u003c!-- Shape reused from: https://stackoverflow.com/a/38118843/14966239 --\u003e"},{"lineNumber":11,"author":{"gitId":"tjtanjin"},"content":"    \u003cLabel fx:id\u003d\"dialog\" maxHeight\u003d\"1.7976931348623157E308\" minHeight\u003d\"-Infinity\" style\u003d\"-fx-shape: \u0026quot;M100,100 h200 a20,20 0 0 1 20,20 v200 a20,20 0 0 1 -20,20 h-200 a20,20 0 0 1 -20,-20 v-200 a20,20 0 0 1 20,-20 z\u0026quot;\u0026quot;M100,100 h200 a20,20 0 0 1 20,20 v200 a20,20 0 0 1 -20,20 h-200 a20,20 0 0 1 -20,-20 v-200 a20,20 0 0 1 20,-20 z\u0026quot;; -fx-padding: 30; -fx-background-color: rgba(53,69,99,0.8); -fx-background-insets: 5;\" text\u003d\"Label\" textFill\u003d\"WHITE\" wrapText\u003d\"true\" HBox.hgrow\u003d\"ALWAYS\" /\u003e"},{"lineNumber":12,"author":{"gitId":"tjtanjin"},"content":"    \u003cImageView fx:id\u003d\"displayPicture\" fitHeight\u003d\"99.0\" fitWidth\u003d\"99.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\" /\u003e"},{"lineNumber":13,"author":{"gitId":"tjtanjin"},"content":"  \u003c/children\u003e"},{"lineNumber":14,"author":{"gitId":"tjtanjin"},"content":"  \u003cpadding\u003e"},{"lineNumber":15,"author":{"gitId":"tjtanjin"},"content":"    \u003cInsets bottom\u003d\"15.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"15.0\" /\u003e"},{"lineNumber":16,"author":{"gitId":"tjtanjin"},"content":"  \u003c/padding\u003e"},{"lineNumber":17,"author":{"gitId":"tjtanjin"},"content":"\u003c/fx:root\u003e"}],"authorContributionMap":{"tjtanjin":17}},{"path":"src/main/resources/view/UiHandler.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"tjtanjin"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"},{"lineNumber":2,"author":{"gitId":"tjtanjin"},"content":""},{"lineNumber":3,"author":{"gitId":"tjtanjin"},"content":"\u003c?import javafx.scene.control.Button?\u003e"},{"lineNumber":4,"author":{"gitId":"tjtanjin"},"content":"\u003c?import javafx.scene.control.ScrollPane?\u003e"},{"lineNumber":5,"author":{"gitId":"tjtanjin"},"content":"\u003c?import javafx.scene.control.TextField?\u003e"},{"lineNumber":6,"author":{"gitId":"tjtanjin"},"content":"\u003c?import javafx.scene.layout.AnchorPane?\u003e"},{"lineNumber":7,"author":{"gitId":"tjtanjin"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e"},{"lineNumber":8,"author":{"gitId":"tjtanjin"},"content":""},{"lineNumber":9,"author":{"gitId":"tjtanjin"},"content":"\u003cAnchorPane maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefHeight\u003d\"600.0\" prefWidth\u003d\"400.0\" xmlns\u003d\"http://javafx.com/javafx/8.0.171\" xmlns:fx\u003d\"http://javafx.com/fxml/1\" fx:controller\u003d\"com.tjtanjin.steve.ui.UiHandler\"\u003e"},{"lineNumber":10,"author":{"gitId":"tjtanjin"},"content":"  \u003cchildren\u003e"},{"lineNumber":11,"author":{"gitId":"tjtanjin"},"content":"    \u003cTextField fx:id\u003d\"userInput\" layoutY\u003d\"558.0\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"324.0\" AnchorPane.bottomAnchor\u003d\"1.0\" /\u003e"},{"lineNumber":12,"author":{"gitId":"tjtanjin"},"content":"    \u003cButton fx:id\u003d\"sendButton\" layoutX\u003d\"324.0\" layoutY\u003d\"558.0\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"76.0\" text\u003d\"Send\" /\u003e"},{"lineNumber":13,"author":{"gitId":"tjtanjin"},"content":"    \u003cScrollPane fx:id\u003d\"scrollPane\" hbarPolicy\u003d\"NEVER\" hvalue\u003d\"1.0\" prefHeight\u003d\"557.0\" prefWidth\u003d\"400.0\" vvalue\u003d\"1.0\" stylesheets\u003d\"@style.css\"\u003e"},{"lineNumber":14,"author":{"gitId":"tjtanjin"},"content":"      \u003ccontent\u003e"},{"lineNumber":15,"author":{"gitId":"tjtanjin"},"content":"        \u003cVBox fx:id\u003d\"dialogContainer\" prefHeight\u003d\"552.0\" prefWidth\u003d\"388.0\" styleClass\u003d\"background\"/\u003e"},{"lineNumber":16,"author":{"gitId":"tjtanjin"},"content":"      \u003c/content\u003e"},{"lineNumber":17,"author":{"gitId":"tjtanjin"},"content":"    \u003c/ScrollPane\u003e"},{"lineNumber":18,"author":{"gitId":"tjtanjin"},"content":"  \u003c/children\u003e"},{"lineNumber":19,"author":{"gitId":"tjtanjin"},"content":"\u003c/AnchorPane\u003e"}],"authorContributionMap":{"tjtanjin":19}},{"path":"src/test/java/com/tjtanjin/steve/tasks/DeadlineTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tjtanjin"},"content":"package com.tjtanjin.steve.tasks;"},{"lineNumber":2,"author":{"gitId":"tjtanjin"},"content":""},{"lineNumber":3,"author":{"gitId":"tjtanjin"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;"},{"lineNumber":4,"author":{"gitId":"tjtanjin"},"content":""},{"lineNumber":5,"author":{"gitId":"tjtanjin"},"content":"import java.time.LocalDate;"},{"lineNumber":6,"author":{"gitId":"tjtanjin"},"content":""},{"lineNumber":7,"author":{"gitId":"tjtanjin"},"content":"import org.junit.jupiter.api.Test;"},{"lineNumber":8,"author":{"gitId":"tjtanjin"},"content":""},{"lineNumber":9,"author":{"gitId":"tjtanjin"},"content":"public class DeadlineTest {"},{"lineNumber":10,"author":{"gitId":"tjtanjin"},"content":"    private final LocalDate[] taskDate \u003d new LocalDate[] {LocalDate.parse(\"2020-04-05\")};"},{"lineNumber":11,"author":{"gitId":"tjtanjin"},"content":"    private final Task TASK \u003d new Deadline(\"Test Deadline\", \"incomplete\", taskDate);"},{"lineNumber":12,"author":{"gitId":"tjtanjin"},"content":""},{"lineNumber":13,"author":{"gitId":"tjtanjin"},"content":"    @Test"},{"lineNumber":14,"author":{"gitId":"tjtanjin"},"content":"    void getTaskName_whenInvoke_thenOutputTaskName() {"},{"lineNumber":15,"author":{"gitId":"tjtanjin"},"content":"        String expected \u003d \"Test Deadline\";"},{"lineNumber":16,"author":{"gitId":"tjtanjin"},"content":"        String taskName \u003d TASK.getTaskName();"},{"lineNumber":17,"author":{"gitId":"tjtanjin"},"content":"        assertEquals(expected, taskName);"},{"lineNumber":18,"author":{"gitId":"tjtanjin"},"content":"    }"},{"lineNumber":19,"author":{"gitId":"tjtanjin"},"content":""},{"lineNumber":20,"author":{"gitId":"tjtanjin"},"content":"    @Test"},{"lineNumber":21,"author":{"gitId":"tjtanjin"},"content":"    void getStatus_whenInvoke_thenOutputTaskStatus() {"},{"lineNumber":22,"author":{"gitId":"tjtanjin"},"content":"        String expected \u003d \"incomplete\";"},{"lineNumber":23,"author":{"gitId":"tjtanjin"},"content":"        String taskStatus \u003d TASK.getStatus();"},{"lineNumber":24,"author":{"gitId":"tjtanjin"},"content":"        assertEquals(expected, taskStatus);"},{"lineNumber":25,"author":{"gitId":"tjtanjin"},"content":"    }"},{"lineNumber":26,"author":{"gitId":"tjtanjin"},"content":""},{"lineNumber":27,"author":{"gitId":"tjtanjin"},"content":"    @Test"},{"lineNumber":28,"author":{"gitId":"tjtanjin"},"content":"    void getType_whenInvoke_thenOutputTaskType() {"},{"lineNumber":29,"author":{"gitId":"tjtanjin"},"content":"        String expected \u003d \"DEADLINE\";"},{"lineNumber":30,"author":{"gitId":"tjtanjin"},"content":"        String taskType \u003d TASK.getType();"},{"lineNumber":31,"author":{"gitId":"tjtanjin"},"content":"        assertEquals(expected, taskType);"},{"lineNumber":32,"author":{"gitId":"tjtanjin"},"content":"    }"},{"lineNumber":33,"author":{"gitId":"tjtanjin"},"content":""},{"lineNumber":34,"author":{"gitId":"tjtanjin"},"content":"    @Test"},{"lineNumber":35,"author":{"gitId":"tjtanjin"},"content":"    void getDate_whenInvoke_thenOutputTaskDate() {"},{"lineNumber":36,"author":{"gitId":"tjtanjin"},"content":"        LocalDate[] expected \u003d new LocalDate[] {LocalDate.parse(\"2020-04-05\")};"},{"lineNumber":37,"author":{"gitId":"tjtanjin"},"content":"        LocalDate[] taskDate \u003d TASK.getDates();"},{"lineNumber":38,"author":{"gitId":"tjtanjin"},"content":"        assertEquals(expected[0], taskDate[0]);"},{"lineNumber":39,"author":{"gitId":"tjtanjin"},"content":"    }"},{"lineNumber":40,"author":{"gitId":"tjtanjin"},"content":""},{"lineNumber":41,"author":{"gitId":"tjtanjin"},"content":"    @Test"},{"lineNumber":42,"author":{"gitId":"tjtanjin"},"content":"    void markCompleted_whenInvoke_thenMarkTaskComplete() {"},{"lineNumber":43,"author":{"gitId":"tjtanjin"},"content":"        String expected \u003d \"complete\";"},{"lineNumber":44,"author":{"gitId":"tjtanjin"},"content":"        Task task \u003d TASK.markCompleted();"},{"lineNumber":45,"author":{"gitId":"tjtanjin"},"content":"        String taskStatus \u003d task.getStatus();"},{"lineNumber":46,"author":{"gitId":"tjtanjin"},"content":"        assertEquals(expected, taskStatus);"},{"lineNumber":47,"author":{"gitId":"tjtanjin"},"content":"    }"},{"lineNumber":48,"author":{"gitId":"tjtanjin"},"content":"}"}],"authorContributionMap":{"tjtanjin":48}},{"path":"src/test/java/com/tjtanjin/steve/tasks/EventTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tjtanjin"},"content":"package com.tjtanjin.steve.tasks;"},{"lineNumber":2,"author":{"gitId":"tjtanjin"},"content":""},{"lineNumber":3,"author":{"gitId":"tjtanjin"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;"},{"lineNumber":4,"author":{"gitId":"tjtanjin"},"content":""},{"lineNumber":5,"author":{"gitId":"tjtanjin"},"content":"import java.time.LocalDate;"},{"lineNumber":6,"author":{"gitId":"tjtanjin"},"content":""},{"lineNumber":7,"author":{"gitId":"tjtanjin"},"content":"import org.junit.jupiter.api.Test;"},{"lineNumber":8,"author":{"gitId":"tjtanjin"},"content":""},{"lineNumber":9,"author":{"gitId":"tjtanjin"},"content":"public class EventTest {"},{"lineNumber":10,"author":{"gitId":"tjtanjin"},"content":"    private final LocalDate[] taskDates \u003d"},{"lineNumber":11,"author":{"gitId":"tjtanjin"},"content":"            new LocalDate[] {LocalDate.parse(\"2020-04-05\"), LocalDate.parse(\"2020-04-06\")};"},{"lineNumber":12,"author":{"gitId":"tjtanjin"},"content":"    private final Task TASK \u003d new Event(\"Test Event\", \"incomplete\", taskDates);"},{"lineNumber":13,"author":{"gitId":"tjtanjin"},"content":""},{"lineNumber":14,"author":{"gitId":"tjtanjin"},"content":"    @Test"},{"lineNumber":15,"author":{"gitId":"tjtanjin"},"content":"    void getTaskName_whenInvoke_thenOutputTaskName() {"},{"lineNumber":16,"author":{"gitId":"tjtanjin"},"content":"        String expected \u003d \"Test Event\";"},{"lineNumber":17,"author":{"gitId":"tjtanjin"},"content":"        String taskName \u003d TASK.getTaskName();"},{"lineNumber":18,"author":{"gitId":"tjtanjin"},"content":"        assertEquals(expected, taskName);"},{"lineNumber":19,"author":{"gitId":"tjtanjin"},"content":"    }"},{"lineNumber":20,"author":{"gitId":"tjtanjin"},"content":""},{"lineNumber":21,"author":{"gitId":"tjtanjin"},"content":"    @Test"},{"lineNumber":22,"author":{"gitId":"tjtanjin"},"content":"    void getStatus_whenInvoke_thenOutputTaskStatus() {"},{"lineNumber":23,"author":{"gitId":"tjtanjin"},"content":"        String expected \u003d \"incomplete\";"},{"lineNumber":24,"author":{"gitId":"tjtanjin"},"content":"        String taskStatus \u003d TASK.getStatus();"},{"lineNumber":25,"author":{"gitId":"tjtanjin"},"content":"        assertEquals(expected, taskStatus);"},{"lineNumber":26,"author":{"gitId":"tjtanjin"},"content":"    }"},{"lineNumber":27,"author":{"gitId":"tjtanjin"},"content":""},{"lineNumber":28,"author":{"gitId":"tjtanjin"},"content":"    @Test"},{"lineNumber":29,"author":{"gitId":"tjtanjin"},"content":"    void getType_whenInvoke_thenOutputTaskType() {"},{"lineNumber":30,"author":{"gitId":"tjtanjin"},"content":"        String expected \u003d \"EVENT\";"},{"lineNumber":31,"author":{"gitId":"tjtanjin"},"content":"        String taskType \u003d TASK.getType();"},{"lineNumber":32,"author":{"gitId":"tjtanjin"},"content":"        assertEquals(expected, taskType);"},{"lineNumber":33,"author":{"gitId":"tjtanjin"},"content":"    }"},{"lineNumber":34,"author":{"gitId":"tjtanjin"},"content":""},{"lineNumber":35,"author":{"gitId":"tjtanjin"},"content":"    @Test"},{"lineNumber":36,"author":{"gitId":"tjtanjin"},"content":"    void getDate_whenInvoke_thenOutputTaskDate() {"},{"lineNumber":37,"author":{"gitId":"tjtanjin"},"content":"        LocalDate[] expected \u003d new LocalDate[] {LocalDate.parse(\"2020-04-05\"), LocalDate.parse(\"2020-04-06\")};"},{"lineNumber":38,"author":{"gitId":"tjtanjin"},"content":"        LocalDate[] taskDates \u003d TASK.getDates();"},{"lineNumber":39,"author":{"gitId":"tjtanjin"},"content":"        assertEquals(expected[0], taskDates[0]);"},{"lineNumber":40,"author":{"gitId":"tjtanjin"},"content":"        assertEquals(expected[1], taskDates[1]);"},{"lineNumber":41,"author":{"gitId":"tjtanjin"},"content":"    }"},{"lineNumber":42,"author":{"gitId":"tjtanjin"},"content":""},{"lineNumber":43,"author":{"gitId":"tjtanjin"},"content":"    @Test"},{"lineNumber":44,"author":{"gitId":"tjtanjin"},"content":"    void markCompleted_whenInvoke_thenMarkTaskComplete() {"},{"lineNumber":45,"author":{"gitId":"tjtanjin"},"content":"        String expected \u003d \"complete\";"},{"lineNumber":46,"author":{"gitId":"tjtanjin"},"content":"        Task task \u003d TASK.markCompleted();"},{"lineNumber":47,"author":{"gitId":"tjtanjin"},"content":"        String taskStatus \u003d task.getStatus();"},{"lineNumber":48,"author":{"gitId":"tjtanjin"},"content":"        assertEquals(expected, taskStatus);"},{"lineNumber":49,"author":{"gitId":"tjtanjin"},"content":"    }"},{"lineNumber":50,"author":{"gitId":"tjtanjin"},"content":"}"}],"authorContributionMap":{"tjtanjin":50}},{"path":"src/test/java/com/tjtanjin/steve/tasks/ToDoTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tjtanjin"},"content":"package com.tjtanjin.steve.tasks;"},{"lineNumber":2,"author":{"gitId":"tjtanjin"},"content":""},{"lineNumber":3,"author":{"gitId":"tjtanjin"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;"},{"lineNumber":4,"author":{"gitId":"tjtanjin"},"content":""},{"lineNumber":5,"author":{"gitId":"tjtanjin"},"content":"import java.time.LocalDate;"},{"lineNumber":6,"author":{"gitId":"tjtanjin"},"content":""},{"lineNumber":7,"author":{"gitId":"tjtanjin"},"content":"import org.junit.jupiter.api.Test;"},{"lineNumber":8,"author":{"gitId":"tjtanjin"},"content":""},{"lineNumber":9,"author":{"gitId":"tjtanjin"},"content":"public class ToDoTest {"},{"lineNumber":10,"author":{"gitId":"tjtanjin"},"content":"    private final Task TASK \u003d new ToDo(\"Test Todo\", \"incomplete\");"},{"lineNumber":11,"author":{"gitId":"tjtanjin"},"content":""},{"lineNumber":12,"author":{"gitId":"tjtanjin"},"content":"    @Test"},{"lineNumber":13,"author":{"gitId":"tjtanjin"},"content":"    void getTaskName_whenInvoke_thenOutputTaskName() {"},{"lineNumber":14,"author":{"gitId":"tjtanjin"},"content":"        String expected \u003d \"Test Todo\";"},{"lineNumber":15,"author":{"gitId":"tjtanjin"},"content":"        String taskName \u003d TASK.getTaskName();"},{"lineNumber":16,"author":{"gitId":"tjtanjin"},"content":"        assertEquals(expected, taskName);"},{"lineNumber":17,"author":{"gitId":"tjtanjin"},"content":"    }"},{"lineNumber":18,"author":{"gitId":"tjtanjin"},"content":""},{"lineNumber":19,"author":{"gitId":"tjtanjin"},"content":"    @Test"},{"lineNumber":20,"author":{"gitId":"tjtanjin"},"content":"    void getStatus_whenInvoke_thenOutputTaskStatus() {"},{"lineNumber":21,"author":{"gitId":"tjtanjin"},"content":"        String expected \u003d \"incomplete\";"},{"lineNumber":22,"author":{"gitId":"tjtanjin"},"content":"        String taskStatus \u003d TASK.getStatus();"},{"lineNumber":23,"author":{"gitId":"tjtanjin"},"content":"        assertEquals(expected, taskStatus);"},{"lineNumber":24,"author":{"gitId":"tjtanjin"},"content":"    }"},{"lineNumber":25,"author":{"gitId":"tjtanjin"},"content":""},{"lineNumber":26,"author":{"gitId":"tjtanjin"},"content":"    @Test"},{"lineNumber":27,"author":{"gitId":"tjtanjin"},"content":"    void getType_whenInvoke_thenOutputTaskType() {"},{"lineNumber":28,"author":{"gitId":"tjtanjin"},"content":"        String expected \u003d \"TODO\";"},{"lineNumber":29,"author":{"gitId":"tjtanjin"},"content":"        String taskType \u003d TASK.getType();"},{"lineNumber":30,"author":{"gitId":"tjtanjin"},"content":"        assertEquals(expected, taskType);"},{"lineNumber":31,"author":{"gitId":"tjtanjin"},"content":"    }"},{"lineNumber":32,"author":{"gitId":"tjtanjin"},"content":""},{"lineNumber":33,"author":{"gitId":"tjtanjin"},"content":"    @Test"},{"lineNumber":34,"author":{"gitId":"tjtanjin"},"content":"    void getDate_whenInvoke_thenOutputTaskDate() {"},{"lineNumber":35,"author":{"gitId":"tjtanjin"},"content":"        LocalDate[] expected \u003d new LocalDate[1];"},{"lineNumber":36,"author":{"gitId":"tjtanjin"},"content":"        LocalDate[] taskDate \u003d TASK.getDates();"},{"lineNumber":37,"author":{"gitId":"tjtanjin"},"content":"        assertEquals(expected[0], taskDate[0]);"},{"lineNumber":38,"author":{"gitId":"tjtanjin"},"content":"    }"},{"lineNumber":39,"author":{"gitId":"tjtanjin"},"content":""},{"lineNumber":40,"author":{"gitId":"tjtanjin"},"content":"    @Test"},{"lineNumber":41,"author":{"gitId":"tjtanjin"},"content":"    void markCompleted_whenInvoke_thenMarkTaskComplete() {"},{"lineNumber":42,"author":{"gitId":"tjtanjin"},"content":"        String expected \u003d \"complete\";"},{"lineNumber":43,"author":{"gitId":"tjtanjin"},"content":"        Task task \u003d TASK.markCompleted();"},{"lineNumber":44,"author":{"gitId":"tjtanjin"},"content":"        String taskStatus \u003d task.getStatus();"},{"lineNumber":45,"author":{"gitId":"tjtanjin"},"content":"        assertEquals(expected, taskStatus);"},{"lineNumber":46,"author":{"gitId":"tjtanjin"},"content":"    }"},{"lineNumber":47,"author":{"gitId":"tjtanjin"},"content":"}"}],"authorContributionMap":{"tjtanjin":47}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"tjtanjin"},"content":"come and catch me"},{"lineNumber":2,"author":{"gitId":"tjtanjin"},"content":"todo play catching"},{"lineNumber":3,"author":{"gitId":"tjtanjin"},"content":"deadline read book /by sunday 3pm"},{"lineNumber":4,"author":{"gitId":"tjtanjin"},"content":"event swimming class /from monday 4-6pm"},{"lineNumber":5,"author":{"gitId":"tjtanjin"},"content":"event swimming class /from 2020-03-03 /to 2020-03-03"},{"lineNumber":6,"author":{"gitId":"tjtanjin"},"content":"list"},{"lineNumber":7,"author":{"gitId":"tjtanjin"},"content":"done 1"},{"lineNumber":8,"author":{"gitId":"tjtanjin"},"content":"list"},{"lineNumber":9,"author":{"gitId":"tjtanjin"},"content":"done 1"},{"lineNumber":10,"author":{"gitId":"tjtanjin"},"content":"list"},{"lineNumber":11,"author":{"gitId":"tjtanjin"},"content":"done 2"},{"lineNumber":12,"author":{"gitId":"tjtanjin"},"content":"list"},{"lineNumber":13,"author":{"gitId":"tjtanjin"},"content":"delete 1"},{"lineNumber":14,"author":{"gitId":"tjtanjin"},"content":"list"},{"lineNumber":15,"author":{"gitId":"tjtanjin"},"content":"delete 2"},{"lineNumber":16,"author":{"gitId":"tjtanjin"},"content":"list"},{"lineNumber":17,"author":{"gitId":"tjtanjin"},"content":"delete 1"},{"lineNumber":18,"author":{"gitId":"tjtanjin"},"content":"todo final one"},{"lineNumber":19,"author":{"gitId":"tjtanjin"},"content":"todo really meh"},{"lineNumber":20,"author":{"gitId":"tjtanjin"},"content":"find final"},{"lineNumber":21,"author":{"gitId":"tjtanjin"},"content":"list"},{"lineNumber":22,"author":{"gitId":"tjtanjin"},"content":"delete 1"},{"lineNumber":23,"author":{"gitId":"tjtanjin"},"content":"delete 1"},{"lineNumber":24,"author":{"gitId":"tjtanjin"},"content":"list"},{"lineNumber":25,"author":{"gitId":"tjtanjin"},"content":"bye"}],"authorContributionMap":{"tjtanjin":25}},{"path":"text-ui-test/runtest.sh","fileType":"sh","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"#!/usr/bin/env bash"},{"lineNumber":2,"author":{"gitId":"-"},"content":""},{"lineNumber":3,"author":{"gitId":"-"},"content":"# create bin directory if it doesn\u0027t exist"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if [ ! -d \"../bin\" ]"},{"lineNumber":5,"author":{"gitId":"-"},"content":"then"},{"lineNumber":6,"author":{"gitId":"-"},"content":"    mkdir ../bin"},{"lineNumber":7,"author":{"gitId":"-"},"content":"fi"},{"lineNumber":8,"author":{"gitId":"-"},"content":""},{"lineNumber":9,"author":{"gitId":"tjtanjin"},"content":"# create data directory and tasks.json if it doesn\u0027t exist (for testing consistency)"},{"lineNumber":10,"author":{"gitId":"tjtanjin"},"content":"if [ ! -d \"./data\" ]"},{"lineNumber":11,"author":{"gitId":"tjtanjin"},"content":"then"},{"lineNumber":12,"author":{"gitId":"tjtanjin"},"content":"    mkdir ./data"},{"lineNumber":13,"author":{"gitId":"tjtanjin"},"content":"    echo \"[]\" \u003e ./data/tasks.json"},{"lineNumber":14,"author":{"gitId":"tjtanjin"},"content":"fi"},{"lineNumber":15,"author":{"gitId":"tjtanjin"},"content":""},{"lineNumber":16,"author":{"gitId":"-"},"content":"# delete output from previous run"},{"lineNumber":17,"author":{"gitId":"-"},"content":"if [ -e \"./ACTUAL.TXT\" ]"},{"lineNumber":18,"author":{"gitId":"-"},"content":"then"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    rm ACTUAL.TXT"},{"lineNumber":20,"author":{"gitId":"-"},"content":"fi"},{"lineNumber":21,"author":{"gitId":"-"},"content":""},{"lineNumber":22,"author":{"gitId":"tjtanjin"},"content":"# modified to compile with json-simple"},{"lineNumber":23,"author":{"gitId":"-"},"content":"# compile the code into the bin folder, terminates if error occurred"},{"lineNumber":24,"author":{"gitId":"tjtanjin"},"content":"if ! javac -cp ~/.gradle/caches/modules-2/files-2.1/com.googlecode.json-simple/json-simple/1.1.1/c9ad4a0850ab676c5c64461a05ca524cdfff59f1/json-simple-1.1.1.jar:./ ../src/main/java/com/tjtanjin/steve/*.java ../src/main/java/com/tjtanjin/steve/*/*.java -Xlint:none -d ../bin ../src/main/java/com/tjtanjin/steve/*.java"},{"lineNumber":25,"author":{"gitId":"-"},"content":"then"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    echo \"********** BUILD FAILURE **********\""},{"lineNumber":27,"author":{"gitId":"-"},"content":"    exit 1"},{"lineNumber":28,"author":{"gitId":"-"},"content":"fi"},{"lineNumber":29,"author":{"gitId":"-"},"content":""},{"lineNumber":30,"author":{"gitId":"tjtanjin"},"content":"# modified to run with json-simple"},{"lineNumber":31,"author":{"gitId":"-"},"content":"# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"},{"lineNumber":32,"author":{"gitId":"tjtanjin"},"content":"java -cp ~/.gradle/caches/modules-2/files-2.1/com.googlecode.json-simple/json-simple/1.1.1/c9ad4a0850ab676c5c64461a05ca524cdfff59f1/json-simple-1.1.1.jar:./:../bin com.tjtanjin.steve.Steve \u003c input.txt \u003e ACTUAL.TXT"},{"lineNumber":33,"author":{"gitId":"-"},"content":""},{"lineNumber":34,"author":{"gitId":"-"},"content":"# convert to UNIX format"},{"lineNumber":35,"author":{"gitId":"-"},"content":"cp EXPECTED.TXT EXPECTED-UNIX.TXT"},{"lineNumber":36,"author":{"gitId":"-"},"content":"dos2unix ACTUAL.TXT EXPECTED-UNIX.TXT"},{"lineNumber":37,"author":{"gitId":"-"},"content":""},{"lineNumber":38,"author":{"gitId":"-"},"content":"# compare the output to the expected output"},{"lineNumber":39,"author":{"gitId":"-"},"content":"diff ACTUAL.TXT EXPECTED-UNIX.TXT"},{"lineNumber":40,"author":{"gitId":"-"},"content":"if [ $? -eq 0 ]"},{"lineNumber":41,"author":{"gitId":"-"},"content":"then"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    echo \"Test result: PASSED\""},{"lineNumber":43,"author":{"gitId":"-"},"content":"    exit 0"},{"lineNumber":44,"author":{"gitId":"-"},"content":"else"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    echo \"Test result: FAILED\""},{"lineNumber":46,"author":{"gitId":"-"},"content":"    exit 1"},{"lineNumber":47,"author":{"gitId":"-"},"content":"fi"}],"authorContributionMap":{"-":36,"tjtanjin":11}}]
