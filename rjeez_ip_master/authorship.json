[{"path":"README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"rjeez"},"content":"# Duke bot project template"},{"lineNumber":2,"author":{"gitId":"-"},"content":""},{"lineNumber":3,"author":{"gitId":"-"},"content":"This is a project template for a greenfield Java project. It\u0027s named after the Java mascot _Duke_. Given below are instructions on how to use it."},{"lineNumber":4,"author":{"gitId":"-"},"content":""},{"lineNumber":5,"author":{"gitId":"rjeez"},"content":"Setting up in Intellij"},{"lineNumber":6,"author":{"gitId":"-"},"content":""},{"lineNumber":7,"author":{"gitId":"-"},"content":"Prerequisites: JDK 11, update Intellij to the most recent version."},{"lineNumber":8,"author":{"gitId":"-"},"content":""},{"lineNumber":9,"author":{"gitId":"rjeez"},"content":"Open Intellij (if you are not in the welcome screen, click File \u003e Close Project to close the existing project dialog first)"},{"lineNumber":10,"author":{"gitId":"rjeez"},"content":"Set up the correct JDK version, as follows:"},{"lineNumber":11,"author":{"gitId":"rjeez"},"content":"Click Configure \u003e Structure for New Projects and then Project Settings \u003e Project \u003e Project SDK"},{"lineNumber":12,"author":{"gitId":"rjeez"},"content":"If JDK 11 is listed in the drop down, select it. If it is not, click New... and select the directory where you installed JDK 11"},{"lineNumber":13,"author":{"gitId":"rjeez"},"content":"Click OK"},{"lineNumber":14,"author":{"gitId":"rjeez"},"content":"Import the project into Intellij as follows:"},{"lineNumber":15,"author":{"gitId":"rjeez"},"content":"Click Open or Import."},{"lineNumber":16,"author":{"gitId":"rjeez"},"content":"Select the project directory, and click OK"},{"lineNumber":17,"author":{"gitId":"rjeez"},"content":"If there are any further prompts, accept the defaults."}],"authorContributionMap":{"rjeez":11,"-":6}},{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"rjeez"},"content":"plugins {"},{"lineNumber":2,"author":{"gitId":"rjeez"},"content":"    id \u0027java\u0027"},{"lineNumber":3,"author":{"gitId":"rjeez"},"content":"    id \u0027application\u0027"},{"lineNumber":4,"author":{"gitId":"rjeez"},"content":"    id \u0027checkstyle\u0027"},{"lineNumber":5,"author":{"gitId":"rjeez"},"content":"    id \"com.github.johnrengelman.shadow\" version \"6.0.0\""},{"lineNumber":6,"author":{"gitId":"rjeez"},"content":"}"},{"lineNumber":7,"author":{"gitId":"rjeez"},"content":""},{"lineNumber":8,"author":{"gitId":"rjeez"},"content":"group \u0027org.example\u0027"},{"lineNumber":9,"author":{"gitId":"rjeez"},"content":"version \u00271.0-SNAPSHOT\u0027"},{"lineNumber":10,"author":{"gitId":"rjeez"},"content":""},{"lineNumber":11,"author":{"gitId":"rjeez"},"content":"repositories {"},{"lineNumber":12,"author":{"gitId":"rjeez"},"content":"    mavenCentral()"},{"lineNumber":13,"author":{"gitId":"rjeez"},"content":"}"},{"lineNumber":14,"author":{"gitId":"rjeez"},"content":"sourceSets {"},{"lineNumber":15,"author":{"gitId":"rjeez"},"content":"    main {"},{"lineNumber":16,"author":{"gitId":"rjeez"},"content":"        java {"},{"lineNumber":17,"author":{"gitId":"rjeez"},"content":"            srcDirs \u003d [\u0027src\u0027]"},{"lineNumber":18,"author":{"gitId":"rjeez"},"content":"        }"},{"lineNumber":19,"author":{"gitId":"rjeez"},"content":"    }"},{"lineNumber":20,"author":{"gitId":"rjeez"},"content":""},{"lineNumber":21,"author":{"gitId":"rjeez"},"content":"}"},{"lineNumber":22,"author":{"gitId":"rjeez"},"content":""},{"lineNumber":23,"author":{"gitId":"rjeez"},"content":""},{"lineNumber":24,"author":{"gitId":"rjeez"},"content":"dependencies {"},{"lineNumber":25,"author":{"gitId":"rjeez"},"content":"    compile \u0027junit:junit:4.12\u0027"},{"lineNumber":26,"author":{"gitId":"rjeez"},"content":"}"},{"lineNumber":27,"author":{"gitId":"rjeez"},"content":"run {"},{"lineNumber":28,"author":{"gitId":"rjeez"},"content":"    enableAssertions \u003d true"},{"lineNumber":29,"author":{"gitId":"rjeez"},"content":"}"},{"lineNumber":30,"author":{"gitId":"rjeez"},"content":"test {"},{"lineNumber":31,"author":{"gitId":"rjeez"},"content":"    useJUnitPlatform()"},{"lineNumber":32,"author":{"gitId":"rjeez"},"content":"}"},{"lineNumber":33,"author":{"gitId":"rjeez"},"content":""},{"lineNumber":34,"author":{"gitId":"rjeez"},"content":"dependencies {"},{"lineNumber":35,"author":{"gitId":"rjeez"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.4.0\u0027"},{"lineNumber":36,"author":{"gitId":"rjeez"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.4.0\u0027"},{"lineNumber":37,"author":{"gitId":"rjeez"},"content":"    implementation \u0027org.junit.jupiter:junit-jupiter-api:5.5.1\u0027"},{"lineNumber":38,"author":{"gitId":"rjeez"},"content":"    String javaFxVersion \u003d \u002711\u0027"},{"lineNumber":39,"author":{"gitId":"rjeez"},"content":""},{"lineNumber":40,"author":{"gitId":"rjeez"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027"},{"lineNumber":41,"author":{"gitId":"rjeez"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"},{"lineNumber":42,"author":{"gitId":"rjeez"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"},{"lineNumber":43,"author":{"gitId":"rjeez"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027"},{"lineNumber":44,"author":{"gitId":"rjeez"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"},{"lineNumber":45,"author":{"gitId":"rjeez"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"},{"lineNumber":46,"author":{"gitId":"rjeez"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027"},{"lineNumber":47,"author":{"gitId":"rjeez"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"},{"lineNumber":48,"author":{"gitId":"rjeez"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"},{"lineNumber":49,"author":{"gitId":"rjeez"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027"},{"lineNumber":50,"author":{"gitId":"rjeez"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"},{"lineNumber":51,"author":{"gitId":"rjeez"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"},{"lineNumber":52,"author":{"gitId":"rjeez"},"content":"}"},{"lineNumber":53,"author":{"gitId":"rjeez"},"content":"checkstyle {"},{"lineNumber":54,"author":{"gitId":"rjeez"},"content":"    toolVersion \u003d \u00278.23\u0027"},{"lineNumber":55,"author":{"gitId":"rjeez"},"content":"}"},{"lineNumber":56,"author":{"gitId":"rjeez"},"content":"mainClassName \u003d\"main.duke.gui.Launcher\""}],"authorContributionMap":{"rjeez":56}},{"path":"data/duke.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"rjeez"},"content":"E~1~tosleep~2020-01-01 2401"},{"lineNumber":2,"author":{"gitId":"rjeez"},"content":"T~0~sample"}],"authorContributionMap":{"rjeez":2}},{"path":"docs/README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"# User Guide"},{"lineNumber":2,"author":{"gitId":"rjeez"},"content":"Duke bot is a chat bot designed to be used via a command line interface(CLI) with the benefits of using a graphical user interface(GUI). "},{"lineNumber":3,"author":{"gitId":"-"},"content":""},{"lineNumber":4,"author":{"gitId":"-"},"content":"## Features "},{"lineNumber":5,"author":{"gitId":"rjeez"},"content":"\u003elist : prints you the list of store tasks\u003cbr\u003e"},{"lineNumber":6,"author":{"gitId":"rjeez"},"content":"bye : terminates the program\u003cbr\u003e"},{"lineNumber":7,"author":{"gitId":"rjeez"},"content":"help : prints descriptions and samples of each feature\u003cbr\u003e"},{"lineNumber":8,"author":{"gitId":"rjeez"},"content":"todo [your task input] : adds a todo type task\u003cbr\u003e"},{"lineNumber":9,"author":{"gitId":"rjeez"},"content":"event [your task input] /at [YYYY-MM-DD hhmm]: adds an event type task\u003cbr\u003e"},{"lineNumber":10,"author":{"gitId":"rjeez"},"content":"deadline [your task input] /by [YYYY-MM-DD hhmm]: adds a deadline type task\u003cbr\u003e"},{"lineNumber":11,"author":{"gitId":"rjeez"},"content":"delete[number] : deletes the selected task\u003cbr\u003e"},{"lineNumber":12,"author":{"gitId":"rjeez"},"content":"done[number] : make the selected task done\u003cbr\u003e"},{"lineNumber":13,"author":{"gitId":"rjeez"},"content":"find [search string] : finds tasks that matches the string description\u003cbr\u003e"},{"lineNumber":14,"author":{"gitId":"-"},"content":""},{"lineNumber":15,"author":{"gitId":"rjeez"},"content":"### `list` - prints you the list of store tasks "},{"lineNumber":16,"author":{"gitId":"rjeez"},"content":""},{"lineNumber":17,"author":{"gitId":"rjeez"},"content":""},{"lineNumber":18,"author":{"gitId":"rjeez"},"content":"Example of usage: "},{"lineNumber":19,"author":{"gitId":"rjeez"},"content":""},{"lineNumber":20,"author":{"gitId":"rjeez"},"content":"`list`"},{"lineNumber":21,"author":{"gitId":"rjeez"},"content":""},{"lineNumber":22,"author":{"gitId":"rjeez"},"content":"Expected outcome:"},{"lineNumber":23,"author":{"gitId":"rjeez"},"content":""},{"lineNumber":24,"author":{"gitId":"rjeez"},"content":"`These are the tasks in your list:"},{"lineNumber":25,"author":{"gitId":"rjeez"},"content":" 1.[T] [X] sample`"},{"lineNumber":26,"author":{"gitId":"rjeez"},"content":""},{"lineNumber":27,"author":{"gitId":"rjeez"},"content":"### `bye` - terminates the program"},{"lineNumber":28,"author":{"gitId":"rjeez"},"content":""},{"lineNumber":29,"author":{"gitId":"rjeez"},"content":""},{"lineNumber":30,"author":{"gitId":"rjeez"},"content":"Example of usage: "},{"lineNumber":31,"author":{"gitId":"rjeez"},"content":""},{"lineNumber":32,"author":{"gitId":"rjeez"},"content":"`bye`"},{"lineNumber":33,"author":{"gitId":"rjeez"},"content":""},{"lineNumber":34,"author":{"gitId":"rjeez"},"content":"Expected outcome:"},{"lineNumber":35,"author":{"gitId":"rjeez"},"content":""},{"lineNumber":36,"author":{"gitId":"rjeez"},"content":"`Goodbye!`"},{"lineNumber":37,"author":{"gitId":"rjeez"},"content":""},{"lineNumber":38,"author":{"gitId":"rjeez"},"content":"### `help` - prints descriptions and samples of each feature"},{"lineNumber":39,"author":{"gitId":"rjeez"},"content":""},{"lineNumber":40,"author":{"gitId":"rjeez"},"content":""},{"lineNumber":41,"author":{"gitId":"rjeez"},"content":"Example of usage: "},{"lineNumber":42,"author":{"gitId":"rjeez"},"content":""},{"lineNumber":43,"author":{"gitId":"rjeez"},"content":"`help`"},{"lineNumber":44,"author":{"gitId":"rjeez"},"content":""},{"lineNumber":45,"author":{"gitId":"rjeez"},"content":"Expected outcome:"},{"lineNumber":46,"author":{"gitId":"rjeez"},"content":""},{"lineNumber":47,"author":{"gitId":"rjeez"},"content":"![Duke_Interface](Help.PNG)"},{"lineNumber":48,"author":{"gitId":"rjeez"},"content":"### `todo` - adds a todo type task"},{"lineNumber":49,"author":{"gitId":"rjeez"},"content":""},{"lineNumber":50,"author":{"gitId":"rjeez"},"content":""},{"lineNumber":51,"author":{"gitId":"rjeez"},"content":""},{"lineNumber":52,"author":{"gitId":"rjeez"},"content":"Example of usage: "},{"lineNumber":53,"author":{"gitId":"rjeez"},"content":""},{"lineNumber":54,"author":{"gitId":"rjeez"},"content":"`todo sleep`"},{"lineNumber":55,"author":{"gitId":"rjeez"},"content":""},{"lineNumber":56,"author":{"gitId":"rjeez"},"content":"Expected outcome:"},{"lineNumber":57,"author":{"gitId":"rjeez"},"content":""},{"lineNumber":58,"author":{"gitId":"rjeez"},"content":"\u003eAdded the following task: \u003cbr\u003e"},{"lineNumber":59,"author":{"gitId":"rjeez"},"content":"\u003e [T][X] sleep\u003cbr\u003e"},{"lineNumber":60,"author":{"gitId":"rjeez"},"content":"\u003eYou now have 1 tasks in your list"},{"lineNumber":61,"author":{"gitId":"rjeez"},"content":""},{"lineNumber":62,"author":{"gitId":"rjeez"},"content":"### `event` - adds an event type task"},{"lineNumber":63,"author":{"gitId":"-"},"content":""},{"lineNumber":64,"author":{"gitId":"-"},"content":""},{"lineNumber":65,"author":{"gitId":"rjeez"},"content":""},{"lineNumber":66,"author":{"gitId":"rjeez"},"content":"Example of usage: "},{"lineNumber":67,"author":{"gitId":"rjeez"},"content":""},{"lineNumber":68,"author":{"gitId":"rjeez"},"content":"`event tosleep /at 2020-01-01 1111`"},{"lineNumber":69,"author":{"gitId":"rjeez"},"content":""},{"lineNumber":70,"author":{"gitId":"rjeez"},"content":"Expected outcome:"},{"lineNumber":71,"author":{"gitId":"rjeez"},"content":""},{"lineNumber":72,"author":{"gitId":"rjeez"},"content":"\u003eAdded the following task:\u003cbr\u003e"},{"lineNumber":73,"author":{"gitId":"rjeez"},"content":"\u003e [E][X] tosleep 2020-01-01 1111"},{"lineNumber":74,"author":{"gitId":"rjeez"},"content":"\u003eYou now have 1 tasks in your list"},{"lineNumber":75,"author":{"gitId":"rjeez"},"content":""},{"lineNumber":76,"author":{"gitId":"rjeez"},"content":"### `deadline` - adds a deadline type task"},{"lineNumber":77,"author":{"gitId":"rjeez"},"content":""},{"lineNumber":78,"author":{"gitId":"rjeez"},"content":""},{"lineNumber":79,"author":{"gitId":"rjeez"},"content":"Example of usage: "},{"lineNumber":80,"author":{"gitId":"rjeez"},"content":""},{"lineNumber":81,"author":{"gitId":"rjeez"},"content":"`deadline wakeup /by 2020-01-01 1111`"},{"lineNumber":82,"author":{"gitId":"rjeez"},"content":""},{"lineNumber":83,"author":{"gitId":"rjeez"},"content":"Expected outcome:"},{"lineNumber":84,"author":{"gitId":"rjeez"},"content":""},{"lineNumber":85,"author":{"gitId":"rjeez"},"content":"\u003eAdded the following task:\u003cbr\u003e"},{"lineNumber":86,"author":{"gitId":"rjeez"},"content":"\u003e [D][X] wakeup 2020-01-01 1111"},{"lineNumber":87,"author":{"gitId":"rjeez"},"content":"\u003eYou now have 1 tasks in your list"},{"lineNumber":88,"author":{"gitId":"rjeez"},"content":""},{"lineNumber":89,"author":{"gitId":"rjeez"},"content":"### `delete` - deletes the selected task"},{"lineNumber":90,"author":{"gitId":"rjeez"},"content":""},{"lineNumber":91,"author":{"gitId":"rjeez"},"content":""},{"lineNumber":92,"author":{"gitId":"rjeez"},"content":"Example of usage: "},{"lineNumber":93,"author":{"gitId":"rjeez"},"content":""},{"lineNumber":94,"author":{"gitId":"rjeez"},"content":"`delete 1`"},{"lineNumber":95,"author":{"gitId":"rjeez"},"content":""},{"lineNumber":96,"author":{"gitId":"rjeez"},"content":"Expected outcome:"},{"lineNumber":97,"author":{"gitId":"rjeez"},"content":""},{"lineNumber":98,"author":{"gitId":"rjeez"},"content":"\u003eThe following task has been removed:\u003cbr\u003e"},{"lineNumber":99,"author":{"gitId":"rjeez"},"content":"\u003e [T][X] sample"},{"lineNumber":100,"author":{"gitId":"rjeez"},"content":"\u003eYou now have 0 tasks in your list"},{"lineNumber":101,"author":{"gitId":"rjeez"},"content":""},{"lineNumber":102,"author":{"gitId":"rjeez"},"content":"### `done` - make the selected task done"},{"lineNumber":103,"author":{"gitId":"-"},"content":""},{"lineNumber":104,"author":{"gitId":"-"},"content":"Describe action and its outcome."},{"lineNumber":105,"author":{"gitId":"-"},"content":""},{"lineNumber":106,"author":{"gitId":"-"},"content":"Example of usage: "},{"lineNumber":107,"author":{"gitId":"-"},"content":""},{"lineNumber":108,"author":{"gitId":"rjeez"},"content":"`done 1`"},{"lineNumber":109,"author":{"gitId":"rjeez"},"content":""},{"lineNumber":110,"author":{"gitId":"rjeez"},"content":"Expected outcome:"},{"lineNumber":111,"author":{"gitId":"rjeez"},"content":""},{"lineNumber":112,"author":{"gitId":"rjeez"},"content":"\u003eFollowing task has been marked done:\u003cbr\u003e"},{"lineNumber":113,"author":{"gitId":"rjeez"},"content":"\u003e[T][O] sample"},{"lineNumber":114,"author":{"gitId":"rjeez"},"content":""},{"lineNumber":115,"author":{"gitId":"rjeez"},"content":"### `find` - finds tasks that matches the string description"},{"lineNumber":116,"author":{"gitId":"rjeez"},"content":""},{"lineNumber":117,"author":{"gitId":"rjeez"},"content":""},{"lineNumber":118,"author":{"gitId":"rjeez"},"content":"Example of usage: "},{"lineNumber":119,"author":{"gitId":"rjeez"},"content":""},{"lineNumber":120,"author":{"gitId":"rjeez"},"content":"`find sample`"},{"lineNumber":121,"author":{"gitId":"-"},"content":""},{"lineNumber":122,"author":{"gitId":"-"},"content":"Expected outcome:"},{"lineNumber":123,"author":{"gitId":"-"},"content":""},{"lineNumber":124,"author":{"gitId":"rjeez"},"content":"\u003eHere are the tasks you asked for:\u003cbr\u003e"},{"lineNumber":125,"author":{"gitId":"rjeez"},"content":"\u003e1. [T][X] sample"},{"lineNumber":126,"author":{"gitId":"rjeez"},"content":""}],"authorContributionMap":{"rjeez":112,"-":14}},{"path":"gradlew.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"rjeez"},"content":"@rem"},{"lineNumber":2,"author":{"gitId":"rjeez"},"content":"@rem Copyright 2015 the original author or authors."},{"lineNumber":3,"author":{"gitId":"rjeez"},"content":"@rem"},{"lineNumber":4,"author":{"gitId":"rjeez"},"content":"@rem Licensed under the Apache License, Version 2.0 (the \"License\");"},{"lineNumber":5,"author":{"gitId":"rjeez"},"content":"@rem you may not use this file except in compliance with the License."},{"lineNumber":6,"author":{"gitId":"rjeez"},"content":"@rem You may obtain a copy of the License at"},{"lineNumber":7,"author":{"gitId":"rjeez"},"content":"@rem"},{"lineNumber":8,"author":{"gitId":"rjeez"},"content":"@rem      https://www.apache.org/licenses/LICENSE-2.0"},{"lineNumber":9,"author":{"gitId":"rjeez"},"content":"@rem"},{"lineNumber":10,"author":{"gitId":"rjeez"},"content":"@rem Unless required by applicable law or agreed to in writing, software"},{"lineNumber":11,"author":{"gitId":"rjeez"},"content":"@rem distributed under the License is distributed on an \"AS IS\" BASIS,"},{"lineNumber":12,"author":{"gitId":"rjeez"},"content":"@rem WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied."},{"lineNumber":13,"author":{"gitId":"rjeez"},"content":"@rem See the License for the specific language governing permissions and"},{"lineNumber":14,"author":{"gitId":"rjeez"},"content":"@rem limitations under the License."},{"lineNumber":15,"author":{"gitId":"rjeez"},"content":"@rem"},{"lineNumber":16,"author":{"gitId":"rjeez"},"content":""},{"lineNumber":17,"author":{"gitId":"rjeez"},"content":"@if \"%DEBUG%\" \u003d\u003d \"\" @echo off"},{"lineNumber":18,"author":{"gitId":"rjeez"},"content":"@rem ##########################################################################"},{"lineNumber":19,"author":{"gitId":"rjeez"},"content":"@rem"},{"lineNumber":20,"author":{"gitId":"rjeez"},"content":"@rem  Gradle startup script for Windows"},{"lineNumber":21,"author":{"gitId":"rjeez"},"content":"@rem"},{"lineNumber":22,"author":{"gitId":"rjeez"},"content":"@rem ##########################################################################"},{"lineNumber":23,"author":{"gitId":"rjeez"},"content":""},{"lineNumber":24,"author":{"gitId":"rjeez"},"content":"@rem Set local scope for the variables with windows NT shell"},{"lineNumber":25,"author":{"gitId":"rjeez"},"content":"if \"%OS%\"\u003d\u003d\"Windows_NT\" setlocal"},{"lineNumber":26,"author":{"gitId":"rjeez"},"content":""},{"lineNumber":27,"author":{"gitId":"rjeez"},"content":"set DIRNAME\u003d%~dp0"},{"lineNumber":28,"author":{"gitId":"rjeez"},"content":"if \"%DIRNAME%\" \u003d\u003d \"\" set DIRNAME\u003d."},{"lineNumber":29,"author":{"gitId":"rjeez"},"content":"set APP_BASE_NAME\u003d%~n0"},{"lineNumber":30,"author":{"gitId":"rjeez"},"content":"set APP_HOME\u003d%DIRNAME%"},{"lineNumber":31,"author":{"gitId":"rjeez"},"content":""},{"lineNumber":32,"author":{"gitId":"rjeez"},"content":"@rem Resolve any \".\" and \"..\" in APP_HOME to make it shorter."},{"lineNumber":33,"author":{"gitId":"rjeez"},"content":"for %%i in (\"%APP_HOME%\") do set APP_HOME\u003d%%~fi"},{"lineNumber":34,"author":{"gitId":"rjeez"},"content":""},{"lineNumber":35,"author":{"gitId":"rjeez"},"content":"@rem Add default JVM options here. You can also use JAVA_OPTS and GRADLE_OPTS to pass JVM options to this script."},{"lineNumber":36,"author":{"gitId":"rjeez"},"content":"set DEFAULT_JVM_OPTS\u003d\"-Xmx64m\" \"-Xms64m\""},{"lineNumber":37,"author":{"gitId":"rjeez"},"content":""},{"lineNumber":38,"author":{"gitId":"rjeez"},"content":"@rem Find java.exe"},{"lineNumber":39,"author":{"gitId":"rjeez"},"content":"if defined JAVA_HOME goto findJavaFromJavaHome"},{"lineNumber":40,"author":{"gitId":"rjeez"},"content":""},{"lineNumber":41,"author":{"gitId":"rjeez"},"content":"set JAVA_EXE\u003djava.exe"},{"lineNumber":42,"author":{"gitId":"rjeez"},"content":"%JAVA_EXE% -version \u003eNUL 2\u003e\u00261"},{"lineNumber":43,"author":{"gitId":"rjeez"},"content":"if \"%ERRORLEVEL%\" \u003d\u003d \"0\" goto init"},{"lineNumber":44,"author":{"gitId":"rjeez"},"content":""},{"lineNumber":45,"author":{"gitId":"rjeez"},"content":"echo."},{"lineNumber":46,"author":{"gitId":"rjeez"},"content":"echo ERROR: JAVA_HOME is not set and no \u0027java\u0027 command could be found in your PATH."},{"lineNumber":47,"author":{"gitId":"rjeez"},"content":"echo."},{"lineNumber":48,"author":{"gitId":"rjeez"},"content":"echo Please set the JAVA_HOME variable in your environment to match the"},{"lineNumber":49,"author":{"gitId":"rjeez"},"content":"echo location of your Java installation."},{"lineNumber":50,"author":{"gitId":"rjeez"},"content":""},{"lineNumber":51,"author":{"gitId":"rjeez"},"content":"goto fail"},{"lineNumber":52,"author":{"gitId":"rjeez"},"content":""},{"lineNumber":53,"author":{"gitId":"rjeez"},"content":":findJavaFromJavaHome"},{"lineNumber":54,"author":{"gitId":"rjeez"},"content":"set JAVA_HOME\u003d%JAVA_HOME:\"\u003d%"},{"lineNumber":55,"author":{"gitId":"rjeez"},"content":"set JAVA_EXE\u003d%JAVA_HOME%/bin/java.exe"},{"lineNumber":56,"author":{"gitId":"rjeez"},"content":""},{"lineNumber":57,"author":{"gitId":"rjeez"},"content":"if exist \"%JAVA_EXE%\" goto init"},{"lineNumber":58,"author":{"gitId":"rjeez"},"content":""},{"lineNumber":59,"author":{"gitId":"rjeez"},"content":"echo."},{"lineNumber":60,"author":{"gitId":"rjeez"},"content":"echo ERROR: JAVA_HOME is set to an invalid directory: %JAVA_HOME%"},{"lineNumber":61,"author":{"gitId":"rjeez"},"content":"echo."},{"lineNumber":62,"author":{"gitId":"rjeez"},"content":"echo Please set the JAVA_HOME variable in your environment to match the"},{"lineNumber":63,"author":{"gitId":"rjeez"},"content":"echo location of your Java installation."},{"lineNumber":64,"author":{"gitId":"rjeez"},"content":""},{"lineNumber":65,"author":{"gitId":"rjeez"},"content":"goto fail"},{"lineNumber":66,"author":{"gitId":"rjeez"},"content":""},{"lineNumber":67,"author":{"gitId":"rjeez"},"content":":init"},{"lineNumber":68,"author":{"gitId":"rjeez"},"content":"@rem Get command-line arguments, handling Windows variants"},{"lineNumber":69,"author":{"gitId":"rjeez"},"content":""},{"lineNumber":70,"author":{"gitId":"rjeez"},"content":"if not \"%OS%\" \u003d\u003d \"Windows_NT\" goto win9xME_args"},{"lineNumber":71,"author":{"gitId":"rjeez"},"content":""},{"lineNumber":72,"author":{"gitId":"rjeez"},"content":":win9xME_args"},{"lineNumber":73,"author":{"gitId":"rjeez"},"content":"@rem Slurp the command line arguments."},{"lineNumber":74,"author":{"gitId":"rjeez"},"content":"set CMD_LINE_ARGS\u003d"},{"lineNumber":75,"author":{"gitId":"rjeez"},"content":"set _SKIP\u003d2"},{"lineNumber":76,"author":{"gitId":"rjeez"},"content":""},{"lineNumber":77,"author":{"gitId":"rjeez"},"content":":win9xME_args_slurp"},{"lineNumber":78,"author":{"gitId":"rjeez"},"content":"if \"x%~1\" \u003d\u003d \"x\" goto execute"},{"lineNumber":79,"author":{"gitId":"rjeez"},"content":""},{"lineNumber":80,"author":{"gitId":"rjeez"},"content":"set CMD_LINE_ARGS\u003d%*"},{"lineNumber":81,"author":{"gitId":"rjeez"},"content":""},{"lineNumber":82,"author":{"gitId":"rjeez"},"content":":execute"},{"lineNumber":83,"author":{"gitId":"rjeez"},"content":"@rem Setup the command line"},{"lineNumber":84,"author":{"gitId":"rjeez"},"content":""},{"lineNumber":85,"author":{"gitId":"rjeez"},"content":"set CLASSPATH\u003d%APP_HOME%\\gradle\\wrapper\\gradle-wrapper.jar"},{"lineNumber":86,"author":{"gitId":"rjeez"},"content":""},{"lineNumber":87,"author":{"gitId":"rjeez"},"content":""},{"lineNumber":88,"author":{"gitId":"rjeez"},"content":"@rem Execute Gradle"},{"lineNumber":89,"author":{"gitId":"rjeez"},"content":"\"%JAVA_EXE%\" %DEFAULT_JVM_OPTS% %JAVA_OPTS% %GRADLE_OPTS% \"-Dorg.gradle.appname\u003d%APP_BASE_NAME%\" -classpath \"%CLASSPATH%\" org.gradle.wrapper.GradleWrapperMain %CMD_LINE_ARGS%"},{"lineNumber":90,"author":{"gitId":"rjeez"},"content":""},{"lineNumber":91,"author":{"gitId":"rjeez"},"content":":end"},{"lineNumber":92,"author":{"gitId":"rjeez"},"content":"@rem End local scope for the variables with windows NT shell"},{"lineNumber":93,"author":{"gitId":"rjeez"},"content":"if \"%ERRORLEVEL%\"\u003d\u003d\"0\" goto mainEnd"},{"lineNumber":94,"author":{"gitId":"rjeez"},"content":""},{"lineNumber":95,"author":{"gitId":"rjeez"},"content":":fail"},{"lineNumber":96,"author":{"gitId":"rjeez"},"content":"rem Set variable GRADLE_EXIT_CONSOLE if you need the _script_ return code instead of"},{"lineNumber":97,"author":{"gitId":"rjeez"},"content":"rem the _cmd.exe /c_ return code!"},{"lineNumber":98,"author":{"gitId":"rjeez"},"content":"if  not \"\" \u003d\u003d \"%GRADLE_EXIT_CONSOLE%\" exit 1"},{"lineNumber":99,"author":{"gitId":"rjeez"},"content":"exit /b 1"},{"lineNumber":100,"author":{"gitId":"rjeez"},"content":""},{"lineNumber":101,"author":{"gitId":"rjeez"},"content":":mainEnd"},{"lineNumber":102,"author":{"gitId":"rjeez"},"content":"if \"%OS%\"\u003d\u003d\"Windows_NT\" endlocal"},{"lineNumber":103,"author":{"gitId":"rjeez"},"content":""},{"lineNumber":104,"author":{"gitId":"rjeez"},"content":":omega"}],"authorContributionMap":{"rjeez":104}},{"path":"src/main/duke/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"rjeez"},"content":"package main.duke;"},{"lineNumber":2,"author":{"gitId":"rjeez"},"content":""},{"lineNumber":3,"author":{"gitId":"rjeez"},"content":"import main.duke.io.Storage;"},{"lineNumber":4,"author":{"gitId":"rjeez"},"content":"import main.duke.io.Parser;"},{"lineNumber":5,"author":{"gitId":"rjeez"},"content":"import main.duke.DukeList;"},{"lineNumber":6,"author":{"gitId":"rjeez"},"content":"import main.duke.command.ICommand;"},{"lineNumber":7,"author":{"gitId":"rjeez"},"content":"public class Duke {"},{"lineNumber":8,"author":{"gitId":"rjeez"},"content":"    private Storage storage;"},{"lineNumber":9,"author":{"gitId":"rjeez"},"content":"    private DukeList dukeList;"},{"lineNumber":10,"author":{"gitId":"rjeez"},"content":"    private Ui ui;"},{"lineNumber":11,"author":{"gitId":"rjeez"},"content":""},{"lineNumber":12,"author":{"gitId":"rjeez"},"content":"    /**"},{"lineNumber":13,"author":{"gitId":"rjeez"},"content":"     * Constructor for duke"},{"lineNumber":14,"author":{"gitId":"rjeez"},"content":"     * @param filePath contains file where the task list is being saved"},{"lineNumber":15,"author":{"gitId":"rjeez"},"content":"     */"},{"lineNumber":16,"author":{"gitId":"rjeez"},"content":"    public Duke(String filePath){"},{"lineNumber":17,"author":{"gitId":"rjeez"},"content":"        ui \u003d new  Ui();"},{"lineNumber":18,"author":{"gitId":"rjeez"},"content":"        storage \u003d new Storage(filePath);"},{"lineNumber":19,"author":{"gitId":"rjeez"},"content":"        dukeList \u003d storage.load();"},{"lineNumber":20,"author":{"gitId":"rjeez"},"content":"    }"},{"lineNumber":21,"author":{"gitId":"rjeez"},"content":""},{"lineNumber":22,"author":{"gitId":"rjeez"},"content":"    public String getReply (String input){"},{"lineNumber":23,"author":{"gitId":"rjeez"},"content":"        Parser parser \u003d new Parser();"},{"lineNumber":24,"author":{"gitId":"rjeez"},"content":"        try{"},{"lineNumber":25,"author":{"gitId":"rjeez"},"content":"            ICommand command \u003d parser.parse(input);"},{"lineNumber":26,"author":{"gitId":"rjeez"},"content":"            String reply \u003d command.run(ui,dukeList, storage);"},{"lineNumber":27,"author":{"gitId":"rjeez"},"content":"            storage.writeFile();"},{"lineNumber":28,"author":{"gitId":"rjeez"},"content":"            assert(reply!\u003dnull);"},{"lineNumber":29,"author":{"gitId":"rjeez"},"content":"            return reply;"},{"lineNumber":30,"author":{"gitId":"rjeez"},"content":"        }"},{"lineNumber":31,"author":{"gitId":"rjeez"},"content":"        catch (DukeException e)"},{"lineNumber":32,"author":{"gitId":"rjeez"},"content":"        {"},{"lineNumber":33,"author":{"gitId":"rjeez"},"content":"            return e.getMessage();"},{"lineNumber":34,"author":{"gitId":"rjeez"},"content":"        }"},{"lineNumber":35,"author":{"gitId":"rjeez"},"content":"    }"},{"lineNumber":36,"author":{"gitId":"rjeez"},"content":"}"}],"authorContributionMap":{"rjeez":36}},{"path":"src/main/duke/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"rjeez"},"content":"package main.duke;"},{"lineNumber":2,"author":{"gitId":"rjeez"},"content":""},{"lineNumber":3,"author":{"gitId":"rjeez"},"content":"public class DukeException extends Exception{"},{"lineNumber":4,"author":{"gitId":"rjeez"},"content":"    /**"},{"lineNumber":5,"author":{"gitId":"rjeez"},"content":"     *"},{"lineNumber":6,"author":{"gitId":"rjeez"},"content":"     * @param message Exception message being passed"},{"lineNumber":7,"author":{"gitId":"rjeez"},"content":"     */"},{"lineNumber":8,"author":{"gitId":"rjeez"},"content":"    public DukeException (String message){"},{"lineNumber":9,"author":{"gitId":"rjeez"},"content":"        super(message);"},{"lineNumber":10,"author":{"gitId":"rjeez"},"content":"    }"},{"lineNumber":11,"author":{"gitId":"rjeez"},"content":"}"}],"authorContributionMap":{"rjeez":11}},{"path":"src/main/duke/DukeList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"rjeez"},"content":"package main.duke;"},{"lineNumber":2,"author":{"gitId":"rjeez"},"content":""},{"lineNumber":3,"author":{"gitId":"rjeez"},"content":"import java.util.ArrayList;"},{"lineNumber":4,"author":{"gitId":"rjeez"},"content":"import java.util.List;"},{"lineNumber":5,"author":{"gitId":"rjeez"},"content":"import main.duke.tasktype.Task;"},{"lineNumber":6,"author":{"gitId":"rjeez"},"content":""},{"lineNumber":7,"author":{"gitId":"rjeez"},"content":"public class DukeList {"},{"lineNumber":8,"author":{"gitId":"rjeez"},"content":"    private List\u003cTask\u003e taskList;"},{"lineNumber":9,"author":{"gitId":"rjeez"},"content":""},{"lineNumber":10,"author":{"gitId":"rjeez"},"content":"    /**"},{"lineNumber":11,"author":{"gitId":"rjeez"},"content":"     * Constructor for Duke list"},{"lineNumber":12,"author":{"gitId":"rjeez"},"content":"     */"},{"lineNumber":13,"author":{"gitId":"rjeez"},"content":"    public DukeList(){"},{"lineNumber":14,"author":{"gitId":"rjeez"},"content":"        taskList \u003d new ArrayList\u003c\u003e();"},{"lineNumber":15,"author":{"gitId":"rjeez"},"content":"    }"},{"lineNumber":16,"author":{"gitId":"rjeez"},"content":""},{"lineNumber":17,"author":{"gitId":"rjeez"},"content":"    public DukeList(List\u003cTask\u003e taskList){"},{"lineNumber":18,"author":{"gitId":"rjeez"},"content":"        this.taskList \u003d taskList;"},{"lineNumber":19,"author":{"gitId":"rjeez"},"content":"    }"},{"lineNumber":20,"author":{"gitId":"rjeez"},"content":""},{"lineNumber":21,"author":{"gitId":"rjeez"},"content":"    public List\u003cTask\u003e getTaskList(){"},{"lineNumber":22,"author":{"gitId":"rjeez"},"content":"        return taskList;"},{"lineNumber":23,"author":{"gitId":"rjeez"},"content":"    }"},{"lineNumber":24,"author":{"gitId":"rjeez"},"content":""},{"lineNumber":25,"author":{"gitId":"rjeez"},"content":"}"}],"authorContributionMap":{"rjeez":25}},{"path":"src/main/duke/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"rjeez"},"content":"package main.duke;"},{"lineNumber":2,"author":{"gitId":"rjeez"},"content":"import java.time.LocalDateTime;"},{"lineNumber":3,"author":{"gitId":"rjeez"},"content":"import java.time.format.DateTimeFormatter;"},{"lineNumber":4,"author":{"gitId":"rjeez"},"content":"import java.util.List;"},{"lineNumber":5,"author":{"gitId":"rjeez"},"content":"import java.util.function.Predicate;"},{"lineNumber":6,"author":{"gitId":"rjeez"},"content":"import java.lang.StringBuffer;"},{"lineNumber":7,"author":{"gitId":"rjeez"},"content":"import main.duke.tasktype.Task;"},{"lineNumber":8,"author":{"gitId":"rjeez"},"content":""},{"lineNumber":9,"author":{"gitId":"rjeez"},"content":"public class Ui {"},{"lineNumber":10,"author":{"gitId":"rjeez"},"content":"    /**"},{"lineNumber":11,"author":{"gitId":"rjeez"},"content":"     * Done command in UI"},{"lineNumber":12,"author":{"gitId":"rjeez"},"content":"     * @param task the current task\u0027s status"},{"lineNumber":13,"author":{"gitId":"rjeez"},"content":"     * @return string including task name"},{"lineNumber":14,"author":{"gitId":"rjeez"},"content":"     */"},{"lineNumber":15,"author":{"gitId":"rjeez"},"content":"    public String makeDone(String task){"},{"lineNumber":16,"author":{"gitId":"rjeez"},"content":"        assert(task!\u003d null);"},{"lineNumber":17,"author":{"gitId":"rjeez"},"content":"        return String.format(\"Following task has been marked done: \\n\" + task);"},{"lineNumber":18,"author":{"gitId":"rjeez"},"content":"    }"},{"lineNumber":19,"author":{"gitId":"rjeez"},"content":""},{"lineNumber":20,"author":{"gitId":"rjeez"},"content":"    /**"},{"lineNumber":21,"author":{"gitId":"rjeez"},"content":"     * Show the added task"},{"lineNumber":22,"author":{"gitId":"rjeez"},"content":"     * @param task Status of the task being operated on"},{"lineNumber":23,"author":{"gitId":"rjeez"},"content":"     * @param taskList Collection of current list"},{"lineNumber":24,"author":{"gitId":"rjeez"},"content":"     * @return string including the added task name and total task number"},{"lineNumber":25,"author":{"gitId":"rjeez"},"content":"     */"},{"lineNumber":26,"author":{"gitId":"rjeez"},"content":"    public String showTaskAdded(String task , List\u003cTask\u003e taskList){"},{"lineNumber":27,"author":{"gitId":"rjeez"},"content":"        assert(task !\u003d null \u0026\u0026 taskList !\u003d null);"},{"lineNumber":28,"author":{"gitId":"rjeez"},"content":"        return String.format( \"Added the following task : \\n\" +"},{"lineNumber":29,"author":{"gitId":"rjeez"},"content":"                \"%s\\n\" + \"You now have %d tasks in your list.\\n\", task, taskList.size());"},{"lineNumber":30,"author":{"gitId":"rjeez"},"content":"    }"},{"lineNumber":31,"author":{"gitId":"rjeez"},"content":""},{"lineNumber":32,"author":{"gitId":"rjeez"},"content":"    /**"},{"lineNumber":33,"author":{"gitId":"rjeez"},"content":"     * Show the deleted task"},{"lineNumber":34,"author":{"gitId":"rjeez"},"content":"     * @param task Status of the task being operated on"},{"lineNumber":35,"author":{"gitId":"rjeez"},"content":"     * @param taskList Collection of current list"},{"lineNumber":36,"author":{"gitId":"rjeez"},"content":"     * @return string including the deleted task name and total task number"},{"lineNumber":37,"author":{"gitId":"rjeez"},"content":"     */"},{"lineNumber":38,"author":{"gitId":"rjeez"},"content":"    public String showTaskDeleted(String task , List\u003cTask\u003e taskList){"},{"lineNumber":39,"author":{"gitId":"rjeez"},"content":"        assert(task !\u003d null \u0026\u0026 taskList !\u003d null);"},{"lineNumber":40,"author":{"gitId":"rjeez"},"content":"        return String.format(\"The following task has been removed:\\n \" +"},{"lineNumber":41,"author":{"gitId":"rjeez"},"content":"                \"%s\\n\" + \" You now have %d tasks in your list.\\n\", task, taskList.size());"},{"lineNumber":42,"author":{"gitId":"rjeez"},"content":"    }"},{"lineNumber":43,"author":{"gitId":"rjeez"},"content":""},{"lineNumber":44,"author":{"gitId":"rjeez"},"content":"    /**"},{"lineNumber":45,"author":{"gitId":"rjeez"},"content":"     *"},{"lineNumber":46,"author":{"gitId":"rjeez"},"content":"     * @param taskList Collection of current list"},{"lineNumber":47,"author":{"gitId":"rjeez"},"content":"     * @return All of tasks in the tasklist"},{"lineNumber":48,"author":{"gitId":"rjeez"},"content":"     */"},{"lineNumber":49,"author":{"gitId":"rjeez"},"content":"    public String showList(List\u003cTask\u003e taskList){"},{"lineNumber":50,"author":{"gitId":"rjeez"},"content":"        assert(taskList !\u003d null);"},{"lineNumber":51,"author":{"gitId":"rjeez"},"content":"        int counter \u003d 1;"},{"lineNumber":52,"author":{"gitId":"rjeez"},"content":"        StringBuffer showList \u003d new StringBuffer();"},{"lineNumber":53,"author":{"gitId":"rjeez"},"content":"        showList.append(\" These are the tasks in your list:\\n\");"},{"lineNumber":54,"author":{"gitId":"rjeez"},"content":"        for (Task task : taskList){"},{"lineNumber":55,"author":{"gitId":"rjeez"},"content":"            showList.append(\" \" + counter + \". \" + task.getStatus() + \"\\n\");"},{"lineNumber":56,"author":{"gitId":"rjeez"},"content":"            counter++;"},{"lineNumber":57,"author":{"gitId":"rjeez"},"content":"        }"},{"lineNumber":58,"author":{"gitId":"rjeez"},"content":"        return showList.toString();"},{"lineNumber":59,"author":{"gitId":"rjeez"},"content":"    }"},{"lineNumber":60,"author":{"gitId":"rjeez"},"content":""},{"lineNumber":61,"author":{"gitId":"rjeez"},"content":"    /**"},{"lineNumber":62,"author":{"gitId":"rjeez"},"content":"     * Goodbye command in UI"},{"lineNumber":63,"author":{"gitId":"rjeez"},"content":"     *"},{"lineNumber":64,"author":{"gitId":"rjeez"},"content":"     */"},{"lineNumber":65,"author":{"gitId":"rjeez"},"content":"    public String sayGoodbye(){"},{"lineNumber":66,"author":{"gitId":"rjeez"},"content":"        return \"Goodbye!\";"},{"lineNumber":67,"author":{"gitId":"rjeez"},"content":"    }"},{"lineNumber":68,"author":{"gitId":"rjeez"},"content":""},{"lineNumber":69,"author":{"gitId":"rjeez"},"content":"    /**"},{"lineNumber":70,"author":{"gitId":"rjeez"},"content":"     * Help command in UI"},{"lineNumber":71,"author":{"gitId":"rjeez"},"content":"     *"},{"lineNumber":72,"author":{"gitId":"rjeez"},"content":"     */"},{"lineNumber":73,"author":{"gitId":"rjeez"},"content":"    public String giveHelp(){"},{"lineNumber":74,"author":{"gitId":"rjeez"},"content":"        String helpString \u003d \"Try one of these:\\n\""},{"lineNumber":75,"author":{"gitId":"rjeez"},"content":"                + \"list : prints you the list of store tasks\\n\""},{"lineNumber":76,"author":{"gitId":"rjeez"},"content":"                + \"bye : terminates the program\\n\""},{"lineNumber":77,"author":{"gitId":"rjeez"},"content":"                + \"todo [your task input] : adds a todo type task\\n\""},{"lineNumber":78,"author":{"gitId":"rjeez"},"content":"                + \"event [your task input] /at [YYYY-MM-DD hhmm]: adds an event type task\\n\""},{"lineNumber":79,"author":{"gitId":"rjeez"},"content":"                + \"deadline [your task input] /by [YYYY-MM-DD hhmm]: adds a deadline type task\\n\""},{"lineNumber":80,"author":{"gitId":"rjeez"},"content":"                + \"delete[number] : deletes the selected task\\n\""},{"lineNumber":81,"author":{"gitId":"rjeez"},"content":"                + \"done[number] : mark the selected task as done(notation will be 0 for done and X for not done)\\n\""},{"lineNumber":82,"author":{"gitId":"rjeez"},"content":"                + \"find [search string] : finds tasks that matches the string description\\n\""},{"lineNumber":83,"author":{"gitId":"rjeez"},"content":"                + \"\\nExamples\\n\""},{"lineNumber":84,"author":{"gitId":"rjeez"},"content":"                + \"todo sleep : adds a todo type task of description sleep\\n\""},{"lineNumber":85,"author":{"gitId":"rjeez"},"content":"                + \"event toSleep /at 2020-01-01 0000 : adds an event type task of description toSleep \" +"},{"lineNumber":86,"author":{"gitId":"rjeez"},"content":"                \"with dateTime 2020-01-01 0000\\n\""},{"lineNumber":87,"author":{"gitId":"rjeez"},"content":"                + \"deadline wakeup /by 2020-01-01 0001 : adds a deadline type task of description wakeup \" +"},{"lineNumber":88,"author":{"gitId":"rjeez"},"content":"                \"with dateTime 2020-01-01 0001\\n\""},{"lineNumber":89,"author":{"gitId":"rjeez"},"content":"                + \"delete[1] : deletes the task with index 1 (will only work if the task with your index exists\\n\""},{"lineNumber":90,"author":{"gitId":"rjeez"},"content":"                + \"done[1] : marks the task with index 1 to done\\n\""},{"lineNumber":91,"author":{"gitId":"rjeez"},"content":"                + \"find[sleep] : finds task descriptions that starts with sleep\\n\""},{"lineNumber":92,"author":{"gitId":"rjeez"},"content":"                + \"[IMPORTANT] Note that the number inputted for done and delete should be equals to or \" +"},{"lineNumber":93,"author":{"gitId":"rjeez"},"content":"                \"less than the total number of tasks in your list!\";"},{"lineNumber":94,"author":{"gitId":"rjeez"},"content":"        return helpString;"},{"lineNumber":95,"author":{"gitId":"rjeez"},"content":"    }"},{"lineNumber":96,"author":{"gitId":"rjeez"},"content":""},{"lineNumber":97,"author":{"gitId":"rjeez"},"content":"    /**"},{"lineNumber":98,"author":{"gitId":"rjeez"},"content":"     * Show list of tasks with given keyword"},{"lineNumber":99,"author":{"gitId":"rjeez"},"content":"     * @param input Keyword used for find command"},{"lineNumber":100,"author":{"gitId":"rjeez"},"content":"     * @param taskList Collection of current list"},{"lineNumber":101,"author":{"gitId":"rjeez"},"content":"     * @throws DukeException Throws exception if search string is empty"},{"lineNumber":102,"author":{"gitId":"rjeez"},"content":"     */"},{"lineNumber":103,"author":{"gitId":"rjeez"},"content":"    public String showTasks(String input, List\u003cTask\u003e taskList) throws DukeException{"},{"lineNumber":104,"author":{"gitId":"rjeez"},"content":"        assert (input !\u003d null \u0026\u0026 taskList !\u003d null);"},{"lineNumber":105,"author":{"gitId":"rjeez"},"content":"        if(input.length() \u003c\u003d \"find \".length()){"},{"lineNumber":106,"author":{"gitId":"rjeez"},"content":"            throw new DukeException(\"Please add what you want to find.\");"},{"lineNumber":107,"author":{"gitId":"rjeez"},"content":"        }"},{"lineNumber":108,"author":{"gitId":"rjeez"},"content":"        String find \u003d input.substring(\"find \".length());"},{"lineNumber":109,"author":{"gitId":"rjeez"},"content":""},{"lineNumber":110,"author":{"gitId":"rjeez"},"content":"        if (find.trim().equals(\"\")){"},{"lineNumber":111,"author":{"gitId":"rjeez"},"content":"            throw new DukeException(\"Search string is empty\");"},{"lineNumber":112,"author":{"gitId":"rjeez"},"content":"        }"},{"lineNumber":113,"author":{"gitId":"rjeez"},"content":"        Predicate\u003cString\u003e stringPredicate \u003d x -\u003e x.contains(find);"},{"lineNumber":114,"author":{"gitId":"rjeez"},"content":"        StringBuffer tasks \u003d new StringBuffer();"},{"lineNumber":115,"author":{"gitId":"rjeez"},"content":"        tasks.append(\"Here are the tasks you asked for: \\n\");"},{"lineNumber":116,"author":{"gitId":"rjeez"},"content":"        int counter \u003d1;"},{"lineNumber":117,"author":{"gitId":"rjeez"},"content":"        for(Task t : taskList){"},{"lineNumber":118,"author":{"gitId":"rjeez"},"content":"            if(t.getName() !\u003d null \u0026\u0026 stringPredicate.test(t.getName())){"},{"lineNumber":119,"author":{"gitId":"rjeez"},"content":"                tasks.append(counter + \". \" + t.getStatus() + \"\\n\");"},{"lineNumber":120,"author":{"gitId":"rjeez"},"content":"                counter++;"},{"lineNumber":121,"author":{"gitId":"rjeez"},"content":"            }"},{"lineNumber":122,"author":{"gitId":"rjeez"},"content":"        }"},{"lineNumber":123,"author":{"gitId":"rjeez"},"content":"        return tasks.toString();"},{"lineNumber":124,"author":{"gitId":"rjeez"},"content":"    }"},{"lineNumber":125,"author":{"gitId":"rjeez"},"content":""},{"lineNumber":126,"author":{"gitId":"rjeez"},"content":"}"}],"authorContributionMap":{"rjeez":126}},{"path":"src/main/duke/command/CBye.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"rjeez"},"content":"package main.duke.command;"},{"lineNumber":2,"author":{"gitId":"rjeez"},"content":""},{"lineNumber":3,"author":{"gitId":"rjeez"},"content":"import main.duke.DukeList;"},{"lineNumber":4,"author":{"gitId":"rjeez"},"content":"import main.duke.Ui;"},{"lineNumber":5,"author":{"gitId":"rjeez"},"content":"import main.duke.io.Storage;"},{"lineNumber":6,"author":{"gitId":"rjeez"},"content":""},{"lineNumber":7,"author":{"gitId":"rjeez"},"content":"public class CBye implements ICommand {"},{"lineNumber":8,"author":{"gitId":"rjeez"},"content":"    /**"},{"lineNumber":9,"author":{"gitId":"rjeez"},"content":"     * Check if it is the bye command"},{"lineNumber":10,"author":{"gitId":"rjeez"},"content":"     * @return true as it is the bye command"},{"lineNumber":11,"author":{"gitId":"rjeez"},"content":"     */"},{"lineNumber":12,"author":{"gitId":"rjeez"},"content":"    @Override"},{"lineNumber":13,"author":{"gitId":"rjeez"},"content":"    public boolean isBye() {"},{"lineNumber":14,"author":{"gitId":"rjeez"},"content":"        return true;"},{"lineNumber":15,"author":{"gitId":"rjeez"},"content":"    }"},{"lineNumber":16,"author":{"gitId":"rjeez"},"content":""},{"lineNumber":17,"author":{"gitId":"rjeez"},"content":"    /**"},{"lineNumber":18,"author":{"gitId":"rjeez"},"content":"     *"},{"lineNumber":19,"author":{"gitId":"rjeez"},"content":"     * @param ui UI object that deal with the program output"},{"lineNumber":20,"author":{"gitId":"rjeez"},"content":"     * @param dukeList Collection of tasks in list form"},{"lineNumber":21,"author":{"gitId":"rjeez"},"content":"     * @param storage Storage object that deal with the file system"},{"lineNumber":22,"author":{"gitId":"rjeez"},"content":"     */"},{"lineNumber":23,"author":{"gitId":"rjeez"},"content":"    @Override"},{"lineNumber":24,"author":{"gitId":"rjeez"},"content":"    public String run(Ui ui, DukeList dukeList, Storage storage) {"},{"lineNumber":25,"author":{"gitId":"rjeez"},"content":"        return ui.sayGoodbye();"},{"lineNumber":26,"author":{"gitId":"rjeez"},"content":"    }"},{"lineNumber":27,"author":{"gitId":"rjeez"},"content":"}"}],"authorContributionMap":{"rjeez":27}},{"path":"src/main/duke/command/CDeadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"rjeez"},"content":"package main.duke.command;"},{"lineNumber":2,"author":{"gitId":"rjeez"},"content":"import java.util.List;"},{"lineNumber":3,"author":{"gitId":"rjeez"},"content":"import main.duke.DukeException;"},{"lineNumber":4,"author":{"gitId":"rjeez"},"content":"import main.duke.DukeList;"},{"lineNumber":5,"author":{"gitId":"rjeez"},"content":"import main.duke.Ui;"},{"lineNumber":6,"author":{"gitId":"rjeez"},"content":"import main.duke.io.Storage;"},{"lineNumber":7,"author":{"gitId":"rjeez"},"content":"import main.duke.tasktype.Task;"},{"lineNumber":8,"author":{"gitId":"rjeez"},"content":"import main.duke.tasktype.Deadline;"},{"lineNumber":9,"author":{"gitId":"rjeez"},"content":"public class CDeadline implements ICommand {"},{"lineNumber":10,"author":{"gitId":"rjeez"},"content":"    private String input;"},{"lineNumber":11,"author":{"gitId":"rjeez"},"content":"    public CDeadline(String command){"},{"lineNumber":12,"author":{"gitId":"rjeez"},"content":"        this.input \u003d command;"},{"lineNumber":13,"author":{"gitId":"rjeez"},"content":"    }"},{"lineNumber":14,"author":{"gitId":"rjeez"},"content":""},{"lineNumber":15,"author":{"gitId":"rjeez"},"content":"    /**"},{"lineNumber":16,"author":{"gitId":"rjeez"},"content":"     * Check if it is the bye command"},{"lineNumber":17,"author":{"gitId":"rjeez"},"content":"     * @return false as it is not the bye command"},{"lineNumber":18,"author":{"gitId":"rjeez"},"content":"     */"},{"lineNumber":19,"author":{"gitId":"rjeez"},"content":"    @Override"},{"lineNumber":20,"author":{"gitId":"rjeez"},"content":"    public boolean isBye() {"},{"lineNumber":21,"author":{"gitId":"rjeez"},"content":"        return false;"},{"lineNumber":22,"author":{"gitId":"rjeez"},"content":"    }"},{"lineNumber":23,"author":{"gitId":"rjeez"},"content":"    /**"},{"lineNumber":24,"author":{"gitId":"rjeez"},"content":"     *"},{"lineNumber":25,"author":{"gitId":"rjeez"},"content":"     * @param ui UI object that deal with the program output"},{"lineNumber":26,"author":{"gitId":"rjeez"},"content":"     * @param dukeList Collection of tasks in list form"},{"lineNumber":27,"author":{"gitId":"rjeez"},"content":"     * @param storage Storage object that deal with the file system"},{"lineNumber":28,"author":{"gitId":"rjeez"},"content":"     */"},{"lineNumber":29,"author":{"gitId":"rjeez"},"content":"    @Override"},{"lineNumber":30,"author":{"gitId":"rjeez"},"content":"    public String run(Ui ui, DukeList dukeList, Storage storage) throws DukeException{"},{"lineNumber":31,"author":{"gitId":"rjeez"},"content":"        List\u003cTask\u003e taskList \u003d dukeList.getTaskList();"},{"lineNumber":32,"author":{"gitId":"rjeez"},"content":"        int endPoint \u003d input.indexOf(\"/\") - 1;"},{"lineNumber":33,"author":{"gitId":"rjeez"},"content":"        String text \u003d input.substring(\"deadline\".length() + 1, endPoint);"},{"lineNumber":34,"author":{"gitId":"rjeez"},"content":"        String dateTime \u003d input.substring(endPoint + 5);"},{"lineNumber":35,"author":{"gitId":"rjeez"},"content":"        Task deadline \u003d new Deadline(text, dateTime);"},{"lineNumber":36,"author":{"gitId":"rjeez"},"content":"        taskList.add(deadline);"},{"lineNumber":37,"author":{"gitId":"rjeez"},"content":""},{"lineNumber":38,"author":{"gitId":"rjeez"},"content":"        storage.addText(deadline.convertToFile());"},{"lineNumber":39,"author":{"gitId":"rjeez"},"content":"        return ui.showTaskAdded(deadline.getStatus(), taskList);"},{"lineNumber":40,"author":{"gitId":"rjeez"},"content":""},{"lineNumber":41,"author":{"gitId":"rjeez"},"content":"    }"},{"lineNumber":42,"author":{"gitId":"rjeez"},"content":""},{"lineNumber":43,"author":{"gitId":"rjeez"},"content":""},{"lineNumber":44,"author":{"gitId":"rjeez"},"content":"}"}],"authorContributionMap":{"rjeez":44}},{"path":"src/main/duke/command/CDelete.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"rjeez"},"content":"package main.duke.command;"},{"lineNumber":2,"author":{"gitId":"rjeez"},"content":""},{"lineNumber":3,"author":{"gitId":"rjeez"},"content":"import main.duke.DukeException;"},{"lineNumber":4,"author":{"gitId":"rjeez"},"content":"import main.duke.DukeList;"},{"lineNumber":5,"author":{"gitId":"rjeez"},"content":"import main.duke.Ui;"},{"lineNumber":6,"author":{"gitId":"rjeez"},"content":"import main.duke.io.Storage;"},{"lineNumber":7,"author":{"gitId":"rjeez"},"content":"import main.duke.tasktype.Task;"},{"lineNumber":8,"author":{"gitId":"rjeez"},"content":"import java.util.List;"},{"lineNumber":9,"author":{"gitId":"rjeez"},"content":""},{"lineNumber":10,"author":{"gitId":"rjeez"},"content":"public class CDelete implements ICommand {"},{"lineNumber":11,"author":{"gitId":"rjeez"},"content":"    private String input;"},{"lineNumber":12,"author":{"gitId":"rjeez"},"content":"    public CDelete(String command){"},{"lineNumber":13,"author":{"gitId":"rjeez"},"content":"        this.input \u003d command;"},{"lineNumber":14,"author":{"gitId":"rjeez"},"content":"    }"},{"lineNumber":15,"author":{"gitId":"rjeez"},"content":"    /**"},{"lineNumber":16,"author":{"gitId":"rjeez"},"content":"     * Check if it is the bye command"},{"lineNumber":17,"author":{"gitId":"rjeez"},"content":"     * @return false as it is not the bye command"},{"lineNumber":18,"author":{"gitId":"rjeez"},"content":"     */"},{"lineNumber":19,"author":{"gitId":"rjeez"},"content":"    @Override"},{"lineNumber":20,"author":{"gitId":"rjeez"},"content":"    public boolean isBye() {"},{"lineNumber":21,"author":{"gitId":"rjeez"},"content":"        return false;"},{"lineNumber":22,"author":{"gitId":"rjeez"},"content":"    }"},{"lineNumber":23,"author":{"gitId":"rjeez"},"content":"    /**"},{"lineNumber":24,"author":{"gitId":"rjeez"},"content":"     *"},{"lineNumber":25,"author":{"gitId":"rjeez"},"content":"     * @param ui UI object that deal with the program output"},{"lineNumber":26,"author":{"gitId":"rjeez"},"content":"     * @param dukeList Collection of tasks in list form"},{"lineNumber":27,"author":{"gitId":"rjeez"},"content":"     * @param storage Storage object that deal with the file system"},{"lineNumber":28,"author":{"gitId":"rjeez"},"content":"     */"},{"lineNumber":29,"author":{"gitId":"rjeez"},"content":"    @Override"},{"lineNumber":30,"author":{"gitId":"rjeez"},"content":"    public String run(Ui ui, DukeList dukeList, Storage storage) throws DukeException{"},{"lineNumber":31,"author":{"gitId":"rjeez"},"content":"        List\u003cTask\u003e taskList \u003d dukeList.getTaskList();"},{"lineNumber":32,"author":{"gitId":"rjeez"},"content":"        int index \u003d Integer.parseInt(input.substring(7)) -1;"},{"lineNumber":33,"author":{"gitId":"rjeez"},"content":"        if(index+1 \u003d\u003d 0 || index\u003e\u003d taskList.size() +1){"},{"lineNumber":34,"author":{"gitId":"rjeez"},"content":"            throw new DukeException(\"This task does not exist\");"},{"lineNumber":35,"author":{"gitId":"rjeez"},"content":"        }"},{"lineNumber":36,"author":{"gitId":"rjeez"},"content":"        Task removedTask \u003d taskList.remove(index);"},{"lineNumber":37,"author":{"gitId":"rjeez"},"content":"        storage.removeTask(removedTask.convertToFile());"},{"lineNumber":38,"author":{"gitId":"rjeez"},"content":"        return ui.showTaskDeleted(removedTask.getStatus(), taskList);"},{"lineNumber":39,"author":{"gitId":"rjeez"},"content":""},{"lineNumber":40,"author":{"gitId":"rjeez"},"content":"    }"},{"lineNumber":41,"author":{"gitId":"rjeez"},"content":""},{"lineNumber":42,"author":{"gitId":"rjeez"},"content":""},{"lineNumber":43,"author":{"gitId":"rjeez"},"content":"}"}],"authorContributionMap":{"rjeez":43}},{"path":"src/main/duke/command/CDone.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"rjeez"},"content":"package main.duke.command;"},{"lineNumber":2,"author":{"gitId":"rjeez"},"content":"import java.util.List;"},{"lineNumber":3,"author":{"gitId":"rjeez"},"content":"import main.duke.DukeException;"},{"lineNumber":4,"author":{"gitId":"rjeez"},"content":"import main.duke.DukeList;"},{"lineNumber":5,"author":{"gitId":"rjeez"},"content":"import main.duke.Ui;"},{"lineNumber":6,"author":{"gitId":"rjeez"},"content":"import main.duke.io.Storage;"},{"lineNumber":7,"author":{"gitId":"rjeez"},"content":"import main.duke.tasktype.Task;"},{"lineNumber":8,"author":{"gitId":"rjeez"},"content":"public class CDone implements ICommand{"},{"lineNumber":9,"author":{"gitId":"rjeez"},"content":"    private String input;"},{"lineNumber":10,"author":{"gitId":"rjeez"},"content":"    public CDone(String command){"},{"lineNumber":11,"author":{"gitId":"rjeez"},"content":"        this.input \u003d command;"},{"lineNumber":12,"author":{"gitId":"rjeez"},"content":"    }"},{"lineNumber":13,"author":{"gitId":"rjeez"},"content":"    /**"},{"lineNumber":14,"author":{"gitId":"rjeez"},"content":"     * Check if it is the bye command"},{"lineNumber":15,"author":{"gitId":"rjeez"},"content":"     * @return false as it is not the bye command"},{"lineNumber":16,"author":{"gitId":"rjeez"},"content":"     */"},{"lineNumber":17,"author":{"gitId":"rjeez"},"content":""},{"lineNumber":18,"author":{"gitId":"rjeez"},"content":"    @Override"},{"lineNumber":19,"author":{"gitId":"rjeez"},"content":"    public boolean isBye() {"},{"lineNumber":20,"author":{"gitId":"rjeez"},"content":"        return false;"},{"lineNumber":21,"author":{"gitId":"rjeez"},"content":"    }"},{"lineNumber":22,"author":{"gitId":"rjeez"},"content":"    /**"},{"lineNumber":23,"author":{"gitId":"rjeez"},"content":"     *"},{"lineNumber":24,"author":{"gitId":"rjeez"},"content":"     * @param ui UI object that deal with the program output"},{"lineNumber":25,"author":{"gitId":"rjeez"},"content":"     * @param dukeList Collection of tasks in list form"},{"lineNumber":26,"author":{"gitId":"rjeez"},"content":"     * @param storage Storage object that deal with the file system"},{"lineNumber":27,"author":{"gitId":"rjeez"},"content":"     */"},{"lineNumber":28,"author":{"gitId":"rjeez"},"content":"    @Override"},{"lineNumber":29,"author":{"gitId":"rjeez"},"content":"    public String run(Ui ui, DukeList dukeList, Storage storage) throws DukeException {"},{"lineNumber":30,"author":{"gitId":"rjeez"},"content":"        List\u003cTask\u003e taskList \u003d dukeList.getTaskList();"},{"lineNumber":31,"author":{"gitId":"rjeez"},"content":"        int index \u003d Integer.parseInt(input.substring(5))-1;"},{"lineNumber":32,"author":{"gitId":"rjeez"},"content":"        Task task \u003d taskList.get(index);"},{"lineNumber":33,"author":{"gitId":"rjeez"},"content":"        if(task \u003d\u003d null){"},{"lineNumber":34,"author":{"gitId":"rjeez"},"content":"            throw new DukeException(\"No such task\");"},{"lineNumber":35,"author":{"gitId":"rjeez"},"content":"        }"},{"lineNumber":36,"author":{"gitId":"rjeez"},"content":"        String oldLine \u003d task.convertToFile();"},{"lineNumber":37,"author":{"gitId":"rjeez"},"content":"        task.setDone();"},{"lineNumber":38,"author":{"gitId":"rjeez"},"content":"        String newLine \u003d task.convertToFile();"},{"lineNumber":39,"author":{"gitId":"rjeez"},"content":"        try{"},{"lineNumber":40,"author":{"gitId":"rjeez"},"content":"            storage.changeText(oldLine,newLine);"},{"lineNumber":41,"author":{"gitId":"rjeez"},"content":"        }"},{"lineNumber":42,"author":{"gitId":"rjeez"},"content":"        catch (StringIndexOutOfBoundsException e){"},{"lineNumber":43,"author":{"gitId":"rjeez"},"content":"            System.out.println(\"Line to replace cannot be found\" + e.getMessage());"},{"lineNumber":44,"author":{"gitId":"rjeez"},"content":"        }catch (NumberFormatException e){"},{"lineNumber":45,"author":{"gitId":"rjeez"},"content":"            System.out.println(\"You have an illegal character\" + e.getMessage());"},{"lineNumber":46,"author":{"gitId":"rjeez"},"content":"        }"},{"lineNumber":47,"author":{"gitId":"rjeez"},"content":"        return ui.makeDone(task.getStatus());"},{"lineNumber":48,"author":{"gitId":"rjeez"},"content":"    }"},{"lineNumber":49,"author":{"gitId":"rjeez"},"content":"}"}],"authorContributionMap":{"rjeez":49}},{"path":"src/main/duke/command/CEvent.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"rjeez"},"content":"package main.duke.command;"},{"lineNumber":2,"author":{"gitId":"rjeez"},"content":""},{"lineNumber":3,"author":{"gitId":"rjeez"},"content":"import main.duke.DukeException;"},{"lineNumber":4,"author":{"gitId":"rjeez"},"content":"import main.duke.DukeList;"},{"lineNumber":5,"author":{"gitId":"rjeez"},"content":"import main.duke.Ui;"},{"lineNumber":6,"author":{"gitId":"rjeez"},"content":"import main.duke.io.Storage;"},{"lineNumber":7,"author":{"gitId":"rjeez"},"content":"import main.duke.tasktype.Event;"},{"lineNumber":8,"author":{"gitId":"rjeez"},"content":"import main.duke.tasktype.Task;"},{"lineNumber":9,"author":{"gitId":"rjeez"},"content":"import java.util.List;"},{"lineNumber":10,"author":{"gitId":"rjeez"},"content":""},{"lineNumber":11,"author":{"gitId":"rjeez"},"content":"public class CEvent implements ICommand {"},{"lineNumber":12,"author":{"gitId":"rjeez"},"content":"    private String input;"},{"lineNumber":13,"author":{"gitId":"rjeez"},"content":"    public CEvent(String command){"},{"lineNumber":14,"author":{"gitId":"rjeez"},"content":"        this.input \u003d command;"},{"lineNumber":15,"author":{"gitId":"rjeez"},"content":"    }"},{"lineNumber":16,"author":{"gitId":"rjeez"},"content":"    /**"},{"lineNumber":17,"author":{"gitId":"rjeez"},"content":"     * Check if it is the bye command"},{"lineNumber":18,"author":{"gitId":"rjeez"},"content":"     * @return false as it is not the bye command"},{"lineNumber":19,"author":{"gitId":"rjeez"},"content":"     */"},{"lineNumber":20,"author":{"gitId":"rjeez"},"content":"    @Override"},{"lineNumber":21,"author":{"gitId":"rjeez"},"content":"    public boolean isBye() {"},{"lineNumber":22,"author":{"gitId":"rjeez"},"content":"        return false;"},{"lineNumber":23,"author":{"gitId":"rjeez"},"content":"    }"},{"lineNumber":24,"author":{"gitId":"rjeez"},"content":"    /**"},{"lineNumber":25,"author":{"gitId":"rjeez"},"content":"     *"},{"lineNumber":26,"author":{"gitId":"rjeez"},"content":"     * @param ui UI object that deal with the program output"},{"lineNumber":27,"author":{"gitId":"rjeez"},"content":"     * @param dukeList Collection of tasks in list form"},{"lineNumber":28,"author":{"gitId":"rjeez"},"content":"     * @param storage Storage object that deal with the file system"},{"lineNumber":29,"author":{"gitId":"rjeez"},"content":"     */"},{"lineNumber":30,"author":{"gitId":"rjeez"},"content":"    @Override"},{"lineNumber":31,"author":{"gitId":"rjeez"},"content":"    public String run(Ui ui, DukeList dukeList, Storage storage) throws DukeException {"},{"lineNumber":32,"author":{"gitId":"rjeez"},"content":"        List\u003cTask\u003e taskList \u003d dukeList.getTaskList();"},{"lineNumber":33,"author":{"gitId":"rjeez"},"content":"        int endPoint \u003d input.indexOf(\"/\") - 1;"},{"lineNumber":34,"author":{"gitId":"rjeez"},"content":"        String text \u003d input.substring(\"event\".length() + 1, endPoint);"},{"lineNumber":35,"author":{"gitId":"rjeez"},"content":"        String dateTime \u003d input.substring(endPoint + 5);"},{"lineNumber":36,"author":{"gitId":"rjeez"},"content":"        Task event \u003d new Event(text, dateTime);"},{"lineNumber":37,"author":{"gitId":"rjeez"},"content":"        taskList.add(event);"},{"lineNumber":38,"author":{"gitId":"rjeez"},"content":""},{"lineNumber":39,"author":{"gitId":"rjeez"},"content":"        storage.addText(event.convertToFile());"},{"lineNumber":40,"author":{"gitId":"rjeez"},"content":"        return ui.showTaskAdded(event.getStatus(), taskList);"},{"lineNumber":41,"author":{"gitId":"rjeez"},"content":"    }"},{"lineNumber":42,"author":{"gitId":"rjeez"},"content":"}"}],"authorContributionMap":{"rjeez":42}},{"path":"src/main/duke/command/CFind.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"rjeez"},"content":"package main.duke.command;"},{"lineNumber":2,"author":{"gitId":"rjeez"},"content":""},{"lineNumber":3,"author":{"gitId":"rjeez"},"content":"import main.duke.DukeException;"},{"lineNumber":4,"author":{"gitId":"rjeez"},"content":"import main.duke.DukeList;"},{"lineNumber":5,"author":{"gitId":"rjeez"},"content":"import main.duke.Ui;"},{"lineNumber":6,"author":{"gitId":"rjeez"},"content":"import main.duke.io.Storage;"},{"lineNumber":7,"author":{"gitId":"rjeez"},"content":"import main.duke.tasktype.Task;"},{"lineNumber":8,"author":{"gitId":"rjeez"},"content":"import java.util.List;"},{"lineNumber":9,"author":{"gitId":"rjeez"},"content":""},{"lineNumber":10,"author":{"gitId":"rjeez"},"content":"public class CFind implements ICommand{"},{"lineNumber":11,"author":{"gitId":"rjeez"},"content":"    private String input;"},{"lineNumber":12,"author":{"gitId":"rjeez"},"content":"    public CFind(String command){"},{"lineNumber":13,"author":{"gitId":"rjeez"},"content":"        this.input \u003d command;"},{"lineNumber":14,"author":{"gitId":"rjeez"},"content":"    }"},{"lineNumber":15,"author":{"gitId":"rjeez"},"content":"    /**"},{"lineNumber":16,"author":{"gitId":"rjeez"},"content":"     * Check if it is the bye command"},{"lineNumber":17,"author":{"gitId":"rjeez"},"content":"     * @return false as it is not the bye command"},{"lineNumber":18,"author":{"gitId":"rjeez"},"content":"     */"},{"lineNumber":19,"author":{"gitId":"rjeez"},"content":""},{"lineNumber":20,"author":{"gitId":"rjeez"},"content":"    @Override"},{"lineNumber":21,"author":{"gitId":"rjeez"},"content":"    public boolean isBye() {"},{"lineNumber":22,"author":{"gitId":"rjeez"},"content":"        return false;"},{"lineNumber":23,"author":{"gitId":"rjeez"},"content":"    }"},{"lineNumber":24,"author":{"gitId":"rjeez"},"content":"    /**"},{"lineNumber":25,"author":{"gitId":"rjeez"},"content":"     *"},{"lineNumber":26,"author":{"gitId":"rjeez"},"content":"     * @param ui UI object that deal with the program output"},{"lineNumber":27,"author":{"gitId":"rjeez"},"content":"     * @param dukeList Collection of tasks in list form"},{"lineNumber":28,"author":{"gitId":"rjeez"},"content":"     * @param storage Storage object that deal with the file system"},{"lineNumber":29,"author":{"gitId":"rjeez"},"content":"     */"},{"lineNumber":30,"author":{"gitId":"rjeez"},"content":"    @Override"},{"lineNumber":31,"author":{"gitId":"rjeez"},"content":"    public String run(Ui ui, DukeList dukeList, Storage storage) throws DukeException {"},{"lineNumber":32,"author":{"gitId":"rjeez"},"content":"        List\u003cTask\u003e taskList \u003d dukeList.getTaskList();"},{"lineNumber":33,"author":{"gitId":"rjeez"},"content":"        return ui.showTasks(input,taskList);"},{"lineNumber":34,"author":{"gitId":"rjeez"},"content":"    }"},{"lineNumber":35,"author":{"gitId":"rjeez"},"content":"}"}],"authorContributionMap":{"rjeez":35}},{"path":"src/main/duke/command/CHelp.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"rjeez"},"content":"package main.duke.command;"},{"lineNumber":2,"author":{"gitId":"rjeez"},"content":"import main.duke.DukeList;"},{"lineNumber":3,"author":{"gitId":"rjeez"},"content":"import main.duke.Ui;"},{"lineNumber":4,"author":{"gitId":"rjeez"},"content":"import main.duke.io.Storage;"},{"lineNumber":5,"author":{"gitId":"rjeez"},"content":"public class CHelp implements ICommand{"},{"lineNumber":6,"author":{"gitId":"rjeez"},"content":"    /**"},{"lineNumber":7,"author":{"gitId":"rjeez"},"content":"     * Check if it is the bye command"},{"lineNumber":8,"author":{"gitId":"rjeez"},"content":"     * @return false as it is not the bye command"},{"lineNumber":9,"author":{"gitId":"rjeez"},"content":"     */"},{"lineNumber":10,"author":{"gitId":"rjeez"},"content":"    @Override"},{"lineNumber":11,"author":{"gitId":"rjeez"},"content":"    public boolean isBye() {"},{"lineNumber":12,"author":{"gitId":"rjeez"},"content":"        return false;"},{"lineNumber":13,"author":{"gitId":"rjeez"},"content":"    }"},{"lineNumber":14,"author":{"gitId":"rjeez"},"content":""},{"lineNumber":15,"author":{"gitId":"rjeez"},"content":"    /**"},{"lineNumber":16,"author":{"gitId":"rjeez"},"content":"     *"},{"lineNumber":17,"author":{"gitId":"rjeez"},"content":"     * @param ui UI object that deal with the program output"},{"lineNumber":18,"author":{"gitId":"rjeez"},"content":"     * @param dukeList Collection of tasks in list form"},{"lineNumber":19,"author":{"gitId":"rjeez"},"content":"     * @param storage Storage object that deal with the file system"},{"lineNumber":20,"author":{"gitId":"rjeez"},"content":"     */"},{"lineNumber":21,"author":{"gitId":"rjeez"},"content":"    @Override"},{"lineNumber":22,"author":{"gitId":"rjeez"},"content":"    public String run(Ui ui, DukeList dukeList, Storage storage) {"},{"lineNumber":23,"author":{"gitId":"rjeez"},"content":"        return ui.giveHelp();"},{"lineNumber":24,"author":{"gitId":"rjeez"},"content":"    }"},{"lineNumber":25,"author":{"gitId":"rjeez"},"content":"}"}],"authorContributionMap":{"rjeez":25}},{"path":"src/main/duke/command/CList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"rjeez"},"content":"package main.duke.command;"},{"lineNumber":2,"author":{"gitId":"rjeez"},"content":"import main.duke.DukeException;"},{"lineNumber":3,"author":{"gitId":"rjeez"},"content":"import main.duke.DukeList;"},{"lineNumber":4,"author":{"gitId":"rjeez"},"content":"import main.duke.Ui;"},{"lineNumber":5,"author":{"gitId":"rjeez"},"content":"import main.duke.io.Storage;"},{"lineNumber":6,"author":{"gitId":"rjeez"},"content":"import main.duke.tasktype.Task;"},{"lineNumber":7,"author":{"gitId":"rjeez"},"content":"import java.util.List;"},{"lineNumber":8,"author":{"gitId":"rjeez"},"content":""},{"lineNumber":9,"author":{"gitId":"rjeez"},"content":"public class CList implements ICommand {"},{"lineNumber":10,"author":{"gitId":"rjeez"},"content":"    /**"},{"lineNumber":11,"author":{"gitId":"rjeez"},"content":"     * Check if it is the bye command"},{"lineNumber":12,"author":{"gitId":"rjeez"},"content":"     * @return false as it is not the bye command"},{"lineNumber":13,"author":{"gitId":"rjeez"},"content":"     */"},{"lineNumber":14,"author":{"gitId":"rjeez"},"content":"    @Override"},{"lineNumber":15,"author":{"gitId":"rjeez"},"content":"    public boolean isBye() {"},{"lineNumber":16,"author":{"gitId":"rjeez"},"content":"        return false;"},{"lineNumber":17,"author":{"gitId":"rjeez"},"content":"    }"},{"lineNumber":18,"author":{"gitId":"rjeez"},"content":""},{"lineNumber":19,"author":{"gitId":"rjeez"},"content":"    /**"},{"lineNumber":20,"author":{"gitId":"rjeez"},"content":"     *"},{"lineNumber":21,"author":{"gitId":"rjeez"},"content":"     * @param ui UI object that deal with the program output"},{"lineNumber":22,"author":{"gitId":"rjeez"},"content":"     * @param dukeList Collection of tasks in list form"},{"lineNumber":23,"author":{"gitId":"rjeez"},"content":"     * @param storage Storage object that deal with the file system"},{"lineNumber":24,"author":{"gitId":"rjeez"},"content":"     */"},{"lineNumber":25,"author":{"gitId":"rjeez"},"content":"    @Override"},{"lineNumber":26,"author":{"gitId":"rjeez"},"content":"    public String run(Ui ui, DukeList dukeList, Storage storage) {"},{"lineNumber":27,"author":{"gitId":"rjeez"},"content":"        List\u003cTask\u003e taskList \u003d dukeList.getTaskList();"},{"lineNumber":28,"author":{"gitId":"rjeez"},"content":"        return ui.showList(taskList);"},{"lineNumber":29,"author":{"gitId":"rjeez"},"content":"    }"},{"lineNumber":30,"author":{"gitId":"rjeez"},"content":"}"}],"authorContributionMap":{"rjeez":30}},{"path":"src/main/duke/command/CTodo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"rjeez"},"content":"package main.duke.command;"},{"lineNumber":2,"author":{"gitId":"rjeez"},"content":"import main.duke.DukeException;"},{"lineNumber":3,"author":{"gitId":"rjeez"},"content":"import main.duke.DukeList;"},{"lineNumber":4,"author":{"gitId":"rjeez"},"content":"import main.duke.Ui;"},{"lineNumber":5,"author":{"gitId":"rjeez"},"content":"import main.duke.io.Storage;"},{"lineNumber":6,"author":{"gitId":"rjeez"},"content":"import main.duke.tasktype.Todo;"},{"lineNumber":7,"author":{"gitId":"rjeez"},"content":"import main.duke.tasktype.Task;"},{"lineNumber":8,"author":{"gitId":"rjeez"},"content":"import java.util.List;"},{"lineNumber":9,"author":{"gitId":"rjeez"},"content":""},{"lineNumber":10,"author":{"gitId":"rjeez"},"content":"public class CTodo implements ICommand {"},{"lineNumber":11,"author":{"gitId":"rjeez"},"content":"    private String input;"},{"lineNumber":12,"author":{"gitId":"rjeez"},"content":"    public CTodo(String command){"},{"lineNumber":13,"author":{"gitId":"rjeez"},"content":"        this.input \u003d command;"},{"lineNumber":14,"author":{"gitId":"rjeez"},"content":"    }"},{"lineNumber":15,"author":{"gitId":"rjeez"},"content":"    /**"},{"lineNumber":16,"author":{"gitId":"rjeez"},"content":"     * Check if it is the bye command"},{"lineNumber":17,"author":{"gitId":"rjeez"},"content":"     * @return false as it is not the bye command"},{"lineNumber":18,"author":{"gitId":"rjeez"},"content":"     */"},{"lineNumber":19,"author":{"gitId":"rjeez"},"content":""},{"lineNumber":20,"author":{"gitId":"rjeez"},"content":"    @Override"},{"lineNumber":21,"author":{"gitId":"rjeez"},"content":"    public boolean isBye() {"},{"lineNumber":22,"author":{"gitId":"rjeez"},"content":"        return false;"},{"lineNumber":23,"author":{"gitId":"rjeez"},"content":"    }"},{"lineNumber":24,"author":{"gitId":"rjeez"},"content":"    /**"},{"lineNumber":25,"author":{"gitId":"rjeez"},"content":"     *"},{"lineNumber":26,"author":{"gitId":"rjeez"},"content":"     * @param ui UI object that deal with the program output"},{"lineNumber":27,"author":{"gitId":"rjeez"},"content":"     * @param dukeList Collection of tasks in list form"},{"lineNumber":28,"author":{"gitId":"rjeez"},"content":"     * @param storage Storage object that deal with the file system"},{"lineNumber":29,"author":{"gitId":"rjeez"},"content":"     */"},{"lineNumber":30,"author":{"gitId":"rjeez"},"content":"    @Override"},{"lineNumber":31,"author":{"gitId":"rjeez"},"content":"    public String run(Ui ui, DukeList dukeList, Storage storage) throws DukeException {"},{"lineNumber":32,"author":{"gitId":"rjeez"},"content":"        List\u003cTask\u003e taskList \u003d dukeList.getTaskList();"},{"lineNumber":33,"author":{"gitId":"rjeez"},"content":"        String name \u003d input.substring(4);"},{"lineNumber":34,"author":{"gitId":"rjeez"},"content":"        Task todo \u003d new Todo(name.trim());"},{"lineNumber":35,"author":{"gitId":"rjeez"},"content":"        taskList.add(todo);"},{"lineNumber":36,"author":{"gitId":"rjeez"},"content":"        storage.addText(todo.convertToFile());"},{"lineNumber":37,"author":{"gitId":"rjeez"},"content":"        return ui.showTaskAdded(todo.getStatus(), taskList);"},{"lineNumber":38,"author":{"gitId":"rjeez"},"content":"    }"},{"lineNumber":39,"author":{"gitId":"rjeez"},"content":"}"}],"authorContributionMap":{"rjeez":39}},{"path":"src/main/duke/command/ICommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"rjeez"},"content":"package main.duke.command;"},{"lineNumber":2,"author":{"gitId":"rjeez"},"content":"import main.duke.DukeList;"},{"lineNumber":3,"author":{"gitId":"rjeez"},"content":"import main.duke.Ui;"},{"lineNumber":4,"author":{"gitId":"rjeez"},"content":"import main.duke.DukeException;"},{"lineNumber":5,"author":{"gitId":"rjeez"},"content":"import main.duke.io.Storage;"},{"lineNumber":6,"author":{"gitId":"rjeez"},"content":"public interface ICommand {"},{"lineNumber":7,"author":{"gitId":"rjeez"},"content":"    public boolean isBye();"},{"lineNumber":8,"author":{"gitId":"rjeez"},"content":"    public String run(Ui ui, DukeList dukeList, Storage storage) throws DukeException;"},{"lineNumber":9,"author":{"gitId":"rjeez"},"content":"}"}],"authorContributionMap":{"rjeez":9}},{"path":"src/main/duke/gui/DialogBox.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"rjeez"},"content":"package main.duke.gui;"},{"lineNumber":2,"author":{"gitId":"rjeez"},"content":""},{"lineNumber":3,"author":{"gitId":"rjeez"},"content":"import java.io.IOException;"},{"lineNumber":4,"author":{"gitId":"rjeez"},"content":"import java.util.Collections;"},{"lineNumber":5,"author":{"gitId":"rjeez"},"content":""},{"lineNumber":6,"author":{"gitId":"rjeez"},"content":"import javafx.collections.FXCollections;"},{"lineNumber":7,"author":{"gitId":"rjeez"},"content":"import javafx.collections.ObservableList;"},{"lineNumber":8,"author":{"gitId":"rjeez"},"content":"import javafx.fxml.FXML;"},{"lineNumber":9,"author":{"gitId":"rjeez"},"content":"import javafx.fxml.FXMLLoader;"},{"lineNumber":10,"author":{"gitId":"rjeez"},"content":"import javafx.geometry.Pos;"},{"lineNumber":11,"author":{"gitId":"rjeez"},"content":"import javafx.scene.Node;"},{"lineNumber":12,"author":{"gitId":"rjeez"},"content":"import javafx.scene.control.Label;"},{"lineNumber":13,"author":{"gitId":"rjeez"},"content":"import javafx.scene.image.Image;"},{"lineNumber":14,"author":{"gitId":"rjeez"},"content":"import javafx.scene.image.ImageView;"},{"lineNumber":15,"author":{"gitId":"rjeez"},"content":"import javafx.scene.layout.HBox;"},{"lineNumber":16,"author":{"gitId":"rjeez"},"content":"import javafx.scene.text.Text;"},{"lineNumber":17,"author":{"gitId":"rjeez"},"content":""},{"lineNumber":18,"author":{"gitId":"rjeez"},"content":"public class DialogBox extends HBox {"},{"lineNumber":19,"author":{"gitId":"rjeez"},"content":"    @FXML"},{"lineNumber":20,"author":{"gitId":"rjeez"},"content":"    private Label dialog;"},{"lineNumber":21,"author":{"gitId":"rjeez"},"content":"    @FXML"},{"lineNumber":22,"author":{"gitId":"rjeez"},"content":"    private ImageView displayPicture;"},{"lineNumber":23,"author":{"gitId":"rjeez"},"content":""},{"lineNumber":24,"author":{"gitId":"rjeez"},"content":"    private DialogBox(String text, Image img){"},{"lineNumber":25,"author":{"gitId":"rjeez"},"content":"        try{"},{"lineNumber":26,"author":{"gitId":"rjeez"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(\"/view/DialogBox.fxml\"));"},{"lineNumber":27,"author":{"gitId":"rjeez"},"content":"            fxmlLoader.setController(this);"},{"lineNumber":28,"author":{"gitId":"rjeez"},"content":"            fxmlLoader.setRoot(this);"},{"lineNumber":29,"author":{"gitId":"rjeez"},"content":"            fxmlLoader.load();"},{"lineNumber":30,"author":{"gitId":"rjeez"},"content":"        } catch (IOException e){"},{"lineNumber":31,"author":{"gitId":"rjeez"},"content":"            e.printStackTrace();"},{"lineNumber":32,"author":{"gitId":"rjeez"},"content":"        }"},{"lineNumber":33,"author":{"gitId":"rjeez"},"content":""},{"lineNumber":34,"author":{"gitId":"rjeez"},"content":"        dialog.setText(text);"},{"lineNumber":35,"author":{"gitId":"rjeez"},"content":"        displayPicture.setImage(img);"},{"lineNumber":36,"author":{"gitId":"rjeez"},"content":"    }"},{"lineNumber":37,"author":{"gitId":"rjeez"},"content":""},{"lineNumber":38,"author":{"gitId":"rjeez"},"content":"    private void flip(){"},{"lineNumber":39,"author":{"gitId":"rjeez"},"content":"        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());"},{"lineNumber":40,"author":{"gitId":"rjeez"},"content":"        Collections.reverse(tmp);"},{"lineNumber":41,"author":{"gitId":"rjeez"},"content":"        getChildren().setAll(tmp);"},{"lineNumber":42,"author":{"gitId":"rjeez"},"content":"        setAlignment(Pos.TOP_LEFT);"},{"lineNumber":43,"author":{"gitId":"rjeez"},"content":"    }"},{"lineNumber":44,"author":{"gitId":"rjeez"},"content":""},{"lineNumber":45,"author":{"gitId":"rjeez"},"content":"    public static DialogBox getUserDialog(String text, Image img) {"},{"lineNumber":46,"author":{"gitId":"rjeez"},"content":"        return new DialogBox(text, img);"},{"lineNumber":47,"author":{"gitId":"rjeez"},"content":"    }"},{"lineNumber":48,"author":{"gitId":"rjeez"},"content":""},{"lineNumber":49,"author":{"gitId":"rjeez"},"content":"    public static DialogBox getBotDialog(String text, Image img) {"},{"lineNumber":50,"author":{"gitId":"rjeez"},"content":"        var db \u003d new DialogBox(text, img);"},{"lineNumber":51,"author":{"gitId":"rjeez"},"content":"        db.flip();"},{"lineNumber":52,"author":{"gitId":"rjeez"},"content":"        return db;"},{"lineNumber":53,"author":{"gitId":"rjeez"},"content":"    }"},{"lineNumber":54,"author":{"gitId":"rjeez"},"content":"}"}],"authorContributionMap":{"rjeez":54}},{"path":"src/main/duke/gui/Launcher.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"rjeez"},"content":"package main.duke.gui;"},{"lineNumber":2,"author":{"gitId":"rjeez"},"content":""},{"lineNumber":3,"author":{"gitId":"rjeez"},"content":"import javafx.application.Application;"},{"lineNumber":4,"author":{"gitId":"rjeez"},"content":""},{"lineNumber":5,"author":{"gitId":"rjeez"},"content":"public class Launcher {"},{"lineNumber":6,"author":{"gitId":"rjeez"},"content":"    /**"},{"lineNumber":7,"author":{"gitId":"rjeez"},"content":"     * Launch javafx application"},{"lineNumber":8,"author":{"gitId":"rjeez"},"content":"     * @param args Args to initialize main method"},{"lineNumber":9,"author":{"gitId":"rjeez"},"content":"     */"},{"lineNumber":10,"author":{"gitId":"rjeez"},"content":"    public static void main(String[] args){"},{"lineNumber":11,"author":{"gitId":"rjeez"},"content":""},{"lineNumber":12,"author":{"gitId":"rjeez"},"content":"        Application.launch(Main.class,args);"},{"lineNumber":13,"author":{"gitId":"rjeez"},"content":"    }"},{"lineNumber":14,"author":{"gitId":"rjeez"},"content":"}"}],"authorContributionMap":{"rjeez":14}},{"path":"src/main/duke/gui/Main.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"rjeez"},"content":"package main.duke.gui;"},{"lineNumber":2,"author":{"gitId":"rjeez"},"content":""},{"lineNumber":3,"author":{"gitId":"rjeez"},"content":"import main.duke.Duke;"},{"lineNumber":4,"author":{"gitId":"rjeez"},"content":"import javafx.application.Application;"},{"lineNumber":5,"author":{"gitId":"rjeez"},"content":"import javafx.fxml.FXMLLoader;"},{"lineNumber":6,"author":{"gitId":"rjeez"},"content":"import javafx.scene.Scene;"},{"lineNumber":7,"author":{"gitId":"rjeez"},"content":"import javafx.stage.Stage;"},{"lineNumber":8,"author":{"gitId":"rjeez"},"content":"import javafx.scene.layout.AnchorPane;"},{"lineNumber":9,"author":{"gitId":"rjeez"},"content":"import java.io.IOException;"},{"lineNumber":10,"author":{"gitId":"rjeez"},"content":""},{"lineNumber":11,"author":{"gitId":"rjeez"},"content":"import java.io.IOException;"},{"lineNumber":12,"author":{"gitId":"rjeez"},"content":""},{"lineNumber":13,"author":{"gitId":"rjeez"},"content":"public class Main extends Application {"},{"lineNumber":14,"author":{"gitId":"rjeez"},"content":""},{"lineNumber":15,"author":{"gitId":"rjeez"},"content":"    private Duke duke \u003d new Duke(\"data/duke.txt\");"},{"lineNumber":16,"author":{"gitId":"rjeez"},"content":"    @Override"},{"lineNumber":17,"author":{"gitId":"rjeez"},"content":"    public void start(Stage stage){"},{"lineNumber":18,"author":{"gitId":"rjeez"},"content":"        try {"},{"lineNumber":19,"author":{"gitId":"rjeez"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(Main.class.getResource(\"/view/MainWindow.fxml\"));"},{"lineNumber":20,"author":{"gitId":"rjeez"},"content":"            AnchorPane anchorPane  \u003d fxmlLoader.load();"},{"lineNumber":21,"author":{"gitId":"rjeez"},"content":"            Scene scene \u003d new Scene(anchorPane);"},{"lineNumber":22,"author":{"gitId":"rjeez"},"content":"            stage.setScene(scene);"},{"lineNumber":23,"author":{"gitId":"rjeez"},"content":"            stage.setTitle(\"Duke bot\");"},{"lineNumber":24,"author":{"gitId":"rjeez"},"content":"            fxmlLoader.\u003cMainWindow\u003egetController().makeDuke(duke);"},{"lineNumber":25,"author":{"gitId":"rjeez"},"content":"            stage.show();"},{"lineNumber":26,"author":{"gitId":"rjeez"},"content":"        }"},{"lineNumber":27,"author":{"gitId":"rjeez"},"content":"        catch (IOException e){"},{"lineNumber":28,"author":{"gitId":"rjeez"},"content":"            e.printStackTrace();"},{"lineNumber":29,"author":{"gitId":"rjeez"},"content":"        }"},{"lineNumber":30,"author":{"gitId":"rjeez"},"content":"    }"},{"lineNumber":31,"author":{"gitId":"rjeez"},"content":"}"}],"authorContributionMap":{"rjeez":31}},{"path":"src/main/duke/gui/MainWindow.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"rjeez"},"content":"package main.duke.gui;"},{"lineNumber":2,"author":{"gitId":"rjeez"},"content":""},{"lineNumber":3,"author":{"gitId":"rjeez"},"content":"import javafx.fxml.FXML;"},{"lineNumber":4,"author":{"gitId":"rjeez"},"content":"import javafx.scene.control.Button;"},{"lineNumber":5,"author":{"gitId":"rjeez"},"content":"import javafx.scene.control.ScrollPane;"},{"lineNumber":6,"author":{"gitId":"rjeez"},"content":"import javafx.scene.control.TextField;"},{"lineNumber":7,"author":{"gitId":"rjeez"},"content":"import javafx.scene.image.Image;"},{"lineNumber":8,"author":{"gitId":"rjeez"},"content":"import javafx.scene.layout.AnchorPane;"},{"lineNumber":9,"author":{"gitId":"rjeez"},"content":"import javafx.scene.layout.VBox;"},{"lineNumber":10,"author":{"gitId":"rjeez"},"content":"import java.io.IOException;"},{"lineNumber":11,"author":{"gitId":"rjeez"},"content":"import java.util.concurrent.CompletableFuture;"},{"lineNumber":12,"author":{"gitId":"rjeez"},"content":""},{"lineNumber":13,"author":{"gitId":"rjeez"},"content":"import main.duke.Duke;"},{"lineNumber":14,"author":{"gitId":"rjeez"},"content":""},{"lineNumber":15,"author":{"gitId":"rjeez"},"content":"/**"},{"lineNumber":16,"author":{"gitId":"rjeez"},"content":" * Controller of the MainWindow"},{"lineNumber":17,"author":{"gitId":"rjeez"},"content":" */"},{"lineNumber":18,"author":{"gitId":"rjeez"},"content":"public class MainWindow extends AnchorPane {"},{"lineNumber":19,"author":{"gitId":"rjeez"},"content":"    @FXML"},{"lineNumber":20,"author":{"gitId":"rjeez"},"content":"    private ScrollPane scrollPane;"},{"lineNumber":21,"author":{"gitId":"rjeez"},"content":"    @FXML"},{"lineNumber":22,"author":{"gitId":"rjeez"},"content":"    private VBox dialogContainer;"},{"lineNumber":23,"author":{"gitId":"rjeez"},"content":"    @FXML"},{"lineNumber":24,"author":{"gitId":"rjeez"},"content":"    private TextField userInput;"},{"lineNumber":25,"author":{"gitId":"rjeez"},"content":"    @FXML"},{"lineNumber":26,"author":{"gitId":"rjeez"},"content":"    private Button sendButton;"},{"lineNumber":27,"author":{"gitId":"rjeez"},"content":""},{"lineNumber":28,"author":{"gitId":"rjeez"},"content":"    private Duke duke;"},{"lineNumber":29,"author":{"gitId":"rjeez"},"content":"    private Image userImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/User.png\"));"},{"lineNumber":30,"author":{"gitId":"rjeez"},"content":"    private Image botImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/Bot.png\"));"},{"lineNumber":31,"author":{"gitId":"rjeez"},"content":"    private final String startMessage \u003d \"Hello, I am duke bot.\\n\""},{"lineNumber":32,"author":{"gitId":"rjeez"},"content":"            + \"If you require any assistance with what I accept use my command help\\n\";"},{"lineNumber":33,"author":{"gitId":"rjeez"},"content":""},{"lineNumber":34,"author":{"gitId":"rjeez"},"content":"    public MainWindow(){ }"},{"lineNumber":35,"author":{"gitId":"rjeez"},"content":""},{"lineNumber":36,"author":{"gitId":"rjeez"},"content":"    /**"},{"lineNumber":37,"author":{"gitId":"rjeez"},"content":"     * Initialize the MainWindow with a startMessage"},{"lineNumber":38,"author":{"gitId":"rjeez"},"content":"     */"},{"lineNumber":39,"author":{"gitId":"rjeez"},"content":"    @FXML"},{"lineNumber":40,"author":{"gitId":"rjeez"},"content":"    public void initialize(){"},{"lineNumber":41,"author":{"gitId":"rjeez"},"content":"        this.scrollPane.vvalueProperty().bind(this.dialogContainer.heightProperty());"},{"lineNumber":42,"author":{"gitId":"rjeez"},"content":"        dialogContainer.getChildren().add(DialogBox.getUserDialog(startMessage,botImage));"},{"lineNumber":43,"author":{"gitId":"rjeez"},"content":"    }"},{"lineNumber":44,"author":{"gitId":"rjeez"},"content":"    public void makeDuke(Duke d){"},{"lineNumber":45,"author":{"gitId":"rjeez"},"content":"        duke \u003d d;"},{"lineNumber":46,"author":{"gitId":"rjeez"},"content":"        }"},{"lineNumber":47,"author":{"gitId":"rjeez"},"content":""},{"lineNumber":48,"author":{"gitId":"rjeez"},"content":"    /**"},{"lineNumber":49,"author":{"gitId":"rjeez"},"content":"     * Makes two dialogBoxes, one which echos the user input and the other contains the reply."},{"lineNumber":50,"author":{"gitId":"rjeez"},"content":"     * Both are appended to the dialog container and cleared after."},{"lineNumber":51,"author":{"gitId":"rjeez"},"content":"     */"},{"lineNumber":52,"author":{"gitId":"rjeez"},"content":"    @FXML"},{"lineNumber":53,"author":{"gitId":"rjeez"},"content":"    private void handleUserInput() {"},{"lineNumber":54,"author":{"gitId":"rjeez"},"content":"            String input \u003d userInput.getText().trim();"},{"lineNumber":55,"author":{"gitId":"rjeez"},"content":"            String response \u003d duke.getReply(input);"},{"lineNumber":56,"author":{"gitId":"rjeez"},"content":"            dialogContainer.getChildren().addAll(DialogBox.getUserDialog(input, userImage),"},{"lineNumber":57,"author":{"gitId":"rjeez"},"content":"                    DialogBox.getBotDialog(response, botImage));"},{"lineNumber":58,"author":{"gitId":"rjeez"},"content":"        userInput.clear();"},{"lineNumber":59,"author":{"gitId":"rjeez"},"content":"        CompletableFuture.runAsync(() -\u003e {"},{"lineNumber":60,"author":{"gitId":"rjeez"},"content":"            try{"},{"lineNumber":61,"author":{"gitId":"rjeez"},"content":"                if(input.equals(\"bye\")){"},{"lineNumber":62,"author":{"gitId":"rjeez"},"content":"                    Thread.sleep(3000);"},{"lineNumber":63,"author":{"gitId":"rjeez"},"content":"                    System.exit(0);"},{"lineNumber":64,"author":{"gitId":"rjeez"},"content":"                }"},{"lineNumber":65,"author":{"gitId":"rjeez"},"content":"            }"},{"lineNumber":66,"author":{"gitId":"rjeez"},"content":"            catch (InterruptedException e){"},{"lineNumber":67,"author":{"gitId":"rjeez"},"content":"                Thread.currentThread().interrupt();"},{"lineNumber":68,"author":{"gitId":"rjeez"},"content":"                System.exit(1);"},{"lineNumber":69,"author":{"gitId":"rjeez"},"content":"            }"},{"lineNumber":70,"author":{"gitId":"rjeez"},"content":"                }"},{"lineNumber":71,"author":{"gitId":"rjeez"},"content":"                );"},{"lineNumber":72,"author":{"gitId":"rjeez"},"content":"        assert (userInput.getText().equals(\"\"));"},{"lineNumber":73,"author":{"gitId":"rjeez"},"content":"    }"},{"lineNumber":74,"author":{"gitId":"rjeez"},"content":"}"}],"authorContributionMap":{"rjeez":74}},{"path":"src/main/duke/io/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"rjeez"},"content":"package main.duke.io;"},{"lineNumber":2,"author":{"gitId":"rjeez"},"content":"import java.time.LocalDateTime;"},{"lineNumber":3,"author":{"gitId":"rjeez"},"content":"import java.time.format.DateTimeFormatter;"},{"lineNumber":4,"author":{"gitId":"rjeez"},"content":"import java.time.format.DateTimeParseException;"},{"lineNumber":5,"author":{"gitId":"rjeez"},"content":""},{"lineNumber":6,"author":{"gitId":"rjeez"},"content":"import main.duke.command.*;"},{"lineNumber":7,"author":{"gitId":"rjeez"},"content":"import main.duke.DukeException;"},{"lineNumber":8,"author":{"gitId":"rjeez"},"content":""},{"lineNumber":9,"author":{"gitId":"rjeez"},"content":"public class Parser {"},{"lineNumber":10,"author":{"gitId":"rjeez"},"content":"    /**"},{"lineNumber":11,"author":{"gitId":"rjeez"},"content":"     *"},{"lineNumber":12,"author":{"gitId":"rjeez"},"content":"     * @param input the whole user console input command"},{"lineNumber":13,"author":{"gitId":"rjeez"},"content":"     * @return Command for execution"},{"lineNumber":14,"author":{"gitId":"rjeez"},"content":"     * @throws DukeException thrown when an invalid message is inputted"},{"lineNumber":15,"author":{"gitId":"rjeez"},"content":"     */"},{"lineNumber":16,"author":{"gitId":"rjeez"},"content":"    public ICommand parse(String input) throws DukeException{"},{"lineNumber":17,"author":{"gitId":"rjeez"},"content":"        String[] splitString \u003d input.split(\" \");"},{"lineNumber":18,"author":{"gitId":"rjeez"},"content":"        assert (splitString.length \u003e 0);"},{"lineNumber":19,"author":{"gitId":"rjeez"},"content":"        String first \u003d splitString[0];"},{"lineNumber":20,"author":{"gitId":"rjeez"},"content":"        ICommand iCommand;"},{"lineNumber":21,"author":{"gitId":"rjeez"},"content":"        switch (first){"},{"lineNumber":22,"author":{"gitId":"rjeez"},"content":"            case\"bye\":"},{"lineNumber":23,"author":{"gitId":"rjeez"},"content":"                checkLength(1,splitString);"},{"lineNumber":24,"author":{"gitId":"rjeez"},"content":"                iCommand \u003d new CBye();"},{"lineNumber":25,"author":{"gitId":"rjeez"},"content":"                break;"},{"lineNumber":26,"author":{"gitId":"rjeez"},"content":"            case\"done\":"},{"lineNumber":27,"author":{"gitId":"rjeez"},"content":"                checkLength(2,splitString);"},{"lineNumber":28,"author":{"gitId":"rjeez"},"content":"                iCommand \u003d new CDone(input);"},{"lineNumber":29,"author":{"gitId":"rjeez"},"content":"                break;"},{"lineNumber":30,"author":{"gitId":"rjeez"},"content":"            case\"delete\":"},{"lineNumber":31,"author":{"gitId":"rjeez"},"content":"                checkLength(2,splitString);"},{"lineNumber":32,"author":{"gitId":"rjeez"},"content":"                iCommand \u003d new CDelete(input);"},{"lineNumber":33,"author":{"gitId":"rjeez"},"content":"                break;"},{"lineNumber":34,"author":{"gitId":"rjeez"},"content":"            case\"deadline\":"},{"lineNumber":35,"author":{"gitId":"rjeez"},"content":"                checkMessage(first,input);"},{"lineNumber":36,"author":{"gitId":"rjeez"},"content":"                checkDateTime(splitString);"},{"lineNumber":37,"author":{"gitId":"rjeez"},"content":"                checkBreakExist(\"/by\", input, \"deadline\");"},{"lineNumber":38,"author":{"gitId":"rjeez"},"content":"                iCommand \u003d new CDeadline(input);"},{"lineNumber":39,"author":{"gitId":"rjeez"},"content":"                break;"},{"lineNumber":40,"author":{"gitId":"rjeez"},"content":"            case\"find\":"},{"lineNumber":41,"author":{"gitId":"rjeez"},"content":"                checkMessage(first, input);"},{"lineNumber":42,"author":{"gitId":"rjeez"},"content":"                iCommand \u003d new CFind(input);"},{"lineNumber":43,"author":{"gitId":"rjeez"},"content":"                break;"},{"lineNumber":44,"author":{"gitId":"rjeez"},"content":"            case\"event\":"},{"lineNumber":45,"author":{"gitId":"rjeez"},"content":"                checkMessage(first, input);"},{"lineNumber":46,"author":{"gitId":"rjeez"},"content":"                checkDateTime(splitString);"},{"lineNumber":47,"author":{"gitId":"rjeez"},"content":"                checkBreakExist(\"/at\", input, \"event\");"},{"lineNumber":48,"author":{"gitId":"rjeez"},"content":"                iCommand \u003d new CEvent(input);"},{"lineNumber":49,"author":{"gitId":"rjeez"},"content":"                break;"},{"lineNumber":50,"author":{"gitId":"rjeez"},"content":"            case\"list\":"},{"lineNumber":51,"author":{"gitId":"rjeez"},"content":"                checkLength(1, splitString);"},{"lineNumber":52,"author":{"gitId":"rjeez"},"content":"                iCommand \u003d new CList();"},{"lineNumber":53,"author":{"gitId":"rjeez"},"content":"                break;"},{"lineNumber":54,"author":{"gitId":"rjeez"},"content":"            case\"todo\":"},{"lineNumber":55,"author":{"gitId":"rjeez"},"content":"                checkMessage(first, input);"},{"lineNumber":56,"author":{"gitId":"rjeez"},"content":"                iCommand \u003d new CTodo(input);"},{"lineNumber":57,"author":{"gitId":"rjeez"},"content":"                break;"},{"lineNumber":58,"author":{"gitId":"rjeez"},"content":"            case\"help\":"},{"lineNumber":59,"author":{"gitId":"rjeez"},"content":"                checkLength(1,splitString);"},{"lineNumber":60,"author":{"gitId":"rjeez"},"content":"                iCommand \u003d new CHelp();"},{"lineNumber":61,"author":{"gitId":"rjeez"},"content":"                break;"},{"lineNumber":62,"author":{"gitId":"rjeez"},"content":"            default:"},{"lineNumber":63,"author":{"gitId":"rjeez"},"content":"                throw new DukeException(\"The request is not valid\");"},{"lineNumber":64,"author":{"gitId":"rjeez"},"content":"        }"},{"lineNumber":65,"author":{"gitId":"rjeez"},"content":"        return iCommand;"},{"lineNumber":66,"author":{"gitId":"rjeez"},"content":"    }"},{"lineNumber":67,"author":{"gitId":"rjeez"},"content":"    public void checkLength(int length, String[] input) throws DukeException{"},{"lineNumber":68,"author":{"gitId":"rjeez"},"content":"        if(length !\u003d input.length){"},{"lineNumber":69,"author":{"gitId":"rjeez"},"content":"            throw new DukeException(\"Your message is not the right length\");"},{"lineNumber":70,"author":{"gitId":"rjeez"},"content":"        }"},{"lineNumber":71,"author":{"gitId":"rjeez"},"content":"    }"},{"lineNumber":72,"author":{"gitId":"rjeez"},"content":"    public void checkMessage(String command, String wholeInput) throws DukeException{"},{"lineNumber":73,"author":{"gitId":"rjeez"},"content":"        if(command.length() + 1 \u003e\u003d wholeInput.length()){"},{"lineNumber":74,"author":{"gitId":"rjeez"},"content":"            throw new DukeException(command + \" cannot be empty!\");"},{"lineNumber":75,"author":{"gitId":"rjeez"},"content":"        }"},{"lineNumber":76,"author":{"gitId":"rjeez"},"content":"    }"},{"lineNumber":77,"author":{"gitId":"rjeez"},"content":"    public void checkBreakExist(String type, String wholeInput, String command) throws DukeException{"},{"lineNumber":78,"author":{"gitId":"rjeez"},"content":"        if(!wholeInput.contains(type)){"},{"lineNumber":79,"author":{"gitId":"rjeez"},"content":"            throw new DukeException(command + \" is not complete. You are missing \" + type);"},{"lineNumber":80,"author":{"gitId":"rjeez"},"content":"        }"},{"lineNumber":81,"author":{"gitId":"rjeez"},"content":"    }"},{"lineNumber":82,"author":{"gitId":"rjeez"},"content":"    public void checkDateTime(String[] command) throws DukeException {"},{"lineNumber":83,"author":{"gitId":"rjeez"},"content":"        String dateTime \u003d command[command.length - 2] + \" \" + command[command.length -1];"},{"lineNumber":84,"author":{"gitId":"rjeez"},"content":"        try{"},{"lineNumber":85,"author":{"gitId":"rjeez"},"content":"            LocalDateTime.parse(dateTime, DateTimeFormatter.ofPattern(\"yyyy-MM-dd kkmm\"));"},{"lineNumber":86,"author":{"gitId":"rjeez"},"content":"        }"},{"lineNumber":87,"author":{"gitId":"rjeez"},"content":"        catch (DateTimeParseException e){"},{"lineNumber":88,"author":{"gitId":"rjeez"},"content":"            throw new DukeException(\"You have the wrong date time format. I require YYYY-MM-DD 0000\");"},{"lineNumber":89,"author":{"gitId":"rjeez"},"content":"        }"},{"lineNumber":90,"author":{"gitId":"rjeez"},"content":"    }"},{"lineNumber":91,"author":{"gitId":"rjeez"},"content":"}"}],"authorContributionMap":{"rjeez":91}},{"path":"src/main/duke/io/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"rjeez"},"content":"package main.duke.io;"},{"lineNumber":2,"author":{"gitId":"rjeez"},"content":""},{"lineNumber":3,"author":{"gitId":"rjeez"},"content":"import java.io.BufferedReader;"},{"lineNumber":4,"author":{"gitId":"rjeez"},"content":"import java.io.BufferedWriter;"},{"lineNumber":5,"author":{"gitId":"rjeez"},"content":"import java.io.DataInputStream;"},{"lineNumber":6,"author":{"gitId":"rjeez"},"content":"import java.io.FileInputStream;"},{"lineNumber":7,"author":{"gitId":"rjeez"},"content":"import java.io.FileWriter;"},{"lineNumber":8,"author":{"gitId":"rjeez"},"content":"import java.io.IOException;"},{"lineNumber":9,"author":{"gitId":"rjeez"},"content":"import java.io.InputStreamReader;"},{"lineNumber":10,"author":{"gitId":"rjeez"},"content":"import java.nio.file.Files;"},{"lineNumber":11,"author":{"gitId":"rjeez"},"content":"import java.nio.file.Path;"},{"lineNumber":12,"author":{"gitId":"rjeez"},"content":"import java.nio.file.Paths;"},{"lineNumber":13,"author":{"gitId":"rjeez"},"content":""},{"lineNumber":14,"author":{"gitId":"rjeez"},"content":"import main.duke.DukeException;"},{"lineNumber":15,"author":{"gitId":"rjeez"},"content":"import main.duke.tasktype.Task;"},{"lineNumber":16,"author":{"gitId":"rjeez"},"content":"import main.duke.tasktype.Event;"},{"lineNumber":17,"author":{"gitId":"rjeez"},"content":"import main.duke.tasktype.Deadline;"},{"lineNumber":18,"author":{"gitId":"rjeez"},"content":"import main.duke.tasktype.Todo;"},{"lineNumber":19,"author":{"gitId":"rjeez"},"content":"import java.util.List;"},{"lineNumber":20,"author":{"gitId":"rjeez"},"content":""},{"lineNumber":21,"author":{"gitId":"rjeez"},"content":"import main.duke.DukeList;"},{"lineNumber":22,"author":{"gitId":"rjeez"},"content":""},{"lineNumber":23,"author":{"gitId":"rjeez"},"content":"public class Storage {"},{"lineNumber":24,"author":{"gitId":"rjeez"},"content":"    private StringBuffer stringBufferOfTasks \u003d new StringBuffer();"},{"lineNumber":25,"author":{"gitId":"rjeez"},"content":"    private String filename;"},{"lineNumber":26,"author":{"gitId":"rjeez"},"content":""},{"lineNumber":27,"author":{"gitId":"rjeez"},"content":"    /**"},{"lineNumber":28,"author":{"gitId":"rjeez"},"content":"     * Constructor for the Storage Object"},{"lineNumber":29,"author":{"gitId":"rjeez"},"content":"     * @param filename path of the file being accessed"},{"lineNumber":30,"author":{"gitId":"rjeez"},"content":"     */"},{"lineNumber":31,"author":{"gitId":"rjeez"},"content":"    public Storage(String filename) {"},{"lineNumber":32,"author":{"gitId":"rjeez"},"content":"        this.filename \u003d filename;"},{"lineNumber":33,"author":{"gitId":"rjeez"},"content":"        getTaskListInFile(getDirectory());"},{"lineNumber":34,"author":{"gitId":"rjeez"},"content":"    }"},{"lineNumber":35,"author":{"gitId":"rjeez"},"content":""},{"lineNumber":36,"author":{"gitId":"rjeez"},"content":""},{"lineNumber":37,"author":{"gitId":"rjeez"},"content":"    private void getTaskListInFile(String current) {"},{"lineNumber":38,"author":{"gitId":"rjeez"},"content":"        String[] parents \u003d filename.split(\"/\");"},{"lineNumber":39,"author":{"gitId":"rjeez"},"content":"        String parent \u003d parents[0];"},{"lineNumber":40,"author":{"gitId":"rjeez"},"content":"        Path directPath \u003d Paths.get(current, parent);"},{"lineNumber":41,"author":{"gitId":"rjeez"},"content":"        Path filePath \u003d Paths.get(current, filename);"},{"lineNumber":42,"author":{"gitId":"rjeez"},"content":"        boolean directoryExist \u003d Files.exists(directPath);"},{"lineNumber":43,"author":{"gitId":"rjeez"},"content":"        boolean fileExist \u003d Files.exists(filePath);"},{"lineNumber":44,"author":{"gitId":"rjeez"},"content":"        try {"},{"lineNumber":45,"author":{"gitId":"rjeez"},"content":"            if (!directoryExist) {"},{"lineNumber":46,"author":{"gitId":"rjeez"},"content":"                Files.createDirectories(directPath);"},{"lineNumber":47,"author":{"gitId":"rjeez"},"content":"            }"},{"lineNumber":48,"author":{"gitId":"rjeez"},"content":"            if (!fileExist) {"},{"lineNumber":49,"author":{"gitId":"rjeez"},"content":"                Files.createFile(filePath);"},{"lineNumber":50,"author":{"gitId":"rjeez"},"content":"            }"},{"lineNumber":51,"author":{"gitId":"rjeez"},"content":"        } catch (IOException e) {"},{"lineNumber":52,"author":{"gitId":"rjeez"},"content":"            System.out.println(e.getMessage());"},{"lineNumber":53,"author":{"gitId":"rjeez"},"content":"        }"},{"lineNumber":54,"author":{"gitId":"rjeez"},"content":"    }"},{"lineNumber":55,"author":{"gitId":"rjeez"},"content":""},{"lineNumber":56,"author":{"gitId":"rjeez"},"content":"    /**"},{"lineNumber":57,"author":{"gitId":"rjeez"},"content":"     *"},{"lineNumber":58,"author":{"gitId":"rjeez"},"content":"     * @return the current directory"},{"lineNumber":59,"author":{"gitId":"rjeez"},"content":"     */"},{"lineNumber":60,"author":{"gitId":"rjeez"},"content":"    private String getDirectory() {"},{"lineNumber":61,"author":{"gitId":"rjeez"},"content":"        return System.getProperty(\"user.dir\");"},{"lineNumber":62,"author":{"gitId":"rjeez"},"content":"    }"},{"lineNumber":63,"author":{"gitId":"rjeez"},"content":""},{"lineNumber":64,"author":{"gitId":"rjeez"},"content":"    public void removeTask(String toRemove) {"},{"lineNumber":65,"author":{"gitId":"rjeez"},"content":"        String newLine \u003d System.getProperty(\"line.separator\");"},{"lineNumber":66,"author":{"gitId":"rjeez"},"content":"        toRemove \u003d toRemove + newLine;"},{"lineNumber":67,"author":{"gitId":"rjeez"},"content":"        setReplacing(toRemove, \"\", stringBufferOfTasks);"},{"lineNumber":68,"author":{"gitId":"rjeez"},"content":"    }"},{"lineNumber":69,"author":{"gitId":"rjeez"},"content":""},{"lineNumber":70,"author":{"gitId":"rjeez"},"content":"    public void setReplacing(String toReplace, String replacement, StringBuffer stringBuffer) throws StringIndexOutOfBoundsException {"},{"lineNumber":71,"author":{"gitId":"rjeez"},"content":"        int start \u003d stringBuffer.indexOf(toReplace);"},{"lineNumber":72,"author":{"gitId":"rjeez"},"content":"        int end \u003d start + toReplace.length();"},{"lineNumber":73,"author":{"gitId":"rjeez"},"content":"        stringBuffer.replace(start, end, replacement);"},{"lineNumber":74,"author":{"gitId":"rjeez"},"content":"    }"},{"lineNumber":75,"author":{"gitId":"rjeez"},"content":""},{"lineNumber":76,"author":{"gitId":"rjeez"},"content":"    public void changeText(String toChange, String changeTo) {"},{"lineNumber":77,"author":{"gitId":"rjeez"},"content":"        setReplacing(toChange, changeTo, stringBufferOfTasks);"},{"lineNumber":78,"author":{"gitId":"rjeez"},"content":"    }"},{"lineNumber":79,"author":{"gitId":"rjeez"},"content":""},{"lineNumber":80,"author":{"gitId":"rjeez"},"content":"    public void addText(String toAdd) {"},{"lineNumber":81,"author":{"gitId":"rjeez"},"content":"        String newLine \u003d System.getProperty(\"line.separator\");"},{"lineNumber":82,"author":{"gitId":"rjeez"},"content":"        toAdd \u003d toAdd + newLine;"},{"lineNumber":83,"author":{"gitId":"rjeez"},"content":"        stringBufferOfTasks.append(toAdd);"},{"lineNumber":84,"author":{"gitId":"rjeez"},"content":"    }"},{"lineNumber":85,"author":{"gitId":"rjeez"},"content":""},{"lineNumber":86,"author":{"gitId":"rjeez"},"content":"    /**"},{"lineNumber":87,"author":{"gitId":"rjeez"},"content":"     * Creates task objects based on the file information"},{"lineNumber":88,"author":{"gitId":"rjeez"},"content":"     * @return List of task objects"},{"lineNumber":89,"author":{"gitId":"rjeez"},"content":"     */"},{"lineNumber":90,"author":{"gitId":"rjeez"},"content":"    public DukeList load() {"},{"lineNumber":91,"author":{"gitId":"rjeez"},"content":"        DukeList dukeList \u003d new DukeList();"},{"lineNumber":92,"author":{"gitId":"rjeez"},"content":"        stringBufferOfTasks \u003d new StringBuffer();"},{"lineNumber":93,"author":{"gitId":"rjeez"},"content":"        try {"},{"lineNumber":94,"author":{"gitId":"rjeez"},"content":"            BufferedReader reader \u003d new BufferedReader(new InputStreamReader(new DataInputStream("},{"lineNumber":95,"author":{"gitId":"rjeez"},"content":"                    new FileInputStream(this.filename))));"},{"lineNumber":96,"author":{"gitId":"rjeez"},"content":"            String line \u003d reader.readLine();"},{"lineNumber":97,"author":{"gitId":"rjeez"},"content":"            while (line !\u003d null) {"},{"lineNumber":98,"author":{"gitId":"rjeez"},"content":"                runCommands(line,dukeList);"},{"lineNumber":99,"author":{"gitId":"rjeez"},"content":"                line \u003d reader.readLine();"},{"lineNumber":100,"author":{"gitId":"rjeez"},"content":"            }"},{"lineNumber":101,"author":{"gitId":"rjeez"},"content":"            reader.close();"},{"lineNumber":102,"author":{"gitId":"rjeez"},"content":""},{"lineNumber":103,"author":{"gitId":"rjeez"},"content":"        } catch (IOException e) {"},{"lineNumber":104,"author":{"gitId":"rjeez"},"content":"            System.out.println(filename + \" could not be opened\" + e.getMessage());"},{"lineNumber":105,"author":{"gitId":"rjeez"},"content":"        } catch (ArrayIndexOutOfBoundsException e){"},{"lineNumber":106,"author":{"gitId":"rjeez"},"content":"            System.out.println((e.getMessage()));"},{"lineNumber":107,"author":{"gitId":"rjeez"},"content":"        }"},{"lineNumber":108,"author":{"gitId":"rjeez"},"content":"        return dukeList;"},{"lineNumber":109,"author":{"gitId":"rjeez"},"content":"    }"},{"lineNumber":110,"author":{"gitId":"rjeez"},"content":"    public void convertFromFile(String[] input, DukeList dukeList){"},{"lineNumber":111,"author":{"gitId":"rjeez"},"content":"        List\u003cTask\u003e taskList \u003d dukeList.getTaskList();"},{"lineNumber":112,"author":{"gitId":"rjeez"},"content":"        String type \u003d input[0];"},{"lineNumber":113,"author":{"gitId":"rjeez"},"content":"        int done \u003d Integer.parseInt(input[1]);"},{"lineNumber":114,"author":{"gitId":"rjeez"},"content":"        String name \u003d input[2];"},{"lineNumber":115,"author":{"gitId":"rjeez"},"content":"        int counter \u003d dukeList.getTaskList().size();"},{"lineNumber":116,"author":{"gitId":"rjeez"},"content":"        switch(type) {"},{"lineNumber":117,"author":{"gitId":"rjeez"},"content":"            case (\"E\"):"},{"lineNumber":118,"author":{"gitId":"rjeez"},"content":"                String dateTime \u003d input[3];"},{"lineNumber":119,"author":{"gitId":"rjeez"},"content":"                Task E \u003d new Event(name, dateTime);"},{"lineNumber":120,"author":{"gitId":"rjeez"},"content":"                if(done \u003d\u003d 1){"},{"lineNumber":121,"author":{"gitId":"rjeez"},"content":"                    E.setDone();"},{"lineNumber":122,"author":{"gitId":"rjeez"},"content":"                }"},{"lineNumber":123,"author":{"gitId":"rjeez"},"content":"                taskList.add(counter, E);"},{"lineNumber":124,"author":{"gitId":"rjeez"},"content":"                break;"},{"lineNumber":125,"author":{"gitId":"rjeez"},"content":"            case(\"D\"):"},{"lineNumber":126,"author":{"gitId":"rjeez"},"content":"                dateTime \u003d input[3];"},{"lineNumber":127,"author":{"gitId":"rjeez"},"content":"                Task D \u003d new Deadline(name, dateTime);"},{"lineNumber":128,"author":{"gitId":"rjeez"},"content":"                if(done \u003d\u003d 1){"},{"lineNumber":129,"author":{"gitId":"rjeez"},"content":"                    D.setDone();"},{"lineNumber":130,"author":{"gitId":"rjeez"},"content":"                }"},{"lineNumber":131,"author":{"gitId":"rjeez"},"content":"                taskList.add(counter, D);"},{"lineNumber":132,"author":{"gitId":"rjeez"},"content":"                break;"},{"lineNumber":133,"author":{"gitId":"rjeez"},"content":"            case(\"T\"):"},{"lineNumber":134,"author":{"gitId":"rjeez"},"content":"                Task T \u003d new Todo(name);"},{"lineNumber":135,"author":{"gitId":"rjeez"},"content":"                if(done \u003d\u003d 1){"},{"lineNumber":136,"author":{"gitId":"rjeez"},"content":"                    T.setDone();"},{"lineNumber":137,"author":{"gitId":"rjeez"},"content":"                }"},{"lineNumber":138,"author":{"gitId":"rjeez"},"content":"                taskList.add(counter, T);"},{"lineNumber":139,"author":{"gitId":"rjeez"},"content":"                break;"},{"lineNumber":140,"author":{"gitId":"rjeez"},"content":"            default:"},{"lineNumber":141,"author":{"gitId":"rjeez"},"content":"                break;"},{"lineNumber":142,"author":{"gitId":"rjeez"},"content":"        }"},{"lineNumber":143,"author":{"gitId":"rjeez"},"content":"    }"},{"lineNumber":144,"author":{"gitId":"rjeez"},"content":"    public void runCommands(String line, DukeList dukeList){"},{"lineNumber":145,"author":{"gitId":"rjeez"},"content":"        String[] input \u003d line.split(\"~\");"},{"lineNumber":146,"author":{"gitId":"rjeez"},"content":"        String type \u003d input[0];"},{"lineNumber":147,"author":{"gitId":"rjeez"},"content":"        convertFromFile(input,dukeList);"},{"lineNumber":148,"author":{"gitId":"rjeez"},"content":"        stringBufferOfTasks.append(input).append(\"\\r\\n\");"},{"lineNumber":149,"author":{"gitId":"rjeez"},"content":"    }"},{"lineNumber":150,"author":{"gitId":"rjeez"},"content":""},{"lineNumber":151,"author":{"gitId":"rjeez"},"content":"    public void writeFile(){"},{"lineNumber":152,"author":{"gitId":"rjeez"},"content":"        try{"},{"lineNumber":153,"author":{"gitId":"rjeez"},"content":"            BufferedWriter bufferedWriter \u003d new BufferedWriter(new FileWriter(filename));"},{"lineNumber":154,"author":{"gitId":"rjeez"},"content":"            bufferedWriter.write(stringBufferOfTasks.toString());"},{"lineNumber":155,"author":{"gitId":"rjeez"},"content":"            bufferedWriter.close();"},{"lineNumber":156,"author":{"gitId":"rjeez"},"content":"        }"},{"lineNumber":157,"author":{"gitId":"rjeez"},"content":"        catch(Exception e){"},{"lineNumber":158,"author":{"gitId":"rjeez"},"content":"            System.out.println(\"Error when writing to File: \" + e.getMessage());"},{"lineNumber":159,"author":{"gitId":"rjeez"},"content":"        }"},{"lineNumber":160,"author":{"gitId":"rjeez"},"content":"    }"},{"lineNumber":161,"author":{"gitId":"rjeez"},"content":"}"}],"authorContributionMap":{"rjeez":161}},{"path":"src/main/duke/tasktype/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"rjeez"},"content":"package main.duke.tasktype;"},{"lineNumber":2,"author":{"gitId":"rjeez"},"content":""},{"lineNumber":3,"author":{"gitId":"rjeez"},"content":"public class Deadline extends Task {"},{"lineNumber":4,"author":{"gitId":"rjeez"},"content":"    /**"},{"lineNumber":5,"author":{"gitId":"rjeez"},"content":"     * Constructor for basic deadline"},{"lineNumber":6,"author":{"gitId":"rjeez"},"content":"     * @param name task information"},{"lineNumber":7,"author":{"gitId":"rjeez"},"content":"     */"},{"lineNumber":8,"author":{"gitId":"rjeez"},"content":"    public Deadline (String name){"},{"lineNumber":9,"author":{"gitId":"rjeez"},"content":"        super(name);"},{"lineNumber":10,"author":{"gitId":"rjeez"},"content":"        this.type \u003d \"D\";"},{"lineNumber":11,"author":{"gitId":"rjeez"},"content":"    }"},{"lineNumber":12,"author":{"gitId":"rjeez"},"content":""},{"lineNumber":13,"author":{"gitId":"rjeez"},"content":"    /**"},{"lineNumber":14,"author":{"gitId":"rjeez"},"content":"     * Constructor for deadline with date time format"},{"lineNumber":15,"author":{"gitId":"rjeez"},"content":"     * @param name task information"},{"lineNumber":16,"author":{"gitId":"rjeez"},"content":"     * @param dateTime Date time format"},{"lineNumber":17,"author":{"gitId":"rjeez"},"content":"     */"},{"lineNumber":18,"author":{"gitId":"rjeez"},"content":"    public Deadline(String name, String dateTime){"},{"lineNumber":19,"author":{"gitId":"rjeez"},"content":"        super(name,dateTime);"},{"lineNumber":20,"author":{"gitId":"rjeez"},"content":"        this.type \u003d \"D\";"},{"lineNumber":21,"author":{"gitId":"rjeez"},"content":"    }"},{"lineNumber":22,"author":{"gitId":"rjeez"},"content":"}"}],"authorContributionMap":{"rjeez":22}},{"path":"src/main/duke/tasktype/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"rjeez"},"content":"package main.duke.tasktype;"},{"lineNumber":2,"author":{"gitId":"rjeez"},"content":""},{"lineNumber":3,"author":{"gitId":"rjeez"},"content":"public class Event extends Task {"},{"lineNumber":4,"author":{"gitId":"rjeez"},"content":"    /**"},{"lineNumber":5,"author":{"gitId":"rjeez"},"content":"     * Constructor for basic event"},{"lineNumber":6,"author":{"gitId":"rjeez"},"content":"     * @param name task information"},{"lineNumber":7,"author":{"gitId":"rjeez"},"content":"     */"},{"lineNumber":8,"author":{"gitId":"rjeez"},"content":"    public Event(String name){"},{"lineNumber":9,"author":{"gitId":"rjeez"},"content":"        super(name);"},{"lineNumber":10,"author":{"gitId":"rjeez"},"content":"        this.type \u003d \"E\";"},{"lineNumber":11,"author":{"gitId":"rjeez"},"content":"    }"},{"lineNumber":12,"author":{"gitId":"rjeez"},"content":""},{"lineNumber":13,"author":{"gitId":"rjeez"},"content":"    /**"},{"lineNumber":14,"author":{"gitId":"rjeez"},"content":"     * Constructor for event with date time format"},{"lineNumber":15,"author":{"gitId":"rjeez"},"content":"     * @param name task information"},{"lineNumber":16,"author":{"gitId":"rjeez"},"content":"     * @param dateTime Date time format"},{"lineNumber":17,"author":{"gitId":"rjeez"},"content":"     */"},{"lineNumber":18,"author":{"gitId":"rjeez"},"content":"    public Event(String name, String dateTime){"},{"lineNumber":19,"author":{"gitId":"rjeez"},"content":"        super(name, dateTime);"},{"lineNumber":20,"author":{"gitId":"rjeez"},"content":"        this.type \u003d \"E\";"},{"lineNumber":21,"author":{"gitId":"rjeez"},"content":"    }"},{"lineNumber":22,"author":{"gitId":"rjeez"},"content":"}"}],"authorContributionMap":{"rjeez":22}},{"path":"src/main/duke/tasktype/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"rjeez"},"content":"package main.duke.tasktype;"},{"lineNumber":2,"author":{"gitId":"rjeez"},"content":""},{"lineNumber":3,"author":{"gitId":"rjeez"},"content":"import java.time.LocalDateTime;"},{"lineNumber":4,"author":{"gitId":"rjeez"},"content":"import java.time.format.DateTimeFormatter;"},{"lineNumber":5,"author":{"gitId":"rjeez"},"content":""},{"lineNumber":6,"author":{"gitId":"rjeez"},"content":"public class Task {"},{"lineNumber":7,"author":{"gitId":"rjeez"},"content":"    protected String name;"},{"lineNumber":8,"author":{"gitId":"rjeez"},"content":"    protected boolean isDone;"},{"lineNumber":9,"author":{"gitId":"rjeez"},"content":"    protected String type;"},{"lineNumber":10,"author":{"gitId":"rjeez"},"content":"    protected LocalDateTime due;"},{"lineNumber":11,"author":{"gitId":"rjeez"},"content":""},{"lineNumber":12,"author":{"gitId":"rjeez"},"content":"    /**"},{"lineNumber":13,"author":{"gitId":"rjeez"},"content":"     * Constructor for task"},{"lineNumber":14,"author":{"gitId":"rjeez"},"content":"     * @param name task information"},{"lineNumber":15,"author":{"gitId":"rjeez"},"content":"     */"},{"lineNumber":16,"author":{"gitId":"rjeez"},"content":"    public Task(String name){"},{"lineNumber":17,"author":{"gitId":"rjeez"},"content":"        this.name \u003d name;"},{"lineNumber":18,"author":{"gitId":"rjeez"},"content":"        this.isDone \u003d false;"},{"lineNumber":19,"author":{"gitId":"rjeez"},"content":"    }"},{"lineNumber":20,"author":{"gitId":"rjeez"},"content":""},{"lineNumber":21,"author":{"gitId":"rjeez"},"content":"    /**"},{"lineNumber":22,"author":{"gitId":"rjeez"},"content":"     * Constructor for task with date time format"},{"lineNumber":23,"author":{"gitId":"rjeez"},"content":"     * @param name task information"},{"lineNumber":24,"author":{"gitId":"rjeez"},"content":"     * @param dateTime Date time format"},{"lineNumber":25,"author":{"gitId":"rjeez"},"content":"     */"},{"lineNumber":26,"author":{"gitId":"rjeez"},"content":"    public Task(String name, String dateTime){"},{"lineNumber":27,"author":{"gitId":"rjeez"},"content":"        this.name \u003d name;"},{"lineNumber":28,"author":{"gitId":"rjeez"},"content":"        this.isDone \u003d false;"},{"lineNumber":29,"author":{"gitId":"rjeez"},"content":"        this.due \u003d LocalDateTime.parse(dateTime, DateTimeFormatter.ofPattern(\"yyyy-MM-dd kkmm\"));"},{"lineNumber":30,"author":{"gitId":"rjeez"},"content":"    }"},{"lineNumber":31,"author":{"gitId":"rjeez"},"content":""},{"lineNumber":32,"author":{"gitId":"rjeez"},"content":"    /**"},{"lineNumber":33,"author":{"gitId":"rjeez"},"content":"     * Set task as done"},{"lineNumber":34,"author":{"gitId":"rjeez"},"content":"     */"},{"lineNumber":35,"author":{"gitId":"rjeez"},"content":"    public void setDone(){"},{"lineNumber":36,"author":{"gitId":"rjeez"},"content":"        isDone \u003d true;"},{"lineNumber":37,"author":{"gitId":"rjeez"},"content":"    }"},{"lineNumber":38,"author":{"gitId":"rjeez"},"content":""},{"lineNumber":39,"author":{"gitId":"rjeez"},"content":"    /**"},{"lineNumber":40,"author":{"gitId":"rjeez"},"content":"     * @return Get task information"},{"lineNumber":41,"author":{"gitId":"rjeez"},"content":"     */"},{"lineNumber":42,"author":{"gitId":"rjeez"},"content":"    public String getName(){"},{"lineNumber":43,"author":{"gitId":"rjeez"},"content":"        return name;"},{"lineNumber":44,"author":{"gitId":"rjeez"},"content":"    }"},{"lineNumber":45,"author":{"gitId":"rjeez"},"content":""},{"lineNumber":46,"author":{"gitId":"rjeez"},"content":"    /**"},{"lineNumber":47,"author":{"gitId":"rjeez"},"content":"     * @return Get the status of task in symbol form"},{"lineNumber":48,"author":{"gitId":"rjeez"},"content":"     */"},{"lineNumber":49,"author":{"gitId":"rjeez"},"content":"    public String getStatusIcon(){"},{"lineNumber":50,"author":{"gitId":"rjeez"},"content":"        return (isDone ? \"O\" : \"X\");"},{"lineNumber":51,"author":{"gitId":"rjeez"},"content":"    }"},{"lineNumber":52,"author":{"gitId":"rjeez"},"content":""},{"lineNumber":53,"author":{"gitId":"rjeez"},"content":"    /**"},{"lineNumber":54,"author":{"gitId":"rjeez"},"content":"     * Get the current status of task"},{"lineNumber":55,"author":{"gitId":"rjeez"},"content":"     * @return current status of task"},{"lineNumber":56,"author":{"gitId":"rjeez"},"content":"     */"},{"lineNumber":57,"author":{"gitId":"rjeez"},"content":"    public String getStatus(){"},{"lineNumber":58,"author":{"gitId":"rjeez"},"content":"        if(due \u003d\u003d null){"},{"lineNumber":59,"author":{"gitId":"rjeez"},"content":"            return \" [\" + type + \"] \" + \" [\" + getStatusIcon() + \"] \" + getName();"},{"lineNumber":60,"author":{"gitId":"rjeez"},"content":"        }"},{"lineNumber":61,"author":{"gitId":"rjeez"},"content":"        else{"},{"lineNumber":62,"author":{"gitId":"rjeez"},"content":"            return \" [\" + type + \"] \" + \" [\" + getStatusIcon() + \"] \" + getName() + \" \""},{"lineNumber":63,"author":{"gitId":"rjeez"},"content":"                    + due.format(DateTimeFormatter.ofPattern(\"yyyy-MM-dd kkmm\"));"},{"lineNumber":64,"author":{"gitId":"rjeez"},"content":"        }"},{"lineNumber":65,"author":{"gitId":"rjeez"},"content":"    }"},{"lineNumber":66,"author":{"gitId":"rjeez"},"content":"    public LocalDateTime getDue(){"},{"lineNumber":67,"author":{"gitId":"rjeez"},"content":"        return due;"},{"lineNumber":68,"author":{"gitId":"rjeez"},"content":"    }"},{"lineNumber":69,"author":{"gitId":"rjeez"},"content":""},{"lineNumber":70,"author":{"gitId":"rjeez"},"content":"    /**"},{"lineNumber":71,"author":{"gitId":"rjeez"},"content":"     * Changes task information to the suitable format for a file"},{"lineNumber":72,"author":{"gitId":"rjeez"},"content":"     * @return String containing the suitable format"},{"lineNumber":73,"author":{"gitId":"rjeez"},"content":"     */"},{"lineNumber":74,"author":{"gitId":"rjeez"},"content":"    public String convertToFile(){"},{"lineNumber":75,"author":{"gitId":"rjeez"},"content":"        if(due\u003d\u003dnull){"},{"lineNumber":76,"author":{"gitId":"rjeez"},"content":"            return String.format(\"%s~%s~%s\", type, isDone ? 1:0, getName());"},{"lineNumber":77,"author":{"gitId":"rjeez"},"content":"        }"},{"lineNumber":78,"author":{"gitId":"rjeez"},"content":"        return String.format(\"%s~%s~%s~%s\", type, isDone ? 1:0, getName(),"},{"lineNumber":79,"author":{"gitId":"rjeez"},"content":"                due.format(DateTimeFormatter.ofPattern(\"yyyy-MM-dd kkmm\")));"},{"lineNumber":80,"author":{"gitId":"rjeez"},"content":"    }"},{"lineNumber":81,"author":{"gitId":"rjeez"},"content":"}"}],"authorContributionMap":{"rjeez":81}},{"path":"src/main/duke/tasktype/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"rjeez"},"content":"package main.duke.tasktype;"},{"lineNumber":2,"author":{"gitId":"rjeez"},"content":""},{"lineNumber":3,"author":{"gitId":"rjeez"},"content":"public class Todo extends Task {"},{"lineNumber":4,"author":{"gitId":"rjeez"},"content":"    /**"},{"lineNumber":5,"author":{"gitId":"rjeez"},"content":"     * Constructor for Todo"},{"lineNumber":6,"author":{"gitId":"rjeez"},"content":"     * @param name task information"},{"lineNumber":7,"author":{"gitId":"rjeez"},"content":"     */"},{"lineNumber":8,"author":{"gitId":"rjeez"},"content":"    public Todo (String name){"},{"lineNumber":9,"author":{"gitId":"rjeez"},"content":"        super(name);"},{"lineNumber":10,"author":{"gitId":"rjeez"},"content":"        this.type \u003d \"T\";"},{"lineNumber":11,"author":{"gitId":"rjeez"},"content":"    }"},{"lineNumber":12,"author":{"gitId":"rjeez"},"content":"}"}],"authorContributionMap":{"rjeez":12}},{"path":"src/main/resources/view/DialogBox.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"rjeez"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"},{"lineNumber":2,"author":{"gitId":"rjeez"},"content":""},{"lineNumber":3,"author":{"gitId":"rjeez"},"content":"\u003c?import javafx.geometry.Insets?\u003e"},{"lineNumber":4,"author":{"gitId":"rjeez"},"content":"\u003c?import javafx.scene.control.Label?\u003e"},{"lineNumber":5,"author":{"gitId":"rjeez"},"content":"\u003c?import javafx.scene.image.ImageView?\u003e"},{"lineNumber":6,"author":{"gitId":"rjeez"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e"},{"lineNumber":7,"author":{"gitId":"rjeez"},"content":""},{"lineNumber":8,"author":{"gitId":"rjeez"},"content":"\u003cfx:root alignment\u003d\"TOP_RIGHT\" maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\" prefHeight\u003d\"642.0\" prefWidth\u003d\"400.0\" type\u003d\"javafx.scene.layout.HBox\" xmlns\u003d\"http://javafx.com/javafx/11\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e"},{"lineNumber":9,"author":{"gitId":"rjeez"},"content":"    \u003cchildren\u003e"},{"lineNumber":10,"author":{"gitId":"rjeez"},"content":"        \u003cLabel fx:id\u003d\"dialog\" text\u003d\"Label\" wrapText\u003d\"true\" minHeight\u003d\"-Infinity\"/\u003e"},{"lineNumber":11,"author":{"gitId":"rjeez"},"content":"        \u003cImageView fx:id\u003d\"displayPicture\" fitHeight\u003d\"99.0\" fitWidth\u003d\"99.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\" /\u003e"},{"lineNumber":12,"author":{"gitId":"rjeez"},"content":"    \u003c/children\u003e"},{"lineNumber":13,"author":{"gitId":"rjeez"},"content":"    \u003cpadding\u003e"},{"lineNumber":14,"author":{"gitId":"rjeez"},"content":"        \u003cInsets bottom\u003d\"15.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"15.0\" /\u003e"},{"lineNumber":15,"author":{"gitId":"rjeez"},"content":"    \u003c/padding\u003e"},{"lineNumber":16,"author":{"gitId":"rjeez"},"content":"\u003c/fx:root\u003e"}],"authorContributionMap":{"rjeez":16}},{"path":"src/main/resources/view/MainWindow.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"rjeez"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"},{"lineNumber":2,"author":{"gitId":"rjeez"},"content":""},{"lineNumber":3,"author":{"gitId":"rjeez"},"content":"\u003c?import javafx.scene.control.Button?\u003e"},{"lineNumber":4,"author":{"gitId":"rjeez"},"content":"\u003c?import javafx.scene.control.ScrollPane?\u003e"},{"lineNumber":5,"author":{"gitId":"rjeez"},"content":"\u003c?import javafx.scene.control.TextField?\u003e"},{"lineNumber":6,"author":{"gitId":"rjeez"},"content":"\u003c?import javafx.scene.layout.AnchorPane?\u003e"},{"lineNumber":7,"author":{"gitId":"rjeez"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e"},{"lineNumber":8,"author":{"gitId":"rjeez"},"content":""},{"lineNumber":9,"author":{"gitId":"rjeez"},"content":"\u003cAnchorPane maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefHeight\u003d\"600.0\" prefWidth\u003d\"400.0\" xmlns\u003d\"http://javafx.com/javafx/11\" xmlns:fx\u003d\"http://javafx.com/fxml/1\" fx:controller\u003d\"main.duke.gui.MainWindow\"\u003e"},{"lineNumber":10,"author":{"gitId":"rjeez"},"content":"    \u003cchildren\u003e"},{"lineNumber":11,"author":{"gitId":"rjeez"},"content":"        \u003cTextField fx:id\u003d\"userInput\" layoutY\u003d\"558.0\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"324.0\" AnchorPane.bottomAnchor\u003d\"1.0\" /\u003e"},{"lineNumber":12,"author":{"gitId":"rjeez"},"content":"        \u003cButton fx:id\u003d\"sendButton\" layoutX\u003d\"324.0\" layoutY\u003d\"558.0\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"76.0\" text\u003d\"Send\" /\u003e"},{"lineNumber":13,"author":{"gitId":"rjeez"},"content":"        \u003cScrollPane fx:id\u003d\"scrollPane\" hbarPolicy\u003d\"NEVER\" hvalue\u003d\"1.0\" prefHeight\u003d\"557.0\" prefWidth\u003d\"400.0\" vvalue\u003d\"1.0\"\u003e"},{"lineNumber":14,"author":{"gitId":"rjeez"},"content":"            \u003ccontent\u003e"},{"lineNumber":15,"author":{"gitId":"rjeez"},"content":"                \u003cVBox fx:id\u003d\"dialogContainer\" prefHeight\u003d\"552.0\" prefWidth\u003d\"388.0\" /\u003e"},{"lineNumber":16,"author":{"gitId":"rjeez"},"content":"            \u003c/content\u003e"},{"lineNumber":17,"author":{"gitId":"rjeez"},"content":"        \u003c/ScrollPane\u003e"},{"lineNumber":18,"author":{"gitId":"rjeez"},"content":"    \u003c/children\u003e"},{"lineNumber":19,"author":{"gitId":"rjeez"},"content":"\u003c/AnchorPane\u003e"}],"authorContributionMap":{"rjeez":19}},{"path":"src/test/java/ParserTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"rjeez"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;"},{"lineNumber":2,"author":{"gitId":"rjeez"},"content":""},{"lineNumber":3,"author":{"gitId":"rjeez"},"content":"import org.junit.jupiter.api.Test;"},{"lineNumber":4,"author":{"gitId":"rjeez"},"content":""},{"lineNumber":5,"author":{"gitId":"rjeez"},"content":"import main.duke.DukeException;"},{"lineNumber":6,"author":{"gitId":"rjeez"},"content":"import main.duke.command.CBye;"},{"lineNumber":7,"author":{"gitId":"rjeez"},"content":"import main.duke.command.CDeadline;"},{"lineNumber":8,"author":{"gitId":"rjeez"},"content":"import main.duke.command.CDelete;"},{"lineNumber":9,"author":{"gitId":"rjeez"},"content":"import main.duke.command.CDone;"},{"lineNumber":10,"author":{"gitId":"rjeez"},"content":"import main.duke.command.CFind;"},{"lineNumber":11,"author":{"gitId":"rjeez"},"content":"import main.duke.command.ICommand;"},{"lineNumber":12,"author":{"gitId":"rjeez"},"content":"import main.duke.io.Parser;"},{"lineNumber":13,"author":{"gitId":"rjeez"},"content":""},{"lineNumber":14,"author":{"gitId":"rjeez"},"content":"public class ParserTest {"},{"lineNumber":15,"author":{"gitId":"rjeez"},"content":"    private static final Parser parser \u003d new Parser();"},{"lineNumber":16,"author":{"gitId":"rjeez"},"content":"    @Test"},{"lineNumber":17,"author":{"gitId":"rjeez"},"content":"    public void parseByeTest(){"},{"lineNumber":18,"author":{"gitId":"rjeez"},"content":"        ICommand bye \u003d new CBye();"},{"lineNumber":19,"author":{"gitId":"rjeez"},"content":"        try{"},{"lineNumber":20,"author":{"gitId":"rjeez"},"content":"            ICommand parseBye \u003d parser.parse(\"bye\");"},{"lineNumber":21,"author":{"gitId":"rjeez"},"content":"            assertEquals(bye.getClass(), parseBye.getClass());"},{"lineNumber":22,"author":{"gitId":"rjeez"},"content":"        }"},{"lineNumber":23,"author":{"gitId":"rjeez"},"content":"        catch(DukeException dukeException){"},{"lineNumber":24,"author":{"gitId":"rjeez"},"content":"            System.out.println(dukeException.getMessage());"},{"lineNumber":25,"author":{"gitId":"rjeez"},"content":"        }"},{"lineNumber":26,"author":{"gitId":"rjeez"},"content":"    }"},{"lineNumber":27,"author":{"gitId":"rjeez"},"content":""},{"lineNumber":28,"author":{"gitId":"rjeez"},"content":"    @Test"},{"lineNumber":29,"author":{"gitId":"rjeez"},"content":"    public void parseDeadlineTest(){"},{"lineNumber":30,"author":{"gitId":"rjeez"},"content":"        try{"},{"lineNumber":31,"author":{"gitId":"rjeez"},"content":"            ICommand parseDeadline \u003d parser.parse(\"deadline sleep /by 1111-11-11 1111\");"},{"lineNumber":32,"author":{"gitId":"rjeez"},"content":"            assertEquals(parseDeadline.getClass(), CDeadline.class);"},{"lineNumber":33,"author":{"gitId":"rjeez"},"content":"        }"},{"lineNumber":34,"author":{"gitId":"rjeez"},"content":"        catch(DukeException dukeException){"},{"lineNumber":35,"author":{"gitId":"rjeez"},"content":"            System.out.println(dukeException.getMessage());"},{"lineNumber":36,"author":{"gitId":"rjeez"},"content":"        }"},{"lineNumber":37,"author":{"gitId":"rjeez"},"content":""},{"lineNumber":38,"author":{"gitId":"rjeez"},"content":"    }"},{"lineNumber":39,"author":{"gitId":"rjeez"},"content":""},{"lineNumber":40,"author":{"gitId":"rjeez"},"content":"    @Test"},{"lineNumber":41,"author":{"gitId":"rjeez"},"content":"    public void parseDeleteTest(){"},{"lineNumber":42,"author":{"gitId":"rjeez"},"content":"        try{"},{"lineNumber":43,"author":{"gitId":"rjeez"},"content":"            ICommand parseDelete \u003d parser.parse(\"delete 1\");"},{"lineNumber":44,"author":{"gitId":"rjeez"},"content":"            assertEquals(parseDelete.getClass(), CDelete.class);"},{"lineNumber":45,"author":{"gitId":"rjeez"},"content":"        }"},{"lineNumber":46,"author":{"gitId":"rjeez"},"content":"        catch (DukeException dukeException){"},{"lineNumber":47,"author":{"gitId":"rjeez"},"content":"            System.out.println(dukeException.getMessage());"},{"lineNumber":48,"author":{"gitId":"rjeez"},"content":"        }"},{"lineNumber":49,"author":{"gitId":"rjeez"},"content":"    }"},{"lineNumber":50,"author":{"gitId":"rjeez"},"content":""},{"lineNumber":51,"author":{"gitId":"rjeez"},"content":"    @Test"},{"lineNumber":52,"author":{"gitId":"rjeez"},"content":"    public void parseFindTest(){"},{"lineNumber":53,"author":{"gitId":"rjeez"},"content":"        try{"},{"lineNumber":54,"author":{"gitId":"rjeez"},"content":"            ICommand parseFind \u003d parser.parse(\"find sleep\");"},{"lineNumber":55,"author":{"gitId":"rjeez"},"content":"            assertEquals(parseFind.getClass(), CFind.class);"},{"lineNumber":56,"author":{"gitId":"rjeez"},"content":"        }"},{"lineNumber":57,"author":{"gitId":"rjeez"},"content":"        catch (DukeException dukeException){"},{"lineNumber":58,"author":{"gitId":"rjeez"},"content":"            System.out.println(dukeException.getMessage());"},{"lineNumber":59,"author":{"gitId":"rjeez"},"content":"        }"},{"lineNumber":60,"author":{"gitId":"rjeez"},"content":"    }"},{"lineNumber":61,"author":{"gitId":"rjeez"},"content":""},{"lineNumber":62,"author":{"gitId":"rjeez"},"content":"    @Test"},{"lineNumber":63,"author":{"gitId":"rjeez"},"content":"    public void parseDoneTest(){"},{"lineNumber":64,"author":{"gitId":"rjeez"},"content":"        try{"},{"lineNumber":65,"author":{"gitId":"rjeez"},"content":"            ICommand parseDone \u003d parser.parse(\"done 1\");"},{"lineNumber":66,"author":{"gitId":"rjeez"},"content":"            assertEquals(parseDone.getClass(), CDone.class);"},{"lineNumber":67,"author":{"gitId":"rjeez"},"content":"        }"},{"lineNumber":68,"author":{"gitId":"rjeez"},"content":"        catch (DukeException dukeException){"},{"lineNumber":69,"author":{"gitId":"rjeez"},"content":"            System.out.println(dukeException.getMessage());"},{"lineNumber":70,"author":{"gitId":"rjeez"},"content":"        }"},{"lineNumber":71,"author":{"gitId":"rjeez"},"content":"    }"},{"lineNumber":72,"author":{"gitId":"rjeez"},"content":"}"}],"authorContributionMap":{"rjeez":72}},{"path":"src/test/java/UiTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"rjeez"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;"},{"lineNumber":2,"author":{"gitId":"rjeez"},"content":""},{"lineNumber":3,"author":{"gitId":"rjeez"},"content":"import java.util.ArrayList;"},{"lineNumber":4,"author":{"gitId":"rjeez"},"content":"import java.util.List;"},{"lineNumber":5,"author":{"gitId":"rjeez"},"content":""},{"lineNumber":6,"author":{"gitId":"rjeez"},"content":"import org.junit.jupiter.api.Test;"},{"lineNumber":7,"author":{"gitId":"rjeez"},"content":""},{"lineNumber":8,"author":{"gitId":"rjeez"},"content":"import main.duke.Ui;"},{"lineNumber":9,"author":{"gitId":"rjeez"},"content":"import main.duke.tasktype.Task;"},{"lineNumber":10,"author":{"gitId":"rjeez"},"content":""},{"lineNumber":11,"author":{"gitId":"rjeez"},"content":"public class UiTest {"},{"lineNumber":12,"author":{"gitId":"rjeez"},"content":"    @Test"},{"lineNumber":13,"author":{"gitId":"rjeez"},"content":"    public void showDoneTest() {"},{"lineNumber":14,"author":{"gitId":"rjeez"},"content":"        String result \u003d new Ui().makeDone(\"hello\");"},{"lineNumber":15,"author":{"gitId":"rjeez"},"content":"        assertEquals(\"Following task has been marked done: \\nhello\", result);"},{"lineNumber":16,"author":{"gitId":"rjeez"},"content":"    }"},{"lineNumber":17,"author":{"gitId":"rjeez"},"content":""},{"lineNumber":18,"author":{"gitId":"rjeez"},"content":"    @Test"},{"lineNumber":19,"author":{"gitId":"rjeez"},"content":"    public void byeTest(){"},{"lineNumber":20,"author":{"gitId":"rjeez"},"content":"        String result \u003d new Ui().sayGoodbye();"},{"lineNumber":21,"author":{"gitId":"rjeez"},"content":"        assertEquals(\"Goodbye!\", result);"},{"lineNumber":22,"author":{"gitId":"rjeez"},"content":"    }"},{"lineNumber":23,"author":{"gitId":"rjeez"},"content":""},{"lineNumber":24,"author":{"gitId":"rjeez"},"content":"    @Test"},{"lineNumber":25,"author":{"gitId":"rjeez"},"content":"    public void addTaskTest(){"},{"lineNumber":26,"author":{"gitId":"rjeez"},"content":"        Task task \u003d new Task(\"task\");"},{"lineNumber":27,"author":{"gitId":"rjeez"},"content":"        List\u003cTask\u003e taskList \u003d new ArrayList\u003c\u003e();"},{"lineNumber":28,"author":{"gitId":"rjeez"},"content":"        taskList.add(task);"},{"lineNumber":29,"author":{"gitId":"rjeez"},"content":"        String result \u003d new Ui().showTaskAdded(\"task\", taskList);"},{"lineNumber":30,"author":{"gitId":"rjeez"},"content":"        assertEquals(\"Added the following task : \\ntask\\n\" +"},{"lineNumber":31,"author":{"gitId":"rjeez"},"content":"                \"You now have 1 tasks in your list.\\n\", result);"},{"lineNumber":32,"author":{"gitId":"rjeez"},"content":"    }"},{"lineNumber":33,"author":{"gitId":"rjeez"},"content":""},{"lineNumber":34,"author":{"gitId":"rjeez"},"content":""},{"lineNumber":35,"author":{"gitId":"rjeez"},"content":"}"}],"authorContributionMap":{"rjeez":35}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"rjeez"},"content":"todo sleep"},{"lineNumber":2,"author":{"gitId":"rjeez"},"content":"deadline tosleep /by 2020-01-01 1111"},{"lineNumber":3,"author":{"gitId":"rjeez"},"content":"list"},{"lineNumber":4,"author":{"gitId":"rjeez"},"content":"bye"}],"authorContributionMap":{"rjeez":4}}]
