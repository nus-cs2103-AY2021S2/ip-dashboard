[{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027checkstyle\u0027"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027"},{"lineNumber":6,"author":{"gitId":"-"},"content":"}"},{"lineNumber":7,"author":{"gitId":"-"},"content":""},{"lineNumber":8,"author":{"gitId":"-"},"content":"repositories {"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    mavenCentral()"},{"lineNumber":10,"author":{"gitId":"-"},"content":"}"},{"lineNumber":11,"author":{"gitId":"-"},"content":""},{"lineNumber":12,"author":{"gitId":"-"},"content":"dependencies {"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.5.0\u0027"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.5.0\u0027"},{"lineNumber":15,"author":{"gitId":"stein414"},"content":"    // https://stackoverflow.com/a/34934226 Adding jackson via gradle"},{"lineNumber":16,"author":{"gitId":"stein414"},"content":"    implementation \u0027com.fasterxml.jackson.core:jackson-core:2.12.1\u0027"},{"lineNumber":17,"author":{"gitId":"stein414"},"content":"    implementation \u0027com.fasterxml.jackson.core:jackson-annotations:2.12.1\u0027"},{"lineNumber":18,"author":{"gitId":"stein414"},"content":"    implementation \u0027com.fasterxml.jackson.core:jackson-databind:2.12.1\u0027"},{"lineNumber":19,"author":{"gitId":"stein414"},"content":"    implementation \u0027com.fasterxml.jackson.datatype:jackson-datatype-jsr310:2.12.1\u0027"},{"lineNumber":20,"author":{"gitId":"stein414"},"content":""},{"lineNumber":21,"author":{"gitId":"stein414"},"content":"    String javaFxVersion \u003d \u002711\u0027"},{"lineNumber":22,"author":{"gitId":"stein414"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027"},{"lineNumber":23,"author":{"gitId":"stein414"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"},{"lineNumber":24,"author":{"gitId":"stein414"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"},{"lineNumber":25,"author":{"gitId":"stein414"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027"},{"lineNumber":26,"author":{"gitId":"stein414"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"},{"lineNumber":27,"author":{"gitId":"stein414"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"},{"lineNumber":28,"author":{"gitId":"stein414"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027"},{"lineNumber":29,"author":{"gitId":"stein414"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"},{"lineNumber":30,"author":{"gitId":"stein414"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"},{"lineNumber":31,"author":{"gitId":"stein414"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027"},{"lineNumber":32,"author":{"gitId":"stein414"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"},{"lineNumber":33,"author":{"gitId":"stein414"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"},{"lineNumber":34,"author":{"gitId":"-"},"content":"}"},{"lineNumber":35,"author":{"gitId":"-"},"content":""},{"lineNumber":36,"author":{"gitId":"-"},"content":"test {"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    useJUnitPlatform()"},{"lineNumber":38,"author":{"gitId":"-"},"content":""},{"lineNumber":39,"author":{"gitId":"-"},"content":"    testLogging {"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\""},{"lineNumber":41,"author":{"gitId":"-"},"content":""},{"lineNumber":42,"author":{"gitId":"-"},"content":"        showExceptions true"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\""},{"lineNumber":44,"author":{"gitId":"-"},"content":"        showCauses true"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        showStackTraces true"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":48,"author":{"gitId":"-"},"content":"}"},{"lineNumber":49,"author":{"gitId":"-"},"content":""},{"lineNumber":50,"author":{"gitId":"-"},"content":"application {"},{"lineNumber":51,"author":{"gitId":"stein414"},"content":"    mainClassName \u003d \"Launcher\""},{"lineNumber":52,"author":{"gitId":"-"},"content":"}"},{"lineNumber":53,"author":{"gitId":"-"},"content":""},{"lineNumber":54,"author":{"gitId":"-"},"content":"shadowJar {"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    archiveBaseName \u003d \"duke\""},{"lineNumber":56,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null"},{"lineNumber":57,"author":{"gitId":"-"},"content":"}"},{"lineNumber":58,"author":{"gitId":"-"},"content":""},{"lineNumber":59,"author":{"gitId":"-"},"content":"checkstyle {"},{"lineNumber":60,"author":{"gitId":"stein414"},"content":"    toolVersion \u00278.39\u0027"},{"lineNumber":61,"author":{"gitId":"stein414"},"content":"    showViolations \u003d true"},{"lineNumber":62,"author":{"gitId":"-"},"content":"}"},{"lineNumber":63,"author":{"gitId":"-"},"content":""},{"lineNumber":64,"author":{"gitId":"-"},"content":"run{"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in"},{"lineNumber":66,"author":{"gitId":"-"},"content":"}"}],"authorContributionMap":{"stein414":22,"-":44}},{"path":"docs/README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"# User Guide"},{"lineNumber":2,"author":{"gitId":"-"},"content":""},{"lineNumber":3,"author":{"gitId":"stein414"},"content":"Duke is **desktop app for managing tasks**."},{"lineNumber":4,"author":{"gitId":"-"},"content":""},{"lineNumber":5,"author":{"gitId":"stein414"},"content":"## Table of contents"},{"lineNumber":6,"author":{"gitId":"-"},"content":""},{"lineNumber":7,"author":{"gitId":"stein414"},"content":"- [User Guide](#user-guide)"},{"lineNumber":8,"author":{"gitId":"stein414"},"content":"  - [Quick start](#quick-start)"},{"lineNumber":9,"author":{"gitId":"stein414"},"content":"  - [Features](#features)"},{"lineNumber":10,"author":{"gitId":"stein414"},"content":"    - [Add a todo : `todo`](#add-a-todo--todo)"},{"lineNumber":11,"author":{"gitId":"stein414"},"content":"    - [Add a deadline : `deadline`](#add-a-deadline--deadline)"},{"lineNumber":12,"author":{"gitId":"stein414"},"content":"    - [Add an event : `event`](#add-an-event--event)"},{"lineNumber":13,"author":{"gitId":"stein414"},"content":"    - [List all tasks : `list`](#list-all-tasks--list)"},{"lineNumber":14,"author":{"gitId":"stein414"},"content":"    - [Find a task : `find`](#find-a-task--find)"},{"lineNumber":15,"author":{"gitId":"stein414"},"content":"    - [Set task as done : `done`](#set-task-as-done--done)"},{"lineNumber":16,"author":{"gitId":"stein414"},"content":"    - [Delete a task : `delete`](#delete-a-task--delete)"},{"lineNumber":17,"author":{"gitId":"stein414"},"content":"    - [Exit Duke : `bye`](#exit-duke--bye)"},{"lineNumber":18,"author":{"gitId":"stein414"},"content":"  - [Acknowledgement](#acknowledgement))"},{"lineNumber":19,"author":{"gitId":"-"},"content":""},{"lineNumber":20,"author":{"gitId":"stein414"},"content":"## Quick start"},{"lineNumber":21,"author":{"gitId":"-"},"content":""},{"lineNumber":22,"author":{"gitId":"stein414"},"content":"1. Ensure you have Java `11` or above installed in your Computer."},{"lineNumber":23,"author":{"gitId":"-"},"content":""},{"lineNumber":24,"author":{"gitId":"stein414"},"content":"1. Download the latest `duke.jar` from [here](https://github.com/stein414/ip/releasess)."},{"lineNumber":25,"author":{"gitId":"-"},"content":""},{"lineNumber":26,"author":{"gitId":"stein414"},"content":"1. Copy the file to the folder you want to use as the _home folder_ for Duke."},{"lineNumber":27,"author":{"gitId":"-"},"content":""},{"lineNumber":28,"author":{"gitId":"stein414"},"content":"1. Double-click the file to start the app. A GUI should appear in a few seconds."},{"lineNumber":29,"author":{"gitId":"-"},"content":""},{"lineNumber":30,"author":{"gitId":"stein414"},"content":"3. Type a command in the command box and press Enter to execute it. e.g. typing **`list`** and pressing Enter will list all tasks in Duke.\u003cbr\u003e"},{"lineNumber":31,"author":{"gitId":"stein414"},"content":"   Some example commands you can try:"},{"lineNumber":32,"author":{"gitId":"stein414"},"content":""},{"lineNumber":33,"author":{"gitId":"stein414"},"content":"    * **`list`** : Lists all tasks."},{"lineNumber":34,"author":{"gitId":"stein414"},"content":""},{"lineNumber":35,"author":{"gitId":"stein414"},"content":"    * **`todo`**` task 1` : Adds a task with description `task 1`."},{"lineNumber":36,"author":{"gitId":"stein414"},"content":""},{"lineNumber":37,"author":{"gitId":"stein414"},"content":"    * **`deadline`**` assignment /by 2021-12-20` : Adds a deadline with description `assignment` and done by date `2021-12-20`."},{"lineNumber":38,"author":{"gitId":"stein414"},"content":""},{"lineNumber":39,"author":{"gitId":"stein414"},"content":"    * **`event`**` birthday party /at 2021-01-15` : Adds a event with description `birthday party` and at date `2021-01-15`."},{"lineNumber":40,"author":{"gitId":"stein414"},"content":""},{"lineNumber":41,"author":{"gitId":"stein414"},"content":"    * **`done`**`1` : Sets the 1st task to be done."},{"lineNumber":42,"author":{"gitId":"stein414"},"content":""},{"lineNumber":43,"author":{"gitId":"stein414"},"content":"    * **`del`**`1` : deletes the 1st task to be done."},{"lineNumber":44,"author":{"gitId":"stein414"},"content":""},{"lineNumber":45,"author":{"gitId":"stein414"},"content":"    * **`bye`** : Exits the app."},{"lineNumber":46,"author":{"gitId":"stein414"},"content":""},{"lineNumber":47,"author":{"gitId":"stein414"},"content":"1. Refer to the [Features](#features) below for details of each command."},{"lineNumber":48,"author":{"gitId":"stein414"},"content":""},{"lineNumber":49,"author":{"gitId":"-"},"content":"## Features"},{"lineNumber":50,"author":{"gitId":"-"},"content":""},{"lineNumber":51,"author":{"gitId":"stein414"},"content":"\u003cdiv markdown\u003d\"block\" class\u003d\"alert alert-info\"\u003e"},{"lineNumber":52,"author":{"gitId":"stein414"},"content":""},{"lineNumber":53,"author":{"gitId":"stein414"},"content":"**:information_source: Notes about the command format:**\u003cbr\u003e"},{"lineNumber":54,"author":{"gitId":"stein414"},"content":""},{"lineNumber":55,"author":{"gitId":"stein414"},"content":"* Words in `UPPER_CASE` are the parameters to be supplied by the user.\u003cbr\u003e"},{"lineNumber":56,"author":{"gitId":"stein414"},"content":"  e.g. in `add n/NAME`, `NAME` is a parameter which can be used as `add n/John Doe`."},{"lineNumber":57,"author":{"gitId":"stein414"},"content":""},{"lineNumber":58,"author":{"gitId":"stein414"},"content":"\u003c/div\u003e"},{"lineNumber":59,"author":{"gitId":"stein414"},"content":""},{"lineNumber":60,"author":{"gitId":"stein414"},"content":"### Add a todo : `todo`"},{"lineNumber":61,"author":{"gitId":"stein414"},"content":""},{"lineNumber":62,"author":{"gitId":"stein414"},"content":"Adds a todo."},{"lineNumber":63,"author":{"gitId":"stein414"},"content":""},{"lineNumber":64,"author":{"gitId":"stein414"},"content":"Format: `todo DESCRIPTION`"},{"lineNumber":65,"author":{"gitId":"stein414"},"content":""},{"lineNumber":66,"author":{"gitId":"stein414"},"content":"Examples:"},{"lineNumber":67,"author":{"gitId":"stein414"},"content":""},{"lineNumber":68,"author":{"gitId":"stein414"},"content":"* `todo Buy groceries` Adds a task with description `Buy groceries`."},{"lineNumber":69,"author":{"gitId":"stein414"},"content":"* `todo Sell kidney` Adds a task with description `Sell kidney`."},{"lineNumber":70,"author":{"gitId":"stein414"},"content":""},{"lineNumber":71,"author":{"gitId":"stein414"},"content":""},{"lineNumber":72,"author":{"gitId":"stein414"},"content":"### Add a deadline : `deadline`"},{"lineNumber":73,"author":{"gitId":"stein414"},"content":""},{"lineNumber":74,"author":{"gitId":"stein414"},"content":"Adds a deadline."},{"lineNumber":75,"author":{"gitId":"stein414"},"content":""},{"lineNumber":76,"author":{"gitId":"stein414"},"content":"Format: `deadline DESCRIPTION /by DATE`"},{"lineNumber":77,"author":{"gitId":"stein414"},"content":""},{"lineNumber":78,"author":{"gitId":"stein414"},"content":"Examples:"},{"lineNumber":79,"author":{"gitId":"stein414"},"content":""},{"lineNumber":80,"author":{"gitId":"stein414"},"content":"* `deadline Submit final project /by 2021-04-20` Adds a deadline with description `Submit final project` and done by date `2021-04-20`."},{"lineNumber":81,"author":{"gitId":"stein414"},"content":"* `deadline Pay off debt /by 2021-06-30` Adds a deadline with description `Pay off debt` and done by date `2021-06-30`."},{"lineNumber":82,"author":{"gitId":"stein414"},"content":""},{"lineNumber":83,"author":{"gitId":"stein414"},"content":""},{"lineNumber":84,"author":{"gitId":"stein414"},"content":"### Add an event : `event`"},{"lineNumber":85,"author":{"gitId":"stein414"},"content":""},{"lineNumber":86,"author":{"gitId":"stein414"},"content":"Adds an event."},{"lineNumber":87,"author":{"gitId":"stein414"},"content":""},{"lineNumber":88,"author":{"gitId":"stein414"},"content":"Format: `event DESCRIPTION /at DATE`"},{"lineNumber":89,"author":{"gitId":"stein414"},"content":""},{"lineNumber":90,"author":{"gitId":"stein414"},"content":"Examples:"},{"lineNumber":91,"author":{"gitId":"stein414"},"content":""},{"lineNumber":92,"author":{"gitId":"stein414"},"content":"* `event New Year celebration /at 2020-12-31` Adds an event with description `New Year celebration` and at date `2020-12-31`."},{"lineNumber":93,"author":{"gitId":"stein414"},"content":"* `event Drunk driving /at 2021-01-01` Adds an event with description `Drunk driving` and at date `2021-01-01`."},{"lineNumber":94,"author":{"gitId":"stein414"},"content":""},{"lineNumber":95,"author":{"gitId":"stein414"},"content":""},{"lineNumber":96,"author":{"gitId":"stein414"},"content":"### List all tasks : `list`"},{"lineNumber":97,"author":{"gitId":"stein414"},"content":""},{"lineNumber":98,"author":{"gitId":"stein414"},"content":"List all tasks in order of creation."},{"lineNumber":99,"author":{"gitId":"stein414"},"content":""},{"lineNumber":100,"author":{"gitId":"stein414"},"content":"Format: `list`"},{"lineNumber":101,"author":{"gitId":"stein414"},"content":""},{"lineNumber":102,"author":{"gitId":"stein414"},"content":""},{"lineNumber":103,"author":{"gitId":"stein414"},"content":"### Find a task : `find`"},{"lineNumber":104,"author":{"gitId":"stein414"},"content":""},{"lineNumber":105,"author":{"gitId":"stein414"},"content":"Finds tasks that matches the given query."},{"lineNumber":106,"author":{"gitId":"stein414"},"content":""},{"lineNumber":107,"author":{"gitId":"stein414"},"content":"Format: `find QUERY`"},{"lineNumber":108,"author":{"gitId":"stein414"},"content":""},{"lineNumber":109,"author":{"gitId":"stein414"},"content":"Example:"},{"lineNumber":110,"author":{"gitId":"stein414"},"content":""},{"lineNumber":111,"author":{"gitId":"stein414"},"content":"* `find birthday` returns `Buy birthday gift` and `Setup birthday venue`."},{"lineNumber":112,"author":{"gitId":"stein414"},"content":""},{"lineNumber":113,"author":{"gitId":"stein414"},"content":""},{"lineNumber":114,"author":{"gitId":"stein414"},"content":"### Set task as done : `done`"},{"lineNumber":115,"author":{"gitId":"stein414"},"content":""},{"lineNumber":116,"author":{"gitId":"stein414"},"content":"Sets a tasks as done."},{"lineNumber":117,"author":{"gitId":"stein414"},"content":""},{"lineNumber":118,"author":{"gitId":"stein414"},"content":"Format: `done INDEX`"},{"lineNumber":119,"author":{"gitId":"stein414"},"content":""},{"lineNumber":120,"author":{"gitId":"stein414"},"content":"Example:"},{"lineNumber":121,"author":{"gitId":"stein414"},"content":""},{"lineNumber":122,"author":{"gitId":"stein414"},"content":"* `done 1` Sets the 1st task in the list as done."},{"lineNumber":123,"author":{"gitId":"stein414"},"content":""},{"lineNumber":124,"author":{"gitId":"stein414"},"content":""},{"lineNumber":125,"author":{"gitId":"stein414"},"content":"### Delete a task : `delete`"},{"lineNumber":126,"author":{"gitId":"stein414"},"content":""},{"lineNumber":127,"author":{"gitId":"stein414"},"content":"Deletes a task."},{"lineNumber":128,"author":{"gitId":"stein414"},"content":""},{"lineNumber":129,"author":{"gitId":"stein414"},"content":"Format: `delete INDEX`"},{"lineNumber":130,"author":{"gitId":"stein414"},"content":""},{"lineNumber":131,"author":{"gitId":"stein414"},"content":"Example:"},{"lineNumber":132,"author":{"gitId":"stein414"},"content":""},{"lineNumber":133,"author":{"gitId":"stein414"},"content":"* `deletes 1` Deletes the 1st task in the list."},{"lineNumber":134,"author":{"gitId":"-"},"content":""},{"lineNumber":135,"author":{"gitId":"-"},"content":""},{"lineNumber":136,"author":{"gitId":"stein414"},"content":"### Exit Duke : `bye`"},{"lineNumber":137,"author":{"gitId":"-"},"content":""},{"lineNumber":138,"author":{"gitId":"stein414"},"content":"Exits Duke."},{"lineNumber":139,"author":{"gitId":"-"},"content":""},{"lineNumber":140,"author":{"gitId":"stein414"},"content":"Format: `bye`"},{"lineNumber":141,"author":{"gitId":"-"},"content":""},{"lineNumber":142,"author":{"gitId":"-"},"content":""},{"lineNumber":143,"author":{"gitId":"stein414"},"content":"## Acknowledgement"},{"lineNumber":144,"author":{"gitId":"-"},"content":""},{"lineNumber":145,"author":{"gitId":"stein414"},"content":"* Libraries used: [JavaFX](https://openjfx.io/), [Jackson](https://github.com/FasterXML/jackson), [JUnit5](https://github.com/junit-team/junit5)"}],"authorContributionMap":{"stein414":126,"-":19}},{"path":"setup/setup.sh","fileType":"sh","lines":[{"lineNumber":1,"author":{"gitId":"stein414"},"content":"#!/usr/bin/env bash"},{"lineNumber":2,"author":{"gitId":"stein414"},"content":"cp setup/pre-commit .git/hooks/pre-commit"},{"lineNumber":3,"author":{"gitId":"stein414"},"content":"git config --add checkstyle.jar \u0027config/checkstyle/checkstyle-8.39-all.jar\u0027"},{"lineNumber":4,"author":{"gitId":"stein414"},"content":"git config --add checkstyle.checkfile \u0027config/checkstyle/checkstyle.xml\u0027"},{"lineNumber":5,"author":{"gitId":"stein414"},"content":""}],"authorContributionMap":{"stein414":5}},{"path":"src/main/java/Launcher.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"stein414"},"content":"import javafx.application.Application;"},{"lineNumber":2,"author":{"gitId":"stein414"},"content":""},{"lineNumber":3,"author":{"gitId":"stein414"},"content":"/**"},{"lineNumber":4,"author":{"gitId":"stein414"},"content":" * Used to launch JavaFX"},{"lineNumber":5,"author":{"gitId":"stein414"},"content":" */"},{"lineNumber":6,"author":{"gitId":"stein414"},"content":"public class Launcher {"},{"lineNumber":7,"author":{"gitId":"stein414"},"content":"    public static void main(String[] args) {"},{"lineNumber":8,"author":{"gitId":"stein414"},"content":"        Application.launch(Main.class, args);"},{"lineNumber":9,"author":{"gitId":"stein414"},"content":"    }"},{"lineNumber":10,"author":{"gitId":"stein414"},"content":"}"}],"authorContributionMap":{"stein414":10}},{"path":"src/main/java/Main.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"stein414"},"content":"import java.io.IOException;"},{"lineNumber":2,"author":{"gitId":"stein414"},"content":""},{"lineNumber":3,"author":{"gitId":"stein414"},"content":"import duke.Duke;"},{"lineNumber":4,"author":{"gitId":"stein414"},"content":"import javafx.application.Application;"},{"lineNumber":5,"author":{"gitId":"stein414"},"content":"import javafx.fxml.FXMLLoader;"},{"lineNumber":6,"author":{"gitId":"stein414"},"content":"import javafx.scene.Scene;"},{"lineNumber":7,"author":{"gitId":"stein414"},"content":"import javafx.scene.layout.AnchorPane;"},{"lineNumber":8,"author":{"gitId":"stein414"},"content":"import javafx.stage.Stage;"},{"lineNumber":9,"author":{"gitId":"stein414"},"content":"import ui.controllers.MainWindow;"},{"lineNumber":10,"author":{"gitId":"stein414"},"content":""},{"lineNumber":11,"author":{"gitId":"stein414"},"content":"/**"},{"lineNumber":12,"author":{"gitId":"stein414"},"content":" * Launcher uses Main to starts GUI"},{"lineNumber":13,"author":{"gitId":"stein414"},"content":" */"},{"lineNumber":14,"author":{"gitId":"stein414"},"content":"public class Main extends Application {"},{"lineNumber":15,"author":{"gitId":"stein414"},"content":""},{"lineNumber":16,"author":{"gitId":"stein414"},"content":"    private Duke duke \u003d new Duke();"},{"lineNumber":17,"author":{"gitId":"stein414"},"content":""},{"lineNumber":18,"author":{"gitId":"stein414"},"content":"    /**"},{"lineNumber":19,"author":{"gitId":"stein414"},"content":"     * Starts the GUI for Duke JavaFX"},{"lineNumber":20,"author":{"gitId":"stein414"},"content":"     *"},{"lineNumber":21,"author":{"gitId":"stein414"},"content":"     * @param stage"},{"lineNumber":22,"author":{"gitId":"stein414"},"content":"     */"},{"lineNumber":23,"author":{"gitId":"stein414"},"content":"    @Override"},{"lineNumber":24,"author":{"gitId":"stein414"},"content":"    public void start(Stage stage) {"},{"lineNumber":25,"author":{"gitId":"stein414"},"content":"        try {"},{"lineNumber":26,"author":{"gitId":"stein414"},"content":"            duke.initialise();"},{"lineNumber":27,"author":{"gitId":"stein414"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(Main.class.getResource(\"/view/MainWindow.fxml\"));"},{"lineNumber":28,"author":{"gitId":"stein414"},"content":"            AnchorPane ap \u003d fxmlLoader.load();"},{"lineNumber":29,"author":{"gitId":"stein414"},"content":"            Scene scene \u003d new Scene(ap);"},{"lineNumber":30,"author":{"gitId":"stein414"},"content":""},{"lineNumber":31,"author":{"gitId":"stein414"},"content":"            stage.setTitle(\"Duke\");"},{"lineNumber":32,"author":{"gitId":"stein414"},"content":"            stage.setScene(scene);"},{"lineNumber":33,"author":{"gitId":"stein414"},"content":"            fxmlLoader.\u003cMainWindow\u003egetController().initialiseDuke(duke);"},{"lineNumber":34,"author":{"gitId":"stein414"},"content":"            stage.show();"},{"lineNumber":35,"author":{"gitId":"stein414"},"content":"        } catch (IOException e) {"},{"lineNumber":36,"author":{"gitId":"stein414"},"content":"            e.printStackTrace();"},{"lineNumber":37,"author":{"gitId":"stein414"},"content":"        }"},{"lineNumber":38,"author":{"gitId":"stein414"},"content":"    }"},{"lineNumber":39,"author":{"gitId":"stein414"},"content":"}"}],"authorContributionMap":{"stein414":39}},{"path":"src/main/java/commands/AddDeadlineCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"stein414"},"content":"package commands;"},{"lineNumber":2,"author":{"gitId":"stein414"},"content":""},{"lineNumber":3,"author":{"gitId":"stein414"},"content":"import data.Deadline;"},{"lineNumber":4,"author":{"gitId":"stein414"},"content":"import data.TaskList;"},{"lineNumber":5,"author":{"gitId":"stein414"},"content":"import ui.TextUi;"},{"lineNumber":6,"author":{"gitId":"stein414"},"content":""},{"lineNumber":7,"author":{"gitId":"stein414"},"content":"public class AddDeadlineCommand extends Command {"},{"lineNumber":8,"author":{"gitId":"stein414"},"content":"    public static final String COMMAND_TEXT \u003d \"deadline\";"},{"lineNumber":9,"author":{"gitId":"stein414"},"content":""},{"lineNumber":10,"author":{"gitId":"stein414"},"content":"    private Deadline deadline;"},{"lineNumber":11,"author":{"gitId":"stein414"},"content":""},{"lineNumber":12,"author":{"gitId":"stein414"},"content":"    public AddDeadlineCommand(Deadline deadline) {"},{"lineNumber":13,"author":{"gitId":"stein414"},"content":"        this.deadline \u003d deadline;"},{"lineNumber":14,"author":{"gitId":"stein414"},"content":"    }"},{"lineNumber":15,"author":{"gitId":"stein414"},"content":""},{"lineNumber":16,"author":{"gitId":"stein414"},"content":"    /**"},{"lineNumber":17,"author":{"gitId":"stein414"},"content":"     * Adds Deadline into given tasks and returns corresponding acknowledgement message"},{"lineNumber":18,"author":{"gitId":"stein414"},"content":"     *"},{"lineNumber":19,"author":{"gitId":"stein414"},"content":"     * @param tasks"},{"lineNumber":20,"author":{"gitId":"stein414"},"content":"     * @param ui"},{"lineNumber":21,"author":{"gitId":"stein414"},"content":"     * @return response message"},{"lineNumber":22,"author":{"gitId":"stein414"},"content":"     */"},{"lineNumber":23,"author":{"gitId":"stein414"},"content":"    @Override"},{"lineNumber":24,"author":{"gitId":"stein414"},"content":"    public String execute(TaskList tasks, TextUi ui) {"},{"lineNumber":25,"author":{"gitId":"stein414"},"content":"        tasks.add(deadline);"},{"lineNumber":26,"author":{"gitId":"stein414"},"content":"        return ui.getAddTaskMessage(deadline, tasks);"},{"lineNumber":27,"author":{"gitId":"stein414"},"content":"    }"},{"lineNumber":28,"author":{"gitId":"stein414"},"content":"}"}],"authorContributionMap":{"stein414":28}},{"path":"src/main/java/commands/AddEventCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"stein414"},"content":"package commands;"},{"lineNumber":2,"author":{"gitId":"stein414"},"content":""},{"lineNumber":3,"author":{"gitId":"stein414"},"content":"import data.Event;"},{"lineNumber":4,"author":{"gitId":"stein414"},"content":"import data.TaskList;"},{"lineNumber":5,"author":{"gitId":"stein414"},"content":"import ui.TextUi;"},{"lineNumber":6,"author":{"gitId":"stein414"},"content":""},{"lineNumber":7,"author":{"gitId":"stein414"},"content":"public class AddEventCommand extends Command {"},{"lineNumber":8,"author":{"gitId":"stein414"},"content":"    public static final String COMMAND_TEXT \u003d \"event\";"},{"lineNumber":9,"author":{"gitId":"stein414"},"content":""},{"lineNumber":10,"author":{"gitId":"stein414"},"content":"    private Event event;"},{"lineNumber":11,"author":{"gitId":"stein414"},"content":""},{"lineNumber":12,"author":{"gitId":"stein414"},"content":"    public AddEventCommand(Event event) {"},{"lineNumber":13,"author":{"gitId":"stein414"},"content":"        this.event \u003d event;"},{"lineNumber":14,"author":{"gitId":"stein414"},"content":"    }"},{"lineNumber":15,"author":{"gitId":"stein414"},"content":""},{"lineNumber":16,"author":{"gitId":"stein414"},"content":"    /**"},{"lineNumber":17,"author":{"gitId":"stein414"},"content":"     * Adds event into given tasks and returns acknowledgement message"},{"lineNumber":18,"author":{"gitId":"stein414"},"content":"     *"},{"lineNumber":19,"author":{"gitId":"stein414"},"content":"     * @param tasks"},{"lineNumber":20,"author":{"gitId":"stein414"},"content":"     * @param ui"},{"lineNumber":21,"author":{"gitId":"stein414"},"content":"     * @return response message"},{"lineNumber":22,"author":{"gitId":"stein414"},"content":"     */"},{"lineNumber":23,"author":{"gitId":"stein414"},"content":"    @Override"},{"lineNumber":24,"author":{"gitId":"stein414"},"content":"    public String execute(TaskList tasks, TextUi ui) {"},{"lineNumber":25,"author":{"gitId":"stein414"},"content":"        tasks.add(event);"},{"lineNumber":26,"author":{"gitId":"stein414"},"content":"        return ui.getAddTaskMessage(event, tasks);"},{"lineNumber":27,"author":{"gitId":"stein414"},"content":"    }"},{"lineNumber":28,"author":{"gitId":"stein414"},"content":"}"}],"authorContributionMap":{"stein414":28}},{"path":"src/main/java/commands/AddTodoCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"stein414"},"content":"package commands;"},{"lineNumber":2,"author":{"gitId":"stein414"},"content":""},{"lineNumber":3,"author":{"gitId":"stein414"},"content":"import data.TaskList;"},{"lineNumber":4,"author":{"gitId":"stein414"},"content":"import data.Todo;"},{"lineNumber":5,"author":{"gitId":"stein414"},"content":"import ui.TextUi;"},{"lineNumber":6,"author":{"gitId":"stein414"},"content":""},{"lineNumber":7,"author":{"gitId":"stein414"},"content":"public class AddTodoCommand extends Command {"},{"lineNumber":8,"author":{"gitId":"stein414"},"content":"    public static final String COMMAND_TEXT \u003d \"todo\";"},{"lineNumber":9,"author":{"gitId":"stein414"},"content":""},{"lineNumber":10,"author":{"gitId":"stein414"},"content":"    private Todo todo;"},{"lineNumber":11,"author":{"gitId":"stein414"},"content":""},{"lineNumber":12,"author":{"gitId":"stein414"},"content":"    public AddTodoCommand(Todo todo) {"},{"lineNumber":13,"author":{"gitId":"stein414"},"content":"        this.todo \u003d todo;"},{"lineNumber":14,"author":{"gitId":"stein414"},"content":"    }"},{"lineNumber":15,"author":{"gitId":"stein414"},"content":""},{"lineNumber":16,"author":{"gitId":"stein414"},"content":"    /**"},{"lineNumber":17,"author":{"gitId":"stein414"},"content":"     * Adds todo to given tasks and returns corresponding acknowledgement message"},{"lineNumber":18,"author":{"gitId":"stein414"},"content":"     *"},{"lineNumber":19,"author":{"gitId":"stein414"},"content":"     * @param tasks"},{"lineNumber":20,"author":{"gitId":"stein414"},"content":"     * @param ui"},{"lineNumber":21,"author":{"gitId":"stein414"},"content":"     * @return response message"},{"lineNumber":22,"author":{"gitId":"stein414"},"content":"     */"},{"lineNumber":23,"author":{"gitId":"stein414"},"content":"    @Override"},{"lineNumber":24,"author":{"gitId":"stein414"},"content":"    public String execute(TaskList tasks, TextUi ui) {"},{"lineNumber":25,"author":{"gitId":"stein414"},"content":"        tasks.add(todo);"},{"lineNumber":26,"author":{"gitId":"stein414"},"content":"        return ui.getAddTaskMessage(todo, tasks);"},{"lineNumber":27,"author":{"gitId":"stein414"},"content":"    }"},{"lineNumber":28,"author":{"gitId":"stein414"},"content":"}"}],"authorContributionMap":{"stein414":28}},{"path":"src/main/java/commands/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"stein414"},"content":"package commands;"},{"lineNumber":2,"author":{"gitId":"stein414"},"content":""},{"lineNumber":3,"author":{"gitId":"stein414"},"content":"import data.TaskList;"},{"lineNumber":4,"author":{"gitId":"stein414"},"content":"import ui.TextUi;"},{"lineNumber":5,"author":{"gitId":"stein414"},"content":""},{"lineNumber":6,"author":{"gitId":"stein414"},"content":"/**"},{"lineNumber":7,"author":{"gitId":"stein414"},"content":" * The base Command class that all commands will need to extend."},{"lineNumber":8,"author":{"gitId":"stein414"},"content":" * Only subclasses are meant to be used."},{"lineNumber":9,"author":{"gitId":"stein414"},"content":" */"},{"lineNumber":10,"author":{"gitId":"stein414"},"content":"public abstract class Command {"},{"lineNumber":11,"author":{"gitId":"stein414"},"content":"    protected Command() {"},{"lineNumber":12,"author":{"gitId":"stein414"},"content":"    }"},{"lineNumber":13,"author":{"gitId":"stein414"},"content":""},{"lineNumber":14,"author":{"gitId":"stein414"},"content":"    /**"},{"lineNumber":15,"author":{"gitId":"stein414"},"content":"     * Executes the command\u0027s logic"},{"lineNumber":16,"author":{"gitId":"stein414"},"content":"     *"},{"lineNumber":17,"author":{"gitId":"stein414"},"content":"     * @param tasks"},{"lineNumber":18,"author":{"gitId":"stein414"},"content":"     * @param ui"},{"lineNumber":19,"author":{"gitId":"stein414"},"content":"     * @return response message"},{"lineNumber":20,"author":{"gitId":"stein414"},"content":"     */"},{"lineNumber":21,"author":{"gitId":"stein414"},"content":"    public abstract String execute(TaskList tasks, TextUi ui);"},{"lineNumber":22,"author":{"gitId":"stein414"},"content":"}"}],"authorContributionMap":{"stein414":22}},{"path":"src/main/java/commands/DeleteCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"stein414"},"content":"package commands;"},{"lineNumber":2,"author":{"gitId":"stein414"},"content":""},{"lineNumber":3,"author":{"gitId":"stein414"},"content":"import data.Task;"},{"lineNumber":4,"author":{"gitId":"stein414"},"content":"import data.TaskList;"},{"lineNumber":5,"author":{"gitId":"stein414"},"content":"import ui.TextUi;"},{"lineNumber":6,"author":{"gitId":"stein414"},"content":""},{"lineNumber":7,"author":{"gitId":"stein414"},"content":"public class DeleteCommand extends Command {"},{"lineNumber":8,"author":{"gitId":"stein414"},"content":"    public static final String COMMAND_TEXT \u003d \"delete\";"},{"lineNumber":9,"author":{"gitId":"stein414"},"content":""},{"lineNumber":10,"author":{"gitId":"stein414"},"content":"    private int indexToDelete;"},{"lineNumber":11,"author":{"gitId":"stein414"},"content":""},{"lineNumber":12,"author":{"gitId":"stein414"},"content":"    public DeleteCommand(int indexToDelete) {"},{"lineNumber":13,"author":{"gitId":"stein414"},"content":"        this.indexToDelete \u003d indexToDelete;"},{"lineNumber":14,"author":{"gitId":"stein414"},"content":"    }"},{"lineNumber":15,"author":{"gitId":"stein414"},"content":""},{"lineNumber":16,"author":{"gitId":"stein414"},"content":"    /**"},{"lineNumber":17,"author":{"gitId":"stein414"},"content":"     * Deletes the selected task from the given tasks and returns the corresponding acknowlegement message"},{"lineNumber":18,"author":{"gitId":"stein414"},"content":"     *"},{"lineNumber":19,"author":{"gitId":"stein414"},"content":"     * @param tasks"},{"lineNumber":20,"author":{"gitId":"stein414"},"content":"     * @param ui"},{"lineNumber":21,"author":{"gitId":"stein414"},"content":"     * @return response message"},{"lineNumber":22,"author":{"gitId":"stein414"},"content":"     */"},{"lineNumber":23,"author":{"gitId":"stein414"},"content":"    @Override"},{"lineNumber":24,"author":{"gitId":"stein414"},"content":"    public String execute(TaskList tasks, TextUi ui) {"},{"lineNumber":25,"author":{"gitId":"stein414"},"content":"        if (indexToDelete \u003c 0 || indexToDelete \u003e\u003d tasks.size()) {"},{"lineNumber":26,"author":{"gitId":"stein414"},"content":"            return ui.getFormattedMessage(\"Invalid number.\");"},{"lineNumber":27,"author":{"gitId":"stein414"},"content":"        }"},{"lineNumber":28,"author":{"gitId":"stein414"},"content":""},{"lineNumber":29,"author":{"gitId":"stein414"},"content":"        Task taskToDelete \u003d tasks.get(indexToDelete);"},{"lineNumber":30,"author":{"gitId":"stein414"},"content":"        tasks.remove(indexToDelete);"},{"lineNumber":31,"author":{"gitId":"stein414"},"content":"        return ui.getDeleteTaskMessage(taskToDelete, tasks);"},{"lineNumber":32,"author":{"gitId":"stein414"},"content":"    }"},{"lineNumber":33,"author":{"gitId":"stein414"},"content":"}"}],"authorContributionMap":{"stein414":33}},{"path":"src/main/java/commands/DoneCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"stein414"},"content":"package commands;"},{"lineNumber":2,"author":{"gitId":"stein414"},"content":""},{"lineNumber":3,"author":{"gitId":"stein414"},"content":"import data.Task;"},{"lineNumber":4,"author":{"gitId":"stein414"},"content":"import data.TaskList;"},{"lineNumber":5,"author":{"gitId":"stein414"},"content":"import ui.TextUi;"},{"lineNumber":6,"author":{"gitId":"stein414"},"content":""},{"lineNumber":7,"author":{"gitId":"stein414"},"content":"public class DoneCommand extends Command {"},{"lineNumber":8,"author":{"gitId":"stein414"},"content":"    public static final String COMMAND_TEXT \u003d \"done\";"},{"lineNumber":9,"author":{"gitId":"stein414"},"content":""},{"lineNumber":10,"author":{"gitId":"stein414"},"content":"    private int indexToSetDone;"},{"lineNumber":11,"author":{"gitId":"stein414"},"content":""},{"lineNumber":12,"author":{"gitId":"stein414"},"content":"    public DoneCommand(int indexToSetDone) {"},{"lineNumber":13,"author":{"gitId":"stein414"},"content":"        this.indexToSetDone \u003d indexToSetDone;"},{"lineNumber":14,"author":{"gitId":"stein414"},"content":"    }"},{"lineNumber":15,"author":{"gitId":"stein414"},"content":""},{"lineNumber":16,"author":{"gitId":"stein414"},"content":"    /**"},{"lineNumber":17,"author":{"gitId":"stein414"},"content":"     * Marks the selected task as done and returns the corresponding acknowledgement message"},{"lineNumber":18,"author":{"gitId":"stein414"},"content":"     *"},{"lineNumber":19,"author":{"gitId":"stein414"},"content":"     * @param tasks"},{"lineNumber":20,"author":{"gitId":"stein414"},"content":"     * @param ui"},{"lineNumber":21,"author":{"gitId":"stein414"},"content":"     * @return response message"},{"lineNumber":22,"author":{"gitId":"stein414"},"content":"     */"},{"lineNumber":23,"author":{"gitId":"stein414"},"content":"    @Override"},{"lineNumber":24,"author":{"gitId":"stein414"},"content":"    public String execute(TaskList tasks, TextUi ui) {"},{"lineNumber":25,"author":{"gitId":"stein414"},"content":"        if (indexToSetDone \u003c 0 || indexToSetDone \u003e\u003d tasks.size()) {"},{"lineNumber":26,"author":{"gitId":"stein414"},"content":"            return ui.getFormattedMessage(\"Invalid number.\");"},{"lineNumber":27,"author":{"gitId":"stein414"},"content":"        }"},{"lineNumber":28,"author":{"gitId":"stein414"},"content":""},{"lineNumber":29,"author":{"gitId":"stein414"},"content":"        Task task \u003d tasks.get(indexToSetDone);"},{"lineNumber":30,"author":{"gitId":"stein414"},"content":"        task.markAsDone();"},{"lineNumber":31,"author":{"gitId":"stein414"},"content":"        return ui.getDoneTaskMessage(task);"},{"lineNumber":32,"author":{"gitId":"stein414"},"content":"    }"},{"lineNumber":33,"author":{"gitId":"stein414"},"content":"}"}],"authorContributionMap":{"stein414":33}},{"path":"src/main/java/commands/ExitCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"stein414"},"content":"package commands;"},{"lineNumber":2,"author":{"gitId":"stein414"},"content":""},{"lineNumber":3,"author":{"gitId":"stein414"},"content":"import data.TaskList;"},{"lineNumber":4,"author":{"gitId":"stein414"},"content":"import ui.TextUi;"},{"lineNumber":5,"author":{"gitId":"stein414"},"content":""},{"lineNumber":6,"author":{"gitId":"stein414"},"content":"public class ExitCommand extends Command {"},{"lineNumber":7,"author":{"gitId":"stein414"},"content":"    public static final String COMMAND_TEXT \u003d \"bye\";"},{"lineNumber":8,"author":{"gitId":"stein414"},"content":""},{"lineNumber":9,"author":{"gitId":"stein414"},"content":"    /**"},{"lineNumber":10,"author":{"gitId":"stein414"},"content":"     * Returns exiting message"},{"lineNumber":11,"author":{"gitId":"stein414"},"content":"     *"},{"lineNumber":12,"author":{"gitId":"stein414"},"content":"     * @param tasks"},{"lineNumber":13,"author":{"gitId":"stein414"},"content":"     * @param ui"},{"lineNumber":14,"author":{"gitId":"stein414"},"content":"     * @return response message"},{"lineNumber":15,"author":{"gitId":"stein414"},"content":"     */"},{"lineNumber":16,"author":{"gitId":"stein414"},"content":"    @Override"},{"lineNumber":17,"author":{"gitId":"stein414"},"content":"    public String execute(TaskList tasks, TextUi ui) {"},{"lineNumber":18,"author":{"gitId":"stein414"},"content":"        return ui.getFormattedMessage(\"Bye. Hope to see you again soon!\");"},{"lineNumber":19,"author":{"gitId":"stein414"},"content":"    }"},{"lineNumber":20,"author":{"gitId":"stein414"},"content":""},{"lineNumber":21,"author":{"gitId":"stein414"},"content":"    /**"},{"lineNumber":22,"author":{"gitId":"stein414"},"content":"     * Checks if given command is an ExitCommand"},{"lineNumber":23,"author":{"gitId":"stein414"},"content":"     *"},{"lineNumber":24,"author":{"gitId":"stein414"},"content":"     * @param command"},{"lineNumber":25,"author":{"gitId":"stein414"},"content":"     * @return if command is exit boolean"},{"lineNumber":26,"author":{"gitId":"stein414"},"content":"     */"},{"lineNumber":27,"author":{"gitId":"stein414"},"content":"    public static boolean isExit(Command command) {"},{"lineNumber":28,"author":{"gitId":"stein414"},"content":"        return command instanceof ExitCommand;"},{"lineNumber":29,"author":{"gitId":"stein414"},"content":"    }"},{"lineNumber":30,"author":{"gitId":"stein414"},"content":"}"}],"authorContributionMap":{"stein414":30}},{"path":"src/main/java/commands/FindCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"stein414"},"content":"package commands;"},{"lineNumber":2,"author":{"gitId":"stein414"},"content":""},{"lineNumber":3,"author":{"gitId":"stein414"},"content":"import java.util.stream.Collectors;"},{"lineNumber":4,"author":{"gitId":"stein414"},"content":""},{"lineNumber":5,"author":{"gitId":"stein414"},"content":"import data.TaskList;"},{"lineNumber":6,"author":{"gitId":"stein414"},"content":"import ui.TextUi;"},{"lineNumber":7,"author":{"gitId":"stein414"},"content":""},{"lineNumber":8,"author":{"gitId":"stein414"},"content":"public class FindCommand extends Command {"},{"lineNumber":9,"author":{"gitId":"stein414"},"content":"    public static final String COMMAND_TEXT \u003d \"find\";"},{"lineNumber":10,"author":{"gitId":"stein414"},"content":""},{"lineNumber":11,"author":{"gitId":"stein414"},"content":"    private String query;"},{"lineNumber":12,"author":{"gitId":"stein414"},"content":""},{"lineNumber":13,"author":{"gitId":"stein414"},"content":"    /**"},{"lineNumber":14,"author":{"gitId":"stein414"},"content":"     * Creates a Find Command with the given query"},{"lineNumber":15,"author":{"gitId":"stein414"},"content":"     *"},{"lineNumber":16,"author":{"gitId":"stein414"},"content":"     * @param query"},{"lineNumber":17,"author":{"gitId":"stein414"},"content":"     */"},{"lineNumber":18,"author":{"gitId":"stein414"},"content":"    public FindCommand(String query) {"},{"lineNumber":19,"author":{"gitId":"stein414"},"content":"        this.query \u003d query;"},{"lineNumber":20,"author":{"gitId":"stein414"},"content":"    }"},{"lineNumber":21,"author":{"gitId":"stein414"},"content":""},{"lineNumber":22,"author":{"gitId":"stein414"},"content":"    /**"},{"lineNumber":23,"author":{"gitId":"stein414"},"content":"     * Returns the tasks message that matches the query"},{"lineNumber":24,"author":{"gitId":"stein414"},"content":"     *"},{"lineNumber":25,"author":{"gitId":"stein414"},"content":"     * @param tasks"},{"lineNumber":26,"author":{"gitId":"stein414"},"content":"     * @param ui"},{"lineNumber":27,"author":{"gitId":"stein414"},"content":"     * @return response message"},{"lineNumber":28,"author":{"gitId":"stein414"},"content":"     */"},{"lineNumber":29,"author":{"gitId":"stein414"},"content":"    @Override"},{"lineNumber":30,"author":{"gitId":"stein414"},"content":"    public String execute(TaskList tasks, TextUi ui) {"},{"lineNumber":31,"author":{"gitId":"stein414"},"content":"        TaskList filteredTasks \u003d tasks.stream()"},{"lineNumber":32,"author":{"gitId":"stein414"},"content":"                .filter(t -\u003e t.getDescription().contains(query))"},{"lineNumber":33,"author":{"gitId":"stein414"},"content":"                .collect(Collectors.toCollection(TaskList::new));"},{"lineNumber":34,"author":{"gitId":"stein414"},"content":""},{"lineNumber":35,"author":{"gitId":"stein414"},"content":"        return ui.getTasksMessage(filteredTasks);"},{"lineNumber":36,"author":{"gitId":"stein414"},"content":"    }"},{"lineNumber":37,"author":{"gitId":"stein414"},"content":"}"}],"authorContributionMap":{"stein414":37}},{"path":"src/main/java/commands/ListCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"stein414"},"content":"package commands;"},{"lineNumber":2,"author":{"gitId":"stein414"},"content":""},{"lineNumber":3,"author":{"gitId":"stein414"},"content":"import data.TaskList;"},{"lineNumber":4,"author":{"gitId":"stein414"},"content":"import ui.TextUi;"},{"lineNumber":5,"author":{"gitId":"stein414"},"content":""},{"lineNumber":6,"author":{"gitId":"stein414"},"content":"public class ListCommand extends Command {"},{"lineNumber":7,"author":{"gitId":"stein414"},"content":"    public static final String COMMAND_TEXT \u003d \"list\";"},{"lineNumber":8,"author":{"gitId":"stein414"},"content":""},{"lineNumber":9,"author":{"gitId":"stein414"},"content":"    /**"},{"lineNumber":10,"author":{"gitId":"stein414"},"content":"     * Returns the tasks message"},{"lineNumber":11,"author":{"gitId":"stein414"},"content":"     *"},{"lineNumber":12,"author":{"gitId":"stein414"},"content":"     * @param tasks"},{"lineNumber":13,"author":{"gitId":"stein414"},"content":"     * @param ui"},{"lineNumber":14,"author":{"gitId":"stein414"},"content":"     * @return response message"},{"lineNumber":15,"author":{"gitId":"stein414"},"content":"     */"},{"lineNumber":16,"author":{"gitId":"stein414"},"content":"    @Override"},{"lineNumber":17,"author":{"gitId":"stein414"},"content":"    public String execute(TaskList tasks, TextUi ui) {"},{"lineNumber":18,"author":{"gitId":"stein414"},"content":"        return ui.getTasksMessage(tasks);"},{"lineNumber":19,"author":{"gitId":"stein414"},"content":"    }"},{"lineNumber":20,"author":{"gitId":"stein414"},"content":"}"}],"authorContributionMap":{"stein414":20}},{"path":"src/main/java/data/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"stein414"},"content":"package data;"},{"lineNumber":2,"author":{"gitId":"stein414"},"content":""},{"lineNumber":3,"author":{"gitId":"stein414"},"content":"import java.time.LocalDate;"},{"lineNumber":4,"author":{"gitId":"stein414"},"content":"import java.time.format.DateTimeFormatter;"},{"lineNumber":5,"author":{"gitId":"stein414"},"content":""},{"lineNumber":6,"author":{"gitId":"stein414"},"content":"import com.fasterxml.jackson.annotation.JsonProperty;"},{"lineNumber":7,"author":{"gitId":"stein414"},"content":""},{"lineNumber":8,"author":{"gitId":"stein414"},"content":"public class Deadline extends Task {"},{"lineNumber":9,"author":{"gitId":"stein414"},"content":""},{"lineNumber":10,"author":{"gitId":"stein414"},"content":"    @JsonProperty"},{"lineNumber":11,"author":{"gitId":"stein414"},"content":"    protected LocalDate by;"},{"lineNumber":12,"author":{"gitId":"stein414"},"content":"    private String localDateOutputFormat \u003d \"MMM d yyyy\";"},{"lineNumber":13,"author":{"gitId":"stein414"},"content":""},{"lineNumber":14,"author":{"gitId":"stein414"},"content":"    private Deadline() {"},{"lineNumber":15,"author":{"gitId":"stein414"},"content":"    }"},{"lineNumber":16,"author":{"gitId":"stein414"},"content":""},{"lineNumber":17,"author":{"gitId":"stein414"},"content":"    /**"},{"lineNumber":18,"author":{"gitId":"stein414"},"content":"     * Deadline constructor"},{"lineNumber":19,"author":{"gitId":"stein414"},"content":"     *"},{"lineNumber":20,"author":{"gitId":"stein414"},"content":"     * @param description"},{"lineNumber":21,"author":{"gitId":"stein414"},"content":"     * @param by"},{"lineNumber":22,"author":{"gitId":"stein414"},"content":"     */"},{"lineNumber":23,"author":{"gitId":"stein414"},"content":"    public Deadline(String description, TagList tags, LocalDate by) {"},{"lineNumber":24,"author":{"gitId":"stein414"},"content":"        super(description, tags);"},{"lineNumber":25,"author":{"gitId":"stein414"},"content":"        this.by \u003d by;"},{"lineNumber":26,"author":{"gitId":"stein414"},"content":"    }"},{"lineNumber":27,"author":{"gitId":"stein414"},"content":""},{"lineNumber":28,"author":{"gitId":"stein414"},"content":"    /**"},{"lineNumber":29,"author":{"gitId":"stein414"},"content":"     * Returns a Deadline with status icon and \u0027by\u0027 date"},{"lineNumber":30,"author":{"gitId":"stein414"},"content":"     *"},{"lineNumber":31,"author":{"gitId":"stein414"},"content":"     * @return Deadline string"},{"lineNumber":32,"author":{"gitId":"stein414"},"content":"     */"},{"lineNumber":33,"author":{"gitId":"stein414"},"content":"    @Override"},{"lineNumber":34,"author":{"gitId":"stein414"},"content":"    public String toString() {"},{"lineNumber":35,"author":{"gitId":"stein414"},"content":"        return \"[D]\" + super.toString() + \" (by: \" + by.format(DateTimeFormatter.ofPattern(localDateOutputFormat))"},{"lineNumber":36,"author":{"gitId":"stein414"},"content":"                + \")\";"},{"lineNumber":37,"author":{"gitId":"stein414"},"content":"    }"},{"lineNumber":38,"author":{"gitId":"stein414"},"content":"}"}],"authorContributionMap":{"stein414":38}},{"path":"src/main/java/data/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"stein414"},"content":"package data;"},{"lineNumber":2,"author":{"gitId":"stein414"},"content":""},{"lineNumber":3,"author":{"gitId":"stein414"},"content":"import java.time.LocalDate;"},{"lineNumber":4,"author":{"gitId":"stein414"},"content":"import java.time.format.DateTimeFormatter;"},{"lineNumber":5,"author":{"gitId":"stein414"},"content":""},{"lineNumber":6,"author":{"gitId":"stein414"},"content":"import com.fasterxml.jackson.annotation.JsonProperty;"},{"lineNumber":7,"author":{"gitId":"stein414"},"content":""},{"lineNumber":8,"author":{"gitId":"stein414"},"content":"public class Event extends Task {"},{"lineNumber":9,"author":{"gitId":"stein414"},"content":""},{"lineNumber":10,"author":{"gitId":"stein414"},"content":"    @JsonProperty"},{"lineNumber":11,"author":{"gitId":"stein414"},"content":"    protected LocalDate at;"},{"lineNumber":12,"author":{"gitId":"stein414"},"content":"    private String localDateOutputFormat \u003d \"MMM d yyyy\";"},{"lineNumber":13,"author":{"gitId":"stein414"},"content":""},{"lineNumber":14,"author":{"gitId":"stein414"},"content":"    private Event() {"},{"lineNumber":15,"author":{"gitId":"stein414"},"content":"    }"},{"lineNumber":16,"author":{"gitId":"stein414"},"content":""},{"lineNumber":17,"author":{"gitId":"stein414"},"content":"    /**"},{"lineNumber":18,"author":{"gitId":"stein414"},"content":"     * Event (Task) constructor"},{"lineNumber":19,"author":{"gitId":"stein414"},"content":"     *"},{"lineNumber":20,"author":{"gitId":"stein414"},"content":"     * @param description"},{"lineNumber":21,"author":{"gitId":"stein414"},"content":"     * @param at"},{"lineNumber":22,"author":{"gitId":"stein414"},"content":"     */"},{"lineNumber":23,"author":{"gitId":"stein414"},"content":"    public Event(String description, TagList tags, LocalDate at) {"},{"lineNumber":24,"author":{"gitId":"stein414"},"content":"        super(description, tags);"},{"lineNumber":25,"author":{"gitId":"stein414"},"content":"        this.at \u003d at;"},{"lineNumber":26,"author":{"gitId":"stein414"},"content":"    }"},{"lineNumber":27,"author":{"gitId":"stein414"},"content":""},{"lineNumber":28,"author":{"gitId":"stein414"},"content":"    /**"},{"lineNumber":29,"author":{"gitId":"stein414"},"content":"     * Returns a Event with status icon and \u0027at\u0027 date"},{"lineNumber":30,"author":{"gitId":"stein414"},"content":"     *"},{"lineNumber":31,"author":{"gitId":"stein414"},"content":"     * @return Event string"},{"lineNumber":32,"author":{"gitId":"stein414"},"content":"     */"},{"lineNumber":33,"author":{"gitId":"stein414"},"content":"    @Override"},{"lineNumber":34,"author":{"gitId":"stein414"},"content":"    public String toString() {"},{"lineNumber":35,"author":{"gitId":"stein414"},"content":"        return \"[E]\" + super.toString() + \" (at: \" + at.format(DateTimeFormatter.ofPattern(localDateOutputFormat))"},{"lineNumber":36,"author":{"gitId":"stein414"},"content":"                + \")\";"},{"lineNumber":37,"author":{"gitId":"stein414"},"content":"    }"},{"lineNumber":38,"author":{"gitId":"stein414"},"content":"}"}],"authorContributionMap":{"stein414":38}},{"path":"src/main/java/data/Tag.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"stein414"},"content":"package data;"},{"lineNumber":2,"author":{"gitId":"stein414"},"content":""},{"lineNumber":3,"author":{"gitId":"stein414"},"content":"import com.fasterxml.jackson.annotation.JsonProperty;"},{"lineNumber":4,"author":{"gitId":"stein414"},"content":""},{"lineNumber":5,"author":{"gitId":"stein414"},"content":"/**"},{"lineNumber":6,"author":{"gitId":"stein414"},"content":" * Tag is for tagging tasks"},{"lineNumber":7,"author":{"gitId":"stein414"},"content":" */"},{"lineNumber":8,"author":{"gitId":"stein414"},"content":"public class Tag {"},{"lineNumber":9,"author":{"gitId":"stein414"},"content":""},{"lineNumber":10,"author":{"gitId":"stein414"},"content":"    @JsonProperty"},{"lineNumber":11,"author":{"gitId":"stein414"},"content":"    private String name;"},{"lineNumber":12,"author":{"gitId":"stein414"},"content":""},{"lineNumber":13,"author":{"gitId":"stein414"},"content":"    private Tag() {"},{"lineNumber":14,"author":{"gitId":"stein414"},"content":"    }"},{"lineNumber":15,"author":{"gitId":"stein414"},"content":""},{"lineNumber":16,"author":{"gitId":"stein414"},"content":"    /**"},{"lineNumber":17,"author":{"gitId":"stein414"},"content":"     * Constructs a Tag with the given name"},{"lineNumber":18,"author":{"gitId":"stein414"},"content":"     */"},{"lineNumber":19,"author":{"gitId":"stein414"},"content":"    public Tag(String name) {"},{"lineNumber":20,"author":{"gitId":"stein414"},"content":"        this.name \u003d name;"},{"lineNumber":21,"author":{"gitId":"stein414"},"content":"    }"},{"lineNumber":22,"author":{"gitId":"stein414"},"content":""},{"lineNumber":23,"author":{"gitId":"stein414"},"content":"    /**"},{"lineNumber":24,"author":{"gitId":"stein414"},"content":"     * Returns the name of the tag"},{"lineNumber":25,"author":{"gitId":"stein414"},"content":"     *"},{"lineNumber":26,"author":{"gitId":"stein414"},"content":"     * @return name"},{"lineNumber":27,"author":{"gitId":"stein414"},"content":"     */"},{"lineNumber":28,"author":{"gitId":"stein414"},"content":"    public String getName() {"},{"lineNumber":29,"author":{"gitId":"stein414"},"content":"        return this.name;"},{"lineNumber":30,"author":{"gitId":"stein414"},"content":"    }"},{"lineNumber":31,"author":{"gitId":"stein414"},"content":""},{"lineNumber":32,"author":{"gitId":"stein414"},"content":"    /**"},{"lineNumber":33,"author":{"gitId":"stein414"},"content":"     * Sets the name of the tag with the given name"},{"lineNumber":34,"author":{"gitId":"stein414"},"content":"     *"},{"lineNumber":35,"author":{"gitId":"stein414"},"content":"     * @param name"},{"lineNumber":36,"author":{"gitId":"stein414"},"content":"     */"},{"lineNumber":37,"author":{"gitId":"stein414"},"content":"    public void setName(String name) {"},{"lineNumber":38,"author":{"gitId":"stein414"},"content":"        this.name \u003d name;"},{"lineNumber":39,"author":{"gitId":"stein414"},"content":"    }"},{"lineNumber":40,"author":{"gitId":"stein414"},"content":""},{"lineNumber":41,"author":{"gitId":"stein414"},"content":"    /**"},{"lineNumber":42,"author":{"gitId":"stein414"},"content":"     * Returns a boolean stating if the given object is equal to the current object"},{"lineNumber":43,"author":{"gitId":"stein414"},"content":"     *"},{"lineNumber":44,"author":{"gitId":"stein414"},"content":"     * @return equality"},{"lineNumber":45,"author":{"gitId":"stein414"},"content":"     */"},{"lineNumber":46,"author":{"gitId":"stein414"},"content":"    @Override"},{"lineNumber":47,"author":{"gitId":"stein414"},"content":"    public boolean equals(Object o) {"},{"lineNumber":48,"author":{"gitId":"stein414"},"content":"        if (o \u003d\u003d this) {"},{"lineNumber":49,"author":{"gitId":"stein414"},"content":"            return true;"},{"lineNumber":50,"author":{"gitId":"stein414"},"content":"        }"},{"lineNumber":51,"author":{"gitId":"stein414"},"content":""},{"lineNumber":52,"author":{"gitId":"stein414"},"content":"        if (!(o instanceof Tag)) {"},{"lineNumber":53,"author":{"gitId":"stein414"},"content":"            return false;"},{"lineNumber":54,"author":{"gitId":"stein414"},"content":"        }"},{"lineNumber":55,"author":{"gitId":"stein414"},"content":""},{"lineNumber":56,"author":{"gitId":"stein414"},"content":"        Tag tag \u003d (Tag) o;"},{"lineNumber":57,"author":{"gitId":"stein414"},"content":""},{"lineNumber":58,"author":{"gitId":"stein414"},"content":"        return name.equals(tag.name);"},{"lineNumber":59,"author":{"gitId":"stein414"},"content":"    }"},{"lineNumber":60,"author":{"gitId":"stein414"},"content":""},{"lineNumber":61,"author":{"gitId":"stein414"},"content":"    /**"},{"lineNumber":62,"author":{"gitId":"stein414"},"content":"     * Returns the hashcode of name"},{"lineNumber":63,"author":{"gitId":"stein414"},"content":"     *"},{"lineNumber":64,"author":{"gitId":"stein414"},"content":"     * @return hashCode"},{"lineNumber":65,"author":{"gitId":"stein414"},"content":"     */"},{"lineNumber":66,"author":{"gitId":"stein414"},"content":"    @Override"},{"lineNumber":67,"author":{"gitId":"stein414"},"content":"    public int hashCode() {"},{"lineNumber":68,"author":{"gitId":"stein414"},"content":"        return name.hashCode();"},{"lineNumber":69,"author":{"gitId":"stein414"},"content":"    }"},{"lineNumber":70,"author":{"gitId":"stein414"},"content":"}"}],"authorContributionMap":{"stein414":70}},{"path":"src/main/java/data/TagList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"stein414"},"content":"package data;"},{"lineNumber":2,"author":{"gitId":"stein414"},"content":""},{"lineNumber":3,"author":{"gitId":"stein414"},"content":"import java.util.ArrayList;"},{"lineNumber":4,"author":{"gitId":"stein414"},"content":""},{"lineNumber":5,"author":{"gitId":"stein414"},"content":"/**"},{"lineNumber":6,"author":{"gitId":"stein414"},"content":" * TagList extends List so as to leverage Jackson\u0027s (de)serialization. Jackson"},{"lineNumber":7,"author":{"gitId":"stein414"},"content":" * need the type information but a generic list will lose the type at runtime"},{"lineNumber":8,"author":{"gitId":"stein414"},"content":" * due to erasure, thus a concrete class would allow Jackson to know what type"},{"lineNumber":9,"author":{"gitId":"stein414"},"content":" * it is at runtime, thus being able to serialise our tasks."},{"lineNumber":10,"author":{"gitId":"stein414"},"content":" */"},{"lineNumber":11,"author":{"gitId":"stein414"},"content":"public class TagList extends ArrayList\u003cTag\u003e {"},{"lineNumber":12,"author":{"gitId":"stein414"},"content":"}"}],"authorContributionMap":{"stein414":12}},{"path":"src/main/java/data/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"stein414"},"content":"package data;"},{"lineNumber":2,"author":{"gitId":"stein414"},"content":""},{"lineNumber":3,"author":{"gitId":"stein414"},"content":"import com.fasterxml.jackson.annotation.JsonIgnore;"},{"lineNumber":4,"author":{"gitId":"stein414"},"content":"import com.fasterxml.jackson.annotation.JsonProperty;"},{"lineNumber":5,"author":{"gitId":"stein414"},"content":"import com.fasterxml.jackson.annotation.JsonSubTypes;"},{"lineNumber":6,"author":{"gitId":"stein414"},"content":"import com.fasterxml.jackson.annotation.JsonSubTypes.Type;"},{"lineNumber":7,"author":{"gitId":"stein414"},"content":"import com.fasterxml.jackson.annotation.JsonTypeInfo;"},{"lineNumber":8,"author":{"gitId":"stein414"},"content":""},{"lineNumber":9,"author":{"gitId":"stein414"},"content":"/**"},{"lineNumber":10,"author":{"gitId":"stein414"},"content":" * Task is the parent class for all other types of tasks. The JsonTypeInfo is to"},{"lineNumber":11,"author":{"gitId":"stein414"},"content":" * enable Jackson to properly serialize and deserialize with json. The property"},{"lineNumber":12,"author":{"gitId":"stein414"},"content":" * \"d\" acts as a discrimator for the type of task in json so that Jackson can"},{"lineNumber":13,"author":{"gitId":"stein414"},"content":" * reconstruct the correct task type from json."},{"lineNumber":14,"author":{"gitId":"stein414"},"content":" */"},{"lineNumber":15,"author":{"gitId":"stein414"},"content":"@JsonTypeInfo(use \u003d JsonTypeInfo.Id.NAME, include \u003d JsonTypeInfo.As.PROPERTY, property \u003d \"d\")"},{"lineNumber":16,"author":{"gitId":"stein414"},"content":"@JsonSubTypes({ @Type(value \u003d Todo.class, name \u003d \"Todo\"), @Type(value \u003d Deadline.class, name \u003d \"Deadline\"),"},{"lineNumber":17,"author":{"gitId":"stein414"},"content":"        @Type(value \u003d Event.class, name \u003d \"Event\") })"},{"lineNumber":18,"author":{"gitId":"stein414"},"content":"public class Task {"},{"lineNumber":19,"author":{"gitId":"stein414"},"content":""},{"lineNumber":20,"author":{"gitId":"stein414"},"content":"    @JsonProperty"},{"lineNumber":21,"author":{"gitId":"stein414"},"content":"    protected boolean isDone;"},{"lineNumber":22,"author":{"gitId":"stein414"},"content":"    @JsonProperty"},{"lineNumber":23,"author":{"gitId":"stein414"},"content":"    protected String description;"},{"lineNumber":24,"author":{"gitId":"stein414"},"content":"    @JsonProperty"},{"lineNumber":25,"author":{"gitId":"stein414"},"content":"    protected TagList tags;"},{"lineNumber":26,"author":{"gitId":"stein414"},"content":""},{"lineNumber":27,"author":{"gitId":"stein414"},"content":"    protected Task() {"},{"lineNumber":28,"author":{"gitId":"stein414"},"content":"        tags \u003d new TagList();"},{"lineNumber":29,"author":{"gitId":"stein414"},"content":"    }"},{"lineNumber":30,"author":{"gitId":"stein414"},"content":""},{"lineNumber":31,"author":{"gitId":"stein414"},"content":"    /**"},{"lineNumber":32,"author":{"gitId":"stein414"},"content":"     * Task constructor"},{"lineNumber":33,"author":{"gitId":"stein414"},"content":"     *"},{"lineNumber":34,"author":{"gitId":"stein414"},"content":"     * @param description"},{"lineNumber":35,"author":{"gitId":"stein414"},"content":"     */"},{"lineNumber":36,"author":{"gitId":"stein414"},"content":"    public Task(String description, TagList tags) {"},{"lineNumber":37,"author":{"gitId":"stein414"},"content":"        this.description \u003d description;"},{"lineNumber":38,"author":{"gitId":"stein414"},"content":"        this.tags \u003d tags;"},{"lineNumber":39,"author":{"gitId":"stein414"},"content":"        this.isDone \u003d false;"},{"lineNumber":40,"author":{"gitId":"stein414"},"content":"    }"},{"lineNumber":41,"author":{"gitId":"stein414"},"content":""},{"lineNumber":42,"author":{"gitId":"stein414"},"content":"    /**"},{"lineNumber":43,"author":{"gitId":"stein414"},"content":"     * Gets the status icon char for the task state"},{"lineNumber":44,"author":{"gitId":"stein414"},"content":"     *"},{"lineNumber":45,"author":{"gitId":"stein414"},"content":"     * @return status icon"},{"lineNumber":46,"author":{"gitId":"stein414"},"content":"     */"},{"lineNumber":47,"author":{"gitId":"stein414"},"content":"    @JsonIgnore"},{"lineNumber":48,"author":{"gitId":"stein414"},"content":"    public String getStatusIcon() {"},{"lineNumber":49,"author":{"gitId":"stein414"},"content":"        return isDone ? \"\\u2713\" : \"\\u2718\"; // return tick or X symbols"},{"lineNumber":50,"author":{"gitId":"stein414"},"content":"    }"},{"lineNumber":51,"author":{"gitId":"stein414"},"content":""},{"lineNumber":52,"author":{"gitId":"stein414"},"content":"    /**"},{"lineNumber":53,"author":{"gitId":"stein414"},"content":"     * return if the tasks is done"},{"lineNumber":54,"author":{"gitId":"stein414"},"content":"     *"},{"lineNumber":55,"author":{"gitId":"stein414"},"content":"     * @return task\u0027s isDone value"},{"lineNumber":56,"author":{"gitId":"stein414"},"content":"     */"},{"lineNumber":57,"author":{"gitId":"stein414"},"content":"    @JsonIgnore"},{"lineNumber":58,"author":{"gitId":"stein414"},"content":"    public boolean isDone() {"},{"lineNumber":59,"author":{"gitId":"stein414"},"content":"        return isDone;"},{"lineNumber":60,"author":{"gitId":"stein414"},"content":"    }"},{"lineNumber":61,"author":{"gitId":"stein414"},"content":""},{"lineNumber":62,"author":{"gitId":"stein414"},"content":"    /**"},{"lineNumber":63,"author":{"gitId":"stein414"},"content":"     * Marks the tasks as done"},{"lineNumber":64,"author":{"gitId":"stein414"},"content":"     */"},{"lineNumber":65,"author":{"gitId":"stein414"},"content":"    public void markAsDone() {"},{"lineNumber":66,"author":{"gitId":"stein414"},"content":"        this.isDone \u003d true;"},{"lineNumber":67,"author":{"gitId":"stein414"},"content":"    }"},{"lineNumber":68,"author":{"gitId":"stein414"},"content":""},{"lineNumber":69,"author":{"gitId":"stein414"},"content":"    /**"},{"lineNumber":70,"author":{"gitId":"stein414"},"content":"     * Gets the description of the task"},{"lineNumber":71,"author":{"gitId":"stein414"},"content":"     *"},{"lineNumber":72,"author":{"gitId":"stein414"},"content":"     * @return description of task"},{"lineNumber":73,"author":{"gitId":"stein414"},"content":"     */"},{"lineNumber":74,"author":{"gitId":"stein414"},"content":"    public String getDescription() {"},{"lineNumber":75,"author":{"gitId":"stein414"},"content":"        return description;"},{"lineNumber":76,"author":{"gitId":"stein414"},"content":"    }"},{"lineNumber":77,"author":{"gitId":"stein414"},"content":""},{"lineNumber":78,"author":{"gitId":"stein414"},"content":"    /**"},{"lineNumber":79,"author":{"gitId":"stein414"},"content":"     * Sets the description of the task"},{"lineNumber":80,"author":{"gitId":"stein414"},"content":"     *"},{"lineNumber":81,"author":{"gitId":"stein414"},"content":"     * @param description"},{"lineNumber":82,"author":{"gitId":"stein414"},"content":"     */"},{"lineNumber":83,"author":{"gitId":"stein414"},"content":"    public void setDescription(String description) {"},{"lineNumber":84,"author":{"gitId":"stein414"},"content":"        this.description \u003d description;"},{"lineNumber":85,"author":{"gitId":"stein414"},"content":"    }"},{"lineNumber":86,"author":{"gitId":"stein414"},"content":""},{"lineNumber":87,"author":{"gitId":"stein414"},"content":"    /**"},{"lineNumber":88,"author":{"gitId":"stein414"},"content":"     * Gets the tags of the task"},{"lineNumber":89,"author":{"gitId":"stein414"},"content":"     *"},{"lineNumber":90,"author":{"gitId":"stein414"},"content":"     * @return tags"},{"lineNumber":91,"author":{"gitId":"stein414"},"content":"     */"},{"lineNumber":92,"author":{"gitId":"stein414"},"content":"    public TagList getTags() {"},{"lineNumber":93,"author":{"gitId":"stein414"},"content":"        return tags;"},{"lineNumber":94,"author":{"gitId":"stein414"},"content":"    }"},{"lineNumber":95,"author":{"gitId":"stein414"},"content":""},{"lineNumber":96,"author":{"gitId":"stein414"},"content":"    /**"},{"lineNumber":97,"author":{"gitId":"stein414"},"content":"     * Returns a task as a string with status icon"},{"lineNumber":98,"author":{"gitId":"stein414"},"content":"     *"},{"lineNumber":99,"author":{"gitId":"stein414"},"content":"     * @return task string"},{"lineNumber":100,"author":{"gitId":"stein414"},"content":"     */"},{"lineNumber":101,"author":{"gitId":"stein414"},"content":"    @Override"},{"lineNumber":102,"author":{"gitId":"stein414"},"content":"    public String toString() {"},{"lineNumber":103,"author":{"gitId":"stein414"},"content":"        StringBuilder stringBuilder \u003d new StringBuilder();"},{"lineNumber":104,"author":{"gitId":"stein414"},"content":"        stringBuilder.append(\"[\").append(getStatusIcon()).append(\"] \").append(getDescription());"},{"lineNumber":105,"author":{"gitId":"stein414"},"content":""},{"lineNumber":106,"author":{"gitId":"stein414"},"content":"        for (Tag tag : tags) {"},{"lineNumber":107,"author":{"gitId":"stein414"},"content":"            stringBuilder.append(\" #\").append(tag.getName());"},{"lineNumber":108,"author":{"gitId":"stein414"},"content":"        }"},{"lineNumber":109,"author":{"gitId":"stein414"},"content":""},{"lineNumber":110,"author":{"gitId":"stein414"},"content":"        return stringBuilder.toString();"},{"lineNumber":111,"author":{"gitId":"stein414"},"content":"    }"},{"lineNumber":112,"author":{"gitId":"stein414"},"content":"}"}],"authorContributionMap":{"stein414":112}},{"path":"src/main/java/data/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"stein414"},"content":"package data;"},{"lineNumber":2,"author":{"gitId":"stein414"},"content":""},{"lineNumber":3,"author":{"gitId":"stein414"},"content":"import java.util.ArrayList;"},{"lineNumber":4,"author":{"gitId":"stein414"},"content":""},{"lineNumber":5,"author":{"gitId":"stein414"},"content":"/**"},{"lineNumber":6,"author":{"gitId":"stein414"},"content":" * TaskList extends List so as to leverage Jackson\u0027s (de)serialization."},{"lineNumber":7,"author":{"gitId":"stein414"},"content":" * Jackson need the type information but a generic list will lose the type at runtime"},{"lineNumber":8,"author":{"gitId":"stein414"},"content":" * due to erasure, thus a concrete class would allow Jackson to know what type it is"},{"lineNumber":9,"author":{"gitId":"stein414"},"content":" * at runtime, thus being able to serialise our tasks."},{"lineNumber":10,"author":{"gitId":"stein414"},"content":" */"},{"lineNumber":11,"author":{"gitId":"stein414"},"content":"public class TaskList extends ArrayList\u003cTask\u003e {}"}],"authorContributionMap":{"stein414":11}},{"path":"src/main/java/data/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"stein414"},"content":"package data;"},{"lineNumber":2,"author":{"gitId":"stein414"},"content":""},{"lineNumber":3,"author":{"gitId":"stein414"},"content":"public class Todo extends Task {"},{"lineNumber":4,"author":{"gitId":"stein414"},"content":""},{"lineNumber":5,"author":{"gitId":"stein414"},"content":"    private Todo() {"},{"lineNumber":6,"author":{"gitId":"stein414"},"content":"        super();"},{"lineNumber":7,"author":{"gitId":"stein414"},"content":"    }"},{"lineNumber":8,"author":{"gitId":"stein414"},"content":""},{"lineNumber":9,"author":{"gitId":"stein414"},"content":"    /**"},{"lineNumber":10,"author":{"gitId":"stein414"},"content":"     * Todo constructor"},{"lineNumber":11,"author":{"gitId":"stein414"},"content":"     *"},{"lineNumber":12,"author":{"gitId":"stein414"},"content":"     * @param description"},{"lineNumber":13,"author":{"gitId":"stein414"},"content":"     */"},{"lineNumber":14,"author":{"gitId":"stein414"},"content":"    public Todo(String description, TagList tags) {"},{"lineNumber":15,"author":{"gitId":"stein414"},"content":"        super(description, tags);"},{"lineNumber":16,"author":{"gitId":"stein414"},"content":"    }"},{"lineNumber":17,"author":{"gitId":"stein414"},"content":""},{"lineNumber":18,"author":{"gitId":"stein414"},"content":"    /**"},{"lineNumber":19,"author":{"gitId":"stein414"},"content":"     * Returns the Todo with status icon"},{"lineNumber":20,"author":{"gitId":"stein414"},"content":"     *"},{"lineNumber":21,"author":{"gitId":"stein414"},"content":"     * @return Todo string"},{"lineNumber":22,"author":{"gitId":"stein414"},"content":"     */"},{"lineNumber":23,"author":{"gitId":"stein414"},"content":"    @Override"},{"lineNumber":24,"author":{"gitId":"stein414"},"content":"    public String toString() {"},{"lineNumber":25,"author":{"gitId":"stein414"},"content":"        return \"[T]\" + super.toString();"},{"lineNumber":26,"author":{"gitId":"stein414"},"content":"    }"},{"lineNumber":27,"author":{"gitId":"stein414"},"content":"}"}],"authorContributionMap":{"stein414":27}},{"path":"src/main/java/duke/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"stein414"},"content":"package duke;"},{"lineNumber":2,"author":{"gitId":"stein414"},"content":""},{"lineNumber":3,"author":{"gitId":"stein414"},"content":"import java.io.IOException;"},{"lineNumber":4,"author":{"gitId":"stein414"},"content":""},{"lineNumber":5,"author":{"gitId":"stein414"},"content":"import commands.Command;"},{"lineNumber":6,"author":{"gitId":"stein414"},"content":"import commands.ExitCommand;"},{"lineNumber":7,"author":{"gitId":"stein414"},"content":"import data.TaskList;"},{"lineNumber":8,"author":{"gitId":"stein414"},"content":"import parser.Parser;"},{"lineNumber":9,"author":{"gitId":"stein414"},"content":"import parser.ParserException;"},{"lineNumber":10,"author":{"gitId":"stein414"},"content":"import storage.StorageFile;"},{"lineNumber":11,"author":{"gitId":"stein414"},"content":"import ui.TextUi;"},{"lineNumber":12,"author":{"gitId":"stein414"},"content":""},{"lineNumber":13,"author":{"gitId":"stein414"},"content":"public class Duke {"},{"lineNumber":14,"author":{"gitId":"stein414"},"content":"    private TextUi ui;"},{"lineNumber":15,"author":{"gitId":"stein414"},"content":"    private Parser parser;"},{"lineNumber":16,"author":{"gitId":"stein414"},"content":"    private StorageFile storage;"},{"lineNumber":17,"author":{"gitId":"stein414"},"content":"    private TaskList tasks;"},{"lineNumber":18,"author":{"gitId":"stein414"},"content":""},{"lineNumber":19,"author":{"gitId":"stein414"},"content":"    /**"},{"lineNumber":20,"author":{"gitId":"stein414"},"content":"     * Creates a duke instance that reads from"},{"lineNumber":21,"author":{"gitId":"stein414"},"content":"     */"},{"lineNumber":22,"author":{"gitId":"stein414"},"content":"    public Duke() {"},{"lineNumber":23,"author":{"gitId":"stein414"},"content":"        ui \u003d new TextUi();"},{"lineNumber":24,"author":{"gitId":"stein414"},"content":"        parser \u003d new Parser();"},{"lineNumber":25,"author":{"gitId":"stein414"},"content":"        storage \u003d new StorageFile();"},{"lineNumber":26,"author":{"gitId":"stein414"},"content":"    }"},{"lineNumber":27,"author":{"gitId":"stein414"},"content":""},{"lineNumber":28,"author":{"gitId":"stein414"},"content":"    /**"},{"lineNumber":29,"author":{"gitId":"stein414"},"content":"     * Initialises duke with tasks from the savefile"},{"lineNumber":30,"author":{"gitId":"stein414"},"content":"     *"},{"lineNumber":31,"author":{"gitId":"stein414"},"content":"     * @throws IOException"},{"lineNumber":32,"author":{"gitId":"stein414"},"content":"     */"},{"lineNumber":33,"author":{"gitId":"stein414"},"content":"    public void initialise() throws IOException {"},{"lineNumber":34,"author":{"gitId":"stein414"},"content":"        tasks \u003d storage.load();"},{"lineNumber":35,"author":{"gitId":"stein414"},"content":"    }"},{"lineNumber":36,"author":{"gitId":"stein414"},"content":""},{"lineNumber":37,"author":{"gitId":"stein414"},"content":"    /**"},{"lineNumber":38,"author":{"gitId":"stein414"},"content":"     * Returns the greeting message"},{"lineNumber":39,"author":{"gitId":"stein414"},"content":"     *"},{"lineNumber":40,"author":{"gitId":"stein414"},"content":"     * @return greetingMessage"},{"lineNumber":41,"author":{"gitId":"stein414"},"content":"     */"},{"lineNumber":42,"author":{"gitId":"stein414"},"content":"    public String getGreetingMessage() {"},{"lineNumber":43,"author":{"gitId":"stein414"},"content":"        return ui.getGreetingMessage();"},{"lineNumber":44,"author":{"gitId":"stein414"},"content":"    }"},{"lineNumber":45,"author":{"gitId":"stein414"},"content":""},{"lineNumber":46,"author":{"gitId":"stein414"},"content":"    /**"},{"lineNumber":47,"author":{"gitId":"stein414"},"content":"     * Gets the response for a given input"},{"lineNumber":48,"author":{"gitId":"stein414"},"content":"     *"},{"lineNumber":49,"author":{"gitId":"stein414"},"content":"     * @param input"},{"lineNumber":50,"author":{"gitId":"stein414"},"content":"     * @return DukeResponse with message"},{"lineNumber":51,"author":{"gitId":"stein414"},"content":"     * @throws IOException"},{"lineNumber":52,"author":{"gitId":"stein414"},"content":"     */"},{"lineNumber":53,"author":{"gitId":"stein414"},"content":"    public DukeResponse getResponse(String input) throws IOException {"},{"lineNumber":54,"author":{"gitId":"stein414"},"content":"        Command command \u003d null;"},{"lineNumber":55,"author":{"gitId":"stein414"},"content":"        String message;"},{"lineNumber":56,"author":{"gitId":"stein414"},"content":"        try {"},{"lineNumber":57,"author":{"gitId":"stein414"},"content":"            command \u003d parser.parseCommand(input);"},{"lineNumber":58,"author":{"gitId":"stein414"},"content":"            message \u003d command.execute(tasks, ui);"},{"lineNumber":59,"author":{"gitId":"stein414"},"content":"        } catch (ParserException pe) {"},{"lineNumber":60,"author":{"gitId":"stein414"},"content":"            message \u003d pe.getMessage();"},{"lineNumber":61,"author":{"gitId":"stein414"},"content":"        }"},{"lineNumber":62,"author":{"gitId":"stein414"},"content":""},{"lineNumber":63,"author":{"gitId":"stein414"},"content":"        storage.save(tasks);"},{"lineNumber":64,"author":{"gitId":"stein414"},"content":""},{"lineNumber":65,"author":{"gitId":"stein414"},"content":"        DukeResponse response \u003d new DukeResponse(message);"},{"lineNumber":66,"author":{"gitId":"stein414"},"content":""},{"lineNumber":67,"author":{"gitId":"stein414"},"content":"        if (ExitCommand.isExit(command)) {"},{"lineNumber":68,"author":{"gitId":"stein414"},"content":"            response.setExit(true);"},{"lineNumber":69,"author":{"gitId":"stein414"},"content":"        }"},{"lineNumber":70,"author":{"gitId":"stein414"},"content":""},{"lineNumber":71,"author":{"gitId":"stein414"},"content":"        return response;"},{"lineNumber":72,"author":{"gitId":"stein414"},"content":"    }"},{"lineNumber":73,"author":{"gitId":"stein414"},"content":"}"}],"authorContributionMap":{"stein414":73}},{"path":"src/main/java/duke/DukeResponse.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"stein414"},"content":"package duke;"},{"lineNumber":2,"author":{"gitId":"stein414"},"content":""},{"lineNumber":3,"author":{"gitId":"stein414"},"content":"public class DukeResponse {"},{"lineNumber":4,"author":{"gitId":"stein414"},"content":"    private String message;"},{"lineNumber":5,"author":{"gitId":"stein414"},"content":"    private boolean isExit;"},{"lineNumber":6,"author":{"gitId":"stein414"},"content":""},{"lineNumber":7,"author":{"gitId":"stein414"},"content":"    /**"},{"lineNumber":8,"author":{"gitId":"stein414"},"content":"     * Creates a DukeResponse with the given message and default isExit of \u0027false\u0027"},{"lineNumber":9,"author":{"gitId":"stein414"},"content":"     *"},{"lineNumber":10,"author":{"gitId":"stein414"},"content":"     * @param message"},{"lineNumber":11,"author":{"gitId":"stein414"},"content":"     */"},{"lineNumber":12,"author":{"gitId":"stein414"},"content":"    public DukeResponse(String message) {"},{"lineNumber":13,"author":{"gitId":"stein414"},"content":"        this.message \u003d message;"},{"lineNumber":14,"author":{"gitId":"stein414"},"content":"        this.isExit \u003d false;"},{"lineNumber":15,"author":{"gitId":"stein414"},"content":"    }"},{"lineNumber":16,"author":{"gitId":"stein414"},"content":""},{"lineNumber":17,"author":{"gitId":"stein414"},"content":"    /**"},{"lineNumber":18,"author":{"gitId":"stein414"},"content":"     * returns the response message"},{"lineNumber":19,"author":{"gitId":"stein414"},"content":"     *"},{"lineNumber":20,"author":{"gitId":"stein414"},"content":"     * @return message"},{"lineNumber":21,"author":{"gitId":"stein414"},"content":"     */"},{"lineNumber":22,"author":{"gitId":"stein414"},"content":"    public String getMessage() {"},{"lineNumber":23,"author":{"gitId":"stein414"},"content":"        return message;"},{"lineNumber":24,"author":{"gitId":"stein414"},"content":"    }"},{"lineNumber":25,"author":{"gitId":"stein414"},"content":""},{"lineNumber":26,"author":{"gitId":"stein414"},"content":"    /**"},{"lineNumber":27,"author":{"gitId":"stein414"},"content":"     * Returns a boolean stating if the user wants to exit"},{"lineNumber":28,"author":{"gitId":"stein414"},"content":"     *"},{"lineNumber":29,"author":{"gitId":"stein414"},"content":"     * @return isExit flag"},{"lineNumber":30,"author":{"gitId":"stein414"},"content":"     */"},{"lineNumber":31,"author":{"gitId":"stein414"},"content":"    public boolean isExit() {"},{"lineNumber":32,"author":{"gitId":"stein414"},"content":"        return isExit;"},{"lineNumber":33,"author":{"gitId":"stein414"},"content":"    }"},{"lineNumber":34,"author":{"gitId":"stein414"},"content":""},{"lineNumber":35,"author":{"gitId":"stein414"},"content":"    /**"},{"lineNumber":36,"author":{"gitId":"stein414"},"content":"     * Sets the isExit flag to indicate if the user wants to exit"},{"lineNumber":37,"author":{"gitId":"stein414"},"content":"     *"},{"lineNumber":38,"author":{"gitId":"stein414"},"content":"     * @param isExit"},{"lineNumber":39,"author":{"gitId":"stein414"},"content":"     */"},{"lineNumber":40,"author":{"gitId":"stein414"},"content":"    public void setExit(boolean isExit) {"},{"lineNumber":41,"author":{"gitId":"stein414"},"content":"        this.isExit \u003d isExit;"},{"lineNumber":42,"author":{"gitId":"stein414"},"content":"    }"},{"lineNumber":43,"author":{"gitId":"stein414"},"content":"}"}],"authorContributionMap":{"stein414":43}},{"path":"src/main/java/parser/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"stein414"},"content":"package parser;"},{"lineNumber":2,"author":{"gitId":"stein414"},"content":""},{"lineNumber":3,"author":{"gitId":"stein414"},"content":"import java.time.DateTimeException;"},{"lineNumber":4,"author":{"gitId":"stein414"},"content":"import java.time.LocalDate;"},{"lineNumber":5,"author":{"gitId":"stein414"},"content":""},{"lineNumber":6,"author":{"gitId":"stein414"},"content":"import commands.AddDeadlineCommand;"},{"lineNumber":7,"author":{"gitId":"stein414"},"content":"import commands.AddEventCommand;"},{"lineNumber":8,"author":{"gitId":"stein414"},"content":"import commands.AddTodoCommand;"},{"lineNumber":9,"author":{"gitId":"stein414"},"content":"import commands.Command;"},{"lineNumber":10,"author":{"gitId":"stein414"},"content":"import commands.DeleteCommand;"},{"lineNumber":11,"author":{"gitId":"stein414"},"content":"import commands.DoneCommand;"},{"lineNumber":12,"author":{"gitId":"stein414"},"content":"import commands.ExitCommand;"},{"lineNumber":13,"author":{"gitId":"stein414"},"content":"import commands.FindCommand;"},{"lineNumber":14,"author":{"gitId":"stein414"},"content":"import commands.ListCommand;"},{"lineNumber":15,"author":{"gitId":"stein414"},"content":"import data.Deadline;"},{"lineNumber":16,"author":{"gitId":"stein414"},"content":"import data.Event;"},{"lineNumber":17,"author":{"gitId":"stein414"},"content":"import data.Tag;"},{"lineNumber":18,"author":{"gitId":"stein414"},"content":"import data.TagList;"},{"lineNumber":19,"author":{"gitId":"stein414"},"content":"import data.Todo;"},{"lineNumber":20,"author":{"gitId":"stein414"},"content":""},{"lineNumber":21,"author":{"gitId":"stein414"},"content":"public class Parser {"},{"lineNumber":22,"author":{"gitId":"stein414"},"content":"    /**"},{"lineNumber":23,"author":{"gitId":"stein414"},"content":"     * Parses the given input to get the correct command"},{"lineNumber":24,"author":{"gitId":"stein414"},"content":"     *"},{"lineNumber":25,"author":{"gitId":"stein414"},"content":"     * @param input"},{"lineNumber":26,"author":{"gitId":"stein414"},"content":"     * @return Command"},{"lineNumber":27,"author":{"gitId":"stein414"},"content":"     * @throws ParserException"},{"lineNumber":28,"author":{"gitId":"stein414"},"content":"     */"},{"lineNumber":29,"author":{"gitId":"stein414"},"content":"    public Command parseCommand(String input) throws ParserException {"},{"lineNumber":30,"author":{"gitId":"stein414"},"content":"        String[] tokens \u003d input.split(\" \");"},{"lineNumber":31,"author":{"gitId":"stein414"},"content":"        String commandWord \u003d tokens[0];"},{"lineNumber":32,"author":{"gitId":"stein414"},"content":""},{"lineNumber":33,"author":{"gitId":"stein414"},"content":"        switch (commandWord) {"},{"lineNumber":34,"author":{"gitId":"stein414"},"content":"        case AddTodoCommand.COMMAND_TEXT:"},{"lineNumber":35,"author":{"gitId":"stein414"},"content":"            return prepareAddTodo(input, tokens);"},{"lineNumber":36,"author":{"gitId":"stein414"},"content":"        case AddDeadlineCommand.COMMAND_TEXT:"},{"lineNumber":37,"author":{"gitId":"stein414"},"content":"            return prepareAddDeadline(input, tokens);"},{"lineNumber":38,"author":{"gitId":"stein414"},"content":"        case AddEventCommand.COMMAND_TEXT:"},{"lineNumber":39,"author":{"gitId":"stein414"},"content":"            return prepareAddEvent(input, tokens);"},{"lineNumber":40,"author":{"gitId":"stein414"},"content":"        case ListCommand.COMMAND_TEXT:"},{"lineNumber":41,"author":{"gitId":"stein414"},"content":"            return new ListCommand();"},{"lineNumber":42,"author":{"gitId":"stein414"},"content":"        case DoneCommand.COMMAND_TEXT:"},{"lineNumber":43,"author":{"gitId":"stein414"},"content":"            return prepareDone(input, tokens);"},{"lineNumber":44,"author":{"gitId":"stein414"},"content":"        case DeleteCommand.COMMAND_TEXT:"},{"lineNumber":45,"author":{"gitId":"stein414"},"content":"            return prepareDelete(input, tokens);"},{"lineNumber":46,"author":{"gitId":"stein414"},"content":"        case FindCommand.COMMAND_TEXT:"},{"lineNumber":47,"author":{"gitId":"stein414"},"content":"            return prepareFind(input, tokens);"},{"lineNumber":48,"author":{"gitId":"stein414"},"content":"        case ExitCommand.COMMAND_TEXT:"},{"lineNumber":49,"author":{"gitId":"stein414"},"content":"            return new ExitCommand();"},{"lineNumber":50,"author":{"gitId":"stein414"},"content":"        default:"},{"lineNumber":51,"author":{"gitId":"stein414"},"content":"            throw new ParserException(\"Unknown command.\");"},{"lineNumber":52,"author":{"gitId":"stein414"},"content":"        }"},{"lineNumber":53,"author":{"gitId":"stein414"},"content":"    }"},{"lineNumber":54,"author":{"gitId":"stein414"},"content":""},{"lineNumber":55,"author":{"gitId":"stein414"},"content":"    private Command prepareAddTodo(String input, String[] tokens) throws ParserException {"},{"lineNumber":56,"author":{"gitId":"stein414"},"content":"        int minTokens \u003d 2;"},{"lineNumber":57,"author":{"gitId":"stein414"},"content":""},{"lineNumber":58,"author":{"gitId":"stein414"},"content":"        if (tokens.length \u003c minTokens) {"},{"lineNumber":59,"author":{"gitId":"stein414"},"content":"            throw new ParserException(\"Todo requires a description.\");"},{"lineNumber":60,"author":{"gitId":"stein414"},"content":"        }"},{"lineNumber":61,"author":{"gitId":"stein414"},"content":""},{"lineNumber":62,"author":{"gitId":"stein414"},"content":"        String description \u003d getDescription(input);"},{"lineNumber":63,"author":{"gitId":"stein414"},"content":"        TagList tags \u003d getTags(input);"},{"lineNumber":64,"author":{"gitId":"stein414"},"content":""},{"lineNumber":65,"author":{"gitId":"stein414"},"content":"        Todo todo \u003d new Todo(description, tags);"},{"lineNumber":66,"author":{"gitId":"stein414"},"content":"        return new AddTodoCommand(todo);"},{"lineNumber":67,"author":{"gitId":"stein414"},"content":"    }"},{"lineNumber":68,"author":{"gitId":"stein414"},"content":""},{"lineNumber":69,"author":{"gitId":"stein414"},"content":"    private Command prepareAddDeadline(String input, String[] tokens) throws ParserException {"},{"lineNumber":70,"author":{"gitId":"stein414"},"content":"        String bySwitch \u003d \"/by\";"},{"lineNumber":71,"author":{"gitId":"stein414"},"content":""},{"lineNumber":72,"author":{"gitId":"stein414"},"content":"        String description \u003d getDescription(input);"},{"lineNumber":73,"author":{"gitId":"stein414"},"content":""},{"lineNumber":74,"author":{"gitId":"stein414"},"content":"        TagList tags \u003d getTags(input);"},{"lineNumber":75,"author":{"gitId":"stein414"},"content":""},{"lineNumber":76,"author":{"gitId":"stein414"},"content":"        LocalDate by;"},{"lineNumber":77,"author":{"gitId":"stein414"},"content":"        try {"},{"lineNumber":78,"author":{"gitId":"stein414"},"content":"            by \u003d getDate(input, bySwitch);"},{"lineNumber":79,"author":{"gitId":"stein414"},"content":"        } catch (DateTimeException dte) {"},{"lineNumber":80,"author":{"gitId":"stein414"},"content":"            throw new ParserException(\"Deadline /by needs to be in a valid format (e.g. yyyy-MM-dd)\");"},{"lineNumber":81,"author":{"gitId":"stein414"},"content":"        }"},{"lineNumber":82,"author":{"gitId":"stein414"},"content":""},{"lineNumber":83,"author":{"gitId":"stein414"},"content":"        if (by \u003d\u003d null) {"},{"lineNumber":84,"author":{"gitId":"stein414"},"content":"            throw new ParserException(\"Deadline requires \u0027/by\u0027 to be specified.\");"},{"lineNumber":85,"author":{"gitId":"stein414"},"content":"        }"},{"lineNumber":86,"author":{"gitId":"stein414"},"content":""},{"lineNumber":87,"author":{"gitId":"stein414"},"content":"        Deadline deadline \u003d new Deadline(description, tags, by);"},{"lineNumber":88,"author":{"gitId":"stein414"},"content":"        return new AddDeadlineCommand(deadline);"},{"lineNumber":89,"author":{"gitId":"stein414"},"content":"    }"},{"lineNumber":90,"author":{"gitId":"stein414"},"content":""},{"lineNumber":91,"author":{"gitId":"stein414"},"content":"    private Command prepareAddEvent(String input, String[] tokens) throws ParserException {"},{"lineNumber":92,"author":{"gitId":"stein414"},"content":"        String atSwitch \u003d \"/at\";"},{"lineNumber":93,"author":{"gitId":"stein414"},"content":""},{"lineNumber":94,"author":{"gitId":"stein414"},"content":"        String description \u003d getDescription(input);"},{"lineNumber":95,"author":{"gitId":"stein414"},"content":""},{"lineNumber":96,"author":{"gitId":"stein414"},"content":"        TagList tags \u003d getTags(input);"},{"lineNumber":97,"author":{"gitId":"stein414"},"content":""},{"lineNumber":98,"author":{"gitId":"stein414"},"content":"        LocalDate at;"},{"lineNumber":99,"author":{"gitId":"stein414"},"content":"        try {"},{"lineNumber":100,"author":{"gitId":"stein414"},"content":"            at \u003d getDate(input, atSwitch);"},{"lineNumber":101,"author":{"gitId":"stein414"},"content":"        } catch (DateTimeException dte) {"},{"lineNumber":102,"author":{"gitId":"stein414"},"content":"            throw new ParserException(\"Event /at needs to be in a valid format (e.g. yyyy-MM-dd)\");"},{"lineNumber":103,"author":{"gitId":"stein414"},"content":"        }"},{"lineNumber":104,"author":{"gitId":"stein414"},"content":""},{"lineNumber":105,"author":{"gitId":"stein414"},"content":"        if (at \u003d\u003d null) {"},{"lineNumber":106,"author":{"gitId":"stein414"},"content":"            throw new ParserException(\"Event requires \u0027/at\u0027 to be specified.\");"},{"lineNumber":107,"author":{"gitId":"stein414"},"content":"        }"},{"lineNumber":108,"author":{"gitId":"stein414"},"content":""},{"lineNumber":109,"author":{"gitId":"stein414"},"content":"        Event event \u003d new Event(description, tags, at);"},{"lineNumber":110,"author":{"gitId":"stein414"},"content":"        return new AddEventCommand(event);"},{"lineNumber":111,"author":{"gitId":"stein414"},"content":"    }"},{"lineNumber":112,"author":{"gitId":"stein414"},"content":""},{"lineNumber":113,"author":{"gitId":"stein414"},"content":"    private Command prepareDone(String input, String[] tokens) throws ParserException {"},{"lineNumber":114,"author":{"gitId":"stein414"},"content":"        int minTokens \u003d 2;"},{"lineNumber":115,"author":{"gitId":"stein414"},"content":""},{"lineNumber":116,"author":{"gitId":"stein414"},"content":"        if (tokens.length \u003c minTokens) {"},{"lineNumber":117,"author":{"gitId":"stein414"},"content":"            throw new ParserException(\"Please specify a number\");"},{"lineNumber":118,"author":{"gitId":"stein414"},"content":"        }"},{"lineNumber":119,"author":{"gitId":"stein414"},"content":""},{"lineNumber":120,"author":{"gitId":"stein414"},"content":"        int selection;"},{"lineNumber":121,"author":{"gitId":"stein414"},"content":"        try {"},{"lineNumber":122,"author":{"gitId":"stein414"},"content":"            selection \u003d Integer.parseInt(tokens[1]);"},{"lineNumber":123,"author":{"gitId":"stein414"},"content":"        } catch (NumberFormatException nfe) {"},{"lineNumber":124,"author":{"gitId":"stein414"},"content":"            throw new ParserException(\"Invalid number\");"},{"lineNumber":125,"author":{"gitId":"stein414"},"content":"        }"},{"lineNumber":126,"author":{"gitId":"stein414"},"content":""},{"lineNumber":127,"author":{"gitId":"stein414"},"content":"        return new DoneCommand(selection - 1);"},{"lineNumber":128,"author":{"gitId":"stein414"},"content":"    }"},{"lineNumber":129,"author":{"gitId":"stein414"},"content":""},{"lineNumber":130,"author":{"gitId":"stein414"},"content":"    private Command prepareDelete(String input, String[] tokens) throws ParserException {"},{"lineNumber":131,"author":{"gitId":"stein414"},"content":"        int minTokens \u003d 2;"},{"lineNumber":132,"author":{"gitId":"stein414"},"content":""},{"lineNumber":133,"author":{"gitId":"stein414"},"content":"        if (tokens.length \u003c minTokens) {"},{"lineNumber":134,"author":{"gitId":"stein414"},"content":"            throw new ParserException(\"Please specify a number\");"},{"lineNumber":135,"author":{"gitId":"stein414"},"content":"        }"},{"lineNumber":136,"author":{"gitId":"stein414"},"content":""},{"lineNumber":137,"author":{"gitId":"stein414"},"content":"        int selection;"},{"lineNumber":138,"author":{"gitId":"stein414"},"content":"        try {"},{"lineNumber":139,"author":{"gitId":"stein414"},"content":"            selection \u003d Integer.parseInt(tokens[1]);"},{"lineNumber":140,"author":{"gitId":"stein414"},"content":"        } catch (NumberFormatException nfe) {"},{"lineNumber":141,"author":{"gitId":"stein414"},"content":"            throw new ParserException(\"Invalid number\");"},{"lineNumber":142,"author":{"gitId":"stein414"},"content":"        }"},{"lineNumber":143,"author":{"gitId":"stein414"},"content":""},{"lineNumber":144,"author":{"gitId":"stein414"},"content":"        return new DeleteCommand(selection - 1);"},{"lineNumber":145,"author":{"gitId":"stein414"},"content":"    }"},{"lineNumber":146,"author":{"gitId":"stein414"},"content":""},{"lineNumber":147,"author":{"gitId":"stein414"},"content":"    private Command prepareFind(String input, String[] tokens) throws ParserException {"},{"lineNumber":148,"author":{"gitId":"stein414"},"content":"        int minTokens \u003d 2;"},{"lineNumber":149,"author":{"gitId":"stein414"},"content":""},{"lineNumber":150,"author":{"gitId":"stein414"},"content":"        if (tokens.length \u003c minTokens) {"},{"lineNumber":151,"author":{"gitId":"stein414"},"content":"            throw new ParserException(\"Please specify what you are finding\");"},{"lineNumber":152,"author":{"gitId":"stein414"},"content":"        }"},{"lineNumber":153,"author":{"gitId":"stein414"},"content":""},{"lineNumber":154,"author":{"gitId":"stein414"},"content":"        return new FindCommand(input.substring(5));"},{"lineNumber":155,"author":{"gitId":"stein414"},"content":"    }"},{"lineNumber":156,"author":{"gitId":"stein414"},"content":""},{"lineNumber":157,"author":{"gitId":"stein414"},"content":"    private String getDescription(String input) throws ParserException {"},{"lineNumber":158,"author":{"gitId":"stein414"},"content":"        int spaceOffset \u003d 1;"},{"lineNumber":159,"author":{"gitId":"stein414"},"content":"        int firstSpaceIndex \u003d input.indexOf(\" \");"},{"lineNumber":160,"author":{"gitId":"stein414"},"content":""},{"lineNumber":161,"author":{"gitId":"stein414"},"content":"        int endOfDescription \u003d input.indexOf(\"/\", firstSpaceIndex + spaceOffset);"},{"lineNumber":162,"author":{"gitId":"stein414"},"content":"        if (endOfDescription \u003d\u003d firstSpaceIndex + spaceOffset) {"},{"lineNumber":163,"author":{"gitId":"stein414"},"content":"            throw new ParserException(\"Description must come before all switches\");"},{"lineNumber":164,"author":{"gitId":"stein414"},"content":"        }"},{"lineNumber":165,"author":{"gitId":"stein414"},"content":""},{"lineNumber":166,"author":{"gitId":"stein414"},"content":"        if (endOfDescription \u003d\u003d -1) {"},{"lineNumber":167,"author":{"gitId":"stein414"},"content":"            endOfDescription \u003d input.length();"},{"lineNumber":168,"author":{"gitId":"stein414"},"content":"        }"},{"lineNumber":169,"author":{"gitId":"stein414"},"content":""},{"lineNumber":170,"author":{"gitId":"stein414"},"content":"        return input.substring(firstSpaceIndex + spaceOffset, endOfDescription);"},{"lineNumber":171,"author":{"gitId":"stein414"},"content":"    }"},{"lineNumber":172,"author":{"gitId":"stein414"},"content":""},{"lineNumber":173,"author":{"gitId":"stein414"},"content":"    private TagList getTags(String input) {"},{"lineNumber":174,"author":{"gitId":"stein414"},"content":"        int tagOffset \u003d 5;"},{"lineNumber":175,"author":{"gitId":"stein414"},"content":""},{"lineNumber":176,"author":{"gitId":"stein414"},"content":"        TagList tags \u003d new TagList();"},{"lineNumber":177,"author":{"gitId":"stein414"},"content":""},{"lineNumber":178,"author":{"gitId":"stein414"},"content":"        int tagSwitchIndex \u003d input.indexOf(\"/tag\");"},{"lineNumber":179,"author":{"gitId":"stein414"},"content":"        if (tagSwitchIndex \u003d\u003d -1) {"},{"lineNumber":180,"author":{"gitId":"stein414"},"content":"            return tags;"},{"lineNumber":181,"author":{"gitId":"stein414"},"content":"        }"},{"lineNumber":182,"author":{"gitId":"stein414"},"content":""},{"lineNumber":183,"author":{"gitId":"stein414"},"content":"        int endOfTags \u003d input.indexOf(\"/\", tagSwitchIndex + tagOffset);"},{"lineNumber":184,"author":{"gitId":"stein414"},"content":"        if (endOfTags \u003d\u003d -1) {"},{"lineNumber":185,"author":{"gitId":"stein414"},"content":"            endOfTags \u003d input.length();"},{"lineNumber":186,"author":{"gitId":"stein414"},"content":"        }"},{"lineNumber":187,"author":{"gitId":"stein414"},"content":""},{"lineNumber":188,"author":{"gitId":"stein414"},"content":"        String[] tagTokens \u003d input.substring(tagSwitchIndex + tagOffset, endOfTags).split(\" \");"},{"lineNumber":189,"author":{"gitId":"stein414"},"content":"        for (String tagToken : tagTokens) {"},{"lineNumber":190,"author":{"gitId":"stein414"},"content":"            tags.add(new Tag(tagToken));"},{"lineNumber":191,"author":{"gitId":"stein414"},"content":"        }"},{"lineNumber":192,"author":{"gitId":"stein414"},"content":""},{"lineNumber":193,"author":{"gitId":"stein414"},"content":"        return tags;"},{"lineNumber":194,"author":{"gitId":"stein414"},"content":"    }"},{"lineNumber":195,"author":{"gitId":"stein414"},"content":""},{"lineNumber":196,"author":{"gitId":"stein414"},"content":"    private LocalDate getDate(String input, String switchText) {"},{"lineNumber":197,"author":{"gitId":"stein414"},"content":"        int switchOffset \u003d switchText.length() + 1;"},{"lineNumber":198,"author":{"gitId":"stein414"},"content":"        int switchIndex \u003d input.indexOf(switchText);"},{"lineNumber":199,"author":{"gitId":"stein414"},"content":"        if (switchIndex \u003d\u003d -1 || switchIndex + switchOffset \u003e input.length()) {"},{"lineNumber":200,"author":{"gitId":"stein414"},"content":"            return null;"},{"lineNumber":201,"author":{"gitId":"stein414"},"content":"        }"},{"lineNumber":202,"author":{"gitId":"stein414"},"content":""},{"lineNumber":203,"author":{"gitId":"stein414"},"content":"        int endOfSwitch \u003d input.indexOf(\"/\", switchIndex + switchOffset);"},{"lineNumber":204,"author":{"gitId":"stein414"},"content":"        if (endOfSwitch \u003d\u003d -1) {"},{"lineNumber":205,"author":{"gitId":"stein414"},"content":"            endOfSwitch \u003d input.length();"},{"lineNumber":206,"author":{"gitId":"stein414"},"content":"        }"},{"lineNumber":207,"author":{"gitId":"stein414"},"content":""},{"lineNumber":208,"author":{"gitId":"stein414"},"content":"        String switchStr \u003d input.substring(switchIndex + switchOffset, endOfSwitch).trim();"},{"lineNumber":209,"author":{"gitId":"stein414"},"content":"        if (switchStr.trim().equals(\"\")) {"},{"lineNumber":210,"author":{"gitId":"stein414"},"content":"            return null;"},{"lineNumber":211,"author":{"gitId":"stein414"},"content":"        }"},{"lineNumber":212,"author":{"gitId":"stein414"},"content":""},{"lineNumber":213,"author":{"gitId":"stein414"},"content":"        LocalDate date \u003d LocalDate.parse(switchStr);"},{"lineNumber":214,"author":{"gitId":"stein414"},"content":""},{"lineNumber":215,"author":{"gitId":"stein414"},"content":"        return date;"},{"lineNumber":216,"author":{"gitId":"stein414"},"content":"    }"},{"lineNumber":217,"author":{"gitId":"stein414"},"content":"}"}],"authorContributionMap":{"stein414":217}},{"path":"src/main/java/parser/ParserException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"stein414"},"content":"package parser;"},{"lineNumber":2,"author":{"gitId":"stein414"},"content":""},{"lineNumber":3,"author":{"gitId":"stein414"},"content":"public class ParserException extends Exception {"},{"lineNumber":4,"author":{"gitId":"stein414"},"content":"    public ParserException(String message) {"},{"lineNumber":5,"author":{"gitId":"stein414"},"content":"        super(message);"},{"lineNumber":6,"author":{"gitId":"stein414"},"content":"    }"},{"lineNumber":7,"author":{"gitId":"stein414"},"content":"}"}],"authorContributionMap":{"stein414":7}},{"path":"src/main/java/storage/StorageFile.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"stein414"},"content":"package storage;"},{"lineNumber":2,"author":{"gitId":"stein414"},"content":""},{"lineNumber":3,"author":{"gitId":"stein414"},"content":"import java.io.BufferedInputStream;"},{"lineNumber":4,"author":{"gitId":"stein414"},"content":"import java.io.BufferedOutputStream;"},{"lineNumber":5,"author":{"gitId":"stein414"},"content":"import java.io.File;"},{"lineNumber":6,"author":{"gitId":"stein414"},"content":"import java.io.FileInputStream;"},{"lineNumber":7,"author":{"gitId":"stein414"},"content":"import java.io.FileOutputStream;"},{"lineNumber":8,"author":{"gitId":"stein414"},"content":"import java.io.IOException;"},{"lineNumber":9,"author":{"gitId":"stein414"},"content":""},{"lineNumber":10,"author":{"gitId":"stein414"},"content":"import com.fasterxml.jackson.databind.ObjectMapper;"},{"lineNumber":11,"author":{"gitId":"stein414"},"content":"import com.fasterxml.jackson.databind.exc.MismatchedInputException;"},{"lineNumber":12,"author":{"gitId":"stein414"},"content":"import com.fasterxml.jackson.databind.json.JsonMapper;"},{"lineNumber":13,"author":{"gitId":"stein414"},"content":""},{"lineNumber":14,"author":{"gitId":"stein414"},"content":"import data.TaskList;"},{"lineNumber":15,"author":{"gitId":"stein414"},"content":""},{"lineNumber":16,"author":{"gitId":"stein414"},"content":"public class StorageFile {"},{"lineNumber":17,"author":{"gitId":"stein414"},"content":""},{"lineNumber":18,"author":{"gitId":"stein414"},"content":"    private static final String WORKING_DIR_PATH \u003d System.getProperty(\"user.dir\");"},{"lineNumber":19,"author":{"gitId":"stein414"},"content":"    private static final String DEFAULT_STORAGE_FILE_PATH \u003d java.nio.file.Paths.get(WORKING_DIR_PATH, \"saveFile.json\")"},{"lineNumber":20,"author":{"gitId":"stein414"},"content":"            .toString();"},{"lineNumber":21,"author":{"gitId":"stein414"},"content":""},{"lineNumber":22,"author":{"gitId":"stein414"},"content":"    // To map java objects to json"},{"lineNumber":23,"author":{"gitId":"stein414"},"content":"    private final ObjectMapper mapper \u003d JsonMapper.builder().findAndAddModules().build();"},{"lineNumber":24,"author":{"gitId":"stein414"},"content":""},{"lineNumber":25,"author":{"gitId":"stein414"},"content":"    private File saveFile;"},{"lineNumber":26,"author":{"gitId":"stein414"},"content":""},{"lineNumber":27,"author":{"gitId":"stein414"},"content":"    public StorageFile() {"},{"lineNumber":28,"author":{"gitId":"stein414"},"content":"        this(DEFAULT_STORAGE_FILE_PATH);"},{"lineNumber":29,"author":{"gitId":"stein414"},"content":"    }"},{"lineNumber":30,"author":{"gitId":"stein414"},"content":""},{"lineNumber":31,"author":{"gitId":"stein414"},"content":"    /**"},{"lineNumber":32,"author":{"gitId":"stein414"},"content":"     * StorageFile constructor"},{"lineNumber":33,"author":{"gitId":"stein414"},"content":"     *"},{"lineNumber":34,"author":{"gitId":"stein414"},"content":"     * @param filePath"},{"lineNumber":35,"author":{"gitId":"stein414"},"content":"     * @throws IOException"},{"lineNumber":36,"author":{"gitId":"stein414"},"content":"     */"},{"lineNumber":37,"author":{"gitId":"stein414"},"content":"    public StorageFile(String filePath) {"},{"lineNumber":38,"author":{"gitId":"stein414"},"content":"        saveFile \u003d new File(filePath);"},{"lineNumber":39,"author":{"gitId":"stein414"},"content":"    }"},{"lineNumber":40,"author":{"gitId":"stein414"},"content":""},{"lineNumber":41,"author":{"gitId":"stein414"},"content":"    /**"},{"lineNumber":42,"author":{"gitId":"stein414"},"content":"     * Writes the given tasks to the savefile"},{"lineNumber":43,"author":{"gitId":"stein414"},"content":"     *"},{"lineNumber":44,"author":{"gitId":"stein414"},"content":"     * @param tasks"},{"lineNumber":45,"author":{"gitId":"stein414"},"content":"     * @throws IOException"},{"lineNumber":46,"author":{"gitId":"stein414"},"content":"     */"},{"lineNumber":47,"author":{"gitId":"stein414"},"content":"    public void save(TaskList tasks) throws IOException {"},{"lineNumber":48,"author":{"gitId":"stein414"},"content":"        saveFile.createNewFile();"},{"lineNumber":49,"author":{"gitId":"stein414"},"content":"        try (BufferedOutputStream outSaveFile \u003d new BufferedOutputStream(new FileOutputStream(saveFile, false))) {"},{"lineNumber":50,"author":{"gitId":"stein414"},"content":"            // https://github.com/FasterXML/jackson-databind/pull/1309"},{"lineNumber":51,"author":{"gitId":"stein414"},"content":"            mapper.writeValue(outSaveFile, tasks);"},{"lineNumber":52,"author":{"gitId":"stein414"},"content":"        }"},{"lineNumber":53,"author":{"gitId":"stein414"},"content":"    }"},{"lineNumber":54,"author":{"gitId":"stein414"},"content":""},{"lineNumber":55,"author":{"gitId":"stein414"},"content":"    /**"},{"lineNumber":56,"author":{"gitId":"stein414"},"content":"     * Reads from the savefile and creates tasks"},{"lineNumber":57,"author":{"gitId":"stein414"},"content":"     *"},{"lineNumber":58,"author":{"gitId":"stein414"},"content":"     * @return TaskList"},{"lineNumber":59,"author":{"gitId":"stein414"},"content":"     * @throws IOException"},{"lineNumber":60,"author":{"gitId":"stein414"},"content":"     */"},{"lineNumber":61,"author":{"gitId":"stein414"},"content":"    public TaskList load() throws IOException {"},{"lineNumber":62,"author":{"gitId":"stein414"},"content":"        saveFile.createNewFile();"},{"lineNumber":63,"author":{"gitId":"stein414"},"content":"        try (BufferedInputStream inSaveFile \u003d new BufferedInputStream(new FileInputStream(saveFile))) {"},{"lineNumber":64,"author":{"gitId":"stein414"},"content":"            return mapper.readValue(inSaveFile, TaskList.class);"},{"lineNumber":65,"author":{"gitId":"stein414"},"content":"        } catch (MismatchedInputException mie) {"},{"lineNumber":66,"author":{"gitId":"stein414"},"content":"            // empty saveFile.json or invalid file format"},{"lineNumber":67,"author":{"gitId":"stein414"},"content":"            return new TaskList();"},{"lineNumber":68,"author":{"gitId":"stein414"},"content":"        }"},{"lineNumber":69,"author":{"gitId":"stein414"},"content":"    }"},{"lineNumber":70,"author":{"gitId":"stein414"},"content":"}"}],"authorContributionMap":{"stein414":70}},{"path":"src/main/java/ui/TextUi.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"stein414"},"content":"package ui;"},{"lineNumber":2,"author":{"gitId":"stein414"},"content":""},{"lineNumber":3,"author":{"gitId":"stein414"},"content":"import data.Task;"},{"lineNumber":4,"author":{"gitId":"stein414"},"content":"import data.TaskList;"},{"lineNumber":5,"author":{"gitId":"stein414"},"content":""},{"lineNumber":6,"author":{"gitId":"stein414"},"content":"public class TextUi {"},{"lineNumber":7,"author":{"gitId":"stein414"},"content":"    private static final String GREETING \u003d \"Hi, I am Duke. How may I help you?\";"},{"lineNumber":8,"author":{"gitId":"stein414"},"content":""},{"lineNumber":9,"author":{"gitId":"stein414"},"content":"    public TextUi() {"},{"lineNumber":10,"author":{"gitId":"stein414"},"content":"    }"},{"lineNumber":11,"author":{"gitId":"stein414"},"content":""},{"lineNumber":12,"author":{"gitId":"stein414"},"content":"    /**"},{"lineNumber":13,"author":{"gitId":"stein414"},"content":"     * Returns the greeting message"},{"lineNumber":14,"author":{"gitId":"stein414"},"content":"     *"},{"lineNumber":15,"author":{"gitId":"stein414"},"content":"     * @return"},{"lineNumber":16,"author":{"gitId":"stein414"},"content":"     */"},{"lineNumber":17,"author":{"gitId":"stein414"},"content":"    public String getGreetingMessage() {"},{"lineNumber":18,"author":{"gitId":"stein414"},"content":"        return GREETING;"},{"lineNumber":19,"author":{"gitId":"stein414"},"content":"    }"},{"lineNumber":20,"author":{"gitId":"stein414"},"content":""},{"lineNumber":21,"author":{"gitId":"stein414"},"content":"    /**"},{"lineNumber":22,"author":{"gitId":"stein414"},"content":"     * Returns the given line with the correct formatting."},{"lineNumber":23,"author":{"gitId":"stein414"},"content":"     * Currently does not do any formatting."},{"lineNumber":24,"author":{"gitId":"stein414"},"content":"     *"},{"lineNumber":25,"author":{"gitId":"stein414"},"content":"     * @param line"},{"lineNumber":26,"author":{"gitId":"stein414"},"content":"     */"},{"lineNumber":27,"author":{"gitId":"stein414"},"content":"    public String getFormattedMessage(String line) {"},{"lineNumber":28,"author":{"gitId":"stein414"},"content":"        return line;"},{"lineNumber":29,"author":{"gitId":"stein414"},"content":"    }"},{"lineNumber":30,"author":{"gitId":"stein414"},"content":""},{"lineNumber":31,"author":{"gitId":"stein414"},"content":"    /**"},{"lineNumber":32,"author":{"gitId":"stein414"},"content":"     * Returns the given lines with dividers"},{"lineNumber":33,"author":{"gitId":"stein414"},"content":"     *"},{"lineNumber":34,"author":{"gitId":"stein414"},"content":"     * @param lines"},{"lineNumber":35,"author":{"gitId":"stein414"},"content":"     */"},{"lineNumber":36,"author":{"gitId":"stein414"},"content":"    public String getFormattedMessage(String[] lines) {"},{"lineNumber":37,"author":{"gitId":"stein414"},"content":"        StringBuilder stringBuilder \u003d new StringBuilder();"},{"lineNumber":38,"author":{"gitId":"stein414"},"content":"        for (String line : lines) {"},{"lineNumber":39,"author":{"gitId":"stein414"},"content":"            stringBuilder.append(line);"},{"lineNumber":40,"author":{"gitId":"stein414"},"content":"            stringBuilder.append(System.lineSeparator());"},{"lineNumber":41,"author":{"gitId":"stein414"},"content":"        }"},{"lineNumber":42,"author":{"gitId":"stein414"},"content":""},{"lineNumber":43,"author":{"gitId":"stein414"},"content":"        return stringBuilder.toString();"},{"lineNumber":44,"author":{"gitId":"stein414"},"content":"    }"},{"lineNumber":45,"author":{"gitId":"stein414"},"content":""},{"lineNumber":46,"author":{"gitId":"stein414"},"content":"    /**"},{"lineNumber":47,"author":{"gitId":"stein414"},"content":"     * Returns a list of tasks as a string"},{"lineNumber":48,"author":{"gitId":"stein414"},"content":"     *"},{"lineNumber":49,"author":{"gitId":"stein414"},"content":"     * @param tasks"},{"lineNumber":50,"author":{"gitId":"stein414"},"content":"     */"},{"lineNumber":51,"author":{"gitId":"stein414"},"content":"    public String getTasksMessage(TaskList tasks) {"},{"lineNumber":52,"author":{"gitId":"stein414"},"content":"        String[] lines \u003d new String[tasks.size()];"},{"lineNumber":53,"author":{"gitId":"stein414"},"content":""},{"lineNumber":54,"author":{"gitId":"stein414"},"content":"        for (int i \u003d 0; i \u003c tasks.size(); i++) {"},{"lineNumber":55,"author":{"gitId":"stein414"},"content":"            lines[i] \u003d (i + 1) + \".\" + tasks.get(i).toString();"},{"lineNumber":56,"author":{"gitId":"stein414"},"content":"        }"},{"lineNumber":57,"author":{"gitId":"stein414"},"content":""},{"lineNumber":58,"author":{"gitId":"stein414"},"content":"        return getFormattedMessage(lines);"},{"lineNumber":59,"author":{"gitId":"stein414"},"content":"    }"},{"lineNumber":60,"author":{"gitId":"stein414"},"content":""},{"lineNumber":61,"author":{"gitId":"stein414"},"content":"    /**"},{"lineNumber":62,"author":{"gitId":"stein414"},"content":"     * Returns the acknowledgement message for adding a task"},{"lineNumber":63,"author":{"gitId":"stein414"},"content":"     *"},{"lineNumber":64,"author":{"gitId":"stein414"},"content":"     * @param task"},{"lineNumber":65,"author":{"gitId":"stein414"},"content":"     * @param tasks"},{"lineNumber":66,"author":{"gitId":"stein414"},"content":"     */"},{"lineNumber":67,"author":{"gitId":"stein414"},"content":"    public String getAddTaskMessage(Task task, TaskList tasks) {"},{"lineNumber":68,"author":{"gitId":"stein414"},"content":"        return getFormattedMessage(new String[] {"},{"lineNumber":69,"author":{"gitId":"stein414"},"content":"                \"Got it. I\u0027ve added this task:\","},{"lineNumber":70,"author":{"gitId":"stein414"},"content":"                \"  \" + task,"},{"lineNumber":71,"author":{"gitId":"stein414"},"content":"                \"Now you have \" + tasks.size() + \" tasks in the list.\""},{"lineNumber":72,"author":{"gitId":"stein414"},"content":"        });"},{"lineNumber":73,"author":{"gitId":"stein414"},"content":"    }"},{"lineNumber":74,"author":{"gitId":"stein414"},"content":""},{"lineNumber":75,"author":{"gitId":"stein414"},"content":"    /**"},{"lineNumber":76,"author":{"gitId":"stein414"},"content":"     * Returns the acknowledgement message for deleting a task"},{"lineNumber":77,"author":{"gitId":"stein414"},"content":"     *"},{"lineNumber":78,"author":{"gitId":"stein414"},"content":"     * @param task"},{"lineNumber":79,"author":{"gitId":"stein414"},"content":"     * @param tasks"},{"lineNumber":80,"author":{"gitId":"stein414"},"content":"     */"},{"lineNumber":81,"author":{"gitId":"stein414"},"content":"    public String getDeleteTaskMessage(Task task, TaskList tasks) {"},{"lineNumber":82,"author":{"gitId":"stein414"},"content":"        return getFormattedMessage(new String[] {"},{"lineNumber":83,"author":{"gitId":"stein414"},"content":"                \"Noted. I\u0027ve removed this task:\","},{"lineNumber":84,"author":{"gitId":"stein414"},"content":"                \"  \" + task,"},{"lineNumber":85,"author":{"gitId":"stein414"},"content":"                \"Now you have \" + tasks.size() + \" tasks in the list.\""},{"lineNumber":86,"author":{"gitId":"stein414"},"content":"        });"},{"lineNumber":87,"author":{"gitId":"stein414"},"content":"    }"},{"lineNumber":88,"author":{"gitId":"stein414"},"content":""},{"lineNumber":89,"author":{"gitId":"stein414"},"content":"    /**"},{"lineNumber":90,"author":{"gitId":"stein414"},"content":"     * Returns the acknowledgement message for finishing a task"},{"lineNumber":91,"author":{"gitId":"stein414"},"content":"     *"},{"lineNumber":92,"author":{"gitId":"stein414"},"content":"     * @param task"},{"lineNumber":93,"author":{"gitId":"stein414"},"content":"     */"},{"lineNumber":94,"author":{"gitId":"stein414"},"content":"    public String getDoneTaskMessage(Task task) {"},{"lineNumber":95,"author":{"gitId":"stein414"},"content":"        return getFormattedMessage(\"  [\" + task.getStatusIcon() + \"] \" + task.getDescription());"},{"lineNumber":96,"author":{"gitId":"stein414"},"content":"    }"},{"lineNumber":97,"author":{"gitId":"stein414"},"content":"}"}],"authorContributionMap":{"stein414":97}},{"path":"src/main/java/ui/controllers/DialogBox.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"stein414"},"content":"package ui.controllers;"},{"lineNumber":2,"author":{"gitId":"stein414"},"content":""},{"lineNumber":3,"author":{"gitId":"stein414"},"content":"import java.io.IOException;"},{"lineNumber":4,"author":{"gitId":"stein414"},"content":"import java.util.Collections;"},{"lineNumber":5,"author":{"gitId":"stein414"},"content":""},{"lineNumber":6,"author":{"gitId":"stein414"},"content":"import javafx.collections.FXCollections;"},{"lineNumber":7,"author":{"gitId":"stein414"},"content":"import javafx.collections.ObservableList;"},{"lineNumber":8,"author":{"gitId":"stein414"},"content":"import javafx.fxml.FXML;"},{"lineNumber":9,"author":{"gitId":"stein414"},"content":"import javafx.fxml.FXMLLoader;"},{"lineNumber":10,"author":{"gitId":"stein414"},"content":"import javafx.geometry.Pos;"},{"lineNumber":11,"author":{"gitId":"stein414"},"content":"import javafx.scene.Node;"},{"lineNumber":12,"author":{"gitId":"stein414"},"content":"import javafx.scene.control.Label;"},{"lineNumber":13,"author":{"gitId":"stein414"},"content":"import javafx.scene.image.Image;"},{"lineNumber":14,"author":{"gitId":"stein414"},"content":"import javafx.scene.image.ImageView;"},{"lineNumber":15,"author":{"gitId":"stein414"},"content":"import javafx.scene.layout.HBox;"},{"lineNumber":16,"author":{"gitId":"stein414"},"content":"import javafx.scene.shape.Circle;"},{"lineNumber":17,"author":{"gitId":"stein414"},"content":""},{"lineNumber":18,"author":{"gitId":"stein414"},"content":"/**"},{"lineNumber":19,"author":{"gitId":"stein414"},"content":" * An example of a custom control using FXML. This control represents a dialog"},{"lineNumber":20,"author":{"gitId":"stein414"},"content":" * box consisting of an ImageView to represent the speaker\u0027s face and a label"},{"lineNumber":21,"author":{"gitId":"stein414"},"content":" * containing text from the speaker."},{"lineNumber":22,"author":{"gitId":"stein414"},"content":" */"},{"lineNumber":23,"author":{"gitId":"stein414"},"content":"public class DialogBox extends HBox {"},{"lineNumber":24,"author":{"gitId":"stein414"},"content":"    @FXML"},{"lineNumber":25,"author":{"gitId":"stein414"},"content":"    private Label dialog;"},{"lineNumber":26,"author":{"gitId":"stein414"},"content":"    @FXML"},{"lineNumber":27,"author":{"gitId":"stein414"},"content":"    private ImageView displayPicture;"},{"lineNumber":28,"author":{"gitId":"stein414"},"content":""},{"lineNumber":29,"author":{"gitId":"stein414"},"content":"    private DialogBox(String text, Image img) {"},{"lineNumber":30,"author":{"gitId":"stein414"},"content":"        assert text !\u003d null : \"DialogBox text is null\";"},{"lineNumber":31,"author":{"gitId":"stein414"},"content":"        assert img !\u003d null : \"DialogBox img is null\";"},{"lineNumber":32,"author":{"gitId":"stein414"},"content":""},{"lineNumber":33,"author":{"gitId":"stein414"},"content":"        try {"},{"lineNumber":34,"author":{"gitId":"stein414"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(\"/view/DialogBox.fxml\"));"},{"lineNumber":35,"author":{"gitId":"stein414"},"content":"            fxmlLoader.setController(this);"},{"lineNumber":36,"author":{"gitId":"stein414"},"content":"            fxmlLoader.setRoot(this);"},{"lineNumber":37,"author":{"gitId":"stein414"},"content":"            fxmlLoader.load();"},{"lineNumber":38,"author":{"gitId":"stein414"},"content":"        } catch (IOException e) {"},{"lineNumber":39,"author":{"gitId":"stein414"},"content":"            e.printStackTrace();"},{"lineNumber":40,"author":{"gitId":"stein414"},"content":"        }"},{"lineNumber":41,"author":{"gitId":"stein414"},"content":""},{"lineNumber":42,"author":{"gitId":"stein414"},"content":"        // Create circle mask to clip the display picture"},{"lineNumber":43,"author":{"gitId":"stein414"},"content":"        double centerX \u003d displayPicture.getFitWidth() / 2.0;"},{"lineNumber":44,"author":{"gitId":"stein414"},"content":"        double centerY \u003d displayPicture.getFitHeight() / 2.0;"},{"lineNumber":45,"author":{"gitId":"stein414"},"content":"        double radius \u003d Math.min(displayPicture.getFitWidth(), displayPicture.getFitHeight()) / 2.0;"},{"lineNumber":46,"author":{"gitId":"stein414"},"content":"        Circle circleMask \u003d new Circle(centerX, centerY, radius);"},{"lineNumber":47,"author":{"gitId":"stein414"},"content":""},{"lineNumber":48,"author":{"gitId":"stein414"},"content":"        dialog.setText(text);"},{"lineNumber":49,"author":{"gitId":"stein414"},"content":"        displayPicture.setImage(img);"},{"lineNumber":50,"author":{"gitId":"stein414"},"content":"        displayPicture.setClip(circleMask);"},{"lineNumber":51,"author":{"gitId":"stein414"},"content":"    }"},{"lineNumber":52,"author":{"gitId":"stein414"},"content":""},{"lineNumber":53,"author":{"gitId":"stein414"},"content":"    /**"},{"lineNumber":54,"author":{"gitId":"stein414"},"content":"     * Flips the dialog box such that the ImageView is on the left and text on the"},{"lineNumber":55,"author":{"gitId":"stein414"},"content":"     * right."},{"lineNumber":56,"author":{"gitId":"stein414"},"content":"     */"},{"lineNumber":57,"author":{"gitId":"stein414"},"content":"    private void flip() {"},{"lineNumber":58,"author":{"gitId":"stein414"},"content":"        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());"},{"lineNumber":59,"author":{"gitId":"stein414"},"content":"        Collections.reverse(tmp);"},{"lineNumber":60,"author":{"gitId":"stein414"},"content":"        getChildren().setAll(tmp);"},{"lineNumber":61,"author":{"gitId":"stein414"},"content":"        setAlignment(Pos.TOP_LEFT);"},{"lineNumber":62,"author":{"gitId":"stein414"},"content":"    }"},{"lineNumber":63,"author":{"gitId":"stein414"},"content":""},{"lineNumber":64,"author":{"gitId":"stein414"},"content":"    /**"},{"lineNumber":65,"author":{"gitId":"stein414"},"content":"     * Shows a User dialog containing the text and the given img"},{"lineNumber":66,"author":{"gitId":"stein414"},"content":"     *"},{"lineNumber":67,"author":{"gitId":"stein414"},"content":"     * @param text"},{"lineNumber":68,"author":{"gitId":"stein414"},"content":"     * @param image"},{"lineNumber":69,"author":{"gitId":"stein414"},"content":"     * @return"},{"lineNumber":70,"author":{"gitId":"stein414"},"content":"     */"},{"lineNumber":71,"author":{"gitId":"stein414"},"content":"    public static DialogBox getUserDialog(String text, Image image) {"},{"lineNumber":72,"author":{"gitId":"stein414"},"content":"        return new DialogBox(text, image);"},{"lineNumber":73,"author":{"gitId":"stein414"},"content":"    }"},{"lineNumber":74,"author":{"gitId":"stein414"},"content":""},{"lineNumber":75,"author":{"gitId":"stein414"},"content":"    /**"},{"lineNumber":76,"author":{"gitId":"stein414"},"content":"     * Shows a Duke dialog containing the text and the given img"},{"lineNumber":77,"author":{"gitId":"stein414"},"content":"     *"},{"lineNumber":78,"author":{"gitId":"stein414"},"content":"     * @param text"},{"lineNumber":79,"author":{"gitId":"stein414"},"content":"     * @param image"},{"lineNumber":80,"author":{"gitId":"stein414"},"content":"     * @return"},{"lineNumber":81,"author":{"gitId":"stein414"},"content":"     */"},{"lineNumber":82,"author":{"gitId":"stein414"},"content":"    public static DialogBox getDukeDialog(String text, Image image) {"},{"lineNumber":83,"author":{"gitId":"stein414"},"content":"        var db \u003d new DialogBox(text, image);"},{"lineNumber":84,"author":{"gitId":"stein414"},"content":"        db.flip();"},{"lineNumber":85,"author":{"gitId":"stein414"},"content":"        return db;"},{"lineNumber":86,"author":{"gitId":"stein414"},"content":"    }"},{"lineNumber":87,"author":{"gitId":"stein414"},"content":"}"}],"authorContributionMap":{"stein414":87}},{"path":"src/main/java/ui/controllers/MainWindow.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"stein414"},"content":"package ui.controllers;"},{"lineNumber":2,"author":{"gitId":"stein414"},"content":""},{"lineNumber":3,"author":{"gitId":"stein414"},"content":"import java.io.IOException;"},{"lineNumber":4,"author":{"gitId":"stein414"},"content":"import java.util.concurrent.CompletableFuture;"},{"lineNumber":5,"author":{"gitId":"stein414"},"content":"import java.util.concurrent.TimeUnit;"},{"lineNumber":6,"author":{"gitId":"stein414"},"content":""},{"lineNumber":7,"author":{"gitId":"stein414"},"content":"import duke.Duke;"},{"lineNumber":8,"author":{"gitId":"stein414"},"content":"import duke.DukeResponse;"},{"lineNumber":9,"author":{"gitId":"stein414"},"content":"import javafx.application.Platform;"},{"lineNumber":10,"author":{"gitId":"stein414"},"content":"import javafx.collections.ObservableList;"},{"lineNumber":11,"author":{"gitId":"stein414"},"content":"import javafx.fxml.FXML;"},{"lineNumber":12,"author":{"gitId":"stein414"},"content":"import javafx.scene.Node;"},{"lineNumber":13,"author":{"gitId":"stein414"},"content":"import javafx.scene.control.Button;"},{"lineNumber":14,"author":{"gitId":"stein414"},"content":"import javafx.scene.control.ScrollPane;"},{"lineNumber":15,"author":{"gitId":"stein414"},"content":"import javafx.scene.control.TextField;"},{"lineNumber":16,"author":{"gitId":"stein414"},"content":"import javafx.scene.image.Image;"},{"lineNumber":17,"author":{"gitId":"stein414"},"content":"import javafx.scene.layout.AnchorPane;"},{"lineNumber":18,"author":{"gitId":"stein414"},"content":"import javafx.scene.layout.VBox;"},{"lineNumber":19,"author":{"gitId":"stein414"},"content":""},{"lineNumber":20,"author":{"gitId":"stein414"},"content":"/**"},{"lineNumber":21,"author":{"gitId":"stein414"},"content":" * Controller for ui.controllers.MainWindow. Provides the layout for the other"},{"lineNumber":22,"author":{"gitId":"stein414"},"content":" * controls."},{"lineNumber":23,"author":{"gitId":"stein414"},"content":" */"},{"lineNumber":24,"author":{"gitId":"stein414"},"content":"public class MainWindow extends AnchorPane {"},{"lineNumber":25,"author":{"gitId":"stein414"},"content":"    private static final long EXIT_DELAY_MILLISECONDS \u003d 2000;"},{"lineNumber":26,"author":{"gitId":"stein414"},"content":""},{"lineNumber":27,"author":{"gitId":"stein414"},"content":"    @FXML"},{"lineNumber":28,"author":{"gitId":"stein414"},"content":"    private ScrollPane scrollPane;"},{"lineNumber":29,"author":{"gitId":"stein414"},"content":"    @FXML"},{"lineNumber":30,"author":{"gitId":"stein414"},"content":"    private VBox dialogContainer;"},{"lineNumber":31,"author":{"gitId":"stein414"},"content":"    @FXML"},{"lineNumber":32,"author":{"gitId":"stein414"},"content":"    private TextField userInput;"},{"lineNumber":33,"author":{"gitId":"stein414"},"content":"    @FXML"},{"lineNumber":34,"author":{"gitId":"stein414"},"content":"    private Button sendButton;"},{"lineNumber":35,"author":{"gitId":"stein414"},"content":""},{"lineNumber":36,"author":{"gitId":"stein414"},"content":"    private Duke duke;"},{"lineNumber":37,"author":{"gitId":"stein414"},"content":"    private ObservableList\u003cNode\u003e dialogs;"},{"lineNumber":38,"author":{"gitId":"stein414"},"content":""},{"lineNumber":39,"author":{"gitId":"stein414"},"content":"    private Image userImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaUser.png\"));"},{"lineNumber":40,"author":{"gitId":"stein414"},"content":"    private Image dukeImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaDuke.png\"));"},{"lineNumber":41,"author":{"gitId":"stein414"},"content":""},{"lineNumber":42,"author":{"gitId":"stein414"},"content":"    /**"},{"lineNumber":43,"author":{"gitId":"stein414"},"content":"     * Initialises fxml components"},{"lineNumber":44,"author":{"gitId":"stein414"},"content":"     */"},{"lineNumber":45,"author":{"gitId":"stein414"},"content":"    @FXML"},{"lineNumber":46,"author":{"gitId":"stein414"},"content":"    public void initialize() {"},{"lineNumber":47,"author":{"gitId":"stein414"},"content":"        scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());"},{"lineNumber":48,"author":{"gitId":"stein414"},"content":"        dialogs \u003d dialogContainer.getChildren();"},{"lineNumber":49,"author":{"gitId":"stein414"},"content":"    }"},{"lineNumber":50,"author":{"gitId":"stein414"},"content":""},{"lineNumber":51,"author":{"gitId":"stein414"},"content":"    /**"},{"lineNumber":52,"author":{"gitId":"stein414"},"content":"     * Initialises duke and show gretting message"},{"lineNumber":53,"author":{"gitId":"stein414"},"content":"     *"},{"lineNumber":54,"author":{"gitId":"stein414"},"content":"     * @param duke"},{"lineNumber":55,"author":{"gitId":"stein414"},"content":"     */"},{"lineNumber":56,"author":{"gitId":"stein414"},"content":"    public void initialiseDuke(Duke duke) {"},{"lineNumber":57,"author":{"gitId":"stein414"},"content":"        assert duke !\u003d null : \"duke is null\";"},{"lineNumber":58,"author":{"gitId":"stein414"},"content":"        this.duke \u003d duke;"},{"lineNumber":59,"author":{"gitId":"stein414"},"content":"        addDialog(duke.getGreetingMessage(), DialogUser.DUKE);"},{"lineNumber":60,"author":{"gitId":"stein414"},"content":"    }"},{"lineNumber":61,"author":{"gitId":"stein414"},"content":""},{"lineNumber":62,"author":{"gitId":"stein414"},"content":"    /**"},{"lineNumber":63,"author":{"gitId":"stein414"},"content":"     * Creates two dialog boxes, one echoing user input and the other containing"},{"lineNumber":64,"author":{"gitId":"stein414"},"content":"     * Duke\u0027s reply and then appends them to the dialog container. Clears the user"},{"lineNumber":65,"author":{"gitId":"stein414"},"content":"     * input after processing."},{"lineNumber":66,"author":{"gitId":"stein414"},"content":"     */"},{"lineNumber":67,"author":{"gitId":"stein414"},"content":"    @FXML"},{"lineNumber":68,"author":{"gitId":"stein414"},"content":"    private void handleUserInput() throws InterruptedException {"},{"lineNumber":69,"author":{"gitId":"stein414"},"content":"        String input \u003d userInput.getText();"},{"lineNumber":70,"author":{"gitId":"stein414"},"content":"        addDialog(input, DialogUser.USER);"},{"lineNumber":71,"author":{"gitId":"stein414"},"content":""},{"lineNumber":72,"author":{"gitId":"stein414"},"content":"        userInput.clear();"},{"lineNumber":73,"author":{"gitId":"stein414"},"content":""},{"lineNumber":74,"author":{"gitId":"stein414"},"content":"        DukeResponse response \u003d getDukeReponse(input);"},{"lineNumber":75,"author":{"gitId":"stein414"},"content":"        addDialog(response.getMessage(), DialogUser.DUKE);"},{"lineNumber":76,"author":{"gitId":"stein414"},"content":""},{"lineNumber":77,"author":{"gitId":"stein414"},"content":"        if (response !\u003d null \u0026\u0026 response.isExit()) {"},{"lineNumber":78,"author":{"gitId":"stein414"},"content":"            CompletableFuture.delayedExecutor(EXIT_DELAY_MILLISECONDS, TimeUnit.MILLISECONDS)"},{"lineNumber":79,"author":{"gitId":"stein414"},"content":"                    .execute(() -\u003e Platform.exit());"},{"lineNumber":80,"author":{"gitId":"stein414"},"content":"        }"},{"lineNumber":81,"author":{"gitId":"stein414"},"content":"    }"},{"lineNumber":82,"author":{"gitId":"stein414"},"content":""},{"lineNumber":83,"author":{"gitId":"stein414"},"content":"    private DukeResponse getDukeReponse(String input) {"},{"lineNumber":84,"author":{"gitId":"stein414"},"content":"        DukeResponse response \u003d null;"},{"lineNumber":85,"author":{"gitId":"stein414"},"content":"        try {"},{"lineNumber":86,"author":{"gitId":"stein414"},"content":"            response \u003d duke.getResponse(input);"},{"lineNumber":87,"author":{"gitId":"stein414"},"content":"        } catch (IOException ioe) {"},{"lineNumber":88,"author":{"gitId":"stein414"},"content":"            response \u003d new DukeResponse(\"Failed to save. Please restart the program.\");"},{"lineNumber":89,"author":{"gitId":"stein414"},"content":"        }"},{"lineNumber":90,"author":{"gitId":"stein414"},"content":""},{"lineNumber":91,"author":{"gitId":"stein414"},"content":"        return response;"},{"lineNumber":92,"author":{"gitId":"stein414"},"content":"    }"},{"lineNumber":93,"author":{"gitId":"stein414"},"content":""},{"lineNumber":94,"author":{"gitId":"stein414"},"content":"    /**"},{"lineNumber":95,"author":{"gitId":"stein414"},"content":"     * Adds a dialog with the given message for the specified dialogUser"},{"lineNumber":96,"author":{"gitId":"stein414"},"content":"     *"},{"lineNumber":97,"author":{"gitId":"stein414"},"content":"     * @param message"},{"lineNumber":98,"author":{"gitId":"stein414"},"content":"     * @param dialogUser"},{"lineNumber":99,"author":{"gitId":"stein414"},"content":"     */"},{"lineNumber":100,"author":{"gitId":"stein414"},"content":"    private void addDialog(String message, DialogUser dialogUser) {"},{"lineNumber":101,"author":{"gitId":"stein414"},"content":"        switch (dialogUser) {"},{"lineNumber":102,"author":{"gitId":"stein414"},"content":"        case USER:"},{"lineNumber":103,"author":{"gitId":"stein414"},"content":"            dialogs.add(DialogBox.getUserDialog(message, userImage));"},{"lineNumber":104,"author":{"gitId":"stein414"},"content":"            break;"},{"lineNumber":105,"author":{"gitId":"stein414"},"content":"        case DUKE:"},{"lineNumber":106,"author":{"gitId":"stein414"},"content":"            dialogs.add(DialogBox.getDukeDialog(message, dukeImage));"},{"lineNumber":107,"author":{"gitId":"stein414"},"content":"            break;"},{"lineNumber":108,"author":{"gitId":"stein414"},"content":"        default:"},{"lineNumber":109,"author":{"gitId":"stein414"},"content":"            throw new RuntimeException(\"Unknown DialogUser specified\");"},{"lineNumber":110,"author":{"gitId":"stein414"},"content":"        }"},{"lineNumber":111,"author":{"gitId":"stein414"},"content":"    }"},{"lineNumber":112,"author":{"gitId":"stein414"},"content":"}"},{"lineNumber":113,"author":{"gitId":"stein414"},"content":""},{"lineNumber":114,"author":{"gitId":"stein414"},"content":"/**"},{"lineNumber":115,"author":{"gitId":"stein414"},"content":" * Enum to determine which user the dialog belongs to"},{"lineNumber":116,"author":{"gitId":"stein414"},"content":" */"},{"lineNumber":117,"author":{"gitId":"stein414"},"content":"enum DialogUser {"},{"lineNumber":118,"author":{"gitId":"stein414"},"content":"    USER, DUKE"},{"lineNumber":119,"author":{"gitId":"stein414"},"content":"}"}],"authorContributionMap":{"stein414":119}},{"path":"src/main/resources/view/DialogBox.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"stein414"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"},{"lineNumber":2,"author":{"gitId":"stein414"},"content":""},{"lineNumber":3,"author":{"gitId":"stein414"},"content":"\u003c?import javafx.geometry.Insets?\u003e"},{"lineNumber":4,"author":{"gitId":"stein414"},"content":"\u003c?import javafx.scene.control.Label?\u003e"},{"lineNumber":5,"author":{"gitId":"stein414"},"content":"\u003c?import javafx.scene.image.ImageView?\u003e"},{"lineNumber":6,"author":{"gitId":"stein414"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e"},{"lineNumber":7,"author":{"gitId":"stein414"},"content":""},{"lineNumber":8,"author":{"gitId":"stein414"},"content":"\u003cfx:root alignment\u003d\"TOP_RIGHT\" maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\" prefWidth\u003d\"400.0\" type\u003d\"javafx.scene.layout.HBox\" xmlns\u003d\"http://javafx.com/javafx/15.0.1\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e"},{"lineNumber":9,"author":{"gitId":"stein414"},"content":"    \u003cchildren\u003e"},{"lineNumber":10,"author":{"gitId":"stein414"},"content":"        \u003cLabel fx:id\u003d\"dialog\" text\u003d\"Label\" wrapText\u003d\"true\" /\u003e"},{"lineNumber":11,"author":{"gitId":"stein414"},"content":"        \u003cImageView fx:id\u003d\"displayPicture\" fitHeight\u003d\"99.0\" fitWidth\u003d\"99.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\" /\u003e"},{"lineNumber":12,"author":{"gitId":"stein414"},"content":"    \u003c/children\u003e"},{"lineNumber":13,"author":{"gitId":"stein414"},"content":"    \u003cpadding\u003e"},{"lineNumber":14,"author":{"gitId":"stein414"},"content":"        \u003cInsets bottom\u003d\"15.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"15.0\" /\u003e"},{"lineNumber":15,"author":{"gitId":"stein414"},"content":"    \u003c/padding\u003e"},{"lineNumber":16,"author":{"gitId":"stein414"},"content":"\u003c/fx:root\u003e"}],"authorContributionMap":{"stein414":16}},{"path":"src/main/resources/view/MainWindow.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"stein414"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"},{"lineNumber":2,"author":{"gitId":"stein414"},"content":""},{"lineNumber":3,"author":{"gitId":"stein414"},"content":"\u003c?import javafx.scene.control.Button?\u003e"},{"lineNumber":4,"author":{"gitId":"stein414"},"content":"\u003c?import javafx.scene.control.ScrollPane?\u003e"},{"lineNumber":5,"author":{"gitId":"stein414"},"content":"\u003c?import javafx.scene.control.TextField?\u003e"},{"lineNumber":6,"author":{"gitId":"stein414"},"content":"\u003c?import javafx.scene.layout.AnchorPane?\u003e"},{"lineNumber":7,"author":{"gitId":"stein414"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e"},{"lineNumber":8,"author":{"gitId":"stein414"},"content":""},{"lineNumber":9,"author":{"gitId":"stein414"},"content":"\u003cAnchorPane maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefHeight\u003d\"600.0\" prefWidth\u003d\"400.0\" xmlns\u003d\"http://javafx.com/javafx/15.0.1\" xmlns:fx\u003d\"http://javafx.com/fxml/1\" fx:controller\u003d\"ui.controllers.MainWindow\"\u003e"},{"lineNumber":10,"author":{"gitId":"stein414"},"content":"    \u003cchildren\u003e"},{"lineNumber":11,"author":{"gitId":"stein414"},"content":"        \u003cTextField fx:id\u003d\"userInput\" layoutY\u003d\"558.0\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"324.0\" AnchorPane.bottomAnchor\u003d\"1.0\" /\u003e"},{"lineNumber":12,"author":{"gitId":"stein414"},"content":"        \u003cButton fx:id\u003d\"sendButton\" layoutX\u003d\"324.0\" layoutY\u003d\"558.0\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"76.0\" text\u003d\"Send\" /\u003e"},{"lineNumber":13,"author":{"gitId":"stein414"},"content":"        \u003cScrollPane fx:id\u003d\"scrollPane\" hbarPolicy\u003d\"NEVER\" hvalue\u003d\"1.0\" prefHeight\u003d\"557.0\" prefWidth\u003d\"400.0\" vvalue\u003d\"1.0\"\u003e"},{"lineNumber":14,"author":{"gitId":"stein414"},"content":"            \u003ccontent\u003e"},{"lineNumber":15,"author":{"gitId":"stein414"},"content":"                \u003cVBox fx:id\u003d\"dialogContainer\" prefHeight\u003d\"552.0\" prefWidth\u003d\"388.0\" /\u003e"},{"lineNumber":16,"author":{"gitId":"stein414"},"content":"            \u003c/content\u003e"},{"lineNumber":17,"author":{"gitId":"stein414"},"content":"        \u003c/ScrollPane\u003e"},{"lineNumber":18,"author":{"gitId":"stein414"},"content":"    \u003c/children\u003e"},{"lineNumber":19,"author":{"gitId":"stein414"},"content":"\u003c/AnchorPane\u003e"}],"authorContributionMap":{"stein414":19}},{"path":"src/test/java/commands/AddDeadlineCommandTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"stein414"},"content":"package commands;"},{"lineNumber":2,"author":{"gitId":"stein414"},"content":""},{"lineNumber":3,"author":{"gitId":"stein414"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;"},{"lineNumber":4,"author":{"gitId":"stein414"},"content":""},{"lineNumber":5,"author":{"gitId":"stein414"},"content":"import java.io.IOException;"},{"lineNumber":6,"author":{"gitId":"stein414"},"content":"import java.time.LocalDate;"},{"lineNumber":7,"author":{"gitId":"stein414"},"content":""},{"lineNumber":8,"author":{"gitId":"stein414"},"content":"import org.junit.jupiter.api.BeforeEach;"},{"lineNumber":9,"author":{"gitId":"stein414"},"content":"import org.junit.jupiter.api.DisplayName;"},{"lineNumber":10,"author":{"gitId":"stein414"},"content":"import org.junit.jupiter.api.Test;"},{"lineNumber":11,"author":{"gitId":"stein414"},"content":""},{"lineNumber":12,"author":{"gitId":"stein414"},"content":"import data.Deadline;"},{"lineNumber":13,"author":{"gitId":"stein414"},"content":"import data.TagList;"},{"lineNumber":14,"author":{"gitId":"stein414"},"content":"import data.TaskList;"},{"lineNumber":15,"author":{"gitId":"stein414"},"content":"import ui.TextUi;"},{"lineNumber":16,"author":{"gitId":"stein414"},"content":""},{"lineNumber":17,"author":{"gitId":"stein414"},"content":"public class AddDeadlineCommandTest {"},{"lineNumber":18,"author":{"gitId":"stein414"},"content":""},{"lineNumber":19,"author":{"gitId":"stein414"},"content":"    private TaskList tasks;"},{"lineNumber":20,"author":{"gitId":"stein414"},"content":"    private TextUi ui;"},{"lineNumber":21,"author":{"gitId":"stein414"},"content":""},{"lineNumber":22,"author":{"gitId":"stein414"},"content":"    @BeforeEach"},{"lineNumber":23,"author":{"gitId":"stein414"},"content":"    void setUp() {"},{"lineNumber":24,"author":{"gitId":"stein414"},"content":"        tasks \u003d new TaskList();"},{"lineNumber":25,"author":{"gitId":"stein414"},"content":"        ui \u003d new TextUi();"},{"lineNumber":26,"author":{"gitId":"stein414"},"content":"    }"},{"lineNumber":27,"author":{"gitId":"stein414"},"content":""},{"lineNumber":28,"author":{"gitId":"stein414"},"content":"    @Test"},{"lineNumber":29,"author":{"gitId":"stein414"},"content":"    @DisplayName(\"AddDeadlineCommand should add to TaskList\")"},{"lineNumber":30,"author":{"gitId":"stein414"},"content":"    void testOutput() throws IOException {"},{"lineNumber":31,"author":{"gitId":"stein414"},"content":"        Deadline deadline \u003d new Deadline(\"a\", new TagList(), LocalDate.parse(\"2020-01-01\"));"},{"lineNumber":32,"author":{"gitId":"stein414"},"content":"        Command command \u003d new AddDeadlineCommand(deadline);"},{"lineNumber":33,"author":{"gitId":"stein414"},"content":""},{"lineNumber":34,"author":{"gitId":"stein414"},"content":"        command.execute(tasks, ui);"},{"lineNumber":35,"author":{"gitId":"stein414"},"content":""},{"lineNumber":36,"author":{"gitId":"stein414"},"content":"        assertEquals(deadline, tasks.get(0));"},{"lineNumber":37,"author":{"gitId":"stein414"},"content":"    }"},{"lineNumber":38,"author":{"gitId":"stein414"},"content":"}"}],"authorContributionMap":{"stein414":38}},{"path":"src/test/java/commands/AddEventCommandTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"stein414"},"content":"package commands;"},{"lineNumber":2,"author":{"gitId":"stein414"},"content":""},{"lineNumber":3,"author":{"gitId":"stein414"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;"},{"lineNumber":4,"author":{"gitId":"stein414"},"content":""},{"lineNumber":5,"author":{"gitId":"stein414"},"content":"import java.io.IOException;"},{"lineNumber":6,"author":{"gitId":"stein414"},"content":"import java.time.LocalDate;"},{"lineNumber":7,"author":{"gitId":"stein414"},"content":""},{"lineNumber":8,"author":{"gitId":"stein414"},"content":"import org.junit.jupiter.api.BeforeEach;"},{"lineNumber":9,"author":{"gitId":"stein414"},"content":"import org.junit.jupiter.api.DisplayName;"},{"lineNumber":10,"author":{"gitId":"stein414"},"content":"import org.junit.jupiter.api.Test;"},{"lineNumber":11,"author":{"gitId":"stein414"},"content":""},{"lineNumber":12,"author":{"gitId":"stein414"},"content":"import data.Event;"},{"lineNumber":13,"author":{"gitId":"stein414"},"content":"import data.TagList;"},{"lineNumber":14,"author":{"gitId":"stein414"},"content":"import data.TaskList;"},{"lineNumber":15,"author":{"gitId":"stein414"},"content":"import ui.TextUi;"},{"lineNumber":16,"author":{"gitId":"stein414"},"content":""},{"lineNumber":17,"author":{"gitId":"stein414"},"content":"public class AddEventCommandTest {"},{"lineNumber":18,"author":{"gitId":"stein414"},"content":""},{"lineNumber":19,"author":{"gitId":"stein414"},"content":"    private TaskList tasks;"},{"lineNumber":20,"author":{"gitId":"stein414"},"content":"    private TextUi ui;"},{"lineNumber":21,"author":{"gitId":"stein414"},"content":""},{"lineNumber":22,"author":{"gitId":"stein414"},"content":"    @BeforeEach"},{"lineNumber":23,"author":{"gitId":"stein414"},"content":"    void setUp() {"},{"lineNumber":24,"author":{"gitId":"stein414"},"content":"        tasks \u003d new TaskList();"},{"lineNumber":25,"author":{"gitId":"stein414"},"content":"        ui \u003d new TextUi();"},{"lineNumber":26,"author":{"gitId":"stein414"},"content":"    }"},{"lineNumber":27,"author":{"gitId":"stein414"},"content":""},{"lineNumber":28,"author":{"gitId":"stein414"},"content":"    @Test"},{"lineNumber":29,"author":{"gitId":"stein414"},"content":"    @DisplayName(\"AddEventCommand should add to TaskList\")"},{"lineNumber":30,"author":{"gitId":"stein414"},"content":"    void testOutput() throws IOException {"},{"lineNumber":31,"author":{"gitId":"stein414"},"content":"        Event event \u003d new Event(\"a\", new TagList(), LocalDate.parse(\"2020-01-01\"));"},{"lineNumber":32,"author":{"gitId":"stein414"},"content":"        Command command \u003d new AddEventCommand(event);"},{"lineNumber":33,"author":{"gitId":"stein414"},"content":""},{"lineNumber":34,"author":{"gitId":"stein414"},"content":"        command.execute(tasks, ui);"},{"lineNumber":35,"author":{"gitId":"stein414"},"content":""},{"lineNumber":36,"author":{"gitId":"stein414"},"content":"        assertEquals(event, tasks.get(0));"},{"lineNumber":37,"author":{"gitId":"stein414"},"content":"    }"},{"lineNumber":38,"author":{"gitId":"stein414"},"content":"}"}],"authorContributionMap":{"stein414":38}},{"path":"src/test/java/commands/AddTodoCommandTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"stein414"},"content":"package commands;"},{"lineNumber":2,"author":{"gitId":"stein414"},"content":""},{"lineNumber":3,"author":{"gitId":"stein414"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;"},{"lineNumber":4,"author":{"gitId":"stein414"},"content":""},{"lineNumber":5,"author":{"gitId":"stein414"},"content":"import java.io.IOException;"},{"lineNumber":6,"author":{"gitId":"stein414"},"content":""},{"lineNumber":7,"author":{"gitId":"stein414"},"content":"import org.junit.jupiter.api.BeforeEach;"},{"lineNumber":8,"author":{"gitId":"stein414"},"content":"import org.junit.jupiter.api.DisplayName;"},{"lineNumber":9,"author":{"gitId":"stein414"},"content":"import org.junit.jupiter.api.Test;"},{"lineNumber":10,"author":{"gitId":"stein414"},"content":""},{"lineNumber":11,"author":{"gitId":"stein414"},"content":"import data.TagList;"},{"lineNumber":12,"author":{"gitId":"stein414"},"content":"import data.TaskList;"},{"lineNumber":13,"author":{"gitId":"stein414"},"content":"import data.Todo;"},{"lineNumber":14,"author":{"gitId":"stein414"},"content":"import ui.TextUi;"},{"lineNumber":15,"author":{"gitId":"stein414"},"content":""},{"lineNumber":16,"author":{"gitId":"stein414"},"content":"public class AddTodoCommandTest {"},{"lineNumber":17,"author":{"gitId":"stein414"},"content":""},{"lineNumber":18,"author":{"gitId":"stein414"},"content":"    private TaskList tasks;"},{"lineNumber":19,"author":{"gitId":"stein414"},"content":"    private TextUi ui;"},{"lineNumber":20,"author":{"gitId":"stein414"},"content":""},{"lineNumber":21,"author":{"gitId":"stein414"},"content":"    @BeforeEach"},{"lineNumber":22,"author":{"gitId":"stein414"},"content":"    void setUp() {"},{"lineNumber":23,"author":{"gitId":"stein414"},"content":"        tasks \u003d new TaskList();"},{"lineNumber":24,"author":{"gitId":"stein414"},"content":"        ui \u003d new TextUi();"},{"lineNumber":25,"author":{"gitId":"stein414"},"content":"    }"},{"lineNumber":26,"author":{"gitId":"stein414"},"content":""},{"lineNumber":27,"author":{"gitId":"stein414"},"content":"    @Test"},{"lineNumber":28,"author":{"gitId":"stein414"},"content":"    @DisplayName(\"AddToDoCommand should add to TaskList\")"},{"lineNumber":29,"author":{"gitId":"stein414"},"content":"    void testOutput() throws IOException {"},{"lineNumber":30,"author":{"gitId":"stein414"},"content":"        Todo todo \u003d new Todo(\"a\", new TagList());"},{"lineNumber":31,"author":{"gitId":"stein414"},"content":"        Command command \u003d new AddTodoCommand(todo);"},{"lineNumber":32,"author":{"gitId":"stein414"},"content":""},{"lineNumber":33,"author":{"gitId":"stein414"},"content":"        command.execute(tasks, ui);"},{"lineNumber":34,"author":{"gitId":"stein414"},"content":""},{"lineNumber":35,"author":{"gitId":"stein414"},"content":"        assertEquals(todo, tasks.get(0));"},{"lineNumber":36,"author":{"gitId":"stein414"},"content":"    }"},{"lineNumber":37,"author":{"gitId":"stein414"},"content":"}"}],"authorContributionMap":{"stein414":37}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"stein414"},"content":"todo borrow book"},{"lineNumber":2,"author":{"gitId":"stein414"},"content":"deadline return book /by Sunday"},{"lineNumber":3,"author":{"gitId":"stein414"},"content":"event project meeting /at Mon 2-4pm"},{"lineNumber":4,"author":{"gitId":"stein414"},"content":"list"},{"lineNumber":5,"author":{"gitId":"stein414"},"content":"done 1"},{"lineNumber":6,"author":{"gitId":"stein414"},"content":"done 3"},{"lineNumber":7,"author":{"gitId":"stein414"},"content":"list"},{"lineNumber":8,"author":{"gitId":"stein414"},"content":"done 2"},{"lineNumber":9,"author":{"gitId":"stein414"},"content":"event a /at"},{"lineNumber":10,"author":{"gitId":"stein414"},"content":"event a /at a"},{"lineNumber":11,"author":{"gitId":"stein414"},"content":"event a /at"},{"lineNumber":12,"author":{"gitId":"stein414"},"content":"deadline b"},{"lineNumber":13,"author":{"gitId":"stein414"},"content":"deadline"},{"lineNumber":14,"author":{"gitId":"stein414"},"content":"deadline /by"},{"lineNumber":15,"author":{"gitId":"stein414"},"content":"deadline /by a"},{"lineNumber":16,"author":{"gitId":"stein414"},"content":"deadline fdasf /by d"},{"lineNumber":17,"author":{"gitId":"stein414"},"content":"list"},{"lineNumber":18,"author":{"gitId":"stein414"},"content":"todo"},{"lineNumber":19,"author":{"gitId":"stein414"},"content":"todo afdsa"},{"lineNumber":20,"author":{"gitId":"stein414"},"content":"list"},{"lineNumber":21,"author":{"gitId":"stein414"},"content":"done 4"},{"lineNumber":22,"author":{"gitId":"stein414"},"content":"done 5"},{"lineNumber":23,"author":{"gitId":"stein414"},"content":"done 6"},{"lineNumber":24,"author":{"gitId":"stein414"},"content":"list"},{"lineNumber":25,"author":{"gitId":"stein414"},"content":"done 0"},{"lineNumber":26,"author":{"gitId":"stein414"},"content":"done -1"},{"lineNumber":27,"author":{"gitId":"stein414"},"content":"done 7"},{"lineNumber":28,"author":{"gitId":"stein414"},"content":"list"},{"lineNumber":29,"author":{"gitId":"stein414"},"content":"delete 0"},{"lineNumber":30,"author":{"gitId":"stein414"},"content":"delete -1"},{"lineNumber":31,"author":{"gitId":"stein414"},"content":"delete 7"},{"lineNumber":32,"author":{"gitId":"stein414"},"content":"delete 4"},{"lineNumber":33,"author":{"gitId":"stein414"},"content":"list"},{"lineNumber":34,"author":{"gitId":"stein414"},"content":"delete 4"},{"lineNumber":35,"author":{"gitId":"stein414"},"content":"list"},{"lineNumber":36,"author":{"gitId":"stein414"},"content":"delete 1"},{"lineNumber":37,"author":{"gitId":"stein414"},"content":"list"},{"lineNumber":38,"author":{"gitId":"stein414"},"content":"delete 2"},{"lineNumber":39,"author":{"gitId":"stein414"},"content":"list"},{"lineNumber":40,"author":{"gitId":"stein414"},"content":"delete 1"},{"lineNumber":41,"author":{"gitId":"stein414"},"content":"list"},{"lineNumber":42,"author":{"gitId":"stein414"},"content":"delete 1"},{"lineNumber":43,"author":{"gitId":"stein414"},"content":"list"},{"lineNumber":44,"author":{"gitId":"stein414"},"content":"bye"}],"authorContributionMap":{"stein414":44}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF"},{"lineNumber":2,"author":{"gitId":"-"},"content":""},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin"},{"lineNumber":5,"author":{"gitId":"-"},"content":""},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run"},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT"},{"lineNumber":8,"author":{"gitId":"-"},"content":""},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder"},{"lineNumber":10,"author":{"gitId":"-"},"content":"javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\*.java"},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 ("},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1"},{"lineNumber":14,"author":{"gitId":"-"},"content":")"},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0"},{"lineNumber":16,"author":{"gitId":"-"},"content":""},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"},{"lineNumber":18,"author":{"gitId":"stein414"},"content":"java -classpath ..\\bin duke.duke \u003c input.txt \u003e ACTUAL.TXT"},{"lineNumber":19,"author":{"gitId":"-"},"content":""},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM compare the output to the expected output"},{"lineNumber":21,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT"}],"authorContributionMap":{"stein414":1,"-":20}},{"path":"text-ui-test/runtest.sh","fileType":"sh","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"#!/usr/bin/env bash"},{"lineNumber":2,"author":{"gitId":"-"},"content":""},{"lineNumber":3,"author":{"gitId":"-"},"content":"# create bin directory if it doesn\u0027t exist"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if [ ! -d \"../bin\" ]"},{"lineNumber":5,"author":{"gitId":"-"},"content":"then"},{"lineNumber":6,"author":{"gitId":"-"},"content":"    mkdir ../bin"},{"lineNumber":7,"author":{"gitId":"-"},"content":"fi"},{"lineNumber":8,"author":{"gitId":"-"},"content":""},{"lineNumber":9,"author":{"gitId":"-"},"content":"# delete output from previous run"},{"lineNumber":10,"author":{"gitId":"-"},"content":"if [ -e \"./ACTUAL.TXT\" ]"},{"lineNumber":11,"author":{"gitId":"-"},"content":"then"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    rm ACTUAL.TXT"},{"lineNumber":13,"author":{"gitId":"-"},"content":"fi"},{"lineNumber":14,"author":{"gitId":"-"},"content":""},{"lineNumber":15,"author":{"gitId":"-"},"content":"# compile the code into the bin folder, terminates if error occurred"},{"lineNumber":16,"author":{"gitId":"stein414"},"content":"if ! javac -cp ../src/main/java -Xlint:none -d ../bin ../src/main/java/Duke/*.java"},{"lineNumber":17,"author":{"gitId":"-"},"content":"then"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    echo \"********** BUILD FAILURE **********\""},{"lineNumber":19,"author":{"gitId":"-"},"content":"    exit 1"},{"lineNumber":20,"author":{"gitId":"-"},"content":"fi"},{"lineNumber":21,"author":{"gitId":"-"},"content":""},{"lineNumber":22,"author":{"gitId":"-"},"content":"# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"},{"lineNumber":23,"author":{"gitId":"stein414"},"content":"java -classpath ../bin duke.Duke \u003c input.txt \u003e ACTUAL.TXT"},{"lineNumber":24,"author":{"gitId":"-"},"content":""},{"lineNumber":25,"author":{"gitId":"-"},"content":"# convert to UNIX format"},{"lineNumber":26,"author":{"gitId":"-"},"content":"cp EXPECTED.TXT EXPECTED-UNIX.TXT"},{"lineNumber":27,"author":{"gitId":"-"},"content":"dos2unix ACTUAL.TXT EXPECTED-UNIX.TXT"},{"lineNumber":28,"author":{"gitId":"-"},"content":""},{"lineNumber":29,"author":{"gitId":"-"},"content":"# compare the output to the expected output"},{"lineNumber":30,"author":{"gitId":"-"},"content":"diff ACTUAL.TXT EXPECTED-UNIX.TXT"},{"lineNumber":31,"author":{"gitId":"-"},"content":"if [ $? -eq 0 ]"},{"lineNumber":32,"author":{"gitId":"-"},"content":"then"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    echo \"Test result: PASSED\""},{"lineNumber":34,"author":{"gitId":"-"},"content":"    exit 0"},{"lineNumber":35,"author":{"gitId":"-"},"content":"else"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    echo \"Test result: FAILED\""},{"lineNumber":37,"author":{"gitId":"-"},"content":"    exit 1"},{"lineNumber":38,"author":{"gitId":"-"},"content":"fi"}],"authorContributionMap":{"stein414":2,"-":36}}]
