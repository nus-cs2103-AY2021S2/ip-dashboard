[{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027checkstyle\u0027"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027"},{"lineNumber":6,"author":{"gitId":"-"},"content":"}"},{"lineNumber":7,"author":{"gitId":"-"},"content":""},{"lineNumber":8,"author":{"gitId":"-"},"content":"repositories {"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    mavenCentral()"},{"lineNumber":10,"author":{"gitId":"-"},"content":"}"},{"lineNumber":11,"author":{"gitId":"-"},"content":""},{"lineNumber":12,"author":{"gitId":"-"},"content":"dependencies {"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.5.0\u0027"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.5.0\u0027"},{"lineNumber":15,"author":{"gitId":"stein414"},"content":"    // https://stackoverflow.com/a/34934226 Adding jackson via gradle"},{"lineNumber":16,"author":{"gitId":"stein414"},"content":"    implementation \u0027com.fasterxml.jackson.core:jackson-core:2.12.1\u0027"},{"lineNumber":17,"author":{"gitId":"stein414"},"content":"    implementation \u0027com.fasterxml.jackson.core:jackson-annotations:2.12.1\u0027"},{"lineNumber":18,"author":{"gitId":"stein414"},"content":"    implementation \u0027com.fasterxml.jackson.core:jackson-databind:2.12.1\u0027"},{"lineNumber":19,"author":{"gitId":"stein414"},"content":"    implementation \u0027com.fasterxml.jackson.datatype:jackson-datatype-jsr310:2.12.1\u0027"},{"lineNumber":20,"author":{"gitId":"-"},"content":"}"},{"lineNumber":21,"author":{"gitId":"-"},"content":""},{"lineNumber":22,"author":{"gitId":"-"},"content":"test {"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    useJUnitPlatform()"},{"lineNumber":24,"author":{"gitId":"-"},"content":""},{"lineNumber":25,"author":{"gitId":"-"},"content":"    testLogging {"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\""},{"lineNumber":27,"author":{"gitId":"-"},"content":""},{"lineNumber":28,"author":{"gitId":"-"},"content":"        showExceptions true"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\""},{"lineNumber":30,"author":{"gitId":"-"},"content":"        showCauses true"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        showStackTraces true"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":34,"author":{"gitId":"-"},"content":"}"},{"lineNumber":35,"author":{"gitId":"-"},"content":""},{"lineNumber":36,"author":{"gitId":"-"},"content":"application {"},{"lineNumber":37,"author":{"gitId":"stein414"},"content":"    mainClassName \u003d \"duke.Duke\""},{"lineNumber":38,"author":{"gitId":"-"},"content":"}"},{"lineNumber":39,"author":{"gitId":"-"},"content":""},{"lineNumber":40,"author":{"gitId":"-"},"content":"shadowJar {"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    archiveBaseName \u003d \"duke\""},{"lineNumber":42,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null"},{"lineNumber":43,"author":{"gitId":"-"},"content":"}"},{"lineNumber":44,"author":{"gitId":"-"},"content":""},{"lineNumber":45,"author":{"gitId":"-"},"content":"checkstyle {"},{"lineNumber":46,"author":{"gitId":"stein414"},"content":"    toolVersion \u00278.39\u0027"},{"lineNumber":47,"author":{"gitId":"stein414"},"content":"    showViolations \u003d true"},{"lineNumber":48,"author":{"gitId":"-"},"content":"}"},{"lineNumber":49,"author":{"gitId":"-"},"content":""},{"lineNumber":50,"author":{"gitId":"-"},"content":"run{"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in"},{"lineNumber":52,"author":{"gitId":"-"},"content":"}"}],"authorContributionMap":{"stein414":8,"-":44}},{"path":"setup/setup.sh","fileType":"sh","lines":[{"lineNumber":1,"author":{"gitId":"stein414"},"content":"#!/usr/bin/env bash"},{"lineNumber":2,"author":{"gitId":"stein414"},"content":"cp setup/pre-commit .git/hooks/pre-commit"},{"lineNumber":3,"author":{"gitId":"stein414"},"content":"git config --add checkstyle.jar \u0027config/checkstyle/checkstyle-8.39-all.jar\u0027"},{"lineNumber":4,"author":{"gitId":"stein414"},"content":"git config --add checkstyle.checkfile \u0027config/checkstyle/checkstyle.xml\u0027"},{"lineNumber":5,"author":{"gitId":"stein414"},"content":""}],"authorContributionMap":{"stein414":5}},{"path":"src/main/java/commands/AddDeadlineCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"stein414"},"content":"package commands;"},{"lineNumber":2,"author":{"gitId":"stein414"},"content":""},{"lineNumber":3,"author":{"gitId":"stein414"},"content":"import java.io.IOException;"},{"lineNumber":4,"author":{"gitId":"stein414"},"content":""},{"lineNumber":5,"author":{"gitId":"stein414"},"content":"import data.Deadline;"},{"lineNumber":6,"author":{"gitId":"stein414"},"content":"import data.TaskList;"},{"lineNumber":7,"author":{"gitId":"stein414"},"content":"import ui.TextUi;"},{"lineNumber":8,"author":{"gitId":"stein414"},"content":""},{"lineNumber":9,"author":{"gitId":"stein414"},"content":"public class AddDeadlineCommand extends Command {"},{"lineNumber":10,"author":{"gitId":"stein414"},"content":"    public static final String COMMAND_TEXT \u003d \"deadline\";"},{"lineNumber":11,"author":{"gitId":"stein414"},"content":""},{"lineNumber":12,"author":{"gitId":"stein414"},"content":"    private Deadline deadline;"},{"lineNumber":13,"author":{"gitId":"stein414"},"content":""},{"lineNumber":14,"author":{"gitId":"stein414"},"content":"    public AddDeadlineCommand(Deadline deadline) {"},{"lineNumber":15,"author":{"gitId":"stein414"},"content":"        this.deadline \u003d deadline;"},{"lineNumber":16,"author":{"gitId":"stein414"},"content":"    }"},{"lineNumber":17,"author":{"gitId":"stein414"},"content":""},{"lineNumber":18,"author":{"gitId":"stein414"},"content":"    /**"},{"lineNumber":19,"author":{"gitId":"stein414"},"content":"     * Adds Deadline into given tasks and outputs corresponding acknowledgement message"},{"lineNumber":20,"author":{"gitId":"stein414"},"content":"     * @param tasks"},{"lineNumber":21,"author":{"gitId":"stein414"},"content":"     * @param ui"},{"lineNumber":22,"author":{"gitId":"stein414"},"content":"     * @throws IOException"},{"lineNumber":23,"author":{"gitId":"stein414"},"content":"     */"},{"lineNumber":24,"author":{"gitId":"stein414"},"content":"    @Override"},{"lineNumber":25,"author":{"gitId":"stein414"},"content":"    public void execute(TaskList tasks, TextUi ui) throws IOException {"},{"lineNumber":26,"author":{"gitId":"stein414"},"content":"        tasks.add(deadline);"},{"lineNumber":27,"author":{"gitId":"stein414"},"content":"        ui.writeAddTask(deadline, tasks);"},{"lineNumber":28,"author":{"gitId":"stein414"},"content":"    }"},{"lineNumber":29,"author":{"gitId":"stein414"},"content":"}"}],"authorContributionMap":{"stein414":29}},{"path":"src/main/java/commands/AddEventCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"stein414"},"content":"package commands;"},{"lineNumber":2,"author":{"gitId":"stein414"},"content":""},{"lineNumber":3,"author":{"gitId":"stein414"},"content":"import java.io.IOException;"},{"lineNumber":4,"author":{"gitId":"stein414"},"content":""},{"lineNumber":5,"author":{"gitId":"stein414"},"content":"import data.Event;"},{"lineNumber":6,"author":{"gitId":"stein414"},"content":"import data.TaskList;"},{"lineNumber":7,"author":{"gitId":"stein414"},"content":"import ui.TextUi;"},{"lineNumber":8,"author":{"gitId":"stein414"},"content":""},{"lineNumber":9,"author":{"gitId":"stein414"},"content":"public class AddEventCommand extends Command {"},{"lineNumber":10,"author":{"gitId":"stein414"},"content":"    public static final String COMMAND_TEXT \u003d \"event\";"},{"lineNumber":11,"author":{"gitId":"stein414"},"content":""},{"lineNumber":12,"author":{"gitId":"stein414"},"content":"    private Event event;"},{"lineNumber":13,"author":{"gitId":"stein414"},"content":""},{"lineNumber":14,"author":{"gitId":"stein414"},"content":"    public AddEventCommand(Event event) {"},{"lineNumber":15,"author":{"gitId":"stein414"},"content":"        this.event \u003d event;"},{"lineNumber":16,"author":{"gitId":"stein414"},"content":"    }"},{"lineNumber":17,"author":{"gitId":"stein414"},"content":""},{"lineNumber":18,"author":{"gitId":"stein414"},"content":"    /**"},{"lineNumber":19,"author":{"gitId":"stein414"},"content":"     * Adds event into given tasks and outputs acknowledgement message"},{"lineNumber":20,"author":{"gitId":"stein414"},"content":"     * @param tasks"},{"lineNumber":21,"author":{"gitId":"stein414"},"content":"     * @param ui"},{"lineNumber":22,"author":{"gitId":"stein414"},"content":"     * @throws IOException"},{"lineNumber":23,"author":{"gitId":"stein414"},"content":"     */"},{"lineNumber":24,"author":{"gitId":"stein414"},"content":"    @Override"},{"lineNumber":25,"author":{"gitId":"stein414"},"content":"    public void execute(TaskList tasks, TextUi ui) throws IOException {"},{"lineNumber":26,"author":{"gitId":"stein414"},"content":"        tasks.add(event);"},{"lineNumber":27,"author":{"gitId":"stein414"},"content":"        ui.writeAddTask(event, tasks);"},{"lineNumber":28,"author":{"gitId":"stein414"},"content":"    }"},{"lineNumber":29,"author":{"gitId":"stein414"},"content":"}"}],"authorContributionMap":{"stein414":29}},{"path":"src/main/java/commands/AddTodoCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"stein414"},"content":"package commands;"},{"lineNumber":2,"author":{"gitId":"stein414"},"content":""},{"lineNumber":3,"author":{"gitId":"stein414"},"content":"import java.io.IOException;"},{"lineNumber":4,"author":{"gitId":"stein414"},"content":""},{"lineNumber":5,"author":{"gitId":"stein414"},"content":"import data.TaskList;"},{"lineNumber":6,"author":{"gitId":"stein414"},"content":"import data.Todo;"},{"lineNumber":7,"author":{"gitId":"stein414"},"content":"import ui.TextUi;"},{"lineNumber":8,"author":{"gitId":"stein414"},"content":""},{"lineNumber":9,"author":{"gitId":"stein414"},"content":"public class AddTodoCommand extends Command {"},{"lineNumber":10,"author":{"gitId":"stein414"},"content":"    public static final String COMMAND_TEXT \u003d \"todo\";"},{"lineNumber":11,"author":{"gitId":"stein414"},"content":""},{"lineNumber":12,"author":{"gitId":"stein414"},"content":"    private Todo todo;"},{"lineNumber":13,"author":{"gitId":"stein414"},"content":""},{"lineNumber":14,"author":{"gitId":"stein414"},"content":"    public AddTodoCommand(Todo todo) {"},{"lineNumber":15,"author":{"gitId":"stein414"},"content":"        this.todo \u003d todo;"},{"lineNumber":16,"author":{"gitId":"stein414"},"content":"    }"},{"lineNumber":17,"author":{"gitId":"stein414"},"content":""},{"lineNumber":18,"author":{"gitId":"stein414"},"content":"    /**"},{"lineNumber":19,"author":{"gitId":"stein414"},"content":"     * Adds todo to given tasks and outputs corresponding acknowledgement message"},{"lineNumber":20,"author":{"gitId":"stein414"},"content":"     * @param tasks"},{"lineNumber":21,"author":{"gitId":"stein414"},"content":"     * @param ui"},{"lineNumber":22,"author":{"gitId":"stein414"},"content":"     * @throws IOException"},{"lineNumber":23,"author":{"gitId":"stein414"},"content":"     */"},{"lineNumber":24,"author":{"gitId":"stein414"},"content":"    @Override"},{"lineNumber":25,"author":{"gitId":"stein414"},"content":"    public void execute(TaskList tasks, TextUi ui) throws IOException {"},{"lineNumber":26,"author":{"gitId":"stein414"},"content":"        tasks.add(todo);"},{"lineNumber":27,"author":{"gitId":"stein414"},"content":"        ui.writeAddTask(todo, tasks);"},{"lineNumber":28,"author":{"gitId":"stein414"},"content":"    }"},{"lineNumber":29,"author":{"gitId":"stein414"},"content":"}"}],"authorContributionMap":{"stein414":29}},{"path":"src/main/java/commands/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"stein414"},"content":"package commands;"},{"lineNumber":2,"author":{"gitId":"stein414"},"content":""},{"lineNumber":3,"author":{"gitId":"stein414"},"content":"import java.io.IOException;"},{"lineNumber":4,"author":{"gitId":"stein414"},"content":""},{"lineNumber":5,"author":{"gitId":"stein414"},"content":"import data.TaskList;"},{"lineNumber":6,"author":{"gitId":"stein414"},"content":"import ui.TextUi;"},{"lineNumber":7,"author":{"gitId":"stein414"},"content":""},{"lineNumber":8,"author":{"gitId":"stein414"},"content":"/**"},{"lineNumber":9,"author":{"gitId":"stein414"},"content":" * The base Command class that all commands will need to extend."},{"lineNumber":10,"author":{"gitId":"stein414"},"content":" * Only subclasses are meant to be used."},{"lineNumber":11,"author":{"gitId":"stein414"},"content":" */"},{"lineNumber":12,"author":{"gitId":"stein414"},"content":"public abstract class Command {"},{"lineNumber":13,"author":{"gitId":"stein414"},"content":"    protected Command() {}"},{"lineNumber":14,"author":{"gitId":"stein414"},"content":""},{"lineNumber":15,"author":{"gitId":"stein414"},"content":"    /**"},{"lineNumber":16,"author":{"gitId":"stein414"},"content":"     * Executes the command\u0027s logic"},{"lineNumber":17,"author":{"gitId":"stein414"},"content":"     * @param tasks"},{"lineNumber":18,"author":{"gitId":"stein414"},"content":"     * @param ui"},{"lineNumber":19,"author":{"gitId":"stein414"},"content":"     * @throws IOException"},{"lineNumber":20,"author":{"gitId":"stein414"},"content":"     */"},{"lineNumber":21,"author":{"gitId":"stein414"},"content":"    public abstract void execute(TaskList tasks, TextUi ui) throws IOException;"},{"lineNumber":22,"author":{"gitId":"stein414"},"content":"}"}],"authorContributionMap":{"stein414":22}},{"path":"src/main/java/commands/DeleteCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"stein414"},"content":"package commands;"},{"lineNumber":2,"author":{"gitId":"stein414"},"content":""},{"lineNumber":3,"author":{"gitId":"stein414"},"content":"import java.io.IOException;"},{"lineNumber":4,"author":{"gitId":"stein414"},"content":""},{"lineNumber":5,"author":{"gitId":"stein414"},"content":"import data.Task;"},{"lineNumber":6,"author":{"gitId":"stein414"},"content":"import data.TaskList;"},{"lineNumber":7,"author":{"gitId":"stein414"},"content":"import ui.TextUi;"},{"lineNumber":8,"author":{"gitId":"stein414"},"content":""},{"lineNumber":9,"author":{"gitId":"stein414"},"content":"public class DeleteCommand extends Command {"},{"lineNumber":10,"author":{"gitId":"stein414"},"content":"    public static final String COMMAND_TEXT \u003d \"delete\";"},{"lineNumber":11,"author":{"gitId":"stein414"},"content":""},{"lineNumber":12,"author":{"gitId":"stein414"},"content":"    private int indexToDelete;"},{"lineNumber":13,"author":{"gitId":"stein414"},"content":""},{"lineNumber":14,"author":{"gitId":"stein414"},"content":"    public DeleteCommand(int indexToDelete) {"},{"lineNumber":15,"author":{"gitId":"stein414"},"content":"        this.indexToDelete \u003d indexToDelete;"},{"lineNumber":16,"author":{"gitId":"stein414"},"content":"    }"},{"lineNumber":17,"author":{"gitId":"stein414"},"content":""},{"lineNumber":18,"author":{"gitId":"stein414"},"content":"    /**"},{"lineNumber":19,"author":{"gitId":"stein414"},"content":"     * Deletes the selected task from the given tasks and outputs the corresponding acknowlegement message"},{"lineNumber":20,"author":{"gitId":"stein414"},"content":"     * @param tasks"},{"lineNumber":21,"author":{"gitId":"stein414"},"content":"     * @param ui"},{"lineNumber":22,"author":{"gitId":"stein414"},"content":"     * @throws IOException"},{"lineNumber":23,"author":{"gitId":"stein414"},"content":"     */"},{"lineNumber":24,"author":{"gitId":"stein414"},"content":"    @Override"},{"lineNumber":25,"author":{"gitId":"stein414"},"content":"    public void execute(TaskList tasks, TextUi ui) throws IOException {"},{"lineNumber":26,"author":{"gitId":"stein414"},"content":"        if (indexToDelete \u003c 0 || indexToDelete \u003e\u003d tasks.size()) {"},{"lineNumber":27,"author":{"gitId":"stein414"},"content":"            ui.write(\"Invalid number.\");"},{"lineNumber":28,"author":{"gitId":"stein414"},"content":"            return;"},{"lineNumber":29,"author":{"gitId":"stein414"},"content":"        }"},{"lineNumber":30,"author":{"gitId":"stein414"},"content":""},{"lineNumber":31,"author":{"gitId":"stein414"},"content":"        Task taskToDelete \u003d tasks.get(indexToDelete);"},{"lineNumber":32,"author":{"gitId":"stein414"},"content":"        tasks.remove(indexToDelete);"},{"lineNumber":33,"author":{"gitId":"stein414"},"content":"        ui.writeDeleteTask(taskToDelete, tasks);"},{"lineNumber":34,"author":{"gitId":"stein414"},"content":"    }"},{"lineNumber":35,"author":{"gitId":"stein414"},"content":"}"}],"authorContributionMap":{"stein414":35}},{"path":"src/main/java/commands/DoneCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"stein414"},"content":"package commands;"},{"lineNumber":2,"author":{"gitId":"stein414"},"content":""},{"lineNumber":3,"author":{"gitId":"stein414"},"content":"import java.io.IOException;"},{"lineNumber":4,"author":{"gitId":"stein414"},"content":""},{"lineNumber":5,"author":{"gitId":"stein414"},"content":"import data.Task;"},{"lineNumber":6,"author":{"gitId":"stein414"},"content":"import data.TaskList;"},{"lineNumber":7,"author":{"gitId":"stein414"},"content":"import ui.TextUi;"},{"lineNumber":8,"author":{"gitId":"stein414"},"content":""},{"lineNumber":9,"author":{"gitId":"stein414"},"content":"public class DoneCommand extends Command {"},{"lineNumber":10,"author":{"gitId":"stein414"},"content":"    public static final String COMMAND_TEXT \u003d \"done\";"},{"lineNumber":11,"author":{"gitId":"stein414"},"content":""},{"lineNumber":12,"author":{"gitId":"stein414"},"content":"    private int indexToSetDone;"},{"lineNumber":13,"author":{"gitId":"stein414"},"content":""},{"lineNumber":14,"author":{"gitId":"stein414"},"content":"    public DoneCommand(int indexToSetDone) {"},{"lineNumber":15,"author":{"gitId":"stein414"},"content":"        this.indexToSetDone \u003d indexToSetDone;"},{"lineNumber":16,"author":{"gitId":"stein414"},"content":"    }"},{"lineNumber":17,"author":{"gitId":"stein414"},"content":""},{"lineNumber":18,"author":{"gitId":"stein414"},"content":"    /**"},{"lineNumber":19,"author":{"gitId":"stein414"},"content":"     * Marks the selected task as done and outputs the corresponding acknowledgement message"},{"lineNumber":20,"author":{"gitId":"stein414"},"content":"     * @param tasks"},{"lineNumber":21,"author":{"gitId":"stein414"},"content":"     * @param ui"},{"lineNumber":22,"author":{"gitId":"stein414"},"content":"     * @throws IOException"},{"lineNumber":23,"author":{"gitId":"stein414"},"content":"     */"},{"lineNumber":24,"author":{"gitId":"stein414"},"content":"    @Override"},{"lineNumber":25,"author":{"gitId":"stein414"},"content":"    public void execute(TaskList tasks, TextUi ui) throws IOException {"},{"lineNumber":26,"author":{"gitId":"stein414"},"content":"        if (indexToSetDone \u003c 0 || indexToSetDone \u003e\u003d tasks.size()) {"},{"lineNumber":27,"author":{"gitId":"stein414"},"content":"            ui.write(\"Invalid number.\");"},{"lineNumber":28,"author":{"gitId":"stein414"},"content":"            return;"},{"lineNumber":29,"author":{"gitId":"stein414"},"content":"        }"},{"lineNumber":30,"author":{"gitId":"stein414"},"content":""},{"lineNumber":31,"author":{"gitId":"stein414"},"content":"        Task task \u003d tasks.get(indexToSetDone);"},{"lineNumber":32,"author":{"gitId":"stein414"},"content":"        task.markAsDone();"},{"lineNumber":33,"author":{"gitId":"stein414"},"content":"        ui.writeDoneTask(task);"},{"lineNumber":34,"author":{"gitId":"stein414"},"content":"    }"},{"lineNumber":35,"author":{"gitId":"stein414"},"content":"}"}],"authorContributionMap":{"stein414":35}},{"path":"src/main/java/commands/ExitCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"stein414"},"content":"package commands;"},{"lineNumber":2,"author":{"gitId":"stein414"},"content":""},{"lineNumber":3,"author":{"gitId":"stein414"},"content":"import java.io.IOException;"},{"lineNumber":4,"author":{"gitId":"stein414"},"content":""},{"lineNumber":5,"author":{"gitId":"stein414"},"content":"import data.TaskList;"},{"lineNumber":6,"author":{"gitId":"stein414"},"content":"import ui.TextUi;"},{"lineNumber":7,"author":{"gitId":"stein414"},"content":""},{"lineNumber":8,"author":{"gitId":"stein414"},"content":"public class ExitCommand extends Command {"},{"lineNumber":9,"author":{"gitId":"stein414"},"content":"    public static final String COMMAND_TEXT \u003d \"bye\";"},{"lineNumber":10,"author":{"gitId":"stein414"},"content":""},{"lineNumber":11,"author":{"gitId":"stein414"},"content":"    /**"},{"lineNumber":12,"author":{"gitId":"stein414"},"content":"     * Outputs exiting message"},{"lineNumber":13,"author":{"gitId":"stein414"},"content":"     * @param tasks"},{"lineNumber":14,"author":{"gitId":"stein414"},"content":"     * @param ui"},{"lineNumber":15,"author":{"gitId":"stein414"},"content":"     * @throws IOException"},{"lineNumber":16,"author":{"gitId":"stein414"},"content":"     */"},{"lineNumber":17,"author":{"gitId":"stein414"},"content":"    @Override"},{"lineNumber":18,"author":{"gitId":"stein414"},"content":"    public void execute(TaskList tasks, TextUi ui) throws IOException {"},{"lineNumber":19,"author":{"gitId":"stein414"},"content":"        ui.write(\"Bye. Hope to see you again soon!\");"},{"lineNumber":20,"author":{"gitId":"stein414"},"content":"    }"},{"lineNumber":21,"author":{"gitId":"stein414"},"content":""},{"lineNumber":22,"author":{"gitId":"stein414"},"content":"    /**"},{"lineNumber":23,"author":{"gitId":"stein414"},"content":"     * Checks if given command is an ExitCommand"},{"lineNumber":24,"author":{"gitId":"stein414"},"content":"     * @param command"},{"lineNumber":25,"author":{"gitId":"stein414"},"content":"     * @return"},{"lineNumber":26,"author":{"gitId":"stein414"},"content":"     */"},{"lineNumber":27,"author":{"gitId":"stein414"},"content":"    public static boolean isExit(Command command) {"},{"lineNumber":28,"author":{"gitId":"stein414"},"content":"        return command instanceof ExitCommand;"},{"lineNumber":29,"author":{"gitId":"stein414"},"content":"    }"},{"lineNumber":30,"author":{"gitId":"stein414"},"content":"}"}],"authorContributionMap":{"stein414":30}},{"path":"src/main/java/commands/FindCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"stein414"},"content":"package commands;"},{"lineNumber":2,"author":{"gitId":"stein414"},"content":""},{"lineNumber":3,"author":{"gitId":"stein414"},"content":"import java.io.IOException;"},{"lineNumber":4,"author":{"gitId":"stein414"},"content":"import java.util.stream.Collectors;"},{"lineNumber":5,"author":{"gitId":"stein414"},"content":""},{"lineNumber":6,"author":{"gitId":"stein414"},"content":"import data.TaskList;"},{"lineNumber":7,"author":{"gitId":"stein414"},"content":"import ui.TextUi;"},{"lineNumber":8,"author":{"gitId":"stein414"},"content":""},{"lineNumber":9,"author":{"gitId":"stein414"},"content":"public class FindCommand extends Command {"},{"lineNumber":10,"author":{"gitId":"stein414"},"content":"    public static final String COMMAND_TEXT \u003d \"find\";"},{"lineNumber":11,"author":{"gitId":"stein414"},"content":""},{"lineNumber":12,"author":{"gitId":"stein414"},"content":"    private String query;"},{"lineNumber":13,"author":{"gitId":"stein414"},"content":""},{"lineNumber":14,"author":{"gitId":"stein414"},"content":"    public FindCommand(String query) {"},{"lineNumber":15,"author":{"gitId":"stein414"},"content":"        this.query \u003d query;"},{"lineNumber":16,"author":{"gitId":"stein414"},"content":"    }"},{"lineNumber":17,"author":{"gitId":"stein414"},"content":""},{"lineNumber":18,"author":{"gitId":"stein414"},"content":"    @Override"},{"lineNumber":19,"author":{"gitId":"stein414"},"content":"    public void execute(TaskList tasks, TextUi ui) throws IOException {"},{"lineNumber":20,"author":{"gitId":"stein414"},"content":"        TaskList filteredTasks \u003d tasks.stream()"},{"lineNumber":21,"author":{"gitId":"stein414"},"content":"            .filter(t -\u003e t.getDescription().contains(query))"},{"lineNumber":22,"author":{"gitId":"stein414"},"content":"            .collect(Collectors.toCollection(TaskList::new));"},{"lineNumber":23,"author":{"gitId":"stein414"},"content":""},{"lineNumber":24,"author":{"gitId":"stein414"},"content":"        ui.writeTasks(filteredTasks);"},{"lineNumber":25,"author":{"gitId":"stein414"},"content":"    }"},{"lineNumber":26,"author":{"gitId":"stein414"},"content":"}"}],"authorContributionMap":{"stein414":26}},{"path":"src/main/java/commands/ListCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"stein414"},"content":"package commands;"},{"lineNumber":2,"author":{"gitId":"stein414"},"content":""},{"lineNumber":3,"author":{"gitId":"stein414"},"content":"import java.io.IOException;"},{"lineNumber":4,"author":{"gitId":"stein414"},"content":""},{"lineNumber":5,"author":{"gitId":"stein414"},"content":"import data.TaskList;"},{"lineNumber":6,"author":{"gitId":"stein414"},"content":"import ui.TextUi;"},{"lineNumber":7,"author":{"gitId":"stein414"},"content":""},{"lineNumber":8,"author":{"gitId":"stein414"},"content":"public class ListCommand extends Command {"},{"lineNumber":9,"author":{"gitId":"stein414"},"content":"    public static final String COMMAND_TEXT \u003d \"list\";"},{"lineNumber":10,"author":{"gitId":"stein414"},"content":""},{"lineNumber":11,"author":{"gitId":"stein414"},"content":"    /**"},{"lineNumber":12,"author":{"gitId":"stein414"},"content":"     * Outputs the tasks"},{"lineNumber":13,"author":{"gitId":"stein414"},"content":"     * @param tasks"},{"lineNumber":14,"author":{"gitId":"stein414"},"content":"     * @param ui"},{"lineNumber":15,"author":{"gitId":"stein414"},"content":"     * @throws IOException"},{"lineNumber":16,"author":{"gitId":"stein414"},"content":"     */"},{"lineNumber":17,"author":{"gitId":"stein414"},"content":"    @Override"},{"lineNumber":18,"author":{"gitId":"stein414"},"content":"    public void execute(TaskList tasks, TextUi ui) throws IOException {"},{"lineNumber":19,"author":{"gitId":"stein414"},"content":"        ui.writeTasks(tasks);"},{"lineNumber":20,"author":{"gitId":"stein414"},"content":"    }"},{"lineNumber":21,"author":{"gitId":"stein414"},"content":"}"}],"authorContributionMap":{"stein414":21}},{"path":"src/main/java/data/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"stein414"},"content":"package data;"},{"lineNumber":2,"author":{"gitId":"stein414"},"content":""},{"lineNumber":3,"author":{"gitId":"stein414"},"content":"import java.time.LocalDate;"},{"lineNumber":4,"author":{"gitId":"stein414"},"content":"import java.time.format.DateTimeFormatter;"},{"lineNumber":5,"author":{"gitId":"stein414"},"content":""},{"lineNumber":6,"author":{"gitId":"stein414"},"content":"import com.fasterxml.jackson.annotation.JsonProperty;"},{"lineNumber":7,"author":{"gitId":"stein414"},"content":""},{"lineNumber":8,"author":{"gitId":"stein414"},"content":"public class Deadline extends Task {"},{"lineNumber":9,"author":{"gitId":"stein414"},"content":""},{"lineNumber":10,"author":{"gitId":"stein414"},"content":"    @JsonProperty"},{"lineNumber":11,"author":{"gitId":"stein414"},"content":"    protected LocalDate by;"},{"lineNumber":12,"author":{"gitId":"stein414"},"content":"    private String localDateOutputFormat \u003d \"MMM d yyyy\";"},{"lineNumber":13,"author":{"gitId":"stein414"},"content":""},{"lineNumber":14,"author":{"gitId":"stein414"},"content":"    private Deadline() {}"},{"lineNumber":15,"author":{"gitId":"stein414"},"content":""},{"lineNumber":16,"author":{"gitId":"stein414"},"content":"    /**"},{"lineNumber":17,"author":{"gitId":"stein414"},"content":"     * Deadline constructor"},{"lineNumber":18,"author":{"gitId":"stein414"},"content":"     * @param description"},{"lineNumber":19,"author":{"gitId":"stein414"},"content":"     * @param by"},{"lineNumber":20,"author":{"gitId":"stein414"},"content":"     */"},{"lineNumber":21,"author":{"gitId":"stein414"},"content":"    public Deadline(String description, LocalDate by) {"},{"lineNumber":22,"author":{"gitId":"stein414"},"content":"        super(description);"},{"lineNumber":23,"author":{"gitId":"stein414"},"content":"        this.by \u003d by;"},{"lineNumber":24,"author":{"gitId":"stein414"},"content":"    }"},{"lineNumber":25,"author":{"gitId":"stein414"},"content":""},{"lineNumber":26,"author":{"gitId":"stein414"},"content":"    @Override"},{"lineNumber":27,"author":{"gitId":"stein414"},"content":"    public String toString() {"},{"lineNumber":28,"author":{"gitId":"stein414"},"content":"        return \"[D]\" + super.toString()"},{"lineNumber":29,"author":{"gitId":"stein414"},"content":"            + \" (by: \" + by.format(DateTimeFormatter.ofPattern(localDateOutputFormat)) + \")\";"},{"lineNumber":30,"author":{"gitId":"stein414"},"content":"    }"},{"lineNumber":31,"author":{"gitId":"stein414"},"content":"}"}],"authorContributionMap":{"stein414":31}},{"path":"src/main/java/data/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"stein414"},"content":"package data;"},{"lineNumber":2,"author":{"gitId":"stein414"},"content":""},{"lineNumber":3,"author":{"gitId":"stein414"},"content":"import java.time.LocalDate;"},{"lineNumber":4,"author":{"gitId":"stein414"},"content":"import java.time.format.DateTimeFormatter;"},{"lineNumber":5,"author":{"gitId":"stein414"},"content":""},{"lineNumber":6,"author":{"gitId":"stein414"},"content":"import com.fasterxml.jackson.annotation.JsonProperty;"},{"lineNumber":7,"author":{"gitId":"stein414"},"content":""},{"lineNumber":8,"author":{"gitId":"stein414"},"content":"public class Event extends Task {"},{"lineNumber":9,"author":{"gitId":"stein414"},"content":""},{"lineNumber":10,"author":{"gitId":"stein414"},"content":"    @JsonProperty"},{"lineNumber":11,"author":{"gitId":"stein414"},"content":"    protected LocalDate at;"},{"lineNumber":12,"author":{"gitId":"stein414"},"content":"    private String localDateOutputFormat \u003d \"MMM d yyyy\";"},{"lineNumber":13,"author":{"gitId":"stein414"},"content":""},{"lineNumber":14,"author":{"gitId":"stein414"},"content":"    private Event() {}"},{"lineNumber":15,"author":{"gitId":"stein414"},"content":""},{"lineNumber":16,"author":{"gitId":"stein414"},"content":"    /**"},{"lineNumber":17,"author":{"gitId":"stein414"},"content":"     * Event (Task) constructor"},{"lineNumber":18,"author":{"gitId":"stein414"},"content":"     * @param description"},{"lineNumber":19,"author":{"gitId":"stein414"},"content":"     * @param at"},{"lineNumber":20,"author":{"gitId":"stein414"},"content":"     */"},{"lineNumber":21,"author":{"gitId":"stein414"},"content":"    public Event(String description, LocalDate at) {"},{"lineNumber":22,"author":{"gitId":"stein414"},"content":"        super(description);"},{"lineNumber":23,"author":{"gitId":"stein414"},"content":"        this.at \u003d at;"},{"lineNumber":24,"author":{"gitId":"stein414"},"content":"    }"},{"lineNumber":25,"author":{"gitId":"stein414"},"content":""},{"lineNumber":26,"author":{"gitId":"stein414"},"content":"    @Override"},{"lineNumber":27,"author":{"gitId":"stein414"},"content":"    public String toString() {"},{"lineNumber":28,"author":{"gitId":"stein414"},"content":"        return \"[E]\" + super.toString()"},{"lineNumber":29,"author":{"gitId":"stein414"},"content":"            + \" (at: \" + at.format(DateTimeFormatter.ofPattern(localDateOutputFormat)) + \")\";"},{"lineNumber":30,"author":{"gitId":"stein414"},"content":"    }"},{"lineNumber":31,"author":{"gitId":"stein414"},"content":"}"}],"authorContributionMap":{"stein414":31}},{"path":"src/main/java/data/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"stein414"},"content":"package data;"},{"lineNumber":2,"author":{"gitId":"stein414"},"content":""},{"lineNumber":3,"author":{"gitId":"stein414"},"content":"import com.fasterxml.jackson.annotation.JsonIgnore;"},{"lineNumber":4,"author":{"gitId":"stein414"},"content":"import com.fasterxml.jackson.annotation.JsonProperty;"},{"lineNumber":5,"author":{"gitId":"stein414"},"content":"import com.fasterxml.jackson.annotation.JsonSubTypes;"},{"lineNumber":6,"author":{"gitId":"stein414"},"content":"import com.fasterxml.jackson.annotation.JsonSubTypes.Type;"},{"lineNumber":7,"author":{"gitId":"stein414"},"content":"import com.fasterxml.jackson.annotation.JsonTypeInfo;"},{"lineNumber":8,"author":{"gitId":"stein414"},"content":""},{"lineNumber":9,"author":{"gitId":"stein414"},"content":"/**"},{"lineNumber":10,"author":{"gitId":"stein414"},"content":" * Task is the parent class for all other types of tasks."},{"lineNumber":11,"author":{"gitId":"stein414"},"content":" * The JsonTypeInfo is to enable Jackson to properly serialize and deserialize with json."},{"lineNumber":12,"author":{"gitId":"stein414"},"content":" * The property \"d\" acts as a discrimator for the type of task in json so that Jackson"},{"lineNumber":13,"author":{"gitId":"stein414"},"content":" * can reconstruct the correct task type from json."},{"lineNumber":14,"author":{"gitId":"stein414"},"content":" */"},{"lineNumber":15,"author":{"gitId":"stein414"},"content":"@JsonTypeInfo("},{"lineNumber":16,"author":{"gitId":"stein414"},"content":"    use \u003d JsonTypeInfo.Id.NAME,"},{"lineNumber":17,"author":{"gitId":"stein414"},"content":"    include \u003d JsonTypeInfo.As.PROPERTY,"},{"lineNumber":18,"author":{"gitId":"stein414"},"content":"    property \u003d \"d\")"},{"lineNumber":19,"author":{"gitId":"stein414"},"content":"@JsonSubTypes({"},{"lineNumber":20,"author":{"gitId":"stein414"},"content":"    @Type(value \u003d Todo.class, name \u003d \"Todo\"),"},{"lineNumber":21,"author":{"gitId":"stein414"},"content":"    @Type(value \u003d Deadline.class, name \u003d \"Deadline\"),"},{"lineNumber":22,"author":{"gitId":"stein414"},"content":"    @Type(value \u003d Event.class, name \u003d \"Event\")"},{"lineNumber":23,"author":{"gitId":"stein414"},"content":"})"},{"lineNumber":24,"author":{"gitId":"stein414"},"content":"public class Task {"},{"lineNumber":25,"author":{"gitId":"stein414"},"content":""},{"lineNumber":26,"author":{"gitId":"stein414"},"content":"    @JsonProperty"},{"lineNumber":27,"author":{"gitId":"stein414"},"content":"    protected boolean isDone;"},{"lineNumber":28,"author":{"gitId":"stein414"},"content":"    @JsonProperty"},{"lineNumber":29,"author":{"gitId":"stein414"},"content":"    protected String description;"},{"lineNumber":30,"author":{"gitId":"stein414"},"content":""},{"lineNumber":31,"author":{"gitId":"stein414"},"content":"    protected Task() {}"},{"lineNumber":32,"author":{"gitId":"stein414"},"content":""},{"lineNumber":33,"author":{"gitId":"stein414"},"content":"    /**"},{"lineNumber":34,"author":{"gitId":"stein414"},"content":"     * Task constructor"},{"lineNumber":35,"author":{"gitId":"stein414"},"content":"     *"},{"lineNumber":36,"author":{"gitId":"stein414"},"content":"     * @param description"},{"lineNumber":37,"author":{"gitId":"stein414"},"content":"     */"},{"lineNumber":38,"author":{"gitId":"stein414"},"content":"    public Task(String description) {"},{"lineNumber":39,"author":{"gitId":"stein414"},"content":"        this.description \u003d description;"},{"lineNumber":40,"author":{"gitId":"stein414"},"content":"        this.isDone \u003d false;"},{"lineNumber":41,"author":{"gitId":"stein414"},"content":"    }"},{"lineNumber":42,"author":{"gitId":"stein414"},"content":""},{"lineNumber":43,"author":{"gitId":"stein414"},"content":"    @JsonIgnore"},{"lineNumber":44,"author":{"gitId":"stein414"},"content":"    public String getStatusIcon() {"},{"lineNumber":45,"author":{"gitId":"stein414"},"content":"        return isDone ? \"\\u2713\" : \"\\u2718\"; // return tick or X symbols"},{"lineNumber":46,"author":{"gitId":"stein414"},"content":"    }"},{"lineNumber":47,"author":{"gitId":"stein414"},"content":""},{"lineNumber":48,"author":{"gitId":"stein414"},"content":"    /**"},{"lineNumber":49,"author":{"gitId":"stein414"},"content":"     * return if the tasks is done"},{"lineNumber":50,"author":{"gitId":"stein414"},"content":"     * @return task\u0027s isDone value"},{"lineNumber":51,"author":{"gitId":"stein414"},"content":"     */"},{"lineNumber":52,"author":{"gitId":"stein414"},"content":"    @JsonIgnore"},{"lineNumber":53,"author":{"gitId":"stein414"},"content":"    public boolean isDone() {"},{"lineNumber":54,"author":{"gitId":"stein414"},"content":"        return isDone;"},{"lineNumber":55,"author":{"gitId":"stein414"},"content":"    }"},{"lineNumber":56,"author":{"gitId":"stein414"},"content":""},{"lineNumber":57,"author":{"gitId":"stein414"},"content":"    /**"},{"lineNumber":58,"author":{"gitId":"stein414"},"content":"     * Marks the tasks as done"},{"lineNumber":59,"author":{"gitId":"stein414"},"content":"     */"},{"lineNumber":60,"author":{"gitId":"stein414"},"content":"    public void markAsDone() {"},{"lineNumber":61,"author":{"gitId":"stein414"},"content":"        this.isDone \u003d true;"},{"lineNumber":62,"author":{"gitId":"stein414"},"content":"    }"},{"lineNumber":63,"author":{"gitId":"stein414"},"content":""},{"lineNumber":64,"author":{"gitId":"stein414"},"content":"    /**"},{"lineNumber":65,"author":{"gitId":"stein414"},"content":"     * Gets the description of the task"},{"lineNumber":66,"author":{"gitId":"stein414"},"content":"     * @return description of task"},{"lineNumber":67,"author":{"gitId":"stein414"},"content":"     */"},{"lineNumber":68,"author":{"gitId":"stein414"},"content":"    public String getDescription() {"},{"lineNumber":69,"author":{"gitId":"stein414"},"content":"        return description;"},{"lineNumber":70,"author":{"gitId":"stein414"},"content":"    }"},{"lineNumber":71,"author":{"gitId":"stein414"},"content":""},{"lineNumber":72,"author":{"gitId":"stein414"},"content":"    /**"},{"lineNumber":73,"author":{"gitId":"stein414"},"content":"     * Sets the description of the task"},{"lineNumber":74,"author":{"gitId":"stein414"},"content":"     * @param description"},{"lineNumber":75,"author":{"gitId":"stein414"},"content":"     */"},{"lineNumber":76,"author":{"gitId":"stein414"},"content":"    public void setDescription(String description) {"},{"lineNumber":77,"author":{"gitId":"stein414"},"content":"        this.description \u003d description;"},{"lineNumber":78,"author":{"gitId":"stein414"},"content":"    }"},{"lineNumber":79,"author":{"gitId":"stein414"},"content":""},{"lineNumber":80,"author":{"gitId":"stein414"},"content":"    @Override"},{"lineNumber":81,"author":{"gitId":"stein414"},"content":"    public String toString() {"},{"lineNumber":82,"author":{"gitId":"stein414"},"content":"        return \"[\" + getStatusIcon() + \"] \" + getDescription();"},{"lineNumber":83,"author":{"gitId":"stein414"},"content":"    }"},{"lineNumber":84,"author":{"gitId":"stein414"},"content":"}"}],"authorContributionMap":{"stein414":84}},{"path":"src/main/java/data/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"stein414"},"content":"package data;"},{"lineNumber":2,"author":{"gitId":"stein414"},"content":""},{"lineNumber":3,"author":{"gitId":"stein414"},"content":"import java.util.ArrayList;"},{"lineNumber":4,"author":{"gitId":"stein414"},"content":"import java.util.Collection;"},{"lineNumber":5,"author":{"gitId":"stein414"},"content":"import java.util.Iterator;"},{"lineNumber":6,"author":{"gitId":"stein414"},"content":"import java.util.List;"},{"lineNumber":7,"author":{"gitId":"stein414"},"content":"import java.util.ListIterator;"},{"lineNumber":8,"author":{"gitId":"stein414"},"content":"import java.util.function.Consumer;"},{"lineNumber":9,"author":{"gitId":"stein414"},"content":""},{"lineNumber":10,"author":{"gitId":"stein414"},"content":"/**"},{"lineNumber":11,"author":{"gitId":"stein414"},"content":" * TaskList extends List so as to leverage Jackson\u0027s (de)serialization."},{"lineNumber":12,"author":{"gitId":"stein414"},"content":" * Jackson need the type information but a generic list will lose the type at runtime"},{"lineNumber":13,"author":{"gitId":"stein414"},"content":" * due to erasure, thus a concrete class would allow Jackson to know what type it is"},{"lineNumber":14,"author":{"gitId":"stein414"},"content":" * at runtime, thus being able to serialise our tasks."},{"lineNumber":15,"author":{"gitId":"stein414"},"content":" */"},{"lineNumber":16,"author":{"gitId":"stein414"},"content":"public class TaskList implements List\u003cTask\u003e {"},{"lineNumber":17,"author":{"gitId":"stein414"},"content":""},{"lineNumber":18,"author":{"gitId":"stein414"},"content":"    private final List\u003cTask\u003e internalTasks \u003d new ArrayList\u003c\u003e();"},{"lineNumber":19,"author":{"gitId":"stein414"},"content":""},{"lineNumber":20,"author":{"gitId":"stein414"},"content":"    public TaskList() {}"},{"lineNumber":21,"author":{"gitId":"stein414"},"content":""},{"lineNumber":22,"author":{"gitId":"stein414"},"content":"    public TaskList(Collection\u003cTask\u003e tasks) {"},{"lineNumber":23,"author":{"gitId":"stein414"},"content":"        internalTasks.addAll(tasks);"},{"lineNumber":24,"author":{"gitId":"stein414"},"content":"    }"},{"lineNumber":25,"author":{"gitId":"stein414"},"content":""},{"lineNumber":26,"author":{"gitId":"stein414"},"content":"    @Override"},{"lineNumber":27,"author":{"gitId":"stein414"},"content":"    public boolean containsAll(Collection\u003c?\u003e c) {"},{"lineNumber":28,"author":{"gitId":"stein414"},"content":"        return internalTasks.containsAll(c);"},{"lineNumber":29,"author":{"gitId":"stein414"},"content":"    }"},{"lineNumber":30,"author":{"gitId":"stein414"},"content":""},{"lineNumber":31,"author":{"gitId":"stein414"},"content":"    @Override"},{"lineNumber":32,"author":{"gitId":"stein414"},"content":"    public boolean add(Task task) {"},{"lineNumber":33,"author":{"gitId":"stein414"},"content":"        return internalTasks.add(task);"},{"lineNumber":34,"author":{"gitId":"stein414"},"content":"    }"},{"lineNumber":35,"author":{"gitId":"stein414"},"content":""},{"lineNumber":36,"author":{"gitId":"stein414"},"content":"    @Override"},{"lineNumber":37,"author":{"gitId":"stein414"},"content":"    public void add(int index, Task element) {"},{"lineNumber":38,"author":{"gitId":"stein414"},"content":"        internalTasks.add(index, element);"},{"lineNumber":39,"author":{"gitId":"stein414"},"content":"    }"},{"lineNumber":40,"author":{"gitId":"stein414"},"content":""},{"lineNumber":41,"author":{"gitId":"stein414"},"content":"    @Override"},{"lineNumber":42,"author":{"gitId":"stein414"},"content":"    public boolean addAll(Collection\u003c? extends Task\u003e c) {"},{"lineNumber":43,"author":{"gitId":"stein414"},"content":"        return internalTasks.addAll(c);"},{"lineNumber":44,"author":{"gitId":"stein414"},"content":"    }"},{"lineNumber":45,"author":{"gitId":"stein414"},"content":""},{"lineNumber":46,"author":{"gitId":"stein414"},"content":"    @Override"},{"lineNumber":47,"author":{"gitId":"stein414"},"content":"    public boolean addAll(int index, Collection\u003c? extends Task\u003e c) {"},{"lineNumber":48,"author":{"gitId":"stein414"},"content":"        return internalTasks.addAll(index, c);"},{"lineNumber":49,"author":{"gitId":"stein414"},"content":"    }"},{"lineNumber":50,"author":{"gitId":"stein414"},"content":""},{"lineNumber":51,"author":{"gitId":"stein414"},"content":"    @Override"},{"lineNumber":52,"author":{"gitId":"stein414"},"content":"    public boolean removeAll(Collection\u003c?\u003e c) {"},{"lineNumber":53,"author":{"gitId":"stein414"},"content":"        return internalTasks.removeAll(c);"},{"lineNumber":54,"author":{"gitId":"stein414"},"content":"    }"},{"lineNumber":55,"author":{"gitId":"stein414"},"content":""},{"lineNumber":56,"author":{"gitId":"stein414"},"content":"    @Override"},{"lineNumber":57,"author":{"gitId":"stein414"},"content":"    public boolean retainAll(Collection\u003c?\u003e c) {"},{"lineNumber":58,"author":{"gitId":"stein414"},"content":"        return internalTasks.retainAll(c);"},{"lineNumber":59,"author":{"gitId":"stein414"},"content":"    }"},{"lineNumber":60,"author":{"gitId":"stein414"},"content":""},{"lineNumber":61,"author":{"gitId":"stein414"},"content":"    @Override"},{"lineNumber":62,"author":{"gitId":"stein414"},"content":"    public void clear() {"},{"lineNumber":63,"author":{"gitId":"stein414"},"content":"        internalTasks.clear();"},{"lineNumber":64,"author":{"gitId":"stein414"},"content":"    }"},{"lineNumber":65,"author":{"gitId":"stein414"},"content":""},{"lineNumber":66,"author":{"gitId":"stein414"},"content":"    @Override"},{"lineNumber":67,"author":{"gitId":"stein414"},"content":"    public Task get(int index) {"},{"lineNumber":68,"author":{"gitId":"stein414"},"content":"        return internalTasks.get(index);"},{"lineNumber":69,"author":{"gitId":"stein414"},"content":"    }"},{"lineNumber":70,"author":{"gitId":"stein414"},"content":""},{"lineNumber":71,"author":{"gitId":"stein414"},"content":"    @Override"},{"lineNumber":72,"author":{"gitId":"stein414"},"content":"    public Task set(int index, Task element) {"},{"lineNumber":73,"author":{"gitId":"stein414"},"content":"        return internalTasks.set(index, element);"},{"lineNumber":74,"author":{"gitId":"stein414"},"content":"    }"},{"lineNumber":75,"author":{"gitId":"stein414"},"content":""},{"lineNumber":76,"author":{"gitId":"stein414"},"content":"    @Override"},{"lineNumber":77,"author":{"gitId":"stein414"},"content":"    public boolean remove(Object o) {"},{"lineNumber":78,"author":{"gitId":"stein414"},"content":"        return internalTasks.remove(o);"},{"lineNumber":79,"author":{"gitId":"stein414"},"content":"    }"},{"lineNumber":80,"author":{"gitId":"stein414"},"content":""},{"lineNumber":81,"author":{"gitId":"stein414"},"content":"    public Task remove(int index) {"},{"lineNumber":82,"author":{"gitId":"stein414"},"content":"        return internalTasks.remove(index);"},{"lineNumber":83,"author":{"gitId":"stein414"},"content":"    }"},{"lineNumber":84,"author":{"gitId":"stein414"},"content":""},{"lineNumber":85,"author":{"gitId":"stein414"},"content":"    @Override"},{"lineNumber":86,"author":{"gitId":"stein414"},"content":"    public int indexOf(Object o) {"},{"lineNumber":87,"author":{"gitId":"stein414"},"content":"        return internalTasks.indexOf(o);"},{"lineNumber":88,"author":{"gitId":"stein414"},"content":"    }"},{"lineNumber":89,"author":{"gitId":"stein414"},"content":""},{"lineNumber":90,"author":{"gitId":"stein414"},"content":"    @Override"},{"lineNumber":91,"author":{"gitId":"stein414"},"content":"    public int lastIndexOf(Object o) {"},{"lineNumber":92,"author":{"gitId":"stein414"},"content":"        return internalTasks.lastIndexOf(o);"},{"lineNumber":93,"author":{"gitId":"stein414"},"content":"    }"},{"lineNumber":94,"author":{"gitId":"stein414"},"content":""},{"lineNumber":95,"author":{"gitId":"stein414"},"content":"    @Override"},{"lineNumber":96,"author":{"gitId":"stein414"},"content":"    public ListIterator\u003cTask\u003e listIterator() {"},{"lineNumber":97,"author":{"gitId":"stein414"},"content":"        return internalTasks.listIterator();"},{"lineNumber":98,"author":{"gitId":"stein414"},"content":"    }"},{"lineNumber":99,"author":{"gitId":"stein414"},"content":""},{"lineNumber":100,"author":{"gitId":"stein414"},"content":"    @Override"},{"lineNumber":101,"author":{"gitId":"stein414"},"content":"    public ListIterator\u003cTask\u003e listIterator(int index) {"},{"lineNumber":102,"author":{"gitId":"stein414"},"content":"        return internalTasks.listIterator(index);"},{"lineNumber":103,"author":{"gitId":"stein414"},"content":"    }"},{"lineNumber":104,"author":{"gitId":"stein414"},"content":""},{"lineNumber":105,"author":{"gitId":"stein414"},"content":"    @Override"},{"lineNumber":106,"author":{"gitId":"stein414"},"content":"    public List\u003cTask\u003e subList(int fromIndex, int toIndex) {"},{"lineNumber":107,"author":{"gitId":"stein414"},"content":"        return internalTasks.subList(fromIndex, toIndex);"},{"lineNumber":108,"author":{"gitId":"stein414"},"content":"    }"},{"lineNumber":109,"author":{"gitId":"stein414"},"content":""},{"lineNumber":110,"author":{"gitId":"stein414"},"content":"    @Override"},{"lineNumber":111,"author":{"gitId":"stein414"},"content":"    public int size() {"},{"lineNumber":112,"author":{"gitId":"stein414"},"content":"        return internalTasks.size();"},{"lineNumber":113,"author":{"gitId":"stein414"},"content":"    }"},{"lineNumber":114,"author":{"gitId":"stein414"},"content":""},{"lineNumber":115,"author":{"gitId":"stein414"},"content":"    @Override"},{"lineNumber":116,"author":{"gitId":"stein414"},"content":"    public boolean isEmpty() {"},{"lineNumber":117,"author":{"gitId":"stein414"},"content":"        return internalTasks.isEmpty();"},{"lineNumber":118,"author":{"gitId":"stein414"},"content":"    }"},{"lineNumber":119,"author":{"gitId":"stein414"},"content":""},{"lineNumber":120,"author":{"gitId":"stein414"},"content":"    @Override"},{"lineNumber":121,"author":{"gitId":"stein414"},"content":"    public boolean contains(Object o) {"},{"lineNumber":122,"author":{"gitId":"stein414"},"content":"        return internalTasks.contains(o);"},{"lineNumber":123,"author":{"gitId":"stein414"},"content":"    }"},{"lineNumber":124,"author":{"gitId":"stein414"},"content":""},{"lineNumber":125,"author":{"gitId":"stein414"},"content":"    @Override"},{"lineNumber":126,"author":{"gitId":"stein414"},"content":"    public Iterator\u003cTask\u003e iterator() {"},{"lineNumber":127,"author":{"gitId":"stein414"},"content":"        return internalTasks.iterator();"},{"lineNumber":128,"author":{"gitId":"stein414"},"content":"    }"},{"lineNumber":129,"author":{"gitId":"stein414"},"content":""},{"lineNumber":130,"author":{"gitId":"stein414"},"content":"    @Override"},{"lineNumber":131,"author":{"gitId":"stein414"},"content":"    public Object[] toArray() {"},{"lineNumber":132,"author":{"gitId":"stein414"},"content":"        return internalTasks.toArray();"},{"lineNumber":133,"author":{"gitId":"stein414"},"content":"    }"},{"lineNumber":134,"author":{"gitId":"stein414"},"content":""},{"lineNumber":135,"author":{"gitId":"stein414"},"content":"    @Override"},{"lineNumber":136,"author":{"gitId":"stein414"},"content":"    public \u003cT\u003e T[] toArray(T[] a) {"},{"lineNumber":137,"author":{"gitId":"stein414"},"content":"        return internalTasks.toArray(a);"},{"lineNumber":138,"author":{"gitId":"stein414"},"content":"    }"},{"lineNumber":139,"author":{"gitId":"stein414"},"content":""},{"lineNumber":140,"author":{"gitId":"stein414"},"content":"    @Override"},{"lineNumber":141,"author":{"gitId":"stein414"},"content":"    public void forEach(Consumer\u003c? super Task\u003e action) {"},{"lineNumber":142,"author":{"gitId":"stein414"},"content":"        internalTasks.forEach(action);"},{"lineNumber":143,"author":{"gitId":"stein414"},"content":"    }"},{"lineNumber":144,"author":{"gitId":"stein414"},"content":"}"}],"authorContributionMap":{"stein414":144}},{"path":"src/main/java/data/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"stein414"},"content":"package data;"},{"lineNumber":2,"author":{"gitId":"stein414"},"content":""},{"lineNumber":3,"author":{"gitId":"stein414"},"content":"public class Todo extends Task {"},{"lineNumber":4,"author":{"gitId":"stein414"},"content":""},{"lineNumber":5,"author":{"gitId":"stein414"},"content":"    private Todo() {"},{"lineNumber":6,"author":{"gitId":"stein414"},"content":"        super();"},{"lineNumber":7,"author":{"gitId":"stein414"},"content":"    }"},{"lineNumber":8,"author":{"gitId":"stein414"},"content":""},{"lineNumber":9,"author":{"gitId":"stein414"},"content":"    /**"},{"lineNumber":10,"author":{"gitId":"stein414"},"content":"     * Todo constructor"},{"lineNumber":11,"author":{"gitId":"stein414"},"content":"     * @param description"},{"lineNumber":12,"author":{"gitId":"stein414"},"content":"     */"},{"lineNumber":13,"author":{"gitId":"stein414"},"content":"    public Todo(String description) {"},{"lineNumber":14,"author":{"gitId":"stein414"},"content":"        super(description);"},{"lineNumber":15,"author":{"gitId":"stein414"},"content":"    }"},{"lineNumber":16,"author":{"gitId":"stein414"},"content":""},{"lineNumber":17,"author":{"gitId":"stein414"},"content":"    @Override"},{"lineNumber":18,"author":{"gitId":"stein414"},"content":"    public String toString() {"},{"lineNumber":19,"author":{"gitId":"stein414"},"content":"        return \"[T]\" + super.toString();"},{"lineNumber":20,"author":{"gitId":"stein414"},"content":"    }"},{"lineNumber":21,"author":{"gitId":"stein414"},"content":"}"}],"authorContributionMap":{"stein414":21}},{"path":"src/main/java/duke/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"stein414"},"content":"package duke;"},{"lineNumber":2,"author":{"gitId":"stein414"},"content":""},{"lineNumber":3,"author":{"gitId":"stein414"},"content":"import java.io.IOException;"},{"lineNumber":4,"author":{"gitId":"stein414"},"content":""},{"lineNumber":5,"author":{"gitId":"stein414"},"content":"import commands.Command;"},{"lineNumber":6,"author":{"gitId":"stein414"},"content":"import commands.ExitCommand;"},{"lineNumber":7,"author":{"gitId":"stein414"},"content":"import data.TaskList;"},{"lineNumber":8,"author":{"gitId":"stein414"},"content":"import parser.Parser;"},{"lineNumber":9,"author":{"gitId":"stein414"},"content":"import parser.ParserException;"},{"lineNumber":10,"author":{"gitId":"stein414"},"content":"import storage.StorageFile;"},{"lineNumber":11,"author":{"gitId":"stein414"},"content":"import ui.TextUi;"},{"lineNumber":12,"author":{"gitId":"stein414"},"content":""},{"lineNumber":13,"author":{"gitId":"stein414"},"content":"public class Duke {"},{"lineNumber":14,"author":{"gitId":"stein414"},"content":"    /**"},{"lineNumber":15,"author":{"gitId":"stein414"},"content":"     * Entry point for Duke.Duke"},{"lineNumber":16,"author":{"gitId":"stein414"},"content":"     *"},{"lineNumber":17,"author":{"gitId":"stein414"},"content":"     * @param args"},{"lineNumber":18,"author":{"gitId":"stein414"},"content":"     * @throws IOException"},{"lineNumber":19,"author":{"gitId":"stein414"},"content":"     */"},{"lineNumber":20,"author":{"gitId":"stein414"},"content":"    public static void main(String[] args) throws IOException {"},{"lineNumber":21,"author":{"gitId":"stein414"},"content":"        TextUi ui \u003d new TextUi();"},{"lineNumber":22,"author":{"gitId":"stein414"},"content":"        Parser parser \u003d new Parser();"},{"lineNumber":23,"author":{"gitId":"stein414"},"content":"        StorageFile storage \u003d new StorageFile();"},{"lineNumber":24,"author":{"gitId":"stein414"},"content":""},{"lineNumber":25,"author":{"gitId":"stein414"},"content":"        TaskList tasks \u003d storage.load();"},{"lineNumber":26,"author":{"gitId":"stein414"},"content":"        ui.writeGreeting();"},{"lineNumber":27,"author":{"gitId":"stein414"},"content":""},{"lineNumber":28,"author":{"gitId":"stein414"},"content":"        Command command \u003d null;"},{"lineNumber":29,"author":{"gitId":"stein414"},"content":"        do {"},{"lineNumber":30,"author":{"gitId":"stein414"},"content":"            String input \u003d ui.readLine();"},{"lineNumber":31,"author":{"gitId":"stein414"},"content":""},{"lineNumber":32,"author":{"gitId":"stein414"},"content":"            try {"},{"lineNumber":33,"author":{"gitId":"stein414"},"content":"                command \u003d parser.parseCommand(input);"},{"lineNumber":34,"author":{"gitId":"stein414"},"content":"            } catch (ParserException pe) {"},{"lineNumber":35,"author":{"gitId":"stein414"},"content":"                ui.write(pe.getMessage());"},{"lineNumber":36,"author":{"gitId":"stein414"},"content":"                continue;"},{"lineNumber":37,"author":{"gitId":"stein414"},"content":"            }"},{"lineNumber":38,"author":{"gitId":"stein414"},"content":""},{"lineNumber":39,"author":{"gitId":"stein414"},"content":"            command.execute(tasks, ui);"},{"lineNumber":40,"author":{"gitId":"stein414"},"content":"            storage.save(tasks);"},{"lineNumber":41,"author":{"gitId":"stein414"},"content":"        } while (!ExitCommand.isExit(command));"},{"lineNumber":42,"author":{"gitId":"stein414"},"content":""},{"lineNumber":43,"author":{"gitId":"stein414"},"content":"        ui.close();"},{"lineNumber":44,"author":{"gitId":"stein414"},"content":"    }"},{"lineNumber":45,"author":{"gitId":"stein414"},"content":""},{"lineNumber":46,"author":{"gitId":"stein414"},"content":""},{"lineNumber":47,"author":{"gitId":"stein414"},"content":"}"}],"authorContributionMap":{"stein414":47}},{"path":"src/main/java/parser/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"stein414"},"content":"package parser;"},{"lineNumber":2,"author":{"gitId":"stein414"},"content":""},{"lineNumber":3,"author":{"gitId":"stein414"},"content":"import java.time.DateTimeException;"},{"lineNumber":4,"author":{"gitId":"stein414"},"content":"import java.time.LocalDate;"},{"lineNumber":5,"author":{"gitId":"stein414"},"content":""},{"lineNumber":6,"author":{"gitId":"stein414"},"content":"import commands.AddDeadlineCommand;"},{"lineNumber":7,"author":{"gitId":"stein414"},"content":"import commands.AddEventCommand;"},{"lineNumber":8,"author":{"gitId":"stein414"},"content":"import commands.AddTodoCommand;"},{"lineNumber":9,"author":{"gitId":"stein414"},"content":"import commands.Command;"},{"lineNumber":10,"author":{"gitId":"stein414"},"content":"import commands.DeleteCommand;"},{"lineNumber":11,"author":{"gitId":"stein414"},"content":"import commands.DoneCommand;"},{"lineNumber":12,"author":{"gitId":"stein414"},"content":"import commands.ExitCommand;"},{"lineNumber":13,"author":{"gitId":"stein414"},"content":"import commands.FindCommand;"},{"lineNumber":14,"author":{"gitId":"stein414"},"content":"import commands.ListCommand;"},{"lineNumber":15,"author":{"gitId":"stein414"},"content":"import data.Deadline;"},{"lineNumber":16,"author":{"gitId":"stein414"},"content":"import data.Event;"},{"lineNumber":17,"author":{"gitId":"stein414"},"content":"import data.Todo;"},{"lineNumber":18,"author":{"gitId":"stein414"},"content":""},{"lineNumber":19,"author":{"gitId":"stein414"},"content":"public class Parser {"},{"lineNumber":20,"author":{"gitId":"stein414"},"content":"    /**"},{"lineNumber":21,"author":{"gitId":"stein414"},"content":"     * Parses the given input to get the correct command"},{"lineNumber":22,"author":{"gitId":"stein414"},"content":"     * @param input"},{"lineNumber":23,"author":{"gitId":"stein414"},"content":"     * @return Command"},{"lineNumber":24,"author":{"gitId":"stein414"},"content":"     * @throws ParserException"},{"lineNumber":25,"author":{"gitId":"stein414"},"content":"     */"},{"lineNumber":26,"author":{"gitId":"stein414"},"content":"    public Command parseCommand(String input) throws ParserException {"},{"lineNumber":27,"author":{"gitId":"stein414"},"content":"        String[] tokens \u003d input.split(\" \");"},{"lineNumber":28,"author":{"gitId":"stein414"},"content":"        switch (tokens[0]) {"},{"lineNumber":29,"author":{"gitId":"stein414"},"content":"        case AddTodoCommand.COMMAND_TEXT:"},{"lineNumber":30,"author":{"gitId":"stein414"},"content":"            return prepareAddTodo(input, tokens);"},{"lineNumber":31,"author":{"gitId":"stein414"},"content":"        case AddDeadlineCommand.COMMAND_TEXT:"},{"lineNumber":32,"author":{"gitId":"stein414"},"content":"            return prepareAddDeadline(input, tokens);"},{"lineNumber":33,"author":{"gitId":"stein414"},"content":"        case AddEventCommand.COMMAND_TEXT:"},{"lineNumber":34,"author":{"gitId":"stein414"},"content":"            return prepareAddEvent(input, tokens);"},{"lineNumber":35,"author":{"gitId":"stein414"},"content":"        case ListCommand.COMMAND_TEXT:"},{"lineNumber":36,"author":{"gitId":"stein414"},"content":"            return new ListCommand();"},{"lineNumber":37,"author":{"gitId":"stein414"},"content":"        case DoneCommand.COMMAND_TEXT:"},{"lineNumber":38,"author":{"gitId":"stein414"},"content":"            return prepareDone(input, tokens);"},{"lineNumber":39,"author":{"gitId":"stein414"},"content":"        case DeleteCommand.COMMAND_TEXT:"},{"lineNumber":40,"author":{"gitId":"stein414"},"content":"            return prepareDelete(input, tokens);"},{"lineNumber":41,"author":{"gitId":"stein414"},"content":"        case FindCommand.COMMAND_TEXT:"},{"lineNumber":42,"author":{"gitId":"stein414"},"content":"            return prepareFind(input, tokens);"},{"lineNumber":43,"author":{"gitId":"stein414"},"content":"        case ExitCommand.COMMAND_TEXT:"},{"lineNumber":44,"author":{"gitId":"stein414"},"content":"            return new ExitCommand();"},{"lineNumber":45,"author":{"gitId":"stein414"},"content":"        default:"},{"lineNumber":46,"author":{"gitId":"stein414"},"content":"            throw new ParserException(\"Unknown command.\");"},{"lineNumber":47,"author":{"gitId":"stein414"},"content":"        }"},{"lineNumber":48,"author":{"gitId":"stein414"},"content":"    }"},{"lineNumber":49,"author":{"gitId":"stein414"},"content":""},{"lineNumber":50,"author":{"gitId":"stein414"},"content":"    private Command prepareAddTodo(String input, String[] tokens) throws ParserException {"},{"lineNumber":51,"author":{"gitId":"stein414"},"content":"        if (tokens.length \u003c 2) {"},{"lineNumber":52,"author":{"gitId":"stein414"},"content":"            throw new ParserException(\"Todo requires a description.\");"},{"lineNumber":53,"author":{"gitId":"stein414"},"content":"        }"},{"lineNumber":54,"author":{"gitId":"stein414"},"content":""},{"lineNumber":55,"author":{"gitId":"stein414"},"content":"        Todo todo \u003d new Todo(input.substring(5));"},{"lineNumber":56,"author":{"gitId":"stein414"},"content":"        return new AddTodoCommand(todo);"},{"lineNumber":57,"author":{"gitId":"stein414"},"content":"    }"},{"lineNumber":58,"author":{"gitId":"stein414"},"content":""},{"lineNumber":59,"author":{"gitId":"stein414"},"content":"    private Command prepareAddDeadline(String input, String[] tokens) throws ParserException {"},{"lineNumber":60,"author":{"gitId":"stein414"},"content":"        int bySwitchIndex \u003d input.indexOf(\"/by\");"},{"lineNumber":61,"author":{"gitId":"stein414"},"content":"        if (bySwitchIndex \u003d\u003d -1 || bySwitchIndex + 4 \u003e input.length()) {"},{"lineNumber":62,"author":{"gitId":"stein414"},"content":"            throw new ParserException(\"Deadline requires \u0027/by\u0027 to be specified.\");"},{"lineNumber":63,"author":{"gitId":"stein414"},"content":"        }"},{"lineNumber":64,"author":{"gitId":"stein414"},"content":"        String description \u003d input.substring(9, bySwitchIndex);"},{"lineNumber":65,"author":{"gitId":"stein414"},"content":"        if (description.trim().equals(\"\")) {"},{"lineNumber":66,"author":{"gitId":"stein414"},"content":"            throw new ParserException(\"Deadline requires a description.\");"},{"lineNumber":67,"author":{"gitId":"stein414"},"content":"        }"},{"lineNumber":68,"author":{"gitId":"stein414"},"content":"        String byStr \u003d input.substring(bySwitchIndex + 4);"},{"lineNumber":69,"author":{"gitId":"stein414"},"content":"        if (byStr.trim().equals(\"\")) {"},{"lineNumber":70,"author":{"gitId":"stein414"},"content":"            throw new ParserException(\"Deadline requires \u0027/by\u0027 to be specified.\");"},{"lineNumber":71,"author":{"gitId":"stein414"},"content":"        }"},{"lineNumber":72,"author":{"gitId":"stein414"},"content":""},{"lineNumber":73,"author":{"gitId":"stein414"},"content":"        LocalDate by;"},{"lineNumber":74,"author":{"gitId":"stein414"},"content":"        try {"},{"lineNumber":75,"author":{"gitId":"stein414"},"content":"            by \u003d LocalDate.parse(byStr);"},{"lineNumber":76,"author":{"gitId":"stein414"},"content":"        } catch (DateTimeException dte) {"},{"lineNumber":77,"author":{"gitId":"stein414"},"content":"            throw new ParserException(\"Deadline /by needs to be in a valid format (e.g. yyyy-MM-dd)\");"},{"lineNumber":78,"author":{"gitId":"stein414"},"content":"        }"},{"lineNumber":79,"author":{"gitId":"stein414"},"content":""},{"lineNumber":80,"author":{"gitId":"stein414"},"content":"        Deadline deadline \u003d new Deadline(description, by);"},{"lineNumber":81,"author":{"gitId":"stein414"},"content":"        return new AddDeadlineCommand(deadline);"},{"lineNumber":82,"author":{"gitId":"stein414"},"content":"    }"},{"lineNumber":83,"author":{"gitId":"stein414"},"content":""},{"lineNumber":84,"author":{"gitId":"stein414"},"content":"    private Command prepareAddEvent(String input, String[] tokens) throws ParserException {"},{"lineNumber":85,"author":{"gitId":"stein414"},"content":"        int atSwitchIndex \u003d input.indexOf(\"/at\");"},{"lineNumber":86,"author":{"gitId":"stein414"},"content":"        if (atSwitchIndex \u003d\u003d -1 || atSwitchIndex + 4 \u003e input.length()) {"},{"lineNumber":87,"author":{"gitId":"stein414"},"content":"            throw new ParserException(\"Event requires \u0027/at\u0027 to be specified.\");"},{"lineNumber":88,"author":{"gitId":"stein414"},"content":"        }"},{"lineNumber":89,"author":{"gitId":"stein414"},"content":"        String description \u003d input.substring(6, atSwitchIndex);"},{"lineNumber":90,"author":{"gitId":"stein414"},"content":"        if (description.trim().equals(\"\")) {"},{"lineNumber":91,"author":{"gitId":"stein414"},"content":"            throw new ParserException(\"Event requires a description.\");"},{"lineNumber":92,"author":{"gitId":"stein414"},"content":"        }"},{"lineNumber":93,"author":{"gitId":"stein414"},"content":"        String atStr \u003d input.substring(atSwitchIndex + 4);"},{"lineNumber":94,"author":{"gitId":"stein414"},"content":"        if (atStr.trim().equals(\"\")) {"},{"lineNumber":95,"author":{"gitId":"stein414"},"content":"            throw new ParserException(\"Event requires \u0027/at\u0027 to be specified.\");"},{"lineNumber":96,"author":{"gitId":"stein414"},"content":"        }"},{"lineNumber":97,"author":{"gitId":"stein414"},"content":""},{"lineNumber":98,"author":{"gitId":"stein414"},"content":"        LocalDate at;"},{"lineNumber":99,"author":{"gitId":"stein414"},"content":"        try {"},{"lineNumber":100,"author":{"gitId":"stein414"},"content":"            at \u003d LocalDate.parse(atStr);"},{"lineNumber":101,"author":{"gitId":"stein414"},"content":"        } catch (DateTimeException dte) {"},{"lineNumber":102,"author":{"gitId":"stein414"},"content":"            throw new ParserException(\"Event /at needs to be in a valid format (e.g. yyyy-MM-dd)\");"},{"lineNumber":103,"author":{"gitId":"stein414"},"content":"        }"},{"lineNumber":104,"author":{"gitId":"stein414"},"content":""},{"lineNumber":105,"author":{"gitId":"stein414"},"content":"        Event event \u003d new Event(description, at);"},{"lineNumber":106,"author":{"gitId":"stein414"},"content":"        return new AddEventCommand(event);"},{"lineNumber":107,"author":{"gitId":"stein414"},"content":"    }"},{"lineNumber":108,"author":{"gitId":"stein414"},"content":""},{"lineNumber":109,"author":{"gitId":"stein414"},"content":"    private Command prepareDone(String input, String[] tokens) throws ParserException {"},{"lineNumber":110,"author":{"gitId":"stein414"},"content":"        if (tokens.length \u003c 2) {"},{"lineNumber":111,"author":{"gitId":"stein414"},"content":"            throw new ParserException(\"Please specify a number\");"},{"lineNumber":112,"author":{"gitId":"stein414"},"content":"        }"},{"lineNumber":113,"author":{"gitId":"stein414"},"content":""},{"lineNumber":114,"author":{"gitId":"stein414"},"content":"        int selection;"},{"lineNumber":115,"author":{"gitId":"stein414"},"content":"        try {"},{"lineNumber":116,"author":{"gitId":"stein414"},"content":"            selection \u003d Integer.parseInt(tokens[1]);"},{"lineNumber":117,"author":{"gitId":"stein414"},"content":"        } catch (NumberFormatException nfe) {"},{"lineNumber":118,"author":{"gitId":"stein414"},"content":"            throw new ParserException(\"Invalid number\");"},{"lineNumber":119,"author":{"gitId":"stein414"},"content":"        }"},{"lineNumber":120,"author":{"gitId":"stein414"},"content":""},{"lineNumber":121,"author":{"gitId":"stein414"},"content":"        return new DoneCommand(selection - 1);"},{"lineNumber":122,"author":{"gitId":"stein414"},"content":"    }"},{"lineNumber":123,"author":{"gitId":"stein414"},"content":""},{"lineNumber":124,"author":{"gitId":"stein414"},"content":"    private Command prepareDelete(String input, String[] tokens) throws ParserException {"},{"lineNumber":125,"author":{"gitId":"stein414"},"content":"        if (tokens.length \u003c 2) {"},{"lineNumber":126,"author":{"gitId":"stein414"},"content":"            throw new ParserException(\"Please specify a number\");"},{"lineNumber":127,"author":{"gitId":"stein414"},"content":"        }"},{"lineNumber":128,"author":{"gitId":"stein414"},"content":""},{"lineNumber":129,"author":{"gitId":"stein414"},"content":"        int selection;"},{"lineNumber":130,"author":{"gitId":"stein414"},"content":"        try {"},{"lineNumber":131,"author":{"gitId":"stein414"},"content":"            selection \u003d Integer.parseInt(tokens[1]);"},{"lineNumber":132,"author":{"gitId":"stein414"},"content":"        } catch (NumberFormatException nfe) {"},{"lineNumber":133,"author":{"gitId":"stein414"},"content":"            throw new ParserException(\"Invalid number\");"},{"lineNumber":134,"author":{"gitId":"stein414"},"content":"        }"},{"lineNumber":135,"author":{"gitId":"stein414"},"content":""},{"lineNumber":136,"author":{"gitId":"stein414"},"content":"        return new DeleteCommand(selection - 1);"},{"lineNumber":137,"author":{"gitId":"stein414"},"content":"    }"},{"lineNumber":138,"author":{"gitId":"stein414"},"content":""},{"lineNumber":139,"author":{"gitId":"stein414"},"content":"    private Command prepareFind(String input, String[] tokens) throws ParserException {"},{"lineNumber":140,"author":{"gitId":"stein414"},"content":"        if (tokens.length \u003c 2) {"},{"lineNumber":141,"author":{"gitId":"stein414"},"content":"            throw new ParserException(\"Please specify what you are finding\");"},{"lineNumber":142,"author":{"gitId":"stein414"},"content":"        }"},{"lineNumber":143,"author":{"gitId":"stein414"},"content":""},{"lineNumber":144,"author":{"gitId":"stein414"},"content":"        return new FindCommand(input.substring(5));"},{"lineNumber":145,"author":{"gitId":"stein414"},"content":"    }"},{"lineNumber":146,"author":{"gitId":"stein414"},"content":"}"}],"authorContributionMap":{"stein414":146}},{"path":"src/main/java/parser/ParserException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"stein414"},"content":"package parser;"},{"lineNumber":2,"author":{"gitId":"stein414"},"content":""},{"lineNumber":3,"author":{"gitId":"stein414"},"content":"public class ParserException extends Exception {"},{"lineNumber":4,"author":{"gitId":"stein414"},"content":"    public ParserException(String message) {"},{"lineNumber":5,"author":{"gitId":"stein414"},"content":"        super(message);"},{"lineNumber":6,"author":{"gitId":"stein414"},"content":"    }"},{"lineNumber":7,"author":{"gitId":"stein414"},"content":"}"}],"authorContributionMap":{"stein414":7}},{"path":"src/main/java/storage/StorageFile.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"stein414"},"content":"package storage;"},{"lineNumber":2,"author":{"gitId":"stein414"},"content":""},{"lineNumber":3,"author":{"gitId":"stein414"},"content":"import java.io.BufferedInputStream;"},{"lineNumber":4,"author":{"gitId":"stein414"},"content":"import java.io.BufferedOutputStream;"},{"lineNumber":5,"author":{"gitId":"stein414"},"content":"import java.io.File;"},{"lineNumber":6,"author":{"gitId":"stein414"},"content":"import java.io.FileInputStream;"},{"lineNumber":7,"author":{"gitId":"stein414"},"content":"import java.io.FileOutputStream;"},{"lineNumber":8,"author":{"gitId":"stein414"},"content":"import java.io.IOException;"},{"lineNumber":9,"author":{"gitId":"stein414"},"content":""},{"lineNumber":10,"author":{"gitId":"stein414"},"content":"import com.fasterxml.jackson.databind.ObjectMapper;"},{"lineNumber":11,"author":{"gitId":"stein414"},"content":"import com.fasterxml.jackson.databind.exc.MismatchedInputException;"},{"lineNumber":12,"author":{"gitId":"stein414"},"content":"import com.fasterxml.jackson.databind.json.JsonMapper;"},{"lineNumber":13,"author":{"gitId":"stein414"},"content":""},{"lineNumber":14,"author":{"gitId":"stein414"},"content":"import data.TaskList;"},{"lineNumber":15,"author":{"gitId":"stein414"},"content":""},{"lineNumber":16,"author":{"gitId":"stein414"},"content":"public class StorageFile {"},{"lineNumber":17,"author":{"gitId":"stein414"},"content":""},{"lineNumber":18,"author":{"gitId":"stein414"},"content":"    private static final String workingDirPath \u003d System.getProperty(\"user.dir\");"},{"lineNumber":19,"author":{"gitId":"stein414"},"content":"    private static final String DEFAULT_STORAGE_FILE_PATH \u003d java.nio.file.Paths"},{"lineNumber":20,"author":{"gitId":"stein414"},"content":"        .get(workingDirPath, \"saveFile.json\")"},{"lineNumber":21,"author":{"gitId":"stein414"},"content":"        .toString();"},{"lineNumber":22,"author":{"gitId":"stein414"},"content":"    private final ObjectMapper mapper \u003d JsonMapper.builder()"},{"lineNumber":23,"author":{"gitId":"stein414"},"content":"        .findAndAddModules()"},{"lineNumber":24,"author":{"gitId":"stein414"},"content":"        .build();"},{"lineNumber":25,"author":{"gitId":"stein414"},"content":""},{"lineNumber":26,"author":{"gitId":"stein414"},"content":"    private File saveFile;"},{"lineNumber":27,"author":{"gitId":"stein414"},"content":""},{"lineNumber":28,"author":{"gitId":"stein414"},"content":"    public StorageFile() throws IOException {"},{"lineNumber":29,"author":{"gitId":"stein414"},"content":"        this(DEFAULT_STORAGE_FILE_PATH);"},{"lineNumber":30,"author":{"gitId":"stein414"},"content":"    }"},{"lineNumber":31,"author":{"gitId":"stein414"},"content":""},{"lineNumber":32,"author":{"gitId":"stein414"},"content":"    /**"},{"lineNumber":33,"author":{"gitId":"stein414"},"content":"     * StorageFile constructor"},{"lineNumber":34,"author":{"gitId":"stein414"},"content":"     * @param filePath"},{"lineNumber":35,"author":{"gitId":"stein414"},"content":"     * @throws IOException"},{"lineNumber":36,"author":{"gitId":"stein414"},"content":"     */"},{"lineNumber":37,"author":{"gitId":"stein414"},"content":"    public StorageFile(String filePath) throws IOException {"},{"lineNumber":38,"author":{"gitId":"stein414"},"content":"        saveFile \u003d new File(filePath);"},{"lineNumber":39,"author":{"gitId":"stein414"},"content":"        saveFile.createNewFile();"},{"lineNumber":40,"author":{"gitId":"stein414"},"content":"    }"},{"lineNumber":41,"author":{"gitId":"stein414"},"content":""},{"lineNumber":42,"author":{"gitId":"stein414"},"content":"    /**"},{"lineNumber":43,"author":{"gitId":"stein414"},"content":"     * Writes the given tasks to the savefile"},{"lineNumber":44,"author":{"gitId":"stein414"},"content":"     * @param tasks"},{"lineNumber":45,"author":{"gitId":"stein414"},"content":"     * @throws IOException"},{"lineNumber":46,"author":{"gitId":"stein414"},"content":"     */"},{"lineNumber":47,"author":{"gitId":"stein414"},"content":"    public void save(TaskList tasks) throws IOException {"},{"lineNumber":48,"author":{"gitId":"stein414"},"content":"        try (BufferedOutputStream outSaveFile \u003d new BufferedOutputStream(new FileOutputStream(saveFile, false))"},{"lineNumber":49,"author":{"gitId":"stein414"},"content":"        ) {"},{"lineNumber":50,"author":{"gitId":"stein414"},"content":"            // https://github.com/FasterXML/jackson-databind/pull/1309"},{"lineNumber":51,"author":{"gitId":"stein414"},"content":"            mapper.writeValue(outSaveFile, tasks);"},{"lineNumber":52,"author":{"gitId":"stein414"},"content":"        }"},{"lineNumber":53,"author":{"gitId":"stein414"},"content":"    }"},{"lineNumber":54,"author":{"gitId":"stein414"},"content":""},{"lineNumber":55,"author":{"gitId":"stein414"},"content":"    /**"},{"lineNumber":56,"author":{"gitId":"stein414"},"content":"     * Reads from the savefile and creates tasks"},{"lineNumber":57,"author":{"gitId":"stein414"},"content":"     * @return TaskList"},{"lineNumber":58,"author":{"gitId":"stein414"},"content":"     * @throws IOException"},{"lineNumber":59,"author":{"gitId":"stein414"},"content":"     */"},{"lineNumber":60,"author":{"gitId":"stein414"},"content":"    public TaskList load() throws IOException {"},{"lineNumber":61,"author":{"gitId":"stein414"},"content":"        try (BufferedInputStream inSaveFile \u003d new BufferedInputStream(new FileInputStream(saveFile))"},{"lineNumber":62,"author":{"gitId":"stein414"},"content":"        ) {"},{"lineNumber":63,"author":{"gitId":"stein414"},"content":"            return mapper.readValue(inSaveFile, TaskList.class);"},{"lineNumber":64,"author":{"gitId":"stein414"},"content":"        } catch (MismatchedInputException mie) {"},{"lineNumber":65,"author":{"gitId":"stein414"},"content":"            // empty saveFile.json or invalid file format"},{"lineNumber":66,"author":{"gitId":"stein414"},"content":"            return new TaskList();"},{"lineNumber":67,"author":{"gitId":"stein414"},"content":"        }"},{"lineNumber":68,"author":{"gitId":"stein414"},"content":"    }"},{"lineNumber":69,"author":{"gitId":"stein414"},"content":"}"}],"authorContributionMap":{"stein414":69}},{"path":"src/main/java/ui/TextUi.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"stein414"},"content":"package ui;"},{"lineNumber":2,"author":{"gitId":"stein414"},"content":""},{"lineNumber":3,"author":{"gitId":"stein414"},"content":"import java.io.BufferedReader;"},{"lineNumber":4,"author":{"gitId":"stein414"},"content":"import java.io.BufferedWriter;"},{"lineNumber":5,"author":{"gitId":"stein414"},"content":"import java.io.IOException;"},{"lineNumber":6,"author":{"gitId":"stein414"},"content":"import java.io.InputStream;"},{"lineNumber":7,"author":{"gitId":"stein414"},"content":"import java.io.InputStreamReader;"},{"lineNumber":8,"author":{"gitId":"stein414"},"content":"import java.io.OutputStream;"},{"lineNumber":9,"author":{"gitId":"stein414"},"content":"import java.io.OutputStreamWriter;"},{"lineNumber":10,"author":{"gitId":"stein414"},"content":""},{"lineNumber":11,"author":{"gitId":"stein414"},"content":"import data.Task;"},{"lineNumber":12,"author":{"gitId":"stein414"},"content":"import data.TaskList;"},{"lineNumber":13,"author":{"gitId":"stein414"},"content":""},{"lineNumber":14,"author":{"gitId":"stein414"},"content":"public class TextUi {"},{"lineNumber":15,"author":{"gitId":"stein414"},"content":"    private static final String divider \u003d \"\\t____________________________________________________________\\n\";"},{"lineNumber":16,"author":{"gitId":"stein414"},"content":""},{"lineNumber":17,"author":{"gitId":"stein414"},"content":"    private BufferedReader in;"},{"lineNumber":18,"author":{"gitId":"stein414"},"content":"    private BufferedWriter out;"},{"lineNumber":19,"author":{"gitId":"stein414"},"content":""},{"lineNumber":20,"author":{"gitId":"stein414"},"content":"    public TextUi() {"},{"lineNumber":21,"author":{"gitId":"stein414"},"content":"        this(System.in, System.out);"},{"lineNumber":22,"author":{"gitId":"stein414"},"content":"    }"},{"lineNumber":23,"author":{"gitId":"stein414"},"content":""},{"lineNumber":24,"author":{"gitId":"stein414"},"content":"    /**"},{"lineNumber":25,"author":{"gitId":"stein414"},"content":"     * TextUi constructor"},{"lineNumber":26,"author":{"gitId":"stein414"},"content":"     * @param in"},{"lineNumber":27,"author":{"gitId":"stein414"},"content":"     * @param out"},{"lineNumber":28,"author":{"gitId":"stein414"},"content":"     */"},{"lineNumber":29,"author":{"gitId":"stein414"},"content":"    public TextUi(InputStream in, OutputStream out) {"},{"lineNumber":30,"author":{"gitId":"stein414"},"content":"        this.in \u003d new BufferedReader(new InputStreamReader(in));"},{"lineNumber":31,"author":{"gitId":"stein414"},"content":"        this.out \u003d new BufferedWriter(new OutputStreamWriter(out));"},{"lineNumber":32,"author":{"gitId":"stein414"},"content":"    }"},{"lineNumber":33,"author":{"gitId":"stein414"},"content":""},{"lineNumber":34,"author":{"gitId":"stein414"},"content":"    public String readLine() throws IOException {"},{"lineNumber":35,"author":{"gitId":"stein414"},"content":"        return in.readLine();"},{"lineNumber":36,"author":{"gitId":"stein414"},"content":"    }"},{"lineNumber":37,"author":{"gitId":"stein414"},"content":""},{"lineNumber":38,"author":{"gitId":"stein414"},"content":"    /**"},{"lineNumber":39,"author":{"gitId":"stein414"},"content":"     * Writes greeting message to output"},{"lineNumber":40,"author":{"gitId":"stein414"},"content":"     * @throws IOException"},{"lineNumber":41,"author":{"gitId":"stein414"},"content":"     */"},{"lineNumber":42,"author":{"gitId":"stein414"},"content":"    public void writeGreeting() throws IOException {"},{"lineNumber":43,"author":{"gitId":"stein414"},"content":"        String[] greeting \u003d {"},{"lineNumber":44,"author":{"gitId":"stein414"},"content":"            \"Hello! I\u0027m Duke\","},{"lineNumber":45,"author":{"gitId":"stein414"},"content":"            \"What can I do for you?\""},{"lineNumber":46,"author":{"gitId":"stein414"},"content":"        };"},{"lineNumber":47,"author":{"gitId":"stein414"},"content":"        write(greeting);"},{"lineNumber":48,"author":{"gitId":"stein414"},"content":"    }"},{"lineNumber":49,"author":{"gitId":"stein414"},"content":""},{"lineNumber":50,"author":{"gitId":"stein414"},"content":"    /**"},{"lineNumber":51,"author":{"gitId":"stein414"},"content":"     * Writes the given line with dividers"},{"lineNumber":52,"author":{"gitId":"stein414"},"content":"     * @param line"},{"lineNumber":53,"author":{"gitId":"stein414"},"content":"     * @throws IOException"},{"lineNumber":54,"author":{"gitId":"stein414"},"content":"     */"},{"lineNumber":55,"author":{"gitId":"stein414"},"content":"    public void write(String line) throws IOException {"},{"lineNumber":56,"author":{"gitId":"stein414"},"content":"        out.write(divider);"},{"lineNumber":57,"author":{"gitId":"stein414"},"content":"        out.write(\u0027\\t\u0027);"},{"lineNumber":58,"author":{"gitId":"stein414"},"content":"        out.write(line);"},{"lineNumber":59,"author":{"gitId":"stein414"},"content":"        out.newLine();"},{"lineNumber":60,"author":{"gitId":"stein414"},"content":"        out.write(divider);"},{"lineNumber":61,"author":{"gitId":"stein414"},"content":"        out.flush();"},{"lineNumber":62,"author":{"gitId":"stein414"},"content":"    }"},{"lineNumber":63,"author":{"gitId":"stein414"},"content":""},{"lineNumber":64,"author":{"gitId":"stein414"},"content":"    /**"},{"lineNumber":65,"author":{"gitId":"stein414"},"content":"     * Writes the given lines with dividers"},{"lineNumber":66,"author":{"gitId":"stein414"},"content":"     * @param lines"},{"lineNumber":67,"author":{"gitId":"stein414"},"content":"     * @throws IOException"},{"lineNumber":68,"author":{"gitId":"stein414"},"content":"     */"},{"lineNumber":69,"author":{"gitId":"stein414"},"content":"    public void write(String[] lines) throws IOException {"},{"lineNumber":70,"author":{"gitId":"stein414"},"content":"        out.write(divider);"},{"lineNumber":71,"author":{"gitId":"stein414"},"content":"        for (String line : lines) {"},{"lineNumber":72,"author":{"gitId":"stein414"},"content":"            out.write(\u0027\\t\u0027);"},{"lineNumber":73,"author":{"gitId":"stein414"},"content":"            out.write(line);"},{"lineNumber":74,"author":{"gitId":"stein414"},"content":"            out.newLine();"},{"lineNumber":75,"author":{"gitId":"stein414"},"content":"        }"},{"lineNumber":76,"author":{"gitId":"stein414"},"content":"        out.write(divider);"},{"lineNumber":77,"author":{"gitId":"stein414"},"content":"        out.flush();"},{"lineNumber":78,"author":{"gitId":"stein414"},"content":"    }"},{"lineNumber":79,"author":{"gitId":"stein414"},"content":""},{"lineNumber":80,"author":{"gitId":"stein414"},"content":"    /**"},{"lineNumber":81,"author":{"gitId":"stein414"},"content":"     * Writes the given tasks"},{"lineNumber":82,"author":{"gitId":"stein414"},"content":"     * @param tasks"},{"lineNumber":83,"author":{"gitId":"stein414"},"content":"     * @throws IOException"},{"lineNumber":84,"author":{"gitId":"stein414"},"content":"     */"},{"lineNumber":85,"author":{"gitId":"stein414"},"content":"    public void writeTasks(TaskList tasks) throws IOException {"},{"lineNumber":86,"author":{"gitId":"stein414"},"content":"        String[] lines \u003d new String[tasks.size()];"},{"lineNumber":87,"author":{"gitId":"stein414"},"content":""},{"lineNumber":88,"author":{"gitId":"stein414"},"content":"        for (int i \u003d 0; i \u003c tasks.size(); i++) {"},{"lineNumber":89,"author":{"gitId":"stein414"},"content":"            lines[i] \u003d (i + 1) + \".\" + tasks.get(i).toString();"},{"lineNumber":90,"author":{"gitId":"stein414"},"content":"        }"},{"lineNumber":91,"author":{"gitId":"stein414"},"content":""},{"lineNumber":92,"author":{"gitId":"stein414"},"content":"        write(lines);"},{"lineNumber":93,"author":{"gitId":"stein414"},"content":"    }"},{"lineNumber":94,"author":{"gitId":"stein414"},"content":""},{"lineNumber":95,"author":{"gitId":"stein414"},"content":"    /**"},{"lineNumber":96,"author":{"gitId":"stein414"},"content":"     * Writes the acknowledgement message for adding a task"},{"lineNumber":97,"author":{"gitId":"stein414"},"content":"     * @param task"},{"lineNumber":98,"author":{"gitId":"stein414"},"content":"     * @param tasks"},{"lineNumber":99,"author":{"gitId":"stein414"},"content":"     * @throws IOException"},{"lineNumber":100,"author":{"gitId":"stein414"},"content":"     */"},{"lineNumber":101,"author":{"gitId":"stein414"},"content":"    public void writeAddTask(Task task, TaskList tasks) throws IOException {"},{"lineNumber":102,"author":{"gitId":"stein414"},"content":"        write(new String[]{"},{"lineNumber":103,"author":{"gitId":"stein414"},"content":"            \"Got it. I\u0027ve added this task:\","},{"lineNumber":104,"author":{"gitId":"stein414"},"content":"            \"  \" + task,"},{"lineNumber":105,"author":{"gitId":"stein414"},"content":"            \"Now you have \" + tasks.size() + \" tasks in the list.\""},{"lineNumber":106,"author":{"gitId":"stein414"},"content":"        });"},{"lineNumber":107,"author":{"gitId":"stein414"},"content":"    }"},{"lineNumber":108,"author":{"gitId":"stein414"},"content":""},{"lineNumber":109,"author":{"gitId":"stein414"},"content":"    /**"},{"lineNumber":110,"author":{"gitId":"stein414"},"content":"     * Writes the acknowledgement message for deleting a task"},{"lineNumber":111,"author":{"gitId":"stein414"},"content":"     * @param task"},{"lineNumber":112,"author":{"gitId":"stein414"},"content":"     * @param tasks"},{"lineNumber":113,"author":{"gitId":"stein414"},"content":"     * @throws IOException"},{"lineNumber":114,"author":{"gitId":"stein414"},"content":"     */"},{"lineNumber":115,"author":{"gitId":"stein414"},"content":"    public void writeDeleteTask(Task task, TaskList tasks) throws IOException {"},{"lineNumber":116,"author":{"gitId":"stein414"},"content":"        write(new String[]{"},{"lineNumber":117,"author":{"gitId":"stein414"},"content":"            \"Noted. I\u0027ve removed this task:\","},{"lineNumber":118,"author":{"gitId":"stein414"},"content":"            \"  \" + task,"},{"lineNumber":119,"author":{"gitId":"stein414"},"content":"            \"Now you have \" + tasks.size() + \" tasks in the list.\""},{"lineNumber":120,"author":{"gitId":"stein414"},"content":"        });"},{"lineNumber":121,"author":{"gitId":"stein414"},"content":"    }"},{"lineNumber":122,"author":{"gitId":"stein414"},"content":""},{"lineNumber":123,"author":{"gitId":"stein414"},"content":"    /**"},{"lineNumber":124,"author":{"gitId":"stein414"},"content":"     * Writes the acknowledgement message for finishing a task"},{"lineNumber":125,"author":{"gitId":"stein414"},"content":"     * @param task"},{"lineNumber":126,"author":{"gitId":"stein414"},"content":"     * @throws IOException"},{"lineNumber":127,"author":{"gitId":"stein414"},"content":"     */"},{"lineNumber":128,"author":{"gitId":"stein414"},"content":"    public void writeDoneTask(Task task) throws IOException {"},{"lineNumber":129,"author":{"gitId":"stein414"},"content":"        write(\"  [\" + task.getStatusIcon() + \"] \" + task.getDescription());"},{"lineNumber":130,"author":{"gitId":"stein414"},"content":"    }"},{"lineNumber":131,"author":{"gitId":"stein414"},"content":""},{"lineNumber":132,"author":{"gitId":"stein414"},"content":"    /**"},{"lineNumber":133,"author":{"gitId":"stein414"},"content":"     * Closes the input and output streams"},{"lineNumber":134,"author":{"gitId":"stein414"},"content":"     * @throws IOException"},{"lineNumber":135,"author":{"gitId":"stein414"},"content":"     */"},{"lineNumber":136,"author":{"gitId":"stein414"},"content":"    public void close() throws IOException {"},{"lineNumber":137,"author":{"gitId":"stein414"},"content":"        in.close();"},{"lineNumber":138,"author":{"gitId":"stein414"},"content":"        out.close();"},{"lineNumber":139,"author":{"gitId":"stein414"},"content":"    }"},{"lineNumber":140,"author":{"gitId":"stein414"},"content":"}"}],"authorContributionMap":{"stein414":140}},{"path":"src/test/java/commands/AddDeadlineCommandTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"stein414"},"content":"package commands;"},{"lineNumber":2,"author":{"gitId":"stein414"},"content":""},{"lineNumber":3,"author":{"gitId":"stein414"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;"},{"lineNumber":4,"author":{"gitId":"stein414"},"content":""},{"lineNumber":5,"author":{"gitId":"stein414"},"content":"import java.io.ByteArrayInputStream;"},{"lineNumber":6,"author":{"gitId":"stein414"},"content":"import java.io.ByteArrayOutputStream;"},{"lineNumber":7,"author":{"gitId":"stein414"},"content":"import java.io.IOException;"},{"lineNumber":8,"author":{"gitId":"stein414"},"content":"import java.time.LocalDate;"},{"lineNumber":9,"author":{"gitId":"stein414"},"content":""},{"lineNumber":10,"author":{"gitId":"stein414"},"content":"import org.junit.jupiter.api.BeforeEach;"},{"lineNumber":11,"author":{"gitId":"stein414"},"content":"import org.junit.jupiter.api.DisplayName;"},{"lineNumber":12,"author":{"gitId":"stein414"},"content":"import org.junit.jupiter.api.Test;"},{"lineNumber":13,"author":{"gitId":"stein414"},"content":""},{"lineNumber":14,"author":{"gitId":"stein414"},"content":"import data.Deadline;"},{"lineNumber":15,"author":{"gitId":"stein414"},"content":"import data.TaskList;"},{"lineNumber":16,"author":{"gitId":"stein414"},"content":"import ui.TextUi;"},{"lineNumber":17,"author":{"gitId":"stein414"},"content":""},{"lineNumber":18,"author":{"gitId":"stein414"},"content":"public class AddDeadlineCommandTest {"},{"lineNumber":19,"author":{"gitId":"stein414"},"content":""},{"lineNumber":20,"author":{"gitId":"stein414"},"content":"    private TaskList tasks;"},{"lineNumber":21,"author":{"gitId":"stein414"},"content":"    private TextUi ui;"},{"lineNumber":22,"author":{"gitId":"stein414"},"content":""},{"lineNumber":23,"author":{"gitId":"stein414"},"content":"    @BeforeEach"},{"lineNumber":24,"author":{"gitId":"stein414"},"content":"    void setUp() {"},{"lineNumber":25,"author":{"gitId":"stein414"},"content":"        tasks \u003d new TaskList();"},{"lineNumber":26,"author":{"gitId":"stein414"},"content":"        ui \u003d new TextUi(new ByteArrayInputStream(new byte[1024]), new ByteArrayOutputStream());"},{"lineNumber":27,"author":{"gitId":"stein414"},"content":"    }"},{"lineNumber":28,"author":{"gitId":"stein414"},"content":""},{"lineNumber":29,"author":{"gitId":"stein414"},"content":"    @Test"},{"lineNumber":30,"author":{"gitId":"stein414"},"content":"    @DisplayName(\"AddDeadlineCommand should add to TaskList\")"},{"lineNumber":31,"author":{"gitId":"stein414"},"content":"    void testOutput() throws IOException {"},{"lineNumber":32,"author":{"gitId":"stein414"},"content":"        Deadline deadline \u003d new Deadline(\"a\", LocalDate.parse(\"2020-01-01\"));"},{"lineNumber":33,"author":{"gitId":"stein414"},"content":"        Command command \u003d new AddDeadlineCommand(deadline);"},{"lineNumber":34,"author":{"gitId":"stein414"},"content":""},{"lineNumber":35,"author":{"gitId":"stein414"},"content":"        command.execute(tasks, ui);"},{"lineNumber":36,"author":{"gitId":"stein414"},"content":""},{"lineNumber":37,"author":{"gitId":"stein414"},"content":"        assertEquals(deadline, tasks.get(0));"},{"lineNumber":38,"author":{"gitId":"stein414"},"content":"    }"},{"lineNumber":39,"author":{"gitId":"stein414"},"content":"}"}],"authorContributionMap":{"stein414":39}},{"path":"src/test/java/commands/AddEventCommandTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"stein414"},"content":"package commands;"},{"lineNumber":2,"author":{"gitId":"stein414"},"content":""},{"lineNumber":3,"author":{"gitId":"stein414"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;"},{"lineNumber":4,"author":{"gitId":"stein414"},"content":""},{"lineNumber":5,"author":{"gitId":"stein414"},"content":"import java.io.ByteArrayInputStream;"},{"lineNumber":6,"author":{"gitId":"stein414"},"content":"import java.io.ByteArrayOutputStream;"},{"lineNumber":7,"author":{"gitId":"stein414"},"content":"import java.io.IOException;"},{"lineNumber":8,"author":{"gitId":"stein414"},"content":"import java.time.LocalDate;"},{"lineNumber":9,"author":{"gitId":"stein414"},"content":""},{"lineNumber":10,"author":{"gitId":"stein414"},"content":"import org.junit.jupiter.api.BeforeEach;"},{"lineNumber":11,"author":{"gitId":"stein414"},"content":"import org.junit.jupiter.api.DisplayName;"},{"lineNumber":12,"author":{"gitId":"stein414"},"content":"import org.junit.jupiter.api.Test;"},{"lineNumber":13,"author":{"gitId":"stein414"},"content":""},{"lineNumber":14,"author":{"gitId":"stein414"},"content":"import data.Event;"},{"lineNumber":15,"author":{"gitId":"stein414"},"content":"import data.TaskList;"},{"lineNumber":16,"author":{"gitId":"stein414"},"content":"import ui.TextUi;"},{"lineNumber":17,"author":{"gitId":"stein414"},"content":""},{"lineNumber":18,"author":{"gitId":"stein414"},"content":"public class AddEventCommandTest {"},{"lineNumber":19,"author":{"gitId":"stein414"},"content":""},{"lineNumber":20,"author":{"gitId":"stein414"},"content":"    private TaskList tasks;"},{"lineNumber":21,"author":{"gitId":"stein414"},"content":"    private TextUi ui;"},{"lineNumber":22,"author":{"gitId":"stein414"},"content":""},{"lineNumber":23,"author":{"gitId":"stein414"},"content":"    @BeforeEach"},{"lineNumber":24,"author":{"gitId":"stein414"},"content":"    void setUp() {"},{"lineNumber":25,"author":{"gitId":"stein414"},"content":"        tasks \u003d new TaskList();"},{"lineNumber":26,"author":{"gitId":"stein414"},"content":"        ui \u003d new TextUi(new ByteArrayInputStream(new byte[1024]), new ByteArrayOutputStream());"},{"lineNumber":27,"author":{"gitId":"stein414"},"content":"    }"},{"lineNumber":28,"author":{"gitId":"stein414"},"content":""},{"lineNumber":29,"author":{"gitId":"stein414"},"content":"    @Test"},{"lineNumber":30,"author":{"gitId":"stein414"},"content":"    @DisplayName(\"AddEventCommand should add to TaskList\")"},{"lineNumber":31,"author":{"gitId":"stein414"},"content":"    void testOutput() throws IOException {"},{"lineNumber":32,"author":{"gitId":"stein414"},"content":"        Event event \u003d new Event(\"a\", LocalDate.parse(\"2020-01-01\"));"},{"lineNumber":33,"author":{"gitId":"stein414"},"content":"        Command command \u003d new AddEventCommand(event);"},{"lineNumber":34,"author":{"gitId":"stein414"},"content":""},{"lineNumber":35,"author":{"gitId":"stein414"},"content":"        command.execute(tasks, ui);"},{"lineNumber":36,"author":{"gitId":"stein414"},"content":""},{"lineNumber":37,"author":{"gitId":"stein414"},"content":"        assertEquals(event, tasks.get(0));"},{"lineNumber":38,"author":{"gitId":"stein414"},"content":"    }"},{"lineNumber":39,"author":{"gitId":"stein414"},"content":"}"}],"authorContributionMap":{"stein414":39}},{"path":"src/test/java/commands/AddTodoCommandTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"stein414"},"content":"package commands;"},{"lineNumber":2,"author":{"gitId":"stein414"},"content":""},{"lineNumber":3,"author":{"gitId":"stein414"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;"},{"lineNumber":4,"author":{"gitId":"stein414"},"content":""},{"lineNumber":5,"author":{"gitId":"stein414"},"content":"import java.io.ByteArrayInputStream;"},{"lineNumber":6,"author":{"gitId":"stein414"},"content":"import java.io.ByteArrayOutputStream;"},{"lineNumber":7,"author":{"gitId":"stein414"},"content":"import java.io.IOException;"},{"lineNumber":8,"author":{"gitId":"stein414"},"content":""},{"lineNumber":9,"author":{"gitId":"stein414"},"content":"import org.junit.jupiter.api.BeforeEach;"},{"lineNumber":10,"author":{"gitId":"stein414"},"content":"import org.junit.jupiter.api.DisplayName;"},{"lineNumber":11,"author":{"gitId":"stein414"},"content":"import org.junit.jupiter.api.Test;"},{"lineNumber":12,"author":{"gitId":"stein414"},"content":""},{"lineNumber":13,"author":{"gitId":"stein414"},"content":"import data.TaskList;"},{"lineNumber":14,"author":{"gitId":"stein414"},"content":"import data.Todo;"},{"lineNumber":15,"author":{"gitId":"stein414"},"content":"import ui.TextUi;"},{"lineNumber":16,"author":{"gitId":"stein414"},"content":""},{"lineNumber":17,"author":{"gitId":"stein414"},"content":"public class AddTodoCommandTest {"},{"lineNumber":18,"author":{"gitId":"stein414"},"content":""},{"lineNumber":19,"author":{"gitId":"stein414"},"content":"    private TaskList tasks;"},{"lineNumber":20,"author":{"gitId":"stein414"},"content":"    private TextUi ui;"},{"lineNumber":21,"author":{"gitId":"stein414"},"content":""},{"lineNumber":22,"author":{"gitId":"stein414"},"content":"    @BeforeEach"},{"lineNumber":23,"author":{"gitId":"stein414"},"content":"    void setUp() {"},{"lineNumber":24,"author":{"gitId":"stein414"},"content":"        tasks \u003d new TaskList();"},{"lineNumber":25,"author":{"gitId":"stein414"},"content":"        ui \u003d new TextUi(new ByteArrayInputStream(new byte[1024]), new ByteArrayOutputStream());"},{"lineNumber":26,"author":{"gitId":"stein414"},"content":"    }"},{"lineNumber":27,"author":{"gitId":"stein414"},"content":""},{"lineNumber":28,"author":{"gitId":"stein414"},"content":"    @Test"},{"lineNumber":29,"author":{"gitId":"stein414"},"content":"    @DisplayName(\"AddToDoCommand should add to TaskList\")"},{"lineNumber":30,"author":{"gitId":"stein414"},"content":"    void testOutput() throws IOException {"},{"lineNumber":31,"author":{"gitId":"stein414"},"content":"        Todo todo \u003d new Todo(\"a\");"},{"lineNumber":32,"author":{"gitId":"stein414"},"content":"        Command command \u003d new AddTodoCommand(todo);"},{"lineNumber":33,"author":{"gitId":"stein414"},"content":""},{"lineNumber":34,"author":{"gitId":"stein414"},"content":"        command.execute(tasks, ui);"},{"lineNumber":35,"author":{"gitId":"stein414"},"content":""},{"lineNumber":36,"author":{"gitId":"stein414"},"content":"        assertEquals(todo, tasks.get(0));"},{"lineNumber":37,"author":{"gitId":"stein414"},"content":"    }"},{"lineNumber":38,"author":{"gitId":"stein414"},"content":"}"}],"authorContributionMap":{"stein414":38}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"stein414"},"content":"todo borrow book"},{"lineNumber":2,"author":{"gitId":"stein414"},"content":"deadline return book /by Sunday"},{"lineNumber":3,"author":{"gitId":"stein414"},"content":"event project meeting /at Mon 2-4pm"},{"lineNumber":4,"author":{"gitId":"stein414"},"content":"list"},{"lineNumber":5,"author":{"gitId":"stein414"},"content":"done 1"},{"lineNumber":6,"author":{"gitId":"stein414"},"content":"done 3"},{"lineNumber":7,"author":{"gitId":"stein414"},"content":"list"},{"lineNumber":8,"author":{"gitId":"stein414"},"content":"done 2"},{"lineNumber":9,"author":{"gitId":"stein414"},"content":"event a /at"},{"lineNumber":10,"author":{"gitId":"stein414"},"content":"event a /at a"},{"lineNumber":11,"author":{"gitId":"stein414"},"content":"event a /at"},{"lineNumber":12,"author":{"gitId":"stein414"},"content":"deadline b"},{"lineNumber":13,"author":{"gitId":"stein414"},"content":"deadline"},{"lineNumber":14,"author":{"gitId":"stein414"},"content":"deadline /by"},{"lineNumber":15,"author":{"gitId":"stein414"},"content":"deadline /by a"},{"lineNumber":16,"author":{"gitId":"stein414"},"content":"deadline fdasf /by d"},{"lineNumber":17,"author":{"gitId":"stein414"},"content":"list"},{"lineNumber":18,"author":{"gitId":"stein414"},"content":"todo"},{"lineNumber":19,"author":{"gitId":"stein414"},"content":"todo afdsa"},{"lineNumber":20,"author":{"gitId":"stein414"},"content":"list"},{"lineNumber":21,"author":{"gitId":"stein414"},"content":"done 4"},{"lineNumber":22,"author":{"gitId":"stein414"},"content":"done 5"},{"lineNumber":23,"author":{"gitId":"stein414"},"content":"done 6"},{"lineNumber":24,"author":{"gitId":"stein414"},"content":"list"},{"lineNumber":25,"author":{"gitId":"stein414"},"content":"done 0"},{"lineNumber":26,"author":{"gitId":"stein414"},"content":"done -1"},{"lineNumber":27,"author":{"gitId":"stein414"},"content":"done 7"},{"lineNumber":28,"author":{"gitId":"stein414"},"content":"list"},{"lineNumber":29,"author":{"gitId":"stein414"},"content":"delete 0"},{"lineNumber":30,"author":{"gitId":"stein414"},"content":"delete -1"},{"lineNumber":31,"author":{"gitId":"stein414"},"content":"delete 7"},{"lineNumber":32,"author":{"gitId":"stein414"},"content":"delete 4"},{"lineNumber":33,"author":{"gitId":"stein414"},"content":"list"},{"lineNumber":34,"author":{"gitId":"stein414"},"content":"delete 4"},{"lineNumber":35,"author":{"gitId":"stein414"},"content":"list"},{"lineNumber":36,"author":{"gitId":"stein414"},"content":"delete 1"},{"lineNumber":37,"author":{"gitId":"stein414"},"content":"list"},{"lineNumber":38,"author":{"gitId":"stein414"},"content":"delete 2"},{"lineNumber":39,"author":{"gitId":"stein414"},"content":"list"},{"lineNumber":40,"author":{"gitId":"stein414"},"content":"delete 1"},{"lineNumber":41,"author":{"gitId":"stein414"},"content":"list"},{"lineNumber":42,"author":{"gitId":"stein414"},"content":"delete 1"},{"lineNumber":43,"author":{"gitId":"stein414"},"content":"list"},{"lineNumber":44,"author":{"gitId":"stein414"},"content":"bye"}],"authorContributionMap":{"stein414":44}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF"},{"lineNumber":2,"author":{"gitId":"-"},"content":""},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin"},{"lineNumber":5,"author":{"gitId":"-"},"content":""},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run"},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT"},{"lineNumber":8,"author":{"gitId":"-"},"content":""},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder"},{"lineNumber":10,"author":{"gitId":"-"},"content":"javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\*.java"},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 ("},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1"},{"lineNumber":14,"author":{"gitId":"-"},"content":")"},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0"},{"lineNumber":16,"author":{"gitId":"-"},"content":""},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"},{"lineNumber":18,"author":{"gitId":"stein414"},"content":"java -classpath ..\\bin duke.duke \u003c input.txt \u003e ACTUAL.TXT"},{"lineNumber":19,"author":{"gitId":"-"},"content":""},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM compare the output to the expected output"},{"lineNumber":21,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT"}],"authorContributionMap":{"stein414":1,"-":20}},{"path":"text-ui-test/runtest.sh","fileType":"sh","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"#!/usr/bin/env bash"},{"lineNumber":2,"author":{"gitId":"-"},"content":""},{"lineNumber":3,"author":{"gitId":"-"},"content":"# create bin directory if it doesn\u0027t exist"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if [ ! -d \"../bin\" ]"},{"lineNumber":5,"author":{"gitId":"-"},"content":"then"},{"lineNumber":6,"author":{"gitId":"-"},"content":"    mkdir ../bin"},{"lineNumber":7,"author":{"gitId":"-"},"content":"fi"},{"lineNumber":8,"author":{"gitId":"-"},"content":""},{"lineNumber":9,"author":{"gitId":"-"},"content":"# delete output from previous run"},{"lineNumber":10,"author":{"gitId":"-"},"content":"if [ -e \"./ACTUAL.TXT\" ]"},{"lineNumber":11,"author":{"gitId":"-"},"content":"then"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    rm ACTUAL.TXT"},{"lineNumber":13,"author":{"gitId":"-"},"content":"fi"},{"lineNumber":14,"author":{"gitId":"-"},"content":""},{"lineNumber":15,"author":{"gitId":"-"},"content":"# compile the code into the bin folder, terminates if error occurred"},{"lineNumber":16,"author":{"gitId":"stein414"},"content":"if ! javac -cp ../src/main/java -Xlint:none -d ../bin ../src/main/java/Duke/*.java"},{"lineNumber":17,"author":{"gitId":"-"},"content":"then"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    echo \"********** BUILD FAILURE **********\""},{"lineNumber":19,"author":{"gitId":"-"},"content":"    exit 1"},{"lineNumber":20,"author":{"gitId":"-"},"content":"fi"},{"lineNumber":21,"author":{"gitId":"-"},"content":""},{"lineNumber":22,"author":{"gitId":"-"},"content":"# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"},{"lineNumber":23,"author":{"gitId":"stein414"},"content":"java -classpath ../bin duke.Duke \u003c input.txt \u003e ACTUAL.TXT"},{"lineNumber":24,"author":{"gitId":"-"},"content":""},{"lineNumber":25,"author":{"gitId":"-"},"content":"# convert to UNIX format"},{"lineNumber":26,"author":{"gitId":"-"},"content":"cp EXPECTED.TXT EXPECTED-UNIX.TXT"},{"lineNumber":27,"author":{"gitId":"-"},"content":"dos2unix ACTUAL.TXT EXPECTED-UNIX.TXT"},{"lineNumber":28,"author":{"gitId":"-"},"content":""},{"lineNumber":29,"author":{"gitId":"-"},"content":"# compare the output to the expected output"},{"lineNumber":30,"author":{"gitId":"-"},"content":"diff ACTUAL.TXT EXPECTED-UNIX.TXT"},{"lineNumber":31,"author":{"gitId":"-"},"content":"if [ $? -eq 0 ]"},{"lineNumber":32,"author":{"gitId":"-"},"content":"then"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    echo \"Test result: PASSED\""},{"lineNumber":34,"author":{"gitId":"-"},"content":"    exit 0"},{"lineNumber":35,"author":{"gitId":"-"},"content":"else"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    echo \"Test result: FAILED\""},{"lineNumber":37,"author":{"gitId":"-"},"content":"    exit 1"},{"lineNumber":38,"author":{"gitId":"-"},"content":"fi"}],"authorContributionMap":{"stein414":2,"-":36}}]
