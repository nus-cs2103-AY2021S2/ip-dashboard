[{"path":"src/main/java/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"samleewy"},"content":"package main.java;"},{"lineNumber":2,"author":{"gitId":"samleewy"},"content":""},{"lineNumber":3,"author":{"gitId":"samleewy"},"content":"public class Deadline extends Task {"},{"lineNumber":4,"author":{"gitId":"samleewy"},"content":""},{"lineNumber":5,"author":{"gitId":"samleewy"},"content":"    protected String by;"},{"lineNumber":6,"author":{"gitId":"samleewy"},"content":""},{"lineNumber":7,"author":{"gitId":"samleewy"},"content":"    Deadline(String name, String by) {"},{"lineNumber":8,"author":{"gitId":"samleewy"},"content":"        super(name, \"Make sure you meet this deadline!\");"},{"lineNumber":9,"author":{"gitId":"samleewy"},"content":"        this.by \u003d by;"},{"lineNumber":10,"author":{"gitId":"samleewy"},"content":"    }"},{"lineNumber":11,"author":{"gitId":"samleewy"},"content":""},{"lineNumber":12,"author":{"gitId":"samleewy"},"content":"    @Override"},{"lineNumber":13,"author":{"gitId":"samleewy"},"content":"    public String toString() {"},{"lineNumber":14,"author":{"gitId":"samleewy"},"content":"        return \"[D]\" + super.toString() + \" (by: \" + by + \")\";"},{"lineNumber":15,"author":{"gitId":"samleewy"},"content":"    }"},{"lineNumber":16,"author":{"gitId":"samleewy"},"content":"}"}],"authorContributionMap":{"samleewy":16}},{"path":"src/main/java/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"samleewy"},"content":"package main.java;"},{"lineNumber":2,"author":{"gitId":"samleewy"},"content":""},{"lineNumber":3,"author":{"gitId":"samleewy"},"content":"import main.java.Task;"},{"lineNumber":4,"author":{"gitId":"samleewy"},"content":""},{"lineNumber":5,"author":{"gitId":"samleewy"},"content":"import java.util.*;"},{"lineNumber":6,"author":{"gitId":"samleewy"},"content":"import java.util.Scanner;"},{"lineNumber":7,"author":{"gitId":"samleewy"},"content":""},{"lineNumber":8,"author":{"gitId":"-"},"content":"public class Duke {"},{"lineNumber":9,"author":{"gitId":"samleewy"},"content":""},{"lineNumber":10,"author":{"gitId":"samleewy"},"content":"    private static List\u003cTask\u003e tasks \u003d new ArrayList\u003cTask\u003e();"},{"lineNumber":11,"author":{"gitId":"samleewy"},"content":""},{"lineNumber":12,"author":{"gitId":"samleewy"},"content":"    /**"},{"lineNumber":13,"author":{"gitId":"samleewy"},"content":"     * Returns message with additional header \u0027Olly\u0027, the chat bot name"},{"lineNumber":14,"author":{"gitId":"samleewy"},"content":"     * @param message: Message to be made by Olly"},{"lineNumber":15,"author":{"gitId":"samleewy"},"content":"     */"},{"lineNumber":16,"author":{"gitId":"samleewy"},"content":"    public static void ollySpeak(String message) {"},{"lineNumber":17,"author":{"gitId":"samleewy"},"content":"        System.out.println(\"Olly: \" + message);"},{"lineNumber":18,"author":{"gitId":"samleewy"},"content":"    }"},{"lineNumber":19,"author":{"gitId":"samleewy"},"content":""},{"lineNumber":20,"author":{"gitId":"samleewy"},"content":"    /**"},{"lineNumber":21,"author":{"gitId":"samleewy"},"content":"     * Main engine which handles the input from the user"},{"lineNumber":22,"author":{"gitId":"samleewy"},"content":"     * Currently supported inputs: list, todo, deadline, event, done, delete."},{"lineNumber":23,"author":{"gitId":"samleewy"},"content":"     * Throws DukeException upon incorrect command from user"},{"lineNumber":24,"author":{"gitId":"samleewy"},"content":"     * @param input: Input message from user"},{"lineNumber":25,"author":{"gitId":"samleewy"},"content":"     * @throws DukeException"},{"lineNumber":26,"author":{"gitId":"samleewy"},"content":"     */"},{"lineNumber":27,"author":{"gitId":"samleewy"},"content":"    private static void inputHandler(String input) throws DukeException {"},{"lineNumber":28,"author":{"gitId":"samleewy"},"content":"        if (input.equals(\"bye\")) {"},{"lineNumber":29,"author":{"gitId":"samleewy"},"content":"            ollySpeak(\"Goodbye for now, we will meet again.\");"},{"lineNumber":30,"author":{"gitId":"samleewy"},"content":"            System.exit(0);"},{"lineNumber":31,"author":{"gitId":"samleewy"},"content":"        }"},{"lineNumber":32,"author":{"gitId":"samleewy"},"content":""},{"lineNumber":33,"author":{"gitId":"samleewy"},"content":"        if (input.equals(\"list\")) {"},{"lineNumber":34,"author":{"gitId":"samleewy"},"content":"            printTasks();"},{"lineNumber":35,"author":{"gitId":"samleewy"},"content":"        } else if (input.startsWith(\"todo\")) {"},{"lineNumber":36,"author":{"gitId":"samleewy"},"content":"            String[] command \u003d input.split(\"todo \");"},{"lineNumber":37,"author":{"gitId":"samleewy"},"content":"            if (command.length \u003d\u003d 1) throw new DukeException(\"The description of a todo cannot be empty.\");"},{"lineNumber":38,"author":{"gitId":"samleewy"},"content":"            Todo todo \u003d new Todo(command[1]);"},{"lineNumber":39,"author":{"gitId":"samleewy"},"content":"            addTask(todo);"},{"lineNumber":40,"author":{"gitId":"samleewy"},"content":"        } else if (input.startsWith(\"deadline\")) {"},{"lineNumber":41,"author":{"gitId":"samleewy"},"content":"            String[] command \u003d input.split(\"deadline \");"},{"lineNumber":42,"author":{"gitId":"samleewy"},"content":"            if (command.length \u003d\u003d 1) throw new DukeException(\"The description of a deadline cannot be empty.\");"},{"lineNumber":43,"author":{"gitId":"samleewy"},"content":"            String deadlineArg \u003d command[1];"},{"lineNumber":44,"author":{"gitId":"samleewy"},"content":""},{"lineNumber":45,"author":{"gitId":"samleewy"},"content":"            String[] byArgs \u003d deadlineArg.split(\" /by \");"},{"lineNumber":46,"author":{"gitId":"samleewy"},"content":"            if (byArgs.length \u003c 2) throw new DukeException(\"There must be a date for deadline.\");"},{"lineNumber":47,"author":{"gitId":"samleewy"},"content":""},{"lineNumber":48,"author":{"gitId":"samleewy"},"content":"            Deadline deadline \u003d new Deadline(byArgs[0], byArgs[1]);"},{"lineNumber":49,"author":{"gitId":"samleewy"},"content":"            addTask(deadline);"},{"lineNumber":50,"author":{"gitId":"samleewy"},"content":"        } else if (input.startsWith(\"event\")) {"},{"lineNumber":51,"author":{"gitId":"samleewy"},"content":"            String[] command \u003d input.split(\"event \");"},{"lineNumber":52,"author":{"gitId":"samleewy"},"content":"            if (command.length \u003d\u003d 1) throw new DukeException(\"The description of a event cannot be empty.\");"},{"lineNumber":53,"author":{"gitId":"samleewy"},"content":"            String eventArg \u003d command[1];"},{"lineNumber":54,"author":{"gitId":"samleewy"},"content":""},{"lineNumber":55,"author":{"gitId":"samleewy"},"content":"            String[] atArgs \u003d eventArg.split(\" /at \");"},{"lineNumber":56,"author":{"gitId":"samleewy"},"content":"            if (atArgs.length \u003c 2) throw new DukeException(\"There must be a date for event.\");"},{"lineNumber":57,"author":{"gitId":"samleewy"},"content":"            Event event \u003d new Event(atArgs[0], atArgs[1]);"},{"lineNumber":58,"author":{"gitId":"samleewy"},"content":"            addTask(event);"},{"lineNumber":59,"author":{"gitId":"samleewy"},"content":"        } else if (input.startsWith(\"done\")) {"},{"lineNumber":60,"author":{"gitId":"samleewy"},"content":"            String[] command \u003d input.split(\" \");"},{"lineNumber":61,"author":{"gitId":"samleewy"},"content":"            int index \u003d Integer.parseInt(command[1]);"},{"lineNumber":62,"author":{"gitId":"samleewy"},"content":"            if (index \u003e 0 \u0026\u0026 index \u003c\u003d tasks.size()) {"},{"lineNumber":63,"author":{"gitId":"samleewy"},"content":"                Task doneTask \u003d tasks.get(index - 1);"},{"lineNumber":64,"author":{"gitId":"samleewy"},"content":"                doneTask.setDone();"},{"lineNumber":65,"author":{"gitId":"samleewy"},"content":"                ollySpeak(\"Swee! This task is done:\");"},{"lineNumber":66,"author":{"gitId":"samleewy"},"content":"                System.out.println(doneTask);"},{"lineNumber":67,"author":{"gitId":"samleewy"},"content":"            } else {"},{"lineNumber":68,"author":{"gitId":"samleewy"},"content":"                ollySpeak(\"The task number does not work, try again?\");"},{"lineNumber":69,"author":{"gitId":"samleewy"},"content":"            }"},{"lineNumber":70,"author":{"gitId":"samleewy"},"content":"        } else if (input.startsWith(\"delete\")) {"},{"lineNumber":71,"author":{"gitId":"samleewy"},"content":"            String[] command \u003d input.split(\" \");"},{"lineNumber":72,"author":{"gitId":"samleewy"},"content":"            int index \u003d Integer.parseInt(command[1]);"},{"lineNumber":73,"author":{"gitId":"samleewy"},"content":"            if (index \u003e 0 \u0026\u0026 index \u003c\u003d tasks.size()) {"},{"lineNumber":74,"author":{"gitId":"samleewy"},"content":"                Task  deletedTask \u003d tasks.get(index - 1);"},{"lineNumber":75,"author":{"gitId":"samleewy"},"content":"                deleteTask(deletedTask);"},{"lineNumber":76,"author":{"gitId":"samleewy"},"content":"            } else {"},{"lineNumber":77,"author":{"gitId":"samleewy"},"content":"                ollySpeak(\"The task number does not work, try again?\");"},{"lineNumber":78,"author":{"gitId":"samleewy"},"content":"            }"},{"lineNumber":79,"author":{"gitId":"samleewy"},"content":"        } else {"},{"lineNumber":80,"author":{"gitId":"samleewy"},"content":"            throw new DukeException(\"I don\u0027t understand your language leh. Speak singlish?\");"},{"lineNumber":81,"author":{"gitId":"samleewy"},"content":"        }"},{"lineNumber":82,"author":{"gitId":"samleewy"},"content":"    }"},{"lineNumber":83,"author":{"gitId":"samleewy"},"content":""},{"lineNumber":84,"author":{"gitId":"samleewy"},"content":"    /**"},{"lineNumber":85,"author":{"gitId":"samleewy"},"content":"     * Wrapper for getting the total task count of Olly (Duke)"},{"lineNumber":86,"author":{"gitId":"samleewy"},"content":"     * @return number of tasks"},{"lineNumber":87,"author":{"gitId":"samleewy"},"content":"     */"},{"lineNumber":88,"author":{"gitId":"samleewy"},"content":"    private static int getTaskCount() {"},{"lineNumber":89,"author":{"gitId":"samleewy"},"content":"        return tasks.size();"},{"lineNumber":90,"author":{"gitId":"samleewy"},"content":"    }"},{"lineNumber":91,"author":{"gitId":"samleewy"},"content":""},{"lineNumber":92,"author":{"gitId":"samleewy"},"content":"    /**"},{"lineNumber":93,"author":{"gitId":"samleewy"},"content":"     * Add task to the current list of tasks that Olly is handling"},{"lineNumber":94,"author":{"gitId":"samleewy"},"content":"     * @param task: Supports Event, Todo, Deadline tasks (any child class inheriting from Task)"},{"lineNumber":95,"author":{"gitId":"samleewy"},"content":"     */"},{"lineNumber":96,"author":{"gitId":"samleewy"},"content":"    private static void addTask(Task task) {"},{"lineNumber":97,"author":{"gitId":"samleewy"},"content":"        tasks.add(task);"},{"lineNumber":98,"author":{"gitId":"samleewy"},"content":"        ollySpeak(task.addMessage + (task.addMessage \u003d\u003d null ? \"\" : \" \") + \"I\u0027ve added:\");"},{"lineNumber":99,"author":{"gitId":"samleewy"},"content":"        System.out.println(task);"},{"lineNumber":100,"author":{"gitId":"samleewy"},"content":"        ollySpeak(\"You now have \" + getTaskCount() + \" tasks at hand.\");"},{"lineNumber":101,"author":{"gitId":"samleewy"},"content":"    }"},{"lineNumber":102,"author":{"gitId":"samleewy"},"content":""},{"lineNumber":103,"author":{"gitId":"samleewy"},"content":"    /**"},{"lineNumber":104,"author":{"gitId":"samleewy"},"content":"     * Deletes task from task list and informs user of the task that has been removed"},{"lineNumber":105,"author":{"gitId":"samleewy"},"content":"     * @param task: Task to be removed"},{"lineNumber":106,"author":{"gitId":"samleewy"},"content":"     */"},{"lineNumber":107,"author":{"gitId":"samleewy"},"content":"    private static void deleteTask(Task task) {"},{"lineNumber":108,"author":{"gitId":"samleewy"},"content":"        tasks.remove(task);"},{"lineNumber":109,"author":{"gitId":"samleewy"},"content":"        ollySpeak(\"Aww man.. I\u0027ve removed this task:\");"},{"lineNumber":110,"author":{"gitId":"samleewy"},"content":"        System.out.println(task);"},{"lineNumber":111,"author":{"gitId":"samleewy"},"content":"        ollySpeak(\"Now you have \" + getTaskCount() + \" tasks left.\");"},{"lineNumber":112,"author":{"gitId":"samleewy"},"content":"    }"},{"lineNumber":113,"author":{"gitId":"samleewy"},"content":""},{"lineNumber":114,"author":{"gitId":"samleewy"},"content":"    /**"},{"lineNumber":115,"author":{"gitId":"samleewy"},"content":"     * Prints out the list of task that the user currently has. The tasks are ordered numerically in the sequence"},{"lineNumber":116,"author":{"gitId":"samleewy"},"content":"     * in which it was inserted."},{"lineNumber":117,"author":{"gitId":"samleewy"},"content":"     */"},{"lineNumber":118,"author":{"gitId":"samleewy"},"content":"    private static void printTasks() {"},{"lineNumber":119,"author":{"gitId":"samleewy"},"content":"        if (getTaskCount() \u003d\u003d 0) {"},{"lineNumber":120,"author":{"gitId":"samleewy"},"content":"            ollySpeak(\"You currently have no tasks! Use todo, deadline or event.\");"},{"lineNumber":121,"author":{"gitId":"samleewy"},"content":"        } else {"},{"lineNumber":122,"author":{"gitId":"samleewy"},"content":"            ollySpeak(\"Here you go! Your list of items:\");"},{"lineNumber":123,"author":{"gitId":"samleewy"},"content":"            for (int i \u003d 0; i \u003c tasks.size(); i++) {"},{"lineNumber":124,"author":{"gitId":"samleewy"},"content":"                System.out.println(i+1 + \". \" + tasks.get(i));"},{"lineNumber":125,"author":{"gitId":"samleewy"},"content":"            }"},{"lineNumber":126,"author":{"gitId":"samleewy"},"content":"        }"},{"lineNumber":127,"author":{"gitId":"samleewy"},"content":"    }"},{"lineNumber":128,"author":{"gitId":"samleewy"},"content":""},{"lineNumber":129,"author":{"gitId":"-"},"content":"    public static void main(String[] args) {"},{"lineNumber":130,"author":{"gitId":"samleewy"},"content":"        Scanner sc \u003d new Scanner(System.in);"},{"lineNumber":131,"author":{"gitId":"samleewy"},"content":"        ollySpeak(\"Hey! Welcome to the chatbot. What can I do for you today?\");"},{"lineNumber":132,"author":{"gitId":"samleewy"},"content":""},{"lineNumber":133,"author":{"gitId":"samleewy"},"content":"        while (sc.hasNext()) {"},{"lineNumber":134,"author":{"gitId":"samleewy"},"content":"            String input \u003d sc.nextLine();"},{"lineNumber":135,"author":{"gitId":"samleewy"},"content":"            try {"},{"lineNumber":136,"author":{"gitId":"samleewy"},"content":"                inputHandler(input);"},{"lineNumber":137,"author":{"gitId":"samleewy"},"content":"            } catch (DukeException dukeEx) {"},{"lineNumber":138,"author":{"gitId":"samleewy"},"content":"                System.out.println(dukeEx);"},{"lineNumber":139,"author":{"gitId":"samleewy"},"content":"            }"},{"lineNumber":140,"author":{"gitId":"samleewy"},"content":"        }"},{"lineNumber":141,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":142,"author":{"gitId":"-"},"content":"}"}],"authorContributionMap":{"samleewy":138,"-":4}},{"path":"src/main/java/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"samleewy"},"content":"package main.java;"},{"lineNumber":2,"author":{"gitId":"samleewy"},"content":""},{"lineNumber":3,"author":{"gitId":"samleewy"},"content":"public class DukeException extends Exception {"},{"lineNumber":4,"author":{"gitId":"samleewy"},"content":"    DukeException(String message) {"},{"lineNumber":5,"author":{"gitId":"samleewy"},"content":"        super(message);"},{"lineNumber":6,"author":{"gitId":"samleewy"},"content":"    }"},{"lineNumber":7,"author":{"gitId":"samleewy"},"content":""},{"lineNumber":8,"author":{"gitId":"samleewy"},"content":"    @Override"},{"lineNumber":9,"author":{"gitId":"samleewy"},"content":"    public String toString() {"},{"lineNumber":10,"author":{"gitId":"samleewy"},"content":"        return \"ALAMAK! \" + getMessage();"},{"lineNumber":11,"author":{"gitId":"samleewy"},"content":"    }"},{"lineNumber":12,"author":{"gitId":"samleewy"},"content":"}"}],"authorContributionMap":{"samleewy":12}},{"path":"src/main/java/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"samleewy"},"content":"package main.java;"},{"lineNumber":2,"author":{"gitId":"samleewy"},"content":""},{"lineNumber":3,"author":{"gitId":"samleewy"},"content":"public class Event extends Task {"},{"lineNumber":4,"author":{"gitId":"samleewy"},"content":"    protected String at;"},{"lineNumber":5,"author":{"gitId":"samleewy"},"content":""},{"lineNumber":6,"author":{"gitId":"samleewy"},"content":"    Event(String name, String at) {"},{"lineNumber":7,"author":{"gitId":"samleewy"},"content":"        super(name, \"Event coming right up!\");"},{"lineNumber":8,"author":{"gitId":"samleewy"},"content":"        this.at \u003d at;"},{"lineNumber":9,"author":{"gitId":"samleewy"},"content":"    }"},{"lineNumber":10,"author":{"gitId":"samleewy"},"content":""},{"lineNumber":11,"author":{"gitId":"samleewy"},"content":"    public String toString() {"},{"lineNumber":12,"author":{"gitId":"samleewy"},"content":"        return \"[E]\" + super.toString() + \" (at: \" + at + \")\";"},{"lineNumber":13,"author":{"gitId":"samleewy"},"content":"    }"},{"lineNumber":14,"author":{"gitId":"samleewy"},"content":"}"}],"authorContributionMap":{"samleewy":14}},{"path":"src/main/java/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"samleewy"},"content":"package main.java;"},{"lineNumber":2,"author":{"gitId":"samleewy"},"content":""},{"lineNumber":3,"author":{"gitId":"samleewy"},"content":"public class Task {"},{"lineNumber":4,"author":{"gitId":"samleewy"},"content":"    String name;"},{"lineNumber":5,"author":{"gitId":"samleewy"},"content":"    Boolean status;"},{"lineNumber":6,"author":{"gitId":"samleewy"},"content":"    String addMessage;"},{"lineNumber":7,"author":{"gitId":"samleewy"},"content":""},{"lineNumber":8,"author":{"gitId":"samleewy"},"content":"    Task(String name) {"},{"lineNumber":9,"author":{"gitId":"samleewy"},"content":"        this.name \u003d name;"},{"lineNumber":10,"author":{"gitId":"samleewy"},"content":"        this.status \u003d false;"},{"lineNumber":11,"author":{"gitId":"samleewy"},"content":"    }"},{"lineNumber":12,"author":{"gitId":"samleewy"},"content":""},{"lineNumber":13,"author":{"gitId":"samleewy"},"content":"    Task(String name, String addMessage) {"},{"lineNumber":14,"author":{"gitId":"samleewy"},"content":"        this(name);"},{"lineNumber":15,"author":{"gitId":"samleewy"},"content":"        this.addMessage \u003d addMessage;"},{"lineNumber":16,"author":{"gitId":"samleewy"},"content":"    }"},{"lineNumber":17,"author":{"gitId":"samleewy"},"content":""},{"lineNumber":18,"author":{"gitId":"samleewy"},"content":"    public void setDone() {"},{"lineNumber":19,"author":{"gitId":"samleewy"},"content":"        this.status \u003d true;"},{"lineNumber":20,"author":{"gitId":"samleewy"},"content":"    }"},{"lineNumber":21,"author":{"gitId":"samleewy"},"content":""},{"lineNumber":22,"author":{"gitId":"samleewy"},"content":"    @Override"},{"lineNumber":23,"author":{"gitId":"samleewy"},"content":"    public String toString() {"},{"lineNumber":24,"author":{"gitId":"samleewy"},"content":"        String statusText;"},{"lineNumber":25,"author":{"gitId":"samleewy"},"content":"        statusText \u003d status ? \"\\u2713\" : \"\\u2718\";"},{"lineNumber":26,"author":{"gitId":"samleewy"},"content":"        return statusText + \" \" + name;"},{"lineNumber":27,"author":{"gitId":"samleewy"},"content":"    }"},{"lineNumber":28,"author":{"gitId":"samleewy"},"content":"}"}],"authorContributionMap":{"samleewy":28}},{"path":"src/main/java/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"samleewy"},"content":"package main.java;"},{"lineNumber":2,"author":{"gitId":"samleewy"},"content":""},{"lineNumber":3,"author":{"gitId":"samleewy"},"content":"public class Todo extends Task {"},{"lineNumber":4,"author":{"gitId":"samleewy"},"content":"    Todo(String name) {"},{"lineNumber":5,"author":{"gitId":"samleewy"},"content":"        super(name, \"Make sure you do this task!\");"},{"lineNumber":6,"author":{"gitId":"samleewy"},"content":"    }"},{"lineNumber":7,"author":{"gitId":"samleewy"},"content":""},{"lineNumber":8,"author":{"gitId":"samleewy"},"content":"    @Override"},{"lineNumber":9,"author":{"gitId":"samleewy"},"content":"    public String toString() {"},{"lineNumber":10,"author":{"gitId":"samleewy"},"content":"        return \"[T]\" + super.toString();"},{"lineNumber":11,"author":{"gitId":"samleewy"},"content":"    }"},{"lineNumber":12,"author":{"gitId":"samleewy"},"content":"}"}],"authorContributionMap":{"samleewy":12}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"samleewy"},"content":"todo borrow book"},{"lineNumber":2,"author":{"gitId":"samleewy"},"content":"list"},{"lineNumber":3,"author":{"gitId":"samleewy"},"content":"deadline return book /by Sunday"},{"lineNumber":4,"author":{"gitId":"samleewy"},"content":"event project meeting /at Mon 2-4pm"}],"authorContributionMap":{"samleewy":4}},{"path":"text-ui-test/runtest.sh","fileType":"sh","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"#!/usr/bin/env bash"},{"lineNumber":2,"author":{"gitId":"-"},"content":""},{"lineNumber":3,"author":{"gitId":"-"},"content":"# create bin directory if it doesn\u0027t exist"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if [ ! -d \"../bin\" ]"},{"lineNumber":5,"author":{"gitId":"-"},"content":"then"},{"lineNumber":6,"author":{"gitId":"-"},"content":"    mkdir ../bin"},{"lineNumber":7,"author":{"gitId":"-"},"content":"fi"},{"lineNumber":8,"author":{"gitId":"-"},"content":""},{"lineNumber":9,"author":{"gitId":"-"},"content":"# delete output from previous run"},{"lineNumber":10,"author":{"gitId":"-"},"content":"if [ -e \"./ACTUAL.TXT\" ]"},{"lineNumber":11,"author":{"gitId":"-"},"content":"then"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    rm ACTUAL.TXT"},{"lineNumber":13,"author":{"gitId":"-"},"content":"fi"},{"lineNumber":14,"author":{"gitId":"-"},"content":""},{"lineNumber":15,"author":{"gitId":"-"},"content":"# compile the code into the bin folder, terminates if error occurred"},{"lineNumber":16,"author":{"gitId":"-"},"content":"if ! javac -cp ../src/main/java -Xlint:none -d ../bin ../src/main/java/*.java"},{"lineNumber":17,"author":{"gitId":"-"},"content":"then"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    echo \"********** BUILD FAILURE **********\""},{"lineNumber":19,"author":{"gitId":"-"},"content":"    exit 1"},{"lineNumber":20,"author":{"gitId":"-"},"content":"fi"},{"lineNumber":21,"author":{"gitId":"-"},"content":""},{"lineNumber":22,"author":{"gitId":"-"},"content":"# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"},{"lineNumber":23,"author":{"gitId":"samleewy"},"content":"java -classpath ../bin main.java.Duke \u003c input.txt \u003e ACTUAL.TXT"},{"lineNumber":24,"author":{"gitId":"-"},"content":""},{"lineNumber":25,"author":{"gitId":"-"},"content":"# convert to UNIX format"},{"lineNumber":26,"author":{"gitId":"-"},"content":"cp EXPECTED.TXT EXPECTED-UNIX.TXT"},{"lineNumber":27,"author":{"gitId":"-"},"content":"dos2unix ACTUAL.TXT EXPECTED-UNIX.TXT"},{"lineNumber":28,"author":{"gitId":"-"},"content":""},{"lineNumber":29,"author":{"gitId":"-"},"content":"# compare the output to the expected output"},{"lineNumber":30,"author":{"gitId":"-"},"content":"diff ACTUAL.TXT EXPECTED-UNIX.TXT"},{"lineNumber":31,"author":{"gitId":"-"},"content":"if [ $? -eq 0 ]"},{"lineNumber":32,"author":{"gitId":"-"},"content":"then"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    echo \"Test result: PASSED\""},{"lineNumber":34,"author":{"gitId":"-"},"content":"    exit 0"},{"lineNumber":35,"author":{"gitId":"-"},"content":"else"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    echo \"Test result: FAILED\""},{"lineNumber":37,"author":{"gitId":"-"},"content":"    exit 1"},{"lineNumber":38,"author":{"gitId":"-"},"content":"fi"}],"authorContributionMap":{"samleewy":1,"-":37}}]
