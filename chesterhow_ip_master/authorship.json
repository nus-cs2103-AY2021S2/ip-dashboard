[{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027checkstyle\u0027"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027"},{"lineNumber":6,"author":{"gitId":"-"},"content":"}"},{"lineNumber":7,"author":{"gitId":"-"},"content":""},{"lineNumber":8,"author":{"gitId":"-"},"content":"repositories {"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    mavenCentral()"},{"lineNumber":10,"author":{"gitId":"-"},"content":"}"},{"lineNumber":11,"author":{"gitId":"-"},"content":""},{"lineNumber":12,"author":{"gitId":"-"},"content":"dependencies {"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.5.0\u0027"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.5.0\u0027"},{"lineNumber":15,"author":{"gitId":"chesterhow"},"content":""},{"lineNumber":16,"author":{"gitId":"chesterhow"},"content":"    String javaFxVersion \u003d \u002711\u0027"},{"lineNumber":17,"author":{"gitId":"chesterhow"},"content":""},{"lineNumber":18,"author":{"gitId":"chesterhow"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027"},{"lineNumber":19,"author":{"gitId":"chesterhow"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"},{"lineNumber":20,"author":{"gitId":"chesterhow"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"},{"lineNumber":21,"author":{"gitId":"chesterhow"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027"},{"lineNumber":22,"author":{"gitId":"chesterhow"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"},{"lineNumber":23,"author":{"gitId":"chesterhow"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"},{"lineNumber":24,"author":{"gitId":"chesterhow"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027"},{"lineNumber":25,"author":{"gitId":"chesterhow"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"},{"lineNumber":26,"author":{"gitId":"chesterhow"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"},{"lineNumber":27,"author":{"gitId":"chesterhow"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027"},{"lineNumber":28,"author":{"gitId":"chesterhow"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"},{"lineNumber":29,"author":{"gitId":"chesterhow"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"},{"lineNumber":30,"author":{"gitId":"-"},"content":"}"},{"lineNumber":31,"author":{"gitId":"-"},"content":""},{"lineNumber":32,"author":{"gitId":"-"},"content":"test {"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    useJUnitPlatform()"},{"lineNumber":34,"author":{"gitId":"-"},"content":""},{"lineNumber":35,"author":{"gitId":"-"},"content":"    testLogging {"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\""},{"lineNumber":37,"author":{"gitId":"-"},"content":""},{"lineNumber":38,"author":{"gitId":"-"},"content":"        showExceptions true"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\""},{"lineNumber":40,"author":{"gitId":"-"},"content":"        showCauses true"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        showStackTraces true"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":44,"author":{"gitId":"-"},"content":"}"},{"lineNumber":45,"author":{"gitId":"-"},"content":""},{"lineNumber":46,"author":{"gitId":"-"},"content":"application {"},{"lineNumber":47,"author":{"gitId":"chesterhow"},"content":"    mainClassName \u003d \"Launcher\""},{"lineNumber":48,"author":{"gitId":"-"},"content":"}"},{"lineNumber":49,"author":{"gitId":"-"},"content":""},{"lineNumber":50,"author":{"gitId":"-"},"content":"shadowJar {"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    archiveBaseName \u003d \"duke\""},{"lineNumber":52,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null"},{"lineNumber":53,"author":{"gitId":"-"},"content":"}"},{"lineNumber":54,"author":{"gitId":"-"},"content":""},{"lineNumber":55,"author":{"gitId":"-"},"content":"checkstyle {"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    toolVersion \u003d \u00278.29\u0027"},{"lineNumber":57,"author":{"gitId":"-"},"content":"}"},{"lineNumber":58,"author":{"gitId":"-"},"content":""},{"lineNumber":59,"author":{"gitId":"-"},"content":"run{"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in"},{"lineNumber":61,"author":{"gitId":"chesterhow"},"content":"    enableAssertions \u003d true"},{"lineNumber":62,"author":{"gitId":"-"},"content":"}"}],"authorContributionMap":{"-":45,"chesterhow":17}},{"path":"data/duke.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"chesterhow"},"content":"todo |   |   | buy eggs"},{"lineNumber":2,"author":{"gitId":"chesterhow"},"content":"deadline | X | school | submit assignment | 21/02/2021 0600"},{"lineNumber":3,"author":{"gitId":"chesterhow"},"content":"todo | X |   | buy coffee beans"},{"lineNumber":4,"author":{"gitId":"chesterhow"},"content":"event |   |   | dinner party | Botanic Gardens"},{"lineNumber":5,"author":{"gitId":"chesterhow"},"content":"deadline |   |   | reply karen\u0027s email | 21/02/2021 0000"}],"authorContributionMap":{"chesterhow":5}},{"path":"docs/README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"# User Guide"},{"lineNumber":2,"author":{"gitId":"chesterhow"},"content":"Duke is a chatbot that helps manage your to-do list."},{"lineNumber":3,"author":{"gitId":"-"},"content":""},{"lineNumber":4,"author":{"gitId":"-"},"content":"## Features"},{"lineNumber":5,"author":{"gitId":"-"},"content":""},{"lineNumber":6,"author":{"gitId":"chesterhow"},"content":"### `todo [description]`"},{"lineNumber":7,"author":{"gitId":"chesterhow"},"content":"Creates a new todo with given description."},{"lineNumber":8,"author":{"gitId":"-"},"content":""},{"lineNumber":9,"author":{"gitId":"chesterhow"},"content":"Example: `todo buy eggs`"},{"lineNumber":10,"author":{"gitId":"-"},"content":""},{"lineNumber":11,"author":{"gitId":"chesterhow"},"content":"### `deadline [description] /by [date]`"},{"lineNumber":12,"author":{"gitId":"chesterhow"},"content":"Creates a new task with given description and deadline. Dates should be formatted as"},{"lineNumber":13,"author":{"gitId":"chesterhow"},"content":"- `dd/mm/yyyy`"},{"lineNumber":14,"author":{"gitId":"chesterhow"},"content":"- `dd/mm/yyyy hhmm`"},{"lineNumber":15,"author":{"gitId":"-"},"content":""},{"lineNumber":16,"author":{"gitId":"chesterhow"},"content":"Example: `deadline submit assignment /by 21/02/2021`"},{"lineNumber":17,"author":{"gitId":"-"},"content":""},{"lineNumber":18,"author":{"gitId":"chesterhow"},"content":"### `event [description] /at [location]`"},{"lineNumber":19,"author":{"gitId":"chesterhow"},"content":"Creates a new task with given description and location."},{"lineNumber":20,"author":{"gitId":"-"},"content":""},{"lineNumber":21,"author":{"gitId":"chesterhow"},"content":"Example: `event picnic /at Botanic Gardens`"},{"lineNumber":22,"author":{"gitId":"-"},"content":""},{"lineNumber":23,"author":{"gitId":"chesterhow"},"content":"### `list`"},{"lineNumber":24,"author":{"gitId":"chesterhow"},"content":"Lists all tasks currently stored in Duke."},{"lineNumber":25,"author":{"gitId":"-"},"content":""},{"lineNumber":26,"author":{"gitId":"chesterhow"},"content":"Example: `list`"},{"lineNumber":27,"author":{"gitId":"chesterhow"},"content":""},{"lineNumber":28,"author":{"gitId":"chesterhow"},"content":"### `find [keyword]`"},{"lineNumber":29,"author":{"gitId":"chesterhow"},"content":"Search and lists all tasks containing the keyword."},{"lineNumber":30,"author":{"gitId":"chesterhow"},"content":""},{"lineNumber":31,"author":{"gitId":"chesterhow"},"content":"Example: `find assignment`"},{"lineNumber":32,"author":{"gitId":"chesterhow"},"content":""},{"lineNumber":33,"author":{"gitId":"chesterhow"},"content":"### `done [index]`"},{"lineNumber":34,"author":{"gitId":"chesterhow"},"content":"Marks the task with the given index as done."},{"lineNumber":35,"author":{"gitId":"chesterhow"},"content":""},{"lineNumber":36,"author":{"gitId":"chesterhow"},"content":"Example: `done 3`"},{"lineNumber":37,"author":{"gitId":"chesterhow"},"content":""},{"lineNumber":38,"author":{"gitId":"chesterhow"},"content":"### `delete [index]`"},{"lineNumber":39,"author":{"gitId":"chesterhow"},"content":"Deletes the task at the given index."},{"lineNumber":40,"author":{"gitId":"chesterhow"},"content":""},{"lineNumber":41,"author":{"gitId":"chesterhow"},"content":"Example: `delete 3`"},{"lineNumber":42,"author":{"gitId":"chesterhow"},"content":""},{"lineNumber":43,"author":{"gitId":"chesterhow"},"content":"### `tag [index] [tag]`"},{"lineNumber":44,"author":{"gitId":"chesterhow"},"content":"Tags the task at the given index with the specified tag."},{"lineNumber":45,"author":{"gitId":"chesterhow"},"content":""},{"lineNumber":46,"author":{"gitId":"chesterhow"},"content":"Example: `tag 3 school`"},{"lineNumber":47,"author":{"gitId":"chesterhow"},"content":""},{"lineNumber":48,"author":{"gitId":"chesterhow"},"content":"### `bye`"},{"lineNumber":49,"author":{"gitId":"chesterhow"},"content":"Terminates the chatbot session."},{"lineNumber":50,"author":{"gitId":"chesterhow"},"content":""},{"lineNumber":51,"author":{"gitId":"chesterhow"},"content":"Example: `bye`"}],"authorContributionMap":{"-":11,"chesterhow":40}},{"path":"src/main/java/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"chesterhow"},"content":"public class Command {"},{"lineNumber":2,"author":{"gitId":"chesterhow"},"content":"    public static final String BYE \u003d \"bye\";"},{"lineNumber":3,"author":{"gitId":"chesterhow"},"content":"    public static final String LIST \u003d \"list\";"},{"lineNumber":4,"author":{"gitId":"chesterhow"},"content":"    public static final String DONE \u003d \"done\";"},{"lineNumber":5,"author":{"gitId":"chesterhow"},"content":"    public static final String DELETE \u003d \"delete\";"},{"lineNumber":6,"author":{"gitId":"chesterhow"},"content":"    public static final String FIND \u003d \"find\";"},{"lineNumber":7,"author":{"gitId":"chesterhow"},"content":"    public static final String TODO \u003d \"todo\";"},{"lineNumber":8,"author":{"gitId":"chesterhow"},"content":"    public static final String EVENT \u003d \"event\";"},{"lineNumber":9,"author":{"gitId":"chesterhow"},"content":"    public static final String DEADLINE \u003d \"deadline\";"},{"lineNumber":10,"author":{"gitId":"chesterhow"},"content":"    public static final String TAG \u003d \"tag\";"},{"lineNumber":11,"author":{"gitId":"chesterhow"},"content":""},{"lineNumber":12,"author":{"gitId":"chesterhow"},"content":"    protected String instruction;"},{"lineNumber":13,"author":{"gitId":"chesterhow"},"content":"    protected String args;"},{"lineNumber":14,"author":{"gitId":"chesterhow"},"content":"    protected int index;"},{"lineNumber":15,"author":{"gitId":"chesterhow"},"content":""},{"lineNumber":16,"author":{"gitId":"chesterhow"},"content":"    /**"},{"lineNumber":17,"author":{"gitId":"chesterhow"},"content":"     * Constructor for the Bye and List commands."},{"lineNumber":18,"author":{"gitId":"chesterhow"},"content":"     *"},{"lineNumber":19,"author":{"gitId":"chesterhow"},"content":"     * @param instruction String entered by user."},{"lineNumber":20,"author":{"gitId":"chesterhow"},"content":"     */"},{"lineNumber":21,"author":{"gitId":"chesterhow"},"content":"    public Command(String instruction) {"},{"lineNumber":22,"author":{"gitId":"chesterhow"},"content":"        switch (instruction) {"},{"lineNumber":23,"author":{"gitId":"chesterhow"},"content":"        case BYE:"},{"lineNumber":24,"author":{"gitId":"chesterhow"},"content":"        case LIST:"},{"lineNumber":25,"author":{"gitId":"chesterhow"},"content":"            this.instruction \u003d instruction;"},{"lineNumber":26,"author":{"gitId":"chesterhow"},"content":"            break;"},{"lineNumber":27,"author":{"gitId":"chesterhow"},"content":"        case TODO:"},{"lineNumber":28,"author":{"gitId":"chesterhow"},"content":"        case EVENT:"},{"lineNumber":29,"author":{"gitId":"chesterhow"},"content":"        case DEADLINE:"},{"lineNumber":30,"author":{"gitId":"chesterhow"},"content":"            throw new EmptyDescriptionException(instruction);"},{"lineNumber":31,"author":{"gitId":"chesterhow"},"content":"        default:"},{"lineNumber":32,"author":{"gitId":"chesterhow"},"content":"            throw new UnknownCommandException();"},{"lineNumber":33,"author":{"gitId":"chesterhow"},"content":"        }"},{"lineNumber":34,"author":{"gitId":"chesterhow"},"content":"    }"},{"lineNumber":35,"author":{"gitId":"chesterhow"},"content":""},{"lineNumber":36,"author":{"gitId":"chesterhow"},"content":"    /**"},{"lineNumber":37,"author":{"gitId":"chesterhow"},"content":"     * Constructor for the remaining commands."},{"lineNumber":38,"author":{"gitId":"chesterhow"},"content":"     *"},{"lineNumber":39,"author":{"gitId":"chesterhow"},"content":"     * @param instruction First word entered by user."},{"lineNumber":40,"author":{"gitId":"chesterhow"},"content":"     * @param args Subsequent words entered by user."},{"lineNumber":41,"author":{"gitId":"chesterhow"},"content":"     */"},{"lineNumber":42,"author":{"gitId":"chesterhow"},"content":"    public Command(String instruction, String args) {"},{"lineNumber":43,"author":{"gitId":"chesterhow"},"content":"        switch (instruction) {"},{"lineNumber":44,"author":{"gitId":"chesterhow"},"content":"        case DONE:"},{"lineNumber":45,"author":{"gitId":"chesterhow"},"content":"        case DELETE:"},{"lineNumber":46,"author":{"gitId":"chesterhow"},"content":"        case TAG:"},{"lineNumber":47,"author":{"gitId":"chesterhow"},"content":"            String[] parts \u003d args.split(\" \", 2);"},{"lineNumber":48,"author":{"gitId":"chesterhow"},"content":"            try {"},{"lineNumber":49,"author":{"gitId":"chesterhow"},"content":"                this.instruction \u003d instruction;"},{"lineNumber":50,"author":{"gitId":"chesterhow"},"content":"                this.index \u003d Integer.parseInt(parts[0]) - 1;"},{"lineNumber":51,"author":{"gitId":"chesterhow"},"content":"                this.args \u003d parts.length \u003e 1 ? parts[1] : \"\";"},{"lineNumber":52,"author":{"gitId":"chesterhow"},"content":"            } catch (NumberFormatException e) {"},{"lineNumber":53,"author":{"gitId":"chesterhow"},"content":"                throw new NumberFormatException();"},{"lineNumber":54,"author":{"gitId":"chesterhow"},"content":"            }"},{"lineNumber":55,"author":{"gitId":"chesterhow"},"content":"            break;"},{"lineNumber":56,"author":{"gitId":"chesterhow"},"content":"        case FIND:"},{"lineNumber":57,"author":{"gitId":"chesterhow"},"content":"        case TODO:"},{"lineNumber":58,"author":{"gitId":"chesterhow"},"content":"        case EVENT:"},{"lineNumber":59,"author":{"gitId":"chesterhow"},"content":"        case DEADLINE:"},{"lineNumber":60,"author":{"gitId":"chesterhow"},"content":"            this.instruction \u003d instruction;"},{"lineNumber":61,"author":{"gitId":"chesterhow"},"content":"            this.args \u003d args;"},{"lineNumber":62,"author":{"gitId":"chesterhow"},"content":"            this.index \u003d -1;"},{"lineNumber":63,"author":{"gitId":"chesterhow"},"content":"            break;"},{"lineNumber":64,"author":{"gitId":"chesterhow"},"content":"        default:"},{"lineNumber":65,"author":{"gitId":"chesterhow"},"content":"            throw new UnknownCommandException();"},{"lineNumber":66,"author":{"gitId":"chesterhow"},"content":"        }"},{"lineNumber":67,"author":{"gitId":"chesterhow"},"content":"    }"},{"lineNumber":68,"author":{"gitId":"chesterhow"},"content":""},{"lineNumber":69,"author":{"gitId":"chesterhow"},"content":"    /**"},{"lineNumber":70,"author":{"gitId":"chesterhow"},"content":"     * Returns the command\u0027s instruction"},{"lineNumber":71,"author":{"gitId":"chesterhow"},"content":"     *"},{"lineNumber":72,"author":{"gitId":"chesterhow"},"content":"     * @return instruction"},{"lineNumber":73,"author":{"gitId":"chesterhow"},"content":"     */"},{"lineNumber":74,"author":{"gitId":"chesterhow"},"content":"    public String getInstruction() {"},{"lineNumber":75,"author":{"gitId":"chesterhow"},"content":"        return this.instruction;"},{"lineNumber":76,"author":{"gitId":"chesterhow"},"content":"    }"},{"lineNumber":77,"author":{"gitId":"chesterhow"},"content":""},{"lineNumber":78,"author":{"gitId":"chesterhow"},"content":"    /**"},{"lineNumber":79,"author":{"gitId":"chesterhow"},"content":"     * Return the command\u0027s arguments"},{"lineNumber":80,"author":{"gitId":"chesterhow"},"content":"     *"},{"lineNumber":81,"author":{"gitId":"chesterhow"},"content":"     * @return arguments"},{"lineNumber":82,"author":{"gitId":"chesterhow"},"content":"     */"},{"lineNumber":83,"author":{"gitId":"chesterhow"},"content":"    public String getArgs() {"},{"lineNumber":84,"author":{"gitId":"chesterhow"},"content":"        return this.args;"},{"lineNumber":85,"author":{"gitId":"chesterhow"},"content":"    }"},{"lineNumber":86,"author":{"gitId":"chesterhow"},"content":""},{"lineNumber":87,"author":{"gitId":"chesterhow"},"content":"    public int getIndex() {"},{"lineNumber":88,"author":{"gitId":"chesterhow"},"content":"        return this.index;"},{"lineNumber":89,"author":{"gitId":"chesterhow"},"content":"    }"},{"lineNumber":90,"author":{"gitId":"chesterhow"},"content":"}"}],"authorContributionMap":{"chesterhow":90}},{"path":"src/main/java/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"chesterhow"},"content":"import java.time.LocalDateTime;"},{"lineNumber":2,"author":{"gitId":"chesterhow"},"content":"import java.time.format.DateTimeFormatter;"},{"lineNumber":3,"author":{"gitId":"chesterhow"},"content":"import java.time.format.DateTimeFormatterBuilder;"},{"lineNumber":4,"author":{"gitId":"chesterhow"},"content":"import java.time.format.DateTimeParseException;"},{"lineNumber":5,"author":{"gitId":"chesterhow"},"content":"import java.time.temporal.ChronoField;"},{"lineNumber":6,"author":{"gitId":"chesterhow"},"content":""},{"lineNumber":7,"author":{"gitId":"chesterhow"},"content":"public class Deadline extends Task {"},{"lineNumber":8,"author":{"gitId":"chesterhow"},"content":"    private static final String DATE_FORMAT \u003d \"dd/MM/yyyy\";"},{"lineNumber":9,"author":{"gitId":"chesterhow"},"content":"    private static final String TIME_FORMAT \u003d \"[ HHmm]\";"},{"lineNumber":10,"author":{"gitId":"chesterhow"},"content":"    private static final DateTimeFormatter BY_FORMATTER \u003d new DateTimeFormatterBuilder()"},{"lineNumber":11,"author":{"gitId":"chesterhow"},"content":"            .appendPattern(DATE_FORMAT)"},{"lineNumber":12,"author":{"gitId":"chesterhow"},"content":"            .appendPattern(TIME_FORMAT)"},{"lineNumber":13,"author":{"gitId":"chesterhow"},"content":"            .parseDefaulting(ChronoField.HOUR_OF_DAY, 0)"},{"lineNumber":14,"author":{"gitId":"chesterhow"},"content":"            .parseDefaulting(ChronoField.MINUTE_OF_HOUR, 0)"},{"lineNumber":15,"author":{"gitId":"chesterhow"},"content":"            .toFormatter();"},{"lineNumber":16,"author":{"gitId":"chesterhow"},"content":"    private static final DateTimeFormatter DATE_FORMATTER \u003d DateTimeFormatter.ofPattern(\"dd MMM yyyy\");"},{"lineNumber":17,"author":{"gitId":"chesterhow"},"content":"    private static final DateTimeFormatter DATETIME_FORMATTER \u003d DateTimeFormatter.ofPattern(\"dd MMM yyyy HHmm\");"},{"lineNumber":18,"author":{"gitId":"chesterhow"},"content":""},{"lineNumber":19,"author":{"gitId":"chesterhow"},"content":"    protected LocalDateTime by;"},{"lineNumber":20,"author":{"gitId":"chesterhow"},"content":"    private final boolean hasTime;"},{"lineNumber":21,"author":{"gitId":"chesterhow"},"content":""},{"lineNumber":22,"author":{"gitId":"chesterhow"},"content":"    /**"},{"lineNumber":23,"author":{"gitId":"chesterhow"},"content":"     * Constructor for the Deadline class."},{"lineNumber":24,"author":{"gitId":"chesterhow"},"content":"     *"},{"lineNumber":25,"author":{"gitId":"chesterhow"},"content":"     * @param description Description of the Deadline task."},{"lineNumber":26,"author":{"gitId":"chesterhow"},"content":"     * @param by Due date of the Deadline task."},{"lineNumber":27,"author":{"gitId":"chesterhow"},"content":"     * @throws DateTimeParseException If an invalid \"by\" date is provided."},{"lineNumber":28,"author":{"gitId":"chesterhow"},"content":"     */"},{"lineNumber":29,"author":{"gitId":"chesterhow"},"content":"    public Deadline(String description, String by) throws DateTimeParseException {"},{"lineNumber":30,"author":{"gitId":"chesterhow"},"content":"        super(description);"},{"lineNumber":31,"author":{"gitId":"chesterhow"},"content":"        this.by \u003d LocalDateTime.parse(by.trim(), BY_FORMATTER);"},{"lineNumber":32,"author":{"gitId":"chesterhow"},"content":"        this.hasTime \u003d (by.trim().length() \u003e DATE_FORMAT.length());"},{"lineNumber":33,"author":{"gitId":"chesterhow"},"content":"    }"},{"lineNumber":34,"author":{"gitId":"chesterhow"},"content":""},{"lineNumber":35,"author":{"gitId":"chesterhow"},"content":"    /**"},{"lineNumber":36,"author":{"gitId":"chesterhow"},"content":"     * Constructor for the Deadline class."},{"lineNumber":37,"author":{"gitId":"chesterhow"},"content":"     *"},{"lineNumber":38,"author":{"gitId":"chesterhow"},"content":"     * @param description Description of the Deadline task."},{"lineNumber":39,"author":{"gitId":"chesterhow"},"content":"     * @param by Due date of the Deadline task."},{"lineNumber":40,"author":{"gitId":"chesterhow"},"content":"     * @param tags String of tags."},{"lineNumber":41,"author":{"gitId":"chesterhow"},"content":"     * @throws DateTimeParseException If an invalid \"by\" date is provided."},{"lineNumber":42,"author":{"gitId":"chesterhow"},"content":"     */"},{"lineNumber":43,"author":{"gitId":"chesterhow"},"content":"    public Deadline(String description, String by, String tags) throws DateTimeParseException {"},{"lineNumber":44,"author":{"gitId":"chesterhow"},"content":"        super(description, tags);"},{"lineNumber":45,"author":{"gitId":"chesterhow"},"content":"        this.by \u003d LocalDateTime.parse(by.trim(), BY_FORMATTER);"},{"lineNumber":46,"author":{"gitId":"chesterhow"},"content":"        this.hasTime \u003d (by.trim().length() \u003e DATE_FORMAT.length());"},{"lineNumber":47,"author":{"gitId":"chesterhow"},"content":"    }"},{"lineNumber":48,"author":{"gitId":"chesterhow"},"content":""},{"lineNumber":49,"author":{"gitId":"chesterhow"},"content":"    @Override"},{"lineNumber":50,"author":{"gitId":"chesterhow"},"content":"    public String toFileString() {"},{"lineNumber":51,"author":{"gitId":"chesterhow"},"content":"        return String.format(\"%s | %s | %s\\n\", Command.DEADLINE, super.toFileString(), this.by.format(BY_FORMATTER));"},{"lineNumber":52,"author":{"gitId":"chesterhow"},"content":"    }"},{"lineNumber":53,"author":{"gitId":"chesterhow"},"content":""},{"lineNumber":54,"author":{"gitId":"chesterhow"},"content":"    @Override"},{"lineNumber":55,"author":{"gitId":"chesterhow"},"content":"    public String toString() {"},{"lineNumber":56,"author":{"gitId":"chesterhow"},"content":"        DateTimeFormatter formatter \u003d this.hasTime ? DATETIME_FORMATTER : DATE_FORMATTER;"},{"lineNumber":57,"author":{"gitId":"chesterhow"},"content":"        return String.format(\"[D]%s (by: %s)%s\","},{"lineNumber":58,"author":{"gitId":"chesterhow"},"content":"                super.toStringWithoutTags(), this.by.format(formatter), super.getTagsString());"},{"lineNumber":59,"author":{"gitId":"chesterhow"},"content":"    }"},{"lineNumber":60,"author":{"gitId":"chesterhow"},"content":"}"}],"authorContributionMap":{"chesterhow":60}},{"path":"src/main/java/DialogBox.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"chesterhow"},"content":"import java.io.IOException;"},{"lineNumber":2,"author":{"gitId":"chesterhow"},"content":"import java.util.Collections;"},{"lineNumber":3,"author":{"gitId":"chesterhow"},"content":""},{"lineNumber":4,"author":{"gitId":"chesterhow"},"content":"import javafx.collections.FXCollections;"},{"lineNumber":5,"author":{"gitId":"chesterhow"},"content":"import javafx.collections.ObservableList;"},{"lineNumber":6,"author":{"gitId":"chesterhow"},"content":"import javafx.fxml.FXML;"},{"lineNumber":7,"author":{"gitId":"chesterhow"},"content":"import javafx.fxml.FXMLLoader;"},{"lineNumber":8,"author":{"gitId":"chesterhow"},"content":"import javafx.geometry.Pos;"},{"lineNumber":9,"author":{"gitId":"chesterhow"},"content":"import javafx.scene.Node;"},{"lineNumber":10,"author":{"gitId":"chesterhow"},"content":"import javafx.scene.image.Image;"},{"lineNumber":11,"author":{"gitId":"chesterhow"},"content":"import javafx.scene.layout.HBox;"},{"lineNumber":12,"author":{"gitId":"chesterhow"},"content":"import javafx.scene.paint.ImagePattern;"},{"lineNumber":13,"author":{"gitId":"chesterhow"},"content":"import javafx.scene.shape.Circle;"},{"lineNumber":14,"author":{"gitId":"chesterhow"},"content":"import javafx.scene.text.Text;"},{"lineNumber":15,"author":{"gitId":"chesterhow"},"content":""},{"lineNumber":16,"author":{"gitId":"chesterhow"},"content":"/**"},{"lineNumber":17,"author":{"gitId":"chesterhow"},"content":" * This control represents a dialog box consisting of an ImageView to represent the speaker\u0027s face and a label"},{"lineNumber":18,"author":{"gitId":"chesterhow"},"content":" * containing text from the speaker."},{"lineNumber":19,"author":{"gitId":"chesterhow"},"content":" */"},{"lineNumber":20,"author":{"gitId":"chesterhow"},"content":"public class DialogBox extends HBox {"},{"lineNumber":21,"author":{"gitId":"chesterhow"},"content":"    @FXML"},{"lineNumber":22,"author":{"gitId":"chesterhow"},"content":"    private Text dialog;"},{"lineNumber":23,"author":{"gitId":"chesterhow"},"content":"    @FXML"},{"lineNumber":24,"author":{"gitId":"chesterhow"},"content":"    private Circle imageCircle;"},{"lineNumber":25,"author":{"gitId":"chesterhow"},"content":""},{"lineNumber":26,"author":{"gitId":"chesterhow"},"content":"    private DialogBox(String text, Image img) {"},{"lineNumber":27,"author":{"gitId":"chesterhow"},"content":"        try {"},{"lineNumber":28,"author":{"gitId":"chesterhow"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(\"/view/DialogBox.fxml\"));"},{"lineNumber":29,"author":{"gitId":"chesterhow"},"content":"            fxmlLoader.setController(this);"},{"lineNumber":30,"author":{"gitId":"chesterhow"},"content":"            fxmlLoader.setRoot(this);"},{"lineNumber":31,"author":{"gitId":"chesterhow"},"content":"            fxmlLoader.load();"},{"lineNumber":32,"author":{"gitId":"chesterhow"},"content":"        } catch (IOException e) {"},{"lineNumber":33,"author":{"gitId":"chesterhow"},"content":"            e.printStackTrace();"},{"lineNumber":34,"author":{"gitId":"chesterhow"},"content":"        }"},{"lineNumber":35,"author":{"gitId":"chesterhow"},"content":""},{"lineNumber":36,"author":{"gitId":"chesterhow"},"content":"        dialog.setText(text);"},{"lineNumber":37,"author":{"gitId":"chesterhow"},"content":"        imageCircle.setFill(new ImagePattern(img));"},{"lineNumber":38,"author":{"gitId":"chesterhow"},"content":"    }"},{"lineNumber":39,"author":{"gitId":"chesterhow"},"content":""},{"lineNumber":40,"author":{"gitId":"chesterhow"},"content":"    /**"},{"lineNumber":41,"author":{"gitId":"chesterhow"},"content":"     * Flips the dialog box such that the ImageView is on the left and text on the right."},{"lineNumber":42,"author":{"gitId":"chesterhow"},"content":"     */"},{"lineNumber":43,"author":{"gitId":"chesterhow"},"content":"    private void flip() {"},{"lineNumber":44,"author":{"gitId":"chesterhow"},"content":"        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());"},{"lineNumber":45,"author":{"gitId":"chesterhow"},"content":"        Collections.reverse(tmp);"},{"lineNumber":46,"author":{"gitId":"chesterhow"},"content":"        getChildren().setAll(tmp);"},{"lineNumber":47,"author":{"gitId":"chesterhow"},"content":"        setAlignment(Pos.TOP_LEFT);"},{"lineNumber":48,"author":{"gitId":"chesterhow"},"content":"    }"},{"lineNumber":49,"author":{"gitId":"chesterhow"},"content":""},{"lineNumber":50,"author":{"gitId":"chesterhow"},"content":"    public static DialogBox getUserDialog(String text, Image img) {"},{"lineNumber":51,"author":{"gitId":"chesterhow"},"content":"        return new DialogBox(text, img);"},{"lineNumber":52,"author":{"gitId":"chesterhow"},"content":"    }"},{"lineNumber":53,"author":{"gitId":"chesterhow"},"content":""},{"lineNumber":54,"author":{"gitId":"chesterhow"},"content":"    public static DialogBox getDukeDialog(String text, Image img) {"},{"lineNumber":55,"author":{"gitId":"chesterhow"},"content":"        var db \u003d new DialogBox(text, img);"},{"lineNumber":56,"author":{"gitId":"chesterhow"},"content":"        db.flip();"},{"lineNumber":57,"author":{"gitId":"chesterhow"},"content":"        return db;"},{"lineNumber":58,"author":{"gitId":"chesterhow"},"content":"    }"},{"lineNumber":59,"author":{"gitId":"chesterhow"},"content":"}"}],"authorContributionMap":{"chesterhow":59}},{"path":"src/main/java/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"chesterhow"},"content":"import java.io.IOException;"},{"lineNumber":2,"author":{"gitId":"chesterhow"},"content":"import java.time.format.DateTimeParseException;"},{"lineNumber":3,"author":{"gitId":"chesterhow"},"content":""},{"lineNumber":4,"author":{"gitId":"-"},"content":"public class Duke {"},{"lineNumber":5,"author":{"gitId":"chesterhow"},"content":"    private static final String DIR_NAME \u003d \"data\";"},{"lineNumber":6,"author":{"gitId":"chesterhow"},"content":"    private static final String FILE_NAME \u003d \"duke.txt\";"},{"lineNumber":7,"author":{"gitId":"chesterhow"},"content":""},{"lineNumber":8,"author":{"gitId":"chesterhow"},"content":"    private final Storage storage;"},{"lineNumber":9,"author":{"gitId":"chesterhow"},"content":"    private final TaskList tasks;"},{"lineNumber":10,"author":{"gitId":"chesterhow"},"content":""},{"lineNumber":11,"author":{"gitId":"chesterhow"},"content":"    /**"},{"lineNumber":12,"author":{"gitId":"chesterhow"},"content":"     * Constructor for the Duke class."},{"lineNumber":13,"author":{"gitId":"chesterhow"},"content":"     */"},{"lineNumber":14,"author":{"gitId":"chesterhow"},"content":"    public Duke() {"},{"lineNumber":15,"author":{"gitId":"chesterhow"},"content":"        tasks \u003d new TaskList();"},{"lineNumber":16,"author":{"gitId":"chesterhow"},"content":"        storage \u003d new Storage(DIR_NAME, FILE_NAME);"},{"lineNumber":17,"author":{"gitId":"chesterhow"},"content":""},{"lineNumber":18,"author":{"gitId":"chesterhow"},"content":"        try {"},{"lineNumber":19,"author":{"gitId":"chesterhow"},"content":"            storage.readFromFile(tasks);"},{"lineNumber":20,"author":{"gitId":"chesterhow"},"content":"        } catch (IOException e) {"},{"lineNumber":21,"author":{"gitId":"chesterhow"},"content":"            e.printStackTrace();"},{"lineNumber":22,"author":{"gitId":"chesterhow"},"content":"        }"},{"lineNumber":23,"author":{"gitId":"chesterhow"},"content":"    }"},{"lineNumber":24,"author":{"gitId":"chesterhow"},"content":""},{"lineNumber":25,"author":{"gitId":"chesterhow"},"content":"    /**"},{"lineNumber":26,"author":{"gitId":"chesterhow"},"content":"     * Adds a new Todo to the TaskList and returns the reply."},{"lineNumber":27,"author":{"gitId":"chesterhow"},"content":"     *"},{"lineNumber":28,"author":{"gitId":"chesterhow"},"content":"     * @param command Command with details about the Todo to be created."},{"lineNumber":29,"author":{"gitId":"chesterhow"},"content":"     * @return Reply to the Todo command."},{"lineNumber":30,"author":{"gitId":"chesterhow"},"content":"     * @throws IOException If an error occurs while writing to the file."},{"lineNumber":31,"author":{"gitId":"chesterhow"},"content":"     */"},{"lineNumber":32,"author":{"gitId":"chesterhow"},"content":"    public String addTodo(Command command) throws IOException {"},{"lineNumber":33,"author":{"gitId":"chesterhow"},"content":"        assert command !\u003d null : \"Command should be defined\";"},{"lineNumber":34,"author":{"gitId":"chesterhow"},"content":"        Task todo \u003d new Todo(command.getArgs());"},{"lineNumber":35,"author":{"gitId":"chesterhow"},"content":"        tasks.add(todo);"},{"lineNumber":36,"author":{"gitId":"chesterhow"},"content":"        storage.writeToFile(todo);"},{"lineNumber":37,"author":{"gitId":"chesterhow"},"content":"        return Ui.addedTaskReply(todo, tasks.size());"},{"lineNumber":38,"author":{"gitId":"chesterhow"},"content":"    }"},{"lineNumber":39,"author":{"gitId":"chesterhow"},"content":""},{"lineNumber":40,"author":{"gitId":"chesterhow"},"content":"    /**"},{"lineNumber":41,"author":{"gitId":"chesterhow"},"content":"     * Adds a new Deadline to the TaskList and returns the reply."},{"lineNumber":42,"author":{"gitId":"chesterhow"},"content":"     *"},{"lineNumber":43,"author":{"gitId":"chesterhow"},"content":"     * @param command Command with details about the Deadline to be created."},{"lineNumber":44,"author":{"gitId":"chesterhow"},"content":"     * @return Reply to the Deadline command."},{"lineNumber":45,"author":{"gitId":"chesterhow"},"content":"     * @throws IOException If an error occurs while writing to the file."},{"lineNumber":46,"author":{"gitId":"chesterhow"},"content":"     * @throws DateTimeParseException If date provided is not of the \"dd/mm/yyyy hhmm\" or \"dd/mm/yyyy\" format."},{"lineNumber":47,"author":{"gitId":"chesterhow"},"content":"     */"},{"lineNumber":48,"author":{"gitId":"chesterhow"},"content":"    public String addDeadline(Command command) throws IOException, DateTimeParseException {"},{"lineNumber":49,"author":{"gitId":"chesterhow"},"content":"        assert command !\u003d null : \"Command should be defined\";"},{"lineNumber":50,"author":{"gitId":"chesterhow"},"content":"        String[] parts \u003d command.getArgs().split(\"/by\");"},{"lineNumber":51,"author":{"gitId":"chesterhow"},"content":""},{"lineNumber":52,"author":{"gitId":"chesterhow"},"content":"        if (parts.length !\u003d 2) {"},{"lineNumber":53,"author":{"gitId":"chesterhow"},"content":"            throw new InvalidTaskException(command.getInstruction());"},{"lineNumber":54,"author":{"gitId":"chesterhow"},"content":"        }"},{"lineNumber":55,"author":{"gitId":"chesterhow"},"content":""},{"lineNumber":56,"author":{"gitId":"chesterhow"},"content":"        Task deadline \u003d new Deadline(parts[0], parts[1]);"},{"lineNumber":57,"author":{"gitId":"chesterhow"},"content":"        tasks.add(deadline);"},{"lineNumber":58,"author":{"gitId":"chesterhow"},"content":"        storage.writeToFile(deadline);"},{"lineNumber":59,"author":{"gitId":"chesterhow"},"content":"        return Ui.addedTaskReply(deadline, tasks.size());"},{"lineNumber":60,"author":{"gitId":"chesterhow"},"content":"    }"},{"lineNumber":61,"author":{"gitId":"chesterhow"},"content":""},{"lineNumber":62,"author":{"gitId":"chesterhow"},"content":"    /**"},{"lineNumber":63,"author":{"gitId":"chesterhow"},"content":"     * Adds a new Event to the TaskList and returns the reply."},{"lineNumber":64,"author":{"gitId":"chesterhow"},"content":"     *"},{"lineNumber":65,"author":{"gitId":"chesterhow"},"content":"     * @param command Command with details about the Event to be created."},{"lineNumber":66,"author":{"gitId":"chesterhow"},"content":"     * @return Reply to the Event command."},{"lineNumber":67,"author":{"gitId":"chesterhow"},"content":"     * @throws IOException If an error occurs while writing to the file."},{"lineNumber":68,"author":{"gitId":"chesterhow"},"content":"     */"},{"lineNumber":69,"author":{"gitId":"chesterhow"},"content":"    public String addEvent(Command command) throws IOException {"},{"lineNumber":70,"author":{"gitId":"chesterhow"},"content":"        assert command !\u003d null : \"Command should be defined\";"},{"lineNumber":71,"author":{"gitId":"chesterhow"},"content":"        String[] parts \u003d command.getArgs().split(\"/at\");"},{"lineNumber":72,"author":{"gitId":"chesterhow"},"content":""},{"lineNumber":73,"author":{"gitId":"chesterhow"},"content":"        if (parts.length !\u003d 2) {"},{"lineNumber":74,"author":{"gitId":"chesterhow"},"content":"            throw new InvalidTaskException(command.getInstruction());"},{"lineNumber":75,"author":{"gitId":"chesterhow"},"content":"        }"},{"lineNumber":76,"author":{"gitId":"chesterhow"},"content":""},{"lineNumber":77,"author":{"gitId":"chesterhow"},"content":"        Task event \u003d new Event(parts[0], parts[1]);"},{"lineNumber":78,"author":{"gitId":"chesterhow"},"content":"        tasks.add(event);"},{"lineNumber":79,"author":{"gitId":"chesterhow"},"content":"        storage.writeToFile(event);"},{"lineNumber":80,"author":{"gitId":"chesterhow"},"content":"        return Ui.addedTaskReply(event, tasks.size());"},{"lineNumber":81,"author":{"gitId":"chesterhow"},"content":"    }"},{"lineNumber":82,"author":{"gitId":"chesterhow"},"content":""},{"lineNumber":83,"author":{"gitId":"chesterhow"},"content":"    /**"},{"lineNumber":84,"author":{"gitId":"chesterhow"},"content":"     * Marks a task as done and returns the reply."},{"lineNumber":85,"author":{"gitId":"chesterhow"},"content":"     *"},{"lineNumber":86,"author":{"gitId":"chesterhow"},"content":"     * @param command Command containing the index of the task to mark as done."},{"lineNumber":87,"author":{"gitId":"chesterhow"},"content":"     * @return Reply to having marked a task as done."},{"lineNumber":88,"author":{"gitId":"chesterhow"},"content":"     * @throws IOException If an error occurs while writing to the file."},{"lineNumber":89,"author":{"gitId":"chesterhow"},"content":"     */"},{"lineNumber":90,"author":{"gitId":"chesterhow"},"content":"    public String done(Command command) throws IOException {"},{"lineNumber":91,"author":{"gitId":"chesterhow"},"content":"        assert command !\u003d null : \"Command should be defined\";"},{"lineNumber":92,"author":{"gitId":"chesterhow"},"content":"        int index \u003d command.getIndex();"},{"lineNumber":93,"author":{"gitId":"chesterhow"},"content":""},{"lineNumber":94,"author":{"gitId":"chesterhow"},"content":"        if (index \u003c 0 || index \u003e\u003d tasks.size()) {"},{"lineNumber":95,"author":{"gitId":"chesterhow"},"content":"            throw new TaskNotFoundException();"},{"lineNumber":96,"author":{"gitId":"chesterhow"},"content":"        }"},{"lineNumber":97,"author":{"gitId":"chesterhow"},"content":""},{"lineNumber":98,"author":{"gitId":"chesterhow"},"content":"        tasks.getTaskAt(index).markDone();"},{"lineNumber":99,"author":{"gitId":"chesterhow"},"content":"        storage.updateFile(tasks);"},{"lineNumber":100,"author":{"gitId":"chesterhow"},"content":"        return Ui.markDoneReply(tasks.getTaskAt(index));"},{"lineNumber":101,"author":{"gitId":"chesterhow"},"content":"    }"},{"lineNumber":102,"author":{"gitId":"chesterhow"},"content":""},{"lineNumber":103,"author":{"gitId":"chesterhow"},"content":"    /**"},{"lineNumber":104,"author":{"gitId":"chesterhow"},"content":"     * Deletes a task and returns the reply."},{"lineNumber":105,"author":{"gitId":"chesterhow"},"content":"     *"},{"lineNumber":106,"author":{"gitId":"chesterhow"},"content":"     * @param command Command containing the index of the task to delete."},{"lineNumber":107,"author":{"gitId":"chesterhow"},"content":"     * @return Reply to having deleted a task."},{"lineNumber":108,"author":{"gitId":"chesterhow"},"content":"     * @throws IOException If an error occurs while writing to the file."},{"lineNumber":109,"author":{"gitId":"chesterhow"},"content":"     */"},{"lineNumber":110,"author":{"gitId":"chesterhow"},"content":"    public String delete(Command command) throws IOException {"},{"lineNumber":111,"author":{"gitId":"chesterhow"},"content":"        assert command !\u003d null : \"Command should be defined\";"},{"lineNumber":112,"author":{"gitId":"chesterhow"},"content":"        int index \u003d command.getIndex();"},{"lineNumber":113,"author":{"gitId":"chesterhow"},"content":""},{"lineNumber":114,"author":{"gitId":"chesterhow"},"content":"        if (index \u003c 0 || index \u003e\u003d tasks.size()) {"},{"lineNumber":115,"author":{"gitId":"chesterhow"},"content":"            throw new TaskNotFoundException();"},{"lineNumber":116,"author":{"gitId":"chesterhow"},"content":"        }"},{"lineNumber":117,"author":{"gitId":"chesterhow"},"content":""},{"lineNumber":118,"author":{"gitId":"chesterhow"},"content":"        Task deletedTask \u003d tasks.remove(index);"},{"lineNumber":119,"author":{"gitId":"chesterhow"},"content":"        storage.updateFile(tasks);"},{"lineNumber":120,"author":{"gitId":"chesterhow"},"content":"        return Ui.deleteReply(deletedTask, tasks.size());"},{"lineNumber":121,"author":{"gitId":"chesterhow"},"content":"    }"},{"lineNumber":122,"author":{"gitId":"chesterhow"},"content":""},{"lineNumber":123,"author":{"gitId":"chesterhow"},"content":"    /**"},{"lineNumber":124,"author":{"gitId":"chesterhow"},"content":"     * Finds and returns a list of tasks matching the given keyword"},{"lineNumber":125,"author":{"gitId":"chesterhow"},"content":"     *"},{"lineNumber":126,"author":{"gitId":"chesterhow"},"content":"     * @param command Command containing the keyword to search for."},{"lineNumber":127,"author":{"gitId":"chesterhow"},"content":"     * @return Reply to find command."},{"lineNumber":128,"author":{"gitId":"chesterhow"},"content":"     */"},{"lineNumber":129,"author":{"gitId":"chesterhow"},"content":"    public String find(Command command) {"},{"lineNumber":130,"author":{"gitId":"chesterhow"},"content":"        assert command !\u003d null : \"Command should be defined\";"},{"lineNumber":131,"author":{"gitId":"chesterhow"},"content":"        String keyword \u003d command.getArgs();"},{"lineNumber":132,"author":{"gitId":"chesterhow"},"content":""},{"lineNumber":133,"author":{"gitId":"chesterhow"},"content":"        TaskList matchingTasks \u003d tasks.findMatchingTasks(keyword);"},{"lineNumber":134,"author":{"gitId":"chesterhow"},"content":"        return Ui.listMatchingTasks(matchingTasks);"},{"lineNumber":135,"author":{"gitId":"chesterhow"},"content":"    }"},{"lineNumber":136,"author":{"gitId":"chesterhow"},"content":""},{"lineNumber":137,"author":{"gitId":"chesterhow"},"content":"    /**"},{"lineNumber":138,"author":{"gitId":"chesterhow"},"content":"     * Adds a tag to a task and returns the reply."},{"lineNumber":139,"author":{"gitId":"chesterhow"},"content":"     *"},{"lineNumber":140,"author":{"gitId":"chesterhow"},"content":"     * @param command Command containing the task to tag, and the tag to add."},{"lineNumber":141,"author":{"gitId":"chesterhow"},"content":"     * @return Reply to tag command."},{"lineNumber":142,"author":{"gitId":"chesterhow"},"content":"     * @throws IOException If an error occurs while writing to the file."},{"lineNumber":143,"author":{"gitId":"chesterhow"},"content":"     */"},{"lineNumber":144,"author":{"gitId":"chesterhow"},"content":"    public String tagTask(Command command) throws IOException {"},{"lineNumber":145,"author":{"gitId":"chesterhow"},"content":"        assert command !\u003d null : \"Command should be defined\";"},{"lineNumber":146,"author":{"gitId":"chesterhow"},"content":"        int index \u003d command.getIndex();"},{"lineNumber":147,"author":{"gitId":"chesterhow"},"content":""},{"lineNumber":148,"author":{"gitId":"chesterhow"},"content":"        if (index \u003c 0 || index \u003e\u003d tasks.size()) {"},{"lineNumber":149,"author":{"gitId":"chesterhow"},"content":"            throw new TaskNotFoundException();"},{"lineNumber":150,"author":{"gitId":"chesterhow"},"content":"        }"},{"lineNumber":151,"author":{"gitId":"chesterhow"},"content":""},{"lineNumber":152,"author":{"gitId":"chesterhow"},"content":"        Task taskToTag \u003d tasks.getTaskAt(index);"},{"lineNumber":153,"author":{"gitId":"chesterhow"},"content":"        taskToTag.addTag(command.getArgs());"},{"lineNumber":154,"author":{"gitId":"chesterhow"},"content":"        storage.updateFile(tasks);"},{"lineNumber":155,"author":{"gitId":"chesterhow"},"content":"        return Ui.tagTaskReply(taskToTag, command.getArgs());"},{"lineNumber":156,"author":{"gitId":"chesterhow"},"content":"    }"},{"lineNumber":157,"author":{"gitId":"chesterhow"},"content":""},{"lineNumber":158,"author":{"gitId":"chesterhow"},"content":"    /**"},{"lineNumber":159,"author":{"gitId":"chesterhow"},"content":"     * Processes user\u0027s input and executes the respective command"},{"lineNumber":160,"author":{"gitId":"chesterhow"},"content":"     *"},{"lineNumber":161,"author":{"gitId":"chesterhow"},"content":"     * @param input User\u0027s input string"},{"lineNumber":162,"author":{"gitId":"chesterhow"},"content":"     * @return False if the program should terminate, else true."},{"lineNumber":163,"author":{"gitId":"chesterhow"},"content":"     */"},{"lineNumber":164,"author":{"gitId":"chesterhow"},"content":"    public String parseInputAndReply(String input) {"},{"lineNumber":165,"author":{"gitId":"chesterhow"},"content":"        try {"},{"lineNumber":166,"author":{"gitId":"chesterhow"},"content":"            Command command \u003d Parser.parseInput(input.trim());"},{"lineNumber":167,"author":{"gitId":"chesterhow"},"content":""},{"lineNumber":168,"author":{"gitId":"chesterhow"},"content":"            switch (command.getInstruction()) {"},{"lineNumber":169,"author":{"gitId":"chesterhow"},"content":"            case Command.BYE:"},{"lineNumber":170,"author":{"gitId":"chesterhow"},"content":"                return Ui.exit();"},{"lineNumber":171,"author":{"gitId":"chesterhow"},"content":"            case Command.LIST:"},{"lineNumber":172,"author":{"gitId":"chesterhow"},"content":"                return Ui.list(tasks);"},{"lineNumber":173,"author":{"gitId":"chesterhow"},"content":"            case Command.DONE:"},{"lineNumber":174,"author":{"gitId":"chesterhow"},"content":"                return done(command);"},{"lineNumber":175,"author":{"gitId":"chesterhow"},"content":"            case Command.DELETE:"},{"lineNumber":176,"author":{"gitId":"chesterhow"},"content":"                return delete(command);"},{"lineNumber":177,"author":{"gitId":"chesterhow"},"content":"            case Command.FIND:"},{"lineNumber":178,"author":{"gitId":"chesterhow"},"content":"                return find(command);"},{"lineNumber":179,"author":{"gitId":"chesterhow"},"content":"            case Command.TODO:"},{"lineNumber":180,"author":{"gitId":"chesterhow"},"content":"                return addTodo(command);"},{"lineNumber":181,"author":{"gitId":"chesterhow"},"content":"            case Command.EVENT:"},{"lineNumber":182,"author":{"gitId":"chesterhow"},"content":"                return addEvent(command);"},{"lineNumber":183,"author":{"gitId":"chesterhow"},"content":"            case Command.DEADLINE:"},{"lineNumber":184,"author":{"gitId":"chesterhow"},"content":"                return addDeadline(command);"},{"lineNumber":185,"author":{"gitId":"chesterhow"},"content":"            case Command.TAG:"},{"lineNumber":186,"author":{"gitId":"chesterhow"},"content":"                return tagTask(command);"},{"lineNumber":187,"author":{"gitId":"chesterhow"},"content":"            default:"},{"lineNumber":188,"author":{"gitId":"chesterhow"},"content":"                throw new UnknownCommandException();"},{"lineNumber":189,"author":{"gitId":"chesterhow"},"content":"            }"},{"lineNumber":190,"author":{"gitId":"chesterhow"},"content":"        } catch (UnknownCommandException | EmptyDescriptionException | EmptyTagException | InvalidTaskException"},{"lineNumber":191,"author":{"gitId":"chesterhow"},"content":"                | TaskNotFoundException | IOException exception) {"},{"lineNumber":192,"author":{"gitId":"chesterhow"},"content":"            return Ui.formatLine(exception.getMessage());"},{"lineNumber":193,"author":{"gitId":"chesterhow"},"content":"        } catch (DateTimeParseException exception) {"},{"lineNumber":194,"author":{"gitId":"chesterhow"},"content":"            return Ui.formatLine(\"☹ Please provide dates in the \\\"dd/mm/yyyy hhmm\\\" or \\\"dd/mm/yyyy\\\" format\");"},{"lineNumber":195,"author":{"gitId":"chesterhow"},"content":"        } catch (NumberFormatException exception) {"},{"lineNumber":196,"author":{"gitId":"chesterhow"},"content":"            return Ui.formatLine(\"☹ Please provide a valid index of the task that you would like to access.\");"},{"lineNumber":197,"author":{"gitId":"chesterhow"},"content":"        }"},{"lineNumber":198,"author":{"gitId":"chesterhow"},"content":"    }"},{"lineNumber":199,"author":{"gitId":"chesterhow"},"content":""},{"lineNumber":200,"author":{"gitId":"chesterhow"},"content":"    /**"},{"lineNumber":201,"author":{"gitId":"chesterhow"},"content":"     * Returns true if the provided input matches the bye command."},{"lineNumber":202,"author":{"gitId":"chesterhow"},"content":"     *"},{"lineNumber":203,"author":{"gitId":"chesterhow"},"content":"     * @param input String entered by user."},{"lineNumber":204,"author":{"gitId":"chesterhow"},"content":"     * @return True if the provided input matches the bye command, else false."},{"lineNumber":205,"author":{"gitId":"chesterhow"},"content":"     */"},{"lineNumber":206,"author":{"gitId":"chesterhow"},"content":"    public boolean shouldExit(String input) {"},{"lineNumber":207,"author":{"gitId":"chesterhow"},"content":"        Command command \u003d Parser.parseInput(input.trim());"},{"lineNumber":208,"author":{"gitId":"chesterhow"},"content":"        return command.getInstruction().equals(Command.BYE);"},{"lineNumber":209,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":210,"author":{"gitId":"-"},"content":"}"}],"authorContributionMap":{"-":3,"chesterhow":207}},{"path":"src/main/java/EmptyDescriptionException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"chesterhow"},"content":"public class EmptyDescriptionException extends IndexOutOfBoundsException {"},{"lineNumber":2,"author":{"gitId":"chesterhow"},"content":"    public EmptyDescriptionException(String instruction) {"},{"lineNumber":3,"author":{"gitId":"chesterhow"},"content":"        super(\"☹ The description of a \" + instruction + \" cannot be empty.\");"},{"lineNumber":4,"author":{"gitId":"chesterhow"},"content":"    }"},{"lineNumber":5,"author":{"gitId":"chesterhow"},"content":"}"}],"authorContributionMap":{"chesterhow":5}},{"path":"src/main/java/EmptyTagException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"chesterhow"},"content":"public class EmptyTagException extends IllegalArgumentException {"},{"lineNumber":2,"author":{"gitId":"chesterhow"},"content":"    public EmptyTagException() {"},{"lineNumber":3,"author":{"gitId":"chesterhow"},"content":"        super(\"☹ Please provide a label for the tag.\");"},{"lineNumber":4,"author":{"gitId":"chesterhow"},"content":"    }"},{"lineNumber":5,"author":{"gitId":"chesterhow"},"content":"}"}],"authorContributionMap":{"chesterhow":5}},{"path":"src/main/java/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"chesterhow"},"content":"public class Event extends Task {"},{"lineNumber":2,"author":{"gitId":"chesterhow"},"content":"    protected String at;"},{"lineNumber":3,"author":{"gitId":"chesterhow"},"content":""},{"lineNumber":4,"author":{"gitId":"chesterhow"},"content":"    /**"},{"lineNumber":5,"author":{"gitId":"chesterhow"},"content":"     * Constructor for the Event class."},{"lineNumber":6,"author":{"gitId":"chesterhow"},"content":"     *"},{"lineNumber":7,"author":{"gitId":"chesterhow"},"content":"     * @param description Description of the Event task."},{"lineNumber":8,"author":{"gitId":"chesterhow"},"content":"     * @param at Location of the Event task."},{"lineNumber":9,"author":{"gitId":"chesterhow"},"content":"     */"},{"lineNumber":10,"author":{"gitId":"chesterhow"},"content":"    public Event(String description, String at) {"},{"lineNumber":11,"author":{"gitId":"chesterhow"},"content":"        super(description);"},{"lineNumber":12,"author":{"gitId":"chesterhow"},"content":"        this.at \u003d at.trim();"},{"lineNumber":13,"author":{"gitId":"chesterhow"},"content":"    }"},{"lineNumber":14,"author":{"gitId":"chesterhow"},"content":""},{"lineNumber":15,"author":{"gitId":"chesterhow"},"content":"    /**"},{"lineNumber":16,"author":{"gitId":"chesterhow"},"content":"     * Constructor for the Event class."},{"lineNumber":17,"author":{"gitId":"chesterhow"},"content":"     *"},{"lineNumber":18,"author":{"gitId":"chesterhow"},"content":"     * @param description Description of the Event task."},{"lineNumber":19,"author":{"gitId":"chesterhow"},"content":"     * @param at Location of the Event task."},{"lineNumber":20,"author":{"gitId":"chesterhow"},"content":"     * @param tags String of tags."},{"lineNumber":21,"author":{"gitId":"chesterhow"},"content":"     */"},{"lineNumber":22,"author":{"gitId":"chesterhow"},"content":"    public Event(String description, String at, String tags) {"},{"lineNumber":23,"author":{"gitId":"chesterhow"},"content":"        super(description, tags);"},{"lineNumber":24,"author":{"gitId":"chesterhow"},"content":"        this.at \u003d at.trim();"},{"lineNumber":25,"author":{"gitId":"chesterhow"},"content":"    }"},{"lineNumber":26,"author":{"gitId":"chesterhow"},"content":""},{"lineNumber":27,"author":{"gitId":"chesterhow"},"content":"    @Override"},{"lineNumber":28,"author":{"gitId":"chesterhow"},"content":"    public String toFileString() {"},{"lineNumber":29,"author":{"gitId":"chesterhow"},"content":"        return String.format(\"%s | %s | %s\\n\", Command.EVENT, super.toFileString(), this.at);"},{"lineNumber":30,"author":{"gitId":"chesterhow"},"content":"    }"},{"lineNumber":31,"author":{"gitId":"chesterhow"},"content":""},{"lineNumber":32,"author":{"gitId":"chesterhow"},"content":"    @Override"},{"lineNumber":33,"author":{"gitId":"chesterhow"},"content":"    public String toString() {"},{"lineNumber":34,"author":{"gitId":"chesterhow"},"content":"        return String.format(\"[E]%s (at: %s)%s\", super.toStringWithoutTags(), this.at, super.getTagsString());"},{"lineNumber":35,"author":{"gitId":"chesterhow"},"content":"    }"},{"lineNumber":36,"author":{"gitId":"chesterhow"},"content":"}"}],"authorContributionMap":{"chesterhow":36}},{"path":"src/main/java/InvalidTaskException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"chesterhow"},"content":"public class InvalidTaskException extends IllegalArgumentException {"},{"lineNumber":2,"author":{"gitId":"chesterhow"},"content":"    public InvalidTaskException(String instruction) {"},{"lineNumber":3,"author":{"gitId":"chesterhow"},"content":"        super(\"☹ You have provided an invalid \" + instruction + \".\");"},{"lineNumber":4,"author":{"gitId":"chesterhow"},"content":"    }"},{"lineNumber":5,"author":{"gitId":"chesterhow"},"content":"}"}],"authorContributionMap":{"chesterhow":5}},{"path":"src/main/java/Launcher.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"chesterhow"},"content":"import javafx.application.Application;"},{"lineNumber":2,"author":{"gitId":"chesterhow"},"content":""},{"lineNumber":3,"author":{"gitId":"chesterhow"},"content":"public class Launcher {"},{"lineNumber":4,"author":{"gitId":"chesterhow"},"content":"    public static void main(String[] args) {"},{"lineNumber":5,"author":{"gitId":"chesterhow"},"content":"        Application.launch(Main.class, args);"},{"lineNumber":6,"author":{"gitId":"chesterhow"},"content":"    }"},{"lineNumber":7,"author":{"gitId":"chesterhow"},"content":"}"}],"authorContributionMap":{"chesterhow":7}},{"path":"src/main/java/Main.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"chesterhow"},"content":"import java.io.IOException;"},{"lineNumber":2,"author":{"gitId":"chesterhow"},"content":""},{"lineNumber":3,"author":{"gitId":"chesterhow"},"content":"import javafx.application.Application;"},{"lineNumber":4,"author":{"gitId":"chesterhow"},"content":"import javafx.fxml.FXMLLoader;"},{"lineNumber":5,"author":{"gitId":"chesterhow"},"content":"import javafx.scene.Scene;"},{"lineNumber":6,"author":{"gitId":"chesterhow"},"content":"import javafx.scene.layout.AnchorPane;"},{"lineNumber":7,"author":{"gitId":"chesterhow"},"content":"import javafx.stage.Stage;"},{"lineNumber":8,"author":{"gitId":"chesterhow"},"content":""},{"lineNumber":9,"author":{"gitId":"chesterhow"},"content":"/**"},{"lineNumber":10,"author":{"gitId":"chesterhow"},"content":" * A GUI for Duke using FXML."},{"lineNumber":11,"author":{"gitId":"chesterhow"},"content":" */"},{"lineNumber":12,"author":{"gitId":"chesterhow"},"content":"public class Main extends Application {"},{"lineNumber":13,"author":{"gitId":"chesterhow"},"content":"    private static final String APP_NAME \u003d \"Duke\";"},{"lineNumber":14,"author":{"gitId":"chesterhow"},"content":"    private final Duke duke \u003d new Duke();"},{"lineNumber":15,"author":{"gitId":"chesterhow"},"content":""},{"lineNumber":16,"author":{"gitId":"chesterhow"},"content":"    @Override"},{"lineNumber":17,"author":{"gitId":"chesterhow"},"content":"    public void start(Stage stage) {"},{"lineNumber":18,"author":{"gitId":"chesterhow"},"content":"        try {"},{"lineNumber":19,"author":{"gitId":"chesterhow"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(Main.class.getResource(\"/view/MainWindow.fxml\"));"},{"lineNumber":20,"author":{"gitId":"chesterhow"},"content":"            AnchorPane ap \u003d fxmlLoader.load();"},{"lineNumber":21,"author":{"gitId":"chesterhow"},"content":"            Scene scene \u003d new Scene(ap);"},{"lineNumber":22,"author":{"gitId":"chesterhow"},"content":"            stage.setTitle(APP_NAME);"},{"lineNumber":23,"author":{"gitId":"chesterhow"},"content":"            stage.setScene(scene);"},{"lineNumber":24,"author":{"gitId":"chesterhow"},"content":"            fxmlLoader.\u003cMainWindow\u003egetController().setDuke(duke);"},{"lineNumber":25,"author":{"gitId":"chesterhow"},"content":"            stage.show();"},{"lineNumber":26,"author":{"gitId":"chesterhow"},"content":"        } catch (IOException e) {"},{"lineNumber":27,"author":{"gitId":"chesterhow"},"content":"            e.printStackTrace();"},{"lineNumber":28,"author":{"gitId":"chesterhow"},"content":"        }"},{"lineNumber":29,"author":{"gitId":"chesterhow"},"content":"    }"},{"lineNumber":30,"author":{"gitId":"chesterhow"},"content":"}"}],"authorContributionMap":{"chesterhow":30}},{"path":"src/main/java/MainWindow.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"chesterhow"},"content":"import javafx.fxml.FXML;"},{"lineNumber":2,"author":{"gitId":"chesterhow"},"content":"import javafx.scene.control.Button;"},{"lineNumber":3,"author":{"gitId":"chesterhow"},"content":"import javafx.scene.control.ScrollPane;"},{"lineNumber":4,"author":{"gitId":"chesterhow"},"content":"import javafx.scene.control.TextField;"},{"lineNumber":5,"author":{"gitId":"chesterhow"},"content":"import javafx.scene.image.Image;"},{"lineNumber":6,"author":{"gitId":"chesterhow"},"content":"import javafx.scene.layout.AnchorPane;"},{"lineNumber":7,"author":{"gitId":"chesterhow"},"content":"import javafx.scene.layout.VBox;"},{"lineNumber":8,"author":{"gitId":"chesterhow"},"content":""},{"lineNumber":9,"author":{"gitId":"chesterhow"},"content":"/**"},{"lineNumber":10,"author":{"gitId":"chesterhow"},"content":" * Controller for MainWindow. Provides the layout for the other controls."},{"lineNumber":11,"author":{"gitId":"chesterhow"},"content":" */"},{"lineNumber":12,"author":{"gitId":"chesterhow"},"content":"public class MainWindow extends AnchorPane {"},{"lineNumber":13,"author":{"gitId":"chesterhow"},"content":"    @FXML"},{"lineNumber":14,"author":{"gitId":"chesterhow"},"content":"    private ScrollPane scrollPane;"},{"lineNumber":15,"author":{"gitId":"chesterhow"},"content":"    @FXML"},{"lineNumber":16,"author":{"gitId":"chesterhow"},"content":"    private VBox dialogContainer;"},{"lineNumber":17,"author":{"gitId":"chesterhow"},"content":"    @FXML"},{"lineNumber":18,"author":{"gitId":"chesterhow"},"content":"    private TextField userInput;"},{"lineNumber":19,"author":{"gitId":"chesterhow"},"content":"    @FXML"},{"lineNumber":20,"author":{"gitId":"chesterhow"},"content":"    private Button sendButton;"},{"lineNumber":21,"author":{"gitId":"chesterhow"},"content":""},{"lineNumber":22,"author":{"gitId":"chesterhow"},"content":"    private Duke duke;"},{"lineNumber":23,"author":{"gitId":"chesterhow"},"content":""},{"lineNumber":24,"author":{"gitId":"chesterhow"},"content":"    private final Image userImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaUser.png\"));"},{"lineNumber":25,"author":{"gitId":"chesterhow"},"content":"    private final Image dukeImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaDuke.png\"));"},{"lineNumber":26,"author":{"gitId":"chesterhow"},"content":""},{"lineNumber":27,"author":{"gitId":"chesterhow"},"content":"    /**"},{"lineNumber":28,"author":{"gitId":"chesterhow"},"content":"     * Initialises UI and greets user"},{"lineNumber":29,"author":{"gitId":"chesterhow"},"content":"     */"},{"lineNumber":30,"author":{"gitId":"chesterhow"},"content":"    @FXML"},{"lineNumber":31,"author":{"gitId":"chesterhow"},"content":"    public void initialize() {"},{"lineNumber":32,"author":{"gitId":"chesterhow"},"content":"        scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());"},{"lineNumber":33,"author":{"gitId":"chesterhow"},"content":"        greetUser();"},{"lineNumber":34,"author":{"gitId":"chesterhow"},"content":"    }"},{"lineNumber":35,"author":{"gitId":"chesterhow"},"content":""},{"lineNumber":36,"author":{"gitId":"chesterhow"},"content":"    public void setDuke(Duke d) {"},{"lineNumber":37,"author":{"gitId":"chesterhow"},"content":"        duke \u003d d;"},{"lineNumber":38,"author":{"gitId":"chesterhow"},"content":"    }"},{"lineNumber":39,"author":{"gitId":"chesterhow"},"content":""},{"lineNumber":40,"author":{"gitId":"chesterhow"},"content":"    @FXML"},{"lineNumber":41,"author":{"gitId":"chesterhow"},"content":"    private void greetUser() {"},{"lineNumber":42,"author":{"gitId":"chesterhow"},"content":"        String greeting \u003d Ui.getGreeting();"},{"lineNumber":43,"author":{"gitId":"chesterhow"},"content":"        dialogContainer.getChildren().add(DialogBox.getDukeDialog(greeting, dukeImage));"},{"lineNumber":44,"author":{"gitId":"chesterhow"},"content":"    }"},{"lineNumber":45,"author":{"gitId":"chesterhow"},"content":""},{"lineNumber":46,"author":{"gitId":"chesterhow"},"content":"    /**"},{"lineNumber":47,"author":{"gitId":"chesterhow"},"content":"     * Creates two dialog boxes, one echoing user input and the other containing Duke\u0027s reply and then appends them to"},{"lineNumber":48,"author":{"gitId":"chesterhow"},"content":"     * the dialog container. Clears the user input after processing."},{"lineNumber":49,"author":{"gitId":"chesterhow"},"content":"     */"},{"lineNumber":50,"author":{"gitId":"chesterhow"},"content":"    @FXML"},{"lineNumber":51,"author":{"gitId":"chesterhow"},"content":"    private void handleUserInput() {"},{"lineNumber":52,"author":{"gitId":"chesterhow"},"content":"        String input \u003d userInput.getText();"},{"lineNumber":53,"author":{"gitId":"chesterhow"},"content":"        String response \u003d duke.parseInputAndReply(input);"},{"lineNumber":54,"author":{"gitId":"chesterhow"},"content":"        dialogContainer.getChildren().addAll("},{"lineNumber":55,"author":{"gitId":"chesterhow"},"content":"                DialogBox.getUserDialog(input, userImage),"},{"lineNumber":56,"author":{"gitId":"chesterhow"},"content":"                DialogBox.getDukeDialog(response, dukeImage)"},{"lineNumber":57,"author":{"gitId":"chesterhow"},"content":"        );"},{"lineNumber":58,"author":{"gitId":"chesterhow"},"content":"        userInput.clear();"},{"lineNumber":59,"author":{"gitId":"chesterhow"},"content":""},{"lineNumber":60,"author":{"gitId":"chesterhow"},"content":"        if (duke.shouldExit(input)) {"},{"lineNumber":61,"author":{"gitId":"chesterhow"},"content":"            System.exit(0);"},{"lineNumber":62,"author":{"gitId":"chesterhow"},"content":"        }"},{"lineNumber":63,"author":{"gitId":"chesterhow"},"content":"    }"},{"lineNumber":64,"author":{"gitId":"chesterhow"},"content":"}"}],"authorContributionMap":{"chesterhow":64}},{"path":"src/main/java/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"chesterhow"},"content":"public class Parser {"},{"lineNumber":2,"author":{"gitId":"chesterhow"},"content":"    /**"},{"lineNumber":3,"author":{"gitId":"chesterhow"},"content":"     * Returns a Command object created by parsing the given input."},{"lineNumber":4,"author":{"gitId":"chesterhow"},"content":"     *"},{"lineNumber":5,"author":{"gitId":"chesterhow"},"content":"     * @param input User\u0027s input."},{"lineNumber":6,"author":{"gitId":"chesterhow"},"content":"     * @return Command"},{"lineNumber":7,"author":{"gitId":"chesterhow"},"content":"     */"},{"lineNumber":8,"author":{"gitId":"chesterhow"},"content":"    public static Command parseInput(String input) {"},{"lineNumber":9,"author":{"gitId":"chesterhow"},"content":"        String[] parts \u003d input.split(\" \", 2);"},{"lineNumber":10,"author":{"gitId":"chesterhow"},"content":""},{"lineNumber":11,"author":{"gitId":"chesterhow"},"content":"        Command command;"},{"lineNumber":12,"author":{"gitId":"chesterhow"},"content":"        if (parts.length \u003c 2) {"},{"lineNumber":13,"author":{"gitId":"chesterhow"},"content":"            command \u003d new Command(parts[0]);"},{"lineNumber":14,"author":{"gitId":"chesterhow"},"content":"        } else {"},{"lineNumber":15,"author":{"gitId":"chesterhow"},"content":"            command \u003d new Command(parts[0], parts[1]);"},{"lineNumber":16,"author":{"gitId":"chesterhow"},"content":"        }"},{"lineNumber":17,"author":{"gitId":"chesterhow"},"content":""},{"lineNumber":18,"author":{"gitId":"chesterhow"},"content":"        return command;"},{"lineNumber":19,"author":{"gitId":"chesterhow"},"content":"    }"},{"lineNumber":20,"author":{"gitId":"chesterhow"},"content":"}"}],"authorContributionMap":{"chesterhow":20}},{"path":"src/main/java/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"chesterhow"},"content":"import java.io.File;"},{"lineNumber":2,"author":{"gitId":"chesterhow"},"content":"import java.io.FileWriter;"},{"lineNumber":3,"author":{"gitId":"chesterhow"},"content":"import java.io.IOException;"},{"lineNumber":4,"author":{"gitId":"chesterhow"},"content":"import java.time.format.DateTimeParseException;"},{"lineNumber":5,"author":{"gitId":"chesterhow"},"content":"import java.util.Arrays;"},{"lineNumber":6,"author":{"gitId":"chesterhow"},"content":"import java.util.Scanner;"},{"lineNumber":7,"author":{"gitId":"chesterhow"},"content":""},{"lineNumber":8,"author":{"gitId":"chesterhow"},"content":"public class Storage {"},{"lineNumber":9,"author":{"gitId":"chesterhow"},"content":"    private final File file;"},{"lineNumber":10,"author":{"gitId":"chesterhow"},"content":""},{"lineNumber":11,"author":{"gitId":"chesterhow"},"content":"    /**"},{"lineNumber":12,"author":{"gitId":"chesterhow"},"content":"     * Constructor for the Storage class."},{"lineNumber":13,"author":{"gitId":"chesterhow"},"content":"     *"},{"lineNumber":14,"author":{"gitId":"chesterhow"},"content":"     * @param dirName Name of the directory the data file is stored in."},{"lineNumber":15,"author":{"gitId":"chesterhow"},"content":"     * @param fileName Name of the data file."},{"lineNumber":16,"author":{"gitId":"chesterhow"},"content":"     */"},{"lineNumber":17,"author":{"gitId":"chesterhow"},"content":"    public Storage(String dirName, String fileName) {"},{"lineNumber":18,"author":{"gitId":"chesterhow"},"content":"        File dir \u003d new File(dirName);"},{"lineNumber":19,"author":{"gitId":"chesterhow"},"content":"        if (!dir.exists()) {"},{"lineNumber":20,"author":{"gitId":"chesterhow"},"content":"            dir.mkdir();"},{"lineNumber":21,"author":{"gitId":"chesterhow"},"content":"        }"},{"lineNumber":22,"author":{"gitId":"chesterhow"},"content":""},{"lineNumber":23,"author":{"gitId":"chesterhow"},"content":"        this.file \u003d new File(dirName + \"/\" + fileName);"},{"lineNumber":24,"author":{"gitId":"chesterhow"},"content":"    }"},{"lineNumber":25,"author":{"gitId":"chesterhow"},"content":""},{"lineNumber":26,"author":{"gitId":"chesterhow"},"content":"    private void markDoneAndAdd(Task task, String donePart, TaskList tasks) {"},{"lineNumber":27,"author":{"gitId":"chesterhow"},"content":"        if (donePart.equals(\"X\")) {"},{"lineNumber":28,"author":{"gitId":"chesterhow"},"content":"            task.markDone();"},{"lineNumber":29,"author":{"gitId":"chesterhow"},"content":"        }"},{"lineNumber":30,"author":{"gitId":"chesterhow"},"content":"        tasks.add(task);"},{"lineNumber":31,"author":{"gitId":"chesterhow"},"content":"    }"},{"lineNumber":32,"author":{"gitId":"chesterhow"},"content":""},{"lineNumber":33,"author":{"gitId":"chesterhow"},"content":"    private void addTodo(String[] parts, TaskList tasks) {"},{"lineNumber":34,"author":{"gitId":"chesterhow"},"content":"        assert parts.length \u003d\u003d 4 : \"There should be 4 parts to this line of data\";"},{"lineNumber":35,"author":{"gitId":"chesterhow"},"content":"        Task todo \u003d new Todo(parts[3], parts[2]);"},{"lineNumber":36,"author":{"gitId":"chesterhow"},"content":"        markDoneAndAdd(todo, parts[1], tasks);"},{"lineNumber":37,"author":{"gitId":"chesterhow"},"content":"    }"},{"lineNumber":38,"author":{"gitId":"chesterhow"},"content":""},{"lineNumber":39,"author":{"gitId":"chesterhow"},"content":"    private void addDeadline(String[] parts, TaskList tasks) throws DateTimeParseException {"},{"lineNumber":40,"author":{"gitId":"chesterhow"},"content":"        assert parts.length \u003d\u003d 5 : \"There should be 5 parts to this line of data\";"},{"lineNumber":41,"author":{"gitId":"chesterhow"},"content":"        Task deadline \u003d new Deadline(parts[3], parts[4], parts[2]);"},{"lineNumber":42,"author":{"gitId":"chesterhow"},"content":"        markDoneAndAdd(deadline, parts[1], tasks);"},{"lineNumber":43,"author":{"gitId":"chesterhow"},"content":"    }"},{"lineNumber":44,"author":{"gitId":"chesterhow"},"content":""},{"lineNumber":45,"author":{"gitId":"chesterhow"},"content":"    private void addEvent(String[] parts, TaskList tasks) {"},{"lineNumber":46,"author":{"gitId":"chesterhow"},"content":"        assert parts.length \u003d\u003d 5 : \"There should be 5 parts to this line of data\";"},{"lineNumber":47,"author":{"gitId":"chesterhow"},"content":"        Task event \u003d new Event(parts[3], parts[4], parts[2]);"},{"lineNumber":48,"author":{"gitId":"chesterhow"},"content":"        markDoneAndAdd(event, parts[1], tasks);"},{"lineNumber":49,"author":{"gitId":"chesterhow"},"content":"    }"},{"lineNumber":50,"author":{"gitId":"chesterhow"},"content":""},{"lineNumber":51,"author":{"gitId":"chesterhow"},"content":"    private void parseLine(String line, TaskList tasks) {"},{"lineNumber":52,"author":{"gitId":"chesterhow"},"content":"        String[] parts \u003d Arrays.stream(line.split(\"\\\\|\"))"},{"lineNumber":53,"author":{"gitId":"chesterhow"},"content":"                .map(String::trim)"},{"lineNumber":54,"author":{"gitId":"chesterhow"},"content":"                .toArray(String[]::new);"},{"lineNumber":55,"author":{"gitId":"chesterhow"},"content":""},{"lineNumber":56,"author":{"gitId":"chesterhow"},"content":"        try {"},{"lineNumber":57,"author":{"gitId":"chesterhow"},"content":"            switch (parts[0]) {"},{"lineNumber":58,"author":{"gitId":"chesterhow"},"content":"            case Command.TODO:"},{"lineNumber":59,"author":{"gitId":"chesterhow"},"content":"                addTodo(parts, tasks);"},{"lineNumber":60,"author":{"gitId":"chesterhow"},"content":"                break;"},{"lineNumber":61,"author":{"gitId":"chesterhow"},"content":"            case Command.EVENT:"},{"lineNumber":62,"author":{"gitId":"chesterhow"},"content":"                addEvent(parts, tasks);"},{"lineNumber":63,"author":{"gitId":"chesterhow"},"content":"                break;"},{"lineNumber":64,"author":{"gitId":"chesterhow"},"content":"            case Command.DEADLINE:"},{"lineNumber":65,"author":{"gitId":"chesterhow"},"content":"                addDeadline(parts, tasks);"},{"lineNumber":66,"author":{"gitId":"chesterhow"},"content":"                break;"},{"lineNumber":67,"author":{"gitId":"chesterhow"},"content":"            default:"},{"lineNumber":68,"author":{"gitId":"chesterhow"},"content":"                throw new UnknownCommandException();"},{"lineNumber":69,"author":{"gitId":"chesterhow"},"content":"            }"},{"lineNumber":70,"author":{"gitId":"chesterhow"},"content":"        } catch (UnknownCommandException | DateTimeParseException exception) {"},{"lineNumber":71,"author":{"gitId":"chesterhow"},"content":"            exception.printStackTrace();"},{"lineNumber":72,"author":{"gitId":"chesterhow"},"content":"        }"},{"lineNumber":73,"author":{"gitId":"chesterhow"},"content":"    }"},{"lineNumber":74,"author":{"gitId":"chesterhow"},"content":""},{"lineNumber":75,"author":{"gitId":"chesterhow"},"content":"    /**"},{"lineNumber":76,"author":{"gitId":"chesterhow"},"content":"     * Reads and processes data from file."},{"lineNumber":77,"author":{"gitId":"chesterhow"},"content":"     *"},{"lineNumber":78,"author":{"gitId":"chesterhow"},"content":"     * @param tasks List of tasks."},{"lineNumber":79,"author":{"gitId":"chesterhow"},"content":"     * @throws IOException If an error occurs while reading from the file."},{"lineNumber":80,"author":{"gitId":"chesterhow"},"content":"     */"},{"lineNumber":81,"author":{"gitId":"chesterhow"},"content":"    public void readFromFile(TaskList tasks) throws IOException {"},{"lineNumber":82,"author":{"gitId":"chesterhow"},"content":"        if (!this.file.createNewFile()) {"},{"lineNumber":83,"author":{"gitId":"chesterhow"},"content":"            Scanner fileSc \u003d new Scanner(this.file);"},{"lineNumber":84,"author":{"gitId":"chesterhow"},"content":"            while (fileSc.hasNextLine()) {"},{"lineNumber":85,"author":{"gitId":"chesterhow"},"content":"                parseLine(fileSc.nextLine(), tasks);"},{"lineNumber":86,"author":{"gitId":"chesterhow"},"content":"            }"},{"lineNumber":87,"author":{"gitId":"chesterhow"},"content":"            fileSc.close();"},{"lineNumber":88,"author":{"gitId":"chesterhow"},"content":"        }"},{"lineNumber":89,"author":{"gitId":"chesterhow"},"content":"    }"},{"lineNumber":90,"author":{"gitId":"chesterhow"},"content":""},{"lineNumber":91,"author":{"gitId":"chesterhow"},"content":"    /**"},{"lineNumber":92,"author":{"gitId":"chesterhow"},"content":"     * Writes task data to data file."},{"lineNumber":93,"author":{"gitId":"chesterhow"},"content":"     *"},{"lineNumber":94,"author":{"gitId":"chesterhow"},"content":"     * @param task Task to write to file."},{"lineNumber":95,"author":{"gitId":"chesterhow"},"content":"     * @throws IOException If an error occurs while writing to the file."},{"lineNumber":96,"author":{"gitId":"chesterhow"},"content":"     */"},{"lineNumber":97,"author":{"gitId":"chesterhow"},"content":"    public void writeToFile(Task task) throws IOException {"},{"lineNumber":98,"author":{"gitId":"chesterhow"},"content":"        FileWriter fw \u003d new FileWriter(this.file, true);"},{"lineNumber":99,"author":{"gitId":"chesterhow"},"content":"        fw.write(task.toFileString());"},{"lineNumber":100,"author":{"gitId":"chesterhow"},"content":"        fw.close();"},{"lineNumber":101,"author":{"gitId":"chesterhow"},"content":"    }"},{"lineNumber":102,"author":{"gitId":"chesterhow"},"content":""},{"lineNumber":103,"author":{"gitId":"chesterhow"},"content":"    /**"},{"lineNumber":104,"author":{"gitId":"chesterhow"},"content":"     * Updates task data in data file."},{"lineNumber":105,"author":{"gitId":"chesterhow"},"content":"     *"},{"lineNumber":106,"author":{"gitId":"chesterhow"},"content":"     * @param tasks List of tasks."},{"lineNumber":107,"author":{"gitId":"chesterhow"},"content":"     * @throws IOException If an error occurs while writing to the file."},{"lineNumber":108,"author":{"gitId":"chesterhow"},"content":"     */"},{"lineNumber":109,"author":{"gitId":"chesterhow"},"content":"    public void updateFile(TaskList tasks) throws IOException {"},{"lineNumber":110,"author":{"gitId":"chesterhow"},"content":"        StringBuilder buffer \u003d new StringBuilder();"},{"lineNumber":111,"author":{"gitId":"chesterhow"},"content":"        for (int i \u003d 0; i \u003c tasks.size(); i++) {"},{"lineNumber":112,"author":{"gitId":"chesterhow"},"content":"            buffer.append(tasks.getTaskAt(i).toFileString());"},{"lineNumber":113,"author":{"gitId":"chesterhow"},"content":"        }"},{"lineNumber":114,"author":{"gitId":"chesterhow"},"content":""},{"lineNumber":115,"author":{"gitId":"chesterhow"},"content":"        FileWriter fw \u003d new FileWriter(file);"},{"lineNumber":116,"author":{"gitId":"chesterhow"},"content":"        fw.write(buffer.toString());"},{"lineNumber":117,"author":{"gitId":"chesterhow"},"content":"        fw.close();"},{"lineNumber":118,"author":{"gitId":"chesterhow"},"content":"    }"},{"lineNumber":119,"author":{"gitId":"chesterhow"},"content":"}"}],"authorContributionMap":{"chesterhow":119}},{"path":"src/main/java/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"chesterhow"},"content":"import java.util.ArrayList;"},{"lineNumber":2,"author":{"gitId":"chesterhow"},"content":"import java.util.Arrays;"},{"lineNumber":3,"author":{"gitId":"chesterhow"},"content":"import java.util.List;"},{"lineNumber":4,"author":{"gitId":"chesterhow"},"content":""},{"lineNumber":5,"author":{"gitId":"chesterhow"},"content":"public class Task {"},{"lineNumber":6,"author":{"gitId":"chesterhow"},"content":"    protected String description;"},{"lineNumber":7,"author":{"gitId":"chesterhow"},"content":"    protected boolean isDone;"},{"lineNumber":8,"author":{"gitId":"chesterhow"},"content":"    protected List\u003cString\u003e tags;"},{"lineNumber":9,"author":{"gitId":"chesterhow"},"content":""},{"lineNumber":10,"author":{"gitId":"chesterhow"},"content":"    /**"},{"lineNumber":11,"author":{"gitId":"chesterhow"},"content":"     * Constructor for the Task class."},{"lineNumber":12,"author":{"gitId":"chesterhow"},"content":"     *"},{"lineNumber":13,"author":{"gitId":"chesterhow"},"content":"     * @param description Description of the task."},{"lineNumber":14,"author":{"gitId":"chesterhow"},"content":"     */"},{"lineNumber":15,"author":{"gitId":"chesterhow"},"content":"    public Task(String description) {"},{"lineNumber":16,"author":{"gitId":"chesterhow"},"content":"        this.description \u003d description.trim();"},{"lineNumber":17,"author":{"gitId":"chesterhow"},"content":"        this.isDone \u003d false;"},{"lineNumber":18,"author":{"gitId":"chesterhow"},"content":"        this.tags \u003d new ArrayList\u003c\u003e();"},{"lineNumber":19,"author":{"gitId":"chesterhow"},"content":"    }"},{"lineNumber":20,"author":{"gitId":"chesterhow"},"content":""},{"lineNumber":21,"author":{"gitId":"chesterhow"},"content":"    /**"},{"lineNumber":22,"author":{"gitId":"chesterhow"},"content":"     * Constructor for the Task class."},{"lineNumber":23,"author":{"gitId":"chesterhow"},"content":"     *"},{"lineNumber":24,"author":{"gitId":"chesterhow"},"content":"     * @param description Description of the task."},{"lineNumber":25,"author":{"gitId":"chesterhow"},"content":"     * @param tags List of tags of the task."},{"lineNumber":26,"author":{"gitId":"chesterhow"},"content":"     */"},{"lineNumber":27,"author":{"gitId":"chesterhow"},"content":"    public Task(String description, String tags) {"},{"lineNumber":28,"author":{"gitId":"chesterhow"},"content":"        this.description \u003d description.trim();"},{"lineNumber":29,"author":{"gitId":"chesterhow"},"content":"        this.isDone \u003d false;"},{"lineNumber":30,"author":{"gitId":"chesterhow"},"content":"        if (!stringIsNullOrEmpty(tags)) {"},{"lineNumber":31,"author":{"gitId":"chesterhow"},"content":"            this.tags \u003d new ArrayList\u003c\u003e(Arrays.asList(tags.split(\" \")));"},{"lineNumber":32,"author":{"gitId":"chesterhow"},"content":"        } else {"},{"lineNumber":33,"author":{"gitId":"chesterhow"},"content":"            this.tags \u003d new ArrayList\u003c\u003e();"},{"lineNumber":34,"author":{"gitId":"chesterhow"},"content":"        }"},{"lineNumber":35,"author":{"gitId":"chesterhow"},"content":"    }"},{"lineNumber":36,"author":{"gitId":"chesterhow"},"content":""},{"lineNumber":37,"author":{"gitId":"chesterhow"},"content":"    private boolean stringIsNullOrEmpty(String string) {"},{"lineNumber":38,"author":{"gitId":"chesterhow"},"content":"        return string \u003d\u003d null || string.trim().isEmpty();"},{"lineNumber":39,"author":{"gitId":"chesterhow"},"content":"    }"},{"lineNumber":40,"author":{"gitId":"chesterhow"},"content":""},{"lineNumber":41,"author":{"gitId":"chesterhow"},"content":"    public String getDescription() {"},{"lineNumber":42,"author":{"gitId":"chesterhow"},"content":"        return this.description;"},{"lineNumber":43,"author":{"gitId":"chesterhow"},"content":"    }"},{"lineNumber":44,"author":{"gitId":"chesterhow"},"content":""},{"lineNumber":45,"author":{"gitId":"chesterhow"},"content":"    /**"},{"lineNumber":46,"author":{"gitId":"chesterhow"},"content":"     * Marks the task as done"},{"lineNumber":47,"author":{"gitId":"chesterhow"},"content":"     */"},{"lineNumber":48,"author":{"gitId":"chesterhow"},"content":"    public void markDone() {"},{"lineNumber":49,"author":{"gitId":"chesterhow"},"content":"        this.isDone \u003d true;"},{"lineNumber":50,"author":{"gitId":"chesterhow"},"content":"    }"},{"lineNumber":51,"author":{"gitId":"chesterhow"},"content":""},{"lineNumber":52,"author":{"gitId":"chesterhow"},"content":"    /**"},{"lineNumber":53,"author":{"gitId":"chesterhow"},"content":"     * Adds a tag to the task."},{"lineNumber":54,"author":{"gitId":"chesterhow"},"content":"     *"},{"lineNumber":55,"author":{"gitId":"chesterhow"},"content":"     * @param tag String of tag to be added."},{"lineNumber":56,"author":{"gitId":"chesterhow"},"content":"     */"},{"lineNumber":57,"author":{"gitId":"chesterhow"},"content":"    public void addTag(String tag) {"},{"lineNumber":58,"author":{"gitId":"chesterhow"},"content":"        if (stringIsNullOrEmpty(tag)) {"},{"lineNumber":59,"author":{"gitId":"chesterhow"},"content":"            throw new EmptyTagException();"},{"lineNumber":60,"author":{"gitId":"chesterhow"},"content":"        }"},{"lineNumber":61,"author":{"gitId":"chesterhow"},"content":"        this.tags.add(tag);"},{"lineNumber":62,"author":{"gitId":"chesterhow"},"content":"    }"},{"lineNumber":63,"author":{"gitId":"chesterhow"},"content":""},{"lineNumber":64,"author":{"gitId":"chesterhow"},"content":"    /**"},{"lineNumber":65,"author":{"gitId":"chesterhow"},"content":"     * Returns the string representation of how the task will be stored in the file."},{"lineNumber":66,"author":{"gitId":"chesterhow"},"content":"     *"},{"lineNumber":67,"author":{"gitId":"chesterhow"},"content":"     * @return String"},{"lineNumber":68,"author":{"gitId":"chesterhow"},"content":"     */"},{"lineNumber":69,"author":{"gitId":"chesterhow"},"content":"    public String toFileString() {"},{"lineNumber":70,"author":{"gitId":"chesterhow"},"content":"        char done \u003d this.isDone ? \u0027X\u0027 : \u0027 \u0027;"},{"lineNumber":71,"author":{"gitId":"chesterhow"},"content":"        StringBuilder tagsBuffer \u003d new StringBuilder();"},{"lineNumber":72,"author":{"gitId":"chesterhow"},"content":"        tags.forEach(tag -\u003e tagsBuffer.append(String.format(\"%s \", tag)));"},{"lineNumber":73,"author":{"gitId":"chesterhow"},"content":"        String tagsString \u003d tagsBuffer.toString().trim();"},{"lineNumber":74,"author":{"gitId":"chesterhow"},"content":""},{"lineNumber":75,"author":{"gitId":"chesterhow"},"content":"        if (stringIsNullOrEmpty(tagsString)) {"},{"lineNumber":76,"author":{"gitId":"chesterhow"},"content":"            tagsString \u003d \" \";"},{"lineNumber":77,"author":{"gitId":"chesterhow"},"content":"        }"},{"lineNumber":78,"author":{"gitId":"chesterhow"},"content":""},{"lineNumber":79,"author":{"gitId":"chesterhow"},"content":"        return String.format(\"%c | %s | %s\", done, tagsString, this.description);"},{"lineNumber":80,"author":{"gitId":"chesterhow"},"content":"    }"},{"lineNumber":81,"author":{"gitId":"chesterhow"},"content":""},{"lineNumber":82,"author":{"gitId":"chesterhow"},"content":"    protected String toStringWithoutTags() {"},{"lineNumber":83,"author":{"gitId":"chesterhow"},"content":"        char done \u003d this.isDone ? \u0027X\u0027 : \u0027 \u0027;"},{"lineNumber":84,"author":{"gitId":"chesterhow"},"content":"        return String.format(\"[%c] %s\", done, this.description);"},{"lineNumber":85,"author":{"gitId":"chesterhow"},"content":"    }"},{"lineNumber":86,"author":{"gitId":"chesterhow"},"content":""},{"lineNumber":87,"author":{"gitId":"chesterhow"},"content":"    protected String getTagsString() {"},{"lineNumber":88,"author":{"gitId":"chesterhow"},"content":"        String tagsString \u003d \"\";"},{"lineNumber":89,"author":{"gitId":"chesterhow"},"content":""},{"lineNumber":90,"author":{"gitId":"chesterhow"},"content":"        if (this.tags.size() \u003e 0) {"},{"lineNumber":91,"author":{"gitId":"chesterhow"},"content":"            StringBuilder tagsBuffer \u003d new StringBuilder();"},{"lineNumber":92,"author":{"gitId":"chesterhow"},"content":"            tags.forEach(tag -\u003e tagsBuffer.append(String.format(\"#%s \", tag)));"},{"lineNumber":93,"author":{"gitId":"chesterhow"},"content":"            tagsString \u003d String.format(\" | %s\", tagsBuffer.toString());"},{"lineNumber":94,"author":{"gitId":"chesterhow"},"content":"        }"},{"lineNumber":95,"author":{"gitId":"chesterhow"},"content":""},{"lineNumber":96,"author":{"gitId":"chesterhow"},"content":"        return tagsString;"},{"lineNumber":97,"author":{"gitId":"chesterhow"},"content":"    }"},{"lineNumber":98,"author":{"gitId":"chesterhow"},"content":""},{"lineNumber":99,"author":{"gitId":"chesterhow"},"content":"    @Override"},{"lineNumber":100,"author":{"gitId":"chesterhow"},"content":"    public String toString() {"},{"lineNumber":101,"author":{"gitId":"chesterhow"},"content":"        char done \u003d this.isDone ? \u0027X\u0027 : \u0027 \u0027;"},{"lineNumber":102,"author":{"gitId":"chesterhow"},"content":"        String tagsString \u003d getTagsString();"},{"lineNumber":103,"author":{"gitId":"chesterhow"},"content":"        return String.format(\"[%c] %s %s\", done, this.description, tagsString);"},{"lineNumber":104,"author":{"gitId":"chesterhow"},"content":"    }"},{"lineNumber":105,"author":{"gitId":"chesterhow"},"content":"}"}],"authorContributionMap":{"chesterhow":105}},{"path":"src/main/java/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"chesterhow"},"content":"import java.util.ArrayList;"},{"lineNumber":2,"author":{"gitId":"chesterhow"},"content":"import java.util.List;"},{"lineNumber":3,"author":{"gitId":"chesterhow"},"content":""},{"lineNumber":4,"author":{"gitId":"chesterhow"},"content":"public class TaskList {"},{"lineNumber":5,"author":{"gitId":"chesterhow"},"content":"    private final List\u003cTask\u003e tasks;"},{"lineNumber":6,"author":{"gitId":"chesterhow"},"content":""},{"lineNumber":7,"author":{"gitId":"chesterhow"},"content":"    public TaskList() {"},{"lineNumber":8,"author":{"gitId":"chesterhow"},"content":"        this.tasks \u003d new ArrayList\u003c\u003e();"},{"lineNumber":9,"author":{"gitId":"chesterhow"},"content":"    }"},{"lineNumber":10,"author":{"gitId":"chesterhow"},"content":""},{"lineNumber":11,"author":{"gitId":"chesterhow"},"content":"    public void add(Task task) {"},{"lineNumber":12,"author":{"gitId":"chesterhow"},"content":"        tasks.add(task);"},{"lineNumber":13,"author":{"gitId":"chesterhow"},"content":"    }"},{"lineNumber":14,"author":{"gitId":"chesterhow"},"content":""},{"lineNumber":15,"author":{"gitId":"chesterhow"},"content":"    public Task remove(int index) {"},{"lineNumber":16,"author":{"gitId":"chesterhow"},"content":"        return tasks.remove(index);"},{"lineNumber":17,"author":{"gitId":"chesterhow"},"content":"    }"},{"lineNumber":18,"author":{"gitId":"chesterhow"},"content":""},{"lineNumber":19,"author":{"gitId":"chesterhow"},"content":"    public int size() {"},{"lineNumber":20,"author":{"gitId":"chesterhow"},"content":"        return tasks.size();"},{"lineNumber":21,"author":{"gitId":"chesterhow"},"content":"    }"},{"lineNumber":22,"author":{"gitId":"chesterhow"},"content":""},{"lineNumber":23,"author":{"gitId":"chesterhow"},"content":"    public Task getTaskAt(int index) {"},{"lineNumber":24,"author":{"gitId":"chesterhow"},"content":"        return tasks.get(index);"},{"lineNumber":25,"author":{"gitId":"chesterhow"},"content":"    }"},{"lineNumber":26,"author":{"gitId":"chesterhow"},"content":""},{"lineNumber":27,"author":{"gitId":"chesterhow"},"content":"    /**"},{"lineNumber":28,"author":{"gitId":"chesterhow"},"content":"     * Returns a new TaskList containing tasks that matched the keyword."},{"lineNumber":29,"author":{"gitId":"chesterhow"},"content":"     *"},{"lineNumber":30,"author":{"gitId":"chesterhow"},"content":"     * @param keyword String to search for in tasks."},{"lineNumber":31,"author":{"gitId":"chesterhow"},"content":"     * @return TaskList containing tasks that matched the keyword."},{"lineNumber":32,"author":{"gitId":"chesterhow"},"content":"     */"},{"lineNumber":33,"author":{"gitId":"chesterhow"},"content":"    public TaskList findMatchingTasks(String keyword) {"},{"lineNumber":34,"author":{"gitId":"chesterhow"},"content":"        TaskList matchingTasks \u003d new TaskList();"},{"lineNumber":35,"author":{"gitId":"chesterhow"},"content":""},{"lineNumber":36,"author":{"gitId":"chesterhow"},"content":"        tasks.stream()"},{"lineNumber":37,"author":{"gitId":"chesterhow"},"content":"                .filter(task -\u003e task.getDescription().contains(keyword))"},{"lineNumber":38,"author":{"gitId":"chesterhow"},"content":"                .forEach(matchingTasks::add);"},{"lineNumber":39,"author":{"gitId":"chesterhow"},"content":""},{"lineNumber":40,"author":{"gitId":"chesterhow"},"content":"        return matchingTasks;"},{"lineNumber":41,"author":{"gitId":"chesterhow"},"content":"    }"},{"lineNumber":42,"author":{"gitId":"chesterhow"},"content":"}"}],"authorContributionMap":{"chesterhow":42}},{"path":"src/main/java/TaskNotFoundException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"chesterhow"},"content":"public class TaskNotFoundException extends IndexOutOfBoundsException {"},{"lineNumber":2,"author":{"gitId":"chesterhow"},"content":"    public TaskNotFoundException() {"},{"lineNumber":3,"author":{"gitId":"chesterhow"},"content":"        super(\"☹ Sorry, I was not able to find the task :-(\");"},{"lineNumber":4,"author":{"gitId":"chesterhow"},"content":"    }"},{"lineNumber":5,"author":{"gitId":"chesterhow"},"content":"}"}],"authorContributionMap":{"chesterhow":5}},{"path":"src/main/java/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"chesterhow"},"content":"public class Todo extends Task {"},{"lineNumber":2,"author":{"gitId":"chesterhow"},"content":"    public Todo(String description) {"},{"lineNumber":3,"author":{"gitId":"chesterhow"},"content":"        super(description);"},{"lineNumber":4,"author":{"gitId":"chesterhow"},"content":"    }"},{"lineNumber":5,"author":{"gitId":"chesterhow"},"content":""},{"lineNumber":6,"author":{"gitId":"chesterhow"},"content":"    public Todo(String description, String tags) {"},{"lineNumber":7,"author":{"gitId":"chesterhow"},"content":"        super(description, tags);"},{"lineNumber":8,"author":{"gitId":"chesterhow"},"content":"    }"},{"lineNumber":9,"author":{"gitId":"chesterhow"},"content":""},{"lineNumber":10,"author":{"gitId":"chesterhow"},"content":"    @Override"},{"lineNumber":11,"author":{"gitId":"chesterhow"},"content":"    public String toFileString() {"},{"lineNumber":12,"author":{"gitId":"chesterhow"},"content":"        return String.format(\"%s | %s\\n\", Command.TODO, super.toFileString());"},{"lineNumber":13,"author":{"gitId":"chesterhow"},"content":"    }"},{"lineNumber":14,"author":{"gitId":"chesterhow"},"content":""},{"lineNumber":15,"author":{"gitId":"chesterhow"},"content":"    @Override"},{"lineNumber":16,"author":{"gitId":"chesterhow"},"content":"    public String toString() {"},{"lineNumber":17,"author":{"gitId":"chesterhow"},"content":"        return String.format(\"[T]%s%s\", super.toStringWithoutTags(), super.getTagsString());"},{"lineNumber":18,"author":{"gitId":"chesterhow"},"content":"    }"},{"lineNumber":19,"author":{"gitId":"chesterhow"},"content":"}"}],"authorContributionMap":{"chesterhow":19}},{"path":"src/main/java/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"chesterhow"},"content":"public class Ui {"},{"lineNumber":2,"author":{"gitId":"chesterhow"},"content":"    public Ui() {"},{"lineNumber":3,"author":{"gitId":"chesterhow"},"content":"    }"},{"lineNumber":4,"author":{"gitId":"chesterhow"},"content":""},{"lineNumber":5,"author":{"gitId":"chesterhow"},"content":"    /**"},{"lineNumber":6,"author":{"gitId":"chesterhow"},"content":"     * Formats given string with indentation and line break"},{"lineNumber":7,"author":{"gitId":"chesterhow"},"content":"     *"},{"lineNumber":8,"author":{"gitId":"chesterhow"},"content":"     * @param line Line to format."},{"lineNumber":9,"author":{"gitId":"chesterhow"},"content":"     * @return Formatted line."},{"lineNumber":10,"author":{"gitId":"chesterhow"},"content":"     */"},{"lineNumber":11,"author":{"gitId":"chesterhow"},"content":"    public static String formatLine(String line) {"},{"lineNumber":12,"author":{"gitId":"chesterhow"},"content":"        return line + \"\\n\";"},{"lineNumber":13,"author":{"gitId":"chesterhow"},"content":"    }"},{"lineNumber":14,"author":{"gitId":"chesterhow"},"content":""},{"lineNumber":15,"author":{"gitId":"chesterhow"},"content":"    public static String getGreeting() {"},{"lineNumber":16,"author":{"gitId":"chesterhow"},"content":"        return formatLine(\"Hello! I\u0027m Duke\")"},{"lineNumber":17,"author":{"gitId":"chesterhow"},"content":"                + formatLine(\"What can I do for you?\");"},{"lineNumber":18,"author":{"gitId":"chesterhow"},"content":"    }"},{"lineNumber":19,"author":{"gitId":"chesterhow"},"content":""},{"lineNumber":20,"author":{"gitId":"chesterhow"},"content":"    /**"},{"lineNumber":21,"author":{"gitId":"chesterhow"},"content":"     * Returns a formatted list of all tasks."},{"lineNumber":22,"author":{"gitId":"chesterhow"},"content":"     *"},{"lineNumber":23,"author":{"gitId":"chesterhow"},"content":"     * @param tasks List of tasks."},{"lineNumber":24,"author":{"gitId":"chesterhow"},"content":"     * @return Formatted list of tasks."},{"lineNumber":25,"author":{"gitId":"chesterhow"},"content":"     */"},{"lineNumber":26,"author":{"gitId":"chesterhow"},"content":"    public static String list(TaskList tasks) {"},{"lineNumber":27,"author":{"gitId":"chesterhow"},"content":"        StringBuilder msg \u003d new StringBuilder(formatLine(\"Here are the tasks in your list:\"));"},{"lineNumber":28,"author":{"gitId":"chesterhow"},"content":""},{"lineNumber":29,"author":{"gitId":"chesterhow"},"content":"        for (int i \u003d 0; i \u003c tasks.size(); i++) {"},{"lineNumber":30,"author":{"gitId":"chesterhow"},"content":"            msg.append(formatLine((i + 1) + \". \" + tasks.getTaskAt(i)));"},{"lineNumber":31,"author":{"gitId":"chesterhow"},"content":"        }"},{"lineNumber":32,"author":{"gitId":"chesterhow"},"content":"        return msg.toString();"},{"lineNumber":33,"author":{"gitId":"chesterhow"},"content":"    }"},{"lineNumber":34,"author":{"gitId":"chesterhow"},"content":""},{"lineNumber":35,"author":{"gitId":"chesterhow"},"content":"    public static String exit() {"},{"lineNumber":36,"author":{"gitId":"chesterhow"},"content":"        return formatLine(\"Bye. Hope to see you again soon!\");"},{"lineNumber":37,"author":{"gitId":"chesterhow"},"content":"    }"},{"lineNumber":38,"author":{"gitId":"chesterhow"},"content":""},{"lineNumber":39,"author":{"gitId":"chesterhow"},"content":"    /**"},{"lineNumber":40,"author":{"gitId":"chesterhow"},"content":"     * Returns the reply to having added a task."},{"lineNumber":41,"author":{"gitId":"chesterhow"},"content":"     *"},{"lineNumber":42,"author":{"gitId":"chesterhow"},"content":"     * @param task Task that was added."},{"lineNumber":43,"author":{"gitId":"chesterhow"},"content":"     * @param numTasks Total number of tasks in task list."},{"lineNumber":44,"author":{"gitId":"chesterhow"},"content":"     * @return Reply to having added a task."},{"lineNumber":45,"author":{"gitId":"chesterhow"},"content":"     */"},{"lineNumber":46,"author":{"gitId":"chesterhow"},"content":"    public static String addedTaskReply(Task task, int numTasks) {"},{"lineNumber":47,"author":{"gitId":"chesterhow"},"content":"        return formatLine(\"Got it. I\u0027ve added this task:\")"},{"lineNumber":48,"author":{"gitId":"chesterhow"},"content":"                + formatLine(\"  \" + task)"},{"lineNumber":49,"author":{"gitId":"chesterhow"},"content":"                + formatLine(\"Now you have \" + numTasks + \" tasks in the list.\");"},{"lineNumber":50,"author":{"gitId":"chesterhow"},"content":"    }"},{"lineNumber":51,"author":{"gitId":"chesterhow"},"content":""},{"lineNumber":52,"author":{"gitId":"chesterhow"},"content":"    /**"},{"lineNumber":53,"author":{"gitId":"chesterhow"},"content":"     * Returns the reply to having marked a task as done."},{"lineNumber":54,"author":{"gitId":"chesterhow"},"content":"     *"},{"lineNumber":55,"author":{"gitId":"chesterhow"},"content":"     * @param task Task that was marked as done."},{"lineNumber":56,"author":{"gitId":"chesterhow"},"content":"     * @return Reply to having marked a task as done."},{"lineNumber":57,"author":{"gitId":"chesterhow"},"content":"     */"},{"lineNumber":58,"author":{"gitId":"chesterhow"},"content":"    public static String markDoneReply(Task task) {"},{"lineNumber":59,"author":{"gitId":"chesterhow"},"content":"        return formatLine(\"Nice! I\u0027ve marked this task as done:\")"},{"lineNumber":60,"author":{"gitId":"chesterhow"},"content":"                + formatLine(\"  \" + task);"},{"lineNumber":61,"author":{"gitId":"chesterhow"},"content":"    }"},{"lineNumber":62,"author":{"gitId":"chesterhow"},"content":""},{"lineNumber":63,"author":{"gitId":"chesterhow"},"content":"    /**"},{"lineNumber":64,"author":{"gitId":"chesterhow"},"content":"     * Returns the reply to having deleted a task."},{"lineNumber":65,"author":{"gitId":"chesterhow"},"content":"     *"},{"lineNumber":66,"author":{"gitId":"chesterhow"},"content":"     * @param deletedTask Task that was deleted."},{"lineNumber":67,"author":{"gitId":"chesterhow"},"content":"     * @param numTasks Number of tasks in task list."},{"lineNumber":68,"author":{"gitId":"chesterhow"},"content":"     * @return Reply to having deleted a task."},{"lineNumber":69,"author":{"gitId":"chesterhow"},"content":"     */"},{"lineNumber":70,"author":{"gitId":"chesterhow"},"content":"    public static String deleteReply(Task deletedTask, int numTasks) {"},{"lineNumber":71,"author":{"gitId":"chesterhow"},"content":"        return formatLine(\"Noted. I\u0027ve removed this task:\")"},{"lineNumber":72,"author":{"gitId":"chesterhow"},"content":"                + formatLine(\"  \" + deletedTask)"},{"lineNumber":73,"author":{"gitId":"chesterhow"},"content":"                + formatLine(\"Now you have \" + numTasks + \" tasks in the list.\");"},{"lineNumber":74,"author":{"gitId":"chesterhow"},"content":"    }"},{"lineNumber":75,"author":{"gitId":"chesterhow"},"content":""},{"lineNumber":76,"author":{"gitId":"chesterhow"},"content":"    /**"},{"lineNumber":77,"author":{"gitId":"chesterhow"},"content":"     * Returns the reply to having tagged a task."},{"lineNumber":78,"author":{"gitId":"chesterhow"},"content":"     *"},{"lineNumber":79,"author":{"gitId":"chesterhow"},"content":"     * @param taskToTag Task that was tagged."},{"lineNumber":80,"author":{"gitId":"chesterhow"},"content":"     * @param tag Tag that was added."},{"lineNumber":81,"author":{"gitId":"chesterhow"},"content":"     * @return Reply to having tagged a task."},{"lineNumber":82,"author":{"gitId":"chesterhow"},"content":"     */"},{"lineNumber":83,"author":{"gitId":"chesterhow"},"content":"    public static String tagTaskReply(Task taskToTag, String tag) {"},{"lineNumber":84,"author":{"gitId":"chesterhow"},"content":"        return formatLine(\"Nice! I\u0027ve tagged this task as #\" + tag)"},{"lineNumber":85,"author":{"gitId":"chesterhow"},"content":"                + formatLine(\"  \" + taskToTag);"},{"lineNumber":86,"author":{"gitId":"chesterhow"},"content":"    }"},{"lineNumber":87,"author":{"gitId":"chesterhow"},"content":""},{"lineNumber":88,"author":{"gitId":"chesterhow"},"content":"    /**"},{"lineNumber":89,"author":{"gitId":"chesterhow"},"content":"     * Returns a string of the list of matching tasks."},{"lineNumber":90,"author":{"gitId":"chesterhow"},"content":"     *"},{"lineNumber":91,"author":{"gitId":"chesterhow"},"content":"     * @param tasks Tasklist of matching tasks."},{"lineNumber":92,"author":{"gitId":"chesterhow"},"content":"     * @return String of the list of matching tasks."},{"lineNumber":93,"author":{"gitId":"chesterhow"},"content":"     */"},{"lineNumber":94,"author":{"gitId":"chesterhow"},"content":"    public static String listMatchingTasks(TaskList tasks) {"},{"lineNumber":95,"author":{"gitId":"chesterhow"},"content":"        if (tasks.size() \u003c\u003d 0) {"},{"lineNumber":96,"author":{"gitId":"chesterhow"},"content":"            return formatLine(\"No matching tasks were found.\");"},{"lineNumber":97,"author":{"gitId":"chesterhow"},"content":"        }"},{"lineNumber":98,"author":{"gitId":"chesterhow"},"content":""},{"lineNumber":99,"author":{"gitId":"chesterhow"},"content":"        StringBuilder msg \u003d new StringBuilder(formatLine(\"Here are the matching tasks in your list:\"));"},{"lineNumber":100,"author":{"gitId":"chesterhow"},"content":""},{"lineNumber":101,"author":{"gitId":"chesterhow"},"content":"        for (int i \u003d 0; i \u003c tasks.size(); i++) {"},{"lineNumber":102,"author":{"gitId":"chesterhow"},"content":"            msg.append(formatLine((i + 1) + \". \" + tasks.getTaskAt(i)));"},{"lineNumber":103,"author":{"gitId":"chesterhow"},"content":"        }"},{"lineNumber":104,"author":{"gitId":"chesterhow"},"content":"        return msg.toString();"},{"lineNumber":105,"author":{"gitId":"chesterhow"},"content":"    }"},{"lineNumber":106,"author":{"gitId":"chesterhow"},"content":"}"}],"authorContributionMap":{"chesterhow":106}},{"path":"src/main/java/UnknownCommandException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"chesterhow"},"content":"public class UnknownCommandException extends IllegalArgumentException {"},{"lineNumber":2,"author":{"gitId":"chesterhow"},"content":"    public UnknownCommandException() {"},{"lineNumber":3,"author":{"gitId":"chesterhow"},"content":"        super(\"☹ I\u0027m sorry, but I don\u0027t know what that means :-(\");"},{"lineNumber":4,"author":{"gitId":"chesterhow"},"content":"    }"},{"lineNumber":5,"author":{"gitId":"chesterhow"},"content":"}"}],"authorContributionMap":{"chesterhow":5}},{"path":"src/main/resources/view/DialogBox.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"chesterhow"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"},{"lineNumber":2,"author":{"gitId":"chesterhow"},"content":""},{"lineNumber":3,"author":{"gitId":"chesterhow"},"content":"\u003c?import javafx.geometry.Insets?\u003e"},{"lineNumber":4,"author":{"gitId":"chesterhow"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e"},{"lineNumber":5,"author":{"gitId":"chesterhow"},"content":"\u003c?import javafx.scene.shape.Circle?\u003e"},{"lineNumber":6,"author":{"gitId":"chesterhow"},"content":"\u003c?import javafx.scene.text.Text?\u003e"},{"lineNumber":7,"author":{"gitId":"chesterhow"},"content":""},{"lineNumber":8,"author":{"gitId":"chesterhow"},"content":"\u003cfx:root alignment\u003d\"TOP_RIGHT\" maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\" prefWidth\u003d\"400.0\" type\u003d\"javafx.scene.layout.HBox\" xmlns\u003d\"http://javafx.com/javafx/11\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e"},{"lineNumber":9,"author":{"gitId":"chesterhow"},"content":"    \u003cpadding\u003e"},{"lineNumber":10,"author":{"gitId":"chesterhow"},"content":"        \u003cInsets bottom\u003d\"15.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"15.0\" /\u003e"},{"lineNumber":11,"author":{"gitId":"chesterhow"},"content":"    \u003c/padding\u003e"},{"lineNumber":12,"author":{"gitId":"chesterhow"},"content":"    \u003cText fx:id\u003d\"dialog\" strokeType\u003d\"OUTSIDE\" strokeWidth\u003d\"0.0\" text\u003d\"Text\" wrappingWidth\u003d\"270\"\u003e"},{"lineNumber":13,"author":{"gitId":"chesterhow"},"content":"        \u003cHBox.margin\u003e"},{"lineNumber":14,"author":{"gitId":"chesterhow"},"content":"          \u003cInsets bottom\u003d\"10.0\" left\u003d\"10.0\" right\u003d\"10.0\" top\u003d\"10.0\" /\u003e"},{"lineNumber":15,"author":{"gitId":"chesterhow"},"content":"        \u003c/HBox.margin\u003e"},{"lineNumber":16,"author":{"gitId":"chesterhow"},"content":"    \u003c/Text\u003e"},{"lineNumber":17,"author":{"gitId":"chesterhow"},"content":"    \u003cCircle fx:id\u003d\"imageCircle\" fill\u003d\"DODGERBLUE\" radius\u003d\"49.0\" stroke\u003d\"BLACK\" strokeType\u003d\"INSIDE\" strokeWidth\u003d\"0.0\" /\u003e"},{"lineNumber":18,"author":{"gitId":"chesterhow"},"content":"\u003c/fx:root\u003e"}],"authorContributionMap":{"chesterhow":18}},{"path":"src/main/resources/view/MainWindow.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"chesterhow"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"},{"lineNumber":2,"author":{"gitId":"chesterhow"},"content":""},{"lineNumber":3,"author":{"gitId":"chesterhow"},"content":"\u003c?import javafx.scene.control.Button?\u003e"},{"lineNumber":4,"author":{"gitId":"chesterhow"},"content":"\u003c?import javafx.scene.control.ScrollPane?\u003e"},{"lineNumber":5,"author":{"gitId":"chesterhow"},"content":"\u003c?import javafx.scene.control.TextField?\u003e"},{"lineNumber":6,"author":{"gitId":"chesterhow"},"content":"\u003c?import javafx.scene.layout.AnchorPane?\u003e"},{"lineNumber":7,"author":{"gitId":"chesterhow"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e"},{"lineNumber":8,"author":{"gitId":"chesterhow"},"content":""},{"lineNumber":9,"author":{"gitId":"chesterhow"},"content":"\u003cAnchorPane maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefHeight\u003d\"600.0\" prefWidth\u003d\"400.0\" xmlns\u003d\"http://javafx.com/javafx/15.0.1\" xmlns:fx\u003d\"http://javafx.com/fxml/1\" fx:controller\u003d\"MainWindow\"\u003e"},{"lineNumber":10,"author":{"gitId":"chesterhow"},"content":"    \u003cchildren\u003e"},{"lineNumber":11,"author":{"gitId":"chesterhow"},"content":"        \u003cTextField fx:id\u003d\"userInput\" layoutY\u003d\"558.0\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"324.0\" AnchorPane.bottomAnchor\u003d\"0.0\" AnchorPane.leftAnchor\u003d\"0.0\" AnchorPane.rightAnchor\u003d\"76.0\" /\u003e"},{"lineNumber":12,"author":{"gitId":"chesterhow"},"content":"        \u003cButton fx:id\u003d\"sendButton\" layoutX\u003d\"324.0\" layoutY\u003d\"558.0\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"76.0\" text\u003d\"Send\" AnchorPane.bottomAnchor\u003d\"0.0\" AnchorPane.rightAnchor\u003d\"0.0\" /\u003e"},{"lineNumber":13,"author":{"gitId":"chesterhow"},"content":"        \u003cScrollPane fx:id\u003d\"scrollPane\" hbarPolicy\u003d\"NEVER\" hvalue\u003d\"1.0\" prefHeight\u003d\"557.0\" prefWidth\u003d\"400.0\" vvalue\u003d\"1.0\" AnchorPane.bottomAnchor\u003d\"40.0\" AnchorPane.leftAnchor\u003d\"0.0\" AnchorPane.rightAnchor\u003d\"0.0\" AnchorPane.topAnchor\u003d\"0.0\"\u003e"},{"lineNumber":14,"author":{"gitId":"chesterhow"},"content":"            \u003ccontent\u003e"},{"lineNumber":15,"author":{"gitId":"chesterhow"},"content":"                \u003cVBox fx:id\u003d\"dialogContainer\" prefHeight\u003d\"552.0\" prefWidth\u003d\"388.0\" /\u003e"},{"lineNumber":16,"author":{"gitId":"chesterhow"},"content":"            \u003c/content\u003e"},{"lineNumber":17,"author":{"gitId":"chesterhow"},"content":"        \u003c/ScrollPane\u003e"},{"lineNumber":18,"author":{"gitId":"chesterhow"},"content":"    \u003c/children\u003e"},{"lineNumber":19,"author":{"gitId":"chesterhow"},"content":"\u003c/AnchorPane\u003e"}],"authorContributionMap":{"chesterhow":19}},{"path":"src/test/java/CommandTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"chesterhow"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;"},{"lineNumber":2,"author":{"gitId":"chesterhow"},"content":""},{"lineNumber":3,"author":{"gitId":"chesterhow"},"content":"import org.junit.jupiter.api.Test;"},{"lineNumber":4,"author":{"gitId":"chesterhow"},"content":""},{"lineNumber":5,"author":{"gitId":"chesterhow"},"content":"public class CommandTest {"},{"lineNumber":6,"author":{"gitId":"chesterhow"},"content":"    @Test"},{"lineNumber":7,"author":{"gitId":"chesterhow"},"content":"    public void createCommandNoArgs_incompleteInstruction_exceptionThrown() {"},{"lineNumber":8,"author":{"gitId":"chesterhow"},"content":"        assertThrows(EmptyDescriptionException.class, () -\u003e {"},{"lineNumber":9,"author":{"gitId":"chesterhow"},"content":"            new Command(\"todo\");"},{"lineNumber":10,"author":{"gitId":"chesterhow"},"content":"        });"},{"lineNumber":11,"author":{"gitId":"chesterhow"},"content":"    }"},{"lineNumber":12,"author":{"gitId":"chesterhow"},"content":""},{"lineNumber":13,"author":{"gitId":"chesterhow"},"content":"    @Test"},{"lineNumber":14,"author":{"gitId":"chesterhow"},"content":"    public void createCommand_unknownInstruction_exceptionThrown() {"},{"lineNumber":15,"author":{"gitId":"chesterhow"},"content":"        assertThrows(UnknownCommandException.class, () -\u003e {"},{"lineNumber":16,"author":{"gitId":"chesterhow"},"content":"            new Command(\"hello\", \"args\");"},{"lineNumber":17,"author":{"gitId":"chesterhow"},"content":"        });"},{"lineNumber":18,"author":{"gitId":"chesterhow"},"content":"    }"},{"lineNumber":19,"author":{"gitId":"chesterhow"},"content":"}"}],"authorContributionMap":{"chesterhow":19}},{"path":"src/test/java/DeadlineTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"chesterhow"},"content":"import static org.junit.jupiter.api.Assertions.assertDoesNotThrow;"},{"lineNumber":2,"author":{"gitId":"chesterhow"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;"},{"lineNumber":3,"author":{"gitId":"chesterhow"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;"},{"lineNumber":4,"author":{"gitId":"chesterhow"},"content":""},{"lineNumber":5,"author":{"gitId":"chesterhow"},"content":"import java.time.format.DateTimeParseException;"},{"lineNumber":6,"author":{"gitId":"chesterhow"},"content":""},{"lineNumber":7,"author":{"gitId":"chesterhow"},"content":"import org.junit.jupiter.api.Test;"},{"lineNumber":8,"author":{"gitId":"chesterhow"},"content":""},{"lineNumber":9,"author":{"gitId":"chesterhow"},"content":"public class DeadlineTest {"},{"lineNumber":10,"author":{"gitId":"chesterhow"},"content":"    @Test"},{"lineNumber":11,"author":{"gitId":"chesterhow"},"content":"    public void createDeadline_validDateTime_success() {"},{"lineNumber":12,"author":{"gitId":"chesterhow"},"content":"        assertDoesNotThrow(() -\u003e {"},{"lineNumber":13,"author":{"gitId":"chesterhow"},"content":"            new Deadline(\"some item\", \"01/01/2021 1030\");"},{"lineNumber":14,"author":{"gitId":"chesterhow"},"content":"            new Deadline(\"some item\", \"01/01/2021\");"},{"lineNumber":15,"author":{"gitId":"chesterhow"},"content":"        });"},{"lineNumber":16,"author":{"gitId":"chesterhow"},"content":"    }"},{"lineNumber":17,"author":{"gitId":"chesterhow"},"content":""},{"lineNumber":18,"author":{"gitId":"chesterhow"},"content":"    @Test"},{"lineNumber":19,"author":{"gitId":"chesterhow"},"content":"    public void createDeadline_invalidDateTime_exceptionThrown() {"},{"lineNumber":20,"author":{"gitId":"chesterhow"},"content":"        assertThrows(DateTimeParseException.class, () -\u003e {"},{"lineNumber":21,"author":{"gitId":"chesterhow"},"content":"            new Deadline(\"some item\", \"01/01/20\");"},{"lineNumber":22,"author":{"gitId":"chesterhow"},"content":"        });"},{"lineNumber":23,"author":{"gitId":"chesterhow"},"content":"    }"},{"lineNumber":24,"author":{"gitId":"chesterhow"},"content":""},{"lineNumber":25,"author":{"gitId":"chesterhow"},"content":"    @Test"},{"lineNumber":26,"author":{"gitId":"chesterhow"},"content":"    public void toString_validInputs_outputsCorrectly() {"},{"lineNumber":27,"author":{"gitId":"chesterhow"},"content":"        String actualOutput \u003d new Deadline(\"some item\", \"01/01/2021\").toString();"},{"lineNumber":28,"author":{"gitId":"chesterhow"},"content":"        assertEquals(\"[D][ ] some item (by: 01 Jan 2021)\", actualOutput);"},{"lineNumber":29,"author":{"gitId":"chesterhow"},"content":"    }"},{"lineNumber":30,"author":{"gitId":"chesterhow"},"content":"}"}],"authorContributionMap":{"chesterhow":30}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"chesterhow"},"content":"todo buy milk"},{"lineNumber":2,"author":{"gitId":"chesterhow"},"content":"list"},{"lineNumber":3,"author":{"gitId":"chesterhow"},"content":"deadline submit homework /by sunday 9pm"},{"lineNumber":4,"author":{"gitId":"chesterhow"},"content":"done 1"},{"lineNumber":5,"author":{"gitId":"chesterhow"},"content":"list"},{"lineNumber":6,"author":{"gitId":"chesterhow"},"content":"event attend class /at monday 10am"},{"lineNumber":7,"author":{"gitId":"chesterhow"},"content":"done 2"},{"lineNumber":8,"author":{"gitId":"chesterhow"},"content":"list"},{"lineNumber":9,"author":{"gitId":"chesterhow"},"content":"delete 3"},{"lineNumber":10,"author":{"gitId":"chesterhow"},"content":"delete 3"},{"lineNumber":11,"author":{"gitId":"chesterhow"},"content":"list"},{"lineNumber":12,"author":{"gitId":"chesterhow"},"content":"bye"}],"authorContributionMap":{"chesterhow":12}}]
