[{"path":"data/duke.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"chesterhow"},"content":"todo | X | asdfasd fa f"},{"lineNumber":2,"author":{"gitId":"chesterhow"},"content":"deadline |   | something | 10/10/2021 0000"},{"lineNumber":3,"author":{"gitId":"chesterhow"},"content":"event | X | new thingo | park"},{"lineNumber":4,"author":{"gitId":"chesterhow"},"content":"todo | X | okokokok"},{"lineNumber":5,"author":{"gitId":"chesterhow"},"content":"event | X | ererqe | here"}],"authorContributionMap":{"chesterhow":5}},{"path":"src/main/java/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"chesterhow"},"content":"public class Command {"},{"lineNumber":2,"author":{"gitId":"chesterhow"},"content":"    public static final String BYE \u003d \"bye\";"},{"lineNumber":3,"author":{"gitId":"chesterhow"},"content":"    public static final String LIST \u003d \"list\";"},{"lineNumber":4,"author":{"gitId":"chesterhow"},"content":"    public static final String DONE \u003d \"done\";"},{"lineNumber":5,"author":{"gitId":"chesterhow"},"content":"    public static final String DELETE \u003d \"delete\";"},{"lineNumber":6,"author":{"gitId":"chesterhow"},"content":"    public static final String FIND \u003d \"find\";"},{"lineNumber":7,"author":{"gitId":"chesterhow"},"content":"    public static final String TODO \u003d \"todo\";"},{"lineNumber":8,"author":{"gitId":"chesterhow"},"content":"    public static final String EVENT \u003d \"event\";"},{"lineNumber":9,"author":{"gitId":"chesterhow"},"content":"    public static final String DEADLINE \u003d \"deadline\";"},{"lineNumber":10,"author":{"gitId":"chesterhow"},"content":""},{"lineNumber":11,"author":{"gitId":"chesterhow"},"content":"    protected String instruction;"},{"lineNumber":12,"author":{"gitId":"chesterhow"},"content":"    protected String args;"},{"lineNumber":13,"author":{"gitId":"chesterhow"},"content":""},{"lineNumber":14,"author":{"gitId":"chesterhow"},"content":"    public Command(String instruction) {"},{"lineNumber":15,"author":{"gitId":"chesterhow"},"content":"        switch (instruction) {"},{"lineNumber":16,"author":{"gitId":"chesterhow"},"content":"        case BYE:"},{"lineNumber":17,"author":{"gitId":"chesterhow"},"content":"        case LIST:"},{"lineNumber":18,"author":{"gitId":"chesterhow"},"content":"            this.instruction \u003d instruction;"},{"lineNumber":19,"author":{"gitId":"chesterhow"},"content":"            break;"},{"lineNumber":20,"author":{"gitId":"chesterhow"},"content":"        case TODO:"},{"lineNumber":21,"author":{"gitId":"chesterhow"},"content":"        case EVENT:"},{"lineNumber":22,"author":{"gitId":"chesterhow"},"content":"        case DEADLINE:"},{"lineNumber":23,"author":{"gitId":"chesterhow"},"content":"            throw new EmptyDescriptionException(instruction);"},{"lineNumber":24,"author":{"gitId":"chesterhow"},"content":"        default:"},{"lineNumber":25,"author":{"gitId":"chesterhow"},"content":"            throw new UnknownCommandException();"},{"lineNumber":26,"author":{"gitId":"chesterhow"},"content":"        }"},{"lineNumber":27,"author":{"gitId":"chesterhow"},"content":"    }"},{"lineNumber":28,"author":{"gitId":"chesterhow"},"content":""},{"lineNumber":29,"author":{"gitId":"chesterhow"},"content":"    public Command(String instruction, String args) {"},{"lineNumber":30,"author":{"gitId":"chesterhow"},"content":"        switch (instruction) {"},{"lineNumber":31,"author":{"gitId":"chesterhow"},"content":"        case DONE:"},{"lineNumber":32,"author":{"gitId":"chesterhow"},"content":"        case DELETE:"},{"lineNumber":33,"author":{"gitId":"chesterhow"},"content":"        case FIND:"},{"lineNumber":34,"author":{"gitId":"chesterhow"},"content":"        case TODO:"},{"lineNumber":35,"author":{"gitId":"chesterhow"},"content":"        case EVENT:"},{"lineNumber":36,"author":{"gitId":"chesterhow"},"content":"        case DEADLINE:"},{"lineNumber":37,"author":{"gitId":"chesterhow"},"content":"            this.instruction \u003d instruction;"},{"lineNumber":38,"author":{"gitId":"chesterhow"},"content":"            this.args \u003d args;"},{"lineNumber":39,"author":{"gitId":"chesterhow"},"content":"            break;"},{"lineNumber":40,"author":{"gitId":"chesterhow"},"content":"        default:"},{"lineNumber":41,"author":{"gitId":"chesterhow"},"content":"            throw new UnknownCommandException();"},{"lineNumber":42,"author":{"gitId":"chesterhow"},"content":"        }"},{"lineNumber":43,"author":{"gitId":"chesterhow"},"content":"    }"},{"lineNumber":44,"author":{"gitId":"chesterhow"},"content":""},{"lineNumber":45,"author":{"gitId":"chesterhow"},"content":"    /**"},{"lineNumber":46,"author":{"gitId":"chesterhow"},"content":"     * Returns the command\u0027s instruction"},{"lineNumber":47,"author":{"gitId":"chesterhow"},"content":"     *"},{"lineNumber":48,"author":{"gitId":"chesterhow"},"content":"     * @return instruction"},{"lineNumber":49,"author":{"gitId":"chesterhow"},"content":"     */"},{"lineNumber":50,"author":{"gitId":"chesterhow"},"content":"    public String getInstruction() {"},{"lineNumber":51,"author":{"gitId":"chesterhow"},"content":"        return this.instruction;"},{"lineNumber":52,"author":{"gitId":"chesterhow"},"content":"    }"},{"lineNumber":53,"author":{"gitId":"chesterhow"},"content":""},{"lineNumber":54,"author":{"gitId":"chesterhow"},"content":"    /**"},{"lineNumber":55,"author":{"gitId":"chesterhow"},"content":"     * Return the command\u0027s arguments"},{"lineNumber":56,"author":{"gitId":"chesterhow"},"content":"     *"},{"lineNumber":57,"author":{"gitId":"chesterhow"},"content":"     * @return arguments"},{"lineNumber":58,"author":{"gitId":"chesterhow"},"content":"     */"},{"lineNumber":59,"author":{"gitId":"chesterhow"},"content":"    public String getArgs() {"},{"lineNumber":60,"author":{"gitId":"chesterhow"},"content":"        return this.args;"},{"lineNumber":61,"author":{"gitId":"chesterhow"},"content":"    }"},{"lineNumber":62,"author":{"gitId":"chesterhow"},"content":"}"}],"authorContributionMap":{"chesterhow":62}},{"path":"src/main/java/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"chesterhow"},"content":"import java.time.LocalDateTime;"},{"lineNumber":2,"author":{"gitId":"chesterhow"},"content":"import java.time.format.DateTimeFormatter;"},{"lineNumber":3,"author":{"gitId":"chesterhow"},"content":"import java.time.format.DateTimeFormatterBuilder;"},{"lineNumber":4,"author":{"gitId":"chesterhow"},"content":"import java.time.format.DateTimeParseException;"},{"lineNumber":5,"author":{"gitId":"chesterhow"},"content":"import java.time.temporal.ChronoField;"},{"lineNumber":6,"author":{"gitId":"chesterhow"},"content":""},{"lineNumber":7,"author":{"gitId":"chesterhow"},"content":"public class Deadline extends Task {"},{"lineNumber":8,"author":{"gitId":"chesterhow"},"content":"    private static final DateTimeFormatter BY_FORMATTER \u003d new DateTimeFormatterBuilder()"},{"lineNumber":9,"author":{"gitId":"chesterhow"},"content":"            .appendPattern(\"dd/MM/yyyy\")"},{"lineNumber":10,"author":{"gitId":"chesterhow"},"content":"            .appendPattern(\"[ HHmm]\")"},{"lineNumber":11,"author":{"gitId":"chesterhow"},"content":"            .parseDefaulting(ChronoField.HOUR_OF_DAY, 0)"},{"lineNumber":12,"author":{"gitId":"chesterhow"},"content":"            .parseDefaulting(ChronoField.MINUTE_OF_HOUR, 0)"},{"lineNumber":13,"author":{"gitId":"chesterhow"},"content":"            .toFormatter();"},{"lineNumber":14,"author":{"gitId":"chesterhow"},"content":"    private static final DateTimeFormatter DATE_FORMATTER \u003d DateTimeFormatter.ofPattern(\"dd MMM yyyy\");"},{"lineNumber":15,"author":{"gitId":"chesterhow"},"content":"    private static final DateTimeFormatter DATETIME_FORMATTER \u003d DateTimeFormatter.ofPattern(\"dd MMM yyyy HHmm\");"},{"lineNumber":16,"author":{"gitId":"chesterhow"},"content":""},{"lineNumber":17,"author":{"gitId":"chesterhow"},"content":"    private final boolean hasTime;"},{"lineNumber":18,"author":{"gitId":"chesterhow"},"content":"    protected LocalDateTime by;"},{"lineNumber":19,"author":{"gitId":"chesterhow"},"content":""},{"lineNumber":20,"author":{"gitId":"chesterhow"},"content":"    public Deadline(String description, String by) throws DateTimeParseException {"},{"lineNumber":21,"author":{"gitId":"chesterhow"},"content":"        super(description);"},{"lineNumber":22,"author":{"gitId":"chesterhow"},"content":"        this.by \u003d LocalDateTime.parse(by.trim(), BY_FORMATTER);"},{"lineNumber":23,"author":{"gitId":"chesterhow"},"content":"        this.hasTime \u003d (by.trim().length() \u003e 10);"},{"lineNumber":24,"author":{"gitId":"chesterhow"},"content":"    }"},{"lineNumber":25,"author":{"gitId":"chesterhow"},"content":""},{"lineNumber":26,"author":{"gitId":"chesterhow"},"content":"    @Override"},{"lineNumber":27,"author":{"gitId":"chesterhow"},"content":"    public String toFileString() {"},{"lineNumber":28,"author":{"gitId":"chesterhow"},"content":"        return String.format(\"%s | %s | %s\\n\", Command.DEADLINE, super.toFileString(), this.by.format(BY_FORMATTER));"},{"lineNumber":29,"author":{"gitId":"chesterhow"},"content":"    }"},{"lineNumber":30,"author":{"gitId":"chesterhow"},"content":""},{"lineNumber":31,"author":{"gitId":"chesterhow"},"content":"    @Override"},{"lineNumber":32,"author":{"gitId":"chesterhow"},"content":"    public String toString() {"},{"lineNumber":33,"author":{"gitId":"chesterhow"},"content":"        DateTimeFormatter formatter \u003d this.hasTime ? DATETIME_FORMATTER : DATE_FORMATTER;"},{"lineNumber":34,"author":{"gitId":"chesterhow"},"content":"        return \"[D]\" + super.toString() + \" (by: \" + this.by.format(formatter) + \")\";"},{"lineNumber":35,"author":{"gitId":"chesterhow"},"content":"    }"},{"lineNumber":36,"author":{"gitId":"chesterhow"},"content":"}"}],"authorContributionMap":{"chesterhow":36}},{"path":"src/main/java/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"chesterhow"},"content":"import java.util.Scanner;"},{"lineNumber":2,"author":{"gitId":"chesterhow"},"content":"import java.io.IOException;"},{"lineNumber":3,"author":{"gitId":"chesterhow"},"content":"import java.time.format.DateTimeParseException;"},{"lineNumber":4,"author":{"gitId":"chesterhow"},"content":""},{"lineNumber":5,"author":{"gitId":"-"},"content":"public class Duke {"},{"lineNumber":6,"author":{"gitId":"chesterhow"},"content":"    private static final String DIR_NAME \u003d \"data\";"},{"lineNumber":7,"author":{"gitId":"chesterhow"},"content":"    private static final String FILE_NAME \u003d \"duke.txt\";"},{"lineNumber":8,"author":{"gitId":"chesterhow"},"content":""},{"lineNumber":9,"author":{"gitId":"chesterhow"},"content":"    private final Ui ui;"},{"lineNumber":10,"author":{"gitId":"chesterhow"},"content":"    private final Storage storage;"},{"lineNumber":11,"author":{"gitId":"chesterhow"},"content":"    private final TaskList tasks;"},{"lineNumber":12,"author":{"gitId":"chesterhow"},"content":""},{"lineNumber":13,"author":{"gitId":"chesterhow"},"content":"    private int getIndex(String args) {"},{"lineNumber":14,"author":{"gitId":"chesterhow"},"content":"        return Integer.parseInt(args) - 1;"},{"lineNumber":15,"author":{"gitId":"chesterhow"},"content":"    }"},{"lineNumber":16,"author":{"gitId":"chesterhow"},"content":""},{"lineNumber":17,"author":{"gitId":"chesterhow"},"content":"    /**"},{"lineNumber":18,"author":{"gitId":"chesterhow"},"content":"     * Adds a new Todo to the TaskList."},{"lineNumber":19,"author":{"gitId":"chesterhow"},"content":"     *"},{"lineNumber":20,"author":{"gitId":"chesterhow"},"content":"     * @param command Command with details about the Todo to be created."},{"lineNumber":21,"author":{"gitId":"chesterhow"},"content":"     * @throws IOException If an error occurs while writing to the file."},{"lineNumber":22,"author":{"gitId":"chesterhow"},"content":"     */"},{"lineNumber":23,"author":{"gitId":"chesterhow"},"content":"    public void addTodo(Command command) throws IOException {"},{"lineNumber":24,"author":{"gitId":"chesterhow"},"content":"        Task todo \u003d new Todo(command.getArgs());"},{"lineNumber":25,"author":{"gitId":"chesterhow"},"content":"        tasks.add(todo);"},{"lineNumber":26,"author":{"gitId":"chesterhow"},"content":"        storage.writeToFile(todo);"},{"lineNumber":27,"author":{"gitId":"chesterhow"},"content":"        ui.addedTaskReply(todo, tasks.size());"},{"lineNumber":28,"author":{"gitId":"chesterhow"},"content":"    }"},{"lineNumber":29,"author":{"gitId":"chesterhow"},"content":""},{"lineNumber":30,"author":{"gitId":"chesterhow"},"content":"    /**"},{"lineNumber":31,"author":{"gitId":"chesterhow"},"content":"     * Adds a new Deadline to the TaskList"},{"lineNumber":32,"author":{"gitId":"chesterhow"},"content":"     *"},{"lineNumber":33,"author":{"gitId":"chesterhow"},"content":"     * @param command Command with details about the Deadline to be created."},{"lineNumber":34,"author":{"gitId":"chesterhow"},"content":"     * @throws IOException If an error occurs while writing to the file."},{"lineNumber":35,"author":{"gitId":"chesterhow"},"content":"     * @throws DateTimeParseException If date provided is not of the \"dd/mm/yyyy hhmm\" or \"dd/mm/yyyy\" format."},{"lineNumber":36,"author":{"gitId":"chesterhow"},"content":"     */"},{"lineNumber":37,"author":{"gitId":"chesterhow"},"content":"    public void addDeadline(Command command) throws IOException, DateTimeParseException {"},{"lineNumber":38,"author":{"gitId":"chesterhow"},"content":"        String[] parts \u003d command.getArgs().split(\"/by\");"},{"lineNumber":39,"author":{"gitId":"chesterhow"},"content":""},{"lineNumber":40,"author":{"gitId":"chesterhow"},"content":"        if (parts.length !\u003d 2) {"},{"lineNumber":41,"author":{"gitId":"chesterhow"},"content":"            throw new InvalidTaskException(command.getInstruction());"},{"lineNumber":42,"author":{"gitId":"chesterhow"},"content":"        } else {"},{"lineNumber":43,"author":{"gitId":"chesterhow"},"content":"            Task deadline \u003d new Deadline(parts[0], parts[1]);"},{"lineNumber":44,"author":{"gitId":"chesterhow"},"content":"            tasks.add(deadline);"},{"lineNumber":45,"author":{"gitId":"chesterhow"},"content":"            storage.writeToFile(deadline);"},{"lineNumber":46,"author":{"gitId":"chesterhow"},"content":"            ui.addedTaskReply(deadline, tasks.size());"},{"lineNumber":47,"author":{"gitId":"chesterhow"},"content":"        }"},{"lineNumber":48,"author":{"gitId":"chesterhow"},"content":"    }"},{"lineNumber":49,"author":{"gitId":"chesterhow"},"content":""},{"lineNumber":50,"author":{"gitId":"chesterhow"},"content":"    /**"},{"lineNumber":51,"author":{"gitId":"chesterhow"},"content":"     * Adds a new Event to the TaskList"},{"lineNumber":52,"author":{"gitId":"chesterhow"},"content":"     *"},{"lineNumber":53,"author":{"gitId":"chesterhow"},"content":"     * @param command Command with details about the Event to be created."},{"lineNumber":54,"author":{"gitId":"chesterhow"},"content":"     * @throws IOException If an error occurs while writing to the file."},{"lineNumber":55,"author":{"gitId":"chesterhow"},"content":"     */"},{"lineNumber":56,"author":{"gitId":"chesterhow"},"content":"    public void addEvent(Command command) throws IOException {"},{"lineNumber":57,"author":{"gitId":"chesterhow"},"content":"        String[] parts \u003d command.getArgs().split(\"/at\");"},{"lineNumber":58,"author":{"gitId":"chesterhow"},"content":""},{"lineNumber":59,"author":{"gitId":"chesterhow"},"content":"        if (parts.length !\u003d 2) {"},{"lineNumber":60,"author":{"gitId":"chesterhow"},"content":"            throw new InvalidTaskException(command.getInstruction());"},{"lineNumber":61,"author":{"gitId":"chesterhow"},"content":"        } else {"},{"lineNumber":62,"author":{"gitId":"chesterhow"},"content":"            Task event \u003d new Event(parts[0], parts[1]);"},{"lineNumber":63,"author":{"gitId":"chesterhow"},"content":"            tasks.add(event);"},{"lineNumber":64,"author":{"gitId":"chesterhow"},"content":"            storage.writeToFile(event);"},{"lineNumber":65,"author":{"gitId":"chesterhow"},"content":"            ui.addedTaskReply(event, tasks.size());"},{"lineNumber":66,"author":{"gitId":"chesterhow"},"content":"        }"},{"lineNumber":67,"author":{"gitId":"chesterhow"},"content":"    }"},{"lineNumber":68,"author":{"gitId":"chesterhow"},"content":""},{"lineNumber":69,"author":{"gitId":"chesterhow"},"content":"    /**"},{"lineNumber":70,"author":{"gitId":"chesterhow"},"content":"     * Marks a task as done"},{"lineNumber":71,"author":{"gitId":"chesterhow"},"content":"     *"},{"lineNumber":72,"author":{"gitId":"chesterhow"},"content":"     * @param command Command containing the index of the task to mark as done."},{"lineNumber":73,"author":{"gitId":"chesterhow"},"content":"     * @throws IOException If an error occurs while writing to the file."},{"lineNumber":74,"author":{"gitId":"chesterhow"},"content":"     */"},{"lineNumber":75,"author":{"gitId":"chesterhow"},"content":"    public void done(Command command) throws IOException {"},{"lineNumber":76,"author":{"gitId":"chesterhow"},"content":"        int index \u003d getIndex(command.getArgs());"},{"lineNumber":77,"author":{"gitId":"chesterhow"},"content":""},{"lineNumber":78,"author":{"gitId":"chesterhow"},"content":"        if (index \u003c 0 || index \u003e\u003d tasks.size()) {"},{"lineNumber":79,"author":{"gitId":"chesterhow"},"content":"            throw new TaskNotFoundException();"},{"lineNumber":80,"author":{"gitId":"chesterhow"},"content":"        } else {"},{"lineNumber":81,"author":{"gitId":"chesterhow"},"content":"            tasks.getTaskAt(index).markDone();"},{"lineNumber":82,"author":{"gitId":"chesterhow"},"content":"            storage.updateFile(tasks);"},{"lineNumber":83,"author":{"gitId":"chesterhow"},"content":"            ui.markDoneReply(tasks.getTaskAt(index));"},{"lineNumber":84,"author":{"gitId":"chesterhow"},"content":"        }"},{"lineNumber":85,"author":{"gitId":"chesterhow"},"content":"    }"},{"lineNumber":86,"author":{"gitId":"chesterhow"},"content":""},{"lineNumber":87,"author":{"gitId":"chesterhow"},"content":"    /**"},{"lineNumber":88,"author":{"gitId":"chesterhow"},"content":"     * Deletes a task"},{"lineNumber":89,"author":{"gitId":"chesterhow"},"content":"     *"},{"lineNumber":90,"author":{"gitId":"chesterhow"},"content":"     * @param command Command containing the index of the task to delete."},{"lineNumber":91,"author":{"gitId":"chesterhow"},"content":"     * @throws IOException If an error occurs while writing to the file."},{"lineNumber":92,"author":{"gitId":"chesterhow"},"content":"     */"},{"lineNumber":93,"author":{"gitId":"chesterhow"},"content":"    public void delete(Command command) throws IOException {"},{"lineNumber":94,"author":{"gitId":"chesterhow"},"content":"        int index \u003d getIndex(command.getArgs());"},{"lineNumber":95,"author":{"gitId":"chesterhow"},"content":""},{"lineNumber":96,"author":{"gitId":"chesterhow"},"content":"        if (index \u003c 0 || index \u003e\u003d tasks.size()) {"},{"lineNumber":97,"author":{"gitId":"chesterhow"},"content":"            throw new TaskNotFoundException();"},{"lineNumber":98,"author":{"gitId":"chesterhow"},"content":"        } else {"},{"lineNumber":99,"author":{"gitId":"chesterhow"},"content":"            Task deletedTask \u003d tasks.remove(index);"},{"lineNumber":100,"author":{"gitId":"chesterhow"},"content":"            storage.updateFile(tasks);"},{"lineNumber":101,"author":{"gitId":"chesterhow"},"content":"            ui.deleteReply(deletedTask, tasks.size());"},{"lineNumber":102,"author":{"gitId":"chesterhow"},"content":"        }"},{"lineNumber":103,"author":{"gitId":"chesterhow"},"content":"    }"},{"lineNumber":104,"author":{"gitId":"chesterhow"},"content":""},{"lineNumber":105,"author":{"gitId":"chesterhow"},"content":"    /**"},{"lineNumber":106,"author":{"gitId":"chesterhow"},"content":"     * Finds and lists tasks matching the given keyword"},{"lineNumber":107,"author":{"gitId":"chesterhow"},"content":"     *"},{"lineNumber":108,"author":{"gitId":"chesterhow"},"content":"     * @param command Command containing the keyword to search for"},{"lineNumber":109,"author":{"gitId":"chesterhow"},"content":"     */"},{"lineNumber":110,"author":{"gitId":"chesterhow"},"content":"    public void find(Command command) {"},{"lineNumber":111,"author":{"gitId":"chesterhow"},"content":"        String keyword \u003d command.getArgs();"},{"lineNumber":112,"author":{"gitId":"chesterhow"},"content":""},{"lineNumber":113,"author":{"gitId":"chesterhow"},"content":"        TaskList matchingTasks \u003d tasks.findMatchingTasks(keyword);"},{"lineNumber":114,"author":{"gitId":"chesterhow"},"content":"        ui.listMatchingTasks(matchingTasks);"},{"lineNumber":115,"author":{"gitId":"chesterhow"},"content":"    }"},{"lineNumber":116,"author":{"gitId":"chesterhow"},"content":""},{"lineNumber":117,"author":{"gitId":"chesterhow"},"content":"    /**"},{"lineNumber":118,"author":{"gitId":"chesterhow"},"content":"     * Processes user\u0027s input and executes the respective command"},{"lineNumber":119,"author":{"gitId":"chesterhow"},"content":"     *"},{"lineNumber":120,"author":{"gitId":"chesterhow"},"content":"     * @param sc Scanner object for reading user\u0027s input"},{"lineNumber":121,"author":{"gitId":"chesterhow"},"content":"     * @return False if the program should terminate, else true."},{"lineNumber":122,"author":{"gitId":"chesterhow"},"content":"     */"},{"lineNumber":123,"author":{"gitId":"chesterhow"},"content":"    public boolean readInput(Scanner sc) {"},{"lineNumber":124,"author":{"gitId":"chesterhow"},"content":"        String input \u003d sc.nextLine().trim();"},{"lineNumber":125,"author":{"gitId":"chesterhow"},"content":""},{"lineNumber":126,"author":{"gitId":"chesterhow"},"content":"        try {"},{"lineNumber":127,"author":{"gitId":"chesterhow"},"content":"            Command command \u003d Parser.parseInput(input);"},{"lineNumber":128,"author":{"gitId":"chesterhow"},"content":""},{"lineNumber":129,"author":{"gitId":"chesterhow"},"content":"            switch (command.getInstruction()) {"},{"lineNumber":130,"author":{"gitId":"chesterhow"},"content":"            case Command.BYE:"},{"lineNumber":131,"author":{"gitId":"chesterhow"},"content":"                ui.exit();"},{"lineNumber":132,"author":{"gitId":"chesterhow"},"content":"                return false;"},{"lineNumber":133,"author":{"gitId":"chesterhow"},"content":"            case Command.LIST:"},{"lineNumber":134,"author":{"gitId":"chesterhow"},"content":"                ui.list(tasks);"},{"lineNumber":135,"author":{"gitId":"chesterhow"},"content":"                break;"},{"lineNumber":136,"author":{"gitId":"chesterhow"},"content":"            case Command.DONE:"},{"lineNumber":137,"author":{"gitId":"chesterhow"},"content":"                done(command);"},{"lineNumber":138,"author":{"gitId":"chesterhow"},"content":"                break;"},{"lineNumber":139,"author":{"gitId":"chesterhow"},"content":"            case Command.DELETE:"},{"lineNumber":140,"author":{"gitId":"chesterhow"},"content":"                delete(command);"},{"lineNumber":141,"author":{"gitId":"chesterhow"},"content":"                break;"},{"lineNumber":142,"author":{"gitId":"chesterhow"},"content":"            case Command.FIND:"},{"lineNumber":143,"author":{"gitId":"chesterhow"},"content":"                find(command);"},{"lineNumber":144,"author":{"gitId":"chesterhow"},"content":"                break;"},{"lineNumber":145,"author":{"gitId":"chesterhow"},"content":"            case Command.TODO:"},{"lineNumber":146,"author":{"gitId":"chesterhow"},"content":"                addTodo(command);"},{"lineNumber":147,"author":{"gitId":"chesterhow"},"content":"                break;"},{"lineNumber":148,"author":{"gitId":"chesterhow"},"content":"            case Command.EVENT:"},{"lineNumber":149,"author":{"gitId":"chesterhow"},"content":"                addEvent(command);"},{"lineNumber":150,"author":{"gitId":"chesterhow"},"content":"                break;"},{"lineNumber":151,"author":{"gitId":"chesterhow"},"content":"            case Command.DEADLINE:"},{"lineNumber":152,"author":{"gitId":"chesterhow"},"content":"                addDeadline(command);"},{"lineNumber":153,"author":{"gitId":"chesterhow"},"content":"                break;"},{"lineNumber":154,"author":{"gitId":"chesterhow"},"content":"            default:"},{"lineNumber":155,"author":{"gitId":"chesterhow"},"content":"                throw new UnknownCommandException();"},{"lineNumber":156,"author":{"gitId":"chesterhow"},"content":"            }"},{"lineNumber":157,"author":{"gitId":"chesterhow"},"content":"        } catch (UnknownCommandException | EmptyDescriptionException | InvalidTaskException | TaskNotFoundException | IOException exception) {"},{"lineNumber":158,"author":{"gitId":"chesterhow"},"content":"            ui.reply(ui.formatLine(exception.getMessage()));"},{"lineNumber":159,"author":{"gitId":"chesterhow"},"content":"        } catch (DateTimeParseException exception) {"},{"lineNumber":160,"author":{"gitId":"chesterhow"},"content":"            ui.reply(ui.formatLine(\"☹ Please provide dates in the \\\"dd/mm/yyyy hhmm\\\" or \\\"dd/mm/yyyy\\\" format\"));"},{"lineNumber":161,"author":{"gitId":"chesterhow"},"content":"        }"},{"lineNumber":162,"author":{"gitId":"chesterhow"},"content":""},{"lineNumber":163,"author":{"gitId":"chesterhow"},"content":"        return true;"},{"lineNumber":164,"author":{"gitId":"chesterhow"},"content":"    }"},{"lineNumber":165,"author":{"gitId":"chesterhow"},"content":""},{"lineNumber":166,"author":{"gitId":"chesterhow"},"content":"    /**"},{"lineNumber":167,"author":{"gitId":"chesterhow"},"content":"     * Constructor for the Duke class."},{"lineNumber":168,"author":{"gitId":"chesterhow"},"content":"     *"},{"lineNumber":169,"author":{"gitId":"chesterhow"},"content":"     * @throws IOException If an error occurs while reading from the file."},{"lineNumber":170,"author":{"gitId":"chesterhow"},"content":"     */"},{"lineNumber":171,"author":{"gitId":"chesterhow"},"content":"    public Duke() throws IOException {"},{"lineNumber":172,"author":{"gitId":"chesterhow"},"content":"        tasks \u003d new TaskList();"},{"lineNumber":173,"author":{"gitId":"chesterhow"},"content":"        ui \u003d new Ui();"},{"lineNumber":174,"author":{"gitId":"chesterhow"},"content":"        storage \u003d new Storage(DIR_NAME, FILE_NAME);"},{"lineNumber":175,"author":{"gitId":"chesterhow"},"content":""},{"lineNumber":176,"author":{"gitId":"chesterhow"},"content":"        storage.readFromFile(tasks, ui);"},{"lineNumber":177,"author":{"gitId":"chesterhow"},"content":"        ui.greet();"},{"lineNumber":178,"author":{"gitId":"chesterhow"},"content":""},{"lineNumber":179,"author":{"gitId":"chesterhow"},"content":"        Scanner sc \u003d new Scanner(System.in);"},{"lineNumber":180,"author":{"gitId":"chesterhow"},"content":"        while (readInput(sc)) ;"},{"lineNumber":181,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":182,"author":{"gitId":"chesterhow"},"content":""},{"lineNumber":183,"author":{"gitId":"chesterhow"},"content":"    public static void main(String[] args) throws IOException {"},{"lineNumber":184,"author":{"gitId":"chesterhow"},"content":"        new Duke();"},{"lineNumber":185,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":186,"author":{"gitId":"-"},"content":"}"}],"authorContributionMap":{"-":4,"chesterhow":182}},{"path":"src/main/java/EmptyDescriptionException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"chesterhow"},"content":"public class EmptyDescriptionException extends IndexOutOfBoundsException {"},{"lineNumber":2,"author":{"gitId":"chesterhow"},"content":"    public EmptyDescriptionException(String instruction) {"},{"lineNumber":3,"author":{"gitId":"chesterhow"},"content":"        super(\"☹ The description of a \" + instruction + \" cannot be empty.\");"},{"lineNumber":4,"author":{"gitId":"chesterhow"},"content":"    }"},{"lineNumber":5,"author":{"gitId":"chesterhow"},"content":"}"}],"authorContributionMap":{"chesterhow":5}},{"path":"src/main/java/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"chesterhow"},"content":"public class Event extends Task {"},{"lineNumber":2,"author":{"gitId":"chesterhow"},"content":"    protected String at;"},{"lineNumber":3,"author":{"gitId":"chesterhow"},"content":""},{"lineNumber":4,"author":{"gitId":"chesterhow"},"content":"    public Event(String description, String at) {"},{"lineNumber":5,"author":{"gitId":"chesterhow"},"content":"        super(description);"},{"lineNumber":6,"author":{"gitId":"chesterhow"},"content":"        this.at \u003d at.trim();"},{"lineNumber":7,"author":{"gitId":"chesterhow"},"content":"    }"},{"lineNumber":8,"author":{"gitId":"chesterhow"},"content":""},{"lineNumber":9,"author":{"gitId":"chesterhow"},"content":"    @Override"},{"lineNumber":10,"author":{"gitId":"chesterhow"},"content":"    public String toFileString() {"},{"lineNumber":11,"author":{"gitId":"chesterhow"},"content":"        return String.format(\"%s | %s | %s\\n\", Command.EVENT, super.toFileString(), this.at);"},{"lineNumber":12,"author":{"gitId":"chesterhow"},"content":"    }"},{"lineNumber":13,"author":{"gitId":"chesterhow"},"content":""},{"lineNumber":14,"author":{"gitId":"chesterhow"},"content":"    @Override"},{"lineNumber":15,"author":{"gitId":"chesterhow"},"content":"    public String toString() {"},{"lineNumber":16,"author":{"gitId":"chesterhow"},"content":"        return \"[E]\" + super.toString() + \" (at: \" + this.at + \")\";"},{"lineNumber":17,"author":{"gitId":"chesterhow"},"content":"    }"},{"lineNumber":18,"author":{"gitId":"chesterhow"},"content":"}"}],"authorContributionMap":{"chesterhow":18}},{"path":"src/main/java/InvalidTaskException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"chesterhow"},"content":"public class InvalidTaskException extends IllegalArgumentException {"},{"lineNumber":2,"author":{"gitId":"chesterhow"},"content":"    public InvalidTaskException(String instruction) {"},{"lineNumber":3,"author":{"gitId":"chesterhow"},"content":"        super(\"☹ You have provided an invalid \" + instruction + \".\");"},{"lineNumber":4,"author":{"gitId":"chesterhow"},"content":"    }"},{"lineNumber":5,"author":{"gitId":"chesterhow"},"content":"}"}],"authorContributionMap":{"chesterhow":5}},{"path":"src/main/java/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"chesterhow"},"content":"public class Parser {"},{"lineNumber":2,"author":{"gitId":"chesterhow"},"content":"    /**"},{"lineNumber":3,"author":{"gitId":"chesterhow"},"content":"     * Returns a Command object created by parsing the given input."},{"lineNumber":4,"author":{"gitId":"chesterhow"},"content":"     *"},{"lineNumber":5,"author":{"gitId":"chesterhow"},"content":"     * @param input User\u0027s input."},{"lineNumber":6,"author":{"gitId":"chesterhow"},"content":"     * @return Command"},{"lineNumber":7,"author":{"gitId":"chesterhow"},"content":"     */"},{"lineNumber":8,"author":{"gitId":"chesterhow"},"content":"    public static Command parseInput(String input) {"},{"lineNumber":9,"author":{"gitId":"chesterhow"},"content":"        String[] parts \u003d input.split(\" \", 2);"},{"lineNumber":10,"author":{"gitId":"chesterhow"},"content":""},{"lineNumber":11,"author":{"gitId":"chesterhow"},"content":"        Command command;"},{"lineNumber":12,"author":{"gitId":"chesterhow"},"content":"        if (parts.length \u003c 2) {"},{"lineNumber":13,"author":{"gitId":"chesterhow"},"content":"            command \u003d new Command(parts[0]);"},{"lineNumber":14,"author":{"gitId":"chesterhow"},"content":"        } else {"},{"lineNumber":15,"author":{"gitId":"chesterhow"},"content":"            command \u003d new Command(parts[0], parts[1]);"},{"lineNumber":16,"author":{"gitId":"chesterhow"},"content":"        }"},{"lineNumber":17,"author":{"gitId":"chesterhow"},"content":""},{"lineNumber":18,"author":{"gitId":"chesterhow"},"content":"        return command;"},{"lineNumber":19,"author":{"gitId":"chesterhow"},"content":"    }"},{"lineNumber":20,"author":{"gitId":"chesterhow"},"content":"}"}],"authorContributionMap":{"chesterhow":20}},{"path":"src/main/java/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"chesterhow"},"content":"import java.util.Arrays;"},{"lineNumber":2,"author":{"gitId":"chesterhow"},"content":"import java.util.Scanner;"},{"lineNumber":3,"author":{"gitId":"chesterhow"},"content":"import java.io.File;"},{"lineNumber":4,"author":{"gitId":"chesterhow"},"content":"import java.io.FileWriter;"},{"lineNumber":5,"author":{"gitId":"chesterhow"},"content":"import java.io.IOException;"},{"lineNumber":6,"author":{"gitId":"chesterhow"},"content":"import java.time.format.DateTimeParseException;"},{"lineNumber":7,"author":{"gitId":"chesterhow"},"content":""},{"lineNumber":8,"author":{"gitId":"chesterhow"},"content":"public class Storage {"},{"lineNumber":9,"author":{"gitId":"chesterhow"},"content":"    private final File file;"},{"lineNumber":10,"author":{"gitId":"chesterhow"},"content":""},{"lineNumber":11,"author":{"gitId":"chesterhow"},"content":"    /**"},{"lineNumber":12,"author":{"gitId":"chesterhow"},"content":"     * Constructor for the Storage class."},{"lineNumber":13,"author":{"gitId":"chesterhow"},"content":"     *"},{"lineNumber":14,"author":{"gitId":"chesterhow"},"content":"     * @param dirName Name of the directory the data file is stored in."},{"lineNumber":15,"author":{"gitId":"chesterhow"},"content":"     * @param fileName Name of the data file."},{"lineNumber":16,"author":{"gitId":"chesterhow"},"content":"     */"},{"lineNumber":17,"author":{"gitId":"chesterhow"},"content":"    public Storage(String dirName, String fileName) {"},{"lineNumber":18,"author":{"gitId":"chesterhow"},"content":"        File dir \u003d new File(dirName);"},{"lineNumber":19,"author":{"gitId":"chesterhow"},"content":"        if (!dir.exists()) {"},{"lineNumber":20,"author":{"gitId":"chesterhow"},"content":"            dir.mkdir();"},{"lineNumber":21,"author":{"gitId":"chesterhow"},"content":"        }"},{"lineNumber":22,"author":{"gitId":"chesterhow"},"content":""},{"lineNumber":23,"author":{"gitId":"chesterhow"},"content":"        this.file \u003d new File(dirName + \"/\" + fileName);"},{"lineNumber":24,"author":{"gitId":"chesterhow"},"content":"    }"},{"lineNumber":25,"author":{"gitId":"chesterhow"},"content":""},{"lineNumber":26,"author":{"gitId":"chesterhow"},"content":"    private void addTodo(String[] parts, TaskList tasks) {"},{"lineNumber":27,"author":{"gitId":"chesterhow"},"content":"        Task todo \u003d new Todo(parts[2]);"},{"lineNumber":28,"author":{"gitId":"chesterhow"},"content":"        if (parts[1].equals(\"X\")) {"},{"lineNumber":29,"author":{"gitId":"chesterhow"},"content":"            todo.markDone();"},{"lineNumber":30,"author":{"gitId":"chesterhow"},"content":"        }"},{"lineNumber":31,"author":{"gitId":"chesterhow"},"content":"        tasks.add(todo);"},{"lineNumber":32,"author":{"gitId":"chesterhow"},"content":"    }"},{"lineNumber":33,"author":{"gitId":"chesterhow"},"content":""},{"lineNumber":34,"author":{"gitId":"chesterhow"},"content":"    private void addDeadline(String[] parts, TaskList tasks) throws DateTimeParseException {"},{"lineNumber":35,"author":{"gitId":"chesterhow"},"content":"        Task deadline \u003d new Deadline(parts[2], parts[3]);"},{"lineNumber":36,"author":{"gitId":"chesterhow"},"content":"        if (parts[1].equals(\"X\")) {"},{"lineNumber":37,"author":{"gitId":"chesterhow"},"content":"            deadline.markDone();"},{"lineNumber":38,"author":{"gitId":"chesterhow"},"content":"        }"},{"lineNumber":39,"author":{"gitId":"chesterhow"},"content":"        tasks.add(deadline);"},{"lineNumber":40,"author":{"gitId":"chesterhow"},"content":"    }"},{"lineNumber":41,"author":{"gitId":"chesterhow"},"content":""},{"lineNumber":42,"author":{"gitId":"chesterhow"},"content":"    private void addEvent(String[] parts, TaskList tasks) {"},{"lineNumber":43,"author":{"gitId":"chesterhow"},"content":"        Task event \u003d new Event(parts[2], parts[3]);"},{"lineNumber":44,"author":{"gitId":"chesterhow"},"content":"        if (parts[1].equals(\"X\")) {"},{"lineNumber":45,"author":{"gitId":"chesterhow"},"content":"            event.markDone();"},{"lineNumber":46,"author":{"gitId":"chesterhow"},"content":"        }"},{"lineNumber":47,"author":{"gitId":"chesterhow"},"content":"        tasks.add(event);"},{"lineNumber":48,"author":{"gitId":"chesterhow"},"content":"    }"},{"lineNumber":49,"author":{"gitId":"chesterhow"},"content":""},{"lineNumber":50,"author":{"gitId":"chesterhow"},"content":"    private void parseLine(String line, TaskList tasks, Ui ui) {"},{"lineNumber":51,"author":{"gitId":"chesterhow"},"content":"        String[] parts \u003d Arrays.stream(line.split(\"\\\\|\"))"},{"lineNumber":52,"author":{"gitId":"chesterhow"},"content":"                .map(String::trim)"},{"lineNumber":53,"author":{"gitId":"chesterhow"},"content":"                .toArray(String[]::new);"},{"lineNumber":54,"author":{"gitId":"chesterhow"},"content":""},{"lineNumber":55,"author":{"gitId":"chesterhow"},"content":"        try {"},{"lineNumber":56,"author":{"gitId":"chesterhow"},"content":"            switch (parts[0]) {"},{"lineNumber":57,"author":{"gitId":"chesterhow"},"content":"            case Command.TODO:"},{"lineNumber":58,"author":{"gitId":"chesterhow"},"content":"                addTodo(parts, tasks);"},{"lineNumber":59,"author":{"gitId":"chesterhow"},"content":"                break;"},{"lineNumber":60,"author":{"gitId":"chesterhow"},"content":"            case Command.EVENT:"},{"lineNumber":61,"author":{"gitId":"chesterhow"},"content":"                addEvent(parts, tasks);"},{"lineNumber":62,"author":{"gitId":"chesterhow"},"content":"                break;"},{"lineNumber":63,"author":{"gitId":"chesterhow"},"content":"            case Command.DEADLINE:"},{"lineNumber":64,"author":{"gitId":"chesterhow"},"content":"                addDeadline(parts, tasks);"},{"lineNumber":65,"author":{"gitId":"chesterhow"},"content":"                break;"},{"lineNumber":66,"author":{"gitId":"chesterhow"},"content":"            default:"},{"lineNumber":67,"author":{"gitId":"chesterhow"},"content":"                throw new UnknownCommandException();"},{"lineNumber":68,"author":{"gitId":"chesterhow"},"content":"            }"},{"lineNumber":69,"author":{"gitId":"chesterhow"},"content":"        } catch (UnknownCommandException exception) {"},{"lineNumber":70,"author":{"gitId":"chesterhow"},"content":"            ui.reply(ui.formatLine(exception.getMessage()));"},{"lineNumber":71,"author":{"gitId":"chesterhow"},"content":"        } catch (DateTimeParseException exception) {"},{"lineNumber":72,"author":{"gitId":"chesterhow"},"content":"            ui.reply(ui.formatLine(\"☹ Please provide dates in the \\\"dd/mm/yyyy hhmm\\\" or \\\"dd/mm/yyyy\\\" format\"));"},{"lineNumber":73,"author":{"gitId":"chesterhow"},"content":"        }"},{"lineNumber":74,"author":{"gitId":"chesterhow"},"content":"    }"},{"lineNumber":75,"author":{"gitId":"chesterhow"},"content":""},{"lineNumber":76,"author":{"gitId":"chesterhow"},"content":"    /**"},{"lineNumber":77,"author":{"gitId":"chesterhow"},"content":"     * Reads and processes data from file."},{"lineNumber":78,"author":{"gitId":"chesterhow"},"content":"     *"},{"lineNumber":79,"author":{"gitId":"chesterhow"},"content":"     * @param tasks List of tasks."},{"lineNumber":80,"author":{"gitId":"chesterhow"},"content":"     * @param ui Ui object."},{"lineNumber":81,"author":{"gitId":"chesterhow"},"content":"     * @throws IOException If an error occurs while reading from the file."},{"lineNumber":82,"author":{"gitId":"chesterhow"},"content":"     */"},{"lineNumber":83,"author":{"gitId":"chesterhow"},"content":"    public void readFromFile(TaskList tasks, Ui ui) throws IOException {"},{"lineNumber":84,"author":{"gitId":"chesterhow"},"content":"        if (!this.file.createNewFile()) {"},{"lineNumber":85,"author":{"gitId":"chesterhow"},"content":"            Scanner fileSc \u003d new Scanner(this.file);"},{"lineNumber":86,"author":{"gitId":"chesterhow"},"content":"            while (fileSc.hasNextLine()) {"},{"lineNumber":87,"author":{"gitId":"chesterhow"},"content":"                parseLine(fileSc.nextLine(), tasks, ui);"},{"lineNumber":88,"author":{"gitId":"chesterhow"},"content":"            }"},{"lineNumber":89,"author":{"gitId":"chesterhow"},"content":"            fileSc.close();"},{"lineNumber":90,"author":{"gitId":"chesterhow"},"content":"        }"},{"lineNumber":91,"author":{"gitId":"chesterhow"},"content":"    }"},{"lineNumber":92,"author":{"gitId":"chesterhow"},"content":""},{"lineNumber":93,"author":{"gitId":"chesterhow"},"content":"    /**"},{"lineNumber":94,"author":{"gitId":"chesterhow"},"content":"     * Writes task data to data file."},{"lineNumber":95,"author":{"gitId":"chesterhow"},"content":"     *"},{"lineNumber":96,"author":{"gitId":"chesterhow"},"content":"     * @param task Task to write to file."},{"lineNumber":97,"author":{"gitId":"chesterhow"},"content":"     * @throws IOException If an error occurs while writing to the file."},{"lineNumber":98,"author":{"gitId":"chesterhow"},"content":"     */"},{"lineNumber":99,"author":{"gitId":"chesterhow"},"content":"    public void writeToFile(Task task) throws IOException {"},{"lineNumber":100,"author":{"gitId":"chesterhow"},"content":"        FileWriter fw \u003d new FileWriter(this.file, true);"},{"lineNumber":101,"author":{"gitId":"chesterhow"},"content":"        fw.write(task.toFileString());"},{"lineNumber":102,"author":{"gitId":"chesterhow"},"content":"        fw.close();"},{"lineNumber":103,"author":{"gitId":"chesterhow"},"content":"    }"},{"lineNumber":104,"author":{"gitId":"chesterhow"},"content":""},{"lineNumber":105,"author":{"gitId":"chesterhow"},"content":"    /**"},{"lineNumber":106,"author":{"gitId":"chesterhow"},"content":"     * Updates task data in data file."},{"lineNumber":107,"author":{"gitId":"chesterhow"},"content":"     *"},{"lineNumber":108,"author":{"gitId":"chesterhow"},"content":"     * @param tasks List of tasks."},{"lineNumber":109,"author":{"gitId":"chesterhow"},"content":"     * @throws IOException If an error occurs while writing to the file."},{"lineNumber":110,"author":{"gitId":"chesterhow"},"content":"     */"},{"lineNumber":111,"author":{"gitId":"chesterhow"},"content":"    public void updateFile(TaskList tasks) throws IOException {"},{"lineNumber":112,"author":{"gitId":"chesterhow"},"content":"        StringBuilder buffer \u003d new StringBuilder();"},{"lineNumber":113,"author":{"gitId":"chesterhow"},"content":"        for (int i \u003d 0; i \u003c tasks.size(); i++) {"},{"lineNumber":114,"author":{"gitId":"chesterhow"},"content":"            buffer.append(tasks.getTaskAt(i).toFileString());"},{"lineNumber":115,"author":{"gitId":"chesterhow"},"content":"        }"},{"lineNumber":116,"author":{"gitId":"chesterhow"},"content":""},{"lineNumber":117,"author":{"gitId":"chesterhow"},"content":"        FileWriter fw \u003d new FileWriter(file);"},{"lineNumber":118,"author":{"gitId":"chesterhow"},"content":"        fw.write(buffer.toString());"},{"lineNumber":119,"author":{"gitId":"chesterhow"},"content":"        fw.close();"},{"lineNumber":120,"author":{"gitId":"chesterhow"},"content":"    }"},{"lineNumber":121,"author":{"gitId":"chesterhow"},"content":"}"}],"authorContributionMap":{"chesterhow":121}},{"path":"src/main/java/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"chesterhow"},"content":"public class Task {"},{"lineNumber":2,"author":{"gitId":"chesterhow"},"content":"    protected String description;"},{"lineNumber":3,"author":{"gitId":"chesterhow"},"content":"    protected boolean isDone;"},{"lineNumber":4,"author":{"gitId":"chesterhow"},"content":""},{"lineNumber":5,"author":{"gitId":"chesterhow"},"content":"    /**"},{"lineNumber":6,"author":{"gitId":"chesterhow"},"content":"     * Constructor for the Task class."},{"lineNumber":7,"author":{"gitId":"chesterhow"},"content":"     *"},{"lineNumber":8,"author":{"gitId":"chesterhow"},"content":"     * @param description Description of the task."},{"lineNumber":9,"author":{"gitId":"chesterhow"},"content":"     */"},{"lineNumber":10,"author":{"gitId":"chesterhow"},"content":"    public Task(String description) {"},{"lineNumber":11,"author":{"gitId":"chesterhow"},"content":"        this.description \u003d description.trim();"},{"lineNumber":12,"author":{"gitId":"chesterhow"},"content":"        this.isDone \u003d false;"},{"lineNumber":13,"author":{"gitId":"chesterhow"},"content":"    }"},{"lineNumber":14,"author":{"gitId":"chesterhow"},"content":""},{"lineNumber":15,"author":{"gitId":"chesterhow"},"content":"    public String getDescription() {"},{"lineNumber":16,"author":{"gitId":"chesterhow"},"content":"        return this.description;"},{"lineNumber":17,"author":{"gitId":"chesterhow"},"content":"    }"},{"lineNumber":18,"author":{"gitId":"chesterhow"},"content":""},{"lineNumber":19,"author":{"gitId":"chesterhow"},"content":"    /**"},{"lineNumber":20,"author":{"gitId":"chesterhow"},"content":"     * Marks the task as done"},{"lineNumber":21,"author":{"gitId":"chesterhow"},"content":"     */"},{"lineNumber":22,"author":{"gitId":"chesterhow"},"content":"    public void markDone() {"},{"lineNumber":23,"author":{"gitId":"chesterhow"},"content":"        this.isDone \u003d true;"},{"lineNumber":24,"author":{"gitId":"chesterhow"},"content":"    }"},{"lineNumber":25,"author":{"gitId":"chesterhow"},"content":""},{"lineNumber":26,"author":{"gitId":"chesterhow"},"content":"    /**"},{"lineNumber":27,"author":{"gitId":"chesterhow"},"content":"     * Returns the string representation of how the task will be stored in the file."},{"lineNumber":28,"author":{"gitId":"chesterhow"},"content":"     *"},{"lineNumber":29,"author":{"gitId":"chesterhow"},"content":"     * @return String"},{"lineNumber":30,"author":{"gitId":"chesterhow"},"content":"     */"},{"lineNumber":31,"author":{"gitId":"chesterhow"},"content":"    public String toFileString() {"},{"lineNumber":32,"author":{"gitId":"chesterhow"},"content":"        char done \u003d this.isDone ? \u0027X\u0027 : \u0027 \u0027;"},{"lineNumber":33,"author":{"gitId":"chesterhow"},"content":"        return String.format(\"%c | %s\", done, this.description);"},{"lineNumber":34,"author":{"gitId":"chesterhow"},"content":"    }"},{"lineNumber":35,"author":{"gitId":"chesterhow"},"content":""},{"lineNumber":36,"author":{"gitId":"chesterhow"},"content":"    public String toString() {"},{"lineNumber":37,"author":{"gitId":"chesterhow"},"content":"        char done \u003d this.isDone ? \u0027X\u0027 : \u0027 \u0027;"},{"lineNumber":38,"author":{"gitId":"chesterhow"},"content":"        return String.format(\"[%c] %s\", done, this.description);"},{"lineNumber":39,"author":{"gitId":"chesterhow"},"content":"    }"},{"lineNumber":40,"author":{"gitId":"chesterhow"},"content":"}"}],"authorContributionMap":{"chesterhow":40}},{"path":"src/main/java/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"chesterhow"},"content":"import java.util.List;"},{"lineNumber":2,"author":{"gitId":"chesterhow"},"content":"import java.util.ArrayList;"},{"lineNumber":3,"author":{"gitId":"chesterhow"},"content":""},{"lineNumber":4,"author":{"gitId":"chesterhow"},"content":"public class TaskList {"},{"lineNumber":5,"author":{"gitId":"chesterhow"},"content":"    private final List\u003cTask\u003e tasks;"},{"lineNumber":6,"author":{"gitId":"chesterhow"},"content":""},{"lineNumber":7,"author":{"gitId":"chesterhow"},"content":"    public TaskList() {"},{"lineNumber":8,"author":{"gitId":"chesterhow"},"content":"        this.tasks \u003d new ArrayList\u003c\u003e();"},{"lineNumber":9,"author":{"gitId":"chesterhow"},"content":"    }"},{"lineNumber":10,"author":{"gitId":"chesterhow"},"content":""},{"lineNumber":11,"author":{"gitId":"chesterhow"},"content":"    public void add(Task task) {"},{"lineNumber":12,"author":{"gitId":"chesterhow"},"content":"        tasks.add(task);"},{"lineNumber":13,"author":{"gitId":"chesterhow"},"content":"    }"},{"lineNumber":14,"author":{"gitId":"chesterhow"},"content":""},{"lineNumber":15,"author":{"gitId":"chesterhow"},"content":"    public Task remove(int index) {"},{"lineNumber":16,"author":{"gitId":"chesterhow"},"content":"        return tasks.remove(index);"},{"lineNumber":17,"author":{"gitId":"chesterhow"},"content":"    }"},{"lineNumber":18,"author":{"gitId":"chesterhow"},"content":""},{"lineNumber":19,"author":{"gitId":"chesterhow"},"content":"    public int size() {"},{"lineNumber":20,"author":{"gitId":"chesterhow"},"content":"        return tasks.size();"},{"lineNumber":21,"author":{"gitId":"chesterhow"},"content":"    }"},{"lineNumber":22,"author":{"gitId":"chesterhow"},"content":""},{"lineNumber":23,"author":{"gitId":"chesterhow"},"content":"    public Task getTaskAt(int index) {"},{"lineNumber":24,"author":{"gitId":"chesterhow"},"content":"        return tasks.get(index);"},{"lineNumber":25,"author":{"gitId":"chesterhow"},"content":"    }"},{"lineNumber":26,"author":{"gitId":"chesterhow"},"content":""},{"lineNumber":27,"author":{"gitId":"chesterhow"},"content":"    public TaskList findMatchingTasks(String keyword) {"},{"lineNumber":28,"author":{"gitId":"chesterhow"},"content":"        TaskList matchingTasks \u003d new TaskList();"},{"lineNumber":29,"author":{"gitId":"chesterhow"},"content":"        for (Task task: tasks) {"},{"lineNumber":30,"author":{"gitId":"chesterhow"},"content":"            if (task.getDescription().contains(keyword)) {"},{"lineNumber":31,"author":{"gitId":"chesterhow"},"content":"                matchingTasks.add(task);"},{"lineNumber":32,"author":{"gitId":"chesterhow"},"content":"            }"},{"lineNumber":33,"author":{"gitId":"chesterhow"},"content":"        }"},{"lineNumber":34,"author":{"gitId":"chesterhow"},"content":""},{"lineNumber":35,"author":{"gitId":"chesterhow"},"content":"        return matchingTasks;"},{"lineNumber":36,"author":{"gitId":"chesterhow"},"content":"    }"},{"lineNumber":37,"author":{"gitId":"chesterhow"},"content":"}"}],"authorContributionMap":{"chesterhow":37}},{"path":"src/main/java/TaskNotFoundException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"chesterhow"},"content":"public class TaskNotFoundException extends IndexOutOfBoundsException {"},{"lineNumber":2,"author":{"gitId":"chesterhow"},"content":"    public TaskNotFoundException() {"},{"lineNumber":3,"author":{"gitId":"chesterhow"},"content":"        super(\"☹ Sorry, I was not able to find the task :-(\");"},{"lineNumber":4,"author":{"gitId":"chesterhow"},"content":"    }"},{"lineNumber":5,"author":{"gitId":"chesterhow"},"content":"}"}],"authorContributionMap":{"chesterhow":5}},{"path":"src/main/java/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"chesterhow"},"content":"public class Todo extends Task {"},{"lineNumber":2,"author":{"gitId":"chesterhow"},"content":"    public Todo(String description) {"},{"lineNumber":3,"author":{"gitId":"chesterhow"},"content":"        super(description);"},{"lineNumber":4,"author":{"gitId":"chesterhow"},"content":"    }"},{"lineNumber":5,"author":{"gitId":"chesterhow"},"content":""},{"lineNumber":6,"author":{"gitId":"chesterhow"},"content":"    @Override"},{"lineNumber":7,"author":{"gitId":"chesterhow"},"content":"    public String toFileString() {"},{"lineNumber":8,"author":{"gitId":"chesterhow"},"content":"        return String.format(\"%s | %s\\n\", Command.TODO, super.toFileString());"},{"lineNumber":9,"author":{"gitId":"chesterhow"},"content":"    }"},{"lineNumber":10,"author":{"gitId":"chesterhow"},"content":""},{"lineNumber":11,"author":{"gitId":"chesterhow"},"content":"    @Override"},{"lineNumber":12,"author":{"gitId":"chesterhow"},"content":"    public String toString() {"},{"lineNumber":13,"author":{"gitId":"chesterhow"},"content":"        return \"[T]\" + super.toString();"},{"lineNumber":14,"author":{"gitId":"chesterhow"},"content":"    }"},{"lineNumber":15,"author":{"gitId":"chesterhow"},"content":"}"}],"authorContributionMap":{"chesterhow":15}},{"path":"src/main/java/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"chesterhow"},"content":"public class Ui {"},{"lineNumber":2,"author":{"gitId":"chesterhow"},"content":"    private static final String INDENTATION \u003d \"    \";"},{"lineNumber":3,"author":{"gitId":"chesterhow"},"content":"    private static final String REPLY_OUTLINE \u003d INDENTATION + \"____________________________________________________________\";"},{"lineNumber":4,"author":{"gitId":"chesterhow"},"content":""},{"lineNumber":5,"author":{"gitId":"chesterhow"},"content":"    public Ui() {"},{"lineNumber":6,"author":{"gitId":"chesterhow"},"content":"    }"},{"lineNumber":7,"author":{"gitId":"chesterhow"},"content":""},{"lineNumber":8,"author":{"gitId":"chesterhow"},"content":"    /**"},{"lineNumber":9,"author":{"gitId":"chesterhow"},"content":"     * Formats given string with indentation and line break"},{"lineNumber":10,"author":{"gitId":"chesterhow"},"content":"     *"},{"lineNumber":11,"author":{"gitId":"chesterhow"},"content":"     * @param line Line to format."},{"lineNumber":12,"author":{"gitId":"chesterhow"},"content":"     * @return Formatted line."},{"lineNumber":13,"author":{"gitId":"chesterhow"},"content":"     */"},{"lineNumber":14,"author":{"gitId":"chesterhow"},"content":"    public String formatLine(String line) {"},{"lineNumber":15,"author":{"gitId":"chesterhow"},"content":"        return INDENTATION + line + \"\\n\";"},{"lineNumber":16,"author":{"gitId":"chesterhow"},"content":"    }"},{"lineNumber":17,"author":{"gitId":"chesterhow"},"content":""},{"lineNumber":18,"author":{"gitId":"chesterhow"},"content":"    /**"},{"lineNumber":19,"author":{"gitId":"chesterhow"},"content":"     * Styles and prints given string."},{"lineNumber":20,"author":{"gitId":"chesterhow"},"content":"     *"},{"lineNumber":21,"author":{"gitId":"chesterhow"},"content":"     * @param msg Message to print."},{"lineNumber":22,"author":{"gitId":"chesterhow"},"content":"     */"},{"lineNumber":23,"author":{"gitId":"chesterhow"},"content":"    public void reply(String msg) {"},{"lineNumber":24,"author":{"gitId":"chesterhow"},"content":"        System.out.println(REPLY_OUTLINE + \"\\n\" + msg + REPLY_OUTLINE + \"\\n\");"},{"lineNumber":25,"author":{"gitId":"chesterhow"},"content":"    }"},{"lineNumber":26,"author":{"gitId":"chesterhow"},"content":""},{"lineNumber":27,"author":{"gitId":"chesterhow"},"content":"    public void greet() {"},{"lineNumber":28,"author":{"gitId":"chesterhow"},"content":"        String logo \u003d \" ____        _        \\n\""},{"lineNumber":29,"author":{"gitId":"chesterhow"},"content":"                + \"|  _ \\\\ _   _| | _____ \\n\""},{"lineNumber":30,"author":{"gitId":"chesterhow"},"content":"                + \"| | | | | | | |/ / _ \\\\\\n\""},{"lineNumber":31,"author":{"gitId":"chesterhow"},"content":"                + \"| |_| | |_| |   \u003c  __/\\n\""},{"lineNumber":32,"author":{"gitId":"chesterhow"},"content":"                + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\";"},{"lineNumber":33,"author":{"gitId":"chesterhow"},"content":"        System.out.println(\"Hello from\\n\" + logo);"},{"lineNumber":34,"author":{"gitId":"chesterhow"},"content":"        String msg \u003d formatLine(\"Hello! I\u0027m Duke\")"},{"lineNumber":35,"author":{"gitId":"chesterhow"},"content":"                + formatLine(\"What can I do for you?\");"},{"lineNumber":36,"author":{"gitId":"chesterhow"},"content":"        reply(msg);"},{"lineNumber":37,"author":{"gitId":"chesterhow"},"content":"    }"},{"lineNumber":38,"author":{"gitId":"chesterhow"},"content":""},{"lineNumber":39,"author":{"gitId":"chesterhow"},"content":"    /**"},{"lineNumber":40,"author":{"gitId":"chesterhow"},"content":"     * Prints a list of all tasks."},{"lineNumber":41,"author":{"gitId":"chesterhow"},"content":"     *"},{"lineNumber":42,"author":{"gitId":"chesterhow"},"content":"     * @param tasks List of tasks."},{"lineNumber":43,"author":{"gitId":"chesterhow"},"content":"     */"},{"lineNumber":44,"author":{"gitId":"chesterhow"},"content":"    public void list(TaskList tasks) {"},{"lineNumber":45,"author":{"gitId":"chesterhow"},"content":"        StringBuilder msg \u003d new StringBuilder(formatLine(\"Here are the tasks in your list:\"));"},{"lineNumber":46,"author":{"gitId":"chesterhow"},"content":""},{"lineNumber":47,"author":{"gitId":"chesterhow"},"content":"        for (int i \u003d 0; i \u003c tasks.size(); i++) {"},{"lineNumber":48,"author":{"gitId":"chesterhow"},"content":"            msg.append(formatLine((i + 1) + \". \" + tasks.getTaskAt(i)));"},{"lineNumber":49,"author":{"gitId":"chesterhow"},"content":"        }"},{"lineNumber":50,"author":{"gitId":"chesterhow"},"content":"        reply(msg.toString());"},{"lineNumber":51,"author":{"gitId":"chesterhow"},"content":"    }"},{"lineNumber":52,"author":{"gitId":"chesterhow"},"content":""},{"lineNumber":53,"author":{"gitId":"chesterhow"},"content":"    public void exit() {"},{"lineNumber":54,"author":{"gitId":"chesterhow"},"content":"        reply(formatLine(\"Bye. Hope to see you again soon!\"));"},{"lineNumber":55,"author":{"gitId":"chesterhow"},"content":"    }"},{"lineNumber":56,"author":{"gitId":"chesterhow"},"content":""},{"lineNumber":57,"author":{"gitId":"chesterhow"},"content":"    /**"},{"lineNumber":58,"author":{"gitId":"chesterhow"},"content":"     * Prints a reply, having added a task."},{"lineNumber":59,"author":{"gitId":"chesterhow"},"content":"     *"},{"lineNumber":60,"author":{"gitId":"chesterhow"},"content":"     * @param task Task that was added."},{"lineNumber":61,"author":{"gitId":"chesterhow"},"content":"     * @param numTasks Total number of tasks in task list."},{"lineNumber":62,"author":{"gitId":"chesterhow"},"content":"     */"},{"lineNumber":63,"author":{"gitId":"chesterhow"},"content":"    public void addedTaskReply(Task task, int numTasks) {"},{"lineNumber":64,"author":{"gitId":"chesterhow"},"content":"        String msg \u003d formatLine(\"Got it. I\u0027ve added this task:\")"},{"lineNumber":65,"author":{"gitId":"chesterhow"},"content":"                + formatLine(\"  \" + task)"},{"lineNumber":66,"author":{"gitId":"chesterhow"},"content":"                + formatLine(\"Now you have \" + numTasks + \" tasks in the list.\");"},{"lineNumber":67,"author":{"gitId":"chesterhow"},"content":"        reply(msg);"},{"lineNumber":68,"author":{"gitId":"chesterhow"},"content":"    }"},{"lineNumber":69,"author":{"gitId":"chesterhow"},"content":""},{"lineNumber":70,"author":{"gitId":"chesterhow"},"content":"    /**"},{"lineNumber":71,"author":{"gitId":"chesterhow"},"content":"     * Prints a reply, having marked a task as done."},{"lineNumber":72,"author":{"gitId":"chesterhow"},"content":"     *"},{"lineNumber":73,"author":{"gitId":"chesterhow"},"content":"     * @param task Task that was marked as done."},{"lineNumber":74,"author":{"gitId":"chesterhow"},"content":"     */"},{"lineNumber":75,"author":{"gitId":"chesterhow"},"content":"    public void markDoneReply(Task task) {"},{"lineNumber":76,"author":{"gitId":"chesterhow"},"content":"        String msg \u003d formatLine(\"Nice! I\u0027ve marked this task as done:\")"},{"lineNumber":77,"author":{"gitId":"chesterhow"},"content":"                + formatLine(\"  \" + task);"},{"lineNumber":78,"author":{"gitId":"chesterhow"},"content":"        reply(msg);"},{"lineNumber":79,"author":{"gitId":"chesterhow"},"content":"    }"},{"lineNumber":80,"author":{"gitId":"chesterhow"},"content":""},{"lineNumber":81,"author":{"gitId":"chesterhow"},"content":"    /**"},{"lineNumber":82,"author":{"gitId":"chesterhow"},"content":"     * Prints a reply, having deleted a task."},{"lineNumber":83,"author":{"gitId":"chesterhow"},"content":"     *"},{"lineNumber":84,"author":{"gitId":"chesterhow"},"content":"     * @param deletedTask Task that was deleted."},{"lineNumber":85,"author":{"gitId":"chesterhow"},"content":"     * @param numTasks Number of tasks in task list."},{"lineNumber":86,"author":{"gitId":"chesterhow"},"content":"     */"},{"lineNumber":87,"author":{"gitId":"chesterhow"},"content":"    public void deleteReply(Task deletedTask, int numTasks) {"},{"lineNumber":88,"author":{"gitId":"chesterhow"},"content":"        String msg \u003d formatLine(\"Noted. I\u0027ve removed this task:\")"},{"lineNumber":89,"author":{"gitId":"chesterhow"},"content":"                + formatLine(\"  \" + deletedTask)"},{"lineNumber":90,"author":{"gitId":"chesterhow"},"content":"                + formatLine(\"Now you have \" + numTasks + \" tasks in the list.\");"},{"lineNumber":91,"author":{"gitId":"chesterhow"},"content":"        reply(msg);"},{"lineNumber":92,"author":{"gitId":"chesterhow"},"content":"    }"},{"lineNumber":93,"author":{"gitId":"chesterhow"},"content":""},{"lineNumber":94,"author":{"gitId":"chesterhow"},"content":"    public void listMatchingTasks(TaskList tasks) {"},{"lineNumber":95,"author":{"gitId":"chesterhow"},"content":"        if (tasks.size() \u003e 0) {"},{"lineNumber":96,"author":{"gitId":"chesterhow"},"content":"            StringBuilder msg \u003d new StringBuilder(formatLine(\"Here are the matching tasks in your list:\"));"},{"lineNumber":97,"author":{"gitId":"chesterhow"},"content":""},{"lineNumber":98,"author":{"gitId":"chesterhow"},"content":"            for (int i \u003d 0; i \u003c tasks.size(); i++) {"},{"lineNumber":99,"author":{"gitId":"chesterhow"},"content":"                msg.append(formatLine((i + 1) + \". \" + tasks.getTaskAt(i)));"},{"lineNumber":100,"author":{"gitId":"chesterhow"},"content":"            }"},{"lineNumber":101,"author":{"gitId":"chesterhow"},"content":"            reply(msg.toString());"},{"lineNumber":102,"author":{"gitId":"chesterhow"},"content":"        } else {"},{"lineNumber":103,"author":{"gitId":"chesterhow"},"content":"            reply(formatLine(\"No matching tasks were found.\"));"},{"lineNumber":104,"author":{"gitId":"chesterhow"},"content":"        }"},{"lineNumber":105,"author":{"gitId":"chesterhow"},"content":"    }"},{"lineNumber":106,"author":{"gitId":"chesterhow"},"content":"}"}],"authorContributionMap":{"chesterhow":106}},{"path":"src/main/java/UnknownCommandException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"chesterhow"},"content":"public class UnknownCommandException extends IllegalArgumentException {"},{"lineNumber":2,"author":{"gitId":"chesterhow"},"content":"    public UnknownCommandException() {"},{"lineNumber":3,"author":{"gitId":"chesterhow"},"content":"        super(\"☹ I\u0027m sorry, but I don\u0027t know what that means :-(\");"},{"lineNumber":4,"author":{"gitId":"chesterhow"},"content":"    }"},{"lineNumber":5,"author":{"gitId":"chesterhow"},"content":"}"}],"authorContributionMap":{"chesterhow":5}},{"path":"src/test/java/CommandTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"chesterhow"},"content":"import org.junit.jupiter.api.Test;"},{"lineNumber":2,"author":{"gitId":"chesterhow"},"content":""},{"lineNumber":3,"author":{"gitId":"chesterhow"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;"},{"lineNumber":4,"author":{"gitId":"chesterhow"},"content":""},{"lineNumber":5,"author":{"gitId":"chesterhow"},"content":"public class CommandTest  {"},{"lineNumber":6,"author":{"gitId":"chesterhow"},"content":"    @Test"},{"lineNumber":7,"author":{"gitId":"chesterhow"},"content":"    public void createCommandNoArgs_incompleteInstruction_exceptionThrown() {"},{"lineNumber":8,"author":{"gitId":"chesterhow"},"content":"        assertThrows(EmptyDescriptionException.class, () -\u003e {"},{"lineNumber":9,"author":{"gitId":"chesterhow"},"content":"            new Command(\"todo\");"},{"lineNumber":10,"author":{"gitId":"chesterhow"},"content":"        });"},{"lineNumber":11,"author":{"gitId":"chesterhow"},"content":"    }"},{"lineNumber":12,"author":{"gitId":"chesterhow"},"content":""},{"lineNumber":13,"author":{"gitId":"chesterhow"},"content":"    @Test"},{"lineNumber":14,"author":{"gitId":"chesterhow"},"content":"    public void createCommand_unknownInstruction_exceptionThrown() {"},{"lineNumber":15,"author":{"gitId":"chesterhow"},"content":"        assertThrows(UnknownCommandException.class, () -\u003e {"},{"lineNumber":16,"author":{"gitId":"chesterhow"},"content":"            new Command(\"hello\", \"args\");"},{"lineNumber":17,"author":{"gitId":"chesterhow"},"content":"        });"},{"lineNumber":18,"author":{"gitId":"chesterhow"},"content":"    }"},{"lineNumber":19,"author":{"gitId":"chesterhow"},"content":"}"}],"authorContributionMap":{"chesterhow":19}},{"path":"src/test/java/DeadlineTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"chesterhow"},"content":"import org.junit.jupiter.api.Test;"},{"lineNumber":2,"author":{"gitId":"chesterhow"},"content":""},{"lineNumber":3,"author":{"gitId":"chesterhow"},"content":"import java.time.format.DateTimeParseException;"},{"lineNumber":4,"author":{"gitId":"chesterhow"},"content":""},{"lineNumber":5,"author":{"gitId":"chesterhow"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;"},{"lineNumber":6,"author":{"gitId":"chesterhow"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;"},{"lineNumber":7,"author":{"gitId":"chesterhow"},"content":"import static org.junit.jupiter.api.Assertions.assertDoesNotThrow;"},{"lineNumber":8,"author":{"gitId":"chesterhow"},"content":""},{"lineNumber":9,"author":{"gitId":"chesterhow"},"content":"public class DeadlineTest {"},{"lineNumber":10,"author":{"gitId":"chesterhow"},"content":"    @Test"},{"lineNumber":11,"author":{"gitId":"chesterhow"},"content":"    public void createDeadline_validDateTime_success() {"},{"lineNumber":12,"author":{"gitId":"chesterhow"},"content":"        assertDoesNotThrow(() -\u003e {"},{"lineNumber":13,"author":{"gitId":"chesterhow"},"content":"            new Deadline(\"some item\", \"01/01/2021 1030\");"},{"lineNumber":14,"author":{"gitId":"chesterhow"},"content":"            new Deadline(\"some item\", \"01/01/2021\");"},{"lineNumber":15,"author":{"gitId":"chesterhow"},"content":"        });"},{"lineNumber":16,"author":{"gitId":"chesterhow"},"content":"    }"},{"lineNumber":17,"author":{"gitId":"chesterhow"},"content":""},{"lineNumber":18,"author":{"gitId":"chesterhow"},"content":"    @Test"},{"lineNumber":19,"author":{"gitId":"chesterhow"},"content":"    public void createDeadline_invalidDateTime_exceptionThrown() {"},{"lineNumber":20,"author":{"gitId":"chesterhow"},"content":"        assertThrows(DateTimeParseException.class, () -\u003e {"},{"lineNumber":21,"author":{"gitId":"chesterhow"},"content":"            new Deadline(\"some item\", \"01/01/20\");"},{"lineNumber":22,"author":{"gitId":"chesterhow"},"content":"        });"},{"lineNumber":23,"author":{"gitId":"chesterhow"},"content":"    }"},{"lineNumber":24,"author":{"gitId":"chesterhow"},"content":""},{"lineNumber":25,"author":{"gitId":"chesterhow"},"content":"    @Test"},{"lineNumber":26,"author":{"gitId":"chesterhow"},"content":"    public void toString_validInputs_outputsCorrectly() {"},{"lineNumber":27,"author":{"gitId":"chesterhow"},"content":"        String actualOutput \u003d new Deadline(\"some item\", \"01/01/2021\").toString();"},{"lineNumber":28,"author":{"gitId":"chesterhow"},"content":"        assertEquals(\"[D][ ] some item (by: 01 Jan 2021)\", actualOutput);"},{"lineNumber":29,"author":{"gitId":"chesterhow"},"content":"    }"},{"lineNumber":30,"author":{"gitId":"chesterhow"},"content":"}"}],"authorContributionMap":{"chesterhow":30}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"chesterhow"},"content":"todo buy milk"},{"lineNumber":2,"author":{"gitId":"chesterhow"},"content":"list"},{"lineNumber":3,"author":{"gitId":"chesterhow"},"content":"deadline submit homework /by sunday 9pm"},{"lineNumber":4,"author":{"gitId":"chesterhow"},"content":"done 1"},{"lineNumber":5,"author":{"gitId":"chesterhow"},"content":"list"},{"lineNumber":6,"author":{"gitId":"chesterhow"},"content":"event attend class /at monday 10am"},{"lineNumber":7,"author":{"gitId":"chesterhow"},"content":"done 2"},{"lineNumber":8,"author":{"gitId":"chesterhow"},"content":"list"},{"lineNumber":9,"author":{"gitId":"chesterhow"},"content":"delete 3"},{"lineNumber":10,"author":{"gitId":"chesterhow"},"content":"delete 3"},{"lineNumber":11,"author":{"gitId":"chesterhow"},"content":"list"},{"lineNumber":12,"author":{"gitId":"chesterhow"},"content":"bye"}],"authorContributionMap":{"chesterhow":12}}]
