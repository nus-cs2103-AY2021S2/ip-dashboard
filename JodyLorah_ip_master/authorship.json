[{"path":"src/main/java/AddCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"JodyLorah"},"content":"/**"},{"lineNumber":2,"author":{"gitId":"JodyLorah"},"content":" * AddCommand class which is a type of Command to be executed."},{"lineNumber":3,"author":{"gitId":"JodyLorah"},"content":" */"},{"lineNumber":4,"author":{"gitId":"JodyLorah"},"content":""},{"lineNumber":5,"author":{"gitId":"JodyLorah"},"content":"public class AddCommand extends Command {"},{"lineNumber":6,"author":{"gitId":"JodyLorah"},"content":"    String type;"},{"lineNumber":7,"author":{"gitId":"JodyLorah"},"content":""},{"lineNumber":8,"author":{"gitId":"JodyLorah"},"content":"    /**"},{"lineNumber":9,"author":{"gitId":"JodyLorah"},"content":"     * Handles Todo, Deadline and Event commands."},{"lineNumber":10,"author":{"gitId":"JodyLorah"},"content":"     * Triggers the DataHandler to handle the commands."},{"lineNumber":11,"author":{"gitId":"JodyLorah"},"content":"     *"},{"lineNumber":12,"author":{"gitId":"JodyLorah"},"content":"     * @param t details of the task"},{"lineNumber":13,"author":{"gitId":"JodyLorah"},"content":"     *"},{"lineNumber":14,"author":{"gitId":"JodyLorah"},"content":"     */"},{"lineNumber":15,"author":{"gitId":"JodyLorah"},"content":""},{"lineNumber":16,"author":{"gitId":"JodyLorah"},"content":"    public AddCommand(String t) {"},{"lineNumber":17,"author":{"gitId":"JodyLorah"},"content":"        this.type \u003d t;"},{"lineNumber":18,"author":{"gitId":"JodyLorah"},"content":"    }"},{"lineNumber":19,"author":{"gitId":"JodyLorah"},"content":""},{"lineNumber":20,"author":{"gitId":"JodyLorah"},"content":"    /**"},{"lineNumber":21,"author":{"gitId":"JodyLorah"},"content":"     * Executes the Command in DataHandler."},{"lineNumber":22,"author":{"gitId":"JodyLorah"},"content":"     *"},{"lineNumber":23,"author":{"gitId":"JodyLorah"},"content":"     * @param tasks list of tasks where this new task is added to"},{"lineNumber":24,"author":{"gitId":"JodyLorah"},"content":"     * @param input details of the task"},{"lineNumber":25,"author":{"gitId":"JodyLorah"},"content":"     * @param dataHandler handles the various tasks according to their type"},{"lineNumber":26,"author":{"gitId":"JodyLorah"},"content":"     */"},{"lineNumber":27,"author":{"gitId":"JodyLorah"},"content":""},{"lineNumber":28,"author":{"gitId":"JodyLorah"},"content":"    public void execute(TaskList tasks, String input, DataHandler dataHandler) {"},{"lineNumber":29,"author":{"gitId":"JodyLorah"},"content":"        String type \u003d input.split(\" \")[0];"},{"lineNumber":30,"author":{"gitId":"JodyLorah"},"content":""},{"lineNumber":31,"author":{"gitId":"JodyLorah"},"content":"        if (type.equals(\"todo\")) {"},{"lineNumber":32,"author":{"gitId":"JodyLorah"},"content":"            tasks.addToDo(input);"},{"lineNumber":33,"author":{"gitId":"JodyLorah"},"content":"            dataHandler.saveData(tasks);"},{"lineNumber":34,"author":{"gitId":"JodyLorah"},"content":"        } else if (type.equals(\"deadline\")) {"},{"lineNumber":35,"author":{"gitId":"JodyLorah"},"content":"            tasks.addDeadline(input);"},{"lineNumber":36,"author":{"gitId":"JodyLorah"},"content":"            dataHandler.saveData(tasks);"},{"lineNumber":37,"author":{"gitId":"JodyLorah"},"content":"        } else if (type.equals(\"event\")) {"},{"lineNumber":38,"author":{"gitId":"JodyLorah"},"content":"            tasks.addEvent(input);"},{"lineNumber":39,"author":{"gitId":"JodyLorah"},"content":"            dataHandler.saveData(tasks);"},{"lineNumber":40,"author":{"gitId":"JodyLorah"},"content":"        } else {"},{"lineNumber":41,"author":{"gitId":"JodyLorah"},"content":"            new InvalidInstructionException();"},{"lineNumber":42,"author":{"gitId":"JodyLorah"},"content":"            return;"},{"lineNumber":43,"author":{"gitId":"JodyLorah"},"content":"        }"},{"lineNumber":44,"author":{"gitId":"JodyLorah"},"content":"    }"},{"lineNumber":45,"author":{"gitId":"JodyLorah"},"content":""},{"lineNumber":46,"author":{"gitId":"JodyLorah"},"content":"    /**"},{"lineNumber":47,"author":{"gitId":"JodyLorah"},"content":"     * Checks if it is time to exit Duke."},{"lineNumber":48,"author":{"gitId":"JodyLorah"},"content":"     */"},{"lineNumber":49,"author":{"gitId":"JodyLorah"},"content":""},{"lineNumber":50,"author":{"gitId":"JodyLorah"},"content":"    public boolean isExit() {"},{"lineNumber":51,"author":{"gitId":"JodyLorah"},"content":"        return false;"},{"lineNumber":52,"author":{"gitId":"JodyLorah"},"content":"    }"},{"lineNumber":53,"author":{"gitId":"JodyLorah"},"content":"}"}],"authorContributionMap":{"JodyLorah":53}},{"path":"src/main/java/AlphabetsInsteadOfNumberException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"JodyLorah"},"content":"/**"},{"lineNumber":2,"author":{"gitId":"JodyLorah"},"content":" * Exception where user keys in alphabet when he is supposed to key in a number."},{"lineNumber":3,"author":{"gitId":"JodyLorah"},"content":" */"},{"lineNumber":4,"author":{"gitId":"JodyLorah"},"content":""},{"lineNumber":5,"author":{"gitId":"JodyLorah"},"content":"public class AlphabetsInsteadOfNumberException {"},{"lineNumber":6,"author":{"gitId":"JodyLorah"},"content":""},{"lineNumber":7,"author":{"gitId":"JodyLorah"},"content":"    /**"},{"lineNumber":8,"author":{"gitId":"JodyLorah"},"content":"     * Method to throw the Exception."},{"lineNumber":9,"author":{"gitId":"JodyLorah"},"content":"     */"},{"lineNumber":10,"author":{"gitId":"JodyLorah"},"content":"    public AlphabetsInsteadOfNumberException() {"},{"lineNumber":11,"author":{"gitId":"JodyLorah"},"content":"        System.out.println(\"------------------------------------------\\n\""},{"lineNumber":12,"author":{"gitId":"JodyLorah"},"content":"                + \"â˜¹ OOPS!!! I\u0027m sorry, but you keyed in an alphabet. \""},{"lineNumber":13,"author":{"gitId":"JodyLorah"},"content":"                + \"You can only delete a number from the list.\\n\""},{"lineNumber":14,"author":{"gitId":"JodyLorah"},"content":"                + \"------------------------------------------\");"},{"lineNumber":15,"author":{"gitId":"JodyLorah"},"content":"    }"},{"lineNumber":16,"author":{"gitId":"JodyLorah"},"content":"}"}],"authorContributionMap":{"JodyLorah":16}},{"path":"src/main/java/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"JodyLorah"},"content":"/**"},{"lineNumber":2,"author":{"gitId":"JodyLorah"},"content":" * Abstract class for all various commands."},{"lineNumber":3,"author":{"gitId":"JodyLorah"},"content":" */"},{"lineNumber":4,"author":{"gitId":"JodyLorah"},"content":""},{"lineNumber":5,"author":{"gitId":"JodyLorah"},"content":"public abstract class Command {"},{"lineNumber":6,"author":{"gitId":"JodyLorah"},"content":""},{"lineNumber":7,"author":{"gitId":"JodyLorah"},"content":"    /**"},{"lineNumber":8,"author":{"gitId":"JodyLorah"},"content":"     * Executes the Command in DataHandler."},{"lineNumber":9,"author":{"gitId":"JodyLorah"},"content":"     *"},{"lineNumber":10,"author":{"gitId":"JodyLorah"},"content":"     * @param tasks list of tasks where this new task is added to"},{"lineNumber":11,"author":{"gitId":"JodyLorah"},"content":"     * @param input details of the task"},{"lineNumber":12,"author":{"gitId":"JodyLorah"},"content":"     * @param dataHandler handles the various tasks according to their type"},{"lineNumber":13,"author":{"gitId":"JodyLorah"},"content":"     */"},{"lineNumber":14,"author":{"gitId":"JodyLorah"},"content":"    public abstract void execute(TaskList tasks, String input, DataHandler dataHandler);"},{"lineNumber":15,"author":{"gitId":"JodyLorah"},"content":""},{"lineNumber":16,"author":{"gitId":"JodyLorah"},"content":"    /**"},{"lineNumber":17,"author":{"gitId":"JodyLorah"},"content":"     * Checks if it is time to exit Duke."},{"lineNumber":18,"author":{"gitId":"JodyLorah"},"content":"     */"},{"lineNumber":19,"author":{"gitId":"JodyLorah"},"content":"    public abstract boolean isExit();"},{"lineNumber":20,"author":{"gitId":"JodyLorah"},"content":"}"}],"authorContributionMap":{"JodyLorah":20}},{"path":"src/main/java/DataHandler.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"JodyLorah"},"content":"import java.io.File;"},{"lineNumber":2,"author":{"gitId":"JodyLorah"},"content":"import java.io.FileNotFoundException;"},{"lineNumber":3,"author":{"gitId":"JodyLorah"},"content":"import java.io.FileWriter;"},{"lineNumber":4,"author":{"gitId":"JodyLorah"},"content":"import java.io.IOException;"},{"lineNumber":5,"author":{"gitId":"JodyLorah"},"content":"import java.nio.file.Files;"},{"lineNumber":6,"author":{"gitId":"JodyLorah"},"content":"import java.nio.file.Path;"},{"lineNumber":7,"author":{"gitId":"JodyLorah"},"content":"import java.nio.file.Paths;"},{"lineNumber":8,"author":{"gitId":"JodyLorah"},"content":"import java.time.LocalDateTime;"},{"lineNumber":9,"author":{"gitId":"JodyLorah"},"content":"import java.time.format.DateTimeFormatter;"},{"lineNumber":10,"author":{"gitId":"JodyLorah"},"content":"import java.util.Scanner;"},{"lineNumber":11,"author":{"gitId":"JodyLorah"},"content":""},{"lineNumber":12,"author":{"gitId":"JodyLorah"},"content":"/**"},{"lineNumber":13,"author":{"gitId":"JodyLorah"},"content":" * Stores and Retrieves data from a given .txt file and loads it into TaskList."},{"lineNumber":14,"author":{"gitId":"JodyLorah"},"content":" */"},{"lineNumber":15,"author":{"gitId":"JodyLorah"},"content":"public class DataHandler {"},{"lineNumber":16,"author":{"gitId":"JodyLorah"},"content":"    String str;"},{"lineNumber":17,"author":{"gitId":"JodyLorah"},"content":""},{"lineNumber":18,"author":{"gitId":"JodyLorah"},"content":"    /**"},{"lineNumber":19,"author":{"gitId":"JodyLorah"},"content":"     * Stores filePath."},{"lineNumber":20,"author":{"gitId":"JodyLorah"},"content":"     *"},{"lineNumber":21,"author":{"gitId":"JodyLorah"},"content":"     * @param filePath path where files are stored and retrieved"},{"lineNumber":22,"author":{"gitId":"JodyLorah"},"content":"     */"},{"lineNumber":23,"author":{"gitId":"JodyLorah"},"content":"    public DataHandler(String filePath) {"},{"lineNumber":24,"author":{"gitId":"JodyLorah"},"content":"        this.str \u003d filePath;"},{"lineNumber":25,"author":{"gitId":"JodyLorah"},"content":"    }"},{"lineNumber":26,"author":{"gitId":"JodyLorah"},"content":""},{"lineNumber":27,"author":{"gitId":"JodyLorah"},"content":"    /**"},{"lineNumber":28,"author":{"gitId":"JodyLorah"},"content":"     * Saves data back in file in designated filePath."},{"lineNumber":29,"author":{"gitId":"JodyLorah"},"content":"     *"},{"lineNumber":30,"author":{"gitId":"JodyLorah"},"content":"     * @param li TaskList of data to be saved"},{"lineNumber":31,"author":{"gitId":"JodyLorah"},"content":"     * @throws IOException  If file is corrupt"},{"lineNumber":32,"author":{"gitId":"JodyLorah"},"content":"     */"},{"lineNumber":33,"author":{"gitId":"JodyLorah"},"content":"    public static void saveData(TaskList li) {"},{"lineNumber":34,"author":{"gitId":"JodyLorah"},"content":"        //potential problem: saveData doesnt update .txt file"},{"lineNumber":35,"author":{"gitId":"JodyLorah"},"content":"        // when i change done status of item to done"},{"lineNumber":36,"author":{"gitId":"JodyLorah"},"content":"        try {"},{"lineNumber":37,"author":{"gitId":"JodyLorah"},"content":"            Path currPath \u003d Paths.get(\"\");"},{"lineNumber":38,"author":{"gitId":"JodyLorah"},"content":"            FileWriter fw \u003d new FileWriter(currPath.toAbsolutePath().toString() + \"/duke.txt\");"},{"lineNumber":39,"author":{"gitId":"JodyLorah"},"content":"            for (int i \u003d 0; i \u003c li.getSize(); i++) {"},{"lineNumber":40,"author":{"gitId":"JodyLorah"},"content":"                String write \u003d li.getInd(i) + \"\\n\";"},{"lineNumber":41,"author":{"gitId":"JodyLorah"},"content":"                fw.write(write);"},{"lineNumber":42,"author":{"gitId":"JodyLorah"},"content":"            }"},{"lineNumber":43,"author":{"gitId":"JodyLorah"},"content":"            fw.close();"},{"lineNumber":44,"author":{"gitId":"JodyLorah"},"content":"        } catch (IOException e) {"},{"lineNumber":45,"author":{"gitId":"JodyLorah"},"content":"            System.out.println(\"Something went wrong: \" + e.getMessage());"},{"lineNumber":46,"author":{"gitId":"JodyLorah"},"content":"        }"},{"lineNumber":47,"author":{"gitId":"JodyLorah"},"content":"    }"},{"lineNumber":48,"author":{"gitId":"JodyLorah"},"content":""},{"lineNumber":49,"author":{"gitId":"JodyLorah"},"content":"    /**"},{"lineNumber":50,"author":{"gitId":"JodyLorah"},"content":"     * Loads data from designated file and converts it to a TaskList."},{"lineNumber":51,"author":{"gitId":"JodyLorah"},"content":"     *"},{"lineNumber":52,"author":{"gitId":"JodyLorah"},"content":"     * @return list TaskList of all loaded data"},{"lineNumber":53,"author":{"gitId":"JodyLorah"},"content":"     * @throws FileNotFoundException  If file cannot be found in path"},{"lineNumber":54,"author":{"gitId":"JodyLorah"},"content":"     */"},{"lineNumber":55,"author":{"gitId":"JodyLorah"},"content":"    public static TaskList loadData() throws FileNotFoundException {"},{"lineNumber":56,"author":{"gitId":"JodyLorah"},"content":"        Path currPath \u003d Paths.get(\"\");"},{"lineNumber":57,"author":{"gitId":"JodyLorah"},"content":"        Path dukePath \u003d Paths.get(currPath.toAbsolutePath().toString() + \"/duke.txt\");"},{"lineNumber":58,"author":{"gitId":"JodyLorah"},"content":"        TaskList list \u003d new TaskList();"},{"lineNumber":59,"author":{"gitId":"JodyLorah"},"content":""},{"lineNumber":60,"author":{"gitId":"JodyLorah"},"content":"        if (Files.exists(dukePath)) { //load list data"},{"lineNumber":61,"author":{"gitId":"JodyLorah"},"content":"            File info \u003d new File(String.valueOf(dukePath));"},{"lineNumber":62,"author":{"gitId":"JodyLorah"},"content":"            Scanner sc \u003d new Scanner(info);"},{"lineNumber":63,"author":{"gitId":"JodyLorah"},"content":"            while (sc.hasNextLine()) {"},{"lineNumber":64,"author":{"gitId":"JodyLorah"},"content":"                String task \u003d sc.nextLine();"},{"lineNumber":65,"author":{"gitId":"JodyLorah"},"content":"                String[] arr \u003d task.split(\"\");"},{"lineNumber":66,"author":{"gitId":"JodyLorah"},"content":"                if (arr[1].equals(\"T\")) {"},{"lineNumber":67,"author":{"gitId":"JodyLorah"},"content":"                    Boolean done \u003d false;"},{"lineNumber":68,"author":{"gitId":"JodyLorah"},"content":"                    if (arr[4].equals(\"X\")) {"},{"lineNumber":69,"author":{"gitId":"JodyLorah"},"content":"                        done \u003d true;"},{"lineNumber":70,"author":{"gitId":"JodyLorah"},"content":"                    }"},{"lineNumber":71,"author":{"gitId":"JodyLorah"},"content":"                    String taskDetails \u003d \"\";"},{"lineNumber":72,"author":{"gitId":"JodyLorah"},"content":"                    for (int j \u003d 7; j \u003c arr.length; j++) {"},{"lineNumber":73,"author":{"gitId":"JodyLorah"},"content":"                        taskDetails +\u003d arr[j];"},{"lineNumber":74,"author":{"gitId":"JodyLorah"},"content":"                    }"},{"lineNumber":75,"author":{"gitId":"JodyLorah"},"content":""},{"lineNumber":76,"author":{"gitId":"JodyLorah"},"content":"                    Task t \u003d new Todo(taskDetails);"},{"lineNumber":77,"author":{"gitId":"JodyLorah"},"content":"                    if (done) {"},{"lineNumber":78,"author":{"gitId":"JodyLorah"},"content":"                        t.setDone();"},{"lineNumber":79,"author":{"gitId":"JodyLorah"},"content":"                    }"},{"lineNumber":80,"author":{"gitId":"JodyLorah"},"content":"                    list.addToDo(t);"},{"lineNumber":81,"author":{"gitId":"JodyLorah"},"content":"                } else if (arr[1].equals(\"D\")) {"},{"lineNumber":82,"author":{"gitId":"JodyLorah"},"content":"                    String taskDetails \u003d \"\";"},{"lineNumber":83,"author":{"gitId":"JodyLorah"},"content":"                    Boolean done \u003d false;"},{"lineNumber":84,"author":{"gitId":"JodyLorah"},"content":"                    if (arr[4].equals(\"X\")) {"},{"lineNumber":85,"author":{"gitId":"JodyLorah"},"content":"                        done \u003d true;"},{"lineNumber":86,"author":{"gitId":"JodyLorah"},"content":"                    }"},{"lineNumber":87,"author":{"gitId":"JodyLorah"},"content":"                    for (int j \u003d 7; j \u003c arr.length; j++) {"},{"lineNumber":88,"author":{"gitId":"JodyLorah"},"content":"                        taskDetails +\u003d arr[j];"},{"lineNumber":89,"author":{"gitId":"JodyLorah"},"content":"                    }"},{"lineNumber":90,"author":{"gitId":"JodyLorah"},"content":"                    arr \u003d taskDetails.split(\"[(]\");"},{"lineNumber":91,"author":{"gitId":"JodyLorah"},"content":"                    String[] deets \u003d arr[0].split(\"\");"},{"lineNumber":92,"author":{"gitId":"JodyLorah"},"content":"                    String description \u003d \"\";"},{"lineNumber":93,"author":{"gitId":"JodyLorah"},"content":"                    for (int t \u003d 0; t \u003c arr[0].length() - 1; t++) {"},{"lineNumber":94,"author":{"gitId":"JodyLorah"},"content":"                        description +\u003d deets[t];"},{"lineNumber":95,"author":{"gitId":"JodyLorah"},"content":"                    }"},{"lineNumber":96,"author":{"gitId":"JodyLorah"},"content":"                    taskDetails \u003d arr[1];"},{"lineNumber":97,"author":{"gitId":"JodyLorah"},"content":"                    arr \u003d taskDetails.split(\" by:\", 2);"},{"lineNumber":98,"author":{"gitId":"JodyLorah"},"content":"                    String by \u003d \"\";"},{"lineNumber":99,"author":{"gitId":"JodyLorah"},"content":"                    String details \u003d arr[0];"},{"lineNumber":100,"author":{"gitId":"JodyLorah"},"content":"                    arr \u003d details.split(\"\");"},{"lineNumber":101,"author":{"gitId":"JodyLorah"},"content":"                    for (int k \u003d 4; k \u003c arr.length - 1; k++) {"},{"lineNumber":102,"author":{"gitId":"JodyLorah"},"content":"                        by +\u003d arr[k];"},{"lineNumber":103,"author":{"gitId":"JodyLorah"},"content":"                    }"},{"lineNumber":104,"author":{"gitId":"JodyLorah"},"content":"                    DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"MMM dd yyyy HH:mm\");"},{"lineNumber":105,"author":{"gitId":"JodyLorah"},"content":"                    LocalDateTime dateTime \u003d LocalDateTime.parse(by, formatter);"},{"lineNumber":106,"author":{"gitId":"JodyLorah"},"content":"                    Task t \u003d new Deadline(description, dateTime);"},{"lineNumber":107,"author":{"gitId":"JodyLorah"},"content":"                    if (done) {"},{"lineNumber":108,"author":{"gitId":"JodyLorah"},"content":"                        t.setDone();"},{"lineNumber":109,"author":{"gitId":"JodyLorah"},"content":"                    }"},{"lineNumber":110,"author":{"gitId":"JodyLorah"},"content":"                    list.addDeadline(t);"},{"lineNumber":111,"author":{"gitId":"JodyLorah"},"content":"                } else if (arr[1].equals(\"E\")) {"},{"lineNumber":112,"author":{"gitId":"JodyLorah"},"content":"                    String taskDetails \u003d \"\";"},{"lineNumber":113,"author":{"gitId":"JodyLorah"},"content":"                    Boolean done \u003d false;"},{"lineNumber":114,"author":{"gitId":"JodyLorah"},"content":"                    if (arr[4].equals(\"X\")) {"},{"lineNumber":115,"author":{"gitId":"JodyLorah"},"content":"                        done \u003d true;"},{"lineNumber":116,"author":{"gitId":"JodyLorah"},"content":"                    }"},{"lineNumber":117,"author":{"gitId":"JodyLorah"},"content":"                    for (int j \u003d 7; j \u003c arr.length; j++) {"},{"lineNumber":118,"author":{"gitId":"JodyLorah"},"content":"                        taskDetails +\u003d arr[j];"},{"lineNumber":119,"author":{"gitId":"JodyLorah"},"content":"                    }"},{"lineNumber":120,"author":{"gitId":"JodyLorah"},"content":"                    arr \u003d taskDetails.split(\"[(]\");"},{"lineNumber":121,"author":{"gitId":"JodyLorah"},"content":"                    String[] deets \u003d arr[0].split(\"\");"},{"lineNumber":122,"author":{"gitId":"JodyLorah"},"content":"                    String description \u003d \"\";"},{"lineNumber":123,"author":{"gitId":"JodyLorah"},"content":"                    for (int t \u003d 0; t \u003c arr[0].length() - 1; t++) {"},{"lineNumber":124,"author":{"gitId":"JodyLorah"},"content":"                        description +\u003d deets[t];"},{"lineNumber":125,"author":{"gitId":"JodyLorah"},"content":"                    }"},{"lineNumber":126,"author":{"gitId":"JodyLorah"},"content":"                    taskDetails \u003d arr[1];"},{"lineNumber":127,"author":{"gitId":"JodyLorah"},"content":"                    arr \u003d taskDetails.split(\" at: \");"},{"lineNumber":128,"author":{"gitId":"JodyLorah"},"content":"                    String at \u003d \"\";"},{"lineNumber":129,"author":{"gitId":"JodyLorah"},"content":"                    String details \u003d arr[0];"},{"lineNumber":130,"author":{"gitId":"JodyLorah"},"content":"                    arr \u003d details.split(\"\");"},{"lineNumber":131,"author":{"gitId":"JodyLorah"},"content":"                    for (int k \u003d 4; k \u003c arr.length - 1; k++) {"},{"lineNumber":132,"author":{"gitId":"JodyLorah"},"content":"                        at +\u003d arr[k];"},{"lineNumber":133,"author":{"gitId":"JodyLorah"},"content":"                    }"},{"lineNumber":134,"author":{"gitId":"JodyLorah"},"content":"                    DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"MMM dd yyyy HH:mm\");"},{"lineNumber":135,"author":{"gitId":"JodyLorah"},"content":"                    LocalDateTime dateTime \u003d LocalDateTime.parse(at, formatter);"},{"lineNumber":136,"author":{"gitId":"JodyLorah"},"content":"                    Task t \u003d new Event(description, dateTime);"},{"lineNumber":137,"author":{"gitId":"JodyLorah"},"content":"                    if (done) {"},{"lineNumber":138,"author":{"gitId":"JodyLorah"},"content":"                        t.setDone();"},{"lineNumber":139,"author":{"gitId":"JodyLorah"},"content":"                    }"},{"lineNumber":140,"author":{"gitId":"JodyLorah"},"content":"                    list.addEvent(t);"},{"lineNumber":141,"author":{"gitId":"JodyLorah"},"content":"                }"},{"lineNumber":142,"author":{"gitId":"JodyLorah"},"content":"            }"},{"lineNumber":143,"author":{"gitId":"JodyLorah"},"content":"        } else { //create new file in folder"},{"lineNumber":144,"author":{"gitId":"JodyLorah"},"content":"            File f \u003d new File(currPath.toAbsolutePath().toString() + \"/duke.txt\");"},{"lineNumber":145,"author":{"gitId":"JodyLorah"},"content":"        }"},{"lineNumber":146,"author":{"gitId":"JodyLorah"},"content":"        return list;"},{"lineNumber":147,"author":{"gitId":"JodyLorah"},"content":"    }"},{"lineNumber":148,"author":{"gitId":"JodyLorah"},"content":"}"},{"lineNumber":149,"author":{"gitId":"JodyLorah"},"content":""}],"authorContributionMap":{"JodyLorah":149}},{"path":"src/main/java/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"JodyLorah"},"content":"import java.time.LocalDateTime;"},{"lineNumber":2,"author":{"gitId":"JodyLorah"},"content":"import java.time.format.DateTimeFormatter;"},{"lineNumber":3,"author":{"gitId":"JodyLorah"},"content":""},{"lineNumber":4,"author":{"gitId":"JodyLorah"},"content":"/**"},{"lineNumber":5,"author":{"gitId":"JodyLorah"},"content":" * Deadline class which creates a deadline task."},{"lineNumber":6,"author":{"gitId":"JodyLorah"},"content":" */"},{"lineNumber":7,"author":{"gitId":"JodyLorah"},"content":"public class Deadline extends Task {"},{"lineNumber":8,"author":{"gitId":"JodyLorah"},"content":"    private final LocalDateTime date;"},{"lineNumber":9,"author":{"gitId":"JodyLorah"},"content":""},{"lineNumber":10,"author":{"gitId":"JodyLorah"},"content":"    /**"},{"lineNumber":11,"author":{"gitId":"JodyLorah"},"content":"     * Creates Deadline task which keeps track of task details and deadlines."},{"lineNumber":12,"author":{"gitId":"JodyLorah"},"content":"     *"},{"lineNumber":13,"author":{"gitId":"JodyLorah"},"content":"     * @param description description of the task to be saved"},{"lineNumber":14,"author":{"gitId":"JodyLorah"},"content":"     * @param by deadline of the task"},{"lineNumber":15,"author":{"gitId":"JodyLorah"},"content":"     */"},{"lineNumber":16,"author":{"gitId":"JodyLorah"},"content":"    public Deadline(String description, LocalDateTime by) {"},{"lineNumber":17,"author":{"gitId":"JodyLorah"},"content":"        super(description);"},{"lineNumber":18,"author":{"gitId":"JodyLorah"},"content":"        this.date \u003d by;"},{"lineNumber":19,"author":{"gitId":"JodyLorah"},"content":"    }"},{"lineNumber":20,"author":{"gitId":"JodyLorah"},"content":""},{"lineNumber":21,"author":{"gitId":"JodyLorah"},"content":"    @Override"},{"lineNumber":22,"author":{"gitId":"JodyLorah"},"content":"    public String toString() {"},{"lineNumber":23,"author":{"gitId":"JodyLorah"},"content":"        return \"[D]\" + super.toString() + \" (by: \""},{"lineNumber":24,"author":{"gitId":"JodyLorah"},"content":"                + this.date.format(DateTimeFormatter.ofPattern(\"MMM dd yyyy HH:mm\")) + \")\";"},{"lineNumber":25,"author":{"gitId":"JodyLorah"},"content":"    }"},{"lineNumber":26,"author":{"gitId":"JodyLorah"},"content":""},{"lineNumber":27,"author":{"gitId":"JodyLorah"},"content":"    /**"},{"lineNumber":28,"author":{"gitId":"JodyLorah"},"content":"     * Returns details of the deadline task."},{"lineNumber":29,"author":{"gitId":"JodyLorah"},"content":"     *"},{"lineNumber":30,"author":{"gitId":"JodyLorah"},"content":"     * @return details of the task"},{"lineNumber":31,"author":{"gitId":"JodyLorah"},"content":"     */"},{"lineNumber":32,"author":{"gitId":"JodyLorah"},"content":"    @Override"},{"lineNumber":33,"author":{"gitId":"JodyLorah"},"content":"    public String getTaskDetails() {"},{"lineNumber":34,"author":{"gitId":"JodyLorah"},"content":"        return super.toString();"},{"lineNumber":35,"author":{"gitId":"JodyLorah"},"content":"    }"},{"lineNumber":36,"author":{"gitId":"JodyLorah"},"content":"}"}],"authorContributionMap":{"JodyLorah":36}},{"path":"src/main/java/DeleteCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"JodyLorah"},"content":"/**"},{"lineNumber":2,"author":{"gitId":"JodyLorah"},"content":" * DeleteCommand class which is a type of Command to be executed."},{"lineNumber":3,"author":{"gitId":"JodyLorah"},"content":" */"},{"lineNumber":4,"author":{"gitId":"JodyLorah"},"content":""},{"lineNumber":5,"author":{"gitId":"JodyLorah"},"content":"public class DeleteCommand extends Command {"},{"lineNumber":6,"author":{"gitId":"JodyLorah"},"content":"    String type;"},{"lineNumber":7,"author":{"gitId":"JodyLorah"},"content":""},{"lineNumber":8,"author":{"gitId":"JodyLorah"},"content":"    /**"},{"lineNumber":9,"author":{"gitId":"JodyLorah"},"content":"     * Handles Delete commands."},{"lineNumber":10,"author":{"gitId":"JodyLorah"},"content":"     * Triggers the DataHandler to handle the commands."},{"lineNumber":11,"author":{"gitId":"JodyLorah"},"content":"     *"},{"lineNumber":12,"author":{"gitId":"JodyLorah"},"content":"     * @param t details of the task"},{"lineNumber":13,"author":{"gitId":"JodyLorah"},"content":"     *"},{"lineNumber":14,"author":{"gitId":"JodyLorah"},"content":"     */"},{"lineNumber":15,"author":{"gitId":"JodyLorah"},"content":"    public DeleteCommand(String t) {"},{"lineNumber":16,"author":{"gitId":"JodyLorah"},"content":"        this.type \u003d t;"},{"lineNumber":17,"author":{"gitId":"JodyLorah"},"content":"    }"},{"lineNumber":18,"author":{"gitId":"JodyLorah"},"content":""},{"lineNumber":19,"author":{"gitId":"JodyLorah"},"content":"    /**"},{"lineNumber":20,"author":{"gitId":"JodyLorah"},"content":"     * Executes the Command in DataHandler."},{"lineNumber":21,"author":{"gitId":"JodyLorah"},"content":"     *"},{"lineNumber":22,"author":{"gitId":"JodyLorah"},"content":"     * @param tasks list of tasks where this new task is added to"},{"lineNumber":23,"author":{"gitId":"JodyLorah"},"content":"     * @param input details of the task"},{"lineNumber":24,"author":{"gitId":"JodyLorah"},"content":"     * @param dataHandler handles the various tasks according to their type"},{"lineNumber":25,"author":{"gitId":"JodyLorah"},"content":"     */"},{"lineNumber":26,"author":{"gitId":"JodyLorah"},"content":""},{"lineNumber":27,"author":{"gitId":"JodyLorah"},"content":"    public void execute(TaskList tasks, String input, DataHandler dataHandler) {"},{"lineNumber":28,"author":{"gitId":"JodyLorah"},"content":"        if (Integer.parseInt(input.split(\" \")[1]) \u003e tasks.getSize()) {"},{"lineNumber":29,"author":{"gitId":"JodyLorah"},"content":"            new InvalidInstructionException();"},{"lineNumber":30,"author":{"gitId":"JodyLorah"},"content":"            return;"},{"lineNumber":31,"author":{"gitId":"JodyLorah"},"content":"        } else {"},{"lineNumber":32,"author":{"gitId":"JodyLorah"},"content":"            tasks.delete(input);"},{"lineNumber":33,"author":{"gitId":"JodyLorah"},"content":"            dataHandler.saveData(tasks);"},{"lineNumber":34,"author":{"gitId":"JodyLorah"},"content":"        }"},{"lineNumber":35,"author":{"gitId":"JodyLorah"},"content":"    }"},{"lineNumber":36,"author":{"gitId":"JodyLorah"},"content":""},{"lineNumber":37,"author":{"gitId":"JodyLorah"},"content":"    /**"},{"lineNumber":38,"author":{"gitId":"JodyLorah"},"content":"     * Checks if it is time to exit Duke."},{"lineNumber":39,"author":{"gitId":"JodyLorah"},"content":"     */"},{"lineNumber":40,"author":{"gitId":"JodyLorah"},"content":"    public boolean isExit() {"},{"lineNumber":41,"author":{"gitId":"JodyLorah"},"content":"        return false;"},{"lineNumber":42,"author":{"gitId":"JodyLorah"},"content":"    }"},{"lineNumber":43,"author":{"gitId":"JodyLorah"},"content":"}"}],"authorContributionMap":{"JodyLorah":43}},{"path":"src/main/java/DoneCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"JodyLorah"},"content":"/**"},{"lineNumber":2,"author":{"gitId":"JodyLorah"},"content":" * DoneCommand class which is a type of Command to be executed."},{"lineNumber":3,"author":{"gitId":"JodyLorah"},"content":" */"},{"lineNumber":4,"author":{"gitId":"JodyLorah"},"content":""},{"lineNumber":5,"author":{"gitId":"JodyLorah"},"content":"public class DoneCommand extends Command {"},{"lineNumber":6,"author":{"gitId":"JodyLorah"},"content":"    String type;"},{"lineNumber":7,"author":{"gitId":"JodyLorah"},"content":""},{"lineNumber":8,"author":{"gitId":"JodyLorah"},"content":"    /**"},{"lineNumber":9,"author":{"gitId":"JodyLorah"},"content":"     * Handles Done commands."},{"lineNumber":10,"author":{"gitId":"JodyLorah"},"content":"     * Triggers the DataHandler to handle the commands."},{"lineNumber":11,"author":{"gitId":"JodyLorah"},"content":"     *"},{"lineNumber":12,"author":{"gitId":"JodyLorah"},"content":"     * @param t details of the task"},{"lineNumber":13,"author":{"gitId":"JodyLorah"},"content":"     *"},{"lineNumber":14,"author":{"gitId":"JodyLorah"},"content":"     */"},{"lineNumber":15,"author":{"gitId":"JodyLorah"},"content":"    public DoneCommand(String t) {"},{"lineNumber":16,"author":{"gitId":"JodyLorah"},"content":"        this.type \u003d t;"},{"lineNumber":17,"author":{"gitId":"JodyLorah"},"content":""},{"lineNumber":18,"author":{"gitId":"JodyLorah"},"content":"    }"},{"lineNumber":19,"author":{"gitId":"JodyLorah"},"content":""},{"lineNumber":20,"author":{"gitId":"JodyLorah"},"content":"    /**"},{"lineNumber":21,"author":{"gitId":"JodyLorah"},"content":"     * Executes the Command in DataHandler."},{"lineNumber":22,"author":{"gitId":"JodyLorah"},"content":"     *"},{"lineNumber":23,"author":{"gitId":"JodyLorah"},"content":"     * @param tasks list of tasks where this new task is added to"},{"lineNumber":24,"author":{"gitId":"JodyLorah"},"content":"     * @param input details of the task"},{"lineNumber":25,"author":{"gitId":"JodyLorah"},"content":"     * @param dataHandler handles the various tasks according to their type"},{"lineNumber":26,"author":{"gitId":"JodyLorah"},"content":"     */"},{"lineNumber":27,"author":{"gitId":"JodyLorah"},"content":""},{"lineNumber":28,"author":{"gitId":"JodyLorah"},"content":"    public void execute(TaskList tasks, String input, DataHandler dataHandler) {"},{"lineNumber":29,"author":{"gitId":"JodyLorah"},"content":"        if (Integer.parseInt(input.split(\" \")[1]) \u003e tasks.getSize()) {"},{"lineNumber":30,"author":{"gitId":"JodyLorah"},"content":"            new InvalidInstructionException();"},{"lineNumber":31,"author":{"gitId":"JodyLorah"},"content":"            return;"},{"lineNumber":32,"author":{"gitId":"JodyLorah"},"content":"        } else {"},{"lineNumber":33,"author":{"gitId":"JodyLorah"},"content":"            tasks.markDone(input);"},{"lineNumber":34,"author":{"gitId":"JodyLorah"},"content":"            dataHandler.saveData(tasks);"},{"lineNumber":35,"author":{"gitId":"JodyLorah"},"content":"        }"},{"lineNumber":36,"author":{"gitId":"JodyLorah"},"content":"    }"},{"lineNumber":37,"author":{"gitId":"JodyLorah"},"content":""},{"lineNumber":38,"author":{"gitId":"JodyLorah"},"content":"    /**"},{"lineNumber":39,"author":{"gitId":"JodyLorah"},"content":"     * Checks if it is time to exit Duke."},{"lineNumber":40,"author":{"gitId":"JodyLorah"},"content":"     */"},{"lineNumber":41,"author":{"gitId":"JodyLorah"},"content":"    public boolean isExit() {"},{"lineNumber":42,"author":{"gitId":"JodyLorah"},"content":"        return false;"},{"lineNumber":43,"author":{"gitId":"JodyLorah"},"content":"    }"},{"lineNumber":44,"author":{"gitId":"JodyLorah"},"content":"}"}],"authorContributionMap":{"JodyLorah":44}},{"path":"src/main/java/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"JodyLorah"},"content":"import java.io.FileNotFoundException;"},{"lineNumber":2,"author":{"gitId":"JodyLorah"},"content":"import java.util.Scanner;"},{"lineNumber":3,"author":{"gitId":"JodyLorah"},"content":""},{"lineNumber":4,"author":{"gitId":"-"},"content":"public class Duke {"},{"lineNumber":5,"author":{"gitId":"JodyLorah"},"content":""},{"lineNumber":6,"author":{"gitId":"JodyLorah"},"content":""},{"lineNumber":7,"author":{"gitId":"JodyLorah"},"content":""},{"lineNumber":8,"author":{"gitId":"JodyLorah"},"content":"    private DataHandler storage;"},{"lineNumber":9,"author":{"gitId":"JodyLorah"},"content":"    private TaskList tasks;"},{"lineNumber":10,"author":{"gitId":"JodyLorah"},"content":"    private Ui ui;"},{"lineNumber":11,"author":{"gitId":"JodyLorah"},"content":""},{"lineNumber":12,"author":{"gitId":"JodyLorah"},"content":"    /**"},{"lineNumber":13,"author":{"gitId":"JodyLorah"},"content":"     * Main class for programme to run."},{"lineNumber":14,"author":{"gitId":"JodyLorah"},"content":"     *"},{"lineNumber":15,"author":{"gitId":"JodyLorah"},"content":"     * @param filePath path of file storage data"},{"lineNumber":16,"author":{"gitId":"JodyLorah"},"content":"     */"},{"lineNumber":17,"author":{"gitId":"JodyLorah"},"content":""},{"lineNumber":18,"author":{"gitId":"JodyLorah"},"content":"    public Duke(String filePath) {"},{"lineNumber":19,"author":{"gitId":"JodyLorah"},"content":"        ui \u003d new Ui();"},{"lineNumber":20,"author":{"gitId":"JodyLorah"},"content":"        storage \u003d new DataHandler(filePath);"},{"lineNumber":21,"author":{"gitId":"JodyLorah"},"content":"        try {"},{"lineNumber":22,"author":{"gitId":"JodyLorah"},"content":"            tasks \u003d storage.loadData();"},{"lineNumber":23,"author":{"gitId":"JodyLorah"},"content":"        } catch (FileNotFoundException e) {"},{"lineNumber":24,"author":{"gitId":"JodyLorah"},"content":"            tasks \u003d new TaskList();"},{"lineNumber":25,"author":{"gitId":"JodyLorah"},"content":"        }"},{"lineNumber":26,"author":{"gitId":"JodyLorah"},"content":"    }"},{"lineNumber":27,"author":{"gitId":"JodyLorah"},"content":""},{"lineNumber":28,"author":{"gitId":"JodyLorah"},"content":"    /**"},{"lineNumber":29,"author":{"gitId":"JodyLorah"},"content":"     * Tries to run Duke after filePath, taskList, storage and ui is given"},{"lineNumber":30,"author":{"gitId":"JodyLorah"},"content":"     */"},{"lineNumber":31,"author":{"gitId":"JodyLorah"},"content":""},{"lineNumber":32,"author":{"gitId":"JodyLorah"},"content":"    public void run() throws DukeException {"},{"lineNumber":33,"author":{"gitId":"JodyLorah"},"content":"        ui.showWelcome();"},{"lineNumber":34,"author":{"gitId":"JodyLorah"},"content":"        boolean isExit \u003d false;"},{"lineNumber":35,"author":{"gitId":"JodyLorah"},"content":"        while (!isExit) {"},{"lineNumber":36,"author":{"gitId":"JodyLorah"},"content":"            Scanner sc \u003d new Scanner(System.in);"},{"lineNumber":37,"author":{"gitId":"JodyLorah"},"content":"            while (!isExit) {"},{"lineNumber":38,"author":{"gitId":"JodyLorah"},"content":"                String fullCommand \u003d sc.nextLine();"},{"lineNumber":39,"author":{"gitId":"JodyLorah"},"content":"                Command c \u003d Parser.parse(fullCommand);"},{"lineNumber":40,"author":{"gitId":"JodyLorah"},"content":"                c.execute(tasks, fullCommand, storage);"},{"lineNumber":41,"author":{"gitId":"JodyLorah"},"content":"                isExit \u003d c.isExit();"},{"lineNumber":42,"author":{"gitId":"JodyLorah"},"content":"            }"},{"lineNumber":43,"author":{"gitId":"JodyLorah"},"content":"        }"},{"lineNumber":44,"author":{"gitId":"JodyLorah"},"content":"    }"},{"lineNumber":45,"author":{"gitId":"JodyLorah"},"content":""},{"lineNumber":46,"author":{"gitId":"JodyLorah"},"content":"    /**"},{"lineNumber":47,"author":{"gitId":"JodyLorah"},"content":"     * Main method to run whole programme"},{"lineNumber":48,"author":{"gitId":"JodyLorah"},"content":"     *"},{"lineNumber":49,"author":{"gitId":"JodyLorah"},"content":"     * @param args takes in arguments from user"},{"lineNumber":50,"author":{"gitId":"JodyLorah"},"content":"     * @throws Exception of Duke (ie EmptyEventException)"},{"lineNumber":51,"author":{"gitId":"JodyLorah"},"content":"     */"},{"lineNumber":52,"author":{"gitId":"JodyLorah"},"content":""},{"lineNumber":53,"author":{"gitId":"JodyLorah"},"content":"    public static void main(String[] args) throws Exception {"},{"lineNumber":54,"author":{"gitId":"JodyLorah"},"content":"        new Duke(\"data/tasks.txt\").run();"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":56,"author":{"gitId":"-"},"content":"}"},{"lineNumber":57,"author":{"gitId":"JodyLorah"},"content":""}],"authorContributionMap":{"JodyLorah":54,"-":3}},{"path":"src/main/java/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"JodyLorah"},"content":"/**"},{"lineNumber":2,"author":{"gitId":"JodyLorah"},"content":" * General exception for the Duke class."},{"lineNumber":3,"author":{"gitId":"JodyLorah"},"content":" */"},{"lineNumber":4,"author":{"gitId":"JodyLorah"},"content":"public class DukeException extends Exception {"},{"lineNumber":5,"author":{"gitId":"JodyLorah"},"content":""},{"lineNumber":6,"author":{"gitId":"JodyLorah"},"content":"    /**"},{"lineNumber":7,"author":{"gitId":"JodyLorah"},"content":"     * Method to throw the Exception."},{"lineNumber":8,"author":{"gitId":"JodyLorah"},"content":"     */"},{"lineNumber":9,"author":{"gitId":"JodyLorah"},"content":"    public DukeException() {"},{"lineNumber":10,"author":{"gitId":"JodyLorah"},"content":"        System.out.println(\"------------------------------------------\\n\""},{"lineNumber":11,"author":{"gitId":"JodyLorah"},"content":"                + \"â˜¹ OOPS!!! Something went wrong.\\n\""},{"lineNumber":12,"author":{"gitId":"JodyLorah"},"content":"                + \"------------------------------------------\");"},{"lineNumber":13,"author":{"gitId":"JodyLorah"},"content":"    }"},{"lineNumber":14,"author":{"gitId":"JodyLorah"},"content":"}"}],"authorContributionMap":{"JodyLorah":14}},{"path":"src/main/java/EmptyDateTimeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"JodyLorah"},"content":"/**"},{"lineNumber":2,"author":{"gitId":"JodyLorah"},"content":" * Exception where user left out the date or time of the task."},{"lineNumber":3,"author":{"gitId":"JodyLorah"},"content":" */"},{"lineNumber":4,"author":{"gitId":"JodyLorah"},"content":"public class EmptyDateTimeException {"},{"lineNumber":5,"author":{"gitId":"JodyLorah"},"content":""},{"lineNumber":6,"author":{"gitId":"JodyLorah"},"content":"    /**"},{"lineNumber":7,"author":{"gitId":"JodyLorah"},"content":"     * Method to throw the Exception."},{"lineNumber":8,"author":{"gitId":"JodyLorah"},"content":"     */"},{"lineNumber":9,"author":{"gitId":"JodyLorah"},"content":"    public EmptyDateTimeException() {"},{"lineNumber":10,"author":{"gitId":"JodyLorah"},"content":"        System.out.println(\"------------------------------------------\\n\""},{"lineNumber":11,"author":{"gitId":"JodyLorah"},"content":"                + \"â˜¹ OOPS!!! Please key in a valid date and/or time in the format \""},{"lineNumber":12,"author":{"gitId":"JodyLorah"},"content":"                + \"dd/MM/yyyy HH:mm. \\n\""},{"lineNumber":13,"author":{"gitId":"JodyLorah"},"content":"                + \"------------------------------------------\");"},{"lineNumber":14,"author":{"gitId":"JodyLorah"},"content":"    }"},{"lineNumber":15,"author":{"gitId":"JodyLorah"},"content":"}"}],"authorContributionMap":{"JodyLorah":15}},{"path":"src/main/java/EmptyDeadlineException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"JodyLorah"},"content":"/**"},{"lineNumber":2,"author":{"gitId":"JodyLorah"},"content":" * Exception where user left out the details of the task."},{"lineNumber":3,"author":{"gitId":"JodyLorah"},"content":" */"},{"lineNumber":4,"author":{"gitId":"JodyLorah"},"content":"public class EmptyDeadlineException {"},{"lineNumber":5,"author":{"gitId":"JodyLorah"},"content":""},{"lineNumber":6,"author":{"gitId":"JodyLorah"},"content":"    /**"},{"lineNumber":7,"author":{"gitId":"JodyLorah"},"content":"     * Method to throw the Exception."},{"lineNumber":8,"author":{"gitId":"JodyLorah"},"content":"     */"},{"lineNumber":9,"author":{"gitId":"JodyLorah"},"content":"    public EmptyDeadlineException() {"},{"lineNumber":10,"author":{"gitId":"JodyLorah"},"content":"        System.out.println(\"------------------------------------------\\n\""},{"lineNumber":11,"author":{"gitId":"JodyLorah"},"content":"                + \"â˜¹ OOPS!!! The description of a deadline cannot be empty.\\n\""},{"lineNumber":12,"author":{"gitId":"JodyLorah"},"content":"                + \"------------------------------------------\");"},{"lineNumber":13,"author":{"gitId":"JodyLorah"},"content":"    }"},{"lineNumber":14,"author":{"gitId":"JodyLorah"},"content":"}"}],"authorContributionMap":{"JodyLorah":14}},{"path":"src/main/java/EmptyDeleteException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"JodyLorah"},"content":"/**"},{"lineNumber":2,"author":{"gitId":"JodyLorah"},"content":" * Exception where user left out the details of the task to delete."},{"lineNumber":3,"author":{"gitId":"JodyLorah"},"content":" */"},{"lineNumber":4,"author":{"gitId":"JodyLorah"},"content":"public class EmptyDeleteException {"},{"lineNumber":5,"author":{"gitId":"JodyLorah"},"content":""},{"lineNumber":6,"author":{"gitId":"JodyLorah"},"content":"    /**"},{"lineNumber":7,"author":{"gitId":"JodyLorah"},"content":"     * Method to throw the Exception."},{"lineNumber":8,"author":{"gitId":"JodyLorah"},"content":"     */"},{"lineNumber":9,"author":{"gitId":"JodyLorah"},"content":"    public EmptyDeleteException() {"},{"lineNumber":10,"author":{"gitId":"JodyLorah"},"content":"        System.out.println(\"------------------------------------------\\n\""},{"lineNumber":11,"author":{"gitId":"JodyLorah"},"content":"                + \"â˜¹ OOPS!!! The description of a delete cannot be empty.\\n\""},{"lineNumber":12,"author":{"gitId":"JodyLorah"},"content":"                + \"------------------------------------------\");"},{"lineNumber":13,"author":{"gitId":"JodyLorah"},"content":"    }"},{"lineNumber":14,"author":{"gitId":"JodyLorah"},"content":"}"}],"authorContributionMap":{"JodyLorah":14}},{"path":"src/main/java/EmptyEventException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"JodyLorah"},"content":"/**"},{"lineNumber":2,"author":{"gitId":"JodyLorah"},"content":" * Exception where user left out the details of the task."},{"lineNumber":3,"author":{"gitId":"JodyLorah"},"content":" */"},{"lineNumber":4,"author":{"gitId":"JodyLorah"},"content":"public class EmptyEventException {"},{"lineNumber":5,"author":{"gitId":"JodyLorah"},"content":""},{"lineNumber":6,"author":{"gitId":"JodyLorah"},"content":"    /**"},{"lineNumber":7,"author":{"gitId":"JodyLorah"},"content":"     * Method to throw the Exception."},{"lineNumber":8,"author":{"gitId":"JodyLorah"},"content":"     */"},{"lineNumber":9,"author":{"gitId":"JodyLorah"},"content":"    public EmptyEventException() {"},{"lineNumber":10,"author":{"gitId":"JodyLorah"},"content":"        System.out.println(\"------------------------------------------\\n\""},{"lineNumber":11,"author":{"gitId":"JodyLorah"},"content":"                + \"â˜¹ OOPS!!! The description of an event cannot be empty.\\n\""},{"lineNumber":12,"author":{"gitId":"JodyLorah"},"content":"                + \"------------------------------------------\");"},{"lineNumber":13,"author":{"gitId":"JodyLorah"},"content":"    }"},{"lineNumber":14,"author":{"gitId":"JodyLorah"},"content":"}"}],"authorContributionMap":{"JodyLorah":14}},{"path":"src/main/java/EmptyListDeletionException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"JodyLorah"},"content":"/**"},{"lineNumber":2,"author":{"gitId":"JodyLorah"},"content":" * Exception where user tries to delete item from an empty list."},{"lineNumber":3,"author":{"gitId":"JodyLorah"},"content":" */"},{"lineNumber":4,"author":{"gitId":"JodyLorah"},"content":""},{"lineNumber":5,"author":{"gitId":"JodyLorah"},"content":""},{"lineNumber":6,"author":{"gitId":"JodyLorah"},"content":"public class EmptyListDeletionException {"},{"lineNumber":7,"author":{"gitId":"JodyLorah"},"content":""},{"lineNumber":8,"author":{"gitId":"JodyLorah"},"content":"        /**"},{"lineNumber":9,"author":{"gitId":"JodyLorah"},"content":"         * Method to throw the Exception."},{"lineNumber":10,"author":{"gitId":"JodyLorah"},"content":"         */"},{"lineNumber":11,"author":{"gitId":"JodyLorah"},"content":"        public EmptyListDeletionException() {"},{"lineNumber":12,"author":{"gitId":"JodyLorah"},"content":"                System.out.println(\"------------------------------------------\\n\""},{"lineNumber":13,"author":{"gitId":"JodyLorah"},"content":"                + \"â˜¹ OOPS!!! I\u0027m sorry, but list is empty.\""},{"lineNumber":14,"author":{"gitId":"JodyLorah"},"content":"                + \"You have to add an item before you can delete it.\\n\""},{"lineNumber":15,"author":{"gitId":"JodyLorah"},"content":"                + \"------------------------------------------\");"},{"lineNumber":16,"author":{"gitId":"JodyLorah"},"content":""},{"lineNumber":17,"author":{"gitId":"JodyLorah"},"content":"        }"},{"lineNumber":18,"author":{"gitId":"JodyLorah"},"content":"}"}],"authorContributionMap":{"JodyLorah":18}},{"path":"src/main/java/EmptyToDoException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"JodyLorah"},"content":"/**"},{"lineNumber":2,"author":{"gitId":"JodyLorah"},"content":" * Exception where user left out the details of the task."},{"lineNumber":3,"author":{"gitId":"JodyLorah"},"content":" */"},{"lineNumber":4,"author":{"gitId":"JodyLorah"},"content":"public class EmptyToDoException {"},{"lineNumber":5,"author":{"gitId":"JodyLorah"},"content":""},{"lineNumber":6,"author":{"gitId":"JodyLorah"},"content":"    /**"},{"lineNumber":7,"author":{"gitId":"JodyLorah"},"content":"     * Method to throw the Exception."},{"lineNumber":8,"author":{"gitId":"JodyLorah"},"content":"     */"},{"lineNumber":9,"author":{"gitId":"JodyLorah"},"content":"    public EmptyToDoException() {"},{"lineNumber":10,"author":{"gitId":"JodyLorah"},"content":"        System.out.println(\"------------------------------------------\\n\""},{"lineNumber":11,"author":{"gitId":"JodyLorah"},"content":"                + \"â˜¹ OOPS!!! The description of a todo cannot be empty.\\n\""},{"lineNumber":12,"author":{"gitId":"JodyLorah"},"content":"                + \"------------------------------------------\");"},{"lineNumber":13,"author":{"gitId":"JodyLorah"},"content":"    }"},{"lineNumber":14,"author":{"gitId":"JodyLorah"},"content":"}"}],"authorContributionMap":{"JodyLorah":14}},{"path":"src/main/java/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"JodyLorah"},"content":"import java.time.LocalDateTime;"},{"lineNumber":2,"author":{"gitId":"JodyLorah"},"content":"import java.time.format.DateTimeFormatter;"},{"lineNumber":3,"author":{"gitId":"JodyLorah"},"content":""},{"lineNumber":4,"author":{"gitId":"JodyLorah"},"content":"/**"},{"lineNumber":5,"author":{"gitId":"JodyLorah"},"content":" * Event class which creates an event task."},{"lineNumber":6,"author":{"gitId":"JodyLorah"},"content":" */"},{"lineNumber":7,"author":{"gitId":"JodyLorah"},"content":"public class Event extends Task {"},{"lineNumber":8,"author":{"gitId":"JodyLorah"},"content":"    private final LocalDateTime date;"},{"lineNumber":9,"author":{"gitId":"JodyLorah"},"content":""},{"lineNumber":10,"author":{"gitId":"JodyLorah"},"content":"    /**"},{"lineNumber":11,"author":{"gitId":"JodyLorah"},"content":"     * Creates Event task which keeps track of task details and timings."},{"lineNumber":12,"author":{"gitId":"JodyLorah"},"content":"     *"},{"lineNumber":13,"author":{"gitId":"JodyLorah"},"content":"     * @param description description of the task to be saved"},{"lineNumber":14,"author":{"gitId":"JodyLorah"},"content":"     * @param at timing of the event"},{"lineNumber":15,"author":{"gitId":"JodyLorah"},"content":"     * */"},{"lineNumber":16,"author":{"gitId":"JodyLorah"},"content":"    public Event(String description, LocalDateTime at) {"},{"lineNumber":17,"author":{"gitId":"JodyLorah"},"content":"        super(description);"},{"lineNumber":18,"author":{"gitId":"JodyLorah"},"content":"        this.date \u003d at;"},{"lineNumber":19,"author":{"gitId":"JodyLorah"},"content":"    }"},{"lineNumber":20,"author":{"gitId":"JodyLorah"},"content":""},{"lineNumber":21,"author":{"gitId":"JodyLorah"},"content":"    @Override"},{"lineNumber":22,"author":{"gitId":"JodyLorah"},"content":"    public String toString() {"},{"lineNumber":23,"author":{"gitId":"JodyLorah"},"content":"        return \"[E]\" + super.toString() + \" (at: \""},{"lineNumber":24,"author":{"gitId":"JodyLorah"},"content":"                + this.date.format(DateTimeFormatter.ofPattern(\"MMM dd yyyy HH:mm\")) + \")\";"},{"lineNumber":25,"author":{"gitId":"JodyLorah"},"content":"    }"},{"lineNumber":26,"author":{"gitId":"JodyLorah"},"content":""},{"lineNumber":27,"author":{"gitId":"JodyLorah"},"content":"    /**"},{"lineNumber":28,"author":{"gitId":"JodyLorah"},"content":"     * Returns details of the event task."},{"lineNumber":29,"author":{"gitId":"JodyLorah"},"content":"     *"},{"lineNumber":30,"author":{"gitId":"JodyLorah"},"content":"     * @return details of the task"},{"lineNumber":31,"author":{"gitId":"JodyLorah"},"content":"     */"},{"lineNumber":32,"author":{"gitId":"JodyLorah"},"content":"    @Override"},{"lineNumber":33,"author":{"gitId":"JodyLorah"},"content":"    public String getTaskDetails() {"},{"lineNumber":34,"author":{"gitId":"JodyLorah"},"content":"        return super.toString();"},{"lineNumber":35,"author":{"gitId":"JodyLorah"},"content":"    }"},{"lineNumber":36,"author":{"gitId":"JodyLorah"},"content":"}"}],"authorContributionMap":{"JodyLorah":36}},{"path":"src/main/java/ExitCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"JodyLorah"},"content":"/**"},{"lineNumber":2,"author":{"gitId":"JodyLorah"},"content":" * ExitCommand class which is a type of Command to be executed."},{"lineNumber":3,"author":{"gitId":"JodyLorah"},"content":" */"},{"lineNumber":4,"author":{"gitId":"JodyLorah"},"content":""},{"lineNumber":5,"author":{"gitId":"JodyLorah"},"content":"public class ExitCommand extends Command {"},{"lineNumber":6,"author":{"gitId":"JodyLorah"},"content":"    String type;"},{"lineNumber":7,"author":{"gitId":"JodyLorah"},"content":""},{"lineNumber":8,"author":{"gitId":"JodyLorah"},"content":"    /**"},{"lineNumber":9,"author":{"gitId":"JodyLorah"},"content":"     * Handles Exit commands."},{"lineNumber":10,"author":{"gitId":"JodyLorah"},"content":"     * Triggers the DataHandler to handle the commands."},{"lineNumber":11,"author":{"gitId":"JodyLorah"},"content":"     *"},{"lineNumber":12,"author":{"gitId":"JodyLorah"},"content":"     * @param t details of the task"},{"lineNumber":13,"author":{"gitId":"JodyLorah"},"content":"     *"},{"lineNumber":14,"author":{"gitId":"JodyLorah"},"content":"     */"},{"lineNumber":15,"author":{"gitId":"JodyLorah"},"content":"    public ExitCommand(String t) {"},{"lineNumber":16,"author":{"gitId":"JodyLorah"},"content":"        this.type \u003d t;"},{"lineNumber":17,"author":{"gitId":"JodyLorah"},"content":""},{"lineNumber":18,"author":{"gitId":"JodyLorah"},"content":"    }"},{"lineNumber":19,"author":{"gitId":"JodyLorah"},"content":""},{"lineNumber":20,"author":{"gitId":"JodyLorah"},"content":"    String line \u003d \"------------------------------------------\";"},{"lineNumber":21,"author":{"gitId":"JodyLorah"},"content":""},{"lineNumber":22,"author":{"gitId":"JodyLorah"},"content":"    /**"},{"lineNumber":23,"author":{"gitId":"JodyLorah"},"content":"     * Executes the Command in DataHandler."},{"lineNumber":24,"author":{"gitId":"JodyLorah"},"content":"     *"},{"lineNumber":25,"author":{"gitId":"JodyLorah"},"content":"     * @param tasks list of tasks where this new task is added to"},{"lineNumber":26,"author":{"gitId":"JodyLorah"},"content":"     * @param input details of the task"},{"lineNumber":27,"author":{"gitId":"JodyLorah"},"content":"     * @param dataHandler handles the various tasks according to their type"},{"lineNumber":28,"author":{"gitId":"JodyLorah"},"content":"     */"},{"lineNumber":29,"author":{"gitId":"JodyLorah"},"content":""},{"lineNumber":30,"author":{"gitId":"JodyLorah"},"content":"    public void execute(TaskList tasks, String input, DataHandler dataHandler) {"},{"lineNumber":31,"author":{"gitId":"JodyLorah"},"content":"        if (input.equals(\"bye\")) {"},{"lineNumber":32,"author":{"gitId":"JodyLorah"},"content":"            System.out.println(line);"},{"lineNumber":33,"author":{"gitId":"JodyLorah"},"content":"            System.out.println(\"Bye. Hope to see you again soon!\");"},{"lineNumber":34,"author":{"gitId":"JodyLorah"},"content":"            System.out.println(line);"},{"lineNumber":35,"author":{"gitId":"JodyLorah"},"content":"            return;"},{"lineNumber":36,"author":{"gitId":"JodyLorah"},"content":"        }"},{"lineNumber":37,"author":{"gitId":"JodyLorah"},"content":"    }"},{"lineNumber":38,"author":{"gitId":"JodyLorah"},"content":""},{"lineNumber":39,"author":{"gitId":"JodyLorah"},"content":"    /**"},{"lineNumber":40,"author":{"gitId":"JodyLorah"},"content":"     * Checks if it is time to exit Duke."},{"lineNumber":41,"author":{"gitId":"JodyLorah"},"content":"     */"},{"lineNumber":42,"author":{"gitId":"JodyLorah"},"content":"    public boolean isExit() {"},{"lineNumber":43,"author":{"gitId":"JodyLorah"},"content":"        return true;"},{"lineNumber":44,"author":{"gitId":"JodyLorah"},"content":"    }"},{"lineNumber":45,"author":{"gitId":"JodyLorah"},"content":"}"}],"authorContributionMap":{"JodyLorah":45}},{"path":"src/main/java/FindCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"JodyLorah"},"content":"/**"},{"lineNumber":2,"author":{"gitId":"JodyLorah"},"content":" * ListCommand class which is a type of Command to be executed."},{"lineNumber":3,"author":{"gitId":"JodyLorah"},"content":" */"},{"lineNumber":4,"author":{"gitId":"JodyLorah"},"content":""},{"lineNumber":5,"author":{"gitId":"JodyLorah"},"content":"public class FindCommand extends Command {"},{"lineNumber":6,"author":{"gitId":"JodyLorah"},"content":"    String type;"},{"lineNumber":7,"author":{"gitId":"JodyLorah"},"content":""},{"lineNumber":8,"author":{"gitId":"JodyLorah"},"content":"    /**"},{"lineNumber":9,"author":{"gitId":"JodyLorah"},"content":"     * Handles List commands."},{"lineNumber":10,"author":{"gitId":"JodyLorah"},"content":"     * Triggers the DataHandler to handle the commands."},{"lineNumber":11,"author":{"gitId":"JodyLorah"},"content":"     *"},{"lineNumber":12,"author":{"gitId":"JodyLorah"},"content":"     * @param t details of the task"},{"lineNumber":13,"author":{"gitId":"JodyLorah"},"content":"     *"},{"lineNumber":14,"author":{"gitId":"JodyLorah"},"content":"     */"},{"lineNumber":15,"author":{"gitId":"JodyLorah"},"content":"    public FindCommand(String t) {"},{"lineNumber":16,"author":{"gitId":"JodyLorah"},"content":"        this.type \u003d t;"},{"lineNumber":17,"author":{"gitId":"JodyLorah"},"content":"    }"},{"lineNumber":18,"author":{"gitId":"JodyLorah"},"content":""},{"lineNumber":19,"author":{"gitId":"JodyLorah"},"content":"    /**"},{"lineNumber":20,"author":{"gitId":"JodyLorah"},"content":"     * Executes the Command in DataHandler."},{"lineNumber":21,"author":{"gitId":"JodyLorah"},"content":"     *"},{"lineNumber":22,"author":{"gitId":"JodyLorah"},"content":"     * @param tasks list of tasks where this new task is added to"},{"lineNumber":23,"author":{"gitId":"JodyLorah"},"content":"     * @param input details of the task"},{"lineNumber":24,"author":{"gitId":"JodyLorah"},"content":"     * @param dataHandler handles the various tasks according to their type"},{"lineNumber":25,"author":{"gitId":"JodyLorah"},"content":"     */"},{"lineNumber":26,"author":{"gitId":"JodyLorah"},"content":""},{"lineNumber":27,"author":{"gitId":"JodyLorah"},"content":"    public void execute(TaskList tasks, String input, DataHandler dataHandler) {"},{"lineNumber":28,"author":{"gitId":"JodyLorah"},"content":"        tasks.find(input);"},{"lineNumber":29,"author":{"gitId":"JodyLorah"},"content":"    }"},{"lineNumber":30,"author":{"gitId":"JodyLorah"},"content":""},{"lineNumber":31,"author":{"gitId":"JodyLorah"},"content":"    /**"},{"lineNumber":32,"author":{"gitId":"JodyLorah"},"content":"     * Checks if it is time to exit Duke."},{"lineNumber":33,"author":{"gitId":"JodyLorah"},"content":"     */"},{"lineNumber":34,"author":{"gitId":"JodyLorah"},"content":"    public boolean isExit() {"},{"lineNumber":35,"author":{"gitId":"JodyLorah"},"content":"        return false;"},{"lineNumber":36,"author":{"gitId":"JodyLorah"},"content":"    }"},{"lineNumber":37,"author":{"gitId":"JodyLorah"},"content":"}"}],"authorContributionMap":{"JodyLorah":37}},{"path":"src/main/java/InvalidInstructionException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"JodyLorah"},"content":"/**"},{"lineNumber":2,"author":{"gitId":"JodyLorah"},"content":" * Exception where user inputs an invalid task detail."},{"lineNumber":3,"author":{"gitId":"JodyLorah"},"content":" */"},{"lineNumber":4,"author":{"gitId":"JodyLorah"},"content":"public class InvalidInstructionException {"},{"lineNumber":5,"author":{"gitId":"JodyLorah"},"content":""},{"lineNumber":6,"author":{"gitId":"JodyLorah"},"content":"    /**"},{"lineNumber":7,"author":{"gitId":"JodyLorah"},"content":"     * Method to throw the Exception."},{"lineNumber":8,"author":{"gitId":"JodyLorah"},"content":"     */"},{"lineNumber":9,"author":{"gitId":"JodyLorah"},"content":"    public InvalidInstructionException() {"},{"lineNumber":10,"author":{"gitId":"JodyLorah"},"content":"        System.out.println(\"------------------------------------------\\n\""},{"lineNumber":11,"author":{"gitId":"JodyLorah"},"content":"                + \"â˜¹ OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\\n\""},{"lineNumber":12,"author":{"gitId":"JodyLorah"},"content":"                + \"------------------------------------------\");"},{"lineNumber":13,"author":{"gitId":"JodyLorah"},"content":"    }"},{"lineNumber":14,"author":{"gitId":"JodyLorah"},"content":"}"}],"authorContributionMap":{"JodyLorah":14}},{"path":"src/main/java/ListCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"JodyLorah"},"content":"/**"},{"lineNumber":2,"author":{"gitId":"JodyLorah"},"content":" * ListCommand class which is a type of Command to be executed."},{"lineNumber":3,"author":{"gitId":"JodyLorah"},"content":" */"},{"lineNumber":4,"author":{"gitId":"JodyLorah"},"content":""},{"lineNumber":5,"author":{"gitId":"JodyLorah"},"content":"public class ListCommand extends Command {"},{"lineNumber":6,"author":{"gitId":"JodyLorah"},"content":"    String type;"},{"lineNumber":7,"author":{"gitId":"JodyLorah"},"content":""},{"lineNumber":8,"author":{"gitId":"JodyLorah"},"content":"    /**"},{"lineNumber":9,"author":{"gitId":"JodyLorah"},"content":"     * Handles List commands."},{"lineNumber":10,"author":{"gitId":"JodyLorah"},"content":"     * Triggers the DataHandler to handle the commands."},{"lineNumber":11,"author":{"gitId":"JodyLorah"},"content":"     *"},{"lineNumber":12,"author":{"gitId":"JodyLorah"},"content":"     * @param t details of the task"},{"lineNumber":13,"author":{"gitId":"JodyLorah"},"content":"     *"},{"lineNumber":14,"author":{"gitId":"JodyLorah"},"content":"     */"},{"lineNumber":15,"author":{"gitId":"JodyLorah"},"content":"    public ListCommand(String t) {"},{"lineNumber":16,"author":{"gitId":"JodyLorah"},"content":"        this.type \u003d t;"},{"lineNumber":17,"author":{"gitId":"JodyLorah"},"content":"    }"},{"lineNumber":18,"author":{"gitId":"JodyLorah"},"content":""},{"lineNumber":19,"author":{"gitId":"JodyLorah"},"content":"    /**"},{"lineNumber":20,"author":{"gitId":"JodyLorah"},"content":"     * Executes the Command in DataHandler."},{"lineNumber":21,"author":{"gitId":"JodyLorah"},"content":"     *"},{"lineNumber":22,"author":{"gitId":"JodyLorah"},"content":"     * @param tasks list of tasks where this new task is added to"},{"lineNumber":23,"author":{"gitId":"JodyLorah"},"content":"     * @param input details of the task"},{"lineNumber":24,"author":{"gitId":"JodyLorah"},"content":"     * @param dataHandler handles the various tasks according to their type"},{"lineNumber":25,"author":{"gitId":"JodyLorah"},"content":"     */"},{"lineNumber":26,"author":{"gitId":"JodyLorah"},"content":""},{"lineNumber":27,"author":{"gitId":"JodyLorah"},"content":"    public void execute(TaskList tasks, String input, DataHandler dataHandler) {"},{"lineNumber":28,"author":{"gitId":"JodyLorah"},"content":"            tasks.list();"},{"lineNumber":29,"author":{"gitId":"JodyLorah"},"content":"    }"},{"lineNumber":30,"author":{"gitId":"JodyLorah"},"content":""},{"lineNumber":31,"author":{"gitId":"JodyLorah"},"content":"    /**"},{"lineNumber":32,"author":{"gitId":"JodyLorah"},"content":"     * Checks if it is time to exit Duke."},{"lineNumber":33,"author":{"gitId":"JodyLorah"},"content":"     */"},{"lineNumber":34,"author":{"gitId":"JodyLorah"},"content":"    public boolean isExit() {"},{"lineNumber":35,"author":{"gitId":"JodyLorah"},"content":"        return false;"},{"lineNumber":36,"author":{"gitId":"JodyLorah"},"content":"    }"},{"lineNumber":37,"author":{"gitId":"JodyLorah"},"content":"}"}],"authorContributionMap":{"JodyLorah":37}},{"path":"src/main/java/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"JodyLorah"},"content":"/**"},{"lineNumber":2,"author":{"gitId":"JodyLorah"},"content":" * Parser class to handle all commands and create the correct command."},{"lineNumber":3,"author":{"gitId":"JodyLorah"},"content":" */"},{"lineNumber":4,"author":{"gitId":"JodyLorah"},"content":""},{"lineNumber":5,"author":{"gitId":"JodyLorah"},"content":"public class Parser {"},{"lineNumber":6,"author":{"gitId":"JodyLorah"},"content":""},{"lineNumber":7,"author":{"gitId":"JodyLorah"},"content":"    /**"},{"lineNumber":8,"author":{"gitId":"JodyLorah"},"content":"     * Returns command corresponding to input."},{"lineNumber":9,"author":{"gitId":"JodyLorah"},"content":"     *"},{"lineNumber":10,"author":{"gitId":"JodyLorah"},"content":"     * @param input user\u0027s input to determine which type of command"},{"lineNumber":11,"author":{"gitId":"JodyLorah"},"content":"     * @return c Command of the input"},{"lineNumber":12,"author":{"gitId":"JodyLorah"},"content":"     * @throws InvalidInstructionException If user keys in an invalid input"},{"lineNumber":13,"author":{"gitId":"JodyLorah"},"content":"     */"},{"lineNumber":14,"author":{"gitId":"JodyLorah"},"content":"    public static Command parse(String input) {"},{"lineNumber":15,"author":{"gitId":"JodyLorah"},"content":"        String type \u003d input.split(\" \")[0];"},{"lineNumber":16,"author":{"gitId":"JodyLorah"},"content":"        Command c \u003d null;"},{"lineNumber":17,"author":{"gitId":"JodyLorah"},"content":"        if (type.equals(\"todo\")) {"},{"lineNumber":18,"author":{"gitId":"JodyLorah"},"content":"            c \u003d new AddCommand(input);"},{"lineNumber":19,"author":{"gitId":"JodyLorah"},"content":"        } else if (type.equals(\"deadline\")) {"},{"lineNumber":20,"author":{"gitId":"JodyLorah"},"content":"            c \u003d new AddCommand(input);"},{"lineNumber":21,"author":{"gitId":"JodyLorah"},"content":"        } else if (type.equals(\"event\")) {"},{"lineNumber":22,"author":{"gitId":"JodyLorah"},"content":"            c \u003d new AddCommand(input);"},{"lineNumber":23,"author":{"gitId":"JodyLorah"},"content":"        } else if (type.equals(\"delete\")) {"},{"lineNumber":24,"author":{"gitId":"JodyLorah"},"content":"            c \u003d new DeleteCommand(input);"},{"lineNumber":25,"author":{"gitId":"JodyLorah"},"content":"        } else if (type.equals(\"done\")) {"},{"lineNumber":26,"author":{"gitId":"JodyLorah"},"content":"            c \u003d new DoneCommand(input);"},{"lineNumber":27,"author":{"gitId":"JodyLorah"},"content":"        } else if (type.equals(\"list\")) {"},{"lineNumber":28,"author":{"gitId":"JodyLorah"},"content":"            c \u003d new ListCommand(input);"},{"lineNumber":29,"author":{"gitId":"JodyLorah"},"content":"        } else if (type.equals(\"find\")) {"},{"lineNumber":30,"author":{"gitId":"JodyLorah"},"content":"            c \u003d new FindCommand(input);"},{"lineNumber":31,"author":{"gitId":"JodyLorah"},"content":"        } else if (type.equals(\"bye\")) {"},{"lineNumber":32,"author":{"gitId":"JodyLorah"},"content":"            c \u003d new ExitCommand(input);"},{"lineNumber":33,"author":{"gitId":"JodyLorah"},"content":"        } else {"},{"lineNumber":34,"author":{"gitId":"JodyLorah"},"content":"            new InvalidInstructionException();"},{"lineNumber":35,"author":{"gitId":"JodyLorah"},"content":"        }"},{"lineNumber":36,"author":{"gitId":"JodyLorah"},"content":"        return c;"},{"lineNumber":37,"author":{"gitId":"JodyLorah"},"content":"    }"},{"lineNumber":38,"author":{"gitId":"JodyLorah"},"content":"}"}],"authorContributionMap":{"JodyLorah":38}},{"path":"src/main/java/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"JodyLorah"},"content":"/**"},{"lineNumber":2,"author":{"gitId":"JodyLorah"},"content":" * Class Task which keeps track of the details of the task"},{"lineNumber":3,"author":{"gitId":"JodyLorah"},"content":" * and whether the task is done."},{"lineNumber":4,"author":{"gitId":"JodyLorah"},"content":" */"},{"lineNumber":5,"author":{"gitId":"JodyLorah"},"content":"public class Task {"},{"lineNumber":6,"author":{"gitId":"JodyLorah"},"content":"    private String name;"},{"lineNumber":7,"author":{"gitId":"JodyLorah"},"content":"    private boolean done;"},{"lineNumber":8,"author":{"gitId":"JodyLorah"},"content":""},{"lineNumber":9,"author":{"gitId":"JodyLorah"},"content":"    /**"},{"lineNumber":10,"author":{"gitId":"JodyLorah"},"content":"     * Takes in details and creates a Task object."},{"lineNumber":11,"author":{"gitId":"JodyLorah"},"content":"     *"},{"lineNumber":12,"author":{"gitId":"JodyLorah"},"content":"     * @param name details of the task"},{"lineNumber":13,"author":{"gitId":"JodyLorah"},"content":"     */"},{"lineNumber":14,"author":{"gitId":"JodyLorah"},"content":"    public Task(String name) {"},{"lineNumber":15,"author":{"gitId":"JodyLorah"},"content":"        this.name \u003d name;"},{"lineNumber":16,"author":{"gitId":"JodyLorah"},"content":"        this.done \u003d false;"},{"lineNumber":17,"author":{"gitId":"JodyLorah"},"content":"    }"},{"lineNumber":18,"author":{"gitId":"JodyLorah"},"content":""},{"lineNumber":19,"author":{"gitId":"JodyLorah"},"content":"    @Override"},{"lineNumber":20,"author":{"gitId":"JodyLorah"},"content":"    public String toString() {"},{"lineNumber":21,"author":{"gitId":"JodyLorah"},"content":"        if (this.done) {"},{"lineNumber":22,"author":{"gitId":"JodyLorah"},"content":"            return String.format(\"[X] %s\", this.name);"},{"lineNumber":23,"author":{"gitId":"JodyLorah"},"content":"        } else {"},{"lineNumber":24,"author":{"gitId":"JodyLorah"},"content":"            return String.format(\"[ ] %s\", this.name);"},{"lineNumber":25,"author":{"gitId":"JodyLorah"},"content":"        }"},{"lineNumber":26,"author":{"gitId":"JodyLorah"},"content":"    }"},{"lineNumber":27,"author":{"gitId":"JodyLorah"},"content":""},{"lineNumber":28,"author":{"gitId":"JodyLorah"},"content":"    /**"},{"lineNumber":29,"author":{"gitId":"JodyLorah"},"content":"     * Ammends if the task is done."},{"lineNumber":30,"author":{"gitId":"JodyLorah"},"content":"     */"},{"lineNumber":31,"author":{"gitId":"JodyLorah"},"content":"    public void setDone() {"},{"lineNumber":32,"author":{"gitId":"JodyLorah"},"content":"        this.done \u003d true;"},{"lineNumber":33,"author":{"gitId":"JodyLorah"},"content":"    }"},{"lineNumber":34,"author":{"gitId":"JodyLorah"},"content":""},{"lineNumber":35,"author":{"gitId":"JodyLorah"},"content":"    /**"},{"lineNumber":36,"author":{"gitId":"JodyLorah"},"content":"     * Returns details of the task."},{"lineNumber":37,"author":{"gitId":"JodyLorah"},"content":"     *"},{"lineNumber":38,"author":{"gitId":"JodyLorah"},"content":"     * @return details of the task"},{"lineNumber":39,"author":{"gitId":"JodyLorah"},"content":"     */"},{"lineNumber":40,"author":{"gitId":"JodyLorah"},"content":"    public String getTaskDetails() {"},{"lineNumber":41,"author":{"gitId":"JodyLorah"},"content":"        return this.name;"},{"lineNumber":42,"author":{"gitId":"JodyLorah"},"content":"    }"},{"lineNumber":43,"author":{"gitId":"JodyLorah"},"content":"}"}],"authorContributionMap":{"JodyLorah":43}},{"path":"src/main/java/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"JodyLorah"},"content":"import java.time.LocalDateTime;"},{"lineNumber":2,"author":{"gitId":"JodyLorah"},"content":"import java.time.format.DateTimeFormatter;"},{"lineNumber":3,"author":{"gitId":"JodyLorah"},"content":"import java.time.format.DateTimeParseException;"},{"lineNumber":4,"author":{"gitId":"JodyLorah"},"content":"import java.util.ArrayList;"},{"lineNumber":5,"author":{"gitId":"JodyLorah"},"content":""},{"lineNumber":6,"author":{"gitId":"JodyLorah"},"content":"/**"},{"lineNumber":7,"author":{"gitId":"JodyLorah"},"content":" * TaskList class which stores all the tasks user keyed in."},{"lineNumber":8,"author":{"gitId":"JodyLorah"},"content":" */"},{"lineNumber":9,"author":{"gitId":"JodyLorah"},"content":"public class TaskList {"},{"lineNumber":10,"author":{"gitId":"JodyLorah"},"content":"    private ArrayList\u003cTask\u003e taskList;"},{"lineNumber":11,"author":{"gitId":"JodyLorah"},"content":""},{"lineNumber":12,"author":{"gitId":"JodyLorah"},"content":"    /**"},{"lineNumber":13,"author":{"gitId":"JodyLorah"},"content":"     * Creates TaskList which is essentially an ArrayList of Task."},{"lineNumber":14,"author":{"gitId":"JodyLorah"},"content":"     */"},{"lineNumber":15,"author":{"gitId":"JodyLorah"},"content":"    public TaskList() {"},{"lineNumber":16,"author":{"gitId":"JodyLorah"},"content":"        this.taskList \u003d new ArrayList\u003cTask\u003e();"},{"lineNumber":17,"author":{"gitId":"JodyLorah"},"content":"    }"},{"lineNumber":18,"author":{"gitId":"JodyLorah"},"content":""},{"lineNumber":19,"author":{"gitId":"JodyLorah"},"content":"    /**"},{"lineNumber":20,"author":{"gitId":"JodyLorah"},"content":"     * Retrieves the information in the TaskList."},{"lineNumber":21,"author":{"gitId":"JodyLorah"},"content":"     *"},{"lineNumber":22,"author":{"gitId":"JodyLorah"},"content":"     * @return taskList ArrayList of task inputs"},{"lineNumber":23,"author":{"gitId":"JodyLorah"},"content":"     */"},{"lineNumber":24,"author":{"gitId":"JodyLorah"},"content":"    public ArrayList\u003cTask\u003e getList() {"},{"lineNumber":25,"author":{"gitId":"JodyLorah"},"content":"        return this.taskList;"},{"lineNumber":26,"author":{"gitId":"JodyLorah"},"content":"    }"},{"lineNumber":27,"author":{"gitId":"JodyLorah"},"content":""},{"lineNumber":28,"author":{"gitId":"JodyLorah"},"content":"    /**"},{"lineNumber":29,"author":{"gitId":"JodyLorah"},"content":"     * Returns number of items in taskList."},{"lineNumber":30,"author":{"gitId":"JodyLorah"},"content":"     *"},{"lineNumber":31,"author":{"gitId":"JodyLorah"},"content":"     * @return taskList.size() Number of items in the taskList"},{"lineNumber":32,"author":{"gitId":"JodyLorah"},"content":"     */"},{"lineNumber":33,"author":{"gitId":"JodyLorah"},"content":"    public int getSize() {"},{"lineNumber":34,"author":{"gitId":"JodyLorah"},"content":"        return this.taskList.size();"},{"lineNumber":35,"author":{"gitId":"JodyLorah"},"content":"    }"},{"lineNumber":36,"author":{"gitId":"JodyLorah"},"content":""},{"lineNumber":37,"author":{"gitId":"JodyLorah"},"content":"    /**"},{"lineNumber":38,"author":{"gitId":"JodyLorah"},"content":"     * Returns item at a given index."},{"lineNumber":39,"author":{"gitId":"JodyLorah"},"content":"     *"},{"lineNumber":40,"author":{"gitId":"JodyLorah"},"content":"     * @param i Index of item to be retrieved"},{"lineNumber":41,"author":{"gitId":"JodyLorah"},"content":"     * @return string Details of item retrieved"},{"lineNumber":42,"author":{"gitId":"JodyLorah"},"content":"     */"},{"lineNumber":43,"author":{"gitId":"JodyLorah"},"content":"    public String getInd(int i) {"},{"lineNumber":44,"author":{"gitId":"JodyLorah"},"content":"        ArrayList\u003cTask\u003e arr \u003d this.getList();"},{"lineNumber":45,"author":{"gitId":"JodyLorah"},"content":"        return arr.get(i).toString();"},{"lineNumber":46,"author":{"gitId":"JodyLorah"},"content":"    }"},{"lineNumber":47,"author":{"gitId":"JodyLorah"},"content":""},{"lineNumber":48,"author":{"gitId":"JodyLorah"},"content":"    String line \u003d \"------------------------------------------\";"},{"lineNumber":49,"author":{"gitId":"JodyLorah"},"content":""},{"lineNumber":50,"author":{"gitId":"JodyLorah"},"content":"    /**"},{"lineNumber":51,"author":{"gitId":"JodyLorah"},"content":"     * Create new Todo task and add it to taskList."},{"lineNumber":52,"author":{"gitId":"JodyLorah"},"content":"     *"},{"lineNumber":53,"author":{"gitId":"JodyLorah"},"content":"     * @param input Details of Todo task"},{"lineNumber":54,"author":{"gitId":"JodyLorah"},"content":"     * @throws ArrayIndexOutOfBoundsException If task has no details"},{"lineNumber":55,"author":{"gitId":"JodyLorah"},"content":"     */"},{"lineNumber":56,"author":{"gitId":"JodyLorah"},"content":"    public void addToDo(String input) { //when user keys in todo abc"},{"lineNumber":57,"author":{"gitId":"JodyLorah"},"content":"        String[] temp \u003d input.split(\" \", 2);"},{"lineNumber":58,"author":{"gitId":"JodyLorah"},"content":"        try {"},{"lineNumber":59,"author":{"gitId":"JodyLorah"},"content":"            Task t \u003d new Todo(temp[1]);"},{"lineNumber":60,"author":{"gitId":"JodyLorah"},"content":"        } catch (ArrayIndexOutOfBoundsException e) {"},{"lineNumber":61,"author":{"gitId":"JodyLorah"},"content":"            new EmptyToDoException();"},{"lineNumber":62,"author":{"gitId":"JodyLorah"},"content":"            return;"},{"lineNumber":63,"author":{"gitId":"JodyLorah"},"content":"        }"},{"lineNumber":64,"author":{"gitId":"JodyLorah"},"content":"        Task t \u003d new Todo(temp[1]);"},{"lineNumber":65,"author":{"gitId":"JodyLorah"},"content":"        System.out.println(line);"},{"lineNumber":66,"author":{"gitId":"JodyLorah"},"content":"        System.out.println(\"Got it. I\u0027ve added this task:\");"},{"lineNumber":67,"author":{"gitId":"JodyLorah"},"content":"        this.taskList.add(t);"},{"lineNumber":68,"author":{"gitId":"JodyLorah"},"content":"        System.out.println(t);"},{"lineNumber":69,"author":{"gitId":"JodyLorah"},"content":"        System.out.println(\"Now you have \" + this.taskList.size() + \" tasks in the list.\");"},{"lineNumber":70,"author":{"gitId":"JodyLorah"},"content":"        System.out.println(line);"},{"lineNumber":71,"author":{"gitId":"JodyLorah"},"content":"    }"},{"lineNumber":72,"author":{"gitId":"JodyLorah"},"content":""},{"lineNumber":73,"author":{"gitId":"JodyLorah"},"content":"    /**"},{"lineNumber":74,"author":{"gitId":"JodyLorah"},"content":"     * Adds given task to taskList."},{"lineNumber":75,"author":{"gitId":"JodyLorah"},"content":"     *"},{"lineNumber":76,"author":{"gitId":"JodyLorah"},"content":"     * @param input Task to be added"},{"lineNumber":77,"author":{"gitId":"JodyLorah"},"content":"     */"},{"lineNumber":78,"author":{"gitId":"JodyLorah"},"content":"    public void addToDo(Task input) { //when loading fr data [T][ ] abc"},{"lineNumber":79,"author":{"gitId":"JodyLorah"},"content":"        this.taskList.add(input);"},{"lineNumber":80,"author":{"gitId":"JodyLorah"},"content":"    }"},{"lineNumber":81,"author":{"gitId":"JodyLorah"},"content":""},{"lineNumber":82,"author":{"gitId":"JodyLorah"},"content":"    /**"},{"lineNumber":83,"author":{"gitId":"JodyLorah"},"content":"     * Create new Deadline task and add it to taskList."},{"lineNumber":84,"author":{"gitId":"JodyLorah"},"content":"     *"},{"lineNumber":85,"author":{"gitId":"JodyLorah"},"content":"     * @param input Details of Deadline task"},{"lineNumber":86,"author":{"gitId":"JodyLorah"},"content":"     * @throws ArrayIndexOutOfBoundsException If task has no details"},{"lineNumber":87,"author":{"gitId":"JodyLorah"},"content":"     * @throws DateTimeParseException If task has no date or time"},{"lineNumber":88,"author":{"gitId":"JodyLorah"},"content":"     */"},{"lineNumber":89,"author":{"gitId":"JodyLorah"},"content":"    public void addDeadline(String input) { //when user keys in deadline abc"},{"lineNumber":90,"author":{"gitId":"JodyLorah"},"content":"        String[] temp \u003d input.split(\" \", 2);"},{"lineNumber":91,"author":{"gitId":"JodyLorah"},"content":"        try {"},{"lineNumber":92,"author":{"gitId":"JodyLorah"},"content":"            Task t \u003d new Todo(temp[1]);"},{"lineNumber":93,"author":{"gitId":"JodyLorah"},"content":"        } catch (ArrayIndexOutOfBoundsException e) {"},{"lineNumber":94,"author":{"gitId":"JodyLorah"},"content":"            new EmptyDeadlineException();"},{"lineNumber":95,"author":{"gitId":"JodyLorah"},"content":"            return;"},{"lineNumber":96,"author":{"gitId":"JodyLorah"},"content":"        }"},{"lineNumber":97,"author":{"gitId":"JodyLorah"},"content":"        String data \u003d temp[1];"},{"lineNumber":98,"author":{"gitId":"JodyLorah"},"content":"        String description \u003d data.split(\" /by \", 2)[0];"},{"lineNumber":99,"author":{"gitId":"JodyLorah"},"content":"        String by \u003d data.split(\" /by \", 2)[1];"},{"lineNumber":100,"author":{"gitId":"JodyLorah"},"content":"        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"dd/MM/yyyy HH:mm\");"},{"lineNumber":101,"author":{"gitId":"JodyLorah"},"content":"        try {"},{"lineNumber":102,"author":{"gitId":"JodyLorah"},"content":"            LocalDateTime dateTime \u003d LocalDateTime.parse(by, formatter);"},{"lineNumber":103,"author":{"gitId":"JodyLorah"},"content":""},{"lineNumber":104,"author":{"gitId":"JodyLorah"},"content":"        } catch (DateTimeParseException e) {"},{"lineNumber":105,"author":{"gitId":"JodyLorah"},"content":"            new EmptyDateTimeException();"},{"lineNumber":106,"author":{"gitId":"JodyLorah"},"content":"            return;"},{"lineNumber":107,"author":{"gitId":"JodyLorah"},"content":"        }"},{"lineNumber":108,"author":{"gitId":"JodyLorah"},"content":"        System.out.println(line);"},{"lineNumber":109,"author":{"gitId":"JodyLorah"},"content":"        System.out.println(\"Got it. I\u0027ve added this task:\");"},{"lineNumber":110,"author":{"gitId":"JodyLorah"},"content":"        LocalDateTime dateTime \u003d LocalDateTime.parse(by, formatter);"},{"lineNumber":111,"author":{"gitId":"JodyLorah"},"content":"        Task t \u003d new Deadline(description, dateTime);"},{"lineNumber":112,"author":{"gitId":"JodyLorah"},"content":"        this.taskList.add(t);"},{"lineNumber":113,"author":{"gitId":"JodyLorah"},"content":"        System.out.println(t);"},{"lineNumber":114,"author":{"gitId":"JodyLorah"},"content":"        System.out.println(\"Now you have \" + this.taskList.size() + \" tasks in the list.\");"},{"lineNumber":115,"author":{"gitId":"JodyLorah"},"content":"        System.out.println(line);"},{"lineNumber":116,"author":{"gitId":"JodyLorah"},"content":"    }"},{"lineNumber":117,"author":{"gitId":"JodyLorah"},"content":""},{"lineNumber":118,"author":{"gitId":"JodyLorah"},"content":"    /**"},{"lineNumber":119,"author":{"gitId":"JodyLorah"},"content":"     * Adds given task to taskList."},{"lineNumber":120,"author":{"gitId":"JodyLorah"},"content":"     *"},{"lineNumber":121,"author":{"gitId":"JodyLorah"},"content":"     * @param input Task to be added"},{"lineNumber":122,"author":{"gitId":"JodyLorah"},"content":"     */"},{"lineNumber":123,"author":{"gitId":"JodyLorah"},"content":"    public void addDeadline(Task input) { //when loading fr data [D][ ] abc"},{"lineNumber":124,"author":{"gitId":"JodyLorah"},"content":"        this.taskList.add(input);"},{"lineNumber":125,"author":{"gitId":"JodyLorah"},"content":"    }"},{"lineNumber":126,"author":{"gitId":"JodyLorah"},"content":""},{"lineNumber":127,"author":{"gitId":"JodyLorah"},"content":"    /**"},{"lineNumber":128,"author":{"gitId":"JodyLorah"},"content":"     * Create new Event task and add it to taskList."},{"lineNumber":129,"author":{"gitId":"JodyLorah"},"content":"     *"},{"lineNumber":130,"author":{"gitId":"JodyLorah"},"content":"     * @param input Details of Event task"},{"lineNumber":131,"author":{"gitId":"JodyLorah"},"content":"     * @throws ArrayIndexOutOfBoundsException If task has no details"},{"lineNumber":132,"author":{"gitId":"JodyLorah"},"content":"     * @throws DateTimeParseException If task has no date or time"},{"lineNumber":133,"author":{"gitId":"JodyLorah"},"content":"     */"},{"lineNumber":134,"author":{"gitId":"JodyLorah"},"content":"    public void addEvent(String input) { ////when user keys in event abc"},{"lineNumber":135,"author":{"gitId":"JodyLorah"},"content":"        String[] temp \u003d input.split(\" \", 2);"},{"lineNumber":136,"author":{"gitId":"JodyLorah"},"content":"        try {"},{"lineNumber":137,"author":{"gitId":"JodyLorah"},"content":"            Task t \u003d new Todo(temp[1]);"},{"lineNumber":138,"author":{"gitId":"JodyLorah"},"content":"        } catch (ArrayIndexOutOfBoundsException e) {"},{"lineNumber":139,"author":{"gitId":"JodyLorah"},"content":"            new EmptyEventException();"},{"lineNumber":140,"author":{"gitId":"JodyLorah"},"content":"            return;"},{"lineNumber":141,"author":{"gitId":"JodyLorah"},"content":"        }"},{"lineNumber":142,"author":{"gitId":"JodyLorah"},"content":"        String data \u003d temp[1];"},{"lineNumber":143,"author":{"gitId":"JodyLorah"},"content":"        String description \u003d data.split(\" /at \", 2)[0];"},{"lineNumber":144,"author":{"gitId":"JodyLorah"},"content":"        String at \u003d data.split(\" /at \", 2)[1];"},{"lineNumber":145,"author":{"gitId":"JodyLorah"},"content":"        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"dd/MM/yyyy HH:mm\");"},{"lineNumber":146,"author":{"gitId":"JodyLorah"},"content":"        try {"},{"lineNumber":147,"author":{"gitId":"JodyLorah"},"content":"            LocalDateTime dateTime \u003d LocalDateTime.parse(at, formatter);"},{"lineNumber":148,"author":{"gitId":"JodyLorah"},"content":""},{"lineNumber":149,"author":{"gitId":"JodyLorah"},"content":"        } catch (DateTimeParseException e) {"},{"lineNumber":150,"author":{"gitId":"JodyLorah"},"content":"            new EmptyDateTimeException();"},{"lineNumber":151,"author":{"gitId":"JodyLorah"},"content":"            return;"},{"lineNumber":152,"author":{"gitId":"JodyLorah"},"content":"        }"},{"lineNumber":153,"author":{"gitId":"JodyLorah"},"content":"        System.out.println(line);"},{"lineNumber":154,"author":{"gitId":"JodyLorah"},"content":"        System.out.println(\"Got it. I\u0027ve added this task:\");"},{"lineNumber":155,"author":{"gitId":"JodyLorah"},"content":"        LocalDateTime dateTime \u003d LocalDateTime.parse(at, formatter);"},{"lineNumber":156,"author":{"gitId":"JodyLorah"},"content":"        Task t \u003d new Event(description, dateTime);"},{"lineNumber":157,"author":{"gitId":"JodyLorah"},"content":"        this.taskList.add(t);"},{"lineNumber":158,"author":{"gitId":"JodyLorah"},"content":"        System.out.println(t);"},{"lineNumber":159,"author":{"gitId":"JodyLorah"},"content":"        System.out.println(\"Now you have \" + this.taskList.size() + \" tasks in the list.\");"},{"lineNumber":160,"author":{"gitId":"JodyLorah"},"content":"        System.out.println(line);"},{"lineNumber":161,"author":{"gitId":"JodyLorah"},"content":"    }"},{"lineNumber":162,"author":{"gitId":"JodyLorah"},"content":""},{"lineNumber":163,"author":{"gitId":"JodyLorah"},"content":"    /**"},{"lineNumber":164,"author":{"gitId":"JodyLorah"},"content":"     * Adds given task to taskList."},{"lineNumber":165,"author":{"gitId":"JodyLorah"},"content":"     *"},{"lineNumber":166,"author":{"gitId":"JodyLorah"},"content":"     * @param input Task to be added"},{"lineNumber":167,"author":{"gitId":"JodyLorah"},"content":"     */"},{"lineNumber":168,"author":{"gitId":"JodyLorah"},"content":"    public void addEvent(Task input) { //when loading fr data [E][ ] abc"},{"lineNumber":169,"author":{"gitId":"JodyLorah"},"content":"        this.taskList.add(input);"},{"lineNumber":170,"author":{"gitId":"JodyLorah"},"content":"    }"},{"lineNumber":171,"author":{"gitId":"JodyLorah"},"content":""},{"lineNumber":172,"author":{"gitId":"JodyLorah"},"content":"    /**"},{"lineNumber":173,"author":{"gitId":"JodyLorah"},"content":"     * Mark an item as done in taskList."},{"lineNumber":174,"author":{"gitId":"JodyLorah"},"content":"     */"},{"lineNumber":175,"author":{"gitId":"JodyLorah"},"content":"    public void markDone(String input) {"},{"lineNumber":176,"author":{"gitId":"JodyLorah"},"content":"        System.out.println(line);"},{"lineNumber":177,"author":{"gitId":"JodyLorah"},"content":"        int index \u003d Integer.parseInt(input.split(\" \")[1]) - 1;"},{"lineNumber":178,"author":{"gitId":"JodyLorah"},"content":"        System.out.println(\"Nice! I\u0027ve marked this task as done:\");"},{"lineNumber":179,"author":{"gitId":"JodyLorah"},"content":"        this.taskList.get(index).setDone();"},{"lineNumber":180,"author":{"gitId":"JodyLorah"},"content":"        System.out.println(this.taskList.get(index));"},{"lineNumber":181,"author":{"gitId":"JodyLorah"},"content":"        System.out.println(line);"},{"lineNumber":182,"author":{"gitId":"JodyLorah"},"content":"    }"},{"lineNumber":183,"author":{"gitId":"JodyLorah"},"content":""},{"lineNumber":184,"author":{"gitId":"JodyLorah"},"content":"    /**"},{"lineNumber":185,"author":{"gitId":"JodyLorah"},"content":"     * Deletes given task from taskList."},{"lineNumber":186,"author":{"gitId":"JodyLorah"},"content":"     *"},{"lineNumber":187,"author":{"gitId":"JodyLorah"},"content":"     * @param input Task to be deleted"},{"lineNumber":188,"author":{"gitId":"JodyLorah"},"content":"     * @throws ArrayIndexOutOfBoundsException If event has no details"},{"lineNumber":189,"author":{"gitId":"JodyLorah"},"content":"     * @throws NumberFormatException If alphabets were given instead of numbers"},{"lineNumber":190,"author":{"gitId":"JodyLorah"},"content":"     * @throws IndexOutOfBoundsException If task has nothing to be deleted"},{"lineNumber":191,"author":{"gitId":"JodyLorah"},"content":"     */"},{"lineNumber":192,"author":{"gitId":"JodyLorah"},"content":"    public void delete(String input) {"},{"lineNumber":193,"author":{"gitId":"JodyLorah"},"content":"        String[] temp \u003d input.split(\" \", 2);"},{"lineNumber":194,"author":{"gitId":"JodyLorah"},"content":""},{"lineNumber":195,"author":{"gitId":"JodyLorah"},"content":"        try {"},{"lineNumber":196,"author":{"gitId":"JodyLorah"},"content":"            Task t \u003d new Todo(temp[1]);"},{"lineNumber":197,"author":{"gitId":"JodyLorah"},"content":"        } catch (ArrayIndexOutOfBoundsException e) {"},{"lineNumber":198,"author":{"gitId":"JodyLorah"},"content":"            new EmptyDeleteException();"},{"lineNumber":199,"author":{"gitId":"JodyLorah"},"content":"            return;"},{"lineNumber":200,"author":{"gitId":"JodyLorah"},"content":"        }"},{"lineNumber":201,"author":{"gitId":"JodyLorah"},"content":""},{"lineNumber":202,"author":{"gitId":"JodyLorah"},"content":"        try {"},{"lineNumber":203,"author":{"gitId":"JodyLorah"},"content":"            this.taskList.get(Integer.parseInt(temp[1]) - 1);"},{"lineNumber":204,"author":{"gitId":"JodyLorah"},"content":"        } catch (NumberFormatException e) {"},{"lineNumber":205,"author":{"gitId":"JodyLorah"},"content":"            new AlphabetsInsteadOfNumberException();"},{"lineNumber":206,"author":{"gitId":"JodyLorah"},"content":"            return;"},{"lineNumber":207,"author":{"gitId":"JodyLorah"},"content":"        }"},{"lineNumber":208,"author":{"gitId":"JodyLorah"},"content":""},{"lineNumber":209,"author":{"gitId":"JodyLorah"},"content":"        try {"},{"lineNumber":210,"author":{"gitId":"JodyLorah"},"content":"            this.taskList.get(Integer.parseInt(temp[1]) - 1);"},{"lineNumber":211,"author":{"gitId":"JodyLorah"},"content":"        } catch (IndexOutOfBoundsException e) {"},{"lineNumber":212,"author":{"gitId":"JodyLorah"},"content":"            new EmptyListDeletionException();"},{"lineNumber":213,"author":{"gitId":"JodyLorah"},"content":"            return;"},{"lineNumber":214,"author":{"gitId":"JodyLorah"},"content":"        }"},{"lineNumber":215,"author":{"gitId":"JodyLorah"},"content":""},{"lineNumber":216,"author":{"gitId":"JodyLorah"},"content":"        System.out.println(line);"},{"lineNumber":217,"author":{"gitId":"JodyLorah"},"content":"        System.out.println(\"Noted. I\u0027ve removed this task:\");"},{"lineNumber":218,"author":{"gitId":"JodyLorah"},"content":"        int index \u003d Integer.parseInt(temp[1]) - 1;"},{"lineNumber":219,"author":{"gitId":"JodyLorah"},"content":"        System.out.println(this.taskList.get(index));"},{"lineNumber":220,"author":{"gitId":"JodyLorah"},"content":"        this.taskList.remove(index);"},{"lineNumber":221,"author":{"gitId":"JodyLorah"},"content":"        System.out.println(\"Now you have \" + this.taskList.size() + \" tasks in the list.\");"},{"lineNumber":222,"author":{"gitId":"JodyLorah"},"content":"        System.out.println(line);"},{"lineNumber":223,"author":{"gitId":"JodyLorah"},"content":"    }"},{"lineNumber":224,"author":{"gitId":"JodyLorah"},"content":""},{"lineNumber":225,"author":{"gitId":"JodyLorah"},"content":"    /**"},{"lineNumber":226,"author":{"gitId":"JodyLorah"},"content":"     * List all items in taskList."},{"lineNumber":227,"author":{"gitId":"JodyLorah"},"content":"     */"},{"lineNumber":228,"author":{"gitId":"JodyLorah"},"content":"    public void list() {"},{"lineNumber":229,"author":{"gitId":"JodyLorah"},"content":"        System.out.println(line);"},{"lineNumber":230,"author":{"gitId":"JodyLorah"},"content":"        System.out.println(\"Here are the tasks in your list:\");"},{"lineNumber":231,"author":{"gitId":"JodyLorah"},"content":"        for (int i \u003d 1; i \u003c this.taskList.size() + 1; i++) {"},{"lineNumber":232,"author":{"gitId":"JodyLorah"},"content":"            System.out.println(i + \".\" + this.taskList.get(i - 1));"},{"lineNumber":233,"author":{"gitId":"JodyLorah"},"content":"        }"},{"lineNumber":234,"author":{"gitId":"JodyLorah"},"content":"        System.out.println(line);"},{"lineNumber":235,"author":{"gitId":"JodyLorah"},"content":"    }"},{"lineNumber":236,"author":{"gitId":"JodyLorah"},"content":""},{"lineNumber":237,"author":{"gitId":"JodyLorah"},"content":"    /**"},{"lineNumber":238,"author":{"gitId":"JodyLorah"},"content":"     * Finds and lists all relevant items in taskList."},{"lineNumber":239,"author":{"gitId":"JodyLorah"},"content":"     *"},{"lineNumber":240,"author":{"gitId":"JodyLorah"},"content":"     * @param input input of the item to be found"},{"lineNumber":241,"author":{"gitId":"JodyLorah"},"content":"     * @throws ArrayIndexOutOfBoundsException If user does not input what to find"},{"lineNumber":242,"author":{"gitId":"JodyLorah"},"content":"     */"},{"lineNumber":243,"author":{"gitId":"JodyLorah"},"content":"    public void find(String input) {"},{"lineNumber":244,"author":{"gitId":"JodyLorah"},"content":"        try {"},{"lineNumber":245,"author":{"gitId":"JodyLorah"},"content":"            String[] arr \u003d input.split(\" \", 2);"},{"lineNumber":246,"author":{"gitId":"JodyLorah"},"content":"        } catch (ArrayIndexOutOfBoundsException e) {"},{"lineNumber":247,"author":{"gitId":"JodyLorah"},"content":"            new EmptyDeleteException();"},{"lineNumber":248,"author":{"gitId":"JodyLorah"},"content":"            return;"},{"lineNumber":249,"author":{"gitId":"JodyLorah"},"content":"        }"},{"lineNumber":250,"author":{"gitId":"JodyLorah"},"content":"        String item \u003d input.split(\" \", 2)[1];"},{"lineNumber":251,"author":{"gitId":"JodyLorah"},"content":"        System.out.println(line);"},{"lineNumber":252,"author":{"gitId":"JodyLorah"},"content":"        System.out.println(\"Here are the matching tasks in your list:\");"},{"lineNumber":253,"author":{"gitId":"JodyLorah"},"content":"        int counter \u003d 1;"},{"lineNumber":254,"author":{"gitId":"JodyLorah"},"content":"        ArrayList\u003cTask\u003e list \u003d this.taskList;"},{"lineNumber":255,"author":{"gitId":"JodyLorah"},"content":"        for (int i \u003d 0; i \u003c this.taskList.size(); i++) {"},{"lineNumber":256,"author":{"gitId":"JodyLorah"},"content":"            String deets \u003d list.get(i).getTaskDetails().split(\"]\" + \" \", 2)[1];"},{"lineNumber":257,"author":{"gitId":"JodyLorah"},"content":"            if (deets.contains(item)) {"},{"lineNumber":258,"author":{"gitId":"JodyLorah"},"content":"                System.out.println(counter + \".\" + list.get(i));"},{"lineNumber":259,"author":{"gitId":"JodyLorah"},"content":"                counter++;"},{"lineNumber":260,"author":{"gitId":"JodyLorah"},"content":"            }"},{"lineNumber":261,"author":{"gitId":"JodyLorah"},"content":"        }"},{"lineNumber":262,"author":{"gitId":"JodyLorah"},"content":"        System.out.println(line);"},{"lineNumber":263,"author":{"gitId":"JodyLorah"},"content":"    }"},{"lineNumber":264,"author":{"gitId":"JodyLorah"},"content":"}"}],"authorContributionMap":{"JodyLorah":264}},{"path":"src/main/java/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"JodyLorah"},"content":"/**"},{"lineNumber":2,"author":{"gitId":"JodyLorah"},"content":" * Todo class which creates a todo task."},{"lineNumber":3,"author":{"gitId":"JodyLorah"},"content":" */"},{"lineNumber":4,"author":{"gitId":"JodyLorah"},"content":""},{"lineNumber":5,"author":{"gitId":"JodyLorah"},"content":"public class Todo extends Task {"},{"lineNumber":6,"author":{"gitId":"JodyLorah"},"content":"    private String task;"},{"lineNumber":7,"author":{"gitId":"JodyLorah"},"content":""},{"lineNumber":8,"author":{"gitId":"JodyLorah"},"content":"    /**"},{"lineNumber":9,"author":{"gitId":"JodyLorah"},"content":"     * Creates Todo task which keeps track of task details."},{"lineNumber":10,"author":{"gitId":"JodyLorah"},"content":"     *"},{"lineNumber":11,"author":{"gitId":"JodyLorah"},"content":"     * @param task details of the todo task"},{"lineNumber":12,"author":{"gitId":"JodyLorah"},"content":"     */"},{"lineNumber":13,"author":{"gitId":"JodyLorah"},"content":"    public Todo(String task) {"},{"lineNumber":14,"author":{"gitId":"JodyLorah"},"content":"        super(task);"},{"lineNumber":15,"author":{"gitId":"JodyLorah"},"content":"    }"},{"lineNumber":16,"author":{"gitId":"JodyLorah"},"content":""},{"lineNumber":17,"author":{"gitId":"JodyLorah"},"content":"    @Override"},{"lineNumber":18,"author":{"gitId":"JodyLorah"},"content":"    public String toString() {"},{"lineNumber":19,"author":{"gitId":"JodyLorah"},"content":"        return \"[T]\" + super.toString();"},{"lineNumber":20,"author":{"gitId":"JodyLorah"},"content":"    }"},{"lineNumber":21,"author":{"gitId":"JodyLorah"},"content":""},{"lineNumber":22,"author":{"gitId":"JodyLorah"},"content":"    /**"},{"lineNumber":23,"author":{"gitId":"JodyLorah"},"content":"     * Returns details of the todo task."},{"lineNumber":24,"author":{"gitId":"JodyLorah"},"content":"     *"},{"lineNumber":25,"author":{"gitId":"JodyLorah"},"content":"     * @return details of the task"},{"lineNumber":26,"author":{"gitId":"JodyLorah"},"content":"     */"},{"lineNumber":27,"author":{"gitId":"JodyLorah"},"content":"    @Override"},{"lineNumber":28,"author":{"gitId":"JodyLorah"},"content":"    public String getTaskDetails() {"},{"lineNumber":29,"author":{"gitId":"JodyLorah"},"content":"        return super.toString();"},{"lineNumber":30,"author":{"gitId":"JodyLorah"},"content":"    }"},{"lineNumber":31,"author":{"gitId":"JodyLorah"},"content":"}"}],"authorContributionMap":{"JodyLorah":31}},{"path":"src/main/java/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"JodyLorah"},"content":"/**"},{"lineNumber":2,"author":{"gitId":"JodyLorah"},"content":" * Ui class which stores all the basic UI stuff like welcome message."},{"lineNumber":3,"author":{"gitId":"JodyLorah"},"content":" */"},{"lineNumber":4,"author":{"gitId":"JodyLorah"},"content":""},{"lineNumber":5,"author":{"gitId":"JodyLorah"},"content":"public class Ui {"},{"lineNumber":6,"author":{"gitId":"JodyLorah"},"content":""},{"lineNumber":7,"author":{"gitId":"JodyLorah"},"content":"    /**"},{"lineNumber":8,"author":{"gitId":"JodyLorah"},"content":"     * Prints a welcome message."},{"lineNumber":9,"author":{"gitId":"JodyLorah"},"content":"     */"},{"lineNumber":10,"author":{"gitId":"JodyLorah"},"content":"    public static void showWelcome() {"},{"lineNumber":11,"author":{"gitId":"JodyLorah"},"content":"        String line \u003d \"------------------------------------------\";"},{"lineNumber":12,"author":{"gitId":"JodyLorah"},"content":""},{"lineNumber":13,"author":{"gitId":"JodyLorah"},"content":"        //introduction screen"},{"lineNumber":14,"author":{"gitId":"JodyLorah"},"content":"        System.out.println(line);"},{"lineNumber":15,"author":{"gitId":"JodyLorah"},"content":"        System.out.println(\"Hello! I\u0027m Duke\");"},{"lineNumber":16,"author":{"gitId":"JodyLorah"},"content":"        System.out.println(\"What can I do for you?\");"},{"lineNumber":17,"author":{"gitId":"JodyLorah"},"content":"        System.out.println(line);"},{"lineNumber":18,"author":{"gitId":"JodyLorah"},"content":"    }"},{"lineNumber":19,"author":{"gitId":"JodyLorah"},"content":"}"}],"authorContributionMap":{"JodyLorah":19}},{"path":"src/main/java/duke.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"JodyLorah"},"content":"[T][X] buy bread"},{"lineNumber":2,"author":{"gitId":"JodyLorah"},"content":"[D][ ] go to work (by: Jan 25 2021 10:00)"},{"lineNumber":3,"author":{"gitId":"JodyLorah"},"content":"[D][ ] go to work (by: Jan 25 2021 14:00)"},{"lineNumber":4,"author":{"gitId":"JodyLorah"},"content":"[E][ ] go and sleep (at: Dec 23 2019 23:59)"},{"lineNumber":5,"author":{"gitId":"JodyLorah"},"content":"[E][ ] go and sleep (at: Dec 23 2019 23:59)"},{"lineNumber":6,"author":{"gitId":"JodyLorah"},"content":"[E][ ] go and sleep (at: Dec 23 2019 23:59)"}],"authorContributionMap":{"JodyLorah":6}},{"path":"src/test/java/AddCommandTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"JodyLorah"},"content":"import org.junit.jupiter.api.Test;"},{"lineNumber":2,"author":{"gitId":"JodyLorah"},"content":""},{"lineNumber":3,"author":{"gitId":"JodyLorah"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;"},{"lineNumber":4,"author":{"gitId":"JodyLorah"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;"},{"lineNumber":5,"author":{"gitId":"JodyLorah"},"content":""},{"lineNumber":6,"author":{"gitId":"JodyLorah"},"content":"public class AddCommandTest {"},{"lineNumber":7,"author":{"gitId":"JodyLorah"},"content":"    TaskList taskList;"},{"lineNumber":8,"author":{"gitId":"JodyLorah"},"content":"    DataHandler dataHandler;"},{"lineNumber":9,"author":{"gitId":"JodyLorah"},"content":""},{"lineNumber":10,"author":{"gitId":"JodyLorah"},"content":"    String todoInput \u003d \"todo this\";"},{"lineNumber":11,"author":{"gitId":"JodyLorah"},"content":"    AddCommand addTodoCommand \u003d new AddCommand(todoInput);"},{"lineNumber":12,"author":{"gitId":"JodyLorah"},"content":""},{"lineNumber":13,"author":{"gitId":"JodyLorah"},"content":"    String deadlineInput \u003d \"deadline return book /by 02/12/2019 18:00\";"},{"lineNumber":14,"author":{"gitId":"JodyLorah"},"content":"    AddCommand addDeadlineCommand \u003d new AddCommand(deadlineInput);"},{"lineNumber":15,"author":{"gitId":"JodyLorah"},"content":""},{"lineNumber":16,"author":{"gitId":"JodyLorah"},"content":"    String eventInput \u003d \"event return book /at 02/12/2019 18:00\";"},{"lineNumber":17,"author":{"gitId":"JodyLorah"},"content":"    AddCommand addEventCommand \u003d new AddCommand(deadlineInput);"},{"lineNumber":18,"author":{"gitId":"JodyLorah"},"content":""},{"lineNumber":19,"author":{"gitId":"JodyLorah"},"content":""},{"lineNumber":20,"author":{"gitId":"JodyLorah"},"content":"    @Test"},{"lineNumber":21,"author":{"gitId":"JodyLorah"},"content":"    public void testExecuteTodo(){"},{"lineNumber":22,"author":{"gitId":"JodyLorah"},"content":"        try {"},{"lineNumber":23,"author":{"gitId":"JodyLorah"},"content":"            addTodoCommand.execute(taskList, todoInput, dataHandler);"},{"lineNumber":24,"author":{"gitId":"JodyLorah"},"content":"        } catch (NullPointerException e) {"},{"lineNumber":25,"author":{"gitId":"JodyLorah"},"content":"            assertEquals(\"Cannot invoke \\\"TaskList.addToDo(String)\\\" because \\\"tasks\\\" is null\","},{"lineNumber":26,"author":{"gitId":"JodyLorah"},"content":"                    e.getMessage());"},{"lineNumber":27,"author":{"gitId":"JodyLorah"},"content":"        }"},{"lineNumber":28,"author":{"gitId":"JodyLorah"},"content":"    }"},{"lineNumber":29,"author":{"gitId":"JodyLorah"},"content":""},{"lineNumber":30,"author":{"gitId":"JodyLorah"},"content":"    @Test"},{"lineNumber":31,"author":{"gitId":"JodyLorah"},"content":"    public void testExecuteDeadline(){"},{"lineNumber":32,"author":{"gitId":"JodyLorah"},"content":"        try {"},{"lineNumber":33,"author":{"gitId":"JodyLorah"},"content":"            addDeadlineCommand.execute(taskList, deadlineInput, dataHandler);"},{"lineNumber":34,"author":{"gitId":"JodyLorah"},"content":"        } catch (NullPointerException e) {"},{"lineNumber":35,"author":{"gitId":"JodyLorah"},"content":"            assertEquals(\"Cannot invoke \\\"TaskList.addDeadline(String)\\\" because \\\"tasks\\\" is null\","},{"lineNumber":36,"author":{"gitId":"JodyLorah"},"content":"                    e.getMessage());"},{"lineNumber":37,"author":{"gitId":"JodyLorah"},"content":""},{"lineNumber":38,"author":{"gitId":"JodyLorah"},"content":"        }"},{"lineNumber":39,"author":{"gitId":"JodyLorah"},"content":"    }"},{"lineNumber":40,"author":{"gitId":"JodyLorah"},"content":""},{"lineNumber":41,"author":{"gitId":"JodyLorah"},"content":"    @Test"},{"lineNumber":42,"author":{"gitId":"JodyLorah"},"content":"    public void testEventTodo(){"},{"lineNumber":43,"author":{"gitId":"JodyLorah"},"content":"        try {"},{"lineNumber":44,"author":{"gitId":"JodyLorah"},"content":"            addTodoCommand.execute(taskList, eventInput, dataHandler);"},{"lineNumber":45,"author":{"gitId":"JodyLorah"},"content":"        } catch (NullPointerException e) {"},{"lineNumber":46,"author":{"gitId":"JodyLorah"},"content":"            assertEquals(\"Cannot invoke \\\"TaskList.addEvent(String)\\\" because \\\"tasks\\\" is null\","},{"lineNumber":47,"author":{"gitId":"JodyLorah"},"content":"                    e.getMessage());"},{"lineNumber":48,"author":{"gitId":"JodyLorah"},"content":""},{"lineNumber":49,"author":{"gitId":"JodyLorah"},"content":"        }"},{"lineNumber":50,"author":{"gitId":"JodyLorah"},"content":"    }"},{"lineNumber":51,"author":{"gitId":"JodyLorah"},"content":""},{"lineNumber":52,"author":{"gitId":"JodyLorah"},"content":"    @Test"},{"lineNumber":53,"author":{"gitId":"JodyLorah"},"content":"    public void testIsExit() {"},{"lineNumber":54,"author":{"gitId":"JodyLorah"},"content":"        assertFalse(addTodoCommand.isExit());"},{"lineNumber":55,"author":{"gitId":"JodyLorah"},"content":"        assertFalse(addDeadlineCommand.isExit());"},{"lineNumber":56,"author":{"gitId":"JodyLorah"},"content":"        assertFalse(addEventCommand.isExit());"},{"lineNumber":57,"author":{"gitId":"JodyLorah"},"content":"    }"},{"lineNumber":58,"author":{"gitId":"JodyLorah"},"content":"}"}],"authorContributionMap":{"JodyLorah":58}},{"path":"src/test/java/DeleteCommandTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"JodyLorah"},"content":"import org.junit.jupiter.api.Test;"},{"lineNumber":2,"author":{"gitId":"JodyLorah"},"content":""},{"lineNumber":3,"author":{"gitId":"JodyLorah"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;"},{"lineNumber":4,"author":{"gitId":"JodyLorah"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;"},{"lineNumber":5,"author":{"gitId":"JodyLorah"},"content":""},{"lineNumber":6,"author":{"gitId":"JodyLorah"},"content":"public class DeleteCommandTest {"},{"lineNumber":7,"author":{"gitId":"JodyLorah"},"content":"    TaskList taskList;"},{"lineNumber":8,"author":{"gitId":"JodyLorah"},"content":"    DataHandler dataHandler;"},{"lineNumber":9,"author":{"gitId":"JodyLorah"},"content":""},{"lineNumber":10,"author":{"gitId":"JodyLorah"},"content":"    String deleteInput \u003d \"delete 1\";"},{"lineNumber":11,"author":{"gitId":"JodyLorah"},"content":"    DeleteCommand deleteCommand \u003d new DeleteCommand(deleteInput);"},{"lineNumber":12,"author":{"gitId":"JodyLorah"},"content":""},{"lineNumber":13,"author":{"gitId":"JodyLorah"},"content":"    @Test"},{"lineNumber":14,"author":{"gitId":"JodyLorah"},"content":"    public void testExecuteDone() {"},{"lineNumber":15,"author":{"gitId":"JodyLorah"},"content":"        try {"},{"lineNumber":16,"author":{"gitId":"JodyLorah"},"content":"            deleteCommand.execute(taskList, deleteInput, dataHandler);"},{"lineNumber":17,"author":{"gitId":"JodyLorah"},"content":"        } catch (NullPointerException e) {"},{"lineNumber":18,"author":{"gitId":"JodyLorah"},"content":"            assertEquals(\"Cannot invoke \\\"TaskList.getSize()\\\" because \\\"tasks\\\" is null\","},{"lineNumber":19,"author":{"gitId":"JodyLorah"},"content":"                    e.getMessage());"},{"lineNumber":20,"author":{"gitId":"JodyLorah"},"content":"        }"},{"lineNumber":21,"author":{"gitId":"JodyLorah"},"content":"    }"},{"lineNumber":22,"author":{"gitId":"JodyLorah"},"content":""},{"lineNumber":23,"author":{"gitId":"JodyLorah"},"content":"    @Test"},{"lineNumber":24,"author":{"gitId":"JodyLorah"},"content":"    public void testIsExit() {"},{"lineNumber":25,"author":{"gitId":"JodyLorah"},"content":"        assertFalse(deleteCommand.isExit());"},{"lineNumber":26,"author":{"gitId":"JodyLorah"},"content":"    }"},{"lineNumber":27,"author":{"gitId":"JodyLorah"},"content":""},{"lineNumber":28,"author":{"gitId":"JodyLorah"},"content":"}"}],"authorContributionMap":{"JodyLorah":28}},{"path":"src/test/java/DoneCommandTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"JodyLorah"},"content":"import org.junit.jupiter.api.Test;"},{"lineNumber":2,"author":{"gitId":"JodyLorah"},"content":""},{"lineNumber":3,"author":{"gitId":"JodyLorah"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;"},{"lineNumber":4,"author":{"gitId":"JodyLorah"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;"},{"lineNumber":5,"author":{"gitId":"JodyLorah"},"content":""},{"lineNumber":6,"author":{"gitId":"JodyLorah"},"content":"public class DoneCommandTest {"},{"lineNumber":7,"author":{"gitId":"JodyLorah"},"content":"    TaskList taskList;"},{"lineNumber":8,"author":{"gitId":"JodyLorah"},"content":"    DataHandler dataHandler;"},{"lineNumber":9,"author":{"gitId":"JodyLorah"},"content":""},{"lineNumber":10,"author":{"gitId":"JodyLorah"},"content":"    String doneInput \u003d \"done 1\";"},{"lineNumber":11,"author":{"gitId":"JodyLorah"},"content":"    DoneCommand doneCommand \u003d new DoneCommand(doneInput);"},{"lineNumber":12,"author":{"gitId":"JodyLorah"},"content":""},{"lineNumber":13,"author":{"gitId":"JodyLorah"},"content":"    @Test"},{"lineNumber":14,"author":{"gitId":"JodyLorah"},"content":"    public void testExecuteDone() {"},{"lineNumber":15,"author":{"gitId":"JodyLorah"},"content":"        try {"},{"lineNumber":16,"author":{"gitId":"JodyLorah"},"content":"            doneCommand.execute(taskList, doneInput, dataHandler);"},{"lineNumber":17,"author":{"gitId":"JodyLorah"},"content":"        } catch (NullPointerException e) {"},{"lineNumber":18,"author":{"gitId":"JodyLorah"},"content":"            assertEquals(\"Cannot invoke \\\"TaskList.getSize()\\\" because \\\"tasks\\\" is null\","},{"lineNumber":19,"author":{"gitId":"JodyLorah"},"content":"                    e.getMessage());"},{"lineNumber":20,"author":{"gitId":"JodyLorah"},"content":"        }"},{"lineNumber":21,"author":{"gitId":"JodyLorah"},"content":"    }"},{"lineNumber":22,"author":{"gitId":"JodyLorah"},"content":""},{"lineNumber":23,"author":{"gitId":"JodyLorah"},"content":"    @Test"},{"lineNumber":24,"author":{"gitId":"JodyLorah"},"content":"    public void testIsExit() {"},{"lineNumber":25,"author":{"gitId":"JodyLorah"},"content":"        assertFalse(doneCommand.isExit());"},{"lineNumber":26,"author":{"gitId":"JodyLorah"},"content":"    }"},{"lineNumber":27,"author":{"gitId":"JodyLorah"},"content":""},{"lineNumber":28,"author":{"gitId":"JodyLorah"},"content":"}"}],"authorContributionMap":{"JodyLorah":28}},{"path":"src/test/java/DukeTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"JodyLorah"},"content":"import org.junit.jupiter.api.Test;"},{"lineNumber":2,"author":{"gitId":"JodyLorah"},"content":""},{"lineNumber":3,"author":{"gitId":"JodyLorah"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;"},{"lineNumber":4,"author":{"gitId":"JodyLorah"},"content":""},{"lineNumber":5,"author":{"gitId":"JodyLorah"},"content":"public class DukeTest {"},{"lineNumber":6,"author":{"gitId":"JodyLorah"},"content":"    @Test"},{"lineNumber":7,"author":{"gitId":"JodyLorah"},"content":"    public void dummyTest(){"},{"lineNumber":8,"author":{"gitId":"JodyLorah"},"content":"        assertEquals(2, 2);"},{"lineNumber":9,"author":{"gitId":"JodyLorah"},"content":"    }"},{"lineNumber":10,"author":{"gitId":"JodyLorah"},"content":"}"}],"authorContributionMap":{"JodyLorah":10}},{"path":"src/test/java/ExitCommandTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"JodyLorah"},"content":"import org.junit.jupiter.api.Test;"},{"lineNumber":2,"author":{"gitId":"JodyLorah"},"content":""},{"lineNumber":3,"author":{"gitId":"JodyLorah"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;"},{"lineNumber":4,"author":{"gitId":"JodyLorah"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;"},{"lineNumber":5,"author":{"gitId":"JodyLorah"},"content":""},{"lineNumber":6,"author":{"gitId":"JodyLorah"},"content":"public class ExitCommandTest {"},{"lineNumber":7,"author":{"gitId":"JodyLorah"},"content":"    TaskList taskList;"},{"lineNumber":8,"author":{"gitId":"JodyLorah"},"content":"    DataHandler dataHandler;"},{"lineNumber":9,"author":{"gitId":"JodyLorah"},"content":""},{"lineNumber":10,"author":{"gitId":"JodyLorah"},"content":"    String exitInput \u003d \"bye\";"},{"lineNumber":11,"author":{"gitId":"JodyLorah"},"content":"    ExitCommand exitCommand \u003d new ExitCommand(exitInput);"},{"lineNumber":12,"author":{"gitId":"JodyLorah"},"content":""},{"lineNumber":13,"author":{"gitId":"JodyLorah"},"content":"    @Test"},{"lineNumber":14,"author":{"gitId":"JodyLorah"},"content":"    public void testExecuteDone() {"},{"lineNumber":15,"author":{"gitId":"JodyLorah"},"content":"        try {"},{"lineNumber":16,"author":{"gitId":"JodyLorah"},"content":"            exitCommand.execute(taskList, exitInput, dataHandler);"},{"lineNumber":17,"author":{"gitId":"JodyLorah"},"content":"        } catch (NullPointerException e) {"},{"lineNumber":18,"author":{"gitId":"JodyLorah"},"content":"            assertEquals(\"Cannot invoke \\\"TaskList.addExit(String)\\\" because \\\"tasks\\\" is null\","},{"lineNumber":19,"author":{"gitId":"JodyLorah"},"content":"                    e.getMessage());"},{"lineNumber":20,"author":{"gitId":"JodyLorah"},"content":"        }"},{"lineNumber":21,"author":{"gitId":"JodyLorah"},"content":"    }"},{"lineNumber":22,"author":{"gitId":"JodyLorah"},"content":""},{"lineNumber":23,"author":{"gitId":"JodyLorah"},"content":"    @Test"},{"lineNumber":24,"author":{"gitId":"JodyLorah"},"content":"    public void testIsExit() {"},{"lineNumber":25,"author":{"gitId":"JodyLorah"},"content":"        assertTrue(exitCommand.isExit());"},{"lineNumber":26,"author":{"gitId":"JodyLorah"},"content":"    }"},{"lineNumber":27,"author":{"gitId":"JodyLorah"},"content":""},{"lineNumber":28,"author":{"gitId":"JodyLorah"},"content":"}"}],"authorContributionMap":{"JodyLorah":28}},{"path":"src/test/java/ListCommandTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"JodyLorah"},"content":"import org.junit.jupiter.api.Test;"},{"lineNumber":2,"author":{"gitId":"JodyLorah"},"content":""},{"lineNumber":3,"author":{"gitId":"JodyLorah"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;"},{"lineNumber":4,"author":{"gitId":"JodyLorah"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;"},{"lineNumber":5,"author":{"gitId":"JodyLorah"},"content":""},{"lineNumber":6,"author":{"gitId":"JodyLorah"},"content":"public class ListCommandTest {"},{"lineNumber":7,"author":{"gitId":"JodyLorah"},"content":"    TaskList taskList;"},{"lineNumber":8,"author":{"gitId":"JodyLorah"},"content":"    DataHandler dataHandler;"},{"lineNumber":9,"author":{"gitId":"JodyLorah"},"content":""},{"lineNumber":10,"author":{"gitId":"JodyLorah"},"content":"    String listInput \u003d \"foo\";"},{"lineNumber":11,"author":{"gitId":"JodyLorah"},"content":"    ListCommand listCommand \u003d new ListCommand(listInput);"},{"lineNumber":12,"author":{"gitId":"JodyLorah"},"content":""},{"lineNumber":13,"author":{"gitId":"JodyLorah"},"content":"    @Test"},{"lineNumber":14,"author":{"gitId":"JodyLorah"},"content":"    public void testExecuteDone() {"},{"lineNumber":15,"author":{"gitId":"JodyLorah"},"content":"        try {"},{"lineNumber":16,"author":{"gitId":"JodyLorah"},"content":"            listCommand.execute(taskList, listInput, dataHandler);"},{"lineNumber":17,"author":{"gitId":"JodyLorah"},"content":"        } catch (NullPointerException e) {"},{"lineNumber":18,"author":{"gitId":"JodyLorah"},"content":"            assertEquals(\"Cannot invoke \\\"TaskList.list()\\\" because \\\"tasks\\\" is null\","},{"lineNumber":19,"author":{"gitId":"JodyLorah"},"content":"                    e.getMessage());"},{"lineNumber":20,"author":{"gitId":"JodyLorah"},"content":"        }"},{"lineNumber":21,"author":{"gitId":"JodyLorah"},"content":"    }"},{"lineNumber":22,"author":{"gitId":"JodyLorah"},"content":""},{"lineNumber":23,"author":{"gitId":"JodyLorah"},"content":"    @Test"},{"lineNumber":24,"author":{"gitId":"JodyLorah"},"content":"    public void testIsExit() {"},{"lineNumber":25,"author":{"gitId":"JodyLorah"},"content":"        assertFalse(listCommand.isExit());"},{"lineNumber":26,"author":{"gitId":"JodyLorah"},"content":"    }"},{"lineNumber":27,"author":{"gitId":"JodyLorah"},"content":""},{"lineNumber":28,"author":{"gitId":"JodyLorah"},"content":"}"}],"authorContributionMap":{"JodyLorah":28}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"JodyLorah"},"content":"todo borrow book"},{"lineNumber":2,"author":{"gitId":"JodyLorah"},"content":"list"},{"lineNumber":3,"author":{"gitId":"JodyLorah"},"content":"deadline return book /by Sunday"},{"lineNumber":4,"author":{"gitId":"JodyLorah"},"content":"event project meeting /at Mon 2-4pm"},{"lineNumber":5,"author":{"gitId":"JodyLorah"},"content":"bye"}],"authorContributionMap":{"JodyLorah":5}}]
