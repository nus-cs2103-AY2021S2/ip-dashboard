[{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027checkstyle\u0027"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027"},{"lineNumber":6,"author":{"gitId":"-"},"content":"}"},{"lineNumber":7,"author":{"gitId":"-"},"content":""},{"lineNumber":8,"author":{"gitId":"-"},"content":"repositories {"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    mavenCentral()"},{"lineNumber":10,"author":{"gitId":"-"},"content":"}"},{"lineNumber":11,"author":{"gitId":"-"},"content":""},{"lineNumber":12,"author":{"gitId":"-"},"content":"dependencies {"},{"lineNumber":13,"author":{"gitId":"clarlzx"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.7.0\u0027"},{"lineNumber":14,"author":{"gitId":"clarlzx"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.7.0\u0027"},{"lineNumber":15,"author":{"gitId":"clarlzx"},"content":""},{"lineNumber":16,"author":{"gitId":"clarlzx"},"content":"    String javaFxVersion \u003d \u002711\u0027"},{"lineNumber":17,"author":{"gitId":"clarlzx"},"content":""},{"lineNumber":18,"author":{"gitId":"clarlzx"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027"},{"lineNumber":19,"author":{"gitId":"clarlzx"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"},{"lineNumber":20,"author":{"gitId":"clarlzx"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"},{"lineNumber":21,"author":{"gitId":"clarlzx"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027"},{"lineNumber":22,"author":{"gitId":"clarlzx"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"},{"lineNumber":23,"author":{"gitId":"clarlzx"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"},{"lineNumber":24,"author":{"gitId":"clarlzx"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027"},{"lineNumber":25,"author":{"gitId":"clarlzx"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"},{"lineNumber":26,"author":{"gitId":"clarlzx"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"},{"lineNumber":27,"author":{"gitId":"clarlzx"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027"},{"lineNumber":28,"author":{"gitId":"clarlzx"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"},{"lineNumber":29,"author":{"gitId":"clarlzx"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"},{"lineNumber":30,"author":{"gitId":"-"},"content":"}"},{"lineNumber":31,"author":{"gitId":"-"},"content":""},{"lineNumber":32,"author":{"gitId":"-"},"content":"test {"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    useJUnitPlatform()"},{"lineNumber":34,"author":{"gitId":"-"},"content":""},{"lineNumber":35,"author":{"gitId":"-"},"content":"    testLogging {"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\""},{"lineNumber":37,"author":{"gitId":"-"},"content":""},{"lineNumber":38,"author":{"gitId":"-"},"content":"        showExceptions true"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\""},{"lineNumber":40,"author":{"gitId":"-"},"content":"        showCauses true"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        showStackTraces true"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":44,"author":{"gitId":"-"},"content":"}"},{"lineNumber":45,"author":{"gitId":"-"},"content":""},{"lineNumber":46,"author":{"gitId":"-"},"content":"application {"},{"lineNumber":47,"author":{"gitId":"clarlzx"},"content":"    mainClassName \u003d \"chat.Launcher\""},{"lineNumber":48,"author":{"gitId":"-"},"content":"}"},{"lineNumber":49,"author":{"gitId":"-"},"content":""},{"lineNumber":50,"author":{"gitId":"-"},"content":"shadowJar {"},{"lineNumber":51,"author":{"gitId":"clarlzx"},"content":"    archiveBaseName \u003d \"chat\""},{"lineNumber":52,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null"},{"lineNumber":53,"author":{"gitId":"-"},"content":"}"},{"lineNumber":54,"author":{"gitId":"-"},"content":""},{"lineNumber":55,"author":{"gitId":"-"},"content":"checkstyle {"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    toolVersion \u003d \u00278.29\u0027"},{"lineNumber":57,"author":{"gitId":"-"},"content":"}"},{"lineNumber":58,"author":{"gitId":"-"},"content":""},{"lineNumber":59,"author":{"gitId":"-"},"content":"run{"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in"},{"lineNumber":61,"author":{"gitId":"-"},"content":"}"}],"authorContributionMap":{"clarlzx":19,"-":42}},{"path":"docs/README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"clarlzx"},"content":"# Chat the Cat: User Guide"},{"lineNumber":2,"author":{"gitId":"-"},"content":""},{"lineNumber":3,"author":{"gitId":"clarlzx"},"content":"Chat is a desktop app for managing your tasks. "},{"lineNumber":4,"author":{"gitId":"clarlzx"},"content":"It is optimised for use via a Command Line Interface (CLI),"},{"lineNumber":5,"author":{"gitId":"clarlzx"},"content":"while having the benefits of a Graphical User Interface (GUI)."},{"lineNumber":6,"author":{"gitId":"-"},"content":""},{"lineNumber":7,"author":{"gitId":"-"},"content":"## Features"},{"lineNumber":8,"author":{"gitId":"-"},"content":""},{"lineNumber":9,"author":{"gitId":"clarlzx"},"content":"### 1. Adding a new task"},{"lineNumber":10,"author":{"gitId":"-"},"content":""},{"lineNumber":11,"author":{"gitId":"clarlzx"},"content":"Adds a task to Chat\u0027s list of tasks. Type of task needs to be specified."},{"lineNumber":12,"author":{"gitId":"-"},"content":""},{"lineNumber":13,"author":{"gitId":"clarlzx"},"content":"#### To add todo task: `todo`"},{"lineNumber":14,"author":{"gitId":"clarlzx"},"content":"* Command:`todo [name of todo task]`"},{"lineNumber":15,"author":{"gitId":"clarlzx"},"content":"* Example: `todo read book`"},{"lineNumber":16,"author":{"gitId":"-"},"content":""},{"lineNumber":17,"author":{"gitId":"clarlzx"},"content":"#### To add deadline task: `deadline`"},{"lineNumber":18,"author":{"gitId":"clarlzx"},"content":"* Command: `deadline [name of deadline task] /by [date]`"},{"lineNumber":19,"author":{"gitId":"clarlzx"},"content":"    * Date should be written as: **dd/MM/YYYY HH:MM**"},{"lineNumber":20,"author":{"gitId":"clarlzx"},"content":"* Example: `deadline submit paper /by 20/01/2021 23:59`"},{"lineNumber":21,"author":{"gitId":"-"},"content":""},{"lineNumber":22,"author":{"gitId":"clarlzx"},"content":"#### To add event task: `event`"},{"lineNumber":23,"author":{"gitId":"clarlzx"},"content":"* Command: `event [name of event task] /at [start date] - [end date]`"},{"lineNumber":24,"author":{"gitId":"clarlzx"},"content":"    * Start and end date should be written as: **dd/MM/YYYY HH:MM**"},{"lineNumber":25,"author":{"gitId":"clarlzx"},"content":"* Example: `event camp /at 20/01/2021 11:00 - 22/01/2021 12:00`"},{"lineNumber":26,"author":{"gitId":"clarlzx"},"content":"  "},{"lineNumber":27,"author":{"gitId":"clarlzx"},"content":"Expected outcome: "},{"lineNumber":28,"author":{"gitId":"clarlzx"},"content":"* Chat will respond with message that task has been added successfully."},{"lineNumber":29,"author":{"gitId":"clarlzx"},"content":"* Task will also be reflected on Chat\u0027s list which can be viewed by `list`."},{"lineNumber":30,"author":{"gitId":"clarlzx"},"content":""},{"lineNumber":31,"author":{"gitId":"clarlzx"},"content":"Error:"},{"lineNumber":32,"author":{"gitId":"clarlzx"},"content":"ChatException will be thrown if format of command is incorrect."},{"lineNumber":33,"author":{"gitId":"clarlzx"},"content":""},{"lineNumber":34,"author":{"gitId":"clarlzx"},"content":"### 2. Deleting a task: `delete`"},{"lineNumber":35,"author":{"gitId":"clarlzx"},"content":""},{"lineNumber":36,"author":{"gitId":"clarlzx"},"content":"Deletes a task from Chat\u0027s list of tasks."},{"lineNumber":37,"author":{"gitId":"clarlzx"},"content":""},{"lineNumber":38,"author":{"gitId":"clarlzx"},"content":"Command: `delete [index of task]`"},{"lineNumber":39,"author":{"gitId":"clarlzx"},"content":"* **Index of task is as given in list** and list can be viewed by `list`."},{"lineNumber":40,"author":{"gitId":"clarlzx"},"content":""},{"lineNumber":41,"author":{"gitId":"clarlzx"},"content":"Example: `delete 1`"},{"lineNumber":42,"author":{"gitId":"-"},"content":""},{"lineNumber":43,"author":{"gitId":"-"},"content":"Expected outcome:"},{"lineNumber":44,"author":{"gitId":"clarlzx"},"content":"* Chat will respond with message that task has been deleted successfully."},{"lineNumber":45,"author":{"gitId":"clarlzx"},"content":"* Task will no longer be reflected on Chat\u0027s list which can be viewed by `list`."},{"lineNumber":46,"author":{"gitId":"clarlzx"},"content":""},{"lineNumber":47,"author":{"gitId":"clarlzx"},"content":"Error: ChatException will be thrown if format of command is incorrect."},{"lineNumber":48,"author":{"gitId":"clarlzx"},"content":"For example, if given index is a negative number."},{"lineNumber":49,"author":{"gitId":"clarlzx"},"content":""},{"lineNumber":50,"author":{"gitId":"clarlzx"},"content":"### 3. Marking a task as completed: `done`"},{"lineNumber":51,"author":{"gitId":"clarlzx"},"content":""},{"lineNumber":52,"author":{"gitId":"clarlzx"},"content":"Marks a task as completed."},{"lineNumber":53,"author":{"gitId":"clarlzx"},"content":""},{"lineNumber":54,"author":{"gitId":"clarlzx"},"content":"Command: `done [index of task]`"},{"lineNumber":55,"author":{"gitId":"clarlzx"},"content":"* **Index of task is as given in list** and list can be viewed by `list`."},{"lineNumber":56,"author":{"gitId":"clarlzx"},"content":""},{"lineNumber":57,"author":{"gitId":"clarlzx"},"content":"Example: `done 1`"},{"lineNumber":58,"author":{"gitId":"clarlzx"},"content":""},{"lineNumber":59,"author":{"gitId":"clarlzx"},"content":"Expected outcome:"},{"lineNumber":60,"author":{"gitId":"clarlzx"},"content":"* Chat will respond with message congratulating user on having completed task."},{"lineNumber":61,"author":{"gitId":"clarlzx"},"content":"* Upon viewing list by `list`, task will now be marked as done."},{"lineNumber":62,"author":{"gitId":"clarlzx"},"content":"    * Marked as not done: `1. T[] read book`"},{"lineNumber":63,"author":{"gitId":"clarlzx"},"content":"    * Marked as done: `1. T[X] read book`"},{"lineNumber":64,"author":{"gitId":"clarlzx"},"content":""},{"lineNumber":65,"author":{"gitId":"clarlzx"},"content":"Error:"},{"lineNumber":66,"author":{"gitId":"clarlzx"},"content":"ChatException will be thrown if format of command is incorrect."},{"lineNumber":67,"author":{"gitId":"clarlzx"},"content":"For example, if given index is a negative number."},{"lineNumber":68,"author":{"gitId":"clarlzx"},"content":""},{"lineNumber":69,"author":{"gitId":"clarlzx"},"content":"### 4. Finding tasks: `find`"},{"lineNumber":70,"author":{"gitId":"clarlzx"},"content":""},{"lineNumber":71,"author":{"gitId":"clarlzx"},"content":"Finds task by given keywords."},{"lineNumber":72,"author":{"gitId":"clarlzx"},"content":""},{"lineNumber":73,"author":{"gitId":"clarlzx"},"content":"Command: `find [keywords]`"},{"lineNumber":74,"author":{"gitId":"clarlzx"},"content":""},{"lineNumber":75,"author":{"gitId":"clarlzx"},"content":"Example: `find t/T n/read d/20 Mar,21 Mar`"},{"lineNumber":76,"author":{"gitId":"clarlzx"},"content":"* This will display all found **todo tasks** with name that includes the word **\"read\"**."},{"lineNumber":77,"author":{"gitId":"clarlzx"},"content":""},{"lineNumber":78,"author":{"gitId":"clarlzx"},"content":"#### Keywords:"},{"lineNumber":79,"author":{"gitId":"clarlzx"},"content":"* `t/[task type]`"},{"lineNumber":80,"author":{"gitId":"clarlzx"},"content":"  * `[task type]` \u003d _T_, _D_ or _E_"},{"lineNumber":81,"author":{"gitId":"clarlzx"},"content":"  * _T_ for todo tasks, _D_ for deadlines and _E_ for events."},{"lineNumber":82,"author":{"gitId":"clarlzx"},"content":"* `n/[name]`"},{"lineNumber":83,"author":{"gitId":"clarlzx"},"content":"* `c/[is completed]`"},{"lineNumber":84,"author":{"gitId":"clarlzx"},"content":"    * `[is completed]` \u003d _T_ or _F_"},{"lineNumber":85,"author":{"gitId":"clarlzx"},"content":"    * _T_ for completed, _F_ for not completed yet."},{"lineNumber":86,"author":{"gitId":"clarlzx"},"content":"* `d/[dates]`"},{"lineNumber":87,"author":{"gitId":"clarlzx"},"content":"    * date should be written as dd MMM YYYY, dd MMM or MMM YYYY."},{"lineNumber":88,"author":{"gitId":"clarlzx"},"content":"    * `[dates]` can include just one date (start/end) or both start and end dates."},{"lineNumber":89,"author":{"gitId":"clarlzx"},"content":"        * dates should be separated with `,` if both start and end dates are entered."},{"lineNumber":90,"author":{"gitId":"clarlzx"},"content":"    "},{"lineNumber":91,"author":{"gitId":"clarlzx"},"content":"#### Additional details"},{"lineNumber":92,"author":{"gitId":"clarlzx"},"content":"    * Each type of keyword should be separated by a space bar."},{"lineNumber":93,"author":{"gitId":"clarlzx"},"content":"    * Keywords can be arranged in any order."},{"lineNumber":94,"author":{"gitId":"clarlzx"},"content":"    * There should only be one of each kind of keywords. "},{"lineNumber":95,"author":{"gitId":"clarlzx"},"content":"        * If there are more than one keywords for one type, the latest keyword of that type will be used."},{"lineNumber":96,"author":{"gitId":"clarlzx"},"content":"        * Example: t/E t/D will result in only deadline tasks being found."},{"lineNumber":97,"author":{"gitId":"clarlzx"},"content":""},{"lineNumber":98,"author":{"gitId":"clarlzx"},"content":"Expected outcome:"},{"lineNumber":99,"author":{"gitId":"clarlzx"},"content":"* Chat will display a list of all tasks that match the keywords given by user."},{"lineNumber":100,"author":{"gitId":"-"},"content":""},{"lineNumber":101,"author":{"gitId":"clarlzx"},"content":"Error:"},{"lineNumber":102,"author":{"gitId":"clarlzx"},"content":"ChatException will be thrown if format of command is incorrect."},{"lineNumber":103,"author":{"gitId":"clarlzx"},"content":"For example, if incorrect type of keywords are being entered."},{"lineNumber":104,"author":{"gitId":"-"},"content":""},{"lineNumber":105,"author":{"gitId":"clarlzx"},"content":"### 5. Listing all tasks: `list`"},{"lineNumber":106,"author":{"gitId":"-"},"content":""},{"lineNumber":107,"author":{"gitId":"clarlzx"},"content":"List all tasks saved by Chat."},{"lineNumber":108,"author":{"gitId":"-"},"content":""},{"lineNumber":109,"author":{"gitId":"clarlzx"},"content":"Command: `list`"},{"lineNumber":110,"author":{"gitId":"-"},"content":""},{"lineNumber":111,"author":{"gitId":"clarlzx"},"content":"Expected outcome:"},{"lineNumber":112,"author":{"gitId":"clarlzx"},"content":"* Chat will list all tasks."},{"lineNumber":113,"author":{"gitId":"clarlzx"},"content":""},{"lineNumber":114,"author":{"gitId":"clarlzx"},"content":"### 6. Exit Chat: `bye`"},{"lineNumber":115,"author":{"gitId":"clarlzx"},"content":""},{"lineNumber":116,"author":{"gitId":"clarlzx"},"content":"Exits Chat the Cat."},{"lineNumber":117,"author":{"gitId":"clarlzx"},"content":""},{"lineNumber":118,"author":{"gitId":"clarlzx"},"content":"Command: `bye`"},{"lineNumber":119,"author":{"gitId":"-"},"content":""},{"lineNumber":120,"author":{"gitId":"-"},"content":"Expected outcome:"},{"lineNumber":121,"author":{"gitId":"clarlzx"},"content":"* Chat will say bye to user."},{"lineNumber":122,"author":{"gitId":"clarlzx"},"content":""},{"lineNumber":123,"author":{"gitId":"clarlzx"},"content":"## Extra: Understanding Chat the Cat"},{"lineNumber":124,"author":{"gitId":"clarlzx"},"content":""},{"lineNumber":125,"author":{"gitId":"clarlzx"},"content":"Chat has many different expressions to help users understand the kind of responses given by Chat."},{"lineNumber":126,"author":{"gitId":"clarlzx"},"content":""},{"lineNumber":127,"author":{"gitId":"clarlzx"},"content":"\u003cimg src\u003d\"https://github.com/clarlzx/ip/blob/A-BetterGui/src/main/resources/images/greetingCat.png?raw\u003dtrue\" alt\u003d\"Greeting Chat\" width\u003d\"80\" height\u003d\"80\"\u003e"},{"lineNumber":128,"author":{"gitId":"clarlzx"},"content":"When Chat greets the user upon startup.\u003cbr/\u003e\u003cbr/\u003e"},{"lineNumber":129,"author":{"gitId":"clarlzx"},"content":""},{"lineNumber":130,"author":{"gitId":"clarlzx"},"content":"\u003cimg src\u003d\"https://github.com/clarlzx/ip/blob/A-BetterGui/src/main/resources/images/goCat.png?raw\u003dtrue\" alt\u003d\"Go Chat\" width\u003d\"80\" height\u003d\"80\"\u003e"},{"lineNumber":131,"author":{"gitId":"clarlzx"},"content":"When Chat has successfully executed a command given by user. \u003cbr/\u003e\u003cbr/\u003e"},{"lineNumber":132,"author":{"gitId":"clarlzx"},"content":""},{"lineNumber":133,"author":{"gitId":"clarlzx"},"content":"\u003cimg src\u003d\"https://github.com/clarlzx/ip/blob/A-BetterGui/src/main/resources/images/errorCat.png?raw\u003dtrue\" alt\u003d\"Error Chat\" width\u003d\"80\" height\u003d\"80\"\u003e"},{"lineNumber":134,"author":{"gitId":"clarlzx"},"content":"When Chat encounters an error. \u003cbr/\u003e\u003cbr/\u003e"},{"lineNumber":135,"author":{"gitId":"clarlzx"},"content":""},{"lineNumber":136,"author":{"gitId":"clarlzx"},"content":"\u003cimg src\u003d\"https://github.com/clarlzx/ip/blob/A-BetterGui/src/main/resources/images/gdJobCat.png?raw\u003dtrue\" alt\u003d\"Good Job Chat\" width\u003d\"80\" height\u003d\"80\"\u003e"},{"lineNumber":137,"author":{"gitId":"clarlzx"},"content":"When Chat congratulates user on completing a task. \u003cbr/\u003e\u003cbr/\u003e"},{"lineNumber":138,"author":{"gitId":"-"},"content":""},{"lineNumber":139,"author":{"gitId":"clarlzx"},"content":"\u003cimg src\u003d\"https://github.com/clarlzx/ip/blob/A-BetterGui/src/main/resources/images/goodByeCat.png?raw\u003dtrue\" alt\u003d\"Goodbye Cat\" width\u003d\"80\" height\u003d\"80\"\u003e"},{"lineNumber":140,"author":{"gitId":"clarlzx"},"content":"When Chat is saying goodbye sadly. \u003cbr/\u003e\u003cbr/\u003e"}],"authorContributionMap":{"clarlzx":122,"-":18}},{"path":"src/main/java/chat/Chat.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"clarlzx"},"content":"package chat;"},{"lineNumber":2,"author":{"gitId":"clarlzx"},"content":""},{"lineNumber":3,"author":{"gitId":"clarlzx"},"content":"import chat.command.Command;"},{"lineNumber":4,"author":{"gitId":"clarlzx"},"content":"import javafx.animation.PauseTransition;"},{"lineNumber":5,"author":{"gitId":"clarlzx"},"content":"import javafx.application.Platform;"},{"lineNumber":6,"author":{"gitId":"clarlzx"},"content":"import javafx.util.Duration;"},{"lineNumber":7,"author":{"gitId":"clarlzx"},"content":""},{"lineNumber":8,"author":{"gitId":"clarlzx"},"content":"/**"},{"lineNumber":9,"author":{"gitId":"clarlzx"},"content":" * Class that executes Chat the Cat."},{"lineNumber":10,"author":{"gitId":"clarlzx"},"content":" */"},{"lineNumber":11,"author":{"gitId":"clarlzx"},"content":"public class Chat {"},{"lineNumber":12,"author":{"gitId":"clarlzx"},"content":"    "},{"lineNumber":13,"author":{"gitId":"clarlzx"},"content":"    private Storage storage;"},{"lineNumber":14,"author":{"gitId":"clarlzx"},"content":"    private TaskList taskList;"},{"lineNumber":15,"author":{"gitId":"clarlzx"},"content":"    private Ui ui;"},{"lineNumber":16,"author":{"gitId":"clarlzx"},"content":""},{"lineNumber":17,"author":{"gitId":"clarlzx"},"content":"    /**"},{"lineNumber":18,"author":{"gitId":"clarlzx"},"content":"     * Initialise Chat the Cat by loading data from file to create list of tasks."},{"lineNumber":19,"author":{"gitId":"clarlzx"},"content":"     * "},{"lineNumber":20,"author":{"gitId":"clarlzx"},"content":"     * @param filePath Path of the file that is read from."},{"lineNumber":21,"author":{"gitId":"clarlzx"},"content":"     */"},{"lineNumber":22,"author":{"gitId":"clarlzx"},"content":"    public Chat(String filePath) {"},{"lineNumber":23,"author":{"gitId":"clarlzx"},"content":"        assert filePath !\u003d \"\";"},{"lineNumber":24,"author":{"gitId":"clarlzx"},"content":"        "},{"lineNumber":25,"author":{"gitId":"clarlzx"},"content":"        ui \u003d new Ui();"},{"lineNumber":26,"author":{"gitId":"clarlzx"},"content":"        storage \u003d new Storage(filePath);"},{"lineNumber":27,"author":{"gitId":"clarlzx"},"content":"        try {"},{"lineNumber":28,"author":{"gitId":"clarlzx"},"content":"            ui.greet();"},{"lineNumber":29,"author":{"gitId":"clarlzx"},"content":"            taskList \u003d new TaskList(storage.load());"},{"lineNumber":30,"author":{"gitId":"clarlzx"},"content":"        } catch (ChatException e) {"},{"lineNumber":31,"author":{"gitId":"clarlzx"},"content":"            ui.showLoadingError();"},{"lineNumber":32,"author":{"gitId":"clarlzx"},"content":"            taskList \u003d new TaskList();"},{"lineNumber":33,"author":{"gitId":"clarlzx"},"content":"        }"},{"lineNumber":34,"author":{"gitId":"clarlzx"},"content":"    }"},{"lineNumber":35,"author":{"gitId":"clarlzx"},"content":""},{"lineNumber":36,"author":{"gitId":"clarlzx"},"content":"    /**"},{"lineNumber":37,"author":{"gitId":"clarlzx"},"content":"     * Returns storage attribute of Chat."},{"lineNumber":38,"author":{"gitId":"clarlzx"},"content":"     * "},{"lineNumber":39,"author":{"gitId":"clarlzx"},"content":"     * @return storage"},{"lineNumber":40,"author":{"gitId":"clarlzx"},"content":"     */"},{"lineNumber":41,"author":{"gitId":"clarlzx"},"content":"    public Storage getStorage() { "},{"lineNumber":42,"author":{"gitId":"clarlzx"},"content":"        return this.storage;"},{"lineNumber":43,"author":{"gitId":"clarlzx"},"content":"    }"},{"lineNumber":44,"author":{"gitId":"clarlzx"},"content":""},{"lineNumber":45,"author":{"gitId":"clarlzx"},"content":"    /**"},{"lineNumber":46,"author":{"gitId":"clarlzx"},"content":"     * Returns taskList attribute of Chat."},{"lineNumber":47,"author":{"gitId":"clarlzx"},"content":"     * "},{"lineNumber":48,"author":{"gitId":"clarlzx"},"content":"     * @return taskList"},{"lineNumber":49,"author":{"gitId":"clarlzx"},"content":"     */"},{"lineNumber":50,"author":{"gitId":"clarlzx"},"content":"    public TaskList getTaskList() { "},{"lineNumber":51,"author":{"gitId":"clarlzx"},"content":"        return this.taskList;"},{"lineNumber":52,"author":{"gitId":"clarlzx"},"content":"    }"},{"lineNumber":53,"author":{"gitId":"clarlzx"},"content":""},{"lineNumber":54,"author":{"gitId":"clarlzx"},"content":"    /**"},{"lineNumber":55,"author":{"gitId":"clarlzx"},"content":"     * Returns ui attribute of Chat."},{"lineNumber":56,"author":{"gitId":"clarlzx"},"content":"     * "},{"lineNumber":57,"author":{"gitId":"clarlzx"},"content":"     * @return ui"},{"lineNumber":58,"author":{"gitId":"clarlzx"},"content":"     */"},{"lineNumber":59,"author":{"gitId":"clarlzx"},"content":"    public Ui getUi() {"},{"lineNumber":60,"author":{"gitId":"clarlzx"},"content":"        return this.ui;"},{"lineNumber":61,"author":{"gitId":"clarlzx"},"content":"    }"},{"lineNumber":62,"author":{"gitId":"clarlzx"},"content":""},{"lineNumber":63,"author":{"gitId":"clarlzx"},"content":"    /**"},{"lineNumber":64,"author":{"gitId":"clarlzx"},"content":"     * Method that runs Chat to get a response to user\u0027s input."},{"lineNumber":65,"author":{"gitId":"clarlzx"},"content":"     * It also sets ui object to have the latest response string and image based on the given command by user."},{"lineNumber":66,"author":{"gitId":"clarlzx"},"content":"     * @param input"},{"lineNumber":67,"author":{"gitId":"clarlzx"},"content":"     */"},{"lineNumber":68,"author":{"gitId":"clarlzx"},"content":"    public void run(String input) {"},{"lineNumber":69,"author":{"gitId":"clarlzx"},"content":"        assert input !\u003d \"\";"},{"lineNumber":70,"author":{"gitId":"clarlzx"},"content":"        "},{"lineNumber":71,"author":{"gitId":"clarlzx"},"content":"        try {"},{"lineNumber":72,"author":{"gitId":"clarlzx"},"content":"            Command c \u003d Parser.parse(input);"},{"lineNumber":73,"author":{"gitId":"clarlzx"},"content":""},{"lineNumber":74,"author":{"gitId":"clarlzx"},"content":"            //in execute method of command"},{"lineNumber":75,"author":{"gitId":"clarlzx"},"content":"            //ui will be updated with the latest response from chat"},{"lineNumber":76,"author":{"gitId":"clarlzx"},"content":"            c.execute(taskList, ui, storage);"},{"lineNumber":77,"author":{"gitId":"clarlzx"},"content":"            "},{"lineNumber":78,"author":{"gitId":"clarlzx"},"content":"            //stage will close as command is bye and user wants to exit"},{"lineNumber":79,"author":{"gitId":"clarlzx"},"content":"            if (c.isExit()) {"},{"lineNumber":80,"author":{"gitId":"clarlzx"},"content":"                PauseTransition delay \u003d new PauseTransition(Duration.seconds(1));"},{"lineNumber":81,"author":{"gitId":"clarlzx"},"content":"                delay.setOnFinished(event -\u003e Platform.exit());"},{"lineNumber":82,"author":{"gitId":"clarlzx"},"content":"                delay.play();"},{"lineNumber":83,"author":{"gitId":"clarlzx"},"content":"            }"},{"lineNumber":84,"author":{"gitId":"clarlzx"},"content":"            "},{"lineNumber":85,"author":{"gitId":"clarlzx"},"content":"        } catch (ChatException e) {"},{"lineNumber":86,"author":{"gitId":"clarlzx"},"content":"            "},{"lineNumber":87,"author":{"gitId":"clarlzx"},"content":"            //ui\u0027s respondString is updated with error message "},{"lineNumber":88,"author":{"gitId":"clarlzx"},"content":"            ui.showError(e);"},{"lineNumber":89,"author":{"gitId":"clarlzx"},"content":"        }"},{"lineNumber":90,"author":{"gitId":"clarlzx"},"content":"    }"},{"lineNumber":91,"author":{"gitId":"clarlzx"},"content":""},{"lineNumber":92,"author":{"gitId":"-"},"content":"}"}],"authorContributionMap":{"clarlzx":91,"-":1}},{"path":"src/main/java/chat/ChatDialogBox.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"clarlzx"},"content":"package chat;"},{"lineNumber":2,"author":{"gitId":"clarlzx"},"content":""},{"lineNumber":3,"author":{"gitId":"clarlzx"},"content":"import java.io.IOException;"},{"lineNumber":4,"author":{"gitId":"clarlzx"},"content":""},{"lineNumber":5,"author":{"gitId":"clarlzx"},"content":"import javafx.fxml.FXML;"},{"lineNumber":6,"author":{"gitId":"clarlzx"},"content":"import javafx.fxml.FXMLLoader;"},{"lineNumber":7,"author":{"gitId":"clarlzx"},"content":"import javafx.scene.control.Label;"},{"lineNumber":8,"author":{"gitId":"clarlzx"},"content":"import javafx.scene.image.Image;"},{"lineNumber":9,"author":{"gitId":"clarlzx"},"content":"import javafx.scene.image.ImageView;"},{"lineNumber":10,"author":{"gitId":"clarlzx"},"content":"import javafx.scene.layout.HBox;"},{"lineNumber":11,"author":{"gitId":"clarlzx"},"content":""},{"lineNumber":12,"author":{"gitId":"clarlzx"},"content":"/**"},{"lineNumber":13,"author":{"gitId":"clarlzx"},"content":" * Class for a custom made Chat dialog box."},{"lineNumber":14,"author":{"gitId":"clarlzx"},"content":" * ChatDialogBox class includes an image of Chat and Chat\u0027s message to user."},{"lineNumber":15,"author":{"gitId":"clarlzx"},"content":" */"},{"lineNumber":16,"author":{"gitId":"clarlzx"},"content":""},{"lineNumber":17,"author":{"gitId":"clarlzx"},"content":"public class ChatDialogBox extends HBox {"},{"lineNumber":18,"author":{"gitId":"clarlzx"},"content":"    "},{"lineNumber":19,"author":{"gitId":"clarlzx"},"content":"    @FXML"},{"lineNumber":20,"author":{"gitId":"clarlzx"},"content":"    private Label dialog;"},{"lineNumber":21,"author":{"gitId":"clarlzx"},"content":"    "},{"lineNumber":22,"author":{"gitId":"clarlzx"},"content":"    @FXML"},{"lineNumber":23,"author":{"gitId":"clarlzx"},"content":"    private ImageView displayPicture;"},{"lineNumber":24,"author":{"gitId":"clarlzx"},"content":""},{"lineNumber":25,"author":{"gitId":"clarlzx"},"content":"    /**"},{"lineNumber":26,"author":{"gitId":"clarlzx"},"content":"     * Initialises Chat Dialog Box object."},{"lineNumber":27,"author":{"gitId":"clarlzx"},"content":"     * "},{"lineNumber":28,"author":{"gitId":"clarlzx"},"content":"     * @param text Displayed text in dialog box."},{"lineNumber":29,"author":{"gitId":"clarlzx"},"content":"     * @param img Displayed image in dialog box."},{"lineNumber":30,"author":{"gitId":"clarlzx"},"content":"     */"},{"lineNumber":31,"author":{"gitId":"clarlzx"},"content":"    private ChatDialogBox(String text, Image img) {"},{"lineNumber":32,"author":{"gitId":"clarlzx"},"content":"        assert text !\u003d \"\"; "},{"lineNumber":33,"author":{"gitId":"clarlzx"},"content":"        assert img !\u003d null;"},{"lineNumber":34,"author":{"gitId":"clarlzx"},"content":"        "},{"lineNumber":35,"author":{"gitId":"clarlzx"},"content":"        try {"},{"lineNumber":36,"author":{"gitId":"clarlzx"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(\"/view/ChatDialogBox.fxml\"));"},{"lineNumber":37,"author":{"gitId":"clarlzx"},"content":"            fxmlLoader.setController(this);"},{"lineNumber":38,"author":{"gitId":"clarlzx"},"content":"            fxmlLoader.setRoot(this);"},{"lineNumber":39,"author":{"gitId":"clarlzx"},"content":"            fxmlLoader.load();"},{"lineNumber":40,"author":{"gitId":"clarlzx"},"content":"        } catch (IOException e) {"},{"lineNumber":41,"author":{"gitId":"clarlzx"},"content":"            e.printStackTrace();"},{"lineNumber":42,"author":{"gitId":"clarlzx"},"content":"        }"},{"lineNumber":43,"author":{"gitId":"clarlzx"},"content":""},{"lineNumber":44,"author":{"gitId":"clarlzx"},"content":"        dialog.setText(text);"},{"lineNumber":45,"author":{"gitId":"clarlzx"},"content":"        displayPicture.setImage(img);"},{"lineNumber":46,"author":{"gitId":"clarlzx"},"content":"    }"},{"lineNumber":47,"author":{"gitId":"clarlzx"},"content":""},{"lineNumber":48,"author":{"gitId":"clarlzx"},"content":"    /**"},{"lineNumber":49,"author":{"gitId":"clarlzx"},"content":"     * Returns a dialog box with chat\u0027s message."},{"lineNumber":50,"author":{"gitId":"clarlzx"},"content":"     *"},{"lineNumber":51,"author":{"gitId":"clarlzx"},"content":"     * @param text Chat\u0027s message."},{"lineNumber":52,"author":{"gitId":"clarlzx"},"content":"     * @param img Chat\u0027s image."},{"lineNumber":53,"author":{"gitId":"clarlzx"},"content":"     * @return DialogBox object."},{"lineNumber":54,"author":{"gitId":"clarlzx"},"content":"     */"},{"lineNumber":55,"author":{"gitId":"clarlzx"},"content":"    public static ChatDialogBox getChatDialog(String text, Image img) {"},{"lineNumber":56,"author":{"gitId":"clarlzx"},"content":"        assert text !\u003d \"\";"},{"lineNumber":57,"author":{"gitId":"clarlzx"},"content":"        assert img !\u003d null;"},{"lineNumber":58,"author":{"gitId":"clarlzx"},"content":"        "},{"lineNumber":59,"author":{"gitId":"clarlzx"},"content":"        return new ChatDialogBox(text, img);"},{"lineNumber":60,"author":{"gitId":"clarlzx"},"content":"    }"},{"lineNumber":61,"author":{"gitId":"clarlzx"},"content":"    "},{"lineNumber":62,"author":{"gitId":"clarlzx"},"content":"}"}],"authorContributionMap":{"clarlzx":62}},{"path":"src/main/java/chat/ChatException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"clarlzx"},"content":"package chat;"},{"lineNumber":2,"author":{"gitId":"clarlzx"},"content":""},{"lineNumber":3,"author":{"gitId":"clarlzx"},"content":"/**"},{"lineNumber":4,"author":{"gitId":"clarlzx"},"content":" * Exception class specifically for errors from Chat the Cat."},{"lineNumber":5,"author":{"gitId":"clarlzx"},"content":" */"},{"lineNumber":6,"author":{"gitId":"clarlzx"},"content":""},{"lineNumber":7,"author":{"gitId":"clarlzx"},"content":"public class ChatException extends Exception {"},{"lineNumber":8,"author":{"gitId":"clarlzx"},"content":""},{"lineNumber":9,"author":{"gitId":"clarlzx"},"content":"    /**"},{"lineNumber":10,"author":{"gitId":"clarlzx"},"content":"     * Initialises ChatException object."},{"lineNumber":11,"author":{"gitId":"clarlzx"},"content":"     * "},{"lineNumber":12,"author":{"gitId":"clarlzx"},"content":"     * @param message Error message."},{"lineNumber":13,"author":{"gitId":"clarlzx"},"content":"     */"},{"lineNumber":14,"author":{"gitId":"clarlzx"},"content":"    public ChatException(String message) {"},{"lineNumber":15,"author":{"gitId":"clarlzx"},"content":"        super(message);"},{"lineNumber":16,"author":{"gitId":"clarlzx"},"content":"    }"},{"lineNumber":17,"author":{"gitId":"clarlzx"},"content":""},{"lineNumber":18,"author":{"gitId":"clarlzx"},"content":"}"}],"authorContributionMap":{"clarlzx":18}},{"path":"src/main/java/chat/Launcher.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"clarlzx"},"content":"package chat;"},{"lineNumber":2,"author":{"gitId":"clarlzx"},"content":""},{"lineNumber":3,"author":{"gitId":"clarlzx"},"content":"import javafx.application.Application;"},{"lineNumber":4,"author":{"gitId":"clarlzx"},"content":""},{"lineNumber":5,"author":{"gitId":"clarlzx"},"content":"/**"},{"lineNumber":6,"author":{"gitId":"clarlzx"},"content":" * Class that launches GUI application."},{"lineNumber":7,"author":{"gitId":"clarlzx"},"content":" */"},{"lineNumber":8,"author":{"gitId":"clarlzx"},"content":"public class Launcher {"},{"lineNumber":9,"author":{"gitId":"clarlzx"},"content":"    public static void main(String[] args) {"},{"lineNumber":10,"author":{"gitId":"clarlzx"},"content":"        Application.launch(Main.class, args);"},{"lineNumber":11,"author":{"gitId":"clarlzx"},"content":"    }"},{"lineNumber":12,"author":{"gitId":"clarlzx"},"content":"    "},{"lineNumber":13,"author":{"gitId":"clarlzx"},"content":"}"}],"authorContributionMap":{"clarlzx":13}},{"path":"src/main/java/chat/Main.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"clarlzx"},"content":"package chat;"},{"lineNumber":2,"author":{"gitId":"clarlzx"},"content":""},{"lineNumber":3,"author":{"gitId":"clarlzx"},"content":"import java.io.IOException;"},{"lineNumber":4,"author":{"gitId":"clarlzx"},"content":""},{"lineNumber":5,"author":{"gitId":"clarlzx"},"content":"import javafx.application.Application;"},{"lineNumber":6,"author":{"gitId":"clarlzx"},"content":"import javafx.fxml.FXMLLoader;"},{"lineNumber":7,"author":{"gitId":"clarlzx"},"content":"import javafx.scene.Scene;"},{"lineNumber":8,"author":{"gitId":"clarlzx"},"content":"import javafx.scene.layout.AnchorPane;"},{"lineNumber":9,"author":{"gitId":"clarlzx"},"content":"import javafx.stage.Stage;"},{"lineNumber":10,"author":{"gitId":"clarlzx"},"content":""},{"lineNumber":11,"author":{"gitId":"clarlzx"},"content":"/**"},{"lineNumber":12,"author":{"gitId":"clarlzx"},"content":" * Class that handles the GUI for Chat using FXML."},{"lineNumber":13,"author":{"gitId":"clarlzx"},"content":" */"},{"lineNumber":14,"author":{"gitId":"clarlzx"},"content":"public class Main extends Application {"},{"lineNumber":15,"author":{"gitId":"clarlzx"},"content":""},{"lineNumber":16,"author":{"gitId":"clarlzx"},"content":"    private Chat chat \u003d new Chat(\"data/tasks.txt\");"},{"lineNumber":17,"author":{"gitId":"clarlzx"},"content":""},{"lineNumber":18,"author":{"gitId":"clarlzx"},"content":"    /**"},{"lineNumber":19,"author":{"gitId":"clarlzx"},"content":"     * Main entry point for JavaFX application."},{"lineNumber":20,"author":{"gitId":"clarlzx"},"content":"     * "},{"lineNumber":21,"author":{"gitId":"clarlzx"},"content":"     * @param stage"},{"lineNumber":22,"author":{"gitId":"clarlzx"},"content":"     */"},{"lineNumber":23,"author":{"gitId":"clarlzx"},"content":"    @Override"},{"lineNumber":24,"author":{"gitId":"clarlzx"},"content":"    public void start(Stage stage) {"},{"lineNumber":25,"author":{"gitId":"clarlzx"},"content":"        assert stage !\u003d null; "},{"lineNumber":26,"author":{"gitId":"clarlzx"},"content":"        "},{"lineNumber":27,"author":{"gitId":"clarlzx"},"content":"        try {"},{"lineNumber":28,"author":{"gitId":"clarlzx"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(Main.class.getResource(\"/view/MainWindow.fxml\"));"},{"lineNumber":29,"author":{"gitId":"clarlzx"},"content":"            MainWindow mainWindow \u003d new MainWindow(chat);"},{"lineNumber":30,"author":{"gitId":"clarlzx"},"content":"            fxmlLoader.setController(mainWindow);"},{"lineNumber":31,"author":{"gitId":"clarlzx"},"content":"            AnchorPane ap \u003d fxmlLoader.load();"},{"lineNumber":32,"author":{"gitId":"clarlzx"},"content":"            Scene scene \u003d new Scene(ap);"},{"lineNumber":33,"author":{"gitId":"clarlzx"},"content":"            stage.setScene(scene);"},{"lineNumber":34,"author":{"gitId":"clarlzx"},"content":"            stage.setTitle(\"Chat the Cat\");"},{"lineNumber":35,"author":{"gitId":"clarlzx"},"content":"            stage.show();"},{"lineNumber":36,"author":{"gitId":"clarlzx"},"content":"        } catch (IOException e) {"},{"lineNumber":37,"author":{"gitId":"clarlzx"},"content":"            e.printStackTrace();"},{"lineNumber":38,"author":{"gitId":"clarlzx"},"content":"        }"},{"lineNumber":39,"author":{"gitId":"clarlzx"},"content":"    }"},{"lineNumber":40,"author":{"gitId":"clarlzx"},"content":"}"}],"authorContributionMap":{"clarlzx":40}},{"path":"src/main/java/chat/MainWindow.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"clarlzx"},"content":"package chat; "},{"lineNumber":2,"author":{"gitId":"clarlzx"},"content":""},{"lineNumber":3,"author":{"gitId":"clarlzx"},"content":"import javafx.fxml.FXML;"},{"lineNumber":4,"author":{"gitId":"clarlzx"},"content":"import javafx.scene.control.Button;"},{"lineNumber":5,"author":{"gitId":"clarlzx"},"content":"import javafx.scene.control.ScrollPane;"},{"lineNumber":6,"author":{"gitId":"clarlzx"},"content":"import javafx.scene.control.TextField;"},{"lineNumber":7,"author":{"gitId":"clarlzx"},"content":"import javafx.scene.layout.AnchorPane;"},{"lineNumber":8,"author":{"gitId":"clarlzx"},"content":"import javafx.scene.layout.VBox;"},{"lineNumber":9,"author":{"gitId":"clarlzx"},"content":""},{"lineNumber":10,"author":{"gitId":"clarlzx"},"content":""},{"lineNumber":11,"author":{"gitId":"clarlzx"},"content":"/**"},{"lineNumber":12,"author":{"gitId":"clarlzx"},"content":" * Controller for MainWindow. Provides the layout for the other controls."},{"lineNumber":13,"author":{"gitId":"clarlzx"},"content":" */"},{"lineNumber":14,"author":{"gitId":"clarlzx"},"content":"public class MainWindow extends AnchorPane {"},{"lineNumber":15,"author":{"gitId":"clarlzx"},"content":"    @FXML"},{"lineNumber":16,"author":{"gitId":"clarlzx"},"content":"    private ScrollPane scrollPane;"},{"lineNumber":17,"author":{"gitId":"clarlzx"},"content":"    @FXML"},{"lineNumber":18,"author":{"gitId":"clarlzx"},"content":"    private VBox dialogContainer;"},{"lineNumber":19,"author":{"gitId":"clarlzx"},"content":"    @FXML"},{"lineNumber":20,"author":{"gitId":"clarlzx"},"content":"    private TextField userInput;"},{"lineNumber":21,"author":{"gitId":"clarlzx"},"content":"    @FXML"},{"lineNumber":22,"author":{"gitId":"clarlzx"},"content":"    private Button sendButton;"},{"lineNumber":23,"author":{"gitId":"clarlzx"},"content":"    "},{"lineNumber":24,"author":{"gitId":"clarlzx"},"content":"    private Chat chat;"},{"lineNumber":25,"author":{"gitId":"clarlzx"},"content":""},{"lineNumber":26,"author":{"gitId":"clarlzx"},"content":"    /**"},{"lineNumber":27,"author":{"gitId":"clarlzx"},"content":"     * Initialises anchor pane such that initial greeting from Chat will also be displayed"},{"lineNumber":28,"author":{"gitId":"clarlzx"},"content":"     */"},{"lineNumber":29,"author":{"gitId":"clarlzx"},"content":"    @FXML"},{"lineNumber":30,"author":{"gitId":"clarlzx"},"content":"    public void initialize() {"},{"lineNumber":31,"author":{"gitId":"clarlzx"},"content":"        scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());"},{"lineNumber":32,"author":{"gitId":"clarlzx"},"content":"        "},{"lineNumber":33,"author":{"gitId":"clarlzx"},"content":"        //initial greeting / loading error will be displayed on start up"},{"lineNumber":34,"author":{"gitId":"clarlzx"},"content":"        dialogContainer.getChildren().addAll("},{"lineNumber":35,"author":{"gitId":"clarlzx"},"content":"                ChatDialogBox.getChatDialog(chat.getUi().getRespondString(), chat.getUi().getChatImage())"},{"lineNumber":36,"author":{"gitId":"clarlzx"},"content":"        );"},{"lineNumber":37,"author":{"gitId":"clarlzx"},"content":""},{"lineNumber":38,"author":{"gitId":"clarlzx"},"content":"    }"},{"lineNumber":39,"author":{"gitId":"clarlzx"},"content":""},{"lineNumber":40,"author":{"gitId":"clarlzx"},"content":"    /**"},{"lineNumber":41,"author":{"gitId":"clarlzx"},"content":"     * Initialises MainWindow object."},{"lineNumber":42,"author":{"gitId":"clarlzx"},"content":"     * "},{"lineNumber":43,"author":{"gitId":"clarlzx"},"content":"     * @param chat Chat the Cat."},{"lineNumber":44,"author":{"gitId":"clarlzx"},"content":"     */"},{"lineNumber":45,"author":{"gitId":"clarlzx"},"content":"    public MainWindow(Chat chat) {"},{"lineNumber":46,"author":{"gitId":"clarlzx"},"content":"        assert chat !\u003d null;"},{"lineNumber":47,"author":{"gitId":"clarlzx"},"content":"        this.chat \u003d chat;"},{"lineNumber":48,"author":{"gitId":"clarlzx"},"content":"    }"},{"lineNumber":49,"author":{"gitId":"clarlzx"},"content":""},{"lineNumber":50,"author":{"gitId":"clarlzx"},"content":"    /**"},{"lineNumber":51,"author":{"gitId":"clarlzx"},"content":"     * Handles user input by taking in input and then giving a response."},{"lineNumber":52,"author":{"gitId":"clarlzx"},"content":"     */"},{"lineNumber":53,"author":{"gitId":"clarlzx"},"content":"    @FXML"},{"lineNumber":54,"author":{"gitId":"clarlzx"},"content":"    private void handleUserInput() {"},{"lineNumber":55,"author":{"gitId":"clarlzx"},"content":"        assert userInput !\u003d null; "},{"lineNumber":56,"author":{"gitId":"clarlzx"},"content":"        assert chat !\u003d null;"},{"lineNumber":57,"author":{"gitId":"clarlzx"},"content":"        assert chat.getUi() !\u003d null; "},{"lineNumber":58,"author":{"gitId":"clarlzx"},"content":"        "},{"lineNumber":59,"author":{"gitId":"clarlzx"},"content":"        String input \u003d userInput.getText();"},{"lineNumber":60,"author":{"gitId":"clarlzx"},"content":"        chat.run(input);"},{"lineNumber":61,"author":{"gitId":"clarlzx"},"content":"        dialogContainer.getChildren().addAll("},{"lineNumber":62,"author":{"gitId":"clarlzx"},"content":"                UserDialogBox.getUserDialog(userInput.getText()),"},{"lineNumber":63,"author":{"gitId":"clarlzx"},"content":"                ChatDialogBox.getChatDialog(chat.getUi().getRespondString(), chat.getUi().getChatImage())"},{"lineNumber":64,"author":{"gitId":"clarlzx"},"content":"        );"},{"lineNumber":65,"author":{"gitId":"clarlzx"},"content":"        userInput.clear();"},{"lineNumber":66,"author":{"gitId":"clarlzx"},"content":"    }"},{"lineNumber":67,"author":{"gitId":"clarlzx"},"content":"    "},{"lineNumber":68,"author":{"gitId":"clarlzx"},"content":"}"}],"authorContributionMap":{"clarlzx":68}},{"path":"src/main/java/chat/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"clarlzx"},"content":"package chat;"},{"lineNumber":2,"author":{"gitId":"clarlzx"},"content":""},{"lineNumber":3,"author":{"gitId":"clarlzx"},"content":"import chat.command.Command;"},{"lineNumber":4,"author":{"gitId":"clarlzx"},"content":"import chat.command.ListCommand;"},{"lineNumber":5,"author":{"gitId":"clarlzx"},"content":"import chat.command.DoneCommand;"},{"lineNumber":6,"author":{"gitId":"clarlzx"},"content":"import chat.command.AddCommand;"},{"lineNumber":7,"author":{"gitId":"clarlzx"},"content":"import chat.command.DeleteCommand;"},{"lineNumber":8,"author":{"gitId":"clarlzx"},"content":"import chat.command.ExitCommand;"},{"lineNumber":9,"author":{"gitId":"clarlzx"},"content":"import chat.command.FindCommand;"},{"lineNumber":10,"author":{"gitId":"clarlzx"},"content":""},{"lineNumber":11,"author":{"gitId":"clarlzx"},"content":"/**"},{"lineNumber":12,"author":{"gitId":"clarlzx"},"content":" * Parser class deals with making sense of user command."},{"lineNumber":13,"author":{"gitId":"clarlzx"},"content":" */"},{"lineNumber":14,"author":{"gitId":"clarlzx"},"content":""},{"lineNumber":15,"author":{"gitId":"clarlzx"},"content":"public class Parser {"},{"lineNumber":16,"author":{"gitId":"clarlzx"},"content":""},{"lineNumber":17,"author":{"gitId":"clarlzx"},"content":"    /**"},{"lineNumber":18,"author":{"gitId":"clarlzx"},"content":"     * Parses command to their respective commands."},{"lineNumber":19,"author":{"gitId":"clarlzx"},"content":"     * "},{"lineNumber":20,"author":{"gitId":"clarlzx"},"content":"     * @param str Inputted command string from user to Chat the Cat."},{"lineNumber":21,"author":{"gitId":"clarlzx"},"content":"     * @return Command object."},{"lineNumber":22,"author":{"gitId":"clarlzx"},"content":"     * @throws ChatException If command is not known by Chat the Cat."},{"lineNumber":23,"author":{"gitId":"clarlzx"},"content":"     */"},{"lineNumber":24,"author":{"gitId":"clarlzx"},"content":"    public static Command parse(String str) throws ChatException {"},{"lineNumber":25,"author":{"gitId":"clarlzx"},"content":"        assert str !\u003d \"\";"},{"lineNumber":26,"author":{"gitId":"clarlzx"},"content":"        "},{"lineNumber":27,"author":{"gitId":"clarlzx"},"content":"        if (str.equals(\"list\")) {"},{"lineNumber":28,"author":{"gitId":"clarlzx"},"content":"            return new ListCommand();"},{"lineNumber":29,"author":{"gitId":"clarlzx"},"content":"        } else if (str.startsWith(\"done\")) {"},{"lineNumber":30,"author":{"gitId":"clarlzx"},"content":"            return new DoneCommand(str);"},{"lineNumber":31,"author":{"gitId":"clarlzx"},"content":"        } else if (str.startsWith(\"todo\") | str.startsWith(\"deadline\") | str.startsWith(\"event\")) {"},{"lineNumber":32,"author":{"gitId":"clarlzx"},"content":"            return new AddCommand(str);"},{"lineNumber":33,"author":{"gitId":"clarlzx"},"content":"        } else if (str.startsWith(\"delete\")) {"},{"lineNumber":34,"author":{"gitId":"clarlzx"},"content":"            return new DeleteCommand(str);"},{"lineNumber":35,"author":{"gitId":"clarlzx"},"content":"        } else if (str.equals(\"bye\")) {"},{"lineNumber":36,"author":{"gitId":"clarlzx"},"content":"            return new ExitCommand();"},{"lineNumber":37,"author":{"gitId":"clarlzx"},"content":"        } else if (str.startsWith(\"find\")) {"},{"lineNumber":38,"author":{"gitId":"clarlzx"},"content":"            return new FindCommand(str);"},{"lineNumber":39,"author":{"gitId":"clarlzx"},"content":"        } else {"},{"lineNumber":40,"author":{"gitId":"clarlzx"},"content":"            throw new ChatException(\"Sorry this instruction does not exist!\\n\" +"},{"lineNumber":41,"author":{"gitId":"clarlzx"},"content":"                    \"Please choose from the following: \" +"},{"lineNumber":42,"author":{"gitId":"clarlzx"},"content":"                    \"todo, deadline, event, done, find, list, bye\");"},{"lineNumber":43,"author":{"gitId":"clarlzx"},"content":"        }"},{"lineNumber":44,"author":{"gitId":"clarlzx"},"content":"    }"},{"lineNumber":45,"author":{"gitId":"clarlzx"},"content":"    "},{"lineNumber":46,"author":{"gitId":"clarlzx"},"content":"}"}],"authorContributionMap":{"clarlzx":46}},{"path":"src/main/java/chat/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"clarlzx"},"content":"package chat;"},{"lineNumber":2,"author":{"gitId":"clarlzx"},"content":""},{"lineNumber":3,"author":{"gitId":"clarlzx"},"content":"import java.io.IOException;"},{"lineNumber":4,"author":{"gitId":"clarlzx"},"content":"import java.nio.file.Files;"},{"lineNumber":5,"author":{"gitId":"clarlzx"},"content":"import java.nio.file.Path;"},{"lineNumber":6,"author":{"gitId":"clarlzx"},"content":"import java.nio.file.Paths;"},{"lineNumber":7,"author":{"gitId":"clarlzx"},"content":"import java.util.ArrayList;"},{"lineNumber":8,"author":{"gitId":"clarlzx"},"content":""},{"lineNumber":9,"author":{"gitId":"clarlzx"},"content":"import chat.task.Task;"},{"lineNumber":10,"author":{"gitId":"clarlzx"},"content":"import chat.task.Todo;"},{"lineNumber":11,"author":{"gitId":"clarlzx"},"content":"import chat.task.Deadline;"},{"lineNumber":12,"author":{"gitId":"clarlzx"},"content":"import chat.task.Event;"},{"lineNumber":13,"author":{"gitId":"clarlzx"},"content":""},{"lineNumber":14,"author":{"gitId":"clarlzx"},"content":"/**"},{"lineNumber":15,"author":{"gitId":"clarlzx"},"content":" * Storage class deals with loading tasks from the file and saving tasks in the file."},{"lineNumber":16,"author":{"gitId":"clarlzx"},"content":" */"},{"lineNumber":17,"author":{"gitId":"clarlzx"},"content":"public class Storage {"},{"lineNumber":18,"author":{"gitId":"clarlzx"},"content":"    "},{"lineNumber":19,"author":{"gitId":"clarlzx"},"content":"    private Path filePath;"},{"lineNumber":20,"author":{"gitId":"clarlzx"},"content":""},{"lineNumber":21,"author":{"gitId":"clarlzx"},"content":"    /**"},{"lineNumber":22,"author":{"gitId":"clarlzx"},"content":"     * Initialises Storage object."},{"lineNumber":23,"author":{"gitId":"clarlzx"},"content":"     * "},{"lineNumber":24,"author":{"gitId":"clarlzx"},"content":"     * @param strFilePath Path of the file that is read and written to."},{"lineNumber":25,"author":{"gitId":"clarlzx"},"content":"     */"},{"lineNumber":26,"author":{"gitId":"clarlzx"},"content":"    public Storage(String strFilePath) {"},{"lineNumber":27,"author":{"gitId":"clarlzx"},"content":"        this.filePath \u003d Paths.get(strFilePath);"},{"lineNumber":28,"author":{"gitId":"clarlzx"},"content":"    }"},{"lineNumber":29,"author":{"gitId":"clarlzx"},"content":""},{"lineNumber":30,"author":{"gitId":"clarlzx"},"content":"    /**"},{"lineNumber":31,"author":{"gitId":"clarlzx"},"content":"     * If there is a change in data from the file, this method saves the new data to the file."},{"lineNumber":32,"author":{"gitId":"clarlzx"},"content":"     * "},{"lineNumber":33,"author":{"gitId":"clarlzx"},"content":"     * @param taskList TaskList object that contains a list of tasks."},{"lineNumber":34,"author":{"gitId":"clarlzx"},"content":"     * @throws ChatException If there is error loading file or file cannot be found."},{"lineNumber":35,"author":{"gitId":"clarlzx"},"content":"     */"},{"lineNumber":36,"author":{"gitId":"clarlzx"},"content":"    public void save(TaskList taskList) throws ChatException {"},{"lineNumber":37,"author":{"gitId":"clarlzx"},"content":"        assert taskList !\u003d null;"},{"lineNumber":38,"author":{"gitId":"clarlzx"},"content":"        "},{"lineNumber":39,"author":{"gitId":"clarlzx"},"content":"        try {"},{"lineNumber":40,"author":{"gitId":"clarlzx"},"content":"            if (!taskList.equals(load())) {"},{"lineNumber":41,"author":{"gitId":"clarlzx"},"content":"                String newStr \u003d \"\";"},{"lineNumber":42,"author":{"gitId":"clarlzx"},"content":"                for (Task t : taskList.getTasks()) {"},{"lineNumber":43,"author":{"gitId":"clarlzx"},"content":"                    newStr +\u003d t.allParameterStr() + \"\\n\";"},{"lineNumber":44,"author":{"gitId":"clarlzx"},"content":"                }"},{"lineNumber":45,"author":{"gitId":"clarlzx"},"content":"                Files.writeString(filePath, newStr);"},{"lineNumber":46,"author":{"gitId":"clarlzx"},"content":"            }"},{"lineNumber":47,"author":{"gitId":"clarlzx"},"content":"        } catch (IOException | ChatException e) {"},{"lineNumber":48,"author":{"gitId":"clarlzx"},"content":"            throw new ChatException(e.getMessage());"},{"lineNumber":49,"author":{"gitId":"clarlzx"},"content":"        }"},{"lineNumber":50,"author":{"gitId":"clarlzx"},"content":"    }"},{"lineNumber":51,"author":{"gitId":"clarlzx"},"content":""},{"lineNumber":52,"author":{"gitId":"clarlzx"},"content":"    /**"},{"lineNumber":53,"author":{"gitId":"clarlzx"},"content":"     * Loads data of tasks from file and stores them in a list of tasks."},{"lineNumber":54,"author":{"gitId":"clarlzx"},"content":"     * \u003cp\u003eAn empty list of tasks is created if file is empty.\u003c/p\u003e"},{"lineNumber":55,"author":{"gitId":"clarlzx"},"content":"     * "},{"lineNumber":56,"author":{"gitId":"clarlzx"},"content":"     * @return List of tasks loaded from data in file."},{"lineNumber":57,"author":{"gitId":"clarlzx"},"content":"     * @throws ChatException If there is error loading file or file cannot be found."},{"lineNumber":58,"author":{"gitId":"clarlzx"},"content":"     */"},{"lineNumber":59,"author":{"gitId":"clarlzx"},"content":"    public ArrayList\u003cTask\u003e load() throws ChatException {"},{"lineNumber":60,"author":{"gitId":"clarlzx"},"content":"        try {"},{"lineNumber":61,"author":{"gitId":"clarlzx"},"content":"            createFileAndOrDirectoryIfDontExist();"},{"lineNumber":62,"author":{"gitId":"clarlzx"},"content":"            String lines \u003d Files.readString(filePath);"},{"lineNumber":63,"author":{"gitId":"clarlzx"},"content":"            ArrayList\u003cTask\u003e tasksFromFile \u003d createTaskList(lines);"},{"lineNumber":64,"author":{"gitId":"clarlzx"},"content":"            return tasksFromFile;"},{"lineNumber":65,"author":{"gitId":"clarlzx"},"content":"        } catch (IOException e) {"},{"lineNumber":66,"author":{"gitId":"clarlzx"},"content":"            throw new ChatException(\"Error loading file\");"},{"lineNumber":67,"author":{"gitId":"clarlzx"},"content":"        }"},{"lineNumber":68,"author":{"gitId":"clarlzx"},"content":"    }"},{"lineNumber":69,"author":{"gitId":"clarlzx"},"content":"    "},{"lineNumber":70,"author":{"gitId":"clarlzx"},"content":"    private void createFileAndOrDirectoryIfDontExist() throws IOException {"},{"lineNumber":71,"author":{"gitId":"clarlzx"},"content":"        if (!Files.exists(filePath)) {"},{"lineNumber":72,"author":{"gitId":"clarlzx"},"content":"            if (!Files.exists(filePath.getParent())) {"},{"lineNumber":73,"author":{"gitId":"clarlzx"},"content":"                Files.createDirectory(filePath.getParent());"},{"lineNumber":74,"author":{"gitId":"clarlzx"},"content":"            }"},{"lineNumber":75,"author":{"gitId":"clarlzx"},"content":"            Files.createFile(filePath);"},{"lineNumber":76,"author":{"gitId":"clarlzx"},"content":"        }"},{"lineNumber":77,"author":{"gitId":"clarlzx"},"content":"    }"},{"lineNumber":78,"author":{"gitId":"clarlzx"},"content":"    "},{"lineNumber":79,"author":{"gitId":"clarlzx"},"content":"    private static Task convertStrToTaskObject(String str) throws ChatException {"},{"lineNumber":80,"author":{"gitId":"clarlzx"},"content":"        String[] parameters \u003d str.split(\",\");"},{"lineNumber":81,"author":{"gitId":"clarlzx"},"content":"        String taskType \u003d parameters[0];"},{"lineNumber":82,"author":{"gitId":"clarlzx"},"content":"        "},{"lineNumber":83,"author":{"gitId":"clarlzx"},"content":"        switch(taskType) {"},{"lineNumber":84,"author":{"gitId":"clarlzx"},"content":"        case \"T\":"},{"lineNumber":85,"author":{"gitId":"clarlzx"},"content":"            return new Todo(Boolean.parseBoolean(parameters[1]), parameters[2]);"},{"lineNumber":86,"author":{"gitId":"clarlzx"},"content":"        case \"D\":"},{"lineNumber":87,"author":{"gitId":"clarlzx"},"content":"            return new Deadline(Boolean.parseBoolean(parameters[1]), parameters[2], parameters[3]);"},{"lineNumber":88,"author":{"gitId":"clarlzx"},"content":"        case \"E\": "},{"lineNumber":89,"author":{"gitId":"clarlzx"},"content":"            return new Event(Boolean.parseBoolean(parameters[1]), parameters[2], parameters[3], parameters[4]);"},{"lineNumber":90,"author":{"gitId":"clarlzx"},"content":"        default:"},{"lineNumber":91,"author":{"gitId":"clarlzx"},"content":"            throw new ChatException(\"Incorrect data format in file.\");"},{"lineNumber":92,"author":{"gitId":"clarlzx"},"content":"        }"},{"lineNumber":93,"author":{"gitId":"clarlzx"},"content":"    }"},{"lineNumber":94,"author":{"gitId":"clarlzx"},"content":"    "},{"lineNumber":95,"author":{"gitId":"clarlzx"},"content":"    private static ArrayList\u003cTask\u003e createTaskList(String lines) throws ChatException { "},{"lineNumber":96,"author":{"gitId":"clarlzx"},"content":"        try {"},{"lineNumber":97,"author":{"gitId":"clarlzx"},"content":"            ArrayList\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();"},{"lineNumber":98,"author":{"gitId":"clarlzx"},"content":"            if (!lines.isEmpty()) {"},{"lineNumber":99,"author":{"gitId":"clarlzx"},"content":"                String[] strArr \u003d lines.split(\"\\n\");"},{"lineNumber":100,"author":{"gitId":"clarlzx"},"content":"                for (String s : strArr) {"},{"lineNumber":101,"author":{"gitId":"clarlzx"},"content":"                    tasks.add(convertStrToTaskObject(s));"},{"lineNumber":102,"author":{"gitId":"clarlzx"},"content":"                }"},{"lineNumber":103,"author":{"gitId":"clarlzx"},"content":"            }"},{"lineNumber":104,"author":{"gitId":"clarlzx"},"content":"            return tasks;"},{"lineNumber":105,"author":{"gitId":"clarlzx"},"content":"        } catch (ChatException e) {"},{"lineNumber":106,"author":{"gitId":"clarlzx"},"content":"            throw e;"},{"lineNumber":107,"author":{"gitId":"clarlzx"},"content":"        }"},{"lineNumber":108,"author":{"gitId":"clarlzx"},"content":"    }"},{"lineNumber":109,"author":{"gitId":"clarlzx"},"content":"    "},{"lineNumber":110,"author":{"gitId":"clarlzx"},"content":"}"}],"authorContributionMap":{"clarlzx":110}},{"path":"src/main/java/chat/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"clarlzx"},"content":"package chat;"},{"lineNumber":2,"author":{"gitId":"clarlzx"},"content":""},{"lineNumber":3,"author":{"gitId":"clarlzx"},"content":"import java.util.ArrayList;"},{"lineNumber":4,"author":{"gitId":"clarlzx"},"content":""},{"lineNumber":5,"author":{"gitId":"clarlzx"},"content":"import chat.task.Task;"},{"lineNumber":6,"author":{"gitId":"clarlzx"},"content":""},{"lineNumber":7,"author":{"gitId":"clarlzx"},"content":"/**"},{"lineNumber":8,"author":{"gitId":"clarlzx"},"content":" * TaskList class contains a list of tasks."},{"lineNumber":9,"author":{"gitId":"clarlzx"},"content":" */"},{"lineNumber":10,"author":{"gitId":"clarlzx"},"content":"public class TaskList {"},{"lineNumber":11,"author":{"gitId":"clarlzx"},"content":""},{"lineNumber":12,"author":{"gitId":"clarlzx"},"content":"    private ArrayList\u003cTask\u003e tasks;"},{"lineNumber":13,"author":{"gitId":"clarlzx"},"content":""},{"lineNumber":14,"author":{"gitId":"clarlzx"},"content":"    /**"},{"lineNumber":15,"author":{"gitId":"clarlzx"},"content":"     * Initialise TaskList object with empty list of tasks."},{"lineNumber":16,"author":{"gitId":"clarlzx"},"content":"     */"},{"lineNumber":17,"author":{"gitId":"clarlzx"},"content":"    public TaskList() { "},{"lineNumber":18,"author":{"gitId":"clarlzx"},"content":"        this.tasks \u003d new ArrayList\u003cTask\u003e();"},{"lineNumber":19,"author":{"gitId":"clarlzx"},"content":"    }"},{"lineNumber":20,"author":{"gitId":"clarlzx"},"content":""},{"lineNumber":21,"author":{"gitId":"clarlzx"},"content":"    /**"},{"lineNumber":22,"author":{"gitId":"clarlzx"},"content":"     * Initialise TaskList object."},{"lineNumber":23,"author":{"gitId":"clarlzx"},"content":"     * "},{"lineNumber":24,"author":{"gitId":"clarlzx"},"content":"     * @param tasks List of tasks."},{"lineNumber":25,"author":{"gitId":"clarlzx"},"content":"     */"},{"lineNumber":26,"author":{"gitId":"clarlzx"},"content":"    public TaskList(ArrayList\u003cTask\u003e tasks) {"},{"lineNumber":27,"author":{"gitId":"clarlzx"},"content":"        assert tasks !\u003d null;"},{"lineNumber":28,"author":{"gitId":"clarlzx"},"content":"        this.tasks \u003d tasks;"},{"lineNumber":29,"author":{"gitId":"clarlzx"},"content":"    }"},{"lineNumber":30,"author":{"gitId":"clarlzx"},"content":""},{"lineNumber":31,"author":{"gitId":"clarlzx"},"content":"    /**"},{"lineNumber":32,"author":{"gitId":"clarlzx"},"content":"     * Returns list of tasks."},{"lineNumber":33,"author":{"gitId":"clarlzx"},"content":"     * "},{"lineNumber":34,"author":{"gitId":"clarlzx"},"content":"     * @return List of tasks."},{"lineNumber":35,"author":{"gitId":"clarlzx"},"content":"     */"},{"lineNumber":36,"author":{"gitId":"clarlzx"},"content":"    public ArrayList\u003cTask\u003e getTasks() {"},{"lineNumber":37,"author":{"gitId":"clarlzx"},"content":"        return this.tasks;"},{"lineNumber":38,"author":{"gitId":"clarlzx"},"content":"    }"},{"lineNumber":39,"author":{"gitId":"clarlzx"},"content":"    "},{"lineNumber":40,"author":{"gitId":"clarlzx"},"content":"}"}],"authorContributionMap":{"clarlzx":40}},{"path":"src/main/java/chat/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"clarlzx"},"content":"package chat;"},{"lineNumber":2,"author":{"gitId":"clarlzx"},"content":""},{"lineNumber":3,"author":{"gitId":"clarlzx"},"content":"import chat.task.Task;"},{"lineNumber":4,"author":{"gitId":"clarlzx"},"content":"import javafx.scene.image.Image;"},{"lineNumber":5,"author":{"gitId":"clarlzx"},"content":""},{"lineNumber":6,"author":{"gitId":"clarlzx"},"content":"/**"},{"lineNumber":7,"author":{"gitId":"clarlzx"},"content":" * Ui is a class that deals with interactions with the user."},{"lineNumber":8,"author":{"gitId":"clarlzx"},"content":" */"},{"lineNumber":9,"author":{"gitId":"clarlzx"},"content":"public class Ui {"},{"lineNumber":10,"author":{"gitId":"clarlzx"},"content":"    "},{"lineNumber":11,"author":{"gitId":"clarlzx"},"content":"    private Image greetingChat \u003d new Image(this.getClass().getResourceAsStream(\"/images/greetingCat.png\"));"},{"lineNumber":12,"author":{"gitId":"clarlzx"},"content":"    private Image goodByeChat \u003d new Image(this.getClass().getResourceAsStream(\"/images/goodByeCat.png\"));"},{"lineNumber":13,"author":{"gitId":"clarlzx"},"content":"    private Image goChat \u003d new Image(this.getClass().getResourceAsStream(\"/images/goCat.png\"));"},{"lineNumber":14,"author":{"gitId":"clarlzx"},"content":"    private Image gdJobChat \u003d new Image(this.getClass().getResourceAsStream(\"/images/gdJobCat.png\"));"},{"lineNumber":15,"author":{"gitId":"clarlzx"},"content":"    private Image errorChat \u003d new Image(this.getClass().getResourceAsStream(\"/images/errorCat.png\"));"},{"lineNumber":16,"author":{"gitId":"clarlzx"},"content":"    "},{"lineNumber":17,"author":{"gitId":"clarlzx"},"content":"    private String respondString;"},{"lineNumber":18,"author":{"gitId":"clarlzx"},"content":"    private Image chatImage;"},{"lineNumber":19,"author":{"gitId":"clarlzx"},"content":""},{"lineNumber":20,"author":{"gitId":"clarlzx"},"content":"    public String getRespondString() { "},{"lineNumber":21,"author":{"gitId":"clarlzx"},"content":"        return this.respondString;"},{"lineNumber":22,"author":{"gitId":"clarlzx"},"content":"    }"},{"lineNumber":23,"author":{"gitId":"clarlzx"},"content":"    "},{"lineNumber":24,"author":{"gitId":"clarlzx"},"content":"    public Image getChatImage() { "},{"lineNumber":25,"author":{"gitId":"clarlzx"},"content":"        return this.chatImage;"},{"lineNumber":26,"author":{"gitId":"clarlzx"},"content":"    }"},{"lineNumber":27,"author":{"gitId":"clarlzx"},"content":"    "},{"lineNumber":28,"author":{"gitId":"clarlzx"},"content":"    /**"},{"lineNumber":29,"author":{"gitId":"clarlzx"},"content":"     * Sets all ui attributes for greeting message from Chat the Cat."},{"lineNumber":30,"author":{"gitId":"clarlzx"},"content":"     */"},{"lineNumber":31,"author":{"gitId":"clarlzx"},"content":"    public void greet() {"},{"lineNumber":32,"author":{"gitId":"clarlzx"},"content":"        this.respondString \u003d \"Mew! I\u0027m Chat the Cat \\uD83D\\uDC3E\\nWhat can I do for you?\";"},{"lineNumber":33,"author":{"gitId":"clarlzx"},"content":"        this.chatImage \u003d greetingChat;"},{"lineNumber":34,"author":{"gitId":"clarlzx"},"content":"    }"},{"lineNumber":35,"author":{"gitId":"clarlzx"},"content":""},{"lineNumber":36,"author":{"gitId":"clarlzx"},"content":"    /**"},{"lineNumber":37,"author":{"gitId":"clarlzx"},"content":"     * Sets all ui attributes for goodbye message from Chat the Cat."},{"lineNumber":38,"author":{"gitId":"clarlzx"},"content":"     */"},{"lineNumber":39,"author":{"gitId":"clarlzx"},"content":"    public void exit() {"},{"lineNumber":40,"author":{"gitId":"clarlzx"},"content":"        this.respondString \u003d \"*** Goodbye *** \";"},{"lineNumber":41,"author":{"gitId":"clarlzx"},"content":"        this.chatImage \u003d goodByeChat;"},{"lineNumber":42,"author":{"gitId":"clarlzx"},"content":"    }"},{"lineNumber":43,"author":{"gitId":"clarlzx"},"content":""},{"lineNumber":44,"author":{"gitId":"clarlzx"},"content":"    /**"},{"lineNumber":45,"author":{"gitId":"clarlzx"},"content":"     * Sets all ui attributes for add success message from Chat the Cat."},{"lineNumber":46,"author":{"gitId":"clarlzx"},"content":"     * Message tells user that a task has been added successfully to list of tasks."},{"lineNumber":47,"author":{"gitId":"clarlzx"},"content":"     * "},{"lineNumber":48,"author":{"gitId":"clarlzx"},"content":"     * @param task Task that has been added to list of tasks."},{"lineNumber":49,"author":{"gitId":"clarlzx"},"content":"     * @param size Total number of tasks in the list of tasks."},{"lineNumber":50,"author":{"gitId":"clarlzx"},"content":"     */"},{"lineNumber":51,"author":{"gitId":"clarlzx"},"content":"    public void showAddSuccess(Task task, int size) {"},{"lineNumber":52,"author":{"gitId":"clarlzx"},"content":"        assert task !\u003d null; "},{"lineNumber":53,"author":{"gitId":"clarlzx"},"content":"        assert size \u003e 0;"},{"lineNumber":54,"author":{"gitId":"clarlzx"},"content":"        "},{"lineNumber":55,"author":{"gitId":"clarlzx"},"content":"        this.respondString \u003d \"Mew! I\u0027ve added this task:\\n\" +"},{"lineNumber":56,"author":{"gitId":"clarlzx"},"content":"                task +"},{"lineNumber":57,"author":{"gitId":"clarlzx"},"content":"                String.format(\"\\n** Now you have %d tasks in the list **\", size);"},{"lineNumber":58,"author":{"gitId":"clarlzx"},"content":"        this.chatImage \u003d goChat;"},{"lineNumber":59,"author":{"gitId":"clarlzx"},"content":"    }"},{"lineNumber":60,"author":{"gitId":"clarlzx"},"content":""},{"lineNumber":61,"author":{"gitId":"clarlzx"},"content":"    /**"},{"lineNumber":62,"author":{"gitId":"clarlzx"},"content":"     * Sets all ui attributes for delete success message from Chat the Cat."},{"lineNumber":63,"author":{"gitId":"clarlzx"},"content":"     * Message tells user that a task has been deleted successfully from the list of tasks."},{"lineNumber":64,"author":{"gitId":"clarlzx"},"content":"     * "},{"lineNumber":65,"author":{"gitId":"clarlzx"},"content":"     * @param task Task that has been deleted from list of tasks."},{"lineNumber":66,"author":{"gitId":"clarlzx"},"content":"     * @param size Total number of tasks in the list of tasks."},{"lineNumber":67,"author":{"gitId":"clarlzx"},"content":"     */"},{"lineNumber":68,"author":{"gitId":"clarlzx"},"content":"    public void showDeleteSuccess(Task task, int size) {"},{"lineNumber":69,"author":{"gitId":"clarlzx"},"content":"        assert task !\u003d null;"},{"lineNumber":70,"author":{"gitId":"clarlzx"},"content":"        assert size \u003e\u003d 0;"},{"lineNumber":71,"author":{"gitId":"clarlzx"},"content":"        "},{"lineNumber":72,"author":{"gitId":"clarlzx"},"content":"        this.respondString \u003d \"Mew! I\u0027ve removed this task:\\n\" + "},{"lineNumber":73,"author":{"gitId":"clarlzx"},"content":"                task + "},{"lineNumber":74,"author":{"gitId":"clarlzx"},"content":"                String.format(\"\\n** Now you have %d tasks in the list **\", size);"},{"lineNumber":75,"author":{"gitId":"clarlzx"},"content":"        this.chatImage \u003d goChat;"},{"lineNumber":76,"author":{"gitId":"clarlzx"},"content":"    }"},{"lineNumber":77,"author":{"gitId":"clarlzx"},"content":""},{"lineNumber":78,"author":{"gitId":"clarlzx"},"content":"    /**"},{"lineNumber":79,"author":{"gitId":"clarlzx"},"content":"     * Sets all ui attributes for well done message from Chat the Cat."},{"lineNumber":80,"author":{"gitId":"clarlzx"},"content":"     * Message tells user that a task has been marked successfully as done."},{"lineNumber":81,"author":{"gitId":"clarlzx"},"content":"     * "},{"lineNumber":82,"author":{"gitId":"clarlzx"},"content":"     * @param task Task Task that has been completed."},{"lineNumber":83,"author":{"gitId":"clarlzx"},"content":"     */"},{"lineNumber":84,"author":{"gitId":"clarlzx"},"content":"    public void showWellDone(Task task) {"},{"lineNumber":85,"author":{"gitId":"clarlzx"},"content":"        assert task !\u003d null; "},{"lineNumber":86,"author":{"gitId":"clarlzx"},"content":"        "},{"lineNumber":87,"author":{"gitId":"clarlzx"},"content":"        this.respondString \u003d  \"Mew! I\u0027ve marked this task as done:\\n\" + "},{"lineNumber":88,"author":{"gitId":"clarlzx"},"content":"                task + "},{"lineNumber":89,"author":{"gitId":"clarlzx"},"content":"                \"\\n\\u2728* Good job, you deserve a kit-kat \\uD83C\\uDF6B *\\u2728\";"},{"lineNumber":90,"author":{"gitId":"clarlzx"},"content":"        this.chatImage \u003d gdJobChat;"},{"lineNumber":91,"author":{"gitId":"clarlzx"},"content":"    }"},{"lineNumber":92,"author":{"gitId":"clarlzx"},"content":""},{"lineNumber":93,"author":{"gitId":"clarlzx"},"content":"    /**"},{"lineNumber":94,"author":{"gitId":"clarlzx"},"content":"     * Sets all ui attributes for error message from Chat."},{"lineNumber":95,"author":{"gitId":"clarlzx"},"content":"     * Message tells user that Chat has encountered an error when loading tasks from data on hard disk."},{"lineNumber":96,"author":{"gitId":"clarlzx"},"content":"     */"},{"lineNumber":97,"author":{"gitId":"clarlzx"},"content":"    public void showLoadingError() { "},{"lineNumber":98,"author":{"gitId":"clarlzx"},"content":"        this.respondString \u003d new ChatException(\"Error loading file\").getMessage();"},{"lineNumber":99,"author":{"gitId":"clarlzx"},"content":"        this.chatImage \u003d errorChat;"},{"lineNumber":100,"author":{"gitId":"clarlzx"},"content":"    }"},{"lineNumber":101,"author":{"gitId":"clarlzx"},"content":""},{"lineNumber":102,"author":{"gitId":"clarlzx"},"content":"    /**"},{"lineNumber":103,"author":{"gitId":"clarlzx"},"content":"     * Sets all ui attributes for error message from Chat."},{"lineNumber":104,"author":{"gitId":"clarlzx"},"content":"     * Message tells user that Chat has encountered an error."},{"lineNumber":105,"author":{"gitId":"clarlzx"},"content":"     * "},{"lineNumber":106,"author":{"gitId":"clarlzx"},"content":"     * @param e Error message from Chat to user."},{"lineNumber":107,"author":{"gitId":"clarlzx"},"content":"     */"},{"lineNumber":108,"author":{"gitId":"clarlzx"},"content":"    public void showError(ChatException e) { "},{"lineNumber":109,"author":{"gitId":"clarlzx"},"content":"        assert e.getMessage() !\u003d \"\";"},{"lineNumber":110,"author":{"gitId":"clarlzx"},"content":"        "},{"lineNumber":111,"author":{"gitId":"clarlzx"},"content":"        this.respondString \u003d e.getMessage();"},{"lineNumber":112,"author":{"gitId":"clarlzx"},"content":"        this.chatImage \u003d errorChat;"},{"lineNumber":113,"author":{"gitId":"clarlzx"},"content":"    }"},{"lineNumber":114,"author":{"gitId":"clarlzx"},"content":""},{"lineNumber":115,"author":{"gitId":"clarlzx"},"content":"    /**"},{"lineNumber":116,"author":{"gitId":"clarlzx"},"content":"     * Sets all all ui attributes for list output from Chat."},{"lineNumber":117,"author":{"gitId":"clarlzx"},"content":"     * Output lists tasks from list of tasks from TaskList object."},{"lineNumber":118,"author":{"gitId":"clarlzx"},"content":"     * "},{"lineNumber":119,"author":{"gitId":"clarlzx"},"content":"     * @param taskList TaskList object that contains a list of tasks."},{"lineNumber":120,"author":{"gitId":"clarlzx"},"content":"     */"},{"lineNumber":121,"author":{"gitId":"clarlzx"},"content":"    public void list(TaskList taskList) {"},{"lineNumber":122,"author":{"gitId":"clarlzx"},"content":"        assert taskList !\u003d null; "},{"lineNumber":123,"author":{"gitId":"clarlzx"},"content":"        "},{"lineNumber":124,"author":{"gitId":"clarlzx"},"content":"        int i \u003d 0;"},{"lineNumber":125,"author":{"gitId":"clarlzx"},"content":"        String str \u003d \" * list *\\n\";"},{"lineNumber":126,"author":{"gitId":"clarlzx"},"content":"        while (i \u003c taskList.getTasks().size()) {"},{"lineNumber":127,"author":{"gitId":"clarlzx"},"content":"            str +\u003d Integer.toString(i + 1) + \". \" + taskList.getTasks().get(i) + \"\\n\";"},{"lineNumber":128,"author":{"gitId":"clarlzx"},"content":"            i++;"},{"lineNumber":129,"author":{"gitId":"clarlzx"},"content":"        }"},{"lineNumber":130,"author":{"gitId":"clarlzx"},"content":"        "},{"lineNumber":131,"author":{"gitId":"clarlzx"},"content":"        //string without last /n at the back"},{"lineNumber":132,"author":{"gitId":"clarlzx"},"content":"        this.respondString \u003d str.substring(0, str.length() - 1);"},{"lineNumber":133,"author":{"gitId":"clarlzx"},"content":"        this.chatImage \u003d greetingChat;"},{"lineNumber":134,"author":{"gitId":"clarlzx"},"content":"    }"},{"lineNumber":135,"author":{"gitId":"clarlzx"},"content":"    "},{"lineNumber":136,"author":{"gitId":"clarlzx"},"content":"}"}],"authorContributionMap":{"clarlzx":136}},{"path":"src/main/java/chat/UserDialogBox.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"clarlzx"},"content":"package chat;"},{"lineNumber":2,"author":{"gitId":"clarlzx"},"content":""},{"lineNumber":3,"author":{"gitId":"clarlzx"},"content":"import java.io.IOException;"},{"lineNumber":4,"author":{"gitId":"clarlzx"},"content":""},{"lineNumber":5,"author":{"gitId":"clarlzx"},"content":"import javafx.fxml.FXML;"},{"lineNumber":6,"author":{"gitId":"clarlzx"},"content":"import javafx.fxml.FXMLLoader;"},{"lineNumber":7,"author":{"gitId":"clarlzx"},"content":""},{"lineNumber":8,"author":{"gitId":"clarlzx"},"content":"import javafx.scene.control.Label;"},{"lineNumber":9,"author":{"gitId":"clarlzx"},"content":"import javafx.scene.layout.HBox;"},{"lineNumber":10,"author":{"gitId":"clarlzx"},"content":""},{"lineNumber":11,"author":{"gitId":"clarlzx"},"content":"/**"},{"lineNumber":12,"author":{"gitId":"clarlzx"},"content":" * Class for a custom made user dialog box."},{"lineNumber":13,"author":{"gitId":"clarlzx"},"content":" * UserDialogBox class includes user\u0027s command to Chat the Cat."},{"lineNumber":14,"author":{"gitId":"clarlzx"},"content":" */"},{"lineNumber":15,"author":{"gitId":"clarlzx"},"content":""},{"lineNumber":16,"author":{"gitId":"clarlzx"},"content":"public class UserDialogBox extends HBox {"},{"lineNumber":17,"author":{"gitId":"clarlzx"},"content":""},{"lineNumber":18,"author":{"gitId":"clarlzx"},"content":"    @FXML"},{"lineNumber":19,"author":{"gitId":"clarlzx"},"content":"    private Label dialog;"},{"lineNumber":20,"author":{"gitId":"clarlzx"},"content":""},{"lineNumber":21,"author":{"gitId":"clarlzx"},"content":"    /**"},{"lineNumber":22,"author":{"gitId":"clarlzx"},"content":"     * Initialises Chat Dialog Box object."},{"lineNumber":23,"author":{"gitId":"clarlzx"},"content":"     *"},{"lineNumber":24,"author":{"gitId":"clarlzx"},"content":"     * @param text Displayed text in dialog box."},{"lineNumber":25,"author":{"gitId":"clarlzx"},"content":"     */"},{"lineNumber":26,"author":{"gitId":"clarlzx"},"content":"    private UserDialogBox(String text) {"},{"lineNumber":27,"author":{"gitId":"clarlzx"},"content":"        assert text !\u003d \"\";"},{"lineNumber":28,"author":{"gitId":"clarlzx"},"content":""},{"lineNumber":29,"author":{"gitId":"clarlzx"},"content":"        try {"},{"lineNumber":30,"author":{"gitId":"clarlzx"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(\"/view/UserDialogBox.fxml\"));"},{"lineNumber":31,"author":{"gitId":"clarlzx"},"content":"            fxmlLoader.setController(this);"},{"lineNumber":32,"author":{"gitId":"clarlzx"},"content":"            fxmlLoader.setRoot(this);"},{"lineNumber":33,"author":{"gitId":"clarlzx"},"content":"            fxmlLoader.load();"},{"lineNumber":34,"author":{"gitId":"clarlzx"},"content":"        } catch (IOException e) {"},{"lineNumber":35,"author":{"gitId":"clarlzx"},"content":"            e.printStackTrace();"},{"lineNumber":36,"author":{"gitId":"clarlzx"},"content":"        }"},{"lineNumber":37,"author":{"gitId":"clarlzx"},"content":""},{"lineNumber":38,"author":{"gitId":"clarlzx"},"content":"        dialog.setText(text);"},{"lineNumber":39,"author":{"gitId":"clarlzx"},"content":"    }"},{"lineNumber":40,"author":{"gitId":"clarlzx"},"content":""},{"lineNumber":41,"author":{"gitId":"clarlzx"},"content":"    /**"},{"lineNumber":42,"author":{"gitId":"clarlzx"},"content":"     * Returns a dialog box with user input."},{"lineNumber":43,"author":{"gitId":"clarlzx"},"content":"     *"},{"lineNumber":44,"author":{"gitId":"clarlzx"},"content":"     * @param text User\u0027s inputted text."},{"lineNumber":45,"author":{"gitId":"clarlzx"},"content":"     * @return DialogBox object."},{"lineNumber":46,"author":{"gitId":"clarlzx"},"content":"     */"},{"lineNumber":47,"author":{"gitId":"clarlzx"},"content":"    public static UserDialogBox getUserDialog(String text) {"},{"lineNumber":48,"author":{"gitId":"clarlzx"},"content":"        assert text !\u003d \"\";"},{"lineNumber":49,"author":{"gitId":"clarlzx"},"content":""},{"lineNumber":50,"author":{"gitId":"clarlzx"},"content":"        return new UserDialogBox(text);"},{"lineNumber":51,"author":{"gitId":"clarlzx"},"content":"    }"},{"lineNumber":52,"author":{"gitId":"clarlzx"},"content":""},{"lineNumber":53,"author":{"gitId":"clarlzx"},"content":"}"}],"authorContributionMap":{"clarlzx":53}},{"path":"src/main/java/chat/command/AddCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"clarlzx"},"content":"package chat.command;"},{"lineNumber":2,"author":{"gitId":"clarlzx"},"content":""},{"lineNumber":3,"author":{"gitId":"clarlzx"},"content":"import chat.ChatException;"},{"lineNumber":4,"author":{"gitId":"clarlzx"},"content":"import chat.TaskList;"},{"lineNumber":5,"author":{"gitId":"clarlzx"},"content":"import chat.Storage;"},{"lineNumber":6,"author":{"gitId":"clarlzx"},"content":"import chat.Ui;"},{"lineNumber":7,"author":{"gitId":"clarlzx"},"content":"import chat.task.Task;"},{"lineNumber":8,"author":{"gitId":"clarlzx"},"content":"import chat.task.Todo;"},{"lineNumber":9,"author":{"gitId":"clarlzx"},"content":"import chat.task.Deadline; "},{"lineNumber":10,"author":{"gitId":"clarlzx"},"content":"import chat.task.Event;"},{"lineNumber":11,"author":{"gitId":"clarlzx"},"content":""},{"lineNumber":12,"author":{"gitId":"clarlzx"},"content":"/**"},{"lineNumber":13,"author":{"gitId":"clarlzx"},"content":" * A type of command that deals with adding tasks to list of tasks"},{"lineNumber":14,"author":{"gitId":"clarlzx"},"content":" * from a TaskList object."},{"lineNumber":15,"author":{"gitId":"clarlzx"},"content":" */"},{"lineNumber":16,"author":{"gitId":"clarlzx"},"content":"public class AddCommand extends Command{"},{"lineNumber":17,"author":{"gitId":"clarlzx"},"content":"    "},{"lineNumber":18,"author":{"gitId":"clarlzx"},"content":"    String inputStr;"},{"lineNumber":19,"author":{"gitId":"clarlzx"},"content":""},{"lineNumber":20,"author":{"gitId":"clarlzx"},"content":"    /**"},{"lineNumber":21,"author":{"gitId":"clarlzx"},"content":"     * Initialises AddCommand object."},{"lineNumber":22,"author":{"gitId":"clarlzx"},"content":"     *"},{"lineNumber":23,"author":{"gitId":"clarlzx"},"content":"     * @param inputStr Inputted command string from user to Chat the Cat."},{"lineNumber":24,"author":{"gitId":"clarlzx"},"content":"     */"},{"lineNumber":25,"author":{"gitId":"clarlzx"},"content":"    public AddCommand(String inputStr) {"},{"lineNumber":26,"author":{"gitId":"clarlzx"},"content":"        assert inputStr !\u003d \"\";"},{"lineNumber":27,"author":{"gitId":"clarlzx"},"content":"        this.inputStr \u003d inputStr;"},{"lineNumber":28,"author":{"gitId":"clarlzx"},"content":"    }"},{"lineNumber":29,"author":{"gitId":"clarlzx"},"content":""},{"lineNumber":30,"author":{"gitId":"clarlzx"},"content":"    /**"},{"lineNumber":31,"author":{"gitId":"clarlzx"},"content":"     * Method that adds tasks to list of tasks from TaskList object."},{"lineNumber":32,"author":{"gitId":"clarlzx"},"content":"     * "},{"lineNumber":33,"author":{"gitId":"clarlzx"},"content":"     * @param taskList TaskList object that contains a list of tasks."},{"lineNumber":34,"author":{"gitId":"clarlzx"},"content":"     * @param ui Ui object that gives responses to user."},{"lineNumber":35,"author":{"gitId":"clarlzx"},"content":"     * @param storage Storage object that interacts with task data in hard disk."},{"lineNumber":36,"author":{"gitId":"clarlzx"},"content":"     * @throws ChatException If format of command is wrong."},{"lineNumber":37,"author":{"gitId":"clarlzx"},"content":"     */"},{"lineNumber":38,"author":{"gitId":"clarlzx"},"content":"    public void execute(TaskList taskList, Ui ui, Storage storage) throws ChatException {"},{"lineNumber":39,"author":{"gitId":"clarlzx"},"content":"        assert taskList !\u003d null; "},{"lineNumber":40,"author":{"gitId":"clarlzx"},"content":"        assert ui !\u003d null; "},{"lineNumber":41,"author":{"gitId":"clarlzx"},"content":"        assert storage !\u003d null;"},{"lineNumber":42,"author":{"gitId":"clarlzx"},"content":"        "},{"lineNumber":43,"author":{"gitId":"clarlzx"},"content":"        Task task;"},{"lineNumber":44,"author":{"gitId":"clarlzx"},"content":"        if (this.inputStr.startsWith(\"todo\")) {"},{"lineNumber":45,"author":{"gitId":"clarlzx"},"content":"            task \u003d Todo.createTodo(this.inputStr);"},{"lineNumber":46,"author":{"gitId":"clarlzx"},"content":"        } else if (this.inputStr.startsWith(\"deadline\")) {"},{"lineNumber":47,"author":{"gitId":"clarlzx"},"content":"            task \u003d Deadline.createDeadline(this.inputStr);"},{"lineNumber":48,"author":{"gitId":"clarlzx"},"content":"        } else {"},{"lineNumber":49,"author":{"gitId":"clarlzx"},"content":"            //inputStr starts with event"},{"lineNumber":50,"author":{"gitId":"clarlzx"},"content":"            task \u003d Event.createEvent(this.inputStr);"},{"lineNumber":51,"author":{"gitId":"clarlzx"},"content":"        }"},{"lineNumber":52,"author":{"gitId":"clarlzx"},"content":"        "},{"lineNumber":53,"author":{"gitId":"clarlzx"},"content":"        taskList.getTasks().add(task);"},{"lineNumber":54,"author":{"gitId":"clarlzx"},"content":"        storage.save(taskList);"},{"lineNumber":55,"author":{"gitId":"clarlzx"},"content":"        ui.showAddSuccess(task, taskList.getTasks().size());"},{"lineNumber":56,"author":{"gitId":"clarlzx"},"content":"    }"},{"lineNumber":57,"author":{"gitId":"clarlzx"},"content":"    "},{"lineNumber":58,"author":{"gitId":"clarlzx"},"content":"}"},{"lineNumber":59,"author":{"gitId":"clarlzx"},"content":""}],"authorContributionMap":{"clarlzx":59}},{"path":"src/main/java/chat/command/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"clarlzx"},"content":"package chat.command;"},{"lineNumber":2,"author":{"gitId":"clarlzx"},"content":""},{"lineNumber":3,"author":{"gitId":"clarlzx"},"content":"import chat.ChatException;"},{"lineNumber":4,"author":{"gitId":"clarlzx"},"content":"import chat.TaskList;"},{"lineNumber":5,"author":{"gitId":"clarlzx"},"content":"import chat.Storage;"},{"lineNumber":6,"author":{"gitId":"clarlzx"},"content":"import chat.Ui;"},{"lineNumber":7,"author":{"gitId":"clarlzx"},"content":"import chat.task.Task;"},{"lineNumber":8,"author":{"gitId":"clarlzx"},"content":""},{"lineNumber":9,"author":{"gitId":"clarlzx"},"content":"/**"},{"lineNumber":10,"author":{"gitId":"clarlzx"},"content":" * Abstract class for commands."},{"lineNumber":11,"author":{"gitId":"clarlzx"},"content":" * \u003cp\u003eCommands refer to the commands that Chat the Cat receives from the user.\u003c/p\u003e"},{"lineNumber":12,"author":{"gitId":"clarlzx"},"content":" */"},{"lineNumber":13,"author":{"gitId":"clarlzx"},"content":""},{"lineNumber":14,"author":{"gitId":"clarlzx"},"content":"public abstract class Command {"},{"lineNumber":15,"author":{"gitId":"clarlzx"},"content":""},{"lineNumber":16,"author":{"gitId":"clarlzx"},"content":"    /**"},{"lineNumber":17,"author":{"gitId":"clarlzx"},"content":"     * Abstract method that executes the command."},{"lineNumber":18,"author":{"gitId":"clarlzx"},"content":"     * @param taskList TaskList object that contains a list of tasks."},{"lineNumber":19,"author":{"gitId":"clarlzx"},"content":"     * @param ui Ui object that gives responses to user."},{"lineNumber":20,"author":{"gitId":"clarlzx"},"content":"     * @param storage Storage object that interacts with task data in hard disk."},{"lineNumber":21,"author":{"gitId":"clarlzx"},"content":"     * @throws ChatException If format of command is wrong."},{"lineNumber":22,"author":{"gitId":"clarlzx"},"content":"     */"},{"lineNumber":23,"author":{"gitId":"clarlzx"},"content":"    public abstract void execute(TaskList taskList, Ui ui, Storage storage) throws ChatException;"},{"lineNumber":24,"author":{"gitId":"clarlzx"},"content":""},{"lineNumber":25,"author":{"gitId":"clarlzx"},"content":"    /**"},{"lineNumber":26,"author":{"gitId":"clarlzx"},"content":"     * Returns true if command requires Chat the Cat to exit."},{"lineNumber":27,"author":{"gitId":"clarlzx"},"content":"     * "},{"lineNumber":28,"author":{"gitId":"clarlzx"},"content":"     * @return Boolean that shows if Chat should exit."},{"lineNumber":29,"author":{"gitId":"clarlzx"},"content":"     */"},{"lineNumber":30,"author":{"gitId":"clarlzx"},"content":"    public boolean isExit() { "},{"lineNumber":31,"author":{"gitId":"clarlzx"},"content":"        return false;"},{"lineNumber":32,"author":{"gitId":"clarlzx"},"content":"    };"},{"lineNumber":33,"author":{"gitId":"clarlzx"},"content":""},{"lineNumber":34,"author":{"gitId":"clarlzx"},"content":"    /**"},{"lineNumber":35,"author":{"gitId":"clarlzx"},"content":"     * Method that can be used to check format for commands with indexes."},{"lineNumber":36,"author":{"gitId":"clarlzx"},"content":"     * \u003cp\u003ei.e. Commands with format: [command] [index]\u003c/p\u003e"},{"lineNumber":37,"author":{"gitId":"clarlzx"},"content":"     * @param taskList TaskList object that contains a list of tasks."},{"lineNumber":38,"author":{"gitId":"clarlzx"},"content":"     * @param commandName Command name."},{"lineNumber":39,"author":{"gitId":"clarlzx"},"content":"     * @param str Inputted command string from user to Chat the Cat."},{"lineNumber":40,"author":{"gitId":"clarlzx"},"content":"     * @return Task If valid index, task at particular index in list of tasks is returned."},{"lineNumber":41,"author":{"gitId":"clarlzx"},"content":"     * @throws ChatException If format of command is wrong."},{"lineNumber":42,"author":{"gitId":"clarlzx"},"content":"     */"},{"lineNumber":43,"author":{"gitId":"clarlzx"},"content":"    public Task checkCommandIndex(TaskList taskList, String commandName, String str) throws ChatException {"},{"lineNumber":44,"author":{"gitId":"clarlzx"},"content":"        //for commands with format: [command] [index]"},{"lineNumber":45,"author":{"gitId":"clarlzx"},"content":"        //returns valid index if index is correct"},{"lineNumber":46,"author":{"gitId":"clarlzx"},"content":"        assert taskList !\u003d null;"},{"lineNumber":47,"author":{"gitId":"clarlzx"},"content":"        assert commandName !\u003d \"\"; "},{"lineNumber":48,"author":{"gitId":"clarlzx"},"content":"        assert str !\u003d \"\"; "},{"lineNumber":49,"author":{"gitId":"clarlzx"},"content":"        assert str.contains(commandName);"},{"lineNumber":50,"author":{"gitId":"clarlzx"},"content":""},{"lineNumber":51,"author":{"gitId":"clarlzx"},"content":"        String formatStr \u003d String.format(\"Please input with this format:\\n%s [index]\", commandName);"},{"lineNumber":52,"author":{"gitId":"clarlzx"},"content":""},{"lineNumber":53,"author":{"gitId":"clarlzx"},"content":"        if (str.strip().equals(commandName)) {"},{"lineNumber":54,"author":{"gitId":"clarlzx"},"content":"            throw new ChatException(\"Missing index\\n\" + formatStr);"},{"lineNumber":55,"author":{"gitId":"clarlzx"},"content":"        } else if (!str.contains(\" \")) {"},{"lineNumber":56,"author":{"gitId":"clarlzx"},"content":"            throw new ChatException(\"Missing space before index\\n\" + formatStr);"},{"lineNumber":57,"author":{"gitId":"clarlzx"},"content":"        }"},{"lineNumber":58,"author":{"gitId":"clarlzx"},"content":"        "},{"lineNumber":59,"author":{"gitId":"clarlzx"},"content":"        try {"},{"lineNumber":60,"author":{"gitId":"clarlzx"},"content":"            int i \u003d Integer.parseInt(str.split(\" \")[1]) - 1;"},{"lineNumber":61,"author":{"gitId":"clarlzx"},"content":"            return taskList.getTasks().get(i);"},{"lineNumber":62,"author":{"gitId":"clarlzx"},"content":"        } catch (IndexOutOfBoundsException e1) {"},{"lineNumber":63,"author":{"gitId":"clarlzx"},"content":"            //list is empty, hence i results in index out of bounds"},{"lineNumber":64,"author":{"gitId":"clarlzx"},"content":"            //or when i \u003e\u003d taskList.getTasks().size()"},{"lineNumber":65,"author":{"gitId":"clarlzx"},"content":"            throw new ChatException(\"List is empty or index is out of bounds\");"},{"lineNumber":66,"author":{"gitId":"clarlzx"},"content":"        } catch (NumberFormatException e3){"},{"lineNumber":67,"author":{"gitId":"clarlzx"},"content":"            //i.e. [command] string"},{"lineNumber":68,"author":{"gitId":"clarlzx"},"content":"            throw new ChatException(\"Index should be an integer\\n\" + formatStr);"},{"lineNumber":69,"author":{"gitId":"clarlzx"},"content":"        }"},{"lineNumber":70,"author":{"gitId":"clarlzx"},"content":"    }"},{"lineNumber":71,"author":{"gitId":"clarlzx"},"content":"    "},{"lineNumber":72,"author":{"gitId":"clarlzx"},"content":"}"}],"authorContributionMap":{"clarlzx":72}},{"path":"src/main/java/chat/command/DeleteCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"clarlzx"},"content":"package chat.command;"},{"lineNumber":2,"author":{"gitId":"clarlzx"},"content":""},{"lineNumber":3,"author":{"gitId":"clarlzx"},"content":"import chat.ChatException;"},{"lineNumber":4,"author":{"gitId":"clarlzx"},"content":"import chat.TaskList;"},{"lineNumber":5,"author":{"gitId":"clarlzx"},"content":"import chat.Storage;"},{"lineNumber":6,"author":{"gitId":"clarlzx"},"content":"import chat.Ui;"},{"lineNumber":7,"author":{"gitId":"clarlzx"},"content":"import chat.task.Task;"},{"lineNumber":8,"author":{"gitId":"clarlzx"},"content":""},{"lineNumber":9,"author":{"gitId":"clarlzx"},"content":"/**"},{"lineNumber":10,"author":{"gitId":"clarlzx"},"content":" * A type of command that deals with deleting tasks from a list of tasks"},{"lineNumber":11,"author":{"gitId":"clarlzx"},"content":" * from a TaskList object."},{"lineNumber":12,"author":{"gitId":"clarlzx"},"content":" */"},{"lineNumber":13,"author":{"gitId":"clarlzx"},"content":""},{"lineNumber":14,"author":{"gitId":"clarlzx"},"content":"public class DeleteCommand extends Command{"},{"lineNumber":15,"author":{"gitId":"clarlzx"},"content":"    "},{"lineNumber":16,"author":{"gitId":"clarlzx"},"content":"    String inputStr;"},{"lineNumber":17,"author":{"gitId":"clarlzx"},"content":""},{"lineNumber":18,"author":{"gitId":"clarlzx"},"content":"    /**"},{"lineNumber":19,"author":{"gitId":"clarlzx"},"content":"     * Initialises DeleteCommand object."},{"lineNumber":20,"author":{"gitId":"clarlzx"},"content":"     * "},{"lineNumber":21,"author":{"gitId":"clarlzx"},"content":"     * @param inputStr Inputted command string from user to Chat the Cat."},{"lineNumber":22,"author":{"gitId":"clarlzx"},"content":"     */"},{"lineNumber":23,"author":{"gitId":"clarlzx"},"content":"    public DeleteCommand(String inputStr) {"},{"lineNumber":24,"author":{"gitId":"clarlzx"},"content":"        assert inputStr !\u003d \"\";"},{"lineNumber":25,"author":{"gitId":"clarlzx"},"content":"        this.inputStr \u003d inputStr;"},{"lineNumber":26,"author":{"gitId":"clarlzx"},"content":"    }"},{"lineNumber":27,"author":{"gitId":"clarlzx"},"content":""},{"lineNumber":28,"author":{"gitId":"clarlzx"},"content":"    /**"},{"lineNumber":29,"author":{"gitId":"clarlzx"},"content":"     * Method that deletes tasks from list of tasks from TaskList object."},{"lineNumber":30,"author":{"gitId":"clarlzx"},"content":"     * "},{"lineNumber":31,"author":{"gitId":"clarlzx"},"content":"     * @param taskList TaskList object that contains a list of tasks."},{"lineNumber":32,"author":{"gitId":"clarlzx"},"content":"     * @param ui Ui object that gives responses to user."},{"lineNumber":33,"author":{"gitId":"clarlzx"},"content":"     * @param storage Storage object that interacts with task data in hard disk."},{"lineNumber":34,"author":{"gitId":"clarlzx"},"content":"     * @throws ChatException If format of command is wrong."},{"lineNumber":35,"author":{"gitId":"clarlzx"},"content":"     */"},{"lineNumber":36,"author":{"gitId":"clarlzx"},"content":"    @Override"},{"lineNumber":37,"author":{"gitId":"clarlzx"},"content":"    public void execute(TaskList taskList, Ui ui, Storage storage) throws ChatException {"},{"lineNumber":38,"author":{"gitId":"clarlzx"},"content":"        assert taskList !\u003d null;"},{"lineNumber":39,"author":{"gitId":"clarlzx"},"content":"        assert ui !\u003d null;"},{"lineNumber":40,"author":{"gitId":"clarlzx"},"content":"        assert storage !\u003d null;"},{"lineNumber":41,"author":{"gitId":"clarlzx"},"content":""},{"lineNumber":42,"author":{"gitId":"clarlzx"},"content":"        Task task \u003d checkCommandIndex(taskList, \"delete\", this.inputStr);"},{"lineNumber":43,"author":{"gitId":"clarlzx"},"content":"        taskList.getTasks().remove(task);"},{"lineNumber":44,"author":{"gitId":"clarlzx"},"content":"        storage.save(taskList);"},{"lineNumber":45,"author":{"gitId":"clarlzx"},"content":"        ui.showDeleteSuccess(task, taskList.getTasks().size());"},{"lineNumber":46,"author":{"gitId":"clarlzx"},"content":"    }"},{"lineNumber":47,"author":{"gitId":"clarlzx"},"content":"    "},{"lineNumber":48,"author":{"gitId":"clarlzx"},"content":"}"}],"authorContributionMap":{"clarlzx":48}},{"path":"src/main/java/chat/command/DoneCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"clarlzx"},"content":"package chat.command;"},{"lineNumber":2,"author":{"gitId":"clarlzx"},"content":""},{"lineNumber":3,"author":{"gitId":"clarlzx"},"content":"import chat.ChatException;"},{"lineNumber":4,"author":{"gitId":"clarlzx"},"content":"import chat.TaskList;"},{"lineNumber":5,"author":{"gitId":"clarlzx"},"content":"import chat.Storage;"},{"lineNumber":6,"author":{"gitId":"clarlzx"},"content":"import chat.Ui;"},{"lineNumber":7,"author":{"gitId":"clarlzx"},"content":"import chat.task.Task;"},{"lineNumber":8,"author":{"gitId":"clarlzx"},"content":""},{"lineNumber":9,"author":{"gitId":"clarlzx"},"content":"/**"},{"lineNumber":10,"author":{"gitId":"clarlzx"},"content":" * A type of command that deals with marking tasks from list of tasks "},{"lineNumber":11,"author":{"gitId":"clarlzx"},"content":" * from TaskList object, as done once completed."},{"lineNumber":12,"author":{"gitId":"clarlzx"},"content":" */"},{"lineNumber":13,"author":{"gitId":"clarlzx"},"content":"public class DoneCommand extends Command {"},{"lineNumber":14,"author":{"gitId":"clarlzx"},"content":""},{"lineNumber":15,"author":{"gitId":"clarlzx"},"content":"    String inputStr;"},{"lineNumber":16,"author":{"gitId":"clarlzx"},"content":""},{"lineNumber":17,"author":{"gitId":"clarlzx"},"content":"    /**"},{"lineNumber":18,"author":{"gitId":"clarlzx"},"content":"     * Initialises DoneCommand object."},{"lineNumber":19,"author":{"gitId":"clarlzx"},"content":"     *"},{"lineNumber":20,"author":{"gitId":"clarlzx"},"content":"     * @param inputStr Inputted command string from user to Chat the Cat."},{"lineNumber":21,"author":{"gitId":"clarlzx"},"content":"     */"},{"lineNumber":22,"author":{"gitId":"clarlzx"},"content":"    public DoneCommand(String inputStr) {"},{"lineNumber":23,"author":{"gitId":"clarlzx"},"content":"        assert inputStr !\u003d \"\";"},{"lineNumber":24,"author":{"gitId":"clarlzx"},"content":"        this.inputStr \u003d inputStr; "},{"lineNumber":25,"author":{"gitId":"clarlzx"},"content":"    }"},{"lineNumber":26,"author":{"gitId":"clarlzx"},"content":""},{"lineNumber":27,"author":{"gitId":"clarlzx"},"content":"    /**"},{"lineNumber":28,"author":{"gitId":"clarlzx"},"content":"     * Method that marks tasks as done from list of tasks from TaskList object."},{"lineNumber":29,"author":{"gitId":"clarlzx"},"content":"     * "},{"lineNumber":30,"author":{"gitId":"clarlzx"},"content":"     * @param taskList TaskList object that contains a list of tasks."},{"lineNumber":31,"author":{"gitId":"clarlzx"},"content":"     * @param ui Ui object that gives responses to user."},{"lineNumber":32,"author":{"gitId":"clarlzx"},"content":"     * @param storage Storage object that interacts with task data in hard disk."},{"lineNumber":33,"author":{"gitId":"clarlzx"},"content":"     * @throws ChatException If format of command is wrong."},{"lineNumber":34,"author":{"gitId":"clarlzx"},"content":"     */"},{"lineNumber":35,"author":{"gitId":"clarlzx"},"content":"    public void execute(TaskList taskList, Ui ui, Storage storage) throws ChatException {"},{"lineNumber":36,"author":{"gitId":"clarlzx"},"content":"        assert taskList !\u003d null;"},{"lineNumber":37,"author":{"gitId":"clarlzx"},"content":"        assert ui !\u003d null;"},{"lineNumber":38,"author":{"gitId":"clarlzx"},"content":"        assert storage !\u003d null;"},{"lineNumber":39,"author":{"gitId":"clarlzx"},"content":""},{"lineNumber":40,"author":{"gitId":"clarlzx"},"content":"        Task task \u003d checkCommandIndex(taskList, \"done\", this.inputStr);"},{"lineNumber":41,"author":{"gitId":"clarlzx"},"content":"        if (task.getIsDone()) {"},{"lineNumber":42,"author":{"gitId":"clarlzx"},"content":"            //task has already been marked as completed "},{"lineNumber":43,"author":{"gitId":"clarlzx"},"content":"            throw new ChatException(String.format(\"Task already completed\\n%s\", task));"},{"lineNumber":44,"author":{"gitId":"clarlzx"},"content":"        } else {"},{"lineNumber":45,"author":{"gitId":"clarlzx"},"content":"            task.completed();"},{"lineNumber":46,"author":{"gitId":"clarlzx"},"content":"            storage.save(taskList);"},{"lineNumber":47,"author":{"gitId":"clarlzx"},"content":"            ui.showWellDone(task);"},{"lineNumber":48,"author":{"gitId":"clarlzx"},"content":"        }"},{"lineNumber":49,"author":{"gitId":"clarlzx"},"content":"    }"},{"lineNumber":50,"author":{"gitId":"clarlzx"},"content":"    "},{"lineNumber":51,"author":{"gitId":"clarlzx"},"content":"}"}],"authorContributionMap":{"clarlzx":51}},{"path":"src/main/java/chat/command/ExitCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"clarlzx"},"content":"package chat.command;"},{"lineNumber":2,"author":{"gitId":"clarlzx"},"content":""},{"lineNumber":3,"author":{"gitId":"clarlzx"},"content":"import chat.TaskList;"},{"lineNumber":4,"author":{"gitId":"clarlzx"},"content":"import chat.Storage;"},{"lineNumber":5,"author":{"gitId":"clarlzx"},"content":"import chat.Ui;"},{"lineNumber":6,"author":{"gitId":"clarlzx"},"content":""},{"lineNumber":7,"author":{"gitId":"clarlzx"},"content":"/**"},{"lineNumber":8,"author":{"gitId":"clarlzx"},"content":" * A type of command that deals with user when exiting the programme."},{"lineNumber":9,"author":{"gitId":"clarlzx"},"content":" */"},{"lineNumber":10,"author":{"gitId":"clarlzx"},"content":"public class ExitCommand extends Command{"},{"lineNumber":11,"author":{"gitId":"clarlzx"},"content":""},{"lineNumber":12,"author":{"gitId":"clarlzx"},"content":"    /**"},{"lineNumber":13,"author":{"gitId":"clarlzx"},"content":"     * Method that prints exiting response from Chat the Cat to user."},{"lineNumber":14,"author":{"gitId":"clarlzx"},"content":"     * @param taskList TaskList object that contains a list of tasks."},{"lineNumber":15,"author":{"gitId":"clarlzx"},"content":"     * @param ui Ui object that gives responses to user."},{"lineNumber":16,"author":{"gitId":"clarlzx"},"content":"     * @param storage Storage object that interacts with task data in hard disk."},{"lineNumber":17,"author":{"gitId":"clarlzx"},"content":"     */"},{"lineNumber":18,"author":{"gitId":"clarlzx"},"content":"    public void execute(TaskList taskList, Ui ui, Storage storage) {"},{"lineNumber":19,"author":{"gitId":"clarlzx"},"content":"        ui.exit();"},{"lineNumber":20,"author":{"gitId":"clarlzx"},"content":"    };"},{"lineNumber":21,"author":{"gitId":"clarlzx"},"content":""},{"lineNumber":22,"author":{"gitId":"clarlzx"},"content":"    /**"},{"lineNumber":23,"author":{"gitId":"clarlzx"},"content":"     * Returns true if command requires Chat the Cat to exit."},{"lineNumber":24,"author":{"gitId":"clarlzx"},"content":"     * "},{"lineNumber":25,"author":{"gitId":"clarlzx"},"content":"     * @return true."},{"lineNumber":26,"author":{"gitId":"clarlzx"},"content":"     */"},{"lineNumber":27,"author":{"gitId":"clarlzx"},"content":"    @Override"},{"lineNumber":28,"author":{"gitId":"clarlzx"},"content":"    public boolean isExit() { "},{"lineNumber":29,"author":{"gitId":"clarlzx"},"content":"        return true;"},{"lineNumber":30,"author":{"gitId":"clarlzx"},"content":"    }"},{"lineNumber":31,"author":{"gitId":"clarlzx"},"content":"    "},{"lineNumber":32,"author":{"gitId":"clarlzx"},"content":"}"}],"authorContributionMap":{"clarlzx":32}},{"path":"src/main/java/chat/command/FindCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"clarlzx"},"content":"package chat.command;"},{"lineNumber":2,"author":{"gitId":"clarlzx"},"content":""},{"lineNumber":3,"author":{"gitId":"clarlzx"},"content":"import chat.ChatException;"},{"lineNumber":4,"author":{"gitId":"clarlzx"},"content":"import chat.TaskList;"},{"lineNumber":5,"author":{"gitId":"clarlzx"},"content":"import chat.Storage;"},{"lineNumber":6,"author":{"gitId":"clarlzx"},"content":"import chat.Ui;"},{"lineNumber":7,"author":{"gitId":"clarlzx"},"content":"import chat.task.Task;"},{"lineNumber":8,"author":{"gitId":"clarlzx"},"content":""},{"lineNumber":9,"author":{"gitId":"clarlzx"},"content":"import java.util.ArrayList;"},{"lineNumber":10,"author":{"gitId":"clarlzx"},"content":"import java.util.HashMap;"},{"lineNumber":11,"author":{"gitId":"clarlzx"},"content":""},{"lineNumber":12,"author":{"gitId":"clarlzx"},"content":"/**"},{"lineNumber":13,"author":{"gitId":"clarlzx"},"content":" * A type of command that finds tasks based on keywords given by user"},{"lineNumber":14,"author":{"gitId":"clarlzx"},"content":" */"},{"lineNumber":15,"author":{"gitId":"clarlzx"},"content":"public class FindCommand extends Command {"},{"lineNumber":16,"author":{"gitId":"clarlzx"},"content":""},{"lineNumber":17,"author":{"gitId":"clarlzx"},"content":"    /**"},{"lineNumber":18,"author":{"gitId":"clarlzx"},"content":"     * Enumerator class to classify the types of keywords that the user can enter for the find command."},{"lineNumber":19,"author":{"gitId":"clarlzx"},"content":"     */"},{"lineNumber":20,"author":{"gitId":"clarlzx"},"content":"    enum KeywordKey { "},{"lineNumber":21,"author":{"gitId":"clarlzx"},"content":"        TASK_TYPE, NAME, IS_COMPLETED, DATES;"},{"lineNumber":22,"author":{"gitId":"clarlzx"},"content":"    }"},{"lineNumber":23,"author":{"gitId":"clarlzx"},"content":"    "},{"lineNumber":24,"author":{"gitId":"clarlzx"},"content":"    String inputStr;"},{"lineNumber":25,"author":{"gitId":"clarlzx"},"content":""},{"lineNumber":26,"author":{"gitId":"clarlzx"},"content":"    /**"},{"lineNumber":27,"author":{"gitId":"clarlzx"},"content":"     * Initialises FindCommand object with command that includes find keywords given by user. "},{"lineNumber":28,"author":{"gitId":"clarlzx"},"content":"     * "},{"lineNumber":29,"author":{"gitId":"clarlzx"},"content":"     * "},{"lineNumber":30,"author":{"gitId":"clarlzx"},"content":"     * @param inputStr Inputted command string from user to Chat the Cat."},{"lineNumber":31,"author":{"gitId":"clarlzx"},"content":"     */"},{"lineNumber":32,"author":{"gitId":"clarlzx"},"content":"    public FindCommand(String inputStr) {"},{"lineNumber":33,"author":{"gitId":"clarlzx"},"content":"        assert inputStr !\u003d \"\";"},{"lineNumber":34,"author":{"gitId":"clarlzx"},"content":"        this.inputStr \u003d inputStr;"},{"lineNumber":35,"author":{"gitId":"clarlzx"},"content":"    }"},{"lineNumber":36,"author":{"gitId":"clarlzx"},"content":""},{"lineNumber":37,"author":{"gitId":"clarlzx"},"content":"    /**"},{"lineNumber":38,"author":{"gitId":"clarlzx"},"content":"     * Method that finds tasks from list of tasks from TaskList object."},{"lineNumber":39,"author":{"gitId":"clarlzx"},"content":"     * "},{"lineNumber":40,"author":{"gitId":"clarlzx"},"content":"     * @param taskList TaskList object that contains a list of tasks."},{"lineNumber":41,"author":{"gitId":"clarlzx"},"content":"     * @param ui Ui object that gives responses to user."},{"lineNumber":42,"author":{"gitId":"clarlzx"},"content":"     * @param storage Storage object that interacts with task data in hard disk."},{"lineNumber":43,"author":{"gitId":"clarlzx"},"content":"     * @throws ChatException If no tasks match keyword given by user."},{"lineNumber":44,"author":{"gitId":"clarlzx"},"content":"     */"},{"lineNumber":45,"author":{"gitId":"clarlzx"},"content":"    public void execute(TaskList taskList, Ui ui, Storage storage) throws ChatException {"},{"lineNumber":46,"author":{"gitId":"clarlzx"},"content":"        assert taskList !\u003d null;"},{"lineNumber":47,"author":{"gitId":"clarlzx"},"content":"        assert ui !\u003d null;"},{"lineNumber":48,"author":{"gitId":"clarlzx"},"content":"        assert storage !\u003d null;"},{"lineNumber":49,"author":{"gitId":"clarlzx"},"content":"        "},{"lineNumber":50,"author":{"gitId":"clarlzx"},"content":"        TaskList foundTaskList \u003d getFoundTaskList(taskList);"},{"lineNumber":51,"author":{"gitId":"clarlzx"},"content":"        if (foundTaskList.getTasks().isEmpty()) {"},{"lineNumber":52,"author":{"gitId":"clarlzx"},"content":"            throw new ChatException(\"Sorry! No results found.\");"},{"lineNumber":53,"author":{"gitId":"clarlzx"},"content":"        } "},{"lineNumber":54,"author":{"gitId":"clarlzx"},"content":"        ui.list(foundTaskList);"},{"lineNumber":55,"author":{"gitId":"clarlzx"},"content":"    }"},{"lineNumber":56,"author":{"gitId":"clarlzx"},"content":"    "},{"lineNumber":57,"author":{"gitId":"clarlzx"},"content":"    /**"},{"lineNumber":58,"author":{"gitId":"clarlzx"},"content":"     * Returns a TaskList object containing list of tasks that match the keywords given by user."},{"lineNumber":59,"author":{"gitId":"clarlzx"},"content":"     * "},{"lineNumber":60,"author":{"gitId":"clarlzx"},"content":"     * @param taskList TaskList object containing all tasks."},{"lineNumber":61,"author":{"gitId":"clarlzx"},"content":"     * @return TaskList object containing list of tasks that fit the keywords."},{"lineNumber":62,"author":{"gitId":"clarlzx"},"content":"     * @throws ChatException"},{"lineNumber":63,"author":{"gitId":"clarlzx"},"content":"     */"},{"lineNumber":64,"author":{"gitId":"clarlzx"},"content":"    public TaskList getFoundTaskList(TaskList taskList) throws ChatException {"},{"lineNumber":65,"author":{"gitId":"clarlzx"},"content":"        assert taskList !\u003d null;"},{"lineNumber":66,"author":{"gitId":"clarlzx"},"content":""},{"lineNumber":67,"author":{"gitId":"clarlzx"},"content":"        String formatStr \u003d \"Please utilise this format:\\n\" +"},{"lineNumber":68,"author":{"gitId":"clarlzx"},"content":"                \"find t/[TASK_TYPE] n/[NAME] c/[IS_COMPLETED] d/[DATES]\\n\\n\" +"},{"lineNumber":69,"author":{"gitId":"clarlzx"},"content":"                \"TASK_TYPE: T, D or E\\n\" +"},{"lineNumber":70,"author":{"gitId":"clarlzx"},"content":"                \"IS_COMPLETED: T or F\\n\" +"},{"lineNumber":71,"author":{"gitId":"clarlzx"},"content":"                \"DATES: dates can be written as dd MMM or MMM YYYY\\n\\n\" +"},{"lineNumber":72,"author":{"gitId":"clarlzx"},"content":"                \"Examples:\\n\" +"},{"lineNumber":73,"author":{"gitId":"clarlzx"},"content":"                \"* find t/T n/book c/T --\u003e lists completed todo tasks of which name includes book\\n\" +"},{"lineNumber":74,"author":{"gitId":"clarlzx"},"content":"                \"* find t/D c/F --\u003e lists uncompleted deadline and event tasks\\n\" +"},{"lineNumber":75,"author":{"gitId":"clarlzx"},"content":"                \"* find d/13 Mar, 14 Mar 2021 --\u003e lists tasks that start on 13 Mar and end on 14 Mar 2021\";"},{"lineNumber":76,"author":{"gitId":"clarlzx"},"content":""},{"lineNumber":77,"author":{"gitId":"clarlzx"},"content":"        try {"},{"lineNumber":78,"author":{"gitId":"clarlzx"},"content":"            HashMap\u003cKeywordKey, String\u003e keywordMap \u003d getKeywordMap();"},{"lineNumber":79,"author":{"gitId":"clarlzx"},"content":"            TaskList foundTaskList \u003d new TaskList(new ArrayList\u003cTask\u003e());"},{"lineNumber":80,"author":{"gitId":"clarlzx"},"content":"            for (Task task : taskList.getTasks()) {"},{"lineNumber":81,"author":{"gitId":"clarlzx"},"content":"                if (isFound(task, keywordMap)) {"},{"lineNumber":82,"author":{"gitId":"clarlzx"},"content":"                    foundTaskList.getTasks().add(task);"},{"lineNumber":83,"author":{"gitId":"clarlzx"},"content":"                }"},{"lineNumber":84,"author":{"gitId":"clarlzx"},"content":"            }"},{"lineNumber":85,"author":{"gitId":"clarlzx"},"content":"            return foundTaskList;"},{"lineNumber":86,"author":{"gitId":"clarlzx"},"content":"        } catch (ChatException e) {"},{"lineNumber":87,"author":{"gitId":"clarlzx"},"content":"            throw new ChatException(e.getMessage() + formatStr);"},{"lineNumber":88,"author":{"gitId":"clarlzx"},"content":"        }"},{"lineNumber":89,"author":{"gitId":"clarlzx"},"content":"    }"},{"lineNumber":90,"author":{"gitId":"clarlzx"},"content":""},{"lineNumber":91,"author":{"gitId":"clarlzx"},"content":"    /**"},{"lineNumber":92,"author":{"gitId":"clarlzx"},"content":"     * Returns a hashmap, where keywords have been categorised by their given key. (i.e. task type: t/, name: n/, etc.)"},{"lineNumber":93,"author":{"gitId":"clarlzx"},"content":"     * The string behind the keys have been taken as their respective values in the hashmap."},{"lineNumber":94,"author":{"gitId":"clarlzx"},"content":"     * "},{"lineNumber":95,"author":{"gitId":"clarlzx"},"content":"     * @return HashMap "},{"lineNumber":96,"author":{"gitId":"clarlzx"},"content":"     * @throws ChatException "},{"lineNumber":97,"author":{"gitId":"clarlzx"},"content":"     */"},{"lineNumber":98,"author":{"gitId":"clarlzx"},"content":"    private HashMap\u003cKeywordKey, String\u003e getKeywordMap() throws ChatException {"},{"lineNumber":99,"author":{"gitId":"clarlzx"},"content":"        try {"},{"lineNumber":100,"author":{"gitId":"clarlzx"},"content":"            HashMap\u003cKeywordKey, String\u003e keywordMap \u003d new HashMap\u003c\u003e();"},{"lineNumber":101,"author":{"gitId":"clarlzx"},"content":"            String keywordStr \u003d this.inputStr.replace(\"find\", \"\").strip();"},{"lineNumber":102,"author":{"gitId":"clarlzx"},"content":"            "},{"lineNumber":103,"author":{"gitId":"clarlzx"},"content":"            if (keywordStr.equals(\"\")) {"},{"lineNumber":104,"author":{"gitId":"clarlzx"},"content":"                throw new ChatException(\"There should be at least one keyword.\\n\");"},{"lineNumber":105,"author":{"gitId":"clarlzx"},"content":"            }"},{"lineNumber":106,"author":{"gitId":"clarlzx"},"content":"            "},{"lineNumber":107,"author":{"gitId":"clarlzx"},"content":"            String[] strings \u003d keywordStr.split(\"/\");"},{"lineNumber":108,"author":{"gitId":"clarlzx"},"content":"            String key \u003d strings[0];"},{"lineNumber":109,"author":{"gitId":"clarlzx"},"content":"            for (int i \u003d 1; i \u003c strings.length - 1; i++) {"},{"lineNumber":110,"author":{"gitId":"clarlzx"},"content":"                keywordMap.put(getKeywordKey(key), strings[i].substring(0, strings[i].length() - 1).strip());"},{"lineNumber":111,"author":{"gitId":"clarlzx"},"content":"                key \u003d Character.toString(strings[i].charAt(strings[i].length() - 1));"},{"lineNumber":112,"author":{"gitId":"clarlzx"},"content":"            }"},{"lineNumber":113,"author":{"gitId":"clarlzx"},"content":"            keywordMap.put(getKeywordKey(key), strings[strings.length - 1]);"},{"lineNumber":114,"author":{"gitId":"clarlzx"},"content":"            return keywordMap;"},{"lineNumber":115,"author":{"gitId":"clarlzx"},"content":"        } catch (ChatException e) {"},{"lineNumber":116,"author":{"gitId":"clarlzx"},"content":"            throw e;"},{"lineNumber":117,"author":{"gitId":"clarlzx"},"content":"        }"},{"lineNumber":118,"author":{"gitId":"clarlzx"},"content":"    }"},{"lineNumber":119,"author":{"gitId":"clarlzx"},"content":""},{"lineNumber":120,"author":{"gitId":"clarlzx"},"content":"    /**"},{"lineNumber":121,"author":{"gitId":"clarlzx"},"content":"     * Converts string to KeywordKey constant. "},{"lineNumber":122,"author":{"gitId":"clarlzx"},"content":"     * "},{"lineNumber":123,"author":{"gitId":"clarlzx"},"content":"     * @param s String to be converted to KeywordKey constant."},{"lineNumber":124,"author":{"gitId":"clarlzx"},"content":"     * @return KeywordKey constant."},{"lineNumber":125,"author":{"gitId":"clarlzx"},"content":"     * @throws ChatException ChatException is thrown, if string does not represent any of the possible keywords."},{"lineNumber":126,"author":{"gitId":"clarlzx"},"content":"     */"},{"lineNumber":127,"author":{"gitId":"clarlzx"},"content":"    public KeywordKey getKeywordKey(String s) throws ChatException {"},{"lineNumber":128,"author":{"gitId":"clarlzx"},"content":"        KeywordKey keywordKey;"},{"lineNumber":129,"author":{"gitId":"clarlzx"},"content":"        switch (s) {"},{"lineNumber":130,"author":{"gitId":"clarlzx"},"content":"        case \"t\":"},{"lineNumber":131,"author":{"gitId":"clarlzx"},"content":"            keywordKey \u003d KeywordKey.TASK_TYPE;"},{"lineNumber":132,"author":{"gitId":"clarlzx"},"content":"            break;"},{"lineNumber":133,"author":{"gitId":"clarlzx"},"content":"        case \"n\":"},{"lineNumber":134,"author":{"gitId":"clarlzx"},"content":"            keywordKey \u003d KeywordKey.NAME;"},{"lineNumber":135,"author":{"gitId":"clarlzx"},"content":"            break;"},{"lineNumber":136,"author":{"gitId":"clarlzx"},"content":"        case \"c\":"},{"lineNumber":137,"author":{"gitId":"clarlzx"},"content":"            keywordKey \u003d KeywordKey.IS_COMPLETED;"},{"lineNumber":138,"author":{"gitId":"clarlzx"},"content":"            break;"},{"lineNumber":139,"author":{"gitId":"clarlzx"},"content":"        case \"d\":"},{"lineNumber":140,"author":{"gitId":"clarlzx"},"content":"            keywordKey \u003d KeywordKey.DATES;"},{"lineNumber":141,"author":{"gitId":"clarlzx"},"content":"            break;"},{"lineNumber":142,"author":{"gitId":"clarlzx"},"content":"        default:"},{"lineNumber":143,"author":{"gitId":"clarlzx"},"content":"            throw new ChatException(\"The keyword term \" + s + \"/ does not exist.\\n\");"},{"lineNumber":144,"author":{"gitId":"clarlzx"},"content":"        }"},{"lineNumber":145,"author":{"gitId":"clarlzx"},"content":"        return keywordKey;"},{"lineNumber":146,"author":{"gitId":"clarlzx"},"content":"    }"},{"lineNumber":147,"author":{"gitId":"clarlzx"},"content":""},{"lineNumber":148,"author":{"gitId":"clarlzx"},"content":"    /**"},{"lineNumber":149,"author":{"gitId":"clarlzx"},"content":"     * A method that checks if matching task to keywords is found."},{"lineNumber":150,"author":{"gitId":"clarlzx"},"content":"     * "},{"lineNumber":151,"author":{"gitId":"clarlzx"},"content":"     * @param task Task being checked."},{"lineNumber":152,"author":{"gitId":"clarlzx"},"content":"     * @param keywordMap HashMap containing keywords with KeywordKey keys."},{"lineNumber":153,"author":{"gitId":"clarlzx"},"content":"     * @return Boolean indicating if matching task is found."},{"lineNumber":154,"author":{"gitId":"clarlzx"},"content":"     */"},{"lineNumber":155,"author":{"gitId":"clarlzx"},"content":"    private boolean isFound(Task task, HashMap\u003cKeywordKey, String\u003e keywordMap) {"},{"lineNumber":156,"author":{"gitId":"clarlzx"},"content":"        "},{"lineNumber":157,"author":{"gitId":"clarlzx"},"content":"        for (KeywordKey key : keywordMap.keySet()) {"},{"lineNumber":158,"author":{"gitId":"clarlzx"},"content":"            switch (key) {"},{"lineNumber":159,"author":{"gitId":"clarlzx"},"content":"            case TASK_TYPE:"},{"lineNumber":160,"author":{"gitId":"clarlzx"},"content":"                if (!isMatchingTaskType(task, keywordMap.get(key))) {"},{"lineNumber":161,"author":{"gitId":"clarlzx"},"content":"                    return false;"},{"lineNumber":162,"author":{"gitId":"clarlzx"},"content":"                }"},{"lineNumber":163,"author":{"gitId":"clarlzx"},"content":"                break;"},{"lineNumber":164,"author":{"gitId":"clarlzx"},"content":"            case NAME:"},{"lineNumber":165,"author":{"gitId":"clarlzx"},"content":"                if (!isMatchingName(task, keywordMap.get(key))) {"},{"lineNumber":166,"author":{"gitId":"clarlzx"},"content":"                    return false;"},{"lineNumber":167,"author":{"gitId":"clarlzx"},"content":"                }"},{"lineNumber":168,"author":{"gitId":"clarlzx"},"content":"                break;"},{"lineNumber":169,"author":{"gitId":"clarlzx"},"content":"            case IS_COMPLETED:"},{"lineNumber":170,"author":{"gitId":"clarlzx"},"content":"                if (!isMatchingDoneStatus(task, keywordMap.get(key))) {"},{"lineNumber":171,"author":{"gitId":"clarlzx"},"content":"                    return false;"},{"lineNumber":172,"author":{"gitId":"clarlzx"},"content":"                }"},{"lineNumber":173,"author":{"gitId":"clarlzx"},"content":"                break;"},{"lineNumber":174,"author":{"gitId":"clarlzx"},"content":"            case DATES:"},{"lineNumber":175,"author":{"gitId":"clarlzx"},"content":"                if (!isMatchingDates(task, keywordMap.get(key))) {"},{"lineNumber":176,"author":{"gitId":"clarlzx"},"content":"                    return false;"},{"lineNumber":177,"author":{"gitId":"clarlzx"},"content":"                }"},{"lineNumber":178,"author":{"gitId":"clarlzx"},"content":"                break;"},{"lineNumber":179,"author":{"gitId":"clarlzx"},"content":"            }"},{"lineNumber":180,"author":{"gitId":"clarlzx"},"content":"        }"},{"lineNumber":181,"author":{"gitId":"clarlzx"},"content":"        return true;"},{"lineNumber":182,"author":{"gitId":"clarlzx"},"content":"    }"},{"lineNumber":183,"author":{"gitId":"clarlzx"},"content":"    "},{"lineNumber":184,"author":{"gitId":"clarlzx"},"content":"    private static boolean isMatchingTaskType(Task task, String taskType) {"},{"lineNumber":185,"author":{"gitId":"clarlzx"},"content":"        if (!taskType.isEmpty()) {"},{"lineNumber":186,"author":{"gitId":"clarlzx"},"content":"            if (!Character.toString(task.allParameterStr().charAt(0)).equals(taskType)) {"},{"lineNumber":187,"author":{"gitId":"clarlzx"},"content":"                return false;"},{"lineNumber":188,"author":{"gitId":"clarlzx"},"content":"            }"},{"lineNumber":189,"author":{"gitId":"clarlzx"},"content":"        }"},{"lineNumber":190,"author":{"gitId":"clarlzx"},"content":"        return true;"},{"lineNumber":191,"author":{"gitId":"clarlzx"},"content":"    }"},{"lineNumber":192,"author":{"gitId":"clarlzx"},"content":"    "},{"lineNumber":193,"author":{"gitId":"clarlzx"},"content":"    private static boolean isMatchingName(Task task, String name) {"},{"lineNumber":194,"author":{"gitId":"clarlzx"},"content":"        if (!task.getName().contains(name)) {"},{"lineNumber":195,"author":{"gitId":"clarlzx"},"content":"            return false;"},{"lineNumber":196,"author":{"gitId":"clarlzx"},"content":"        }"},{"lineNumber":197,"author":{"gitId":"clarlzx"},"content":"        return true;"},{"lineNumber":198,"author":{"gitId":"clarlzx"},"content":"    }"},{"lineNumber":199,"author":{"gitId":"clarlzx"},"content":"    "},{"lineNumber":200,"author":{"gitId":"clarlzx"},"content":"    private static boolean isMatchingDoneStatus(Task task, String doneStatusStr) {"},{"lineNumber":201,"author":{"gitId":"clarlzx"},"content":"        if (doneStatusStr !\u003d \"\") {"},{"lineNumber":202,"author":{"gitId":"clarlzx"},"content":"            if (doneStatusStr.equals(\"T\") \u0026\u0026 !task.getIsDone()) {"},{"lineNumber":203,"author":{"gitId":"clarlzx"},"content":"                return false;"},{"lineNumber":204,"author":{"gitId":"clarlzx"},"content":"            } else if (doneStatusStr.equals(\"F\") \u0026\u0026 task.getIsDone()) {"},{"lineNumber":205,"author":{"gitId":"clarlzx"},"content":"                return false;"},{"lineNumber":206,"author":{"gitId":"clarlzx"},"content":"            }"},{"lineNumber":207,"author":{"gitId":"clarlzx"},"content":"        }"},{"lineNumber":208,"author":{"gitId":"clarlzx"},"content":"        return true;"},{"lineNumber":209,"author":{"gitId":"clarlzx"},"content":"    }"},{"lineNumber":210,"author":{"gitId":"clarlzx"},"content":"    "},{"lineNumber":211,"author":{"gitId":"clarlzx"},"content":"    private static boolean isMatchingDates(Task task, String dateStr) {"},{"lineNumber":212,"author":{"gitId":"clarlzx"},"content":"        String[] dates \u003d dateStr.split(\",\");"},{"lineNumber":213,"author":{"gitId":"clarlzx"},"content":"        for (String date : dates) {"},{"lineNumber":214,"author":{"gitId":"clarlzx"},"content":"            if (!task.toString().contains(date.strip())) {"},{"lineNumber":215,"author":{"gitId":"clarlzx"},"content":"                return false;"},{"lineNumber":216,"author":{"gitId":"clarlzx"},"content":"            }"},{"lineNumber":217,"author":{"gitId":"clarlzx"},"content":"        }"},{"lineNumber":218,"author":{"gitId":"clarlzx"},"content":"        return true;"},{"lineNumber":219,"author":{"gitId":"clarlzx"},"content":"    }"},{"lineNumber":220,"author":{"gitId":"clarlzx"},"content":"    "},{"lineNumber":221,"author":{"gitId":"clarlzx"},"content":"}"}],"authorContributionMap":{"clarlzx":221}},{"path":"src/main/java/chat/command/ListCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"clarlzx"},"content":"package chat.command;"},{"lineNumber":2,"author":{"gitId":"clarlzx"},"content":""},{"lineNumber":3,"author":{"gitId":"clarlzx"},"content":"import chat.TaskList;"},{"lineNumber":4,"author":{"gitId":"clarlzx"},"content":"import chat.Storage;"},{"lineNumber":5,"author":{"gitId":"clarlzx"},"content":"import chat.Ui;"},{"lineNumber":6,"author":{"gitId":"clarlzx"},"content":""},{"lineNumber":7,"author":{"gitId":"clarlzx"},"content":"/**"},{"lineNumber":8,"author":{"gitId":"clarlzx"},"content":" * A type of command that shows the user all tasks in list of tasks"},{"lineNumber":9,"author":{"gitId":"clarlzx"},"content":" * from TaskList object."},{"lineNumber":10,"author":{"gitId":"clarlzx"},"content":" */"},{"lineNumber":11,"author":{"gitId":"clarlzx"},"content":""},{"lineNumber":12,"author":{"gitId":"clarlzx"},"content":"public class ListCommand extends Command {"},{"lineNumber":13,"author":{"gitId":"clarlzx"},"content":""},{"lineNumber":14,"author":{"gitId":"clarlzx"},"content":"    /**"},{"lineNumber":15,"author":{"gitId":"clarlzx"},"content":"     * Method that lists all tasks and their details from list of tasks from TaskList object"},{"lineNumber":16,"author":{"gitId":"clarlzx"},"content":"     * @param taskList TaskList object that contains a list of tasks."},{"lineNumber":17,"author":{"gitId":"clarlzx"},"content":"     * @param ui Ui object that gives responses to user."},{"lineNumber":18,"author":{"gitId":"clarlzx"},"content":"     * @param storage Storage object that interacts with task data in hard disk."},{"lineNumber":19,"author":{"gitId":"clarlzx"},"content":"     */"},{"lineNumber":20,"author":{"gitId":"clarlzx"},"content":"    public void execute(TaskList taskList, Ui ui, Storage storage) {"},{"lineNumber":21,"author":{"gitId":"clarlzx"},"content":"        assert taskList !\u003d null;"},{"lineNumber":22,"author":{"gitId":"clarlzx"},"content":"        ui.list(taskList);"},{"lineNumber":23,"author":{"gitId":"clarlzx"},"content":"    }"},{"lineNumber":24,"author":{"gitId":"clarlzx"},"content":"    "},{"lineNumber":25,"author":{"gitId":"clarlzx"},"content":"}"}],"authorContributionMap":{"clarlzx":25}},{"path":"src/main/java/chat/task/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"clarlzx"},"content":"package chat.task;"},{"lineNumber":2,"author":{"gitId":"clarlzx"},"content":""},{"lineNumber":3,"author":{"gitId":"clarlzx"},"content":"import java.time.LocalDateTime;"},{"lineNumber":4,"author":{"gitId":"clarlzx"},"content":"import java.time.format.DateTimeFormatter;"},{"lineNumber":5,"author":{"gitId":"clarlzx"},"content":"import java.time.format.DateTimeParseException;"},{"lineNumber":6,"author":{"gitId":"clarlzx"},"content":""},{"lineNumber":7,"author":{"gitId":"clarlzx"},"content":"import chat.ChatException;"},{"lineNumber":8,"author":{"gitId":"clarlzx"},"content":""},{"lineNumber":9,"author":{"gitId":"clarlzx"},"content":"/**"},{"lineNumber":10,"author":{"gitId":"clarlzx"},"content":" * Deadline is a type of \u003cb\u003etask\u003c/b\u003e with an \u003cb\u003eend\u003c/b\u003e date and time."},{"lineNumber":11,"author":{"gitId":"clarlzx"},"content":" */"},{"lineNumber":12,"author":{"gitId":"clarlzx"},"content":"public class Deadline extends Task {"},{"lineNumber":13,"author":{"gitId":"clarlzx"},"content":""},{"lineNumber":14,"author":{"gitId":"clarlzx"},"content":"    private LocalDateTime end;"},{"lineNumber":15,"author":{"gitId":"clarlzx"},"content":"    private static DateTimeFormatter inputFormatter \u003d DateTimeFormatter.ofPattern(\"dd/MM/yyyy HH:mm\");"},{"lineNumber":16,"author":{"gitId":"clarlzx"},"content":"    private static DateTimeFormatter displayFormatter \u003d DateTimeFormatter.ofPattern(\"d MMM yyyy, h:mma\");"},{"lineNumber":17,"author":{"gitId":"clarlzx"},"content":""},{"lineNumber":18,"author":{"gitId":"clarlzx"},"content":"    /**"},{"lineNumber":19,"author":{"gitId":"clarlzx"},"content":"     * Initialises Deadline object."},{"lineNumber":20,"author":{"gitId":"clarlzx"},"content":"     * \u003cp\u003eBoolean isDone has been set to false by default.\u003c/p\u003e"},{"lineNumber":21,"author":{"gitId":"clarlzx"},"content":"     * "},{"lineNumber":22,"author":{"gitId":"clarlzx"},"content":"     * @param name Name or description of the task."},{"lineNumber":23,"author":{"gitId":"clarlzx"},"content":"     * @param end End date and time of the task."},{"lineNumber":24,"author":{"gitId":"clarlzx"},"content":"     */"},{"lineNumber":25,"author":{"gitId":"clarlzx"},"content":"    private Deadline (String name, LocalDateTime end) {"},{"lineNumber":26,"author":{"gitId":"clarlzx"},"content":"        super(name);"},{"lineNumber":27,"author":{"gitId":"clarlzx"},"content":"        "},{"lineNumber":28,"author":{"gitId":"clarlzx"},"content":"        assert end !\u003d null;"},{"lineNumber":29,"author":{"gitId":"clarlzx"},"content":"        this.end \u003d end;"},{"lineNumber":30,"author":{"gitId":"clarlzx"},"content":"    }"},{"lineNumber":31,"author":{"gitId":"clarlzx"},"content":""},{"lineNumber":32,"author":{"gitId":"clarlzx"},"content":"    /**"},{"lineNumber":33,"author":{"gitId":"clarlzx"},"content":"     * Initialises Deadline object."},{"lineNumber":34,"author":{"gitId":"clarlzx"},"content":"     * "},{"lineNumber":35,"author":{"gitId":"clarlzx"},"content":"     * @param isDone Boolean that tells if task is completed."},{"lineNumber":36,"author":{"gitId":"clarlzx"},"content":"     * @param name Name or description of the task."},{"lineNumber":37,"author":{"gitId":"clarlzx"},"content":"     * @param end End date and time of the task."},{"lineNumber":38,"author":{"gitId":"clarlzx"},"content":"     */"},{"lineNumber":39,"author":{"gitId":"clarlzx"},"content":"    public Deadline (boolean isDone, String name, String end) { "},{"lineNumber":40,"author":{"gitId":"clarlzx"},"content":"        super(isDone, name);"},{"lineNumber":41,"author":{"gitId":"clarlzx"},"content":"        "},{"lineNumber":42,"author":{"gitId":"clarlzx"},"content":"        assert end !\u003d null;"},{"lineNumber":43,"author":{"gitId":"clarlzx"},"content":"        this.end \u003d LocalDateTime.parse(end, inputFormatter);"},{"lineNumber":44,"author":{"gitId":"clarlzx"},"content":"    }"},{"lineNumber":45,"author":{"gitId":"clarlzx"},"content":""},{"lineNumber":46,"author":{"gitId":"clarlzx"},"content":"    /**"},{"lineNumber":47,"author":{"gitId":"clarlzx"},"content":"     * Static method that creates a Deadline object."},{"lineNumber":48,"author":{"gitId":"clarlzx"},"content":"     * "},{"lineNumber":49,"author":{"gitId":"clarlzx"},"content":"     * @param str Inputted command string from user to Chat the Cat."},{"lineNumber":50,"author":{"gitId":"clarlzx"},"content":"     * @return Deadline object. "},{"lineNumber":51,"author":{"gitId":"clarlzx"},"content":"     * @throws ChatException If format of command is wrong."},{"lineNumber":52,"author":{"gitId":"clarlzx"},"content":"     */"},{"lineNumber":53,"author":{"gitId":"clarlzx"},"content":"    public static Deadline createDeadline (String str) throws ChatException {"},{"lineNumber":54,"author":{"gitId":"clarlzx"},"content":"        assert str !\u003d \"\"; "},{"lineNumber":55,"author":{"gitId":"clarlzx"},"content":""},{"lineNumber":56,"author":{"gitId":"clarlzx"},"content":"        String formatStr \u003d \"Please input with this format:\\n\" +"},{"lineNumber":57,"author":{"gitId":"clarlzx"},"content":"                \"deadline [name] /by [end date/time]\\n\" +"},{"lineNumber":58,"author":{"gitId":"clarlzx"},"content":"                \"* end date/time should be written as dd/MM/yyyy HH:mm\\n\" +"},{"lineNumber":59,"author":{"gitId":"clarlzx"},"content":"                \"* i.e. 19/03/2019 23:55\";"},{"lineNumber":60,"author":{"gitId":"clarlzx"},"content":"        "},{"lineNumber":61,"author":{"gitId":"clarlzx"},"content":"        try {"},{"lineNumber":62,"author":{"gitId":"clarlzx"},"content":"            checkWrongCommand(str);"},{"lineNumber":63,"author":{"gitId":"clarlzx"},"content":"            checkAllParametersIsMissing(str);"},{"lineNumber":64,"author":{"gitId":"clarlzx"},"content":"            checkNoSpaceBetweenDeadlineAndName(str);"},{"lineNumber":65,"author":{"gitId":"clarlzx"},"content":"            "},{"lineNumber":66,"author":{"gitId":"clarlzx"},"content":"            String parameterStr \u003d str.replace(\"deadline \", \"\").stripLeading();"},{"lineNumber":67,"author":{"gitId":"clarlzx"},"content":"            checkNoName(parameterStr);"},{"lineNumber":68,"author":{"gitId":"clarlzx"},"content":"            checkNoBy(parameterStr);"},{"lineNumber":69,"author":{"gitId":"clarlzx"},"content":"            checkNoSpaceAroundBy(parameterStr);"},{"lineNumber":70,"author":{"gitId":"clarlzx"},"content":"            "},{"lineNumber":71,"author":{"gitId":"clarlzx"},"content":"            String[] parameters \u003d str.split(\" /by \");"},{"lineNumber":72,"author":{"gitId":"clarlzx"},"content":"            checkNoEnd(parameters);"},{"lineNumber":73,"author":{"gitId":"clarlzx"},"content":"            checkDuplicateBy(parameters);"},{"lineNumber":74,"author":{"gitId":"clarlzx"},"content":"            "},{"lineNumber":75,"author":{"gitId":"clarlzx"},"content":"            LocalDateTime end \u003d parseEndDateTime(parameters);"},{"lineNumber":76,"author":{"gitId":"clarlzx"},"content":"            return new Deadline(parameters[0].strip(), end);"},{"lineNumber":77,"author":{"gitId":"clarlzx"},"content":"        } catch (ChatException e) {"},{"lineNumber":78,"author":{"gitId":"clarlzx"},"content":"            throw new ChatException(e.getMessage() + formatStr);"},{"lineNumber":79,"author":{"gitId":"clarlzx"},"content":"        }"},{"lineNumber":80,"author":{"gitId":"clarlzx"},"content":"    }"},{"lineNumber":81,"author":{"gitId":"clarlzx"},"content":"    "},{"lineNumber":82,"author":{"gitId":"clarlzx"},"content":"    private static void checkWrongCommand(String str) throws ChatException {"},{"lineNumber":83,"author":{"gitId":"clarlzx"},"content":"        if (!str.startsWith(\"deadline\")) {"},{"lineNumber":84,"author":{"gitId":"clarlzx"},"content":"            //i.e. event"},{"lineNumber":85,"author":{"gitId":"clarlzx"},"content":"            throw new ChatException(\"wrong instruction for deadline\\n\");"},{"lineNumber":86,"author":{"gitId":"clarlzx"},"content":"        }"},{"lineNumber":87,"author":{"gitId":"clarlzx"},"content":"    }"},{"lineNumber":88,"author":{"gitId":"clarlzx"},"content":""},{"lineNumber":89,"author":{"gitId":"clarlzx"},"content":"    private static void checkAllParametersIsMissing(String str) throws ChatException {"},{"lineNumber":90,"author":{"gitId":"clarlzx"},"content":"        if (str.strip().equals(\"deadline\")) {"},{"lineNumber":91,"author":{"gitId":"clarlzx"},"content":"            //i.e. deadline"},{"lineNumber":92,"author":{"gitId":"clarlzx"},"content":"            //i.e. deadline(followed by one or more empty spaces)"},{"lineNumber":93,"author":{"gitId":"clarlzx"},"content":"            throw new ChatException(\"deadline name and end date/time missing\\n\");"},{"lineNumber":94,"author":{"gitId":"clarlzx"},"content":"        }"},{"lineNumber":95,"author":{"gitId":"clarlzx"},"content":"    }"},{"lineNumber":96,"author":{"gitId":"clarlzx"},"content":""},{"lineNumber":97,"author":{"gitId":"clarlzx"},"content":"    private static void checkNoSpaceBetweenDeadlineAndName(String str) throws ChatException {"},{"lineNumber":98,"author":{"gitId":"clarlzx"},"content":"        if (!str.startsWith(\"deadline \")) {"},{"lineNumber":99,"author":{"gitId":"clarlzx"},"content":"            //i.e. deadlinereturn book"},{"lineNumber":100,"author":{"gitId":"clarlzx"},"content":"            throw new ChatException(\"no spacing after deadline\\n\");"},{"lineNumber":101,"author":{"gitId":"clarlzx"},"content":"        }"},{"lineNumber":102,"author":{"gitId":"clarlzx"},"content":"    }"},{"lineNumber":103,"author":{"gitId":"clarlzx"},"content":"    "},{"lineNumber":104,"author":{"gitId":"clarlzx"},"content":"    private static void checkNoName(String parameterStr) throws ChatException {"},{"lineNumber":105,"author":{"gitId":"clarlzx"},"content":"        if (parameterStr.startsWith(\"/by\")) {"},{"lineNumber":106,"author":{"gitId":"clarlzx"},"content":"            //i.e. deadline /by"},{"lineNumber":107,"author":{"gitId":"clarlzx"},"content":"            //i.e. deadline /by night"},{"lineNumber":108,"author":{"gitId":"clarlzx"},"content":"            throw new ChatException(\"deadline name missing\\n\");"},{"lineNumber":109,"author":{"gitId":"clarlzx"},"content":"        }"},{"lineNumber":110,"author":{"gitId":"clarlzx"},"content":"    }"},{"lineNumber":111,"author":{"gitId":"clarlzx"},"content":""},{"lineNumber":112,"author":{"gitId":"clarlzx"},"content":"    private static void checkNoBy(String parameterStr) throws ChatException {"},{"lineNumber":113,"author":{"gitId":"clarlzx"},"content":"        if (!parameterStr.contains(\"/by\")) {"},{"lineNumber":114,"author":{"gitId":"clarlzx"},"content":"            //i.e. deadline return book"},{"lineNumber":115,"author":{"gitId":"clarlzx"},"content":"            //i.e. deadline return book tmr"},{"lineNumber":116,"author":{"gitId":"clarlzx"},"content":"            throw new ChatException(\"/by missing\\n\");"},{"lineNumber":117,"author":{"gitId":"clarlzx"},"content":"        }"},{"lineNumber":118,"author":{"gitId":"clarlzx"},"content":"    }"},{"lineNumber":119,"author":{"gitId":"clarlzx"},"content":"    "},{"lineNumber":120,"author":{"gitId":"clarlzx"},"content":"    private static void checkNoSpaceAroundBy(String parameterStr) throws ChatException {"},{"lineNumber":121,"author":{"gitId":"clarlzx"},"content":"        if (!parameterStr.contains(\" /by \")) {"},{"lineNumber":122,"author":{"gitId":"clarlzx"},"content":"            //i.e. deadline return book/by"},{"lineNumber":123,"author":{"gitId":"clarlzx"},"content":"            //i.e. deadline return book/by tmr"},{"lineNumber":124,"author":{"gitId":"clarlzx"},"content":"            //i.e. deadline return book /bytmr"},{"lineNumber":125,"author":{"gitId":"clarlzx"},"content":"            //i.e. deadline return book/bytmr"},{"lineNumber":126,"author":{"gitId":"clarlzx"},"content":"            throw new ChatException(\"missing spaces before or after /by\\n\");"},{"lineNumber":127,"author":{"gitId":"clarlzx"},"content":"        }"},{"lineNumber":128,"author":{"gitId":"clarlzx"},"content":"    }"},{"lineNumber":129,"author":{"gitId":"clarlzx"},"content":"    "},{"lineNumber":130,"author":{"gitId":"clarlzx"},"content":"    private static void checkNoEnd(String[] parameters) throws ChatException {"},{"lineNumber":131,"author":{"gitId":"clarlzx"},"content":"        if (parameters.length \u003c 2) {"},{"lineNumber":132,"author":{"gitId":"clarlzx"},"content":"            //i.e. deadline return book /by"},{"lineNumber":133,"author":{"gitId":"clarlzx"},"content":"            throw new ChatException(\"missing end date/time\\n\");"},{"lineNumber":134,"author":{"gitId":"clarlzx"},"content":"        }"},{"lineNumber":135,"author":{"gitId":"clarlzx"},"content":"    }"},{"lineNumber":136,"author":{"gitId":"clarlzx"},"content":"    "},{"lineNumber":137,"author":{"gitId":"clarlzx"},"content":"    private static void checkDuplicateBy(String[] parameters) throws ChatException{"},{"lineNumber":138,"author":{"gitId":"clarlzx"},"content":"        if (parameters.length \u003e 2 || parameters[1].contains(\"/by\")) {"},{"lineNumber":139,"author":{"gitId":"clarlzx"},"content":"            //i.e. deadline return book /by /by night"},{"lineNumber":140,"author":{"gitId":"clarlzx"},"content":"            throw new ChatException(\"not allowed to have more than 1 \u0027 /by \u0027\\n\");"},{"lineNumber":141,"author":{"gitId":"clarlzx"},"content":"        }"},{"lineNumber":142,"author":{"gitId":"clarlzx"},"content":"    }"},{"lineNumber":143,"author":{"gitId":"clarlzx"},"content":"    "},{"lineNumber":144,"author":{"gitId":"clarlzx"},"content":"    private static LocalDateTime parseEndDateTime(String[] parameters) throws ChatException {"},{"lineNumber":145,"author":{"gitId":"clarlzx"},"content":"        try {"},{"lineNumber":146,"author":{"gitId":"clarlzx"},"content":"            String endStr \u003d parameters[1].strip();"},{"lineNumber":147,"author":{"gitId":"clarlzx"},"content":"            LocalDateTime endDateTime \u003d LocalDateTime.parse(endStr, inputFormatter);"},{"lineNumber":148,"author":{"gitId":"clarlzx"},"content":"            return endDateTime;"},{"lineNumber":149,"author":{"gitId":"clarlzx"},"content":"        } catch (DateTimeParseException e) {"},{"lineNumber":150,"author":{"gitId":"clarlzx"},"content":"            throw new ChatException(\"End date/time is of wrong format\\n\");"},{"lineNumber":151,"author":{"gitId":"clarlzx"},"content":"        }"},{"lineNumber":152,"author":{"gitId":"clarlzx"},"content":"    }"},{"lineNumber":153,"author":{"gitId":"clarlzx"},"content":""},{"lineNumber":154,"author":{"gitId":"clarlzx"},"content":"    /**"},{"lineNumber":155,"author":{"gitId":"clarlzx"},"content":"     * Returns the end date and time of the task."},{"lineNumber":156,"author":{"gitId":"clarlzx"},"content":"     * "},{"lineNumber":157,"author":{"gitId":"clarlzx"},"content":"     * @return End date and time of the task."},{"lineNumber":158,"author":{"gitId":"clarlzx"},"content":"     */"},{"lineNumber":159,"author":{"gitId":"clarlzx"},"content":"    public LocalDateTime getEnd() {"},{"lineNumber":160,"author":{"gitId":"clarlzx"},"content":"        return this.end;"},{"lineNumber":161,"author":{"gitId":"clarlzx"},"content":"    }"},{"lineNumber":162,"author":{"gitId":"clarlzx"},"content":""},{"lineNumber":163,"author":{"gitId":"clarlzx"},"content":"    /**"},{"lineNumber":164,"author":{"gitId":"clarlzx"},"content":"     * Returns a comma separated string of all parameters."},{"lineNumber":165,"author":{"gitId":"clarlzx"},"content":"     *"},{"lineNumber":166,"author":{"gitId":"clarlzx"},"content":"     * @return Comma separated string with all parameters listed out."},{"lineNumber":167,"author":{"gitId":"clarlzx"},"content":"     */"},{"lineNumber":168,"author":{"gitId":"clarlzx"},"content":"    public String allParameterStr() {"},{"lineNumber":169,"author":{"gitId":"clarlzx"},"content":"        return String.format(\"D,%s,%s,%s\", this.getIsDone(), this.getName(), this.getEnd().format(inputFormatter));"},{"lineNumber":170,"author":{"gitId":"clarlzx"},"content":"    }"},{"lineNumber":171,"author":{"gitId":"clarlzx"},"content":""},{"lineNumber":172,"author":{"gitId":"clarlzx"},"content":"    /**"},{"lineNumber":173,"author":{"gitId":"clarlzx"},"content":"     * Returns a string that shows the details of the task."},{"lineNumber":174,"author":{"gitId":"clarlzx"},"content":"     * \u003cp\u003e[ ] will be displayed if isDone \u003d false.\u003c/p\u003e"},{"lineNumber":175,"author":{"gitId":"clarlzx"},"content":"     * \u003cp\u003e[X] will be displayed if isDone \u003d true.\u003c/p\u003e"},{"lineNumber":176,"author":{"gitId":"clarlzx"},"content":"     *"},{"lineNumber":177,"author":{"gitId":"clarlzx"},"content":"     * @return String showing details of task, i.e. [D][ ] name (by: end)."},{"lineNumber":178,"author":{"gitId":"clarlzx"},"content":"     */"},{"lineNumber":179,"author":{"gitId":"clarlzx"},"content":"    @Override"},{"lineNumber":180,"author":{"gitId":"clarlzx"},"content":"    public String toString() {"},{"lineNumber":181,"author":{"gitId":"clarlzx"},"content":"        return String.format(\"[D]%s (by: %s)\", super.toString(), this.getEnd().format(displayFormatter));"},{"lineNumber":182,"author":{"gitId":"clarlzx"},"content":"    }"},{"lineNumber":183,"author":{"gitId":"clarlzx"},"content":""},{"lineNumber":184,"author":{"gitId":"clarlzx"},"content":"}"}],"authorContributionMap":{"clarlzx":184}},{"path":"src/main/java/chat/task/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"clarlzx"},"content":"package chat.task;"},{"lineNumber":2,"author":{"gitId":"clarlzx"},"content":""},{"lineNumber":3,"author":{"gitId":"clarlzx"},"content":"import java.time.LocalDateTime;"},{"lineNumber":4,"author":{"gitId":"clarlzx"},"content":"import java.time.format.DateTimeFormatter;"},{"lineNumber":5,"author":{"gitId":"clarlzx"},"content":"import java.time.format.DateTimeParseException;"},{"lineNumber":6,"author":{"gitId":"clarlzx"},"content":"import java.util.Arrays;"},{"lineNumber":7,"author":{"gitId":"clarlzx"},"content":""},{"lineNumber":8,"author":{"gitId":"clarlzx"},"content":"import chat.Chat;"},{"lineNumber":9,"author":{"gitId":"clarlzx"},"content":"import chat.ChatException;"},{"lineNumber":10,"author":{"gitId":"clarlzx"},"content":""},{"lineNumber":11,"author":{"gitId":"clarlzx"},"content":"/**"},{"lineNumber":12,"author":{"gitId":"clarlzx"},"content":" * Event is a type of \u003cb\u003etask\u003c/b\u003e with a \u003cb\u003estart\u003c/b\u003e and \u003cb\u003eend\u003c/b\u003e date and time."},{"lineNumber":13,"author":{"gitId":"clarlzx"},"content":" */"},{"lineNumber":14,"author":{"gitId":"clarlzx"},"content":"public class Event extends Task {"},{"lineNumber":15,"author":{"gitId":"clarlzx"},"content":""},{"lineNumber":16,"author":{"gitId":"clarlzx"},"content":"    private LocalDateTime start;"},{"lineNumber":17,"author":{"gitId":"clarlzx"},"content":"    private LocalDateTime end;"},{"lineNumber":18,"author":{"gitId":"clarlzx"},"content":"    private static DateTimeFormatter inputFormatter \u003d DateTimeFormatter.ofPattern(\"dd/MM/yyyy HH:mm\");"},{"lineNumber":19,"author":{"gitId":"clarlzx"},"content":"    private static DateTimeFormatter displayFormatter \u003d DateTimeFormatter.ofPattern(\"d MMM yyyy, h:mma\");"},{"lineNumber":20,"author":{"gitId":"clarlzx"},"content":""},{"lineNumber":21,"author":{"gitId":"clarlzx"},"content":"    /**"},{"lineNumber":22,"author":{"gitId":"clarlzx"},"content":"     * Initialises Event object."},{"lineNumber":23,"author":{"gitId":"clarlzx"},"content":"     * \u003cp\u003eBoolean isDone has been set to false by default.\u003c/p\u003e"},{"lineNumber":24,"author":{"gitId":"clarlzx"},"content":"     * "},{"lineNumber":25,"author":{"gitId":"clarlzx"},"content":"     * @param name Name or description of the task."},{"lineNumber":26,"author":{"gitId":"clarlzx"},"content":"     * @param start Start date and time of the task."},{"lineNumber":27,"author":{"gitId":"clarlzx"},"content":"     * @param end End date and time of the task."},{"lineNumber":28,"author":{"gitId":"clarlzx"},"content":"     */"},{"lineNumber":29,"author":{"gitId":"clarlzx"},"content":"    private Event (String name, LocalDateTime start, LocalDateTime end) {"},{"lineNumber":30,"author":{"gitId":"clarlzx"},"content":"        super(name);"},{"lineNumber":31,"author":{"gitId":"clarlzx"},"content":"        "},{"lineNumber":32,"author":{"gitId":"clarlzx"},"content":"        assert start !\u003d null; "},{"lineNumber":33,"author":{"gitId":"clarlzx"},"content":"        assert end !\u003d null;"},{"lineNumber":34,"author":{"gitId":"clarlzx"},"content":"        this.start \u003d start;"},{"lineNumber":35,"author":{"gitId":"clarlzx"},"content":"        this.end \u003d end;"},{"lineNumber":36,"author":{"gitId":"clarlzx"},"content":"    }"},{"lineNumber":37,"author":{"gitId":"clarlzx"},"content":""},{"lineNumber":38,"author":{"gitId":"clarlzx"},"content":"    /**"},{"lineNumber":39,"author":{"gitId":"clarlzx"},"content":"     * Initialises Event object."},{"lineNumber":40,"author":{"gitId":"clarlzx"},"content":"     * "},{"lineNumber":41,"author":{"gitId":"clarlzx"},"content":"     * @param isDone Boolean that tells if task is completed."},{"lineNumber":42,"author":{"gitId":"clarlzx"},"content":"     * @param name Name or description of the task."},{"lineNumber":43,"author":{"gitId":"clarlzx"},"content":"     * @param start Start date and time of the task."},{"lineNumber":44,"author":{"gitId":"clarlzx"},"content":"     * @param end End date and time of the task."},{"lineNumber":45,"author":{"gitId":"clarlzx"},"content":"     */"},{"lineNumber":46,"author":{"gitId":"clarlzx"},"content":"    public Event (boolean isDone, String name, String start, String end) { "},{"lineNumber":47,"author":{"gitId":"clarlzx"},"content":"        super(isDone, name);"},{"lineNumber":48,"author":{"gitId":"clarlzx"},"content":""},{"lineNumber":49,"author":{"gitId":"clarlzx"},"content":"        assert start !\u003d null;"},{"lineNumber":50,"author":{"gitId":"clarlzx"},"content":"        assert end !\u003d null;"},{"lineNumber":51,"author":{"gitId":"clarlzx"},"content":"        this.start \u003d LocalDateTime.parse(start, inputFormatter);"},{"lineNumber":52,"author":{"gitId":"clarlzx"},"content":"        this.end \u003d LocalDateTime.parse(end, inputFormatter);"},{"lineNumber":53,"author":{"gitId":"clarlzx"},"content":"    }"},{"lineNumber":54,"author":{"gitId":"clarlzx"},"content":""},{"lineNumber":55,"author":{"gitId":"clarlzx"},"content":"    /**"},{"lineNumber":56,"author":{"gitId":"clarlzx"},"content":"     * Static method that creates an Event object."},{"lineNumber":57,"author":{"gitId":"clarlzx"},"content":"     * "},{"lineNumber":58,"author":{"gitId":"clarlzx"},"content":"     * @param str Inputted command string from user to Chat the Cat."},{"lineNumber":59,"author":{"gitId":"clarlzx"},"content":"     * @return Event object."},{"lineNumber":60,"author":{"gitId":"clarlzx"},"content":"     * @throws ChatException If format of command is wrong."},{"lineNumber":61,"author":{"gitId":"clarlzx"},"content":"     */"},{"lineNumber":62,"author":{"gitId":"clarlzx"},"content":"    public static Event createEvent (String str) throws ChatException {"},{"lineNumber":63,"author":{"gitId":"clarlzx"},"content":"        assert str !\u003d \"\";"},{"lineNumber":64,"author":{"gitId":"clarlzx"},"content":"        "},{"lineNumber":65,"author":{"gitId":"clarlzx"},"content":"        String formatStr \u003d \"Please input with this format:\\n\" +"},{"lineNumber":66,"author":{"gitId":"clarlzx"},"content":"                \"event [name] /at [end date/time]-[start date/time]\\n\" +"},{"lineNumber":67,"author":{"gitId":"clarlzx"},"content":"                \"* start and end date/time should be written as dd/MM/yyyy HH:mm\\n\" +"},{"lineNumber":68,"author":{"gitId":"clarlzx"},"content":"                \"* i.e. 2019/03/19 22:00-2019/03/19 23:00\\n\" +"},{"lineNumber":69,"author":{"gitId":"clarlzx"},"content":"                \"* i.e. 2019/03/19 22:00 - 2019/03/19 23:00\";"},{"lineNumber":70,"author":{"gitId":"clarlzx"},"content":"        "},{"lineNumber":71,"author":{"gitId":"clarlzx"},"content":"        try {"},{"lineNumber":72,"author":{"gitId":"clarlzx"},"content":"            checkWrongCommand(str);"},{"lineNumber":73,"author":{"gitId":"clarlzx"},"content":"            checkAllParametersIsMissing(str);"},{"lineNumber":74,"author":{"gitId":"clarlzx"},"content":"            checkNoSpaceBetweenEventAndName(str);"},{"lineNumber":75,"author":{"gitId":"clarlzx"},"content":"            "},{"lineNumber":76,"author":{"gitId":"clarlzx"},"content":"            String parameterStr \u003d str.replace(\"event \", \"\").stripLeading();"},{"lineNumber":77,"author":{"gitId":"clarlzx"},"content":"            checkNoName(parameterStr);"},{"lineNumber":78,"author":{"gitId":"clarlzx"},"content":"            checkNoAt(parameterStr);"},{"lineNumber":79,"author":{"gitId":"clarlzx"},"content":"            checkNoSpaceAroundAt(parameterStr);"},{"lineNumber":80,"author":{"gitId":"clarlzx"},"content":"            "},{"lineNumber":81,"author":{"gitId":"clarlzx"},"content":"            String[] parameters \u003d parameterStr.split(\" /at \");"},{"lineNumber":82,"author":{"gitId":"clarlzx"},"content":"            checkNoStartAndEndDateTime(parameters);"},{"lineNumber":83,"author":{"gitId":"clarlzx"},"content":"            checkDuplicateAt(parameters);"},{"lineNumber":84,"author":{"gitId":"clarlzx"},"content":"            checkForMinusSign(parameters);"},{"lineNumber":85,"author":{"gitId":"clarlzx"},"content":"            "},{"lineNumber":86,"author":{"gitId":"clarlzx"},"content":"            String[] dateTimeStrings \u003d parameters[1].strip().split(\"-\");"},{"lineNumber":87,"author":{"gitId":"clarlzx"},"content":"            checkForMissingStartOrEndDateTime(dateTimeStrings);"},{"lineNumber":88,"author":{"gitId":"clarlzx"},"content":"            "},{"lineNumber":89,"author":{"gitId":"clarlzx"},"content":"            LocalDateTime[] dateTimes \u003d parseStartAndEndDateTime(dateTimeStrings);"},{"lineNumber":90,"author":{"gitId":"clarlzx"},"content":"            LocalDateTime start \u003d dateTimes[0];"},{"lineNumber":91,"author":{"gitId":"clarlzx"},"content":"            LocalDateTime end \u003d dateTimes[1];"},{"lineNumber":92,"author":{"gitId":"clarlzx"},"content":"            checkEndBeforeStart(start, end);"},{"lineNumber":93,"author":{"gitId":"clarlzx"},"content":"            "},{"lineNumber":94,"author":{"gitId":"clarlzx"},"content":"            return new Event(parameters[0].strip(), start, end);"},{"lineNumber":95,"author":{"gitId":"clarlzx"},"content":"            "},{"lineNumber":96,"author":{"gitId":"clarlzx"},"content":"        } catch (ChatException e) {"},{"lineNumber":97,"author":{"gitId":"clarlzx"},"content":"            throw new ChatException(e.getMessage() + formatStr);"},{"lineNumber":98,"author":{"gitId":"clarlzx"},"content":"        }"},{"lineNumber":99,"author":{"gitId":"clarlzx"},"content":"    }"},{"lineNumber":100,"author":{"gitId":"clarlzx"},"content":"    "},{"lineNumber":101,"author":{"gitId":"clarlzx"},"content":"    private static void checkWrongCommand(String str) throws ChatException {"},{"lineNumber":102,"author":{"gitId":"clarlzx"},"content":"        if (!str.startsWith(\"event\")) {"},{"lineNumber":103,"author":{"gitId":"clarlzx"},"content":"            //i.e. list"},{"lineNumber":104,"author":{"gitId":"clarlzx"},"content":"            throw new ChatException(\"wrong instruction for event\\n\");"},{"lineNumber":105,"author":{"gitId":"clarlzx"},"content":"        }"},{"lineNumber":106,"author":{"gitId":"clarlzx"},"content":"    }"},{"lineNumber":107,"author":{"gitId":"clarlzx"},"content":"    "},{"lineNumber":108,"author":{"gitId":"clarlzx"},"content":"    private static void checkAllParametersIsMissing(String str) throws ChatException {"},{"lineNumber":109,"author":{"gitId":"clarlzx"},"content":"        if (str.strip().equals(\"event\")) {"},{"lineNumber":110,"author":{"gitId":"clarlzx"},"content":"            //i.e. event"},{"lineNumber":111,"author":{"gitId":"clarlzx"},"content":"            //i.e. event(followed by one or more empty spaces)"},{"lineNumber":112,"author":{"gitId":"clarlzx"},"content":"            throw new ChatException(\"event name, start and end date/time missing\\n\");"},{"lineNumber":113,"author":{"gitId":"clarlzx"},"content":"        }"},{"lineNumber":114,"author":{"gitId":"clarlzx"},"content":"    }"},{"lineNumber":115,"author":{"gitId":"clarlzx"},"content":"    "},{"lineNumber":116,"author":{"gitId":"clarlzx"},"content":"    private static void checkNoSpaceBetweenEventAndName(String str) throws ChatException {"},{"lineNumber":117,"author":{"gitId":"clarlzx"},"content":"        if (!str.startsWith(\"event \")) {"},{"lineNumber":118,"author":{"gitId":"clarlzx"},"content":"            //i.e. eventfinal exam"},{"lineNumber":119,"author":{"gitId":"clarlzx"},"content":"            throw new ChatException(\"no spacing after event\\n\");"},{"lineNumber":120,"author":{"gitId":"clarlzx"},"content":"        }"},{"lineNumber":121,"author":{"gitId":"clarlzx"},"content":"    }"},{"lineNumber":122,"author":{"gitId":"clarlzx"},"content":""},{"lineNumber":123,"author":{"gitId":"clarlzx"},"content":"    private static void checkNoName(String parameterStr) throws ChatException {"},{"lineNumber":124,"author":{"gitId":"clarlzx"},"content":"        if (parameterStr.startsWith(\"/at\")) {"},{"lineNumber":125,"author":{"gitId":"clarlzx"},"content":"            //i.e. event /at"},{"lineNumber":126,"author":{"gitId":"clarlzx"},"content":"            //i.e. event /at tmr 5-6pm"},{"lineNumber":127,"author":{"gitId":"clarlzx"},"content":"            throw new ChatException(\"event name missing\\n\");"},{"lineNumber":128,"author":{"gitId":"clarlzx"},"content":"        }"},{"lineNumber":129,"author":{"gitId":"clarlzx"},"content":"    }"},{"lineNumber":130,"author":{"gitId":"clarlzx"},"content":"    "},{"lineNumber":131,"author":{"gitId":"clarlzx"},"content":"    private static void checkNoAt(String parameterStr) throws ChatException {"},{"lineNumber":132,"author":{"gitId":"clarlzx"},"content":"        if (!parameterStr.contains(\"/at\")) {"},{"lineNumber":133,"author":{"gitId":"clarlzx"},"content":"            //i.e. event final exam"},{"lineNumber":134,"author":{"gitId":"clarlzx"},"content":"            //i.e. event final exam 5-6pm"},{"lineNumber":135,"author":{"gitId":"clarlzx"},"content":"            throw new ChatException(\"/at missing\\n\");"},{"lineNumber":136,"author":{"gitId":"clarlzx"},"content":"        }"},{"lineNumber":137,"author":{"gitId":"clarlzx"},"content":"    }"},{"lineNumber":138,"author":{"gitId":"clarlzx"},"content":"    "},{"lineNumber":139,"author":{"gitId":"clarlzx"},"content":"    private static void checkNoSpaceAroundAt(String parameterStr) throws ChatException { "},{"lineNumber":140,"author":{"gitId":"clarlzx"},"content":"        if (!parameterStr.contains(\" /at \")) {"},{"lineNumber":141,"author":{"gitId":"clarlzx"},"content":"            //i.e. event final exam/at"},{"lineNumber":142,"author":{"gitId":"clarlzx"},"content":"            //i.e. event final exam/at 5-6pm"},{"lineNumber":143,"author":{"gitId":"clarlzx"},"content":"            //i.e. event final exam /at5-6pm"},{"lineNumber":144,"author":{"gitId":"clarlzx"},"content":"            //i.e. event final exam/at5-6pm"},{"lineNumber":145,"author":{"gitId":"clarlzx"},"content":"            throw new ChatException(\"missing spaces before or after /at\\n\");"},{"lineNumber":146,"author":{"gitId":"clarlzx"},"content":"        }"},{"lineNumber":147,"author":{"gitId":"clarlzx"},"content":"    }"},{"lineNumber":148,"author":{"gitId":"clarlzx"},"content":"    "},{"lineNumber":149,"author":{"gitId":"clarlzx"},"content":"    private static void checkNoStartAndEndDateTime(String[] parameters) throws ChatException {"},{"lineNumber":150,"author":{"gitId":"clarlzx"},"content":"        if (parameters.length \u003c 2) {"},{"lineNumber":151,"author":{"gitId":"clarlzx"},"content":"            //i.e. event final exam /at"},{"lineNumber":152,"author":{"gitId":"clarlzx"},"content":"            throw new ChatException(\"missing start and end date/time\\n\");"},{"lineNumber":153,"author":{"gitId":"clarlzx"},"content":"        }"},{"lineNumber":154,"author":{"gitId":"clarlzx"},"content":"    }"},{"lineNumber":155,"author":{"gitId":"clarlzx"},"content":"    "},{"lineNumber":156,"author":{"gitId":"clarlzx"},"content":"    private static void checkDuplicateAt(String[] parameters) throws ChatException {"},{"lineNumber":157,"author":{"gitId":"clarlzx"},"content":"        if (parameters.length \u003e 2 || parameters[1].contains(\"/at\")) {"},{"lineNumber":158,"author":{"gitId":"clarlzx"},"content":"            //i.e. event final exam /at /at 5-6pm"},{"lineNumber":159,"author":{"gitId":"clarlzx"},"content":"            throw new ChatException(\"not allowed to have more than 1 \u0027 /at \u0027\\n\");"},{"lineNumber":160,"author":{"gitId":"clarlzx"},"content":"        }"},{"lineNumber":161,"author":{"gitId":"clarlzx"},"content":"    }"},{"lineNumber":162,"author":{"gitId":"clarlzx"},"content":"    "},{"lineNumber":163,"author":{"gitId":"clarlzx"},"content":"    private static void checkForMinusSign(String[] parameters) throws ChatException {"},{"lineNumber":164,"author":{"gitId":"clarlzx"},"content":"        if (!parameters[1].contains(\"-\")) {"},{"lineNumber":165,"author":{"gitId":"clarlzx"},"content":"            //i.e. event final exam /at 5pm"},{"lineNumber":166,"author":{"gitId":"clarlzx"},"content":"            throw new ChatException(\"missing \u0027-\u0027\\n\");"},{"lineNumber":167,"author":{"gitId":"clarlzx"},"content":"        }"},{"lineNumber":168,"author":{"gitId":"clarlzx"},"content":"    }"},{"lineNumber":169,"author":{"gitId":"clarlzx"},"content":"    "},{"lineNumber":170,"author":{"gitId":"clarlzx"},"content":"    private static void checkForMissingStartOrEndDateTime(String[] parameters) throws ChatException {"},{"lineNumber":171,"author":{"gitId":"clarlzx"},"content":"        if (parameters.length \u003c 2) {"},{"lineNumber":172,"author":{"gitId":"clarlzx"},"content":"            //i.e. event final exam /at 5-"},{"lineNumber":173,"author":{"gitId":"clarlzx"},"content":"            throw new ChatException(\"missing start or end date/time\\n\");"},{"lineNumber":174,"author":{"gitId":"clarlzx"},"content":"        }"},{"lineNumber":175,"author":{"gitId":"clarlzx"},"content":"    }"},{"lineNumber":176,"author":{"gitId":"clarlzx"},"content":"    "},{"lineNumber":177,"author":{"gitId":"clarlzx"},"content":"    private static LocalDateTime[] parseStartAndEndDateTime(String[] parameters) throws ChatException {"},{"lineNumber":178,"author":{"gitId":"clarlzx"},"content":"        try {"},{"lineNumber":179,"author":{"gitId":"clarlzx"},"content":"            String startStr \u003d parameters[0].strip();"},{"lineNumber":180,"author":{"gitId":"clarlzx"},"content":"            String endStr \u003d parameters[1].strip();"},{"lineNumber":181,"author":{"gitId":"clarlzx"},"content":"            LocalDateTime startDateTime \u003d LocalDateTime.parse(startStr, inputFormatter);"},{"lineNumber":182,"author":{"gitId":"clarlzx"},"content":"            LocalDateTime endDateTime \u003d LocalDateTime.parse(endStr, inputFormatter);"},{"lineNumber":183,"author":{"gitId":"clarlzx"},"content":"            LocalDateTime[] dateTimes \u003d {startDateTime, endDateTime};"},{"lineNumber":184,"author":{"gitId":"clarlzx"},"content":"            return dateTimes;"},{"lineNumber":185,"author":{"gitId":"clarlzx"},"content":"        } catch (DateTimeParseException e) {"},{"lineNumber":186,"author":{"gitId":"clarlzx"},"content":"            throw new ChatException(\"Start or end date/time is of wrong format\\n\");"},{"lineNumber":187,"author":{"gitId":"clarlzx"},"content":"        }"},{"lineNumber":188,"author":{"gitId":"clarlzx"},"content":"    }"},{"lineNumber":189,"author":{"gitId":"clarlzx"},"content":"    "},{"lineNumber":190,"author":{"gitId":"clarlzx"},"content":"    private static void checkEndBeforeStart(LocalDateTime start, LocalDateTime end) throws ChatException {"},{"lineNumber":191,"author":{"gitId":"clarlzx"},"content":"        if (start.isAfter(end)) {"},{"lineNumber":192,"author":{"gitId":"clarlzx"},"content":"            throw new ChatException(\"Start date/time is after end date/time\\n\");"},{"lineNumber":193,"author":{"gitId":"clarlzx"},"content":"        }"},{"lineNumber":194,"author":{"gitId":"clarlzx"},"content":"    }"},{"lineNumber":195,"author":{"gitId":"clarlzx"},"content":"    "},{"lineNumber":196,"author":{"gitId":"clarlzx"},"content":"    /**"},{"lineNumber":197,"author":{"gitId":"clarlzx"},"content":"     * Returns the start date and time of the task."},{"lineNumber":198,"author":{"gitId":"clarlzx"},"content":"     * "},{"lineNumber":199,"author":{"gitId":"clarlzx"},"content":"     * @return Start date and time of the task."},{"lineNumber":200,"author":{"gitId":"clarlzx"},"content":"     */"},{"lineNumber":201,"author":{"gitId":"clarlzx"},"content":"    public LocalDateTime getStart() {"},{"lineNumber":202,"author":{"gitId":"clarlzx"},"content":"        return this.start;"},{"lineNumber":203,"author":{"gitId":"clarlzx"},"content":"    }"},{"lineNumber":204,"author":{"gitId":"clarlzx"},"content":""},{"lineNumber":205,"author":{"gitId":"clarlzx"},"content":"    /**"},{"lineNumber":206,"author":{"gitId":"clarlzx"},"content":"     * Returns the end date and time of the task."},{"lineNumber":207,"author":{"gitId":"clarlzx"},"content":"     *"},{"lineNumber":208,"author":{"gitId":"clarlzx"},"content":"     * @return End date and time of the task."},{"lineNumber":209,"author":{"gitId":"clarlzx"},"content":"     */"},{"lineNumber":210,"author":{"gitId":"clarlzx"},"content":"    public LocalDateTime getEnd() {"},{"lineNumber":211,"author":{"gitId":"clarlzx"},"content":"        return this.end;"},{"lineNumber":212,"author":{"gitId":"clarlzx"},"content":"    }"},{"lineNumber":213,"author":{"gitId":"clarlzx"},"content":""},{"lineNumber":214,"author":{"gitId":"clarlzx"},"content":"    /**"},{"lineNumber":215,"author":{"gitId":"clarlzx"},"content":"     * Returns a comma separated string of all parameters."},{"lineNumber":216,"author":{"gitId":"clarlzx"},"content":"     *"},{"lineNumber":217,"author":{"gitId":"clarlzx"},"content":"     * @return Comma separated string with all parameters listed out."},{"lineNumber":218,"author":{"gitId":"clarlzx"},"content":"     */"},{"lineNumber":219,"author":{"gitId":"clarlzx"},"content":"    public String allParameterStr() {"},{"lineNumber":220,"author":{"gitId":"clarlzx"},"content":"        return String.format(\"E,%s,%s,%s,%s\", this.getIsDone(), this.getName(), this.getStart().format(inputFormatter),"},{"lineNumber":221,"author":{"gitId":"clarlzx"},"content":"                this.getEnd().format(inputFormatter));"},{"lineNumber":222,"author":{"gitId":"clarlzx"},"content":"    }"},{"lineNumber":223,"author":{"gitId":"clarlzx"},"content":""},{"lineNumber":224,"author":{"gitId":"clarlzx"},"content":"    /**"},{"lineNumber":225,"author":{"gitId":"clarlzx"},"content":"     * Returns a string that shows the details of the task."},{"lineNumber":226,"author":{"gitId":"clarlzx"},"content":"     * \u003cp\u003e[ ] will be displayed if isDone \u003d false.\u003c/p\u003e"},{"lineNumber":227,"author":{"gitId":"clarlzx"},"content":"     * \u003cp\u003e[X] will be displayed if isDone \u003d true.\u003c/p\u003e"},{"lineNumber":228,"author":{"gitId":"clarlzx"},"content":"     *"},{"lineNumber":229,"author":{"gitId":"clarlzx"},"content":"     * @return String showing details of task, i.e. [E][ ] name (at: start - end)."},{"lineNumber":230,"author":{"gitId":"clarlzx"},"content":"     */"},{"lineNumber":231,"author":{"gitId":"clarlzx"},"content":"    @Override"},{"lineNumber":232,"author":{"gitId":"clarlzx"},"content":"    public String toString() {"},{"lineNumber":233,"author":{"gitId":"clarlzx"},"content":"        String startStr \u003d this.getStart().format(displayFormatter);"},{"lineNumber":234,"author":{"gitId":"clarlzx"},"content":"        String endStr \u003d this.getEnd().format(displayFormatter);"},{"lineNumber":235,"author":{"gitId":"clarlzx"},"content":"        if (this.getStart().toString().split(\"T\")[0].equals(this.getEnd().toString().split(\"T\")[0])) {"},{"lineNumber":236,"author":{"gitId":"clarlzx"},"content":"            //start and end are of the same day"},{"lineNumber":237,"author":{"gitId":"clarlzx"},"content":"            DateTimeFormatter tempFormatter \u003d DateTimeFormatter.ofPattern(\"h:mma\");"},{"lineNumber":238,"author":{"gitId":"clarlzx"},"content":"            endStr \u003d this.getEnd().format(tempFormatter);"},{"lineNumber":239,"author":{"gitId":"clarlzx"},"content":"        }"},{"lineNumber":240,"author":{"gitId":"clarlzx"},"content":"        return String.format(\"[E]%s (at: %s - %s)\", super.toString(), startStr, endStr);"},{"lineNumber":241,"author":{"gitId":"clarlzx"},"content":"    }"},{"lineNumber":242,"author":{"gitId":"clarlzx"},"content":""},{"lineNumber":243,"author":{"gitId":"clarlzx"},"content":"}"}],"authorContributionMap":{"clarlzx":243}},{"path":"src/main/java/chat/task/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"clarlzx"},"content":"package chat.task;"},{"lineNumber":2,"author":{"gitId":"clarlzx"},"content":""},{"lineNumber":3,"author":{"gitId":"clarlzx"},"content":"/**"},{"lineNumber":4,"author":{"gitId":"clarlzx"},"content":" * An abstract class representing the basic form of a task."},{"lineNumber":5,"author":{"gitId":"clarlzx"},"content":" * \u003cp\u003eA task has a \u003cb\u003ename\u003c/b\u003e (or description) to describe the task "},{"lineNumber":6,"author":{"gitId":"clarlzx"},"content":" * and a boolean \u003cb\u003eisDone\u003c/b\u003e that tracks if the task has been completed."},{"lineNumber":7,"author":{"gitId":"clarlzx"},"content":" * \u003cp\u003eThe boolean \u003cb\u003eisDone\u003c/b\u003e is set to false by default.\u003c/p\u003e"},{"lineNumber":8,"author":{"gitId":"clarlzx"},"content":" */"},{"lineNumber":9,"author":{"gitId":"clarlzx"},"content":"public abstract class Task {"},{"lineNumber":10,"author":{"gitId":"clarlzx"},"content":"    "},{"lineNumber":11,"author":{"gitId":"clarlzx"},"content":"    private String name;"},{"lineNumber":12,"author":{"gitId":"clarlzx"},"content":"    private boolean isDone \u003d false;"},{"lineNumber":13,"author":{"gitId":"clarlzx"},"content":"    "},{"lineNumber":14,"author":{"gitId":"clarlzx"},"content":"    protected Task (String name) {"},{"lineNumber":15,"author":{"gitId":"clarlzx"},"content":"        assert name !\u003d \"\";"},{"lineNumber":16,"author":{"gitId":"clarlzx"},"content":"        this.name \u003d name;"},{"lineNumber":17,"author":{"gitId":"clarlzx"},"content":"    }"},{"lineNumber":18,"author":{"gitId":"clarlzx"},"content":"    "},{"lineNumber":19,"author":{"gitId":"clarlzx"},"content":"    protected Task (boolean isDone, String name) { "},{"lineNumber":20,"author":{"gitId":"clarlzx"},"content":"        assert name !\u003d \"\";"},{"lineNumber":21,"author":{"gitId":"clarlzx"},"content":"        this.isDone \u003d isDone; "},{"lineNumber":22,"author":{"gitId":"clarlzx"},"content":"        this.name \u003d name;"},{"lineNumber":23,"author":{"gitId":"clarlzx"},"content":"    }"},{"lineNumber":24,"author":{"gitId":"clarlzx"},"content":""},{"lineNumber":25,"author":{"gitId":"clarlzx"},"content":"    /**"},{"lineNumber":26,"author":{"gitId":"clarlzx"},"content":"     * Returns the name of the task."},{"lineNumber":27,"author":{"gitId":"clarlzx"},"content":"     * "},{"lineNumber":28,"author":{"gitId":"clarlzx"},"content":"     * @return Name or description of the task."},{"lineNumber":29,"author":{"gitId":"clarlzx"},"content":"     */"},{"lineNumber":30,"author":{"gitId":"clarlzx"},"content":"    public String getName() {"},{"lineNumber":31,"author":{"gitId":"clarlzx"},"content":"        return this.name;"},{"lineNumber":32,"author":{"gitId":"clarlzx"},"content":"    }"},{"lineNumber":33,"author":{"gitId":"clarlzx"},"content":""},{"lineNumber":34,"author":{"gitId":"clarlzx"},"content":"    /**"},{"lineNumber":35,"author":{"gitId":"clarlzx"},"content":"     * Returns boolean isDone that shows if task has been completed."},{"lineNumber":36,"author":{"gitId":"clarlzx"},"content":"     * If true, then task is complete."},{"lineNumber":37,"author":{"gitId":"clarlzx"},"content":"     * "},{"lineNumber":38,"author":{"gitId":"clarlzx"},"content":"     * @return Boolean isDone that tells if task is completed."},{"lineNumber":39,"author":{"gitId":"clarlzx"},"content":"     */"},{"lineNumber":40,"author":{"gitId":"clarlzx"},"content":"    public boolean getIsDone() {"},{"lineNumber":41,"author":{"gitId":"clarlzx"},"content":"        return this.isDone;"},{"lineNumber":42,"author":{"gitId":"clarlzx"},"content":"    }"},{"lineNumber":43,"author":{"gitId":"clarlzx"},"content":""},{"lineNumber":44,"author":{"gitId":"clarlzx"},"content":"    /**"},{"lineNumber":45,"author":{"gitId":"clarlzx"},"content":"     * Marks task as complete by setting isDone to true."},{"lineNumber":46,"author":{"gitId":"clarlzx"},"content":"     */"},{"lineNumber":47,"author":{"gitId":"clarlzx"},"content":"    public void completed() {"},{"lineNumber":48,"author":{"gitId":"clarlzx"},"content":"        this.isDone \u003d true;"},{"lineNumber":49,"author":{"gitId":"clarlzx"},"content":"    }"},{"lineNumber":50,"author":{"gitId":"clarlzx"},"content":""},{"lineNumber":51,"author":{"gitId":"clarlzx"},"content":"    /**"},{"lineNumber":52,"author":{"gitId":"clarlzx"},"content":"     * Abstract method that returns a comma separated string of all parameters."},{"lineNumber":53,"author":{"gitId":"clarlzx"},"content":"     * "},{"lineNumber":54,"author":{"gitId":"clarlzx"},"content":"     * @return Comma separated string with all parameters listed out."},{"lineNumber":55,"author":{"gitId":"clarlzx"},"content":"     */"},{"lineNumber":56,"author":{"gitId":"clarlzx"},"content":"    public abstract String allParameterStr();"},{"lineNumber":57,"author":{"gitId":"clarlzx"},"content":""},{"lineNumber":58,"author":{"gitId":"clarlzx"},"content":"    /**"},{"lineNumber":59,"author":{"gitId":"clarlzx"},"content":"     * Returns a string that shows the details of the task."},{"lineNumber":60,"author":{"gitId":"clarlzx"},"content":"     * \u003cp\u003e[ ] will be displayed if isDone \u003d false.\u003c/p\u003e"},{"lineNumber":61,"author":{"gitId":"clarlzx"},"content":"     * \u003cp\u003e[X] will be displayed if isDone \u003d true.\u003c/p\u003e"},{"lineNumber":62,"author":{"gitId":"clarlzx"},"content":"     * "},{"lineNumber":63,"author":{"gitId":"clarlzx"},"content":"     * @return String showing details of task, i.e. [ ] name."},{"lineNumber":64,"author":{"gitId":"clarlzx"},"content":"     */"},{"lineNumber":65,"author":{"gitId":"clarlzx"},"content":"    @Override"},{"lineNumber":66,"author":{"gitId":"clarlzx"},"content":"    public String toString() {"},{"lineNumber":67,"author":{"gitId":"clarlzx"},"content":"        if (this.getIsDone()) {"},{"lineNumber":68,"author":{"gitId":"clarlzx"},"content":"            return \"[X] \" + this.getName();"},{"lineNumber":69,"author":{"gitId":"clarlzx"},"content":"        } else {"},{"lineNumber":70,"author":{"gitId":"clarlzx"},"content":"            return \"[ ] \" + this.getName();"},{"lineNumber":71,"author":{"gitId":"clarlzx"},"content":"        }"},{"lineNumber":72,"author":{"gitId":"clarlzx"},"content":"    }"},{"lineNumber":73,"author":{"gitId":"clarlzx"},"content":""},{"lineNumber":74,"author":{"gitId":"clarlzx"},"content":"}"}],"authorContributionMap":{"clarlzx":74}},{"path":"src/main/java/chat/task/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"clarlzx"},"content":"package chat.task;"},{"lineNumber":2,"author":{"gitId":"clarlzx"},"content":""},{"lineNumber":3,"author":{"gitId":"clarlzx"},"content":"import chat.ChatException;"},{"lineNumber":4,"author":{"gitId":"clarlzx"},"content":""},{"lineNumber":5,"author":{"gitId":"clarlzx"},"content":"/**"},{"lineNumber":6,"author":{"gitId":"clarlzx"},"content":" * Todo is type of \u003cb\u003etask\u003c/b\u003e. "},{"lineNumber":7,"author":{"gitId":"clarlzx"},"content":" */"},{"lineNumber":8,"author":{"gitId":"clarlzx"},"content":"public class Todo extends Task {"},{"lineNumber":9,"author":{"gitId":"clarlzx"},"content":""},{"lineNumber":10,"author":{"gitId":"clarlzx"},"content":"    /**"},{"lineNumber":11,"author":{"gitId":"clarlzx"},"content":"     * Initialises Todo object."},{"lineNumber":12,"author":{"gitId":"clarlzx"},"content":"     * \u003cp\u003eBoolean isDone has been set to false by default.\u003c/p\u003e"},{"lineNumber":13,"author":{"gitId":"clarlzx"},"content":"     * "},{"lineNumber":14,"author":{"gitId":"clarlzx"},"content":"     * @param name Name or description of the task."},{"lineNumber":15,"author":{"gitId":"clarlzx"},"content":"     */"},{"lineNumber":16,"author":{"gitId":"clarlzx"},"content":"    private Todo (String name) {"},{"lineNumber":17,"author":{"gitId":"clarlzx"},"content":"        super(name);"},{"lineNumber":18,"author":{"gitId":"clarlzx"},"content":"    }"},{"lineNumber":19,"author":{"gitId":"clarlzx"},"content":""},{"lineNumber":20,"author":{"gitId":"clarlzx"},"content":"    /**"},{"lineNumber":21,"author":{"gitId":"clarlzx"},"content":"     * Initialises Todo object."},{"lineNumber":22,"author":{"gitId":"clarlzx"},"content":"     *"},{"lineNumber":23,"author":{"gitId":"clarlzx"},"content":"     * @param isDone Boolean that tells if task is completed."},{"lineNumber":24,"author":{"gitId":"clarlzx"},"content":"     * @param name Name or description of the task."},{"lineNumber":25,"author":{"gitId":"clarlzx"},"content":"     */"},{"lineNumber":26,"author":{"gitId":"clarlzx"},"content":"    public Todo (boolean isDone, String name) {"},{"lineNumber":27,"author":{"gitId":"clarlzx"},"content":"        super(isDone, name);"},{"lineNumber":28,"author":{"gitId":"clarlzx"},"content":"    }"},{"lineNumber":29,"author":{"gitId":"clarlzx"},"content":""},{"lineNumber":30,"author":{"gitId":"clarlzx"},"content":"    /**"},{"lineNumber":31,"author":{"gitId":"clarlzx"},"content":"     * Static method that creates a Todo object."},{"lineNumber":32,"author":{"gitId":"clarlzx"},"content":"     * "},{"lineNumber":33,"author":{"gitId":"clarlzx"},"content":"     * @param str Inputted command string from user to Chat the Cat."},{"lineNumber":34,"author":{"gitId":"clarlzx"},"content":"     * @return Todo Object."},{"lineNumber":35,"author":{"gitId":"clarlzx"},"content":"     * @throws ChatException If format of command is wrong."},{"lineNumber":36,"author":{"gitId":"clarlzx"},"content":"     */"},{"lineNumber":37,"author":{"gitId":"clarlzx"},"content":"    public static Todo createTodo (String str) throws ChatException {"},{"lineNumber":38,"author":{"gitId":"clarlzx"},"content":"        assert str !\u003d \"\";"},{"lineNumber":39,"author":{"gitId":"clarlzx"},"content":""},{"lineNumber":40,"author":{"gitId":"clarlzx"},"content":"        String formatStr \u003d \"Please input with this format:\\ntodo [name]\";"},{"lineNumber":41,"author":{"gitId":"clarlzx"},"content":"        try {"},{"lineNumber":42,"author":{"gitId":"clarlzx"},"content":"            checkWrongCommand(str);"},{"lineNumber":43,"author":{"gitId":"clarlzx"},"content":"            checkNoName(str);"},{"lineNumber":44,"author":{"gitId":"clarlzx"},"content":"            checkNoSpaceBetweenTodoAndName(str);"},{"lineNumber":45,"author":{"gitId":"clarlzx"},"content":"            return new Todo(str.replace(\"todo \", \"\").strip());"},{"lineNumber":46,"author":{"gitId":"clarlzx"},"content":"        } catch (ChatException e) {"},{"lineNumber":47,"author":{"gitId":"clarlzx"},"content":"            throw new ChatException(e.getMessage() + formatStr);"},{"lineNumber":48,"author":{"gitId":"clarlzx"},"content":"        }"},{"lineNumber":49,"author":{"gitId":"clarlzx"},"content":"    }"},{"lineNumber":50,"author":{"gitId":"clarlzx"},"content":""},{"lineNumber":51,"author":{"gitId":"clarlzx"},"content":"    /**"},{"lineNumber":52,"author":{"gitId":"clarlzx"},"content":"     * Checks if wrong command is given by user. "},{"lineNumber":53,"author":{"gitId":"clarlzx"},"content":"     * "},{"lineNumber":54,"author":{"gitId":"clarlzx"},"content":"     * @param str User\u0027s input."},{"lineNumber":55,"author":{"gitId":"clarlzx"},"content":"     * @throws ChatException ChatException thrown if wrong command is given."},{"lineNumber":56,"author":{"gitId":"clarlzx"},"content":"     */"},{"lineNumber":57,"author":{"gitId":"clarlzx"},"content":"    private static void checkWrongCommand(String str) throws ChatException {"},{"lineNumber":58,"author":{"gitId":"clarlzx"},"content":"        if (!str.startsWith(\"todo\")) {"},{"lineNumber":59,"author":{"gitId":"clarlzx"},"content":"            //i.e. deadline"},{"lineNumber":60,"author":{"gitId":"clarlzx"},"content":"            throw new ChatException(\"wrong instruction for todo\\n\");"},{"lineNumber":61,"author":{"gitId":"clarlzx"},"content":"        }"},{"lineNumber":62,"author":{"gitId":"clarlzx"},"content":"    }"},{"lineNumber":63,"author":{"gitId":"clarlzx"},"content":""},{"lineNumber":64,"author":{"gitId":"clarlzx"},"content":"    /**"},{"lineNumber":65,"author":{"gitId":"clarlzx"},"content":"     * Checks for empty name."},{"lineNumber":66,"author":{"gitId":"clarlzx"},"content":"     * "},{"lineNumber":67,"author":{"gitId":"clarlzx"},"content":"     * @param str User\u0027s input. "},{"lineNumber":68,"author":{"gitId":"clarlzx"},"content":"     * @throws ChatException ChatException thrown if empty name."},{"lineNumber":69,"author":{"gitId":"clarlzx"},"content":"     */"},{"lineNumber":70,"author":{"gitId":"clarlzx"},"content":"    private static void checkNoName(String str) throws ChatException {"},{"lineNumber":71,"author":{"gitId":"clarlzx"},"content":"        if (str.strip().equals(\"todo\")) {"},{"lineNumber":72,"author":{"gitId":"clarlzx"},"content":"            //i.e. todo"},{"lineNumber":73,"author":{"gitId":"clarlzx"},"content":"            //i.e. todo(followed by one or more empty spaces)"},{"lineNumber":74,"author":{"gitId":"clarlzx"},"content":"            throw new ChatException(\"todo name missing\\n\");"},{"lineNumber":75,"author":{"gitId":"clarlzx"},"content":"        }"},{"lineNumber":76,"author":{"gitId":"clarlzx"},"content":"    }"},{"lineNumber":77,"author":{"gitId":"clarlzx"},"content":""},{"lineNumber":78,"author":{"gitId":"clarlzx"},"content":"    /**"},{"lineNumber":79,"author":{"gitId":"clarlzx"},"content":"     * Checks for no space between todo and name."},{"lineNumber":80,"author":{"gitId":"clarlzx"},"content":"     * "},{"lineNumber":81,"author":{"gitId":"clarlzx"},"content":"     * @param str User\u0027s input."},{"lineNumber":82,"author":{"gitId":"clarlzx"},"content":"     * @throws ChatException ChatException thrown if no space between todo and name."},{"lineNumber":83,"author":{"gitId":"clarlzx"},"content":"     */"},{"lineNumber":84,"author":{"gitId":"clarlzx"},"content":"    private static void checkNoSpaceBetweenTodoAndName(String str) throws ChatException {"},{"lineNumber":85,"author":{"gitId":"clarlzx"},"content":"        if (!str.startsWith(\"todo \")) {"},{"lineNumber":86,"author":{"gitId":"clarlzx"},"content":"            //i.e. todoread book"},{"lineNumber":87,"author":{"gitId":"clarlzx"},"content":"            throw new ChatException(\"no spacing after todo\\n\");"},{"lineNumber":88,"author":{"gitId":"clarlzx"},"content":"        }"},{"lineNumber":89,"author":{"gitId":"clarlzx"},"content":"    }"},{"lineNumber":90,"author":{"gitId":"clarlzx"},"content":"    "},{"lineNumber":91,"author":{"gitId":"clarlzx"},"content":"    /**"},{"lineNumber":92,"author":{"gitId":"clarlzx"},"content":"     * Returns a comma separated string of all parameters."},{"lineNumber":93,"author":{"gitId":"clarlzx"},"content":"     *"},{"lineNumber":94,"author":{"gitId":"clarlzx"},"content":"     * @return Comma separated string with all parameters listed out."},{"lineNumber":95,"author":{"gitId":"clarlzx"},"content":"     */"},{"lineNumber":96,"author":{"gitId":"clarlzx"},"content":"    public String allParameterStr() { "},{"lineNumber":97,"author":{"gitId":"clarlzx"},"content":"        return String.format(\"T,%s,%s\", this.getIsDone(), this.getName());"},{"lineNumber":98,"author":{"gitId":"clarlzx"},"content":"    }"},{"lineNumber":99,"author":{"gitId":"clarlzx"},"content":""},{"lineNumber":100,"author":{"gitId":"clarlzx"},"content":"    /**"},{"lineNumber":101,"author":{"gitId":"clarlzx"},"content":"     * Returns a string that shows the details of the task."},{"lineNumber":102,"author":{"gitId":"clarlzx"},"content":"     * \u003cp\u003e[ ] will be displayed if isDone \u003d false.\u003c/p\u003e"},{"lineNumber":103,"author":{"gitId":"clarlzx"},"content":"     * \u003cp\u003e[X] will be displayed if isDone \u003d true.\u003c/p\u003e"},{"lineNumber":104,"author":{"gitId":"clarlzx"},"content":"     *"},{"lineNumber":105,"author":{"gitId":"clarlzx"},"content":"     * @return String showing details of task, i.e. [T][ ] name."},{"lineNumber":106,"author":{"gitId":"clarlzx"},"content":"     */"},{"lineNumber":107,"author":{"gitId":"clarlzx"},"content":"    @Override"},{"lineNumber":108,"author":{"gitId":"clarlzx"},"content":"    public String toString() {"},{"lineNumber":109,"author":{"gitId":"clarlzx"},"content":"        return \"[T]\" + super.toString();"},{"lineNumber":110,"author":{"gitId":"clarlzx"},"content":"    }"},{"lineNumber":111,"author":{"gitId":"clarlzx"},"content":"}"}],"authorContributionMap":{"clarlzx":111}},{"path":"src/main/resources/view/ChatDialogBox.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"clarlzx"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"},{"lineNumber":2,"author":{"gitId":"clarlzx"},"content":""},{"lineNumber":3,"author":{"gitId":"clarlzx"},"content":"\u003c?import javafx.geometry.Insets?\u003e"},{"lineNumber":4,"author":{"gitId":"clarlzx"},"content":"\u003c?import javafx.scene.control.Label?\u003e"},{"lineNumber":5,"author":{"gitId":"clarlzx"},"content":"\u003c?import javafx.scene.image.ImageView?\u003e"},{"lineNumber":6,"author":{"gitId":"clarlzx"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e"},{"lineNumber":7,"author":{"gitId":"clarlzx"},"content":""},{"lineNumber":8,"author":{"gitId":"clarlzx"},"content":"\u003cfx:root alignment\u003d\"TOP_RIGHT\" maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\" minHeight\u003d\"-Infinity\" prefWidth\u003d\"400.0\" scaleX\u003d\"-1.0\" type\u003d\"javafx.scene.layout.HBox\" xmlns\u003d\"http://javafx.com/javafx/15.0.1\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e"},{"lineNumber":9,"author":{"gitId":"clarlzx"},"content":"    \u003cchildren\u003e"},{"lineNumber":10,"author":{"gitId":"clarlzx"},"content":"        \u003cLabel fx:id\u003d\"dialog\" scaleX\u003d\"-1.0\" text\u003d\"Label\" wrapText\u003d\"true\"\u003e"},{"lineNumber":11,"author":{"gitId":"clarlzx"},"content":"         \u003cHBox.margin\u003e"},{"lineNumber":12,"author":{"gitId":"clarlzx"},"content":"            \u003cInsets /\u003e"},{"lineNumber":13,"author":{"gitId":"clarlzx"},"content":"         \u003c/HBox.margin\u003e"},{"lineNumber":14,"author":{"gitId":"clarlzx"},"content":"         \u003cpadding\u003e"},{"lineNumber":15,"author":{"gitId":"clarlzx"},"content":"            \u003cInsets left\u003d\"5.0\" right\u003d\"5.0\" /\u003e"},{"lineNumber":16,"author":{"gitId":"clarlzx"},"content":"         \u003c/padding\u003e\u003c/Label\u003e"},{"lineNumber":17,"author":{"gitId":"clarlzx"},"content":"        \u003cImageView fx:id\u003d\"displayPicture\" fitHeight\u003d\"99.0\" fitWidth\u003d\"99.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\" translateY\u003d\"1.0\"\u003e"},{"lineNumber":18,"author":{"gitId":"clarlzx"},"content":"         \u003cHBox.margin\u003e"},{"lineNumber":19,"author":{"gitId":"clarlzx"},"content":"            \u003cInsets left\u003d\"5.0\" right\u003d\"20.0\" /\u003e"},{"lineNumber":20,"author":{"gitId":"clarlzx"},"content":"         \u003c/HBox.margin\u003e"},{"lineNumber":21,"author":{"gitId":"clarlzx"},"content":"      \u003c/ImageView\u003e"},{"lineNumber":22,"author":{"gitId":"clarlzx"},"content":"    \u003c/children\u003e"},{"lineNumber":23,"author":{"gitId":"clarlzx"},"content":"    \u003cpadding\u003e"},{"lineNumber":24,"author":{"gitId":"clarlzx"},"content":"        \u003cInsets bottom\u003d\"15.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"15.0\" /\u003e"},{"lineNumber":25,"author":{"gitId":"clarlzx"},"content":"    \u003c/padding\u003e"},{"lineNumber":26,"author":{"gitId":"clarlzx"},"content":"\u003c/fx:root\u003e"}],"authorContributionMap":{"clarlzx":26}},{"path":"src/main/resources/view/MainWindow.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"clarlzx"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"},{"lineNumber":2,"author":{"gitId":"clarlzx"},"content":""},{"lineNumber":3,"author":{"gitId":"clarlzx"},"content":"\u003c?import javafx.scene.control.Button?\u003e"},{"lineNumber":4,"author":{"gitId":"clarlzx"},"content":"\u003c?import javafx.scene.control.ScrollPane?\u003e"},{"lineNumber":5,"author":{"gitId":"clarlzx"},"content":"\u003c?import javafx.scene.control.TextField?\u003e"},{"lineNumber":6,"author":{"gitId":"clarlzx"},"content":"\u003c?import javafx.scene.layout.AnchorPane?\u003e"},{"lineNumber":7,"author":{"gitId":"clarlzx"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e"},{"lineNumber":8,"author":{"gitId":"clarlzx"},"content":""},{"lineNumber":9,"author":{"gitId":"clarlzx"},"content":"\u003cAnchorPane maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefHeight\u003d\"600.0\" prefWidth\u003d\"400.0\" xmlns\u003d\"http://javafx.com/javafx/15.0.1\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e"},{"lineNumber":10,"author":{"gitId":"clarlzx"},"content":"    \u003cchildren\u003e"},{"lineNumber":11,"author":{"gitId":"clarlzx"},"content":"        \u003cTextField fx:id\u003d\"userInput\" layoutY\u003d\"558.0\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"324.0\" AnchorPane.bottomAnchor\u003d\"1.0\" /\u003e"},{"lineNumber":12,"author":{"gitId":"clarlzx"},"content":"        \u003cButton fx:id\u003d\"sendButton\" layoutX\u003d\"324.0\" layoutY\u003d\"558.0\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"76.0\" text\u003d\"Send\" /\u003e"},{"lineNumber":13,"author":{"gitId":"clarlzx"},"content":"        \u003cScrollPane fx:id\u003d\"scrollPane\" hbarPolicy\u003d\"NEVER\" hvalue\u003d\"1.0\" prefHeight\u003d\"557.0\" prefWidth\u003d\"400.0\" vbarPolicy\u003d\"ALWAYS\" vvalue\u003d\"1.0\"\u003e"},{"lineNumber":14,"author":{"gitId":"clarlzx"},"content":"            \u003ccontent\u003e"},{"lineNumber":15,"author":{"gitId":"clarlzx"},"content":"                \u003cVBox fx:id\u003d\"dialogContainer\" prefHeight\u003d\"552.0\" prefWidth\u003d\"398.0\" /\u003e"},{"lineNumber":16,"author":{"gitId":"clarlzx"},"content":"            \u003c/content\u003e"},{"lineNumber":17,"author":{"gitId":"clarlzx"},"content":"        \u003c/ScrollPane\u003e"},{"lineNumber":18,"author":{"gitId":"clarlzx"},"content":"    \u003c/children\u003e"},{"lineNumber":19,"author":{"gitId":"clarlzx"},"content":"\u003c/AnchorPane\u003e"}],"authorContributionMap":{"clarlzx":19}},{"path":"src/main/resources/view/UserDialogBox.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"clarlzx"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"},{"lineNumber":2,"author":{"gitId":"clarlzx"},"content":""},{"lineNumber":3,"author":{"gitId":"clarlzx"},"content":"\u003c?import javafx.geometry.Insets?\u003e"},{"lineNumber":4,"author":{"gitId":"clarlzx"},"content":"\u003c?import javafx.scene.control.Label?\u003e"},{"lineNumber":5,"author":{"gitId":"clarlzx"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e"},{"lineNumber":6,"author":{"gitId":"clarlzx"},"content":"\u003c?import javafx.scene.text.Font?\u003e"},{"lineNumber":7,"author":{"gitId":"clarlzx"},"content":""},{"lineNumber":8,"author":{"gitId":"clarlzx"},"content":"\u003cfx:root alignment\u003d\"TOP_RIGHT\" maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\" minHeight\u003d\"-Infinity\" prefWidth\u003d\"400.0\" type\u003d\"javafx.scene.layout.HBox\" xmlns\u003d\"http://javafx.com/javafx/15.0.1\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e"},{"lineNumber":9,"author":{"gitId":"clarlzx"},"content":"    \u003cchildren\u003e"},{"lineNumber":10,"author":{"gitId":"clarlzx"},"content":"      \u003cHBox style\u003d\"-fx-background-color: paleturquoise; -fx-background-radius: 10; -fx-border-color: black; -fx-border-radius: 10;\"\u003e"},{"lineNumber":11,"author":{"gitId":"clarlzx"},"content":"         \u003cchildren\u003e"},{"lineNumber":12,"author":{"gitId":"clarlzx"},"content":"              \u003cLabel fx:id\u003d\"dialog\" text\u003d\"Label\" wrapText\u003d\"true\"\u003e"},{"lineNumber":13,"author":{"gitId":"clarlzx"},"content":"                  \u003cHBox.margin\u003e"},{"lineNumber":14,"author":{"gitId":"clarlzx"},"content":"                      \u003cInsets bottom\u003d\"10.0\" left\u003d\"15.0\" right\u003d\"15.0\" top\u003d\"10.0\" /\u003e"},{"lineNumber":15,"author":{"gitId":"clarlzx"},"content":"                  \u003c/HBox.margin\u003e"},{"lineNumber":16,"author":{"gitId":"clarlzx"},"content":"                  \u003cpadding\u003e"},{"lineNumber":17,"author":{"gitId":"clarlzx"},"content":"                      \u003cInsets left\u003d\"5.0\" right\u003d\"5.0\" /\u003e"},{"lineNumber":18,"author":{"gitId":"clarlzx"},"content":"                  \u003c/padding\u003e"},{"lineNumber":19,"author":{"gitId":"clarlzx"},"content":"               \u003cfont\u003e"},{"lineNumber":20,"author":{"gitId":"clarlzx"},"content":"                  \u003cFont size\u003d\"14.0\" /\u003e"},{"lineNumber":21,"author":{"gitId":"clarlzx"},"content":"               \u003c/font\u003e"},{"lineNumber":22,"author":{"gitId":"clarlzx"},"content":"            \u003c/Label\u003e"},{"lineNumber":23,"author":{"gitId":"clarlzx"},"content":"         \u003c/children\u003e"},{"lineNumber":24,"author":{"gitId":"clarlzx"},"content":"         \u003cHBox.margin\u003e"},{"lineNumber":25,"author":{"gitId":"clarlzx"},"content":"            \u003cInsets left\u003d\"80.0\" right\u003d\"10.0\" /\u003e"},{"lineNumber":26,"author":{"gitId":"clarlzx"},"content":"         \u003c/HBox.margin\u003e"},{"lineNumber":27,"author":{"gitId":"clarlzx"},"content":"      \u003c/HBox\u003e"},{"lineNumber":28,"author":{"gitId":"clarlzx"},"content":"    \u003c/children\u003e"},{"lineNumber":29,"author":{"gitId":"clarlzx"},"content":"    \u003cpadding\u003e"},{"lineNumber":30,"author":{"gitId":"clarlzx"},"content":"        \u003cInsets bottom\u003d\"15.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"15.0\" /\u003e"},{"lineNumber":31,"author":{"gitId":"clarlzx"},"content":"    \u003c/padding\u003e"},{"lineNumber":32,"author":{"gitId":"clarlzx"},"content":"\u003c/fx:root\u003e"}],"authorContributionMap":{"clarlzx":32}},{"path":"src/test/java/chat/task/DeadlineTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"clarlzx"},"content":"package chat.task;"},{"lineNumber":2,"author":{"gitId":"clarlzx"},"content":""},{"lineNumber":3,"author":{"gitId":"clarlzx"},"content":"import chat.ChatException;"},{"lineNumber":4,"author":{"gitId":"clarlzx"},"content":"import org.junit.jupiter.api.Test;"},{"lineNumber":5,"author":{"gitId":"clarlzx"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;"},{"lineNumber":6,"author":{"gitId":"clarlzx"},"content":"import static org.junit.jupiter.api.Assertions.fail;"},{"lineNumber":7,"author":{"gitId":"clarlzx"},"content":""},{"lineNumber":8,"author":{"gitId":"clarlzx"},"content":"/**"},{"lineNumber":9,"author":{"gitId":"clarlzx"},"content":" * Unit testing class for functions in Deadline class"},{"lineNumber":10,"author":{"gitId":"clarlzx"},"content":" */"},{"lineNumber":11,"author":{"gitId":"clarlzx"},"content":""},{"lineNumber":12,"author":{"gitId":"clarlzx"},"content":"public class DeadlineTest {"},{"lineNumber":13,"author":{"gitId":"clarlzx"},"content":""},{"lineNumber":14,"author":{"gitId":"clarlzx"},"content":"    private static String formatStr \u003d \"Please input with this format:\\n\" +"},{"lineNumber":15,"author":{"gitId":"clarlzx"},"content":"            \"deadline [name] /by [end date/time]\\n\" +"},{"lineNumber":16,"author":{"gitId":"clarlzx"},"content":"            \"* end date/time should be written as dd/MM/yyyy HH:mm\\n\" +"},{"lineNumber":17,"author":{"gitId":"clarlzx"},"content":"            \"* i.e. 19/03/2019 23:55\";"},{"lineNumber":18,"author":{"gitId":"clarlzx"},"content":"    "},{"lineNumber":19,"author":{"gitId":"clarlzx"},"content":"    @Test"},{"lineNumber":20,"author":{"gitId":"clarlzx"},"content":"    public void createDeadline_wrongInstruction_chatException() {"},{"lineNumber":21,"author":{"gitId":"clarlzx"},"content":"        String errorMessage \u003d \"wrong instruction for deadline\\n\" + formatStr;"},{"lineNumber":22,"author":{"gitId":"clarlzx"},"content":"        try {"},{"lineNumber":23,"author":{"gitId":"clarlzx"},"content":"            Deadline.createDeadline(\"todo\");"},{"lineNumber":24,"author":{"gitId":"clarlzx"},"content":"            fail(); // the test should not reach this line"},{"lineNumber":25,"author":{"gitId":"clarlzx"},"content":"        } catch (ChatException e) {"},{"lineNumber":26,"author":{"gitId":"clarlzx"},"content":"            assertEquals(errorMessage, e.getMessage());"},{"lineNumber":27,"author":{"gitId":"clarlzx"},"content":"        }"},{"lineNumber":28,"author":{"gitId":"clarlzx"},"content":"    }"},{"lineNumber":29,"author":{"gitId":"clarlzx"},"content":""},{"lineNumber":30,"author":{"gitId":"clarlzx"},"content":"    @Test"},{"lineNumber":31,"author":{"gitId":"clarlzx"},"content":"    public void createDeadline_onlyDeadline_chatException() {"},{"lineNumber":32,"author":{"gitId":"clarlzx"},"content":"        String errorMessage \u003d \"deadline name and end date/time missing\\n\" + formatStr;"},{"lineNumber":33,"author":{"gitId":"clarlzx"},"content":"        try {"},{"lineNumber":34,"author":{"gitId":"clarlzx"},"content":"            Deadline.createDeadline(\"deadline\");"},{"lineNumber":35,"author":{"gitId":"clarlzx"},"content":"            fail();"},{"lineNumber":36,"author":{"gitId":"clarlzx"},"content":"        } catch (ChatException e) {"},{"lineNumber":37,"author":{"gitId":"clarlzx"},"content":"            assertEquals(errorMessage, e.getMessage());"},{"lineNumber":38,"author":{"gitId":"clarlzx"},"content":"        }"},{"lineNumber":39,"author":{"gitId":"clarlzx"},"content":"    }"},{"lineNumber":40,"author":{"gitId":"clarlzx"},"content":""},{"lineNumber":41,"author":{"gitId":"clarlzx"},"content":"    @Test"},{"lineNumber":42,"author":{"gitId":"clarlzx"},"content":"    public void createDeadline_deadlineOneSpace_chatException() {"},{"lineNumber":43,"author":{"gitId":"clarlzx"},"content":"        String errorMessage \u003d \"deadline name and end date/time missing\\n\" + formatStr;"},{"lineNumber":44,"author":{"gitId":"clarlzx"},"content":"        try {"},{"lineNumber":45,"author":{"gitId":"clarlzx"},"content":"            Deadline.createDeadline(\"deadline \");"},{"lineNumber":46,"author":{"gitId":"clarlzx"},"content":"            fail();"},{"lineNumber":47,"author":{"gitId":"clarlzx"},"content":"        } catch (ChatException e) {"},{"lineNumber":48,"author":{"gitId":"clarlzx"},"content":"            assertEquals(errorMessage, e.getMessage());"},{"lineNumber":49,"author":{"gitId":"clarlzx"},"content":"        }"},{"lineNumber":50,"author":{"gitId":"clarlzx"},"content":"    }"},{"lineNumber":51,"author":{"gitId":"clarlzx"},"content":""},{"lineNumber":52,"author":{"gitId":"clarlzx"},"content":"    @Test"},{"lineNumber":53,"author":{"gitId":"clarlzx"},"content":"    public void createDeadline_deadlineManySpaces_chatException() {"},{"lineNumber":54,"author":{"gitId":"clarlzx"},"content":"        String errorMessage \u003d \"deadline name and end date/time missing\\n\" + formatStr;"},{"lineNumber":55,"author":{"gitId":"clarlzx"},"content":"        try {"},{"lineNumber":56,"author":{"gitId":"clarlzx"},"content":"            Deadline.createDeadline(\"deadline       \");"},{"lineNumber":57,"author":{"gitId":"clarlzx"},"content":"            fail();"},{"lineNumber":58,"author":{"gitId":"clarlzx"},"content":"        } catch (ChatException e) {"},{"lineNumber":59,"author":{"gitId":"clarlzx"},"content":"            assertEquals(errorMessage, e.getMessage());"},{"lineNumber":60,"author":{"gitId":"clarlzx"},"content":"        }"},{"lineNumber":61,"author":{"gitId":"clarlzx"},"content":"    }"},{"lineNumber":62,"author":{"gitId":"clarlzx"},"content":""},{"lineNumber":63,"author":{"gitId":"clarlzx"},"content":"    @Test"},{"lineNumber":64,"author":{"gitId":"clarlzx"},"content":"    public void createDeadline_noSpaceBetweenDeadlineAndDescription_chatException() {"},{"lineNumber":65,"author":{"gitId":"clarlzx"},"content":"        String errorMessage \u003d \"no spacing after deadline\\n\" + formatStr;"},{"lineNumber":66,"author":{"gitId":"clarlzx"},"content":"        try {"},{"lineNumber":67,"author":{"gitId":"clarlzx"},"content":"            Deadline.createDeadline(\"deadlinereturn book\");"},{"lineNumber":68,"author":{"gitId":"clarlzx"},"content":"            fail();"},{"lineNumber":69,"author":{"gitId":"clarlzx"},"content":"        } catch (ChatException e) {"},{"lineNumber":70,"author":{"gitId":"clarlzx"},"content":"            assertEquals(errorMessage, e.getMessage());"},{"lineNumber":71,"author":{"gitId":"clarlzx"},"content":"        }"},{"lineNumber":72,"author":{"gitId":"clarlzx"},"content":"        "},{"lineNumber":73,"author":{"gitId":"clarlzx"},"content":"        try {"},{"lineNumber":74,"author":{"gitId":"clarlzx"},"content":"            Deadline.createDeadline(\"deadlinereturn book /by 22/01/2020 03:00\");"},{"lineNumber":75,"author":{"gitId":"clarlzx"},"content":"            fail();"},{"lineNumber":76,"author":{"gitId":"clarlzx"},"content":"        } catch (ChatException e) {"},{"lineNumber":77,"author":{"gitId":"clarlzx"},"content":"            assertEquals(errorMessage, e.getMessage());"},{"lineNumber":78,"author":{"gitId":"clarlzx"},"content":"        }"},{"lineNumber":79,"author":{"gitId":"clarlzx"},"content":""},{"lineNumber":80,"author":{"gitId":"clarlzx"},"content":"        try {"},{"lineNumber":81,"author":{"gitId":"clarlzx"},"content":"            Deadline.createDeadline(\"deadline/by\");"},{"lineNumber":82,"author":{"gitId":"clarlzx"},"content":"            fail();"},{"lineNumber":83,"author":{"gitId":"clarlzx"},"content":"        } catch (ChatException e) {"},{"lineNumber":84,"author":{"gitId":"clarlzx"},"content":"            assertEquals(errorMessage, e.getMessage());"},{"lineNumber":85,"author":{"gitId":"clarlzx"},"content":"        }"},{"lineNumber":86,"author":{"gitId":"clarlzx"},"content":"        "},{"lineNumber":87,"author":{"gitId":"clarlzx"},"content":"    }"},{"lineNumber":88,"author":{"gitId":"clarlzx"},"content":"    "},{"lineNumber":89,"author":{"gitId":"clarlzx"},"content":"    @Test"},{"lineNumber":90,"author":{"gitId":"clarlzx"},"content":"    public void createDeadline_noDescriptionButHaveBy_chatException() {"},{"lineNumber":91,"author":{"gitId":"clarlzx"},"content":"        String errorMessage \u003d \"deadline name missing\\n\" + formatStr;"},{"lineNumber":92,"author":{"gitId":"clarlzx"},"content":""},{"lineNumber":93,"author":{"gitId":"clarlzx"},"content":"        try {"},{"lineNumber":94,"author":{"gitId":"clarlzx"},"content":"            Deadline.createDeadline(\"deadline /by\");"},{"lineNumber":95,"author":{"gitId":"clarlzx"},"content":"            fail();"},{"lineNumber":96,"author":{"gitId":"clarlzx"},"content":"        } catch (ChatException e) {"},{"lineNumber":97,"author":{"gitId":"clarlzx"},"content":"            assertEquals(errorMessage, e.getMessage());"},{"lineNumber":98,"author":{"gitId":"clarlzx"},"content":"        }"},{"lineNumber":99,"author":{"gitId":"clarlzx"},"content":"        "},{"lineNumber":100,"author":{"gitId":"clarlzx"},"content":"        try {"},{"lineNumber":101,"author":{"gitId":"clarlzx"},"content":"            Deadline.createDeadline(\"deadline /by 22/01/2020 03:00\");"},{"lineNumber":102,"author":{"gitId":"clarlzx"},"content":"            fail();"},{"lineNumber":103,"author":{"gitId":"clarlzx"},"content":"        } catch (ChatException e) {"},{"lineNumber":104,"author":{"gitId":"clarlzx"},"content":"            assertEquals(errorMessage, e.getMessage());"},{"lineNumber":105,"author":{"gitId":"clarlzx"},"content":"        }"},{"lineNumber":106,"author":{"gitId":"clarlzx"},"content":"    }"},{"lineNumber":107,"author":{"gitId":"clarlzx"},"content":"    "},{"lineNumber":108,"author":{"gitId":"clarlzx"},"content":"    @Test"},{"lineNumber":109,"author":{"gitId":"clarlzx"},"content":"    public void createDeadline_noBy_chatException() {"},{"lineNumber":110,"author":{"gitId":"clarlzx"},"content":"        String errorMessage \u003d \"/by missing\\n\" + formatStr;"},{"lineNumber":111,"author":{"gitId":"clarlzx"},"content":""},{"lineNumber":112,"author":{"gitId":"clarlzx"},"content":"        try {"},{"lineNumber":113,"author":{"gitId":"clarlzx"},"content":"            Deadline.createDeadline(\"deadline return book\");"},{"lineNumber":114,"author":{"gitId":"clarlzx"},"content":"            fail();"},{"lineNumber":115,"author":{"gitId":"clarlzx"},"content":"        } catch (ChatException e) {"},{"lineNumber":116,"author":{"gitId":"clarlzx"},"content":"            assertEquals(errorMessage, e.getMessage());"},{"lineNumber":117,"author":{"gitId":"clarlzx"},"content":"        }"},{"lineNumber":118,"author":{"gitId":"clarlzx"},"content":"        "},{"lineNumber":119,"author":{"gitId":"clarlzx"},"content":"        try {"},{"lineNumber":120,"author":{"gitId":"clarlzx"},"content":"            Deadline.createDeadline(\"deadline return book 01/10/2020 10:00\");"},{"lineNumber":121,"author":{"gitId":"clarlzx"},"content":"            fail();"},{"lineNumber":122,"author":{"gitId":"clarlzx"},"content":"        } catch (ChatException e) {"},{"lineNumber":123,"author":{"gitId":"clarlzx"},"content":"            assertEquals(errorMessage, e.getMessage());"},{"lineNumber":124,"author":{"gitId":"clarlzx"},"content":"        }"},{"lineNumber":125,"author":{"gitId":"clarlzx"},"content":"    }"},{"lineNumber":126,"author":{"gitId":"clarlzx"},"content":"    "},{"lineNumber":127,"author":{"gitId":"clarlzx"},"content":"    @Test"},{"lineNumber":128,"author":{"gitId":"clarlzx"},"content":"    public void createDeadline_noSpaceAroundBy_chatException() {"},{"lineNumber":129,"author":{"gitId":"clarlzx"},"content":"        String errorMessage \u003d \"missing spaces before or after /by\\n\" + formatStr;"},{"lineNumber":130,"author":{"gitId":"clarlzx"},"content":""},{"lineNumber":131,"author":{"gitId":"clarlzx"},"content":"        try {"},{"lineNumber":132,"author":{"gitId":"clarlzx"},"content":"            Deadline.createDeadline(\"deadline return book/by\");"},{"lineNumber":133,"author":{"gitId":"clarlzx"},"content":"            fail();"},{"lineNumber":134,"author":{"gitId":"clarlzx"},"content":"        } catch (ChatException e) {"},{"lineNumber":135,"author":{"gitId":"clarlzx"},"content":"            assertEquals(errorMessage, e.getMessage());"},{"lineNumber":136,"author":{"gitId":"clarlzx"},"content":"        }"},{"lineNumber":137,"author":{"gitId":"clarlzx"},"content":"        "},{"lineNumber":138,"author":{"gitId":"clarlzx"},"content":"        try {"},{"lineNumber":139,"author":{"gitId":"clarlzx"},"content":"            Deadline.createDeadline(\"deadline return book /by\");"},{"lineNumber":140,"author":{"gitId":"clarlzx"},"content":"            fail();"},{"lineNumber":141,"author":{"gitId":"clarlzx"},"content":"        } catch (ChatException e) {"},{"lineNumber":142,"author":{"gitId":"clarlzx"},"content":"            assertEquals(errorMessage, e.getMessage());"},{"lineNumber":143,"author":{"gitId":"clarlzx"},"content":"        }"},{"lineNumber":144,"author":{"gitId":"clarlzx"},"content":"        "},{"lineNumber":145,"author":{"gitId":"clarlzx"},"content":"        try {"},{"lineNumber":146,"author":{"gitId":"clarlzx"},"content":"            Deadline.createDeadline(\"deadline return book /by01/10/2020 10:00\");"},{"lineNumber":147,"author":{"gitId":"clarlzx"},"content":"            fail();"},{"lineNumber":148,"author":{"gitId":"clarlzx"},"content":"        } catch (ChatException e) {"},{"lineNumber":149,"author":{"gitId":"clarlzx"},"content":"            assertEquals(errorMessage, e.getMessage());"},{"lineNumber":150,"author":{"gitId":"clarlzx"},"content":"        }"},{"lineNumber":151,"author":{"gitId":"clarlzx"},"content":"        "},{"lineNumber":152,"author":{"gitId":"clarlzx"},"content":"        try {"},{"lineNumber":153,"author":{"gitId":"clarlzx"},"content":"            Deadline.createDeadline(\"deadline return book/by 01/10/2020 10:00\");"},{"lineNumber":154,"author":{"gitId":"clarlzx"},"content":"            fail();"},{"lineNumber":155,"author":{"gitId":"clarlzx"},"content":"        } catch (ChatException e) {"},{"lineNumber":156,"author":{"gitId":"clarlzx"},"content":"            assertEquals(errorMessage, e.getMessage());"},{"lineNumber":157,"author":{"gitId":"clarlzx"},"content":"        }"},{"lineNumber":158,"author":{"gitId":"clarlzx"},"content":"        "},{"lineNumber":159,"author":{"gitId":"clarlzx"},"content":"    }"},{"lineNumber":160,"author":{"gitId":"clarlzx"},"content":"    "},{"lineNumber":161,"author":{"gitId":"clarlzx"},"content":"    @Test "},{"lineNumber":162,"author":{"gitId":"clarlzx"},"content":"    public void createDeadline_moreThanOneBy_chatException() {"},{"lineNumber":163,"author":{"gitId":"clarlzx"},"content":"        String errorMessage \u003d \"not allowed to have more than 1 \u0027 /by \u0027\\n\" + formatStr;"},{"lineNumber":164,"author":{"gitId":"clarlzx"},"content":""},{"lineNumber":165,"author":{"gitId":"clarlzx"},"content":"        try {"},{"lineNumber":166,"author":{"gitId":"clarlzx"},"content":"            Deadline.createDeadline(\"deadline return book /by /by 01/10/2020 10:00\");"},{"lineNumber":167,"author":{"gitId":"clarlzx"},"content":"            fail();"},{"lineNumber":168,"author":{"gitId":"clarlzx"},"content":"        } catch (ChatException e) {"},{"lineNumber":169,"author":{"gitId":"clarlzx"},"content":"            assertEquals(errorMessage, e.getMessage());"},{"lineNumber":170,"author":{"gitId":"clarlzx"},"content":"        }"},{"lineNumber":171,"author":{"gitId":"clarlzx"},"content":"        "},{"lineNumber":172,"author":{"gitId":"clarlzx"},"content":"    }"},{"lineNumber":173,"author":{"gitId":"clarlzx"},"content":"    "},{"lineNumber":174,"author":{"gitId":"clarlzx"},"content":"    @Test"},{"lineNumber":175,"author":{"gitId":"clarlzx"},"content":"    public void createDeadline_noEndDateTime_chatException() {"},{"lineNumber":176,"author":{"gitId":"clarlzx"},"content":"        String errorMessage \u003d \"missing end date/time\\n\" + formatStr;"},{"lineNumber":177,"author":{"gitId":"clarlzx"},"content":"        "},{"lineNumber":178,"author":{"gitId":"clarlzx"},"content":"        try {"},{"lineNumber":179,"author":{"gitId":"clarlzx"},"content":"            Deadline.createDeadline(\"deadline return book /by \");"},{"lineNumber":180,"author":{"gitId":"clarlzx"},"content":"            fail();"},{"lineNumber":181,"author":{"gitId":"clarlzx"},"content":"        } catch (ChatException e) {"},{"lineNumber":182,"author":{"gitId":"clarlzx"},"content":"            assertEquals(errorMessage, e.getMessage());"},{"lineNumber":183,"author":{"gitId":"clarlzx"},"content":"        }"},{"lineNumber":184,"author":{"gitId":"clarlzx"},"content":"        "},{"lineNumber":185,"author":{"gitId":"clarlzx"},"content":"    }"},{"lineNumber":186,"author":{"gitId":"clarlzx"},"content":""},{"lineNumber":187,"author":{"gitId":"clarlzx"},"content":"    @Test"},{"lineNumber":188,"author":{"gitId":"clarlzx"},"content":"    public void createDeadline_wrongFormatEndDateTime_chatException() {"},{"lineNumber":189,"author":{"gitId":"clarlzx"},"content":"        String errorMessage \u003d \"End date/time is of wrong format\\n\" + formatStr;"},{"lineNumber":190,"author":{"gitId":"clarlzx"},"content":""},{"lineNumber":191,"author":{"gitId":"clarlzx"},"content":"        try {"},{"lineNumber":192,"author":{"gitId":"clarlzx"},"content":"            Deadline.createDeadline(\"deadline return book /by 2020/02\");"},{"lineNumber":193,"author":{"gitId":"clarlzx"},"content":"            fail();"},{"lineNumber":194,"author":{"gitId":"clarlzx"},"content":"        } catch (ChatException e) {"},{"lineNumber":195,"author":{"gitId":"clarlzx"},"content":"            assertEquals(errorMessage, e.getMessage());"},{"lineNumber":196,"author":{"gitId":"clarlzx"},"content":"        }"},{"lineNumber":197,"author":{"gitId":"clarlzx"},"content":"        "},{"lineNumber":198,"author":{"gitId":"clarlzx"},"content":"        try {"},{"lineNumber":199,"author":{"gitId":"clarlzx"},"content":"            Deadline.createDeadline(\"deadline return book /by 20/02/2020\");"},{"lineNumber":200,"author":{"gitId":"clarlzx"},"content":"            fail();"},{"lineNumber":201,"author":{"gitId":"clarlzx"},"content":"        } catch (ChatException e) {"},{"lineNumber":202,"author":{"gitId":"clarlzx"},"content":"            assertEquals(errorMessage, e.getMessage());"},{"lineNumber":203,"author":{"gitId":"clarlzx"},"content":"        }"},{"lineNumber":204,"author":{"gitId":"clarlzx"},"content":""},{"lineNumber":205,"author":{"gitId":"clarlzx"},"content":"    }"},{"lineNumber":206,"author":{"gitId":"clarlzx"},"content":""},{"lineNumber":207,"author":{"gitId":"clarlzx"},"content":"    @Test"},{"lineNumber":208,"author":{"gitId":"clarlzx"},"content":"    public void createDeadline_correctFormat_chatException() {"},{"lineNumber":209,"author":{"gitId":"clarlzx"},"content":"        try {"},{"lineNumber":210,"author":{"gitId":"clarlzx"},"content":"            Deadline.createDeadline(\"deadline return book /by 20/03/2021 20:00\");"},{"lineNumber":211,"author":{"gitId":"clarlzx"},"content":"        } catch (ChatException e) {"},{"lineNumber":212,"author":{"gitId":"clarlzx"},"content":"            fail();"},{"lineNumber":213,"author":{"gitId":"clarlzx"},"content":"        }"},{"lineNumber":214,"author":{"gitId":"clarlzx"},"content":"    }"},{"lineNumber":215,"author":{"gitId":"clarlzx"},"content":""},{"lineNumber":216,"author":{"gitId":"clarlzx"},"content":"    @Test"},{"lineNumber":217,"author":{"gitId":"clarlzx"},"content":"    public void allParameterStr_deadlineObjNotDone_commaSeparatedString() {"},{"lineNumber":218,"author":{"gitId":"clarlzx"},"content":"        assertEquals(\"D,false,return book,20/03/2021 20:00\","},{"lineNumber":219,"author":{"gitId":"clarlzx"},"content":"                new Deadline(false, \"return book\", \"20/03/2021 20:00\").allParameterStr());"},{"lineNumber":220,"author":{"gitId":"clarlzx"},"content":"    }"},{"lineNumber":221,"author":{"gitId":"clarlzx"},"content":""},{"lineNumber":222,"author":{"gitId":"clarlzx"},"content":"    @Test"},{"lineNumber":223,"author":{"gitId":"clarlzx"},"content":"    public void allParameterStr_deadlineObjDone_commaSeparatedString() {"},{"lineNumber":224,"author":{"gitId":"clarlzx"},"content":"        assertEquals(\"D,true,return book,20/03/2021 20:00\","},{"lineNumber":225,"author":{"gitId":"clarlzx"},"content":"                new Deadline(true, \"return book\", \"20/03/2021 20:00\").allParameterStr());"},{"lineNumber":226,"author":{"gitId":"clarlzx"},"content":"    }"},{"lineNumber":227,"author":{"gitId":"clarlzx"},"content":""},{"lineNumber":228,"author":{"gitId":"clarlzx"},"content":"    @Test"},{"lineNumber":229,"author":{"gitId":"clarlzx"},"content":"    public void toString_deadlineObjNotDone_string() {"},{"lineNumber":230,"author":{"gitId":"clarlzx"},"content":"        assertEquals(\"[D][ ] return book (by: 20 Mar 2021, 8:00PM)\","},{"lineNumber":231,"author":{"gitId":"clarlzx"},"content":"                new Deadline(false, \"return book\", \"20/03/2021 20:00\").toString());"},{"lineNumber":232,"author":{"gitId":"clarlzx"},"content":"    }"},{"lineNumber":233,"author":{"gitId":"clarlzx"},"content":""},{"lineNumber":234,"author":{"gitId":"clarlzx"},"content":"    @Test"},{"lineNumber":235,"author":{"gitId":"clarlzx"},"content":"    public void toString_deadlineObjDone_string() {"},{"lineNumber":236,"author":{"gitId":"clarlzx"},"content":"        assertEquals(\"[D][X] return book (by: 20 Mar 2021, 8:00PM)\","},{"lineNumber":237,"author":{"gitId":"clarlzx"},"content":"                new Deadline(true, \"return book\", \"20/03/2021 20:00\").toString());"},{"lineNumber":238,"author":{"gitId":"clarlzx"},"content":"    }"},{"lineNumber":239,"author":{"gitId":"clarlzx"},"content":""},{"lineNumber":240,"author":{"gitId":"clarlzx"},"content":"}"},{"lineNumber":241,"author":{"gitId":"clarlzx"},"content":""}],"authorContributionMap":{"clarlzx":241}},{"path":"src/test/java/chat/task/EventTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"clarlzx"},"content":"package chat.task;"},{"lineNumber":2,"author":{"gitId":"clarlzx"},"content":""},{"lineNumber":3,"author":{"gitId":"clarlzx"},"content":"import chat.ChatException;"},{"lineNumber":4,"author":{"gitId":"clarlzx"},"content":"import org.junit.jupiter.api.Test;"},{"lineNumber":5,"author":{"gitId":"clarlzx"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;"},{"lineNumber":6,"author":{"gitId":"clarlzx"},"content":"import static org.junit.jupiter.api.Assertions.fail;"},{"lineNumber":7,"author":{"gitId":"clarlzx"},"content":""},{"lineNumber":8,"author":{"gitId":"clarlzx"},"content":"/**"},{"lineNumber":9,"author":{"gitId":"clarlzx"},"content":" * Unit testing class for functions in Event class"},{"lineNumber":10,"author":{"gitId":"clarlzx"},"content":" */"},{"lineNumber":11,"author":{"gitId":"clarlzx"},"content":""},{"lineNumber":12,"author":{"gitId":"clarlzx"},"content":"public class EventTest {"},{"lineNumber":13,"author":{"gitId":"clarlzx"},"content":""},{"lineNumber":14,"author":{"gitId":"clarlzx"},"content":"    private static String formatStr \u003d \"Please input with this format:\\n\" +"},{"lineNumber":15,"author":{"gitId":"clarlzx"},"content":"            \"event [name] /at [end date/time]-[start date/time]\\n\" +"},{"lineNumber":16,"author":{"gitId":"clarlzx"},"content":"            \"* start and end date/time should be written as dd/MM/yyyy HH:mm\\n\" +"},{"lineNumber":17,"author":{"gitId":"clarlzx"},"content":"            \"* i.e. 2019/03/19 22:00-2019/03/19 23:00\\n\" +"},{"lineNumber":18,"author":{"gitId":"clarlzx"},"content":"            \"* i.e. 2019/03/19 22:00 - 2019/03/19 23:00\";"},{"lineNumber":19,"author":{"gitId":"clarlzx"},"content":""},{"lineNumber":20,"author":{"gitId":"clarlzx"},"content":"    @Test"},{"lineNumber":21,"author":{"gitId":"clarlzx"},"content":"    public void createEvent_wrongInstruction_chatException() {"},{"lineNumber":22,"author":{"gitId":"clarlzx"},"content":"        String errorMessage \u003d \"wrong instruction for event\\n\" + formatStr;"},{"lineNumber":23,"author":{"gitId":"clarlzx"},"content":"        try {"},{"lineNumber":24,"author":{"gitId":"clarlzx"},"content":"            Event.createEvent(\"todo\");"},{"lineNumber":25,"author":{"gitId":"clarlzx"},"content":"            fail(); // the test should not reach this line"},{"lineNumber":26,"author":{"gitId":"clarlzx"},"content":"        } catch (ChatException e) {"},{"lineNumber":27,"author":{"gitId":"clarlzx"},"content":"            assertEquals(errorMessage, e.getMessage());"},{"lineNumber":28,"author":{"gitId":"clarlzx"},"content":"        }"},{"lineNumber":29,"author":{"gitId":"clarlzx"},"content":"    }"},{"lineNumber":30,"author":{"gitId":"clarlzx"},"content":""},{"lineNumber":31,"author":{"gitId":"clarlzx"},"content":"    @Test"},{"lineNumber":32,"author":{"gitId":"clarlzx"},"content":"    public void createEvent_onlyEvent_chatException() {"},{"lineNumber":33,"author":{"gitId":"clarlzx"},"content":"        String errorMessage \u003d \"event name, start and end date/time missing\\n\" + formatStr;"},{"lineNumber":34,"author":{"gitId":"clarlzx"},"content":"        try {"},{"lineNumber":35,"author":{"gitId":"clarlzx"},"content":"            Event.createEvent(\"event\");"},{"lineNumber":36,"author":{"gitId":"clarlzx"},"content":"            fail();"},{"lineNumber":37,"author":{"gitId":"clarlzx"},"content":"        } catch (ChatException e) {"},{"lineNumber":38,"author":{"gitId":"clarlzx"},"content":"            assertEquals(errorMessage, e.getMessage());"},{"lineNumber":39,"author":{"gitId":"clarlzx"},"content":"        }"},{"lineNumber":40,"author":{"gitId":"clarlzx"},"content":"    }"},{"lineNumber":41,"author":{"gitId":"clarlzx"},"content":""},{"lineNumber":42,"author":{"gitId":"clarlzx"},"content":"    @Test"},{"lineNumber":43,"author":{"gitId":"clarlzx"},"content":"    public void createEvent_eventOneSpace_chatException() {"},{"lineNumber":44,"author":{"gitId":"clarlzx"},"content":"        String errorMessage \u003d \"event name, start and end date/time missing\\n\" + formatStr;"},{"lineNumber":45,"author":{"gitId":"clarlzx"},"content":"        try {"},{"lineNumber":46,"author":{"gitId":"clarlzx"},"content":"            Event.createEvent(\"event\");"},{"lineNumber":47,"author":{"gitId":"clarlzx"},"content":"            fail();"},{"lineNumber":48,"author":{"gitId":"clarlzx"},"content":"        } catch (ChatException e) {"},{"lineNumber":49,"author":{"gitId":"clarlzx"},"content":"            assertEquals(errorMessage, e.getMessage());"},{"lineNumber":50,"author":{"gitId":"clarlzx"},"content":"        }"},{"lineNumber":51,"author":{"gitId":"clarlzx"},"content":"    }"},{"lineNumber":52,"author":{"gitId":"clarlzx"},"content":""},{"lineNumber":53,"author":{"gitId":"clarlzx"},"content":"    @Test"},{"lineNumber":54,"author":{"gitId":"clarlzx"},"content":"    public void createEvent_eventManySpaces_chatException() {"},{"lineNumber":55,"author":{"gitId":"clarlzx"},"content":"        String errorMessage \u003d \"event name, start and end date/time missing\\n\" + formatStr;"},{"lineNumber":56,"author":{"gitId":"clarlzx"},"content":"        try {"},{"lineNumber":57,"author":{"gitId":"clarlzx"},"content":"            Event.createEvent(\"event       \");"},{"lineNumber":58,"author":{"gitId":"clarlzx"},"content":"            fail();"},{"lineNumber":59,"author":{"gitId":"clarlzx"},"content":"        } catch (ChatException e) {"},{"lineNumber":60,"author":{"gitId":"clarlzx"},"content":"            assertEquals(errorMessage, e.getMessage());"},{"lineNumber":61,"author":{"gitId":"clarlzx"},"content":"        }"},{"lineNumber":62,"author":{"gitId":"clarlzx"},"content":"    }"},{"lineNumber":63,"author":{"gitId":"clarlzx"},"content":""},{"lineNumber":64,"author":{"gitId":"clarlzx"},"content":"    @Test"},{"lineNumber":65,"author":{"gitId":"clarlzx"},"content":"    public void createEvent_noSpaceBetweenEventAndDescription_chatException() {"},{"lineNumber":66,"author":{"gitId":"clarlzx"},"content":"        String errorMessage \u003d \"no spacing after event\\n\" + formatStr;"},{"lineNumber":67,"author":{"gitId":"clarlzx"},"content":"        try {"},{"lineNumber":68,"author":{"gitId":"clarlzx"},"content":"            Event.createEvent(\"eventfinal exam\");"},{"lineNumber":69,"author":{"gitId":"clarlzx"},"content":"            fail();"},{"lineNumber":70,"author":{"gitId":"clarlzx"},"content":"        } catch (ChatException e) {"},{"lineNumber":71,"author":{"gitId":"clarlzx"},"content":"            assertEquals(errorMessage, e.getMessage());"},{"lineNumber":72,"author":{"gitId":"clarlzx"},"content":"        }"},{"lineNumber":73,"author":{"gitId":"clarlzx"},"content":""},{"lineNumber":74,"author":{"gitId":"clarlzx"},"content":"        try {"},{"lineNumber":75,"author":{"gitId":"clarlzx"},"content":"            Event.createEvent(\"eventfinal exam /at 22/01/2020 03:00\");"},{"lineNumber":76,"author":{"gitId":"clarlzx"},"content":"            fail();"},{"lineNumber":77,"author":{"gitId":"clarlzx"},"content":"        } catch (ChatException e) {"},{"lineNumber":78,"author":{"gitId":"clarlzx"},"content":"            assertEquals(errorMessage, e.getMessage());"},{"lineNumber":79,"author":{"gitId":"clarlzx"},"content":"        }"},{"lineNumber":80,"author":{"gitId":"clarlzx"},"content":""},{"lineNumber":81,"author":{"gitId":"clarlzx"},"content":"        try {"},{"lineNumber":82,"author":{"gitId":"clarlzx"},"content":"            Event.createEvent(\"event/at\");"},{"lineNumber":83,"author":{"gitId":"clarlzx"},"content":"            fail();"},{"lineNumber":84,"author":{"gitId":"clarlzx"},"content":"        } catch (ChatException e) {"},{"lineNumber":85,"author":{"gitId":"clarlzx"},"content":"            assertEquals(errorMessage, e.getMessage());"},{"lineNumber":86,"author":{"gitId":"clarlzx"},"content":"        }"},{"lineNumber":87,"author":{"gitId":"clarlzx"},"content":""},{"lineNumber":88,"author":{"gitId":"clarlzx"},"content":"    }"},{"lineNumber":89,"author":{"gitId":"clarlzx"},"content":""},{"lineNumber":90,"author":{"gitId":"clarlzx"},"content":"    @Test"},{"lineNumber":91,"author":{"gitId":"clarlzx"},"content":"    public void createEvent_noDescriptionButHaveAt_chatException() {"},{"lineNumber":92,"author":{"gitId":"clarlzx"},"content":"        String errorMessage \u003d \"event name missing\\n\" + formatStr;"},{"lineNumber":93,"author":{"gitId":"clarlzx"},"content":""},{"lineNumber":94,"author":{"gitId":"clarlzx"},"content":"        try {"},{"lineNumber":95,"author":{"gitId":"clarlzx"},"content":"            Event.createEvent(\"event /at\");"},{"lineNumber":96,"author":{"gitId":"clarlzx"},"content":"            fail();"},{"lineNumber":97,"author":{"gitId":"clarlzx"},"content":"        } catch (ChatException e) {"},{"lineNumber":98,"author":{"gitId":"clarlzx"},"content":"            assertEquals(errorMessage, e.getMessage());"},{"lineNumber":99,"author":{"gitId":"clarlzx"},"content":"        }"},{"lineNumber":100,"author":{"gitId":"clarlzx"},"content":""},{"lineNumber":101,"author":{"gitId":"clarlzx"},"content":"        try {"},{"lineNumber":102,"author":{"gitId":"clarlzx"},"content":"            Event.createEvent(\"event /at 22/01/2020 03:00\");"},{"lineNumber":103,"author":{"gitId":"clarlzx"},"content":"            fail();"},{"lineNumber":104,"author":{"gitId":"clarlzx"},"content":"        } catch (ChatException e) {"},{"lineNumber":105,"author":{"gitId":"clarlzx"},"content":"            assertEquals(errorMessage, e.getMessage());"},{"lineNumber":106,"author":{"gitId":"clarlzx"},"content":"        }"},{"lineNumber":107,"author":{"gitId":"clarlzx"},"content":""},{"lineNumber":108,"author":{"gitId":"clarlzx"},"content":"        try {"},{"lineNumber":109,"author":{"gitId":"clarlzx"},"content":"            Event.createEvent(\"event /at 22/01/2020 03:00 - 22/01/2020 04:00\");"},{"lineNumber":110,"author":{"gitId":"clarlzx"},"content":"            fail();"},{"lineNumber":111,"author":{"gitId":"clarlzx"},"content":"        } catch (ChatException e) {"},{"lineNumber":112,"author":{"gitId":"clarlzx"},"content":"            assertEquals(errorMessage, e.getMessage());"},{"lineNumber":113,"author":{"gitId":"clarlzx"},"content":"        }"},{"lineNumber":114,"author":{"gitId":"clarlzx"},"content":"        "},{"lineNumber":115,"author":{"gitId":"clarlzx"},"content":"    }"},{"lineNumber":116,"author":{"gitId":"clarlzx"},"content":""},{"lineNumber":117,"author":{"gitId":"clarlzx"},"content":"    @Test"},{"lineNumber":118,"author":{"gitId":"clarlzx"},"content":"    public void createEvent_noAt_chatException() {"},{"lineNumber":119,"author":{"gitId":"clarlzx"},"content":"        String errorMessage \u003d \"/at missing\\n\" + formatStr;"},{"lineNumber":120,"author":{"gitId":"clarlzx"},"content":""},{"lineNumber":121,"author":{"gitId":"clarlzx"},"content":"        try {"},{"lineNumber":122,"author":{"gitId":"clarlzx"},"content":"            Event.createEvent(\"event final exam\");"},{"lineNumber":123,"author":{"gitId":"clarlzx"},"content":"            fail();"},{"lineNumber":124,"author":{"gitId":"clarlzx"},"content":"        } catch (ChatException e) {"},{"lineNumber":125,"author":{"gitId":"clarlzx"},"content":"            assertEquals(errorMessage, e.getMessage());"},{"lineNumber":126,"author":{"gitId":"clarlzx"},"content":"        }"},{"lineNumber":127,"author":{"gitId":"clarlzx"},"content":""},{"lineNumber":128,"author":{"gitId":"clarlzx"},"content":"        try {"},{"lineNumber":129,"author":{"gitId":"clarlzx"},"content":"            Event.createEvent(\"event final exam 01/10/2020 10:00 - 11/10/2020 11:00\");"},{"lineNumber":130,"author":{"gitId":"clarlzx"},"content":"            fail();"},{"lineNumber":131,"author":{"gitId":"clarlzx"},"content":"        } catch (ChatException e) {"},{"lineNumber":132,"author":{"gitId":"clarlzx"},"content":"            assertEquals(errorMessage, e.getMessage());"},{"lineNumber":133,"author":{"gitId":"clarlzx"},"content":"        }"},{"lineNumber":134,"author":{"gitId":"clarlzx"},"content":"    }"},{"lineNumber":135,"author":{"gitId":"clarlzx"},"content":""},{"lineNumber":136,"author":{"gitId":"clarlzx"},"content":"    @Test"},{"lineNumber":137,"author":{"gitId":"clarlzx"},"content":"    public void createEvent_noSpaceAroundAt_chatException() {"},{"lineNumber":138,"author":{"gitId":"clarlzx"},"content":"        String errorMessage \u003d \"missing spaces before or after /at\\n\" + formatStr;"},{"lineNumber":139,"author":{"gitId":"clarlzx"},"content":""},{"lineNumber":140,"author":{"gitId":"clarlzx"},"content":"        try {"},{"lineNumber":141,"author":{"gitId":"clarlzx"},"content":"            Event.createEvent(\"event final exam/at\");"},{"lineNumber":142,"author":{"gitId":"clarlzx"},"content":"            fail();"},{"lineNumber":143,"author":{"gitId":"clarlzx"},"content":"        } catch (ChatException e) {"},{"lineNumber":144,"author":{"gitId":"clarlzx"},"content":"            assertEquals(errorMessage, e.getMessage());"},{"lineNumber":145,"author":{"gitId":"clarlzx"},"content":"        }"},{"lineNumber":146,"author":{"gitId":"clarlzx"},"content":""},{"lineNumber":147,"author":{"gitId":"clarlzx"},"content":"        try {"},{"lineNumber":148,"author":{"gitId":"clarlzx"},"content":"            Event.createEvent(\"event final exam /at\");"},{"lineNumber":149,"author":{"gitId":"clarlzx"},"content":"            fail();"},{"lineNumber":150,"author":{"gitId":"clarlzx"},"content":"        } catch (ChatException e) {"},{"lineNumber":151,"author":{"gitId":"clarlzx"},"content":"            assertEquals(errorMessage, e.getMessage());"},{"lineNumber":152,"author":{"gitId":"clarlzx"},"content":"        }"},{"lineNumber":153,"author":{"gitId":"clarlzx"},"content":""},{"lineNumber":154,"author":{"gitId":"clarlzx"},"content":"        try {"},{"lineNumber":155,"author":{"gitId":"clarlzx"},"content":"            Event.createEvent(\"event final exam /at01/10/2020 10:00\");"},{"lineNumber":156,"author":{"gitId":"clarlzx"},"content":"            fail();"},{"lineNumber":157,"author":{"gitId":"clarlzx"},"content":"        } catch (ChatException e) {"},{"lineNumber":158,"author":{"gitId":"clarlzx"},"content":"            assertEquals(errorMessage, e.getMessage());"},{"lineNumber":159,"author":{"gitId":"clarlzx"},"content":"        }"},{"lineNumber":160,"author":{"gitId":"clarlzx"},"content":"        "},{"lineNumber":161,"author":{"gitId":"clarlzx"},"content":"        try {"},{"lineNumber":162,"author":{"gitId":"clarlzx"},"content":"            Event.createEvent(\"event final exam /at01/10/2020 10:00 - 02/10/2020 10:00\");"},{"lineNumber":163,"author":{"gitId":"clarlzx"},"content":"            fail();"},{"lineNumber":164,"author":{"gitId":"clarlzx"},"content":"        } catch (ChatException e) {"},{"lineNumber":165,"author":{"gitId":"clarlzx"},"content":"            assertEquals(errorMessage, e.getMessage());"},{"lineNumber":166,"author":{"gitId":"clarlzx"},"content":"        }"},{"lineNumber":167,"author":{"gitId":"clarlzx"},"content":""},{"lineNumber":168,"author":{"gitId":"clarlzx"},"content":"        try {"},{"lineNumber":169,"author":{"gitId":"clarlzx"},"content":"            Event.createEvent(\"event final exam/at 01/10/2020 10:00 - 02/10/2020 10:00\");"},{"lineNumber":170,"author":{"gitId":"clarlzx"},"content":"            fail();"},{"lineNumber":171,"author":{"gitId":"clarlzx"},"content":"        } catch (ChatException e) {"},{"lineNumber":172,"author":{"gitId":"clarlzx"},"content":"            assertEquals(errorMessage, e.getMessage());"},{"lineNumber":173,"author":{"gitId":"clarlzx"},"content":"        }"},{"lineNumber":174,"author":{"gitId":"clarlzx"},"content":""},{"lineNumber":175,"author":{"gitId":"clarlzx"},"content":"    }"},{"lineNumber":176,"author":{"gitId":"clarlzx"},"content":""},{"lineNumber":177,"author":{"gitId":"clarlzx"},"content":"    @Test"},{"lineNumber":178,"author":{"gitId":"clarlzx"},"content":"    public void createEvent_moreThanOneAt_chatException() {"},{"lineNumber":179,"author":{"gitId":"clarlzx"},"content":"        String errorMessage \u003d \"not allowed to have more than 1 \u0027 /at \u0027\\n\" + formatStr;"},{"lineNumber":180,"author":{"gitId":"clarlzx"},"content":""},{"lineNumber":181,"author":{"gitId":"clarlzx"},"content":"        try {"},{"lineNumber":182,"author":{"gitId":"clarlzx"},"content":"            Event.createEvent(\"event final exam /at /at 01/10/2020 10:00 - 01/10/2020 11:00\");"},{"lineNumber":183,"author":{"gitId":"clarlzx"},"content":"            fail();"},{"lineNumber":184,"author":{"gitId":"clarlzx"},"content":"        } catch (ChatException e) {"},{"lineNumber":185,"author":{"gitId":"clarlzx"},"content":"            assertEquals(errorMessage, e.getMessage());"},{"lineNumber":186,"author":{"gitId":"clarlzx"},"content":"        }"},{"lineNumber":187,"author":{"gitId":"clarlzx"},"content":""},{"lineNumber":188,"author":{"gitId":"clarlzx"},"content":"    }"},{"lineNumber":189,"author":{"gitId":"clarlzx"},"content":""},{"lineNumber":190,"author":{"gitId":"clarlzx"},"content":"    @Test"},{"lineNumber":191,"author":{"gitId":"clarlzx"},"content":"    public void createEvent_noHyphenBetweenStartAndEndDateTime_chatException() {"},{"lineNumber":192,"author":{"gitId":"clarlzx"},"content":"        String errorMessage \u003d \"missing \u0027-\u0027\\n\" + formatStr;"},{"lineNumber":193,"author":{"gitId":"clarlzx"},"content":"        "},{"lineNumber":194,"author":{"gitId":"clarlzx"},"content":"        try {"},{"lineNumber":195,"author":{"gitId":"clarlzx"},"content":"            Event.createEvent(\"event final exam /at 20/02/2020 11:00 20/02/2020 12:00\");"},{"lineNumber":196,"author":{"gitId":"clarlzx"},"content":"            fail();"},{"lineNumber":197,"author":{"gitId":"clarlzx"},"content":"        } catch (ChatException e) {"},{"lineNumber":198,"author":{"gitId":"clarlzx"},"content":"            assertEquals(errorMessage, e.getMessage());"},{"lineNumber":199,"author":{"gitId":"clarlzx"},"content":"        }"},{"lineNumber":200,"author":{"gitId":"clarlzx"},"content":""},{"lineNumber":201,"author":{"gitId":"clarlzx"},"content":"        try {"},{"lineNumber":202,"author":{"gitId":"clarlzx"},"content":"            Event.createEvent(\"event final exam /at 20/02/2020 11:00\");"},{"lineNumber":203,"author":{"gitId":"clarlzx"},"content":"            fail();"},{"lineNumber":204,"author":{"gitId":"clarlzx"},"content":"        } catch (ChatException e) {"},{"lineNumber":205,"author":{"gitId":"clarlzx"},"content":"            assertEquals(errorMessage, e.getMessage());"},{"lineNumber":206,"author":{"gitId":"clarlzx"},"content":"        }"},{"lineNumber":207,"author":{"gitId":"clarlzx"},"content":""},{"lineNumber":208,"author":{"gitId":"clarlzx"},"content":"        try {"},{"lineNumber":209,"author":{"gitId":"clarlzx"},"content":"            Event.createEvent(\"event final exam /at night\");"},{"lineNumber":210,"author":{"gitId":"clarlzx"},"content":"            fail();"},{"lineNumber":211,"author":{"gitId":"clarlzx"},"content":"        } catch (ChatException e) {"},{"lineNumber":212,"author":{"gitId":"clarlzx"},"content":"            assertEquals(errorMessage, e.getMessage());"},{"lineNumber":213,"author":{"gitId":"clarlzx"},"content":"        }"},{"lineNumber":214,"author":{"gitId":"clarlzx"},"content":"        "},{"lineNumber":215,"author":{"gitId":"clarlzx"},"content":"    }"},{"lineNumber":216,"author":{"gitId":"clarlzx"},"content":""},{"lineNumber":217,"author":{"gitId":"clarlzx"},"content":"    @Test"},{"lineNumber":218,"author":{"gitId":"clarlzx"},"content":"    public void createEvent_noStartAndEndDateTime_chatException() {"},{"lineNumber":219,"author":{"gitId":"clarlzx"},"content":"        String errorMessage \u003d \"missing start and end date/time\\n\" + formatStr;"},{"lineNumber":220,"author":{"gitId":"clarlzx"},"content":""},{"lineNumber":221,"author":{"gitId":"clarlzx"},"content":"        try {"},{"lineNumber":222,"author":{"gitId":"clarlzx"},"content":"            Event.createEvent(\"event final exam /at \");"},{"lineNumber":223,"author":{"gitId":"clarlzx"},"content":"            fail();"},{"lineNumber":224,"author":{"gitId":"clarlzx"},"content":"        } catch (ChatException e) {"},{"lineNumber":225,"author":{"gitId":"clarlzx"},"content":"            assertEquals(errorMessage, e.getMessage());"},{"lineNumber":226,"author":{"gitId":"clarlzx"},"content":"        }"},{"lineNumber":227,"author":{"gitId":"clarlzx"},"content":"    }"},{"lineNumber":228,"author":{"gitId":"clarlzx"},"content":""},{"lineNumber":229,"author":{"gitId":"clarlzx"},"content":"    @Test"},{"lineNumber":230,"author":{"gitId":"clarlzx"},"content":"    public void createEvent_noStartOrEndDateTime_chatException() {"},{"lineNumber":231,"author":{"gitId":"clarlzx"},"content":"        String errorMessage \u003d \"missing start or end date/time\\n\" + formatStr;"},{"lineNumber":232,"author":{"gitId":"clarlzx"},"content":""},{"lineNumber":233,"author":{"gitId":"clarlzx"},"content":"        try {"},{"lineNumber":234,"author":{"gitId":"clarlzx"},"content":"            Event.createEvent(\"event final exam /at 01/10/2021 11:00 -\");"},{"lineNumber":235,"author":{"gitId":"clarlzx"},"content":"            fail();"},{"lineNumber":236,"author":{"gitId":"clarlzx"},"content":"        } catch (ChatException e) {"},{"lineNumber":237,"author":{"gitId":"clarlzx"},"content":"            assertEquals(errorMessage, e.getMessage());"},{"lineNumber":238,"author":{"gitId":"clarlzx"},"content":"        }"},{"lineNumber":239,"author":{"gitId":"clarlzx"},"content":""},{"lineNumber":240,"author":{"gitId":"clarlzx"},"content":"        try {"},{"lineNumber":241,"author":{"gitId":"clarlzx"},"content":"            Event.createEvent(\"event final exam /at 01/10/2021 11:00 - \");"},{"lineNumber":242,"author":{"gitId":"clarlzx"},"content":"            fail();"},{"lineNumber":243,"author":{"gitId":"clarlzx"},"content":"        } catch (ChatException e) {"},{"lineNumber":244,"author":{"gitId":"clarlzx"},"content":"            assertEquals(errorMessage, e.getMessage());"},{"lineNumber":245,"author":{"gitId":"clarlzx"},"content":"        }"},{"lineNumber":246,"author":{"gitId":"clarlzx"},"content":""},{"lineNumber":247,"author":{"gitId":"clarlzx"},"content":"    }"},{"lineNumber":248,"author":{"gitId":"clarlzx"},"content":"    "},{"lineNumber":249,"author":{"gitId":"clarlzx"},"content":"    @Test"},{"lineNumber":250,"author":{"gitId":"clarlzx"},"content":"    public void createEvent_wrongFormatStartOrEndDateTime_chatException() {"},{"lineNumber":251,"author":{"gitId":"clarlzx"},"content":"        String errorMessage \u003d \"Start or end date/time is of wrong format\\n\" + formatStr;"},{"lineNumber":252,"author":{"gitId":"clarlzx"},"content":""},{"lineNumber":253,"author":{"gitId":"clarlzx"},"content":"        try {"},{"lineNumber":254,"author":{"gitId":"clarlzx"},"content":"            Event.createEvent(\"event final exam /at 01/10/2021 11:00 - 01/10/2021\");"},{"lineNumber":255,"author":{"gitId":"clarlzx"},"content":"            fail();"},{"lineNumber":256,"author":{"gitId":"clarlzx"},"content":"        } catch (ChatException e) {"},{"lineNumber":257,"author":{"gitId":"clarlzx"},"content":"            assertEquals(errorMessage, e.getMessage());"},{"lineNumber":258,"author":{"gitId":"clarlzx"},"content":"        }"},{"lineNumber":259,"author":{"gitId":"clarlzx"},"content":"        "},{"lineNumber":260,"author":{"gitId":"clarlzx"},"content":"    }"},{"lineNumber":261,"author":{"gitId":"clarlzx"},"content":""},{"lineNumber":262,"author":{"gitId":"clarlzx"},"content":"    @Test"},{"lineNumber":263,"author":{"gitId":"clarlzx"},"content":"    public void createEvent_startAfterEndDateTime_chatException() {"},{"lineNumber":264,"author":{"gitId":"clarlzx"},"content":"        String errorMessage \u003d \"Start date/time is after end date/time\\n\" + formatStr;"},{"lineNumber":265,"author":{"gitId":"clarlzx"},"content":""},{"lineNumber":266,"author":{"gitId":"clarlzx"},"content":"        try {"},{"lineNumber":267,"author":{"gitId":"clarlzx"},"content":"            Event.createEvent(\"event final exam /at 01/10/2021 11:00 - 01/10/2021 09:00\");"},{"lineNumber":268,"author":{"gitId":"clarlzx"},"content":"            fail();"},{"lineNumber":269,"author":{"gitId":"clarlzx"},"content":"        } catch (ChatException e) {"},{"lineNumber":270,"author":{"gitId":"clarlzx"},"content":"            assertEquals(errorMessage, e.getMessage());"},{"lineNumber":271,"author":{"gitId":"clarlzx"},"content":"        }"},{"lineNumber":272,"author":{"gitId":"clarlzx"},"content":""},{"lineNumber":273,"author":{"gitId":"clarlzx"},"content":"    }"},{"lineNumber":274,"author":{"gitId":"clarlzx"},"content":""},{"lineNumber":275,"author":{"gitId":"clarlzx"},"content":"    @Test"},{"lineNumber":276,"author":{"gitId":"clarlzx"},"content":"    public void createEvent_correctFormat_chatException() {"},{"lineNumber":277,"author":{"gitId":"clarlzx"},"content":"        try {"},{"lineNumber":278,"author":{"gitId":"clarlzx"},"content":"            Event.createEvent(\"event final exam /at 20/03/2021 20:00 - 20/03/2021 21:00\");"},{"lineNumber":279,"author":{"gitId":"clarlzx"},"content":"        } catch (ChatException e) {"},{"lineNumber":280,"author":{"gitId":"clarlzx"},"content":"            fail();"},{"lineNumber":281,"author":{"gitId":"clarlzx"},"content":"        }"},{"lineNumber":282,"author":{"gitId":"clarlzx"},"content":"    }"},{"lineNumber":283,"author":{"gitId":"clarlzx"},"content":""},{"lineNumber":284,"author":{"gitId":"clarlzx"},"content":"    @Test"},{"lineNumber":285,"author":{"gitId":"clarlzx"},"content":"    public void allParameterStr_eventObjNotDone_commaSeparatedString() {"},{"lineNumber":286,"author":{"gitId":"clarlzx"},"content":"        assertEquals(\"E,false,final exam,20/03/2021 20:00,20/03/2021 21:00\","},{"lineNumber":287,"author":{"gitId":"clarlzx"},"content":"                new Event(false, \"final exam\", \"20/03/2021 20:00\", \"20/03/2021 21:00\").allParameterStr());"},{"lineNumber":288,"author":{"gitId":"clarlzx"},"content":"    }"},{"lineNumber":289,"author":{"gitId":"clarlzx"},"content":""},{"lineNumber":290,"author":{"gitId":"clarlzx"},"content":"    @Test"},{"lineNumber":291,"author":{"gitId":"clarlzx"},"content":"    public void allParameterStr_eventObjDone_commaSeparatedString() {"},{"lineNumber":292,"author":{"gitId":"clarlzx"},"content":"        assertEquals(\"E,true,final exam,20/03/2021 20:00,20/03/2021 21:00\","},{"lineNumber":293,"author":{"gitId":"clarlzx"},"content":"                new Event(true, \"final exam\", \"20/03/2021 20:00\", \"20/03/2021 21:00\").allParameterStr());"},{"lineNumber":294,"author":{"gitId":"clarlzx"},"content":"    }"},{"lineNumber":295,"author":{"gitId":"clarlzx"},"content":""},{"lineNumber":296,"author":{"gitId":"clarlzx"},"content":"    @Test"},{"lineNumber":297,"author":{"gitId":"clarlzx"},"content":"    public void toString_eventObjNotDoneSameDay_string() {"},{"lineNumber":298,"author":{"gitId":"clarlzx"},"content":"        assertEquals(\"[E][ ] final exam (at: 20 Mar 2021, 8:00PM - 9:00PM)\","},{"lineNumber":299,"author":{"gitId":"clarlzx"},"content":"                new Event(false, \"final exam\", \"20/03/2021 20:00\", \"20/03/2021 21:00\").toString());"},{"lineNumber":300,"author":{"gitId":"clarlzx"},"content":"    }"},{"lineNumber":301,"author":{"gitId":"clarlzx"},"content":""},{"lineNumber":302,"author":{"gitId":"clarlzx"},"content":"    @Test"},{"lineNumber":303,"author":{"gitId":"clarlzx"},"content":"    public void toString_eventObjNotDoneDiffDay_string() {"},{"lineNumber":304,"author":{"gitId":"clarlzx"},"content":"        assertEquals(\"[E][ ] final exam (at: 20 Mar 2021, 8:00PM - 21 Mar 2021, 8:00PM)\","},{"lineNumber":305,"author":{"gitId":"clarlzx"},"content":"                new Event(false, \"final exam\", \"20/03/2021 20:00\", \"21/03/2021 20:00\").toString());"},{"lineNumber":306,"author":{"gitId":"clarlzx"},"content":"    }"},{"lineNumber":307,"author":{"gitId":"clarlzx"},"content":""},{"lineNumber":308,"author":{"gitId":"clarlzx"},"content":"    @Test"},{"lineNumber":309,"author":{"gitId":"clarlzx"},"content":"    public void toString_eventObjDoneSameDay_string() {"},{"lineNumber":310,"author":{"gitId":"clarlzx"},"content":"        assertEquals(\"[E][X] final exam (at: 20 Mar 2021, 8:00PM - 9:00PM)\","},{"lineNumber":311,"author":{"gitId":"clarlzx"},"content":"                new Event(true, \"final exam\", \"20/03/2021 20:00\", \"20/03/2021 21:00\").toString());"},{"lineNumber":312,"author":{"gitId":"clarlzx"},"content":"    }"},{"lineNumber":313,"author":{"gitId":"clarlzx"},"content":""},{"lineNumber":314,"author":{"gitId":"clarlzx"},"content":"    @Test"},{"lineNumber":315,"author":{"gitId":"clarlzx"},"content":"    public void toString_eventObjDoneDiffDay_string() {"},{"lineNumber":316,"author":{"gitId":"clarlzx"},"content":"        assertEquals(\"[E][X] final exam (at: 20 Mar 2021, 8:00PM - 21 Mar 2021, 8:00PM)\","},{"lineNumber":317,"author":{"gitId":"clarlzx"},"content":"                new Event(true, \"final exam\", \"20/03/2021 20:00\", \"21/03/2021 20:00\").toString());"},{"lineNumber":318,"author":{"gitId":"clarlzx"},"content":"    }"},{"lineNumber":319,"author":{"gitId":"clarlzx"},"content":""},{"lineNumber":320,"author":{"gitId":"clarlzx"},"content":"}"},{"lineNumber":321,"author":{"gitId":"clarlzx"},"content":""}],"authorContributionMap":{"clarlzx":321}},{"path":"src/test/java/chat/task/TodoTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"clarlzx"},"content":"package chat.task;"},{"lineNumber":2,"author":{"gitId":"clarlzx"},"content":""},{"lineNumber":3,"author":{"gitId":"clarlzx"},"content":"import chat.ChatException;"},{"lineNumber":4,"author":{"gitId":"clarlzx"},"content":"import org.junit.jupiter.api.Test;"},{"lineNumber":5,"author":{"gitId":"clarlzx"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;"},{"lineNumber":6,"author":{"gitId":"clarlzx"},"content":"import static org.junit.jupiter.api.Assertions.fail;"},{"lineNumber":7,"author":{"gitId":"clarlzx"},"content":""},{"lineNumber":8,"author":{"gitId":"clarlzx"},"content":"/**"},{"lineNumber":9,"author":{"gitId":"clarlzx"},"content":" * Unit testing class for functions in Todo class"},{"lineNumber":10,"author":{"gitId":"clarlzx"},"content":" */"},{"lineNumber":11,"author":{"gitId":"clarlzx"},"content":""},{"lineNumber":12,"author":{"gitId":"clarlzx"},"content":"public class TodoTest {"},{"lineNumber":13,"author":{"gitId":"clarlzx"},"content":"    "},{"lineNumber":14,"author":{"gitId":"clarlzx"},"content":"    private static String formatStr \u003d \"Please input with this format:\\n\" + \"todo [name]\";"},{"lineNumber":15,"author":{"gitId":"clarlzx"},"content":"    "},{"lineNumber":16,"author":{"gitId":"clarlzx"},"content":"    @Test"},{"lineNumber":17,"author":{"gitId":"clarlzx"},"content":"    public void createTodo_wrongInstruction_chatException() {"},{"lineNumber":18,"author":{"gitId":"clarlzx"},"content":"        String errorMessage \u003d \"wrong instruction for todo\\n\" + formatStr;"},{"lineNumber":19,"author":{"gitId":"clarlzx"},"content":"        try {"},{"lineNumber":20,"author":{"gitId":"clarlzx"},"content":"            Todo.createTodo(\"deadline\");"},{"lineNumber":21,"author":{"gitId":"clarlzx"},"content":"            fail(); // the test should not reach this line"},{"lineNumber":22,"author":{"gitId":"clarlzx"},"content":"        } catch (ChatException e) {"},{"lineNumber":23,"author":{"gitId":"clarlzx"},"content":"            assertEquals(errorMessage, e.getMessage());"},{"lineNumber":24,"author":{"gitId":"clarlzx"},"content":"        }"},{"lineNumber":25,"author":{"gitId":"clarlzx"},"content":"    }"},{"lineNumber":26,"author":{"gitId":"clarlzx"},"content":""},{"lineNumber":27,"author":{"gitId":"clarlzx"},"content":"    @Test"},{"lineNumber":28,"author":{"gitId":"clarlzx"},"content":"    public void createTodo_onlyTodo_chatException() {"},{"lineNumber":29,"author":{"gitId":"clarlzx"},"content":"        String errorMessage \u003d \"todo name missing\\n\" + formatStr;"},{"lineNumber":30,"author":{"gitId":"clarlzx"},"content":"        try {"},{"lineNumber":31,"author":{"gitId":"clarlzx"},"content":"            Todo.createTodo(\"todo\");"},{"lineNumber":32,"author":{"gitId":"clarlzx"},"content":"            fail();"},{"lineNumber":33,"author":{"gitId":"clarlzx"},"content":"        } catch (ChatException e) {"},{"lineNumber":34,"author":{"gitId":"clarlzx"},"content":"            assertEquals(errorMessage, e.getMessage());"},{"lineNumber":35,"author":{"gitId":"clarlzx"},"content":"        }"},{"lineNumber":36,"author":{"gitId":"clarlzx"},"content":"    }"},{"lineNumber":37,"author":{"gitId":"clarlzx"},"content":""},{"lineNumber":38,"author":{"gitId":"clarlzx"},"content":"    @Test"},{"lineNumber":39,"author":{"gitId":"clarlzx"},"content":"    public void createTodo_todoOneSpace_chatException() {"},{"lineNumber":40,"author":{"gitId":"clarlzx"},"content":"        String errorMessage \u003d \"todo name missing\\n\" + formatStr;"},{"lineNumber":41,"author":{"gitId":"clarlzx"},"content":"        try {"},{"lineNumber":42,"author":{"gitId":"clarlzx"},"content":"            Todo.createTodo(\"todo\");"},{"lineNumber":43,"author":{"gitId":"clarlzx"},"content":"            fail();"},{"lineNumber":44,"author":{"gitId":"clarlzx"},"content":"        } catch (ChatException e) {"},{"lineNumber":45,"author":{"gitId":"clarlzx"},"content":"            assertEquals(errorMessage, e.getMessage());"},{"lineNumber":46,"author":{"gitId":"clarlzx"},"content":"        }"},{"lineNumber":47,"author":{"gitId":"clarlzx"},"content":"    }"},{"lineNumber":48,"author":{"gitId":"clarlzx"},"content":""},{"lineNumber":49,"author":{"gitId":"clarlzx"},"content":"    @Test"},{"lineNumber":50,"author":{"gitId":"clarlzx"},"content":"    public void createTodo_todoManySpaces_chatException() {"},{"lineNumber":51,"author":{"gitId":"clarlzx"},"content":"        String errorMessage \u003d \"todo name missing\\n\" + formatStr;"},{"lineNumber":52,"author":{"gitId":"clarlzx"},"content":"        try {"},{"lineNumber":53,"author":{"gitId":"clarlzx"},"content":"            Todo.createTodo(\"todo     \");"},{"lineNumber":54,"author":{"gitId":"clarlzx"},"content":"            fail();"},{"lineNumber":55,"author":{"gitId":"clarlzx"},"content":"        } catch (ChatException e) {"},{"lineNumber":56,"author":{"gitId":"clarlzx"},"content":"            assertEquals(errorMessage, e.getMessage());"},{"lineNumber":57,"author":{"gitId":"clarlzx"},"content":"        }"},{"lineNumber":58,"author":{"gitId":"clarlzx"},"content":"    }"},{"lineNumber":59,"author":{"gitId":"clarlzx"},"content":""},{"lineNumber":60,"author":{"gitId":"clarlzx"},"content":"    @Test"},{"lineNumber":61,"author":{"gitId":"clarlzx"},"content":"    public void createTodo_noSpaceBetweenTodoAndDescription_chatException() {"},{"lineNumber":62,"author":{"gitId":"clarlzx"},"content":"        String errorMessage \u003d \"no spacing after todo\\n\" + formatStr;"},{"lineNumber":63,"author":{"gitId":"clarlzx"},"content":"        try {"},{"lineNumber":64,"author":{"gitId":"clarlzx"},"content":"            Todo.createTodo(\"todoread book\");"},{"lineNumber":65,"author":{"gitId":"clarlzx"},"content":"            fail();"},{"lineNumber":66,"author":{"gitId":"clarlzx"},"content":"        } catch (ChatException e) {"},{"lineNumber":67,"author":{"gitId":"clarlzx"},"content":"            assertEquals(errorMessage, e.getMessage());"},{"lineNumber":68,"author":{"gitId":"clarlzx"},"content":"        }"},{"lineNumber":69,"author":{"gitId":"clarlzx"},"content":"    }"},{"lineNumber":70,"author":{"gitId":"clarlzx"},"content":""},{"lineNumber":71,"author":{"gitId":"clarlzx"},"content":"    @Test"},{"lineNumber":72,"author":{"gitId":"clarlzx"},"content":"    public void createTodo_correctFormat_chatException() {"},{"lineNumber":73,"author":{"gitId":"clarlzx"},"content":"        try {"},{"lineNumber":74,"author":{"gitId":"clarlzx"},"content":"            Todo.createTodo(\"todo read book\");"},{"lineNumber":75,"author":{"gitId":"clarlzx"},"content":"        } catch (ChatException e) {"},{"lineNumber":76,"author":{"gitId":"clarlzx"},"content":"            fail();"},{"lineNumber":77,"author":{"gitId":"clarlzx"},"content":"        }"},{"lineNumber":78,"author":{"gitId":"clarlzx"},"content":"    }"},{"lineNumber":79,"author":{"gitId":"clarlzx"},"content":"    "},{"lineNumber":80,"author":{"gitId":"clarlzx"},"content":"    @Test"},{"lineNumber":81,"author":{"gitId":"clarlzx"},"content":"    public void allParameterStr_todoObjNotDone_commaSeparatedString() {"},{"lineNumber":82,"author":{"gitId":"clarlzx"},"content":"        assertEquals(\"T,false,read book\", "},{"lineNumber":83,"author":{"gitId":"clarlzx"},"content":"                new Todo(false, \"read book\").allParameterStr());"},{"lineNumber":84,"author":{"gitId":"clarlzx"},"content":"    }"},{"lineNumber":85,"author":{"gitId":"clarlzx"},"content":""},{"lineNumber":86,"author":{"gitId":"clarlzx"},"content":"    @Test"},{"lineNumber":87,"author":{"gitId":"clarlzx"},"content":"    public void allParameterStr_todoObjDone_commaSeparatedString() {"},{"lineNumber":88,"author":{"gitId":"clarlzx"},"content":"        assertEquals(\"T,true,read book\","},{"lineNumber":89,"author":{"gitId":"clarlzx"},"content":"                new Todo(true, \"read book\").allParameterStr());"},{"lineNumber":90,"author":{"gitId":"clarlzx"},"content":"    }"},{"lineNumber":91,"author":{"gitId":"clarlzx"},"content":""},{"lineNumber":92,"author":{"gitId":"clarlzx"},"content":"    @Test"},{"lineNumber":93,"author":{"gitId":"clarlzx"},"content":"    public void toString_todoObjNotDone_string() {"},{"lineNumber":94,"author":{"gitId":"clarlzx"},"content":"        assertEquals(\"[T][ ] read book\","},{"lineNumber":95,"author":{"gitId":"clarlzx"},"content":"                new Todo(false, \"read book\").toString());"},{"lineNumber":96,"author":{"gitId":"clarlzx"},"content":"    }"},{"lineNumber":97,"author":{"gitId":"clarlzx"},"content":""},{"lineNumber":98,"author":{"gitId":"clarlzx"},"content":"    @Test"},{"lineNumber":99,"author":{"gitId":"clarlzx"},"content":"    public void toString_todoObjDone_string() {"},{"lineNumber":100,"author":{"gitId":"clarlzx"},"content":"        assertEquals(\"[T][X] read book\","},{"lineNumber":101,"author":{"gitId":"clarlzx"},"content":"                new Todo(true, \"read book\").toString());"},{"lineNumber":102,"author":{"gitId":"clarlzx"},"content":"    }"},{"lineNumber":103,"author":{"gitId":"clarlzx"},"content":"}"}],"authorContributionMap":{"clarlzx":103}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"clarlzx"},"content":""},{"lineNumber":2,"author":{"gitId":"clarlzx"},"content":"apple"},{"lineNumber":3,"author":{"gitId":"clarlzx"},"content":"banana rolls"},{"lineNumber":4,"author":{"gitId":"clarlzx"},"content":"list"},{"lineNumber":5,"author":{"gitId":"clarlzx"},"content":"done 1"},{"lineNumber":6,"author":{"gitId":"clarlzx"},"content":" todo"},{"lineNumber":7,"author":{"gitId":"clarlzx"},"content":"todo"},{"lineNumber":8,"author":{"gitId":"clarlzx"},"content":"todobuy groceries"},{"lineNumber":9,"author":{"gitId":"clarlzx"},"content":"todo "},{"lineNumber":10,"author":{"gitId":"clarlzx"},"content":"todo       "},{"lineNumber":11,"author":{"gitId":"clarlzx"},"content":"todo buy groceries"},{"lineNumber":12,"author":{"gitId":"clarlzx"},"content":"deadline"},{"lineNumber":13,"author":{"gitId":"clarlzx"},"content":"deadlineeat an apple"},{"lineNumber":14,"author":{"gitId":"clarlzx"},"content":"deadline "},{"lineNumber":15,"author":{"gitId":"clarlzx"},"content":"deadline     "},{"lineNumber":16,"author":{"gitId":"clarlzx"},"content":"deadline eat an apple"},{"lineNumber":17,"author":{"gitId":"clarlzx"},"content":"deadline eat an apple /by"},{"lineNumber":18,"author":{"gitId":"clarlzx"},"content":"deadline /by"},{"lineNumber":19,"author":{"gitId":"clarlzx"},"content":"deadline /by "},{"lineNumber":20,"author":{"gitId":"clarlzx"},"content":"deadline /by night"},{"lineNumber":21,"author":{"gitId":"clarlzx"},"content":"deadline eat an apple /by "},{"lineNumber":22,"author":{"gitId":"clarlzx"},"content":"deadline eat an apple /by /by"},{"lineNumber":23,"author":{"gitId":"clarlzx"},"content":"deadline eat an apple /by /by night"},{"lineNumber":24,"author":{"gitId":"clarlzx"},"content":"deadline eat an apple /by night /by"},{"lineNumber":25,"author":{"gitId":"clarlzx"},"content":"deadline eat an apple /by night"},{"lineNumber":26,"author":{"gitId":"clarlzx"},"content":"deadline eat an apple /by 30/01/2021 23:59"},{"lineNumber":27,"author":{"gitId":"clarlzx"},"content":"event"},{"lineNumber":28,"author":{"gitId":"clarlzx"},"content":"eventfinal exam"},{"lineNumber":29,"author":{"gitId":"clarlzx"},"content":"event "},{"lineNumber":30,"author":{"gitId":"clarlzx"},"content":"event       "},{"lineNumber":31,"author":{"gitId":"clarlzx"},"content":"event final exam"},{"lineNumber":32,"author":{"gitId":"clarlzx"},"content":"event final exam /at"},{"lineNumber":33,"author":{"gitId":"clarlzx"},"content":"event final exam /at "},{"lineNumber":34,"author":{"gitId":"clarlzx"},"content":"event /at"},{"lineNumber":35,"author":{"gitId":"clarlzx"},"content":"event /at "},{"lineNumber":36,"author":{"gitId":"clarlzx"},"content":"event /at Mon"},{"lineNumber":37,"author":{"gitId":"clarlzx"},"content":"event final exam /at Mon"},{"lineNumber":38,"author":{"gitId":"clarlzx"},"content":"event final exam /at Mon 2"},{"lineNumber":39,"author":{"gitId":"clarlzx"},"content":"event final exam /at Mon 2-"},{"lineNumber":40,"author":{"gitId":"clarlzx"},"content":"event final exam /at /at"},{"lineNumber":41,"author":{"gitId":"clarlzx"},"content":"event final exam /at /at "},{"lineNumber":42,"author":{"gitId":"clarlzx"},"content":"event final exam /at /at Mon 2-5"},{"lineNumber":43,"author":{"gitId":"clarlzx"},"content":"event final exam /at Mon 2-5 /at"},{"lineNumber":44,"author":{"gitId":"clarlzx"},"content":"event final exam /at Mon 2-5"},{"lineNumber":45,"author":{"gitId":"clarlzx"},"content":"event final exam /at 01/02/2021 11:00 - 01/02/2021 02:00"},{"lineNumber":46,"author":{"gitId":"clarlzx"},"content":"event final exam /at 01/02/2021 11:00 - 01/02/2021 12:00"},{"lineNumber":47,"author":{"gitId":"clarlzx"},"content":"event camp /at 01/02/2021 11:00 - 02/02/2021 12:00"},{"lineNumber":48,"author":{"gitId":"clarlzx"},"content":"delete 4"},{"lineNumber":49,"author":{"gitId":"clarlzx"},"content":"list"},{"lineNumber":50,"author":{"gitId":"clarlzx"},"content":"done"},{"lineNumber":51,"author":{"gitId":"clarlzx"},"content":"done1"},{"lineNumber":52,"author":{"gitId":"clarlzx"},"content":"done 9"},{"lineNumber":53,"author":{"gitId":"clarlzx"},"content":"done -1"},{"lineNumber":54,"author":{"gitId":"clarlzx"},"content":"done str"},{"lineNumber":55,"author":{"gitId":"clarlzx"},"content":"done 1"},{"lineNumber":56,"author":{"gitId":"clarlzx"},"content":"list"},{"lineNumber":57,"author":{"gitId":"clarlzx"},"content":"done 2"},{"lineNumber":58,"author":{"gitId":"clarlzx"},"content":"list"},{"lineNumber":59,"author":{"gitId":"clarlzx"},"content":"done 3"},{"lineNumber":60,"author":{"gitId":"clarlzx"},"content":"list"},{"lineNumber":61,"author":{"gitId":"clarlzx"},"content":"done 1"},{"lineNumber":62,"author":{"gitId":"clarlzx"},"content":"delete"},{"lineNumber":63,"author":{"gitId":"clarlzx"},"content":"delete1"},{"lineNumber":64,"author":{"gitId":"clarlzx"},"content":"delete -1 "},{"lineNumber":65,"author":{"gitId":"clarlzx"},"content":"delete 9"},{"lineNumber":66,"author":{"gitId":"clarlzx"},"content":"list"},{"lineNumber":67,"author":{"gitId":"clarlzx"},"content":"delete 1"},{"lineNumber":68,"author":{"gitId":"clarlzx"},"content":"list"},{"lineNumber":69,"author":{"gitId":"clarlzx"},"content":"todo finish hw"},{"lineNumber":70,"author":{"gitId":"clarlzx"},"content":"list"},{"lineNumber":71,"author":{"gitId":"clarlzx"},"content":"delete 2"},{"lineNumber":72,"author":{"gitId":"clarlzx"},"content":"list"},{"lineNumber":73,"author":{"gitId":"clarlzx"},"content":"delete 2"},{"lineNumber":74,"author":{"gitId":"clarlzx"},"content":"list"},{"lineNumber":75,"author":{"gitId":"clarlzx"},"content":"bye"}],"authorContributionMap":{"clarlzx":75}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF"},{"lineNumber":2,"author":{"gitId":"-"},"content":""},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin"},{"lineNumber":5,"author":{"gitId":"-"},"content":""},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run"},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT"},{"lineNumber":8,"author":{"gitId":"-"},"content":""},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder"},{"lineNumber":10,"author":{"gitId":"clarlzx"},"content":"javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\chat\\Chat.java"},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 ("},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1"},{"lineNumber":14,"author":{"gitId":"-"},"content":")"},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0"},{"lineNumber":16,"author":{"gitId":"-"},"content":""},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"},{"lineNumber":18,"author":{"gitId":"clarlzx"},"content":"java -classpath ..\\bin Chat \u003c input.txt \u003e ACTUAL.TXT"},{"lineNumber":19,"author":{"gitId":"-"},"content":""},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM compare the output to the expected output"},{"lineNumber":21,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT"}],"authorContributionMap":{"clarlzx":2,"-":19}}]
