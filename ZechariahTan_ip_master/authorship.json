[{"path":"README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"ZechariahTan"},"content":"# mike.mike project template"},{"lineNumber":2,"author":{"gitId":"-"},"content":""},{"lineNumber":3,"author":{"gitId":"-"},"content":"This is a project template for a greenfield Java project. It\u0027s named after the Java mascot _Duke_. Given below are instructions on how to use it."},{"lineNumber":4,"author":{"gitId":"-"},"content":""},{"lineNumber":5,"author":{"gitId":"-"},"content":"## Setting up in Intellij"},{"lineNumber":6,"author":{"gitId":"-"},"content":""},{"lineNumber":7,"author":{"gitId":"-"},"content":"Prerequisites: JDK 11, update Intellij to the most recent version."},{"lineNumber":8,"author":{"gitId":"-"},"content":""},{"lineNumber":9,"author":{"gitId":"-"},"content":"1. Open Intellij (if you are not in the welcome screen, click `File` \u003e `Close Project` to close the existing project first)"},{"lineNumber":10,"author":{"gitId":"-"},"content":"1. Open the project into Intellij as follows:"},{"lineNumber":11,"author":{"gitId":"-"},"content":"   1. Click `Open`."},{"lineNumber":12,"author":{"gitId":"-"},"content":"   1. Select the project directory, and click `OK`."},{"lineNumber":13,"author":{"gitId":"-"},"content":"   1. If there are any further prompts, accept the defaults."},{"lineNumber":14,"author":{"gitId":"-"},"content":"1. Configure the project to use **JDK 11** (not other versions) as explained in [here](https://www.jetbrains.com/help/idea/sdk.html#set-up-jdk)."},{"lineNumber":15,"author":{"gitId":"ZechariahTan"},"content":"1. After that, locate the `src/main/java/mike.mike.java` file, right-click it, and choose `Run mike.mike.main()`. If the setup is correct, you should see something like the below:"},{"lineNumber":16,"author":{"gitId":"-"},"content":"   ```"},{"lineNumber":17,"author":{"gitId":"-"},"content":"   Hello from"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    ____        _        "},{"lineNumber":19,"author":{"gitId":"-"},"content":"   |  _ \\ _   _| | _____ "},{"lineNumber":20,"author":{"gitId":"-"},"content":"   | | | | | | | |/ / _ \\"},{"lineNumber":21,"author":{"gitId":"-"},"content":"   | |_| | |_| |   \u003c  __/"},{"lineNumber":22,"author":{"gitId":"-"},"content":"   |____/ \\__,_|_|\\_\\___|"},{"lineNumber":23,"author":{"gitId":"-"},"content":"   ```"}],"authorContributionMap":{"ZechariahTan":2,"-":21}},{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027checkstyle\u0027"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027"},{"lineNumber":6,"author":{"gitId":"-"},"content":"}"},{"lineNumber":7,"author":{"gitId":"-"},"content":""},{"lineNumber":8,"author":{"gitId":"-"},"content":"repositories {"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    mavenCentral()"},{"lineNumber":10,"author":{"gitId":"-"},"content":"}"},{"lineNumber":11,"author":{"gitId":"-"},"content":""},{"lineNumber":12,"author":{"gitId":"-"},"content":"dependencies {"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.5.0\u0027"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.5.0\u0027"},{"lineNumber":15,"author":{"gitId":"ZechariahTan"},"content":"    String javaFxVersion \u003d \u002711\u0027"},{"lineNumber":16,"author":{"gitId":"ZechariahTan"},"content":""},{"lineNumber":17,"author":{"gitId":"ZechariahTan"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027"},{"lineNumber":18,"author":{"gitId":"ZechariahTan"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"},{"lineNumber":19,"author":{"gitId":"ZechariahTan"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"},{"lineNumber":20,"author":{"gitId":"ZechariahTan"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027"},{"lineNumber":21,"author":{"gitId":"ZechariahTan"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"},{"lineNumber":22,"author":{"gitId":"ZechariahTan"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"},{"lineNumber":23,"author":{"gitId":"ZechariahTan"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027"},{"lineNumber":24,"author":{"gitId":"ZechariahTan"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"},{"lineNumber":25,"author":{"gitId":"ZechariahTan"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"},{"lineNumber":26,"author":{"gitId":"ZechariahTan"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027"},{"lineNumber":27,"author":{"gitId":"ZechariahTan"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"},{"lineNumber":28,"author":{"gitId":"ZechariahTan"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"},{"lineNumber":29,"author":{"gitId":"-"},"content":"}"},{"lineNumber":30,"author":{"gitId":"-"},"content":""},{"lineNumber":31,"author":{"gitId":"-"},"content":"test {"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    useJUnitPlatform()"},{"lineNumber":33,"author":{"gitId":"-"},"content":""},{"lineNumber":34,"author":{"gitId":"-"},"content":"    testLogging {"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\""},{"lineNumber":36,"author":{"gitId":"-"},"content":""},{"lineNumber":37,"author":{"gitId":"-"},"content":"        showExceptions true"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\""},{"lineNumber":39,"author":{"gitId":"-"},"content":"        showCauses true"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        showStackTraces true"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":43,"author":{"gitId":"-"},"content":"}"},{"lineNumber":44,"author":{"gitId":"-"},"content":""},{"lineNumber":45,"author":{"gitId":"-"},"content":"application {"},{"lineNumber":46,"author":{"gitId":"ZechariahTan"},"content":"    mainClassName \u003d \"mike.Main\""},{"lineNumber":47,"author":{"gitId":"-"},"content":"}"},{"lineNumber":48,"author":{"gitId":"-"},"content":""},{"lineNumber":49,"author":{"gitId":"-"},"content":"shadowJar {"},{"lineNumber":50,"author":{"gitId":"ZechariahTan"},"content":"    archiveBaseName \u003d \"mike\""},{"lineNumber":51,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null"},{"lineNumber":52,"author":{"gitId":"-"},"content":"}"},{"lineNumber":53,"author":{"gitId":"-"},"content":""},{"lineNumber":54,"author":{"gitId":"-"},"content":"checkstyle {"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    toolVersion \u003d \u00278.29\u0027"},{"lineNumber":56,"author":{"gitId":"-"},"content":"}"},{"lineNumber":57,"author":{"gitId":"-"},"content":""},{"lineNumber":58,"author":{"gitId":"-"},"content":"run{"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in"},{"lineNumber":60,"author":{"gitId":"-"},"content":"}"}],"authorContributionMap":{"ZechariahTan":16,"-":44}},{"path":"data/TodoList.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"ZechariahTan"},"content":"1. [E] [X] 123 (at: 12 Dec 1212, 12:12 PM)"},{"lineNumber":2,"author":{"gitId":"ZechariahTan"},"content":"2. [T] [ ] 123"},{"lineNumber":3,"author":{"gitId":"ZechariahTan"},"content":"3. [T] [ ] 1234"},{"lineNumber":4,"author":{"gitId":"ZechariahTan"},"content":"4. [D] [ ] abc (by: 12 Dec 1212, 12:12 PM)"},{"lineNumber":5,"author":{"gitId":"ZechariahTan"},"content":"5. [E] [ ] 123 (at: 12 Dec 1212, 12:12 PM)"},{"lineNumber":6,"author":{"gitId":"ZechariahTan"},"content":"6. [T] [ ] 123"}],"authorContributionMap":{"ZechariahTan":6}},{"path":"src/main/java/DialogBox.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ZechariahTan"},"content":"import java.io.IOException;"},{"lineNumber":2,"author":{"gitId":"ZechariahTan"},"content":"import java.util.Collections;"},{"lineNumber":3,"author":{"gitId":"ZechariahTan"},"content":""},{"lineNumber":4,"author":{"gitId":"ZechariahTan"},"content":"import javafx.collections.FXCollections;"},{"lineNumber":5,"author":{"gitId":"ZechariahTan"},"content":"import javafx.collections.ObservableList;"},{"lineNumber":6,"author":{"gitId":"ZechariahTan"},"content":"import javafx.fxml.FXML;"},{"lineNumber":7,"author":{"gitId":"ZechariahTan"},"content":"import javafx.fxml.FXMLLoader;"},{"lineNumber":8,"author":{"gitId":"ZechariahTan"},"content":"import javafx.geometry.Pos;"},{"lineNumber":9,"author":{"gitId":"ZechariahTan"},"content":"import javafx.scene.Node;"},{"lineNumber":10,"author":{"gitId":"ZechariahTan"},"content":"import javafx.scene.control.Label;"},{"lineNumber":11,"author":{"gitId":"ZechariahTan"},"content":"import javafx.scene.image.Image;"},{"lineNumber":12,"author":{"gitId":"ZechariahTan"},"content":"import javafx.scene.image.ImageView;"},{"lineNumber":13,"author":{"gitId":"ZechariahTan"},"content":"import javafx.scene.layout.HBox;"},{"lineNumber":14,"author":{"gitId":"ZechariahTan"},"content":""},{"lineNumber":15,"author":{"gitId":"ZechariahTan"},"content":"/**"},{"lineNumber":16,"author":{"gitId":"ZechariahTan"},"content":" * An example of a custom control using FXML."},{"lineNumber":17,"author":{"gitId":"ZechariahTan"},"content":" * This control represents a dialog box consisting of an ImageView to represent the speaker\u0027s face and a label"},{"lineNumber":18,"author":{"gitId":"ZechariahTan"},"content":" * containing text from the speaker."},{"lineNumber":19,"author":{"gitId":"ZechariahTan"},"content":" */"},{"lineNumber":20,"author":{"gitId":"ZechariahTan"},"content":"public class DialogBox extends HBox {"},{"lineNumber":21,"author":{"gitId":"ZechariahTan"},"content":"    @FXML"},{"lineNumber":22,"author":{"gitId":"ZechariahTan"},"content":"    private Label dialog;"},{"lineNumber":23,"author":{"gitId":"ZechariahTan"},"content":"    @FXML"},{"lineNumber":24,"author":{"gitId":"ZechariahTan"},"content":"    private ImageView displayPicture;"},{"lineNumber":25,"author":{"gitId":"ZechariahTan"},"content":""},{"lineNumber":26,"author":{"gitId":"ZechariahTan"},"content":"    private DialogBox(String text, Image img) {"},{"lineNumber":27,"author":{"gitId":"ZechariahTan"},"content":"        try {"},{"lineNumber":28,"author":{"gitId":"ZechariahTan"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(\"/view/DialogBox.fxml\"));"},{"lineNumber":29,"author":{"gitId":"ZechariahTan"},"content":"            fxmlLoader.setController(this);"},{"lineNumber":30,"author":{"gitId":"ZechariahTan"},"content":"            fxmlLoader.setRoot(this);"},{"lineNumber":31,"author":{"gitId":"ZechariahTan"},"content":"            fxmlLoader.load();"},{"lineNumber":32,"author":{"gitId":"ZechariahTan"},"content":"        } catch (IOException e) {"},{"lineNumber":33,"author":{"gitId":"ZechariahTan"},"content":"            e.printStackTrace();"},{"lineNumber":34,"author":{"gitId":"ZechariahTan"},"content":"        }"},{"lineNumber":35,"author":{"gitId":"ZechariahTan"},"content":""},{"lineNumber":36,"author":{"gitId":"ZechariahTan"},"content":"        dialog.setText(text);"},{"lineNumber":37,"author":{"gitId":"ZechariahTan"},"content":"        displayPicture.setImage(img);"},{"lineNumber":38,"author":{"gitId":"ZechariahTan"},"content":"    }"},{"lineNumber":39,"author":{"gitId":"ZechariahTan"},"content":""},{"lineNumber":40,"author":{"gitId":"ZechariahTan"},"content":"    /**"},{"lineNumber":41,"author":{"gitId":"ZechariahTan"},"content":"     * Flips the dialog box such that the ImageView is on the left and text on the right."},{"lineNumber":42,"author":{"gitId":"ZechariahTan"},"content":"     */"},{"lineNumber":43,"author":{"gitId":"ZechariahTan"},"content":"    private void flip() {"},{"lineNumber":44,"author":{"gitId":"ZechariahTan"},"content":"        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());"},{"lineNumber":45,"author":{"gitId":"ZechariahTan"},"content":"        Collections.reverse(tmp);"},{"lineNumber":46,"author":{"gitId":"ZechariahTan"},"content":"        getChildren().setAll(tmp);"},{"lineNumber":47,"author":{"gitId":"ZechariahTan"},"content":"        setAlignment(Pos.TOP_LEFT);"},{"lineNumber":48,"author":{"gitId":"ZechariahTan"},"content":"    }"},{"lineNumber":49,"author":{"gitId":"ZechariahTan"},"content":""},{"lineNumber":50,"author":{"gitId":"ZechariahTan"},"content":"    public static DialogBox getUserDialog(String text, Image img) {"},{"lineNumber":51,"author":{"gitId":"ZechariahTan"},"content":"        return new DialogBox(text, img);"},{"lineNumber":52,"author":{"gitId":"ZechariahTan"},"content":"    }"},{"lineNumber":53,"author":{"gitId":"ZechariahTan"},"content":""},{"lineNumber":54,"author":{"gitId":"ZechariahTan"},"content":"    public static DialogBox getDukeDialog(String text, Image img) {"},{"lineNumber":55,"author":{"gitId":"ZechariahTan"},"content":"        var db \u003d new DialogBox(text, img);"},{"lineNumber":56,"author":{"gitId":"ZechariahTan"},"content":"        db.flip();"},{"lineNumber":57,"author":{"gitId":"ZechariahTan"},"content":"        return db;"},{"lineNumber":58,"author":{"gitId":"ZechariahTan"},"content":"    }"},{"lineNumber":59,"author":{"gitId":"ZechariahTan"},"content":"}"}],"authorContributionMap":{"ZechariahTan":59}},{"path":"src/main/java/Launcher.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ZechariahTan"},"content":"import javafx.application.Application;"},{"lineNumber":2,"author":{"gitId":"ZechariahTan"},"content":""},{"lineNumber":3,"author":{"gitId":"ZechariahTan"},"content":"/**"},{"lineNumber":4,"author":{"gitId":"ZechariahTan"},"content":" * A launcher class to workaround classpath issues."},{"lineNumber":5,"author":{"gitId":"ZechariahTan"},"content":" */"},{"lineNumber":6,"author":{"gitId":"ZechariahTan"},"content":"public class Launcher {"},{"lineNumber":7,"author":{"gitId":"ZechariahTan"},"content":"    public static void main(String[] args) {"},{"lineNumber":8,"author":{"gitId":"ZechariahTan"},"content":"        Application.launch(Main.class, args);"},{"lineNumber":9,"author":{"gitId":"ZechariahTan"},"content":"    }"},{"lineNumber":10,"author":{"gitId":"ZechariahTan"},"content":"}"}],"authorContributionMap":{"ZechariahTan":10}},{"path":"src/main/java/Main.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ZechariahTan"},"content":"import java.io.IOException;"},{"lineNumber":2,"author":{"gitId":"ZechariahTan"},"content":""},{"lineNumber":3,"author":{"gitId":"ZechariahTan"},"content":"import javafx.application.Application;"},{"lineNumber":4,"author":{"gitId":"ZechariahTan"},"content":"import javafx.fxml.FXMLLoader;"},{"lineNumber":5,"author":{"gitId":"ZechariahTan"},"content":"import javafx.scene.Scene;"},{"lineNumber":6,"author":{"gitId":"ZechariahTan"},"content":"import javafx.scene.layout.AnchorPane;"},{"lineNumber":7,"author":{"gitId":"ZechariahTan"},"content":"import javafx.stage.Stage;"},{"lineNumber":8,"author":{"gitId":"ZechariahTan"},"content":""},{"lineNumber":9,"author":{"gitId":"ZechariahTan"},"content":"import mike.Mike;"},{"lineNumber":10,"author":{"gitId":"ZechariahTan"},"content":""},{"lineNumber":11,"author":{"gitId":"ZechariahTan"},"content":"public class Main extends Application{"},{"lineNumber":12,"author":{"gitId":"ZechariahTan"},"content":""},{"lineNumber":13,"author":{"gitId":"ZechariahTan"},"content":"    Mike mike \u003d new Mike();"},{"lineNumber":14,"author":{"gitId":"ZechariahTan"},"content":""},{"lineNumber":15,"author":{"gitId":"ZechariahTan"},"content":"    @Override"},{"lineNumber":16,"author":{"gitId":"ZechariahTan"},"content":"    public void start(Stage stage) {"},{"lineNumber":17,"author":{"gitId":"ZechariahTan"},"content":"        try {"},{"lineNumber":18,"author":{"gitId":"ZechariahTan"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(Main.class.getResource(\"/view/MainWindow.fxml\"));"},{"lineNumber":19,"author":{"gitId":"ZechariahTan"},"content":"            AnchorPane ap \u003d fxmlLoader.load();"},{"lineNumber":20,"author":{"gitId":"ZechariahTan"},"content":"            Scene scene \u003d new Scene(ap);"},{"lineNumber":21,"author":{"gitId":"ZechariahTan"},"content":"            stage.setScene(scene);"},{"lineNumber":22,"author":{"gitId":"ZechariahTan"},"content":"            fxmlLoader.\u003cMainWindow\u003egetController().setMike(mike);"},{"lineNumber":23,"author":{"gitId":"ZechariahTan"},"content":"            stage.show();"},{"lineNumber":24,"author":{"gitId":"ZechariahTan"},"content":"        } catch (IOException e) {"},{"lineNumber":25,"author":{"gitId":"ZechariahTan"},"content":"            e.printStackTrace();"},{"lineNumber":26,"author":{"gitId":"ZechariahTan"},"content":"        }"},{"lineNumber":27,"author":{"gitId":"ZechariahTan"},"content":"    }"},{"lineNumber":28,"author":{"gitId":"ZechariahTan"},"content":"}"}],"authorContributionMap":{"ZechariahTan":28}},{"path":"src/main/java/MainWindow.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ZechariahTan"},"content":"import command.Command;"},{"lineNumber":2,"author":{"gitId":"ZechariahTan"},"content":"import javafx.fxml.FXML;"},{"lineNumber":3,"author":{"gitId":"ZechariahTan"},"content":"import javafx.scene.control.Button;"},{"lineNumber":4,"author":{"gitId":"ZechariahTan"},"content":"import javafx.scene.control.ScrollPane;"},{"lineNumber":5,"author":{"gitId":"ZechariahTan"},"content":"import javafx.scene.control.TextField;"},{"lineNumber":6,"author":{"gitId":"ZechariahTan"},"content":"import javafx.scene.image.Image;"},{"lineNumber":7,"author":{"gitId":"ZechariahTan"},"content":"import javafx.scene.layout.AnchorPane;"},{"lineNumber":8,"author":{"gitId":"ZechariahTan"},"content":"import javafx.scene.layout.VBox;"},{"lineNumber":9,"author":{"gitId":"ZechariahTan"},"content":"import mike.Mike;"},{"lineNumber":10,"author":{"gitId":"ZechariahTan"},"content":"import mike.Parser;"},{"lineNumber":11,"author":{"gitId":"ZechariahTan"},"content":""},{"lineNumber":12,"author":{"gitId":"ZechariahTan"},"content":"/**"},{"lineNumber":13,"author":{"gitId":"ZechariahTan"},"content":" * Controller for MainWindow. Provides the layout for the other controls."},{"lineNumber":14,"author":{"gitId":"ZechariahTan"},"content":" */"},{"lineNumber":15,"author":{"gitId":"ZechariahTan"},"content":"public class MainWindow extends AnchorPane {"},{"lineNumber":16,"author":{"gitId":"ZechariahTan"},"content":"    @FXML"},{"lineNumber":17,"author":{"gitId":"ZechariahTan"},"content":"    private ScrollPane scrollPane;"},{"lineNumber":18,"author":{"gitId":"ZechariahTan"},"content":"    @FXML"},{"lineNumber":19,"author":{"gitId":"ZechariahTan"},"content":"    private VBox dialogContainer;"},{"lineNumber":20,"author":{"gitId":"ZechariahTan"},"content":"    @FXML"},{"lineNumber":21,"author":{"gitId":"ZechariahTan"},"content":"    private TextField userInput;"},{"lineNumber":22,"author":{"gitId":"ZechariahTan"},"content":"    @FXML"},{"lineNumber":23,"author":{"gitId":"ZechariahTan"},"content":"    private Button sendButton;"},{"lineNumber":24,"author":{"gitId":"ZechariahTan"},"content":""},{"lineNumber":25,"author":{"gitId":"ZechariahTan"},"content":"    private Mike mike;"},{"lineNumber":26,"author":{"gitId":"ZechariahTan"},"content":""},{"lineNumber":27,"author":{"gitId":"ZechariahTan"},"content":"    private Image userImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaUser.png\"));"},{"lineNumber":28,"author":{"gitId":"ZechariahTan"},"content":"    private Image dukeImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaDuke.png\"));"},{"lineNumber":29,"author":{"gitId":"ZechariahTan"},"content":""},{"lineNumber":30,"author":{"gitId":"ZechariahTan"},"content":"    @FXML"},{"lineNumber":31,"author":{"gitId":"ZechariahTan"},"content":"    public void initialize() {"},{"lineNumber":32,"author":{"gitId":"ZechariahTan"},"content":"        scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());"},{"lineNumber":33,"author":{"gitId":"ZechariahTan"},"content":"    }"},{"lineNumber":34,"author":{"gitId":"ZechariahTan"},"content":""},{"lineNumber":35,"author":{"gitId":"ZechariahTan"},"content":"    public void setMike(Mike m) {"},{"lineNumber":36,"author":{"gitId":"ZechariahTan"},"content":"        mike \u003d m;"},{"lineNumber":37,"author":{"gitId":"ZechariahTan"},"content":"        m.mikeInit();"},{"lineNumber":38,"author":{"gitId":"ZechariahTan"},"content":"    }"},{"lineNumber":39,"author":{"gitId":"ZechariahTan"},"content":""},{"lineNumber":40,"author":{"gitId":"ZechariahTan"},"content":"    /**"},{"lineNumber":41,"author":{"gitId":"ZechariahTan"},"content":"     * Creates two dialog boxes, one echoing user input and the other containing Duke\u0027s reply and then appends them to"},{"lineNumber":42,"author":{"gitId":"ZechariahTan"},"content":"     * the dialog container. Clears the user input after processing."},{"lineNumber":43,"author":{"gitId":"ZechariahTan"},"content":"     */"},{"lineNumber":44,"author":{"gitId":"ZechariahTan"},"content":"    @FXML"},{"lineNumber":45,"author":{"gitId":"ZechariahTan"},"content":"    private void handleUserInput() {"},{"lineNumber":46,"author":{"gitId":"ZechariahTan"},"content":"        String input \u003d userInput.getText();"},{"lineNumber":47,"author":{"gitId":"ZechariahTan"},"content":"        Command inputCommand \u003d Parser.parseInput(input);"},{"lineNumber":48,"author":{"gitId":"ZechariahTan"},"content":"        String response \u003d mike.getResponse(inputCommand);"},{"lineNumber":49,"author":{"gitId":"ZechariahTan"},"content":"        dialogContainer.getChildren().addAll("},{"lineNumber":50,"author":{"gitId":"ZechariahTan"},"content":"                DialogBox.getUserDialog(input, userImage),"},{"lineNumber":51,"author":{"gitId":"ZechariahTan"},"content":"                DialogBox.getDukeDialog(response, dukeImage)"},{"lineNumber":52,"author":{"gitId":"ZechariahTan"},"content":"        );"},{"lineNumber":53,"author":{"gitId":"ZechariahTan"},"content":"        userInput.clear();"},{"lineNumber":54,"author":{"gitId":"ZechariahTan"},"content":"    }"},{"lineNumber":55,"author":{"gitId":"ZechariahTan"},"content":"}"}],"authorContributionMap":{"ZechariahTan":55}},{"path":"src/main/java/command/AddCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ZechariahTan"},"content":"package command;"},{"lineNumber":2,"author":{"gitId":"ZechariahTan"},"content":"import mike.TaskList;"},{"lineNumber":3,"author":{"gitId":"ZechariahTan"},"content":"import task.Task;"},{"lineNumber":4,"author":{"gitId":"ZechariahTan"},"content":"import task.TodoTask;"},{"lineNumber":5,"author":{"gitId":"ZechariahTan"},"content":""},{"lineNumber":6,"author":{"gitId":"ZechariahTan"},"content":"public abstract class AddCommand implements Command {"},{"lineNumber":7,"author":{"gitId":"ZechariahTan"},"content":"    protected String taskDescription;"},{"lineNumber":8,"author":{"gitId":"ZechariahTan"},"content":"    protected TaskList taskList;"},{"lineNumber":9,"author":{"gitId":"ZechariahTan"},"content":"    protected Task taskToAdd;"},{"lineNumber":10,"author":{"gitId":"ZechariahTan"},"content":""},{"lineNumber":11,"author":{"gitId":"ZechariahTan"},"content":""},{"lineNumber":12,"author":{"gitId":"ZechariahTan"},"content":"    public AddCommand(String taskDescription) {"},{"lineNumber":13,"author":{"gitId":"ZechariahTan"},"content":"        this.taskDescription \u003d taskDescription;"},{"lineNumber":14,"author":{"gitId":"ZechariahTan"},"content":"    }"},{"lineNumber":15,"author":{"gitId":"ZechariahTan"},"content":""},{"lineNumber":16,"author":{"gitId":"ZechariahTan"},"content":"    /**"},{"lineNumber":17,"author":{"gitId":"ZechariahTan"},"content":"     * Checks if chatbot should exit after command"},{"lineNumber":18,"author":{"gitId":"ZechariahTan"},"content":"     *"},{"lineNumber":19,"author":{"gitId":"ZechariahTan"},"content":"     * @return value of isExitCommand in Command.Command objects"},{"lineNumber":20,"author":{"gitId":"ZechariahTan"},"content":"     */"},{"lineNumber":21,"author":{"gitId":"ZechariahTan"},"content":"    @Override"},{"lineNumber":22,"author":{"gitId":"ZechariahTan"},"content":"    public boolean isExitCommand() {"},{"lineNumber":23,"author":{"gitId":"ZechariahTan"},"content":"        return false;"},{"lineNumber":24,"author":{"gitId":"ZechariahTan"},"content":"    }"},{"lineNumber":25,"author":{"gitId":"ZechariahTan"},"content":""},{"lineNumber":26,"author":{"gitId":"ZechariahTan"},"content":"    /**"},{"lineNumber":27,"author":{"gitId":"ZechariahTan"},"content":"     * Add task to task list provided"},{"lineNumber":28,"author":{"gitId":"ZechariahTan"},"content":"     * @param taskList TaskList object to add the task to"},{"lineNumber":29,"author":{"gitId":"ZechariahTan"},"content":"     * @return TaskList object after adding task to the list"},{"lineNumber":30,"author":{"gitId":"ZechariahTan"},"content":"     */"},{"lineNumber":31,"author":{"gitId":"ZechariahTan"},"content":"    @Override"},{"lineNumber":32,"author":{"gitId":"ZechariahTan"},"content":"    public TaskList runCommand(TaskList taskList) {"},{"lineNumber":33,"author":{"gitId":"ZechariahTan"},"content":"        this.taskList \u003d taskList;"},{"lineNumber":34,"author":{"gitId":"ZechariahTan"},"content":"        this.taskToAdd \u003d new TodoTask(this.taskDescription);"},{"lineNumber":35,"author":{"gitId":"ZechariahTan"},"content":"        taskList.addTaskToList(taskToAdd);"},{"lineNumber":36,"author":{"gitId":"ZechariahTan"},"content":"        return taskList;"},{"lineNumber":37,"author":{"gitId":"ZechariahTan"},"content":"    }"},{"lineNumber":38,"author":{"gitId":"ZechariahTan"},"content":""},{"lineNumber":39,"author":{"gitId":"ZechariahTan"},"content":"    /**"},{"lineNumber":40,"author":{"gitId":"ZechariahTan"},"content":"     * Get response to be encapsulated in the output handler"},{"lineNumber":41,"author":{"gitId":"ZechariahTan"},"content":"     * @return Formatted string response"},{"lineNumber":42,"author":{"gitId":"ZechariahTan"},"content":"     */"},{"lineNumber":43,"author":{"gitId":"ZechariahTan"},"content":"    @Override"},{"lineNumber":44,"author":{"gitId":"ZechariahTan"},"content":"    public String getResponse() {"},{"lineNumber":45,"author":{"gitId":"ZechariahTan"},"content":"        return String.format("},{"lineNumber":46,"author":{"gitId":"ZechariahTan"},"content":"                \"Got it. I\u0027ve added this task: \\n\""},{"lineNumber":47,"author":{"gitId":"ZechariahTan"},"content":"                        + \"       %s\\n\""},{"lineNumber":48,"author":{"gitId":"ZechariahTan"},"content":"                        + \"Now you have %d tasks in the list.\","},{"lineNumber":49,"author":{"gitId":"ZechariahTan"},"content":"                this.taskToAdd.toString(), this.taskList.getNumTasks());"},{"lineNumber":50,"author":{"gitId":"ZechariahTan"},"content":"    }"},{"lineNumber":51,"author":{"gitId":"ZechariahTan"},"content":"}"}],"authorContributionMap":{"ZechariahTan":51}},{"path":"src/main/java/command/ByeCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ZechariahTan"},"content":"package command;"},{"lineNumber":2,"author":{"gitId":"ZechariahTan"},"content":"import mike.TaskList;"},{"lineNumber":3,"author":{"gitId":"ZechariahTan"},"content":""},{"lineNumber":4,"author":{"gitId":"ZechariahTan"},"content":"public class ByeCommand implements Command {"},{"lineNumber":5,"author":{"gitId":"ZechariahTan"},"content":""},{"lineNumber":6,"author":{"gitId":"ZechariahTan"},"content":"    public ByeCommand() { }"},{"lineNumber":7,"author":{"gitId":"ZechariahTan"},"content":""},{"lineNumber":8,"author":{"gitId":"ZechariahTan"},"content":"    @Override"},{"lineNumber":9,"author":{"gitId":"ZechariahTan"},"content":"    public boolean isExitCommand() {"},{"lineNumber":10,"author":{"gitId":"ZechariahTan"},"content":"        return true;"},{"lineNumber":11,"author":{"gitId":"ZechariahTan"},"content":"    }"},{"lineNumber":12,"author":{"gitId":"ZechariahTan"},"content":""},{"lineNumber":13,"author":{"gitId":"ZechariahTan"},"content":"    /**"},{"lineNumber":14,"author":{"gitId":"ZechariahTan"},"content":"     * Perform no operations on TaskList object"},{"lineNumber":15,"author":{"gitId":"ZechariahTan"},"content":"     * Accepts and returns TaskList due to compatibility"},{"lineNumber":16,"author":{"gitId":"ZechariahTan"},"content":"     * @param taskList tasklist provided"},{"lineNumber":17,"author":{"gitId":"ZechariahTan"},"content":"     * @return unmodified tasklist"},{"lineNumber":18,"author":{"gitId":"ZechariahTan"},"content":"     */"},{"lineNumber":19,"author":{"gitId":"ZechariahTan"},"content":"    @Override"},{"lineNumber":20,"author":{"gitId":"ZechariahTan"},"content":"    public TaskList runCommand(TaskList taskList) {"},{"lineNumber":21,"author":{"gitId":"ZechariahTan"},"content":"        return taskList;"},{"lineNumber":22,"author":{"gitId":"ZechariahTan"},"content":"    }"},{"lineNumber":23,"author":{"gitId":"ZechariahTan"},"content":""},{"lineNumber":24,"author":{"gitId":"ZechariahTan"},"content":"    /**"},{"lineNumber":25,"author":{"gitId":"ZechariahTan"},"content":"     * Returns goodbye message."},{"lineNumber":26,"author":{"gitId":"ZechariahTan"},"content":"     * @return String of goodbye message"},{"lineNumber":27,"author":{"gitId":"ZechariahTan"},"content":"     */"},{"lineNumber":28,"author":{"gitId":"ZechariahTan"},"content":"    @Override"},{"lineNumber":29,"author":{"gitId":"ZechariahTan"},"content":"    public String getResponse() {"},{"lineNumber":30,"author":{"gitId":"ZechariahTan"},"content":"        return \"Bye. Hope to see you again soon!\";"},{"lineNumber":31,"author":{"gitId":"ZechariahTan"},"content":"    }"},{"lineNumber":32,"author":{"gitId":"ZechariahTan"},"content":"}"}],"authorContributionMap":{"ZechariahTan":32}},{"path":"src/main/java/command/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ZechariahTan"},"content":"package command;"},{"lineNumber":2,"author":{"gitId":"ZechariahTan"},"content":"import exception.MikeCommandExecutionException;"},{"lineNumber":3,"author":{"gitId":"ZechariahTan"},"content":"import mike.TaskList;"},{"lineNumber":4,"author":{"gitId":"ZechariahTan"},"content":""},{"lineNumber":5,"author":{"gitId":"ZechariahTan"},"content":"public interface Command {"},{"lineNumber":6,"author":{"gitId":"ZechariahTan"},"content":"    /**"},{"lineNumber":7,"author":{"gitId":"ZechariahTan"},"content":"     * Checks if chatbot should exit after command"},{"lineNumber":8,"author":{"gitId":"ZechariahTan"},"content":"     *"},{"lineNumber":9,"author":{"gitId":"ZechariahTan"},"content":"     * @return value of isExitCommand in Command.Command objects"},{"lineNumber":10,"author":{"gitId":"ZechariahTan"},"content":"     */"},{"lineNumber":11,"author":{"gitId":"ZechariahTan"},"content":"    boolean isExitCommand();"},{"lineNumber":12,"author":{"gitId":"ZechariahTan"},"content":""},{"lineNumber":13,"author":{"gitId":"ZechariahTan"},"content":"    /**"},{"lineNumber":14,"author":{"gitId":"ZechariahTan"},"content":"     * Executes the command on the taskList"},{"lineNumber":15,"author":{"gitId":"ZechariahTan"},"content":"     *"},{"lineNumber":16,"author":{"gitId":"ZechariahTan"},"content":"     * @return resultant tasklist after command is run"},{"lineNumber":17,"author":{"gitId":"ZechariahTan"},"content":"     */"},{"lineNumber":18,"author":{"gitId":"ZechariahTan"},"content":"    /*TODO change exception thrown*/"},{"lineNumber":19,"author":{"gitId":"ZechariahTan"},"content":"    TaskList runCommand(TaskList taskList) throws MikeCommandExecutionException;"},{"lineNumber":20,"author":{"gitId":"ZechariahTan"},"content":""},{"lineNumber":21,"author":{"gitId":"ZechariahTan"},"content":"    /**"},{"lineNumber":22,"author":{"gitId":"ZechariahTan"},"content":"     * Gets the response of the command"},{"lineNumber":23,"author":{"gitId":"ZechariahTan"},"content":"     *"},{"lineNumber":24,"author":{"gitId":"ZechariahTan"},"content":"     * @return String response of the command"},{"lineNumber":25,"author":{"gitId":"ZechariahTan"},"content":"     */"},{"lineNumber":26,"author":{"gitId":"ZechariahTan"},"content":"    String getResponse();"},{"lineNumber":27,"author":{"gitId":"ZechariahTan"},"content":"}"}],"authorContributionMap":{"ZechariahTan":27}},{"path":"src/main/java/command/DeadlineCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ZechariahTan"},"content":"package command;"},{"lineNumber":2,"author":{"gitId":"ZechariahTan"},"content":""},{"lineNumber":3,"author":{"gitId":"ZechariahTan"},"content":"import java.time.LocalDateTime;"},{"lineNumber":4,"author":{"gitId":"ZechariahTan"},"content":""},{"lineNumber":5,"author":{"gitId":"ZechariahTan"},"content":"import mike.TaskList;"},{"lineNumber":6,"author":{"gitId":"ZechariahTan"},"content":"import task.DeadlineTask;"},{"lineNumber":7,"author":{"gitId":"ZechariahTan"},"content":""},{"lineNumber":8,"author":{"gitId":"ZechariahTan"},"content":"public class DeadlineCommand extends AddCommand {"},{"lineNumber":9,"author":{"gitId":"ZechariahTan"},"content":""},{"lineNumber":10,"author":{"gitId":"ZechariahTan"},"content":"    private final LocalDateTime deadline;"},{"lineNumber":11,"author":{"gitId":"ZechariahTan"},"content":"    /**"},{"lineNumber":12,"author":{"gitId":"ZechariahTan"},"content":"     * Constructor for the DeadlineCommand object that includes a LocalDateTime object to represent the deadline of"},{"lineNumber":13,"author":{"gitId":"ZechariahTan"},"content":"     * the task"},{"lineNumber":14,"author":{"gitId":"ZechariahTan"},"content":"     * @param taskDescription Description of the task to be added"},{"lineNumber":15,"author":{"gitId":"ZechariahTan"},"content":"     * @param deadline Deadline of the task to be added"},{"lineNumber":16,"author":{"gitId":"ZechariahTan"},"content":"     */"},{"lineNumber":17,"author":{"gitId":"ZechariahTan"},"content":"    public DeadlineCommand(String taskDescription, LocalDateTime deadline) {"},{"lineNumber":18,"author":{"gitId":"ZechariahTan"},"content":"        super(taskDescription);"},{"lineNumber":19,"author":{"gitId":"ZechariahTan"},"content":"        this.deadline \u003d deadline;"},{"lineNumber":20,"author":{"gitId":"ZechariahTan"},"content":"    }"},{"lineNumber":21,"author":{"gitId":"ZechariahTan"},"content":""},{"lineNumber":22,"author":{"gitId":"ZechariahTan"},"content":"    /**"},{"lineNumber":23,"author":{"gitId":"ZechariahTan"},"content":"     * Execute command and adds deadline task to the provided taskList"},{"lineNumber":24,"author":{"gitId":"ZechariahTan"},"content":"     * @param taskList TaskList object to add the task to"},{"lineNumber":25,"author":{"gitId":"ZechariahTan"},"content":"     * @return TaskList object after adding task to the list"},{"lineNumber":26,"author":{"gitId":"ZechariahTan"},"content":"     */"},{"lineNumber":27,"author":{"gitId":"ZechariahTan"},"content":"    @Override"},{"lineNumber":28,"author":{"gitId":"ZechariahTan"},"content":"    public TaskList runCommand(TaskList taskList) {"},{"lineNumber":29,"author":{"gitId":"ZechariahTan"},"content":"        this.taskList \u003d taskList;"},{"lineNumber":30,"author":{"gitId":"ZechariahTan"},"content":"        this.taskToAdd \u003d new DeadlineTask(this.taskDescription, this.deadline);"},{"lineNumber":31,"author":{"gitId":"ZechariahTan"},"content":"        taskList.addTaskToList(taskToAdd);"},{"lineNumber":32,"author":{"gitId":"ZechariahTan"},"content":"        return taskList;"},{"lineNumber":33,"author":{"gitId":"ZechariahTan"},"content":"    }"},{"lineNumber":34,"author":{"gitId":"ZechariahTan"},"content":"}"}],"authorContributionMap":{"ZechariahTan":34}},{"path":"src/main/java/command/DeleteCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ZechariahTan"},"content":"package command;"},{"lineNumber":2,"author":{"gitId":"ZechariahTan"},"content":"import exception.MikeCommandExecutionException;"},{"lineNumber":3,"author":{"gitId":"ZechariahTan"},"content":"import mike.TaskList;"},{"lineNumber":4,"author":{"gitId":"ZechariahTan"},"content":"import task.Task;"},{"lineNumber":5,"author":{"gitId":"ZechariahTan"},"content":""},{"lineNumber":6,"author":{"gitId":"ZechariahTan"},"content":"public class DeleteCommand implements Command {"},{"lineNumber":7,"author":{"gitId":"ZechariahTan"},"content":"    private int taskIndexToDelete;"},{"lineNumber":8,"author":{"gitId":"ZechariahTan"},"content":"    private Task taskToDelete;"},{"lineNumber":9,"author":{"gitId":"ZechariahTan"},"content":"    private TaskList taskList;"},{"lineNumber":10,"author":{"gitId":"ZechariahTan"},"content":""},{"lineNumber":11,"author":{"gitId":"ZechariahTan"},"content":"    /**"},{"lineNumber":12,"author":{"gitId":"ZechariahTan"},"content":"     * Constructor for the delete command which takes in the index of the task to delete"},{"lineNumber":13,"author":{"gitId":"ZechariahTan"},"content":"     * @param taskIndexToDelete index of the task to delete"},{"lineNumber":14,"author":{"gitId":"ZechariahTan"},"content":"     */"},{"lineNumber":15,"author":{"gitId":"ZechariahTan"},"content":"    public DeleteCommand(int taskIndexToDelete) {"},{"lineNumber":16,"author":{"gitId":"ZechariahTan"},"content":"        this.taskIndexToDelete \u003d taskIndexToDelete;"},{"lineNumber":17,"author":{"gitId":"ZechariahTan"},"content":"    }"},{"lineNumber":18,"author":{"gitId":"ZechariahTan"},"content":""},{"lineNumber":19,"author":{"gitId":"ZechariahTan"},"content":"    @Override"},{"lineNumber":20,"author":{"gitId":"ZechariahTan"},"content":"    public boolean isExitCommand() {"},{"lineNumber":21,"author":{"gitId":"ZechariahTan"},"content":"        return false;"},{"lineNumber":22,"author":{"gitId":"ZechariahTan"},"content":"    }"},{"lineNumber":23,"author":{"gitId":"ZechariahTan"},"content":""},{"lineNumber":24,"author":{"gitId":"ZechariahTan"},"content":"    /**"},{"lineNumber":25,"author":{"gitId":"ZechariahTan"},"content":"     * Execute command and deletes the task in the provided taskList"},{"lineNumber":26,"author":{"gitId":"ZechariahTan"},"content":"     * @param taskList TaskList object to remove the task from"},{"lineNumber":27,"author":{"gitId":"ZechariahTan"},"content":"     * @return TaskList object after removing task from list"},{"lineNumber":28,"author":{"gitId":"ZechariahTan"},"content":"     * @throws MikeCommandExecutionException if task to be deleted does not exist in the taskList provided"},{"lineNumber":29,"author":{"gitId":"ZechariahTan"},"content":"     */"},{"lineNumber":30,"author":{"gitId":"ZechariahTan"},"content":"    @Override"},{"lineNumber":31,"author":{"gitId":"ZechariahTan"},"content":"    public TaskList runCommand(TaskList taskList) throws MikeCommandExecutionException {"},{"lineNumber":32,"author":{"gitId":"ZechariahTan"},"content":"        this.taskList \u003d taskList;"},{"lineNumber":33,"author":{"gitId":"ZechariahTan"},"content":"        try {"},{"lineNumber":34,"author":{"gitId":"ZechariahTan"},"content":"            for (int i \u003d 1; i \u003c\u003d this.taskList.getNumTasks(); i++) {"},{"lineNumber":35,"author":{"gitId":"ZechariahTan"},"content":"                if (i \u003d\u003d taskIndexToDelete) {"},{"lineNumber":36,"author":{"gitId":"ZechariahTan"},"content":"                    this.taskToDelete \u003d this.taskList.getNthTask(i);"},{"lineNumber":37,"author":{"gitId":"ZechariahTan"},"content":"                }"},{"lineNumber":38,"author":{"gitId":"ZechariahTan"},"content":"            }"},{"lineNumber":39,"author":{"gitId":"ZechariahTan"},"content":"            this.taskList.deleteNthTask(taskIndexToDelete);"},{"lineNumber":40,"author":{"gitId":"ZechariahTan"},"content":"            return this.taskList;"},{"lineNumber":41,"author":{"gitId":"ZechariahTan"},"content":"        } catch (NullPointerException e) {"},{"lineNumber":42,"author":{"gitId":"ZechariahTan"},"content":"            throw new MikeCommandExecutionException(\"DeleteCommand\", \"The task is not in the list\");"},{"lineNumber":43,"author":{"gitId":"ZechariahTan"},"content":"        }"},{"lineNumber":44,"author":{"gitId":"ZechariahTan"},"content":""},{"lineNumber":45,"author":{"gitId":"ZechariahTan"},"content":"    }"},{"lineNumber":46,"author":{"gitId":"ZechariahTan"},"content":""},{"lineNumber":47,"author":{"gitId":"ZechariahTan"},"content":"    @Override"},{"lineNumber":48,"author":{"gitId":"ZechariahTan"},"content":"    public String getResponse() {"},{"lineNumber":49,"author":{"gitId":"ZechariahTan"},"content":"        return String.format("},{"lineNumber":50,"author":{"gitId":"ZechariahTan"},"content":"                        \"Noted. I\u0027ve removed this task:  \\n  \""},{"lineNumber":51,"author":{"gitId":"ZechariahTan"},"content":"                                + \"%s\\n\""},{"lineNumber":52,"author":{"gitId":"ZechariahTan"},"content":"                                + \"Now you have %d tasks in the list.\\n\","},{"lineNumber":53,"author":{"gitId":"ZechariahTan"},"content":"                this.taskToDelete.toString(), this.taskList.getNumTasks());"},{"lineNumber":54,"author":{"gitId":"ZechariahTan"},"content":"    }"},{"lineNumber":55,"author":{"gitId":"ZechariahTan"},"content":"}"}],"authorContributionMap":{"ZechariahTan":55}},{"path":"src/main/java/command/DoneCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ZechariahTan"},"content":"package command;"},{"lineNumber":2,"author":{"gitId":"ZechariahTan"},"content":"import exception.MikeCommandExecutionException;"},{"lineNumber":3,"author":{"gitId":"ZechariahTan"},"content":"import mike.TaskList;"},{"lineNumber":4,"author":{"gitId":"ZechariahTan"},"content":"import task.Task;"},{"lineNumber":5,"author":{"gitId":"ZechariahTan"},"content":""},{"lineNumber":6,"author":{"gitId":"ZechariahTan"},"content":"public class DoneCommand implements Command {"},{"lineNumber":7,"author":{"gitId":"ZechariahTan"},"content":""},{"lineNumber":8,"author":{"gitId":"ZechariahTan"},"content":"    private int taskIndexToDone;"},{"lineNumber":9,"author":{"gitId":"ZechariahTan"},"content":"    private Task taskToDone;"},{"lineNumber":10,"author":{"gitId":"ZechariahTan"},"content":"    private TaskList taskList;"},{"lineNumber":11,"author":{"gitId":"ZechariahTan"},"content":""},{"lineNumber":12,"author":{"gitId":"ZechariahTan"},"content":"    public DoneCommand(int taskIndexToDone) {"},{"lineNumber":13,"author":{"gitId":"ZechariahTan"},"content":"        this.taskIndexToDone \u003d taskIndexToDone;"},{"lineNumber":14,"author":{"gitId":"ZechariahTan"},"content":"    }"},{"lineNumber":15,"author":{"gitId":"ZechariahTan"},"content":""},{"lineNumber":16,"author":{"gitId":"ZechariahTan"},"content":"    @Override"},{"lineNumber":17,"author":{"gitId":"ZechariahTan"},"content":"    public boolean isExitCommand() {"},{"lineNumber":18,"author":{"gitId":"ZechariahTan"},"content":"        return false;"},{"lineNumber":19,"author":{"gitId":"ZechariahTan"},"content":"    }"},{"lineNumber":20,"author":{"gitId":"ZechariahTan"},"content":""},{"lineNumber":21,"author":{"gitId":"ZechariahTan"},"content":"    /**"},{"lineNumber":22,"author":{"gitId":"ZechariahTan"},"content":"     * Execute command and marks the task in the provided taskList as done"},{"lineNumber":23,"author":{"gitId":"ZechariahTan"},"content":"     * @param taskList TaskList object that contains the task to mark done"},{"lineNumber":24,"author":{"gitId":"ZechariahTan"},"content":"     * @return TaskList object after marking task as done in list"},{"lineNumber":25,"author":{"gitId":"ZechariahTan"},"content":"     * @throws MikeCommandExecutionException if task to be marked done does not exist in the taskList provided"},{"lineNumber":26,"author":{"gitId":"ZechariahTan"},"content":"     */"},{"lineNumber":27,"author":{"gitId":"ZechariahTan"},"content":"    @Override"},{"lineNumber":28,"author":{"gitId":"ZechariahTan"},"content":"    public TaskList runCommand(TaskList taskList) throws MikeCommandExecutionException {"},{"lineNumber":29,"author":{"gitId":"ZechariahTan"},"content":"        this.taskList \u003d taskList;"},{"lineNumber":30,"author":{"gitId":"ZechariahTan"},"content":"        try {"},{"lineNumber":31,"author":{"gitId":"ZechariahTan"},"content":"            for (int i \u003d 1; i \u003c\u003d this.taskList.getNumTasks(); i++) {"},{"lineNumber":32,"author":{"gitId":"ZechariahTan"},"content":"                if (i \u003d\u003d taskIndexToDone) {"},{"lineNumber":33,"author":{"gitId":"ZechariahTan"},"content":"                    this.taskToDone \u003d this.taskList.getNthTask(i);"},{"lineNumber":34,"author":{"gitId":"ZechariahTan"},"content":"                }"},{"lineNumber":35,"author":{"gitId":"ZechariahTan"},"content":"            }"},{"lineNumber":36,"author":{"gitId":"ZechariahTan"},"content":"            this.taskToDone.completeTask();"},{"lineNumber":37,"author":{"gitId":"ZechariahTan"},"content":"            return this.taskList;"},{"lineNumber":38,"author":{"gitId":"ZechariahTan"},"content":"        } catch (NullPointerException e) {"},{"lineNumber":39,"author":{"gitId":"ZechariahTan"},"content":"            throw new MikeCommandExecutionException(\"DoneCommand\", \"The task is not in the list\");"},{"lineNumber":40,"author":{"gitId":"ZechariahTan"},"content":"        }"},{"lineNumber":41,"author":{"gitId":"ZechariahTan"},"content":""},{"lineNumber":42,"author":{"gitId":"ZechariahTan"},"content":"    }"},{"lineNumber":43,"author":{"gitId":"ZechariahTan"},"content":""},{"lineNumber":44,"author":{"gitId":"ZechariahTan"},"content":"    @Override"},{"lineNumber":45,"author":{"gitId":"ZechariahTan"},"content":"    public String getResponse() {"},{"lineNumber":46,"author":{"gitId":"ZechariahTan"},"content":"        return String.format("},{"lineNumber":47,"author":{"gitId":"ZechariahTan"},"content":"                \"Nice! I\u0027ve marked this task as done: \\n\""},{"lineNumber":48,"author":{"gitId":"ZechariahTan"},"content":"                        + \"  %s\","},{"lineNumber":49,"author":{"gitId":"ZechariahTan"},"content":"                this.taskToDone.toString());"},{"lineNumber":50,"author":{"gitId":"ZechariahTan"},"content":""},{"lineNumber":51,"author":{"gitId":"ZechariahTan"},"content":"    }"},{"lineNumber":52,"author":{"gitId":"ZechariahTan"},"content":"}"}],"authorContributionMap":{"ZechariahTan":52}},{"path":"src/main/java/command/EventCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ZechariahTan"},"content":"package command;"},{"lineNumber":2,"author":{"gitId":"ZechariahTan"},"content":""},{"lineNumber":3,"author":{"gitId":"ZechariahTan"},"content":"import java.time.LocalDateTime;"},{"lineNumber":4,"author":{"gitId":"ZechariahTan"},"content":""},{"lineNumber":5,"author":{"gitId":"ZechariahTan"},"content":"import mike.TaskList;"},{"lineNumber":6,"author":{"gitId":"ZechariahTan"},"content":"import task.EventTask;"},{"lineNumber":7,"author":{"gitId":"ZechariahTan"},"content":""},{"lineNumber":8,"author":{"gitId":"ZechariahTan"},"content":"public class EventCommand extends AddCommand {"},{"lineNumber":9,"author":{"gitId":"ZechariahTan"},"content":""},{"lineNumber":10,"author":{"gitId":"ZechariahTan"},"content":"    private final LocalDateTime timeWindow;"},{"lineNumber":11,"author":{"gitId":"ZechariahTan"},"content":""},{"lineNumber":12,"author":{"gitId":"ZechariahTan"},"content":"    /**"},{"lineNumber":13,"author":{"gitId":"ZechariahTan"},"content":"     * Constructor for the EventCommand object that includes a LocalDateTime object to represent the deadline of"},{"lineNumber":14,"author":{"gitId":"ZechariahTan"},"content":"     * the task"},{"lineNumber":15,"author":{"gitId":"ZechariahTan"},"content":"     * @param taskDescription Description of the task to be added"},{"lineNumber":16,"author":{"gitId":"ZechariahTan"},"content":"     * @param timeWindow timeWindow of the task to be added"},{"lineNumber":17,"author":{"gitId":"ZechariahTan"},"content":"     */"},{"lineNumber":18,"author":{"gitId":"ZechariahTan"},"content":"    public EventCommand(String taskDescription, LocalDateTime timeWindow) {"},{"lineNumber":19,"author":{"gitId":"ZechariahTan"},"content":"        super(taskDescription);"},{"lineNumber":20,"author":{"gitId":"ZechariahTan"},"content":"        this.timeWindow \u003d timeWindow;"},{"lineNumber":21,"author":{"gitId":"ZechariahTan"},"content":"    }"},{"lineNumber":22,"author":{"gitId":"ZechariahTan"},"content":""},{"lineNumber":23,"author":{"gitId":"ZechariahTan"},"content":"    /**"},{"lineNumber":24,"author":{"gitId":"ZechariahTan"},"content":"     * Execute command and adds deadline task to the provided taskList"},{"lineNumber":25,"author":{"gitId":"ZechariahTan"},"content":"     * @param taskList TaskList object to add the task to"},{"lineNumber":26,"author":{"gitId":"ZechariahTan"},"content":"     * @return TaskList object after adding task to the list"},{"lineNumber":27,"author":{"gitId":"ZechariahTan"},"content":"     */"},{"lineNumber":28,"author":{"gitId":"ZechariahTan"},"content":"    @Override"},{"lineNumber":29,"author":{"gitId":"ZechariahTan"},"content":"    public TaskList runCommand(TaskList taskList) {"},{"lineNumber":30,"author":{"gitId":"ZechariahTan"},"content":"        this.taskList \u003d taskList;"},{"lineNumber":31,"author":{"gitId":"ZechariahTan"},"content":"        this.taskToAdd \u003d new EventTask(this.taskDescription, this.timeWindow);"},{"lineNumber":32,"author":{"gitId":"ZechariahTan"},"content":"        taskList.addTaskToList(taskToAdd);"},{"lineNumber":33,"author":{"gitId":"ZechariahTan"},"content":"        return taskList;"},{"lineNumber":34,"author":{"gitId":"ZechariahTan"},"content":"    }"},{"lineNumber":35,"author":{"gitId":"ZechariahTan"},"content":"}"}],"authorContributionMap":{"ZechariahTan":35}},{"path":"src/main/java/command/ExceptionCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ZechariahTan"},"content":"package command;"},{"lineNumber":2,"author":{"gitId":"ZechariahTan"},"content":""},{"lineNumber":3,"author":{"gitId":"ZechariahTan"},"content":"import mike.TaskList;"},{"lineNumber":4,"author":{"gitId":"ZechariahTan"},"content":""},{"lineNumber":5,"author":{"gitId":"ZechariahTan"},"content":"public class ExceptionCommand implements Command{"},{"lineNumber":6,"author":{"gitId":"ZechariahTan"},"content":"    private String errMsg;"},{"lineNumber":7,"author":{"gitId":"ZechariahTan"},"content":""},{"lineNumber":8,"author":{"gitId":"ZechariahTan"},"content":"    public ExceptionCommand(String errMsg) {"},{"lineNumber":9,"author":{"gitId":"ZechariahTan"},"content":"        this.errMsg \u003d errMsg;"},{"lineNumber":10,"author":{"gitId":"ZechariahTan"},"content":"    }"},{"lineNumber":11,"author":{"gitId":"ZechariahTan"},"content":""},{"lineNumber":12,"author":{"gitId":"ZechariahTan"},"content":"    @Override"},{"lineNumber":13,"author":{"gitId":"ZechariahTan"},"content":"    public boolean isExitCommand() {"},{"lineNumber":14,"author":{"gitId":"ZechariahTan"},"content":"        return false;"},{"lineNumber":15,"author":{"gitId":"ZechariahTan"},"content":"    }"},{"lineNumber":16,"author":{"gitId":"ZechariahTan"},"content":""},{"lineNumber":17,"author":{"gitId":"ZechariahTan"},"content":"    /**"},{"lineNumber":18,"author":{"gitId":"ZechariahTan"},"content":"     * Perform no operations on TaskList object"},{"lineNumber":19,"author":{"gitId":"ZechariahTan"},"content":"     * Accepts and returns TaskList due to compatibility"},{"lineNumber":20,"author":{"gitId":"ZechariahTan"},"content":"     * @param taskList tasklist provided"},{"lineNumber":21,"author":{"gitId":"ZechariahTan"},"content":"     * @return unmodified tasklist"},{"lineNumber":22,"author":{"gitId":"ZechariahTan"},"content":"     */"},{"lineNumber":23,"author":{"gitId":"ZechariahTan"},"content":"    @Override"},{"lineNumber":24,"author":{"gitId":"ZechariahTan"},"content":"    public TaskList runCommand(TaskList taskList) {"},{"lineNumber":25,"author":{"gitId":"ZechariahTan"},"content":"        return taskList;"},{"lineNumber":26,"author":{"gitId":"ZechariahTan"},"content":"    }"},{"lineNumber":27,"author":{"gitId":"ZechariahTan"},"content":""},{"lineNumber":28,"author":{"gitId":"ZechariahTan"},"content":"    /**"},{"lineNumber":29,"author":{"gitId":"ZechariahTan"},"content":"     * Returns goodbye message."},{"lineNumber":30,"author":{"gitId":"ZechariahTan"},"content":"     * @return String of goodbye message"},{"lineNumber":31,"author":{"gitId":"ZechariahTan"},"content":"     */"},{"lineNumber":32,"author":{"gitId":"ZechariahTan"},"content":"    @Override"},{"lineNumber":33,"author":{"gitId":"ZechariahTan"},"content":"    public String getResponse() {"},{"lineNumber":34,"author":{"gitId":"ZechariahTan"},"content":"        return errMsg;"},{"lineNumber":35,"author":{"gitId":"ZechariahTan"},"content":"    }"},{"lineNumber":36,"author":{"gitId":"ZechariahTan"},"content":"}"}],"authorContributionMap":{"ZechariahTan":36}},{"path":"src/main/java/command/FindCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ZechariahTan"},"content":"package command;"},{"lineNumber":2,"author":{"gitId":"ZechariahTan"},"content":""},{"lineNumber":3,"author":{"gitId":"ZechariahTan"},"content":"import java.util.ArrayList;"},{"lineNumber":4,"author":{"gitId":"ZechariahTan"},"content":"import java.util.List;"},{"lineNumber":5,"author":{"gitId":"ZechariahTan"},"content":""},{"lineNumber":6,"author":{"gitId":"ZechariahTan"},"content":"import mike.TaskList;"},{"lineNumber":7,"author":{"gitId":"ZechariahTan"},"content":"import task.Task;"},{"lineNumber":8,"author":{"gitId":"ZechariahTan"},"content":""},{"lineNumber":9,"author":{"gitId":"ZechariahTan"},"content":"public class FindCommand implements Command {"},{"lineNumber":10,"author":{"gitId":"ZechariahTan"},"content":"    private String keyword;"},{"lineNumber":11,"author":{"gitId":"ZechariahTan"},"content":"    private TaskList taskList;"},{"lineNumber":12,"author":{"gitId":"ZechariahTan"},"content":"    private List\u003cTask\u003e foundTasks \u003d new ArrayList\u003c\u003e();"},{"lineNumber":13,"author":{"gitId":"ZechariahTan"},"content":""},{"lineNumber":14,"author":{"gitId":"ZechariahTan"},"content":"    public FindCommand(String keyword) {"},{"lineNumber":15,"author":{"gitId":"ZechariahTan"},"content":"        this.keyword \u003d keyword;"},{"lineNumber":16,"author":{"gitId":"ZechariahTan"},"content":"    }"},{"lineNumber":17,"author":{"gitId":"ZechariahTan"},"content":""},{"lineNumber":18,"author":{"gitId":"ZechariahTan"},"content":"    @Override"},{"lineNumber":19,"author":{"gitId":"ZechariahTan"},"content":"    public boolean isExitCommand() {"},{"lineNumber":20,"author":{"gitId":"ZechariahTan"},"content":"        return false;"},{"lineNumber":21,"author":{"gitId":"ZechariahTan"},"content":"    }"},{"lineNumber":22,"author":{"gitId":"ZechariahTan"},"content":""},{"lineNumber":23,"author":{"gitId":"ZechariahTan"},"content":"    @Override"},{"lineNumber":24,"author":{"gitId":"ZechariahTan"},"content":"    public TaskList runCommand(TaskList taskList) {"},{"lineNumber":25,"author":{"gitId":"ZechariahTan"},"content":"        Task tempTask;"},{"lineNumber":26,"author":{"gitId":"ZechariahTan"},"content":"        for (int i \u003d 1; i \u003c\u003d taskList.getNumTasks(); i++) {"},{"lineNumber":27,"author":{"gitId":"ZechariahTan"},"content":"            tempTask \u003d taskList.getNthTask(i);"},{"lineNumber":28,"author":{"gitId":"ZechariahTan"},"content":"            if (tempTask.getTaskDescription().contains(this.keyword)) {"},{"lineNumber":29,"author":{"gitId":"ZechariahTan"},"content":"                this.foundTasks.add(tempTask);"},{"lineNumber":30,"author":{"gitId":"ZechariahTan"},"content":"            }"},{"lineNumber":31,"author":{"gitId":"ZechariahTan"},"content":"        }"},{"lineNumber":32,"author":{"gitId":"ZechariahTan"},"content":"        return taskList;"},{"lineNumber":33,"author":{"gitId":"ZechariahTan"},"content":"    }"},{"lineNumber":34,"author":{"gitId":"ZechariahTan"},"content":""},{"lineNumber":35,"author":{"gitId":"ZechariahTan"},"content":"    @Override"},{"lineNumber":36,"author":{"gitId":"ZechariahTan"},"content":"    public String getResponse() {"},{"lineNumber":37,"author":{"gitId":"ZechariahTan"},"content":"        StringBuilder buffer \u003d new StringBuilder();"},{"lineNumber":38,"author":{"gitId":"ZechariahTan"},"content":"        buffer.append(\"Here are the matching tasks in your list: \\n\");"},{"lineNumber":39,"author":{"gitId":"ZechariahTan"},"content":"        for (int i \u003d 1; i \u003c\u003d this.foundTasks.size(); i++) {"},{"lineNumber":40,"author":{"gitId":"ZechariahTan"},"content":"            buffer.append(i);"},{"lineNumber":41,"author":{"gitId":"ZechariahTan"},"content":"            buffer.append(\". \");"},{"lineNumber":42,"author":{"gitId":"ZechariahTan"},"content":"            buffer.append(this.foundTasks.get(i - 1).toString());"},{"lineNumber":43,"author":{"gitId":"ZechariahTan"},"content":"            buffer.append(\"\\n\");"},{"lineNumber":44,"author":{"gitId":"ZechariahTan"},"content":"        }"},{"lineNumber":45,"author":{"gitId":"ZechariahTan"},"content":"        return buffer.toString();"},{"lineNumber":46,"author":{"gitId":"ZechariahTan"},"content":"    }"},{"lineNumber":47,"author":{"gitId":"ZechariahTan"},"content":"}"}],"authorContributionMap":{"ZechariahTan":47}},{"path":"src/main/java/command/ListCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ZechariahTan"},"content":"package command;"},{"lineNumber":2,"author":{"gitId":"ZechariahTan"},"content":"import mike.TaskList;"},{"lineNumber":3,"author":{"gitId":"ZechariahTan"},"content":""},{"lineNumber":4,"author":{"gitId":"ZechariahTan"},"content":"public class ListCommand implements Command {"},{"lineNumber":5,"author":{"gitId":"ZechariahTan"},"content":"    private boolean isExitCommand \u003d false;"},{"lineNumber":6,"author":{"gitId":"ZechariahTan"},"content":"    private TaskList taskList;"},{"lineNumber":7,"author":{"gitId":"ZechariahTan"},"content":""},{"lineNumber":8,"author":{"gitId":"ZechariahTan"},"content":"    public ListCommand() { }"},{"lineNumber":9,"author":{"gitId":"ZechariahTan"},"content":""},{"lineNumber":10,"author":{"gitId":"ZechariahTan"},"content":"    @Override"},{"lineNumber":11,"author":{"gitId":"ZechariahTan"},"content":"    public boolean isExitCommand() {"},{"lineNumber":12,"author":{"gitId":"ZechariahTan"},"content":"        return isExitCommand;"},{"lineNumber":13,"author":{"gitId":"ZechariahTan"},"content":"    }"},{"lineNumber":14,"author":{"gitId":"ZechariahTan"},"content":""},{"lineNumber":15,"author":{"gitId":"ZechariahTan"},"content":"    /**"},{"lineNumber":16,"author":{"gitId":"ZechariahTan"},"content":"     * Store taskList provided to allow for listing of tasks"},{"lineNumber":17,"author":{"gitId":"ZechariahTan"},"content":"     * @param taskList TaskList object to be listed"},{"lineNumber":18,"author":{"gitId":"ZechariahTan"},"content":"     * @return unmodified TaskList object"},{"lineNumber":19,"author":{"gitId":"ZechariahTan"},"content":"     */"},{"lineNumber":20,"author":{"gitId":"ZechariahTan"},"content":"    @Override"},{"lineNumber":21,"author":{"gitId":"ZechariahTan"},"content":"    public TaskList runCommand(TaskList taskList) {"},{"lineNumber":22,"author":{"gitId":"ZechariahTan"},"content":"        this.taskList \u003d taskList;"},{"lineNumber":23,"author":{"gitId":"ZechariahTan"},"content":"        return taskList;"},{"lineNumber":24,"author":{"gitId":"ZechariahTan"},"content":"    }"},{"lineNumber":25,"author":{"gitId":"ZechariahTan"},"content":""},{"lineNumber":26,"author":{"gitId":"ZechariahTan"},"content":"    /**"},{"lineNumber":27,"author":{"gitId":"ZechariahTan"},"content":"     * Wrap taskList.toString() with minor formatting"},{"lineNumber":28,"author":{"gitId":"ZechariahTan"},"content":"     * @return header for list before tasks"},{"lineNumber":29,"author":{"gitId":"ZechariahTan"},"content":"     */"},{"lineNumber":30,"author":{"gitId":"ZechariahTan"},"content":"    @Override"},{"lineNumber":31,"author":{"gitId":"ZechariahTan"},"content":"    public String getResponse() {"},{"lineNumber":32,"author":{"gitId":"ZechariahTan"},"content":"        return String.format("},{"lineNumber":33,"author":{"gitId":"ZechariahTan"},"content":"                \"Here are the tasks in your list:\\n\""},{"lineNumber":34,"author":{"gitId":"ZechariahTan"},"content":"                        + \"%s\","},{"lineNumber":35,"author":{"gitId":"ZechariahTan"},"content":"                this.taskList.toString());"},{"lineNumber":36,"author":{"gitId":"ZechariahTan"},"content":"    }"},{"lineNumber":37,"author":{"gitId":"ZechariahTan"},"content":"}"}],"authorContributionMap":{"ZechariahTan":37}},{"path":"src/main/java/command/TodoCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ZechariahTan"},"content":"package command;"},{"lineNumber":2,"author":{"gitId":"ZechariahTan"},"content":""},{"lineNumber":3,"author":{"gitId":"ZechariahTan"},"content":"public class TodoCommand extends AddCommand {"},{"lineNumber":4,"author":{"gitId":"ZechariahTan"},"content":"    public TodoCommand(String taskDescription) {"},{"lineNumber":5,"author":{"gitId":"ZechariahTan"},"content":"        super(taskDescription);"},{"lineNumber":6,"author":{"gitId":"ZechariahTan"},"content":"    }"},{"lineNumber":7,"author":{"gitId":"ZechariahTan"},"content":"}"}],"authorContributionMap":{"ZechariahTan":7}},{"path":"src/main/java/exception/MikeCommandExecutionException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ZechariahTan"},"content":"package exception;"},{"lineNumber":2,"author":{"gitId":"ZechariahTan"},"content":""},{"lineNumber":3,"author":{"gitId":"ZechariahTan"},"content":"public class MikeCommandExecutionException extends Exception {"},{"lineNumber":4,"author":{"gitId":"ZechariahTan"},"content":"    private String failedCommand;"},{"lineNumber":5,"author":{"gitId":"ZechariahTan"},"content":"    /**"},{"lineNumber":6,"author":{"gitId":"ZechariahTan"},"content":"     * Execution to be thrown when an error in command execution has occurred"},{"lineNumber":7,"author":{"gitId":"ZechariahTan"},"content":"     */"},{"lineNumber":8,"author":{"gitId":"ZechariahTan"},"content":"    public MikeCommandExecutionException(String failedCommand, String errorMessage) {"},{"lineNumber":9,"author":{"gitId":"ZechariahTan"},"content":"        super(errorMessage);"},{"lineNumber":10,"author":{"gitId":"ZechariahTan"},"content":"        this.failedCommand \u003d failedCommand;"},{"lineNumber":11,"author":{"gitId":"ZechariahTan"},"content":"    }"},{"lineNumber":12,"author":{"gitId":"ZechariahTan"},"content":""},{"lineNumber":13,"author":{"gitId":"ZechariahTan"},"content":"    public String getCommand() {"},{"lineNumber":14,"author":{"gitId":"ZechariahTan"},"content":"        return this.failedCommand;"},{"lineNumber":15,"author":{"gitId":"ZechariahTan"},"content":"    }"},{"lineNumber":16,"author":{"gitId":"ZechariahTan"},"content":"}"}],"authorContributionMap":{"ZechariahTan":16}},{"path":"src/main/java/exception/MikeInvalidInputException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ZechariahTan"},"content":"package exception;"},{"lineNumber":2,"author":{"gitId":"ZechariahTan"},"content":""},{"lineNumber":3,"author":{"gitId":"ZechariahTan"},"content":"public class MikeInvalidInputException extends Exception {"},{"lineNumber":4,"author":{"gitId":"ZechariahTan"},"content":"    /**"},{"lineNumber":5,"author":{"gitId":"ZechariahTan"},"content":"     * Execution to be thrown when user input is detected as invalid"},{"lineNumber":6,"author":{"gitId":"ZechariahTan"},"content":"     */"},{"lineNumber":7,"author":{"gitId":"ZechariahTan"},"content":"    public MikeInvalidInputException(String errorMessage) {"},{"lineNumber":8,"author":{"gitId":"ZechariahTan"},"content":"        super(errorMessage);"},{"lineNumber":9,"author":{"gitId":"ZechariahTan"},"content":"    }"},{"lineNumber":10,"author":{"gitId":"ZechariahTan"},"content":"}"}],"authorContributionMap":{"ZechariahTan":10}},{"path":"src/main/java/mike/Mike.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ZechariahTan"},"content":"package mike;"},{"lineNumber":2,"author":{"gitId":"ZechariahTan"},"content":""},{"lineNumber":3,"author":{"gitId":"ZechariahTan"},"content":"import command.Command;"},{"lineNumber":4,"author":{"gitId":"ZechariahTan"},"content":"import exception.MikeCommandExecutionException;"},{"lineNumber":5,"author":{"gitId":"ZechariahTan"},"content":""},{"lineNumber":6,"author":{"gitId":"ZechariahTan"},"content":"public class Mike {"},{"lineNumber":7,"author":{"gitId":"ZechariahTan"},"content":""},{"lineNumber":8,"author":{"gitId":"ZechariahTan"},"content":"    private final String logo \u003d \"  __  __   _   _               _     _                _    _                      _\\n\""},{"lineNumber":9,"author":{"gitId":"ZechariahTan"},"content":"                    + \" |  \\\\/  | (_) | |             | |   | |              | |  | |                    | |   \\n\""},{"lineNumber":10,"author":{"gitId":"ZechariahTan"},"content":"                    + \" | \\\\  / |  _  | | __   ___    | |_  | |__     ___    | |__| |   __ _  __      __ | | __\\n\""},{"lineNumber":11,"author":{"gitId":"ZechariahTan"},"content":"                    + \" | |\\\\/| | | | | |/ /  / _ \\\\   | __| | \u0027_ \\\\   / _ \\\\   |  __  |  / _` | \\\\ \\\\ /\\\\ / / | |/ /\\n\""},{"lineNumber":12,"author":{"gitId":"ZechariahTan"},"content":"                    + \" | |  | | | | |   \u003c  |  __/   | |_  | | | | |  __/   | |  | | | (_| |  \\\\ V  V /  |   \u003c \\n\""},{"lineNumber":13,"author":{"gitId":"ZechariahTan"},"content":"                    + \" |_|  |_| |_| |_|\\\\_\\\\  \\\\___|    \\\\__| |_| |_|  \\\\___|   |_|  |_|  \\\\__,_|   \\\\_/\\\\_/\""},{"lineNumber":14,"author":{"gitId":"ZechariahTan"},"content":"                    + \"   |_|\\\\_\\\\\\n\""},{"lineNumber":15,"author":{"gitId":"ZechariahTan"},"content":"                    + \"                                                                                       \\n\""},{"lineNumber":16,"author":{"gitId":"ZechariahTan"},"content":"                    + \"                                           __     __\\n\""},{"lineNumber":17,"author":{"gitId":"ZechariahTan"},"content":"                    + \"                                          /\u0027(  _  )`\\\\\\n\""},{"lineNumber":18,"author":{"gitId":"ZechariahTan"},"content":"                    + \"                                         / . \\\\/^\\\\/ . \\\\\\n\""},{"lineNumber":19,"author":{"gitId":"ZechariahTan"},"content":"                    + \"                                        /  _)_`-\u0027_(_  \\\\\\n\""},{"lineNumber":20,"author":{"gitId":"ZechariahTan"},"content":"                    + \"                                       /.-~   ).(   ~-.\\\\\\n\""},{"lineNumber":21,"author":{"gitId":"ZechariahTan"},"content":"                    + \"                                      /\u0027     /\\\\_/\\\\     `\\\\\\n\""},{"lineNumber":22,"author":{"gitId":"ZechariahTan"},"content":"                    + \"                                             \\\"-V-\\\"\";"},{"lineNumber":23,"author":{"gitId":"ZechariahTan"},"content":""},{"lineNumber":24,"author":{"gitId":"ZechariahTan"},"content":"    private String filePath \u003d System.getProperty(\"user.dir\") + \"/data/TodoList.txt\";"},{"lineNumber":25,"author":{"gitId":"ZechariahTan"},"content":"    private boolean isRunning;"},{"lineNumber":26,"author":{"gitId":"ZechariahTan"},"content":"    private TaskList taskList;"},{"lineNumber":27,"author":{"gitId":"ZechariahTan"},"content":"    private Storage storage;"},{"lineNumber":28,"author":{"gitId":"ZechariahTan"},"content":""},{"lineNumber":29,"author":{"gitId":"ZechariahTan"},"content":"    /**"},{"lineNumber":30,"author":{"gitId":"ZechariahTan"},"content":"     * Mike.Mike chatbot constructor"},{"lineNumber":31,"author":{"gitId":"ZechariahTan"},"content":"     */"},{"lineNumber":32,"author":{"gitId":"ZechariahTan"},"content":"    public Mike() {"},{"lineNumber":33,"author":{"gitId":"ZechariahTan"},"content":"        this.isRunning \u003d true;"},{"lineNumber":34,"author":{"gitId":"ZechariahTan"},"content":"        this.taskList \u003d new TaskList();"},{"lineNumber":35,"author":{"gitId":"ZechariahTan"},"content":"    }"},{"lineNumber":36,"author":{"gitId":"ZechariahTan"},"content":""},{"lineNumber":37,"author":{"gitId":"ZechariahTan"},"content":"    /**"},{"lineNumber":38,"author":{"gitId":"ZechariahTan"},"content":"     * Initialises mike chatbot by printing welcome message and reading stored tasklist file"},{"lineNumber":39,"author":{"gitId":"ZechariahTan"},"content":"     */"},{"lineNumber":40,"author":{"gitId":"ZechariahTan"},"content":"    public void mikeInit() {"},{"lineNumber":41,"author":{"gitId":"ZechariahTan"},"content":"        System.out.println(\"Hello from\\n\" + this.logo);"},{"lineNumber":42,"author":{"gitId":"ZechariahTan"},"content":"        this.storage \u003d new Storage(filePath);"},{"lineNumber":43,"author":{"gitId":"ZechariahTan"},"content":"        this.taskList \u003d storage.readListFromFile();"},{"lineNumber":44,"author":{"gitId":"ZechariahTan"},"content":"    }"},{"lineNumber":45,"author":{"gitId":"ZechariahTan"},"content":""},{"lineNumber":46,"author":{"gitId":"ZechariahTan"},"content":"    /**"},{"lineNumber":47,"author":{"gitId":"ZechariahTan"},"content":"     * Initialises mike chatbot by printing welcome message and reading stored tasklist file from specified filepath"},{"lineNumber":48,"author":{"gitId":"ZechariahTan"},"content":"     * @param filepath filepath to saved taskList"},{"lineNumber":49,"author":{"gitId":"ZechariahTan"},"content":"     */"},{"lineNumber":50,"author":{"gitId":"ZechariahTan"},"content":"    public void mikeInit(String filepath) {"},{"lineNumber":51,"author":{"gitId":"ZechariahTan"},"content":"        this.filePath \u003d filepath;"},{"lineNumber":52,"author":{"gitId":"ZechariahTan"},"content":"        this.mikeInit();"},{"lineNumber":53,"author":{"gitId":"ZechariahTan"},"content":"    }"},{"lineNumber":54,"author":{"gitId":"ZechariahTan"},"content":""},{"lineNumber":55,"author":{"gitId":"ZechariahTan"},"content":"    /**"},{"lineNumber":56,"author":{"gitId":"ZechariahTan"},"content":"     * Returns if the chatbot is running"},{"lineNumber":57,"author":{"gitId":"ZechariahTan"},"content":"     */"},{"lineNumber":58,"author":{"gitId":"ZechariahTan"},"content":"    public boolean isRunning() {"},{"lineNumber":59,"author":{"gitId":"ZechariahTan"},"content":"        return isRunning;"},{"lineNumber":60,"author":{"gitId":"ZechariahTan"},"content":"    }"},{"lineNumber":61,"author":{"gitId":"ZechariahTan"},"content":""},{"lineNumber":62,"author":{"gitId":"ZechariahTan"},"content":"    /**"},{"lineNumber":63,"author":{"gitId":"ZechariahTan"},"content":"     * Executes the command provided and returns the response generated by the command"},{"lineNumber":64,"author":{"gitId":"ZechariahTan"},"content":"     * @param inputCommand Command.Command object containing parameters required"},{"lineNumber":65,"author":{"gitId":"ZechariahTan"},"content":"     * @return Response generated by the command"},{"lineNumber":66,"author":{"gitId":"ZechariahTan"},"content":"     */"},{"lineNumber":67,"author":{"gitId":"ZechariahTan"},"content":"    public String getResponse(Command inputCommand){"},{"lineNumber":68,"author":{"gitId":"ZechariahTan"},"content":"        this.isRunning \u003d !inputCommand.isExitCommand();"},{"lineNumber":69,"author":{"gitId":"ZechariahTan"},"content":"        try {"},{"lineNumber":70,"author":{"gitId":"ZechariahTan"},"content":"            this.taskList \u003d inputCommand.runCommand(this.taskList);"},{"lineNumber":71,"author":{"gitId":"ZechariahTan"},"content":"            this.storage.updateListFile(this.taskList);"},{"lineNumber":72,"author":{"gitId":"ZechariahTan"},"content":"        } catch (MikeCommandExecutionException e) {"},{"lineNumber":73,"author":{"gitId":"ZechariahTan"},"content":"            return e.getMessage();"},{"lineNumber":74,"author":{"gitId":"ZechariahTan"},"content":"        }"},{"lineNumber":75,"author":{"gitId":"ZechariahTan"},"content":"        return inputCommand.getResponse();"},{"lineNumber":76,"author":{"gitId":"ZechariahTan"},"content":"    }"},{"lineNumber":77,"author":{"gitId":"ZechariahTan"},"content":"}"},{"lineNumber":78,"author":{"gitId":"ZechariahTan"},"content":""},{"lineNumber":79,"author":{"gitId":"ZechariahTan"},"content":""}],"authorContributionMap":{"ZechariahTan":79}},{"path":"src/main/java/mike/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ZechariahTan"},"content":"package mike;"},{"lineNumber":2,"author":{"gitId":"ZechariahTan"},"content":""},{"lineNumber":3,"author":{"gitId":"ZechariahTan"},"content":"import java.time.LocalDateTime;"},{"lineNumber":4,"author":{"gitId":"ZechariahTan"},"content":"import java.time.format.DateTimeFormatter;"},{"lineNumber":5,"author":{"gitId":"ZechariahTan"},"content":"import java.util.Scanner;"},{"lineNumber":6,"author":{"gitId":"ZechariahTan"},"content":"import java.util.regex.Matcher;"},{"lineNumber":7,"author":{"gitId":"ZechariahTan"},"content":"import java.util.regex.Pattern;"},{"lineNumber":8,"author":{"gitId":"ZechariahTan"},"content":""},{"lineNumber":9,"author":{"gitId":"ZechariahTan"},"content":"import command.ByeCommand;"},{"lineNumber":10,"author":{"gitId":"ZechariahTan"},"content":"import command.Command;"},{"lineNumber":11,"author":{"gitId":"ZechariahTan"},"content":"import command.DeadlineCommand;"},{"lineNumber":12,"author":{"gitId":"ZechariahTan"},"content":"import command.DeleteCommand;"},{"lineNumber":13,"author":{"gitId":"ZechariahTan"},"content":"import command.DoneCommand;"},{"lineNumber":14,"author":{"gitId":"ZechariahTan"},"content":"import command.EventCommand;"},{"lineNumber":15,"author":{"gitId":"ZechariahTan"},"content":"import command.ExceptionCommand;"},{"lineNumber":16,"author":{"gitId":"ZechariahTan"},"content":"import command.FindCommand;"},{"lineNumber":17,"author":{"gitId":"ZechariahTan"},"content":"import command.ListCommand;"},{"lineNumber":18,"author":{"gitId":"ZechariahTan"},"content":"import command.TodoCommand;"},{"lineNumber":19,"author":{"gitId":"ZechariahTan"},"content":"import exception.MikeInvalidInputException;"},{"lineNumber":20,"author":{"gitId":"ZechariahTan"},"content":""},{"lineNumber":21,"author":{"gitId":"ZechariahTan"},"content":"public class Parser {"},{"lineNumber":22,"author":{"gitId":"ZechariahTan"},"content":""},{"lineNumber":23,"author":{"gitId":"ZechariahTan"},"content":"    private static final String BYE_COMMAND \u003d \"bye\";"},{"lineNumber":24,"author":{"gitId":"ZechariahTan"},"content":"    private static final String DONE_COMMAND \u003d \"done\";"},{"lineNumber":25,"author":{"gitId":"ZechariahTan"},"content":"    private static final String LIST_COMMAND \u003d \"list\";"},{"lineNumber":26,"author":{"gitId":"ZechariahTan"},"content":"    private static final String TODO_COMMAND \u003d \"todo\";"},{"lineNumber":27,"author":{"gitId":"ZechariahTan"},"content":"    private static final String EVENT_COMMAND \u003d \"event\";"},{"lineNumber":28,"author":{"gitId":"ZechariahTan"},"content":"    private static final String DEADLINE_COMMAND \u003d \"deadline\";"},{"lineNumber":29,"author":{"gitId":"ZechariahTan"},"content":"    private static final String DELETE_COMMAND \u003d \"delete\";"},{"lineNumber":30,"author":{"gitId":"ZechariahTan"},"content":"    private static final String FIND_COMMAND \u003d \"find\";"},{"lineNumber":31,"author":{"gitId":"ZechariahTan"},"content":""},{"lineNumber":32,"author":{"gitId":"ZechariahTan"},"content":"    /**"},{"lineNumber":33,"author":{"gitId":"ZechariahTan"},"content":"     * Reads user input and parses it to return a command object"},{"lineNumber":34,"author":{"gitId":"ZechariahTan"},"content":"     *"},{"lineNumber":35,"author":{"gitId":"ZechariahTan"},"content":"     * @return Command.Command type object with parameters entered by user"},{"lineNumber":36,"author":{"gitId":"ZechariahTan"},"content":"     */"},{"lineNumber":37,"author":{"gitId":"ZechariahTan"},"content":"    public static Command parseInput(String userInput){"},{"lineNumber":38,"author":{"gitId":"ZechariahTan"},"content":"//        String userInput \u003d scanner.nextLine();"},{"lineNumber":39,"author":{"gitId":"ZechariahTan"},"content":"        String errMsg;"},{"lineNumber":40,"author":{"gitId":"ZechariahTan"},"content":"        String[] userInputArr \u003d userInput.split(\" \");"},{"lineNumber":41,"author":{"gitId":"ZechariahTan"},"content":"        Pattern pattern;"},{"lineNumber":42,"author":{"gitId":"ZechariahTan"},"content":"        Matcher matcher;"},{"lineNumber":43,"author":{"gitId":"ZechariahTan"},"content":""},{"lineNumber":44,"author":{"gitId":"ZechariahTan"},"content":"        switch (userInputArr[0].toLowerCase()) {"},{"lineNumber":45,"author":{"gitId":"ZechariahTan"},"content":"        case BYE_COMMAND:"},{"lineNumber":46,"author":{"gitId":"ZechariahTan"},"content":"            return new ByeCommand();"},{"lineNumber":47,"author":{"gitId":"ZechariahTan"},"content":""},{"lineNumber":48,"author":{"gitId":"ZechariahTan"},"content":"        case LIST_COMMAND:"},{"lineNumber":49,"author":{"gitId":"ZechariahTan"},"content":"            return new ListCommand();"},{"lineNumber":50,"author":{"gitId":"ZechariahTan"},"content":""},{"lineNumber":51,"author":{"gitId":"ZechariahTan"},"content":"        case DONE_COMMAND:"},{"lineNumber":52,"author":{"gitId":"ZechariahTan"},"content":"            try {"},{"lineNumber":53,"author":{"gitId":"ZechariahTan"},"content":"                return new DoneCommand(Integer.parseInt(userInputArr[1]));"},{"lineNumber":54,"author":{"gitId":"ZechariahTan"},"content":"            } catch (NumberFormatException | IndexOutOfBoundsException e) {"},{"lineNumber":55,"author":{"gitId":"ZechariahTan"},"content":"                errMsg \u003d \" ☹ OOPS!!! Input does not match Done command format. eg.\\n\""},{"lineNumber":56,"author":{"gitId":"ZechariahTan"},"content":"                                + \"   Done \u003cindex of task to mark completed\u003e\";"},{"lineNumber":57,"author":{"gitId":"ZechariahTan"},"content":"            }"},{"lineNumber":58,"author":{"gitId":"ZechariahTan"},"content":"            break;"},{"lineNumber":59,"author":{"gitId":"ZechariahTan"},"content":""},{"lineNumber":60,"author":{"gitId":"ZechariahTan"},"content":"        case TODO_COMMAND:"},{"lineNumber":61,"author":{"gitId":"ZechariahTan"},"content":"            pattern \u003d Pattern.compile(\"(?i)todo (.+)\");"},{"lineNumber":62,"author":{"gitId":"ZechariahTan"},"content":"            matcher \u003d pattern.matcher(userInput);"},{"lineNumber":63,"author":{"gitId":"ZechariahTan"},"content":"            if (matcher.find()) {"},{"lineNumber":64,"author":{"gitId":"ZechariahTan"},"content":"                return new TodoCommand(matcher.group(1));"},{"lineNumber":65,"author":{"gitId":"ZechariahTan"},"content":"            } else {"},{"lineNumber":66,"author":{"gitId":"ZechariahTan"},"content":"                errMsg \u003d \" ☹ OOPS!!! Input does not match Todo command format. eg.\\n\""},{"lineNumber":67,"author":{"gitId":"ZechariahTan"},"content":"                                + \"   todo \u003cdescription\u003e\";"},{"lineNumber":68,"author":{"gitId":"ZechariahTan"},"content":"            }"},{"lineNumber":69,"author":{"gitId":"ZechariahTan"},"content":"            break;"},{"lineNumber":70,"author":{"gitId":"ZechariahTan"},"content":""},{"lineNumber":71,"author":{"gitId":"ZechariahTan"},"content":"        case EVENT_COMMAND:"},{"lineNumber":72,"author":{"gitId":"ZechariahTan"},"content":"            try {"},{"lineNumber":73,"author":{"gitId":"ZechariahTan"},"content":"                pattern \u003d Pattern.compile(\"(?i)event (.+) /at (\\\\d?\\\\d-\\\\d\\\\d-\\\\d\\\\d\\\\d\\\\d \\\\d?\\\\d:\\\\d\\\\d)\");"},{"lineNumber":74,"author":{"gitId":"ZechariahTan"},"content":"                matcher \u003d pattern.matcher(userInput);"},{"lineNumber":75,"author":{"gitId":"ZechariahTan"},"content":""},{"lineNumber":76,"author":{"gitId":"ZechariahTan"},"content":"                matcher.find();"},{"lineNumber":77,"author":{"gitId":"ZechariahTan"},"content":"                DateTimeFormatter format \u003d DateTimeFormatter.ofPattern(\"dd-MM-yyyy HH:mm\");"},{"lineNumber":78,"author":{"gitId":"ZechariahTan"},"content":"                LocalDateTime dateTimeObject \u003d LocalDateTime.parse(matcher.group(2), format);"},{"lineNumber":79,"author":{"gitId":"ZechariahTan"},"content":""},{"lineNumber":80,"author":{"gitId":"ZechariahTan"},"content":"                return new EventCommand(matcher.group(1), dateTimeObject);"},{"lineNumber":81,"author":{"gitId":"ZechariahTan"},"content":"            } catch (IllegalStateException e) {"},{"lineNumber":82,"author":{"gitId":"ZechariahTan"},"content":"                errMsg \u003d \" ☹ OOPS!!! Input does not match Event command format. eg.\\n\""},{"lineNumber":83,"author":{"gitId":"ZechariahTan"},"content":"                                + \"   event \u003cdescription\u003e /at \u003cdd-MM-yyyy\u003e \u003chh:mm\u003e\";"},{"lineNumber":84,"author":{"gitId":"ZechariahTan"},"content":"            }"},{"lineNumber":85,"author":{"gitId":"ZechariahTan"},"content":"            break;"},{"lineNumber":86,"author":{"gitId":"ZechariahTan"},"content":""},{"lineNumber":87,"author":{"gitId":"ZechariahTan"},"content":"        case DEADLINE_COMMAND:"},{"lineNumber":88,"author":{"gitId":"ZechariahTan"},"content":"            try {"},{"lineNumber":89,"author":{"gitId":"ZechariahTan"},"content":"                pattern \u003d Pattern.compile(\"(?i)deadline (.+) /by (\\\\d?\\\\d-\\\\d\\\\d-\\\\d\\\\d\\\\d\\\\d \\\\d?\\\\d:\\\\d\\\\d)\");"},{"lineNumber":90,"author":{"gitId":"ZechariahTan"},"content":"                matcher \u003d pattern.matcher(userInput);"},{"lineNumber":91,"author":{"gitId":"ZechariahTan"},"content":""},{"lineNumber":92,"author":{"gitId":"ZechariahTan"},"content":"                matcher.find();"},{"lineNumber":93,"author":{"gitId":"ZechariahTan"},"content":"                DateTimeFormatter format \u003d DateTimeFormatter.ofPattern(\"dd-MM-yyyy HH:mm\");"},{"lineNumber":94,"author":{"gitId":"ZechariahTan"},"content":"                LocalDateTime dateTimeObject \u003d LocalDateTime.parse(matcher.group(2), format);"},{"lineNumber":95,"author":{"gitId":"ZechariahTan"},"content":""},{"lineNumber":96,"author":{"gitId":"ZechariahTan"},"content":"                return new DeadlineCommand(matcher.group(1), dateTimeObject);"},{"lineNumber":97,"author":{"gitId":"ZechariahTan"},"content":"            } catch (IllegalStateException e) {"},{"lineNumber":98,"author":{"gitId":"ZechariahTan"},"content":"                errMsg \u003d \" ☹ OOPS!!! Input does not match Deadline command format. eg.\\n\""},{"lineNumber":99,"author":{"gitId":"ZechariahTan"},"content":"                                + \"   deadline \u003cdescription\u003e /by \u003cdeadline\u003e\";"},{"lineNumber":100,"author":{"gitId":"ZechariahTan"},"content":"            }"},{"lineNumber":101,"author":{"gitId":"ZechariahTan"},"content":"            break;"},{"lineNumber":102,"author":{"gitId":"ZechariahTan"},"content":""},{"lineNumber":103,"author":{"gitId":"ZechariahTan"},"content":"        case DELETE_COMMAND:"},{"lineNumber":104,"author":{"gitId":"ZechariahTan"},"content":"            try {"},{"lineNumber":105,"author":{"gitId":"ZechariahTan"},"content":"                return new DeleteCommand(Integer.parseInt(userInputArr[1]));"},{"lineNumber":106,"author":{"gitId":"ZechariahTan"},"content":"            } catch (NumberFormatException | IndexOutOfBoundsException e) {"},{"lineNumber":107,"author":{"gitId":"ZechariahTan"},"content":"                errMsg \u003d \" ☹ OOPS!!! Input does not match Delete command format. eg.\\n\""},{"lineNumber":108,"author":{"gitId":"ZechariahTan"},"content":"                                + \"   Delete \u003cindex of task to delete\u003e\";"},{"lineNumber":109,"author":{"gitId":"ZechariahTan"},"content":"            }"},{"lineNumber":110,"author":{"gitId":"ZechariahTan"},"content":"            break;"},{"lineNumber":111,"author":{"gitId":"ZechariahTan"},"content":""},{"lineNumber":112,"author":{"gitId":"ZechariahTan"},"content":"        case FIND_COMMAND:"},{"lineNumber":113,"author":{"gitId":"ZechariahTan"},"content":"            try {"},{"lineNumber":114,"author":{"gitId":"ZechariahTan"},"content":"                pattern \u003d Pattern.compile(\"(?i)find (.+)\");"},{"lineNumber":115,"author":{"gitId":"ZechariahTan"},"content":"                matcher \u003d pattern.matcher(userInput);"},{"lineNumber":116,"author":{"gitId":"ZechariahTan"},"content":""},{"lineNumber":117,"author":{"gitId":"ZechariahTan"},"content":"                matcher.find();"},{"lineNumber":118,"author":{"gitId":"ZechariahTan"},"content":""},{"lineNumber":119,"author":{"gitId":"ZechariahTan"},"content":"                return new FindCommand(matcher.group(1));"},{"lineNumber":120,"author":{"gitId":"ZechariahTan"},"content":"            } catch (IllegalStateException e) {"},{"lineNumber":121,"author":{"gitId":"ZechariahTan"},"content":"                errMsg \u003d \" ☹ OOPS!!! Input does not match Find command format. eg.\\n\""},{"lineNumber":122,"author":{"gitId":"ZechariahTan"},"content":"                                + \"   find \u003ckeyword\u003e \";"},{"lineNumber":123,"author":{"gitId":"ZechariahTan"},"content":"            }"},{"lineNumber":124,"author":{"gitId":"ZechariahTan"},"content":"            break;"},{"lineNumber":125,"author":{"gitId":"ZechariahTan"},"content":""},{"lineNumber":126,"author":{"gitId":"ZechariahTan"},"content":"        default:"},{"lineNumber":127,"author":{"gitId":"ZechariahTan"},"content":"            errMsg \u003d \" OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\";"},{"lineNumber":128,"author":{"gitId":"ZechariahTan"},"content":"        }"},{"lineNumber":129,"author":{"gitId":"ZechariahTan"},"content":"        return new ExceptionCommand(errMsg);"},{"lineNumber":130,"author":{"gitId":"ZechariahTan"},"content":"    }"},{"lineNumber":131,"author":{"gitId":"ZechariahTan"},"content":"}"},{"lineNumber":132,"author":{"gitId":"ZechariahTan"},"content":""}],"authorContributionMap":{"ZechariahTan":132}},{"path":"src/main/java/mike/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ZechariahTan"},"content":"package mike;"},{"lineNumber":2,"author":{"gitId":"ZechariahTan"},"content":""},{"lineNumber":3,"author":{"gitId":"ZechariahTan"},"content":"import java.io.File;"},{"lineNumber":4,"author":{"gitId":"ZechariahTan"},"content":"import java.io.FileWriter;"},{"lineNumber":5,"author":{"gitId":"ZechariahTan"},"content":"import java.io.IOException;"},{"lineNumber":6,"author":{"gitId":"ZechariahTan"},"content":"import java.util.Scanner;"},{"lineNumber":7,"author":{"gitId":"ZechariahTan"},"content":""},{"lineNumber":8,"author":{"gitId":"ZechariahTan"},"content":"import exception.MikeCommandExecutionException;"},{"lineNumber":9,"author":{"gitId":"ZechariahTan"},"content":""},{"lineNumber":10,"author":{"gitId":"ZechariahTan"},"content":"public class Storage {"},{"lineNumber":11,"author":{"gitId":"ZechariahTan"},"content":"    private File listFile;"},{"lineNumber":12,"author":{"gitId":"ZechariahTan"},"content":""},{"lineNumber":13,"author":{"gitId":"ZechariahTan"},"content":"    public Storage(String filePath) {"},{"lineNumber":14,"author":{"gitId":"ZechariahTan"},"content":"        this.listFile \u003d new File(filePath);"},{"lineNumber":15,"author":{"gitId":"ZechariahTan"},"content":"    }"},{"lineNumber":16,"author":{"gitId":"ZechariahTan"},"content":""},{"lineNumber":17,"author":{"gitId":"ZechariahTan"},"content":"    /**"},{"lineNumber":18,"author":{"gitId":"ZechariahTan"},"content":"     * Update saved tasklist file after command execution"},{"lineNumber":19,"author":{"gitId":"ZechariahTan"},"content":"     * Create file if it does not exist"},{"lineNumber":20,"author":{"gitId":"ZechariahTan"},"content":"     * @param taskList taskList to be saved"},{"lineNumber":21,"author":{"gitId":"ZechariahTan"},"content":"     * @throws MikeCommandExecutionException if tasklist cannot be saved to file"},{"lineNumber":22,"author":{"gitId":"ZechariahTan"},"content":"     */"},{"lineNumber":23,"author":{"gitId":"ZechariahTan"},"content":"    public void updateListFile(TaskList taskList) throws MikeCommandExecutionException {"},{"lineNumber":24,"author":{"gitId":"ZechariahTan"},"content":"        try {"},{"lineNumber":25,"author":{"gitId":"ZechariahTan"},"content":"            if (!this.listFile.exists()) {"},{"lineNumber":26,"author":{"gitId":"ZechariahTan"},"content":"                this.listFile.getParentFile().mkdir();"},{"lineNumber":27,"author":{"gitId":"ZechariahTan"},"content":"                this.listFile.createNewFile();"},{"lineNumber":28,"author":{"gitId":"ZechariahTan"},"content":"            }"},{"lineNumber":29,"author":{"gitId":"ZechariahTan"},"content":"            FileWriter fw \u003d new FileWriter(this.listFile.getPath());"},{"lineNumber":30,"author":{"gitId":"ZechariahTan"},"content":"            fw.write(taskList.toString());"},{"lineNumber":31,"author":{"gitId":"ZechariahTan"},"content":"            fw.close();"},{"lineNumber":32,"author":{"gitId":"ZechariahTan"},"content":"        } catch (IOException e) {"},{"lineNumber":33,"author":{"gitId":"ZechariahTan"},"content":"            throw new MikeCommandExecutionException(\"Write to saved list error\", \"File does not exist\");"},{"lineNumber":34,"author":{"gitId":"ZechariahTan"},"content":"        }"},{"lineNumber":35,"author":{"gitId":"ZechariahTan"},"content":"    }"},{"lineNumber":36,"author":{"gitId":"ZechariahTan"},"content":""},{"lineNumber":37,"author":{"gitId":"ZechariahTan"},"content":"    /**"},{"lineNumber":38,"author":{"gitId":"ZechariahTan"},"content":"     * Reads list from saved .txt file"},{"lineNumber":39,"author":{"gitId":"ZechariahTan"},"content":"     * @return TaskList object representation of task list saved in file"},{"lineNumber":40,"author":{"gitId":"ZechariahTan"},"content":"     */"},{"lineNumber":41,"author":{"gitId":"ZechariahTan"},"content":"    public TaskList readListFromFile() {"},{"lineNumber":42,"author":{"gitId":"ZechariahTan"},"content":"        TaskList taskList \u003d new TaskList();"},{"lineNumber":43,"author":{"gitId":"ZechariahTan"},"content":"        try {"},{"lineNumber":44,"author":{"gitId":"ZechariahTan"},"content":"            if (!this.listFile.exists()) {"},{"lineNumber":45,"author":{"gitId":"ZechariahTan"},"content":"                this.listFile.getParentFile().mkdir();"},{"lineNumber":46,"author":{"gitId":"ZechariahTan"},"content":"                this.listFile.createNewFile();"},{"lineNumber":47,"author":{"gitId":"ZechariahTan"},"content":"            }"},{"lineNumber":48,"author":{"gitId":"ZechariahTan"},"content":"            Scanner scanner \u003d new Scanner(this.listFile);"},{"lineNumber":49,"author":{"gitId":"ZechariahTan"},"content":"            while (scanner.hasNextLine()) {"},{"lineNumber":50,"author":{"gitId":"ZechariahTan"},"content":"                taskList.strToTask(scanner.nextLine());"},{"lineNumber":51,"author":{"gitId":"ZechariahTan"},"content":"            }"},{"lineNumber":52,"author":{"gitId":"ZechariahTan"},"content":"        } catch (MikeCommandExecutionException e) {"},{"lineNumber":53,"author":{"gitId":"ZechariahTan"},"content":"            UI.printException(e.getCommand() , e.getMessage());"},{"lineNumber":54,"author":{"gitId":"ZechariahTan"},"content":"        } catch (IOException e) {"},{"lineNumber":55,"author":{"gitId":"ZechariahTan"},"content":"            UI.printException(e.getMessage());"},{"lineNumber":56,"author":{"gitId":"ZechariahTan"},"content":"        }"},{"lineNumber":57,"author":{"gitId":"ZechariahTan"},"content":""},{"lineNumber":58,"author":{"gitId":"ZechariahTan"},"content":"        return taskList;"},{"lineNumber":59,"author":{"gitId":"ZechariahTan"},"content":"    }"},{"lineNumber":60,"author":{"gitId":"ZechariahTan"},"content":"}"}],"authorContributionMap":{"ZechariahTan":60}},{"path":"src/main/java/mike/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ZechariahTan"},"content":"package mike;"},{"lineNumber":2,"author":{"gitId":"ZechariahTan"},"content":""},{"lineNumber":3,"author":{"gitId":"ZechariahTan"},"content":"import java.time.LocalDateTime;"},{"lineNumber":4,"author":{"gitId":"ZechariahTan"},"content":"import java.time.format.DateTimeFormatter;"},{"lineNumber":5,"author":{"gitId":"ZechariahTan"},"content":"import java.util.ArrayList;"},{"lineNumber":6,"author":{"gitId":"ZechariahTan"},"content":"import java.util.List;"},{"lineNumber":7,"author":{"gitId":"ZechariahTan"},"content":"import java.util.regex.Matcher;"},{"lineNumber":8,"author":{"gitId":"ZechariahTan"},"content":"import java.util.regex.Pattern;"},{"lineNumber":9,"author":{"gitId":"ZechariahTan"},"content":""},{"lineNumber":10,"author":{"gitId":"ZechariahTan"},"content":"import exception.MikeCommandExecutionException;"},{"lineNumber":11,"author":{"gitId":"ZechariahTan"},"content":"import task.DeadlineTask;"},{"lineNumber":12,"author":{"gitId":"ZechariahTan"},"content":"import task.EventTask;"},{"lineNumber":13,"author":{"gitId":"ZechariahTan"},"content":"import task.TodoTask;"},{"lineNumber":14,"author":{"gitId":"ZechariahTan"},"content":""},{"lineNumber":15,"author":{"gitId":"ZechariahTan"},"content":"public class TaskList {"},{"lineNumber":16,"author":{"gitId":"ZechariahTan"},"content":"    private List\u003ctask.Task\u003e taskList;"},{"lineNumber":17,"author":{"gitId":"ZechariahTan"},"content":"    private int numTasks \u003d 0;"},{"lineNumber":18,"author":{"gitId":"ZechariahTan"},"content":""},{"lineNumber":19,"author":{"gitId":"ZechariahTan"},"content":"    public TaskList() {"},{"lineNumber":20,"author":{"gitId":"ZechariahTan"},"content":"        taskList \u003d new ArrayList\u003c\u003e();"},{"lineNumber":21,"author":{"gitId":"ZechariahTan"},"content":"    }"},{"lineNumber":22,"author":{"gitId":"ZechariahTan"},"content":""},{"lineNumber":23,"author":{"gitId":"ZechariahTan"},"content":"    /**"},{"lineNumber":24,"author":{"gitId":"ZechariahTan"},"content":"     * Add task to list of tasks then increment number of tasks stored"},{"lineNumber":25,"author":{"gitId":"ZechariahTan"},"content":"     *"},{"lineNumber":26,"author":{"gitId":"ZechariahTan"},"content":"     * @param task task to be added to list"},{"lineNumber":27,"author":{"gitId":"ZechariahTan"},"content":"     */"},{"lineNumber":28,"author":{"gitId":"ZechariahTan"},"content":"    public void addTaskToList(task.Task task) {"},{"lineNumber":29,"author":{"gitId":"ZechariahTan"},"content":"        taskList.add(task);"},{"lineNumber":30,"author":{"gitId":"ZechariahTan"},"content":"        numTasks++;"},{"lineNumber":31,"author":{"gitId":"ZechariahTan"},"content":"    }"},{"lineNumber":32,"author":{"gitId":"ZechariahTan"},"content":""},{"lineNumber":33,"author":{"gitId":"ZechariahTan"},"content":"    /**"},{"lineNumber":34,"author":{"gitId":"ZechariahTan"},"content":"     * Get number of tasks stored in task list"},{"lineNumber":35,"author":{"gitId":"ZechariahTan"},"content":"     *"},{"lineNumber":36,"author":{"gitId":"ZechariahTan"},"content":"     * @return num of tasks in list"},{"lineNumber":37,"author":{"gitId":"ZechariahTan"},"content":"     */"},{"lineNumber":38,"author":{"gitId":"ZechariahTan"},"content":"    public int getNumTasks() {"},{"lineNumber":39,"author":{"gitId":"ZechariahTan"},"content":"        return numTasks;"},{"lineNumber":40,"author":{"gitId":"ZechariahTan"},"content":"    }"},{"lineNumber":41,"author":{"gitId":"ZechariahTan"},"content":""},{"lineNumber":42,"author":{"gitId":"ZechariahTan"},"content":"    /**"},{"lineNumber":43,"author":{"gitId":"ZechariahTan"},"content":"     * return nth task starting at index 1"},{"lineNumber":44,"author":{"gitId":"ZechariahTan"},"content":"     *"},{"lineNumber":45,"author":{"gitId":"ZechariahTan"},"content":"     * @param i the index of the task to be retrieved"},{"lineNumber":46,"author":{"gitId":"ZechariahTan"},"content":"     * @return the Task.Task object"},{"lineNumber":47,"author":{"gitId":"ZechariahTan"},"content":"     */"},{"lineNumber":48,"author":{"gitId":"ZechariahTan"},"content":"    public task.Task getNthTask(int i) {"},{"lineNumber":49,"author":{"gitId":"ZechariahTan"},"content":"        return this.taskList.get(i - 1);"},{"lineNumber":50,"author":{"gitId":"ZechariahTan"},"content":"    }"},{"lineNumber":51,"author":{"gitId":"ZechariahTan"},"content":""},{"lineNumber":52,"author":{"gitId":"ZechariahTan"},"content":"    /**"},{"lineNumber":53,"author":{"gitId":"ZechariahTan"},"content":"     * deleted the nth task starting at index 1"},{"lineNumber":54,"author":{"gitId":"ZechariahTan"},"content":"     *"},{"lineNumber":55,"author":{"gitId":"ZechariahTan"},"content":"     * @param i the index of the task to be deleted"},{"lineNumber":56,"author":{"gitId":"ZechariahTan"},"content":"     */"},{"lineNumber":57,"author":{"gitId":"ZechariahTan"},"content":"    public void deleteNthTask(int i) {"},{"lineNumber":58,"author":{"gitId":"ZechariahTan"},"content":"        this.numTasks--;"},{"lineNumber":59,"author":{"gitId":"ZechariahTan"},"content":"        this.taskList.remove(i - 1);"},{"lineNumber":60,"author":{"gitId":"ZechariahTan"},"content":"    }"},{"lineNumber":61,"author":{"gitId":"ZechariahTan"},"content":""},{"lineNumber":62,"author":{"gitId":"ZechariahTan"},"content":"    /**"},{"lineNumber":63,"author":{"gitId":"ZechariahTan"},"content":"     * Convert string representation of a task to a Task object"},{"lineNumber":64,"author":{"gitId":"ZechariahTan"},"content":"     * @param strTask String representation of task to be converted"},{"lineNumber":65,"author":{"gitId":"ZechariahTan"},"content":"     * @throws MikeCommandExecutionException if string representation of the task is of an invalid format"},{"lineNumber":66,"author":{"gitId":"ZechariahTan"},"content":"     */"},{"lineNumber":67,"author":{"gitId":"ZechariahTan"},"content":"    public void strToTask(String strTask) throws MikeCommandExecutionException {"},{"lineNumber":68,"author":{"gitId":"ZechariahTan"},"content":"        Pattern pattern \u003d Pattern.compile(\"(\\\\d)\\\\. \\\\[([TDE])\\\\] \\\\[([X ])\\\\] (.+)\");"},{"lineNumber":69,"author":{"gitId":"ZechariahTan"},"content":"        Matcher matcher \u003d pattern.matcher(strTask);"},{"lineNumber":70,"author":{"gitId":"ZechariahTan"},"content":"        Matcher descriptionMatcher;"},{"lineNumber":71,"author":{"gitId":"ZechariahTan"},"content":"        DateTimeFormatter format \u003d DateTimeFormatter.ofPattern(\"dd MMM yyyy, hh:mm a\");"},{"lineNumber":72,"author":{"gitId":"ZechariahTan"},"content":"        LocalDateTime dateTimeObject;"},{"lineNumber":73,"author":{"gitId":"ZechariahTan"},"content":""},{"lineNumber":74,"author":{"gitId":"ZechariahTan"},"content":"        matcher.find();"},{"lineNumber":75,"author":{"gitId":"ZechariahTan"},"content":"        boolean isDoneTask \u003d matcher.group(3).equals(\"X\");"},{"lineNumber":76,"author":{"gitId":"ZechariahTan"},"content":""},{"lineNumber":77,"author":{"gitId":"ZechariahTan"},"content":"        switch(matcher.group(2)) {"},{"lineNumber":78,"author":{"gitId":"ZechariahTan"},"content":"        case \"T\":"},{"lineNumber":79,"author":{"gitId":"ZechariahTan"},"content":"            this.addTaskToList(new TodoTask(matcher.group(4)));"},{"lineNumber":80,"author":{"gitId":"ZechariahTan"},"content":"            break;"},{"lineNumber":81,"author":{"gitId":"ZechariahTan"},"content":""},{"lineNumber":82,"author":{"gitId":"ZechariahTan"},"content":"        case \"E\":"},{"lineNumber":83,"author":{"gitId":"ZechariahTan"},"content":"            pattern \u003d Pattern.compile(\"(.+) (?\u003d\\\\(at: (\\\\d\\\\d \\\\w\\\\w\\\\w \\\\d\\\\d\\\\d\\\\d, \\\\d\\\\d:\\\\d\\\\d \""},{"lineNumber":84,"author":{"gitId":"ZechariahTan"},"content":"                    + \"\\\\w\\\\w)\\\\))\");"},{"lineNumber":85,"author":{"gitId":"ZechariahTan"},"content":"            descriptionMatcher \u003d pattern.matcher(matcher.group(4));"},{"lineNumber":86,"author":{"gitId":"ZechariahTan"},"content":"            descriptionMatcher.find();"},{"lineNumber":87,"author":{"gitId":"ZechariahTan"},"content":"            dateTimeObject \u003d LocalDateTime.parse(descriptionMatcher.group(2), format);"},{"lineNumber":88,"author":{"gitId":"ZechariahTan"},"content":"            this.addTaskToList(new EventTask(descriptionMatcher.group(1), dateTimeObject));"},{"lineNumber":89,"author":{"gitId":"ZechariahTan"},"content":"            break;"},{"lineNumber":90,"author":{"gitId":"ZechariahTan"},"content":""},{"lineNumber":91,"author":{"gitId":"ZechariahTan"},"content":"        case \"D\":"},{"lineNumber":92,"author":{"gitId":"ZechariahTan"},"content":"            pattern \u003d Pattern.compile(\"(.+) (?\u003d\\\\(by: (\\\\d\\\\d \\\\w\\\\w\\\\w \\\\d\\\\d\\\\d\\\\d, \\\\d\\\\d:\\\\d\\\\d \""},{"lineNumber":93,"author":{"gitId":"ZechariahTan"},"content":"                    + \"\\\\w\\\\w)\\\\))\");"},{"lineNumber":94,"author":{"gitId":"ZechariahTan"},"content":"            descriptionMatcher \u003d pattern.matcher(matcher.group(4));"},{"lineNumber":95,"author":{"gitId":"ZechariahTan"},"content":"            descriptionMatcher.find();"},{"lineNumber":96,"author":{"gitId":"ZechariahTan"},"content":"            dateTimeObject \u003d LocalDateTime.parse(descriptionMatcher.group(2), format);"},{"lineNumber":97,"author":{"gitId":"ZechariahTan"},"content":"            this.addTaskToList(new DeadlineTask(descriptionMatcher.group(1), dateTimeObject));"},{"lineNumber":98,"author":{"gitId":"ZechariahTan"},"content":"            break;"},{"lineNumber":99,"author":{"gitId":"ZechariahTan"},"content":""},{"lineNumber":100,"author":{"gitId":"ZechariahTan"},"content":"        default:"},{"lineNumber":101,"author":{"gitId":"ZechariahTan"},"content":"            throw new MikeCommandExecutionException(\"strToTask error\", \"No such task type\");"},{"lineNumber":102,"author":{"gitId":"ZechariahTan"},"content":"        }"},{"lineNumber":103,"author":{"gitId":"ZechariahTan"},"content":"        if (isDoneTask) {"},{"lineNumber":104,"author":{"gitId":"ZechariahTan"},"content":"            this.getNthTask(Integer.parseInt(matcher.group(1))).completeTask();"},{"lineNumber":105,"author":{"gitId":"ZechariahTan"},"content":"        }"},{"lineNumber":106,"author":{"gitId":"ZechariahTan"},"content":"    }"},{"lineNumber":107,"author":{"gitId":"ZechariahTan"},"content":""},{"lineNumber":108,"author":{"gitId":"ZechariahTan"},"content":"    @Override"},{"lineNumber":109,"author":{"gitId":"ZechariahTan"},"content":"    public String toString() {"},{"lineNumber":110,"author":{"gitId":"ZechariahTan"},"content":"        StringBuilder buffer \u003d new StringBuilder();"},{"lineNumber":111,"author":{"gitId":"ZechariahTan"},"content":""},{"lineNumber":112,"author":{"gitId":"ZechariahTan"},"content":"        for (int i \u003d 1; i \u003c\u003d numTasks; i++) {"},{"lineNumber":113,"author":{"gitId":"ZechariahTan"},"content":"            buffer.append(i);"},{"lineNumber":114,"author":{"gitId":"ZechariahTan"},"content":"            buffer.append(\". \");"},{"lineNumber":115,"author":{"gitId":"ZechariahTan"},"content":"            buffer.append(taskList.get(i - 1).toString());"},{"lineNumber":116,"author":{"gitId":"ZechariahTan"},"content":"            buffer.append(\"\\n\");"},{"lineNumber":117,"author":{"gitId":"ZechariahTan"},"content":"        }"},{"lineNumber":118,"author":{"gitId":"ZechariahTan"},"content":"        return buffer.toString();"},{"lineNumber":119,"author":{"gitId":"ZechariahTan"},"content":"    }"},{"lineNumber":120,"author":{"gitId":"ZechariahTan"},"content":""},{"lineNumber":121,"author":{"gitId":"ZechariahTan"},"content":"}"}],"authorContributionMap":{"ZechariahTan":121}},{"path":"src/main/java/mike/UI.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ZechariahTan"},"content":"package mike;"},{"lineNumber":2,"author":{"gitId":"ZechariahTan"},"content":""},{"lineNumber":3,"author":{"gitId":"ZechariahTan"},"content":"public class UI {"},{"lineNumber":4,"author":{"gitId":"ZechariahTan"},"content":""},{"lineNumber":5,"author":{"gitId":"ZechariahTan"},"content":"    /**"},{"lineNumber":6,"author":{"gitId":"ZechariahTan"},"content":"     * Format response by wrapping lines above and below"},{"lineNumber":7,"author":{"gitId":"ZechariahTan"},"content":"     * @param response response to be formatted"},{"lineNumber":8,"author":{"gitId":"ZechariahTan"},"content":"     */"},{"lineNumber":9,"author":{"gitId":"ZechariahTan"},"content":"    public static void printResponse(String response) {"},{"lineNumber":10,"author":{"gitId":"ZechariahTan"},"content":"        System.out.print(String.format(\"____________________________________________________________\\n\""},{"lineNumber":11,"author":{"gitId":"ZechariahTan"},"content":"                + \"%s\\n\""},{"lineNumber":12,"author":{"gitId":"ZechariahTan"},"content":"                + \"____________________________________________________________\\n\", response));"},{"lineNumber":13,"author":{"gitId":"ZechariahTan"},"content":"    }"},{"lineNumber":14,"author":{"gitId":"ZechariahTan"},"content":""},{"lineNumber":15,"author":{"gitId":"ZechariahTan"},"content":"    /**"},{"lineNumber":16,"author":{"gitId":"ZechariahTan"},"content":"     * Format exception with source by wrapping lines above and below"},{"lineNumber":17,"author":{"gitId":"ZechariahTan"},"content":"     * @param source source of the exception thrown"},{"lineNumber":18,"author":{"gitId":"ZechariahTan"},"content":"     * @param message error to be formatted"},{"lineNumber":19,"author":{"gitId":"ZechariahTan"},"content":"     */"},{"lineNumber":20,"author":{"gitId":"ZechariahTan"},"content":"    public static void printException(String source, String message) {"},{"lineNumber":21,"author":{"gitId":"ZechariahTan"},"content":"        System.out.print(String.format(\"____________________________________________________________\\n\""},{"lineNumber":22,"author":{"gitId":"ZechariahTan"},"content":"                + \"Error in:%s\\n\""},{"lineNumber":23,"author":{"gitId":"ZechariahTan"},"content":"                + \"Details: %s\\n\""},{"lineNumber":24,"author":{"gitId":"ZechariahTan"},"content":"                + \"____________________________________________________________\\n\", source, message));"},{"lineNumber":25,"author":{"gitId":"ZechariahTan"},"content":"    }"},{"lineNumber":26,"author":{"gitId":"ZechariahTan"},"content":""},{"lineNumber":27,"author":{"gitId":"ZechariahTan"},"content":"    /**"},{"lineNumber":28,"author":{"gitId":"ZechariahTan"},"content":"     * Format exception by wrapping lines above and below"},{"lineNumber":29,"author":{"gitId":"ZechariahTan"},"content":"     * @param message error to be formatted"},{"lineNumber":30,"author":{"gitId":"ZechariahTan"},"content":"     */"},{"lineNumber":31,"author":{"gitId":"ZechariahTan"},"content":"    public static void printException(String message) {"},{"lineNumber":32,"author":{"gitId":"ZechariahTan"},"content":"        System.out.print(String.format(\"____________________________________________________________\\n\""},{"lineNumber":33,"author":{"gitId":"ZechariahTan"},"content":"                + \"Details: %s\\n\""},{"lineNumber":34,"author":{"gitId":"ZechariahTan"},"content":"                + \"____________________________________________________________\\n\", message));"},{"lineNumber":35,"author":{"gitId":"ZechariahTan"},"content":"    }"},{"lineNumber":36,"author":{"gitId":"ZechariahTan"},"content":"}"}],"authorContributionMap":{"ZechariahTan":36}},{"path":"src/main/java/task/DeadlineTask.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ZechariahTan"},"content":"package task;"},{"lineNumber":2,"author":{"gitId":"ZechariahTan"},"content":""},{"lineNumber":3,"author":{"gitId":"ZechariahTan"},"content":"import java.time.LocalDateTime;"},{"lineNumber":4,"author":{"gitId":"ZechariahTan"},"content":"import java.time.format.DateTimeFormatter;"},{"lineNumber":5,"author":{"gitId":"ZechariahTan"},"content":""},{"lineNumber":6,"author":{"gitId":"ZechariahTan"},"content":"public class DeadlineTask extends Task {"},{"lineNumber":7,"author":{"gitId":"ZechariahTan"},"content":""},{"lineNumber":8,"author":{"gitId":"ZechariahTan"},"content":"    private final LocalDateTime deadline;"},{"lineNumber":9,"author":{"gitId":"ZechariahTan"},"content":""},{"lineNumber":10,"author":{"gitId":"ZechariahTan"},"content":"    /**"},{"lineNumber":11,"author":{"gitId":"ZechariahTan"},"content":"     * Constructs new Deadline task with provided taskDescription and deadline"},{"lineNumber":12,"author":{"gitId":"ZechariahTan"},"content":"     * @param taskDescription description of task"},{"lineNumber":13,"author":{"gitId":"ZechariahTan"},"content":"     * @param deadline deadline of the given task"},{"lineNumber":14,"author":{"gitId":"ZechariahTan"},"content":"     */"},{"lineNumber":15,"author":{"gitId":"ZechariahTan"},"content":"    public DeadlineTask(String taskDescription, LocalDateTime deadline) {"},{"lineNumber":16,"author":{"gitId":"ZechariahTan"},"content":"        this.taskDescription \u003d taskDescription;"},{"lineNumber":17,"author":{"gitId":"ZechariahTan"},"content":"        this.deadline \u003d deadline;"},{"lineNumber":18,"author":{"gitId":"ZechariahTan"},"content":"        this.taskType \u003d \u0027D\u0027;"},{"lineNumber":19,"author":{"gitId":"ZechariahTan"},"content":"    }"},{"lineNumber":20,"author":{"gitId":"ZechariahTan"},"content":""},{"lineNumber":21,"author":{"gitId":"ZechariahTan"},"content":"    @Override"},{"lineNumber":22,"author":{"gitId":"ZechariahTan"},"content":"    public String toString() {"},{"lineNumber":23,"author":{"gitId":"ZechariahTan"},"content":"        if (isDone) {"},{"lineNumber":24,"author":{"gitId":"ZechariahTan"},"content":"            return String.format(\"[%c] [X] %s (by: %s)\", this.taskType, this.taskDescription,"},{"lineNumber":25,"author":{"gitId":"ZechariahTan"},"content":"                    this.dateToString(this.deadline));"},{"lineNumber":26,"author":{"gitId":"ZechariahTan"},"content":"        } else {"},{"lineNumber":27,"author":{"gitId":"ZechariahTan"},"content":"            return String.format(\"[%c] [ ] %s (by: %s)\", this.taskType, this.taskDescription,"},{"lineNumber":28,"author":{"gitId":"ZechariahTan"},"content":"                    this.dateToString(this.deadline));"},{"lineNumber":29,"author":{"gitId":"ZechariahTan"},"content":"        }"},{"lineNumber":30,"author":{"gitId":"ZechariahTan"},"content":"    }"},{"lineNumber":31,"author":{"gitId":"ZechariahTan"},"content":""},{"lineNumber":32,"author":{"gitId":"ZechariahTan"},"content":"    /**"},{"lineNumber":33,"author":{"gitId":"ZechariahTan"},"content":"     * Convert LocalDateTime object to a string representation"},{"lineNumber":34,"author":{"gitId":"ZechariahTan"},"content":"     * @param dateObject LocalDateTime object to be converted"},{"lineNumber":35,"author":{"gitId":"ZechariahTan"},"content":"     * @return string of formatted LocalDateTime object"},{"lineNumber":36,"author":{"gitId":"ZechariahTan"},"content":"     */"},{"lineNumber":37,"author":{"gitId":"ZechariahTan"},"content":"    private String dateToString(LocalDateTime dateObject) {"},{"lineNumber":38,"author":{"gitId":"ZechariahTan"},"content":"        return DateTimeFormatter.ofPattern(\"dd MMM yyyy, hh:mm a\").format(dateObject);"},{"lineNumber":39,"author":{"gitId":"ZechariahTan"},"content":"    }"},{"lineNumber":40,"author":{"gitId":"ZechariahTan"},"content":"}"}],"authorContributionMap":{"ZechariahTan":40}},{"path":"src/main/java/task/EventTask.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ZechariahTan"},"content":"package task;"},{"lineNumber":2,"author":{"gitId":"ZechariahTan"},"content":""},{"lineNumber":3,"author":{"gitId":"ZechariahTan"},"content":"import java.time.LocalDateTime;"},{"lineNumber":4,"author":{"gitId":"ZechariahTan"},"content":"import java.time.format.DateTimeFormatter;"},{"lineNumber":5,"author":{"gitId":"ZechariahTan"},"content":""},{"lineNumber":6,"author":{"gitId":"ZechariahTan"},"content":"public class EventTask extends Task {"},{"lineNumber":7,"author":{"gitId":"ZechariahTan"},"content":""},{"lineNumber":8,"author":{"gitId":"ZechariahTan"},"content":"    private final LocalDateTime timeWindow;"},{"lineNumber":9,"author":{"gitId":"ZechariahTan"},"content":""},{"lineNumber":10,"author":{"gitId":"ZechariahTan"},"content":"    /**"},{"lineNumber":11,"author":{"gitId":"ZechariahTan"},"content":"     * Constructs new Event task with provided taskDescription and deadline"},{"lineNumber":12,"author":{"gitId":"ZechariahTan"},"content":"     * @param taskDescription description of task"},{"lineNumber":13,"author":{"gitId":"ZechariahTan"},"content":"     * @param timeWindow timewindow of the given task"},{"lineNumber":14,"author":{"gitId":"ZechariahTan"},"content":"     */"},{"lineNumber":15,"author":{"gitId":"ZechariahTan"},"content":"    public EventTask(String taskDescription, LocalDateTime timeWindow) {"},{"lineNumber":16,"author":{"gitId":"ZechariahTan"},"content":"        this.taskDescription \u003d taskDescription;"},{"lineNumber":17,"author":{"gitId":"ZechariahTan"},"content":"        this.timeWindow \u003d timeWindow;"},{"lineNumber":18,"author":{"gitId":"ZechariahTan"},"content":"        this.taskType \u003d \u0027E\u0027;"},{"lineNumber":19,"author":{"gitId":"ZechariahTan"},"content":"    }"},{"lineNumber":20,"author":{"gitId":"ZechariahTan"},"content":""},{"lineNumber":21,"author":{"gitId":"ZechariahTan"},"content":"    @Override"},{"lineNumber":22,"author":{"gitId":"ZechariahTan"},"content":"    public String toString() {"},{"lineNumber":23,"author":{"gitId":"ZechariahTan"},"content":"        if (isDone) {"},{"lineNumber":24,"author":{"gitId":"ZechariahTan"},"content":"            return String.format(\"[%c] [X] %s (at: %s)\", this.taskType, this.taskDescription,"},{"lineNumber":25,"author":{"gitId":"ZechariahTan"},"content":"                    this.dateToString(this.timeWindow));"},{"lineNumber":26,"author":{"gitId":"ZechariahTan"},"content":"        } else {"},{"lineNumber":27,"author":{"gitId":"ZechariahTan"},"content":"            return String.format(\"[%c] [ ] %s (at: %s)\", this.taskType, this.taskDescription,"},{"lineNumber":28,"author":{"gitId":"ZechariahTan"},"content":"                    this.dateToString(this.timeWindow));"},{"lineNumber":29,"author":{"gitId":"ZechariahTan"},"content":"        }"},{"lineNumber":30,"author":{"gitId":"ZechariahTan"},"content":"    }"},{"lineNumber":31,"author":{"gitId":"ZechariahTan"},"content":""},{"lineNumber":32,"author":{"gitId":"ZechariahTan"},"content":"    /**"},{"lineNumber":33,"author":{"gitId":"ZechariahTan"},"content":"     * Convert LocalDateTime object to a string representation"},{"lineNumber":34,"author":{"gitId":"ZechariahTan"},"content":"     * @param dateObject LocalDateTime object to be converted"},{"lineNumber":35,"author":{"gitId":"ZechariahTan"},"content":"     * @return string of formatted LocalDateTime object"},{"lineNumber":36,"author":{"gitId":"ZechariahTan"},"content":"     */"},{"lineNumber":37,"author":{"gitId":"ZechariahTan"},"content":"    private String dateToString(LocalDateTime dateObject) {"},{"lineNumber":38,"author":{"gitId":"ZechariahTan"},"content":"        return DateTimeFormatter.ofPattern(\"dd MMM yyyy, hh:mm a\").format(dateObject);"},{"lineNumber":39,"author":{"gitId":"ZechariahTan"},"content":"    }"},{"lineNumber":40,"author":{"gitId":"ZechariahTan"},"content":"}"}],"authorContributionMap":{"ZechariahTan":40}},{"path":"src/main/java/task/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ZechariahTan"},"content":"package task;"},{"lineNumber":2,"author":{"gitId":"ZechariahTan"},"content":""},{"lineNumber":3,"author":{"gitId":"ZechariahTan"},"content":"public abstract class Task {"},{"lineNumber":4,"author":{"gitId":"ZechariahTan"},"content":"    protected String taskDescription;"},{"lineNumber":5,"author":{"gitId":"ZechariahTan"},"content":"    protected boolean isDone;"},{"lineNumber":6,"author":{"gitId":"ZechariahTan"},"content":"    protected char taskType;"},{"lineNumber":7,"author":{"gitId":"ZechariahTan"},"content":""},{"lineNumber":8,"author":{"gitId":"ZechariahTan"},"content":"    /**"},{"lineNumber":9,"author":{"gitId":"ZechariahTan"},"content":"     * Gets the task description"},{"lineNumber":10,"author":{"gitId":"ZechariahTan"},"content":"     *"},{"lineNumber":11,"author":{"gitId":"ZechariahTan"},"content":"     * @return String description of the task"},{"lineNumber":12,"author":{"gitId":"ZechariahTan"},"content":"     */"},{"lineNumber":13,"author":{"gitId":"ZechariahTan"},"content":"    public String getTaskDescription() {"},{"lineNumber":14,"author":{"gitId":"ZechariahTan"},"content":"        return this.taskDescription;"},{"lineNumber":15,"author":{"gitId":"ZechariahTan"},"content":"    }"},{"lineNumber":16,"author":{"gitId":"ZechariahTan"},"content":""},{"lineNumber":17,"author":{"gitId":"ZechariahTan"},"content":"    /**"},{"lineNumber":18,"author":{"gitId":"ZechariahTan"},"content":"     * Checks if task has been marked completed"},{"lineNumber":19,"author":{"gitId":"ZechariahTan"},"content":"     *"},{"lineNumber":20,"author":{"gitId":"ZechariahTan"},"content":"     * @return value of isDone in task object"},{"lineNumber":21,"author":{"gitId":"ZechariahTan"},"content":"     */"},{"lineNumber":22,"author":{"gitId":"ZechariahTan"},"content":"    public boolean isDone() {"},{"lineNumber":23,"author":{"gitId":"ZechariahTan"},"content":"        return this.isDone;"},{"lineNumber":24,"author":{"gitId":"ZechariahTan"},"content":"    }"},{"lineNumber":25,"author":{"gitId":"ZechariahTan"},"content":""},{"lineNumber":26,"author":{"gitId":"ZechariahTan"},"content":"    /**"},{"lineNumber":27,"author":{"gitId":"ZechariahTan"},"content":"     * Mark task as completed"},{"lineNumber":28,"author":{"gitId":"ZechariahTan"},"content":"     */"},{"lineNumber":29,"author":{"gitId":"ZechariahTan"},"content":"    public void completeTask() {"},{"lineNumber":30,"author":{"gitId":"ZechariahTan"},"content":"        this.isDone \u003d true;"},{"lineNumber":31,"author":{"gitId":"ZechariahTan"},"content":"    }"},{"lineNumber":32,"author":{"gitId":"ZechariahTan"},"content":"}"}],"authorContributionMap":{"ZechariahTan":32}},{"path":"src/main/java/task/TodoTask.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ZechariahTan"},"content":"package task;"},{"lineNumber":2,"author":{"gitId":"ZechariahTan"},"content":""},{"lineNumber":3,"author":{"gitId":"ZechariahTan"},"content":"public class TodoTask extends Task {"},{"lineNumber":4,"author":{"gitId":"ZechariahTan"},"content":""},{"lineNumber":5,"author":{"gitId":"ZechariahTan"},"content":"    /**"},{"lineNumber":6,"author":{"gitId":"ZechariahTan"},"content":"     * Constructs new task with provided taskDescription and deadline"},{"lineNumber":7,"author":{"gitId":"ZechariahTan"},"content":"     * @param taskDescription description of task"},{"lineNumber":8,"author":{"gitId":"ZechariahTan"},"content":"     */"},{"lineNumber":9,"author":{"gitId":"ZechariahTan"},"content":"    public TodoTask(String taskDescription) {"},{"lineNumber":10,"author":{"gitId":"ZechariahTan"},"content":"        this.taskDescription \u003d taskDescription;"},{"lineNumber":11,"author":{"gitId":"ZechariahTan"},"content":"        this.taskType \u003d \u0027T\u0027;"},{"lineNumber":12,"author":{"gitId":"ZechariahTan"},"content":"    }"},{"lineNumber":13,"author":{"gitId":"ZechariahTan"},"content":""},{"lineNumber":14,"author":{"gitId":"ZechariahTan"},"content":"    @Override"},{"lineNumber":15,"author":{"gitId":"ZechariahTan"},"content":"    public String toString() {"},{"lineNumber":16,"author":{"gitId":"ZechariahTan"},"content":"        if (isDone) {"},{"lineNumber":17,"author":{"gitId":"ZechariahTan"},"content":"            return String.format(\"[%c] [X] %s\", this.taskType, this.taskDescription);"},{"lineNumber":18,"author":{"gitId":"ZechariahTan"},"content":"        } else {"},{"lineNumber":19,"author":{"gitId":"ZechariahTan"},"content":"            return String.format(\"[%c] [ ] %s\", this.taskType, this.taskDescription);"},{"lineNumber":20,"author":{"gitId":"ZechariahTan"},"content":"        }"},{"lineNumber":21,"author":{"gitId":"ZechariahTan"},"content":"    }"},{"lineNumber":22,"author":{"gitId":"ZechariahTan"},"content":"}"}],"authorContributionMap":{"ZechariahTan":22}},{"path":"src/main/resources/view/DialogBox.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"ZechariahTan"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"},{"lineNumber":2,"author":{"gitId":"ZechariahTan"},"content":""},{"lineNumber":3,"author":{"gitId":"ZechariahTan"},"content":"\u003c?import javafx.geometry.Insets?\u003e"},{"lineNumber":4,"author":{"gitId":"ZechariahTan"},"content":"\u003c?import javafx.scene.control.Label?\u003e"},{"lineNumber":5,"author":{"gitId":"ZechariahTan"},"content":"\u003c?import javafx.scene.image.ImageView?\u003e"},{"lineNumber":6,"author":{"gitId":"ZechariahTan"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e"},{"lineNumber":7,"author":{"gitId":"ZechariahTan"},"content":""},{"lineNumber":8,"author":{"gitId":"ZechariahTan"},"content":"\u003cfx:root alignment\u003d\"TOP_RIGHT\" maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\" prefWidth\u003d\"400.0\" type\u003d\"javafx.scene.layout.HBox\" xmlns\u003d\"http://javafx.com/javafx/15.0.1\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e"},{"lineNumber":9,"author":{"gitId":"ZechariahTan"},"content":"    \u003cchildren\u003e"},{"lineNumber":10,"author":{"gitId":"ZechariahTan"},"content":"        \u003cLabel fx:id\u003d\"dialog\" maxHeight\u003d\"Infinity\" text\u003d\"Label\" wrapText\u003d\"true\"/\u003e"},{"lineNumber":11,"author":{"gitId":"ZechariahTan"},"content":"        \u003cImageView fx:id\u003d\"displayPicture\" fitHeight\u003d\"99.0\" fitWidth\u003d\"99.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\" /\u003e"},{"lineNumber":12,"author":{"gitId":"ZechariahTan"},"content":"    \u003c/children\u003e"},{"lineNumber":13,"author":{"gitId":"ZechariahTan"},"content":"    \u003cpadding\u003e"},{"lineNumber":14,"author":{"gitId":"ZechariahTan"},"content":"        \u003cInsets bottom\u003d\"15.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"15.0\" /\u003e"},{"lineNumber":15,"author":{"gitId":"ZechariahTan"},"content":"    \u003c/padding\u003e"},{"lineNumber":16,"author":{"gitId":"ZechariahTan"},"content":"\u003c/fx:root\u003e"}],"authorContributionMap":{"ZechariahTan":16}},{"path":"src/main/resources/view/MainWindow.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"ZechariahTan"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"},{"lineNumber":2,"author":{"gitId":"ZechariahTan"},"content":""},{"lineNumber":3,"author":{"gitId":"ZechariahTan"},"content":"\u003c?import javafx.scene.control.Button?\u003e"},{"lineNumber":4,"author":{"gitId":"ZechariahTan"},"content":"\u003c?import javafx.scene.control.ScrollPane?\u003e"},{"lineNumber":5,"author":{"gitId":"ZechariahTan"},"content":"\u003c?import javafx.scene.control.TextField?\u003e"},{"lineNumber":6,"author":{"gitId":"ZechariahTan"},"content":"\u003c?import javafx.scene.layout.AnchorPane?\u003e"},{"lineNumber":7,"author":{"gitId":"ZechariahTan"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e"},{"lineNumber":8,"author":{"gitId":"ZechariahTan"},"content":""},{"lineNumber":9,"author":{"gitId":"ZechariahTan"},"content":"\u003cAnchorPane maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefHeight\u003d\"600.0\""},{"lineNumber":10,"author":{"gitId":"ZechariahTan"},"content":"            prefWidth\u003d\"400.0\" xmlns\u003d\"http://javafx.com/javafx/8.0.171\" xmlns:fx\u003d\"http://javafx.com/fxml/1\""},{"lineNumber":11,"author":{"gitId":"ZechariahTan"},"content":"            fx:controller\u003d\"MainWindow\"\u003e"},{"lineNumber":12,"author":{"gitId":"ZechariahTan"},"content":"    \u003cchildren\u003e"},{"lineNumber":13,"author":{"gitId":"ZechariahTan"},"content":"        \u003cTextField fx:id\u003d\"userInput\" layoutY\u003d\"558.0\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"324.0\""},{"lineNumber":14,"author":{"gitId":"ZechariahTan"},"content":"                   AnchorPane.bottomAnchor\u003d\"1.0\" /\u003e"},{"lineNumber":15,"author":{"gitId":"ZechariahTan"},"content":"        \u003cButton fx:id\u003d\"sendButton\" layoutX\u003d\"324.0\" layoutY\u003d\"558.0\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleUserInput\""},{"lineNumber":16,"author":{"gitId":"ZechariahTan"},"content":"                prefHeight\u003d\"41.0\" prefWidth\u003d\"76.0\" text\u003d\"Send\" /\u003e"},{"lineNumber":17,"author":{"gitId":"ZechariahTan"},"content":"        \u003cScrollPane fx:id\u003d\"scrollPane\" hbarPolicy\u003d\"NEVER\" hvalue\u003d\"1.0\" prefHeight\u003d\"557.0\" prefWidth\u003d\"400.0\""},{"lineNumber":18,"author":{"gitId":"ZechariahTan"},"content":"                    vvalue\u003d\"1.0\"\u003e"},{"lineNumber":19,"author":{"gitId":"ZechariahTan"},"content":"            \u003ccontent\u003e"},{"lineNumber":20,"author":{"gitId":"ZechariahTan"},"content":"                \u003cVBox fx:id\u003d\"dialogContainer\" prefHeight\u003d\"552.0\" prefWidth\u003d\"388.0\" /\u003e"},{"lineNumber":21,"author":{"gitId":"ZechariahTan"},"content":"            \u003c/content\u003e"},{"lineNumber":22,"author":{"gitId":"ZechariahTan"},"content":"        \u003c/ScrollPane\u003e"},{"lineNumber":23,"author":{"gitId":"ZechariahTan"},"content":"    \u003c/children\u003e"},{"lineNumber":24,"author":{"gitId":"ZechariahTan"},"content":"\u003c/AnchorPane\u003e"}],"authorContributionMap":{"ZechariahTan":24}},{"path":"src/test/java/mike/MikeTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ZechariahTan"},"content":"package mike;"},{"lineNumber":2,"author":{"gitId":"ZechariahTan"},"content":""},{"lineNumber":3,"author":{"gitId":"ZechariahTan"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;"},{"lineNumber":4,"author":{"gitId":"ZechariahTan"},"content":""},{"lineNumber":5,"author":{"gitId":"ZechariahTan"},"content":"import java.io.File;"},{"lineNumber":6,"author":{"gitId":"ZechariahTan"},"content":"import java.io.FileNotFoundException;"},{"lineNumber":7,"author":{"gitId":"ZechariahTan"},"content":"import java.io.IOException;"},{"lineNumber":8,"author":{"gitId":"ZechariahTan"},"content":"import java.util.Scanner;"},{"lineNumber":9,"author":{"gitId":"ZechariahTan"},"content":""},{"lineNumber":10,"author":{"gitId":"ZechariahTan"},"content":"import org.junit.jupiter.api.Test;"},{"lineNumber":11,"author":{"gitId":"ZechariahTan"},"content":""},{"lineNumber":12,"author":{"gitId":"ZechariahTan"},"content":"import command.ListCommand;"},{"lineNumber":13,"author":{"gitId":"ZechariahTan"},"content":"import exception.MikeCommandExecutionException;"},{"lineNumber":14,"author":{"gitId":"ZechariahTan"},"content":""},{"lineNumber":15,"author":{"gitId":"ZechariahTan"},"content":"public class MikeTest {"},{"lineNumber":16,"author":{"gitId":"ZechariahTan"},"content":"    @Test"},{"lineNumber":17,"author":{"gitId":"ZechariahTan"},"content":"    public void mikeInitTest() {"},{"lineNumber":18,"author":{"gitId":"ZechariahTan"},"content":"        File inputFile \u003d new File(System.getProperty(\"user.dir\") + \"/data/TodoList.txt\");"},{"lineNumber":19,"author":{"gitId":"ZechariahTan"},"content":"        Scanner scanner \u003d null;"},{"lineNumber":20,"author":{"gitId":"ZechariahTan"},"content":"        try {"},{"lineNumber":21,"author":{"gitId":"ZechariahTan"},"content":"            scanner \u003d new Scanner(inputFile);"},{"lineNumber":22,"author":{"gitId":"ZechariahTan"},"content":"        } catch (FileNotFoundException e) {"},{"lineNumber":23,"author":{"gitId":"ZechariahTan"},"content":"            e.printStackTrace();"},{"lineNumber":24,"author":{"gitId":"ZechariahTan"},"content":"        }"},{"lineNumber":25,"author":{"gitId":"ZechariahTan"},"content":"        String mikeResponse \u003d \"\";"},{"lineNumber":26,"author":{"gitId":"ZechariahTan"},"content":"        String expectedResponse \u003d \"Here are the tasks in your list:\\n\";"},{"lineNumber":27,"author":{"gitId":"ZechariahTan"},"content":"        try {"},{"lineNumber":28,"author":{"gitId":"ZechariahTan"},"content":"            scanner \u003d new Scanner(inputFile);"},{"lineNumber":29,"author":{"gitId":"ZechariahTan"},"content":"        } catch (IOException e) {"},{"lineNumber":30,"author":{"gitId":"ZechariahTan"},"content":"            System.out.println(e.getMessage());"},{"lineNumber":31,"author":{"gitId":"ZechariahTan"},"content":"        }"},{"lineNumber":32,"author":{"gitId":"ZechariahTan"},"content":"        while (scanner.hasNextLine()) {"},{"lineNumber":33,"author":{"gitId":"ZechariahTan"},"content":"            expectedResponse +\u003d scanner.nextLine() + \"\\n\";"},{"lineNumber":34,"author":{"gitId":"ZechariahTan"},"content":"        }"},{"lineNumber":35,"author":{"gitId":"ZechariahTan"},"content":""},{"lineNumber":36,"author":{"gitId":"ZechariahTan"},"content":""},{"lineNumber":37,"author":{"gitId":"ZechariahTan"},"content":"        Mike mike \u003d new Mike();"},{"lineNumber":38,"author":{"gitId":"ZechariahTan"},"content":"        mike.mikeInit();"},{"lineNumber":39,"author":{"gitId":"ZechariahTan"},"content":""},{"lineNumber":40,"author":{"gitId":"ZechariahTan"},"content":"        try {"},{"lineNumber":41,"author":{"gitId":"ZechariahTan"},"content":"            mikeResponse \u003d mike.getResponse(new ListCommand());"},{"lineNumber":42,"author":{"gitId":"ZechariahTan"},"content":"        } catch (MikeCommandExecutionException e) {"},{"lineNumber":43,"author":{"gitId":"ZechariahTan"},"content":"            e.printStackTrace();"},{"lineNumber":44,"author":{"gitId":"ZechariahTan"},"content":"        }"},{"lineNumber":45,"author":{"gitId":"ZechariahTan"},"content":"        assertEquals(expectedResponse, mikeResponse);"},{"lineNumber":46,"author":{"gitId":"ZechariahTan"},"content":"    }"},{"lineNumber":47,"author":{"gitId":"ZechariahTan"},"content":"}"}],"authorContributionMap":{"ZechariahTan":47}},{"path":"src/test/java/mike/ParserTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ZechariahTan"},"content":"package mike;"},{"lineNumber":2,"author":{"gitId":"ZechariahTan"},"content":""},{"lineNumber":3,"author":{"gitId":"ZechariahTan"},"content":"import java.io.File;"},{"lineNumber":4,"author":{"gitId":"ZechariahTan"},"content":"import java.io.FileNotFoundException;"},{"lineNumber":5,"author":{"gitId":"ZechariahTan"},"content":"import java.util.Scanner;"},{"lineNumber":6,"author":{"gitId":"ZechariahTan"},"content":""},{"lineNumber":7,"author":{"gitId":"ZechariahTan"},"content":"import org.junit.jupiter.api.Test;"},{"lineNumber":8,"author":{"gitId":"ZechariahTan"},"content":""},{"lineNumber":9,"author":{"gitId":"ZechariahTan"},"content":"import command.Command;"},{"lineNumber":10,"author":{"gitId":"ZechariahTan"},"content":"import command.DeadlineCommand;"},{"lineNumber":11,"author":{"gitId":"ZechariahTan"},"content":"import command.EventCommand;"},{"lineNumber":12,"author":{"gitId":"ZechariahTan"},"content":"import command.ListCommand;"},{"lineNumber":13,"author":{"gitId":"ZechariahTan"},"content":"import command.TodoCommand;"},{"lineNumber":14,"author":{"gitId":"ZechariahTan"},"content":"import exception.MikeInvalidInputException;"},{"lineNumber":15,"author":{"gitId":"ZechariahTan"},"content":""},{"lineNumber":16,"author":{"gitId":"ZechariahTan"},"content":"public class ParserTest {"},{"lineNumber":17,"author":{"gitId":"ZechariahTan"},"content":"    @Test"},{"lineNumber":18,"author":{"gitId":"ZechariahTan"},"content":"    public void parserCommandTest() {"},{"lineNumber":19,"author":{"gitId":"ZechariahTan"},"content":"        Scanner scanner \u003d null;"},{"lineNumber":20,"author":{"gitId":"ZechariahTan"},"content":"        Command actualCommand \u003d null;"},{"lineNumber":21,"author":{"gitId":"ZechariahTan"},"content":"        try {"},{"lineNumber":22,"author":{"gitId":"ZechariahTan"},"content":"            scanner \u003d new Scanner(new File(System.getProperty(\"user.dir\") + \"/src/test/test.txt\"));"},{"lineNumber":23,"author":{"gitId":"ZechariahTan"},"content":"            actualCommand \u003d Parser.parseInput(scanner);"},{"lineNumber":24,"author":{"gitId":"ZechariahTan"},"content":"            if (!(actualCommand instanceof ListCommand)) {"},{"lineNumber":25,"author":{"gitId":"ZechariahTan"},"content":"                throw new MikeInvalidInputException(\"failed\");"},{"lineNumber":26,"author":{"gitId":"ZechariahTan"},"content":"            }"},{"lineNumber":27,"author":{"gitId":"ZechariahTan"},"content":"            actualCommand \u003d Parser.parseInput(scanner);"},{"lineNumber":28,"author":{"gitId":"ZechariahTan"},"content":"            if (!(actualCommand instanceof TodoCommand)) {"},{"lineNumber":29,"author":{"gitId":"ZechariahTan"},"content":"                throw new MikeInvalidInputException(\"failed\");"},{"lineNumber":30,"author":{"gitId":"ZechariahTan"},"content":"            }"},{"lineNumber":31,"author":{"gitId":"ZechariahTan"},"content":"            actualCommand \u003d Parser.parseInput(scanner);"},{"lineNumber":32,"author":{"gitId":"ZechariahTan"},"content":"            if (!(actualCommand instanceof EventCommand)) {"},{"lineNumber":33,"author":{"gitId":"ZechariahTan"},"content":"                throw new MikeInvalidInputException(\"failed\");"},{"lineNumber":34,"author":{"gitId":"ZechariahTan"},"content":"            }"},{"lineNumber":35,"author":{"gitId":"ZechariahTan"},"content":"            actualCommand \u003d Parser.parseInput(scanner);"},{"lineNumber":36,"author":{"gitId":"ZechariahTan"},"content":"            if (!(actualCommand instanceof DeadlineCommand)) {"},{"lineNumber":37,"author":{"gitId":"ZechariahTan"},"content":"                throw new MikeInvalidInputException(\"failed\");"},{"lineNumber":38,"author":{"gitId":"ZechariahTan"},"content":"            }"},{"lineNumber":39,"author":{"gitId":"ZechariahTan"},"content":"        } catch (MikeInvalidInputException | FileNotFoundException e) {"},{"lineNumber":40,"author":{"gitId":"ZechariahTan"},"content":"            e.printStackTrace();"},{"lineNumber":41,"author":{"gitId":"ZechariahTan"},"content":"        }"},{"lineNumber":42,"author":{"gitId":"ZechariahTan"},"content":"    }"},{"lineNumber":43,"author":{"gitId":"ZechariahTan"},"content":"}"}],"authorContributionMap":{"ZechariahTan":43}},{"path":"src/test/java/mike/TaskListTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ZechariahTan"},"content":"package mike;"},{"lineNumber":2,"author":{"gitId":"ZechariahTan"},"content":""},{"lineNumber":3,"author":{"gitId":"ZechariahTan"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;"},{"lineNumber":4,"author":{"gitId":"ZechariahTan"},"content":""},{"lineNumber":5,"author":{"gitId":"ZechariahTan"},"content":"import java.time.LocalDateTime;"},{"lineNumber":6,"author":{"gitId":"ZechariahTan"},"content":""},{"lineNumber":7,"author":{"gitId":"ZechariahTan"},"content":"import org.junit.jupiter.api.Test;"},{"lineNumber":8,"author":{"gitId":"ZechariahTan"},"content":""},{"lineNumber":9,"author":{"gitId":"ZechariahTan"},"content":"import task.DeadlineTask;"},{"lineNumber":10,"author":{"gitId":"ZechariahTan"},"content":"import task.EventTask;"},{"lineNumber":11,"author":{"gitId":"ZechariahTan"},"content":"import task.TodoTask;"},{"lineNumber":12,"author":{"gitId":"ZechariahTan"},"content":""},{"lineNumber":13,"author":{"gitId":"ZechariahTan"},"content":"public class TaskListTest {"},{"lineNumber":14,"author":{"gitId":"ZechariahTan"},"content":"    @Test"},{"lineNumber":15,"author":{"gitId":"ZechariahTan"},"content":"    public void taskListToStringTest() {"},{"lineNumber":16,"author":{"gitId":"ZechariahTan"},"content":"        String expectedResponse \u003d"},{"lineNumber":17,"author":{"gitId":"ZechariahTan"},"content":"                \"1. [T] [ ] task1\\n\""},{"lineNumber":18,"author":{"gitId":"ZechariahTan"},"content":"                        + \"2. [T] [ ] task2\\n\""},{"lineNumber":19,"author":{"gitId":"ZechariahTan"},"content":"                        + \"3. [E] [ ] Event1 (at: 09 Oct 2000, 10:00 PM)\\n\""},{"lineNumber":20,"author":{"gitId":"ZechariahTan"},"content":"                        + \"4. [D] [ ] Deadline1 (by: 09 Oct 2000, 10:00 PM)\\n\";"},{"lineNumber":21,"author":{"gitId":"ZechariahTan"},"content":""},{"lineNumber":22,"author":{"gitId":"ZechariahTan"},"content":"        TaskList taskList \u003d new TaskList();"},{"lineNumber":23,"author":{"gitId":"ZechariahTan"},"content":"        taskList.addTaskToList(new TodoTask(\"task1\"));"},{"lineNumber":24,"author":{"gitId":"ZechariahTan"},"content":"        taskList.addTaskToList(new TodoTask(\"task2\"));"},{"lineNumber":25,"author":{"gitId":"ZechariahTan"},"content":"        taskList.addTaskToList(new EventTask(\"Event1\", LocalDateTime.of(2000, 10, 9, 22, 0)));"},{"lineNumber":26,"author":{"gitId":"ZechariahTan"},"content":"        taskList.addTaskToList(new DeadlineTask(\"Deadline1\", LocalDateTime.of(2000, 10, 9, 22, 0)));"},{"lineNumber":27,"author":{"gitId":"ZechariahTan"},"content":""},{"lineNumber":28,"author":{"gitId":"ZechariahTan"},"content":"        assertEquals(expectedResponse, taskList.toString());"},{"lineNumber":29,"author":{"gitId":"ZechariahTan"},"content":"    }"},{"lineNumber":30,"author":{"gitId":"ZechariahTan"},"content":"}"}],"authorContributionMap":{"ZechariahTan":30}},{"path":"src/test/test.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"ZechariahTan"},"content":"list"},{"lineNumber":2,"author":{"gitId":"ZechariahTan"},"content":"todo 123"},{"lineNumber":3,"author":{"gitId":"ZechariahTan"},"content":"event 123 /at 12-12-1212 12:12"},{"lineNumber":4,"author":{"gitId":"ZechariahTan"},"content":"deadline 123 /by 12-12-1212 12:12"}],"authorContributionMap":{"ZechariahTan":4}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"ZechariahTan"},"content":"deadline give you up /by never gonna"},{"lineNumber":2,"author":{"gitId":"ZechariahTan"},"content":"deadline let you down /by never gonna"},{"lineNumber":3,"author":{"gitId":"ZechariahTan"},"content":"event rick /at astley"},{"lineNumber":4,"author":{"gitId":"ZechariahTan"},"content":"todo find better test cases"},{"lineNumber":5,"author":{"gitId":"ZechariahTan"},"content":"list"},{"lineNumber":6,"author":{"gitId":"ZechariahTan"},"content":"done 2"},{"lineNumber":7,"author":{"gitId":"ZechariahTan"},"content":"done 4"},{"lineNumber":8,"author":{"gitId":"ZechariahTan"},"content":"list"},{"lineNumber":9,"author":{"gitId":"ZechariahTan"},"content":"done 1"},{"lineNumber":10,"author":{"gitId":"ZechariahTan"},"content":"list"},{"lineNumber":11,"author":{"gitId":"ZechariahTan"},"content":"done"},{"lineNumber":12,"author":{"gitId":"ZechariahTan"},"content":"list"},{"lineNumber":13,"author":{"gitId":"ZechariahTan"},"content":"todo"},{"lineNumber":14,"author":{"gitId":"ZechariahTan"},"content":"deadline death /at NUS"},{"lineNumber":15,"author":{"gitId":"ZechariahTan"},"content":"event graduation /by never"},{"lineNumber":16,"author":{"gitId":"ZechariahTan"},"content":"bye"},{"lineNumber":17,"author":{"gitId":"ZechariahTan"},"content":""}],"authorContributionMap":{"ZechariahTan":17}},{"path":"text-ui-test/runtest.sh","fileType":"sh","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"#!/usr/bin/env bash"},{"lineNumber":2,"author":{"gitId":"-"},"content":""},{"lineNumber":3,"author":{"gitId":"-"},"content":"# create bin directory if it doesn\u0027t exist"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if [ ! -d \"../bin\" ]"},{"lineNumber":5,"author":{"gitId":"-"},"content":"then"},{"lineNumber":6,"author":{"gitId":"-"},"content":"    mkdir ../bin"},{"lineNumber":7,"author":{"gitId":"-"},"content":"fi"},{"lineNumber":8,"author":{"gitId":"-"},"content":""},{"lineNumber":9,"author":{"gitId":"-"},"content":"# delete output from previous run"},{"lineNumber":10,"author":{"gitId":"-"},"content":"if [ -e \"./ACTUAL.TXT\" ]"},{"lineNumber":11,"author":{"gitId":"-"},"content":"then"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    rm ACTUAL.TXT"},{"lineNumber":13,"author":{"gitId":"-"},"content":"fi"},{"lineNumber":14,"author":{"gitId":"-"},"content":""},{"lineNumber":15,"author":{"gitId":"-"},"content":"# compile the code into the bin folder, terminates if error occurred"},{"lineNumber":16,"author":{"gitId":"-"},"content":"if ! javac -cp ../src/main/java -Xlint:none -d ../bin ../src/main/java/*.java"},{"lineNumber":17,"author":{"gitId":"-"},"content":"then"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    echo \"********** BUILD FAILURE **********\""},{"lineNumber":19,"author":{"gitId":"-"},"content":"    exit 1"},{"lineNumber":20,"author":{"gitId":"-"},"content":"fi"},{"lineNumber":21,"author":{"gitId":"-"},"content":""},{"lineNumber":22,"author":{"gitId":"-"},"content":"# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"},{"lineNumber":23,"author":{"gitId":"ZechariahTan"},"content":"java -classpath ../bin/ Main \u003c input.txt \u003e ACTUAL.TXT"},{"lineNumber":24,"author":{"gitId":"-"},"content":""},{"lineNumber":25,"author":{"gitId":"-"},"content":"# convert to UNIX format"},{"lineNumber":26,"author":{"gitId":"-"},"content":"cp EXPECTED.TXT EXPECTED-UNIX.TXT"},{"lineNumber":27,"author":{"gitId":"-"},"content":"dos2unix ACTUAL.TXT EXPECTED-UNIX.TXT"},{"lineNumber":28,"author":{"gitId":"-"},"content":""},{"lineNumber":29,"author":{"gitId":"-"},"content":"# compare the output to the expected output"},{"lineNumber":30,"author":{"gitId":"-"},"content":"diff ACTUAL.TXT EXPECTED-UNIX.TXT"},{"lineNumber":31,"author":{"gitId":"-"},"content":"if [ $? -eq 0 ]"},{"lineNumber":32,"author":{"gitId":"-"},"content":"then"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    echo \"Test result: PASSED\""},{"lineNumber":34,"author":{"gitId":"-"},"content":"    exit 0"},{"lineNumber":35,"author":{"gitId":"-"},"content":"else"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    echo \"Test result: FAILED\""},{"lineNumber":37,"author":{"gitId":"-"},"content":"    exit 1"},{"lineNumber":38,"author":{"gitId":"-"},"content":"fi"}],"authorContributionMap":{"ZechariahTan":1,"-":37}}]
