[{"path":"README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"ZechariahTan"},"content":"# Mike project template"},{"lineNumber":2,"author":{"gitId":"-"},"content":""},{"lineNumber":3,"author":{"gitId":"-"},"content":"This is a project template for a greenfield Java project. It\u0027s named after the Java mascot _Duke_. Given below are instructions on how to use it."},{"lineNumber":4,"author":{"gitId":"-"},"content":""},{"lineNumber":5,"author":{"gitId":"-"},"content":"## Setting up in Intellij"},{"lineNumber":6,"author":{"gitId":"-"},"content":""},{"lineNumber":7,"author":{"gitId":"-"},"content":"Prerequisites: JDK 11, update Intellij to the most recent version."},{"lineNumber":8,"author":{"gitId":"-"},"content":""},{"lineNumber":9,"author":{"gitId":"-"},"content":"1. Open Intellij (if you are not in the welcome screen, click `File` \u003e `Close Project` to close the existing project first)"},{"lineNumber":10,"author":{"gitId":"-"},"content":"1. Open the project into Intellij as follows:"},{"lineNumber":11,"author":{"gitId":"-"},"content":"   1. Click `Open`."},{"lineNumber":12,"author":{"gitId":"-"},"content":"   1. Select the project directory, and click `OK`."},{"lineNumber":13,"author":{"gitId":"-"},"content":"   1. If there are any further prompts, accept the defaults."},{"lineNumber":14,"author":{"gitId":"-"},"content":"1. Configure the project to use **JDK 11** (not other versions) as explained in [here](https://www.jetbrains.com/help/idea/sdk.html#set-up-jdk)."},{"lineNumber":15,"author":{"gitId":"ZechariahTan"},"content":"1. After that, locate the `src/main/java/Mike.java` file, right-click it, and choose `Run Mike.main()`. If the setup is correct, you should see something like the below:"},{"lineNumber":16,"author":{"gitId":"-"},"content":"   ```"},{"lineNumber":17,"author":{"gitId":"-"},"content":"   Hello from"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    ____        _        "},{"lineNumber":19,"author":{"gitId":"-"},"content":"   |  _ \\ _   _| | _____ "},{"lineNumber":20,"author":{"gitId":"-"},"content":"   | | | | | | | |/ / _ \\"},{"lineNumber":21,"author":{"gitId":"-"},"content":"   | |_| | |_| |   \u003c  __/"},{"lineNumber":22,"author":{"gitId":"-"},"content":"   |____/ \\__,_|_|\\_\\___|"},{"lineNumber":23,"author":{"gitId":"-"},"content":"   ```"}],"authorContributionMap":{"ZechariahTan":2,"-":21}},{"path":"src/main/java/AddCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ZechariahTan"},"content":"public abstract class AddCommand implements Command {"},{"lineNumber":2,"author":{"gitId":"ZechariahTan"},"content":"    protected boolean isExitCommand \u003d false;"},{"lineNumber":3,"author":{"gitId":"ZechariahTan"},"content":"    protected String taskDescription;"},{"lineNumber":4,"author":{"gitId":"ZechariahTan"},"content":"    protected TaskList taskList;"},{"lineNumber":5,"author":{"gitId":"ZechariahTan"},"content":"    protected Task taskToAdd;"},{"lineNumber":6,"author":{"gitId":"ZechariahTan"},"content":""},{"lineNumber":7,"author":{"gitId":"ZechariahTan"},"content":"    public AddCommand(String taskDescription) {"},{"lineNumber":8,"author":{"gitId":"ZechariahTan"},"content":"        this.taskDescription \u003d taskDescription;"},{"lineNumber":9,"author":{"gitId":"ZechariahTan"},"content":"    }"},{"lineNumber":10,"author":{"gitId":"ZechariahTan"},"content":""},{"lineNumber":11,"author":{"gitId":"ZechariahTan"},"content":"    @Override"},{"lineNumber":12,"author":{"gitId":"ZechariahTan"},"content":"    public boolean isExitCommand() {"},{"lineNumber":13,"author":{"gitId":"ZechariahTan"},"content":"        return false;"},{"lineNumber":14,"author":{"gitId":"ZechariahTan"},"content":"    }"},{"lineNumber":15,"author":{"gitId":"ZechariahTan"},"content":""},{"lineNumber":16,"author":{"gitId":"ZechariahTan"},"content":"    @Override"},{"lineNumber":17,"author":{"gitId":"ZechariahTan"},"content":"    public TaskList runCommand(TaskList taskList) {"},{"lineNumber":18,"author":{"gitId":"ZechariahTan"},"content":"        this.taskList \u003d taskList;"},{"lineNumber":19,"author":{"gitId":"ZechariahTan"},"content":"        this.taskToAdd \u003d new TodoTask(this.taskDescription);"},{"lineNumber":20,"author":{"gitId":"ZechariahTan"},"content":"        taskList.addTaskToList(taskToAdd);"},{"lineNumber":21,"author":{"gitId":"ZechariahTan"},"content":"        return taskList;"},{"lineNumber":22,"author":{"gitId":"ZechariahTan"},"content":"    }"},{"lineNumber":23,"author":{"gitId":"ZechariahTan"},"content":""},{"lineNumber":24,"author":{"gitId":"ZechariahTan"},"content":"    @Override"},{"lineNumber":25,"author":{"gitId":"ZechariahTan"},"content":"    public String getResponse() {"},{"lineNumber":26,"author":{"gitId":"ZechariahTan"},"content":"        return String.format("},{"lineNumber":27,"author":{"gitId":"ZechariahTan"},"content":"                \"Got it. I\u0027ve added this task: \\n\" +"},{"lineNumber":28,"author":{"gitId":"ZechariahTan"},"content":"                \"       %s\\n\" +"},{"lineNumber":29,"author":{"gitId":"ZechariahTan"},"content":"                \"Now you have %d tasks in the list.\","},{"lineNumber":30,"author":{"gitId":"ZechariahTan"},"content":"                this.taskToAdd.toString(), this.taskList.getNumTasks());"},{"lineNumber":31,"author":{"gitId":"ZechariahTan"},"content":"    }"},{"lineNumber":32,"author":{"gitId":"ZechariahTan"},"content":"}"}],"authorContributionMap":{"ZechariahTan":32}},{"path":"src/main/java/ByeCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ZechariahTan"},"content":"public class ByeCommand implements Command {"},{"lineNumber":2,"author":{"gitId":"ZechariahTan"},"content":""},{"lineNumber":3,"author":{"gitId":"ZechariahTan"},"content":"    public ByeCommand() {"},{"lineNumber":4,"author":{"gitId":"ZechariahTan"},"content":"    }"},{"lineNumber":5,"author":{"gitId":"ZechariahTan"},"content":""},{"lineNumber":6,"author":{"gitId":"ZechariahTan"},"content":"    @Override"},{"lineNumber":7,"author":{"gitId":"ZechariahTan"},"content":"    public boolean isExitCommand() {"},{"lineNumber":8,"author":{"gitId":"ZechariahTan"},"content":"        return true;"},{"lineNumber":9,"author":{"gitId":"ZechariahTan"},"content":"    }"},{"lineNumber":10,"author":{"gitId":"ZechariahTan"},"content":""},{"lineNumber":11,"author":{"gitId":"ZechariahTan"},"content":"    @Override"},{"lineNumber":12,"author":{"gitId":"ZechariahTan"},"content":"    public TaskList runCommand(TaskList taskList) {"},{"lineNumber":13,"author":{"gitId":"ZechariahTan"},"content":"       return taskList;"},{"lineNumber":14,"author":{"gitId":"ZechariahTan"},"content":"    }"},{"lineNumber":15,"author":{"gitId":"ZechariahTan"},"content":""},{"lineNumber":16,"author":{"gitId":"ZechariahTan"},"content":"    @Override"},{"lineNumber":17,"author":{"gitId":"ZechariahTan"},"content":"    public String getResponse() {"},{"lineNumber":18,"author":{"gitId":"ZechariahTan"},"content":"        return \"Bye. Hope to see you again soon!\";"},{"lineNumber":19,"author":{"gitId":"ZechariahTan"},"content":"    }"},{"lineNumber":20,"author":{"gitId":"ZechariahTan"},"content":"}"}],"authorContributionMap":{"ZechariahTan":20}},{"path":"src/main/java/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ZechariahTan"},"content":"public interface Command {"},{"lineNumber":2,"author":{"gitId":"ZechariahTan"},"content":"    /**"},{"lineNumber":3,"author":{"gitId":"ZechariahTan"},"content":"     * Checks if chatbot should exit after command"},{"lineNumber":4,"author":{"gitId":"ZechariahTan"},"content":"     *"},{"lineNumber":5,"author":{"gitId":"ZechariahTan"},"content":"     * @return value of isExitCommand in Command objects"},{"lineNumber":6,"author":{"gitId":"ZechariahTan"},"content":"     */"},{"lineNumber":7,"author":{"gitId":"ZechariahTan"},"content":"    boolean isExitCommand();"},{"lineNumber":8,"author":{"gitId":"ZechariahTan"},"content":""},{"lineNumber":9,"author":{"gitId":"ZechariahTan"},"content":"    /**"},{"lineNumber":10,"author":{"gitId":"ZechariahTan"},"content":"     * Executes the command on the taskList"},{"lineNumber":11,"author":{"gitId":"ZechariahTan"},"content":"     *"},{"lineNumber":12,"author":{"gitId":"ZechariahTan"},"content":"     * @return resultant tasklist after command is run"},{"lineNumber":13,"author":{"gitId":"ZechariahTan"},"content":"     */"},{"lineNumber":14,"author":{"gitId":"ZechariahTan"},"content":"    TaskList runCommand(TaskList taskList) throws MikeInvalidInputException;"},{"lineNumber":15,"author":{"gitId":"ZechariahTan"},"content":""},{"lineNumber":16,"author":{"gitId":"ZechariahTan"},"content":"    /**"},{"lineNumber":17,"author":{"gitId":"ZechariahTan"},"content":"     * Gets the response of the command"},{"lineNumber":18,"author":{"gitId":"ZechariahTan"},"content":"     *"},{"lineNumber":19,"author":{"gitId":"ZechariahTan"},"content":"     * @return String response of the command"},{"lineNumber":20,"author":{"gitId":"ZechariahTan"},"content":"     */"},{"lineNumber":21,"author":{"gitId":"ZechariahTan"},"content":"    String getResponse();"},{"lineNumber":22,"author":{"gitId":"ZechariahTan"},"content":"}"}],"authorContributionMap":{"ZechariahTan":22}},{"path":"src/main/java/DeadlineCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ZechariahTan"},"content":"public class DeadlineCommand extends AddCommand {"},{"lineNumber":2,"author":{"gitId":"ZechariahTan"},"content":""},{"lineNumber":3,"author":{"gitId":"ZechariahTan"},"content":"    private String deadline;"},{"lineNumber":4,"author":{"gitId":"ZechariahTan"},"content":""},{"lineNumber":5,"author":{"gitId":"ZechariahTan"},"content":"    public DeadlineCommand(String taskDescription, String deadline) {"},{"lineNumber":6,"author":{"gitId":"ZechariahTan"},"content":"        super(taskDescription);"},{"lineNumber":7,"author":{"gitId":"ZechariahTan"},"content":"        this.deadline \u003d deadline;"},{"lineNumber":8,"author":{"gitId":"ZechariahTan"},"content":"    }"},{"lineNumber":9,"author":{"gitId":"ZechariahTan"},"content":""},{"lineNumber":10,"author":{"gitId":"ZechariahTan"},"content":"    @Override"},{"lineNumber":11,"author":{"gitId":"ZechariahTan"},"content":"    public TaskList runCommand(TaskList taskList) {"},{"lineNumber":12,"author":{"gitId":"ZechariahTan"},"content":"        this.taskList \u003d taskList;"},{"lineNumber":13,"author":{"gitId":"ZechariahTan"},"content":"        this.taskToAdd \u003d new DeadlineTask(this.taskDescription, this.deadline);"},{"lineNumber":14,"author":{"gitId":"ZechariahTan"},"content":"        taskList.addTaskToList(taskToAdd);"},{"lineNumber":15,"author":{"gitId":"ZechariahTan"},"content":"        return taskList;"},{"lineNumber":16,"author":{"gitId":"ZechariahTan"},"content":"    }"},{"lineNumber":17,"author":{"gitId":"ZechariahTan"},"content":"}"}],"authorContributionMap":{"ZechariahTan":17}},{"path":"src/main/java/DeadlineTask.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ZechariahTan"},"content":"public class DeadlineTask extends Task {"},{"lineNumber":2,"author":{"gitId":"ZechariahTan"},"content":""},{"lineNumber":3,"author":{"gitId":"ZechariahTan"},"content":"    private String deadline;"},{"lineNumber":4,"author":{"gitId":"ZechariahTan"},"content":""},{"lineNumber":5,"author":{"gitId":"ZechariahTan"},"content":"    public DeadlineTask(String taskDescription, String deadline) {"},{"lineNumber":6,"author":{"gitId":"ZechariahTan"},"content":"        this.taskDescription \u003d taskDescription;"},{"lineNumber":7,"author":{"gitId":"ZechariahTan"},"content":"        this.deadline \u003d deadline;"},{"lineNumber":8,"author":{"gitId":"ZechariahTan"},"content":"        this.taskType \u003d \u0027D\u0027;"},{"lineNumber":9,"author":{"gitId":"ZechariahTan"},"content":"    }"},{"lineNumber":10,"author":{"gitId":"ZechariahTan"},"content":""},{"lineNumber":11,"author":{"gitId":"ZechariahTan"},"content":"    @Override"},{"lineNumber":12,"author":{"gitId":"ZechariahTan"},"content":"    public String toString() {"},{"lineNumber":13,"author":{"gitId":"ZechariahTan"},"content":"        if (isDone) {"},{"lineNumber":14,"author":{"gitId":"ZechariahTan"},"content":"            return String.format(\"[%c] [X] %s (by: %s)\", this.taskType, this.taskDescription, this.deadline);"},{"lineNumber":15,"author":{"gitId":"ZechariahTan"},"content":"        } else {"},{"lineNumber":16,"author":{"gitId":"ZechariahTan"},"content":"            return String.format(\"[%c] [ ] %s (by: %s)\", this.taskType, this.taskDescription, this.deadline);"},{"lineNumber":17,"author":{"gitId":"ZechariahTan"},"content":"        }"},{"lineNumber":18,"author":{"gitId":"ZechariahTan"},"content":"    }"},{"lineNumber":19,"author":{"gitId":"ZechariahTan"},"content":"}"}],"authorContributionMap":{"ZechariahTan":19}},{"path":"src/main/java/DeleteCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ZechariahTan"},"content":"public class DeleteCommand implements Command {"},{"lineNumber":2,"author":{"gitId":"ZechariahTan"},"content":"    int taskIndexToDelete;"},{"lineNumber":3,"author":{"gitId":"ZechariahTan"},"content":"    Task taskToDelete;"},{"lineNumber":4,"author":{"gitId":"ZechariahTan"},"content":"    TaskList taskList;"},{"lineNumber":5,"author":{"gitId":"ZechariahTan"},"content":""},{"lineNumber":6,"author":{"gitId":"ZechariahTan"},"content":"    public DeleteCommand(int taskIndexToDelete) {"},{"lineNumber":7,"author":{"gitId":"ZechariahTan"},"content":"        this.taskIndexToDelete \u003d taskIndexToDelete;"},{"lineNumber":8,"author":{"gitId":"ZechariahTan"},"content":"    }"},{"lineNumber":9,"author":{"gitId":"ZechariahTan"},"content":""},{"lineNumber":10,"author":{"gitId":"ZechariahTan"},"content":"    @Override"},{"lineNumber":11,"author":{"gitId":"ZechariahTan"},"content":"    public boolean isExitCommand() {"},{"lineNumber":12,"author":{"gitId":"ZechariahTan"},"content":"        return false;"},{"lineNumber":13,"author":{"gitId":"ZechariahTan"},"content":"    }"},{"lineNumber":14,"author":{"gitId":"ZechariahTan"},"content":""},{"lineNumber":15,"author":{"gitId":"ZechariahTan"},"content":"    @Override"},{"lineNumber":16,"author":{"gitId":"ZechariahTan"},"content":"    public TaskList runCommand(TaskList taskList) throws MikeInvalidInputException {"},{"lineNumber":17,"author":{"gitId":"ZechariahTan"},"content":"        this.taskList \u003d taskList;"},{"lineNumber":18,"author":{"gitId":"ZechariahTan"},"content":"        try {"},{"lineNumber":19,"author":{"gitId":"ZechariahTan"},"content":"            for (int i \u003d 1; i \u003c\u003d this.taskList.getNumTasks(); i++) {"},{"lineNumber":20,"author":{"gitId":"ZechariahTan"},"content":"                if (i \u003d\u003d taskIndexToDelete) {"},{"lineNumber":21,"author":{"gitId":"ZechariahTan"},"content":"                    this.taskToDelete \u003d this.taskList.getNthTask(i);"},{"lineNumber":22,"author":{"gitId":"ZechariahTan"},"content":"                }"},{"lineNumber":23,"author":{"gitId":"ZechariahTan"},"content":"            }"},{"lineNumber":24,"author":{"gitId":"ZechariahTan"},"content":"            this.taskList.deleteNthTask(taskIndexToDelete);"},{"lineNumber":25,"author":{"gitId":"ZechariahTan"},"content":"            return this.taskList;"},{"lineNumber":26,"author":{"gitId":"ZechariahTan"},"content":"        } catch (NullPointerException e) {"},{"lineNumber":27,"author":{"gitId":"ZechariahTan"},"content":"            throw new MikeInvalidInputException(\"OOPS!! The task is not in the list\");"},{"lineNumber":28,"author":{"gitId":"ZechariahTan"},"content":"        }"},{"lineNumber":29,"author":{"gitId":"ZechariahTan"},"content":""},{"lineNumber":30,"author":{"gitId":"ZechariahTan"},"content":"    }"},{"lineNumber":31,"author":{"gitId":"ZechariahTan"},"content":""},{"lineNumber":32,"author":{"gitId":"ZechariahTan"},"content":"    @Override"},{"lineNumber":33,"author":{"gitId":"ZechariahTan"},"content":"    public String getResponse() {"},{"lineNumber":34,"author":{"gitId":"ZechariahTan"},"content":"        return String.format("},{"lineNumber":35,"author":{"gitId":"ZechariahTan"},"content":"                        \"Noted. I\u0027ve removed this task:  \\n  \" +"},{"lineNumber":36,"author":{"gitId":"ZechariahTan"},"content":"                        \"%s\\n\" +"},{"lineNumber":37,"author":{"gitId":"ZechariahTan"},"content":"                        \"Now you have %d tasks in the list.\\n\","},{"lineNumber":38,"author":{"gitId":"ZechariahTan"},"content":"                        this.taskToDelete.toString(), this.taskList.getNumTasks());"},{"lineNumber":39,"author":{"gitId":"ZechariahTan"},"content":"    }"},{"lineNumber":40,"author":{"gitId":"ZechariahTan"},"content":"}"}],"authorContributionMap":{"ZechariahTan":40}},{"path":"src/main/java/DoneCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ZechariahTan"},"content":"public class DoneCommand implements Command {"},{"lineNumber":2,"author":{"gitId":"ZechariahTan"},"content":""},{"lineNumber":3,"author":{"gitId":"ZechariahTan"},"content":"    int taskIndexToDone;"},{"lineNumber":4,"author":{"gitId":"ZechariahTan"},"content":"    Task taskToDone;"},{"lineNumber":5,"author":{"gitId":"ZechariahTan"},"content":"    TaskList taskList;"},{"lineNumber":6,"author":{"gitId":"ZechariahTan"},"content":""},{"lineNumber":7,"author":{"gitId":"ZechariahTan"},"content":"    public DoneCommand(int taskIndexToDone) {"},{"lineNumber":8,"author":{"gitId":"ZechariahTan"},"content":"        this.taskIndexToDone \u003d taskIndexToDone;"},{"lineNumber":9,"author":{"gitId":"ZechariahTan"},"content":"    }"},{"lineNumber":10,"author":{"gitId":"ZechariahTan"},"content":""},{"lineNumber":11,"author":{"gitId":"ZechariahTan"},"content":"    @Override"},{"lineNumber":12,"author":{"gitId":"ZechariahTan"},"content":"    public boolean isExitCommand() {"},{"lineNumber":13,"author":{"gitId":"ZechariahTan"},"content":"        return false;"},{"lineNumber":14,"author":{"gitId":"ZechariahTan"},"content":"    }"},{"lineNumber":15,"author":{"gitId":"ZechariahTan"},"content":""},{"lineNumber":16,"author":{"gitId":"ZechariahTan"},"content":"    @Override"},{"lineNumber":17,"author":{"gitId":"ZechariahTan"},"content":"    public TaskList runCommand(TaskList taskList) throws MikeInvalidInputException {"},{"lineNumber":18,"author":{"gitId":"ZechariahTan"},"content":"        this.taskList \u003d taskList;"},{"lineNumber":19,"author":{"gitId":"ZechariahTan"},"content":"        try {"},{"lineNumber":20,"author":{"gitId":"ZechariahTan"},"content":"            for (int i \u003d 1; i \u003c\u003d this.taskList.getNumTasks(); i++) {"},{"lineNumber":21,"author":{"gitId":"ZechariahTan"},"content":"                if (i \u003d\u003d taskIndexToDone) {"},{"lineNumber":22,"author":{"gitId":"ZechariahTan"},"content":"                    this.taskToDone \u003d this.taskList.getNthTask(i);"},{"lineNumber":23,"author":{"gitId":"ZechariahTan"},"content":"                }"},{"lineNumber":24,"author":{"gitId":"ZechariahTan"},"content":"            }"},{"lineNumber":25,"author":{"gitId":"ZechariahTan"},"content":"            this.taskToDone.completeTask();"},{"lineNumber":26,"author":{"gitId":"ZechariahTan"},"content":"            return this.taskList;"},{"lineNumber":27,"author":{"gitId":"ZechariahTan"},"content":"        } catch (NullPointerException e) {"},{"lineNumber":28,"author":{"gitId":"ZechariahTan"},"content":"            throw new MikeInvalidInputException(\"OOPS!! The task is not in the list\");"},{"lineNumber":29,"author":{"gitId":"ZechariahTan"},"content":"        }"},{"lineNumber":30,"author":{"gitId":"ZechariahTan"},"content":""},{"lineNumber":31,"author":{"gitId":"ZechariahTan"},"content":"    }"},{"lineNumber":32,"author":{"gitId":"ZechariahTan"},"content":""},{"lineNumber":33,"author":{"gitId":"ZechariahTan"},"content":"    @Override"},{"lineNumber":34,"author":{"gitId":"ZechariahTan"},"content":"    public String getResponse() {"},{"lineNumber":35,"author":{"gitId":"ZechariahTan"},"content":"        return String.format("},{"lineNumber":36,"author":{"gitId":"ZechariahTan"},"content":"                \"Nice! I\u0027ve marked this task as done: \\n\" +"},{"lineNumber":37,"author":{"gitId":"ZechariahTan"},"content":"                \"  %s\","},{"lineNumber":38,"author":{"gitId":"ZechariahTan"},"content":"                this.taskToDone.toString());"},{"lineNumber":39,"author":{"gitId":"ZechariahTan"},"content":""},{"lineNumber":40,"author":{"gitId":"ZechariahTan"},"content":"    }"},{"lineNumber":41,"author":{"gitId":"ZechariahTan"},"content":"}"}],"authorContributionMap":{"ZechariahTan":41}},{"path":"src/main/java/EventCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ZechariahTan"},"content":"public class EventCommand extends AddCommand {"},{"lineNumber":2,"author":{"gitId":"ZechariahTan"},"content":""},{"lineNumber":3,"author":{"gitId":"ZechariahTan"},"content":"    private String timeWindow;"},{"lineNumber":4,"author":{"gitId":"ZechariahTan"},"content":""},{"lineNumber":5,"author":{"gitId":"ZechariahTan"},"content":"    public EventCommand(String taskDescription, String timeWindow) {"},{"lineNumber":6,"author":{"gitId":"ZechariahTan"},"content":"        super(taskDescription);"},{"lineNumber":7,"author":{"gitId":"ZechariahTan"},"content":"        this.timeWindow \u003d timeWindow;"},{"lineNumber":8,"author":{"gitId":"ZechariahTan"},"content":"    }"},{"lineNumber":9,"author":{"gitId":"ZechariahTan"},"content":""},{"lineNumber":10,"author":{"gitId":"ZechariahTan"},"content":"    @Override"},{"lineNumber":11,"author":{"gitId":"ZechariahTan"},"content":"    public TaskList runCommand(TaskList taskList) {"},{"lineNumber":12,"author":{"gitId":"ZechariahTan"},"content":"        this.taskList \u003d taskList;"},{"lineNumber":13,"author":{"gitId":"ZechariahTan"},"content":"        this.taskToAdd \u003d new EventTask(this.taskDescription, this.timeWindow);"},{"lineNumber":14,"author":{"gitId":"ZechariahTan"},"content":"        taskList.addTaskToList(taskToAdd);"},{"lineNumber":15,"author":{"gitId":"ZechariahTan"},"content":"        return taskList;"},{"lineNumber":16,"author":{"gitId":"ZechariahTan"},"content":"    }"},{"lineNumber":17,"author":{"gitId":"ZechariahTan"},"content":"}"}],"authorContributionMap":{"ZechariahTan":17}},{"path":"src/main/java/EventTask.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ZechariahTan"},"content":"public class EventTask extends Task {"},{"lineNumber":2,"author":{"gitId":"ZechariahTan"},"content":""},{"lineNumber":3,"author":{"gitId":"ZechariahTan"},"content":"    private String timeWindow;"},{"lineNumber":4,"author":{"gitId":"ZechariahTan"},"content":""},{"lineNumber":5,"author":{"gitId":"ZechariahTan"},"content":"    public EventTask(String taskDescription, String timeWindow) {"},{"lineNumber":6,"author":{"gitId":"ZechariahTan"},"content":"        this.taskDescription \u003d taskDescription;"},{"lineNumber":7,"author":{"gitId":"ZechariahTan"},"content":"        this.timeWindow \u003d timeWindow;"},{"lineNumber":8,"author":{"gitId":"ZechariahTan"},"content":"        this.taskType \u003d \u0027E\u0027;"},{"lineNumber":9,"author":{"gitId":"ZechariahTan"},"content":"    }"},{"lineNumber":10,"author":{"gitId":"ZechariahTan"},"content":""},{"lineNumber":11,"author":{"gitId":"ZechariahTan"},"content":"    @Override"},{"lineNumber":12,"author":{"gitId":"ZechariahTan"},"content":"    public String toString() {"},{"lineNumber":13,"author":{"gitId":"ZechariahTan"},"content":"        if (isDone) {"},{"lineNumber":14,"author":{"gitId":"ZechariahTan"},"content":"            return String.format(\"[%c] [X] %s (at: %s)\", this.taskType, this.taskDescription, this.timeWindow);"},{"lineNumber":15,"author":{"gitId":"ZechariahTan"},"content":"        } else {"},{"lineNumber":16,"author":{"gitId":"ZechariahTan"},"content":"            return String.format(\"[%c] [ ] %s (at: %s)\", this.taskType, this.taskDescription, this.timeWindow);"},{"lineNumber":17,"author":{"gitId":"ZechariahTan"},"content":"        }"},{"lineNumber":18,"author":{"gitId":"ZechariahTan"},"content":"    }"},{"lineNumber":19,"author":{"gitId":"ZechariahTan"},"content":"}"}],"authorContributionMap":{"ZechariahTan":19}},{"path":"src/main/java/ExceptionCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ZechariahTan"},"content":"public class ExceptionCommand implements Command {"},{"lineNumber":2,"author":{"gitId":"ZechariahTan"},"content":""},{"lineNumber":3,"author":{"gitId":"ZechariahTan"},"content":"    private String ExceptionMessage;"},{"lineNumber":4,"author":{"gitId":"ZechariahTan"},"content":""},{"lineNumber":5,"author":{"gitId":"ZechariahTan"},"content":"    public ExceptionCommand(String ExceptionMessage) {"},{"lineNumber":6,"author":{"gitId":"ZechariahTan"},"content":"        this.ExceptionMessage \u003d ExceptionMessage;"},{"lineNumber":7,"author":{"gitId":"ZechariahTan"},"content":"    }"},{"lineNumber":8,"author":{"gitId":"ZechariahTan"},"content":""},{"lineNumber":9,"author":{"gitId":"ZechariahTan"},"content":"    @Override"},{"lineNumber":10,"author":{"gitId":"ZechariahTan"},"content":"    public boolean isExitCommand() {"},{"lineNumber":11,"author":{"gitId":"ZechariahTan"},"content":"        return false;"},{"lineNumber":12,"author":{"gitId":"ZechariahTan"},"content":"    }"},{"lineNumber":13,"author":{"gitId":"ZechariahTan"},"content":""},{"lineNumber":14,"author":{"gitId":"ZechariahTan"},"content":"    @Override"},{"lineNumber":15,"author":{"gitId":"ZechariahTan"},"content":"    public TaskList runCommand(TaskList taskList) {"},{"lineNumber":16,"author":{"gitId":"ZechariahTan"},"content":"        return taskList;"},{"lineNumber":17,"author":{"gitId":"ZechariahTan"},"content":"    }"},{"lineNumber":18,"author":{"gitId":"ZechariahTan"},"content":""},{"lineNumber":19,"author":{"gitId":"ZechariahTan"},"content":"    @Override"},{"lineNumber":20,"author":{"gitId":"ZechariahTan"},"content":"    public String getResponse() {"},{"lineNumber":21,"author":{"gitId":"ZechariahTan"},"content":"        return this.ExceptionMessage;"},{"lineNumber":22,"author":{"gitId":"ZechariahTan"},"content":"    }"},{"lineNumber":23,"author":{"gitId":"ZechariahTan"},"content":"}"}],"authorContributionMap":{"ZechariahTan":23}},{"path":"src/main/java/InputHandler.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ZechariahTan"},"content":"import java.util.Scanner;"},{"lineNumber":2,"author":{"gitId":"ZechariahTan"},"content":"import java.util.regex.Matcher;"},{"lineNumber":3,"author":{"gitId":"ZechariahTan"},"content":"import java.util.regex.Pattern;"},{"lineNumber":4,"author":{"gitId":"ZechariahTan"},"content":""},{"lineNumber":5,"author":{"gitId":"ZechariahTan"},"content":"public class InputHandler {"},{"lineNumber":6,"author":{"gitId":"ZechariahTan"},"content":""},{"lineNumber":7,"author":{"gitId":"ZechariahTan"},"content":"    private static final String BYE_COMMAND \u003d \"bye\";"},{"lineNumber":8,"author":{"gitId":"ZechariahTan"},"content":"    private static final String DONE_COMMAND \u003d \"done\";"},{"lineNumber":9,"author":{"gitId":"ZechariahTan"},"content":"    private static final String LIST_COMMAND \u003d \"list\";"},{"lineNumber":10,"author":{"gitId":"ZechariahTan"},"content":"    private static final String TODO_COMMAND \u003d \"todo\";"},{"lineNumber":11,"author":{"gitId":"ZechariahTan"},"content":"    private static final String EVENT_COMMAND \u003d \"event\";"},{"lineNumber":12,"author":{"gitId":"ZechariahTan"},"content":"    private static final String DEADLINE_COMMAND \u003d \"deadline\";"},{"lineNumber":13,"author":{"gitId":"ZechariahTan"},"content":"    private static final String DELETE_COMMAND \u003d \"delete\";"},{"lineNumber":14,"author":{"gitId":"ZechariahTan"},"content":""},{"lineNumber":15,"author":{"gitId":"ZechariahTan"},"content":"    /**"},{"lineNumber":16,"author":{"gitId":"ZechariahTan"},"content":"     * Reads user input and parses it"},{"lineNumber":17,"author":{"gitId":"ZechariahTan"},"content":"     *"},{"lineNumber":18,"author":{"gitId":"ZechariahTan"},"content":"     * @return Command type object with parameters entered by user"},{"lineNumber":19,"author":{"gitId":"ZechariahTan"},"content":"     */"},{"lineNumber":20,"author":{"gitId":"ZechariahTan"},"content":"    public static Command parseInput(Scanner scanner) throws MikeInvalidInputException {"},{"lineNumber":21,"author":{"gitId":"ZechariahTan"},"content":"        String userInput \u003d scanner.nextLine();"},{"lineNumber":22,"author":{"gitId":"ZechariahTan"},"content":"        String[] userInputArr \u003d userInput.split(\" \");"},{"lineNumber":23,"author":{"gitId":"ZechariahTan"},"content":""},{"lineNumber":24,"author":{"gitId":"ZechariahTan"},"content":"        switch (userInputArr[0].toLowerCase()) {"},{"lineNumber":25,"author":{"gitId":"ZechariahTan"},"content":"            case BYE_COMMAND:"},{"lineNumber":26,"author":{"gitId":"ZechariahTan"},"content":"                return new ByeCommand();"},{"lineNumber":27,"author":{"gitId":"ZechariahTan"},"content":""},{"lineNumber":28,"author":{"gitId":"ZechariahTan"},"content":"            case LIST_COMMAND:"},{"lineNumber":29,"author":{"gitId":"ZechariahTan"},"content":"                return new ListCommand();"},{"lineNumber":30,"author":{"gitId":"ZechariahTan"},"content":""},{"lineNumber":31,"author":{"gitId":"ZechariahTan"},"content":"            case DONE_COMMAND:"},{"lineNumber":32,"author":{"gitId":"ZechariahTan"},"content":"                try {"},{"lineNumber":33,"author":{"gitId":"ZechariahTan"},"content":"                    return new DoneCommand(Integer.parseInt(userInputArr[1]));"},{"lineNumber":34,"author":{"gitId":"ZechariahTan"},"content":"                } catch (NumberFormatException | IndexOutOfBoundsException e) {"},{"lineNumber":35,"author":{"gitId":"ZechariahTan"},"content":"                    throw new MikeInvalidInputException("},{"lineNumber":36,"author":{"gitId":"ZechariahTan"},"content":"                            \" ☹ OOPS!!! Input does not match Done command format. eg.\\n\" +"},{"lineNumber":37,"author":{"gitId":"ZechariahTan"},"content":"                            \"   Done \u003cindex of task to mark completed\u003e\");"},{"lineNumber":38,"author":{"gitId":"ZechariahTan"},"content":"                }"},{"lineNumber":39,"author":{"gitId":"ZechariahTan"},"content":""},{"lineNumber":40,"author":{"gitId":"ZechariahTan"},"content":"            case TODO_COMMAND:"},{"lineNumber":41,"author":{"gitId":"ZechariahTan"},"content":"                try {"},{"lineNumber":42,"author":{"gitId":"ZechariahTan"},"content":"                    Pattern p \u003d Pattern.compile(\"(?i)todo (.+)\");"},{"lineNumber":43,"author":{"gitId":"ZechariahTan"},"content":"                    Matcher m \u003d p.matcher(userInput);"},{"lineNumber":44,"author":{"gitId":"ZechariahTan"},"content":"                    m.find();"},{"lineNumber":45,"author":{"gitId":"ZechariahTan"},"content":"                    return new TodoCommand(m.group(1));"},{"lineNumber":46,"author":{"gitId":"ZechariahTan"},"content":"                } catch (IllegalStateException e) {"},{"lineNumber":47,"author":{"gitId":"ZechariahTan"},"content":"                    throw new MikeInvalidInputException("},{"lineNumber":48,"author":{"gitId":"ZechariahTan"},"content":"                            \" ☹ OOPS!!! Input does not match Todo command format. eg.\\n\" +"},{"lineNumber":49,"author":{"gitId":"ZechariahTan"},"content":"                            \"   todo \u003cdescription\u003e\");"},{"lineNumber":50,"author":{"gitId":"ZechariahTan"},"content":"                }"},{"lineNumber":51,"author":{"gitId":"ZechariahTan"},"content":""},{"lineNumber":52,"author":{"gitId":"ZechariahTan"},"content":"            case EVENT_COMMAND:"},{"lineNumber":53,"author":{"gitId":"ZechariahTan"},"content":"                try {"},{"lineNumber":54,"author":{"gitId":"ZechariahTan"},"content":"                    Pattern p \u003d Pattern.compile(\"(?i)event (.+) /at (.+)\");"},{"lineNumber":55,"author":{"gitId":"ZechariahTan"},"content":"                    Matcher m \u003d p.matcher(userInput);"},{"lineNumber":56,"author":{"gitId":"ZechariahTan"},"content":"                    m.find();"},{"lineNumber":57,"author":{"gitId":"ZechariahTan"},"content":"                    return new EventCommand(m.group(1), m.group(2));"},{"lineNumber":58,"author":{"gitId":"ZechariahTan"},"content":"                } catch (IllegalStateException e) {"},{"lineNumber":59,"author":{"gitId":"ZechariahTan"},"content":"                    throw new MikeInvalidInputException("},{"lineNumber":60,"author":{"gitId":"ZechariahTan"},"content":"                            \" ☹ OOPS!!! Input does not match Event command format. eg.\\n\" +"},{"lineNumber":61,"author":{"gitId":"ZechariahTan"},"content":"                            \"   event \u003cdescription\u003e /at \u003cdeadline\u003e\");"},{"lineNumber":62,"author":{"gitId":"ZechariahTan"},"content":"                }"},{"lineNumber":63,"author":{"gitId":"ZechariahTan"},"content":""},{"lineNumber":64,"author":{"gitId":"ZechariahTan"},"content":"            case DEADLINE_COMMAND:"},{"lineNumber":65,"author":{"gitId":"ZechariahTan"},"content":"                try {"},{"lineNumber":66,"author":{"gitId":"ZechariahTan"},"content":"                    Pattern p \u003d Pattern.compile(\"(?i)deadline (.+) /by (.+)\");"},{"lineNumber":67,"author":{"gitId":"ZechariahTan"},"content":"                    Matcher m \u003d p.matcher(userInput);"},{"lineNumber":68,"author":{"gitId":"ZechariahTan"},"content":"                    m.find();"},{"lineNumber":69,"author":{"gitId":"ZechariahTan"},"content":"                    return new DeadlineCommand(m.group(1), m.group(2));"},{"lineNumber":70,"author":{"gitId":"ZechariahTan"},"content":"                } catch (IllegalStateException e) {"},{"lineNumber":71,"author":{"gitId":"ZechariahTan"},"content":"                    throw new MikeInvalidInputException("},{"lineNumber":72,"author":{"gitId":"ZechariahTan"},"content":"                            \" ☹ OOPS!!! Input does not match Deadline command format. eg.\\n\" +"},{"lineNumber":73,"author":{"gitId":"ZechariahTan"},"content":"                            \"   deadline \u003cdescription\u003e /by \u003cdeadline\u003e\");"},{"lineNumber":74,"author":{"gitId":"ZechariahTan"},"content":"                }"},{"lineNumber":75,"author":{"gitId":"ZechariahTan"},"content":""},{"lineNumber":76,"author":{"gitId":"ZechariahTan"},"content":"            case DELETE_COMMAND:"},{"lineNumber":77,"author":{"gitId":"ZechariahTan"},"content":"                try {"},{"lineNumber":78,"author":{"gitId":"ZechariahTan"},"content":"                    return new DeleteCommand(Integer.parseInt(userInputArr[1]));"},{"lineNumber":79,"author":{"gitId":"ZechariahTan"},"content":"                } catch (NumberFormatException | IndexOutOfBoundsException e) {"},{"lineNumber":80,"author":{"gitId":"ZechariahTan"},"content":"                    throw new MikeInvalidInputException("},{"lineNumber":81,"author":{"gitId":"ZechariahTan"},"content":"                            \" ☹ OOPS!!! Input does not match Delete command format. eg.\\n\" +"},{"lineNumber":82,"author":{"gitId":"ZechariahTan"},"content":"                            \"   Delete \u003cindex of task to delete\u003e\");"},{"lineNumber":83,"author":{"gitId":"ZechariahTan"},"content":"                }"},{"lineNumber":84,"author":{"gitId":"ZechariahTan"},"content":""},{"lineNumber":85,"author":{"gitId":"ZechariahTan"},"content":"            default:"},{"lineNumber":86,"author":{"gitId":"ZechariahTan"},"content":"                throw new MikeInvalidInputException(\" OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\");"},{"lineNumber":87,"author":{"gitId":"ZechariahTan"},"content":"        }"},{"lineNumber":88,"author":{"gitId":"ZechariahTan"},"content":"    }"},{"lineNumber":89,"author":{"gitId":"ZechariahTan"},"content":"}"},{"lineNumber":90,"author":{"gitId":"ZechariahTan"},"content":""}],"authorContributionMap":{"ZechariahTan":90}},{"path":"src/main/java/ListCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ZechariahTan"},"content":"public class ListCommand implements Command {"},{"lineNumber":2,"author":{"gitId":"ZechariahTan"},"content":"    private boolean isExitCommand \u003d false;"},{"lineNumber":3,"author":{"gitId":"ZechariahTan"},"content":"    private TaskList taskList;"},{"lineNumber":4,"author":{"gitId":"ZechariahTan"},"content":""},{"lineNumber":5,"author":{"gitId":"ZechariahTan"},"content":"    public ListCommand() {"},{"lineNumber":6,"author":{"gitId":"ZechariahTan"},"content":"    }"},{"lineNumber":7,"author":{"gitId":"ZechariahTan"},"content":""},{"lineNumber":8,"author":{"gitId":"ZechariahTan"},"content":"    @Override"},{"lineNumber":9,"author":{"gitId":"ZechariahTan"},"content":"    public boolean isExitCommand() {"},{"lineNumber":10,"author":{"gitId":"ZechariahTan"},"content":"        return isExitCommand;"},{"lineNumber":11,"author":{"gitId":"ZechariahTan"},"content":"    }"},{"lineNumber":12,"author":{"gitId":"ZechariahTan"},"content":""},{"lineNumber":13,"author":{"gitId":"ZechariahTan"},"content":"    @Override"},{"lineNumber":14,"author":{"gitId":"ZechariahTan"},"content":"    public TaskList runCommand(TaskList taskList) {"},{"lineNumber":15,"author":{"gitId":"ZechariahTan"},"content":"        this.taskList \u003d taskList;"},{"lineNumber":16,"author":{"gitId":"ZechariahTan"},"content":"        return taskList;"},{"lineNumber":17,"author":{"gitId":"ZechariahTan"},"content":"    }"},{"lineNumber":18,"author":{"gitId":"ZechariahTan"},"content":""},{"lineNumber":19,"author":{"gitId":"ZechariahTan"},"content":"    @Override"},{"lineNumber":20,"author":{"gitId":"ZechariahTan"},"content":"    public String getResponse() {"},{"lineNumber":21,"author":{"gitId":"ZechariahTan"},"content":"        return String.format("},{"lineNumber":22,"author":{"gitId":"ZechariahTan"},"content":"                \"Here are the tasks in your list:\\n\" +"},{"lineNumber":23,"author":{"gitId":"ZechariahTan"},"content":"                \"%s\","},{"lineNumber":24,"author":{"gitId":"ZechariahTan"},"content":"                this.taskList.toString());"},{"lineNumber":25,"author":{"gitId":"ZechariahTan"},"content":"    }"},{"lineNumber":26,"author":{"gitId":"ZechariahTan"},"content":"}"}],"authorContributionMap":{"ZechariahTan":26}},{"path":"src/main/java/Main.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ZechariahTan"},"content":"import java.util.Scanner;"},{"lineNumber":2,"author":{"gitId":"ZechariahTan"},"content":""},{"lineNumber":3,"author":{"gitId":"ZechariahTan"},"content":"public class Main {"},{"lineNumber":4,"author":{"gitId":"ZechariahTan"},"content":"    public static void main(String[] args) {"},{"lineNumber":5,"author":{"gitId":"ZechariahTan"},"content":"        Mike mike \u003d new Mike();"},{"lineNumber":6,"author":{"gitId":"ZechariahTan"},"content":"        Scanner scanner \u003d new Scanner(System.in);"},{"lineNumber":7,"author":{"gitId":"ZechariahTan"},"content":"        String mikeResponse;"},{"lineNumber":8,"author":{"gitId":"ZechariahTan"},"content":""},{"lineNumber":9,"author":{"gitId":"ZechariahTan"},"content":"        mike.mikeInit();"},{"lineNumber":10,"author":{"gitId":"ZechariahTan"},"content":"        while(mike.isRunning) {"},{"lineNumber":11,"author":{"gitId":"ZechariahTan"},"content":"            try {"},{"lineNumber":12,"author":{"gitId":"ZechariahTan"},"content":"                Command inputCommand \u003d InputHandler.parseInput(scanner);"},{"lineNumber":13,"author":{"gitId":"ZechariahTan"},"content":"                mikeResponse \u003d mike.getResponse(inputCommand);"},{"lineNumber":14,"author":{"gitId":"ZechariahTan"},"content":"                OutputHandler.printResponse(mikeResponse);"},{"lineNumber":15,"author":{"gitId":"ZechariahTan"},"content":"            } catch (MikeInvalidInputException | MikeCommandExecutionException e) {"},{"lineNumber":16,"author":{"gitId":"ZechariahTan"},"content":"                OutputHandler.printResponse(e.getMessage());"},{"lineNumber":17,"author":{"gitId":"ZechariahTan"},"content":"            }"},{"lineNumber":18,"author":{"gitId":"ZechariahTan"},"content":"        }"},{"lineNumber":19,"author":{"gitId":"ZechariahTan"},"content":"    }"},{"lineNumber":20,"author":{"gitId":"ZechariahTan"},"content":"}"}],"authorContributionMap":{"ZechariahTan":20}},{"path":"src/main/java/Mike.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ZechariahTan"},"content":"public class Mike {"},{"lineNumber":2,"author":{"gitId":"ZechariahTan"},"content":""},{"lineNumber":3,"author":{"gitId":"ZechariahTan"},"content":"    private final String logo \u003d"},{"lineNumber":4,"author":{"gitId":"ZechariahTan"},"content":"            \"  __  __   _   _               _     _                _    _                      _\\n\" +"},{"lineNumber":5,"author":{"gitId":"ZechariahTan"},"content":"            \" |  \\\\/  | (_) | |             | |   | |              | |  | |                    | |   \\n\" +"},{"lineNumber":6,"author":{"gitId":"ZechariahTan"},"content":"            \" | \\\\  / |  _  | | __   ___    | |_  | |__     ___    | |__| |   __ _  __      __ | | __\\n\" +"},{"lineNumber":7,"author":{"gitId":"ZechariahTan"},"content":"            \" | |\\\\/| | | | | |/ /  / _ \\\\   | __| | \u0027_ \\\\   / _ \\\\   |  __  |  / _` | \\\\ \\\\ /\\\\ / / | |/ /\\n\" +"},{"lineNumber":8,"author":{"gitId":"ZechariahTan"},"content":"            \" | |  | | | | |   \u003c  |  __/   | |_  | | | | |  __/   | |  | | | (_| |  \\\\ V  V /  |   \u003c \\n\" +"},{"lineNumber":9,"author":{"gitId":"ZechariahTan"},"content":"            \" |_|  |_| |_| |_|\\\\_\\\\  \\\\___|    \\\\__| |_| |_|  \\\\___|   |_|  |_|  \\\\__,_|   \\\\_/\\\\_/   |_|\\\\_\\\\\\n\" +"},{"lineNumber":10,"author":{"gitId":"ZechariahTan"},"content":"            \"                                                                                       \\n\" +"},{"lineNumber":11,"author":{"gitId":"ZechariahTan"},"content":"            \"                                           __     __\\n\" +"},{"lineNumber":12,"author":{"gitId":"ZechariahTan"},"content":"            \"                                          /\u0027(  _  )`\\\\\\n\" +"},{"lineNumber":13,"author":{"gitId":"ZechariahTan"},"content":"            \"                                         / . \\\\/^\\\\/ . \\\\\\n\" +"},{"lineNumber":14,"author":{"gitId":"ZechariahTan"},"content":"            \"                                        /  _)_`-\u0027_(_  \\\\\\n\" +"},{"lineNumber":15,"author":{"gitId":"ZechariahTan"},"content":"            \"                                       /.-~   ).(   ~-.\\\\\\n\" +"},{"lineNumber":16,"author":{"gitId":"ZechariahTan"},"content":"            \"                                      /\u0027     /\\\\_/\\\\     `\\\\\\n\" +"},{"lineNumber":17,"author":{"gitId":"ZechariahTan"},"content":"            \"                                             \\\"-V-\\\"\";"},{"lineNumber":18,"author":{"gitId":"ZechariahTan"},"content":""},{"lineNumber":19,"author":{"gitId":"ZechariahTan"},"content":"    public boolean isRunning;"},{"lineNumber":20,"author":{"gitId":"ZechariahTan"},"content":"    public TaskList taskList;"},{"lineNumber":21,"author":{"gitId":"ZechariahTan"},"content":""},{"lineNumber":22,"author":{"gitId":"ZechariahTan"},"content":"    /**"},{"lineNumber":23,"author":{"gitId":"ZechariahTan"},"content":"     * Mike chatbot constructor"},{"lineNumber":24,"author":{"gitId":"ZechariahTan"},"content":"     */"},{"lineNumber":25,"author":{"gitId":"ZechariahTan"},"content":"    public Mike() {"},{"lineNumber":26,"author":{"gitId":"ZechariahTan"},"content":"        this.isRunning \u003d true;"},{"lineNumber":27,"author":{"gitId":"ZechariahTan"},"content":"        this.taskList \u003d new TaskList();"},{"lineNumber":28,"author":{"gitId":"ZechariahTan"},"content":"    }"},{"lineNumber":29,"author":{"gitId":"ZechariahTan"},"content":""},{"lineNumber":30,"author":{"gitId":"ZechariahTan"},"content":"    /**"},{"lineNumber":31,"author":{"gitId":"ZechariahTan"},"content":"     * Prints initialisation message"},{"lineNumber":32,"author":{"gitId":"ZechariahTan"},"content":"     */"},{"lineNumber":33,"author":{"gitId":"ZechariahTan"},"content":"    public void mikeInit() {"},{"lineNumber":34,"author":{"gitId":"ZechariahTan"},"content":"        System.out.println(\"Hello from\\n\" + this.logo);"},{"lineNumber":35,"author":{"gitId":"ZechariahTan"},"content":"    }"},{"lineNumber":36,"author":{"gitId":"ZechariahTan"},"content":""},{"lineNumber":37,"author":{"gitId":"ZechariahTan"},"content":"    /**"},{"lineNumber":38,"author":{"gitId":"ZechariahTan"},"content":"     * Excecutes the command provided and returns the response generated by the command"},{"lineNumber":39,"author":{"gitId":"ZechariahTan"},"content":"     * @param inputCommand Command object containing parameters required"},{"lineNumber":40,"author":{"gitId":"ZechariahTan"},"content":"     * @return Response generated by the command"},{"lineNumber":41,"author":{"gitId":"ZechariahTan"},"content":"     */"},{"lineNumber":42,"author":{"gitId":"ZechariahTan"},"content":"    public String getResponse(Command inputCommand) throws MikeCommandExecutionException {"},{"lineNumber":43,"author":{"gitId":"ZechariahTan"},"content":"        try {"},{"lineNumber":44,"author":{"gitId":"ZechariahTan"},"content":"            this.isRunning \u003d !inputCommand.isExitCommand();"},{"lineNumber":45,"author":{"gitId":"ZechariahTan"},"content":"            this.taskList \u003d inputCommand.runCommand(this.taskList);"},{"lineNumber":46,"author":{"gitId":"ZechariahTan"},"content":"            return inputCommand.getResponse();"},{"lineNumber":47,"author":{"gitId":"ZechariahTan"},"content":"        } catch (MikeInvalidInputException e) {"},{"lineNumber":48,"author":{"gitId":"ZechariahTan"},"content":"            throw new MikeCommandExecutionException(e.getMessage());"},{"lineNumber":49,"author":{"gitId":"ZechariahTan"},"content":"        }"},{"lineNumber":50,"author":{"gitId":"ZechariahTan"},"content":"    }"},{"lineNumber":51,"author":{"gitId":"ZechariahTan"},"content":"}"},{"lineNumber":52,"author":{"gitId":"ZechariahTan"},"content":""},{"lineNumber":53,"author":{"gitId":"ZechariahTan"},"content":""}],"authorContributionMap":{"ZechariahTan":53}},{"path":"src/main/java/MikeCommandExecutionException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ZechariahTan"},"content":"public class MikeCommandExecutionException extends Exception {"},{"lineNumber":2,"author":{"gitId":"ZechariahTan"},"content":"    public MikeCommandExecutionException(String errorMessage) {"},{"lineNumber":3,"author":{"gitId":"ZechariahTan"},"content":"        super(errorMessage);"},{"lineNumber":4,"author":{"gitId":"ZechariahTan"},"content":"    }"},{"lineNumber":5,"author":{"gitId":"ZechariahTan"},"content":"}"}],"authorContributionMap":{"ZechariahTan":5}},{"path":"src/main/java/MikeInvalidInputException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ZechariahTan"},"content":"public class MikeInvalidInputException extends Exception {"},{"lineNumber":2,"author":{"gitId":"ZechariahTan"},"content":"    public MikeInvalidInputException(String errorMessage) {"},{"lineNumber":3,"author":{"gitId":"ZechariahTan"},"content":"        super(errorMessage);"},{"lineNumber":4,"author":{"gitId":"ZechariahTan"},"content":"    }"},{"lineNumber":5,"author":{"gitId":"ZechariahTan"},"content":"}"}],"authorContributionMap":{"ZechariahTan":5}},{"path":"src/main/java/OutputHandler.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ZechariahTan"},"content":"public class OutputHandler {"},{"lineNumber":2,"author":{"gitId":"ZechariahTan"},"content":"    public static void printResponse(String response) {"},{"lineNumber":3,"author":{"gitId":"ZechariahTan"},"content":"        System.out.print(String.format(\"____________________________________________________________\\n\" +"},{"lineNumber":4,"author":{"gitId":"ZechariahTan"},"content":"                \"%s\\n\" +"},{"lineNumber":5,"author":{"gitId":"ZechariahTan"},"content":"                \"____________________________________________________________\\n\", response));"},{"lineNumber":6,"author":{"gitId":"ZechariahTan"},"content":"    }"},{"lineNumber":7,"author":{"gitId":"ZechariahTan"},"content":"}"}],"authorContributionMap":{"ZechariahTan":7}},{"path":"src/main/java/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ZechariahTan"},"content":"public abstract class Task {"},{"lineNumber":2,"author":{"gitId":"ZechariahTan"},"content":"    protected String taskDescription;"},{"lineNumber":3,"author":{"gitId":"ZechariahTan"},"content":"    protected boolean isDone;"},{"lineNumber":4,"author":{"gitId":"ZechariahTan"},"content":"    protected char taskType;"},{"lineNumber":5,"author":{"gitId":"ZechariahTan"},"content":""},{"lineNumber":6,"author":{"gitId":"ZechariahTan"},"content":"    /**"},{"lineNumber":7,"author":{"gitId":"ZechariahTan"},"content":"     * Gets the task description"},{"lineNumber":8,"author":{"gitId":"ZechariahTan"},"content":"     *"},{"lineNumber":9,"author":{"gitId":"ZechariahTan"},"content":"     * @return String description of the task"},{"lineNumber":10,"author":{"gitId":"ZechariahTan"},"content":"     */"},{"lineNumber":11,"author":{"gitId":"ZechariahTan"},"content":"    public String getTaskDescription() {"},{"lineNumber":12,"author":{"gitId":"ZechariahTan"},"content":"        return this.taskDescription;"},{"lineNumber":13,"author":{"gitId":"ZechariahTan"},"content":"    }"},{"lineNumber":14,"author":{"gitId":"ZechariahTan"},"content":""},{"lineNumber":15,"author":{"gitId":"ZechariahTan"},"content":"    /**"},{"lineNumber":16,"author":{"gitId":"ZechariahTan"},"content":"     * Checks if task has been marked completed"},{"lineNumber":17,"author":{"gitId":"ZechariahTan"},"content":"     *"},{"lineNumber":18,"author":{"gitId":"ZechariahTan"},"content":"     * @return value of isDone in task object"},{"lineNumber":19,"author":{"gitId":"ZechariahTan"},"content":"     */"},{"lineNumber":20,"author":{"gitId":"ZechariahTan"},"content":"    public boolean isDone() {"},{"lineNumber":21,"author":{"gitId":"ZechariahTan"},"content":"        return this.isDone;"},{"lineNumber":22,"author":{"gitId":"ZechariahTan"},"content":"    }"},{"lineNumber":23,"author":{"gitId":"ZechariahTan"},"content":""},{"lineNumber":24,"author":{"gitId":"ZechariahTan"},"content":"    /**"},{"lineNumber":25,"author":{"gitId":"ZechariahTan"},"content":"     * Mark task as completed"},{"lineNumber":26,"author":{"gitId":"ZechariahTan"},"content":"     */"},{"lineNumber":27,"author":{"gitId":"ZechariahTan"},"content":"    public void completeTask() {"},{"lineNumber":28,"author":{"gitId":"ZechariahTan"},"content":"        this.isDone \u003d true;"},{"lineNumber":29,"author":{"gitId":"ZechariahTan"},"content":"    }"},{"lineNumber":30,"author":{"gitId":"ZechariahTan"},"content":"}"}],"authorContributionMap":{"ZechariahTan":30}},{"path":"src/main/java/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ZechariahTan"},"content":"import java.util.ArrayList;"},{"lineNumber":2,"author":{"gitId":"ZechariahTan"},"content":"import java.util.List;"},{"lineNumber":3,"author":{"gitId":"ZechariahTan"},"content":""},{"lineNumber":4,"author":{"gitId":"ZechariahTan"},"content":"public class TaskList {"},{"lineNumber":5,"author":{"gitId":"ZechariahTan"},"content":"    private List\u003cTask\u003e taskList;"},{"lineNumber":6,"author":{"gitId":"ZechariahTan"},"content":"    private int numTasks \u003d 0;"},{"lineNumber":7,"author":{"gitId":"ZechariahTan"},"content":""},{"lineNumber":8,"author":{"gitId":"ZechariahTan"},"content":"    public TaskList() {"},{"lineNumber":9,"author":{"gitId":"ZechariahTan"},"content":"        taskList \u003d new ArrayList\u003c\u003e();"},{"lineNumber":10,"author":{"gitId":"ZechariahTan"},"content":"    }"},{"lineNumber":11,"author":{"gitId":"ZechariahTan"},"content":""},{"lineNumber":12,"author":{"gitId":"ZechariahTan"},"content":"    /**"},{"lineNumber":13,"author":{"gitId":"ZechariahTan"},"content":"     * Add task to list of tasks then increment number of tasks stored"},{"lineNumber":14,"author":{"gitId":"ZechariahTan"},"content":"     *"},{"lineNumber":15,"author":{"gitId":"ZechariahTan"},"content":"     * @param task task to be added to list"},{"lineNumber":16,"author":{"gitId":"ZechariahTan"},"content":"     */"},{"lineNumber":17,"author":{"gitId":"ZechariahTan"},"content":"    public void addTaskToList(Task task) {"},{"lineNumber":18,"author":{"gitId":"ZechariahTan"},"content":"        taskList.add(task);"},{"lineNumber":19,"author":{"gitId":"ZechariahTan"},"content":"        numTasks++;"},{"lineNumber":20,"author":{"gitId":"ZechariahTan"},"content":"    }"},{"lineNumber":21,"author":{"gitId":"ZechariahTan"},"content":""},{"lineNumber":22,"author":{"gitId":"ZechariahTan"},"content":"    /**"},{"lineNumber":23,"author":{"gitId":"ZechariahTan"},"content":"     * Get number of tasks stored in task list"},{"lineNumber":24,"author":{"gitId":"ZechariahTan"},"content":"     *"},{"lineNumber":25,"author":{"gitId":"ZechariahTan"},"content":"     * @return num of tasks in list"},{"lineNumber":26,"author":{"gitId":"ZechariahTan"},"content":"     */"},{"lineNumber":27,"author":{"gitId":"ZechariahTan"},"content":"    public int getNumTasks() {"},{"lineNumber":28,"author":{"gitId":"ZechariahTan"},"content":"        return numTasks;"},{"lineNumber":29,"author":{"gitId":"ZechariahTan"},"content":"    }"},{"lineNumber":30,"author":{"gitId":"ZechariahTan"},"content":""},{"lineNumber":31,"author":{"gitId":"ZechariahTan"},"content":"    /**"},{"lineNumber":32,"author":{"gitId":"ZechariahTan"},"content":"     * return nth task starting at index 1"},{"lineNumber":33,"author":{"gitId":"ZechariahTan"},"content":"     *"},{"lineNumber":34,"author":{"gitId":"ZechariahTan"},"content":"     * @param i the index of the task to be retrieved"},{"lineNumber":35,"author":{"gitId":"ZechariahTan"},"content":"     * @return the Task object"},{"lineNumber":36,"author":{"gitId":"ZechariahTan"},"content":"     */"},{"lineNumber":37,"author":{"gitId":"ZechariahTan"},"content":"    public Task getNthTask(int i) {"},{"lineNumber":38,"author":{"gitId":"ZechariahTan"},"content":"        return this.taskList.get(i - 1);"},{"lineNumber":39,"author":{"gitId":"ZechariahTan"},"content":"    }"},{"lineNumber":40,"author":{"gitId":"ZechariahTan"},"content":""},{"lineNumber":41,"author":{"gitId":"ZechariahTan"},"content":"    /**"},{"lineNumber":42,"author":{"gitId":"ZechariahTan"},"content":"     * deleted the nth task starting at index 1"},{"lineNumber":43,"author":{"gitId":"ZechariahTan"},"content":"     *"},{"lineNumber":44,"author":{"gitId":"ZechariahTan"},"content":"     * @param i the index of the task to be deleted"},{"lineNumber":45,"author":{"gitId":"ZechariahTan"},"content":"     */"},{"lineNumber":46,"author":{"gitId":"ZechariahTan"},"content":"    public void deleteNthTask(int i) {"},{"lineNumber":47,"author":{"gitId":"ZechariahTan"},"content":"        this.taskList.remove(i - 1);"},{"lineNumber":48,"author":{"gitId":"ZechariahTan"},"content":"    }"},{"lineNumber":49,"author":{"gitId":"ZechariahTan"},"content":""},{"lineNumber":50,"author":{"gitId":"ZechariahTan"},"content":"    @Override"},{"lineNumber":51,"author":{"gitId":"ZechariahTan"},"content":"    public String toString() {"},{"lineNumber":52,"author":{"gitId":"ZechariahTan"},"content":"        StringBuilder buffer \u003d new StringBuilder();"},{"lineNumber":53,"author":{"gitId":"ZechariahTan"},"content":""},{"lineNumber":54,"author":{"gitId":"ZechariahTan"},"content":"        for (int i \u003d 1; i \u003c\u003d numTasks; i++) {"},{"lineNumber":55,"author":{"gitId":"ZechariahTan"},"content":"            buffer.append(i);"},{"lineNumber":56,"author":{"gitId":"ZechariahTan"},"content":"            buffer.append(\". \");"},{"lineNumber":57,"author":{"gitId":"ZechariahTan"},"content":"            buffer.append(taskList.get(i - 1).toString());"},{"lineNumber":58,"author":{"gitId":"ZechariahTan"},"content":"            buffer.append(\"\\n\");"},{"lineNumber":59,"author":{"gitId":"ZechariahTan"},"content":"        }"},{"lineNumber":60,"author":{"gitId":"ZechariahTan"},"content":"        return buffer.toString();"},{"lineNumber":61,"author":{"gitId":"ZechariahTan"},"content":"    }"},{"lineNumber":62,"author":{"gitId":"ZechariahTan"},"content":"}"}],"authorContributionMap":{"ZechariahTan":62}},{"path":"src/main/java/TodoCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ZechariahTan"},"content":"public class TodoCommand extends AddCommand {"},{"lineNumber":2,"author":{"gitId":"ZechariahTan"},"content":""},{"lineNumber":3,"author":{"gitId":"ZechariahTan"},"content":"    public TodoCommand(String taskDescription) {"},{"lineNumber":4,"author":{"gitId":"ZechariahTan"},"content":"        super(taskDescription);"},{"lineNumber":5,"author":{"gitId":"ZechariahTan"},"content":"    }"},{"lineNumber":6,"author":{"gitId":"ZechariahTan"},"content":"}"}],"authorContributionMap":{"ZechariahTan":6}},{"path":"src/main/java/TodoTask.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ZechariahTan"},"content":"public class TodoTask extends Task {"},{"lineNumber":2,"author":{"gitId":"ZechariahTan"},"content":""},{"lineNumber":3,"author":{"gitId":"ZechariahTan"},"content":"    public TodoTask(String taskDescription) {"},{"lineNumber":4,"author":{"gitId":"ZechariahTan"},"content":"        this.taskDescription \u003d taskDescription;"},{"lineNumber":5,"author":{"gitId":"ZechariahTan"},"content":"        this.taskType \u003d \u0027T\u0027;"},{"lineNumber":6,"author":{"gitId":"ZechariahTan"},"content":"    }"},{"lineNumber":7,"author":{"gitId":"ZechariahTan"},"content":""},{"lineNumber":8,"author":{"gitId":"ZechariahTan"},"content":"    @Override"},{"lineNumber":9,"author":{"gitId":"ZechariahTan"},"content":"    public String toString() {"},{"lineNumber":10,"author":{"gitId":"ZechariahTan"},"content":"        if (isDone) {"},{"lineNumber":11,"author":{"gitId":"ZechariahTan"},"content":"            return String.format(\"[%c] [X] %s\", this.taskType, this.taskDescription);"},{"lineNumber":12,"author":{"gitId":"ZechariahTan"},"content":"        } else {"},{"lineNumber":13,"author":{"gitId":"ZechariahTan"},"content":"            return String.format(\"[%c] [ ] %s\", this.taskType, this.taskDescription);"},{"lineNumber":14,"author":{"gitId":"ZechariahTan"},"content":"        }"},{"lineNumber":15,"author":{"gitId":"ZechariahTan"},"content":"    }"},{"lineNumber":16,"author":{"gitId":"ZechariahTan"},"content":"}"}],"authorContributionMap":{"ZechariahTan":16}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"ZechariahTan"},"content":"deadline give you up /by never gonna"},{"lineNumber":2,"author":{"gitId":"ZechariahTan"},"content":"deadline let you down /by never gonna"},{"lineNumber":3,"author":{"gitId":"ZechariahTan"},"content":"event rick /at astley"},{"lineNumber":4,"author":{"gitId":"ZechariahTan"},"content":"todo find better test cases"},{"lineNumber":5,"author":{"gitId":"ZechariahTan"},"content":"list"},{"lineNumber":6,"author":{"gitId":"ZechariahTan"},"content":"done 2"},{"lineNumber":7,"author":{"gitId":"ZechariahTan"},"content":"done 4"},{"lineNumber":8,"author":{"gitId":"ZechariahTan"},"content":"list"},{"lineNumber":9,"author":{"gitId":"ZechariahTan"},"content":"done 1"},{"lineNumber":10,"author":{"gitId":"ZechariahTan"},"content":"list"},{"lineNumber":11,"author":{"gitId":"ZechariahTan"},"content":"done"},{"lineNumber":12,"author":{"gitId":"ZechariahTan"},"content":"list"},{"lineNumber":13,"author":{"gitId":"ZechariahTan"},"content":"todo"},{"lineNumber":14,"author":{"gitId":"ZechariahTan"},"content":"deadline death /at NUS"},{"lineNumber":15,"author":{"gitId":"ZechariahTan"},"content":"event graduation /by never"},{"lineNumber":16,"author":{"gitId":"ZechariahTan"},"content":"bye"},{"lineNumber":17,"author":{"gitId":"ZechariahTan"},"content":""}],"authorContributionMap":{"ZechariahTan":17}},{"path":"text-ui-test/runtest.sh","fileType":"sh","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"#!/usr/bin/env bash"},{"lineNumber":2,"author":{"gitId":"-"},"content":""},{"lineNumber":3,"author":{"gitId":"-"},"content":"# create bin directory if it doesn\u0027t exist"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if [ ! -d \"../bin\" ]"},{"lineNumber":5,"author":{"gitId":"-"},"content":"then"},{"lineNumber":6,"author":{"gitId":"-"},"content":"    mkdir ../bin"},{"lineNumber":7,"author":{"gitId":"-"},"content":"fi"},{"lineNumber":8,"author":{"gitId":"-"},"content":""},{"lineNumber":9,"author":{"gitId":"-"},"content":"# delete output from previous run"},{"lineNumber":10,"author":{"gitId":"-"},"content":"if [ -e \"./ACTUAL.TXT\" ]"},{"lineNumber":11,"author":{"gitId":"-"},"content":"then"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    rm ACTUAL.TXT"},{"lineNumber":13,"author":{"gitId":"-"},"content":"fi"},{"lineNumber":14,"author":{"gitId":"-"},"content":""},{"lineNumber":15,"author":{"gitId":"-"},"content":"# compile the code into the bin folder, terminates if error occurred"},{"lineNumber":16,"author":{"gitId":"-"},"content":"if ! javac -cp ../src/main/java -Xlint:none -d ../bin ../src/main/java/*.java"},{"lineNumber":17,"author":{"gitId":"-"},"content":"then"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    echo \"********** BUILD FAILURE **********\""},{"lineNumber":19,"author":{"gitId":"-"},"content":"    exit 1"},{"lineNumber":20,"author":{"gitId":"-"},"content":"fi"},{"lineNumber":21,"author":{"gitId":"-"},"content":""},{"lineNumber":22,"author":{"gitId":"-"},"content":"# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"},{"lineNumber":23,"author":{"gitId":"ZechariahTan"},"content":"java -classpath ../bin/ Main \u003c input.txt \u003e ACTUAL.TXT"},{"lineNumber":24,"author":{"gitId":"-"},"content":""},{"lineNumber":25,"author":{"gitId":"-"},"content":"# convert to UNIX format"},{"lineNumber":26,"author":{"gitId":"-"},"content":"cp EXPECTED.TXT EXPECTED-UNIX.TXT"},{"lineNumber":27,"author":{"gitId":"-"},"content":"dos2unix ACTUAL.TXT EXPECTED-UNIX.TXT"},{"lineNumber":28,"author":{"gitId":"-"},"content":""},{"lineNumber":29,"author":{"gitId":"-"},"content":"# compare the output to the expected output"},{"lineNumber":30,"author":{"gitId":"-"},"content":"diff ACTUAL.TXT EXPECTED-UNIX.TXT"},{"lineNumber":31,"author":{"gitId":"-"},"content":"if [ $? -eq 0 ]"},{"lineNumber":32,"author":{"gitId":"-"},"content":"then"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    echo \"Test result: PASSED\""},{"lineNumber":34,"author":{"gitId":"-"},"content":"    exit 0"},{"lineNumber":35,"author":{"gitId":"-"},"content":"else"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    echo \"Test result: FAILED\""},{"lineNumber":37,"author":{"gitId":"-"},"content":"    exit 1"},{"lineNumber":38,"author":{"gitId":"-"},"content":"fi"}],"authorContributionMap":{"ZechariahTan":1,"-":37}}]
