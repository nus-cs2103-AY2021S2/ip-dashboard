[{"path":"dukeTaskList.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"Juzzanoob"},"content":"D 1   CS2103 iP Project Week 3 (by: 6 Jan 2021 2359 )"},{"lineNumber":2,"author":{"gitId":"Juzzanoob"},"content":"T 0  read book"},{"lineNumber":3,"author":{"gitId":"Juzzanoob"},"content":"D 0  return book (by: 2 Feb 2021 1200 )"}],"authorContributionMap":{"Juzzanoob":3}},{"path":"src/main/java/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Juzzanoob"},"content":"import java.time.LocalDate;"},{"lineNumber":2,"author":{"gitId":"Juzzanoob"},"content":"import java.time.format.DateTimeFormatter;"},{"lineNumber":3,"author":{"gitId":"Juzzanoob"},"content":"import java.time.LocalTime;"},{"lineNumber":4,"author":{"gitId":"Juzzanoob"},"content":""},{"lineNumber":5,"author":{"gitId":"Juzzanoob"},"content":"/**"},{"lineNumber":6,"author":{"gitId":"Juzzanoob"},"content":" * Simulates a task with a deadline."},{"lineNumber":7,"author":{"gitId":"Juzzanoob"},"content":" */"},{"lineNumber":8,"author":{"gitId":"Juzzanoob"},"content":"public class Deadline extends Task {"},{"lineNumber":9,"author":{"gitId":"Juzzanoob"},"content":""},{"lineNumber":10,"author":{"gitId":"Juzzanoob"},"content":"    /** Date of the deadline */"},{"lineNumber":11,"author":{"gitId":"Juzzanoob"},"content":"    private LocalDate deadline;"},{"lineNumber":12,"author":{"gitId":"Juzzanoob"},"content":""},{"lineNumber":13,"author":{"gitId":"Juzzanoob"},"content":"    /** Time of the deadline */"},{"lineNumber":14,"author":{"gitId":"Juzzanoob"},"content":"    private LocalTime deadlineTime;"},{"lineNumber":15,"author":{"gitId":"Juzzanoob"},"content":""},{"lineNumber":16,"author":{"gitId":"Juzzanoob"},"content":"    /**"},{"lineNumber":17,"author":{"gitId":"Juzzanoob"},"content":"     * Creates a new Deadline."},{"lineNumber":18,"author":{"gitId":"Juzzanoob"},"content":"     *"},{"lineNumber":19,"author":{"gitId":"Juzzanoob"},"content":"     * @param details Details of the task."},{"lineNumber":20,"author":{"gitId":"Juzzanoob"},"content":"     * @param deadline Date of the deadline."},{"lineNumber":21,"author":{"gitId":"Juzzanoob"},"content":"     * @param deadlineTime Time of the deadline."},{"lineNumber":22,"author":{"gitId":"Juzzanoob"},"content":"     */"},{"lineNumber":23,"author":{"gitId":"Juzzanoob"},"content":"    public Deadline(String details, LocalDate deadline, LocalTime deadlineTime) {"},{"lineNumber":24,"author":{"gitId":"Juzzanoob"},"content":"        super(details);"},{"lineNumber":25,"author":{"gitId":"Juzzanoob"},"content":"        this.deadline \u003d deadline;"},{"lineNumber":26,"author":{"gitId":"Juzzanoob"},"content":"        this.deadlineTime \u003d deadlineTime;"},{"lineNumber":27,"author":{"gitId":"Juzzanoob"},"content":"    }"},{"lineNumber":28,"author":{"gitId":"Juzzanoob"},"content":""},{"lineNumber":29,"author":{"gitId":"Juzzanoob"},"content":"    /**"},{"lineNumber":30,"author":{"gitId":"Juzzanoob"},"content":"     * Private constructor to complete a deadline."},{"lineNumber":31,"author":{"gitId":"Juzzanoob"},"content":"     *"},{"lineNumber":32,"author":{"gitId":"Juzzanoob"},"content":"     * @param details Details of the task."},{"lineNumber":33,"author":{"gitId":"Juzzanoob"},"content":"     * @param deadline Date of the deadline."},{"lineNumber":34,"author":{"gitId":"Juzzanoob"},"content":"     * @param deadlineTime Time of the deadline."},{"lineNumber":35,"author":{"gitId":"Juzzanoob"},"content":"     * @param indicator Denotes that task is completed regardless of boolean value passed."},{"lineNumber":36,"author":{"gitId":"Juzzanoob"},"content":"     */"},{"lineNumber":37,"author":{"gitId":"Juzzanoob"},"content":"    private Deadline(String details, LocalDate deadline, LocalTime deadlineTime, boolean indicator) {"},{"lineNumber":38,"author":{"gitId":"Juzzanoob"},"content":"        super(details, indicator);"},{"lineNumber":39,"author":{"gitId":"Juzzanoob"},"content":"        this.deadline \u003d deadline;"},{"lineNumber":40,"author":{"gitId":"Juzzanoob"},"content":"        this.deadlineTime \u003d deadlineTime;"},{"lineNumber":41,"author":{"gitId":"Juzzanoob"},"content":"    }"},{"lineNumber":42,"author":{"gitId":"Juzzanoob"},"content":""},{"lineNumber":43,"author":{"gitId":"Juzzanoob"},"content":"    /**"},{"lineNumber":44,"author":{"gitId":"Juzzanoob"},"content":"     * Completes the Deadline."},{"lineNumber":45,"author":{"gitId":"Juzzanoob"},"content":"     *"},{"lineNumber":46,"author":{"gitId":"Juzzanoob"},"content":"     * @return New completed Deadline with the same details."},{"lineNumber":47,"author":{"gitId":"Juzzanoob"},"content":"     */"},{"lineNumber":48,"author":{"gitId":"Juzzanoob"},"content":"    public Deadline completeTask() {"},{"lineNumber":49,"author":{"gitId":"Juzzanoob"},"content":"        return new Deadline(this.getTask_details(), deadline, deadlineTime, true);"},{"lineNumber":50,"author":{"gitId":"Juzzanoob"},"content":"    }"},{"lineNumber":51,"author":{"gitId":"Juzzanoob"},"content":""},{"lineNumber":52,"author":{"gitId":"Juzzanoob"},"content":"    /**"},{"lineNumber":53,"author":{"gitId":"Juzzanoob"},"content":"     * Returns a String describing the Deadline as well as its completion status."},{"lineNumber":54,"author":{"gitId":"Juzzanoob"},"content":"     * @return"},{"lineNumber":55,"author":{"gitId":"Juzzanoob"},"content":"     */"},{"lineNumber":56,"author":{"gitId":"Juzzanoob"},"content":"    public String taskStatus() {"},{"lineNumber":57,"author":{"gitId":"Juzzanoob"},"content":"        if (this.isDone()) {"},{"lineNumber":58,"author":{"gitId":"Juzzanoob"},"content":"            return \"D 1 \""},{"lineNumber":59,"author":{"gitId":"Juzzanoob"},"content":"                    + this.getTask_details()"},{"lineNumber":60,"author":{"gitId":"Juzzanoob"},"content":"                    + \" (by: \" + deadline.format(DateTimeFormatter.ofPattern(\"d MMM yyyy\")) + \" \""},{"lineNumber":61,"author":{"gitId":"Juzzanoob"},"content":"                    + deadlineTime.format(DateTimeFormatter.ofPattern(\"HHmm\")) + \" )\";"},{"lineNumber":62,"author":{"gitId":"Juzzanoob"},"content":"        } else {"},{"lineNumber":63,"author":{"gitId":"Juzzanoob"},"content":"            return \"D 0 \""},{"lineNumber":64,"author":{"gitId":"Juzzanoob"},"content":"                    + this.getTask_details()"},{"lineNumber":65,"author":{"gitId":"Juzzanoob"},"content":"                    + \" (by: \" + deadline.format(DateTimeFormatter.ofPattern(\"d MMM yyyy\")) + \" \""},{"lineNumber":66,"author":{"gitId":"Juzzanoob"},"content":"                    + deadlineTime.format(DateTimeFormatter.ofPattern(\"HHmm\")) + \" )\";"},{"lineNumber":67,"author":{"gitId":"Juzzanoob"},"content":"        }"},{"lineNumber":68,"author":{"gitId":"Juzzanoob"},"content":"    }"},{"lineNumber":69,"author":{"gitId":"Juzzanoob"},"content":"}"}],"authorContributionMap":{"Juzzanoob":69}},{"path":"src/main/java/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Juzzanoob"},"content":"import java.time.LocalDate;"},{"lineNumber":2,"author":{"gitId":"Juzzanoob"},"content":"import java.time.format.DateTimeFormatter;"},{"lineNumber":3,"author":{"gitId":"Juzzanoob"},"content":"import java.time.LocalTime;"},{"lineNumber":4,"author":{"gitId":"Juzzanoob"},"content":""},{"lineNumber":5,"author":{"gitId":"Juzzanoob"},"content":"/**"},{"lineNumber":6,"author":{"gitId":"Juzzanoob"},"content":" * Task List manager that can store task lists."},{"lineNumber":7,"author":{"gitId":"Juzzanoob"},"content":" */"},{"lineNumber":8,"author":{"gitId":"-"},"content":"public class Duke {"},{"lineNumber":9,"author":{"gitId":"Juzzanoob"},"content":""},{"lineNumber":10,"author":{"gitId":"Juzzanoob"},"content":"    /** Storage to handle task list files */"},{"lineNumber":11,"author":{"gitId":"Juzzanoob"},"content":"    private Storage storage;"},{"lineNumber":12,"author":{"gitId":"Juzzanoob"},"content":""},{"lineNumber":13,"author":{"gitId":"Juzzanoob"},"content":"    /** TaskList to hold list of tasks */"},{"lineNumber":14,"author":{"gitId":"Juzzanoob"},"content":"    private TaskList taskList;"},{"lineNumber":15,"author":{"gitId":"Juzzanoob"},"content":""},{"lineNumber":16,"author":{"gitId":"Juzzanoob"},"content":"    /** Ui to display messages for user */"},{"lineNumber":17,"author":{"gitId":"Juzzanoob"},"content":"    private Ui ui;"},{"lineNumber":18,"author":{"gitId":"Juzzanoob"},"content":""},{"lineNumber":19,"author":{"gitId":"Juzzanoob"},"content":"    /**"},{"lineNumber":20,"author":{"gitId":"Juzzanoob"},"content":"     * Creates a new Duke object that contains a list of tasks from file at given path."},{"lineNumber":21,"author":{"gitId":"Juzzanoob"},"content":"     * If no file is found, an empty task list is created instead."},{"lineNumber":22,"author":{"gitId":"Juzzanoob"},"content":"     *"},{"lineNumber":23,"author":{"gitId":"Juzzanoob"},"content":"     * @param filePath Path of the file that contains the lists of tasks."},{"lineNumber":24,"author":{"gitId":"Juzzanoob"},"content":"     */"},{"lineNumber":25,"author":{"gitId":"Juzzanoob"},"content":"    public Duke(String filePath) {"},{"lineNumber":26,"author":{"gitId":"Juzzanoob"},"content":"        ui \u003d new Ui();"},{"lineNumber":27,"author":{"gitId":"Juzzanoob"},"content":"        storage \u003d new Storage(filePath);"},{"lineNumber":28,"author":{"gitId":"Juzzanoob"},"content":"        try {"},{"lineNumber":29,"author":{"gitId":"Juzzanoob"},"content":"            taskList \u003d new TaskList(storage.readFile());"},{"lineNumber":30,"author":{"gitId":"Juzzanoob"},"content":"        } catch (DukeException e) {"},{"lineNumber":31,"author":{"gitId":"Juzzanoob"},"content":"            taskList \u003d new TaskList();"},{"lineNumber":32,"author":{"gitId":"Juzzanoob"},"content":"        }"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":34,"author":{"gitId":"Juzzanoob"},"content":""},{"lineNumber":35,"author":{"gitId":"Juzzanoob"},"content":"    /**"},{"lineNumber":36,"author":{"gitId":"Juzzanoob"},"content":"     * Runs the program."},{"lineNumber":37,"author":{"gitId":"Juzzanoob"},"content":"     *"},{"lineNumber":38,"author":{"gitId":"Juzzanoob"},"content":"     * @throws DukeException If user input is incorrect."},{"lineNumber":39,"author":{"gitId":"Juzzanoob"},"content":"     */"},{"lineNumber":40,"author":{"gitId":"Juzzanoob"},"content":"    public void run() throws DukeException {"},{"lineNumber":41,"author":{"gitId":"Juzzanoob"},"content":""},{"lineNumber":42,"author":{"gitId":"Juzzanoob"},"content":"        ui.displayWelcomeMessage();"},{"lineNumber":43,"author":{"gitId":"Juzzanoob"},"content":""},{"lineNumber":44,"author":{"gitId":"Juzzanoob"},"content":"        FastIO reader \u003d new FastIO();"},{"lineNumber":45,"author":{"gitId":"Juzzanoob"},"content":"        String input \u003d reader.nextLine();"},{"lineNumber":46,"author":{"gitId":"Juzzanoob"},"content":"        Parser parser \u003d new Parser(input);"},{"lineNumber":47,"author":{"gitId":"Juzzanoob"},"content":""},{"lineNumber":48,"author":{"gitId":"Juzzanoob"},"content":"        try {"},{"lineNumber":49,"author":{"gitId":"Juzzanoob"},"content":"            while (true) {"},{"lineNumber":50,"author":{"gitId":"Juzzanoob"},"content":""},{"lineNumber":51,"author":{"gitId":"Juzzanoob"},"content":"                String command \u003d parser.getCommand();"},{"lineNumber":52,"author":{"gitId":"Juzzanoob"},"content":""},{"lineNumber":53,"author":{"gitId":"Juzzanoob"},"content":"                // user exits the program"},{"lineNumber":54,"author":{"gitId":"Juzzanoob"},"content":"                if (command.equals(\"bye\")) {"},{"lineNumber":55,"author":{"gitId":"Juzzanoob"},"content":"                    ui.displayClosingMessage();"},{"lineNumber":56,"author":{"gitId":"Juzzanoob"},"content":"                    break;"},{"lineNumber":57,"author":{"gitId":"Juzzanoob"},"content":""},{"lineNumber":58,"author":{"gitId":"Juzzanoob"},"content":"                    // user wants list of tasks"},{"lineNumber":59,"author":{"gitId":"Juzzanoob"},"content":"                } else if (command.equals(\"list\")) {"},{"lineNumber":60,"author":{"gitId":"Juzzanoob"},"content":"                    ui.displayListMessage(taskList);"},{"lineNumber":61,"author":{"gitId":"Juzzanoob"},"content":"                    parser \u003d parser.newInput(reader.nextLine());"},{"lineNumber":62,"author":{"gitId":"Juzzanoob"},"content":""},{"lineNumber":63,"author":{"gitId":"Juzzanoob"},"content":"                    // user wants to complete a task"},{"lineNumber":64,"author":{"gitId":"Juzzanoob"},"content":"                } else if (command.equals(\"done\")) {"},{"lineNumber":65,"author":{"gitId":"Juzzanoob"},"content":"                    int index \u003d parser.getIndexToModify();"},{"lineNumber":66,"author":{"gitId":"Juzzanoob"},"content":"                    taskList \u003d taskList.completeTask(index);"},{"lineNumber":67,"author":{"gitId":"Juzzanoob"},"content":"                    ui.displayTaskCompleted(taskList.getTask(index));"},{"lineNumber":68,"author":{"gitId":"Juzzanoob"},"content":"                    storage.writeFile(taskList);"},{"lineNumber":69,"author":{"gitId":"Juzzanoob"},"content":"                    parser \u003d parser.newInput(reader.nextLine());"},{"lineNumber":70,"author":{"gitId":"Juzzanoob"},"content":""},{"lineNumber":71,"author":{"gitId":"Juzzanoob"},"content":"                    // user wants to delete a task"},{"lineNumber":72,"author":{"gitId":"Juzzanoob"},"content":"                } else if (command.equals(\"delete\")) {"},{"lineNumber":73,"author":{"gitId":"Juzzanoob"},"content":"                    int index \u003d parser.getIndexToModify();"},{"lineNumber":74,"author":{"gitId":"Juzzanoob"},"content":"                    Task task \u003d taskList.getTask(index);"},{"lineNumber":75,"author":{"gitId":"Juzzanoob"},"content":"                    taskList \u003d taskList.deleteTask(index);"},{"lineNumber":76,"author":{"gitId":"Juzzanoob"},"content":"                    ui.displayTaskDeleted(task, taskList);"},{"lineNumber":77,"author":{"gitId":"Juzzanoob"},"content":"                    storage.writeFile(taskList);"},{"lineNumber":78,"author":{"gitId":"Juzzanoob"},"content":"                    parser \u003d parser.newInput(reader.nextLine());"},{"lineNumber":79,"author":{"gitId":"Juzzanoob"},"content":""},{"lineNumber":80,"author":{"gitId":"Juzzanoob"},"content":"                    // user wants to add a ToDo"},{"lineNumber":81,"author":{"gitId":"Juzzanoob"},"content":"                } else if (command.equals(\"todo\")) {"},{"lineNumber":82,"author":{"gitId":"Juzzanoob"},"content":"                    String taskDesc \u003d parser.getTaskDescription();"},{"lineNumber":83,"author":{"gitId":"Juzzanoob"},"content":"                    ToDo newTask \u003d new ToDo(taskDesc);"},{"lineNumber":84,"author":{"gitId":"Juzzanoob"},"content":"                    taskList \u003d taskList.addTask(newTask);"},{"lineNumber":85,"author":{"gitId":"Juzzanoob"},"content":"                    ui.displayTaskAdded(newTask, taskList);"},{"lineNumber":86,"author":{"gitId":"Juzzanoob"},"content":"                    storage.writeFile(taskList);"},{"lineNumber":87,"author":{"gitId":"Juzzanoob"},"content":"                    parser \u003d parser.newInput(reader.nextLine());"},{"lineNumber":88,"author":{"gitId":"Juzzanoob"},"content":""},{"lineNumber":89,"author":{"gitId":"Juzzanoob"},"content":"                    // user wants to add a Deadline"},{"lineNumber":90,"author":{"gitId":"Juzzanoob"},"content":"                } else if (command.equals(\"deadline\")) {"},{"lineNumber":91,"author":{"gitId":"Juzzanoob"},"content":"                    String taskDesc \u003d parser.getTaskDescription();"},{"lineNumber":92,"author":{"gitId":"Juzzanoob"},"content":"                    LocalDate date \u003d LocalDate.parse(parser.getDate(),"},{"lineNumber":93,"author":{"gitId":"Juzzanoob"},"content":"                            DateTimeFormatter.ofPattern(\"d/MM/yyyy\"));"},{"lineNumber":94,"author":{"gitId":"Juzzanoob"},"content":"                    LocalTime time \u003d LocalTime.parse(parser.getTime(),"},{"lineNumber":95,"author":{"gitId":"Juzzanoob"},"content":"                            DateTimeFormatter.ofPattern(\"HHmm\"));"},{"lineNumber":96,"author":{"gitId":"Juzzanoob"},"content":""},{"lineNumber":97,"author":{"gitId":"Juzzanoob"},"content":"                    Deadline newTask \u003d new Deadline(taskDesc, date, time);"},{"lineNumber":98,"author":{"gitId":"Juzzanoob"},"content":"                    taskList \u003d taskList.addTask(newTask);"},{"lineNumber":99,"author":{"gitId":"Juzzanoob"},"content":"                    ui.displayTaskAdded(newTask, taskList);"},{"lineNumber":100,"author":{"gitId":"Juzzanoob"},"content":"                    storage.writeFile(taskList);"},{"lineNumber":101,"author":{"gitId":"Juzzanoob"},"content":"                    parser \u003d parser.newInput(reader.nextLine());"},{"lineNumber":102,"author":{"gitId":"Juzzanoob"},"content":""},{"lineNumber":103,"author":{"gitId":"Juzzanoob"},"content":"                    // user wants to add an Event"},{"lineNumber":104,"author":{"gitId":"Juzzanoob"},"content":"                } else if (command.equals(\"event\")) {"},{"lineNumber":105,"author":{"gitId":"Juzzanoob"},"content":"                    String taskDesc \u003d parser.getTaskDescription();"},{"lineNumber":106,"author":{"gitId":"Juzzanoob"},"content":"                    LocalDate date \u003d LocalDate.parse(parser.getDate(),"},{"lineNumber":107,"author":{"gitId":"Juzzanoob"},"content":"                            DateTimeFormatter.ofPattern(\"d/MM/yyyy\"));"},{"lineNumber":108,"author":{"gitId":"Juzzanoob"},"content":"                    LocalTime time \u003d LocalTime.parse(parser.getTime(),"},{"lineNumber":109,"author":{"gitId":"Juzzanoob"},"content":"                            DateTimeFormatter.ofPattern(\"HHmm\"));"},{"lineNumber":110,"author":{"gitId":"Juzzanoob"},"content":""},{"lineNumber":111,"author":{"gitId":"Juzzanoob"},"content":"                    Event newTask \u003d new Event(taskDesc, date, time);"},{"lineNumber":112,"author":{"gitId":"Juzzanoob"},"content":"                    taskList \u003d taskList.addTask(newTask);"},{"lineNumber":113,"author":{"gitId":"Juzzanoob"},"content":"                    ui.displayTaskAdded(newTask, taskList);"},{"lineNumber":114,"author":{"gitId":"Juzzanoob"},"content":"                    storage.writeFile(taskList);"},{"lineNumber":115,"author":{"gitId":"Juzzanoob"},"content":"                    parser \u003d parser.newInput(reader.nextLine());"},{"lineNumber":116,"author":{"gitId":"Juzzanoob"},"content":""},{"lineNumber":117,"author":{"gitId":"Juzzanoob"},"content":"                // user wants to find tasks using a keyword"},{"lineNumber":118,"author":{"gitId":"Juzzanoob"},"content":"                } else if (command.equals(\"find\")) {"},{"lineNumber":119,"author":{"gitId":"Juzzanoob"},"content":"                    String keyword \u003d parser.getKeyword();"},{"lineNumber":120,"author":{"gitId":"Juzzanoob"},"content":"                    ui.displayTaskSearch(keyword, taskList);"},{"lineNumber":121,"author":{"gitId":"Juzzanoob"},"content":"                    parser \u003d parser.newInput(reader.nextLine());"},{"lineNumber":122,"author":{"gitId":"Juzzanoob"},"content":""},{"lineNumber":123,"author":{"gitId":"Juzzanoob"},"content":"                } else {"},{"lineNumber":124,"author":{"gitId":"Juzzanoob"},"content":"                    throw new DukeException(\"unknown\");"},{"lineNumber":125,"author":{"gitId":"Juzzanoob"},"content":"                }"},{"lineNumber":126,"author":{"gitId":"Juzzanoob"},"content":"            }"},{"lineNumber":127,"author":{"gitId":"Juzzanoob"},"content":""},{"lineNumber":128,"author":{"gitId":"Juzzanoob"},"content":"        } catch (DukeException e) {"},{"lineNumber":129,"author":{"gitId":"Juzzanoob"},"content":"            System.out.println(e.errorMessage());"},{"lineNumber":130,"author":{"gitId":"Juzzanoob"},"content":""},{"lineNumber":131,"author":{"gitId":"Juzzanoob"},"content":"        } finally {"},{"lineNumber":132,"author":{"gitId":"Juzzanoob"},"content":"            reader.close();"},{"lineNumber":133,"author":{"gitId":"Juzzanoob"},"content":"        }"},{"lineNumber":134,"author":{"gitId":"Juzzanoob"},"content":"    }"},{"lineNumber":135,"author":{"gitId":"Juzzanoob"},"content":""},{"lineNumber":136,"author":{"gitId":"Juzzanoob"},"content":"    /**"},{"lineNumber":137,"author":{"gitId":"Juzzanoob"},"content":"     * Main program to be run."},{"lineNumber":138,"author":{"gitId":"Juzzanoob"},"content":"     *"},{"lineNumber":139,"author":{"gitId":"Juzzanoob"},"content":"     * @param args Input."},{"lineNumber":140,"author":{"gitId":"Juzzanoob"},"content":"     * @throws DukeException If user input is incorrect."},{"lineNumber":141,"author":{"gitId":"Juzzanoob"},"content":"     */"},{"lineNumber":142,"author":{"gitId":"Juzzanoob"},"content":"    public static void main(String[] args) throws DukeException {"},{"lineNumber":143,"author":{"gitId":"Juzzanoob"},"content":"        new Duke(\"dukeTaskList.txt\").run();"},{"lineNumber":144,"author":{"gitId":"Juzzanoob"},"content":"    }"},{"lineNumber":145,"author":{"gitId":"Juzzanoob"},"content":""},{"lineNumber":146,"author":{"gitId":"-"},"content":"}"},{"lineNumber":147,"author":{"gitId":"Juzzanoob"},"content":""}],"authorContributionMap":{"Juzzanoob":144,"-":3}},{"path":"src/main/java/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Juzzanoob"},"content":"/**"},{"lineNumber":2,"author":{"gitId":"Juzzanoob"},"content":" * Exception class to denote errors arising from incorrect user input or"},{"lineNumber":3,"author":{"gitId":"Juzzanoob"},"content":" * failed task list file reading."},{"lineNumber":4,"author":{"gitId":"Juzzanoob"},"content":" */"},{"lineNumber":5,"author":{"gitId":"Juzzanoob"},"content":"public class DukeException extends Exception {"},{"lineNumber":6,"author":{"gitId":"Juzzanoob"},"content":""},{"lineNumber":7,"author":{"gitId":"Juzzanoob"},"content":"    /** States if the error is unknown */"},{"lineNumber":8,"author":{"gitId":"Juzzanoob"},"content":"    private boolean unknown;"},{"lineNumber":9,"author":{"gitId":"Juzzanoob"},"content":""},{"lineNumber":10,"author":{"gitId":"Juzzanoob"},"content":"    /**"},{"lineNumber":11,"author":{"gitId":"Juzzanoob"},"content":"     * Creates new DukeException with a description."},{"lineNumber":12,"author":{"gitId":"Juzzanoob"},"content":"     *"},{"lineNumber":13,"author":{"gitId":"Juzzanoob"},"content":"     * @param message Describes the error."},{"lineNumber":14,"author":{"gitId":"Juzzanoob"},"content":"     */"},{"lineNumber":15,"author":{"gitId":"Juzzanoob"},"content":"    public DukeException(String message) {"},{"lineNumber":16,"author":{"gitId":"Juzzanoob"},"content":"        super(message);"},{"lineNumber":17,"author":{"gitId":"Juzzanoob"},"content":"        if (message.equals(\"unknown\")) {"},{"lineNumber":18,"author":{"gitId":"Juzzanoob"},"content":"            unknown \u003d true;"},{"lineNumber":19,"author":{"gitId":"Juzzanoob"},"content":"        } else {"},{"lineNumber":20,"author":{"gitId":"Juzzanoob"},"content":"            unknown \u003d false;"},{"lineNumber":21,"author":{"gitId":"Juzzanoob"},"content":"        }"},{"lineNumber":22,"author":{"gitId":"Juzzanoob"},"content":"    }"},{"lineNumber":23,"author":{"gitId":"Juzzanoob"},"content":""},{"lineNumber":24,"author":{"gitId":"Juzzanoob"},"content":"    /**"},{"lineNumber":25,"author":{"gitId":"Juzzanoob"},"content":"     * Returns a String describing the error to the user."},{"lineNumber":26,"author":{"gitId":"Juzzanoob"},"content":"     *"},{"lineNumber":27,"author":{"gitId":"Juzzanoob"},"content":"     * @return String describing the error."},{"lineNumber":28,"author":{"gitId":"Juzzanoob"},"content":"     */"},{"lineNumber":29,"author":{"gitId":"Juzzanoob"},"content":"    public String errorMessage() {"},{"lineNumber":30,"author":{"gitId":"Juzzanoob"},"content":"        if (unknown) {"},{"lineNumber":31,"author":{"gitId":"Juzzanoob"},"content":"            return \"☹ OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\";"},{"lineNumber":32,"author":{"gitId":"Juzzanoob"},"content":"        } else if (this.getMessage().equals(\"loading error\")) {"},{"lineNumber":33,"author":{"gitId":"Juzzanoob"},"content":"            return \"☹ OOPS!!! No file found.\";"},{"lineNumber":34,"author":{"gitId":"Juzzanoob"},"content":"        } else if (this.getMessage().equals(\"delete\")) {"},{"lineNumber":35,"author":{"gitId":"Juzzanoob"},"content":"            return \"☹ OOPS!!! You must state which task to delete.\";"},{"lineNumber":36,"author":{"gitId":"Juzzanoob"},"content":"        } else if (this.getMessage().equals(\"search\")) {"},{"lineNumber":37,"author":{"gitId":"Juzzanoob"},"content":"            return \"☹ OOPS!!! You must give a keyword.\";"},{"lineNumber":38,"author":{"gitId":"Juzzanoob"},"content":"        } else {"},{"lineNumber":39,"author":{"gitId":"Juzzanoob"},"content":"            return \"☹ OOPS!!! The description of a \" + this.getMessage() + \" cannot be empty.\";"},{"lineNumber":40,"author":{"gitId":"Juzzanoob"},"content":"        }"},{"lineNumber":41,"author":{"gitId":"Juzzanoob"},"content":"    }"},{"lineNumber":42,"author":{"gitId":"Juzzanoob"},"content":"}"}],"authorContributionMap":{"Juzzanoob":42}},{"path":"src/main/java/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Juzzanoob"},"content":"import java.time.LocalDate;"},{"lineNumber":2,"author":{"gitId":"Juzzanoob"},"content":"import java.time.format.DateTimeFormatter;"},{"lineNumber":3,"author":{"gitId":"Juzzanoob"},"content":"import java.time.LocalTime;"},{"lineNumber":4,"author":{"gitId":"Juzzanoob"},"content":""},{"lineNumber":5,"author":{"gitId":"Juzzanoob"},"content":"/**"},{"lineNumber":6,"author":{"gitId":"Juzzanoob"},"content":" * Simulates an event that occurs at a specific date and time."},{"lineNumber":7,"author":{"gitId":"Juzzanoob"},"content":" */"},{"lineNumber":8,"author":{"gitId":"Juzzanoob"},"content":"public class Event extends Task {"},{"lineNumber":9,"author":{"gitId":"Juzzanoob"},"content":""},{"lineNumber":10,"author":{"gitId":"Juzzanoob"},"content":"    /** Date of the event */"},{"lineNumber":11,"author":{"gitId":"Juzzanoob"},"content":"    private LocalDate date;"},{"lineNumber":12,"author":{"gitId":"Juzzanoob"},"content":""},{"lineNumber":13,"author":{"gitId":"Juzzanoob"},"content":"    /** Time of the event */"},{"lineNumber":14,"author":{"gitId":"Juzzanoob"},"content":"    private LocalTime time;"},{"lineNumber":15,"author":{"gitId":"Juzzanoob"},"content":""},{"lineNumber":16,"author":{"gitId":"Juzzanoob"},"content":"    /**"},{"lineNumber":17,"author":{"gitId":"Juzzanoob"},"content":"     * Creates a new Event."},{"lineNumber":18,"author":{"gitId":"Juzzanoob"},"content":"     *"},{"lineNumber":19,"author":{"gitId":"Juzzanoob"},"content":"     * @param details Details of the event."},{"lineNumber":20,"author":{"gitId":"Juzzanoob"},"content":"     * @param date Date of the event."},{"lineNumber":21,"author":{"gitId":"Juzzanoob"},"content":"     * @param time Time of the event."},{"lineNumber":22,"author":{"gitId":"Juzzanoob"},"content":"     */"},{"lineNumber":23,"author":{"gitId":"Juzzanoob"},"content":"    public Event(String details, LocalDate date, LocalTime time) {"},{"lineNumber":24,"author":{"gitId":"Juzzanoob"},"content":"        super(details);"},{"lineNumber":25,"author":{"gitId":"Juzzanoob"},"content":"        this.date \u003d date;"},{"lineNumber":26,"author":{"gitId":"Juzzanoob"},"content":"        this.time \u003d time;"},{"lineNumber":27,"author":{"gitId":"Juzzanoob"},"content":"    }"},{"lineNumber":28,"author":{"gitId":"Juzzanoob"},"content":""},{"lineNumber":29,"author":{"gitId":"Juzzanoob"},"content":"    /**"},{"lineNumber":30,"author":{"gitId":"Juzzanoob"},"content":"     * Private constructor to complete an Event."},{"lineNumber":31,"author":{"gitId":"Juzzanoob"},"content":"     *"},{"lineNumber":32,"author":{"gitId":"Juzzanoob"},"content":"     * @param details Details of the event."},{"lineNumber":33,"author":{"gitId":"Juzzanoob"},"content":"     * @param date Date of the event."},{"lineNumber":34,"author":{"gitId":"Juzzanoob"},"content":"     * @param time Time of the event."},{"lineNumber":35,"author":{"gitId":"Juzzanoob"},"content":"     * @param indicator Denotes that event is completed regardless of boolean value passed."},{"lineNumber":36,"author":{"gitId":"Juzzanoob"},"content":"     */"},{"lineNumber":37,"author":{"gitId":"Juzzanoob"},"content":"    private Event(String details, LocalDate date, LocalTime time, boolean indicator) {"},{"lineNumber":38,"author":{"gitId":"Juzzanoob"},"content":"        super(details, indicator);"},{"lineNumber":39,"author":{"gitId":"Juzzanoob"},"content":"        this.date \u003d date;"},{"lineNumber":40,"author":{"gitId":"Juzzanoob"},"content":"        this.time \u003d time;"},{"lineNumber":41,"author":{"gitId":"Juzzanoob"},"content":"    }"},{"lineNumber":42,"author":{"gitId":"Juzzanoob"},"content":""},{"lineNumber":43,"author":{"gitId":"Juzzanoob"},"content":"    /**"},{"lineNumber":44,"author":{"gitId":"Juzzanoob"},"content":"     * Completes the event."},{"lineNumber":45,"author":{"gitId":"Juzzanoob"},"content":"     *"},{"lineNumber":46,"author":{"gitId":"Juzzanoob"},"content":"     * @return New completed Event with the same details."},{"lineNumber":47,"author":{"gitId":"Juzzanoob"},"content":"     */"},{"lineNumber":48,"author":{"gitId":"Juzzanoob"},"content":"    public Event completeTask() {"},{"lineNumber":49,"author":{"gitId":"Juzzanoob"},"content":"        return new Event(this.getTask_details(), date, time,true);"},{"lineNumber":50,"author":{"gitId":"Juzzanoob"},"content":"    }"},{"lineNumber":51,"author":{"gitId":"Juzzanoob"},"content":""},{"lineNumber":52,"author":{"gitId":"Juzzanoob"},"content":"    /**"},{"lineNumber":53,"author":{"gitId":"Juzzanoob"},"content":"     * Returns a String describing the Event as well as its completion status."},{"lineNumber":54,"author":{"gitId":"Juzzanoob"},"content":"     * @return"},{"lineNumber":55,"author":{"gitId":"Juzzanoob"},"content":"     */"},{"lineNumber":56,"author":{"gitId":"Juzzanoob"},"content":"    public String taskStatus() {"},{"lineNumber":57,"author":{"gitId":"Juzzanoob"},"content":"        if (this.isDone()) {"},{"lineNumber":58,"author":{"gitId":"Juzzanoob"},"content":"            return \"E 1 \""},{"lineNumber":59,"author":{"gitId":"Juzzanoob"},"content":"                    + this.getTask_details()"},{"lineNumber":60,"author":{"gitId":"Juzzanoob"},"content":"                    + \" (on: \" + date.format(DateTimeFormatter.ofPattern(\"d MMM yyyy\")) + \" \""},{"lineNumber":61,"author":{"gitId":"Juzzanoob"},"content":"                    + time.format(DateTimeFormatter.ofPattern(\"HHmm\")) + \" )\";"},{"lineNumber":62,"author":{"gitId":"Juzzanoob"},"content":"        } else {"},{"lineNumber":63,"author":{"gitId":"Juzzanoob"},"content":"            return \"E 0 \""},{"lineNumber":64,"author":{"gitId":"Juzzanoob"},"content":"                    + this.getTask_details()"},{"lineNumber":65,"author":{"gitId":"Juzzanoob"},"content":"                    + \" (on: \" + date.format(DateTimeFormatter.ofPattern(\"d MMM yyyy\")) + \" \""},{"lineNumber":66,"author":{"gitId":"Juzzanoob"},"content":"                    + time.format(DateTimeFormatter.ofPattern(\"HHmm\")) + \" )\";"},{"lineNumber":67,"author":{"gitId":"Juzzanoob"},"content":"        }"},{"lineNumber":68,"author":{"gitId":"Juzzanoob"},"content":"    }"},{"lineNumber":69,"author":{"gitId":"Juzzanoob"},"content":"}"}],"authorContributionMap":{"Juzzanoob":69}},{"path":"src/main/java/FastIO.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Juzzanoob"},"content":"import java.io.*;"},{"lineNumber":2,"author":{"gitId":"Juzzanoob"},"content":"import java.util.*;"},{"lineNumber":3,"author":{"gitId":"Juzzanoob"},"content":""},{"lineNumber":4,"author":{"gitId":"Juzzanoob"},"content":"/**"},{"lineNumber":5,"author":{"gitId":"Juzzanoob"},"content":" * Eases the use of Buffered Reader for faster I/O operations."},{"lineNumber":6,"author":{"gitId":"Juzzanoob"},"content":" * @source https://www.geeksforgeeks.org/fast-io-in-java-in-competitive-programming/"},{"lineNumber":7,"author":{"gitId":"Juzzanoob"},"content":" */"},{"lineNumber":8,"author":{"gitId":"Juzzanoob"},"content":"class FastIO extends PrintWriter {"},{"lineNumber":9,"author":{"gitId":"Juzzanoob"},"content":""},{"lineNumber":10,"author":{"gitId":"Juzzanoob"},"content":"    /** BufferedReader object to read input */"},{"lineNumber":11,"author":{"gitId":"Juzzanoob"},"content":"    BufferedReader br;"},{"lineNumber":12,"author":{"gitId":"Juzzanoob"},"content":""},{"lineNumber":13,"author":{"gitId":"Juzzanoob"},"content":"    /** Indicates String */"},{"lineNumber":14,"author":{"gitId":"Juzzanoob"},"content":"    StringTokenizer st;"},{"lineNumber":15,"author":{"gitId":"Juzzanoob"},"content":""},{"lineNumber":16,"author":{"gitId":"Juzzanoob"},"content":"    /**"},{"lineNumber":17,"author":{"gitId":"Juzzanoob"},"content":"     * Creates new FastIO object to read input."},{"lineNumber":18,"author":{"gitId":"Juzzanoob"},"content":"     */"},{"lineNumber":19,"author":{"gitId":"Juzzanoob"},"content":"    public FastIO() {"},{"lineNumber":20,"author":{"gitId":"Juzzanoob"},"content":"        super(new BufferedOutputStream(System.out)); "},{"lineNumber":21,"author":{"gitId":"Juzzanoob"},"content":"        br \u003d new BufferedReader(new InputStreamReader(System.in));"},{"lineNumber":22,"author":{"gitId":"Juzzanoob"},"content":"    }"},{"lineNumber":23,"author":{"gitId":"Juzzanoob"},"content":""},{"lineNumber":24,"author":{"gitId":"Juzzanoob"},"content":"    /**"},{"lineNumber":25,"author":{"gitId":"Juzzanoob"},"content":"     * Reads next input as a String."},{"lineNumber":26,"author":{"gitId":"Juzzanoob"},"content":"     *"},{"lineNumber":27,"author":{"gitId":"Juzzanoob"},"content":"     * @return String of next input."},{"lineNumber":28,"author":{"gitId":"Juzzanoob"},"content":"     */"},{"lineNumber":29,"author":{"gitId":"Juzzanoob"},"content":"    public String next() {"},{"lineNumber":30,"author":{"gitId":"Juzzanoob"},"content":"        while (st \u003d\u003d null || !st.hasMoreElements()) {"},{"lineNumber":31,"author":{"gitId":"Juzzanoob"},"content":"            try {"},{"lineNumber":32,"author":{"gitId":"Juzzanoob"},"content":"                st \u003d new StringTokenizer(br.readLine()); "},{"lineNumber":33,"author":{"gitId":"Juzzanoob"},"content":"            } catch (IOException e) {"},{"lineNumber":34,"author":{"gitId":"Juzzanoob"},"content":"                e.printStackTrace(); "},{"lineNumber":35,"author":{"gitId":"Juzzanoob"},"content":"            } "},{"lineNumber":36,"author":{"gitId":"Juzzanoob"},"content":"        }"},{"lineNumber":37,"author":{"gitId":"Juzzanoob"},"content":"        return st.nextToken(); "},{"lineNumber":38,"author":{"gitId":"Juzzanoob"},"content":"    }"},{"lineNumber":39,"author":{"gitId":"Juzzanoob"},"content":""},{"lineNumber":40,"author":{"gitId":"Juzzanoob"},"content":"    /**"},{"lineNumber":41,"author":{"gitId":"Juzzanoob"},"content":"     * Reads next input as an Integer."},{"lineNumber":42,"author":{"gitId":"Juzzanoob"},"content":"     *"},{"lineNumber":43,"author":{"gitId":"Juzzanoob"},"content":"     * @return Integer of the next input."},{"lineNumber":44,"author":{"gitId":"Juzzanoob"},"content":"     */"},{"lineNumber":45,"author":{"gitId":"Juzzanoob"},"content":"    int nextInt() {"},{"lineNumber":46,"author":{"gitId":"Juzzanoob"},"content":"        return Integer.parseInt(next()); "},{"lineNumber":47,"author":{"gitId":"Juzzanoob"},"content":"    }"},{"lineNumber":48,"author":{"gitId":"Juzzanoob"},"content":""},{"lineNumber":49,"author":{"gitId":"Juzzanoob"},"content":"    /**"},{"lineNumber":50,"author":{"gitId":"Juzzanoob"},"content":"     * Reads next input as a Long."},{"lineNumber":51,"author":{"gitId":"Juzzanoob"},"content":"     *"},{"lineNumber":52,"author":{"gitId":"Juzzanoob"},"content":"     * @return Long of the next input."},{"lineNumber":53,"author":{"gitId":"Juzzanoob"},"content":"     */"},{"lineNumber":54,"author":{"gitId":"Juzzanoob"},"content":"    long nextLong() {"},{"lineNumber":55,"author":{"gitId":"Juzzanoob"},"content":"        return Long.parseLong(next()); "},{"lineNumber":56,"author":{"gitId":"Juzzanoob"},"content":"    }"},{"lineNumber":57,"author":{"gitId":"Juzzanoob"},"content":""},{"lineNumber":58,"author":{"gitId":"Juzzanoob"},"content":"    /**"},{"lineNumber":59,"author":{"gitId":"Juzzanoob"},"content":"     * Reads next input as a Double."},{"lineNumber":60,"author":{"gitId":"Juzzanoob"},"content":"     *"},{"lineNumber":61,"author":{"gitId":"Juzzanoob"},"content":"     * @return Double of the next input."},{"lineNumber":62,"author":{"gitId":"Juzzanoob"},"content":"     */"},{"lineNumber":63,"author":{"gitId":"Juzzanoob"},"content":"    double nextDouble() {"},{"lineNumber":64,"author":{"gitId":"Juzzanoob"},"content":"        return Double.parseDouble(next()); "},{"lineNumber":65,"author":{"gitId":"Juzzanoob"},"content":"    }"},{"lineNumber":66,"author":{"gitId":"Juzzanoob"},"content":""},{"lineNumber":67,"author":{"gitId":"Juzzanoob"},"content":"    /**"},{"lineNumber":68,"author":{"gitId":"Juzzanoob"},"content":"     * Reads the next line of input as a String."},{"lineNumber":69,"author":{"gitId":"Juzzanoob"},"content":"     *"},{"lineNumber":70,"author":{"gitId":"Juzzanoob"},"content":"     * @return String consisting of next line of input."},{"lineNumber":71,"author":{"gitId":"Juzzanoob"},"content":"     */"},{"lineNumber":72,"author":{"gitId":"Juzzanoob"},"content":"    String nextLine() {"},{"lineNumber":73,"author":{"gitId":"Juzzanoob"},"content":"        String str \u003d \"\"; "},{"lineNumber":74,"author":{"gitId":"Juzzanoob"},"content":"        try {"},{"lineNumber":75,"author":{"gitId":"Juzzanoob"},"content":"            str \u003d br.readLine(); "},{"lineNumber":76,"author":{"gitId":"Juzzanoob"},"content":"        } catch (IOException e) {"},{"lineNumber":77,"author":{"gitId":"Juzzanoob"},"content":"            e.printStackTrace(); "},{"lineNumber":78,"author":{"gitId":"Juzzanoob"},"content":"        } "},{"lineNumber":79,"author":{"gitId":"Juzzanoob"},"content":"        return str; "},{"lineNumber":80,"author":{"gitId":"Juzzanoob"},"content":"    } "},{"lineNumber":81,"author":{"gitId":"Juzzanoob"},"content":"}"},{"lineNumber":82,"author":{"gitId":"Juzzanoob"},"content":""}],"authorContributionMap":{"Juzzanoob":82}},{"path":"src/main/java/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Juzzanoob"},"content":"/**"},{"lineNumber":2,"author":{"gitId":"Juzzanoob"},"content":" * Parses user input."},{"lineNumber":3,"author":{"gitId":"Juzzanoob"},"content":" */"},{"lineNumber":4,"author":{"gitId":"Juzzanoob"},"content":"public class Parser {"},{"lineNumber":5,"author":{"gitId":"Juzzanoob"},"content":""},{"lineNumber":6,"author":{"gitId":"Juzzanoob"},"content":"    /** String array of user input */"},{"lineNumber":7,"author":{"gitId":"Juzzanoob"},"content":"    private String[] input;"},{"lineNumber":8,"author":{"gitId":"Juzzanoob"},"content":""},{"lineNumber":9,"author":{"gitId":"Juzzanoob"},"content":"    /**"},{"lineNumber":10,"author":{"gitId":"Juzzanoob"},"content":"     * Creates Parser object from given String input."},{"lineNumber":11,"author":{"gitId":"Juzzanoob"},"content":"     *"},{"lineNumber":12,"author":{"gitId":"Juzzanoob"},"content":"     * @param input String input to be parsed."},{"lineNumber":13,"author":{"gitId":"Juzzanoob"},"content":"     */"},{"lineNumber":14,"author":{"gitId":"Juzzanoob"},"content":"    public Parser(String input) {"},{"lineNumber":15,"author":{"gitId":"Juzzanoob"},"content":"        this.input \u003d input.split(\" \");"},{"lineNumber":16,"author":{"gitId":"Juzzanoob"},"content":"    }"},{"lineNumber":17,"author":{"gitId":"Juzzanoob"},"content":""},{"lineNumber":18,"author":{"gitId":"Juzzanoob"},"content":"    /**"},{"lineNumber":19,"author":{"gitId":"Juzzanoob"},"content":"     * Returns a new Parser object with the new given String input."},{"lineNumber":20,"author":{"gitId":"Juzzanoob"},"content":"     *"},{"lineNumber":21,"author":{"gitId":"Juzzanoob"},"content":"     * @param input New String input to be parsed."},{"lineNumber":22,"author":{"gitId":"Juzzanoob"},"content":"     * @return New Parser object with given String input."},{"lineNumber":23,"author":{"gitId":"Juzzanoob"},"content":"     */"},{"lineNumber":24,"author":{"gitId":"Juzzanoob"},"content":"    public Parser newInput(String input) {"},{"lineNumber":25,"author":{"gitId":"Juzzanoob"},"content":"        return new Parser(input);"},{"lineNumber":26,"author":{"gitId":"Juzzanoob"},"content":"    }"},{"lineNumber":27,"author":{"gitId":"Juzzanoob"},"content":""},{"lineNumber":28,"author":{"gitId":"Juzzanoob"},"content":"    /**"},{"lineNumber":29,"author":{"gitId":"Juzzanoob"},"content":"     * Returns first word or letter from user input."},{"lineNumber":30,"author":{"gitId":"Juzzanoob"},"content":"     *"},{"lineNumber":31,"author":{"gitId":"Juzzanoob"},"content":"     * @return The first word or letter from user input."},{"lineNumber":32,"author":{"gitId":"Juzzanoob"},"content":"     */"},{"lineNumber":33,"author":{"gitId":"Juzzanoob"},"content":"    public String getCommand() {"},{"lineNumber":34,"author":{"gitId":"Juzzanoob"},"content":"        return input[0];"},{"lineNumber":35,"author":{"gitId":"Juzzanoob"},"content":"    }"},{"lineNumber":36,"author":{"gitId":"Juzzanoob"},"content":""},{"lineNumber":37,"author":{"gitId":"Juzzanoob"},"content":"    /**"},{"lineNumber":38,"author":{"gitId":"Juzzanoob"},"content":"     * Returns number, given by user, indicating index of task on task list to be modified."},{"lineNumber":39,"author":{"gitId":"Juzzanoob"},"content":"     *"},{"lineNumber":40,"author":{"gitId":"Juzzanoob"},"content":"     * @return Integer stating the index of the task on task list to be modified."},{"lineNumber":41,"author":{"gitId":"Juzzanoob"},"content":"     * @throws DukeException If no input is found."},{"lineNumber":42,"author":{"gitId":"Juzzanoob"},"content":"     */"},{"lineNumber":43,"author":{"gitId":"Juzzanoob"},"content":"    public int getIndexToModify() throws DukeException {"},{"lineNumber":44,"author":{"gitId":"Juzzanoob"},"content":""},{"lineNumber":45,"author":{"gitId":"Juzzanoob"},"content":"        String index \u003d \"\";"},{"lineNumber":46,"author":{"gitId":"Juzzanoob"},"content":""},{"lineNumber":47,"author":{"gitId":"Juzzanoob"},"content":"        try {"},{"lineNumber":48,"author":{"gitId":"Juzzanoob"},"content":"            index \u003d input[1];"},{"lineNumber":49,"author":{"gitId":"Juzzanoob"},"content":"        } catch (ArrayIndexOutOfBoundsException e) {"},{"lineNumber":50,"author":{"gitId":"Juzzanoob"},"content":"            throw new DukeException(\"delete\");"},{"lineNumber":51,"author":{"gitId":"Juzzanoob"},"content":"        }"},{"lineNumber":52,"author":{"gitId":"Juzzanoob"},"content":""},{"lineNumber":53,"author":{"gitId":"Juzzanoob"},"content":"        return Integer.parseInt(index) - 1;"},{"lineNumber":54,"author":{"gitId":"Juzzanoob"},"content":"    }"},{"lineNumber":55,"author":{"gitId":"Juzzanoob"},"content":""},{"lineNumber":56,"author":{"gitId":"Juzzanoob"},"content":"    /**"},{"lineNumber":57,"author":{"gitId":"Juzzanoob"},"content":"     * Returns keyword given by user to search tasks for."},{"lineNumber":58,"author":{"gitId":"Juzzanoob"},"content":"     *"},{"lineNumber":59,"author":{"gitId":"Juzzanoob"},"content":"     * @return String of the keyword."},{"lineNumber":60,"author":{"gitId":"Juzzanoob"},"content":"     * @throws DukeException If no keyword is found."},{"lineNumber":61,"author":{"gitId":"Juzzanoob"},"content":"     */"},{"lineNumber":62,"author":{"gitId":"Juzzanoob"},"content":"    public String getKeyword() throws DukeException {"},{"lineNumber":63,"author":{"gitId":"Juzzanoob"},"content":""},{"lineNumber":64,"author":{"gitId":"Juzzanoob"},"content":"        try {"},{"lineNumber":65,"author":{"gitId":"Juzzanoob"},"content":"            return input[1];"},{"lineNumber":66,"author":{"gitId":"Juzzanoob"},"content":"        } catch (ArrayIndexOutOfBoundsException e) {"},{"lineNumber":67,"author":{"gitId":"Juzzanoob"},"content":"            throw new DukeException(\"search\");"},{"lineNumber":68,"author":{"gitId":"Juzzanoob"},"content":"        }"},{"lineNumber":69,"author":{"gitId":"Juzzanoob"},"content":"    }"},{"lineNumber":70,"author":{"gitId":"Juzzanoob"},"content":""},{"lineNumber":71,"author":{"gitId":"Juzzanoob"},"content":"    /**"},{"lineNumber":72,"author":{"gitId":"Juzzanoob"},"content":"     * Returns description of the Task that user wants to add."},{"lineNumber":73,"author":{"gitId":"Juzzanoob"},"content":"     *"},{"lineNumber":74,"author":{"gitId":"Juzzanoob"},"content":"     * @return String comprising description of the task."},{"lineNumber":75,"author":{"gitId":"Juzzanoob"},"content":"     */"},{"lineNumber":76,"author":{"gitId":"Juzzanoob"},"content":"    public String getTaskDescription() {"},{"lineNumber":77,"author":{"gitId":"Juzzanoob"},"content":"        String output \u003d \"\";"},{"lineNumber":78,"author":{"gitId":"Juzzanoob"},"content":""},{"lineNumber":79,"author":{"gitId":"Juzzanoob"},"content":"        for (int counter \u003d 1; counter \u003c input.length; counter++) {"},{"lineNumber":80,"author":{"gitId":"Juzzanoob"},"content":"            if (input[counter].startsWith(\"/\")) {"},{"lineNumber":81,"author":{"gitId":"Juzzanoob"},"content":"                break;"},{"lineNumber":82,"author":{"gitId":"Juzzanoob"},"content":"            } else {"},{"lineNumber":83,"author":{"gitId":"Juzzanoob"},"content":"                output \u003d output + \" \" + input[counter];"},{"lineNumber":84,"author":{"gitId":"Juzzanoob"},"content":"            }"},{"lineNumber":85,"author":{"gitId":"Juzzanoob"},"content":"        }"},{"lineNumber":86,"author":{"gitId":"Juzzanoob"},"content":""},{"lineNumber":87,"author":{"gitId":"Juzzanoob"},"content":"        return output;"},{"lineNumber":88,"author":{"gitId":"Juzzanoob"},"content":"    }"},{"lineNumber":89,"author":{"gitId":"Juzzanoob"},"content":""},{"lineNumber":90,"author":{"gitId":"Juzzanoob"},"content":"    /**"},{"lineNumber":91,"author":{"gitId":"Juzzanoob"},"content":"     * Returns String comprising date or deadline of the task."},{"lineNumber":92,"author":{"gitId":"Juzzanoob"},"content":"     *"},{"lineNumber":93,"author":{"gitId":"Juzzanoob"},"content":"     * @return String comprising date or deadline of the task."},{"lineNumber":94,"author":{"gitId":"Juzzanoob"},"content":"     */"},{"lineNumber":95,"author":{"gitId":"Juzzanoob"},"content":"    public String getDate() {"},{"lineNumber":96,"author":{"gitId":"Juzzanoob"},"content":"        if (getCommand().equals(\"todo\")) {"},{"lineNumber":97,"author":{"gitId":"Juzzanoob"},"content":"            return \"Task has no date\";"},{"lineNumber":98,"author":{"gitId":"Juzzanoob"},"content":"        } else {"},{"lineNumber":99,"author":{"gitId":"Juzzanoob"},"content":"            return input[input.length - 2];"},{"lineNumber":100,"author":{"gitId":"Juzzanoob"},"content":"        }"},{"lineNumber":101,"author":{"gitId":"Juzzanoob"},"content":"    }"},{"lineNumber":102,"author":{"gitId":"Juzzanoob"},"content":""},{"lineNumber":103,"author":{"gitId":"Juzzanoob"},"content":"    /**"},{"lineNumber":104,"author":{"gitId":"Juzzanoob"},"content":"     * Returns String comprising time of the task."},{"lineNumber":105,"author":{"gitId":"Juzzanoob"},"content":"     *"},{"lineNumber":106,"author":{"gitId":"Juzzanoob"},"content":"     * @return String comprising time of the task."},{"lineNumber":107,"author":{"gitId":"Juzzanoob"},"content":"     */"},{"lineNumber":108,"author":{"gitId":"Juzzanoob"},"content":"    public String getTime() {"},{"lineNumber":109,"author":{"gitId":"Juzzanoob"},"content":"        if (getCommand().equals(\"todo\")) {"},{"lineNumber":110,"author":{"gitId":"Juzzanoob"},"content":"            return \"Task has no time\";"},{"lineNumber":111,"author":{"gitId":"Juzzanoob"},"content":"        } else {"},{"lineNumber":112,"author":{"gitId":"Juzzanoob"},"content":"            return input[input.length - 1];"},{"lineNumber":113,"author":{"gitId":"Juzzanoob"},"content":"        }"},{"lineNumber":114,"author":{"gitId":"Juzzanoob"},"content":"    }"},{"lineNumber":115,"author":{"gitId":"Juzzanoob"},"content":"}"}],"authorContributionMap":{"Juzzanoob":115}},{"path":"src/main/java/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Juzzanoob"},"content":"import java.io.File;"},{"lineNumber":2,"author":{"gitId":"Juzzanoob"},"content":"import java.io.FileNotFoundException;"},{"lineNumber":3,"author":{"gitId":"Juzzanoob"},"content":"import java.io.FileWriter;"},{"lineNumber":4,"author":{"gitId":"Juzzanoob"},"content":"import java.io.IOException;"},{"lineNumber":5,"author":{"gitId":"Juzzanoob"},"content":"import java.time.LocalDate;"},{"lineNumber":6,"author":{"gitId":"Juzzanoob"},"content":"import java.time.LocalTime;"},{"lineNumber":7,"author":{"gitId":"Juzzanoob"},"content":"import java.time.format.DateTimeFormatter;"},{"lineNumber":8,"author":{"gitId":"Juzzanoob"},"content":"import java.util.ArrayList;"},{"lineNumber":9,"author":{"gitId":"Juzzanoob"},"content":"import java.util.Scanner;"},{"lineNumber":10,"author":{"gitId":"Juzzanoob"},"content":""},{"lineNumber":11,"author":{"gitId":"Juzzanoob"},"content":"/**"},{"lineNumber":12,"author":{"gitId":"Juzzanoob"},"content":" * Reads and writes task list file."},{"lineNumber":13,"author":{"gitId":"Juzzanoob"},"content":" * If the given file path leads to an empty file, Storage will write a new file in"},{"lineNumber":14,"author":{"gitId":"Juzzanoob"},"content":" * the given path."},{"lineNumber":15,"author":{"gitId":"Juzzanoob"},"content":" */"},{"lineNumber":16,"author":{"gitId":"Juzzanoob"},"content":"public class Storage {"},{"lineNumber":17,"author":{"gitId":"Juzzanoob"},"content":""},{"lineNumber":18,"author":{"gitId":"Juzzanoob"},"content":"    /** task list file. */"},{"lineNumber":19,"author":{"gitId":"Juzzanoob"},"content":"    private File file;"},{"lineNumber":20,"author":{"gitId":"Juzzanoob"},"content":""},{"lineNumber":21,"author":{"gitId":"Juzzanoob"},"content":"    /** directory path of the task list file. */"},{"lineNumber":22,"author":{"gitId":"Juzzanoob"},"content":"    private String filePath;"},{"lineNumber":23,"author":{"gitId":"Juzzanoob"},"content":""},{"lineNumber":24,"author":{"gitId":"Juzzanoob"},"content":"    /**"},{"lineNumber":25,"author":{"gitId":"Juzzanoob"},"content":"     * Initializes Storage with a file path to read a file."},{"lineNumber":26,"author":{"gitId":"Juzzanoob"},"content":"     *"},{"lineNumber":27,"author":{"gitId":"Juzzanoob"},"content":"     * @param filePath path of the file."},{"lineNumber":28,"author":{"gitId":"Juzzanoob"},"content":"     */"},{"lineNumber":29,"author":{"gitId":"Juzzanoob"},"content":"    public Storage(String filePath) {"},{"lineNumber":30,"author":{"gitId":"Juzzanoob"},"content":"        this.filePath \u003d filePath;"},{"lineNumber":31,"author":{"gitId":"Juzzanoob"},"content":"        file \u003d new File(filePath);"},{"lineNumber":32,"author":{"gitId":"Juzzanoob"},"content":"    }"},{"lineNumber":33,"author":{"gitId":"Juzzanoob"},"content":""},{"lineNumber":34,"author":{"gitId":"Juzzanoob"},"content":"    /**"},{"lineNumber":35,"author":{"gitId":"Juzzanoob"},"content":"     * Reads the file from filePath."},{"lineNumber":36,"author":{"gitId":"Juzzanoob"},"content":"     *"},{"lineNumber":37,"author":{"gitId":"Juzzanoob"},"content":"     * @return An ArrayList of type Task containing tasks."},{"lineNumber":38,"author":{"gitId":"Juzzanoob"},"content":"     * @throws DukeException if no file found at given filePath."},{"lineNumber":39,"author":{"gitId":"Juzzanoob"},"content":"     */"},{"lineNumber":40,"author":{"gitId":"Juzzanoob"},"content":"    public ArrayList\u003cTask\u003e readFile() throws DukeException {"},{"lineNumber":41,"author":{"gitId":"Juzzanoob"},"content":""},{"lineNumber":42,"author":{"gitId":"Juzzanoob"},"content":"        ArrayList\u003cTask\u003e output \u003d new ArrayList\u003c\u003e();"},{"lineNumber":43,"author":{"gitId":"Juzzanoob"},"content":"        File file \u003d new File(filePath);"},{"lineNumber":44,"author":{"gitId":"Juzzanoob"},"content":""},{"lineNumber":45,"author":{"gitId":"Juzzanoob"},"content":"        try {"},{"lineNumber":46,"author":{"gitId":"Juzzanoob"},"content":"            Scanner scanner \u003d new Scanner(file);"},{"lineNumber":47,"author":{"gitId":"Juzzanoob"},"content":""},{"lineNumber":48,"author":{"gitId":"Juzzanoob"},"content":"            Task toAdd;"},{"lineNumber":49,"author":{"gitId":"Juzzanoob"},"content":""},{"lineNumber":50,"author":{"gitId":"Juzzanoob"},"content":"            while (scanner.hasNext()) {"},{"lineNumber":51,"author":{"gitId":"Juzzanoob"},"content":"                String taskLine \u003d scanner.nextLine();"},{"lineNumber":52,"author":{"gitId":"Juzzanoob"},"content":"                String[] split \u003d taskLine.split(\" \");"},{"lineNumber":53,"author":{"gitId":"Juzzanoob"},"content":"                String taskType \u003d split[0];"},{"lineNumber":54,"author":{"gitId":"Juzzanoob"},"content":"                String taskDone \u003d split[1];"},{"lineNumber":55,"author":{"gitId":"Juzzanoob"},"content":"                boolean done \u003d taskDone.equals(\"1\");"},{"lineNumber":56,"author":{"gitId":"Juzzanoob"},"content":"                String task \u003d \"\";"},{"lineNumber":57,"author":{"gitId":"Juzzanoob"},"content":""},{"lineNumber":58,"author":{"gitId":"Juzzanoob"},"content":"                int counter;"},{"lineNumber":59,"author":{"gitId":"Juzzanoob"},"content":""},{"lineNumber":60,"author":{"gitId":"Juzzanoob"},"content":"                outerloop:"},{"lineNumber":61,"author":{"gitId":"Juzzanoob"},"content":"                for (counter \u003d 2; counter \u003c split.length; counter++) {"},{"lineNumber":62,"author":{"gitId":"Juzzanoob"},"content":"                    if (split[counter].startsWith(\"(\")) {"},{"lineNumber":63,"author":{"gitId":"Juzzanoob"},"content":"                        break outerloop;"},{"lineNumber":64,"author":{"gitId":"Juzzanoob"},"content":"                    } else {"},{"lineNumber":65,"author":{"gitId":"Juzzanoob"},"content":"                        if (counter \u003d\u003d 1) {"},{"lineNumber":66,"author":{"gitId":"Juzzanoob"},"content":"                            task \u003d task + split[counter];"},{"lineNumber":67,"author":{"gitId":"Juzzanoob"},"content":"                        } else {"},{"lineNumber":68,"author":{"gitId":"Juzzanoob"},"content":"                            task \u003d task + \" \" + split[counter];"},{"lineNumber":69,"author":{"gitId":"Juzzanoob"},"content":"                        }"},{"lineNumber":70,"author":{"gitId":"Juzzanoob"},"content":"                    }"},{"lineNumber":71,"author":{"gitId":"Juzzanoob"},"content":"                }"},{"lineNumber":72,"author":{"gitId":"Juzzanoob"},"content":""},{"lineNumber":73,"author":{"gitId":"Juzzanoob"},"content":"                if (!taskType.equals(\"T\")) {"},{"lineNumber":74,"author":{"gitId":"Juzzanoob"},"content":"                    String fullDate, day, month, year;"},{"lineNumber":75,"author":{"gitId":"Juzzanoob"},"content":"                    counter++;"},{"lineNumber":76,"author":{"gitId":"Juzzanoob"},"content":"                    day \u003d split[counter];"},{"lineNumber":77,"author":{"gitId":"Juzzanoob"},"content":"                    counter++;"},{"lineNumber":78,"author":{"gitId":"Juzzanoob"},"content":"                    month \u003d split[counter];"},{"lineNumber":79,"author":{"gitId":"Juzzanoob"},"content":"                    counter++;"},{"lineNumber":80,"author":{"gitId":"Juzzanoob"},"content":"                    year \u003d split[counter];"},{"lineNumber":81,"author":{"gitId":"Juzzanoob"},"content":"                    fullDate \u003d day + \" \" + month + \" \" + year;"},{"lineNumber":82,"author":{"gitId":"Juzzanoob"},"content":"                    LocalDate date \u003d LocalDate.parse(fullDate, DateTimeFormatter.ofPattern(\"d MMM yyyy\"));"},{"lineNumber":83,"author":{"gitId":"Juzzanoob"},"content":""},{"lineNumber":84,"author":{"gitId":"Juzzanoob"},"content":"                    counter++;"},{"lineNumber":85,"author":{"gitId":"Juzzanoob"},"content":"                    LocalTime time \u003d LocalTime.parse(split[counter], DateTimeFormatter.ofPattern(\"HHmm\"));"},{"lineNumber":86,"author":{"gitId":"Juzzanoob"},"content":""},{"lineNumber":87,"author":{"gitId":"Juzzanoob"},"content":"                    if (taskType.equals(\"E\")) {"},{"lineNumber":88,"author":{"gitId":"Juzzanoob"},"content":"                        toAdd \u003d new Event(task, date, time);"},{"lineNumber":89,"author":{"gitId":"Juzzanoob"},"content":"                    } else {"},{"lineNumber":90,"author":{"gitId":"Juzzanoob"},"content":"                        toAdd \u003d new Deadline(task, date, time);"},{"lineNumber":91,"author":{"gitId":"Juzzanoob"},"content":"                    }"},{"lineNumber":92,"author":{"gitId":"Juzzanoob"},"content":""},{"lineNumber":93,"author":{"gitId":"Juzzanoob"},"content":"                } else {"},{"lineNumber":94,"author":{"gitId":"Juzzanoob"},"content":"                    toAdd \u003d new ToDo(task);"},{"lineNumber":95,"author":{"gitId":"Juzzanoob"},"content":"                }"},{"lineNumber":96,"author":{"gitId":"Juzzanoob"},"content":""},{"lineNumber":97,"author":{"gitId":"Juzzanoob"},"content":"                if (done) {"},{"lineNumber":98,"author":{"gitId":"Juzzanoob"},"content":"                    toAdd.completeTask();"},{"lineNumber":99,"author":{"gitId":"Juzzanoob"},"content":"                }"},{"lineNumber":100,"author":{"gitId":"Juzzanoob"},"content":""},{"lineNumber":101,"author":{"gitId":"Juzzanoob"},"content":"                output.add(toAdd);"},{"lineNumber":102,"author":{"gitId":"Juzzanoob"},"content":"            }"},{"lineNumber":103,"author":{"gitId":"Juzzanoob"},"content":""},{"lineNumber":104,"author":{"gitId":"Juzzanoob"},"content":"        } catch (FileNotFoundException e) {"},{"lineNumber":105,"author":{"gitId":"Juzzanoob"},"content":"            throw new DukeException(\"loading error\");"},{"lineNumber":106,"author":{"gitId":"Juzzanoob"},"content":"        }"},{"lineNumber":107,"author":{"gitId":"Juzzanoob"},"content":""},{"lineNumber":108,"author":{"gitId":"Juzzanoob"},"content":"        return output;"},{"lineNumber":109,"author":{"gitId":"Juzzanoob"},"content":"    }"},{"lineNumber":110,"author":{"gitId":"Juzzanoob"},"content":""},{"lineNumber":111,"author":{"gitId":"Juzzanoob"},"content":"    /**"},{"lineNumber":112,"author":{"gitId":"Juzzanoob"},"content":"     * Writes into the file from a given list of tasks."},{"lineNumber":113,"author":{"gitId":"Juzzanoob"},"content":"     *"},{"lineNumber":114,"author":{"gitId":"Juzzanoob"},"content":"     * @param taskList List of tasks to write into the file."},{"lineNumber":115,"author":{"gitId":"Juzzanoob"},"content":"     */"},{"lineNumber":116,"author":{"gitId":"Juzzanoob"},"content":"    public void writeFile(TaskList taskList) {"},{"lineNumber":117,"author":{"gitId":"Juzzanoob"},"content":"        try {"},{"lineNumber":118,"author":{"gitId":"Juzzanoob"},"content":"            FileWriter fileWriter \u003d new FileWriter(file);"},{"lineNumber":119,"author":{"gitId":"Juzzanoob"},"content":"            String toWrite \u003d \"\";"},{"lineNumber":120,"author":{"gitId":"Juzzanoob"},"content":"            ArrayList\u003cTask\u003e arr \u003d taskList.getTaskArrayList();"},{"lineNumber":121,"author":{"gitId":"Juzzanoob"},"content":""},{"lineNumber":122,"author":{"gitId":"Juzzanoob"},"content":"            for (int i \u003d 0; i \u003c arr.size(); i++) {"},{"lineNumber":123,"author":{"gitId":"Juzzanoob"},"content":"                if (i \u003d\u003d arr.size() - 1) {"},{"lineNumber":124,"author":{"gitId":"Juzzanoob"},"content":"                    toWrite \u003d toWrite + arr.get(i).taskStatus();"},{"lineNumber":125,"author":{"gitId":"Juzzanoob"},"content":"                } else {"},{"lineNumber":126,"author":{"gitId":"Juzzanoob"},"content":"                    toWrite \u003d toWrite + arr.get(i).taskStatus() + \"\\n\";"},{"lineNumber":127,"author":{"gitId":"Juzzanoob"},"content":"                }"},{"lineNumber":128,"author":{"gitId":"Juzzanoob"},"content":"            }"},{"lineNumber":129,"author":{"gitId":"Juzzanoob"},"content":""},{"lineNumber":130,"author":{"gitId":"Juzzanoob"},"content":"            fileWriter.write(toWrite);"},{"lineNumber":131,"author":{"gitId":"Juzzanoob"},"content":"            fileWriter.close();"},{"lineNumber":132,"author":{"gitId":"Juzzanoob"},"content":""},{"lineNumber":133,"author":{"gitId":"Juzzanoob"},"content":"        } catch (IOException e) {"},{"lineNumber":134,"author":{"gitId":"Juzzanoob"},"content":"            System.out.println(e.getMessage());"},{"lineNumber":135,"author":{"gitId":"Juzzanoob"},"content":"        }"},{"lineNumber":136,"author":{"gitId":"Juzzanoob"},"content":"    }"},{"lineNumber":137,"author":{"gitId":"Juzzanoob"},"content":"}"}],"authorContributionMap":{"Juzzanoob":137}},{"path":"src/main/java/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Juzzanoob"},"content":"/**"},{"lineNumber":2,"author":{"gitId":"Juzzanoob"},"content":" * Simulates a task to be completed."},{"lineNumber":3,"author":{"gitId":"Juzzanoob"},"content":" */"},{"lineNumber":4,"author":{"gitId":"Juzzanoob"},"content":"public class Task {"},{"lineNumber":5,"author":{"gitId":"Juzzanoob"},"content":""},{"lineNumber":6,"author":{"gitId":"Juzzanoob"},"content":"    /** states what the task is */"},{"lineNumber":7,"author":{"gitId":"Juzzanoob"},"content":"    private String task_details;"},{"lineNumber":8,"author":{"gitId":"Juzzanoob"},"content":""},{"lineNumber":9,"author":{"gitId":"Juzzanoob"},"content":"    /** indicates whether task is completed */"},{"lineNumber":10,"author":{"gitId":"Juzzanoob"},"content":"    private boolean done;"},{"lineNumber":11,"author":{"gitId":"Juzzanoob"},"content":""},{"lineNumber":12,"author":{"gitId":"Juzzanoob"},"content":"    /** Creates a task."},{"lineNumber":13,"author":{"gitId":"Juzzanoob"},"content":"     *"},{"lineNumber":14,"author":{"gitId":"Juzzanoob"},"content":"     * @param details details of the task."},{"lineNumber":15,"author":{"gitId":"Juzzanoob"},"content":"     */"},{"lineNumber":16,"author":{"gitId":"Juzzanoob"},"content":"    Task(String details){"},{"lineNumber":17,"author":{"gitId":"Juzzanoob"},"content":"        task_details \u003d details;"},{"lineNumber":18,"author":{"gitId":"Juzzanoob"},"content":"        done \u003d false;"},{"lineNumber":19,"author":{"gitId":"Juzzanoob"},"content":"    }"},{"lineNumber":20,"author":{"gitId":"Juzzanoob"},"content":""},{"lineNumber":21,"author":{"gitId":"Juzzanoob"},"content":"    // private constructor to maintain Immutability"},{"lineNumber":22,"author":{"gitId":"Juzzanoob"},"content":"    protected Task(String details, boolean indicator){"},{"lineNumber":23,"author":{"gitId":"Juzzanoob"},"content":"        task_details \u003d details;"},{"lineNumber":24,"author":{"gitId":"Juzzanoob"},"content":"        done \u003d true;"},{"lineNumber":25,"author":{"gitId":"Juzzanoob"},"content":"    }"},{"lineNumber":26,"author":{"gitId":"Juzzanoob"},"content":""},{"lineNumber":27,"author":{"gitId":"Juzzanoob"},"content":"    /** returns task details."},{"lineNumber":28,"author":{"gitId":"Juzzanoob"},"content":"     *"},{"lineNumber":29,"author":{"gitId":"Juzzanoob"},"content":"     * @return task details."},{"lineNumber":30,"author":{"gitId":"Juzzanoob"},"content":"     */"},{"lineNumber":31,"author":{"gitId":"Juzzanoob"},"content":"    public String getTask_details() {"},{"lineNumber":32,"author":{"gitId":"Juzzanoob"},"content":"        return task_details;"},{"lineNumber":33,"author":{"gitId":"Juzzanoob"},"content":"    }"},{"lineNumber":34,"author":{"gitId":"Juzzanoob"},"content":""},{"lineNumber":35,"author":{"gitId":"Juzzanoob"},"content":"    /** checks if task is completed."},{"lineNumber":36,"author":{"gitId":"Juzzanoob"},"content":"     *"},{"lineNumber":37,"author":{"gitId":"Juzzanoob"},"content":"     * @return completion status."},{"lineNumber":38,"author":{"gitId":"Juzzanoob"},"content":"     */"},{"lineNumber":39,"author":{"gitId":"Juzzanoob"},"content":"    public boolean isDone() {"},{"lineNumber":40,"author":{"gitId":"Juzzanoob"},"content":"        return done;"},{"lineNumber":41,"author":{"gitId":"Juzzanoob"},"content":"    }"},{"lineNumber":42,"author":{"gitId":"Juzzanoob"},"content":""},{"lineNumber":43,"author":{"gitId":"Juzzanoob"},"content":"    /** completes the task."},{"lineNumber":44,"author":{"gitId":"Juzzanoob"},"content":"     *"},{"lineNumber":45,"author":{"gitId":"Juzzanoob"},"content":"     * @return new completed Task with the same details."},{"lineNumber":46,"author":{"gitId":"Juzzanoob"},"content":"     */"},{"lineNumber":47,"author":{"gitId":"Juzzanoob"},"content":"    public Task completeTask() {"},{"lineNumber":48,"author":{"gitId":"Juzzanoob"},"content":"        return new Task(task_details, true);"},{"lineNumber":49,"author":{"gitId":"Juzzanoob"},"content":"    }"},{"lineNumber":50,"author":{"gitId":"Juzzanoob"},"content":""},{"lineNumber":51,"author":{"gitId":"Juzzanoob"},"content":"    /** returns completed status and task details as a String."},{"lineNumber":52,"author":{"gitId":"Juzzanoob"},"content":"     *"},{"lineNumber":53,"author":{"gitId":"Juzzanoob"},"content":"     * @return String stating completion status and task details."},{"lineNumber":54,"author":{"gitId":"Juzzanoob"},"content":"     */"},{"lineNumber":55,"author":{"gitId":"Juzzanoob"},"content":"    public String taskStatus() {"},{"lineNumber":56,"author":{"gitId":"Juzzanoob"},"content":"        if (done) {"},{"lineNumber":57,"author":{"gitId":"Juzzanoob"},"content":"           return \"1 \" + task_details;"},{"lineNumber":58,"author":{"gitId":"Juzzanoob"},"content":"        } else {"},{"lineNumber":59,"author":{"gitId":"Juzzanoob"},"content":"            return \"0 \" + task_details;"},{"lineNumber":60,"author":{"gitId":"Juzzanoob"},"content":"        }"},{"lineNumber":61,"author":{"gitId":"Juzzanoob"},"content":"    }"},{"lineNumber":62,"author":{"gitId":"Juzzanoob"},"content":"}"}],"authorContributionMap":{"Juzzanoob":62}},{"path":"src/main/java/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Juzzanoob"},"content":"import java.util.ArrayList;"},{"lineNumber":2,"author":{"gitId":"Juzzanoob"},"content":""},{"lineNumber":3,"author":{"gitId":"Juzzanoob"},"content":"/**"},{"lineNumber":4,"author":{"gitId":"Juzzanoob"},"content":" * Simulates a list of tasks."},{"lineNumber":5,"author":{"gitId":"Juzzanoob"},"content":" */"},{"lineNumber":6,"author":{"gitId":"Juzzanoob"},"content":"public class TaskList {"},{"lineNumber":7,"author":{"gitId":"Juzzanoob"},"content":""},{"lineNumber":8,"author":{"gitId":"Juzzanoob"},"content":"    /** Lists the tasks in an ArrayList */"},{"lineNumber":9,"author":{"gitId":"Juzzanoob"},"content":"    private ArrayList\u003cTask\u003e taskArrayList;"},{"lineNumber":10,"author":{"gitId":"Juzzanoob"},"content":""},{"lineNumber":11,"author":{"gitId":"Juzzanoob"},"content":"    /**"},{"lineNumber":12,"author":{"gitId":"Juzzanoob"},"content":"     * Creates a TaskList object consisting of an empty list of tasks."},{"lineNumber":13,"author":{"gitId":"Juzzanoob"},"content":"     */"},{"lineNumber":14,"author":{"gitId":"Juzzanoob"},"content":"    public TaskList() {"},{"lineNumber":15,"author":{"gitId":"Juzzanoob"},"content":"        taskArrayList \u003d new ArrayList\u003c\u003e();"},{"lineNumber":16,"author":{"gitId":"Juzzanoob"},"content":"    }"},{"lineNumber":17,"author":{"gitId":"Juzzanoob"},"content":""},{"lineNumber":18,"author":{"gitId":"Juzzanoob"},"content":"    /**"},{"lineNumber":19,"author":{"gitId":"Juzzanoob"},"content":"     * Creates a TaskList object consisting of a lists of tasks."},{"lineNumber":20,"author":{"gitId":"Juzzanoob"},"content":"     *"},{"lineNumber":21,"author":{"gitId":"Juzzanoob"},"content":"     * @param taskArrayList ArrayList of tasks that TaskList will contain."},{"lineNumber":22,"author":{"gitId":"Juzzanoob"},"content":"     */"},{"lineNumber":23,"author":{"gitId":"Juzzanoob"},"content":"    public TaskList(ArrayList\u003cTask\u003e taskArrayList) {"},{"lineNumber":24,"author":{"gitId":"Juzzanoob"},"content":"        this.taskArrayList \u003d taskArrayList;"},{"lineNumber":25,"author":{"gitId":"Juzzanoob"},"content":"    }"},{"lineNumber":26,"author":{"gitId":"Juzzanoob"},"content":""},{"lineNumber":27,"author":{"gitId":"Juzzanoob"},"content":"    /**"},{"lineNumber":28,"author":{"gitId":"Juzzanoob"},"content":"     * Returns number of tasks in the list."},{"lineNumber":29,"author":{"gitId":"Juzzanoob"},"content":"     *"},{"lineNumber":30,"author":{"gitId":"Juzzanoob"},"content":"     * @return Integer denoting number of tasks in the list."},{"lineNumber":31,"author":{"gitId":"Juzzanoob"},"content":"     */"},{"lineNumber":32,"author":{"gitId":"Juzzanoob"},"content":"    public int getSize() {"},{"lineNumber":33,"author":{"gitId":"Juzzanoob"},"content":"        return taskArrayList.size();"},{"lineNumber":34,"author":{"gitId":"Juzzanoob"},"content":"    }"},{"lineNumber":35,"author":{"gitId":"Juzzanoob"},"content":""},{"lineNumber":36,"author":{"gitId":"Juzzanoob"},"content":"    /**"},{"lineNumber":37,"author":{"gitId":"Juzzanoob"},"content":"     * Returns the task at the given index."},{"lineNumber":38,"author":{"gitId":"Juzzanoob"},"content":"     *"},{"lineNumber":39,"author":{"gitId":"Juzzanoob"},"content":"     * @param index Index of the task of interest."},{"lineNumber":40,"author":{"gitId":"Juzzanoob"},"content":"     * @return Task at the given index."},{"lineNumber":41,"author":{"gitId":"Juzzanoob"},"content":"     */"},{"lineNumber":42,"author":{"gitId":"Juzzanoob"},"content":"    public Task getTask(int index) {"},{"lineNumber":43,"author":{"gitId":"Juzzanoob"},"content":"        return taskArrayList.get(index);"},{"lineNumber":44,"author":{"gitId":"Juzzanoob"},"content":"    }"},{"lineNumber":45,"author":{"gitId":"Juzzanoob"},"content":""},{"lineNumber":46,"author":{"gitId":"Juzzanoob"},"content":"    /**"},{"lineNumber":47,"author":{"gitId":"Juzzanoob"},"content":"     * Adds a task into the list."},{"lineNumber":48,"author":{"gitId":"Juzzanoob"},"content":"     *"},{"lineNumber":49,"author":{"gitId":"Juzzanoob"},"content":"     * @param task Task to be added into the list."},{"lineNumber":50,"author":{"gitId":"Juzzanoob"},"content":"     * @return New TaskList object with the added task."},{"lineNumber":51,"author":{"gitId":"Juzzanoob"},"content":"     */"},{"lineNumber":52,"author":{"gitId":"Juzzanoob"},"content":"    public TaskList addTask(Task task) {"},{"lineNumber":53,"author":{"gitId":"Juzzanoob"},"content":"        taskArrayList.add(task);"},{"lineNumber":54,"author":{"gitId":"Juzzanoob"},"content":"        return new TaskList(taskArrayList);"},{"lineNumber":55,"author":{"gitId":"Juzzanoob"},"content":"    }"},{"lineNumber":56,"author":{"gitId":"Juzzanoob"},"content":""},{"lineNumber":57,"author":{"gitId":"Juzzanoob"},"content":"    /**"},{"lineNumber":58,"author":{"gitId":"Juzzanoob"},"content":"     * Deletes a task at the given index."},{"lineNumber":59,"author":{"gitId":"Juzzanoob"},"content":"     *"},{"lineNumber":60,"author":{"gitId":"Juzzanoob"},"content":"     * @param index Index of the task to be deleted."},{"lineNumber":61,"author":{"gitId":"Juzzanoob"},"content":"     * @return New TaskList object with the task deleted."},{"lineNumber":62,"author":{"gitId":"Juzzanoob"},"content":"     */"},{"lineNumber":63,"author":{"gitId":"Juzzanoob"},"content":"    public TaskList deleteTask(int index) {"},{"lineNumber":64,"author":{"gitId":"Juzzanoob"},"content":"        taskArrayList.remove(index);"},{"lineNumber":65,"author":{"gitId":"Juzzanoob"},"content":"        return new TaskList(taskArrayList);"},{"lineNumber":66,"author":{"gitId":"Juzzanoob"},"content":"    }"},{"lineNumber":67,"author":{"gitId":"Juzzanoob"},"content":""},{"lineNumber":68,"author":{"gitId":"Juzzanoob"},"content":"    /**"},{"lineNumber":69,"author":{"gitId":"Juzzanoob"},"content":"     * Completes the task at the given index."},{"lineNumber":70,"author":{"gitId":"Juzzanoob"},"content":"     *"},{"lineNumber":71,"author":{"gitId":"Juzzanoob"},"content":"     * @param index Index of the task to be completed."},{"lineNumber":72,"author":{"gitId":"Juzzanoob"},"content":"     * @return New TaskList object with the task completed."},{"lineNumber":73,"author":{"gitId":"Juzzanoob"},"content":"     */"},{"lineNumber":74,"author":{"gitId":"Juzzanoob"},"content":"    public TaskList completeTask(int index) {"},{"lineNumber":75,"author":{"gitId":"Juzzanoob"},"content":"        ArrayList\u003cTask\u003e output \u003d taskArrayList;"},{"lineNumber":76,"author":{"gitId":"Juzzanoob"},"content":"        output.set(index, taskArrayList.get(index).completeTask());"},{"lineNumber":77,"author":{"gitId":"Juzzanoob"},"content":"        return new TaskList(output);"},{"lineNumber":78,"author":{"gitId":"Juzzanoob"},"content":"    }"},{"lineNumber":79,"author":{"gitId":"Juzzanoob"},"content":""},{"lineNumber":80,"author":{"gitId":"Juzzanoob"},"content":"    /**"},{"lineNumber":81,"author":{"gitId":"Juzzanoob"},"content":"     * Returns the entire list as a String."},{"lineNumber":82,"author":{"gitId":"Juzzanoob"},"content":"     * Tasks are separated by a new line character \"\\n\"."},{"lineNumber":83,"author":{"gitId":"Juzzanoob"},"content":"     *"},{"lineNumber":84,"author":{"gitId":"Juzzanoob"},"content":"     * @return String comprising the entire list of tasks."},{"lineNumber":85,"author":{"gitId":"Juzzanoob"},"content":"     */"},{"lineNumber":86,"author":{"gitId":"Juzzanoob"},"content":"    public String getList() {"},{"lineNumber":87,"author":{"gitId":"Juzzanoob"},"content":""},{"lineNumber":88,"author":{"gitId":"Juzzanoob"},"content":"        String output \u003d \"\";"},{"lineNumber":89,"author":{"gitId":"Juzzanoob"},"content":""},{"lineNumber":90,"author":{"gitId":"Juzzanoob"},"content":"        for (int i \u003d 0; i \u003c taskArrayList.size(); i++) {"},{"lineNumber":91,"author":{"gitId":"Juzzanoob"},"content":"            if (i \u003d\u003d taskArrayList.size() - 1) {"},{"lineNumber":92,"author":{"gitId":"Juzzanoob"},"content":"                output \u003d output + getTask(i).taskStatus();"},{"lineNumber":93,"author":{"gitId":"Juzzanoob"},"content":"            } else {"},{"lineNumber":94,"author":{"gitId":"Juzzanoob"},"content":"                output \u003d output + getTask(i).taskStatus() + \"\\n\";"},{"lineNumber":95,"author":{"gitId":"Juzzanoob"},"content":"            }"},{"lineNumber":96,"author":{"gitId":"Juzzanoob"},"content":"        }"},{"lineNumber":97,"author":{"gitId":"Juzzanoob"},"content":""},{"lineNumber":98,"author":{"gitId":"Juzzanoob"},"content":"        return output;"},{"lineNumber":99,"author":{"gitId":"Juzzanoob"},"content":"    }"},{"lineNumber":100,"author":{"gitId":"Juzzanoob"},"content":""},{"lineNumber":101,"author":{"gitId":"Juzzanoob"},"content":"    /**"},{"lineNumber":102,"author":{"gitId":"Juzzanoob"},"content":"     * Returns the ArrayList of tasks in this object."},{"lineNumber":103,"author":{"gitId":"Juzzanoob"},"content":"     *"},{"lineNumber":104,"author":{"gitId":"Juzzanoob"},"content":"     * @return ArrayList of tasks."},{"lineNumber":105,"author":{"gitId":"Juzzanoob"},"content":"     */"},{"lineNumber":106,"author":{"gitId":"Juzzanoob"},"content":"    public ArrayList\u003cTask\u003e getTaskArrayList() {"},{"lineNumber":107,"author":{"gitId":"Juzzanoob"},"content":"        return taskArrayList;"},{"lineNumber":108,"author":{"gitId":"Juzzanoob"},"content":"    }"},{"lineNumber":109,"author":{"gitId":"Juzzanoob"},"content":""},{"lineNumber":110,"author":{"gitId":"Juzzanoob"},"content":"    /**"},{"lineNumber":111,"author":{"gitId":"Juzzanoob"},"content":"     * Returns String containing statuses of tasks containing a keyword."},{"lineNumber":112,"author":{"gitId":"Juzzanoob"},"content":"     *"},{"lineNumber":113,"author":{"gitId":"Juzzanoob"},"content":"     * @param keyword Keyword used to search tasks."},{"lineNumber":114,"author":{"gitId":"Juzzanoob"},"content":"     * @return String containing statuses of tasks found."},{"lineNumber":115,"author":{"gitId":"Juzzanoob"},"content":"     */"},{"lineNumber":116,"author":{"gitId":"Juzzanoob"},"content":"    public String search(String keyword) {"},{"lineNumber":117,"author":{"gitId":"Juzzanoob"},"content":""},{"lineNumber":118,"author":{"gitId":"Juzzanoob"},"content":"        ArrayList\u003cTask\u003e found \u003d new ArrayList\u003c\u003e();"},{"lineNumber":119,"author":{"gitId":"Juzzanoob"},"content":""},{"lineNumber":120,"author":{"gitId":"Juzzanoob"},"content":"        for (Task t : taskArrayList) {"},{"lineNumber":121,"author":{"gitId":"Juzzanoob"},"content":"            if (t.getTask_details().contains(keyword)) {"},{"lineNumber":122,"author":{"gitId":"Juzzanoob"},"content":"                found.add(t);"},{"lineNumber":123,"author":{"gitId":"Juzzanoob"},"content":"            }"},{"lineNumber":124,"author":{"gitId":"Juzzanoob"},"content":"        }"},{"lineNumber":125,"author":{"gitId":"Juzzanoob"},"content":""},{"lineNumber":126,"author":{"gitId":"Juzzanoob"},"content":"        String output \u003d \"\";"},{"lineNumber":127,"author":{"gitId":"Juzzanoob"},"content":""},{"lineNumber":128,"author":{"gitId":"Juzzanoob"},"content":"        for (int i \u003d 0; i \u003c found.size(); i++) {"},{"lineNumber":129,"author":{"gitId":"Juzzanoob"},"content":"            if (i \u003d\u003d found.size() - 1) {"},{"lineNumber":130,"author":{"gitId":"Juzzanoob"},"content":"                output \u003d output + found.get(i).taskStatus();"},{"lineNumber":131,"author":{"gitId":"Juzzanoob"},"content":"            } else {"},{"lineNumber":132,"author":{"gitId":"Juzzanoob"},"content":"                output \u003d output + found.get(i).taskStatus() + \"\\n\";"},{"lineNumber":133,"author":{"gitId":"Juzzanoob"},"content":"            }"},{"lineNumber":134,"author":{"gitId":"Juzzanoob"},"content":"        }"},{"lineNumber":135,"author":{"gitId":"Juzzanoob"},"content":""},{"lineNumber":136,"author":{"gitId":"Juzzanoob"},"content":"        return output;"},{"lineNumber":137,"author":{"gitId":"Juzzanoob"},"content":"    }"},{"lineNumber":138,"author":{"gitId":"Juzzanoob"},"content":"}"}],"authorContributionMap":{"Juzzanoob":138}},{"path":"src/main/java/ToDo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Juzzanoob"},"content":"/**"},{"lineNumber":2,"author":{"gitId":"Juzzanoob"},"content":" * Simulates a todo task."},{"lineNumber":3,"author":{"gitId":"Juzzanoob"},"content":" */"},{"lineNumber":4,"author":{"gitId":"Juzzanoob"},"content":"public class ToDo extends Task {"},{"lineNumber":5,"author":{"gitId":"Juzzanoob"},"content":""},{"lineNumber":6,"author":{"gitId":"Juzzanoob"},"content":"    /**"},{"lineNumber":7,"author":{"gitId":"Juzzanoob"},"content":"     * Creates a new todo object."},{"lineNumber":8,"author":{"gitId":"Juzzanoob"},"content":"     *"},{"lineNumber":9,"author":{"gitId":"Juzzanoob"},"content":"     * @param details Details of the todo task."},{"lineNumber":10,"author":{"gitId":"Juzzanoob"},"content":"     */"},{"lineNumber":11,"author":{"gitId":"Juzzanoob"},"content":"    public ToDo(String details) {"},{"lineNumber":12,"author":{"gitId":"Juzzanoob"},"content":"        super(details);"},{"lineNumber":13,"author":{"gitId":"Juzzanoob"},"content":"    }"},{"lineNumber":14,"author":{"gitId":"Juzzanoob"},"content":""},{"lineNumber":15,"author":{"gitId":"Juzzanoob"},"content":"    /**"},{"lineNumber":16,"author":{"gitId":"Juzzanoob"},"content":"     * Private constructor to complete this task."},{"lineNumber":17,"author":{"gitId":"Juzzanoob"},"content":"     *"},{"lineNumber":18,"author":{"gitId":"Juzzanoob"},"content":"     * @param details Details of the todo task."},{"lineNumber":19,"author":{"gitId":"Juzzanoob"},"content":"     * @param indicator Denotes that event is completed regardless of boolean value passed."},{"lineNumber":20,"author":{"gitId":"Juzzanoob"},"content":"     */"},{"lineNumber":21,"author":{"gitId":"Juzzanoob"},"content":"    private ToDo(String details, boolean indicator) {"},{"lineNumber":22,"author":{"gitId":"Juzzanoob"},"content":"        super(details, indicator);"},{"lineNumber":23,"author":{"gitId":"Juzzanoob"},"content":"    }"},{"lineNumber":24,"author":{"gitId":"Juzzanoob"},"content":""},{"lineNumber":25,"author":{"gitId":"Juzzanoob"},"content":"    /**"},{"lineNumber":26,"author":{"gitId":"Juzzanoob"},"content":"     * Completes the todo task."},{"lineNumber":27,"author":{"gitId":"Juzzanoob"},"content":"     *"},{"lineNumber":28,"author":{"gitId":"Juzzanoob"},"content":"     * @return New completed todo object with the same details."},{"lineNumber":29,"author":{"gitId":"Juzzanoob"},"content":"     */"},{"lineNumber":30,"author":{"gitId":"Juzzanoob"},"content":"    public ToDo completeTask() {"},{"lineNumber":31,"author":{"gitId":"Juzzanoob"},"content":"        return new ToDo(this.getTask_details(), true);"},{"lineNumber":32,"author":{"gitId":"Juzzanoob"},"content":"    }"},{"lineNumber":33,"author":{"gitId":"Juzzanoob"},"content":""},{"lineNumber":34,"author":{"gitId":"Juzzanoob"},"content":"    /**"},{"lineNumber":35,"author":{"gitId":"Juzzanoob"},"content":"     * Returns a String describing the todo task as well as its completion status."},{"lineNumber":36,"author":{"gitId":"Juzzanoob"},"content":"     * @return"},{"lineNumber":37,"author":{"gitId":"Juzzanoob"},"content":"     */"},{"lineNumber":38,"author":{"gitId":"Juzzanoob"},"content":"    public String taskStatus() {"},{"lineNumber":39,"author":{"gitId":"Juzzanoob"},"content":"        if (this.isDone()) {"},{"lineNumber":40,"author":{"gitId":"Juzzanoob"},"content":"            return \"T 1 \" + this.getTask_details();"},{"lineNumber":41,"author":{"gitId":"Juzzanoob"},"content":"        } else {"},{"lineNumber":42,"author":{"gitId":"Juzzanoob"},"content":"            return \"T 0 \" + this.getTask_details();"},{"lineNumber":43,"author":{"gitId":"Juzzanoob"},"content":"        }"},{"lineNumber":44,"author":{"gitId":"Juzzanoob"},"content":"    }"},{"lineNumber":45,"author":{"gitId":"Juzzanoob"},"content":"}"}],"authorContributionMap":{"Juzzanoob":45}},{"path":"src/main/java/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Juzzanoob"},"content":"/**"},{"lineNumber":2,"author":{"gitId":"Juzzanoob"},"content":" * User Interface class to handle output to user."},{"lineNumber":3,"author":{"gitId":"Juzzanoob"},"content":" */"},{"lineNumber":4,"author":{"gitId":"Juzzanoob"},"content":"public class Ui {"},{"lineNumber":5,"author":{"gitId":"Juzzanoob"},"content":""},{"lineNumber":6,"author":{"gitId":"Juzzanoob"},"content":"    /**"},{"lineNumber":7,"author":{"gitId":"Juzzanoob"},"content":"     * Displays the welcome message when user enters program."},{"lineNumber":8,"author":{"gitId":"Juzzanoob"},"content":"     */"},{"lineNumber":9,"author":{"gitId":"Juzzanoob"},"content":"    public void displayWelcomeMessage() {"},{"lineNumber":10,"author":{"gitId":"Juzzanoob"},"content":"        System.out.println(\"Hello! I\u0027m Duke\");"},{"lineNumber":11,"author":{"gitId":"Juzzanoob"},"content":"        System.out.println(\"What can I do for you?\");"},{"lineNumber":12,"author":{"gitId":"Juzzanoob"},"content":"    }"},{"lineNumber":13,"author":{"gitId":"Juzzanoob"},"content":""},{"lineNumber":14,"author":{"gitId":"Juzzanoob"},"content":"    /**"},{"lineNumber":15,"author":{"gitId":"Juzzanoob"},"content":"     * Displays the closing message when user exits program."},{"lineNumber":16,"author":{"gitId":"Juzzanoob"},"content":"     */"},{"lineNumber":17,"author":{"gitId":"Juzzanoob"},"content":"    public void displayClosingMessage() {"},{"lineNumber":18,"author":{"gitId":"Juzzanoob"},"content":"        System.out.println(\"Bye. Hope to see you again soon!\");"},{"lineNumber":19,"author":{"gitId":"Juzzanoob"},"content":"    }"},{"lineNumber":20,"author":{"gitId":"Juzzanoob"},"content":""},{"lineNumber":21,"author":{"gitId":"Juzzanoob"},"content":"    /**"},{"lineNumber":22,"author":{"gitId":"Juzzanoob"},"content":"     * Displays lists of tasks."},{"lineNumber":23,"author":{"gitId":"Juzzanoob"},"content":"     *"},{"lineNumber":24,"author":{"gitId":"Juzzanoob"},"content":"     * @param taskList TaskList containing list of tasks."},{"lineNumber":25,"author":{"gitId":"Juzzanoob"},"content":"     */"},{"lineNumber":26,"author":{"gitId":"Juzzanoob"},"content":"    public void displayListMessage(TaskList taskList) {"},{"lineNumber":27,"author":{"gitId":"Juzzanoob"},"content":"        System.out.println(\"Here are the tasks in your list:\");"},{"lineNumber":28,"author":{"gitId":"Juzzanoob"},"content":"        System.out.println(taskList.getList());"},{"lineNumber":29,"author":{"gitId":"Juzzanoob"},"content":"    }"},{"lineNumber":30,"author":{"gitId":"Juzzanoob"},"content":""},{"lineNumber":31,"author":{"gitId":"Juzzanoob"},"content":"    /**"},{"lineNumber":32,"author":{"gitId":"Juzzanoob"},"content":"     * Displays message when user adds a task."},{"lineNumber":33,"author":{"gitId":"Juzzanoob"},"content":"     *"},{"lineNumber":34,"author":{"gitId":"Juzzanoob"},"content":"     * @param task Task to be added."},{"lineNumber":35,"author":{"gitId":"Juzzanoob"},"content":"     * @param taskList TaskList containing updated list of tasks."},{"lineNumber":36,"author":{"gitId":"Juzzanoob"},"content":"     */"},{"lineNumber":37,"author":{"gitId":"Juzzanoob"},"content":"    public void displayTaskAdded(Task task, TaskList taskList) {"},{"lineNumber":38,"author":{"gitId":"Juzzanoob"},"content":"        System.out.println(\"Got it. I\u0027ve added this task:\");"},{"lineNumber":39,"author":{"gitId":"Juzzanoob"},"content":"        System.out.println(task.taskStatus());"},{"lineNumber":40,"author":{"gitId":"Juzzanoob"},"content":"        System.out.println(\"Now you have \" + taskList.getSize() + \" tasks in the list\");"},{"lineNumber":41,"author":{"gitId":"Juzzanoob"},"content":"    }"},{"lineNumber":42,"author":{"gitId":"Juzzanoob"},"content":""},{"lineNumber":43,"author":{"gitId":"Juzzanoob"},"content":"    /**"},{"lineNumber":44,"author":{"gitId":"Juzzanoob"},"content":"     * Displays message when user completes a task."},{"lineNumber":45,"author":{"gitId":"Juzzanoob"},"content":"     *"},{"lineNumber":46,"author":{"gitId":"Juzzanoob"},"content":"     * @param task Task that was completed."},{"lineNumber":47,"author":{"gitId":"Juzzanoob"},"content":"     */"},{"lineNumber":48,"author":{"gitId":"Juzzanoob"},"content":"    public void displayTaskCompleted(Task task) {"},{"lineNumber":49,"author":{"gitId":"Juzzanoob"},"content":"        System.out.println(\"Nice! I\u0027ve marked this task as done:\");"},{"lineNumber":50,"author":{"gitId":"Juzzanoob"},"content":"        System.out.println(task.taskStatus());"},{"lineNumber":51,"author":{"gitId":"Juzzanoob"},"content":"    }"},{"lineNumber":52,"author":{"gitId":"Juzzanoob"},"content":""},{"lineNumber":53,"author":{"gitId":"Juzzanoob"},"content":"    /**"},{"lineNumber":54,"author":{"gitId":"Juzzanoob"},"content":"     * Displays message when user deletes a task."},{"lineNumber":55,"author":{"gitId":"Juzzanoob"},"content":"     *"},{"lineNumber":56,"author":{"gitId":"Juzzanoob"},"content":"     * @param task Task that was deleted."},{"lineNumber":57,"author":{"gitId":"Juzzanoob"},"content":"     * @param taskList TaskList containing updated list of tasks."},{"lineNumber":58,"author":{"gitId":"Juzzanoob"},"content":"     */"},{"lineNumber":59,"author":{"gitId":"Juzzanoob"},"content":"    public void displayTaskDeleted(Task task, TaskList taskList) {"},{"lineNumber":60,"author":{"gitId":"Juzzanoob"},"content":"        System.out.println(\"Noted. I have removed this task:\");"},{"lineNumber":61,"author":{"gitId":"Juzzanoob"},"content":"        System.out.println(task.taskStatus());"},{"lineNumber":62,"author":{"gitId":"Juzzanoob"},"content":"        System.out.println(\"Now you have \" + taskList.getSize() + \" tasks in the list\");"},{"lineNumber":63,"author":{"gitId":"Juzzanoob"},"content":"    }"},{"lineNumber":64,"author":{"gitId":"Juzzanoob"},"content":""},{"lineNumber":65,"author":{"gitId":"Juzzanoob"},"content":"    /**"},{"lineNumber":66,"author":{"gitId":"Juzzanoob"},"content":"     * Displays list of tasks containing a given keyword."},{"lineNumber":67,"author":{"gitId":"Juzzanoob"},"content":"     *"},{"lineNumber":68,"author":{"gitId":"Juzzanoob"},"content":"     * @param keyword Keyword used to search through tasks."},{"lineNumber":69,"author":{"gitId":"Juzzanoob"},"content":"     * @param taskList TaskList containing list of tasks to be searched through."},{"lineNumber":70,"author":{"gitId":"Juzzanoob"},"content":"     */"},{"lineNumber":71,"author":{"gitId":"Juzzanoob"},"content":"    public void displayTaskSearch(String keyword, TaskList taskList) {"},{"lineNumber":72,"author":{"gitId":"Juzzanoob"},"content":"        System.out.println(\"Here are the matching tasks in your list:\");"},{"lineNumber":73,"author":{"gitId":"Juzzanoob"},"content":"        System.out.println(taskList.search(keyword));"},{"lineNumber":74,"author":{"gitId":"Juzzanoob"},"content":"    }"},{"lineNumber":75,"author":{"gitId":"Juzzanoob"},"content":""},{"lineNumber":76,"author":{"gitId":"Juzzanoob"},"content":"    /**"},{"lineNumber":77,"author":{"gitId":"Juzzanoob"},"content":"     * Displays message when list of tasks is not found."},{"lineNumber":78,"author":{"gitId":"Juzzanoob"},"content":"     */"},{"lineNumber":79,"author":{"gitId":"Juzzanoob"},"content":"    public void displayLoadingError() {"},{"lineNumber":80,"author":{"gitId":"Juzzanoob"},"content":"        System.out.println(\"List of Tasks not found.\");"},{"lineNumber":81,"author":{"gitId":"Juzzanoob"},"content":"    }"},{"lineNumber":82,"author":{"gitId":"Juzzanoob"},"content":"}"}],"authorContributionMap":{"Juzzanoob":82}},{"path":"test/DeadlineTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Juzzanoob"},"content":"import java.time.LocalDate;"},{"lineNumber":2,"author":{"gitId":"Juzzanoob"},"content":"import java.time.LocalTime;"},{"lineNumber":3,"author":{"gitId":"Juzzanoob"},"content":"import org.junit.jupiter.api.Test;"},{"lineNumber":4,"author":{"gitId":"Juzzanoob"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;"},{"lineNumber":5,"author":{"gitId":"Juzzanoob"},"content":"import static org.junit.jupiter.api.Assertions.fail;"},{"lineNumber":6,"author":{"gitId":"Juzzanoob"},"content":""},{"lineNumber":7,"author":{"gitId":"Juzzanoob"},"content":"public class DeadlineTest {"},{"lineNumber":8,"author":{"gitId":"Juzzanoob"},"content":""},{"lineNumber":9,"author":{"gitId":"Juzzanoob"},"content":"    @Test"},{"lineNumber":10,"author":{"gitId":"Juzzanoob"},"content":"    public void constructor_normalInputs_taskUncompleted() {"},{"lineNumber":11,"author":{"gitId":"Juzzanoob"},"content":"        LocalDate date \u003d LocalDate.of(2021, 01, 01);"},{"lineNumber":12,"author":{"gitId":"Juzzanoob"},"content":"        LocalTime time \u003d LocalTime.of(12, 34);"},{"lineNumber":13,"author":{"gitId":"Juzzanoob"},"content":""},{"lineNumber":14,"author":{"gitId":"Juzzanoob"},"content":"        assertEquals(false, new Deadline(\"test\", date, time).isDone());"},{"lineNumber":15,"author":{"gitId":"Juzzanoob"},"content":"    }"},{"lineNumber":16,"author":{"gitId":"Juzzanoob"},"content":""},{"lineNumber":17,"author":{"gitId":"Juzzanoob"},"content":"    @Test"},{"lineNumber":18,"author":{"gitId":"Juzzanoob"},"content":"    public void outputFormat_normalInputs_correctFormat() {"},{"lineNumber":19,"author":{"gitId":"Juzzanoob"},"content":"        LocalDate date \u003d LocalDate.of(2021, 01, 01);"},{"lineNumber":20,"author":{"gitId":"Juzzanoob"},"content":"        LocalTime time \u003d LocalTime.of(12, 34);"},{"lineNumber":21,"author":{"gitId":"Juzzanoob"},"content":""},{"lineNumber":22,"author":{"gitId":"Juzzanoob"},"content":"        assertEquals(\"D 0 test (by: 1 Jan 2021 1234 )\","},{"lineNumber":23,"author":{"gitId":"Juzzanoob"},"content":"                new Deadline(\"test\", date, time).taskStatus());"},{"lineNumber":24,"author":{"gitId":"Juzzanoob"},"content":"    }"},{"lineNumber":25,"author":{"gitId":"Juzzanoob"},"content":"}"}],"authorContributionMap":{"Juzzanoob":25}},{"path":"test/EventTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Juzzanoob"},"content":"import java.time.LocalDate;"},{"lineNumber":2,"author":{"gitId":"Juzzanoob"},"content":"import java.time.LocalTime;"},{"lineNumber":3,"author":{"gitId":"Juzzanoob"},"content":"import org.junit.jupiter.api.Test;"},{"lineNumber":4,"author":{"gitId":"Juzzanoob"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;"},{"lineNumber":5,"author":{"gitId":"Juzzanoob"},"content":"import static org.junit.jupiter.api.Assertions.fail;"},{"lineNumber":6,"author":{"gitId":"Juzzanoob"},"content":""},{"lineNumber":7,"author":{"gitId":"Juzzanoob"},"content":"public class EventTest {"},{"lineNumber":8,"author":{"gitId":"Juzzanoob"},"content":""},{"lineNumber":9,"author":{"gitId":"Juzzanoob"},"content":"    @Test"},{"lineNumber":10,"author":{"gitId":"Juzzanoob"},"content":"    public void constructor_normalInputs_taskUncompleted() {"},{"lineNumber":11,"author":{"gitId":"Juzzanoob"},"content":"        LocalDate date \u003d LocalDate.of(2021, 01, 01);"},{"lineNumber":12,"author":{"gitId":"Juzzanoob"},"content":"        LocalTime time \u003d LocalTime.of(12, 34);"},{"lineNumber":13,"author":{"gitId":"Juzzanoob"},"content":""},{"lineNumber":14,"author":{"gitId":"Juzzanoob"},"content":"        assertEquals(false, new Event(\"test\", date, time).isDone());"},{"lineNumber":15,"author":{"gitId":"Juzzanoob"},"content":"    }"},{"lineNumber":16,"author":{"gitId":"Juzzanoob"},"content":""},{"lineNumber":17,"author":{"gitId":"Juzzanoob"},"content":"    @Test"},{"lineNumber":18,"author":{"gitId":"Juzzanoob"},"content":"    public void outputFormat_normalInputs_correctFormat() {"},{"lineNumber":19,"author":{"gitId":"Juzzanoob"},"content":"        LocalDate date \u003d LocalDate.of(2021, 01, 01);"},{"lineNumber":20,"author":{"gitId":"Juzzanoob"},"content":"        LocalTime time \u003d LocalTime.of(12, 34);"},{"lineNumber":21,"author":{"gitId":"Juzzanoob"},"content":""},{"lineNumber":22,"author":{"gitId":"Juzzanoob"},"content":"        assertEquals(\"E 0 test (on: 1 Jan 2021 1234 )\","},{"lineNumber":23,"author":{"gitId":"Juzzanoob"},"content":"                new Event(\"test\", date, time).taskStatus());"},{"lineNumber":24,"author":{"gitId":"Juzzanoob"},"content":"    }"},{"lineNumber":25,"author":{"gitId":"Juzzanoob"},"content":"}"}],"authorContributionMap":{"Juzzanoob":25}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"Juzzanoob"},"content":"todo borrow book"},{"lineNumber":2,"author":{"gitId":"Juzzanoob"},"content":"deadline return book /by Sunday"},{"lineNumber":3,"author":{"gitId":"Juzzanoob"},"content":"done 1"},{"lineNumber":4,"author":{"gitId":"Juzzanoob"},"content":"list"},{"lineNumber":5,"author":{"gitId":"Juzzanoob"},"content":"bye"}],"authorContributionMap":{"Juzzanoob":5}}]
