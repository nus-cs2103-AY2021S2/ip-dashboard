[{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027checkstyle\u0027"},{"lineNumber":5,"author":{"gitId":"Juzzanoob"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00276.1.0\u0027"},{"lineNumber":6,"author":{"gitId":"-"},"content":"}"},{"lineNumber":7,"author":{"gitId":"-"},"content":""},{"lineNumber":8,"author":{"gitId":"-"},"content":"repositories {"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    mavenCentral()"},{"lineNumber":10,"author":{"gitId":"-"},"content":"}"},{"lineNumber":11,"author":{"gitId":"-"},"content":""},{"lineNumber":12,"author":{"gitId":"-"},"content":"dependencies {"},{"lineNumber":13,"author":{"gitId":"Juzzanoob"},"content":"    String javaFxVersion \u003d \u002711\u0027"},{"lineNumber":14,"author":{"gitId":"Juzzanoob"},"content":""},{"lineNumber":15,"author":{"gitId":"Juzzanoob"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027"},{"lineNumber":16,"author":{"gitId":"Juzzanoob"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"},{"lineNumber":17,"author":{"gitId":"Juzzanoob"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"},{"lineNumber":18,"author":{"gitId":"Juzzanoob"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027"},{"lineNumber":19,"author":{"gitId":"Juzzanoob"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"},{"lineNumber":20,"author":{"gitId":"Juzzanoob"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"},{"lineNumber":21,"author":{"gitId":"Juzzanoob"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027"},{"lineNumber":22,"author":{"gitId":"Juzzanoob"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"},{"lineNumber":23,"author":{"gitId":"Juzzanoob"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"},{"lineNumber":24,"author":{"gitId":"Juzzanoob"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027"},{"lineNumber":25,"author":{"gitId":"Juzzanoob"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"},{"lineNumber":26,"author":{"gitId":"Juzzanoob"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"},{"lineNumber":27,"author":{"gitId":"Juzzanoob"},"content":""},{"lineNumber":28,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.5.0\u0027"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.5.0\u0027"},{"lineNumber":30,"author":{"gitId":"-"},"content":"}"},{"lineNumber":31,"author":{"gitId":"-"},"content":""},{"lineNumber":32,"author":{"gitId":"-"},"content":"test {"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    useJUnitPlatform()"},{"lineNumber":34,"author":{"gitId":"-"},"content":""},{"lineNumber":35,"author":{"gitId":"-"},"content":"    testLogging {"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\""},{"lineNumber":37,"author":{"gitId":"-"},"content":""},{"lineNumber":38,"author":{"gitId":"-"},"content":"        showExceptions true"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\""},{"lineNumber":40,"author":{"gitId":"-"},"content":"        showCauses true"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        showStackTraces true"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":44,"author":{"gitId":"-"},"content":"}"},{"lineNumber":45,"author":{"gitId":"-"},"content":""},{"lineNumber":46,"author":{"gitId":"-"},"content":"application {"},{"lineNumber":47,"author":{"gitId":"Juzzanoob"},"content":"    mainClassName \u003d \"Launcher\""},{"lineNumber":48,"author":{"gitId":"-"},"content":"}"},{"lineNumber":49,"author":{"gitId":"-"},"content":""},{"lineNumber":50,"author":{"gitId":"-"},"content":"shadowJar {"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    archiveBaseName \u003d \"duke\""},{"lineNumber":52,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null"},{"lineNumber":53,"author":{"gitId":"-"},"content":"}"},{"lineNumber":54,"author":{"gitId":"-"},"content":""},{"lineNumber":55,"author":{"gitId":"-"},"content":"checkstyle {"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    toolVersion \u003d \u00278.29\u0027"},{"lineNumber":57,"author":{"gitId":"-"},"content":"}"},{"lineNumber":58,"author":{"gitId":"-"},"content":""},{"lineNumber":59,"author":{"gitId":"-"},"content":"run{"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in"},{"lineNumber":61,"author":{"gitId":"-"},"content":"}"}],"authorContributionMap":{"Juzzanoob":17,"-":44}},{"path":"docs/README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"# User Guide"},{"lineNumber":2,"author":{"gitId":"Juzzanoob"},"content":"Welcome to the Duke User Guide! Duke is a task list manager that you"},{"lineNumber":3,"author":{"gitId":"Juzzanoob"},"content":"can use to add, view and delete your tasks, amongst other features."},{"lineNumber":4,"author":{"gitId":"-"},"content":""},{"lineNumber":5,"author":{"gitId":"-"},"content":"## Features "},{"lineNumber":6,"author":{"gitId":"-"},"content":""},{"lineNumber":7,"author":{"gitId":"Juzzanoob"},"content":"### Add a New Task"},{"lineNumber":8,"author":{"gitId":"Juzzanoob"},"content":"Duke allows you to add 3 different kinds of tasks: ToDos, Events and Deadlines."},{"lineNumber":9,"author":{"gitId":"Juzzanoob"},"content":""},{"lineNumber":10,"author":{"gitId":"Juzzanoob"},"content":"##### Adding a ToDo Task"},{"lineNumber":11,"author":{"gitId":"Juzzanoob"},"content":"Use the following command format for adding a ToDo Task: `todo` (space) `\u003ctask description\u003e`"},{"lineNumber":12,"author":{"gitId":"Juzzanoob"},"content":""},{"lineNumber":13,"author":{"gitId":"Juzzanoob"},"content":"Example: todo score A+ in CS2103"},{"lineNumber":14,"author":{"gitId":"Juzzanoob"},"content":""},{"lineNumber":15,"author":{"gitId":"Juzzanoob"},"content":"##### Adding an Event"},{"lineNumber":16,"author":{"gitId":"Juzzanoob"},"content":"Use the following command format for adding an Event with a specified time and date: "},{"lineNumber":17,"author":{"gitId":"Juzzanoob"},"content":"`event` (space) `\u003ctask description\u003e` (space) `/by` (space) `dd/mm/yyyy` (space) `HHmm`"},{"lineNumber":18,"author":{"gitId":"Juzzanoob"},"content":""},{"lineNumber":19,"author":{"gitId":"Juzzanoob"},"content":"Example: event score A+ in CS2103 /by 01/05/2021 2359"},{"lineNumber":20,"author":{"gitId":"Juzzanoob"},"content":""},{"lineNumber":21,"author":{"gitId":"Juzzanoob"},"content":"**Note:** None of your task description\u0027s words may start with \"/\", or Duke will not read your input correctly!"},{"lineNumber":22,"author":{"gitId":"Juzzanoob"},"content":""},{"lineNumber":23,"author":{"gitId":"Juzzanoob"},"content":"##### Adding a Deadline"},{"lineNumber":24,"author":{"gitId":"Juzzanoob"},"content":"Use the following command format for adding a Deadline with a specified time and date:"},{"lineNumber":25,"author":{"gitId":"Juzzanoob"},"content":"`deadline` (space) `\u003ctask description\u003e` (space) `/by` (space) `dd/mm/yyyy` (space) `HHmm`"},{"lineNumber":26,"author":{"gitId":"Juzzanoob"},"content":""},{"lineNumber":27,"author":{"gitId":"Juzzanoob"},"content":"Example: deadline score A+ in CS2103 /by 01/05/2021 2359"},{"lineNumber":28,"author":{"gitId":"Juzzanoob"},"content":""},{"lineNumber":29,"author":{"gitId":"Juzzanoob"},"content":"**Note:** None of your task description\u0027s words may start with \"/\", or Duke will not read your input correctly!"},{"lineNumber":30,"author":{"gitId":"Juzzanoob"},"content":""},{"lineNumber":31,"author":{"gitId":"Juzzanoob"},"content":"### View your Task List"},{"lineNumber":32,"author":{"gitId":"Juzzanoob"},"content":"Use the `list` command to see your entire Task List."},{"lineNumber":33,"author":{"gitId":"Juzzanoob"},"content":""},{"lineNumber":34,"author":{"gitId":"Juzzanoob"},"content":"Tasks will have the following format in the list:"},{"lineNumber":35,"author":{"gitId":"Juzzanoob"},"content":""},{"lineNumber":36,"author":{"gitId":"Juzzanoob"},"content":"`task type` `completion status` `task description` `day` `time`"},{"lineNumber":37,"author":{"gitId":"Juzzanoob"},"content":""},{"lineNumber":38,"author":{"gitId":"Juzzanoob"},"content":"1. Task Type: Indicates if task is a ToDo, Deadline or Event."},{"lineNumber":39,"author":{"gitId":"Juzzanoob"},"content":"1. Completion Status: Indicates if task has been completed. All tasks will be uncompleted "},{"lineNumber":40,"author":{"gitId":"Juzzanoob"},"content":"   (indicated by a \"0\") by default. A \"1\" indicates that the task is completed."},{"lineNumber":41,"author":{"gitId":"Juzzanoob"},"content":"1. Task Description: Description of the task."},{"lineNumber":42,"author":{"gitId":"Juzzanoob"},"content":"1. Day: Date of task (if applicable)."},{"lineNumber":43,"author":{"gitId":"Juzzanoob"},"content":"1. Time: Time of task (if applicable)."},{"lineNumber":44,"author":{"gitId":"Juzzanoob"},"content":""},{"lineNumber":45,"author":{"gitId":"Juzzanoob"},"content":"### Complete a Task"},{"lineNumber":46,"author":{"gitId":"Juzzanoob"},"content":"Use the `done` command to complete a task in your Task List."},{"lineNumber":47,"author":{"gitId":"Juzzanoob"},"content":""},{"lineNumber":48,"author":{"gitId":"Juzzanoob"},"content":"Use the following command format for completing a task: `done` (space) `\u003clist number of task to complete\u003e`"},{"lineNumber":49,"author":{"gitId":"Juzzanoob"},"content":""},{"lineNumber":50,"author":{"gitId":"Juzzanoob"},"content":"Example: done 1"},{"lineNumber":51,"author":{"gitId":"Juzzanoob"},"content":""},{"lineNumber":52,"author":{"gitId":"Juzzanoob"},"content":"**Note:** You have to input a correct list number! If the number is larger than the current task list, Duke will"},{"lineNumber":53,"author":{"gitId":"Juzzanoob"},"content":"not be able to process your command."},{"lineNumber":54,"author":{"gitId":"Juzzanoob"},"content":""},{"lineNumber":55,"author":{"gitId":"Juzzanoob"},"content":"### Delete a Task"},{"lineNumber":56,"author":{"gitId":"Juzzanoob"},"content":"Use the \u0027delete\u0027 command to delete a task from your Task List."},{"lineNumber":57,"author":{"gitId":"Juzzanoob"},"content":""},{"lineNumber":58,"author":{"gitId":"Juzzanoob"},"content":"Use the following command format for deleting a task: `delete` (space) `\u003clist number of task to delete\u003e`"},{"lineNumber":59,"author":{"gitId":"Juzzanoob"},"content":""},{"lineNumber":60,"author":{"gitId":"Juzzanoob"},"content":"Example: delete 1"},{"lineNumber":61,"author":{"gitId":"Juzzanoob"},"content":""},{"lineNumber":62,"author":{"gitId":"Juzzanoob"},"content":"**Note:** You have to input a correct list number! If the number is larger than the current task list, Duke will"},{"lineNumber":63,"author":{"gitId":"Juzzanoob"},"content":"not be able to process your command."},{"lineNumber":64,"author":{"gitId":"Juzzanoob"},"content":""},{"lineNumber":65,"author":{"gitId":"Juzzanoob"},"content":"### Search for Tasks"},{"lineNumber":66,"author":{"gitId":"Juzzanoob"},"content":"Use the `find` command to search for specific tasks in your Task List by their Task Description."},{"lineNumber":67,"author":{"gitId":"Juzzanoob"},"content":""},{"lineNumber":68,"author":{"gitId":"Juzzanoob"},"content":"Use the following command format for searching for tasks: `find` (space) `\u003ckeyword\u003e`"},{"lineNumber":69,"author":{"gitId":"Juzzanoob"},"content":""},{"lineNumber":70,"author":{"gitId":"Juzzanoob"},"content":"Example: find A+"},{"lineNumber":71,"author":{"gitId":"Juzzanoob"},"content":""},{"lineNumber":72,"author":{"gitId":"Juzzanoob"},"content":"**Note:** You may search for tasks with uncompleted words, e.g. \"Scor\" to search for \"Score\""},{"lineNumber":73,"author":{"gitId":"Juzzanoob"},"content":""},{"lineNumber":74,"author":{"gitId":"Juzzanoob"},"content":"### Ask for Help"},{"lineNumber":75,"author":{"gitId":"Juzzanoob"},"content":"Use the `help` command to get a quick summary of the commands you can use in Duke."},{"lineNumber":76,"author":{"gitId":"Juzzanoob"},"content":""},{"lineNumber":77,"author":{"gitId":"Juzzanoob"},"content":"### Close Duke"},{"lineNumber":78,"author":{"gitId":"Juzzanoob"},"content":"Use the `bye` command to close Duke. You may also use the close button at the top right to close Duke."},{"lineNumber":79,"author":{"gitId":"-"},"content":""},{"lineNumber":80,"author":{"gitId":"-"},"content":"## Usage"},{"lineNumber":81,"author":{"gitId":"-"},"content":""},{"lineNumber":82,"author":{"gitId":"Juzzanoob"},"content":"### `todo` - Creates a ToDo Task"},{"lineNumber":83,"author":{"gitId":"-"},"content":""},{"lineNumber":84,"author":{"gitId":"Juzzanoob"},"content":"Creates a ToDo Task in the Task List."},{"lineNumber":85,"author":{"gitId":"-"},"content":""},{"lineNumber":86,"author":{"gitId":"-"},"content":"Example of usage: "},{"lineNumber":87,"author":{"gitId":"-"},"content":""},{"lineNumber":88,"author":{"gitId":"Juzzanoob"},"content":"`todo score A+ in CS2103`"},{"lineNumber":89,"author":{"gitId":"Juzzanoob"},"content":""},{"lineNumber":90,"author":{"gitId":"Juzzanoob"},"content":"### \u0027event\u0027 - Creates an Event"},{"lineNumber":91,"author":{"gitId":"-"},"content":""},{"lineNumber":92,"author":{"gitId":"Juzzanoob"},"content":"Creates an Event in the Task List."},{"lineNumber":93,"author":{"gitId":"-"},"content":""},{"lineNumber":94,"author":{"gitId":"-"},"content":"Example of usage:"},{"lineNumber":95,"author":{"gitId":"-"},"content":""},{"lineNumber":96,"author":{"gitId":"Juzzanoob"},"content":"`event score A+ in CS2103 /by 01/05/2021 2359`"},{"lineNumber":97,"author":{"gitId":"Juzzanoob"},"content":""},{"lineNumber":98,"author":{"gitId":"Juzzanoob"},"content":"### `deadline` - Creates a Deadline"},{"lineNumber":99,"author":{"gitId":"Juzzanoob"},"content":""},{"lineNumber":100,"author":{"gitId":"Juzzanoob"},"content":"Creates a Deadline in the Task List."},{"lineNumber":101,"author":{"gitId":"-"},"content":""},{"lineNumber":102,"author":{"gitId":"Juzzanoob"},"content":"Example of usage:"},{"lineNumber":103,"author":{"gitId":"Juzzanoob"},"content":""},{"lineNumber":104,"author":{"gitId":"Juzzanoob"},"content":"`deadline score A+ in CS2103 /by 01/05/2021 2359`"},{"lineNumber":105,"author":{"gitId":"Juzzanoob"},"content":""},{"lineNumber":106,"author":{"gitId":"Juzzanoob"},"content":"### `list` - Views the Entire Task List"},{"lineNumber":107,"author":{"gitId":"Juzzanoob"},"content":""},{"lineNumber":108,"author":{"gitId":"Juzzanoob"},"content":"Views your entire Task List."},{"lineNumber":109,"author":{"gitId":"Juzzanoob"},"content":""},{"lineNumber":110,"author":{"gitId":"Juzzanoob"},"content":"Example of usage:"},{"lineNumber":111,"author":{"gitId":"Juzzanoob"},"content":""},{"lineNumber":112,"author":{"gitId":"Juzzanoob"},"content":"`list`"},{"lineNumber":113,"author":{"gitId":"Juzzanoob"},"content":""},{"lineNumber":114,"author":{"gitId":"Juzzanoob"},"content":"### `done` - Completes a Task"},{"lineNumber":115,"author":{"gitId":"Juzzanoob"},"content":""},{"lineNumber":116,"author":{"gitId":"Juzzanoob"},"content":"Completes a task in the Task List."},{"lineNumber":117,"author":{"gitId":"Juzzanoob"},"content":""},{"lineNumber":118,"author":{"gitId":"Juzzanoob"},"content":"Example of usage:"},{"lineNumber":119,"author":{"gitId":"Juzzanoob"},"content":""},{"lineNumber":120,"author":{"gitId":"Juzzanoob"},"content":"`done 1`"},{"lineNumber":121,"author":{"gitId":"Juzzanoob"},"content":""},{"lineNumber":122,"author":{"gitId":"Juzzanoob"},"content":"**Note:** Task number is ordered by the Task List "},{"lineNumber":123,"author":{"gitId":"Juzzanoob"},"content":"(first task in the list is 1, second is 2, etc.)"},{"lineNumber":124,"author":{"gitId":"Juzzanoob"},"content":""},{"lineNumber":125,"author":{"gitId":"Juzzanoob"},"content":"### `delete` - Deletes a Task"},{"lineNumber":126,"author":{"gitId":"Juzzanoob"},"content":""},{"lineNumber":127,"author":{"gitId":"Juzzanoob"},"content":"Deletes a task in the Task List."},{"lineNumber":128,"author":{"gitId":"Juzzanoob"},"content":""},{"lineNumber":129,"author":{"gitId":"Juzzanoob"},"content":"Example of usage:"},{"lineNumber":130,"author":{"gitId":"Juzzanoob"},"content":""},{"lineNumber":131,"author":{"gitId":"Juzzanoob"},"content":"`delete 1`"},{"lineNumber":132,"author":{"gitId":"Juzzanoob"},"content":""},{"lineNumber":133,"author":{"gitId":"Juzzanoob"},"content":"**Note:** Task number is ordered by the Task List"},{"lineNumber":134,"author":{"gitId":"Juzzanoob"},"content":"(first task in the list is 1, second is 2, etc.)"},{"lineNumber":135,"author":{"gitId":"Juzzanoob"},"content":""},{"lineNumber":136,"author":{"gitId":"Juzzanoob"},"content":"### `find` - Find Tasks"},{"lineNumber":137,"author":{"gitId":"Juzzanoob"},"content":""},{"lineNumber":138,"author":{"gitId":"Juzzanoob"},"content":"Finds tasks in the Task List using a keyword."},{"lineNumber":139,"author":{"gitId":"Juzzanoob"},"content":""},{"lineNumber":140,"author":{"gitId":"Juzzanoob"},"content":"Example of usage:"},{"lineNumber":141,"author":{"gitId":"Juzzanoob"},"content":""},{"lineNumber":142,"author":{"gitId":"Juzzanoob"},"content":"`find score`"},{"lineNumber":143,"author":{"gitId":"Juzzanoob"},"content":""},{"lineNumber":144,"author":{"gitId":"Juzzanoob"},"content":"### `help` - View Summary of Commands"},{"lineNumber":145,"author":{"gitId":"Juzzanoob"},"content":""},{"lineNumber":146,"author":{"gitId":"Juzzanoob"},"content":"Gets a quick summary of the commands you can use."},{"lineNumber":147,"author":{"gitId":"Juzzanoob"},"content":""},{"lineNumber":148,"author":{"gitId":"Juzzanoob"},"content":"Example of usage:"},{"lineNumber":149,"author":{"gitId":"Juzzanoob"},"content":""},{"lineNumber":150,"author":{"gitId":"Juzzanoob"},"content":"`help`"},{"lineNumber":151,"author":{"gitId":"Juzzanoob"},"content":""},{"lineNumber":152,"author":{"gitId":"Juzzanoob"},"content":"### `bye` - Close Duke"},{"lineNumber":153,"author":{"gitId":"Juzzanoob"},"content":""},{"lineNumber":154,"author":{"gitId":"Juzzanoob"},"content":"Closes Duke."},{"lineNumber":155,"author":{"gitId":"-"},"content":""},{"lineNumber":156,"author":{"gitId":"Juzzanoob"},"content":"Example of usage:"},{"lineNumber":157,"author":{"gitId":"-"},"content":""},{"lineNumber":158,"author":{"gitId":"Juzzanoob"},"content":"`bye`"}],"authorContributionMap":{"Juzzanoob":140,"-":18}},{"path":"dukeTaskList.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"Juzzanoob"},"content":"T 0 Homework"},{"lineNumber":2,"author":{"gitId":"Juzzanoob"},"content":"D 0 CS2106 Assignment 03/03/2021 2359 (by: 03 Mar 2021 2359 )"}],"authorContributionMap":{"Juzzanoob":2}},{"path":"src/main/java/ByeCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Juzzanoob"},"content":"public class ByeCommand extends Command {"},{"lineNumber":2,"author":{"gitId":"Juzzanoob"},"content":""},{"lineNumber":3,"author":{"gitId":"Juzzanoob"},"content":"    public ByeCommand(Parser parser, Ui ui, Storage storage) {"},{"lineNumber":4,"author":{"gitId":"Juzzanoob"},"content":"        super(parser, ui, storage);"},{"lineNumber":5,"author":{"gitId":"Juzzanoob"},"content":"    }"},{"lineNumber":6,"author":{"gitId":"Juzzanoob"},"content":""},{"lineNumber":7,"author":{"gitId":"Juzzanoob"},"content":"    public String execute() {"},{"lineNumber":8,"author":{"gitId":"Juzzanoob"},"content":"        String output \u003d userInterface.displayClosingMessage();"},{"lineNumber":9,"author":{"gitId":"Juzzanoob"},"content":"        return output;"},{"lineNumber":10,"author":{"gitId":"Juzzanoob"},"content":"    }"},{"lineNumber":11,"author":{"gitId":"Juzzanoob"},"content":"}"}],"authorContributionMap":{"Juzzanoob":11}},{"path":"src/main/java/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Juzzanoob"},"content":"public abstract class Command {"},{"lineNumber":2,"author":{"gitId":"Juzzanoob"},"content":""},{"lineNumber":3,"author":{"gitId":"Juzzanoob"},"content":"    protected Ui userInterface;"},{"lineNumber":4,"author":{"gitId":"Juzzanoob"},"content":"    protected Storage storage;"},{"lineNumber":5,"author":{"gitId":"Juzzanoob"},"content":"    protected TaskList taskList;"},{"lineNumber":6,"author":{"gitId":"Juzzanoob"},"content":"    protected Parser parser;"},{"lineNumber":7,"author":{"gitId":"Juzzanoob"},"content":""},{"lineNumber":8,"author":{"gitId":"Juzzanoob"},"content":"    public Command(Parser parser, Ui ui, Storage storage) {"},{"lineNumber":9,"author":{"gitId":"Juzzanoob"},"content":""},{"lineNumber":10,"author":{"gitId":"Juzzanoob"},"content":"        userInterface \u003d ui;"},{"lineNumber":11,"author":{"gitId":"Juzzanoob"},"content":"        this.parser \u003d parser;"},{"lineNumber":12,"author":{"gitId":"Juzzanoob"},"content":"        this.storage \u003d storage;"},{"lineNumber":13,"author":{"gitId":"Juzzanoob"},"content":""},{"lineNumber":14,"author":{"gitId":"Juzzanoob"},"content":"        try {"},{"lineNumber":15,"author":{"gitId":"Juzzanoob"},"content":"            taskList \u003d new TaskList(storage.readFile());"},{"lineNumber":16,"author":{"gitId":"Juzzanoob"},"content":"        } catch (DukeException e) {"},{"lineNumber":17,"author":{"gitId":"Juzzanoob"},"content":"            taskList \u003d new TaskList();"},{"lineNumber":18,"author":{"gitId":"Juzzanoob"},"content":"        }"},{"lineNumber":19,"author":{"gitId":"Juzzanoob"},"content":"    }"},{"lineNumber":20,"author":{"gitId":"Juzzanoob"},"content":""},{"lineNumber":21,"author":{"gitId":"Juzzanoob"},"content":"    abstract String execute() throws DukeException;"},{"lineNumber":22,"author":{"gitId":"Juzzanoob"},"content":""},{"lineNumber":23,"author":{"gitId":"Juzzanoob"},"content":"}"}],"authorContributionMap":{"Juzzanoob":23}},{"path":"src/main/java/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Juzzanoob"},"content":"import java.time.LocalDate;"},{"lineNumber":2,"author":{"gitId":"Juzzanoob"},"content":"import java.time.format.DateTimeFormatter;"},{"lineNumber":3,"author":{"gitId":"Juzzanoob"},"content":"import java.time.LocalTime;"},{"lineNumber":4,"author":{"gitId":"Juzzanoob"},"content":""},{"lineNumber":5,"author":{"gitId":"Juzzanoob"},"content":"/**"},{"lineNumber":6,"author":{"gitId":"Juzzanoob"},"content":" * Simulates a task with a deadline."},{"lineNumber":7,"author":{"gitId":"Juzzanoob"},"content":" */"},{"lineNumber":8,"author":{"gitId":"Juzzanoob"},"content":"public class Deadline extends Task {"},{"lineNumber":9,"author":{"gitId":"Juzzanoob"},"content":""},{"lineNumber":10,"author":{"gitId":"Juzzanoob"},"content":"    /** Date of the deadline */"},{"lineNumber":11,"author":{"gitId":"Juzzanoob"},"content":"    private LocalDate deadline;"},{"lineNumber":12,"author":{"gitId":"Juzzanoob"},"content":""},{"lineNumber":13,"author":{"gitId":"Juzzanoob"},"content":"    /** Time of the deadline */"},{"lineNumber":14,"author":{"gitId":"Juzzanoob"},"content":"    private LocalTime deadlineTime;"},{"lineNumber":15,"author":{"gitId":"Juzzanoob"},"content":""},{"lineNumber":16,"author":{"gitId":"Juzzanoob"},"content":"    /**"},{"lineNumber":17,"author":{"gitId":"Juzzanoob"},"content":"     * Creates a new Deadline."},{"lineNumber":18,"author":{"gitId":"Juzzanoob"},"content":"     *"},{"lineNumber":19,"author":{"gitId":"Juzzanoob"},"content":"     * @param details Details of the task."},{"lineNumber":20,"author":{"gitId":"Juzzanoob"},"content":"     * @param deadline Date of the deadline."},{"lineNumber":21,"author":{"gitId":"Juzzanoob"},"content":"     * @param deadlineTime Time of the deadline."},{"lineNumber":22,"author":{"gitId":"Juzzanoob"},"content":"     */"},{"lineNumber":23,"author":{"gitId":"Juzzanoob"},"content":"    public Deadline(String details, LocalDate deadline, LocalTime deadlineTime) {"},{"lineNumber":24,"author":{"gitId":"Juzzanoob"},"content":"        super(details);"},{"lineNumber":25,"author":{"gitId":"Juzzanoob"},"content":"        this.deadline \u003d deadline;"},{"lineNumber":26,"author":{"gitId":"Juzzanoob"},"content":"        this.deadlineTime \u003d deadlineTime;"},{"lineNumber":27,"author":{"gitId":"Juzzanoob"},"content":"    }"},{"lineNumber":28,"author":{"gitId":"Juzzanoob"},"content":""},{"lineNumber":29,"author":{"gitId":"Juzzanoob"},"content":"    /**"},{"lineNumber":30,"author":{"gitId":"Juzzanoob"},"content":"     * Constructor to complete a deadline that is completed."},{"lineNumber":31,"author":{"gitId":"Juzzanoob"},"content":"     *"},{"lineNumber":32,"author":{"gitId":"Juzzanoob"},"content":"     * @param details Details of the task."},{"lineNumber":33,"author":{"gitId":"Juzzanoob"},"content":"     * @param deadline Date of the deadline."},{"lineNumber":34,"author":{"gitId":"Juzzanoob"},"content":"     * @param deadlineTime Time of the deadline."},{"lineNumber":35,"author":{"gitId":"Juzzanoob"},"content":"     * @param indicator Denotes that task is completed regardless of boolean value passed."},{"lineNumber":36,"author":{"gitId":"Juzzanoob"},"content":"     */"},{"lineNumber":37,"author":{"gitId":"Juzzanoob"},"content":"    public Deadline(String details, LocalDate deadline, LocalTime deadlineTime, boolean indicator) {"},{"lineNumber":38,"author":{"gitId":"Juzzanoob"},"content":"        super(details, indicator);"},{"lineNumber":39,"author":{"gitId":"Juzzanoob"},"content":"        this.deadline \u003d deadline;"},{"lineNumber":40,"author":{"gitId":"Juzzanoob"},"content":"        this.deadlineTime \u003d deadlineTime;"},{"lineNumber":41,"author":{"gitId":"Juzzanoob"},"content":"    }"},{"lineNumber":42,"author":{"gitId":"Juzzanoob"},"content":""},{"lineNumber":43,"author":{"gitId":"Juzzanoob"},"content":"    /**"},{"lineNumber":44,"author":{"gitId":"Juzzanoob"},"content":"     * Completes the Deadline."},{"lineNumber":45,"author":{"gitId":"Juzzanoob"},"content":"     *"},{"lineNumber":46,"author":{"gitId":"Juzzanoob"},"content":"     * @return New completed Deadline with the same details."},{"lineNumber":47,"author":{"gitId":"Juzzanoob"},"content":"     */"},{"lineNumber":48,"author":{"gitId":"Juzzanoob"},"content":"    public Deadline completeTask() {"},{"lineNumber":49,"author":{"gitId":"Juzzanoob"},"content":"        return new Deadline(this.getTask_details(), deadline, deadlineTime, true);"},{"lineNumber":50,"author":{"gitId":"Juzzanoob"},"content":"    }"},{"lineNumber":51,"author":{"gitId":"Juzzanoob"},"content":""},{"lineNumber":52,"author":{"gitId":"Juzzanoob"},"content":"    /**"},{"lineNumber":53,"author":{"gitId":"Juzzanoob"},"content":"     * Returns a String describing the Deadline as well as its completion status."},{"lineNumber":54,"author":{"gitId":"Juzzanoob"},"content":"     * @return"},{"lineNumber":55,"author":{"gitId":"Juzzanoob"},"content":"     */"},{"lineNumber":56,"author":{"gitId":"Juzzanoob"},"content":"    public String taskStatus() {"},{"lineNumber":57,"author":{"gitId":"Juzzanoob"},"content":"        if (this.isDone()) {"},{"lineNumber":58,"author":{"gitId":"Juzzanoob"},"content":"            return \"D 1\""},{"lineNumber":59,"author":{"gitId":"Juzzanoob"},"content":"                    + this.getTask_details()"},{"lineNumber":60,"author":{"gitId":"Juzzanoob"},"content":"                    + \" (by: \" + deadline.format(DateTimeFormatter.ofPattern(\"dd MMM yyyy\")) + \" \""},{"lineNumber":61,"author":{"gitId":"Juzzanoob"},"content":"                    + deadlineTime.format(DateTimeFormatter.ofPattern(\"HHmm\")) + \" )\";"},{"lineNumber":62,"author":{"gitId":"Juzzanoob"},"content":"        } else {"},{"lineNumber":63,"author":{"gitId":"Juzzanoob"},"content":"            return \"D 0\""},{"lineNumber":64,"author":{"gitId":"Juzzanoob"},"content":"                    + this.getTask_details()"},{"lineNumber":65,"author":{"gitId":"Juzzanoob"},"content":"                    + \" (by: \" + deadline.format(DateTimeFormatter.ofPattern(\"dd MMM yyyy\")) + \" \""},{"lineNumber":66,"author":{"gitId":"Juzzanoob"},"content":"                    + deadlineTime.format(DateTimeFormatter.ofPattern(\"HHmm\")) + \" )\";"},{"lineNumber":67,"author":{"gitId":"Juzzanoob"},"content":"        }"},{"lineNumber":68,"author":{"gitId":"Juzzanoob"},"content":"    }"},{"lineNumber":69,"author":{"gitId":"Juzzanoob"},"content":"}"}],"authorContributionMap":{"Juzzanoob":69}},{"path":"src/main/java/DeadlineCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Juzzanoob"},"content":"import java.time.LocalDate;"},{"lineNumber":2,"author":{"gitId":"Juzzanoob"},"content":"import java.time.LocalTime;"},{"lineNumber":3,"author":{"gitId":"Juzzanoob"},"content":"import java.time.format.DateTimeFormatter;"},{"lineNumber":4,"author":{"gitId":"Juzzanoob"},"content":"import java.time.format.DateTimeParseException;"},{"lineNumber":5,"author":{"gitId":"Juzzanoob"},"content":""},{"lineNumber":6,"author":{"gitId":"Juzzanoob"},"content":"public class DeadlineCommand extends Command {"},{"lineNumber":7,"author":{"gitId":"Juzzanoob"},"content":""},{"lineNumber":8,"author":{"gitId":"Juzzanoob"},"content":"    static private final String DATE_FORMAT \u003d \"dd/MM/yyyy\";"},{"lineNumber":9,"author":{"gitId":"Juzzanoob"},"content":"    static private final String TIME_FORMAT \u003d \"HHmm\";"},{"lineNumber":10,"author":{"gitId":"Juzzanoob"},"content":"    static private final String ERROR_MESSAGE \u003d"},{"lineNumber":11,"author":{"gitId":"Juzzanoob"},"content":"            \"Oops! I didn\u0027t catch the details of your Deadline, could you please try again?\\n\" +"},{"lineNumber":12,"author":{"gitId":"Juzzanoob"},"content":"                    \"(Note: Date format is \u0027dd/MM/yyyy\u0027, Time format is \u0027HHmm\u0027)\";"},{"lineNumber":13,"author":{"gitId":"Juzzanoob"},"content":""},{"lineNumber":14,"author":{"gitId":"Juzzanoob"},"content":"    public DeadlineCommand(Parser parser, Ui ui, Storage storage) {"},{"lineNumber":15,"author":{"gitId":"Juzzanoob"},"content":"        super(parser, ui, storage);"},{"lineNumber":16,"author":{"gitId":"Juzzanoob"},"content":"    }"},{"lineNumber":17,"author":{"gitId":"Juzzanoob"},"content":"    public String execute() throws DukeException {"},{"lineNumber":18,"author":{"gitId":"Juzzanoob"},"content":""},{"lineNumber":19,"author":{"gitId":"Juzzanoob"},"content":"        try {"},{"lineNumber":20,"author":{"gitId":"Juzzanoob"},"content":"            String taskDesc \u003d parser.getTaskDescription();"},{"lineNumber":21,"author":{"gitId":"Juzzanoob"},"content":"            LocalDate date \u003d LocalDate.parse(parser.getDate(),"},{"lineNumber":22,"author":{"gitId":"Juzzanoob"},"content":"                    DateTimeFormatter.ofPattern(DATE_FORMAT));"},{"lineNumber":23,"author":{"gitId":"Juzzanoob"},"content":"            LocalTime time \u003d LocalTime.parse(parser.getTime(),"},{"lineNumber":24,"author":{"gitId":"Juzzanoob"},"content":"                    DateTimeFormatter.ofPattern(TIME_FORMAT));"},{"lineNumber":25,"author":{"gitId":"Juzzanoob"},"content":""},{"lineNumber":26,"author":{"gitId":"Juzzanoob"},"content":"            Deadline newTask \u003d new Deadline(taskDesc, date, time);"},{"lineNumber":27,"author":{"gitId":"Juzzanoob"},"content":"            taskList \u003d taskList.addTask(newTask);"},{"lineNumber":28,"author":{"gitId":"Juzzanoob"},"content":""},{"lineNumber":29,"author":{"gitId":"Juzzanoob"},"content":"            String output \u003d userInterface.displayTaskAdded(newTask, taskList);"},{"lineNumber":30,"author":{"gitId":"Juzzanoob"},"content":"            storage.writeFile(taskList);"},{"lineNumber":31,"author":{"gitId":"Juzzanoob"},"content":""},{"lineNumber":32,"author":{"gitId":"Juzzanoob"},"content":"            return output;"},{"lineNumber":33,"author":{"gitId":"Juzzanoob"},"content":""},{"lineNumber":34,"author":{"gitId":"Juzzanoob"},"content":"        } catch (DukeException | DateTimeParseException e) {"},{"lineNumber":35,"author":{"gitId":"Juzzanoob"},"content":"            throw new DukeException(ERROR_MESSAGE);"},{"lineNumber":36,"author":{"gitId":"Juzzanoob"},"content":"        }"},{"lineNumber":37,"author":{"gitId":"Juzzanoob"},"content":"    }"},{"lineNumber":38,"author":{"gitId":"Juzzanoob"},"content":"}"}],"authorContributionMap":{"Juzzanoob":38}},{"path":"src/main/java/DeleteCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Juzzanoob"},"content":"public class DeleteCommand extends Command {"},{"lineNumber":2,"author":{"gitId":"Juzzanoob"},"content":""},{"lineNumber":3,"author":{"gitId":"Juzzanoob"},"content":"    static private final String ERROR_MESSAGE \u003d"},{"lineNumber":4,"author":{"gitId":"Juzzanoob"},"content":"            \"Oops! I didn\u0027t catch which task you wanted to delete, could you please try again?\\n\" +"},{"lineNumber":5,"author":{"gitId":"Juzzanoob"},"content":"                    \"Make sure your input is correct! (Hint: use the \u0027help\u0027 command to see input formats)\";"},{"lineNumber":6,"author":{"gitId":"Juzzanoob"},"content":""},{"lineNumber":7,"author":{"gitId":"Juzzanoob"},"content":"    static private final String NO_TASKS \u003d"},{"lineNumber":8,"author":{"gitId":"Juzzanoob"},"content":"            \"Sorry, you don\u0027t have any tasks in your list now!\";"},{"lineNumber":9,"author":{"gitId":"Juzzanoob"},"content":""},{"lineNumber":10,"author":{"gitId":"Juzzanoob"},"content":"    public DeleteCommand(Parser parser, Ui ui, Storage storage) {"},{"lineNumber":11,"author":{"gitId":"Juzzanoob"},"content":"        super(parser, ui, storage);"},{"lineNumber":12,"author":{"gitId":"Juzzanoob"},"content":"    }"},{"lineNumber":13,"author":{"gitId":"Juzzanoob"},"content":""},{"lineNumber":14,"author":{"gitId":"Juzzanoob"},"content":"    public String execute() throws DukeException {"},{"lineNumber":15,"author":{"gitId":"Juzzanoob"},"content":""},{"lineNumber":16,"author":{"gitId":"Juzzanoob"},"content":"        String output \u003d \"\";"},{"lineNumber":17,"author":{"gitId":"Juzzanoob"},"content":""},{"lineNumber":18,"author":{"gitId":"Juzzanoob"},"content":"        try {"},{"lineNumber":19,"author":{"gitId":"Juzzanoob"},"content":"            if (taskList.getSize() \u003e 0) {"},{"lineNumber":20,"author":{"gitId":"Juzzanoob"},"content":""},{"lineNumber":21,"author":{"gitId":"Juzzanoob"},"content":"                int indexOfTaskToDelete \u003d parser.getIndexToModify();"},{"lineNumber":22,"author":{"gitId":"Juzzanoob"},"content":""},{"lineNumber":23,"author":{"gitId":"Juzzanoob"},"content":"                Task task \u003d taskList.getTask(indexOfTaskToDelete);"},{"lineNumber":24,"author":{"gitId":"Juzzanoob"},"content":""},{"lineNumber":25,"author":{"gitId":"Juzzanoob"},"content":"                taskList \u003d taskList.deleteTask(indexOfTaskToDelete);"},{"lineNumber":26,"author":{"gitId":"Juzzanoob"},"content":""},{"lineNumber":27,"author":{"gitId":"Juzzanoob"},"content":"                output \u003d userInterface.displayTaskDeleted(task, taskList);"},{"lineNumber":28,"author":{"gitId":"Juzzanoob"},"content":"                storage.writeFile(taskList);"},{"lineNumber":29,"author":{"gitId":"Juzzanoob"},"content":""},{"lineNumber":30,"author":{"gitId":"Juzzanoob"},"content":"            } else {"},{"lineNumber":31,"author":{"gitId":"Juzzanoob"},"content":"                output \u003d NO_TASKS;"},{"lineNumber":32,"author":{"gitId":"Juzzanoob"},"content":"            }"},{"lineNumber":33,"author":{"gitId":"Juzzanoob"},"content":""},{"lineNumber":34,"author":{"gitId":"Juzzanoob"},"content":"            return output;"},{"lineNumber":35,"author":{"gitId":"Juzzanoob"},"content":""},{"lineNumber":36,"author":{"gitId":"Juzzanoob"},"content":"        } catch (DukeException | ArrayIndexOutOfBoundsException e) {"},{"lineNumber":37,"author":{"gitId":"Juzzanoob"},"content":"            throw new DukeException(ERROR_MESSAGE);"},{"lineNumber":38,"author":{"gitId":"Juzzanoob"},"content":"        }"},{"lineNumber":39,"author":{"gitId":"Juzzanoob"},"content":"    }"},{"lineNumber":40,"author":{"gitId":"Juzzanoob"},"content":""},{"lineNumber":41,"author":{"gitId":"Juzzanoob"},"content":"}"}],"authorContributionMap":{"Juzzanoob":41}},{"path":"src/main/java/DialogBox.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Juzzanoob"},"content":"import java.io.IOException;"},{"lineNumber":2,"author":{"gitId":"Juzzanoob"},"content":"import java.util.Collections;"},{"lineNumber":3,"author":{"gitId":"Juzzanoob"},"content":""},{"lineNumber":4,"author":{"gitId":"Juzzanoob"},"content":"import javafx.collections.FXCollections;"},{"lineNumber":5,"author":{"gitId":"Juzzanoob"},"content":"import javafx.collections.ObservableList;"},{"lineNumber":6,"author":{"gitId":"Juzzanoob"},"content":"import javafx.fxml.FXML;"},{"lineNumber":7,"author":{"gitId":"Juzzanoob"},"content":"import javafx.fxml.FXMLLoader;"},{"lineNumber":8,"author":{"gitId":"Juzzanoob"},"content":"import javafx.geometry.Pos;"},{"lineNumber":9,"author":{"gitId":"Juzzanoob"},"content":"import javafx.scene.Node;"},{"lineNumber":10,"author":{"gitId":"Juzzanoob"},"content":"import javafx.scene.control.Label;"},{"lineNumber":11,"author":{"gitId":"Juzzanoob"},"content":"import javafx.scene.image.Image;"},{"lineNumber":12,"author":{"gitId":"Juzzanoob"},"content":"import javafx.scene.image.ImageView;"},{"lineNumber":13,"author":{"gitId":"Juzzanoob"},"content":"import javafx.scene.layout.HBox;"},{"lineNumber":14,"author":{"gitId":"Juzzanoob"},"content":"import javafx.scene.layout.Region;"},{"lineNumber":15,"author":{"gitId":"Juzzanoob"},"content":""},{"lineNumber":16,"author":{"gitId":"Juzzanoob"},"content":"/**"},{"lineNumber":17,"author":{"gitId":"Juzzanoob"},"content":" * An example of a custom control using FXML."},{"lineNumber":18,"author":{"gitId":"Juzzanoob"},"content":" * This control represents a dialog box consisting of an ImageView to represent the speaker\u0027s face and a label"},{"lineNumber":19,"author":{"gitId":"Juzzanoob"},"content":" * containing text from the speaker."},{"lineNumber":20,"author":{"gitId":"Juzzanoob"},"content":" */"},{"lineNumber":21,"author":{"gitId":"Juzzanoob"},"content":"public class DialogBox extends HBox {"},{"lineNumber":22,"author":{"gitId":"Juzzanoob"},"content":"    @FXML"},{"lineNumber":23,"author":{"gitId":"Juzzanoob"},"content":"    private Label dialog;"},{"lineNumber":24,"author":{"gitId":"Juzzanoob"},"content":"    @FXML"},{"lineNumber":25,"author":{"gitId":"Juzzanoob"},"content":"    private ImageView displayPicture;"},{"lineNumber":26,"author":{"gitId":"Juzzanoob"},"content":""},{"lineNumber":27,"author":{"gitId":"Juzzanoob"},"content":"    private DialogBox(String text, Image img) {"},{"lineNumber":28,"author":{"gitId":"Juzzanoob"},"content":"        try {"},{"lineNumber":29,"author":{"gitId":"Juzzanoob"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(\"/view/DialogBox.fxml\"));"},{"lineNumber":30,"author":{"gitId":"Juzzanoob"},"content":"            fxmlLoader.setController(this);"},{"lineNumber":31,"author":{"gitId":"Juzzanoob"},"content":"            fxmlLoader.setRoot(this);"},{"lineNumber":32,"author":{"gitId":"Juzzanoob"},"content":"            fxmlLoader.load();"},{"lineNumber":33,"author":{"gitId":"Juzzanoob"},"content":"        } catch (IOException e) {"},{"lineNumber":34,"author":{"gitId":"Juzzanoob"},"content":"            e.printStackTrace();"},{"lineNumber":35,"author":{"gitId":"Juzzanoob"},"content":"        }"},{"lineNumber":36,"author":{"gitId":"Juzzanoob"},"content":""},{"lineNumber":37,"author":{"gitId":"Juzzanoob"},"content":"        dialog.setText(text);"},{"lineNumber":38,"author":{"gitId":"Juzzanoob"},"content":"        displayPicture.setImage(img);"},{"lineNumber":39,"author":{"gitId":"Juzzanoob"},"content":"    }"},{"lineNumber":40,"author":{"gitId":"Juzzanoob"},"content":""},{"lineNumber":41,"author":{"gitId":"Juzzanoob"},"content":"    /**"},{"lineNumber":42,"author":{"gitId":"Juzzanoob"},"content":"     * Flips the dialog box such that the ImageView is on the left and text on the right."},{"lineNumber":43,"author":{"gitId":"Juzzanoob"},"content":"     */"},{"lineNumber":44,"author":{"gitId":"Juzzanoob"},"content":"    private void flip() {"},{"lineNumber":45,"author":{"gitId":"Juzzanoob"},"content":"        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());"},{"lineNumber":46,"author":{"gitId":"Juzzanoob"},"content":"        Collections.reverse(tmp);"},{"lineNumber":47,"author":{"gitId":"Juzzanoob"},"content":"        getChildren().setAll(tmp);"},{"lineNumber":48,"author":{"gitId":"Juzzanoob"},"content":"        setAlignment(Pos.TOP_LEFT);"},{"lineNumber":49,"author":{"gitId":"Juzzanoob"},"content":"    }"},{"lineNumber":50,"author":{"gitId":"Juzzanoob"},"content":""},{"lineNumber":51,"author":{"gitId":"Juzzanoob"},"content":"    public static DialogBox getUserDialog(String text, Image img) {"},{"lineNumber":52,"author":{"gitId":"Juzzanoob"},"content":"        DialogBox db \u003d new DialogBox(text, img);"},{"lineNumber":53,"author":{"gitId":"Juzzanoob"},"content":"        //Solution below adapted from https://stackoverflow.com/questions/35012518/resize-javafx-label-if-overrun"},{"lineNumber":54,"author":{"gitId":"Juzzanoob"},"content":"        db.setMinHeight(Region.USE_PREF_SIZE);"},{"lineNumber":55,"author":{"gitId":"Juzzanoob"},"content":"        return db;"},{"lineNumber":56,"author":{"gitId":"Juzzanoob"},"content":"    }"},{"lineNumber":57,"author":{"gitId":"Juzzanoob"},"content":""},{"lineNumber":58,"author":{"gitId":"Juzzanoob"},"content":"    public static DialogBox getDukeDialog(String text, Image img) {"},{"lineNumber":59,"author":{"gitId":"Juzzanoob"},"content":"        var db \u003d new DialogBox(text, img);"},{"lineNumber":60,"author":{"gitId":"Juzzanoob"},"content":"        //Solution below adapted from https://stackoverflow.com/questions/35012518/resize-javafx-label-if-overrun"},{"lineNumber":61,"author":{"gitId":"Juzzanoob"},"content":"        db.setMinHeight(Region.USE_PREF_SIZE);"},{"lineNumber":62,"author":{"gitId":"Juzzanoob"},"content":"        db.flip();"},{"lineNumber":63,"author":{"gitId":"Juzzanoob"},"content":"        return db;"},{"lineNumber":64,"author":{"gitId":"Juzzanoob"},"content":"    }"},{"lineNumber":65,"author":{"gitId":"Juzzanoob"},"content":"}"}],"authorContributionMap":{"Juzzanoob":65}},{"path":"src/main/java/DoneCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Juzzanoob"},"content":"public class DoneCommand extends Command {"},{"lineNumber":2,"author":{"gitId":"Juzzanoob"},"content":""},{"lineNumber":3,"author":{"gitId":"Juzzanoob"},"content":"    static private final String ERROR_MESSAGE \u003d"},{"lineNumber":4,"author":{"gitId":"Juzzanoob"},"content":"            \"Oops! I didn\u0027t catch which task you wanted to complete, could you please try again?\\n\" +"},{"lineNumber":5,"author":{"gitId":"Juzzanoob"},"content":"                    \"Make sure your input is correct! (Hint: use the \u0027help\u0027 command to see input formats)\";"},{"lineNumber":6,"author":{"gitId":"Juzzanoob"},"content":""},{"lineNumber":7,"author":{"gitId":"Juzzanoob"},"content":"    public DoneCommand(Parser parser, Ui ui, Storage storage) {"},{"lineNumber":8,"author":{"gitId":"Juzzanoob"},"content":"        super(parser, ui, storage);"},{"lineNumber":9,"author":{"gitId":"Juzzanoob"},"content":"    }"},{"lineNumber":10,"author":{"gitId":"Juzzanoob"},"content":""},{"lineNumber":11,"author":{"gitId":"Juzzanoob"},"content":"    public String execute() throws DukeException {"},{"lineNumber":12,"author":{"gitId":"Juzzanoob"},"content":""},{"lineNumber":13,"author":{"gitId":"Juzzanoob"},"content":"        try {"},{"lineNumber":14,"author":{"gitId":"Juzzanoob"},"content":"            int indexOfTaskToComplete \u003d parser.getIndexToModify();"},{"lineNumber":15,"author":{"gitId":"Juzzanoob"},"content":""},{"lineNumber":16,"author":{"gitId":"Juzzanoob"},"content":"            Task task \u003d taskList.getTask(indexOfTaskToComplete).completeTask();"},{"lineNumber":17,"author":{"gitId":"Juzzanoob"},"content":"            taskList \u003d taskList.completeTask(indexOfTaskToComplete);"},{"lineNumber":18,"author":{"gitId":"Juzzanoob"},"content":""},{"lineNumber":19,"author":{"gitId":"Juzzanoob"},"content":"            String output \u003d userInterface.displayTaskCompleted(task);"},{"lineNumber":20,"author":{"gitId":"Juzzanoob"},"content":"            storage.writeFile(taskList);"},{"lineNumber":21,"author":{"gitId":"Juzzanoob"},"content":""},{"lineNumber":22,"author":{"gitId":"Juzzanoob"},"content":"            return output;"},{"lineNumber":23,"author":{"gitId":"Juzzanoob"},"content":""},{"lineNumber":24,"author":{"gitId":"Juzzanoob"},"content":"        } catch (DukeException e) {"},{"lineNumber":25,"author":{"gitId":"Juzzanoob"},"content":"            throw new DukeException(ERROR_MESSAGE);"},{"lineNumber":26,"author":{"gitId":"Juzzanoob"},"content":"        }"},{"lineNumber":27,"author":{"gitId":"Juzzanoob"},"content":"    }"},{"lineNumber":28,"author":{"gitId":"Juzzanoob"},"content":"}"}],"authorContributionMap":{"Juzzanoob":28}},{"path":"src/main/java/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Juzzanoob"},"content":"/**"},{"lineNumber":2,"author":{"gitId":"Juzzanoob"},"content":" * Task List manager that can store task lists."},{"lineNumber":3,"author":{"gitId":"Juzzanoob"},"content":" */"},{"lineNumber":4,"author":{"gitId":"-"},"content":"public class Duke {"},{"lineNumber":5,"author":{"gitId":"Juzzanoob"},"content":""},{"lineNumber":6,"author":{"gitId":"Juzzanoob"},"content":"    /** String indicating location of task list file */"},{"lineNumber":7,"author":{"gitId":"Juzzanoob"},"content":"    static private String STORAGE_LOCATION \u003d \"dukeTaskList.txt\";"},{"lineNumber":8,"author":{"gitId":"Juzzanoob"},"content":""},{"lineNumber":9,"author":{"gitId":"Juzzanoob"},"content":"    /** Ui to display messages for user */"},{"lineNumber":10,"author":{"gitId":"Juzzanoob"},"content":"    private Ui ui;"},{"lineNumber":11,"author":{"gitId":"Juzzanoob"},"content":""},{"lineNumber":12,"author":{"gitId":"Juzzanoob"},"content":"    /**"},{"lineNumber":13,"author":{"gitId":"Juzzanoob"},"content":"     * Creates a new Duke object that contains a list of tasks from file at given path."},{"lineNumber":14,"author":{"gitId":"Juzzanoob"},"content":"     * If no file is found, an empty task list is created instead."},{"lineNumber":15,"author":{"gitId":"Juzzanoob"},"content":"     */"},{"lineNumber":16,"author":{"gitId":"Juzzanoob"},"content":"    public Duke() {"},{"lineNumber":17,"author":{"gitId":"Juzzanoob"},"content":"        ui \u003d new Ui();"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":19,"author":{"gitId":"Juzzanoob"},"content":""},{"lineNumber":20,"author":{"gitId":"Juzzanoob"},"content":"    /**"},{"lineNumber":21,"author":{"gitId":"Juzzanoob"},"content":"     * Runs the program."},{"lineNumber":22,"author":{"gitId":"Juzzanoob"},"content":"     *"},{"lineNumber":23,"author":{"gitId":"Juzzanoob"},"content":"     * @throws DukeException If user input is incorrect."},{"lineNumber":24,"author":{"gitId":"Juzzanoob"},"content":"     */"},{"lineNumber":25,"author":{"gitId":"Juzzanoob"},"content":"    public String run(String input) {"},{"lineNumber":26,"author":{"gitId":"Juzzanoob"},"content":""},{"lineNumber":27,"author":{"gitId":"Juzzanoob"},"content":"        String output;"},{"lineNumber":28,"author":{"gitId":"Juzzanoob"},"content":""},{"lineNumber":29,"author":{"gitId":"Juzzanoob"},"content":"        try {"},{"lineNumber":30,"author":{"gitId":"Juzzanoob"},"content":"            Parser parser \u003d new Parser(input);"},{"lineNumber":31,"author":{"gitId":"Juzzanoob"},"content":"            Command c \u003d parser.getCommand(parser, ui, STORAGE_LOCATION);"},{"lineNumber":32,"author":{"gitId":"Juzzanoob"},"content":"            output \u003d c.execute();"},{"lineNumber":33,"author":{"gitId":"Juzzanoob"},"content":""},{"lineNumber":34,"author":{"gitId":"Juzzanoob"},"content":"        } catch (DukeException e) {"},{"lineNumber":35,"author":{"gitId":"Juzzanoob"},"content":"            output \u003d e.errorMessage();"},{"lineNumber":36,"author":{"gitId":"Juzzanoob"},"content":"        }"},{"lineNumber":37,"author":{"gitId":"Juzzanoob"},"content":""},{"lineNumber":38,"author":{"gitId":"Juzzanoob"},"content":"        return output;"},{"lineNumber":39,"author":{"gitId":"Juzzanoob"},"content":"    }"},{"lineNumber":40,"author":{"gitId":"Juzzanoob"},"content":""},{"lineNumber":41,"author":{"gitId":"Juzzanoob"},"content":""},{"lineNumber":42,"author":{"gitId":"Juzzanoob"},"content":"    /**"},{"lineNumber":43,"author":{"gitId":"Juzzanoob"},"content":"     * You should have your own function to generate a response to user input."},{"lineNumber":44,"author":{"gitId":"Juzzanoob"},"content":"     * Replace this stub with your completed method."},{"lineNumber":45,"author":{"gitId":"Juzzanoob"},"content":"     */"},{"lineNumber":46,"author":{"gitId":"Juzzanoob"},"content":"    public String getResponse(String input) {"},{"lineNumber":47,"author":{"gitId":"Juzzanoob"},"content":"        return run(input);"},{"lineNumber":48,"author":{"gitId":"Juzzanoob"},"content":"    }"},{"lineNumber":49,"author":{"gitId":"Juzzanoob"},"content":""},{"lineNumber":50,"author":{"gitId":"-"},"content":"}"},{"lineNumber":51,"author":{"gitId":"Juzzanoob"},"content":""}],"authorContributionMap":{"Juzzanoob":48,"-":3}},{"path":"src/main/java/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Juzzanoob"},"content":"/**"},{"lineNumber":2,"author":{"gitId":"Juzzanoob"},"content":" * Exception class to denote errors arising from incorrect user input or"},{"lineNumber":3,"author":{"gitId":"Juzzanoob"},"content":" * failed task list file reading."},{"lineNumber":4,"author":{"gitId":"Juzzanoob"},"content":" */"},{"lineNumber":5,"author":{"gitId":"Juzzanoob"},"content":"public class DukeException extends Exception {"},{"lineNumber":6,"author":{"gitId":"Juzzanoob"},"content":""},{"lineNumber":7,"author":{"gitId":"Juzzanoob"},"content":"    /**"},{"lineNumber":8,"author":{"gitId":"Juzzanoob"},"content":"     * Creates new DukeException with a description."},{"lineNumber":9,"author":{"gitId":"Juzzanoob"},"content":"     *"},{"lineNumber":10,"author":{"gitId":"Juzzanoob"},"content":"     * @param message Describes the error."},{"lineNumber":11,"author":{"gitId":"Juzzanoob"},"content":"     */"},{"lineNumber":12,"author":{"gitId":"Juzzanoob"},"content":"    public DukeException(String message) {"},{"lineNumber":13,"author":{"gitId":"Juzzanoob"},"content":"        super(message);"},{"lineNumber":14,"author":{"gitId":"Juzzanoob"},"content":"    }"},{"lineNumber":15,"author":{"gitId":"Juzzanoob"},"content":""},{"lineNumber":16,"author":{"gitId":"Juzzanoob"},"content":"    /**"},{"lineNumber":17,"author":{"gitId":"Juzzanoob"},"content":"     * Creates a new DukeException without a description. Used as a placeholder for"},{"lineNumber":18,"author":{"gitId":"Juzzanoob"},"content":"     * another class to create a new DukeException that can describe the error better."},{"lineNumber":19,"author":{"gitId":"Juzzanoob"},"content":"     */"},{"lineNumber":20,"author":{"gitId":"Juzzanoob"},"content":"    public DukeException() {}"},{"lineNumber":21,"author":{"gitId":"Juzzanoob"},"content":""},{"lineNumber":22,"author":{"gitId":"Juzzanoob"},"content":"    /**"},{"lineNumber":23,"author":{"gitId":"Juzzanoob"},"content":"     * Returns a String describing the error to the user."},{"lineNumber":24,"author":{"gitId":"Juzzanoob"},"content":"     *"},{"lineNumber":25,"author":{"gitId":"Juzzanoob"},"content":"     * @return String describing the error."},{"lineNumber":26,"author":{"gitId":"Juzzanoob"},"content":"     */"},{"lineNumber":27,"author":{"gitId":"Juzzanoob"},"content":"    public String errorMessage() {"},{"lineNumber":28,"author":{"gitId":"Juzzanoob"},"content":"        String output \u003d this.getMessage();"},{"lineNumber":29,"author":{"gitId":"Juzzanoob"},"content":"        return output;"},{"lineNumber":30,"author":{"gitId":"Juzzanoob"},"content":"    }"},{"lineNumber":31,"author":{"gitId":"Juzzanoob"},"content":"}"},{"lineNumber":32,"author":{"gitId":"Juzzanoob"},"content":""}],"authorContributionMap":{"Juzzanoob":32}},{"path":"src/main/java/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Juzzanoob"},"content":"import java.time.LocalDate;"},{"lineNumber":2,"author":{"gitId":"Juzzanoob"},"content":"import java.time.format.DateTimeFormatter;"},{"lineNumber":3,"author":{"gitId":"Juzzanoob"},"content":"import java.time.LocalTime;"},{"lineNumber":4,"author":{"gitId":"Juzzanoob"},"content":""},{"lineNumber":5,"author":{"gitId":"Juzzanoob"},"content":"/**"},{"lineNumber":6,"author":{"gitId":"Juzzanoob"},"content":" * Simulates an event that occurs at a specific date and time."},{"lineNumber":7,"author":{"gitId":"Juzzanoob"},"content":" */"},{"lineNumber":8,"author":{"gitId":"Juzzanoob"},"content":"public class Event extends Task {"},{"lineNumber":9,"author":{"gitId":"Juzzanoob"},"content":""},{"lineNumber":10,"author":{"gitId":"Juzzanoob"},"content":"    /** Date of the event */"},{"lineNumber":11,"author":{"gitId":"Juzzanoob"},"content":"    private LocalDate date;"},{"lineNumber":12,"author":{"gitId":"Juzzanoob"},"content":""},{"lineNumber":13,"author":{"gitId":"Juzzanoob"},"content":"    /** Time of the event */"},{"lineNumber":14,"author":{"gitId":"Juzzanoob"},"content":"    private LocalTime time;"},{"lineNumber":15,"author":{"gitId":"Juzzanoob"},"content":""},{"lineNumber":16,"author":{"gitId":"Juzzanoob"},"content":"    /**"},{"lineNumber":17,"author":{"gitId":"Juzzanoob"},"content":"     * Creates a new Event."},{"lineNumber":18,"author":{"gitId":"Juzzanoob"},"content":"     *"},{"lineNumber":19,"author":{"gitId":"Juzzanoob"},"content":"     * @param details Details of the event."},{"lineNumber":20,"author":{"gitId":"Juzzanoob"},"content":"     * @param date Date of the event."},{"lineNumber":21,"author":{"gitId":"Juzzanoob"},"content":"     * @param time Time of the event."},{"lineNumber":22,"author":{"gitId":"Juzzanoob"},"content":"     */"},{"lineNumber":23,"author":{"gitId":"Juzzanoob"},"content":"    public Event(String details, LocalDate date, LocalTime time) {"},{"lineNumber":24,"author":{"gitId":"Juzzanoob"},"content":"        super(details);"},{"lineNumber":25,"author":{"gitId":"Juzzanoob"},"content":"        this.date \u003d date;"},{"lineNumber":26,"author":{"gitId":"Juzzanoob"},"content":"        this.time \u003d time;"},{"lineNumber":27,"author":{"gitId":"Juzzanoob"},"content":"    }"},{"lineNumber":28,"author":{"gitId":"Juzzanoob"},"content":""},{"lineNumber":29,"author":{"gitId":"Juzzanoob"},"content":"    /**"},{"lineNumber":30,"author":{"gitId":"Juzzanoob"},"content":"     * Constructor to complete an Event that is completed."},{"lineNumber":31,"author":{"gitId":"Juzzanoob"},"content":"     *"},{"lineNumber":32,"author":{"gitId":"Juzzanoob"},"content":"     * @param details Details of the event."},{"lineNumber":33,"author":{"gitId":"Juzzanoob"},"content":"     * @param date Date of the event."},{"lineNumber":34,"author":{"gitId":"Juzzanoob"},"content":"     * @param time Time of the event."},{"lineNumber":35,"author":{"gitId":"Juzzanoob"},"content":"     * @param indicator Denotes that event is completed regardless of boolean value passed."},{"lineNumber":36,"author":{"gitId":"Juzzanoob"},"content":"     */"},{"lineNumber":37,"author":{"gitId":"Juzzanoob"},"content":"    public Event(String details, LocalDate date, LocalTime time, boolean indicator) {"},{"lineNumber":38,"author":{"gitId":"Juzzanoob"},"content":"        super(details, indicator);"},{"lineNumber":39,"author":{"gitId":"Juzzanoob"},"content":"        this.date \u003d date;"},{"lineNumber":40,"author":{"gitId":"Juzzanoob"},"content":"        this.time \u003d time;"},{"lineNumber":41,"author":{"gitId":"Juzzanoob"},"content":"    }"},{"lineNumber":42,"author":{"gitId":"Juzzanoob"},"content":""},{"lineNumber":43,"author":{"gitId":"Juzzanoob"},"content":"    /**"},{"lineNumber":44,"author":{"gitId":"Juzzanoob"},"content":"     * Completes the event."},{"lineNumber":45,"author":{"gitId":"Juzzanoob"},"content":"     *"},{"lineNumber":46,"author":{"gitId":"Juzzanoob"},"content":"     * @return New completed Event with the same details."},{"lineNumber":47,"author":{"gitId":"Juzzanoob"},"content":"     */"},{"lineNumber":48,"author":{"gitId":"Juzzanoob"},"content":"    public Event completeTask() {"},{"lineNumber":49,"author":{"gitId":"Juzzanoob"},"content":"        return new Event(this.getTask_details(), date, time,true);"},{"lineNumber":50,"author":{"gitId":"Juzzanoob"},"content":"    }"},{"lineNumber":51,"author":{"gitId":"Juzzanoob"},"content":""},{"lineNumber":52,"author":{"gitId":"Juzzanoob"},"content":"    /**"},{"lineNumber":53,"author":{"gitId":"Juzzanoob"},"content":"     * Returns a String describing the Event as well as its completion status."},{"lineNumber":54,"author":{"gitId":"Juzzanoob"},"content":"     * @return"},{"lineNumber":55,"author":{"gitId":"Juzzanoob"},"content":"     */"},{"lineNumber":56,"author":{"gitId":"Juzzanoob"},"content":"    public String taskStatus() {"},{"lineNumber":57,"author":{"gitId":"Juzzanoob"},"content":"        if (this.isDone()) {"},{"lineNumber":58,"author":{"gitId":"Juzzanoob"},"content":"            return \"E 1\""},{"lineNumber":59,"author":{"gitId":"Juzzanoob"},"content":"                    + this.getTask_details()"},{"lineNumber":60,"author":{"gitId":"Juzzanoob"},"content":"                    + \" (on: \" + date.format(DateTimeFormatter.ofPattern(\"dd MMM yyyy\")) + \" \""},{"lineNumber":61,"author":{"gitId":"Juzzanoob"},"content":"                    + time.format(DateTimeFormatter.ofPattern(\"HHmm\")) + \" )\";"},{"lineNumber":62,"author":{"gitId":"Juzzanoob"},"content":"        } else {"},{"lineNumber":63,"author":{"gitId":"Juzzanoob"},"content":"            return \"E 0\""},{"lineNumber":64,"author":{"gitId":"Juzzanoob"},"content":"                    + this.getTask_details()"},{"lineNumber":65,"author":{"gitId":"Juzzanoob"},"content":"                    + \" (on: \" + date.format(DateTimeFormatter.ofPattern(\"dd MMM yyyy\")) + \" \""},{"lineNumber":66,"author":{"gitId":"Juzzanoob"},"content":"                    + time.format(DateTimeFormatter.ofPattern(\"HHmm\")) + \" )\";"},{"lineNumber":67,"author":{"gitId":"Juzzanoob"},"content":"        }"},{"lineNumber":68,"author":{"gitId":"Juzzanoob"},"content":"    }"},{"lineNumber":69,"author":{"gitId":"Juzzanoob"},"content":"}"}],"authorContributionMap":{"Juzzanoob":69}},{"path":"src/main/java/EventCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Juzzanoob"},"content":"import java.time.LocalDate;"},{"lineNumber":2,"author":{"gitId":"Juzzanoob"},"content":"import java.time.LocalTime;"},{"lineNumber":3,"author":{"gitId":"Juzzanoob"},"content":"import java.time.format.DateTimeFormatter;"},{"lineNumber":4,"author":{"gitId":"Juzzanoob"},"content":"import java.time.format.DateTimeParseException;"},{"lineNumber":5,"author":{"gitId":"Juzzanoob"},"content":""},{"lineNumber":6,"author":{"gitId":"Juzzanoob"},"content":"public class EventCommand extends Command {"},{"lineNumber":7,"author":{"gitId":"Juzzanoob"},"content":""},{"lineNumber":8,"author":{"gitId":"Juzzanoob"},"content":"    static private final String DATE_FORMAT \u003d \"dd/MM/yyyy\";"},{"lineNumber":9,"author":{"gitId":"Juzzanoob"},"content":"    static private final String TIME_FORMAT \u003d \"HHmm\";"},{"lineNumber":10,"author":{"gitId":"Juzzanoob"},"content":"    static private final String ERROR_MESSAGE \u003d"},{"lineNumber":11,"author":{"gitId":"Juzzanoob"},"content":"            \"Oops! I didn\u0027t catch the details of your Event, could you please try again?\\n\" +"},{"lineNumber":12,"author":{"gitId":"Juzzanoob"},"content":"                    \"(Note: Date format is \u0027dd/MM/yyyy\u0027, Time format is \u0027HHmm\u0027)\";"},{"lineNumber":13,"author":{"gitId":"Juzzanoob"},"content":""},{"lineNumber":14,"author":{"gitId":"Juzzanoob"},"content":"    public EventCommand(Parser parser, Ui ui, Storage storage) {"},{"lineNumber":15,"author":{"gitId":"Juzzanoob"},"content":"        super(parser, ui, storage);"},{"lineNumber":16,"author":{"gitId":"Juzzanoob"},"content":"    }"},{"lineNumber":17,"author":{"gitId":"Juzzanoob"},"content":""},{"lineNumber":18,"author":{"gitId":"Juzzanoob"},"content":"    public String execute() throws DukeException {"},{"lineNumber":19,"author":{"gitId":"Juzzanoob"},"content":""},{"lineNumber":20,"author":{"gitId":"Juzzanoob"},"content":"        try {"},{"lineNumber":21,"author":{"gitId":"Juzzanoob"},"content":"            String taskDesc \u003d parser.getTaskDescription();"},{"lineNumber":22,"author":{"gitId":"Juzzanoob"},"content":"            LocalDate date \u003d LocalDate.parse(parser.getDate(),"},{"lineNumber":23,"author":{"gitId":"Juzzanoob"},"content":"                    DateTimeFormatter.ofPattern(DATE_FORMAT));"},{"lineNumber":24,"author":{"gitId":"Juzzanoob"},"content":"            LocalTime time \u003d LocalTime.parse(parser.getTime(),"},{"lineNumber":25,"author":{"gitId":"Juzzanoob"},"content":"                    DateTimeFormatter.ofPattern(TIME_FORMAT));"},{"lineNumber":26,"author":{"gitId":"Juzzanoob"},"content":""},{"lineNumber":27,"author":{"gitId":"Juzzanoob"},"content":"            Event newTask \u003d new Event(taskDesc, date, time);"},{"lineNumber":28,"author":{"gitId":"Juzzanoob"},"content":"            taskList \u003d taskList.addTask(newTask);"},{"lineNumber":29,"author":{"gitId":"Juzzanoob"},"content":""},{"lineNumber":30,"author":{"gitId":"Juzzanoob"},"content":"            String output \u003d userInterface.displayTaskAdded(newTask, taskList);"},{"lineNumber":31,"author":{"gitId":"Juzzanoob"},"content":"            storage.writeFile(taskList);"},{"lineNumber":32,"author":{"gitId":"Juzzanoob"},"content":""},{"lineNumber":33,"author":{"gitId":"Juzzanoob"},"content":"            return output;"},{"lineNumber":34,"author":{"gitId":"Juzzanoob"},"content":""},{"lineNumber":35,"author":{"gitId":"Juzzanoob"},"content":"        } catch (DukeException | DateTimeParseException e) {"},{"lineNumber":36,"author":{"gitId":"Juzzanoob"},"content":"            throw new DukeException(ERROR_MESSAGE);"},{"lineNumber":37,"author":{"gitId":"Juzzanoob"},"content":"        }"},{"lineNumber":38,"author":{"gitId":"Juzzanoob"},"content":"    }"},{"lineNumber":39,"author":{"gitId":"Juzzanoob"},"content":"}"}],"authorContributionMap":{"Juzzanoob":39}},{"path":"src/main/java/FindCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Juzzanoob"},"content":"public class FindCommand extends Command {"},{"lineNumber":2,"author":{"gitId":"Juzzanoob"},"content":""},{"lineNumber":3,"author":{"gitId":"Juzzanoob"},"content":"    static private final String ERROR_MESSAGE \u003d"},{"lineNumber":4,"author":{"gitId":"Juzzanoob"},"content":"            \"Oops! I didn\u0027t catch your keyword, could you please try again?\\n\" +"},{"lineNumber":5,"author":{"gitId":"Juzzanoob"},"content":"                    \"Make sure your input is correct! (Hint: use the \u0027help\u0027 command to see input formats)\";"},{"lineNumber":6,"author":{"gitId":"Juzzanoob"},"content":""},{"lineNumber":7,"author":{"gitId":"Juzzanoob"},"content":"    public FindCommand(Parser parser, Ui ui, Storage storage) {"},{"lineNumber":8,"author":{"gitId":"Juzzanoob"},"content":"        super(parser, ui, storage);"},{"lineNumber":9,"author":{"gitId":"Juzzanoob"},"content":"    }"},{"lineNumber":10,"author":{"gitId":"Juzzanoob"},"content":""},{"lineNumber":11,"author":{"gitId":"Juzzanoob"},"content":"    public String execute() throws DukeException {"},{"lineNumber":12,"author":{"gitId":"Juzzanoob"},"content":""},{"lineNumber":13,"author":{"gitId":"Juzzanoob"},"content":"        try {"},{"lineNumber":14,"author":{"gitId":"Juzzanoob"},"content":"            String keyword \u003d parser.getKeyword();"},{"lineNumber":15,"author":{"gitId":"Juzzanoob"},"content":"            String output \u003d userInterface.displayTaskSearch(keyword, taskList);"},{"lineNumber":16,"author":{"gitId":"Juzzanoob"},"content":"            return output;"},{"lineNumber":17,"author":{"gitId":"Juzzanoob"},"content":""},{"lineNumber":18,"author":{"gitId":"Juzzanoob"},"content":"        } catch (DukeException e) {"},{"lineNumber":19,"author":{"gitId":"Juzzanoob"},"content":"            throw new DukeException(ERROR_MESSAGE);"},{"lineNumber":20,"author":{"gitId":"Juzzanoob"},"content":"        }"},{"lineNumber":21,"author":{"gitId":"Juzzanoob"},"content":"    }"},{"lineNumber":22,"author":{"gitId":"Juzzanoob"},"content":"}"}],"authorContributionMap":{"Juzzanoob":22}},{"path":"src/main/java/HelpCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Juzzanoob"},"content":"public class HelpCommand extends Command {"},{"lineNumber":2,"author":{"gitId":"Juzzanoob"},"content":""},{"lineNumber":3,"author":{"gitId":"Juzzanoob"},"content":"    static private String HELP_MESSAGE \u003d"},{"lineNumber":4,"author":{"gitId":"Juzzanoob"},"content":"            \"Here are the list of commands you can use:\\n\" +"},{"lineNumber":5,"author":{"gitId":"Juzzanoob"},"content":"            \"\u0027help\u0027 - displays this text\\n\" +"},{"lineNumber":6,"author":{"gitId":"Juzzanoob"},"content":"            \"\u0027list\u0027 - lists the tasks in your task list\\n\" +"},{"lineNumber":7,"author":{"gitId":"Juzzanoob"},"content":"            \"\u0027done\u0027 - completes a task in your task list, format: done [index no. of task to complete]\\n\" +"},{"lineNumber":8,"author":{"gitId":"Juzzanoob"},"content":"            \"\u0027delete\u0027 - deletes a task in your task list, format: delete [index no. of task to delete]\\n\" +"},{"lineNumber":9,"author":{"gitId":"Juzzanoob"},"content":"            \"\u0027find\u0027 - finds a task(s) containing one specified keyword, format: find [keyword]\\n\" +"},{"lineNumber":10,"author":{"gitId":"Juzzanoob"},"content":"            \"\u0027bye\u0027 - exits this application\\n\" +"},{"lineNumber":11,"author":{"gitId":"Juzzanoob"},"content":"            \"\u0027todo\u0027 - adds a ToDo task to the task list. format: todo [description]\\n\" +"},{"lineNumber":12,"author":{"gitId":"Juzzanoob"},"content":"            \"\u0027event\u0027 - adds an Event to the task list, format: event [description] /by: [date] [time]\\n\" +"},{"lineNumber":13,"author":{"gitId":"Juzzanoob"},"content":"            \"\u0027deadline\u0027 - adds a Deadline to the task list, format: deadline [description] /by: [date] [time]\";"},{"lineNumber":14,"author":{"gitId":"Juzzanoob"},"content":""},{"lineNumber":15,"author":{"gitId":"Juzzanoob"},"content":"    public HelpCommand(Parser parser, Ui ui, Storage storage) {"},{"lineNumber":16,"author":{"gitId":"Juzzanoob"},"content":"        super(parser, ui, storage);"},{"lineNumber":17,"author":{"gitId":"Juzzanoob"},"content":"    }"},{"lineNumber":18,"author":{"gitId":"Juzzanoob"},"content":""},{"lineNumber":19,"author":{"gitId":"Juzzanoob"},"content":"    public String execute() {"},{"lineNumber":20,"author":{"gitId":"Juzzanoob"},"content":"        return HELP_MESSAGE;"},{"lineNumber":21,"author":{"gitId":"Juzzanoob"},"content":"    }"},{"lineNumber":22,"author":{"gitId":"Juzzanoob"},"content":"}"}],"authorContributionMap":{"Juzzanoob":22}},{"path":"src/main/java/Launcher.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Juzzanoob"},"content":"import javafx.application.Application;"},{"lineNumber":2,"author":{"gitId":"Juzzanoob"},"content":""},{"lineNumber":3,"author":{"gitId":"Juzzanoob"},"content":"/**"},{"lineNumber":4,"author":{"gitId":"Juzzanoob"},"content":" * A launcher class to workaround classpath issues."},{"lineNumber":5,"author":{"gitId":"Juzzanoob"},"content":" */"},{"lineNumber":6,"author":{"gitId":"Juzzanoob"},"content":"public class Launcher {"},{"lineNumber":7,"author":{"gitId":"Juzzanoob"},"content":"    public static void main(String[] args) {"},{"lineNumber":8,"author":{"gitId":"Juzzanoob"},"content":"        Application.launch(Main.class, args);"},{"lineNumber":9,"author":{"gitId":"Juzzanoob"},"content":"    }"},{"lineNumber":10,"author":{"gitId":"Juzzanoob"},"content":"}"}],"authorContributionMap":{"Juzzanoob":10}},{"path":"src/main/java/ListCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Juzzanoob"},"content":"public class ListCommand extends Command {"},{"lineNumber":2,"author":{"gitId":"Juzzanoob"},"content":""},{"lineNumber":3,"author":{"gitId":"Juzzanoob"},"content":"    static private String ERROR_MESSAGE \u003d \"Oops! There appears to be some error with the tasklist\";"},{"lineNumber":4,"author":{"gitId":"Juzzanoob"},"content":""},{"lineNumber":5,"author":{"gitId":"Juzzanoob"},"content":"    public ListCommand(Parser parser, Ui ui, Storage storage) {"},{"lineNumber":6,"author":{"gitId":"Juzzanoob"},"content":"        super(parser, ui, storage);"},{"lineNumber":7,"author":{"gitId":"Juzzanoob"},"content":"    }"},{"lineNumber":8,"author":{"gitId":"Juzzanoob"},"content":""},{"lineNumber":9,"author":{"gitId":"Juzzanoob"},"content":"    public String execute() throws DukeException {"},{"lineNumber":10,"author":{"gitId":"Juzzanoob"},"content":"        try {"},{"lineNumber":11,"author":{"gitId":"Juzzanoob"},"content":"            String output \u003d userInterface.displayListMessage(taskList);"},{"lineNumber":12,"author":{"gitId":"Juzzanoob"},"content":"            return output;"},{"lineNumber":13,"author":{"gitId":"Juzzanoob"},"content":"        } catch (DukeException e) {"},{"lineNumber":14,"author":{"gitId":"Juzzanoob"},"content":"            throw new DukeException(ERROR_MESSAGE);"},{"lineNumber":15,"author":{"gitId":"Juzzanoob"},"content":"        }"},{"lineNumber":16,"author":{"gitId":"Juzzanoob"},"content":"    }"},{"lineNumber":17,"author":{"gitId":"Juzzanoob"},"content":"}"}],"authorContributionMap":{"Juzzanoob":17}},{"path":"src/main/java/Main.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Juzzanoob"},"content":"import java.io.IOException;"},{"lineNumber":2,"author":{"gitId":"Juzzanoob"},"content":""},{"lineNumber":3,"author":{"gitId":"Juzzanoob"},"content":"import javafx.application.Application;"},{"lineNumber":4,"author":{"gitId":"Juzzanoob"},"content":"import javafx.fxml.FXMLLoader;"},{"lineNumber":5,"author":{"gitId":"Juzzanoob"},"content":"import javafx.scene.Scene;"},{"lineNumber":6,"author":{"gitId":"Juzzanoob"},"content":"import javafx.scene.layout.AnchorPane;"},{"lineNumber":7,"author":{"gitId":"Juzzanoob"},"content":"import javafx.stage.Stage;"},{"lineNumber":8,"author":{"gitId":"Juzzanoob"},"content":""},{"lineNumber":9,"author":{"gitId":"Juzzanoob"},"content":"/**"},{"lineNumber":10,"author":{"gitId":"Juzzanoob"},"content":" * A GUI for Duke using FXML."},{"lineNumber":11,"author":{"gitId":"Juzzanoob"},"content":" */"},{"lineNumber":12,"author":{"gitId":"Juzzanoob"},"content":"public class Main extends Application {"},{"lineNumber":13,"author":{"gitId":"Juzzanoob"},"content":""},{"lineNumber":14,"author":{"gitId":"Juzzanoob"},"content":"    private Duke duke \u003d new Duke();"},{"lineNumber":15,"author":{"gitId":"Juzzanoob"},"content":""},{"lineNumber":16,"author":{"gitId":"Juzzanoob"},"content":"    @Override"},{"lineNumber":17,"author":{"gitId":"Juzzanoob"},"content":"    public void start(Stage stage) {"},{"lineNumber":18,"author":{"gitId":"Juzzanoob"},"content":"        try {"},{"lineNumber":19,"author":{"gitId":"Juzzanoob"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(Main.class.getResource(\"/view/MainWindow.fxml\"));"},{"lineNumber":20,"author":{"gitId":"Juzzanoob"},"content":"            AnchorPane ap \u003d fxmlLoader.load();"},{"lineNumber":21,"author":{"gitId":"Juzzanoob"},"content":"            Scene scene \u003d new Scene(ap);"},{"lineNumber":22,"author":{"gitId":"Juzzanoob"},"content":"            stage.setScene(scene);"},{"lineNumber":23,"author":{"gitId":"Juzzanoob"},"content":"            stage.setTitle(\"Duke\");"},{"lineNumber":24,"author":{"gitId":"Juzzanoob"},"content":"            fxmlLoader.\u003cMainWindow\u003egetController().setDuke(duke);"},{"lineNumber":25,"author":{"gitId":"Juzzanoob"},"content":"            stage.show();"},{"lineNumber":26,"author":{"gitId":"Juzzanoob"},"content":"        } catch (IOException e) {"},{"lineNumber":27,"author":{"gitId":"Juzzanoob"},"content":"            e.printStackTrace();"},{"lineNumber":28,"author":{"gitId":"Juzzanoob"},"content":"        }"},{"lineNumber":29,"author":{"gitId":"Juzzanoob"},"content":"    }"},{"lineNumber":30,"author":{"gitId":"Juzzanoob"},"content":"}"}],"authorContributionMap":{"Juzzanoob":30}},{"path":"src/main/java/MainWindow.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Juzzanoob"},"content":"import javafx.application.Platform;"},{"lineNumber":2,"author":{"gitId":"Juzzanoob"},"content":"import javafx.fxml.FXML;"},{"lineNumber":3,"author":{"gitId":"Juzzanoob"},"content":"import javafx.scene.control.Button;"},{"lineNumber":4,"author":{"gitId":"Juzzanoob"},"content":"import javafx.scene.control.ScrollPane;"},{"lineNumber":5,"author":{"gitId":"Juzzanoob"},"content":"import javafx.scene.control.TextField;"},{"lineNumber":6,"author":{"gitId":"Juzzanoob"},"content":"import javafx.scene.image.Image;"},{"lineNumber":7,"author":{"gitId":"Juzzanoob"},"content":"import javafx.scene.layout.AnchorPane;"},{"lineNumber":8,"author":{"gitId":"Juzzanoob"},"content":"import javafx.scene.layout.VBox;"},{"lineNumber":9,"author":{"gitId":"Juzzanoob"},"content":"/**"},{"lineNumber":10,"author":{"gitId":"Juzzanoob"},"content":" * Controller for MainWindow. Provides the layout for the other controls."},{"lineNumber":11,"author":{"gitId":"Juzzanoob"},"content":" */"},{"lineNumber":12,"author":{"gitId":"Juzzanoob"},"content":"public class MainWindow extends AnchorPane {"},{"lineNumber":13,"author":{"gitId":"Juzzanoob"},"content":"    @FXML"},{"lineNumber":14,"author":{"gitId":"Juzzanoob"},"content":"    private ScrollPane scrollPane;"},{"lineNumber":15,"author":{"gitId":"Juzzanoob"},"content":"    @FXML"},{"lineNumber":16,"author":{"gitId":"Juzzanoob"},"content":"    private VBox dialogContainer;"},{"lineNumber":17,"author":{"gitId":"Juzzanoob"},"content":"    @FXML"},{"lineNumber":18,"author":{"gitId":"Juzzanoob"},"content":"    private TextField userInput;"},{"lineNumber":19,"author":{"gitId":"Juzzanoob"},"content":"    @FXML"},{"lineNumber":20,"author":{"gitId":"Juzzanoob"},"content":"    private Button sendButton;"},{"lineNumber":21,"author":{"gitId":"Juzzanoob"},"content":""},{"lineNumber":22,"author":{"gitId":"Juzzanoob"},"content":"    private Duke duke;"},{"lineNumber":23,"author":{"gitId":"Juzzanoob"},"content":"    private String CLOSE_COMMAND \u003d \"bye\";"},{"lineNumber":24,"author":{"gitId":"Juzzanoob"},"content":""},{"lineNumber":25,"author":{"gitId":"Juzzanoob"},"content":"    private Image userImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaUser.png\"));"},{"lineNumber":26,"author":{"gitId":"Juzzanoob"},"content":"    private Image dukeImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaDuke.png\"));"},{"lineNumber":27,"author":{"gitId":"Juzzanoob"},"content":""},{"lineNumber":28,"author":{"gitId":"Juzzanoob"},"content":"    @FXML"},{"lineNumber":29,"author":{"gitId":"Juzzanoob"},"content":"    public void initialize() {"},{"lineNumber":30,"author":{"gitId":"Juzzanoob"},"content":"        scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());"},{"lineNumber":31,"author":{"gitId":"Juzzanoob"},"content":"    }"},{"lineNumber":32,"author":{"gitId":"Juzzanoob"},"content":""},{"lineNumber":33,"author":{"gitId":"Juzzanoob"},"content":"    public void setDuke(Duke d) {"},{"lineNumber":34,"author":{"gitId":"Juzzanoob"},"content":"        duke \u003d d;"},{"lineNumber":35,"author":{"gitId":"Juzzanoob"},"content":"    }"},{"lineNumber":36,"author":{"gitId":"Juzzanoob"},"content":""},{"lineNumber":37,"author":{"gitId":"Juzzanoob"},"content":"    /**"},{"lineNumber":38,"author":{"gitId":"Juzzanoob"},"content":"     * Creates two dialog boxes, one echoing user input and the other containing Duke\u0027s reply and then appends them to"},{"lineNumber":39,"author":{"gitId":"Juzzanoob"},"content":"     * the dialog container. Clears the user input after processing."},{"lineNumber":40,"author":{"gitId":"Juzzanoob"},"content":"     */"},{"lineNumber":41,"author":{"gitId":"Juzzanoob"},"content":"    @FXML"},{"lineNumber":42,"author":{"gitId":"Juzzanoob"},"content":"    private void handleUserInput() {"},{"lineNumber":43,"author":{"gitId":"Juzzanoob"},"content":"        String input \u003d userInput.getText();"},{"lineNumber":44,"author":{"gitId":"Juzzanoob"},"content":"        userInput.clear();"},{"lineNumber":45,"author":{"gitId":"Juzzanoob"},"content":""},{"lineNumber":46,"author":{"gitId":"Juzzanoob"},"content":"        if (input.equalsIgnoreCase(CLOSE_COMMAND)) {"},{"lineNumber":47,"author":{"gitId":"Juzzanoob"},"content":"            Platform.exit();"},{"lineNumber":48,"author":{"gitId":"Juzzanoob"},"content":""},{"lineNumber":49,"author":{"gitId":"Juzzanoob"},"content":"        } else {"},{"lineNumber":50,"author":{"gitId":"Juzzanoob"},"content":"            String response \u003d duke.getResponse(input);"},{"lineNumber":51,"author":{"gitId":"Juzzanoob"},"content":"            dialogContainer.getChildren().addAll("},{"lineNumber":52,"author":{"gitId":"Juzzanoob"},"content":"                    DialogBox.getUserDialog(input, userImage),"},{"lineNumber":53,"author":{"gitId":"Juzzanoob"},"content":"                    DialogBox.getDukeDialog(response, dukeImage)"},{"lineNumber":54,"author":{"gitId":"Juzzanoob"},"content":"            );"},{"lineNumber":55,"author":{"gitId":"Juzzanoob"},"content":""},{"lineNumber":56,"author":{"gitId":"Juzzanoob"},"content":"        }"},{"lineNumber":57,"author":{"gitId":"Juzzanoob"},"content":"    }"},{"lineNumber":58,"author":{"gitId":"Juzzanoob"},"content":"}"}],"authorContributionMap":{"Juzzanoob":58}},{"path":"src/main/java/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Juzzanoob"},"content":"/**"},{"lineNumber":2,"author":{"gitId":"Juzzanoob"},"content":" * Parses user input."},{"lineNumber":3,"author":{"gitId":"Juzzanoob"},"content":" */"},{"lineNumber":4,"author":{"gitId":"Juzzanoob"},"content":"public class Parser {"},{"lineNumber":5,"author":{"gitId":"Juzzanoob"},"content":""},{"lineNumber":6,"author":{"gitId":"Juzzanoob"},"content":"    /** String array of user input */"},{"lineNumber":7,"author":{"gitId":"Juzzanoob"},"content":"    private String[] input;"},{"lineNumber":8,"author":{"gitId":"Juzzanoob"},"content":""},{"lineNumber":9,"author":{"gitId":"Juzzanoob"},"content":"    static private final String LIST \u003d \"list\";"},{"lineNumber":10,"author":{"gitId":"Juzzanoob"},"content":"    static private final String DONE \u003d \"done\";"},{"lineNumber":11,"author":{"gitId":"Juzzanoob"},"content":"    static private final String DELETE \u003d \"delete\";"},{"lineNumber":12,"author":{"gitId":"Juzzanoob"},"content":"    static private final String TODO \u003d \"todo\";"},{"lineNumber":13,"author":{"gitId":"Juzzanoob"},"content":"    static private final String EVENT \u003d \"event\";"},{"lineNumber":14,"author":{"gitId":"Juzzanoob"},"content":"    static private final String DEADLINE \u003d \"deadline\";"},{"lineNumber":15,"author":{"gitId":"Juzzanoob"},"content":"    static private final String FIND \u003d \"find\";"},{"lineNumber":16,"author":{"gitId":"Juzzanoob"},"content":"    static private final String BYE \u003d \"bye\";"},{"lineNumber":17,"author":{"gitId":"Juzzanoob"},"content":"    static private final String HELP \u003d \"help\";"},{"lineNumber":18,"author":{"gitId":"Juzzanoob"},"content":""},{"lineNumber":19,"author":{"gitId":"Juzzanoob"},"content":"    static private final String UNKNOWN_ERROR \u003d"},{"lineNumber":20,"author":{"gitId":"Juzzanoob"},"content":"            \"Oops! I didn\u0027t catch your command, could you please try again?\\n\" +"},{"lineNumber":21,"author":{"gitId":"Juzzanoob"},"content":"                    \"Make sure your input is correct! (Hint: use the \u0027help\u0027 command to see input formats)\";"},{"lineNumber":22,"author":{"gitId":"Juzzanoob"},"content":""},{"lineNumber":23,"author":{"gitId":"Juzzanoob"},"content":""},{"lineNumber":24,"author":{"gitId":"Juzzanoob"},"content":"    /**"},{"lineNumber":25,"author":{"gitId":"Juzzanoob"},"content":"     * Creates Parser object from given String input."},{"lineNumber":26,"author":{"gitId":"Juzzanoob"},"content":"     *"},{"lineNumber":27,"author":{"gitId":"Juzzanoob"},"content":"     * @param input String input to be parsed."},{"lineNumber":28,"author":{"gitId":"Juzzanoob"},"content":"     */"},{"lineNumber":29,"author":{"gitId":"Juzzanoob"},"content":"    public Parser(String input) {"},{"lineNumber":30,"author":{"gitId":"Juzzanoob"},"content":"        this.input \u003d input.split(\" \");"},{"lineNumber":31,"author":{"gitId":"Juzzanoob"},"content":"    }"},{"lineNumber":32,"author":{"gitId":"Juzzanoob"},"content":""},{"lineNumber":33,"author":{"gitId":"Juzzanoob"},"content":"    /**"},{"lineNumber":34,"author":{"gitId":"Juzzanoob"},"content":"     * Returns a Command object based on the user\u0027s input."},{"lineNumber":35,"author":{"gitId":"Juzzanoob"},"content":"     *"},{"lineNumber":36,"author":{"gitId":"Juzzanoob"},"content":"     * @return An executable command."},{"lineNumber":37,"author":{"gitId":"Juzzanoob"},"content":"     */"},{"lineNumber":38,"author":{"gitId":"Juzzanoob"},"content":"    public Command getCommand(Parser parser, Ui ui, String storageLocation) throws DukeException {"},{"lineNumber":39,"author":{"gitId":"Juzzanoob"},"content":""},{"lineNumber":40,"author":{"gitId":"Juzzanoob"},"content":"        Storage storage \u003d new Storage(storageLocation);"},{"lineNumber":41,"author":{"gitId":"Juzzanoob"},"content":"        String userInput \u003d input[0].toLowerCase();"},{"lineNumber":42,"author":{"gitId":"Juzzanoob"},"content":"        Command output;"},{"lineNumber":43,"author":{"gitId":"Juzzanoob"},"content":""},{"lineNumber":44,"author":{"gitId":"Juzzanoob"},"content":"        switch (userInput) {"},{"lineNumber":45,"author":{"gitId":"Juzzanoob"},"content":"        case LIST:"},{"lineNumber":46,"author":{"gitId":"Juzzanoob"},"content":"            output \u003d new ListCommand(parser, ui, storage);"},{"lineNumber":47,"author":{"gitId":"Juzzanoob"},"content":"            break;"},{"lineNumber":48,"author":{"gitId":"Juzzanoob"},"content":""},{"lineNumber":49,"author":{"gitId":"Juzzanoob"},"content":"        case DONE:"},{"lineNumber":50,"author":{"gitId":"Juzzanoob"},"content":"            output \u003d new DoneCommand(parser, ui, storage);"},{"lineNumber":51,"author":{"gitId":"Juzzanoob"},"content":"            break;"},{"lineNumber":52,"author":{"gitId":"Juzzanoob"},"content":""},{"lineNumber":53,"author":{"gitId":"Juzzanoob"},"content":"        case DELETE:"},{"lineNumber":54,"author":{"gitId":"Juzzanoob"},"content":"            output \u003d new DeleteCommand(parser, ui, storage);"},{"lineNumber":55,"author":{"gitId":"Juzzanoob"},"content":"            break;"},{"lineNumber":56,"author":{"gitId":"Juzzanoob"},"content":""},{"lineNumber":57,"author":{"gitId":"Juzzanoob"},"content":"        case TODO:"},{"lineNumber":58,"author":{"gitId":"Juzzanoob"},"content":"            output \u003d new TodoCommand(parser, ui, storage);"},{"lineNumber":59,"author":{"gitId":"Juzzanoob"},"content":"            break;"},{"lineNumber":60,"author":{"gitId":"Juzzanoob"},"content":""},{"lineNumber":61,"author":{"gitId":"Juzzanoob"},"content":"        case EVENT:"},{"lineNumber":62,"author":{"gitId":"Juzzanoob"},"content":"            output \u003d new EventCommand(parser, ui, storage);"},{"lineNumber":63,"author":{"gitId":"Juzzanoob"},"content":"            break;"},{"lineNumber":64,"author":{"gitId":"Juzzanoob"},"content":""},{"lineNumber":65,"author":{"gitId":"Juzzanoob"},"content":"        case DEADLINE:"},{"lineNumber":66,"author":{"gitId":"Juzzanoob"},"content":"            output \u003d new DeadlineCommand(parser, ui, storage);"},{"lineNumber":67,"author":{"gitId":"Juzzanoob"},"content":"            break;"},{"lineNumber":68,"author":{"gitId":"Juzzanoob"},"content":""},{"lineNumber":69,"author":{"gitId":"Juzzanoob"},"content":"        case FIND:"},{"lineNumber":70,"author":{"gitId":"Juzzanoob"},"content":"            output \u003d new FindCommand(parser, ui, storage);"},{"lineNumber":71,"author":{"gitId":"Juzzanoob"},"content":"            break;"},{"lineNumber":72,"author":{"gitId":"Juzzanoob"},"content":""},{"lineNumber":73,"author":{"gitId":"Juzzanoob"},"content":"        case BYE:"},{"lineNumber":74,"author":{"gitId":"Juzzanoob"},"content":"            output \u003d new ByeCommand(parser, ui, storage);"},{"lineNumber":75,"author":{"gitId":"Juzzanoob"},"content":"            break;"},{"lineNumber":76,"author":{"gitId":"Juzzanoob"},"content":""},{"lineNumber":77,"author":{"gitId":"Juzzanoob"},"content":"        case HELP:"},{"lineNumber":78,"author":{"gitId":"Juzzanoob"},"content":"            output \u003d new HelpCommand(parser, ui, storage);"},{"lineNumber":79,"author":{"gitId":"Juzzanoob"},"content":"            break;"},{"lineNumber":80,"author":{"gitId":"Juzzanoob"},"content":""},{"lineNumber":81,"author":{"gitId":"Juzzanoob"},"content":"        default:"},{"lineNumber":82,"author":{"gitId":"Juzzanoob"},"content":"            throw new DukeException(UNKNOWN_ERROR);"},{"lineNumber":83,"author":{"gitId":"Juzzanoob"},"content":"        }"},{"lineNumber":84,"author":{"gitId":"Juzzanoob"},"content":""},{"lineNumber":85,"author":{"gitId":"Juzzanoob"},"content":"        return output;"},{"lineNumber":86,"author":{"gitId":"Juzzanoob"},"content":"    }"},{"lineNumber":87,"author":{"gitId":"Juzzanoob"},"content":""},{"lineNumber":88,"author":{"gitId":"Juzzanoob"},"content":"    /**"},{"lineNumber":89,"author":{"gitId":"Juzzanoob"},"content":"     * Returns number, given by user, indicating index of task on task list to be modified."},{"lineNumber":90,"author":{"gitId":"Juzzanoob"},"content":"     *"},{"lineNumber":91,"author":{"gitId":"Juzzanoob"},"content":"     * @return Integer stating the index of the task on task list to be modified."},{"lineNumber":92,"author":{"gitId":"Juzzanoob"},"content":"     * @throws DukeException If no input is found."},{"lineNumber":93,"author":{"gitId":"Juzzanoob"},"content":"     */"},{"lineNumber":94,"author":{"gitId":"Juzzanoob"},"content":"    public int getIndexToModify() throws DukeException {"},{"lineNumber":95,"author":{"gitId":"Juzzanoob"},"content":""},{"lineNumber":96,"author":{"gitId":"Juzzanoob"},"content":"        String index \u003d \"\";"},{"lineNumber":97,"author":{"gitId":"Juzzanoob"},"content":""},{"lineNumber":98,"author":{"gitId":"Juzzanoob"},"content":"        try {"},{"lineNumber":99,"author":{"gitId":"Juzzanoob"},"content":"            index \u003d input[1];"},{"lineNumber":100,"author":{"gitId":"Juzzanoob"},"content":""},{"lineNumber":101,"author":{"gitId":"Juzzanoob"},"content":"        } catch (ArrayIndexOutOfBoundsException e) {"},{"lineNumber":102,"author":{"gitId":"Juzzanoob"},"content":"            throw new DukeException();"},{"lineNumber":103,"author":{"gitId":"Juzzanoob"},"content":"        }"},{"lineNumber":104,"author":{"gitId":"Juzzanoob"},"content":""},{"lineNumber":105,"author":{"gitId":"Juzzanoob"},"content":"        return Integer.parseInt(index) - 1;"},{"lineNumber":106,"author":{"gitId":"Juzzanoob"},"content":"    }"},{"lineNumber":107,"author":{"gitId":"Juzzanoob"},"content":""},{"lineNumber":108,"author":{"gitId":"Juzzanoob"},"content":"    /**"},{"lineNumber":109,"author":{"gitId":"Juzzanoob"},"content":"     * Returns keyword given by user to search tasks for."},{"lineNumber":110,"author":{"gitId":"Juzzanoob"},"content":"     *"},{"lineNumber":111,"author":{"gitId":"Juzzanoob"},"content":"     * @return String of the keyword."},{"lineNumber":112,"author":{"gitId":"Juzzanoob"},"content":"     * @throws DukeException If no keyword is found."},{"lineNumber":113,"author":{"gitId":"Juzzanoob"},"content":"     */"},{"lineNumber":114,"author":{"gitId":"Juzzanoob"},"content":"    public String getKeyword() throws DukeException {"},{"lineNumber":115,"author":{"gitId":"Juzzanoob"},"content":""},{"lineNumber":116,"author":{"gitId":"Juzzanoob"},"content":"        try {"},{"lineNumber":117,"author":{"gitId":"Juzzanoob"},"content":"            return input[1];"},{"lineNumber":118,"author":{"gitId":"Juzzanoob"},"content":"        } catch (ArrayIndexOutOfBoundsException e) {"},{"lineNumber":119,"author":{"gitId":"Juzzanoob"},"content":"            throw new DukeException(\"search\");"},{"lineNumber":120,"author":{"gitId":"Juzzanoob"},"content":"        }"},{"lineNumber":121,"author":{"gitId":"Juzzanoob"},"content":"    }"},{"lineNumber":122,"author":{"gitId":"Juzzanoob"},"content":""},{"lineNumber":123,"author":{"gitId":"Juzzanoob"},"content":"    /**"},{"lineNumber":124,"author":{"gitId":"Juzzanoob"},"content":"     * Returns description of the Task that user wants to add."},{"lineNumber":125,"author":{"gitId":"Juzzanoob"},"content":"     *"},{"lineNumber":126,"author":{"gitId":"Juzzanoob"},"content":"     * @return String comprising description of the task."},{"lineNumber":127,"author":{"gitId":"Juzzanoob"},"content":"     * @throws DukeException if user input is incorrect."},{"lineNumber":128,"author":{"gitId":"Juzzanoob"},"content":"     */"},{"lineNumber":129,"author":{"gitId":"Juzzanoob"},"content":"    public String getTaskDescription() throws DukeException{"},{"lineNumber":130,"author":{"gitId":"Juzzanoob"},"content":"        String output \u003d \"\";"},{"lineNumber":131,"author":{"gitId":"Juzzanoob"},"content":""},{"lineNumber":132,"author":{"gitId":"Juzzanoob"},"content":"        try {"},{"lineNumber":133,"author":{"gitId":"Juzzanoob"},"content":"            for (int counter \u003d 1; counter \u003c input.length; counter++) {"},{"lineNumber":134,"author":{"gitId":"Juzzanoob"},"content":"                if (input[counter].startsWith(\"/\")) {"},{"lineNumber":135,"author":{"gitId":"Juzzanoob"},"content":"                    break;"},{"lineNumber":136,"author":{"gitId":"Juzzanoob"},"content":"                } else {"},{"lineNumber":137,"author":{"gitId":"Juzzanoob"},"content":"                    output \u003d output + \" \" + input[counter];"},{"lineNumber":138,"author":{"gitId":"Juzzanoob"},"content":"                }"},{"lineNumber":139,"author":{"gitId":"Juzzanoob"},"content":"            }"},{"lineNumber":140,"author":{"gitId":"Juzzanoob"},"content":""},{"lineNumber":141,"author":{"gitId":"Juzzanoob"},"content":"        } catch (ArrayIndexOutOfBoundsException e) {"},{"lineNumber":142,"author":{"gitId":"Juzzanoob"},"content":"            throw new DukeException();"},{"lineNumber":143,"author":{"gitId":"Juzzanoob"},"content":"        }"},{"lineNumber":144,"author":{"gitId":"Juzzanoob"},"content":""},{"lineNumber":145,"author":{"gitId":"Juzzanoob"},"content":"        return output;"},{"lineNumber":146,"author":{"gitId":"Juzzanoob"},"content":"    }"},{"lineNumber":147,"author":{"gitId":"Juzzanoob"},"content":""},{"lineNumber":148,"author":{"gitId":"Juzzanoob"},"content":"    /**"},{"lineNumber":149,"author":{"gitId":"Juzzanoob"},"content":"     * Returns String comprising date or deadline of the task."},{"lineNumber":150,"author":{"gitId":"Juzzanoob"},"content":"     *"},{"lineNumber":151,"author":{"gitId":"Juzzanoob"},"content":"     * @return String comprising date or deadline of the task."},{"lineNumber":152,"author":{"gitId":"Juzzanoob"},"content":"     * @throws DukeException if user did not input a date."},{"lineNumber":153,"author":{"gitId":"Juzzanoob"},"content":"     */"},{"lineNumber":154,"author":{"gitId":"Juzzanoob"},"content":"    public String getDate() throws DukeException {"},{"lineNumber":155,"author":{"gitId":"Juzzanoob"},"content":"        try {"},{"lineNumber":156,"author":{"gitId":"Juzzanoob"},"content":"            return input[input.length - 2];"},{"lineNumber":157,"author":{"gitId":"Juzzanoob"},"content":"        } catch (ArrayIndexOutOfBoundsException e) {"},{"lineNumber":158,"author":{"gitId":"Juzzanoob"},"content":"            throw new DukeException();"},{"lineNumber":159,"author":{"gitId":"Juzzanoob"},"content":"        }"},{"lineNumber":160,"author":{"gitId":"Juzzanoob"},"content":"    }"},{"lineNumber":161,"author":{"gitId":"Juzzanoob"},"content":""},{"lineNumber":162,"author":{"gitId":"Juzzanoob"},"content":"    /**"},{"lineNumber":163,"author":{"gitId":"Juzzanoob"},"content":"     * Returns String comprising time of the task."},{"lineNumber":164,"author":{"gitId":"Juzzanoob"},"content":"     *"},{"lineNumber":165,"author":{"gitId":"Juzzanoob"},"content":"     * @return String comprising time of the task."},{"lineNumber":166,"author":{"gitId":"Juzzanoob"},"content":"     * @throws DukeException if user did not input a time."},{"lineNumber":167,"author":{"gitId":"Juzzanoob"},"content":"     */"},{"lineNumber":168,"author":{"gitId":"Juzzanoob"},"content":"    public String getTime() throws DukeException {"},{"lineNumber":169,"author":{"gitId":"Juzzanoob"},"content":"        try {"},{"lineNumber":170,"author":{"gitId":"Juzzanoob"},"content":"            return input[input.length - 1];"},{"lineNumber":171,"author":{"gitId":"Juzzanoob"},"content":"        } catch (ArrayIndexOutOfBoundsException e) {"},{"lineNumber":172,"author":{"gitId":"Juzzanoob"},"content":"            throw new DukeException();"},{"lineNumber":173,"author":{"gitId":"Juzzanoob"},"content":"        }"},{"lineNumber":174,"author":{"gitId":"Juzzanoob"},"content":""},{"lineNumber":175,"author":{"gitId":"Juzzanoob"},"content":"    }"},{"lineNumber":176,"author":{"gitId":"Juzzanoob"},"content":"}"}],"authorContributionMap":{"Juzzanoob":176}},{"path":"src/main/java/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Juzzanoob"},"content":"import java.io.File;"},{"lineNumber":2,"author":{"gitId":"Juzzanoob"},"content":"import java.io.FileNotFoundException;"},{"lineNumber":3,"author":{"gitId":"Juzzanoob"},"content":"import java.io.FileWriter;"},{"lineNumber":4,"author":{"gitId":"Juzzanoob"},"content":"import java.io.IOException;"},{"lineNumber":5,"author":{"gitId":"Juzzanoob"},"content":"import java.time.LocalDate;"},{"lineNumber":6,"author":{"gitId":"Juzzanoob"},"content":"import java.time.LocalTime;"},{"lineNumber":7,"author":{"gitId":"Juzzanoob"},"content":"import java.time.format.DateTimeFormatter;"},{"lineNumber":8,"author":{"gitId":"Juzzanoob"},"content":"import java.util.ArrayList;"},{"lineNumber":9,"author":{"gitId":"Juzzanoob"},"content":"import java.util.Scanner;"},{"lineNumber":10,"author":{"gitId":"Juzzanoob"},"content":""},{"lineNumber":11,"author":{"gitId":"Juzzanoob"},"content":"/**"},{"lineNumber":12,"author":{"gitId":"Juzzanoob"},"content":" * Reads and writes task list file."},{"lineNumber":13,"author":{"gitId":"Juzzanoob"},"content":" * If the given file path leads to an empty file, Storage will write a new file in"},{"lineNumber":14,"author":{"gitId":"Juzzanoob"},"content":" * the given path."},{"lineNumber":15,"author":{"gitId":"Juzzanoob"},"content":" */"},{"lineNumber":16,"author":{"gitId":"Juzzanoob"},"content":"public class Storage {"},{"lineNumber":17,"author":{"gitId":"Juzzanoob"},"content":""},{"lineNumber":18,"author":{"gitId":"Juzzanoob"},"content":"    /** task list file. */"},{"lineNumber":19,"author":{"gitId":"Juzzanoob"},"content":"    private File file;"},{"lineNumber":20,"author":{"gitId":"Juzzanoob"},"content":""},{"lineNumber":21,"author":{"gitId":"Juzzanoob"},"content":"    /** directory path of the task list file. */"},{"lineNumber":22,"author":{"gitId":"Juzzanoob"},"content":"    private String filePath;"},{"lineNumber":23,"author":{"gitId":"Juzzanoob"},"content":""},{"lineNumber":24,"author":{"gitId":"Juzzanoob"},"content":"    private final String LOADING_ERROR \u003d \"loading error\";"},{"lineNumber":25,"author":{"gitId":"Juzzanoob"},"content":""},{"lineNumber":26,"author":{"gitId":"Juzzanoob"},"content":"    /**"},{"lineNumber":27,"author":{"gitId":"Juzzanoob"},"content":"     * Initializes Storage with a file path to read a file."},{"lineNumber":28,"author":{"gitId":"Juzzanoob"},"content":"     *"},{"lineNumber":29,"author":{"gitId":"Juzzanoob"},"content":"     * @param filePath path of the file."},{"lineNumber":30,"author":{"gitId":"Juzzanoob"},"content":"     */"},{"lineNumber":31,"author":{"gitId":"Juzzanoob"},"content":"    public Storage(String filePath) {"},{"lineNumber":32,"author":{"gitId":"Juzzanoob"},"content":"        this.filePath \u003d filePath;"},{"lineNumber":33,"author":{"gitId":"Juzzanoob"},"content":"        file \u003d new File(filePath);"},{"lineNumber":34,"author":{"gitId":"Juzzanoob"},"content":"    }"},{"lineNumber":35,"author":{"gitId":"Juzzanoob"},"content":""},{"lineNumber":36,"author":{"gitId":"Juzzanoob"},"content":"    /**"},{"lineNumber":37,"author":{"gitId":"Juzzanoob"},"content":"     * Reads the file from filePath."},{"lineNumber":38,"author":{"gitId":"Juzzanoob"},"content":"     *"},{"lineNumber":39,"author":{"gitId":"Juzzanoob"},"content":"     * @return An ArrayList of type Task containing tasks."},{"lineNumber":40,"author":{"gitId":"Juzzanoob"},"content":"     * @throws DukeException if no file found at given filePath."},{"lineNumber":41,"author":{"gitId":"Juzzanoob"},"content":"     */"},{"lineNumber":42,"author":{"gitId":"Juzzanoob"},"content":"    public ArrayList\u003cTask\u003e readFile() throws DukeException {"},{"lineNumber":43,"author":{"gitId":"Juzzanoob"},"content":""},{"lineNumber":44,"author":{"gitId":"Juzzanoob"},"content":"        ArrayList\u003cTask\u003e output \u003d new ArrayList\u003c\u003e();"},{"lineNumber":45,"author":{"gitId":"Juzzanoob"},"content":"        File file \u003d new File(filePath);"},{"lineNumber":46,"author":{"gitId":"Juzzanoob"},"content":""},{"lineNumber":47,"author":{"gitId":"Juzzanoob"},"content":"        try {"},{"lineNumber":48,"author":{"gitId":"Juzzanoob"},"content":"            Scanner scanner \u003d new Scanner(file);"},{"lineNumber":49,"author":{"gitId":"Juzzanoob"},"content":""},{"lineNumber":50,"author":{"gitId":"Juzzanoob"},"content":"            Task toAdd;"},{"lineNumber":51,"author":{"gitId":"Juzzanoob"},"content":""},{"lineNumber":52,"author":{"gitId":"Juzzanoob"},"content":"            while (scanner.hasNext()) {"},{"lineNumber":53,"author":{"gitId":"Juzzanoob"},"content":"                String taskLine \u003d scanner.nextLine();"},{"lineNumber":54,"author":{"gitId":"Juzzanoob"},"content":"                String[] split \u003d taskLine.split(\" \");"},{"lineNumber":55,"author":{"gitId":"Juzzanoob"},"content":"                String taskType \u003d split[0];"},{"lineNumber":56,"author":{"gitId":"Juzzanoob"},"content":"                String taskDone \u003d split[1];"},{"lineNumber":57,"author":{"gitId":"Juzzanoob"},"content":"                boolean isDone \u003d taskDone.equals(\"1\");"},{"lineNumber":58,"author":{"gitId":"Juzzanoob"},"content":"                String task \u003d \"\";"},{"lineNumber":59,"author":{"gitId":"Juzzanoob"},"content":""},{"lineNumber":60,"author":{"gitId":"Juzzanoob"},"content":"                int counter;"},{"lineNumber":61,"author":{"gitId":"Juzzanoob"},"content":""},{"lineNumber":62,"author":{"gitId":"Juzzanoob"},"content":"                outerloop:"},{"lineNumber":63,"author":{"gitId":"Juzzanoob"},"content":"                for (counter \u003d 2; counter \u003c split.length; counter++) {"},{"lineNumber":64,"author":{"gitId":"Juzzanoob"},"content":"                    if (split[counter].startsWith(\"(\")) {"},{"lineNumber":65,"author":{"gitId":"Juzzanoob"},"content":"                        break outerloop;"},{"lineNumber":66,"author":{"gitId":"Juzzanoob"},"content":"                    } else {"},{"lineNumber":67,"author":{"gitId":"Juzzanoob"},"content":"                        if (counter \u003d\u003d 1) {"},{"lineNumber":68,"author":{"gitId":"Juzzanoob"},"content":"                            task \u003d task + split[counter];"},{"lineNumber":69,"author":{"gitId":"Juzzanoob"},"content":"                        } else {"},{"lineNumber":70,"author":{"gitId":"Juzzanoob"},"content":"                            task \u003d task + \" \" + split[counter];"},{"lineNumber":71,"author":{"gitId":"Juzzanoob"},"content":"                        }"},{"lineNumber":72,"author":{"gitId":"Juzzanoob"},"content":"                    }"},{"lineNumber":73,"author":{"gitId":"Juzzanoob"},"content":"                }"},{"lineNumber":74,"author":{"gitId":"Juzzanoob"},"content":""},{"lineNumber":75,"author":{"gitId":"Juzzanoob"},"content":"                if (!taskType.equals(\"T\")) {"},{"lineNumber":76,"author":{"gitId":"Juzzanoob"},"content":"                    String fullDate, day, month, year;"},{"lineNumber":77,"author":{"gitId":"Juzzanoob"},"content":"                    counter++;"},{"lineNumber":78,"author":{"gitId":"Juzzanoob"},"content":"                    day \u003d split[counter];"},{"lineNumber":79,"author":{"gitId":"Juzzanoob"},"content":"                    counter++;"},{"lineNumber":80,"author":{"gitId":"Juzzanoob"},"content":"                    month \u003d split[counter];"},{"lineNumber":81,"author":{"gitId":"Juzzanoob"},"content":"                    counter++;"},{"lineNumber":82,"author":{"gitId":"Juzzanoob"},"content":"                    year \u003d split[counter];"},{"lineNumber":83,"author":{"gitId":"Juzzanoob"},"content":"                    fullDate \u003d day + \" \" + month + \" \" + year;"},{"lineNumber":84,"author":{"gitId":"Juzzanoob"},"content":"                    LocalDate date \u003d LocalDate.parse(fullDate, DateTimeFormatter.ofPattern(\"dd MMM yyyy\"));"},{"lineNumber":85,"author":{"gitId":"Juzzanoob"},"content":""},{"lineNumber":86,"author":{"gitId":"Juzzanoob"},"content":"                    counter++;"},{"lineNumber":87,"author":{"gitId":"Juzzanoob"},"content":"                    LocalTime time \u003d LocalTime.parse(split[counter], DateTimeFormatter.ofPattern(\"HHmm\"));"},{"lineNumber":88,"author":{"gitId":"Juzzanoob"},"content":""},{"lineNumber":89,"author":{"gitId":"Juzzanoob"},"content":"                    if (taskType.equals(\"E\")) {"},{"lineNumber":90,"author":{"gitId":"Juzzanoob"},"content":"                        toAdd \u003d new Event(task, date, time, isDone);"},{"lineNumber":91,"author":{"gitId":"Juzzanoob"},"content":"                    } else {"},{"lineNumber":92,"author":{"gitId":"Juzzanoob"},"content":"                        toAdd \u003d new Deadline(task, date, time, isDone);"},{"lineNumber":93,"author":{"gitId":"Juzzanoob"},"content":"                    }"},{"lineNumber":94,"author":{"gitId":"Juzzanoob"},"content":""},{"lineNumber":95,"author":{"gitId":"Juzzanoob"},"content":"                } else {"},{"lineNumber":96,"author":{"gitId":"Juzzanoob"},"content":"                    toAdd \u003d new ToDo(task, isDone);"},{"lineNumber":97,"author":{"gitId":"Juzzanoob"},"content":"                }"},{"lineNumber":98,"author":{"gitId":"Juzzanoob"},"content":""},{"lineNumber":99,"author":{"gitId":"Juzzanoob"},"content":"                if (isDone) {"},{"lineNumber":100,"author":{"gitId":"Juzzanoob"},"content":"                    toAdd.completeTask();"},{"lineNumber":101,"author":{"gitId":"Juzzanoob"},"content":"                }"},{"lineNumber":102,"author":{"gitId":"Juzzanoob"},"content":""},{"lineNumber":103,"author":{"gitId":"Juzzanoob"},"content":"                output.add(toAdd);"},{"lineNumber":104,"author":{"gitId":"Juzzanoob"},"content":"            }"},{"lineNumber":105,"author":{"gitId":"Juzzanoob"},"content":""},{"lineNumber":106,"author":{"gitId":"Juzzanoob"},"content":"        } catch (FileNotFoundException e) {"},{"lineNumber":107,"author":{"gitId":"Juzzanoob"},"content":"            throw new DukeException(LOADING_ERROR);"},{"lineNumber":108,"author":{"gitId":"Juzzanoob"},"content":"        }"},{"lineNumber":109,"author":{"gitId":"Juzzanoob"},"content":""},{"lineNumber":110,"author":{"gitId":"Juzzanoob"},"content":"        return output;"},{"lineNumber":111,"author":{"gitId":"Juzzanoob"},"content":"    }"},{"lineNumber":112,"author":{"gitId":"Juzzanoob"},"content":""},{"lineNumber":113,"author":{"gitId":"Juzzanoob"},"content":"    /**"},{"lineNumber":114,"author":{"gitId":"Juzzanoob"},"content":"     * Writes into the file from a given list of tasks."},{"lineNumber":115,"author":{"gitId":"Juzzanoob"},"content":"     *"},{"lineNumber":116,"author":{"gitId":"Juzzanoob"},"content":"     * @param taskList List of tasks to write into the file."},{"lineNumber":117,"author":{"gitId":"Juzzanoob"},"content":"     */"},{"lineNumber":118,"author":{"gitId":"Juzzanoob"},"content":"    public void writeFile(TaskList taskList) {"},{"lineNumber":119,"author":{"gitId":"Juzzanoob"},"content":"        try {"},{"lineNumber":120,"author":{"gitId":"Juzzanoob"},"content":"            FileWriter fileWriter \u003d new FileWriter(file);"},{"lineNumber":121,"author":{"gitId":"Juzzanoob"},"content":"            String toWrite \u003d \"\";"},{"lineNumber":122,"author":{"gitId":"Juzzanoob"},"content":"            ArrayList\u003cTask\u003e arr \u003d taskList.getTaskArrayList();"},{"lineNumber":123,"author":{"gitId":"Juzzanoob"},"content":""},{"lineNumber":124,"author":{"gitId":"Juzzanoob"},"content":"            for (int i \u003d 0; i \u003c arr.size(); i++) {"},{"lineNumber":125,"author":{"gitId":"Juzzanoob"},"content":"                if (i \u003d\u003d arr.size() - 1) {"},{"lineNumber":126,"author":{"gitId":"Juzzanoob"},"content":"                    toWrite \u003d toWrite + arr.get(i).taskStatus();"},{"lineNumber":127,"author":{"gitId":"Juzzanoob"},"content":"                } else {"},{"lineNumber":128,"author":{"gitId":"Juzzanoob"},"content":"                    toWrite \u003d toWrite + arr.get(i).taskStatus() + \"\\n\";"},{"lineNumber":129,"author":{"gitId":"Juzzanoob"},"content":"                }"},{"lineNumber":130,"author":{"gitId":"Juzzanoob"},"content":"            }"},{"lineNumber":131,"author":{"gitId":"Juzzanoob"},"content":""},{"lineNumber":132,"author":{"gitId":"Juzzanoob"},"content":"            fileWriter.write(toWrite);"},{"lineNumber":133,"author":{"gitId":"Juzzanoob"},"content":"            fileWriter.close();"},{"lineNumber":134,"author":{"gitId":"Juzzanoob"},"content":""},{"lineNumber":135,"author":{"gitId":"Juzzanoob"},"content":"        } catch (IOException e) {"},{"lineNumber":136,"author":{"gitId":"Juzzanoob"},"content":"            System.out.println(e.getMessage());"},{"lineNumber":137,"author":{"gitId":"Juzzanoob"},"content":"        }"},{"lineNumber":138,"author":{"gitId":"Juzzanoob"},"content":"    }"},{"lineNumber":139,"author":{"gitId":"Juzzanoob"},"content":"}"}],"authorContributionMap":{"Juzzanoob":139}},{"path":"src/main/java/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Juzzanoob"},"content":"/**"},{"lineNumber":2,"author":{"gitId":"Juzzanoob"},"content":" * Simulates a task to be completed."},{"lineNumber":3,"author":{"gitId":"Juzzanoob"},"content":" */"},{"lineNumber":4,"author":{"gitId":"Juzzanoob"},"content":"public class Task {"},{"lineNumber":5,"author":{"gitId":"Juzzanoob"},"content":""},{"lineNumber":6,"author":{"gitId":"Juzzanoob"},"content":"    /** states what the task is */"},{"lineNumber":7,"author":{"gitId":"Juzzanoob"},"content":"    private String task_details;"},{"lineNumber":8,"author":{"gitId":"Juzzanoob"},"content":""},{"lineNumber":9,"author":{"gitId":"Juzzanoob"},"content":"    /** indicates whether task is completed */"},{"lineNumber":10,"author":{"gitId":"Juzzanoob"},"content":"    private boolean isDone;"},{"lineNumber":11,"author":{"gitId":"Juzzanoob"},"content":""},{"lineNumber":12,"author":{"gitId":"Juzzanoob"},"content":"    /** Creates a task."},{"lineNumber":13,"author":{"gitId":"Juzzanoob"},"content":"     *"},{"lineNumber":14,"author":{"gitId":"Juzzanoob"},"content":"     * @param details details of the task."},{"lineNumber":15,"author":{"gitId":"Juzzanoob"},"content":"     */"},{"lineNumber":16,"author":{"gitId":"Juzzanoob"},"content":"    Task(String details){"},{"lineNumber":17,"author":{"gitId":"Juzzanoob"},"content":"        task_details \u003d details;"},{"lineNumber":18,"author":{"gitId":"Juzzanoob"},"content":"        isDone \u003d false;"},{"lineNumber":19,"author":{"gitId":"Juzzanoob"},"content":"    }"},{"lineNumber":20,"author":{"gitId":"Juzzanoob"},"content":""},{"lineNumber":21,"author":{"gitId":"Juzzanoob"},"content":"    // private constructor to maintain Immutability"},{"lineNumber":22,"author":{"gitId":"Juzzanoob"},"content":"    protected Task(String details, boolean indicator){"},{"lineNumber":23,"author":{"gitId":"Juzzanoob"},"content":"        task_details \u003d details;"},{"lineNumber":24,"author":{"gitId":"Juzzanoob"},"content":"        isDone \u003d indicator;"},{"lineNumber":25,"author":{"gitId":"Juzzanoob"},"content":"    }"},{"lineNumber":26,"author":{"gitId":"Juzzanoob"},"content":""},{"lineNumber":27,"author":{"gitId":"Juzzanoob"},"content":"    /** returns task details."},{"lineNumber":28,"author":{"gitId":"Juzzanoob"},"content":"     *"},{"lineNumber":29,"author":{"gitId":"Juzzanoob"},"content":"     * @return task details."},{"lineNumber":30,"author":{"gitId":"Juzzanoob"},"content":"     */"},{"lineNumber":31,"author":{"gitId":"Juzzanoob"},"content":"    public String getTask_details() {"},{"lineNumber":32,"author":{"gitId":"Juzzanoob"},"content":"        return task_details;"},{"lineNumber":33,"author":{"gitId":"Juzzanoob"},"content":"    }"},{"lineNumber":34,"author":{"gitId":"Juzzanoob"},"content":""},{"lineNumber":35,"author":{"gitId":"Juzzanoob"},"content":"    /** checks if task is completed."},{"lineNumber":36,"author":{"gitId":"Juzzanoob"},"content":"     *"},{"lineNumber":37,"author":{"gitId":"Juzzanoob"},"content":"     * @return completion status."},{"lineNumber":38,"author":{"gitId":"Juzzanoob"},"content":"     */"},{"lineNumber":39,"author":{"gitId":"Juzzanoob"},"content":"    public boolean isDone() {"},{"lineNumber":40,"author":{"gitId":"Juzzanoob"},"content":"        return isDone;"},{"lineNumber":41,"author":{"gitId":"Juzzanoob"},"content":"    }"},{"lineNumber":42,"author":{"gitId":"Juzzanoob"},"content":""},{"lineNumber":43,"author":{"gitId":"Juzzanoob"},"content":"    /** completes the task."},{"lineNumber":44,"author":{"gitId":"Juzzanoob"},"content":"     *"},{"lineNumber":45,"author":{"gitId":"Juzzanoob"},"content":"     * @return new completed Task with the same details."},{"lineNumber":46,"author":{"gitId":"Juzzanoob"},"content":"     */"},{"lineNumber":47,"author":{"gitId":"Juzzanoob"},"content":"    public Task completeTask() {"},{"lineNumber":48,"author":{"gitId":"Juzzanoob"},"content":"        return new Task(task_details, true);"},{"lineNumber":49,"author":{"gitId":"Juzzanoob"},"content":"    }"},{"lineNumber":50,"author":{"gitId":"Juzzanoob"},"content":""},{"lineNumber":51,"author":{"gitId":"Juzzanoob"},"content":"    /** returns completed status and task details as a String."},{"lineNumber":52,"author":{"gitId":"Juzzanoob"},"content":"     *"},{"lineNumber":53,"author":{"gitId":"Juzzanoob"},"content":"     * @return String stating completion status and task details."},{"lineNumber":54,"author":{"gitId":"Juzzanoob"},"content":"     */"},{"lineNumber":55,"author":{"gitId":"Juzzanoob"},"content":"    public String taskStatus() {"},{"lineNumber":56,"author":{"gitId":"Juzzanoob"},"content":"        if (isDone) {"},{"lineNumber":57,"author":{"gitId":"Juzzanoob"},"content":"           return \"1 \" + task_details;"},{"lineNumber":58,"author":{"gitId":"Juzzanoob"},"content":"        } else {"},{"lineNumber":59,"author":{"gitId":"Juzzanoob"},"content":"            return \"0 \" + task_details;"},{"lineNumber":60,"author":{"gitId":"Juzzanoob"},"content":"        }"},{"lineNumber":61,"author":{"gitId":"Juzzanoob"},"content":"    }"},{"lineNumber":62,"author":{"gitId":"Juzzanoob"},"content":"}"}],"authorContributionMap":{"Juzzanoob":62}},{"path":"src/main/java/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Juzzanoob"},"content":"import java.lang.reflect.Array;"},{"lineNumber":2,"author":{"gitId":"Juzzanoob"},"content":"import java.util.ArrayList;"},{"lineNumber":3,"author":{"gitId":"Juzzanoob"},"content":""},{"lineNumber":4,"author":{"gitId":"Juzzanoob"},"content":"/**"},{"lineNumber":5,"author":{"gitId":"Juzzanoob"},"content":" * Simulates a list of tasks."},{"lineNumber":6,"author":{"gitId":"Juzzanoob"},"content":" */"},{"lineNumber":7,"author":{"gitId":"Juzzanoob"},"content":"public class TaskList {"},{"lineNumber":8,"author":{"gitId":"Juzzanoob"},"content":""},{"lineNumber":9,"author":{"gitId":"Juzzanoob"},"content":"    /** Lists the tasks in an ArrayList */"},{"lineNumber":10,"author":{"gitId":"Juzzanoob"},"content":"    private ArrayList\u003cTask\u003e taskArrayList;"},{"lineNumber":11,"author":{"gitId":"Juzzanoob"},"content":""},{"lineNumber":12,"author":{"gitId":"Juzzanoob"},"content":"    /**"},{"lineNumber":13,"author":{"gitId":"Juzzanoob"},"content":"     * Creates a TaskList object consisting of an empty list of tasks."},{"lineNumber":14,"author":{"gitId":"Juzzanoob"},"content":"     */"},{"lineNumber":15,"author":{"gitId":"Juzzanoob"},"content":"    public TaskList() {"},{"lineNumber":16,"author":{"gitId":"Juzzanoob"},"content":"        taskArrayList \u003d new ArrayList\u003c\u003e();"},{"lineNumber":17,"author":{"gitId":"Juzzanoob"},"content":"    }"},{"lineNumber":18,"author":{"gitId":"Juzzanoob"},"content":""},{"lineNumber":19,"author":{"gitId":"Juzzanoob"},"content":"    /**"},{"lineNumber":20,"author":{"gitId":"Juzzanoob"},"content":"     * Creates a TaskList object consisting of a lists of tasks."},{"lineNumber":21,"author":{"gitId":"Juzzanoob"},"content":"     *"},{"lineNumber":22,"author":{"gitId":"Juzzanoob"},"content":"     * @param taskArrayList ArrayList of tasks that TaskList will contain."},{"lineNumber":23,"author":{"gitId":"Juzzanoob"},"content":"     */"},{"lineNumber":24,"author":{"gitId":"Juzzanoob"},"content":"    public TaskList(ArrayList\u003cTask\u003e taskArrayList) {"},{"lineNumber":25,"author":{"gitId":"Juzzanoob"},"content":"        this.taskArrayList \u003d taskArrayList;"},{"lineNumber":26,"author":{"gitId":"Juzzanoob"},"content":"    }"},{"lineNumber":27,"author":{"gitId":"Juzzanoob"},"content":""},{"lineNumber":28,"author":{"gitId":"Juzzanoob"},"content":"    /**"},{"lineNumber":29,"author":{"gitId":"Juzzanoob"},"content":"     * Returns number of tasks in the list."},{"lineNumber":30,"author":{"gitId":"Juzzanoob"},"content":"     *"},{"lineNumber":31,"author":{"gitId":"Juzzanoob"},"content":"     * @return Integer denoting number of tasks in the list."},{"lineNumber":32,"author":{"gitId":"Juzzanoob"},"content":"     */"},{"lineNumber":33,"author":{"gitId":"Juzzanoob"},"content":"    public int getSize() {"},{"lineNumber":34,"author":{"gitId":"Juzzanoob"},"content":"        return taskArrayList.size();"},{"lineNumber":35,"author":{"gitId":"Juzzanoob"},"content":"    }"},{"lineNumber":36,"author":{"gitId":"Juzzanoob"},"content":""},{"lineNumber":37,"author":{"gitId":"Juzzanoob"},"content":"    /**"},{"lineNumber":38,"author":{"gitId":"Juzzanoob"},"content":"     * Returns the task at the given index."},{"lineNumber":39,"author":{"gitId":"Juzzanoob"},"content":"     *"},{"lineNumber":40,"author":{"gitId":"Juzzanoob"},"content":"     * @param index Index of the task of interest."},{"lineNumber":41,"author":{"gitId":"Juzzanoob"},"content":"     * @return Task at the given index."},{"lineNumber":42,"author":{"gitId":"Juzzanoob"},"content":"     */"},{"lineNumber":43,"author":{"gitId":"Juzzanoob"},"content":"    public Task getTask(int index) throws DukeException {"},{"lineNumber":44,"author":{"gitId":"Juzzanoob"},"content":"        try {"},{"lineNumber":45,"author":{"gitId":"Juzzanoob"},"content":"            return taskArrayList.get(index);"},{"lineNumber":46,"author":{"gitId":"Juzzanoob"},"content":""},{"lineNumber":47,"author":{"gitId":"Juzzanoob"},"content":"        } catch (IndexOutOfBoundsException e) {"},{"lineNumber":48,"author":{"gitId":"Juzzanoob"},"content":"            throw new DukeException();"},{"lineNumber":49,"author":{"gitId":"Juzzanoob"},"content":"        }"},{"lineNumber":50,"author":{"gitId":"Juzzanoob"},"content":"    }"},{"lineNumber":51,"author":{"gitId":"Juzzanoob"},"content":""},{"lineNumber":52,"author":{"gitId":"Juzzanoob"},"content":"    /**"},{"lineNumber":53,"author":{"gitId":"Juzzanoob"},"content":"     * Adds a task into the list."},{"lineNumber":54,"author":{"gitId":"Juzzanoob"},"content":"     *"},{"lineNumber":55,"author":{"gitId":"Juzzanoob"},"content":"     * @param task Task to be added into the list."},{"lineNumber":56,"author":{"gitId":"Juzzanoob"},"content":"     * @return New TaskList object with the added task."},{"lineNumber":57,"author":{"gitId":"Juzzanoob"},"content":"     */"},{"lineNumber":58,"author":{"gitId":"Juzzanoob"},"content":"    public TaskList addTask(Task task) {"},{"lineNumber":59,"author":{"gitId":"Juzzanoob"},"content":"        taskArrayList.add(task);"},{"lineNumber":60,"author":{"gitId":"Juzzanoob"},"content":"        return new TaskList(taskArrayList);"},{"lineNumber":61,"author":{"gitId":"Juzzanoob"},"content":"    }"},{"lineNumber":62,"author":{"gitId":"Juzzanoob"},"content":""},{"lineNumber":63,"author":{"gitId":"Juzzanoob"},"content":"    /**"},{"lineNumber":64,"author":{"gitId":"Juzzanoob"},"content":"     * Deletes a task at the given index."},{"lineNumber":65,"author":{"gitId":"Juzzanoob"},"content":"     *"},{"lineNumber":66,"author":{"gitId":"Juzzanoob"},"content":"     * @param index Index of the task to be deleted."},{"lineNumber":67,"author":{"gitId":"Juzzanoob"},"content":"     * @return New TaskList object with the task deleted."},{"lineNumber":68,"author":{"gitId":"Juzzanoob"},"content":"     */"},{"lineNumber":69,"author":{"gitId":"Juzzanoob"},"content":"    public TaskList deleteTask(int index) throws DukeException {"},{"lineNumber":70,"author":{"gitId":"Juzzanoob"},"content":"        try {"},{"lineNumber":71,"author":{"gitId":"Juzzanoob"},"content":"            taskArrayList.remove(index);"},{"lineNumber":72,"author":{"gitId":"Juzzanoob"},"content":"            return new TaskList(taskArrayList);"},{"lineNumber":73,"author":{"gitId":"Juzzanoob"},"content":""},{"lineNumber":74,"author":{"gitId":"Juzzanoob"},"content":"        } catch (ArrayIndexOutOfBoundsException e) {"},{"lineNumber":75,"author":{"gitId":"Juzzanoob"},"content":"            throw new DukeException();"},{"lineNumber":76,"author":{"gitId":"Juzzanoob"},"content":"        }"},{"lineNumber":77,"author":{"gitId":"Juzzanoob"},"content":"    }"},{"lineNumber":78,"author":{"gitId":"Juzzanoob"},"content":""},{"lineNumber":79,"author":{"gitId":"Juzzanoob"},"content":"    /**"},{"lineNumber":80,"author":{"gitId":"Juzzanoob"},"content":"     * Completes the task at the given index."},{"lineNumber":81,"author":{"gitId":"Juzzanoob"},"content":"     *"},{"lineNumber":82,"author":{"gitId":"Juzzanoob"},"content":"     * @param index Index of the task to be completed."},{"lineNumber":83,"author":{"gitId":"Juzzanoob"},"content":"     * @return New TaskList object with the task completed."},{"lineNumber":84,"author":{"gitId":"Juzzanoob"},"content":"     */"},{"lineNumber":85,"author":{"gitId":"Juzzanoob"},"content":"    public TaskList completeTask(int index) throws DukeException {"},{"lineNumber":86,"author":{"gitId":"Juzzanoob"},"content":"        try {"},{"lineNumber":87,"author":{"gitId":"Juzzanoob"},"content":"            ArrayList\u003cTask\u003e output \u003d taskArrayList;"},{"lineNumber":88,"author":{"gitId":"Juzzanoob"},"content":"            output.set(index, taskArrayList.get(index).completeTask());"},{"lineNumber":89,"author":{"gitId":"Juzzanoob"},"content":"            return new TaskList(output);"},{"lineNumber":90,"author":{"gitId":"Juzzanoob"},"content":"        } catch (ArrayIndexOutOfBoundsException e) {"},{"lineNumber":91,"author":{"gitId":"Juzzanoob"},"content":"            throw new DukeException();"},{"lineNumber":92,"author":{"gitId":"Juzzanoob"},"content":"        }"},{"lineNumber":93,"author":{"gitId":"Juzzanoob"},"content":"    }"},{"lineNumber":94,"author":{"gitId":"Juzzanoob"},"content":""},{"lineNumber":95,"author":{"gitId":"Juzzanoob"},"content":"    /**"},{"lineNumber":96,"author":{"gitId":"Juzzanoob"},"content":"     * Returns the entire list as a String."},{"lineNumber":97,"author":{"gitId":"Juzzanoob"},"content":"     * Tasks are separated by a new line character \"\\n\"."},{"lineNumber":98,"author":{"gitId":"Juzzanoob"},"content":"     *"},{"lineNumber":99,"author":{"gitId":"Juzzanoob"},"content":"     * @return String comprising the entire list of tasks."},{"lineNumber":100,"author":{"gitId":"Juzzanoob"},"content":"     */"},{"lineNumber":101,"author":{"gitId":"Juzzanoob"},"content":"    public String getList() throws DukeException {"},{"lineNumber":102,"author":{"gitId":"Juzzanoob"},"content":""},{"lineNumber":103,"author":{"gitId":"Juzzanoob"},"content":"        try {"},{"lineNumber":104,"author":{"gitId":"Juzzanoob"},"content":"            String output \u003d \"\";"},{"lineNumber":105,"author":{"gitId":"Juzzanoob"},"content":""},{"lineNumber":106,"author":{"gitId":"Juzzanoob"},"content":""},{"lineNumber":107,"author":{"gitId":"Juzzanoob"},"content":"            for (int i \u003d 0; i \u003c taskArrayList.size(); i++) {"},{"lineNumber":108,"author":{"gitId":"Juzzanoob"},"content":"                if (i \u003d\u003d taskArrayList.size() - 1) {"},{"lineNumber":109,"author":{"gitId":"Juzzanoob"},"content":"                    output \u003d output + getTask(i).taskStatus();"},{"lineNumber":110,"author":{"gitId":"Juzzanoob"},"content":"                } else {"},{"lineNumber":111,"author":{"gitId":"Juzzanoob"},"content":"                    output \u003d output + getTask(i).taskStatus() + \"\\n\";"},{"lineNumber":112,"author":{"gitId":"Juzzanoob"},"content":"                }"},{"lineNumber":113,"author":{"gitId":"Juzzanoob"},"content":"            }"},{"lineNumber":114,"author":{"gitId":"Juzzanoob"},"content":""},{"lineNumber":115,"author":{"gitId":"Juzzanoob"},"content":"            return output;"},{"lineNumber":116,"author":{"gitId":"Juzzanoob"},"content":""},{"lineNumber":117,"author":{"gitId":"Juzzanoob"},"content":"        } catch (DukeException e) {"},{"lineNumber":118,"author":{"gitId":"Juzzanoob"},"content":"            throw new DukeException();"},{"lineNumber":119,"author":{"gitId":"Juzzanoob"},"content":"        }"},{"lineNumber":120,"author":{"gitId":"Juzzanoob"},"content":"    }"},{"lineNumber":121,"author":{"gitId":"Juzzanoob"},"content":""},{"lineNumber":122,"author":{"gitId":"Juzzanoob"},"content":"    /**"},{"lineNumber":123,"author":{"gitId":"Juzzanoob"},"content":"     * Returns the ArrayList of tasks in this object."},{"lineNumber":124,"author":{"gitId":"Juzzanoob"},"content":"     *"},{"lineNumber":125,"author":{"gitId":"Juzzanoob"},"content":"     * @return ArrayList of tasks."},{"lineNumber":126,"author":{"gitId":"Juzzanoob"},"content":"     */"},{"lineNumber":127,"author":{"gitId":"Juzzanoob"},"content":"    public ArrayList\u003cTask\u003e getTaskArrayList() {"},{"lineNumber":128,"author":{"gitId":"Juzzanoob"},"content":"        return taskArrayList;"},{"lineNumber":129,"author":{"gitId":"Juzzanoob"},"content":"    }"},{"lineNumber":130,"author":{"gitId":"Juzzanoob"},"content":""},{"lineNumber":131,"author":{"gitId":"Juzzanoob"},"content":"    /**"},{"lineNumber":132,"author":{"gitId":"Juzzanoob"},"content":"     * Returns String containing statuses of tasks containing a keyword."},{"lineNumber":133,"author":{"gitId":"Juzzanoob"},"content":"     *"},{"lineNumber":134,"author":{"gitId":"Juzzanoob"},"content":"     * @param keyword Keyword used to search tasks."},{"lineNumber":135,"author":{"gitId":"Juzzanoob"},"content":"     * @return String containing statuses of tasks found."},{"lineNumber":136,"author":{"gitId":"Juzzanoob"},"content":"     */"},{"lineNumber":137,"author":{"gitId":"Juzzanoob"},"content":"    public String search(String keyword) {"},{"lineNumber":138,"author":{"gitId":"Juzzanoob"},"content":""},{"lineNumber":139,"author":{"gitId":"Juzzanoob"},"content":"        ArrayList\u003cTask\u003e found \u003d new ArrayList\u003c\u003e();"},{"lineNumber":140,"author":{"gitId":"Juzzanoob"},"content":""},{"lineNumber":141,"author":{"gitId":"Juzzanoob"},"content":"        for (Task t : taskArrayList) {"},{"lineNumber":142,"author":{"gitId":"Juzzanoob"},"content":"            if (t.getTask_details().contains(keyword)) {"},{"lineNumber":143,"author":{"gitId":"Juzzanoob"},"content":"                found.add(t);"},{"lineNumber":144,"author":{"gitId":"Juzzanoob"},"content":"            }"},{"lineNumber":145,"author":{"gitId":"Juzzanoob"},"content":"        }"},{"lineNumber":146,"author":{"gitId":"Juzzanoob"},"content":""},{"lineNumber":147,"author":{"gitId":"Juzzanoob"},"content":"        String output \u003d \"\";"},{"lineNumber":148,"author":{"gitId":"Juzzanoob"},"content":""},{"lineNumber":149,"author":{"gitId":"Juzzanoob"},"content":"        for (int i \u003d 0; i \u003c found.size(); i++) {"},{"lineNumber":150,"author":{"gitId":"Juzzanoob"},"content":"            if (i \u003d\u003d found.size() - 1) {"},{"lineNumber":151,"author":{"gitId":"Juzzanoob"},"content":"                output \u003d output + found.get(i).taskStatus();"},{"lineNumber":152,"author":{"gitId":"Juzzanoob"},"content":"            } else {"},{"lineNumber":153,"author":{"gitId":"Juzzanoob"},"content":"                output \u003d output + found.get(i).taskStatus() + \"\\n\";"},{"lineNumber":154,"author":{"gitId":"Juzzanoob"},"content":"            }"},{"lineNumber":155,"author":{"gitId":"Juzzanoob"},"content":"        }"},{"lineNumber":156,"author":{"gitId":"Juzzanoob"},"content":""},{"lineNumber":157,"author":{"gitId":"Juzzanoob"},"content":"        return output;"},{"lineNumber":158,"author":{"gitId":"Juzzanoob"},"content":"    }"},{"lineNumber":159,"author":{"gitId":"Juzzanoob"},"content":"}"}],"authorContributionMap":{"Juzzanoob":159}},{"path":"src/main/java/ToDo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Juzzanoob"},"content":"/**"},{"lineNumber":2,"author":{"gitId":"Juzzanoob"},"content":" * Simulates a todo task."},{"lineNumber":3,"author":{"gitId":"Juzzanoob"},"content":" */"},{"lineNumber":4,"author":{"gitId":"Juzzanoob"},"content":"public class ToDo extends Task {"},{"lineNumber":5,"author":{"gitId":"Juzzanoob"},"content":""},{"lineNumber":6,"author":{"gitId":"Juzzanoob"},"content":"    /**"},{"lineNumber":7,"author":{"gitId":"Juzzanoob"},"content":"     * Creates a new todo object."},{"lineNumber":8,"author":{"gitId":"Juzzanoob"},"content":"     *"},{"lineNumber":9,"author":{"gitId":"Juzzanoob"},"content":"     * @param details Details of the todo task."},{"lineNumber":10,"author":{"gitId":"Juzzanoob"},"content":"     */"},{"lineNumber":11,"author":{"gitId":"Juzzanoob"},"content":"    public ToDo(String details) {"},{"lineNumber":12,"author":{"gitId":"Juzzanoob"},"content":"        super(details);"},{"lineNumber":13,"author":{"gitId":"Juzzanoob"},"content":"    }"},{"lineNumber":14,"author":{"gitId":"Juzzanoob"},"content":""},{"lineNumber":15,"author":{"gitId":"Juzzanoob"},"content":"    /**"},{"lineNumber":16,"author":{"gitId":"Juzzanoob"},"content":"     * Constructor to create a task that is completed."},{"lineNumber":17,"author":{"gitId":"Juzzanoob"},"content":"     *"},{"lineNumber":18,"author":{"gitId":"Juzzanoob"},"content":"     * @param details Details of the todo task."},{"lineNumber":19,"author":{"gitId":"Juzzanoob"},"content":"     * @param indicator Denotes that event is completed regardless of boolean value passed."},{"lineNumber":20,"author":{"gitId":"Juzzanoob"},"content":"     */"},{"lineNumber":21,"author":{"gitId":"Juzzanoob"},"content":"    public ToDo(String details, boolean indicator) {"},{"lineNumber":22,"author":{"gitId":"Juzzanoob"},"content":"        super(details, indicator);"},{"lineNumber":23,"author":{"gitId":"Juzzanoob"},"content":"    }"},{"lineNumber":24,"author":{"gitId":"Juzzanoob"},"content":""},{"lineNumber":25,"author":{"gitId":"Juzzanoob"},"content":"    /**"},{"lineNumber":26,"author":{"gitId":"Juzzanoob"},"content":"     * Completes the todo task."},{"lineNumber":27,"author":{"gitId":"Juzzanoob"},"content":"     *"},{"lineNumber":28,"author":{"gitId":"Juzzanoob"},"content":"     * @return New completed todo object with the same details."},{"lineNumber":29,"author":{"gitId":"Juzzanoob"},"content":"     */"},{"lineNumber":30,"author":{"gitId":"Juzzanoob"},"content":"    public ToDo completeTask() {"},{"lineNumber":31,"author":{"gitId":"Juzzanoob"},"content":"        return new ToDo(this.getTask_details(), true);"},{"lineNumber":32,"author":{"gitId":"Juzzanoob"},"content":"    }"},{"lineNumber":33,"author":{"gitId":"Juzzanoob"},"content":""},{"lineNumber":34,"author":{"gitId":"Juzzanoob"},"content":"    /**"},{"lineNumber":35,"author":{"gitId":"Juzzanoob"},"content":"     * Returns a String describing the todo task as well as its completion status."},{"lineNumber":36,"author":{"gitId":"Juzzanoob"},"content":"     * @return"},{"lineNumber":37,"author":{"gitId":"Juzzanoob"},"content":"     */"},{"lineNumber":38,"author":{"gitId":"Juzzanoob"},"content":"    public String taskStatus() {"},{"lineNumber":39,"author":{"gitId":"Juzzanoob"},"content":"        if (this.isDone()) {"},{"lineNumber":40,"author":{"gitId":"Juzzanoob"},"content":"            return \"T 1\" + this.getTask_details();"},{"lineNumber":41,"author":{"gitId":"Juzzanoob"},"content":"        } else {"},{"lineNumber":42,"author":{"gitId":"Juzzanoob"},"content":"            return \"T 0\" + this.getTask_details();"},{"lineNumber":43,"author":{"gitId":"Juzzanoob"},"content":"        }"},{"lineNumber":44,"author":{"gitId":"Juzzanoob"},"content":"    }"},{"lineNumber":45,"author":{"gitId":"Juzzanoob"},"content":"}"}],"authorContributionMap":{"Juzzanoob":45}},{"path":"src/main/java/TodoCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Juzzanoob"},"content":"public class TodoCommand extends Command {"},{"lineNumber":2,"author":{"gitId":"Juzzanoob"},"content":""},{"lineNumber":3,"author":{"gitId":"Juzzanoob"},"content":"    static private final String ERROR_MESSAGE \u003d"},{"lineNumber":4,"author":{"gitId":"Juzzanoob"},"content":"            \"Oops! I didn\u0027t catch the details of your ToDo Task, could you please try again?\\n\" +"},{"lineNumber":5,"author":{"gitId":"Juzzanoob"},"content":"                    \"Make sure your input is correct! (Hint: use the \u0027help\u0027 command to see input formats)\";"},{"lineNumber":6,"author":{"gitId":"Juzzanoob"},"content":""},{"lineNumber":7,"author":{"gitId":"Juzzanoob"},"content":"    public TodoCommand(Parser parser, Ui ui, Storage storage) {"},{"lineNumber":8,"author":{"gitId":"Juzzanoob"},"content":"        super(parser, ui, storage);"},{"lineNumber":9,"author":{"gitId":"Juzzanoob"},"content":"    }"},{"lineNumber":10,"author":{"gitId":"Juzzanoob"},"content":""},{"lineNumber":11,"author":{"gitId":"Juzzanoob"},"content":"    public String execute() throws DukeException {"},{"lineNumber":12,"author":{"gitId":"Juzzanoob"},"content":""},{"lineNumber":13,"author":{"gitId":"Juzzanoob"},"content":"        try {"},{"lineNumber":14,"author":{"gitId":"Juzzanoob"},"content":"            String taskDesc \u003d parser.getTaskDescription();"},{"lineNumber":15,"author":{"gitId":"Juzzanoob"},"content":""},{"lineNumber":16,"author":{"gitId":"Juzzanoob"},"content":"            ToDo newTask \u003d new ToDo(taskDesc);"},{"lineNumber":17,"author":{"gitId":"Juzzanoob"},"content":"            taskList \u003d taskList.addTask(newTask);"},{"lineNumber":18,"author":{"gitId":"Juzzanoob"},"content":""},{"lineNumber":19,"author":{"gitId":"Juzzanoob"},"content":"            String output \u003d userInterface.displayTaskAdded(newTask, taskList);"},{"lineNumber":20,"author":{"gitId":"Juzzanoob"},"content":"            storage.writeFile(taskList);"},{"lineNumber":21,"author":{"gitId":"Juzzanoob"},"content":""},{"lineNumber":22,"author":{"gitId":"Juzzanoob"},"content":"            return output;"},{"lineNumber":23,"author":{"gitId":"Juzzanoob"},"content":""},{"lineNumber":24,"author":{"gitId":"Juzzanoob"},"content":"        } catch (DukeException e) {"},{"lineNumber":25,"author":{"gitId":"Juzzanoob"},"content":"            throw new DukeException(ERROR_MESSAGE);"},{"lineNumber":26,"author":{"gitId":"Juzzanoob"},"content":"        }"},{"lineNumber":27,"author":{"gitId":"Juzzanoob"},"content":"    }"},{"lineNumber":28,"author":{"gitId":"Juzzanoob"},"content":"}"}],"authorContributionMap":{"Juzzanoob":28}},{"path":"src/main/java/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Juzzanoob"},"content":"/**"},{"lineNumber":2,"author":{"gitId":"Juzzanoob"},"content":" * User Interface class to handle output to user."},{"lineNumber":3,"author":{"gitId":"Juzzanoob"},"content":" */"},{"lineNumber":4,"author":{"gitId":"Juzzanoob"},"content":"public class Ui {"},{"lineNumber":5,"author":{"gitId":"Juzzanoob"},"content":""},{"lineNumber":6,"author":{"gitId":"Juzzanoob"},"content":"    /**"},{"lineNumber":7,"author":{"gitId":"Juzzanoob"},"content":"     * Displays the welcome message when user enters program."},{"lineNumber":8,"author":{"gitId":"Juzzanoob"},"content":"     */"},{"lineNumber":9,"author":{"gitId":"Juzzanoob"},"content":"    public String displayWelcomeMessage() {"},{"lineNumber":10,"author":{"gitId":"Juzzanoob"},"content":"        return \"Hello! I\u0027m Duke\\nWhat can I do for you?\";"},{"lineNumber":11,"author":{"gitId":"Juzzanoob"},"content":"    }"},{"lineNumber":12,"author":{"gitId":"Juzzanoob"},"content":""},{"lineNumber":13,"author":{"gitId":"Juzzanoob"},"content":"    /**"},{"lineNumber":14,"author":{"gitId":"Juzzanoob"},"content":"     * Displays the closing message when user exits program."},{"lineNumber":15,"author":{"gitId":"Juzzanoob"},"content":"     */"},{"lineNumber":16,"author":{"gitId":"Juzzanoob"},"content":"    public String displayClosingMessage() {"},{"lineNumber":17,"author":{"gitId":"Juzzanoob"},"content":"        return \"Bye. Hope to see you again soon!\";"},{"lineNumber":18,"author":{"gitId":"Juzzanoob"},"content":"    }"},{"lineNumber":19,"author":{"gitId":"Juzzanoob"},"content":""},{"lineNumber":20,"author":{"gitId":"Juzzanoob"},"content":"    /**"},{"lineNumber":21,"author":{"gitId":"Juzzanoob"},"content":"     * Displays lists of tasks."},{"lineNumber":22,"author":{"gitId":"Juzzanoob"},"content":"     *"},{"lineNumber":23,"author":{"gitId":"Juzzanoob"},"content":"     * @param taskList TaskList containing list of tasks."},{"lineNumber":24,"author":{"gitId":"Juzzanoob"},"content":"     */"},{"lineNumber":25,"author":{"gitId":"Juzzanoob"},"content":"    public String displayListMessage(TaskList taskList) throws DukeException {"},{"lineNumber":26,"author":{"gitId":"Juzzanoob"},"content":""},{"lineNumber":27,"author":{"gitId":"Juzzanoob"},"content":"        try {"},{"lineNumber":28,"author":{"gitId":"Juzzanoob"},"content":"            String output;"},{"lineNumber":29,"author":{"gitId":"Juzzanoob"},"content":"            int size \u003d taskList.getSize();"},{"lineNumber":30,"author":{"gitId":"Juzzanoob"},"content":""},{"lineNumber":31,"author":{"gitId":"Juzzanoob"},"content":"            switch (size) {"},{"lineNumber":32,"author":{"gitId":"Juzzanoob"},"content":"            case 0:"},{"lineNumber":33,"author":{"gitId":"Juzzanoob"},"content":"                output \u003d \"There are currently no tasks in your list.\";"},{"lineNumber":34,"author":{"gitId":"Juzzanoob"},"content":"                break;"},{"lineNumber":35,"author":{"gitId":"Juzzanoob"},"content":""},{"lineNumber":36,"author":{"gitId":"Juzzanoob"},"content":"            case 1:"},{"lineNumber":37,"author":{"gitId":"Juzzanoob"},"content":"                output \u003d \"Here is the task in your list:\\n\" + taskList.getList();"},{"lineNumber":38,"author":{"gitId":"Juzzanoob"},"content":"                break;"},{"lineNumber":39,"author":{"gitId":"Juzzanoob"},"content":""},{"lineNumber":40,"author":{"gitId":"Juzzanoob"},"content":"            default:"},{"lineNumber":41,"author":{"gitId":"Juzzanoob"},"content":"                output \u003d \"Here are the tasks in your list:\\n\" + taskList.getList();"},{"lineNumber":42,"author":{"gitId":"Juzzanoob"},"content":"                break;"},{"lineNumber":43,"author":{"gitId":"Juzzanoob"},"content":"            }"},{"lineNumber":44,"author":{"gitId":"Juzzanoob"},"content":"            return output;"},{"lineNumber":45,"author":{"gitId":"Juzzanoob"},"content":""},{"lineNumber":46,"author":{"gitId":"Juzzanoob"},"content":"        } catch (DukeException e) {"},{"lineNumber":47,"author":{"gitId":"Juzzanoob"},"content":"            throw new DukeException();"},{"lineNumber":48,"author":{"gitId":"Juzzanoob"},"content":"        }"},{"lineNumber":49,"author":{"gitId":"Juzzanoob"},"content":"    }"},{"lineNumber":50,"author":{"gitId":"Juzzanoob"},"content":""},{"lineNumber":51,"author":{"gitId":"Juzzanoob"},"content":"    /**"},{"lineNumber":52,"author":{"gitId":"Juzzanoob"},"content":"     * Displays message when user adds a task."},{"lineNumber":53,"author":{"gitId":"Juzzanoob"},"content":"     *"},{"lineNumber":54,"author":{"gitId":"Juzzanoob"},"content":"     * @param task Task to be added."},{"lineNumber":55,"author":{"gitId":"Juzzanoob"},"content":"     * @param taskList TaskList containing updated list of tasks."},{"lineNumber":56,"author":{"gitId":"Juzzanoob"},"content":"     */"},{"lineNumber":57,"author":{"gitId":"Juzzanoob"},"content":"    public String displayTaskAdded(Task task, TaskList taskList) {"},{"lineNumber":58,"author":{"gitId":"Juzzanoob"},"content":"        String output \u003d \"Got it. I\u0027ve added this task:\\n\";"},{"lineNumber":59,"author":{"gitId":"Juzzanoob"},"content":"        output \u003d output + task.taskStatus() + \"\\n\";"},{"lineNumber":60,"author":{"gitId":"Juzzanoob"},"content":"        output \u003d output + \"Now you have \" + taskList.getSize() + \" tasks in the list\";"},{"lineNumber":61,"author":{"gitId":"Juzzanoob"},"content":""},{"lineNumber":62,"author":{"gitId":"Juzzanoob"},"content":"        return output;"},{"lineNumber":63,"author":{"gitId":"Juzzanoob"},"content":"    }"},{"lineNumber":64,"author":{"gitId":"Juzzanoob"},"content":""},{"lineNumber":65,"author":{"gitId":"Juzzanoob"},"content":"    /**"},{"lineNumber":66,"author":{"gitId":"Juzzanoob"},"content":"     * Displays message when user completes a task."},{"lineNumber":67,"author":{"gitId":"Juzzanoob"},"content":"     *"},{"lineNumber":68,"author":{"gitId":"Juzzanoob"},"content":"     * @param task Task that was completed."},{"lineNumber":69,"author":{"gitId":"Juzzanoob"},"content":"     */"},{"lineNumber":70,"author":{"gitId":"Juzzanoob"},"content":"    public String displayTaskCompleted(Task task) {"},{"lineNumber":71,"author":{"gitId":"Juzzanoob"},"content":"        String output \u003d \"Nice! I\u0027ve marked this task as done:\\n\" + task.taskStatus();"},{"lineNumber":72,"author":{"gitId":"Juzzanoob"},"content":"        return output;"},{"lineNumber":73,"author":{"gitId":"Juzzanoob"},"content":"    }"},{"lineNumber":74,"author":{"gitId":"Juzzanoob"},"content":""},{"lineNumber":75,"author":{"gitId":"Juzzanoob"},"content":"    /**"},{"lineNumber":76,"author":{"gitId":"Juzzanoob"},"content":"     * Displays message when user deletes a task."},{"lineNumber":77,"author":{"gitId":"Juzzanoob"},"content":"     *"},{"lineNumber":78,"author":{"gitId":"Juzzanoob"},"content":"     * @param task Task that was deleted."},{"lineNumber":79,"author":{"gitId":"Juzzanoob"},"content":"     * @param taskList TaskList containing updated list of tasks."},{"lineNumber":80,"author":{"gitId":"Juzzanoob"},"content":"     */"},{"lineNumber":81,"author":{"gitId":"Juzzanoob"},"content":"    public String displayTaskDeleted(Task task, TaskList taskList) {"},{"lineNumber":82,"author":{"gitId":"Juzzanoob"},"content":"        String output \u003d \"Noted. I have removed this task:\\n\";"},{"lineNumber":83,"author":{"gitId":"Juzzanoob"},"content":"        output \u003d output + task.taskStatus() + \"\\n\";"},{"lineNumber":84,"author":{"gitId":"Juzzanoob"},"content":"        output \u003d output + \"Now you have \" + taskList.getSize() + \" tasks in the list\";"},{"lineNumber":85,"author":{"gitId":"Juzzanoob"},"content":""},{"lineNumber":86,"author":{"gitId":"Juzzanoob"},"content":"        return output;"},{"lineNumber":87,"author":{"gitId":"Juzzanoob"},"content":"    }"},{"lineNumber":88,"author":{"gitId":"Juzzanoob"},"content":""},{"lineNumber":89,"author":{"gitId":"Juzzanoob"},"content":"    /**"},{"lineNumber":90,"author":{"gitId":"Juzzanoob"},"content":"     * Displays list of tasks containing a given keyword."},{"lineNumber":91,"author":{"gitId":"Juzzanoob"},"content":"     *"},{"lineNumber":92,"author":{"gitId":"Juzzanoob"},"content":"     * @param keyword Keyword used to search through tasks."},{"lineNumber":93,"author":{"gitId":"Juzzanoob"},"content":"     * @param taskList TaskList containing list of tasks to be searched through."},{"lineNumber":94,"author":{"gitId":"Juzzanoob"},"content":"     */"},{"lineNumber":95,"author":{"gitId":"Juzzanoob"},"content":"    public String displayTaskSearch(String keyword, TaskList taskList) {"},{"lineNumber":96,"author":{"gitId":"Juzzanoob"},"content":"        String output \u003d \"Here are the matching tasks in your list:\\n\";"},{"lineNumber":97,"author":{"gitId":"Juzzanoob"},"content":"        output \u003d output + taskList.search(keyword);"},{"lineNumber":98,"author":{"gitId":"Juzzanoob"},"content":"        return output;"},{"lineNumber":99,"author":{"gitId":"Juzzanoob"},"content":"    }"},{"lineNumber":100,"author":{"gitId":"Juzzanoob"},"content":""},{"lineNumber":101,"author":{"gitId":"Juzzanoob"},"content":"    public String displayErrorDetected(DukeException error) {"},{"lineNumber":102,"author":{"gitId":"Juzzanoob"},"content":"        String output \u003d error.getMessage();"},{"lineNumber":103,"author":{"gitId":"Juzzanoob"},"content":"        return output;"},{"lineNumber":104,"author":{"gitId":"Juzzanoob"},"content":"    }"},{"lineNumber":105,"author":{"gitId":"Juzzanoob"},"content":"}"}],"authorContributionMap":{"Juzzanoob":105}},{"path":"src/main/resources/view/DialogBox.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"Juzzanoob"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"},{"lineNumber":2,"author":{"gitId":"Juzzanoob"},"content":""},{"lineNumber":3,"author":{"gitId":"Juzzanoob"},"content":"\u003c?import javafx.geometry.Insets?\u003e"},{"lineNumber":4,"author":{"gitId":"Juzzanoob"},"content":"\u003c?import javafx.scene.control.Label?\u003e"},{"lineNumber":5,"author":{"gitId":"Juzzanoob"},"content":"\u003c?import javafx.scene.image.ImageView?\u003e"},{"lineNumber":6,"author":{"gitId":"Juzzanoob"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e"},{"lineNumber":7,"author":{"gitId":"Juzzanoob"},"content":""},{"lineNumber":8,"author":{"gitId":"Juzzanoob"},"content":"\u003cfx:root alignment\u003d\"TOP_RIGHT\" maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\" prefWidth\u003d\"400.0\" type\u003d\"javafx.scene.layout.HBox\" xmlns\u003d\"http://javafx.com/javafx/8.0.171\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e"},{"lineNumber":9,"author":{"gitId":"Juzzanoob"},"content":"    \u003cchildren\u003e"},{"lineNumber":10,"author":{"gitId":"Juzzanoob"},"content":"        \u003cLabel fx:id\u003d\"dialog\" text\u003d\"Label\" wrapText\u003d\"true\" /\u003e"},{"lineNumber":11,"author":{"gitId":"Juzzanoob"},"content":"        \u003cImageView fx:id\u003d\"displayPicture\" fitHeight\u003d\"99.0\" fitWidth\u003d\"99.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\" /\u003e"},{"lineNumber":12,"author":{"gitId":"Juzzanoob"},"content":"    \u003c/children\u003e"},{"lineNumber":13,"author":{"gitId":"Juzzanoob"},"content":"    \u003cpadding\u003e"},{"lineNumber":14,"author":{"gitId":"Juzzanoob"},"content":"        \u003cInsets bottom\u003d\"15.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"15.0\" /\u003e"},{"lineNumber":15,"author":{"gitId":"Juzzanoob"},"content":"    \u003c/padding\u003e"},{"lineNumber":16,"author":{"gitId":"Juzzanoob"},"content":"\u003c/fx:root\u003e"}],"authorContributionMap":{"Juzzanoob":16}},{"path":"src/main/resources/view/MainWindow.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"Juzzanoob"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"},{"lineNumber":2,"author":{"gitId":"Juzzanoob"},"content":""},{"lineNumber":3,"author":{"gitId":"Juzzanoob"},"content":"\u003c?import javafx.scene.control.Button?\u003e"},{"lineNumber":4,"author":{"gitId":"Juzzanoob"},"content":"\u003c?import javafx.scene.control.ScrollPane?\u003e"},{"lineNumber":5,"author":{"gitId":"Juzzanoob"},"content":"\u003c?import javafx.scene.control.TextField?\u003e"},{"lineNumber":6,"author":{"gitId":"Juzzanoob"},"content":"\u003c?import javafx.scene.layout.AnchorPane?\u003e"},{"lineNumber":7,"author":{"gitId":"Juzzanoob"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e"},{"lineNumber":8,"author":{"gitId":"Juzzanoob"},"content":""},{"lineNumber":9,"author":{"gitId":"Juzzanoob"},"content":"\u003cAnchorPane maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefHeight\u003d\"600.0\" prefWidth\u003d\"400.0\" xmlns\u003d\"http://javafx.com/javafx/8.0.171\" xmlns:fx\u003d\"http://javafx.com/fxml/1\" fx:controller\u003d\"MainWindow\"\u003e"},{"lineNumber":10,"author":{"gitId":"Juzzanoob"},"content":"    \u003cchildren\u003e"},{"lineNumber":11,"author":{"gitId":"Juzzanoob"},"content":"        \u003cTextField fx:id\u003d\"userInput\" layoutY\u003d\"558.0\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"324.0\" AnchorPane.bottomAnchor\u003d\"1.0\" /\u003e"},{"lineNumber":12,"author":{"gitId":"Juzzanoob"},"content":"        \u003cButton fx:id\u003d\"sendButton\" layoutX\u003d\"324.0\" layoutY\u003d\"558.0\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"76.0\" text\u003d\"Send\" /\u003e"},{"lineNumber":13,"author":{"gitId":"Juzzanoob"},"content":"        \u003cScrollPane fx:id\u003d\"scrollPane\" hbarPolicy\u003d\"NEVER\" hvalue\u003d\"1.0\" prefHeight\u003d\"557.0\" prefWidth\u003d\"400.0\" vvalue\u003d\"1.0\"\u003e"},{"lineNumber":14,"author":{"gitId":"Juzzanoob"},"content":"            \u003ccontent\u003e"},{"lineNumber":15,"author":{"gitId":"Juzzanoob"},"content":"                \u003cVBox fx:id\u003d\"dialogContainer\" prefHeight\u003d\"552.0\" prefWidth\u003d\"388.0\" /\u003e"},{"lineNumber":16,"author":{"gitId":"Juzzanoob"},"content":"            \u003c/content\u003e"},{"lineNumber":17,"author":{"gitId":"Juzzanoob"},"content":"        \u003c/ScrollPane\u003e"},{"lineNumber":18,"author":{"gitId":"Juzzanoob"},"content":"    \u003c/children\u003e"},{"lineNumber":19,"author":{"gitId":"Juzzanoob"},"content":"\u003c/AnchorPane\u003e"}],"authorContributionMap":{"Juzzanoob":19}},{"path":"test/DeadlineTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Juzzanoob"},"content":"import java.time.LocalDate;"},{"lineNumber":2,"author":{"gitId":"Juzzanoob"},"content":"import java.time.LocalTime;"},{"lineNumber":3,"author":{"gitId":"Juzzanoob"},"content":"import org.junit.jupiter.api.Test;"},{"lineNumber":4,"author":{"gitId":"Juzzanoob"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;"},{"lineNumber":5,"author":{"gitId":"Juzzanoob"},"content":"import static org.junit.jupiter.api.Assertions.fail;"},{"lineNumber":6,"author":{"gitId":"Juzzanoob"},"content":""},{"lineNumber":7,"author":{"gitId":"Juzzanoob"},"content":"public class DeadlineTest {"},{"lineNumber":8,"author":{"gitId":"Juzzanoob"},"content":""},{"lineNumber":9,"author":{"gitId":"Juzzanoob"},"content":"    @Test"},{"lineNumber":10,"author":{"gitId":"Juzzanoob"},"content":"    public void constructor_normalInputs_taskUncompleted() {"},{"lineNumber":11,"author":{"gitId":"Juzzanoob"},"content":"        LocalDate date \u003d LocalDate.of(2021, 01, 01);"},{"lineNumber":12,"author":{"gitId":"Juzzanoob"},"content":"        LocalTime time \u003d LocalTime.of(12, 34);"},{"lineNumber":13,"author":{"gitId":"Juzzanoob"},"content":""},{"lineNumber":14,"author":{"gitId":"Juzzanoob"},"content":"        assertEquals(false, new Deadline(\"test\", date, time).isDone());"},{"lineNumber":15,"author":{"gitId":"Juzzanoob"},"content":"    }"},{"lineNumber":16,"author":{"gitId":"Juzzanoob"},"content":""},{"lineNumber":17,"author":{"gitId":"Juzzanoob"},"content":"    @Test"},{"lineNumber":18,"author":{"gitId":"Juzzanoob"},"content":"    public void outputFormat_normalInputs_correctFormat() {"},{"lineNumber":19,"author":{"gitId":"Juzzanoob"},"content":"        LocalDate date \u003d LocalDate.of(2021, 01, 01);"},{"lineNumber":20,"author":{"gitId":"Juzzanoob"},"content":"        LocalTime time \u003d LocalTime.of(12, 34);"},{"lineNumber":21,"author":{"gitId":"Juzzanoob"},"content":""},{"lineNumber":22,"author":{"gitId":"Juzzanoob"},"content":"        assertEquals(\"D 0 test (by: 1 Jan 2021 1234 )\","},{"lineNumber":23,"author":{"gitId":"Juzzanoob"},"content":"                new Deadline(\"test\", date, time).taskStatus());"},{"lineNumber":24,"author":{"gitId":"Juzzanoob"},"content":"    }"},{"lineNumber":25,"author":{"gitId":"Juzzanoob"},"content":"}"}],"authorContributionMap":{"Juzzanoob":25}},{"path":"test/EventTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Juzzanoob"},"content":"import java.time.LocalDate;"},{"lineNumber":2,"author":{"gitId":"Juzzanoob"},"content":"import java.time.LocalTime;"},{"lineNumber":3,"author":{"gitId":"Juzzanoob"},"content":"import org.junit.jupiter.api.Test;"},{"lineNumber":4,"author":{"gitId":"Juzzanoob"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;"},{"lineNumber":5,"author":{"gitId":"Juzzanoob"},"content":"import static org.junit.jupiter.api.Assertions.fail;"},{"lineNumber":6,"author":{"gitId":"Juzzanoob"},"content":""},{"lineNumber":7,"author":{"gitId":"Juzzanoob"},"content":"public class EventTest {"},{"lineNumber":8,"author":{"gitId":"Juzzanoob"},"content":""},{"lineNumber":9,"author":{"gitId":"Juzzanoob"},"content":"    @Test"},{"lineNumber":10,"author":{"gitId":"Juzzanoob"},"content":"    public void constructor_normalInputs_taskUncompleted() {"},{"lineNumber":11,"author":{"gitId":"Juzzanoob"},"content":"        LocalDate date \u003d LocalDate.of(2021, 01, 01);"},{"lineNumber":12,"author":{"gitId":"Juzzanoob"},"content":"        LocalTime time \u003d LocalTime.of(12, 34);"},{"lineNumber":13,"author":{"gitId":"Juzzanoob"},"content":""},{"lineNumber":14,"author":{"gitId":"Juzzanoob"},"content":"        assertEquals(false, new Event(\"test\", date, time).isDone());"},{"lineNumber":15,"author":{"gitId":"Juzzanoob"},"content":"    }"},{"lineNumber":16,"author":{"gitId":"Juzzanoob"},"content":""},{"lineNumber":17,"author":{"gitId":"Juzzanoob"},"content":"    @Test"},{"lineNumber":18,"author":{"gitId":"Juzzanoob"},"content":"    public void outputFormat_normalInputs_correctFormat() {"},{"lineNumber":19,"author":{"gitId":"Juzzanoob"},"content":"        LocalDate date \u003d LocalDate.of(2021, 01, 01);"},{"lineNumber":20,"author":{"gitId":"Juzzanoob"},"content":"        LocalTime time \u003d LocalTime.of(12, 34);"},{"lineNumber":21,"author":{"gitId":"Juzzanoob"},"content":""},{"lineNumber":22,"author":{"gitId":"Juzzanoob"},"content":"        assertEquals(\"E 0 test (on: 1 Jan 2021 1234 )\","},{"lineNumber":23,"author":{"gitId":"Juzzanoob"},"content":"                new Event(\"test\", date, time).taskStatus());"},{"lineNumber":24,"author":{"gitId":"Juzzanoob"},"content":"    }"},{"lineNumber":25,"author":{"gitId":"Juzzanoob"},"content":"}"}],"authorContributionMap":{"Juzzanoob":25}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"Juzzanoob"},"content":"todo borrow book"},{"lineNumber":2,"author":{"gitId":"Juzzanoob"},"content":"deadline return book /by Sunday"},{"lineNumber":3,"author":{"gitId":"Juzzanoob"},"content":"done 1"},{"lineNumber":4,"author":{"gitId":"Juzzanoob"},"content":"list"},{"lineNumber":5,"author":{"gitId":"Juzzanoob"},"content":"bye"}],"authorContributionMap":{"Juzzanoob":5}}]
