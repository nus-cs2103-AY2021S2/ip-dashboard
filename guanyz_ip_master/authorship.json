[{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027checkstyle\u0027"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027"},{"lineNumber":6,"author":{"gitId":"-"},"content":"}"},{"lineNumber":7,"author":{"gitId":"-"},"content":""},{"lineNumber":8,"author":{"gitId":"-"},"content":"repositories {"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    mavenCentral()"},{"lineNumber":10,"author":{"gitId":"-"},"content":"}"},{"lineNumber":11,"author":{"gitId":"-"},"content":""},{"lineNumber":12,"author":{"gitId":"-"},"content":"dependencies {"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.5.0\u0027"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.5.0\u0027"},{"lineNumber":15,"author":{"gitId":"guanyz"},"content":"\t"},{"lineNumber":16,"author":{"gitId":"guanyz"},"content":"\tString javaFxVersion \u003d \u002711\u0027"},{"lineNumber":17,"author":{"gitId":"guanyz"},"content":""},{"lineNumber":18,"author":{"gitId":"guanyz"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027"},{"lineNumber":19,"author":{"gitId":"guanyz"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"},{"lineNumber":20,"author":{"gitId":"guanyz"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"},{"lineNumber":21,"author":{"gitId":"guanyz"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027"},{"lineNumber":22,"author":{"gitId":"guanyz"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"},{"lineNumber":23,"author":{"gitId":"guanyz"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"},{"lineNumber":24,"author":{"gitId":"guanyz"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027"},{"lineNumber":25,"author":{"gitId":"guanyz"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"},{"lineNumber":26,"author":{"gitId":"guanyz"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"},{"lineNumber":27,"author":{"gitId":"guanyz"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027"},{"lineNumber":28,"author":{"gitId":"guanyz"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"},{"lineNumber":29,"author":{"gitId":"guanyz"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"},{"lineNumber":30,"author":{"gitId":"-"},"content":"}"},{"lineNumber":31,"author":{"gitId":"-"},"content":""},{"lineNumber":32,"author":{"gitId":"-"},"content":"test {"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    useJUnitPlatform()"},{"lineNumber":34,"author":{"gitId":"-"},"content":""},{"lineNumber":35,"author":{"gitId":"-"},"content":"    testLogging {"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\""},{"lineNumber":37,"author":{"gitId":"-"},"content":""},{"lineNumber":38,"author":{"gitId":"-"},"content":"        showExceptions true"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\""},{"lineNumber":40,"author":{"gitId":"-"},"content":"        showCauses true"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        showStackTraces true"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":44,"author":{"gitId":"-"},"content":"}"},{"lineNumber":45,"author":{"gitId":"-"},"content":""},{"lineNumber":46,"author":{"gitId":"-"},"content":"application {"},{"lineNumber":47,"author":{"gitId":"guanyz"},"content":"    mainClassName \u003d \"Launcher\""},{"lineNumber":48,"author":{"gitId":"-"},"content":"}"},{"lineNumber":49,"author":{"gitId":"-"},"content":""},{"lineNumber":50,"author":{"gitId":"-"},"content":"shadowJar {"},{"lineNumber":51,"author":{"gitId":"guanyz"},"content":"    archiveBaseName \u003d \"MetaDuke\""},{"lineNumber":52,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null"},{"lineNumber":53,"author":{"gitId":"guanyz"},"content":"    mergeServiceFiles()"},{"lineNumber":54,"author":{"gitId":"-"},"content":"}"},{"lineNumber":55,"author":{"gitId":"-"},"content":""},{"lineNumber":56,"author":{"gitId":"-"},"content":"checkstyle {"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    toolVersion \u003d \u00278.29\u0027"},{"lineNumber":58,"author":{"gitId":"-"},"content":"}"},{"lineNumber":59,"author":{"gitId":"-"},"content":""},{"lineNumber":60,"author":{"gitId":"-"},"content":"run {"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in"},{"lineNumber":62,"author":{"gitId":"-"},"content":"}"}],"authorContributionMap":{"-":44,"guanyz":18}},{"path":"docs/README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"guanyz"},"content":"# MetaDuke User Guide"},{"lineNumber":2,"author":{"gitId":"guanyz"},"content":"Current version: v0.2"},{"lineNumber":3,"author":{"gitId":"-"},"content":""},{"lineNumber":4,"author":{"gitId":"guanyz"},"content":"MetaDuke is a to-do desktop app for managing and maintaining a to-do list via a Command Line Interface (CLI)."},{"lineNumber":5,"author":{"gitId":"-"},"content":""},{"lineNumber":6,"author":{"gitId":"guanyz"},"content":"## Features "},{"lineNumber":7,"author":{"gitId":"-"},"content":""},{"lineNumber":8,"author":{"gitId":"guanyz"},"content":"### list"},{"lineNumber":9,"author":{"gitId":"guanyz"},"content":"Displays a list of all the tasks on your to-do list.  "},{"lineNumber":10,"author":{"gitId":"guanyz"},"content":"Usage: `list`  "},{"lineNumber":11,"author":{"gitId":"guanyz"},"content":""},{"lineNumber":12,"author":{"gitId":"guanyz"},"content":"### todo"},{"lineNumber":13,"author":{"gitId":"guanyz"},"content":"Adds a new todo task to your to-do list.  "},{"lineNumber":14,"author":{"gitId":"guanyz"},"content":"Usage: `todo [description]`  "},{"lineNumber":15,"author":{"gitId":"guanyz"},"content":"Example: `todo Return book`  "},{"lineNumber":16,"author":{"gitId":"guanyz"},"content":""},{"lineNumber":17,"author":{"gitId":"guanyz"},"content":"### event"},{"lineNumber":18,"author":{"gitId":"guanyz"},"content":"Adds a new event task to your to-do list.  "},{"lineNumber":19,"author":{"gitId":"guanyz"},"content":"Usage: `event [description] /on [date, DD/MM/YYYY]`  "},{"lineNumber":20,"author":{"gitId":"guanyz"},"content":"Example: `event Physics exam /on 20/04/2021`  "},{"lineNumber":21,"author":{"gitId":"guanyz"},"content":""},{"lineNumber":22,"author":{"gitId":"guanyz"},"content":"### deadline"},{"lineNumber":23,"author":{"gitId":"guanyz"},"content":"Adds a new deadline task to your to-do list.  "},{"lineNumber":24,"author":{"gitId":"guanyz"},"content":"Usage: `deadline [description] /by [date, DD/MM/YYYY]`  "},{"lineNumber":25,"author":{"gitId":"guanyz"},"content":"Example: `deadline Homework /by 20/02/2021`  "},{"lineNumber":26,"author":{"gitId":"guanyz"},"content":""},{"lineNumber":27,"author":{"gitId":"guanyz"},"content":"### done"},{"lineNumber":28,"author":{"gitId":"guanyz"},"content":"Marks a task as done.  "},{"lineNumber":29,"author":{"gitId":"guanyz"},"content":"Usage: `done [index numbers of tasks]`  "},{"lineNumber":30,"author":{"gitId":"guanyz"},"content":"Examples: `done 3`, `done 1 3 4`  "},{"lineNumber":31,"author":{"gitId":"guanyz"},"content":"Aliases: `do`, `finish`, `finished`, `complete`, `completed`  "},{"lineNumber":32,"author":{"gitId":"guanyz"},"content":""},{"lineNumber":33,"author":{"gitId":"guanyz"},"content":"### delete"},{"lineNumber":34,"author":{"gitId":"guanyz"},"content":"Removes a task from the list.  "},{"lineNumber":35,"author":{"gitId":"guanyz"},"content":"Usage: `done [index numbers of tasks]`  "},{"lineNumber":36,"author":{"gitId":"guanyz"},"content":"Examples: `delete 3`, `delete 1 3 4`  "},{"lineNumber":37,"author":{"gitId":"guanyz"},"content":"Aliases: `remove`  "},{"lineNumber":38,"author":{"gitId":"guanyz"},"content":""},{"lineNumber":39,"author":{"gitId":"guanyz"},"content":"### find"},{"lineNumber":40,"author":{"gitId":"guanyz"},"content":"Returns a list of tasks from the list that match the search term.  "},{"lineNumber":41,"author":{"gitId":"guanyz"},"content":"Usage: `find [search term]`  "},{"lineNumber":42,"author":{"gitId":"guanyz"},"content":"Example: `find book`  "},{"lineNumber":43,"author":{"gitId":"guanyz"},"content":"Aliases: `search`  "}],"authorContributionMap":{"guanyz":40,"-":3}},{"path":"src/main/java/DialogBox.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"guanyz"},"content":"import java.io.IOException;"},{"lineNumber":2,"author":{"gitId":"guanyz"},"content":"import java.util.Collections;"},{"lineNumber":3,"author":{"gitId":"guanyz"},"content":""},{"lineNumber":4,"author":{"gitId":"guanyz"},"content":"import javafx.collections.FXCollections;"},{"lineNumber":5,"author":{"gitId":"guanyz"},"content":"import javafx.collections.ObservableList;"},{"lineNumber":6,"author":{"gitId":"guanyz"},"content":"import javafx.fxml.FXML;"},{"lineNumber":7,"author":{"gitId":"guanyz"},"content":"import javafx.fxml.FXMLLoader;"},{"lineNumber":8,"author":{"gitId":"guanyz"},"content":"import javafx.geometry.Pos;"},{"lineNumber":9,"author":{"gitId":"guanyz"},"content":"import javafx.scene.Node;"},{"lineNumber":10,"author":{"gitId":"guanyz"},"content":"import javafx.scene.control.Label;"},{"lineNumber":11,"author":{"gitId":"guanyz"},"content":"import javafx.scene.image.Image;"},{"lineNumber":12,"author":{"gitId":"guanyz"},"content":"import javafx.scene.image.ImageView;"},{"lineNumber":13,"author":{"gitId":"guanyz"},"content":"import javafx.scene.layout.HBox;"},{"lineNumber":14,"author":{"gitId":"guanyz"},"content":"import javafx.scene.paint.Color;"},{"lineNumber":15,"author":{"gitId":"guanyz"},"content":"import javafx.scene.text.Font;"},{"lineNumber":16,"author":{"gitId":"guanyz"},"content":""},{"lineNumber":17,"author":{"gitId":"guanyz"},"content":"/**"},{"lineNumber":18,"author":{"gitId":"guanyz"},"content":" * An example of a custom control using FXML."},{"lineNumber":19,"author":{"gitId":"guanyz"},"content":" * This control represents a dialog box consisting of an ImageView to represent the speaker\u0027s face and a label"},{"lineNumber":20,"author":{"gitId":"guanyz"},"content":" * containing text from the speaker."},{"lineNumber":21,"author":{"gitId":"guanyz"},"content":" */"},{"lineNumber":22,"author":{"gitId":"guanyz"},"content":"public class DialogBox extends HBox {"},{"lineNumber":23,"author":{"gitId":"guanyz"},"content":"    @FXML"},{"lineNumber":24,"author":{"gitId":"guanyz"},"content":"    private Label dialog;"},{"lineNumber":25,"author":{"gitId":"guanyz"},"content":"    @FXML"},{"lineNumber":26,"author":{"gitId":"guanyz"},"content":"    private ImageView displayPicture;"},{"lineNumber":27,"author":{"gitId":"guanyz"},"content":"    private static final int USER_DIALOG_HEIGHT \u003d 100;"},{"lineNumber":28,"author":{"gitId":"guanyz"},"content":"    private static final int DUKE_DIALOG_HEIGHT \u003d 180;"},{"lineNumber":29,"author":{"gitId":"guanyz"},"content":""},{"lineNumber":30,"author":{"gitId":"guanyz"},"content":"    private DialogBox(String text, Image img) {"},{"lineNumber":31,"author":{"gitId":"guanyz"},"content":"        try {"},{"lineNumber":32,"author":{"gitId":"guanyz"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(\"/view/DialogBox.fxml\"));"},{"lineNumber":33,"author":{"gitId":"guanyz"},"content":"            fxmlLoader.setController(this);"},{"lineNumber":34,"author":{"gitId":"guanyz"},"content":"            fxmlLoader.setRoot(this);"},{"lineNumber":35,"author":{"gitId":"guanyz"},"content":"            fxmlLoader.load();"},{"lineNumber":36,"author":{"gitId":"guanyz"},"content":"        } catch (IOException e) {"},{"lineNumber":37,"author":{"gitId":"guanyz"},"content":"            e.printStackTrace();"},{"lineNumber":38,"author":{"gitId":"guanyz"},"content":"        }"},{"lineNumber":39,"author":{"gitId":"guanyz"},"content":""},{"lineNumber":40,"author":{"gitId":"guanyz"},"content":"        dialog.setText(text);"},{"lineNumber":41,"author":{"gitId":"guanyz"},"content":"        displayPicture.setImage(img);"},{"lineNumber":42,"author":{"gitId":"guanyz"},"content":"    }"},{"lineNumber":43,"author":{"gitId":"guanyz"},"content":""},{"lineNumber":44,"author":{"gitId":"guanyz"},"content":"    private Label getDialog() {"},{"lineNumber":45,"author":{"gitId":"guanyz"},"content":"        return dialog;"},{"lineNumber":46,"author":{"gitId":"guanyz"},"content":"    }"},{"lineNumber":47,"author":{"gitId":"guanyz"},"content":""},{"lineNumber":48,"author":{"gitId":"guanyz"},"content":"    /**"},{"lineNumber":49,"author":{"gitId":"guanyz"},"content":"     * Flips the dialog box such that the ImageView is on the left and text on the right."},{"lineNumber":50,"author":{"gitId":"guanyz"},"content":"     */"},{"lineNumber":51,"author":{"gitId":"guanyz"},"content":"    private void flip() {"},{"lineNumber":52,"author":{"gitId":"guanyz"},"content":"        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());"},{"lineNumber":53,"author":{"gitId":"guanyz"},"content":"        Collections.reverse(tmp);"},{"lineNumber":54,"author":{"gitId":"guanyz"},"content":"        getChildren().setAll(tmp);"},{"lineNumber":55,"author":{"gitId":"guanyz"},"content":"        setAlignment(Pos.TOP_LEFT);"},{"lineNumber":56,"author":{"gitId":"guanyz"},"content":"    }"},{"lineNumber":57,"author":{"gitId":"guanyz"},"content":""},{"lineNumber":58,"author":{"gitId":"guanyz"},"content":"    /**"},{"lineNumber":59,"author":{"gitId":"guanyz"},"content":"     * Creates and returns DialogBox showing the user\u0027s input."},{"lineNumber":60,"author":{"gitId":"guanyz"},"content":"     * @param text User input."},{"lineNumber":61,"author":{"gitId":"guanyz"},"content":"     * @param img User image icon."},{"lineNumber":62,"author":{"gitId":"guanyz"},"content":"     * @return DialogBox showing the user\u0027s input with their image icon."},{"lineNumber":63,"author":{"gitId":"guanyz"},"content":"     */"},{"lineNumber":64,"author":{"gitId":"guanyz"},"content":"    public static DialogBox getUserDialog(String text, Image img) {"},{"lineNumber":65,"author":{"gitId":"guanyz"},"content":"        var db \u003d new DialogBox(text, img);"},{"lineNumber":66,"author":{"gitId":"guanyz"},"content":"        db.setMinHeight(USER_DIALOG_HEIGHT);"},{"lineNumber":67,"author":{"gitId":"guanyz"},"content":"        return db;"},{"lineNumber":68,"author":{"gitId":"guanyz"},"content":"    }"},{"lineNumber":69,"author":{"gitId":"guanyz"},"content":""},{"lineNumber":70,"author":{"gitId":"guanyz"},"content":"    /**"},{"lineNumber":71,"author":{"gitId":"guanyz"},"content":"     * Creates and returns DialogBox showing Duke\u0027s response."},{"lineNumber":72,"author":{"gitId":"guanyz"},"content":"     * @param text Duke response."},{"lineNumber":73,"author":{"gitId":"guanyz"},"content":"     * @param img Duke image icon."},{"lineNumber":74,"author":{"gitId":"guanyz"},"content":"     * @return DialogBox showing Duke\u0027s response with its image icon."},{"lineNumber":75,"author":{"gitId":"guanyz"},"content":"     */"},{"lineNumber":76,"author":{"gitId":"guanyz"},"content":"    public static DialogBox getDukeDialog(String text, Image img) {"},{"lineNumber":77,"author":{"gitId":"guanyz"},"content":"        var db \u003d new DialogBox(text, img);"},{"lineNumber":78,"author":{"gitId":"guanyz"},"content":"        db.setMinHeight(DUKE_DIALOG_HEIGHT);"},{"lineNumber":79,"author":{"gitId":"guanyz"},"content":"        db.flip();"},{"lineNumber":80,"author":{"gitId":"guanyz"},"content":"        db.getDialog().setEllipsisString(\"\\n(...and more!)\");"},{"lineNumber":81,"author":{"gitId":"guanyz"},"content":"        Font dukeFont \u003d new Font(\"Consolas\", 11);"},{"lineNumber":82,"author":{"gitId":"guanyz"},"content":"        db.getDialog().setFont(dukeFont);"},{"lineNumber":83,"author":{"gitId":"guanyz"},"content":"        return db;"},{"lineNumber":84,"author":{"gitId":"guanyz"},"content":"    }"},{"lineNumber":85,"author":{"gitId":"guanyz"},"content":""},{"lineNumber":86,"author":{"gitId":"guanyz"},"content":"    /**"},{"lineNumber":87,"author":{"gitId":"guanyz"},"content":"     * Creates and returns DialogBox showing an error response from Duke."},{"lineNumber":88,"author":{"gitId":"guanyz"},"content":"     * @param text Duke error response."},{"lineNumber":89,"author":{"gitId":"guanyz"},"content":"     * @param img Duke image icon."},{"lineNumber":90,"author":{"gitId":"guanyz"},"content":"     * @return DialogBox showing Duke\u0027s error response with its image icon."},{"lineNumber":91,"author":{"gitId":"guanyz"},"content":"     */"},{"lineNumber":92,"author":{"gitId":"guanyz"},"content":"    public static DialogBox getDukeErrorDialog(String text, Image img) {"},{"lineNumber":93,"author":{"gitId":"guanyz"},"content":"        var db \u003d getDukeDialog(text, img);"},{"lineNumber":94,"author":{"gitId":"guanyz"},"content":"        Color warningColor \u003d Color.RED;"},{"lineNumber":95,"author":{"gitId":"guanyz"},"content":"        db.getDialog().setTextFill(warningColor);"},{"lineNumber":96,"author":{"gitId":"guanyz"},"content":"        return db;"},{"lineNumber":97,"author":{"gitId":"guanyz"},"content":"    }"},{"lineNumber":98,"author":{"gitId":"guanyz"},"content":"}"}],"authorContributionMap":{"guanyz":98}},{"path":"src/main/java/Launcher.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"guanyz"},"content":"import javafx.application.Application;"},{"lineNumber":2,"author":{"gitId":"guanyz"},"content":""},{"lineNumber":3,"author":{"gitId":"guanyz"},"content":"/**"},{"lineNumber":4,"author":{"gitId":"guanyz"},"content":" * A launcher class to workaround classpath issues."},{"lineNumber":5,"author":{"gitId":"guanyz"},"content":" */"},{"lineNumber":6,"author":{"gitId":"guanyz"},"content":"public class Launcher {"},{"lineNumber":7,"author":{"gitId":"guanyz"},"content":"    public static void main(String[] args) {"},{"lineNumber":8,"author":{"gitId":"guanyz"},"content":"        Application.launch(Main.class, args);"},{"lineNumber":9,"author":{"gitId":"guanyz"},"content":"    }"},{"lineNumber":10,"author":{"gitId":"guanyz"},"content":"}"}],"authorContributionMap":{"guanyz":10}},{"path":"src/main/java/Main.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"guanyz"},"content":"import duke.Duke;"},{"lineNumber":2,"author":{"gitId":"guanyz"},"content":"import java.io.IOException;"},{"lineNumber":3,"author":{"gitId":"guanyz"},"content":""},{"lineNumber":4,"author":{"gitId":"guanyz"},"content":"import javafx.application.Application;"},{"lineNumber":5,"author":{"gitId":"guanyz"},"content":"import javafx.fxml.FXMLLoader;"},{"lineNumber":6,"author":{"gitId":"guanyz"},"content":"import javafx.scene.Scene;"},{"lineNumber":7,"author":{"gitId":"guanyz"},"content":"import javafx.scene.layout.AnchorPane;"},{"lineNumber":8,"author":{"gitId":"guanyz"},"content":"import javafx.stage.Stage;"},{"lineNumber":9,"author":{"gitId":"guanyz"},"content":""},{"lineNumber":10,"author":{"gitId":"guanyz"},"content":"/**"},{"lineNumber":11,"author":{"gitId":"guanyz"},"content":" * A GUI for Duke using FXML."},{"lineNumber":12,"author":{"gitId":"guanyz"},"content":" */"},{"lineNumber":13,"author":{"gitId":"guanyz"},"content":"public class Main extends Application {"},{"lineNumber":14,"author":{"gitId":"guanyz"},"content":""},{"lineNumber":15,"author":{"gitId":"guanyz"},"content":"    private Duke duke \u003d new Duke(\"savedata.txt\");"},{"lineNumber":16,"author":{"gitId":"guanyz"},"content":""},{"lineNumber":17,"author":{"gitId":"guanyz"},"content":"    @Override"},{"lineNumber":18,"author":{"gitId":"guanyz"},"content":"    public void start(Stage stage) {"},{"lineNumber":19,"author":{"gitId":"guanyz"},"content":"        try {"},{"lineNumber":20,"author":{"gitId":"guanyz"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(Main.class.getResource(\"/view/MainWindow.fxml\"));"},{"lineNumber":21,"author":{"gitId":"guanyz"},"content":"            AnchorPane ap \u003d fxmlLoader.load();"},{"lineNumber":22,"author":{"gitId":"guanyz"},"content":"            Scene scene \u003d new Scene(ap);"},{"lineNumber":23,"author":{"gitId":"guanyz"},"content":"            stage.setScene(scene);"},{"lineNumber":24,"author":{"gitId":"guanyz"},"content":"            fxmlLoader.\u003cMainWindow\u003egetController().setDuke(duke);"},{"lineNumber":25,"author":{"gitId":"guanyz"},"content":"            stage.show();"},{"lineNumber":26,"author":{"gitId":"guanyz"},"content":"        } catch (IOException e) {"},{"lineNumber":27,"author":{"gitId":"guanyz"},"content":"            e.printStackTrace();"},{"lineNumber":28,"author":{"gitId":"guanyz"},"content":"        }"},{"lineNumber":29,"author":{"gitId":"guanyz"},"content":"    }"},{"lineNumber":30,"author":{"gitId":"guanyz"},"content":"}"}],"authorContributionMap":{"guanyz":30}},{"path":"src/main/java/MainWindow.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"guanyz"},"content":"import duke.Duke;"},{"lineNumber":2,"author":{"gitId":"guanyz"},"content":"import duke.DukeException;"},{"lineNumber":3,"author":{"gitId":"guanyz"},"content":"import javafx.fxml.FXML;"},{"lineNumber":4,"author":{"gitId":"guanyz"},"content":"import javafx.scene.control.Button;"},{"lineNumber":5,"author":{"gitId":"guanyz"},"content":"import javafx.scene.control.ScrollPane;"},{"lineNumber":6,"author":{"gitId":"guanyz"},"content":"import javafx.scene.control.TextField;"},{"lineNumber":7,"author":{"gitId":"guanyz"},"content":"import javafx.scene.image.Image;"},{"lineNumber":8,"author":{"gitId":"guanyz"},"content":"import javafx.scene.layout.AnchorPane;"},{"lineNumber":9,"author":{"gitId":"guanyz"},"content":"import javafx.scene.layout.VBox;"},{"lineNumber":10,"author":{"gitId":"guanyz"},"content":"/**"},{"lineNumber":11,"author":{"gitId":"guanyz"},"content":" * Controller for MainWindow. Provides the layout for the other controls."},{"lineNumber":12,"author":{"gitId":"guanyz"},"content":" */"},{"lineNumber":13,"author":{"gitId":"guanyz"},"content":"public class MainWindow extends AnchorPane {"},{"lineNumber":14,"author":{"gitId":"guanyz"},"content":"    @FXML"},{"lineNumber":15,"author":{"gitId":"guanyz"},"content":"    private ScrollPane scrollPane;"},{"lineNumber":16,"author":{"gitId":"guanyz"},"content":"    @FXML"},{"lineNumber":17,"author":{"gitId":"guanyz"},"content":"    private VBox dialogContainer;"},{"lineNumber":18,"author":{"gitId":"guanyz"},"content":"    @FXML"},{"lineNumber":19,"author":{"gitId":"guanyz"},"content":"    private TextField userInput;"},{"lineNumber":20,"author":{"gitId":"guanyz"},"content":"    @FXML"},{"lineNumber":21,"author":{"gitId":"guanyz"},"content":"    private Button sendButton;"},{"lineNumber":22,"author":{"gitId":"guanyz"},"content":""},{"lineNumber":23,"author":{"gitId":"guanyz"},"content":"    private Duke duke;"},{"lineNumber":24,"author":{"gitId":"guanyz"},"content":""},{"lineNumber":25,"author":{"gitId":"guanyz"},"content":"    private Image userImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/user.png\"));"},{"lineNumber":26,"author":{"gitId":"guanyz"},"content":"    private Image dukeImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/duke.png\"));"},{"lineNumber":27,"author":{"gitId":"guanyz"},"content":""},{"lineNumber":28,"author":{"gitId":"guanyz"},"content":"    @FXML"},{"lineNumber":29,"author":{"gitId":"guanyz"},"content":"    public void initialize() {"},{"lineNumber":30,"author":{"gitId":"guanyz"},"content":"        scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());"},{"lineNumber":31,"author":{"gitId":"guanyz"},"content":"    }"},{"lineNumber":32,"author":{"gitId":"guanyz"},"content":""},{"lineNumber":33,"author":{"gitId":"guanyz"},"content":"    public void setDuke(Duke d) {"},{"lineNumber":34,"author":{"gitId":"guanyz"},"content":"        duke \u003d d;"},{"lineNumber":35,"author":{"gitId":"guanyz"},"content":"    }"},{"lineNumber":36,"author":{"gitId":"guanyz"},"content":""},{"lineNumber":37,"author":{"gitId":"guanyz"},"content":"    /**"},{"lineNumber":38,"author":{"gitId":"guanyz"},"content":"     * Creates two dialog boxes, one echoing user input and the other containing Duke\u0027s reply and then appends them to"},{"lineNumber":39,"author":{"gitId":"guanyz"},"content":"     * the dialog container. Clears the user input after processing."},{"lineNumber":40,"author":{"gitId":"guanyz"},"content":"     */"},{"lineNumber":41,"author":{"gitId":"guanyz"},"content":"    @FXML"},{"lineNumber":42,"author":{"gitId":"guanyz"},"content":"    private void handleUserInput() {"},{"lineNumber":43,"author":{"gitId":"guanyz"},"content":"        String input \u003d userInput.getText();"},{"lineNumber":44,"author":{"gitId":"guanyz"},"content":"        String response;"},{"lineNumber":45,"author":{"gitId":"guanyz"},"content":"        try {"},{"lineNumber":46,"author":{"gitId":"guanyz"},"content":"            response \u003d duke.getResponse(input);"},{"lineNumber":47,"author":{"gitId":"guanyz"},"content":"            dialogContainer.getChildren().addAll("},{"lineNumber":48,"author":{"gitId":"guanyz"},"content":"                    DialogBox.getUserDialog(input, userImage),"},{"lineNumber":49,"author":{"gitId":"guanyz"},"content":"                    DialogBox.getDukeDialog(response, dukeImage)"},{"lineNumber":50,"author":{"gitId":"guanyz"},"content":"            );"},{"lineNumber":51,"author":{"gitId":"guanyz"},"content":"        } catch (DukeException de) {"},{"lineNumber":52,"author":{"gitId":"guanyz"},"content":"            response \u003d de.getMessage();"},{"lineNumber":53,"author":{"gitId":"guanyz"},"content":"            dialogContainer.getChildren().addAll("},{"lineNumber":54,"author":{"gitId":"guanyz"},"content":"                    DialogBox.getUserDialog(input, userImage),"},{"lineNumber":55,"author":{"gitId":"guanyz"},"content":"                    DialogBox.getDukeErrorDialog(response, dukeImage)"},{"lineNumber":56,"author":{"gitId":"guanyz"},"content":"            );"},{"lineNumber":57,"author":{"gitId":"guanyz"},"content":"        }"},{"lineNumber":58,"author":{"gitId":"guanyz"},"content":"        userInput.clear();"},{"lineNumber":59,"author":{"gitId":"guanyz"},"content":"    }"},{"lineNumber":60,"author":{"gitId":"guanyz"},"content":"}"}],"authorContributionMap":{"guanyz":60}},{"path":"src/main/java/duke/CommandParser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"guanyz"},"content":"package duke;"},{"lineNumber":2,"author":{"gitId":"guanyz"},"content":""},{"lineNumber":3,"author":{"gitId":"guanyz"},"content":"import java.util.ArrayList;"},{"lineNumber":4,"author":{"gitId":"guanyz"},"content":"import java.util.Collections;"},{"lineNumber":5,"author":{"gitId":"guanyz"},"content":""},{"lineNumber":6,"author":{"gitId":"guanyz"},"content":"/**"},{"lineNumber":7,"author":{"gitId":"guanyz"},"content":" * Parses user commands and triggers corresponding effects."},{"lineNumber":8,"author":{"gitId":"guanyz"},"content":" */"},{"lineNumber":9,"author":{"gitId":"guanyz"},"content":"public class CommandParser {"},{"lineNumber":10,"author":{"gitId":"guanyz"},"content":"    private static final int SPLIT_LIMIT \u003d 2;"},{"lineNumber":11,"author":{"gitId":"guanyz"},"content":"    private static final String DONE_REGEX_MATCH \u003d \"^(do(ne)?|finish(ed)?|completed?)( \\\\d+)+$\";"},{"lineNumber":12,"author":{"gitId":"guanyz"},"content":"    private static final String DELETE_REGEX_MATCH \u003d \"^(delete|remove)( \\\\d+)+$\";"},{"lineNumber":13,"author":{"gitId":"guanyz"},"content":"    private static final String TASK_REGEX_MATCH \u003d \"^(todo|deadline|event)( .+)?$\";"},{"lineNumber":14,"author":{"gitId":"guanyz"},"content":"    private static final String FIND_REGEX_MATCH \u003d \"^(find|search) .+$\";"},{"lineNumber":15,"author":{"gitId":"guanyz"},"content":""},{"lineNumber":16,"author":{"gitId":"guanyz"},"content":"    private TaskList tasks;"},{"lineNumber":17,"author":{"gitId":"guanyz"},"content":"    private Ui ui;"},{"lineNumber":18,"author":{"gitId":"guanyz"},"content":""},{"lineNumber":19,"author":{"gitId":"guanyz"},"content":"    public CommandParser(TaskList tasks, Ui ui) {"},{"lineNumber":20,"author":{"gitId":"guanyz"},"content":"        this.tasks \u003d tasks;"},{"lineNumber":21,"author":{"gitId":"guanyz"},"content":"        this.ui \u003d ui;"},{"lineNumber":22,"author":{"gitId":"guanyz"},"content":"    }"},{"lineNumber":23,"author":{"gitId":"guanyz"},"content":""},{"lineNumber":24,"author":{"gitId":"guanyz"},"content":"    /**"},{"lineNumber":25,"author":{"gitId":"guanyz"},"content":"     * Parses a user-input command and triggers the relevant effects."},{"lineNumber":26,"author":{"gitId":"guanyz"},"content":"     * @param userInput String representation of the command to be parsed."},{"lineNumber":27,"author":{"gitId":"guanyz"},"content":"     * @return String response to the command."},{"lineNumber":28,"author":{"gitId":"guanyz"},"content":"     * @throws DukeException If an Exception occurs due to a malformed command."},{"lineNumber":29,"author":{"gitId":"guanyz"},"content":"     */"},{"lineNumber":30,"author":{"gitId":"guanyz"},"content":"    public String parseCommand(String userInput) throws DukeException {"},{"lineNumber":31,"author":{"gitId":"guanyz"},"content":"        String reply;"},{"lineNumber":32,"author":{"gitId":"guanyz"},"content":""},{"lineNumber":33,"author":{"gitId":"guanyz"},"content":"        if (userInput.toLowerCase().equals(\"list\")) {"},{"lineNumber":34,"author":{"gitId":"guanyz"},"content":"            // display list"},{"lineNumber":35,"author":{"gitId":"guanyz"},"content":"            reply \u003d ui.showAllTasks(tasks);"},{"lineNumber":36,"author":{"gitId":"guanyz"},"content":""},{"lineNumber":37,"author":{"gitId":"guanyz"},"content":"        } else if (userInput.toLowerCase().matches(DONE_REGEX_MATCH)) {"},{"lineNumber":38,"author":{"gitId":"guanyz"},"content":"            // finish a task"},{"lineNumber":39,"author":{"gitId":"guanyz"},"content":"            TaskList doneTasks \u003d new TaskList();"},{"lineNumber":40,"author":{"gitId":"guanyz"},"content":""},{"lineNumber":41,"author":{"gitId":"guanyz"},"content":"            String[] bits \u003d userInput.split(\" \");"},{"lineNumber":42,"author":{"gitId":"guanyz"},"content":""},{"lineNumber":43,"author":{"gitId":"guanyz"},"content":"            for (int i \u003d 1; i \u003c bits.length; i++) {"},{"lineNumber":44,"author":{"gitId":"guanyz"},"content":"                int idx \u003d Integer.parseInt(bits[i]);"},{"lineNumber":45,"author":{"gitId":"guanyz"},"content":"                if (idx \u003c 1 || idx \u003e tasks.size()) {"},{"lineNumber":46,"author":{"gitId":"guanyz"},"content":"                    throw new DukeException(\"Oops! Invalid task number included.\");"},{"lineNumber":47,"author":{"gitId":"guanyz"},"content":"                }"},{"lineNumber":48,"author":{"gitId":"guanyz"},"content":""},{"lineNumber":49,"author":{"gitId":"guanyz"},"content":"                Task finishedTask \u003d tasks.get(idx);"},{"lineNumber":50,"author":{"gitId":"guanyz"},"content":""},{"lineNumber":51,"author":{"gitId":"guanyz"},"content":"                if (!finishedTask.isDone()) {"},{"lineNumber":52,"author":{"gitId":"guanyz"},"content":"                    finishedTask.markAsDone();"},{"lineNumber":53,"author":{"gitId":"guanyz"},"content":"                    doneTasks.add(finishedTask);"},{"lineNumber":54,"author":{"gitId":"guanyz"},"content":"                }"},{"lineNumber":55,"author":{"gitId":"guanyz"},"content":"            }"},{"lineNumber":56,"author":{"gitId":"guanyz"},"content":""},{"lineNumber":57,"author":{"gitId":"guanyz"},"content":"            reply \u003d ui.showDoneTasks(doneTasks);"},{"lineNumber":58,"author":{"gitId":"guanyz"},"content":""},{"lineNumber":59,"author":{"gitId":"guanyz"},"content":"        } else if (userInput.toLowerCase().matches(DELETE_REGEX_MATCH)) {"},{"lineNumber":60,"author":{"gitId":"guanyz"},"content":"            // manually remove task"},{"lineNumber":61,"author":{"gitId":"guanyz"},"content":"            ArrayList\u003cInteger\u003e tasksToRemove \u003d new ArrayList\u003c\u003e();"},{"lineNumber":62,"author":{"gitId":"guanyz"},"content":"            TaskList removedTasks \u003d new TaskList();"},{"lineNumber":63,"author":{"gitId":"guanyz"},"content":""},{"lineNumber":64,"author":{"gitId":"guanyz"},"content":"            String[] bits \u003d userInput.split(\" \");"},{"lineNumber":65,"author":{"gitId":"guanyz"},"content":""},{"lineNumber":66,"author":{"gitId":"guanyz"},"content":"            for (int i \u003d 1; i \u003c bits.length; i++) {"},{"lineNumber":67,"author":{"gitId":"guanyz"},"content":"                int idx \u003d Integer.parseInt(bits[i]);"},{"lineNumber":68,"author":{"gitId":"guanyz"},"content":"                if (idx \u003c 1 || idx \u003e tasks.size()) {"},{"lineNumber":69,"author":{"gitId":"guanyz"},"content":"                    throw new DukeException(\"Oops! Invalid task number included.\");"},{"lineNumber":70,"author":{"gitId":"guanyz"},"content":"                }"},{"lineNumber":71,"author":{"gitId":"guanyz"},"content":"                tasksToRemove.add(idx);"},{"lineNumber":72,"author":{"gitId":"guanyz"},"content":"            }"},{"lineNumber":73,"author":{"gitId":"guanyz"},"content":""},{"lineNumber":74,"author":{"gitId":"guanyz"},"content":"            // reverse list so the tasks can be removed safely"},{"lineNumber":75,"author":{"gitId":"guanyz"},"content":"           Collections.reverse(tasksToRemove);"},{"lineNumber":76,"author":{"gitId":"guanyz"},"content":""},{"lineNumber":77,"author":{"gitId":"guanyz"},"content":"            for (int i \u003d 0; i \u003c tasksToRemove.size(); i++) {"},{"lineNumber":78,"author":{"gitId":"guanyz"},"content":"                int idx \u003d tasksToRemove.get(i);"},{"lineNumber":79,"author":{"gitId":"guanyz"},"content":"                Task removedTask \u003d tasks.remove(idx);"},{"lineNumber":80,"author":{"gitId":"guanyz"},"content":"                removedTasks.add(removedTask);"},{"lineNumber":81,"author":{"gitId":"guanyz"},"content":"            }"},{"lineNumber":82,"author":{"gitId":"guanyz"},"content":""},{"lineNumber":83,"author":{"gitId":"guanyz"},"content":"            // reverse removedTasks so they display in order"},{"lineNumber":84,"author":{"gitId":"guanyz"},"content":"            removedTasks.reverse();"},{"lineNumber":85,"author":{"gitId":"guanyz"},"content":""},{"lineNumber":86,"author":{"gitId":"guanyz"},"content":"            reply \u003d ui.showRemovedTasks(removedTasks, tasks.size());"},{"lineNumber":87,"author":{"gitId":"guanyz"},"content":""},{"lineNumber":88,"author":{"gitId":"guanyz"},"content":"        } else if (userInput.toLowerCase().matches(TASK_REGEX_MATCH)) {"},{"lineNumber":89,"author":{"gitId":"guanyz"},"content":"            // add task to list"},{"lineNumber":90,"author":{"gitId":"guanyz"},"content":"            Task newTask \u003d TaskParser.parseTask(userInput);"},{"lineNumber":91,"author":{"gitId":"guanyz"},"content":"            tasks.add(newTask);"},{"lineNumber":92,"author":{"gitId":"guanyz"},"content":"            reply \u003d ui.showAddedTask(newTask, tasks.size());"},{"lineNumber":93,"author":{"gitId":"guanyz"},"content":""},{"lineNumber":94,"author":{"gitId":"guanyz"},"content":"        } else if (userInput.toLowerCase().matches(FIND_REGEX_MATCH)) {"},{"lineNumber":95,"author":{"gitId":"guanyz"},"content":"            // find task in list"},{"lineNumber":96,"author":{"gitId":"guanyz"},"content":"            String[] bits \u003d userInput.split(\" \", SPLIT_LIMIT);"},{"lineNumber":97,"author":{"gitId":"guanyz"},"content":"            if (bits.length \u003d\u003d 1) {"},{"lineNumber":98,"author":{"gitId":"guanyz"},"content":"                throw new DukeException(\"Oops! Usage: find [search pattern]\");"},{"lineNumber":99,"author":{"gitId":"guanyz"},"content":"            }"},{"lineNumber":100,"author":{"gitId":"guanyz"},"content":""},{"lineNumber":101,"author":{"gitId":"guanyz"},"content":"            TaskList matchingTasks \u003d tasks.find(bits[1]);"},{"lineNumber":102,"author":{"gitId":"guanyz"},"content":"            reply \u003d ui.showFoundTasks(matchingTasks);"},{"lineNumber":103,"author":{"gitId":"guanyz"},"content":""},{"lineNumber":104,"author":{"gitId":"guanyz"},"content":"        } else {"},{"lineNumber":105,"author":{"gitId":"guanyz"},"content":"            throw new DukeException(\"I don\u0027t understand that command!\");"},{"lineNumber":106,"author":{"gitId":"guanyz"},"content":"        }"},{"lineNumber":107,"author":{"gitId":"guanyz"},"content":"        return reply;"},{"lineNumber":108,"author":{"gitId":"guanyz"},"content":"    }"},{"lineNumber":109,"author":{"gitId":"guanyz"},"content":"}"}],"authorContributionMap":{"guanyz":109}},{"path":"src/main/java/duke/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"guanyz"},"content":"package duke;"},{"lineNumber":2,"author":{"gitId":"guanyz"},"content":""},{"lineNumber":3,"author":{"gitId":"guanyz"},"content":"import java.time.LocalDate;"},{"lineNumber":4,"author":{"gitId":"guanyz"},"content":"import java.time.format.DateTimeFormatter;"},{"lineNumber":5,"author":{"gitId":"guanyz"},"content":""},{"lineNumber":6,"author":{"gitId":"guanyz"},"content":"/**"},{"lineNumber":7,"author":{"gitId":"guanyz"},"content":" * Represents a Deadline object."},{"lineNumber":8,"author":{"gitId":"guanyz"},"content":" */"},{"lineNumber":9,"author":{"gitId":"guanyz"},"content":"public class Deadline extends Task {"},{"lineNumber":10,"author":{"gitId":"guanyz"},"content":"    private LocalDate deadline;"},{"lineNumber":11,"author":{"gitId":"guanyz"},"content":""},{"lineNumber":12,"author":{"gitId":"guanyz"},"content":"    public Deadline(String description, LocalDate deadline) {"},{"lineNumber":13,"author":{"gitId":"guanyz"},"content":"        super(description);"},{"lineNumber":14,"author":{"gitId":"guanyz"},"content":"        this.deadline \u003d deadline;"},{"lineNumber":15,"author":{"gitId":"guanyz"},"content":"    }"},{"lineNumber":16,"author":{"gitId":"guanyz"},"content":""},{"lineNumber":17,"author":{"gitId":"guanyz"},"content":"    /**"},{"lineNumber":18,"author":{"gitId":"guanyz"},"content":"     * Returns a String representing this object to be saved into a save data file."},{"lineNumber":19,"author":{"gitId":"guanyz"},"content":"     * @return String representation of this object, formatted for save data use."},{"lineNumber":20,"author":{"gitId":"guanyz"},"content":"     */"},{"lineNumber":21,"author":{"gitId":"guanyz"},"content":"    public String getSaveString() {"},{"lineNumber":22,"author":{"gitId":"guanyz"},"content":"        String datetimeString \u003d deadline.format(DateTimeFormatter.ofPattern(\"dd/MM/yyyy\"));"},{"lineNumber":23,"author":{"gitId":"guanyz"},"content":"        if (this.isDone()) {"},{"lineNumber":24,"author":{"gitId":"guanyz"},"content":"            return String.format(\"[isDone] deadline %s /by %s\\n\", description, datetimeString);"},{"lineNumber":25,"author":{"gitId":"guanyz"},"content":"        } else {"},{"lineNumber":26,"author":{"gitId":"guanyz"},"content":"            return String.format(\"deadline %s /by %s\\n\", description, datetimeString);"},{"lineNumber":27,"author":{"gitId":"guanyz"},"content":"        }"},{"lineNumber":28,"author":{"gitId":"guanyz"},"content":"    }"},{"lineNumber":29,"author":{"gitId":"guanyz"},"content":""},{"lineNumber":30,"author":{"gitId":"guanyz"},"content":"    @Override"},{"lineNumber":31,"author":{"gitId":"guanyz"},"content":"    public String toString() {"},{"lineNumber":32,"author":{"gitId":"guanyz"},"content":"        String datetimeString \u003d deadline.format(DateTimeFormatter.ofPattern(\"dd MMM yyyy\"));"},{"lineNumber":33,"author":{"gitId":"guanyz"},"content":"        assert datetimeString.length() \u003e 0 : \" Datetime string not successfully initialized\";"},{"lineNumber":34,"author":{"gitId":"guanyz"},"content":"        return String.format(\"[D][%s] %s (by: %s)\", getStatus(), description, datetimeString);"},{"lineNumber":35,"author":{"gitId":"guanyz"},"content":"    }"},{"lineNumber":36,"author":{"gitId":"guanyz"},"content":"}"}],"authorContributionMap":{"guanyz":36}},{"path":"src/main/java/duke/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"guanyz"},"content":"package duke;"},{"lineNumber":2,"author":{"gitId":"guanyz"},"content":""},{"lineNumber":3,"author":{"gitId":"-"},"content":"public class Duke {"},{"lineNumber":4,"author":{"gitId":"guanyz"},"content":"    private TaskList tasks;"},{"lineNumber":5,"author":{"gitId":"guanyz"},"content":"    private Ui ui;"},{"lineNumber":6,"author":{"gitId":"guanyz"},"content":"    private Storage storage;"},{"lineNumber":7,"author":{"gitId":"guanyz"},"content":"    private CommandParser commandParser;"},{"lineNumber":8,"author":{"gitId":"guanyz"},"content":""},{"lineNumber":9,"author":{"gitId":"guanyz"},"content":"    public Duke(String filepath) {"},{"lineNumber":10,"author":{"gitId":"guanyz"},"content":"        this.ui \u003d new Ui();"},{"lineNumber":11,"author":{"gitId":"guanyz"},"content":"        this.storage \u003d new Storage(filepath);"},{"lineNumber":12,"author":{"gitId":"guanyz"},"content":""},{"lineNumber":13,"author":{"gitId":"guanyz"},"content":"        try {"},{"lineNumber":14,"author":{"gitId":"guanyz"},"content":"            tasks \u003d new TaskList(storage.load());"},{"lineNumber":15,"author":{"gitId":"guanyz"},"content":"        } catch (DukeException e) {"},{"lineNumber":16,"author":{"gitId":"guanyz"},"content":"            this.tasks \u003d new TaskList();"},{"lineNumber":17,"author":{"gitId":"guanyz"},"content":"        }"},{"lineNumber":18,"author":{"gitId":"guanyz"},"content":""},{"lineNumber":19,"author":{"gitId":"guanyz"},"content":"        assert tasks.size() \u003e\u003d 0 : \" Task list not successfully initialized\";"},{"lineNumber":20,"author":{"gitId":"guanyz"},"content":"        this.commandParser \u003d new CommandParser(tasks, ui);"},{"lineNumber":21,"author":{"gitId":"guanyz"},"content":"    }"},{"lineNumber":22,"author":{"gitId":"guanyz"},"content":""},{"lineNumber":23,"author":{"gitId":"guanyz"},"content":"    /**"},{"lineNumber":24,"author":{"gitId":"guanyz"},"content":"     * Generates a relevant response to the user input."},{"lineNumber":25,"author":{"gitId":"guanyz"},"content":"     * @param input Input from the user, as a String."},{"lineNumber":26,"author":{"gitId":"guanyz"},"content":"     * @return Relevant response from Duke, as a String."},{"lineNumber":27,"author":{"gitId":"guanyz"},"content":"     * @throws DukeException If an Exception occurs while processing the response."},{"lineNumber":28,"author":{"gitId":"guanyz"},"content":"     */"},{"lineNumber":29,"author":{"gitId":"guanyz"},"content":"    public String getResponse(String input) throws DukeException {"},{"lineNumber":30,"author":{"gitId":"guanyz"},"content":"        String response \u003d commandParser.parseCommand(input);"},{"lineNumber":31,"author":{"gitId":"guanyz"},"content":"        storage.saveTasks(tasks);"},{"lineNumber":32,"author":{"gitId":"guanyz"},"content":"        return response;"},{"lineNumber":33,"author":{"gitId":"guanyz"},"content":"    }"},{"lineNumber":34,"author":{"gitId":"-"},"content":"}"}],"authorContributionMap":{"guanyz":32,"-":2}},{"path":"src/main/java/duke/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"guanyz"},"content":"package duke;"},{"lineNumber":2,"author":{"gitId":"guanyz"},"content":""},{"lineNumber":3,"author":{"gitId":"guanyz"},"content":"public class DukeException extends Exception {"},{"lineNumber":4,"author":{"gitId":"guanyz"},"content":"    public DukeException(String errorMessage) {"},{"lineNumber":5,"author":{"gitId":"guanyz"},"content":"        super(errorMessage);"},{"lineNumber":6,"author":{"gitId":"guanyz"},"content":"    }"},{"lineNumber":7,"author":{"gitId":"guanyz"},"content":"}"}],"authorContributionMap":{"guanyz":7}},{"path":"src/main/java/duke/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"guanyz"},"content":"package duke;"},{"lineNumber":2,"author":{"gitId":"guanyz"},"content":""},{"lineNumber":3,"author":{"gitId":"guanyz"},"content":"import java.time.LocalDate;"},{"lineNumber":4,"author":{"gitId":"guanyz"},"content":"import java.time.format.DateTimeFormatter;"},{"lineNumber":5,"author":{"gitId":"guanyz"},"content":""},{"lineNumber":6,"author":{"gitId":"guanyz"},"content":"/**"},{"lineNumber":7,"author":{"gitId":"guanyz"},"content":" * Represents an Event object."},{"lineNumber":8,"author":{"gitId":"guanyz"},"content":" */"},{"lineNumber":9,"author":{"gitId":"guanyz"},"content":"public class Event extends Task {"},{"lineNumber":10,"author":{"gitId":"guanyz"},"content":"    private LocalDate datetime;"},{"lineNumber":11,"author":{"gitId":"guanyz"},"content":""},{"lineNumber":12,"author":{"gitId":"guanyz"},"content":"    public Event(String description, LocalDate time) {"},{"lineNumber":13,"author":{"gitId":"guanyz"},"content":"        super(description);"},{"lineNumber":14,"author":{"gitId":"guanyz"},"content":"        this.datetime \u003d time;"},{"lineNumber":15,"author":{"gitId":"guanyz"},"content":"    }"},{"lineNumber":16,"author":{"gitId":"guanyz"},"content":""},{"lineNumber":17,"author":{"gitId":"guanyz"},"content":"    /**"},{"lineNumber":18,"author":{"gitId":"guanyz"},"content":"     * Returns a String representing this object to be saved into a save data file."},{"lineNumber":19,"author":{"gitId":"guanyz"},"content":"     * @return String representation of this object, formatted for save data use."},{"lineNumber":20,"author":{"gitId":"guanyz"},"content":"     */"},{"lineNumber":21,"author":{"gitId":"guanyz"},"content":"    public String getSaveString() {"},{"lineNumber":22,"author":{"gitId":"guanyz"},"content":"        String datetimeString \u003d datetime.format(DateTimeFormatter.ofPattern(\"dd/MM/yyyy\"));"},{"lineNumber":23,"author":{"gitId":"guanyz"},"content":"        if (this.isDone()) {"},{"lineNumber":24,"author":{"gitId":"guanyz"},"content":"            return String.format(\"[isDone] event %s /on %s\\n\", description, datetimeString);"},{"lineNumber":25,"author":{"gitId":"guanyz"},"content":"        } else {"},{"lineNumber":26,"author":{"gitId":"guanyz"},"content":"            return String.format(\"event %s /on %s\\n\", description, datetimeString);"},{"lineNumber":27,"author":{"gitId":"guanyz"},"content":"        }"},{"lineNumber":28,"author":{"gitId":"guanyz"},"content":"    }"},{"lineNumber":29,"author":{"gitId":"guanyz"},"content":""},{"lineNumber":30,"author":{"gitId":"guanyz"},"content":"    @Override"},{"lineNumber":31,"author":{"gitId":"guanyz"},"content":"    public String toString() {"},{"lineNumber":32,"author":{"gitId":"guanyz"},"content":"        String datetimeString \u003d datetime.format(DateTimeFormatter.ofPattern(\"dd MMM yyyy\"));"},{"lineNumber":33,"author":{"gitId":"guanyz"},"content":"        assert datetimeString.length() \u003e 0 : \" Datetime string not successfully initialized\";"},{"lineNumber":34,"author":{"gitId":"guanyz"},"content":"        return String.format(\"[E][%s] %s (on: %s)\", getStatus(), description, datetimeString);"},{"lineNumber":35,"author":{"gitId":"guanyz"},"content":"    }"},{"lineNumber":36,"author":{"gitId":"guanyz"},"content":"}"}],"authorContributionMap":{"guanyz":36}},{"path":"src/main/java/duke/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"guanyz"},"content":"package duke;"},{"lineNumber":2,"author":{"gitId":"guanyz"},"content":""},{"lineNumber":3,"author":{"gitId":"guanyz"},"content":"import java.io.File;"},{"lineNumber":4,"author":{"gitId":"guanyz"},"content":"import java.io.FileNotFoundException;"},{"lineNumber":5,"author":{"gitId":"guanyz"},"content":"import java.io.FileWriter;"},{"lineNumber":6,"author":{"gitId":"guanyz"},"content":"import java.util.ArrayList;"},{"lineNumber":7,"author":{"gitId":"guanyz"},"content":"import java.util.Scanner;"},{"lineNumber":8,"author":{"gitId":"guanyz"},"content":""},{"lineNumber":9,"author":{"gitId":"guanyz"},"content":"/**"},{"lineNumber":10,"author":{"gitId":"guanyz"},"content":" * Handles saving and loading the TaskList to/from the hard disk via a save data text file."},{"lineNumber":11,"author":{"gitId":"guanyz"},"content":" */"},{"lineNumber":12,"author":{"gitId":"guanyz"},"content":"public class Storage {"},{"lineNumber":13,"author":{"gitId":"guanyz"},"content":"    private String filepath;"},{"lineNumber":14,"author":{"gitId":"guanyz"},"content":""},{"lineNumber":15,"author":{"gitId":"guanyz"},"content":"    public Storage(String filepath) {"},{"lineNumber":16,"author":{"gitId":"guanyz"},"content":"        this.filepath \u003d filepath;"},{"lineNumber":17,"author":{"gitId":"guanyz"},"content":"    }"},{"lineNumber":18,"author":{"gitId":"guanyz"},"content":""},{"lineNumber":19,"author":{"gitId":"guanyz"},"content":"    /**"},{"lineNumber":20,"author":{"gitId":"guanyz"},"content":"     * Loads list of Tasks from the text file specified in the Storage object\u0027s filepath."},{"lineNumber":21,"author":{"gitId":"guanyz"},"content":"     *"},{"lineNumber":22,"author":{"gitId":"guanyz"},"content":"     * @return ArrayList of the Tasks stored in the save data file."},{"lineNumber":23,"author":{"gitId":"guanyz"},"content":"     * @throws DukeException If an Exception occurs as a result of the stored save data being malformed."},{"lineNumber":24,"author":{"gitId":"guanyz"},"content":"     */"},{"lineNumber":25,"author":{"gitId":"guanyz"},"content":"    public ArrayList\u003cTask\u003e load() throws DukeException {"},{"lineNumber":26,"author":{"gitId":"guanyz"},"content":"        ArrayList\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();"},{"lineNumber":27,"author":{"gitId":"guanyz"},"content":""},{"lineNumber":28,"author":{"gitId":"guanyz"},"content":"        try {"},{"lineNumber":29,"author":{"gitId":"guanyz"},"content":"            File savefile \u003d new File(filepath);"},{"lineNumber":30,"author":{"gitId":"guanyz"},"content":"            Scanner saveReader \u003d new Scanner(savefile);"},{"lineNumber":31,"author":{"gitId":"guanyz"},"content":""},{"lineNumber":32,"author":{"gitId":"guanyz"},"content":"            while (saveReader.hasNextLine()) {"},{"lineNumber":33,"author":{"gitId":"guanyz"},"content":"                String saveData \u003d saveReader.nextLine();"},{"lineNumber":34,"author":{"gitId":"guanyz"},"content":"                tasks.add(TaskParser.parseTask(saveData));"},{"lineNumber":35,"author":{"gitId":"guanyz"},"content":"            }"},{"lineNumber":36,"author":{"gitId":"guanyz"},"content":""},{"lineNumber":37,"author":{"gitId":"guanyz"},"content":"            saveReader.close();"},{"lineNumber":38,"author":{"gitId":"guanyz"},"content":"        } catch (FileNotFoundException e) {"},{"lineNumber":39,"author":{"gitId":"guanyz"},"content":"            // create file if it doesn\u0027t exist"},{"lineNumber":40,"author":{"gitId":"guanyz"},"content":"            File saveFile \u003d new File(filepath);"},{"lineNumber":41,"author":{"gitId":"guanyz"},"content":"            try {"},{"lineNumber":42,"author":{"gitId":"guanyz"},"content":"                saveFile.createNewFile();"},{"lineNumber":43,"author":{"gitId":"guanyz"},"content":"            } catch (Exception err) {"},{"lineNumber":44,"author":{"gitId":"guanyz"},"content":"                String errorMsg \u003d \"There was an error creating the save file!\\n\""},{"lineNumber":45,"author":{"gitId":"guanyz"},"content":"                        + \"You can still use this todo list, but your data won\u0027t be saved.\";"},{"lineNumber":46,"author":{"gitId":"guanyz"},"content":"                throw new DukeException(errorMsg);"},{"lineNumber":47,"author":{"gitId":"guanyz"},"content":"            }"},{"lineNumber":48,"author":{"gitId":"guanyz"},"content":"        } catch (DukeException e) {"},{"lineNumber":49,"author":{"gitId":"guanyz"},"content":"            tasks.clear();"},{"lineNumber":50,"author":{"gitId":"guanyz"},"content":""},{"lineNumber":51,"author":{"gitId":"guanyz"},"content":"            String errorMsg \u003d \"Looks like the save data\u0027s been corrupted.\\n\""},{"lineNumber":52,"author":{"gitId":"guanyz"},"content":"                    + \"Please avoid manually editing this file!\\n\""},{"lineNumber":53,"author":{"gitId":"guanyz"},"content":"                    + \"For now, I\u0027ve cleared the save data.\";"},{"lineNumber":54,"author":{"gitId":"guanyz"},"content":"            throw new DukeException(errorMsg);"},{"lineNumber":55,"author":{"gitId":"guanyz"},"content":""},{"lineNumber":56,"author":{"gitId":"guanyz"},"content":"        }"},{"lineNumber":57,"author":{"gitId":"guanyz"},"content":"        return tasks;"},{"lineNumber":58,"author":{"gitId":"guanyz"},"content":"    }"},{"lineNumber":59,"author":{"gitId":"guanyz"},"content":""},{"lineNumber":60,"author":{"gitId":"guanyz"},"content":"    /**"},{"lineNumber":61,"author":{"gitId":"guanyz"},"content":"     * Saves list of Tasks to the save data file."},{"lineNumber":62,"author":{"gitId":"guanyz"},"content":"     * @param tasks The list of Tasks to be saved to the file."},{"lineNumber":63,"author":{"gitId":"guanyz"},"content":"     * @throws DukeException If an Exception occurs as a result of the stored save data being malformed."},{"lineNumber":64,"author":{"gitId":"guanyz"},"content":"     */"},{"lineNumber":65,"author":{"gitId":"guanyz"},"content":"    public void saveTasks(TaskList tasks) throws DukeException {"},{"lineNumber":66,"author":{"gitId":"guanyz"},"content":"        try {"},{"lineNumber":67,"author":{"gitId":"guanyz"},"content":"            FileWriter saveWriter \u003d new FileWriter(filepath);"},{"lineNumber":68,"author":{"gitId":"guanyz"},"content":""},{"lineNumber":69,"author":{"gitId":"guanyz"},"content":"            StringBuilder saveStringBuilder \u003d new StringBuilder();"},{"lineNumber":70,"author":{"gitId":"guanyz"},"content":"            for (int i \u003d 1; i \u003c\u003d tasks.size(); i++) {"},{"lineNumber":71,"author":{"gitId":"guanyz"},"content":"                saveStringBuilder.append(tasks.get(i).getSaveString());"},{"lineNumber":72,"author":{"gitId":"guanyz"},"content":"            }"},{"lineNumber":73,"author":{"gitId":"guanyz"},"content":""},{"lineNumber":74,"author":{"gitId":"guanyz"},"content":"            saveWriter.write(saveStringBuilder.toString());"},{"lineNumber":75,"author":{"gitId":"guanyz"},"content":"            saveWriter.close();"},{"lineNumber":76,"author":{"gitId":"guanyz"},"content":""},{"lineNumber":77,"author":{"gitId":"guanyz"},"content":"        } catch (Exception e) {"},{"lineNumber":78,"author":{"gitId":"guanyz"},"content":"            String errorMsg \u003d \"Save file not found!\\n\""},{"lineNumber":79,"author":{"gitId":"guanyz"},"content":"                    + \"Please don\u0027t manually edit the save file.\";"},{"lineNumber":80,"author":{"gitId":"guanyz"},"content":"            throw new DukeException(errorMsg);"},{"lineNumber":81,"author":{"gitId":"guanyz"},"content":"        }"},{"lineNumber":82,"author":{"gitId":"guanyz"},"content":"    }"},{"lineNumber":83,"author":{"gitId":"guanyz"},"content":"}"}],"authorContributionMap":{"guanyz":83}},{"path":"src/main/java/duke/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"guanyz"},"content":"package duke;"},{"lineNumber":2,"author":{"gitId":"guanyz"},"content":""},{"lineNumber":3,"author":{"gitId":"guanyz"},"content":"/**"},{"lineNumber":4,"author":{"gitId":"guanyz"},"content":" * Represents a Task object."},{"lineNumber":5,"author":{"gitId":"guanyz"},"content":" */"},{"lineNumber":6,"author":{"gitId":"guanyz"},"content":"public abstract class Task {"},{"lineNumber":7,"author":{"gitId":"guanyz"},"content":"    protected final String description;"},{"lineNumber":8,"author":{"gitId":"guanyz"},"content":"    protected boolean isDone;"},{"lineNumber":9,"author":{"gitId":"guanyz"},"content":""},{"lineNumber":10,"author":{"gitId":"guanyz"},"content":"    public Task(String description) {"},{"lineNumber":11,"author":{"gitId":"guanyz"},"content":"        this.description \u003d description;"},{"lineNumber":12,"author":{"gitId":"guanyz"},"content":"        this.isDone \u003d false; // tasks always start as not done"},{"lineNumber":13,"author":{"gitId":"guanyz"},"content":"    }"},{"lineNumber":14,"author":{"gitId":"guanyz"},"content":""},{"lineNumber":15,"author":{"gitId":"guanyz"},"content":"    public boolean isDone() {"},{"lineNumber":16,"author":{"gitId":"guanyz"},"content":"        return isDone;"},{"lineNumber":17,"author":{"gitId":"guanyz"},"content":"    }"},{"lineNumber":18,"author":{"gitId":"guanyz"},"content":""},{"lineNumber":19,"author":{"gitId":"guanyz"},"content":"    public String getDescription() {"},{"lineNumber":20,"author":{"gitId":"guanyz"},"content":"        return description;"},{"lineNumber":21,"author":{"gitId":"guanyz"},"content":"    }"},{"lineNumber":22,"author":{"gitId":"guanyz"},"content":""},{"lineNumber":23,"author":{"gitId":"guanyz"},"content":"    public void markAsDone() {"},{"lineNumber":24,"author":{"gitId":"guanyz"},"content":"        this.isDone \u003d true;"},{"lineNumber":25,"author":{"gitId":"guanyz"},"content":"    }"},{"lineNumber":26,"author":{"gitId":"guanyz"},"content":""},{"lineNumber":27,"author":{"gitId":"guanyz"},"content":"    public abstract String getSaveString();"},{"lineNumber":28,"author":{"gitId":"guanyz"},"content":""},{"lineNumber":29,"author":{"gitId":"guanyz"},"content":"    /**"},{"lineNumber":30,"author":{"gitId":"guanyz"},"content":"     * Returns a String representation of whether this Task is done."},{"lineNumber":31,"author":{"gitId":"guanyz"},"content":"     * @return \"X\" if the Task is done, \" \" (one space) otherwise."},{"lineNumber":32,"author":{"gitId":"guanyz"},"content":"     */"},{"lineNumber":33,"author":{"gitId":"guanyz"},"content":"    protected String getStatus() {"},{"lineNumber":34,"author":{"gitId":"guanyz"},"content":"        if (this.isDone) {"},{"lineNumber":35,"author":{"gitId":"guanyz"},"content":"            return \"X\";"},{"lineNumber":36,"author":{"gitId":"guanyz"},"content":"        } else {"},{"lineNumber":37,"author":{"gitId":"guanyz"},"content":"            return \" \";"},{"lineNumber":38,"author":{"gitId":"guanyz"},"content":"        }"},{"lineNumber":39,"author":{"gitId":"guanyz"},"content":"    }"},{"lineNumber":40,"author":{"gitId":"guanyz"},"content":"}"}],"authorContributionMap":{"guanyz":40}},{"path":"src/main/java/duke/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"guanyz"},"content":"package duke;"},{"lineNumber":2,"author":{"gitId":"guanyz"},"content":""},{"lineNumber":3,"author":{"gitId":"guanyz"},"content":"import java.util.ArrayList;"},{"lineNumber":4,"author":{"gitId":"guanyz"},"content":"import java.util.Collections;"},{"lineNumber":5,"author":{"gitId":"guanyz"},"content":""},{"lineNumber":6,"author":{"gitId":"guanyz"},"content":"/**"},{"lineNumber":7,"author":{"gitId":"guanyz"},"content":" * Represents a list of Task objects, and governs interactions between Tasks and this List."},{"lineNumber":8,"author":{"gitId":"guanyz"},"content":" */"},{"lineNumber":9,"author":{"gitId":"guanyz"},"content":"public class TaskList {"},{"lineNumber":10,"author":{"gitId":"guanyz"},"content":"    private static final String REGEX_PATTERN_START \u003d \"^.*\";"},{"lineNumber":11,"author":{"gitId":"guanyz"},"content":"    private static final String REGEX_PATTERN_END \u003d \".*$\";"},{"lineNumber":12,"author":{"gitId":"guanyz"},"content":""},{"lineNumber":13,"author":{"gitId":"guanyz"},"content":"    private ArrayList\u003cTask\u003e tasks;"},{"lineNumber":14,"author":{"gitId":"guanyz"},"content":""},{"lineNumber":15,"author":{"gitId":"guanyz"},"content":"    public TaskList() {"},{"lineNumber":16,"author":{"gitId":"guanyz"},"content":"        this.tasks \u003d new ArrayList\u003c\u003e();"},{"lineNumber":17,"author":{"gitId":"guanyz"},"content":"    }"},{"lineNumber":18,"author":{"gitId":"guanyz"},"content":""},{"lineNumber":19,"author":{"gitId":"guanyz"},"content":"    public TaskList(ArrayList\u003cTask\u003e tasks) {"},{"lineNumber":20,"author":{"gitId":"guanyz"},"content":"        this.tasks \u003d tasks;"},{"lineNumber":21,"author":{"gitId":"guanyz"},"content":"    }"},{"lineNumber":22,"author":{"gitId":"guanyz"},"content":""},{"lineNumber":23,"author":{"gitId":"guanyz"},"content":"    /**"},{"lineNumber":24,"author":{"gitId":"guanyz"},"content":"     * Adds a Task to the TaskList."},{"lineNumber":25,"author":{"gitId":"guanyz"},"content":"     * @param task Task to be added."},{"lineNumber":26,"author":{"gitId":"guanyz"},"content":"     */"},{"lineNumber":27,"author":{"gitId":"guanyz"},"content":"    public void add(Task task) {"},{"lineNumber":28,"author":{"gitId":"guanyz"},"content":"        tasks.add(task);"},{"lineNumber":29,"author":{"gitId":"guanyz"},"content":"    }"},{"lineNumber":30,"author":{"gitId":"guanyz"},"content":""},{"lineNumber":31,"author":{"gitId":"guanyz"},"content":"    /**"},{"lineNumber":32,"author":{"gitId":"guanyz"},"content":"     * Removes and returns the Task at the specified index from the TaskList."},{"lineNumber":33,"author":{"gitId":"guanyz"},"content":"     * @param idx (1-indexed) index of the Task to be removed from the TaskList."},{"lineNumber":34,"author":{"gitId":"guanyz"},"content":"     * @return Task that was removed from the TaskList."},{"lineNumber":35,"author":{"gitId":"guanyz"},"content":"     */"},{"lineNumber":36,"author":{"gitId":"guanyz"},"content":"    public Task remove(int idx) {"},{"lineNumber":37,"author":{"gitId":"guanyz"},"content":"        assert (idx \u003e\u003d 0 \u0026\u0026 idx \u003c tasks.size()) : \" Task index out of bounds\";"},{"lineNumber":38,"author":{"gitId":"guanyz"},"content":"        return tasks.remove(idx - 1); // TaskList is 1-indexed"},{"lineNumber":39,"author":{"gitId":"guanyz"},"content":"    }"},{"lineNumber":40,"author":{"gitId":"guanyz"},"content":""},{"lineNumber":41,"author":{"gitId":"guanyz"},"content":"    /**"},{"lineNumber":42,"author":{"gitId":"guanyz"},"content":"     * Returns the Task at the specified index from the TaskList."},{"lineNumber":43,"author":{"gitId":"guanyz"},"content":"     * @param idx (1-indexed) index of the Task to be returned from the TaskList."},{"lineNumber":44,"author":{"gitId":"guanyz"},"content":"     * @return Task to at the given (1-indexed) index of the TaskList."},{"lineNumber":45,"author":{"gitId":"guanyz"},"content":"     */"},{"lineNumber":46,"author":{"gitId":"guanyz"},"content":"    public Task get(int idx) {"},{"lineNumber":47,"author":{"gitId":"guanyz"},"content":"        assert (idx \u003e\u003d 0 \u0026\u0026 idx \u003c tasks.size()) : \" Task index out of bounds\";"},{"lineNumber":48,"author":{"gitId":"guanyz"},"content":"        return tasks.get(idx - 1); // TaskList is 1-indexed"},{"lineNumber":49,"author":{"gitId":"guanyz"},"content":"    }"},{"lineNumber":50,"author":{"gitId":"guanyz"},"content":""},{"lineNumber":51,"author":{"gitId":"guanyz"},"content":"    /**"},{"lineNumber":52,"author":{"gitId":"guanyz"},"content":"     * Returns the number of Tasks in the TaskList."},{"lineNumber":53,"author":{"gitId":"guanyz"},"content":"     * @return Number of Tasks in the TaskList."},{"lineNumber":54,"author":{"gitId":"guanyz"},"content":"     */"},{"lineNumber":55,"author":{"gitId":"guanyz"},"content":"    public int size() {"},{"lineNumber":56,"author":{"gitId":"guanyz"},"content":"        return tasks.size();"},{"lineNumber":57,"author":{"gitId":"guanyz"},"content":"    }"},{"lineNumber":58,"author":{"gitId":"guanyz"},"content":""},{"lineNumber":59,"author":{"gitId":"guanyz"},"content":"    /**"},{"lineNumber":60,"author":{"gitId":"guanyz"},"content":"     * Reverses the order of the Tasks in the TaskList."},{"lineNumber":61,"author":{"gitId":"guanyz"},"content":"     */"},{"lineNumber":62,"author":{"gitId":"guanyz"},"content":"    public void reverse() {"},{"lineNumber":63,"author":{"gitId":"guanyz"},"content":"        Collections.reverse(tasks);"},{"lineNumber":64,"author":{"gitId":"guanyz"},"content":"    }"},{"lineNumber":65,"author":{"gitId":"guanyz"},"content":""},{"lineNumber":66,"author":{"gitId":"guanyz"},"content":"    /**"},{"lineNumber":67,"author":{"gitId":"guanyz"},"content":"     * Finds all Tasks whose descriptions contain the search parameter and returns them in a TaskList."},{"lineNumber":68,"author":{"gitId":"guanyz"},"content":"     * @param search Search parameter, as a String."},{"lineNumber":69,"author":{"gitId":"guanyz"},"content":"     * @return TaskList containing all the matching Tasks."},{"lineNumber":70,"author":{"gitId":"guanyz"},"content":"     */"},{"lineNumber":71,"author":{"gitId":"guanyz"},"content":"    public TaskList find(String search) {"},{"lineNumber":72,"author":{"gitId":"guanyz"},"content":"        TaskList matchingTasks \u003d new TaskList();"},{"lineNumber":73,"author":{"gitId":"guanyz"},"content":"        String searchPattern \u003d REGEX_PATTERN_START + search.toLowerCase() + REGEX_PATTERN_END;"},{"lineNumber":74,"author":{"gitId":"guanyz"},"content":"        for (Task task : tasks) {"},{"lineNumber":75,"author":{"gitId":"guanyz"},"content":"            if (task.getDescription().toLowerCase().matches(searchPattern)) {"},{"lineNumber":76,"author":{"gitId":"guanyz"},"content":"                matchingTasks.add(task);"},{"lineNumber":77,"author":{"gitId":"guanyz"},"content":"            }"},{"lineNumber":78,"author":{"gitId":"guanyz"},"content":"        }"},{"lineNumber":79,"author":{"gitId":"guanyz"},"content":"        return matchingTasks;"},{"lineNumber":80,"author":{"gitId":"guanyz"},"content":"    }"},{"lineNumber":81,"author":{"gitId":"guanyz"},"content":"}"}],"authorContributionMap":{"guanyz":81}},{"path":"src/main/java/duke/TaskParser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"guanyz"},"content":"package duke;"},{"lineNumber":2,"author":{"gitId":"guanyz"},"content":""},{"lineNumber":3,"author":{"gitId":"guanyz"},"content":"import java.time.LocalDate;"},{"lineNumber":4,"author":{"gitId":"guanyz"},"content":"import java.time.format.DateTimeFormatter;"},{"lineNumber":5,"author":{"gitId":"guanyz"},"content":""},{"lineNumber":6,"author":{"gitId":"guanyz"},"content":"/**"},{"lineNumber":7,"author":{"gitId":"guanyz"},"content":" * Parses String representations of Tasks into Task objects."},{"lineNumber":8,"author":{"gitId":"guanyz"},"content":" */"},{"lineNumber":9,"author":{"gitId":"guanyz"},"content":"public class TaskParser {"},{"lineNumber":10,"author":{"gitId":"guanyz"},"content":"    private static final int SPLIT_LIMIT \u003d 2;"},{"lineNumber":11,"author":{"gitId":"guanyz"},"content":"    private static final int NUM_REQUIRED_TIMED_TASK_PARTS \u003d 2;"},{"lineNumber":12,"author":{"gitId":"guanyz"},"content":""},{"lineNumber":13,"author":{"gitId":"guanyz"},"content":"    /**"},{"lineNumber":14,"author":{"gitId":"guanyz"},"content":"     * Parses a String representation of a Task into a Task object, and returns the resultant Task object."},{"lineNumber":15,"author":{"gitId":"guanyz"},"content":"     *"},{"lineNumber":16,"author":{"gitId":"guanyz"},"content":"     * @param fullTaskString String representation of the Task to be parsed."},{"lineNumber":17,"author":{"gitId":"guanyz"},"content":"     * @return Task object parsed from the input String."},{"lineNumber":18,"author":{"gitId":"guanyz"},"content":"     * @throws DukeException If an Exception occurs as a result of the String being malformed."},{"lineNumber":19,"author":{"gitId":"guanyz"},"content":"     */"},{"lineNumber":20,"author":{"gitId":"guanyz"},"content":"    public static Task parseTask(String fullTaskString) throws DukeException {"},{"lineNumber":21,"author":{"gitId":"guanyz"},"content":"        Task newTask;"},{"lineNumber":22,"author":{"gitId":"guanyz"},"content":"        String[] taskParts;"},{"lineNumber":23,"author":{"gitId":"guanyz"},"content":"        String parsableTaskString;"},{"lineNumber":24,"author":{"gitId":"guanyz"},"content":"        String taskTail;"},{"lineNumber":25,"author":{"gitId":"guanyz"},"content":"        String description;"},{"lineNumber":26,"author":{"gitId":"guanyz"},"content":"        String datetimeString;"},{"lineNumber":27,"author":{"gitId":"guanyz"},"content":"        LocalDate datetime;"},{"lineNumber":28,"author":{"gitId":"guanyz"},"content":"        boolean isDone \u003d false;"},{"lineNumber":29,"author":{"gitId":"guanyz"},"content":""},{"lineNumber":30,"author":{"gitId":"guanyz"},"content":"        if (fullTaskString.startsWith(\"[isDone]\")) {"},{"lineNumber":31,"author":{"gitId":"guanyz"},"content":"            parsableTaskString \u003d fullTaskString.split(\"\\\\[isDone]\", SPLIT_LIMIT)[1].trim();"},{"lineNumber":32,"author":{"gitId":"guanyz"},"content":"            isDone \u003d true;"},{"lineNumber":33,"author":{"gitId":"guanyz"},"content":"        } else {"},{"lineNumber":34,"author":{"gitId":"guanyz"},"content":"            parsableTaskString \u003d fullTaskString;"},{"lineNumber":35,"author":{"gitId":"guanyz"},"content":"        }"},{"lineNumber":36,"author":{"gitId":"guanyz"},"content":""},{"lineNumber":37,"author":{"gitId":"guanyz"},"content":"        if (parsableTaskString.startsWith(\"todo\")) {"},{"lineNumber":38,"author":{"gitId":"guanyz"},"content":"            taskParts \u003d parsableTaskString.split(\"todo\", SPLIT_LIMIT);"},{"lineNumber":39,"author":{"gitId":"guanyz"},"content":""},{"lineNumber":40,"author":{"gitId":"guanyz"},"content":"            if (taskParts[1].length() \u003d\u003d 0) {"},{"lineNumber":41,"author":{"gitId":"guanyz"},"content":"                throw new DukeException(\"Oops! Usage: todo [desc]\");"},{"lineNumber":42,"author":{"gitId":"guanyz"},"content":"            }"},{"lineNumber":43,"author":{"gitId":"guanyz"},"content":"            taskTail \u003d taskParts[1].trim();"},{"lineNumber":44,"author":{"gitId":"guanyz"},"content":""},{"lineNumber":45,"author":{"gitId":"guanyz"},"content":"            description \u003d taskTail;"},{"lineNumber":46,"author":{"gitId":"guanyz"},"content":"            newTask \u003d new Todo(description);"},{"lineNumber":47,"author":{"gitId":"guanyz"},"content":""},{"lineNumber":48,"author":{"gitId":"guanyz"},"content":"        } else if (parsableTaskString.startsWith(\"event\")) {"},{"lineNumber":49,"author":{"gitId":"guanyz"},"content":"            taskTail \u003d parsableTaskString.split(\"event\", SPLIT_LIMIT)[1].trim();"},{"lineNumber":50,"author":{"gitId":"guanyz"},"content":"            taskParts \u003d taskTail.split(\" /on \");"},{"lineNumber":51,"author":{"gitId":"guanyz"},"content":""},{"lineNumber":52,"author":{"gitId":"guanyz"},"content":"            if (taskParts.length !\u003d NUM_REQUIRED_TIMED_TASK_PARTS) {"},{"lineNumber":53,"author":{"gitId":"guanyz"},"content":"                throw new DukeException(\"Oops! Usage: event [desc] /on [date]\");"},{"lineNumber":54,"author":{"gitId":"guanyz"},"content":"            }"},{"lineNumber":55,"author":{"gitId":"guanyz"},"content":""},{"lineNumber":56,"author":{"gitId":"guanyz"},"content":"            description \u003d taskParts[0];"},{"lineNumber":57,"author":{"gitId":"guanyz"},"content":"            datetimeString \u003d taskParts[1];"},{"lineNumber":58,"author":{"gitId":"guanyz"},"content":""},{"lineNumber":59,"author":{"gitId":"guanyz"},"content":"            try {"},{"lineNumber":60,"author":{"gitId":"guanyz"},"content":"                datetime \u003d LocalDate.parse(datetimeString, DateTimeFormatter.ofPattern(\"dd/MM/yyyy\"));"},{"lineNumber":61,"author":{"gitId":"guanyz"},"content":"            } catch (Exception e) {"},{"lineNumber":62,"author":{"gitId":"guanyz"},"content":"                throw new DukeException(\"Looks like your date\u0027s formatted incorrectly! Try this: dd/mm/yyyy\");"},{"lineNumber":63,"author":{"gitId":"guanyz"},"content":"            }"},{"lineNumber":64,"author":{"gitId":"guanyz"},"content":""},{"lineNumber":65,"author":{"gitId":"guanyz"},"content":"            newTask \u003d new Event(description, datetime);"},{"lineNumber":66,"author":{"gitId":"guanyz"},"content":""},{"lineNumber":67,"author":{"gitId":"guanyz"},"content":"        } else if (parsableTaskString.startsWith(\"deadline\")) {"},{"lineNumber":68,"author":{"gitId":"guanyz"},"content":"            taskTail \u003d parsableTaskString.split(\"deadline\", SPLIT_LIMIT)[1].trim();"},{"lineNumber":69,"author":{"gitId":"guanyz"},"content":"            taskParts \u003d taskTail.split(\" /by \");"},{"lineNumber":70,"author":{"gitId":"guanyz"},"content":""},{"lineNumber":71,"author":{"gitId":"guanyz"},"content":"            if (taskParts.length !\u003d NUM_REQUIRED_TIMED_TASK_PARTS) {"},{"lineNumber":72,"author":{"gitId":"guanyz"},"content":"                throw new DukeException(\"Oops! Usage: event [desc] /on [date]\");"},{"lineNumber":73,"author":{"gitId":"guanyz"},"content":"            }"},{"lineNumber":74,"author":{"gitId":"guanyz"},"content":""},{"lineNumber":75,"author":{"gitId":"guanyz"},"content":"            description \u003d taskParts[0];"},{"lineNumber":76,"author":{"gitId":"guanyz"},"content":"            datetimeString \u003d taskParts[1];"},{"lineNumber":77,"author":{"gitId":"guanyz"},"content":""},{"lineNumber":78,"author":{"gitId":"guanyz"},"content":"            try {"},{"lineNumber":79,"author":{"gitId":"guanyz"},"content":"                datetime \u003d LocalDate.parse(datetimeString, DateTimeFormatter.ofPattern(\"dd/MM/yyyy\"));"},{"lineNumber":80,"author":{"gitId":"guanyz"},"content":"            } catch (Exception e) {"},{"lineNumber":81,"author":{"gitId":"guanyz"},"content":"                throw new DukeException(\"Looks like your date\u0027s formatted incorrectly! Try this: dd/mm/yyyy\");"},{"lineNumber":82,"author":{"gitId":"guanyz"},"content":"            }"},{"lineNumber":83,"author":{"gitId":"guanyz"},"content":""},{"lineNumber":84,"author":{"gitId":"guanyz"},"content":"            newTask \u003d new Deadline(description, datetime);"},{"lineNumber":85,"author":{"gitId":"guanyz"},"content":""},{"lineNumber":86,"author":{"gitId":"guanyz"},"content":"        } else {"},{"lineNumber":87,"author":{"gitId":"guanyz"},"content":"            throw new DukeException(\"Unknown command!\");"},{"lineNumber":88,"author":{"gitId":"guanyz"},"content":"        }"},{"lineNumber":89,"author":{"gitId":"guanyz"},"content":""},{"lineNumber":90,"author":{"gitId":"guanyz"},"content":"        if (isDone) {"},{"lineNumber":91,"author":{"gitId":"guanyz"},"content":"            newTask.markAsDone();"},{"lineNumber":92,"author":{"gitId":"guanyz"},"content":"        }"},{"lineNumber":93,"author":{"gitId":"guanyz"},"content":""},{"lineNumber":94,"author":{"gitId":"guanyz"},"content":"        return newTask;"},{"lineNumber":95,"author":{"gitId":"guanyz"},"content":"    }"},{"lineNumber":96,"author":{"gitId":"guanyz"},"content":"}"}],"authorContributionMap":{"guanyz":96}},{"path":"src/main/java/duke/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"guanyz"},"content":"package duke;"},{"lineNumber":2,"author":{"gitId":"guanyz"},"content":""},{"lineNumber":3,"author":{"gitId":"guanyz"},"content":"/**"},{"lineNumber":4,"author":{"gitId":"guanyz"},"content":" * Represents a Todo object."},{"lineNumber":5,"author":{"gitId":"guanyz"},"content":" */"},{"lineNumber":6,"author":{"gitId":"guanyz"},"content":"public class Todo extends Task {"},{"lineNumber":7,"author":{"gitId":"guanyz"},"content":"    public Todo(String description) {"},{"lineNumber":8,"author":{"gitId":"guanyz"},"content":"        super(description);"},{"lineNumber":9,"author":{"gitId":"guanyz"},"content":"    }"},{"lineNumber":10,"author":{"gitId":"guanyz"},"content":""},{"lineNumber":11,"author":{"gitId":"guanyz"},"content":"    /**"},{"lineNumber":12,"author":{"gitId":"guanyz"},"content":"     * Returns a String representing this object to be saved into a save data file."},{"lineNumber":13,"author":{"gitId":"guanyz"},"content":"     * @return String representation of this object, formatted for save data use."},{"lineNumber":14,"author":{"gitId":"guanyz"},"content":"     */"},{"lineNumber":15,"author":{"gitId":"guanyz"},"content":"    public String getSaveString() {"},{"lineNumber":16,"author":{"gitId":"guanyz"},"content":"        if (this.isDone()) {"},{"lineNumber":17,"author":{"gitId":"guanyz"},"content":"            return String.format(\"[isDone] todo %s\\n\", description);"},{"lineNumber":18,"author":{"gitId":"guanyz"},"content":"        } else {"},{"lineNumber":19,"author":{"gitId":"guanyz"},"content":"            return String.format(\"todo %s\\n\", description);"},{"lineNumber":20,"author":{"gitId":"guanyz"},"content":"        }"},{"lineNumber":21,"author":{"gitId":"guanyz"},"content":"    }"},{"lineNumber":22,"author":{"gitId":"guanyz"},"content":""},{"lineNumber":23,"author":{"gitId":"guanyz"},"content":"    @Override"},{"lineNumber":24,"author":{"gitId":"guanyz"},"content":"    public String toString() {"},{"lineNumber":25,"author":{"gitId":"guanyz"},"content":"        return String.format(\"[T][%s] %s\", getStatus(), description);"},{"lineNumber":26,"author":{"gitId":"guanyz"},"content":"    }"},{"lineNumber":27,"author":{"gitId":"guanyz"},"content":"}"}],"authorContributionMap":{"guanyz":27}},{"path":"src/main/java/duke/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"guanyz"},"content":"package duke;"},{"lineNumber":2,"author":{"gitId":"guanyz"},"content":""},{"lineNumber":3,"author":{"gitId":"guanyz"},"content":"/**"},{"lineNumber":4,"author":{"gitId":"guanyz"},"content":" * Handles receiving user input and outputting relevant textual information for the user to see."},{"lineNumber":5,"author":{"gitId":"guanyz"},"content":" */"},{"lineNumber":6,"author":{"gitId":"guanyz"},"content":"public class Ui {"},{"lineNumber":7,"author":{"gitId":"guanyz"},"content":""},{"lineNumber":8,"author":{"gitId":"guanyz"},"content":"    /**"},{"lineNumber":9,"author":{"gitId":"guanyz"},"content":"     * Shows the details of every Task in the TaskList."},{"lineNumber":10,"author":{"gitId":"guanyz"},"content":"     * @param tasks TaskList to show Tasks from."},{"lineNumber":11,"author":{"gitId":"guanyz"},"content":"     * @return String representation of the Tasks in the TaskList."},{"lineNumber":12,"author":{"gitId":"guanyz"},"content":"     */"},{"lineNumber":13,"author":{"gitId":"guanyz"},"content":"    public String showAllTasks(TaskList tasks) {"},{"lineNumber":14,"author":{"gitId":"guanyz"},"content":"        String msg;"},{"lineNumber":15,"author":{"gitId":"guanyz"},"content":""},{"lineNumber":16,"author":{"gitId":"guanyz"},"content":"        if (tasks.size() \u003e 0) {"},{"lineNumber":17,"author":{"gitId":"guanyz"},"content":"            msg \u003d String.format(\"Here\u0027s the current state of your to-do list:\\n%s\","},{"lineNumber":18,"author":{"gitId":"guanyz"},"content":"                    displayList(tasks));"},{"lineNumber":19,"author":{"gitId":"guanyz"},"content":"        } else {"},{"lineNumber":20,"author":{"gitId":"guanyz"},"content":"            msg \u003d \"Your to-do list is empty! Congratulations!\";"},{"lineNumber":21,"author":{"gitId":"guanyz"},"content":"        }"},{"lineNumber":22,"author":{"gitId":"guanyz"},"content":""},{"lineNumber":23,"author":{"gitId":"guanyz"},"content":"        return msg;"},{"lineNumber":24,"author":{"gitId":"guanyz"},"content":"    }"},{"lineNumber":25,"author":{"gitId":"guanyz"},"content":""},{"lineNumber":26,"author":{"gitId":"guanyz"},"content":"    /**"},{"lineNumber":27,"author":{"gitId":"guanyz"},"content":"     * Shows details of a Task that\u0027s been added to the TaskList."},{"lineNumber":28,"author":{"gitId":"guanyz"},"content":"     * @param task Task that\u0027s added to the TaskList."},{"lineNumber":29,"author":{"gitId":"guanyz"},"content":"     * @param listSize Size of the TaskList, after the Task is added."},{"lineNumber":30,"author":{"gitId":"guanyz"},"content":"     * @return Message confirming that the task has been added."},{"lineNumber":31,"author":{"gitId":"guanyz"},"content":"     */"},{"lineNumber":32,"author":{"gitId":"guanyz"},"content":"    public String showAddedTask(Task task, int listSize) {"},{"lineNumber":33,"author":{"gitId":"guanyz"},"content":"        String msg \u003d String.format(\"I\u0027ve added this task: %s\\nYou now have %d items on your todo list.\","},{"lineNumber":34,"author":{"gitId":"guanyz"},"content":"                task.toString(),"},{"lineNumber":35,"author":{"gitId":"guanyz"},"content":"                listSize);"},{"lineNumber":36,"author":{"gitId":"guanyz"},"content":"        return msg;"},{"lineNumber":37,"author":{"gitId":"guanyz"},"content":"    }"},{"lineNumber":38,"author":{"gitId":"guanyz"},"content":""},{"lineNumber":39,"author":{"gitId":"guanyz"},"content":"    /**"},{"lineNumber":40,"author":{"gitId":"guanyz"},"content":"     * Shows details of a Task that\u0027s been removed from the TaskList."},{"lineNumber":41,"author":{"gitId":"guanyz"},"content":"     * @param tasks Tasks that are being removed from the list."},{"lineNumber":42,"author":{"gitId":"guanyz"},"content":"     * @param listSize Size of the TaskList, after the Task is removed."},{"lineNumber":43,"author":{"gitId":"guanyz"},"content":"     * @return Message confirming that the tasks have been removed."},{"lineNumber":44,"author":{"gitId":"guanyz"},"content":"     */"},{"lineNumber":45,"author":{"gitId":"guanyz"},"content":"    public String showRemovedTasks(TaskList tasks, int listSize) {"},{"lineNumber":46,"author":{"gitId":"guanyz"},"content":"        String msg;"},{"lineNumber":47,"author":{"gitId":"guanyz"},"content":""},{"lineNumber":48,"author":{"gitId":"guanyz"},"content":"        if (tasks.size() \u003e 0) {"},{"lineNumber":49,"author":{"gitId":"guanyz"},"content":"            msg \u003d String.format(\"Congrats! The following tasks have been removed from your to-do list:\\n%s\""},{"lineNumber":50,"author":{"gitId":"guanyz"},"content":"                    + \"\\nYou now have %d tasks on your to-do list.\","},{"lineNumber":51,"author":{"gitId":"guanyz"},"content":"                    displayList(tasks),"},{"lineNumber":52,"author":{"gitId":"guanyz"},"content":"                    listSize);"},{"lineNumber":53,"author":{"gitId":"guanyz"},"content":"        } else {"},{"lineNumber":54,"author":{"gitId":"guanyz"},"content":"            msg \u003d \"I couldn\u0027t find any of those tasks to remove!\";"},{"lineNumber":55,"author":{"gitId":"guanyz"},"content":"        }"},{"lineNumber":56,"author":{"gitId":"guanyz"},"content":""},{"lineNumber":57,"author":{"gitId":"guanyz"},"content":"        return msg;"},{"lineNumber":58,"author":{"gitId":"guanyz"},"content":"    }"},{"lineNumber":59,"author":{"gitId":"guanyz"},"content":""},{"lineNumber":60,"author":{"gitId":"guanyz"},"content":"    /**"},{"lineNumber":61,"author":{"gitId":"guanyz"},"content":"     * Shows details of a Task that\u0027s been marked as done/completed."},{"lineNumber":62,"author":{"gitId":"guanyz"},"content":"     * @param tasks Tasks that are being marked as done/completed."},{"lineNumber":63,"author":{"gitId":"guanyz"},"content":"     * @return Message confirming that the tasks have been marked as done/completed."},{"lineNumber":64,"author":{"gitId":"guanyz"},"content":"     */"},{"lineNumber":65,"author":{"gitId":"guanyz"},"content":"    public String showDoneTasks(TaskList tasks) {"},{"lineNumber":66,"author":{"gitId":"guanyz"},"content":"        String msg;"},{"lineNumber":67,"author":{"gitId":"guanyz"},"content":""},{"lineNumber":68,"author":{"gitId":"guanyz"},"content":"        if (tasks.size() \u003e 0) {"},{"lineNumber":69,"author":{"gitId":"guanyz"},"content":"            msg \u003d String.format(\"Congrats! The following tasks have been marked as done:\\n%s\","},{"lineNumber":70,"author":{"gitId":"guanyz"},"content":"                    displayList(tasks));"},{"lineNumber":71,"author":{"gitId":"guanyz"},"content":"        } else {"},{"lineNumber":72,"author":{"gitId":"guanyz"},"content":"            msg \u003d \"I couldn\u0027t find any of those tasks to mark as done!\";"},{"lineNumber":73,"author":{"gitId":"guanyz"},"content":"        }"},{"lineNumber":74,"author":{"gitId":"guanyz"},"content":""},{"lineNumber":75,"author":{"gitId":"guanyz"},"content":"        return msg;"},{"lineNumber":76,"author":{"gitId":"guanyz"},"content":"    }"},{"lineNumber":77,"author":{"gitId":"guanyz"},"content":""},{"lineNumber":78,"author":{"gitId":"guanyz"},"content":""},{"lineNumber":79,"author":{"gitId":"guanyz"},"content":"    /**"},{"lineNumber":80,"author":{"gitId":"guanyz"},"content":"     * Shows the details of Tasks that have been found from the TaskList."},{"lineNumber":81,"author":{"gitId":"guanyz"},"content":"     * @param tasks TaskList of Tasks found via a search."},{"lineNumber":82,"author":{"gitId":"guanyz"},"content":"     * @return String representation of the found Tasks in the TaskList."},{"lineNumber":83,"author":{"gitId":"guanyz"},"content":"     */"},{"lineNumber":84,"author":{"gitId":"guanyz"},"content":"    public String showFoundTasks(TaskList tasks) {"},{"lineNumber":85,"author":{"gitId":"guanyz"},"content":"        String msg;"},{"lineNumber":86,"author":{"gitId":"guanyz"},"content":""},{"lineNumber":87,"author":{"gitId":"guanyz"},"content":"        if (tasks.size() \u003e 0) {"},{"lineNumber":88,"author":{"gitId":"guanyz"},"content":"            msg \u003d String.format(\"Here\u0027s all the matches I found:\\n%s\","},{"lineNumber":89,"author":{"gitId":"guanyz"},"content":"                    displayList(tasks));"},{"lineNumber":90,"author":{"gitId":"guanyz"},"content":"        } else {"},{"lineNumber":91,"author":{"gitId":"guanyz"},"content":"            msg \u003d \"I couldn\u0027t find anything matching that!\";"},{"lineNumber":92,"author":{"gitId":"guanyz"},"content":"        }"},{"lineNumber":93,"author":{"gitId":"guanyz"},"content":""},{"lineNumber":94,"author":{"gitId":"guanyz"},"content":"        return msg;"},{"lineNumber":95,"author":{"gitId":"guanyz"},"content":"    }"},{"lineNumber":96,"author":{"gitId":"guanyz"},"content":""},{"lineNumber":97,"author":{"gitId":"guanyz"},"content":"    /**"},{"lineNumber":98,"author":{"gitId":"guanyz"},"content":"     * Returns the contents of a TaskList in a neat format."},{"lineNumber":99,"author":{"gitId":"guanyz"},"content":"     * @param tasks TaskList containing the tasks to be displayed."},{"lineNumber":100,"author":{"gitId":"guanyz"},"content":"     * @return String summarizing all the tasks in the TaskList."},{"lineNumber":101,"author":{"gitId":"guanyz"},"content":"     */"},{"lineNumber":102,"author":{"gitId":"guanyz"},"content":"    private String displayList(TaskList tasks) {"},{"lineNumber":103,"author":{"gitId":"guanyz"},"content":"        String output;"},{"lineNumber":104,"author":{"gitId":"guanyz"},"content":""},{"lineNumber":105,"author":{"gitId":"guanyz"},"content":"        assert (tasks.size() \u003e 0) : \" Calling displayList() on an empty list\";"},{"lineNumber":106,"author":{"gitId":"guanyz"},"content":""},{"lineNumber":107,"author":{"gitId":"guanyz"},"content":"        StringBuilder items \u003d new StringBuilder();"},{"lineNumber":108,"author":{"gitId":"guanyz"},"content":"        for (int i \u003d 1; i \u003c\u003d tasks.size(); i++) {"},{"lineNumber":109,"author":{"gitId":"guanyz"},"content":"            items.append(String.valueOf(i) + \". \" + tasks.get(i).toString() + \"\\n\");"},{"lineNumber":110,"author":{"gitId":"guanyz"},"content":"        }"},{"lineNumber":111,"author":{"gitId":"guanyz"},"content":""},{"lineNumber":112,"author":{"gitId":"guanyz"},"content":"        output \u003d items.toString().trim();"},{"lineNumber":113,"author":{"gitId":"guanyz"},"content":"        return output;"},{"lineNumber":114,"author":{"gitId":"guanyz"},"content":"    }"},{"lineNumber":115,"author":{"gitId":"guanyz"},"content":"}"}],"authorContributionMap":{"guanyz":115}},{"path":"src/main/resources/view/DialogBox.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"guanyz"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"},{"lineNumber":2,"author":{"gitId":"guanyz"},"content":""},{"lineNumber":3,"author":{"gitId":"guanyz"},"content":"\u003c?import javafx.geometry.Insets?\u003e"},{"lineNumber":4,"author":{"gitId":"guanyz"},"content":"\u003c?import javafx.scene.control.Label?\u003e"},{"lineNumber":5,"author":{"gitId":"guanyz"},"content":"\u003c?import javafx.scene.image.ImageView?\u003e"},{"lineNumber":6,"author":{"gitId":"guanyz"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e"},{"lineNumber":7,"author":{"gitId":"guanyz"},"content":""},{"lineNumber":8,"author":{"gitId":"guanyz"},"content":"\u003cfx:root alignment\u003d\"TOP_RIGHT\" fillHeight\u003d\"false\" maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\" minHeight\u003d\"200.0\" prefWidth\u003d\"400.0\" type\u003d\"javafx.scene.layout.HBox\" xmlns\u003d\"http://javafx.com/javafx/15.0.1\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e"},{"lineNumber":9,"author":{"gitId":"guanyz"},"content":"    \u003cchildren\u003e"},{"lineNumber":10,"author":{"gitId":"guanyz"},"content":"        \u003cLabel fx:id\u003d\"dialog\" maxHeight\u003d\"1.7976931348623157E308\" text\u003d\"Label\" wrapText\u003d\"true\"\u003e"},{"lineNumber":11,"author":{"gitId":"guanyz"},"content":"         \u003copaqueInsets\u003e"},{"lineNumber":12,"author":{"gitId":"guanyz"},"content":"            \u003cInsets /\u003e"},{"lineNumber":13,"author":{"gitId":"guanyz"},"content":"         \u003c/opaqueInsets\u003e"},{"lineNumber":14,"author":{"gitId":"guanyz"},"content":"         \u003cpadding\u003e"},{"lineNumber":15,"author":{"gitId":"guanyz"},"content":"\t\t    \u003cInsets bottom\u003d\"5.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"5.0\" /\u003e"},{"lineNumber":16,"author":{"gitId":"guanyz"},"content":"\t\t \u003c/padding\u003e"},{"lineNumber":17,"author":{"gitId":"guanyz"},"content":"\t\t\u003c/Label\u003e"},{"lineNumber":18,"author":{"gitId":"guanyz"},"content":"        \u003cImageView fx:id\u003d\"displayPicture\" fitHeight\u003d\"99.0\" fitWidth\u003d\"99.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\" /\u003e"},{"lineNumber":19,"author":{"gitId":"guanyz"},"content":"    \u003c/children\u003e"},{"lineNumber":20,"author":{"gitId":"guanyz"},"content":"    \u003cpadding\u003e"},{"lineNumber":21,"author":{"gitId":"guanyz"},"content":"        \u003cInsets bottom\u003d\"15.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"15.0\" /\u003e"},{"lineNumber":22,"author":{"gitId":"guanyz"},"content":"    \u003c/padding\u003e"},{"lineNumber":23,"author":{"gitId":"guanyz"},"content":"\u003c/fx:root\u003e"}],"authorContributionMap":{"guanyz":23}},{"path":"src/main/resources/view/MainWindow.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"guanyz"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"},{"lineNumber":2,"author":{"gitId":"guanyz"},"content":""},{"lineNumber":3,"author":{"gitId":"guanyz"},"content":"\u003c?import javafx.scene.control.Button?\u003e"},{"lineNumber":4,"author":{"gitId":"guanyz"},"content":"\u003c?import javafx.scene.control.ScrollPane?\u003e"},{"lineNumber":5,"author":{"gitId":"guanyz"},"content":"\u003c?import javafx.scene.control.TextField?\u003e"},{"lineNumber":6,"author":{"gitId":"guanyz"},"content":"\u003c?import javafx.scene.layout.AnchorPane?\u003e"},{"lineNumber":7,"author":{"gitId":"guanyz"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e"},{"lineNumber":8,"author":{"gitId":"guanyz"},"content":""},{"lineNumber":9,"author":{"gitId":"guanyz"},"content":"\u003cAnchorPane maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefHeight\u003d\"600.0\" prefWidth\u003d\"400.0\" xmlns\u003d\"http://javafx.com/javafx/8.0.171\" xmlns:fx\u003d\"http://javafx.com/fxml/1\" fx:controller\u003d\"MainWindow\"\u003e"},{"lineNumber":10,"author":{"gitId":"guanyz"},"content":"    \u003cchildren\u003e"},{"lineNumber":11,"author":{"gitId":"guanyz"},"content":"        \u003cTextField fx:id\u003d\"userInput\" layoutY\u003d\"558.0\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"324.0\" AnchorPane.bottomAnchor\u003d\"1.0\" /\u003e"},{"lineNumber":12,"author":{"gitId":"guanyz"},"content":"        \u003cButton fx:id\u003d\"sendButton\" layoutX\u003d\"324.0\" layoutY\u003d\"558.0\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"76.0\" text\u003d\"Send\" /\u003e"},{"lineNumber":13,"author":{"gitId":"guanyz"},"content":"        \u003cScrollPane fx:id\u003d\"scrollPane\" hbarPolicy\u003d\"NEVER\" hvalue\u003d\"1.0\" prefHeight\u003d\"557.0\" prefWidth\u003d\"400.0\" vvalue\u003d\"1.0\"\u003e"},{"lineNumber":14,"author":{"gitId":"guanyz"},"content":"            \u003ccontent\u003e"},{"lineNumber":15,"author":{"gitId":"guanyz"},"content":"                \u003cVBox fx:id\u003d\"dialogContainer\" prefHeight\u003d\"552.0\" prefWidth\u003d\"388.0\" /\u003e"},{"lineNumber":16,"author":{"gitId":"guanyz"},"content":"            \u003c/content\u003e"},{"lineNumber":17,"author":{"gitId":"guanyz"},"content":"        \u003c/ScrollPane\u003e"},{"lineNumber":18,"author":{"gitId":"guanyz"},"content":"    \u003c/children\u003e"},{"lineNumber":19,"author":{"gitId":"guanyz"},"content":"\u003c/AnchorPane\u003e"}],"authorContributionMap":{"guanyz":19}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"guanyz"},"content":"todo TODO 1"},{"lineNumber":2,"author":{"gitId":"guanyz"},"content":"deadline DEADLINE 2 /by SOME TIME"},{"lineNumber":3,"author":{"gitId":"guanyz"},"content":"event EVENT 3 /on SOME TIME"},{"lineNumber":4,"author":{"gitId":"guanyz"},"content":"list"},{"lineNumber":5,"author":{"gitId":"guanyz"},"content":"todo TODO 4"},{"lineNumber":6,"author":{"gitId":"guanyz"},"content":"event EVENT 5 /on SOME TIME"},{"lineNumber":7,"author":{"gitId":"guanyz"},"content":"deadline DEADLINE 6 /by SOME TIME"},{"lineNumber":8,"author":{"gitId":"guanyz"},"content":"list"},{"lineNumber":9,"author":{"gitId":"guanyz"},"content":"done 1"},{"lineNumber":10,"author":{"gitId":"guanyz"},"content":"finish 2"},{"lineNumber":11,"author":{"gitId":"guanyz"},"content":"complete 3"},{"lineNumber":12,"author":{"gitId":"guanyz"},"content":"list"},{"lineNumber":13,"author":{"gitId":"guanyz"},"content":"bye"}],"authorContributionMap":{"guanyz":13}}]
