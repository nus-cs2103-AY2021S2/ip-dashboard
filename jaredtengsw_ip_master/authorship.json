[{"path":"src/main/java/duke/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jaredtengsw"},"content":"package duke;"},{"lineNumber":2,"author":{"gitId":"jaredtengsw"},"content":""},{"lineNumber":3,"author":{"gitId":"jaredtengsw"},"content":"import duke.exceptions.*;"},{"lineNumber":4,"author":{"gitId":"jaredtengsw"},"content":"import duke.tasks.Task;"},{"lineNumber":5,"author":{"gitId":"jaredtengsw"},"content":"import duke.tasks.Deadline;"},{"lineNumber":6,"author":{"gitId":"jaredtengsw"},"content":"import duke.tasks.Event;"},{"lineNumber":7,"author":{"gitId":"jaredtengsw"},"content":"import duke.tasks.ToDo;"},{"lineNumber":8,"author":{"gitId":"jaredtengsw"},"content":"import duke.taskList.TaskList;"},{"lineNumber":9,"author":{"gitId":"jaredtengsw"},"content":"import duke.storage.Storage;"},{"lineNumber":10,"author":{"gitId":"jaredtengsw"},"content":"import duke.ui.Ui;"},{"lineNumber":11,"author":{"gitId":"jaredtengsw"},"content":""},{"lineNumber":12,"author":{"gitId":"jaredtengsw"},"content":""},{"lineNumber":13,"author":{"gitId":"-"},"content":"public class Duke {"},{"lineNumber":14,"author":{"gitId":"jaredtengsw"},"content":"    public static final String DIRECTORY \u003d System.getProperty(\"user.dir\");"},{"lineNumber":15,"author":{"gitId":"jaredtengsw"},"content":"    public static TaskList tasks;"},{"lineNumber":16,"author":{"gitId":"jaredtengsw"},"content":"    private Storage storage;"},{"lineNumber":17,"author":{"gitId":"jaredtengsw"},"content":"    private final Ui ui;"},{"lineNumber":18,"author":{"gitId":"jaredtengsw"},"content":""},{"lineNumber":19,"author":{"gitId":"jaredtengsw"},"content":"    /**"},{"lineNumber":20,"author":{"gitId":"jaredtengsw"},"content":"     * Constructor for Duke object"},{"lineNumber":21,"author":{"gitId":"jaredtengsw"},"content":"     */"},{"lineNumber":22,"author":{"gitId":"jaredtengsw"},"content":""},{"lineNumber":23,"author":{"gitId":"jaredtengsw"},"content":"    public Duke() {"},{"lineNumber":24,"author":{"gitId":"jaredtengsw"},"content":"        this.ui \u003d new Ui();"},{"lineNumber":25,"author":{"gitId":"jaredtengsw"},"content":"        this.storage \u003d new Storage(DIRECTORY);"},{"lineNumber":26,"author":{"gitId":"jaredtengsw"},"content":"        this.tasks \u003d new TaskList();"},{"lineNumber":27,"author":{"gitId":"jaredtengsw"},"content":"        storage.loadTasks(tasks);"},{"lineNumber":28,"author":{"gitId":"jaredtengsw"},"content":"    }"},{"lineNumber":29,"author":{"gitId":"jaredtengsw"},"content":""},{"lineNumber":30,"author":{"gitId":"jaredtengsw"},"content":"    public void run() {"},{"lineNumber":31,"author":{"gitId":"jaredtengsw"},"content":"        String input;"},{"lineNumber":32,"author":{"gitId":"jaredtengsw"},"content":"        ui.start();"},{"lineNumber":33,"author":{"gitId":"jaredtengsw"},"content":""},{"lineNumber":34,"author":{"gitId":"jaredtengsw"},"content":"        while (ui.canRead()) {"},{"lineNumber":35,"author":{"gitId":"jaredtengsw"},"content":"            input \u003d ui.readInput();"},{"lineNumber":36,"author":{"gitId":"jaredtengsw"},"content":""},{"lineNumber":37,"author":{"gitId":"jaredtengsw"},"content":"            while (!input.equals(\"bye\")) {"},{"lineNumber":38,"author":{"gitId":"jaredtengsw"},"content":"                try {"},{"lineNumber":39,"author":{"gitId":"jaredtengsw"},"content":"                    String[] inputWords \u003d input.split(\" \");"},{"lineNumber":40,"author":{"gitId":"jaredtengsw"},"content":"                    String action \u003d inputWords[0];"},{"lineNumber":41,"author":{"gitId":"jaredtengsw"},"content":""},{"lineNumber":42,"author":{"gitId":"jaredtengsw"},"content":"                    if (input.equals(\"list\")) {"},{"lineNumber":43,"author":{"gitId":"jaredtengsw"},"content":"                        if (tasks.getSize() \u003d\u003d 0) {"},{"lineNumber":44,"author":{"gitId":"jaredtengsw"},"content":"                            throw new EmptyListException(\"List is empty.\");"},{"lineNumber":45,"author":{"gitId":"jaredtengsw"},"content":"                        }"},{"lineNumber":46,"author":{"gitId":"jaredtengsw"},"content":"                        ui.getList(tasks);"},{"lineNumber":47,"author":{"gitId":"jaredtengsw"},"content":"                        input \u003d ui.readInput();"},{"lineNumber":48,"author":{"gitId":"jaredtengsw"},"content":"                    } else if (action.equals(\"done\")) {"},{"lineNumber":49,"author":{"gitId":"jaredtengsw"},"content":"                        if (inputWords.length \u003c 2) {"},{"lineNumber":50,"author":{"gitId":"jaredtengsw"},"content":"                            throw new MissingArgumentException(\"Wrong number of arguments.\");"},{"lineNumber":51,"author":{"gitId":"jaredtengsw"},"content":"                        } else if (tasks.getSize() \u003d\u003d 0) {"},{"lineNumber":52,"author":{"gitId":"jaredtengsw"},"content":"                            throw new EmptyListException(\"List is empty.\");"},{"lineNumber":53,"author":{"gitId":"jaredtengsw"},"content":"                        } else if (Integer.parseInt(inputWords[1]) \u003e tasks.getSize()) {"},{"lineNumber":54,"author":{"gitId":"jaredtengsw"},"content":"                            throw new NotExistingTaskException(\"No such task number\");"},{"lineNumber":55,"author":{"gitId":"jaredtengsw"},"content":"                        }"},{"lineNumber":56,"author":{"gitId":"jaredtengsw"},"content":"                        int index \u003d Integer.parseInt(inputWords[1]);"},{"lineNumber":57,"author":{"gitId":"jaredtengsw"},"content":""},{"lineNumber":58,"author":{"gitId":"jaredtengsw"},"content":"                        Task completedTask \u003d tasks.getTask(index - 1);"},{"lineNumber":59,"author":{"gitId":"jaredtengsw"},"content":"                        completedTask.markCompleted();"},{"lineNumber":60,"author":{"gitId":"jaredtengsw"},"content":"                        ui.taskDone(completedTask);"},{"lineNumber":61,"author":{"gitId":"jaredtengsw"},"content":""},{"lineNumber":62,"author":{"gitId":"jaredtengsw"},"content":"                        input \u003d ui.readInput();"},{"lineNumber":63,"author":{"gitId":"jaredtengsw"},"content":"                    } else if (action.equals(\"todo\") || action.equals(\"deadline\") || action.equals(\"event\")){"},{"lineNumber":64,"author":{"gitId":"jaredtengsw"},"content":"                        if (inputWords.length \u003c 2) {"},{"lineNumber":65,"author":{"gitId":"jaredtengsw"},"content":"                            throw new MissingArgumentException(\"Wrong number of arguments\");"},{"lineNumber":66,"author":{"gitId":"jaredtengsw"},"content":"                        }"},{"lineNumber":67,"author":{"gitId":"jaredtengsw"},"content":"                        StringBuilder sb \u003d new StringBuilder();"},{"lineNumber":68,"author":{"gitId":"jaredtengsw"},"content":"                        String taskItem;"},{"lineNumber":69,"author":{"gitId":"jaredtengsw"},"content":""},{"lineNumber":70,"author":{"gitId":"jaredtengsw"},"content":"                        if (action.equals(\"todo\")) {"},{"lineNumber":71,"author":{"gitId":"jaredtengsw"},"content":"                            for (int i \u003d 1; i \u003c inputWords.length; i++) {"},{"lineNumber":72,"author":{"gitId":"jaredtengsw"},"content":"                                sb.append(\" \");"},{"lineNumber":73,"author":{"gitId":"jaredtengsw"},"content":"                                sb.append(inputWords[i]);"},{"lineNumber":74,"author":{"gitId":"jaredtengsw"},"content":"                            }"},{"lineNumber":75,"author":{"gitId":"jaredtengsw"},"content":"                            taskItem \u003d sb.toString();"},{"lineNumber":76,"author":{"gitId":"jaredtengsw"},"content":"                            ToDo toDoItem \u003d new ToDo(taskItem);"},{"lineNumber":77,"author":{"gitId":"jaredtengsw"},"content":"                            tasks.addTask(toDoItem);"},{"lineNumber":78,"author":{"gitId":"jaredtengsw"},"content":""},{"lineNumber":79,"author":{"gitId":"jaredtengsw"},"content":"                            ui.addTask(toDoItem);"},{"lineNumber":80,"author":{"gitId":"jaredtengsw"},"content":"                        } else {"},{"lineNumber":81,"author":{"gitId":"jaredtengsw"},"content":"                            int slashIndex \u003d 0;"},{"lineNumber":82,"author":{"gitId":"jaredtengsw"},"content":""},{"lineNumber":83,"author":{"gitId":"jaredtengsw"},"content":"                            for (int i \u003d 0; i \u003c inputWords.length; i++) {"},{"lineNumber":84,"author":{"gitId":"jaredtengsw"},"content":"                                if (inputWords[i].contains(Character.toString(\u0027/\u0027))) {"},{"lineNumber":85,"author":{"gitId":"jaredtengsw"},"content":"                                    slashIndex \u003d i;"},{"lineNumber":86,"author":{"gitId":"jaredtengsw"},"content":"                                }"},{"lineNumber":87,"author":{"gitId":"jaredtengsw"},"content":"                            }"},{"lineNumber":88,"author":{"gitId":"jaredtengsw"},"content":"                            for (int j \u003d 1; j \u003c slashIndex; j++) {"},{"lineNumber":89,"author":{"gitId":"jaredtengsw"},"content":"                                sb.append(\" \");"},{"lineNumber":90,"author":{"gitId":"jaredtengsw"},"content":"                                sb.append(inputWords[j]);"},{"lineNumber":91,"author":{"gitId":"jaredtengsw"},"content":"                            }"},{"lineNumber":92,"author":{"gitId":"jaredtengsw"},"content":"                            taskItem \u003d sb.toString();"},{"lineNumber":93,"author":{"gitId":"jaredtengsw"},"content":"                            StringBuilder sbSlash \u003d new StringBuilder();"},{"lineNumber":94,"author":{"gitId":"jaredtengsw"},"content":""},{"lineNumber":95,"author":{"gitId":"jaredtengsw"},"content":"                            for (int k \u003d slashIndex + 1; k \u003c inputWords.length; k++) {"},{"lineNumber":96,"author":{"gitId":"jaredtengsw"},"content":"                                sbSlash.append(\" \");"},{"lineNumber":97,"author":{"gitId":"jaredtengsw"},"content":"                                sbSlash.append(inputWords[k]);"},{"lineNumber":98,"author":{"gitId":"jaredtengsw"},"content":"                            }"},{"lineNumber":99,"author":{"gitId":"jaredtengsw"},"content":"                            try {"},{"lineNumber":100,"author":{"gitId":"jaredtengsw"},"content":"                                if (action.equals(\"deadline\")) {"},{"lineNumber":101,"author":{"gitId":"jaredtengsw"},"content":"                                    Deadline deadlineItem \u003d new Deadline(taskItem, sbSlash.toString());"},{"lineNumber":102,"author":{"gitId":"jaredtengsw"},"content":"                                    tasks.addTask(deadlineItem);"},{"lineNumber":103,"author":{"gitId":"jaredtengsw"},"content":"                                    ui.addTask(deadlineItem);"},{"lineNumber":104,"author":{"gitId":"jaredtengsw"},"content":"                                } else {"},{"lineNumber":105,"author":{"gitId":"jaredtengsw"},"content":"                                    Event eventItem \u003d new Event(taskItem, sbSlash.toString());"},{"lineNumber":106,"author":{"gitId":"jaredtengsw"},"content":"                                    tasks.addTask(eventItem);"},{"lineNumber":107,"author":{"gitId":"jaredtengsw"},"content":"                                    ui.addTask(eventItem);"},{"lineNumber":108,"author":{"gitId":"jaredtengsw"},"content":"                                }"},{"lineNumber":109,"author":{"gitId":"jaredtengsw"},"content":"                            } catch (Exception e) {"},{"lineNumber":110,"author":{"gitId":"jaredtengsw"},"content":"                                throw new DateTimeFormatException(\"Wrong datetime format given.\");"},{"lineNumber":111,"author":{"gitId":"jaredtengsw"},"content":"                            }"},{"lineNumber":112,"author":{"gitId":"jaredtengsw"},"content":"                        }"},{"lineNumber":113,"author":{"gitId":"jaredtengsw"},"content":"                        ui.getTaskListSize(tasks);"},{"lineNumber":114,"author":{"gitId":"jaredtengsw"},"content":"                        input \u003d ui.readInput();"},{"lineNumber":115,"author":{"gitId":"jaredtengsw"},"content":"                    } else if (action.equals(\"delete\")) {"},{"lineNumber":116,"author":{"gitId":"jaredtengsw"},"content":"                        if (inputWords.length \u003c 2) {"},{"lineNumber":117,"author":{"gitId":"jaredtengsw"},"content":"                            throw new MissingArgumentException(\"Wrong number of arguments\");"},{"lineNumber":118,"author":{"gitId":"jaredtengsw"},"content":"                        } else if (tasks.getSize() \u003d\u003d 0) {"},{"lineNumber":119,"author":{"gitId":"jaredtengsw"},"content":"                            throw new EmptyListException(\"List is empty.\");"},{"lineNumber":120,"author":{"gitId":"jaredtengsw"},"content":"                        } else if (Integer.parseInt(inputWords[1]) \u003e tasks.getSize()) {"},{"lineNumber":121,"author":{"gitId":"jaredtengsw"},"content":"                            throw new NotExistingTaskException(\"No such task number\");"},{"lineNumber":122,"author":{"gitId":"jaredtengsw"},"content":"                        }"},{"lineNumber":123,"author":{"gitId":"jaredtengsw"},"content":"                        int deleteIndex \u003d Integer.parseInt(inputWords[1]);"},{"lineNumber":124,"author":{"gitId":"jaredtengsw"},"content":""},{"lineNumber":125,"author":{"gitId":"jaredtengsw"},"content":"                        ui.deleteTask(tasks.getTask(deleteIndex - 1));"},{"lineNumber":126,"author":{"gitId":"jaredtengsw"},"content":"                        tasks.removeTask(deleteIndex - 1);"},{"lineNumber":127,"author":{"gitId":"jaredtengsw"},"content":"                        ui.getTaskListSize(tasks);"},{"lineNumber":128,"author":{"gitId":"jaredtengsw"},"content":""},{"lineNumber":129,"author":{"gitId":"jaredtengsw"},"content":"                        input \u003d ui.readInput();"},{"lineNumber":130,"author":{"gitId":"jaredtengsw"},"content":"                    } else {"},{"lineNumber":131,"author":{"gitId":"jaredtengsw"},"content":"                        throw new NoKeywordException(\"No such action.\");"},{"lineNumber":132,"author":{"gitId":"jaredtengsw"},"content":"                    }"},{"lineNumber":133,"author":{"gitId":"jaredtengsw"},"content":"                } catch (MissingArgumentException error) {"},{"lineNumber":134,"author":{"gitId":"jaredtengsw"},"content":"                    System.out.println("},{"lineNumber":135,"author":{"gitId":"jaredtengsw"},"content":"                            \"\\nMaster, I\u0027m afraid you\u0027re missing the task number.\");"},{"lineNumber":136,"author":{"gitId":"jaredtengsw"},"content":"                    input \u003d ui.readInput();"},{"lineNumber":137,"author":{"gitId":"jaredtengsw"},"content":"                } catch (NoKeywordException error) {"},{"lineNumber":138,"author":{"gitId":"jaredtengsw"},"content":"                    System.out.println("},{"lineNumber":139,"author":{"gitId":"jaredtengsw"},"content":"                            \"\\nSorry Master but I cannot do that.\");"},{"lineNumber":140,"author":{"gitId":"jaredtengsw"},"content":"                    input \u003d ui.readInput();"},{"lineNumber":141,"author":{"gitId":"jaredtengsw"},"content":"                } catch (DateTimeFormatException error) {"},{"lineNumber":142,"author":{"gitId":"jaredtengsw"},"content":"                    System.out.println("},{"lineNumber":143,"author":{"gitId":"jaredtengsw"},"content":"                            \"\\nMaster, please input the date and time as such: \\\"YYYY-MM-DD HH:MM\\\"\");"},{"lineNumber":144,"author":{"gitId":"jaredtengsw"},"content":"                    input \u003d ui.readInput();"},{"lineNumber":145,"author":{"gitId":"jaredtengsw"},"content":"                } catch (EmptyListException error) {"},{"lineNumber":146,"author":{"gitId":"jaredtengsw"},"content":"                    System.out.println("},{"lineNumber":147,"author":{"gitId":"jaredtengsw"},"content":"                            \"\\nThe list is empty, Master.\");"},{"lineNumber":148,"author":{"gitId":"jaredtengsw"},"content":"                    input \u003d ui.readInput();"},{"lineNumber":149,"author":{"gitId":"jaredtengsw"},"content":"                } catch (NotExistingTaskException error) {"},{"lineNumber":150,"author":{"gitId":"jaredtengsw"},"content":"                    System.out.println("},{"lineNumber":151,"author":{"gitId":"jaredtengsw"},"content":"                            \"\\nI\u0027m afraid the task number is not in the list, Master.\");"},{"lineNumber":152,"author":{"gitId":"jaredtengsw"},"content":"                    input \u003d ui.readInput();"},{"lineNumber":153,"author":{"gitId":"jaredtengsw"},"content":"                }"},{"lineNumber":154,"author":{"gitId":"jaredtengsw"},"content":"            }"},{"lineNumber":155,"author":{"gitId":"jaredtengsw"},"content":"            ui.goodBye();"},{"lineNumber":156,"author":{"gitId":"jaredtengsw"},"content":"            storage.saveTaskList(tasks);"},{"lineNumber":157,"author":{"gitId":"jaredtengsw"},"content":"            break;"},{"lineNumber":158,"author":{"gitId":"jaredtengsw"},"content":"        }"},{"lineNumber":159,"author":{"gitId":"jaredtengsw"},"content":"        System.exit(1);"},{"lineNumber":160,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":161,"author":{"gitId":"-"},"content":"}"}],"authorContributionMap":{"jaredtengsw":158,"-":3}},{"path":"src/main/java/duke/Main.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jaredtengsw"},"content":"package duke;"},{"lineNumber":2,"author":{"gitId":"jaredtengsw"},"content":""},{"lineNumber":3,"author":{"gitId":"jaredtengsw"},"content":"public class Main {"},{"lineNumber":4,"author":{"gitId":"jaredtengsw"},"content":"    private static Duke alfred \u003d new Duke();"},{"lineNumber":5,"author":{"gitId":"jaredtengsw"},"content":""},{"lineNumber":6,"author":{"gitId":"jaredtengsw"},"content":"    public static void main(String[] args) {"},{"lineNumber":7,"author":{"gitId":"jaredtengsw"},"content":"        alfred.run();"},{"lineNumber":8,"author":{"gitId":"jaredtengsw"},"content":"    }"},{"lineNumber":9,"author":{"gitId":"jaredtengsw"},"content":"}"}],"authorContributionMap":{"jaredtengsw":9}},{"path":"src/main/java/duke/exceptions/DateTimeFormatException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jaredtengsw"},"content":"package duke.exceptions;"},{"lineNumber":2,"author":{"gitId":"jaredtengsw"},"content":""},{"lineNumber":3,"author":{"gitId":"jaredtengsw"},"content":"/**"},{"lineNumber":4,"author":{"gitId":"jaredtengsw"},"content":" * Represents the exception from the getDateTime() function"},{"lineNumber":5,"author":{"gitId":"jaredtengsw"},"content":" * in Event or Deadline objects when the wrong format is"},{"lineNumber":6,"author":{"gitId":"jaredtengsw"},"content":" * being inputted."},{"lineNumber":7,"author":{"gitId":"jaredtengsw"},"content":" */"},{"lineNumber":8,"author":{"gitId":"jaredtengsw"},"content":""},{"lineNumber":9,"author":{"gitId":"jaredtengsw"},"content":"public class DateTimeFormatException extends Exception {"},{"lineNumber":10,"author":{"gitId":"jaredtengsw"},"content":"    public DateTimeFormatException(String error) {"},{"lineNumber":11,"author":{"gitId":"jaredtengsw"},"content":"        super(error);"},{"lineNumber":12,"author":{"gitId":"jaredtengsw"},"content":"    }"},{"lineNumber":13,"author":{"gitId":"jaredtengsw"},"content":"}"}],"authorContributionMap":{"jaredtengsw":13}},{"path":"src/main/java/duke/exceptions/EmptyListException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jaredtengsw"},"content":"package duke.exceptions;"},{"lineNumber":2,"author":{"gitId":"jaredtengsw"},"content":""},{"lineNumber":3,"author":{"gitId":"jaredtengsw"},"content":"/**"},{"lineNumber":4,"author":{"gitId":"jaredtengsw"},"content":" * Represents the exception \u0027done\u0027 or \u0027delete\u0027 command"},{"lineNumber":5,"author":{"gitId":"jaredtengsw"},"content":" * is used but the task list is empty."},{"lineNumber":6,"author":{"gitId":"jaredtengsw"},"content":" */"},{"lineNumber":7,"author":{"gitId":"jaredtengsw"},"content":""},{"lineNumber":8,"author":{"gitId":"jaredtengsw"},"content":"public class EmptyListException extends Exception {"},{"lineNumber":9,"author":{"gitId":"jaredtengsw"},"content":"    public EmptyListException(String error) {"},{"lineNumber":10,"author":{"gitId":"jaredtengsw"},"content":"        super(error);"},{"lineNumber":11,"author":{"gitId":"jaredtengsw"},"content":"    }"},{"lineNumber":12,"author":{"gitId":"jaredtengsw"},"content":"}"}],"authorContributionMap":{"jaredtengsw":12}},{"path":"src/main/java/duke/exceptions/MissingArgumentException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jaredtengsw"},"content":"package duke.exceptions;"},{"lineNumber":2,"author":{"gitId":"jaredtengsw"},"content":""},{"lineNumber":3,"author":{"gitId":"jaredtengsw"},"content":"/**"},{"lineNumber":4,"author":{"gitId":"jaredtengsw"},"content":" * Represents the exception when using the \u0027done\u0027 command"},{"lineNumber":5,"author":{"gitId":"jaredtengsw"},"content":" * without inputting the task number."},{"lineNumber":6,"author":{"gitId":"jaredtengsw"},"content":" */"},{"lineNumber":7,"author":{"gitId":"jaredtengsw"},"content":""},{"lineNumber":8,"author":{"gitId":"jaredtengsw"},"content":"public class MissingArgumentException extends Exception{"},{"lineNumber":9,"author":{"gitId":"jaredtengsw"},"content":"    public MissingArgumentException(String error) {"},{"lineNumber":10,"author":{"gitId":"jaredtengsw"},"content":"        super(error);"},{"lineNumber":11,"author":{"gitId":"jaredtengsw"},"content":"    }"},{"lineNumber":12,"author":{"gitId":"jaredtengsw"},"content":"}"}],"authorContributionMap":{"jaredtengsw":12}},{"path":"src/main/java/duke/exceptions/NoKeywordException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jaredtengsw"},"content":"package duke.exceptions;"},{"lineNumber":2,"author":{"gitId":"jaredtengsw"},"content":""},{"lineNumber":3,"author":{"gitId":"jaredtengsw"},"content":"/**"},{"lineNumber":4,"author":{"gitId":"jaredtengsw"},"content":" * Represents the exception from inputting a command"},{"lineNumber":5,"author":{"gitId":"jaredtengsw"},"content":" * that is non-existing or not recognised by Alfred."},{"lineNumber":6,"author":{"gitId":"jaredtengsw"},"content":" */"},{"lineNumber":7,"author":{"gitId":"jaredtengsw"},"content":""},{"lineNumber":8,"author":{"gitId":"jaredtengsw"},"content":"public class NoKeywordException extends Exception{"},{"lineNumber":9,"author":{"gitId":"jaredtengsw"},"content":"    public NoKeywordException(String error) {"},{"lineNumber":10,"author":{"gitId":"jaredtengsw"},"content":"        super(error);"},{"lineNumber":11,"author":{"gitId":"jaredtengsw"},"content":"    }"},{"lineNumber":12,"author":{"gitId":"jaredtengsw"},"content":"}"}],"authorContributionMap":{"jaredtengsw":12}},{"path":"src/main/java/duke/exceptions/NotExistingTaskException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jaredtengsw"},"content":"package duke.exceptions;"},{"lineNumber":2,"author":{"gitId":"jaredtengsw"},"content":""},{"lineNumber":3,"author":{"gitId":"jaredtengsw"},"content":"/**"},{"lineNumber":4,"author":{"gitId":"jaredtengsw"},"content":" * Represents the exception when the \u0027done\u0027 or \u0027delete\u0027 command"},{"lineNumber":5,"author":{"gitId":"jaredtengsw"},"content":" * is used but the task number given is invalid."},{"lineNumber":6,"author":{"gitId":"jaredtengsw"},"content":" */"},{"lineNumber":7,"author":{"gitId":"jaredtengsw"},"content":""},{"lineNumber":8,"author":{"gitId":"jaredtengsw"},"content":"public class NotExistingTaskException extends Exception {"},{"lineNumber":9,"author":{"gitId":"jaredtengsw"},"content":"    public NotExistingTaskException(String error) {"},{"lineNumber":10,"author":{"gitId":"jaredtengsw"},"content":"        super(error);"},{"lineNumber":11,"author":{"gitId":"jaredtengsw"},"content":"    }"},{"lineNumber":12,"author":{"gitId":"jaredtengsw"},"content":"}"}],"authorContributionMap":{"jaredtengsw":12}},{"path":"src/main/java/duke/storage/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jaredtengsw"},"content":"package duke.storage;"},{"lineNumber":2,"author":{"gitId":"jaredtengsw"},"content":""},{"lineNumber":3,"author":{"gitId":"jaredtengsw"},"content":"import duke.tasks.*;"},{"lineNumber":4,"author":{"gitId":"jaredtengsw"},"content":"import duke.taskList.TaskList;"},{"lineNumber":5,"author":{"gitId":"jaredtengsw"},"content":""},{"lineNumber":6,"author":{"gitId":"jaredtengsw"},"content":"import java.io.File;"},{"lineNumber":7,"author":{"gitId":"jaredtengsw"},"content":"import java.io.IOException;"},{"lineNumber":8,"author":{"gitId":"jaredtengsw"},"content":"import java.io.FileWriter;"},{"lineNumber":9,"author":{"gitId":"jaredtengsw"},"content":"import java.io.BufferedReader;"},{"lineNumber":10,"author":{"gitId":"jaredtengsw"},"content":"import java.io.BufferedWriter;"},{"lineNumber":11,"author":{"gitId":"jaredtengsw"},"content":""},{"lineNumber":12,"author":{"gitId":"jaredtengsw"},"content":"import java.nio.file.Files;"},{"lineNumber":13,"author":{"gitId":"jaredtengsw"},"content":"import java.nio.file.Path;"},{"lineNumber":14,"author":{"gitId":"jaredtengsw"},"content":"import java.nio.file.Paths;"},{"lineNumber":15,"author":{"gitId":"jaredtengsw"},"content":""},{"lineNumber":16,"author":{"gitId":"jaredtengsw"},"content":""},{"lineNumber":17,"author":{"gitId":"jaredtengsw"},"content":"/**"},{"lineNumber":18,"author":{"gitId":"jaredtengsw"},"content":" * A Storage class that creates a storage object which"},{"lineNumber":19,"author":{"gitId":"jaredtengsw"},"content":" * Saves the Arraylist of Tasks into a .txt file."},{"lineNumber":20,"author":{"gitId":"jaredtengsw"},"content":" * Loads the Arraylist of Tasks from a .txt file into a ArrayList Object"},{"lineNumber":21,"author":{"gitId":"jaredtengsw"},"content":" */"},{"lineNumber":22,"author":{"gitId":"jaredtengsw"},"content":""},{"lineNumber":23,"author":{"gitId":"jaredtengsw"},"content":"public class Storage {"},{"lineNumber":24,"author":{"gitId":"jaredtengsw"},"content":"    public static String DIRECTORY;"},{"lineNumber":25,"author":{"gitId":"jaredtengsw"},"content":""},{"lineNumber":26,"author":{"gitId":"jaredtengsw"},"content":"    /**"},{"lineNumber":27,"author":{"gitId":"jaredtengsw"},"content":"     * Creates a storage object"},{"lineNumber":28,"author":{"gitId":"jaredtengsw"},"content":"     *"},{"lineNumber":29,"author":{"gitId":"jaredtengsw"},"content":"     * @param directory, the path of storage file"},{"lineNumber":30,"author":{"gitId":"jaredtengsw"},"content":"     */"},{"lineNumber":31,"author":{"gitId":"jaredtengsw"},"content":""},{"lineNumber":32,"author":{"gitId":"jaredtengsw"},"content":"    public Storage(String directory) {"},{"lineNumber":33,"author":{"gitId":"jaredtengsw"},"content":"        this.DIRECTORY \u003d directory;"},{"lineNumber":34,"author":{"gitId":"jaredtengsw"},"content":"    }"},{"lineNumber":35,"author":{"gitId":"jaredtengsw"},"content":""},{"lineNumber":36,"author":{"gitId":"jaredtengsw"},"content":""},{"lineNumber":37,"author":{"gitId":"jaredtengsw"},"content":"    /** Saves the list of Tasks in the ArrayList object"},{"lineNumber":38,"author":{"gitId":"jaredtengsw"},"content":"     * into a .txt file."},{"lineNumber":39,"author":{"gitId":"jaredtengsw"},"content":"     * @param taskList"},{"lineNumber":40,"author":{"gitId":"jaredtengsw"},"content":"     */"},{"lineNumber":41,"author":{"gitId":"jaredtengsw"},"content":""},{"lineNumber":42,"author":{"gitId":"jaredtengsw"},"content":"    public void saveTaskList(TaskList taskList) {"},{"lineNumber":43,"author":{"gitId":"jaredtengsw"},"content":"        Path path \u003d Paths.get(this.DIRECTORY, \"Data\");"},{"lineNumber":44,"author":{"gitId":"jaredtengsw"},"content":"        try {"},{"lineNumber":45,"author":{"gitId":"jaredtengsw"},"content":"            /* Check if file path exists."},{"lineNumber":46,"author":{"gitId":"jaredtengsw"},"content":"             * If it doesn\u0027t, create a new directory."},{"lineNumber":47,"author":{"gitId":"jaredtengsw"},"content":"             */"},{"lineNumber":48,"author":{"gitId":"jaredtengsw"},"content":"            if (!Files.exists(path)) {"},{"lineNumber":49,"author":{"gitId":"jaredtengsw"},"content":"                Files.createDirectories(path);"},{"lineNumber":50,"author":{"gitId":"jaredtengsw"},"content":"            }"},{"lineNumber":51,"author":{"gitId":"jaredtengsw"},"content":""},{"lineNumber":52,"author":{"gitId":"jaredtengsw"},"content":"            Path filePath \u003d Paths.get(this.DIRECTORY, \"Data\", \"taskList.txt\");"},{"lineNumber":53,"author":{"gitId":"jaredtengsw"},"content":"            File taskFile \u003d filePath.toFile();"},{"lineNumber":54,"author":{"gitId":"jaredtengsw"},"content":""},{"lineNumber":55,"author":{"gitId":"jaredtengsw"},"content":"            /* Check if the file exists."},{"lineNumber":56,"author":{"gitId":"jaredtengsw"},"content":"             * If it doesn\u0027t, create a new file"},{"lineNumber":57,"author":{"gitId":"jaredtengsw"},"content":"             */"},{"lineNumber":58,"author":{"gitId":"jaredtengsw"},"content":""},{"lineNumber":59,"author":{"gitId":"jaredtengsw"},"content":"            if (!taskFile.exists()) {"},{"lineNumber":60,"author":{"gitId":"jaredtengsw"},"content":"                taskFile.createNewFile();"},{"lineNumber":61,"author":{"gitId":"jaredtengsw"},"content":"            }"},{"lineNumber":62,"author":{"gitId":"jaredtengsw"},"content":""},{"lineNumber":63,"author":{"gitId":"jaredtengsw"},"content":"            FileWriter fileWriter \u003d new FileWriter(taskFile);"},{"lineNumber":64,"author":{"gitId":"jaredtengsw"},"content":"            BufferedWriter bufferedWriter \u003d new BufferedWriter(fileWriter);"},{"lineNumber":65,"author":{"gitId":"jaredtengsw"},"content":""},{"lineNumber":66,"author":{"gitId":"jaredtengsw"},"content":"            Task task;"},{"lineNumber":67,"author":{"gitId":"jaredtengsw"},"content":"            for (int i \u003d 0; i \u003c taskList.getSize(); i++) {"},{"lineNumber":68,"author":{"gitId":"jaredtengsw"},"content":"                task \u003d taskList.getTask(i);"},{"lineNumber":69,"author":{"gitId":"jaredtengsw"},"content":"                bufferedWriter.write(task.toSave());"},{"lineNumber":70,"author":{"gitId":"jaredtengsw"},"content":"                bufferedWriter.write(\"~\");"},{"lineNumber":71,"author":{"gitId":"jaredtengsw"},"content":"                if(task.getDoneStatus()) {"},{"lineNumber":72,"author":{"gitId":"jaredtengsw"},"content":"                    bufferedWriter.write(\"1\");"},{"lineNumber":73,"author":{"gitId":"jaredtengsw"},"content":"                } else {"},{"lineNumber":74,"author":{"gitId":"jaredtengsw"},"content":"                    bufferedWriter.write(\"0\");"},{"lineNumber":75,"author":{"gitId":"jaredtengsw"},"content":"                }"},{"lineNumber":76,"author":{"gitId":"jaredtengsw"},"content":"                bufferedWriter.write(\"++\");"},{"lineNumber":77,"author":{"gitId":"jaredtengsw"},"content":"            }"},{"lineNumber":78,"author":{"gitId":"jaredtengsw"},"content":"            bufferedWriter.close();"},{"lineNumber":79,"author":{"gitId":"jaredtengsw"},"content":"        } catch (IOException error) {"},{"lineNumber":80,"author":{"gitId":"jaredtengsw"},"content":"            System.out.println(error.getMessage());"},{"lineNumber":81,"author":{"gitId":"jaredtengsw"},"content":"        }"},{"lineNumber":82,"author":{"gitId":"jaredtengsw"},"content":"    }"},{"lineNumber":83,"author":{"gitId":"jaredtengsw"},"content":""},{"lineNumber":84,"author":{"gitId":"jaredtengsw"},"content":""},{"lineNumber":85,"author":{"gitId":"jaredtengsw"},"content":"    /**"},{"lineNumber":86,"author":{"gitId":"jaredtengsw"},"content":"     * Loads the list of Tasks in the .txt file into the TaskList object"},{"lineNumber":87,"author":{"gitId":"jaredtengsw"},"content":"     *"},{"lineNumber":88,"author":{"gitId":"jaredtengsw"},"content":"     * @param taskList"},{"lineNumber":89,"author":{"gitId":"jaredtengsw"},"content":"     */"},{"lineNumber":90,"author":{"gitId":"jaredtengsw"},"content":""},{"lineNumber":91,"author":{"gitId":"jaredtengsw"},"content":"    public void loadTasks(TaskList taskList) {"},{"lineNumber":92,"author":{"gitId":"jaredtengsw"},"content":"        Path filePath \u003d Paths.get(this.DIRECTORY, \"Data\", \"taskList.txt\");"},{"lineNumber":93,"author":{"gitId":"jaredtengsw"},"content":""},{"lineNumber":94,"author":{"gitId":"jaredtengsw"},"content":"        if (filePath.toFile().exists()) {"},{"lineNumber":95,"author":{"gitId":"jaredtengsw"},"content":"            try {"},{"lineNumber":96,"author":{"gitId":"jaredtengsw"},"content":"                BufferedReader bufferedReader \u003d Files.newBufferedReader(filePath);"},{"lineNumber":97,"author":{"gitId":"jaredtengsw"},"content":"                String data \u003d bufferedReader.readLine();"},{"lineNumber":98,"author":{"gitId":"jaredtengsw"},"content":""},{"lineNumber":99,"author":{"gitId":"jaredtengsw"},"content":"                if (data !\u003d null) {"},{"lineNumber":100,"author":{"gitId":"jaredtengsw"},"content":"                    String[] tasks \u003d data.split(\"\\\\+\\\\+\");"},{"lineNumber":101,"author":{"gitId":"jaredtengsw"},"content":""},{"lineNumber":102,"author":{"gitId":"jaredtengsw"},"content":"                    for (int i \u003d 0; i \u003c tasks.length; i++) {"},{"lineNumber":103,"author":{"gitId":"jaredtengsw"},"content":"                        String[] doneList \u003d tasks[i].split(\"~\", 2);"},{"lineNumber":104,"author":{"gitId":"jaredtengsw"},"content":"                        String[] nameList \u003d doneList[0].split(\" \", 2);"},{"lineNumber":105,"author":{"gitId":"jaredtengsw"},"content":""},{"lineNumber":106,"author":{"gitId":"jaredtengsw"},"content":"                        if (nameList[0].equals(\"deadline\")) {"},{"lineNumber":107,"author":{"gitId":"jaredtengsw"},"content":"                            String[] deadlineItem \u003d nameList[1].split(\"/by\", 2);"},{"lineNumber":108,"author":{"gitId":"jaredtengsw"},"content":"                            Task taskItem \u003d new Deadline(deadlineItem[0],"},{"lineNumber":109,"author":{"gitId":"jaredtengsw"},"content":"                                    deadlineItem[1],"},{"lineNumber":110,"author":{"gitId":"jaredtengsw"},"content":"                                    checkDone(deadlineItem[1]));"},{"lineNumber":111,"author":{"gitId":"jaredtengsw"},"content":"                            taskList.addTask(taskItem);"},{"lineNumber":112,"author":{"gitId":"jaredtengsw"},"content":"                        } else if (nameList[0].equals(\"event\")) {"},{"lineNumber":113,"author":{"gitId":"jaredtengsw"},"content":"                            String[] eventItem \u003d nameList[1].split(\"/at\", 2);"},{"lineNumber":114,"author":{"gitId":"jaredtengsw"},"content":"                            Task taskItem \u003d new Event(eventItem[0],"},{"lineNumber":115,"author":{"gitId":"jaredtengsw"},"content":"                                    eventItem[1],"},{"lineNumber":116,"author":{"gitId":"jaredtengsw"},"content":"                                    checkDone(eventItem[1]));"},{"lineNumber":117,"author":{"gitId":"jaredtengsw"},"content":"                            taskList.addTask(taskItem);"},{"lineNumber":118,"author":{"gitId":"jaredtengsw"},"content":"                        } else if (nameList[0].equals(\"todo\")) {"},{"lineNumber":119,"author":{"gitId":"jaredtengsw"},"content":"                            Task taskItem \u003d new ToDo(nameList[1], checkDone(doneList[1]));"},{"lineNumber":120,"author":{"gitId":"jaredtengsw"},"content":"                            taskList.addTask(taskItem);"},{"lineNumber":121,"author":{"gitId":"jaredtengsw"},"content":"                        }"},{"lineNumber":122,"author":{"gitId":"jaredtengsw"},"content":"                    }"},{"lineNumber":123,"author":{"gitId":"jaredtengsw"},"content":"                }"},{"lineNumber":124,"author":{"gitId":"jaredtengsw"},"content":"            } catch (IOException error) {"},{"lineNumber":125,"author":{"gitId":"jaredtengsw"},"content":"                System.out.println(error.getMessage());"},{"lineNumber":126,"author":{"gitId":"jaredtengsw"},"content":"            }"},{"lineNumber":127,"author":{"gitId":"jaredtengsw"},"content":"        } else {"},{"lineNumber":128,"author":{"gitId":"jaredtengsw"},"content":"            File createFile \u003d new File(\"/DAta/duke.txt\");"},{"lineNumber":129,"author":{"gitId":"jaredtengsw"},"content":"        }"},{"lineNumber":130,"author":{"gitId":"jaredtengsw"},"content":"    }"},{"lineNumber":131,"author":{"gitId":"jaredtengsw"},"content":""},{"lineNumber":132,"author":{"gitId":"jaredtengsw"},"content":"    private static boolean checkDone (String item) {"},{"lineNumber":133,"author":{"gitId":"jaredtengsw"},"content":"        return item.equals(\"1\");"},{"lineNumber":134,"author":{"gitId":"jaredtengsw"},"content":"    }"},{"lineNumber":135,"author":{"gitId":"jaredtengsw"},"content":"}"}],"authorContributionMap":{"jaredtengsw":135}},{"path":"src/main/java/duke/taskList/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jaredtengsw"},"content":"package duke.taskList;"},{"lineNumber":2,"author":{"gitId":"jaredtengsw"},"content":""},{"lineNumber":3,"author":{"gitId":"jaredtengsw"},"content":"import duke.tasks.Task;"},{"lineNumber":4,"author":{"gitId":"jaredtengsw"},"content":""},{"lineNumber":5,"author":{"gitId":"jaredtengsw"},"content":"import java.util.ArrayList;"},{"lineNumber":6,"author":{"gitId":"jaredtengsw"},"content":""},{"lineNumber":7,"author":{"gitId":"jaredtengsw"},"content":"/**"},{"lineNumber":8,"author":{"gitId":"jaredtengsw"},"content":" * A taskList class which stores Task objects in an ArrayList object."},{"lineNumber":9,"author":{"gitId":"jaredtengsw"},"content":" */"},{"lineNumber":10,"author":{"gitId":"jaredtengsw"},"content":""},{"lineNumber":11,"author":{"gitId":"jaredtengsw"},"content":"public class TaskList {"},{"lineNumber":12,"author":{"gitId":"jaredtengsw"},"content":"    private ArrayList\u003cTask\u003e taskList;"},{"lineNumber":13,"author":{"gitId":"jaredtengsw"},"content":""},{"lineNumber":14,"author":{"gitId":"jaredtengsw"},"content":"    public TaskList() {"},{"lineNumber":15,"author":{"gitId":"jaredtengsw"},"content":"        this.taskList \u003d new ArrayList\u003cTask\u003e();"},{"lineNumber":16,"author":{"gitId":"jaredtengsw"},"content":"    }"},{"lineNumber":17,"author":{"gitId":"jaredtengsw"},"content":""},{"lineNumber":18,"author":{"gitId":"jaredtengsw"},"content":"    /**"},{"lineNumber":19,"author":{"gitId":"jaredtengsw"},"content":"     * Adds a Task object into the taskList"},{"lineNumber":20,"author":{"gitId":"jaredtengsw"},"content":"     *"},{"lineNumber":21,"author":{"gitId":"jaredtengsw"},"content":"     * @param task"},{"lineNumber":22,"author":{"gitId":"jaredtengsw"},"content":"     */"},{"lineNumber":23,"author":{"gitId":"jaredtengsw"},"content":""},{"lineNumber":24,"author":{"gitId":"jaredtengsw"},"content":"    public void addTask(Task task) {"},{"lineNumber":25,"author":{"gitId":"jaredtengsw"},"content":"        taskList.add(task);"},{"lineNumber":26,"author":{"gitId":"jaredtengsw"},"content":"    }"},{"lineNumber":27,"author":{"gitId":"jaredtengsw"},"content":""},{"lineNumber":28,"author":{"gitId":"jaredtengsw"},"content":"    /**"},{"lineNumber":29,"author":{"gitId":"jaredtengsw"},"content":"     * Removes a Task object from the taskList based on"},{"lineNumber":30,"author":{"gitId":"jaredtengsw"},"content":"     * the Task object itself."},{"lineNumber":31,"author":{"gitId":"jaredtengsw"},"content":"     *"},{"lineNumber":32,"author":{"gitId":"jaredtengsw"},"content":"     * @param task, the Task Object to be removed"},{"lineNumber":33,"author":{"gitId":"jaredtengsw"},"content":"     */"},{"lineNumber":34,"author":{"gitId":"jaredtengsw"},"content":""},{"lineNumber":35,"author":{"gitId":"jaredtengsw"},"content":"    public void removeTask(Task task) {"},{"lineNumber":36,"author":{"gitId":"jaredtengsw"},"content":"        taskList.remove(task);"},{"lineNumber":37,"author":{"gitId":"jaredtengsw"},"content":"    }"},{"lineNumber":38,"author":{"gitId":"jaredtengsw"},"content":""},{"lineNumber":39,"author":{"gitId":"jaredtengsw"},"content":"    /**"},{"lineNumber":40,"author":{"gitId":"jaredtengsw"},"content":"     * Removes a Task object from the taskList based on"},{"lineNumber":41,"author":{"gitId":"jaredtengsw"},"content":"     * index position of the task."},{"lineNumber":42,"author":{"gitId":"jaredtengsw"},"content":"     *"},{"lineNumber":43,"author":{"gitId":"jaredtengsw"},"content":"     * @param i, the index position of the task Object"},{"lineNumber":44,"author":{"gitId":"jaredtengsw"},"content":"     */"},{"lineNumber":45,"author":{"gitId":"jaredtengsw"},"content":""},{"lineNumber":46,"author":{"gitId":"jaredtengsw"},"content":"    public void removeTask(int i) {"},{"lineNumber":47,"author":{"gitId":"jaredtengsw"},"content":"        taskList.remove(i);"},{"lineNumber":48,"author":{"gitId":"jaredtengsw"},"content":"    }"},{"lineNumber":49,"author":{"gitId":"jaredtengsw"},"content":""},{"lineNumber":50,"author":{"gitId":"jaredtengsw"},"content":"    /**"},{"lineNumber":51,"author":{"gitId":"jaredtengsw"},"content":"     * Returns the number of tasks in the taskList"},{"lineNumber":52,"author":{"gitId":"jaredtengsw"},"content":"     *"},{"lineNumber":53,"author":{"gitId":"jaredtengsw"},"content":"     * @return int, size of the taskList"},{"lineNumber":54,"author":{"gitId":"jaredtengsw"},"content":"     */"},{"lineNumber":55,"author":{"gitId":"jaredtengsw"},"content":""},{"lineNumber":56,"author":{"gitId":"jaredtengsw"},"content":"    public int getSize() {"},{"lineNumber":57,"author":{"gitId":"jaredtengsw"},"content":"        return taskList.size();"},{"lineNumber":58,"author":{"gitId":"jaredtengsw"},"content":"    }"},{"lineNumber":59,"author":{"gitId":"jaredtengsw"},"content":""},{"lineNumber":60,"author":{"gitId":"jaredtengsw"},"content":"    /**"},{"lineNumber":61,"author":{"gitId":"jaredtengsw"},"content":"     * Returns the Task object at the specified index"},{"lineNumber":62,"author":{"gitId":"jaredtengsw"},"content":"     *"},{"lineNumber":63,"author":{"gitId":"jaredtengsw"},"content":"     * @param i, index of the task"},{"lineNumber":64,"author":{"gitId":"jaredtengsw"},"content":"     * @return Task, at the given index"},{"lineNumber":65,"author":{"gitId":"jaredtengsw"},"content":"     */"},{"lineNumber":66,"author":{"gitId":"jaredtengsw"},"content":""},{"lineNumber":67,"author":{"gitId":"jaredtengsw"},"content":"    public Task getTask(int i) {"},{"lineNumber":68,"author":{"gitId":"jaredtengsw"},"content":"        return taskList.get(i);"},{"lineNumber":69,"author":{"gitId":"jaredtengsw"},"content":"    }"},{"lineNumber":70,"author":{"gitId":"jaredtengsw"},"content":"}"}],"authorContributionMap":{"jaredtengsw":70}},{"path":"src/main/java/duke/tasks/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jaredtengsw"},"content":"package duke.tasks;"},{"lineNumber":2,"author":{"gitId":"jaredtengsw"},"content":""},{"lineNumber":3,"author":{"gitId":"jaredtengsw"},"content":"import java.time.LocalTime;"},{"lineNumber":4,"author":{"gitId":"jaredtengsw"},"content":"import java.time.LocalDate;"},{"lineNumber":5,"author":{"gitId":"jaredtengsw"},"content":"import java.time.format.DateTimeFormatter;"},{"lineNumber":6,"author":{"gitId":"jaredtengsw"},"content":""},{"lineNumber":7,"author":{"gitId":"jaredtengsw"},"content":"public class Deadline extends Task {"},{"lineNumber":8,"author":{"gitId":"jaredtengsw"},"content":"    protected String afterBy;"},{"lineNumber":9,"author":{"gitId":"jaredtengsw"},"content":"    public Deadline (String info, String afterBy) {"},{"lineNumber":10,"author":{"gitId":"jaredtengsw"},"content":"        super(info, taskType.Deadline);"},{"lineNumber":11,"author":{"gitId":"jaredtengsw"},"content":"        this.afterBy \u003d afterBy.trim();"},{"lineNumber":12,"author":{"gitId":"jaredtengsw"},"content":"    }"},{"lineNumber":13,"author":{"gitId":"jaredtengsw"},"content":""},{"lineNumber":14,"author":{"gitId":"jaredtengsw"},"content":"    public Deadline(String info, String afterBy, boolean isDone) {"},{"lineNumber":15,"author":{"gitId":"jaredtengsw"},"content":"        super(info, taskType.Deadline, isDone);"},{"lineNumber":16,"author":{"gitId":"jaredtengsw"},"content":"        this.afterBy \u003d afterBy.trim();"},{"lineNumber":17,"author":{"gitId":"jaredtengsw"},"content":"    }"},{"lineNumber":18,"author":{"gitId":"jaredtengsw"},"content":""},{"lineNumber":19,"author":{"gitId":"jaredtengsw"},"content":"    /**"},{"lineNumber":20,"author":{"gitId":"jaredtengsw"},"content":"     * Returns the due date and time (if available) of the Deadline object."},{"lineNumber":21,"author":{"gitId":"jaredtengsw"},"content":"     * @return date and time (if available)"},{"lineNumber":22,"author":{"gitId":"jaredtengsw"},"content":"     */"},{"lineNumber":23,"author":{"gitId":"jaredtengsw"},"content":""},{"lineNumber":24,"author":{"gitId":"jaredtengsw"},"content":"    public String getDateTime() {"},{"lineNumber":25,"author":{"gitId":"jaredtengsw"},"content":"        //Example of date based on format: 10 Aug 2021"},{"lineNumber":26,"author":{"gitId":"jaredtengsw"},"content":"        DateTimeFormatter dateFormat \u003d DateTimeFormatter.ofPattern(\"dd MMM yyyy\");"},{"lineNumber":27,"author":{"gitId":"jaredtengsw"},"content":"        String[] dateList \u003d this.afterBy.split(\" \", 2);"},{"lineNumber":28,"author":{"gitId":"jaredtengsw"},"content":"        LocalDate deadlineDate \u003d LocalDate.parse(dateList[0]);"},{"lineNumber":29,"author":{"gitId":"jaredtengsw"},"content":""},{"lineNumber":30,"author":{"gitId":"jaredtengsw"},"content":"        if (dateList.length \u003e\u003d 2) {"},{"lineNumber":31,"author":{"gitId":"jaredtengsw"},"content":"            DateTimeFormatter timeFormat \u003d DateTimeFormatter.ofPattern(\"hh:mm a\");"},{"lineNumber":32,"author":{"gitId":"jaredtengsw"},"content":"            LocalTime time \u003d LocalTime.parse(dateList[1]);"},{"lineNumber":33,"author":{"gitId":"jaredtengsw"},"content":""},{"lineNumber":34,"author":{"gitId":"jaredtengsw"},"content":"            return deadlineDate.format(dateFormat) + \" \" + time.format(timeFormat);"},{"lineNumber":35,"author":{"gitId":"jaredtengsw"},"content":"        } else {"},{"lineNumber":36,"author":{"gitId":"jaredtengsw"},"content":"            return deadlineDate.toString();"},{"lineNumber":37,"author":{"gitId":"jaredtengsw"},"content":"        }"},{"lineNumber":38,"author":{"gitId":"jaredtengsw"},"content":"    }"},{"lineNumber":39,"author":{"gitId":"jaredtengsw"},"content":""},{"lineNumber":40,"author":{"gitId":"jaredtengsw"},"content":"    @Override"},{"lineNumber":41,"author":{"gitId":"jaredtengsw"},"content":"    public String toString() {"},{"lineNumber":42,"author":{"gitId":"jaredtengsw"},"content":"        return \"[D]\" + super.toString() + \" (by: \" + getDateTime() + \")\";"},{"lineNumber":43,"author":{"gitId":"jaredtengsw"},"content":"    }"},{"lineNumber":44,"author":{"gitId":"jaredtengsw"},"content":"}"},{"lineNumber":45,"author":{"gitId":"jaredtengsw"},"content":""}],"authorContributionMap":{"jaredtengsw":45}},{"path":"src/main/java/duke/tasks/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jaredtengsw"},"content":"package duke.tasks;"},{"lineNumber":2,"author":{"gitId":"jaredtengsw"},"content":""},{"lineNumber":3,"author":{"gitId":"jaredtengsw"},"content":"import java.time.LocalDate;"},{"lineNumber":4,"author":{"gitId":"jaredtengsw"},"content":"import java.time.LocalTime;"},{"lineNumber":5,"author":{"gitId":"jaredtengsw"},"content":"import java.time.format.DateTimeFormatter;"},{"lineNumber":6,"author":{"gitId":"jaredtengsw"},"content":""},{"lineNumber":7,"author":{"gitId":"jaredtengsw"},"content":"public class Event extends Task{"},{"lineNumber":8,"author":{"gitId":"jaredtengsw"},"content":"    protected String location;"},{"lineNumber":9,"author":{"gitId":"jaredtengsw"},"content":"    protected String dateTime;"},{"lineNumber":10,"author":{"gitId":"jaredtengsw"},"content":""},{"lineNumber":11,"author":{"gitId":"jaredtengsw"},"content":"    public Event (String info, String afterAt) {"},{"lineNumber":12,"author":{"gitId":"jaredtengsw"},"content":"        super(info, taskType.Event);"},{"lineNumber":13,"author":{"gitId":"jaredtengsw"},"content":"        String[] afterAtList \u003d afterAt.trim().split(\" \", 2);"},{"lineNumber":14,"author":{"gitId":"jaredtengsw"},"content":"        this.location \u003d afterAtList[0];"},{"lineNumber":15,"author":{"gitId":"jaredtengsw"},"content":"        this.dateTime \u003d afterAtList[1];"},{"lineNumber":16,"author":{"gitId":"jaredtengsw"},"content":""},{"lineNumber":17,"author":{"gitId":"jaredtengsw"},"content":"    }"},{"lineNumber":18,"author":{"gitId":"jaredtengsw"},"content":""},{"lineNumber":19,"author":{"gitId":"jaredtengsw"},"content":"    public Event(String info, String afterAt, boolean isDone) {"},{"lineNumber":20,"author":{"gitId":"jaredtengsw"},"content":"        super(info, taskType.Event, isDone);"},{"lineNumber":21,"author":{"gitId":"jaredtengsw"},"content":"        String[] afterAtList \u003d afterAt.split(\" \", 2);"},{"lineNumber":22,"author":{"gitId":"jaredtengsw"},"content":"        this.location \u003d afterAtList[0];"},{"lineNumber":23,"author":{"gitId":"jaredtengsw"},"content":"        this.dateTime \u003d afterAtList[1];"},{"lineNumber":24,"author":{"gitId":"jaredtengsw"},"content":"    }"},{"lineNumber":25,"author":{"gitId":"jaredtengsw"},"content":""},{"lineNumber":26,"author":{"gitId":"jaredtengsw"},"content":"    public String getDateTime() {"},{"lineNumber":27,"author":{"gitId":"jaredtengsw"},"content":"        //Example of date based on format: 10 Aug 2021"},{"lineNumber":28,"author":{"gitId":"jaredtengsw"},"content":"        DateTimeFormatter dateFormat \u003d DateTimeFormatter.ofPattern(\"dd MMM yyyy\");"},{"lineNumber":29,"author":{"gitId":"jaredtengsw"},"content":"        String[] dateList \u003d this.dateTime.split(\" \", 2);"},{"lineNumber":30,"author":{"gitId":"jaredtengsw"},"content":"        LocalDate eventDate \u003d LocalDate.parse(dateList[0]);"},{"lineNumber":31,"author":{"gitId":"jaredtengsw"},"content":""},{"lineNumber":32,"author":{"gitId":"jaredtengsw"},"content":"        if (dateList.length \u003d\u003d 2) {"},{"lineNumber":33,"author":{"gitId":"jaredtengsw"},"content":"            DateTimeFormatter timeFormat \u003d DateTimeFormatter.ofPattern(\"hh:mm a\");"},{"lineNumber":34,"author":{"gitId":"jaredtengsw"},"content":"            LocalTime eventTime \u003d LocalTime.parse(dateList[1]);"},{"lineNumber":35,"author":{"gitId":"jaredtengsw"},"content":""},{"lineNumber":36,"author":{"gitId":"jaredtengsw"},"content":"            return eventDate.format(dateFormat) + \" \" + eventTime.format(timeFormat);"},{"lineNumber":37,"author":{"gitId":"jaredtengsw"},"content":"        } else {"},{"lineNumber":38,"author":{"gitId":"jaredtengsw"},"content":"            return eventDate.toString();"},{"lineNumber":39,"author":{"gitId":"jaredtengsw"},"content":"        }"},{"lineNumber":40,"author":{"gitId":"jaredtengsw"},"content":"    }"},{"lineNumber":41,"author":{"gitId":"jaredtengsw"},"content":""},{"lineNumber":42,"author":{"gitId":"jaredtengsw"},"content":"    public String getLocation() {"},{"lineNumber":43,"author":{"gitId":"jaredtengsw"},"content":"        return this.location;"},{"lineNumber":44,"author":{"gitId":"jaredtengsw"},"content":"    }"},{"lineNumber":45,"author":{"gitId":"jaredtengsw"},"content":""},{"lineNumber":46,"author":{"gitId":"jaredtengsw"},"content":"    @Override"},{"lineNumber":47,"author":{"gitId":"jaredtengsw"},"content":"    public String toString(){"},{"lineNumber":48,"author":{"gitId":"jaredtengsw"},"content":"        return \"[E]\" + super.toString() + \" (at: \""},{"lineNumber":49,"author":{"gitId":"jaredtengsw"},"content":"                + getLocation() + \" \" + getDateTime() + \")\";"},{"lineNumber":50,"author":{"gitId":"jaredtengsw"},"content":"    }"},{"lineNumber":51,"author":{"gitId":"jaredtengsw"},"content":"}"}],"authorContributionMap":{"jaredtengsw":51}},{"path":"src/main/java/duke/tasks/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jaredtengsw"},"content":"package duke.tasks;"},{"lineNumber":2,"author":{"gitId":"jaredtengsw"},"content":""},{"lineNumber":3,"author":{"gitId":"jaredtengsw"},"content":"public class Task {"},{"lineNumber":4,"author":{"gitId":"jaredtengsw"},"content":"    protected String info;"},{"lineNumber":5,"author":{"gitId":"jaredtengsw"},"content":"    protected boolean isDone;"},{"lineNumber":6,"author":{"gitId":"jaredtengsw"},"content":"    protected taskType type;"},{"lineNumber":7,"author":{"gitId":"jaredtengsw"},"content":"    private String output;"},{"lineNumber":8,"author":{"gitId":"jaredtengsw"},"content":""},{"lineNumber":9,"author":{"gitId":"jaredtengsw"},"content":"    public Task(String info, taskType type) {"},{"lineNumber":10,"author":{"gitId":"jaredtengsw"},"content":"        this.info \u003d info;"},{"lineNumber":11,"author":{"gitId":"jaredtengsw"},"content":"        this.isDone \u003d false;"},{"lineNumber":12,"author":{"gitId":"jaredtengsw"},"content":"        this.type \u003d type;"},{"lineNumber":13,"author":{"gitId":"jaredtengsw"},"content":"    }"},{"lineNumber":14,"author":{"gitId":"jaredtengsw"},"content":""},{"lineNumber":15,"author":{"gitId":"jaredtengsw"},"content":"    public Task(String info, taskType type, boolean isDone) {"},{"lineNumber":16,"author":{"gitId":"jaredtengsw"},"content":"        this.info \u003d info;"},{"lineNumber":17,"author":{"gitId":"jaredtengsw"},"content":"        this.type \u003d type;"},{"lineNumber":18,"author":{"gitId":"jaredtengsw"},"content":"        this.isDone \u003d isDone;"},{"lineNumber":19,"author":{"gitId":"jaredtengsw"},"content":"    }"},{"lineNumber":20,"author":{"gitId":"jaredtengsw"},"content":""},{"lineNumber":21,"author":{"gitId":"jaredtengsw"},"content":"    public String getInfo() {"},{"lineNumber":22,"author":{"gitId":"jaredtengsw"},"content":"        return this.info;"},{"lineNumber":23,"author":{"gitId":"jaredtengsw"},"content":"    }"},{"lineNumber":24,"author":{"gitId":"jaredtengsw"},"content":""},{"lineNumber":25,"author":{"gitId":"jaredtengsw"},"content":"    public String checkIcon() {"},{"lineNumber":26,"author":{"gitId":"jaredtengsw"},"content":"        if (isDone) {"},{"lineNumber":27,"author":{"gitId":"jaredtengsw"},"content":"            return \"\\u0058\"; // icon is a cross"},{"lineNumber":28,"author":{"gitId":"jaredtengsw"},"content":"        } else {"},{"lineNumber":29,"author":{"gitId":"jaredtengsw"},"content":"            return \" \";"},{"lineNumber":30,"author":{"gitId":"jaredtengsw"},"content":"        }"},{"lineNumber":31,"author":{"gitId":"jaredtengsw"},"content":"    }"},{"lineNumber":32,"author":{"gitId":"jaredtengsw"},"content":""},{"lineNumber":33,"author":{"gitId":"jaredtengsw"},"content":"    public void markCompleted() {"},{"lineNumber":34,"author":{"gitId":"jaredtengsw"},"content":"        isDone \u003d true;"},{"lineNumber":35,"author":{"gitId":"jaredtengsw"},"content":"    }"},{"lineNumber":36,"author":{"gitId":"jaredtengsw"},"content":""},{"lineNumber":37,"author":{"gitId":"jaredtengsw"},"content":"    public taskType getType() {"},{"lineNumber":38,"author":{"gitId":"jaredtengsw"},"content":"            return this.type;"},{"lineNumber":39,"author":{"gitId":"jaredtengsw"},"content":"    }"},{"lineNumber":40,"author":{"gitId":"jaredtengsw"},"content":""},{"lineNumber":41,"author":{"gitId":"jaredtengsw"},"content":"    public String toSave() {"},{"lineNumber":42,"author":{"gitId":"jaredtengsw"},"content":"        return this.getType().toString() + \" \" + this.getInfo();"},{"lineNumber":43,"author":{"gitId":"jaredtengsw"},"content":"    }"},{"lineNumber":44,"author":{"gitId":"jaredtengsw"},"content":""},{"lineNumber":45,"author":{"gitId":"jaredtengsw"},"content":"    public boolean getDoneStatus() {"},{"lineNumber":46,"author":{"gitId":"jaredtengsw"},"content":"        return this.isDone;"},{"lineNumber":47,"author":{"gitId":"jaredtengsw"},"content":"    }"},{"lineNumber":48,"author":{"gitId":"jaredtengsw"},"content":""},{"lineNumber":49,"author":{"gitId":"jaredtengsw"},"content":"    @Override"},{"lineNumber":50,"author":{"gitId":"jaredtengsw"},"content":"    public String toString() {"},{"lineNumber":51,"author":{"gitId":"jaredtengsw"},"content":"        String output \u003d \"[\" + checkIcon() + \"]\" + this.info;"},{"lineNumber":52,"author":{"gitId":"jaredtengsw"},"content":"        return output;"},{"lineNumber":53,"author":{"gitId":"jaredtengsw"},"content":"    }"},{"lineNumber":54,"author":{"gitId":"jaredtengsw"},"content":"}"}],"authorContributionMap":{"jaredtengsw":54}},{"path":"src/main/java/duke/tasks/ToDo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jaredtengsw"},"content":"package duke.tasks;"},{"lineNumber":2,"author":{"gitId":"jaredtengsw"},"content":""},{"lineNumber":3,"author":{"gitId":"jaredtengsw"},"content":"public class ToDo extends Task {"},{"lineNumber":4,"author":{"gitId":"jaredtengsw"},"content":"    public ToDo (String info) {"},{"lineNumber":5,"author":{"gitId":"jaredtengsw"},"content":"        super(info, taskType.ToDo);"},{"lineNumber":6,"author":{"gitId":"jaredtengsw"},"content":""},{"lineNumber":7,"author":{"gitId":"jaredtengsw"},"content":"    }"},{"lineNumber":8,"author":{"gitId":"jaredtengsw"},"content":""},{"lineNumber":9,"author":{"gitId":"jaredtengsw"},"content":"    public ToDo(String info, boolean isDone) {"},{"lineNumber":10,"author":{"gitId":"jaredtengsw"},"content":"        super(info, taskType.ToDo, isDone);"},{"lineNumber":11,"author":{"gitId":"jaredtengsw"},"content":"    }"},{"lineNumber":12,"author":{"gitId":"jaredtengsw"},"content":""},{"lineNumber":13,"author":{"gitId":"jaredtengsw"},"content":"    @Override"},{"lineNumber":14,"author":{"gitId":"jaredtengsw"},"content":"    public String toString(){"},{"lineNumber":15,"author":{"gitId":"jaredtengsw"},"content":"        return \"[T]\" + super.toString();"},{"lineNumber":16,"author":{"gitId":"jaredtengsw"},"content":"    }"},{"lineNumber":17,"author":{"gitId":"jaredtengsw"},"content":"}"}],"authorContributionMap":{"jaredtengsw":17}},{"path":"src/main/java/duke/tasks/taskType.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jaredtengsw"},"content":"package duke.tasks;"},{"lineNumber":2,"author":{"gitId":"jaredtengsw"},"content":""},{"lineNumber":3,"author":{"gitId":"jaredtengsw"},"content":"public enum taskType {"},{"lineNumber":4,"author":{"gitId":"jaredtengsw"},"content":"    Deadline,"},{"lineNumber":5,"author":{"gitId":"jaredtengsw"},"content":"    Event,"},{"lineNumber":6,"author":{"gitId":"jaredtengsw"},"content":"    ToDo"},{"lineNumber":7,"author":{"gitId":"jaredtengsw"},"content":"}"}],"authorContributionMap":{"jaredtengsw":7}},{"path":"src/main/java/duke/ui/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jaredtengsw"},"content":"package duke.ui;"},{"lineNumber":2,"author":{"gitId":"jaredtengsw"},"content":""},{"lineNumber":3,"author":{"gitId":"jaredtengsw"},"content":"import duke.taskList.TaskList;"},{"lineNumber":4,"author":{"gitId":"jaredtengsw"},"content":"import duke.tasks.Task;"},{"lineNumber":5,"author":{"gitId":"jaredtengsw"},"content":""},{"lineNumber":6,"author":{"gitId":"jaredtengsw"},"content":"import java.util.Scanner;"},{"lineNumber":7,"author":{"gitId":"jaredtengsw"},"content":""},{"lineNumber":8,"author":{"gitId":"jaredtengsw"},"content":"public class Ui {"},{"lineNumber":9,"author":{"gitId":"jaredtengsw"},"content":"    private final static String borders \u003d \"________________________________________________\";"},{"lineNumber":10,"author":{"gitId":"jaredtengsw"},"content":"    private final static String logo \u003d \"     __      _     ____                  _\\n\""},{"lineNumber":11,"author":{"gitId":"jaredtengsw"},"content":"            + \"    /  \\\\    | |   |  __| _____  ____    | |\\n\""},{"lineNumber":12,"author":{"gitId":"jaredtengsw"},"content":"            + \"   / /\\\\ \\\\   | | __| |__ |  ___|/ __ \\\\   | |\\n\""},{"lineNumber":13,"author":{"gitId":"jaredtengsw"},"content":"            + \"  / /__\\\\ \\\\  | ||__   __|| |   / ____/ __| |\\n\""},{"lineNumber":14,"author":{"gitId":"jaredtengsw"},"content":"            + \" / ______ \\\\ | |   | |   | |   \\\\ \\\\___ / _  |\\n\""},{"lineNumber":15,"author":{"gitId":"jaredtengsw"},"content":"            + \"/_/      \\\\_\\\\|_|   |_|   |_|    \\\\____|\\\\____|\\n\";"},{"lineNumber":16,"author":{"gitId":"jaredtengsw"},"content":""},{"lineNumber":17,"author":{"gitId":"jaredtengsw"},"content":"    Scanner sc;"},{"lineNumber":18,"author":{"gitId":"jaredtengsw"},"content":"    StringBuilder sb;"},{"lineNumber":19,"author":{"gitId":"jaredtengsw"},"content":""},{"lineNumber":20,"author":{"gitId":"jaredtengsw"},"content":"    public Ui() {"},{"lineNumber":21,"author":{"gitId":"jaredtengsw"},"content":"        this.sc \u003d new Scanner(System.in);"},{"lineNumber":22,"author":{"gitId":"jaredtengsw"},"content":"    }"},{"lineNumber":23,"author":{"gitId":"jaredtengsw"},"content":""},{"lineNumber":24,"author":{"gitId":"jaredtengsw"},"content":"    /**"},{"lineNumber":25,"author":{"gitId":"jaredtengsw"},"content":"     * Reads the next line of input as a string"},{"lineNumber":26,"author":{"gitId":"jaredtengsw"},"content":"     * @return a string of the input"},{"lineNumber":27,"author":{"gitId":"jaredtengsw"},"content":"     */"},{"lineNumber":28,"author":{"gitId":"jaredtengsw"},"content":"    public String readInput() {"},{"lineNumber":29,"author":{"gitId":"jaredtengsw"},"content":"        return sc.nextLine();"},{"lineNumber":30,"author":{"gitId":"jaredtengsw"},"content":"    }"},{"lineNumber":31,"author":{"gitId":"jaredtengsw"},"content":""},{"lineNumber":32,"author":{"gitId":"jaredtengsw"},"content":"    /**"},{"lineNumber":33,"author":{"gitId":"jaredtengsw"},"content":"     * Checks whether the next line is available."},{"lineNumber":34,"author":{"gitId":"jaredtengsw"},"content":"     * @return a boolean value on whether scanner contains a next line."},{"lineNumber":35,"author":{"gitId":"jaredtengsw"},"content":"     */"},{"lineNumber":36,"author":{"gitId":"jaredtengsw"},"content":"    public boolean canRead() {"},{"lineNumber":37,"author":{"gitId":"jaredtengsw"},"content":"        return sc.hasNextLine();"},{"lineNumber":38,"author":{"gitId":"jaredtengsw"},"content":"    }"},{"lineNumber":39,"author":{"gitId":"jaredtengsw"},"content":""},{"lineNumber":40,"author":{"gitId":"jaredtengsw"},"content":"    /**"},{"lineNumber":41,"author":{"gitId":"jaredtengsw"},"content":"     * Runs when UI starts up, printing the logo and a greeting."},{"lineNumber":42,"author":{"gitId":"jaredtengsw"},"content":"     */"},{"lineNumber":43,"author":{"gitId":"jaredtengsw"},"content":"    public void start() {"},{"lineNumber":44,"author":{"gitId":"jaredtengsw"},"content":"        System.out.println(logo + \"\\nHello Master. Nice to meet you, my name is Alfred.\\n\" +"},{"lineNumber":45,"author":{"gitId":"jaredtengsw"},"content":"                \"How may I be of service, Master?\\n\");"},{"lineNumber":46,"author":{"gitId":"jaredtengsw"},"content":"    }"},{"lineNumber":47,"author":{"gitId":"jaredtengsw"},"content":""},{"lineNumber":48,"author":{"gitId":"jaredtengsw"},"content":"    /**"},{"lineNumber":49,"author":{"gitId":"jaredtengsw"},"content":"     * Output message when closing the bot"},{"lineNumber":50,"author":{"gitId":"jaredtengsw"},"content":"     */"},{"lineNumber":51,"author":{"gitId":"jaredtengsw"},"content":"    public void goodBye() {"},{"lineNumber":52,"author":{"gitId":"jaredtengsw"},"content":"        String message \u003d \"Have a good day, Master. Take care.\";"},{"lineNumber":53,"author":{"gitId":"jaredtengsw"},"content":"        formatAndPrintType1(message);"},{"lineNumber":54,"author":{"gitId":"jaredtengsw"},"content":"    }"},{"lineNumber":55,"author":{"gitId":"jaredtengsw"},"content":""},{"lineNumber":56,"author":{"gitId":"jaredtengsw"},"content":"    /**"},{"lineNumber":57,"author":{"gitId":"jaredtengsw"},"content":"     * Output message when marking the completion of a task"},{"lineNumber":58,"author":{"gitId":"jaredtengsw"},"content":"     * @param task, the task that is to be marked done"},{"lineNumber":59,"author":{"gitId":"jaredtengsw"},"content":"     */"},{"lineNumber":60,"author":{"gitId":"jaredtengsw"},"content":"    public void taskDone(Task task) {"},{"lineNumber":61,"author":{"gitId":"jaredtengsw"},"content":"        String message \u003d \"Well done, Master! I\u0027ve marked this task as done:\\n\" +"},{"lineNumber":62,"author":{"gitId":"jaredtengsw"},"content":"                task.toString();"},{"lineNumber":63,"author":{"gitId":"jaredtengsw"},"content":"        formatAndPrintType1(message);"},{"lineNumber":64,"author":{"gitId":"jaredtengsw"},"content":"    }"},{"lineNumber":65,"author":{"gitId":"jaredtengsw"},"content":""},{"lineNumber":66,"author":{"gitId":"jaredtengsw"},"content":"    /**"},{"lineNumber":67,"author":{"gitId":"jaredtengsw"},"content":"     * Output message when a task is deleted"},{"lineNumber":68,"author":{"gitId":"jaredtengsw"},"content":"     * @param task, the task to be deleted from the list"},{"lineNumber":69,"author":{"gitId":"jaredtengsw"},"content":"     */"},{"lineNumber":70,"author":{"gitId":"jaredtengsw"},"content":"    public void deleteTask(Task task) {"},{"lineNumber":71,"author":{"gitId":"jaredtengsw"},"content":"        String message \u003d \"Understood Master. I\u0027ve removed this task from the list:\\n\" +"},{"lineNumber":72,"author":{"gitId":"jaredtengsw"},"content":"                task.toString();"},{"lineNumber":73,"author":{"gitId":"jaredtengsw"},"content":"        formatAndPrintType2a(message);"},{"lineNumber":74,"author":{"gitId":"jaredtengsw"},"content":"    }"},{"lineNumber":75,"author":{"gitId":"jaredtengsw"},"content":""},{"lineNumber":76,"author":{"gitId":"jaredtengsw"},"content":"    /**"},{"lineNumber":77,"author":{"gitId":"jaredtengsw"},"content":"     * Output message when a task is added"},{"lineNumber":78,"author":{"gitId":"jaredtengsw"},"content":"     * @param task, the task that is added into the list."},{"lineNumber":79,"author":{"gitId":"jaredtengsw"},"content":"     */"},{"lineNumber":80,"author":{"gitId":"jaredtengsw"},"content":"    public void addTask(Task task) {"},{"lineNumber":81,"author":{"gitId":"jaredtengsw"},"content":"        String message \u003d \"As requested, I\u0027ve added a new task for you, Master:\\n\" +"},{"lineNumber":82,"author":{"gitId":"jaredtengsw"},"content":"                task.toString();"},{"lineNumber":83,"author":{"gitId":"jaredtengsw"},"content":""},{"lineNumber":84,"author":{"gitId":"jaredtengsw"},"content":"        formatAndPrintType2a(message);"},{"lineNumber":85,"author":{"gitId":"jaredtengsw"},"content":"    }"},{"lineNumber":86,"author":{"gitId":"jaredtengsw"},"content":""},{"lineNumber":87,"author":{"gitId":"jaredtengsw"},"content":"    /**"},{"lineNumber":88,"author":{"gitId":"jaredtengsw"},"content":"     * Prints out all the tasks in the list"},{"lineNumber":89,"author":{"gitId":"jaredtengsw"},"content":"     * @param tasks, the current taskList object containing all the tasks"},{"lineNumber":90,"author":{"gitId":"jaredtengsw"},"content":"     */"},{"lineNumber":91,"author":{"gitId":"jaredtengsw"},"content":"    public void getList(TaskList tasks) {"},{"lineNumber":92,"author":{"gitId":"jaredtengsw"},"content":"        sb \u003d new StringBuilder();"},{"lineNumber":93,"author":{"gitId":"jaredtengsw"},"content":"        String message \u003d \"Here is a list of your tasks, Master:\";"},{"lineNumber":94,"author":{"gitId":"jaredtengsw"},"content":"        sb.append(message);"},{"lineNumber":95,"author":{"gitId":"jaredtengsw"},"content":""},{"lineNumber":96,"author":{"gitId":"jaredtengsw"},"content":"        for (int i \u003d 0; i \u003c tasks.getSize(); i++) {"},{"lineNumber":97,"author":{"gitId":"jaredtengsw"},"content":"            sb.append(\"\\n\" + String.valueOf(i + 1) + \". \" + tasks.getTask(i).toString());"},{"lineNumber":98,"author":{"gitId":"jaredtengsw"},"content":""},{"lineNumber":99,"author":{"gitId":"jaredtengsw"},"content":"        }"},{"lineNumber":100,"author":{"gitId":"jaredtengsw"},"content":"        String messageFinal \u003d sb.toString();"},{"lineNumber":101,"author":{"gitId":"jaredtengsw"},"content":"        formatAndPrintType1(messageFinal);"},{"lineNumber":102,"author":{"gitId":"jaredtengsw"},"content":"    }"},{"lineNumber":103,"author":{"gitId":"jaredtengsw"},"content":""},{"lineNumber":104,"author":{"gitId":"jaredtengsw"},"content":"    /**"},{"lineNumber":105,"author":{"gitId":"jaredtengsw"},"content":"     * Prints message for number of tasks left in list."},{"lineNumber":106,"author":{"gitId":"jaredtengsw"},"content":"     * @param tasks, the current taskList object containing all the tasks"},{"lineNumber":107,"author":{"gitId":"jaredtengsw"},"content":"     */"},{"lineNumber":108,"author":{"gitId":"jaredtengsw"},"content":"    public void getTaskListSize(TaskList tasks) {"},{"lineNumber":109,"author":{"gitId":"jaredtengsw"},"content":"        String message;"},{"lineNumber":110,"author":{"gitId":"jaredtengsw"},"content":"        if (tasks.getSize() \u003c\u003d 1) {"},{"lineNumber":111,"author":{"gitId":"jaredtengsw"},"content":"            message \u003d \"You have \" + tasks.getSize() + \" task left in the list, Master.\";"},{"lineNumber":112,"author":{"gitId":"jaredtengsw"},"content":"        } else {"},{"lineNumber":113,"author":{"gitId":"jaredtengsw"},"content":"            message \u003d \"You have \" + tasks.getSize() + \" tasks left in the list, Master.\";"},{"lineNumber":114,"author":{"gitId":"jaredtengsw"},"content":"        }"},{"lineNumber":115,"author":{"gitId":"jaredtengsw"},"content":"        formatAndPrintType2b(message);"},{"lineNumber":116,"author":{"gitId":"jaredtengsw"},"content":"    }"},{"lineNumber":117,"author":{"gitId":"jaredtengsw"},"content":""},{"lineNumber":118,"author":{"gitId":"jaredtengsw"},"content":"    /**"},{"lineNumber":119,"author":{"gitId":"jaredtengsw"},"content":"     * Formats the message fully with upper"},{"lineNumber":120,"author":{"gitId":"jaredtengsw"},"content":"     * and lower borders while printing out the message"},{"lineNumber":121,"author":{"gitId":"jaredtengsw"},"content":"     * @param message, the message to be printed"},{"lineNumber":122,"author":{"gitId":"jaredtengsw"},"content":"     */"},{"lineNumber":123,"author":{"gitId":"jaredtengsw"},"content":"    public void formatAndPrintType1(String message) {"},{"lineNumber":124,"author":{"gitId":"jaredtengsw"},"content":"        System.out.println(borders);"},{"lineNumber":125,"author":{"gitId":"jaredtengsw"},"content":"        System.out.println(message);"},{"lineNumber":126,"author":{"gitId":"jaredtengsw"},"content":"        System.out.println(borders + \"\\n\");"},{"lineNumber":127,"author":{"gitId":"jaredtengsw"},"content":"    }"},{"lineNumber":128,"author":{"gitId":"jaredtengsw"},"content":""},{"lineNumber":129,"author":{"gitId":"jaredtengsw"},"content":"    /**"},{"lineNumber":130,"author":{"gitId":"jaredtengsw"},"content":"     * Formats the message fully with UPPER borders only"},{"lineNumber":131,"author":{"gitId":"jaredtengsw"},"content":"     * and prints out the message"},{"lineNumber":132,"author":{"gitId":"jaredtengsw"},"content":"     * @param message, the message to be printed"},{"lineNumber":133,"author":{"gitId":"jaredtengsw"},"content":"     */"},{"lineNumber":134,"author":{"gitId":"jaredtengsw"},"content":"    public void formatAndPrintType2a(String message) {"},{"lineNumber":135,"author":{"gitId":"jaredtengsw"},"content":"        System.out.println(borders);"},{"lineNumber":136,"author":{"gitId":"jaredtengsw"},"content":"        System.out.println(message);"},{"lineNumber":137,"author":{"gitId":"jaredtengsw"},"content":"    }"},{"lineNumber":138,"author":{"gitId":"jaredtengsw"},"content":""},{"lineNumber":139,"author":{"gitId":"jaredtengsw"},"content":"    /**"},{"lineNumber":140,"author":{"gitId":"jaredtengsw"},"content":"     * Formats the message fully with LOWER borders only"},{"lineNumber":141,"author":{"gitId":"jaredtengsw"},"content":"     * and prints out the message"},{"lineNumber":142,"author":{"gitId":"jaredtengsw"},"content":"     * @param message, the message to be printed"},{"lineNumber":143,"author":{"gitId":"jaredtengsw"},"content":"     */"},{"lineNumber":144,"author":{"gitId":"jaredtengsw"},"content":"    public void formatAndPrintType2b(String message) {"},{"lineNumber":145,"author":{"gitId":"jaredtengsw"},"content":"        System.out.println(\"\\n\" + message);"},{"lineNumber":146,"author":{"gitId":"jaredtengsw"},"content":"        System.out.println(borders + \"\\n\");"},{"lineNumber":147,"author":{"gitId":"jaredtengsw"},"content":"    }"},{"lineNumber":148,"author":{"gitId":"jaredtengsw"},"content":"}"}],"authorContributionMap":{"jaredtengsw":148}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"jaredtengsw"},"content":"todo finish tutorial"},{"lineNumber":2,"author":{"gitId":"jaredtengsw"},"content":"deadline individual assignment /by Sunday"},{"lineNumber":3,"author":{"gitId":"jaredtengsw"},"content":"event project meeting /at HSSML, Saturday 2-4pm"},{"lineNumber":4,"author":{"gitId":"jaredtengsw"},"content":"list"},{"lineNumber":5,"author":{"gitId":"jaredtengsw"},"content":"done 1"},{"lineNumber":6,"author":{"gitId":"jaredtengsw"},"content":"bye"}],"authorContributionMap":{"jaredtengsw":6}}]
