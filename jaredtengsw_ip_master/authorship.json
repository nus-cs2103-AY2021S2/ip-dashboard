[{"path":"README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"jaredtengsw"},"content":"# User Interface"},{"lineNumber":2,"author":{"gitId":"jaredtengsw"},"content":"\u003cp alighn\u003d\"left\"\u003e\u003cimg width\u003d\"45%\" src\u003d\"docs/Ui.png\"\u003e\u003c/p\u003e"},{"lineNumber":3,"author":{"gitId":"-"},"content":""},{"lineNumber":4,"author":{"gitId":"jaredtengsw"},"content":""},{"lineNumber":5,"author":{"gitId":"jaredtengsw"},"content":"# About Butler Alfred"},{"lineNumber":6,"author":{"gitId":"jaredtengsw"},"content":" ```"},{"lineNumber":7,"author":{"gitId":"jaredtengsw"},"content":"   Hello from"},{"lineNumber":8,"author":{"gitId":"jaredtengsw"},"content":"      __      _     ____                  _"},{"lineNumber":9,"author":{"gitId":"jaredtengsw"},"content":"     /  \\    | |   |  __| _____  ____    | |"},{"lineNumber":10,"author":{"gitId":"jaredtengsw"},"content":"    / /\\ \\   | | __| |__ |  ___|/ __ \\   | |"},{"lineNumber":11,"author":{"gitId":"jaredtengsw"},"content":"   / /__\\ \\  | ||__   __|| |   / ____/ __| |"},{"lineNumber":12,"author":{"gitId":"jaredtengsw"},"content":"  / ______ \\ | |   | |   | |   \\ \\___ / _  |"},{"lineNumber":13,"author":{"gitId":"jaredtengsw"},"content":"/_/      \\_\\|_|   |_|   |_|    \\____|\\____|"},{"lineNumber":14,"author":{"gitId":"jaredtengsw"},"content":"```"},{"lineNumber":15,"author":{"gitId":"jaredtengsw"},"content":""},{"lineNumber":16,"author":{"gitId":"jaredtengsw"},"content":"Butler Alfred is a desktop task management app that is optimised to be used via a Command Line Interface (CLI). It is suitable for people who are familiar with CLI and particularly benefits users who are able to type fast."},{"lineNumber":17,"author":{"gitId":"jaredtengsw"},"content":""},{"lineNumber":18,"author":{"gitId":"jaredtengsw"},"content":"Thus, Butler Alfred can track and manage your tasks faster than traditional GUI apps."},{"lineNumber":19,"author":{"gitId":"-"},"content":""},{"lineNumber":20,"author":{"gitId":"-"},"content":"## Setting up in Intellij"},{"lineNumber":21,"author":{"gitId":"-"},"content":""},{"lineNumber":22,"author":{"gitId":"-"},"content":"Prerequisites: JDK 11, update Intellij to the most recent version."},{"lineNumber":23,"author":{"gitId":"-"},"content":""},{"lineNumber":24,"author":{"gitId":"-"},"content":"1. Open Intellij (if you are not in the welcome screen, click `File` \u003e `Close Project` to close the existing project first)"},{"lineNumber":25,"author":{"gitId":"-"},"content":"1. Open the project into Intellij as follows:"},{"lineNumber":26,"author":{"gitId":"-"},"content":"   1. Click `Open`."},{"lineNumber":27,"author":{"gitId":"-"},"content":"   1. Select the project directory, and click `OK`."},{"lineNumber":28,"author":{"gitId":"-"},"content":"   1. If there are any further prompts, accept the defaults."},{"lineNumber":29,"author":{"gitId":"-"},"content":"1. Configure the project to use **JDK 11** (not other versions) as explained in [here](https://www.jetbrains.com/help/idea/sdk.html#set-up-jdk)."},{"lineNumber":30,"author":{"gitId":"jaredtengsw"},"content":"1. After that, locate the `src/main/java/Launcher.java` file, right-click it, and choose `Run Launcher.main()`. If the setup is correct, the application window will appear."}],"authorContributionMap":{"jaredtengsw":18,"-":12}},{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027checkstyle\u0027"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027"},{"lineNumber":6,"author":{"gitId":"-"},"content":"}"},{"lineNumber":7,"author":{"gitId":"-"},"content":""},{"lineNumber":8,"author":{"gitId":"jaredtengsw"},"content":""},{"lineNumber":9,"author":{"gitId":"-"},"content":"repositories {"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    mavenCentral()"},{"lineNumber":11,"author":{"gitId":"-"},"content":"}"},{"lineNumber":12,"author":{"gitId":"-"},"content":""},{"lineNumber":13,"author":{"gitId":"-"},"content":"dependencies {"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.5.0\u0027"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.5.0\u0027"},{"lineNumber":16,"author":{"gitId":"jaredtengsw"},"content":""},{"lineNumber":17,"author":{"gitId":"jaredtengsw"},"content":"    String javaFxVersion \u003d \u002711\u0027"},{"lineNumber":18,"author":{"gitId":"jaredtengsw"},"content":""},{"lineNumber":19,"author":{"gitId":"jaredtengsw"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027"},{"lineNumber":20,"author":{"gitId":"jaredtengsw"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"},{"lineNumber":21,"author":{"gitId":"jaredtengsw"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"},{"lineNumber":22,"author":{"gitId":"jaredtengsw"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027"},{"lineNumber":23,"author":{"gitId":"jaredtengsw"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"},{"lineNumber":24,"author":{"gitId":"jaredtengsw"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"},{"lineNumber":25,"author":{"gitId":"jaredtengsw"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027"},{"lineNumber":26,"author":{"gitId":"jaredtengsw"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"},{"lineNumber":27,"author":{"gitId":"jaredtengsw"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"},{"lineNumber":28,"author":{"gitId":"jaredtengsw"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027"},{"lineNumber":29,"author":{"gitId":"jaredtengsw"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"},{"lineNumber":30,"author":{"gitId":"jaredtengsw"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"},{"lineNumber":31,"author":{"gitId":"-"},"content":"}"},{"lineNumber":32,"author":{"gitId":"-"},"content":""},{"lineNumber":33,"author":{"gitId":"-"},"content":"test {"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    useJUnitPlatform()"},{"lineNumber":35,"author":{"gitId":"-"},"content":""},{"lineNumber":36,"author":{"gitId":"-"},"content":"    testLogging {"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\""},{"lineNumber":38,"author":{"gitId":"-"},"content":""},{"lineNumber":39,"author":{"gitId":"-"},"content":"        showExceptions true"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\""},{"lineNumber":41,"author":{"gitId":"-"},"content":"        showCauses true"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        showStackTraces true"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":45,"author":{"gitId":"-"},"content":"}"},{"lineNumber":46,"author":{"gitId":"-"},"content":""},{"lineNumber":47,"author":{"gitId":"-"},"content":"application {"},{"lineNumber":48,"author":{"gitId":"jaredtengsw"},"content":"    project.setProperty(\"mainClassName\", \"duke.Launcher\")"},{"lineNumber":49,"author":{"gitId":"-"},"content":"}"},{"lineNumber":50,"author":{"gitId":"-"},"content":""},{"lineNumber":51,"author":{"gitId":"-"},"content":"shadowJar {"},{"lineNumber":52,"author":{"gitId":"jaredtengsw"},"content":"    manifest {"},{"lineNumber":53,"author":{"gitId":"jaredtengsw"},"content":"        attributes \"Main-Class\": \u0027duke.L\u0027 +"},{"lineNumber":54,"author":{"gitId":"jaredtengsw"},"content":"                \u0027auncher\u0027"},{"lineNumber":55,"author":{"gitId":"jaredtengsw"},"content":"    }"},{"lineNumber":56,"author":{"gitId":"-"},"content":"}"},{"lineNumber":57,"author":{"gitId":"-"},"content":""},{"lineNumber":58,"author":{"gitId":"-"},"content":"checkstyle {"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    toolVersion \u003d \u00278.29\u0027"},{"lineNumber":60,"author":{"gitId":"-"},"content":"}"},{"lineNumber":61,"author":{"gitId":"-"},"content":""},{"lineNumber":62,"author":{"gitId":"-"},"content":"run{"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in"},{"lineNumber":64,"author":{"gitId":"-"},"content":"}"}],"authorContributionMap":{"jaredtengsw":21,"-":43}},{"path":"docs/README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"# User Guide"},{"lineNumber":2,"author":{"gitId":"jaredtengsw"},"content":"Butler Alfred is a desktop task management app, optimised for Command Line Interface (CLI). It is suitable for people who are familiar with CLI and particularly benefits users who are able to type fast."},{"lineNumber":3,"author":{"gitId":"jaredtengsw"},"content":""},{"lineNumber":4,"author":{"gitId":"jaredtengsw"},"content":"Thus, Butler Alfred can track and manage your tasks faster than traditional GUI apps."},{"lineNumber":5,"author":{"gitId":"jaredtengsw"},"content":""},{"lineNumber":6,"author":{"gitId":"jaredtengsw"},"content":"## User Inteface"},{"lineNumber":7,"author":{"gitId":"jaredtengsw"},"content":"\u003cp align\u003d\"left\"\u003e\u003cimg width\u003d\"40%\" src\u003d\"Ui.png\"/\u003e\u003c/p\u003e"},{"lineNumber":8,"author":{"gitId":"jaredtengsw"},"content":""},{"lineNumber":9,"author":{"gitId":"jaredtengsw"},"content":"## Table of Contents"},{"lineNumber":10,"author":{"gitId":"jaredtengsw"},"content":"* [Quick Start](#quick-start)"},{"lineNumber":11,"author":{"gitId":"jaredtengsw"},"content":"* [Features](#features)"},{"lineNumber":12,"author":{"gitId":"jaredtengsw"},"content":"  * [Add a todo task: `todo`](#add-a-todo-task-todo)"},{"lineNumber":13,"author":{"gitId":"jaredtengsw"},"content":"  * [Add a deadline task: `deadline`](#add-a-deadline-task-deadline)"},{"lineNumber":14,"author":{"gitId":"jaredtengsw"},"content":"  * [Add an event task:`event`](#add-an-event-task-event)"},{"lineNumber":15,"author":{"gitId":"jaredtengsw"},"content":"  * [Mark a task as completed:`done`](#mark-a-task-as-completed-done)"},{"lineNumber":16,"author":{"gitId":"jaredtengsw"},"content":"  * [Delete a task:`delete`](#delete-a-task-delete)"},{"lineNumber":17,"author":{"gitId":"jaredtengsw"},"content":"  * [List all the tasks in the task list:`list`](#list-all-the-tasks-in-the-task-list-list)"},{"lineNumber":18,"author":{"gitId":"jaredtengsw"},"content":"  * [Finds tasks that matches a keyword:`find`](#finds-tasks-that-matches-a-keyword-find)  "},{"lineNumber":19,"author":{"gitId":"jaredtengsw"},"content":"  * [Viewing help:`help`](#viewing-help-help)"},{"lineNumber":20,"author":{"gitId":"jaredtengsw"},"content":"  * [Exit the application:`bye`](#exit-the-application-bye)"},{"lineNumber":21,"author":{"gitId":"jaredtengsw"},"content":"* [FAQ](#faq)"},{"lineNumber":22,"author":{"gitId":"jaredtengsw"},"content":"* [Command Summary](#command-summary)"},{"lineNumber":23,"author":{"gitId":"-"},"content":""},{"lineNumber":24,"author":{"gitId":"-"},"content":"## Features "},{"lineNumber":25,"author":{"gitId":"jaredtengsw"},"content":"This section will be showcasing the list of commands currently available on Butler Alfred and their usages."},{"lineNumber":26,"author":{"gitId":"jaredtengsw"},"content":""},{"lineNumber":27,"author":{"gitId":"jaredtengsw"},"content":"### Add a todo task: `todo` "},{"lineNumber":28,"author":{"gitId":"jaredtengsw"},"content":"Adds a todo task which is a basic task to your task list."},{"lineNumber":29,"author":{"gitId":"jaredtengsw"},"content":""},{"lineNumber":30,"author":{"gitId":"jaredtengsw"},"content":"Format: `todo \u003cTASK_NAME\u003e`"},{"lineNumber":31,"author":{"gitId":"jaredtengsw"},"content":""},{"lineNumber":32,"author":{"gitId":"jaredtengsw"},"content":"Example:"},{"lineNumber":33,"author":{"gitId":"jaredtengsw"},"content":"\u0027todo groceries shopping\u0027"},{"lineNumber":34,"author":{"gitId":"jaredtengsw"},"content":""},{"lineNumber":35,"author":{"gitId":"jaredtengsw"},"content":"Outcome:"},{"lineNumber":36,"author":{"gitId":"jaredtengsw"},"content":"```"},{"lineNumber":37,"author":{"gitId":"jaredtengsw"},"content":"As requested, I\u0027ve added a new task for you, Master:"},{"lineNumber":38,"author":{"gitId":"jaredtengsw"},"content":"[T][ ]groceries shopping"},{"lineNumber":39,"author":{"gitId":"jaredtengsw"},"content":""},{"lineNumber":40,"author":{"gitId":"jaredtengsw"},"content":"You have 5 tasks in the list now, Master."},{"lineNumber":41,"author":{"gitId":"jaredtengsw"},"content":"```"},{"lineNumber":42,"author":{"gitId":"jaredtengsw"},"content":""},{"lineNumber":43,"author":{"gitId":"jaredtengsw"},"content":"### Add a deadline task: `deadline`"},{"lineNumber":44,"author":{"gitId":"jaredtengsw"},"content":"Adds a deadline task to your task list."},{"lineNumber":45,"author":{"gitId":"jaredtengsw"},"content":""},{"lineNumber":46,"author":{"gitId":"jaredtengsw"},"content":"Format: `deadline \u003cTASK_NAME\u003e /at \u003cYYYY-MM-DD\u003e \u003cHH:MM\u003e`"},{"lineNumber":47,"author":{"gitId":"jaredtengsw"},"content":""},{"lineNumber":48,"author":{"gitId":"jaredtengsw"},"content":"Example:"},{"lineNumber":49,"author":{"gitId":"jaredtengsw"},"content":"`deadline CS2100 written assignment /by 2021-03-12 23:59`"},{"lineNumber":50,"author":{"gitId":"jaredtengsw"},"content":""},{"lineNumber":51,"author":{"gitId":"jaredtengsw"},"content":"Outcome"},{"lineNumber":52,"author":{"gitId":"jaredtengsw"},"content":"```"},{"lineNumber":53,"author":{"gitId":"jaredtengsw"},"content":"As requested, I\u0027ve added a new task for you, Master:"},{"lineNumber":54,"author":{"gitId":"jaredtengsw"},"content":"[D][ ]CS2100 written assignment (by: 12 Mar 2021 11:59pm)"},{"lineNumber":55,"author":{"gitId":"jaredtengsw"},"content":""},{"lineNumber":56,"author":{"gitId":"jaredtengsw"},"content":"You have 6 tasks in the list now, Master."},{"lineNumber":57,"author":{"gitId":"jaredtengsw"},"content":"```"},{"lineNumber":58,"author":{"gitId":"jaredtengsw"},"content":""},{"lineNumber":59,"author":{"gitId":"jaredtengsw"},"content":"### Add an event task: `event`"},{"lineNumber":60,"author":{"gitId":"jaredtengsw"},"content":"Adds an event task to your task list."},{"lineNumber":61,"author":{"gitId":"jaredtengsw"},"content":""},{"lineNumber":62,"author":{"gitId":"jaredtengsw"},"content":"Format: `event \u003cTASK_NAME\u003e /at \u003cLOCATION\u003e \u003cYYYY-MM-DD\u003e \u003cHH:MM\u003e`"},{"lineNumber":63,"author":{"gitId":"jaredtengsw"},"content":""},{"lineNumber":64,"author":{"gitId":"jaredtengsw"},"content":"Example:"},{"lineNumber":65,"author":{"gitId":"jaredtengsw"},"content":"`event lunch /at NUSS 2021-02-24 12:15`"},{"lineNumber":66,"author":{"gitId":"jaredtengsw"},"content":""},{"lineNumber":67,"author":{"gitId":"jaredtengsw"},"content":"Outcome"},{"lineNumber":68,"author":{"gitId":"jaredtengsw"},"content":"```"},{"lineNumber":69,"author":{"gitId":"jaredtengsw"},"content":"As requested, I\u0027ve added a new task for you, Master:"},{"lineNumber":70,"author":{"gitId":"jaredtengsw"},"content":"[E][ ]lunch (at: NUSS 24 Feb 2021 12:15pm)"},{"lineNumber":71,"author":{"gitId":"jaredtengsw"},"content":""},{"lineNumber":72,"author":{"gitId":"jaredtengsw"},"content":"You have 7 tasks in the list now, Master."},{"lineNumber":73,"author":{"gitId":"jaredtengsw"},"content":"```"},{"lineNumber":74,"author":{"gitId":"jaredtengsw"},"content":""},{"lineNumber":75,"author":{"gitId":"jaredtengsw"},"content":"### Mark a task as completed: `done`"},{"lineNumber":76,"author":{"gitId":"jaredtengsw"},"content":"Mark the task at an inputted number position as completed."},{"lineNumber":77,"author":{"gitId":"jaredtengsw"},"content":""},{"lineNumber":78,"author":{"gitId":"jaredtengsw"},"content":"Format: `done \u003cTASK_NUMBER\u003e`"},{"lineNumber":79,"author":{"gitId":"jaredtengsw"},"content":""},{"lineNumber":80,"author":{"gitId":"jaredtengsw"},"content":"Example:"},{"lineNumber":81,"author":{"gitId":"jaredtengsw"},"content":"`done 5`"},{"lineNumber":82,"author":{"gitId":"jaredtengsw"},"content":""},{"lineNumber":83,"author":{"gitId":"jaredtengsw"},"content":""},{"lineNumber":84,"author":{"gitId":"jaredtengsw"},"content":"Outcome:"},{"lineNumber":85,"author":{"gitId":"jaredtengsw"},"content":"```"},{"lineNumber":86,"author":{"gitId":"jaredtengsw"},"content":"Well done. Master! I\u0027ve marked this task as done:"},{"lineNumber":87,"author":{"gitId":"jaredtengsw"},"content":"[T][X]groceries shopping"},{"lineNumber":88,"author":{"gitId":"jaredtengsw"},"content":"```"},{"lineNumber":89,"author":{"gitId":"jaredtengsw"},"content":""},{"lineNumber":90,"author":{"gitId":"jaredtengsw"},"content":"### Delete a task: `delete`"},{"lineNumber":91,"author":{"gitId":"jaredtengsw"},"content":"Deletes the task at the inputted number position."},{"lineNumber":92,"author":{"gitId":"jaredtengsw"},"content":""},{"lineNumber":93,"author":{"gitId":"jaredtengsw"},"content":"Format: `delete \u003cTASK NUMBER\u003e`"},{"lineNumber":94,"author":{"gitId":"jaredtengsw"},"content":""},{"lineNumber":95,"author":{"gitId":"jaredtengsw"},"content":"Example:"},{"lineNumber":96,"author":{"gitId":"jaredtengsw"},"content":"`delete 5`"},{"lineNumber":97,"author":{"gitId":"jaredtengsw"},"content":""},{"lineNumber":98,"author":{"gitId":"jaredtengsw"},"content":"Outcome:"},{"lineNumber":99,"author":{"gitId":"jaredtengsw"},"content":"```"},{"lineNumber":100,"author":{"gitId":"jaredtengsw"},"content":"Understood Master. I\u0027ve removed this task from the list:"},{"lineNumber":101,"author":{"gitId":"jaredtengsw"},"content":"[T][X]groceries shopping"},{"lineNumber":102,"author":{"gitId":"jaredtengsw"},"content":""},{"lineNumber":103,"author":{"gitId":"jaredtengsw"},"content":"You have 6 tasks left in the list now, Master."},{"lineNumber":104,"author":{"gitId":"jaredtengsw"},"content":"```"},{"lineNumber":105,"author":{"gitId":"jaredtengsw"},"content":"### List all the tasks in the task list: `list`"},{"lineNumber":106,"author":{"gitId":"jaredtengsw"},"content":"Displays a list of all the tasks in your task list."},{"lineNumber":107,"author":{"gitId":"jaredtengsw"},"content":""},{"lineNumber":108,"author":{"gitId":"jaredtengsw"},"content":"Format:`list`"},{"lineNumber":109,"author":{"gitId":"jaredtengsw"},"content":""},{"lineNumber":110,"author":{"gitId":"jaredtengsw"},"content":"Example:`list`"},{"lineNumber":111,"author":{"gitId":"jaredtengsw"},"content":""},{"lineNumber":112,"author":{"gitId":"jaredtengsw"},"content":"Outcome:"},{"lineNumber":113,"author":{"gitId":"jaredtengsw"},"content":"```"},{"lineNumber":114,"author":{"gitId":"jaredtengsw"},"content":"Here is a list of your tasks, Master."},{"lineNumber":115,"author":{"gitId":"jaredtengsw"},"content":"1. [D][X]CS2103 ip (by 19 Feb 2021 11:59pm)"},{"lineNumber":116,"author":{"gitId":"jaredtengsw"},"content":"2. [T][X]programming assignment"},{"lineNumber":117,"author":{"gitId":"jaredtengsw"},"content":"3. [D][ ]critique paper (by: 2021-03-05)"},{"lineNumber":118,"author":{"gitId":"jaredtengsw"},"content":"4. [E][ ]Mitchell\u0027s birthday party (at: Carousel 17 May 2021 06:30pm)"},{"lineNumber":119,"author":{"gitId":"jaredtengsw"},"content":"5. [D][ ]CS2100 written assignment (by: 12 Mar 2021 11:59pm)"},{"lineNumber":120,"author":{"gitId":"jaredtengsw"},"content":"6. [E][ ]lunch (at: NUSS 24 Feb 2021 12:15pm)"},{"lineNumber":121,"author":{"gitId":"jaredtengsw"},"content":"```"},{"lineNumber":122,"author":{"gitId":"jaredtengsw"},"content":""},{"lineNumber":123,"author":{"gitId":"jaredtengsw"},"content":"### Finds tasks that matches a keyword: `find`"},{"lineNumber":124,"author":{"gitId":"jaredtengsw"},"content":"Finds and shows a list tasks which contains the inputted keyword."},{"lineNumber":125,"author":{"gitId":"jaredtengsw"},"content":""},{"lineNumber":126,"author":{"gitId":"jaredtengsw"},"content":"Format: `find \u003cKEYWORD\u003e`"},{"lineNumber":127,"author":{"gitId":"jaredtengsw"},"content":""},{"lineNumber":128,"author":{"gitId":"jaredtengsw"},"content":"Example:"},{"lineNumber":129,"author":{"gitId":"jaredtengsw"},"content":"`find assignment`"},{"lineNumber":130,"author":{"gitId":"jaredtengsw"},"content":""},{"lineNumber":131,"author":{"gitId":"jaredtengsw"},"content":"Outcome:"},{"lineNumber":132,"author":{"gitId":"jaredtengsw"},"content":"```"},{"lineNumber":133,"author":{"gitId":"jaredtengsw"},"content":"Master, I have found 2 such tasks:"},{"lineNumber":134,"author":{"gitId":"jaredtengsw"},"content":"1.[T][X]programming assignment"},{"lineNumber":135,"author":{"gitId":"jaredtengsw"},"content":"2.[D][ ]CS2100 written assignment (by: 12 Mar 2021 11:59pm)"},{"lineNumber":136,"author":{"gitId":"jaredtengsw"},"content":"```"},{"lineNumber":137,"author":{"gitId":"jaredtengsw"},"content":""},{"lineNumber":138,"author":{"gitId":"jaredtengsw"},"content":"### Viewing help: `help`"},{"lineNumber":139,"author":{"gitId":"jaredtengsw"},"content":"Format: `help` or `help \u003cCOMMAND\u003e`"},{"lineNumber":140,"author":{"gitId":"jaredtengsw"},"content":""},{"lineNumber":141,"author":{"gitId":"jaredtengsw"},"content":"Example:"},{"lineNumber":142,"author":{"gitId":"jaredtengsw"},"content":"`help` or `help event`"},{"lineNumber":143,"author":{"gitId":"jaredtengsw"},"content":""},{"lineNumber":144,"author":{"gitId":"jaredtengsw"},"content":"Outcome:"},{"lineNumber":145,"author":{"gitId":"jaredtengsw"},"content":""},{"lineNumber":146,"author":{"gitId":"jaredtengsw"},"content":"If only `help` is used:"},{"lineNumber":147,"author":{"gitId":"jaredtengsw"},"content":"```"},{"lineNumber":148,"author":{"gitId":"jaredtengsw"},"content":"Master, here is a list of all the commands:"},{"lineNumber":149,"author":{"gitId":"jaredtengsw"},"content":"bye - Saves the Task List into a .txt file and closes the program."},{"lineNumber":150,"author":{"gitId":"jaredtengsw"},"content":""},{"lineNumber":151,"author":{"gitId":"jaredtengsw"},"content":"deadline - Adds a deadline task into the Task List."},{"lineNumber":152,"author":{"gitId":"jaredtengsw"},"content":"Enter \"deadline TASK_NAME /by YYYY-MM-DD HH:MM\""},{"lineNumber":153,"author":{"gitId":"jaredtengsw"},"content":"Example: deadline English Essay /by 2021-03-08 23:59"},{"lineNumber":154,"author":{"gitId":"jaredtengsw"},"content":""},{"lineNumber":155,"author":{"gitId":"jaredtengsw"},"content":"delete - Deletes the task at the specified position."},{"lineNumber":156,"author":{"gitId":"jaredtengsw"},"content":"Enter \"delete TASK_NUMBER\""},{"lineNumber":157,"author":{"gitId":"jaredtengsw"},"content":"Example: delete 1"},{"lineNumber":158,"author":{"gitId":"jaredtengsw"},"content":""},{"lineNumber":159,"author":{"gitId":"jaredtengsw"},"content":"done - Marks the task at the specified position as completed"},{"lineNumber":160,"author":{"gitId":"jaredtengsw"},"content":"Enter \"done TASK_NUMBER\""},{"lineNumber":161,"author":{"gitId":"jaredtengsw"},"content":"Example: done 1"},{"lineNumber":162,"author":{"gitId":"jaredtengsw"},"content":""},{"lineNumber":163,"author":{"gitId":"jaredtengsw"},"content":"event - Adds an event task into the Task List."},{"lineNumber":164,"author":{"gitId":"jaredtengsw"},"content":"Enter \"event TASK_NAME /at LOCATION_NAME YYYY-MM-DD HH:MM\""},{"lineNumber":165,"author":{"gitId":"jaredtengsw"},"content":"Example: event John\u0027s birthday /at MBS 2021-04-15 19:00"},{"lineNumber":166,"author":{"gitId":"jaredtengsw"},"content":""},{"lineNumber":167,"author":{"gitId":"jaredtengsw"},"content":"find - Finds tasks in the Task List that contains the keyword."},{"lineNumber":168,"author":{"gitId":"jaredtengsw"},"content":"Enter \"find KEYWORD\""},{"lineNumber":169,"author":{"gitId":"jaredtengsw"},"content":"Example: find meeting"},{"lineNumber":170,"author":{"gitId":"jaredtengsw"},"content":""},{"lineNumber":171,"author":{"gitId":"jaredtengsw"},"content":"help - Returns a list of commands and their usage."},{"lineNumber":172,"author":{"gitId":"jaredtengsw"},"content":"Enter \"help\" returns a full list of commands"},{"lineNumber":173,"author":{"gitId":"jaredtengsw"},"content":"Enter \"help COMMAND\" returns the specific instructions for the command"},{"lineNumber":174,"author":{"gitId":"jaredtengsw"},"content":"Example 1: help"},{"lineNumber":175,"author":{"gitId":"jaredtengsw"},"content":"Example 2: help event"},{"lineNumber":176,"author":{"gitId":"jaredtengsw"},"content":""},{"lineNumber":177,"author":{"gitId":"jaredtengsw"},"content":"list - Returns the list of tasks in the Task List"},{"lineNumber":178,"author":{"gitId":"jaredtengsw"},"content":"Enter \"list\""},{"lineNumber":179,"author":{"gitId":"-"},"content":""},{"lineNumber":180,"author":{"gitId":"jaredtengsw"},"content":"todo - Adds a ToDo task into the Task List"},{"lineNumber":181,"author":{"gitId":"jaredtengsw"},"content":"Enter \"todo TASK_NAME\""},{"lineNumber":182,"author":{"gitId":"jaredtengsw"},"content":"Example: todo read finish LOTR"},{"lineNumber":183,"author":{"gitId":"jaredtengsw"},"content":"```"},{"lineNumber":184,"author":{"gitId":"-"},"content":""},{"lineNumber":185,"author":{"gitId":"jaredtengsw"},"content":"If `help \u003cCOMMAND\u003e` is used:"},{"lineNumber":186,"author":{"gitId":"jaredtengsw"},"content":"```"},{"lineNumber":187,"author":{"gitId":"jaredtengsw"},"content":"Here is the information on the command, Master."},{"lineNumber":188,"author":{"gitId":"jaredtengsw"},"content":"event - Adds an event task into the Task List."},{"lineNumber":189,"author":{"gitId":"jaredtengsw"},"content":"Enter \"event TASK_NAME /at LOCATION_NAME YYYY-MM-DD HH:MM\""},{"lineNumber":190,"author":{"gitId":"jaredtengsw"},"content":"Example: event John\u0027s birthday /at MBS 2021-04-15 19:00"},{"lineNumber":191,"author":{"gitId":"jaredtengsw"},"content":"```"},{"lineNumber":192,"author":{"gitId":"-"},"content":""},{"lineNumber":193,"author":{"gitId":"jaredtengsw"},"content":"### Exit the application: `bye`"},{"lineNumber":194,"author":{"gitId":"jaredtengsw"},"content":"Exits Butler Alfred application and saves the task list."},{"lineNumber":195,"author":{"gitId":"-"},"content":""},{"lineNumber":196,"author":{"gitId":"jaredtengsw"},"content":"Format: `bye`"},{"lineNumber":197,"author":{"gitId":"-"},"content":""},{"lineNumber":198,"author":{"gitId":"jaredtengsw"},"content":"Example: `bye`"},{"lineNumber":199,"author":{"gitId":"-"},"content":""},{"lineNumber":200,"author":{"gitId":"jaredtengsw"},"content":"Outcome:"},{"lineNumber":201,"author":{"gitId":"jaredtengsw"},"content":"```"},{"lineNumber":202,"author":{"gitId":"jaredtengsw"},"content":"Have a good day, Master. Take care."},{"lineNumber":203,"author":{"gitId":"jaredtengsw"},"content":"```"},{"lineNumber":204,"author":{"gitId":"-"},"content":""},{"lineNumber":205,"author":{"gitId":"jaredtengsw"},"content":"##FAQ"},{"lineNumber":206,"author":{"gitId":"jaredtengsw"},"content":"Q: How do I transfer my data to another computer?"},{"lineNumber":207,"author":{"gitId":"jaredtengsw"},"content":"A: Install the Butler Alfred app in the other computer and overwrite the empty data file it creates with the file containing your data from your previous Butler Alfred home folder."},{"lineNumber":208,"author":{"gitId":"-"},"content":""},{"lineNumber":209,"author":{"gitId":"jaredtengsw"},"content":"## Command Summary"},{"lineNumber":210,"author":{"gitId":"jaredtengsw"},"content":"Action | Format/Example"},{"lineNumber":211,"author":{"gitId":"jaredtengsw"},"content":"-------------|-------------"},{"lineNumber":212,"author":{"gitId":"jaredtengsw"},"content":"**todo** | `todo \u003cTASK_NAME\u003e` \u003cbr\u003e e.g. `todo groceries shopping`"},{"lineNumber":213,"author":{"gitId":"jaredtengsw"},"content":"**deadline** | `deadline \u003cTASK_NAME\u003e /at \u003cYYYY-MM-DD\u003e \u003cHH:MM\u003e` \u003cbr\u003e e.g. `deadline CS2100 written assignment /by 2021-03-12 23:59`"},{"lineNumber":214,"author":{"gitId":"jaredtengsw"},"content":"**event** | `event \u003cTASK_NAME\u003e /at \u003cLOCATION\u003e \u003cYYYY-MM-DD\u003e \u003cHH:MM\u003e` \u003cbr\u003e e.g. `event lunch /at NUSS 2021-02-24 12:15`"},{"lineNumber":215,"author":{"gitId":"jaredtengsw"},"content":"**done** | `done \u003cTASK_NUMBER\u003e` \u003cbr\u003e e.g. `done 5`"},{"lineNumber":216,"author":{"gitId":"jaredtengsw"},"content":"**delete** | `delete \u003cTASK_NUMBER\u003e` \u003cbr\u003e e.g. `delete 5`"},{"lineNumber":217,"author":{"gitId":"jaredtengsw"},"content":"**list** | `list` \u003cbr\u003e"},{"lineNumber":218,"author":{"gitId":"jaredtengsw"},"content":"**find** | `find \u003cKEYWORD\u003e` \u003cbr\u003e e.g. `find assignment`"},{"lineNumber":219,"author":{"gitId":"jaredtengsw"},"content":"**help** | `help` or `help \u003cCOMMAND\u003e` \u003cbr\u003e e.g.`help` or `help event`"},{"lineNumber":220,"author":{"gitId":"jaredtengsw"},"content":"**bye** | `bye`"}],"authorContributionMap":{"jaredtengsw":209,"-":11}},{"path":"src/main/java/duke/DialogBox.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jaredtengsw"},"content":"package duke;"},{"lineNumber":2,"author":{"gitId":"jaredtengsw"},"content":""},{"lineNumber":3,"author":{"gitId":"jaredtengsw"},"content":"import java.io.IOException;"},{"lineNumber":4,"author":{"gitId":"jaredtengsw"},"content":"import java.util.Collections;"},{"lineNumber":5,"author":{"gitId":"jaredtengsw"},"content":""},{"lineNumber":6,"author":{"gitId":"jaredtengsw"},"content":"import javafx.collections.FXCollections;"},{"lineNumber":7,"author":{"gitId":"jaredtengsw"},"content":"import javafx.collections.ObservableList;"},{"lineNumber":8,"author":{"gitId":"jaredtengsw"},"content":"import javafx.fxml.FXML;"},{"lineNumber":9,"author":{"gitId":"jaredtengsw"},"content":"import javafx.fxml.FXMLLoader;"},{"lineNumber":10,"author":{"gitId":"jaredtengsw"},"content":"import javafx.geometry.Pos;"},{"lineNumber":11,"author":{"gitId":"jaredtengsw"},"content":"import javafx.scene.Node;"},{"lineNumber":12,"author":{"gitId":"jaredtengsw"},"content":"import javafx.scene.control.Label;"},{"lineNumber":13,"author":{"gitId":"jaredtengsw"},"content":"import javafx.scene.image.Image;"},{"lineNumber":14,"author":{"gitId":"jaredtengsw"},"content":"import javafx.scene.image.ImageView;"},{"lineNumber":15,"author":{"gitId":"jaredtengsw"},"content":"import javafx.scene.layout.HBox;"},{"lineNumber":16,"author":{"gitId":"jaredtengsw"},"content":"import javafx.scene.layout.Region;"},{"lineNumber":17,"author":{"gitId":"jaredtengsw"},"content":""},{"lineNumber":18,"author":{"gitId":"jaredtengsw"},"content":"/**"},{"lineNumber":19,"author":{"gitId":"jaredtengsw"},"content":" * An example of a custom control using FXML."},{"lineNumber":20,"author":{"gitId":"jaredtengsw"},"content":" * This control represents a dialog box consisting of an ImageView to represent the speaker\u0027s face and a label"},{"lineNumber":21,"author":{"gitId":"jaredtengsw"},"content":" * containing text from the speaker."},{"lineNumber":22,"author":{"gitId":"jaredtengsw"},"content":" */"},{"lineNumber":23,"author":{"gitId":"jaredtengsw"},"content":"public class DialogBox extends HBox {"},{"lineNumber":24,"author":{"gitId":"jaredtengsw"},"content":"    @FXML"},{"lineNumber":25,"author":{"gitId":"jaredtengsw"},"content":"    private Label dialog;"},{"lineNumber":26,"author":{"gitId":"jaredtengsw"},"content":"    @FXML"},{"lineNumber":27,"author":{"gitId":"jaredtengsw"},"content":"    private ImageView displayPicture;"},{"lineNumber":28,"author":{"gitId":"jaredtengsw"},"content":""},{"lineNumber":29,"author":{"gitId":"jaredtengsw"},"content":"    /**"},{"lineNumber":30,"author":{"gitId":"jaredtengsw"},"content":"     * Constructs a DialogBox object for the program\u0027s responses"},{"lineNumber":31,"author":{"gitId":"jaredtengsw"},"content":"     *"},{"lineNumber":32,"author":{"gitId":"jaredtengsw"},"content":"     * @param dukeText response based on given user input"},{"lineNumber":33,"author":{"gitId":"jaredtengsw"},"content":"     * @param dukeImg image representing duke"},{"lineNumber":34,"author":{"gitId":"jaredtengsw"},"content":"     */"},{"lineNumber":35,"author":{"gitId":"jaredtengsw"},"content":"    private DialogBox(String dukeText, Image dukeImg) {"},{"lineNumber":36,"author":{"gitId":"jaredtengsw"},"content":"        try {"},{"lineNumber":37,"author":{"gitId":"jaredtengsw"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(\"/view/DukeDialogBox.fxml\"));"},{"lineNumber":38,"author":{"gitId":"jaredtengsw"},"content":"            fxmlLoader.setController(this);"},{"lineNumber":39,"author":{"gitId":"jaredtengsw"},"content":"            fxmlLoader.setRoot(this);"},{"lineNumber":40,"author":{"gitId":"jaredtengsw"},"content":"            fxmlLoader.load();"},{"lineNumber":41,"author":{"gitId":"jaredtengsw"},"content":"        } catch (IOException e) {"},{"lineNumber":42,"author":{"gitId":"jaredtengsw"},"content":"            e.printStackTrace();"},{"lineNumber":43,"author":{"gitId":"jaredtengsw"},"content":"        }"},{"lineNumber":44,"author":{"gitId":"jaredtengsw"},"content":""},{"lineNumber":45,"author":{"gitId":"jaredtengsw"},"content":"        dialog.setText(dukeText);"},{"lineNumber":46,"author":{"gitId":"jaredtengsw"},"content":"        dialog.setMinHeight(Region.USE_PREF_SIZE);"},{"lineNumber":47,"author":{"gitId":"jaredtengsw"},"content":"        displayPicture.setImage(dukeImg);"},{"lineNumber":48,"author":{"gitId":"jaredtengsw"},"content":"    }"},{"lineNumber":49,"author":{"gitId":"jaredtengsw"},"content":""},{"lineNumber":50,"author":{"gitId":"jaredtengsw"},"content":"    /**"},{"lineNumber":51,"author":{"gitId":"jaredtengsw"},"content":"     * Constructs a DialogBox object for user inputs"},{"lineNumber":52,"author":{"gitId":"jaredtengsw"},"content":"     *"},{"lineNumber":53,"author":{"gitId":"jaredtengsw"},"content":"     * @param userImg image representing the user"},{"lineNumber":54,"author":{"gitId":"jaredtengsw"},"content":"     * @param userText text input by the user"},{"lineNumber":55,"author":{"gitId":"jaredtengsw"},"content":"     */"},{"lineNumber":56,"author":{"gitId":"jaredtengsw"},"content":"    private DialogBox(Image userImg, String userText) {"},{"lineNumber":57,"author":{"gitId":"jaredtengsw"},"content":"        try {"},{"lineNumber":58,"author":{"gitId":"jaredtengsw"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(\"/view/UserDialogBox.fxml\"));"},{"lineNumber":59,"author":{"gitId":"jaredtengsw"},"content":"            fxmlLoader.setController(this);"},{"lineNumber":60,"author":{"gitId":"jaredtengsw"},"content":"            fxmlLoader.setRoot(this);"},{"lineNumber":61,"author":{"gitId":"jaredtengsw"},"content":"            fxmlLoader.load();"},{"lineNumber":62,"author":{"gitId":"jaredtengsw"},"content":"        } catch (IOException e) {"},{"lineNumber":63,"author":{"gitId":"jaredtengsw"},"content":"            e.printStackTrace();"},{"lineNumber":64,"author":{"gitId":"jaredtengsw"},"content":"        }"},{"lineNumber":65,"author":{"gitId":"jaredtengsw"},"content":"        dialog.setText(userText);"},{"lineNumber":66,"author":{"gitId":"jaredtengsw"},"content":"        displayPicture.setImage(userImg);"},{"lineNumber":67,"author":{"gitId":"jaredtengsw"},"content":"    }"},{"lineNumber":68,"author":{"gitId":"jaredtengsw"},"content":""},{"lineNumber":69,"author":{"gitId":"jaredtengsw"},"content":"    /**"},{"lineNumber":70,"author":{"gitId":"jaredtengsw"},"content":"     * Returns a DialogBox object containing the responses of the duke program."},{"lineNumber":71,"author":{"gitId":"jaredtengsw"},"content":"     *"},{"lineNumber":72,"author":{"gitId":"jaredtengsw"},"content":"     * @param text the response to output based on commands given"},{"lineNumber":73,"author":{"gitId":"jaredtengsw"},"content":"     * @param img the image representing Duke"},{"lineNumber":74,"author":{"gitId":"jaredtengsw"},"content":"     * @return a dialog box with the response based on user input"},{"lineNumber":75,"author":{"gitId":"jaredtengsw"},"content":"     */"},{"lineNumber":76,"author":{"gitId":"jaredtengsw"},"content":"    public static DialogBox getDukeDialog(String text, Image img) {"},{"lineNumber":77,"author":{"gitId":"jaredtengsw"},"content":"        return new DialogBox(text, img);"},{"lineNumber":78,"author":{"gitId":"jaredtengsw"},"content":"    }"},{"lineNumber":79,"author":{"gitId":"jaredtengsw"},"content":""},{"lineNumber":80,"author":{"gitId":"jaredtengsw"},"content":""},{"lineNumber":81,"author":{"gitId":"jaredtengsw"},"content":"    /**"},{"lineNumber":82,"author":{"gitId":"jaredtengsw"},"content":"     * Returns a DialogBox object containing the inputs of the user."},{"lineNumber":83,"author":{"gitId":"jaredtengsw"},"content":"     *"},{"lineNumber":84,"author":{"gitId":"jaredtengsw"},"content":"     * @param text the response to output based on commands given"},{"lineNumber":85,"author":{"gitId":"jaredtengsw"},"content":"     * @param img the image representing the user"},{"lineNumber":86,"author":{"gitId":"jaredtengsw"},"content":"     * @return a dialog box with the user input"},{"lineNumber":87,"author":{"gitId":"jaredtengsw"},"content":"     */"},{"lineNumber":88,"author":{"gitId":"jaredtengsw"},"content":"    public static DialogBox getUserDialog(String text, Image img) {"},{"lineNumber":89,"author":{"gitId":"jaredtengsw"},"content":"        return new DialogBox(img, text);"},{"lineNumber":90,"author":{"gitId":"jaredtengsw"},"content":"    }"},{"lineNumber":91,"author":{"gitId":"jaredtengsw"},"content":"}"}],"authorContributionMap":{"jaredtengsw":91}},{"path":"src/main/java/duke/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jaredtengsw"},"content":"package duke;"},{"lineNumber":2,"author":{"gitId":"jaredtengsw"},"content":""},{"lineNumber":3,"author":{"gitId":"jaredtengsw"},"content":"import duke.commands.Command;"},{"lineNumber":4,"author":{"gitId":"jaredtengsw"},"content":"import duke.exceptions.DukeException;"},{"lineNumber":5,"author":{"gitId":"jaredtengsw"},"content":"import duke.parser.Parser;"},{"lineNumber":6,"author":{"gitId":"jaredtengsw"},"content":"import duke.storage.Storage;"},{"lineNumber":7,"author":{"gitId":"jaredtengsw"},"content":"import duke.taskList.TaskList;"},{"lineNumber":8,"author":{"gitId":"jaredtengsw"},"content":"import duke.ui.Ui;"},{"lineNumber":9,"author":{"gitId":"jaredtengsw"},"content":"import javafx.application.Platform;"},{"lineNumber":10,"author":{"gitId":"jaredtengsw"},"content":""},{"lineNumber":11,"author":{"gitId":"jaredtengsw"},"content":""},{"lineNumber":12,"author":{"gitId":"jaredtengsw"},"content":"/**"},{"lineNumber":13,"author":{"gitId":"jaredtengsw"},"content":" * Duke is the name of program which is a CLI application that"},{"lineNumber":14,"author":{"gitId":"jaredtengsw"},"content":" * reads in user tasks and saves them. Duke helps the user to"},{"lineNumber":15,"author":{"gitId":"jaredtengsw"},"content":" * track their tasks, allowing the user to mark them when they"},{"lineNumber":16,"author":{"gitId":"jaredtengsw"},"content":" * have been completed."},{"lineNumber":17,"author":{"gitId":"jaredtengsw"},"content":" */"},{"lineNumber":18,"author":{"gitId":"-"},"content":"public class Duke {"},{"lineNumber":19,"author":{"gitId":"jaredtengsw"},"content":"    public static final String DIRECTORY \u003d System.getProperty(\"user.dir\");"},{"lineNumber":20,"author":{"gitId":"jaredtengsw"},"content":"    public static TaskList tasks;"},{"lineNumber":21,"author":{"gitId":"jaredtengsw"},"content":"    private Storage storage;"},{"lineNumber":22,"author":{"gitId":"jaredtengsw"},"content":"    private final Ui ui;"},{"lineNumber":23,"author":{"gitId":"jaredtengsw"},"content":""},{"lineNumber":24,"author":{"gitId":"jaredtengsw"},"content":"    /**"},{"lineNumber":25,"author":{"gitId":"jaredtengsw"},"content":"     * Constructor for Duke object"},{"lineNumber":26,"author":{"gitId":"jaredtengsw"},"content":"     */"},{"lineNumber":27,"author":{"gitId":"jaredtengsw"},"content":"    public Duke() {"},{"lineNumber":28,"author":{"gitId":"jaredtengsw"},"content":"        this.ui \u003d new Ui();"},{"lineNumber":29,"author":{"gitId":"jaredtengsw"},"content":"        this.storage \u003d new Storage(this.DIRECTORY);"},{"lineNumber":30,"author":{"gitId":"jaredtengsw"},"content":"        this.tasks \u003d new TaskList();"},{"lineNumber":31,"author":{"gitId":"jaredtengsw"},"content":"        storage.loadTasks(tasks);"},{"lineNumber":32,"author":{"gitId":"jaredtengsw"},"content":"    }"},{"lineNumber":33,"author":{"gitId":"jaredtengsw"},"content":""},{"lineNumber":34,"author":{"gitId":"jaredtengsw"},"content":"    /**"},{"lineNumber":35,"author":{"gitId":"jaredtengsw"},"content":"     * Sets a delayed timeout when exiting the program."},{"lineNumber":36,"author":{"gitId":"jaredtengsw"},"content":"     * @author Shilo"},{"lineNumber":37,"author":{"gitId":"jaredtengsw"},"content":"     * Adapted https://gist.github.com/Shilo/207c7ba4a604b7811b77ff17be8580f3"},{"lineNumber":38,"author":{"gitId":"jaredtengsw"},"content":"     *"},{"lineNumber":39,"author":{"gitId":"jaredtengsw"},"content":"     * @param runnable Function to be executed after the timeout."},{"lineNumber":40,"author":{"gitId":"jaredtengsw"},"content":"     * @param delay Delay before exiting the program in ms."},{"lineNumber":41,"author":{"gitId":"jaredtengsw"},"content":"     */"},{"lineNumber":42,"author":{"gitId":"jaredtengsw"},"content":"    public static void setTimeOut(Runnable runnable, int delay) {"},{"lineNumber":43,"author":{"gitId":"jaredtengsw"},"content":"        new Thread(() -\u003e {"},{"lineNumber":44,"author":{"gitId":"jaredtengsw"},"content":"            try {"},{"lineNumber":45,"author":{"gitId":"jaredtengsw"},"content":"                Thread.sleep(delay);"},{"lineNumber":46,"author":{"gitId":"jaredtengsw"},"content":"                runnable.run();"},{"lineNumber":47,"author":{"gitId":"jaredtengsw"},"content":"            } catch (Exception e) {"},{"lineNumber":48,"author":{"gitId":"jaredtengsw"},"content":"                System.err.println(e);"},{"lineNumber":49,"author":{"gitId":"jaredtengsw"},"content":"            }"},{"lineNumber":50,"author":{"gitId":"jaredtengsw"},"content":"        }).start();"},{"lineNumber":51,"author":{"gitId":"jaredtengsw"},"content":"    }"},{"lineNumber":52,"author":{"gitId":"jaredtengsw"},"content":""},{"lineNumber":53,"author":{"gitId":"jaredtengsw"},"content":"    /**"},{"lineNumber":54,"author":{"gitId":"jaredtengsw"},"content":"     * Runs the programme using a Duke object."},{"lineNumber":55,"author":{"gitId":"jaredtengsw"},"content":"     *"},{"lineNumber":56,"author":{"gitId":"jaredtengsw"},"content":"     * @param input user input"},{"lineNumber":57,"author":{"gitId":"jaredtengsw"},"content":"     * @return String containing the output based on the respective input/command"},{"lineNumber":58,"author":{"gitId":"jaredtengsw"},"content":"     * @throws DukeException"},{"lineNumber":59,"author":{"gitId":"jaredtengsw"},"content":"     */"},{"lineNumber":60,"author":{"gitId":"jaredtengsw"},"content":"    public String getResponse(String input) throws DukeException{"},{"lineNumber":61,"author":{"gitId":"jaredtengsw"},"content":"        try {"},{"lineNumber":62,"author":{"gitId":"jaredtengsw"},"content":"            Command executableCommand \u003d Parser.parse(input);"},{"lineNumber":63,"author":{"gitId":"jaredtengsw"},"content":"            String output \u003d executableCommand.execute(tasks, ui, storage);"},{"lineNumber":64,"author":{"gitId":"jaredtengsw"},"content":"            if (executableCommand.isEndOfProgram()){"},{"lineNumber":65,"author":{"gitId":"jaredtengsw"},"content":"                setTimeOut(() -\u003e {"},{"lineNumber":66,"author":{"gitId":"jaredtengsw"},"content":"                   Platform.exit();"},{"lineNumber":67,"author":{"gitId":"jaredtengsw"},"content":"                   System.exit(0);"},{"lineNumber":68,"author":{"gitId":"jaredtengsw"},"content":"                }, 1500);"},{"lineNumber":69,"author":{"gitId":"jaredtengsw"},"content":"            }"},{"lineNumber":70,"author":{"gitId":"jaredtengsw"},"content":"            return output;"},{"lineNumber":71,"author":{"gitId":"jaredtengsw"},"content":"        } catch (DukeException e){"},{"lineNumber":72,"author":{"gitId":"jaredtengsw"},"content":"            String message \u003d e.toString();"},{"lineNumber":73,"author":{"gitId":"jaredtengsw"},"content":"            ui.formatAndPrintType(message);"},{"lineNumber":74,"author":{"gitId":"jaredtengsw"},"content":"            return message;"},{"lineNumber":75,"author":{"gitId":"jaredtengsw"},"content":"        }"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":77,"author":{"gitId":"-"},"content":"}"}],"authorContributionMap":{"jaredtengsw":74,"-":3}},{"path":"src/main/java/duke/Launcher.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jaredtengsw"},"content":"package duke;"},{"lineNumber":2,"author":{"gitId":"jaredtengsw"},"content":""},{"lineNumber":3,"author":{"gitId":"jaredtengsw"},"content":"import javafx.application.Application;"},{"lineNumber":4,"author":{"gitId":"jaredtengsw"},"content":""},{"lineNumber":5,"author":{"gitId":"jaredtengsw"},"content":"/**"},{"lineNumber":6,"author":{"gitId":"jaredtengsw"},"content":" * A launcher class to workaround classpath issues."},{"lineNumber":7,"author":{"gitId":"jaredtengsw"},"content":" */"},{"lineNumber":8,"author":{"gitId":"jaredtengsw"},"content":"public class Launcher {"},{"lineNumber":9,"author":{"gitId":"jaredtengsw"},"content":"    public static void main(String[] args) {"},{"lineNumber":10,"author":{"gitId":"jaredtengsw"},"content":"        Application.launch(Main.class, args);"},{"lineNumber":11,"author":{"gitId":"jaredtengsw"},"content":"    }"},{"lineNumber":12,"author":{"gitId":"jaredtengsw"},"content":"}"}],"authorContributionMap":{"jaredtengsw":12}},{"path":"src/main/java/duke/Main.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jaredtengsw"},"content":"package duke;"},{"lineNumber":2,"author":{"gitId":"jaredtengsw"},"content":""},{"lineNumber":3,"author":{"gitId":"jaredtengsw"},"content":"import java.io.IOException;"},{"lineNumber":4,"author":{"gitId":"jaredtengsw"},"content":""},{"lineNumber":5,"author":{"gitId":"jaredtengsw"},"content":"import javafx.application.Application;"},{"lineNumber":6,"author":{"gitId":"jaredtengsw"},"content":"import javafx.fxml.FXMLLoader;"},{"lineNumber":7,"author":{"gitId":"jaredtengsw"},"content":"import javafx.scene.Scene;"},{"lineNumber":8,"author":{"gitId":"jaredtengsw"},"content":"import javafx.scene.layout.AnchorPane;"},{"lineNumber":9,"author":{"gitId":"jaredtengsw"},"content":"import javafx.stage.Stage;"},{"lineNumber":10,"author":{"gitId":"jaredtengsw"},"content":""},{"lineNumber":11,"author":{"gitId":"jaredtengsw"},"content":"/**"},{"lineNumber":12,"author":{"gitId":"jaredtengsw"},"content":" * GUI for Duke using FXML."},{"lineNumber":13,"author":{"gitId":"jaredtengsw"},"content":" */"},{"lineNumber":14,"author":{"gitId":"jaredtengsw"},"content":"public class Main extends Application {"},{"lineNumber":15,"author":{"gitId":"jaredtengsw"},"content":"    private static Duke alfred \u003d new Duke();"},{"lineNumber":16,"author":{"gitId":"jaredtengsw"},"content":""},{"lineNumber":17,"author":{"gitId":"jaredtengsw"},"content":"    @Override"},{"lineNumber":18,"author":{"gitId":"jaredtengsw"},"content":"    public void start(Stage stage) {"},{"lineNumber":19,"author":{"gitId":"jaredtengsw"},"content":"        try {"},{"lineNumber":20,"author":{"gitId":"jaredtengsw"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(Main.class.getResource(\"/view/MainWindow.fxml\"));"},{"lineNumber":21,"author":{"gitId":"jaredtengsw"},"content":"            AnchorPane ap \u003d fxmlLoader.load();"},{"lineNumber":22,"author":{"gitId":"jaredtengsw"},"content":"            Scene scene \u003d new Scene(ap);"},{"lineNumber":23,"author":{"gitId":"jaredtengsw"},"content":"            scene.getStylesheets().add(\"view/StyleSheet.css\");"},{"lineNumber":24,"author":{"gitId":"jaredtengsw"},"content":"            stage.setScene(scene);"},{"lineNumber":25,"author":{"gitId":"jaredtengsw"},"content":"            stage.setTitle(\"Butler Alfred\");"},{"lineNumber":26,"author":{"gitId":"jaredtengsw"},"content":"            fxmlLoader.\u003cMainWindow\u003egetController().setDuke(alfred);"},{"lineNumber":27,"author":{"gitId":"jaredtengsw"},"content":"            stage.show();"},{"lineNumber":28,"author":{"gitId":"jaredtengsw"},"content":"        } catch (IOException e) {"},{"lineNumber":29,"author":{"gitId":"jaredtengsw"},"content":"            e.printStackTrace();"},{"lineNumber":30,"author":{"gitId":"jaredtengsw"},"content":"        }"},{"lineNumber":31,"author":{"gitId":"jaredtengsw"},"content":"    }"},{"lineNumber":32,"author":{"gitId":"jaredtengsw"},"content":"}"}],"authorContributionMap":{"jaredtengsw":32}},{"path":"src/main/java/duke/MainWindow.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jaredtengsw"},"content":"package duke;"},{"lineNumber":2,"author":{"gitId":"jaredtengsw"},"content":""},{"lineNumber":3,"author":{"gitId":"jaredtengsw"},"content":"import duke.exceptions.DukeException;"},{"lineNumber":4,"author":{"gitId":"jaredtengsw"},"content":"import duke.ui.Ui;"},{"lineNumber":5,"author":{"gitId":"jaredtengsw"},"content":"import javafx.fxml.FXML;"},{"lineNumber":6,"author":{"gitId":"jaredtengsw"},"content":"import javafx.scene.control.Button;"},{"lineNumber":7,"author":{"gitId":"jaredtengsw"},"content":"import javafx.scene.control.ScrollPane;"},{"lineNumber":8,"author":{"gitId":"jaredtengsw"},"content":"import javafx.scene.control.TextField;"},{"lineNumber":9,"author":{"gitId":"jaredtengsw"},"content":"import javafx.scene.image.Image;"},{"lineNumber":10,"author":{"gitId":"jaredtengsw"},"content":"import javafx.scene.layout.AnchorPane;"},{"lineNumber":11,"author":{"gitId":"jaredtengsw"},"content":"import javafx.scene.layout.VBox;"},{"lineNumber":12,"author":{"gitId":"jaredtengsw"},"content":""},{"lineNumber":13,"author":{"gitId":"jaredtengsw"},"content":"/**"},{"lineNumber":14,"author":{"gitId":"jaredtengsw"},"content":" * Controller for MainWindow. Provides the layout for the other controls."},{"lineNumber":15,"author":{"gitId":"jaredtengsw"},"content":" */"},{"lineNumber":16,"author":{"gitId":"jaredtengsw"},"content":"public class MainWindow extends AnchorPane {"},{"lineNumber":17,"author":{"gitId":"jaredtengsw"},"content":"    @FXML"},{"lineNumber":18,"author":{"gitId":"jaredtengsw"},"content":"    private ScrollPane scrollPane;"},{"lineNumber":19,"author":{"gitId":"jaredtengsw"},"content":"    @FXML"},{"lineNumber":20,"author":{"gitId":"jaredtengsw"},"content":"    private VBox dialogContainer;"},{"lineNumber":21,"author":{"gitId":"jaredtengsw"},"content":"    @FXML"},{"lineNumber":22,"author":{"gitId":"jaredtengsw"},"content":"    private TextField userInput;"},{"lineNumber":23,"author":{"gitId":"jaredtengsw"},"content":"    @FXML"},{"lineNumber":24,"author":{"gitId":"jaredtengsw"},"content":"    private Button sendButton;"},{"lineNumber":25,"author":{"gitId":"jaredtengsw"},"content":""},{"lineNumber":26,"author":{"gitId":"jaredtengsw"},"content":"    private Duke alfred;"},{"lineNumber":27,"author":{"gitId":"jaredtengsw"},"content":""},{"lineNumber":28,"author":{"gitId":"jaredtengsw"},"content":"    private Image userImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaUser.png\"));"},{"lineNumber":29,"author":{"gitId":"jaredtengsw"},"content":"    private Image alfredImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaAlfred.png\"));"},{"lineNumber":30,"author":{"gitId":"jaredtengsw"},"content":"    private Image logoImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/Logo.png\"));"},{"lineNumber":31,"author":{"gitId":"jaredtengsw"},"content":""},{"lineNumber":32,"author":{"gitId":"jaredtengsw"},"content":"    @FXML"},{"lineNumber":33,"author":{"gitId":"jaredtengsw"},"content":"    public void initialize() {"},{"lineNumber":34,"author":{"gitId":"jaredtengsw"},"content":"        scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());"},{"lineNumber":35,"author":{"gitId":"jaredtengsw"},"content":"    }"},{"lineNumber":36,"author":{"gitId":"jaredtengsw"},"content":""},{"lineNumber":37,"author":{"gitId":"jaredtengsw"},"content":"    /**"},{"lineNumber":38,"author":{"gitId":"jaredtengsw"},"content":"     * Outputs the logo and starting message when opening up the app"},{"lineNumber":39,"author":{"gitId":"jaredtengsw"},"content":"     *"},{"lineNumber":40,"author":{"gitId":"jaredtengsw"},"content":"     * @param d the Duke object"},{"lineNumber":41,"author":{"gitId":"jaredtengsw"},"content":"     */"},{"lineNumber":42,"author":{"gitId":"jaredtengsw"},"content":"    public void setDuke(Duke d) {"},{"lineNumber":43,"author":{"gitId":"jaredtengsw"},"content":"        alfred \u003d d;"},{"lineNumber":44,"author":{"gitId":"jaredtengsw"},"content":"        dialogContainer.getChildren().add("},{"lineNumber":45,"author":{"gitId":"jaredtengsw"},"content":"                StartingBox.getStartMessage(Ui.startMessage(), logoImage, alfredImage)"},{"lineNumber":46,"author":{"gitId":"jaredtengsw"},"content":"        );"},{"lineNumber":47,"author":{"gitId":"jaredtengsw"},"content":"    }"},{"lineNumber":48,"author":{"gitId":"jaredtengsw"},"content":""},{"lineNumber":49,"author":{"gitId":"jaredtengsw"},"content":"    /**"},{"lineNumber":50,"author":{"gitId":"jaredtengsw"},"content":"     * Creates two dialog boxes, one echoing user input while the other contains"},{"lineNumber":51,"author":{"gitId":"jaredtengsw"},"content":"     * Duke\u0027s reply and then appends them to the dialog container."},{"lineNumber":52,"author":{"gitId":"jaredtengsw"},"content":"     * Clears the user input after processing."},{"lineNumber":53,"author":{"gitId":"jaredtengsw"},"content":"     */"},{"lineNumber":54,"author":{"gitId":"jaredtengsw"},"content":"    @FXML"},{"lineNumber":55,"author":{"gitId":"jaredtengsw"},"content":"    private void handleUserInput() throws DukeException {"},{"lineNumber":56,"author":{"gitId":"jaredtengsw"},"content":"        String input \u003d userInput.getText();"},{"lineNumber":57,"author":{"gitId":"jaredtengsw"},"content":"        String response \u003d alfred.getResponse(input);"},{"lineNumber":58,"author":{"gitId":"jaredtengsw"},"content":"        dialogContainer.getChildren().addAll("},{"lineNumber":59,"author":{"gitId":"jaredtengsw"},"content":"                DialogBox.getUserDialog(input, userImage),"},{"lineNumber":60,"author":{"gitId":"jaredtengsw"},"content":"                DialogBox.getDukeDialog(response, alfredImage)"},{"lineNumber":61,"author":{"gitId":"jaredtengsw"},"content":"        );"},{"lineNumber":62,"author":{"gitId":"jaredtengsw"},"content":"        userInput.clear();"},{"lineNumber":63,"author":{"gitId":"jaredtengsw"},"content":"    }"},{"lineNumber":64,"author":{"gitId":"jaredtengsw"},"content":"}"}],"authorContributionMap":{"jaredtengsw":64}},{"path":"src/main/java/duke/StartingBox.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jaredtengsw"},"content":"package duke;"},{"lineNumber":2,"author":{"gitId":"jaredtengsw"},"content":""},{"lineNumber":3,"author":{"gitId":"jaredtengsw"},"content":"import java.io.IOException;"},{"lineNumber":4,"author":{"gitId":"jaredtengsw"},"content":"import java.util.Collections;"},{"lineNumber":5,"author":{"gitId":"jaredtengsw"},"content":""},{"lineNumber":6,"author":{"gitId":"jaredtengsw"},"content":"import javafx.collections.FXCollections;"},{"lineNumber":7,"author":{"gitId":"jaredtengsw"},"content":"import javafx.collections.ObservableList;"},{"lineNumber":8,"author":{"gitId":"jaredtengsw"},"content":"import javafx.fxml.FXML;"},{"lineNumber":9,"author":{"gitId":"jaredtengsw"},"content":"import javafx.fxml.FXMLLoader;"},{"lineNumber":10,"author":{"gitId":"jaredtengsw"},"content":"import javafx.geometry.Pos;"},{"lineNumber":11,"author":{"gitId":"jaredtengsw"},"content":"import javafx.scene.Node;"},{"lineNumber":12,"author":{"gitId":"jaredtengsw"},"content":"import javafx.scene.control.Label;"},{"lineNumber":13,"author":{"gitId":"jaredtengsw"},"content":"import javafx.scene.image.Image;"},{"lineNumber":14,"author":{"gitId":"jaredtengsw"},"content":"import javafx.scene.image.ImageView;"},{"lineNumber":15,"author":{"gitId":"jaredtengsw"},"content":"import javafx.scene.layout.HBox;"},{"lineNumber":16,"author":{"gitId":"jaredtengsw"},"content":""},{"lineNumber":17,"author":{"gitId":"jaredtengsw"},"content":"/**"},{"lineNumber":18,"author":{"gitId":"jaredtengsw"},"content":" * An example of a custom control using FXML."},{"lineNumber":19,"author":{"gitId":"jaredtengsw"},"content":" * This control represents a dialog box consisting of an ImageView to represent"},{"lineNumber":20,"author":{"gitId":"jaredtengsw"},"content":" * the speaker\u0027s face and a label containing text from the speaker."},{"lineNumber":21,"author":{"gitId":"jaredtengsw"},"content":" */"},{"lineNumber":22,"author":{"gitId":"jaredtengsw"},"content":"public class StartingBox extends HBox {"},{"lineNumber":23,"author":{"gitId":"jaredtengsw"},"content":"    @FXML"},{"lineNumber":24,"author":{"gitId":"jaredtengsw"},"content":"    private Label welcomeMessage;"},{"lineNumber":25,"author":{"gitId":"jaredtengsw"},"content":"    @FXML"},{"lineNumber":26,"author":{"gitId":"jaredtengsw"},"content":"    private ImageView logoPhoto;"},{"lineNumber":27,"author":{"gitId":"jaredtengsw"},"content":"    @FXML"},{"lineNumber":28,"author":{"gitId":"jaredtengsw"},"content":"    private ImageView dukePhoto;"},{"lineNumber":29,"author":{"gitId":"jaredtengsw"},"content":""},{"lineNumber":30,"author":{"gitId":"jaredtengsw"},"content":"    /**"},{"lineNumber":31,"author":{"gitId":"jaredtengsw"},"content":"     * Generates the starting box of the CLI app"},{"lineNumber":32,"author":{"gitId":"jaredtengsw"},"content":"     *"},{"lineNumber":33,"author":{"gitId":"jaredtengsw"},"content":"     * @param text String to be displayed when the app starts"},{"lineNumber":34,"author":{"gitId":"jaredtengsw"},"content":"     * @param img The image displayed as the Logo when the app starts"},{"lineNumber":35,"author":{"gitId":"jaredtengsw"},"content":"     * @param dukeImg The image of Duke when it starts"},{"lineNumber":36,"author":{"gitId":"jaredtengsw"},"content":"     */"},{"lineNumber":37,"author":{"gitId":"jaredtengsw"},"content":"    private StartingBox(String text, Image img, Image dukeImg) {"},{"lineNumber":38,"author":{"gitId":"jaredtengsw"},"content":"        try {"},{"lineNumber":39,"author":{"gitId":"jaredtengsw"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(\"/view/StartingBox.fxml\"));"},{"lineNumber":40,"author":{"gitId":"jaredtengsw"},"content":"            fxmlLoader.setController(this);"},{"lineNumber":41,"author":{"gitId":"jaredtengsw"},"content":"            fxmlLoader.setRoot(this);"},{"lineNumber":42,"author":{"gitId":"jaredtengsw"},"content":"            fxmlLoader.load();"},{"lineNumber":43,"author":{"gitId":"jaredtengsw"},"content":"        } catch (IOException e) {"},{"lineNumber":44,"author":{"gitId":"jaredtengsw"},"content":"            e.printStackTrace();"},{"lineNumber":45,"author":{"gitId":"jaredtengsw"},"content":"        }"},{"lineNumber":46,"author":{"gitId":"jaredtengsw"},"content":""},{"lineNumber":47,"author":{"gitId":"jaredtengsw"},"content":"        welcomeMessage.setText(text);"},{"lineNumber":48,"author":{"gitId":"jaredtengsw"},"content":"        logoPhoto.setImage(img);"},{"lineNumber":49,"author":{"gitId":"jaredtengsw"},"content":"        dukePhoto.setImage(dukeImg);"},{"lineNumber":50,"author":{"gitId":"jaredtengsw"},"content":"    }"},{"lineNumber":51,"author":{"gitId":"jaredtengsw"},"content":""},{"lineNumber":52,"author":{"gitId":"jaredtengsw"},"content":""},{"lineNumber":53,"author":{"gitId":"jaredtengsw"},"content":"    public static StartingBox getStartMessage(String text, Image img, Image dukeImg) {"},{"lineNumber":54,"author":{"gitId":"jaredtengsw"},"content":"        return new StartingBox(text, img, dukeImg);"},{"lineNumber":55,"author":{"gitId":"jaredtengsw"},"content":"    }"},{"lineNumber":56,"author":{"gitId":"jaredtengsw"},"content":""},{"lineNumber":57,"author":{"gitId":"jaredtengsw"},"content":""},{"lineNumber":58,"author":{"gitId":"jaredtengsw"},"content":"}"}],"authorContributionMap":{"jaredtengsw":58}},{"path":"src/main/java/duke/commands/AddCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jaredtengsw"},"content":"package duke.commands;"},{"lineNumber":2,"author":{"gitId":"jaredtengsw"},"content":""},{"lineNumber":3,"author":{"gitId":"jaredtengsw"},"content":"import duke.exceptions.*;"},{"lineNumber":4,"author":{"gitId":"jaredtengsw"},"content":"import duke.parser.Parser;"},{"lineNumber":5,"author":{"gitId":"jaredtengsw"},"content":"import duke.storage.Storage;"},{"lineNumber":6,"author":{"gitId":"jaredtengsw"},"content":"import duke.taskList.TaskList;"},{"lineNumber":7,"author":{"gitId":"jaredtengsw"},"content":"import duke.tasks.*;"},{"lineNumber":8,"author":{"gitId":"jaredtengsw"},"content":"import duke.ui.Ui;"},{"lineNumber":9,"author":{"gitId":"jaredtengsw"},"content":""},{"lineNumber":10,"author":{"gitId":"jaredtengsw"},"content":"/**"},{"lineNumber":11,"author":{"gitId":"jaredtengsw"},"content":" * A command class that adds a new task into the taskList"},{"lineNumber":12,"author":{"gitId":"jaredtengsw"},"content":" */"},{"lineNumber":13,"author":{"gitId":"jaredtengsw"},"content":"public class AddCommand extends Command {"},{"lineNumber":14,"author":{"gitId":"jaredtengsw"},"content":"    public AddCommand(String description) {"},{"lineNumber":15,"author":{"gitId":"jaredtengsw"},"content":"        super(description);"},{"lineNumber":16,"author":{"gitId":"jaredtengsw"},"content":"    }"},{"lineNumber":17,"author":{"gitId":"jaredtengsw"},"content":""},{"lineNumber":18,"author":{"gitId":"jaredtengsw"},"content":"    /**"},{"lineNumber":19,"author":{"gitId":"jaredtengsw"},"content":"     * Adds a new task to taskList"},{"lineNumber":20,"author":{"gitId":"jaredtengsw"},"content":"     *"},{"lineNumber":21,"author":{"gitId":"jaredtengsw"},"content":"     * @param taskList the list of tasks"},{"lineNumber":22,"author":{"gitId":"jaredtengsw"},"content":"     * @param ui the UI object"},{"lineNumber":23,"author":{"gitId":"jaredtengsw"},"content":"     * @param storage the storage object"},{"lineNumber":24,"author":{"gitId":"jaredtengsw"},"content":"     * @return String message based on AddCommand"},{"lineNumber":25,"author":{"gitId":"jaredtengsw"},"content":"     * @throws DukeException"},{"lineNumber":26,"author":{"gitId":"jaredtengsw"},"content":"     */"},{"lineNumber":27,"author":{"gitId":"jaredtengsw"},"content":"    public String execute(TaskList taskList, Ui ui, Storage storage) throws DukeException {"},{"lineNumber":28,"author":{"gitId":"jaredtengsw"},"content":"        Task taskItem \u003d new Task(\"placebo task\", taskType.TASK);"},{"lineNumber":29,"author":{"gitId":"jaredtengsw"},"content":"        String[] inputList \u003d description.trim().split(\" \", 2);"},{"lineNumber":30,"author":{"gitId":"jaredtengsw"},"content":""},{"lineNumber":31,"author":{"gitId":"jaredtengsw"},"content":"        assert(inputList.length \u003e\u003d 2);"},{"lineNumber":32,"author":{"gitId":"jaredtengsw"},"content":""},{"lineNumber":33,"author":{"gitId":"jaredtengsw"},"content":"        if (inputList.length \u003c 2) {"},{"lineNumber":34,"author":{"gitId":"jaredtengsw"},"content":"            throw new IncompleteCommandException();"},{"lineNumber":35,"author":{"gitId":"jaredtengsw"},"content":"        }"},{"lineNumber":36,"author":{"gitId":"jaredtengsw"},"content":""},{"lineNumber":37,"author":{"gitId":"jaredtengsw"},"content":"        String command \u003d inputList[0].trim();"},{"lineNumber":38,"author":{"gitId":"jaredtengsw"},"content":""},{"lineNumber":39,"author":{"gitId":"jaredtengsw"},"content":"        if (Parser.isToDo(command)) {"},{"lineNumber":40,"author":{"gitId":"jaredtengsw"},"content":"            taskItem \u003d new ToDo(inputList[1].trim());"},{"lineNumber":41,"author":{"gitId":"jaredtengsw"},"content":"        } else if (Parser.isDeadline(command)) {"},{"lineNumber":42,"author":{"gitId":"jaredtengsw"},"content":"            String[] taskDeadline \u003d inputList[1].trim().split(\"/by\", 2);"},{"lineNumber":43,"author":{"gitId":"jaredtengsw"},"content":""},{"lineNumber":44,"author":{"gitId":"jaredtengsw"},"content":"            try {"},{"lineNumber":45,"author":{"gitId":"jaredtengsw"},"content":"                taskItem \u003d new Deadline(taskDeadline[0].trim(), taskDeadline[1].trim());"},{"lineNumber":46,"author":{"gitId":"jaredtengsw"},"content":"            } catch (Exception e) {"},{"lineNumber":47,"author":{"gitId":"jaredtengsw"},"content":"                throw new DeadLineException();"},{"lineNumber":48,"author":{"gitId":"jaredtengsw"},"content":"            }"},{"lineNumber":49,"author":{"gitId":"jaredtengsw"},"content":"        } else if (Parser.isEvent(command)) {"},{"lineNumber":50,"author":{"gitId":"jaredtengsw"},"content":"            String[] taskEvent \u003d inputList[1].trim().split(\"/at\", 2);"},{"lineNumber":51,"author":{"gitId":"jaredtengsw"},"content":""},{"lineNumber":52,"author":{"gitId":"jaredtengsw"},"content":"            try {"},{"lineNumber":53,"author":{"gitId":"jaredtengsw"},"content":"                taskItem \u003d new Event(taskEvent[0].trim(), taskEvent[1].trim());"},{"lineNumber":54,"author":{"gitId":"jaredtengsw"},"content":"            } catch (Exception e) {"},{"lineNumber":55,"author":{"gitId":"jaredtengsw"},"content":"                throw new EventException();"},{"lineNumber":56,"author":{"gitId":"jaredtengsw"},"content":"            }"},{"lineNumber":57,"author":{"gitId":"jaredtengsw"},"content":"        } else {"},{"lineNumber":58,"author":{"gitId":"jaredtengsw"},"content":"            throw new InvalidCommandException();"},{"lineNumber":59,"author":{"gitId":"jaredtengsw"},"content":"        }"},{"lineNumber":60,"author":{"gitId":"jaredtengsw"},"content":"        taskList.addTask(taskItem);"},{"lineNumber":61,"author":{"gitId":"jaredtengsw"},"content":"        return ui.addedTask(taskItem, taskList.getSize());"},{"lineNumber":62,"author":{"gitId":"jaredtengsw"},"content":"    }"},{"lineNumber":63,"author":{"gitId":"jaredtengsw"},"content":""},{"lineNumber":64,"author":{"gitId":"jaredtengsw"},"content":"    @Override"},{"lineNumber":65,"author":{"gitId":"jaredtengsw"},"content":"    public boolean isEndOfProgram() {"},{"lineNumber":66,"author":{"gitId":"jaredtengsw"},"content":"        return false;"},{"lineNumber":67,"author":{"gitId":"jaredtengsw"},"content":"    }"},{"lineNumber":68,"author":{"gitId":"jaredtengsw"},"content":"}"}],"authorContributionMap":{"jaredtengsw":68}},{"path":"src/main/java/duke/commands/ByeCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jaredtengsw"},"content":"package duke.commands;"},{"lineNumber":2,"author":{"gitId":"jaredtengsw"},"content":""},{"lineNumber":3,"author":{"gitId":"jaredtengsw"},"content":"import duke.exceptions.DukeException;"},{"lineNumber":4,"author":{"gitId":"jaredtengsw"},"content":"import duke.exceptions.IncompleteCommandException;"},{"lineNumber":5,"author":{"gitId":"jaredtengsw"},"content":"import duke.storage.Storage;"},{"lineNumber":6,"author":{"gitId":"jaredtengsw"},"content":"import duke.taskList.TaskList;"},{"lineNumber":7,"author":{"gitId":"jaredtengsw"},"content":"import duke.ui.Ui;"},{"lineNumber":8,"author":{"gitId":"jaredtengsw"},"content":""},{"lineNumber":9,"author":{"gitId":"jaredtengsw"},"content":"/**"},{"lineNumber":10,"author":{"gitId":"jaredtengsw"},"content":" * Ends the program"},{"lineNumber":11,"author":{"gitId":"jaredtengsw"},"content":" */"},{"lineNumber":12,"author":{"gitId":"jaredtengsw"},"content":"public class ByeCommand extends Command {"},{"lineNumber":13,"author":{"gitId":"jaredtengsw"},"content":"    public ByeCommand(String description) {"},{"lineNumber":14,"author":{"gitId":"jaredtengsw"},"content":"        super(description);"},{"lineNumber":15,"author":{"gitId":"jaredtengsw"},"content":"    }"},{"lineNumber":16,"author":{"gitId":"jaredtengsw"},"content":""},{"lineNumber":17,"author":{"gitId":"jaredtengsw"},"content":"    /**"},{"lineNumber":18,"author":{"gitId":"jaredtengsw"},"content":"     * Gives a goodbye greeting"},{"lineNumber":19,"author":{"gitId":"jaredtengsw"},"content":"     *"},{"lineNumber":20,"author":{"gitId":"jaredtengsw"},"content":"     * @param taskList the list of tasks"},{"lineNumber":21,"author":{"gitId":"jaredtengsw"},"content":"     * @param ui the UI object"},{"lineNumber":22,"author":{"gitId":"jaredtengsw"},"content":"     * @param storage the storage object"},{"lineNumber":23,"author":{"gitId":"jaredtengsw"},"content":"     * @return String which is a goodbye greeting after saving taskList into storage"},{"lineNumber":24,"author":{"gitId":"jaredtengsw"},"content":"     * @throws DukeException"},{"lineNumber":25,"author":{"gitId":"jaredtengsw"},"content":"     */"},{"lineNumber":26,"author":{"gitId":"jaredtengsw"},"content":"    public String execute(TaskList taskList, Ui ui, Storage storage) throws DukeException {"},{"lineNumber":27,"author":{"gitId":"jaredtengsw"},"content":"        String[] inputList \u003d description.trim().split(\" \", 2);"},{"lineNumber":28,"author":{"gitId":"jaredtengsw"},"content":""},{"lineNumber":29,"author":{"gitId":"jaredtengsw"},"content":"        assert(inputList.length \u003d\u003d 1);"},{"lineNumber":30,"author":{"gitId":"jaredtengsw"},"content":""},{"lineNumber":31,"author":{"gitId":"jaredtengsw"},"content":"        if (inputList.length \u003e 1) {"},{"lineNumber":32,"author":{"gitId":"jaredtengsw"},"content":"            throw new IncompleteCommandException();"},{"lineNumber":33,"author":{"gitId":"jaredtengsw"},"content":"        }"},{"lineNumber":34,"author":{"gitId":"jaredtengsw"},"content":""},{"lineNumber":35,"author":{"gitId":"jaredtengsw"},"content":"        storage.saveTaskList(taskList);"},{"lineNumber":36,"author":{"gitId":"jaredtengsw"},"content":"        return ui.goodBye();"},{"lineNumber":37,"author":{"gitId":"jaredtengsw"},"content":"    }"},{"lineNumber":38,"author":{"gitId":"jaredtengsw"},"content":""},{"lineNumber":39,"author":{"gitId":"jaredtengsw"},"content":"    @Override"},{"lineNumber":40,"author":{"gitId":"jaredtengsw"},"content":"    public boolean isEndOfProgram() {"},{"lineNumber":41,"author":{"gitId":"jaredtengsw"},"content":"        return true;"},{"lineNumber":42,"author":{"gitId":"jaredtengsw"},"content":"    }"},{"lineNumber":43,"author":{"gitId":"jaredtengsw"},"content":"}"}],"authorContributionMap":{"jaredtengsw":43}},{"path":"src/main/java/duke/commands/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jaredtengsw"},"content":"package duke.commands;"},{"lineNumber":2,"author":{"gitId":"jaredtengsw"},"content":""},{"lineNumber":3,"author":{"gitId":"jaredtengsw"},"content":"import duke.exceptions.DukeException;"},{"lineNumber":4,"author":{"gitId":"jaredtengsw"},"content":"import duke.storage.Storage;"},{"lineNumber":5,"author":{"gitId":"jaredtengsw"},"content":"import duke.taskList.TaskList;"},{"lineNumber":6,"author":{"gitId":"jaredtengsw"},"content":"import duke.ui.Ui;"},{"lineNumber":7,"author":{"gitId":"jaredtengsw"},"content":""},{"lineNumber":8,"author":{"gitId":"jaredtengsw"},"content":""},{"lineNumber":9,"author":{"gitId":"jaredtengsw"},"content":"/**"},{"lineNumber":10,"author":{"gitId":"jaredtengsw"},"content":" * A command class to represent all the commands/actions"},{"lineNumber":11,"author":{"gitId":"jaredtengsw"},"content":" * recognised by the program."},{"lineNumber":12,"author":{"gitId":"jaredtengsw"},"content":" */"},{"lineNumber":13,"author":{"gitId":"jaredtengsw"},"content":"public abstract class Command {"},{"lineNumber":14,"author":{"gitId":"jaredtengsw"},"content":"    public final String description;"},{"lineNumber":15,"author":{"gitId":"jaredtengsw"},"content":""},{"lineNumber":16,"author":{"gitId":"jaredtengsw"},"content":"    Command(String description) {"},{"lineNumber":17,"author":{"gitId":"jaredtengsw"},"content":"        this.description \u003d description;"},{"lineNumber":18,"author":{"gitId":"jaredtengsw"},"content":"    }"},{"lineNumber":19,"author":{"gitId":"jaredtengsw"},"content":""},{"lineNumber":20,"author":{"gitId":"jaredtengsw"},"content":"    /**"},{"lineNumber":21,"author":{"gitId":"jaredtengsw"},"content":"     * Returns true if the command ends the program."},{"lineNumber":22,"author":{"gitId":"jaredtengsw"},"content":"     */"},{"lineNumber":23,"author":{"gitId":"jaredtengsw"},"content":"    public abstract boolean isEndOfProgram();"},{"lineNumber":24,"author":{"gitId":"jaredtengsw"},"content":""},{"lineNumber":25,"author":{"gitId":"jaredtengsw"},"content":"    /**"},{"lineNumber":26,"author":{"gitId":"jaredtengsw"},"content":"     * Abstract method to execute command"},{"lineNumber":27,"author":{"gitId":"jaredtengsw"},"content":"     *"},{"lineNumber":28,"author":{"gitId":"jaredtengsw"},"content":"     * @param taskList the list of tasks"},{"lineNumber":29,"author":{"gitId":"jaredtengsw"},"content":"     * @param ui the UI object"},{"lineNumber":30,"author":{"gitId":"jaredtengsw"},"content":"     * @param storage the storage object"},{"lineNumber":31,"author":{"gitId":"jaredtengsw"},"content":"     * @return String stating what command has been executed"},{"lineNumber":32,"author":{"gitId":"jaredtengsw"},"content":"     * @throws DukeException, throws error warning for errors."},{"lineNumber":33,"author":{"gitId":"jaredtengsw"},"content":"     */"},{"lineNumber":34,"author":{"gitId":"jaredtengsw"},"content":"    public abstract String execute("},{"lineNumber":35,"author":{"gitId":"jaredtengsw"},"content":"            TaskList taskList, Ui ui, Storage storage) throws DukeException;"},{"lineNumber":36,"author":{"gitId":"jaredtengsw"},"content":"}"}],"authorContributionMap":{"jaredtengsw":36}},{"path":"src/main/java/duke/commands/DeleteCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jaredtengsw"},"content":"package duke.commands;"},{"lineNumber":2,"author":{"gitId":"jaredtengsw"},"content":""},{"lineNumber":3,"author":{"gitId":"jaredtengsw"},"content":"import duke.exceptions.DukeException;"},{"lineNumber":4,"author":{"gitId":"jaredtengsw"},"content":"import duke.exceptions.MissingArgumentException;"},{"lineNumber":5,"author":{"gitId":"jaredtengsw"},"content":"import duke.exceptions.NotExistingTaskException;"},{"lineNumber":6,"author":{"gitId":"jaredtengsw"},"content":"import duke.storage.Storage;"},{"lineNumber":7,"author":{"gitId":"jaredtengsw"},"content":"import duke.taskList.TaskList;"},{"lineNumber":8,"author":{"gitId":"jaredtengsw"},"content":"import duke.ui.Ui;"},{"lineNumber":9,"author":{"gitId":"jaredtengsw"},"content":"import duke.tasks.Task;"},{"lineNumber":10,"author":{"gitId":"jaredtengsw"},"content":""},{"lineNumber":11,"author":{"gitId":"jaredtengsw"},"content":"/**"},{"lineNumber":12,"author":{"gitId":"jaredtengsw"},"content":" * A command class that deletes a task from the taskList"},{"lineNumber":13,"author":{"gitId":"jaredtengsw"},"content":" */"},{"lineNumber":14,"author":{"gitId":"jaredtengsw"},"content":"public class DeleteCommand extends Command {"},{"lineNumber":15,"author":{"gitId":"jaredtengsw"},"content":"    public DeleteCommand(String description) {"},{"lineNumber":16,"author":{"gitId":"jaredtengsw"},"content":"        super(description);"},{"lineNumber":17,"author":{"gitId":"jaredtengsw"},"content":"    }"},{"lineNumber":18,"author":{"gitId":"jaredtengsw"},"content":""},{"lineNumber":19,"author":{"gitId":"jaredtengsw"},"content":"    /**"},{"lineNumber":20,"author":{"gitId":"jaredtengsw"},"content":"     * Deletes an existing task in taskList"},{"lineNumber":21,"author":{"gitId":"jaredtengsw"},"content":"     *"},{"lineNumber":22,"author":{"gitId":"jaredtengsw"},"content":"     * @param taskList the list of tasks"},{"lineNumber":23,"author":{"gitId":"jaredtengsw"},"content":"     * @param ui the UI object"},{"lineNumber":24,"author":{"gitId":"jaredtengsw"},"content":"     * @param storage the storage object"},{"lineNumber":25,"author":{"gitId":"jaredtengsw"},"content":"     * @return String message based on Delete Command"},{"lineNumber":26,"author":{"gitId":"jaredtengsw"},"content":"     * @throws DukeException"},{"lineNumber":27,"author":{"gitId":"jaredtengsw"},"content":"     */"},{"lineNumber":28,"author":{"gitId":"jaredtengsw"},"content":"    public String execute(TaskList taskList, Ui ui, Storage storage) throws DukeException {"},{"lineNumber":29,"author":{"gitId":"jaredtengsw"},"content":"        String[] inputList \u003d description.trim().split(\" \",2);"},{"lineNumber":30,"author":{"gitId":"jaredtengsw"},"content":""},{"lineNumber":31,"author":{"gitId":"jaredtengsw"},"content":"        assert(inputList.length \u003e\u003d 2);"},{"lineNumber":32,"author":{"gitId":"jaredtengsw"},"content":""},{"lineNumber":33,"author":{"gitId":"jaredtengsw"},"content":"        if (inputList.length \u003c 2) {"},{"lineNumber":34,"author":{"gitId":"jaredtengsw"},"content":"            throw new MissingArgumentException();"},{"lineNumber":35,"author":{"gitId":"jaredtengsw"},"content":"        }"},{"lineNumber":36,"author":{"gitId":"jaredtengsw"},"content":""},{"lineNumber":37,"author":{"gitId":"jaredtengsw"},"content":"        int currentIndex \u003d Integer.parseInt(inputList[1]) - 1;"},{"lineNumber":38,"author":{"gitId":"jaredtengsw"},"content":""},{"lineNumber":39,"author":{"gitId":"jaredtengsw"},"content":"        if (currentIndex \u003e taskList.getSize() || currentIndex + 1 \u003c\u003d 0) {"},{"lineNumber":40,"author":{"gitId":"jaredtengsw"},"content":"            throw new NotExistingTaskException();"},{"lineNumber":41,"author":{"gitId":"jaredtengsw"},"content":"        } else {"},{"lineNumber":42,"author":{"gitId":"jaredtengsw"},"content":"            Task deletedTask \u003d taskList.removeTask(currentIndex);"},{"lineNumber":43,"author":{"gitId":"jaredtengsw"},"content":"            return ui.deletedTask(deletedTask, taskList.getSize());"},{"lineNumber":44,"author":{"gitId":"jaredtengsw"},"content":"        }"},{"lineNumber":45,"author":{"gitId":"jaredtengsw"},"content":"    }"},{"lineNumber":46,"author":{"gitId":"jaredtengsw"},"content":""},{"lineNumber":47,"author":{"gitId":"jaredtengsw"},"content":"    @Override"},{"lineNumber":48,"author":{"gitId":"jaredtengsw"},"content":"    public boolean isEndOfProgram() {"},{"lineNumber":49,"author":{"gitId":"jaredtengsw"},"content":"        return false;"},{"lineNumber":50,"author":{"gitId":"jaredtengsw"},"content":"    }"},{"lineNumber":51,"author":{"gitId":"jaredtengsw"},"content":"}"}],"authorContributionMap":{"jaredtengsw":51}},{"path":"src/main/java/duke/commands/DoneCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jaredtengsw"},"content":"package duke.commands;"},{"lineNumber":2,"author":{"gitId":"jaredtengsw"},"content":""},{"lineNumber":3,"author":{"gitId":"jaredtengsw"},"content":"import duke.exceptions.DukeException;"},{"lineNumber":4,"author":{"gitId":"jaredtengsw"},"content":"import duke.exceptions.MissingArgumentException;"},{"lineNumber":5,"author":{"gitId":"jaredtengsw"},"content":"import duke.exceptions.NotExistingTaskException;"},{"lineNumber":6,"author":{"gitId":"jaredtengsw"},"content":"import duke.exceptions.TaskDoneException;"},{"lineNumber":7,"author":{"gitId":"jaredtengsw"},"content":"import duke.storage.Storage;"},{"lineNumber":8,"author":{"gitId":"jaredtengsw"},"content":"import duke.taskList.TaskList;"},{"lineNumber":9,"author":{"gitId":"jaredtengsw"},"content":"import duke.ui.Ui;"},{"lineNumber":10,"author":{"gitId":"jaredtengsw"},"content":"import duke.tasks.Task;"},{"lineNumber":11,"author":{"gitId":"jaredtengsw"},"content":""},{"lineNumber":12,"author":{"gitId":"jaredtengsw"},"content":"/**"},{"lineNumber":13,"author":{"gitId":"jaredtengsw"},"content":" * A command class that marks a task as completed."},{"lineNumber":14,"author":{"gitId":"jaredtengsw"},"content":" */"},{"lineNumber":15,"author":{"gitId":"jaredtengsw"},"content":"public class DoneCommand extends Command {"},{"lineNumber":16,"author":{"gitId":"jaredtengsw"},"content":"    public DoneCommand(String description) {"},{"lineNumber":17,"author":{"gitId":"jaredtengsw"},"content":"        super(description);"},{"lineNumber":18,"author":{"gitId":"jaredtengsw"},"content":"    }"},{"lineNumber":19,"author":{"gitId":"jaredtengsw"},"content":""},{"lineNumber":20,"author":{"gitId":"jaredtengsw"},"content":"    /**"},{"lineNumber":21,"author":{"gitId":"jaredtengsw"},"content":"     * Marks a task when it is completed"},{"lineNumber":22,"author":{"gitId":"jaredtengsw"},"content":"     *"},{"lineNumber":23,"author":{"gitId":"jaredtengsw"},"content":"     * @param taskList the list of tasks"},{"lineNumber":24,"author":{"gitId":"jaredtengsw"},"content":"     * @param ui the UI object"},{"lineNumber":25,"author":{"gitId":"jaredtengsw"},"content":"     * @param storage the storage object"},{"lineNumber":26,"author":{"gitId":"jaredtengsw"},"content":"     * @return String messaged based on Done Command"},{"lineNumber":27,"author":{"gitId":"jaredtengsw"},"content":"     * @throws DukeException"},{"lineNumber":28,"author":{"gitId":"jaredtengsw"},"content":"     */"},{"lineNumber":29,"author":{"gitId":"jaredtengsw"},"content":"    public String execute(TaskList taskList, Ui ui, Storage storage) throws DukeException {"},{"lineNumber":30,"author":{"gitId":"jaredtengsw"},"content":"        String[] inputList \u003d description.trim().split(\" \", 2);"},{"lineNumber":31,"author":{"gitId":"jaredtengsw"},"content":""},{"lineNumber":32,"author":{"gitId":"jaredtengsw"},"content":"        assert(inputList.length \u003e\u003d 2);"},{"lineNumber":33,"author":{"gitId":"jaredtengsw"},"content":""},{"lineNumber":34,"author":{"gitId":"jaredtengsw"},"content":"        if (inputList.length \u003c 2) {"},{"lineNumber":35,"author":{"gitId":"jaredtengsw"},"content":"            throw new MissingArgumentException();"},{"lineNumber":36,"author":{"gitId":"jaredtengsw"},"content":"        }"},{"lineNumber":37,"author":{"gitId":"jaredtengsw"},"content":""},{"lineNumber":38,"author":{"gitId":"jaredtengsw"},"content":"        int currentIndex \u003d Integer.parseInt(inputList[1]) - 1;"},{"lineNumber":39,"author":{"gitId":"jaredtengsw"},"content":""},{"lineNumber":40,"author":{"gitId":"jaredtengsw"},"content":"        if (currentIndex + 1 \u003e taskList.getSize() || currentIndex + 1 \u003c\u003d 0) {"},{"lineNumber":41,"author":{"gitId":"jaredtengsw"},"content":"            throw new NotExistingTaskException();"},{"lineNumber":42,"author":{"gitId":"jaredtengsw"},"content":"        } else {"},{"lineNumber":43,"author":{"gitId":"jaredtengsw"},"content":"            Task taskItem \u003d taskList.getTask(currentIndex);"},{"lineNumber":44,"author":{"gitId":"jaredtengsw"},"content":""},{"lineNumber":45,"author":{"gitId":"jaredtengsw"},"content":"            if (taskItem.getDoneStatus()) {"},{"lineNumber":46,"author":{"gitId":"jaredtengsw"},"content":"                throw new TaskDoneException(taskItem);"},{"lineNumber":47,"author":{"gitId":"jaredtengsw"},"content":"            } else {"},{"lineNumber":48,"author":{"gitId":"jaredtengsw"},"content":"                taskItem.markCompleted();"},{"lineNumber":49,"author":{"gitId":"jaredtengsw"},"content":"                return ui.taskDone(taskItem);"},{"lineNumber":50,"author":{"gitId":"jaredtengsw"},"content":"            }"},{"lineNumber":51,"author":{"gitId":"jaredtengsw"},"content":"        }"},{"lineNumber":52,"author":{"gitId":"jaredtengsw"},"content":"    }"},{"lineNumber":53,"author":{"gitId":"jaredtengsw"},"content":""},{"lineNumber":54,"author":{"gitId":"jaredtengsw"},"content":"    @Override"},{"lineNumber":55,"author":{"gitId":"jaredtengsw"},"content":"    public boolean isEndOfProgram() {"},{"lineNumber":56,"author":{"gitId":"jaredtengsw"},"content":"        return false;"},{"lineNumber":57,"author":{"gitId":"jaredtengsw"},"content":"    }"},{"lineNumber":58,"author":{"gitId":"jaredtengsw"},"content":"}"}],"authorContributionMap":{"jaredtengsw":58}},{"path":"src/main/java/duke/commands/FindCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jaredtengsw"},"content":"package duke.commands;"},{"lineNumber":2,"author":{"gitId":"jaredtengsw"},"content":""},{"lineNumber":3,"author":{"gitId":"jaredtengsw"},"content":"import duke.exceptions.DukeException;"},{"lineNumber":4,"author":{"gitId":"jaredtengsw"},"content":"import duke.storage.Storage;"},{"lineNumber":5,"author":{"gitId":"jaredtengsw"},"content":"import duke.taskList.TaskList;"},{"lineNumber":6,"author":{"gitId":"jaredtengsw"},"content":"import duke.tasks.Task;"},{"lineNumber":7,"author":{"gitId":"jaredtengsw"},"content":"import duke.ui.Ui;"},{"lineNumber":8,"author":{"gitId":"jaredtengsw"},"content":""},{"lineNumber":9,"author":{"gitId":"jaredtengsw"},"content":"import java.util.Locale;"},{"lineNumber":10,"author":{"gitId":"jaredtengsw"},"content":""},{"lineNumber":11,"author":{"gitId":"jaredtengsw"},"content":"/**"},{"lineNumber":12,"author":{"gitId":"jaredtengsw"},"content":" * A command class that finds tasks based on a given keyword."},{"lineNumber":13,"author":{"gitId":"jaredtengsw"},"content":" */"},{"lineNumber":14,"author":{"gitId":"jaredtengsw"},"content":"public class FindCommand extends Command {"},{"lineNumber":15,"author":{"gitId":"jaredtengsw"},"content":"    private static TaskList tempList;"},{"lineNumber":16,"author":{"gitId":"jaredtengsw"},"content":""},{"lineNumber":17,"author":{"gitId":"jaredtengsw"},"content":"    public FindCommand(String description) {"},{"lineNumber":18,"author":{"gitId":"jaredtengsw"},"content":"        super(description);"},{"lineNumber":19,"author":{"gitId":"jaredtengsw"},"content":"    }"},{"lineNumber":20,"author":{"gitId":"jaredtengsw"},"content":""},{"lineNumber":21,"author":{"gitId":"jaredtengsw"},"content":"    /**"},{"lineNumber":22,"author":{"gitId":"jaredtengsw"},"content":"     * Finds tasks in the taskList based on keyword given"},{"lineNumber":23,"author":{"gitId":"jaredtengsw"},"content":"     *"},{"lineNumber":24,"author":{"gitId":"jaredtengsw"},"content":"     * @param taskList the list of tasks"},{"lineNumber":25,"author":{"gitId":"jaredtengsw"},"content":"     * @param ui the UI object"},{"lineNumber":26,"author":{"gitId":"jaredtengsw"},"content":"     * @param storage the storage object"},{"lineNumber":27,"author":{"gitId":"jaredtengsw"},"content":"     * @return String which are a list of tasks that are found with the keyword"},{"lineNumber":28,"author":{"gitId":"jaredtengsw"},"content":"     * @throws DukeException"},{"lineNumber":29,"author":{"gitId":"jaredtengsw"},"content":"     */"},{"lineNumber":30,"author":{"gitId":"jaredtengsw"},"content":"    public String execute(TaskList taskList, Ui ui, Storage storage) throws DukeException {"},{"lineNumber":31,"author":{"gitId":"jaredtengsw"},"content":"        String[] inputList \u003d description.trim().split(\" \", 2);"},{"lineNumber":32,"author":{"gitId":"jaredtengsw"},"content":"        String toFind \u003d inputList[1].trim().toLowerCase();"},{"lineNumber":33,"author":{"gitId":"jaredtengsw"},"content":"        tempList \u003d new TaskList();"},{"lineNumber":34,"author":{"gitId":"jaredtengsw"},"content":""},{"lineNumber":35,"author":{"gitId":"jaredtengsw"},"content":"        for (int i \u003d 0; i\u003c taskList.getSize(); i++) {"},{"lineNumber":36,"author":{"gitId":"jaredtengsw"},"content":"            Task toAdd \u003d taskList.getTask(i);"},{"lineNumber":37,"author":{"gitId":"jaredtengsw"},"content":""},{"lineNumber":38,"author":{"gitId":"jaredtengsw"},"content":"            if(toAdd.getInfo().contains(toFind)) {"},{"lineNumber":39,"author":{"gitId":"jaredtengsw"},"content":"                tempList.addTask(toAdd);"},{"lineNumber":40,"author":{"gitId":"jaredtengsw"},"content":"            }"},{"lineNumber":41,"author":{"gitId":"jaredtengsw"},"content":"        }"},{"lineNumber":42,"author":{"gitId":"jaredtengsw"},"content":""},{"lineNumber":43,"author":{"gitId":"jaredtengsw"},"content":"        if (tempList.getSize() \u003d\u003d 0) {"},{"lineNumber":44,"author":{"gitId":"jaredtengsw"},"content":"            String message \u003d \"Master, I\u0027m unable to find such a task.\";"},{"lineNumber":45,"author":{"gitId":"jaredtengsw"},"content":"            ui.formatAndPrintType(message);"},{"lineNumber":46,"author":{"gitId":"jaredtengsw"},"content":"            return message;"},{"lineNumber":47,"author":{"gitId":"jaredtengsw"},"content":"        } else {"},{"lineNumber":48,"author":{"gitId":"jaredtengsw"},"content":"            StringBuilder sb \u003d new StringBuilder();"},{"lineNumber":49,"author":{"gitId":"jaredtengsw"},"content":"            sb.append(\"Master, I have found \""},{"lineNumber":50,"author":{"gitId":"jaredtengsw"},"content":"                      + tempList.getSize()"},{"lineNumber":51,"author":{"gitId":"jaredtengsw"},"content":"                      + \" such tasks:\\n\");"},{"lineNumber":52,"author":{"gitId":"jaredtengsw"},"content":""},{"lineNumber":53,"author":{"gitId":"jaredtengsw"},"content":"            for (int j \u003d 0; j \u003c tempList.getSize(); j++) {"},{"lineNumber":54,"author":{"gitId":"jaredtengsw"},"content":"                Task currentTask \u003d tempList.getTask(j);"},{"lineNumber":55,"author":{"gitId":"jaredtengsw"},"content":"                sb.append((j + 1) + \".\" + currentTask.toString() + \"\\n\");"},{"lineNumber":56,"author":{"gitId":"jaredtengsw"},"content":"            }"},{"lineNumber":57,"author":{"gitId":"jaredtengsw"},"content":"            ui.formatAndPrintType(sb.toString());"},{"lineNumber":58,"author":{"gitId":"jaredtengsw"},"content":"            return sb.toString();"},{"lineNumber":59,"author":{"gitId":"jaredtengsw"},"content":"        }"},{"lineNumber":60,"author":{"gitId":"jaredtengsw"},"content":"    }"},{"lineNumber":61,"author":{"gitId":"jaredtengsw"},"content":""},{"lineNumber":62,"author":{"gitId":"jaredtengsw"},"content":"    @Override"},{"lineNumber":63,"author":{"gitId":"jaredtengsw"},"content":"    public boolean isEndOfProgram() {"},{"lineNumber":64,"author":{"gitId":"jaredtengsw"},"content":"        return false;"},{"lineNumber":65,"author":{"gitId":"jaredtengsw"},"content":"    }"},{"lineNumber":66,"author":{"gitId":"jaredtengsw"},"content":"}"}],"authorContributionMap":{"jaredtengsw":66}},{"path":"src/main/java/duke/commands/HelpCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jaredtengsw"},"content":"package duke.commands;"},{"lineNumber":2,"author":{"gitId":"jaredtengsw"},"content":""},{"lineNumber":3,"author":{"gitId":"jaredtengsw"},"content":""},{"lineNumber":4,"author":{"gitId":"jaredtengsw"},"content":"import duke.exceptions.DukeException;"},{"lineNumber":5,"author":{"gitId":"jaredtengsw"},"content":"import duke.exceptions.HelpException;"},{"lineNumber":6,"author":{"gitId":"jaredtengsw"},"content":"import duke.parser.Parser;"},{"lineNumber":7,"author":{"gitId":"jaredtengsw"},"content":"import duke.storage.Storage;"},{"lineNumber":8,"author":{"gitId":"jaredtengsw"},"content":"import duke.taskList.TaskList;"},{"lineNumber":9,"author":{"gitId":"jaredtengsw"},"content":"import duke.ui.Ui;"},{"lineNumber":10,"author":{"gitId":"jaredtengsw"},"content":""},{"lineNumber":11,"author":{"gitId":"jaredtengsw"},"content":"/**"},{"lineNumber":12,"author":{"gitId":"jaredtengsw"},"content":" * Displays the valid commands in the list"},{"lineNumber":13,"author":{"gitId":"jaredtengsw"},"content":" */"},{"lineNumber":14,"author":{"gitId":"jaredtengsw"},"content":"public class HelpCommand extends Command{"},{"lineNumber":15,"author":{"gitId":"jaredtengsw"},"content":"    private final static String BYE_PROMPT \u003d \"bye - Saves the Task List into a .txt file and closes the program.\\n\\n\";"},{"lineNumber":16,"author":{"gitId":"jaredtengsw"},"content":""},{"lineNumber":17,"author":{"gitId":"jaredtengsw"},"content":"    private final static String DEADLINE_PROMPT \u003d \"deadline - Adds a deadline task into the Task List.\\n\""},{"lineNumber":18,"author":{"gitId":"jaredtengsw"},"content":"                                                + \"Enter \\\"deadline TASK_NAME /by YYYY-MM-DD HH:MM\\\"\\n\""},{"lineNumber":19,"author":{"gitId":"jaredtengsw"},"content":"                                                + \"Example: deadline English Essay /by 2021-03-08 23:59\\n\\n\";"},{"lineNumber":20,"author":{"gitId":"jaredtengsw"},"content":""},{"lineNumber":21,"author":{"gitId":"jaredtengsw"},"content":"    private final static String DELETE_PROMPT \u003d \"delete - Deletes the task at the specified position.\\n\""},{"lineNumber":22,"author":{"gitId":"jaredtengsw"},"content":"                                              + \"Enter \\\"delete TASK_NUMBER\\\"\\n\""},{"lineNumber":23,"author":{"gitId":"jaredtengsw"},"content":"                                              + \"Example: delete 1\\n\\n\";"},{"lineNumber":24,"author":{"gitId":"jaredtengsw"},"content":""},{"lineNumber":25,"author":{"gitId":"jaredtengsw"},"content":"    private final static String DONE_PROMPT \u003d \"done - Marks the task at the specified position as completed.\\n\""},{"lineNumber":26,"author":{"gitId":"jaredtengsw"},"content":"                                            + \"Enter \\\"done TASK_NUMBER\\\"\\n\""},{"lineNumber":27,"author":{"gitId":"jaredtengsw"},"content":"                                            + \"Example: done 1\\n\\n\";"},{"lineNumber":28,"author":{"gitId":"jaredtengsw"},"content":""},{"lineNumber":29,"author":{"gitId":"jaredtengsw"},"content":""},{"lineNumber":30,"author":{"gitId":"jaredtengsw"},"content":"    private final static String EVENT_PROMPT \u003d \"event - Adds an event task into the Task List.\\n\""},{"lineNumber":31,"author":{"gitId":"jaredtengsw"},"content":"                                             + \"Enter \\\"event TASK_NAME /at LOCATION_NAME YYYY-MM-DD HH:MM\\\"\\n\""},{"lineNumber":32,"author":{"gitId":"jaredtengsw"},"content":"                                             + \"Example: event John\u0027s Birthday /at MBS 2021-04-15 19:00\\n\\n\";"},{"lineNumber":33,"author":{"gitId":"jaredtengsw"},"content":""},{"lineNumber":34,"author":{"gitId":"jaredtengsw"},"content":""},{"lineNumber":35,"author":{"gitId":"jaredtengsw"},"content":"    private final static String FIND_PROMPT \u003d \"find - Finds tasks in the Task List that contains the keyword.\\n\""},{"lineNumber":36,"author":{"gitId":"jaredtengsw"},"content":"                                            + \"Enter \\\"find KEYWORD\\\"\\n\""},{"lineNumber":37,"author":{"gitId":"jaredtengsw"},"content":"                                            + \"Example: find meeting\\n\\n\";"},{"lineNumber":38,"author":{"gitId":"jaredtengsw"},"content":""},{"lineNumber":39,"author":{"gitId":"jaredtengsw"},"content":"    private final static String HELP_PROMPT \u003d \"help - Returns a list of commands and their usage.\\n\""},{"lineNumber":40,"author":{"gitId":"jaredtengsw"},"content":"                                            + \"Enter \\\"help\\\" returns the full list of commands\\n\""},{"lineNumber":41,"author":{"gitId":"jaredtengsw"},"content":"                                            + \"Enter \\\"help COMMAND\\\" returns the specific instructions for the command\\n\""},{"lineNumber":42,"author":{"gitId":"jaredtengsw"},"content":"                                            + \"Example 1: help\\n\""},{"lineNumber":43,"author":{"gitId":"jaredtengsw"},"content":"                                            + \"Example 2: help event\\n\\n\";"},{"lineNumber":44,"author":{"gitId":"jaredtengsw"},"content":""},{"lineNumber":45,"author":{"gitId":"jaredtengsw"},"content":""},{"lineNumber":46,"author":{"gitId":"jaredtengsw"},"content":"    private final static String LIST_PROMPT \u003d \"list - Returns the list of tasks in the Task List\\n\""},{"lineNumber":47,"author":{"gitId":"jaredtengsw"},"content":"                                            + \"Enter \\\"list\\\"\\n\\n\";"},{"lineNumber":48,"author":{"gitId":"jaredtengsw"},"content":""},{"lineNumber":49,"author":{"gitId":"jaredtengsw"},"content":"    private final static String TODO_PROMPT \u003d \"todo - Adds a ToDo task into the Task List\\n\""},{"lineNumber":50,"author":{"gitId":"jaredtengsw"},"content":"                                            + \"Enter \\\"todo TASK_NAME\\\"\\n\""},{"lineNumber":51,"author":{"gitId":"jaredtengsw"},"content":"                                            + \"Example: todo read finish LOTR\\n\\n\";"},{"lineNumber":52,"author":{"gitId":"jaredtengsw"},"content":""},{"lineNumber":53,"author":{"gitId":"jaredtengsw"},"content":"    private final static String HELP_MESSAGE_ALL \u003d \"Master, here is a list of all the commands: \\n\";"},{"lineNumber":54,"author":{"gitId":"jaredtengsw"},"content":""},{"lineNumber":55,"author":{"gitId":"jaredtengsw"},"content":"    private final static String HELP_MESSAGE_SPECIFIC \u003d \"Here is the information on the command, Master.\\n\";"},{"lineNumber":56,"author":{"gitId":"jaredtengsw"},"content":""},{"lineNumber":57,"author":{"gitId":"jaredtengsw"},"content":"    public HelpCommand(String description){"},{"lineNumber":58,"author":{"gitId":"jaredtengsw"},"content":""},{"lineNumber":59,"author":{"gitId":"jaredtengsw"},"content":"        super(description);"},{"lineNumber":60,"author":{"gitId":"jaredtengsw"},"content":"    }"},{"lineNumber":61,"author":{"gitId":"jaredtengsw"},"content":""},{"lineNumber":62,"author":{"gitId":"jaredtengsw"},"content":"    /**"},{"lineNumber":63,"author":{"gitId":"jaredtengsw"},"content":"     * Generates a list of all Commands."},{"lineNumber":64,"author":{"gitId":"jaredtengsw"},"content":"     *"},{"lineNumber":65,"author":{"gitId":"jaredtengsw"},"content":"     * @param taskList contains the list of tasks"},{"lineNumber":66,"author":{"gitId":"jaredtengsw"},"content":"     * @param ui the UI object"},{"lineNumber":67,"author":{"gitId":"jaredtengsw"},"content":"     * @param storage where tasks in taskList will be stored when program ends"},{"lineNumber":68,"author":{"gitId":"jaredtengsw"},"content":"     * @return String containing details on all the commands and their usage"},{"lineNumber":69,"author":{"gitId":"jaredtengsw"},"content":"     * @throws DukeException"},{"lineNumber":70,"author":{"gitId":"jaredtengsw"},"content":"     */"},{"lineNumber":71,"author":{"gitId":"jaredtengsw"},"content":"    public String execute (TaskList taskList, Ui ui, Storage storage) throws DukeException {"},{"lineNumber":72,"author":{"gitId":"jaredtengsw"},"content":"        String[] inputList \u003d description.trim().split(\" \", 2);"},{"lineNumber":73,"author":{"gitId":"jaredtengsw"},"content":""},{"lineNumber":74,"author":{"gitId":"jaredtengsw"},"content":"        //if user only enters \"help\""},{"lineNumber":75,"author":{"gitId":"jaredtengsw"},"content":"        if (inputList.length \u003d\u003d 1){"},{"lineNumber":76,"author":{"gitId":"jaredtengsw"},"content":"            return HELP_MESSAGE_ALL + BYE_PROMPT + DEADLINE_PROMPT"},{"lineNumber":77,"author":{"gitId":"jaredtengsw"},"content":"                    + DELETE_PROMPT + DONE_PROMPT + EVENT_PROMPT"},{"lineNumber":78,"author":{"gitId":"jaredtengsw"},"content":"                    + FIND_PROMPT   + HELP_PROMPT + LIST_PROMPT"},{"lineNumber":79,"author":{"gitId":"jaredtengsw"},"content":"                    + TODO_PROMPT;"},{"lineNumber":80,"author":{"gitId":"jaredtengsw"},"content":"        }"},{"lineNumber":81,"author":{"gitId":"jaredtengsw"},"content":""},{"lineNumber":82,"author":{"gitId":"jaredtengsw"},"content":"        //if user enter help with another command"},{"lineNumber":83,"author":{"gitId":"jaredtengsw"},"content":"        if (Parser.isBye(inputList[1])){"},{"lineNumber":84,"author":{"gitId":"jaredtengsw"},"content":"            return HELP_MESSAGE_SPECIFIC + BYE_PROMPT;"},{"lineNumber":85,"author":{"gitId":"jaredtengsw"},"content":"        }"},{"lineNumber":86,"author":{"gitId":"jaredtengsw"},"content":"        if (Parser.isDeadline(inputList[1])){"},{"lineNumber":87,"author":{"gitId":"jaredtengsw"},"content":"            return HELP_MESSAGE_SPECIFIC + DEADLINE_PROMPT;"},{"lineNumber":88,"author":{"gitId":"jaredtengsw"},"content":"        }"},{"lineNumber":89,"author":{"gitId":"jaredtengsw"},"content":""},{"lineNumber":90,"author":{"gitId":"jaredtengsw"},"content":"        if (Parser.isDelete(inputList[1])){"},{"lineNumber":91,"author":{"gitId":"jaredtengsw"},"content":"            return HELP_MESSAGE_SPECIFIC + DELETE_PROMPT;"},{"lineNumber":92,"author":{"gitId":"jaredtengsw"},"content":"        }"},{"lineNumber":93,"author":{"gitId":"jaredtengsw"},"content":"        if (Parser.isCompleted(inputList[1])){"},{"lineNumber":94,"author":{"gitId":"jaredtengsw"},"content":"            return HELP_MESSAGE_SPECIFIC + DONE_PROMPT;"},{"lineNumber":95,"author":{"gitId":"jaredtengsw"},"content":"        }"},{"lineNumber":96,"author":{"gitId":"jaredtengsw"},"content":"        if (Parser.isFind(inputList[1])){"},{"lineNumber":97,"author":{"gitId":"jaredtengsw"},"content":"            return HELP_MESSAGE_SPECIFIC + FIND_PROMPT;"},{"lineNumber":98,"author":{"gitId":"jaredtengsw"},"content":"        }"},{"lineNumber":99,"author":{"gitId":"jaredtengsw"},"content":"        if (Parser.isHelp(inputList[1])){"},{"lineNumber":100,"author":{"gitId":"jaredtengsw"},"content":"            return HELP_MESSAGE_SPECIFIC + HELP_PROMPT;"},{"lineNumber":101,"author":{"gitId":"jaredtengsw"},"content":"        }"},{"lineNumber":102,"author":{"gitId":"jaredtengsw"},"content":"        if (Parser.isList(inputList[1])){"},{"lineNumber":103,"author":{"gitId":"jaredtengsw"},"content":"            return HELP_MESSAGE_SPECIFIC + LIST_PROMPT;"},{"lineNumber":104,"author":{"gitId":"jaredtengsw"},"content":"        }"},{"lineNumber":105,"author":{"gitId":"jaredtengsw"},"content":"        if (Parser.isEvent(inputList[1])){"},{"lineNumber":106,"author":{"gitId":"jaredtengsw"},"content":"            return HELP_MESSAGE_SPECIFIC + EVENT_PROMPT;"},{"lineNumber":107,"author":{"gitId":"jaredtengsw"},"content":"        }"},{"lineNumber":108,"author":{"gitId":"jaredtengsw"},"content":"        if (Parser.isToDo(inputList[1])){"},{"lineNumber":109,"author":{"gitId":"jaredtengsw"},"content":"            return HELP_MESSAGE_SPECIFIC + TODO_PROMPT;"},{"lineNumber":110,"author":{"gitId":"jaredtengsw"},"content":"        }"},{"lineNumber":111,"author":{"gitId":"jaredtengsw"},"content":"        else {"},{"lineNumber":112,"author":{"gitId":"jaredtengsw"},"content":"            throw new HelpException();"},{"lineNumber":113,"author":{"gitId":"jaredtengsw"},"content":"        }"},{"lineNumber":114,"author":{"gitId":"jaredtengsw"},"content":"    }"},{"lineNumber":115,"author":{"gitId":"jaredtengsw"},"content":""},{"lineNumber":116,"author":{"gitId":"jaredtengsw"},"content":"    @Override"},{"lineNumber":117,"author":{"gitId":"jaredtengsw"},"content":"    public boolean isEndOfProgram() {"},{"lineNumber":118,"author":{"gitId":"jaredtengsw"},"content":"        return false;"},{"lineNumber":119,"author":{"gitId":"jaredtengsw"},"content":"    }"},{"lineNumber":120,"author":{"gitId":"jaredtengsw"},"content":"}"}],"authorContributionMap":{"jaredtengsw":120}},{"path":"src/main/java/duke/commands/ListCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jaredtengsw"},"content":"package duke.commands;"},{"lineNumber":2,"author":{"gitId":"jaredtengsw"},"content":""},{"lineNumber":3,"author":{"gitId":"jaredtengsw"},"content":"import duke.exceptions.DukeException;"},{"lineNumber":4,"author":{"gitId":"jaredtengsw"},"content":"import duke.exceptions.EmptyListException;"},{"lineNumber":5,"author":{"gitId":"jaredtengsw"},"content":"import duke.exceptions.ExcessListKeywordException;"},{"lineNumber":6,"author":{"gitId":"jaredtengsw"},"content":"import duke.storage.Storage;"},{"lineNumber":7,"author":{"gitId":"jaredtengsw"},"content":"import duke.taskList.TaskList;"},{"lineNumber":8,"author":{"gitId":"jaredtengsw"},"content":"import duke.ui.Ui;"},{"lineNumber":9,"author":{"gitId":"jaredtengsw"},"content":""},{"lineNumber":10,"author":{"gitId":"jaredtengsw"},"content":"/**"},{"lineNumber":11,"author":{"gitId":"jaredtengsw"},"content":" * A command class that gives the list of all the tasks in the taskList."},{"lineNumber":12,"author":{"gitId":"jaredtengsw"},"content":" */"},{"lineNumber":13,"author":{"gitId":"jaredtengsw"},"content":"public class ListCommand extends Command {"},{"lineNumber":14,"author":{"gitId":"jaredtengsw"},"content":"    public ListCommand(String description) {"},{"lineNumber":15,"author":{"gitId":"jaredtengsw"},"content":"        super(description);"},{"lineNumber":16,"author":{"gitId":"jaredtengsw"},"content":"    }"},{"lineNumber":17,"author":{"gitId":"jaredtengsw"},"content":""},{"lineNumber":18,"author":{"gitId":"jaredtengsw"},"content":"    /**"},{"lineNumber":19,"author":{"gitId":"jaredtengsw"},"content":"     * Returns the tasks in taskList"},{"lineNumber":20,"author":{"gitId":"jaredtengsw"},"content":"     *"},{"lineNumber":21,"author":{"gitId":"jaredtengsw"},"content":"     * @param taskList the list of tasks"},{"lineNumber":22,"author":{"gitId":"jaredtengsw"},"content":"     * @param ui the UI object"},{"lineNumber":23,"author":{"gitId":"jaredtengsw"},"content":"     * @param storage the storage object"},{"lineNumber":24,"author":{"gitId":"jaredtengsw"},"content":"     * @return String which is the list of tasks in taskList"},{"lineNumber":25,"author":{"gitId":"jaredtengsw"},"content":"     * @throws DukeException"},{"lineNumber":26,"author":{"gitId":"jaredtengsw"},"content":"     */"},{"lineNumber":27,"author":{"gitId":"jaredtengsw"},"content":"    public String execute(TaskList taskList, Ui ui, Storage storage) throws DukeException {"},{"lineNumber":28,"author":{"gitId":"jaredtengsw"},"content":"        String[] inputList \u003d description.trim().split(\" \", 2);"},{"lineNumber":29,"author":{"gitId":"jaredtengsw"},"content":""},{"lineNumber":30,"author":{"gitId":"jaredtengsw"},"content":"        if (inputList.length \u003e 1) {"},{"lineNumber":31,"author":{"gitId":"jaredtengsw"},"content":"            throw new ExcessListKeywordException();"},{"lineNumber":32,"author":{"gitId":"jaredtengsw"},"content":"        } else if (taskList.getSize() \u003d\u003d 0) {"},{"lineNumber":33,"author":{"gitId":"jaredtengsw"},"content":"            throw new EmptyListException();"},{"lineNumber":34,"author":{"gitId":"jaredtengsw"},"content":"        }"},{"lineNumber":35,"author":{"gitId":"jaredtengsw"},"content":""},{"lineNumber":36,"author":{"gitId":"jaredtengsw"},"content":"        StringBuilder sb \u003d new StringBuilder();"},{"lineNumber":37,"author":{"gitId":"jaredtengsw"},"content":"        sb.append(\"Here is a list of your tasks, Master:\");"},{"lineNumber":38,"author":{"gitId":"jaredtengsw"},"content":""},{"lineNumber":39,"author":{"gitId":"jaredtengsw"},"content":"        for (int i \u003d 0; i \u003c taskList.getSize(); i++) {"},{"lineNumber":40,"author":{"gitId":"jaredtengsw"},"content":"            sb.append(\"\\n\" + String.valueOf(i + 1) + \". \" + taskList.getTask(i).toString());"},{"lineNumber":41,"author":{"gitId":"jaredtengsw"},"content":"        }"},{"lineNumber":42,"author":{"gitId":"jaredtengsw"},"content":""},{"lineNumber":43,"author":{"gitId":"jaredtengsw"},"content":"        ui.formatAndPrintType(sb.toString());"},{"lineNumber":44,"author":{"gitId":"jaredtengsw"},"content":"        return sb.toString();"},{"lineNumber":45,"author":{"gitId":"jaredtengsw"},"content":"    }"},{"lineNumber":46,"author":{"gitId":"jaredtengsw"},"content":""},{"lineNumber":47,"author":{"gitId":"jaredtengsw"},"content":"    @Override"},{"lineNumber":48,"author":{"gitId":"jaredtengsw"},"content":"    public boolean isEndOfProgram() {"},{"lineNumber":49,"author":{"gitId":"jaredtengsw"},"content":"        return false;"},{"lineNumber":50,"author":{"gitId":"jaredtengsw"},"content":"    }"},{"lineNumber":51,"author":{"gitId":"jaredtengsw"},"content":"}"}],"authorContributionMap":{"jaredtengsw":51}},{"path":"src/main/java/duke/exceptions/DateTimeFormatException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jaredtengsw"},"content":"package duke.exceptions;"},{"lineNumber":2,"author":{"gitId":"jaredtengsw"},"content":""},{"lineNumber":3,"author":{"gitId":"jaredtengsw"},"content":"/**"},{"lineNumber":4,"author":{"gitId":"jaredtengsw"},"content":" * Represents the exception from the getDateTime() function"},{"lineNumber":5,"author":{"gitId":"jaredtengsw"},"content":" * in Event or Deadline objects when the wrong format is being inputted."},{"lineNumber":6,"author":{"gitId":"jaredtengsw"},"content":" */"},{"lineNumber":7,"author":{"gitId":"jaredtengsw"},"content":"public class DateTimeFormatException extends DukeException {"},{"lineNumber":8,"author":{"gitId":"jaredtengsw"},"content":"    public DateTimeFormatException() {"},{"lineNumber":9,"author":{"gitId":"jaredtengsw"},"content":"        super(\"DateTimeFormatException\");"},{"lineNumber":10,"author":{"gitId":"jaredtengsw"},"content":"    }"},{"lineNumber":11,"author":{"gitId":"jaredtengsw"},"content":""},{"lineNumber":12,"author":{"gitId":"jaredtengsw"},"content":"    @Override"},{"lineNumber":13,"author":{"gitId":"jaredtengsw"},"content":"    public String toString() {"},{"lineNumber":14,"author":{"gitId":"jaredtengsw"},"content":"        return \"Master, I need you to input the date and time as such: \\\"YYYY-MM-DD HH:MM\\\"\";"},{"lineNumber":15,"author":{"gitId":"jaredtengsw"},"content":"    }"},{"lineNumber":16,"author":{"gitId":"jaredtengsw"},"content":"}"}],"authorContributionMap":{"jaredtengsw":16}},{"path":"src/main/java/duke/exceptions/DeadLineException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jaredtengsw"},"content":"package duke.exceptions;"},{"lineNumber":2,"author":{"gitId":"jaredtengsw"},"content":""},{"lineNumber":3,"author":{"gitId":"jaredtengsw"},"content":"/**"},{"lineNumber":4,"author":{"gitId":"jaredtengsw"},"content":" * Represents the exception from invalid creation of Deadline objects"},{"lineNumber":5,"author":{"gitId":"jaredtengsw"},"content":" * due to wrong format being inputted."},{"lineNumber":6,"author":{"gitId":"jaredtengsw"},"content":" */"},{"lineNumber":7,"author":{"gitId":"jaredtengsw"},"content":"public class DeadLineException extends DukeException {"},{"lineNumber":8,"author":{"gitId":"jaredtengsw"},"content":"    public DeadLineException() {"},{"lineNumber":9,"author":{"gitId":"jaredtengsw"},"content":"       super(\"DeadlineException\");"},{"lineNumber":10,"author":{"gitId":"jaredtengsw"},"content":"    }"},{"lineNumber":11,"author":{"gitId":"jaredtengsw"},"content":""},{"lineNumber":12,"author":{"gitId":"jaredtengsw"},"content":"    @Override"},{"lineNumber":13,"author":{"gitId":"jaredtengsw"},"content":"    public String toString() {"},{"lineNumber":14,"author":{"gitId":"jaredtengsw"},"content":"        return \"Sorry Master, please key in the deadline task in the following format:\\n\""},{"lineNumber":15,"author":{"gitId":"jaredtengsw"},"content":"                + \"\\\u0027Deadline task name /by date(in YYYY-MM-DD HH:MM format)\\\u0027.\";"},{"lineNumber":16,"author":{"gitId":"jaredtengsw"},"content":"    }"},{"lineNumber":17,"author":{"gitId":"jaredtengsw"},"content":"}"}],"authorContributionMap":{"jaredtengsw":17}},{"path":"src/main/java/duke/exceptions/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jaredtengsw"},"content":"package duke.exceptions;"},{"lineNumber":2,"author":{"gitId":"jaredtengsw"},"content":""},{"lineNumber":3,"author":{"gitId":"jaredtengsw"},"content":"/**"},{"lineNumber":4,"author":{"gitId":"jaredtengsw"},"content":" * Serves as the parent exception class for all exceptions"},{"lineNumber":5,"author":{"gitId":"jaredtengsw"},"content":" * in the Duke application."},{"lineNumber":6,"author":{"gitId":"jaredtengsw"},"content":" */"},{"lineNumber":7,"author":{"gitId":"jaredtengsw"},"content":"public class DukeException extends Exception {"},{"lineNumber":8,"author":{"gitId":"jaredtengsw"},"content":"    public DukeException(String error) {"},{"lineNumber":9,"author":{"gitId":"jaredtengsw"},"content":"        super(\"DukeException\");"},{"lineNumber":10,"author":{"gitId":"jaredtengsw"},"content":"    }"},{"lineNumber":11,"author":{"gitId":"jaredtengsw"},"content":""},{"lineNumber":12,"author":{"gitId":"jaredtengsw"},"content":"    @Override"},{"lineNumber":13,"author":{"gitId":"jaredtengsw"},"content":"    public String toString() {"},{"lineNumber":14,"author":{"gitId":"jaredtengsw"},"content":"        return \"I\u0027m afraid I don\u0027t understand what you mean, Master.\";"},{"lineNumber":15,"author":{"gitId":"jaredtengsw"},"content":"    }"},{"lineNumber":16,"author":{"gitId":"jaredtengsw"},"content":"}"}],"authorContributionMap":{"jaredtengsw":16}},{"path":"src/main/java/duke/exceptions/EmptyListException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jaredtengsw"},"content":"package duke.exceptions;"},{"lineNumber":2,"author":{"gitId":"jaredtengsw"},"content":""},{"lineNumber":3,"author":{"gitId":"jaredtengsw"},"content":"/**"},{"lineNumber":4,"author":{"gitId":"jaredtengsw"},"content":" * Represents the exception when \u0027done\u0027 or \u0027delete\u0027 command"},{"lineNumber":5,"author":{"gitId":"jaredtengsw"},"content":" * is used but the task list is empty."},{"lineNumber":6,"author":{"gitId":"jaredtengsw"},"content":" */"},{"lineNumber":7,"author":{"gitId":"jaredtengsw"},"content":"public class EmptyListException extends DukeException {"},{"lineNumber":8,"author":{"gitId":"jaredtengsw"},"content":"    public EmptyListException() {"},{"lineNumber":9,"author":{"gitId":"jaredtengsw"},"content":"        super(\"EmptyListException\");"},{"lineNumber":10,"author":{"gitId":"jaredtengsw"},"content":"    }"},{"lineNumber":11,"author":{"gitId":"jaredtengsw"},"content":""},{"lineNumber":12,"author":{"gitId":"jaredtengsw"},"content":"    @Override"},{"lineNumber":13,"author":{"gitId":"jaredtengsw"},"content":"    public String toString() {"},{"lineNumber":14,"author":{"gitId":"jaredtengsw"},"content":"        return \"I\u0027m afraid the list is empty, Master.\";"},{"lineNumber":15,"author":{"gitId":"jaredtengsw"},"content":"    }"},{"lineNumber":16,"author":{"gitId":"jaredtengsw"},"content":"}"}],"authorContributionMap":{"jaredtengsw":16}},{"path":"src/main/java/duke/exceptions/EventException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jaredtengsw"},"content":"package duke.exceptions;"},{"lineNumber":2,"author":{"gitId":"jaredtengsw"},"content":""},{"lineNumber":3,"author":{"gitId":"jaredtengsw"},"content":"/**"},{"lineNumber":4,"author":{"gitId":"jaredtengsw"},"content":" * Represents the exception from invalid creation of Event objects"},{"lineNumber":5,"author":{"gitId":"jaredtengsw"},"content":" * due to wrong format being inputted."},{"lineNumber":6,"author":{"gitId":"jaredtengsw"},"content":" */"},{"lineNumber":7,"author":{"gitId":"jaredtengsw"},"content":"public class EventException extends DukeException {"},{"lineNumber":8,"author":{"gitId":"jaredtengsw"},"content":"    public EventException() {"},{"lineNumber":9,"author":{"gitId":"jaredtengsw"},"content":"        super(\"EventExeception\");"},{"lineNumber":10,"author":{"gitId":"jaredtengsw"},"content":"    }"},{"lineNumber":11,"author":{"gitId":"jaredtengsw"},"content":""},{"lineNumber":12,"author":{"gitId":"jaredtengsw"},"content":"    @Override"},{"lineNumber":13,"author":{"gitId":"jaredtengsw"},"content":"    public String toString() {"},{"lineNumber":14,"author":{"gitId":"jaredtengsw"},"content":"        return \"Sorry Master, please key in the Event task in the following format:\\n\""},{"lineNumber":15,"author":{"gitId":"jaredtengsw"},"content":"                + \"\\\u0027Event task name /at location date(in YYYY-MM-DD HH:MM format)\\\u0027.\";"},{"lineNumber":16,"author":{"gitId":"jaredtengsw"},"content":""},{"lineNumber":17,"author":{"gitId":"jaredtengsw"},"content":"    }"},{"lineNumber":18,"author":{"gitId":"jaredtengsw"},"content":"}"}],"authorContributionMap":{"jaredtengsw":18}},{"path":"src/main/java/duke/exceptions/ExcessListKeywordException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jaredtengsw"},"content":"package duke.exceptions;"},{"lineNumber":2,"author":{"gitId":"jaredtengsw"},"content":""},{"lineNumber":3,"author":{"gitId":"jaredtengsw"},"content":"/**"},{"lineNumber":4,"author":{"gitId":"jaredtengsw"},"content":" * Represents the exception when \u0027list\u0027 command"},{"lineNumber":5,"author":{"gitId":"jaredtengsw"},"content":" * is used along with other unnecessary arguments."},{"lineNumber":6,"author":{"gitId":"jaredtengsw"},"content":" */"},{"lineNumber":7,"author":{"gitId":"jaredtengsw"},"content":"public class ExcessListKeywordException extends DukeException {"},{"lineNumber":8,"author":{"gitId":"jaredtengsw"},"content":"    public ExcessListKeywordException() {"},{"lineNumber":9,"author":{"gitId":"jaredtengsw"},"content":"        super(\"ExcessListKeywordException\");"},{"lineNumber":10,"author":{"gitId":"jaredtengsw"},"content":"    }"},{"lineNumber":11,"author":{"gitId":"jaredtengsw"},"content":""},{"lineNumber":12,"author":{"gitId":"jaredtengsw"},"content":"    @Override"},{"lineNumber":13,"author":{"gitId":"jaredtengsw"},"content":"    public String toString() {"},{"lineNumber":14,"author":{"gitId":"jaredtengsw"},"content":"        return \"Using just the \\\u0027list\\\u0027 command is enough, Master.\";"},{"lineNumber":15,"author":{"gitId":"jaredtengsw"},"content":"    }"},{"lineNumber":16,"author":{"gitId":"jaredtengsw"},"content":"}"}],"authorContributionMap":{"jaredtengsw":16}},{"path":"src/main/java/duke/exceptions/HelpException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jaredtengsw"},"content":"package duke.exceptions;"},{"lineNumber":2,"author":{"gitId":"jaredtengsw"},"content":""},{"lineNumber":3,"author":{"gitId":"jaredtengsw"},"content":"/**"},{"lineNumber":4,"author":{"gitId":"jaredtengsw"},"content":" * Represents the exception from the help function"},{"lineNumber":5,"author":{"gitId":"jaredtengsw"},"content":" * when the function receives an invalid input or command."},{"lineNumber":6,"author":{"gitId":"jaredtengsw"},"content":" */"},{"lineNumber":7,"author":{"gitId":"jaredtengsw"},"content":"public class HelpException extends DukeException{"},{"lineNumber":8,"author":{"gitId":"jaredtengsw"},"content":"    public HelpException(){"},{"lineNumber":9,"author":{"gitId":"jaredtengsw"},"content":"        super(\"HelpException\");"},{"lineNumber":10,"author":{"gitId":"jaredtengsw"},"content":"    }"},{"lineNumber":11,"author":{"gitId":"jaredtengsw"},"content":""},{"lineNumber":12,"author":{"gitId":"jaredtengsw"},"content":"    @Override"},{"lineNumber":13,"author":{"gitId":"jaredtengsw"},"content":"    public String toString(){"},{"lineNumber":14,"author":{"gitId":"jaredtengsw"},"content":"        return \"Master, please key in a valid command after the \\\"help\\\" keyword.\\n\\n\" +"},{"lineNumber":15,"author":{"gitId":"jaredtengsw"},"content":"                \"Alternatively, enter \\\"help\\\" to get the full list of commands.\\n\";"},{"lineNumber":16,"author":{"gitId":"jaredtengsw"},"content":"    }"},{"lineNumber":17,"author":{"gitId":"jaredtengsw"},"content":"}"}],"authorContributionMap":{"jaredtengsw":17}},{"path":"src/main/java/duke/exceptions/IncompleteCommandException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jaredtengsw"},"content":"package duke.exceptions;"},{"lineNumber":2,"author":{"gitId":"jaredtengsw"},"content":""},{"lineNumber":3,"author":{"gitId":"jaredtengsw"},"content":"/**"},{"lineNumber":4,"author":{"gitId":"jaredtengsw"},"content":" * Represents the a command is given but task name is"},{"lineNumber":5,"author":{"gitId":"jaredtengsw"},"content":" * not being inputted."},{"lineNumber":6,"author":{"gitId":"jaredtengsw"},"content":" */"},{"lineNumber":7,"author":{"gitId":"jaredtengsw"},"content":"public class IncompleteCommandException extends DukeException {"},{"lineNumber":8,"author":{"gitId":"jaredtengsw"},"content":"    public IncompleteCommandException() {"},{"lineNumber":9,"author":{"gitId":"jaredtengsw"},"content":"        super(\"IncompleteCommandException\");"},{"lineNumber":10,"author":{"gitId":"jaredtengsw"},"content":"    }"},{"lineNumber":11,"author":{"gitId":"jaredtengsw"},"content":""},{"lineNumber":12,"author":{"gitId":"jaredtengsw"},"content":"    @Override"},{"lineNumber":13,"author":{"gitId":"jaredtengsw"},"content":"    public String toString() {"},{"lineNumber":14,"author":{"gitId":"jaredtengsw"},"content":"        return \"I\u0027m afraid you are not specific enough, Master.\";"},{"lineNumber":15,"author":{"gitId":"jaredtengsw"},"content":"    }"},{"lineNumber":16,"author":{"gitId":"jaredtengsw"},"content":"}"}],"authorContributionMap":{"jaredtengsw":16}},{"path":"src/main/java/duke/exceptions/InvalidCommandException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jaredtengsw"},"content":"package duke.exceptions;"},{"lineNumber":2,"author":{"gitId":"jaredtengsw"},"content":""},{"lineNumber":3,"author":{"gitId":"jaredtengsw"},"content":"/**"},{"lineNumber":4,"author":{"gitId":"jaredtengsw"},"content":" * Represents the exception when an invalid command keyword is given."},{"lineNumber":5,"author":{"gitId":"jaredtengsw"},"content":" */"},{"lineNumber":6,"author":{"gitId":"jaredtengsw"},"content":"public class InvalidCommandException extends DukeException{"},{"lineNumber":7,"author":{"gitId":"jaredtengsw"},"content":"    public InvalidCommandException() {"},{"lineNumber":8,"author":{"gitId":"jaredtengsw"},"content":"        super(\"InvalidCommandException\");"},{"lineNumber":9,"author":{"gitId":"jaredtengsw"},"content":"    }"},{"lineNumber":10,"author":{"gitId":"jaredtengsw"},"content":""},{"lineNumber":11,"author":{"gitId":"jaredtengsw"},"content":"    @Override"},{"lineNumber":12,"author":{"gitId":"jaredtengsw"},"content":"    public String toString() {"},{"lineNumber":13,"author":{"gitId":"jaredtengsw"},"content":"        return \"I require you to give me a valid command, Master.\";"},{"lineNumber":14,"author":{"gitId":"jaredtengsw"},"content":"    }"},{"lineNumber":15,"author":{"gitId":"jaredtengsw"},"content":"}"}],"authorContributionMap":{"jaredtengsw":15}},{"path":"src/main/java/duke/exceptions/MissingArgumentException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jaredtengsw"},"content":"package duke.exceptions;"},{"lineNumber":2,"author":{"gitId":"jaredtengsw"},"content":""},{"lineNumber":3,"author":{"gitId":"jaredtengsw"},"content":"/**"},{"lineNumber":4,"author":{"gitId":"jaredtengsw"},"content":" * Represents the exception when using the \u0027done\u0027 command"},{"lineNumber":5,"author":{"gitId":"jaredtengsw"},"content":" * without inputting the task number."},{"lineNumber":6,"author":{"gitId":"jaredtengsw"},"content":" */"},{"lineNumber":7,"author":{"gitId":"jaredtengsw"},"content":"public class MissingArgumentException extends DukeException{"},{"lineNumber":8,"author":{"gitId":"jaredtengsw"},"content":"    public MissingArgumentException() {"},{"lineNumber":9,"author":{"gitId":"jaredtengsw"},"content":"        super(\"MissingArgumentException\");"},{"lineNumber":10,"author":{"gitId":"jaredtengsw"},"content":"    }"},{"lineNumber":11,"author":{"gitId":"jaredtengsw"},"content":""},{"lineNumber":12,"author":{"gitId":"jaredtengsw"},"content":"    @Override"},{"lineNumber":13,"author":{"gitId":"jaredtengsw"},"content":"    public String toString() {"},{"lineNumber":14,"author":{"gitId":"jaredtengsw"},"content":"        return \"I\u0027m afraid that you\u0027re missing the task number, Master.\";"},{"lineNumber":15,"author":{"gitId":"jaredtengsw"},"content":"    }"},{"lineNumber":16,"author":{"gitId":"jaredtengsw"},"content":"}"}],"authorContributionMap":{"jaredtengsw":16}},{"path":"src/main/java/duke/exceptions/NotExistingTaskException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jaredtengsw"},"content":"package duke.exceptions;"},{"lineNumber":2,"author":{"gitId":"jaredtengsw"},"content":""},{"lineNumber":3,"author":{"gitId":"jaredtengsw"},"content":"/**"},{"lineNumber":4,"author":{"gitId":"jaredtengsw"},"content":" * Represents the exception when the \u0027done\u0027 or \u0027delete\u0027 command"},{"lineNumber":5,"author":{"gitId":"jaredtengsw"},"content":" * is used but the task number given is invalid."},{"lineNumber":6,"author":{"gitId":"jaredtengsw"},"content":" */"},{"lineNumber":7,"author":{"gitId":"jaredtengsw"},"content":"public class NotExistingTaskException extends DukeException {"},{"lineNumber":8,"author":{"gitId":"jaredtengsw"},"content":"    public NotExistingTaskException() {"},{"lineNumber":9,"author":{"gitId":"jaredtengsw"},"content":"        super(\"NotExistingTaskException\");"},{"lineNumber":10,"author":{"gitId":"jaredtengsw"},"content":"    }"},{"lineNumber":11,"author":{"gitId":"jaredtengsw"},"content":""},{"lineNumber":12,"author":{"gitId":"jaredtengsw"},"content":"    @Override"},{"lineNumber":13,"author":{"gitId":"jaredtengsw"},"content":"    public String toString() {"},{"lineNumber":14,"author":{"gitId":"jaredtengsw"},"content":"        return \"I\u0027m afraid the task number is not in the list, Master.\";"},{"lineNumber":15,"author":{"gitId":"jaredtengsw"},"content":"    }"},{"lineNumber":16,"author":{"gitId":"jaredtengsw"},"content":"}"}],"authorContributionMap":{"jaredtengsw":16}},{"path":"src/main/java/duke/exceptions/TaskDoneException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jaredtengsw"},"content":"package duke.exceptions;"},{"lineNumber":2,"author":{"gitId":"jaredtengsw"},"content":""},{"lineNumber":3,"author":{"gitId":"jaredtengsw"},"content":"import duke.tasks.Task;"},{"lineNumber":4,"author":{"gitId":"jaredtengsw"},"content":""},{"lineNumber":5,"author":{"gitId":"jaredtengsw"},"content":"/**"},{"lineNumber":6,"author":{"gitId":"jaredtengsw"},"content":" * Represents the exception when a task has been marked as completed"},{"lineNumber":7,"author":{"gitId":"jaredtengsw"},"content":" * but the \u0027done\u0027 command is called on the task again."},{"lineNumber":8,"author":{"gitId":"jaredtengsw"},"content":" */"},{"lineNumber":9,"author":{"gitId":"jaredtengsw"},"content":"public class TaskDoneException extends DukeException {"},{"lineNumber":10,"author":{"gitId":"jaredtengsw"},"content":"    private Task task;"},{"lineNumber":11,"author":{"gitId":"jaredtengsw"},"content":""},{"lineNumber":12,"author":{"gitId":"jaredtengsw"},"content":"    public TaskDoneException(Task task) {"},{"lineNumber":13,"author":{"gitId":"jaredtengsw"},"content":"        super (\"TaskDoneException\");"},{"lineNumber":14,"author":{"gitId":"jaredtengsw"},"content":"        this.task \u003d task;"},{"lineNumber":15,"author":{"gitId":"jaredtengsw"},"content":"    }"},{"lineNumber":16,"author":{"gitId":"jaredtengsw"},"content":""},{"lineNumber":17,"author":{"gitId":"jaredtengsw"},"content":"    @Override"},{"lineNumber":18,"author":{"gitId":"jaredtengsw"},"content":"    public String toString() {"},{"lineNumber":19,"author":{"gitId":"jaredtengsw"},"content":"        return \"Master, \""},{"lineNumber":20,"author":{"gitId":"jaredtengsw"},"content":"                + this.task.toString()"},{"lineNumber":21,"author":{"gitId":"jaredtengsw"},"content":"                + \" has already been marked as completed.\";"},{"lineNumber":22,"author":{"gitId":"jaredtengsw"},"content":"    }"},{"lineNumber":23,"author":{"gitId":"jaredtengsw"},"content":"}"}],"authorContributionMap":{"jaredtengsw":23}},{"path":"src/main/java/duke/parser/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jaredtengsw"},"content":"package duke.parser;"},{"lineNumber":2,"author":{"gitId":"jaredtengsw"},"content":""},{"lineNumber":3,"author":{"gitId":"jaredtengsw"},"content":"import duke.commands.*;"},{"lineNumber":4,"author":{"gitId":"jaredtengsw"},"content":"import duke.exceptions.DukeException;"},{"lineNumber":5,"author":{"gitId":"jaredtengsw"},"content":"import duke.exceptions.InvalidCommandException;"},{"lineNumber":6,"author":{"gitId":"jaredtengsw"},"content":""},{"lineNumber":7,"author":{"gitId":"jaredtengsw"},"content":"/**"},{"lineNumber":8,"author":{"gitId":"jaredtengsw"},"content":" * A Parser class which does all the checking of commands"},{"lineNumber":9,"author":{"gitId":"jaredtengsw"},"content":" * in the programme."},{"lineNumber":10,"author":{"gitId":"jaredtengsw"},"content":" */"},{"lineNumber":11,"author":{"gitId":"jaredtengsw"},"content":"public class Parser {"},{"lineNumber":12,"author":{"gitId":"jaredtengsw"},"content":"    private static final String BYE_COMMAND \u003d \"bye\";"},{"lineNumber":13,"author":{"gitId":"jaredtengsw"},"content":"    private static final String LIST_COMMAND \u003d \"list\";"},{"lineNumber":14,"author":{"gitId":"jaredtengsw"},"content":"    private static final String DONE_COMMAND \u003d \"done\";"},{"lineNumber":15,"author":{"gitId":"jaredtengsw"},"content":"    private static final String DEADLINE_COMMAND \u003d \"deadline\";"},{"lineNumber":16,"author":{"gitId":"jaredtengsw"},"content":"    private static final String TODO_COMMAND \u003d \"todo\";"},{"lineNumber":17,"author":{"gitId":"jaredtengsw"},"content":"    private static final String EVENT_COMMAND \u003d \"event\";"},{"lineNumber":18,"author":{"gitId":"jaredtengsw"},"content":"    private static final String DELETE_COMMAND \u003d \"delete\";"},{"lineNumber":19,"author":{"gitId":"jaredtengsw"},"content":"    private static final String FIND_COMMAND \u003d \"find\";"},{"lineNumber":20,"author":{"gitId":"jaredtengsw"},"content":"    private static final String HELP_COMMAND \u003d \"help\";"},{"lineNumber":21,"author":{"gitId":"jaredtengsw"},"content":""},{"lineNumber":22,"author":{"gitId":"jaredtengsw"},"content":"    /**"},{"lineNumber":23,"author":{"gitId":"jaredtengsw"},"content":"     * Checks if the command given is \"bye\""},{"lineNumber":24,"author":{"gitId":"jaredtengsw"},"content":"     *"},{"lineNumber":25,"author":{"gitId":"jaredtengsw"},"content":"     * @param check the command to be checked"},{"lineNumber":26,"author":{"gitId":"jaredtengsw"},"content":"     * @return boolean, where true means command is indeed \"bye\""},{"lineNumber":27,"author":{"gitId":"jaredtengsw"},"content":"     */"},{"lineNumber":28,"author":{"gitId":"jaredtengsw"},"content":"    public static boolean isBye(String check) {"},{"lineNumber":29,"author":{"gitId":"jaredtengsw"},"content":"        return check.equals(BYE_COMMAND);"},{"lineNumber":30,"author":{"gitId":"jaredtengsw"},"content":"    }"},{"lineNumber":31,"author":{"gitId":"jaredtengsw"},"content":""},{"lineNumber":32,"author":{"gitId":"jaredtengsw"},"content":"    /**"},{"lineNumber":33,"author":{"gitId":"jaredtengsw"},"content":"     * Checks if the command given is \"list\""},{"lineNumber":34,"author":{"gitId":"jaredtengsw"},"content":"     *"},{"lineNumber":35,"author":{"gitId":"jaredtengsw"},"content":"     * @param check the command to be checked"},{"lineNumber":36,"author":{"gitId":"jaredtengsw"},"content":"     * @return boolean, where true means command is indeed \"list\""},{"lineNumber":37,"author":{"gitId":"jaredtengsw"},"content":"     */"},{"lineNumber":38,"author":{"gitId":"jaredtengsw"},"content":"    public static boolean isList(String check) {"},{"lineNumber":39,"author":{"gitId":"jaredtengsw"},"content":"        return check.equals(LIST_COMMAND);"},{"lineNumber":40,"author":{"gitId":"jaredtengsw"},"content":"    }"},{"lineNumber":41,"author":{"gitId":"jaredtengsw"},"content":""},{"lineNumber":42,"author":{"gitId":"jaredtengsw"},"content":"    /**"},{"lineNumber":43,"author":{"gitId":"jaredtengsw"},"content":"     * Checks if the command given is \"done\"."},{"lineNumber":44,"author":{"gitId":"jaredtengsw"},"content":"     * Function name is named as \"isEndOfProgram\" to avoid confusion"},{"lineNumber":45,"author":{"gitId":"jaredtengsw"},"content":"     * with \"isDone\" method from other classes."},{"lineNumber":46,"author":{"gitId":"jaredtengsw"},"content":"     *"},{"lineNumber":47,"author":{"gitId":"jaredtengsw"},"content":"     * @param check the command to be checked"},{"lineNumber":48,"author":{"gitId":"jaredtengsw"},"content":"     * @return boolean, where true means command is indeed \"done\""},{"lineNumber":49,"author":{"gitId":"jaredtengsw"},"content":"     */"},{"lineNumber":50,"author":{"gitId":"jaredtengsw"},"content":"    public static boolean isCompleted(String check) {"},{"lineNumber":51,"author":{"gitId":"jaredtengsw"},"content":"        return check.equals(DONE_COMMAND);"},{"lineNumber":52,"author":{"gitId":"jaredtengsw"},"content":"    }"},{"lineNumber":53,"author":{"gitId":"jaredtengsw"},"content":""},{"lineNumber":54,"author":{"gitId":"jaredtengsw"},"content":"    /**"},{"lineNumber":55,"author":{"gitId":"jaredtengsw"},"content":"     * Checks if the command given is \"todo\"."},{"lineNumber":56,"author":{"gitId":"jaredtengsw"},"content":"     *"},{"lineNumber":57,"author":{"gitId":"jaredtengsw"},"content":"     * @param check the command to be checked"},{"lineNumber":58,"author":{"gitId":"jaredtengsw"},"content":"     * @return boolean, where true means command is indeed \"todo\""},{"lineNumber":59,"author":{"gitId":"jaredtengsw"},"content":"     */"},{"lineNumber":60,"author":{"gitId":"jaredtengsw"},"content":"    public static boolean isToDo(String check) {"},{"lineNumber":61,"author":{"gitId":"jaredtengsw"},"content":"        return check.equals(TODO_COMMAND);"},{"lineNumber":62,"author":{"gitId":"jaredtengsw"},"content":"    }"},{"lineNumber":63,"author":{"gitId":"jaredtengsw"},"content":""},{"lineNumber":64,"author":{"gitId":"jaredtengsw"},"content":"    /**"},{"lineNumber":65,"author":{"gitId":"jaredtengsw"},"content":"     * Checks if the command given is \"deadline\""},{"lineNumber":66,"author":{"gitId":"jaredtengsw"},"content":"     *"},{"lineNumber":67,"author":{"gitId":"jaredtengsw"},"content":"     * @param check the command to be checked"},{"lineNumber":68,"author":{"gitId":"jaredtengsw"},"content":"     * @return boolean, where true means command is indeed \"deadline\""},{"lineNumber":69,"author":{"gitId":"jaredtengsw"},"content":"     */"},{"lineNumber":70,"author":{"gitId":"jaredtengsw"},"content":"    public static boolean isDeadline(String check) {"},{"lineNumber":71,"author":{"gitId":"jaredtengsw"},"content":"        return check.equals(DEADLINE_COMMAND);"},{"lineNumber":72,"author":{"gitId":"jaredtengsw"},"content":"    }"},{"lineNumber":73,"author":{"gitId":"jaredtengsw"},"content":""},{"lineNumber":74,"author":{"gitId":"jaredtengsw"},"content":"    /**"},{"lineNumber":75,"author":{"gitId":"jaredtengsw"},"content":"     * Checks if the command given is \"event\""},{"lineNumber":76,"author":{"gitId":"jaredtengsw"},"content":"     *"},{"lineNumber":77,"author":{"gitId":"jaredtengsw"},"content":"     * @param check the command to be checked"},{"lineNumber":78,"author":{"gitId":"jaredtengsw"},"content":"     * @return boolean, where true means command is indeed \"event\""},{"lineNumber":79,"author":{"gitId":"jaredtengsw"},"content":"     */"},{"lineNumber":80,"author":{"gitId":"jaredtengsw"},"content":"    public static boolean isEvent(String check) {"},{"lineNumber":81,"author":{"gitId":"jaredtengsw"},"content":"        return check.equals(EVENT_COMMAND);"},{"lineNumber":82,"author":{"gitId":"jaredtengsw"},"content":"    }"},{"lineNumber":83,"author":{"gitId":"jaredtengsw"},"content":""},{"lineNumber":84,"author":{"gitId":"jaredtengsw"},"content":"    /**"},{"lineNumber":85,"author":{"gitId":"jaredtengsw"},"content":"     * Checks if the command given is \"delete\""},{"lineNumber":86,"author":{"gitId":"jaredtengsw"},"content":"     *"},{"lineNumber":87,"author":{"gitId":"jaredtengsw"},"content":"     * @param check the command to be checked"},{"lineNumber":88,"author":{"gitId":"jaredtengsw"},"content":"     * @return boolean, where true means command is indeed \"delete\""},{"lineNumber":89,"author":{"gitId":"jaredtengsw"},"content":"     */"},{"lineNumber":90,"author":{"gitId":"jaredtengsw"},"content":"    public static boolean isDelete(String check) {"},{"lineNumber":91,"author":{"gitId":"jaredtengsw"},"content":"        return check.equals(DELETE_COMMAND);"},{"lineNumber":92,"author":{"gitId":"jaredtengsw"},"content":"    }"},{"lineNumber":93,"author":{"gitId":"jaredtengsw"},"content":""},{"lineNumber":94,"author":{"gitId":"jaredtengsw"},"content":"    /**"},{"lineNumber":95,"author":{"gitId":"jaredtengsw"},"content":"     * Checks if the command given is \"find\""},{"lineNumber":96,"author":{"gitId":"jaredtengsw"},"content":"     *"},{"lineNumber":97,"author":{"gitId":"jaredtengsw"},"content":"     * @param check the command to be checked"},{"lineNumber":98,"author":{"gitId":"jaredtengsw"},"content":"     * @return boolean, where true means command is indeed \"find\""},{"lineNumber":99,"author":{"gitId":"jaredtengsw"},"content":"     */"},{"lineNumber":100,"author":{"gitId":"jaredtengsw"},"content":"    public static boolean isFind(String check) {"},{"lineNumber":101,"author":{"gitId":"jaredtengsw"},"content":"        return check.equals(FIND_COMMAND);"},{"lineNumber":102,"author":{"gitId":"jaredtengsw"},"content":"    }"},{"lineNumber":103,"author":{"gitId":"jaredtengsw"},"content":""},{"lineNumber":104,"author":{"gitId":"jaredtengsw"},"content":"    /**"},{"lineNumber":105,"author":{"gitId":"jaredtengsw"},"content":"     * Checks if the command given is \"help\""},{"lineNumber":106,"author":{"gitId":"jaredtengsw"},"content":"     *"},{"lineNumber":107,"author":{"gitId":"jaredtengsw"},"content":"     * @param check the command to be checked"},{"lineNumber":108,"author":{"gitId":"jaredtengsw"},"content":"     * @return boolean, where true means command is indeed \"help\""},{"lineNumber":109,"author":{"gitId":"jaredtengsw"},"content":"     */"},{"lineNumber":110,"author":{"gitId":"jaredtengsw"},"content":"    public static boolean isHelp(String check) {"},{"lineNumber":111,"author":{"gitId":"jaredtengsw"},"content":"        return check.equals(HELP_COMMAND);"},{"lineNumber":112,"author":{"gitId":"jaredtengsw"},"content":"    }"},{"lineNumber":113,"author":{"gitId":"jaredtengsw"},"content":""},{"lineNumber":114,"author":{"gitId":"jaredtengsw"},"content":"    /**"},{"lineNumber":115,"author":{"gitId":"jaredtengsw"},"content":"     * Parses and checks the first word of the input against"},{"lineNumber":116,"author":{"gitId":"jaredtengsw"},"content":"     * the command keys before calling on the respective command."},{"lineNumber":117,"author":{"gitId":"jaredtengsw"},"content":"     *"},{"lineNumber":118,"author":{"gitId":"jaredtengsw"},"content":"     * @param input typed in by the user"},{"lineNumber":119,"author":{"gitId":"jaredtengsw"},"content":"     * @return Command class based on the respective command keyword identified"},{"lineNumber":120,"author":{"gitId":"jaredtengsw"},"content":"     * @throws DukeException"},{"lineNumber":121,"author":{"gitId":"jaredtengsw"},"content":"     */"},{"lineNumber":122,"author":{"gitId":"jaredtengsw"},"content":"    public static Command parse(String input) throws DukeException {"},{"lineNumber":123,"author":{"gitId":"jaredtengsw"},"content":"        String[] inputList \u003d input.split(\" \", 2);"},{"lineNumber":124,"author":{"gitId":"jaredtengsw"},"content":"        String command \u003d inputList[0].trim();"},{"lineNumber":125,"author":{"gitId":"jaredtengsw"},"content":""},{"lineNumber":126,"author":{"gitId":"jaredtengsw"},"content":"        if (isBye(command)) {"},{"lineNumber":127,"author":{"gitId":"jaredtengsw"},"content":"            return new ByeCommand(input);"},{"lineNumber":128,"author":{"gitId":"jaredtengsw"},"content":"        } else if (isList(command)) {"},{"lineNumber":129,"author":{"gitId":"jaredtengsw"},"content":"            return new ListCommand(input);"},{"lineNumber":130,"author":{"gitId":"jaredtengsw"},"content":"        } else if (isCompleted(command)) {"},{"lineNumber":131,"author":{"gitId":"jaredtengsw"},"content":"            return new DoneCommand(input);"},{"lineNumber":132,"author":{"gitId":"jaredtengsw"},"content":"        } else if (isToDo(command) | isEvent(command) | isDeadline(command)) {"},{"lineNumber":133,"author":{"gitId":"jaredtengsw"},"content":"            return new AddCommand(input);"},{"lineNumber":134,"author":{"gitId":"jaredtengsw"},"content":"        } else if (isDelete(command)) {"},{"lineNumber":135,"author":{"gitId":"jaredtengsw"},"content":"            return new DeleteCommand(input);"},{"lineNumber":136,"author":{"gitId":"jaredtengsw"},"content":"        } else if (isFind(command)) {"},{"lineNumber":137,"author":{"gitId":"jaredtengsw"},"content":"            return new FindCommand(input);"},{"lineNumber":138,"author":{"gitId":"jaredtengsw"},"content":"        } else if(isHelp(command)) {"},{"lineNumber":139,"author":{"gitId":"jaredtengsw"},"content":"            return new HelpCommand(input);"},{"lineNumber":140,"author":{"gitId":"jaredtengsw"},"content":"        } else {"},{"lineNumber":141,"author":{"gitId":"jaredtengsw"},"content":"            throw new InvalidCommandException();"},{"lineNumber":142,"author":{"gitId":"jaredtengsw"},"content":"        }"},{"lineNumber":143,"author":{"gitId":"jaredtengsw"},"content":"    }"},{"lineNumber":144,"author":{"gitId":"jaredtengsw"},"content":"}"}],"authorContributionMap":{"jaredtengsw":144}},{"path":"src/main/java/duke/storage/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jaredtengsw"},"content":"package duke.storage;"},{"lineNumber":2,"author":{"gitId":"jaredtengsw"},"content":""},{"lineNumber":3,"author":{"gitId":"jaredtengsw"},"content":"import duke.tasks.*;"},{"lineNumber":4,"author":{"gitId":"jaredtengsw"},"content":"import duke.taskList.TaskList;"},{"lineNumber":5,"author":{"gitId":"jaredtengsw"},"content":""},{"lineNumber":6,"author":{"gitId":"jaredtengsw"},"content":"import java.io.File;"},{"lineNumber":7,"author":{"gitId":"jaredtengsw"},"content":"import java.io.IOException;"},{"lineNumber":8,"author":{"gitId":"jaredtengsw"},"content":"import java.io.FileWriter;"},{"lineNumber":9,"author":{"gitId":"jaredtengsw"},"content":"import java.io.BufferedReader;"},{"lineNumber":10,"author":{"gitId":"jaredtengsw"},"content":"import java.io.BufferedWriter;"},{"lineNumber":11,"author":{"gitId":"jaredtengsw"},"content":""},{"lineNumber":12,"author":{"gitId":"jaredtengsw"},"content":"import java.nio.file.Files;"},{"lineNumber":13,"author":{"gitId":"jaredtengsw"},"content":"import java.nio.file.Path;"},{"lineNumber":14,"author":{"gitId":"jaredtengsw"},"content":"import java.nio.file.Paths;"},{"lineNumber":15,"author":{"gitId":"jaredtengsw"},"content":""},{"lineNumber":16,"author":{"gitId":"jaredtengsw"},"content":""},{"lineNumber":17,"author":{"gitId":"jaredtengsw"},"content":"/**"},{"lineNumber":18,"author":{"gitId":"jaredtengsw"},"content":" * A Storage class that creates a storage object which"},{"lineNumber":19,"author":{"gitId":"jaredtengsw"},"content":" * 1) Saves the Arraylist of Tasks into a .txt file."},{"lineNumber":20,"author":{"gitId":"jaredtengsw"},"content":" * 2) Loads the Arraylist of Tasks from a .txt file into a ArrayList Object"},{"lineNumber":21,"author":{"gitId":"jaredtengsw"},"content":" */"},{"lineNumber":22,"author":{"gitId":"jaredtengsw"},"content":"public class Storage {"},{"lineNumber":23,"author":{"gitId":"jaredtengsw"},"content":"    public static String DIRECTORY;"},{"lineNumber":24,"author":{"gitId":"jaredtengsw"},"content":""},{"lineNumber":25,"author":{"gitId":"jaredtengsw"},"content":"    /**"},{"lineNumber":26,"author":{"gitId":"jaredtengsw"},"content":"     * Creates a storage object"},{"lineNumber":27,"author":{"gitId":"jaredtengsw"},"content":"     *"},{"lineNumber":28,"author":{"gitId":"jaredtengsw"},"content":"     * @param directory, the path of storage file"},{"lineNumber":29,"author":{"gitId":"jaredtengsw"},"content":"     */"},{"lineNumber":30,"author":{"gitId":"jaredtengsw"},"content":"    public Storage(String directory) {"},{"lineNumber":31,"author":{"gitId":"jaredtengsw"},"content":"        this.DIRECTORY \u003d directory;"},{"lineNumber":32,"author":{"gitId":"jaredtengsw"},"content":"    }"},{"lineNumber":33,"author":{"gitId":"jaredtengsw"},"content":""},{"lineNumber":34,"author":{"gitId":"jaredtengsw"},"content":""},{"lineNumber":35,"author":{"gitId":"jaredtengsw"},"content":"    /** Saves the list of Tasks in the ArrayList object"},{"lineNumber":36,"author":{"gitId":"jaredtengsw"},"content":"     * into a .txt file."},{"lineNumber":37,"author":{"gitId":"jaredtengsw"},"content":"     *"},{"lineNumber":38,"author":{"gitId":"jaredtengsw"},"content":"     *  @param taskList"},{"lineNumber":39,"author":{"gitId":"jaredtengsw"},"content":"     */"},{"lineNumber":40,"author":{"gitId":"jaredtengsw"},"content":"    public void saveTaskList(TaskList taskList) {"},{"lineNumber":41,"author":{"gitId":"jaredtengsw"},"content":"        Path path \u003d Paths.get(this.DIRECTORY, \"Data\");"},{"lineNumber":42,"author":{"gitId":"jaredtengsw"},"content":"        try {"},{"lineNumber":43,"author":{"gitId":"jaredtengsw"},"content":"            /* Check if file path exists."},{"lineNumber":44,"author":{"gitId":"jaredtengsw"},"content":"             * If it doesn\u0027t, create a new directory."},{"lineNumber":45,"author":{"gitId":"jaredtengsw"},"content":"             */"},{"lineNumber":46,"author":{"gitId":"jaredtengsw"},"content":"            if (!Files.exists(path)) {"},{"lineNumber":47,"author":{"gitId":"jaredtengsw"},"content":"                Files.createDirectories(path);"},{"lineNumber":48,"author":{"gitId":"jaredtengsw"},"content":"            }"},{"lineNumber":49,"author":{"gitId":"jaredtengsw"},"content":""},{"lineNumber":50,"author":{"gitId":"jaredtengsw"},"content":"            Path filePath \u003d Paths.get(this.DIRECTORY, \"Data\", \"taskList.txt\");"},{"lineNumber":51,"author":{"gitId":"jaredtengsw"},"content":"            File taskFile \u003d filePath.toFile();"},{"lineNumber":52,"author":{"gitId":"jaredtengsw"},"content":""},{"lineNumber":53,"author":{"gitId":"jaredtengsw"},"content":"            /* Check if the file exists."},{"lineNumber":54,"author":{"gitId":"jaredtengsw"},"content":"             * If it doesn\u0027t, create a new file"},{"lineNumber":55,"author":{"gitId":"jaredtengsw"},"content":"             */"},{"lineNumber":56,"author":{"gitId":"jaredtengsw"},"content":"            if (!taskFile.exists()) {"},{"lineNumber":57,"author":{"gitId":"jaredtengsw"},"content":"                taskFile.createNewFile();"},{"lineNumber":58,"author":{"gitId":"jaredtengsw"},"content":"            }"},{"lineNumber":59,"author":{"gitId":"jaredtengsw"},"content":""},{"lineNumber":60,"author":{"gitId":"jaredtengsw"},"content":"            FileWriter fileWriter \u003d new FileWriter(taskFile);"},{"lineNumber":61,"author":{"gitId":"jaredtengsw"},"content":"            BufferedWriter bufferedWriter \u003d new BufferedWriter(fileWriter);"},{"lineNumber":62,"author":{"gitId":"jaredtengsw"},"content":""},{"lineNumber":63,"author":{"gitId":"jaredtengsw"},"content":"            Task task;"},{"lineNumber":64,"author":{"gitId":"jaredtengsw"},"content":"            for (int i \u003d 0; i \u003c taskList.getSize(); i++) {"},{"lineNumber":65,"author":{"gitId":"jaredtengsw"},"content":"                task \u003d taskList.getTask(i);"},{"lineNumber":66,"author":{"gitId":"jaredtengsw"},"content":"                bufferedWriter.write(task.toSave());"},{"lineNumber":67,"author":{"gitId":"jaredtengsw"},"content":"                bufferedWriter.write(\"~\");"},{"lineNumber":68,"author":{"gitId":"jaredtengsw"},"content":""},{"lineNumber":69,"author":{"gitId":"jaredtengsw"},"content":"                if(task.getDoneStatus()) {"},{"lineNumber":70,"author":{"gitId":"jaredtengsw"},"content":"                    bufferedWriter.write(\"1\");"},{"lineNumber":71,"author":{"gitId":"jaredtengsw"},"content":"                } else {"},{"lineNumber":72,"author":{"gitId":"jaredtengsw"},"content":"                    bufferedWriter.write(\"0\");"},{"lineNumber":73,"author":{"gitId":"jaredtengsw"},"content":"                }"},{"lineNumber":74,"author":{"gitId":"jaredtengsw"},"content":"                bufferedWriter.write(\"++\");"},{"lineNumber":75,"author":{"gitId":"jaredtengsw"},"content":"            }"},{"lineNumber":76,"author":{"gitId":"jaredtengsw"},"content":"            bufferedWriter.close();"},{"lineNumber":77,"author":{"gitId":"jaredtengsw"},"content":"        } catch (IOException error) {"},{"lineNumber":78,"author":{"gitId":"jaredtengsw"},"content":"            System.out.println(error.getMessage());"},{"lineNumber":79,"author":{"gitId":"jaredtengsw"},"content":"        }"},{"lineNumber":80,"author":{"gitId":"jaredtengsw"},"content":"    }"},{"lineNumber":81,"author":{"gitId":"jaredtengsw"},"content":""},{"lineNumber":82,"author":{"gitId":"jaredtengsw"},"content":""},{"lineNumber":83,"author":{"gitId":"jaredtengsw"},"content":"    /**"},{"lineNumber":84,"author":{"gitId":"jaredtengsw"},"content":"     * Loads the list of Tasks in the .txt file into the TaskList object"},{"lineNumber":85,"author":{"gitId":"jaredtengsw"},"content":"     *"},{"lineNumber":86,"author":{"gitId":"jaredtengsw"},"content":"     * @param taskList"},{"lineNumber":87,"author":{"gitId":"jaredtengsw"},"content":"     */"},{"lineNumber":88,"author":{"gitId":"jaredtengsw"},"content":"    public void loadTasks(TaskList taskList) {"},{"lineNumber":89,"author":{"gitId":"jaredtengsw"},"content":"        Path filePath \u003d Paths.get(this.DIRECTORY, \"Data\", \"taskList.txt\");"},{"lineNumber":90,"author":{"gitId":"jaredtengsw"},"content":""},{"lineNumber":91,"author":{"gitId":"jaredtengsw"},"content":"        if (filePath.toFile().exists()) {"},{"lineNumber":92,"author":{"gitId":"jaredtengsw"},"content":"            try {"},{"lineNumber":93,"author":{"gitId":"jaredtengsw"},"content":"                BufferedReader bufferedReader \u003d Files.newBufferedReader(filePath);"},{"lineNumber":94,"author":{"gitId":"jaredtengsw"},"content":"                String data \u003d bufferedReader.readLine();"},{"lineNumber":95,"author":{"gitId":"jaredtengsw"},"content":""},{"lineNumber":96,"author":{"gitId":"jaredtengsw"},"content":"                if (data !\u003d null) {"},{"lineNumber":97,"author":{"gitId":"jaredtengsw"},"content":"                    String[] tasks \u003d data.split(\"\\\\+\\\\+\");"},{"lineNumber":98,"author":{"gitId":"jaredtengsw"},"content":""},{"lineNumber":99,"author":{"gitId":"jaredtengsw"},"content":"                    for (int i \u003d 0; i \u003c tasks.length; i++) {"},{"lineNumber":100,"author":{"gitId":"jaredtengsw"},"content":"                        String[] doneList \u003d tasks[i].split(\"~\", 2);"},{"lineNumber":101,"author":{"gitId":"jaredtengsw"},"content":"                        String[] nameList \u003d doneList[0].split(\" \", 2);"},{"lineNumber":102,"author":{"gitId":"jaredtengsw"},"content":"                        String command \u003d nameList[0];"},{"lineNumber":103,"author":{"gitId":"jaredtengsw"},"content":""},{"lineNumber":104,"author":{"gitId":"jaredtengsw"},"content":"                        createTask(command, doneList, nameList, taskList);"},{"lineNumber":105,"author":{"gitId":"jaredtengsw"},"content":"                    }"},{"lineNumber":106,"author":{"gitId":"jaredtengsw"},"content":"                }"},{"lineNumber":107,"author":{"gitId":"jaredtengsw"},"content":"            } catch (IOException error) {"},{"lineNumber":108,"author":{"gitId":"jaredtengsw"},"content":"                System.out.println(error.getMessage());"},{"lineNumber":109,"author":{"gitId":"jaredtengsw"},"content":"            }"},{"lineNumber":110,"author":{"gitId":"jaredtengsw"},"content":"        } else {"},{"lineNumber":111,"author":{"gitId":"jaredtengsw"},"content":"            File createFile \u003d new File(\"/Data/duke.txt\");"},{"lineNumber":112,"author":{"gitId":"jaredtengsw"},"content":"        }"},{"lineNumber":113,"author":{"gitId":"jaredtengsw"},"content":"    }"},{"lineNumber":114,"author":{"gitId":"jaredtengsw"},"content":""},{"lineNumber":115,"author":{"gitId":"jaredtengsw"},"content":"    /**"},{"lineNumber":116,"author":{"gitId":"jaredtengsw"},"content":"     * Creates the respective task based the command using details from nameList"},{"lineNumber":117,"author":{"gitId":"jaredtengsw"},"content":"     * and doneList before storing them into the taskList for loading"},{"lineNumber":118,"author":{"gitId":"jaredtengsw"},"content":"     *"},{"lineNumber":119,"author":{"gitId":"jaredtengsw"},"content":"     * @param command the command keyword to identify the task type"},{"lineNumber":120,"author":{"gitId":"jaredtengsw"},"content":"     * @param doneList a list of tasks stored"},{"lineNumber":121,"author":{"gitId":"jaredtengsw"},"content":"     * @param nameList list of details of each individual task"},{"lineNumber":122,"author":{"gitId":"jaredtengsw"},"content":"     * @param taskList the list to store the tasks allowing the user to modify the task objects"},{"lineNumber":123,"author":{"gitId":"jaredtengsw"},"content":"     */"},{"lineNumber":124,"author":{"gitId":"jaredtengsw"},"content":"    public void createTask(String command, String[] doneList, String[] nameList, TaskList taskList) {"},{"lineNumber":125,"author":{"gitId":"jaredtengsw"},"content":"        Task taskItem;"},{"lineNumber":126,"author":{"gitId":"jaredtengsw"},"content":"        switch (command) {"},{"lineNumber":127,"author":{"gitId":"jaredtengsw"},"content":"            case \"DEADLINE\":"},{"lineNumber":128,"author":{"gitId":"jaredtengsw"},"content":"                String[] deadlineItem \u003d nameList[1].split(\"/by\", 2);"},{"lineNumber":129,"author":{"gitId":"jaredtengsw"},"content":"                taskItem \u003d new Deadline(deadlineItem[0],"},{"lineNumber":130,"author":{"gitId":"jaredtengsw"},"content":"                        deadlineItem[1],"},{"lineNumber":131,"author":{"gitId":"jaredtengsw"},"content":"                        checkDone(doneList[1]));"},{"lineNumber":132,"author":{"gitId":"jaredtengsw"},"content":"                taskList.addTask(taskItem);"},{"lineNumber":133,"author":{"gitId":"jaredtengsw"},"content":"                break;"},{"lineNumber":134,"author":{"gitId":"jaredtengsw"},"content":"            case \"EVENT\":"},{"lineNumber":135,"author":{"gitId":"jaredtengsw"},"content":"                String[] eventItem \u003d nameList[1].split(\"/at\", 2);"},{"lineNumber":136,"author":{"gitId":"jaredtengsw"},"content":"                taskItem \u003d new Event(eventItem[0],"},{"lineNumber":137,"author":{"gitId":"jaredtengsw"},"content":"                        eventItem[1],"},{"lineNumber":138,"author":{"gitId":"jaredtengsw"},"content":"                        checkDone(doneList[1]));"},{"lineNumber":139,"author":{"gitId":"jaredtengsw"},"content":"                taskList.addTask(taskItem);"},{"lineNumber":140,"author":{"gitId":"jaredtengsw"},"content":"                break;"},{"lineNumber":141,"author":{"gitId":"jaredtengsw"},"content":"            case \"TODO\":"},{"lineNumber":142,"author":{"gitId":"jaredtengsw"},"content":"                taskItem \u003d new ToDo(nameList[1], checkDone(doneList[1]));"},{"lineNumber":143,"author":{"gitId":"jaredtengsw"},"content":"                taskList.addTask(taskItem);"},{"lineNumber":144,"author":{"gitId":"jaredtengsw"},"content":"                break;"},{"lineNumber":145,"author":{"gitId":"jaredtengsw"},"content":"            default:"},{"lineNumber":146,"author":{"gitId":"jaredtengsw"},"content":"                break;"},{"lineNumber":147,"author":{"gitId":"jaredtengsw"},"content":"        }"},{"lineNumber":148,"author":{"gitId":"jaredtengsw"},"content":"    }"},{"lineNumber":149,"author":{"gitId":"jaredtengsw"},"content":""},{"lineNumber":150,"author":{"gitId":"jaredtengsw"},"content":"    /**"},{"lineNumber":151,"author":{"gitId":"jaredtengsw"},"content":"     * Checks if the task has been marked done before"},{"lineNumber":152,"author":{"gitId":"jaredtengsw"},"content":"     *"},{"lineNumber":153,"author":{"gitId":"jaredtengsw"},"content":"     * @param item, task to be checked"},{"lineNumber":154,"author":{"gitId":"jaredtengsw"},"content":"     * @return boolean indicating whether it has been marked done before"},{"lineNumber":155,"author":{"gitId":"jaredtengsw"},"content":"     */"},{"lineNumber":156,"author":{"gitId":"jaredtengsw"},"content":"    private static boolean checkDone (String item) {"},{"lineNumber":157,"author":{"gitId":"jaredtengsw"},"content":"        return item.equals(\"1\");"},{"lineNumber":158,"author":{"gitId":"jaredtengsw"},"content":"    }"},{"lineNumber":159,"author":{"gitId":"jaredtengsw"},"content":"}"}],"authorContributionMap":{"jaredtengsw":159}},{"path":"src/main/java/duke/taskList/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jaredtengsw"},"content":"package duke.taskList;"},{"lineNumber":2,"author":{"gitId":"jaredtengsw"},"content":""},{"lineNumber":3,"author":{"gitId":"jaredtengsw"},"content":"import duke.tasks.Task;"},{"lineNumber":4,"author":{"gitId":"jaredtengsw"},"content":""},{"lineNumber":5,"author":{"gitId":"jaredtengsw"},"content":"import java.util.ArrayList;"},{"lineNumber":6,"author":{"gitId":"jaredtengsw"},"content":""},{"lineNumber":7,"author":{"gitId":"jaredtengsw"},"content":"/**"},{"lineNumber":8,"author":{"gitId":"jaredtengsw"},"content":" * A taskList class which stores Task objects in an ArrayList object."},{"lineNumber":9,"author":{"gitId":"jaredtengsw"},"content":" */"},{"lineNumber":10,"author":{"gitId":"jaredtengsw"},"content":"public class TaskList {"},{"lineNumber":11,"author":{"gitId":"jaredtengsw"},"content":"    private ArrayList\u003cTask\u003e taskList;"},{"lineNumber":12,"author":{"gitId":"jaredtengsw"},"content":""},{"lineNumber":13,"author":{"gitId":"jaredtengsw"},"content":"    public TaskList() {"},{"lineNumber":14,"author":{"gitId":"jaredtengsw"},"content":"        this.taskList \u003d new ArrayList\u003cTask\u003e();"},{"lineNumber":15,"author":{"gitId":"jaredtengsw"},"content":"    }"},{"lineNumber":16,"author":{"gitId":"jaredtengsw"},"content":""},{"lineNumber":17,"author":{"gitId":"jaredtengsw"},"content":"    /**"},{"lineNumber":18,"author":{"gitId":"jaredtengsw"},"content":"     * Adds a Task object into the taskList"},{"lineNumber":19,"author":{"gitId":"jaredtengsw"},"content":"     *"},{"lineNumber":20,"author":{"gitId":"jaredtengsw"},"content":"     * @param task"},{"lineNumber":21,"author":{"gitId":"jaredtengsw"},"content":"     */"},{"lineNumber":22,"author":{"gitId":"jaredtengsw"},"content":"    public void addTask(Task task) {"},{"lineNumber":23,"author":{"gitId":"jaredtengsw"},"content":"        taskList.add(task);"},{"lineNumber":24,"author":{"gitId":"jaredtengsw"},"content":"    }"},{"lineNumber":25,"author":{"gitId":"jaredtengsw"},"content":""},{"lineNumber":26,"author":{"gitId":"jaredtengsw"},"content":"    /**"},{"lineNumber":27,"author":{"gitId":"jaredtengsw"},"content":"     * Removes a Task object from the taskList based on"},{"lineNumber":28,"author":{"gitId":"jaredtengsw"},"content":"     * index position of the task."},{"lineNumber":29,"author":{"gitId":"jaredtengsw"},"content":"     *"},{"lineNumber":30,"author":{"gitId":"jaredtengsw"},"content":"     * @param i, the index position of the task Object"},{"lineNumber":31,"author":{"gitId":"jaredtengsw"},"content":"     */"},{"lineNumber":32,"author":{"gitId":"jaredtengsw"},"content":"    public Task removeTask(int i) {"},{"lineNumber":33,"author":{"gitId":"jaredtengsw"},"content":"        return taskList.remove(i);"},{"lineNumber":34,"author":{"gitId":"jaredtengsw"},"content":"    }"},{"lineNumber":35,"author":{"gitId":"jaredtengsw"},"content":""},{"lineNumber":36,"author":{"gitId":"jaredtengsw"},"content":"    /**"},{"lineNumber":37,"author":{"gitId":"jaredtengsw"},"content":"     * Returns the number of tasks in the taskList"},{"lineNumber":38,"author":{"gitId":"jaredtengsw"},"content":"     *"},{"lineNumber":39,"author":{"gitId":"jaredtengsw"},"content":"     * @return int, size of the taskList"},{"lineNumber":40,"author":{"gitId":"jaredtengsw"},"content":"     */"},{"lineNumber":41,"author":{"gitId":"jaredtengsw"},"content":"    public int getSize() {"},{"lineNumber":42,"author":{"gitId":"jaredtengsw"},"content":"        return taskList.size();"},{"lineNumber":43,"author":{"gitId":"jaredtengsw"},"content":"    }"},{"lineNumber":44,"author":{"gitId":"jaredtengsw"},"content":""},{"lineNumber":45,"author":{"gitId":"jaredtengsw"},"content":"    /**"},{"lineNumber":46,"author":{"gitId":"jaredtengsw"},"content":"     * Returns the Task object at the specified index"},{"lineNumber":47,"author":{"gitId":"jaredtengsw"},"content":"     *"},{"lineNumber":48,"author":{"gitId":"jaredtengsw"},"content":"     * @param i, index of the task"},{"lineNumber":49,"author":{"gitId":"jaredtengsw"},"content":"     * @return Task, at the given index"},{"lineNumber":50,"author":{"gitId":"jaredtengsw"},"content":"     */"},{"lineNumber":51,"author":{"gitId":"jaredtengsw"},"content":"    public Task getTask(int i) {"},{"lineNumber":52,"author":{"gitId":"jaredtengsw"},"content":"        return taskList.get(i);"},{"lineNumber":53,"author":{"gitId":"jaredtengsw"},"content":"    }"},{"lineNumber":54,"author":{"gitId":"jaredtengsw"},"content":"}"}],"authorContributionMap":{"jaredtengsw":54}},{"path":"src/main/java/duke/tasks/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jaredtengsw"},"content":"package duke.tasks;"},{"lineNumber":2,"author":{"gitId":"jaredtengsw"},"content":""},{"lineNumber":3,"author":{"gitId":"jaredtengsw"},"content":"import java.time.LocalTime;"},{"lineNumber":4,"author":{"gitId":"jaredtengsw"},"content":"import java.time.LocalDate;"},{"lineNumber":5,"author":{"gitId":"jaredtengsw"},"content":"import java.time.format.DateTimeFormatter;"},{"lineNumber":6,"author":{"gitId":"jaredtengsw"},"content":""},{"lineNumber":7,"author":{"gitId":"jaredtengsw"},"content":"/**"},{"lineNumber":8,"author":{"gitId":"jaredtengsw"},"content":" * A children of the Task class with additional details"},{"lineNumber":9,"author":{"gitId":"jaredtengsw"},"content":" * stored like date and time of deadline object and functions"},{"lineNumber":10,"author":{"gitId":"jaredtengsw"},"content":" * to return these details."},{"lineNumber":11,"author":{"gitId":"jaredtengsw"},"content":" */"},{"lineNumber":12,"author":{"gitId":"jaredtengsw"},"content":"public class Deadline extends Task {"},{"lineNumber":13,"author":{"gitId":"jaredtengsw"},"content":"    protected String afterBy;"},{"lineNumber":14,"author":{"gitId":"jaredtengsw"},"content":"    protected String date;"},{"lineNumber":15,"author":{"gitId":"jaredtengsw"},"content":"    protected String time;"},{"lineNumber":16,"author":{"gitId":"jaredtengsw"},"content":""},{"lineNumber":17,"author":{"gitId":"jaredtengsw"},"content":"    /**"},{"lineNumber":18,"author":{"gitId":"jaredtengsw"},"content":"     * Default constructor used when a new Deadline task is added"},{"lineNumber":19,"author":{"gitId":"jaredtengsw"},"content":"     *"},{"lineNumber":20,"author":{"gitId":"jaredtengsw"},"content":"     * @param info, name of the task"},{"lineNumber":21,"author":{"gitId":"jaredtengsw"},"content":"     * @param afterBy details after \"/by\" in the input"},{"lineNumber":22,"author":{"gitId":"jaredtengsw"},"content":"     */"},{"lineNumber":23,"author":{"gitId":"jaredtengsw"},"content":"    public Deadline (String info, String afterBy) {"},{"lineNumber":24,"author":{"gitId":"jaredtengsw"},"content":"        super(info, taskType.DEADLINE);"},{"lineNumber":25,"author":{"gitId":"jaredtengsw"},"content":"        this.afterBy \u003d afterBy.trim();"},{"lineNumber":26,"author":{"gitId":"jaredtengsw"},"content":"        String[] afterByList \u003d this.afterBy.split(\" \", 2);"},{"lineNumber":27,"author":{"gitId":"jaredtengsw"},"content":"        this.date \u003d afterByList[0];"},{"lineNumber":28,"author":{"gitId":"jaredtengsw"},"content":""},{"lineNumber":29,"author":{"gitId":"jaredtengsw"},"content":"        if (afterByList.length \u003d\u003d 3) {"},{"lineNumber":30,"author":{"gitId":"jaredtengsw"},"content":"            this.time \u003d afterByList[1];"},{"lineNumber":31,"author":{"gitId":"jaredtengsw"},"content":"        }"},{"lineNumber":32,"author":{"gitId":"jaredtengsw"},"content":"    }"},{"lineNumber":33,"author":{"gitId":"jaredtengsw"},"content":""},{"lineNumber":34,"author":{"gitId":"jaredtengsw"},"content":"    /**"},{"lineNumber":35,"author":{"gitId":"jaredtengsw"},"content":"     * Secondary constructor used when the task is loaded from a"},{"lineNumber":36,"author":{"gitId":"jaredtengsw"},"content":"     * .txt file"},{"lineNumber":37,"author":{"gitId":"jaredtengsw"},"content":"     *"},{"lineNumber":38,"author":{"gitId":"jaredtengsw"},"content":"     * @param info, name of the task"},{"lineNumber":39,"author":{"gitId":"jaredtengsw"},"content":"     * @param afterBy, details after \"/by\" in the input"},{"lineNumber":40,"author":{"gitId":"jaredtengsw"},"content":"     * @param isDone, boolean value to indicate whether task is done"},{"lineNumber":41,"author":{"gitId":"jaredtengsw"},"content":"     */"},{"lineNumber":42,"author":{"gitId":"jaredtengsw"},"content":"    public Deadline(String info, String afterBy, boolean isDone) {"},{"lineNumber":43,"author":{"gitId":"jaredtengsw"},"content":"        super(info, taskType.DEADLINE, isDone);"},{"lineNumber":44,"author":{"gitId":"jaredtengsw"},"content":"        this.afterBy \u003d afterBy.trim();"},{"lineNumber":45,"author":{"gitId":"jaredtengsw"},"content":"        String[] afterByList \u003d this.afterBy.split(\" \", 2);"},{"lineNumber":46,"author":{"gitId":"jaredtengsw"},"content":"        this.date \u003d afterByList[0];"},{"lineNumber":47,"author":{"gitId":"jaredtengsw"},"content":""},{"lineNumber":48,"author":{"gitId":"jaredtengsw"},"content":"        if (afterByList.length \u003d\u003d 3) {"},{"lineNumber":49,"author":{"gitId":"jaredtengsw"},"content":"            this.time \u003d afterByList[1];"},{"lineNumber":50,"author":{"gitId":"jaredtengsw"},"content":"        }"},{"lineNumber":51,"author":{"gitId":"jaredtengsw"},"content":"    }"},{"lineNumber":52,"author":{"gitId":"jaredtengsw"},"content":""},{"lineNumber":53,"author":{"gitId":"jaredtengsw"},"content":"    /**"},{"lineNumber":54,"author":{"gitId":"jaredtengsw"},"content":"     * Returns string containing details of Deadline object after /by"},{"lineNumber":55,"author":{"gitId":"jaredtengsw"},"content":"     *"},{"lineNumber":56,"author":{"gitId":"jaredtengsw"},"content":"     * @return String with details of after /by"},{"lineNumber":57,"author":{"gitId":"jaredtengsw"},"content":"     */"},{"lineNumber":58,"author":{"gitId":"jaredtengsw"},"content":"    public String getAfterBy() {"},{"lineNumber":59,"author":{"gitId":"jaredtengsw"},"content":"        return this.afterBy;"},{"lineNumber":60,"author":{"gitId":"jaredtengsw"},"content":"    }"},{"lineNumber":61,"author":{"gitId":"jaredtengsw"},"content":""},{"lineNumber":62,"author":{"gitId":"jaredtengsw"},"content":"    /**"},{"lineNumber":63,"author":{"gitId":"jaredtengsw"},"content":"     * Returns the due date and time (if available) of the Deadline object."},{"lineNumber":64,"author":{"gitId":"jaredtengsw"},"content":"     *"},{"lineNumber":65,"author":{"gitId":"jaredtengsw"},"content":"     * @return date and time (if available)"},{"lineNumber":66,"author":{"gitId":"jaredtengsw"},"content":"     */"},{"lineNumber":67,"author":{"gitId":"jaredtengsw"},"content":"    public String getDateTime() {"},{"lineNumber":68,"author":{"gitId":"jaredtengsw"},"content":"        //Example of date based on format: 10 Aug 2021"},{"lineNumber":69,"author":{"gitId":"jaredtengsw"},"content":"        DateTimeFormatter dateFormat \u003d DateTimeFormatter.ofPattern(\"dd MMM yyyy\");"},{"lineNumber":70,"author":{"gitId":"jaredtengsw"},"content":"        String[] dateList \u003d this.afterBy.split(\" \", 2);"},{"lineNumber":71,"author":{"gitId":"jaredtengsw"},"content":"        LocalDate deadlineDate;"},{"lineNumber":72,"author":{"gitId":"jaredtengsw"},"content":""},{"lineNumber":73,"author":{"gitId":"jaredtengsw"},"content":"        deadlineDate \u003d LocalDate.parse(dateList[0]);"},{"lineNumber":74,"author":{"gitId":"jaredtengsw"},"content":""},{"lineNumber":75,"author":{"gitId":"jaredtengsw"},"content":"        if (dateList.length \u003e\u003d 2) {"},{"lineNumber":76,"author":{"gitId":"jaredtengsw"},"content":"            DateTimeFormatter timeFormat \u003d DateTimeFormatter.ofPattern(\"hh:mma\");"},{"lineNumber":77,"author":{"gitId":"jaredtengsw"},"content":"            LocalTime time \u003d LocalTime.parse(dateList[1]);"},{"lineNumber":78,"author":{"gitId":"jaredtengsw"},"content":""},{"lineNumber":79,"author":{"gitId":"jaredtengsw"},"content":"            return deadlineDate.format(dateFormat) + \" \" + time.format(timeFormat);"},{"lineNumber":80,"author":{"gitId":"jaredtengsw"},"content":"        } else {"},{"lineNumber":81,"author":{"gitId":"jaredtengsw"},"content":"            return deadlineDate.toString();"},{"lineNumber":82,"author":{"gitId":"jaredtengsw"},"content":"        }"},{"lineNumber":83,"author":{"gitId":"jaredtengsw"},"content":"    }"},{"lineNumber":84,"author":{"gitId":"jaredtengsw"},"content":""},{"lineNumber":85,"author":{"gitId":"jaredtengsw"},"content":"    @Override"},{"lineNumber":86,"author":{"gitId":"jaredtengsw"},"content":"    public String toSave() {"},{"lineNumber":87,"author":{"gitId":"jaredtengsw"},"content":"        return this.getType().toString() + \" \""},{"lineNumber":88,"author":{"gitId":"jaredtengsw"},"content":"                + this.getInfo().trim()"},{"lineNumber":89,"author":{"gitId":"jaredtengsw"},"content":"                + \"/by\""},{"lineNumber":90,"author":{"gitId":"jaredtengsw"},"content":"                + this.getAfterBy().trim();"},{"lineNumber":91,"author":{"gitId":"jaredtengsw"},"content":"    }"},{"lineNumber":92,"author":{"gitId":"jaredtengsw"},"content":""},{"lineNumber":93,"author":{"gitId":"jaredtengsw"},"content":"    @Override"},{"lineNumber":94,"author":{"gitId":"jaredtengsw"},"content":"    public String toString() {"},{"lineNumber":95,"author":{"gitId":"jaredtengsw"},"content":"        return \"[D]\" + super.toString() + \" (by: \" + getDateTime() + \")\";"},{"lineNumber":96,"author":{"gitId":"jaredtengsw"},"content":"    }"},{"lineNumber":97,"author":{"gitId":"jaredtengsw"},"content":"}"},{"lineNumber":98,"author":{"gitId":"jaredtengsw"},"content":""}],"authorContributionMap":{"jaredtengsw":98}},{"path":"src/main/java/duke/tasks/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jaredtengsw"},"content":"package duke.tasks;"},{"lineNumber":2,"author":{"gitId":"jaredtengsw"},"content":""},{"lineNumber":3,"author":{"gitId":"jaredtengsw"},"content":"import java.time.LocalDate;"},{"lineNumber":4,"author":{"gitId":"jaredtengsw"},"content":"import java.time.LocalTime;"},{"lineNumber":5,"author":{"gitId":"jaredtengsw"},"content":"import java.time.format.DateTimeFormatter;"},{"lineNumber":6,"author":{"gitId":"jaredtengsw"},"content":""},{"lineNumber":7,"author":{"gitId":"jaredtengsw"},"content":"/**"},{"lineNumber":8,"author":{"gitId":"jaredtengsw"},"content":" * A children of the Task class with additional details"},{"lineNumber":9,"author":{"gitId":"jaredtengsw"},"content":" * stored like location, date and time of deadline object"},{"lineNumber":10,"author":{"gitId":"jaredtengsw"},"content":" * and functions to return these details."},{"lineNumber":11,"author":{"gitId":"jaredtengsw"},"content":" */"},{"lineNumber":12,"author":{"gitId":"jaredtengsw"},"content":"public class Event extends Task{"},{"lineNumber":13,"author":{"gitId":"jaredtengsw"},"content":"    protected String afterAt;"},{"lineNumber":14,"author":{"gitId":"jaredtengsw"},"content":"    protected String location;"},{"lineNumber":15,"author":{"gitId":"jaredtengsw"},"content":"    protected String date;"},{"lineNumber":16,"author":{"gitId":"jaredtengsw"},"content":"    protected String time;"},{"lineNumber":17,"author":{"gitId":"jaredtengsw"},"content":""},{"lineNumber":18,"author":{"gitId":"jaredtengsw"},"content":"    /**"},{"lineNumber":19,"author":{"gitId":"jaredtengsw"},"content":"     * Default constructor used when a new Event task is added"},{"lineNumber":20,"author":{"gitId":"jaredtengsw"},"content":"     *"},{"lineNumber":21,"author":{"gitId":"jaredtengsw"},"content":"     * @param info name of the task"},{"lineNumber":22,"author":{"gitId":"jaredtengsw"},"content":"     * @param afterAt details after \"/at\" in the input"},{"lineNumber":23,"author":{"gitId":"jaredtengsw"},"content":"     */"},{"lineNumber":24,"author":{"gitId":"jaredtengsw"},"content":"    public Event (String info, String afterAt) {"},{"lineNumber":25,"author":{"gitId":"jaredtengsw"},"content":"        super(info, taskType.EVENT);"},{"lineNumber":26,"author":{"gitId":"jaredtengsw"},"content":"        this.afterAt \u003d afterAt.trim();"},{"lineNumber":27,"author":{"gitId":"jaredtengsw"},"content":"        String[] afterAtList \u003d this.afterAt.trim().split(\" \", 3);"},{"lineNumber":28,"author":{"gitId":"jaredtengsw"},"content":"        this.location \u003d afterAtList[0];"},{"lineNumber":29,"author":{"gitId":"jaredtengsw"},"content":"        this.date \u003d afterAtList[1];"},{"lineNumber":30,"author":{"gitId":"jaredtengsw"},"content":""},{"lineNumber":31,"author":{"gitId":"jaredtengsw"},"content":"        if (afterAtList.length \u003d\u003d 3) {"},{"lineNumber":32,"author":{"gitId":"jaredtengsw"},"content":"            this.time \u003d afterAtList[2];"},{"lineNumber":33,"author":{"gitId":"jaredtengsw"},"content":"        }"},{"lineNumber":34,"author":{"gitId":"jaredtengsw"},"content":""},{"lineNumber":35,"author":{"gitId":"jaredtengsw"},"content":"    }"},{"lineNumber":36,"author":{"gitId":"jaredtengsw"},"content":""},{"lineNumber":37,"author":{"gitId":"jaredtengsw"},"content":"    /**"},{"lineNumber":38,"author":{"gitId":"jaredtengsw"},"content":"     * Secondary constructor used when a new Event task is loaded"},{"lineNumber":39,"author":{"gitId":"jaredtengsw"},"content":"     * from a .txt file"},{"lineNumber":40,"author":{"gitId":"jaredtengsw"},"content":"     *"},{"lineNumber":41,"author":{"gitId":"jaredtengsw"},"content":"     * @param info name of the task"},{"lineNumber":42,"author":{"gitId":"jaredtengsw"},"content":"     * @param afterAt details after \"/at\" in the input"},{"lineNumber":43,"author":{"gitId":"jaredtengsw"},"content":"     * @param isDone boolean value indicating whether task is done"},{"lineNumber":44,"author":{"gitId":"jaredtengsw"},"content":"     */"},{"lineNumber":45,"author":{"gitId":"jaredtengsw"},"content":"    public Event(String info, String afterAt, boolean isDone) {"},{"lineNumber":46,"author":{"gitId":"jaredtengsw"},"content":"        super(info, taskType.EVENT, isDone);"},{"lineNumber":47,"author":{"gitId":"jaredtengsw"},"content":"        this.afterAt \u003d afterAt.trim();"},{"lineNumber":48,"author":{"gitId":"jaredtengsw"},"content":"        String[] afterAtList \u003d this.afterAt.split(\" \", 3);"},{"lineNumber":49,"author":{"gitId":"jaredtengsw"},"content":"        this.location \u003d afterAtList[0];"},{"lineNumber":50,"author":{"gitId":"jaredtengsw"},"content":"        this.date \u003d afterAtList[1];"},{"lineNumber":51,"author":{"gitId":"jaredtengsw"},"content":""},{"lineNumber":52,"author":{"gitId":"jaredtengsw"},"content":"        if (afterAtList.length \u003d\u003d 3) {"},{"lineNumber":53,"author":{"gitId":"jaredtengsw"},"content":"            this.time \u003d afterAtList[2];"},{"lineNumber":54,"author":{"gitId":"jaredtengsw"},"content":"        }"},{"lineNumber":55,"author":{"gitId":"jaredtengsw"},"content":"    }"},{"lineNumber":56,"author":{"gitId":"jaredtengsw"},"content":""},{"lineNumber":57,"author":{"gitId":"jaredtengsw"},"content":"    /**"},{"lineNumber":58,"author":{"gitId":"jaredtengsw"},"content":"     * Returns the due date and time (if available) of the Event object."},{"lineNumber":59,"author":{"gitId":"jaredtengsw"},"content":"     *"},{"lineNumber":60,"author":{"gitId":"jaredtengsw"},"content":"     * @return date and time (if available)"},{"lineNumber":61,"author":{"gitId":"jaredtengsw"},"content":"     */"},{"lineNumber":62,"author":{"gitId":"jaredtengsw"},"content":"    public String getDateTime() {"},{"lineNumber":63,"author":{"gitId":"jaredtengsw"},"content":"        //Example of date based on format: 10 Aug 2021"},{"lineNumber":64,"author":{"gitId":"jaredtengsw"},"content":"        DateTimeFormatter dateFormat \u003d DateTimeFormatter.ofPattern(\"dd MMM yyyy\");"},{"lineNumber":65,"author":{"gitId":"jaredtengsw"},"content":"        LocalDate eventDate;"},{"lineNumber":66,"author":{"gitId":"jaredtengsw"},"content":"            eventDate \u003d LocalDate.parse(date);"},{"lineNumber":67,"author":{"gitId":"jaredtengsw"},"content":""},{"lineNumber":68,"author":{"gitId":"jaredtengsw"},"content":"        if (time !\u003d null) {"},{"lineNumber":69,"author":{"gitId":"jaredtengsw"},"content":"            DateTimeFormatter timeFormat \u003d DateTimeFormatter.ofPattern(\"hh:mma\");"},{"lineNumber":70,"author":{"gitId":"jaredtengsw"},"content":"            LocalTime eventTime \u003d LocalTime.parse(time);"},{"lineNumber":71,"author":{"gitId":"jaredtengsw"},"content":"            return eventDate.format(dateFormat) + \" \" + eventTime.format(timeFormat);"},{"lineNumber":72,"author":{"gitId":"jaredtengsw"},"content":"        } else {"},{"lineNumber":73,"author":{"gitId":"jaredtengsw"},"content":"            return eventDate.toString();"},{"lineNumber":74,"author":{"gitId":"jaredtengsw"},"content":"        }"},{"lineNumber":75,"author":{"gitId":"jaredtengsw"},"content":"    }"},{"lineNumber":76,"author":{"gitId":"jaredtengsw"},"content":""},{"lineNumber":77,"author":{"gitId":"jaredtengsw"},"content":"    /**"},{"lineNumber":78,"author":{"gitId":"jaredtengsw"},"content":"     * Returns the location of the event"},{"lineNumber":79,"author":{"gitId":"jaredtengsw"},"content":"     *"},{"lineNumber":80,"author":{"gitId":"jaredtengsw"},"content":"     * @return String which is location of the Event object"},{"lineNumber":81,"author":{"gitId":"jaredtengsw"},"content":"     */"},{"lineNumber":82,"author":{"gitId":"jaredtengsw"},"content":"    public String getLocation() {"},{"lineNumber":83,"author":{"gitId":"jaredtengsw"},"content":"        return this.location;"},{"lineNumber":84,"author":{"gitId":"jaredtengsw"},"content":"    }"},{"lineNumber":85,"author":{"gitId":"jaredtengsw"},"content":""},{"lineNumber":86,"author":{"gitId":"jaredtengsw"},"content":"    /**"},{"lineNumber":87,"author":{"gitId":"jaredtengsw"},"content":"     * Returns the location and datetime of the Event"},{"lineNumber":88,"author":{"gitId":"jaredtengsw"},"content":"     * before being parsed"},{"lineNumber":89,"author":{"gitId":"jaredtengsw"},"content":"     *"},{"lineNumber":90,"author":{"gitId":"jaredtengsw"},"content":"     * @return String which is the unparsed location and datetime of the Event object"},{"lineNumber":91,"author":{"gitId":"jaredtengsw"},"content":"     */"},{"lineNumber":92,"author":{"gitId":"jaredtengsw"},"content":"    public String getAfterAt() {"},{"lineNumber":93,"author":{"gitId":"jaredtengsw"},"content":"        return this.afterAt;"},{"lineNumber":94,"author":{"gitId":"jaredtengsw"},"content":"    }"},{"lineNumber":95,"author":{"gitId":"jaredtengsw"},"content":""},{"lineNumber":96,"author":{"gitId":"jaredtengsw"},"content":"    @Override"},{"lineNumber":97,"author":{"gitId":"jaredtengsw"},"content":"    public String toSave() {"},{"lineNumber":98,"author":{"gitId":"jaredtengsw"},"content":"            return this.getType().toString() + \" \""},{"lineNumber":99,"author":{"gitId":"jaredtengsw"},"content":"                    + this.getInfo().trim()"},{"lineNumber":100,"author":{"gitId":"jaredtengsw"},"content":"                    + \"/at\""},{"lineNumber":101,"author":{"gitId":"jaredtengsw"},"content":"                    + this.getAfterAt().trim();"},{"lineNumber":102,"author":{"gitId":"jaredtengsw"},"content":"    }"},{"lineNumber":103,"author":{"gitId":"jaredtengsw"},"content":""},{"lineNumber":104,"author":{"gitId":"jaredtengsw"},"content":"    @Override"},{"lineNumber":105,"author":{"gitId":"jaredtengsw"},"content":"    public String toString(){"},{"lineNumber":106,"author":{"gitId":"jaredtengsw"},"content":"        return \"[E]\" + super.toString() + \" (at: \""},{"lineNumber":107,"author":{"gitId":"jaredtengsw"},"content":"                + getLocation() + \" \" + getDateTime() + \")\";"},{"lineNumber":108,"author":{"gitId":"jaredtengsw"},"content":"    }"},{"lineNumber":109,"author":{"gitId":"jaredtengsw"},"content":"}"}],"authorContributionMap":{"jaredtengsw":109}},{"path":"src/main/java/duke/tasks/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jaredtengsw"},"content":"package duke.tasks;"},{"lineNumber":2,"author":{"gitId":"jaredtengsw"},"content":""},{"lineNumber":3,"author":{"gitId":"jaredtengsw"},"content":"/**"},{"lineNumber":4,"author":{"gitId":"jaredtengsw"},"content":" * A task class to represent different types of tasks."},{"lineNumber":5,"author":{"gitId":"jaredtengsw"},"content":" */"},{"lineNumber":6,"author":{"gitId":"jaredtengsw"},"content":"public class Task {"},{"lineNumber":7,"author":{"gitId":"jaredtengsw"},"content":"    protected String info;"},{"lineNumber":8,"author":{"gitId":"jaredtengsw"},"content":"    protected boolean isDone;"},{"lineNumber":9,"author":{"gitId":"jaredtengsw"},"content":"    protected taskType type;"},{"lineNumber":10,"author":{"gitId":"jaredtengsw"},"content":""},{"lineNumber":11,"author":{"gitId":"jaredtengsw"},"content":"    /**"},{"lineNumber":12,"author":{"gitId":"jaredtengsw"},"content":"     * Default constructor used when a new task is added"},{"lineNumber":13,"author":{"gitId":"jaredtengsw"},"content":"     *"},{"lineNumber":14,"author":{"gitId":"jaredtengsw"},"content":"     * @param info name of the task"},{"lineNumber":15,"author":{"gitId":"jaredtengsw"},"content":"     * @param type the taskType for classification"},{"lineNumber":16,"author":{"gitId":"jaredtengsw"},"content":"     */"},{"lineNumber":17,"author":{"gitId":"jaredtengsw"},"content":"    public Task(String info, taskType type) {"},{"lineNumber":18,"author":{"gitId":"jaredtengsw"},"content":"        this.info \u003d info;"},{"lineNumber":19,"author":{"gitId":"jaredtengsw"},"content":"        this.isDone \u003d false;"},{"lineNumber":20,"author":{"gitId":"jaredtengsw"},"content":"        this.type \u003d type;"},{"lineNumber":21,"author":{"gitId":"jaredtengsw"},"content":"    }"},{"lineNumber":22,"author":{"gitId":"jaredtengsw"},"content":""},{"lineNumber":23,"author":{"gitId":"jaredtengsw"},"content":"    /**"},{"lineNumber":24,"author":{"gitId":"jaredtengsw"},"content":"     * Secondary constructor used when a task is loaded from .txt file"},{"lineNumber":25,"author":{"gitId":"jaredtengsw"},"content":"     *"},{"lineNumber":26,"author":{"gitId":"jaredtengsw"},"content":"     * @param info name of the task"},{"lineNumber":27,"author":{"gitId":"jaredtengsw"},"content":"     * @param type the taskType for classification"},{"lineNumber":28,"author":{"gitId":"jaredtengsw"},"content":"     * @param isDone boolean value to indicate whether task is done"},{"lineNumber":29,"author":{"gitId":"jaredtengsw"},"content":"     */"},{"lineNumber":30,"author":{"gitId":"jaredtengsw"},"content":"    public Task(String info, taskType type, boolean isDone) {"},{"lineNumber":31,"author":{"gitId":"jaredtengsw"},"content":"        this.info \u003d info;"},{"lineNumber":32,"author":{"gitId":"jaredtengsw"},"content":"        this.type \u003d type;"},{"lineNumber":33,"author":{"gitId":"jaredtengsw"},"content":"        this.isDone \u003d isDone;"},{"lineNumber":34,"author":{"gitId":"jaredtengsw"},"content":"    }"},{"lineNumber":35,"author":{"gitId":"jaredtengsw"},"content":""},{"lineNumber":36,"author":{"gitId":"jaredtengsw"},"content":"    /**"},{"lineNumber":37,"author":{"gitId":"jaredtengsw"},"content":"     * Returns the details of the task such as the task name."},{"lineNumber":38,"author":{"gitId":"jaredtengsw"},"content":"     *"},{"lineNumber":39,"author":{"gitId":"jaredtengsw"},"content":"     * @return details of the task."},{"lineNumber":40,"author":{"gitId":"jaredtengsw"},"content":"     */"},{"lineNumber":41,"author":{"gitId":"jaredtengsw"},"content":"    public String getInfo() {"},{"lineNumber":42,"author":{"gitId":"jaredtengsw"},"content":"        return this.info;"},{"lineNumber":43,"author":{"gitId":"jaredtengsw"},"content":"    }"},{"lineNumber":44,"author":{"gitId":"jaredtengsw"},"content":""},{"lineNumber":45,"author":{"gitId":"jaredtengsw"},"content":"    /**"},{"lineNumber":46,"author":{"gitId":"jaredtengsw"},"content":"     * Outputs an icon which is to be used the completion of a task"},{"lineNumber":47,"author":{"gitId":"jaredtengsw"},"content":"     * when \u0027done\u0027 command is used on a task."},{"lineNumber":48,"author":{"gitId":"jaredtengsw"},"content":"     *"},{"lineNumber":49,"author":{"gitId":"jaredtengsw"},"content":"     * @return an icon which is a cross."},{"lineNumber":50,"author":{"gitId":"jaredtengsw"},"content":"     */"},{"lineNumber":51,"author":{"gitId":"jaredtengsw"},"content":"    public String checkIcon() {"},{"lineNumber":52,"author":{"gitId":"jaredtengsw"},"content":"        if (isDone) {"},{"lineNumber":53,"author":{"gitId":"jaredtengsw"},"content":"            return \"\\u0058\"; // icon is a cross"},{"lineNumber":54,"author":{"gitId":"jaredtengsw"},"content":"        } else {"},{"lineNumber":55,"author":{"gitId":"jaredtengsw"},"content":"            return \" \";"},{"lineNumber":56,"author":{"gitId":"jaredtengsw"},"content":"        }"},{"lineNumber":57,"author":{"gitId":"jaredtengsw"},"content":"    }"},{"lineNumber":58,"author":{"gitId":"jaredtengsw"},"content":""},{"lineNumber":59,"author":{"gitId":"jaredtengsw"},"content":"    /**"},{"lineNumber":60,"author":{"gitId":"jaredtengsw"},"content":"     * Marks a task object as done."},{"lineNumber":61,"author":{"gitId":"jaredtengsw"},"content":"     */"},{"lineNumber":62,"author":{"gitId":"jaredtengsw"},"content":"    public void markCompleted() {"},{"lineNumber":63,"author":{"gitId":"jaredtengsw"},"content":"        isDone \u003d true;"},{"lineNumber":64,"author":{"gitId":"jaredtengsw"},"content":"    }"},{"lineNumber":65,"author":{"gitId":"jaredtengsw"},"content":""},{"lineNumber":66,"author":{"gitId":"jaredtengsw"},"content":"    /**"},{"lineNumber":67,"author":{"gitId":"jaredtengsw"},"content":"     * Returns the task type."},{"lineNumber":68,"author":{"gitId":"jaredtengsw"},"content":"     *"},{"lineNumber":69,"author":{"gitId":"jaredtengsw"},"content":"     * @return enum indicating the type of task."},{"lineNumber":70,"author":{"gitId":"jaredtengsw"},"content":"     */"},{"lineNumber":71,"author":{"gitId":"jaredtengsw"},"content":"    public taskType getType() {"},{"lineNumber":72,"author":{"gitId":"jaredtengsw"},"content":"            return this.type;"},{"lineNumber":73,"author":{"gitId":"jaredtengsw"},"content":"    }"},{"lineNumber":74,"author":{"gitId":"jaredtengsw"},"content":""},{"lineNumber":75,"author":{"gitId":"jaredtengsw"},"content":"    /**"},{"lineNumber":76,"author":{"gitId":"jaredtengsw"},"content":"     * Outputs the details of the task so that the task"},{"lineNumber":77,"author":{"gitId":"jaredtengsw"},"content":"     * can be saved into a .txt file."},{"lineNumber":78,"author":{"gitId":"jaredtengsw"},"content":"     *"},{"lineNumber":79,"author":{"gitId":"jaredtengsw"},"content":"     * @return String containing details of the task."},{"lineNumber":80,"author":{"gitId":"jaredtengsw"},"content":"     */"},{"lineNumber":81,"author":{"gitId":"jaredtengsw"},"content":"    public String toSave() {"},{"lineNumber":82,"author":{"gitId":"jaredtengsw"},"content":"        return this.getType().toString() + \" \" + this.getInfo();"},{"lineNumber":83,"author":{"gitId":"jaredtengsw"},"content":"    }"},{"lineNumber":84,"author":{"gitId":"jaredtengsw"},"content":""},{"lineNumber":85,"author":{"gitId":"jaredtengsw"},"content":"    /**"},{"lineNumber":86,"author":{"gitId":"jaredtengsw"},"content":"     * Retuns the completion status of a task"},{"lineNumber":87,"author":{"gitId":"jaredtengsw"},"content":"     *"},{"lineNumber":88,"author":{"gitId":"jaredtengsw"},"content":"     * @return boolean value indicating whether the task is completed."},{"lineNumber":89,"author":{"gitId":"jaredtengsw"},"content":"     */"},{"lineNumber":90,"author":{"gitId":"jaredtengsw"},"content":"    public boolean getDoneStatus() {"},{"lineNumber":91,"author":{"gitId":"jaredtengsw"},"content":"        return this.isDone;"},{"lineNumber":92,"author":{"gitId":"jaredtengsw"},"content":"    }"},{"lineNumber":93,"author":{"gitId":"jaredtengsw"},"content":""},{"lineNumber":94,"author":{"gitId":"jaredtengsw"},"content":"    @Override"},{"lineNumber":95,"author":{"gitId":"jaredtengsw"},"content":"    public String toString() {"},{"lineNumber":96,"author":{"gitId":"jaredtengsw"},"content":"        String output \u003d \"[\" + checkIcon() + \"]\" + this.info;"},{"lineNumber":97,"author":{"gitId":"jaredtengsw"},"content":"        return output;"},{"lineNumber":98,"author":{"gitId":"jaredtengsw"},"content":"    }"},{"lineNumber":99,"author":{"gitId":"jaredtengsw"},"content":"}"}],"authorContributionMap":{"jaredtengsw":99}},{"path":"src/main/java/duke/tasks/ToDo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jaredtengsw"},"content":"package duke.tasks;"},{"lineNumber":2,"author":{"gitId":"jaredtengsw"},"content":""},{"lineNumber":3,"author":{"gitId":"jaredtengsw"},"content":""},{"lineNumber":4,"author":{"gitId":"jaredtengsw"},"content":"/**"},{"lineNumber":5,"author":{"gitId":"jaredtengsw"},"content":" * A children of the Task class to be used as basic task types"},{"lineNumber":6,"author":{"gitId":"jaredtengsw"},"content":" */"},{"lineNumber":7,"author":{"gitId":"jaredtengsw"},"content":"public class ToDo extends Task {"},{"lineNumber":8,"author":{"gitId":"jaredtengsw"},"content":""},{"lineNumber":9,"author":{"gitId":"jaredtengsw"},"content":"    /**"},{"lineNumber":10,"author":{"gitId":"jaredtengsw"},"content":"     * Default constuctor when a todo task is added."},{"lineNumber":11,"author":{"gitId":"jaredtengsw"},"content":"     *"},{"lineNumber":12,"author":{"gitId":"jaredtengsw"},"content":"     * @param info, the details of the task"},{"lineNumber":13,"author":{"gitId":"jaredtengsw"},"content":"     */"},{"lineNumber":14,"author":{"gitId":"jaredtengsw"},"content":"    public ToDo (String info) {"},{"lineNumber":15,"author":{"gitId":"jaredtengsw"},"content":"        super(info, taskType.TODO);"},{"lineNumber":16,"author":{"gitId":"jaredtengsw"},"content":""},{"lineNumber":17,"author":{"gitId":"jaredtengsw"},"content":"    }"},{"lineNumber":18,"author":{"gitId":"jaredtengsw"},"content":""},{"lineNumber":19,"author":{"gitId":"jaredtengsw"},"content":"    /**"},{"lineNumber":20,"author":{"gitId":"jaredtengsw"},"content":"     * Secondary constructor used when a todo task is loaded"},{"lineNumber":21,"author":{"gitId":"jaredtengsw"},"content":"     * from a .txt file"},{"lineNumber":22,"author":{"gitId":"jaredtengsw"},"content":"     * @param info, name of the task"},{"lineNumber":23,"author":{"gitId":"jaredtengsw"},"content":"     * @param isDone, boolean value indicating whether the task is done"},{"lineNumber":24,"author":{"gitId":"jaredtengsw"},"content":"     */"},{"lineNumber":25,"author":{"gitId":"jaredtengsw"},"content":"    public ToDo(String info, boolean isDone) {"},{"lineNumber":26,"author":{"gitId":"jaredtengsw"},"content":"        super(info, taskType.TODO, isDone);"},{"lineNumber":27,"author":{"gitId":"jaredtengsw"},"content":"    }"},{"lineNumber":28,"author":{"gitId":"jaredtengsw"},"content":""},{"lineNumber":29,"author":{"gitId":"jaredtengsw"},"content":"    @Override"},{"lineNumber":30,"author":{"gitId":"jaredtengsw"},"content":"    public String toString(){"},{"lineNumber":31,"author":{"gitId":"jaredtengsw"},"content":"        return \"[T]\" + super.toString();"},{"lineNumber":32,"author":{"gitId":"jaredtengsw"},"content":"    }"},{"lineNumber":33,"author":{"gitId":"jaredtengsw"},"content":"}"}],"authorContributionMap":{"jaredtengsw":33}},{"path":"src/main/java/duke/tasks/taskType.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jaredtengsw"},"content":"package duke.tasks;"},{"lineNumber":2,"author":{"gitId":"jaredtengsw"},"content":""},{"lineNumber":3,"author":{"gitId":"jaredtengsw"},"content":"/**"},{"lineNumber":4,"author":{"gitId":"jaredtengsw"},"content":" * An enum class used to dictate the type of tasks"},{"lineNumber":5,"author":{"gitId":"jaredtengsw"},"content":" */"},{"lineNumber":6,"author":{"gitId":"jaredtengsw"},"content":"public enum taskType {"},{"lineNumber":7,"author":{"gitId":"jaredtengsw"},"content":"    DEADLINE,"},{"lineNumber":8,"author":{"gitId":"jaredtengsw"},"content":"    EVENT,"},{"lineNumber":9,"author":{"gitId":"jaredtengsw"},"content":"    TODO,"},{"lineNumber":10,"author":{"gitId":"jaredtengsw"},"content":"    TASK"},{"lineNumber":11,"author":{"gitId":"jaredtengsw"},"content":"}"}],"authorContributionMap":{"jaredtengsw":11}},{"path":"src/main/java/duke/ui/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jaredtengsw"},"content":"package duke.ui;"},{"lineNumber":2,"author":{"gitId":"jaredtengsw"},"content":""},{"lineNumber":3,"author":{"gitId":"jaredtengsw"},"content":"import duke.taskList.TaskList;"},{"lineNumber":4,"author":{"gitId":"jaredtengsw"},"content":"import duke.tasks.Task;"},{"lineNumber":5,"author":{"gitId":"jaredtengsw"},"content":""},{"lineNumber":6,"author":{"gitId":"jaredtengsw"},"content":"import java.util.Scanner;"},{"lineNumber":7,"author":{"gitId":"jaredtengsw"},"content":""},{"lineNumber":8,"author":{"gitId":"jaredtengsw"},"content":""},{"lineNumber":9,"author":{"gitId":"jaredtengsw"},"content":"/**"},{"lineNumber":10,"author":{"gitId":"jaredtengsw"},"content":" * A class object that handles the User Interface aspect of the Duke program."},{"lineNumber":11,"author":{"gitId":"jaredtengsw"},"content":" */"},{"lineNumber":12,"author":{"gitId":"jaredtengsw"},"content":"public class Ui {"},{"lineNumber":13,"author":{"gitId":"jaredtengsw"},"content":"    private final static String borders \u003d \"________________________________________________\";"},{"lineNumber":14,"author":{"gitId":"jaredtengsw"},"content":""},{"lineNumber":15,"author":{"gitId":"jaredtengsw"},"content":"    Scanner sc;"},{"lineNumber":16,"author":{"gitId":"jaredtengsw"},"content":"    StringBuilder sb;"},{"lineNumber":17,"author":{"gitId":"jaredtengsw"},"content":""},{"lineNumber":18,"author":{"gitId":"jaredtengsw"},"content":"    /**"},{"lineNumber":19,"author":{"gitId":"jaredtengsw"},"content":"     * Constructs a Ui object"},{"lineNumber":20,"author":{"gitId":"jaredtengsw"},"content":"     */"},{"lineNumber":21,"author":{"gitId":"jaredtengsw"},"content":"    public Ui() {"},{"lineNumber":22,"author":{"gitId":"jaredtengsw"},"content":"        this.sc \u003d new Scanner(System.in);"},{"lineNumber":23,"author":{"gitId":"jaredtengsw"},"content":"    }"},{"lineNumber":24,"author":{"gitId":"jaredtengsw"},"content":""},{"lineNumber":25,"author":{"gitId":"jaredtengsw"},"content":"    /**"},{"lineNumber":26,"author":{"gitId":"jaredtengsw"},"content":"     * Reads the next line of input as a string"},{"lineNumber":27,"author":{"gitId":"jaredtengsw"},"content":"     *"},{"lineNumber":28,"author":{"gitId":"jaredtengsw"},"content":"     * @return a string of the input"},{"lineNumber":29,"author":{"gitId":"jaredtengsw"},"content":"     */"},{"lineNumber":30,"author":{"gitId":"jaredtengsw"},"content":"    public String readInput() {"},{"lineNumber":31,"author":{"gitId":"jaredtengsw"},"content":"        return sc.nextLine();"},{"lineNumber":32,"author":{"gitId":"jaredtengsw"},"content":"    }"},{"lineNumber":33,"author":{"gitId":"jaredtengsw"},"content":""},{"lineNumber":34,"author":{"gitId":"jaredtengsw"},"content":"    /**"},{"lineNumber":35,"author":{"gitId":"jaredtengsw"},"content":"     * Checks whether the next line is available."},{"lineNumber":36,"author":{"gitId":"jaredtengsw"},"content":"     *"},{"lineNumber":37,"author":{"gitId":"jaredtengsw"},"content":"     * @return a boolean value on whether scanner contains a next line."},{"lineNumber":38,"author":{"gitId":"jaredtengsw"},"content":"     */"},{"lineNumber":39,"author":{"gitId":"jaredtengsw"},"content":"    public boolean canRead() {"},{"lineNumber":40,"author":{"gitId":"jaredtengsw"},"content":"        return sc.hasNextLine();"},{"lineNumber":41,"author":{"gitId":"jaredtengsw"},"content":"    }"},{"lineNumber":42,"author":{"gitId":"jaredtengsw"},"content":""},{"lineNumber":43,"author":{"gitId":"jaredtengsw"},"content":"    /**"},{"lineNumber":44,"author":{"gitId":"jaredtengsw"},"content":"     * Runs when UI starts up, printing the logo and a greeting."},{"lineNumber":45,"author":{"gitId":"jaredtengsw"},"content":"     */"},{"lineNumber":46,"author":{"gitId":"jaredtengsw"},"content":"    public static String startMessage() {"},{"lineNumber":47,"author":{"gitId":"jaredtengsw"},"content":"        return \"Hello Master. Nice to meet you, my name is Alfred.\\n\""},{"lineNumber":48,"author":{"gitId":"jaredtengsw"},"content":"                + \"How may I be of service, Master?\";"},{"lineNumber":49,"author":{"gitId":"jaredtengsw"},"content":"    }"},{"lineNumber":50,"author":{"gitId":"jaredtengsw"},"content":""},{"lineNumber":51,"author":{"gitId":"jaredtengsw"},"content":"    /**"},{"lineNumber":52,"author":{"gitId":"jaredtengsw"},"content":"     * Outputs a message when closing the bot"},{"lineNumber":53,"author":{"gitId":"jaredtengsw"},"content":"     */"},{"lineNumber":54,"author":{"gitId":"jaredtengsw"},"content":"    public static String goodBye() {"},{"lineNumber":55,"author":{"gitId":"jaredtengsw"},"content":"        String message \u003d \"Have a good day, Master. Take care.\";"},{"lineNumber":56,"author":{"gitId":"jaredtengsw"},"content":"        formatAndPrintType(message);"},{"lineNumber":57,"author":{"gitId":"jaredtengsw"},"content":"        return message;"},{"lineNumber":58,"author":{"gitId":"jaredtengsw"},"content":"    }"},{"lineNumber":59,"author":{"gitId":"jaredtengsw"},"content":""},{"lineNumber":60,"author":{"gitId":"jaredtengsw"},"content":"    /**"},{"lineNumber":61,"author":{"gitId":"jaredtengsw"},"content":"     * Outputs a message when marking the completion of a task"},{"lineNumber":62,"author":{"gitId":"jaredtengsw"},"content":"     *"},{"lineNumber":63,"author":{"gitId":"jaredtengsw"},"content":"     * @param task the task that is to be marked done"},{"lineNumber":64,"author":{"gitId":"jaredtengsw"},"content":"     */"},{"lineNumber":65,"author":{"gitId":"jaredtengsw"},"content":"    public static String taskDone(Task task) {"},{"lineNumber":66,"author":{"gitId":"jaredtengsw"},"content":"        String message \u003d \"Well done, Master! I\u0027ve marked this task as done:\\n\""},{"lineNumber":67,"author":{"gitId":"jaredtengsw"},"content":"                       + task.toString();"},{"lineNumber":68,"author":{"gitId":"jaredtengsw"},"content":"        formatAndPrintType(message);"},{"lineNumber":69,"author":{"gitId":"jaredtengsw"},"content":"        return message;"},{"lineNumber":70,"author":{"gitId":"jaredtengsw"},"content":"    }"},{"lineNumber":71,"author":{"gitId":"jaredtengsw"},"content":""},{"lineNumber":72,"author":{"gitId":"jaredtengsw"},"content":"    /**"},{"lineNumber":73,"author":{"gitId":"jaredtengsw"},"content":"     * Outputs a message when a task is deleted"},{"lineNumber":74,"author":{"gitId":"jaredtengsw"},"content":"     *"},{"lineNumber":75,"author":{"gitId":"jaredtengsw"},"content":"     * @param task the task to be deleted from the list"},{"lineNumber":76,"author":{"gitId":"jaredtengsw"},"content":"     */"},{"lineNumber":77,"author":{"gitId":"jaredtengsw"},"content":"    public static String deletedTask(Task task, int size) {"},{"lineNumber":78,"author":{"gitId":"jaredtengsw"},"content":"        String message \u003d \"Understood Master. I\u0027ve removed this task from the list:\\n\""},{"lineNumber":79,"author":{"gitId":"jaredtengsw"},"content":"                       + task.toString()"},{"lineNumber":80,"author":{"gitId":"jaredtengsw"},"content":"                       + \"\\n\\nYou have \""},{"lineNumber":81,"author":{"gitId":"jaredtengsw"},"content":"                       + Integer.toString(size)"},{"lineNumber":82,"author":{"gitId":"jaredtengsw"},"content":"                       + \" tasks left in the list now, Master.\";"},{"lineNumber":83,"author":{"gitId":"jaredtengsw"},"content":"        formatAndPrintType(message);"},{"lineNumber":84,"author":{"gitId":"jaredtengsw"},"content":"        return message;"},{"lineNumber":85,"author":{"gitId":"jaredtengsw"},"content":"    }"},{"lineNumber":86,"author":{"gitId":"jaredtengsw"},"content":""},{"lineNumber":87,"author":{"gitId":"jaredtengsw"},"content":"    /**"},{"lineNumber":88,"author":{"gitId":"jaredtengsw"},"content":"     * Outputs a message when a task is added"},{"lineNumber":89,"author":{"gitId":"jaredtengsw"},"content":"     *"},{"lineNumber":90,"author":{"gitId":"jaredtengsw"},"content":"     * @param task the task that is added into the list."},{"lineNumber":91,"author":{"gitId":"jaredtengsw"},"content":"     */"},{"lineNumber":92,"author":{"gitId":"jaredtengsw"},"content":"    public static String addedTask(Task task, int size) {"},{"lineNumber":93,"author":{"gitId":"jaredtengsw"},"content":"        String message \u003d \"As requested, I\u0027ve added a new task for you, Master:\\n\""},{"lineNumber":94,"author":{"gitId":"jaredtengsw"},"content":"                       + task.toString()"},{"lineNumber":95,"author":{"gitId":"jaredtengsw"},"content":"                       + \"\\n\\nYou have \""},{"lineNumber":96,"author":{"gitId":"jaredtengsw"},"content":"                       + Integer.toString(size)"},{"lineNumber":97,"author":{"gitId":"jaredtengsw"},"content":"                       + \" tasks in the list now, Master.\";"},{"lineNumber":98,"author":{"gitId":"jaredtengsw"},"content":""},{"lineNumber":99,"author":{"gitId":"jaredtengsw"},"content":""},{"lineNumber":100,"author":{"gitId":"jaredtengsw"},"content":"        formatAndPrintType(message);"},{"lineNumber":101,"author":{"gitId":"jaredtengsw"},"content":"        return message;"},{"lineNumber":102,"author":{"gitId":"jaredtengsw"},"content":"    }"},{"lineNumber":103,"author":{"gitId":"jaredtengsw"},"content":""},{"lineNumber":104,"author":{"gitId":"jaredtengsw"},"content":"    /**"},{"lineNumber":105,"author":{"gitId":"jaredtengsw"},"content":"     * Formats the message fully with upper"},{"lineNumber":106,"author":{"gitId":"jaredtengsw"},"content":"     * and lower borders while printing out the message"},{"lineNumber":107,"author":{"gitId":"jaredtengsw"},"content":"     *"},{"lineNumber":108,"author":{"gitId":"jaredtengsw"},"content":"     * @param message the message to be printed"},{"lineNumber":109,"author":{"gitId":"jaredtengsw"},"content":"     */"},{"lineNumber":110,"author":{"gitId":"jaredtengsw"},"content":"    public static void formatAndPrintType(String message) {"},{"lineNumber":111,"author":{"gitId":"jaredtengsw"},"content":"        System.out.println(borders);"},{"lineNumber":112,"author":{"gitId":"jaredtengsw"},"content":"        System.out.println(message);"},{"lineNumber":113,"author":{"gitId":"jaredtengsw"},"content":"        System.out.println(borders + \"\\n\");"},{"lineNumber":114,"author":{"gitId":"jaredtengsw"},"content":"    }"},{"lineNumber":115,"author":{"gitId":"jaredtengsw"},"content":"}"}],"authorContributionMap":{"jaredtengsw":115}},{"path":"src/main/resources/view/DukeDialogBox.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"jaredtengsw"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"},{"lineNumber":2,"author":{"gitId":"jaredtengsw"},"content":""},{"lineNumber":3,"author":{"gitId":"jaredtengsw"},"content":"\u003c?import javafx.geometry.Insets?\u003e"},{"lineNumber":4,"author":{"gitId":"jaredtengsw"},"content":"\u003c?import javafx.scene.control.Label?\u003e"},{"lineNumber":5,"author":{"gitId":"jaredtengsw"},"content":"\u003c?import javafx.scene.image.ImageView?\u003e"},{"lineNumber":6,"author":{"gitId":"jaredtengsw"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e"},{"lineNumber":7,"author":{"gitId":"jaredtengsw"},"content":"\u003c?import javafx.scene.text.Font?\u003e"},{"lineNumber":8,"author":{"gitId":"jaredtengsw"},"content":""},{"lineNumber":9,"author":{"gitId":"jaredtengsw"},"content":"\u003cfx:root alignment\u003d\"TOP_LEFT\" maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\" prefWidth\u003d\"400.0\" type\u003d\"javafx.scene.layout.HBox\" xmlns\u003d\"http://javafx.com/javafx/15.0.1\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e"},{"lineNumber":10,"author":{"gitId":"jaredtengsw"},"content":"    \u003cchildren\u003e"},{"lineNumber":11,"author":{"gitId":"jaredtengsw"},"content":"        \u003cImageView fx:id\u003d\"displayPicture\" fitHeight\u003d\"99.0\" fitWidth\u003d\"99.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\" /\u003e"},{"lineNumber":12,"author":{"gitId":"jaredtengsw"},"content":"        \u003cLabel fx:id\u003d\"dialog\" opacity\u003d\"0.8\" text\u003d\"Label\" translateX\u003d\"5.0\" wrapText\u003d\"true\"\u003e"},{"lineNumber":13,"author":{"gitId":"jaredtengsw"},"content":"         \u003cfont\u003e"},{"lineNumber":14,"author":{"gitId":"jaredtengsw"},"content":"            \u003cFont name\u003d\"Courier New Bold\" size\u003d\"11.0\" /\u003e"},{"lineNumber":15,"author":{"gitId":"jaredtengsw"},"content":"         \u003c/font\u003e\u003c/Label\u003e"},{"lineNumber":16,"author":{"gitId":"jaredtengsw"},"content":"    \u003c/children\u003e"},{"lineNumber":17,"author":{"gitId":"jaredtengsw"},"content":"    \u003cpadding\u003e"},{"lineNumber":18,"author":{"gitId":"jaredtengsw"},"content":"        \u003cInsets bottom\u003d\"15.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"15.0\" /\u003e"},{"lineNumber":19,"author":{"gitId":"jaredtengsw"},"content":"    \u003c/padding\u003e"},{"lineNumber":20,"author":{"gitId":"jaredtengsw"},"content":"\u003c/fx:root\u003e"}],"authorContributionMap":{"jaredtengsw":20}},{"path":"src/main/resources/view/MainWindow.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"jaredtengsw"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"},{"lineNumber":2,"author":{"gitId":"jaredtengsw"},"content":""},{"lineNumber":3,"author":{"gitId":"jaredtengsw"},"content":"\u003c?import javafx.scene.control.Button?\u003e"},{"lineNumber":4,"author":{"gitId":"jaredtengsw"},"content":"\u003c?import javafx.scene.control.ScrollPane?\u003e"},{"lineNumber":5,"author":{"gitId":"jaredtengsw"},"content":"\u003c?import javafx.scene.control.TextField?\u003e"},{"lineNumber":6,"author":{"gitId":"jaredtengsw"},"content":"\u003c?import javafx.scene.layout.AnchorPane?\u003e"},{"lineNumber":7,"author":{"gitId":"jaredtengsw"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e"},{"lineNumber":8,"author":{"gitId":"jaredtengsw"},"content":""},{"lineNumber":9,"author":{"gitId":"jaredtengsw"},"content":"\u003cAnchorPane maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefHeight\u003d\"600.0\" prefWidth\u003d\"400.0\" xmlns\u003d\"http://javafx.com/javafx/15.0.1\" xmlns:fx\u003d\"http://javafx.com/fxml/1\" fx:controller\u003d\"duke.MainWindow\"\u003e"},{"lineNumber":10,"author":{"gitId":"jaredtengsw"},"content":"    \u003cchildren\u003e"},{"lineNumber":11,"author":{"gitId":"jaredtengsw"},"content":"        \u003cTextField fx:id\u003d\"userInput\" layoutY\u003d\"558.0\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"324.0\" AnchorPane.bottomAnchor\u003d\"1.0\" /\u003e"},{"lineNumber":12,"author":{"gitId":"jaredtengsw"},"content":"        \u003cButton fx:id\u003d\"sendButton\" layoutX\u003d\"324.0\" layoutY\u003d\"558.0\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"76.0\" text\u003d\"Send\" /\u003e"},{"lineNumber":13,"author":{"gitId":"jaredtengsw"},"content":"        \u003cScrollPane fx:id\u003d\"scrollPane\" hbarPolicy\u003d\"NEVER\" hvalue\u003d\"1.0\" prefHeight\u003d\"557.0\" prefWidth\u003d\"400.0\" vvalue\u003d\"1.0\"\u003e"},{"lineNumber":14,"author":{"gitId":"jaredtengsw"},"content":"            \u003ccontent\u003e"},{"lineNumber":15,"author":{"gitId":"jaredtengsw"},"content":"                \u003cVBox fx:id\u003d\"dialogContainer\" prefHeight\u003d\"550.0\" prefWidth\u003d\"400.0\" /\u003e"},{"lineNumber":16,"author":{"gitId":"jaredtengsw"},"content":"            \u003c/content\u003e"},{"lineNumber":17,"author":{"gitId":"jaredtengsw"},"content":"        \u003c/ScrollPane\u003e"},{"lineNumber":18,"author":{"gitId":"jaredtengsw"},"content":"    \u003c/children\u003e"},{"lineNumber":19,"author":{"gitId":"jaredtengsw"},"content":"\u003c/AnchorPane\u003e"}],"authorContributionMap":{"jaredtengsw":19}},{"path":"src/main/resources/view/StartingBox.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"jaredtengsw"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"},{"lineNumber":2,"author":{"gitId":"jaredtengsw"},"content":""},{"lineNumber":3,"author":{"gitId":"jaredtengsw"},"content":"\u003c?import javafx.geometry.Insets?\u003e"},{"lineNumber":4,"author":{"gitId":"jaredtengsw"},"content":"\u003c?import javafx.scene.control.Label?\u003e"},{"lineNumber":5,"author":{"gitId":"jaredtengsw"},"content":"\u003c?import javafx.scene.image.ImageView?\u003e"},{"lineNumber":6,"author":{"gitId":"jaredtengsw"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e"},{"lineNumber":7,"author":{"gitId":"jaredtengsw"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e"},{"lineNumber":8,"author":{"gitId":"jaredtengsw"},"content":"\u003c?import javafx.scene.text.Font?\u003e"},{"lineNumber":9,"author":{"gitId":"jaredtengsw"},"content":""},{"lineNumber":10,"author":{"gitId":"jaredtengsw"},"content":"\u003cfx:root alignment\u003d\"TOP_CENTER\" maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\" prefWidth\u003d\"400.0\" type\u003d\"javafx.scene.layout.HBox\" xmlns\u003d\"http://javafx.com/javafx/15.0.1\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e"},{"lineNumber":11,"author":{"gitId":"jaredtengsw"},"content":"   \u003cchildren\u003e"},{"lineNumber":12,"author":{"gitId":"jaredtengsw"},"content":"      \u003cVBox prefHeight\u003d\"200.0\" prefWidth\u003d\"400.0\"\u003e"},{"lineNumber":13,"author":{"gitId":"jaredtengsw"},"content":"         \u003cchildren\u003e"},{"lineNumber":14,"author":{"gitId":"jaredtengsw"},"content":"            \u003cImageView fx:id\u003d\"logoPhoto\" fitHeight\u003d\"200.0\" fitWidth\u003d\"250.0\" opacity\u003d\"0.7\" pickOnBounds\u003d\"true\" translateX\u003d\"70.0\" /\u003e"},{"lineNumber":15,"author":{"gitId":"jaredtengsw"},"content":"            \u003cHBox prefHeight\u003d\"100.0\" prefWidth\u003d\"200.0\"\u003e"},{"lineNumber":16,"author":{"gitId":"jaredtengsw"},"content":"               \u003cchildren\u003e"},{"lineNumber":17,"author":{"gitId":"jaredtengsw"},"content":"                  \u003cImageView fx:id\u003d\"dukePhoto\" fitHeight\u003d\"99.0\" fitWidth\u003d\"99.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\" /\u003e"},{"lineNumber":18,"author":{"gitId":"jaredtengsw"},"content":"                  \u003cLabel fx:id\u003d\"welcomeMessage\" opacity\u003d\"0.8\" text\u003d\"Label\" textFill\u003d\"#444444\" translateX\u003d\"5.0\" wrapText\u003d\"true\"\u003e"},{"lineNumber":19,"author":{"gitId":"jaredtengsw"},"content":"                     \u003cfont\u003e"},{"lineNumber":20,"author":{"gitId":"jaredtengsw"},"content":"                        \u003cFont name\u003d\"Courier New Bold\" size\u003d\"11.0\" /\u003e"},{"lineNumber":21,"author":{"gitId":"jaredtengsw"},"content":"                     \u003c/font\u003e\u003c/Label\u003e"},{"lineNumber":22,"author":{"gitId":"jaredtengsw"},"content":"               \u003c/children\u003e"},{"lineNumber":23,"author":{"gitId":"jaredtengsw"},"content":"            \u003c/HBox\u003e"},{"lineNumber":24,"author":{"gitId":"jaredtengsw"},"content":"         \u003c/children\u003e"},{"lineNumber":25,"author":{"gitId":"jaredtengsw"},"content":"      \u003c/VBox\u003e"},{"lineNumber":26,"author":{"gitId":"jaredtengsw"},"content":"   \u003c/children\u003e"},{"lineNumber":27,"author":{"gitId":"jaredtengsw"},"content":"   \u003cpadding\u003e"},{"lineNumber":28,"author":{"gitId":"jaredtengsw"},"content":"      \u003cInsets bottom\u003d\"5.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"5.0\" /\u003e"},{"lineNumber":29,"author":{"gitId":"jaredtengsw"},"content":"   \u003c/padding\u003e"},{"lineNumber":30,"author":{"gitId":"jaredtengsw"},"content":"\u003c/fx:root\u003e"}],"authorContributionMap":{"jaredtengsw":30}},{"path":"src/main/resources/view/UserDialogBox.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"jaredtengsw"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"},{"lineNumber":2,"author":{"gitId":"jaredtengsw"},"content":""},{"lineNumber":3,"author":{"gitId":"jaredtengsw"},"content":"\u003c?import javafx.geometry.Insets?\u003e"},{"lineNumber":4,"author":{"gitId":"jaredtengsw"},"content":"\u003c?import javafx.scene.control.Label?\u003e"},{"lineNumber":5,"author":{"gitId":"jaredtengsw"},"content":"\u003c?import javafx.scene.image.ImageView?\u003e"},{"lineNumber":6,"author":{"gitId":"jaredtengsw"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e"},{"lineNumber":7,"author":{"gitId":"jaredtengsw"},"content":"\u003c?import javafx.scene.text.Font?\u003e"},{"lineNumber":8,"author":{"gitId":"jaredtengsw"},"content":""},{"lineNumber":9,"author":{"gitId":"jaredtengsw"},"content":"\u003cfx:root alignment\u003d\"TOP_RIGHT\" maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\" prefWidth\u003d\"400.0\" type\u003d\"javafx.scene.layout.HBox\" xmlns\u003d\"http://javafx.com/javafx/15.0.1\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e"},{"lineNumber":10,"author":{"gitId":"jaredtengsw"},"content":"    \u003cchildren\u003e"},{"lineNumber":11,"author":{"gitId":"jaredtengsw"},"content":"        \u003cLabel fx:id\u003d\"dialog\" opacity\u003d\"0.8\" text\u003d\"Label\" translateX\u003d\"-5.0\" wrapText\u003d\"true\"\u003e"},{"lineNumber":12,"author":{"gitId":"jaredtengsw"},"content":"         \u003cfont\u003e"},{"lineNumber":13,"author":{"gitId":"jaredtengsw"},"content":"            \u003cFont name\u003d\"Courier New Bold\" size\u003d\"11.0\" /\u003e"},{"lineNumber":14,"author":{"gitId":"jaredtengsw"},"content":"         \u003c/font\u003e\u003c/Label\u003e"},{"lineNumber":15,"author":{"gitId":"jaredtengsw"},"content":"        \u003cImageView fx:id\u003d\"displayPicture\" fitHeight\u003d\"99.0\" fitWidth\u003d\"99.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\" /\u003e"},{"lineNumber":16,"author":{"gitId":"jaredtengsw"},"content":"    \u003c/children\u003e"},{"lineNumber":17,"author":{"gitId":"jaredtengsw"},"content":"    \u003cpadding\u003e"},{"lineNumber":18,"author":{"gitId":"jaredtengsw"},"content":"        \u003cInsets bottom\u003d\"15.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"15.0\" /\u003e"},{"lineNumber":19,"author":{"gitId":"jaredtengsw"},"content":"    \u003c/padding\u003e"},{"lineNumber":20,"author":{"gitId":"jaredtengsw"},"content":"\u003c/fx:root\u003e"}],"authorContributionMap":{"jaredtengsw":20}},{"path":"src/test/java/duke/taskList/TaskListTester.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jaredtengsw"},"content":"package duke.taskList;"},{"lineNumber":2,"author":{"gitId":"jaredtengsw"},"content":""},{"lineNumber":3,"author":{"gitId":"jaredtengsw"},"content":"import duke.tasks.ToDo;"},{"lineNumber":4,"author":{"gitId":"jaredtengsw"},"content":"import duke.tasks.Task;"},{"lineNumber":5,"author":{"gitId":"jaredtengsw"},"content":"import org.junit.jupiter.api.DisplayName;"},{"lineNumber":6,"author":{"gitId":"jaredtengsw"},"content":"import org.junit.jupiter.api.Test;"},{"lineNumber":7,"author":{"gitId":"jaredtengsw"},"content":""},{"lineNumber":8,"author":{"gitId":"jaredtengsw"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;"},{"lineNumber":9,"author":{"gitId":"jaredtengsw"},"content":""},{"lineNumber":10,"author":{"gitId":"jaredtengsw"},"content":"public class TaskListTester {"},{"lineNumber":11,"author":{"gitId":"jaredtengsw"},"content":"    @Test"},{"lineNumber":12,"author":{"gitId":"jaredtengsw"},"content":"    @DisplayName(\"Testing addTask and getSize method in TaskList class\")"},{"lineNumber":13,"author":{"gitId":"jaredtengsw"},"content":"    public void testGetDeadlineDate() {"},{"lineNumber":14,"author":{"gitId":"jaredtengsw"},"content":"        TaskList taskList \u003d new TaskList();"},{"lineNumber":15,"author":{"gitId":"jaredtengsw"},"content":"        Task testTask \u003d new ToDo(\"placebo task\");"},{"lineNumber":16,"author":{"gitId":"jaredtengsw"},"content":"        taskList.addTask(testTask);"},{"lineNumber":17,"author":{"gitId":"jaredtengsw"},"content":"        int result \u003d taskList.getSize();"},{"lineNumber":18,"author":{"gitId":"jaredtengsw"},"content":"        assertEquals(result, 1);"},{"lineNumber":19,"author":{"gitId":"jaredtengsw"},"content":"    }"},{"lineNumber":20,"author":{"gitId":"jaredtengsw"},"content":""},{"lineNumber":21,"author":{"gitId":"jaredtengsw"},"content":"    @Test"},{"lineNumber":22,"author":{"gitId":"jaredtengsw"},"content":"    @DisplayName(\"Testing removeTask method in Deadline class\")"},{"lineNumber":23,"author":{"gitId":"jaredtengsw"},"content":"    public void testToString() {"},{"lineNumber":24,"author":{"gitId":"jaredtengsw"},"content":"        TaskList taskList \u003d new TaskList();"},{"lineNumber":25,"author":{"gitId":"jaredtengsw"},"content":"        Task testTask \u003d new ToDo(\"placebo task\");"},{"lineNumber":26,"author":{"gitId":"jaredtengsw"},"content":"        taskList.addTask(testTask);"},{"lineNumber":27,"author":{"gitId":"jaredtengsw"},"content":"        taskList.removeTask(0);"},{"lineNumber":28,"author":{"gitId":"jaredtengsw"},"content":"        int result \u003d taskList.getSize();"},{"lineNumber":29,"author":{"gitId":"jaredtengsw"},"content":"        assertEquals(result, 0);"},{"lineNumber":30,"author":{"gitId":"jaredtengsw"},"content":"    }"},{"lineNumber":31,"author":{"gitId":"jaredtengsw"},"content":""},{"lineNumber":32,"author":{"gitId":"jaredtengsw"},"content":"}"}],"authorContributionMap":{"jaredtengsw":32}},{"path":"src/test/java/duke/tasks/EventTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jaredtengsw"},"content":"package duke.tasks;"},{"lineNumber":2,"author":{"gitId":"jaredtengsw"},"content":""},{"lineNumber":3,"author":{"gitId":"jaredtengsw"},"content":"import duke.tasks.Event;"},{"lineNumber":4,"author":{"gitId":"jaredtengsw"},"content":"import org.junit.jupiter.api.DisplayName;"},{"lineNumber":5,"author":{"gitId":"jaredtengsw"},"content":"import org.junit.jupiter.api.Test;"},{"lineNumber":6,"author":{"gitId":"jaredtengsw"},"content":""},{"lineNumber":7,"author":{"gitId":"jaredtengsw"},"content":"import java.time.LocalDate;"},{"lineNumber":8,"author":{"gitId":"jaredtengsw"},"content":"import java.time.LocalTime;"},{"lineNumber":9,"author":{"gitId":"jaredtengsw"},"content":"import java.time.format.DateTimeFormatter;"},{"lineNumber":10,"author":{"gitId":"jaredtengsw"},"content":""},{"lineNumber":11,"author":{"gitId":"jaredtengsw"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;"},{"lineNumber":12,"author":{"gitId":"jaredtengsw"},"content":""},{"lineNumber":13,"author":{"gitId":"jaredtengsw"},"content":"public class EventTest {"},{"lineNumber":14,"author":{"gitId":"jaredtengsw"},"content":"    @Test"},{"lineNumber":15,"author":{"gitId":"jaredtengsw"},"content":"    @DisplayName(\"Testing getDateTime method in Event class\")"},{"lineNumber":16,"author":{"gitId":"jaredtengsw"},"content":"    public void testGetDateTime() {"},{"lineNumber":17,"author":{"gitId":"jaredtengsw"},"content":"        DateTimeFormatter dateFormatter \u003d DateTimeFormatter.ofPattern(\"dd MMM yyyy\");"},{"lineNumber":18,"author":{"gitId":"jaredtengsw"},"content":"        DateTimeFormatter timeFormatter \u003d DateTimeFormatter.ofPattern(\"hh:mm a\");"},{"lineNumber":19,"author":{"gitId":"jaredtengsw"},"content":""},{"lineNumber":20,"author":{"gitId":"jaredtengsw"},"content":"        LocalDate testDate \u003d LocalDate.parse(\"2021-02-05\");"},{"lineNumber":21,"author":{"gitId":"jaredtengsw"},"content":"        LocalTime testTime \u003d LocalTime.parse(\"17:00\");"},{"lineNumber":22,"author":{"gitId":"jaredtengsw"},"content":""},{"lineNumber":23,"author":{"gitId":"jaredtengsw"},"content":"        String result \u003d testDate.format(dateFormatter)"},{"lineNumber":24,"author":{"gitId":"jaredtengsw"},"content":"                        + \" \""},{"lineNumber":25,"author":{"gitId":"jaredtengsw"},"content":"                        + testTime.format(timeFormatter);"},{"lineNumber":26,"author":{"gitId":"jaredtengsw"},"content":""},{"lineNumber":27,"author":{"gitId":"jaredtengsw"},"content":"        assertEquals(new Event(\"Some event\", \"NUS 2021-02-05 17:00\").getDateTime(), result);"},{"lineNumber":28,"author":{"gitId":"jaredtengsw"},"content":"    }"},{"lineNumber":29,"author":{"gitId":"jaredtengsw"},"content":"}"}],"authorContributionMap":{"jaredtengsw":29}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"jaredtengsw"},"content":"todo finish tutorial"},{"lineNumber":2,"author":{"gitId":"jaredtengsw"},"content":"deadline individual assignment /by Sunday"},{"lineNumber":3,"author":{"gitId":"jaredtengsw"},"content":"event project meeting /at HSSML, Saturday 2-4pm"},{"lineNumber":4,"author":{"gitId":"jaredtengsw"},"content":"list"},{"lineNumber":5,"author":{"gitId":"jaredtengsw"},"content":"done 1"},{"lineNumber":6,"author":{"gitId":"jaredtengsw"},"content":"bye"}],"authorContributionMap":{"jaredtengsw":6}}]
