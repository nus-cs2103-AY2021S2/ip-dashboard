[{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027checkstyle\u0027"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027"},{"lineNumber":6,"author":{"gitId":"-"},"content":"}"},{"lineNumber":7,"author":{"gitId":"-"},"content":""},{"lineNumber":8,"author":{"gitId":"-"},"content":"repositories {"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    mavenCentral()"},{"lineNumber":10,"author":{"gitId":"-"},"content":"}"},{"lineNumber":11,"author":{"gitId":"-"},"content":""},{"lineNumber":12,"author":{"gitId":"-"},"content":"dependencies {"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.5.0\u0027"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.5.0\u0027"},{"lineNumber":15,"author":{"gitId":"Md-Fazil"},"content":""},{"lineNumber":16,"author":{"gitId":"Md-Fazil"},"content":"    String javaFxVersion \u003d \u002711\u0027"},{"lineNumber":17,"author":{"gitId":"Md-Fazil"},"content":""},{"lineNumber":18,"author":{"gitId":"Md-Fazil"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027"},{"lineNumber":19,"author":{"gitId":"Md-Fazil"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"},{"lineNumber":20,"author":{"gitId":"Md-Fazil"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"},{"lineNumber":21,"author":{"gitId":"Md-Fazil"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027"},{"lineNumber":22,"author":{"gitId":"Md-Fazil"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"},{"lineNumber":23,"author":{"gitId":"Md-Fazil"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"},{"lineNumber":24,"author":{"gitId":"Md-Fazil"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027"},{"lineNumber":25,"author":{"gitId":"Md-Fazil"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"},{"lineNumber":26,"author":{"gitId":"Md-Fazil"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"},{"lineNumber":27,"author":{"gitId":"Md-Fazil"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027"},{"lineNumber":28,"author":{"gitId":"Md-Fazil"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"},{"lineNumber":29,"author":{"gitId":"Md-Fazil"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"},{"lineNumber":30,"author":{"gitId":"Md-Fazil"},"content":"    testImplementation \u0027org.junit.jupiter:junit-jupiter-api:5.6.0\u0027"},{"lineNumber":31,"author":{"gitId":"Md-Fazil"},"content":"    testRuntimeOnly \u0027org.junit.jupiter:junit-jupiter-engine\u0027"},{"lineNumber":32,"author":{"gitId":"-"},"content":"}"},{"lineNumber":33,"author":{"gitId":"-"},"content":""},{"lineNumber":34,"author":{"gitId":"-"},"content":"test {"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    useJUnitPlatform()"},{"lineNumber":36,"author":{"gitId":"-"},"content":""},{"lineNumber":37,"author":{"gitId":"-"},"content":"    testLogging {"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\""},{"lineNumber":39,"author":{"gitId":"-"},"content":""},{"lineNumber":40,"author":{"gitId":"-"},"content":"        showExceptions true"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\""},{"lineNumber":42,"author":{"gitId":"-"},"content":"        showCauses true"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        showStackTraces true"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":46,"author":{"gitId":"-"},"content":"}"},{"lineNumber":47,"author":{"gitId":"-"},"content":""},{"lineNumber":48,"author":{"gitId":"-"},"content":"application {"},{"lineNumber":49,"author":{"gitId":"Md-Fazil"},"content":"    mainClassName \u003d \"duke.Launcher\""},{"lineNumber":50,"author":{"gitId":"-"},"content":"}"},{"lineNumber":51,"author":{"gitId":"-"},"content":""},{"lineNumber":52,"author":{"gitId":"-"},"content":"shadowJar {"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    archiveBaseName \u003d \"duke\""},{"lineNumber":54,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null"},{"lineNumber":55,"author":{"gitId":"-"},"content":"}"},{"lineNumber":56,"author":{"gitId":"-"},"content":""},{"lineNumber":57,"author":{"gitId":"-"},"content":"checkstyle {"},{"lineNumber":58,"author":{"gitId":"Md-Fazil"},"content":"    toolVersion \u003d \u00278.32\u0027"},{"lineNumber":59,"author":{"gitId":"-"},"content":"}"},{"lineNumber":60,"author":{"gitId":"-"},"content":""},{"lineNumber":61,"author":{"gitId":"-"},"content":"run{"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in"},{"lineNumber":63,"author":{"gitId":"-"},"content":"}"}],"authorContributionMap":{"Md-Fazil":19,"-":44}},{"path":"src/main/java/duke/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Md-Fazil"},"content":"package duke;"},{"lineNumber":2,"author":{"gitId":"Md-Fazil"},"content":""},{"lineNumber":3,"author":{"gitId":"Md-Fazil"},"content":"import java.io.FileNotFoundException;"},{"lineNumber":4,"author":{"gitId":"Md-Fazil"},"content":"import java.io.IOException;"},{"lineNumber":5,"author":{"gitId":"Md-Fazil"},"content":"import java.util.ArrayList;"},{"lineNumber":6,"author":{"gitId":"Md-Fazil"},"content":""},{"lineNumber":7,"author":{"gitId":"Md-Fazil"},"content":"import duke.command.Command;"},{"lineNumber":8,"author":{"gitId":"Md-Fazil"},"content":"import javafx.scene.image.Image;"},{"lineNumber":9,"author":{"gitId":"Md-Fazil"},"content":""},{"lineNumber":10,"author":{"gitId":"Md-Fazil"},"content":""},{"lineNumber":11,"author":{"gitId":"Md-Fazil"},"content":"public class Duke {"},{"lineNumber":12,"author":{"gitId":"Md-Fazil"},"content":"    private Storage storage;"},{"lineNumber":13,"author":{"gitId":"Md-Fazil"},"content":"    private TaskManager taskManager;"},{"lineNumber":14,"author":{"gitId":"Md-Fazil"},"content":"    private Ui ui;"},{"lineNumber":15,"author":{"gitId":"Md-Fazil"},"content":""},{"lineNumber":16,"author":{"gitId":"Md-Fazil"},"content":"    private Image user \u003d new Image(this.getClass().getResourceAsStream(\"/images/image1.jpg\"));"},{"lineNumber":17,"author":{"gitId":"Md-Fazil"},"content":"    private Image duke \u003d new Image(this.getClass().getResourceAsStream(\"/images/image2.jpg\"));"},{"lineNumber":18,"author":{"gitId":"Md-Fazil"},"content":""},{"lineNumber":19,"author":{"gitId":"Md-Fazil"},"content":"    public Duke() {"},{"lineNumber":20,"author":{"gitId":"Md-Fazil"},"content":"        ui \u003d new Ui();"},{"lineNumber":21,"author":{"gitId":"Md-Fazil"},"content":"        storage \u003d new Storage(\"./src/main/data/Data.txt\");"},{"lineNumber":22,"author":{"gitId":"Md-Fazil"},"content":"        taskManager \u003d new TaskManager();"},{"lineNumber":23,"author":{"gitId":"Md-Fazil"},"content":"        try {"},{"lineNumber":24,"author":{"gitId":"Md-Fazil"},"content":"            ArrayList\u003cString\u003e oldData \u003d storage.load();"},{"lineNumber":25,"author":{"gitId":"Md-Fazil"},"content":"            ArrayList\u003cString\u003e parsedData \u003d Parser.parseToStart(oldData);"},{"lineNumber":26,"author":{"gitId":"Md-Fazil"},"content":"            taskManager.upload(parsedData);"},{"lineNumber":27,"author":{"gitId":"Md-Fazil"},"content":"        } catch (FileNotFoundException e) {"},{"lineNumber":28,"author":{"gitId":"Md-Fazil"},"content":"            ui.showError(\"Storage file not found!\");"},{"lineNumber":29,"author":{"gitId":"Md-Fazil"},"content":"        }"},{"lineNumber":30,"author":{"gitId":"Md-Fazil"},"content":"    }"},{"lineNumber":31,"author":{"gitId":"Md-Fazil"},"content":""},{"lineNumber":32,"author":{"gitId":"Md-Fazil"},"content":"    /**"},{"lineNumber":33,"author":{"gitId":"Md-Fazil"},"content":"     * Handles the user interaction and execution of commands."},{"lineNumber":34,"author":{"gitId":"Md-Fazil"},"content":"     */"},{"lineNumber":35,"author":{"gitId":"Md-Fazil"},"content":"    public String run(String input) {"},{"lineNumber":36,"author":{"gitId":"Md-Fazil"},"content":"        try {"},{"lineNumber":37,"author":{"gitId":"Md-Fazil"},"content":"            Command command \u003d Parser.parse(input);"},{"lineNumber":38,"author":{"gitId":"Md-Fazil"},"content":"            return command.execute(taskManager, ui, storage);"},{"lineNumber":39,"author":{"gitId":"Md-Fazil"},"content":"        } catch (DukeException e) {"},{"lineNumber":40,"author":{"gitId":"Md-Fazil"},"content":"            return ui.showError(e.getMessage());"},{"lineNumber":41,"author":{"gitId":"Md-Fazil"},"content":"        } catch (IOException e) {"},{"lineNumber":42,"author":{"gitId":"Md-Fazil"},"content":"            return ui.showError(\"Internal error! Storage file not in the correct format.\");"},{"lineNumber":43,"author":{"gitId":"Md-Fazil"},"content":"        }"},{"lineNumber":44,"author":{"gitId":"Md-Fazil"},"content":"    }"},{"lineNumber":45,"author":{"gitId":"Md-Fazil"},"content":""},{"lineNumber":46,"author":{"gitId":"Md-Fazil"},"content":"    /**"},{"lineNumber":47,"author":{"gitId":"Md-Fazil"},"content":"     * You should have your own function to generate a response to user input."},{"lineNumber":48,"author":{"gitId":"Md-Fazil"},"content":"     * Replace this stub with your completed method."},{"lineNumber":49,"author":{"gitId":"Md-Fazil"},"content":"     */"},{"lineNumber":50,"author":{"gitId":"Md-Fazil"},"content":"    public String getResponse(String input) {"},{"lineNumber":51,"author":{"gitId":"Md-Fazil"},"content":"        return run(input);"},{"lineNumber":52,"author":{"gitId":"Md-Fazil"},"content":"    }"},{"lineNumber":53,"author":{"gitId":"Md-Fazil"},"content":""},{"lineNumber":54,"author":{"gitId":"Md-Fazil"},"content":"}"}],"authorContributionMap":{"Md-Fazil":54}},{"path":"src/main/java/duke/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Md-Fazil"},"content":"package duke;"},{"lineNumber":2,"author":{"gitId":"Md-Fazil"},"content":""},{"lineNumber":3,"author":{"gitId":"Md-Fazil"},"content":"/**"},{"lineNumber":4,"author":{"gitId":"Md-Fazil"},"content":" * Represents an exception that is specific to Duke."},{"lineNumber":5,"author":{"gitId":"Md-Fazil"},"content":" */"},{"lineNumber":6,"author":{"gitId":"Md-Fazil"},"content":"public class DukeException extends Exception {"},{"lineNumber":7,"author":{"gitId":"Md-Fazil"},"content":""},{"lineNumber":8,"author":{"gitId":"Md-Fazil"},"content":"    DukeException(String message) {"},{"lineNumber":9,"author":{"gitId":"Md-Fazil"},"content":"        super(message);"},{"lineNumber":10,"author":{"gitId":"Md-Fazil"},"content":"    }"},{"lineNumber":11,"author":{"gitId":"Md-Fazil"},"content":"}"}],"authorContributionMap":{"Md-Fazil":11}},{"path":"src/main/java/duke/Launcher.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Md-Fazil"},"content":"package duke;"},{"lineNumber":2,"author":{"gitId":"Md-Fazil"},"content":""},{"lineNumber":3,"author":{"gitId":"Md-Fazil"},"content":"import duke.control.Main;"},{"lineNumber":4,"author":{"gitId":"Md-Fazil"},"content":"import javafx.application.Application;"},{"lineNumber":5,"author":{"gitId":"Md-Fazil"},"content":""},{"lineNumber":6,"author":{"gitId":"Md-Fazil"},"content":"/**"},{"lineNumber":7,"author":{"gitId":"Md-Fazil"},"content":" * A launcher class to workaround classpath issues."},{"lineNumber":8,"author":{"gitId":"Md-Fazil"},"content":" */"},{"lineNumber":9,"author":{"gitId":"Md-Fazil"},"content":"public class Launcher {"},{"lineNumber":10,"author":{"gitId":"Md-Fazil"},"content":"    public static void main(String[] args) {"},{"lineNumber":11,"author":{"gitId":"Md-Fazil"},"content":"        Application.launch(Main.class, args);"},{"lineNumber":12,"author":{"gitId":"Md-Fazil"},"content":"    }"},{"lineNumber":13,"author":{"gitId":"Md-Fazil"},"content":"}"}],"authorContributionMap":{"Md-Fazil":13}},{"path":"src/main/java/duke/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Md-Fazil"},"content":"package duke;"},{"lineNumber":2,"author":{"gitId":"Md-Fazil"},"content":""},{"lineNumber":3,"author":{"gitId":"Md-Fazil"},"content":"import java.time.LocalDate;"},{"lineNumber":4,"author":{"gitId":"Md-Fazil"},"content":"import java.time.format.DateTimeParseException;"},{"lineNumber":5,"author":{"gitId":"Md-Fazil"},"content":"import java.util.ArrayList;"},{"lineNumber":6,"author":{"gitId":"Md-Fazil"},"content":""},{"lineNumber":7,"author":{"gitId":"Md-Fazil"},"content":"import duke.command.AddCommand;"},{"lineNumber":8,"author":{"gitId":"Md-Fazil"},"content":"import duke.command.ByeCommand;"},{"lineNumber":9,"author":{"gitId":"Md-Fazil"},"content":"import duke.command.Command;"},{"lineNumber":10,"author":{"gitId":"Md-Fazil"},"content":"import duke.command.DeleteCommand;"},{"lineNumber":11,"author":{"gitId":"Md-Fazil"},"content":"import duke.command.DoneCommand;"},{"lineNumber":12,"author":{"gitId":"Md-Fazil"},"content":"import duke.command.DueCommand;"},{"lineNumber":13,"author":{"gitId":"Md-Fazil"},"content":"import duke.command.FindCommand;"},{"lineNumber":14,"author":{"gitId":"Md-Fazil"},"content":"import duke.command.ListCommand;"},{"lineNumber":15,"author":{"gitId":"Md-Fazil"},"content":""},{"lineNumber":16,"author":{"gitId":"Md-Fazil"},"content":"public class Parser {"},{"lineNumber":17,"author":{"gitId":"Md-Fazil"},"content":"    private static final String TODO \u003d \"todo\";"},{"lineNumber":18,"author":{"gitId":"Md-Fazil"},"content":"    private static final String DELETE \u003d \"delete\";"},{"lineNumber":19,"author":{"gitId":"Md-Fazil"},"content":"    private static final String DONE \u003d \"done\";"},{"lineNumber":20,"author":{"gitId":"Md-Fazil"},"content":"    private static final String EVENT \u003d \"event\";"},{"lineNumber":21,"author":{"gitId":"Md-Fazil"},"content":"    private static final String DEADLINE \u003d \"deadline\";"},{"lineNumber":22,"author":{"gitId":"Md-Fazil"},"content":"    private static final String LIST \u003d \"list\";"},{"lineNumber":23,"author":{"gitId":"Md-Fazil"},"content":"    private static final String DUE \u003d \"due\";"},{"lineNumber":24,"author":{"gitId":"Md-Fazil"},"content":"    private static final String FIND \u003d \"find\";"},{"lineNumber":25,"author":{"gitId":"Md-Fazil"},"content":""},{"lineNumber":26,"author":{"gitId":"Md-Fazil"},"content":"    /**"},{"lineNumber":27,"author":{"gitId":"Md-Fazil"},"content":"     * Takes in a list of tasks stored in the storage format and parses it into the loading format."},{"lineNumber":28,"author":{"gitId":"Md-Fazil"},"content":"     *"},{"lineNumber":29,"author":{"gitId":"Md-Fazil"},"content":"     * @param oldData list of tasks in the storage format."},{"lineNumber":30,"author":{"gitId":"Md-Fazil"},"content":"     * @return ArrayList list of tasks in user input format to load into tasklist."},{"lineNumber":31,"author":{"gitId":"Md-Fazil"},"content":"     */"},{"lineNumber":32,"author":{"gitId":"Md-Fazil"},"content":""},{"lineNumber":33,"author":{"gitId":"Md-Fazil"},"content":"    public static ArrayList\u003cString\u003e parseToStart(ArrayList\u003cString\u003e oldData) {"},{"lineNumber":34,"author":{"gitId":"Md-Fazil"},"content":"        ArrayList\u003cString\u003e parsedData \u003d new ArrayList\u003c\u003e();"},{"lineNumber":35,"author":{"gitId":"Md-Fazil"},"content":"        for (String task : oldData) {"},{"lineNumber":36,"author":{"gitId":"Md-Fazil"},"content":"            String[] array \u003d task.split(\" \\\\| \");"},{"lineNumber":37,"author":{"gitId":"Md-Fazil"},"content":"            if (task.contains(\"T\")) {"},{"lineNumber":38,"author":{"gitId":"Md-Fazil"},"content":"                array[0] \u003d \"todo\";"},{"lineNumber":39,"author":{"gitId":"Md-Fazil"},"content":"            } else if (task.contains(\"D\")) {"},{"lineNumber":40,"author":{"gitId":"Md-Fazil"},"content":"                array[0] \u003d \"deadline\";"},{"lineNumber":41,"author":{"gitId":"Md-Fazil"},"content":"            } else {"},{"lineNumber":42,"author":{"gitId":"Md-Fazil"},"content":"                array[0] \u003d \"event\";"},{"lineNumber":43,"author":{"gitId":"Md-Fazil"},"content":"            }"},{"lineNumber":44,"author":{"gitId":"Md-Fazil"},"content":"            String parsedString \u003d array[0];"},{"lineNumber":45,"author":{"gitId":"Md-Fazil"},"content":"            for (int i \u003d 1; i \u003c array.length; i++) {"},{"lineNumber":46,"author":{"gitId":"Md-Fazil"},"content":"                if (i \u003d\u003d 3) {"},{"lineNumber":47,"author":{"gitId":"Md-Fazil"},"content":"                    parsedString \u003d array[0].equals(\"deadline\") ? parsedString + \" /by \" + array[i] : parsedString"},{"lineNumber":48,"author":{"gitId":"Md-Fazil"},"content":"                            + \" /at \" + array[i];"},{"lineNumber":49,"author":{"gitId":"Md-Fazil"},"content":"                } else {"},{"lineNumber":50,"author":{"gitId":"Md-Fazil"},"content":"                    parsedString \u003d parsedString + \" \" + array[i];"},{"lineNumber":51,"author":{"gitId":"Md-Fazil"},"content":"                }"},{"lineNumber":52,"author":{"gitId":"Md-Fazil"},"content":"            }"},{"lineNumber":53,"author":{"gitId":"Md-Fazil"},"content":"            parsedData.add(parsedString);"},{"lineNumber":54,"author":{"gitId":"Md-Fazil"},"content":"        }"},{"lineNumber":55,"author":{"gitId":"Md-Fazil"},"content":"        return parsedData;"},{"lineNumber":56,"author":{"gitId":"Md-Fazil"},"content":"    }"},{"lineNumber":57,"author":{"gitId":"Md-Fazil"},"content":""},{"lineNumber":58,"author":{"gitId":"Md-Fazil"},"content":"    private static Command parseListCommand(String[] inputArray) throws DukeException {"},{"lineNumber":59,"author":{"gitId":"Md-Fazil"},"content":"        if (inputArray.length \u003d\u003d 1) {"},{"lineNumber":60,"author":{"gitId":"Md-Fazil"},"content":"            return new ListCommand(inputArray);"},{"lineNumber":61,"author":{"gitId":"Md-Fazil"},"content":"        } else {"},{"lineNumber":62,"author":{"gitId":"Md-Fazil"},"content":"            throw new DukeException(\"Invalid list command! Please try again.\");"},{"lineNumber":63,"author":{"gitId":"Md-Fazil"},"content":"        }"},{"lineNumber":64,"author":{"gitId":"Md-Fazil"},"content":"    }"},{"lineNumber":65,"author":{"gitId":"Md-Fazil"},"content":""},{"lineNumber":66,"author":{"gitId":"Md-Fazil"},"content":"    private static Command parseDoneCommand(String[] inputArray) throws DukeException {"},{"lineNumber":67,"author":{"gitId":"Md-Fazil"},"content":"        if (inputArray.length \u003d\u003d 1) {"},{"lineNumber":68,"author":{"gitId":"Md-Fazil"},"content":"            throw new DukeException(\"Missing task number! Please try again.\");"},{"lineNumber":69,"author":{"gitId":"Md-Fazil"},"content":"        } else {"},{"lineNumber":70,"author":{"gitId":"Md-Fazil"},"content":"            try {"},{"lineNumber":71,"author":{"gitId":"Md-Fazil"},"content":"                int taskNumber \u003d Integer.parseInt(inputArray[1]);"},{"lineNumber":72,"author":{"gitId":"Md-Fazil"},"content":"                return new DoneCommand(inputArray);"},{"lineNumber":73,"author":{"gitId":"Md-Fazil"},"content":"            } catch (NumberFormatException e) {"},{"lineNumber":74,"author":{"gitId":"Md-Fazil"},"content":"                throw new DukeException(\"Invalid task number! Please try again.\");"},{"lineNumber":75,"author":{"gitId":"Md-Fazil"},"content":"            }"},{"lineNumber":76,"author":{"gitId":"Md-Fazil"},"content":"        }"},{"lineNumber":77,"author":{"gitId":"Md-Fazil"},"content":"    }"},{"lineNumber":78,"author":{"gitId":"Md-Fazil"},"content":""},{"lineNumber":79,"author":{"gitId":"Md-Fazil"},"content":"    private static Command parseDeleteCommand(String[] inputArray) throws DukeException {"},{"lineNumber":80,"author":{"gitId":"Md-Fazil"},"content":"        if (inputArray.length \u003d\u003d 1) {"},{"lineNumber":81,"author":{"gitId":"Md-Fazil"},"content":"            throw new DukeException(\"Missing task number! Please try again.\");"},{"lineNumber":82,"author":{"gitId":"Md-Fazil"},"content":"        } else {"},{"lineNumber":83,"author":{"gitId":"Md-Fazil"},"content":"            try {"},{"lineNumber":84,"author":{"gitId":"Md-Fazil"},"content":"                String[] taskNumbers \u003d inputArray[1].split(\" \");"},{"lineNumber":85,"author":{"gitId":"Md-Fazil"},"content":"                for (int i \u003d 0; i \u003c taskNumbers.length; i++) {"},{"lineNumber":86,"author":{"gitId":"Md-Fazil"},"content":"                    Integer.parseInt(taskNumbers[i]);"},{"lineNumber":87,"author":{"gitId":"Md-Fazil"},"content":"                }"},{"lineNumber":88,"author":{"gitId":"Md-Fazil"},"content":"                return new DeleteCommand(inputArray);"},{"lineNumber":89,"author":{"gitId":"Md-Fazil"},"content":"            } catch (NumberFormatException e) {"},{"lineNumber":90,"author":{"gitId":"Md-Fazil"},"content":"                throw new DukeException(\"Invalid task number! Please try again.\");"},{"lineNumber":91,"author":{"gitId":"Md-Fazil"},"content":"            }"},{"lineNumber":92,"author":{"gitId":"Md-Fazil"},"content":"        }"},{"lineNumber":93,"author":{"gitId":"Md-Fazil"},"content":"    }"},{"lineNumber":94,"author":{"gitId":"Md-Fazil"},"content":""},{"lineNumber":95,"author":{"gitId":"Md-Fazil"},"content":"    private static Command parseFindCommand(String[] inputArray) throws DukeException {"},{"lineNumber":96,"author":{"gitId":"Md-Fazil"},"content":"        if (inputArray.length \u003d\u003d 1) {"},{"lineNumber":97,"author":{"gitId":"Md-Fazil"},"content":"            throw new DukeException(\"Missing find keyword! Please try again\");"},{"lineNumber":98,"author":{"gitId":"Md-Fazil"},"content":"        } else {"},{"lineNumber":99,"author":{"gitId":"Md-Fazil"},"content":"            return new FindCommand(inputArray);"},{"lineNumber":100,"author":{"gitId":"Md-Fazil"},"content":"        }"},{"lineNumber":101,"author":{"gitId":"Md-Fazil"},"content":"    }"},{"lineNumber":102,"author":{"gitId":"Md-Fazil"},"content":""},{"lineNumber":103,"author":{"gitId":"Md-Fazil"},"content":"    private static Command parseDueCommand(String[] inputArray) throws DukeException {"},{"lineNumber":104,"author":{"gitId":"Md-Fazil"},"content":"        if (inputArray.length \u003d\u003d 1) {"},{"lineNumber":105,"author":{"gitId":"Md-Fazil"},"content":"            throw new DukeException(\"Missing date! Please try again.\");"},{"lineNumber":106,"author":{"gitId":"Md-Fazil"},"content":"        } else {"},{"lineNumber":107,"author":{"gitId":"Md-Fazil"},"content":"            try {"},{"lineNumber":108,"author":{"gitId":"Md-Fazil"},"content":"                LocalDate date \u003d LocalDate.parse(inputArray[1]);"},{"lineNumber":109,"author":{"gitId":"Md-Fazil"},"content":"                return new DueCommand(inputArray);"},{"lineNumber":110,"author":{"gitId":"Md-Fazil"},"content":"            } catch (DateTimeParseException e) {"},{"lineNumber":111,"author":{"gitId":"Md-Fazil"},"content":"                throw new DukeException(\"Invalid date format! Please try again.\");"},{"lineNumber":112,"author":{"gitId":"Md-Fazil"},"content":"            }"},{"lineNumber":113,"author":{"gitId":"Md-Fazil"},"content":"        }"},{"lineNumber":114,"author":{"gitId":"Md-Fazil"},"content":"    }"},{"lineNumber":115,"author":{"gitId":"Md-Fazil"},"content":""},{"lineNumber":116,"author":{"gitId":"Md-Fazil"},"content":"    private static Command parseAddCommand(String[] inputArray) throws DukeException {"},{"lineNumber":117,"author":{"gitId":"Md-Fazil"},"content":"        String command \u003d inputArray[0];"},{"lineNumber":118,"author":{"gitId":"Md-Fazil"},"content":"        if (inputArray.length \u003d\u003d 1) {"},{"lineNumber":119,"author":{"gitId":"Md-Fazil"},"content":"            throw new DukeException(\"Missing task description! Please try again.\");"},{"lineNumber":120,"author":{"gitId":"Md-Fazil"},"content":"        } else {"},{"lineNumber":121,"author":{"gitId":"Md-Fazil"},"content":"            String description \u003d inputArray[1];"},{"lineNumber":122,"author":{"gitId":"Md-Fazil"},"content":"            if (command.equals(TODO)) {"},{"lineNumber":123,"author":{"gitId":"Md-Fazil"},"content":"                return new AddCommand(inputArray);"},{"lineNumber":124,"author":{"gitId":"Md-Fazil"},"content":"            } else if (command.equals(DEADLINE) \u0026\u0026 description.split(\"/by\").length \u003d\u003d 2) {"},{"lineNumber":125,"author":{"gitId":"Md-Fazil"},"content":"                return new AddCommand(inputArray);"},{"lineNumber":126,"author":{"gitId":"Md-Fazil"},"content":"            } else if (command.equals(EVENT) \u0026\u0026 description.split(\"/at\").length \u003d\u003d 2) {"},{"lineNumber":127,"author":{"gitId":"Md-Fazil"},"content":"                return new AddCommand(inputArray);"},{"lineNumber":128,"author":{"gitId":"Md-Fazil"},"content":"            } else {"},{"lineNumber":129,"author":{"gitId":"Md-Fazil"},"content":"                throw new DukeException(\"Invalid command! Please try again.\");"},{"lineNumber":130,"author":{"gitId":"Md-Fazil"},"content":"            }"},{"lineNumber":131,"author":{"gitId":"Md-Fazil"},"content":"        }"},{"lineNumber":132,"author":{"gitId":"Md-Fazil"},"content":"    }"},{"lineNumber":133,"author":{"gitId":"Md-Fazil"},"content":""},{"lineNumber":134,"author":{"gitId":"Md-Fazil"},"content":"    /**"},{"lineNumber":135,"author":{"gitId":"Md-Fazil"},"content":"     * Checks and parses the input into the executable commands if the input is valid."},{"lineNumber":136,"author":{"gitId":"Md-Fazil"},"content":"     *"},{"lineNumber":137,"author":{"gitId":"Md-Fazil"},"content":"     * @param input input that is keyed in by the user."},{"lineNumber":138,"author":{"gitId":"Md-Fazil"},"content":"     * @return Command command to be executed."},{"lineNumber":139,"author":{"gitId":"Md-Fazil"},"content":"     * @throws DukeException if the input is not in the correct format."},{"lineNumber":140,"author":{"gitId":"Md-Fazil"},"content":"     */"},{"lineNumber":141,"author":{"gitId":"Md-Fazil"},"content":"    public static Command parse(String input) throws DukeException {"},{"lineNumber":142,"author":{"gitId":"Md-Fazil"},"content":"        String[] inputArray \u003d input.split(\" \", 2);"},{"lineNumber":143,"author":{"gitId":"Md-Fazil"},"content":"        String command \u003d inputArray[0];"},{"lineNumber":144,"author":{"gitId":"Md-Fazil"},"content":"        if (command.equals(\"\")) {"},{"lineNumber":145,"author":{"gitId":"Md-Fazil"},"content":"            throw new DukeException(\"No command typed. Please key in a valid command\");"},{"lineNumber":146,"author":{"gitId":"Md-Fazil"},"content":"        } else if (command.equals(LIST)) {"},{"lineNumber":147,"author":{"gitId":"Md-Fazil"},"content":"            return parseListCommand(inputArray);"},{"lineNumber":148,"author":{"gitId":"Md-Fazil"},"content":"        } else if (command.equals(DONE)) {"},{"lineNumber":149,"author":{"gitId":"Md-Fazil"},"content":"            return parseDoneCommand(inputArray);"},{"lineNumber":150,"author":{"gitId":"Md-Fazil"},"content":"        } else if (command.equals(DELETE)) {"},{"lineNumber":151,"author":{"gitId":"Md-Fazil"},"content":"            return parseDeleteCommand(inputArray);"},{"lineNumber":152,"author":{"gitId":"Md-Fazil"},"content":"        } else if (command.equals(FIND)) {"},{"lineNumber":153,"author":{"gitId":"Md-Fazil"},"content":"            return parseFindCommand(inputArray);"},{"lineNumber":154,"author":{"gitId":"Md-Fazil"},"content":"        } else if (command.equals(DUE)) {"},{"lineNumber":155,"author":{"gitId":"Md-Fazil"},"content":"            return parseDueCommand(inputArray);"},{"lineNumber":156,"author":{"gitId":"Md-Fazil"},"content":"        } else if (command.equals(TODO) || command.equals(DEADLINE) || command.equals(EVENT)) {"},{"lineNumber":157,"author":{"gitId":"Md-Fazil"},"content":"            return parseAddCommand(inputArray);"},{"lineNumber":158,"author":{"gitId":"Md-Fazil"},"content":"        } else if (command.equals(\"bye\")) {"},{"lineNumber":159,"author":{"gitId":"Md-Fazil"},"content":"            return new ByeCommand(inputArray);"},{"lineNumber":160,"author":{"gitId":"Md-Fazil"},"content":"        } else {"},{"lineNumber":161,"author":{"gitId":"Md-Fazil"},"content":"            throw new DukeException(\"Invalid command! Please try again.\");"},{"lineNumber":162,"author":{"gitId":"Md-Fazil"},"content":"        }"},{"lineNumber":163,"author":{"gitId":"Md-Fazil"},"content":"    }"},{"lineNumber":164,"author":{"gitId":"Md-Fazil"},"content":"}"}],"authorContributionMap":{"Md-Fazil":164}},{"path":"src/main/java/duke/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Md-Fazil"},"content":"package duke;"},{"lineNumber":2,"author":{"gitId":"Md-Fazil"},"content":"import java.io.File;"},{"lineNumber":3,"author":{"gitId":"Md-Fazil"},"content":"import java.io.FileNotFoundException;"},{"lineNumber":4,"author":{"gitId":"Md-Fazil"},"content":"import java.io.FileWriter;"},{"lineNumber":5,"author":{"gitId":"Md-Fazil"},"content":"import java.io.IOException;"},{"lineNumber":6,"author":{"gitId":"Md-Fazil"},"content":"import java.util.ArrayList;"},{"lineNumber":7,"author":{"gitId":"Md-Fazil"},"content":"import java.util.Scanner;"},{"lineNumber":8,"author":{"gitId":"Md-Fazil"},"content":""},{"lineNumber":9,"author":{"gitId":"Md-Fazil"},"content":"/**"},{"lineNumber":10,"author":{"gitId":"Md-Fazil"},"content":" * Represents a class that stores and real files stored in the hard disk."},{"lineNumber":11,"author":{"gitId":"Md-Fazil"},"content":" */"},{"lineNumber":12,"author":{"gitId":"Md-Fazil"},"content":"public class Storage {"},{"lineNumber":13,"author":{"gitId":"Md-Fazil"},"content":""},{"lineNumber":14,"author":{"gitId":"Md-Fazil"},"content":"    private String fileUrl;"},{"lineNumber":15,"author":{"gitId":"Md-Fazil"},"content":""},{"lineNumber":16,"author":{"gitId":"Md-Fazil"},"content":"    Storage(String fileUrl) {"},{"lineNumber":17,"author":{"gitId":"Md-Fazil"},"content":"        this.fileUrl \u003d fileUrl;"},{"lineNumber":18,"author":{"gitId":"Md-Fazil"},"content":"    }"},{"lineNumber":19,"author":{"gitId":"Md-Fazil"},"content":""},{"lineNumber":20,"author":{"gitId":"Md-Fazil"},"content":"    /**"},{"lineNumber":21,"author":{"gitId":"Md-Fazil"},"content":"     * Loads all tasks stored in the file at the specified fileUrl."},{"lineNumber":22,"author":{"gitId":"Md-Fazil"},"content":"     *"},{"lineNumber":23,"author":{"gitId":"Md-Fazil"},"content":"     * @return ArrayList List containing all previously stored tasks."},{"lineNumber":24,"author":{"gitId":"Md-Fazil"},"content":"     * @throws FileNotFoundException If the file cannot be found at the specified file url."},{"lineNumber":25,"author":{"gitId":"Md-Fazil"},"content":"     */"},{"lineNumber":26,"author":{"gitId":"Md-Fazil"},"content":"    public ArrayList\u003cString\u003e load() throws FileNotFoundException {"},{"lineNumber":27,"author":{"gitId":"Md-Fazil"},"content":"        File storageFile \u003d new File(fileUrl);"},{"lineNumber":28,"author":{"gitId":"Md-Fazil"},"content":"        Scanner sc \u003d new Scanner(storageFile);"},{"lineNumber":29,"author":{"gitId":"Md-Fazil"},"content":"        ArrayList\u003cString\u003e data \u003d new ArrayList\u003c\u003e();"},{"lineNumber":30,"author":{"gitId":"Md-Fazil"},"content":"        while (sc.hasNextLine()) {"},{"lineNumber":31,"author":{"gitId":"Md-Fazil"},"content":"            data.add(sc.nextLine());"},{"lineNumber":32,"author":{"gitId":"Md-Fazil"},"content":"        }"},{"lineNumber":33,"author":{"gitId":"Md-Fazil"},"content":"        return data;"},{"lineNumber":34,"author":{"gitId":"Md-Fazil"},"content":"    }"},{"lineNumber":35,"author":{"gitId":"Md-Fazil"},"content":""},{"lineNumber":36,"author":{"gitId":"Md-Fazil"},"content":"    /**"},{"lineNumber":37,"author":{"gitId":"Md-Fazil"},"content":"     * Stores and writes all tasks in the input list to file at the specified fileUrl."},{"lineNumber":38,"author":{"gitId":"Md-Fazil"},"content":"     *"},{"lineNumber":39,"author":{"gitId":"Md-Fazil"},"content":"     * @param taskList ArrayList containing all current tasks."},{"lineNumber":40,"author":{"gitId":"Md-Fazil"},"content":"     * @throws IOException If the tasks strings are not in the correct storage format."},{"lineNumber":41,"author":{"gitId":"Md-Fazil"},"content":"     */"},{"lineNumber":42,"author":{"gitId":"Md-Fazil"},"content":"    public void store(ArrayList\u003cString\u003e taskList) throws IOException {"},{"lineNumber":43,"author":{"gitId":"Md-Fazil"},"content":"        FileWriter fw \u003d new FileWriter(fileUrl);"},{"lineNumber":44,"author":{"gitId":"Md-Fazil"},"content":"        String data \u003d taskList.size() \u003d\u003d 0 ? \"\" : taskList.get(0);"},{"lineNumber":45,"author":{"gitId":"Md-Fazil"},"content":"        for (int i \u003d 1; i \u003c taskList.size(); i++) {"},{"lineNumber":46,"author":{"gitId":"Md-Fazil"},"content":"            data +\u003d System.lineSeparator() + taskList.get(i);"},{"lineNumber":47,"author":{"gitId":"Md-Fazil"},"content":"        }"},{"lineNumber":48,"author":{"gitId":"Md-Fazil"},"content":"        fw.write(data);"},{"lineNumber":49,"author":{"gitId":"Md-Fazil"},"content":"        fw.close();"},{"lineNumber":50,"author":{"gitId":"Md-Fazil"},"content":"    }"},{"lineNumber":51,"author":{"gitId":"Md-Fazil"},"content":""},{"lineNumber":52,"author":{"gitId":"Md-Fazil"},"content":"}"},{"lineNumber":53,"author":{"gitId":"Md-Fazil"},"content":"/*"},{"lineNumber":54,"author":{"gitId":"Md-Fazil"},"content":"todo"},{"lineNumber":55,"author":{"gitId":"Md-Fazil"},"content":"Handling file/folder not found exception"},{"lineNumber":56,"author":{"gitId":"Md-Fazil"},"content":"Handling IOException"},{"lineNumber":57,"author":{"gitId":"Md-Fazil"},"content":"*/"}],"authorContributionMap":{"Md-Fazil":57}},{"path":"src/main/java/duke/TaskManager.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Md-Fazil"},"content":"package duke;"},{"lineNumber":2,"author":{"gitId":"Md-Fazil"},"content":""},{"lineNumber":3,"author":{"gitId":"Md-Fazil"},"content":"import java.time.LocalDate;"},{"lineNumber":4,"author":{"gitId":"Md-Fazil"},"content":"import java.util.ArrayList;"},{"lineNumber":5,"author":{"gitId":"Md-Fazil"},"content":""},{"lineNumber":6,"author":{"gitId":"Md-Fazil"},"content":"import duke.task.Deadline;"},{"lineNumber":7,"author":{"gitId":"Md-Fazil"},"content":"import duke.task.Event;"},{"lineNumber":8,"author":{"gitId":"Md-Fazil"},"content":"import duke.task.Task;"},{"lineNumber":9,"author":{"gitId":"Md-Fazil"},"content":"import duke.task.ToDo;"},{"lineNumber":10,"author":{"gitId":"Md-Fazil"},"content":""},{"lineNumber":11,"author":{"gitId":"Md-Fazil"},"content":"public class TaskManager {"},{"lineNumber":12,"author":{"gitId":"Md-Fazil"},"content":"    private static final String TODO \u003d \"todo\";"},{"lineNumber":13,"author":{"gitId":"Md-Fazil"},"content":"    private static final String DEADLINE \u003d \"deadline\";"},{"lineNumber":14,"author":{"gitId":"Md-Fazil"},"content":"    private ArrayList\u003cTask\u003e list \u003d new ArrayList\u003c\u003e(100);"},{"lineNumber":15,"author":{"gitId":"Md-Fazil"},"content":""},{"lineNumber":16,"author":{"gitId":"Md-Fazil"},"content":"    public Task add(String type, String task, boolean isCompleted) {"},{"lineNumber":17,"author":{"gitId":"Md-Fazil"},"content":"        assert !task.equals(\"\") : \"Missing task description\";"},{"lineNumber":18,"author":{"gitId":"Md-Fazil"},"content":"        if (type.equals(TODO)) {"},{"lineNumber":19,"author":{"gitId":"Md-Fazil"},"content":"            Task newTask \u003d new ToDo(task, isCompleted);"},{"lineNumber":20,"author":{"gitId":"Md-Fazil"},"content":"            list.add(newTask);"},{"lineNumber":21,"author":{"gitId":"Md-Fazil"},"content":"            return newTask;"},{"lineNumber":22,"author":{"gitId":"Md-Fazil"},"content":"        } else {"},{"lineNumber":23,"author":{"gitId":"Md-Fazil"},"content":"            String description \u003d task.split(\"/\")[0];"},{"lineNumber":24,"author":{"gitId":"Md-Fazil"},"content":"            String deadline \u003d task.split(\"/\", 2)[1].split(\" \", 2)[1];"},{"lineNumber":25,"author":{"gitId":"Md-Fazil"},"content":"            if (type.equals(DEADLINE)) {"},{"lineNumber":26,"author":{"gitId":"Md-Fazil"},"content":"                Task newTask \u003d new Deadline(description, isCompleted, deadline);"},{"lineNumber":27,"author":{"gitId":"Md-Fazil"},"content":"                list.add(newTask);"},{"lineNumber":28,"author":{"gitId":"Md-Fazil"},"content":"                return newTask;"},{"lineNumber":29,"author":{"gitId":"Md-Fazil"},"content":"            } else {"},{"lineNumber":30,"author":{"gitId":"Md-Fazil"},"content":"                Task newTask \u003d new Event(description, isCompleted, deadline);"},{"lineNumber":31,"author":{"gitId":"Md-Fazil"},"content":"                list.add(newTask);"},{"lineNumber":32,"author":{"gitId":"Md-Fazil"},"content":"                return newTask;"},{"lineNumber":33,"author":{"gitId":"Md-Fazil"},"content":"            }"},{"lineNumber":34,"author":{"gitId":"Md-Fazil"},"content":"        }"},{"lineNumber":35,"author":{"gitId":"Md-Fazil"},"content":"    }"},{"lineNumber":36,"author":{"gitId":"Md-Fazil"},"content":""},{"lineNumber":37,"author":{"gitId":"Md-Fazil"},"content":"    public Task delete(int taskId) throws DukeException {"},{"lineNumber":38,"author":{"gitId":"Md-Fazil"},"content":"        if (taskId \u003c\u003d list.size() \u0026\u0026 taskId \u003e\u003d 1) {"},{"lineNumber":39,"author":{"gitId":"Md-Fazil"},"content":"            assert taskId \u003e\u003d 0 : \"Invalid task number\";"},{"lineNumber":40,"author":{"gitId":"Md-Fazil"},"content":"            Task deletedTask \u003d list.get(taskId - 1);"},{"lineNumber":41,"author":{"gitId":"Md-Fazil"},"content":"            list.remove(taskId - 1);"},{"lineNumber":42,"author":{"gitId":"Md-Fazil"},"content":"            return deletedTask;"},{"lineNumber":43,"author":{"gitId":"Md-Fazil"},"content":"        } else {"},{"lineNumber":44,"author":{"gitId":"Md-Fazil"},"content":"            throw new DukeException(\"Invalid task number. You only have \" + list.size() + \" tasks in the list.\");"},{"lineNumber":45,"author":{"gitId":"Md-Fazil"},"content":"        }"},{"lineNumber":46,"author":{"gitId":"Md-Fazil"},"content":"    }"},{"lineNumber":47,"author":{"gitId":"Md-Fazil"},"content":""},{"lineNumber":48,"author":{"gitId":"Md-Fazil"},"content":"    public Task done(int taskId) throws DukeException {"},{"lineNumber":49,"author":{"gitId":"Md-Fazil"},"content":"        if (taskId \u003c\u003d list.size() \u0026\u0026 taskId \u003e\u003d 1) {"},{"lineNumber":50,"author":{"gitId":"Md-Fazil"},"content":"            assert taskId \u003e\u003d 0 : \"Invalid task number\";"},{"lineNumber":51,"author":{"gitId":"Md-Fazil"},"content":"            Task completedTask \u003d list.get(taskId - 1);"},{"lineNumber":52,"author":{"gitId":"Md-Fazil"},"content":"            completedTask.markComplete();"},{"lineNumber":53,"author":{"gitId":"Md-Fazil"},"content":"            return completedTask;"},{"lineNumber":54,"author":{"gitId":"Md-Fazil"},"content":"        } else {"},{"lineNumber":55,"author":{"gitId":"Md-Fazil"},"content":"            throw new DukeException(\"Invalid task number. You only have \" + list.size() + \" tasks in the list.\");"},{"lineNumber":56,"author":{"gitId":"Md-Fazil"},"content":"        }"},{"lineNumber":57,"author":{"gitId":"Md-Fazil"},"content":"    }"},{"lineNumber":58,"author":{"gitId":"Md-Fazil"},"content":""},{"lineNumber":59,"author":{"gitId":"Md-Fazil"},"content":"    public ArrayList\u003cTask\u003e getTasksOn(String date) {"},{"lineNumber":60,"author":{"gitId":"Md-Fazil"},"content":"        LocalDate currentDate \u003d LocalDate.parse(date);"},{"lineNumber":61,"author":{"gitId":"Md-Fazil"},"content":"        assert currentDate !\u003d null : \"Invalid date format\";"},{"lineNumber":62,"author":{"gitId":"Md-Fazil"},"content":"        System.out.println(\"Here are the tasks due on \" + date + \": \");"},{"lineNumber":63,"author":{"gitId":"Md-Fazil"},"content":"        ArrayList\u003cTask\u003e dueList \u003d new ArrayList\u003c\u003e();"},{"lineNumber":64,"author":{"gitId":"Md-Fazil"},"content":"        for (Task task : list) {"},{"lineNumber":65,"author":{"gitId":"Md-Fazil"},"content":"            if (task.getTaskDate().equals(currentDate)) {"},{"lineNumber":66,"author":{"gitId":"Md-Fazil"},"content":"                dueList.add(task);"},{"lineNumber":67,"author":{"gitId":"Md-Fazil"},"content":"            }"},{"lineNumber":68,"author":{"gitId":"Md-Fazil"},"content":"        }"},{"lineNumber":69,"author":{"gitId":"Md-Fazil"},"content":"        return dueList;"},{"lineNumber":70,"author":{"gitId":"Md-Fazil"},"content":"    }"},{"lineNumber":71,"author":{"gitId":"Md-Fazil"},"content":""},{"lineNumber":72,"author":{"gitId":"Md-Fazil"},"content":"    public void upload(ArrayList\u003cString\u003e storedData) {"},{"lineNumber":73,"author":{"gitId":"Md-Fazil"},"content":"        for (String task : storedData) {"},{"lineNumber":74,"author":{"gitId":"Md-Fazil"},"content":"            String[] arr \u003d task.split(\" \", 3);"},{"lineNumber":75,"author":{"gitId":"Md-Fazil"},"content":"            String type \u003d arr[0];"},{"lineNumber":76,"author":{"gitId":"Md-Fazil"},"content":"            boolean isCompleted \u003d arr[1].equals(\"1\");"},{"lineNumber":77,"author":{"gitId":"Md-Fazil"},"content":"            add(type, arr[2], isCompleted);"},{"lineNumber":78,"author":{"gitId":"Md-Fazil"},"content":"        }"},{"lineNumber":79,"author":{"gitId":"Md-Fazil"},"content":"    }"},{"lineNumber":80,"author":{"gitId":"Md-Fazil"},"content":""},{"lineNumber":81,"author":{"gitId":"Md-Fazil"},"content":"    public ArrayList\u003cString\u003e retrieveTasksforStorage() {"},{"lineNumber":82,"author":{"gitId":"Md-Fazil"},"content":"        ArrayList\u003cString\u003e taskList \u003d new ArrayList\u003c\u003e();"},{"lineNumber":83,"author":{"gitId":"Md-Fazil"},"content":"        for (Task task : list) {"},{"lineNumber":84,"author":{"gitId":"Md-Fazil"},"content":"            taskList.add(task.getFormattedData());"},{"lineNumber":85,"author":{"gitId":"Md-Fazil"},"content":"        }"},{"lineNumber":86,"author":{"gitId":"Md-Fazil"},"content":"        return taskList;"},{"lineNumber":87,"author":{"gitId":"Md-Fazil"},"content":"    }"},{"lineNumber":88,"author":{"gitId":"Md-Fazil"},"content":""},{"lineNumber":89,"author":{"gitId":"Md-Fazil"},"content":"    public int getNumOfTasks() {"},{"lineNumber":90,"author":{"gitId":"Md-Fazil"},"content":"        return list.size();"},{"lineNumber":91,"author":{"gitId":"Md-Fazil"},"content":"    }"},{"lineNumber":92,"author":{"gitId":"Md-Fazil"},"content":""},{"lineNumber":93,"author":{"gitId":"Md-Fazil"},"content":"    public ArrayList\u003cTask\u003e getList() {"},{"lineNumber":94,"author":{"gitId":"Md-Fazil"},"content":"        return this.list;"},{"lineNumber":95,"author":{"gitId":"Md-Fazil"},"content":"    }"},{"lineNumber":96,"author":{"gitId":"Md-Fazil"},"content":""},{"lineNumber":97,"author":{"gitId":"Md-Fazil"},"content":"    public ArrayList\u003cTask\u003e retrieveMatchingTasks(String keyword) {"},{"lineNumber":98,"author":{"gitId":"Md-Fazil"},"content":"        ArrayList\u003cTask\u003e taskList \u003d new ArrayList\u003c\u003e();"},{"lineNumber":99,"author":{"gitId":"Md-Fazil"},"content":"        for (Task task : list) {"},{"lineNumber":100,"author":{"gitId":"Md-Fazil"},"content":"            if (task.getDescription().contains(keyword)) {"},{"lineNumber":101,"author":{"gitId":"Md-Fazil"},"content":"                taskList.add(task);"},{"lineNumber":102,"author":{"gitId":"Md-Fazil"},"content":"            }"},{"lineNumber":103,"author":{"gitId":"Md-Fazil"},"content":"        }"},{"lineNumber":104,"author":{"gitId":"Md-Fazil"},"content":"        return taskList;"},{"lineNumber":105,"author":{"gitId":"Md-Fazil"},"content":"    }"},{"lineNumber":106,"author":{"gitId":"Md-Fazil"},"content":"}"}],"authorContributionMap":{"Md-Fazil":106}},{"path":"src/main/java/duke/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Md-Fazil"},"content":"package duke;"},{"lineNumber":2,"author":{"gitId":"Md-Fazil"},"content":""},{"lineNumber":3,"author":{"gitId":"Md-Fazil"},"content":"import java.time.LocalDate;"},{"lineNumber":4,"author":{"gitId":"Md-Fazil"},"content":"import java.util.ArrayList;"},{"lineNumber":5,"author":{"gitId":"Md-Fazil"},"content":""},{"lineNumber":6,"author":{"gitId":"Md-Fazil"},"content":"import duke.task.Task;"},{"lineNumber":7,"author":{"gitId":"Md-Fazil"},"content":""},{"lineNumber":8,"author":{"gitId":"Md-Fazil"},"content":"public class Ui {"},{"lineNumber":9,"author":{"gitId":"Md-Fazil"},"content":""},{"lineNumber":10,"author":{"gitId":"Md-Fazil"},"content":"    /**"},{"lineNumber":11,"author":{"gitId":"Md-Fazil"},"content":"     * Formats the string to be printed to the user."},{"lineNumber":12,"author":{"gitId":"Md-Fazil"},"content":"     *"},{"lineNumber":13,"author":{"gitId":"Md-Fazil"},"content":"     * @param error error message that is to be printed."},{"lineNumber":14,"author":{"gitId":"Md-Fazil"},"content":"     * @return string to be printed to the user."},{"lineNumber":15,"author":{"gitId":"Md-Fazil"},"content":"     */"},{"lineNumber":16,"author":{"gitId":"Md-Fazil"},"content":"    public String showError(String error) {"},{"lineNumber":17,"author":{"gitId":"Md-Fazil"},"content":"        System.out.println(error);"},{"lineNumber":18,"author":{"gitId":"Md-Fazil"},"content":"        System.out.println(\"\");"},{"lineNumber":19,"author":{"gitId":"Md-Fazil"},"content":"        return error + \"\\n\";"},{"lineNumber":20,"author":{"gitId":"Md-Fazil"},"content":"    }"},{"lineNumber":21,"author":{"gitId":"Md-Fazil"},"content":""},{"lineNumber":22,"author":{"gitId":"Md-Fazil"},"content":"    /**"},{"lineNumber":23,"author":{"gitId":"Md-Fazil"},"content":"     * Formats the task that was added and outputs a string to be printed to the user."},{"lineNumber":24,"author":{"gitId":"Md-Fazil"},"content":"     *"},{"lineNumber":25,"author":{"gitId":"Md-Fazil"},"content":"     * @param task task that was added."},{"lineNumber":26,"author":{"gitId":"Md-Fazil"},"content":"     * @param numOfTasks current number of tasks the user has."},{"lineNumber":27,"author":{"gitId":"Md-Fazil"},"content":"     * @return string message to be printed to the user."},{"lineNumber":28,"author":{"gitId":"Md-Fazil"},"content":"     */"},{"lineNumber":29,"author":{"gitId":"Md-Fazil"},"content":"    public String showAddedTask(Task task, int numOfTasks) {"},{"lineNumber":30,"author":{"gitId":"Md-Fazil"},"content":"        return \"Got it. I\u0027ve added this task:\\n\" + task"},{"lineNumber":31,"author":{"gitId":"Md-Fazil"},"content":"                + \"\\nNow you have \" + numOfTasks + \" tasks in the list. \\n\";"},{"lineNumber":32,"author":{"gitId":"Md-Fazil"},"content":"    }"},{"lineNumber":33,"author":{"gitId":"Md-Fazil"},"content":""},{"lineNumber":34,"author":{"gitId":"Md-Fazil"},"content":"    /**"},{"lineNumber":35,"author":{"gitId":"Md-Fazil"},"content":"     * Formats the task that was deleted and outputs a string to be printed to the user."},{"lineNumber":36,"author":{"gitId":"Md-Fazil"},"content":"     *"},{"lineNumber":37,"author":{"gitId":"Md-Fazil"},"content":"     * @param taskList lists of tasks that were deleted."},{"lineNumber":38,"author":{"gitId":"Md-Fazil"},"content":"     * @param numOfTasks current number of tasks the user has."},{"lineNumber":39,"author":{"gitId":"Md-Fazil"},"content":"     * @return string message to be printed to the user."},{"lineNumber":40,"author":{"gitId":"Md-Fazil"},"content":"     */"},{"lineNumber":41,"author":{"gitId":"Md-Fazil"},"content":"    public String showRemovedTask(ArrayList\u003cTask\u003e taskList, int numOfTasks) {"},{"lineNumber":42,"author":{"gitId":"Md-Fazil"},"content":"        String result \u003d \"Noted. I\u0027ve removed this task(s): \\n\";"},{"lineNumber":43,"author":{"gitId":"Md-Fazil"},"content":"        for (Task task : taskList) {"},{"lineNumber":44,"author":{"gitId":"Md-Fazil"},"content":"            result \u003d result + task + \"\\n\";"},{"lineNumber":45,"author":{"gitId":"Md-Fazil"},"content":"        }"},{"lineNumber":46,"author":{"gitId":"Md-Fazil"},"content":"        result \u003d result + \"\\nNow you have \" + numOfTasks + \" tasks in the list. \\n\";"},{"lineNumber":47,"author":{"gitId":"Md-Fazil"},"content":"        return result;"},{"lineNumber":48,"author":{"gitId":"Md-Fazil"},"content":"    }"},{"lineNumber":49,"author":{"gitId":"Md-Fazil"},"content":""},{"lineNumber":50,"author":{"gitId":"Md-Fazil"},"content":"    /**"},{"lineNumber":51,"author":{"gitId":"Md-Fazil"},"content":"     * Formats the task that was marked as done and outputs a string to be printed to the user."},{"lineNumber":52,"author":{"gitId":"Md-Fazil"},"content":"     *"},{"lineNumber":53,"author":{"gitId":"Md-Fazil"},"content":"     * @param task task that was marked done."},{"lineNumber":54,"author":{"gitId":"Md-Fazil"},"content":"     * @return string message to be printed to the user."},{"lineNumber":55,"author":{"gitId":"Md-Fazil"},"content":"     */"},{"lineNumber":56,"author":{"gitId":"Md-Fazil"},"content":"    public String showDoneTask(Task task) {"},{"lineNumber":57,"author":{"gitId":"Md-Fazil"},"content":"        return \"Nice! I\u0027ve marked this task as done:\\n\" + task + \"\\n\";"},{"lineNumber":58,"author":{"gitId":"Md-Fazil"},"content":"    }"},{"lineNumber":59,"author":{"gitId":"Md-Fazil"},"content":""},{"lineNumber":60,"author":{"gitId":"Md-Fazil"},"content":""},{"lineNumber":61,"author":{"gitId":"Md-Fazil"},"content":"    public String showAllTasks(ArrayList\u003cTask\u003e list) {"},{"lineNumber":62,"author":{"gitId":"Md-Fazil"},"content":"        if (list.size() \u003d\u003d 0) {"},{"lineNumber":63,"author":{"gitId":"Md-Fazil"},"content":"            return \"There are no tasks in your list. \\n\";"},{"lineNumber":64,"author":{"gitId":"Md-Fazil"},"content":"        } else {"},{"lineNumber":65,"author":{"gitId":"Md-Fazil"},"content":"            String result \u003d \"Here are the tasks in your list: \\n\";"},{"lineNumber":66,"author":{"gitId":"Md-Fazil"},"content":"            for (int i \u003d 0; i \u003c list.size(); i++) {"},{"lineNumber":67,"author":{"gitId":"Md-Fazil"},"content":"                result +\u003d String.valueOf(i + 1) + \".\" + list.get(i).toString() + \"\\n\";"},{"lineNumber":68,"author":{"gitId":"Md-Fazil"},"content":"            }"},{"lineNumber":69,"author":{"gitId":"Md-Fazil"},"content":"            return result;"},{"lineNumber":70,"author":{"gitId":"Md-Fazil"},"content":"        }"},{"lineNumber":71,"author":{"gitId":"Md-Fazil"},"content":"    }"},{"lineNumber":72,"author":{"gitId":"Md-Fazil"},"content":""},{"lineNumber":73,"author":{"gitId":"Md-Fazil"},"content":"    /** Returns a string containing a bye message that is to be printed to the user."},{"lineNumber":74,"author":{"gitId":"Md-Fazil"},"content":"     *"},{"lineNumber":75,"author":{"gitId":"Md-Fazil"},"content":"     * @return String which is a bye message."},{"lineNumber":76,"author":{"gitId":"Md-Fazil"},"content":"     */"},{"lineNumber":77,"author":{"gitId":"Md-Fazil"},"content":"    public String showByeMessage() {"},{"lineNumber":78,"author":{"gitId":"Md-Fazil"},"content":"        return \"Bye. Hope to see you again soon!\";"},{"lineNumber":79,"author":{"gitId":"Md-Fazil"},"content":"    }"},{"lineNumber":80,"author":{"gitId":"Md-Fazil"},"content":""},{"lineNumber":81,"author":{"gitId":"Md-Fazil"},"content":"    public String showDueTasks(ArrayList\u003cTask\u003e list, String date) {"},{"lineNumber":82,"author":{"gitId":"Md-Fazil"},"content":"        LocalDate currentDate \u003d LocalDate.parse(date);"},{"lineNumber":83,"author":{"gitId":"Md-Fazil"},"content":"        String result \u003d \"Here are the tasks due on \" + String.valueOf(currentDate) + \": \" + \"\\n\";"},{"lineNumber":84,"author":{"gitId":"Md-Fazil"},"content":"        for (int i \u003d 0; i \u003c list.size(); i++) {"},{"lineNumber":85,"author":{"gitId":"Md-Fazil"},"content":"            result +\u003d String.valueOf(i + 1) + \". \" + list.get(i).toString() + \"\\n\";"},{"lineNumber":86,"author":{"gitId":"Md-Fazil"},"content":"        }"},{"lineNumber":87,"author":{"gitId":"Md-Fazil"},"content":"        return result;"},{"lineNumber":88,"author":{"gitId":"Md-Fazil"},"content":"    }"},{"lineNumber":89,"author":{"gitId":"Md-Fazil"},"content":""},{"lineNumber":90,"author":{"gitId":"Md-Fazil"},"content":"    public String showMatchingTasks(ArrayList\u003cTask\u003e list) {"},{"lineNumber":91,"author":{"gitId":"Md-Fazil"},"content":"        if (list.size() \u003d\u003d 0) {"},{"lineNumber":92,"author":{"gitId":"Md-Fazil"},"content":"            return \"Sorry! There are no matching task.\";"},{"lineNumber":93,"author":{"gitId":"Md-Fazil"},"content":"        } else {"},{"lineNumber":94,"author":{"gitId":"Md-Fazil"},"content":"            String result \u003d \"Here are the matching tasks in your list: \" + \"\\n\";"},{"lineNumber":95,"author":{"gitId":"Md-Fazil"},"content":"            for (int i \u003d 0; i \u003c list.size(); i++) {"},{"lineNumber":96,"author":{"gitId":"Md-Fazil"},"content":"                result +\u003d String.valueOf(i + 1) + \". \" + list.get(i).toString() + \"\\n\";"},{"lineNumber":97,"author":{"gitId":"Md-Fazil"},"content":"            }"},{"lineNumber":98,"author":{"gitId":"Md-Fazil"},"content":"            return result;"},{"lineNumber":99,"author":{"gitId":"Md-Fazil"},"content":"        }"},{"lineNumber":100,"author":{"gitId":"Md-Fazil"},"content":"    }"},{"lineNumber":101,"author":{"gitId":"Md-Fazil"},"content":"}"}],"authorContributionMap":{"Md-Fazil":101}},{"path":"src/main/java/duke/command/AddCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Md-Fazil"},"content":"package duke.command;"},{"lineNumber":2,"author":{"gitId":"Md-Fazil"},"content":""},{"lineNumber":3,"author":{"gitId":"Md-Fazil"},"content":"import java.io.IOException;"},{"lineNumber":4,"author":{"gitId":"Md-Fazil"},"content":""},{"lineNumber":5,"author":{"gitId":"Md-Fazil"},"content":"import duke.Storage;"},{"lineNumber":6,"author":{"gitId":"Md-Fazil"},"content":"import duke.TaskManager;"},{"lineNumber":7,"author":{"gitId":"Md-Fazil"},"content":"import duke.Ui;"},{"lineNumber":8,"author":{"gitId":"Md-Fazil"},"content":"import duke.task.Task;"},{"lineNumber":9,"author":{"gitId":"Md-Fazil"},"content":""},{"lineNumber":10,"author":{"gitId":"Md-Fazil"},"content":"/**"},{"lineNumber":11,"author":{"gitId":"Md-Fazil"},"content":" * Represents an add command keyed in by the user."},{"lineNumber":12,"author":{"gitId":"Md-Fazil"},"content":" */"},{"lineNumber":13,"author":{"gitId":"Md-Fazil"},"content":"public class AddCommand extends Command {"},{"lineNumber":14,"author":{"gitId":"Md-Fazil"},"content":""},{"lineNumber":15,"author":{"gitId":"Md-Fazil"},"content":"    public AddCommand(String[] parsedCommand) {"},{"lineNumber":16,"author":{"gitId":"Md-Fazil"},"content":"        super(parsedCommand);"},{"lineNumber":17,"author":{"gitId":"Md-Fazil"},"content":"    }"},{"lineNumber":18,"author":{"gitId":"Md-Fazil"},"content":""},{"lineNumber":19,"author":{"gitId":"Md-Fazil"},"content":"    /**"},{"lineNumber":20,"author":{"gitId":"Md-Fazil"},"content":"     * Executes the add command by adding the task to the list, printing the added task to the user and updating"},{"lineNumber":21,"author":{"gitId":"Md-Fazil"},"content":"     * the stored file."},{"lineNumber":22,"author":{"gitId":"Md-Fazil"},"content":"     *"},{"lineNumber":23,"author":{"gitId":"Md-Fazil"},"content":"     * @param taskManager TaskManager object that maintains the list of tasks."},{"lineNumber":24,"author":{"gitId":"Md-Fazil"},"content":"     * @param ui Ui object that handles user interaction."},{"lineNumber":25,"author":{"gitId":"Md-Fazil"},"content":"     * @param storage Storage object that handles the updating of stored file."},{"lineNumber":26,"author":{"gitId":"Md-Fazil"},"content":"     * @return String string to output to user"},{"lineNumber":27,"author":{"gitId":"Md-Fazil"},"content":"     * @throws IOException If the list of tasks are not in the correct storage format."},{"lineNumber":28,"author":{"gitId":"Md-Fazil"},"content":"     */"},{"lineNumber":29,"author":{"gitId":"Md-Fazil"},"content":"    public String execute(TaskManager taskManager, Ui ui, Storage storage) throws IOException {"},{"lineNumber":30,"author":{"gitId":"Md-Fazil"},"content":"        String taskType \u003d super.parsedCommand[0];"},{"lineNumber":31,"author":{"gitId":"Md-Fazil"},"content":"        String description \u003d super.parsedCommand[1];"},{"lineNumber":32,"author":{"gitId":"Md-Fazil"},"content":"        Task addedTask \u003d taskManager.add(taskType, description, false);"},{"lineNumber":33,"author":{"gitId":"Md-Fazil"},"content":"        storage.store(taskManager.retrieveTasksforStorage());"},{"lineNumber":34,"author":{"gitId":"Md-Fazil"},"content":"        return ui.showAddedTask(addedTask, taskManager.getNumOfTasks());"},{"lineNumber":35,"author":{"gitId":"Md-Fazil"},"content":""},{"lineNumber":36,"author":{"gitId":"Md-Fazil"},"content":"    }"},{"lineNumber":37,"author":{"gitId":"Md-Fazil"},"content":"}"}],"authorContributionMap":{"Md-Fazil":37}},{"path":"src/main/java/duke/command/ByeCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Md-Fazil"},"content":"package duke.command;"},{"lineNumber":2,"author":{"gitId":"Md-Fazil"},"content":""},{"lineNumber":3,"author":{"gitId":"Md-Fazil"},"content":"import duke.Storage;"},{"lineNumber":4,"author":{"gitId":"Md-Fazil"},"content":"import duke.TaskManager;"},{"lineNumber":5,"author":{"gitId":"Md-Fazil"},"content":"import duke.Ui;"},{"lineNumber":6,"author":{"gitId":"Md-Fazil"},"content":""},{"lineNumber":7,"author":{"gitId":"Md-Fazil"},"content":"/**"},{"lineNumber":8,"author":{"gitId":"Md-Fazil"},"content":" * Represents a bye command keyed in by the user."},{"lineNumber":9,"author":{"gitId":"Md-Fazil"},"content":" */"},{"lineNumber":10,"author":{"gitId":"Md-Fazil"},"content":"public class ByeCommand extends Command {"},{"lineNumber":11,"author":{"gitId":"Md-Fazil"},"content":""},{"lineNumber":12,"author":{"gitId":"Md-Fazil"},"content":"    public ByeCommand(String[] parsedAction) {"},{"lineNumber":13,"author":{"gitId":"Md-Fazil"},"content":"        super(parsedAction);"},{"lineNumber":14,"author":{"gitId":"Md-Fazil"},"content":"    }"},{"lineNumber":15,"author":{"gitId":"Md-Fazil"},"content":""},{"lineNumber":16,"author":{"gitId":"Md-Fazil"},"content":"    /**"},{"lineNumber":17,"author":{"gitId":"Md-Fazil"},"content":"     * Executes the bye command by getting ui to print the goodbye message."},{"lineNumber":18,"author":{"gitId":"Md-Fazil"},"content":"     *"},{"lineNumber":19,"author":{"gitId":"Md-Fazil"},"content":"     * @param taskManager TaskManager object that maintains the list of tasks."},{"lineNumber":20,"author":{"gitId":"Md-Fazil"},"content":"     * @param ui Ui object that handles user interaction."},{"lineNumber":21,"author":{"gitId":"Md-Fazil"},"content":"     * @param storage Storage object that handles the updating of stored file."},{"lineNumber":22,"author":{"gitId":"Md-Fazil"},"content":"     * @return String string to output to user"},{"lineNumber":23,"author":{"gitId":"Md-Fazil"},"content":"     */"},{"lineNumber":24,"author":{"gitId":"Md-Fazil"},"content":"    public String execute(TaskManager taskManager, Ui ui, Storage storage) {"},{"lineNumber":25,"author":{"gitId":"Md-Fazil"},"content":"        return ui.showByeMessage();"},{"lineNumber":26,"author":{"gitId":"Md-Fazil"},"content":"    }"},{"lineNumber":27,"author":{"gitId":"Md-Fazil"},"content":""},{"lineNumber":28,"author":{"gitId":"Md-Fazil"},"content":"    @Override"},{"lineNumber":29,"author":{"gitId":"Md-Fazil"},"content":"    public boolean isExit() {"},{"lineNumber":30,"author":{"gitId":"Md-Fazil"},"content":"        return true;"},{"lineNumber":31,"author":{"gitId":"Md-Fazil"},"content":"    }"},{"lineNumber":32,"author":{"gitId":"Md-Fazil"},"content":""},{"lineNumber":33,"author":{"gitId":"Md-Fazil"},"content":"}"}],"authorContributionMap":{"Md-Fazil":33}},{"path":"src/main/java/duke/command/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Md-Fazil"},"content":"package duke.command;"},{"lineNumber":2,"author":{"gitId":"Md-Fazil"},"content":""},{"lineNumber":3,"author":{"gitId":"Md-Fazil"},"content":"import java.io.IOException;"},{"lineNumber":4,"author":{"gitId":"Md-Fazil"},"content":""},{"lineNumber":5,"author":{"gitId":"Md-Fazil"},"content":"import duke.DukeException;"},{"lineNumber":6,"author":{"gitId":"Md-Fazil"},"content":"import duke.Storage;"},{"lineNumber":7,"author":{"gitId":"Md-Fazil"},"content":"import duke.TaskManager;"},{"lineNumber":8,"author":{"gitId":"Md-Fazil"},"content":"import duke.Ui;"},{"lineNumber":9,"author":{"gitId":"Md-Fazil"},"content":""},{"lineNumber":10,"author":{"gitId":"Md-Fazil"},"content":""},{"lineNumber":11,"author":{"gitId":"Md-Fazil"},"content":"/**"},{"lineNumber":12,"author":{"gitId":"Md-Fazil"},"content":" * Represents a command keyed in by the user."},{"lineNumber":13,"author":{"gitId":"Md-Fazil"},"content":" */"},{"lineNumber":14,"author":{"gitId":"Md-Fazil"},"content":"public abstract class Command {"},{"lineNumber":15,"author":{"gitId":"Md-Fazil"},"content":"    protected String[] parsedCommand;"},{"lineNumber":16,"author":{"gitId":"Md-Fazil"},"content":""},{"lineNumber":17,"author":{"gitId":"Md-Fazil"},"content":"    protected Command(String[] parsedCommand) {"},{"lineNumber":18,"author":{"gitId":"Md-Fazil"},"content":"        this.parsedCommand \u003d parsedCommand;"},{"lineNumber":19,"author":{"gitId":"Md-Fazil"},"content":"    }"},{"lineNumber":20,"author":{"gitId":"Md-Fazil"},"content":""},{"lineNumber":21,"author":{"gitId":"Md-Fazil"},"content":"    /**"},{"lineNumber":22,"author":{"gitId":"Md-Fazil"},"content":"     * Executes a specific valid command specified by the user."},{"lineNumber":23,"author":{"gitId":"Md-Fazil"},"content":"     *"},{"lineNumber":24,"author":{"gitId":"Md-Fazil"},"content":"     * @param taskManager TaskManager object that maintains the list of tasks."},{"lineNumber":25,"author":{"gitId":"Md-Fazil"},"content":"     * @param ui Ui object that handles user interaction."},{"lineNumber":26,"author":{"gitId":"Md-Fazil"},"content":"     * @param storage Storage object that handles the updating of stored file."},{"lineNumber":27,"author":{"gitId":"Md-Fazil"},"content":"     * @return String string to output to user"},{"lineNumber":28,"author":{"gitId":"Md-Fazil"},"content":"     * @throws IOException If the list of tasks are not in the correct storage format."},{"lineNumber":29,"author":{"gitId":"Md-Fazil"},"content":"     * @throws DukeException If the task number specified to mark done or delete is not a valid task number."},{"lineNumber":30,"author":{"gitId":"Md-Fazil"},"content":"     */"},{"lineNumber":31,"author":{"gitId":"Md-Fazil"},"content":"    public abstract String execute(TaskManager taskManager, Ui ui, Storage storage) throws DukeException, IOException;"},{"lineNumber":32,"author":{"gitId":"Md-Fazil"},"content":""},{"lineNumber":33,"author":{"gitId":"Md-Fazil"},"content":"    public boolean isExit() {"},{"lineNumber":34,"author":{"gitId":"Md-Fazil"},"content":"        return false;"},{"lineNumber":35,"author":{"gitId":"Md-Fazil"},"content":"    }"},{"lineNumber":36,"author":{"gitId":"Md-Fazil"},"content":"}"}],"authorContributionMap":{"Md-Fazil":36}},{"path":"src/main/java/duke/command/DeleteCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Md-Fazil"},"content":"package duke.command;"},{"lineNumber":2,"author":{"gitId":"Md-Fazil"},"content":""},{"lineNumber":3,"author":{"gitId":"Md-Fazil"},"content":"import java.io.IOException;"},{"lineNumber":4,"author":{"gitId":"Md-Fazil"},"content":"import java.util.ArrayList;"},{"lineNumber":5,"author":{"gitId":"Md-Fazil"},"content":""},{"lineNumber":6,"author":{"gitId":"Md-Fazil"},"content":"import duke.DukeException;"},{"lineNumber":7,"author":{"gitId":"Md-Fazil"},"content":"import duke.Storage;"},{"lineNumber":8,"author":{"gitId":"Md-Fazil"},"content":"import duke.TaskManager;"},{"lineNumber":9,"author":{"gitId":"Md-Fazil"},"content":"import duke.Ui;"},{"lineNumber":10,"author":{"gitId":"Md-Fazil"},"content":"import duke.task.Task;"},{"lineNumber":11,"author":{"gitId":"Md-Fazil"},"content":""},{"lineNumber":12,"author":{"gitId":"Md-Fazil"},"content":"/**"},{"lineNumber":13,"author":{"gitId":"Md-Fazil"},"content":" * Represents a delete command keyed in by the user."},{"lineNumber":14,"author":{"gitId":"Md-Fazil"},"content":" */"},{"lineNumber":15,"author":{"gitId":"Md-Fazil"},"content":"public class DeleteCommand extends Command {"},{"lineNumber":16,"author":{"gitId":"Md-Fazil"},"content":""},{"lineNumber":17,"author":{"gitId":"Md-Fazil"},"content":"    public DeleteCommand(String[] parsedCommand) {"},{"lineNumber":18,"author":{"gitId":"Md-Fazil"},"content":"        super(parsedCommand);"},{"lineNumber":19,"author":{"gitId":"Md-Fazil"},"content":"    }"},{"lineNumber":20,"author":{"gitId":"Md-Fazil"},"content":""},{"lineNumber":21,"author":{"gitId":"Md-Fazil"},"content":"    /**"},{"lineNumber":22,"author":{"gitId":"Md-Fazil"},"content":"     * Executes the delete command by removing the task from the list, printing the deleted task to the user and"},{"lineNumber":23,"author":{"gitId":"Md-Fazil"},"content":"     * updating the stored file."},{"lineNumber":24,"author":{"gitId":"Md-Fazil"},"content":"     *"},{"lineNumber":25,"author":{"gitId":"Md-Fazil"},"content":"     * @param taskManager TaskManager object that maintains the list of tasks."},{"lineNumber":26,"author":{"gitId":"Md-Fazil"},"content":"     * @param ui Ui object that handles user interaction."},{"lineNumber":27,"author":{"gitId":"Md-Fazil"},"content":"     * @param storage Storage object that handles the updating of stored file."},{"lineNumber":28,"author":{"gitId":"Md-Fazil"},"content":"     * @return String string to output to user"},{"lineNumber":29,"author":{"gitId":"Md-Fazil"},"content":"     * @throws IOException If the list of tasks are not in the correct storage format."},{"lineNumber":30,"author":{"gitId":"Md-Fazil"},"content":"     * @throws DukeException If the task number specified as done is not valid."},{"lineNumber":31,"author":{"gitId":"Md-Fazil"},"content":"     */"},{"lineNumber":32,"author":{"gitId":"Md-Fazil"},"content":"    public String execute(TaskManager taskManager, Ui ui, Storage storage) throws DukeException, IOException {"},{"lineNumber":33,"author":{"gitId":"Md-Fazil"},"content":"        String[] taskNumbers \u003d super.parsedCommand[1].split(\" \");"},{"lineNumber":34,"author":{"gitId":"Md-Fazil"},"content":"        ArrayList\u003cTask\u003e deletedTasks \u003d new ArrayList\u003c\u003e();"},{"lineNumber":35,"author":{"gitId":"Md-Fazil"},"content":"        for (int i \u003d 0; i \u003c taskNumbers.length; i++) {"},{"lineNumber":36,"author":{"gitId":"Md-Fazil"},"content":"            Task task \u003d taskManager.delete(Integer.parseInt(taskNumbers[i]) - i);"},{"lineNumber":37,"author":{"gitId":"Md-Fazil"},"content":"            deletedTasks.add(task);"},{"lineNumber":38,"author":{"gitId":"Md-Fazil"},"content":"        }"},{"lineNumber":39,"author":{"gitId":"Md-Fazil"},"content":"        storage.store(taskManager.retrieveTasksforStorage());"},{"lineNumber":40,"author":{"gitId":"Md-Fazil"},"content":"        return ui.showRemovedTask(deletedTasks, taskManager.getNumOfTasks());"},{"lineNumber":41,"author":{"gitId":"Md-Fazil"},"content":"    }"},{"lineNumber":42,"author":{"gitId":"Md-Fazil"},"content":""},{"lineNumber":43,"author":{"gitId":"Md-Fazil"},"content":"}"}],"authorContributionMap":{"Md-Fazil":43}},{"path":"src/main/java/duke/command/DoneCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Md-Fazil"},"content":"package duke.command;"},{"lineNumber":2,"author":{"gitId":"Md-Fazil"},"content":""},{"lineNumber":3,"author":{"gitId":"Md-Fazil"},"content":"import java.io.IOException;"},{"lineNumber":4,"author":{"gitId":"Md-Fazil"},"content":""},{"lineNumber":5,"author":{"gitId":"Md-Fazil"},"content":"import duke.DukeException;"},{"lineNumber":6,"author":{"gitId":"Md-Fazil"},"content":"import duke.Storage;"},{"lineNumber":7,"author":{"gitId":"Md-Fazil"},"content":"import duke.TaskManager;"},{"lineNumber":8,"author":{"gitId":"Md-Fazil"},"content":"import duke.Ui;"},{"lineNumber":9,"author":{"gitId":"Md-Fazil"},"content":"import duke.task.Task;"},{"lineNumber":10,"author":{"gitId":"Md-Fazil"},"content":""},{"lineNumber":11,"author":{"gitId":"Md-Fazil"},"content":"/**"},{"lineNumber":12,"author":{"gitId":"Md-Fazil"},"content":" * Represents a done command keyed in by the user."},{"lineNumber":13,"author":{"gitId":"Md-Fazil"},"content":" */"},{"lineNumber":14,"author":{"gitId":"Md-Fazil"},"content":"public class DoneCommand extends Command {"},{"lineNumber":15,"author":{"gitId":"Md-Fazil"},"content":""},{"lineNumber":16,"author":{"gitId":"Md-Fazil"},"content":"    public DoneCommand(String[] parsedCommand) {"},{"lineNumber":17,"author":{"gitId":"Md-Fazil"},"content":"        super(parsedCommand);"},{"lineNumber":18,"author":{"gitId":"Md-Fazil"},"content":"    }"},{"lineNumber":19,"author":{"gitId":"Md-Fazil"},"content":""},{"lineNumber":20,"author":{"gitId":"Md-Fazil"},"content":"    /**"},{"lineNumber":21,"author":{"gitId":"Md-Fazil"},"content":"     * Executes the done command by marking the task as completed, printing the completed task to the user and"},{"lineNumber":22,"author":{"gitId":"Md-Fazil"},"content":"     * updating the stored file."},{"lineNumber":23,"author":{"gitId":"Md-Fazil"},"content":"     *"},{"lineNumber":24,"author":{"gitId":"Md-Fazil"},"content":"     * @param taskManager TaskManager object that maintains the list of tasks."},{"lineNumber":25,"author":{"gitId":"Md-Fazil"},"content":"     * @param ui Ui object that handles user interaction."},{"lineNumber":26,"author":{"gitId":"Md-Fazil"},"content":"     * @param storage Storage object that handles the updating of stored file."},{"lineNumber":27,"author":{"gitId":"Md-Fazil"},"content":"     * @return String string to output to user."},{"lineNumber":28,"author":{"gitId":"Md-Fazil"},"content":"     * @throws IOException If the list of tasks are not in the correct storage format."},{"lineNumber":29,"author":{"gitId":"Md-Fazil"},"content":"     * @throws DukeException If the task number specified as done is not valid."},{"lineNumber":30,"author":{"gitId":"Md-Fazil"},"content":"     */"},{"lineNumber":31,"author":{"gitId":"Md-Fazil"},"content":"    public String execute(TaskManager taskManager, Ui ui, Storage storage) throws DukeException, IOException {"},{"lineNumber":32,"author":{"gitId":"Md-Fazil"},"content":"        String taskNumber \u003d super.parsedCommand[1];"},{"lineNumber":33,"author":{"gitId":"Md-Fazil"},"content":"        Task doneTask \u003d taskManager.done(Integer.parseInt(taskNumber));"},{"lineNumber":34,"author":{"gitId":"Md-Fazil"},"content":"        storage.store(taskManager.retrieveTasksforStorage());"},{"lineNumber":35,"author":{"gitId":"Md-Fazil"},"content":"        return ui.showDoneTask(doneTask);"},{"lineNumber":36,"author":{"gitId":"Md-Fazil"},"content":""},{"lineNumber":37,"author":{"gitId":"Md-Fazil"},"content":"    }"},{"lineNumber":38,"author":{"gitId":"Md-Fazil"},"content":"}"}],"authorContributionMap":{"Md-Fazil":38}},{"path":"src/main/java/duke/command/DueCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Md-Fazil"},"content":"package duke.command;"},{"lineNumber":2,"author":{"gitId":"Md-Fazil"},"content":""},{"lineNumber":3,"author":{"gitId":"Md-Fazil"},"content":"import java.util.ArrayList;"},{"lineNumber":4,"author":{"gitId":"Md-Fazil"},"content":""},{"lineNumber":5,"author":{"gitId":"Md-Fazil"},"content":"import duke.Storage;"},{"lineNumber":6,"author":{"gitId":"Md-Fazil"},"content":"import duke.TaskManager;"},{"lineNumber":7,"author":{"gitId":"Md-Fazil"},"content":"import duke.Ui;"},{"lineNumber":8,"author":{"gitId":"Md-Fazil"},"content":"import duke.task.Task;"},{"lineNumber":9,"author":{"gitId":"Md-Fazil"},"content":""},{"lineNumber":10,"author":{"gitId":"Md-Fazil"},"content":""},{"lineNumber":11,"author":{"gitId":"Md-Fazil"},"content":"/**"},{"lineNumber":12,"author":{"gitId":"Md-Fazil"},"content":" * Represents a due command keyed in by the user."},{"lineNumber":13,"author":{"gitId":"Md-Fazil"},"content":" */"},{"lineNumber":14,"author":{"gitId":"Md-Fazil"},"content":"public class DueCommand extends Command {"},{"lineNumber":15,"author":{"gitId":"Md-Fazil"},"content":""},{"lineNumber":16,"author":{"gitId":"Md-Fazil"},"content":"    public DueCommand(String[] parsedCommand) {"},{"lineNumber":17,"author":{"gitId":"Md-Fazil"},"content":"        super(parsedCommand);"},{"lineNumber":18,"author":{"gitId":"Md-Fazil"},"content":"    }"},{"lineNumber":19,"author":{"gitId":"Md-Fazil"},"content":""},{"lineNumber":20,"author":{"gitId":"Md-Fazil"},"content":"    /**"},{"lineNumber":21,"author":{"gitId":"Md-Fazil"},"content":"     * Executes the due command by printing tasks that specifically end on a specified date."},{"lineNumber":22,"author":{"gitId":"Md-Fazil"},"content":"     *"},{"lineNumber":23,"author":{"gitId":"Md-Fazil"},"content":"     * @param taskManager TaskManager object that maintains the list of tasks."},{"lineNumber":24,"author":{"gitId":"Md-Fazil"},"content":"     * @param ui Ui object that handles user interaction."},{"lineNumber":25,"author":{"gitId":"Md-Fazil"},"content":"     * @param storage Storage object that handles the updating of stored file."},{"lineNumber":26,"author":{"gitId":"Md-Fazil"},"content":"     * @return String string to output to user."},{"lineNumber":27,"author":{"gitId":"Md-Fazil"},"content":"     */"},{"lineNumber":28,"author":{"gitId":"Md-Fazil"},"content":"    public String execute(TaskManager taskManager, Ui ui, Storage storage) {"},{"lineNumber":29,"author":{"gitId":"Md-Fazil"},"content":"        String date \u003d parsedCommand[1];"},{"lineNumber":30,"author":{"gitId":"Md-Fazil"},"content":"        ArrayList\u003cTask\u003e list \u003d taskManager.getTasksOn(date);"},{"lineNumber":31,"author":{"gitId":"Md-Fazil"},"content":"        return ui.showDueTasks(list, date);"},{"lineNumber":32,"author":{"gitId":"Md-Fazil"},"content":"    }"},{"lineNumber":33,"author":{"gitId":"Md-Fazil"},"content":"}"}],"authorContributionMap":{"Md-Fazil":33}},{"path":"src/main/java/duke/command/FindCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Md-Fazil"},"content":"package duke.command;"},{"lineNumber":2,"author":{"gitId":"Md-Fazil"},"content":""},{"lineNumber":3,"author":{"gitId":"Md-Fazil"},"content":"import java.util.ArrayList;"},{"lineNumber":4,"author":{"gitId":"Md-Fazil"},"content":""},{"lineNumber":5,"author":{"gitId":"Md-Fazil"},"content":"import duke.Storage;"},{"lineNumber":6,"author":{"gitId":"Md-Fazil"},"content":"import duke.TaskManager;"},{"lineNumber":7,"author":{"gitId":"Md-Fazil"},"content":"import duke.Ui;"},{"lineNumber":8,"author":{"gitId":"Md-Fazil"},"content":"import duke.task.Task;"},{"lineNumber":9,"author":{"gitId":"Md-Fazil"},"content":""},{"lineNumber":10,"author":{"gitId":"Md-Fazil"},"content":""},{"lineNumber":11,"author":{"gitId":"Md-Fazil"},"content":"public class FindCommand extends Command {"},{"lineNumber":12,"author":{"gitId":"Md-Fazil"},"content":""},{"lineNumber":13,"author":{"gitId":"Md-Fazil"},"content":"    public FindCommand(String[] parsedCommand) {"},{"lineNumber":14,"author":{"gitId":"Md-Fazil"},"content":"        super(parsedCommand);"},{"lineNumber":15,"author":{"gitId":"Md-Fazil"},"content":"    }"},{"lineNumber":16,"author":{"gitId":"Md-Fazil"},"content":""},{"lineNumber":17,"author":{"gitId":"Md-Fazil"},"content":"    public String execute(TaskManager taskManager, Ui ui, Storage storage) {"},{"lineNumber":18,"author":{"gitId":"Md-Fazil"},"content":"        String keyword \u003d parsedCommand[1];"},{"lineNumber":19,"author":{"gitId":"Md-Fazil"},"content":"        ArrayList\u003cTask\u003e list \u003d taskManager.retrieveMatchingTasks(keyword);"},{"lineNumber":20,"author":{"gitId":"Md-Fazil"},"content":"        return ui.showMatchingTasks(list);"},{"lineNumber":21,"author":{"gitId":"Md-Fazil"},"content":"    }"},{"lineNumber":22,"author":{"gitId":"Md-Fazil"},"content":"}"}],"authorContributionMap":{"Md-Fazil":22}},{"path":"src/main/java/duke/command/ListCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Md-Fazil"},"content":"package duke.command;"},{"lineNumber":2,"author":{"gitId":"Md-Fazil"},"content":""},{"lineNumber":3,"author":{"gitId":"Md-Fazil"},"content":"import duke.Storage;"},{"lineNumber":4,"author":{"gitId":"Md-Fazil"},"content":"import duke.TaskManager;"},{"lineNumber":5,"author":{"gitId":"Md-Fazil"},"content":"import duke.Ui;"},{"lineNumber":6,"author":{"gitId":"Md-Fazil"},"content":""},{"lineNumber":7,"author":{"gitId":"Md-Fazil"},"content":"/**"},{"lineNumber":8,"author":{"gitId":"Md-Fazil"},"content":" * Represents a list command keyed in by the user."},{"lineNumber":9,"author":{"gitId":"Md-Fazil"},"content":" */"},{"lineNumber":10,"author":{"gitId":"Md-Fazil"},"content":"public class ListCommand extends Command {"},{"lineNumber":11,"author":{"gitId":"Md-Fazil"},"content":""},{"lineNumber":12,"author":{"gitId":"Md-Fazil"},"content":"    public ListCommand(String[] parsedCommand) {"},{"lineNumber":13,"author":{"gitId":"Md-Fazil"},"content":"        super(parsedCommand);"},{"lineNumber":14,"author":{"gitId":"Md-Fazil"},"content":"    }"},{"lineNumber":15,"author":{"gitId":"Md-Fazil"},"content":""},{"lineNumber":16,"author":{"gitId":"Md-Fazil"},"content":"    /**"},{"lineNumber":17,"author":{"gitId":"Md-Fazil"},"content":"     * Executes the list command by printing all the tasks to the user."},{"lineNumber":18,"author":{"gitId":"Md-Fazil"},"content":"     *"},{"lineNumber":19,"author":{"gitId":"Md-Fazil"},"content":"     * @param taskManager TaskManager object that maintains the list of tasks."},{"lineNumber":20,"author":{"gitId":"Md-Fazil"},"content":"     * @param ui Ui object that handles user interaction."},{"lineNumber":21,"author":{"gitId":"Md-Fazil"},"content":"     * @param storage Storage object that handles the updating of stored file."},{"lineNumber":22,"author":{"gitId":"Md-Fazil"},"content":"     * @return String string to output to user."},{"lineNumber":23,"author":{"gitId":"Md-Fazil"},"content":"     */"},{"lineNumber":24,"author":{"gitId":"Md-Fazil"},"content":"    public String execute(TaskManager taskManager, Ui ui, Storage storage) {"},{"lineNumber":25,"author":{"gitId":"Md-Fazil"},"content":"        return ui.showAllTasks(taskManager.getList());"},{"lineNumber":26,"author":{"gitId":"Md-Fazil"},"content":"    }"},{"lineNumber":27,"author":{"gitId":"Md-Fazil"},"content":"}"}],"authorContributionMap":{"Md-Fazil":27}},{"path":"src/main/java/duke/control/DialogBox.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Md-Fazil"},"content":"package duke.control;"},{"lineNumber":2,"author":{"gitId":"Md-Fazil"},"content":""},{"lineNumber":3,"author":{"gitId":"Md-Fazil"},"content":"import java.io.IOException;"},{"lineNumber":4,"author":{"gitId":"Md-Fazil"},"content":"import java.util.Collections;"},{"lineNumber":5,"author":{"gitId":"Md-Fazil"},"content":""},{"lineNumber":6,"author":{"gitId":"Md-Fazil"},"content":"import javafx.collections.FXCollections;"},{"lineNumber":7,"author":{"gitId":"Md-Fazil"},"content":"import javafx.collections.ObservableList;"},{"lineNumber":8,"author":{"gitId":"Md-Fazil"},"content":"import javafx.fxml.FXML;"},{"lineNumber":9,"author":{"gitId":"Md-Fazil"},"content":"import javafx.fxml.FXMLLoader;"},{"lineNumber":10,"author":{"gitId":"Md-Fazil"},"content":"import javafx.geometry.Pos;"},{"lineNumber":11,"author":{"gitId":"Md-Fazil"},"content":"import javafx.scene.Node;"},{"lineNumber":12,"author":{"gitId":"Md-Fazil"},"content":"import javafx.scene.control.Label;"},{"lineNumber":13,"author":{"gitId":"Md-Fazil"},"content":"import javafx.scene.image.Image;"},{"lineNumber":14,"author":{"gitId":"Md-Fazil"},"content":"import javafx.scene.image.ImageView;"},{"lineNumber":15,"author":{"gitId":"Md-Fazil"},"content":"import javafx.scene.layout.HBox;"},{"lineNumber":16,"author":{"gitId":"Md-Fazil"},"content":""},{"lineNumber":17,"author":{"gitId":"Md-Fazil"},"content":"/**"},{"lineNumber":18,"author":{"gitId":"Md-Fazil"},"content":" * An example of a custom control using FXML."},{"lineNumber":19,"author":{"gitId":"Md-Fazil"},"content":" * This control represents a dialog box consisting of an ImageView to represent the speaker\u0027s face and a label"},{"lineNumber":20,"author":{"gitId":"Md-Fazil"},"content":" * containing text from the speaker."},{"lineNumber":21,"author":{"gitId":"Md-Fazil"},"content":" */"},{"lineNumber":22,"author":{"gitId":"Md-Fazil"},"content":"public class DialogBox extends HBox {"},{"lineNumber":23,"author":{"gitId":"Md-Fazil"},"content":"    @FXML"},{"lineNumber":24,"author":{"gitId":"Md-Fazil"},"content":"    private Label dialog;"},{"lineNumber":25,"author":{"gitId":"Md-Fazil"},"content":"    @FXML"},{"lineNumber":26,"author":{"gitId":"Md-Fazil"},"content":"    private ImageView displayPicture;"},{"lineNumber":27,"author":{"gitId":"Md-Fazil"},"content":""},{"lineNumber":28,"author":{"gitId":"Md-Fazil"},"content":"    private DialogBox(String text, Image img) {"},{"lineNumber":29,"author":{"gitId":"Md-Fazil"},"content":"        try {"},{"lineNumber":30,"author":{"gitId":"Md-Fazil"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(\"/view/DialogBox.fxml\"));"},{"lineNumber":31,"author":{"gitId":"Md-Fazil"},"content":"            fxmlLoader.setController(this);"},{"lineNumber":32,"author":{"gitId":"Md-Fazil"},"content":"            fxmlLoader.setRoot(this);"},{"lineNumber":33,"author":{"gitId":"Md-Fazil"},"content":"            fxmlLoader.load();"},{"lineNumber":34,"author":{"gitId":"Md-Fazil"},"content":"        } catch (IOException e) {"},{"lineNumber":35,"author":{"gitId":"Md-Fazil"},"content":"            e.printStackTrace();"},{"lineNumber":36,"author":{"gitId":"Md-Fazil"},"content":"        }"},{"lineNumber":37,"author":{"gitId":"Md-Fazil"},"content":""},{"lineNumber":38,"author":{"gitId":"Md-Fazil"},"content":"        dialog.setText(text);"},{"lineNumber":39,"author":{"gitId":"Md-Fazil"},"content":"        displayPicture.setImage(img);"},{"lineNumber":40,"author":{"gitId":"Md-Fazil"},"content":"    }"},{"lineNumber":41,"author":{"gitId":"Md-Fazil"},"content":""},{"lineNumber":42,"author":{"gitId":"Md-Fazil"},"content":"    /**"},{"lineNumber":43,"author":{"gitId":"Md-Fazil"},"content":"     * Flips the dialog box such that the ImageView is on the left and text on the right."},{"lineNumber":44,"author":{"gitId":"Md-Fazil"},"content":"     */"},{"lineNumber":45,"author":{"gitId":"Md-Fazil"},"content":"    private void flip() {"},{"lineNumber":46,"author":{"gitId":"Md-Fazil"},"content":"        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());"},{"lineNumber":47,"author":{"gitId":"Md-Fazil"},"content":"        Collections.reverse(tmp);"},{"lineNumber":48,"author":{"gitId":"Md-Fazil"},"content":"        getChildren().setAll(tmp);"},{"lineNumber":49,"author":{"gitId":"Md-Fazil"},"content":"        setAlignment(Pos.TOP_LEFT);"},{"lineNumber":50,"author":{"gitId":"Md-Fazil"},"content":"    }"},{"lineNumber":51,"author":{"gitId":"Md-Fazil"},"content":""},{"lineNumber":52,"author":{"gitId":"Md-Fazil"},"content":"    public static DialogBox getUserDialog(String text, Image img) {"},{"lineNumber":53,"author":{"gitId":"Md-Fazil"},"content":"        return new DialogBox(text, img);"},{"lineNumber":54,"author":{"gitId":"Md-Fazil"},"content":"    }"},{"lineNumber":55,"author":{"gitId":"Md-Fazil"},"content":""},{"lineNumber":56,"author":{"gitId":"Md-Fazil"},"content":"    public static DialogBox getDukeDialog(String text, Image img) {"},{"lineNumber":57,"author":{"gitId":"Md-Fazil"},"content":"        var db \u003d new DialogBox(text, img);"},{"lineNumber":58,"author":{"gitId":"Md-Fazil"},"content":"        db.flip();"},{"lineNumber":59,"author":{"gitId":"Md-Fazil"},"content":"        return db;"},{"lineNumber":60,"author":{"gitId":"Md-Fazil"},"content":"    }"},{"lineNumber":61,"author":{"gitId":"Md-Fazil"},"content":"}"}],"authorContributionMap":{"Md-Fazil":61}},{"path":"src/main/java/duke/control/Main.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Md-Fazil"},"content":"package duke.control;"},{"lineNumber":2,"author":{"gitId":"Md-Fazil"},"content":""},{"lineNumber":3,"author":{"gitId":"Md-Fazil"},"content":"import java.io.IOException;"},{"lineNumber":4,"author":{"gitId":"Md-Fazil"},"content":""},{"lineNumber":5,"author":{"gitId":"Md-Fazil"},"content":"import duke.Duke;"},{"lineNumber":6,"author":{"gitId":"Md-Fazil"},"content":"import javafx.application.Application;"},{"lineNumber":7,"author":{"gitId":"Md-Fazil"},"content":"import javafx.fxml.FXMLLoader;"},{"lineNumber":8,"author":{"gitId":"Md-Fazil"},"content":"import javafx.scene.Scene;"},{"lineNumber":9,"author":{"gitId":"Md-Fazil"},"content":"import javafx.scene.layout.AnchorPane;"},{"lineNumber":10,"author":{"gitId":"Md-Fazil"},"content":"import javafx.stage.Stage;"},{"lineNumber":11,"author":{"gitId":"Md-Fazil"},"content":""},{"lineNumber":12,"author":{"gitId":"Md-Fazil"},"content":""},{"lineNumber":13,"author":{"gitId":"Md-Fazil"},"content":"/**"},{"lineNumber":14,"author":{"gitId":"Md-Fazil"},"content":" * A GUI for Duke using FXML."},{"lineNumber":15,"author":{"gitId":"Md-Fazil"},"content":" */"},{"lineNumber":16,"author":{"gitId":"Md-Fazil"},"content":"public class Main extends Application {"},{"lineNumber":17,"author":{"gitId":"Md-Fazil"},"content":""},{"lineNumber":18,"author":{"gitId":"Md-Fazil"},"content":"    private Duke duke \u003d new Duke();"},{"lineNumber":19,"author":{"gitId":"Md-Fazil"},"content":""},{"lineNumber":20,"author":{"gitId":"Md-Fazil"},"content":"    @Override"},{"lineNumber":21,"author":{"gitId":"Md-Fazil"},"content":"    public void start(Stage stage) {"},{"lineNumber":22,"author":{"gitId":"Md-Fazil"},"content":"        try {"},{"lineNumber":23,"author":{"gitId":"Md-Fazil"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(Main.class.getResource(\"/view/MainWindow.fxml\"));"},{"lineNumber":24,"author":{"gitId":"Md-Fazil"},"content":"            AnchorPane ap \u003d fxmlLoader.load();"},{"lineNumber":25,"author":{"gitId":"Md-Fazil"},"content":"            Scene scene \u003d new Scene(ap);"},{"lineNumber":26,"author":{"gitId":"Md-Fazil"},"content":"            stage.setScene(scene);"},{"lineNumber":27,"author":{"gitId":"Md-Fazil"},"content":"            fxmlLoader.\u003cMainWindow\u003egetController().setDuke(duke);"},{"lineNumber":28,"author":{"gitId":"Md-Fazil"},"content":"            stage.show();"},{"lineNumber":29,"author":{"gitId":"Md-Fazil"},"content":"        } catch (IOException e) {"},{"lineNumber":30,"author":{"gitId":"Md-Fazil"},"content":"            e.printStackTrace();"},{"lineNumber":31,"author":{"gitId":"Md-Fazil"},"content":"        }"},{"lineNumber":32,"author":{"gitId":"Md-Fazil"},"content":"    }"},{"lineNumber":33,"author":{"gitId":"Md-Fazil"},"content":""},{"lineNumber":34,"author":{"gitId":"Md-Fazil"},"content":"}"}],"authorContributionMap":{"Md-Fazil":34}},{"path":"src/main/java/duke/control/MainWindow.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Md-Fazil"},"content":"package duke.control;"},{"lineNumber":2,"author":{"gitId":"Md-Fazil"},"content":""},{"lineNumber":3,"author":{"gitId":"Md-Fazil"},"content":"import duke.Duke;"},{"lineNumber":4,"author":{"gitId":"Md-Fazil"},"content":"import javafx.fxml.FXML;"},{"lineNumber":5,"author":{"gitId":"Md-Fazil"},"content":"import javafx.scene.control.Button;"},{"lineNumber":6,"author":{"gitId":"Md-Fazil"},"content":"import javafx.scene.control.ScrollPane;"},{"lineNumber":7,"author":{"gitId":"Md-Fazil"},"content":"import javafx.scene.control.TextField;"},{"lineNumber":8,"author":{"gitId":"Md-Fazil"},"content":"import javafx.scene.image.Image;"},{"lineNumber":9,"author":{"gitId":"Md-Fazil"},"content":"import javafx.scene.layout.AnchorPane;"},{"lineNumber":10,"author":{"gitId":"Md-Fazil"},"content":"import javafx.scene.layout.VBox;"},{"lineNumber":11,"author":{"gitId":"Md-Fazil"},"content":""},{"lineNumber":12,"author":{"gitId":"Md-Fazil"},"content":"/**"},{"lineNumber":13,"author":{"gitId":"Md-Fazil"},"content":" * Controller for MainWindow. Provides the layout for the other controls."},{"lineNumber":14,"author":{"gitId":"Md-Fazil"},"content":" */"},{"lineNumber":15,"author":{"gitId":"Md-Fazil"},"content":"public class MainWindow extends AnchorPane {"},{"lineNumber":16,"author":{"gitId":"Md-Fazil"},"content":""},{"lineNumber":17,"author":{"gitId":"Md-Fazil"},"content":"    @FXML"},{"lineNumber":18,"author":{"gitId":"Md-Fazil"},"content":"    private ScrollPane scrollPane;"},{"lineNumber":19,"author":{"gitId":"Md-Fazil"},"content":"    @FXML"},{"lineNumber":20,"author":{"gitId":"Md-Fazil"},"content":"    private VBox dialogContainer;"},{"lineNumber":21,"author":{"gitId":"Md-Fazil"},"content":"    @FXML"},{"lineNumber":22,"author":{"gitId":"Md-Fazil"},"content":"    private TextField userInput;"},{"lineNumber":23,"author":{"gitId":"Md-Fazil"},"content":"    @FXML"},{"lineNumber":24,"author":{"gitId":"Md-Fazil"},"content":"    private Button sendButton;"},{"lineNumber":25,"author":{"gitId":"Md-Fazil"},"content":""},{"lineNumber":26,"author":{"gitId":"Md-Fazil"},"content":"    private Duke duke;"},{"lineNumber":27,"author":{"gitId":"Md-Fazil"},"content":""},{"lineNumber":28,"author":{"gitId":"Md-Fazil"},"content":"    private Image dukeImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/image1.jpg\"));"},{"lineNumber":29,"author":{"gitId":"Md-Fazil"},"content":""},{"lineNumber":30,"author":{"gitId":"Md-Fazil"},"content":"    private Image userImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/image2.jpg\"));"},{"lineNumber":31,"author":{"gitId":"Md-Fazil"},"content":""},{"lineNumber":32,"author":{"gitId":"Md-Fazil"},"content":"    private static final String LOGO \u003d \" ____        _        \\n\""},{"lineNumber":33,"author":{"gitId":"Md-Fazil"},"content":"            + \"|  _ \\\\ _   _| | _____ \\n\""},{"lineNumber":34,"author":{"gitId":"Md-Fazil"},"content":"            + \"| | | | | | | |/ / _ \\\\\\n\""},{"lineNumber":35,"author":{"gitId":"Md-Fazil"},"content":"            + \"| |_| | |_| |   \u003c  __/\\n\""},{"lineNumber":36,"author":{"gitId":"Md-Fazil"},"content":"            + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\";"},{"lineNumber":37,"author":{"gitId":"Md-Fazil"},"content":""},{"lineNumber":38,"author":{"gitId":"Md-Fazil"},"content":"    private static final String WELCOME_MESSAGE \u003d \"Hello from\\n\" + LOGO + \"\\n\" + \"What can I do for you?\";"},{"lineNumber":39,"author":{"gitId":"Md-Fazil"},"content":""},{"lineNumber":40,"author":{"gitId":"Md-Fazil"},"content":"    @FXML"},{"lineNumber":41,"author":{"gitId":"Md-Fazil"},"content":"    public void initialize() {"},{"lineNumber":42,"author":{"gitId":"Md-Fazil"},"content":"        scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());"},{"lineNumber":43,"author":{"gitId":"Md-Fazil"},"content":"        dialogContainer.getChildren().addAll(DialogBox.getDukeDialog(WELCOME_MESSAGE, dukeImage));"},{"lineNumber":44,"author":{"gitId":"Md-Fazil"},"content":"    }"},{"lineNumber":45,"author":{"gitId":"Md-Fazil"},"content":""},{"lineNumber":46,"author":{"gitId":"Md-Fazil"},"content":"    public void setDuke(Duke d) {"},{"lineNumber":47,"author":{"gitId":"Md-Fazil"},"content":"        duke \u003d d;"},{"lineNumber":48,"author":{"gitId":"Md-Fazil"},"content":"    }"},{"lineNumber":49,"author":{"gitId":"Md-Fazil"},"content":""},{"lineNumber":50,"author":{"gitId":"Md-Fazil"},"content":"    /**"},{"lineNumber":51,"author":{"gitId":"Md-Fazil"},"content":"     * Creates two dialog boxes, one echoing user input and the other containing Duke\u0027s reply and then appends them to"},{"lineNumber":52,"author":{"gitId":"Md-Fazil"},"content":"     * the dialog container. Clears the user input after processing."},{"lineNumber":53,"author":{"gitId":"Md-Fazil"},"content":"     */"},{"lineNumber":54,"author":{"gitId":"Md-Fazil"},"content":"    @FXML"},{"lineNumber":55,"author":{"gitId":"Md-Fazil"},"content":"    private void handleUserInput() {"},{"lineNumber":56,"author":{"gitId":"Md-Fazil"},"content":"        String input \u003d userInput.getText();"},{"lineNumber":57,"author":{"gitId":"Md-Fazil"},"content":"        String response \u003d duke.getResponse(input);"},{"lineNumber":58,"author":{"gitId":"Md-Fazil"},"content":"        dialogContainer.getChildren().addAll("},{"lineNumber":59,"author":{"gitId":"Md-Fazil"},"content":"                DialogBox.getUserDialog(input, userImage),"},{"lineNumber":60,"author":{"gitId":"Md-Fazil"},"content":"                DialogBox.getDukeDialog(response, dukeImage)"},{"lineNumber":61,"author":{"gitId":"Md-Fazil"},"content":"        );"},{"lineNumber":62,"author":{"gitId":"Md-Fazil"},"content":"        userInput.clear();"},{"lineNumber":63,"author":{"gitId":"Md-Fazil"},"content":"    }"},{"lineNumber":64,"author":{"gitId":"Md-Fazil"},"content":"}"}],"authorContributionMap":{"Md-Fazil":64}},{"path":"src/main/java/duke/task/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Md-Fazil"},"content":"package duke.task;"},{"lineNumber":2,"author":{"gitId":"Md-Fazil"},"content":""},{"lineNumber":3,"author":{"gitId":"Md-Fazil"},"content":"import java.time.LocalDate;"},{"lineNumber":4,"author":{"gitId":"Md-Fazil"},"content":"import java.time.LocalTime;"},{"lineNumber":5,"author":{"gitId":"Md-Fazil"},"content":"import java.time.format.DateTimeFormatter;"},{"lineNumber":6,"author":{"gitId":"Md-Fazil"},"content":""},{"lineNumber":7,"author":{"gitId":"Md-Fazil"},"content":"/**"},{"lineNumber":8,"author":{"gitId":"Md-Fazil"},"content":" * Represents a task that has a deadline."},{"lineNumber":9,"author":{"gitId":"Md-Fazil"},"content":" */"},{"lineNumber":10,"author":{"gitId":"Md-Fazil"},"content":"public class Deadline extends Task {"},{"lineNumber":11,"author":{"gitId":"Md-Fazil"},"content":""},{"lineNumber":12,"author":{"gitId":"Md-Fazil"},"content":"    protected LocalDate date;"},{"lineNumber":13,"author":{"gitId":"Md-Fazil"},"content":"    protected LocalTime time;"},{"lineNumber":14,"author":{"gitId":"Md-Fazil"},"content":""},{"lineNumber":15,"author":{"gitId":"Md-Fazil"},"content":"    public Deadline(String description, boolean isCompleted, String deadline) {"},{"lineNumber":16,"author":{"gitId":"Md-Fazil"},"content":"        super(description, isCompleted);"},{"lineNumber":17,"author":{"gitId":"Md-Fazil"},"content":"        String[] dateAndTime \u003d deadline.split(\" \");"},{"lineNumber":18,"author":{"gitId":"Md-Fazil"},"content":"        String date \u003d dateAndTime[0];"},{"lineNumber":19,"author":{"gitId":"Md-Fazil"},"content":"        this.date \u003d LocalDate.parse(date);"},{"lineNumber":20,"author":{"gitId":"Md-Fazil"},"content":"        if (dateAndTime.length \u003d\u003d 2) {"},{"lineNumber":21,"author":{"gitId":"Md-Fazil"},"content":"            String time \u003d dateAndTime[1];"},{"lineNumber":22,"author":{"gitId":"Md-Fazil"},"content":"            this.time \u003d LocalTime.parse(time);"},{"lineNumber":23,"author":{"gitId":"Md-Fazil"},"content":"        } else {"},{"lineNumber":24,"author":{"gitId":"Md-Fazil"},"content":"            this.time \u003d null;"},{"lineNumber":25,"author":{"gitId":"Md-Fazil"},"content":"        }"},{"lineNumber":26,"author":{"gitId":"Md-Fazil"},"content":"    }"},{"lineNumber":27,"author":{"gitId":"Md-Fazil"},"content":""},{"lineNumber":28,"author":{"gitId":"Md-Fazil"},"content":"    @Override"},{"lineNumber":29,"author":{"gitId":"Md-Fazil"},"content":"    public LocalDate getTaskDate() {"},{"lineNumber":30,"author":{"gitId":"Md-Fazil"},"content":"        return this.date;"},{"lineNumber":31,"author":{"gitId":"Md-Fazil"},"content":"    }"},{"lineNumber":32,"author":{"gitId":"Md-Fazil"},"content":""},{"lineNumber":33,"author":{"gitId":"Md-Fazil"},"content":"    /**"},{"lineNumber":34,"author":{"gitId":"Md-Fazil"},"content":"     * Returns formatted string of the deadline task details to store in harddisk file."},{"lineNumber":35,"author":{"gitId":"Md-Fazil"},"content":"     * @return Formatted string."},{"lineNumber":36,"author":{"gitId":"Md-Fazil"},"content":"     */"},{"lineNumber":37,"author":{"gitId":"Md-Fazil"},"content":"    @Override"},{"lineNumber":38,"author":{"gitId":"Md-Fazil"},"content":"    public String getFormattedData() {"},{"lineNumber":39,"author":{"gitId":"Md-Fazil"},"content":"        String currentTime \u003d time \u003d\u003d null ? \"\" : \" \" + time;"},{"lineNumber":40,"author":{"gitId":"Md-Fazil"},"content":"        return \"D | \" + super.getFormattedData() + \" | \" + date + currentTime;"},{"lineNumber":41,"author":{"gitId":"Md-Fazil"},"content":"    }"},{"lineNumber":42,"author":{"gitId":"Md-Fazil"},"content":""},{"lineNumber":43,"author":{"gitId":"Md-Fazil"},"content":"    /**"},{"lineNumber":44,"author":{"gitId":"Md-Fazil"},"content":"     * Returns description of the deadline task, status of the task as well as its due date and time."},{"lineNumber":45,"author":{"gitId":"Md-Fazil"},"content":"     * @return String."},{"lineNumber":46,"author":{"gitId":"Md-Fazil"},"content":"     */"},{"lineNumber":47,"author":{"gitId":"Md-Fazil"},"content":"    @Override"},{"lineNumber":48,"author":{"gitId":"Md-Fazil"},"content":"    public String toString() {"},{"lineNumber":49,"author":{"gitId":"Md-Fazil"},"content":"        String exactTime \u003d time \u003d\u003d null ? \"\" : \" \" + time.format(DateTimeFormatter.ofPattern(\"hh:mma\"));"},{"lineNumber":50,"author":{"gitId":"Md-Fazil"},"content":"        return \"[D]\" + super.toString() + \" (by: \" + date.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\"))"},{"lineNumber":51,"author":{"gitId":"Md-Fazil"},"content":"                + exactTime + \")\";"},{"lineNumber":52,"author":{"gitId":"Md-Fazil"},"content":"    }"},{"lineNumber":53,"author":{"gitId":"Md-Fazil"},"content":"}"}],"authorContributionMap":{"Md-Fazil":53}},{"path":"src/main/java/duke/task/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Md-Fazil"},"content":"package duke.task;"},{"lineNumber":2,"author":{"gitId":"Md-Fazil"},"content":"import java.time.LocalDate;"},{"lineNumber":3,"author":{"gitId":"Md-Fazil"},"content":"import java.time.format.DateTimeFormatter;"},{"lineNumber":4,"author":{"gitId":"Md-Fazil"},"content":""},{"lineNumber":5,"author":{"gitId":"Md-Fazil"},"content":"/**"},{"lineNumber":6,"author":{"gitId":"Md-Fazil"},"content":" * Represents a task that happens on a specific date and time."},{"lineNumber":7,"author":{"gitId":"Md-Fazil"},"content":" */"},{"lineNumber":8,"author":{"gitId":"Md-Fazil"},"content":"public class Event extends Task {"},{"lineNumber":9,"author":{"gitId":"Md-Fazil"},"content":""},{"lineNumber":10,"author":{"gitId":"Md-Fazil"},"content":"    protected LocalDate date;"},{"lineNumber":11,"author":{"gitId":"Md-Fazil"},"content":"    protected String duration;"},{"lineNumber":12,"author":{"gitId":"Md-Fazil"},"content":""},{"lineNumber":13,"author":{"gitId":"Md-Fazil"},"content":"    public Event(String description, boolean isCompleted, String time) {"},{"lineNumber":14,"author":{"gitId":"Md-Fazil"},"content":"        super(description, isCompleted);"},{"lineNumber":15,"author":{"gitId":"Md-Fazil"},"content":"        String[] dateDuration \u003d time.split(\" \");"},{"lineNumber":16,"author":{"gitId":"Md-Fazil"},"content":"        String eventDate \u003d dateDuration[0];"},{"lineNumber":17,"author":{"gitId":"Md-Fazil"},"content":"        this.date \u003d LocalDate.parse(eventDate);"},{"lineNumber":18,"author":{"gitId":"Md-Fazil"},"content":"        this.duration \u003d dateDuration[1];"},{"lineNumber":19,"author":{"gitId":"Md-Fazil"},"content":"    }"},{"lineNumber":20,"author":{"gitId":"Md-Fazil"},"content":""},{"lineNumber":21,"author":{"gitId":"Md-Fazil"},"content":"    public LocalDate getTaskDate() {"},{"lineNumber":22,"author":{"gitId":"Md-Fazil"},"content":"        return this.date;"},{"lineNumber":23,"author":{"gitId":"Md-Fazil"},"content":"    }"},{"lineNumber":24,"author":{"gitId":"Md-Fazil"},"content":""},{"lineNumber":25,"author":{"gitId":"Md-Fazil"},"content":"    /**"},{"lineNumber":26,"author":{"gitId":"Md-Fazil"},"content":"     * Returns formatted string of the event task details to store in harddisk file."},{"lineNumber":27,"author":{"gitId":"Md-Fazil"},"content":"     * @return Formatted string."},{"lineNumber":28,"author":{"gitId":"Md-Fazil"},"content":"     */"},{"lineNumber":29,"author":{"gitId":"Md-Fazil"},"content":"    @Override"},{"lineNumber":30,"author":{"gitId":"Md-Fazil"},"content":"    public String getFormattedData() {"},{"lineNumber":31,"author":{"gitId":"Md-Fazil"},"content":"        return \"E | \" + super.getFormattedData() + \" | \" + date + \" \" + duration;"},{"lineNumber":32,"author":{"gitId":"Md-Fazil"},"content":"    }"},{"lineNumber":33,"author":{"gitId":"Md-Fazil"},"content":""},{"lineNumber":34,"author":{"gitId":"Md-Fazil"},"content":"    /**"},{"lineNumber":35,"author":{"gitId":"Md-Fazil"},"content":"     * Returns description of the event, status of the event as well as its date and time."},{"lineNumber":36,"author":{"gitId":"Md-Fazil"},"content":"     * @return String."},{"lineNumber":37,"author":{"gitId":"Md-Fazil"},"content":"     */"},{"lineNumber":38,"author":{"gitId":"Md-Fazil"},"content":"    @Override"},{"lineNumber":39,"author":{"gitId":"Md-Fazil"},"content":"    public String toString() {"},{"lineNumber":40,"author":{"gitId":"Md-Fazil"},"content":"        return \"[E]\" + super.toString() + \" (at: \" + date.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\"))"},{"lineNumber":41,"author":{"gitId":"Md-Fazil"},"content":"                + \" \" + duration + \")\";"},{"lineNumber":42,"author":{"gitId":"Md-Fazil"},"content":"    }"},{"lineNumber":43,"author":{"gitId":"Md-Fazil"},"content":"}"}],"authorContributionMap":{"Md-Fazil":43}},{"path":"src/main/java/duke/task/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Md-Fazil"},"content":"package duke.task;"},{"lineNumber":2,"author":{"gitId":"Md-Fazil"},"content":""},{"lineNumber":3,"author":{"gitId":"Md-Fazil"},"content":"import java.time.LocalDate;"},{"lineNumber":4,"author":{"gitId":"Md-Fazil"},"content":""},{"lineNumber":5,"author":{"gitId":"Md-Fazil"},"content":"/**"},{"lineNumber":6,"author":{"gitId":"Md-Fazil"},"content":" * Represents a task that has to be done."},{"lineNumber":7,"author":{"gitId":"Md-Fazil"},"content":" */"},{"lineNumber":8,"author":{"gitId":"Md-Fazil"},"content":"public class Task {"},{"lineNumber":9,"author":{"gitId":"Md-Fazil"},"content":""},{"lineNumber":10,"author":{"gitId":"Md-Fazil"},"content":"    protected String description;"},{"lineNumber":11,"author":{"gitId":"Md-Fazil"},"content":"    protected boolean isCompleted;"},{"lineNumber":12,"author":{"gitId":"Md-Fazil"},"content":""},{"lineNumber":13,"author":{"gitId":"Md-Fazil"},"content":"    public Task(String description, boolean isCompleted) {"},{"lineNumber":14,"author":{"gitId":"Md-Fazil"},"content":"        this.description \u003d description;"},{"lineNumber":15,"author":{"gitId":"Md-Fazil"},"content":"        this.isCompleted \u003d isCompleted;"},{"lineNumber":16,"author":{"gitId":"Md-Fazil"},"content":"    }"},{"lineNumber":17,"author":{"gitId":"Md-Fazil"},"content":""},{"lineNumber":18,"author":{"gitId":"Md-Fazil"},"content":"    public void markComplete() {"},{"lineNumber":19,"author":{"gitId":"Md-Fazil"},"content":"        this.isCompleted \u003d true;"},{"lineNumber":20,"author":{"gitId":"Md-Fazil"},"content":"    }"},{"lineNumber":21,"author":{"gitId":"Md-Fazil"},"content":""},{"lineNumber":22,"author":{"gitId":"Md-Fazil"},"content":"    /**"},{"lineNumber":23,"author":{"gitId":"Md-Fazil"},"content":"     * Returns formatted string of the task details to store in harddisk file."},{"lineNumber":24,"author":{"gitId":"Md-Fazil"},"content":"     * @return Formatted string."},{"lineNumber":25,"author":{"gitId":"Md-Fazil"},"content":"     */"},{"lineNumber":26,"author":{"gitId":"Md-Fazil"},"content":"    public String getFormattedData() {"},{"lineNumber":27,"author":{"gitId":"Md-Fazil"},"content":"        String status \u003d isCompleted ? \"1\" : \"0\";"},{"lineNumber":28,"author":{"gitId":"Md-Fazil"},"content":"        return status + \" | \" + description;"},{"lineNumber":29,"author":{"gitId":"Md-Fazil"},"content":"    }"},{"lineNumber":30,"author":{"gitId":"Md-Fazil"},"content":""},{"lineNumber":31,"author":{"gitId":"Md-Fazil"},"content":"    public LocalDate getTaskDate() {"},{"lineNumber":32,"author":{"gitId":"Md-Fazil"},"content":"        return null;"},{"lineNumber":33,"author":{"gitId":"Md-Fazil"},"content":"    }"},{"lineNumber":34,"author":{"gitId":"Md-Fazil"},"content":""},{"lineNumber":35,"author":{"gitId":"Md-Fazil"},"content":"    public String getDescription() {"},{"lineNumber":36,"author":{"gitId":"Md-Fazil"},"content":"        return description;"},{"lineNumber":37,"author":{"gitId":"Md-Fazil"},"content":"    }"},{"lineNumber":38,"author":{"gitId":"Md-Fazil"},"content":""},{"lineNumber":39,"author":{"gitId":"Md-Fazil"},"content":"    /**"},{"lineNumber":40,"author":{"gitId":"Md-Fazil"},"content":"     * Returns description and status of the task."},{"lineNumber":41,"author":{"gitId":"Md-Fazil"},"content":"     * @return String."},{"lineNumber":42,"author":{"gitId":"Md-Fazil"},"content":"     */"},{"lineNumber":43,"author":{"gitId":"Md-Fazil"},"content":"    @Override"},{"lineNumber":44,"author":{"gitId":"Md-Fazil"},"content":"    public String toString() {"},{"lineNumber":45,"author":{"gitId":"Md-Fazil"},"content":"        String status \u003d isCompleted ? \"X\" : \"\";"},{"lineNumber":46,"author":{"gitId":"Md-Fazil"},"content":"        return \"[\" + status + \"] \" + description;"},{"lineNumber":47,"author":{"gitId":"Md-Fazil"},"content":"    }"},{"lineNumber":48,"author":{"gitId":"Md-Fazil"},"content":"}"}],"authorContributionMap":{"Md-Fazil":48}},{"path":"src/main/java/duke/task/ToDo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Md-Fazil"},"content":"package duke.task;"},{"lineNumber":2,"author":{"gitId":"Md-Fazil"},"content":""},{"lineNumber":3,"author":{"gitId":"Md-Fazil"},"content":"public class ToDo extends Task {"},{"lineNumber":4,"author":{"gitId":"Md-Fazil"},"content":""},{"lineNumber":5,"author":{"gitId":"Md-Fazil"},"content":"    /**"},{"lineNumber":6,"author":{"gitId":"Md-Fazil"},"content":"     * Represents a task that has no deadline."},{"lineNumber":7,"author":{"gitId":"Md-Fazil"},"content":"     */"},{"lineNumber":8,"author":{"gitId":"Md-Fazil"},"content":"    public ToDo(String description, boolean isCompleted) {"},{"lineNumber":9,"author":{"gitId":"Md-Fazil"},"content":"        super(description, isCompleted);"},{"lineNumber":10,"author":{"gitId":"Md-Fazil"},"content":"    }"},{"lineNumber":11,"author":{"gitId":"Md-Fazil"},"content":""},{"lineNumber":12,"author":{"gitId":"Md-Fazil"},"content":"    /**"},{"lineNumber":13,"author":{"gitId":"Md-Fazil"},"content":"     * Returns formatted string of the todo task details to store in harddisk file."},{"lineNumber":14,"author":{"gitId":"Md-Fazil"},"content":"     * @return Formatted string."},{"lineNumber":15,"author":{"gitId":"Md-Fazil"},"content":"     */"},{"lineNumber":16,"author":{"gitId":"Md-Fazil"},"content":"    @Override"},{"lineNumber":17,"author":{"gitId":"Md-Fazil"},"content":"    public String getFormattedData() {"},{"lineNumber":18,"author":{"gitId":"Md-Fazil"},"content":"        return \"T | \" + super.getFormattedData();"},{"lineNumber":19,"author":{"gitId":"Md-Fazil"},"content":"    }"},{"lineNumber":20,"author":{"gitId":"Md-Fazil"},"content":""},{"lineNumber":21,"author":{"gitId":"Md-Fazil"},"content":"    /**"},{"lineNumber":22,"author":{"gitId":"Md-Fazil"},"content":"     * Returns description of the todo task and status of the task."},{"lineNumber":23,"author":{"gitId":"Md-Fazil"},"content":"     * @return String."},{"lineNumber":24,"author":{"gitId":"Md-Fazil"},"content":"     */"},{"lineNumber":25,"author":{"gitId":"Md-Fazil"},"content":"    @Override"},{"lineNumber":26,"author":{"gitId":"Md-Fazil"},"content":"    public String toString() {"},{"lineNumber":27,"author":{"gitId":"Md-Fazil"},"content":"        return \"[T]\" + super.toString();"},{"lineNumber":28,"author":{"gitId":"Md-Fazil"},"content":"    }"},{"lineNumber":29,"author":{"gitId":"Md-Fazil"},"content":"}"}],"authorContributionMap":{"Md-Fazil":29}},{"path":"src/main/resources/view/DialogBox.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"Md-Fazil"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"},{"lineNumber":2,"author":{"gitId":"Md-Fazil"},"content":""},{"lineNumber":3,"author":{"gitId":"Md-Fazil"},"content":"\u003c?import javafx.geometry.Insets?\u003e"},{"lineNumber":4,"author":{"gitId":"Md-Fazil"},"content":"\u003c?import javafx.scene.control.Label?\u003e"},{"lineNumber":5,"author":{"gitId":"Md-Fazil"},"content":"\u003c?import javafx.scene.image.ImageView?\u003e"},{"lineNumber":6,"author":{"gitId":"Md-Fazil"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e"},{"lineNumber":7,"author":{"gitId":"Md-Fazil"},"content":""},{"lineNumber":8,"author":{"gitId":"Md-Fazil"},"content":"\u003cfx:root alignment\u003d\"TOP_RIGHT\" maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\" prefWidth\u003d\"400.0\" type\u003d\"javafx.scene.layout.HBox\" xmlns\u003d\"http://javafx.com/javafx/8.0.171\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e"},{"lineNumber":9,"author":{"gitId":"Md-Fazil"},"content":"    \u003cchildren\u003e"},{"lineNumber":10,"author":{"gitId":"Md-Fazil"},"content":"        \u003cLabel fx:id\u003d\"dialog\" text\u003d\"Label\" wrapText\u003d\"true\" /\u003e"},{"lineNumber":11,"author":{"gitId":"Md-Fazil"},"content":"        \u003cImageView fx:id\u003d\"displayPicture\" fitHeight\u003d\"99.0\" fitWidth\u003d\"99.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\" /\u003e"},{"lineNumber":12,"author":{"gitId":"Md-Fazil"},"content":"    \u003c/children\u003e"},{"lineNumber":13,"author":{"gitId":"Md-Fazil"},"content":"    \u003cpadding\u003e"},{"lineNumber":14,"author":{"gitId":"Md-Fazil"},"content":"        \u003cInsets bottom\u003d\"15.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"15.0\" /\u003e"},{"lineNumber":15,"author":{"gitId":"Md-Fazil"},"content":"    \u003c/padding\u003e"},{"lineNumber":16,"author":{"gitId":"Md-Fazil"},"content":"\u003c/fx:root\u003e"}],"authorContributionMap":{"Md-Fazil":16}},{"path":"src/main/resources/view/MainWindow.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"Md-Fazil"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"},{"lineNumber":2,"author":{"gitId":"Md-Fazil"},"content":""},{"lineNumber":3,"author":{"gitId":"Md-Fazil"},"content":"\u003c?import javafx.scene.control.Button?\u003e"},{"lineNumber":4,"author":{"gitId":"Md-Fazil"},"content":"\u003c?import javafx.scene.control.ScrollPane?\u003e"},{"lineNumber":5,"author":{"gitId":"Md-Fazil"},"content":"\u003c?import javafx.scene.control.TextField?\u003e"},{"lineNumber":6,"author":{"gitId":"Md-Fazil"},"content":"\u003c?import javafx.scene.layout.AnchorPane?\u003e"},{"lineNumber":7,"author":{"gitId":"Md-Fazil"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e"},{"lineNumber":8,"author":{"gitId":"Md-Fazil"},"content":""},{"lineNumber":9,"author":{"gitId":"Md-Fazil"},"content":"\u003cAnchorPane maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefHeight\u003d\"600.0\" prefWidth\u003d\"400.0\" xmlns\u003d\"http://javafx.com/javafx/8.0.171\" xmlns:fx\u003d\"http://javafx.com/fxml/1\" fx:controller\u003d\"duke.control.MainWindow\"\u003e"},{"lineNumber":10,"author":{"gitId":"Md-Fazil"},"content":"    \u003cchildren\u003e"},{"lineNumber":11,"author":{"gitId":"Md-Fazil"},"content":"        \u003cTextField fx:id\u003d\"userInput\" layoutY\u003d\"558.0\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"324.0\" AnchorPane.bottomAnchor\u003d\"1.0\" /\u003e"},{"lineNumber":12,"author":{"gitId":"Md-Fazil"},"content":"        \u003cButton fx:id\u003d\"sendButton\" layoutX\u003d\"324.0\" layoutY\u003d\"558.0\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"76.0\" text\u003d\"Send\" /\u003e"},{"lineNumber":13,"author":{"gitId":"Md-Fazil"},"content":"        \u003cScrollPane fx:id\u003d\"scrollPane\" hbarPolicy\u003d\"NEVER\" hvalue\u003d\"1.0\" prefHeight\u003d\"557.0\" prefWidth\u003d\"400.0\" vvalue\u003d\"1.0\"\u003e"},{"lineNumber":14,"author":{"gitId":"Md-Fazil"},"content":"            \u003ccontent\u003e"},{"lineNumber":15,"author":{"gitId":"Md-Fazil"},"content":"                \u003cVBox fx:id\u003d\"dialogContainer\" prefHeight\u003d\"552.0\" prefWidth\u003d\"388.0\" /\u003e"},{"lineNumber":16,"author":{"gitId":"Md-Fazil"},"content":"            \u003c/content\u003e"},{"lineNumber":17,"author":{"gitId":"Md-Fazil"},"content":"        \u003c/ScrollPane\u003e"},{"lineNumber":18,"author":{"gitId":"Md-Fazil"},"content":"    \u003c/children\u003e"},{"lineNumber":19,"author":{"gitId":"Md-Fazil"},"content":"\u003c/AnchorPane\u003e"}],"authorContributionMap":{"Md-Fazil":19}},{"path":"src/test/java/duke/DeadlineTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Md-Fazil"},"content":"package duke;"},{"lineNumber":2,"author":{"gitId":"Md-Fazil"},"content":""},{"lineNumber":3,"author":{"gitId":"Md-Fazil"},"content":"import org.junit.jupiter.api.Test;"},{"lineNumber":4,"author":{"gitId":"Md-Fazil"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;"},{"lineNumber":5,"author":{"gitId":"Md-Fazil"},"content":""},{"lineNumber":6,"author":{"gitId":"Md-Fazil"},"content":"public class DeadlineTest {"},{"lineNumber":7,"author":{"gitId":"Md-Fazil"},"content":""},{"lineNumber":8,"author":{"gitId":"Md-Fazil"},"content":"    @Test"},{"lineNumber":9,"author":{"gitId":"Md-Fazil"},"content":"    public void testFormattedText() {"},{"lineNumber":10,"author":{"gitId":"Md-Fazil"},"content":"        assertEquals(\"D | 0 | eat | 2020-10-10 18:00\","},{"lineNumber":11,"author":{"gitId":"Md-Fazil"},"content":"                new Deadline(\"eat\", false, \"2020-10-10 18:00\").getFormattedData());"},{"lineNumber":12,"author":{"gitId":"Md-Fazil"},"content":"    }"},{"lineNumber":13,"author":{"gitId":"Md-Fazil"},"content":""},{"lineNumber":14,"author":{"gitId":"Md-Fazil"},"content":"    @Test"},{"lineNumber":15,"author":{"gitId":"Md-Fazil"},"content":"    public void testToString() {"},{"lineNumber":16,"author":{"gitId":"Md-Fazil"},"content":"        assertEquals(\"[D][] eat (by: Oct 10 2020 06:00PM)\","},{"lineNumber":17,"author":{"gitId":"Md-Fazil"},"content":"                new Deadline(\"eat\", false, \"2020-10-10 18:00\").toString());"},{"lineNumber":18,"author":{"gitId":"Md-Fazil"},"content":"    }"},{"lineNumber":19,"author":{"gitId":"Md-Fazil"},"content":"}"},{"lineNumber":20,"author":{"gitId":"Md-Fazil"},"content":""}],"authorContributionMap":{"Md-Fazil":20}},{"path":"src/test/java/duke/DukeTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Md-Fazil"},"content":"package duke;"},{"lineNumber":2,"author":{"gitId":"Md-Fazil"},"content":""},{"lineNumber":3,"author":{"gitId":"Md-Fazil"},"content":"import org.junit.jupiter.api.Test;"},{"lineNumber":4,"author":{"gitId":"Md-Fazil"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;"},{"lineNumber":5,"author":{"gitId":"Md-Fazil"},"content":""},{"lineNumber":6,"author":{"gitId":"Md-Fazil"},"content":""},{"lineNumber":7,"author":{"gitId":"Md-Fazil"},"content":"public class DukeTest {"},{"lineNumber":8,"author":{"gitId":"Md-Fazil"},"content":""},{"lineNumber":9,"author":{"gitId":"Md-Fazil"},"content":"    @Test"},{"lineNumber":10,"author":{"gitId":"Md-Fazil"},"content":"    public void dummyTest() {"},{"lineNumber":11,"author":{"gitId":"Md-Fazil"},"content":"        assertEquals(6400, 6400);"},{"lineNumber":12,"author":{"gitId":"Md-Fazil"},"content":"    }"},{"lineNumber":13,"author":{"gitId":"Md-Fazil"},"content":"}"}],"authorContributionMap":{"Md-Fazil":13}},{"path":"src/test/java/duke/EventTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Md-Fazil"},"content":"package duke;"},{"lineNumber":2,"author":{"gitId":"Md-Fazil"},"content":""},{"lineNumber":3,"author":{"gitId":"Md-Fazil"},"content":"import org.junit.jupiter.api.Test;"},{"lineNumber":4,"author":{"gitId":"Md-Fazil"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;"},{"lineNumber":5,"author":{"gitId":"Md-Fazil"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;"},{"lineNumber":6,"author":{"gitId":"Md-Fazil"},"content":""},{"lineNumber":7,"author":{"gitId":"Md-Fazil"},"content":"public class EventTest {"},{"lineNumber":8,"author":{"gitId":"Md-Fazil"},"content":""},{"lineNumber":9,"author":{"gitId":"Md-Fazil"},"content":"    @Test"},{"lineNumber":10,"author":{"gitId":"Md-Fazil"},"content":"    public void testFormattedText() {"},{"lineNumber":11,"author":{"gitId":"Md-Fazil"},"content":"        assertEquals(\"E | 0 | eat | 2020-10-10 2-4pm\","},{"lineNumber":12,"author":{"gitId":"Md-Fazil"},"content":"                new Event(\"eat\", false, \"2020-10-10 2-4pm\").getFormattedData());"},{"lineNumber":13,"author":{"gitId":"Md-Fazil"},"content":"    }"},{"lineNumber":14,"author":{"gitId":"Md-Fazil"},"content":""},{"lineNumber":15,"author":{"gitId":"Md-Fazil"},"content":"    @Test"},{"lineNumber":16,"author":{"gitId":"Md-Fazil"},"content":"    public void testToString() {"},{"lineNumber":17,"author":{"gitId":"Md-Fazil"},"content":"        assertEquals(\"[E][] eat (at: Oct 10 2020 2-4pm)\","},{"lineNumber":18,"author":{"gitId":"Md-Fazil"},"content":"                new Event(\"eat\", false, \"2020-10-10 2-4pm\").toString());"},{"lineNumber":19,"author":{"gitId":"Md-Fazil"},"content":"    }"},{"lineNumber":20,"author":{"gitId":"Md-Fazil"},"content":"}"}],"authorContributionMap":{"Md-Fazil":20}},{"path":"src/test/java/duke/ToDoTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Md-Fazil"},"content":"package duke;"},{"lineNumber":2,"author":{"gitId":"Md-Fazil"},"content":""},{"lineNumber":3,"author":{"gitId":"Md-Fazil"},"content":"import org.junit.jupiter.api.Test;"},{"lineNumber":4,"author":{"gitId":"Md-Fazil"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;"},{"lineNumber":5,"author":{"gitId":"Md-Fazil"},"content":""},{"lineNumber":6,"author":{"gitId":"Md-Fazil"},"content":"public class ToDoTest {"},{"lineNumber":7,"author":{"gitId":"Md-Fazil"},"content":""},{"lineNumber":8,"author":{"gitId":"Md-Fazil"},"content":"    @Test"},{"lineNumber":9,"author":{"gitId":"Md-Fazil"},"content":"    public void testFormattedText() {"},{"lineNumber":10,"author":{"gitId":"Md-Fazil"},"content":"        assertEquals(\"T | 0 | go for a run\","},{"lineNumber":11,"author":{"gitId":"Md-Fazil"},"content":"                new ToDo(\"go for a run\", false).getFormattedData());"},{"lineNumber":12,"author":{"gitId":"Md-Fazil"},"content":"    }"},{"lineNumber":13,"author":{"gitId":"Md-Fazil"},"content":""},{"lineNumber":14,"author":{"gitId":"Md-Fazil"},"content":"    @Test"},{"lineNumber":15,"author":{"gitId":"Md-Fazil"},"content":"    public void testToString() {"},{"lineNumber":16,"author":{"gitId":"Md-Fazil"},"content":"        assertEquals(\"[T][] go for a run\","},{"lineNumber":17,"author":{"gitId":"Md-Fazil"},"content":"                new ToDo(\"go for a run\", false).toString());"},{"lineNumber":18,"author":{"gitId":"Md-Fazil"},"content":"    }"},{"lineNumber":19,"author":{"gitId":"Md-Fazil"},"content":"}"}],"authorContributionMap":{"Md-Fazil":19}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"Md-Fazil"},"content":"todo borrow book"},{"lineNumber":2,"author":{"gitId":"Md-Fazil"},"content":"list"},{"lineNumber":3,"author":{"gitId":"Md-Fazil"},"content":"event dance /at Kallang CC from 2-4pm"},{"lineNumber":4,"author":{"gitId":"Md-Fazil"},"content":"deadline 2103 project /by Sunday"},{"lineNumber":5,"author":{"gitId":"Md-Fazil"},"content":"deadline 2102 project / by Sunday"},{"lineNumber":6,"author":{"gitId":"Md-Fazil"},"content":"done 2"},{"lineNumber":7,"author":{"gitId":"Md-Fazil"},"content":"done"},{"lineNumber":8,"author":{"gitId":"Md-Fazil"},"content":"delete 3"},{"lineNumber":9,"author":{"gitId":"Md-Fazil"},"content":"list"},{"lineNumber":10,"author":{"gitId":"Md-Fazil"},"content":"delete 3"},{"lineNumber":11,"author":{"gitId":"Md-Fazil"},"content":"bye"}],"authorContributionMap":{"Md-Fazil":11}}]
