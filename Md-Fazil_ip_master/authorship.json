[{"path":"src/main/data/Data.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"Md-Fazil"},"content":"D | 0 | go for a swim  | 2020-10-10 18:00"},{"lineNumber":2,"author":{"gitId":"Md-Fazil"},"content":"E | 1 | go for a jog  | 2020-10-11 24pm"},{"lineNumber":3,"author":{"gitId":"Md-Fazil"},"content":"T | 0 | eat"},{"lineNumber":4,"author":{"gitId":"Md-Fazil"},"content":"T | 0 | run"},{"lineNumber":5,"author":{"gitId":"Md-Fazil"},"content":"T | 1 | eat"},{"lineNumber":6,"author":{"gitId":"Md-Fazil"},"content":"D | 0 | go run  | 2020-10-11 17:00"}],"authorContributionMap":{"Md-Fazil":6}},{"path":"src/main/java/duke/AddCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Md-Fazil"},"content":"package duke;"},{"lineNumber":2,"author":{"gitId":"Md-Fazil"},"content":"import java.io.IOException;"},{"lineNumber":3,"author":{"gitId":"Md-Fazil"},"content":""},{"lineNumber":4,"author":{"gitId":"Md-Fazil"},"content":"/**"},{"lineNumber":5,"author":{"gitId":"Md-Fazil"},"content":" * Represents an add command keyed in by the user."},{"lineNumber":6,"author":{"gitId":"Md-Fazil"},"content":" */"},{"lineNumber":7,"author":{"gitId":"Md-Fazil"},"content":"public class AddCommand extends Command{"},{"lineNumber":8,"author":{"gitId":"Md-Fazil"},"content":""},{"lineNumber":9,"author":{"gitId":"Md-Fazil"},"content":"    AddCommand(String[] parsedCommand) {"},{"lineNumber":10,"author":{"gitId":"Md-Fazil"},"content":"        super(parsedCommand);"},{"lineNumber":11,"author":{"gitId":"Md-Fazil"},"content":"    }"},{"lineNumber":12,"author":{"gitId":"Md-Fazil"},"content":""},{"lineNumber":13,"author":{"gitId":"Md-Fazil"},"content":"    /**"},{"lineNumber":14,"author":{"gitId":"Md-Fazil"},"content":"     * Executes the add command by adding the task to the list, printing the added task to the user and updating the stored file."},{"lineNumber":15,"author":{"gitId":"Md-Fazil"},"content":"     *"},{"lineNumber":16,"author":{"gitId":"Md-Fazil"},"content":"     * @param taskManager TaskManager object that maintains the list of tasks."},{"lineNumber":17,"author":{"gitId":"Md-Fazil"},"content":"     * @param ui Ui object that handles user interaction."},{"lineNumber":18,"author":{"gitId":"Md-Fazil"},"content":"     * @param storage Storage object that handles the updating of stored file."},{"lineNumber":19,"author":{"gitId":"Md-Fazil"},"content":"     * @throws IOException If the list of tasks are not in the correct storage format."},{"lineNumber":20,"author":{"gitId":"Md-Fazil"},"content":"     */"},{"lineNumber":21,"author":{"gitId":"Md-Fazil"},"content":"    public void execute(TaskManager taskManager, Ui ui, Storage storage) throws IOException {"},{"lineNumber":22,"author":{"gitId":"Md-Fazil"},"content":"        String taskType \u003d super.parsedCommand[0];"},{"lineNumber":23,"author":{"gitId":"Md-Fazil"},"content":"        String description \u003d super.parsedCommand[1];"},{"lineNumber":24,"author":{"gitId":"Md-Fazil"},"content":"        Task addedTask \u003d taskManager.add(taskType, description, false);"},{"lineNumber":25,"author":{"gitId":"Md-Fazil"},"content":"        ui.showAddedTask(addedTask, taskManager.getNumOfTasks());"},{"lineNumber":26,"author":{"gitId":"Md-Fazil"},"content":"        storage.store(taskManager.retrieveTasksforStorage());"},{"lineNumber":27,"author":{"gitId":"Md-Fazil"},"content":"    }"},{"lineNumber":28,"author":{"gitId":"Md-Fazil"},"content":"}"}],"authorContributionMap":{"Md-Fazil":28}},{"path":"src/main/java/duke/ByeCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Md-Fazil"},"content":"package duke;"},{"lineNumber":2,"author":{"gitId":"Md-Fazil"},"content":""},{"lineNumber":3,"author":{"gitId":"Md-Fazil"},"content":"/**"},{"lineNumber":4,"author":{"gitId":"Md-Fazil"},"content":" * Represents a bye command keyed in by the user."},{"lineNumber":5,"author":{"gitId":"Md-Fazil"},"content":" */"},{"lineNumber":6,"author":{"gitId":"Md-Fazil"},"content":"public class ByeCommand extends Command{"},{"lineNumber":7,"author":{"gitId":"Md-Fazil"},"content":""},{"lineNumber":8,"author":{"gitId":"Md-Fazil"},"content":"    ByeCommand(String[] parsedAction) {"},{"lineNumber":9,"author":{"gitId":"Md-Fazil"},"content":"        super(parsedAction);"},{"lineNumber":10,"author":{"gitId":"Md-Fazil"},"content":"    }"},{"lineNumber":11,"author":{"gitId":"Md-Fazil"},"content":""},{"lineNumber":12,"author":{"gitId":"Md-Fazil"},"content":"    /**"},{"lineNumber":13,"author":{"gitId":"Md-Fazil"},"content":"     * Executes the bye command by getting ui to print the goodbye message."},{"lineNumber":14,"author":{"gitId":"Md-Fazil"},"content":"     *"},{"lineNumber":15,"author":{"gitId":"Md-Fazil"},"content":"     * @param taskManager TaskManager object that maintains the list of tasks."},{"lineNumber":16,"author":{"gitId":"Md-Fazil"},"content":"     * @param ui Ui object that handles user interaction."},{"lineNumber":17,"author":{"gitId":"Md-Fazil"},"content":"     * @param storage Storage object that handles the updating of stored file."},{"lineNumber":18,"author":{"gitId":"Md-Fazil"},"content":"     */"},{"lineNumber":19,"author":{"gitId":"Md-Fazil"},"content":"    public void execute(TaskManager taskManager, Ui ui, Storage storage) {"},{"lineNumber":20,"author":{"gitId":"Md-Fazil"},"content":"        ui.showByeMessage();"},{"lineNumber":21,"author":{"gitId":"Md-Fazil"},"content":"    }"},{"lineNumber":22,"author":{"gitId":"Md-Fazil"},"content":""},{"lineNumber":23,"author":{"gitId":"Md-Fazil"},"content":"    @Override"},{"lineNumber":24,"author":{"gitId":"Md-Fazil"},"content":"    public boolean isExit() {"},{"lineNumber":25,"author":{"gitId":"Md-Fazil"},"content":"        return true;"},{"lineNumber":26,"author":{"gitId":"Md-Fazil"},"content":"    }"},{"lineNumber":27,"author":{"gitId":"Md-Fazil"},"content":""},{"lineNumber":28,"author":{"gitId":"Md-Fazil"},"content":"}"}],"authorContributionMap":{"Md-Fazil":28}},{"path":"src/main/java/duke/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Md-Fazil"},"content":"package duke;"},{"lineNumber":2,"author":{"gitId":"Md-Fazil"},"content":"import java.io.IOException;"},{"lineNumber":3,"author":{"gitId":"Md-Fazil"},"content":""},{"lineNumber":4,"author":{"gitId":"Md-Fazil"},"content":"/**"},{"lineNumber":5,"author":{"gitId":"Md-Fazil"},"content":" * Represents a command keyed in by the user."},{"lineNumber":6,"author":{"gitId":"Md-Fazil"},"content":" */"},{"lineNumber":7,"author":{"gitId":"Md-Fazil"},"content":"public abstract class Command {"},{"lineNumber":8,"author":{"gitId":"Md-Fazil"},"content":"    protected String[] parsedCommand;"},{"lineNumber":9,"author":{"gitId":"Md-Fazil"},"content":""},{"lineNumber":10,"author":{"gitId":"Md-Fazil"},"content":"    protected Command(String[] parsedCommand) {"},{"lineNumber":11,"author":{"gitId":"Md-Fazil"},"content":"        this.parsedCommand \u003d parsedCommand;"},{"lineNumber":12,"author":{"gitId":"Md-Fazil"},"content":"    }"},{"lineNumber":13,"author":{"gitId":"Md-Fazil"},"content":""},{"lineNumber":14,"author":{"gitId":"Md-Fazil"},"content":"    /**"},{"lineNumber":15,"author":{"gitId":"Md-Fazil"},"content":"     * Executes a specific valid command specified by the user."},{"lineNumber":16,"author":{"gitId":"Md-Fazil"},"content":"     *"},{"lineNumber":17,"author":{"gitId":"Md-Fazil"},"content":"     * @param taskManager TaskManager object that maintains the list of tasks."},{"lineNumber":18,"author":{"gitId":"Md-Fazil"},"content":"     * @param ui Ui object that handles user interaction."},{"lineNumber":19,"author":{"gitId":"Md-Fazil"},"content":"     * @param storage Storage object that handles the updating of stored file."},{"lineNumber":20,"author":{"gitId":"Md-Fazil"},"content":"     * @throws IOException If the list of tasks are not in the correct storage format."},{"lineNumber":21,"author":{"gitId":"Md-Fazil"},"content":"     * @throws DukeException If the task number specified to mark done or delete is not a valid task number."},{"lineNumber":22,"author":{"gitId":"Md-Fazil"},"content":"     */"},{"lineNumber":23,"author":{"gitId":"Md-Fazil"},"content":"    abstract void execute(TaskManager taskManager,Ui ui, Storage storage) throws DukeException, IOException;"},{"lineNumber":24,"author":{"gitId":"Md-Fazil"},"content":""},{"lineNumber":25,"author":{"gitId":"Md-Fazil"},"content":"    public boolean isExit() {"},{"lineNumber":26,"author":{"gitId":"Md-Fazil"},"content":"        return false;"},{"lineNumber":27,"author":{"gitId":"Md-Fazil"},"content":"    }"},{"lineNumber":28,"author":{"gitId":"Md-Fazil"},"content":"}"}],"authorContributionMap":{"Md-Fazil":28}},{"path":"src/main/java/duke/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Md-Fazil"},"content":"package duke;"},{"lineNumber":2,"author":{"gitId":"Md-Fazil"},"content":"import java.time.LocalDate;"},{"lineNumber":3,"author":{"gitId":"Md-Fazil"},"content":"import java.time.LocalTime;"},{"lineNumber":4,"author":{"gitId":"Md-Fazil"},"content":"import java.time.format.DateTimeFormatter;"},{"lineNumber":5,"author":{"gitId":"Md-Fazil"},"content":""},{"lineNumber":6,"author":{"gitId":"Md-Fazil"},"content":"/**"},{"lineNumber":7,"author":{"gitId":"Md-Fazil"},"content":" * Represents a task that has a deadline."},{"lineNumber":8,"author":{"gitId":"Md-Fazil"},"content":" */"},{"lineNumber":9,"author":{"gitId":"Md-Fazil"},"content":"public class Deadline extends Task{"},{"lineNumber":10,"author":{"gitId":"Md-Fazil"},"content":""},{"lineNumber":11,"author":{"gitId":"Md-Fazil"},"content":"    protected LocalDate date;"},{"lineNumber":12,"author":{"gitId":"Md-Fazil"},"content":"    protected LocalTime time;"},{"lineNumber":13,"author":{"gitId":"Md-Fazil"},"content":""},{"lineNumber":14,"author":{"gitId":"Md-Fazil"},"content":"    Deadline(String description, boolean isCompleted, String deadline) {"},{"lineNumber":15,"author":{"gitId":"Md-Fazil"},"content":"        super(description, isCompleted);"},{"lineNumber":16,"author":{"gitId":"Md-Fazil"},"content":"        String[] dateAndTime \u003d deadline.split(\" \");"},{"lineNumber":17,"author":{"gitId":"Md-Fazil"},"content":"        String date \u003d dateAndTime[0];"},{"lineNumber":18,"author":{"gitId":"Md-Fazil"},"content":"        this.date \u003d LocalDate.parse(date);"},{"lineNumber":19,"author":{"gitId":"Md-Fazil"},"content":"        if (dateAndTime.length \u003d\u003d 2) {"},{"lineNumber":20,"author":{"gitId":"Md-Fazil"},"content":"            String time \u003d dateAndTime[1];"},{"lineNumber":21,"author":{"gitId":"Md-Fazil"},"content":"            this.time \u003d LocalTime.parse(time);"},{"lineNumber":22,"author":{"gitId":"Md-Fazil"},"content":"        } else {"},{"lineNumber":23,"author":{"gitId":"Md-Fazil"},"content":"            this.time \u003d null;"},{"lineNumber":24,"author":{"gitId":"Md-Fazil"},"content":"        }"},{"lineNumber":25,"author":{"gitId":"Md-Fazil"},"content":"    }"},{"lineNumber":26,"author":{"gitId":"Md-Fazil"},"content":""},{"lineNumber":27,"author":{"gitId":"Md-Fazil"},"content":"    @Override"},{"lineNumber":28,"author":{"gitId":"Md-Fazil"},"content":"    public LocalDate getTaskDate() {"},{"lineNumber":29,"author":{"gitId":"Md-Fazil"},"content":"        return this.date;"},{"lineNumber":30,"author":{"gitId":"Md-Fazil"},"content":"    }"},{"lineNumber":31,"author":{"gitId":"Md-Fazil"},"content":""},{"lineNumber":32,"author":{"gitId":"Md-Fazil"},"content":"    /**"},{"lineNumber":33,"author":{"gitId":"Md-Fazil"},"content":"     * Returns formatted string of the deadline task details to store in harddisk file."},{"lineNumber":34,"author":{"gitId":"Md-Fazil"},"content":"     * @return Formatted string."},{"lineNumber":35,"author":{"gitId":"Md-Fazil"},"content":"     */"},{"lineNumber":36,"author":{"gitId":"Md-Fazil"},"content":"    @Override"},{"lineNumber":37,"author":{"gitId":"Md-Fazil"},"content":"    public String getFormattedData() {"},{"lineNumber":38,"author":{"gitId":"Md-Fazil"},"content":"        String currentTime \u003d time \u003d\u003d null ? \"\" : \" \" + time;"},{"lineNumber":39,"author":{"gitId":"Md-Fazil"},"content":"        return  \"D | \" + super.getFormattedData() + \" | \" + date + currentTime;"},{"lineNumber":40,"author":{"gitId":"Md-Fazil"},"content":"    }"},{"lineNumber":41,"author":{"gitId":"Md-Fazil"},"content":""},{"lineNumber":42,"author":{"gitId":"Md-Fazil"},"content":"    /**"},{"lineNumber":43,"author":{"gitId":"Md-Fazil"},"content":"     * Returns description of the deadline task, status of the task as well as its due date and time."},{"lineNumber":44,"author":{"gitId":"Md-Fazil"},"content":"     * @return String."},{"lineNumber":45,"author":{"gitId":"Md-Fazil"},"content":"     */"},{"lineNumber":46,"author":{"gitId":"Md-Fazil"},"content":"    @Override"},{"lineNumber":47,"author":{"gitId":"Md-Fazil"},"content":"    public String toString() {"},{"lineNumber":48,"author":{"gitId":"Md-Fazil"},"content":"        String exactTime \u003d time \u003d\u003d null ? \"\" : \" \" + time.format(DateTimeFormatter.ofPattern(\"hh:mma\"));"},{"lineNumber":49,"author":{"gitId":"Md-Fazil"},"content":"        return \"[D]\" + super.toString() + \" (by: \" + date.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\")) + exactTime + \")\";"},{"lineNumber":50,"author":{"gitId":"Md-Fazil"},"content":"    }"},{"lineNumber":51,"author":{"gitId":"Md-Fazil"},"content":"}"}],"authorContributionMap":{"Md-Fazil":51}},{"path":"src/main/java/duke/DeleteCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Md-Fazil"},"content":"package duke;"},{"lineNumber":2,"author":{"gitId":"Md-Fazil"},"content":""},{"lineNumber":3,"author":{"gitId":"Md-Fazil"},"content":"import java.io.IOException;"},{"lineNumber":4,"author":{"gitId":"Md-Fazil"},"content":""},{"lineNumber":5,"author":{"gitId":"Md-Fazil"},"content":"/**"},{"lineNumber":6,"author":{"gitId":"Md-Fazil"},"content":" * Represents a delete command keyed in by the user."},{"lineNumber":7,"author":{"gitId":"Md-Fazil"},"content":" */"},{"lineNumber":8,"author":{"gitId":"Md-Fazil"},"content":"public class DeleteCommand extends Command {"},{"lineNumber":9,"author":{"gitId":"Md-Fazil"},"content":""},{"lineNumber":10,"author":{"gitId":"Md-Fazil"},"content":"    DeleteCommand(String[] parsedCommand) {"},{"lineNumber":11,"author":{"gitId":"Md-Fazil"},"content":"        super(parsedCommand);"},{"lineNumber":12,"author":{"gitId":"Md-Fazil"},"content":"    }"},{"lineNumber":13,"author":{"gitId":"Md-Fazil"},"content":""},{"lineNumber":14,"author":{"gitId":"Md-Fazil"},"content":"    /**"},{"lineNumber":15,"author":{"gitId":"Md-Fazil"},"content":"     * Executes the delete command by removing the task from the list, printing the deleted task to the user and updating the stored file."},{"lineNumber":16,"author":{"gitId":"Md-Fazil"},"content":"     *"},{"lineNumber":17,"author":{"gitId":"Md-Fazil"},"content":"     * @param taskManager TaskManager object that maintains the list of tasks."},{"lineNumber":18,"author":{"gitId":"Md-Fazil"},"content":"     * @param ui Ui object that handles user interaction."},{"lineNumber":19,"author":{"gitId":"Md-Fazil"},"content":"     * @param storage Storage object that handles the updating of stored file."},{"lineNumber":20,"author":{"gitId":"Md-Fazil"},"content":"     * @throws IOException If the list of tasks are not in the correct storage format."},{"lineNumber":21,"author":{"gitId":"Md-Fazil"},"content":"     * @throws DukeException If the task number specified as done is not valid."},{"lineNumber":22,"author":{"gitId":"Md-Fazil"},"content":"     */"},{"lineNumber":23,"author":{"gitId":"Md-Fazil"},"content":"    public void execute(TaskManager taskManager, Ui ui, Storage storage) throws DukeException, IOException {"},{"lineNumber":24,"author":{"gitId":"Md-Fazil"},"content":"        String taskNumber \u003d super.parsedCommand[1];"},{"lineNumber":25,"author":{"gitId":"Md-Fazil"},"content":"        Task completedTask \u003d taskManager.delete(Integer.parseInt(taskNumber));"},{"lineNumber":26,"author":{"gitId":"Md-Fazil"},"content":"        ui.showRemovedTask(completedTask, taskManager.getNumOfTasks());"},{"lineNumber":27,"author":{"gitId":"Md-Fazil"},"content":"        storage.store(taskManager.retrieveTasksforStorage());"},{"lineNumber":28,"author":{"gitId":"Md-Fazil"},"content":"    }"},{"lineNumber":29,"author":{"gitId":"Md-Fazil"},"content":""},{"lineNumber":30,"author":{"gitId":"Md-Fazil"},"content":"}"}],"authorContributionMap":{"Md-Fazil":30}},{"path":"src/main/java/duke/DoneCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Md-Fazil"},"content":"package duke;"},{"lineNumber":2,"author":{"gitId":"Md-Fazil"},"content":"import java.io.IOException;"},{"lineNumber":3,"author":{"gitId":"Md-Fazil"},"content":""},{"lineNumber":4,"author":{"gitId":"Md-Fazil"},"content":"/**"},{"lineNumber":5,"author":{"gitId":"Md-Fazil"},"content":" * Represents a done command keyed in by the user."},{"lineNumber":6,"author":{"gitId":"Md-Fazil"},"content":" */"},{"lineNumber":7,"author":{"gitId":"Md-Fazil"},"content":"public class DoneCommand extends Command{"},{"lineNumber":8,"author":{"gitId":"Md-Fazil"},"content":""},{"lineNumber":9,"author":{"gitId":"Md-Fazil"},"content":"    DoneCommand(String[] parsedCommand) {"},{"lineNumber":10,"author":{"gitId":"Md-Fazil"},"content":"        super(parsedCommand);"},{"lineNumber":11,"author":{"gitId":"Md-Fazil"},"content":"    }"},{"lineNumber":12,"author":{"gitId":"Md-Fazil"},"content":""},{"lineNumber":13,"author":{"gitId":"Md-Fazil"},"content":"    /**"},{"lineNumber":14,"author":{"gitId":"Md-Fazil"},"content":"     * Executes the done command by marking the task as completed, printing the completed task to the user and updating the stored file."},{"lineNumber":15,"author":{"gitId":"Md-Fazil"},"content":"     *"},{"lineNumber":16,"author":{"gitId":"Md-Fazil"},"content":"     * @param taskManager TaskManager object that maintains the list of tasks."},{"lineNumber":17,"author":{"gitId":"Md-Fazil"},"content":"     * @param ui Ui object that handles user interaction."},{"lineNumber":18,"author":{"gitId":"Md-Fazil"},"content":"     * @param storage Storage object that handles the updating of stored file."},{"lineNumber":19,"author":{"gitId":"Md-Fazil"},"content":"     * @throws IOException If the list of tasks are not in the correct storage format."},{"lineNumber":20,"author":{"gitId":"Md-Fazil"},"content":"     * @throws DukeException If the task number specified as done is not valid."},{"lineNumber":21,"author":{"gitId":"Md-Fazil"},"content":"     */"},{"lineNumber":22,"author":{"gitId":"Md-Fazil"},"content":"    public void execute(TaskManager taskManager, Ui ui, Storage storage) throws DukeException, IOException {"},{"lineNumber":23,"author":{"gitId":"Md-Fazil"},"content":"        String taskNumber \u003d super.parsedCommand[1];"},{"lineNumber":24,"author":{"gitId":"Md-Fazil"},"content":"        Task doneTask \u003d taskManager.done(Integer.parseInt(taskNumber));"},{"lineNumber":25,"author":{"gitId":"Md-Fazil"},"content":"        ui.showDoneTask(doneTask);"},{"lineNumber":26,"author":{"gitId":"Md-Fazil"},"content":"        storage.store(taskManager.retrieveTasksforStorage());"},{"lineNumber":27,"author":{"gitId":"Md-Fazil"},"content":"    }"},{"lineNumber":28,"author":{"gitId":"Md-Fazil"},"content":"}"}],"authorContributionMap":{"Md-Fazil":28}},{"path":"src/main/java/duke/DueCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Md-Fazil"},"content":"package duke;"},{"lineNumber":2,"author":{"gitId":"Md-Fazil"},"content":""},{"lineNumber":3,"author":{"gitId":"Md-Fazil"},"content":"import java.util.ArrayList;"},{"lineNumber":4,"author":{"gitId":"Md-Fazil"},"content":""},{"lineNumber":5,"author":{"gitId":"Md-Fazil"},"content":"/**"},{"lineNumber":6,"author":{"gitId":"Md-Fazil"},"content":" * Represents a due command keyed in by the user."},{"lineNumber":7,"author":{"gitId":"Md-Fazil"},"content":" */"},{"lineNumber":8,"author":{"gitId":"Md-Fazil"},"content":"public class DueCommand extends Command {"},{"lineNumber":9,"author":{"gitId":"Md-Fazil"},"content":""},{"lineNumber":10,"author":{"gitId":"Md-Fazil"},"content":"    DueCommand(String[] parsedCommand) {"},{"lineNumber":11,"author":{"gitId":"Md-Fazil"},"content":"        super(parsedCommand);"},{"lineNumber":12,"author":{"gitId":"Md-Fazil"},"content":"    }"},{"lineNumber":13,"author":{"gitId":"Md-Fazil"},"content":""},{"lineNumber":14,"author":{"gitId":"Md-Fazil"},"content":"    /**"},{"lineNumber":15,"author":{"gitId":"Md-Fazil"},"content":"     * Executes the due command by printing tasks that specifically end on a specified date."},{"lineNumber":16,"author":{"gitId":"Md-Fazil"},"content":"     *"},{"lineNumber":17,"author":{"gitId":"Md-Fazil"},"content":"     * @param taskManager TaskManager object that maintains the list of tasks."},{"lineNumber":18,"author":{"gitId":"Md-Fazil"},"content":"     * @param ui Ui object that handles user interaction."},{"lineNumber":19,"author":{"gitId":"Md-Fazil"},"content":"     * @param storage Storage object that handles the updating of stored file."},{"lineNumber":20,"author":{"gitId":"Md-Fazil"},"content":"     */"},{"lineNumber":21,"author":{"gitId":"Md-Fazil"},"content":"    public void execute(TaskManager taskManager, Ui ui, Storage storage) {"},{"lineNumber":22,"author":{"gitId":"Md-Fazil"},"content":"        String date \u003d parsedCommand[1];"},{"lineNumber":23,"author":{"gitId":"Md-Fazil"},"content":"        ArrayList\u003cTask\u003e list \u003d taskManager.getTasksOn(date);"},{"lineNumber":24,"author":{"gitId":"Md-Fazil"},"content":"        ui.showDueTasks(list, date);"},{"lineNumber":25,"author":{"gitId":"Md-Fazil"},"content":"    }"},{"lineNumber":26,"author":{"gitId":"Md-Fazil"},"content":"}"}],"authorContributionMap":{"Md-Fazil":26}},{"path":"src/main/java/duke/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Md-Fazil"},"content":"package duke;"},{"lineNumber":2,"author":{"gitId":"Md-Fazil"},"content":"import java.io.FileNotFoundException;"},{"lineNumber":3,"author":{"gitId":"Md-Fazil"},"content":"import java.io.IOException;"},{"lineNumber":4,"author":{"gitId":"Md-Fazil"},"content":"import java.util.ArrayList;"},{"lineNumber":5,"author":{"gitId":"Md-Fazil"},"content":"import java.util.Scanner;"},{"lineNumber":6,"author":{"gitId":"Md-Fazil"},"content":""},{"lineNumber":7,"author":{"gitId":"Md-Fazil"},"content":"public class Duke {"},{"lineNumber":8,"author":{"gitId":"Md-Fazil"},"content":"    private Storage storage;"},{"lineNumber":9,"author":{"gitId":"Md-Fazil"},"content":"    private TaskManager taskManager;"},{"lineNumber":10,"author":{"gitId":"Md-Fazil"},"content":"    private Ui ui;"},{"lineNumber":11,"author":{"gitId":"Md-Fazil"},"content":""},{"lineNumber":12,"author":{"gitId":"Md-Fazil"},"content":"    public Duke(String filePath) {"},{"lineNumber":13,"author":{"gitId":"Md-Fazil"},"content":"        ui \u003d new Ui();"},{"lineNumber":14,"author":{"gitId":"Md-Fazil"},"content":"        storage \u003d new Storage(filePath);"},{"lineNumber":15,"author":{"gitId":"Md-Fazil"},"content":"        taskManager \u003d new TaskManager();"},{"lineNumber":16,"author":{"gitId":"Md-Fazil"},"content":"        try {"},{"lineNumber":17,"author":{"gitId":"Md-Fazil"},"content":"            ArrayList\u003cString\u003e oldData \u003d storage.load();"},{"lineNumber":18,"author":{"gitId":"Md-Fazil"},"content":"            ArrayList\u003cString\u003e parsedData \u003d Parser.parseToStart(oldData);"},{"lineNumber":19,"author":{"gitId":"Md-Fazil"},"content":"            taskManager.upload(parsedData);"},{"lineNumber":20,"author":{"gitId":"Md-Fazil"},"content":"        } catch (FileNotFoundException e) {"},{"lineNumber":21,"author":{"gitId":"Md-Fazil"},"content":"            ui.showError(\"Storage file not found!\");"},{"lineNumber":22,"author":{"gitId":"Md-Fazil"},"content":"        }"},{"lineNumber":23,"author":{"gitId":"Md-Fazil"},"content":"    }"},{"lineNumber":24,"author":{"gitId":"Md-Fazil"},"content":""},{"lineNumber":25,"author":{"gitId":"Md-Fazil"},"content":"    /**"},{"lineNumber":26,"author":{"gitId":"Md-Fazil"},"content":"     * Handles the user interaction and execution of commands."},{"lineNumber":27,"author":{"gitId":"Md-Fazil"},"content":"     */"},{"lineNumber":28,"author":{"gitId":"Md-Fazil"},"content":"    public void run() {"},{"lineNumber":29,"author":{"gitId":"Md-Fazil"},"content":"        ui.showWelcome();"},{"lineNumber":30,"author":{"gitId":"Md-Fazil"},"content":"        boolean isExit \u003d false;"},{"lineNumber":31,"author":{"gitId":"Md-Fazil"},"content":"        Scanner sc \u003d new Scanner(System.in);"},{"lineNumber":32,"author":{"gitId":"Md-Fazil"},"content":"        while (!isExit) {"},{"lineNumber":33,"author":{"gitId":"Md-Fazil"},"content":"            String input \u003d sc.nextLine();"},{"lineNumber":34,"author":{"gitId":"Md-Fazil"},"content":"            try {"},{"lineNumber":35,"author":{"gitId":"Md-Fazil"},"content":"                Command command \u003d Parser.parse(input);"},{"lineNumber":36,"author":{"gitId":"Md-Fazil"},"content":"                command.execute(taskManager, ui, storage);"},{"lineNumber":37,"author":{"gitId":"Md-Fazil"},"content":"                isExit \u003d command.isExit();"},{"lineNumber":38,"author":{"gitId":"Md-Fazil"},"content":"            } catch (DukeException e) {"},{"lineNumber":39,"author":{"gitId":"Md-Fazil"},"content":"                ui.showError(e.getMessage());"},{"lineNumber":40,"author":{"gitId":"Md-Fazil"},"content":"            } catch (IOException e) {"},{"lineNumber":41,"author":{"gitId":"Md-Fazil"},"content":"                ui.showError(\"Internal error! Storage file not in the correct format.\");"},{"lineNumber":42,"author":{"gitId":"Md-Fazil"},"content":"            }"},{"lineNumber":43,"author":{"gitId":"Md-Fazil"},"content":"        }"},{"lineNumber":44,"author":{"gitId":"Md-Fazil"},"content":"    }"},{"lineNumber":45,"author":{"gitId":"Md-Fazil"},"content":""},{"lineNumber":46,"author":{"gitId":"Md-Fazil"},"content":"    public static void main(String[] args) {"},{"lineNumber":47,"author":{"gitId":"Md-Fazil"},"content":"        new Duke(\"./src/main/data/Data.txt\").run();"},{"lineNumber":48,"author":{"gitId":"Md-Fazil"},"content":"    }"},{"lineNumber":49,"author":{"gitId":"Md-Fazil"},"content":"}"}],"authorContributionMap":{"Md-Fazil":49}},{"path":"src/main/java/duke/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Md-Fazil"},"content":"package duke;"},{"lineNumber":2,"author":{"gitId":"Md-Fazil"},"content":""},{"lineNumber":3,"author":{"gitId":"Md-Fazil"},"content":"/**"},{"lineNumber":4,"author":{"gitId":"Md-Fazil"},"content":" * Represents an exception that is specific to Duke."},{"lineNumber":5,"author":{"gitId":"Md-Fazil"},"content":" */"},{"lineNumber":6,"author":{"gitId":"Md-Fazil"},"content":"public class DukeException extends Exception{"},{"lineNumber":7,"author":{"gitId":"Md-Fazil"},"content":""},{"lineNumber":8,"author":{"gitId":"Md-Fazil"},"content":"    DukeException(String message){"},{"lineNumber":9,"author":{"gitId":"Md-Fazil"},"content":"        super(message);"},{"lineNumber":10,"author":{"gitId":"Md-Fazil"},"content":"    }"},{"lineNumber":11,"author":{"gitId":"Md-Fazil"},"content":"}"}],"authorContributionMap":{"Md-Fazil":11}},{"path":"src/main/java/duke/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Md-Fazil"},"content":"package duke;"},{"lineNumber":2,"author":{"gitId":"Md-Fazil"},"content":"import java.time.LocalDate;"},{"lineNumber":3,"author":{"gitId":"Md-Fazil"},"content":"import java.time.format.DateTimeFormatter;"},{"lineNumber":4,"author":{"gitId":"Md-Fazil"},"content":""},{"lineNumber":5,"author":{"gitId":"Md-Fazil"},"content":"/**"},{"lineNumber":6,"author":{"gitId":"Md-Fazil"},"content":" * Represents a task that happens on a specific date and time."},{"lineNumber":7,"author":{"gitId":"Md-Fazil"},"content":" */"},{"lineNumber":8,"author":{"gitId":"Md-Fazil"},"content":"public class Event extends Task{"},{"lineNumber":9,"author":{"gitId":"Md-Fazil"},"content":""},{"lineNumber":10,"author":{"gitId":"Md-Fazil"},"content":"    protected LocalDate date;"},{"lineNumber":11,"author":{"gitId":"Md-Fazil"},"content":"    protected String duration;"},{"lineNumber":12,"author":{"gitId":"Md-Fazil"},"content":""},{"lineNumber":13,"author":{"gitId":"Md-Fazil"},"content":"    Event(String description, boolean isCompleted, String time) {"},{"lineNumber":14,"author":{"gitId":"Md-Fazil"},"content":"        super(description, isCompleted);"},{"lineNumber":15,"author":{"gitId":"Md-Fazil"},"content":"        String[] dateDuration \u003d time.split(\" \");"},{"lineNumber":16,"author":{"gitId":"Md-Fazil"},"content":"        String eventDate \u003d dateDuration[0];"},{"lineNumber":17,"author":{"gitId":"Md-Fazil"},"content":"        this.date \u003d LocalDate.parse(eventDate);"},{"lineNumber":18,"author":{"gitId":"Md-Fazil"},"content":"        this.duration \u003d dateDuration[1];"},{"lineNumber":19,"author":{"gitId":"Md-Fazil"},"content":"    }"},{"lineNumber":20,"author":{"gitId":"Md-Fazil"},"content":""},{"lineNumber":21,"author":{"gitId":"Md-Fazil"},"content":"    public LocalDate getTaskDate() {"},{"lineNumber":22,"author":{"gitId":"Md-Fazil"},"content":"        return this.date;"},{"lineNumber":23,"author":{"gitId":"Md-Fazil"},"content":"    }"},{"lineNumber":24,"author":{"gitId":"Md-Fazil"},"content":""},{"lineNumber":25,"author":{"gitId":"Md-Fazil"},"content":"    /**"},{"lineNumber":26,"author":{"gitId":"Md-Fazil"},"content":"     * Returns formatted string of the event task details to store in harddisk file."},{"lineNumber":27,"author":{"gitId":"Md-Fazil"},"content":"     * @return Formatted string."},{"lineNumber":28,"author":{"gitId":"Md-Fazil"},"content":"     */"},{"lineNumber":29,"author":{"gitId":"Md-Fazil"},"content":"    @Override"},{"lineNumber":30,"author":{"gitId":"Md-Fazil"},"content":"    public String getFormattedData() {"},{"lineNumber":31,"author":{"gitId":"Md-Fazil"},"content":"        return  \"E | \" + super.getFormattedData() + \" | \" + date + \" \" + duration;"},{"lineNumber":32,"author":{"gitId":"Md-Fazil"},"content":"    }"},{"lineNumber":33,"author":{"gitId":"Md-Fazil"},"content":""},{"lineNumber":34,"author":{"gitId":"Md-Fazil"},"content":"    /**"},{"lineNumber":35,"author":{"gitId":"Md-Fazil"},"content":"     * Returns description of the event, status of the event as well as its date and time."},{"lineNumber":36,"author":{"gitId":"Md-Fazil"},"content":"     * @return String."},{"lineNumber":37,"author":{"gitId":"Md-Fazil"},"content":"     */"},{"lineNumber":38,"author":{"gitId":"Md-Fazil"},"content":"    @Override"},{"lineNumber":39,"author":{"gitId":"Md-Fazil"},"content":"    public String toString() {"},{"lineNumber":40,"author":{"gitId":"Md-Fazil"},"content":"        return \"[E]\" + super.toString() + \" (at: \" + date.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\")) + \" \" +"},{"lineNumber":41,"author":{"gitId":"Md-Fazil"},"content":"                duration + \")\";"},{"lineNumber":42,"author":{"gitId":"Md-Fazil"},"content":"    }"},{"lineNumber":43,"author":{"gitId":"Md-Fazil"},"content":"}"}],"authorContributionMap":{"Md-Fazil":43}},{"path":"src/main/java/duke/FindCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Md-Fazil"},"content":"package duke;"},{"lineNumber":2,"author":{"gitId":"Md-Fazil"},"content":""},{"lineNumber":3,"author":{"gitId":"Md-Fazil"},"content":"import java.util.ArrayList;"},{"lineNumber":4,"author":{"gitId":"Md-Fazil"},"content":""},{"lineNumber":5,"author":{"gitId":"Md-Fazil"},"content":"public class FindCommand extends Command {"},{"lineNumber":6,"author":{"gitId":"Md-Fazil"},"content":""},{"lineNumber":7,"author":{"gitId":"Md-Fazil"},"content":"    FindCommand(String[] parsedCommand) {"},{"lineNumber":8,"author":{"gitId":"Md-Fazil"},"content":"        super(parsedCommand);"},{"lineNumber":9,"author":{"gitId":"Md-Fazil"},"content":"    }"},{"lineNumber":10,"author":{"gitId":"Md-Fazil"},"content":""},{"lineNumber":11,"author":{"gitId":"Md-Fazil"},"content":"    void execute(TaskManager taskManager, Ui ui, Storage storage) {"},{"lineNumber":12,"author":{"gitId":"Md-Fazil"},"content":"        String keyword \u003d parsedCommand[1];"},{"lineNumber":13,"author":{"gitId":"Md-Fazil"},"content":"        ArrayList\u003cTask\u003e list \u003d taskManager.retrieveMatchingTasks(keyword);"},{"lineNumber":14,"author":{"gitId":"Md-Fazil"},"content":"        ui.showMatchingTasks(list);"},{"lineNumber":15,"author":{"gitId":"Md-Fazil"},"content":"    }"},{"lineNumber":16,"author":{"gitId":"Md-Fazil"},"content":"}"}],"authorContributionMap":{"Md-Fazil":16}},{"path":"src/main/java/duke/ListCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Md-Fazil"},"content":"package duke;"},{"lineNumber":2,"author":{"gitId":"Md-Fazil"},"content":""},{"lineNumber":3,"author":{"gitId":"Md-Fazil"},"content":"/**"},{"lineNumber":4,"author":{"gitId":"Md-Fazil"},"content":" * Represents a list command keyed in by the user."},{"lineNumber":5,"author":{"gitId":"Md-Fazil"},"content":" */"},{"lineNumber":6,"author":{"gitId":"Md-Fazil"},"content":"public class ListCommand extends Command {"},{"lineNumber":7,"author":{"gitId":"Md-Fazil"},"content":""},{"lineNumber":8,"author":{"gitId":"Md-Fazil"},"content":"    ListCommand(String[] parsedCommand) {"},{"lineNumber":9,"author":{"gitId":"Md-Fazil"},"content":"        super(parsedCommand);"},{"lineNumber":10,"author":{"gitId":"Md-Fazil"},"content":"    }"},{"lineNumber":11,"author":{"gitId":"Md-Fazil"},"content":""},{"lineNumber":12,"author":{"gitId":"Md-Fazil"},"content":"    /**"},{"lineNumber":13,"author":{"gitId":"Md-Fazil"},"content":"     * Executes the list command by printing all the tasks to the user."},{"lineNumber":14,"author":{"gitId":"Md-Fazil"},"content":"     *"},{"lineNumber":15,"author":{"gitId":"Md-Fazil"},"content":"     * @param taskManager TaskManager object that maintains the list of tasks."},{"lineNumber":16,"author":{"gitId":"Md-Fazil"},"content":"     * @param ui Ui object that handles user interaction."},{"lineNumber":17,"author":{"gitId":"Md-Fazil"},"content":"     * @param storage Storage object that handles the updating of stored file."},{"lineNumber":18,"author":{"gitId":"Md-Fazil"},"content":"     */"},{"lineNumber":19,"author":{"gitId":"Md-Fazil"},"content":"    public void execute(TaskManager taskManager, Ui ui, Storage storage) {"},{"lineNumber":20,"author":{"gitId":"Md-Fazil"},"content":"        ui.showAllTasks(taskManager.getList());"},{"lineNumber":21,"author":{"gitId":"Md-Fazil"},"content":"    }"},{"lineNumber":22,"author":{"gitId":"Md-Fazil"},"content":"}"}],"authorContributionMap":{"Md-Fazil":22}},{"path":"src/main/java/duke/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Md-Fazil"},"content":"package duke;"},{"lineNumber":2,"author":{"gitId":"Md-Fazil"},"content":"import java.time.LocalDate;"},{"lineNumber":3,"author":{"gitId":"Md-Fazil"},"content":"import java.time.format.DateTimeParseException;"},{"lineNumber":4,"author":{"gitId":"Md-Fazil"},"content":"import java.util.ArrayList;"},{"lineNumber":5,"author":{"gitId":"Md-Fazil"},"content":""},{"lineNumber":6,"author":{"gitId":"Md-Fazil"},"content":"public class Parser {"},{"lineNumber":7,"author":{"gitId":"Md-Fazil"},"content":"    private final static String TODO \u003d \"todo\";"},{"lineNumber":8,"author":{"gitId":"Md-Fazil"},"content":"    private final static String DELETE \u003d \"delete\";"},{"lineNumber":9,"author":{"gitId":"Md-Fazil"},"content":"    private final static String DONE \u003d \"done\";"},{"lineNumber":10,"author":{"gitId":"Md-Fazil"},"content":"    private final static String EVENT \u003d \"event\";"},{"lineNumber":11,"author":{"gitId":"Md-Fazil"},"content":"    private final static String DEADLINE \u003d \"deadline\";"},{"lineNumber":12,"author":{"gitId":"Md-Fazil"},"content":"    private final static String LIST \u003d \"list\";"},{"lineNumber":13,"author":{"gitId":"Md-Fazil"},"content":"    private final static String DUE \u003d \"due\";"},{"lineNumber":14,"author":{"gitId":"Md-Fazil"},"content":"    private final static String FIND \u003d \"find\";"},{"lineNumber":15,"author":{"gitId":"Md-Fazil"},"content":""},{"lineNumber":16,"author":{"gitId":"Md-Fazil"},"content":"    public static ArrayList\u003cString\u003e parseToStart(ArrayList\u003cString\u003e oldData) {"},{"lineNumber":17,"author":{"gitId":"Md-Fazil"},"content":"        ArrayList\u003cString\u003e parsedData \u003d new ArrayList\u003c\u003e();"},{"lineNumber":18,"author":{"gitId":"Md-Fazil"},"content":"        for (String s : oldData) {"},{"lineNumber":19,"author":{"gitId":"Md-Fazil"},"content":"            String[] array \u003d s.split(\" \\\\| \");"},{"lineNumber":20,"author":{"gitId":"Md-Fazil"},"content":"            if (s.contains(\"T\")) {"},{"lineNumber":21,"author":{"gitId":"Md-Fazil"},"content":"                array[0] \u003d \"todo\";"},{"lineNumber":22,"author":{"gitId":"Md-Fazil"},"content":"            } else if (s.contains(\"D\")) {"},{"lineNumber":23,"author":{"gitId":"Md-Fazil"},"content":"                array[0] \u003d \"deadline\";"},{"lineNumber":24,"author":{"gitId":"Md-Fazil"},"content":"            } else {"},{"lineNumber":25,"author":{"gitId":"Md-Fazil"},"content":"                array[0] \u003d \"event\";"},{"lineNumber":26,"author":{"gitId":"Md-Fazil"},"content":"            }"},{"lineNumber":27,"author":{"gitId":"Md-Fazil"},"content":"            String parsedString \u003d array[0];"},{"lineNumber":28,"author":{"gitId":"Md-Fazil"},"content":"            for (int i \u003d 1; i \u003c array.length; i++) {"},{"lineNumber":29,"author":{"gitId":"Md-Fazil"},"content":"                if (i \u003d\u003d 3) {"},{"lineNumber":30,"author":{"gitId":"Md-Fazil"},"content":"                    parsedString \u003d array[0].equals(\"deadline\") ? parsedString + \" /by \" + array[i] : parsedString"},{"lineNumber":31,"author":{"gitId":"Md-Fazil"},"content":"                            + \" /at \" + array[i];"},{"lineNumber":32,"author":{"gitId":"Md-Fazil"},"content":"                } else {"},{"lineNumber":33,"author":{"gitId":"Md-Fazil"},"content":"                    parsedString \u003d parsedString + \" \" + array[i];"},{"lineNumber":34,"author":{"gitId":"Md-Fazil"},"content":"                }"},{"lineNumber":35,"author":{"gitId":"Md-Fazil"},"content":"            }"},{"lineNumber":36,"author":{"gitId":"Md-Fazil"},"content":"            parsedData.add(parsedString);"},{"lineNumber":37,"author":{"gitId":"Md-Fazil"},"content":"        }"},{"lineNumber":38,"author":{"gitId":"Md-Fazil"},"content":"        return parsedData;"},{"lineNumber":39,"author":{"gitId":"Md-Fazil"},"content":"    }"},{"lineNumber":40,"author":{"gitId":"Md-Fazil"},"content":""},{"lineNumber":41,"author":{"gitId":"Md-Fazil"},"content":"    public static Command parse(String input) throws DukeException {"},{"lineNumber":42,"author":{"gitId":"Md-Fazil"},"content":"        if (input.equals(\"\")) {"},{"lineNumber":43,"author":{"gitId":"Md-Fazil"},"content":"            throw new DukeException(\"No command typed! Please key in a valid command.\");"},{"lineNumber":44,"author":{"gitId":"Md-Fazil"},"content":"        } else {"},{"lineNumber":45,"author":{"gitId":"Md-Fazil"},"content":"            String[] inputArray \u003d input.split(\" \", 2);"},{"lineNumber":46,"author":{"gitId":"Md-Fazil"},"content":"            String command \u003d inputArray[0];"},{"lineNumber":47,"author":{"gitId":"Md-Fazil"},"content":"            if (command.equals(DELETE) || command.equals(DONE) || command.equals(DUE) || command.equals(FIND)) {"},{"lineNumber":48,"author":{"gitId":"Md-Fazil"},"content":"                if (inputArray.length \u003d\u003d 1) {"},{"lineNumber":49,"author":{"gitId":"Md-Fazil"},"content":"                    throw new DukeException(\"Missing argument! Please try again.\");"},{"lineNumber":50,"author":{"gitId":"Md-Fazil"},"content":"                } else if (inputArray.length \u003e 2) {"},{"lineNumber":51,"author":{"gitId":"Md-Fazil"},"content":"                    throw new DukeException(\"Additional arguments! Please try again.\");"},{"lineNumber":52,"author":{"gitId":"Md-Fazil"},"content":"                } else {"},{"lineNumber":53,"author":{"gitId":"Md-Fazil"},"content":"                    try {"},{"lineNumber":54,"author":{"gitId":"Md-Fazil"},"content":"                        //Check if the second argument is a valid integer"},{"lineNumber":55,"author":{"gitId":"Md-Fazil"},"content":"                        if (command.equals(DONE) || command.equals(DELETE)) {"},{"lineNumber":56,"author":{"gitId":"Md-Fazil"},"content":"                            Integer.parseInt(inputArray[1]);"},{"lineNumber":57,"author":{"gitId":"Md-Fazil"},"content":"                            return command.equals(DELETE) ? new DeleteCommand(inputArray) : new DoneCommand(inputArray);"},{"lineNumber":58,"author":{"gitId":"Md-Fazil"},"content":"                        } else if (command.equals(DUE)) {"},{"lineNumber":59,"author":{"gitId":"Md-Fazil"},"content":"                            //Check if the second argument is a valid date"},{"lineNumber":60,"author":{"gitId":"Md-Fazil"},"content":"                            LocalDate.parse(inputArray[1]);"},{"lineNumber":61,"author":{"gitId":"Md-Fazil"},"content":"                            return new DueCommand(inputArray);"},{"lineNumber":62,"author":{"gitId":"Md-Fazil"},"content":"                        } else {"},{"lineNumber":63,"author":{"gitId":"Md-Fazil"},"content":"                            return new FindCommand(inputArray);"},{"lineNumber":64,"author":{"gitId":"Md-Fazil"},"content":"                        }"},{"lineNumber":65,"author":{"gitId":"Md-Fazil"},"content":"                    } catch (NumberFormatException e) {"},{"lineNumber":66,"author":{"gitId":"Md-Fazil"},"content":"                        throw new DukeException(\"Invalid command! Please key in a task number as the second argument.\");"},{"lineNumber":67,"author":{"gitId":"Md-Fazil"},"content":"                    } catch (DateTimeParseException e) {"},{"lineNumber":68,"author":{"gitId":"Md-Fazil"},"content":"                        throw new DukeException(\"Invalid date format! Please key in date in the form yyyy-mm-dd.\");"},{"lineNumber":69,"author":{"gitId":"Md-Fazil"},"content":"                    }"},{"lineNumber":70,"author":{"gitId":"Md-Fazil"},"content":"                }"},{"lineNumber":71,"author":{"gitId":"Md-Fazil"},"content":"            } else if (command.equals(LIST)) {"},{"lineNumber":72,"author":{"gitId":"Md-Fazil"},"content":"                if (inputArray.length \u003d\u003d 1) {"},{"lineNumber":73,"author":{"gitId":"Md-Fazil"},"content":"                    return new ListCommand(inputArray);"},{"lineNumber":74,"author":{"gitId":"Md-Fazil"},"content":"                } else {"},{"lineNumber":75,"author":{"gitId":"Md-Fazil"},"content":"                    throw new DukeException(\"Additional arguments! Please key in only the command.\");"},{"lineNumber":76,"author":{"gitId":"Md-Fazil"},"content":"                }"},{"lineNumber":77,"author":{"gitId":"Md-Fazil"},"content":"            } else if (command.equals(EVENT) || command.equals(DEADLINE) || command.equals(TODO)) {"},{"lineNumber":78,"author":{"gitId":"Md-Fazil"},"content":"                if (inputArray.length \u003d\u003d 1) {"},{"lineNumber":79,"author":{"gitId":"Md-Fazil"},"content":"                    throw new DukeException(\"Incomplete command! Please key in the task description.\");"},{"lineNumber":80,"author":{"gitId":"Md-Fazil"},"content":"                } else {"},{"lineNumber":81,"author":{"gitId":"Md-Fazil"},"content":"                    String description \u003d inputArray[1];"},{"lineNumber":82,"author":{"gitId":"Md-Fazil"},"content":"                    if (command.equals(TODO)) {"},{"lineNumber":83,"author":{"gitId":"Md-Fazil"},"content":"                        return new AddCommand(inputArray);"},{"lineNumber":84,"author":{"gitId":"Md-Fazil"},"content":"                    } else if ((command.equals(EVENT) \u0026\u0026 description.contains(\"/at\")) ||"},{"lineNumber":85,"author":{"gitId":"Md-Fazil"},"content":"                            (command.equals(DEADLINE) \u0026\u0026 description.contains(\"by\"))) {"},{"lineNumber":86,"author":{"gitId":"Md-Fazil"},"content":"                        String[] arr \u003d command.equals(EVENT) ? description.split(\"/at\", 2) :"},{"lineNumber":87,"author":{"gitId":"Md-Fazil"},"content":"                                description.split(\"/by\", 2);"},{"lineNumber":88,"author":{"gitId":"Md-Fazil"},"content":"                        if (arr.length \u003d\u003d 2) {"},{"lineNumber":89,"author":{"gitId":"Md-Fazil"},"content":"                            return new AddCommand(inputArray);"},{"lineNumber":90,"author":{"gitId":"Md-Fazil"},"content":"                        } else {"},{"lineNumber":91,"author":{"gitId":"Md-Fazil"},"content":"                            throw new DukeException(\"Invalid command! Please try again.\");"},{"lineNumber":92,"author":{"gitId":"Md-Fazil"},"content":"                        }"},{"lineNumber":93,"author":{"gitId":"Md-Fazil"},"content":"                    } else {"},{"lineNumber":94,"author":{"gitId":"Md-Fazil"},"content":"                        throw new DukeException(\"Invalid command! Please try again.\");"},{"lineNumber":95,"author":{"gitId":"Md-Fazil"},"content":"                    }"},{"lineNumber":96,"author":{"gitId":"Md-Fazil"},"content":"                }"},{"lineNumber":97,"author":{"gitId":"Md-Fazil"},"content":"            } else if (command.equals(\"bye\")) {"},{"lineNumber":98,"author":{"gitId":"Md-Fazil"},"content":"                return new ByeCommand(inputArray);"},{"lineNumber":99,"author":{"gitId":"Md-Fazil"},"content":"            }  else {"},{"lineNumber":100,"author":{"gitId":"Md-Fazil"},"content":"                throw new DukeException(\"Invalid command! Please try again.\");"},{"lineNumber":101,"author":{"gitId":"Md-Fazil"},"content":"            }"},{"lineNumber":102,"author":{"gitId":"Md-Fazil"},"content":"        }"},{"lineNumber":103,"author":{"gitId":"Md-Fazil"},"content":"    }"},{"lineNumber":104,"author":{"gitId":"Md-Fazil"},"content":"}"}],"authorContributionMap":{"Md-Fazil":104}},{"path":"src/main/java/duke/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Md-Fazil"},"content":"package duke;"},{"lineNumber":2,"author":{"gitId":"Md-Fazil"},"content":"import java.io.File;"},{"lineNumber":3,"author":{"gitId":"Md-Fazil"},"content":"import java.io.FileNotFoundException;"},{"lineNumber":4,"author":{"gitId":"Md-Fazil"},"content":"import java.io.FileWriter;"},{"lineNumber":5,"author":{"gitId":"Md-Fazil"},"content":"import java.io.IOException;"},{"lineNumber":6,"author":{"gitId":"Md-Fazil"},"content":"import java.util.ArrayList;"},{"lineNumber":7,"author":{"gitId":"Md-Fazil"},"content":"import java.util.Scanner;"},{"lineNumber":8,"author":{"gitId":"Md-Fazil"},"content":""},{"lineNumber":9,"author":{"gitId":"Md-Fazil"},"content":"/**"},{"lineNumber":10,"author":{"gitId":"Md-Fazil"},"content":" * Represents a class that stores and real files stored in the hard disk."},{"lineNumber":11,"author":{"gitId":"Md-Fazil"},"content":" */"},{"lineNumber":12,"author":{"gitId":"Md-Fazil"},"content":"public class Storage{"},{"lineNumber":13,"author":{"gitId":"Md-Fazil"},"content":""},{"lineNumber":14,"author":{"gitId":"Md-Fazil"},"content":"    private String fileUrl;"},{"lineNumber":15,"author":{"gitId":"Md-Fazil"},"content":""},{"lineNumber":16,"author":{"gitId":"Md-Fazil"},"content":"    Storage(String fileUrl) {"},{"lineNumber":17,"author":{"gitId":"Md-Fazil"},"content":"        this.fileUrl \u003d fileUrl;"},{"lineNumber":18,"author":{"gitId":"Md-Fazil"},"content":"    }"},{"lineNumber":19,"author":{"gitId":"Md-Fazil"},"content":""},{"lineNumber":20,"author":{"gitId":"Md-Fazil"},"content":"    /**"},{"lineNumber":21,"author":{"gitId":"Md-Fazil"},"content":"     * Loads all tasks stored in the file at the specified fileUrl."},{"lineNumber":22,"author":{"gitId":"Md-Fazil"},"content":"     *"},{"lineNumber":23,"author":{"gitId":"Md-Fazil"},"content":"     * @return ArrayList\u003cString\u003e List containing all previously stored tasks."},{"lineNumber":24,"author":{"gitId":"Md-Fazil"},"content":"     * @throws FileNotFoundException If the file cannot be found at the specified file url."},{"lineNumber":25,"author":{"gitId":"Md-Fazil"},"content":"     */"},{"lineNumber":26,"author":{"gitId":"Md-Fazil"},"content":"    public ArrayList\u003cString\u003e load() throws FileNotFoundException {"},{"lineNumber":27,"author":{"gitId":"Md-Fazil"},"content":"        File storageFile \u003d new File(fileUrl);"},{"lineNumber":28,"author":{"gitId":"Md-Fazil"},"content":"        Scanner sc \u003d new Scanner(storageFile);"},{"lineNumber":29,"author":{"gitId":"Md-Fazil"},"content":"        ArrayList\u003cString\u003e data \u003d new ArrayList\u003c\u003e();"},{"lineNumber":30,"author":{"gitId":"Md-Fazil"},"content":"        while (sc.hasNextLine()) {"},{"lineNumber":31,"author":{"gitId":"Md-Fazil"},"content":"            data.add(sc.nextLine());"},{"lineNumber":32,"author":{"gitId":"Md-Fazil"},"content":"        }"},{"lineNumber":33,"author":{"gitId":"Md-Fazil"},"content":"        return data;"},{"lineNumber":34,"author":{"gitId":"Md-Fazil"},"content":"    }"},{"lineNumber":35,"author":{"gitId":"Md-Fazil"},"content":""},{"lineNumber":36,"author":{"gitId":"Md-Fazil"},"content":"    /**"},{"lineNumber":37,"author":{"gitId":"Md-Fazil"},"content":"     * Stores and writes all tasks in the input list to file at the specified fileUrl."},{"lineNumber":38,"author":{"gitId":"Md-Fazil"},"content":"     *"},{"lineNumber":39,"author":{"gitId":"Md-Fazil"},"content":"     * @param taskList ArrayList\u003cString\u003e containing all current tasks."},{"lineNumber":40,"author":{"gitId":"Md-Fazil"},"content":"     * @throws IOException If the tasks strings are not in the correct storage format."},{"lineNumber":41,"author":{"gitId":"Md-Fazil"},"content":"     */"},{"lineNumber":42,"author":{"gitId":"Md-Fazil"},"content":"    public void store(ArrayList\u003cString\u003e taskList) throws IOException {"},{"lineNumber":43,"author":{"gitId":"Md-Fazil"},"content":"        FileWriter fw \u003d new FileWriter(fileUrl);"},{"lineNumber":44,"author":{"gitId":"Md-Fazil"},"content":"        String data \u003d taskList.size() \u003d\u003d 0 ? \"\" : taskList.get(0);"},{"lineNumber":45,"author":{"gitId":"Md-Fazil"},"content":"        for (int i \u003d 1; i \u003c taskList.size(); i++) {"},{"lineNumber":46,"author":{"gitId":"Md-Fazil"},"content":"            data +\u003d System.lineSeparator() + taskList.get(i);"},{"lineNumber":47,"author":{"gitId":"Md-Fazil"},"content":"        }"},{"lineNumber":48,"author":{"gitId":"Md-Fazil"},"content":"        fw.write(data);"},{"lineNumber":49,"author":{"gitId":"Md-Fazil"},"content":"        fw.close();"},{"lineNumber":50,"author":{"gitId":"Md-Fazil"},"content":"    }"},{"lineNumber":51,"author":{"gitId":"Md-Fazil"},"content":""},{"lineNumber":52,"author":{"gitId":"Md-Fazil"},"content":"}"},{"lineNumber":53,"author":{"gitId":"Md-Fazil"},"content":"/*"},{"lineNumber":54,"author":{"gitId":"Md-Fazil"},"content":"todo"},{"lineNumber":55,"author":{"gitId":"Md-Fazil"},"content":"Handling file/folder not found exception"},{"lineNumber":56,"author":{"gitId":"Md-Fazil"},"content":"Handling IOException"},{"lineNumber":57,"author":{"gitId":"Md-Fazil"},"content":"*/"}],"authorContributionMap":{"Md-Fazil":57}},{"path":"src/main/java/duke/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Md-Fazil"},"content":"package duke;"},{"lineNumber":2,"author":{"gitId":"Md-Fazil"},"content":"import java.time.LocalDate;"},{"lineNumber":3,"author":{"gitId":"Md-Fazil"},"content":""},{"lineNumber":4,"author":{"gitId":"Md-Fazil"},"content":"/**"},{"lineNumber":5,"author":{"gitId":"Md-Fazil"},"content":" * Represents a task that has to be done."},{"lineNumber":6,"author":{"gitId":"Md-Fazil"},"content":" */"},{"lineNumber":7,"author":{"gitId":"Md-Fazil"},"content":"public class Task{"},{"lineNumber":8,"author":{"gitId":"Md-Fazil"},"content":""},{"lineNumber":9,"author":{"gitId":"Md-Fazil"},"content":"    protected String description;"},{"lineNumber":10,"author":{"gitId":"Md-Fazil"},"content":"    protected boolean isCompleted;"},{"lineNumber":11,"author":{"gitId":"Md-Fazil"},"content":""},{"lineNumber":12,"author":{"gitId":"Md-Fazil"},"content":"    public Task(String description, boolean isCompleted) {"},{"lineNumber":13,"author":{"gitId":"Md-Fazil"},"content":"        this.description \u003d description;"},{"lineNumber":14,"author":{"gitId":"Md-Fazil"},"content":"        this.isCompleted \u003d isCompleted;"},{"lineNumber":15,"author":{"gitId":"Md-Fazil"},"content":"    }"},{"lineNumber":16,"author":{"gitId":"Md-Fazil"},"content":""},{"lineNumber":17,"author":{"gitId":"Md-Fazil"},"content":"    public void markComplete() {"},{"lineNumber":18,"author":{"gitId":"Md-Fazil"},"content":"        this.isCompleted \u003d true;"},{"lineNumber":19,"author":{"gitId":"Md-Fazil"},"content":"    }"},{"lineNumber":20,"author":{"gitId":"Md-Fazil"},"content":""},{"lineNumber":21,"author":{"gitId":"Md-Fazil"},"content":"    /**"},{"lineNumber":22,"author":{"gitId":"Md-Fazil"},"content":"     * Returns formatted string of the task details to store in harddisk file."},{"lineNumber":23,"author":{"gitId":"Md-Fazil"},"content":"     * @return Formatted string."},{"lineNumber":24,"author":{"gitId":"Md-Fazil"},"content":"     */"},{"lineNumber":25,"author":{"gitId":"Md-Fazil"},"content":"    public String getFormattedData() {"},{"lineNumber":26,"author":{"gitId":"Md-Fazil"},"content":"        String status \u003d isCompleted ? \"1\" : \"0\";"},{"lineNumber":27,"author":{"gitId":"Md-Fazil"},"content":"        return status + \" | \" + description;"},{"lineNumber":28,"author":{"gitId":"Md-Fazil"},"content":"    }"},{"lineNumber":29,"author":{"gitId":"Md-Fazil"},"content":""},{"lineNumber":30,"author":{"gitId":"Md-Fazil"},"content":"    public LocalDate getTaskDate() {"},{"lineNumber":31,"author":{"gitId":"Md-Fazil"},"content":"        return null;"},{"lineNumber":32,"author":{"gitId":"Md-Fazil"},"content":"    }"},{"lineNumber":33,"author":{"gitId":"Md-Fazil"},"content":""},{"lineNumber":34,"author":{"gitId":"Md-Fazil"},"content":"    /**"},{"lineNumber":35,"author":{"gitId":"Md-Fazil"},"content":"     * Returns description and status of the task."},{"lineNumber":36,"author":{"gitId":"Md-Fazil"},"content":"     * @return String."},{"lineNumber":37,"author":{"gitId":"Md-Fazil"},"content":"     */"},{"lineNumber":38,"author":{"gitId":"Md-Fazil"},"content":"    @Override"},{"lineNumber":39,"author":{"gitId":"Md-Fazil"},"content":"    public String toString() {"},{"lineNumber":40,"author":{"gitId":"Md-Fazil"},"content":"        String status \u003d isCompleted ? \"X\" : \"\";"},{"lineNumber":41,"author":{"gitId":"Md-Fazil"},"content":"        return \"[\" + status + \"] \" + description;"},{"lineNumber":42,"author":{"gitId":"Md-Fazil"},"content":"    }"},{"lineNumber":43,"author":{"gitId":"Md-Fazil"},"content":"}"}],"authorContributionMap":{"Md-Fazil":43}},{"path":"src/main/java/duke/TaskManager.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Md-Fazil"},"content":"package duke;"},{"lineNumber":2,"author":{"gitId":"Md-Fazil"},"content":"import java.time.LocalDate;"},{"lineNumber":3,"author":{"gitId":"Md-Fazil"},"content":"import java.util.ArrayList;"},{"lineNumber":4,"author":{"gitId":"Md-Fazil"},"content":""},{"lineNumber":5,"author":{"gitId":"Md-Fazil"},"content":"public class TaskManager{"},{"lineNumber":6,"author":{"gitId":"Md-Fazil"},"content":"    private ArrayList\u003cTask\u003e list \u003d new ArrayList\u003c\u003e(100);"},{"lineNumber":7,"author":{"gitId":"Md-Fazil"},"content":"    private final static String TODO \u003d \"todo\";"},{"lineNumber":8,"author":{"gitId":"Md-Fazil"},"content":"    private final static String DELETE \u003d \"delete\";"},{"lineNumber":9,"author":{"gitId":"Md-Fazil"},"content":"    private final static String DONE \u003d \"done\";"},{"lineNumber":10,"author":{"gitId":"Md-Fazil"},"content":"    private final static String EVENT \u003d \"event\";"},{"lineNumber":11,"author":{"gitId":"Md-Fazil"},"content":"    private final static String DEADLINE \u003d \"deadline\";"},{"lineNumber":12,"author":{"gitId":"Md-Fazil"},"content":"    private final static String LIST \u003d \"list\";"},{"lineNumber":13,"author":{"gitId":"Md-Fazil"},"content":"    private final static String DUE \u003d \"due\";"},{"lineNumber":14,"author":{"gitId":"Md-Fazil"},"content":""},{"lineNumber":15,"author":{"gitId":"Md-Fazil"},"content":"    public Task add(String type, String task, boolean isCompleted)  {"},{"lineNumber":16,"author":{"gitId":"Md-Fazil"},"content":"        if (type.equals(TODO)) {"},{"lineNumber":17,"author":{"gitId":"Md-Fazil"},"content":"            Task newTask \u003d new ToDo(task, isCompleted);"},{"lineNumber":18,"author":{"gitId":"Md-Fazil"},"content":"            list.add(newTask);"},{"lineNumber":19,"author":{"gitId":"Md-Fazil"},"content":"            return newTask;"},{"lineNumber":20,"author":{"gitId":"Md-Fazil"},"content":"        } else {"},{"lineNumber":21,"author":{"gitId":"Md-Fazil"},"content":"            String description \u003d task.split(\"/\")[0];"},{"lineNumber":22,"author":{"gitId":"Md-Fazil"},"content":"            String deadline \u003d task.split(\"/\", 2)[1].split(\" \", 2)[1];"},{"lineNumber":23,"author":{"gitId":"Md-Fazil"},"content":"            if (type.equals(DEADLINE)) {"},{"lineNumber":24,"author":{"gitId":"Md-Fazil"},"content":"                Task newTask \u003d new Deadline(description, isCompleted, deadline);"},{"lineNumber":25,"author":{"gitId":"Md-Fazil"},"content":"                list.add(newTask);"},{"lineNumber":26,"author":{"gitId":"Md-Fazil"},"content":"                return newTask;"},{"lineNumber":27,"author":{"gitId":"Md-Fazil"},"content":"            } else {"},{"lineNumber":28,"author":{"gitId":"Md-Fazil"},"content":"                Task newTask \u003d new Event(description, isCompleted, deadline);"},{"lineNumber":29,"author":{"gitId":"Md-Fazil"},"content":"                list.add(newTask);"},{"lineNumber":30,"author":{"gitId":"Md-Fazil"},"content":"                return newTask;"},{"lineNumber":31,"author":{"gitId":"Md-Fazil"},"content":"            }"},{"lineNumber":32,"author":{"gitId":"Md-Fazil"},"content":"        }"},{"lineNumber":33,"author":{"gitId":"Md-Fazil"},"content":"    }"},{"lineNumber":34,"author":{"gitId":"Md-Fazil"},"content":""},{"lineNumber":35,"author":{"gitId":"Md-Fazil"},"content":"    public Task delete(int taskId) throws DukeException {"},{"lineNumber":36,"author":{"gitId":"Md-Fazil"},"content":"        if (taskId \u003c\u003d list.size() \u0026\u0026 taskId \u003e\u003d 1) {"},{"lineNumber":37,"author":{"gitId":"Md-Fazil"},"content":"            Task deletedTask \u003d list.get(taskId - 1);"},{"lineNumber":38,"author":{"gitId":"Md-Fazil"},"content":"            list.remove(taskId - 1);"},{"lineNumber":39,"author":{"gitId":"Md-Fazil"},"content":"            return deletedTask;"},{"lineNumber":40,"author":{"gitId":"Md-Fazil"},"content":"        } else {"},{"lineNumber":41,"author":{"gitId":"Md-Fazil"},"content":"            throw new DukeException(\"Invalid task number. You only have \" + list.size() + \" tasks in the list.\");"},{"lineNumber":42,"author":{"gitId":"Md-Fazil"},"content":"        }"},{"lineNumber":43,"author":{"gitId":"Md-Fazil"},"content":"    }"},{"lineNumber":44,"author":{"gitId":"Md-Fazil"},"content":""},{"lineNumber":45,"author":{"gitId":"Md-Fazil"},"content":"    public Task done(int taskId) throws DukeException {"},{"lineNumber":46,"author":{"gitId":"Md-Fazil"},"content":"        if (taskId \u003c\u003d list.size() \u0026\u0026 taskId \u003e\u003d 1) {"},{"lineNumber":47,"author":{"gitId":"Md-Fazil"},"content":"            Task completedTask \u003d list.get(taskId - 1);"},{"lineNumber":48,"author":{"gitId":"Md-Fazil"},"content":"            completedTask.markComplete();"},{"lineNumber":49,"author":{"gitId":"Md-Fazil"},"content":"            return completedTask;"},{"lineNumber":50,"author":{"gitId":"Md-Fazil"},"content":"        } else {"},{"lineNumber":51,"author":{"gitId":"Md-Fazil"},"content":"            throw new DukeException(\"Invalid task number. You only have \" + list.size() + \" tasks in the list.\");"},{"lineNumber":52,"author":{"gitId":"Md-Fazil"},"content":"        }"},{"lineNumber":53,"author":{"gitId":"Md-Fazil"},"content":"    }"},{"lineNumber":54,"author":{"gitId":"Md-Fazil"},"content":""},{"lineNumber":55,"author":{"gitId":"Md-Fazil"},"content":"    public ArrayList\u003cTask\u003e getTasksOn(String date) {"},{"lineNumber":56,"author":{"gitId":"Md-Fazil"},"content":"        LocalDate currentDate \u003d LocalDate.parse(date);"},{"lineNumber":57,"author":{"gitId":"Md-Fazil"},"content":"        System.out.println(\"Here are the tasks due on \" + date + \": \" );"},{"lineNumber":58,"author":{"gitId":"Md-Fazil"},"content":"        ArrayList\u003cTask\u003e dueList \u003d new ArrayList\u003c\u003e();"},{"lineNumber":59,"author":{"gitId":"Md-Fazil"},"content":"        for(Task task : list) {"},{"lineNumber":60,"author":{"gitId":"Md-Fazil"},"content":"            if(task.getTaskDate().equals(currentDate)) {"},{"lineNumber":61,"author":{"gitId":"Md-Fazil"},"content":"                dueList.add(task);"},{"lineNumber":62,"author":{"gitId":"Md-Fazil"},"content":"            }"},{"lineNumber":63,"author":{"gitId":"Md-Fazil"},"content":"        }"},{"lineNumber":64,"author":{"gitId":"Md-Fazil"},"content":"        return dueList;"},{"lineNumber":65,"author":{"gitId":"Md-Fazil"},"content":"    }"},{"lineNumber":66,"author":{"gitId":"Md-Fazil"},"content":""},{"lineNumber":67,"author":{"gitId":"Md-Fazil"},"content":"    public void upload(ArrayList\u003cString\u003e storedData) {"},{"lineNumber":68,"author":{"gitId":"Md-Fazil"},"content":"        for (String task : storedData) {"},{"lineNumber":69,"author":{"gitId":"Md-Fazil"},"content":"            String[] arr \u003d task.split(\" \", 3);"},{"lineNumber":70,"author":{"gitId":"Md-Fazil"},"content":"            String type \u003d arr[0];"},{"lineNumber":71,"author":{"gitId":"Md-Fazil"},"content":"            boolean isCompleted \u003d arr[1].equals(\"1\");"},{"lineNumber":72,"author":{"gitId":"Md-Fazil"},"content":"            add(type, arr[2], isCompleted);"},{"lineNumber":73,"author":{"gitId":"Md-Fazil"},"content":"        }"},{"lineNumber":74,"author":{"gitId":"Md-Fazil"},"content":"    }"},{"lineNumber":75,"author":{"gitId":"Md-Fazil"},"content":""},{"lineNumber":76,"author":{"gitId":"Md-Fazil"},"content":"    public ArrayList\u003cString\u003e retrieveTasksforStorage() {"},{"lineNumber":77,"author":{"gitId":"Md-Fazil"},"content":"        ArrayList\u003cString\u003e taskList \u003d new ArrayList\u003c\u003e();"},{"lineNumber":78,"author":{"gitId":"Md-Fazil"},"content":"        for (Task task : list) {"},{"lineNumber":79,"author":{"gitId":"Md-Fazil"},"content":"            taskList.add(task.getFormattedData());"},{"lineNumber":80,"author":{"gitId":"Md-Fazil"},"content":"        }"},{"lineNumber":81,"author":{"gitId":"Md-Fazil"},"content":"        return taskList;"},{"lineNumber":82,"author":{"gitId":"Md-Fazil"},"content":"    }"},{"lineNumber":83,"author":{"gitId":"Md-Fazil"},"content":""},{"lineNumber":84,"author":{"gitId":"Md-Fazil"},"content":"    public int getNumOfTasks() {"},{"lineNumber":85,"author":{"gitId":"Md-Fazil"},"content":"        return list.size();"},{"lineNumber":86,"author":{"gitId":"Md-Fazil"},"content":"    }"},{"lineNumber":87,"author":{"gitId":"Md-Fazil"},"content":""},{"lineNumber":88,"author":{"gitId":"Md-Fazil"},"content":"    public ArrayList\u003cTask\u003e getList() {"},{"lineNumber":89,"author":{"gitId":"Md-Fazil"},"content":"        return this.list;"},{"lineNumber":90,"author":{"gitId":"Md-Fazil"},"content":"    }"},{"lineNumber":91,"author":{"gitId":"Md-Fazil"},"content":""},{"lineNumber":92,"author":{"gitId":"Md-Fazil"},"content":"    public ArrayList\u003cTask\u003e retrieveMatchingTasks(String keyword) {"},{"lineNumber":93,"author":{"gitId":"Md-Fazil"},"content":"        ArrayList\u003cTask\u003e taskList \u003d new ArrayList\u003c\u003e();"},{"lineNumber":94,"author":{"gitId":"Md-Fazil"},"content":"        for (Task task : list) {"},{"lineNumber":95,"author":{"gitId":"Md-Fazil"},"content":"            if (task.description.contains(keyword)) {"},{"lineNumber":96,"author":{"gitId":"Md-Fazil"},"content":"                taskList.add(task);"},{"lineNumber":97,"author":{"gitId":"Md-Fazil"},"content":"            }"},{"lineNumber":98,"author":{"gitId":"Md-Fazil"},"content":"        }"},{"lineNumber":99,"author":{"gitId":"Md-Fazil"},"content":"        return taskList;"},{"lineNumber":100,"author":{"gitId":"Md-Fazil"},"content":"    }"},{"lineNumber":101,"author":{"gitId":"Md-Fazil"},"content":"}"}],"authorContributionMap":{"Md-Fazil":101}},{"path":"src/main/java/duke/ToDo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Md-Fazil"},"content":"package duke;"},{"lineNumber":2,"author":{"gitId":"Md-Fazil"},"content":"public class ToDo extends Task {"},{"lineNumber":3,"author":{"gitId":"Md-Fazil"},"content":""},{"lineNumber":4,"author":{"gitId":"Md-Fazil"},"content":"    /**"},{"lineNumber":5,"author":{"gitId":"Md-Fazil"},"content":"     * Represents a task that has no deadline."},{"lineNumber":6,"author":{"gitId":"Md-Fazil"},"content":"     */"},{"lineNumber":7,"author":{"gitId":"Md-Fazil"},"content":"    public ToDo(String description, boolean isCompleted) {"},{"lineNumber":8,"author":{"gitId":"Md-Fazil"},"content":"        super(description, isCompleted);"},{"lineNumber":9,"author":{"gitId":"Md-Fazil"},"content":"    }"},{"lineNumber":10,"author":{"gitId":"Md-Fazil"},"content":""},{"lineNumber":11,"author":{"gitId":"Md-Fazil"},"content":"    /**"},{"lineNumber":12,"author":{"gitId":"Md-Fazil"},"content":"     * Returns formatted string of the todo task details to store in harddisk file."},{"lineNumber":13,"author":{"gitId":"Md-Fazil"},"content":"     * @return Formatted string."},{"lineNumber":14,"author":{"gitId":"Md-Fazil"},"content":"     */"},{"lineNumber":15,"author":{"gitId":"Md-Fazil"},"content":"    @Override"},{"lineNumber":16,"author":{"gitId":"Md-Fazil"},"content":"    public String getFormattedData() {"},{"lineNumber":17,"author":{"gitId":"Md-Fazil"},"content":"        return  \"T | \" + super.getFormattedData();"},{"lineNumber":18,"author":{"gitId":"Md-Fazil"},"content":"    }"},{"lineNumber":19,"author":{"gitId":"Md-Fazil"},"content":""},{"lineNumber":20,"author":{"gitId":"Md-Fazil"},"content":"    /**"},{"lineNumber":21,"author":{"gitId":"Md-Fazil"},"content":"     * Returns description of the todo task and status of the task."},{"lineNumber":22,"author":{"gitId":"Md-Fazil"},"content":"     * @return String."},{"lineNumber":23,"author":{"gitId":"Md-Fazil"},"content":"     */"},{"lineNumber":24,"author":{"gitId":"Md-Fazil"},"content":"    @Override"},{"lineNumber":25,"author":{"gitId":"Md-Fazil"},"content":"    public String toString() {"},{"lineNumber":26,"author":{"gitId":"Md-Fazil"},"content":"        return \"[T]\" + super.toString();"},{"lineNumber":27,"author":{"gitId":"Md-Fazil"},"content":"    }"},{"lineNumber":28,"author":{"gitId":"Md-Fazil"},"content":"}"}],"authorContributionMap":{"Md-Fazil":28}},{"path":"src/main/java/duke/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Md-Fazil"},"content":"package duke;"},{"lineNumber":2,"author":{"gitId":"Md-Fazil"},"content":"import java.time.LocalDate;"},{"lineNumber":3,"author":{"gitId":"Md-Fazil"},"content":"import java.util.ArrayList;"},{"lineNumber":4,"author":{"gitId":"Md-Fazil"},"content":""},{"lineNumber":5,"author":{"gitId":"Md-Fazil"},"content":"public class Ui {"},{"lineNumber":6,"author":{"gitId":"Md-Fazil"},"content":"    public void showWelcome() {"},{"lineNumber":7,"author":{"gitId":"Md-Fazil"},"content":"        String logo \u003d \" ____        _        \\n\""},{"lineNumber":8,"author":{"gitId":"Md-Fazil"},"content":"                + \"|  _ \\\\ _   _| | _____ \\n\""},{"lineNumber":9,"author":{"gitId":"Md-Fazil"},"content":"                + \"| | | | | | | |/ / _ \\\\\\n\""},{"lineNumber":10,"author":{"gitId":"Md-Fazil"},"content":"                + \"| |_| | |_| |   \u003c  __/\\n\""},{"lineNumber":11,"author":{"gitId":"Md-Fazil"},"content":"                + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\";"},{"lineNumber":12,"author":{"gitId":"Md-Fazil"},"content":"        System.out.println(\"Hello from\\n\" + logo + \"\\n\" + \"What can I do for you?\");"},{"lineNumber":13,"author":{"gitId":"Md-Fazil"},"content":"        System.out.println(\"\");"},{"lineNumber":14,"author":{"gitId":"Md-Fazil"},"content":"    }"},{"lineNumber":15,"author":{"gitId":"Md-Fazil"},"content":""},{"lineNumber":16,"author":{"gitId":"Md-Fazil"},"content":"    public void showError(String error) {"},{"lineNumber":17,"author":{"gitId":"Md-Fazil"},"content":"        System.out.println(error);"},{"lineNumber":18,"author":{"gitId":"Md-Fazil"},"content":"        System.out.println(\"\");"},{"lineNumber":19,"author":{"gitId":"Md-Fazil"},"content":"    }"},{"lineNumber":20,"author":{"gitId":"Md-Fazil"},"content":""},{"lineNumber":21,"author":{"gitId":"Md-Fazil"},"content":"    public void showAddedTask(Task task, int numOfTasks) {"},{"lineNumber":22,"author":{"gitId":"Md-Fazil"},"content":"        System.out.println(\"Got it. I\u0027ve added this task:\\n\" + task +"},{"lineNumber":23,"author":{"gitId":"Md-Fazil"},"content":"                \"\\nNow you have \" + numOfTasks + \" tasks in the list.\");"},{"lineNumber":24,"author":{"gitId":"Md-Fazil"},"content":"        System.out.println(\"\");"},{"lineNumber":25,"author":{"gitId":"Md-Fazil"},"content":"    }"},{"lineNumber":26,"author":{"gitId":"Md-Fazil"},"content":""},{"lineNumber":27,"author":{"gitId":"Md-Fazil"},"content":"    public void showRemovedTask(Task task, int numOfTasks) {"},{"lineNumber":28,"author":{"gitId":"Md-Fazil"},"content":"        System.out.println(\"Noted. I\u0027ve removed this task:\\n\" + task +"},{"lineNumber":29,"author":{"gitId":"Md-Fazil"},"content":"                \"\\nNow you have \" + numOfTasks + \" tasks in the list.\");"},{"lineNumber":30,"author":{"gitId":"Md-Fazil"},"content":"        System.out.println(\"\");"},{"lineNumber":31,"author":{"gitId":"Md-Fazil"},"content":"    }"},{"lineNumber":32,"author":{"gitId":"Md-Fazil"},"content":""},{"lineNumber":33,"author":{"gitId":"Md-Fazil"},"content":"    public void showDoneTask(Task task) {"},{"lineNumber":34,"author":{"gitId":"Md-Fazil"},"content":"        System.out.println(\"Nice! I\u0027ve marked this task as done:\\n\" + task);"},{"lineNumber":35,"author":{"gitId":"Md-Fazil"},"content":"        System.out.println(\"\");"},{"lineNumber":36,"author":{"gitId":"Md-Fazil"},"content":"    }"},{"lineNumber":37,"author":{"gitId":"Md-Fazil"},"content":""},{"lineNumber":38,"author":{"gitId":"Md-Fazil"},"content":"    public void showAllTasks(ArrayList\u003cTask\u003e list) {"},{"lineNumber":39,"author":{"gitId":"Md-Fazil"},"content":"        if (list.size() \u003d\u003d 0) {"},{"lineNumber":40,"author":{"gitId":"Md-Fazil"},"content":"            System.out.println(\"There are no tasks in your list.\");"},{"lineNumber":41,"author":{"gitId":"Md-Fazil"},"content":"        } else {"},{"lineNumber":42,"author":{"gitId":"Md-Fazil"},"content":"            System.out.println(\"Here are the tasks in your list:\");"},{"lineNumber":43,"author":{"gitId":"Md-Fazil"},"content":"            for (int i \u003d 0; i \u003c list.size(); i++) {"},{"lineNumber":44,"author":{"gitId":"Md-Fazil"},"content":"                System.out.println((i + 1) + \".\" + list.get(i));"},{"lineNumber":45,"author":{"gitId":"Md-Fazil"},"content":"            }"},{"lineNumber":46,"author":{"gitId":"Md-Fazil"},"content":"            System.out.println(\"\");"},{"lineNumber":47,"author":{"gitId":"Md-Fazil"},"content":"        }"},{"lineNumber":48,"author":{"gitId":"Md-Fazil"},"content":"    }"},{"lineNumber":49,"author":{"gitId":"Md-Fazil"},"content":""},{"lineNumber":50,"author":{"gitId":"Md-Fazil"},"content":"    public void showByeMessage() {"},{"lineNumber":51,"author":{"gitId":"Md-Fazil"},"content":"        System.out.println(\"Bye. Hope to see you again soon!\");"},{"lineNumber":52,"author":{"gitId":"Md-Fazil"},"content":"    }"},{"lineNumber":53,"author":{"gitId":"Md-Fazil"},"content":""},{"lineNumber":54,"author":{"gitId":"Md-Fazil"},"content":"    public void showDueTasks(ArrayList\u003cTask\u003e list, String date) {"},{"lineNumber":55,"author":{"gitId":"Md-Fazil"},"content":"        LocalDate currentDate \u003d LocalDate.parse(date);"},{"lineNumber":56,"author":{"gitId":"Md-Fazil"},"content":"        System.out.println(\"Here are the tasks due on \" + currentDate + \": \" );"},{"lineNumber":57,"author":{"gitId":"Md-Fazil"},"content":"        for (int i \u003d 0; i \u003c list.size(); i++) {"},{"lineNumber":58,"author":{"gitId":"Md-Fazil"},"content":"            System.out.println((i + 1) + \". \" + list.get(i));"},{"lineNumber":59,"author":{"gitId":"Md-Fazil"},"content":"        }"},{"lineNumber":60,"author":{"gitId":"Md-Fazil"},"content":"        System.out.println(\"\");"},{"lineNumber":61,"author":{"gitId":"Md-Fazil"},"content":"    }"},{"lineNumber":62,"author":{"gitId":"Md-Fazil"},"content":""},{"lineNumber":63,"author":{"gitId":"Md-Fazil"},"content":"    public void showMatchingTasks(ArrayList\u003cTask\u003e list) {"},{"lineNumber":64,"author":{"gitId":"Md-Fazil"},"content":"        if (list.size() \u003d\u003d 0) {"},{"lineNumber":65,"author":{"gitId":"Md-Fazil"},"content":"            System.out.println(\"Sorry! There are no matching task.\");"},{"lineNumber":66,"author":{"gitId":"Md-Fazil"},"content":"        } else {"},{"lineNumber":67,"author":{"gitId":"Md-Fazil"},"content":"            System.out.println(\"Here are the matching tasks in your list: \");"},{"lineNumber":68,"author":{"gitId":"Md-Fazil"},"content":"            for (int i \u003d 0; i \u003c list.size(); i++) {"},{"lineNumber":69,"author":{"gitId":"Md-Fazil"},"content":"                System.out.println((i + 1) + \". \" + list.get(i));"},{"lineNumber":70,"author":{"gitId":"Md-Fazil"},"content":"            }"},{"lineNumber":71,"author":{"gitId":"Md-Fazil"},"content":"        }"},{"lineNumber":72,"author":{"gitId":"Md-Fazil"},"content":"        System.out.println(\"\");"},{"lineNumber":73,"author":{"gitId":"Md-Fazil"},"content":"    }"},{"lineNumber":74,"author":{"gitId":"Md-Fazil"},"content":"}"}],"authorContributionMap":{"Md-Fazil":74}},{"path":"src/test/java/duke/DeadlineTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Md-Fazil"},"content":"package duke;"},{"lineNumber":2,"author":{"gitId":"Md-Fazil"},"content":""},{"lineNumber":3,"author":{"gitId":"Md-Fazil"},"content":"import org.junit.jupiter.api.Test;"},{"lineNumber":4,"author":{"gitId":"Md-Fazil"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;"},{"lineNumber":5,"author":{"gitId":"Md-Fazil"},"content":""},{"lineNumber":6,"author":{"gitId":"Md-Fazil"},"content":"public class DeadlineTest {"},{"lineNumber":7,"author":{"gitId":"Md-Fazil"},"content":""},{"lineNumber":8,"author":{"gitId":"Md-Fazil"},"content":"    @Test"},{"lineNumber":9,"author":{"gitId":"Md-Fazil"},"content":"    public void testFormattedText() {"},{"lineNumber":10,"author":{"gitId":"Md-Fazil"},"content":"        assertEquals(\"D | 0 | eat | 2020-10-10 18:00\","},{"lineNumber":11,"author":{"gitId":"Md-Fazil"},"content":"                new Deadline(\"eat\", false, \"2020-10-10 18:00\").getFormattedData());"},{"lineNumber":12,"author":{"gitId":"Md-Fazil"},"content":"    }"},{"lineNumber":13,"author":{"gitId":"Md-Fazil"},"content":""},{"lineNumber":14,"author":{"gitId":"Md-Fazil"},"content":"    @Test"},{"lineNumber":15,"author":{"gitId":"Md-Fazil"},"content":"    public void testToString() {"},{"lineNumber":16,"author":{"gitId":"Md-Fazil"},"content":"        assertEquals(\"[D][] eat (by: Oct 10 2020 06:00PM)\","},{"lineNumber":17,"author":{"gitId":"Md-Fazil"},"content":"                new Deadline(\"eat\", false, \"2020-10-10 18:00\").toString());"},{"lineNumber":18,"author":{"gitId":"Md-Fazil"},"content":"    }"},{"lineNumber":19,"author":{"gitId":"Md-Fazil"},"content":"}"},{"lineNumber":20,"author":{"gitId":"Md-Fazil"},"content":""}],"authorContributionMap":{"Md-Fazil":20}},{"path":"src/test/java/duke/DukeTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Md-Fazil"},"content":"package duke;"},{"lineNumber":2,"author":{"gitId":"Md-Fazil"},"content":""},{"lineNumber":3,"author":{"gitId":"Md-Fazil"},"content":"import org.junit.jupiter.api.Test;"},{"lineNumber":4,"author":{"gitId":"Md-Fazil"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;"},{"lineNumber":5,"author":{"gitId":"Md-Fazil"},"content":""},{"lineNumber":6,"author":{"gitId":"Md-Fazil"},"content":""},{"lineNumber":7,"author":{"gitId":"Md-Fazil"},"content":"public class DukeTest {"},{"lineNumber":8,"author":{"gitId":"Md-Fazil"},"content":""},{"lineNumber":9,"author":{"gitId":"Md-Fazil"},"content":"    @Test"},{"lineNumber":10,"author":{"gitId":"Md-Fazil"},"content":"    public void dummyTest() {"},{"lineNumber":11,"author":{"gitId":"Md-Fazil"},"content":"        assertEquals(6400, 6400);"},{"lineNumber":12,"author":{"gitId":"Md-Fazil"},"content":"    }"},{"lineNumber":13,"author":{"gitId":"Md-Fazil"},"content":"}"}],"authorContributionMap":{"Md-Fazil":13}},{"path":"src/test/java/duke/EventTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Md-Fazil"},"content":"package duke;"},{"lineNumber":2,"author":{"gitId":"Md-Fazil"},"content":""},{"lineNumber":3,"author":{"gitId":"Md-Fazil"},"content":"import org.junit.jupiter.api.Test;"},{"lineNumber":4,"author":{"gitId":"Md-Fazil"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;"},{"lineNumber":5,"author":{"gitId":"Md-Fazil"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;"},{"lineNumber":6,"author":{"gitId":"Md-Fazil"},"content":""},{"lineNumber":7,"author":{"gitId":"Md-Fazil"},"content":"public class EventTest {"},{"lineNumber":8,"author":{"gitId":"Md-Fazil"},"content":""},{"lineNumber":9,"author":{"gitId":"Md-Fazil"},"content":"    @Test"},{"lineNumber":10,"author":{"gitId":"Md-Fazil"},"content":"    public void testFormattedText() {"},{"lineNumber":11,"author":{"gitId":"Md-Fazil"},"content":"        assertEquals(\"E | 0 | eat | 2020-10-10 2-4pm\","},{"lineNumber":12,"author":{"gitId":"Md-Fazil"},"content":"                new Event(\"eat\", false, \"2020-10-10 2-4pm\").getFormattedData());"},{"lineNumber":13,"author":{"gitId":"Md-Fazil"},"content":"    }"},{"lineNumber":14,"author":{"gitId":"Md-Fazil"},"content":""},{"lineNumber":15,"author":{"gitId":"Md-Fazil"},"content":"    @Test"},{"lineNumber":16,"author":{"gitId":"Md-Fazil"},"content":"    public void testToString() {"},{"lineNumber":17,"author":{"gitId":"Md-Fazil"},"content":"        assertEquals(\"[E][] eat (at: Oct 10 2020 2-4pm)\","},{"lineNumber":18,"author":{"gitId":"Md-Fazil"},"content":"                new Event(\"eat\", false, \"2020-10-10 2-4pm\").toString());"},{"lineNumber":19,"author":{"gitId":"Md-Fazil"},"content":"    }"},{"lineNumber":20,"author":{"gitId":"Md-Fazil"},"content":"}"}],"authorContributionMap":{"Md-Fazil":20}},{"path":"src/test/java/duke/ToDoTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Md-Fazil"},"content":"package duke;"},{"lineNumber":2,"author":{"gitId":"Md-Fazil"},"content":""},{"lineNumber":3,"author":{"gitId":"Md-Fazil"},"content":"import org.junit.jupiter.api.Test;"},{"lineNumber":4,"author":{"gitId":"Md-Fazil"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;"},{"lineNumber":5,"author":{"gitId":"Md-Fazil"},"content":""},{"lineNumber":6,"author":{"gitId":"Md-Fazil"},"content":"public class ToDoTest {"},{"lineNumber":7,"author":{"gitId":"Md-Fazil"},"content":""},{"lineNumber":8,"author":{"gitId":"Md-Fazil"},"content":"    @Test"},{"lineNumber":9,"author":{"gitId":"Md-Fazil"},"content":"    public void testFormattedText() {"},{"lineNumber":10,"author":{"gitId":"Md-Fazil"},"content":"        assertEquals(\"T | 0 | go for a run\","},{"lineNumber":11,"author":{"gitId":"Md-Fazil"},"content":"                new ToDo(\"go for a run\", false).getFormattedData());"},{"lineNumber":12,"author":{"gitId":"Md-Fazil"},"content":"    }"},{"lineNumber":13,"author":{"gitId":"Md-Fazil"},"content":""},{"lineNumber":14,"author":{"gitId":"Md-Fazil"},"content":"    @Test"},{"lineNumber":15,"author":{"gitId":"Md-Fazil"},"content":"    public void testToString() {"},{"lineNumber":16,"author":{"gitId":"Md-Fazil"},"content":"        assertEquals(\"[T][] go for a run\","},{"lineNumber":17,"author":{"gitId":"Md-Fazil"},"content":"                new ToDo(\"go for a run\", false).toString());"},{"lineNumber":18,"author":{"gitId":"Md-Fazil"},"content":"    }"},{"lineNumber":19,"author":{"gitId":"Md-Fazil"},"content":"}"}],"authorContributionMap":{"Md-Fazil":19}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"Md-Fazil"},"content":"todo borrow book"},{"lineNumber":2,"author":{"gitId":"Md-Fazil"},"content":"list"},{"lineNumber":3,"author":{"gitId":"Md-Fazil"},"content":"event dance /at Kallang CC from 2-4pm"},{"lineNumber":4,"author":{"gitId":"Md-Fazil"},"content":"deadline 2103 project /by Sunday"},{"lineNumber":5,"author":{"gitId":"Md-Fazil"},"content":"deadline 2102 project / by Sunday"},{"lineNumber":6,"author":{"gitId":"Md-Fazil"},"content":"done 2"},{"lineNumber":7,"author":{"gitId":"Md-Fazil"},"content":"done"},{"lineNumber":8,"author":{"gitId":"Md-Fazil"},"content":"delete 3"},{"lineNumber":9,"author":{"gitId":"Md-Fazil"},"content":"list"},{"lineNumber":10,"author":{"gitId":"Md-Fazil"},"content":"delete 3"},{"lineNumber":11,"author":{"gitId":"Md-Fazil"},"content":"bye"}],"authorContributionMap":{"Md-Fazil":11}}]
