[{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027checkstyle\u0027"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027"},{"lineNumber":6,"author":{"gitId":"-"},"content":"}"},{"lineNumber":7,"author":{"gitId":"-"},"content":""},{"lineNumber":8,"author":{"gitId":"-"},"content":"repositories {"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    mavenCentral()"},{"lineNumber":10,"author":{"gitId":"-"},"content":"}"},{"lineNumber":11,"author":{"gitId":"-"},"content":""},{"lineNumber":12,"author":{"gitId":"-"},"content":"dependencies {"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.5.0\u0027"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.5.0\u0027"},{"lineNumber":15,"author":{"gitId":"xinweit"},"content":"    String javaFxVersion \u003d \u002711\u0027"},{"lineNumber":16,"author":{"gitId":"xinweit"},"content":""},{"lineNumber":17,"author":{"gitId":"xinweit"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027"},{"lineNumber":18,"author":{"gitId":"xinweit"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"},{"lineNumber":19,"author":{"gitId":"xinweit"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"},{"lineNumber":20,"author":{"gitId":"xinweit"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027"},{"lineNumber":21,"author":{"gitId":"xinweit"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"},{"lineNumber":22,"author":{"gitId":"xinweit"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"},{"lineNumber":23,"author":{"gitId":"xinweit"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027"},{"lineNumber":24,"author":{"gitId":"xinweit"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"},{"lineNumber":25,"author":{"gitId":"xinweit"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"},{"lineNumber":26,"author":{"gitId":"xinweit"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027"},{"lineNumber":27,"author":{"gitId":"xinweit"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"},{"lineNumber":28,"author":{"gitId":"xinweit"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"},{"lineNumber":29,"author":{"gitId":"-"},"content":"}"},{"lineNumber":30,"author":{"gitId":"-"},"content":""},{"lineNumber":31,"author":{"gitId":"-"},"content":"test {"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    useJUnitPlatform()"},{"lineNumber":33,"author":{"gitId":"-"},"content":""},{"lineNumber":34,"author":{"gitId":"-"},"content":"    testLogging {"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\""},{"lineNumber":36,"author":{"gitId":"-"},"content":""},{"lineNumber":37,"author":{"gitId":"-"},"content":"        showExceptions true"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\""},{"lineNumber":39,"author":{"gitId":"-"},"content":"        showCauses true"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        showStackTraces true"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":43,"author":{"gitId":"-"},"content":"}"},{"lineNumber":44,"author":{"gitId":"-"},"content":""},{"lineNumber":45,"author":{"gitId":"-"},"content":"application {"},{"lineNumber":46,"author":{"gitId":"xinweit"},"content":"    mainClassName \u003d \"zeke.Launcher\""},{"lineNumber":47,"author":{"gitId":"-"},"content":"}"},{"lineNumber":48,"author":{"gitId":"-"},"content":""},{"lineNumber":49,"author":{"gitId":"-"},"content":"shadowJar {"},{"lineNumber":50,"author":{"gitId":"xinweit"},"content":"    archiveBaseName \u003d \"zeke\""},{"lineNumber":51,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null"},{"lineNumber":52,"author":{"gitId":"-"},"content":"}"},{"lineNumber":53,"author":{"gitId":"-"},"content":""},{"lineNumber":54,"author":{"gitId":"-"},"content":"checkstyle {"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    toolVersion \u003d \u00278.29\u0027"},{"lineNumber":56,"author":{"gitId":"-"},"content":"}"},{"lineNumber":57,"author":{"gitId":"-"},"content":""},{"lineNumber":58,"author":{"gitId":"-"},"content":"run{"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in"},{"lineNumber":60,"author":{"gitId":"-"},"content":"}"}],"authorContributionMap":{"xinweit":16,"-":44}},{"path":"docs/README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"# User Guide"},{"lineNumber":2,"author":{"gitId":"-"},"content":""},{"lineNumber":3,"author":{"gitId":"xinweit"},"content":"## Introduction to Zeke"},{"lineNumber":4,"author":{"gitId":"xinweit"},"content":"Zeke is a Personal Assistant Chatbot that helps you keep track of various tasks."},{"lineNumber":5,"author":{"gitId":"xinweit"},"content":"This application makes use of a Command-Line Interface (CLI) which processes commands in the form of lines of text."},{"lineNumber":6,"author":{"gitId":"xinweit"},"content":"You can give commands to Zeke and it will return the relevant messages."},{"lineNumber":7,"author":{"gitId":"-"},"content":""},{"lineNumber":8,"author":{"gitId":"xinweit"},"content":"\u003cbr\u003e"},{"lineNumber":9,"author":{"gitId":"xinweit"},"content":""},{"lineNumber":10,"author":{"gitId":"xinweit"},"content":"## Get started"},{"lineNumber":11,"author":{"gitId":"xinweit"},"content":"1. Ensure that [JDK 11](https://www.oracle.com/sg/java/technologies/javase-jdk11-downloads.html) or newer versions are installed on your computer."},{"lineNumber":12,"author":{"gitId":"xinweit"},"content":"2. Download zeke.jar [here](https://github.com/xinweit/ip/releases/tag/v1) to a path of your choice in your computer."},{"lineNumber":13,"author":{"gitId":"xinweit"},"content":"3. Run the zeke.jar file."},{"lineNumber":14,"author":{"gitId":"xinweit"},"content":"4. You can now start using the app!"},{"lineNumber":15,"author":{"gitId":"xinweit"},"content":""},{"lineNumber":16,"author":{"gitId":"xinweit"},"content":"\u003cbr\u003e"},{"lineNumber":17,"author":{"gitId":"xinweit"},"content":""},{"lineNumber":18,"author":{"gitId":"-"},"content":"## Features"},{"lineNumber":19,"author":{"gitId":"-"},"content":""},{"lineNumber":20,"author":{"gitId":"xinweit"},"content":"## At a glance"},{"lineNumber":21,"author":{"gitId":"xinweit"},"content":""},{"lineNumber":22,"author":{"gitId":"xinweit"},"content":"Feature | Command format"},{"lineNumber":23,"author":{"gitId":"xinweit"},"content":"------------ | -------------"},{"lineNumber":24,"author":{"gitId":"xinweit"},"content":"Add todo | `todo \u003cdescription\u003e` "},{"lineNumber":25,"author":{"gitId":"xinweit"},"content":"Add deadline | `deadline \u003cdescription\u003e /by \u003cdate\u003e`"},{"lineNumber":26,"author":{"gitId":"xinweit"},"content":"Add event | `event \u003cdescription\u003e /at \u003cdate\u003e`"},{"lineNumber":27,"author":{"gitId":"xinweit"},"content":"Delete task| `delete \u003cindex\u003e`"},{"lineNumber":28,"author":{"gitId":"xinweit"},"content":"View all tasks | `list`"},{"lineNumber":29,"author":{"gitId":"xinweit"},"content":"Mark task as completed | `done \u003cindex\u003e`"},{"lineNumber":30,"author":{"gitId":"xinweit"},"content":"Search for tasks | `find \u003ckeyword\u003e`"},{"lineNumber":31,"author":{"gitId":"xinweit"},"content":"View help menu | `help`"},{"lineNumber":32,"author":{"gitId":"xinweit"},"content":"View statistics | `stats`"},{"lineNumber":33,"author":{"gitId":"xinweit"},"content":"Exit application | `bye`"},{"lineNumber":34,"author":{"gitId":"xinweit"},"content":""},{"lineNumber":35,"author":{"gitId":"xinweit"},"content":"\u003cbr\u003e"},{"lineNumber":36,"author":{"gitId":"xinweit"},"content":""},{"lineNumber":37,"author":{"gitId":"xinweit"},"content":"## Add Tasks "},{"lineNumber":38,"author":{"gitId":"xinweit"},"content":"Users can add tasks of these 3 types to their task list:"},{"lineNumber":39,"author":{"gitId":"xinweit"},"content":"* Todo: Something that needs to be done"},{"lineNumber":40,"author":{"gitId":"xinweit"},"content":"* Deadline: A task that needs to be completed by a certain date"},{"lineNumber":41,"author":{"gitId":"xinweit"},"content":"* Event: An event that happens at a certain date"},{"lineNumber":42,"author":{"gitId":"-"},"content":""},{"lineNumber":43,"author":{"gitId":"-"},"content":"## Usage"},{"lineNumber":44,"author":{"gitId":"-"},"content":""},{"lineNumber":45,"author":{"gitId":"xinweit"},"content":"### `todo \u003cdescription\u003e` - Add a Todo"},{"lineNumber":46,"author":{"gitId":"-"},"content":""},{"lineNumber":47,"author":{"gitId":"xinweit"},"content":"description: the description of the todo you want to add"},{"lineNumber":48,"author":{"gitId":"-"},"content":""},{"lineNumber":49,"author":{"gitId":"-"},"content":"Example of usage: "},{"lineNumber":50,"author":{"gitId":"-"},"content":""},{"lineNumber":51,"author":{"gitId":"xinweit"},"content":"`todo buy groceries`"},{"lineNumber":52,"author":{"gitId":"xinweit"},"content":""},{"lineNumber":53,"author":{"gitId":"xinweit"},"content":"Expected outcome:"},{"lineNumber":54,"author":{"gitId":"xinweit"},"content":""},{"lineNumber":55,"author":{"gitId":"xinweit"},"content":"![todo_image](images/todo.png)"},{"lineNumber":56,"author":{"gitId":"xinweit"},"content":""},{"lineNumber":57,"author":{"gitId":"xinweit"},"content":"\u003cbr\u003e"},{"lineNumber":58,"author":{"gitId":"xinweit"},"content":""},{"lineNumber":59,"author":{"gitId":"xinweit"},"content":"### `deadline \u003cdescription\u003e /by \u003cdate\u003e` - Add a Deadline"},{"lineNumber":60,"author":{"gitId":"xinweit"},"content":""},{"lineNumber":61,"author":{"gitId":"xinweit"},"content":"description: the description of the deadline you want to add \u003cbr\u003e"},{"lineNumber":62,"author":{"gitId":"xinweit"},"content":"date: the date of the deadline in _**yyyy-mm-dd**_ format"},{"lineNumber":63,"author":{"gitId":"xinweit"},"content":""},{"lineNumber":64,"author":{"gitId":"xinweit"},"content":"Example of usage:"},{"lineNumber":65,"author":{"gitId":"xinweit"},"content":""},{"lineNumber":66,"author":{"gitId":"xinweit"},"content":"`deadline return book /by 2021-11-19`"},{"lineNumber":67,"author":{"gitId":"xinweit"},"content":""},{"lineNumber":68,"author":{"gitId":"xinweit"},"content":"Expected outcome:"},{"lineNumber":69,"author":{"gitId":"xinweit"},"content":""},{"lineNumber":70,"author":{"gitId":"xinweit"},"content":"![deadline_image](images/deadline.png)"},{"lineNumber":71,"author":{"gitId":"xinweit"},"content":""},{"lineNumber":72,"author":{"gitId":"xinweit"},"content":"\u003cbr\u003e"},{"lineNumber":73,"author":{"gitId":"xinweit"},"content":""},{"lineNumber":74,"author":{"gitId":"xinweit"},"content":"### `event \u003cdescription\u003e /at \u003cdate\u003e` - Add an Event"},{"lineNumber":75,"author":{"gitId":"xinweit"},"content":""},{"lineNumber":76,"author":{"gitId":"xinweit"},"content":"description: the description of the event you want to add \u003cbr\u003e"},{"lineNumber":77,"author":{"gitId":"xinweit"},"content":"date: the date of the event in _**yyyy-mm-dd**_ format"},{"lineNumber":78,"author":{"gitId":"xinweit"},"content":""},{"lineNumber":79,"author":{"gitId":"xinweit"},"content":"Example of usage:"},{"lineNumber":80,"author":{"gitId":"xinweit"},"content":""},{"lineNumber":81,"author":{"gitId":"xinweit"},"content":"`event football at kallang cage /at 2021-11-19`"},{"lineNumber":82,"author":{"gitId":"xinweit"},"content":""},{"lineNumber":83,"author":{"gitId":"xinweit"},"content":"Expected outcome:"},{"lineNumber":84,"author":{"gitId":"xinweit"},"content":""},{"lineNumber":85,"author":{"gitId":"xinweit"},"content":"![event_image](images/event.png)"},{"lineNumber":86,"author":{"gitId":"xinweit"},"content":""},{"lineNumber":87,"author":{"gitId":"xinweit"},"content":"\u003cbr\u003e"},{"lineNumber":88,"author":{"gitId":"xinweit"},"content":""},{"lineNumber":89,"author":{"gitId":"xinweit"},"content":"## Delete Tasks"},{"lineNumber":90,"author":{"gitId":"xinweit"},"content":"Users can delete tasks from their task list"},{"lineNumber":91,"author":{"gitId":"xinweit"},"content":""},{"lineNumber":92,"author":{"gitId":"xinweit"},"content":"## Usage"},{"lineNumber":93,"author":{"gitId":"xinweit"},"content":""},{"lineNumber":94,"author":{"gitId":"xinweit"},"content":"### `delete \u003cindex\u003e` - delete a specified task"},{"lineNumber":95,"author":{"gitId":"xinweit"},"content":""},{"lineNumber":96,"author":{"gitId":"xinweit"},"content":"index: the index of the task you want to delete, 1-based indexing"},{"lineNumber":97,"author":{"gitId":"xinweit"},"content":""},{"lineNumber":98,"author":{"gitId":"xinweit"},"content":"Example of usage:"},{"lineNumber":99,"author":{"gitId":"xinweit"},"content":""},{"lineNumber":100,"author":{"gitId":"xinweit"},"content":"`delete 10`"},{"lineNumber":101,"author":{"gitId":"xinweit"},"content":""},{"lineNumber":102,"author":{"gitId":"xinweit"},"content":"Expected outcome:"},{"lineNumber":103,"author":{"gitId":"xinweit"},"content":""},{"lineNumber":104,"author":{"gitId":"xinweit"},"content":"![delete_image](images/delete.png)"},{"lineNumber":105,"author":{"gitId":"xinweit"},"content":""},{"lineNumber":106,"author":{"gitId":"xinweit"},"content":"\u003cbr\u003e"},{"lineNumber":107,"author":{"gitId":"xinweit"},"content":""},{"lineNumber":108,"author":{"gitId":"xinweit"},"content":"## List all Tasks"},{"lineNumber":109,"author":{"gitId":"xinweit"},"content":"Users can see all the tasks in their task list"},{"lineNumber":110,"author":{"gitId":"xinweit"},"content":""},{"lineNumber":111,"author":{"gitId":"xinweit"},"content":"## Usage"},{"lineNumber":112,"author":{"gitId":"xinweit"},"content":""},{"lineNumber":113,"author":{"gitId":"xinweit"},"content":"### `list` - show all tasks"},{"lineNumber":114,"author":{"gitId":"xinweit"},"content":""},{"lineNumber":115,"author":{"gitId":"xinweit"},"content":"Example of usage:"},{"lineNumber":116,"author":{"gitId":"xinweit"},"content":""},{"lineNumber":117,"author":{"gitId":"xinweit"},"content":"`list`"},{"lineNumber":118,"author":{"gitId":"xinweit"},"content":""},{"lineNumber":119,"author":{"gitId":"xinweit"},"content":"Expected outcome:"},{"lineNumber":120,"author":{"gitId":"xinweit"},"content":""},{"lineNumber":121,"author":{"gitId":"xinweit"},"content":"![list_image](images/list.png)"},{"lineNumber":122,"author":{"gitId":"xinweit"},"content":""},{"lineNumber":123,"author":{"gitId":"xinweit"},"content":"\u003cbr\u003e"},{"lineNumber":124,"author":{"gitId":"xinweit"},"content":""},{"lineNumber":125,"author":{"gitId":"xinweit"},"content":"## Mark tasks as completed"},{"lineNumber":126,"author":{"gitId":"xinweit"},"content":"Users can mark tasks as completed"},{"lineNumber":127,"author":{"gitId":"xinweit"},"content":""},{"lineNumber":128,"author":{"gitId":"xinweit"},"content":"## Usage"},{"lineNumber":129,"author":{"gitId":"xinweit"},"content":""},{"lineNumber":130,"author":{"gitId":"xinweit"},"content":"### `done \u003cindex\u003e` - mark specified task as completed"},{"lineNumber":131,"author":{"gitId":"xinweit"},"content":""},{"lineNumber":132,"author":{"gitId":"xinweit"},"content":"index: the index of the task you want to delete, 1-based indexing"},{"lineNumber":133,"author":{"gitId":"xinweit"},"content":""},{"lineNumber":134,"author":{"gitId":"xinweit"},"content":"Example of usage:"},{"lineNumber":135,"author":{"gitId":"xinweit"},"content":""},{"lineNumber":136,"author":{"gitId":"xinweit"},"content":"`done 8`"},{"lineNumber":137,"author":{"gitId":"xinweit"},"content":""},{"lineNumber":138,"author":{"gitId":"xinweit"},"content":"Expected outcome:"},{"lineNumber":139,"author":{"gitId":"xinweit"},"content":""},{"lineNumber":140,"author":{"gitId":"xinweit"},"content":"![done_image](images/done.png)"},{"lineNumber":141,"author":{"gitId":"xinweit"},"content":""},{"lineNumber":142,"author":{"gitId":"xinweit"},"content":"\u003cbr\u003e"},{"lineNumber":143,"author":{"gitId":"xinweit"},"content":""},{"lineNumber":144,"author":{"gitId":"xinweit"},"content":""},{"lineNumber":145,"author":{"gitId":"xinweit"},"content":"## Search for tasks"},{"lineNumber":146,"author":{"gitId":"xinweit"},"content":"Users can search for tasks in their task list"},{"lineNumber":147,"author":{"gitId":"-"},"content":""},{"lineNumber":148,"author":{"gitId":"-"},"content":"## Usage"},{"lineNumber":149,"author":{"gitId":"-"},"content":""},{"lineNumber":150,"author":{"gitId":"xinweit"},"content":"### `find \u003ckeyword\u003e` - search for a keyword "},{"lineNumber":151,"author":{"gitId":"-"},"content":""},{"lineNumber":152,"author":{"gitId":"xinweit"},"content":"keyword: the keyword to search"},{"lineNumber":153,"author":{"gitId":"-"},"content":""},{"lineNumber":154,"author":{"gitId":"-"},"content":"Example of usage:"},{"lineNumber":155,"author":{"gitId":"-"},"content":""},{"lineNumber":156,"author":{"gitId":"xinweit"},"content":"`find ring`"},{"lineNumber":157,"author":{"gitId":"-"},"content":""},{"lineNumber":158,"author":{"gitId":"-"},"content":"Expected outcome:"},{"lineNumber":159,"author":{"gitId":"-"},"content":""},{"lineNumber":160,"author":{"gitId":"xinweit"},"content":"![find_image](images/find.png)"},{"lineNumber":161,"author":{"gitId":"xinweit"},"content":""},{"lineNumber":162,"author":{"gitId":"xinweit"},"content":"\u003cbr\u003e"},{"lineNumber":163,"author":{"gitId":"xinweit"},"content":""},{"lineNumber":164,"author":{"gitId":"xinweit"},"content":"## Display a help menu"},{"lineNumber":165,"author":{"gitId":"xinweit"},"content":"Users can see the help menu for list of available commands"},{"lineNumber":166,"author":{"gitId":"xinweit"},"content":""},{"lineNumber":167,"author":{"gitId":"xinweit"},"content":"## Usage"},{"lineNumber":168,"author":{"gitId":"xinweit"},"content":""},{"lineNumber":169,"author":{"gitId":"xinweit"},"content":"### `help` - shows the help menu"},{"lineNumber":170,"author":{"gitId":"xinweit"},"content":""},{"lineNumber":171,"author":{"gitId":"xinweit"},"content":"Example of usage:"},{"lineNumber":172,"author":{"gitId":"xinweit"},"content":""},{"lineNumber":173,"author":{"gitId":"xinweit"},"content":"`help`"},{"lineNumber":174,"author":{"gitId":"xinweit"},"content":""},{"lineNumber":175,"author":{"gitId":"xinweit"},"content":"Expected outcome:"},{"lineNumber":176,"author":{"gitId":"xinweit"},"content":""},{"lineNumber":177,"author":{"gitId":"xinweit"},"content":"![help_image](images/help.png)"},{"lineNumber":178,"author":{"gitId":"xinweit"},"content":""},{"lineNumber":179,"author":{"gitId":"xinweit"},"content":"\u003cbr\u003e"},{"lineNumber":180,"author":{"gitId":"xinweit"},"content":""},{"lineNumber":181,"author":{"gitId":"xinweit"},"content":"## Display statistics "},{"lineNumber":182,"author":{"gitId":"xinweit"},"content":"Users can see overdue deadlines, events happening soon and deadlines due soon"},{"lineNumber":183,"author":{"gitId":"xinweit"},"content":""},{"lineNumber":184,"author":{"gitId":"xinweit"},"content":"## Usage"},{"lineNumber":185,"author":{"gitId":"xinweit"},"content":""},{"lineNumber":186,"author":{"gitId":"xinweit"},"content":"### `stats` - show useful statistics"},{"lineNumber":187,"author":{"gitId":"xinweit"},"content":""},{"lineNumber":188,"author":{"gitId":"xinweit"},"content":"Example of usage:"},{"lineNumber":189,"author":{"gitId":"xinweit"},"content":""},{"lineNumber":190,"author":{"gitId":"xinweit"},"content":"`stats`"},{"lineNumber":191,"author":{"gitId":"xinweit"},"content":""},{"lineNumber":192,"author":{"gitId":"xinweit"},"content":"Expected outcome:"},{"lineNumber":193,"author":{"gitId":"xinweit"},"content":""},{"lineNumber":194,"author":{"gitId":"xinweit"},"content":"![stats_image](images/stats.png)"},{"lineNumber":195,"author":{"gitId":"xinweit"},"content":""},{"lineNumber":196,"author":{"gitId":"xinweit"},"content":"\u003cbr\u003e"},{"lineNumber":197,"author":{"gitId":"xinweit"},"content":""},{"lineNumber":198,"author":{"gitId":"xinweit"},"content":"## Exit the application"},{"lineNumber":199,"author":{"gitId":"xinweit"},"content":"Users can exit the Zeke app"},{"lineNumber":200,"author":{"gitId":"xinweit"},"content":""},{"lineNumber":201,"author":{"gitId":"xinweit"},"content":"## Usage"},{"lineNumber":202,"author":{"gitId":"xinweit"},"content":""},{"lineNumber":203,"author":{"gitId":"xinweit"},"content":"### `bye` - exit app"},{"lineNumber":204,"author":{"gitId":"xinweit"},"content":""},{"lineNumber":205,"author":{"gitId":"xinweit"},"content":"Example of usage:"},{"lineNumber":206,"author":{"gitId":"xinweit"},"content":""},{"lineNumber":207,"author":{"gitId":"xinweit"},"content":"`bye`"},{"lineNumber":208,"author":{"gitId":"-"},"content":""},{"lineNumber":209,"author":{"gitId":"-"},"content":"Expected outcome:"},{"lineNumber":210,"author":{"gitId":"-"},"content":""},{"lineNumber":211,"author":{"gitId":"xinweit"},"content":"![bye_image](images/bye.png)"},{"lineNumber":212,"author":{"gitId":"xinweit"},"content":""},{"lineNumber":213,"author":{"gitId":"xinweit"},"content":""},{"lineNumber":214,"author":{"gitId":"xinweit"},"content":""},{"lineNumber":215,"author":{"gitId":"xinweit"},"content":""},{"lineNumber":216,"author":{"gitId":"xinweit"},"content":""},{"lineNumber":217,"author":{"gitId":"xinweit"},"content":""},{"lineNumber":218,"author":{"gitId":"xinweit"},"content":""},{"lineNumber":219,"author":{"gitId":"xinweit"},"content":""},{"lineNumber":220,"author":{"gitId":"xinweit"},"content":""},{"lineNumber":221,"author":{"gitId":"xinweit"},"content":""},{"lineNumber":222,"author":{"gitId":"xinweit"},"content":""},{"lineNumber":223,"author":{"gitId":"xinweit"},"content":""},{"lineNumber":224,"author":{"gitId":"xinweit"},"content":""},{"lineNumber":225,"author":{"gitId":"xinweit"},"content":""},{"lineNumber":226,"author":{"gitId":"xinweit"},"content":""}],"authorContributionMap":{"xinweit":201,"-":25}},{"path":"src/main/java/zeke/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"xinweit"},"content":"package zeke;"},{"lineNumber":2,"author":{"gitId":"xinweit"},"content":""},{"lineNumber":3,"author":{"gitId":"xinweit"},"content":"/**"},{"lineNumber":4,"author":{"gitId":"xinweit"},"content":" * Command class stores all the enums for commands that user can use."},{"lineNumber":5,"author":{"gitId":"xinweit"},"content":" */"},{"lineNumber":6,"author":{"gitId":"xinweit"},"content":"public enum Command {"},{"lineNumber":7,"author":{"gitId":"xinweit"},"content":"    BYE,"},{"lineNumber":8,"author":{"gitId":"xinweit"},"content":"    LIST,"},{"lineNumber":9,"author":{"gitId":"xinweit"},"content":"    DONE,"},{"lineNumber":10,"author":{"gitId":"xinweit"},"content":"    DELETE,"},{"lineNumber":11,"author":{"gitId":"xinweit"},"content":"    FIND,"},{"lineNumber":12,"author":{"gitId":"xinweit"},"content":"    HELP,"},{"lineNumber":13,"author":{"gitId":"xinweit"},"content":"    TODO,"},{"lineNumber":14,"author":{"gitId":"xinweit"},"content":"    DEADLINE,"},{"lineNumber":15,"author":{"gitId":"xinweit"},"content":"    EVENT,"},{"lineNumber":16,"author":{"gitId":"xinweit"},"content":"    STATS;"},{"lineNumber":17,"author":{"gitId":"xinweit"},"content":"}"}],"authorContributionMap":{"xinweit":17}},{"path":"src/main/java/zeke/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"xinweit"},"content":"package zeke;"},{"lineNumber":2,"author":{"gitId":"xinweit"},"content":""},{"lineNumber":3,"author":{"gitId":"xinweit"},"content":"import java.time.LocalDate;"},{"lineNumber":4,"author":{"gitId":"xinweit"},"content":"import java.time.format.DateTimeFormatter;"},{"lineNumber":5,"author":{"gitId":"xinweit"},"content":""},{"lineNumber":6,"author":{"gitId":"xinweit"},"content":"/**"},{"lineNumber":7,"author":{"gitId":"xinweit"},"content":" * Deadline class for deadline tasks."},{"lineNumber":8,"author":{"gitId":"xinweit"},"content":" */"},{"lineNumber":9,"author":{"gitId":"xinweit"},"content":"public class Deadline extends Task {"},{"lineNumber":10,"author":{"gitId":"xinweit"},"content":""},{"lineNumber":11,"author":{"gitId":"xinweit"},"content":"    protected String date;"},{"lineNumber":12,"author":{"gitId":"xinweit"},"content":"    protected LocalDate localDate;"},{"lineNumber":13,"author":{"gitId":"xinweit"},"content":""},{"lineNumber":14,"author":{"gitId":"xinweit"},"content":"    /**"},{"lineNumber":15,"author":{"gitId":"xinweit"},"content":"     * Constructor for deadline class."},{"lineNumber":16,"author":{"gitId":"xinweit"},"content":"     * Initializes a deadline with specified description and date."},{"lineNumber":17,"author":{"gitId":"xinweit"},"content":"     *"},{"lineNumber":18,"author":{"gitId":"xinweit"},"content":"     * @param description description of the deadline task."},{"lineNumber":19,"author":{"gitId":"xinweit"},"content":"     * @param date date of the deadline task."},{"lineNumber":20,"author":{"gitId":"xinweit"},"content":"     */"},{"lineNumber":21,"author":{"gitId":"xinweit"},"content":"    public Deadline(String description, String date) {"},{"lineNumber":22,"author":{"gitId":"xinweit"},"content":"        super(description);"},{"lineNumber":23,"author":{"gitId":"xinweit"},"content":"        this.date \u003d date;"},{"lineNumber":24,"author":{"gitId":"xinweit"},"content":"        this.localDate \u003d LocalDate.parse(date);"},{"lineNumber":25,"author":{"gitId":"xinweit"},"content":"        this.type \u003d \u0027D\u0027;"},{"lineNumber":26,"author":{"gitId":"xinweit"},"content":"    }"},{"lineNumber":27,"author":{"gitId":"xinweit"},"content":""},{"lineNumber":28,"author":{"gitId":"xinweit"},"content":"    /**"},{"lineNumber":29,"author":{"gitId":"xinweit"},"content":"     * Returns date of this deadline."},{"lineNumber":30,"author":{"gitId":"xinweit"},"content":"     *"},{"lineNumber":31,"author":{"gitId":"xinweit"},"content":"     * @return the date of this deadline."},{"lineNumber":32,"author":{"gitId":"xinweit"},"content":"     */"},{"lineNumber":33,"author":{"gitId":"xinweit"},"content":"    public String getDate() {"},{"lineNumber":34,"author":{"gitId":"xinweit"},"content":"        return this.date;"},{"lineNumber":35,"author":{"gitId":"xinweit"},"content":"    }"},{"lineNumber":36,"author":{"gitId":"xinweit"},"content":""},{"lineNumber":37,"author":{"gitId":"xinweit"},"content":"    /**"},{"lineNumber":38,"author":{"gitId":"xinweit"},"content":"     * Returns the parsed LocalDate."},{"lineNumber":39,"author":{"gitId":"xinweit"},"content":"     *"},{"lineNumber":40,"author":{"gitId":"xinweit"},"content":"     * @return the LocalDate of this deadline."},{"lineNumber":41,"author":{"gitId":"xinweit"},"content":"     */"},{"lineNumber":42,"author":{"gitId":"xinweit"},"content":"    public LocalDate getLocalDate() {"},{"lineNumber":43,"author":{"gitId":"xinweit"},"content":"        return this.localDate;"},{"lineNumber":44,"author":{"gitId":"xinweit"},"content":"    }"},{"lineNumber":45,"author":{"gitId":"xinweit"},"content":""},{"lineNumber":46,"author":{"gitId":"xinweit"},"content":"    /**"},{"lineNumber":47,"author":{"gitId":"xinweit"},"content":"     * Returns a date in MMM dd yyyy format."},{"lineNumber":48,"author":{"gitId":"xinweit"},"content":"     *"},{"lineNumber":49,"author":{"gitId":"xinweit"},"content":"     * @return a formatted date."},{"lineNumber":50,"author":{"gitId":"xinweit"},"content":"     */"},{"lineNumber":51,"author":{"gitId":"xinweit"},"content":"    public String getFormattedDateString() {"},{"lineNumber":52,"author":{"gitId":"xinweit"},"content":"        return localDate.format(DateTimeFormatter.ofPattern(\"MMM dd yyyy\"));"},{"lineNumber":53,"author":{"gitId":"xinweit"},"content":"    }"},{"lineNumber":54,"author":{"gitId":"xinweit"},"content":""},{"lineNumber":55,"author":{"gitId":"xinweit"},"content":"    @Override"},{"lineNumber":56,"author":{"gitId":"xinweit"},"content":"    public String toString() {"},{"lineNumber":57,"author":{"gitId":"xinweit"},"content":"        return \"[D]\" + super.toString() + \" (by: \" + this.getFormattedDateString() + \")\";"},{"lineNumber":58,"author":{"gitId":"xinweit"},"content":"    }"},{"lineNumber":59,"author":{"gitId":"xinweit"},"content":"}"}],"authorContributionMap":{"xinweit":59}},{"path":"src/main/java/zeke/DialogBox.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"xinweit"},"content":"package zeke;"},{"lineNumber":2,"author":{"gitId":"xinweit"},"content":""},{"lineNumber":3,"author":{"gitId":"xinweit"},"content":"import java.io.IOException;"},{"lineNumber":4,"author":{"gitId":"xinweit"},"content":"import java.util.Collections;"},{"lineNumber":5,"author":{"gitId":"xinweit"},"content":""},{"lineNumber":6,"author":{"gitId":"xinweit"},"content":"import javafx.collections.FXCollections;"},{"lineNumber":7,"author":{"gitId":"xinweit"},"content":"import javafx.collections.ObservableList;"},{"lineNumber":8,"author":{"gitId":"xinweit"},"content":"import javafx.fxml.FXML;"},{"lineNumber":9,"author":{"gitId":"xinweit"},"content":"import javafx.fxml.FXMLLoader;"},{"lineNumber":10,"author":{"gitId":"xinweit"},"content":"import javafx.geometry.Pos;"},{"lineNumber":11,"author":{"gitId":"xinweit"},"content":"import javafx.scene.Node;"},{"lineNumber":12,"author":{"gitId":"xinweit"},"content":"import javafx.scene.control.Label;"},{"lineNumber":13,"author":{"gitId":"xinweit"},"content":"import javafx.scene.image.Image;"},{"lineNumber":14,"author":{"gitId":"xinweit"},"content":"import javafx.scene.image.ImageView;"},{"lineNumber":15,"author":{"gitId":"xinweit"},"content":"import javafx.scene.layout.HBox;"},{"lineNumber":16,"author":{"gitId":"xinweit"},"content":""},{"lineNumber":17,"author":{"gitId":"xinweit"},"content":"/**"},{"lineNumber":18,"author":{"gitId":"xinweit"},"content":" * An example of a custom control using FXML."},{"lineNumber":19,"author":{"gitId":"xinweit"},"content":" * This control represents a dialog box consisting of an ImageView to represent the speaker\u0027s face and a label"},{"lineNumber":20,"author":{"gitId":"xinweit"},"content":" * containing text from the speaker."},{"lineNumber":21,"author":{"gitId":"xinweit"},"content":" */"},{"lineNumber":22,"author":{"gitId":"xinweit"},"content":"public class DialogBox extends HBox {"},{"lineNumber":23,"author":{"gitId":"xinweit"},"content":"    @FXML"},{"lineNumber":24,"author":{"gitId":"xinweit"},"content":"    private Label dialog;"},{"lineNumber":25,"author":{"gitId":"xinweit"},"content":"    @FXML"},{"lineNumber":26,"author":{"gitId":"xinweit"},"content":"    private ImageView displayPicture;"},{"lineNumber":27,"author":{"gitId":"xinweit"},"content":""},{"lineNumber":28,"author":{"gitId":"xinweit"},"content":"    private DialogBox(String text, Image img) {"},{"lineNumber":29,"author":{"gitId":"xinweit"},"content":"        try {"},{"lineNumber":30,"author":{"gitId":"xinweit"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(\"/view/DialogBox.fxml\"));"},{"lineNumber":31,"author":{"gitId":"xinweit"},"content":"            fxmlLoader.setController(this);"},{"lineNumber":32,"author":{"gitId":"xinweit"},"content":"            fxmlLoader.setRoot(this);"},{"lineNumber":33,"author":{"gitId":"xinweit"},"content":"            fxmlLoader.load();"},{"lineNumber":34,"author":{"gitId":"xinweit"},"content":"        } catch (IOException e) {"},{"lineNumber":35,"author":{"gitId":"xinweit"},"content":"            e.printStackTrace();"},{"lineNumber":36,"author":{"gitId":"xinweit"},"content":"        }"},{"lineNumber":37,"author":{"gitId":"xinweit"},"content":""},{"lineNumber":38,"author":{"gitId":"xinweit"},"content":"        dialog.setText(text);"},{"lineNumber":39,"author":{"gitId":"xinweit"},"content":"        displayPicture.setImage(img);"},{"lineNumber":40,"author":{"gitId":"xinweit"},"content":"    }"},{"lineNumber":41,"author":{"gitId":"xinweit"},"content":""},{"lineNumber":42,"author":{"gitId":"xinweit"},"content":"    /**"},{"lineNumber":43,"author":{"gitId":"xinweit"},"content":"     * Flips the dialog box such that the ImageView is on the left and text on the right."},{"lineNumber":44,"author":{"gitId":"xinweit"},"content":"     */"},{"lineNumber":45,"author":{"gitId":"xinweit"},"content":"    private void flip() {"},{"lineNumber":46,"author":{"gitId":"xinweit"},"content":"        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());"},{"lineNumber":47,"author":{"gitId":"xinweit"},"content":"        Collections.reverse(tmp);"},{"lineNumber":48,"author":{"gitId":"xinweit"},"content":"        getChildren().setAll(tmp);"},{"lineNumber":49,"author":{"gitId":"xinweit"},"content":"        setAlignment(Pos.TOP_LEFT);"},{"lineNumber":50,"author":{"gitId":"xinweit"},"content":"    }"},{"lineNumber":51,"author":{"gitId":"xinweit"},"content":""},{"lineNumber":52,"author":{"gitId":"xinweit"},"content":"    public static DialogBox getUserDialog(String text, Image img) {"},{"lineNumber":53,"author":{"gitId":"xinweit"},"content":"        return new DialogBox(text, img);"},{"lineNumber":54,"author":{"gitId":"xinweit"},"content":"    }"},{"lineNumber":55,"author":{"gitId":"xinweit"},"content":""},{"lineNumber":56,"author":{"gitId":"xinweit"},"content":"    public static DialogBox getZekeDialog(String text, Image img) {"},{"lineNumber":57,"author":{"gitId":"xinweit"},"content":"        var db \u003d new DialogBox(text, img);"},{"lineNumber":58,"author":{"gitId":"xinweit"},"content":"        db.flip();"},{"lineNumber":59,"author":{"gitId":"xinweit"},"content":"        return db;"},{"lineNumber":60,"author":{"gitId":"xinweit"},"content":"    }"},{"lineNumber":61,"author":{"gitId":"xinweit"},"content":"}"}],"authorContributionMap":{"xinweit":61}},{"path":"src/main/java/zeke/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"xinweit"},"content":"package zeke;"},{"lineNumber":2,"author":{"gitId":"xinweit"},"content":""},{"lineNumber":3,"author":{"gitId":"xinweit"},"content":"import java.time.LocalDate;"},{"lineNumber":4,"author":{"gitId":"xinweit"},"content":"import java.time.format.DateTimeFormatter;"},{"lineNumber":5,"author":{"gitId":"xinweit"},"content":""},{"lineNumber":6,"author":{"gitId":"xinweit"},"content":"/**"},{"lineNumber":7,"author":{"gitId":"xinweit"},"content":" * Event class for event tasks"},{"lineNumber":8,"author":{"gitId":"xinweit"},"content":" */"},{"lineNumber":9,"author":{"gitId":"xinweit"},"content":"public class Event extends Task {"},{"lineNumber":10,"author":{"gitId":"xinweit"},"content":""},{"lineNumber":11,"author":{"gitId":"xinweit"},"content":"    protected String date;"},{"lineNumber":12,"author":{"gitId":"xinweit"},"content":"    protected LocalDate localDate;"},{"lineNumber":13,"author":{"gitId":"xinweit"},"content":""},{"lineNumber":14,"author":{"gitId":"xinweit"},"content":"    /**"},{"lineNumber":15,"author":{"gitId":"xinweit"},"content":"     * Constructor for event class."},{"lineNumber":16,"author":{"gitId":"xinweit"},"content":"     * Initializes an event with specified description and date."},{"lineNumber":17,"author":{"gitId":"xinweit"},"content":"     *"},{"lineNumber":18,"author":{"gitId":"xinweit"},"content":"     * @param description description of the event task."},{"lineNumber":19,"author":{"gitId":"xinweit"},"content":"     * @param date date of the event task."},{"lineNumber":20,"author":{"gitId":"xinweit"},"content":"     */"},{"lineNumber":21,"author":{"gitId":"xinweit"},"content":"    public Event(String description, String date) {"},{"lineNumber":22,"author":{"gitId":"xinweit"},"content":"        super(description);"},{"lineNumber":23,"author":{"gitId":"xinweit"},"content":"        this.date \u003d date;"},{"lineNumber":24,"author":{"gitId":"xinweit"},"content":"        this.localDate \u003d LocalDate.parse(date);"},{"lineNumber":25,"author":{"gitId":"xinweit"},"content":"        this.type \u003d \u0027E\u0027;"},{"lineNumber":26,"author":{"gitId":"xinweit"},"content":"    }"},{"lineNumber":27,"author":{"gitId":"xinweit"},"content":""},{"lineNumber":28,"author":{"gitId":"xinweit"},"content":"    /**"},{"lineNumber":29,"author":{"gitId":"xinweit"},"content":"     * Returns date of this event."},{"lineNumber":30,"author":{"gitId":"xinweit"},"content":"     *"},{"lineNumber":31,"author":{"gitId":"xinweit"},"content":"     * @return the date of this event."},{"lineNumber":32,"author":{"gitId":"xinweit"},"content":"     */"},{"lineNumber":33,"author":{"gitId":"xinweit"},"content":"    public String getDate() {"},{"lineNumber":34,"author":{"gitId":"xinweit"},"content":"        return this.date;"},{"lineNumber":35,"author":{"gitId":"xinweit"},"content":"    }"},{"lineNumber":36,"author":{"gitId":"xinweit"},"content":""},{"lineNumber":37,"author":{"gitId":"xinweit"},"content":"    /**"},{"lineNumber":38,"author":{"gitId":"xinweit"},"content":"     * Returns the parsed LocalDate."},{"lineNumber":39,"author":{"gitId":"xinweit"},"content":"     *"},{"lineNumber":40,"author":{"gitId":"xinweit"},"content":"     * @return the LocalDate of this event."},{"lineNumber":41,"author":{"gitId":"xinweit"},"content":"     */"},{"lineNumber":42,"author":{"gitId":"xinweit"},"content":"    public LocalDate getLocalDate() {"},{"lineNumber":43,"author":{"gitId":"xinweit"},"content":"        return this.localDate;"},{"lineNumber":44,"author":{"gitId":"xinweit"},"content":"    }"},{"lineNumber":45,"author":{"gitId":"xinweit"},"content":""},{"lineNumber":46,"author":{"gitId":"xinweit"},"content":"    /**"},{"lineNumber":47,"author":{"gitId":"xinweit"},"content":"     * Returns an event in MMM dd yyyy format."},{"lineNumber":48,"author":{"gitId":"xinweit"},"content":"     *"},{"lineNumber":49,"author":{"gitId":"xinweit"},"content":"     * @return a formatted event."},{"lineNumber":50,"author":{"gitId":"xinweit"},"content":"     */"},{"lineNumber":51,"author":{"gitId":"xinweit"},"content":"    public String getFormattedDateString() {"},{"lineNumber":52,"author":{"gitId":"xinweit"},"content":"        return localDate.format(DateTimeFormatter.ofPattern(\"MMM dd yyyy\"));"},{"lineNumber":53,"author":{"gitId":"xinweit"},"content":"    }"},{"lineNumber":54,"author":{"gitId":"xinweit"},"content":""},{"lineNumber":55,"author":{"gitId":"xinweit"},"content":"    @Override"},{"lineNumber":56,"author":{"gitId":"xinweit"},"content":"    public String toString() {"},{"lineNumber":57,"author":{"gitId":"xinweit"},"content":"        return \"[E]\" + super.toString() + \" (at: \" + this.getFormattedDateString() + \")\";"},{"lineNumber":58,"author":{"gitId":"xinweit"},"content":"    }"},{"lineNumber":59,"author":{"gitId":"xinweit"},"content":"}"}],"authorContributionMap":{"xinweit":59}},{"path":"src/main/java/zeke/Launcher.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"xinweit"},"content":"package zeke;"},{"lineNumber":2,"author":{"gitId":"xinweit"},"content":""},{"lineNumber":3,"author":{"gitId":"xinweit"},"content":"import javafx.application.Application;"},{"lineNumber":4,"author":{"gitId":"xinweit"},"content":""},{"lineNumber":5,"author":{"gitId":"xinweit"},"content":"/**"},{"lineNumber":6,"author":{"gitId":"xinweit"},"content":" * A launcher class to workaround classpath issues."},{"lineNumber":7,"author":{"gitId":"xinweit"},"content":" */"},{"lineNumber":8,"author":{"gitId":"xinweit"},"content":"public class Launcher {"},{"lineNumber":9,"author":{"gitId":"xinweit"},"content":"    public static void main(String[] args) {"},{"lineNumber":10,"author":{"gitId":"xinweit"},"content":"        Application.launch(Main.class, args);"},{"lineNumber":11,"author":{"gitId":"xinweit"},"content":"    }"},{"lineNumber":12,"author":{"gitId":"xinweit"},"content":"}"}],"authorContributionMap":{"xinweit":12}},{"path":"src/main/java/zeke/Main.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"xinweit"},"content":"package zeke;"},{"lineNumber":2,"author":{"gitId":"xinweit"},"content":""},{"lineNumber":3,"author":{"gitId":"xinweit"},"content":"import java.io.IOException;"},{"lineNumber":4,"author":{"gitId":"xinweit"},"content":""},{"lineNumber":5,"author":{"gitId":"xinweit"},"content":"import javafx.application.Application;"},{"lineNumber":6,"author":{"gitId":"xinweit"},"content":"import javafx.fxml.FXMLLoader;"},{"lineNumber":7,"author":{"gitId":"xinweit"},"content":"import javafx.scene.Scene;"},{"lineNumber":8,"author":{"gitId":"xinweit"},"content":"import javafx.scene.layout.AnchorPane;"},{"lineNumber":9,"author":{"gitId":"xinweit"},"content":"import javafx.stage.Stage;"},{"lineNumber":10,"author":{"gitId":"xinweit"},"content":""},{"lineNumber":11,"author":{"gitId":"xinweit"},"content":"/**"},{"lineNumber":12,"author":{"gitId":"xinweit"},"content":" * A GUI for Zeke using FXML."},{"lineNumber":13,"author":{"gitId":"xinweit"},"content":" */"},{"lineNumber":14,"author":{"gitId":"xinweit"},"content":"public class Main extends Application {"},{"lineNumber":15,"author":{"gitId":"xinweit"},"content":""},{"lineNumber":16,"author":{"gitId":"xinweit"},"content":"    private Zeke zeke \u003d new Zeke(\"data/zeke.txt\");"},{"lineNumber":17,"author":{"gitId":"xinweit"},"content":""},{"lineNumber":18,"author":{"gitId":"xinweit"},"content":"    @Override"},{"lineNumber":19,"author":{"gitId":"xinweit"},"content":"    public void start(Stage stage) {"},{"lineNumber":20,"author":{"gitId":"xinweit"},"content":"        try {"},{"lineNumber":21,"author":{"gitId":"xinweit"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(Main.class.getResource(\"/view/MainWindow.fxml\"));"},{"lineNumber":22,"author":{"gitId":"xinweit"},"content":"            AnchorPane ap \u003d fxmlLoader.load();"},{"lineNumber":23,"author":{"gitId":"xinweit"},"content":"            Scene scene \u003d new Scene(ap);"},{"lineNumber":24,"author":{"gitId":"xinweit"},"content":"            stage.setScene(scene);"},{"lineNumber":25,"author":{"gitId":"xinweit"},"content":"            fxmlLoader.\u003cMainWindow\u003egetController().setZeke(zeke);"},{"lineNumber":26,"author":{"gitId":"xinweit"},"content":"            stage.setTitle(\"Zeke\");"},{"lineNumber":27,"author":{"gitId":"xinweit"},"content":"            stage.show();"},{"lineNumber":28,"author":{"gitId":"xinweit"},"content":"        } catch (IOException e) {"},{"lineNumber":29,"author":{"gitId":"xinweit"},"content":"            e.printStackTrace();"},{"lineNumber":30,"author":{"gitId":"xinweit"},"content":"        }"},{"lineNumber":31,"author":{"gitId":"xinweit"},"content":"    }"},{"lineNumber":32,"author":{"gitId":"xinweit"},"content":"}"}],"authorContributionMap":{"xinweit":32}},{"path":"src/main/java/zeke/MainWindow.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"xinweit"},"content":"package zeke;"},{"lineNumber":2,"author":{"gitId":"xinweit"},"content":""},{"lineNumber":3,"author":{"gitId":"xinweit"},"content":"import java.util.Timer;"},{"lineNumber":4,"author":{"gitId":"xinweit"},"content":"import java.util.TimerTask;"},{"lineNumber":5,"author":{"gitId":"xinweit"},"content":""},{"lineNumber":6,"author":{"gitId":"xinweit"},"content":"import javafx.fxml.FXML;"},{"lineNumber":7,"author":{"gitId":"xinweit"},"content":"import javafx.scene.control.Button;"},{"lineNumber":8,"author":{"gitId":"xinweit"},"content":"import javafx.scene.control.ScrollPane;"},{"lineNumber":9,"author":{"gitId":"xinweit"},"content":"import javafx.scene.control.TextField;"},{"lineNumber":10,"author":{"gitId":"xinweit"},"content":"import javafx.scene.image.Image;"},{"lineNumber":11,"author":{"gitId":"xinweit"},"content":"import javafx.scene.layout.AnchorPane;"},{"lineNumber":12,"author":{"gitId":"xinweit"},"content":"import javafx.scene.layout.VBox;"},{"lineNumber":13,"author":{"gitId":"xinweit"},"content":""},{"lineNumber":14,"author":{"gitId":"xinweit"},"content":"/**"},{"lineNumber":15,"author":{"gitId":"xinweit"},"content":" * Controller for MainWindow. Provides the layout for the other controls."},{"lineNumber":16,"author":{"gitId":"xinweit"},"content":" */"},{"lineNumber":17,"author":{"gitId":"xinweit"},"content":"public class MainWindow extends AnchorPane {"},{"lineNumber":18,"author":{"gitId":"xinweit"},"content":"    @FXML"},{"lineNumber":19,"author":{"gitId":"xinweit"},"content":"    private ScrollPane scrollPane;"},{"lineNumber":20,"author":{"gitId":"xinweit"},"content":"    @FXML"},{"lineNumber":21,"author":{"gitId":"xinweit"},"content":"    private VBox dialogContainer;"},{"lineNumber":22,"author":{"gitId":"xinweit"},"content":"    @FXML"},{"lineNumber":23,"author":{"gitId":"xinweit"},"content":"    private TextField userInput;"},{"lineNumber":24,"author":{"gitId":"xinweit"},"content":"    @FXML"},{"lineNumber":25,"author":{"gitId":"xinweit"},"content":"    private Button sendButton;"},{"lineNumber":26,"author":{"gitId":"xinweit"},"content":""},{"lineNumber":27,"author":{"gitId":"xinweit"},"content":"    private Zeke zeke;"},{"lineNumber":28,"author":{"gitId":"xinweit"},"content":""},{"lineNumber":29,"author":{"gitId":"xinweit"},"content":"    private Image userImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/AttackTitan.jpg\"));"},{"lineNumber":30,"author":{"gitId":"xinweit"},"content":"    private Image zekeImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/BeastTitan.jpg\"));"},{"lineNumber":31,"author":{"gitId":"xinweit"},"content":""},{"lineNumber":32,"author":{"gitId":"xinweit"},"content":"    /**"},{"lineNumber":33,"author":{"gitId":"xinweit"},"content":"     * Creates a window and greets user"},{"lineNumber":34,"author":{"gitId":"xinweit"},"content":"     */"},{"lineNumber":35,"author":{"gitId":"xinweit"},"content":"    @FXML"},{"lineNumber":36,"author":{"gitId":"xinweit"},"content":"    public void initialize() {"},{"lineNumber":37,"author":{"gitId":"xinweit"},"content":"        scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());"},{"lineNumber":38,"author":{"gitId":"xinweit"},"content":"        dialogContainer.getChildren().addAll("},{"lineNumber":39,"author":{"gitId":"xinweit"},"content":"                DialogBox.getZekeDialog(Ui.greetings(), zekeImage)"},{"lineNumber":40,"author":{"gitId":"xinweit"},"content":"        );"},{"lineNumber":41,"author":{"gitId":"xinweit"},"content":"    }"},{"lineNumber":42,"author":{"gitId":"xinweit"},"content":""},{"lineNumber":43,"author":{"gitId":"xinweit"},"content":"    public void setZeke(Zeke d) {"},{"lineNumber":44,"author":{"gitId":"xinweit"},"content":"        zeke \u003d d;"},{"lineNumber":45,"author":{"gitId":"xinweit"},"content":"    }"},{"lineNumber":46,"author":{"gitId":"xinweit"},"content":""},{"lineNumber":47,"author":{"gitId":"xinweit"},"content":"    /**"},{"lineNumber":48,"author":{"gitId":"xinweit"},"content":"     * Creates two dialog boxes, one echoing user input and the other containing Zeke\u0027s reply and then appends them to"},{"lineNumber":49,"author":{"gitId":"xinweit"},"content":"     * the dialog container. Clears the user input after processing."},{"lineNumber":50,"author":{"gitId":"xinweit"},"content":"     */"},{"lineNumber":51,"author":{"gitId":"xinweit"},"content":"    @FXML"},{"lineNumber":52,"author":{"gitId":"xinweit"},"content":"    private void handleUserInput() {"},{"lineNumber":53,"author":{"gitId":"xinweit"},"content":"        String input \u003d userInput.getText();"},{"lineNumber":54,"author":{"gitId":"xinweit"},"content":"        String response \u003d zeke.getResponse(input);"},{"lineNumber":55,"author":{"gitId":"xinweit"},"content":"        dialogContainer.getChildren().addAll("},{"lineNumber":56,"author":{"gitId":"xinweit"},"content":"                DialogBox.getUserDialog(input, userImage),"},{"lineNumber":57,"author":{"gitId":"xinweit"},"content":"                DialogBox.getZekeDialog(response, zekeImage)"},{"lineNumber":58,"author":{"gitId":"xinweit"},"content":"        );"},{"lineNumber":59,"author":{"gitId":"xinweit"},"content":"        userInput.clear();"},{"lineNumber":60,"author":{"gitId":"xinweit"},"content":"        if (input.equals(\"bye\")) {"},{"lineNumber":61,"author":{"gitId":"xinweit"},"content":"            TimerTask closeApp \u003d new TimerTask() {"},{"lineNumber":62,"author":{"gitId":"xinweit"},"content":"                public void run() {"},{"lineNumber":63,"author":{"gitId":"xinweit"},"content":"                    System.exit(0);"},{"lineNumber":64,"author":{"gitId":"xinweit"},"content":"                }"},{"lineNumber":65,"author":{"gitId":"xinweit"},"content":"            };"},{"lineNumber":66,"author":{"gitId":"xinweit"},"content":"            Timer timer \u003d new Timer();"},{"lineNumber":67,"author":{"gitId":"xinweit"},"content":"            timer.schedule(closeApp, 1500);"},{"lineNumber":68,"author":{"gitId":"xinweit"},"content":"        }"},{"lineNumber":69,"author":{"gitId":"xinweit"},"content":"    }"},{"lineNumber":70,"author":{"gitId":"xinweit"},"content":"}"}],"authorContributionMap":{"xinweit":70}},{"path":"src/main/java/zeke/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"xinweit"},"content":"package zeke;"},{"lineNumber":2,"author":{"gitId":"xinweit"},"content":""},{"lineNumber":3,"author":{"gitId":"xinweit"},"content":"import java.util.ArrayList;"},{"lineNumber":4,"author":{"gitId":"xinweit"},"content":"import java.util.Locale;"},{"lineNumber":5,"author":{"gitId":"xinweit"},"content":""},{"lineNumber":6,"author":{"gitId":"xinweit"},"content":"import zeke.exceptions.InvalidDescriptionException;"},{"lineNumber":7,"author":{"gitId":"xinweit"},"content":"import zeke.exceptions.InvalidIndexException;"},{"lineNumber":8,"author":{"gitId":"xinweit"},"content":"import zeke.exceptions.ZekeException;"},{"lineNumber":9,"author":{"gitId":"xinweit"},"content":""},{"lineNumber":10,"author":{"gitId":"xinweit"},"content":"/**"},{"lineNumber":11,"author":{"gitId":"xinweit"},"content":" * Parser class to make sense of user input."},{"lineNumber":12,"author":{"gitId":"xinweit"},"content":" */"},{"lineNumber":13,"author":{"gitId":"xinweit"},"content":"public class Parser {"},{"lineNumber":14,"author":{"gitId":"xinweit"},"content":""},{"lineNumber":15,"author":{"gitId":"xinweit"},"content":"    /**"},{"lineNumber":16,"author":{"gitId":"xinweit"},"content":"     * Constructor for Parser class."},{"lineNumber":17,"author":{"gitId":"xinweit"},"content":"     * Initializes a Parser object."},{"lineNumber":18,"author":{"gitId":"xinweit"},"content":"     */"},{"lineNumber":19,"author":{"gitId":"xinweit"},"content":"    public Parser() {"},{"lineNumber":20,"author":{"gitId":"xinweit"},"content":"    }"},{"lineNumber":21,"author":{"gitId":"xinweit"},"content":""},{"lineNumber":22,"author":{"gitId":"xinweit"},"content":"    /**"},{"lineNumber":23,"author":{"gitId":"xinweit"},"content":"     * Separates the command from the rest of the text."},{"lineNumber":24,"author":{"gitId":"xinweit"},"content":"     *"},{"lineNumber":25,"author":{"gitId":"xinweit"},"content":"     * @param input user input."},{"lineNumber":26,"author":{"gitId":"xinweit"},"content":"     * @return an array of String objects."},{"lineNumber":27,"author":{"gitId":"xinweit"},"content":"     */"},{"lineNumber":28,"author":{"gitId":"xinweit"},"content":"    public String[] getInputArr(String input) {"},{"lineNumber":29,"author":{"gitId":"xinweit"},"content":"        return input.split(\" \", 2);"},{"lineNumber":30,"author":{"gitId":"xinweit"},"content":"    }"},{"lineNumber":31,"author":{"gitId":"xinweit"},"content":""},{"lineNumber":32,"author":{"gitId":"xinweit"},"content":"    /**"},{"lineNumber":33,"author":{"gitId":"xinweit"},"content":"     * Gets the command from the input array."},{"lineNumber":34,"author":{"gitId":"xinweit"},"content":"     *"},{"lineNumber":35,"author":{"gitId":"xinweit"},"content":"     * @param inputArr user input array."},{"lineNumber":36,"author":{"gitId":"xinweit"},"content":"     * @return command."},{"lineNumber":37,"author":{"gitId":"xinweit"},"content":"     */"},{"lineNumber":38,"author":{"gitId":"xinweit"},"content":"    public Command getCommand(String[] inputArr) {"},{"lineNumber":39,"author":{"gitId":"xinweit"},"content":"        return Command.valueOf(inputArr[0].toUpperCase(Locale.ROOT));"},{"lineNumber":40,"author":{"gitId":"xinweit"},"content":"    }"},{"lineNumber":41,"author":{"gitId":"xinweit"},"content":""},{"lineNumber":42,"author":{"gitId":"xinweit"},"content":"    /**"},{"lineNumber":43,"author":{"gitId":"xinweit"},"content":"     * Checks whether input task description is missing."},{"lineNumber":44,"author":{"gitId":"xinweit"},"content":"     *"},{"lineNumber":45,"author":{"gitId":"xinweit"},"content":"     * @param inputArr user input array."},{"lineNumber":46,"author":{"gitId":"xinweit"},"content":"     * @throws ZekeException if input task description is missing."},{"lineNumber":47,"author":{"gitId":"xinweit"},"content":"     */"},{"lineNumber":48,"author":{"gitId":"xinweit"},"content":"    public void isValidDescription(String[] inputArr) throws InvalidDescriptionException {"},{"lineNumber":49,"author":{"gitId":"xinweit"},"content":"        if (inputArr.length \u003d\u003d 1 || inputArr[1].equals(\"\") || inputArr[1].startsWith(\" \")) {"},{"lineNumber":50,"author":{"gitId":"xinweit"},"content":"            throw new InvalidDescriptionException();"},{"lineNumber":51,"author":{"gitId":"xinweit"},"content":"        }"},{"lineNumber":52,"author":{"gitId":"xinweit"},"content":"    }"},{"lineNumber":53,"author":{"gitId":"xinweit"},"content":""},{"lineNumber":54,"author":{"gitId":"xinweit"},"content":"    /**"},{"lineNumber":55,"author":{"gitId":"xinweit"},"content":"     * Checks whether input index is out of range."},{"lineNumber":56,"author":{"gitId":"xinweit"},"content":"     *"},{"lineNumber":57,"author":{"gitId":"xinweit"},"content":"     * @param inputArr user input array."},{"lineNumber":58,"author":{"gitId":"xinweit"},"content":"     * @throws InvalidIndexException if index given is out of range."},{"lineNumber":59,"author":{"gitId":"xinweit"},"content":"     */"},{"lineNumber":60,"author":{"gitId":"xinweit"},"content":"    public void isValidIndex(String[] inputArr, ArrayList\u003cTask\u003e list) throws InvalidIndexException {"},{"lineNumber":61,"author":{"gitId":"xinweit"},"content":"        int indexToDelete \u003d Integer.parseInt(inputArr[1]);"},{"lineNumber":62,"author":{"gitId":"xinweit"},"content":"        if (indexToDelete \u003c 1 || indexToDelete \u003e list.size()) {"},{"lineNumber":63,"author":{"gitId":"xinweit"},"content":"            throw new InvalidIndexException();"},{"lineNumber":64,"author":{"gitId":"xinweit"},"content":"        }"},{"lineNumber":65,"author":{"gitId":"xinweit"},"content":"    }"},{"lineNumber":66,"author":{"gitId":"xinweit"},"content":""},{"lineNumber":67,"author":{"gitId":"xinweit"},"content":"    /**"},{"lineNumber":68,"author":{"gitId":"xinweit"},"content":"     *  Gets the description of task from input array."},{"lineNumber":69,"author":{"gitId":"xinweit"},"content":"     *"},{"lineNumber":70,"author":{"gitId":"xinweit"},"content":"     * @param inputArr user input array."},{"lineNumber":71,"author":{"gitId":"xinweit"},"content":"     * @param taskType type of task."},{"lineNumber":72,"author":{"gitId":"xinweit"},"content":"     * @return description of task."},{"lineNumber":73,"author":{"gitId":"xinweit"},"content":"     */"},{"lineNumber":74,"author":{"gitId":"xinweit"},"content":"    public String getDescription(String[] inputArr, String taskType) {"},{"lineNumber":75,"author":{"gitId":"xinweit"},"content":"        if (taskType.equals(\"todo\")) {"},{"lineNumber":76,"author":{"gitId":"xinweit"},"content":"            return inputArr[1];"},{"lineNumber":77,"author":{"gitId":"xinweit"},"content":"        } else {"},{"lineNumber":78,"author":{"gitId":"xinweit"},"content":"            assert taskType.equals(\"event\") || taskType.equals(\"deadline\") : \"Task type should be an event or deadline\";"},{"lineNumber":79,"author":{"gitId":"xinweit"},"content":"            return inputArr[1].substring(0, inputArr[1].indexOf(\"/\") - 1);"},{"lineNumber":80,"author":{"gitId":"xinweit"},"content":"        }"},{"lineNumber":81,"author":{"gitId":"xinweit"},"content":"    }"},{"lineNumber":82,"author":{"gitId":"xinweit"},"content":""},{"lineNumber":83,"author":{"gitId":"xinweit"},"content":"    /**"},{"lineNumber":84,"author":{"gitId":"xinweit"},"content":"     *  Gets the date of task from input array."},{"lineNumber":85,"author":{"gitId":"xinweit"},"content":"     *"},{"lineNumber":86,"author":{"gitId":"xinweit"},"content":"     * @param inputArr user input array."},{"lineNumber":87,"author":{"gitId":"xinweit"},"content":"     * @param taskType type of task."},{"lineNumber":88,"author":{"gitId":"xinweit"},"content":"     * @return date of task."},{"lineNumber":89,"author":{"gitId":"xinweit"},"content":"     */"},{"lineNumber":90,"author":{"gitId":"xinweit"},"content":"    public String getDate(String[] inputArr, String taskType) {"},{"lineNumber":91,"author":{"gitId":"xinweit"},"content":"        if (taskType.equals(\"deadline\")) {"},{"lineNumber":92,"author":{"gitId":"xinweit"},"content":"            return inputArr[1].substring(inputArr[1].indexOf(\"/by\") + 4);"},{"lineNumber":93,"author":{"gitId":"xinweit"},"content":"        } else {"},{"lineNumber":94,"author":{"gitId":"xinweit"},"content":"            assert taskType.equals(\"event\") : \"Task type should be an event\";"},{"lineNumber":95,"author":{"gitId":"xinweit"},"content":"            return inputArr[1].substring(inputArr[1].indexOf(\"/at\") + 4);"},{"lineNumber":96,"author":{"gitId":"xinweit"},"content":"        }"},{"lineNumber":97,"author":{"gitId":"xinweit"},"content":"    }"},{"lineNumber":98,"author":{"gitId":"xinweit"},"content":"}"}],"authorContributionMap":{"xinweit":98}},{"path":"src/main/java/zeke/Statistics.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"xinweit"},"content":"package zeke;"},{"lineNumber":2,"author":{"gitId":"xinweit"},"content":""},{"lineNumber":3,"author":{"gitId":"xinweit"},"content":"import java.time.LocalDate;"},{"lineNumber":4,"author":{"gitId":"xinweit"},"content":"import java.time.temporal.ChronoUnit;"},{"lineNumber":5,"author":{"gitId":"xinweit"},"content":"import java.util.ArrayList;"},{"lineNumber":6,"author":{"gitId":"xinweit"},"content":""},{"lineNumber":7,"author":{"gitId":"xinweit"},"content":""},{"lineNumber":8,"author":{"gitId":"xinweit"},"content":"public class Statistics {"},{"lineNumber":9,"author":{"gitId":"xinweit"},"content":""},{"lineNumber":10,"author":{"gitId":"xinweit"},"content":"    /**"},{"lineNumber":11,"author":{"gitId":"xinweit"},"content":"     * Returns deadlines that are overdue and not completed yet."},{"lineNumber":12,"author":{"gitId":"xinweit"},"content":"     *"},{"lineNumber":13,"author":{"gitId":"xinweit"},"content":"     * @param list list of tasks."},{"lineNumber":14,"author":{"gitId":"xinweit"},"content":"     * @return list of overdue deadlines."},{"lineNumber":15,"author":{"gitId":"xinweit"},"content":"     */"},{"lineNumber":16,"author":{"gitId":"xinweit"},"content":"    public String getOverdueDeadlines(ArrayList\u003cTask\u003e list) {"},{"lineNumber":17,"author":{"gitId":"xinweit"},"content":"        String message \u003d \"\";"},{"lineNumber":18,"author":{"gitId":"xinweit"},"content":"        ArrayList\u003cTask\u003e overdueDeadlines \u003d new ArrayList\u003c\u003e();"},{"lineNumber":19,"author":{"gitId":"xinweit"},"content":"        for (Task task : list) {"},{"lineNumber":20,"author":{"gitId":"xinweit"},"content":"            if (task.getType() \u003d\u003d \u0027D\u0027 \u0026\u0026 !task.getDoneStatus()) {"},{"lineNumber":21,"author":{"gitId":"xinweit"},"content":"                Deadline deadline \u003d (Deadline) task;"},{"lineNumber":22,"author":{"gitId":"xinweit"},"content":"                if (deadline.getLocalDate().isBefore(LocalDate.now())) {"},{"lineNumber":23,"author":{"gitId":"xinweit"},"content":"                    overdueDeadlines.add(task);"},{"lineNumber":24,"author":{"gitId":"xinweit"},"content":"                }"},{"lineNumber":25,"author":{"gitId":"xinweit"},"content":"            }"},{"lineNumber":26,"author":{"gitId":"xinweit"},"content":"        }"},{"lineNumber":27,"author":{"gitId":"xinweit"},"content":"        int num \u003d 1;"},{"lineNumber":28,"author":{"gitId":"xinweit"},"content":"        for (Task task : overdueDeadlines) {"},{"lineNumber":29,"author":{"gitId":"xinweit"},"content":"            message +\u003d String.format(\"%d. %s\", num, task) + \"\\n\";"},{"lineNumber":30,"author":{"gitId":"xinweit"},"content":"            num++;"},{"lineNumber":31,"author":{"gitId":"xinweit"},"content":"        }"},{"lineNumber":32,"author":{"gitId":"xinweit"},"content":"        return message;"},{"lineNumber":33,"author":{"gitId":"xinweit"},"content":"    }"},{"lineNumber":34,"author":{"gitId":"xinweit"},"content":""},{"lineNumber":35,"author":{"gitId":"xinweit"},"content":"    /**"},{"lineNumber":36,"author":{"gitId":"xinweit"},"content":"     * Returns deadlines due or events happening in a week from now."},{"lineNumber":37,"author":{"gitId":"xinweit"},"content":"     *"},{"lineNumber":38,"author":{"gitId":"xinweit"},"content":"     * @param list list of tasks."},{"lineNumber":39,"author":{"gitId":"xinweit"},"content":"     * @return list of deadlines and events due soon."},{"lineNumber":40,"author":{"gitId":"xinweit"},"content":"     */"},{"lineNumber":41,"author":{"gitId":"xinweit"},"content":"    public String getTasksDueSoon(ArrayList\u003cTask\u003e list) {"},{"lineNumber":42,"author":{"gitId":"xinweit"},"content":"        String message \u003d \"\";"},{"lineNumber":43,"author":{"gitId":"xinweit"},"content":"        ArrayList\u003cTask\u003e tasksDueSoon \u003d new ArrayList\u003c\u003e();"},{"lineNumber":44,"author":{"gitId":"xinweit"},"content":"        for (Task task : list) {"},{"lineNumber":45,"author":{"gitId":"xinweit"},"content":"            if (task.getType() \u003d\u003d \u0027D\u0027) {"},{"lineNumber":46,"author":{"gitId":"xinweit"},"content":"                Deadline deadline \u003d (Deadline) task;"},{"lineNumber":47,"author":{"gitId":"xinweit"},"content":"                int numberOfDaysApart \u003d (int) LocalDate.now().until(deadline.getLocalDate(), ChronoUnit.DAYS);"},{"lineNumber":48,"author":{"gitId":"xinweit"},"content":"                if (numberOfDaysApart \u003c\u003d 7 \u0026\u0026 numberOfDaysApart \u003e\u003d 0) {"},{"lineNumber":49,"author":{"gitId":"xinweit"},"content":"                    tasksDueSoon.add(task);"},{"lineNumber":50,"author":{"gitId":"xinweit"},"content":"                }"},{"lineNumber":51,"author":{"gitId":"xinweit"},"content":"            } else if (task.getType() \u003d\u003d \u0027E\u0027) {"},{"lineNumber":52,"author":{"gitId":"xinweit"},"content":"                Event event \u003d (Event) task;"},{"lineNumber":53,"author":{"gitId":"xinweit"},"content":"                int numberOfDaysApart \u003d (int) LocalDate.now().until(event.getLocalDate(), ChronoUnit.DAYS);"},{"lineNumber":54,"author":{"gitId":"xinweit"},"content":"                if (numberOfDaysApart \u003c\u003d 7 \u0026\u0026 numberOfDaysApart \u003e\u003d 0) {"},{"lineNumber":55,"author":{"gitId":"xinweit"},"content":"                    tasksDueSoon.add(task);"},{"lineNumber":56,"author":{"gitId":"xinweit"},"content":"                }"},{"lineNumber":57,"author":{"gitId":"xinweit"},"content":"            }"},{"lineNumber":58,"author":{"gitId":"xinweit"},"content":"        }"},{"lineNumber":59,"author":{"gitId":"xinweit"},"content":"        int num \u003d 1;"},{"lineNumber":60,"author":{"gitId":"xinweit"},"content":"        for (Task task : tasksDueSoon) {"},{"lineNumber":61,"author":{"gitId":"xinweit"},"content":"            message +\u003d String.format(\"%d. %s\", num, task) + \"\\n\";"},{"lineNumber":62,"author":{"gitId":"xinweit"},"content":"            num++;"},{"lineNumber":63,"author":{"gitId":"xinweit"},"content":"        }"},{"lineNumber":64,"author":{"gitId":"xinweit"},"content":"        return message;"},{"lineNumber":65,"author":{"gitId":"xinweit"},"content":"    }"},{"lineNumber":66,"author":{"gitId":"xinweit"},"content":""},{"lineNumber":67,"author":{"gitId":"xinweit"},"content":"}"}],"authorContributionMap":{"xinweit":67}},{"path":"src/main/java/zeke/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"xinweit"},"content":"package zeke;"},{"lineNumber":2,"author":{"gitId":"xinweit"},"content":""},{"lineNumber":3,"author":{"gitId":"xinweit"},"content":"import java.io.File;"},{"lineNumber":4,"author":{"gitId":"xinweit"},"content":"import java.io.FileWriter;"},{"lineNumber":5,"author":{"gitId":"xinweit"},"content":"import java.io.IOException;"},{"lineNumber":6,"author":{"gitId":"xinweit"},"content":"import java.util.ArrayList;"},{"lineNumber":7,"author":{"gitId":"xinweit"},"content":"import java.util.Scanner;"},{"lineNumber":8,"author":{"gitId":"xinweit"},"content":""},{"lineNumber":9,"author":{"gitId":"xinweit"},"content":"/**"},{"lineNumber":10,"author":{"gitId":"xinweit"},"content":" * Storage class to save tasks to and load tasks from file on local machine."},{"lineNumber":11,"author":{"gitId":"xinweit"},"content":" */"},{"lineNumber":12,"author":{"gitId":"xinweit"},"content":"public class Storage {"},{"lineNumber":13,"author":{"gitId":"xinweit"},"content":""},{"lineNumber":14,"author":{"gitId":"xinweit"},"content":"    protected String filePath;"},{"lineNumber":15,"author":{"gitId":"xinweit"},"content":""},{"lineNumber":16,"author":{"gitId":"xinweit"},"content":"    /**"},{"lineNumber":17,"author":{"gitId":"xinweit"},"content":"     * Constructor for Storage class."},{"lineNumber":18,"author":{"gitId":"xinweit"},"content":"     * Initializes a Storage object that contains filePath."},{"lineNumber":19,"author":{"gitId":"xinweit"},"content":"     *"},{"lineNumber":20,"author":{"gitId":"xinweit"},"content":"     * @param filePath file path to file where user wants his task list saved and loaded."},{"lineNumber":21,"author":{"gitId":"xinweit"},"content":"     */"},{"lineNumber":22,"author":{"gitId":"xinweit"},"content":"    public Storage(String filePath) {"},{"lineNumber":23,"author":{"gitId":"xinweit"},"content":"        this.filePath \u003d filePath;"},{"lineNumber":24,"author":{"gitId":"xinweit"},"content":"    }"},{"lineNumber":25,"author":{"gitId":"xinweit"},"content":""},{"lineNumber":26,"author":{"gitId":"xinweit"},"content":"    /**"},{"lineNumber":27,"author":{"gitId":"xinweit"},"content":"     * Saves tasks to file locally."},{"lineNumber":28,"author":{"gitId":"xinweit"},"content":"     *"},{"lineNumber":29,"author":{"gitId":"xinweit"},"content":"     * @param list list of Task objects."},{"lineNumber":30,"author":{"gitId":"xinweit"},"content":"     * @throws IOException if file path cannot be found."},{"lineNumber":31,"author":{"gitId":"xinweit"},"content":"     */"},{"lineNumber":32,"author":{"gitId":"xinweit"},"content":"    public void saveTasks(ArrayList\u003cTask\u003e list) throws IOException {"},{"lineNumber":33,"author":{"gitId":"xinweit"},"content":"        FileWriter fw \u003d new FileWriter(filePath);"},{"lineNumber":34,"author":{"gitId":"xinweit"},"content":"        String fileContent \u003d \"\";"},{"lineNumber":35,"author":{"gitId":"xinweit"},"content":"        for (Task task: list) {"},{"lineNumber":36,"author":{"gitId":"xinweit"},"content":"            int num;"},{"lineNumber":37,"author":{"gitId":"xinweit"},"content":"            String description \u003d task.getDescription();"},{"lineNumber":38,"author":{"gitId":"xinweit"},"content":"            char type \u003d task.getType();"},{"lineNumber":39,"author":{"gitId":"xinweit"},"content":"            if (!task.getDoneStatus()) {"},{"lineNumber":40,"author":{"gitId":"xinweit"},"content":"                num \u003d 0;"},{"lineNumber":41,"author":{"gitId":"xinweit"},"content":"            } else {"},{"lineNumber":42,"author":{"gitId":"xinweit"},"content":"                num \u003d 1;"},{"lineNumber":43,"author":{"gitId":"xinweit"},"content":"            }"},{"lineNumber":44,"author":{"gitId":"xinweit"},"content":"            if (type \u003d\u003d \u0027T\u0027) {"},{"lineNumber":45,"author":{"gitId":"xinweit"},"content":"                fileContent +\u003d type + \" ; \" + num + \" ; \" + description + \"\\n\";"},{"lineNumber":46,"author":{"gitId":"xinweit"},"content":"            } else if (type \u003d\u003d \u0027D\u0027) {"},{"lineNumber":47,"author":{"gitId":"xinweit"},"content":"                Deadline deadline \u003d (Deadline) task;"},{"lineNumber":48,"author":{"gitId":"xinweit"},"content":"                fileContent +\u003d type + \" ; \" + num + \" ; \" + description + \" ; \" + deadline.getDate() + \"\\n\";"},{"lineNumber":49,"author":{"gitId":"xinweit"},"content":"            } else {"},{"lineNumber":50,"author":{"gitId":"xinweit"},"content":"                assert type \u003d\u003d \u0027E\u0027 : type + \": Type should be E\";"},{"lineNumber":51,"author":{"gitId":"xinweit"},"content":"                Event event \u003d (Event) task;"},{"lineNumber":52,"author":{"gitId":"xinweit"},"content":"                fileContent +\u003d type + \" ; \" + num + \" ; \" + description + \" ; \" + event.getDate() + \"\\n\";"},{"lineNumber":53,"author":{"gitId":"xinweit"},"content":"            }"},{"lineNumber":54,"author":{"gitId":"xinweit"},"content":"        }"},{"lineNumber":55,"author":{"gitId":"xinweit"},"content":"        fw.write(fileContent);"},{"lineNumber":56,"author":{"gitId":"xinweit"},"content":"        fw.close();"},{"lineNumber":57,"author":{"gitId":"xinweit"},"content":"    }"},{"lineNumber":58,"author":{"gitId":"xinweit"},"content":""},{"lineNumber":59,"author":{"gitId":"xinweit"},"content":"    /**"},{"lineNumber":60,"author":{"gitId":"xinweit"},"content":"     * Loads tasks from file locally."},{"lineNumber":61,"author":{"gitId":"xinweit"},"content":"     *"},{"lineNumber":62,"author":{"gitId":"xinweit"},"content":"     * @return an ArrayList of Task objects."},{"lineNumber":63,"author":{"gitId":"xinweit"},"content":"     */"},{"lineNumber":64,"author":{"gitId":"xinweit"},"content":"    public ArrayList\u003cTask\u003e loadTasks() {"},{"lineNumber":65,"author":{"gitId":"xinweit"},"content":"        ArrayList\u003cTask\u003e list \u003d new ArrayList\u003c\u003e();"},{"lineNumber":66,"author":{"gitId":"xinweit"},"content":"        File savedTasksFile \u003d null;"},{"lineNumber":67,"author":{"gitId":"xinweit"},"content":"        try {"},{"lineNumber":68,"author":{"gitId":"xinweit"},"content":"            savedTasksFile \u003d new File(this.filePath);"},{"lineNumber":69,"author":{"gitId":"xinweit"},"content":"            if (!savedTasksFile.exists()) {"},{"lineNumber":70,"author":{"gitId":"xinweit"},"content":"                if (!savedTasksFile.getParentFile().exists()) {"},{"lineNumber":71,"author":{"gitId":"xinweit"},"content":"                    File parentDir \u003d savedTasksFile.getParentFile();"},{"lineNumber":72,"author":{"gitId":"xinweit"},"content":"                    parentDir.mkdir();"},{"lineNumber":73,"author":{"gitId":"xinweit"},"content":"                }"},{"lineNumber":74,"author":{"gitId":"xinweit"},"content":"                savedTasksFile.createNewFile();"},{"lineNumber":75,"author":{"gitId":"xinweit"},"content":"            }"},{"lineNumber":76,"author":{"gitId":"xinweit"},"content":"            Scanner s \u003d new Scanner(savedTasksFile);"},{"lineNumber":77,"author":{"gitId":"xinweit"},"content":"            while (s.hasNextLine()) {"},{"lineNumber":78,"author":{"gitId":"xinweit"},"content":"                String line \u003d s.nextLine();"},{"lineNumber":79,"author":{"gitId":"xinweit"},"content":"                assert line.contains(\";\") : \"Saved task does not contain ; but should\";"},{"lineNumber":80,"author":{"gitId":"xinweit"},"content":"                String[] taskArr \u003d line.split(\" ; \", 4);"},{"lineNumber":81,"author":{"gitId":"xinweit"},"content":"                String type \u003d taskArr[0];"},{"lineNumber":82,"author":{"gitId":"xinweit"},"content":"                String num \u003d taskArr[1];"},{"lineNumber":83,"author":{"gitId":"xinweit"},"content":"                String description \u003d taskArr[2];"},{"lineNumber":84,"author":{"gitId":"xinweit"},"content":"                if (type.equals(\"T\")) {"},{"lineNumber":85,"author":{"gitId":"xinweit"},"content":"                    Todo todo \u003d new Todo(description);"},{"lineNumber":86,"author":{"gitId":"xinweit"},"content":"                    if (num.equals(\"1\")) {"},{"lineNumber":87,"author":{"gitId":"xinweit"},"content":"                        todo.done();"},{"lineNumber":88,"author":{"gitId":"xinweit"},"content":"                    }"},{"lineNumber":89,"author":{"gitId":"xinweit"},"content":"                    list.add(todo);"},{"lineNumber":90,"author":{"gitId":"xinweit"},"content":"                } else if (type.equals(\"D\")) {"},{"lineNumber":91,"author":{"gitId":"xinweit"},"content":"                    String when \u003d taskArr[3];"},{"lineNumber":92,"author":{"gitId":"xinweit"},"content":"                    Deadline deadline \u003d new Deadline(description, when);"},{"lineNumber":93,"author":{"gitId":"xinweit"},"content":"                    if (num.equals(\"1\")) {"},{"lineNumber":94,"author":{"gitId":"xinweit"},"content":"                        deadline.done();"},{"lineNumber":95,"author":{"gitId":"xinweit"},"content":"                    }"},{"lineNumber":96,"author":{"gitId":"xinweit"},"content":"                    list.add(deadline);"},{"lineNumber":97,"author":{"gitId":"xinweit"},"content":"                } else {"},{"lineNumber":98,"author":{"gitId":"xinweit"},"content":"                    assert type.equals(\"E\") : type + \": Type should be E\";"},{"lineNumber":99,"author":{"gitId":"xinweit"},"content":"                    String when \u003d taskArr[3];"},{"lineNumber":100,"author":{"gitId":"xinweit"},"content":"                    Event event \u003d new Event(description, when);"},{"lineNumber":101,"author":{"gitId":"xinweit"},"content":"                    if (num.equals(\"1\")) {"},{"lineNumber":102,"author":{"gitId":"xinweit"},"content":"                        event.done();"},{"lineNumber":103,"author":{"gitId":"xinweit"},"content":"                    }"},{"lineNumber":104,"author":{"gitId":"xinweit"},"content":"                    list.add(event);"},{"lineNumber":105,"author":{"gitId":"xinweit"},"content":"                }"},{"lineNumber":106,"author":{"gitId":"xinweit"},"content":"            }"},{"lineNumber":107,"author":{"gitId":"xinweit"},"content":"            s.close();"},{"lineNumber":108,"author":{"gitId":"xinweit"},"content":"        } catch (IOException e) {"},{"lineNumber":109,"author":{"gitId":"xinweit"},"content":"            e.printStackTrace();"},{"lineNumber":110,"author":{"gitId":"xinweit"},"content":"        }"},{"lineNumber":111,"author":{"gitId":"xinweit"},"content":"        return list;"},{"lineNumber":112,"author":{"gitId":"xinweit"},"content":"    }"},{"lineNumber":113,"author":{"gitId":"xinweit"},"content":"}"}],"authorContributionMap":{"xinweit":113}},{"path":"src/main/java/zeke/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"xinweit"},"content":"package zeke;"},{"lineNumber":2,"author":{"gitId":"xinweit"},"content":""},{"lineNumber":3,"author":{"gitId":"xinweit"},"content":"/**"},{"lineNumber":4,"author":{"gitId":"xinweit"},"content":" * Task class to represent a task, which is a todo, deadline or event."},{"lineNumber":5,"author":{"gitId":"xinweit"},"content":" */"},{"lineNumber":6,"author":{"gitId":"xinweit"},"content":"public class Task {"},{"lineNumber":7,"author":{"gitId":"xinweit"},"content":"    protected String description;"},{"lineNumber":8,"author":{"gitId":"xinweit"},"content":"    protected boolean isDone;"},{"lineNumber":9,"author":{"gitId":"xinweit"},"content":"    protected char type;"},{"lineNumber":10,"author":{"gitId":"xinweit"},"content":""},{"lineNumber":11,"author":{"gitId":"xinweit"},"content":"    /**"},{"lineNumber":12,"author":{"gitId":"xinweit"},"content":"     * Constructor for Task class."},{"lineNumber":13,"author":{"gitId":"xinweit"},"content":"     * Initializes a Task object with given description and marks it as not done."},{"lineNumber":14,"author":{"gitId":"xinweit"},"content":"     *"},{"lineNumber":15,"author":{"gitId":"xinweit"},"content":"     * @param description task description."},{"lineNumber":16,"author":{"gitId":"xinweit"},"content":"     */"},{"lineNumber":17,"author":{"gitId":"xinweit"},"content":"    public Task(String description) {"},{"lineNumber":18,"author":{"gitId":"xinweit"},"content":"        this.description \u003d description;"},{"lineNumber":19,"author":{"gitId":"xinweit"},"content":"        this.isDone \u003d false;"},{"lineNumber":20,"author":{"gitId":"xinweit"},"content":"    }"},{"lineNumber":21,"author":{"gitId":"xinweit"},"content":""},{"lineNumber":22,"author":{"gitId":"xinweit"},"content":"    /**"},{"lineNumber":23,"author":{"gitId":"xinweit"},"content":"     * Returns an icon depending on whether this task is done."},{"lineNumber":24,"author":{"gitId":"xinweit"},"content":"     * @return X if done or blank if not done."},{"lineNumber":25,"author":{"gitId":"xinweit"},"content":"     */"},{"lineNumber":26,"author":{"gitId":"xinweit"},"content":"    public String getStatusIcon() {"},{"lineNumber":27,"author":{"gitId":"xinweit"},"content":"        return (isDone ? \"X\" : \" \"); //return X or blank space, X means done"},{"lineNumber":28,"author":{"gitId":"xinweit"},"content":"    }"},{"lineNumber":29,"author":{"gitId":"xinweit"},"content":""},{"lineNumber":30,"author":{"gitId":"xinweit"},"content":"    /**"},{"lineNumber":31,"author":{"gitId":"xinweit"},"content":"     * Marks this task as done."},{"lineNumber":32,"author":{"gitId":"xinweit"},"content":"     */"},{"lineNumber":33,"author":{"gitId":"xinweit"},"content":"    public void done() {"},{"lineNumber":34,"author":{"gitId":"xinweit"},"content":"        this.isDone \u003d true;"},{"lineNumber":35,"author":{"gitId":"xinweit"},"content":"    }"},{"lineNumber":36,"author":{"gitId":"xinweit"},"content":""},{"lineNumber":37,"author":{"gitId":"xinweit"},"content":"    /**"},{"lineNumber":38,"author":{"gitId":"xinweit"},"content":"     * Returns the type of this task."},{"lineNumber":39,"author":{"gitId":"xinweit"},"content":"     *"},{"lineNumber":40,"author":{"gitId":"xinweit"},"content":"     * @return Type of this task as char."},{"lineNumber":41,"author":{"gitId":"xinweit"},"content":"     */"},{"lineNumber":42,"author":{"gitId":"xinweit"},"content":"    public char getType() {"},{"lineNumber":43,"author":{"gitId":"xinweit"},"content":"        return this.type;"},{"lineNumber":44,"author":{"gitId":"xinweit"},"content":"    }"},{"lineNumber":45,"author":{"gitId":"xinweit"},"content":""},{"lineNumber":46,"author":{"gitId":"xinweit"},"content":"    /**"},{"lineNumber":47,"author":{"gitId":"xinweit"},"content":"     * Returns the description of this task."},{"lineNumber":48,"author":{"gitId":"xinweit"},"content":"     *"},{"lineNumber":49,"author":{"gitId":"xinweit"},"content":"     * @return A String description of this task."},{"lineNumber":50,"author":{"gitId":"xinweit"},"content":"     */"},{"lineNumber":51,"author":{"gitId":"xinweit"},"content":"    public String getDescription() {"},{"lineNumber":52,"author":{"gitId":"xinweit"},"content":"        return this.description;"},{"lineNumber":53,"author":{"gitId":"xinweit"},"content":"    }"},{"lineNumber":54,"author":{"gitId":"xinweit"},"content":""},{"lineNumber":55,"author":{"gitId":"xinweit"},"content":"    /**"},{"lineNumber":56,"author":{"gitId":"xinweit"},"content":"     * Returns a boolean depending on whether this task is done."},{"lineNumber":57,"author":{"gitId":"xinweit"},"content":"     *"},{"lineNumber":58,"author":{"gitId":"xinweit"},"content":"     * @return Boolean depending on whether this task is done."},{"lineNumber":59,"author":{"gitId":"xinweit"},"content":"     */"},{"lineNumber":60,"author":{"gitId":"xinweit"},"content":"    public boolean getDoneStatus() {"},{"lineNumber":61,"author":{"gitId":"xinweit"},"content":"        return this.isDone;"},{"lineNumber":62,"author":{"gitId":"xinweit"},"content":"    }"},{"lineNumber":63,"author":{"gitId":"xinweit"},"content":""},{"lineNumber":64,"author":{"gitId":"xinweit"},"content":"    @Override"},{"lineNumber":65,"author":{"gitId":"xinweit"},"content":"    public String toString() {"},{"lineNumber":66,"author":{"gitId":"xinweit"},"content":"        return String.format(\"[%s] %s\", this.getStatusIcon(), this.getDescription());"},{"lineNumber":67,"author":{"gitId":"xinweit"},"content":"    }"},{"lineNumber":68,"author":{"gitId":"xinweit"},"content":"}"}],"authorContributionMap":{"xinweit":68}},{"path":"src/main/java/zeke/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"xinweit"},"content":"package zeke;"},{"lineNumber":2,"author":{"gitId":"xinweit"},"content":""},{"lineNumber":3,"author":{"gitId":"xinweit"},"content":"import java.util.ArrayList;"},{"lineNumber":4,"author":{"gitId":"xinweit"},"content":""},{"lineNumber":5,"author":{"gitId":"xinweit"},"content":"import zeke.exceptions.CompletedTaskException;"},{"lineNumber":6,"author":{"gitId":"xinweit"},"content":""},{"lineNumber":7,"author":{"gitId":"xinweit"},"content":"/**"},{"lineNumber":8,"author":{"gitId":"xinweit"},"content":" * TaskList class to store the list of tasks."},{"lineNumber":9,"author":{"gitId":"xinweit"},"content":" */"},{"lineNumber":10,"author":{"gitId":"xinweit"},"content":"public class TaskList {"},{"lineNumber":11,"author":{"gitId":"xinweit"},"content":""},{"lineNumber":12,"author":{"gitId":"xinweit"},"content":"    private ArrayList\u003cTask\u003e list;"},{"lineNumber":13,"author":{"gitId":"xinweit"},"content":""},{"lineNumber":14,"author":{"gitId":"xinweit"},"content":"    /**"},{"lineNumber":15,"author":{"gitId":"xinweit"},"content":"     * Constructor for TaskList class."},{"lineNumber":16,"author":{"gitId":"xinweit"},"content":"     * Initializes a TaskList object with list of tasks specified."},{"lineNumber":17,"author":{"gitId":"xinweit"},"content":"     *"},{"lineNumber":18,"author":{"gitId":"xinweit"},"content":"     * @param list list of tasks."},{"lineNumber":19,"author":{"gitId":"xinweit"},"content":"     */"},{"lineNumber":20,"author":{"gitId":"xinweit"},"content":"    public TaskList(ArrayList\u003cTask\u003e list) {"},{"lineNumber":21,"author":{"gitId":"xinweit"},"content":"        this.list \u003d list;"},{"lineNumber":22,"author":{"gitId":"xinweit"},"content":"    }"},{"lineNumber":23,"author":{"gitId":"xinweit"},"content":""},{"lineNumber":24,"author":{"gitId":"xinweit"},"content":"    /**"},{"lineNumber":25,"author":{"gitId":"xinweit"},"content":"     * Adds a task to list."},{"lineNumber":26,"author":{"gitId":"xinweit"},"content":"     *"},{"lineNumber":27,"author":{"gitId":"xinweit"},"content":"     * @param task task to be added."},{"lineNumber":28,"author":{"gitId":"xinweit"},"content":"     */"},{"lineNumber":29,"author":{"gitId":"xinweit"},"content":"    public void addTask(Task task) {"},{"lineNumber":30,"author":{"gitId":"xinweit"},"content":"        list.add(task);"},{"lineNumber":31,"author":{"gitId":"xinweit"},"content":"    }"},{"lineNumber":32,"author":{"gitId":"xinweit"},"content":""},{"lineNumber":33,"author":{"gitId":"xinweit"},"content":"    /**"},{"lineNumber":34,"author":{"gitId":"xinweit"},"content":"     * Deletes a task from list."},{"lineNumber":35,"author":{"gitId":"xinweit"},"content":"     *"},{"lineNumber":36,"author":{"gitId":"xinweit"},"content":"     * @param num number of task to be deleted."},{"lineNumber":37,"author":{"gitId":"xinweit"},"content":"     */"},{"lineNumber":38,"author":{"gitId":"xinweit"},"content":"    public Task deleteTask(int num) {"},{"lineNumber":39,"author":{"gitId":"xinweit"},"content":"        return list.remove(num - 1);"},{"lineNumber":40,"author":{"gitId":"xinweit"},"content":"    }"},{"lineNumber":41,"author":{"gitId":"xinweit"},"content":""},{"lineNumber":42,"author":{"gitId":"xinweit"},"content":"    /**"},{"lineNumber":43,"author":{"gitId":"xinweit"},"content":"     * Checks a task as done."},{"lineNumber":44,"author":{"gitId":"xinweit"},"content":"     *"},{"lineNumber":45,"author":{"gitId":"xinweit"},"content":"     * @param task task to be checked as done."},{"lineNumber":46,"author":{"gitId":"xinweit"},"content":"     * @throws CompletedTaskException if task is already completed."},{"lineNumber":47,"author":{"gitId":"xinweit"},"content":"     */"},{"lineNumber":48,"author":{"gitId":"xinweit"},"content":"    public void checkAsDone(Task task) throws CompletedTaskException {"},{"lineNumber":49,"author":{"gitId":"xinweit"},"content":"        if (task.getDoneStatus()) {"},{"lineNumber":50,"author":{"gitId":"xinweit"},"content":"            throw new CompletedTaskException();"},{"lineNumber":51,"author":{"gitId":"xinweit"},"content":"        }"},{"lineNumber":52,"author":{"gitId":"xinweit"},"content":"        task.done();"},{"lineNumber":53,"author":{"gitId":"xinweit"},"content":"        assert task.isDone : \"Task not marked as completed yet\";"},{"lineNumber":54,"author":{"gitId":"xinweit"},"content":"    }"},{"lineNumber":55,"author":{"gitId":"xinweit"},"content":""},{"lineNumber":56,"author":{"gitId":"xinweit"},"content":"    /**"},{"lineNumber":57,"author":{"gitId":"xinweit"},"content":"     * Returns the list of tasks."},{"lineNumber":58,"author":{"gitId":"xinweit"},"content":"     *"},{"lineNumber":59,"author":{"gitId":"xinweit"},"content":"     * @return list of tasks."},{"lineNumber":60,"author":{"gitId":"xinweit"},"content":"     */"},{"lineNumber":61,"author":{"gitId":"xinweit"},"content":"    public ArrayList\u003cTask\u003e getList() {"},{"lineNumber":62,"author":{"gitId":"xinweit"},"content":"        return this.list;"},{"lineNumber":63,"author":{"gitId":"xinweit"},"content":"    }"},{"lineNumber":64,"author":{"gitId":"xinweit"},"content":""},{"lineNumber":65,"author":{"gitId":"xinweit"},"content":"}"}],"authorContributionMap":{"xinweit":65}},{"path":"src/main/java/zeke/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"xinweit"},"content":"package zeke;"},{"lineNumber":2,"author":{"gitId":"xinweit"},"content":""},{"lineNumber":3,"author":{"gitId":"xinweit"},"content":"/**"},{"lineNumber":4,"author":{"gitId":"xinweit"},"content":" * Todo class for todo tasks."},{"lineNumber":5,"author":{"gitId":"xinweit"},"content":" */"},{"lineNumber":6,"author":{"gitId":"xinweit"},"content":"public class Todo extends Task {"},{"lineNumber":7,"author":{"gitId":"xinweit"},"content":""},{"lineNumber":8,"author":{"gitId":"xinweit"},"content":"    /**"},{"lineNumber":9,"author":{"gitId":"xinweit"},"content":"     * Constructor for todo class."},{"lineNumber":10,"author":{"gitId":"xinweit"},"content":"     * Initializes a todo with specified description."},{"lineNumber":11,"author":{"gitId":"xinweit"},"content":"     *"},{"lineNumber":12,"author":{"gitId":"xinweit"},"content":"     * @param description description of the todo task."},{"lineNumber":13,"author":{"gitId":"xinweit"},"content":"     */"},{"lineNumber":14,"author":{"gitId":"xinweit"},"content":"    public Todo(String description) {"},{"lineNumber":15,"author":{"gitId":"xinweit"},"content":"        super(description);"},{"lineNumber":16,"author":{"gitId":"xinweit"},"content":"        this.type \u003d \u0027T\u0027;"},{"lineNumber":17,"author":{"gitId":"xinweit"},"content":"    }"},{"lineNumber":18,"author":{"gitId":"xinweit"},"content":""},{"lineNumber":19,"author":{"gitId":"xinweit"},"content":"    @Override"},{"lineNumber":20,"author":{"gitId":"xinweit"},"content":"    public String toString() {"},{"lineNumber":21,"author":{"gitId":"xinweit"},"content":"        return \"[T]\" + super.toString();"},{"lineNumber":22,"author":{"gitId":"xinweit"},"content":"    }"},{"lineNumber":23,"author":{"gitId":"xinweit"},"content":"}"}],"authorContributionMap":{"xinweit":23}},{"path":"src/main/java/zeke/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"xinweit"},"content":"package zeke;"},{"lineNumber":2,"author":{"gitId":"xinweit"},"content":""},{"lineNumber":3,"author":{"gitId":"xinweit"},"content":"import java.util.ArrayList;"},{"lineNumber":4,"author":{"gitId":"xinweit"},"content":""},{"lineNumber":5,"author":{"gitId":"xinweit"},"content":""},{"lineNumber":6,"author":{"gitId":"xinweit"},"content":"/**"},{"lineNumber":7,"author":{"gitId":"xinweit"},"content":" * User interface class for Zeke\u0027s interaction with users, send messages etc."},{"lineNumber":8,"author":{"gitId":"xinweit"},"content":" */"},{"lineNumber":9,"author":{"gitId":"xinweit"},"content":"public class Ui {"},{"lineNumber":10,"author":{"gitId":"xinweit"},"content":""},{"lineNumber":11,"author":{"gitId":"xinweit"},"content":"    protected Statistics stats;"},{"lineNumber":12,"author":{"gitId":"xinweit"},"content":""},{"lineNumber":13,"author":{"gitId":"xinweit"},"content":"    /**"},{"lineNumber":14,"author":{"gitId":"xinweit"},"content":"     * Constructor for Ui class."},{"lineNumber":15,"author":{"gitId":"xinweit"},"content":"     */"},{"lineNumber":16,"author":{"gitId":"xinweit"},"content":"    public Ui() {"},{"lineNumber":17,"author":{"gitId":"xinweit"},"content":"        this.stats \u003d new Statistics();"},{"lineNumber":18,"author":{"gitId":"xinweit"},"content":"    }"},{"lineNumber":19,"author":{"gitId":"xinweit"},"content":""},{"lineNumber":20,"author":{"gitId":"xinweit"},"content":"    /**"},{"lineNumber":21,"author":{"gitId":"xinweit"},"content":"     * Returns greetings message at the start when user runs the Zeke application."},{"lineNumber":22,"author":{"gitId":"xinweit"},"content":"     */"},{"lineNumber":23,"author":{"gitId":"xinweit"},"content":"    public static String greetings() {"},{"lineNumber":24,"author":{"gitId":"xinweit"},"content":"        String message \u003d \"Eren... I have waited to meet you for a long time.\\n\""},{"lineNumber":25,"author":{"gitId":"xinweit"},"content":"                + \"------\\n\""},{"lineNumber":26,"author":{"gitId":"xinweit"},"content":"                + \"How can Zeke assist you?\\n\""},{"lineNumber":27,"author":{"gitId":"xinweit"},"content":"                + \"Type \\\"help\\\" for the list of commands!\";"},{"lineNumber":28,"author":{"gitId":"xinweit"},"content":"        return message;"},{"lineNumber":29,"author":{"gitId":"xinweit"},"content":"    }"},{"lineNumber":30,"author":{"gitId":"xinweit"},"content":""},{"lineNumber":31,"author":{"gitId":"xinweit"},"content":"    /**"},{"lineNumber":32,"author":{"gitId":"xinweit"},"content":"     * Returns exit message."},{"lineNumber":33,"author":{"gitId":"xinweit"},"content":"     *"},{"lineNumber":34,"author":{"gitId":"xinweit"},"content":"     * @return exit message as a String."},{"lineNumber":35,"author":{"gitId":"xinweit"},"content":"     */"},{"lineNumber":36,"author":{"gitId":"xinweit"},"content":"    public String exit() {"},{"lineNumber":37,"author":{"gitId":"xinweit"},"content":"        String message \u003d \"Bye Eren. Till next time.\";"},{"lineNumber":38,"author":{"gitId":"xinweit"},"content":"        return message;"},{"lineNumber":39,"author":{"gitId":"xinweit"},"content":"    }"},{"lineNumber":40,"author":{"gitId":"xinweit"},"content":""},{"lineNumber":41,"author":{"gitId":"xinweit"},"content":"    /**"},{"lineNumber":42,"author":{"gitId":"xinweit"},"content":"     * Returns message when user adds a task to list."},{"lineNumber":43,"author":{"gitId":"xinweit"},"content":"     *"},{"lineNumber":44,"author":{"gitId":"xinweit"},"content":"     * @param list list of tasks."},{"lineNumber":45,"author":{"gitId":"xinweit"},"content":"     * @param addedTask task that is added."},{"lineNumber":46,"author":{"gitId":"xinweit"},"content":"     * @return message when task is added."},{"lineNumber":47,"author":{"gitId":"xinweit"},"content":"     */"},{"lineNumber":48,"author":{"gitId":"xinweit"},"content":"    public String addTaskMessage(ArrayList\u003cTask\u003e list, Task addedTask) {"},{"lineNumber":49,"author":{"gitId":"xinweit"},"content":"        String message \u003d \"Got it. I\u0027ve added this task:\\n\""},{"lineNumber":50,"author":{"gitId":"xinweit"},"content":"                + addedTask + \"\\n\""},{"lineNumber":51,"author":{"gitId":"xinweit"},"content":"                + \"Now you have \" + list.size() + \" tasks in the list.\";"},{"lineNumber":52,"author":{"gitId":"xinweit"},"content":"        return message;"},{"lineNumber":53,"author":{"gitId":"xinweit"},"content":"    }"},{"lineNumber":54,"author":{"gitId":"xinweit"},"content":""},{"lineNumber":55,"author":{"gitId":"xinweit"},"content":"    /**"},{"lineNumber":56,"author":{"gitId":"xinweit"},"content":"     * Returns message when user deletes a task from list."},{"lineNumber":57,"author":{"gitId":"xinweit"},"content":"     *"},{"lineNumber":58,"author":{"gitId":"xinweit"},"content":"     * @param list list of tasks."},{"lineNumber":59,"author":{"gitId":"xinweit"},"content":"     * @param deletedTask task that is deleted."},{"lineNumber":60,"author":{"gitId":"xinweit"},"content":"     * @return message when task is deleted."},{"lineNumber":61,"author":{"gitId":"xinweit"},"content":"     */"},{"lineNumber":62,"author":{"gitId":"xinweit"},"content":"    public String deleteTaskMessage(ArrayList\u003cTask\u003e list, Task deletedTask) {"},{"lineNumber":63,"author":{"gitId":"xinweit"},"content":"        String message \u003d \"Noted. I\u0027ve removed this task:\\n\""},{"lineNumber":64,"author":{"gitId":"xinweit"},"content":"                + deletedTask + \"\\n\""},{"lineNumber":65,"author":{"gitId":"xinweit"},"content":"                + \"Now you have \" + list.size() + \" tasks in the list.\";"},{"lineNumber":66,"author":{"gitId":"xinweit"},"content":"        return message;"},{"lineNumber":67,"author":{"gitId":"xinweit"},"content":"    }"},{"lineNumber":68,"author":{"gitId":"xinweit"},"content":""},{"lineNumber":69,"author":{"gitId":"xinweit"},"content":"    /**"},{"lineNumber":70,"author":{"gitId":"xinweit"},"content":"     * Returns message when user checks a task as done."},{"lineNumber":71,"author":{"gitId":"xinweit"},"content":"     *"},{"lineNumber":72,"author":{"gitId":"xinweit"},"content":"     * @param task task that is checked as done."},{"lineNumber":73,"author":{"gitId":"xinweit"},"content":"     * @return a message informing user task is checked as done."},{"lineNumber":74,"author":{"gitId":"xinweit"},"content":"     */"},{"lineNumber":75,"author":{"gitId":"xinweit"},"content":"    public String checkAsDoneMessage(Task task) {"},{"lineNumber":76,"author":{"gitId":"xinweit"},"content":"        String message \u003d \"Nice! I\u0027ve marked this task as done:\\n\" + task;"},{"lineNumber":77,"author":{"gitId":"xinweit"},"content":"        return message;"},{"lineNumber":78,"author":{"gitId":"xinweit"},"content":"    }"},{"lineNumber":79,"author":{"gitId":"xinweit"},"content":""},{"lineNumber":80,"author":{"gitId":"xinweit"},"content":"    /**"},{"lineNumber":81,"author":{"gitId":"xinweit"},"content":"     * Returns all the tasks in the list."},{"lineNumber":82,"author":{"gitId":"xinweit"},"content":"     *"},{"lineNumber":83,"author":{"gitId":"xinweit"},"content":"     * @param list list of tasks as a string"},{"lineNumber":84,"author":{"gitId":"xinweit"},"content":"     * @return list of all tasks as a String."},{"lineNumber":85,"author":{"gitId":"xinweit"},"content":"     */"},{"lineNumber":86,"author":{"gitId":"xinweit"},"content":"    public String listAllTasks(ArrayList\u003cTask\u003e list) {"},{"lineNumber":87,"author":{"gitId":"xinweit"},"content":"        String message \u003d \"Here are the tasks in your list:\\n\";"},{"lineNumber":88,"author":{"gitId":"xinweit"},"content":"        int num \u003d 1;"},{"lineNumber":89,"author":{"gitId":"xinweit"},"content":"        for (Task task : list) {"},{"lineNumber":90,"author":{"gitId":"xinweit"},"content":"            message +\u003d String.format(\"%d. %s\", num, task) + \"\\n\";"},{"lineNumber":91,"author":{"gitId":"xinweit"},"content":"            num++;"},{"lineNumber":92,"author":{"gitId":"xinweit"},"content":"        }"},{"lineNumber":93,"author":{"gitId":"xinweit"},"content":"        return message;"},{"lineNumber":94,"author":{"gitId":"xinweit"},"content":"    }"},{"lineNumber":95,"author":{"gitId":"xinweit"},"content":""},{"lineNumber":96,"author":{"gitId":"xinweit"},"content":"    /**"},{"lineNumber":97,"author":{"gitId":"xinweit"},"content":"     * Returns matching tasks in list."},{"lineNumber":98,"author":{"gitId":"xinweit"},"content":"     *"},{"lineNumber":99,"author":{"gitId":"xinweit"},"content":"     * @param keyword keyword to search for in list."},{"lineNumber":100,"author":{"gitId":"xinweit"},"content":"     * @param list list of tasks."},{"lineNumber":101,"author":{"gitId":"xinweit"},"content":"     * @return matching tasks as a String."},{"lineNumber":102,"author":{"gitId":"xinweit"},"content":"     */"},{"lineNumber":103,"author":{"gitId":"xinweit"},"content":"    public String findTask(String keyword, ArrayList\u003cTask\u003e list) {"},{"lineNumber":104,"author":{"gitId":"xinweit"},"content":"        ArrayList\u003cTask\u003e newList \u003d new ArrayList\u003c\u003e();"},{"lineNumber":105,"author":{"gitId":"xinweit"},"content":"        String message \u003d \"Here are the matching tasks in your list:\\n\";"},{"lineNumber":106,"author":{"gitId":"xinweit"},"content":"        for (Task task : list) {"},{"lineNumber":107,"author":{"gitId":"xinweit"},"content":"            if (task.getDescription().contains(keyword)) {"},{"lineNumber":108,"author":{"gitId":"xinweit"},"content":"                newList.add(task);"},{"lineNumber":109,"author":{"gitId":"xinweit"},"content":"            }"},{"lineNumber":110,"author":{"gitId":"xinweit"},"content":"        }"},{"lineNumber":111,"author":{"gitId":"xinweit"},"content":"        if (newList.size() \u003d\u003d 0) {"},{"lineNumber":112,"author":{"gitId":"xinweit"},"content":"            message +\u003d \"No matching tasks found. \" + new String(Character.toChars(0x1F648));"},{"lineNumber":113,"author":{"gitId":"xinweit"},"content":"        } else {"},{"lineNumber":114,"author":{"gitId":"xinweit"},"content":"            for (Task task : newList) {"},{"lineNumber":115,"author":{"gitId":"xinweit"},"content":"                if (task.getDescription().contains(keyword)) {"},{"lineNumber":116,"author":{"gitId":"xinweit"},"content":"                    message +\u003d task + \"\\n\";"},{"lineNumber":117,"author":{"gitId":"xinweit"},"content":"                }"},{"lineNumber":118,"author":{"gitId":"xinweit"},"content":"            }"},{"lineNumber":119,"author":{"gitId":"xinweit"},"content":"        }"},{"lineNumber":120,"author":{"gitId":"xinweit"},"content":"        return message;"},{"lineNumber":121,"author":{"gitId":"xinweit"},"content":"    }"},{"lineNumber":122,"author":{"gitId":"xinweit"},"content":""},{"lineNumber":123,"author":{"gitId":"xinweit"},"content":"    /**"},{"lineNumber":124,"author":{"gitId":"xinweit"},"content":"     * Returns the help message."},{"lineNumber":125,"author":{"gitId":"xinweit"},"content":"     *"},{"lineNumber":126,"author":{"gitId":"xinweit"},"content":"     * @return help message as a String."},{"lineNumber":127,"author":{"gitId":"xinweit"},"content":"     */"},{"lineNumber":128,"author":{"gitId":"xinweit"},"content":"    public String viewHelpMessage() {"},{"lineNumber":129,"author":{"gitId":"xinweit"},"content":"        String message \u003d \"List of commands\\n\""},{"lineNumber":130,"author":{"gitId":"xinweit"},"content":"                + \"bye -\u003e Exit application\\n\""},{"lineNumber":131,"author":{"gitId":"xinweit"},"content":"                + \"list -\u003e List all the tasks you currently have\\n\""},{"lineNumber":132,"author":{"gitId":"xinweit"},"content":"                + \"done [index] -\u003e Mark a task as completed \\n\""},{"lineNumber":133,"author":{"gitId":"xinweit"},"content":"                + \"delete [index] -\u003e Delete a task\\n\""},{"lineNumber":134,"author":{"gitId":"xinweit"},"content":"                + \"find [keyword] -\u003e Search for the keyword in the list of tasks\\n\""},{"lineNumber":135,"author":{"gitId":"xinweit"},"content":"                + \"todo [description] -\u003e Add a todo\\n\""},{"lineNumber":136,"author":{"gitId":"xinweit"},"content":"                + \"deadline [description] /by [date] -\u003e Add a deadline\\n\""},{"lineNumber":137,"author":{"gitId":"xinweit"},"content":"                + \"event [description] /at [date] -\u003e Add an event\\n\""},{"lineNumber":138,"author":{"gitId":"xinweit"},"content":"                + \"stats -\u003e Show overdue tasks and tasks happening soon\\n\""},{"lineNumber":139,"author":{"gitId":"xinweit"},"content":"                + \"-dates should be in yyyy-mm-dd format\";"},{"lineNumber":140,"author":{"gitId":"xinweit"},"content":"        return message;"},{"lineNumber":141,"author":{"gitId":"xinweit"},"content":"    }"},{"lineNumber":142,"author":{"gitId":"xinweit"},"content":""},{"lineNumber":143,"author":{"gitId":"xinweit"},"content":"    /**"},{"lineNumber":144,"author":{"gitId":"xinweit"},"content":"     * Returns statistics for the task list."},{"lineNumber":145,"author":{"gitId":"xinweit"},"content":"     *"},{"lineNumber":146,"author":{"gitId":"xinweit"},"content":"     * @param list task list."},{"lineNumber":147,"author":{"gitId":"xinweit"},"content":"     * @return statistics as a String."},{"lineNumber":148,"author":{"gitId":"xinweit"},"content":"     */"},{"lineNumber":149,"author":{"gitId":"xinweit"},"content":"    public String getStatistics(ArrayList\u003cTask\u003e list) {"},{"lineNumber":150,"author":{"gitId":"xinweit"},"content":"        String divider \u003d \"------\\n\";"},{"lineNumber":151,"author":{"gitId":"xinweit"},"content":"        String message \u003d \"\";"},{"lineNumber":152,"author":{"gitId":"xinweit"},"content":"        message +\u003d \"Overdue Deadlines:\\n\";"},{"lineNumber":153,"author":{"gitId":"xinweit"},"content":"        message +\u003d stats.getOverdueDeadlines(list);"},{"lineNumber":154,"author":{"gitId":"xinweit"},"content":"        message +\u003d divider;"},{"lineNumber":155,"author":{"gitId":"xinweit"},"content":"        message +\u003d \"Deadlines and Events due/happening in a week:\\n\";"},{"lineNumber":156,"author":{"gitId":"xinweit"},"content":"        message +\u003d stats.getTasksDueSoon(list);"},{"lineNumber":157,"author":{"gitId":"xinweit"},"content":"        return message;"},{"lineNumber":158,"author":{"gitId":"xinweit"},"content":"    }"},{"lineNumber":159,"author":{"gitId":"xinweit"},"content":"}"}],"authorContributionMap":{"xinweit":159}},{"path":"src/main/java/zeke/Zeke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"xinweit"},"content":"package zeke;"},{"lineNumber":2,"author":{"gitId":"xinweit"},"content":""},{"lineNumber":3,"author":{"gitId":"xinweit"},"content":"import java.io.IOException;"},{"lineNumber":4,"author":{"gitId":"xinweit"},"content":"import java.time.format.DateTimeParseException;"},{"lineNumber":5,"author":{"gitId":"xinweit"},"content":""},{"lineNumber":6,"author":{"gitId":"xinweit"},"content":"import zeke.exceptions.InvalidDateException;"},{"lineNumber":7,"author":{"gitId":"xinweit"},"content":"import zeke.exceptions.UnknownInputException;"},{"lineNumber":8,"author":{"gitId":"xinweit"},"content":"import zeke.exceptions.ZekeException;"},{"lineNumber":9,"author":{"gitId":"xinweit"},"content":""},{"lineNumber":10,"author":{"gitId":"xinweit"},"content":"/**"},{"lineNumber":11,"author":{"gitId":"xinweit"},"content":" * Zeke is a Personal Assistant Chatbot that helps a person to keep track of various tasks."},{"lineNumber":12,"author":{"gitId":"xinweit"},"content":" */"},{"lineNumber":13,"author":{"gitId":"xinweit"},"content":"public class Zeke {"},{"lineNumber":14,"author":{"gitId":"xinweit"},"content":""},{"lineNumber":15,"author":{"gitId":"xinweit"},"content":"    private Storage storage;"},{"lineNumber":16,"author":{"gitId":"xinweit"},"content":"    private TaskList tasks;"},{"lineNumber":17,"author":{"gitId":"xinweit"},"content":"    private Ui ui;"},{"lineNumber":18,"author":{"gitId":"xinweit"},"content":"    private Parser parser;"},{"lineNumber":19,"author":{"gitId":"xinweit"},"content":""},{"lineNumber":20,"author":{"gitId":"xinweit"},"content":"    /**"},{"lineNumber":21,"author":{"gitId":"xinweit"},"content":"     * Constructor for Zeke class."},{"lineNumber":22,"author":{"gitId":"xinweit"},"content":"     * Initializes Ui, Parser, Storage and TaskList objects."},{"lineNumber":23,"author":{"gitId":"xinweit"},"content":"     *"},{"lineNumber":24,"author":{"gitId":"xinweit"},"content":"     * @param filePath file path to file where user wants his task list saved and loaded."},{"lineNumber":25,"author":{"gitId":"xinweit"},"content":"     */"},{"lineNumber":26,"author":{"gitId":"xinweit"},"content":"    public Zeke(String filePath) {"},{"lineNumber":27,"author":{"gitId":"xinweit"},"content":"        ui \u003d new Ui();"},{"lineNumber":28,"author":{"gitId":"xinweit"},"content":"        parser \u003d new Parser();"},{"lineNumber":29,"author":{"gitId":"xinweit"},"content":"        storage \u003d new Storage(filePath);"},{"lineNumber":30,"author":{"gitId":"xinweit"},"content":"        tasks \u003d new TaskList(storage.loadTasks());"},{"lineNumber":31,"author":{"gitId":"xinweit"},"content":"    }"},{"lineNumber":32,"author":{"gitId":"xinweit"},"content":""},{"lineNumber":33,"author":{"gitId":"xinweit"},"content":"    /**"},{"lineNumber":34,"author":{"gitId":"xinweit"},"content":"     * Processes user input and returns Zeke\u0027s response."},{"lineNumber":35,"author":{"gitId":"xinweit"},"content":"     *"},{"lineNumber":36,"author":{"gitId":"xinweit"},"content":"     * @return response of Zeke to user input."},{"lineNumber":37,"author":{"gitId":"xinweit"},"content":"     */"},{"lineNumber":38,"author":{"gitId":"xinweit"},"content":"    public String getResponse(String input) {"},{"lineNumber":39,"author":{"gitId":"xinweit"},"content":"        String response;"},{"lineNumber":40,"author":{"gitId":"xinweit"},"content":"        String description;"},{"lineNumber":41,"author":{"gitId":"xinweit"},"content":"        String date;"},{"lineNumber":42,"author":{"gitId":"xinweit"},"content":"        String[] inputArr \u003d parser.getInputArr(input);"},{"lineNumber":43,"author":{"gitId":"xinweit"},"content":"        try {"},{"lineNumber":44,"author":{"gitId":"xinweit"},"content":"            Command command \u003d parser.getCommand(inputArr);"},{"lineNumber":45,"author":{"gitId":"xinweit"},"content":"            switch (command) {"},{"lineNumber":46,"author":{"gitId":"xinweit"},"content":"            case BYE:"},{"lineNumber":47,"author":{"gitId":"xinweit"},"content":"                response \u003d ui.exit();"},{"lineNumber":48,"author":{"gitId":"xinweit"},"content":"                break;"},{"lineNumber":49,"author":{"gitId":"xinweit"},"content":"            case LIST:"},{"lineNumber":50,"author":{"gitId":"xinweit"},"content":"                response \u003d ui.listAllTasks(tasks.getList());"},{"lineNumber":51,"author":{"gitId":"xinweit"},"content":"                break;"},{"lineNumber":52,"author":{"gitId":"xinweit"},"content":"            case DONE:"},{"lineNumber":53,"author":{"gitId":"xinweit"},"content":"                parser.isValidIndex(inputArr, tasks.getList());"},{"lineNumber":54,"author":{"gitId":"xinweit"},"content":"                int numDone \u003d Integer.parseInt(inputArr[1]);"},{"lineNumber":55,"author":{"gitId":"xinweit"},"content":"                Task task \u003d tasks.getList().get(numDone - 1);"},{"lineNumber":56,"author":{"gitId":"xinweit"},"content":"                tasks.checkAsDone(task);"},{"lineNumber":57,"author":{"gitId":"xinweit"},"content":"                response \u003d ui.checkAsDoneMessage(task);"},{"lineNumber":58,"author":{"gitId":"xinweit"},"content":"                break;"},{"lineNumber":59,"author":{"gitId":"xinweit"},"content":"            case DELETE:"},{"lineNumber":60,"author":{"gitId":"xinweit"},"content":"                parser.isValidIndex(inputArr, tasks.getList());"},{"lineNumber":61,"author":{"gitId":"xinweit"},"content":"                int numDelete \u003d Integer.parseInt(inputArr[1]);"},{"lineNumber":62,"author":{"gitId":"xinweit"},"content":"                Task deletedTask \u003d tasks.deleteTask(numDelete);"},{"lineNumber":63,"author":{"gitId":"xinweit"},"content":"                response \u003d ui.deleteTaskMessage(tasks.getList(), deletedTask);"},{"lineNumber":64,"author":{"gitId":"xinweit"},"content":"                break;"},{"lineNumber":65,"author":{"gitId":"xinweit"},"content":"            case FIND:"},{"lineNumber":66,"author":{"gitId":"xinweit"},"content":"                String keyword \u003d inputArr[1];"},{"lineNumber":67,"author":{"gitId":"xinweit"},"content":"                response \u003d ui.findTask(keyword, tasks.getList());"},{"lineNumber":68,"author":{"gitId":"xinweit"},"content":"                break;"},{"lineNumber":69,"author":{"gitId":"xinweit"},"content":"            case HELP:"},{"lineNumber":70,"author":{"gitId":"xinweit"},"content":"                response \u003d ui.viewHelpMessage();"},{"lineNumber":71,"author":{"gitId":"xinweit"},"content":"                break;"},{"lineNumber":72,"author":{"gitId":"xinweit"},"content":"            case TODO:"},{"lineNumber":73,"author":{"gitId":"xinweit"},"content":"                parser.isValidDescription(inputArr);"},{"lineNumber":74,"author":{"gitId":"xinweit"},"content":"                description \u003d parser.getDescription(inputArr, \"todo\");"},{"lineNumber":75,"author":{"gitId":"xinweit"},"content":"                Task todo \u003d new Todo(description);"},{"lineNumber":76,"author":{"gitId":"xinweit"},"content":"                tasks.addTask(todo);"},{"lineNumber":77,"author":{"gitId":"xinweit"},"content":"                response \u003d ui.addTaskMessage(tasks.getList(), todo);"},{"lineNumber":78,"author":{"gitId":"xinweit"},"content":"                break;"},{"lineNumber":79,"author":{"gitId":"xinweit"},"content":"            case DEADLINE:"},{"lineNumber":80,"author":{"gitId":"xinweit"},"content":"                parser.isValidDescription(inputArr);"},{"lineNumber":81,"author":{"gitId":"xinweit"},"content":"                description \u003d parser.getDescription(inputArr, \"deadline\");"},{"lineNumber":82,"author":{"gitId":"xinweit"},"content":"                date \u003d parser.getDate(inputArr, \"deadline\");"},{"lineNumber":83,"author":{"gitId":"xinweit"},"content":"                Task deadline \u003d new Deadline(description, date);"},{"lineNumber":84,"author":{"gitId":"xinweit"},"content":"                tasks.addTask(deadline);"},{"lineNumber":85,"author":{"gitId":"xinweit"},"content":"                response \u003d ui.addTaskMessage(tasks.getList(), deadline);"},{"lineNumber":86,"author":{"gitId":"xinweit"},"content":"                break;"},{"lineNumber":87,"author":{"gitId":"xinweit"},"content":"            case EVENT:"},{"lineNumber":88,"author":{"gitId":"xinweit"},"content":"                parser.isValidDescription(inputArr);"},{"lineNumber":89,"author":{"gitId":"xinweit"},"content":"                description \u003d parser.getDescription(inputArr, \"event\");"},{"lineNumber":90,"author":{"gitId":"xinweit"},"content":"                date \u003d parser.getDate(inputArr, \"event\");"},{"lineNumber":91,"author":{"gitId":"xinweit"},"content":"                Task event \u003d new Event(description, date);"},{"lineNumber":92,"author":{"gitId":"xinweit"},"content":"                tasks.addTask(event);"},{"lineNumber":93,"author":{"gitId":"xinweit"},"content":"                response \u003d ui.addTaskMessage(tasks.getList(), event);"},{"lineNumber":94,"author":{"gitId":"xinweit"},"content":"                break;"},{"lineNumber":95,"author":{"gitId":"xinweit"},"content":"            case STATS:"},{"lineNumber":96,"author":{"gitId":"xinweit"},"content":"                response \u003d ui.getStatistics(tasks.getList());"},{"lineNumber":97,"author":{"gitId":"xinweit"},"content":"                break;"},{"lineNumber":98,"author":{"gitId":"xinweit"},"content":"            default:"},{"lineNumber":99,"author":{"gitId":"xinweit"},"content":"                throw new UnknownInputException();"},{"lineNumber":100,"author":{"gitId":"xinweit"},"content":"            }"},{"lineNumber":101,"author":{"gitId":"xinweit"},"content":"            storage.saveTasks(tasks.getList());"},{"lineNumber":102,"author":{"gitId":"xinweit"},"content":"        } catch (IllegalArgumentException e) {"},{"lineNumber":103,"author":{"gitId":"xinweit"},"content":"            response \u003d new UnknownInputException().getMessage();"},{"lineNumber":104,"author":{"gitId":"xinweit"},"content":"        } catch (ZekeException | IOException e) {"},{"lineNumber":105,"author":{"gitId":"xinweit"},"content":"            response \u003d e.getMessage();"},{"lineNumber":106,"author":{"gitId":"xinweit"},"content":"        } catch (DateTimeParseException e) {"},{"lineNumber":107,"author":{"gitId":"xinweit"},"content":"            response \u003d new InvalidDateException().getMessage();"},{"lineNumber":108,"author":{"gitId":"xinweit"},"content":"        } catch (StringIndexOutOfBoundsException e) {"},{"lineNumber":109,"author":{"gitId":"xinweit"},"content":"            response \u003d new InvalidDateException().getMessage();"},{"lineNumber":110,"author":{"gitId":"xinweit"},"content":"        } catch (Exception e) {"},{"lineNumber":111,"author":{"gitId":"xinweit"},"content":"            response \u003d new UnknownInputException().getMessage();"},{"lineNumber":112,"author":{"gitId":"xinweit"},"content":"        }"},{"lineNumber":113,"author":{"gitId":"xinweit"},"content":"        return response;"},{"lineNumber":114,"author":{"gitId":"xinweit"},"content":"    }"},{"lineNumber":115,"author":{"gitId":"xinweit"},"content":""},{"lineNumber":116,"author":{"gitId":"xinweit"},"content":""},{"lineNumber":117,"author":{"gitId":"xinweit"},"content":"}"}],"authorContributionMap":{"xinweit":117}},{"path":"src/main/java/zeke/exceptions/CompletedTaskException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"xinweit"},"content":"package zeke.exceptions;"},{"lineNumber":2,"author":{"gitId":"xinweit"},"content":""},{"lineNumber":3,"author":{"gitId":"xinweit"},"content":"/**"},{"lineNumber":4,"author":{"gitId":"xinweit"},"content":" * Represents an error which occurs when user attempts to mark an already completed task as completed."},{"lineNumber":5,"author":{"gitId":"xinweit"},"content":" */"},{"lineNumber":6,"author":{"gitId":"xinweit"},"content":"public class CompletedTaskException extends ZekeException {"},{"lineNumber":7,"author":{"gitId":"xinweit"},"content":""},{"lineNumber":8,"author":{"gitId":"xinweit"},"content":"    public CompletedTaskException() {"},{"lineNumber":9,"author":{"gitId":"xinweit"},"content":"    }"},{"lineNumber":10,"author":{"gitId":"xinweit"},"content":""},{"lineNumber":11,"author":{"gitId":"xinweit"},"content":"    @Override"},{"lineNumber":12,"author":{"gitId":"xinweit"},"content":"    public String getMessage() {"},{"lineNumber":13,"author":{"gitId":"xinweit"},"content":"        return \"MonkaS! The task is already completed.\\n\";"},{"lineNumber":14,"author":{"gitId":"xinweit"},"content":"    }"},{"lineNumber":15,"author":{"gitId":"xinweit"},"content":"}"}],"authorContributionMap":{"xinweit":15}},{"path":"src/main/java/zeke/exceptions/InvalidDateException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"xinweit"},"content":"package zeke.exceptions;"},{"lineNumber":2,"author":{"gitId":"xinweit"},"content":""},{"lineNumber":3,"author":{"gitId":"xinweit"},"content":"/**"},{"lineNumber":4,"author":{"gitId":"xinweit"},"content":" * Represents an error which occurs when user enters an invalid date of the task."},{"lineNumber":5,"author":{"gitId":"xinweit"},"content":" */"},{"lineNumber":6,"author":{"gitId":"xinweit"},"content":"public class InvalidDateException extends ZekeException {"},{"lineNumber":7,"author":{"gitId":"xinweit"},"content":""},{"lineNumber":8,"author":{"gitId":"xinweit"},"content":"    /**"},{"lineNumber":9,"author":{"gitId":"xinweit"},"content":"     * Constructor for InvalidDateException class."},{"lineNumber":10,"author":{"gitId":"xinweit"},"content":"     */"},{"lineNumber":11,"author":{"gitId":"xinweit"},"content":"    public InvalidDateException() {"},{"lineNumber":12,"author":{"gitId":"xinweit"},"content":"    }"},{"lineNumber":13,"author":{"gitId":"xinweit"},"content":""},{"lineNumber":14,"author":{"gitId":"xinweit"},"content":"    @Override"},{"lineNumber":15,"author":{"gitId":"xinweit"},"content":"    public String getMessage() {"},{"lineNumber":16,"author":{"gitId":"xinweit"},"content":"        return \"MonkaS! The date of the task is invalid. Type help for more info.\\n\";"},{"lineNumber":17,"author":{"gitId":"xinweit"},"content":"    }"},{"lineNumber":18,"author":{"gitId":"xinweit"},"content":"}"},{"lineNumber":19,"author":{"gitId":"xinweit"},"content":""}],"authorContributionMap":{"xinweit":19}},{"path":"src/main/java/zeke/exceptions/InvalidDescriptionException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"xinweit"},"content":"package zeke.exceptions;"},{"lineNumber":2,"author":{"gitId":"xinweit"},"content":""},{"lineNumber":3,"author":{"gitId":"xinweit"},"content":"/**"},{"lineNumber":4,"author":{"gitId":"xinweit"},"content":" * Represents an error which occurs when user enters an invalid description of the task."},{"lineNumber":5,"author":{"gitId":"xinweit"},"content":" */"},{"lineNumber":6,"author":{"gitId":"xinweit"},"content":"public class InvalidDescriptionException extends ZekeException {"},{"lineNumber":7,"author":{"gitId":"xinweit"},"content":""},{"lineNumber":8,"author":{"gitId":"xinweit"},"content":"    /**"},{"lineNumber":9,"author":{"gitId":"xinweit"},"content":"     * Constructor for InvalidDescriptionException class."},{"lineNumber":10,"author":{"gitId":"xinweit"},"content":"     */"},{"lineNumber":11,"author":{"gitId":"xinweit"},"content":"    public InvalidDescriptionException() {"},{"lineNumber":12,"author":{"gitId":"xinweit"},"content":"    }"},{"lineNumber":13,"author":{"gitId":"xinweit"},"content":""},{"lineNumber":14,"author":{"gitId":"xinweit"},"content":"    @Override"},{"lineNumber":15,"author":{"gitId":"xinweit"},"content":"    public String getMessage() {"},{"lineNumber":16,"author":{"gitId":"xinweit"},"content":"        return \"MonkaS! The description of the task is missing or invalid. Type help for more info\\n\";"},{"lineNumber":17,"author":{"gitId":"xinweit"},"content":"    }"},{"lineNumber":18,"author":{"gitId":"xinweit"},"content":"}"}],"authorContributionMap":{"xinweit":18}},{"path":"src/main/java/zeke/exceptions/InvalidIndexException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"xinweit"},"content":"package zeke.exceptions;"},{"lineNumber":2,"author":{"gitId":"xinweit"},"content":""},{"lineNumber":3,"author":{"gitId":"xinweit"},"content":"/**"},{"lineNumber":4,"author":{"gitId":"xinweit"},"content":" * Represents an error which occurs when user enters an invalid index for the done and delete commands."},{"lineNumber":5,"author":{"gitId":"xinweit"},"content":" */"},{"lineNumber":6,"author":{"gitId":"xinweit"},"content":"public class InvalidIndexException extends ZekeException {"},{"lineNumber":7,"author":{"gitId":"xinweit"},"content":""},{"lineNumber":8,"author":{"gitId":"xinweit"},"content":"    /**"},{"lineNumber":9,"author":{"gitId":"xinweit"},"content":"     * Constructor for InvalidIndexException class."},{"lineNumber":10,"author":{"gitId":"xinweit"},"content":"     */"},{"lineNumber":11,"author":{"gitId":"xinweit"},"content":"    public InvalidIndexException() {"},{"lineNumber":12,"author":{"gitId":"xinweit"},"content":"    }"},{"lineNumber":13,"author":{"gitId":"xinweit"},"content":""},{"lineNumber":14,"author":{"gitId":"xinweit"},"content":"    @Override"},{"lineNumber":15,"author":{"gitId":"xinweit"},"content":"    public String getMessage() {"},{"lineNumber":16,"author":{"gitId":"xinweit"},"content":"        return \"MonkaS! The index given is out of range and invalid.\\n\";"},{"lineNumber":17,"author":{"gitId":"xinweit"},"content":"    }"},{"lineNumber":18,"author":{"gitId":"xinweit"},"content":"}"}],"authorContributionMap":{"xinweit":18}},{"path":"src/main/java/zeke/exceptions/UnknownInputException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"xinweit"},"content":"package zeke.exceptions;"},{"lineNumber":2,"author":{"gitId":"xinweit"},"content":""},{"lineNumber":3,"author":{"gitId":"xinweit"},"content":"/**"},{"lineNumber":4,"author":{"gitId":"xinweit"},"content":" * Represents an error which occurs when user enters an unknown input."},{"lineNumber":5,"author":{"gitId":"xinweit"},"content":" */"},{"lineNumber":6,"author":{"gitId":"xinweit"},"content":"public class UnknownInputException extends ZekeException {"},{"lineNumber":7,"author":{"gitId":"xinweit"},"content":""},{"lineNumber":8,"author":{"gitId":"xinweit"},"content":"    /**"},{"lineNumber":9,"author":{"gitId":"xinweit"},"content":"     * Constructor for UnknownInputException class."},{"lineNumber":10,"author":{"gitId":"xinweit"},"content":"     */"},{"lineNumber":11,"author":{"gitId":"xinweit"},"content":"    public UnknownInputException() {"},{"lineNumber":12,"author":{"gitId":"xinweit"},"content":"    }"},{"lineNumber":13,"author":{"gitId":"xinweit"},"content":""},{"lineNumber":14,"author":{"gitId":"xinweit"},"content":"    @Override"},{"lineNumber":15,"author":{"gitId":"xinweit"},"content":"    public String getMessage() {"},{"lineNumber":16,"author":{"gitId":"xinweit"},"content":"        return \"MonkaS! I\u0027m sorry, but I don\u0027t know what that means.\\n\";"},{"lineNumber":17,"author":{"gitId":"xinweit"},"content":"    }"},{"lineNumber":18,"author":{"gitId":"xinweit"},"content":"}"}],"authorContributionMap":{"xinweit":18}},{"path":"src/main/java/zeke/exceptions/ZekeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"xinweit"},"content":"package zeke.exceptions;"},{"lineNumber":2,"author":{"gitId":"xinweit"},"content":""},{"lineNumber":3,"author":{"gitId":"xinweit"},"content":"/**"},{"lineNumber":4,"author":{"gitId":"xinweit"},"content":" * Custom exception class for custom exceptions specific to the Zeke application."},{"lineNumber":5,"author":{"gitId":"xinweit"},"content":" */"},{"lineNumber":6,"author":{"gitId":"xinweit"},"content":"public class ZekeException extends Exception {"},{"lineNumber":7,"author":{"gitId":"xinweit"},"content":""},{"lineNumber":8,"author":{"gitId":"xinweit"},"content":"    /**"},{"lineNumber":9,"author":{"gitId":"xinweit"},"content":"     * Constructor for ZekeException class."},{"lineNumber":10,"author":{"gitId":"xinweit"},"content":"     */"},{"lineNumber":11,"author":{"gitId":"xinweit"},"content":"    public ZekeException() {"},{"lineNumber":12,"author":{"gitId":"xinweit"},"content":"    }"},{"lineNumber":13,"author":{"gitId":"xinweit"},"content":""},{"lineNumber":14,"author":{"gitId":"xinweit"},"content":"}"}],"authorContributionMap":{"xinweit":14}},{"path":"src/main/resources/view/DialogBox.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"xinweit"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"},{"lineNumber":2,"author":{"gitId":"xinweit"},"content":""},{"lineNumber":3,"author":{"gitId":"xinweit"},"content":"\u003c?import javafx.geometry.Insets?\u003e"},{"lineNumber":4,"author":{"gitId":"xinweit"},"content":"\u003c?import javafx.scene.control.Label?\u003e"},{"lineNumber":5,"author":{"gitId":"xinweit"},"content":"\u003c?import javafx.scene.image.ImageView?\u003e"},{"lineNumber":6,"author":{"gitId":"xinweit"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e"},{"lineNumber":7,"author":{"gitId":"xinweit"},"content":""},{"lineNumber":8,"author":{"gitId":"xinweit"},"content":"\u003cfx:root alignment\u003d\"TOP_RIGHT\" maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\" prefWidth\u003d\"400.0\" type\u003d\"javafx.scene.layout.HBox\" xmlns\u003d\"http://javafx.com/javafx/8.0.171\" xmlns:fx\u003d\"http://javafx.com/fxml/1\" stylesheets \u003d \"@zeke.css\"\u003e"},{"lineNumber":9,"author":{"gitId":"xinweit"},"content":"    \u003cHBox fx:id\u003d\"messageBox\" maxHeight\u003d\"-Infinity\" styleClass\u003d\"message-box\"\u003e"},{"lineNumber":10,"author":{"gitId":"xinweit"},"content":"        \u003cchildren\u003e"},{"lineNumber":11,"author":{"gitId":"xinweit"},"content":"            \u003cLabel fx:id\u003d\"dialog\" minHeight\u003d\"-Infinity\" text\u003d\"Label\" wrapText\u003d\"true\" styleClass\u003d\"dialog\"\u003e"},{"lineNumber":12,"author":{"gitId":"xinweit"},"content":"                \u003cpadding\u003e"},{"lineNumber":13,"author":{"gitId":"xinweit"},"content":"                    \u003cInsets bottom\u003d\"5.0\" left\u003d\"10.0\" right\u003d\"10.0\" top\u003d\"5.0\" /\u003e"},{"lineNumber":14,"author":{"gitId":"xinweit"},"content":"                \u003c/padding\u003e"},{"lineNumber":15,"author":{"gitId":"xinweit"},"content":"            \u003c/Label\u003e"},{"lineNumber":16,"author":{"gitId":"xinweit"},"content":"        \u003c/children\u003e"},{"lineNumber":17,"author":{"gitId":"xinweit"},"content":"        \u003cHBox.margin\u003e"},{"lineNumber":18,"author":{"gitId":"xinweit"},"content":"            \u003cInsets left\u003d\"10.0\" right\u003d\"10.0\" /\u003e"},{"lineNumber":19,"author":{"gitId":"xinweit"},"content":"        \u003c/HBox.margin\u003e"},{"lineNumber":20,"author":{"gitId":"xinweit"},"content":"    \u003c/HBox\u003e"},{"lineNumber":21,"author":{"gitId":"xinweit"},"content":"    \u003cImageView fx:id\u003d\"displayPicture\" fitHeight\u003d\"99.0\" fitWidth\u003d\"99.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\" /\u003e"},{"lineNumber":22,"author":{"gitId":"xinweit"},"content":"    \u003cpadding\u003e"},{"lineNumber":23,"author":{"gitId":"xinweit"},"content":"        \u003cInsets bottom\u003d\"10.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"10.0\" /\u003e"},{"lineNumber":24,"author":{"gitId":"xinweit"},"content":"    \u003c/padding\u003e"},{"lineNumber":25,"author":{"gitId":"xinweit"},"content":"\u003c/fx:root\u003e"}],"authorContributionMap":{"xinweit":25}},{"path":"src/main/resources/view/MainWindow.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"xinweit"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"},{"lineNumber":2,"author":{"gitId":"xinweit"},"content":""},{"lineNumber":3,"author":{"gitId":"xinweit"},"content":"\u003c?import javafx.scene.control.Button?\u003e"},{"lineNumber":4,"author":{"gitId":"xinweit"},"content":"\u003c?import javafx.scene.control.ScrollPane?\u003e"},{"lineNumber":5,"author":{"gitId":"xinweit"},"content":"\u003c?import javafx.scene.control.TextField?\u003e"},{"lineNumber":6,"author":{"gitId":"xinweit"},"content":"\u003c?import javafx.scene.layout.AnchorPane?\u003e"},{"lineNumber":7,"author":{"gitId":"xinweit"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e"},{"lineNumber":8,"author":{"gitId":"xinweit"},"content":""},{"lineNumber":9,"author":{"gitId":"xinweit"},"content":"\u003cAnchorPane maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefHeight\u003d\"600.0\" prefWidth\u003d\"400.0\" xmlns\u003d\"http://javafx.com/javafx/8.0.171\" xmlns:fx\u003d\"http://javafx.com/fxml/1\" fx:controller\u003d\"zeke.MainWindow\" stylesheets \u003d \"@zeke.css\"\u003e"},{"lineNumber":10,"author":{"gitId":"xinweit"},"content":"    \u003cchildren\u003e"},{"lineNumber":11,"author":{"gitId":"xinweit"},"content":"        \u003cTextField fx:id\u003d\"userInput\" layoutY\u003d\"558.0\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"324.0\" AnchorPane.bottomAnchor\u003d\"1.0\" promptText\u003d\"Say what you want to Zeke here\"/\u003e"},{"lineNumber":12,"author":{"gitId":"xinweit"},"content":"        \u003cButton fx:id\u003d\"sendButton\" layoutX\u003d\"324.0\" layoutY\u003d\"558.0\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleUserInput\" minHeight\u003d\"30.0\" prefHeight\u003d\"41.0\" prefWidth\u003d\"76.0\" text\u003d\"ROAR\" styleClass\u003d\"send-button\"/\u003e"},{"lineNumber":13,"author":{"gitId":"xinweit"},"content":"        \u003cScrollPane fx:id\u003d\"scrollPane\" vbarPolicy \u003d\"ALWAYS\" hbarPolicy\u003d\"NEVER\" hvalue\u003d\"1.0\" prefHeight\u003d\"557.0\" prefWidth\u003d\"400.0\" vvalue\u003d\"1.0\" stylesheets\u003d\"@zeke.css\" \u003e"},{"lineNumber":14,"author":{"gitId":"xinweit"},"content":"            \u003ccontent\u003e"},{"lineNumber":15,"author":{"gitId":"xinweit"},"content":"                \u003cVBox fx:id\u003d\"dialogContainer\" prefHeight\u003d\"560.0\" prefWidth\u003d\"388.0\" styleClass\u003d\"dialog-container\"/\u003e"},{"lineNumber":16,"author":{"gitId":"xinweit"},"content":"            \u003c/content\u003e"},{"lineNumber":17,"author":{"gitId":"xinweit"},"content":"        \u003c/ScrollPane\u003e"},{"lineNumber":18,"author":{"gitId":"xinweit"},"content":"    \u003c/children\u003e"},{"lineNumber":19,"author":{"gitId":"xinweit"},"content":"\u003c/AnchorPane\u003e"}],"authorContributionMap":{"xinweit":19}},{"path":"src/test/java/zeke/EventTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"xinweit"},"content":"package zeke;"},{"lineNumber":2,"author":{"gitId":"xinweit"},"content":""},{"lineNumber":3,"author":{"gitId":"xinweit"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;"},{"lineNumber":4,"author":{"gitId":"xinweit"},"content":""},{"lineNumber":5,"author":{"gitId":"xinweit"},"content":"import java.time.LocalDate;"},{"lineNumber":6,"author":{"gitId":"xinweit"},"content":""},{"lineNumber":7,"author":{"gitId":"xinweit"},"content":"import org.junit.jupiter.api.Test;"},{"lineNumber":8,"author":{"gitId":"xinweit"},"content":""},{"lineNumber":9,"author":{"gitId":"xinweit"},"content":"public class EventTest {"},{"lineNumber":10,"author":{"gitId":"xinweit"},"content":""},{"lineNumber":11,"author":{"gitId":"xinweit"},"content":"    private Event event;"},{"lineNumber":12,"author":{"gitId":"xinweit"},"content":""},{"lineNumber":13,"author":{"gitId":"xinweit"},"content":"    public EventTest() {"},{"lineNumber":14,"author":{"gitId":"xinweit"},"content":"        event \u003d new Event(\"football competition\", \"2019-10-15\");"},{"lineNumber":15,"author":{"gitId":"xinweit"},"content":"    }"},{"lineNumber":16,"author":{"gitId":"xinweit"},"content":""},{"lineNumber":17,"author":{"gitId":"xinweit"},"content":"    @Test"},{"lineNumber":18,"author":{"gitId":"xinweit"},"content":"    public void getFormattedDateTest() {"},{"lineNumber":19,"author":{"gitId":"xinweit"},"content":"        assertEquals(LocalDate.parse(\"2019-10-15\"), event.getLocalDate());"},{"lineNumber":20,"author":{"gitId":"xinweit"},"content":"    }"},{"lineNumber":21,"author":{"gitId":"xinweit"},"content":""},{"lineNumber":22,"author":{"gitId":"xinweit"},"content":"    @Test"},{"lineNumber":23,"author":{"gitId":"xinweit"},"content":"    public void getStatusIconTest() {"},{"lineNumber":24,"author":{"gitId":"xinweit"},"content":"        assertEquals(\" \", event.getStatusIcon());"},{"lineNumber":25,"author":{"gitId":"xinweit"},"content":"    }"},{"lineNumber":26,"author":{"gitId":"xinweit"},"content":"}"}],"authorContributionMap":{"xinweit":26}},{"path":"src/test/java/zeke/UiTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"xinweit"},"content":"package zeke;"},{"lineNumber":2,"author":{"gitId":"xinweit"},"content":""},{"lineNumber":3,"author":{"gitId":"xinweit"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;"},{"lineNumber":4,"author":{"gitId":"xinweit"},"content":""},{"lineNumber":5,"author":{"gitId":"xinweit"},"content":"import org.junit.jupiter.api.Test;"},{"lineNumber":6,"author":{"gitId":"xinweit"},"content":""},{"lineNumber":7,"author":{"gitId":"xinweit"},"content":"public class UiTest {"},{"lineNumber":8,"author":{"gitId":"xinweit"},"content":""},{"lineNumber":9,"author":{"gitId":"xinweit"},"content":"    private Ui ui;"},{"lineNumber":10,"author":{"gitId":"xinweit"},"content":""},{"lineNumber":11,"author":{"gitId":"xinweit"},"content":"    public UiTest() {"},{"lineNumber":12,"author":{"gitId":"xinweit"},"content":"        ui \u003d new Ui();"},{"lineNumber":13,"author":{"gitId":"xinweit"},"content":"    }"},{"lineNumber":14,"author":{"gitId":"xinweit"},"content":""},{"lineNumber":15,"author":{"gitId":"xinweit"},"content":"    @Test"},{"lineNumber":16,"author":{"gitId":"xinweit"},"content":"    public void greetingsTest() {"},{"lineNumber":17,"author":{"gitId":"xinweit"},"content":"        assertEquals(\"Eren... I have waited to meet you for a long time.\\n\""},{"lineNumber":18,"author":{"gitId":"xinweit"},"content":"                + \"------\\n\""},{"lineNumber":19,"author":{"gitId":"xinweit"},"content":"                + \"How can Zeke assist you?\\n\""},{"lineNumber":20,"author":{"gitId":"xinweit"},"content":"                + \"Type \\\"help\\\" for the list of commands!\", Ui.greetings());"},{"lineNumber":21,"author":{"gitId":"xinweit"},"content":"    }"},{"lineNumber":22,"author":{"gitId":"xinweit"},"content":""},{"lineNumber":23,"author":{"gitId":"xinweit"},"content":"    @Test"},{"lineNumber":24,"author":{"gitId":"xinweit"},"content":"    public void exitTest() {"},{"lineNumber":25,"author":{"gitId":"xinweit"},"content":"        assertEquals(\"Bye Eren. Till next time.\", ui.exit());"},{"lineNumber":26,"author":{"gitId":"xinweit"},"content":"    }"},{"lineNumber":27,"author":{"gitId":"xinweit"},"content":"}"}],"authorContributionMap":{"xinweit":27}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"xinweit"},"content":"todo borrow book"},{"lineNumber":2,"author":{"gitId":"xinweit"},"content":"deadline return book /by 2019-10-15"},{"lineNumber":3,"author":{"gitId":"xinweit"},"content":"event project meeting /at 2019-10-15"},{"lineNumber":4,"author":{"gitId":"xinweit"},"content":"done 2"},{"lineNumber":5,"author":{"gitId":"xinweit"},"content":"list"},{"lineNumber":6,"author":{"gitId":"xinweit"},"content":"event gathering /at 2019-10-15"},{"lineNumber":7,"author":{"gitId":"xinweit"},"content":"done 1"},{"lineNumber":8,"author":{"gitId":"xinweit"},"content":"list"},{"lineNumber":9,"author":{"gitId":"xinweit"},"content":"delete 2"},{"lineNumber":10,"author":{"gitId":"xinweit"},"content":"delete 1"},{"lineNumber":11,"author":{"gitId":"xinweit"},"content":"list"},{"lineNumber":12,"author":{"gitId":"xinweit"},"content":"todo"},{"lineNumber":13,"author":{"gitId":"xinweit"},"content":"bye"}],"authorContributionMap":{"xinweit":13}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF"},{"lineNumber":2,"author":{"gitId":"-"},"content":""},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin"},{"lineNumber":5,"author":{"gitId":"-"},"content":""},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run"},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT"},{"lineNumber":8,"author":{"gitId":"-"},"content":""},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder"},{"lineNumber":10,"author":{"gitId":"xinweit"},"content":"javac  -cp ..\\src\\main\\java\\duke -Xlint:none -d ..\\bin ..\\src\\main\\java\\duke\\*.java"},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 ("},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1"},{"lineNumber":14,"author":{"gitId":"-"},"content":")"},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0"},{"lineNumber":16,"author":{"gitId":"-"},"content":""},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"},{"lineNumber":18,"author":{"gitId":"-"},"content":"java -classpath ..\\bin Duke \u003c input.txt \u003e ACTUAL.TXT"},{"lineNumber":19,"author":{"gitId":"-"},"content":""},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM compare the output to the expected output"},{"lineNumber":21,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT"}],"authorContributionMap":{"xinweit":1,"-":20}}]
