[{"path":"data/duke.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"xinweit"},"content":"T ; 0 ; dog"},{"lineNumber":2,"author":{"gitId":"xinweit"},"content":"D ; 1 ; return book ; 2019-10-15"},{"lineNumber":3,"author":{"gitId":"xinweit"},"content":"E ; 0 ; project meeting ; 2020-10-15"}],"authorContributionMap":{"xinweit":3}},{"path":"src/main/java/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"xinweit"},"content":"import java.time.LocalDate;"},{"lineNumber":2,"author":{"gitId":"xinweit"},"content":"import java.time.format.DateTimeFormatter;"},{"lineNumber":3,"author":{"gitId":"xinweit"},"content":""},{"lineNumber":4,"author":{"gitId":"xinweit"},"content":"public class Deadline extends Task {"},{"lineNumber":5,"author":{"gitId":"xinweit"},"content":""},{"lineNumber":6,"author":{"gitId":"xinweit"},"content":"    protected String by;"},{"lineNumber":7,"author":{"gitId":"xinweit"},"content":"    protected LocalDate localBy;"},{"lineNumber":8,"author":{"gitId":"xinweit"},"content":""},{"lineNumber":9,"author":{"gitId":"xinweit"},"content":"    public Deadline(String description, String by) {"},{"lineNumber":10,"author":{"gitId":"xinweit"},"content":"        super(description);"},{"lineNumber":11,"author":{"gitId":"xinweit"},"content":"        this.by \u003d by;"},{"lineNumber":12,"author":{"gitId":"xinweit"},"content":"        this.localBy \u003d LocalDate.parse(by);"},{"lineNumber":13,"author":{"gitId":"xinweit"},"content":"        type \u003d \u0027D\u0027;"},{"lineNumber":14,"author":{"gitId":"xinweit"},"content":"    }"},{"lineNumber":15,"author":{"gitId":"xinweit"},"content":""},{"lineNumber":16,"author":{"gitId":"xinweit"},"content":"    public String getBy() {"},{"lineNumber":17,"author":{"gitId":"xinweit"},"content":"        return this.by;"},{"lineNumber":18,"author":{"gitId":"xinweit"},"content":"    }"},{"lineNumber":19,"author":{"gitId":"xinweit"},"content":""},{"lineNumber":20,"author":{"gitId":"xinweit"},"content":"    public String getFormattedBy() {"},{"lineNumber":21,"author":{"gitId":"xinweit"},"content":"        return localBy.format(DateTimeFormatter.ofPattern(\"MMM dd yyyy\"));"},{"lineNumber":22,"author":{"gitId":"xinweit"},"content":"    }"},{"lineNumber":23,"author":{"gitId":"xinweit"},"content":""},{"lineNumber":24,"author":{"gitId":"xinweit"},"content":"    @Override"},{"lineNumber":25,"author":{"gitId":"xinweit"},"content":"    public String toString() {"},{"lineNumber":26,"author":{"gitId":"xinweit"},"content":"        return \"[D]\" + super.toString() + \" (by: \" + this.getFormattedBy() + \")\";"},{"lineNumber":27,"author":{"gitId":"xinweit"},"content":"    }"},{"lineNumber":28,"author":{"gitId":"xinweit"},"content":"}"}],"authorContributionMap":{"xinweit":28}},{"path":"src/main/java/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"xinweit"},"content":"import java.util.Scanner;"},{"lineNumber":2,"author":{"gitId":"xinweit"},"content":"import java.util.ArrayList;"},{"lineNumber":3,"author":{"gitId":"xinweit"},"content":""},{"lineNumber":4,"author":{"gitId":"xinweit"},"content":""},{"lineNumber":5,"author":{"gitId":"xinweit"},"content":"import java.io.File;"},{"lineNumber":6,"author":{"gitId":"xinweit"},"content":"import java.io.FileNotFoundException;"},{"lineNumber":7,"author":{"gitId":"xinweit"},"content":""},{"lineNumber":8,"author":{"gitId":"xinweit"},"content":"import java.io.FileWriter;"},{"lineNumber":9,"author":{"gitId":"xinweit"},"content":"import java.io.IOException;"},{"lineNumber":10,"author":{"gitId":"xinweit"},"content":""},{"lineNumber":11,"author":{"gitId":"xinweit"},"content":""},{"lineNumber":12,"author":{"gitId":"-"},"content":"public class Duke {"},{"lineNumber":13,"author":{"gitId":"xinweit"},"content":"    public static ArrayList\u003cTask\u003e list \u003d new ArrayList\u003c\u003e();"},{"lineNumber":14,"author":{"gitId":"xinweit"},"content":"    private static final String horizontalLine \u003d \"____________________________________________________________\";"},{"lineNumber":15,"author":{"gitId":"xinweit"},"content":""},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public static void main(String[] args) {"},{"lineNumber":17,"author":{"gitId":"xinweit"},"content":""},{"lineNumber":18,"author":{"gitId":"xinweit"},"content":"        Scanner sc \u003d new Scanner(System.in);"},{"lineNumber":19,"author":{"gitId":"xinweit"},"content":"        try {"},{"lineNumber":20,"author":{"gitId":"xinweit"},"content":"            File savedTasksFile \u003d new File(\"data/duke.txt\");"},{"lineNumber":21,"author":{"gitId":"xinweit"},"content":"            if (!savedTasksFile.exists()) {"},{"lineNumber":22,"author":{"gitId":"xinweit"},"content":"                File parentDir \u003d savedTasksFile.getParentFile();"},{"lineNumber":23,"author":{"gitId":"xinweit"},"content":"                parentDir.mkdir();"},{"lineNumber":24,"author":{"gitId":"xinweit"},"content":"                savedTasksFile.createNewFile();"},{"lineNumber":25,"author":{"gitId":"xinweit"},"content":"            }"},{"lineNumber":26,"author":{"gitId":"xinweit"},"content":"            loadTasks(savedTasksFile);"},{"lineNumber":27,"author":{"gitId":"xinweit"},"content":"            FileWriter fw \u003d new FileWriter(savedTasksFile);"},{"lineNumber":28,"author":{"gitId":"xinweit"},"content":""},{"lineNumber":29,"author":{"gitId":"xinweit"},"content":"            System.out.println(\"____________________________________________________________\\n\" +"},{"lineNumber":30,"author":{"gitId":"xinweit"},"content":"                    \"Hello! I\u0027m Duke\\n\" +"},{"lineNumber":31,"author":{"gitId":"xinweit"},"content":"                    \"How can I assist you?\\n\" +"},{"lineNumber":32,"author":{"gitId":"xinweit"},"content":"                    \"____________________________________________________________\");"},{"lineNumber":33,"author":{"gitId":"xinweit"},"content":"            while (true) {"},{"lineNumber":34,"author":{"gitId":"xinweit"},"content":"                String text \u003d sc.nextLine();"},{"lineNumber":35,"author":{"gitId":"xinweit"},"content":"                String[] words \u003d text.split(\" \");"},{"lineNumber":36,"author":{"gitId":"xinweit"},"content":"                if (text.equals(\"bye\")) {"},{"lineNumber":37,"author":{"gitId":"xinweit"},"content":"                    System.out.println(\"Bye. Till next time!\");"},{"lineNumber":38,"author":{"gitId":"xinweit"},"content":"                    System.out.println(horizontalLine);"},{"lineNumber":39,"author":{"gitId":"xinweit"},"content":"                    break;"},{"lineNumber":40,"author":{"gitId":"xinweit"},"content":"                } else if (text.equals(\"list\")) {"},{"lineNumber":41,"author":{"gitId":"xinweit"},"content":"                    System.out.println(\"Here are the tasks in your list:\");"},{"lineNumber":42,"author":{"gitId":"xinweit"},"content":"                    int num \u003d 1;"},{"lineNumber":43,"author":{"gitId":"xinweit"},"content":"                    for (Task task : list) {"},{"lineNumber":44,"author":{"gitId":"xinweit"},"content":"                        System.out.println(String.format(\"%d. %s\", num, task));"},{"lineNumber":45,"author":{"gitId":"xinweit"},"content":"                        num++;"},{"lineNumber":46,"author":{"gitId":"xinweit"},"content":"                    }"},{"lineNumber":47,"author":{"gitId":"xinweit"},"content":"                    System.out.println(horizontalLine);"},{"lineNumber":48,"author":{"gitId":"xinweit"},"content":"                } else if (words[0].equals(\"done\")) {"},{"lineNumber":49,"author":{"gitId":"xinweit"},"content":"                    int num \u003d Integer.parseInt(words[1]);"},{"lineNumber":50,"author":{"gitId":"xinweit"},"content":"                    Task task \u003d list.get(num - 1);"},{"lineNumber":51,"author":{"gitId":"xinweit"},"content":"                    task.done();"},{"lineNumber":52,"author":{"gitId":"xinweit"},"content":"                    System.out.println(\"Nice! I\u0027ve marked this task as done:\\n\" + task);"},{"lineNumber":53,"author":{"gitId":"xinweit"},"content":"                    System.out.println(horizontalLine);"},{"lineNumber":54,"author":{"gitId":"xinweit"},"content":"                } else if (words[0].equals(\"delete\")) {"},{"lineNumber":55,"author":{"gitId":"xinweit"},"content":"                    int num \u003d Integer.parseInt(words[1]);"},{"lineNumber":56,"author":{"gitId":"xinweit"},"content":"                    deleteAndPrintTask(num);"},{"lineNumber":57,"author":{"gitId":"xinweit"},"content":"                } else if (words[0].equals(\"todo\")) {"},{"lineNumber":58,"author":{"gitId":"xinweit"},"content":"                    try {"},{"lineNumber":59,"author":{"gitId":"xinweit"},"content":"                        emptyDesc(words);"},{"lineNumber":60,"author":{"gitId":"xinweit"},"content":"                        Task todo \u003d new Todo(text.substring(text.indexOf(\" \") + 1));"},{"lineNumber":61,"author":{"gitId":"xinweit"},"content":"                        addAndPrintTask(todo);"},{"lineNumber":62,"author":{"gitId":"xinweit"},"content":"                    } catch (DukeException e) {"},{"lineNumber":63,"author":{"gitId":"xinweit"},"content":"                        System.out.println(\"OOPS!!! The description of a todo cannot be empty.\\n\" + horizontalLine);"},{"lineNumber":64,"author":{"gitId":"xinweit"},"content":"                    }"},{"lineNumber":65,"author":{"gitId":"xinweit"},"content":"                } else if (words[0].equals(\"deadline\")) {"},{"lineNumber":66,"author":{"gitId":"xinweit"},"content":"                    try {"},{"lineNumber":67,"author":{"gitId":"xinweit"},"content":"                        emptyDesc(words);"},{"lineNumber":68,"author":{"gitId":"xinweit"},"content":"                        Task deadline \u003d new Deadline(text.substring(text.indexOf(\" \") + 1, text.indexOf(\"/\") - 1), text.substring(text.indexOf(\"/\") + 4));"},{"lineNumber":69,"author":{"gitId":"xinweit"},"content":"                        addAndPrintTask(deadline);"},{"lineNumber":70,"author":{"gitId":"xinweit"},"content":"                    } catch (DukeException e) {"},{"lineNumber":71,"author":{"gitId":"xinweit"},"content":"                        System.out.println(\"OOPS!!! The description of a deadline cannot be empty.\\n\" + horizontalLine);"},{"lineNumber":72,"author":{"gitId":"xinweit"},"content":"                    }"},{"lineNumber":73,"author":{"gitId":"xinweit"},"content":"                } else if (words[0].equals(\"event\")) {"},{"lineNumber":74,"author":{"gitId":"xinweit"},"content":"                    try {"},{"lineNumber":75,"author":{"gitId":"xinweit"},"content":"                        emptyDesc(words);"},{"lineNumber":76,"author":{"gitId":"xinweit"},"content":"                        Task event \u003d new Event(text.substring(text.indexOf(\" \") + 1, text.indexOf(\"/\") - 1), text.substring(text.indexOf(\"/\") + 4));"},{"lineNumber":77,"author":{"gitId":"xinweit"},"content":"                        addAndPrintTask(event);"},{"lineNumber":78,"author":{"gitId":"xinweit"},"content":"                    } catch (DukeException e) {"},{"lineNumber":79,"author":{"gitId":"xinweit"},"content":"                        System.out.println(\"OOPS!!! The description of an event cannot be empty.\\n\" + horizontalLine);"},{"lineNumber":80,"author":{"gitId":"xinweit"},"content":"                    }"},{"lineNumber":81,"author":{"gitId":"xinweit"},"content":"                } else {"},{"lineNumber":82,"author":{"gitId":"xinweit"},"content":"                    try {"},{"lineNumber":83,"author":{"gitId":"xinweit"},"content":"                        throw new DukeException();"},{"lineNumber":84,"author":{"gitId":"xinweit"},"content":"                    } catch (DukeException e) {"},{"lineNumber":85,"author":{"gitId":"xinweit"},"content":"                        System.out.println(\"OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\\n\" + horizontalLine);"},{"lineNumber":86,"author":{"gitId":"xinweit"},"content":"                    }"},{"lineNumber":87,"author":{"gitId":"xinweit"},"content":"                }"},{"lineNumber":88,"author":{"gitId":"xinweit"},"content":"            }"},{"lineNumber":89,"author":{"gitId":"xinweit"},"content":"            fw.write(saveTasks(list));"},{"lineNumber":90,"author":{"gitId":"xinweit"},"content":"            fw.close();"},{"lineNumber":91,"author":{"gitId":"xinweit"},"content":"        } catch (FileNotFoundException e){"},{"lineNumber":92,"author":{"gitId":"xinweit"},"content":"            System.out.println(e);"},{"lineNumber":93,"author":{"gitId":"xinweit"},"content":"        } catch (IOException e) {"},{"lineNumber":94,"author":{"gitId":"xinweit"},"content":"            System.out.println(e);"},{"lineNumber":95,"author":{"gitId":"xinweit"},"content":"        }"},{"lineNumber":96,"author":{"gitId":"xinweit"},"content":"        sc.close();"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":98,"author":{"gitId":"xinweit"},"content":""},{"lineNumber":99,"author":{"gitId":"xinweit"},"content":"    private static void addAndPrintTask(Task task) {"},{"lineNumber":100,"author":{"gitId":"xinweit"},"content":"        list.add(task);"},{"lineNumber":101,"author":{"gitId":"xinweit"},"content":"        System.out.println(\"Got it. I\u0027ve added this task:\");"},{"lineNumber":102,"author":{"gitId":"xinweit"},"content":"        System.out.println(task);"},{"lineNumber":103,"author":{"gitId":"xinweit"},"content":"        System.out.println(\"Now you have \" + list.size() + \" tasks in the list.\");"},{"lineNumber":104,"author":{"gitId":"xinweit"},"content":"        System.out.println(horizontalLine);"},{"lineNumber":105,"author":{"gitId":"xinweit"},"content":"    }"},{"lineNumber":106,"author":{"gitId":"xinweit"},"content":""},{"lineNumber":107,"author":{"gitId":"xinweit"},"content":"    private static void emptyDesc(String[] words) throws DukeException {"},{"lineNumber":108,"author":{"gitId":"xinweit"},"content":"        if (words.length \u003d\u003d 1) {"},{"lineNumber":109,"author":{"gitId":"xinweit"},"content":"            throw new DukeException();"},{"lineNumber":110,"author":{"gitId":"xinweit"},"content":"        }"},{"lineNumber":111,"author":{"gitId":"xinweit"},"content":"    }"},{"lineNumber":112,"author":{"gitId":"xinweit"},"content":""},{"lineNumber":113,"author":{"gitId":"xinweit"},"content":"    private static void deleteAndPrintTask(int num) {"},{"lineNumber":114,"author":{"gitId":"xinweit"},"content":"        Task removedTask \u003d list.remove(num-1);"},{"lineNumber":115,"author":{"gitId":"xinweit"},"content":"        System.out.println(\"Noted. I\u0027ve removed this task:\");"},{"lineNumber":116,"author":{"gitId":"xinweit"},"content":"        System.out.println(removedTask);"},{"lineNumber":117,"author":{"gitId":"xinweit"},"content":"        System.out.println(\"Now you have \" + list.size() + \" tasks in the list.\");"},{"lineNumber":118,"author":{"gitId":"xinweit"},"content":"        System.out.println(horizontalLine);"},{"lineNumber":119,"author":{"gitId":"xinweit"},"content":"    }"},{"lineNumber":120,"author":{"gitId":"xinweit"},"content":""},{"lineNumber":121,"author":{"gitId":"xinweit"},"content":"    public static String saveTasks(ArrayList\u003cTask\u003e list) {"},{"lineNumber":122,"author":{"gitId":"xinweit"},"content":"        String fileContent \u003d \"\";"},{"lineNumber":123,"author":{"gitId":"xinweit"},"content":"        for (Task task: list) {"},{"lineNumber":124,"author":{"gitId":"xinweit"},"content":"            int num;"},{"lineNumber":125,"author":{"gitId":"xinweit"},"content":"            String description \u003d task.getDescription();"},{"lineNumber":126,"author":{"gitId":"xinweit"},"content":"            char type \u003d task.type();"},{"lineNumber":127,"author":{"gitId":"xinweit"},"content":"            if (task.getDoneStatus() \u003d\u003d false) {"},{"lineNumber":128,"author":{"gitId":"xinweit"},"content":"                num \u003d 0;"},{"lineNumber":129,"author":{"gitId":"xinweit"},"content":"            }"},{"lineNumber":130,"author":{"gitId":"xinweit"},"content":"            else {"},{"lineNumber":131,"author":{"gitId":"xinweit"},"content":"                num \u003d 1;"},{"lineNumber":132,"author":{"gitId":"xinweit"},"content":"            }"},{"lineNumber":133,"author":{"gitId":"xinweit"},"content":"            if (type \u003d\u003d \u0027T\u0027) {"},{"lineNumber":134,"author":{"gitId":"xinweit"},"content":"                fileContent +\u003d type + \" ; \" + num + \" ; \" + description + \"\\n\";"},{"lineNumber":135,"author":{"gitId":"xinweit"},"content":"            }"},{"lineNumber":136,"author":{"gitId":"xinweit"},"content":"            else if (type \u003d\u003d \u0027D\u0027) {"},{"lineNumber":137,"author":{"gitId":"xinweit"},"content":"                Deadline deadline \u003d (Deadline) task;"},{"lineNumber":138,"author":{"gitId":"xinweit"},"content":"                fileContent +\u003d type + \" ; \" + num + \" ; \" + description +  \" ; \" + deadline.getBy() + \"\\n\";"},{"lineNumber":139,"author":{"gitId":"xinweit"},"content":"            }"},{"lineNumber":140,"author":{"gitId":"xinweit"},"content":"            else { //type \u0027E\u0027"},{"lineNumber":141,"author":{"gitId":"xinweit"},"content":"                Event event \u003d (Event) task;"},{"lineNumber":142,"author":{"gitId":"xinweit"},"content":"                fileContent +\u003d type + \" ; \" + num + \" ; \" + description +  \" ; \" + event.getAt() + \"\\n\";"},{"lineNumber":143,"author":{"gitId":"xinweit"},"content":"            }"},{"lineNumber":144,"author":{"gitId":"xinweit"},"content":"        }"},{"lineNumber":145,"author":{"gitId":"xinweit"},"content":"        return fileContent;"},{"lineNumber":146,"author":{"gitId":"xinweit"},"content":"    }"},{"lineNumber":147,"author":{"gitId":"xinweit"},"content":""},{"lineNumber":148,"author":{"gitId":"xinweit"},"content":"    public static void loadTasks(File file) throws FileNotFoundException {"},{"lineNumber":149,"author":{"gitId":"xinweit"},"content":"        Scanner s \u003d new Scanner(file);"},{"lineNumber":150,"author":{"gitId":"xinweit"},"content":"        while (s.hasNextLine()) {"},{"lineNumber":151,"author":{"gitId":"xinweit"},"content":"            String line \u003d s.nextLine();"},{"lineNumber":152,"author":{"gitId":"xinweit"},"content":"            String[] taskArr \u003d line.split(\" ; \", 4);"},{"lineNumber":153,"author":{"gitId":"xinweit"},"content":"            char type \u003d taskArr[0].charAt(0);"},{"lineNumber":154,"author":{"gitId":"xinweit"},"content":"            String num \u003d taskArr[1];"},{"lineNumber":155,"author":{"gitId":"xinweit"},"content":"            String description \u003d taskArr[2];"},{"lineNumber":156,"author":{"gitId":"xinweit"},"content":"            if (type \u003d\u003d \u0027T\u0027) {"},{"lineNumber":157,"author":{"gitId":"xinweit"},"content":"                Todo todo \u003d new Todo(description);"},{"lineNumber":158,"author":{"gitId":"xinweit"},"content":"                if (num.equals(\"1\")) {"},{"lineNumber":159,"author":{"gitId":"xinweit"},"content":"                    todo.done();"},{"lineNumber":160,"author":{"gitId":"xinweit"},"content":"                }"},{"lineNumber":161,"author":{"gitId":"xinweit"},"content":"                list.add(todo);"},{"lineNumber":162,"author":{"gitId":"xinweit"},"content":"            } else if (type \u003d\u003d \u0027D\u0027) {"},{"lineNumber":163,"author":{"gitId":"xinweit"},"content":"                String when \u003d taskArr[3];"},{"lineNumber":164,"author":{"gitId":"xinweit"},"content":"                Deadline deadline \u003d new Deadline(description, when);"},{"lineNumber":165,"author":{"gitId":"xinweit"},"content":"                if (num.equals(\"1\")) {"},{"lineNumber":166,"author":{"gitId":"xinweit"},"content":"                    deadline.done();"},{"lineNumber":167,"author":{"gitId":"xinweit"},"content":"                }"},{"lineNumber":168,"author":{"gitId":"xinweit"},"content":"                list.add(deadline);"},{"lineNumber":169,"author":{"gitId":"xinweit"},"content":"            } else { //type \u0027E\u0027"},{"lineNumber":170,"author":{"gitId":"xinweit"},"content":"                String when \u003d taskArr[3];"},{"lineNumber":171,"author":{"gitId":"xinweit"},"content":"                Event event \u003d new Event(description, when);"},{"lineNumber":172,"author":{"gitId":"xinweit"},"content":"                if (num.equals(\"1\")) {"},{"lineNumber":173,"author":{"gitId":"xinweit"},"content":"                    event.done();"},{"lineNumber":174,"author":{"gitId":"xinweit"},"content":"                }"},{"lineNumber":175,"author":{"gitId":"xinweit"},"content":"                list.add(event);"},{"lineNumber":176,"author":{"gitId":"xinweit"},"content":"            }"},{"lineNumber":177,"author":{"gitId":"xinweit"},"content":"        }"},{"lineNumber":178,"author":{"gitId":"xinweit"},"content":"        s.close();"},{"lineNumber":179,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":180,"author":{"gitId":"-"},"content":"}"}],"authorContributionMap":{"xinweit":175,"-":5}},{"path":"src/main/java/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"xinweit"},"content":"public class DukeException extends Exception{"},{"lineNumber":2,"author":{"gitId":"xinweit"},"content":""},{"lineNumber":3,"author":{"gitId":"xinweit"},"content":"}"}],"authorContributionMap":{"xinweit":3}},{"path":"src/main/java/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"xinweit"},"content":"import java.time.LocalDate;"},{"lineNumber":2,"author":{"gitId":"xinweit"},"content":"import java.time.format.DateTimeFormatter;"},{"lineNumber":3,"author":{"gitId":"xinweit"},"content":""},{"lineNumber":4,"author":{"gitId":"xinweit"},"content":"public class Event extends Task {"},{"lineNumber":5,"author":{"gitId":"xinweit"},"content":""},{"lineNumber":6,"author":{"gitId":"xinweit"},"content":"    protected String at;"},{"lineNumber":7,"author":{"gitId":"xinweit"},"content":"    protected LocalDate localAt;"},{"lineNumber":8,"author":{"gitId":"xinweit"},"content":""},{"lineNumber":9,"author":{"gitId":"xinweit"},"content":"    public Event(String description, String at) {"},{"lineNumber":10,"author":{"gitId":"xinweit"},"content":"        super(description);"},{"lineNumber":11,"author":{"gitId":"xinweit"},"content":"        this.at \u003d at;"},{"lineNumber":12,"author":{"gitId":"xinweit"},"content":"        this.localAt \u003d LocalDate.parse(at);"},{"lineNumber":13,"author":{"gitId":"xinweit"},"content":"        this.type \u003d \u0027E\u0027;"},{"lineNumber":14,"author":{"gitId":"xinweit"},"content":"    }"},{"lineNumber":15,"author":{"gitId":"xinweit"},"content":""},{"lineNumber":16,"author":{"gitId":"xinweit"},"content":"    public String getAt() {"},{"lineNumber":17,"author":{"gitId":"xinweit"},"content":"        return this.at;"},{"lineNumber":18,"author":{"gitId":"xinweit"},"content":"    }"},{"lineNumber":19,"author":{"gitId":"xinweit"},"content":"    public String getFormattedAt() {"},{"lineNumber":20,"author":{"gitId":"xinweit"},"content":"        return localAt.format(DateTimeFormatter.ofPattern(\"MMM dd yyyy\"));"},{"lineNumber":21,"author":{"gitId":"xinweit"},"content":"    }"},{"lineNumber":22,"author":{"gitId":"xinweit"},"content":""},{"lineNumber":23,"author":{"gitId":"xinweit"},"content":"    @Override"},{"lineNumber":24,"author":{"gitId":"xinweit"},"content":"    public String toString() {"},{"lineNumber":25,"author":{"gitId":"xinweit"},"content":"        return \"[E]\" + super.toString() + \" (at: \" + this.getFormattedAt() + \")\";"},{"lineNumber":26,"author":{"gitId":"xinweit"},"content":"    }"},{"lineNumber":27,"author":{"gitId":"xinweit"},"content":"}"}],"authorContributionMap":{"xinweit":27}},{"path":"src/main/java/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"xinweit"},"content":"public class Task {"},{"lineNumber":2,"author":{"gitId":"xinweit"},"content":"    protected String description;"},{"lineNumber":3,"author":{"gitId":"xinweit"},"content":"    protected boolean isDone;"},{"lineNumber":4,"author":{"gitId":"xinweit"},"content":"    protected char type;"},{"lineNumber":5,"author":{"gitId":"xinweit"},"content":""},{"lineNumber":6,"author":{"gitId":"xinweit"},"content":"    public Task(String description) {"},{"lineNumber":7,"author":{"gitId":"xinweit"},"content":"        this.description \u003d description;"},{"lineNumber":8,"author":{"gitId":"xinweit"},"content":"        this.isDone \u003d false;"},{"lineNumber":9,"author":{"gitId":"xinweit"},"content":"    }"},{"lineNumber":10,"author":{"gitId":"xinweit"},"content":""},{"lineNumber":11,"author":{"gitId":"xinweit"},"content":"    public String getStatusIcon() {"},{"lineNumber":12,"author":{"gitId":"xinweit"},"content":"        return (isDone ? \"X\" : \" \"); //return X or blank space, X means done"},{"lineNumber":13,"author":{"gitId":"xinweit"},"content":"    }"},{"lineNumber":14,"author":{"gitId":"xinweit"},"content":""},{"lineNumber":15,"author":{"gitId":"xinweit"},"content":"    public void done() {"},{"lineNumber":16,"author":{"gitId":"xinweit"},"content":"        this.isDone \u003d true;"},{"lineNumber":17,"author":{"gitId":"xinweit"},"content":"    }"},{"lineNumber":18,"author":{"gitId":"xinweit"},"content":""},{"lineNumber":19,"author":{"gitId":"xinweit"},"content":"    public char type() {"},{"lineNumber":20,"author":{"gitId":"xinweit"},"content":"        return this.type;"},{"lineNumber":21,"author":{"gitId":"xinweit"},"content":"    }"},{"lineNumber":22,"author":{"gitId":"xinweit"},"content":""},{"lineNumber":23,"author":{"gitId":"xinweit"},"content":"    public String getDescription() {"},{"lineNumber":24,"author":{"gitId":"xinweit"},"content":"        return this.description;"},{"lineNumber":25,"author":{"gitId":"xinweit"},"content":"    }"},{"lineNumber":26,"author":{"gitId":"xinweit"},"content":""},{"lineNumber":27,"author":{"gitId":"xinweit"},"content":"    public boolean getDoneStatus() {"},{"lineNumber":28,"author":{"gitId":"xinweit"},"content":"        return this.isDone;"},{"lineNumber":29,"author":{"gitId":"xinweit"},"content":"    }"},{"lineNumber":30,"author":{"gitId":"xinweit"},"content":""},{"lineNumber":31,"author":{"gitId":"xinweit"},"content":"    @Override"},{"lineNumber":32,"author":{"gitId":"xinweit"},"content":"    public String toString() {"},{"lineNumber":33,"author":{"gitId":"xinweit"},"content":"        return String.format(\"[%s] %s\", this.getStatusIcon(), this.getDescription());"},{"lineNumber":34,"author":{"gitId":"xinweit"},"content":"    }"},{"lineNumber":35,"author":{"gitId":"xinweit"},"content":"}"}],"authorContributionMap":{"xinweit":35}},{"path":"src/main/java/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"xinweit"},"content":"public class Todo extends Task {"},{"lineNumber":2,"author":{"gitId":"xinweit"},"content":""},{"lineNumber":3,"author":{"gitId":"xinweit"},"content":"    public Todo(String description){"},{"lineNumber":4,"author":{"gitId":"xinweit"},"content":"        super(description);"},{"lineNumber":5,"author":{"gitId":"xinweit"},"content":"        this.type \u003d \u0027T\u0027;"},{"lineNumber":6,"author":{"gitId":"xinweit"},"content":"    }"},{"lineNumber":7,"author":{"gitId":"xinweit"},"content":""},{"lineNumber":8,"author":{"gitId":"xinweit"},"content":"    @Override"},{"lineNumber":9,"author":{"gitId":"xinweit"},"content":"    public String toString() {"},{"lineNumber":10,"author":{"gitId":"xinweit"},"content":"        return \"[T]\" + super.toString();"},{"lineNumber":11,"author":{"gitId":"xinweit"},"content":"    }"},{"lineNumber":12,"author":{"gitId":"xinweit"},"content":"}"}],"authorContributionMap":{"xinweit":12}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"xinweit"},"content":"todo borrow book"},{"lineNumber":2,"author":{"gitId":"xinweit"},"content":"deadline return book /by Sunday"},{"lineNumber":3,"author":{"gitId":"xinweit"},"content":"event project meeting /at Mon 2-4pm"},{"lineNumber":4,"author":{"gitId":"xinweit"},"content":"done 2"},{"lineNumber":5,"author":{"gitId":"xinweit"},"content":"list"},{"lineNumber":6,"author":{"gitId":"xinweit"},"content":"event gathering /at Sunday afternoon"},{"lineNumber":7,"author":{"gitId":"xinweit"},"content":"done 1"},{"lineNumber":8,"author":{"gitId":"xinweit"},"content":"list"},{"lineNumber":9,"author":{"gitId":"xinweit"},"content":"delete 2"},{"lineNumber":10,"author":{"gitId":"xinweit"},"content":"delete 1"},{"lineNumber":11,"author":{"gitId":"xinweit"},"content":"list"},{"lineNumber":12,"author":{"gitId":"xinweit"},"content":"todo"},{"lineNumber":13,"author":{"gitId":"xinweit"},"content":"bye"}],"authorContributionMap":{"xinweit":13}}]
