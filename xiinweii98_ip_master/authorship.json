[{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027checkstyle\u0027"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027"},{"lineNumber":6,"author":{"gitId":"-"},"content":"}"},{"lineNumber":7,"author":{"gitId":"-"},"content":""},{"lineNumber":8,"author":{"gitId":"-"},"content":"repositories {"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    mavenCentral()"},{"lineNumber":10,"author":{"gitId":"-"},"content":"}"},{"lineNumber":11,"author":{"gitId":"-"},"content":""},{"lineNumber":12,"author":{"gitId":"-"},"content":"dependencies {"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.5.0\u0027"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.5.0\u0027"},{"lineNumber":15,"author":{"gitId":"xiinweii98"},"content":""},{"lineNumber":16,"author":{"gitId":"xiinweii98"},"content":"    String javaFxVersion \u003d \u002711\u0027"},{"lineNumber":17,"author":{"gitId":"xiinweii98"},"content":""},{"lineNumber":18,"author":{"gitId":"xiinweii98"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027"},{"lineNumber":19,"author":{"gitId":"xiinweii98"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"},{"lineNumber":20,"author":{"gitId":"xiinweii98"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"},{"lineNumber":21,"author":{"gitId":"xiinweii98"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027"},{"lineNumber":22,"author":{"gitId":"xiinweii98"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"},{"lineNumber":23,"author":{"gitId":"xiinweii98"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"},{"lineNumber":24,"author":{"gitId":"xiinweii98"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027"},{"lineNumber":25,"author":{"gitId":"xiinweii98"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"},{"lineNumber":26,"author":{"gitId":"xiinweii98"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"},{"lineNumber":27,"author":{"gitId":"xiinweii98"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027"},{"lineNumber":28,"author":{"gitId":"xiinweii98"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"},{"lineNumber":29,"author":{"gitId":"xiinweii98"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"},{"lineNumber":30,"author":{"gitId":"-"},"content":"}"},{"lineNumber":31,"author":{"gitId":"-"},"content":""},{"lineNumber":32,"author":{"gitId":"-"},"content":"test {"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    useJUnitPlatform()"},{"lineNumber":34,"author":{"gitId":"-"},"content":""},{"lineNumber":35,"author":{"gitId":"-"},"content":"    testLogging {"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\""},{"lineNumber":37,"author":{"gitId":"-"},"content":""},{"lineNumber":38,"author":{"gitId":"-"},"content":"        showExceptions true"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\""},{"lineNumber":40,"author":{"gitId":"-"},"content":"        showCauses true"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        showStackTraces true"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":44,"author":{"gitId":"-"},"content":"}"},{"lineNumber":45,"author":{"gitId":"-"},"content":""},{"lineNumber":46,"author":{"gitId":"-"},"content":"application {"},{"lineNumber":47,"author":{"gitId":"xiinweii98"},"content":"    mainClassName \u003d \"Duke\""},{"lineNumber":48,"author":{"gitId":"-"},"content":"}"},{"lineNumber":49,"author":{"gitId":"-"},"content":""},{"lineNumber":50,"author":{"gitId":"-"},"content":"shadowJar {"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    archiveBaseName \u003d \"duke\""},{"lineNumber":52,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null"},{"lineNumber":53,"author":{"gitId":"-"},"content":"}"},{"lineNumber":54,"author":{"gitId":"-"},"content":""},{"lineNumber":55,"author":{"gitId":"-"},"content":"checkstyle {"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    toolVersion \u003d \u00278.29\u0027"},{"lineNumber":57,"author":{"gitId":"-"},"content":"}"},{"lineNumber":58,"author":{"gitId":"-"},"content":""},{"lineNumber":59,"author":{"gitId":"-"},"content":"run{"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in"},{"lineNumber":61,"author":{"gitId":"-"},"content":"}"}],"authorContributionMap":{"xiinweii98":16,"-":45}},{"path":"data/savedTasks.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"xiinweii98"},"content":"T 0 borrow book"},{"lineNumber":2,"author":{"gitId":"xiinweii98"},"content":"T 0 sell gme"}],"authorContributionMap":{"xiinweii98":2}},{"path":"src/main/java/AddCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"xiinweii98"},"content":"import java.io.IOException;"},{"lineNumber":2,"author":{"gitId":"xiinweii98"},"content":""},{"lineNumber":3,"author":{"gitId":"xiinweii98"},"content":"/**"},{"lineNumber":4,"author":{"gitId":"xiinweii98"},"content":" * Command to add a task."},{"lineNumber":5,"author":{"gitId":"xiinweii98"},"content":" * Inherits from the superclass Command."},{"lineNumber":6,"author":{"gitId":"xiinweii98"},"content":" */"},{"lineNumber":7,"author":{"gitId":"xiinweii98"},"content":"public class AddCommand extends Command {"},{"lineNumber":8,"author":{"gitId":"xiinweii98"},"content":"    private final Task toAdd;"},{"lineNumber":9,"author":{"gitId":"xiinweii98"},"content":""},{"lineNumber":10,"author":{"gitId":"xiinweii98"},"content":"    /**"},{"lineNumber":11,"author":{"gitId":"xiinweii98"},"content":"     * Constructor to keep track of the Task being added."},{"lineNumber":12,"author":{"gitId":"xiinweii98"},"content":"     * @param toAdd The task to be added."},{"lineNumber":13,"author":{"gitId":"xiinweii98"},"content":"     */"},{"lineNumber":14,"author":{"gitId":"xiinweii98"},"content":"    public AddCommand(Task toAdd) {"},{"lineNumber":15,"author":{"gitId":"xiinweii98"},"content":"        this.toAdd \u003d toAdd;"},{"lineNumber":16,"author":{"gitId":"xiinweii98"},"content":"    }"},{"lineNumber":17,"author":{"gitId":"xiinweii98"},"content":""},{"lineNumber":18,"author":{"gitId":"xiinweii98"},"content":"    /**"},{"lineNumber":19,"author":{"gitId":"xiinweii98"},"content":"     * Adds the task into the TaskList and update the file in hard drive respectively."},{"lineNumber":20,"author":{"gitId":"xiinweii98"},"content":"     * Print messages to inform user that the task has been added."},{"lineNumber":21,"author":{"gitId":"xiinweii98"},"content":"     * @param taskList TaskList that contains all tasks at hand."},{"lineNumber":22,"author":{"gitId":"xiinweii98"},"content":"     * @param ui Ui that deals with interaction with the user."},{"lineNumber":23,"author":{"gitId":"xiinweii98"},"content":"     * @param storage Storage that deals with storing TaskList into hard drive."},{"lineNumber":24,"author":{"gitId":"xiinweii98"},"content":"     * @throws IOException If there is an error while updating the file in hard drive."},{"lineNumber":25,"author":{"gitId":"xiinweii98"},"content":"     */"},{"lineNumber":26,"author":{"gitId":"xiinweii98"},"content":"    public String execute(TaskList taskList, Ui ui, Storage storage) throws IOException {"},{"lineNumber":27,"author":{"gitId":"xiinweii98"},"content":"        taskList.addTask(this.toAdd);"},{"lineNumber":28,"author":{"gitId":"xiinweii98"},"content":"        storage.update(taskList);"},{"lineNumber":29,"author":{"gitId":"xiinweii98"},"content":"        return ui.printAddTaskMessage(this.toAdd, taskList);"},{"lineNumber":30,"author":{"gitId":"xiinweii98"},"content":"    }"},{"lineNumber":31,"author":{"gitId":"xiinweii98"},"content":"}"}],"authorContributionMap":{"xiinweii98":31}},{"path":"src/main/java/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"xiinweii98"},"content":"import java.io.IOException;"},{"lineNumber":2,"author":{"gitId":"xiinweii98"},"content":""},{"lineNumber":3,"author":{"gitId":"xiinweii98"},"content":"/**"},{"lineNumber":4,"author":{"gitId":"xiinweii98"},"content":" * Represents a possible command that users can call on the Duke bot."},{"lineNumber":5,"author":{"gitId":"xiinweii98"},"content":" * Specific commands will inherit from this abstract class."},{"lineNumber":6,"author":{"gitId":"xiinweii98"},"content":" */"},{"lineNumber":7,"author":{"gitId":"xiinweii98"},"content":"public abstract class Command {"},{"lineNumber":8,"author":{"gitId":"xiinweii98"},"content":"    private boolean isExit \u003d false;"},{"lineNumber":9,"author":{"gitId":"xiinweii98"},"content":""},{"lineNumber":10,"author":{"gitId":"xiinweii98"},"content":"    /**"},{"lineNumber":11,"author":{"gitId":"xiinweii98"},"content":"     * Executes the given command and modifies the TaskList and Storage."},{"lineNumber":12,"author":{"gitId":"xiinweii98"},"content":"     * Response with Ui to update user."},{"lineNumber":13,"author":{"gitId":"xiinweii98"},"content":"     * @param taskList TaskList that contains all tasks at hand."},{"lineNumber":14,"author":{"gitId":"xiinweii98"},"content":"     * @param ui Ui that deals with interaction with the user."},{"lineNumber":15,"author":{"gitId":"xiinweii98"},"content":"     * @param storage Storage that deals with storing TaskList into hard drive."},{"lineNumber":16,"author":{"gitId":"xiinweii98"},"content":"     * @throws IOException If program is unable to store data into hard drive."},{"lineNumber":17,"author":{"gitId":"xiinweii98"},"content":"     */"},{"lineNumber":18,"author":{"gitId":"xiinweii98"},"content":"    public abstract String execute(TaskList taskList, Ui ui, Storage storage) throws IOException;"},{"lineNumber":19,"author":{"gitId":"xiinweii98"},"content":""},{"lineNumber":20,"author":{"gitId":"xiinweii98"},"content":"    /**"},{"lineNumber":21,"author":{"gitId":"xiinweii98"},"content":"     * To identify if a command causes the Duke bot to stop running."},{"lineNumber":22,"author":{"gitId":"xiinweii98"},"content":"     */"},{"lineNumber":23,"author":{"gitId":"xiinweii98"},"content":"    public void toggleExit() {"},{"lineNumber":24,"author":{"gitId":"xiinweii98"},"content":"        this.isExit \u003d !this.isExit;"},{"lineNumber":25,"author":{"gitId":"xiinweii98"},"content":"    }"},{"lineNumber":26,"author":{"gitId":"xiinweii98"},"content":""},{"lineNumber":27,"author":{"gitId":"xiinweii98"},"content":"    /**"},{"lineNumber":28,"author":{"gitId":"xiinweii98"},"content":"     * Getter to check if a command is an exit command."},{"lineNumber":29,"author":{"gitId":"xiinweii98"},"content":"     * @return If a command is an exit command."},{"lineNumber":30,"author":{"gitId":"xiinweii98"},"content":"     */"},{"lineNumber":31,"author":{"gitId":"xiinweii98"},"content":"    public boolean isExit() {"},{"lineNumber":32,"author":{"gitId":"xiinweii98"},"content":"        return this.isExit;"},{"lineNumber":33,"author":{"gitId":"xiinweii98"},"content":"    }"},{"lineNumber":34,"author":{"gitId":"xiinweii98"},"content":"}"}],"authorContributionMap":{"xiinweii98":34}},{"path":"src/main/java/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"xiinweii98"},"content":"import java.time.LocalDate;"},{"lineNumber":2,"author":{"gitId":"xiinweii98"},"content":"import java.time.format.DateTimeFormatter;"},{"lineNumber":3,"author":{"gitId":"xiinweii98"},"content":""},{"lineNumber":4,"author":{"gitId":"xiinweii98"},"content":"/**"},{"lineNumber":5,"author":{"gitId":"xiinweii98"},"content":" * A Deadline type of Task."},{"lineNumber":6,"author":{"gitId":"xiinweii98"},"content":" * Inherits from the superclass Task."},{"lineNumber":7,"author":{"gitId":"xiinweii98"},"content":" */"},{"lineNumber":8,"author":{"gitId":"xiinweii98"},"content":"public class Deadline extends Task {"},{"lineNumber":9,"author":{"gitId":"xiinweii98"},"content":"    private final LocalDate by;"},{"lineNumber":10,"author":{"gitId":"xiinweii98"},"content":""},{"lineNumber":11,"author":{"gitId":"xiinweii98"},"content":"    /**"},{"lineNumber":12,"author":{"gitId":"xiinweii98"},"content":"     * Constructor to create a Deadline Task."},{"lineNumber":13,"author":{"gitId":"xiinweii98"},"content":"     * Keeps track of the date the Deadline is by."},{"lineNumber":14,"author":{"gitId":"xiinweii98"},"content":"     * @param name Name of the Deadline."},{"lineNumber":15,"author":{"gitId":"xiinweii98"},"content":"     * @param by Date the Deadline is due by."},{"lineNumber":16,"author":{"gitId":"xiinweii98"},"content":"     */"},{"lineNumber":17,"author":{"gitId":"xiinweii98"},"content":"    public Deadline(String name, LocalDate by) {"},{"lineNumber":18,"author":{"gitId":"xiinweii98"},"content":"        super(name);"},{"lineNumber":19,"author":{"gitId":"xiinweii98"},"content":"        this.by \u003d by;"},{"lineNumber":20,"author":{"gitId":"xiinweii98"},"content":"    }"},{"lineNumber":21,"author":{"gitId":"xiinweii98"},"content":""},{"lineNumber":22,"author":{"gitId":"xiinweii98"},"content":"    /**"},{"lineNumber":23,"author":{"gitId":"xiinweii98"},"content":"     * Constructor used when retrieving data from hard drive."},{"lineNumber":24,"author":{"gitId":"xiinweii98"},"content":"     * @param name Name of the Deadline."},{"lineNumber":25,"author":{"gitId":"xiinweii98"},"content":"     * @param by Date that the Deadline is due by."},{"lineNumber":26,"author":{"gitId":"xiinweii98"},"content":"     * @param done If the Deadline is done or not."},{"lineNumber":27,"author":{"gitId":"xiinweii98"},"content":"     */"},{"lineNumber":28,"author":{"gitId":"xiinweii98"},"content":"    public Deadline(String name, LocalDate by, boolean done) {"},{"lineNumber":29,"author":{"gitId":"xiinweii98"},"content":"        super(name, done);"},{"lineNumber":30,"author":{"gitId":"xiinweii98"},"content":"        this.by \u003d by;"},{"lineNumber":31,"author":{"gitId":"xiinweii98"},"content":"    }"},{"lineNumber":32,"author":{"gitId":"xiinweii98"},"content":""},{"lineNumber":33,"author":{"gitId":"xiinweii98"},"content":"    /**"},{"lineNumber":34,"author":{"gitId":"xiinweii98"},"content":"     * Getter for the date the Deadline is due by."},{"lineNumber":35,"author":{"gitId":"xiinweii98"},"content":"     * @return The date that the Deadline is due by."},{"lineNumber":36,"author":{"gitId":"xiinweii98"},"content":"     */"},{"lineNumber":37,"author":{"gitId":"xiinweii98"},"content":"    public LocalDate getBy() {"},{"lineNumber":38,"author":{"gitId":"xiinweii98"},"content":"        return this.by;"},{"lineNumber":39,"author":{"gitId":"xiinweii98"},"content":"    }"},{"lineNumber":40,"author":{"gitId":"xiinweii98"},"content":""},{"lineNumber":41,"author":{"gitId":"xiinweii98"},"content":"    @Override"},{"lineNumber":42,"author":{"gitId":"xiinweii98"},"content":"    public String getStatus() {"},{"lineNumber":43,"author":{"gitId":"xiinweii98"},"content":"        return \"[D]\" + super.getStatus() + \" (by: \" + this.by.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\")) + \")\";"},{"lineNumber":44,"author":{"gitId":"xiinweii98"},"content":"    }"},{"lineNumber":45,"author":{"gitId":"xiinweii98"},"content":"}"}],"authorContributionMap":{"xiinweii98":45}},{"path":"src/main/java/DeleteCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"xiinweii98"},"content":"import java.io.IOException;"},{"lineNumber":2,"author":{"gitId":"xiinweii98"},"content":""},{"lineNumber":3,"author":{"gitId":"xiinweii98"},"content":"/**"},{"lineNumber":4,"author":{"gitId":"xiinweii98"},"content":" * Command to delete a task."},{"lineNumber":5,"author":{"gitId":"xiinweii98"},"content":" * Inherits from te superclass Command."},{"lineNumber":6,"author":{"gitId":"xiinweii98"},"content":" */"},{"lineNumber":7,"author":{"gitId":"xiinweii98"},"content":"public class DeleteCommand extends Command {"},{"lineNumber":8,"author":{"gitId":"xiinweii98"},"content":"    private final int taskNum;"},{"lineNumber":9,"author":{"gitId":"xiinweii98"},"content":""},{"lineNumber":10,"author":{"gitId":"xiinweii98"},"content":"    /**"},{"lineNumber":11,"author":{"gitId":"xiinweii98"},"content":"     * Constructor to keep track of the task number to be deleted."},{"lineNumber":12,"author":{"gitId":"xiinweii98"},"content":"     * @param taskNum The task number that is to be deleted."},{"lineNumber":13,"author":{"gitId":"xiinweii98"},"content":"     */"},{"lineNumber":14,"author":{"gitId":"xiinweii98"},"content":"    public DeleteCommand(int taskNum) {"},{"lineNumber":15,"author":{"gitId":"xiinweii98"},"content":"        this.taskNum \u003d taskNum;"},{"lineNumber":16,"author":{"gitId":"xiinweii98"},"content":"    }"},{"lineNumber":17,"author":{"gitId":"xiinweii98"},"content":""},{"lineNumber":18,"author":{"gitId":"xiinweii98"},"content":"    /**"},{"lineNumber":19,"author":{"gitId":"xiinweii98"},"content":"     * Deletes the task and update the user of what is being deleted."},{"lineNumber":20,"author":{"gitId":"xiinweii98"},"content":"     * @param taskList TaskList that contains all tasks at hand."},{"lineNumber":21,"author":{"gitId":"xiinweii98"},"content":"     * @param ui Ui that deals with interaction with the user."},{"lineNumber":22,"author":{"gitId":"xiinweii98"},"content":"     * @param storage Storage that deals with storing TaskList into hard drive."},{"lineNumber":23,"author":{"gitId":"xiinweii98"},"content":"     * @throws IOException If there is an error while updating the file in hard drive."},{"lineNumber":24,"author":{"gitId":"xiinweii98"},"content":"     */"},{"lineNumber":25,"author":{"gitId":"xiinweii98"},"content":"    public String execute(TaskList taskList, Ui ui, Storage storage) throws IOException {"},{"lineNumber":26,"author":{"gitId":"xiinweii98"},"content":"        Task toDelete \u003d taskList.getTasks().get(this.taskNum - 1);"},{"lineNumber":27,"author":{"gitId":"xiinweii98"},"content":"        taskList.deleteTask(this.taskNum - 1);"},{"lineNumber":28,"author":{"gitId":"xiinweii98"},"content":"        storage.update(taskList);"},{"lineNumber":29,"author":{"gitId":"xiinweii98"},"content":"        return ui.printDeleteTask(toDelete, taskList);"},{"lineNumber":30,"author":{"gitId":"xiinweii98"},"content":"    }"},{"lineNumber":31,"author":{"gitId":"xiinweii98"},"content":"}"}],"authorContributionMap":{"xiinweii98":31}},{"path":"src/main/java/DoneCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"xiinweii98"},"content":"import java.io.IOException;"},{"lineNumber":2,"author":{"gitId":"xiinweii98"},"content":""},{"lineNumber":3,"author":{"gitId":"xiinweii98"},"content":"/**"},{"lineNumber":4,"author":{"gitId":"xiinweii98"},"content":" * Command to mark a task as done."},{"lineNumber":5,"author":{"gitId":"xiinweii98"},"content":" * Inherits from the superclass Command."},{"lineNumber":6,"author":{"gitId":"xiinweii98"},"content":" */"},{"lineNumber":7,"author":{"gitId":"xiinweii98"},"content":"public class DoneCommand extends Command {"},{"lineNumber":8,"author":{"gitId":"xiinweii98"},"content":"    private final int taskNum;"},{"lineNumber":9,"author":{"gitId":"xiinweii98"},"content":""},{"lineNumber":10,"author":{"gitId":"xiinweii98"},"content":"    /**"},{"lineNumber":11,"author":{"gitId":"xiinweii98"},"content":"     * Constructor to keep track of the task number being marked as done."},{"lineNumber":12,"author":{"gitId":"xiinweii98"},"content":"     * @param taskNum The task number that is to be marked as done."},{"lineNumber":13,"author":{"gitId":"xiinweii98"},"content":"     */"},{"lineNumber":14,"author":{"gitId":"xiinweii98"},"content":"    public DoneCommand(int taskNum) {"},{"lineNumber":15,"author":{"gitId":"xiinweii98"},"content":"        this.taskNum \u003d taskNum;"},{"lineNumber":16,"author":{"gitId":"xiinweii98"},"content":"    }"},{"lineNumber":17,"author":{"gitId":"xiinweii98"},"content":""},{"lineNumber":18,"author":{"gitId":"xiinweii98"},"content":"    /**"},{"lineNumber":19,"author":{"gitId":"xiinweii98"},"content":"     * Marks the task as done and updates the file in hard drive accordingly."},{"lineNumber":20,"author":{"gitId":"xiinweii98"},"content":"     * @param taskList TaskList that contains all tasks at hand."},{"lineNumber":21,"author":{"gitId":"xiinweii98"},"content":"     * @param ui Ui that deals with interaction with the user."},{"lineNumber":22,"author":{"gitId":"xiinweii98"},"content":"     * @param storage Storage that deals with storing TaskList into hard drive."},{"lineNumber":23,"author":{"gitId":"xiinweii98"},"content":"     * @throws IOException If there is an error while updating the file in hard drive."},{"lineNumber":24,"author":{"gitId":"xiinweii98"},"content":"     */"},{"lineNumber":25,"author":{"gitId":"xiinweii98"},"content":"    public String execute(TaskList taskList, Ui ui, Storage storage) throws IOException {"},{"lineNumber":26,"author":{"gitId":"xiinweii98"},"content":"        taskList.markDone(this.taskNum - 1);"},{"lineNumber":27,"author":{"gitId":"xiinweii98"},"content":"        storage.update(taskList);"},{"lineNumber":28,"author":{"gitId":"xiinweii98"},"content":"        return ui.printMarkDone(taskList.getTasks().get(this.taskNum - 1));"},{"lineNumber":29,"author":{"gitId":"xiinweii98"},"content":"    }"},{"lineNumber":30,"author":{"gitId":"xiinweii98"},"content":"}"}],"authorContributionMap":{"xiinweii98":30}},{"path":"src/main/java/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"xiinweii98"},"content":"import java.io.IOException;"},{"lineNumber":2,"author":{"gitId":"xiinweii98"},"content":""},{"lineNumber":3,"author":{"gitId":"xiinweii98"},"content":"/**"},{"lineNumber":4,"author":{"gitId":"xiinweii98"},"content":" * Main driver class of the Duke program."},{"lineNumber":5,"author":{"gitId":"xiinweii98"},"content":" * Keeps track of the tasks the user has and provide methods to modify"},{"lineNumber":6,"author":{"gitId":"xiinweii98"},"content":" * these tasks."},{"lineNumber":7,"author":{"gitId":"xiinweii98"},"content":" */"},{"lineNumber":8,"author":{"gitId":"-"},"content":"public class Duke {"},{"lineNumber":9,"author":{"gitId":"xiinweii98"},"content":"    private final Ui ui;"},{"lineNumber":10,"author":{"gitId":"xiinweii98"},"content":"    private TaskList tasks;"},{"lineNumber":11,"author":{"gitId":"xiinweii98"},"content":"    private Storage storage;"},{"lineNumber":12,"author":{"gitId":"xiinweii98"},"content":""},{"lineNumber":13,"author":{"gitId":"xiinweii98"},"content":"    /**"},{"lineNumber":14,"author":{"gitId":"xiinweii98"},"content":"     * Constructor of the Duke class to initialise the bot."},{"lineNumber":15,"author":{"gitId":"xiinweii98"},"content":"     * Initialises the Ui, TaskList and Storage according to input path."},{"lineNumber":16,"author":{"gitId":"xiinweii98"},"content":"     * @param path Path of the file saved in hard drive that stores tasks."},{"lineNumber":17,"author":{"gitId":"xiinweii98"},"content":"     */"},{"lineNumber":18,"author":{"gitId":"xiinweii98"},"content":"    public Duke(String path) {"},{"lineNumber":19,"author":{"gitId":"xiinweii98"},"content":"        ui \u003d new Ui();"},{"lineNumber":20,"author":{"gitId":"xiinweii98"},"content":"        try {"},{"lineNumber":21,"author":{"gitId":"xiinweii98"},"content":"            storage \u003d new Storage(path);"},{"lineNumber":22,"author":{"gitId":"xiinweii98"},"content":"            tasks \u003d new TaskList(storage.load());"},{"lineNumber":23,"author":{"gitId":"xiinweii98"},"content":"        } catch (IOException ie) {"},{"lineNumber":24,"author":{"gitId":"xiinweii98"},"content":"            ui.printStorageIoError();"},{"lineNumber":25,"author":{"gitId":"xiinweii98"},"content":"            System.exit(0);"},{"lineNumber":26,"author":{"gitId":"xiinweii98"},"content":"        } catch (DukeException de) {"},{"lineNumber":27,"author":{"gitId":"xiinweii98"},"content":"            ui.printDukeException(de);"},{"lineNumber":28,"author":{"gitId":"xiinweii98"},"content":"            tasks \u003d new TaskList();"},{"lineNumber":29,"author":{"gitId":"xiinweii98"},"content":"        }"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":31,"author":{"gitId":"xiinweii98"},"content":""},{"lineNumber":32,"author":{"gitId":"xiinweii98"},"content":"    /**"},{"lineNumber":33,"author":{"gitId":"xiinweii98"},"content":"     * Driver method for the Duke bot."},{"lineNumber":34,"author":{"gitId":"xiinweii98"},"content":"     */"},{"lineNumber":35,"author":{"gitId":"xiinweii98"},"content":"    public void run() {"},{"lineNumber":36,"author":{"gitId":"xiinweii98"},"content":"        ui.printIntroduction();"},{"lineNumber":37,"author":{"gitId":"xiinweii98"},"content":"        boolean isExit \u003d false;"},{"lineNumber":38,"author":{"gitId":"xiinweii98"},"content":""},{"lineNumber":39,"author":{"gitId":"xiinweii98"},"content":"        while (!isExit) {"},{"lineNumber":40,"author":{"gitId":"xiinweii98"},"content":"            try {"},{"lineNumber":41,"author":{"gitId":"xiinweii98"},"content":"                String stringCommand \u003d ui.readCommand();"},{"lineNumber":42,"author":{"gitId":"xiinweii98"},"content":"                Command command \u003d Parser.parseCommand(stringCommand);"},{"lineNumber":43,"author":{"gitId":"xiinweii98"},"content":"                command.execute(tasks, ui, storage);"},{"lineNumber":44,"author":{"gitId":"xiinweii98"},"content":"                isExit \u003d command.isExit();"},{"lineNumber":45,"author":{"gitId":"xiinweii98"},"content":"            } catch (DukeException de) {"},{"lineNumber":46,"author":{"gitId":"xiinweii98"},"content":"                ui.printDukeException(de);"},{"lineNumber":47,"author":{"gitId":"xiinweii98"},"content":"            } catch (IOException ie) {"},{"lineNumber":48,"author":{"gitId":"xiinweii98"},"content":"                ui.printUpdateIoError(ie);"},{"lineNumber":49,"author":{"gitId":"xiinweii98"},"content":"            }"},{"lineNumber":50,"author":{"gitId":"xiinweii98"},"content":"        }"},{"lineNumber":51,"author":{"gitId":"xiinweii98"},"content":""},{"lineNumber":52,"author":{"gitId":"xiinweii98"},"content":"        ui.closeScanner();"},{"lineNumber":53,"author":{"gitId":"xiinweii98"},"content":"        ui.printExitMessage();"},{"lineNumber":54,"author":{"gitId":"xiinweii98"},"content":"    }"},{"lineNumber":55,"author":{"gitId":"xiinweii98"},"content":""},{"lineNumber":56,"author":{"gitId":"xiinweii98"},"content":"    public String getResponse(String input) {"},{"lineNumber":57,"author":{"gitId":"xiinweii98"},"content":"        try {"},{"lineNumber":58,"author":{"gitId":"xiinweii98"},"content":"            //String stringCommand \u003d ui.readCommand();"},{"lineNumber":59,"author":{"gitId":"xiinweii98"},"content":"            Command command \u003d Parser.parseCommand(input);"},{"lineNumber":60,"author":{"gitId":"xiinweii98"},"content":"            return command.execute(tasks, ui, storage);"},{"lineNumber":61,"author":{"gitId":"xiinweii98"},"content":"        } catch (DukeException de) {"},{"lineNumber":62,"author":{"gitId":"xiinweii98"},"content":"            ui.printDukeException(de);"},{"lineNumber":63,"author":{"gitId":"xiinweii98"},"content":"        } catch (IOException ie) {"},{"lineNumber":64,"author":{"gitId":"xiinweii98"},"content":"            ui.printUpdateIoError(ie);"},{"lineNumber":65,"author":{"gitId":"xiinweii98"},"content":"        }"},{"lineNumber":66,"author":{"gitId":"xiinweii98"},"content":"        return \"Failed?\";"},{"lineNumber":67,"author":{"gitId":"xiinweii98"},"content":"    }"},{"lineNumber":68,"author":{"gitId":"-"},"content":"}"}],"authorContributionMap":{"xiinweii98":65,"-":3}},{"path":"src/main/java/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"xiinweii98"},"content":"/**"},{"lineNumber":2,"author":{"gitId":"xiinweii98"},"content":" * Customised Duke exception to be thrown when Duke related problems arise."},{"lineNumber":3,"author":{"gitId":"xiinweii98"},"content":" */"},{"lineNumber":4,"author":{"gitId":"xiinweii98"},"content":"public class DukeException extends Exception {"},{"lineNumber":5,"author":{"gitId":"xiinweii98"},"content":"    /**"},{"lineNumber":6,"author":{"gitId":"xiinweii98"},"content":"     * Constructor for the DukeException."},{"lineNumber":7,"author":{"gitId":"xiinweii98"},"content":"     * @param message Message to be shown when the DukeException is caught."},{"lineNumber":8,"author":{"gitId":"xiinweii98"},"content":"     */"},{"lineNumber":9,"author":{"gitId":"xiinweii98"},"content":"    public DukeException(String message) {"},{"lineNumber":10,"author":{"gitId":"xiinweii98"},"content":"        super(message);"},{"lineNumber":11,"author":{"gitId":"xiinweii98"},"content":"    }"},{"lineNumber":12,"author":{"gitId":"xiinweii98"},"content":""},{"lineNumber":13,"author":{"gitId":"xiinweii98"},"content":"    @Override"},{"lineNumber":14,"author":{"gitId":"xiinweii98"},"content":"    public String getMessage() {"},{"lineNumber":15,"author":{"gitId":"xiinweii98"},"content":"        return \"OOPS! \" + super.getMessage();"},{"lineNumber":16,"author":{"gitId":"xiinweii98"},"content":"    }"},{"lineNumber":17,"author":{"gitId":"xiinweii98"},"content":"}"}],"authorContributionMap":{"xiinweii98":17}},{"path":"src/main/java/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"xiinweii98"},"content":"import java.time.LocalDate;"},{"lineNumber":2,"author":{"gitId":"xiinweii98"},"content":"import java.time.format.DateTimeFormatter;"},{"lineNumber":3,"author":{"gitId":"xiinweii98"},"content":""},{"lineNumber":4,"author":{"gitId":"xiinweii98"},"content":"/**"},{"lineNumber":5,"author":{"gitId":"xiinweii98"},"content":" * An Event type of Task."},{"lineNumber":6,"author":{"gitId":"xiinweii98"},"content":" * Inherits from the superclass Task."},{"lineNumber":7,"author":{"gitId":"xiinweii98"},"content":" */"},{"lineNumber":8,"author":{"gitId":"xiinweii98"},"content":"public class Event extends Task {"},{"lineNumber":9,"author":{"gitId":"xiinweii98"},"content":"    private LocalDate at;"},{"lineNumber":10,"author":{"gitId":"xiinweii98"},"content":""},{"lineNumber":11,"author":{"gitId":"xiinweii98"},"content":"    /**"},{"lineNumber":12,"author":{"gitId":"xiinweii98"},"content":"     * Constructor to create an Event Task."},{"lineNumber":13,"author":{"gitId":"xiinweii98"},"content":"     * Keeps track of the date the event is at."},{"lineNumber":14,"author":{"gitId":"xiinweii98"},"content":"     * @param name Name of the Event."},{"lineNumber":15,"author":{"gitId":"xiinweii98"},"content":"     * @param at Date of the Event."},{"lineNumber":16,"author":{"gitId":"xiinweii98"},"content":"     */"},{"lineNumber":17,"author":{"gitId":"xiinweii98"},"content":"    public Event(String name, LocalDate at) {"},{"lineNumber":18,"author":{"gitId":"xiinweii98"},"content":"        super(name);"},{"lineNumber":19,"author":{"gitId":"xiinweii98"},"content":"        this.at \u003d at;"},{"lineNumber":20,"author":{"gitId":"xiinweii98"},"content":"    }"},{"lineNumber":21,"author":{"gitId":"xiinweii98"},"content":""},{"lineNumber":22,"author":{"gitId":"xiinweii98"},"content":"    /**"},{"lineNumber":23,"author":{"gitId":"xiinweii98"},"content":"     * Constructor used when retrieving data from hard drive."},{"lineNumber":24,"author":{"gitId":"xiinweii98"},"content":"     * @param name Name of the Event."},{"lineNumber":25,"author":{"gitId":"xiinweii98"},"content":"     * @param at Date of the Event."},{"lineNumber":26,"author":{"gitId":"xiinweii98"},"content":"     * @param done If the Event is done or not."},{"lineNumber":27,"author":{"gitId":"xiinweii98"},"content":"     */"},{"lineNumber":28,"author":{"gitId":"xiinweii98"},"content":"    public Event(String name, LocalDate at, boolean done) {"},{"lineNumber":29,"author":{"gitId":"xiinweii98"},"content":"        super(name, done);"},{"lineNumber":30,"author":{"gitId":"xiinweii98"},"content":"        this.at \u003d at;"},{"lineNumber":31,"author":{"gitId":"xiinweii98"},"content":"    }"},{"lineNumber":32,"author":{"gitId":"xiinweii98"},"content":""},{"lineNumber":33,"author":{"gitId":"xiinweii98"},"content":"    /**"},{"lineNumber":34,"author":{"gitId":"xiinweii98"},"content":"     * Getter for the date of the Event."},{"lineNumber":35,"author":{"gitId":"xiinweii98"},"content":"     * @return The date of the Event."},{"lineNumber":36,"author":{"gitId":"xiinweii98"},"content":"     */"},{"lineNumber":37,"author":{"gitId":"xiinweii98"},"content":"    public LocalDate getAt() {"},{"lineNumber":38,"author":{"gitId":"xiinweii98"},"content":"        return this.at;"},{"lineNumber":39,"author":{"gitId":"xiinweii98"},"content":"    }"},{"lineNumber":40,"author":{"gitId":"xiinweii98"},"content":""},{"lineNumber":41,"author":{"gitId":"xiinweii98"},"content":"    @Override"},{"lineNumber":42,"author":{"gitId":"xiinweii98"},"content":"    public String getStatus() {"},{"lineNumber":43,"author":{"gitId":"xiinweii98"},"content":"        return \"[E]\" + super.getStatus() + \" (at: \" + this.at.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\")) + \")\";"},{"lineNumber":44,"author":{"gitId":"xiinweii98"},"content":"    }"},{"lineNumber":45,"author":{"gitId":"xiinweii98"},"content":"}"}],"authorContributionMap":{"xiinweii98":45}},{"path":"src/main/java/ExitCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"xiinweii98"},"content":"/**"},{"lineNumber":2,"author":{"gitId":"xiinweii98"},"content":" * Command to stop the Duke bot."},{"lineNumber":3,"author":{"gitId":"xiinweii98"},"content":" * Inherits from the superclass Command."},{"lineNumber":4,"author":{"gitId":"xiinweii98"},"content":" */"},{"lineNumber":5,"author":{"gitId":"xiinweii98"},"content":"public class ExitCommand extends Command {"},{"lineNumber":6,"author":{"gitId":"xiinweii98"},"content":"    /**"},{"lineNumber":7,"author":{"gitId":"xiinweii98"},"content":"     * Mark this command as an exit command."},{"lineNumber":8,"author":{"gitId":"xiinweii98"},"content":"     * @param taskList TaskList that contains all tasks at hand."},{"lineNumber":9,"author":{"gitId":"xiinweii98"},"content":"     * @param ui Ui that deals with interaction with the user."},{"lineNumber":10,"author":{"gitId":"xiinweii98"},"content":"     * @param storage Storage that deals with storing TaskList into hard drive."},{"lineNumber":11,"author":{"gitId":"xiinweii98"},"content":"     */"},{"lineNumber":12,"author":{"gitId":"xiinweii98"},"content":"    public String execute(TaskList taskList, Ui ui, Storage storage) {"},{"lineNumber":13,"author":{"gitId":"xiinweii98"},"content":"        super.toggleExit();"},{"lineNumber":14,"author":{"gitId":"xiinweii98"},"content":"        return \"Exiting.\";"},{"lineNumber":15,"author":{"gitId":"xiinweii98"},"content":"    }"},{"lineNumber":16,"author":{"gitId":"xiinweii98"},"content":"}"}],"authorContributionMap":{"xiinweii98":16}},{"path":"src/main/java/FindCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"xiinweii98"},"content":"/**"},{"lineNumber":2,"author":{"gitId":"xiinweii98"},"content":" * Command to find a Task based on a keyword."},{"lineNumber":3,"author":{"gitId":"xiinweii98"},"content":" */"},{"lineNumber":4,"author":{"gitId":"xiinweii98"},"content":"public class FindCommand extends Command {"},{"lineNumber":5,"author":{"gitId":"xiinweii98"},"content":"    private final String[] keywords;"},{"lineNumber":6,"author":{"gitId":"xiinweii98"},"content":""},{"lineNumber":7,"author":{"gitId":"xiinweii98"},"content":"    /**"},{"lineNumber":8,"author":{"gitId":"xiinweii98"},"content":"     * Constructor to keep track of the keyword used."},{"lineNumber":9,"author":{"gitId":"xiinweii98"},"content":"     * @param input Used to find a task."},{"lineNumber":10,"author":{"gitId":"xiinweii98"},"content":"     */"},{"lineNumber":11,"author":{"gitId":"xiinweii98"},"content":"    public FindCommand(String ... input) {"},{"lineNumber":12,"author":{"gitId":"xiinweii98"},"content":"        this.keywords \u003d input;"},{"lineNumber":13,"author":{"gitId":"xiinweii98"},"content":"    }"},{"lineNumber":14,"author":{"gitId":"xiinweii98"},"content":""},{"lineNumber":15,"author":{"gitId":"xiinweii98"},"content":"    /**"},{"lineNumber":16,"author":{"gitId":"xiinweii98"},"content":"     * Goes through the TaskList to search for related Tasks."},{"lineNumber":17,"author":{"gitId":"xiinweii98"},"content":"     * @param taskList TaskList that contains all tasks at hand."},{"lineNumber":18,"author":{"gitId":"xiinweii98"},"content":"     * @param ui Ui that deals with interaction with the user."},{"lineNumber":19,"author":{"gitId":"xiinweii98"},"content":"     * @param storage Storage that deals with storing TaskList into hard drive."},{"lineNumber":20,"author":{"gitId":"xiinweii98"},"content":"     */"},{"lineNumber":21,"author":{"gitId":"xiinweii98"},"content":"    public String execute(TaskList taskList, Ui ui, Storage storage) {"},{"lineNumber":22,"author":{"gitId":"xiinweii98"},"content":"        return ui.printSomeTasks(taskList.findTasks(this.keywords));"},{"lineNumber":23,"author":{"gitId":"xiinweii98"},"content":"    }"},{"lineNumber":24,"author":{"gitId":"xiinweii98"},"content":"}"}],"authorContributionMap":{"xiinweii98":24}},{"path":"src/main/java/ListCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"xiinweii98"},"content":"/**"},{"lineNumber":2,"author":{"gitId":"xiinweii98"},"content":" * Command to list out all the tasks at hand."},{"lineNumber":3,"author":{"gitId":"xiinweii98"},"content":" * Inherits from the superclass Command."},{"lineNumber":4,"author":{"gitId":"xiinweii98"},"content":" */"},{"lineNumber":5,"author":{"gitId":"xiinweii98"},"content":"public class ListCommand extends Command {"},{"lineNumber":6,"author":{"gitId":"xiinweii98"},"content":"    /**"},{"lineNumber":7,"author":{"gitId":"xiinweii98"},"content":"     * Uses the Ui class to print out all the tasks that TaskList is keeping track of."},{"lineNumber":8,"author":{"gitId":"xiinweii98"},"content":"     * @param taskList TaskList that contains all tasks at hand."},{"lineNumber":9,"author":{"gitId":"xiinweii98"},"content":"     * @param ui Ui that deals with interaction with the user."},{"lineNumber":10,"author":{"gitId":"xiinweii98"},"content":"     * @param storage Storage that deals with storing TaskList into hard drive."},{"lineNumber":11,"author":{"gitId":"xiinweii98"},"content":"     */"},{"lineNumber":12,"author":{"gitId":"xiinweii98"},"content":"    public String execute(TaskList taskList, Ui ui, Storage storage) {"},{"lineNumber":13,"author":{"gitId":"xiinweii98"},"content":"        return ui.printTasks(taskList);"},{"lineNumber":14,"author":{"gitId":"xiinweii98"},"content":"    }"},{"lineNumber":15,"author":{"gitId":"xiinweii98"},"content":"}"}],"authorContributionMap":{"xiinweii98":15}},{"path":"src/main/java/Main.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"xiinweii98"},"content":"import java.io.IOException;"},{"lineNumber":2,"author":{"gitId":"xiinweii98"},"content":""},{"lineNumber":3,"author":{"gitId":"xiinweii98"},"content":"import javafx.application.Application;"},{"lineNumber":4,"author":{"gitId":"xiinweii98"},"content":"import javafx.fxml.FXMLLoader;"},{"lineNumber":5,"author":{"gitId":"xiinweii98"},"content":"import javafx.scene.Scene;"},{"lineNumber":6,"author":{"gitId":"xiinweii98"},"content":"import javafx.scene.layout.AnchorPane;"},{"lineNumber":7,"author":{"gitId":"xiinweii98"},"content":"import javafx.stage.Stage;"},{"lineNumber":8,"author":{"gitId":"xiinweii98"},"content":""},{"lineNumber":9,"author":{"gitId":"xiinweii98"},"content":"/**"},{"lineNumber":10,"author":{"gitId":"xiinweii98"},"content":" * A GUI for Duke using FXML."},{"lineNumber":11,"author":{"gitId":"xiinweii98"},"content":" */"},{"lineNumber":12,"author":{"gitId":"xiinweii98"},"content":"public class Main extends Application {"},{"lineNumber":13,"author":{"gitId":"xiinweii98"},"content":""},{"lineNumber":14,"author":{"gitId":"xiinweii98"},"content":"    private Duke duke \u003d new Duke(\"data/savedTasks.txt\");"},{"lineNumber":15,"author":{"gitId":"xiinweii98"},"content":""},{"lineNumber":16,"author":{"gitId":"xiinweii98"},"content":"    @Override"},{"lineNumber":17,"author":{"gitId":"xiinweii98"},"content":"    public void start(Stage stage) {"},{"lineNumber":18,"author":{"gitId":"xiinweii98"},"content":"        try {"},{"lineNumber":19,"author":{"gitId":"xiinweii98"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(Main.class.getResource(\"/view/MainWindow.fxml\"));"},{"lineNumber":20,"author":{"gitId":"xiinweii98"},"content":"            AnchorPane ap \u003d fxmlLoader.load();"},{"lineNumber":21,"author":{"gitId":"xiinweii98"},"content":"            Scene scene \u003d new Scene(ap);"},{"lineNumber":22,"author":{"gitId":"xiinweii98"},"content":"            stage.setScene(scene);"},{"lineNumber":23,"author":{"gitId":"xiinweii98"},"content":"            fxmlLoader.\u003cMainWindow\u003egetController().setDuke(duke);"},{"lineNumber":24,"author":{"gitId":"xiinweii98"},"content":"            stage.show();"},{"lineNumber":25,"author":{"gitId":"xiinweii98"},"content":"        } catch (IOException e) {"},{"lineNumber":26,"author":{"gitId":"xiinweii98"},"content":"            e.printStackTrace();"},{"lineNumber":27,"author":{"gitId":"xiinweii98"},"content":"        }"},{"lineNumber":28,"author":{"gitId":"xiinweii98"},"content":"    }"},{"lineNumber":29,"author":{"gitId":"xiinweii98"},"content":"}"}],"authorContributionMap":{"xiinweii98":29}},{"path":"src/main/java/MainWindow.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"xiinweii98"},"content":"import javafx.fxml.FXML;"},{"lineNumber":2,"author":{"gitId":"xiinweii98"},"content":"import javafx.scene.control.Button;"},{"lineNumber":3,"author":{"gitId":"xiinweii98"},"content":"import javafx.scene.control.ScrollPane;"},{"lineNumber":4,"author":{"gitId":"xiinweii98"},"content":"import javafx.scene.control.TextField;"},{"lineNumber":5,"author":{"gitId":"xiinweii98"},"content":"import javafx.scene.image.Image;"},{"lineNumber":6,"author":{"gitId":"xiinweii98"},"content":"import javafx.scene.layout.AnchorPane;"},{"lineNumber":7,"author":{"gitId":"xiinweii98"},"content":"import javafx.scene.layout.VBox;"},{"lineNumber":8,"author":{"gitId":"xiinweii98"},"content":"/**"},{"lineNumber":9,"author":{"gitId":"xiinweii98"},"content":" * Controller for MainWindow. Provides the layout for the other controls."},{"lineNumber":10,"author":{"gitId":"xiinweii98"},"content":" */"},{"lineNumber":11,"author":{"gitId":"xiinweii98"},"content":"public class MainWindow extends AnchorPane {"},{"lineNumber":12,"author":{"gitId":"xiinweii98"},"content":"    @FXML"},{"lineNumber":13,"author":{"gitId":"xiinweii98"},"content":"    private ScrollPane scrollPane;"},{"lineNumber":14,"author":{"gitId":"xiinweii98"},"content":"    @FXML"},{"lineNumber":15,"author":{"gitId":"xiinweii98"},"content":"    private VBox dialogContainer;"},{"lineNumber":16,"author":{"gitId":"xiinweii98"},"content":"    @FXML"},{"lineNumber":17,"author":{"gitId":"xiinweii98"},"content":"    private TextField userInput;"},{"lineNumber":18,"author":{"gitId":"xiinweii98"},"content":"    @FXML"},{"lineNumber":19,"author":{"gitId":"xiinweii98"},"content":"    private Button sendButton;"},{"lineNumber":20,"author":{"gitId":"xiinweii98"},"content":""},{"lineNumber":21,"author":{"gitId":"xiinweii98"},"content":"    private Duke duke;"},{"lineNumber":22,"author":{"gitId":"xiinweii98"},"content":""},{"lineNumber":23,"author":{"gitId":"xiinweii98"},"content":"    private Image userImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/User.png\"));"},{"lineNumber":24,"author":{"gitId":"xiinweii98"},"content":"    private Image dukeImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/Duke.png\"));"},{"lineNumber":25,"author":{"gitId":"xiinweii98"},"content":""},{"lineNumber":26,"author":{"gitId":"xiinweii98"},"content":"    @FXML"},{"lineNumber":27,"author":{"gitId":"xiinweii98"},"content":"    public void initialize() {"},{"lineNumber":28,"author":{"gitId":"xiinweii98"},"content":"        scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());"},{"lineNumber":29,"author":{"gitId":"xiinweii98"},"content":"    }"},{"lineNumber":30,"author":{"gitId":"xiinweii98"},"content":""},{"lineNumber":31,"author":{"gitId":"xiinweii98"},"content":"    public void setDuke(Duke d) {"},{"lineNumber":32,"author":{"gitId":"xiinweii98"},"content":"        duke \u003d d;"},{"lineNumber":33,"author":{"gitId":"xiinweii98"},"content":"    }"},{"lineNumber":34,"author":{"gitId":"xiinweii98"},"content":""},{"lineNumber":35,"author":{"gitId":"xiinweii98"},"content":"    /**"},{"lineNumber":36,"author":{"gitId":"xiinweii98"},"content":"     * Creates two dialog boxes, one echoing user input and the other containing Duke\u0027s reply and then appends them to"},{"lineNumber":37,"author":{"gitId":"xiinweii98"},"content":"     * the dialog container. Clears the user input after processing."},{"lineNumber":38,"author":{"gitId":"xiinweii98"},"content":"     */"},{"lineNumber":39,"author":{"gitId":"xiinweii98"},"content":"    @FXML"},{"lineNumber":40,"author":{"gitId":"xiinweii98"},"content":"    private void handleUserInput() {"},{"lineNumber":41,"author":{"gitId":"xiinweii98"},"content":"        String input \u003d userInput.getText();"},{"lineNumber":42,"author":{"gitId":"xiinweii98"},"content":"        String response \u003d duke.getResponse(input);"},{"lineNumber":43,"author":{"gitId":"xiinweii98"},"content":"        dialogContainer.getChildren().addAll("},{"lineNumber":44,"author":{"gitId":"xiinweii98"},"content":"                SampleDialogBox.getUserDialog(input, userImage),"},{"lineNumber":45,"author":{"gitId":"xiinweii98"},"content":"                SampleDialogBox.getDukeDialog(response, dukeImage)"},{"lineNumber":46,"author":{"gitId":"xiinweii98"},"content":"        );"},{"lineNumber":47,"author":{"gitId":"xiinweii98"},"content":"        userInput.clear();"},{"lineNumber":48,"author":{"gitId":"xiinweii98"},"content":"    }"},{"lineNumber":49,"author":{"gitId":"xiinweii98"},"content":"}"}],"authorContributionMap":{"xiinweii98":49}},{"path":"src/main/java/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"xiinweii98"},"content":"import java.time.LocalDate;"},{"lineNumber":2,"author":{"gitId":"xiinweii98"},"content":""},{"lineNumber":3,"author":{"gitId":"xiinweii98"},"content":"/**"},{"lineNumber":4,"author":{"gitId":"xiinweii98"},"content":" * Parse the input from user and make sense of what the user is trying to do."},{"lineNumber":5,"author":{"gitId":"xiinweii98"},"content":" */"},{"lineNumber":6,"author":{"gitId":"xiinweii98"},"content":"public class Parser {"},{"lineNumber":7,"author":{"gitId":"xiinweii98"},"content":"    /**"},{"lineNumber":8,"author":{"gitId":"xiinweii98"},"content":"     * Takes in a line of input from user and makes sense of what the command is."},{"lineNumber":9,"author":{"gitId":"xiinweii98"},"content":"     * If it is a valid command, create the corresponding command and return it."},{"lineNumber":10,"author":{"gitId":"xiinweii98"},"content":"     * Else, throw a Duke exception to inform user of an invalid command."},{"lineNumber":11,"author":{"gitId":"xiinweii98"},"content":"     * @param fullCommand The line of command that user input."},{"lineNumber":12,"author":{"gitId":"xiinweii98"},"content":"     * @return A corresponding command if valid."},{"lineNumber":13,"author":{"gitId":"xiinweii98"},"content":"     * @throws DukeException If user input an invalid command."},{"lineNumber":14,"author":{"gitId":"xiinweii98"},"content":"     */"},{"lineNumber":15,"author":{"gitId":"xiinweii98"},"content":"    public static Command parseCommand(String fullCommand) throws DukeException {"},{"lineNumber":16,"author":{"gitId":"xiinweii98"},"content":"        String[] first \u003d fullCommand.split(\" \", 2);"},{"lineNumber":17,"author":{"gitId":"xiinweii98"},"content":"        switch (first[0]) {"},{"lineNumber":18,"author":{"gitId":"xiinweii98"},"content":"        case (\"bye\"):"},{"lineNumber":19,"author":{"gitId":"xiinweii98"},"content":"            return new ExitCommand();"},{"lineNumber":20,"author":{"gitId":"xiinweii98"},"content":"        case (\"list\"):"},{"lineNumber":21,"author":{"gitId":"xiinweii98"},"content":"            return new ListCommand();"},{"lineNumber":22,"author":{"gitId":"xiinweii98"},"content":"        case (\"todo\"):"},{"lineNumber":23,"author":{"gitId":"xiinweii98"},"content":"            return new AddCommand(new Todo(first[1]));"},{"lineNumber":24,"author":{"gitId":"xiinweii98"},"content":"        case (\"event\"): {"},{"lineNumber":25,"author":{"gitId":"xiinweii98"},"content":"            String[] second \u003d first[1].split(\"/at\", 2);"},{"lineNumber":26,"author":{"gitId":"xiinweii98"},"content":"            return new AddCommand(new Event(second[0].trim(), LocalDate.parse(second[1].trim())));"},{"lineNumber":27,"author":{"gitId":"xiinweii98"},"content":"        }"},{"lineNumber":28,"author":{"gitId":"xiinweii98"},"content":"        case (\"deadline\"): {"},{"lineNumber":29,"author":{"gitId":"xiinweii98"},"content":"            String[] second \u003d first[1].split(\"/by\", 2);"},{"lineNumber":30,"author":{"gitId":"xiinweii98"},"content":"            return new AddCommand(new Deadline(second[0].trim(), LocalDate.parse(second[1].trim())));"},{"lineNumber":31,"author":{"gitId":"xiinweii98"},"content":"        }"},{"lineNumber":32,"author":{"gitId":"xiinweii98"},"content":"        case (\"done\"):"},{"lineNumber":33,"author":{"gitId":"xiinweii98"},"content":"            return new DoneCommand(Integer.parseInt(first[1]));"},{"lineNumber":34,"author":{"gitId":"xiinweii98"},"content":"        case (\"delete\"):"},{"lineNumber":35,"author":{"gitId":"xiinweii98"},"content":"            return new DeleteCommand(Integer.parseInt(first[1]));"},{"lineNumber":36,"author":{"gitId":"xiinweii98"},"content":"        case (\"find\"):"},{"lineNumber":37,"author":{"gitId":"xiinweii98"},"content":"            return new FindCommand(first[1].split(\" \"));"},{"lineNumber":38,"author":{"gitId":"xiinweii98"},"content":"        default:"},{"lineNumber":39,"author":{"gitId":"xiinweii98"},"content":"            throw new DukeException(\"Unknown command received.\");"},{"lineNumber":40,"author":{"gitId":"xiinweii98"},"content":"        }"},{"lineNumber":41,"author":{"gitId":"xiinweii98"},"content":"    }"},{"lineNumber":42,"author":{"gitId":"xiinweii98"},"content":"}"}],"authorContributionMap":{"xiinweii98":42}},{"path":"src/main/java/SampleDialogBox.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"xiinweii98"},"content":"import java.io.IOException;"},{"lineNumber":2,"author":{"gitId":"xiinweii98"},"content":"import java.util.Collections;"},{"lineNumber":3,"author":{"gitId":"xiinweii98"},"content":""},{"lineNumber":4,"author":{"gitId":"xiinweii98"},"content":"import javafx.collections.FXCollections;"},{"lineNumber":5,"author":{"gitId":"xiinweii98"},"content":"import javafx.collections.ObservableList;"},{"lineNumber":6,"author":{"gitId":"xiinweii98"},"content":"import javafx.fxml.FXML;"},{"lineNumber":7,"author":{"gitId":"xiinweii98"},"content":"import javafx.fxml.FXMLLoader;"},{"lineNumber":8,"author":{"gitId":"xiinweii98"},"content":"import javafx.geometry.Pos;"},{"lineNumber":9,"author":{"gitId":"xiinweii98"},"content":"import javafx.scene.Node;"},{"lineNumber":10,"author":{"gitId":"xiinweii98"},"content":"import javafx.scene.control.Label;"},{"lineNumber":11,"author":{"gitId":"xiinweii98"},"content":"import javafx.scene.image.Image;"},{"lineNumber":12,"author":{"gitId":"xiinweii98"},"content":"import javafx.scene.image.ImageView;"},{"lineNumber":13,"author":{"gitId":"xiinweii98"},"content":"import javafx.scene.layout.HBox;"},{"lineNumber":14,"author":{"gitId":"xiinweii98"},"content":""},{"lineNumber":15,"author":{"gitId":"xiinweii98"},"content":"/**"},{"lineNumber":16,"author":{"gitId":"xiinweii98"},"content":" * An example of a custom control using FXML."},{"lineNumber":17,"author":{"gitId":"xiinweii98"},"content":" * This control represents a dialog box consisting of an ImageView to represent the speaker\u0027s face and a label"},{"lineNumber":18,"author":{"gitId":"xiinweii98"},"content":" * containing text from the speaker."},{"lineNumber":19,"author":{"gitId":"xiinweii98"},"content":" */"},{"lineNumber":20,"author":{"gitId":"xiinweii98"},"content":"public class SampleDialogBox extends HBox {"},{"lineNumber":21,"author":{"gitId":"xiinweii98"},"content":"    @FXML"},{"lineNumber":22,"author":{"gitId":"xiinweii98"},"content":"    private Label dialog;"},{"lineNumber":23,"author":{"gitId":"xiinweii98"},"content":"    @FXML"},{"lineNumber":24,"author":{"gitId":"xiinweii98"},"content":"    private ImageView displayPicture;"},{"lineNumber":25,"author":{"gitId":"xiinweii98"},"content":""},{"lineNumber":26,"author":{"gitId":"xiinweii98"},"content":"    private SampleDialogBox(String text, Image img) {"},{"lineNumber":27,"author":{"gitId":"xiinweii98"},"content":"        try {"},{"lineNumber":28,"author":{"gitId":"xiinweii98"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(\"/view/DialogBox.fxml\"));"},{"lineNumber":29,"author":{"gitId":"xiinweii98"},"content":"            fxmlLoader.setController(this);"},{"lineNumber":30,"author":{"gitId":"xiinweii98"},"content":"            fxmlLoader.setRoot(this);"},{"lineNumber":31,"author":{"gitId":"xiinweii98"},"content":"            fxmlLoader.load();"},{"lineNumber":32,"author":{"gitId":"xiinweii98"},"content":"        } catch (IOException e) {"},{"lineNumber":33,"author":{"gitId":"xiinweii98"},"content":"            e.printStackTrace();"},{"lineNumber":34,"author":{"gitId":"xiinweii98"},"content":"        }"},{"lineNumber":35,"author":{"gitId":"xiinweii98"},"content":""},{"lineNumber":36,"author":{"gitId":"xiinweii98"},"content":"        dialog.setText(text);"},{"lineNumber":37,"author":{"gitId":"xiinweii98"},"content":"        displayPicture.setImage(img);"},{"lineNumber":38,"author":{"gitId":"xiinweii98"},"content":"    }"},{"lineNumber":39,"author":{"gitId":"xiinweii98"},"content":""},{"lineNumber":40,"author":{"gitId":"xiinweii98"},"content":"    /**"},{"lineNumber":41,"author":{"gitId":"xiinweii98"},"content":"     * Flips the dialog box such that the ImageView is on the left and text on the right."},{"lineNumber":42,"author":{"gitId":"xiinweii98"},"content":"     */"},{"lineNumber":43,"author":{"gitId":"xiinweii98"},"content":"    private void flip() {"},{"lineNumber":44,"author":{"gitId":"xiinweii98"},"content":"        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());"},{"lineNumber":45,"author":{"gitId":"xiinweii98"},"content":"        Collections.reverse(tmp);"},{"lineNumber":46,"author":{"gitId":"xiinweii98"},"content":"        getChildren().setAll(tmp);"},{"lineNumber":47,"author":{"gitId":"xiinweii98"},"content":"        setAlignment(Pos.TOP_LEFT);"},{"lineNumber":48,"author":{"gitId":"xiinweii98"},"content":"    }"},{"lineNumber":49,"author":{"gitId":"xiinweii98"},"content":""},{"lineNumber":50,"author":{"gitId":"xiinweii98"},"content":"    public static SampleDialogBox getUserDialog(String text, Image img) {"},{"lineNumber":51,"author":{"gitId":"xiinweii98"},"content":"        return new SampleDialogBox(text, img);"},{"lineNumber":52,"author":{"gitId":"xiinweii98"},"content":"    }"},{"lineNumber":53,"author":{"gitId":"xiinweii98"},"content":""},{"lineNumber":54,"author":{"gitId":"xiinweii98"},"content":"    public static SampleDialogBox getDukeDialog(String text, Image img) {"},{"lineNumber":55,"author":{"gitId":"xiinweii98"},"content":"        var db \u003d new SampleDialogBox(text, img);"},{"lineNumber":56,"author":{"gitId":"xiinweii98"},"content":"        db.flip();"},{"lineNumber":57,"author":{"gitId":"xiinweii98"},"content":"        return db;"},{"lineNumber":58,"author":{"gitId":"xiinweii98"},"content":"    }"},{"lineNumber":59,"author":{"gitId":"xiinweii98"},"content":"}"}],"authorContributionMap":{"xiinweii98":59}},{"path":"src/main/java/SampleLauncher.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"xiinweii98"},"content":"import javafx.application.Application;"},{"lineNumber":2,"author":{"gitId":"xiinweii98"},"content":""},{"lineNumber":3,"author":{"gitId":"xiinweii98"},"content":"public class SampleLauncher {"},{"lineNumber":4,"author":{"gitId":"xiinweii98"},"content":"    public static void main(String[] args) {"},{"lineNumber":5,"author":{"gitId":"xiinweii98"},"content":"        Application.launch(Main.class, args);"},{"lineNumber":6,"author":{"gitId":"xiinweii98"},"content":"    }"},{"lineNumber":7,"author":{"gitId":"xiinweii98"},"content":"}"}],"authorContributionMap":{"xiinweii98":7}},{"path":"src/main/java/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"xiinweii98"},"content":"import java.io.File;"},{"lineNumber":2,"author":{"gitId":"xiinweii98"},"content":"import java.io.FileNotFoundException;"},{"lineNumber":3,"author":{"gitId":"xiinweii98"},"content":"import java.io.FileWriter;"},{"lineNumber":4,"author":{"gitId":"xiinweii98"},"content":"import java.io.IOException;"},{"lineNumber":5,"author":{"gitId":"xiinweii98"},"content":"import java.time.LocalDate;"},{"lineNumber":6,"author":{"gitId":"xiinweii98"},"content":"import java.util.ArrayList;"},{"lineNumber":7,"author":{"gitId":"xiinweii98"},"content":"import java.util.Scanner;"},{"lineNumber":8,"author":{"gitId":"xiinweii98"},"content":""},{"lineNumber":9,"author":{"gitId":"xiinweii98"},"content":"/**"},{"lineNumber":10,"author":{"gitId":"xiinweii98"},"content":" * Deals with storing and retrieving tasks from a saved file in the hard drive."},{"lineNumber":11,"author":{"gitId":"xiinweii98"},"content":" */"},{"lineNumber":12,"author":{"gitId":"xiinweii98"},"content":"public class Storage {"},{"lineNumber":13,"author":{"gitId":"xiinweii98"},"content":"    private final File file;"},{"lineNumber":14,"author":{"gitId":"xiinweii98"},"content":""},{"lineNumber":15,"author":{"gitId":"xiinweii98"},"content":"    /**"},{"lineNumber":16,"author":{"gitId":"xiinweii98"},"content":"     * Constructor to create a saved file in the hard drive if it does not already exist."},{"lineNumber":17,"author":{"gitId":"xiinweii98"},"content":"     * @param path The path where the saved file is located."},{"lineNumber":18,"author":{"gitId":"xiinweii98"},"content":"     * @throws IOException If error occur when creating the new file."},{"lineNumber":19,"author":{"gitId":"xiinweii98"},"content":"     * @throws DukeException If error occur when creating the folder/file."},{"lineNumber":20,"author":{"gitId":"xiinweii98"},"content":"     */"},{"lineNumber":21,"author":{"gitId":"xiinweii98"},"content":"    public Storage(String path) throws IOException, DukeException {"},{"lineNumber":22,"author":{"gitId":"xiinweii98"},"content":"        String[] splits \u003d path.split(\"/\");"},{"lineNumber":23,"author":{"gitId":"xiinweii98"},"content":"        File dir \u003d new File(splits[0]);"},{"lineNumber":24,"author":{"gitId":"xiinweii98"},"content":"        if (!dir.exists()) {"},{"lineNumber":25,"author":{"gitId":"xiinweii98"},"content":"            if (!dir.mkdir()) {"},{"lineNumber":26,"author":{"gitId":"xiinweii98"},"content":"                throw new DukeException(\"Error while creating ./data folder.\");"},{"lineNumber":27,"author":{"gitId":"xiinweii98"},"content":"            }"},{"lineNumber":28,"author":{"gitId":"xiinweii98"},"content":"        }"},{"lineNumber":29,"author":{"gitId":"xiinweii98"},"content":""},{"lineNumber":30,"author":{"gitId":"xiinweii98"},"content":"        File savedTasks \u003d new File(path);"},{"lineNumber":31,"author":{"gitId":"xiinweii98"},"content":"        if (!savedTasks.exists()) {"},{"lineNumber":32,"author":{"gitId":"xiinweii98"},"content":"            if (!savedTasks.createNewFile()) {"},{"lineNumber":33,"author":{"gitId":"xiinweii98"},"content":"                throw new DukeException(\"Error while creating savedTask.txt file.\");"},{"lineNumber":34,"author":{"gitId":"xiinweii98"},"content":"            }"},{"lineNumber":35,"author":{"gitId":"xiinweii98"},"content":"        }"},{"lineNumber":36,"author":{"gitId":"xiinweii98"},"content":""},{"lineNumber":37,"author":{"gitId":"xiinweii98"},"content":"        this.file \u003d savedTasks;"},{"lineNumber":38,"author":{"gitId":"xiinweii98"},"content":"    }"},{"lineNumber":39,"author":{"gitId":"xiinweii98"},"content":""},{"lineNumber":40,"author":{"gitId":"xiinweii98"},"content":"    /**"},{"lineNumber":41,"author":{"gitId":"xiinweii98"},"content":"     * Loads in the data from the saved file."},{"lineNumber":42,"author":{"gitId":"xiinweii98"},"content":"     * @return An ArrayList of Tasks retrieved from the saved file."},{"lineNumber":43,"author":{"gitId":"xiinweii98"},"content":"     * @throws FileNotFoundException If the saved file cannot be found."},{"lineNumber":44,"author":{"gitId":"xiinweii98"},"content":"     * @throws DukeException If the saved file contains data that cannot be read."},{"lineNumber":45,"author":{"gitId":"xiinweii98"},"content":"     */"},{"lineNumber":46,"author":{"gitId":"xiinweii98"},"content":"    public ArrayList\u003cTask\u003e load() throws FileNotFoundException, DukeException {"},{"lineNumber":47,"author":{"gitId":"xiinweii98"},"content":"        Scanner sc \u003d new Scanner(this.file);"},{"lineNumber":48,"author":{"gitId":"xiinweii98"},"content":"        ArrayList\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();"},{"lineNumber":49,"author":{"gitId":"xiinweii98"},"content":"        while (sc.hasNext()) {"},{"lineNumber":50,"author":{"gitId":"xiinweii98"},"content":"            String current \u003d sc.nextLine();"},{"lineNumber":51,"author":{"gitId":"xiinweii98"},"content":"            String[] splits \u003d current.split(\" \", 3);"},{"lineNumber":52,"author":{"gitId":"xiinweii98"},"content":"            switch (splits[0]) {"},{"lineNumber":53,"author":{"gitId":"xiinweii98"},"content":"            case \"T\": {"},{"lineNumber":54,"author":{"gitId":"xiinweii98"},"content":"                Task toAdd \u003d new Todo(splits[2], (splits[1].equals(\"1\")));"},{"lineNumber":55,"author":{"gitId":"xiinweii98"},"content":"                tasks.add(toAdd);"},{"lineNumber":56,"author":{"gitId":"xiinweii98"},"content":"                break;"},{"lineNumber":57,"author":{"gitId":"xiinweii98"},"content":"            }"},{"lineNumber":58,"author":{"gitId":"xiinweii98"},"content":"            case \"E\": {"},{"lineNumber":59,"author":{"gitId":"xiinweii98"},"content":"                Task toAdd \u003d new Event(splits[2], LocalDate.parse(sc.nextLine()), splits[1].equals(\"1\"));"},{"lineNumber":60,"author":{"gitId":"xiinweii98"},"content":"                tasks.add(toAdd);"},{"lineNumber":61,"author":{"gitId":"xiinweii98"},"content":"                break;"},{"lineNumber":62,"author":{"gitId":"xiinweii98"},"content":"            }"},{"lineNumber":63,"author":{"gitId":"xiinweii98"},"content":"            case \"D\": {"},{"lineNumber":64,"author":{"gitId":"xiinweii98"},"content":"                Task toAdd \u003d new Deadline(splits[2], LocalDate.parse(sc.nextLine()), splits[1].equals(\"1\"));"},{"lineNumber":65,"author":{"gitId":"xiinweii98"},"content":"                tasks.add(toAdd);"},{"lineNumber":66,"author":{"gitId":"xiinweii98"},"content":"                break;"},{"lineNumber":67,"author":{"gitId":"xiinweii98"},"content":"            }"},{"lineNumber":68,"author":{"gitId":"xiinweii98"},"content":"            default: {"},{"lineNumber":69,"author":{"gitId":"xiinweii98"},"content":"                throw new DukeException(\"Error occurred when reading data from storage file.\\n\""},{"lineNumber":70,"author":{"gitId":"xiinweii98"},"content":"                        + \"Therefore, creating a new task list.\");"},{"lineNumber":71,"author":{"gitId":"xiinweii98"},"content":"            }"},{"lineNumber":72,"author":{"gitId":"xiinweii98"},"content":"            }"},{"lineNumber":73,"author":{"gitId":"xiinweii98"},"content":"        }"},{"lineNumber":74,"author":{"gitId":"xiinweii98"},"content":"        return tasks;"},{"lineNumber":75,"author":{"gitId":"xiinweii98"},"content":"    }"},{"lineNumber":76,"author":{"gitId":"xiinweii98"},"content":""},{"lineNumber":77,"author":{"gitId":"xiinweii98"},"content":"    /**"},{"lineNumber":78,"author":{"gitId":"xiinweii98"},"content":"     * Updates the saved file in hard drive according to what is in the current TaskList."},{"lineNumber":79,"author":{"gitId":"xiinweii98"},"content":"     * @param taskList Contains the tasks at hand."},{"lineNumber":80,"author":{"gitId":"xiinweii98"},"content":"     * @throws IOException If a FileWriter cannot be created."},{"lineNumber":81,"author":{"gitId":"xiinweii98"},"content":"     */"},{"lineNumber":82,"author":{"gitId":"xiinweii98"},"content":"    public void update(TaskList taskList) throws IOException {"},{"lineNumber":83,"author":{"gitId":"xiinweii98"},"content":"        StringBuilder textToAdd \u003d new StringBuilder();"},{"lineNumber":84,"author":{"gitId":"xiinweii98"},"content":"        FileWriter fw \u003d new FileWriter(this.file);"},{"lineNumber":85,"author":{"gitId":"xiinweii98"},"content":"        for (Task curr : taskList.getTasks()) {"},{"lineNumber":86,"author":{"gitId":"xiinweii98"},"content":"            if (curr instanceof Todo) {"},{"lineNumber":87,"author":{"gitId":"xiinweii98"},"content":"                textToAdd.append(\"T \")"},{"lineNumber":88,"author":{"gitId":"xiinweii98"},"content":"                        .append(curr.isDone() ? \"1 \" : \"0 \")"},{"lineNumber":89,"author":{"gitId":"xiinweii98"},"content":"                        .append(curr.getName())"},{"lineNumber":90,"author":{"gitId":"xiinweii98"},"content":"                        .append(System.lineSeparator());"},{"lineNumber":91,"author":{"gitId":"xiinweii98"},"content":"            } else if (curr instanceof Deadline) {"},{"lineNumber":92,"author":{"gitId":"xiinweii98"},"content":"                textToAdd.append(\"D \")"},{"lineNumber":93,"author":{"gitId":"xiinweii98"},"content":"                        .append(curr.isDone() ? \"1 \" : \"0 \")"},{"lineNumber":94,"author":{"gitId":"xiinweii98"},"content":"                        .append(curr.getName())"},{"lineNumber":95,"author":{"gitId":"xiinweii98"},"content":"                        .append(System.lineSeparator())"},{"lineNumber":96,"author":{"gitId":"xiinweii98"},"content":"                        .append(((Deadline) curr).getBy())"},{"lineNumber":97,"author":{"gitId":"xiinweii98"},"content":"                        .append(System.lineSeparator());"},{"lineNumber":98,"author":{"gitId":"xiinweii98"},"content":"            } else if (curr instanceof Event) {"},{"lineNumber":99,"author":{"gitId":"xiinweii98"},"content":"                textToAdd.append(\"E \")"},{"lineNumber":100,"author":{"gitId":"xiinweii98"},"content":"                        .append(curr.isDone() ? \"1 \" : \"0 \")"},{"lineNumber":101,"author":{"gitId":"xiinweii98"},"content":"                        .append(curr.getName())"},{"lineNumber":102,"author":{"gitId":"xiinweii98"},"content":"                        .append(System.lineSeparator())"},{"lineNumber":103,"author":{"gitId":"xiinweii98"},"content":"                        .append(((Event) curr).getAt())"},{"lineNumber":104,"author":{"gitId":"xiinweii98"},"content":"                        .append(System.lineSeparator());"},{"lineNumber":105,"author":{"gitId":"xiinweii98"},"content":"            }"},{"lineNumber":106,"author":{"gitId":"xiinweii98"},"content":"        }"},{"lineNumber":107,"author":{"gitId":"xiinweii98"},"content":"        fw.write(textToAdd.toString());"},{"lineNumber":108,"author":{"gitId":"xiinweii98"},"content":"        fw.close();"},{"lineNumber":109,"author":{"gitId":"xiinweii98"},"content":"    }"},{"lineNumber":110,"author":{"gitId":"xiinweii98"},"content":"}"}],"authorContributionMap":{"xiinweii98":110}},{"path":"src/main/java/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"xiinweii98"},"content":"/**"},{"lineNumber":2,"author":{"gitId":"xiinweii98"},"content":" * Represents a possible Task to be added."},{"lineNumber":3,"author":{"gitId":"xiinweii98"},"content":" */"},{"lineNumber":4,"author":{"gitId":"xiinweii98"},"content":"public class Task {"},{"lineNumber":5,"author":{"gitId":"xiinweii98"},"content":"    private final String name;"},{"lineNumber":6,"author":{"gitId":"xiinweii98"},"content":"    private boolean isDone;"},{"lineNumber":7,"author":{"gitId":"xiinweii98"},"content":""},{"lineNumber":8,"author":{"gitId":"xiinweii98"},"content":"    /**"},{"lineNumber":9,"author":{"gitId":"xiinweii98"},"content":"     * Constructor to be used by subclasses."},{"lineNumber":10,"author":{"gitId":"xiinweii98"},"content":"     * @param name Name of the task."},{"lineNumber":11,"author":{"gitId":"xiinweii98"},"content":"     */"},{"lineNumber":12,"author":{"gitId":"xiinweii98"},"content":"    public Task(String name) {"},{"lineNumber":13,"author":{"gitId":"xiinweii98"},"content":"        this.name \u003d name;"},{"lineNumber":14,"author":{"gitId":"xiinweii98"},"content":"        this.isDone \u003d false;"},{"lineNumber":15,"author":{"gitId":"xiinweii98"},"content":"    }"},{"lineNumber":16,"author":{"gitId":"xiinweii98"},"content":""},{"lineNumber":17,"author":{"gitId":"xiinweii98"},"content":"    /**"},{"lineNumber":18,"author":{"gitId":"xiinweii98"},"content":"     * Constructor to be used when retrieving data from hard drive."},{"lineNumber":19,"author":{"gitId":"xiinweii98"},"content":"     * @param name Name of the task."},{"lineNumber":20,"author":{"gitId":"xiinweii98"},"content":"     * @param done If the task is done or not."},{"lineNumber":21,"author":{"gitId":"xiinweii98"},"content":"     */"},{"lineNumber":22,"author":{"gitId":"xiinweii98"},"content":"    public Task(String name, boolean done) {"},{"lineNumber":23,"author":{"gitId":"xiinweii98"},"content":"        this.name \u003d name;"},{"lineNumber":24,"author":{"gitId":"xiinweii98"},"content":"        this.isDone \u003d done;"},{"lineNumber":25,"author":{"gitId":"xiinweii98"},"content":"    }"},{"lineNumber":26,"author":{"gitId":"xiinweii98"},"content":""},{"lineNumber":27,"author":{"gitId":"xiinweii98"},"content":"    /**"},{"lineNumber":28,"author":{"gitId":"xiinweii98"},"content":"     * Getter for boolean isDone."},{"lineNumber":29,"author":{"gitId":"xiinweii98"},"content":"     * @return If this task is done or not."},{"lineNumber":30,"author":{"gitId":"xiinweii98"},"content":"     */"},{"lineNumber":31,"author":{"gitId":"xiinweii98"},"content":"    public boolean isDone() {"},{"lineNumber":32,"author":{"gitId":"xiinweii98"},"content":"        return this.isDone;"},{"lineNumber":33,"author":{"gitId":"xiinweii98"},"content":"    }"},{"lineNumber":34,"author":{"gitId":"xiinweii98"},"content":""},{"lineNumber":35,"author":{"gitId":"xiinweii98"},"content":"    /**"},{"lineNumber":36,"author":{"gitId":"xiinweii98"},"content":"     * Getter for the name of the Task."},{"lineNumber":37,"author":{"gitId":"xiinweii98"},"content":"     * @return The name of the Task."},{"lineNumber":38,"author":{"gitId":"xiinweii98"},"content":"     */"},{"lineNumber":39,"author":{"gitId":"xiinweii98"},"content":"    public String getName() {"},{"lineNumber":40,"author":{"gitId":"xiinweii98"},"content":"        return this.name;"},{"lineNumber":41,"author":{"gitId":"xiinweii98"},"content":"    }"},{"lineNumber":42,"author":{"gitId":"xiinweii98"},"content":""},{"lineNumber":43,"author":{"gitId":"xiinweii98"},"content":"    /**"},{"lineNumber":44,"author":{"gitId":"xiinweii98"},"content":"     * Getter for the status of the Task."},{"lineNumber":45,"author":{"gitId":"xiinweii98"},"content":"     * @return The status of the Task."},{"lineNumber":46,"author":{"gitId":"xiinweii98"},"content":"     */"},{"lineNumber":47,"author":{"gitId":"xiinweii98"},"content":"    public String getStatus() {"},{"lineNumber":48,"author":{"gitId":"xiinweii98"},"content":"        return \"[\" + (this.isDone ? \"\\u2713\" : \"\\u2718\") + \"] \" + this.name;"},{"lineNumber":49,"author":{"gitId":"xiinweii98"},"content":"    }"},{"lineNumber":50,"author":{"gitId":"xiinweii98"},"content":""},{"lineNumber":51,"author":{"gitId":"xiinweii98"},"content":"    /**"},{"lineNumber":52,"author":{"gitId":"xiinweii98"},"content":"     * Method to mark this task as done."},{"lineNumber":53,"author":{"gitId":"xiinweii98"},"content":"     */"},{"lineNumber":54,"author":{"gitId":"xiinweii98"},"content":"    public void markDone() {"},{"lineNumber":55,"author":{"gitId":"xiinweii98"},"content":"        this.isDone \u003d true;"},{"lineNumber":56,"author":{"gitId":"xiinweii98"},"content":"    }"},{"lineNumber":57,"author":{"gitId":"xiinweii98"},"content":""},{"lineNumber":58,"author":{"gitId":"xiinweii98"},"content":"}"}],"authorContributionMap":{"xiinweii98":58}},{"path":"src/main/java/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"xiinweii98"},"content":"import java.util.ArrayList;"},{"lineNumber":2,"author":{"gitId":"xiinweii98"},"content":"import java.util.HashSet;"},{"lineNumber":3,"author":{"gitId":"xiinweii98"},"content":""},{"lineNumber":4,"author":{"gitId":"xiinweii98"},"content":"/**"},{"lineNumber":5,"author":{"gitId":"xiinweii98"},"content":" * Keeps track of the tasks at hand."},{"lineNumber":6,"author":{"gitId":"xiinweii98"},"content":" * Provide methods to add/remove/modify tasks."},{"lineNumber":7,"author":{"gitId":"xiinweii98"},"content":" */"},{"lineNumber":8,"author":{"gitId":"xiinweii98"},"content":"public class TaskList {"},{"lineNumber":9,"author":{"gitId":"xiinweii98"},"content":"    private final ArrayList\u003cTask\u003e tasks;"},{"lineNumber":10,"author":{"gitId":"xiinweii98"},"content":""},{"lineNumber":11,"author":{"gitId":"xiinweii98"},"content":"    /**"},{"lineNumber":12,"author":{"gitId":"xiinweii98"},"content":"     * Constructor to create a new TaskList."},{"lineNumber":13,"author":{"gitId":"xiinweii98"},"content":"     */"},{"lineNumber":14,"author":{"gitId":"xiinweii98"},"content":"    public TaskList() {"},{"lineNumber":15,"author":{"gitId":"xiinweii98"},"content":"        this.tasks \u003d new ArrayList\u003c\u003e();"},{"lineNumber":16,"author":{"gitId":"xiinweii98"},"content":"    }"},{"lineNumber":17,"author":{"gitId":"xiinweii98"},"content":""},{"lineNumber":18,"author":{"gitId":"xiinweii98"},"content":"    /**"},{"lineNumber":19,"author":{"gitId":"xiinweii98"},"content":"     * Constructor to create a TaskList according to data from hard drive."},{"lineNumber":20,"author":{"gitId":"xiinweii98"},"content":"     * @param tasks ArrayList of tasks loaded in from hard drive."},{"lineNumber":21,"author":{"gitId":"xiinweii98"},"content":"     */"},{"lineNumber":22,"author":{"gitId":"xiinweii98"},"content":"    public TaskList(ArrayList\u003cTask\u003e tasks) {"},{"lineNumber":23,"author":{"gitId":"xiinweii98"},"content":"        this.tasks \u003d tasks;"},{"lineNumber":24,"author":{"gitId":"xiinweii98"},"content":"    }"},{"lineNumber":25,"author":{"gitId":"xiinweii98"},"content":""},{"lineNumber":26,"author":{"gitId":"xiinweii98"},"content":"    /**"},{"lineNumber":27,"author":{"gitId":"xiinweii98"},"content":"     * Getter to retrieve the ArrayList of Tasks."},{"lineNumber":28,"author":{"gitId":"xiinweii98"},"content":"     * @return ArrayList of Tasks."},{"lineNumber":29,"author":{"gitId":"xiinweii98"},"content":"     */"},{"lineNumber":30,"author":{"gitId":"xiinweii98"},"content":"    public ArrayList\u003cTask\u003e getTasks() {"},{"lineNumber":31,"author":{"gitId":"xiinweii98"},"content":"        return this.tasks;"},{"lineNumber":32,"author":{"gitId":"xiinweii98"},"content":"    }"},{"lineNumber":33,"author":{"gitId":"xiinweii98"},"content":""},{"lineNumber":34,"author":{"gitId":"xiinweii98"},"content":"    /**"},{"lineNumber":35,"author":{"gitId":"xiinweii98"},"content":"     * Add a task."},{"lineNumber":36,"author":{"gitId":"xiinweii98"},"content":"     * @param task Task to be added."},{"lineNumber":37,"author":{"gitId":"xiinweii98"},"content":"     */"},{"lineNumber":38,"author":{"gitId":"xiinweii98"},"content":"    public void addTask(Task task) {"},{"lineNumber":39,"author":{"gitId":"xiinweii98"},"content":"        tasks.add(task);"},{"lineNumber":40,"author":{"gitId":"xiinweii98"},"content":"    }"},{"lineNumber":41,"author":{"gitId":"xiinweii98"},"content":""},{"lineNumber":42,"author":{"gitId":"xiinweii98"},"content":"    /**"},{"lineNumber":43,"author":{"gitId":"xiinweii98"},"content":"     * Remove a Task."},{"lineNumber":44,"author":{"gitId":"xiinweii98"},"content":"     * @param taskNum Task number of the Task to be deleted."},{"lineNumber":45,"author":{"gitId":"xiinweii98"},"content":"     */"},{"lineNumber":46,"author":{"gitId":"xiinweii98"},"content":"    public void deleteTask(int taskNum) {"},{"lineNumber":47,"author":{"gitId":"xiinweii98"},"content":"        tasks.remove(taskNum);"},{"lineNumber":48,"author":{"gitId":"xiinweii98"},"content":"    }"},{"lineNumber":49,"author":{"gitId":"xiinweii98"},"content":""},{"lineNumber":50,"author":{"gitId":"xiinweii98"},"content":"    /**"},{"lineNumber":51,"author":{"gitId":"xiinweii98"},"content":"     * Mark a task as done."},{"lineNumber":52,"author":{"gitId":"xiinweii98"},"content":"     * @param taskNum Task number of the Task to be marked as done."},{"lineNumber":53,"author":{"gitId":"xiinweii98"},"content":"     */"},{"lineNumber":54,"author":{"gitId":"xiinweii98"},"content":"    public void markDone(int taskNum) {"},{"lineNumber":55,"author":{"gitId":"xiinweii98"},"content":"        tasks.get(taskNum).markDone();"},{"lineNumber":56,"author":{"gitId":"xiinweii98"},"content":"    }"},{"lineNumber":57,"author":{"gitId":"xiinweii98"},"content":""},{"lineNumber":58,"author":{"gitId":"xiinweii98"},"content":"    /**"},{"lineNumber":59,"author":{"gitId":"xiinweii98"},"content":"     * Finds the tasks that contains the keyword provided."},{"lineNumber":60,"author":{"gitId":"xiinweii98"},"content":"     * @param keywords Keyword for searching a task."},{"lineNumber":61,"author":{"gitId":"xiinweii98"},"content":"     * @return An ArrayList of the Tasks that contains the specific keyword."},{"lineNumber":62,"author":{"gitId":"xiinweii98"},"content":"     */"},{"lineNumber":63,"author":{"gitId":"xiinweii98"},"content":"    public ArrayList\u003cTask\u003e findTasks(String[] keywords) {"},{"lineNumber":64,"author":{"gitId":"xiinweii98"},"content":"        ArrayList\u003cTask\u003e relatedTasks \u003d new ArrayList\u003c\u003e();"},{"lineNumber":65,"author":{"gitId":"xiinweii98"},"content":"        HashSet\u003cInteger\u003e toAdd \u003d new HashSet\u003c\u003e();"},{"lineNumber":66,"author":{"gitId":"xiinweii98"},"content":"        for (String keyword : keywords) {"},{"lineNumber":67,"author":{"gitId":"xiinweii98"},"content":"            for (int i \u003d 0; i \u003c this.tasks.size(); i++) {"},{"lineNumber":68,"author":{"gitId":"xiinweii98"},"content":"                Task current \u003d this.tasks.get(i);"},{"lineNumber":69,"author":{"gitId":"xiinweii98"},"content":"                String taskName \u003d current.getName();"},{"lineNumber":70,"author":{"gitId":"xiinweii98"},"content":"                if (taskName.contains(keyword)) {"},{"lineNumber":71,"author":{"gitId":"xiinweii98"},"content":"                    toAdd.add(i);"},{"lineNumber":72,"author":{"gitId":"xiinweii98"},"content":"                }"},{"lineNumber":73,"author":{"gitId":"xiinweii98"},"content":"            }"},{"lineNumber":74,"author":{"gitId":"xiinweii98"},"content":"        }"},{"lineNumber":75,"author":{"gitId":"xiinweii98"},"content":"        for (int taskToAdd : toAdd) {"},{"lineNumber":76,"author":{"gitId":"xiinweii98"},"content":"            relatedTasks.add(this.tasks.get(taskToAdd));"},{"lineNumber":77,"author":{"gitId":"xiinweii98"},"content":"        }"},{"lineNumber":78,"author":{"gitId":"xiinweii98"},"content":"        return relatedTasks;"},{"lineNumber":79,"author":{"gitId":"xiinweii98"},"content":"    }"},{"lineNumber":80,"author":{"gitId":"xiinweii98"},"content":"}"}],"authorContributionMap":{"xiinweii98":80}},{"path":"src/main/java/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"xiinweii98"},"content":"/**"},{"lineNumber":2,"author":{"gitId":"xiinweii98"},"content":" * A Todo type of Task."},{"lineNumber":3,"author":{"gitId":"xiinweii98"},"content":" * Inherits from the superclass Task."},{"lineNumber":4,"author":{"gitId":"xiinweii98"},"content":" */"},{"lineNumber":5,"author":{"gitId":"xiinweii98"},"content":"public class Todo extends Task {"},{"lineNumber":6,"author":{"gitId":"xiinweii98"},"content":"    /**"},{"lineNumber":7,"author":{"gitId":"xiinweii98"},"content":"     * Constructor to create a Todo Task."},{"lineNumber":8,"author":{"gitId":"xiinweii98"},"content":"     * @param name Name of the Task."},{"lineNumber":9,"author":{"gitId":"xiinweii98"},"content":"     * @throws DukeException If the description of this Todo task is empty."},{"lineNumber":10,"author":{"gitId":"xiinweii98"},"content":"     */"},{"lineNumber":11,"author":{"gitId":"xiinweii98"},"content":"    public Todo(String name) throws DukeException {"},{"lineNumber":12,"author":{"gitId":"xiinweii98"},"content":"        super(name);"},{"lineNumber":13,"author":{"gitId":"xiinweii98"},"content":"        if (name.isBlank()) {"},{"lineNumber":14,"author":{"gitId":"xiinweii98"},"content":"            throw new DukeException(\"The description of a todo cannot be empty.\");"},{"lineNumber":15,"author":{"gitId":"xiinweii98"},"content":"        }"},{"lineNumber":16,"author":{"gitId":"xiinweii98"},"content":"    }"},{"lineNumber":17,"author":{"gitId":"xiinweii98"},"content":""},{"lineNumber":18,"author":{"gitId":"xiinweii98"},"content":"    /**"},{"lineNumber":19,"author":{"gitId":"xiinweii98"},"content":"     * Constructor used when retrieving data from hard drive."},{"lineNumber":20,"author":{"gitId":"xiinweii98"},"content":"     * @param name Name of the Todo."},{"lineNumber":21,"author":{"gitId":"xiinweii98"},"content":"     * @param done If the Todo is done or not."},{"lineNumber":22,"author":{"gitId":"xiinweii98"},"content":"     */"},{"lineNumber":23,"author":{"gitId":"xiinweii98"},"content":"    public Todo(String name, boolean done) {"},{"lineNumber":24,"author":{"gitId":"xiinweii98"},"content":"        super(name, done);"},{"lineNumber":25,"author":{"gitId":"xiinweii98"},"content":"    }"},{"lineNumber":26,"author":{"gitId":"xiinweii98"},"content":""},{"lineNumber":27,"author":{"gitId":"xiinweii98"},"content":"    @Override"},{"lineNumber":28,"author":{"gitId":"xiinweii98"},"content":"    public String getStatus() {"},{"lineNumber":29,"author":{"gitId":"xiinweii98"},"content":"        return \"[T]\" + super.getStatus();"},{"lineNumber":30,"author":{"gitId":"xiinweii98"},"content":"    }"},{"lineNumber":31,"author":{"gitId":"xiinweii98"},"content":"}"}],"authorContributionMap":{"xiinweii98":31}},{"path":"src/main/java/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"xiinweii98"},"content":"import java.io.IOException;"},{"lineNumber":2,"author":{"gitId":"xiinweii98"},"content":"import java.util.ArrayList;"},{"lineNumber":3,"author":{"gitId":"xiinweii98"},"content":"import java.util.Scanner;"},{"lineNumber":4,"author":{"gitId":"xiinweii98"},"content":""},{"lineNumber":5,"author":{"gitId":"xiinweii98"},"content":"/**"},{"lineNumber":6,"author":{"gitId":"xiinweii98"},"content":" * Deals with user interactions."},{"lineNumber":7,"author":{"gitId":"xiinweii98"},"content":" * Read data input from user."},{"lineNumber":8,"author":{"gitId":"xiinweii98"},"content":" * Print messages to inform/update user according to Duke actions."},{"lineNumber":9,"author":{"gitId":"xiinweii98"},"content":" */"},{"lineNumber":10,"author":{"gitId":"xiinweii98"},"content":"public class Ui {"},{"lineNumber":11,"author":{"gitId":"xiinweii98"},"content":"    private final Scanner sc;"},{"lineNumber":12,"author":{"gitId":"xiinweii98"},"content":""},{"lineNumber":13,"author":{"gitId":"xiinweii98"},"content":"    /**"},{"lineNumber":14,"author":{"gitId":"xiinweii98"},"content":"     * Constructor for Ui class. Initialises a Scanner to read in user input."},{"lineNumber":15,"author":{"gitId":"xiinweii98"},"content":"     */"},{"lineNumber":16,"author":{"gitId":"xiinweii98"},"content":"    public Ui() {"},{"lineNumber":17,"author":{"gitId":"xiinweii98"},"content":"        this.sc \u003d new Scanner(System.in);"},{"lineNumber":18,"author":{"gitId":"xiinweii98"},"content":"    }"},{"lineNumber":19,"author":{"gitId":"xiinweii98"},"content":""},{"lineNumber":20,"author":{"gitId":"xiinweii98"},"content":"    /**"},{"lineNumber":21,"author":{"gitId":"xiinweii98"},"content":"     * Prints the Duke Logo."},{"lineNumber":22,"author":{"gitId":"xiinweii98"},"content":"     */"},{"lineNumber":23,"author":{"gitId":"xiinweii98"},"content":"    public void printDukeLogo() {"},{"lineNumber":24,"author":{"gitId":"xiinweii98"},"content":"        String logo \u003d \" ____        _        \\n\""},{"lineNumber":25,"author":{"gitId":"xiinweii98"},"content":"                + \"|  _ \\\\ _   _| | _____ \\n\""},{"lineNumber":26,"author":{"gitId":"xiinweii98"},"content":"                + \"| | | | | | | |/ / _ \\\\\\n\""},{"lineNumber":27,"author":{"gitId":"xiinweii98"},"content":"                + \"| |_| | |_| |   \u003c  __/\\n\""},{"lineNumber":28,"author":{"gitId":"xiinweii98"},"content":"                + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\";"},{"lineNumber":29,"author":{"gitId":"xiinweii98"},"content":"        System.out.println(logo);"},{"lineNumber":30,"author":{"gitId":"xiinweii98"},"content":"    }"},{"lineNumber":31,"author":{"gitId":"xiinweii98"},"content":""},{"lineNumber":32,"author":{"gitId":"xiinweii98"},"content":"    /**"},{"lineNumber":33,"author":{"gitId":"xiinweii98"},"content":"     * Prints a partition."},{"lineNumber":34,"author":{"gitId":"xiinweii98"},"content":"     */"},{"lineNumber":35,"author":{"gitId":"xiinweii98"},"content":"    public void printPartition() {"},{"lineNumber":36,"author":{"gitId":"xiinweii98"},"content":"        System.out.println(\"\\n/**********************************************************/\\n\");"},{"lineNumber":37,"author":{"gitId":"xiinweii98"},"content":"    }"},{"lineNumber":38,"author":{"gitId":"xiinweii98"},"content":""},{"lineNumber":39,"author":{"gitId":"xiinweii98"},"content":"    /**"},{"lineNumber":40,"author":{"gitId":"xiinweii98"},"content":"     * Prints the introduction."},{"lineNumber":41,"author":{"gitId":"xiinweii98"},"content":"     */"},{"lineNumber":42,"author":{"gitId":"xiinweii98"},"content":"    public void printIntroduction() {"},{"lineNumber":43,"author":{"gitId":"xiinweii98"},"content":"        printDukeLogo();"},{"lineNumber":44,"author":{"gitId":"xiinweii98"},"content":"        System.out.println(\"Hello! I\u0027m Duke.\\n\" + \"What can I do for you?\");"},{"lineNumber":45,"author":{"gitId":"xiinweii98"},"content":"        printPartition();"},{"lineNumber":46,"author":{"gitId":"xiinweii98"},"content":"    }"},{"lineNumber":47,"author":{"gitId":"xiinweii98"},"content":""},{"lineNumber":48,"author":{"gitId":"xiinweii98"},"content":"    /**"},{"lineNumber":49,"author":{"gitId":"xiinweii98"},"content":"     * Prints the exit message."},{"lineNumber":50,"author":{"gitId":"xiinweii98"},"content":"     */"},{"lineNumber":51,"author":{"gitId":"xiinweii98"},"content":"    public void printExitMessage() {"},{"lineNumber":52,"author":{"gitId":"xiinweii98"},"content":"        System.out.println(\"Bye. Hope to see you again soon!\\n\");"},{"lineNumber":53,"author":{"gitId":"xiinweii98"},"content":"        printDukeLogo();"},{"lineNumber":54,"author":{"gitId":"xiinweii98"},"content":"    }"},{"lineNumber":55,"author":{"gitId":"xiinweii98"},"content":""},{"lineNumber":56,"author":{"gitId":"xiinweii98"},"content":"    /**"},{"lineNumber":57,"author":{"gitId":"xiinweii98"},"content":"     * Prints the IO error."},{"lineNumber":58,"author":{"gitId":"xiinweii98"},"content":"     */"},{"lineNumber":59,"author":{"gitId":"xiinweii98"},"content":"    public void printStorageIoError() {"},{"lineNumber":60,"author":{"gitId":"xiinweii98"},"content":"        System.out.println(\"OOPS! An error occurred while attempting to create/retrieve storage file.\");"},{"lineNumber":61,"author":{"gitId":"xiinweii98"},"content":"        printPartition();"},{"lineNumber":62,"author":{"gitId":"xiinweii98"},"content":"    }"},{"lineNumber":63,"author":{"gitId":"xiinweii98"},"content":""},{"lineNumber":64,"author":{"gitId":"xiinweii98"},"content":"    /**"},{"lineNumber":65,"author":{"gitId":"xiinweii98"},"content":"     * Prints the IO error."},{"lineNumber":66,"author":{"gitId":"xiinweii98"},"content":"     * @param ie The IO exception."},{"lineNumber":67,"author":{"gitId":"xiinweii98"},"content":"     */"},{"lineNumber":68,"author":{"gitId":"xiinweii98"},"content":"    public void printUpdateIoError(IOException ie) {"},{"lineNumber":69,"author":{"gitId":"xiinweii98"},"content":"        System.out.println(\"OOPS! An error occurred while attempting to update storage file:\\n\""},{"lineNumber":70,"author":{"gitId":"xiinweii98"},"content":"                + ie.getMessage());"},{"lineNumber":71,"author":{"gitId":"xiinweii98"},"content":"        printPartition();"},{"lineNumber":72,"author":{"gitId":"xiinweii98"},"content":"    }"},{"lineNumber":73,"author":{"gitId":"xiinweii98"},"content":""},{"lineNumber":74,"author":{"gitId":"xiinweii98"},"content":"    /**"},{"lineNumber":75,"author":{"gitId":"xiinweii98"},"content":"     * Prints the Duke Exception."},{"lineNumber":76,"author":{"gitId":"xiinweii98"},"content":"     * @param de The Duke Exception."},{"lineNumber":77,"author":{"gitId":"xiinweii98"},"content":"     */"},{"lineNumber":78,"author":{"gitId":"xiinweii98"},"content":"    public void printDukeException(DukeException de) {"},{"lineNumber":79,"author":{"gitId":"xiinweii98"},"content":"        System.out.println(\"OOPS! \" + de.getMessage());"},{"lineNumber":80,"author":{"gitId":"xiinweii98"},"content":"        printPartition();"},{"lineNumber":81,"author":{"gitId":"xiinweii98"},"content":"    }"},{"lineNumber":82,"author":{"gitId":"xiinweii98"},"content":""},{"lineNumber":83,"author":{"gitId":"xiinweii98"},"content":"    /**"},{"lineNumber":84,"author":{"gitId":"xiinweii98"},"content":"     * Prints the list of tasks."},{"lineNumber":85,"author":{"gitId":"xiinweii98"},"content":"     * @param tasks Tasks at hand."},{"lineNumber":86,"author":{"gitId":"xiinweii98"},"content":"     */"},{"lineNumber":87,"author":{"gitId":"xiinweii98"},"content":"    public String printTasks(TaskList tasks) {"},{"lineNumber":88,"author":{"gitId":"xiinweii98"},"content":"        ArrayList\u003cTask\u003e taskList \u003d tasks.getTasks();"},{"lineNumber":89,"author":{"gitId":"xiinweii98"},"content":"        StringBuilder toReturn \u003d new StringBuilder();"},{"lineNumber":90,"author":{"gitId":"xiinweii98"},"content":"        for (int i \u003d 1; i \u003c\u003d taskList.size(); i++) {"},{"lineNumber":91,"author":{"gitId":"xiinweii98"},"content":"            toReturn.append(i).append(\". \").append(taskList.get(i - 1).getStatus());"},{"lineNumber":92,"author":{"gitId":"xiinweii98"},"content":"        }"},{"lineNumber":93,"author":{"gitId":"xiinweii98"},"content":"        //printPartition();"},{"lineNumber":94,"author":{"gitId":"xiinweii98"},"content":"        return toReturn.toString();"},{"lineNumber":95,"author":{"gitId":"xiinweii98"},"content":"    }"},{"lineNumber":96,"author":{"gitId":"xiinweii98"},"content":""},{"lineNumber":97,"author":{"gitId":"xiinweii98"},"content":"    /**"},{"lineNumber":98,"author":{"gitId":"xiinweii98"},"content":"     * Prints the list of tasks according to the input."},{"lineNumber":99,"author":{"gitId":"xiinweii98"},"content":"     * @param tasks The list of tasks to print."},{"lineNumber":100,"author":{"gitId":"xiinweii98"},"content":"     */"},{"lineNumber":101,"author":{"gitId":"xiinweii98"},"content":"    public String printSomeTasks(ArrayList\u003cTask\u003e tasks) {"},{"lineNumber":102,"author":{"gitId":"xiinweii98"},"content":"        StringBuilder toReturn \u003d new StringBuilder();"},{"lineNumber":103,"author":{"gitId":"xiinweii98"},"content":"        for (int i \u003d 1; i \u003c\u003d tasks.size(); i++) {"},{"lineNumber":104,"author":{"gitId":"xiinweii98"},"content":"            toReturn.append(i).append(\". \").append(tasks.get(i - 1).getStatus());"},{"lineNumber":105,"author":{"gitId":"xiinweii98"},"content":"        }"},{"lineNumber":106,"author":{"gitId":"xiinweii98"},"content":"        //printPartition();"},{"lineNumber":107,"author":{"gitId":"xiinweii98"},"content":"        return toReturn.toString();"},{"lineNumber":108,"author":{"gitId":"xiinweii98"},"content":"    }"},{"lineNumber":109,"author":{"gitId":"xiinweii98"},"content":""},{"lineNumber":110,"author":{"gitId":"xiinweii98"},"content":"    /**"},{"lineNumber":111,"author":{"gitId":"xiinweii98"},"content":"     * Prints the number of tasks."},{"lineNumber":112,"author":{"gitId":"xiinweii98"},"content":"     * @param taskList The TaskList that is being kept tracked of."},{"lineNumber":113,"author":{"gitId":"xiinweii98"},"content":"     */"},{"lineNumber":114,"author":{"gitId":"xiinweii98"},"content":"    public String printNumTasks(TaskList taskList) {"},{"lineNumber":115,"author":{"gitId":"xiinweii98"},"content":"        return \"Now you have \" + taskList.getTasks().size() + \" tasks in the list.\";"},{"lineNumber":116,"author":{"gitId":"xiinweii98"},"content":"        //printPartition();"},{"lineNumber":117,"author":{"gitId":"xiinweii98"},"content":"    }"},{"lineNumber":118,"author":{"gitId":"xiinweii98"},"content":""},{"lineNumber":119,"author":{"gitId":"xiinweii98"},"content":"    /**"},{"lineNumber":120,"author":{"gitId":"xiinweii98"},"content":"     * Prints message when adding a task."},{"lineNumber":121,"author":{"gitId":"xiinweii98"},"content":"     */"},{"lineNumber":122,"author":{"gitId":"xiinweii98"},"content":"    public String printAddTaskMessage(Task added, TaskList taskList) {"},{"lineNumber":123,"author":{"gitId":"xiinweii98"},"content":"        String toReturn \u003d \"Got it. I\u0027ve added this task:\\n\" + added.getStatus();"},{"lineNumber":124,"author":{"gitId":"xiinweii98"},"content":"        toReturn +\u003d printNumTasks(taskList);"},{"lineNumber":125,"author":{"gitId":"xiinweii98"},"content":"        return toReturn;"},{"lineNumber":126,"author":{"gitId":"xiinweii98"},"content":"    }"},{"lineNumber":127,"author":{"gitId":"xiinweii98"},"content":""},{"lineNumber":128,"author":{"gitId":"xiinweii98"},"content":"    /**"},{"lineNumber":129,"author":{"gitId":"xiinweii98"},"content":"     * Prints the message when a task is marked as done."},{"lineNumber":130,"author":{"gitId":"xiinweii98"},"content":"     * @param marked Task to be marked as done."},{"lineNumber":131,"author":{"gitId":"xiinweii98"},"content":"     */"},{"lineNumber":132,"author":{"gitId":"xiinweii98"},"content":"    public String printMarkDone(Task marked) {"},{"lineNumber":133,"author":{"gitId":"xiinweii98"},"content":"        return \"This task is marked as done:\\n\" + marked.getStatus();"},{"lineNumber":134,"author":{"gitId":"xiinweii98"},"content":"        //printPartition();"},{"lineNumber":135,"author":{"gitId":"xiinweii98"},"content":"    }"},{"lineNumber":136,"author":{"gitId":"xiinweii98"},"content":""},{"lineNumber":137,"author":{"gitId":"xiinweii98"},"content":"    /**"},{"lineNumber":138,"author":{"gitId":"xiinweii98"},"content":"     * Prints the message when a task is deleted."},{"lineNumber":139,"author":{"gitId":"xiinweii98"},"content":"     * @param deleted Task to be deleted."},{"lineNumber":140,"author":{"gitId":"xiinweii98"},"content":"     * @param taskList TaskList stored."},{"lineNumber":141,"author":{"gitId":"xiinweii98"},"content":"     */"},{"lineNumber":142,"author":{"gitId":"xiinweii98"},"content":"    public String printDeleteTask(Task deleted, TaskList taskList) {"},{"lineNumber":143,"author":{"gitId":"xiinweii98"},"content":"        String toReturn \u003d \"This task has been removed:\\n\" + deleted.getStatus();"},{"lineNumber":144,"author":{"gitId":"xiinweii98"},"content":"        toReturn +\u003d printNumTasks(taskList);"},{"lineNumber":145,"author":{"gitId":"xiinweii98"},"content":"        return toReturn;"},{"lineNumber":146,"author":{"gitId":"xiinweii98"},"content":"    }"},{"lineNumber":147,"author":{"gitId":"xiinweii98"},"content":""},{"lineNumber":148,"author":{"gitId":"xiinweii98"},"content":"    /**"},{"lineNumber":149,"author":{"gitId":"xiinweii98"},"content":"     * Read the next input line from user."},{"lineNumber":150,"author":{"gitId":"xiinweii98"},"content":"     * @return Returns the next line of input."},{"lineNumber":151,"author":{"gitId":"xiinweii98"},"content":"     */"},{"lineNumber":152,"author":{"gitId":"xiinweii98"},"content":"    public String readCommand() {"},{"lineNumber":153,"author":{"gitId":"xiinweii98"},"content":"        return this.sc.nextLine();"},{"lineNumber":154,"author":{"gitId":"xiinweii98"},"content":"    }"},{"lineNumber":155,"author":{"gitId":"xiinweii98"},"content":""},{"lineNumber":156,"author":{"gitId":"xiinweii98"},"content":"    /**"},{"lineNumber":157,"author":{"gitId":"xiinweii98"},"content":"     * Close the Scanner that is opened when instantiating the Ui class."},{"lineNumber":158,"author":{"gitId":"xiinweii98"},"content":"     */"},{"lineNumber":159,"author":{"gitId":"xiinweii98"},"content":"    public void closeScanner() {"},{"lineNumber":160,"author":{"gitId":"xiinweii98"},"content":"        this.sc.close();"},{"lineNumber":161,"author":{"gitId":"xiinweii98"},"content":"    }"},{"lineNumber":162,"author":{"gitId":"xiinweii98"},"content":"}"}],"authorContributionMap":{"xiinweii98":162}},{"path":"src/main/resources/view/DialogBox.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"xiinweii98"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"},{"lineNumber":2,"author":{"gitId":"xiinweii98"},"content":""},{"lineNumber":3,"author":{"gitId":"xiinweii98"},"content":"\u003c?import javafx.geometry.Insets?\u003e"},{"lineNumber":4,"author":{"gitId":"xiinweii98"},"content":"\u003c?import javafx.scene.control.Label?\u003e"},{"lineNumber":5,"author":{"gitId":"xiinweii98"},"content":"\u003c?import javafx.scene.image.ImageView?\u003e"},{"lineNumber":6,"author":{"gitId":"xiinweii98"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e"},{"lineNumber":7,"author":{"gitId":"xiinweii98"},"content":""},{"lineNumber":8,"author":{"gitId":"xiinweii98"},"content":"\u003cfx:root alignment\u003d\"TOP_RIGHT\" maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\" prefWidth\u003d\"400.0\" type\u003d\"javafx.scene.layout.HBox\" xmlns\u003d\"http://javafx.com/javafx/8.0.171\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e"},{"lineNumber":9,"author":{"gitId":"xiinweii98"},"content":"    \u003cchildren\u003e"},{"lineNumber":10,"author":{"gitId":"xiinweii98"},"content":"        \u003cLabel fx:id\u003d\"dialog\" text\u003d\"Label\" wrapText\u003d\"true\" /\u003e"},{"lineNumber":11,"author":{"gitId":"xiinweii98"},"content":"        \u003cImageView fx:id\u003d\"displayPicture\" fitHeight\u003d\"99.0\" fitWidth\u003d\"99.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\" /\u003e"},{"lineNumber":12,"author":{"gitId":"xiinweii98"},"content":"    \u003c/children\u003e"},{"lineNumber":13,"author":{"gitId":"xiinweii98"},"content":"    \u003cpadding\u003e"},{"lineNumber":14,"author":{"gitId":"xiinweii98"},"content":"        \u003cInsets bottom\u003d\"15.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"15.0\" /\u003e"},{"lineNumber":15,"author":{"gitId":"xiinweii98"},"content":"    \u003c/padding\u003e"},{"lineNumber":16,"author":{"gitId":"xiinweii98"},"content":"\u003c/fx:root\u003e"}],"authorContributionMap":{"xiinweii98":16}},{"path":"src/main/resources/view/MainWindow.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"xiinweii98"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"},{"lineNumber":2,"author":{"gitId":"xiinweii98"},"content":""},{"lineNumber":3,"author":{"gitId":"xiinweii98"},"content":"\u003c?import javafx.scene.control.Button?\u003e"},{"lineNumber":4,"author":{"gitId":"xiinweii98"},"content":"\u003c?import javafx.scene.control.ScrollPane?\u003e"},{"lineNumber":5,"author":{"gitId":"xiinweii98"},"content":"\u003c?import javafx.scene.control.TextField?\u003e"},{"lineNumber":6,"author":{"gitId":"xiinweii98"},"content":"\u003c?import javafx.scene.layout.AnchorPane?\u003e"},{"lineNumber":7,"author":{"gitId":"xiinweii98"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e"},{"lineNumber":8,"author":{"gitId":"xiinweii98"},"content":""},{"lineNumber":9,"author":{"gitId":"xiinweii98"},"content":"\u003cAnchorPane maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefHeight\u003d\"600.0\" prefWidth\u003d\"400.0\" xmlns\u003d\"http://javafx.com/javafx/8.0.171\" xmlns:fx\u003d\"http://javafx.com/fxml/1\" fx:controller\u003d\"MainWindow\"\u003e"},{"lineNumber":10,"author":{"gitId":"xiinweii98"},"content":"    \u003cchildren\u003e"},{"lineNumber":11,"author":{"gitId":"xiinweii98"},"content":"        \u003cTextField fx:id\u003d\"userInput\" layoutY\u003d\"558.0\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"324.0\" AnchorPane.bottomAnchor\u003d\"1.0\" /\u003e"},{"lineNumber":12,"author":{"gitId":"xiinweii98"},"content":"        \u003cButton fx:id\u003d\"sendButton\" layoutX\u003d\"324.0\" layoutY\u003d\"558.0\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"76.0\" text\u003d\"Send\" /\u003e"},{"lineNumber":13,"author":{"gitId":"xiinweii98"},"content":"        \u003cScrollPane fx:id\u003d\"scrollPane\" hbarPolicy\u003d\"NEVER\" hvalue\u003d\"1.0\" prefHeight\u003d\"557.0\" prefWidth\u003d\"400.0\" vvalue\u003d\"1.0\"\u003e"},{"lineNumber":14,"author":{"gitId":"xiinweii98"},"content":"            \u003ccontent\u003e"},{"lineNumber":15,"author":{"gitId":"xiinweii98"},"content":"                \u003cVBox fx:id\u003d\"dialogContainer\" prefHeight\u003d\"552.0\" prefWidth\u003d\"388.0\" /\u003e"},{"lineNumber":16,"author":{"gitId":"xiinweii98"},"content":"            \u003c/content\u003e"},{"lineNumber":17,"author":{"gitId":"xiinweii98"},"content":"        \u003c/ScrollPane\u003e"},{"lineNumber":18,"author":{"gitId":"xiinweii98"},"content":"    \u003c/children\u003e"},{"lineNumber":19,"author":{"gitId":"xiinweii98"},"content":"\u003c/AnchorPane\u003e"}],"authorContributionMap":{"xiinweii98":19}},{"path":"src/test/java/DukeTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"xiinweii98"},"content":"import org.junit.jupiter.api.Test;"},{"lineNumber":2,"author":{"gitId":"xiinweii98"},"content":""},{"lineNumber":3,"author":{"gitId":"xiinweii98"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;"},{"lineNumber":4,"author":{"gitId":"xiinweii98"},"content":""},{"lineNumber":5,"author":{"gitId":"xiinweii98"},"content":"public class DukeTest {"},{"lineNumber":6,"author":{"gitId":"xiinweii98"},"content":"    @Test"},{"lineNumber":7,"author":{"gitId":"xiinweii98"},"content":"    public void dummy() {"},{"lineNumber":8,"author":{"gitId":"xiinweii98"},"content":"        assertEquals(2, 2);"},{"lineNumber":9,"author":{"gitId":"xiinweii98"},"content":"    }"},{"lineNumber":10,"author":{"gitId":"xiinweii98"},"content":"}"}],"authorContributionMap":{"xiinweii98":10}},{"path":"src/test/java/TaskTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"xiinweii98"},"content":"import org.junit.jupiter.api.Test;"},{"lineNumber":2,"author":{"gitId":"xiinweii98"},"content":""},{"lineNumber":3,"author":{"gitId":"xiinweii98"},"content":"import static org.junit.jupiter.api.Assertions.*;"},{"lineNumber":4,"author":{"gitId":"xiinweii98"},"content":""},{"lineNumber":5,"author":{"gitId":"xiinweii98"},"content":"public class TaskTest {"},{"lineNumber":6,"author":{"gitId":"xiinweii98"},"content":"    @Test"},{"lineNumber":7,"author":{"gitId":"xiinweii98"},"content":"    public void testIsDone() {"},{"lineNumber":8,"author":{"gitId":"xiinweii98"},"content":"        assertFalse(new Task(\"testSubject1\").isDone());"},{"lineNumber":9,"author":{"gitId":"xiinweii98"},"content":"        assertTrue(new Task(\"testSubject2\", true).isDone());"},{"lineNumber":10,"author":{"gitId":"xiinweii98"},"content":"    }"},{"lineNumber":11,"author":{"gitId":"xiinweii98"},"content":""},{"lineNumber":12,"author":{"gitId":"xiinweii98"},"content":"    @Test"},{"lineNumber":13,"author":{"gitId":"xiinweii98"},"content":"    public void testMarkDone() {"},{"lineNumber":14,"author":{"gitId":"xiinweii98"},"content":"        Task sub3 \u003d new Task(\"testSubject3\");"},{"lineNumber":15,"author":{"gitId":"xiinweii98"},"content":"        sub3.markDone();"},{"lineNumber":16,"author":{"gitId":"xiinweii98"},"content":"        assertTrue(sub3.isDone());"},{"lineNumber":17,"author":{"gitId":"xiinweii98"},"content":"    }"},{"lineNumber":18,"author":{"gitId":"xiinweii98"},"content":""},{"lineNumber":19,"author":{"gitId":"xiinweii98"},"content":"    @Test"},{"lineNumber":20,"author":{"gitId":"xiinweii98"},"content":"    public void testGetName() {"},{"lineNumber":21,"author":{"gitId":"xiinweii98"},"content":"        assertEquals(\"testSubject4\", new Task(\"testSubject4\").getName());"},{"lineNumber":22,"author":{"gitId":"xiinweii98"},"content":"    }"},{"lineNumber":23,"author":{"gitId":"xiinweii98"},"content":""},{"lineNumber":24,"author":{"gitId":"xiinweii98"},"content":"    @Test"},{"lineNumber":25,"author":{"gitId":"xiinweii98"},"content":"    public void testGetStatus() {"},{"lineNumber":26,"author":{"gitId":"xiinweii98"},"content":"        assertEquals(\"[\\u2718] testSubject5\", new Task(\"testSubject5\").getStatus());"},{"lineNumber":27,"author":{"gitId":"xiinweii98"},"content":"        Task sub6 \u003d new Task(\"testSubject6\");"},{"lineNumber":28,"author":{"gitId":"xiinweii98"},"content":"        sub6.markDone();"},{"lineNumber":29,"author":{"gitId":"xiinweii98"},"content":"        assertEquals(\"[\\u2713] testSubject6\", sub6.getStatus());"},{"lineNumber":30,"author":{"gitId":"xiinweii98"},"content":"    }"},{"lineNumber":31,"author":{"gitId":"xiinweii98"},"content":"}"}],"authorContributionMap":{"xiinweii98":31}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"xiinweii98"},"content":"todo read book"},{"lineNumber":2,"author":{"gitId":"xiinweii98"},"content":"deadline return book /by June 6th"},{"lineNumber":3,"author":{"gitId":"xiinweii98"},"content":"event project meeting /at Aug 6th 2-4pm"},{"lineNumber":4,"author":{"gitId":"xiinweii98"},"content":"todo join sports club"},{"lineNumber":5,"author":{"gitId":"xiinweii98"},"content":"todo borrow book"},{"lineNumber":6,"author":{"gitId":"xiinweii98"},"content":"todo   "},{"lineNumber":7,"author":{"gitId":"xiinweii98"},"content":"blah"},{"lineNumber":8,"author":{"gitId":"xiinweii98"},"content":"list"},{"lineNumber":9,"author":{"gitId":"xiinweii98"},"content":"done 1"},{"lineNumber":10,"author":{"gitId":"xiinweii98"},"content":"done 2"},{"lineNumber":11,"author":{"gitId":"xiinweii98"},"content":"done 4"},{"lineNumber":12,"author":{"gitId":"xiinweii98"},"content":"list"},{"lineNumber":13,"author":{"gitId":"xiinweii98"},"content":"delete 3"},{"lineNumber":14,"author":{"gitId":"xiinweii98"},"content":"bye"}],"authorContributionMap":{"xiinweii98":14}}]
