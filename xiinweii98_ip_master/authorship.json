[{"path":"data/savedTasks.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"xiinweii98"},"content":"T 0 borrow book"},{"lineNumber":2,"author":{"gitId":"xiinweii98"},"content":"E 0 abd"},{"lineNumber":3,"author":{"gitId":"xiinweii98"},"content":"2019-12-12"},{"lineNumber":4,"author":{"gitId":"xiinweii98"},"content":"D 0 asdc"},{"lineNumber":5,"author":{"gitId":"xiinweii98"},"content":"2020-10-10"}],"authorContributionMap":{"xiinweii98":5}},{"path":"src/main/java/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"xiinweii98"},"content":"import java.time.LocalDate;"},{"lineNumber":2,"author":{"gitId":"xiinweii98"},"content":"import java.time.format.DateTimeFormatter;"},{"lineNumber":3,"author":{"gitId":"xiinweii98"},"content":""},{"lineNumber":4,"author":{"gitId":"xiinweii98"},"content":"public class Deadline extends Task {"},{"lineNumber":5,"author":{"gitId":"xiinweii98"},"content":"    private LocalDate by;"},{"lineNumber":6,"author":{"gitId":"xiinweii98"},"content":""},{"lineNumber":7,"author":{"gitId":"xiinweii98"},"content":"    public Deadline(String name, LocalDate by) throws DukeException {"},{"lineNumber":8,"author":{"gitId":"xiinweii98"},"content":"        super(name);"},{"lineNumber":9,"author":{"gitId":"xiinweii98"},"content":"        this.by \u003d by;"},{"lineNumber":10,"author":{"gitId":"xiinweii98"},"content":"    }"},{"lineNumber":11,"author":{"gitId":"xiinweii98"},"content":""},{"lineNumber":12,"author":{"gitId":"xiinweii98"},"content":"    public Deadline(String name, LocalDate by, boolean done) {"},{"lineNumber":13,"author":{"gitId":"xiinweii98"},"content":"        super(name, done);"},{"lineNumber":14,"author":{"gitId":"xiinweii98"},"content":"        this.by \u003d by;"},{"lineNumber":15,"author":{"gitId":"xiinweii98"},"content":"    }"},{"lineNumber":16,"author":{"gitId":"xiinweii98"},"content":""},{"lineNumber":17,"author":{"gitId":"xiinweii98"},"content":"    public LocalDate getBy() {"},{"lineNumber":18,"author":{"gitId":"xiinweii98"},"content":"        return this.by;"},{"lineNumber":19,"author":{"gitId":"xiinweii98"},"content":"    }"},{"lineNumber":20,"author":{"gitId":"xiinweii98"},"content":""},{"lineNumber":21,"author":{"gitId":"xiinweii98"},"content":"    @Override"},{"lineNumber":22,"author":{"gitId":"xiinweii98"},"content":"    public String getStatus() {"},{"lineNumber":23,"author":{"gitId":"xiinweii98"},"content":"        return \"[D]\" + super.getStatus() + \" (by: \" + this.by.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\")) + \")\";"},{"lineNumber":24,"author":{"gitId":"xiinweii98"},"content":"    }"},{"lineNumber":25,"author":{"gitId":"xiinweii98"},"content":"}"}],"authorContributionMap":{"xiinweii98":25}},{"path":"src/main/java/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"xiinweii98"},"content":"import java.io.FileNotFoundException;"},{"lineNumber":2,"author":{"gitId":"xiinweii98"},"content":"import java.io.IOException;"},{"lineNumber":3,"author":{"gitId":"xiinweii98"},"content":"import java.util.ArrayList;"},{"lineNumber":4,"author":{"gitId":"xiinweii98"},"content":"import java.util.Scanner;"},{"lineNumber":5,"author":{"gitId":"xiinweii98"},"content":"import java.io.File;"},{"lineNumber":6,"author":{"gitId":"xiinweii98"},"content":"import java.io.FileWriter;"},{"lineNumber":7,"author":{"gitId":"xiinweii98"},"content":"import java.time.LocalDate;"},{"lineNumber":8,"author":{"gitId":"xiinweii98"},"content":"import java.time.format.DateTimeParseException;"},{"lineNumber":9,"author":{"gitId":"xiinweii98"},"content":""},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class Duke {"},{"lineNumber":11,"author":{"gitId":"xiinweii98"},"content":"    public static ArrayList\u003cTask\u003e currentTasks \u003d new ArrayList\u003c\u003e();"},{"lineNumber":12,"author":{"gitId":"xiinweii98"},"content":""},{"lineNumber":13,"author":{"gitId":"xiinweii98"},"content":"    public static void main(String[] args) throws IOException {"},{"lineNumber":14,"author":{"gitId":"xiinweii98"},"content":"        File dir \u003d new File(\"data/\");"},{"lineNumber":15,"author":{"gitId":"xiinweii98"},"content":"        if (!dir.exists()) {"},{"lineNumber":16,"author":{"gitId":"xiinweii98"},"content":"            dir.mkdir();"},{"lineNumber":17,"author":{"gitId":"xiinweii98"},"content":"        }"},{"lineNumber":18,"author":{"gitId":"xiinweii98"},"content":""},{"lineNumber":19,"author":{"gitId":"xiinweii98"},"content":"        File savedTasks \u003d new File(\"data/savedTasks.txt\");"},{"lineNumber":20,"author":{"gitId":"xiinweii98"},"content":"        if (!savedTasks.exists()) {"},{"lineNumber":21,"author":{"gitId":"xiinweii98"},"content":"            savedTasks.createNewFile();"},{"lineNumber":22,"author":{"gitId":"xiinweii98"},"content":"        }"},{"lineNumber":23,"author":{"gitId":"xiinweii98"},"content":""},{"lineNumber":24,"author":{"gitId":"xiinweii98"},"content":"        Scanner sc \u003d new Scanner(System.in);"},{"lineNumber":25,"author":{"gitId":"xiinweii98"},"content":"        String command;"},{"lineNumber":26,"author":{"gitId":"xiinweii98"},"content":""},{"lineNumber":27,"author":{"gitId":"-"},"content":"        String logo \u003d \" ____        _        \\n\""},{"lineNumber":28,"author":{"gitId":"-"},"content":"                + \"|  _ \\\\ _   _| | _____ \\n\""},{"lineNumber":29,"author":{"gitId":"-"},"content":"                + \"| | | | | | | |/ / _ \\\\\\n\""},{"lineNumber":30,"author":{"gitId":"-"},"content":"                + \"| |_| | |_| |   \u003c  __/\\n\""},{"lineNumber":31,"author":{"gitId":"-"},"content":"                + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\";"},{"lineNumber":32,"author":{"gitId":"xiinweii98"},"content":"        String partition \u003d \"\\n/**********************************************************/\\n\";"},{"lineNumber":33,"author":{"gitId":"xiinweii98"},"content":""},{"lineNumber":34,"author":{"gitId":"xiinweii98"},"content":"        System.out.println(logo + \"\\nHello! I\u0027m Duke.\\n\" + \"What can I do for you?\\n\" + partition);"},{"lineNumber":35,"author":{"gitId":"xiinweii98"},"content":"        command \u003d sc.next();"},{"lineNumber":36,"author":{"gitId":"xiinweii98"},"content":""},{"lineNumber":37,"author":{"gitId":"xiinweii98"},"content":"        try {"},{"lineNumber":38,"author":{"gitId":"xiinweii98"},"content":"            readTasks(savedTasks);"},{"lineNumber":39,"author":{"gitId":"xiinweii98"},"content":"        } catch (FileNotFoundException fe) {"},{"lineNumber":40,"author":{"gitId":"xiinweii98"},"content":"            System.out.println(fe.getMessage() + \"\\n\" + partition);"},{"lineNumber":41,"author":{"gitId":"xiinweii98"},"content":"        }"},{"lineNumber":42,"author":{"gitId":"xiinweii98"},"content":""},{"lineNumber":43,"author":{"gitId":"xiinweii98"},"content":"        while(!command.equals(\"bye\")) {"},{"lineNumber":44,"author":{"gitId":"xiinweii98"},"content":"            try {"},{"lineNumber":45,"author":{"gitId":"xiinweii98"},"content":"                switch (command) {"},{"lineNumber":46,"author":{"gitId":"xiinweii98"},"content":"                case \"list\":"},{"lineNumber":47,"author":{"gitId":"xiinweii98"},"content":"                    printTasks();"},{"lineNumber":48,"author":{"gitId":"xiinweii98"},"content":"                    System.out.println(partition);"},{"lineNumber":49,"author":{"gitId":"xiinweii98"},"content":"                    break;"},{"lineNumber":50,"author":{"gitId":"xiinweii98"},"content":"                case \"done\":"},{"lineNumber":51,"author":{"gitId":"xiinweii98"},"content":"                    int num \u003d sc.nextInt();"},{"lineNumber":52,"author":{"gitId":"xiinweii98"},"content":"                    markAsDone(num);"},{"lineNumber":53,"author":{"gitId":"xiinweii98"},"content":"                    System.out.println(partition);"},{"lineNumber":54,"author":{"gitId":"xiinweii98"},"content":"                    writeTasks(savedTasks);"},{"lineNumber":55,"author":{"gitId":"xiinweii98"},"content":"                    break;"},{"lineNumber":56,"author":{"gitId":"xiinweii98"},"content":"                case \"todo\":"},{"lineNumber":57,"author":{"gitId":"xiinweii98"},"content":"                    addTask(new Todo(sc.nextLine().trim()));"},{"lineNumber":58,"author":{"gitId":"xiinweii98"},"content":"                    System.out.println(partition);"},{"lineNumber":59,"author":{"gitId":"xiinweii98"},"content":"                    writeTasks(savedTasks);"},{"lineNumber":60,"author":{"gitId":"xiinweii98"},"content":"                    break;"},{"lineNumber":61,"author":{"gitId":"xiinweii98"},"content":"                case \"deadline\":"},{"lineNumber":62,"author":{"gitId":"xiinweii98"},"content":"                    String inst1 \u003d sc.nextLine();"},{"lineNumber":63,"author":{"gitId":"xiinweii98"},"content":"                    String[] part1 \u003d inst1.split(\"/by\");"},{"lineNumber":64,"author":{"gitId":"xiinweii98"},"content":"                    addTask(new Deadline(part1[0].trim(), LocalDate.parse(part1[1].trim())));"},{"lineNumber":65,"author":{"gitId":"xiinweii98"},"content":"                    System.out.println(partition);"},{"lineNumber":66,"author":{"gitId":"xiinweii98"},"content":"                    writeTasks(savedTasks);"},{"lineNumber":67,"author":{"gitId":"xiinweii98"},"content":"                    break;"},{"lineNumber":68,"author":{"gitId":"xiinweii98"},"content":"                case \"event\":"},{"lineNumber":69,"author":{"gitId":"xiinweii98"},"content":"                    String inst2 \u003d sc.nextLine();"},{"lineNumber":70,"author":{"gitId":"xiinweii98"},"content":"                    String[] part2 \u003d inst2.split(\"/at\");"},{"lineNumber":71,"author":{"gitId":"xiinweii98"},"content":"                    addTask(new Event(part2[0].trim(), LocalDate.parse(part2[1].trim())));"},{"lineNumber":72,"author":{"gitId":"xiinweii98"},"content":"                    System.out.println(partition);"},{"lineNumber":73,"author":{"gitId":"xiinweii98"},"content":"                    writeTasks(savedTasks);"},{"lineNumber":74,"author":{"gitId":"xiinweii98"},"content":"                    break;"},{"lineNumber":75,"author":{"gitId":"xiinweii98"},"content":"                case \"delete\":"},{"lineNumber":76,"author":{"gitId":"xiinweii98"},"content":"                    int del \u003d sc.nextInt();"},{"lineNumber":77,"author":{"gitId":"xiinweii98"},"content":"                    deleteTask(del);"},{"lineNumber":78,"author":{"gitId":"xiinweii98"},"content":"                    System.out.println(partition);"},{"lineNumber":79,"author":{"gitId":"xiinweii98"},"content":"                    writeTasks(savedTasks);"},{"lineNumber":80,"author":{"gitId":"xiinweii98"},"content":"                    break;"},{"lineNumber":81,"author":{"gitId":"xiinweii98"},"content":"                default:"},{"lineNumber":82,"author":{"gitId":"xiinweii98"},"content":"                    throw new DukeException(\"I\u0027m sorry, but I don\u0027t know what that means.\");"},{"lineNumber":83,"author":{"gitId":"xiinweii98"},"content":"                }"},{"lineNumber":84,"author":{"gitId":"xiinweii98"},"content":"            } catch (DukeException de) {"},{"lineNumber":85,"author":{"gitId":"xiinweii98"},"content":"                System.out.println(de.getMessage() + \"\\n\" + partition);"},{"lineNumber":86,"author":{"gitId":"xiinweii98"},"content":"            } catch (IOException ie) {"},{"lineNumber":87,"author":{"gitId":"xiinweii98"},"content":"                System.out.println(\"Cannot write to file: \" + ie.getMessage() + \"\\n\" + partition);"},{"lineNumber":88,"author":{"gitId":"xiinweii98"},"content":"            } catch (DateTimeParseException de) {"},{"lineNumber":89,"author":{"gitId":"xiinweii98"},"content":"                System.out.println(\"Input date/time cannot be parsed: \" + de.getMessage() + \"\\n\" + partition);"},{"lineNumber":90,"author":{"gitId":"xiinweii98"},"content":"            }"},{"lineNumber":91,"author":{"gitId":"xiinweii98"},"content":""},{"lineNumber":92,"author":{"gitId":"xiinweii98"},"content":"            command \u003d sc.next();"},{"lineNumber":93,"author":{"gitId":"xiinweii98"},"content":"        }"},{"lineNumber":94,"author":{"gitId":"xiinweii98"},"content":""},{"lineNumber":95,"author":{"gitId":"xiinweii98"},"content":"        System.out.println(\"Bye. Hope to see you again soon!\\n\" + logo);"},{"lineNumber":96,"author":{"gitId":"xiinweii98"},"content":"        sc.close();"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":98,"author":{"gitId":"xiinweii98"},"content":""},{"lineNumber":99,"author":{"gitId":"xiinweii98"},"content":"    public static void addTask(Task task) {"},{"lineNumber":100,"author":{"gitId":"xiinweii98"},"content":"        currentTasks.add(task);"},{"lineNumber":101,"author":{"gitId":"xiinweii98"},"content":"        System.out.println(\"Got it. I\u0027ve added this task:\\n\" + task.getStatus());"},{"lineNumber":102,"author":{"gitId":"xiinweii98"},"content":"        printNumTasks();"},{"lineNumber":103,"author":{"gitId":"xiinweii98"},"content":"    }"},{"lineNumber":104,"author":{"gitId":"xiinweii98"},"content":""},{"lineNumber":105,"author":{"gitId":"xiinweii98"},"content":"    public static void printTasks() {"},{"lineNumber":106,"author":{"gitId":"xiinweii98"},"content":"        for (int i \u003d 1; i \u003c\u003d currentTasks.size(); i++) {"},{"lineNumber":107,"author":{"gitId":"xiinweii98"},"content":"            System.out.println(\"\" + i + \". \" + currentTasks.get(i - 1).getStatus());"},{"lineNumber":108,"author":{"gitId":"xiinweii98"},"content":"        }"},{"lineNumber":109,"author":{"gitId":"xiinweii98"},"content":"    }"},{"lineNumber":110,"author":{"gitId":"xiinweii98"},"content":""},{"lineNumber":111,"author":{"gitId":"xiinweii98"},"content":"    public static void markAsDone(int taskNum) {"},{"lineNumber":112,"author":{"gitId":"xiinweii98"},"content":"        currentTasks.get(taskNum - 1).markDone();"},{"lineNumber":113,"author":{"gitId":"xiinweii98"},"content":"        System.out.println(\"This task is marked as done:\\n\" + currentTasks.get(taskNum - 1).getStatus());"},{"lineNumber":114,"author":{"gitId":"xiinweii98"},"content":"    }"},{"lineNumber":115,"author":{"gitId":"xiinweii98"},"content":""},{"lineNumber":116,"author":{"gitId":"xiinweii98"},"content":"    public static void deleteTask(int taskNum) {"},{"lineNumber":117,"author":{"gitId":"xiinweii98"},"content":"        System.out.println(\"Noted. This task has been removed:\\n\" + currentTasks.get(taskNum - 1).getStatus());"},{"lineNumber":118,"author":{"gitId":"xiinweii98"},"content":"        currentTasks.remove(taskNum - 1);"},{"lineNumber":119,"author":{"gitId":"xiinweii98"},"content":"        printNumTasks();"},{"lineNumber":120,"author":{"gitId":"xiinweii98"},"content":"    }"},{"lineNumber":121,"author":{"gitId":"xiinweii98"},"content":""},{"lineNumber":122,"author":{"gitId":"xiinweii98"},"content":"    public static void printNumTasks() {"},{"lineNumber":123,"author":{"gitId":"xiinweii98"},"content":"        System.out.println(\"Now you have \" + currentTasks.size() + \" tasks in the list.\");"},{"lineNumber":124,"author":{"gitId":"xiinweii98"},"content":"    }"},{"lineNumber":125,"author":{"gitId":"xiinweii98"},"content":""},{"lineNumber":126,"author":{"gitId":"xiinweii98"},"content":"    public static void writeTasks(File destination) throws IOException {"},{"lineNumber":127,"author":{"gitId":"xiinweii98"},"content":"        StringBuilder textToAdd \u003d new StringBuilder();"},{"lineNumber":128,"author":{"gitId":"xiinweii98"},"content":"        FileWriter fw \u003d new FileWriter(destination);"},{"lineNumber":129,"author":{"gitId":"xiinweii98"},"content":"        for (Task curr : currentTasks) {"},{"lineNumber":130,"author":{"gitId":"xiinweii98"},"content":"            if (curr instanceof Todo) {"},{"lineNumber":131,"author":{"gitId":"xiinweii98"},"content":"                textToAdd.append(\"T \")"},{"lineNumber":132,"author":{"gitId":"xiinweii98"},"content":"                        .append(curr.isDone() ? \"1 \" : \"0 \")"},{"lineNumber":133,"author":{"gitId":"xiinweii98"},"content":"                        .append(curr.getName())"},{"lineNumber":134,"author":{"gitId":"xiinweii98"},"content":"                        .append(System.lineSeparator());"},{"lineNumber":135,"author":{"gitId":"xiinweii98"},"content":"            } else if (curr instanceof Deadline) {"},{"lineNumber":136,"author":{"gitId":"xiinweii98"},"content":"                textToAdd.append(\"D \")"},{"lineNumber":137,"author":{"gitId":"xiinweii98"},"content":"                        .append(curr.isDone() ? \"1 \" : \"0 \")"},{"lineNumber":138,"author":{"gitId":"xiinweii98"},"content":"                        .append(curr.getName())"},{"lineNumber":139,"author":{"gitId":"xiinweii98"},"content":"                        .append(System.lineSeparator())"},{"lineNumber":140,"author":{"gitId":"xiinweii98"},"content":"                        .append(((Deadline) curr).getBy())"},{"lineNumber":141,"author":{"gitId":"xiinweii98"},"content":"                        .append(System.lineSeparator());"},{"lineNumber":142,"author":{"gitId":"xiinweii98"},"content":"            } else if (curr instanceof Event) {"},{"lineNumber":143,"author":{"gitId":"xiinweii98"},"content":"                textToAdd.append(\"E \")"},{"lineNumber":144,"author":{"gitId":"xiinweii98"},"content":"                        .append(curr.isDone() ? \"1 \" : \"0 \")"},{"lineNumber":145,"author":{"gitId":"xiinweii98"},"content":"                        .append(curr.getName())"},{"lineNumber":146,"author":{"gitId":"xiinweii98"},"content":"                        .append(System.lineSeparator())"},{"lineNumber":147,"author":{"gitId":"xiinweii98"},"content":"                        .append(((Event) curr).getAt())"},{"lineNumber":148,"author":{"gitId":"xiinweii98"},"content":"                        .append(System.lineSeparator());"},{"lineNumber":149,"author":{"gitId":"xiinweii98"},"content":"            }"},{"lineNumber":150,"author":{"gitId":"xiinweii98"},"content":"        }"},{"lineNumber":151,"author":{"gitId":"xiinweii98"},"content":"        fw.write(textToAdd.toString());"},{"lineNumber":152,"author":{"gitId":"xiinweii98"},"content":"        fw.close();"},{"lineNumber":153,"author":{"gitId":"xiinweii98"},"content":"    }"},{"lineNumber":154,"author":{"gitId":"xiinweii98"},"content":""},{"lineNumber":155,"author":{"gitId":"xiinweii98"},"content":"    public static void readTasks(File source) throws FileNotFoundException {"},{"lineNumber":156,"author":{"gitId":"xiinweii98"},"content":"        Scanner sc \u003d new Scanner(source);"},{"lineNumber":157,"author":{"gitId":"xiinweii98"},"content":"        while (sc.hasNext()) {"},{"lineNumber":158,"author":{"gitId":"xiinweii98"},"content":"            String current \u003d sc.nextLine();"},{"lineNumber":159,"author":{"gitId":"xiinweii98"},"content":"            String[] splits \u003d current.split(\" \", 3);"},{"lineNumber":160,"author":{"gitId":"xiinweii98"},"content":"            switch (splits[0]) {"},{"lineNumber":161,"author":{"gitId":"xiinweii98"},"content":"            case \"T\": {"},{"lineNumber":162,"author":{"gitId":"xiinweii98"},"content":"                Task toAdd \u003d new Todo(splits[2], (splits[1].equals(\"1\")));"},{"lineNumber":163,"author":{"gitId":"xiinweii98"},"content":"                currentTasks.add(toAdd);"},{"lineNumber":164,"author":{"gitId":"xiinweii98"},"content":"                break;"},{"lineNumber":165,"author":{"gitId":"xiinweii98"},"content":"            }"},{"lineNumber":166,"author":{"gitId":"xiinweii98"},"content":"            case \"E\": {"},{"lineNumber":167,"author":{"gitId":"xiinweii98"},"content":"                Task toAdd \u003d new Event(splits[2], LocalDate.parse(sc.nextLine()), splits[1].equals(\"1\"));"},{"lineNumber":168,"author":{"gitId":"xiinweii98"},"content":"                currentTasks.add(toAdd);"},{"lineNumber":169,"author":{"gitId":"xiinweii98"},"content":"                break;"},{"lineNumber":170,"author":{"gitId":"xiinweii98"},"content":"            }"},{"lineNumber":171,"author":{"gitId":"xiinweii98"},"content":"            case \"D\": {"},{"lineNumber":172,"author":{"gitId":"xiinweii98"},"content":"                Task toAdd \u003d new Deadline(splits[2], LocalDate.parse(sc.nextLine()), splits[1].equals(\"1\"));"},{"lineNumber":173,"author":{"gitId":"xiinweii98"},"content":"                currentTasks.add(toAdd);"},{"lineNumber":174,"author":{"gitId":"xiinweii98"},"content":"                break;"},{"lineNumber":175,"author":{"gitId":"xiinweii98"},"content":"            }"},{"lineNumber":176,"author":{"gitId":"xiinweii98"},"content":"            default:"},{"lineNumber":177,"author":{"gitId":"xiinweii98"},"content":"                System.out.println(\"Problem encountered when reading file: task unknown\");"},{"lineNumber":178,"author":{"gitId":"xiinweii98"},"content":"            }"},{"lineNumber":179,"author":{"gitId":"xiinweii98"},"content":"        }"},{"lineNumber":180,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":181,"author":{"gitId":"-"},"content":"}"}],"authorContributionMap":{"xiinweii98":172,"-":9}},{"path":"src/main/java/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"xiinweii98"},"content":"public class DukeException extends Exception {"},{"lineNumber":2,"author":{"gitId":"xiinweii98"},"content":"    public DukeException(String message) {"},{"lineNumber":3,"author":{"gitId":"xiinweii98"},"content":"        super(message);"},{"lineNumber":4,"author":{"gitId":"xiinweii98"},"content":"    }"},{"lineNumber":5,"author":{"gitId":"xiinweii98"},"content":""},{"lineNumber":6,"author":{"gitId":"xiinweii98"},"content":"    @Override"},{"lineNumber":7,"author":{"gitId":"xiinweii98"},"content":"    public String getMessage() {"},{"lineNumber":8,"author":{"gitId":"xiinweii98"},"content":"        return \"OOPS! \" + super.getMessage();"},{"lineNumber":9,"author":{"gitId":"xiinweii98"},"content":"    }"},{"lineNumber":10,"author":{"gitId":"xiinweii98"},"content":"}"}],"authorContributionMap":{"xiinweii98":10}},{"path":"src/main/java/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"xiinweii98"},"content":"import java.time.LocalDate;"},{"lineNumber":2,"author":{"gitId":"xiinweii98"},"content":"import java.time.format.DateTimeFormatter;"},{"lineNumber":3,"author":{"gitId":"xiinweii98"},"content":""},{"lineNumber":4,"author":{"gitId":"xiinweii98"},"content":"public class Event extends Task {"},{"lineNumber":5,"author":{"gitId":"xiinweii98"},"content":"    private LocalDate at;"},{"lineNumber":6,"author":{"gitId":"xiinweii98"},"content":""},{"lineNumber":7,"author":{"gitId":"xiinweii98"},"content":"    public Event(String name, LocalDate at) throws DukeException {"},{"lineNumber":8,"author":{"gitId":"xiinweii98"},"content":"        super(name);"},{"lineNumber":9,"author":{"gitId":"xiinweii98"},"content":"        this.at \u003d at;"},{"lineNumber":10,"author":{"gitId":"xiinweii98"},"content":"    }"},{"lineNumber":11,"author":{"gitId":"xiinweii98"},"content":""},{"lineNumber":12,"author":{"gitId":"xiinweii98"},"content":"    public Event(String name, LocalDate at, boolean done) {"},{"lineNumber":13,"author":{"gitId":"xiinweii98"},"content":"        super(name, done);"},{"lineNumber":14,"author":{"gitId":"xiinweii98"},"content":"        this.at \u003d at;"},{"lineNumber":15,"author":{"gitId":"xiinweii98"},"content":"    }"},{"lineNumber":16,"author":{"gitId":"xiinweii98"},"content":""},{"lineNumber":17,"author":{"gitId":"xiinweii98"},"content":"    public LocalDate getAt() {"},{"lineNumber":18,"author":{"gitId":"xiinweii98"},"content":"        return this.at;"},{"lineNumber":19,"author":{"gitId":"xiinweii98"},"content":"    }"},{"lineNumber":20,"author":{"gitId":"xiinweii98"},"content":""},{"lineNumber":21,"author":{"gitId":"xiinweii98"},"content":"    @Override"},{"lineNumber":22,"author":{"gitId":"xiinweii98"},"content":"    public String getStatus() {"},{"lineNumber":23,"author":{"gitId":"xiinweii98"},"content":"        return \"[E]\" + super.getStatus() + \" (at: \" + this.at.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\")) + \")\";"},{"lineNumber":24,"author":{"gitId":"xiinweii98"},"content":"    }"},{"lineNumber":25,"author":{"gitId":"xiinweii98"},"content":"}"}],"authorContributionMap":{"xiinweii98":25}},{"path":"src/main/java/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"xiinweii98"},"content":"public class Task {"},{"lineNumber":2,"author":{"gitId":"xiinweii98"},"content":"    private String name;"},{"lineNumber":3,"author":{"gitId":"xiinweii98"},"content":"    private boolean done;"},{"lineNumber":4,"author":{"gitId":"xiinweii98"},"content":""},{"lineNumber":5,"author":{"gitId":"xiinweii98"},"content":"    Task(String name) {"},{"lineNumber":6,"author":{"gitId":"xiinweii98"},"content":"        this.name \u003d name;"},{"lineNumber":7,"author":{"gitId":"xiinweii98"},"content":"        this.done \u003d false;"},{"lineNumber":8,"author":{"gitId":"xiinweii98"},"content":"    }"},{"lineNumber":9,"author":{"gitId":"xiinweii98"},"content":""},{"lineNumber":10,"author":{"gitId":"xiinweii98"},"content":"    Task(String name, boolean done) {"},{"lineNumber":11,"author":{"gitId":"xiinweii98"},"content":"        this.name \u003d name;"},{"lineNumber":12,"author":{"gitId":"xiinweii98"},"content":"        this.done \u003d done;"},{"lineNumber":13,"author":{"gitId":"xiinweii98"},"content":"    }"},{"lineNumber":14,"author":{"gitId":"xiinweii98"},"content":""},{"lineNumber":15,"author":{"gitId":"xiinweii98"},"content":"    public boolean isDone() {"},{"lineNumber":16,"author":{"gitId":"xiinweii98"},"content":"        return this.done;"},{"lineNumber":17,"author":{"gitId":"xiinweii98"},"content":"    }"},{"lineNumber":18,"author":{"gitId":"xiinweii98"},"content":""},{"lineNumber":19,"author":{"gitId":"xiinweii98"},"content":"    public String getName() {"},{"lineNumber":20,"author":{"gitId":"xiinweii98"},"content":"        return this.name;"},{"lineNumber":21,"author":{"gitId":"xiinweii98"},"content":"    }"},{"lineNumber":22,"author":{"gitId":"xiinweii98"},"content":""},{"lineNumber":23,"author":{"gitId":"xiinweii98"},"content":"    public String getStatus() {"},{"lineNumber":24,"author":{"gitId":"xiinweii98"},"content":"        return \"[\" + (this.done ? \"\\u2713\" : \"\\u2718\") + \"] \" + this.name;"},{"lineNumber":25,"author":{"gitId":"xiinweii98"},"content":"    }"},{"lineNumber":26,"author":{"gitId":"xiinweii98"},"content":""},{"lineNumber":27,"author":{"gitId":"xiinweii98"},"content":"    public void markDone() {"},{"lineNumber":28,"author":{"gitId":"xiinweii98"},"content":"        this.done \u003d true;"},{"lineNumber":29,"author":{"gitId":"xiinweii98"},"content":"    }"},{"lineNumber":30,"author":{"gitId":"xiinweii98"},"content":""},{"lineNumber":31,"author":{"gitId":"xiinweii98"},"content":"}"}],"authorContributionMap":{"xiinweii98":31}},{"path":"src/main/java/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"xiinweii98"},"content":"public class Todo extends Task {"},{"lineNumber":2,"author":{"gitId":"xiinweii98"},"content":"    Todo(String name) throws DukeException {"},{"lineNumber":3,"author":{"gitId":"xiinweii98"},"content":"        super(name);"},{"lineNumber":4,"author":{"gitId":"xiinweii98"},"content":"        if (name.isBlank()) {"},{"lineNumber":5,"author":{"gitId":"xiinweii98"},"content":"            throw new DukeException(\"The description of a todo cannot be empty.\");"},{"lineNumber":6,"author":{"gitId":"xiinweii98"},"content":"        }"},{"lineNumber":7,"author":{"gitId":"xiinweii98"},"content":"    }"},{"lineNumber":8,"author":{"gitId":"xiinweii98"},"content":""},{"lineNumber":9,"author":{"gitId":"xiinweii98"},"content":"    Todo(String name, boolean done) {"},{"lineNumber":10,"author":{"gitId":"xiinweii98"},"content":"        super(name, done);"},{"lineNumber":11,"author":{"gitId":"xiinweii98"},"content":"    }"},{"lineNumber":12,"author":{"gitId":"xiinweii98"},"content":""},{"lineNumber":13,"author":{"gitId":"xiinweii98"},"content":"    @Override"},{"lineNumber":14,"author":{"gitId":"xiinweii98"},"content":"    public String getStatus() {"},{"lineNumber":15,"author":{"gitId":"xiinweii98"},"content":"        return \"[T]\" + super.getStatus();"},{"lineNumber":16,"author":{"gitId":"xiinweii98"},"content":"    }"},{"lineNumber":17,"author":{"gitId":"xiinweii98"},"content":"}"}],"authorContributionMap":{"xiinweii98":17}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"xiinweii98"},"content":"todo read book"},{"lineNumber":2,"author":{"gitId":"xiinweii98"},"content":"deadline return book /by June 6th"},{"lineNumber":3,"author":{"gitId":"xiinweii98"},"content":"event project meeting /at Aug 6th 2-4pm"},{"lineNumber":4,"author":{"gitId":"xiinweii98"},"content":"todo join sports club"},{"lineNumber":5,"author":{"gitId":"xiinweii98"},"content":"todo borrow book"},{"lineNumber":6,"author":{"gitId":"xiinweii98"},"content":"todo   "},{"lineNumber":7,"author":{"gitId":"xiinweii98"},"content":"blah"},{"lineNumber":8,"author":{"gitId":"xiinweii98"},"content":"list"},{"lineNumber":9,"author":{"gitId":"xiinweii98"},"content":"done 1"},{"lineNumber":10,"author":{"gitId":"xiinweii98"},"content":"done 2"},{"lineNumber":11,"author":{"gitId":"xiinweii98"},"content":"done 4"},{"lineNumber":12,"author":{"gitId":"xiinweii98"},"content":"list"},{"lineNumber":13,"author":{"gitId":"xiinweii98"},"content":"delete 3"},{"lineNumber":14,"author":{"gitId":"xiinweii98"},"content":"bye"}],"authorContributionMap":{"xiinweii98":14}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF"},{"lineNumber":2,"author":{"gitId":"-"},"content":""},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin"},{"lineNumber":5,"author":{"gitId":"-"},"content":""},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run"},{"lineNumber":7,"author":{"gitId":"xiinweii98"},"content":"del ACTUAL.TXT"},{"lineNumber":8,"author":{"gitId":"-"},"content":""},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder"},{"lineNumber":10,"author":{"gitId":"-"},"content":"javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\*.java"},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 ("},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1"},{"lineNumber":14,"author":{"gitId":"-"},"content":")"},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0"},{"lineNumber":16,"author":{"gitId":"-"},"content":""},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"},{"lineNumber":18,"author":{"gitId":"-"},"content":"java -classpath ..\\bin Duke \u003c input.txt \u003e ACTUAL.TXT"},{"lineNumber":19,"author":{"gitId":"-"},"content":""},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM compare the output to the expected output"},{"lineNumber":21,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT"}],"authorContributionMap":{"xiinweii98":1,"-":20}}]
