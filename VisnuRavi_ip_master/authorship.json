[{"path":"src/main/java/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"VisnuRavi"},"content":"import java.time.LocalDateTime;"},{"lineNumber":2,"author":{"gitId":"VisnuRavi"},"content":"import java.time.format.DateTimeFormatter;"},{"lineNumber":3,"author":{"gitId":"VisnuRavi"},"content":""},{"lineNumber":4,"author":{"gitId":"VisnuRavi"},"content":"public class Deadline extends Task {"},{"lineNumber":5,"author":{"gitId":"VisnuRavi"},"content":"    public LocalDateTime deadline;"},{"lineNumber":6,"author":{"gitId":"VisnuRavi"},"content":""},{"lineNumber":7,"author":{"gitId":"VisnuRavi"},"content":"    public Deadline(String str) {"},{"lineNumber":8,"author":{"gitId":"VisnuRavi"},"content":"        super(str);//super must be 1st line.."},{"lineNumber":9,"author":{"gitId":"VisnuRavi"},"content":"        String[] split \u003d str.split(\"/\");"},{"lineNumber":10,"author":{"gitId":"VisnuRavi"},"content":"        if(split.length \u003c 2) {"},{"lineNumber":11,"author":{"gitId":"VisnuRavi"},"content":"            throw new IllegalArgumentException();"},{"lineNumber":12,"author":{"gitId":"VisnuRavi"},"content":"        }"},{"lineNumber":13,"author":{"gitId":"VisnuRavi"},"content":"        this.task \u003d split[0].trim();"},{"lineNumber":14,"author":{"gitId":"VisnuRavi"},"content":"        String trimmed \u003d split[1].trim();"},{"lineNumber":15,"author":{"gitId":"VisnuRavi"},"content":"        String[] split1 \u003d trimmed.split(\" \");"},{"lineNumber":16,"author":{"gitId":"VisnuRavi"},"content":"        if(split1.length !\u003d 2) {"},{"lineNumber":17,"author":{"gitId":"VisnuRavi"},"content":"            throw new ArrayIndexOutOfBoundsException(Ui.lineGetter() + \" Enter date and time \" +"},{"lineNumber":18,"author":{"gitId":"VisnuRavi"},"content":"                    \"in this format yyyy-mm-dd hh:mm\\n\" + Ui.lineGetter());"},{"lineNumber":19,"author":{"gitId":"VisnuRavi"},"content":"        }"},{"lineNumber":20,"author":{"gitId":"VisnuRavi"},"content":"        this.deadline \u003d LocalDateTime.parse(split1[0].trim() + \"T\" + split1[1]);"},{"lineNumber":21,"author":{"gitId":"VisnuRavi"},"content":"    }"},{"lineNumber":22,"author":{"gitId":"VisnuRavi"},"content":""},{"lineNumber":23,"author":{"gitId":"VisnuRavi"},"content":"    public Deadline(String[] str, boolean isDone) {//call from harddisc"},{"lineNumber":24,"author":{"gitId":"VisnuRavi"},"content":"        super(str[2], isDone);"},{"lineNumber":25,"author":{"gitId":"VisnuRavi"},"content":"        this.deadline \u003d LocalDateTime.parse(str[3]);"},{"lineNumber":26,"author":{"gitId":"VisnuRavi"},"content":"    }"},{"lineNumber":27,"author":{"gitId":"VisnuRavi"},"content":""},{"lineNumber":28,"author":{"gitId":"VisnuRavi"},"content":"    @Override"},{"lineNumber":29,"author":{"gitId":"VisnuRavi"},"content":"    public String toString() {"},{"lineNumber":30,"author":{"gitId":"VisnuRavi"},"content":"        return \"[D]\" + super.toString() + \" \" + \"(by: \" +"},{"lineNumber":31,"author":{"gitId":"VisnuRavi"},"content":"                deadline.format(DateTimeFormatter.ofPattern(\"MMM d yyyy HH:mm\")) + \")\";"},{"lineNumber":32,"author":{"gitId":"VisnuRavi"},"content":"    }"},{"lineNumber":33,"author":{"gitId":"VisnuRavi"},"content":"}"}],"authorContributionMap":{"VisnuRavi":33}},{"path":"src/main/java/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"VisnuRavi"},"content":"import java.io.FileNotFoundException;"},{"lineNumber":2,"author":{"gitId":"VisnuRavi"},"content":"import java.io.IOException;"},{"lineNumber":3,"author":{"gitId":"VisnuRavi"},"content":"import java.time.format.DateTimeParseException;"},{"lineNumber":4,"author":{"gitId":"VisnuRavi"},"content":"import java.util.Scanner;"},{"lineNumber":5,"author":{"gitId":"VisnuRavi"},"content":"import java.util.ArrayList;"},{"lineNumber":6,"author":{"gitId":"VisnuRavi"},"content":"import java.io.File;"},{"lineNumber":7,"author":{"gitId":"VisnuRavi"},"content":"import java.nio.file.Files;"},{"lineNumber":8,"author":{"gitId":"VisnuRavi"},"content":"import java.nio.file.Paths;"},{"lineNumber":9,"author":{"gitId":"VisnuRavi"},"content":""},{"lineNumber":10,"author":{"gitId":"VisnuRavi"},"content":""},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class Duke {"},{"lineNumber":12,"author":{"gitId":"VisnuRavi"},"content":""},{"lineNumber":13,"author":{"gitId":"VisnuRavi"},"content":"    private static String folderPath \u003d \"./src/main/java/data/\";"},{"lineNumber":14,"author":{"gitId":"VisnuRavi"},"content":"    private static String fileName \u003d \"All Tasks.txt\";"},{"lineNumber":15,"author":{"gitId":"VisnuRavi"},"content":""},{"lineNumber":16,"author":{"gitId":"VisnuRavi"},"content":"    public static void run() {"},{"lineNumber":17,"author":{"gitId":"VisnuRavi"},"content":"        Scanner sc \u003d new Scanner(System.in);"},{"lineNumber":18,"author":{"gitId":"VisnuRavi"},"content":"        sc.useDelimiter(\"\\n\");//only take in lines and not by whitespace, coz have one case where \" \" keeps the sc running to the next"},{"lineNumber":19,"author":{"gitId":"VisnuRavi"},"content":"        //String relPath \u003d \"./src/main/java/data/All Tasks.txt\";//for runtest.sh put .. coz the path for that is diff"},{"lineNumber":20,"author":{"gitId":"VisnuRavi"},"content":"        // compared to this"},{"lineNumber":21,"author":{"gitId":"VisnuRavi"},"content":""},{"lineNumber":22,"author":{"gitId":"VisnuRavi"},"content":"        try {"},{"lineNumber":23,"author":{"gitId":"VisnuRavi"},"content":"            //File f \u003d new File(\"./\");"},{"lineNumber":24,"author":{"gitId":"VisnuRavi"},"content":"            //System.out.println(f.getAbsolutePath());//to get the path to see which path java is looking"},{"lineNumber":25,"author":{"gitId":"VisnuRavi"},"content":"            ArrayList\u003cTask\u003e prevTasks \u003d FileAccessor.ReadFromTasks(folderPath + fileName, new ArrayList\u003cTask\u003e());"},{"lineNumber":26,"author":{"gitId":"VisnuRavi"},"content":"            TaskList.setList(prevTasks);"},{"lineNumber":27,"author":{"gitId":"VisnuRavi"},"content":"        } catch (FileNotFoundException | IllegalArgumentException e) {"},{"lineNumber":28,"author":{"gitId":"VisnuRavi"},"content":"            //System.out.println(\"EXCEPTION\");"},{"lineNumber":29,"author":{"gitId":"VisnuRavi"},"content":"            try {"},{"lineNumber":30,"author":{"gitId":"VisnuRavi"},"content":"                Files.createDirectory(Paths.get(folderPath));"},{"lineNumber":31,"author":{"gitId":"VisnuRavi"},"content":"                TaskList.setList(new ArrayList\u003cTask\u003e());"},{"lineNumber":32,"author":{"gitId":"VisnuRavi"},"content":"            } catch (IOException e1){}//shld just be ioexception, shldnt come to this catch block"},{"lineNumber":33,"author":{"gitId":"VisnuRavi"},"content":"            //File f \u003d new File(relPath); //no need to create file here will get auto created when writing"},{"lineNumber":34,"author":{"gitId":"VisnuRavi"},"content":"        }"},{"lineNumber":35,"author":{"gitId":"VisnuRavi"},"content":""},{"lineNumber":36,"author":{"gitId":"VisnuRavi"},"content":"        //String line \u003d \"____________________________________________\"+"},{"lineNumber":37,"author":{"gitId":"VisnuRavi"},"content":"        //        \"________________\\n\";"},{"lineNumber":38,"author":{"gitId":"VisnuRavi"},"content":"        System.out.println(Ui.intro());"},{"lineNumber":39,"author":{"gitId":"VisnuRavi"},"content":""},{"lineNumber":40,"author":{"gitId":"VisnuRavi"},"content":"        while(sc.hasNext()) {"},{"lineNumber":41,"author":{"gitId":"VisnuRavi"},"content":"            String str \u003d sc.nextLine();"},{"lineNumber":42,"author":{"gitId":"VisnuRavi"},"content":"            str \u003d Parser.trimWhiteSpaces(str);"},{"lineNumber":43,"author":{"gitId":"VisnuRavi"},"content":"            if (str.equals(\"bye\")) {"},{"lineNumber":44,"author":{"gitId":"VisnuRavi"},"content":"                break;"},{"lineNumber":45,"author":{"gitId":"VisnuRavi"},"content":"            } else if(str.length()\u003d\u003d0) {//if just enter spaces"},{"lineNumber":46,"author":{"gitId":"VisnuRavi"},"content":"                System.out.println(Ui.onlySpaces());"},{"lineNumber":47,"author":{"gitId":"VisnuRavi"},"content":"            } else if (str.equals(\"list\")) {"},{"lineNumber":48,"author":{"gitId":"VisnuRavi"},"content":"                try {"},{"lineNumber":49,"author":{"gitId":"VisnuRavi"},"content":"                    System.out.println(TaskList.printList());"},{"lineNumber":50,"author":{"gitId":"VisnuRavi"},"content":"                } catch (IllegalArgumentException e) {"},{"lineNumber":51,"author":{"gitId":"VisnuRavi"},"content":"                    System.out.println(e.getMessage());"},{"lineNumber":52,"author":{"gitId":"VisnuRavi"},"content":"                }"},{"lineNumber":53,"author":{"gitId":"VisnuRavi"},"content":"            } else {"},{"lineNumber":54,"author":{"gitId":"VisnuRavi"},"content":"                try {"},{"lineNumber":55,"author":{"gitId":"VisnuRavi"},"content":"                    String[] split \u003d Parser.firstAndRest(str);"},{"lineNumber":56,"author":{"gitId":"VisnuRavi"},"content":"                    if (split[0].equals(\"done\")) {"},{"lineNumber":57,"author":{"gitId":"VisnuRavi"},"content":"                        try {"},{"lineNumber":58,"author":{"gitId":"VisnuRavi"},"content":"                            int num \u003d Parser.makeToInt(split[1]);"},{"lineNumber":59,"author":{"gitId":"VisnuRavi"},"content":"                            Task done \u003d TaskList.doneTask(num - 1);"},{"lineNumber":60,"author":{"gitId":"VisnuRavi"},"content":"                            System.out.println(Ui.doneTask(done));"},{"lineNumber":61,"author":{"gitId":"VisnuRavi"},"content":"                        } catch (NumberFormatException | IndexOutOfBoundsException e) {"},{"lineNumber":62,"author":{"gitId":"VisnuRavi"},"content":"                            System.out.println(e.getMessage());//rmb do for parse"},{"lineNumber":63,"author":{"gitId":"VisnuRavi"},"content":"                        }"},{"lineNumber":64,"author":{"gitId":"VisnuRavi"},"content":"                    } else if (split[0].equals(\"delete\")) {"},{"lineNumber":65,"author":{"gitId":"VisnuRavi"},"content":"                        try {"},{"lineNumber":66,"author":{"gitId":"VisnuRavi"},"content":"                            int num \u003d Parser.makeToInt(split[1]);"},{"lineNumber":67,"author":{"gitId":"VisnuRavi"},"content":"                            Task del \u003d TaskList.deleteTask(num - 1);"},{"lineNumber":68,"author":{"gitId":"VisnuRavi"},"content":"                            System.out.println(Ui.deleteTask(del, TaskList.listSize()));"},{"lineNumber":69,"author":{"gitId":"VisnuRavi"},"content":"                        } catch (NumberFormatException | IndexOutOfBoundsException e) {"},{"lineNumber":70,"author":{"gitId":"VisnuRavi"},"content":"                            System.out.println(e.getMessage());//rmb do for parse"},{"lineNumber":71,"author":{"gitId":"VisnuRavi"},"content":"                        }"},{"lineNumber":72,"author":{"gitId":"VisnuRavi"},"content":"                    } else if (split[0].equals(\"todo\") || split[0].equals(\"deadline\")"},{"lineNumber":73,"author":{"gitId":"VisnuRavi"},"content":"                            || split[0].equals(\"event\")) {"},{"lineNumber":74,"author":{"gitId":"VisnuRavi"},"content":"                        Task task;"},{"lineNumber":75,"author":{"gitId":"VisnuRavi"},"content":"                        if (split[0].equals(\"todo\")) {"},{"lineNumber":76,"author":{"gitId":"VisnuRavi"},"content":"                            task \u003d new Todo(split[1]);"},{"lineNumber":77,"author":{"gitId":"VisnuRavi"},"content":"                        } else if (split[0].equals(\"deadline\")) {"},{"lineNumber":78,"author":{"gitId":"VisnuRavi"},"content":"                            task \u003d new Deadline(split[1]);"},{"lineNumber":79,"author":{"gitId":"VisnuRavi"},"content":"                        } else {"},{"lineNumber":80,"author":{"gitId":"VisnuRavi"},"content":"                            task \u003d new Event(split[1]);"},{"lineNumber":81,"author":{"gitId":"VisnuRavi"},"content":"                        }"},{"lineNumber":82,"author":{"gitId":"VisnuRavi"},"content":"                        TaskList.addTask(task);"},{"lineNumber":83,"author":{"gitId":"VisnuRavi"},"content":"                        System.out.println(Ui.addTask(task, TaskList.listSize()));"},{"lineNumber":84,"author":{"gitId":"VisnuRavi"},"content":"                    } else {"},{"lineNumber":85,"author":{"gitId":"VisnuRavi"},"content":"                        throw new IllegalArgumentException();"},{"lineNumber":86,"author":{"gitId":"VisnuRavi"},"content":"                    }"},{"lineNumber":87,"author":{"gitId":"VisnuRavi"},"content":""},{"lineNumber":88,"author":{"gitId":"VisnuRavi"},"content":"                    try {"},{"lineNumber":89,"author":{"gitId":"VisnuRavi"},"content":"                        FileAccessor.WriteToTasks(folderPath+fileName, TaskList.getList());"},{"lineNumber":90,"author":{"gitId":"VisnuRavi"},"content":"                    } catch (IOException e) {"},{"lineNumber":91,"author":{"gitId":"VisnuRavi"},"content":"                        System.out.println(Ui.unableSave());"},{"lineNumber":92,"author":{"gitId":"VisnuRavi"},"content":"                    }"},{"lineNumber":93,"author":{"gitId":"VisnuRavi"},"content":"                } catch (IllegalArgumentException e) {"},{"lineNumber":94,"author":{"gitId":"VisnuRavi"},"content":"                    System.out.println(Ui.illegalArgExc());"},{"lineNumber":95,"author":{"gitId":"VisnuRavi"},"content":"                } catch (DateTimeParseException e) {"},{"lineNumber":96,"author":{"gitId":"VisnuRavi"},"content":"                    System.out.println(Ui.dateTimeParseExc());"},{"lineNumber":97,"author":{"gitId":"VisnuRavi"},"content":"                } catch (ArrayIndexOutOfBoundsException e) {"},{"lineNumber":98,"author":{"gitId":"VisnuRavi"},"content":"                    System.out.println(e.getMessage());//e.getmessage as for the diff array"},{"lineNumber":99,"author":{"gitId":"VisnuRavi"},"content":"                    // exception"},{"lineNumber":100,"author":{"gitId":"VisnuRavi"},"content":"                    // print their specific msg"},{"lineNumber":101,"author":{"gitId":"VisnuRavi"},"content":"                }"},{"lineNumber":102,"author":{"gitId":"VisnuRavi"},"content":"            }"},{"lineNumber":103,"author":{"gitId":"VisnuRavi"},"content":"        }"},{"lineNumber":104,"author":{"gitId":"VisnuRavi"},"content":"        System.out.println(Ui.bye());"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":106,"author":{"gitId":"VisnuRavi"},"content":""},{"lineNumber":107,"author":{"gitId":"-"},"content":"    public static void main(String[] args) {"},{"lineNumber":108,"author":{"gitId":"VisnuRavi"},"content":"        Duke.run();"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":110,"author":{"gitId":"-"},"content":"}"}],"authorContributionMap":{"VisnuRavi":105,"-":5}},{"path":"src/main/java/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"VisnuRavi"},"content":"import java.time.LocalDateTime;"},{"lineNumber":2,"author":{"gitId":"VisnuRavi"},"content":"import java.time.format.DateTimeFormatter;"},{"lineNumber":3,"author":{"gitId":"VisnuRavi"},"content":""},{"lineNumber":4,"author":{"gitId":"VisnuRavi"},"content":"public class Event extends Task {"},{"lineNumber":5,"author":{"gitId":"VisnuRavi"},"content":"    public LocalDateTime event;"},{"lineNumber":6,"author":{"gitId":"VisnuRavi"},"content":""},{"lineNumber":7,"author":{"gitId":"VisnuRavi"},"content":"    public Event(String str) {"},{"lineNumber":8,"author":{"gitId":"VisnuRavi"},"content":"        super(str);//super must be 1st line.."},{"lineNumber":9,"author":{"gitId":"VisnuRavi"},"content":"        String[] split \u003d str.split(\"/\");"},{"lineNumber":10,"author":{"gitId":"VisnuRavi"},"content":"        if(split.length \u003c 2) {"},{"lineNumber":11,"author":{"gitId":"VisnuRavi"},"content":"            throw new IllegalArgumentException();"},{"lineNumber":12,"author":{"gitId":"VisnuRavi"},"content":"        }"},{"lineNumber":13,"author":{"gitId":"VisnuRavi"},"content":"        this.task \u003d split[0].trim();"},{"lineNumber":14,"author":{"gitId":"VisnuRavi"},"content":"        String trimmed \u003d split[1].trim();"},{"lineNumber":15,"author":{"gitId":"VisnuRavi"},"content":"        String[] split1 \u003d trimmed.split(\" \");"},{"lineNumber":16,"author":{"gitId":"VisnuRavi"},"content":"        if(split1.length !\u003d 2) {"},{"lineNumber":17,"author":{"gitId":"VisnuRavi"},"content":"            throw new ArrayIndexOutOfBoundsException(Ui.lineGetter() + \" Enter date and time \" +"},{"lineNumber":18,"author":{"gitId":"VisnuRavi"},"content":"                    \"in this format yyyy-mm-dd hh:mm\\n\" + Ui.lineGetter());"},{"lineNumber":19,"author":{"gitId":"VisnuRavi"},"content":"        }"},{"lineNumber":20,"author":{"gitId":"VisnuRavi"},"content":"        this.event \u003d LocalDateTime.parse(split1[0].trim() + \"T\" + split1[1]);"},{"lineNumber":21,"author":{"gitId":"VisnuRavi"},"content":"    }"},{"lineNumber":22,"author":{"gitId":"VisnuRavi"},"content":""},{"lineNumber":23,"author":{"gitId":"VisnuRavi"},"content":"    public Event(String[] str, boolean isDone) {//call from harddisc"},{"lineNumber":24,"author":{"gitId":"VisnuRavi"},"content":"        super(str[2], isDone);"},{"lineNumber":25,"author":{"gitId":"VisnuRavi"},"content":"        this.event \u003d LocalDateTime.parse(str[3]);"},{"lineNumber":26,"author":{"gitId":"VisnuRavi"},"content":"    }"},{"lineNumber":27,"author":{"gitId":"VisnuRavi"},"content":""},{"lineNumber":28,"author":{"gitId":"VisnuRavi"},"content":"    @Override"},{"lineNumber":29,"author":{"gitId":"VisnuRavi"},"content":"    public String toString() {"},{"lineNumber":30,"author":{"gitId":"VisnuRavi"},"content":"        return \"[E]\" + super.toString() +\" \"+ \"(at: \""},{"lineNumber":31,"author":{"gitId":"VisnuRavi"},"content":"                + event.format(DateTimeFormatter.ofPattern(\"MMM d yyyy HH:mm\")) + \")\";"},{"lineNumber":32,"author":{"gitId":"VisnuRavi"},"content":"    }"},{"lineNumber":33,"author":{"gitId":"VisnuRavi"},"content":"}"}],"authorContributionMap":{"VisnuRavi":33}},{"path":"src/main/java/FileAccessor.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"VisnuRavi"},"content":"import java.io.File;"},{"lineNumber":2,"author":{"gitId":"VisnuRavi"},"content":"import java.io.FileNotFoundException;"},{"lineNumber":3,"author":{"gitId":"VisnuRavi"},"content":"import java.io.IOException;"},{"lineNumber":4,"author":{"gitId":"VisnuRavi"},"content":"import java.util.ArrayList;"},{"lineNumber":5,"author":{"gitId":"VisnuRavi"},"content":"import java.util.Scanner;"},{"lineNumber":6,"author":{"gitId":"VisnuRavi"},"content":"import java.io.FileWriter;"},{"lineNumber":7,"author":{"gitId":"VisnuRavi"},"content":"import java.io.IOException;"},{"lineNumber":8,"author":{"gitId":"VisnuRavi"},"content":""},{"lineNumber":9,"author":{"gitId":"VisnuRavi"},"content":"public class FileAccessor {"},{"lineNumber":10,"author":{"gitId":"VisnuRavi"},"content":"    public static ArrayList\u003cTask\u003e ReadFromTasks(String path, ArrayList\u003cTask\u003e tasks) throws FileNotFoundException {"},{"lineNumber":11,"author":{"gitId":"VisnuRavi"},"content":"        File f \u003d new File(path);"},{"lineNumber":12,"author":{"gitId":"VisnuRavi"},"content":"        Scanner sc \u003d new Scanner(f);"},{"lineNumber":13,"author":{"gitId":"VisnuRavi"},"content":"        while(sc.hasNext()) {"},{"lineNumber":14,"author":{"gitId":"VisnuRavi"},"content":"            String s \u003d sc.nextLine();"},{"lineNumber":15,"author":{"gitId":"VisnuRavi"},"content":"            String[] split \u003d s.split(\"\\\\|\");// \u0027|\u0027 is a special character, has a diff meaning also so need to escape"},{"lineNumber":16,"author":{"gitId":"VisnuRavi"},"content":"            // with backslash. but backslash also special character, so need to escape that too so another backslash."},{"lineNumber":17,"author":{"gitId":"VisnuRavi"},"content":"            //or can also escape with [|]"},{"lineNumber":18,"author":{"gitId":"VisnuRavi"},"content":"            boolean isDone \u003d false;"},{"lineNumber":19,"author":{"gitId":"VisnuRavi"},"content":"            if(split[1].equals(\"1\")) {"},{"lineNumber":20,"author":{"gitId":"VisnuRavi"},"content":"                isDone \u003d true;"},{"lineNumber":21,"author":{"gitId":"VisnuRavi"},"content":"            }"},{"lineNumber":22,"author":{"gitId":"VisnuRavi"},"content":"            //consider indexoutofbounds exception"},{"lineNumber":23,"author":{"gitId":"VisnuRavi"},"content":"            if(split[0].equals(\"T\")) {"},{"lineNumber":24,"author":{"gitId":"VisnuRavi"},"content":"                tasks.add(new Todo(split[2], isDone));"},{"lineNumber":25,"author":{"gitId":"VisnuRavi"},"content":"            } else if (split[0].equals(\"E\")) {"},{"lineNumber":26,"author":{"gitId":"VisnuRavi"},"content":"                tasks.add(new Event(split, isDone));"},{"lineNumber":27,"author":{"gitId":"VisnuRavi"},"content":"            } else if (split[0].equals(\"D\")) {"},{"lineNumber":28,"author":{"gitId":"VisnuRavi"},"content":"                tasks.add(new Deadline(split, isDone));"},{"lineNumber":29,"author":{"gitId":"VisnuRavi"},"content":"            } else {"},{"lineNumber":30,"author":{"gitId":"VisnuRavi"},"content":"                System.out.println(split[0]);"},{"lineNumber":31,"author":{"gitId":"VisnuRavi"},"content":"                throw new IllegalArgumentException();"},{"lineNumber":32,"author":{"gitId":"VisnuRavi"},"content":"            }"},{"lineNumber":33,"author":{"gitId":"VisnuRavi"},"content":"        }"},{"lineNumber":34,"author":{"gitId":"VisnuRavi"},"content":"        return tasks;"},{"lineNumber":35,"author":{"gitId":"VisnuRavi"},"content":"    }"},{"lineNumber":36,"author":{"gitId":"VisnuRavi"},"content":""},{"lineNumber":37,"author":{"gitId":"VisnuRavi"},"content":"    //assume in correct format"},{"lineNumber":38,"author":{"gitId":"VisnuRavi"},"content":"    public static void WriteToTasks(String path, ArrayList\u003cTask\u003e tasks) throws IOException {"},{"lineNumber":39,"author":{"gitId":"VisnuRavi"},"content":"        FileWriter fw \u003d new FileWriter(path);"},{"lineNumber":40,"author":{"gitId":"VisnuRavi"},"content":"        String s \u003d \"\";"},{"lineNumber":41,"author":{"gitId":"VisnuRavi"},"content":"        for(Task task : tasks) {"},{"lineNumber":42,"author":{"gitId":"VisnuRavi"},"content":"            String done \u003d \"0\";"},{"lineNumber":43,"author":{"gitId":"VisnuRavi"},"content":"            if(task.isDone) {"},{"lineNumber":44,"author":{"gitId":"VisnuRavi"},"content":"                done \u003d \"1\";"},{"lineNumber":45,"author":{"gitId":"VisnuRavi"},"content":"            }"},{"lineNumber":46,"author":{"gitId":"VisnuRavi"},"content":"            //\u0027\\n\u0027 may not work in all OS, use the System.lineSeparator()"},{"lineNumber":47,"author":{"gitId":"VisnuRavi"},"content":"            if(task instanceof Todo) {"},{"lineNumber":48,"author":{"gitId":"VisnuRavi"},"content":"                Todo todo \u003d (Todo)task;"},{"lineNumber":49,"author":{"gitId":"VisnuRavi"},"content":"                s \u003d s + \"T|\" + done + \"|\" + todo.task + System.lineSeparator();"},{"lineNumber":50,"author":{"gitId":"VisnuRavi"},"content":"            } else if (task instanceof Deadline) {"},{"lineNumber":51,"author":{"gitId":"VisnuRavi"},"content":"                Deadline deadline \u003d (Deadline)task;"},{"lineNumber":52,"author":{"gitId":"VisnuRavi"},"content":"                s \u003d s + \"D|\" + done + \"|\" + deadline.task + \"|\" + deadline.deadline + System.lineSeparator();"},{"lineNumber":53,"author":{"gitId":"VisnuRavi"},"content":"            } else {"},{"lineNumber":54,"author":{"gitId":"VisnuRavi"},"content":"                Event event \u003d (Event)task;"},{"lineNumber":55,"author":{"gitId":"VisnuRavi"},"content":"                s \u003d s + \"E|\" + done + \"|\" + event.task + \"|\" + event.event + System.lineSeparator();"},{"lineNumber":56,"author":{"gitId":"VisnuRavi"},"content":"            }"},{"lineNumber":57,"author":{"gitId":"VisnuRavi"},"content":"        }"},{"lineNumber":58,"author":{"gitId":"VisnuRavi"},"content":"        fw.write(s);//write all as one string outside or else will keep writing for each task, but somehow give"},{"lineNumber":59,"author":{"gitId":"VisnuRavi"},"content":"        // ioexception when put inside for loop?"},{"lineNumber":60,"author":{"gitId":"VisnuRavi"},"content":"        fw.close();//rmb to close"},{"lineNumber":61,"author":{"gitId":"VisnuRavi"},"content":"    }"},{"lineNumber":62,"author":{"gitId":"VisnuRavi"},"content":"}"}],"authorContributionMap":{"VisnuRavi":62}},{"path":"src/main/java/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"VisnuRavi"},"content":"public class Parser {"},{"lineNumber":2,"author":{"gitId":"VisnuRavi"},"content":"    public static String trimWhiteSpaces(String str) {"},{"lineNumber":3,"author":{"gitId":"VisnuRavi"},"content":"        return str.trim();"},{"lineNumber":4,"author":{"gitId":"VisnuRavi"},"content":"    }"},{"lineNumber":5,"author":{"gitId":"VisnuRavi"},"content":""},{"lineNumber":6,"author":{"gitId":"VisnuRavi"},"content":"    public static String[] firstAndRest(String str) {"},{"lineNumber":7,"author":{"gitId":"VisnuRavi"},"content":"        String[] res \u003d new String[2];"},{"lineNumber":8,"author":{"gitId":"VisnuRavi"},"content":"        String[] split \u003d str.split(\" \");"},{"lineNumber":9,"author":{"gitId":"VisnuRavi"},"content":"        res[0] \u003d split[0];"},{"lineNumber":10,"author":{"gitId":"VisnuRavi"},"content":"        String rest \u003d \"\";"},{"lineNumber":11,"author":{"gitId":"VisnuRavi"},"content":"        for(int i \u003d 1; i \u003c split.length; i++) {"},{"lineNumber":12,"author":{"gitId":"VisnuRavi"},"content":"            rest +\u003d \" \" + split[i];"},{"lineNumber":13,"author":{"gitId":"VisnuRavi"},"content":"        }"},{"lineNumber":14,"author":{"gitId":"VisnuRavi"},"content":"        res[1] \u003d rest;"},{"lineNumber":15,"author":{"gitId":"VisnuRavi"},"content":"        return res;"},{"lineNumber":16,"author":{"gitId":"VisnuRavi"},"content":"    }"},{"lineNumber":17,"author":{"gitId":"VisnuRavi"},"content":""},{"lineNumber":18,"author":{"gitId":"VisnuRavi"},"content":"    public static int makeToInt(String str) {"},{"lineNumber":19,"author":{"gitId":"VisnuRavi"},"content":"        try {"},{"lineNumber":20,"author":{"gitId":"VisnuRavi"},"content":"            return Integer.parseInt(Parser.trimWhiteSpaces(str));"},{"lineNumber":21,"author":{"gitId":"VisnuRavi"},"content":"        } catch (NumberFormatException e) {"},{"lineNumber":22,"author":{"gitId":"VisnuRavi"},"content":"            throw new NumberFormatException(Ui.lineGetter() +"},{"lineNumber":23,"author":{"gitId":"VisnuRavi"},"content":"                    \" Enter a number after command, \u0027done (number)\u0027 or \u0027delete (number)\u0027\\n\""},{"lineNumber":24,"author":{"gitId":"VisnuRavi"},"content":"                     + Ui.lineGetter());"},{"lineNumber":25,"author":{"gitId":"VisnuRavi"},"content":"        }"},{"lineNumber":26,"author":{"gitId":"VisnuRavi"},"content":"    }"},{"lineNumber":27,"author":{"gitId":"VisnuRavi"},"content":"}"}],"authorContributionMap":{"VisnuRavi":27}},{"path":"src/main/java/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"VisnuRavi"},"content":"public class Task {"},{"lineNumber":2,"author":{"gitId":"VisnuRavi"},"content":"    public String task;"},{"lineNumber":3,"author":{"gitId":"VisnuRavi"},"content":"    public boolean isDone;"},{"lineNumber":4,"author":{"gitId":"VisnuRavi"},"content":""},{"lineNumber":5,"author":{"gitId":"VisnuRavi"},"content":"    public Task(String task) {"},{"lineNumber":6,"author":{"gitId":"VisnuRavi"},"content":"        task \u003d task.strip();"},{"lineNumber":7,"author":{"gitId":"VisnuRavi"},"content":"        this.task \u003d task;"},{"lineNumber":8,"author":{"gitId":"VisnuRavi"},"content":"        this.isDone \u003d false;"},{"lineNumber":9,"author":{"gitId":"VisnuRavi"},"content":"    }"},{"lineNumber":10,"author":{"gitId":"VisnuRavi"},"content":""},{"lineNumber":11,"author":{"gitId":"VisnuRavi"},"content":"    public Task(String task, boolean isDone) {"},{"lineNumber":12,"author":{"gitId":"VisnuRavi"},"content":"        task \u003d task.strip();"},{"lineNumber":13,"author":{"gitId":"VisnuRavi"},"content":"        this.task \u003d task;"},{"lineNumber":14,"author":{"gitId":"VisnuRavi"},"content":"        this.isDone \u003d isDone;"},{"lineNumber":15,"author":{"gitId":"VisnuRavi"},"content":"    }"},{"lineNumber":16,"author":{"gitId":"VisnuRavi"},"content":""},{"lineNumber":17,"author":{"gitId":"VisnuRavi"},"content":"    public String getStatusIcon() {"},{"lineNumber":18,"author":{"gitId":"VisnuRavi"},"content":"        if (isDone) {"},{"lineNumber":19,"author":{"gitId":"VisnuRavi"},"content":"            return \"\\u2713\";"},{"lineNumber":20,"author":{"gitId":"VisnuRavi"},"content":"        } else {"},{"lineNumber":21,"author":{"gitId":"VisnuRavi"},"content":"            return \"\\u2718\";"},{"lineNumber":22,"author":{"gitId":"VisnuRavi"},"content":"        }"},{"lineNumber":23,"author":{"gitId":"VisnuRavi"},"content":"    }"},{"lineNumber":24,"author":{"gitId":"VisnuRavi"},"content":""},{"lineNumber":25,"author":{"gitId":"VisnuRavi"},"content":"    @Override"},{"lineNumber":26,"author":{"gitId":"VisnuRavi"},"content":"    public String toString() {"},{"lineNumber":27,"author":{"gitId":"VisnuRavi"},"content":"        return \"[\" + getStatusIcon() + \"] \" + task;"},{"lineNumber":28,"author":{"gitId":"VisnuRavi"},"content":"    }"},{"lineNumber":29,"author":{"gitId":"VisnuRavi"},"content":""},{"lineNumber":30,"author":{"gitId":"VisnuRavi"},"content":"    public void doneTask() {"},{"lineNumber":31,"author":{"gitId":"VisnuRavi"},"content":"        isDone \u003d true;"},{"lineNumber":32,"author":{"gitId":"VisnuRavi"},"content":"    }"},{"lineNumber":33,"author":{"gitId":"VisnuRavi"},"content":"}"}],"authorContributionMap":{"VisnuRavi":33}},{"path":"src/main/java/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"VisnuRavi"},"content":"import java.util.ArrayList;"},{"lineNumber":2,"author":{"gitId":"VisnuRavi"},"content":""},{"lineNumber":3,"author":{"gitId":"VisnuRavi"},"content":"public class TaskList {"},{"lineNumber":4,"author":{"gitId":"VisnuRavi"},"content":"    private static ArrayList\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();"},{"lineNumber":5,"author":{"gitId":"VisnuRavi"},"content":""},{"lineNumber":6,"author":{"gitId":"VisnuRavi"},"content":"    public static void setList(ArrayList\u003cTask\u003e prevTasks) {"},{"lineNumber":7,"author":{"gitId":"VisnuRavi"},"content":"        tasks \u003d prevTasks;"},{"lineNumber":8,"author":{"gitId":"VisnuRavi"},"content":"    }"},{"lineNumber":9,"author":{"gitId":"VisnuRavi"},"content":""},{"lineNumber":10,"author":{"gitId":"VisnuRavi"},"content":"    public static ArrayList\u003cTask\u003e getList() {//prob with this is can change value as pass by ref"},{"lineNumber":11,"author":{"gitId":"VisnuRavi"},"content":"        return tasks;"},{"lineNumber":12,"author":{"gitId":"VisnuRavi"},"content":"    }"},{"lineNumber":13,"author":{"gitId":"VisnuRavi"},"content":""},{"lineNumber":14,"author":{"gitId":"VisnuRavi"},"content":"    public static int listSize() {"},{"lineNumber":15,"author":{"gitId":"VisnuRavi"},"content":"        return tasks.size();"},{"lineNumber":16,"author":{"gitId":"VisnuRavi"},"content":"    }"},{"lineNumber":17,"author":{"gitId":"VisnuRavi"},"content":""},{"lineNumber":18,"author":{"gitId":"VisnuRavi"},"content":"    public static void addTask(Task task) {"},{"lineNumber":19,"author":{"gitId":"VisnuRavi"},"content":"        tasks.add(task);"},{"lineNumber":20,"author":{"gitId":"VisnuRavi"},"content":"    }"},{"lineNumber":21,"author":{"gitId":"VisnuRavi"},"content":""},{"lineNumber":22,"author":{"gitId":"VisnuRavi"},"content":"    public static String printList() {"},{"lineNumber":23,"author":{"gitId":"VisnuRavi"},"content":"        return Ui.printList(tasks);"},{"lineNumber":24,"author":{"gitId":"VisnuRavi"},"content":"    }"},{"lineNumber":25,"author":{"gitId":"VisnuRavi"},"content":""},{"lineNumber":26,"author":{"gitId":"VisnuRavi"},"content":"    public static Task doneTask(int num) {"},{"lineNumber":27,"author":{"gitId":"VisnuRavi"},"content":"        if(tasks.size()\u003d\u003d0) {"},{"lineNumber":28,"author":{"gitId":"VisnuRavi"},"content":"            throw new IndexOutOfBoundsException(Ui.lineGetter() +"},{"lineNumber":29,"author":{"gitId":"VisnuRavi"},"content":"                    \"  No tasks to complete!\\n\" + Ui.lineGetter());"},{"lineNumber":30,"author":{"gitId":"VisnuRavi"},"content":"        } else if (num \u003c 0 || num \u003e\u003d tasks.size()) {"},{"lineNumber":31,"author":{"gitId":"VisnuRavi"},"content":"            throw new IndexOutOfBoundsException(Ui.lineGetter() +"},{"lineNumber":32,"author":{"gitId":"VisnuRavi"},"content":"                    \" Enter \u0027done\u0027 followed by a number between \" +"},{"lineNumber":33,"author":{"gitId":"VisnuRavi"},"content":"                    \"1 and \" + tasks.size() + \"\\n\" + Ui.lineGetter());"},{"lineNumber":34,"author":{"gitId":"VisnuRavi"},"content":"        }"},{"lineNumber":35,"author":{"gitId":"VisnuRavi"},"content":"        tasks.get(num).doneTask();"},{"lineNumber":36,"author":{"gitId":"VisnuRavi"},"content":"        return tasks.get(num);"},{"lineNumber":37,"author":{"gitId":"VisnuRavi"},"content":"    }"},{"lineNumber":38,"author":{"gitId":"VisnuRavi"},"content":""},{"lineNumber":39,"author":{"gitId":"VisnuRavi"},"content":"    public static Task deleteTask(int num) {"},{"lineNumber":40,"author":{"gitId":"VisnuRavi"},"content":"        if(tasks.size()\u003d\u003d0) {"},{"lineNumber":41,"author":{"gitId":"VisnuRavi"},"content":"            throw new IndexOutOfBoundsException(Ui.lineGetter() +"},{"lineNumber":42,"author":{"gitId":"VisnuRavi"},"content":"                    \"  No tasks to delete!\\n\" + Ui.lineGetter());"},{"lineNumber":43,"author":{"gitId":"VisnuRavi"},"content":"        } else if (num \u003c 0 || num \u003e\u003d tasks.size()) {"},{"lineNumber":44,"author":{"gitId":"VisnuRavi"},"content":"            throw new IndexOutOfBoundsException(Ui.lineGetter() +"},{"lineNumber":45,"author":{"gitId":"VisnuRavi"},"content":"                    \" Enter \u0027delete\u0027 followed by a number between \" +"},{"lineNumber":46,"author":{"gitId":"VisnuRavi"},"content":"                    \"1 and \" + tasks.size() + \"\\n\" + Ui.lineGetter());"},{"lineNumber":47,"author":{"gitId":"VisnuRavi"},"content":"        }"},{"lineNumber":48,"author":{"gitId":"VisnuRavi"},"content":"        return tasks.remove(num);"},{"lineNumber":49,"author":{"gitId":"VisnuRavi"},"content":"    }"},{"lineNumber":50,"author":{"gitId":"VisnuRavi"},"content":"}"}],"authorContributionMap":{"VisnuRavi":50}},{"path":"src/main/java/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"VisnuRavi"},"content":"public class Todo extends Task {"},{"lineNumber":2,"author":{"gitId":"VisnuRavi"},"content":"    public Todo(String str) {"},{"lineNumber":3,"author":{"gitId":"VisnuRavi"},"content":"        super(str);"},{"lineNumber":4,"author":{"gitId":"VisnuRavi"},"content":"        if(str.length()\u003d\u003d0) {"},{"lineNumber":5,"author":{"gitId":"VisnuRavi"},"content":"            throw new IllegalArgumentException();"},{"lineNumber":6,"author":{"gitId":"VisnuRavi"},"content":"        }"},{"lineNumber":7,"author":{"gitId":"VisnuRavi"},"content":"    }"},{"lineNumber":8,"author":{"gitId":"VisnuRavi"},"content":""},{"lineNumber":9,"author":{"gitId":"VisnuRavi"},"content":"    public Todo(String str, boolean isDone) {"},{"lineNumber":10,"author":{"gitId":"VisnuRavi"},"content":"        super(str, isDone);"},{"lineNumber":11,"author":{"gitId":"VisnuRavi"},"content":"    }"},{"lineNumber":12,"author":{"gitId":"VisnuRavi"},"content":""},{"lineNumber":13,"author":{"gitId":"VisnuRavi"},"content":"    @Override"},{"lineNumber":14,"author":{"gitId":"VisnuRavi"},"content":"    public String toString() {"},{"lineNumber":15,"author":{"gitId":"VisnuRavi"},"content":"        return \"[T]\" + super.toString();"},{"lineNumber":16,"author":{"gitId":"VisnuRavi"},"content":"    }"},{"lineNumber":17,"author":{"gitId":"VisnuRavi"},"content":"}"}],"authorContributionMap":{"VisnuRavi":17}},{"path":"src/main/java/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"VisnuRavi"},"content":"import java.util.ArrayList;"},{"lineNumber":2,"author":{"gitId":"VisnuRavi"},"content":""},{"lineNumber":3,"author":{"gitId":"VisnuRavi"},"content":"public class Ui {"},{"lineNumber":4,"author":{"gitId":"VisnuRavi"},"content":"    private static String logo \u003d \" ____        _        \\n\""},{"lineNumber":5,"author":{"gitId":"VisnuRavi"},"content":"            + \"|  _ \\\\ _   _| | _____ \\n\""},{"lineNumber":6,"author":{"gitId":"VisnuRavi"},"content":"            + \"| | | | | | | |/ / _ \\\\\\n\""},{"lineNumber":7,"author":{"gitId":"VisnuRavi"},"content":"            + \"| |_| | |_| |   \u003c  __/\\n\""},{"lineNumber":8,"author":{"gitId":"VisnuRavi"},"content":"            + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\";"},{"lineNumber":9,"author":{"gitId":"VisnuRavi"},"content":"    private static String line \u003d \"____________________________________________\"+"},{"lineNumber":10,"author":{"gitId":"VisnuRavi"},"content":"            \"________________\\n\";"},{"lineNumber":11,"author":{"gitId":"VisnuRavi"},"content":""},{"lineNumber":12,"author":{"gitId":"VisnuRavi"},"content":"    public static String lineGetter() {"},{"lineNumber":13,"author":{"gitId":"VisnuRavi"},"content":"        return line;"},{"lineNumber":14,"author":{"gitId":"VisnuRavi"},"content":"    }"},{"lineNumber":15,"author":{"gitId":"VisnuRavi"},"content":""},{"lineNumber":16,"author":{"gitId":"VisnuRavi"},"content":"    public static String intro() {"},{"lineNumber":17,"author":{"gitId":"VisnuRavi"},"content":"        return \"Hello from\\n\" + logo + \"\\n\" + line + \" Hey there! I\u0027m Duke\\n\" +"},{"lineNumber":18,"author":{"gitId":"VisnuRavi"},"content":"                \" How can I help you?\\n\" + line;"},{"lineNumber":19,"author":{"gitId":"VisnuRavi"},"content":"    }"},{"lineNumber":20,"author":{"gitId":"VisnuRavi"},"content":""},{"lineNumber":21,"author":{"gitId":"VisnuRavi"},"content":"    public static String bye() {"},{"lineNumber":22,"author":{"gitId":"VisnuRavi"},"content":""},{"lineNumber":23,"author":{"gitId":"VisnuRavi"},"content":"        return line + \" Bye, see you again!\\n\" + line;"},{"lineNumber":24,"author":{"gitId":"VisnuRavi"},"content":"    }"},{"lineNumber":25,"author":{"gitId":"VisnuRavi"},"content":""},{"lineNumber":26,"author":{"gitId":"VisnuRavi"},"content":"    public static String onlySpaces() {"},{"lineNumber":27,"author":{"gitId":"VisnuRavi"},"content":""},{"lineNumber":28,"author":{"gitId":"VisnuRavi"},"content":"        return line + \" Please enter a task\\n\" + line;"},{"lineNumber":29,"author":{"gitId":"VisnuRavi"},"content":"    }"},{"lineNumber":30,"author":{"gitId":"VisnuRavi"},"content":""},{"lineNumber":31,"author":{"gitId":"VisnuRavi"},"content":"    public static String printList(ArrayList\u003cTask\u003e tasks) {"},{"lineNumber":32,"author":{"gitId":"VisnuRavi"},"content":"        String s \u003d \"\";"},{"lineNumber":33,"author":{"gitId":"VisnuRavi"},"content":"        if(tasks.size() \u003c 1) {"},{"lineNumber":34,"author":{"gitId":"VisnuRavi"},"content":"            throw new IllegalArgumentException(line + \" No tasks so far!\\n\" + line);"},{"lineNumber":35,"author":{"gitId":"VisnuRavi"},"content":"        }"},{"lineNumber":36,"author":{"gitId":"VisnuRavi"},"content":"        s \u003d s + line + \" Here are the tasks in your list:\\n\";"},{"lineNumber":37,"author":{"gitId":"VisnuRavi"},"content":"        for (int j \u003d 1; j \u003c\u003d tasks.size(); j++) {"},{"lineNumber":38,"author":{"gitId":"VisnuRavi"},"content":"            s \u003d s + \" \" + j + \". \" + tasks.get(j - 1) + \"\\n\";"},{"lineNumber":39,"author":{"gitId":"VisnuRavi"},"content":"        }"},{"lineNumber":40,"author":{"gitId":"VisnuRavi"},"content":"        return s + line;"},{"lineNumber":41,"author":{"gitId":"VisnuRavi"},"content":"    }"},{"lineNumber":42,"author":{"gitId":"VisnuRavi"},"content":""},{"lineNumber":43,"author":{"gitId":"VisnuRavi"},"content":"    public static String illegalArgExc() {"},{"lineNumber":44,"author":{"gitId":"VisnuRavi"},"content":"        return line + \" Please enter \u0027todo (your task)\u0027, \" +"},{"lineNumber":45,"author":{"gitId":"VisnuRavi"},"content":"                \"or \u0027deadline (your task) / (deadline date time)\u0027,\\n or \" +"},{"lineNumber":46,"author":{"gitId":"VisnuRavi"},"content":"                \"\u0027event (event name) / (event date time)\u0027 to add tasks.\\n \" +"},{"lineNumber":47,"author":{"gitId":"VisnuRavi"},"content":"                \"To see your tasks enter \u0027list\u0027.\\n To complete a task enter \" +"},{"lineNumber":48,"author":{"gitId":"VisnuRavi"},"content":"                \"\u0027done (number of the task in the list)\u0027.\\n And to close Duke \" +"},{"lineNumber":49,"author":{"gitId":"VisnuRavi"},"content":"                \"enter \u0027bye\u0027.\\n\"+ line;"},{"lineNumber":50,"author":{"gitId":"VisnuRavi"},"content":"    }"},{"lineNumber":51,"author":{"gitId":"VisnuRavi"},"content":""},{"lineNumber":52,"author":{"gitId":"VisnuRavi"},"content":"    public static String dateTimeParseExc() {"},{"lineNumber":53,"author":{"gitId":"VisnuRavi"},"content":"        return line + \" Enter date and time in this format yyyy-mm-dd hh:mm\\n\" + line;"},{"lineNumber":54,"author":{"gitId":"VisnuRavi"},"content":"    }"},{"lineNumber":55,"author":{"gitId":"VisnuRavi"},"content":""},{"lineNumber":56,"author":{"gitId":"VisnuRavi"},"content":"    public static String unableSave() {"},{"lineNumber":57,"author":{"gitId":"VisnuRavi"},"content":"        return line + \" Unable to save to hard drive\\n\" + line;"},{"lineNumber":58,"author":{"gitId":"VisnuRavi"},"content":"    }"},{"lineNumber":59,"author":{"gitId":"VisnuRavi"},"content":""},{"lineNumber":60,"author":{"gitId":"VisnuRavi"},"content":"    public static String addTask(Task task, int size) {"},{"lineNumber":61,"author":{"gitId":"VisnuRavi"},"content":"        return line + \" Got it. I\u0027ve added this task:\\n\" + \" \" + task + \"\\n\""},{"lineNumber":62,"author":{"gitId":"VisnuRavi"},"content":"                + \" Now you have \" + size + \" tasks in the list\\n\" + line;"},{"lineNumber":63,"author":{"gitId":"VisnuRavi"},"content":"    }"},{"lineNumber":64,"author":{"gitId":"VisnuRavi"},"content":""},{"lineNumber":65,"author":{"gitId":"VisnuRavi"},"content":"    public static String deleteTask(Task task, int size) {"},{"lineNumber":66,"author":{"gitId":"VisnuRavi"},"content":"        return line + \" I\u0027ve removed the following task:\\n\" + \" \" + task"},{"lineNumber":67,"author":{"gitId":"VisnuRavi"},"content":"                + \"\\n\" + \" You now have \"+ size + \" tasks in the list\\n\" + line;"},{"lineNumber":68,"author":{"gitId":"VisnuRavi"},"content":"    }"},{"lineNumber":69,"author":{"gitId":"VisnuRavi"},"content":""},{"lineNumber":70,"author":{"gitId":"VisnuRavi"},"content":"    public static String doneTask(Task task) {"},{"lineNumber":71,"author":{"gitId":"VisnuRavi"},"content":"        return line + \" Good job on completing this task!\\n\" + \" \" +"},{"lineNumber":72,"author":{"gitId":"VisnuRavi"},"content":"                task + \"\\n\" + line;"},{"lineNumber":73,"author":{"gitId":"VisnuRavi"},"content":"    }"},{"lineNumber":74,"author":{"gitId":"VisnuRavi"},"content":"}"}],"authorContributionMap":{"VisnuRavi":74}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"VisnuRavi"},"content":"todo     eat later"},{"lineNumber":2,"author":{"gitId":"VisnuRavi"},"content":"deadline     eat     mee siam   /  2021-01-23 20:21"},{"lineNumber":3,"author":{"gitId":"VisnuRavi"},"content":"event    go to buffet   /    2020-12-23 23:23"},{"lineNumber":4,"author":{"gitId":"VisnuRavi"},"content":"list"},{"lineNumber":5,"author":{"gitId":"VisnuRavi"},"content":"done 1"},{"lineNumber":6,"author":{"gitId":"VisnuRavi"},"content":"done 2"},{"lineNumber":7,"author":{"gitId":"VisnuRavi"},"content":"done 3"},{"lineNumber":8,"author":{"gitId":"VisnuRavi"},"content":"list"},{"lineNumber":9,"author":{"gitId":"VisnuRavi"},"content":"done 4"},{"lineNumber":10,"author":{"gitId":"VisnuRavi"},"content":"done sdfs"},{"lineNumber":11,"author":{"gitId":"VisnuRavi"},"content":"todo"},{"lineNumber":12,"author":{"gitId":"VisnuRavi"},"content":"deadline"},{"lineNumber":13,"author":{"gitId":"VisnuRavi"},"content":"deadline sdf"},{"lineNumber":14,"author":{"gitId":"VisnuRavi"},"content":"deadline sdf /"},{"lineNumber":15,"author":{"gitId":"VisnuRavi"},"content":"deadline sdf / 2020-43-43"},{"lineNumber":16,"author":{"gitId":"VisnuRavi"},"content":"deadline sdf / 2020-43-43 24:24"},{"lineNumber":17,"author":{"gitId":"VisnuRavi"},"content":"deadline sdf / 2020-43-43  24:24"},{"lineNumber":18,"author":{"gitId":"VisnuRavi"},"content":"event"},{"lineNumber":19,"author":{"gitId":"VisnuRavi"},"content":"event sdf"},{"lineNumber":20,"author":{"gitId":"VisnuRavi"},"content":"event sdf /"},{"lineNumber":21,"author":{"gitId":"VisnuRavi"},"content":"event sdf / 2020-43-43"},{"lineNumber":22,"author":{"gitId":"VisnuRavi"},"content":"event sdf / 2020-43-43 24:24"},{"lineNumber":23,"author":{"gitId":"VisnuRavi"},"content":"event sdf / 2020-43-43  24:24"},{"lineNumber":24,"author":{"gitId":"VisnuRavi"},"content":"delete 1"},{"lineNumber":25,"author":{"gitId":"VisnuRavi"},"content":"delete 1"},{"lineNumber":26,"author":{"gitId":"VisnuRavi"},"content":"delete 1"},{"lineNumber":27,"author":{"gitId":"VisnuRavi"},"content":"delete 1"},{"lineNumber":28,"author":{"gitId":"VisnuRavi"},"content":"delete 0"},{"lineNumber":29,"author":{"gitId":"VisnuRavi"},"content":"done 0"},{"lineNumber":30,"author":{"gitId":"VisnuRavi"},"content":"todo chill"},{"lineNumber":31,"author":{"gitId":"VisnuRavi"},"content":"deadline dsfgf/fg"},{"lineNumber":32,"author":{"gitId":"VisnuRavi"},"content":"event dsf/hwef"},{"lineNumber":33,"author":{"gitId":"VisnuRavi"},"content":"bye"}],"authorContributionMap":{"VisnuRavi":33}},{"path":"text-ui-test/runtest.sh","fileType":"sh","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"#!/usr/bin/env bash"},{"lineNumber":2,"author":{"gitId":"-"},"content":""},{"lineNumber":3,"author":{"gitId":"-"},"content":"# create bin directory if it doesn\u0027t exist"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if [ ! -d \"../bin\" ]"},{"lineNumber":5,"author":{"gitId":"-"},"content":"then"},{"lineNumber":6,"author":{"gitId":"-"},"content":"    mkdir ../bin"},{"lineNumber":7,"author":{"gitId":"-"},"content":"fi"},{"lineNumber":8,"author":{"gitId":"-"},"content":""},{"lineNumber":9,"author":{"gitId":"-"},"content":"# delete output from previous run"},{"lineNumber":10,"author":{"gitId":"-"},"content":"if [ -e \"./ACTUAL.TXT\" ]"},{"lineNumber":11,"author":{"gitId":"-"},"content":"then"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    rm ACTUAL.TXT"},{"lineNumber":13,"author":{"gitId":"-"},"content":"fi"},{"lineNumber":14,"author":{"gitId":"-"},"content":""},{"lineNumber":15,"author":{"gitId":"-"},"content":"# compile the code into the bin folder, terminates if error occurred"},{"lineNumber":16,"author":{"gitId":"VisnuRavi"},"content":"if ! javac -cp /home/visnu/Documents/2103/ip/src/main/java -Xlint:none -d ../bin /home/visnu/Documents/2103/ip/src/main/java/*.java"},{"lineNumber":17,"author":{"gitId":"-"},"content":"then"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    echo \"********** BUILD FAILURE **********\""},{"lineNumber":19,"author":{"gitId":"-"},"content":"    exit 1"},{"lineNumber":20,"author":{"gitId":"-"},"content":"fi"},{"lineNumber":21,"author":{"gitId":"-"},"content":""},{"lineNumber":22,"author":{"gitId":"-"},"content":"# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"},{"lineNumber":23,"author":{"gitId":"-"},"content":"java -classpath ../bin Duke \u003c input.txt \u003e ACTUAL.TXT"},{"lineNumber":24,"author":{"gitId":"-"},"content":""},{"lineNumber":25,"author":{"gitId":"-"},"content":"# convert to UNIX format"},{"lineNumber":26,"author":{"gitId":"-"},"content":"cp EXPECTED.TXT EXPECTED-UNIX.TXT"},{"lineNumber":27,"author":{"gitId":"-"},"content":"dos2unix ACTUAL.TXT EXPECTED-UNIX.TXT"},{"lineNumber":28,"author":{"gitId":"-"},"content":""},{"lineNumber":29,"author":{"gitId":"-"},"content":"# compare the output to the expected output"},{"lineNumber":30,"author":{"gitId":"-"},"content":"diff ACTUAL.TXT EXPECTED-UNIX.TXT"},{"lineNumber":31,"author":{"gitId":"-"},"content":"if [ $? -eq 0 ]"},{"lineNumber":32,"author":{"gitId":"-"},"content":"then"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    echo \"Test result: PASSED\""},{"lineNumber":34,"author":{"gitId":"-"},"content":"    exit 0"},{"lineNumber":35,"author":{"gitId":"-"},"content":"else"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    echo \"Test result: FAILED\""},{"lineNumber":37,"author":{"gitId":"-"},"content":"    exit 1"},{"lineNumber":38,"author":{"gitId":"-"},"content":"fi"}],"authorContributionMap":{"VisnuRavi":1,"-":37}}]
