[{"path":"src/main/java/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jxrrelo"},"content":"public class Deadline extends Task {"},{"lineNumber":2,"author":{"gitId":"jxrrelo"},"content":"    public Deadline(String description) {"},{"lineNumber":3,"author":{"gitId":"jxrrelo"},"content":"        super(description, \"D\");"},{"lineNumber":4,"author":{"gitId":"jxrrelo"},"content":"    }"},{"lineNumber":5,"author":{"gitId":"jxrrelo"},"content":"}"}],"authorContributionMap":{"jxrrelo":5}},{"path":"src/main/java/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jxrrelo"},"content":"import java.util.ArrayList;"},{"lineNumber":2,"author":{"gitId":"jxrrelo"},"content":"import java.util.Arrays;"},{"lineNumber":3,"author":{"gitId":"jxrrelo"},"content":"import java.util.Scanner;"},{"lineNumber":4,"author":{"gitId":"jxrrelo"},"content":""},{"lineNumber":5,"author":{"gitId":"-"},"content":"public class Duke {"},{"lineNumber":6,"author":{"gitId":"jxrrelo"},"content":"    public static void main(String[] args) throws DukeException {"},{"lineNumber":7,"author":{"gitId":"jxrrelo"},"content":"        ArrayList\u003cTask\u003e inputArr \u003d new ArrayList\u003c\u003e();"},{"lineNumber":8,"author":{"gitId":"jxrrelo"},"content":"        Scanner sc \u003d new Scanner(System.in);"},{"lineNumber":9,"author":{"gitId":"jxrrelo"},"content":"        int n \u003d 0;"},{"lineNumber":10,"author":{"gitId":"jxrrelo"},"content":"        int taskNum \u003d 0;"},{"lineNumber":11,"author":{"gitId":"jxrrelo"},"content":"        String dateTime \u003d \"\", taskDesc \u003d \"\";"},{"lineNumber":12,"author":{"gitId":"jxrrelo"},"content":"        ArrayList\u003cString\u003e validInputs \u003d new ArrayList\u003c\u003e(Arrays.asList(\"bye\", \"list\", \"done\", \"todo\", \"deadline\", \"event\", \"delete\"));"},{"lineNumber":13,"author":{"gitId":"jxrrelo"},"content":"        Output.printWelcomeMsg();"},{"lineNumber":14,"author":{"gitId":"jxrrelo"},"content":""},{"lineNumber":15,"author":{"gitId":"jxrrelo"},"content":"        while(sc.hasNext()) {"},{"lineNumber":16,"author":{"gitId":"jxrrelo"},"content":"            String input \u003d sc.next();"},{"lineNumber":17,"author":{"gitId":"jxrrelo"},"content":"            try {"},{"lineNumber":18,"author":{"gitId":"jxrrelo"},"content":"                DukeException.validInputHandler(validInputs, input);"},{"lineNumber":19,"author":{"gitId":"jxrrelo"},"content":"            } catch (DukeException e) {"},{"lineNumber":20,"author":{"gitId":"jxrrelo"},"content":"                Output.printErrorMsg(e);"},{"lineNumber":21,"author":{"gitId":"jxrrelo"},"content":"                continue;"},{"lineNumber":22,"author":{"gitId":"jxrrelo"},"content":"            }"},{"lineNumber":23,"author":{"gitId":"jxrrelo"},"content":"            switch(input) {"},{"lineNumber":24,"author":{"gitId":"jxrrelo"},"content":"                case \"bye\":"},{"lineNumber":25,"author":{"gitId":"jxrrelo"},"content":"                    break;"},{"lineNumber":26,"author":{"gitId":"jxrrelo"},"content":"                case \"list\":"},{"lineNumber":27,"author":{"gitId":"jxrrelo"},"content":"                    try {"},{"lineNumber":28,"author":{"gitId":"jxrrelo"},"content":"                        DukeException.listHandler(n);"},{"lineNumber":29,"author":{"gitId":"jxrrelo"},"content":"                    } catch (DukeException e) {"},{"lineNumber":30,"author":{"gitId":"jxrrelo"},"content":"                        Output.printErrorMsg(e);"},{"lineNumber":31,"author":{"gitId":"jxrrelo"},"content":"                        continue;"},{"lineNumber":32,"author":{"gitId":"jxrrelo"},"content":"                    }"},{"lineNumber":33,"author":{"gitId":"jxrrelo"},"content":"                    Output.addLine();"},{"lineNumber":34,"author":{"gitId":"jxrrelo"},"content":"                    for(int i \u003d 1; i \u003c\u003d n; i++) {"},{"lineNumber":35,"author":{"gitId":"jxrrelo"},"content":"                        Task task \u003d inputArr.get(i - 1);"},{"lineNumber":36,"author":{"gitId":"jxrrelo"},"content":"                        System.out.println(\"    \" + i + \". \" + \"[\" + task.getType() + \"]\" + \"[\" + task.getStatusIcon() + \"] \" + task.getDescription());"},{"lineNumber":37,"author":{"gitId":"jxrrelo"},"content":"                    }"},{"lineNumber":38,"author":{"gitId":"jxrrelo"},"content":"                    Output.addLine();"},{"lineNumber":39,"author":{"gitId":"jxrrelo"},"content":"                    System.out.println();"},{"lineNumber":40,"author":{"gitId":"jxrrelo"},"content":"                    break;"},{"lineNumber":41,"author":{"gitId":"jxrrelo"},"content":"                case \"done\":"},{"lineNumber":42,"author":{"gitId":"jxrrelo"},"content":"                    String temp \u003d sc.nextLine();"},{"lineNumber":43,"author":{"gitId":"jxrrelo"},"content":"                    taskNum \u003d temp.equals(\"\") ? 0 : Integer.parseInt(temp.substring(1));"},{"lineNumber":44,"author":{"gitId":"jxrrelo"},"content":"                    try {"},{"lineNumber":45,"author":{"gitId":"jxrrelo"},"content":"                        DukeException.doneHandler(taskNum, n);"},{"lineNumber":46,"author":{"gitId":"jxrrelo"},"content":"                    } catch (DukeException e) {"},{"lineNumber":47,"author":{"gitId":"jxrrelo"},"content":"                        Output.printErrorMsg(e);"},{"lineNumber":48,"author":{"gitId":"jxrrelo"},"content":"                        continue;"},{"lineNumber":49,"author":{"gitId":"jxrrelo"},"content":"                    }"},{"lineNumber":50,"author":{"gitId":"jxrrelo"},"content":""},{"lineNumber":51,"author":{"gitId":"jxrrelo"},"content":"                    Task done \u003d inputArr.get(taskNum - 1);"},{"lineNumber":52,"author":{"gitId":"jxrrelo"},"content":"                    done.toggleStatus();"},{"lineNumber":53,"author":{"gitId":"jxrrelo"},"content":""},{"lineNumber":54,"author":{"gitId":"jxrrelo"},"content":"                    Output.printDoneMsg(done.getStatusIcon(), done.getDescription());"},{"lineNumber":55,"author":{"gitId":"jxrrelo"},"content":"                    break;"},{"lineNumber":56,"author":{"gitId":"jxrrelo"},"content":"                case \"todo\":"},{"lineNumber":57,"author":{"gitId":"jxrrelo"},"content":"                    taskDesc \u003d sc.nextLine();"},{"lineNumber":58,"author":{"gitId":"jxrrelo"},"content":"                    try {"},{"lineNumber":59,"author":{"gitId":"jxrrelo"},"content":"                        DukeException.taskHandler(taskDesc);"},{"lineNumber":60,"author":{"gitId":"jxrrelo"},"content":"                    } catch (DukeException e) {"},{"lineNumber":61,"author":{"gitId":"jxrrelo"},"content":"                        Output.printErrorMsg(e);"},{"lineNumber":62,"author":{"gitId":"jxrrelo"},"content":"                        continue;"},{"lineNumber":63,"author":{"gitId":"jxrrelo"},"content":"                    }"},{"lineNumber":64,"author":{"gitId":"jxrrelo"},"content":"                    Todo todo \u003d new Todo(taskDesc);"},{"lineNumber":65,"author":{"gitId":"jxrrelo"},"content":"                    inputArr.add(n, todo);"},{"lineNumber":66,"author":{"gitId":"jxrrelo"},"content":"                    n++;"},{"lineNumber":67,"author":{"gitId":"jxrrelo"},"content":"                    Output.printTodoMsg(todo.getStatusIcon(), todo.getDescription(), n);"},{"lineNumber":68,"author":{"gitId":"jxrrelo"},"content":"                    break;"},{"lineNumber":69,"author":{"gitId":"jxrrelo"},"content":"                case \"deadline\":"},{"lineNumber":70,"author":{"gitId":"jxrrelo"},"content":"                    taskDesc \u003d sc.nextLine();"},{"lineNumber":71,"author":{"gitId":"jxrrelo"},"content":"                    try {"},{"lineNumber":72,"author":{"gitId":"jxrrelo"},"content":"                        DukeException.taskHandler(taskDesc);"},{"lineNumber":73,"author":{"gitId":"jxrrelo"},"content":"                        DukeException.dateHandler(taskDesc.split(\" /\").length);"},{"lineNumber":74,"author":{"gitId":"jxrrelo"},"content":"                    } catch (DukeException e) {"},{"lineNumber":75,"author":{"gitId":"jxrrelo"},"content":"                        Output.printErrorMsg(e);"},{"lineNumber":76,"author":{"gitId":"jxrrelo"},"content":"                        continue;"},{"lineNumber":77,"author":{"gitId":"jxrrelo"},"content":"                    } catch (NullPointerException np) {"},{"lineNumber":78,"author":{"gitId":"jxrrelo"},"content":"                        Output.printErrorMsg(np);"},{"lineNumber":79,"author":{"gitId":"jxrrelo"},"content":"                        continue;"},{"lineNumber":80,"author":{"gitId":"jxrrelo"},"content":"                    }"},{"lineNumber":81,"author":{"gitId":"jxrrelo"},"content":"                    dateTime \u003d taskDesc.split(\" /by \")[1];"},{"lineNumber":82,"author":{"gitId":"jxrrelo"},"content":"                    taskDesc \u003d taskDesc.split(\"/\")[0] + \" (by: \" + dateTime + \")\";"},{"lineNumber":83,"author":{"gitId":"jxrrelo"},"content":"                    Deadline deadline \u003d new Deadline(taskDesc);"},{"lineNumber":84,"author":{"gitId":"jxrrelo"},"content":"                    inputArr.add(n, deadline);"},{"lineNumber":85,"author":{"gitId":"jxrrelo"},"content":"                    n++;"},{"lineNumber":86,"author":{"gitId":"jxrrelo"},"content":""},{"lineNumber":87,"author":{"gitId":"jxrrelo"},"content":"                    Output.printDeadlineMsg(deadline.getStatusIcon(), deadline.getDescription(), n);"},{"lineNumber":88,"author":{"gitId":"jxrrelo"},"content":"                    break;"},{"lineNumber":89,"author":{"gitId":"jxrrelo"},"content":"                case \"event\":"},{"lineNumber":90,"author":{"gitId":"jxrrelo"},"content":"                    taskDesc \u003d sc.nextLine();"},{"lineNumber":91,"author":{"gitId":"jxrrelo"},"content":"                    try {"},{"lineNumber":92,"author":{"gitId":"jxrrelo"},"content":"                        DukeException.taskHandler(taskDesc);"},{"lineNumber":93,"author":{"gitId":"jxrrelo"},"content":"                        DukeException.dateHandler(taskDesc.split(\" /\").length);"},{"lineNumber":94,"author":{"gitId":"jxrrelo"},"content":"                    } catch (DukeException e) {"},{"lineNumber":95,"author":{"gitId":"jxrrelo"},"content":"                        Output.printErrorMsg(e);"},{"lineNumber":96,"author":{"gitId":"jxrrelo"},"content":"                        continue;"},{"lineNumber":97,"author":{"gitId":"jxrrelo"},"content":"                    }"},{"lineNumber":98,"author":{"gitId":"jxrrelo"},"content":"                    dateTime \u003d taskDesc.split(\" /at \")[1];"},{"lineNumber":99,"author":{"gitId":"jxrrelo"},"content":"                    taskDesc \u003d taskDesc.split(\" /\")[0] + \" (at: \" + dateTime + \")\";"},{"lineNumber":100,"author":{"gitId":"jxrrelo"},"content":"                    Event event \u003d new Event(taskDesc);"},{"lineNumber":101,"author":{"gitId":"jxrrelo"},"content":"                    inputArr.add(n, event);"},{"lineNumber":102,"author":{"gitId":"jxrrelo"},"content":"                    n++;"},{"lineNumber":103,"author":{"gitId":"jxrrelo"},"content":""},{"lineNumber":104,"author":{"gitId":"jxrrelo"},"content":"                    Output.printEventMsg(event.getStatusIcon(), event.getDescription(), n);"},{"lineNumber":105,"author":{"gitId":"jxrrelo"},"content":"                    break;"},{"lineNumber":106,"author":{"gitId":"jxrrelo"},"content":"                case \"delete\":"},{"lineNumber":107,"author":{"gitId":"jxrrelo"},"content":"                    String delete \u003d sc.nextLine();"},{"lineNumber":108,"author":{"gitId":"jxrrelo"},"content":"                    taskNum \u003d delete.equals(\"\") ? 0 : Integer.parseInt(delete.substring(1));"},{"lineNumber":109,"author":{"gitId":"jxrrelo"},"content":"                    try {"},{"lineNumber":110,"author":{"gitId":"jxrrelo"},"content":"                        DukeException.deleteHandler(taskNum, n);"},{"lineNumber":111,"author":{"gitId":"jxrrelo"},"content":"                    } catch (DukeException e) {"},{"lineNumber":112,"author":{"gitId":"jxrrelo"},"content":"                        Output.printErrorMsg(e);"},{"lineNumber":113,"author":{"gitId":"jxrrelo"},"content":"                        continue;"},{"lineNumber":114,"author":{"gitId":"jxrrelo"},"content":"                    }"},{"lineNumber":115,"author":{"gitId":"jxrrelo"},"content":"                    taskDesc \u003d taskDesc.split(\" /\")[0] + \"(at: \" + dateTime.substring(3) + \")\";"},{"lineNumber":116,"author":{"gitId":"jxrrelo"},"content":"                    Task deleteTask \u003d inputArr.get(taskNum - 1);"},{"lineNumber":117,"author":{"gitId":"jxrrelo"},"content":"                    inputArr.remove(taskNum - 1);"},{"lineNumber":118,"author":{"gitId":"jxrrelo"},"content":"                    n--;"},{"lineNumber":119,"author":{"gitId":"jxrrelo"},"content":""},{"lineNumber":120,"author":{"gitId":"jxrrelo"},"content":"                    Output.printDeleteMsg(deleteTask.getStatusIcon(), deleteTask.getDescription(), n);"},{"lineNumber":121,"author":{"gitId":"jxrrelo"},"content":"                    break;"},{"lineNumber":122,"author":{"gitId":"jxrrelo"},"content":"                default:"},{"lineNumber":123,"author":{"gitId":"jxrrelo"},"content":"                    inputArr.set(n, new Task(taskDesc, \"\"));"},{"lineNumber":124,"author":{"gitId":"jxrrelo"},"content":"                    n++;"},{"lineNumber":125,"author":{"gitId":"jxrrelo"},"content":"                    Output.printAddedMsg(input);"},{"lineNumber":126,"author":{"gitId":"jxrrelo"},"content":"                    break;"},{"lineNumber":127,"author":{"gitId":"jxrrelo"},"content":"            }"},{"lineNumber":128,"author":{"gitId":"jxrrelo"},"content":"            if(input.equals(\"bye\")) break;"},{"lineNumber":129,"author":{"gitId":"jxrrelo"},"content":""},{"lineNumber":130,"author":{"gitId":"jxrrelo"},"content":"        }"},{"lineNumber":131,"author":{"gitId":"jxrrelo"},"content":"        Output.printByeMsg();"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":133,"author":{"gitId":"-"},"content":"}"}],"authorContributionMap":{"-":3,"jxrrelo":130}},{"path":"src/main/java/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jxrrelo"},"content":"import java.util.ArrayList;"},{"lineNumber":2,"author":{"gitId":"jxrrelo"},"content":""},{"lineNumber":3,"author":{"gitId":"jxrrelo"},"content":"public class DukeException extends Exception {"},{"lineNumber":4,"author":{"gitId":"jxrrelo"},"content":"    public DukeException(String message) {"},{"lineNumber":5,"author":{"gitId":"jxrrelo"},"content":"        super(message);"},{"lineNumber":6,"author":{"gitId":"jxrrelo"},"content":"    }"},{"lineNumber":7,"author":{"gitId":"jxrrelo"},"content":""},{"lineNumber":8,"author":{"gitId":"jxrrelo"},"content":"    public static void validInputHandler(ArrayList\u003cString\u003e validInputs, String input) throws DukeException {"},{"lineNumber":9,"author":{"gitId":"jxrrelo"},"content":"        if (!validInputs.contains(input))"},{"lineNumber":10,"author":{"gitId":"jxrrelo"},"content":"            throw new DukeException(\"☹ OOPS! I\u0027m sorry, but I don\u0027t know what that means :-(\");"},{"lineNumber":11,"author":{"gitId":"jxrrelo"},"content":"    }"},{"lineNumber":12,"author":{"gitId":"jxrrelo"},"content":""},{"lineNumber":13,"author":{"gitId":"jxrrelo"},"content":"    public static void taskHandler(String input) throws DukeException {"},{"lineNumber":14,"author":{"gitId":"jxrrelo"},"content":"        if (input.equals(\"\"))"},{"lineNumber":15,"author":{"gitId":"jxrrelo"},"content":"            throw new DukeException(\"☹ OOPS! The description of a task cannot be empty\");"},{"lineNumber":16,"author":{"gitId":"jxrrelo"},"content":"    }"},{"lineNumber":17,"author":{"gitId":"jxrrelo"},"content":""},{"lineNumber":18,"author":{"gitId":"jxrrelo"},"content":"    public static void dateHandler(int input) throws DukeException {"},{"lineNumber":19,"author":{"gitId":"jxrrelo"},"content":"        if (input \u003c 2)"},{"lineNumber":20,"author":{"gitId":"jxrrelo"},"content":"            throw new DukeException(\"☹ OOPS! Please specify a date/time using /by or /at!\");"},{"lineNumber":21,"author":{"gitId":"jxrrelo"},"content":"    }"},{"lineNumber":22,"author":{"gitId":"jxrrelo"},"content":""},{"lineNumber":23,"author":{"gitId":"jxrrelo"},"content":"    public static void doneHandler(int taskNum, int totalTasks) throws DukeException {"},{"lineNumber":24,"author":{"gitId":"jxrrelo"},"content":"        if (taskNum \u003c\u003d 0 || taskNum \u003e totalTasks)"},{"lineNumber":25,"author":{"gitId":"jxrrelo"},"content":"            throw new DukeException(\"☹ OOPS! Invalid event number. Please specify which event would you like to mark done?\");"},{"lineNumber":26,"author":{"gitId":"jxrrelo"},"content":"    }"},{"lineNumber":27,"author":{"gitId":"jxrrelo"},"content":""},{"lineNumber":28,"author":{"gitId":"jxrrelo"},"content":"    public static void listHandler(int totalTasks) throws DukeException {"},{"lineNumber":29,"author":{"gitId":"jxrrelo"},"content":"        if (totalTasks \u003d\u003d 0)"},{"lineNumber":30,"author":{"gitId":"jxrrelo"},"content":"            throw new DukeException(\"☹ OOPS! It seems you have nothing on your list.\");"},{"lineNumber":31,"author":{"gitId":"jxrrelo"},"content":"    }"},{"lineNumber":32,"author":{"gitId":"jxrrelo"},"content":""},{"lineNumber":33,"author":{"gitId":"jxrrelo"},"content":"    public static void deleteHandler(int taskNum, int n) throws DukeException {"},{"lineNumber":34,"author":{"gitId":"jxrrelo"},"content":"        if (taskNum \u003c\u003d 0 || taskNum \u003e n)"},{"lineNumber":35,"author":{"gitId":"jxrrelo"},"content":"            throw new DukeException(\"☹ OOPS! Invalid event number. Please specify which event would you like to delete?\");"},{"lineNumber":36,"author":{"gitId":"jxrrelo"},"content":"    }"},{"lineNumber":37,"author":{"gitId":"jxrrelo"},"content":"}"}],"authorContributionMap":{"jxrrelo":37}},{"path":"src/main/java/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jxrrelo"},"content":"public class Event extends Task {"},{"lineNumber":2,"author":{"gitId":"jxrrelo"},"content":"    public Event(String description) {"},{"lineNumber":3,"author":{"gitId":"jxrrelo"},"content":"        super(description, \"E\");"},{"lineNumber":4,"author":{"gitId":"jxrrelo"},"content":"    }"},{"lineNumber":5,"author":{"gitId":"jxrrelo"},"content":"}"}],"authorContributionMap":{"jxrrelo":5}},{"path":"src/main/java/Output.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jxrrelo"},"content":"public class Output {"},{"lineNumber":2,"author":{"gitId":"jxrrelo"},"content":"    public static void addLine() {"},{"lineNumber":3,"author":{"gitId":"jxrrelo"},"content":"        System.out.println(\"    ----------------------------------------------------------------------------------------------------------------------------------------------\");"},{"lineNumber":4,"author":{"gitId":"jxrrelo"},"content":"    }"},{"lineNumber":5,"author":{"gitId":"jxrrelo"},"content":""},{"lineNumber":6,"author":{"gitId":"jxrrelo"},"content":"    public static void printWelcomeMsg() {"},{"lineNumber":7,"author":{"gitId":"jxrrelo"},"content":"        addLine();"},{"lineNumber":8,"author":{"gitId":"jxrrelo"},"content":"        System.out.println(\"    Hello! I\u0027m Duke, your friendly chatbot.\\n    What can I do for you today?\\n\");"},{"lineNumber":9,"author":{"gitId":"jxrrelo"},"content":"        System.out.println(\"    1. list                                   Lists out all existing tasks                       (e.g. list)\");"},{"lineNumber":10,"author":{"gitId":"jxrrelo"},"content":"        System.out.println(\"    2. done \u003ctask number\u003e                     Marks the specified task number as done/undone     (e.g. done 2)\");"},{"lineNumber":11,"author":{"gitId":"jxrrelo"},"content":"        System.out.println(\"    3. todo \u003ctodo message\u003e                    Adds the specified todo to the list                (e.g. todo homework)\");"},{"lineNumber":12,"author":{"gitId":"jxrrelo"},"content":"        System.out.println(\"    4. deadline \u003cdeadline message\u003e \u003cdate\u003e     Adds the specified deadline to the list            (e.g. deadline return book /by Sunday)\");"},{"lineNumber":13,"author":{"gitId":"jxrrelo"},"content":"        System.out.println(\"    5. event \u003cevent message\u003e \u003cdate\u003e           Adds the specified event to the list               (e.g. event project meeting /at Mon 2-4pm\");"},{"lineNumber":14,"author":{"gitId":"jxrrelo"},"content":"        System.out.println(\"    6. delete \u003ctask number\u003e                   Deletes the specified task number from the list    (e.g. delete 2\");"},{"lineNumber":15,"author":{"gitId":"jxrrelo"},"content":"        System.out.println(\"    7. bye                                    Terminate Duke                                     (e.g. bye)\");"},{"lineNumber":16,"author":{"gitId":"jxrrelo"},"content":"        addLine();"},{"lineNumber":17,"author":{"gitId":"jxrrelo"},"content":"        System.out.println();"},{"lineNumber":18,"author":{"gitId":"jxrrelo"},"content":"    }"},{"lineNumber":19,"author":{"gitId":"jxrrelo"},"content":""},{"lineNumber":20,"author":{"gitId":"jxrrelo"},"content":"    public static void printDoneMsg(String icon, String desc) {"},{"lineNumber":21,"author":{"gitId":"jxrrelo"},"content":"        addLine();"},{"lineNumber":22,"author":{"gitId":"jxrrelo"},"content":"        if(icon.equals(\"\\u2713\"))"},{"lineNumber":23,"author":{"gitId":"jxrrelo"},"content":"            System.out.println(\"    Nice! I\u0027ve marked this task as done:\");"},{"lineNumber":24,"author":{"gitId":"jxrrelo"},"content":"        else"},{"lineNumber":25,"author":{"gitId":"jxrrelo"},"content":"            System.out.println(\"    Noted. I\u0027ve marked this task as undone:\");"},{"lineNumber":26,"author":{"gitId":"jxrrelo"},"content":"        System.out.println(\"      \" + \"[\" + icon + \"] \" + desc);"},{"lineNumber":27,"author":{"gitId":"jxrrelo"},"content":"        addLine();"},{"lineNumber":28,"author":{"gitId":"jxrrelo"},"content":"        System.out.println();"},{"lineNumber":29,"author":{"gitId":"jxrrelo"},"content":"    }"},{"lineNumber":30,"author":{"gitId":"jxrrelo"},"content":""},{"lineNumber":31,"author":{"gitId":"jxrrelo"},"content":"    public static void printTodoMsg(String icon, String desc, int numTasks) {"},{"lineNumber":32,"author":{"gitId":"jxrrelo"},"content":"        addLine();"},{"lineNumber":33,"author":{"gitId":"jxrrelo"},"content":"        System.out.println(\"    Got it. I\u0027ve added this task:\");"},{"lineNumber":34,"author":{"gitId":"jxrrelo"},"content":"        System.out.println(\"      \" + \"[T]\" + \"[\" + icon + \"] \" + desc);"},{"lineNumber":35,"author":{"gitId":"jxrrelo"},"content":"        System.out.println(\"    Now you have \" + numTasks + \" tasks in the list.\");"},{"lineNumber":36,"author":{"gitId":"jxrrelo"},"content":"        addLine();"},{"lineNumber":37,"author":{"gitId":"jxrrelo"},"content":"        System.out.println();"},{"lineNumber":38,"author":{"gitId":"jxrrelo"},"content":"    }"},{"lineNumber":39,"author":{"gitId":"jxrrelo"},"content":""},{"lineNumber":40,"author":{"gitId":"jxrrelo"},"content":"    public static void printDeadlineMsg(String icon, String desc, int numTasks) {"},{"lineNumber":41,"author":{"gitId":"jxrrelo"},"content":"        addLine();"},{"lineNumber":42,"author":{"gitId":"jxrrelo"},"content":"        System.out.println(\"    Got it. I\u0027ve added this task:\");"},{"lineNumber":43,"author":{"gitId":"jxrrelo"},"content":"        System.out.println(\"      \" + \"[D]\" + \"[\" + icon + \"] \" + desc);"},{"lineNumber":44,"author":{"gitId":"jxrrelo"},"content":"        System.out.println(\"    Now you have \" + numTasks + \" tasks in the list.\");"},{"lineNumber":45,"author":{"gitId":"jxrrelo"},"content":"        addLine();"},{"lineNumber":46,"author":{"gitId":"jxrrelo"},"content":"        System.out.println();"},{"lineNumber":47,"author":{"gitId":"jxrrelo"},"content":"    }"},{"lineNumber":48,"author":{"gitId":"jxrrelo"},"content":""},{"lineNumber":49,"author":{"gitId":"jxrrelo"},"content":"    public static void printEventMsg(String icon, String desc, int numTasks) {"},{"lineNumber":50,"author":{"gitId":"jxrrelo"},"content":"        addLine();"},{"lineNumber":51,"author":{"gitId":"jxrrelo"},"content":"        System.out.println(\"    Got it. I\u0027ve added this task:\");"},{"lineNumber":52,"author":{"gitId":"jxrrelo"},"content":"        System.out.println(\"      \" + \"[E]\" + \"[\" + icon + \"] \" + desc);"},{"lineNumber":53,"author":{"gitId":"jxrrelo"},"content":"        System.out.println(\"    Now you have \" + numTasks + \" tasks in the list.\");"},{"lineNumber":54,"author":{"gitId":"jxrrelo"},"content":"        addLine();"},{"lineNumber":55,"author":{"gitId":"jxrrelo"},"content":"        System.out.println();"},{"lineNumber":56,"author":{"gitId":"jxrrelo"},"content":"    }"},{"lineNumber":57,"author":{"gitId":"jxrrelo"},"content":""},{"lineNumber":58,"author":{"gitId":"jxrrelo"},"content":"    public static void printAddedMsg(String input) {"},{"lineNumber":59,"author":{"gitId":"jxrrelo"},"content":"        addLine();"},{"lineNumber":60,"author":{"gitId":"jxrrelo"},"content":"        System.out.println(\"    added: \" + input);"},{"lineNumber":61,"author":{"gitId":"jxrrelo"},"content":"        addLine();"},{"lineNumber":62,"author":{"gitId":"jxrrelo"},"content":"        System.out.println();"},{"lineNumber":63,"author":{"gitId":"jxrrelo"},"content":"    }"},{"lineNumber":64,"author":{"gitId":"jxrrelo"},"content":""},{"lineNumber":65,"author":{"gitId":"jxrrelo"},"content":"    public static void printDeleteMsg(String icon, String desc, int numTasks) {"},{"lineNumber":66,"author":{"gitId":"jxrrelo"},"content":"        addLine();"},{"lineNumber":67,"author":{"gitId":"jxrrelo"},"content":"        System.out.println(\"    Noted. I\u0027ve removed this task:\");"},{"lineNumber":68,"author":{"gitId":"jxrrelo"},"content":"        System.out.println(\"      \" + \"[E]\" + \"[\" + icon + \"] \" + desc);"},{"lineNumber":69,"author":{"gitId":"jxrrelo"},"content":"        System.out.println(\"    Now you have \" + numTasks + \" tasks in the list.\");"},{"lineNumber":70,"author":{"gitId":"jxrrelo"},"content":"        addLine();"},{"lineNumber":71,"author":{"gitId":"jxrrelo"},"content":"        System.out.println();"},{"lineNumber":72,"author":{"gitId":"jxrrelo"},"content":"    }"},{"lineNumber":73,"author":{"gitId":"jxrrelo"},"content":""},{"lineNumber":74,"author":{"gitId":"jxrrelo"},"content":"    public static void printByeMsg() {"},{"lineNumber":75,"author":{"gitId":"jxrrelo"},"content":"        addLine();"},{"lineNumber":76,"author":{"gitId":"jxrrelo"},"content":"        System.out.println(\"    Bye. Hope to see you again soon!\");"},{"lineNumber":77,"author":{"gitId":"jxrrelo"},"content":"        addLine();"},{"lineNumber":78,"author":{"gitId":"jxrrelo"},"content":"    }"},{"lineNumber":79,"author":{"gitId":"jxrrelo"},"content":""},{"lineNumber":80,"author":{"gitId":"jxrrelo"},"content":"    public static void printErrorMsg(DukeException e) {"},{"lineNumber":81,"author":{"gitId":"jxrrelo"},"content":"        addLine();"},{"lineNumber":82,"author":{"gitId":"jxrrelo"},"content":"        System.out.println(\"    \" + e.getMessage());"},{"lineNumber":83,"author":{"gitId":"jxrrelo"},"content":"        addLine();"},{"lineNumber":84,"author":{"gitId":"jxrrelo"},"content":"        System.out.println();"},{"lineNumber":85,"author":{"gitId":"jxrrelo"},"content":"    }"},{"lineNumber":86,"author":{"gitId":"jxrrelo"},"content":""},{"lineNumber":87,"author":{"gitId":"jxrrelo"},"content":"    public static void printErrorMsg(Exception e) {"},{"lineNumber":88,"author":{"gitId":"jxrrelo"},"content":"        addLine();"},{"lineNumber":89,"author":{"gitId":"jxrrelo"},"content":"        System.out.println(\"    \" + e.getMessage());"},{"lineNumber":90,"author":{"gitId":"jxrrelo"},"content":"        addLine();"},{"lineNumber":91,"author":{"gitId":"jxrrelo"},"content":"        System.out.println();"},{"lineNumber":92,"author":{"gitId":"jxrrelo"},"content":"    }"},{"lineNumber":93,"author":{"gitId":"jxrrelo"},"content":"}"}],"authorContributionMap":{"jxrrelo":93}},{"path":"src/main/java/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jxrrelo"},"content":"public class Task {"},{"lineNumber":2,"author":{"gitId":"jxrrelo"},"content":"    protected String description;"},{"lineNumber":3,"author":{"gitId":"jxrrelo"},"content":"    protected boolean isDone;"},{"lineNumber":4,"author":{"gitId":"jxrrelo"},"content":"    protected String type;"},{"lineNumber":5,"author":{"gitId":"jxrrelo"},"content":""},{"lineNumber":6,"author":{"gitId":"jxrrelo"},"content":"    public Task(String description, String type) {"},{"lineNumber":7,"author":{"gitId":"jxrrelo"},"content":"        this.description \u003d description;"},{"lineNumber":8,"author":{"gitId":"jxrrelo"},"content":"        this.isDone \u003d false;"},{"lineNumber":9,"author":{"gitId":"jxrrelo"},"content":"        this.type \u003d type;"},{"lineNumber":10,"author":{"gitId":"jxrrelo"},"content":"    }"},{"lineNumber":11,"author":{"gitId":"jxrrelo"},"content":""},{"lineNumber":12,"author":{"gitId":"jxrrelo"},"content":"    public String getStatusIcon() {"},{"lineNumber":13,"author":{"gitId":"jxrrelo"},"content":"        return (isDone ? \"\\u2713\" : \" \"); //return tick or X symbols"},{"lineNumber":14,"author":{"gitId":"jxrrelo"},"content":"    }"},{"lineNumber":15,"author":{"gitId":"jxrrelo"},"content":""},{"lineNumber":16,"author":{"gitId":"jxrrelo"},"content":"    public String getDescription() {"},{"lineNumber":17,"author":{"gitId":"jxrrelo"},"content":"        return this.description;"},{"lineNumber":18,"author":{"gitId":"jxrrelo"},"content":"    }"},{"lineNumber":19,"author":{"gitId":"jxrrelo"},"content":""},{"lineNumber":20,"author":{"gitId":"jxrrelo"},"content":"    public void toggleStatus() {"},{"lineNumber":21,"author":{"gitId":"jxrrelo"},"content":"        this.isDone \u003d !this.isDone;"},{"lineNumber":22,"author":{"gitId":"jxrrelo"},"content":"    }"},{"lineNumber":23,"author":{"gitId":"jxrrelo"},"content":""},{"lineNumber":24,"author":{"gitId":"jxrrelo"},"content":"    public String getType() {"},{"lineNumber":25,"author":{"gitId":"jxrrelo"},"content":"        return this.type;"},{"lineNumber":26,"author":{"gitId":"jxrrelo"},"content":"    }"},{"lineNumber":27,"author":{"gitId":"jxrrelo"},"content":""},{"lineNumber":28,"author":{"gitId":"jxrrelo"},"content":"}"}],"authorContributionMap":{"jxrrelo":28}},{"path":"src/main/java/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jxrrelo"},"content":"public class Todo extends Task {"},{"lineNumber":2,"author":{"gitId":"jxrrelo"},"content":"    public Todo(String description) {"},{"lineNumber":3,"author":{"gitId":"jxrrelo"},"content":"        super(description, \"T\");"},{"lineNumber":4,"author":{"gitId":"jxrrelo"},"content":"    }"},{"lineNumber":5,"author":{"gitId":"jxrrelo"},"content":"}"}],"authorContributionMap":{"jxrrelo":5}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"jxrrelo"},"content":"todo read book"},{"lineNumber":2,"author":{"gitId":"jxrrelo"},"content":"deadline return book /by June 6th"},{"lineNumber":3,"author":{"gitId":"jxrrelo"},"content":"done 1"},{"lineNumber":4,"author":{"gitId":"jxrrelo"},"content":"list"}],"authorContributionMap":{"jxrrelo":4}}]
