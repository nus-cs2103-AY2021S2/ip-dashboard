[{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027checkstyle\u0027"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027"},{"lineNumber":6,"author":{"gitId":"-"},"content":"}"},{"lineNumber":7,"author":{"gitId":"-"},"content":""},{"lineNumber":8,"author":{"gitId":"-"},"content":"repositories {"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    mavenCentral()"},{"lineNumber":10,"author":{"gitId":"-"},"content":"}"},{"lineNumber":11,"author":{"gitId":"-"},"content":""},{"lineNumber":12,"author":{"gitId":"-"},"content":"dependencies {"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.5.0\u0027"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.5.0\u0027"},{"lineNumber":15,"author":{"gitId":"icelenaugust"},"content":""},{"lineNumber":16,"author":{"gitId":"icelenaugust"},"content":"    String javaFxVersion \u003d \u002711\u0027"},{"lineNumber":17,"author":{"gitId":"icelenaugust"},"content":""},{"lineNumber":18,"author":{"gitId":"icelenaugust"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027"},{"lineNumber":19,"author":{"gitId":"icelenaugust"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"},{"lineNumber":20,"author":{"gitId":"icelenaugust"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"},{"lineNumber":21,"author":{"gitId":"icelenaugust"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027"},{"lineNumber":22,"author":{"gitId":"icelenaugust"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"},{"lineNumber":23,"author":{"gitId":"icelenaugust"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"},{"lineNumber":24,"author":{"gitId":"icelenaugust"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027"},{"lineNumber":25,"author":{"gitId":"icelenaugust"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"},{"lineNumber":26,"author":{"gitId":"icelenaugust"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"},{"lineNumber":27,"author":{"gitId":"icelenaugust"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027"},{"lineNumber":28,"author":{"gitId":"icelenaugust"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"},{"lineNumber":29,"author":{"gitId":"icelenaugust"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"},{"lineNumber":30,"author":{"gitId":"-"},"content":"}"},{"lineNumber":31,"author":{"gitId":"-"},"content":""},{"lineNumber":32,"author":{"gitId":"-"},"content":"test {"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    useJUnitPlatform()"},{"lineNumber":34,"author":{"gitId":"-"},"content":""},{"lineNumber":35,"author":{"gitId":"-"},"content":"    testLogging {"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\""},{"lineNumber":37,"author":{"gitId":"-"},"content":""},{"lineNumber":38,"author":{"gitId":"-"},"content":"        showExceptions true"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\""},{"lineNumber":40,"author":{"gitId":"-"},"content":"        showCauses true"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        showStackTraces true"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":44,"author":{"gitId":"-"},"content":"}"},{"lineNumber":45,"author":{"gitId":"-"},"content":""},{"lineNumber":46,"author":{"gitId":"-"},"content":"application {"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    mainClassName \u003d \"seedu.duke.Duke\""},{"lineNumber":48,"author":{"gitId":"-"},"content":"}"},{"lineNumber":49,"author":{"gitId":"-"},"content":""},{"lineNumber":50,"author":{"gitId":"-"},"content":"shadowJar {"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    archiveBaseName \u003d \"duke\""},{"lineNumber":52,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null"},{"lineNumber":53,"author":{"gitId":"-"},"content":"}"},{"lineNumber":54,"author":{"gitId":"-"},"content":""},{"lineNumber":55,"author":{"gitId":"-"},"content":"checkstyle {"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    toolVersion \u003d \u00278.29\u0027"},{"lineNumber":57,"author":{"gitId":"-"},"content":"}"},{"lineNumber":58,"author":{"gitId":"-"},"content":""},{"lineNumber":59,"author":{"gitId":"-"},"content":"run{"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in"},{"lineNumber":61,"author":{"gitId":"icelenaugust"},"content":"    enableAssertions \u003d true"},{"lineNumber":62,"author":{"gitId":"-"},"content":"}"}],"authorContributionMap":{"icelenaugust":16,"-":46}},{"path":"config/travis/check-eof-newline.sh","fileType":"sh","lines":[{"lineNumber":1,"author":{"gitId":"icelenaugust"},"content":"#!/bin/sh"},{"lineNumber":2,"author":{"gitId":"icelenaugust"},"content":"# Checks that all text files end with a newline."},{"lineNumber":3,"author":{"gitId":"icelenaugust"},"content":""},{"lineNumber":4,"author":{"gitId":"icelenaugust"},"content":"ret\u003d0"},{"lineNumber":5,"author":{"gitId":"icelenaugust"},"content":""},{"lineNumber":6,"author":{"gitId":"icelenaugust"},"content":"# Preserve filename with spaces by only splitting on newlines."},{"lineNumber":7,"author":{"gitId":"icelenaugust"},"content":"IFS\u003d\u0027"},{"lineNumber":8,"author":{"gitId":"icelenaugust"},"content":"\u0027"},{"lineNumber":9,"author":{"gitId":"icelenaugust"},"content":""},{"lineNumber":10,"author":{"gitId":"icelenaugust"},"content":"for filename in $(git grep --cached -I -l -e \u0027\u0027 -- \u0027:/\u0027); do"},{"lineNumber":11,"author":{"gitId":"icelenaugust"},"content":"    if [ \"$(tail -c 1 \"./$filename\")\" !\u003d \u0027\u0027 ]; then"},{"lineNumber":12,"author":{"gitId":"icelenaugust"},"content":"        line\u003d\"$(wc -l \"./$filename\" | cut -d\u0027 \u0027 -f1)\""},{"lineNumber":13,"author":{"gitId":"icelenaugust"},"content":"        echo \"ERROR:$filename:$line: no newline at EOF.\""},{"lineNumber":14,"author":{"gitId":"icelenaugust"},"content":"        ret\u003d1"},{"lineNumber":15,"author":{"gitId":"icelenaugust"},"content":"    fi"},{"lineNumber":16,"author":{"gitId":"icelenaugust"},"content":"done"},{"lineNumber":17,"author":{"gitId":"icelenaugust"},"content":""},{"lineNumber":18,"author":{"gitId":"icelenaugust"},"content":"exit $ret"}],"authorContributionMap":{"icelenaugust":18}},{"path":"config/travis/check-line-endings.sh","fileType":"sh","lines":[{"lineNumber":1,"author":{"gitId":"icelenaugust"},"content":"#!/bin/sh"},{"lineNumber":2,"author":{"gitId":"icelenaugust"},"content":"# Checks for prohibited line endings."},{"lineNumber":3,"author":{"gitId":"icelenaugust"},"content":"# Prohibited line endings: \\r\\n"},{"lineNumber":4,"author":{"gitId":"icelenaugust"},"content":""},{"lineNumber":5,"author":{"gitId":"icelenaugust"},"content":"git grep --cached -I -n --no-color -P \u0027\\r$\u0027 -- \u0027:/\u0027 |"},{"lineNumber":6,"author":{"gitId":"icelenaugust"},"content":"awk \u0027"},{"lineNumber":7,"author":{"gitId":"icelenaugust"},"content":"    BEGIN {"},{"lineNumber":8,"author":{"gitId":"icelenaugust"},"content":"        FS \u003d \":\""},{"lineNumber":9,"author":{"gitId":"icelenaugust"},"content":"        OFS \u003d \":\""},{"lineNumber":10,"author":{"gitId":"icelenaugust"},"content":"        ret \u003d 0"},{"lineNumber":11,"author":{"gitId":"icelenaugust"},"content":"    }"},{"lineNumber":12,"author":{"gitId":"icelenaugust"},"content":"    {"},{"lineNumber":13,"author":{"gitId":"icelenaugust"},"content":"        ret \u003d 1"},{"lineNumber":14,"author":{"gitId":"icelenaugust"},"content":"        print \"ERROR\", $1, $2, \" prohibited \\\\r\\\\n line ending, use \\\\n instead.\""},{"lineNumber":15,"author":{"gitId":"icelenaugust"},"content":"    }"},{"lineNumber":16,"author":{"gitId":"icelenaugust"},"content":"    END {"},{"lineNumber":17,"author":{"gitId":"icelenaugust"},"content":"        exit ret"},{"lineNumber":18,"author":{"gitId":"icelenaugust"},"content":"    }"},{"lineNumber":19,"author":{"gitId":"icelenaugust"},"content":"\u0027"}],"authorContributionMap":{"icelenaugust":19}},{"path":"config/travis/check-trailing-whitespace.sh","fileType":"sh","lines":[{"lineNumber":1,"author":{"gitId":"icelenaugust"},"content":"#!/bin/sh"},{"lineNumber":2,"author":{"gitId":"icelenaugust"},"content":"# Checks for trailing whitespace"},{"lineNumber":3,"author":{"gitId":"icelenaugust"},"content":""},{"lineNumber":4,"author":{"gitId":"icelenaugust"},"content":"git grep --cached -I -n --no-color -P \u0027[ \\t]+$\u0027 -- \u0027:/\u0027 |"},{"lineNumber":5,"author":{"gitId":"icelenaugust"},"content":"awk \u0027"},{"lineNumber":6,"author":{"gitId":"icelenaugust"},"content":"    BEGIN {"},{"lineNumber":7,"author":{"gitId":"icelenaugust"},"content":"        FS \u003d \":\""},{"lineNumber":8,"author":{"gitId":"icelenaugust"},"content":"        OFS \u003d \":\""},{"lineNumber":9,"author":{"gitId":"icelenaugust"},"content":"        ret \u003d 0"},{"lineNumber":10,"author":{"gitId":"icelenaugust"},"content":"    }"},{"lineNumber":11,"author":{"gitId":"icelenaugust"},"content":"    {"},{"lineNumber":12,"author":{"gitId":"icelenaugust"},"content":"        # Only warn for markdown files (*.md) to accomodate text editors"},{"lineNumber":13,"author":{"gitId":"icelenaugust"},"content":"        # which do not properly handle trailing whitespace."},{"lineNumber":14,"author":{"gitId":"icelenaugust"},"content":"        # (e.g. GitHub web editor)"},{"lineNumber":15,"author":{"gitId":"icelenaugust"},"content":"        if ($1 ~ /\\.md$/) {"},{"lineNumber":16,"author":{"gitId":"icelenaugust"},"content":"            severity \u003d \"WARN\""},{"lineNumber":17,"author":{"gitId":"icelenaugust"},"content":"        } else {"},{"lineNumber":18,"author":{"gitId":"icelenaugust"},"content":"            severity \u003d \"ERROR\""},{"lineNumber":19,"author":{"gitId":"icelenaugust"},"content":"            ret \u003d 1"},{"lineNumber":20,"author":{"gitId":"icelenaugust"},"content":"        }"},{"lineNumber":21,"author":{"gitId":"icelenaugust"},"content":"        print severity, $1, $2, \" trailing whitespace.\""},{"lineNumber":22,"author":{"gitId":"icelenaugust"},"content":"    }"},{"lineNumber":23,"author":{"gitId":"icelenaugust"},"content":"    END {"},{"lineNumber":24,"author":{"gitId":"icelenaugust"},"content":"        exit ret"},{"lineNumber":25,"author":{"gitId":"icelenaugust"},"content":"    }"},{"lineNumber":26,"author":{"gitId":"icelenaugust"},"content":"\u0027"}],"authorContributionMap":{"icelenaugust":26}},{"path":"config/travis/run-checks.sh","fileType":"sh","lines":[{"lineNumber":1,"author":{"gitId":"icelenaugust"},"content":"#!/bin/sh"},{"lineNumber":2,"author":{"gitId":"icelenaugust"},"content":"# Runs all check-* scripts, and returns a non-zero exit code if any of them fail."},{"lineNumber":3,"author":{"gitId":"icelenaugust"},"content":""},{"lineNumber":4,"author":{"gitId":"icelenaugust"},"content":"dir\u003d$(CDPATH\u003d cd -- \"$(dirname -- \"$0\")\" \u0026\u0026 pwd) \u0026\u0026"},{"lineNumber":5,"author":{"gitId":"icelenaugust"},"content":"ret\u003d0 \u0026\u0026"},{"lineNumber":6,"author":{"gitId":"icelenaugust"},"content":"for checkscript in \"$dir\"/check-*; do"},{"lineNumber":7,"author":{"gitId":"icelenaugust"},"content":"    if ! \"$checkscript\"; then"},{"lineNumber":8,"author":{"gitId":"icelenaugust"},"content":"        ret\u003d1"},{"lineNumber":9,"author":{"gitId":"icelenaugust"},"content":"    fi"},{"lineNumber":10,"author":{"gitId":"icelenaugust"},"content":"done"},{"lineNumber":11,"author":{"gitId":"icelenaugust"},"content":"exit $ret"}],"authorContributionMap":{"icelenaugust":11}},{"path":"data/taskData.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"icelenaugust"},"content":"D|0|return book|23 Dec 2021"},{"lineNumber":2,"author":{"gitId":"icelenaugust"},"content":"E|0|project meeting|23 Dec 2021 03:00 pm|23 Dec 2021 05:00 pm"},{"lineNumber":3,"author":{"gitId":"icelenaugust"},"content":"T|1|eat breakfast"},{"lineNumber":4,"author":{"gitId":"icelenaugust"},"content":"T|1|eat dinner"},{"lineNumber":5,"author":{"gitId":"icelenaugust"},"content":"E|0|sleep|22 Nov 2021 09:00 pm|22 Nov 2021 10:00 pm"}],"authorContributionMap":{"icelenaugust":5}},{"path":"src/main/java/duke/DialogBox.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"icelenaugust"},"content":"package duke;"},{"lineNumber":2,"author":{"gitId":"icelenaugust"},"content":""},{"lineNumber":3,"author":{"gitId":"icelenaugust"},"content":"import java.io.IOException;"},{"lineNumber":4,"author":{"gitId":"icelenaugust"},"content":"import java.util.Collections;"},{"lineNumber":5,"author":{"gitId":"icelenaugust"},"content":""},{"lineNumber":6,"author":{"gitId":"icelenaugust"},"content":"import javafx.collections.FXCollections;"},{"lineNumber":7,"author":{"gitId":"icelenaugust"},"content":"import javafx.collections.ObservableList;"},{"lineNumber":8,"author":{"gitId":"icelenaugust"},"content":"import javafx.fxml.FXML;"},{"lineNumber":9,"author":{"gitId":"icelenaugust"},"content":"import javafx.fxml.FXMLLoader;"},{"lineNumber":10,"author":{"gitId":"icelenaugust"},"content":"import javafx.geometry.Pos;"},{"lineNumber":11,"author":{"gitId":"icelenaugust"},"content":"import javafx.scene.Node;"},{"lineNumber":12,"author":{"gitId":"icelenaugust"},"content":"import javafx.scene.control.Label;"},{"lineNumber":13,"author":{"gitId":"icelenaugust"},"content":"import javafx.scene.image.Image;"},{"lineNumber":14,"author":{"gitId":"icelenaugust"},"content":"import javafx.scene.image.ImageView;"},{"lineNumber":15,"author":{"gitId":"icelenaugust"},"content":"import javafx.scene.layout.HBox;"},{"lineNumber":16,"author":{"gitId":"icelenaugust"},"content":""},{"lineNumber":17,"author":{"gitId":"icelenaugust"},"content":"/**"},{"lineNumber":18,"author":{"gitId":"icelenaugust"},"content":" * An example of a custom control using FXML."},{"lineNumber":19,"author":{"gitId":"icelenaugust"},"content":" * This control represents a dialog box consisting of an ImageView to represent the speaker\u0027s face and a label"},{"lineNumber":20,"author":{"gitId":"icelenaugust"},"content":" * containing text from the speaker."},{"lineNumber":21,"author":{"gitId":"icelenaugust"},"content":" */"},{"lineNumber":22,"author":{"gitId":"icelenaugust"},"content":"public class DialogBox extends HBox {"},{"lineNumber":23,"author":{"gitId":"icelenaugust"},"content":"    @FXML"},{"lineNumber":24,"author":{"gitId":"icelenaugust"},"content":"    private Label dialog;"},{"lineNumber":25,"author":{"gitId":"icelenaugust"},"content":"    @FXML"},{"lineNumber":26,"author":{"gitId":"icelenaugust"},"content":"    private ImageView displayPicture;"},{"lineNumber":27,"author":{"gitId":"icelenaugust"},"content":""},{"lineNumber":28,"author":{"gitId":"icelenaugust"},"content":"    /**"},{"lineNumber":29,"author":{"gitId":"icelenaugust"},"content":"     * Constructor"},{"lineNumber":30,"author":{"gitId":"icelenaugust"},"content":"     * @param text display the text sent by the user."},{"lineNumber":31,"author":{"gitId":"icelenaugust"},"content":"     * @param img user profile picture."},{"lineNumber":32,"author":{"gitId":"icelenaugust"},"content":"     */"},{"lineNumber":33,"author":{"gitId":"icelenaugust"},"content":"    private DialogBox(String text, Image img) {"},{"lineNumber":34,"author":{"gitId":"icelenaugust"},"content":"        try {"},{"lineNumber":35,"author":{"gitId":"icelenaugust"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(\"/view/DialogBox.fxml\"));"},{"lineNumber":36,"author":{"gitId":"icelenaugust"},"content":"            fxmlLoader.setController(this);"},{"lineNumber":37,"author":{"gitId":"icelenaugust"},"content":"            fxmlLoader.setRoot(this);"},{"lineNumber":38,"author":{"gitId":"icelenaugust"},"content":"            fxmlLoader.load();"},{"lineNumber":39,"author":{"gitId":"icelenaugust"},"content":"        } catch (IOException e) {"},{"lineNumber":40,"author":{"gitId":"icelenaugust"},"content":"            e.printStackTrace();"},{"lineNumber":41,"author":{"gitId":"icelenaugust"},"content":"        }"},{"lineNumber":42,"author":{"gitId":"icelenaugust"},"content":""},{"lineNumber":43,"author":{"gitId":"icelenaugust"},"content":"        dialog.setText(text);"},{"lineNumber":44,"author":{"gitId":"icelenaugust"},"content":"        displayPicture.setImage(img);"},{"lineNumber":45,"author":{"gitId":"icelenaugust"},"content":"    }"},{"lineNumber":46,"author":{"gitId":"icelenaugust"},"content":""},{"lineNumber":47,"author":{"gitId":"icelenaugust"},"content":"    /**"},{"lineNumber":48,"author":{"gitId":"icelenaugust"},"content":"     * Flips the dialog box such that the ImageView is on the left and text on the right."},{"lineNumber":49,"author":{"gitId":"icelenaugust"},"content":"     */"},{"lineNumber":50,"author":{"gitId":"icelenaugust"},"content":"    private void flip() {"},{"lineNumber":51,"author":{"gitId":"icelenaugust"},"content":"        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());"},{"lineNumber":52,"author":{"gitId":"icelenaugust"},"content":"        Collections.reverse(tmp);"},{"lineNumber":53,"author":{"gitId":"icelenaugust"},"content":"        getChildren().setAll(tmp);"},{"lineNumber":54,"author":{"gitId":"icelenaugust"},"content":"        setAlignment(Pos.TOP_LEFT);"},{"lineNumber":55,"author":{"gitId":"icelenaugust"},"content":"    }"},{"lineNumber":56,"author":{"gitId":"icelenaugust"},"content":""},{"lineNumber":57,"author":{"gitId":"icelenaugust"},"content":"    /**"},{"lineNumber":58,"author":{"gitId":"icelenaugust"},"content":"     * Creates a dialog for user."},{"lineNumber":59,"author":{"gitId":"icelenaugust"},"content":"     * @param text display the text sent by the user."},{"lineNumber":60,"author":{"gitId":"icelenaugust"},"content":"     * @param img user profile picture."},{"lineNumber":61,"author":{"gitId":"icelenaugust"},"content":"     */"},{"lineNumber":62,"author":{"gitId":"icelenaugust"},"content":"    public static DialogBox getUserDialog(String text, Image img) {"},{"lineNumber":63,"author":{"gitId":"icelenaugust"},"content":"        return new DialogBox(text, img);"},{"lineNumber":64,"author":{"gitId":"icelenaugust"},"content":"    }"},{"lineNumber":65,"author":{"gitId":"icelenaugust"},"content":"    /**"},{"lineNumber":66,"author":{"gitId":"icelenaugust"},"content":"     * Creates a dialog for the bot."},{"lineNumber":67,"author":{"gitId":"icelenaugust"},"content":"     * @param text display the text responded by the bot."},{"lineNumber":68,"author":{"gitId":"icelenaugust"},"content":"     * @param img bot profile picture."},{"lineNumber":69,"author":{"gitId":"icelenaugust"},"content":"     */"},{"lineNumber":70,"author":{"gitId":"icelenaugust"},"content":"    public static DialogBox getDukeDialog(String text, Image img) {"},{"lineNumber":71,"author":{"gitId":"icelenaugust"},"content":"        var db \u003d new DialogBox(text, img);"},{"lineNumber":72,"author":{"gitId":"icelenaugust"},"content":"        db.flip();"},{"lineNumber":73,"author":{"gitId":"icelenaugust"},"content":"        return db;"},{"lineNumber":74,"author":{"gitId":"icelenaugust"},"content":"    }"},{"lineNumber":75,"author":{"gitId":"icelenaugust"},"content":"}"}],"authorContributionMap":{"icelenaugust":75}},{"path":"src/main/java/duke/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"icelenaugust"},"content":"package duke;"},{"lineNumber":2,"author":{"gitId":"icelenaugust"},"content":""},{"lineNumber":3,"author":{"gitId":"icelenaugust"},"content":"import duke.commands.ChatBotCommand;"},{"lineNumber":4,"author":{"gitId":"icelenaugust"},"content":"import duke.exceptions.ChatBotException;"},{"lineNumber":5,"author":{"gitId":"icelenaugust"},"content":""},{"lineNumber":6,"author":{"gitId":"icelenaugust"},"content":"/**"},{"lineNumber":7,"author":{"gitId":"icelenaugust"},"content":" * The Duke program is an interactive application which"},{"lineNumber":8,"author":{"gitId":"icelenaugust"},"content":" * enables users to store and modify their tasks."},{"lineNumber":9,"author":{"gitId":"icelenaugust"},"content":" */"},{"lineNumber":10,"author":{"gitId":"icelenaugust"},"content":"public class Duke {"},{"lineNumber":11,"author":{"gitId":"icelenaugust"},"content":"    private Storage storage;"},{"lineNumber":12,"author":{"gitId":"icelenaugust"},"content":"    private TaskHandler th;"},{"lineNumber":13,"author":{"gitId":"icelenaugust"},"content":""},{"lineNumber":14,"author":{"gitId":"icelenaugust"},"content":"    /**"},{"lineNumber":15,"author":{"gitId":"icelenaugust"},"content":"     *  ChatBot constructor."},{"lineNumber":16,"author":{"gitId":"icelenaugust"},"content":"     *"},{"lineNumber":17,"author":{"gitId":"icelenaugust"},"content":"     *  @param filePath Relative filepath to persistent storage."},{"lineNumber":18,"author":{"gitId":"icelenaugust"},"content":"     */"},{"lineNumber":19,"author":{"gitId":"icelenaugust"},"content":"    public Duke(String filePath) {"},{"lineNumber":20,"author":{"gitId":"icelenaugust"},"content":"        storage \u003d new Storage(filePath);"},{"lineNumber":21,"author":{"gitId":"icelenaugust"},"content":"        th \u003d new TaskHandler();"},{"lineNumber":22,"author":{"gitId":"icelenaugust"},"content":"        try {"},{"lineNumber":23,"author":{"gitId":"icelenaugust"},"content":"            th.loadTaskList(storage.loadTaskList());"},{"lineNumber":24,"author":{"gitId":"icelenaugust"},"content":"        } catch (ChatBotException e) {"},{"lineNumber":25,"author":{"gitId":"icelenaugust"},"content":"            th.clearTaskList();"},{"lineNumber":26,"author":{"gitId":"icelenaugust"},"content":"        }"},{"lineNumber":27,"author":{"gitId":"icelenaugust"},"content":"    }"},{"lineNumber":28,"author":{"gitId":"icelenaugust"},"content":""},{"lineNumber":29,"author":{"gitId":"icelenaugust"},"content":"    /**"},{"lineNumber":30,"author":{"gitId":"icelenaugust"},"content":"     *  Prints the response from the bot."},{"lineNumber":31,"author":{"gitId":"icelenaugust"},"content":"     *"},{"lineNumber":32,"author":{"gitId":"icelenaugust"},"content":"     *  @param input user input."},{"lineNumber":33,"author":{"gitId":"icelenaugust"},"content":"     */"},{"lineNumber":34,"author":{"gitId":"icelenaugust"},"content":"    public String getResponse(String input) {"},{"lineNumber":35,"author":{"gitId":"icelenaugust"},"content":"        String output;"},{"lineNumber":36,"author":{"gitId":"icelenaugust"},"content":"        boolean isExit \u003d false;"},{"lineNumber":37,"author":{"gitId":"icelenaugust"},"content":"        try {"},{"lineNumber":38,"author":{"gitId":"icelenaugust"},"content":"            ChatBotCommand c \u003d Parser.parse(input);"},{"lineNumber":39,"author":{"gitId":"icelenaugust"},"content":""},{"lineNumber":40,"author":{"gitId":"icelenaugust"},"content":"            if (c.isTerminated()) {"},{"lineNumber":41,"author":{"gitId":"icelenaugust"},"content":"                return \"\";"},{"lineNumber":42,"author":{"gitId":"icelenaugust"},"content":"            }"},{"lineNumber":43,"author":{"gitId":"icelenaugust"},"content":"            output \u003d c.runTask(th, storage);"},{"lineNumber":44,"author":{"gitId":"icelenaugust"},"content":"        } catch (ChatBotException e) {"},{"lineNumber":45,"author":{"gitId":"icelenaugust"},"content":"            output \u003d \"Error: \" + e.getMessage();"},{"lineNumber":46,"author":{"gitId":"icelenaugust"},"content":"        }"},{"lineNumber":47,"author":{"gitId":"icelenaugust"},"content":"        return output;"},{"lineNumber":48,"author":{"gitId":"icelenaugust"},"content":"    }"},{"lineNumber":49,"author":{"gitId":"icelenaugust"},"content":""},{"lineNumber":50,"author":{"gitId":"icelenaugust"},"content":"    public static String getWelcomeMessage() {"},{"lineNumber":51,"author":{"gitId":"icelenaugust"},"content":"        return \"Hello! I\u0027m Duke\\n\""},{"lineNumber":52,"author":{"gitId":"icelenaugust"},"content":"                + \"What can I do for you?\";"},{"lineNumber":53,"author":{"gitId":"icelenaugust"},"content":"    }"},{"lineNumber":54,"author":{"gitId":"icelenaugust"},"content":"}"}],"authorContributionMap":{"icelenaugust":54}},{"path":"src/main/java/duke/Launcher.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"icelenaugust"},"content":"package duke;"},{"lineNumber":2,"author":{"gitId":"icelenaugust"},"content":""},{"lineNumber":3,"author":{"gitId":"icelenaugust"},"content":"import javafx.application.Application;"},{"lineNumber":4,"author":{"gitId":"icelenaugust"},"content":""},{"lineNumber":5,"author":{"gitId":"icelenaugust"},"content":"/**"},{"lineNumber":6,"author":{"gitId":"icelenaugust"},"content":" * A launcher class to workaround classpath issues."},{"lineNumber":7,"author":{"gitId":"icelenaugust"},"content":" */"},{"lineNumber":8,"author":{"gitId":"icelenaugust"},"content":"public class Launcher {"},{"lineNumber":9,"author":{"gitId":"icelenaugust"},"content":"    public static void main(String[] args) {"},{"lineNumber":10,"author":{"gitId":"icelenaugust"},"content":"        Application.launch(Main.class, args);"},{"lineNumber":11,"author":{"gitId":"icelenaugust"},"content":"    }"},{"lineNumber":12,"author":{"gitId":"icelenaugust"},"content":"}"},{"lineNumber":13,"author":{"gitId":"icelenaugust"},"content":""}],"authorContributionMap":{"icelenaugust":13}},{"path":"src/main/java/duke/Main.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"icelenaugust"},"content":"package duke;"},{"lineNumber":2,"author":{"gitId":"icelenaugust"},"content":""},{"lineNumber":3,"author":{"gitId":"icelenaugust"},"content":"import java.io.IOException;"},{"lineNumber":4,"author":{"gitId":"icelenaugust"},"content":""},{"lineNumber":5,"author":{"gitId":"icelenaugust"},"content":"import javafx.application.Application;"},{"lineNumber":6,"author":{"gitId":"icelenaugust"},"content":"import javafx.fxml.FXMLLoader;"},{"lineNumber":7,"author":{"gitId":"icelenaugust"},"content":"import javafx.scene.Scene;"},{"lineNumber":8,"author":{"gitId":"icelenaugust"},"content":"import javafx.scene.layout.AnchorPane;"},{"lineNumber":9,"author":{"gitId":"icelenaugust"},"content":"import javafx.stage.Stage;"},{"lineNumber":10,"author":{"gitId":"icelenaugust"},"content":""},{"lineNumber":11,"author":{"gitId":"icelenaugust"},"content":"/**"},{"lineNumber":12,"author":{"gitId":"icelenaugust"},"content":" * A GUI for Duke using FXML."},{"lineNumber":13,"author":{"gitId":"icelenaugust"},"content":" */"},{"lineNumber":14,"author":{"gitId":"icelenaugust"},"content":"public class Main extends Application {"},{"lineNumber":15,"author":{"gitId":"icelenaugust"},"content":""},{"lineNumber":16,"author":{"gitId":"icelenaugust"},"content":"    private Duke duke \u003d new Duke(\"./data/taskData.txt\");"},{"lineNumber":17,"author":{"gitId":"icelenaugust"},"content":""},{"lineNumber":18,"author":{"gitId":"icelenaugust"},"content":"    @Override"},{"lineNumber":19,"author":{"gitId":"icelenaugust"},"content":"    public void start(Stage stage) {"},{"lineNumber":20,"author":{"gitId":"icelenaugust"},"content":"        try {"},{"lineNumber":21,"author":{"gitId":"icelenaugust"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(Main.class.getResource(\"/view/MainWindow.fxml\"));"},{"lineNumber":22,"author":{"gitId":"icelenaugust"},"content":"            AnchorPane ap \u003d fxmlLoader.load();"},{"lineNumber":23,"author":{"gitId":"icelenaugust"},"content":"            Scene scene \u003d new Scene(ap);"},{"lineNumber":24,"author":{"gitId":"icelenaugust"},"content":"            stage.setScene(scene);"},{"lineNumber":25,"author":{"gitId":"icelenaugust"},"content":"            fxmlLoader.\u003cMainWindow\u003egetController().setDuke(duke);"},{"lineNumber":26,"author":{"gitId":"icelenaugust"},"content":"            stage.show();"},{"lineNumber":27,"author":{"gitId":"icelenaugust"},"content":"        } catch (IOException e) {"},{"lineNumber":28,"author":{"gitId":"icelenaugust"},"content":"            e.printStackTrace();"},{"lineNumber":29,"author":{"gitId":"icelenaugust"},"content":"        }"},{"lineNumber":30,"author":{"gitId":"icelenaugust"},"content":"    }"},{"lineNumber":31,"author":{"gitId":"icelenaugust"},"content":"}"}],"authorContributionMap":{"icelenaugust":31}},{"path":"src/main/java/duke/MainWindow.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"icelenaugust"},"content":"package duke;"},{"lineNumber":2,"author":{"gitId":"icelenaugust"},"content":""},{"lineNumber":3,"author":{"gitId":"icelenaugust"},"content":"import javafx.fxml.FXML;"},{"lineNumber":4,"author":{"gitId":"icelenaugust"},"content":"import javafx.scene.control.Button;"},{"lineNumber":5,"author":{"gitId":"icelenaugust"},"content":"import javafx.scene.control.ScrollPane;"},{"lineNumber":6,"author":{"gitId":"icelenaugust"},"content":"import javafx.scene.control.TextField;"},{"lineNumber":7,"author":{"gitId":"icelenaugust"},"content":"import javafx.scene.image.Image;"},{"lineNumber":8,"author":{"gitId":"icelenaugust"},"content":"import javafx.scene.layout.AnchorPane;"},{"lineNumber":9,"author":{"gitId":"icelenaugust"},"content":"import javafx.scene.layout.VBox;"},{"lineNumber":10,"author":{"gitId":"icelenaugust"},"content":"/**"},{"lineNumber":11,"author":{"gitId":"icelenaugust"},"content":" * Controller for MainWindow. Provides the layout for the other controls."},{"lineNumber":12,"author":{"gitId":"icelenaugust"},"content":" */"},{"lineNumber":13,"author":{"gitId":"icelenaugust"},"content":"public class MainWindow extends AnchorPane {"},{"lineNumber":14,"author":{"gitId":"icelenaugust"},"content":"    @FXML"},{"lineNumber":15,"author":{"gitId":"icelenaugust"},"content":"    private ScrollPane scrollPane;"},{"lineNumber":16,"author":{"gitId":"icelenaugust"},"content":"    @FXML"},{"lineNumber":17,"author":{"gitId":"icelenaugust"},"content":"    private VBox dialogContainer;"},{"lineNumber":18,"author":{"gitId":"icelenaugust"},"content":"    @FXML"},{"lineNumber":19,"author":{"gitId":"icelenaugust"},"content":"    private TextField userInput;"},{"lineNumber":20,"author":{"gitId":"icelenaugust"},"content":"    @FXML"},{"lineNumber":21,"author":{"gitId":"icelenaugust"},"content":"    private Button sendButton;"},{"lineNumber":22,"author":{"gitId":"icelenaugust"},"content":""},{"lineNumber":23,"author":{"gitId":"icelenaugust"},"content":"    private Duke duke;"},{"lineNumber":24,"author":{"gitId":"icelenaugust"},"content":""},{"lineNumber":25,"author":{"gitId":"icelenaugust"},"content":"    private Image userImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaUser.png\"));"},{"lineNumber":26,"author":{"gitId":"icelenaugust"},"content":"    private Image dukeImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaDuke.png\"));"},{"lineNumber":27,"author":{"gitId":"icelenaugust"},"content":""},{"lineNumber":28,"author":{"gitId":"icelenaugust"},"content":"    /**"},{"lineNumber":29,"author":{"gitId":"icelenaugust"},"content":"     *  Starts the chat bot by sending the welcome message"},{"lineNumber":30,"author":{"gitId":"icelenaugust"},"content":"     */"},{"lineNumber":31,"author":{"gitId":"icelenaugust"},"content":"    @FXML"},{"lineNumber":32,"author":{"gitId":"icelenaugust"},"content":"    public void initialize() {"},{"lineNumber":33,"author":{"gitId":"icelenaugust"},"content":"        scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());"},{"lineNumber":34,"author":{"gitId":"icelenaugust"},"content":"        dialogContainer.getChildren().addAll("},{"lineNumber":35,"author":{"gitId":"icelenaugust"},"content":"                DialogBox.getDukeDialog(Duke.getWelcomeMessage(), dukeImage)"},{"lineNumber":36,"author":{"gitId":"icelenaugust"},"content":"        );"},{"lineNumber":37,"author":{"gitId":"icelenaugust"},"content":"    }"},{"lineNumber":38,"author":{"gitId":"icelenaugust"},"content":""},{"lineNumber":39,"author":{"gitId":"icelenaugust"},"content":"    public void setDuke(Duke d) {"},{"lineNumber":40,"author":{"gitId":"icelenaugust"},"content":"        duke \u003d d;"},{"lineNumber":41,"author":{"gitId":"icelenaugust"},"content":"    }"},{"lineNumber":42,"author":{"gitId":"icelenaugust"},"content":""},{"lineNumber":43,"author":{"gitId":"icelenaugust"},"content":"    /**"},{"lineNumber":44,"author":{"gitId":"icelenaugust"},"content":"     * Creates two dialog boxes, one echoing user input and the other containing Duke\u0027s reply and then appends them to"},{"lineNumber":45,"author":{"gitId":"icelenaugust"},"content":"     * the dialog container. Clears the user input after processing."},{"lineNumber":46,"author":{"gitId":"icelenaugust"},"content":"     */"},{"lineNumber":47,"author":{"gitId":"icelenaugust"},"content":"    @FXML"},{"lineNumber":48,"author":{"gitId":"icelenaugust"},"content":"    private void handleUserInput() {"},{"lineNumber":49,"author":{"gitId":"icelenaugust"},"content":"        String input \u003d userInput.getText();"},{"lineNumber":50,"author":{"gitId":"icelenaugust"},"content":"        String response \u003d duke.getResponse(input);"},{"lineNumber":51,"author":{"gitId":"icelenaugust"},"content":"        dialogContainer.getChildren().addAll("},{"lineNumber":52,"author":{"gitId":"icelenaugust"},"content":"                DialogBox.getUserDialog(input, userImage),"},{"lineNumber":53,"author":{"gitId":"icelenaugust"},"content":"                DialogBox.getDukeDialog(response, dukeImage)"},{"lineNumber":54,"author":{"gitId":"icelenaugust"},"content":"        );"},{"lineNumber":55,"author":{"gitId":"icelenaugust"},"content":"        userInput.clear();"},{"lineNumber":56,"author":{"gitId":"icelenaugust"},"content":"    }"},{"lineNumber":57,"author":{"gitId":"icelenaugust"},"content":"}"}],"authorContributionMap":{"icelenaugust":57}},{"path":"src/main/java/duke/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"icelenaugust"},"content":"package duke;"},{"lineNumber":2,"author":{"gitId":"icelenaugust"},"content":""},{"lineNumber":3,"author":{"gitId":"icelenaugust"},"content":"import java.time.LocalDate;"},{"lineNumber":4,"author":{"gitId":"icelenaugust"},"content":"import java.time.LocalDateTime;"},{"lineNumber":5,"author":{"gitId":"icelenaugust"},"content":"import java.time.format.DateTimeFormatter;"},{"lineNumber":6,"author":{"gitId":"icelenaugust"},"content":"import java.time.format.DateTimeParseException;"},{"lineNumber":7,"author":{"gitId":"icelenaugust"},"content":""},{"lineNumber":8,"author":{"gitId":"icelenaugust"},"content":"import duke.commands.ByeCommand;"},{"lineNumber":9,"author":{"gitId":"icelenaugust"},"content":"import duke.commands.ChatBotCommand;"},{"lineNumber":10,"author":{"gitId":"icelenaugust"},"content":"import duke.commands.DeadlineCommand;"},{"lineNumber":11,"author":{"gitId":"icelenaugust"},"content":"import duke.commands.DeleteCommand;"},{"lineNumber":12,"author":{"gitId":"icelenaugust"},"content":"import duke.commands.DoneCommand;"},{"lineNumber":13,"author":{"gitId":"icelenaugust"},"content":"import duke.commands.EventCommand;"},{"lineNumber":14,"author":{"gitId":"icelenaugust"},"content":"import duke.commands.FindCommand;"},{"lineNumber":15,"author":{"gitId":"icelenaugust"},"content":"import duke.commands.ListCommand;"},{"lineNumber":16,"author":{"gitId":"icelenaugust"},"content":"import duke.commands.TodoCommand;"},{"lineNumber":17,"author":{"gitId":"icelenaugust"},"content":"import duke.exceptions.*;"},{"lineNumber":18,"author":{"gitId":"icelenaugust"},"content":""},{"lineNumber":19,"author":{"gitId":"icelenaugust"},"content":""},{"lineNumber":20,"author":{"gitId":"icelenaugust"},"content":"public class Parser {"},{"lineNumber":21,"author":{"gitId":"icelenaugust"},"content":"    private static final String[] COMMAND_TYPE_ARRAY \u003d {"},{"lineNumber":22,"author":{"gitId":"icelenaugust"},"content":"        \"bye\", \"list\", \"todo\", \"deadline\", \"event\", \"find\", \"done\", \"delete\""},{"lineNumber":23,"author":{"gitId":"icelenaugust"},"content":"    };"},{"lineNumber":24,"author":{"gitId":"icelenaugust"},"content":"    private static LocalDate formatDate(String date) throws InvalidDateFormatException {"},{"lineNumber":25,"author":{"gitId":"icelenaugust"},"content":"        try {"},{"lineNumber":26,"author":{"gitId":"icelenaugust"},"content":"            DateTimeFormatter dateFormat \u003d DateTimeFormatter.ofPattern(\"dd MM yyyy\");"},{"lineNumber":27,"author":{"gitId":"icelenaugust"},"content":"            return LocalDate.parse(date, dateFormat);"},{"lineNumber":28,"author":{"gitId":"icelenaugust"},"content":"        } catch (DateTimeParseException e) {"},{"lineNumber":29,"author":{"gitId":"icelenaugust"},"content":"            throw new InvalidDateFormatException();"},{"lineNumber":30,"author":{"gitId":"icelenaugust"},"content":"        }"},{"lineNumber":31,"author":{"gitId":"icelenaugust"},"content":"    }"},{"lineNumber":32,"author":{"gitId":"icelenaugust"},"content":""},{"lineNumber":33,"author":{"gitId":"icelenaugust"},"content":"    private static LocalDateTime formatTime(String time) throws InvalidTimeFormatException {"},{"lineNumber":34,"author":{"gitId":"icelenaugust"},"content":"        try {"},{"lineNumber":35,"author":{"gitId":"icelenaugust"},"content":"            DateTimeFormatter timeFormat \u003d DateTimeFormatter.ofPattern(\"dd MM yyyy hh:mm a\");"},{"lineNumber":36,"author":{"gitId":"icelenaugust"},"content":"            return LocalDateTime.parse(time, timeFormat);"},{"lineNumber":37,"author":{"gitId":"icelenaugust"},"content":"        } catch (DateTimeParseException e) {"},{"lineNumber":38,"author":{"gitId":"icelenaugust"},"content":"            throw new InvalidTimeFormatException();"},{"lineNumber":39,"author":{"gitId":"icelenaugust"},"content":"        }"},{"lineNumber":40,"author":{"gitId":"icelenaugust"},"content":"    }"},{"lineNumber":41,"author":{"gitId":"icelenaugust"},"content":""},{"lineNumber":42,"author":{"gitId":"icelenaugust"},"content":"    /**"},{"lineNumber":43,"author":{"gitId":"icelenaugust"},"content":"     *  Parses the string input to a command line"},{"lineNumber":44,"author":{"gitId":"icelenaugust"},"content":"     *"},{"lineNumber":45,"author":{"gitId":"icelenaugust"},"content":"     *  @param command command input."},{"lineNumber":46,"author":{"gitId":"icelenaugust"},"content":"     *  @return ChatBotCommand object."},{"lineNumber":47,"author":{"gitId":"icelenaugust"},"content":"     *  @throws ChatBotException when encounters an error."},{"lineNumber":48,"author":{"gitId":"icelenaugust"},"content":"     */"},{"lineNumber":49,"author":{"gitId":"icelenaugust"},"content":"    public static ChatBotCommand parse(String command) throws ChatBotException {"},{"lineNumber":50,"author":{"gitId":"icelenaugust"},"content":"        String[] words \u003d command.strip().split(\" \", 2);"},{"lineNumber":51,"author":{"gitId":"icelenaugust"},"content":"        String commandType \u003d words[0];"},{"lineNumber":52,"author":{"gitId":"icelenaugust"},"content":"        boolean isValidCommand \u003d false;"},{"lineNumber":53,"author":{"gitId":"icelenaugust"},"content":"        for (String expectedCommand : COMMAND_TYPE_ARRAY) {"},{"lineNumber":54,"author":{"gitId":"icelenaugust"},"content":"            if (commandType.equals(expectedCommand)) {"},{"lineNumber":55,"author":{"gitId":"icelenaugust"},"content":"                isValidCommand \u003d true;"},{"lineNumber":56,"author":{"gitId":"icelenaugust"},"content":"                break;"},{"lineNumber":57,"author":{"gitId":"icelenaugust"},"content":"            }"},{"lineNumber":58,"author":{"gitId":"icelenaugust"},"content":"        }"},{"lineNumber":59,"author":{"gitId":"icelenaugust"},"content":"        if (!isValidCommand) {"},{"lineNumber":60,"author":{"gitId":"icelenaugust"},"content":"            throw new InvalidCommandTypeException();"},{"lineNumber":61,"author":{"gitId":"icelenaugust"},"content":"        }"},{"lineNumber":62,"author":{"gitId":"icelenaugust"},"content":""},{"lineNumber":63,"author":{"gitId":"icelenaugust"},"content":"        try {"},{"lineNumber":64,"author":{"gitId":"icelenaugust"},"content":"            switch (commandType) {"},{"lineNumber":65,"author":{"gitId":"icelenaugust"},"content":"            case \"bye\":"},{"lineNumber":66,"author":{"gitId":"icelenaugust"},"content":"                return new ByeCommand();"},{"lineNumber":67,"author":{"gitId":"icelenaugust"},"content":"            case \"list\":"},{"lineNumber":68,"author":{"gitId":"icelenaugust"},"content":"                return new ListCommand();"},{"lineNumber":69,"author":{"gitId":"icelenaugust"},"content":"            case \"todo\":"},{"lineNumber":70,"author":{"gitId":"icelenaugust"},"content":"                if (words.length \u003c 2) {"},{"lineNumber":71,"author":{"gitId":"icelenaugust"},"content":"                    throw new MissingDescriptionException(\"todo\");"},{"lineNumber":72,"author":{"gitId":"icelenaugust"},"content":"                } else {"},{"lineNumber":73,"author":{"gitId":"icelenaugust"},"content":"                    return new TodoCommand(words[1]);"},{"lineNumber":74,"author":{"gitId":"icelenaugust"},"content":"                }"},{"lineNumber":75,"author":{"gitId":"icelenaugust"},"content":"            case \"deadline\":"},{"lineNumber":76,"author":{"gitId":"icelenaugust"},"content":"                String[] deadlineArray \u003d words[1].split(\" /by \");"},{"lineNumber":77,"author":{"gitId":"icelenaugust"},"content":"                if (deadlineArray.length \u003c 2) {"},{"lineNumber":78,"author":{"gitId":"icelenaugust"},"content":"                    throw new MissingDescriptionException(\"deadline\");"},{"lineNumber":79,"author":{"gitId":"icelenaugust"},"content":"                } else {"},{"lineNumber":80,"author":{"gitId":"icelenaugust"},"content":"                    String ddlName \u003d deadlineArray[0].strip();"},{"lineNumber":81,"author":{"gitId":"icelenaugust"},"content":"                    String deadline \u003d deadlineArray[1].strip();"},{"lineNumber":82,"author":{"gitId":"icelenaugust"},"content":"                    return new DeadlineCommand(ddlName, formatDate(deadline));"},{"lineNumber":83,"author":{"gitId":"icelenaugust"},"content":"                }"},{"lineNumber":84,"author":{"gitId":"icelenaugust"},"content":"            case \"event\":"},{"lineNumber":85,"author":{"gitId":"icelenaugust"},"content":"                String[] timeArray \u003d words[1].split(\" /at \");"},{"lineNumber":86,"author":{"gitId":"icelenaugust"},"content":"                if (timeArray.length \u003c 2) {"},{"lineNumber":87,"author":{"gitId":"icelenaugust"},"content":"                    throw new MissingDescriptionException(\"event\");"},{"lineNumber":88,"author":{"gitId":"icelenaugust"},"content":"                } else {"},{"lineNumber":89,"author":{"gitId":"icelenaugust"},"content":"                    String eventName \u003d timeArray[0].strip();"},{"lineNumber":90,"author":{"gitId":"icelenaugust"},"content":"                    String time \u003d timeArray[1];"},{"lineNumber":91,"author":{"gitId":"icelenaugust"},"content":"                    String[] timePeriod \u003d time.split(\"-\");"},{"lineNumber":92,"author":{"gitId":"icelenaugust"},"content":"                    String startTime \u003d timePeriod[0].strip();"},{"lineNumber":93,"author":{"gitId":"icelenaugust"},"content":"                    String date \u003d startTime.substring(0, 10);"},{"lineNumber":94,"author":{"gitId":"icelenaugust"},"content":"                    String endTime \u003d date + \" \" + timePeriod[1].strip();"},{"lineNumber":95,"author":{"gitId":"icelenaugust"},"content":"                    return new EventCommand(eventName, formatTime(startTime), formatTime(endTime));"},{"lineNumber":96,"author":{"gitId":"icelenaugust"},"content":"                }"},{"lineNumber":97,"author":{"gitId":"icelenaugust"},"content":"            case \"find\":"},{"lineNumber":98,"author":{"gitId":"icelenaugust"},"content":"                return new FindCommand(words[1]);"},{"lineNumber":99,"author":{"gitId":"icelenaugust"},"content":"            case \"done\":"},{"lineNumber":100,"author":{"gitId":"icelenaugust"},"content":"                return new DoneCommand(Integer.parseInt(words[1]));"},{"lineNumber":101,"author":{"gitId":"icelenaugust"},"content":"            case \"delete\":"},{"lineNumber":102,"author":{"gitId":"icelenaugust"},"content":"                return new DeleteCommand(Integer.parseInt(words[1]));"},{"lineNumber":103,"author":{"gitId":"icelenaugust"},"content":"            default:"},{"lineNumber":104,"author":{"gitId":"icelenaugust"},"content":"                throw new InvalidCommandTypeException();"},{"lineNumber":105,"author":{"gitId":"icelenaugust"},"content":"            }"},{"lineNumber":106,"author":{"gitId":"icelenaugust"},"content":"        } catch (ChatBotException e) {"},{"lineNumber":107,"author":{"gitId":"icelenaugust"},"content":"            throw e;"},{"lineNumber":108,"author":{"gitId":"icelenaugust"},"content":"        }"},{"lineNumber":109,"author":{"gitId":"icelenaugust"},"content":"    }"},{"lineNumber":110,"author":{"gitId":"icelenaugust"},"content":"}"}],"authorContributionMap":{"icelenaugust":110}},{"path":"src/main/java/duke/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"icelenaugust"},"content":"package duke;"},{"lineNumber":2,"author":{"gitId":"icelenaugust"},"content":""},{"lineNumber":3,"author":{"gitId":"icelenaugust"},"content":"import java.io.File;"},{"lineNumber":4,"author":{"gitId":"icelenaugust"},"content":"import java.io.FileWriter;"},{"lineNumber":5,"author":{"gitId":"icelenaugust"},"content":"import java.io.IOException;"},{"lineNumber":6,"author":{"gitId":"icelenaugust"},"content":"import java.util.ArrayList;"},{"lineNumber":7,"author":{"gitId":"icelenaugust"},"content":"import java.util.Scanner;"},{"lineNumber":8,"author":{"gitId":"icelenaugust"},"content":""},{"lineNumber":9,"author":{"gitId":"icelenaugust"},"content":"import duke.exceptions.FileIoException;"},{"lineNumber":10,"author":{"gitId":"icelenaugust"},"content":"import duke.tasks.Task;"},{"lineNumber":11,"author":{"gitId":"icelenaugust"},"content":""},{"lineNumber":12,"author":{"gitId":"icelenaugust"},"content":""},{"lineNumber":13,"author":{"gitId":"icelenaugust"},"content":"/**"},{"lineNumber":14,"author":{"gitId":"icelenaugust"},"content":" * Represents the storage of the task data file."},{"lineNumber":15,"author":{"gitId":"icelenaugust"},"content":" */"},{"lineNumber":16,"author":{"gitId":"icelenaugust"},"content":"public class Storage {"},{"lineNumber":17,"author":{"gitId":"icelenaugust"},"content":"    private String filePath;"},{"lineNumber":18,"author":{"gitId":"icelenaugust"},"content":""},{"lineNumber":19,"author":{"gitId":"icelenaugust"},"content":"    public Storage(String filePath) {"},{"lineNumber":20,"author":{"gitId":"icelenaugust"},"content":"        this.filePath \u003d filePath;"},{"lineNumber":21,"author":{"gitId":"icelenaugust"},"content":"    }"},{"lineNumber":22,"author":{"gitId":"icelenaugust"},"content":""},{"lineNumber":23,"author":{"gitId":"icelenaugust"},"content":"    /**"},{"lineNumber":24,"author":{"gitId":"icelenaugust"},"content":"     * Returns an arraylist of String command lines"},{"lineNumber":25,"author":{"gitId":"icelenaugust"},"content":"     *"},{"lineNumber":26,"author":{"gitId":"icelenaugust"},"content":"     * @return An ArrayList of String"},{"lineNumber":27,"author":{"gitId":"icelenaugust"},"content":"     */"},{"lineNumber":28,"author":{"gitId":"icelenaugust"},"content":"    public ArrayList\u003cString\u003e loadTaskList() throws FileIoException {"},{"lineNumber":29,"author":{"gitId":"icelenaugust"},"content":"        try {"},{"lineNumber":30,"author":{"gitId":"icelenaugust"},"content":"            ArrayList\u003cString\u003e storedTaskList \u003d new ArrayList\u003c\u003e();"},{"lineNumber":31,"author":{"gitId":"icelenaugust"},"content":"            File f \u003d new File(this.filePath);"},{"lineNumber":32,"author":{"gitId":"icelenaugust"},"content":"            if (!f.exists()) {"},{"lineNumber":33,"author":{"gitId":"icelenaugust"},"content":"                f.getParentFile().mkdir();"},{"lineNumber":34,"author":{"gitId":"icelenaugust"},"content":"                f.createNewFile();"},{"lineNumber":35,"author":{"gitId":"icelenaugust"},"content":"            }"},{"lineNumber":36,"author":{"gitId":"icelenaugust"},"content":"            Scanner s \u003d new Scanner(f); // create a Scanner using the File as the source"},{"lineNumber":37,"author":{"gitId":"icelenaugust"},"content":"            while (s.hasNext()) {"},{"lineNumber":38,"author":{"gitId":"icelenaugust"},"content":"                storedTaskList.add(s.nextLine());"},{"lineNumber":39,"author":{"gitId":"icelenaugust"},"content":"            }"},{"lineNumber":40,"author":{"gitId":"icelenaugust"},"content":"            return storedTaskList;"},{"lineNumber":41,"author":{"gitId":"icelenaugust"},"content":"        } catch (IOException e) {"},{"lineNumber":42,"author":{"gitId":"icelenaugust"},"content":"            throw new FileIoException();"},{"lineNumber":43,"author":{"gitId":"icelenaugust"},"content":"        }"},{"lineNumber":44,"author":{"gitId":"icelenaugust"},"content":"    }"},{"lineNumber":45,"author":{"gitId":"icelenaugust"},"content":"    /**"},{"lineNumber":46,"author":{"gitId":"icelenaugust"},"content":"     * Writes into the current TaskList into file."},{"lineNumber":47,"author":{"gitId":"icelenaugust"},"content":"     *"},{"lineNumber":48,"author":{"gitId":"icelenaugust"},"content":"     * @param taskHandler which handles the tasks."},{"lineNumber":49,"author":{"gitId":"icelenaugust"},"content":"     * @throws FileIoException when there is a IOException"},{"lineNumber":50,"author":{"gitId":"icelenaugust"},"content":"     */"},{"lineNumber":51,"author":{"gitId":"icelenaugust"},"content":"    public void writeToFile(TaskHandler taskHandler) throws FileIoException {"},{"lineNumber":52,"author":{"gitId":"icelenaugust"},"content":"        try {"},{"lineNumber":53,"author":{"gitId":"icelenaugust"},"content":"            ArrayList\u003cTask\u003e taskList \u003d taskHandler.getTaskList();"},{"lineNumber":54,"author":{"gitId":"icelenaugust"},"content":"            FileWriter fw \u003d new FileWriter(this.filePath);"},{"lineNumber":55,"author":{"gitId":"icelenaugust"},"content":""},{"lineNumber":56,"author":{"gitId":"icelenaugust"},"content":"            for (int i \u003d 0; i \u003c taskList.size(); i++) {"},{"lineNumber":57,"author":{"gitId":"icelenaugust"},"content":"                fw.write(taskList.get(i).writeToFileFormat() + \"\\n\");"},{"lineNumber":58,"author":{"gitId":"icelenaugust"},"content":"            }"},{"lineNumber":59,"author":{"gitId":"icelenaugust"},"content":"            fw.close();"},{"lineNumber":60,"author":{"gitId":"icelenaugust"},"content":""},{"lineNumber":61,"author":{"gitId":"icelenaugust"},"content":"        } catch (IOException e) {"},{"lineNumber":62,"author":{"gitId":"icelenaugust"},"content":""},{"lineNumber":63,"author":{"gitId":"icelenaugust"},"content":"            throw new FileIoException();"},{"lineNumber":64,"author":{"gitId":"icelenaugust"},"content":""},{"lineNumber":65,"author":{"gitId":"icelenaugust"},"content":"        }"},{"lineNumber":66,"author":{"gitId":"icelenaugust"},"content":"    }"},{"lineNumber":67,"author":{"gitId":"icelenaugust"},"content":"}"},{"lineNumber":68,"author":{"gitId":"icelenaugust"},"content":""}],"authorContributionMap":{"icelenaugust":68}},{"path":"src/main/java/duke/TaskHandler.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"icelenaugust"},"content":"package duke;"},{"lineNumber":2,"author":{"gitId":"icelenaugust"},"content":""},{"lineNumber":3,"author":{"gitId":"icelenaugust"},"content":"import java.time.LocalDate;"},{"lineNumber":4,"author":{"gitId":"icelenaugust"},"content":"import java.time.LocalDateTime;"},{"lineNumber":5,"author":{"gitId":"icelenaugust"},"content":"import java.time.format.DateTimeFormatter;"},{"lineNumber":6,"author":{"gitId":"icelenaugust"},"content":"import java.util.ArrayList;"},{"lineNumber":7,"author":{"gitId":"icelenaugust"},"content":""},{"lineNumber":8,"author":{"gitId":"icelenaugust"},"content":"import duke.exceptions.FileIoException;"},{"lineNumber":9,"author":{"gitId":"icelenaugust"},"content":"import duke.exceptions.IndexOutOfRangeException;"},{"lineNumber":10,"author":{"gitId":"icelenaugust"},"content":"import duke.exceptions.TaskDoneException;"},{"lineNumber":11,"author":{"gitId":"icelenaugust"},"content":"import duke.tasks.DeadlineTask;"},{"lineNumber":12,"author":{"gitId":"icelenaugust"},"content":"import duke.tasks.EventTask;"},{"lineNumber":13,"author":{"gitId":"icelenaugust"},"content":"import duke.tasks.Task;"},{"lineNumber":14,"author":{"gitId":"icelenaugust"},"content":"import duke.tasks.TodoTask;"},{"lineNumber":15,"author":{"gitId":"icelenaugust"},"content":""},{"lineNumber":16,"author":{"gitId":"icelenaugust"},"content":"/**"},{"lineNumber":17,"author":{"gitId":"icelenaugust"},"content":" * Represents a task handler that handles the tasks"},{"lineNumber":18,"author":{"gitId":"icelenaugust"},"content":" */"},{"lineNumber":19,"author":{"gitId":"icelenaugust"},"content":"public class TaskHandler {"},{"lineNumber":20,"author":{"gitId":"icelenaugust"},"content":"    private ArrayList\u003cTask\u003e tasks;"},{"lineNumber":21,"author":{"gitId":"icelenaugust"},"content":""},{"lineNumber":22,"author":{"gitId":"icelenaugust"},"content":"    public TaskHandler() {"},{"lineNumber":23,"author":{"gitId":"icelenaugust"},"content":"        this.tasks \u003d new ArrayList\u003c\u003e();"},{"lineNumber":24,"author":{"gitId":"icelenaugust"},"content":"    }"},{"lineNumber":25,"author":{"gitId":"icelenaugust"},"content":""},{"lineNumber":26,"author":{"gitId":"icelenaugust"},"content":"    public void clearTaskList() {"},{"lineNumber":27,"author":{"gitId":"icelenaugust"},"content":"        this.tasks \u003d new ArrayList\u003c\u003e();"},{"lineNumber":28,"author":{"gitId":"icelenaugust"},"content":"    }"},{"lineNumber":29,"author":{"gitId":"icelenaugust"},"content":""},{"lineNumber":30,"author":{"gitId":"icelenaugust"},"content":"    public ArrayList\u003cTask\u003e getTaskList() {"},{"lineNumber":31,"author":{"gitId":"icelenaugust"},"content":"        return this.tasks;"},{"lineNumber":32,"author":{"gitId":"icelenaugust"},"content":"    }"},{"lineNumber":33,"author":{"gitId":"icelenaugust"},"content":""},{"lineNumber":34,"author":{"gitId":"icelenaugust"},"content":"    public int getLength() {"},{"lineNumber":35,"author":{"gitId":"icelenaugust"},"content":"        return this.tasks.size();"},{"lineNumber":36,"author":{"gitId":"icelenaugust"},"content":"    }"},{"lineNumber":37,"author":{"gitId":"icelenaugust"},"content":""},{"lineNumber":38,"author":{"gitId":"icelenaugust"},"content":"    public void addTodoTask(String taskName) {"},{"lineNumber":39,"author":{"gitId":"icelenaugust"},"content":"        tasks.add(new TodoTask(taskName));"},{"lineNumber":40,"author":{"gitId":"icelenaugust"},"content":"    }"},{"lineNumber":41,"author":{"gitId":"icelenaugust"},"content":""},{"lineNumber":42,"author":{"gitId":"icelenaugust"},"content":"    public void addDeadlineTask(String taskName, LocalDate deadline) {"},{"lineNumber":43,"author":{"gitId":"icelenaugust"},"content":"        tasks.add(new DeadlineTask(taskName, deadline));"},{"lineNumber":44,"author":{"gitId":"icelenaugust"},"content":"    }"},{"lineNumber":45,"author":{"gitId":"icelenaugust"},"content":""},{"lineNumber":46,"author":{"gitId":"icelenaugust"},"content":"    public void addEventTask(String taskName, LocalDateTime startTime, LocalDateTime endTime) {"},{"lineNumber":47,"author":{"gitId":"icelenaugust"},"content":"        tasks.add(new EventTask(taskName, startTime, endTime));"},{"lineNumber":48,"author":{"gitId":"icelenaugust"},"content":"    }"},{"lineNumber":49,"author":{"gitId":"icelenaugust"},"content":""},{"lineNumber":50,"author":{"gitId":"icelenaugust"},"content":"    /**"},{"lineNumber":51,"author":{"gitId":"icelenaugust"},"content":"     * Returns the Task that is done"},{"lineNumber":52,"author":{"gitId":"icelenaugust"},"content":"     *"},{"lineNumber":53,"author":{"gitId":"icelenaugust"},"content":"     * @return A Task"},{"lineNumber":54,"author":{"gitId":"icelenaugust"},"content":"     */"},{"lineNumber":55,"author":{"gitId":"icelenaugust"},"content":"    public Task markTaskAsDone(int index) throws IndexOutOfRangeException, TaskDoneException {"},{"lineNumber":56,"author":{"gitId":"icelenaugust"},"content":"        try {"},{"lineNumber":57,"author":{"gitId":"icelenaugust"},"content":"            Task task \u003d tasks.get(index - 1);"},{"lineNumber":58,"author":{"gitId":"icelenaugust"},"content":"            if (!task.getIsDone()) {"},{"lineNumber":59,"author":{"gitId":"icelenaugust"},"content":"                task.setTaskDone();"},{"lineNumber":60,"author":{"gitId":"icelenaugust"},"content":"                return task;"},{"lineNumber":61,"author":{"gitId":"icelenaugust"},"content":"            } else {"},{"lineNumber":62,"author":{"gitId":"icelenaugust"},"content":"                throw new TaskDoneException();"},{"lineNumber":63,"author":{"gitId":"icelenaugust"},"content":"            }"},{"lineNumber":64,"author":{"gitId":"icelenaugust"},"content":"        } catch (IndexOutOfBoundsException e) {"},{"lineNumber":65,"author":{"gitId":"icelenaugust"},"content":"            throw new IndexOutOfRangeException();"},{"lineNumber":66,"author":{"gitId":"icelenaugust"},"content":"        }"},{"lineNumber":67,"author":{"gitId":"icelenaugust"},"content":"    }"},{"lineNumber":68,"author":{"gitId":"icelenaugust"},"content":""},{"lineNumber":69,"author":{"gitId":"icelenaugust"},"content":"    /**"},{"lineNumber":70,"author":{"gitId":"icelenaugust"},"content":"     * Returns the Task being deleted"},{"lineNumber":71,"author":{"gitId":"icelenaugust"},"content":"     *"},{"lineNumber":72,"author":{"gitId":"icelenaugust"},"content":"     * @return A Task"},{"lineNumber":73,"author":{"gitId":"icelenaugust"},"content":"     */"},{"lineNumber":74,"author":{"gitId":"icelenaugust"},"content":"    public Task deleteTask(int index) throws IndexOutOfRangeException {"},{"lineNumber":75,"author":{"gitId":"icelenaugust"},"content":"        try {"},{"lineNumber":76,"author":{"gitId":"icelenaugust"},"content":"            Task task \u003d tasks.get(index - 1);"},{"lineNumber":77,"author":{"gitId":"icelenaugust"},"content":"            tasks.remove(index - 1);"},{"lineNumber":78,"author":{"gitId":"icelenaugust"},"content":"            return task;"},{"lineNumber":79,"author":{"gitId":"icelenaugust"},"content":"        } catch (IndexOutOfBoundsException e) {"},{"lineNumber":80,"author":{"gitId":"icelenaugust"},"content":"            throw new IndexOutOfRangeException();"},{"lineNumber":81,"author":{"gitId":"icelenaugust"},"content":"        }"},{"lineNumber":82,"author":{"gitId":"icelenaugust"},"content":"    }"},{"lineNumber":83,"author":{"gitId":"icelenaugust"},"content":""},{"lineNumber":84,"author":{"gitId":"icelenaugust"},"content":"    /**"},{"lineNumber":85,"author":{"gitId":"icelenaugust"},"content":"     * Returns an arraylist of tasks contains the keyword"},{"lineNumber":86,"author":{"gitId":"icelenaugust"},"content":"     *"},{"lineNumber":87,"author":{"gitId":"icelenaugust"},"content":"     * @return An ArrayList of Task"},{"lineNumber":88,"author":{"gitId":"icelenaugust"},"content":"     */"},{"lineNumber":89,"author":{"gitId":"icelenaugust"},"content":"    public ArrayList\u003cTask\u003e findTask(String keyWord) {"},{"lineNumber":90,"author":{"gitId":"icelenaugust"},"content":"        ArrayList\u003cTask\u003e matchTasks \u003d new ArrayList\u003c\u003e();"},{"lineNumber":91,"author":{"gitId":"icelenaugust"},"content":"        for (Task task : tasks) {"},{"lineNumber":92,"author":{"gitId":"icelenaugust"},"content":"            if (task.getTaskName().contains(keyWord)) {"},{"lineNumber":93,"author":{"gitId":"icelenaugust"},"content":"                matchTasks.add(task);"},{"lineNumber":94,"author":{"gitId":"icelenaugust"},"content":"            }"},{"lineNumber":95,"author":{"gitId":"icelenaugust"},"content":"        }"},{"lineNumber":96,"author":{"gitId":"icelenaugust"},"content":"        return matchTasks;"},{"lineNumber":97,"author":{"gitId":"icelenaugust"},"content":"    }"},{"lineNumber":98,"author":{"gitId":"icelenaugust"},"content":""},{"lineNumber":99,"author":{"gitId":"icelenaugust"},"content":"    /**"},{"lineNumber":100,"author":{"gitId":"icelenaugust"},"content":"     * Reads from the task data file."},{"lineNumber":101,"author":{"gitId":"icelenaugust"},"content":"     *"},{"lineNumber":102,"author":{"gitId":"icelenaugust"},"content":"     * @param storedTaskList an ArrayList of tasks in file format."},{"lineNumber":103,"author":{"gitId":"icelenaugust"},"content":"     */"},{"lineNumber":104,"author":{"gitId":"icelenaugust"},"content":"    public void loadTaskList(ArrayList\u003cString\u003e storedTaskList) throws FileIoException {"},{"lineNumber":105,"author":{"gitId":"icelenaugust"},"content":"        for (String eachTask : storedTaskList) {"},{"lineNumber":106,"author":{"gitId":"icelenaugust"},"content":"            String[] words \u003d eachTask.split(\"\\\\|\");"},{"lineNumber":107,"author":{"gitId":"icelenaugust"},"content":"            String type \u003d words[0].strip();"},{"lineNumber":108,"author":{"gitId":"icelenaugust"},"content":"            boolean isDone \u003d words[1].strip().equals(\"1\");"},{"lineNumber":109,"author":{"gitId":"icelenaugust"},"content":"            String taskName \u003d words[2].strip();"},{"lineNumber":110,"author":{"gitId":"icelenaugust"},"content":""},{"lineNumber":111,"author":{"gitId":"icelenaugust"},"content":"            DateTimeFormatter dateFormat \u003d DateTimeFormatter.ofPattern(\"dd MMM yyyy\");"},{"lineNumber":112,"author":{"gitId":"icelenaugust"},"content":"            DateTimeFormatter timeFormat \u003d DateTimeFormatter.ofPattern(\"dd MMM yyyy hh:mm a\");"},{"lineNumber":113,"author":{"gitId":"icelenaugust"},"content":"            switch (type) {"},{"lineNumber":114,"author":{"gitId":"icelenaugust"},"content":"            case \"T\":"},{"lineNumber":115,"author":{"gitId":"icelenaugust"},"content":"                Task todoTask \u003d new TodoTask(taskName);"},{"lineNumber":116,"author":{"gitId":"icelenaugust"},"content":"                if (isDone) {"},{"lineNumber":117,"author":{"gitId":"icelenaugust"},"content":"                    todoTask.setTaskDone();"},{"lineNumber":118,"author":{"gitId":"icelenaugust"},"content":"                }"},{"lineNumber":119,"author":{"gitId":"icelenaugust"},"content":"                this.tasks.add(todoTask);"},{"lineNumber":120,"author":{"gitId":"icelenaugust"},"content":"                break;"},{"lineNumber":121,"author":{"gitId":"icelenaugust"},"content":"            case \"D\":"},{"lineNumber":122,"author":{"gitId":"icelenaugust"},"content":"                LocalDate deadline \u003d LocalDate.parse(words[3].strip(), dateFormat);"},{"lineNumber":123,"author":{"gitId":"icelenaugust"},"content":"                Task deadlineTask \u003d new DeadlineTask(taskName, deadline);"},{"lineNumber":124,"author":{"gitId":"icelenaugust"},"content":"                if (isDone) {"},{"lineNumber":125,"author":{"gitId":"icelenaugust"},"content":"                    deadlineTask.setTaskDone();"},{"lineNumber":126,"author":{"gitId":"icelenaugust"},"content":"                }"},{"lineNumber":127,"author":{"gitId":"icelenaugust"},"content":"                this.tasks.add(deadlineTask);"},{"lineNumber":128,"author":{"gitId":"icelenaugust"},"content":"                break;"},{"lineNumber":129,"author":{"gitId":"icelenaugust"},"content":"            case \"E\":"},{"lineNumber":130,"author":{"gitId":"icelenaugust"},"content":"                LocalDateTime startTime \u003d LocalDateTime.parse(words[3].strip(), timeFormat);"},{"lineNumber":131,"author":{"gitId":"icelenaugust"},"content":"                LocalDateTime endTime \u003d LocalDateTime.parse(words[4].strip(), timeFormat);"},{"lineNumber":132,"author":{"gitId":"icelenaugust"},"content":"                Task eventTask \u003d new EventTask(taskName, startTime, endTime);"},{"lineNumber":133,"author":{"gitId":"icelenaugust"},"content":"                if (isDone) {"},{"lineNumber":134,"author":{"gitId":"icelenaugust"},"content":"                    eventTask.setTaskDone();"},{"lineNumber":135,"author":{"gitId":"icelenaugust"},"content":"                }"},{"lineNumber":136,"author":{"gitId":"icelenaugust"},"content":"                this.tasks.add(eventTask);"},{"lineNumber":137,"author":{"gitId":"icelenaugust"},"content":"                break;"},{"lineNumber":138,"author":{"gitId":"icelenaugust"},"content":"            default:"},{"lineNumber":139,"author":{"gitId":"icelenaugust"},"content":"                throw new FileIoException();"},{"lineNumber":140,"author":{"gitId":"icelenaugust"},"content":"            }"},{"lineNumber":141,"author":{"gitId":"icelenaugust"},"content":"        }"},{"lineNumber":142,"author":{"gitId":"icelenaugust"},"content":"    }"},{"lineNumber":143,"author":{"gitId":"icelenaugust"},"content":"}"}],"authorContributionMap":{"icelenaugust":143}},{"path":"src/main/java/duke/commands/ByeCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"icelenaugust"},"content":"package duke.commands;"},{"lineNumber":2,"author":{"gitId":"icelenaugust"},"content":""},{"lineNumber":3,"author":{"gitId":"icelenaugust"},"content":"import duke.Storage;"},{"lineNumber":4,"author":{"gitId":"icelenaugust"},"content":"import duke.TaskHandler;"},{"lineNumber":5,"author":{"gitId":"icelenaugust"},"content":"import duke.exceptions.ChatBotException;"},{"lineNumber":6,"author":{"gitId":"icelenaugust"},"content":""},{"lineNumber":7,"author":{"gitId":"icelenaugust"},"content":"/**"},{"lineNumber":8,"author":{"gitId":"icelenaugust"},"content":" * Represents a terminating command line"},{"lineNumber":9,"author":{"gitId":"icelenaugust"},"content":" */"},{"lineNumber":10,"author":{"gitId":"icelenaugust"},"content":"public class ByeCommand extends ChatBotCommand {"},{"lineNumber":11,"author":{"gitId":"icelenaugust"},"content":"    /**"},{"lineNumber":12,"author":{"gitId":"icelenaugust"},"content":"     * Default constructor for the ByeCommand class."},{"lineNumber":13,"author":{"gitId":"icelenaugust"},"content":"     */"},{"lineNumber":14,"author":{"gitId":"icelenaugust"},"content":"    public ByeCommand() {"},{"lineNumber":15,"author":{"gitId":"icelenaugust"},"content":"    }"},{"lineNumber":16,"author":{"gitId":"icelenaugust"},"content":""},{"lineNumber":17,"author":{"gitId":"icelenaugust"},"content":"    /**"},{"lineNumber":18,"author":{"gitId":"icelenaugust"},"content":"     * Returns terminating message of the chat bot."},{"lineNumber":19,"author":{"gitId":"icelenaugust"},"content":"     *"},{"lineNumber":20,"author":{"gitId":"icelenaugust"},"content":"     * @param th TaskHandler."},{"lineNumber":21,"author":{"gitId":"icelenaugust"},"content":"     * @param storage Storage to write and read file."},{"lineNumber":22,"author":{"gitId":"icelenaugust"},"content":"     * @return Command response."},{"lineNumber":23,"author":{"gitId":"icelenaugust"},"content":"     * @throws ChatBotException if encounters error."},{"lineNumber":24,"author":{"gitId":"icelenaugust"},"content":"     */"},{"lineNumber":25,"author":{"gitId":"icelenaugust"},"content":"    public String runTask(TaskHandler th, Storage storage) throws ChatBotException {"},{"lineNumber":26,"author":{"gitId":"icelenaugust"},"content":"        return \"Bye. Hope to see you again soon!\";"},{"lineNumber":27,"author":{"gitId":"icelenaugust"},"content":"    }"},{"lineNumber":28,"author":{"gitId":"icelenaugust"},"content":""},{"lineNumber":29,"author":{"gitId":"icelenaugust"},"content":"    @Override"},{"lineNumber":30,"author":{"gitId":"icelenaugust"},"content":"    public boolean isTerminated() {"},{"lineNumber":31,"author":{"gitId":"icelenaugust"},"content":"        return true;"},{"lineNumber":32,"author":{"gitId":"icelenaugust"},"content":"    }"},{"lineNumber":33,"author":{"gitId":"icelenaugust"},"content":"}"}],"authorContributionMap":{"icelenaugust":33}},{"path":"src/main/java/duke/commands/ChatBotCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"icelenaugust"},"content":"package duke.commands;"},{"lineNumber":2,"author":{"gitId":"icelenaugust"},"content":""},{"lineNumber":3,"author":{"gitId":"icelenaugust"},"content":"import duke.Storage;"},{"lineNumber":4,"author":{"gitId":"icelenaugust"},"content":"import duke.TaskHandler;"},{"lineNumber":5,"author":{"gitId":"icelenaugust"},"content":"import duke.exceptions.ChatBotException;"},{"lineNumber":6,"author":{"gitId":"icelenaugust"},"content":""},{"lineNumber":7,"author":{"gitId":"icelenaugust"},"content":"/**"},{"lineNumber":8,"author":{"gitId":"icelenaugust"},"content":" * Represents a ChatBotCommand line."},{"lineNumber":9,"author":{"gitId":"icelenaugust"},"content":" */"},{"lineNumber":10,"author":{"gitId":"icelenaugust"},"content":"public abstract class ChatBotCommand {"},{"lineNumber":11,"author":{"gitId":"icelenaugust"},"content":"    public boolean isTerminated() {"},{"lineNumber":12,"author":{"gitId":"icelenaugust"},"content":"        return false;"},{"lineNumber":13,"author":{"gitId":"icelenaugust"},"content":"    }"},{"lineNumber":14,"author":{"gitId":"icelenaugust"},"content":""},{"lineNumber":15,"author":{"gitId":"icelenaugust"},"content":"    /**"},{"lineNumber":16,"author":{"gitId":"icelenaugust"},"content":"     * Returns message for running tasks."},{"lineNumber":17,"author":{"gitId":"icelenaugust"},"content":"     *"},{"lineNumber":18,"author":{"gitId":"icelenaugust"},"content":"     * @param th TaskHandler."},{"lineNumber":19,"author":{"gitId":"icelenaugust"},"content":"     * @param storage Storage to write and read file."},{"lineNumber":20,"author":{"gitId":"icelenaugust"},"content":"     */"},{"lineNumber":21,"author":{"gitId":"icelenaugust"},"content":"    public abstract String runTask(TaskHandler th, Storage storage)"},{"lineNumber":22,"author":{"gitId":"icelenaugust"},"content":"            throws ChatBotException;"},{"lineNumber":23,"author":{"gitId":"icelenaugust"},"content":"}"}],"authorContributionMap":{"icelenaugust":23}},{"path":"src/main/java/duke/commands/DeadlineCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"icelenaugust"},"content":"package duke.commands;"},{"lineNumber":2,"author":{"gitId":"icelenaugust"},"content":""},{"lineNumber":3,"author":{"gitId":"icelenaugust"},"content":"import java.time.LocalDate;"},{"lineNumber":4,"author":{"gitId":"icelenaugust"},"content":""},{"lineNumber":5,"author":{"gitId":"icelenaugust"},"content":"import duke.Storage;"},{"lineNumber":6,"author":{"gitId":"icelenaugust"},"content":"import duke.TaskHandler;"},{"lineNumber":7,"author":{"gitId":"icelenaugust"},"content":"import duke.exceptions.ChatBotException;"},{"lineNumber":8,"author":{"gitId":"icelenaugust"},"content":""},{"lineNumber":9,"author":{"gitId":"icelenaugust"},"content":""},{"lineNumber":10,"author":{"gitId":"icelenaugust"},"content":""},{"lineNumber":11,"author":{"gitId":"icelenaugust"},"content":"/**"},{"lineNumber":12,"author":{"gitId":"icelenaugust"},"content":" * Represents a deadline task command line"},{"lineNumber":13,"author":{"gitId":"icelenaugust"},"content":" */"},{"lineNumber":14,"author":{"gitId":"icelenaugust"},"content":"public class DeadlineCommand extends ChatBotCommand {"},{"lineNumber":15,"author":{"gitId":"icelenaugust"},"content":"    private String taskName;"},{"lineNumber":16,"author":{"gitId":"icelenaugust"},"content":"    private LocalDate deadline;"},{"lineNumber":17,"author":{"gitId":"icelenaugust"},"content":""},{"lineNumber":18,"author":{"gitId":"icelenaugust"},"content":"    /**"},{"lineNumber":19,"author":{"gitId":"icelenaugust"},"content":"     * Constructor"},{"lineNumber":20,"author":{"gitId":"icelenaugust"},"content":"     * @param taskName String to store the task name."},{"lineNumber":21,"author":{"gitId":"icelenaugust"},"content":"     * @param deadline LocalDate to store the deadline."},{"lineNumber":22,"author":{"gitId":"icelenaugust"},"content":"     */"},{"lineNumber":23,"author":{"gitId":"icelenaugust"},"content":"    public DeadlineCommand(String taskName, LocalDate deadline) {"},{"lineNumber":24,"author":{"gitId":"icelenaugust"},"content":"        this.taskName \u003d taskName;"},{"lineNumber":25,"author":{"gitId":"icelenaugust"},"content":"        this.deadline \u003d deadline;"},{"lineNumber":26,"author":{"gitId":"icelenaugust"},"content":"    }"},{"lineNumber":27,"author":{"gitId":"icelenaugust"},"content":""},{"lineNumber":28,"author":{"gitId":"icelenaugust"},"content":"    /**"},{"lineNumber":29,"author":{"gitId":"icelenaugust"},"content":"     * Returns message for adding a deadline tasks."},{"lineNumber":30,"author":{"gitId":"icelenaugust"},"content":"     *"},{"lineNumber":31,"author":{"gitId":"icelenaugust"},"content":"     * @param th TaskHandler."},{"lineNumber":32,"author":{"gitId":"icelenaugust"},"content":"     * @param storage Storage to write and read file."},{"lineNumber":33,"author":{"gitId":"icelenaugust"},"content":"     * @return Command response."},{"lineNumber":34,"author":{"gitId":"icelenaugust"},"content":"     * @throws ChatBotException if encounters error."},{"lineNumber":35,"author":{"gitId":"icelenaugust"},"content":"     */"},{"lineNumber":36,"author":{"gitId":"icelenaugust"},"content":"    public String runTask(TaskHandler th, Storage storage) throws ChatBotException {"},{"lineNumber":37,"author":{"gitId":"icelenaugust"},"content":"        th.addDeadlineTask(taskName, deadline);"},{"lineNumber":38,"author":{"gitId":"icelenaugust"},"content":"        storage.writeToFile(th);"},{"lineNumber":39,"author":{"gitId":"icelenaugust"},"content":"        String output \u003d String.format(\"Got it. I\u0027ve added this task: \\n%s\\nNow you have %d task(s) in the list\","},{"lineNumber":40,"author":{"gitId":"icelenaugust"},"content":"                th.getTaskList().get(th.getLength() - 1).toString(),"},{"lineNumber":41,"author":{"gitId":"icelenaugust"},"content":"                th.getLength());"},{"lineNumber":42,"author":{"gitId":"icelenaugust"},"content":"        return output;"},{"lineNumber":43,"author":{"gitId":"icelenaugust"},"content":"    }"},{"lineNumber":44,"author":{"gitId":"icelenaugust"},"content":"}"}],"authorContributionMap":{"icelenaugust":44}},{"path":"src/main/java/duke/commands/DeleteCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"icelenaugust"},"content":"package duke.commands;"},{"lineNumber":2,"author":{"gitId":"icelenaugust"},"content":""},{"lineNumber":3,"author":{"gitId":"icelenaugust"},"content":"import duke.Storage;"},{"lineNumber":4,"author":{"gitId":"icelenaugust"},"content":"import duke.TaskHandler;"},{"lineNumber":5,"author":{"gitId":"icelenaugust"},"content":"import duke.exceptions.ChatBotException;"},{"lineNumber":6,"author":{"gitId":"icelenaugust"},"content":"import duke.tasks.Task;"},{"lineNumber":7,"author":{"gitId":"icelenaugust"},"content":""},{"lineNumber":8,"author":{"gitId":"icelenaugust"},"content":"/**"},{"lineNumber":9,"author":{"gitId":"icelenaugust"},"content":" * Represents a delete command line"},{"lineNumber":10,"author":{"gitId":"icelenaugust"},"content":" */"},{"lineNumber":11,"author":{"gitId":"icelenaugust"},"content":"public class DeleteCommand extends ChatBotCommand {"},{"lineNumber":12,"author":{"gitId":"icelenaugust"},"content":"    private int index;"},{"lineNumber":13,"author":{"gitId":"icelenaugust"},"content":""},{"lineNumber":14,"author":{"gitId":"icelenaugust"},"content":"    /**"},{"lineNumber":15,"author":{"gitId":"icelenaugust"},"content":"     * Default constructor for the DeleteCommand class."},{"lineNumber":16,"author":{"gitId":"icelenaugust"},"content":"     *"},{"lineNumber":17,"author":{"gitId":"icelenaugust"},"content":"     * @param index the index of the task to be deleted in the list."},{"lineNumber":18,"author":{"gitId":"icelenaugust"},"content":"     */"},{"lineNumber":19,"author":{"gitId":"icelenaugust"},"content":"    public DeleteCommand(int index) {"},{"lineNumber":20,"author":{"gitId":"icelenaugust"},"content":"        this.index \u003d index;"},{"lineNumber":21,"author":{"gitId":"icelenaugust"},"content":"    }"},{"lineNumber":22,"author":{"gitId":"icelenaugust"},"content":""},{"lineNumber":23,"author":{"gitId":"icelenaugust"},"content":"    /**"},{"lineNumber":24,"author":{"gitId":"icelenaugust"},"content":"     * Returns message for deleting a task."},{"lineNumber":25,"author":{"gitId":"icelenaugust"},"content":"     *"},{"lineNumber":26,"author":{"gitId":"icelenaugust"},"content":"     * @param th TaskHandler."},{"lineNumber":27,"author":{"gitId":"icelenaugust"},"content":"     * @param storage Storage to write and read file."},{"lineNumber":28,"author":{"gitId":"icelenaugust"},"content":"     * @return Command response."},{"lineNumber":29,"author":{"gitId":"icelenaugust"},"content":"     * @throws ChatBotException if encounters error."},{"lineNumber":30,"author":{"gitId":"icelenaugust"},"content":"     */"},{"lineNumber":31,"author":{"gitId":"icelenaugust"},"content":"    public String runTask(TaskHandler th, Storage storage) throws ChatBotException {"},{"lineNumber":32,"author":{"gitId":"icelenaugust"},"content":"        Task task \u003d th.deleteTask(this.index);"},{"lineNumber":33,"author":{"gitId":"icelenaugust"},"content":"        storage.writeToFile(th);"},{"lineNumber":34,"author":{"gitId":"icelenaugust"},"content":"        String output \u003d String.format(\"Noted. I\u0027ve removed this task: \\n%s\\n Now you have %d task(s) in the list\","},{"lineNumber":35,"author":{"gitId":"icelenaugust"},"content":"                task.toString(),"},{"lineNumber":36,"author":{"gitId":"icelenaugust"},"content":"                th.getLength());"},{"lineNumber":37,"author":{"gitId":"icelenaugust"},"content":"        return output;"},{"lineNumber":38,"author":{"gitId":"icelenaugust"},"content":"    }"},{"lineNumber":39,"author":{"gitId":"icelenaugust"},"content":"}"}],"authorContributionMap":{"icelenaugust":39}},{"path":"src/main/java/duke/commands/DoneCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"icelenaugust"},"content":"package duke.commands;"},{"lineNumber":2,"author":{"gitId":"icelenaugust"},"content":""},{"lineNumber":3,"author":{"gitId":"icelenaugust"},"content":"import duke.Storage;"},{"lineNumber":4,"author":{"gitId":"icelenaugust"},"content":"import duke.TaskHandler;"},{"lineNumber":5,"author":{"gitId":"icelenaugust"},"content":"import duke.exceptions.ChatBotException;"},{"lineNumber":6,"author":{"gitId":"icelenaugust"},"content":"import duke.tasks.Task;"},{"lineNumber":7,"author":{"gitId":"icelenaugust"},"content":""},{"lineNumber":8,"author":{"gitId":"icelenaugust"},"content":"/**"},{"lineNumber":9,"author":{"gitId":"icelenaugust"},"content":" * Represents a done command line"},{"lineNumber":10,"author":{"gitId":"icelenaugust"},"content":" */"},{"lineNumber":11,"author":{"gitId":"icelenaugust"},"content":"public class DoneCommand extends ChatBotCommand {"},{"lineNumber":12,"author":{"gitId":"icelenaugust"},"content":"    private int index;"},{"lineNumber":13,"author":{"gitId":"icelenaugust"},"content":""},{"lineNumber":14,"author":{"gitId":"icelenaugust"},"content":"    /**"},{"lineNumber":15,"author":{"gitId":"icelenaugust"},"content":"     * Default constructor for the DoneCommand class."},{"lineNumber":16,"author":{"gitId":"icelenaugust"},"content":"     *"},{"lineNumber":17,"author":{"gitId":"icelenaugust"},"content":"     * @param index the index of the task that is done in the list."},{"lineNumber":18,"author":{"gitId":"icelenaugust"},"content":"     */"},{"lineNumber":19,"author":{"gitId":"icelenaugust"},"content":"    public DoneCommand(int index) {"},{"lineNumber":20,"author":{"gitId":"icelenaugust"},"content":"        this.index \u003d index;"},{"lineNumber":21,"author":{"gitId":"icelenaugust"},"content":"    }"},{"lineNumber":22,"author":{"gitId":"icelenaugust"},"content":""},{"lineNumber":23,"author":{"gitId":"icelenaugust"},"content":"    /**"},{"lineNumber":24,"author":{"gitId":"icelenaugust"},"content":"     * Returns message for completing a task."},{"lineNumber":25,"author":{"gitId":"icelenaugust"},"content":"     *"},{"lineNumber":26,"author":{"gitId":"icelenaugust"},"content":"     * @param th TaskHandler."},{"lineNumber":27,"author":{"gitId":"icelenaugust"},"content":"     * @param storage Storage to write and read file."},{"lineNumber":28,"author":{"gitId":"icelenaugust"},"content":"     * @return Command response."},{"lineNumber":29,"author":{"gitId":"icelenaugust"},"content":"     * @throws ChatBotException if encounters error."},{"lineNumber":30,"author":{"gitId":"icelenaugust"},"content":"     */"},{"lineNumber":31,"author":{"gitId":"icelenaugust"},"content":"    public String runTask(TaskHandler th, Storage storage) throws ChatBotException {"},{"lineNumber":32,"author":{"gitId":"icelenaugust"},"content":"        Task task \u003d th.markTaskAsDone(this.index);"},{"lineNumber":33,"author":{"gitId":"icelenaugust"},"content":"        storage.writeToFile(th);"},{"lineNumber":34,"author":{"gitId":"icelenaugust"},"content":"        String output \u003d String.format(\"Nice! I\u0027ve marked this task as done: \\n%s\","},{"lineNumber":35,"author":{"gitId":"icelenaugust"},"content":"                task.toString());"},{"lineNumber":36,"author":{"gitId":"icelenaugust"},"content":"        return output;"},{"lineNumber":37,"author":{"gitId":"icelenaugust"},"content":"    }"},{"lineNumber":38,"author":{"gitId":"icelenaugust"},"content":"}"}],"authorContributionMap":{"icelenaugust":38}},{"path":"src/main/java/duke/commands/EventCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"icelenaugust"},"content":"package duke.commands;"},{"lineNumber":2,"author":{"gitId":"icelenaugust"},"content":""},{"lineNumber":3,"author":{"gitId":"icelenaugust"},"content":"import java.time.LocalDateTime;"},{"lineNumber":4,"author":{"gitId":"icelenaugust"},"content":""},{"lineNumber":5,"author":{"gitId":"icelenaugust"},"content":"import duke.Storage;"},{"lineNumber":6,"author":{"gitId":"icelenaugust"},"content":"import duke.TaskHandler;"},{"lineNumber":7,"author":{"gitId":"icelenaugust"},"content":"import duke.exceptions.ChatBotException;"},{"lineNumber":8,"author":{"gitId":"icelenaugust"},"content":""},{"lineNumber":9,"author":{"gitId":"icelenaugust"},"content":"/**"},{"lineNumber":10,"author":{"gitId":"icelenaugust"},"content":" * Represents a event task command line"},{"lineNumber":11,"author":{"gitId":"icelenaugust"},"content":" */"},{"lineNumber":12,"author":{"gitId":"icelenaugust"},"content":"public class EventCommand extends ChatBotCommand {"},{"lineNumber":13,"author":{"gitId":"icelenaugust"},"content":"    private String taskName;"},{"lineNumber":14,"author":{"gitId":"icelenaugust"},"content":"    private LocalDateTime startTime;"},{"lineNumber":15,"author":{"gitId":"icelenaugust"},"content":"    private LocalDateTime endTime;"},{"lineNumber":16,"author":{"gitId":"icelenaugust"},"content":""},{"lineNumber":17,"author":{"gitId":"icelenaugust"},"content":"    /**"},{"lineNumber":18,"author":{"gitId":"icelenaugust"},"content":"     * Constructor"},{"lineNumber":19,"author":{"gitId":"icelenaugust"},"content":"     * @param taskName String to store the task name."},{"lineNumber":20,"author":{"gitId":"icelenaugust"},"content":"     * @param startTime LocalDate to store the starting time of the task."},{"lineNumber":21,"author":{"gitId":"icelenaugust"},"content":"     * @param endTime LocalDate to store the ending time of the task."},{"lineNumber":22,"author":{"gitId":"icelenaugust"},"content":"     */"},{"lineNumber":23,"author":{"gitId":"icelenaugust"},"content":"    public EventCommand(String taskName, LocalDateTime startTime, LocalDateTime endTime) {"},{"lineNumber":24,"author":{"gitId":"icelenaugust"},"content":"        this.taskName \u003d taskName;"},{"lineNumber":25,"author":{"gitId":"icelenaugust"},"content":"        this.startTime \u003d startTime;"},{"lineNumber":26,"author":{"gitId":"icelenaugust"},"content":"        this.endTime \u003d endTime;"},{"lineNumber":27,"author":{"gitId":"icelenaugust"},"content":"    }"},{"lineNumber":28,"author":{"gitId":"icelenaugust"},"content":""},{"lineNumber":29,"author":{"gitId":"icelenaugust"},"content":"    /**"},{"lineNumber":30,"author":{"gitId":"icelenaugust"},"content":"     * Returns message for adding an event task."},{"lineNumber":31,"author":{"gitId":"icelenaugust"},"content":"     *"},{"lineNumber":32,"author":{"gitId":"icelenaugust"},"content":"     * @param th TaskHandler."},{"lineNumber":33,"author":{"gitId":"icelenaugust"},"content":"     * @param storage Storage to write and read file."},{"lineNumber":34,"author":{"gitId":"icelenaugust"},"content":"     * @return Command response."},{"lineNumber":35,"author":{"gitId":"icelenaugust"},"content":"     * @throws ChatBotException if encounters error."},{"lineNumber":36,"author":{"gitId":"icelenaugust"},"content":"     */"},{"lineNumber":37,"author":{"gitId":"icelenaugust"},"content":"    public String runTask(TaskHandler th, Storage storage) throws ChatBotException {"},{"lineNumber":38,"author":{"gitId":"icelenaugust"},"content":"        th.addEventTask(taskName, startTime, endTime);"},{"lineNumber":39,"author":{"gitId":"icelenaugust"},"content":"        storage.writeToFile(th);"},{"lineNumber":40,"author":{"gitId":"icelenaugust"},"content":"        String output \u003d String.format(\"Got it. I\u0027ve added this task:\\n%s\\nNow you have %d task(s) in the list\","},{"lineNumber":41,"author":{"gitId":"icelenaugust"},"content":"                th.getTaskList().get(th.getLength() - 1).toString(),"},{"lineNumber":42,"author":{"gitId":"icelenaugust"},"content":"                th.getLength());"},{"lineNumber":43,"author":{"gitId":"icelenaugust"},"content":"        return output;"},{"lineNumber":44,"author":{"gitId":"icelenaugust"},"content":"    }"},{"lineNumber":45,"author":{"gitId":"icelenaugust"},"content":"}"}],"authorContributionMap":{"icelenaugust":45}},{"path":"src/main/java/duke/commands/FindCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"icelenaugust"},"content":"package duke.commands;"},{"lineNumber":2,"author":{"gitId":"icelenaugust"},"content":""},{"lineNumber":3,"author":{"gitId":"icelenaugust"},"content":"import java.util.ArrayList;"},{"lineNumber":4,"author":{"gitId":"icelenaugust"},"content":""},{"lineNumber":5,"author":{"gitId":"icelenaugust"},"content":"import duke.Storage;"},{"lineNumber":6,"author":{"gitId":"icelenaugust"},"content":"import duke.TaskHandler;"},{"lineNumber":7,"author":{"gitId":"icelenaugust"},"content":"import duke.exceptions.ChatBotException;"},{"lineNumber":8,"author":{"gitId":"icelenaugust"},"content":"import duke.tasks.Task;"},{"lineNumber":9,"author":{"gitId":"icelenaugust"},"content":""},{"lineNumber":10,"author":{"gitId":"icelenaugust"},"content":"public class FindCommand extends ChatBotCommand {"},{"lineNumber":11,"author":{"gitId":"icelenaugust"},"content":"    private String keyWord;"},{"lineNumber":12,"author":{"gitId":"icelenaugust"},"content":""},{"lineNumber":13,"author":{"gitId":"icelenaugust"},"content":"    /**"},{"lineNumber":14,"author":{"gitId":"icelenaugust"},"content":"     * Default constructor for the FindCommand class."},{"lineNumber":15,"author":{"gitId":"icelenaugust"},"content":"     *"},{"lineNumber":16,"author":{"gitId":"icelenaugust"},"content":"     * @param keyWord the word that is to be searched in the list."},{"lineNumber":17,"author":{"gitId":"icelenaugust"},"content":"     */"},{"lineNumber":18,"author":{"gitId":"icelenaugust"},"content":"    public FindCommand(String keyWord) {"},{"lineNumber":19,"author":{"gitId":"icelenaugust"},"content":"        this.keyWord \u003d keyWord;"},{"lineNumber":20,"author":{"gitId":"icelenaugust"},"content":"    }"},{"lineNumber":21,"author":{"gitId":"icelenaugust"},"content":""},{"lineNumber":22,"author":{"gitId":"icelenaugust"},"content":"    /**"},{"lineNumber":23,"author":{"gitId":"icelenaugust"},"content":"     * Returns message for completing a task."},{"lineNumber":24,"author":{"gitId":"icelenaugust"},"content":"     *"},{"lineNumber":25,"author":{"gitId":"icelenaugust"},"content":"     * @param th TaskHandler."},{"lineNumber":26,"author":{"gitId":"icelenaugust"},"content":"     * @param storage Storage to write and read file."},{"lineNumber":27,"author":{"gitId":"icelenaugust"},"content":"     * @return Command response."},{"lineNumber":28,"author":{"gitId":"icelenaugust"},"content":"     * @throws ChatBotException if encounters error."},{"lineNumber":29,"author":{"gitId":"icelenaugust"},"content":"     */"},{"lineNumber":30,"author":{"gitId":"icelenaugust"},"content":"    public String runTask(TaskHandler th, Storage storage) throws ChatBotException {"},{"lineNumber":31,"author":{"gitId":"icelenaugust"},"content":"        ArrayList\u003cTask\u003e tasks \u003d th.findTask(this.keyWord);"},{"lineNumber":32,"author":{"gitId":"icelenaugust"},"content":"        StringBuilder output \u003d new StringBuilder(\"Here are the matching tasks in your list: \\n\");"},{"lineNumber":33,"author":{"gitId":"icelenaugust"},"content":"        for (int i \u003d 0; i \u003c tasks.size(); i++) {"},{"lineNumber":34,"author":{"gitId":"icelenaugust"},"content":"            int num \u003d i + 1;"},{"lineNumber":35,"author":{"gitId":"icelenaugust"},"content":"            output.append(num)"},{"lineNumber":36,"author":{"gitId":"icelenaugust"},"content":"                    .append(\": \")"},{"lineNumber":37,"author":{"gitId":"icelenaugust"},"content":"                    .append(tasks.get(i))"},{"lineNumber":38,"author":{"gitId":"icelenaugust"},"content":"                    .append(\"\\n\");"},{"lineNumber":39,"author":{"gitId":"icelenaugust"},"content":"        }"},{"lineNumber":40,"author":{"gitId":"icelenaugust"},"content":""},{"lineNumber":41,"author":{"gitId":"icelenaugust"},"content":"        if (tasks.size() \u003d\u003d 0) {"},{"lineNumber":42,"author":{"gitId":"icelenaugust"},"content":"            output.append(\"--- No Tasks Found ---\");"},{"lineNumber":43,"author":{"gitId":"icelenaugust"},"content":"        }"},{"lineNumber":44,"author":{"gitId":"icelenaugust"},"content":"        return output.toString();"},{"lineNumber":45,"author":{"gitId":"icelenaugust"},"content":"    }"},{"lineNumber":46,"author":{"gitId":"icelenaugust"},"content":"}"}],"authorContributionMap":{"icelenaugust":46}},{"path":"src/main/java/duke/commands/ListCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"icelenaugust"},"content":"package duke.commands;"},{"lineNumber":2,"author":{"gitId":"icelenaugust"},"content":""},{"lineNumber":3,"author":{"gitId":"icelenaugust"},"content":"import java.util.ArrayList;"},{"lineNumber":4,"author":{"gitId":"icelenaugust"},"content":""},{"lineNumber":5,"author":{"gitId":"icelenaugust"},"content":"import duke.Storage;"},{"lineNumber":6,"author":{"gitId":"icelenaugust"},"content":"import duke.TaskHandler;"},{"lineNumber":7,"author":{"gitId":"icelenaugust"},"content":"import duke.exceptions.ChatBotException;"},{"lineNumber":8,"author":{"gitId":"icelenaugust"},"content":"import duke.tasks.Task;"},{"lineNumber":9,"author":{"gitId":"icelenaugust"},"content":""},{"lineNumber":10,"author":{"gitId":"icelenaugust"},"content":"/**"},{"lineNumber":11,"author":{"gitId":"icelenaugust"},"content":" * Represents a list command line"},{"lineNumber":12,"author":{"gitId":"icelenaugust"},"content":" */"},{"lineNumber":13,"author":{"gitId":"icelenaugust"},"content":"public class ListCommand extends ChatBotCommand {"},{"lineNumber":14,"author":{"gitId":"icelenaugust"},"content":""},{"lineNumber":15,"author":{"gitId":"icelenaugust"},"content":"    /**"},{"lineNumber":16,"author":{"gitId":"icelenaugust"},"content":"     * Default constructor for the ByeCommand class."},{"lineNumber":17,"author":{"gitId":"icelenaugust"},"content":"     */"},{"lineNumber":18,"author":{"gitId":"icelenaugust"},"content":"    public ListCommand() {"},{"lineNumber":19,"author":{"gitId":"icelenaugust"},"content":"    }"},{"lineNumber":20,"author":{"gitId":"icelenaugust"},"content":""},{"lineNumber":21,"author":{"gitId":"icelenaugust"},"content":"    /**"},{"lineNumber":22,"author":{"gitId":"icelenaugust"},"content":"     * Returns list of tasks."},{"lineNumber":23,"author":{"gitId":"icelenaugust"},"content":"     *"},{"lineNumber":24,"author":{"gitId":"icelenaugust"},"content":"     * @param th TaskHandler."},{"lineNumber":25,"author":{"gitId":"icelenaugust"},"content":"     * @param storage Storage to write and read file."},{"lineNumber":26,"author":{"gitId":"icelenaugust"},"content":"     * @return Command response."},{"lineNumber":27,"author":{"gitId":"icelenaugust"},"content":"     * @throws ChatBotException if encounters error."},{"lineNumber":28,"author":{"gitId":"icelenaugust"},"content":"     */"},{"lineNumber":29,"author":{"gitId":"icelenaugust"},"content":"    public String runTask(TaskHandler th, Storage storage) throws ChatBotException {"},{"lineNumber":30,"author":{"gitId":"icelenaugust"},"content":"        ArrayList\u003cTask\u003e tasks \u003d th.getTaskList();"},{"lineNumber":31,"author":{"gitId":"icelenaugust"},"content":"        StringBuilder output \u003d new StringBuilder(\"Here are the tasks in your list: \\n\");"},{"lineNumber":32,"author":{"gitId":"icelenaugust"},"content":"        for (int i \u003d 0; i \u003c tasks.size(); i++) {"},{"lineNumber":33,"author":{"gitId":"icelenaugust"},"content":"            int num \u003d i + 1;"},{"lineNumber":34,"author":{"gitId":"icelenaugust"},"content":"            output.append(num)"},{"lineNumber":35,"author":{"gitId":"icelenaugust"},"content":"                    .append(\": \")"},{"lineNumber":36,"author":{"gitId":"icelenaugust"},"content":"                    .append(tasks.get(i))"},{"lineNumber":37,"author":{"gitId":"icelenaugust"},"content":"                    .append(\"\\n\");"},{"lineNumber":38,"author":{"gitId":"icelenaugust"},"content":"        }"},{"lineNumber":39,"author":{"gitId":"icelenaugust"},"content":""},{"lineNumber":40,"author":{"gitId":"icelenaugust"},"content":"        if (tasks.size() \u003d\u003d 0) {"},{"lineNumber":41,"author":{"gitId":"icelenaugust"},"content":"            output.append(\"--- No Tasks Found ---\");"},{"lineNumber":42,"author":{"gitId":"icelenaugust"},"content":"        }"},{"lineNumber":43,"author":{"gitId":"icelenaugust"},"content":"        return output.toString();"},{"lineNumber":44,"author":{"gitId":"icelenaugust"},"content":"    }"},{"lineNumber":45,"author":{"gitId":"icelenaugust"},"content":""},{"lineNumber":46,"author":{"gitId":"icelenaugust"},"content":"}"}],"authorContributionMap":{"icelenaugust":46}},{"path":"src/main/java/duke/commands/TodoCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"icelenaugust"},"content":"package duke.commands;"},{"lineNumber":2,"author":{"gitId":"icelenaugust"},"content":""},{"lineNumber":3,"author":{"gitId":"icelenaugust"},"content":"import duke.Storage;"},{"lineNumber":4,"author":{"gitId":"icelenaugust"},"content":"import duke.TaskHandler;"},{"lineNumber":5,"author":{"gitId":"icelenaugust"},"content":"import duke.exceptions.ChatBotException;"},{"lineNumber":6,"author":{"gitId":"icelenaugust"},"content":""},{"lineNumber":7,"author":{"gitId":"icelenaugust"},"content":"/**"},{"lineNumber":8,"author":{"gitId":"icelenaugust"},"content":" * Represents a todo task command line"},{"lineNumber":9,"author":{"gitId":"icelenaugust"},"content":" */"},{"lineNumber":10,"author":{"gitId":"icelenaugust"},"content":"public class TodoCommand extends ChatBotCommand {"},{"lineNumber":11,"author":{"gitId":"icelenaugust"},"content":"    private String taskName;"},{"lineNumber":12,"author":{"gitId":"icelenaugust"},"content":""},{"lineNumber":13,"author":{"gitId":"icelenaugust"},"content":"    /**"},{"lineNumber":14,"author":{"gitId":"icelenaugust"},"content":"     * Default constructor for the todoCommand class."},{"lineNumber":15,"author":{"gitId":"icelenaugust"},"content":"     *"},{"lineNumber":16,"author":{"gitId":"icelenaugust"},"content":"     * @param taskName String that stores task name."},{"lineNumber":17,"author":{"gitId":"icelenaugust"},"content":"     */"},{"lineNumber":18,"author":{"gitId":"icelenaugust"},"content":"    public TodoCommand(String taskName) {"},{"lineNumber":19,"author":{"gitId":"icelenaugust"},"content":"        this.taskName \u003d taskName;"},{"lineNumber":20,"author":{"gitId":"icelenaugust"},"content":"    }"},{"lineNumber":21,"author":{"gitId":"icelenaugust"},"content":""},{"lineNumber":22,"author":{"gitId":"icelenaugust"},"content":"    /**"},{"lineNumber":23,"author":{"gitId":"icelenaugust"},"content":"     * Returns message for adding a todo task."},{"lineNumber":24,"author":{"gitId":"icelenaugust"},"content":"     *"},{"lineNumber":25,"author":{"gitId":"icelenaugust"},"content":"     * @param th TaskHandler."},{"lineNumber":26,"author":{"gitId":"icelenaugust"},"content":"     * @param storage Storage to write and read file."},{"lineNumber":27,"author":{"gitId":"icelenaugust"},"content":"     * @return Command response."},{"lineNumber":28,"author":{"gitId":"icelenaugust"},"content":"     * @throws ChatBotException if encounters error."},{"lineNumber":29,"author":{"gitId":"icelenaugust"},"content":"     */"},{"lineNumber":30,"author":{"gitId":"icelenaugust"},"content":"    public String runTask(TaskHandler th, Storage storage) throws ChatBotException {"},{"lineNumber":31,"author":{"gitId":"icelenaugust"},"content":"        th.addTodoTask(taskName);"},{"lineNumber":32,"author":{"gitId":"icelenaugust"},"content":"        storage.writeToFile(th);"},{"lineNumber":33,"author":{"gitId":"icelenaugust"},"content":"        String output \u003d String.format("},{"lineNumber":34,"author":{"gitId":"icelenaugust"},"content":"                \"Got it. I\u0027ve added this task:\\n%s\\nNow you have %d task(s) in the list\","},{"lineNumber":35,"author":{"gitId":"icelenaugust"},"content":"                th.getTaskList().get(th.getLength() - 1).toString(),"},{"lineNumber":36,"author":{"gitId":"icelenaugust"},"content":"                th.getLength());"},{"lineNumber":37,"author":{"gitId":"icelenaugust"},"content":"        return output;"},{"lineNumber":38,"author":{"gitId":"icelenaugust"},"content":"    }"},{"lineNumber":39,"author":{"gitId":"icelenaugust"},"content":"}"}],"authorContributionMap":{"icelenaugust":39}},{"path":"src/main/java/duke/exceptions/ChatBotException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"icelenaugust"},"content":"package duke.exceptions;"},{"lineNumber":2,"author":{"gitId":"icelenaugust"},"content":""},{"lineNumber":3,"author":{"gitId":"icelenaugust"},"content":"/**"},{"lineNumber":4,"author":{"gitId":"icelenaugust"},"content":" * Represents the exceptions that the chat bot Duke might encounter."},{"lineNumber":5,"author":{"gitId":"icelenaugust"},"content":" */"},{"lineNumber":6,"author":{"gitId":"icelenaugust"},"content":"public class ChatBotException extends Exception {"},{"lineNumber":7,"author":{"gitId":"icelenaugust"},"content":"    /**"},{"lineNumber":8,"author":{"gitId":"icelenaugust"},"content":"     * Default constructor for the DateFormatException class."},{"lineNumber":9,"author":{"gitId":"icelenaugust"},"content":"     * @param message error that the bot encountered."},{"lineNumber":10,"author":{"gitId":"icelenaugust"},"content":"     */"},{"lineNumber":11,"author":{"gitId":"icelenaugust"},"content":"    public ChatBotException(String message) {"},{"lineNumber":12,"author":{"gitId":"icelenaugust"},"content":"        super(message);"},{"lineNumber":13,"author":{"gitId":"icelenaugust"},"content":"    }"},{"lineNumber":14,"author":{"gitId":"icelenaugust"},"content":"}"}],"authorContributionMap":{"icelenaugust":14}},{"path":"src/main/java/duke/exceptions/FileIoException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"icelenaugust"},"content":"package duke.exceptions;"},{"lineNumber":2,"author":{"gitId":"icelenaugust"},"content":""},{"lineNumber":3,"author":{"gitId":"icelenaugust"},"content":"/**"},{"lineNumber":4,"author":{"gitId":"icelenaugust"},"content":" * Represents the exceptions related to data storage in the file."},{"lineNumber":5,"author":{"gitId":"icelenaugust"},"content":" */"},{"lineNumber":6,"author":{"gitId":"icelenaugust"},"content":"public class FileIoException extends ChatBotException {"},{"lineNumber":7,"author":{"gitId":"icelenaugust"},"content":"    public FileIoException() {"},{"lineNumber":8,"author":{"gitId":"icelenaugust"},"content":"        super(\"OH NO!!! There is a File Io Error!!\");"},{"lineNumber":9,"author":{"gitId":"icelenaugust"},"content":"    }"},{"lineNumber":10,"author":{"gitId":"icelenaugust"},"content":"}"}],"authorContributionMap":{"icelenaugust":10}},{"path":"src/main/java/duke/exceptions/IndexOutOfRangeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"icelenaugust"},"content":"package duke.exceptions;"},{"lineNumber":2,"author":{"gitId":"icelenaugust"},"content":""},{"lineNumber":3,"author":{"gitId":"icelenaugust"},"content":"/**"},{"lineNumber":4,"author":{"gitId":"icelenaugust"},"content":" * Represents the exceptions when calling an index more than"},{"lineNumber":5,"author":{"gitId":"icelenaugust"},"content":" * the list size."},{"lineNumber":6,"author":{"gitId":"icelenaugust"},"content":" */"},{"lineNumber":7,"author":{"gitId":"icelenaugust"},"content":"public class IndexOutOfRangeException extends ChatBotException {"},{"lineNumber":8,"author":{"gitId":"icelenaugust"},"content":"    public IndexOutOfRangeException() {"},{"lineNumber":9,"author":{"gitId":"icelenaugust"},"content":"        super(\"OOPS!!! There are not so many tasks in the list.\");"},{"lineNumber":10,"author":{"gitId":"icelenaugust"},"content":"    }"},{"lineNumber":11,"author":{"gitId":"icelenaugust"},"content":"}"}],"authorContributionMap":{"icelenaugust":11}},{"path":"src/main/java/duke/exceptions/InvalidCommandTypeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"icelenaugust"},"content":"package duke.exceptions;"},{"lineNumber":2,"author":{"gitId":"icelenaugust"},"content":""},{"lineNumber":3,"author":{"gitId":"icelenaugust"},"content":"/**"},{"lineNumber":4,"author":{"gitId":"icelenaugust"},"content":" * Represents the exceptions when the command line is invalid."},{"lineNumber":5,"author":{"gitId":"icelenaugust"},"content":" */"},{"lineNumber":6,"author":{"gitId":"icelenaugust"},"content":"public class InvalidCommandTypeException extends ChatBotException {"},{"lineNumber":7,"author":{"gitId":"icelenaugust"},"content":"    public InvalidCommandTypeException() {"},{"lineNumber":8,"author":{"gitId":"icelenaugust"},"content":"        super(\"There is no such command word\");"},{"lineNumber":9,"author":{"gitId":"icelenaugust"},"content":"    }"},{"lineNumber":10,"author":{"gitId":"icelenaugust"},"content":"}"}],"authorContributionMap":{"icelenaugust":10}},{"path":"src/main/java/duke/exceptions/InvalidDateFormatException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"icelenaugust"},"content":"package duke.exceptions;"},{"lineNumber":2,"author":{"gitId":"icelenaugust"},"content":""},{"lineNumber":3,"author":{"gitId":"icelenaugust"},"content":"/**"},{"lineNumber":4,"author":{"gitId":"icelenaugust"},"content":" * Represents the exceptions when the date is in the wrong format."},{"lineNumber":5,"author":{"gitId":"icelenaugust"},"content":" */"},{"lineNumber":6,"author":{"gitId":"icelenaugust"},"content":"public class InvalidDateFormatException extends ChatBotException {"},{"lineNumber":7,"author":{"gitId":"icelenaugust"},"content":"    public InvalidDateFormatException() {"},{"lineNumber":8,"author":{"gitId":"icelenaugust"},"content":"        super(\"Please key in the date in the format of: dd mm yyyy\");"},{"lineNumber":9,"author":{"gitId":"icelenaugust"},"content":"    }"},{"lineNumber":10,"author":{"gitId":"icelenaugust"},"content":"}"}],"authorContributionMap":{"icelenaugust":10}},{"path":"src/main/java/duke/exceptions/InvalidTimeFormatException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"icelenaugust"},"content":"package duke.exceptions;"},{"lineNumber":2,"author":{"gitId":"icelenaugust"},"content":""},{"lineNumber":3,"author":{"gitId":"icelenaugust"},"content":"/**"},{"lineNumber":4,"author":{"gitId":"icelenaugust"},"content":" * Represents the exceptions when the time is in the wrong format."},{"lineNumber":5,"author":{"gitId":"icelenaugust"},"content":" */"},{"lineNumber":6,"author":{"gitId":"icelenaugust"},"content":"public class InvalidTimeFormatException extends ChatBotException {"},{"lineNumber":7,"author":{"gitId":"icelenaugust"},"content":"    public InvalidTimeFormatException() {"},{"lineNumber":8,"author":{"gitId":"icelenaugust"},"content":"        super(\"Please key in the time in the format of: eg. 12 12 2021 03:00 pm - 05:00 pm\");"},{"lineNumber":9,"author":{"gitId":"icelenaugust"},"content":"    }"},{"lineNumber":10,"author":{"gitId":"icelenaugust"},"content":"}"}],"authorContributionMap":{"icelenaugust":10}},{"path":"src/main/java/duke/exceptions/MissingDescriptionException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"icelenaugust"},"content":"package duke.exceptions;"},{"lineNumber":2,"author":{"gitId":"icelenaugust"},"content":""},{"lineNumber":3,"author":{"gitId":"icelenaugust"},"content":"/**"},{"lineNumber":4,"author":{"gitId":"icelenaugust"},"content":" * Represents the exceptions when the task name is no specified."},{"lineNumber":5,"author":{"gitId":"icelenaugust"},"content":" */"},{"lineNumber":6,"author":{"gitId":"icelenaugust"},"content":"public class MissingDescriptionException extends ChatBotException {"},{"lineNumber":7,"author":{"gitId":"icelenaugust"},"content":"    public MissingDescriptionException(String type) {"},{"lineNumber":8,"author":{"gitId":"icelenaugust"},"content":"        super(\"OOPS!!! The description of a \" + type + \" cannot be empty.\");"},{"lineNumber":9,"author":{"gitId":"icelenaugust"},"content":"    }"},{"lineNumber":10,"author":{"gitId":"icelenaugust"},"content":"}"}],"authorContributionMap":{"icelenaugust":10}},{"path":"src/main/java/duke/exceptions/TaskDoneException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"icelenaugust"},"content":"package duke.exceptions;"},{"lineNumber":2,"author":{"gitId":"icelenaugust"},"content":""},{"lineNumber":3,"author":{"gitId":"icelenaugust"},"content":"/**"},{"lineNumber":4,"author":{"gitId":"icelenaugust"},"content":" * Represents the exceptions when marking a finished task done."},{"lineNumber":5,"author":{"gitId":"icelenaugust"},"content":" */"},{"lineNumber":6,"author":{"gitId":"icelenaugust"},"content":"public class TaskDoneException extends ChatBotException {"},{"lineNumber":7,"author":{"gitId":"icelenaugust"},"content":"    public TaskDoneException() {"},{"lineNumber":8,"author":{"gitId":"icelenaugust"},"content":"        super(\"RELAX!!! The task is already done!\");"},{"lineNumber":9,"author":{"gitId":"icelenaugust"},"content":"    }"},{"lineNumber":10,"author":{"gitId":"icelenaugust"},"content":"}"}],"authorContributionMap":{"icelenaugust":10}},{"path":"src/main/java/duke/exceptions/UnknownInputException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"icelenaugust"},"content":"package duke.exceptions;"},{"lineNumber":2,"author":{"gitId":"icelenaugust"},"content":""},{"lineNumber":3,"author":{"gitId":"icelenaugust"},"content":"/**"},{"lineNumber":4,"author":{"gitId":"icelenaugust"},"content":" * Represents the exceptions when the input is invalid."},{"lineNumber":5,"author":{"gitId":"icelenaugust"},"content":" */"},{"lineNumber":6,"author":{"gitId":"icelenaugust"},"content":"public class UnknownInputException extends ChatBotException {"},{"lineNumber":7,"author":{"gitId":"icelenaugust"},"content":"    public UnknownInputException() {"},{"lineNumber":8,"author":{"gitId":"icelenaugust"},"content":"        super(\"OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\");"},{"lineNumber":9,"author":{"gitId":"icelenaugust"},"content":"    }"},{"lineNumber":10,"author":{"gitId":"icelenaugust"},"content":"}"}],"authorContributionMap":{"icelenaugust":10}},{"path":"src/main/java/duke/tasks/DeadlineTask.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"icelenaugust"},"content":"package duke.tasks;"},{"lineNumber":2,"author":{"gitId":"icelenaugust"},"content":""},{"lineNumber":3,"author":{"gitId":"icelenaugust"},"content":"import java.time.LocalDate;"},{"lineNumber":4,"author":{"gitId":"icelenaugust"},"content":"import java.time.format.DateTimeFormatter;"},{"lineNumber":5,"author":{"gitId":"icelenaugust"},"content":""},{"lineNumber":6,"author":{"gitId":"icelenaugust"},"content":"/**"},{"lineNumber":7,"author":{"gitId":"icelenaugust"},"content":" *  Represents a DeadlineTask."},{"lineNumber":8,"author":{"gitId":"icelenaugust"},"content":" */"},{"lineNumber":9,"author":{"gitId":"icelenaugust"},"content":"public class DeadlineTask extends Task {"},{"lineNumber":10,"author":{"gitId":"icelenaugust"},"content":"    private String type;"},{"lineNumber":11,"author":{"gitId":"icelenaugust"},"content":"    private LocalDate deadline;"},{"lineNumber":12,"author":{"gitId":"icelenaugust"},"content":""},{"lineNumber":13,"author":{"gitId":"icelenaugust"},"content":"    /**"},{"lineNumber":14,"author":{"gitId":"icelenaugust"},"content":"     *  DeadlineTask constructor."},{"lineNumber":15,"author":{"gitId":"icelenaugust"},"content":"     *"},{"lineNumber":16,"author":{"gitId":"icelenaugust"},"content":"     *  @param taskName represents the name of the deadline task."},{"lineNumber":17,"author":{"gitId":"icelenaugust"},"content":"     *  @param deadline represents the time of the task that has to be done."},{"lineNumber":18,"author":{"gitId":"icelenaugust"},"content":"     */"},{"lineNumber":19,"author":{"gitId":"icelenaugust"},"content":"    public DeadlineTask(String taskName, LocalDate deadline) {"},{"lineNumber":20,"author":{"gitId":"icelenaugust"},"content":"        super(taskName);"},{"lineNumber":21,"author":{"gitId":"icelenaugust"},"content":"        this.type \u003d \"[D]\";"},{"lineNumber":22,"author":{"gitId":"icelenaugust"},"content":"        this.deadline \u003d deadline;"},{"lineNumber":23,"author":{"gitId":"icelenaugust"},"content":"    }"},{"lineNumber":24,"author":{"gitId":"icelenaugust"},"content":""},{"lineNumber":25,"author":{"gitId":"icelenaugust"},"content":"    public String getType() {"},{"lineNumber":26,"author":{"gitId":"icelenaugust"},"content":"        return this.type;"},{"lineNumber":27,"author":{"gitId":"icelenaugust"},"content":"    }"},{"lineNumber":28,"author":{"gitId":"icelenaugust"},"content":""},{"lineNumber":29,"author":{"gitId":"icelenaugust"},"content":"    /**"},{"lineNumber":30,"author":{"gitId":"icelenaugust"},"content":"     *  Formats the task to file output format in the data file."},{"lineNumber":31,"author":{"gitId":"icelenaugust"},"content":"     *"},{"lineNumber":32,"author":{"gitId":"icelenaugust"},"content":"     *  @return String that is in the correct format."},{"lineNumber":33,"author":{"gitId":"icelenaugust"},"content":"     */"},{"lineNumber":34,"author":{"gitId":"icelenaugust"},"content":"    public String writeToFileFormat() {"},{"lineNumber":35,"author":{"gitId":"icelenaugust"},"content":"        DateTimeFormatter dateFormat \u003d DateTimeFormatter.ofPattern(\"dd MMM yyyy\");"},{"lineNumber":36,"author":{"gitId":"icelenaugust"},"content":"        return String.format(\"%s|%s|%s|%s\","},{"lineNumber":37,"author":{"gitId":"icelenaugust"},"content":"                \"D\","},{"lineNumber":38,"author":{"gitId":"icelenaugust"},"content":"                isDone \u003d\u003d true ? \"1\" : \"0\","},{"lineNumber":39,"author":{"gitId":"icelenaugust"},"content":"                taskName,"},{"lineNumber":40,"author":{"gitId":"icelenaugust"},"content":"                deadline.format(dateFormat));"},{"lineNumber":41,"author":{"gitId":"icelenaugust"},"content":""},{"lineNumber":42,"author":{"gitId":"icelenaugust"},"content":"    }"},{"lineNumber":43,"author":{"gitId":"icelenaugust"},"content":""},{"lineNumber":44,"author":{"gitId":"icelenaugust"},"content":"    @Override"},{"lineNumber":45,"author":{"gitId":"icelenaugust"},"content":"    public String toString() {"},{"lineNumber":46,"author":{"gitId":"icelenaugust"},"content":"        DateTimeFormatter dateFormat \u003d DateTimeFormatter.ofPattern(\"dd MMM yyyy\");"},{"lineNumber":47,"author":{"gitId":"icelenaugust"},"content":"        return this.type + super.toString() + \" (by: \" + this.deadline.format(dateFormat) + \")\";"},{"lineNumber":48,"author":{"gitId":"icelenaugust"},"content":"    }"},{"lineNumber":49,"author":{"gitId":"icelenaugust"},"content":"}"}],"authorContributionMap":{"icelenaugust":49}},{"path":"src/main/java/duke/tasks/EventTask.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"icelenaugust"},"content":"package duke.tasks;"},{"lineNumber":2,"author":{"gitId":"icelenaugust"},"content":""},{"lineNumber":3,"author":{"gitId":"icelenaugust"},"content":"import java.time.LocalDateTime;"},{"lineNumber":4,"author":{"gitId":"icelenaugust"},"content":"import java.time.format.DateTimeFormatter;"},{"lineNumber":5,"author":{"gitId":"icelenaugust"},"content":""},{"lineNumber":6,"author":{"gitId":"icelenaugust"},"content":"/**"},{"lineNumber":7,"author":{"gitId":"icelenaugust"},"content":" *  Represents a EventTask."},{"lineNumber":8,"author":{"gitId":"icelenaugust"},"content":" */"},{"lineNumber":9,"author":{"gitId":"icelenaugust"},"content":"public class EventTask extends Task {"},{"lineNumber":10,"author":{"gitId":"icelenaugust"},"content":"    private String type;"},{"lineNumber":11,"author":{"gitId":"icelenaugust"},"content":"    private LocalDateTime startTime;"},{"lineNumber":12,"author":{"gitId":"icelenaugust"},"content":"    private LocalDateTime endTime;"},{"lineNumber":13,"author":{"gitId":"icelenaugust"},"content":""},{"lineNumber":14,"author":{"gitId":"icelenaugust"},"content":"    /**"},{"lineNumber":15,"author":{"gitId":"icelenaugust"},"content":"     *  EventTask constructor."},{"lineNumber":16,"author":{"gitId":"icelenaugust"},"content":"     *"},{"lineNumber":17,"author":{"gitId":"icelenaugust"},"content":"     *  @param taskName represents the name of the event task."},{"lineNumber":18,"author":{"gitId":"icelenaugust"},"content":"     *  @param startTime represents the starting time of the task."},{"lineNumber":19,"author":{"gitId":"icelenaugust"},"content":"     *  @param endTime represents the ending time of the task."},{"lineNumber":20,"author":{"gitId":"icelenaugust"},"content":"     */"},{"lineNumber":21,"author":{"gitId":"icelenaugust"},"content":"    public EventTask(String taskName, LocalDateTime startTime, LocalDateTime endTime) {"},{"lineNumber":22,"author":{"gitId":"icelenaugust"},"content":"        super(taskName);"},{"lineNumber":23,"author":{"gitId":"icelenaugust"},"content":"        this.type \u003d \"[E]\";"},{"lineNumber":24,"author":{"gitId":"icelenaugust"},"content":"        this.startTime \u003d startTime;"},{"lineNumber":25,"author":{"gitId":"icelenaugust"},"content":"        this.endTime \u003d endTime;"},{"lineNumber":26,"author":{"gitId":"icelenaugust"},"content":"    }"},{"lineNumber":27,"author":{"gitId":"icelenaugust"},"content":""},{"lineNumber":28,"author":{"gitId":"icelenaugust"},"content":"    public String getType() {"},{"lineNumber":29,"author":{"gitId":"icelenaugust"},"content":"        return this.type;"},{"lineNumber":30,"author":{"gitId":"icelenaugust"},"content":"    }"},{"lineNumber":31,"author":{"gitId":"icelenaugust"},"content":""},{"lineNumber":32,"author":{"gitId":"icelenaugust"},"content":"    /**"},{"lineNumber":33,"author":{"gitId":"icelenaugust"},"content":"     *  Formats the task to file output format in the data file."},{"lineNumber":34,"author":{"gitId":"icelenaugust"},"content":"     *"},{"lineNumber":35,"author":{"gitId":"icelenaugust"},"content":"     *  @return String that is in the correct format."},{"lineNumber":36,"author":{"gitId":"icelenaugust"},"content":"     */"},{"lineNumber":37,"author":{"gitId":"icelenaugust"},"content":"    public String writeToFileFormat() {"},{"lineNumber":38,"author":{"gitId":"icelenaugust"},"content":"        DateTimeFormatter timeFormat \u003d DateTimeFormatter.ofPattern(\"dd MMM yyyy hh:mm a\");"},{"lineNumber":39,"author":{"gitId":"icelenaugust"},"content":"        return String.format(\"%s|%s|%s|%s|%s\","},{"lineNumber":40,"author":{"gitId":"icelenaugust"},"content":"                \"E\","},{"lineNumber":41,"author":{"gitId":"icelenaugust"},"content":"                isDone \u003d\u003d true ? \"1\" : \"0\","},{"lineNumber":42,"author":{"gitId":"icelenaugust"},"content":"                taskName,"},{"lineNumber":43,"author":{"gitId":"icelenaugust"},"content":"                startTime.format(timeFormat),"},{"lineNumber":44,"author":{"gitId":"icelenaugust"},"content":"                endTime.format(timeFormat));"},{"lineNumber":45,"author":{"gitId":"icelenaugust"},"content":"    }"},{"lineNumber":46,"author":{"gitId":"icelenaugust"},"content":""},{"lineNumber":47,"author":{"gitId":"icelenaugust"},"content":"    @Override"},{"lineNumber":48,"author":{"gitId":"icelenaugust"},"content":"    public String toString() {"},{"lineNumber":49,"author":{"gitId":"icelenaugust"},"content":"        DateTimeFormatter timeFormat \u003d DateTimeFormatter.ofPattern(\"dd MMM yyyy hh:mm a\");"},{"lineNumber":50,"author":{"gitId":"icelenaugust"},"content":"        DateTimeFormatter hourFormat \u003d DateTimeFormatter.ofPattern(\"hh:mm a\");"},{"lineNumber":51,"author":{"gitId":"icelenaugust"},"content":"        return this.type + super.toString() + \" (at: \" + this.startTime.format(timeFormat)"},{"lineNumber":52,"author":{"gitId":"icelenaugust"},"content":"                + \" to \" + this.endTime.format(hourFormat) + \")\";"},{"lineNumber":53,"author":{"gitId":"icelenaugust"},"content":"    }"},{"lineNumber":54,"author":{"gitId":"icelenaugust"},"content":"}"}],"authorContributionMap":{"icelenaugust":54}},{"path":"src/main/java/duke/tasks/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"icelenaugust"},"content":"package duke.tasks;"},{"lineNumber":2,"author":{"gitId":"icelenaugust"},"content":""},{"lineNumber":3,"author":{"gitId":"icelenaugust"},"content":""},{"lineNumber":4,"author":{"gitId":"icelenaugust"},"content":"public abstract class Task {"},{"lineNumber":5,"author":{"gitId":"icelenaugust"},"content":"    protected boolean isDone;"},{"lineNumber":6,"author":{"gitId":"icelenaugust"},"content":"    protected String taskName;"},{"lineNumber":7,"author":{"gitId":"icelenaugust"},"content":""},{"lineNumber":8,"author":{"gitId":"icelenaugust"},"content":"    /**"},{"lineNumber":9,"author":{"gitId":"icelenaugust"},"content":"     *  Task constructor."},{"lineNumber":10,"author":{"gitId":"icelenaugust"},"content":"     *"},{"lineNumber":11,"author":{"gitId":"icelenaugust"},"content":"     *  @param taskName represents the name of the task."},{"lineNumber":12,"author":{"gitId":"icelenaugust"},"content":"     */"},{"lineNumber":13,"author":{"gitId":"icelenaugust"},"content":"    public Task(String taskName) {"},{"lineNumber":14,"author":{"gitId":"icelenaugust"},"content":"        this.taskName \u003d taskName;"},{"lineNumber":15,"author":{"gitId":"icelenaugust"},"content":"        this.isDone \u003d false;"},{"lineNumber":16,"author":{"gitId":"icelenaugust"},"content":"    }"},{"lineNumber":17,"author":{"gitId":"icelenaugust"},"content":""},{"lineNumber":18,"author":{"gitId":"icelenaugust"},"content":"    //when task is done change the isDone to true"},{"lineNumber":19,"author":{"gitId":"icelenaugust"},"content":"    public void setTaskDone() {"},{"lineNumber":20,"author":{"gitId":"icelenaugust"},"content":"        this.isDone \u003d true;"},{"lineNumber":21,"author":{"gitId":"icelenaugust"},"content":"    }"},{"lineNumber":22,"author":{"gitId":"icelenaugust"},"content":""},{"lineNumber":23,"author":{"gitId":"icelenaugust"},"content":"    public String getTaskName() {"},{"lineNumber":24,"author":{"gitId":"icelenaugust"},"content":"        return this.taskName;"},{"lineNumber":25,"author":{"gitId":"icelenaugust"},"content":"    }"},{"lineNumber":26,"author":{"gitId":"icelenaugust"},"content":""},{"lineNumber":27,"author":{"gitId":"icelenaugust"},"content":"    public boolean getIsDone() {"},{"lineNumber":28,"author":{"gitId":"icelenaugust"},"content":"        return this.isDone;"},{"lineNumber":29,"author":{"gitId":"icelenaugust"},"content":"    }"},{"lineNumber":30,"author":{"gitId":"icelenaugust"},"content":"    public abstract String writeToFileFormat();"},{"lineNumber":31,"author":{"gitId":"icelenaugust"},"content":""},{"lineNumber":32,"author":{"gitId":"icelenaugust"},"content":""},{"lineNumber":33,"author":{"gitId":"icelenaugust"},"content":"    /**"},{"lineNumber":34,"author":{"gitId":"icelenaugust"},"content":"     *  Formats the task to string format."},{"lineNumber":35,"author":{"gitId":"icelenaugust"},"content":"     *"},{"lineNumber":36,"author":{"gitId":"icelenaugust"},"content":"     *  @return String that is in the correct format."},{"lineNumber":37,"author":{"gitId":"icelenaugust"},"content":"     */"},{"lineNumber":38,"author":{"gitId":"icelenaugust"},"content":"    public String toString() {"},{"lineNumber":39,"author":{"gitId":"icelenaugust"},"content":"        if (this.isDone) {"},{"lineNumber":40,"author":{"gitId":"icelenaugust"},"content":"            return \"[X] \" + this.taskName;"},{"lineNumber":41,"author":{"gitId":"icelenaugust"},"content":"        } else {"},{"lineNumber":42,"author":{"gitId":"icelenaugust"},"content":"            return \"[ ] \" + this.taskName;"},{"lineNumber":43,"author":{"gitId":"icelenaugust"},"content":"        }"},{"lineNumber":44,"author":{"gitId":"icelenaugust"},"content":"    }"},{"lineNumber":45,"author":{"gitId":"icelenaugust"},"content":""},{"lineNumber":46,"author":{"gitId":"icelenaugust"},"content":"}"}],"authorContributionMap":{"icelenaugust":46}},{"path":"src/main/java/duke/tasks/TodoTask.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"icelenaugust"},"content":"package duke.tasks;"},{"lineNumber":2,"author":{"gitId":"icelenaugust"},"content":""},{"lineNumber":3,"author":{"gitId":"icelenaugust"},"content":"/**"},{"lineNumber":4,"author":{"gitId":"icelenaugust"},"content":" *  Represents a TodoTask."},{"lineNumber":5,"author":{"gitId":"icelenaugust"},"content":" */"},{"lineNumber":6,"author":{"gitId":"icelenaugust"},"content":"public class TodoTask extends Task {"},{"lineNumber":7,"author":{"gitId":"icelenaugust"},"content":"    private String type;"},{"lineNumber":8,"author":{"gitId":"icelenaugust"},"content":""},{"lineNumber":9,"author":{"gitId":"icelenaugust"},"content":"    /**"},{"lineNumber":10,"author":{"gitId":"icelenaugust"},"content":"     *  EventTask constructor."},{"lineNumber":11,"author":{"gitId":"icelenaugust"},"content":"     *"},{"lineNumber":12,"author":{"gitId":"icelenaugust"},"content":"     *  @param taskName represents the name of the event task."},{"lineNumber":13,"author":{"gitId":"icelenaugust"},"content":"     */"},{"lineNumber":14,"author":{"gitId":"icelenaugust"},"content":"    public TodoTask(String taskName) {"},{"lineNumber":15,"author":{"gitId":"icelenaugust"},"content":"        super(taskName);"},{"lineNumber":16,"author":{"gitId":"icelenaugust"},"content":"        this.type \u003d \"[T]\";"},{"lineNumber":17,"author":{"gitId":"icelenaugust"},"content":"    }"},{"lineNumber":18,"author":{"gitId":"icelenaugust"},"content":""},{"lineNumber":19,"author":{"gitId":"icelenaugust"},"content":"    public String getType() {"},{"lineNumber":20,"author":{"gitId":"icelenaugust"},"content":"        return this.type;"},{"lineNumber":21,"author":{"gitId":"icelenaugust"},"content":"    }"},{"lineNumber":22,"author":{"gitId":"icelenaugust"},"content":""},{"lineNumber":23,"author":{"gitId":"icelenaugust"},"content":"    /**"},{"lineNumber":24,"author":{"gitId":"icelenaugust"},"content":"     *  Formats the task to file output format in the data file."},{"lineNumber":25,"author":{"gitId":"icelenaugust"},"content":"     *"},{"lineNumber":26,"author":{"gitId":"icelenaugust"},"content":"     *  @return String that is in the correct format."},{"lineNumber":27,"author":{"gitId":"icelenaugust"},"content":"     */"},{"lineNumber":28,"author":{"gitId":"icelenaugust"},"content":"    public String writeToFileFormat() {"},{"lineNumber":29,"author":{"gitId":"icelenaugust"},"content":"        return String.format(\"%s|%s|%s\","},{"lineNumber":30,"author":{"gitId":"icelenaugust"},"content":"                \"T\","},{"lineNumber":31,"author":{"gitId":"icelenaugust"},"content":"                isDone \u003d\u003d true ? \"1\" : \"0\","},{"lineNumber":32,"author":{"gitId":"icelenaugust"},"content":"                taskName);"},{"lineNumber":33,"author":{"gitId":"icelenaugust"},"content":"    }"},{"lineNumber":34,"author":{"gitId":"icelenaugust"},"content":""},{"lineNumber":35,"author":{"gitId":"icelenaugust"},"content":"    @Override"},{"lineNumber":36,"author":{"gitId":"icelenaugust"},"content":"    public String toString() {"},{"lineNumber":37,"author":{"gitId":"icelenaugust"},"content":"        return this.type + super.toString();"},{"lineNumber":38,"author":{"gitId":"icelenaugust"},"content":"    }"},{"lineNumber":39,"author":{"gitId":"icelenaugust"},"content":"}"}],"authorContributionMap":{"icelenaugust":39}},{"path":"src/main/resources/view/DialogBox.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"icelenaugust"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"},{"lineNumber":2,"author":{"gitId":"icelenaugust"},"content":""},{"lineNumber":3,"author":{"gitId":"icelenaugust"},"content":"\u003c?import javafx.geometry.Insets?\u003e"},{"lineNumber":4,"author":{"gitId":"icelenaugust"},"content":"\u003c?import javafx.scene.control.Label?\u003e"},{"lineNumber":5,"author":{"gitId":"icelenaugust"},"content":"\u003c?import javafx.scene.image.ImageView?\u003e"},{"lineNumber":6,"author":{"gitId":"icelenaugust"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e"},{"lineNumber":7,"author":{"gitId":"icelenaugust"},"content":""},{"lineNumber":8,"author":{"gitId":"icelenaugust"},"content":"\u003cfx:root alignment\u003d\"TOP_RIGHT\" maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\" prefWidth\u003d\"400.0\" type\u003d\"javafx.scene.layout.HBox\" xmlns\u003d\"http://javafx.com/javafx/8.0.171\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e"},{"lineNumber":9,"author":{"gitId":"icelenaugust"},"content":"    \u003cchildren\u003e"},{"lineNumber":10,"author":{"gitId":"icelenaugust"},"content":"        \u003cLabel fx:id\u003d\"dialog\" text\u003d\"Label\" wrapText\u003d\"true\" /\u003e"},{"lineNumber":11,"author":{"gitId":"icelenaugust"},"content":"        \u003cImageView fx:id\u003d\"displayPicture\" fitHeight\u003d\"99.0\" fitWidth\u003d\"99.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\" /\u003e"},{"lineNumber":12,"author":{"gitId":"icelenaugust"},"content":"    \u003c/children\u003e"},{"lineNumber":13,"author":{"gitId":"icelenaugust"},"content":"    \u003cpadding\u003e"},{"lineNumber":14,"author":{"gitId":"icelenaugust"},"content":"        \u003cInsets bottom\u003d\"15.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"15.0\" /\u003e"},{"lineNumber":15,"author":{"gitId":"icelenaugust"},"content":"    \u003c/padding\u003e"},{"lineNumber":16,"author":{"gitId":"icelenaugust"},"content":"\u003c/fx:root\u003e"}],"authorContributionMap":{"icelenaugust":16}},{"path":"src/main/resources/view/MainWindow.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"icelenaugust"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"},{"lineNumber":2,"author":{"gitId":"icelenaugust"},"content":""},{"lineNumber":3,"author":{"gitId":"icelenaugust"},"content":"\u003c?import javafx.scene.control.Button?\u003e"},{"lineNumber":4,"author":{"gitId":"icelenaugust"},"content":"\u003c?import javafx.scene.control.ScrollPane?\u003e"},{"lineNumber":5,"author":{"gitId":"icelenaugust"},"content":"\u003c?import javafx.scene.control.TextField?\u003e"},{"lineNumber":6,"author":{"gitId":"icelenaugust"},"content":"\u003c?import javafx.scene.layout.AnchorPane?\u003e"},{"lineNumber":7,"author":{"gitId":"icelenaugust"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e"},{"lineNumber":8,"author":{"gitId":"icelenaugust"},"content":""},{"lineNumber":9,"author":{"gitId":"icelenaugust"},"content":"\u003cAnchorPane maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefHeight\u003d\"600.0\" prefWidth\u003d\"400.0\" xmlns\u003d\"http://javafx.com/javafx/8.0.171\" xmlns:fx\u003d\"http://javafx.com/fxml/1\" fx:controller\u003d\"duke.MainWindow\"\u003e"},{"lineNumber":10,"author":{"gitId":"icelenaugust"},"content":"    \u003cchildren\u003e"},{"lineNumber":11,"author":{"gitId":"icelenaugust"},"content":"        \u003cTextField fx:id\u003d\"userInput\" layoutY\u003d\"558.0\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"324.0\" AnchorPane.bottomAnchor\u003d\"1.0\" /\u003e"},{"lineNumber":12,"author":{"gitId":"icelenaugust"},"content":"        \u003cButton fx:id\u003d\"sendButton\" layoutX\u003d\"324.0\" layoutY\u003d\"558.0\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"76.0\" text\u003d\"Send\" /\u003e"},{"lineNumber":13,"author":{"gitId":"icelenaugust"},"content":"        \u003cScrollPane fx:id\u003d\"scrollPane\" hbarPolicy\u003d\"NEVER\" hvalue\u003d\"1.0\" prefHeight\u003d\"557.0\" prefWidth\u003d\"400.0\" vvalue\u003d\"1.0\"\u003e"},{"lineNumber":14,"author":{"gitId":"icelenaugust"},"content":"            \u003ccontent\u003e"},{"lineNumber":15,"author":{"gitId":"icelenaugust"},"content":"                \u003cVBox fx:id\u003d\"dialogContainer\" prefHeight\u003d\"552.0\" prefWidth\u003d\"388.0\" /\u003e"},{"lineNumber":16,"author":{"gitId":"icelenaugust"},"content":"            \u003c/content\u003e"},{"lineNumber":17,"author":{"gitId":"icelenaugust"},"content":"        \u003c/ScrollPane\u003e"},{"lineNumber":18,"author":{"gitId":"icelenaugust"},"content":"    \u003c/children\u003e"},{"lineNumber":19,"author":{"gitId":"icelenaugust"},"content":"\u003c/AnchorPane\u003e"}],"authorContributionMap":{"icelenaugust":19}},{"path":"src/test/java/duke/DukeTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"icelenaugust"},"content":"package duke;"},{"lineNumber":2,"author":{"gitId":"icelenaugust"},"content":""},{"lineNumber":3,"author":{"gitId":"icelenaugust"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;"},{"lineNumber":4,"author":{"gitId":"icelenaugust"},"content":"import org.junit.jupiter.api.Test;"},{"lineNumber":5,"author":{"gitId":"icelenaugust"},"content":""},{"lineNumber":6,"author":{"gitId":"icelenaugust"},"content":"public class DukeTest {"},{"lineNumber":7,"author":{"gitId":"icelenaugust"},"content":"    @Test"},{"lineNumber":8,"author":{"gitId":"icelenaugust"},"content":"    public void dummyTest() {"},{"lineNumber":9,"author":{"gitId":"icelenaugust"},"content":"        assertEquals(2, 2);"},{"lineNumber":10,"author":{"gitId":"icelenaugust"},"content":"    }"},{"lineNumber":11,"author":{"gitId":"icelenaugust"},"content":"}"}],"authorContributionMap":{"icelenaugust":11}},{"path":"src/test/java/duke/tasks/DeadlineTaskTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"icelenaugust"},"content":"package duke.tasks;"},{"lineNumber":2,"author":{"gitId":"icelenaugust"},"content":""},{"lineNumber":3,"author":{"gitId":"icelenaugust"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;"},{"lineNumber":4,"author":{"gitId":"icelenaugust"},"content":""},{"lineNumber":5,"author":{"gitId":"icelenaugust"},"content":"import java.time.LocalDate;"},{"lineNumber":6,"author":{"gitId":"icelenaugust"},"content":""},{"lineNumber":7,"author":{"gitId":"icelenaugust"},"content":"import org.junit.jupiter.api.Test;"},{"lineNumber":8,"author":{"gitId":"icelenaugust"},"content":""},{"lineNumber":9,"author":{"gitId":"icelenaugust"},"content":""},{"lineNumber":10,"author":{"gitId":"icelenaugust"},"content":"public class DeadlineTaskTest {"},{"lineNumber":11,"author":{"gitId":"icelenaugust"},"content":""},{"lineNumber":12,"author":{"gitId":"icelenaugust"},"content":"    @Test"},{"lineNumber":13,"author":{"gitId":"icelenaugust"},"content":"    public void testEventGetType() {"},{"lineNumber":14,"author":{"gitId":"icelenaugust"},"content":"        DeadlineTask task \u003d new DeadlineTask(\"testing\", LocalDate.of(2021, 12, 12));"},{"lineNumber":15,"author":{"gitId":"icelenaugust"},"content":"        assertEquals(\"[D]\", task.getType());"},{"lineNumber":16,"author":{"gitId":"icelenaugust"},"content":"    }"},{"lineNumber":17,"author":{"gitId":"icelenaugust"},"content":"}"}],"authorContributionMap":{"icelenaugust":17}},{"path":"src/test/java/duke/tasks/EventTaskTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"icelenaugust"},"content":"package duke.tasks;"},{"lineNumber":2,"author":{"gitId":"icelenaugust"},"content":""},{"lineNumber":3,"author":{"gitId":"icelenaugust"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;"},{"lineNumber":4,"author":{"gitId":"icelenaugust"},"content":""},{"lineNumber":5,"author":{"gitId":"icelenaugust"},"content":"import java.time.LocalDate;"},{"lineNumber":6,"author":{"gitId":"icelenaugust"},"content":"import java.time.LocalDateTime;"},{"lineNumber":7,"author":{"gitId":"icelenaugust"},"content":"import java.time.LocalTime;"},{"lineNumber":8,"author":{"gitId":"icelenaugust"},"content":""},{"lineNumber":9,"author":{"gitId":"icelenaugust"},"content":"import org.junit.jupiter.api.Test;"},{"lineNumber":10,"author":{"gitId":"icelenaugust"},"content":""},{"lineNumber":11,"author":{"gitId":"icelenaugust"},"content":"public class EventTaskTest {"},{"lineNumber":12,"author":{"gitId":"icelenaugust"},"content":""},{"lineNumber":13,"author":{"gitId":"icelenaugust"},"content":"    @Test"},{"lineNumber":14,"author":{"gitId":"icelenaugust"},"content":"    public void testEventGetType() {"},{"lineNumber":15,"author":{"gitId":"icelenaugust"},"content":"        LocalDate date \u003d LocalDate.now();"},{"lineNumber":16,"author":{"gitId":"icelenaugust"},"content":"        LocalTime startTime \u003d LocalTime.now();"},{"lineNumber":17,"author":{"gitId":"icelenaugust"},"content":"        LocalTime endTime \u003d LocalTime.of(9, 9);"},{"lineNumber":18,"author":{"gitId":"icelenaugust"},"content":"        EventTask task \u003d new EventTask(\"testing\", LocalDateTime.of(date, startTime), LocalDateTime.of(date, endTime));"},{"lineNumber":19,"author":{"gitId":"icelenaugust"},"content":"        assertEquals(\"[E]\", task.getType());"},{"lineNumber":20,"author":{"gitId":"icelenaugust"},"content":"    }"},{"lineNumber":21,"author":{"gitId":"icelenaugust"},"content":"}"}],"authorContributionMap":{"icelenaugust":21}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"icelenaugust"},"content":"todo borrow book"},{"lineNumber":2,"author":{"gitId":"icelenaugust"},"content":"deadline return book /by 23 12 2021"},{"lineNumber":3,"author":{"gitId":"icelenaugust"},"content":"event project meeting /at 23 12 2021 03:00 pm - 05:00 pm"},{"lineNumber":4,"author":{"gitId":"icelenaugust"},"content":"done 4"},{"lineNumber":5,"author":{"gitId":"icelenaugust"},"content":"delete 2"},{"lineNumber":6,"author":{"gitId":"icelenaugust"},"content":"list"},{"lineNumber":7,"author":{"gitId":"icelenaugust"},"content":"bye"}],"authorContributionMap":{"icelenaugust":7}},{"path":"text-ui-test/runtest.sh","fileType":"sh","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"#!/usr/bin/env bash"},{"lineNumber":2,"author":{"gitId":"-"},"content":""},{"lineNumber":3,"author":{"gitId":"-"},"content":"# create bin directory if it doesn\u0027t exist"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if [ ! -d \"../bin\" ]"},{"lineNumber":5,"author":{"gitId":"-"},"content":"then"},{"lineNumber":6,"author":{"gitId":"-"},"content":"    mkdir ../bin"},{"lineNumber":7,"author":{"gitId":"-"},"content":"fi"},{"lineNumber":8,"author":{"gitId":"-"},"content":""},{"lineNumber":9,"author":{"gitId":"-"},"content":"# delete output from previous run"},{"lineNumber":10,"author":{"gitId":"-"},"content":"if [ -e \"./ACTUAL.TXT\" ]"},{"lineNumber":11,"author":{"gitId":"-"},"content":"then"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    rm ACTUAL.TXT"},{"lineNumber":13,"author":{"gitId":"-"},"content":"fi"},{"lineNumber":14,"author":{"gitId":"-"},"content":""},{"lineNumber":15,"author":{"gitId":"-"},"content":"# compile the code into the bin folder, terminates if error occurred"},{"lineNumber":16,"author":{"gitId":"icelenaugust"},"content":"if ! javac -cp ../src/main/java -Xlint:none -d ../bin ../src/main/java/duke/*.java"},{"lineNumber":17,"author":{"gitId":"-"},"content":"then"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    echo \"********** BUILD FAILURE **********\""},{"lineNumber":19,"author":{"gitId":"-"},"content":"    exit 1"},{"lineNumber":20,"author":{"gitId":"-"},"content":"fi"},{"lineNumber":21,"author":{"gitId":"-"},"content":""},{"lineNumber":22,"author":{"gitId":"icelenaugust"},"content":"# run the program, feed duke.commands from input.txt file and redirect the output to the ACTUAL.TXT"},{"lineNumber":23,"author":{"gitId":"-"},"content":"java -classpath ../bin Duke \u003c input.txt \u003e ACTUAL.TXT"},{"lineNumber":24,"author":{"gitId":"-"},"content":""},{"lineNumber":25,"author":{"gitId":"-"},"content":"# convert to UNIX format"},{"lineNumber":26,"author":{"gitId":"-"},"content":"cp EXPECTED.TXT EXPECTED-UNIX.TXT"},{"lineNumber":27,"author":{"gitId":"-"},"content":"dos2unix ACTUAL.TXT EXPECTED-UNIX.TXT"},{"lineNumber":28,"author":{"gitId":"-"},"content":""},{"lineNumber":29,"author":{"gitId":"-"},"content":"# compare the output to the expected output"},{"lineNumber":30,"author":{"gitId":"-"},"content":"diff ACTUAL.TXT EXPECTED-UNIX.TXT"},{"lineNumber":31,"author":{"gitId":"-"},"content":"if [ $? -eq 0 ]"},{"lineNumber":32,"author":{"gitId":"-"},"content":"then"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    echo \"Test result: PASSED\""},{"lineNumber":34,"author":{"gitId":"-"},"content":"    exit 0"},{"lineNumber":35,"author":{"gitId":"-"},"content":"else"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    echo \"Test result: FAILED\""},{"lineNumber":37,"author":{"gitId":"-"},"content":"    exit 1"},{"lineNumber":38,"author":{"gitId":"-"},"content":"fi"}],"authorContributionMap":{"icelenaugust":2,"-":36}}]
