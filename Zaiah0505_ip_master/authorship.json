[{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027checkstyle\u0027"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027"},{"lineNumber":6,"author":{"gitId":"Zaiah0505"},"content":"    id \u0027org.openjfx.javafxplugin\u0027 version \u00270.0.9\u0027"},{"lineNumber":7,"author":{"gitId":"Zaiah0505"},"content":"}"},{"lineNumber":8,"author":{"gitId":"Zaiah0505"},"content":""},{"lineNumber":9,"author":{"gitId":"Zaiah0505"},"content":"javafx {"},{"lineNumber":10,"author":{"gitId":"Zaiah0505"},"content":"    version \u003d \"15.0.1\""},{"lineNumber":11,"author":{"gitId":"Zaiah0505"},"content":"    modules \u003d [ \u0027javafx.controls\u0027 ]"},{"lineNumber":12,"author":{"gitId":"-"},"content":"}"},{"lineNumber":13,"author":{"gitId":"-"},"content":""},{"lineNumber":14,"author":{"gitId":"-"},"content":"repositories {"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    mavenCentral()"},{"lineNumber":16,"author":{"gitId":"-"},"content":"}"},{"lineNumber":17,"author":{"gitId":"-"},"content":""},{"lineNumber":18,"author":{"gitId":"-"},"content":"dependencies {"},{"lineNumber":19,"author":{"gitId":"Zaiah0505"},"content":"    String javaFxVersion \u003d \u002711\u0027"},{"lineNumber":20,"author":{"gitId":"Zaiah0505"},"content":""},{"lineNumber":21,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.5.0\u0027"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.5.0\u0027"},{"lineNumber":23,"author":{"gitId":"-"},"content":"}"},{"lineNumber":24,"author":{"gitId":"-"},"content":""},{"lineNumber":25,"author":{"gitId":"-"},"content":"test {"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    useJUnitPlatform()"},{"lineNumber":27,"author":{"gitId":"-"},"content":""},{"lineNumber":28,"author":{"gitId":"-"},"content":"    testLogging {"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\""},{"lineNumber":30,"author":{"gitId":"-"},"content":""},{"lineNumber":31,"author":{"gitId":"-"},"content":"        showExceptions true"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\""},{"lineNumber":33,"author":{"gitId":"-"},"content":"        showCauses true"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        showStackTraces true"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":37,"author":{"gitId":"-"},"content":"}"},{"lineNumber":38,"author":{"gitId":"-"},"content":""},{"lineNumber":39,"author":{"gitId":"-"},"content":"application {"},{"lineNumber":40,"author":{"gitId":"Zaiah0505"},"content":"    mainClassName \u003d \"Launcher\""},{"lineNumber":41,"author":{"gitId":"-"},"content":"}"},{"lineNumber":42,"author":{"gitId":"-"},"content":""},{"lineNumber":43,"author":{"gitId":"-"},"content":"shadowJar {"},{"lineNumber":44,"author":{"gitId":"Zaiah0505"},"content":"    archiveBaseName \u003d \"launcher\""},{"lineNumber":45,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null"},{"lineNumber":46,"author":{"gitId":"-"},"content":"}"},{"lineNumber":47,"author":{"gitId":"-"},"content":""},{"lineNumber":48,"author":{"gitId":"-"},"content":"checkstyle {"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    toolVersion \u003d \u00278.29\u0027"},{"lineNumber":50,"author":{"gitId":"-"},"content":"}"},{"lineNumber":51,"author":{"gitId":"-"},"content":""},{"lineNumber":52,"author":{"gitId":"-"},"content":"run{"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in"},{"lineNumber":54,"author":{"gitId":"-"},"content":"}"}],"authorContributionMap":{"Zaiah0505":10,"-":44}},{"path":"gradlew.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@rem"},{"lineNumber":2,"author":{"gitId":"-"},"content":"@rem Copyright 2015 the original author or authors."},{"lineNumber":3,"author":{"gitId":"-"},"content":"@rem"},{"lineNumber":4,"author":{"gitId":"-"},"content":"@rem Licensed under the Apache License, Version 2.0 (the \"License\");"},{"lineNumber":5,"author":{"gitId":"-"},"content":"@rem you may not use this file except in compliance with the License."},{"lineNumber":6,"author":{"gitId":"-"},"content":"@rem You may obtain a copy of the License at"},{"lineNumber":7,"author":{"gitId":"-"},"content":"@rem"},{"lineNumber":8,"author":{"gitId":"-"},"content":"@rem      https://www.apache.org/licenses/LICENSE-2.0"},{"lineNumber":9,"author":{"gitId":"-"},"content":"@rem"},{"lineNumber":10,"author":{"gitId":"-"},"content":"@rem Unless required by applicable law or agreed to in writing, software"},{"lineNumber":11,"author":{"gitId":"-"},"content":"@rem distributed under the License is distributed on an \"AS IS\" BASIS,"},{"lineNumber":12,"author":{"gitId":"-"},"content":"@rem WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied."},{"lineNumber":13,"author":{"gitId":"-"},"content":"@rem See the License for the specific language governing permissions and"},{"lineNumber":14,"author":{"gitId":"-"},"content":"@rem limitations under the License."},{"lineNumber":15,"author":{"gitId":"-"},"content":"@rem"},{"lineNumber":16,"author":{"gitId":"-"},"content":""},{"lineNumber":17,"author":{"gitId":"-"},"content":"@if \"%DEBUG%\" \u003d\u003d \"\" @echo off"},{"lineNumber":18,"author":{"gitId":"-"},"content":"@rem ##########################################################################"},{"lineNumber":19,"author":{"gitId":"-"},"content":"@rem"},{"lineNumber":20,"author":{"gitId":"-"},"content":"@rem  Gradle startup script for Windows"},{"lineNumber":21,"author":{"gitId":"-"},"content":"@rem"},{"lineNumber":22,"author":{"gitId":"-"},"content":"@rem ##########################################################################"},{"lineNumber":23,"author":{"gitId":"-"},"content":""},{"lineNumber":24,"author":{"gitId":"-"},"content":"@rem Set local scope for the variables with windows NT shell"},{"lineNumber":25,"author":{"gitId":"-"},"content":"if \"%OS%\"\u003d\u003d\"Windows_NT\" setlocal"},{"lineNumber":26,"author":{"gitId":"-"},"content":""},{"lineNumber":27,"author":{"gitId":"-"},"content":"set DIRNAME\u003d%~dp0"},{"lineNumber":28,"author":{"gitId":"-"},"content":"if \"%DIRNAME%\" \u003d\u003d \"\" set DIRNAME\u003d."},{"lineNumber":29,"author":{"gitId":"-"},"content":"set APP_BASE_NAME\u003d%~n0"},{"lineNumber":30,"author":{"gitId":"-"},"content":"set APP_HOME\u003d%DIRNAME%"},{"lineNumber":31,"author":{"gitId":"-"},"content":""},{"lineNumber":32,"author":{"gitId":"-"},"content":"@rem Resolve any \".\" and \"..\" in APP_HOME to make it shorter."},{"lineNumber":33,"author":{"gitId":"-"},"content":"for %%i in (\"%APP_HOME%\") do set APP_HOME\u003d%%~fi"},{"lineNumber":34,"author":{"gitId":"-"},"content":""},{"lineNumber":35,"author":{"gitId":"-"},"content":"@rem Add default JVM options here. You can also use JAVA_OPTS and GRADLE_OPTS to pass JVM options to this script."},{"lineNumber":36,"author":{"gitId":"-"},"content":"set DEFAULT_JVM_OPTS\u003d\"-Xmx64m\" \"-Xms64m\""},{"lineNumber":37,"author":{"gitId":"-"},"content":""},{"lineNumber":38,"author":{"gitId":"-"},"content":"@rem Find java.exe"},{"lineNumber":39,"author":{"gitId":"-"},"content":"if defined JAVA_HOME goto findJavaFromJavaHome"},{"lineNumber":40,"author":{"gitId":"-"},"content":""},{"lineNumber":41,"author":{"gitId":"-"},"content":"set JAVA_EXE\u003djava.exe"},{"lineNumber":42,"author":{"gitId":"-"},"content":"%JAVA_EXE% -version \u003eNUL 2\u003e\u00261"},{"lineNumber":43,"author":{"gitId":"Zaiah0505"},"content":"\u003c\u003c\u003c\u003c\u003c\u003c\u003c HEAD"},{"lineNumber":44,"author":{"gitId":"Zaiah0505"},"content":"if \"%ERRORLEVEL%\" \u003d\u003d \"0\" goto execute"},{"lineNumber":45,"author":{"gitId":"Zaiah0505"},"content":"\u003d\u003d\u003d\u003d\u003d\u003d\u003d"},{"lineNumber":46,"author":{"gitId":"-"},"content":"if \"%ERRORLEVEL%\" \u003d\u003d \"0\" goto init"},{"lineNumber":47,"author":{"gitId":"Zaiah0505"},"content":"\u003e\u003e\u003e\u003e\u003e\u003e\u003e add-gradle-support"},{"lineNumber":48,"author":{"gitId":"-"},"content":""},{"lineNumber":49,"author":{"gitId":"-"},"content":"echo."},{"lineNumber":50,"author":{"gitId":"-"},"content":"echo ERROR: JAVA_HOME is not set and no \u0027java\u0027 command could be found in your PATH."},{"lineNumber":51,"author":{"gitId":"-"},"content":"echo."},{"lineNumber":52,"author":{"gitId":"-"},"content":"echo Please set the JAVA_HOME variable in your environment to match the"},{"lineNumber":53,"author":{"gitId":"-"},"content":"echo location of your Java installation."},{"lineNumber":54,"author":{"gitId":"-"},"content":""},{"lineNumber":55,"author":{"gitId":"-"},"content":"goto fail"},{"lineNumber":56,"author":{"gitId":"-"},"content":""},{"lineNumber":57,"author":{"gitId":"-"},"content":":findJavaFromJavaHome"},{"lineNumber":58,"author":{"gitId":"-"},"content":"set JAVA_HOME\u003d%JAVA_HOME:\"\u003d%"},{"lineNumber":59,"author":{"gitId":"-"},"content":"set JAVA_EXE\u003d%JAVA_HOME%/bin/java.exe"},{"lineNumber":60,"author":{"gitId":"-"},"content":""},{"lineNumber":61,"author":{"gitId":"-"},"content":"if exist \"%JAVA_EXE%\" goto init"},{"lineNumber":62,"author":{"gitId":"-"},"content":""},{"lineNumber":63,"author":{"gitId":"-"},"content":"echo."},{"lineNumber":64,"author":{"gitId":"-"},"content":"echo ERROR: JAVA_HOME is set to an invalid directory: %JAVA_HOME%"},{"lineNumber":65,"author":{"gitId":"-"},"content":"echo."},{"lineNumber":66,"author":{"gitId":"-"},"content":"echo Please set the JAVA_HOME variable in your environment to match the"},{"lineNumber":67,"author":{"gitId":"-"},"content":"echo location of your Java installation."},{"lineNumber":68,"author":{"gitId":"-"},"content":""},{"lineNumber":69,"author":{"gitId":"-"},"content":"goto fail"},{"lineNumber":70,"author":{"gitId":"-"},"content":""},{"lineNumber":71,"author":{"gitId":"-"},"content":":init"},{"lineNumber":72,"author":{"gitId":"-"},"content":"@rem Get command-line arguments, handling Windows variants"},{"lineNumber":73,"author":{"gitId":"-"},"content":""},{"lineNumber":74,"author":{"gitId":"-"},"content":"if not \"%OS%\" \u003d\u003d \"Windows_NT\" goto win9xME_args"},{"lineNumber":75,"author":{"gitId":"-"},"content":""},{"lineNumber":76,"author":{"gitId":"-"},"content":":win9xME_args"},{"lineNumber":77,"author":{"gitId":"-"},"content":"@rem Slurp the command line arguments."},{"lineNumber":78,"author":{"gitId":"-"},"content":"set CMD_LINE_ARGS\u003d"},{"lineNumber":79,"author":{"gitId":"-"},"content":"set _SKIP\u003d2"},{"lineNumber":80,"author":{"gitId":"-"},"content":""},{"lineNumber":81,"author":{"gitId":"-"},"content":":win9xME_args_slurp"},{"lineNumber":82,"author":{"gitId":"-"},"content":"if \"x%~1\" \u003d\u003d \"x\" goto execute"},{"lineNumber":83,"author":{"gitId":"-"},"content":""},{"lineNumber":84,"author":{"gitId":"-"},"content":"set CMD_LINE_ARGS\u003d%*"},{"lineNumber":85,"author":{"gitId":"-"},"content":""},{"lineNumber":86,"author":{"gitId":"Zaiah0505"},"content":"\u003e\u003e\u003e\u003e\u003e\u003e\u003e add-gradle-support"},{"lineNumber":87,"author":{"gitId":"-"},"content":":execute"},{"lineNumber":88,"author":{"gitId":"-"},"content":"@rem Setup the command line"},{"lineNumber":89,"author":{"gitId":"-"},"content":""},{"lineNumber":90,"author":{"gitId":"-"},"content":"set CLASSPATH\u003d%APP_HOME%\\gradle\\wrapper\\gradle-wrapper.jar"},{"lineNumber":91,"author":{"gitId":"-"},"content":""},{"lineNumber":92,"author":{"gitId":"Zaiah0505"},"content":"\u003c\u003c\u003c\u003c\u003c\u003c\u003c HEAD"},{"lineNumber":93,"author":{"gitId":"Zaiah0505"},"content":""},{"lineNumber":94,"author":{"gitId":"Zaiah0505"},"content":"@rem Execute Gradle"},{"lineNumber":95,"author":{"gitId":"Zaiah0505"},"content":"\"%JAVA_EXE%\" %DEFAULT_JVM_OPTS% %JAVA_OPTS% %GRADLE_OPTS% \"-Dorg.gradle.appname\u003d%APP_BASE_NAME%\" -classpath \"%CLASSPATH%\" org.gradle.wrapper.GradleWrapperMain %*"},{"lineNumber":96,"author":{"gitId":"Zaiah0505"},"content":"\u003d\u003d\u003d\u003d\u003d\u003d\u003d"},{"lineNumber":97,"author":{"gitId":"-"},"content":"@rem Execute Gradle"},{"lineNumber":98,"author":{"gitId":"-"},"content":"\"%JAVA_EXE%\" %DEFAULT_JVM_OPTS% %JAVA_OPTS% %GRADLE_OPTS% \"-Dorg.gradle.appname\u003d%APP_BASE_NAME%\" -classpath \"%CLASSPATH%\" org.gradle.wrapper.GradleWrapperMain %CMD_LINE_ARGS%"},{"lineNumber":99,"author":{"gitId":"Zaiah0505"},"content":"\u003e\u003e\u003e\u003e\u003e\u003e\u003e add-gradle-support"},{"lineNumber":100,"author":{"gitId":"-"},"content":""},{"lineNumber":101,"author":{"gitId":"-"},"content":":end"},{"lineNumber":102,"author":{"gitId":"-"},"content":"@rem End local scope for the variables with windows NT shell"},{"lineNumber":103,"author":{"gitId":"-"},"content":"if \"%ERRORLEVEL%\"\u003d\u003d\"0\" goto mainEnd"},{"lineNumber":104,"author":{"gitId":"-"},"content":""},{"lineNumber":105,"author":{"gitId":"-"},"content":":fail"},{"lineNumber":106,"author":{"gitId":"-"},"content":"rem Set variable GRADLE_EXIT_CONSOLE if you need the _script_ return code instead of"},{"lineNumber":107,"author":{"gitId":"-"},"content":"rem the _cmd.exe /c_ return code!"},{"lineNumber":108,"author":{"gitId":"-"},"content":"if  not \"\" \u003d\u003d \"%GRADLE_EXIT_CONSOLE%\" exit 1"},{"lineNumber":109,"author":{"gitId":"-"},"content":"exit /b 1"},{"lineNumber":110,"author":{"gitId":"-"},"content":""},{"lineNumber":111,"author":{"gitId":"-"},"content":":mainEnd"},{"lineNumber":112,"author":{"gitId":"-"},"content":"if \"%OS%\"\u003d\u003d\"Windows_NT\" endlocal"},{"lineNumber":113,"author":{"gitId":"-"},"content":""},{"lineNumber":114,"author":{"gitId":"-"},"content":":omega"}],"authorContributionMap":{"Zaiah0505":11,"-":103}},{"path":"src/main/java/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Zaiah0505"},"content":"import java.text.DateFormat;"},{"lineNumber":2,"author":{"gitId":"Zaiah0505"},"content":"import java.time.LocalDate;"},{"lineNumber":3,"author":{"gitId":"Zaiah0505"},"content":"import java.time.LocalDateTime;"},{"lineNumber":4,"author":{"gitId":"Zaiah0505"},"content":""},{"lineNumber":5,"author":{"gitId":"Zaiah0505"},"content":"import static java.time.format.DateTimeFormatter.*;"},{"lineNumber":6,"author":{"gitId":"Zaiah0505"},"content":""},{"lineNumber":7,"author":{"gitId":"Zaiah0505"},"content":"import java.time.format.DateTimeFormatter;"},{"lineNumber":8,"author":{"gitId":"Zaiah0505"},"content":"import java.time.format.DateTimeParseException;"},{"lineNumber":9,"author":{"gitId":"Zaiah0505"},"content":"import java.util.HashMap;"},{"lineNumber":10,"author":{"gitId":"Zaiah0505"},"content":"import java.util.NoSuchElementException;"},{"lineNumber":11,"author":{"gitId":"Zaiah0505"},"content":""},{"lineNumber":12,"author":{"gitId":"Zaiah0505"},"content":"public class Deadline extends Task {"},{"lineNumber":13,"author":{"gitId":"Zaiah0505"},"content":"    private LocalDate endDate;"},{"lineNumber":14,"author":{"gitId":"Zaiah0505"},"content":"    public static final String COMMAND_STRING \u003d \"deadline\";"},{"lineNumber":15,"author":{"gitId":"Zaiah0505"},"content":""},{"lineNumber":16,"author":{"gitId":"Zaiah0505"},"content":"    public Deadline(String desc, LocalDate endDate) {"},{"lineNumber":17,"author":{"gitId":"Zaiah0505"},"content":"        super(desc);"},{"lineNumber":18,"author":{"gitId":"Zaiah0505"},"content":"        this.endDate \u003d endDate;"},{"lineNumber":19,"author":{"gitId":"Zaiah0505"},"content":"    }"},{"lineNumber":20,"author":{"gitId":"Zaiah0505"},"content":""},{"lineNumber":21,"author":{"gitId":"Zaiah0505"},"content":"    public Deadline(String desc, LocalDate endDate, boolean isDone) {"},{"lineNumber":22,"author":{"gitId":"Zaiah0505"},"content":"        super(desc, isDone);"},{"lineNumber":23,"author":{"gitId":"Zaiah0505"},"content":"        this.endDate \u003d endDate;"},{"lineNumber":24,"author":{"gitId":"Zaiah0505"},"content":"    }"},{"lineNumber":25,"author":{"gitId":"Zaiah0505"},"content":""},{"lineNumber":26,"author":{"gitId":"Zaiah0505"},"content":"    public static Deadline newInstance(HashMap\u003cString, String\u003e argMap)"},{"lineNumber":27,"author":{"gitId":"Zaiah0505"},"content":"            throws NoSuchElementException, DateTimeParseException {"},{"lineNumber":28,"author":{"gitId":"Zaiah0505"},"content":"        if (!argMap.containsKey(\"desc\")) {"},{"lineNumber":29,"author":{"gitId":"Zaiah0505"},"content":"            throw new NoSuchElementException(\"The description for todo cannot be empty.\");"},{"lineNumber":30,"author":{"gitId":"Zaiah0505"},"content":"        }"},{"lineNumber":31,"author":{"gitId":"Zaiah0505"},"content":""},{"lineNumber":32,"author":{"gitId":"Zaiah0505"},"content":"        String desc \u003d argMap.get(\"desc\");"},{"lineNumber":33,"author":{"gitId":"Zaiah0505"},"content":"        LocalDate eventTime \u003d null;"},{"lineNumber":34,"author":{"gitId":"Zaiah0505"},"content":"        boolean isDone \u003d argMap.containsKey(\"done\");"},{"lineNumber":35,"author":{"gitId":"Zaiah0505"},"content":""},{"lineNumber":36,"author":{"gitId":"Zaiah0505"},"content":"        if (argMap.containsKey(\"by\")) {"},{"lineNumber":37,"author":{"gitId":"Zaiah0505"},"content":"            eventTime \u003d LocalDate.parse(argMap.get(\"by\"), ISO_LOCAL_DATE);"},{"lineNumber":38,"author":{"gitId":"Zaiah0505"},"content":"        }"},{"lineNumber":39,"author":{"gitId":"Zaiah0505"},"content":""},{"lineNumber":40,"author":{"gitId":"Zaiah0505"},"content":"        return new Deadline(desc, eventTime, isDone);"},{"lineNumber":41,"author":{"gitId":"Zaiah0505"},"content":"    }"},{"lineNumber":42,"author":{"gitId":"Zaiah0505"},"content":""},{"lineNumber":43,"author":{"gitId":"Zaiah0505"},"content":"    @Override"},{"lineNumber":44,"author":{"gitId":"Zaiah0505"},"content":"    public String toString() {"},{"lineNumber":45,"author":{"gitId":"Zaiah0505"},"content":"        return \"[D]\" + super.toString() +"},{"lineNumber":46,"author":{"gitId":"Zaiah0505"},"content":"                (endDate !\u003d null"},{"lineNumber":47,"author":{"gitId":"Zaiah0505"},"content":"                        ? \"(by: \" + endDate.format(DateTimeFormatter.ofPattern(\"E, d MMM yy\")) + \")\""},{"lineNumber":48,"author":{"gitId":"Zaiah0505"},"content":"                        : \"\");"},{"lineNumber":49,"author":{"gitId":"Zaiah0505"},"content":"    }"},{"lineNumber":50,"author":{"gitId":"Zaiah0505"},"content":""},{"lineNumber":51,"author":{"gitId":"Zaiah0505"},"content":"    @Override"},{"lineNumber":52,"author":{"gitId":"Zaiah0505"},"content":"    protected HashMap\u003cString, String\u003e saveArgs() {"},{"lineNumber":53,"author":{"gitId":"Zaiah0505"},"content":"        HashMap\u003cString, String\u003e argMap \u003d new HashMap\u003c\u003e();"},{"lineNumber":54,"author":{"gitId":"Zaiah0505"},"content":"        if (endDate !\u003d null) {"},{"lineNumber":55,"author":{"gitId":"Zaiah0505"},"content":"            argMap.put(\"by\", endDate.toString());"},{"lineNumber":56,"author":{"gitId":"Zaiah0505"},"content":"        }"},{"lineNumber":57,"author":{"gitId":"Zaiah0505"},"content":"        return argMap;"},{"lineNumber":58,"author":{"gitId":"Zaiah0505"},"content":"    }"},{"lineNumber":59,"author":{"gitId":"Zaiah0505"},"content":""},{"lineNumber":60,"author":{"gitId":"Zaiah0505"},"content":"    @Override"},{"lineNumber":61,"author":{"gitId":"Zaiah0505"},"content":"    public String commandString() {"},{"lineNumber":62,"author":{"gitId":"Zaiah0505"},"content":"        return COMMAND_STRING;"},{"lineNumber":63,"author":{"gitId":"Zaiah0505"},"content":"    }"},{"lineNumber":64,"author":{"gitId":"Zaiah0505"},"content":"}"}],"authorContributionMap":{"Zaiah0505":64}},{"path":"src/main/java/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Zaiah0505"},"content":"import java.time.LocalDate;"},{"lineNumber":2,"author":{"gitId":"Zaiah0505"},"content":"import java.time.format.DateTimeFormatter;"},{"lineNumber":3,"author":{"gitId":"Zaiah0505"},"content":"import java.time.format.DateTimeParseException;"},{"lineNumber":4,"author":{"gitId":"Zaiah0505"},"content":"import java.util.HashMap;"},{"lineNumber":5,"author":{"gitId":"Zaiah0505"},"content":"import java.util.NoSuchElementException;"},{"lineNumber":6,"author":{"gitId":"Zaiah0505"},"content":""},{"lineNumber":7,"author":{"gitId":"Zaiah0505"},"content":"import static java.time.format.DateTimeFormatter.ISO_LOCAL_DATE;"},{"lineNumber":8,"author":{"gitId":"Zaiah0505"},"content":""},{"lineNumber":9,"author":{"gitId":"Zaiah0505"},"content":"public class Event extends Task {"},{"lineNumber":10,"author":{"gitId":"Zaiah0505"},"content":"    public static final String COMMAND_STRING \u003d \"event\";"},{"lineNumber":11,"author":{"gitId":"Zaiah0505"},"content":"    private final LocalDate eventTime;"},{"lineNumber":12,"author":{"gitId":"Zaiah0505"},"content":""},{"lineNumber":13,"author":{"gitId":"Zaiah0505"},"content":"    public Event(String desc, LocalDate eventTime) {"},{"lineNumber":14,"author":{"gitId":"Zaiah0505"},"content":"        super(desc);"},{"lineNumber":15,"author":{"gitId":"Zaiah0505"},"content":"        this.eventTime \u003d eventTime;"},{"lineNumber":16,"author":{"gitId":"Zaiah0505"},"content":"    }"},{"lineNumber":17,"author":{"gitId":"Zaiah0505"},"content":""},{"lineNumber":18,"author":{"gitId":"Zaiah0505"},"content":"    public Event(String desc, LocalDate eventTime, boolean isDone) {"},{"lineNumber":19,"author":{"gitId":"Zaiah0505"},"content":"        super(desc, isDone);"},{"lineNumber":20,"author":{"gitId":"Zaiah0505"},"content":"        this.eventTime \u003d eventTime;"},{"lineNumber":21,"author":{"gitId":"Zaiah0505"},"content":"    }"},{"lineNumber":22,"author":{"gitId":"Zaiah0505"},"content":""},{"lineNumber":23,"author":{"gitId":"Zaiah0505"},"content":"    public static Event newInstance(HashMap\u003cString, String\u003e argMap)"},{"lineNumber":24,"author":{"gitId":"Zaiah0505"},"content":"            throws NoSuchElementException, DateTimeParseException {"},{"lineNumber":25,"author":{"gitId":"Zaiah0505"},"content":"        if (!argMap.containsKey(\"desc\")) {"},{"lineNumber":26,"author":{"gitId":"Zaiah0505"},"content":"            throw new NoSuchElementException(\"The description for todo cannot be empty.\");"},{"lineNumber":27,"author":{"gitId":"Zaiah0505"},"content":"        }"},{"lineNumber":28,"author":{"gitId":"Zaiah0505"},"content":""},{"lineNumber":29,"author":{"gitId":"Zaiah0505"},"content":"        String desc \u003d argMap.get(\"desc\");"},{"lineNumber":30,"author":{"gitId":"Zaiah0505"},"content":"        LocalDate eventTime \u003d null;"},{"lineNumber":31,"author":{"gitId":"Zaiah0505"},"content":"        boolean isDone \u003d argMap.containsKey(\"done\");"},{"lineNumber":32,"author":{"gitId":"Zaiah0505"},"content":""},{"lineNumber":33,"author":{"gitId":"Zaiah0505"},"content":"        if (argMap.containsKey(\"at\")) {"},{"lineNumber":34,"author":{"gitId":"Zaiah0505"},"content":"            eventTime \u003d LocalDate.parse(argMap.get(\"at\"), ISO_LOCAL_DATE);"},{"lineNumber":35,"author":{"gitId":"Zaiah0505"},"content":"        }"},{"lineNumber":36,"author":{"gitId":"Zaiah0505"},"content":""},{"lineNumber":37,"author":{"gitId":"Zaiah0505"},"content":"        return new Event(desc, eventTime, isDone);"},{"lineNumber":38,"author":{"gitId":"Zaiah0505"},"content":"    }"},{"lineNumber":39,"author":{"gitId":"Zaiah0505"},"content":""},{"lineNumber":40,"author":{"gitId":"Zaiah0505"},"content":"    @Override"},{"lineNumber":41,"author":{"gitId":"Zaiah0505"},"content":"    public String toString() {"},{"lineNumber":42,"author":{"gitId":"Zaiah0505"},"content":"        return \"[E]\" + super.toString() +"},{"lineNumber":43,"author":{"gitId":"Zaiah0505"},"content":"                (eventTime !\u003d null"},{"lineNumber":44,"author":{"gitId":"Zaiah0505"},"content":"                        ? \"(at: \" + eventTime.format(DateTimeFormatter.ofPattern(\"E, d MMM yy\")) + \")\""},{"lineNumber":45,"author":{"gitId":"Zaiah0505"},"content":"                        : \"\");"},{"lineNumber":46,"author":{"gitId":"Zaiah0505"},"content":"    }"},{"lineNumber":47,"author":{"gitId":"Zaiah0505"},"content":""},{"lineNumber":48,"author":{"gitId":"Zaiah0505"},"content":"    @Override"},{"lineNumber":49,"author":{"gitId":"Zaiah0505"},"content":"    protected HashMap\u003cString, String\u003e saveArgs() {"},{"lineNumber":50,"author":{"gitId":"Zaiah0505"},"content":"        HashMap\u003cString, String\u003e argMap \u003d new HashMap\u003c\u003e();"},{"lineNumber":51,"author":{"gitId":"Zaiah0505"},"content":"        if (eventTime !\u003d null) {"},{"lineNumber":52,"author":{"gitId":"Zaiah0505"},"content":"            argMap.put(\"at\", eventTime.toString());"},{"lineNumber":53,"author":{"gitId":"Zaiah0505"},"content":"        }"},{"lineNumber":54,"author":{"gitId":"Zaiah0505"},"content":"        return argMap;"},{"lineNumber":55,"author":{"gitId":"Zaiah0505"},"content":"    }"},{"lineNumber":56,"author":{"gitId":"Zaiah0505"},"content":""},{"lineNumber":57,"author":{"gitId":"Zaiah0505"},"content":"    @Override"},{"lineNumber":58,"author":{"gitId":"Zaiah0505"},"content":"    public String commandString() {"},{"lineNumber":59,"author":{"gitId":"Zaiah0505"},"content":"        return COMMAND_STRING;"},{"lineNumber":60,"author":{"gitId":"Zaiah0505"},"content":"    }"},{"lineNumber":61,"author":{"gitId":"Zaiah0505"},"content":"}"}],"authorContributionMap":{"Zaiah0505":61}},{"path":"src/main/java/Launcher.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Zaiah0505"},"content":"import javafx.application.Application;"},{"lineNumber":2,"author":{"gitId":"Zaiah0505"},"content":""},{"lineNumber":3,"author":{"gitId":"Zaiah0505"},"content":"public class Launcher {"},{"lineNumber":4,"author":{"gitId":"Zaiah0505"},"content":"    public static void main(String[] args) {"},{"lineNumber":5,"author":{"gitId":"Zaiah0505"},"content":"        Application.launch(Sweh.class, args);"},{"lineNumber":6,"author":{"gitId":"Zaiah0505"},"content":"    }"},{"lineNumber":7,"author":{"gitId":"Zaiah0505"},"content":"}"}],"authorContributionMap":{"Zaiah0505":7}},{"path":"src/main/java/Sweh.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Zaiah0505"},"content":"import javafx.application.Application;"},{"lineNumber":2,"author":{"gitId":"Zaiah0505"},"content":"import javafx.scene.Scene;"},{"lineNumber":3,"author":{"gitId":"Zaiah0505"},"content":"import javafx.scene.control.Button;"},{"lineNumber":4,"author":{"gitId":"Zaiah0505"},"content":"import javafx.scene.control.Label;"},{"lineNumber":5,"author":{"gitId":"Zaiah0505"},"content":"import javafx.scene.control.ScrollPane;"},{"lineNumber":6,"author":{"gitId":"Zaiah0505"},"content":"import javafx.scene.control.TextField;"},{"lineNumber":7,"author":{"gitId":"Zaiah0505"},"content":"import javafx.scene.layout.AnchorPane;"},{"lineNumber":8,"author":{"gitId":"Zaiah0505"},"content":"import javafx.scene.layout.Region;"},{"lineNumber":9,"author":{"gitId":"Zaiah0505"},"content":"import javafx.scene.layout.VBox;"},{"lineNumber":10,"author":{"gitId":"Zaiah0505"},"content":"import javafx.stage.Stage;"},{"lineNumber":11,"author":{"gitId":"Zaiah0505"},"content":"import javafx.scene.image.Image;"},{"lineNumber":12,"author":{"gitId":"Zaiah0505"},"content":"import javafx.scene.image.ImageView;"},{"lineNumber":13,"author":{"gitId":"Zaiah0505"},"content":""},{"lineNumber":14,"author":{"gitId":"Zaiah0505"},"content":"import nodes.DialogBox;"},{"lineNumber":15,"author":{"gitId":"Zaiah0505"},"content":"import util.Formatter;"},{"lineNumber":16,"author":{"gitId":"Zaiah0505"},"content":"import util.Ui;"},{"lineNumber":17,"author":{"gitId":"Zaiah0505"},"content":""},{"lineNumber":18,"author":{"gitId":"Zaiah0505"},"content":"import java.time.format.DateTimeParseException;"},{"lineNumber":19,"author":{"gitId":"Zaiah0505"},"content":"import java.util.HashMap;"},{"lineNumber":20,"author":{"gitId":"Zaiah0505"},"content":"import java.util.NoSuchElementException;"},{"lineNumber":21,"author":{"gitId":"Zaiah0505"},"content":"import java.util.Scanner;"},{"lineNumber":22,"author":{"gitId":"Zaiah0505"},"content":""},{"lineNumber":23,"author":{"gitId":"Zaiah0505"},"content":"import static util.Parser.getArgMap;"},{"lineNumber":24,"author":{"gitId":"Zaiah0505"},"content":"import static util.Parser.getCommand;"},{"lineNumber":25,"author":{"gitId":"Zaiah0505"},"content":""},{"lineNumber":26,"author":{"gitId":"Zaiah0505"},"content":"public class Sweh extends Application {"},{"lineNumber":27,"author":{"gitId":"Zaiah0505"},"content":"    public static TaskList taskList \u003d new TaskList();"},{"lineNumber":28,"author":{"gitId":"Zaiah0505"},"content":"    private ScrollPane scrollPane;"},{"lineNumber":29,"author":{"gitId":"Zaiah0505"},"content":"    private VBox dialogContainer;"},{"lineNumber":30,"author":{"gitId":"Zaiah0505"},"content":"    private TextField userInput;"},{"lineNumber":31,"author":{"gitId":"Zaiah0505"},"content":"    private Button sendButton;"},{"lineNumber":32,"author":{"gitId":"Zaiah0505"},"content":"    private Scene scene;"},{"lineNumber":33,"author":{"gitId":"Zaiah0505"},"content":"    private Image user \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaUser.png\"));"},{"lineNumber":34,"author":{"gitId":"Zaiah0505"},"content":"    private Image duke \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaDuke.png\"));"},{"lineNumber":35,"author":{"gitId":"Zaiah0505"},"content":""},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public static void main(String[] args) {"},{"lineNumber":37,"author":{"gitId":"Zaiah0505"},"content":"        System.out.println(Ui.greeting());"},{"lineNumber":38,"author":{"gitId":"Zaiah0505"},"content":""},{"lineNumber":39,"author":{"gitId":"Zaiah0505"},"content":"        taskList.readFromDisk();"},{"lineNumber":40,"author":{"gitId":"Zaiah0505"},"content":""},{"lineNumber":41,"author":{"gitId":"Zaiah0505"},"content":"        Scanner sc \u003d new Scanner(System.in);"},{"lineNumber":42,"author":{"gitId":"Zaiah0505"},"content":"        while (true) {"},{"lineNumber":43,"author":{"gitId":"Zaiah0505"},"content":"            String cmd \u003d sc.nextLine();"},{"lineNumber":44,"author":{"gitId":"Zaiah0505"},"content":"            System.out.println(Formatter.formatOut(respond(cmd)));"},{"lineNumber":45,"author":{"gitId":"Zaiah0505"},"content":"            if (cmd.equals(\"bye\")) {"},{"lineNumber":46,"author":{"gitId":"Zaiah0505"},"content":"                break;"},{"lineNumber":47,"author":{"gitId":"Zaiah0505"},"content":"            }"},{"lineNumber":48,"author":{"gitId":"Zaiah0505"},"content":"        }"},{"lineNumber":49,"author":{"gitId":"Zaiah0505"},"content":"        sc.close();"},{"lineNumber":50,"author":{"gitId":"Zaiah0505"},"content":"    }"},{"lineNumber":51,"author":{"gitId":"Zaiah0505"},"content":""},{"lineNumber":52,"author":{"gitId":"Zaiah0505"},"content":"    public static String respond(String commandString) {"},{"lineNumber":53,"author":{"gitId":"Zaiah0505"},"content":"        String command \u003d getCommand(commandString);"},{"lineNumber":54,"author":{"gitId":"Zaiah0505"},"content":"        HashMap\u003cString, String\u003e argMap \u003d getArgMap(commandString);"},{"lineNumber":55,"author":{"gitId":"Zaiah0505"},"content":""},{"lineNumber":56,"author":{"gitId":"Zaiah0505"},"content":"        try {"},{"lineNumber":57,"author":{"gitId":"Zaiah0505"},"content":"            switch (command) {"},{"lineNumber":58,"author":{"gitId":"Zaiah0505"},"content":"                case \"list\":"},{"lineNumber":59,"author":{"gitId":"Zaiah0505"},"content":"                    return taskList.listTasks();"},{"lineNumber":60,"author":{"gitId":"Zaiah0505"},"content":"                case \"done\":"},{"lineNumber":61,"author":{"gitId":"Zaiah0505"},"content":"                    return taskList.markTaskDone(argMap);"},{"lineNumber":62,"author":{"gitId":"Zaiah0505"},"content":"                case \"delete\":"},{"lineNumber":63,"author":{"gitId":"Zaiah0505"},"content":"                    return taskList.deleteTask(argMap);"},{"lineNumber":64,"author":{"gitId":"Zaiah0505"},"content":"                case \"todo\":"},{"lineNumber":65,"author":{"gitId":"Zaiah0505"},"content":"                    return taskList.addTask(ToDo.newInstance(argMap));"},{"lineNumber":66,"author":{"gitId":"Zaiah0505"},"content":"                case \"deadline\":"},{"lineNumber":67,"author":{"gitId":"Zaiah0505"},"content":"                    return taskList.addTask(Deadline.newInstance(argMap));"},{"lineNumber":68,"author":{"gitId":"Zaiah0505"},"content":"                case \"event\":"},{"lineNumber":69,"author":{"gitId":"Zaiah0505"},"content":"                    return taskList.addTask(Event.newInstance(argMap));"},{"lineNumber":70,"author":{"gitId":"Zaiah0505"},"content":"                case \"find\":"},{"lineNumber":71,"author":{"gitId":"Zaiah0505"},"content":"                    return taskList.findTask(argMap);"},{"lineNumber":72,"author":{"gitId":"Zaiah0505"},"content":"                case \"bye\":"},{"lineNumber":73,"author":{"gitId":"Zaiah0505"},"content":"                    return \"Bye. See ya again soon!\";"},{"lineNumber":74,"author":{"gitId":"Zaiah0505"},"content":"                default:"},{"lineNumber":75,"author":{"gitId":"Zaiah0505"},"content":"                    return \"Sorry, I didn\u0027t understand that\";"},{"lineNumber":76,"author":{"gitId":"Zaiah0505"},"content":"            }"},{"lineNumber":77,"author":{"gitId":"Zaiah0505"},"content":"        } catch (NoSuchElementException | IndexOutOfBoundsException e) {"},{"lineNumber":78,"author":{"gitId":"Zaiah0505"},"content":"            return e.getMessage();"},{"lineNumber":79,"author":{"gitId":"Zaiah0505"},"content":"        } catch (DateTimeParseException e) {"},{"lineNumber":80,"author":{"gitId":"Zaiah0505"},"content":"            return \"Please input dates in the form YYYY-MM-DD\";"},{"lineNumber":81,"author":{"gitId":"Zaiah0505"},"content":"        }"},{"lineNumber":82,"author":{"gitId":"Zaiah0505"},"content":"    }"},{"lineNumber":83,"author":{"gitId":"Zaiah0505"},"content":""},{"lineNumber":84,"author":{"gitId":"Zaiah0505"},"content":"    public static String echo(String input) {"},{"lineNumber":85,"author":{"gitId":"Zaiah0505"},"content":"        return input;"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":87,"author":{"gitId":"Zaiah0505"},"content":""},{"lineNumber":88,"author":{"gitId":"Zaiah0505"},"content":"    @Override"},{"lineNumber":89,"author":{"gitId":"Zaiah0505"},"content":"    public void start(Stage stage) {"},{"lineNumber":90,"author":{"gitId":"Zaiah0505"},"content":"        //Step 1. Setting up required components"},{"lineNumber":91,"author":{"gitId":"Zaiah0505"},"content":""},{"lineNumber":92,"author":{"gitId":"Zaiah0505"},"content":"        //The container for the content of the chat to scroll."},{"lineNumber":93,"author":{"gitId":"Zaiah0505"},"content":"        scrollPane \u003d new ScrollPane();"},{"lineNumber":94,"author":{"gitId":"Zaiah0505"},"content":"        dialogContainer \u003d new VBox();"},{"lineNumber":95,"author":{"gitId":"Zaiah0505"},"content":"        scrollPane.setContent(dialogContainer);"},{"lineNumber":96,"author":{"gitId":"Zaiah0505"},"content":""},{"lineNumber":97,"author":{"gitId":"Zaiah0505"},"content":"        userInput \u003d new TextField();"},{"lineNumber":98,"author":{"gitId":"Zaiah0505"},"content":"        sendButton \u003d new Button(\"Send\");"},{"lineNumber":99,"author":{"gitId":"Zaiah0505"},"content":""},{"lineNumber":100,"author":{"gitId":"Zaiah0505"},"content":"        AnchorPane mainLayout \u003d new AnchorPane();"},{"lineNumber":101,"author":{"gitId":"Zaiah0505"},"content":"        mainLayout.getChildren().addAll(scrollPane, userInput, sendButton);"},{"lineNumber":102,"author":{"gitId":"Zaiah0505"},"content":""},{"lineNumber":103,"author":{"gitId":"Zaiah0505"},"content":"        scene \u003d new Scene(mainLayout);"},{"lineNumber":104,"author":{"gitId":"Zaiah0505"},"content":""},{"lineNumber":105,"author":{"gitId":"Zaiah0505"},"content":"        stage.setScene(scene);"},{"lineNumber":106,"author":{"gitId":"Zaiah0505"},"content":"        stage.show();"},{"lineNumber":107,"author":{"gitId":"Zaiah0505"},"content":""},{"lineNumber":108,"author":{"gitId":"Zaiah0505"},"content":"        //Step 2. Formatting the window to look as expected"},{"lineNumber":109,"author":{"gitId":"Zaiah0505"},"content":"        stage.setTitle(\"Duke\");"},{"lineNumber":110,"author":{"gitId":"Zaiah0505"},"content":"        stage.setResizable(false);"},{"lineNumber":111,"author":{"gitId":"Zaiah0505"},"content":"        stage.setMinHeight(600.0);"},{"lineNumber":112,"author":{"gitId":"Zaiah0505"},"content":"        stage.setMinWidth(400.0);"},{"lineNumber":113,"author":{"gitId":"Zaiah0505"},"content":""},{"lineNumber":114,"author":{"gitId":"Zaiah0505"},"content":"        mainLayout.setPrefSize(400.0, 600.0);"},{"lineNumber":115,"author":{"gitId":"Zaiah0505"},"content":""},{"lineNumber":116,"author":{"gitId":"Zaiah0505"},"content":"        scrollPane.setPrefSize(385, 535);"},{"lineNumber":117,"author":{"gitId":"Zaiah0505"},"content":"        scrollPane.setHbarPolicy(ScrollPane.ScrollBarPolicy.NEVER);"},{"lineNumber":118,"author":{"gitId":"Zaiah0505"},"content":"        scrollPane.setVbarPolicy(ScrollPane.ScrollBarPolicy.ALWAYS);"},{"lineNumber":119,"author":{"gitId":"Zaiah0505"},"content":""},{"lineNumber":120,"author":{"gitId":"Zaiah0505"},"content":"        scrollPane.setVvalue(1.0);"},{"lineNumber":121,"author":{"gitId":"Zaiah0505"},"content":"        scrollPane.setFitToWidth(true);"},{"lineNumber":122,"author":{"gitId":"Zaiah0505"},"content":""},{"lineNumber":123,"author":{"gitId":"Zaiah0505"},"content":"        // You will need to import `javafx.scene.layout.Region` for this."},{"lineNumber":124,"author":{"gitId":"Zaiah0505"},"content":"        dialogContainer.setPrefHeight(Region.USE_COMPUTED_SIZE);"},{"lineNumber":125,"author":{"gitId":"Zaiah0505"},"content":""},{"lineNumber":126,"author":{"gitId":"Zaiah0505"},"content":"        userInput.setPrefWidth(325.0);"},{"lineNumber":127,"author":{"gitId":"Zaiah0505"},"content":""},{"lineNumber":128,"author":{"gitId":"Zaiah0505"},"content":"        sendButton.setPrefWidth(55.0);"},{"lineNumber":129,"author":{"gitId":"Zaiah0505"},"content":""},{"lineNumber":130,"author":{"gitId":"Zaiah0505"},"content":"        AnchorPane.setTopAnchor(scrollPane, 1.0);"},{"lineNumber":131,"author":{"gitId":"Zaiah0505"},"content":""},{"lineNumber":132,"author":{"gitId":"Zaiah0505"},"content":"        AnchorPane.setBottomAnchor(sendButton, 1.0);"},{"lineNumber":133,"author":{"gitId":"Zaiah0505"},"content":"        AnchorPane.setRightAnchor(sendButton, 1.0);"},{"lineNumber":134,"author":{"gitId":"Zaiah0505"},"content":""},{"lineNumber":135,"author":{"gitId":"Zaiah0505"},"content":"        AnchorPane.setLeftAnchor(userInput , 1.0);"},{"lineNumber":136,"author":{"gitId":"Zaiah0505"},"content":"        AnchorPane.setBottomAnchor(userInput, 1.0);"},{"lineNumber":137,"author":{"gitId":"Zaiah0505"},"content":""},{"lineNumber":138,"author":{"gitId":"Zaiah0505"},"content":"        //Part 3. Add functionality to handle user input."},{"lineNumber":139,"author":{"gitId":"Zaiah0505"},"content":"        sendButton.setOnMouseClicked((event) -\u003e {"},{"lineNumber":140,"author":{"gitId":"Zaiah0505"},"content":"            handleUserInput();"},{"lineNumber":141,"author":{"gitId":"Zaiah0505"},"content":"        });"},{"lineNumber":142,"author":{"gitId":"Zaiah0505"},"content":""},{"lineNumber":143,"author":{"gitId":"Zaiah0505"},"content":"        userInput.setOnAction((event) -\u003e {"},{"lineNumber":144,"author":{"gitId":"Zaiah0505"},"content":"            handleUserInput();"},{"lineNumber":145,"author":{"gitId":"Zaiah0505"},"content":"        });"},{"lineNumber":146,"author":{"gitId":"Zaiah0505"},"content":""},{"lineNumber":147,"author":{"gitId":"Zaiah0505"},"content":"        //Scroll down to the end every time dialogContainer\u0027s height changes."},{"lineNumber":148,"author":{"gitId":"Zaiah0505"},"content":"        dialogContainer.heightProperty().addListener((observable) -\u003e scrollPane.setVvalue(1.0));"},{"lineNumber":149,"author":{"gitId":"Zaiah0505"},"content":""},{"lineNumber":150,"author":{"gitId":"Zaiah0505"},"content":"        // more code to be added here later"},{"lineNumber":151,"author":{"gitId":"Zaiah0505"},"content":"    }"},{"lineNumber":152,"author":{"gitId":"Zaiah0505"},"content":""},{"lineNumber":153,"author":{"gitId":"Zaiah0505"},"content":"    /**"},{"lineNumber":154,"author":{"gitId":"Zaiah0505"},"content":"     * Iteration 1:"},{"lineNumber":155,"author":{"gitId":"Zaiah0505"},"content":"     * Creates a label with the specified text and adds it to the dialog container."},{"lineNumber":156,"author":{"gitId":"Zaiah0505"},"content":"     * @param text String containing text to add"},{"lineNumber":157,"author":{"gitId":"Zaiah0505"},"content":"     * @return a label with the specified text that has word wrap enabled."},{"lineNumber":158,"author":{"gitId":"Zaiah0505"},"content":"     */"},{"lineNumber":159,"author":{"gitId":"Zaiah0505"},"content":"    private Label getDialogLabel(String text) {"},{"lineNumber":160,"author":{"gitId":"Zaiah0505"},"content":"        // You will need to import `javafx.scene.control.Label`."},{"lineNumber":161,"author":{"gitId":"Zaiah0505"},"content":"        Label textToAdd \u003d new Label(text);"},{"lineNumber":162,"author":{"gitId":"Zaiah0505"},"content":"        textToAdd.setWrapText(true);"},{"lineNumber":163,"author":{"gitId":"Zaiah0505"},"content":""},{"lineNumber":164,"author":{"gitId":"Zaiah0505"},"content":"        return textToAdd;"},{"lineNumber":165,"author":{"gitId":"Zaiah0505"},"content":"    }"},{"lineNumber":166,"author":{"gitId":"Zaiah0505"},"content":""},{"lineNumber":167,"author":{"gitId":"Zaiah0505"},"content":"    /**"},{"lineNumber":168,"author":{"gitId":"Zaiah0505"},"content":"     * Iteration 2:"},{"lineNumber":169,"author":{"gitId":"Zaiah0505"},"content":"     * Creates two dialog boxes, one echoing user input and the other containing Duke\u0027s reply and then appends them to"},{"lineNumber":170,"author":{"gitId":"Zaiah0505"},"content":"     * the dialog container. Clears the user input after processing."},{"lineNumber":171,"author":{"gitId":"Zaiah0505"},"content":"     */"},{"lineNumber":172,"author":{"gitId":"Zaiah0505"},"content":"    private void handleUserInput() {"},{"lineNumber":173,"author":{"gitId":"Zaiah0505"},"content":"        Label userText \u003d new Label(userInput.getText());"},{"lineNumber":174,"author":{"gitId":"Zaiah0505"},"content":"        Label dukeText \u003d new Label(getResponse(userInput.getText()));"},{"lineNumber":175,"author":{"gitId":"Zaiah0505"},"content":"        dialogContainer.getChildren().addAll("},{"lineNumber":176,"author":{"gitId":"Zaiah0505"},"content":"                DialogBox.getUserDialog(userText, new ImageView(user)),"},{"lineNumber":177,"author":{"gitId":"Zaiah0505"},"content":"                DialogBox.getDukeDialog(dukeText, new ImageView(duke))"},{"lineNumber":178,"author":{"gitId":"Zaiah0505"},"content":"        );"},{"lineNumber":179,"author":{"gitId":"Zaiah0505"},"content":"        userInput.clear();"},{"lineNumber":180,"author":{"gitId":"Zaiah0505"},"content":"    }"},{"lineNumber":181,"author":{"gitId":"Zaiah0505"},"content":""},{"lineNumber":182,"author":{"gitId":"Zaiah0505"},"content":"    /**"},{"lineNumber":183,"author":{"gitId":"Zaiah0505"},"content":"     * You should have your own function to generate a response to user input."},{"lineNumber":184,"author":{"gitId":"Zaiah0505"},"content":"     * Replace this stub with your completed method."},{"lineNumber":185,"author":{"gitId":"Zaiah0505"},"content":"     */"},{"lineNumber":186,"author":{"gitId":"Zaiah0505"},"content":"    private String getResponse(String input) {"},{"lineNumber":187,"author":{"gitId":"Zaiah0505"},"content":"        return respond(input);"},{"lineNumber":188,"author":{"gitId":"Zaiah0505"},"content":"    }"},{"lineNumber":189,"author":{"gitId":"-"},"content":"}"}],"authorContributionMap":{"Zaiah0505":186,"-":3}},{"path":"src/main/java/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Zaiah0505"},"content":"import java.util.HashMap;"},{"lineNumber":2,"author":{"gitId":"Zaiah0505"},"content":""},{"lineNumber":3,"author":{"gitId":"Zaiah0505"},"content":"public abstract class Task {"},{"lineNumber":4,"author":{"gitId":"Zaiah0505"},"content":"    protected static final char saveDelimiter \u003d \u0027|\u0027;"},{"lineNumber":5,"author":{"gitId":"Zaiah0505"},"content":"    private final String description;"},{"lineNumber":6,"author":{"gitId":"Zaiah0505"},"content":"    private boolean isDone;"},{"lineNumber":7,"author":{"gitId":"Zaiah0505"},"content":""},{"lineNumber":8,"author":{"gitId":"Zaiah0505"},"content":"    public Task(String desc) {"},{"lineNumber":9,"author":{"gitId":"Zaiah0505"},"content":"        this.description \u003d desc;"},{"lineNumber":10,"author":{"gitId":"Zaiah0505"},"content":"        this.isDone \u003d false;"},{"lineNumber":11,"author":{"gitId":"Zaiah0505"},"content":"    }"},{"lineNumber":12,"author":{"gitId":"Zaiah0505"},"content":""},{"lineNumber":13,"author":{"gitId":"Zaiah0505"},"content":"    public Task(String desc, boolean isDone) {"},{"lineNumber":14,"author":{"gitId":"Zaiah0505"},"content":"        this.description \u003d desc;"},{"lineNumber":15,"author":{"gitId":"Zaiah0505"},"content":"        this.isDone \u003d isDone;"},{"lineNumber":16,"author":{"gitId":"Zaiah0505"},"content":"    }"},{"lineNumber":17,"author":{"gitId":"Zaiah0505"},"content":""},{"lineNumber":18,"author":{"gitId":"Zaiah0505"},"content":"    public void markDone() {"},{"lineNumber":19,"author":{"gitId":"Zaiah0505"},"content":"        this.isDone \u003d true;"},{"lineNumber":20,"author":{"gitId":"Zaiah0505"},"content":"    }"},{"lineNumber":21,"author":{"gitId":"Zaiah0505"},"content":""},{"lineNumber":22,"author":{"gitId":"Zaiah0505"},"content":"    public String getStatusIcon() {"},{"lineNumber":23,"author":{"gitId":"Zaiah0505"},"content":"        return (isDone ? \"\\u2713\" : \" \"); //return blank or tick symbol"},{"lineNumber":24,"author":{"gitId":"Zaiah0505"},"content":"    }"},{"lineNumber":25,"author":{"gitId":"Zaiah0505"},"content":""},{"lineNumber":26,"author":{"gitId":"Zaiah0505"},"content":"    public String toString() {"},{"lineNumber":27,"author":{"gitId":"Zaiah0505"},"content":"        return \"[\" + getStatusIcon() + \"] \" + description;"},{"lineNumber":28,"author":{"gitId":"Zaiah0505"},"content":"    }"},{"lineNumber":29,"author":{"gitId":"Zaiah0505"},"content":""},{"lineNumber":30,"author":{"gitId":"Zaiah0505"},"content":"    public String toSaveFormat() {"},{"lineNumber":31,"author":{"gitId":"Zaiah0505"},"content":"        StringBuilder savedString \u003d new StringBuilder();"},{"lineNumber":32,"author":{"gitId":"Zaiah0505"},"content":"        savedString.append(commandString());"},{"lineNumber":33,"author":{"gitId":"Zaiah0505"},"content":"        savedString.append(\" \");"},{"lineNumber":34,"author":{"gitId":"Zaiah0505"},"content":"        savedString.append(description);"},{"lineNumber":35,"author":{"gitId":"Zaiah0505"},"content":"        savedString.append((isDone ? \"/done \" : \"\"));"},{"lineNumber":36,"author":{"gitId":"Zaiah0505"},"content":""},{"lineNumber":37,"author":{"gitId":"Zaiah0505"},"content":"        saveArgs().forEach((k, v) -\u003e savedString.append(\"/\").append(k).append(\" \").append(v));"},{"lineNumber":38,"author":{"gitId":"Zaiah0505"},"content":""},{"lineNumber":39,"author":{"gitId":"Zaiah0505"},"content":"        return savedString.toString();"},{"lineNumber":40,"author":{"gitId":"Zaiah0505"},"content":"    }"},{"lineNumber":41,"author":{"gitId":"Zaiah0505"},"content":""},{"lineNumber":42,"author":{"gitId":"Zaiah0505"},"content":"    protected abstract HashMap\u003cString, String\u003e saveArgs();"},{"lineNumber":43,"author":{"gitId":"Zaiah0505"},"content":""},{"lineNumber":44,"author":{"gitId":"Zaiah0505"},"content":"    public abstract String commandString();"},{"lineNumber":45,"author":{"gitId":"Zaiah0505"},"content":"}"}],"authorContributionMap":{"Zaiah0505":45}},{"path":"src/main/java/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Zaiah0505"},"content":"import util.Formatter;"},{"lineNumber":2,"author":{"gitId":"Zaiah0505"},"content":"import util.Storage;"},{"lineNumber":3,"author":{"gitId":"Zaiah0505"},"content":""},{"lineNumber":4,"author":{"gitId":"Zaiah0505"},"content":"import java.io.File;"},{"lineNumber":5,"author":{"gitId":"Zaiah0505"},"content":"import java.io.IOException;"},{"lineNumber":6,"author":{"gitId":"Zaiah0505"},"content":"import java.util.ArrayList;"},{"lineNumber":7,"author":{"gitId":"Zaiah0505"},"content":"import java.util.HashMap;"},{"lineNumber":8,"author":{"gitId":"Zaiah0505"},"content":"import java.util.NoSuchElementException;"},{"lineNumber":9,"author":{"gitId":"Zaiah0505"},"content":"import java.util.Scanner;"},{"lineNumber":10,"author":{"gitId":"Zaiah0505"},"content":"import java.util.stream.Collectors;"},{"lineNumber":11,"author":{"gitId":"Zaiah0505"},"content":""},{"lineNumber":12,"author":{"gitId":"Zaiah0505"},"content":"import static util.Parser.getArgMap;"},{"lineNumber":13,"author":{"gitId":"Zaiah0505"},"content":"import static util.Parser.getCommand;"},{"lineNumber":14,"author":{"gitId":"Zaiah0505"},"content":""},{"lineNumber":15,"author":{"gitId":"Zaiah0505"},"content":"public class TaskList {"},{"lineNumber":16,"author":{"gitId":"Zaiah0505"},"content":"    private final ArrayList\u003cTask\u003e taskList;"},{"lineNumber":17,"author":{"gitId":"Zaiah0505"},"content":""},{"lineNumber":18,"author":{"gitId":"Zaiah0505"},"content":"    public TaskList() {"},{"lineNumber":19,"author":{"gitId":"Zaiah0505"},"content":"        this.taskList \u003d new ArrayList\u003c\u003e();"},{"lineNumber":20,"author":{"gitId":"Zaiah0505"},"content":"    }"},{"lineNumber":21,"author":{"gitId":"Zaiah0505"},"content":""},{"lineNumber":22,"author":{"gitId":"Zaiah0505"},"content":"    private String taskCountMsg() {"},{"lineNumber":23,"author":{"gitId":"Zaiah0505"},"content":"        return \"\\nNow you have \" + taskList.size() + \" task(s) in your list\";"},{"lineNumber":24,"author":{"gitId":"Zaiah0505"},"content":"    }"},{"lineNumber":25,"author":{"gitId":"Zaiah0505"},"content":""},{"lineNumber":26,"author":{"gitId":"Zaiah0505"},"content":"    public ArrayList\u003cTask\u003e getTaskList() {"},{"lineNumber":27,"author":{"gitId":"Zaiah0505"},"content":"        return this.taskList;"},{"lineNumber":28,"author":{"gitId":"Zaiah0505"},"content":"    }"},{"lineNumber":29,"author":{"gitId":"Zaiah0505"},"content":""},{"lineNumber":30,"author":{"gitId":"Zaiah0505"},"content":"    public String addTask(Task task) {"},{"lineNumber":31,"author":{"gitId":"Zaiah0505"},"content":"        taskList.add(task);"},{"lineNumber":32,"author":{"gitId":"Zaiah0505"},"content":""},{"lineNumber":33,"author":{"gitId":"Zaiah0505"},"content":"        saveToDisk();"},{"lineNumber":34,"author":{"gitId":"Zaiah0505"},"content":""},{"lineNumber":35,"author":{"gitId":"Zaiah0505"},"content":"        return \"Gotcha. I\u0027ve added the task: \\n    \""},{"lineNumber":36,"author":{"gitId":"Zaiah0505"},"content":"                + task"},{"lineNumber":37,"author":{"gitId":"Zaiah0505"},"content":"                + taskCountMsg();"},{"lineNumber":38,"author":{"gitId":"Zaiah0505"},"content":"    }"},{"lineNumber":39,"author":{"gitId":"Zaiah0505"},"content":""},{"lineNumber":40,"author":{"gitId":"Zaiah0505"},"content":"    public String markTaskDone(int position) throws NoSuchElementException, IndexOutOfBoundsException {"},{"lineNumber":41,"author":{"gitId":"Zaiah0505"},"content":"        try {"},{"lineNumber":42,"author":{"gitId":"Zaiah0505"},"content":"            taskList.get(position).markDone();"},{"lineNumber":43,"author":{"gitId":"Zaiah0505"},"content":"        } catch (NoSuchElementException e) {"},{"lineNumber":44,"author":{"gitId":"Zaiah0505"},"content":"            throw new NoSuchElementException(\"Please include the index of the task.\");"},{"lineNumber":45,"author":{"gitId":"Zaiah0505"},"content":"        } catch (IndexOutOfBoundsException e) {"},{"lineNumber":46,"author":{"gitId":"Zaiah0505"},"content":"            throw new IndexOutOfBoundsException(\"Please enter a number within the list.\");"},{"lineNumber":47,"author":{"gitId":"Zaiah0505"},"content":"        }"},{"lineNumber":48,"author":{"gitId":"Zaiah0505"},"content":"        return \"Nice, another job well done!\\n\""},{"lineNumber":49,"author":{"gitId":"Zaiah0505"},"content":"                + taskList.get(position).toString();"},{"lineNumber":50,"author":{"gitId":"Zaiah0505"},"content":"    }"},{"lineNumber":51,"author":{"gitId":"Zaiah0505"},"content":""},{"lineNumber":52,"author":{"gitId":"Zaiah0505"},"content":"    public String markTaskDone(HashMap\u003cString, String\u003e argMap) throws NoSuchElementException,"},{"lineNumber":53,"author":{"gitId":"Zaiah0505"},"content":"            IndexOutOfBoundsException {"},{"lineNumber":54,"author":{"gitId":"Zaiah0505"},"content":"        int position;"},{"lineNumber":55,"author":{"gitId":"Zaiah0505"},"content":"        try {"},{"lineNumber":56,"author":{"gitId":"Zaiah0505"},"content":"            position \u003d Integer.parseInt(argMap.get(\"desc\")) - 1;"},{"lineNumber":57,"author":{"gitId":"Zaiah0505"},"content":"            taskList.get(position).markDone();"},{"lineNumber":58,"author":{"gitId":"Zaiah0505"},"content":"        } catch (NoSuchElementException e) {"},{"lineNumber":59,"author":{"gitId":"Zaiah0505"},"content":"            throw new NoSuchElementException(\"Please include the index of the task.\");"},{"lineNumber":60,"author":{"gitId":"Zaiah0505"},"content":"        } catch (IndexOutOfBoundsException e) {"},{"lineNumber":61,"author":{"gitId":"Zaiah0505"},"content":"            throw new IndexOutOfBoundsException(\"Please enter a number within the list.\");"},{"lineNumber":62,"author":{"gitId":"Zaiah0505"},"content":"        }"},{"lineNumber":63,"author":{"gitId":"Zaiah0505"},"content":""},{"lineNumber":64,"author":{"gitId":"Zaiah0505"},"content":"        saveToDisk();"},{"lineNumber":65,"author":{"gitId":"Zaiah0505"},"content":""},{"lineNumber":66,"author":{"gitId":"Zaiah0505"},"content":"        return \"Nice, another job well done!\\n\""},{"lineNumber":67,"author":{"gitId":"Zaiah0505"},"content":"                + taskList.get(position).toString();"},{"lineNumber":68,"author":{"gitId":"Zaiah0505"},"content":"    }"},{"lineNumber":69,"author":{"gitId":"Zaiah0505"},"content":""},{"lineNumber":70,"author":{"gitId":"Zaiah0505"},"content":"    public String deleteTask(HashMap\u003cString, String\u003e argMap) throws NoSuchElementException,"},{"lineNumber":71,"author":{"gitId":"Zaiah0505"},"content":"            IndexOutOfBoundsException {"},{"lineNumber":72,"author":{"gitId":"Zaiah0505"},"content":"        int position;"},{"lineNumber":73,"author":{"gitId":"Zaiah0505"},"content":"        Task taskToRemove;"},{"lineNumber":74,"author":{"gitId":"Zaiah0505"},"content":"        try {"},{"lineNumber":75,"author":{"gitId":"Zaiah0505"},"content":"            position \u003d Integer.parseInt(argMap.get(\"desc\")) - 1;"},{"lineNumber":76,"author":{"gitId":"Zaiah0505"},"content":"            taskToRemove \u003d taskList.get(position);"},{"lineNumber":77,"author":{"gitId":"Zaiah0505"},"content":"            taskList.remove(position);"},{"lineNumber":78,"author":{"gitId":"Zaiah0505"},"content":"        } catch (NoSuchElementException | NumberFormatException e) {"},{"lineNumber":79,"author":{"gitId":"Zaiah0505"},"content":"            throw new NoSuchElementException(\"Please include the index of the task.\");"},{"lineNumber":80,"author":{"gitId":"Zaiah0505"},"content":"        } catch (IndexOutOfBoundsException e) {"},{"lineNumber":81,"author":{"gitId":"Zaiah0505"},"content":"            throw new IndexOutOfBoundsException(\"Please enter a number within the list.\");"},{"lineNumber":82,"author":{"gitId":"Zaiah0505"},"content":"        }"},{"lineNumber":83,"author":{"gitId":"Zaiah0505"},"content":""},{"lineNumber":84,"author":{"gitId":"Zaiah0505"},"content":"        saveToDisk();"},{"lineNumber":85,"author":{"gitId":"Zaiah0505"},"content":""},{"lineNumber":86,"author":{"gitId":"Zaiah0505"},"content":"        return \"I\u0027ve removed the task:\\n\""},{"lineNumber":87,"author":{"gitId":"Zaiah0505"},"content":"                + taskToRemove.toString()"},{"lineNumber":88,"author":{"gitId":"Zaiah0505"},"content":"                + taskCountMsg();"},{"lineNumber":89,"author":{"gitId":"Zaiah0505"},"content":"    }"},{"lineNumber":90,"author":{"gitId":"Zaiah0505"},"content":""},{"lineNumber":91,"author":{"gitId":"Zaiah0505"},"content":"    public String listTasks() {"},{"lineNumber":92,"author":{"gitId":"Zaiah0505"},"content":"        return \"Here is your list of tasks: \\n\" + Formatter.formatList(taskList"},{"lineNumber":93,"author":{"gitId":"Zaiah0505"},"content":"                .stream()"},{"lineNumber":94,"author":{"gitId":"Zaiah0505"},"content":"                .map(Task::toString)"},{"lineNumber":95,"author":{"gitId":"Zaiah0505"},"content":"                .collect(Collectors.toList())"},{"lineNumber":96,"author":{"gitId":"Zaiah0505"},"content":"        );"},{"lineNumber":97,"author":{"gitId":"Zaiah0505"},"content":"    }"},{"lineNumber":98,"author":{"gitId":"Zaiah0505"},"content":""},{"lineNumber":99,"author":{"gitId":"Zaiah0505"},"content":"    public String findTask(HashMap\u003cString, String\u003e argMap) throws NoSuchElementException {"},{"lineNumber":100,"author":{"gitId":"Zaiah0505"},"content":"        if (!argMap.containsKey(\"desc\")) {"},{"lineNumber":101,"author":{"gitId":"Zaiah0505"},"content":"            throw new NoSuchElementException(\"Search keyword cannot be empty.\");"},{"lineNumber":102,"author":{"gitId":"Zaiah0505"},"content":"        }"},{"lineNumber":103,"author":{"gitId":"Zaiah0505"},"content":""},{"lineNumber":104,"author":{"gitId":"Zaiah0505"},"content":"        return \"Tasks that match \\\"\" + argMap.get(\"desc\") + \"\\\": \\n\" + Formatter.formatList(taskList"},{"lineNumber":105,"author":{"gitId":"Zaiah0505"},"content":"                .stream()"},{"lineNumber":106,"author":{"gitId":"Zaiah0505"},"content":"                .map(Task::toString)"},{"lineNumber":107,"author":{"gitId":"Zaiah0505"},"content":"                .filter(t -\u003e t.contains(argMap.get(\"desc\")))"},{"lineNumber":108,"author":{"gitId":"Zaiah0505"},"content":"                .collect(Collectors.toList())"},{"lineNumber":109,"author":{"gitId":"Zaiah0505"},"content":"        );"},{"lineNumber":110,"author":{"gitId":"Zaiah0505"},"content":"    }"},{"lineNumber":111,"author":{"gitId":"Zaiah0505"},"content":""},{"lineNumber":112,"author":{"gitId":"Zaiah0505"},"content":"    public boolean saveToDisk() {"},{"lineNumber":113,"author":{"gitId":"Zaiah0505"},"content":"        StringBuilder saveLines \u003d new StringBuilder();"},{"lineNumber":114,"author":{"gitId":"Zaiah0505"},"content":"        for (Task t : taskList) {"},{"lineNumber":115,"author":{"gitId":"Zaiah0505"},"content":"            saveLines.append(t.toSaveFormat()).append(\u0027\\n\u0027);"},{"lineNumber":116,"author":{"gitId":"Zaiah0505"},"content":"        }"},{"lineNumber":117,"author":{"gitId":"Zaiah0505"},"content":""},{"lineNumber":118,"author":{"gitId":"Zaiah0505"},"content":"        try {"},{"lineNumber":119,"author":{"gitId":"Zaiah0505"},"content":"            Storage.writeSave(saveLines.toString());"},{"lineNumber":120,"author":{"gitId":"Zaiah0505"},"content":"        } catch (IOException e) {"},{"lineNumber":121,"author":{"gitId":"Zaiah0505"},"content":"            return false;"},{"lineNumber":122,"author":{"gitId":"Zaiah0505"},"content":"        }"},{"lineNumber":123,"author":{"gitId":"Zaiah0505"},"content":""},{"lineNumber":124,"author":{"gitId":"Zaiah0505"},"content":"        return true;"},{"lineNumber":125,"author":{"gitId":"Zaiah0505"},"content":"    }"},{"lineNumber":126,"author":{"gitId":"Zaiah0505"},"content":""},{"lineNumber":127,"author":{"gitId":"Zaiah0505"},"content":"    public boolean readFromDisk() {"},{"lineNumber":128,"author":{"gitId":"Zaiah0505"},"content":"        File file;"},{"lineNumber":129,"author":{"gitId":"Zaiah0505"},"content":"        Scanner sc;"},{"lineNumber":130,"author":{"gitId":"Zaiah0505"},"content":"        try {"},{"lineNumber":131,"author":{"gitId":"Zaiah0505"},"content":"            file \u003d Storage.getFile();"},{"lineNumber":132,"author":{"gitId":"Zaiah0505"},"content":"            sc \u003d new Scanner(file);"},{"lineNumber":133,"author":{"gitId":"Zaiah0505"},"content":"        } catch (IOException e) {"},{"lineNumber":134,"author":{"gitId":"Zaiah0505"},"content":"            return false;"},{"lineNumber":135,"author":{"gitId":"Zaiah0505"},"content":"        }"},{"lineNumber":136,"author":{"gitId":"Zaiah0505"},"content":""},{"lineNumber":137,"author":{"gitId":"Zaiah0505"},"content":"        while (sc.hasNextLine()) {"},{"lineNumber":138,"author":{"gitId":"Zaiah0505"},"content":"            String saveLine \u003d sc.nextLine();"},{"lineNumber":139,"author":{"gitId":"Zaiah0505"},"content":"            String command \u003d getCommand(saveLine);"},{"lineNumber":140,"author":{"gitId":"Zaiah0505"},"content":"            HashMap\u003cString, String\u003e argMap \u003d getArgMap(saveLine);"},{"lineNumber":141,"author":{"gitId":"Zaiah0505"},"content":"            Task newTask;"},{"lineNumber":142,"author":{"gitId":"Zaiah0505"},"content":""},{"lineNumber":143,"author":{"gitId":"Zaiah0505"},"content":"            switch (command) {"},{"lineNumber":144,"author":{"gitId":"Zaiah0505"},"content":"                case ToDo.COMMAND_STRING:"},{"lineNumber":145,"author":{"gitId":"Zaiah0505"},"content":"                    newTask \u003d ToDo.newInstance(argMap);"},{"lineNumber":146,"author":{"gitId":"Zaiah0505"},"content":"                    break;"},{"lineNumber":147,"author":{"gitId":"Zaiah0505"},"content":"                case Deadline.COMMAND_STRING:"},{"lineNumber":148,"author":{"gitId":"Zaiah0505"},"content":"                    newTask \u003d Deadline.newInstance(argMap);"},{"lineNumber":149,"author":{"gitId":"Zaiah0505"},"content":"                    break;"},{"lineNumber":150,"author":{"gitId":"Zaiah0505"},"content":"                default:"},{"lineNumber":151,"author":{"gitId":"Zaiah0505"},"content":"                    newTask \u003d Event.newInstance(argMap);"},{"lineNumber":152,"author":{"gitId":"Zaiah0505"},"content":"                    break;"},{"lineNumber":153,"author":{"gitId":"Zaiah0505"},"content":"            }"},{"lineNumber":154,"author":{"gitId":"Zaiah0505"},"content":""},{"lineNumber":155,"author":{"gitId":"Zaiah0505"},"content":"            taskList.add(newTask);"},{"lineNumber":156,"author":{"gitId":"Zaiah0505"},"content":"        }"},{"lineNumber":157,"author":{"gitId":"Zaiah0505"},"content":""},{"lineNumber":158,"author":{"gitId":"Zaiah0505"},"content":"        return true;"},{"lineNumber":159,"author":{"gitId":"Zaiah0505"},"content":"    }"},{"lineNumber":160,"author":{"gitId":"Zaiah0505"},"content":"}"}],"authorContributionMap":{"Zaiah0505":160}},{"path":"src/main/java/ToDo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Zaiah0505"},"content":"import java.util.HashMap;"},{"lineNumber":2,"author":{"gitId":"Zaiah0505"},"content":"import java.util.NoSuchElementException;"},{"lineNumber":3,"author":{"gitId":"Zaiah0505"},"content":""},{"lineNumber":4,"author":{"gitId":"Zaiah0505"},"content":"public class ToDo extends Task {"},{"lineNumber":5,"author":{"gitId":"Zaiah0505"},"content":"    public static final String COMMAND_STRING \u003d \"todo\";"},{"lineNumber":6,"author":{"gitId":"Zaiah0505"},"content":""},{"lineNumber":7,"author":{"gitId":"Zaiah0505"},"content":"    public ToDo(String description) {"},{"lineNumber":8,"author":{"gitId":"Zaiah0505"},"content":"        super(description);"},{"lineNumber":9,"author":{"gitId":"Zaiah0505"},"content":"    }"},{"lineNumber":10,"author":{"gitId":"Zaiah0505"},"content":""},{"lineNumber":11,"author":{"gitId":"Zaiah0505"},"content":"    public ToDo(String description, boolean isDone) {"},{"lineNumber":12,"author":{"gitId":"Zaiah0505"},"content":"        super(description, isDone);"},{"lineNumber":13,"author":{"gitId":"Zaiah0505"},"content":"    }"},{"lineNumber":14,"author":{"gitId":"Zaiah0505"},"content":""},{"lineNumber":15,"author":{"gitId":"Zaiah0505"},"content":"    public static ToDo newInstance(HashMap\u003cString, String\u003e argMap) throws NoSuchElementException {"},{"lineNumber":16,"author":{"gitId":"Zaiah0505"},"content":"        if (!argMap.containsKey(\"desc\")) {"},{"lineNumber":17,"author":{"gitId":"Zaiah0505"},"content":"            throw new NoSuchElementException(\"The description for todo cannot be empty.\");"},{"lineNumber":18,"author":{"gitId":"Zaiah0505"},"content":"        }"},{"lineNumber":19,"author":{"gitId":"Zaiah0505"},"content":""},{"lineNumber":20,"author":{"gitId":"Zaiah0505"},"content":"        String desc \u003d argMap.get(\"desc\");"},{"lineNumber":21,"author":{"gitId":"Zaiah0505"},"content":"        return new ToDo(desc, argMap.containsKey(\"done\"));"},{"lineNumber":22,"author":{"gitId":"Zaiah0505"},"content":"    }"},{"lineNumber":23,"author":{"gitId":"Zaiah0505"},"content":""},{"lineNumber":24,"author":{"gitId":"Zaiah0505"},"content":"    @Override"},{"lineNumber":25,"author":{"gitId":"Zaiah0505"},"content":"    public String toString() {"},{"lineNumber":26,"author":{"gitId":"Zaiah0505"},"content":"        return \"[T]\" + super.toString();"},{"lineNumber":27,"author":{"gitId":"Zaiah0505"},"content":"    }"},{"lineNumber":28,"author":{"gitId":"Zaiah0505"},"content":""},{"lineNumber":29,"author":{"gitId":"Zaiah0505"},"content":"    @Override"},{"lineNumber":30,"author":{"gitId":"Zaiah0505"},"content":"    protected HashMap\u003cString, String\u003e saveArgs() {"},{"lineNumber":31,"author":{"gitId":"Zaiah0505"},"content":"        HashMap\u003cString, String\u003e argMap \u003d new HashMap\u003c\u003e();"},{"lineNumber":32,"author":{"gitId":"Zaiah0505"},"content":"        return argMap;"},{"lineNumber":33,"author":{"gitId":"Zaiah0505"},"content":"    }"},{"lineNumber":34,"author":{"gitId":"Zaiah0505"},"content":""},{"lineNumber":35,"author":{"gitId":"Zaiah0505"},"content":"    @Override"},{"lineNumber":36,"author":{"gitId":"Zaiah0505"},"content":"    public String commandString() {"},{"lineNumber":37,"author":{"gitId":"Zaiah0505"},"content":"        return COMMAND_STRING;"},{"lineNumber":38,"author":{"gitId":"Zaiah0505"},"content":"    }"},{"lineNumber":39,"author":{"gitId":"Zaiah0505"},"content":"}"}],"authorContributionMap":{"Zaiah0505":39}},{"path":"src/main/java/nodes/DialogBox.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Zaiah0505"},"content":"package nodes;"},{"lineNumber":2,"author":{"gitId":"Zaiah0505"},"content":""},{"lineNumber":3,"author":{"gitId":"Zaiah0505"},"content":"import javafx.collections.FXCollections;"},{"lineNumber":4,"author":{"gitId":"Zaiah0505"},"content":"import javafx.collections.ObservableList;"},{"lineNumber":5,"author":{"gitId":"Zaiah0505"},"content":"import javafx.geometry.Pos;"},{"lineNumber":6,"author":{"gitId":"Zaiah0505"},"content":"import javafx.scene.Node;"},{"lineNumber":7,"author":{"gitId":"Zaiah0505"},"content":"import javafx.scene.control.Label;"},{"lineNumber":8,"author":{"gitId":"Zaiah0505"},"content":"import javafx.scene.image.ImageView;"},{"lineNumber":9,"author":{"gitId":"Zaiah0505"},"content":"import javafx.scene.layout.HBox;"},{"lineNumber":10,"author":{"gitId":"Zaiah0505"},"content":""},{"lineNumber":11,"author":{"gitId":"Zaiah0505"},"content":"public class DialogBox extends HBox {"},{"lineNumber":12,"author":{"gitId":"Zaiah0505"},"content":"    private Label text;"},{"lineNumber":13,"author":{"gitId":"Zaiah0505"},"content":"    private ImageView displayPicture;"},{"lineNumber":14,"author":{"gitId":"Zaiah0505"},"content":""},{"lineNumber":15,"author":{"gitId":"Zaiah0505"},"content":"    public DialogBox(Label l, ImageView iv) {"},{"lineNumber":16,"author":{"gitId":"Zaiah0505"},"content":"        text \u003d l;"},{"lineNumber":17,"author":{"gitId":"Zaiah0505"},"content":"        displayPicture \u003d iv;"},{"lineNumber":18,"author":{"gitId":"Zaiah0505"},"content":""},{"lineNumber":19,"author":{"gitId":"Zaiah0505"},"content":"        text.setWrapText(true);"},{"lineNumber":20,"author":{"gitId":"Zaiah0505"},"content":"        displayPicture.setFitWidth(100.0);"},{"lineNumber":21,"author":{"gitId":"Zaiah0505"},"content":"        displayPicture.setFitHeight(100.0);"},{"lineNumber":22,"author":{"gitId":"Zaiah0505"},"content":""},{"lineNumber":23,"author":{"gitId":"Zaiah0505"},"content":"        this.setAlignment(Pos.TOP_RIGHT);"},{"lineNumber":24,"author":{"gitId":"Zaiah0505"},"content":"        this.getChildren().addAll(text, displayPicture);"},{"lineNumber":25,"author":{"gitId":"Zaiah0505"},"content":"    }"},{"lineNumber":26,"author":{"gitId":"Zaiah0505"},"content":""},{"lineNumber":27,"author":{"gitId":"Zaiah0505"},"content":"    /**"},{"lineNumber":28,"author":{"gitId":"Zaiah0505"},"content":"     * Flips the dialog box such that the ImageView is on the left and text on the right."},{"lineNumber":29,"author":{"gitId":"Zaiah0505"},"content":"     */"},{"lineNumber":30,"author":{"gitId":"Zaiah0505"},"content":"    private void flip() {"},{"lineNumber":31,"author":{"gitId":"Zaiah0505"},"content":"        this.setAlignment(Pos.TOP_LEFT);"},{"lineNumber":32,"author":{"gitId":"Zaiah0505"},"content":"        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());"},{"lineNumber":33,"author":{"gitId":"Zaiah0505"},"content":"        FXCollections.reverse(tmp);"},{"lineNumber":34,"author":{"gitId":"Zaiah0505"},"content":"        this.getChildren().setAll(tmp);"},{"lineNumber":35,"author":{"gitId":"Zaiah0505"},"content":"    }"},{"lineNumber":36,"author":{"gitId":"Zaiah0505"},"content":""},{"lineNumber":37,"author":{"gitId":"Zaiah0505"},"content":"    public static DialogBox getUserDialog(Label l, ImageView iv) {"},{"lineNumber":38,"author":{"gitId":"Zaiah0505"},"content":"        return new DialogBox(l, iv);"},{"lineNumber":39,"author":{"gitId":"Zaiah0505"},"content":"    }"},{"lineNumber":40,"author":{"gitId":"Zaiah0505"},"content":""},{"lineNumber":41,"author":{"gitId":"Zaiah0505"},"content":"    public static DialogBox getDukeDialog(Label l, ImageView iv) {"},{"lineNumber":42,"author":{"gitId":"Zaiah0505"},"content":"        var db \u003d new DialogBox(l, iv);"},{"lineNumber":43,"author":{"gitId":"Zaiah0505"},"content":"        db.flip();"},{"lineNumber":44,"author":{"gitId":"Zaiah0505"},"content":"        return db;"},{"lineNumber":45,"author":{"gitId":"Zaiah0505"},"content":"    }"},{"lineNumber":46,"author":{"gitId":"Zaiah0505"},"content":"}"}],"authorContributionMap":{"Zaiah0505":46}},{"path":"src/main/java/util/Formatter.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Zaiah0505"},"content":"package util;"},{"lineNumber":2,"author":{"gitId":"Zaiah0505"},"content":""},{"lineNumber":3,"author":{"gitId":"Zaiah0505"},"content":"import java.util.List;"},{"lineNumber":4,"author":{"gitId":"Zaiah0505"},"content":""},{"lineNumber":5,"author":{"gitId":"Zaiah0505"},"content":"public interface Formatter {"},{"lineNumber":6,"author":{"gitId":"Zaiah0505"},"content":"    static String formatOut(String output) {"},{"lineNumber":7,"author":{"gitId":"Zaiah0505"},"content":"        String opening \u003d \"\\\"----------------------------------------\\n\";"},{"lineNumber":8,"author":{"gitId":"Zaiah0505"},"content":"        String closing \u003d \"----------------------------------------\\\"\\n\";"},{"lineNumber":9,"author":{"gitId":"Zaiah0505"},"content":"        String combined \u003d opening + output + \"\\n\" + closing;"},{"lineNumber":10,"author":{"gitId":"Zaiah0505"},"content":""},{"lineNumber":11,"author":{"gitId":"Zaiah0505"},"content":"        String[] strArray \u003d combined.split(\"\\n\");"},{"lineNumber":12,"author":{"gitId":"Zaiah0505"},"content":"        StringBuilder stringBuilder \u003d new StringBuilder();"},{"lineNumber":13,"author":{"gitId":"Zaiah0505"},"content":"        for (String s : strArray) {"},{"lineNumber":14,"author":{"gitId":"Zaiah0505"},"content":"            stringBuilder.append(\"\\t\").append(s).append(\"\\n\");"},{"lineNumber":15,"author":{"gitId":"Zaiah0505"},"content":"        }"},{"lineNumber":16,"author":{"gitId":"Zaiah0505"},"content":""},{"lineNumber":17,"author":{"gitId":"Zaiah0505"},"content":"        return stringBuilder.toString();"},{"lineNumber":18,"author":{"gitId":"Zaiah0505"},"content":"    }"},{"lineNumber":19,"author":{"gitId":"Zaiah0505"},"content":""},{"lineNumber":20,"author":{"gitId":"Zaiah0505"},"content":"    static String formatList(String[] strArray) {"},{"lineNumber":21,"author":{"gitId":"Zaiah0505"},"content":"        for (int i \u003d 0; i \u003c strArray.length; i++) {"},{"lineNumber":22,"author":{"gitId":"Zaiah0505"},"content":"            strArray[i] \u003d (i + 1) + \". \" + strArray[i];"},{"lineNumber":23,"author":{"gitId":"Zaiah0505"},"content":"        }"},{"lineNumber":24,"author":{"gitId":"Zaiah0505"},"content":"        return String.join(\"\\n\", strArray);"},{"lineNumber":25,"author":{"gitId":"Zaiah0505"},"content":"    }"},{"lineNumber":26,"author":{"gitId":"Zaiah0505"},"content":""},{"lineNumber":27,"author":{"gitId":"Zaiah0505"},"content":"    static String formatList(List\u003cString\u003e strList) {"},{"lineNumber":28,"author":{"gitId":"Zaiah0505"},"content":"        return formatList(strList.toArray(new String[]{}));"},{"lineNumber":29,"author":{"gitId":"Zaiah0505"},"content":"    }"},{"lineNumber":30,"author":{"gitId":"Zaiah0505"},"content":"}"}],"authorContributionMap":{"Zaiah0505":30}},{"path":"src/main/java/util/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Zaiah0505"},"content":"package util;"},{"lineNumber":2,"author":{"gitId":"Zaiah0505"},"content":""},{"lineNumber":3,"author":{"gitId":"Zaiah0505"},"content":"import java.util.HashMap;"},{"lineNumber":4,"author":{"gitId":"Zaiah0505"},"content":"import java.util.InputMismatchException;"},{"lineNumber":5,"author":{"gitId":"Zaiah0505"},"content":""},{"lineNumber":6,"author":{"gitId":"Zaiah0505"},"content":"public interface Parser {"},{"lineNumber":7,"author":{"gitId":"Zaiah0505"},"content":"    static String getCommand(String input) {"},{"lineNumber":8,"author":{"gitId":"Zaiah0505"},"content":"        return input.split(\" \", 2)[0];"},{"lineNumber":9,"author":{"gitId":"Zaiah0505"},"content":"    }"},{"lineNumber":10,"author":{"gitId":"Zaiah0505"},"content":""},{"lineNumber":11,"author":{"gitId":"Zaiah0505"},"content":"    static HashMap\u003cString, String\u003e getArgMap(String input) throws InputMismatchException {"},{"lineNumber":12,"author":{"gitId":"Zaiah0505"},"content":"        HashMap\u003cString, String\u003e argMap \u003d new HashMap\u003c\u003e();"},{"lineNumber":13,"author":{"gitId":"Zaiah0505"},"content":""},{"lineNumber":14,"author":{"gitId":"Zaiah0505"},"content":"        if (input.split(\" \").length \u003c 2) {"},{"lineNumber":15,"author":{"gitId":"Zaiah0505"},"content":"            return argMap;"},{"lineNumber":16,"author":{"gitId":"Zaiah0505"},"content":"        }"},{"lineNumber":17,"author":{"gitId":"Zaiah0505"},"content":""},{"lineNumber":18,"author":{"gitId":"Zaiah0505"},"content":"        String[] argArr \u003d input.split(\"/\");"},{"lineNumber":19,"author":{"gitId":"Zaiah0505"},"content":"        for (int i \u003d 0; i \u003c argArr.length; i++) {"},{"lineNumber":20,"author":{"gitId":"Zaiah0505"},"content":"            String flag;"},{"lineNumber":21,"author":{"gitId":"Zaiah0505"},"content":"            String param;"},{"lineNumber":22,"author":{"gitId":"Zaiah0505"},"content":""},{"lineNumber":23,"author":{"gitId":"Zaiah0505"},"content":"            if (i \u003d\u003d 0) {"},{"lineNumber":24,"author":{"gitId":"Zaiah0505"},"content":"                flag \u003d \"desc\";"},{"lineNumber":25,"author":{"gitId":"Zaiah0505"},"content":"            } else {"},{"lineNumber":26,"author":{"gitId":"Zaiah0505"},"content":"                flag \u003d argArr[i].split(\" \", 2)[0];"},{"lineNumber":27,"author":{"gitId":"Zaiah0505"},"content":"            }"},{"lineNumber":28,"author":{"gitId":"Zaiah0505"},"content":""},{"lineNumber":29,"author":{"gitId":"Zaiah0505"},"content":"            try {"},{"lineNumber":30,"author":{"gitId":"Zaiah0505"},"content":"                param \u003d argArr[i].split(\" \", 2)[1];"},{"lineNumber":31,"author":{"gitId":"Zaiah0505"},"content":"            } catch (ArrayIndexOutOfBoundsException e) {"},{"lineNumber":32,"author":{"gitId":"Zaiah0505"},"content":"                throw new InputMismatchException(\"Parameter for \\\"\" + flag + \"\\\" cannot be empty\");"},{"lineNumber":33,"author":{"gitId":"Zaiah0505"},"content":"            }"},{"lineNumber":34,"author":{"gitId":"Zaiah0505"},"content":"            argMap.put(flag, param);"},{"lineNumber":35,"author":{"gitId":"Zaiah0505"},"content":"        }"},{"lineNumber":36,"author":{"gitId":"Zaiah0505"},"content":"        return argMap;"},{"lineNumber":37,"author":{"gitId":"Zaiah0505"},"content":"    }"},{"lineNumber":38,"author":{"gitId":"Zaiah0505"},"content":""},{"lineNumber":39,"author":{"gitId":"Zaiah0505"},"content":"}"}],"authorContributionMap":{"Zaiah0505":39}},{"path":"src/main/java/util/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Zaiah0505"},"content":"package util;"},{"lineNumber":2,"author":{"gitId":"Zaiah0505"},"content":""},{"lineNumber":3,"author":{"gitId":"Zaiah0505"},"content":"import java.io.File;"},{"lineNumber":4,"author":{"gitId":"Zaiah0505"},"content":"import java.io.FileWriter;"},{"lineNumber":5,"author":{"gitId":"Zaiah0505"},"content":"import java.io.IOException;"},{"lineNumber":6,"author":{"gitId":"Zaiah0505"},"content":"import java.nio.file.Path;"},{"lineNumber":7,"author":{"gitId":"Zaiah0505"},"content":"import java.nio.file.Paths;"},{"lineNumber":8,"author":{"gitId":"Zaiah0505"},"content":"import java.util.Scanner;"},{"lineNumber":9,"author":{"gitId":"Zaiah0505"},"content":""},{"lineNumber":10,"author":{"gitId":"Zaiah0505"},"content":"public interface Storage {"},{"lineNumber":11,"author":{"gitId":"Zaiah0505"},"content":"    Path SAVE_PATH \u003d Paths.get(\"data\", \"sweh.txt\");"},{"lineNumber":12,"author":{"gitId":"Zaiah0505"},"content":""},{"lineNumber":13,"author":{"gitId":"Zaiah0505"},"content":"    static File getFile() throws IOException {"},{"lineNumber":14,"author":{"gitId":"Zaiah0505"},"content":"        File file \u003d new File(SAVE_PATH.toString());"},{"lineNumber":15,"author":{"gitId":"Zaiah0505"},"content":"        (new File(SAVE_PATH.getParent().toString())).mkdir();"},{"lineNumber":16,"author":{"gitId":"Zaiah0505"},"content":"        file.createNewFile();"},{"lineNumber":17,"author":{"gitId":"Zaiah0505"},"content":"        return file;"},{"lineNumber":18,"author":{"gitId":"Zaiah0505"},"content":"    }"},{"lineNumber":19,"author":{"gitId":"Zaiah0505"},"content":""},{"lineNumber":20,"author":{"gitId":"Zaiah0505"},"content":"    static void writeSave(String lines) throws IOException {"},{"lineNumber":21,"author":{"gitId":"Zaiah0505"},"content":"        FileWriter fw \u003d new FileWriter(getFile());"},{"lineNumber":22,"author":{"gitId":"Zaiah0505"},"content":"        fw.write(lines);"},{"lineNumber":23,"author":{"gitId":"Zaiah0505"},"content":"        fw.close();"},{"lineNumber":24,"author":{"gitId":"Zaiah0505"},"content":"    }"},{"lineNumber":25,"author":{"gitId":"Zaiah0505"},"content":""},{"lineNumber":26,"author":{"gitId":"Zaiah0505"},"content":"    static String readSave() throws IOException {"},{"lineNumber":27,"author":{"gitId":"Zaiah0505"},"content":"        File file \u003d getFile();"},{"lineNumber":28,"author":{"gitId":"Zaiah0505"},"content":"        Scanner sc \u003d new Scanner(file);"},{"lineNumber":29,"author":{"gitId":"Zaiah0505"},"content":"        StringBuilder output \u003d new StringBuilder();"},{"lineNumber":30,"author":{"gitId":"Zaiah0505"},"content":"        while (sc.hasNext()) {"},{"lineNumber":31,"author":{"gitId":"Zaiah0505"},"content":"            output.append(sc.nextLine());"},{"lineNumber":32,"author":{"gitId":"Zaiah0505"},"content":"        }"},{"lineNumber":33,"author":{"gitId":"Zaiah0505"},"content":"        sc.close();"},{"lineNumber":34,"author":{"gitId":"Zaiah0505"},"content":"        return output.toString();"},{"lineNumber":35,"author":{"gitId":"Zaiah0505"},"content":"    }"},{"lineNumber":36,"author":{"gitId":"Zaiah0505"},"content":"}"}],"authorContributionMap":{"Zaiah0505":36}},{"path":"src/main/java/util/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Zaiah0505"},"content":"package util;"},{"lineNumber":2,"author":{"gitId":"Zaiah0505"},"content":""},{"lineNumber":3,"author":{"gitId":"Zaiah0505"},"content":"public interface Ui {"},{"lineNumber":4,"author":{"gitId":"Zaiah0505"},"content":"    static String greeting() {"},{"lineNumber":5,"author":{"gitId":"Zaiah0505"},"content":"        String logo \u003d \" _____  _    _ _____ _   _ \\n\" +"},{"lineNumber":6,"author":{"gitId":"Zaiah0505"},"content":"                \"/  ___|| |  | |  ___| | | | \\n\" +"},{"lineNumber":7,"author":{"gitId":"Zaiah0505"},"content":"                \"\\\\ `--. | |  | | |__ | |_| | \\n\" +"},{"lineNumber":8,"author":{"gitId":"Zaiah0505"},"content":"                \" `--. \\\\| |/\\\\| |  __||  _  | \\n\" +"},{"lineNumber":9,"author":{"gitId":"Zaiah0505"},"content":"                \"/\\\\__/ /\\\\  /\\\\  / |___| | | | \\n\" +"},{"lineNumber":10,"author":{"gitId":"Zaiah0505"},"content":"                \"\\\\____/  \\\\/  \\\\/\\\\____/\\\\_| |_/ \\n\";"},{"lineNumber":11,"author":{"gitId":"Zaiah0505"},"content":""},{"lineNumber":12,"author":{"gitId":"Zaiah0505"},"content":"        return \"Hello, I am\\n\""},{"lineNumber":13,"author":{"gitId":"Zaiah0505"},"content":"                + logo"},{"lineNumber":14,"author":{"gitId":"Zaiah0505"},"content":"                + \"\\nYour Simple Word-Executed Helper!\""},{"lineNumber":15,"author":{"gitId":"Zaiah0505"},"content":"                + \"\\nWhat shall we do today?\\n\";"},{"lineNumber":16,"author":{"gitId":"Zaiah0505"},"content":"    }"},{"lineNumber":17,"author":{"gitId":"Zaiah0505"},"content":""},{"lineNumber":18,"author":{"gitId":"Zaiah0505"},"content":"    static String echo(String input) {"},{"lineNumber":19,"author":{"gitId":"Zaiah0505"},"content":"        return input;"},{"lineNumber":20,"author":{"gitId":"Zaiah0505"},"content":"    }"},{"lineNumber":21,"author":{"gitId":"Zaiah0505"},"content":"}"}],"authorContributionMap":{"Zaiah0505":21}},{"path":"src/test/util/ParserTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Zaiah0505"},"content":"package util;"},{"lineNumber":2,"author":{"gitId":"Zaiah0505"},"content":""},{"lineNumber":3,"author":{"gitId":"Zaiah0505"},"content":"import org.junit.jupiter.api.Test;"},{"lineNumber":4,"author":{"gitId":"Zaiah0505"},"content":""},{"lineNumber":5,"author":{"gitId":"Zaiah0505"},"content":"import java.util.HashMap;"},{"lineNumber":6,"author":{"gitId":"Zaiah0505"},"content":""},{"lineNumber":7,"author":{"gitId":"Zaiah0505"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;"},{"lineNumber":8,"author":{"gitId":"Zaiah0505"},"content":""},{"lineNumber":9,"author":{"gitId":"Zaiah0505"},"content":"class ParserTest {"},{"lineNumber":10,"author":{"gitId":"Zaiah0505"},"content":""},{"lineNumber":11,"author":{"gitId":"Zaiah0505"},"content":"    @Test"},{"lineNumber":12,"author":{"gitId":"Zaiah0505"},"content":"    void getCommand() {"},{"lineNumber":13,"author":{"gitId":"Zaiah0505"},"content":"    }"},{"lineNumber":14,"author":{"gitId":"Zaiah0505"},"content":""},{"lineNumber":15,"author":{"gitId":"Zaiah0505"},"content":"    @Test"},{"lineNumber":16,"author":{"gitId":"Zaiah0505"},"content":"    void getArgMap1() {"},{"lineNumber":17,"author":{"gitId":"Zaiah0505"},"content":"        HashMap\u003cString, String\u003e testMap \u003d new HashMap\u003c\u003e();"},{"lineNumber":18,"author":{"gitId":"Zaiah0505"},"content":"        assertEquals(testMap, Parser.getArgMap(\"todo \"));"},{"lineNumber":19,"author":{"gitId":"Zaiah0505"},"content":"    }"},{"lineNumber":20,"author":{"gitId":"Zaiah0505"},"content":""},{"lineNumber":21,"author":{"gitId":"Zaiah0505"},"content":"    @Test"},{"lineNumber":22,"author":{"gitId":"Zaiah0505"},"content":"    void getArgMap2() {"},{"lineNumber":23,"author":{"gitId":"Zaiah0505"},"content":"        HashMap\u003cString, String\u003e testMap \u003d new HashMap\u003c\u003e();"},{"lineNumber":24,"author":{"gitId":"Zaiah0505"},"content":"        testMap.put(\"desc\", \"\");"},{"lineNumber":25,"author":{"gitId":"Zaiah0505"},"content":"        testMap.put(\"at\", \"123 \");"},{"lineNumber":26,"author":{"gitId":"Zaiah0505"},"content":"        testMap.put(\"done\", \"\");"},{"lineNumber":27,"author":{"gitId":"Zaiah0505"},"content":"        assertEquals(testMap, Parser.getArgMap(\"todo /at 123 /done \"));"},{"lineNumber":28,"author":{"gitId":"Zaiah0505"},"content":"    }"},{"lineNumber":29,"author":{"gitId":"Zaiah0505"},"content":"}"}],"authorContributionMap":{"Zaiah0505":29}},{"path":"src/test/util/StorageTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Zaiah0505"},"content":"package util;"},{"lineNumber":2,"author":{"gitId":"Zaiah0505"},"content":""},{"lineNumber":3,"author":{"gitId":"Zaiah0505"},"content":"import org.junit.jupiter.api.Test;"},{"lineNumber":4,"author":{"gitId":"Zaiah0505"},"content":""},{"lineNumber":5,"author":{"gitId":"Zaiah0505"},"content":"import java.io.IOException;"},{"lineNumber":6,"author":{"gitId":"Zaiah0505"},"content":""},{"lineNumber":7,"author":{"gitId":"Zaiah0505"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;"},{"lineNumber":8,"author":{"gitId":"Zaiah0505"},"content":""},{"lineNumber":9,"author":{"gitId":"Zaiah0505"},"content":"class StorageTest {"},{"lineNumber":10,"author":{"gitId":"Zaiah0505"},"content":""},{"lineNumber":11,"author":{"gitId":"Zaiah0505"},"content":"    @org.junit.jupiter.api.Test"},{"lineNumber":12,"author":{"gitId":"Zaiah0505"},"content":"    void writeSave() throws IOException {"},{"lineNumber":13,"author":{"gitId":"Zaiah0505"},"content":"        Storage.writeSave(\"sweg\");"},{"lineNumber":14,"author":{"gitId":"Zaiah0505"},"content":"        assertEquals(\"sweg\", Storage.readSave());"},{"lineNumber":15,"author":{"gitId":"Zaiah0505"},"content":"    }"},{"lineNumber":16,"author":{"gitId":"Zaiah0505"},"content":""},{"lineNumber":17,"author":{"gitId":"Zaiah0505"},"content":"    @Test"},{"lineNumber":18,"author":{"gitId":"Zaiah0505"},"content":"    void getFile() throws IOException {"},{"lineNumber":19,"author":{"gitId":"Zaiah0505"},"content":"        assertEquals(\"data\\\\sweh.txt\", Storage.getFile().toString());"},{"lineNumber":20,"author":{"gitId":"Zaiah0505"},"content":"    }"},{"lineNumber":21,"author":{"gitId":"Zaiah0505"},"content":"}"}],"authorContributionMap":{"Zaiah0505":21}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"Zaiah0505"},"content":"asdf"},{"lineNumber":2,"author":{"gitId":"Zaiah0505"},"content":"event Gym with the boys /at 2pm"},{"lineNumber":3,"author":{"gitId":"Zaiah0505"},"content":"deadline Finish 2103 iP /by Thu"},{"lineNumber":4,"author":{"gitId":"Zaiah0505"},"content":"done 2"},{"lineNumber":5,"author":{"gitId":"Zaiah0505"},"content":"todo Make CS2040 TA Slides"},{"lineNumber":6,"author":{"gitId":"Zaiah0505"},"content":"list"},{"lineNumber":7,"author":{"gitId":"Zaiah0505"},"content":"bye"}],"authorContributionMap":{"Zaiah0505":7}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF"},{"lineNumber":2,"author":{"gitId":"-"},"content":""},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin"},{"lineNumber":5,"author":{"gitId":"-"},"content":""},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run"},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT"},{"lineNumber":8,"author":{"gitId":"-"},"content":""},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder"},{"lineNumber":10,"author":{"gitId":"-"},"content":"javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\*.java"},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 ("},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1"},{"lineNumber":14,"author":{"gitId":"-"},"content":")"},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0"},{"lineNumber":16,"author":{"gitId":"-"},"content":""},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"},{"lineNumber":18,"author":{"gitId":"Zaiah0505"},"content":"java -classpath ..\\bin Sweh \u003c input.txt \u003e ACTUAL.TXT"},{"lineNumber":19,"author":{"gitId":"-"},"content":""},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM compare the output to the expected output"},{"lineNumber":21,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT"}],"authorContributionMap":{"Zaiah0505":1,"-":20}}]
