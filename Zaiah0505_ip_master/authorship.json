[{"path":"src/main/java/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Zaiah0505"},"content":"import java.text.DateFormat;"},{"lineNumber":2,"author":{"gitId":"Zaiah0505"},"content":"import java.time.LocalDate;"},{"lineNumber":3,"author":{"gitId":"Zaiah0505"},"content":"import java.time.LocalDateTime;"},{"lineNumber":4,"author":{"gitId":"Zaiah0505"},"content":""},{"lineNumber":5,"author":{"gitId":"Zaiah0505"},"content":"import static java.time.format.DateTimeFormatter.*;"},{"lineNumber":6,"author":{"gitId":"Zaiah0505"},"content":""},{"lineNumber":7,"author":{"gitId":"Zaiah0505"},"content":"import java.time.format.DateTimeFormatter;"},{"lineNumber":8,"author":{"gitId":"Zaiah0505"},"content":"import java.time.format.DateTimeParseException;"},{"lineNumber":9,"author":{"gitId":"Zaiah0505"},"content":"import java.util.HashMap;"},{"lineNumber":10,"author":{"gitId":"Zaiah0505"},"content":"import java.util.NoSuchElementException;"},{"lineNumber":11,"author":{"gitId":"Zaiah0505"},"content":""},{"lineNumber":12,"author":{"gitId":"Zaiah0505"},"content":"public class Deadline extends Task {"},{"lineNumber":13,"author":{"gitId":"Zaiah0505"},"content":"    private LocalDate endDate;"},{"lineNumber":14,"author":{"gitId":"Zaiah0505"},"content":"    public static final String COMMAND_STRING \u003d \"deadline\";"},{"lineNumber":15,"author":{"gitId":"Zaiah0505"},"content":""},{"lineNumber":16,"author":{"gitId":"Zaiah0505"},"content":"    public Deadline(String desc, LocalDate endDate) {"},{"lineNumber":17,"author":{"gitId":"Zaiah0505"},"content":"        super(desc);"},{"lineNumber":18,"author":{"gitId":"Zaiah0505"},"content":"        this.endDate \u003d endDate;"},{"lineNumber":19,"author":{"gitId":"Zaiah0505"},"content":"    }"},{"lineNumber":20,"author":{"gitId":"Zaiah0505"},"content":""},{"lineNumber":21,"author":{"gitId":"Zaiah0505"},"content":"    public Deadline(String desc, LocalDate endDate, boolean isDone) {"},{"lineNumber":22,"author":{"gitId":"Zaiah0505"},"content":"        super(desc, isDone);"},{"lineNumber":23,"author":{"gitId":"Zaiah0505"},"content":"        this.endDate \u003d endDate;"},{"lineNumber":24,"author":{"gitId":"Zaiah0505"},"content":"    }"},{"lineNumber":25,"author":{"gitId":"Zaiah0505"},"content":""},{"lineNumber":26,"author":{"gitId":"Zaiah0505"},"content":"    public static Deadline newInstance(HashMap\u003cString, String\u003e argMap)"},{"lineNumber":27,"author":{"gitId":"Zaiah0505"},"content":"            throws NoSuchElementException, DateTimeParseException {"},{"lineNumber":28,"author":{"gitId":"Zaiah0505"},"content":"        if (!argMap.containsKey(\"desc\")) {"},{"lineNumber":29,"author":{"gitId":"Zaiah0505"},"content":"            throw new NoSuchElementException(\"Error: The description for todo cannot be empty.\");"},{"lineNumber":30,"author":{"gitId":"Zaiah0505"},"content":"        }"},{"lineNumber":31,"author":{"gitId":"Zaiah0505"},"content":""},{"lineNumber":32,"author":{"gitId":"Zaiah0505"},"content":"        String desc \u003d argMap.get(\"desc\");"},{"lineNumber":33,"author":{"gitId":"Zaiah0505"},"content":"        LocalDate eventTime \u003d null;"},{"lineNumber":34,"author":{"gitId":"Zaiah0505"},"content":"        boolean isDone \u003d argMap.containsKey(\"done\");"},{"lineNumber":35,"author":{"gitId":"Zaiah0505"},"content":""},{"lineNumber":36,"author":{"gitId":"Zaiah0505"},"content":"        if (argMap.containsKey(\"by\")) {"},{"lineNumber":37,"author":{"gitId":"Zaiah0505"},"content":"            eventTime \u003d LocalDate.parse(argMap.get(\"by\"), ISO_LOCAL_DATE);"},{"lineNumber":38,"author":{"gitId":"Zaiah0505"},"content":"        }"},{"lineNumber":39,"author":{"gitId":"Zaiah0505"},"content":""},{"lineNumber":40,"author":{"gitId":"Zaiah0505"},"content":"        return new Deadline(desc, eventTime, isDone);"},{"lineNumber":41,"author":{"gitId":"Zaiah0505"},"content":"    }"},{"lineNumber":42,"author":{"gitId":"Zaiah0505"},"content":""},{"lineNumber":43,"author":{"gitId":"Zaiah0505"},"content":"    @Override"},{"lineNumber":44,"author":{"gitId":"Zaiah0505"},"content":"    public String toString() {"},{"lineNumber":45,"author":{"gitId":"Zaiah0505"},"content":"        return \"[D]\" + super.toString() +"},{"lineNumber":46,"author":{"gitId":"Zaiah0505"},"content":"                (endDate !\u003d null"},{"lineNumber":47,"author":{"gitId":"Zaiah0505"},"content":"                        ? \"(by: \" + endDate.format(DateTimeFormatter.ofPattern(\"E, d MMM yy\")) + \")\""},{"lineNumber":48,"author":{"gitId":"Zaiah0505"},"content":"                        : \"\");"},{"lineNumber":49,"author":{"gitId":"Zaiah0505"},"content":"    }"},{"lineNumber":50,"author":{"gitId":"Zaiah0505"},"content":""},{"lineNumber":51,"author":{"gitId":"Zaiah0505"},"content":"    @Override"},{"lineNumber":52,"author":{"gitId":"Zaiah0505"},"content":"    protected HashMap\u003cString, String\u003e saveArgs() {"},{"lineNumber":53,"author":{"gitId":"Zaiah0505"},"content":"        HashMap\u003cString, String\u003e argMap \u003d new HashMap\u003c\u003e();"},{"lineNumber":54,"author":{"gitId":"Zaiah0505"},"content":"        if (endDate !\u003d null) {"},{"lineNumber":55,"author":{"gitId":"Zaiah0505"},"content":"            argMap.put(\"by\", endDate.toString());"},{"lineNumber":56,"author":{"gitId":"Zaiah0505"},"content":"        }"},{"lineNumber":57,"author":{"gitId":"Zaiah0505"},"content":"        return argMap;"},{"lineNumber":58,"author":{"gitId":"Zaiah0505"},"content":"    }"},{"lineNumber":59,"author":{"gitId":"Zaiah0505"},"content":""},{"lineNumber":60,"author":{"gitId":"Zaiah0505"},"content":"    @Override"},{"lineNumber":61,"author":{"gitId":"Zaiah0505"},"content":"    public String commandString() {"},{"lineNumber":62,"author":{"gitId":"Zaiah0505"},"content":"        return COMMAND_STRING;"},{"lineNumber":63,"author":{"gitId":"Zaiah0505"},"content":"    }"},{"lineNumber":64,"author":{"gitId":"Zaiah0505"},"content":"}"}],"authorContributionMap":{"Zaiah0505":64}},{"path":"src/main/java/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Zaiah0505"},"content":"import java.time.LocalDate;"},{"lineNumber":2,"author":{"gitId":"Zaiah0505"},"content":"import java.time.format.DateTimeFormatter;"},{"lineNumber":3,"author":{"gitId":"Zaiah0505"},"content":"import java.time.format.DateTimeParseException;"},{"lineNumber":4,"author":{"gitId":"Zaiah0505"},"content":"import java.util.HashMap;"},{"lineNumber":5,"author":{"gitId":"Zaiah0505"},"content":"import java.util.NoSuchElementException;"},{"lineNumber":6,"author":{"gitId":"Zaiah0505"},"content":""},{"lineNumber":7,"author":{"gitId":"Zaiah0505"},"content":"import static java.time.format.DateTimeFormatter.ISO_LOCAL_DATE;"},{"lineNumber":8,"author":{"gitId":"Zaiah0505"},"content":""},{"lineNumber":9,"author":{"gitId":"Zaiah0505"},"content":"public class Event extends Task {"},{"lineNumber":10,"author":{"gitId":"Zaiah0505"},"content":"    public static final String COMMAND_STRING \u003d \"event\";"},{"lineNumber":11,"author":{"gitId":"Zaiah0505"},"content":"    private final LocalDate eventTime;"},{"lineNumber":12,"author":{"gitId":"Zaiah0505"},"content":""},{"lineNumber":13,"author":{"gitId":"Zaiah0505"},"content":"    public Event(String desc, LocalDate eventTime) {"},{"lineNumber":14,"author":{"gitId":"Zaiah0505"},"content":"        super(desc);"},{"lineNumber":15,"author":{"gitId":"Zaiah0505"},"content":"        this.eventTime \u003d eventTime;"},{"lineNumber":16,"author":{"gitId":"Zaiah0505"},"content":"    }"},{"lineNumber":17,"author":{"gitId":"Zaiah0505"},"content":""},{"lineNumber":18,"author":{"gitId":"Zaiah0505"},"content":"    public Event(String desc, LocalDate eventTime, boolean isDone) {"},{"lineNumber":19,"author":{"gitId":"Zaiah0505"},"content":"        super(desc, isDone);"},{"lineNumber":20,"author":{"gitId":"Zaiah0505"},"content":"        this.eventTime \u003d eventTime;"},{"lineNumber":21,"author":{"gitId":"Zaiah0505"},"content":"    }"},{"lineNumber":22,"author":{"gitId":"Zaiah0505"},"content":""},{"lineNumber":23,"author":{"gitId":"Zaiah0505"},"content":"    public static Event newInstance(HashMap\u003cString, String\u003e argMap)"},{"lineNumber":24,"author":{"gitId":"Zaiah0505"},"content":"            throws NoSuchElementException, DateTimeParseException {"},{"lineNumber":25,"author":{"gitId":"Zaiah0505"},"content":"        if (!argMap.containsKey(\"desc\")) {"},{"lineNumber":26,"author":{"gitId":"Zaiah0505"},"content":"            throw new NoSuchElementException(\"Error: The description for todo cannot be empty.\");"},{"lineNumber":27,"author":{"gitId":"Zaiah0505"},"content":"        }"},{"lineNumber":28,"author":{"gitId":"Zaiah0505"},"content":""},{"lineNumber":29,"author":{"gitId":"Zaiah0505"},"content":"        String desc \u003d argMap.get(\"desc\");"},{"lineNumber":30,"author":{"gitId":"Zaiah0505"},"content":"        LocalDate eventTime \u003d null;"},{"lineNumber":31,"author":{"gitId":"Zaiah0505"},"content":"        boolean isDone \u003d argMap.containsKey(\"done\");"},{"lineNumber":32,"author":{"gitId":"Zaiah0505"},"content":""},{"lineNumber":33,"author":{"gitId":"Zaiah0505"},"content":"        if (argMap.containsKey(\"at\")) {"},{"lineNumber":34,"author":{"gitId":"Zaiah0505"},"content":"            eventTime \u003d LocalDate.parse(argMap.get(\"at\"), ISO_LOCAL_DATE);"},{"lineNumber":35,"author":{"gitId":"Zaiah0505"},"content":"        }"},{"lineNumber":36,"author":{"gitId":"Zaiah0505"},"content":""},{"lineNumber":37,"author":{"gitId":"Zaiah0505"},"content":"        return new Event(desc, eventTime, isDone);"},{"lineNumber":38,"author":{"gitId":"Zaiah0505"},"content":"    }"},{"lineNumber":39,"author":{"gitId":"Zaiah0505"},"content":""},{"lineNumber":40,"author":{"gitId":"Zaiah0505"},"content":"    @Override"},{"lineNumber":41,"author":{"gitId":"Zaiah0505"},"content":"    public String toString() {"},{"lineNumber":42,"author":{"gitId":"Zaiah0505"},"content":"        return \"[E]\" + super.toString() +"},{"lineNumber":43,"author":{"gitId":"Zaiah0505"},"content":"                (eventTime !\u003d null"},{"lineNumber":44,"author":{"gitId":"Zaiah0505"},"content":"                        ? \"(at: \" + eventTime.format(DateTimeFormatter.ofPattern(\"E, d MMM yy\")) + \")\""},{"lineNumber":45,"author":{"gitId":"Zaiah0505"},"content":"                        : \"\");"},{"lineNumber":46,"author":{"gitId":"Zaiah0505"},"content":"    }"},{"lineNumber":47,"author":{"gitId":"Zaiah0505"},"content":""},{"lineNumber":48,"author":{"gitId":"Zaiah0505"},"content":"    @Override"},{"lineNumber":49,"author":{"gitId":"Zaiah0505"},"content":"    protected HashMap\u003cString, String\u003e saveArgs() {"},{"lineNumber":50,"author":{"gitId":"Zaiah0505"},"content":"        HashMap\u003cString, String\u003e argMap \u003d new HashMap\u003c\u003e();"},{"lineNumber":51,"author":{"gitId":"Zaiah0505"},"content":"        if (eventTime !\u003d null) {"},{"lineNumber":52,"author":{"gitId":"Zaiah0505"},"content":"            argMap.put(\"at\", eventTime.toString());"},{"lineNumber":53,"author":{"gitId":"Zaiah0505"},"content":"        }"},{"lineNumber":54,"author":{"gitId":"Zaiah0505"},"content":"        return argMap;"},{"lineNumber":55,"author":{"gitId":"Zaiah0505"},"content":"    }"},{"lineNumber":56,"author":{"gitId":"Zaiah0505"},"content":""},{"lineNumber":57,"author":{"gitId":"Zaiah0505"},"content":"    @Override"},{"lineNumber":58,"author":{"gitId":"Zaiah0505"},"content":"    public String commandString() {"},{"lineNumber":59,"author":{"gitId":"Zaiah0505"},"content":"        return COMMAND_STRING;"},{"lineNumber":60,"author":{"gitId":"Zaiah0505"},"content":"    }"},{"lineNumber":61,"author":{"gitId":"Zaiah0505"},"content":"}"}],"authorContributionMap":{"Zaiah0505":61}},{"path":"src/main/java/Sweh.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Zaiah0505"},"content":"import util.Formatter;"},{"lineNumber":2,"author":{"gitId":"Zaiah0505"},"content":"import util.Ui;"},{"lineNumber":3,"author":{"gitId":"Zaiah0505"},"content":""},{"lineNumber":4,"author":{"gitId":"Zaiah0505"},"content":"import java.time.format.DateTimeParseException;"},{"lineNumber":5,"author":{"gitId":"Zaiah0505"},"content":"import java.util.HashMap;"},{"lineNumber":6,"author":{"gitId":"Zaiah0505"},"content":"import java.util.NoSuchElementException;"},{"lineNumber":7,"author":{"gitId":"Zaiah0505"},"content":"import java.util.Scanner;"},{"lineNumber":8,"author":{"gitId":"Zaiah0505"},"content":""},{"lineNumber":9,"author":{"gitId":"Zaiah0505"},"content":"import static util.Parser.getArgMap;"},{"lineNumber":10,"author":{"gitId":"Zaiah0505"},"content":"import static util.Parser.getCommand;"},{"lineNumber":11,"author":{"gitId":"Zaiah0505"},"content":""},{"lineNumber":12,"author":{"gitId":"Zaiah0505"},"content":"public class Sweh {"},{"lineNumber":13,"author":{"gitId":"Zaiah0505"},"content":"    public static TaskList taskList \u003d new TaskList();"},{"lineNumber":14,"author":{"gitId":"Zaiah0505"},"content":""},{"lineNumber":15,"author":{"gitId":"-"},"content":"    public static void main(String[] args) {"},{"lineNumber":16,"author":{"gitId":"Zaiah0505"},"content":"        System.out.println(Ui.greeting());"},{"lineNumber":17,"author":{"gitId":"Zaiah0505"},"content":""},{"lineNumber":18,"author":{"gitId":"Zaiah0505"},"content":"        taskList.readFromDisk();"},{"lineNumber":19,"author":{"gitId":"Zaiah0505"},"content":""},{"lineNumber":20,"author":{"gitId":"Zaiah0505"},"content":"        Scanner sc \u003d new Scanner(System.in);"},{"lineNumber":21,"author":{"gitId":"Zaiah0505"},"content":"        while (true) {"},{"lineNumber":22,"author":{"gitId":"Zaiah0505"},"content":"            String cmd \u003d sc.nextLine();"},{"lineNumber":23,"author":{"gitId":"Zaiah0505"},"content":"            System.out.println(Formatter.formatOut(respond(cmd)));"},{"lineNumber":24,"author":{"gitId":"Zaiah0505"},"content":"            if (cmd.equals(\"bye\")) {"},{"lineNumber":25,"author":{"gitId":"Zaiah0505"},"content":"                break;"},{"lineNumber":26,"author":{"gitId":"Zaiah0505"},"content":"            }"},{"lineNumber":27,"author":{"gitId":"Zaiah0505"},"content":"        }"},{"lineNumber":28,"author":{"gitId":"Zaiah0505"},"content":"        sc.close();"},{"lineNumber":29,"author":{"gitId":"Zaiah0505"},"content":"    }"},{"lineNumber":30,"author":{"gitId":"Zaiah0505"},"content":""},{"lineNumber":31,"author":{"gitId":"Zaiah0505"},"content":"    public static String respond(String commandString) {"},{"lineNumber":32,"author":{"gitId":"Zaiah0505"},"content":"        String command \u003d getCommand(commandString);"},{"lineNumber":33,"author":{"gitId":"Zaiah0505"},"content":"        HashMap\u003cString, String\u003e argMap \u003d getArgMap(commandString);"},{"lineNumber":34,"author":{"gitId":"Zaiah0505"},"content":""},{"lineNumber":35,"author":{"gitId":"Zaiah0505"},"content":"        try {"},{"lineNumber":36,"author":{"gitId":"Zaiah0505"},"content":"            switch (command) {"},{"lineNumber":37,"author":{"gitId":"Zaiah0505"},"content":"                case \"list\":"},{"lineNumber":38,"author":{"gitId":"Zaiah0505"},"content":"                    return taskList.listTasks();"},{"lineNumber":39,"author":{"gitId":"Zaiah0505"},"content":"                case \"done\":"},{"lineNumber":40,"author":{"gitId":"Zaiah0505"},"content":"                    return taskList.markTaskDone(argMap);"},{"lineNumber":41,"author":{"gitId":"Zaiah0505"},"content":"                case \"delete\":"},{"lineNumber":42,"author":{"gitId":"Zaiah0505"},"content":"                    return taskList.deleteTask(argMap);"},{"lineNumber":43,"author":{"gitId":"Zaiah0505"},"content":"                case \"todo\":"},{"lineNumber":44,"author":{"gitId":"Zaiah0505"},"content":"                    return taskList.addTask(ToDo.newInstance(argMap));"},{"lineNumber":45,"author":{"gitId":"Zaiah0505"},"content":"                case \"deadline\":"},{"lineNumber":46,"author":{"gitId":"Zaiah0505"},"content":"                    return taskList.addTask(Deadline.newInstance(argMap));"},{"lineNumber":47,"author":{"gitId":"Zaiah0505"},"content":"                case \"event\":"},{"lineNumber":48,"author":{"gitId":"Zaiah0505"},"content":"                    return taskList.addTask(Event.newInstance(argMap));"},{"lineNumber":49,"author":{"gitId":"Zaiah0505"},"content":"                case \"find\":"},{"lineNumber":50,"author":{"gitId":"Zaiah0505"},"content":"                    return taskList.findTask(argMap);"},{"lineNumber":51,"author":{"gitId":"Zaiah0505"},"content":"                case \"bye\":"},{"lineNumber":52,"author":{"gitId":"Zaiah0505"},"content":"                    return \"Bye. See ya again soon!\";"},{"lineNumber":53,"author":{"gitId":"Zaiah0505"},"content":"                default:"},{"lineNumber":54,"author":{"gitId":"Zaiah0505"},"content":"                    return \"Error: Sorry, I didn\u0027t understand that\";"},{"lineNumber":55,"author":{"gitId":"Zaiah0505"},"content":"            }"},{"lineNumber":56,"author":{"gitId":"Zaiah0505"},"content":"        } catch (NoSuchElementException | IndexOutOfBoundsException e) {"},{"lineNumber":57,"author":{"gitId":"Zaiah0505"},"content":"            return e.getMessage();"},{"lineNumber":58,"author":{"gitId":"Zaiah0505"},"content":"        } catch (DateTimeParseException e) {"},{"lineNumber":59,"author":{"gitId":"Zaiah0505"},"content":"            return \"Please input dates in the form YYYY-MM-DD\";"},{"lineNumber":60,"author":{"gitId":"Zaiah0505"},"content":"        }"},{"lineNumber":61,"author":{"gitId":"Zaiah0505"},"content":"    }"},{"lineNumber":62,"author":{"gitId":"Zaiah0505"},"content":""},{"lineNumber":63,"author":{"gitId":"Zaiah0505"},"content":"    public static String echo(String input) {"},{"lineNumber":64,"author":{"gitId":"Zaiah0505"},"content":"        return input;"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":66,"author":{"gitId":"-"},"content":"}"}],"authorContributionMap":{"Zaiah0505":63,"-":3}},{"path":"src/main/java/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Zaiah0505"},"content":"import java.util.HashMap;"},{"lineNumber":2,"author":{"gitId":"Zaiah0505"},"content":""},{"lineNumber":3,"author":{"gitId":"Zaiah0505"},"content":"public abstract class Task {"},{"lineNumber":4,"author":{"gitId":"Zaiah0505"},"content":"    protected static final char saveDelimiter \u003d \u0027|\u0027;"},{"lineNumber":5,"author":{"gitId":"Zaiah0505"},"content":"    private final String description;"},{"lineNumber":6,"author":{"gitId":"Zaiah0505"},"content":"    private boolean isDone;"},{"lineNumber":7,"author":{"gitId":"Zaiah0505"},"content":""},{"lineNumber":8,"author":{"gitId":"Zaiah0505"},"content":"    public Task(String desc) {"},{"lineNumber":9,"author":{"gitId":"Zaiah0505"},"content":"        this.description \u003d desc;"},{"lineNumber":10,"author":{"gitId":"Zaiah0505"},"content":"        this.isDone \u003d false;"},{"lineNumber":11,"author":{"gitId":"Zaiah0505"},"content":"    }"},{"lineNumber":12,"author":{"gitId":"Zaiah0505"},"content":""},{"lineNumber":13,"author":{"gitId":"Zaiah0505"},"content":"    public Task(String desc, boolean isDone) {"},{"lineNumber":14,"author":{"gitId":"Zaiah0505"},"content":"        this.description \u003d desc;"},{"lineNumber":15,"author":{"gitId":"Zaiah0505"},"content":"        this.isDone \u003d isDone;"},{"lineNumber":16,"author":{"gitId":"Zaiah0505"},"content":"    }"},{"lineNumber":17,"author":{"gitId":"Zaiah0505"},"content":""},{"lineNumber":18,"author":{"gitId":"Zaiah0505"},"content":"    public void markDone() {"},{"lineNumber":19,"author":{"gitId":"Zaiah0505"},"content":"        this.isDone \u003d true;"},{"lineNumber":20,"author":{"gitId":"Zaiah0505"},"content":"    }"},{"lineNumber":21,"author":{"gitId":"Zaiah0505"},"content":""},{"lineNumber":22,"author":{"gitId":"Zaiah0505"},"content":"    public String getStatusIcon() {"},{"lineNumber":23,"author":{"gitId":"Zaiah0505"},"content":"        return (isDone ? \"\\u2713\" : \" \"); //return blank or tick symbol"},{"lineNumber":24,"author":{"gitId":"Zaiah0505"},"content":"    }"},{"lineNumber":25,"author":{"gitId":"Zaiah0505"},"content":""},{"lineNumber":26,"author":{"gitId":"Zaiah0505"},"content":"    public String toString() {"},{"lineNumber":27,"author":{"gitId":"Zaiah0505"},"content":"        return \"[\" + getStatusIcon() + \"] \" + description;"},{"lineNumber":28,"author":{"gitId":"Zaiah0505"},"content":"    }"},{"lineNumber":29,"author":{"gitId":"Zaiah0505"},"content":""},{"lineNumber":30,"author":{"gitId":"Zaiah0505"},"content":"    public String toSaveFormat() {"},{"lineNumber":31,"author":{"gitId":"Zaiah0505"},"content":"        StringBuilder savedString \u003d new StringBuilder();"},{"lineNumber":32,"author":{"gitId":"Zaiah0505"},"content":"        savedString.append(commandString());"},{"lineNumber":33,"author":{"gitId":"Zaiah0505"},"content":"        savedString.append(\" \");"},{"lineNumber":34,"author":{"gitId":"Zaiah0505"},"content":"        savedString.append(description);"},{"lineNumber":35,"author":{"gitId":"Zaiah0505"},"content":"        savedString.append((isDone ? \"/done \" : \"\"));"},{"lineNumber":36,"author":{"gitId":"Zaiah0505"},"content":""},{"lineNumber":37,"author":{"gitId":"Zaiah0505"},"content":"        saveArgs().forEach((k, v) -\u003e savedString.append(\"/\").append(k).append(\" \").append(v));"},{"lineNumber":38,"author":{"gitId":"Zaiah0505"},"content":""},{"lineNumber":39,"author":{"gitId":"Zaiah0505"},"content":"        return savedString.toString();"},{"lineNumber":40,"author":{"gitId":"Zaiah0505"},"content":"    }"},{"lineNumber":41,"author":{"gitId":"Zaiah0505"},"content":""},{"lineNumber":42,"author":{"gitId":"Zaiah0505"},"content":"    protected abstract HashMap\u003cString, String\u003e saveArgs();"},{"lineNumber":43,"author":{"gitId":"Zaiah0505"},"content":""},{"lineNumber":44,"author":{"gitId":"Zaiah0505"},"content":"    public abstract String commandString();"},{"lineNumber":45,"author":{"gitId":"Zaiah0505"},"content":"}"}],"authorContributionMap":{"Zaiah0505":45}},{"path":"src/main/java/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Zaiah0505"},"content":"import util.Formatter;"},{"lineNumber":2,"author":{"gitId":"Zaiah0505"},"content":"import util.Storage;"},{"lineNumber":3,"author":{"gitId":"Zaiah0505"},"content":""},{"lineNumber":4,"author":{"gitId":"Zaiah0505"},"content":"import java.io.File;"},{"lineNumber":5,"author":{"gitId":"Zaiah0505"},"content":"import java.io.IOException;"},{"lineNumber":6,"author":{"gitId":"Zaiah0505"},"content":"import java.util.ArrayList;"},{"lineNumber":7,"author":{"gitId":"Zaiah0505"},"content":"import java.util.HashMap;"},{"lineNumber":8,"author":{"gitId":"Zaiah0505"},"content":"import java.util.NoSuchElementException;"},{"lineNumber":9,"author":{"gitId":"Zaiah0505"},"content":"import java.util.Scanner;"},{"lineNumber":10,"author":{"gitId":"Zaiah0505"},"content":"import java.util.stream.Collectors;"},{"lineNumber":11,"author":{"gitId":"Zaiah0505"},"content":""},{"lineNumber":12,"author":{"gitId":"Zaiah0505"},"content":"import static util.Parser.getArgMap;"},{"lineNumber":13,"author":{"gitId":"Zaiah0505"},"content":"import static util.Parser.getCommand;"},{"lineNumber":14,"author":{"gitId":"Zaiah0505"},"content":""},{"lineNumber":15,"author":{"gitId":"Zaiah0505"},"content":"public class TaskList {"},{"lineNumber":16,"author":{"gitId":"Zaiah0505"},"content":"    private final ArrayList\u003cTask\u003e taskList;"},{"lineNumber":17,"author":{"gitId":"Zaiah0505"},"content":""},{"lineNumber":18,"author":{"gitId":"Zaiah0505"},"content":"    public TaskList() {"},{"lineNumber":19,"author":{"gitId":"Zaiah0505"},"content":"        this.taskList \u003d new ArrayList\u003c\u003e();"},{"lineNumber":20,"author":{"gitId":"Zaiah0505"},"content":"    }"},{"lineNumber":21,"author":{"gitId":"Zaiah0505"},"content":""},{"lineNumber":22,"author":{"gitId":"Zaiah0505"},"content":"    private String taskCountMsg() {"},{"lineNumber":23,"author":{"gitId":"Zaiah0505"},"content":"        return \"\\nNow you have \" + taskList.size() + \" task(s) in your list\";"},{"lineNumber":24,"author":{"gitId":"Zaiah0505"},"content":"    }"},{"lineNumber":25,"author":{"gitId":"Zaiah0505"},"content":""},{"lineNumber":26,"author":{"gitId":"Zaiah0505"},"content":"    public ArrayList\u003cTask\u003e getTaskList() {"},{"lineNumber":27,"author":{"gitId":"Zaiah0505"},"content":"        return this.taskList;"},{"lineNumber":28,"author":{"gitId":"Zaiah0505"},"content":"    }"},{"lineNumber":29,"author":{"gitId":"Zaiah0505"},"content":""},{"lineNumber":30,"author":{"gitId":"Zaiah0505"},"content":"    public String addTask(Task task) {"},{"lineNumber":31,"author":{"gitId":"Zaiah0505"},"content":"        taskList.add(task);"},{"lineNumber":32,"author":{"gitId":"Zaiah0505"},"content":""},{"lineNumber":33,"author":{"gitId":"Zaiah0505"},"content":"        saveToDisk();"},{"lineNumber":34,"author":{"gitId":"Zaiah0505"},"content":""},{"lineNumber":35,"author":{"gitId":"Zaiah0505"},"content":"        return \"Gotcha. I\u0027ve added the task: \\n    \""},{"lineNumber":36,"author":{"gitId":"Zaiah0505"},"content":"                + task"},{"lineNumber":37,"author":{"gitId":"Zaiah0505"},"content":"                + taskCountMsg();"},{"lineNumber":38,"author":{"gitId":"Zaiah0505"},"content":"    }"},{"lineNumber":39,"author":{"gitId":"Zaiah0505"},"content":""},{"lineNumber":40,"author":{"gitId":"Zaiah0505"},"content":"    public String markTaskDone(int position) throws NoSuchElementException, IndexOutOfBoundsException {"},{"lineNumber":41,"author":{"gitId":"Zaiah0505"},"content":"        try {"},{"lineNumber":42,"author":{"gitId":"Zaiah0505"},"content":"            taskList.get(position).markDone();"},{"lineNumber":43,"author":{"gitId":"Zaiah0505"},"content":"        } catch (NoSuchElementException e) {"},{"lineNumber":44,"author":{"gitId":"Zaiah0505"},"content":"            throw new NoSuchElementException(\"Error: Please incude the index of the task.\");"},{"lineNumber":45,"author":{"gitId":"Zaiah0505"},"content":"        } catch (IndexOutOfBoundsException e) {"},{"lineNumber":46,"author":{"gitId":"Zaiah0505"},"content":"            throw new IndexOutOfBoundsException(\"Error: Please enter a number within the list.\");"},{"lineNumber":47,"author":{"gitId":"Zaiah0505"},"content":"        }"},{"lineNumber":48,"author":{"gitId":"Zaiah0505"},"content":"        return \"Nice, another job well done!\\n\""},{"lineNumber":49,"author":{"gitId":"Zaiah0505"},"content":"                + taskList.get(position).toString();"},{"lineNumber":50,"author":{"gitId":"Zaiah0505"},"content":"    }"},{"lineNumber":51,"author":{"gitId":"Zaiah0505"},"content":""},{"lineNumber":52,"author":{"gitId":"Zaiah0505"},"content":"    public String markTaskDone(HashMap\u003cString, String\u003e argMap) throws NoSuchElementException,"},{"lineNumber":53,"author":{"gitId":"Zaiah0505"},"content":"            IndexOutOfBoundsException {"},{"lineNumber":54,"author":{"gitId":"Zaiah0505"},"content":"        int position;"},{"lineNumber":55,"author":{"gitId":"Zaiah0505"},"content":"        try {"},{"lineNumber":56,"author":{"gitId":"Zaiah0505"},"content":"            position \u003d Integer.parseInt(argMap.get(\"desc\")) - 1;"},{"lineNumber":57,"author":{"gitId":"Zaiah0505"},"content":"            taskList.get(position).markDone();"},{"lineNumber":58,"author":{"gitId":"Zaiah0505"},"content":"        } catch (NoSuchElementException e) {"},{"lineNumber":59,"author":{"gitId":"Zaiah0505"},"content":"            throw new NoSuchElementException(\"Error: Please incude the index of the task.\");"},{"lineNumber":60,"author":{"gitId":"Zaiah0505"},"content":"        } catch (IndexOutOfBoundsException e) {"},{"lineNumber":61,"author":{"gitId":"Zaiah0505"},"content":"            throw new IndexOutOfBoundsException(\"Error: Please enter a number within the list.\");"},{"lineNumber":62,"author":{"gitId":"Zaiah0505"},"content":"        }"},{"lineNumber":63,"author":{"gitId":"Zaiah0505"},"content":""},{"lineNumber":64,"author":{"gitId":"Zaiah0505"},"content":"        saveToDisk();"},{"lineNumber":65,"author":{"gitId":"Zaiah0505"},"content":""},{"lineNumber":66,"author":{"gitId":"Zaiah0505"},"content":"        return \"Nice, another job well done!\\n\""},{"lineNumber":67,"author":{"gitId":"Zaiah0505"},"content":"                + taskList.get(position).toString();"},{"lineNumber":68,"author":{"gitId":"Zaiah0505"},"content":"    }"},{"lineNumber":69,"author":{"gitId":"Zaiah0505"},"content":""},{"lineNumber":70,"author":{"gitId":"Zaiah0505"},"content":"    public String deleteTask(HashMap\u003cString, String\u003e argMap) throws NoSuchElementException,"},{"lineNumber":71,"author":{"gitId":"Zaiah0505"},"content":"            IndexOutOfBoundsException {"},{"lineNumber":72,"author":{"gitId":"Zaiah0505"},"content":"        int position;"},{"lineNumber":73,"author":{"gitId":"Zaiah0505"},"content":"        Task taskToRemove;"},{"lineNumber":74,"author":{"gitId":"Zaiah0505"},"content":"        try {"},{"lineNumber":75,"author":{"gitId":"Zaiah0505"},"content":"            position \u003d Integer.parseInt(argMap.get(\"desc\")) - 1;"},{"lineNumber":76,"author":{"gitId":"Zaiah0505"},"content":"            taskToRemove \u003d taskList.get(position);"},{"lineNumber":77,"author":{"gitId":"Zaiah0505"},"content":"            taskList.remove(position);"},{"lineNumber":78,"author":{"gitId":"Zaiah0505"},"content":"        } catch (NoSuchElementException | NumberFormatException e) {"},{"lineNumber":79,"author":{"gitId":"Zaiah0505"},"content":"            throw new NoSuchElementException(\"Error: Please include the index of the task.\");"},{"lineNumber":80,"author":{"gitId":"Zaiah0505"},"content":"        } catch (IndexOutOfBoundsException e) {"},{"lineNumber":81,"author":{"gitId":"Zaiah0505"},"content":"            throw new IndexOutOfBoundsException(\"Error: Please enter a number within the list.\");"},{"lineNumber":82,"author":{"gitId":"Zaiah0505"},"content":"        }"},{"lineNumber":83,"author":{"gitId":"Zaiah0505"},"content":""},{"lineNumber":84,"author":{"gitId":"Zaiah0505"},"content":"        saveToDisk();"},{"lineNumber":85,"author":{"gitId":"Zaiah0505"},"content":""},{"lineNumber":86,"author":{"gitId":"Zaiah0505"},"content":"        return \"I\u0027ve removed the task:\\n\""},{"lineNumber":87,"author":{"gitId":"Zaiah0505"},"content":"                + taskToRemove.toString()"},{"lineNumber":88,"author":{"gitId":"Zaiah0505"},"content":"                + taskCountMsg();"},{"lineNumber":89,"author":{"gitId":"Zaiah0505"},"content":"    }"},{"lineNumber":90,"author":{"gitId":"Zaiah0505"},"content":""},{"lineNumber":91,"author":{"gitId":"Zaiah0505"},"content":"    public String listTasks() {"},{"lineNumber":92,"author":{"gitId":"Zaiah0505"},"content":"        return \"Here is your list of tasks: \\n\" + Formatter.formatList(taskList"},{"lineNumber":93,"author":{"gitId":"Zaiah0505"},"content":"                .stream()"},{"lineNumber":94,"author":{"gitId":"Zaiah0505"},"content":"                .map(Task::toString)"},{"lineNumber":95,"author":{"gitId":"Zaiah0505"},"content":"                .collect(Collectors.toList())"},{"lineNumber":96,"author":{"gitId":"Zaiah0505"},"content":"        );"},{"lineNumber":97,"author":{"gitId":"Zaiah0505"},"content":"    }"},{"lineNumber":98,"author":{"gitId":"Zaiah0505"},"content":""},{"lineNumber":99,"author":{"gitId":"Zaiah0505"},"content":"    public String findTask(HashMap\u003cString, String\u003e argMap) throws NoSuchElementException {"},{"lineNumber":100,"author":{"gitId":"Zaiah0505"},"content":"        if (!argMap.containsKey(\"desc\")) {"},{"lineNumber":101,"author":{"gitId":"Zaiah0505"},"content":"            throw new NoSuchElementException(\"Error: Search keyword cannot be empty.\");"},{"lineNumber":102,"author":{"gitId":"Zaiah0505"},"content":"        }"},{"lineNumber":103,"author":{"gitId":"Zaiah0505"},"content":""},{"lineNumber":104,"author":{"gitId":"Zaiah0505"},"content":"        return \"Tasks that match \\\"\" + argMap.get(\"desc\") + \"\\\": \\n\" + Formatter.formatList(taskList"},{"lineNumber":105,"author":{"gitId":"Zaiah0505"},"content":"                .stream()"},{"lineNumber":106,"author":{"gitId":"Zaiah0505"},"content":"                .map(Task::toString)"},{"lineNumber":107,"author":{"gitId":"Zaiah0505"},"content":"                .filter(t -\u003e t.contains(argMap.get(\"desc\")))"},{"lineNumber":108,"author":{"gitId":"Zaiah0505"},"content":"                .collect(Collectors.toList())"},{"lineNumber":109,"author":{"gitId":"Zaiah0505"},"content":"        );"},{"lineNumber":110,"author":{"gitId":"Zaiah0505"},"content":"    }"},{"lineNumber":111,"author":{"gitId":"Zaiah0505"},"content":""},{"lineNumber":112,"author":{"gitId":"Zaiah0505"},"content":"    public boolean saveToDisk() {"},{"lineNumber":113,"author":{"gitId":"Zaiah0505"},"content":"        StringBuilder saveLines \u003d new StringBuilder();"},{"lineNumber":114,"author":{"gitId":"Zaiah0505"},"content":"        for (Task t : taskList) {"},{"lineNumber":115,"author":{"gitId":"Zaiah0505"},"content":"            saveLines.append(t.toSaveFormat()).append(\u0027\\n\u0027);"},{"lineNumber":116,"author":{"gitId":"Zaiah0505"},"content":"        }"},{"lineNumber":117,"author":{"gitId":"Zaiah0505"},"content":""},{"lineNumber":118,"author":{"gitId":"Zaiah0505"},"content":"        try {"},{"lineNumber":119,"author":{"gitId":"Zaiah0505"},"content":"            Storage.writeSave(saveLines.toString());"},{"lineNumber":120,"author":{"gitId":"Zaiah0505"},"content":"        } catch (IOException e) {"},{"lineNumber":121,"author":{"gitId":"Zaiah0505"},"content":"            return false;"},{"lineNumber":122,"author":{"gitId":"Zaiah0505"},"content":"        }"},{"lineNumber":123,"author":{"gitId":"Zaiah0505"},"content":""},{"lineNumber":124,"author":{"gitId":"Zaiah0505"},"content":"        return true;"},{"lineNumber":125,"author":{"gitId":"Zaiah0505"},"content":"    }"},{"lineNumber":126,"author":{"gitId":"Zaiah0505"},"content":""},{"lineNumber":127,"author":{"gitId":"Zaiah0505"},"content":"    public boolean readFromDisk() {"},{"lineNumber":128,"author":{"gitId":"Zaiah0505"},"content":"        File file;"},{"lineNumber":129,"author":{"gitId":"Zaiah0505"},"content":"        Scanner sc;"},{"lineNumber":130,"author":{"gitId":"Zaiah0505"},"content":"        try {"},{"lineNumber":131,"author":{"gitId":"Zaiah0505"},"content":"            file \u003d Storage.getFile();"},{"lineNumber":132,"author":{"gitId":"Zaiah0505"},"content":"            sc \u003d new Scanner(file);"},{"lineNumber":133,"author":{"gitId":"Zaiah0505"},"content":"        } catch (IOException e) {"},{"lineNumber":134,"author":{"gitId":"Zaiah0505"},"content":"            return false;"},{"lineNumber":135,"author":{"gitId":"Zaiah0505"},"content":"        }"},{"lineNumber":136,"author":{"gitId":"Zaiah0505"},"content":""},{"lineNumber":137,"author":{"gitId":"Zaiah0505"},"content":"        while (sc.hasNextLine()) {"},{"lineNumber":138,"author":{"gitId":"Zaiah0505"},"content":"            String saveLine \u003d sc.nextLine();"},{"lineNumber":139,"author":{"gitId":"Zaiah0505"},"content":"            String command \u003d getCommand(saveLine);"},{"lineNumber":140,"author":{"gitId":"Zaiah0505"},"content":"            HashMap\u003cString, String\u003e argMap \u003d getArgMap(saveLine);"},{"lineNumber":141,"author":{"gitId":"Zaiah0505"},"content":"            Task newTask;"},{"lineNumber":142,"author":{"gitId":"Zaiah0505"},"content":""},{"lineNumber":143,"author":{"gitId":"Zaiah0505"},"content":"            switch (command) {"},{"lineNumber":144,"author":{"gitId":"Zaiah0505"},"content":"                case ToDo.COMMAND_STRING:"},{"lineNumber":145,"author":{"gitId":"Zaiah0505"},"content":"                    newTask \u003d ToDo.newInstance(argMap);"},{"lineNumber":146,"author":{"gitId":"Zaiah0505"},"content":"                    break;"},{"lineNumber":147,"author":{"gitId":"Zaiah0505"},"content":"                case Deadline.COMMAND_STRING:"},{"lineNumber":148,"author":{"gitId":"Zaiah0505"},"content":"                    newTask \u003d Deadline.newInstance(argMap);"},{"lineNumber":149,"author":{"gitId":"Zaiah0505"},"content":"                    break;"},{"lineNumber":150,"author":{"gitId":"Zaiah0505"},"content":"                default:"},{"lineNumber":151,"author":{"gitId":"Zaiah0505"},"content":"                    newTask \u003d Event.newInstance(argMap);"},{"lineNumber":152,"author":{"gitId":"Zaiah0505"},"content":"                    break;"},{"lineNumber":153,"author":{"gitId":"Zaiah0505"},"content":"            }"},{"lineNumber":154,"author":{"gitId":"Zaiah0505"},"content":""},{"lineNumber":155,"author":{"gitId":"Zaiah0505"},"content":"            taskList.add(newTask);"},{"lineNumber":156,"author":{"gitId":"Zaiah0505"},"content":"        }"},{"lineNumber":157,"author":{"gitId":"Zaiah0505"},"content":""},{"lineNumber":158,"author":{"gitId":"Zaiah0505"},"content":"        return true;"},{"lineNumber":159,"author":{"gitId":"Zaiah0505"},"content":"    }"},{"lineNumber":160,"author":{"gitId":"Zaiah0505"},"content":"}"}],"authorContributionMap":{"Zaiah0505":160}},{"path":"src/main/java/ToDo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Zaiah0505"},"content":"import java.util.HashMap;"},{"lineNumber":2,"author":{"gitId":"Zaiah0505"},"content":"import java.util.NoSuchElementException;"},{"lineNumber":3,"author":{"gitId":"Zaiah0505"},"content":""},{"lineNumber":4,"author":{"gitId":"Zaiah0505"},"content":"public class ToDo extends Task {"},{"lineNumber":5,"author":{"gitId":"Zaiah0505"},"content":"    public static final String COMMAND_STRING \u003d \"todo\";"},{"lineNumber":6,"author":{"gitId":"Zaiah0505"},"content":""},{"lineNumber":7,"author":{"gitId":"Zaiah0505"},"content":"    public ToDo(String description) {"},{"lineNumber":8,"author":{"gitId":"Zaiah0505"},"content":"        super(description);"},{"lineNumber":9,"author":{"gitId":"Zaiah0505"},"content":"    }"},{"lineNumber":10,"author":{"gitId":"Zaiah0505"},"content":""},{"lineNumber":11,"author":{"gitId":"Zaiah0505"},"content":"    public ToDo(String description, boolean isDone) {"},{"lineNumber":12,"author":{"gitId":"Zaiah0505"},"content":"        super(description, isDone);"},{"lineNumber":13,"author":{"gitId":"Zaiah0505"},"content":"    }"},{"lineNumber":14,"author":{"gitId":"Zaiah0505"},"content":""},{"lineNumber":15,"author":{"gitId":"Zaiah0505"},"content":"    public static ToDo newInstance(HashMap\u003cString, String\u003e argMap) throws NoSuchElementException {"},{"lineNumber":16,"author":{"gitId":"Zaiah0505"},"content":"        if (!argMap.containsKey(\"desc\")) {"},{"lineNumber":17,"author":{"gitId":"Zaiah0505"},"content":"            throw new NoSuchElementException(\"Error: The description for todo cannot be empty.\");"},{"lineNumber":18,"author":{"gitId":"Zaiah0505"},"content":"        }"},{"lineNumber":19,"author":{"gitId":"Zaiah0505"},"content":""},{"lineNumber":20,"author":{"gitId":"Zaiah0505"},"content":"        String desc \u003d argMap.get(\"desc\");"},{"lineNumber":21,"author":{"gitId":"Zaiah0505"},"content":"        return new ToDo(desc, argMap.containsKey(\"done\"));"},{"lineNumber":22,"author":{"gitId":"Zaiah0505"},"content":"    }"},{"lineNumber":23,"author":{"gitId":"Zaiah0505"},"content":""},{"lineNumber":24,"author":{"gitId":"Zaiah0505"},"content":"    @Override"},{"lineNumber":25,"author":{"gitId":"Zaiah0505"},"content":"    public String toString() {"},{"lineNumber":26,"author":{"gitId":"Zaiah0505"},"content":"        return \"[T]\" + super.toString();"},{"lineNumber":27,"author":{"gitId":"Zaiah0505"},"content":"    }"},{"lineNumber":28,"author":{"gitId":"Zaiah0505"},"content":""},{"lineNumber":29,"author":{"gitId":"Zaiah0505"},"content":"    @Override"},{"lineNumber":30,"author":{"gitId":"Zaiah0505"},"content":"    protected HashMap\u003cString, String\u003e saveArgs() {"},{"lineNumber":31,"author":{"gitId":"Zaiah0505"},"content":"        HashMap\u003cString, String\u003e argMap \u003d new HashMap\u003c\u003e();"},{"lineNumber":32,"author":{"gitId":"Zaiah0505"},"content":"        return argMap;"},{"lineNumber":33,"author":{"gitId":"Zaiah0505"},"content":"    }"},{"lineNumber":34,"author":{"gitId":"Zaiah0505"},"content":""},{"lineNumber":35,"author":{"gitId":"Zaiah0505"},"content":"    @Override"},{"lineNumber":36,"author":{"gitId":"Zaiah0505"},"content":"    public String commandString() {"},{"lineNumber":37,"author":{"gitId":"Zaiah0505"},"content":"        return COMMAND_STRING;"},{"lineNumber":38,"author":{"gitId":"Zaiah0505"},"content":"    }"},{"lineNumber":39,"author":{"gitId":"Zaiah0505"},"content":"}"}],"authorContributionMap":{"Zaiah0505":39}},{"path":"src/main/java/util/Formatter.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Zaiah0505"},"content":"package util;"},{"lineNumber":2,"author":{"gitId":"Zaiah0505"},"content":""},{"lineNumber":3,"author":{"gitId":"Zaiah0505"},"content":"import java.util.List;"},{"lineNumber":4,"author":{"gitId":"Zaiah0505"},"content":""},{"lineNumber":5,"author":{"gitId":"Zaiah0505"},"content":"public interface Formatter {"},{"lineNumber":6,"author":{"gitId":"Zaiah0505"},"content":"    static String formatOut(String output) {"},{"lineNumber":7,"author":{"gitId":"Zaiah0505"},"content":"        String opening \u003d \"\\\"----------------------------------------\\n\";"},{"lineNumber":8,"author":{"gitId":"Zaiah0505"},"content":"        String closing \u003d \"----------------------------------------\\\"\\n\";"},{"lineNumber":9,"author":{"gitId":"Zaiah0505"},"content":"        String combined \u003d opening + output + \"\\n\" + closing;"},{"lineNumber":10,"author":{"gitId":"Zaiah0505"},"content":""},{"lineNumber":11,"author":{"gitId":"Zaiah0505"},"content":"        String[] strArray \u003d combined.split(\"\\n\");"},{"lineNumber":12,"author":{"gitId":"Zaiah0505"},"content":"        StringBuilder stringBuilder \u003d new StringBuilder();"},{"lineNumber":13,"author":{"gitId":"Zaiah0505"},"content":"        for (String s : strArray) {"},{"lineNumber":14,"author":{"gitId":"Zaiah0505"},"content":"            stringBuilder.append(\"\\t\").append(s).append(\"\\n\");"},{"lineNumber":15,"author":{"gitId":"Zaiah0505"},"content":"        }"},{"lineNumber":16,"author":{"gitId":"Zaiah0505"},"content":""},{"lineNumber":17,"author":{"gitId":"Zaiah0505"},"content":"        return stringBuilder.toString();"},{"lineNumber":18,"author":{"gitId":"Zaiah0505"},"content":"    }"},{"lineNumber":19,"author":{"gitId":"Zaiah0505"},"content":""},{"lineNumber":20,"author":{"gitId":"Zaiah0505"},"content":"    static String formatList(String[] strArray) {"},{"lineNumber":21,"author":{"gitId":"Zaiah0505"},"content":"        for (int i \u003d 0; i \u003c strArray.length; i++) {"},{"lineNumber":22,"author":{"gitId":"Zaiah0505"},"content":"            strArray[i] \u003d (i + 1) + \". \" + strArray[i];"},{"lineNumber":23,"author":{"gitId":"Zaiah0505"},"content":"        }"},{"lineNumber":24,"author":{"gitId":"Zaiah0505"},"content":"        return String.join(\"\\n\", strArray);"},{"lineNumber":25,"author":{"gitId":"Zaiah0505"},"content":"    }"},{"lineNumber":26,"author":{"gitId":"Zaiah0505"},"content":""},{"lineNumber":27,"author":{"gitId":"Zaiah0505"},"content":"    static String formatList(List\u003cString\u003e strList) {"},{"lineNumber":28,"author":{"gitId":"Zaiah0505"},"content":"        return formatList(strList.toArray(new String[]{}));"},{"lineNumber":29,"author":{"gitId":"Zaiah0505"},"content":"    }"},{"lineNumber":30,"author":{"gitId":"Zaiah0505"},"content":"}"}],"authorContributionMap":{"Zaiah0505":30}},{"path":"src/main/java/util/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Zaiah0505"},"content":"package util;"},{"lineNumber":2,"author":{"gitId":"Zaiah0505"},"content":""},{"lineNumber":3,"author":{"gitId":"Zaiah0505"},"content":"import java.util.HashMap;"},{"lineNumber":4,"author":{"gitId":"Zaiah0505"},"content":"import java.util.InputMismatchException;"},{"lineNumber":5,"author":{"gitId":"Zaiah0505"},"content":""},{"lineNumber":6,"author":{"gitId":"Zaiah0505"},"content":"public interface Parser {"},{"lineNumber":7,"author":{"gitId":"Zaiah0505"},"content":"    static String getCommand(String input) {"},{"lineNumber":8,"author":{"gitId":"Zaiah0505"},"content":"        return input.split(\" \", 2)[0];"},{"lineNumber":9,"author":{"gitId":"Zaiah0505"},"content":"    }"},{"lineNumber":10,"author":{"gitId":"Zaiah0505"},"content":""},{"lineNumber":11,"author":{"gitId":"Zaiah0505"},"content":"    static HashMap\u003cString, String\u003e getArgMap(String input) throws InputMismatchException {"},{"lineNumber":12,"author":{"gitId":"Zaiah0505"},"content":"        HashMap\u003cString, String\u003e argMap \u003d new HashMap\u003c\u003e();"},{"lineNumber":13,"author":{"gitId":"Zaiah0505"},"content":""},{"lineNumber":14,"author":{"gitId":"Zaiah0505"},"content":"        if (input.split(\" \").length \u003c 2) {"},{"lineNumber":15,"author":{"gitId":"Zaiah0505"},"content":"            return argMap;"},{"lineNumber":16,"author":{"gitId":"Zaiah0505"},"content":"        }"},{"lineNumber":17,"author":{"gitId":"Zaiah0505"},"content":""},{"lineNumber":18,"author":{"gitId":"Zaiah0505"},"content":"        String[] argArr \u003d input.split(\"/\");"},{"lineNumber":19,"author":{"gitId":"Zaiah0505"},"content":"        for (int i \u003d 0; i \u003c argArr.length; i++) {"},{"lineNumber":20,"author":{"gitId":"Zaiah0505"},"content":"            String flag;"},{"lineNumber":21,"author":{"gitId":"Zaiah0505"},"content":"            String param;"},{"lineNumber":22,"author":{"gitId":"Zaiah0505"},"content":""},{"lineNumber":23,"author":{"gitId":"Zaiah0505"},"content":"            if (i \u003d\u003d 0) {"},{"lineNumber":24,"author":{"gitId":"Zaiah0505"},"content":"                flag \u003d \"desc\";"},{"lineNumber":25,"author":{"gitId":"Zaiah0505"},"content":"            } else {"},{"lineNumber":26,"author":{"gitId":"Zaiah0505"},"content":"                flag \u003d argArr[i].split(\" \", 2)[0];"},{"lineNumber":27,"author":{"gitId":"Zaiah0505"},"content":"            }"},{"lineNumber":28,"author":{"gitId":"Zaiah0505"},"content":""},{"lineNumber":29,"author":{"gitId":"Zaiah0505"},"content":"            try {"},{"lineNumber":30,"author":{"gitId":"Zaiah0505"},"content":"                param \u003d argArr[i].split(\" \", 2)[1];"},{"lineNumber":31,"author":{"gitId":"Zaiah0505"},"content":"            } catch (ArrayIndexOutOfBoundsException e) {"},{"lineNumber":32,"author":{"gitId":"Zaiah0505"},"content":"                throw new InputMismatchException(\"Parameter for \\\"\" + flag + \"\\\" cannot be empty\");"},{"lineNumber":33,"author":{"gitId":"Zaiah0505"},"content":"            }"},{"lineNumber":34,"author":{"gitId":"Zaiah0505"},"content":"            argMap.put(flag, param);"},{"lineNumber":35,"author":{"gitId":"Zaiah0505"},"content":"        }"},{"lineNumber":36,"author":{"gitId":"Zaiah0505"},"content":"        return argMap;"},{"lineNumber":37,"author":{"gitId":"Zaiah0505"},"content":"    }"},{"lineNumber":38,"author":{"gitId":"Zaiah0505"},"content":""},{"lineNumber":39,"author":{"gitId":"Zaiah0505"},"content":"}"}],"authorContributionMap":{"Zaiah0505":39}},{"path":"src/main/java/util/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Zaiah0505"},"content":"package util;"},{"lineNumber":2,"author":{"gitId":"Zaiah0505"},"content":""},{"lineNumber":3,"author":{"gitId":"Zaiah0505"},"content":"import java.io.File;"},{"lineNumber":4,"author":{"gitId":"Zaiah0505"},"content":"import java.io.FileWriter;"},{"lineNumber":5,"author":{"gitId":"Zaiah0505"},"content":"import java.io.IOException;"},{"lineNumber":6,"author":{"gitId":"Zaiah0505"},"content":"import java.nio.file.Path;"},{"lineNumber":7,"author":{"gitId":"Zaiah0505"},"content":"import java.nio.file.Paths;"},{"lineNumber":8,"author":{"gitId":"Zaiah0505"},"content":"import java.util.Scanner;"},{"lineNumber":9,"author":{"gitId":"Zaiah0505"},"content":""},{"lineNumber":10,"author":{"gitId":"Zaiah0505"},"content":"public interface Storage {"},{"lineNumber":11,"author":{"gitId":"Zaiah0505"},"content":"    Path SAVE_PATH \u003d Paths.get(\"data\", \"sweh.txt\");"},{"lineNumber":12,"author":{"gitId":"Zaiah0505"},"content":""},{"lineNumber":13,"author":{"gitId":"Zaiah0505"},"content":"    static File getFile() throws IOException {"},{"lineNumber":14,"author":{"gitId":"Zaiah0505"},"content":"        File file \u003d new File(SAVE_PATH.toString());"},{"lineNumber":15,"author":{"gitId":"Zaiah0505"},"content":"        (new File(SAVE_PATH.getParent().toString())).mkdir();"},{"lineNumber":16,"author":{"gitId":"Zaiah0505"},"content":"        file.createNewFile();"},{"lineNumber":17,"author":{"gitId":"Zaiah0505"},"content":"        return file;"},{"lineNumber":18,"author":{"gitId":"Zaiah0505"},"content":"    }"},{"lineNumber":19,"author":{"gitId":"Zaiah0505"},"content":""},{"lineNumber":20,"author":{"gitId":"Zaiah0505"},"content":"    static void writeSave(String lines) throws IOException {"},{"lineNumber":21,"author":{"gitId":"Zaiah0505"},"content":"        FileWriter fw \u003d new FileWriter(getFile());"},{"lineNumber":22,"author":{"gitId":"Zaiah0505"},"content":"        fw.write(lines);"},{"lineNumber":23,"author":{"gitId":"Zaiah0505"},"content":"        fw.close();"},{"lineNumber":24,"author":{"gitId":"Zaiah0505"},"content":"    }"},{"lineNumber":25,"author":{"gitId":"Zaiah0505"},"content":""},{"lineNumber":26,"author":{"gitId":"Zaiah0505"},"content":"    static String readSave() throws IOException {"},{"lineNumber":27,"author":{"gitId":"Zaiah0505"},"content":"        File file \u003d getFile();"},{"lineNumber":28,"author":{"gitId":"Zaiah0505"},"content":"        Scanner sc \u003d new Scanner(file);"},{"lineNumber":29,"author":{"gitId":"Zaiah0505"},"content":"        StringBuilder output \u003d new StringBuilder();"},{"lineNumber":30,"author":{"gitId":"Zaiah0505"},"content":"        while (sc.hasNext()) {"},{"lineNumber":31,"author":{"gitId":"Zaiah0505"},"content":"            output.append(sc.nextLine());"},{"lineNumber":32,"author":{"gitId":"Zaiah0505"},"content":"        }"},{"lineNumber":33,"author":{"gitId":"Zaiah0505"},"content":"        sc.close();"},{"lineNumber":34,"author":{"gitId":"Zaiah0505"},"content":"        return output.toString();"},{"lineNumber":35,"author":{"gitId":"Zaiah0505"},"content":"    }"},{"lineNumber":36,"author":{"gitId":"Zaiah0505"},"content":"}"}],"authorContributionMap":{"Zaiah0505":36}},{"path":"src/main/java/util/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Zaiah0505"},"content":"package util;"},{"lineNumber":2,"author":{"gitId":"Zaiah0505"},"content":""},{"lineNumber":3,"author":{"gitId":"Zaiah0505"},"content":"public interface Ui {"},{"lineNumber":4,"author":{"gitId":"Zaiah0505"},"content":"    static String greeting() {"},{"lineNumber":5,"author":{"gitId":"Zaiah0505"},"content":"        String logo \u003d \" _____  _    _ _____ _   _ \\n\" +"},{"lineNumber":6,"author":{"gitId":"Zaiah0505"},"content":"                \"/  ___|| |  | |  ___| | | | \\n\" +"},{"lineNumber":7,"author":{"gitId":"Zaiah0505"},"content":"                \"\\\\ `--. | |  | | |__ | |_| | \\n\" +"},{"lineNumber":8,"author":{"gitId":"Zaiah0505"},"content":"                \" `--. \\\\| |/\\\\| |  __||  _  | \\n\" +"},{"lineNumber":9,"author":{"gitId":"Zaiah0505"},"content":"                \"/\\\\__/ /\\\\  /\\\\  / |___| | | | \\n\" +"},{"lineNumber":10,"author":{"gitId":"Zaiah0505"},"content":"                \"\\\\____/  \\\\/  \\\\/\\\\____/\\\\_| |_/ \\n\";"},{"lineNumber":11,"author":{"gitId":"Zaiah0505"},"content":""},{"lineNumber":12,"author":{"gitId":"Zaiah0505"},"content":"        return \"Hello, I am\\n\""},{"lineNumber":13,"author":{"gitId":"Zaiah0505"},"content":"                + logo"},{"lineNumber":14,"author":{"gitId":"Zaiah0505"},"content":"                + \"\\nYour Simple Word-Executed Helper!\""},{"lineNumber":15,"author":{"gitId":"Zaiah0505"},"content":"                + \"\\nWhat shall we do today?\\n\";"},{"lineNumber":16,"author":{"gitId":"Zaiah0505"},"content":"    }"},{"lineNumber":17,"author":{"gitId":"Zaiah0505"},"content":""},{"lineNumber":18,"author":{"gitId":"Zaiah0505"},"content":"    static String echo(String input) {"},{"lineNumber":19,"author":{"gitId":"Zaiah0505"},"content":"        return input;"},{"lineNumber":20,"author":{"gitId":"Zaiah0505"},"content":"    }"},{"lineNumber":21,"author":{"gitId":"Zaiah0505"},"content":"}"}],"authorContributionMap":{"Zaiah0505":21}},{"path":"src/test/util/ParserTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Zaiah0505"},"content":"package util;"},{"lineNumber":2,"author":{"gitId":"Zaiah0505"},"content":""},{"lineNumber":3,"author":{"gitId":"Zaiah0505"},"content":"import org.junit.jupiter.api.Test;"},{"lineNumber":4,"author":{"gitId":"Zaiah0505"},"content":""},{"lineNumber":5,"author":{"gitId":"Zaiah0505"},"content":"import java.util.HashMap;"},{"lineNumber":6,"author":{"gitId":"Zaiah0505"},"content":""},{"lineNumber":7,"author":{"gitId":"Zaiah0505"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;"},{"lineNumber":8,"author":{"gitId":"Zaiah0505"},"content":""},{"lineNumber":9,"author":{"gitId":"Zaiah0505"},"content":"class ParserTest {"},{"lineNumber":10,"author":{"gitId":"Zaiah0505"},"content":""},{"lineNumber":11,"author":{"gitId":"Zaiah0505"},"content":"    @Test"},{"lineNumber":12,"author":{"gitId":"Zaiah0505"},"content":"    void getCommand() {"},{"lineNumber":13,"author":{"gitId":"Zaiah0505"},"content":"    }"},{"lineNumber":14,"author":{"gitId":"Zaiah0505"},"content":""},{"lineNumber":15,"author":{"gitId":"Zaiah0505"},"content":"    @Test"},{"lineNumber":16,"author":{"gitId":"Zaiah0505"},"content":"    void getArgMap1() {"},{"lineNumber":17,"author":{"gitId":"Zaiah0505"},"content":"        HashMap\u003cString, String\u003e testMap \u003d new HashMap\u003c\u003e();"},{"lineNumber":18,"author":{"gitId":"Zaiah0505"},"content":"        assertEquals(testMap, Parser.getArgMap(\"todo \"));"},{"lineNumber":19,"author":{"gitId":"Zaiah0505"},"content":"    }"},{"lineNumber":20,"author":{"gitId":"Zaiah0505"},"content":""},{"lineNumber":21,"author":{"gitId":"Zaiah0505"},"content":"    @Test"},{"lineNumber":22,"author":{"gitId":"Zaiah0505"},"content":"    void getArgMap2() {"},{"lineNumber":23,"author":{"gitId":"Zaiah0505"},"content":"        HashMap\u003cString, String\u003e testMap \u003d new HashMap\u003c\u003e();"},{"lineNumber":24,"author":{"gitId":"Zaiah0505"},"content":"        testMap.put(\"desc\", \"\");"},{"lineNumber":25,"author":{"gitId":"Zaiah0505"},"content":"        testMap.put(\"at\", \"123 \");"},{"lineNumber":26,"author":{"gitId":"Zaiah0505"},"content":"        testMap.put(\"done\", \"\");"},{"lineNumber":27,"author":{"gitId":"Zaiah0505"},"content":"        assertEquals(testMap, Parser.getArgMap(\"todo /at 123 /done \"));"},{"lineNumber":28,"author":{"gitId":"Zaiah0505"},"content":"    }"},{"lineNumber":29,"author":{"gitId":"Zaiah0505"},"content":"}"}],"authorContributionMap":{"Zaiah0505":29}},{"path":"src/test/util/StorageTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Zaiah0505"},"content":"package util;"},{"lineNumber":2,"author":{"gitId":"Zaiah0505"},"content":""},{"lineNumber":3,"author":{"gitId":"Zaiah0505"},"content":"import org.junit.jupiter.api.Test;"},{"lineNumber":4,"author":{"gitId":"Zaiah0505"},"content":""},{"lineNumber":5,"author":{"gitId":"Zaiah0505"},"content":"import java.io.IOException;"},{"lineNumber":6,"author":{"gitId":"Zaiah0505"},"content":""},{"lineNumber":7,"author":{"gitId":"Zaiah0505"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;"},{"lineNumber":8,"author":{"gitId":"Zaiah0505"},"content":""},{"lineNumber":9,"author":{"gitId":"Zaiah0505"},"content":"class StorageTest {"},{"lineNumber":10,"author":{"gitId":"Zaiah0505"},"content":""},{"lineNumber":11,"author":{"gitId":"Zaiah0505"},"content":"    @org.junit.jupiter.api.Test"},{"lineNumber":12,"author":{"gitId":"Zaiah0505"},"content":"    void writeSave() throws IOException {"},{"lineNumber":13,"author":{"gitId":"Zaiah0505"},"content":"        Storage.writeSave(\"sweg\");"},{"lineNumber":14,"author":{"gitId":"Zaiah0505"},"content":"        assertEquals(\"sweg\", Storage.readSave());"},{"lineNumber":15,"author":{"gitId":"Zaiah0505"},"content":"    }"},{"lineNumber":16,"author":{"gitId":"Zaiah0505"},"content":""},{"lineNumber":17,"author":{"gitId":"Zaiah0505"},"content":"    @Test"},{"lineNumber":18,"author":{"gitId":"Zaiah0505"},"content":"    void getFile() throws IOException {"},{"lineNumber":19,"author":{"gitId":"Zaiah0505"},"content":"        assertEquals(\"data\\\\sweh.txt\", Storage.getFile().toString());"},{"lineNumber":20,"author":{"gitId":"Zaiah0505"},"content":"    }"},{"lineNumber":21,"author":{"gitId":"Zaiah0505"},"content":"}"}],"authorContributionMap":{"Zaiah0505":21}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"Zaiah0505"},"content":"asdf"},{"lineNumber":2,"author":{"gitId":"Zaiah0505"},"content":"event Gym with the boys /at 2pm"},{"lineNumber":3,"author":{"gitId":"Zaiah0505"},"content":"deadline Finish 2103 iP /by Thu"},{"lineNumber":4,"author":{"gitId":"Zaiah0505"},"content":"done 2"},{"lineNumber":5,"author":{"gitId":"Zaiah0505"},"content":"todo Make CS2040 TA Slides"},{"lineNumber":6,"author":{"gitId":"Zaiah0505"},"content":"list"},{"lineNumber":7,"author":{"gitId":"Zaiah0505"},"content":"bye"}],"authorContributionMap":{"Zaiah0505":7}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF"},{"lineNumber":2,"author":{"gitId":"-"},"content":""},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin"},{"lineNumber":5,"author":{"gitId":"-"},"content":""},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run"},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT"},{"lineNumber":8,"author":{"gitId":"-"},"content":""},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder"},{"lineNumber":10,"author":{"gitId":"-"},"content":"javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\*.java"},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 ("},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1"},{"lineNumber":14,"author":{"gitId":"-"},"content":")"},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0"},{"lineNumber":16,"author":{"gitId":"-"},"content":""},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"},{"lineNumber":18,"author":{"gitId":"Zaiah0505"},"content":"java -classpath ..\\bin Sweh \u003c input.txt \u003e ACTUAL.TXT"},{"lineNumber":19,"author":{"gitId":"-"},"content":""},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM compare the output to the expected output"},{"lineNumber":21,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT"}],"authorContributionMap":{"Zaiah0505":1,"-":20}}]
