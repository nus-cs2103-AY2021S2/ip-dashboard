[{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027checkstyle\u0027"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027"},{"lineNumber":6,"author":{"gitId":"-"},"content":"}"},{"lineNumber":7,"author":{"gitId":"-"},"content":""},{"lineNumber":8,"author":{"gitId":"-"},"content":"repositories {"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    mavenCentral()"},{"lineNumber":10,"author":{"gitId":"-"},"content":"}"},{"lineNumber":11,"author":{"gitId":"-"},"content":""},{"lineNumber":12,"author":{"gitId":"-"},"content":"dependencies {"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.5.0\u0027"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.5.0\u0027"},{"lineNumber":15,"author":{"gitId":"banchiang"},"content":""},{"lineNumber":16,"author":{"gitId":"banchiang"},"content":"    String javaFxVersion \u003d \u002711\u0027"},{"lineNumber":17,"author":{"gitId":"banchiang"},"content":""},{"lineNumber":18,"author":{"gitId":"banchiang"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027"},{"lineNumber":19,"author":{"gitId":"banchiang"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"},{"lineNumber":20,"author":{"gitId":"banchiang"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"},{"lineNumber":21,"author":{"gitId":"banchiang"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027"},{"lineNumber":22,"author":{"gitId":"banchiang"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"},{"lineNumber":23,"author":{"gitId":"banchiang"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"},{"lineNumber":24,"author":{"gitId":"banchiang"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027"},{"lineNumber":25,"author":{"gitId":"banchiang"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"},{"lineNumber":26,"author":{"gitId":"banchiang"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"},{"lineNumber":27,"author":{"gitId":"banchiang"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027"},{"lineNumber":28,"author":{"gitId":"banchiang"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"},{"lineNumber":29,"author":{"gitId":"banchiang"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"},{"lineNumber":30,"author":{"gitId":"-"},"content":"}"},{"lineNumber":31,"author":{"gitId":"-"},"content":""},{"lineNumber":32,"author":{"gitId":"-"},"content":"test {"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    useJUnitPlatform()"},{"lineNumber":34,"author":{"gitId":"-"},"content":""},{"lineNumber":35,"author":{"gitId":"-"},"content":"    testLogging {"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\""},{"lineNumber":37,"author":{"gitId":"-"},"content":""},{"lineNumber":38,"author":{"gitId":"-"},"content":"        showExceptions true"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\""},{"lineNumber":40,"author":{"gitId":"-"},"content":"        showCauses true"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        showStackTraces true"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":44,"author":{"gitId":"-"},"content":"}"},{"lineNumber":45,"author":{"gitId":"-"},"content":""},{"lineNumber":46,"author":{"gitId":"-"},"content":"application {"},{"lineNumber":47,"author":{"gitId":"banchiang"},"content":"    mainClassName \u003d \"duke.Duke\""},{"lineNumber":48,"author":{"gitId":"-"},"content":"}"},{"lineNumber":49,"author":{"gitId":"-"},"content":""},{"lineNumber":50,"author":{"gitId":"-"},"content":"shadowJar {"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    archiveBaseName \u003d \"duke\""},{"lineNumber":52,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null"},{"lineNumber":53,"author":{"gitId":"-"},"content":"}"},{"lineNumber":54,"author":{"gitId":"-"},"content":""},{"lineNumber":55,"author":{"gitId":"-"},"content":"checkstyle {"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    toolVersion \u003d \u00278.29\u0027"},{"lineNumber":57,"author":{"gitId":"-"},"content":"}"},{"lineNumber":58,"author":{"gitId":"-"},"content":""},{"lineNumber":59,"author":{"gitId":"-"},"content":"run{"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in"},{"lineNumber":61,"author":{"gitId":"-"},"content":"}"}],"authorContributionMap":{"banchiang":16,"-":45}},{"path":"data/data.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"banchiang"},"content":"T | X | return book"},{"lineNumber":2,"author":{"gitId":"banchiang"},"content":"T |   | burn book"}],"authorContributionMap":{"banchiang":2}},{"path":"src/main/java/duke/AddCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"banchiang"},"content":"package duke;"},{"lineNumber":2,"author":{"gitId":"banchiang"},"content":""},{"lineNumber":3,"author":{"gitId":"banchiang"},"content":"public class AddCommand extends Command {"},{"lineNumber":4,"author":{"gitId":"banchiang"},"content":"    private String taskType;"},{"lineNumber":5,"author":{"gitId":"banchiang"},"content":"    private String taskInfo;"},{"lineNumber":6,"author":{"gitId":"banchiang"},"content":""},{"lineNumber":7,"author":{"gitId":"banchiang"},"content":"    /**"},{"lineNumber":8,"author":{"gitId":"banchiang"},"content":"     * Constructor for add command."},{"lineNumber":9,"author":{"gitId":"banchiang"},"content":"     *"},{"lineNumber":10,"author":{"gitId":"banchiang"},"content":"     * @param taskType Type of task to add."},{"lineNumber":11,"author":{"gitId":"banchiang"},"content":"     * @param taskInfo Information of task to be parsed."},{"lineNumber":12,"author":{"gitId":"banchiang"},"content":"     */"},{"lineNumber":13,"author":{"gitId":"banchiang"},"content":"    public AddCommand(String taskType, String taskInfo) {"},{"lineNumber":14,"author":{"gitId":"banchiang"},"content":"        super();"},{"lineNumber":15,"author":{"gitId":"banchiang"},"content":"        this.taskType \u003d taskType;"},{"lineNumber":16,"author":{"gitId":"banchiang"},"content":"        this.taskInfo \u003d taskInfo;"},{"lineNumber":17,"author":{"gitId":"banchiang"},"content":"    }"},{"lineNumber":18,"author":{"gitId":"banchiang"},"content":""},{"lineNumber":19,"author":{"gitId":"banchiang"},"content":"    /**"},{"lineNumber":20,"author":{"gitId":"banchiang"},"content":"     * Identify task type and create the task with the task info."},{"lineNumber":21,"author":{"gitId":"banchiang"},"content":"     * Task is then added to the task list and stored on disk."},{"lineNumber":22,"author":{"gitId":"banchiang"},"content":"     *"},{"lineNumber":23,"author":{"gitId":"banchiang"},"content":"     * @param tl task list."},{"lineNumber":24,"author":{"gitId":"banchiang"},"content":"     * @param ui user interface object."},{"lineNumber":25,"author":{"gitId":"banchiang"},"content":"     * @param storage storage of task list."},{"lineNumber":26,"author":{"gitId":"banchiang"},"content":"     * @throws DukeException if task cannot be created."},{"lineNumber":27,"author":{"gitId":"banchiang"},"content":"     */"},{"lineNumber":28,"author":{"gitId":"banchiang"},"content":"    @Override"},{"lineNumber":29,"author":{"gitId":"banchiang"},"content":"    public String execute(TaskList tl, Ui ui, Storage storage) throws DukeException {"},{"lineNumber":30,"author":{"gitId":"banchiang"},"content":"        Task t \u003d null;"},{"lineNumber":31,"author":{"gitId":"banchiang"},"content":"        switch (taskType) {"},{"lineNumber":32,"author":{"gitId":"banchiang"},"content":"        case \"todo\":"},{"lineNumber":33,"author":{"gitId":"banchiang"},"content":"            t \u003d ToDo.create(taskInfo);"},{"lineNumber":34,"author":{"gitId":"banchiang"},"content":"            break;"},{"lineNumber":35,"author":{"gitId":"banchiang"},"content":"        case \"deadline\":"},{"lineNumber":36,"author":{"gitId":"banchiang"},"content":"            t \u003d Deadline.create(taskInfo);"},{"lineNumber":37,"author":{"gitId":"banchiang"},"content":"            break;"},{"lineNumber":38,"author":{"gitId":"banchiang"},"content":"        case \"event\":"},{"lineNumber":39,"author":{"gitId":"banchiang"},"content":"            t \u003d Event.create(taskInfo);"},{"lineNumber":40,"author":{"gitId":"banchiang"},"content":"            break;"},{"lineNumber":41,"author":{"gitId":"banchiang"},"content":"        default:"},{"lineNumber":42,"author":{"gitId":"banchiang"},"content":"            throw new DukeWrongCommandException(taskType);"},{"lineNumber":43,"author":{"gitId":"banchiang"},"content":"        }"},{"lineNumber":44,"author":{"gitId":"banchiang"},"content":"        tl.add(t);"},{"lineNumber":45,"author":{"gitId":"banchiang"},"content":"        storage.save(tl.toString());"},{"lineNumber":46,"author":{"gitId":"banchiang"},"content":"        return ui.printAddedTask(t, tl);"},{"lineNumber":47,"author":{"gitId":"banchiang"},"content":"    }"},{"lineNumber":48,"author":{"gitId":"banchiang"},"content":"}"}],"authorContributionMap":{"banchiang":48}},{"path":"src/main/java/duke/ByeCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"banchiang"},"content":"package duke;"},{"lineNumber":2,"author":{"gitId":"banchiang"},"content":""},{"lineNumber":3,"author":{"gitId":"banchiang"},"content":"public class ByeCommand extends Command {"},{"lineNumber":4,"author":{"gitId":"banchiang"},"content":"    @Override"},{"lineNumber":5,"author":{"gitId":"banchiang"},"content":"    public String execute(TaskList tl, Ui ui, Storage storage) {"},{"lineNumber":6,"author":{"gitId":"banchiang"},"content":"        return ui.printBye();"},{"lineNumber":7,"author":{"gitId":"banchiang"},"content":"    }"},{"lineNumber":8,"author":{"gitId":"banchiang"},"content":"}"}],"authorContributionMap":{"banchiang":8}},{"path":"src/main/java/duke/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"banchiang"},"content":"package duke;"},{"lineNumber":2,"author":{"gitId":"banchiang"},"content":""},{"lineNumber":3,"author":{"gitId":"banchiang"},"content":"public abstract class Command {"},{"lineNumber":4,"author":{"gitId":"banchiang"},"content":"    public abstract String execute(TaskList tl, Ui ui, Storage storage) throws DukeException;"},{"lineNumber":5,"author":{"gitId":"banchiang"},"content":"}"}],"authorContributionMap":{"banchiang":5}},{"path":"src/main/java/duke/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"banchiang"},"content":"package duke;"},{"lineNumber":2,"author":{"gitId":"banchiang"},"content":""},{"lineNumber":3,"author":{"gitId":"banchiang"},"content":"import java.time.LocalDateTime;"},{"lineNumber":4,"author":{"gitId":"banchiang"},"content":"import java.time.format.DateTimeParseException;"},{"lineNumber":5,"author":{"gitId":"banchiang"},"content":""},{"lineNumber":6,"author":{"gitId":"banchiang"},"content":"public class Deadline extends Task {"},{"lineNumber":7,"author":{"gitId":"banchiang"},"content":""},{"lineNumber":8,"author":{"gitId":"banchiang"},"content":"    protected LocalDateTime deadline;"},{"lineNumber":9,"author":{"gitId":"banchiang"},"content":""},{"lineNumber":10,"author":{"gitId":"banchiang"},"content":"    /**"},{"lineNumber":11,"author":{"gitId":"banchiang"},"content":"     * Constructor for deadltine task."},{"lineNumber":12,"author":{"gitId":"banchiang"},"content":"     *"},{"lineNumber":13,"author":{"gitId":"banchiang"},"content":"     * @param description Name of Deadline task."},{"lineNumber":14,"author":{"gitId":"banchiang"},"content":"     * @param deadline Time format of deadline."},{"lineNumber":15,"author":{"gitId":"banchiang"},"content":"     */"},{"lineNumber":16,"author":{"gitId":"banchiang"},"content":"    public Deadline(String description, LocalDateTime deadline) {"},{"lineNumber":17,"author":{"gitId":"banchiang"},"content":"        super(description);"},{"lineNumber":18,"author":{"gitId":"banchiang"},"content":"        this.deadline \u003d deadline;"},{"lineNumber":19,"author":{"gitId":"banchiang"},"content":"    }"},{"lineNumber":20,"author":{"gitId":"banchiang"},"content":""},{"lineNumber":21,"author":{"gitId":"banchiang"},"content":"    /**"},{"lineNumber":22,"author":{"gitId":"banchiang"},"content":"     * Static method to create a Deadline task."},{"lineNumber":23,"author":{"gitId":"banchiang"},"content":"     *"},{"lineNumber":24,"author":{"gitId":"banchiang"},"content":"     * @param taskInfo information about the deadline task."},{"lineNumber":25,"author":{"gitId":"banchiang"},"content":"     * @return a deadline task."},{"lineNumber":26,"author":{"gitId":"banchiang"},"content":"     * @throws DukeWrongFormatException if info is wrongly formatted."},{"lineNumber":27,"author":{"gitId":"banchiang"},"content":"     * @throws DukeMissingDescriptionException if info is missing."},{"lineNumber":28,"author":{"gitId":"banchiang"},"content":"     */"},{"lineNumber":29,"author":{"gitId":"banchiang"},"content":"    public static Deadline create(String taskInfo) throws DukeWrongFormatException,"},{"lineNumber":30,"author":{"gitId":"banchiang"},"content":"            DukeMissingDescriptionException {"},{"lineNumber":31,"author":{"gitId":"banchiang"},"content":"        String[] parsedInfo \u003d taskInfo.split(\" /by \", 2);"},{"lineNumber":32,"author":{"gitId":"banchiang"},"content":"        if (parsedInfo.length !\u003d 2) {"},{"lineNumber":33,"author":{"gitId":"banchiang"},"content":"            throw new DukeWrongFormatException(\"deadline\");"},{"lineNumber":34,"author":{"gitId":"banchiang"},"content":"        } else if (parsedInfo[0].equals(\" \") || parsedInfo[1].equals(\" \")) {"},{"lineNumber":35,"author":{"gitId":"banchiang"},"content":"            throw new DukeMissingDescriptionException(\"deadline\");"},{"lineNumber":36,"author":{"gitId":"banchiang"},"content":"        } else {"},{"lineNumber":37,"author":{"gitId":"banchiang"},"content":"            try {"},{"lineNumber":38,"author":{"gitId":"banchiang"},"content":"                LocalDateTime ldt \u003d Parser.parseInputDate(parsedInfo[1]);"},{"lineNumber":39,"author":{"gitId":"banchiang"},"content":"                return new Deadline(parsedInfo[0], ldt);"},{"lineNumber":40,"author":{"gitId":"banchiang"},"content":"            } catch (DateTimeParseException e) {"},{"lineNumber":41,"author":{"gitId":"banchiang"},"content":"                throw new DukeWrongFormatException(\"deadline\");"},{"lineNumber":42,"author":{"gitId":"banchiang"},"content":"            }"},{"lineNumber":43,"author":{"gitId":"banchiang"},"content":"        }"},{"lineNumber":44,"author":{"gitId":"banchiang"},"content":"    }"},{"lineNumber":45,"author":{"gitId":"banchiang"},"content":""},{"lineNumber":46,"author":{"gitId":"banchiang"},"content":"    /**"},{"lineNumber":47,"author":{"gitId":"banchiang"},"content":"     * Return string of deadline name and info."},{"lineNumber":48,"author":{"gitId":"banchiang"},"content":"     * Format is for saving task into text file."},{"lineNumber":49,"author":{"gitId":"banchiang"},"content":"     *"},{"lineNumber":50,"author":{"gitId":"banchiang"},"content":"     * @return string format of task\u0027s info."},{"lineNumber":51,"author":{"gitId":"banchiang"},"content":"     */"},{"lineNumber":52,"author":{"gitId":"banchiang"},"content":"    @Override"},{"lineNumber":53,"author":{"gitId":"banchiang"},"content":"    public String saveTask() {"},{"lineNumber":54,"author":{"gitId":"banchiang"},"content":"        return String.format(\"D | %s | %s | %s\\n\", super.getStatusIcon(),"},{"lineNumber":55,"author":{"gitId":"banchiang"},"content":"                description, super.timeFormat(deadline));"},{"lineNumber":56,"author":{"gitId":"banchiang"},"content":"    }"},{"lineNumber":57,"author":{"gitId":"banchiang"},"content":""},{"lineNumber":58,"author":{"gitId":"banchiang"},"content":"    /**"},{"lineNumber":59,"author":{"gitId":"banchiang"},"content":"     * Returns string of deadline task name and info."},{"lineNumber":60,"author":{"gitId":"banchiang"},"content":"     * Format is for the display on the list."},{"lineNumber":61,"author":{"gitId":"banchiang"},"content":"     *"},{"lineNumber":62,"author":{"gitId":"banchiang"},"content":"     * @return string format of task\u0027s info."},{"lineNumber":63,"author":{"gitId":"banchiang"},"content":"     */"},{"lineNumber":64,"author":{"gitId":"banchiang"},"content":"    @Override"},{"lineNumber":65,"author":{"gitId":"banchiang"},"content":"    public String toString() {"},{"lineNumber":66,"author":{"gitId":"banchiang"},"content":"        return \"[D]\" + super.toString() + \" (by: \""},{"lineNumber":67,"author":{"gitId":"banchiang"},"content":"                + super.timeFormat(deadline) + \")\";"},{"lineNumber":68,"author":{"gitId":"banchiang"},"content":"    }"},{"lineNumber":69,"author":{"gitId":"banchiang"},"content":"}"}],"authorContributionMap":{"banchiang":69}},{"path":"src/main/java/duke/DeleteCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"banchiang"},"content":"package duke;"},{"lineNumber":2,"author":{"gitId":"banchiang"},"content":""},{"lineNumber":3,"author":{"gitId":"banchiang"},"content":"public class DeleteCommand extends Command {"},{"lineNumber":4,"author":{"gitId":"banchiang"},"content":"    private int taskNum;"},{"lineNumber":5,"author":{"gitId":"banchiang"},"content":""},{"lineNumber":6,"author":{"gitId":"banchiang"},"content":"    /**"},{"lineNumber":7,"author":{"gitId":"banchiang"},"content":"     * Construct a delete command."},{"lineNumber":8,"author":{"gitId":"banchiang"},"content":"     *"},{"lineNumber":9,"author":{"gitId":"banchiang"},"content":"     * @param taskNum The task number to delete in task list."},{"lineNumber":10,"author":{"gitId":"banchiang"},"content":"     */"},{"lineNumber":11,"author":{"gitId":"banchiang"},"content":"    public DeleteCommand(int taskNum) {"},{"lineNumber":12,"author":{"gitId":"banchiang"},"content":"        super();"},{"lineNumber":13,"author":{"gitId":"banchiang"},"content":"        this.taskNum \u003d taskNum;"},{"lineNumber":14,"author":{"gitId":"banchiang"},"content":"    }"},{"lineNumber":15,"author":{"gitId":"banchiang"},"content":""},{"lineNumber":16,"author":{"gitId":"banchiang"},"content":"    /**"},{"lineNumber":17,"author":{"gitId":"banchiang"},"content":"     * Deletes task from list of matching task-numbering."},{"lineNumber":18,"author":{"gitId":"banchiang"},"content":"     * Then prints delete message and update drive."},{"lineNumber":19,"author":{"gitId":"banchiang"},"content":"     *"},{"lineNumber":20,"author":{"gitId":"banchiang"},"content":"     * @param tl task list."},{"lineNumber":21,"author":{"gitId":"banchiang"},"content":"     * @param ui object for user interface."},{"lineNumber":22,"author":{"gitId":"banchiang"},"content":"     * @param storage storage for tasks."},{"lineNumber":23,"author":{"gitId":"banchiang"},"content":"     */"},{"lineNumber":24,"author":{"gitId":"banchiang"},"content":"    @Override"},{"lineNumber":25,"author":{"gitId":"banchiang"},"content":"    public String execute(TaskList tl, Ui ui, Storage storage) {"},{"lineNumber":26,"author":{"gitId":"banchiang"},"content":"        Task t \u003d tl.remove(taskNum - 1);"},{"lineNumber":27,"author":{"gitId":"banchiang"},"content":"        storage.save(tl.toString());"},{"lineNumber":28,"author":{"gitId":"banchiang"},"content":"        return ui.printDeletedTask(t, tl);"},{"lineNumber":29,"author":{"gitId":"banchiang"},"content":"    }"},{"lineNumber":30,"author":{"gitId":"banchiang"},"content":"}"}],"authorContributionMap":{"banchiang":30}},{"path":"src/main/java/duke/DialogBox.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"banchiang"},"content":"package duke;"},{"lineNumber":2,"author":{"gitId":"banchiang"},"content":""},{"lineNumber":3,"author":{"gitId":"banchiang"},"content":"import java.io.IOException;"},{"lineNumber":4,"author":{"gitId":"banchiang"},"content":"import java.util.Collections;"},{"lineNumber":5,"author":{"gitId":"banchiang"},"content":""},{"lineNumber":6,"author":{"gitId":"banchiang"},"content":"import javafx.collections.FXCollections;"},{"lineNumber":7,"author":{"gitId":"banchiang"},"content":"import javafx.collections.ObservableList;"},{"lineNumber":8,"author":{"gitId":"banchiang"},"content":"import javafx.fxml.FXML;"},{"lineNumber":9,"author":{"gitId":"banchiang"},"content":"import javafx.fxml.FXMLLoader;"},{"lineNumber":10,"author":{"gitId":"banchiang"},"content":"import javafx.geometry.Pos;"},{"lineNumber":11,"author":{"gitId":"banchiang"},"content":"import javafx.scene.Node;"},{"lineNumber":12,"author":{"gitId":"banchiang"},"content":"import javafx.scene.control.Label;"},{"lineNumber":13,"author":{"gitId":"banchiang"},"content":"import javafx.scene.image.Image;"},{"lineNumber":14,"author":{"gitId":"banchiang"},"content":"import javafx.scene.image.ImageView;"},{"lineNumber":15,"author":{"gitId":"banchiang"},"content":"import javafx.scene.layout.HBox;"},{"lineNumber":16,"author":{"gitId":"banchiang"},"content":""},{"lineNumber":17,"author":{"gitId":"banchiang"},"content":"/**"},{"lineNumber":18,"author":{"gitId":"banchiang"},"content":" * An example of a custom control using FXML."},{"lineNumber":19,"author":{"gitId":"banchiang"},"content":" * This control represents a dialog box consisting of an ImageView to represent the speaker\u0027s face and a label"},{"lineNumber":20,"author":{"gitId":"banchiang"},"content":" * containing text from the speaker."},{"lineNumber":21,"author":{"gitId":"banchiang"},"content":" */"},{"lineNumber":22,"author":{"gitId":"banchiang"},"content":"public class DialogBox extends HBox {"},{"lineNumber":23,"author":{"gitId":"banchiang"},"content":"    @FXML"},{"lineNumber":24,"author":{"gitId":"banchiang"},"content":"    private Label dialog;"},{"lineNumber":25,"author":{"gitId":"banchiang"},"content":"    @FXML"},{"lineNumber":26,"author":{"gitId":"banchiang"},"content":"    private ImageView displayPicture;"},{"lineNumber":27,"author":{"gitId":"banchiang"},"content":""},{"lineNumber":28,"author":{"gitId":"banchiang"},"content":"    private DialogBox(String text, Image img) {"},{"lineNumber":29,"author":{"gitId":"banchiang"},"content":"        try {"},{"lineNumber":30,"author":{"gitId":"banchiang"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(\"/view/DialogBox.fxml\"));"},{"lineNumber":31,"author":{"gitId":"banchiang"},"content":"            fxmlLoader.setController(this);"},{"lineNumber":32,"author":{"gitId":"banchiang"},"content":"            fxmlLoader.setRoot(this);"},{"lineNumber":33,"author":{"gitId":"banchiang"},"content":"            fxmlLoader.load();"},{"lineNumber":34,"author":{"gitId":"banchiang"},"content":"        } catch (IOException e) {"},{"lineNumber":35,"author":{"gitId":"banchiang"},"content":"            e.printStackTrace();"},{"lineNumber":36,"author":{"gitId":"banchiang"},"content":"        }"},{"lineNumber":37,"author":{"gitId":"banchiang"},"content":""},{"lineNumber":38,"author":{"gitId":"banchiang"},"content":"        dialog.setText(text);"},{"lineNumber":39,"author":{"gitId":"banchiang"},"content":"        displayPicture.setImage(img);"},{"lineNumber":40,"author":{"gitId":"banchiang"},"content":"    }"},{"lineNumber":41,"author":{"gitId":"banchiang"},"content":""},{"lineNumber":42,"author":{"gitId":"banchiang"},"content":"    /**"},{"lineNumber":43,"author":{"gitId":"banchiang"},"content":"     * Flips the dialog box such that the ImageView is on the left and text on the right."},{"lineNumber":44,"author":{"gitId":"banchiang"},"content":"     */"},{"lineNumber":45,"author":{"gitId":"banchiang"},"content":"    private void flip() {"},{"lineNumber":46,"author":{"gitId":"banchiang"},"content":"        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());"},{"lineNumber":47,"author":{"gitId":"banchiang"},"content":"        Collections.reverse(tmp);"},{"lineNumber":48,"author":{"gitId":"banchiang"},"content":"        getChildren().setAll(tmp);"},{"lineNumber":49,"author":{"gitId":"banchiang"},"content":"        setAlignment(Pos.TOP_LEFT);"},{"lineNumber":50,"author":{"gitId":"banchiang"},"content":"    }"},{"lineNumber":51,"author":{"gitId":"banchiang"},"content":""},{"lineNumber":52,"author":{"gitId":"banchiang"},"content":"    public static DialogBox getUserDialog(String text, Image img) {"},{"lineNumber":53,"author":{"gitId":"banchiang"},"content":"        return new DialogBox(text, img);"},{"lineNumber":54,"author":{"gitId":"banchiang"},"content":"    }"},{"lineNumber":55,"author":{"gitId":"banchiang"},"content":""},{"lineNumber":56,"author":{"gitId":"banchiang"},"content":"    public static DialogBox getDukeDialog(String text, Image img) {"},{"lineNumber":57,"author":{"gitId":"banchiang"},"content":"        var db \u003d new DialogBox(text, img);"},{"lineNumber":58,"author":{"gitId":"banchiang"},"content":"        db.flip();"},{"lineNumber":59,"author":{"gitId":"banchiang"},"content":"        return db;"},{"lineNumber":60,"author":{"gitId":"banchiang"},"content":"    }"},{"lineNumber":61,"author":{"gitId":"banchiang"},"content":"}"}],"authorContributionMap":{"banchiang":61}},{"path":"src/main/java/duke/DoneCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"banchiang"},"content":"package duke;"},{"lineNumber":2,"author":{"gitId":"banchiang"},"content":""},{"lineNumber":3,"author":{"gitId":"banchiang"},"content":"public class DoneCommand extends Command {"},{"lineNumber":4,"author":{"gitId":"banchiang"},"content":"    private int taskNum;"},{"lineNumber":5,"author":{"gitId":"banchiang"},"content":""},{"lineNumber":6,"author":{"gitId":"banchiang"},"content":"    /**"},{"lineNumber":7,"author":{"gitId":"banchiang"},"content":"     * Constructer for done command."},{"lineNumber":8,"author":{"gitId":"banchiang"},"content":"     *"},{"lineNumber":9,"author":{"gitId":"banchiang"},"content":"     * @param taskNum The task number to be set as done."},{"lineNumber":10,"author":{"gitId":"banchiang"},"content":"     */"},{"lineNumber":11,"author":{"gitId":"banchiang"},"content":"    public DoneCommand(int taskNum) {"},{"lineNumber":12,"author":{"gitId":"banchiang"},"content":"        super();"},{"lineNumber":13,"author":{"gitId":"banchiang"},"content":"        this.taskNum \u003d taskNum;"},{"lineNumber":14,"author":{"gitId":"banchiang"},"content":"    }"},{"lineNumber":15,"author":{"gitId":"banchiang"},"content":""},{"lineNumber":16,"author":{"gitId":"banchiang"},"content":"    /**"},{"lineNumber":17,"author":{"gitId":"banchiang"},"content":"     * Marks a task done of a specfic numbering."},{"lineNumber":18,"author":{"gitId":"banchiang"},"content":"     * Print marked message and update drive."},{"lineNumber":19,"author":{"gitId":"banchiang"},"content":"     *"},{"lineNumber":20,"author":{"gitId":"banchiang"},"content":"     * @param tl task list."},{"lineNumber":21,"author":{"gitId":"banchiang"},"content":"     * @param ui object for user interface."},{"lineNumber":22,"author":{"gitId":"banchiang"},"content":"     * @param storage objec to store and load task list."},{"lineNumber":23,"author":{"gitId":"banchiang"},"content":"     */"},{"lineNumber":24,"author":{"gitId":"banchiang"},"content":"    @Override"},{"lineNumber":25,"author":{"gitId":"banchiang"},"content":"    public String execute(TaskList tl, Ui ui, Storage storage) {"},{"lineNumber":26,"author":{"gitId":"banchiang"},"content":"        Task t \u003d tl.get(taskNum - 1);"},{"lineNumber":27,"author":{"gitId":"banchiang"},"content":"        t.finishTask();"},{"lineNumber":28,"author":{"gitId":"banchiang"},"content":"        tl.set(taskNum - 1, t);"},{"lineNumber":29,"author":{"gitId":"banchiang"},"content":"        storage.save(tl.toString());"},{"lineNumber":30,"author":{"gitId":"banchiang"},"content":"        return ui.printMarkedDone(t);"},{"lineNumber":31,"author":{"gitId":"banchiang"},"content":"    }"},{"lineNumber":32,"author":{"gitId":"banchiang"},"content":"}"}],"authorContributionMap":{"banchiang":32}},{"path":"src/main/java/duke/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"banchiang"},"content":"package duke;"},{"lineNumber":2,"author":{"gitId":"banchiang"},"content":""},{"lineNumber":3,"author":{"gitId":"banchiang"},"content":"public class Duke {"},{"lineNumber":4,"author":{"gitId":"banchiang"},"content":"    private Ui ui;"},{"lineNumber":5,"author":{"gitId":"banchiang"},"content":"    private Storage storage;"},{"lineNumber":6,"author":{"gitId":"banchiang"},"content":"    private TaskList tl;"},{"lineNumber":7,"author":{"gitId":"banchiang"},"content":""},{"lineNumber":8,"author":{"gitId":"banchiang"},"content":"    /**"},{"lineNumber":9,"author":{"gitId":"banchiang"},"content":"     * Constructor for Duke."},{"lineNumber":10,"author":{"gitId":"banchiang"},"content":"     */"},{"lineNumber":11,"author":{"gitId":"banchiang"},"content":"    public Duke() {"},{"lineNumber":12,"author":{"gitId":"banchiang"},"content":"        this.ui \u003d new Ui();"},{"lineNumber":13,"author":{"gitId":"banchiang"},"content":"        this.storage \u003d new Storage();"},{"lineNumber":14,"author":{"gitId":"banchiang"},"content":"        this.tl \u003d this.storage.load();"},{"lineNumber":15,"author":{"gitId":"banchiang"},"content":"    }"},{"lineNumber":16,"author":{"gitId":"banchiang"},"content":""},{"lineNumber":17,"author":{"gitId":"banchiang"},"content":"    public static String greeting() {"},{"lineNumber":18,"author":{"gitId":"banchiang"},"content":"        return new Ui().printGreeting();"},{"lineNumber":19,"author":{"gitId":"banchiang"},"content":"    }"},{"lineNumber":20,"author":{"gitId":"banchiang"},"content":"    public static String help() {"},{"lineNumber":21,"author":{"gitId":"banchiang"},"content":"        return new Ui().printHelp();"},{"lineNumber":22,"author":{"gitId":"banchiang"},"content":"    }"},{"lineNumber":23,"author":{"gitId":"banchiang"},"content":""},{"lineNumber":24,"author":{"gitId":"banchiang"},"content":"    public static void main(String[] args) {"},{"lineNumber":25,"author":{"gitId":"banchiang"},"content":"    }"},{"lineNumber":26,"author":{"gitId":"banchiang"},"content":""},{"lineNumber":27,"author":{"gitId":"banchiang"},"content":"    public String getResponse(String input) {"},{"lineNumber":28,"author":{"gitId":"banchiang"},"content":"        try {"},{"lineNumber":29,"author":{"gitId":"banchiang"},"content":"            Command c \u003d Parser.parseInput(input);"},{"lineNumber":30,"author":{"gitId":"banchiang"},"content":"            return c.execute(tl, ui, storage);"},{"lineNumber":31,"author":{"gitId":"banchiang"},"content":"        } catch (Exception e) {"},{"lineNumber":32,"author":{"gitId":"banchiang"},"content":"            return ui.printError(e.toString());"},{"lineNumber":33,"author":{"gitId":"banchiang"},"content":"        }"},{"lineNumber":34,"author":{"gitId":"banchiang"},"content":"    }"},{"lineNumber":35,"author":{"gitId":"banchiang"},"content":"}"},{"lineNumber":36,"author":{"gitId":"banchiang"},"content":""}],"authorContributionMap":{"banchiang":36}},{"path":"src/main/java/duke/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"banchiang"},"content":"package duke;"},{"lineNumber":2,"author":{"gitId":"banchiang"},"content":""},{"lineNumber":3,"author":{"gitId":"banchiang"},"content":"public class DukeException extends Exception {"},{"lineNumber":4,"author":{"gitId":"banchiang"},"content":"    @Override"},{"lineNumber":5,"author":{"gitId":"banchiang"},"content":"    public String toString() {"},{"lineNumber":6,"author":{"gitId":"banchiang"},"content":"        return \"Exception in Duke occurred!\";"},{"lineNumber":7,"author":{"gitId":"banchiang"},"content":"    }"},{"lineNumber":8,"author":{"gitId":"banchiang"},"content":"}"}],"authorContributionMap":{"banchiang":8}},{"path":"src/main/java/duke/DukeMissingDescriptionException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"banchiang"},"content":"package duke;"},{"lineNumber":2,"author":{"gitId":"banchiang"},"content":""},{"lineNumber":3,"author":{"gitId":"banchiang"},"content":"public class DukeMissingDescriptionException extends DukeException {"},{"lineNumber":4,"author":{"gitId":"banchiang"},"content":"    private String command;"},{"lineNumber":5,"author":{"gitId":"banchiang"},"content":""},{"lineNumber":6,"author":{"gitId":"banchiang"},"content":"    public DukeMissingDescriptionException(String command) {"},{"lineNumber":7,"author":{"gitId":"banchiang"},"content":"        this.command \u003d command;"},{"lineNumber":8,"author":{"gitId":"banchiang"},"content":"    }"},{"lineNumber":9,"author":{"gitId":"banchiang"},"content":""},{"lineNumber":10,"author":{"gitId":"banchiang"},"content":"    @Override"},{"lineNumber":11,"author":{"gitId":"banchiang"},"content":"    public String toString() {"},{"lineNumber":12,"author":{"gitId":"banchiang"},"content":"        return String.format(\"     Sorry, \u0027%s\u0027 task has missing description ☹\\n\", command);"},{"lineNumber":13,"author":{"gitId":"banchiang"},"content":"    }"},{"lineNumber":14,"author":{"gitId":"banchiang"},"content":"}"}],"authorContributionMap":{"banchiang":14}},{"path":"src/main/java/duke/DukeWrongCommandException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"banchiang"},"content":"package duke;"},{"lineNumber":2,"author":{"gitId":"banchiang"},"content":""},{"lineNumber":3,"author":{"gitId":"banchiang"},"content":"public class DukeWrongCommandException extends DukeException {"},{"lineNumber":4,"author":{"gitId":"banchiang"},"content":"    private String command;"},{"lineNumber":5,"author":{"gitId":"banchiang"},"content":""},{"lineNumber":6,"author":{"gitId":"banchiang"},"content":"    public DukeWrongCommandException(String command) {"},{"lineNumber":7,"author":{"gitId":"banchiang"},"content":"        this.command \u003d command;"},{"lineNumber":8,"author":{"gitId":"banchiang"},"content":"    }"},{"lineNumber":9,"author":{"gitId":"banchiang"},"content":""},{"lineNumber":10,"author":{"gitId":"banchiang"},"content":"    @Override"},{"lineNumber":11,"author":{"gitId":"banchiang"},"content":"    public String toString() {"},{"lineNumber":12,"author":{"gitId":"banchiang"},"content":"        return String.format(\"     ☹ Sorry, \u0027%s\u0027 is not a proper command for Duke.\\n\", command);"},{"lineNumber":13,"author":{"gitId":"banchiang"},"content":"    }"},{"lineNumber":14,"author":{"gitId":"banchiang"},"content":"}"}],"authorContributionMap":{"banchiang":14}},{"path":"src/main/java/duke/DukeWrongFormatException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"banchiang"},"content":"package duke;"},{"lineNumber":2,"author":{"gitId":"banchiang"},"content":""},{"lineNumber":3,"author":{"gitId":"banchiang"},"content":"public class DukeWrongFormatException extends DukeException {"},{"lineNumber":4,"author":{"gitId":"banchiang"},"content":"    private final String heading \u003d \"     Wrong format! Please follow this format: \";"},{"lineNumber":5,"author":{"gitId":"banchiang"},"content":"    private final String deadlineFormat \u003d \"deadline (taskName) /by (YYYY-MM-D TIME)\";"},{"lineNumber":6,"author":{"gitId":"banchiang"},"content":"    private final String eventFormat \u003d \"event (taskName) /at (start time) (end time)\";"},{"lineNumber":7,"author":{"gitId":"banchiang"},"content":"    private String command;"},{"lineNumber":8,"author":{"gitId":"banchiang"},"content":""},{"lineNumber":9,"author":{"gitId":"banchiang"},"content":"    DukeWrongFormatException(String command) {"},{"lineNumber":10,"author":{"gitId":"banchiang"},"content":"        this.command \u003d command;"},{"lineNumber":11,"author":{"gitId":"banchiang"},"content":"    }"},{"lineNumber":12,"author":{"gitId":"banchiang"},"content":""},{"lineNumber":13,"author":{"gitId":"banchiang"},"content":"    @Override"},{"lineNumber":14,"author":{"gitId":"banchiang"},"content":"    public String toString() {"},{"lineNumber":15,"author":{"gitId":"banchiang"},"content":"        String format \u003d (command.equals(\"deadline\")) ? deadlineFormat : eventFormat;"},{"lineNumber":16,"author":{"gitId":"banchiang"},"content":"        return heading + format + \"\\n\";"},{"lineNumber":17,"author":{"gitId":"banchiang"},"content":"    }"},{"lineNumber":18,"author":{"gitId":"banchiang"},"content":"}"}],"authorContributionMap":{"banchiang":18}},{"path":"src/main/java/duke/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"banchiang"},"content":"package duke;"},{"lineNumber":2,"author":{"gitId":"banchiang"},"content":""},{"lineNumber":3,"author":{"gitId":"banchiang"},"content":"import java.time.LocalDateTime;"},{"lineNumber":4,"author":{"gitId":"banchiang"},"content":""},{"lineNumber":5,"author":{"gitId":"banchiang"},"content":"public class Event extends Task {"},{"lineNumber":6,"author":{"gitId":"banchiang"},"content":"    protected LocalDateTime start;"},{"lineNumber":7,"author":{"gitId":"banchiang"},"content":"    protected LocalDateTime end;"},{"lineNumber":8,"author":{"gitId":"banchiang"},"content":""},{"lineNumber":9,"author":{"gitId":"banchiang"},"content":"    /**"},{"lineNumber":10,"author":{"gitId":"banchiang"},"content":"     * Constructor for Event task."},{"lineNumber":11,"author":{"gitId":"banchiang"},"content":"     *"},{"lineNumber":12,"author":{"gitId":"banchiang"},"content":"     * @param description Name of the event."},{"lineNumber":13,"author":{"gitId":"banchiang"},"content":"     * @param start Starting time of event."},{"lineNumber":14,"author":{"gitId":"banchiang"},"content":"     * @param end Ending time of event."},{"lineNumber":15,"author":{"gitId":"banchiang"},"content":"     */"},{"lineNumber":16,"author":{"gitId":"banchiang"},"content":"    public Event(String description, LocalDateTime start, LocalDateTime end) {"},{"lineNumber":17,"author":{"gitId":"banchiang"},"content":"        super(description);"},{"lineNumber":18,"author":{"gitId":"banchiang"},"content":"        this.start \u003d start;"},{"lineNumber":19,"author":{"gitId":"banchiang"},"content":"        this.end \u003d end;"},{"lineNumber":20,"author":{"gitId":"banchiang"},"content":"    }"},{"lineNumber":21,"author":{"gitId":"banchiang"},"content":""},{"lineNumber":22,"author":{"gitId":"banchiang"},"content":"    /**"},{"lineNumber":23,"author":{"gitId":"banchiang"},"content":"     * Returns event task."},{"lineNumber":24,"author":{"gitId":"banchiang"},"content":"     *"},{"lineNumber":25,"author":{"gitId":"banchiang"},"content":"     * @param taskInfo Information of the task."},{"lineNumber":26,"author":{"gitId":"banchiang"},"content":"     * @return New Event task."},{"lineNumber":27,"author":{"gitId":"banchiang"},"content":"     * @throws DukeWrongFormatException If taskInfo format is wrong."},{"lineNumber":28,"author":{"gitId":"banchiang"},"content":"     * @throws DukeMissingDescriptionException If taskInfo is blank."},{"lineNumber":29,"author":{"gitId":"banchiang"},"content":"     */"},{"lineNumber":30,"author":{"gitId":"banchiang"},"content":"    public static Event create(String taskInfo) throws DukeWrongFormatException,"},{"lineNumber":31,"author":{"gitId":"banchiang"},"content":"            DukeMissingDescriptionException {"},{"lineNumber":32,"author":{"gitId":"banchiang"},"content":"        String[] parsedInfo \u003d taskInfo.split(\" /at \", 2);"},{"lineNumber":33,"author":{"gitId":"banchiang"},"content":"        if (parsedInfo.length !\u003d 2) {"},{"lineNumber":34,"author":{"gitId":"banchiang"},"content":"            throw new DukeWrongFormatException(\"event1\");"},{"lineNumber":35,"author":{"gitId":"banchiang"},"content":"        } else if (parsedInfo[0].equals(\" \") || parsedInfo[1].equals(\" \")) {"},{"lineNumber":36,"author":{"gitId":"banchiang"},"content":"            throw new DukeMissingDescriptionException(\"event\");"},{"lineNumber":37,"author":{"gitId":"banchiang"},"content":"        } else {"},{"lineNumber":38,"author":{"gitId":"banchiang"},"content":"            try {"},{"lineNumber":39,"author":{"gitId":"banchiang"},"content":"                String[] parsedDate \u003d parsedInfo[1].split(\" \");"},{"lineNumber":40,"author":{"gitId":"banchiang"},"content":"                String date \u003d parsedDate[0];"},{"lineNumber":41,"author":{"gitId":"banchiang"},"content":"                String[] parsedTime \u003d parsedDate[1].split(\"-\");"},{"lineNumber":42,"author":{"gitId":"banchiang"},"content":"                LocalDateTime ldtStart \u003d Parser.parseInputDate(date + \" \" + parsedTime[0]);"},{"lineNumber":43,"author":{"gitId":"banchiang"},"content":"                LocalDateTime ldtEnd \u003d Parser.parseInputDate(date + \" \" + parsedTime[1]);"},{"lineNumber":44,"author":{"gitId":"banchiang"},"content":"                return new Event(parsedInfo[0], ldtStart, ldtEnd);"},{"lineNumber":45,"author":{"gitId":"banchiang"},"content":"            } catch (Exception e) {"},{"lineNumber":46,"author":{"gitId":"banchiang"},"content":"                throw new DukeWrongFormatException(\"event\");"},{"lineNumber":47,"author":{"gitId":"banchiang"},"content":"            }"},{"lineNumber":48,"author":{"gitId":"banchiang"},"content":"        }"},{"lineNumber":49,"author":{"gitId":"banchiang"},"content":"    }"},{"lineNumber":50,"author":{"gitId":"banchiang"},"content":""},{"lineNumber":51,"author":{"gitId":"banchiang"},"content":"    /**"},{"lineNumber":52,"author":{"gitId":"banchiang"},"content":"     * Return string of deadline name and info."},{"lineNumber":53,"author":{"gitId":"banchiang"},"content":"     * Format is for saving task into text file."},{"lineNumber":54,"author":{"gitId":"banchiang"},"content":"     *"},{"lineNumber":55,"author":{"gitId":"banchiang"},"content":"     * @return string format of task\u0027s info."},{"lineNumber":56,"author":{"gitId":"banchiang"},"content":"     */"},{"lineNumber":57,"author":{"gitId":"banchiang"},"content":"    @Override"},{"lineNumber":58,"author":{"gitId":"banchiang"},"content":"    public String saveTask() {"},{"lineNumber":59,"author":{"gitId":"banchiang"},"content":"        return String.format(\"E | %s | %s | %s-%s\\n\", super.getStatusIcon(),"},{"lineNumber":60,"author":{"gitId":"banchiang"},"content":"                description, super.timeFormat(start), super.timeFormat(end));"},{"lineNumber":61,"author":{"gitId":"banchiang"},"content":"    }"},{"lineNumber":62,"author":{"gitId":"banchiang"},"content":""},{"lineNumber":63,"author":{"gitId":"banchiang"},"content":"    /**"},{"lineNumber":64,"author":{"gitId":"banchiang"},"content":"     * Returns string of event task name and info."},{"lineNumber":65,"author":{"gitId":"banchiang"},"content":"     * Format is for the display on the list."},{"lineNumber":66,"author":{"gitId":"banchiang"},"content":"     *"},{"lineNumber":67,"author":{"gitId":"banchiang"},"content":"     * @return string format of task\u0027s info."},{"lineNumber":68,"author":{"gitId":"banchiang"},"content":"     */"},{"lineNumber":69,"author":{"gitId":"banchiang"},"content":"    @Override"},{"lineNumber":70,"author":{"gitId":"banchiang"},"content":"    public String toString() {"},{"lineNumber":71,"author":{"gitId":"banchiang"},"content":"        return String.format(\"[E]%s (at: %s - %s)\", super.toString(),"},{"lineNumber":72,"author":{"gitId":"banchiang"},"content":"                super.timeFormat(start), super.timeFormat(end));"},{"lineNumber":73,"author":{"gitId":"banchiang"},"content":"    }"},{"lineNumber":74,"author":{"gitId":"banchiang"},"content":"}"}],"authorContributionMap":{"banchiang":74}},{"path":"src/main/java/duke/FindCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"banchiang"},"content":"package duke;"},{"lineNumber":2,"author":{"gitId":"banchiang"},"content":""},{"lineNumber":3,"author":{"gitId":"banchiang"},"content":"public class FindCommand extends Command {"},{"lineNumber":4,"author":{"gitId":"banchiang"},"content":"    private String pattern;"},{"lineNumber":5,"author":{"gitId":"banchiang"},"content":""},{"lineNumber":6,"author":{"gitId":"banchiang"},"content":"    public FindCommand(String pattern) {"},{"lineNumber":7,"author":{"gitId":"banchiang"},"content":"        this.pattern \u003d pattern;"},{"lineNumber":8,"author":{"gitId":"banchiang"},"content":"    }"},{"lineNumber":9,"author":{"gitId":"banchiang"},"content":""},{"lineNumber":10,"author":{"gitId":"banchiang"},"content":"    @Override"},{"lineNumber":11,"author":{"gitId":"banchiang"},"content":"    public String execute(TaskList tl, Ui ui, Storage storage) {"},{"lineNumber":12,"author":{"gitId":"banchiang"},"content":"        TaskList tempTL \u003d new TaskList();"},{"lineNumber":13,"author":{"gitId":"banchiang"},"content":"        for (Task t : tl.getList()) {"},{"lineNumber":14,"author":{"gitId":"banchiang"},"content":"            String taskName \u003d t.getName();"},{"lineNumber":15,"author":{"gitId":"banchiang"},"content":"            if (taskName.contains(pattern)) {"},{"lineNumber":16,"author":{"gitId":"banchiang"},"content":"                tempTL.add(t);"},{"lineNumber":17,"author":{"gitId":"banchiang"},"content":"            }"},{"lineNumber":18,"author":{"gitId":"banchiang"},"content":"        }"},{"lineNumber":19,"author":{"gitId":"banchiang"},"content":"        return ui.printFoundTasks(tempTL);"},{"lineNumber":20,"author":{"gitId":"banchiang"},"content":"    }"},{"lineNumber":21,"author":{"gitId":"banchiang"},"content":"}"}],"authorContributionMap":{"banchiang":21}},{"path":"src/main/java/duke/HelpCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"banchiang"},"content":"package duke;"},{"lineNumber":2,"author":{"gitId":"banchiang"},"content":""},{"lineNumber":3,"author":{"gitId":"banchiang"},"content":"public class HelpCommand extends Command{"},{"lineNumber":4,"author":{"gitId":"banchiang"},"content":"    @Override"},{"lineNumber":5,"author":{"gitId":"banchiang"},"content":"    public String execute(TaskList tl, Ui ui, Storage storage) {"},{"lineNumber":6,"author":{"gitId":"banchiang"},"content":"        return ui.printHelp();"},{"lineNumber":7,"author":{"gitId":"banchiang"},"content":"    }"},{"lineNumber":8,"author":{"gitId":"banchiang"},"content":"}"}],"authorContributionMap":{"banchiang":8}},{"path":"src/main/java/duke/Launcher.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"banchiang"},"content":"package duke;"},{"lineNumber":2,"author":{"gitId":"banchiang"},"content":""},{"lineNumber":3,"author":{"gitId":"banchiang"},"content":"import javafx.application.Application;"},{"lineNumber":4,"author":{"gitId":"banchiang"},"content":""},{"lineNumber":5,"author":{"gitId":"banchiang"},"content":"public class Launcher {"},{"lineNumber":6,"author":{"gitId":"banchiang"},"content":"    public static void main(String[] args) {"},{"lineNumber":7,"author":{"gitId":"banchiang"},"content":"        Application.launch(Main.class, args);"},{"lineNumber":8,"author":{"gitId":"banchiang"},"content":"    }"},{"lineNumber":9,"author":{"gitId":"banchiang"},"content":"}"}],"authorContributionMap":{"banchiang":9}},{"path":"src/main/java/duke/ListCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"banchiang"},"content":"package duke;"},{"lineNumber":2,"author":{"gitId":"banchiang"},"content":""},{"lineNumber":3,"author":{"gitId":"banchiang"},"content":"public class ListCommand extends Command {"},{"lineNumber":4,"author":{"gitId":"banchiang"},"content":"    /**"},{"lineNumber":5,"author":{"gitId":"banchiang"},"content":"     * List out the tasks in the list to user."},{"lineNumber":6,"author":{"gitId":"banchiang"},"content":"     * @param tl task list."},{"lineNumber":7,"author":{"gitId":"banchiang"},"content":"     * @param ui object for user interface."},{"lineNumber":8,"author":{"gitId":"banchiang"},"content":"     * @param storage object to load and save tasks."},{"lineNumber":9,"author":{"gitId":"banchiang"},"content":"     */"},{"lineNumber":10,"author":{"gitId":"banchiang"},"content":"    @Override"},{"lineNumber":11,"author":{"gitId":"banchiang"},"content":"    public String execute(TaskList tl, Ui ui, Storage storage) {"},{"lineNumber":12,"author":{"gitId":"banchiang"},"content":"        return ui.printTasks(tl);"},{"lineNumber":13,"author":{"gitId":"banchiang"},"content":"    }"},{"lineNumber":14,"author":{"gitId":"banchiang"},"content":"}"}],"authorContributionMap":{"banchiang":14}},{"path":"src/main/java/duke/Main.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"banchiang"},"content":"package duke;"},{"lineNumber":2,"author":{"gitId":"banchiang"},"content":""},{"lineNumber":3,"author":{"gitId":"banchiang"},"content":"import java.io.IOException;"},{"lineNumber":4,"author":{"gitId":"banchiang"},"content":""},{"lineNumber":5,"author":{"gitId":"banchiang"},"content":"import javafx.application.Application;"},{"lineNumber":6,"author":{"gitId":"banchiang"},"content":"import javafx.fxml.FXMLLoader;"},{"lineNumber":7,"author":{"gitId":"banchiang"},"content":"import javafx.scene.Scene;"},{"lineNumber":8,"author":{"gitId":"banchiang"},"content":"import javafx.scene.layout.AnchorPane;"},{"lineNumber":9,"author":{"gitId":"banchiang"},"content":"import javafx.stage.Stage;"},{"lineNumber":10,"author":{"gitId":"banchiang"},"content":""},{"lineNumber":11,"author":{"gitId":"banchiang"},"content":"/**"},{"lineNumber":12,"author":{"gitId":"banchiang"},"content":" * A GUI for Duke using FXML."},{"lineNumber":13,"author":{"gitId":"banchiang"},"content":" */"},{"lineNumber":14,"author":{"gitId":"banchiang"},"content":"public class Main extends Application {"},{"lineNumber":15,"author":{"gitId":"banchiang"},"content":""},{"lineNumber":16,"author":{"gitId":"banchiang"},"content":"    private Duke duke \u003d new Duke();"},{"lineNumber":17,"author":{"gitId":"banchiang"},"content":"    private Ui ui \u003d new Ui();"},{"lineNumber":18,"author":{"gitId":"banchiang"},"content":""},{"lineNumber":19,"author":{"gitId":"banchiang"},"content":"    @Override"},{"lineNumber":20,"author":{"gitId":"banchiang"},"content":"    public void start(Stage stage) {"},{"lineNumber":21,"author":{"gitId":"banchiang"},"content":"        try {"},{"lineNumber":22,"author":{"gitId":"banchiang"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(Main.class.getResource(\"/view/MainWindow.fxml\"));"},{"lineNumber":23,"author":{"gitId":"banchiang"},"content":"            AnchorPane ap \u003d fxmlLoader.load();"},{"lineNumber":24,"author":{"gitId":"banchiang"},"content":"            Scene scene \u003d new Scene(ap);"},{"lineNumber":25,"author":{"gitId":"banchiang"},"content":"            stage.setScene(scene);"},{"lineNumber":26,"author":{"gitId":"banchiang"},"content":"            fxmlLoader.\u003cMainWindow\u003egetController().setDuke(duke);"},{"lineNumber":27,"author":{"gitId":"banchiang"},"content":"            stage.show();"},{"lineNumber":28,"author":{"gitId":"banchiang"},"content":"        } catch (IOException e) {"},{"lineNumber":29,"author":{"gitId":"banchiang"},"content":"            e.printStackTrace();"},{"lineNumber":30,"author":{"gitId":"banchiang"},"content":"        }"},{"lineNumber":31,"author":{"gitId":"banchiang"},"content":"    }"},{"lineNumber":32,"author":{"gitId":"banchiang"},"content":"}"}],"authorContributionMap":{"banchiang":32}},{"path":"src/main/java/duke/MainWindow.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"banchiang"},"content":"package duke;"},{"lineNumber":2,"author":{"gitId":"banchiang"},"content":""},{"lineNumber":3,"author":{"gitId":"banchiang"},"content":"import javafx.application.Platform;"},{"lineNumber":4,"author":{"gitId":"banchiang"},"content":"import javafx.fxml.FXML;"},{"lineNumber":5,"author":{"gitId":"banchiang"},"content":"import javafx.scene.control.Button;"},{"lineNumber":6,"author":{"gitId":"banchiang"},"content":"import javafx.scene.control.ScrollPane;"},{"lineNumber":7,"author":{"gitId":"banchiang"},"content":"import javafx.scene.control.TextField;"},{"lineNumber":8,"author":{"gitId":"banchiang"},"content":"import javafx.scene.image.Image;"},{"lineNumber":9,"author":{"gitId":"banchiang"},"content":"import javafx.scene.layout.AnchorPane;"},{"lineNumber":10,"author":{"gitId":"banchiang"},"content":"import javafx.scene.layout.VBox;"},{"lineNumber":11,"author":{"gitId":"banchiang"},"content":"import javafx.stage.Stage;"},{"lineNumber":12,"author":{"gitId":"banchiang"},"content":""},{"lineNumber":13,"author":{"gitId":"banchiang"},"content":"import java.util.Timer;"},{"lineNumber":14,"author":{"gitId":"banchiang"},"content":"import java.util.TimerTask;"},{"lineNumber":15,"author":{"gitId":"banchiang"},"content":""},{"lineNumber":16,"author":{"gitId":"banchiang"},"content":"/**"},{"lineNumber":17,"author":{"gitId":"banchiang"},"content":" * Controller for MainWindow. Provides the layout for the other controls."},{"lineNumber":18,"author":{"gitId":"banchiang"},"content":" */"},{"lineNumber":19,"author":{"gitId":"banchiang"},"content":"public class MainWindow extends AnchorPane {"},{"lineNumber":20,"author":{"gitId":"banchiang"},"content":"    @FXML"},{"lineNumber":21,"author":{"gitId":"banchiang"},"content":"    private ScrollPane scrollPane;"},{"lineNumber":22,"author":{"gitId":"banchiang"},"content":"    @FXML"},{"lineNumber":23,"author":{"gitId":"banchiang"},"content":"    private VBox dialogContainer;"},{"lineNumber":24,"author":{"gitId":"banchiang"},"content":"    @FXML"},{"lineNumber":25,"author":{"gitId":"banchiang"},"content":"    private TextField userInput;"},{"lineNumber":26,"author":{"gitId":"banchiang"},"content":"    @FXML"},{"lineNumber":27,"author":{"gitId":"banchiang"},"content":"    private Button sendButton;"},{"lineNumber":28,"author":{"gitId":"banchiang"},"content":""},{"lineNumber":29,"author":{"gitId":"banchiang"},"content":"    private Duke duke;"},{"lineNumber":30,"author":{"gitId":"banchiang"},"content":""},{"lineNumber":31,"author":{"gitId":"banchiang"},"content":"    private Image userImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/punpun.jpg\"));"},{"lineNumber":32,"author":{"gitId":"banchiang"},"content":"    private Image dukeImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/robot.jpg\"));"},{"lineNumber":33,"author":{"gitId":"banchiang"},"content":""},{"lineNumber":34,"author":{"gitId":"banchiang"},"content":"    @FXML"},{"lineNumber":35,"author":{"gitId":"banchiang"},"content":"    public void initialize() {"},{"lineNumber":36,"author":{"gitId":"banchiang"},"content":"        scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());"},{"lineNumber":37,"author":{"gitId":"banchiang"},"content":"        dialogContainer.getChildren().addAll("},{"lineNumber":38,"author":{"gitId":"banchiang"},"content":"                DialogBox.getDukeDialog(Duke.greeting(), dukeImage),"},{"lineNumber":39,"author":{"gitId":"banchiang"},"content":"                DialogBox.getDukeDialog(Duke.help(), dukeImage)"},{"lineNumber":40,"author":{"gitId":"banchiang"},"content":"        );"},{"lineNumber":41,"author":{"gitId":"banchiang"},"content":"    }"},{"lineNumber":42,"author":{"gitId":"banchiang"},"content":""},{"lineNumber":43,"author":{"gitId":"banchiang"},"content":"    public void setDuke(Duke d) {"},{"lineNumber":44,"author":{"gitId":"banchiang"},"content":"        duke \u003d d;"},{"lineNumber":45,"author":{"gitId":"banchiang"},"content":"    }"},{"lineNumber":46,"author":{"gitId":"banchiang"},"content":""},{"lineNumber":47,"author":{"gitId":"banchiang"},"content":"    /**"},{"lineNumber":48,"author":{"gitId":"banchiang"},"content":"     * Creates two dialog boxes, one echoing user input and the other containing Duke\u0027s reply and then appends them to"},{"lineNumber":49,"author":{"gitId":"banchiang"},"content":"     * the dialog container. Clears the user input after processing."},{"lineNumber":50,"author":{"gitId":"banchiang"},"content":"     */"},{"lineNumber":51,"author":{"gitId":"banchiang"},"content":"    @FXML"},{"lineNumber":52,"author":{"gitId":"banchiang"},"content":"    private void handleUserInput() throws Exception {"},{"lineNumber":53,"author":{"gitId":"banchiang"},"content":"        String input \u003d userInput.getText();"},{"lineNumber":54,"author":{"gitId":"banchiang"},"content":"        String response \u003d duke.getResponse(input);"},{"lineNumber":55,"author":{"gitId":"banchiang"},"content":"        dialogContainer.getChildren().addAll("},{"lineNumber":56,"author":{"gitId":"banchiang"},"content":"                DialogBox.getUserDialog(input, userImage),"},{"lineNumber":57,"author":{"gitId":"banchiang"},"content":"                DialogBox.getDukeDialog(response, dukeImage)"},{"lineNumber":58,"author":{"gitId":"banchiang"},"content":"        );"},{"lineNumber":59,"author":{"gitId":"banchiang"},"content":"        userInput.clear();"},{"lineNumber":60,"author":{"gitId":"banchiang"},"content":"        if(input.equals(\"bye\")) {"},{"lineNumber":61,"author":{"gitId":"banchiang"},"content":"            TimerTask timertask \u003d new TimerTask() {"},{"lineNumber":62,"author":{"gitId":"banchiang"},"content":"                public void run() {"},{"lineNumber":63,"author":{"gitId":"banchiang"},"content":"                    Platform.exit();"},{"lineNumber":64,"author":{"gitId":"banchiang"},"content":"                    System.exit(0);"},{"lineNumber":65,"author":{"gitId":"banchiang"},"content":"                }"},{"lineNumber":66,"author":{"gitId":"banchiang"},"content":"            };"},{"lineNumber":67,"author":{"gitId":"banchiang"},"content":"            Timer timer \u003d new Timer();"},{"lineNumber":68,"author":{"gitId":"banchiang"},"content":"            timer.schedule(timertask, 1000);"},{"lineNumber":69,"author":{"gitId":"banchiang"},"content":"        }"},{"lineNumber":70,"author":{"gitId":"banchiang"},"content":"    }"},{"lineNumber":71,"author":{"gitId":"banchiang"},"content":"}"}],"authorContributionMap":{"banchiang":71}},{"path":"src/main/java/duke/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"banchiang"},"content":"package duke;"},{"lineNumber":2,"author":{"gitId":"banchiang"},"content":""},{"lineNumber":3,"author":{"gitId":"banchiang"},"content":"import java.time.LocalDateTime;"},{"lineNumber":4,"author":{"gitId":"banchiang"},"content":"import java.time.format.DateTimeFormatter;"},{"lineNumber":5,"author":{"gitId":"banchiang"},"content":""},{"lineNumber":6,"author":{"gitId":"banchiang"},"content":"public class Parser {"},{"lineNumber":7,"author":{"gitId":"banchiang"},"content":""},{"lineNumber":8,"author":{"gitId":"banchiang"},"content":"    /**"},{"lineNumber":9,"author":{"gitId":"banchiang"},"content":"     * Returns LocalDateTime from input string date format."},{"lineNumber":10,"author":{"gitId":"banchiang"},"content":"     *"},{"lineNumber":11,"author":{"gitId":"banchiang"},"content":"     * @param date Input date from user."},{"lineNumber":12,"author":{"gitId":"banchiang"},"content":"     * @return Time specified by user."},{"lineNumber":13,"author":{"gitId":"banchiang"},"content":"     */"},{"lineNumber":14,"author":{"gitId":"banchiang"},"content":"    public static LocalDateTime parseInputDate(String date) {"},{"lineNumber":15,"author":{"gitId":"banchiang"},"content":"        return LocalDateTime.parse(date, DateTimeFormatter.ofPattern(\"yyyy-M-d Hmm\"));"},{"lineNumber":16,"author":{"gitId":"banchiang"},"content":"    }"},{"lineNumber":17,"author":{"gitId":"banchiang"},"content":""},{"lineNumber":18,"author":{"gitId":"banchiang"},"content":"    /**"},{"lineNumber":19,"author":{"gitId":"banchiang"},"content":"     * Returns LocalDateTime from file string date format."},{"lineNumber":20,"author":{"gitId":"banchiang"},"content":"     *"},{"lineNumber":21,"author":{"gitId":"banchiang"},"content":"     * @param date Input date from file"},{"lineNumber":22,"author":{"gitId":"banchiang"},"content":"     * @return Time specified by file."},{"lineNumber":23,"author":{"gitId":"banchiang"},"content":"     */"},{"lineNumber":24,"author":{"gitId":"banchiang"},"content":"    public static LocalDateTime parseFileDate(String date) {"},{"lineNumber":25,"author":{"gitId":"banchiang"},"content":"        return LocalDateTime.parse(date, DateTimeFormatter.ofPattern(\"MMM d yyyy Hmm\"));"},{"lineNumber":26,"author":{"gitId":"banchiang"},"content":"    }"},{"lineNumber":27,"author":{"gitId":"banchiang"},"content":""},{"lineNumber":28,"author":{"gitId":"banchiang"},"content":"    /**"},{"lineNumber":29,"author":{"gitId":"banchiang"},"content":"     * Parse the user input for Duke."},{"lineNumber":30,"author":{"gitId":"banchiang"},"content":"     * ALlows duke to identify which command user inputted."},{"lineNumber":31,"author":{"gitId":"banchiang"},"content":"     * Returns the unique command."},{"lineNumber":32,"author":{"gitId":"banchiang"},"content":"     *"},{"lineNumber":33,"author":{"gitId":"banchiang"},"content":"     * @param input User input for the command for Duke."},{"lineNumber":34,"author":{"gitId":"banchiang"},"content":"     * @return Command of a type matching to the input from user."},{"lineNumber":35,"author":{"gitId":"banchiang"},"content":"     * @throws DukeWrongCommandException When command is unknown."},{"lineNumber":36,"author":{"gitId":"banchiang"},"content":"     */"},{"lineNumber":37,"author":{"gitId":"banchiang"},"content":"    public static Command parseInput(String input) throws DukeWrongCommandException {"},{"lineNumber":38,"author":{"gitId":"banchiang"},"content":"        String[] parsedInput \u003d input.split(\" \", 2);"},{"lineNumber":39,"author":{"gitId":"banchiang"},"content":"        String commandStr \u003d parsedInput[0];"},{"lineNumber":40,"author":{"gitId":"banchiang"},"content":"        Command c;"},{"lineNumber":41,"author":{"gitId":"banchiang"},"content":"        switch (commandStr) {"},{"lineNumber":42,"author":{"gitId":"banchiang"},"content":"        case \"bye\":"},{"lineNumber":43,"author":{"gitId":"banchiang"},"content":"            c \u003d new ByeCommand();"},{"lineNumber":44,"author":{"gitId":"banchiang"},"content":"            break;"},{"lineNumber":45,"author":{"gitId":"banchiang"},"content":"        case \"help\":"},{"lineNumber":46,"author":{"gitId":"banchiang"},"content":"            c \u003d new HelpCommand();"},{"lineNumber":47,"author":{"gitId":"banchiang"},"content":"            break;"},{"lineNumber":48,"author":{"gitId":"banchiang"},"content":"        case \"find\":"},{"lineNumber":49,"author":{"gitId":"banchiang"},"content":"            c \u003d new FindCommand(parsedInput[1]);"},{"lineNumber":50,"author":{"gitId":"banchiang"},"content":"            break;"},{"lineNumber":51,"author":{"gitId":"banchiang"},"content":"        case \"list\":"},{"lineNumber":52,"author":{"gitId":"banchiang"},"content":"            c \u003d new ListCommand();"},{"lineNumber":53,"author":{"gitId":"banchiang"},"content":"            break;"},{"lineNumber":54,"author":{"gitId":"banchiang"},"content":"        case \"done\":"},{"lineNumber":55,"author":{"gitId":"banchiang"},"content":"            c \u003d new DoneCommand(Integer.parseInt(parsedInput[1]));"},{"lineNumber":56,"author":{"gitId":"banchiang"},"content":"            break;"},{"lineNumber":57,"author":{"gitId":"banchiang"},"content":"        case \"todo\":"},{"lineNumber":58,"author":{"gitId":"banchiang"},"content":"        case \"deadline\":"},{"lineNumber":59,"author":{"gitId":"banchiang"},"content":"        case \"event\":"},{"lineNumber":60,"author":{"gitId":"banchiang"},"content":"            c \u003d new AddCommand(commandStr, parsedInput[1]);"},{"lineNumber":61,"author":{"gitId":"banchiang"},"content":"            break;"},{"lineNumber":62,"author":{"gitId":"banchiang"},"content":"        case \"delete\":"},{"lineNumber":63,"author":{"gitId":"banchiang"},"content":"            c \u003d new DeleteCommand(Integer.parseInt(parsedInput[1]));"},{"lineNumber":64,"author":{"gitId":"banchiang"},"content":"            break;"},{"lineNumber":65,"author":{"gitId":"banchiang"},"content":"        default:"},{"lineNumber":66,"author":{"gitId":"banchiang"},"content":"            throw new DukeWrongCommandException(commandStr);"},{"lineNumber":67,"author":{"gitId":"banchiang"},"content":"        }"},{"lineNumber":68,"author":{"gitId":"banchiang"},"content":"        return c;"},{"lineNumber":69,"author":{"gitId":"banchiang"},"content":"    }"},{"lineNumber":70,"author":{"gitId":"banchiang"},"content":"}"}],"authorContributionMap":{"banchiang":70}},{"path":"src/main/java/duke/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"banchiang"},"content":"package duke;"},{"lineNumber":2,"author":{"gitId":"banchiang"},"content":""},{"lineNumber":3,"author":{"gitId":"banchiang"},"content":"import java.io.File;"},{"lineNumber":4,"author":{"gitId":"banchiang"},"content":"import java.io.FileWriter;"},{"lineNumber":5,"author":{"gitId":"banchiang"},"content":"import java.io.IOException;"},{"lineNumber":6,"author":{"gitId":"banchiang"},"content":"import java.time.LocalDateTime;"},{"lineNumber":7,"author":{"gitId":"banchiang"},"content":"import java.util.Scanner;"},{"lineNumber":8,"author":{"gitId":"banchiang"},"content":""},{"lineNumber":9,"author":{"gitId":"banchiang"},"content":"public class Storage {"},{"lineNumber":10,"author":{"gitId":"banchiang"},"content":"    private final String PATH_NAME \u003d \"C:/users/chian/Desktop/CS2103/ip/data/\";"},{"lineNumber":11,"author":{"gitId":"banchiang"},"content":"    private final String FILE_NAME \u003d \"data.txt\";"},{"lineNumber":12,"author":{"gitId":"banchiang"},"content":""},{"lineNumber":13,"author":{"gitId":"banchiang"},"content":"    /**"},{"lineNumber":14,"author":{"gitId":"banchiang"},"content":"     * Writes file with tasks on list and saves."},{"lineNumber":15,"author":{"gitId":"banchiang"},"content":"     *"},{"lineNumber":16,"author":{"gitId":"banchiang"},"content":"     * @param tasks string format of all tasks on list."},{"lineNumber":17,"author":{"gitId":"banchiang"},"content":"     */"},{"lineNumber":18,"author":{"gitId":"banchiang"},"content":"    public void save(String tasks) {"},{"lineNumber":19,"author":{"gitId":"banchiang"},"content":"        try {"},{"lineNumber":20,"author":{"gitId":"banchiang"},"content":"            FileWriter fw \u003d new FileWriter(PATH_NAME + FILE_NAME);"},{"lineNumber":21,"author":{"gitId":"banchiang"},"content":"            fw.write(tasks);"},{"lineNumber":22,"author":{"gitId":"banchiang"},"content":"            fw.close();"},{"lineNumber":23,"author":{"gitId":"banchiang"},"content":"        } catch (IOException e) {"},{"lineNumber":24,"author":{"gitId":"banchiang"},"content":"            Ui.printMessage(\"Unable to save file!\");"},{"lineNumber":25,"author":{"gitId":"banchiang"},"content":"        }"},{"lineNumber":26,"author":{"gitId":"banchiang"},"content":"    }"},{"lineNumber":27,"author":{"gitId":"banchiang"},"content":""},{"lineNumber":28,"author":{"gitId":"banchiang"},"content":"    /**"},{"lineNumber":29,"author":{"gitId":"banchiang"},"content":"     * Load tasks stored in drive to task list."},{"lineNumber":30,"author":{"gitId":"banchiang"},"content":"     *"},{"lineNumber":31,"author":{"gitId":"banchiang"},"content":"     */"},{"lineNumber":32,"author":{"gitId":"banchiang"},"content":"    public TaskList load() {"},{"lineNumber":33,"author":{"gitId":"banchiang"},"content":"        try {"},{"lineNumber":34,"author":{"gitId":"banchiang"},"content":"            TaskList tl \u003d new TaskList();"},{"lineNumber":35,"author":{"gitId":"banchiang"},"content":"            File f \u003d new File(PATH_NAME + FILE_NAME);"},{"lineNumber":36,"author":{"gitId":"banchiang"},"content":"            f.createNewFile();"},{"lineNumber":37,"author":{"gitId":"banchiang"},"content":"            Scanner sc \u003d new Scanner(f);"},{"lineNumber":38,"author":{"gitId":"banchiang"},"content":"            while (sc.hasNext()) {"},{"lineNumber":39,"author":{"gitId":"banchiang"},"content":"                String strTask \u003d sc.nextLine();"},{"lineNumber":40,"author":{"gitId":"banchiang"},"content":"                String[] taskArray \u003d strTask.split(\" \\\\| \");"},{"lineNumber":41,"author":{"gitId":"banchiang"},"content":"                Task t \u003d null;"},{"lineNumber":42,"author":{"gitId":"banchiang"},"content":"                switch (taskArray[0]) {"},{"lineNumber":43,"author":{"gitId":"banchiang"},"content":"                case \"T\":"},{"lineNumber":44,"author":{"gitId":"banchiang"},"content":"                    t \u003d new ToDo(taskArray[2]);"},{"lineNumber":45,"author":{"gitId":"banchiang"},"content":"                    break;"},{"lineNumber":46,"author":{"gitId":"banchiang"},"content":"                case \"E\":"},{"lineNumber":47,"author":{"gitId":"banchiang"},"content":"                    String[] timeArray \u003d taskArray[3].split(\"-\");"},{"lineNumber":48,"author":{"gitId":"banchiang"},"content":"                    LocalDateTime ldtStart \u003d Parser.parseFileDate(timeArray[0]);"},{"lineNumber":49,"author":{"gitId":"banchiang"},"content":"                    LocalDateTime ldtEnd \u003d Parser.parseFileDate(timeArray[1]);"},{"lineNumber":50,"author":{"gitId":"banchiang"},"content":"                    t \u003d new Event(taskArray[2], ldtStart, ldtEnd);"},{"lineNumber":51,"author":{"gitId":"banchiang"},"content":"                    break;"},{"lineNumber":52,"author":{"gitId":"banchiang"},"content":"                case \"D\":"},{"lineNumber":53,"author":{"gitId":"banchiang"},"content":"                    LocalDateTime ldt \u003d Parser.parseFileDate(taskArray[3]);"},{"lineNumber":54,"author":{"gitId":"banchiang"},"content":"                    t \u003d new Deadline(taskArray[2], ldt);"},{"lineNumber":55,"author":{"gitId":"banchiang"},"content":"                    break;"},{"lineNumber":56,"author":{"gitId":"banchiang"},"content":"                default:"},{"lineNumber":57,"author":{"gitId":"banchiang"},"content":"                    throw new DukeWrongFormatException(\"loaded file\");"},{"lineNumber":58,"author":{"gitId":"banchiang"},"content":"                }"},{"lineNumber":59,"author":{"gitId":"banchiang"},"content":"                if (t !\u003d null) {"},{"lineNumber":60,"author":{"gitId":"banchiang"},"content":"                    if (taskArray[1].equals(\"X\")) {"},{"lineNumber":61,"author":{"gitId":"banchiang"},"content":"                        t.finishTask();"},{"lineNumber":62,"author":{"gitId":"banchiang"},"content":"                    }"},{"lineNumber":63,"author":{"gitId":"banchiang"},"content":"                    tl.add(t);"},{"lineNumber":64,"author":{"gitId":"banchiang"},"content":"                }"},{"lineNumber":65,"author":{"gitId":"banchiang"},"content":"            }"},{"lineNumber":66,"author":{"gitId":"banchiang"},"content":"            return tl;"},{"lineNumber":67,"author":{"gitId":"banchiang"},"content":"        } catch (Exception e) {"},{"lineNumber":68,"author":{"gitId":"banchiang"},"content":"            Ui.printMessage(\"Unable to load file!\");"},{"lineNumber":69,"author":{"gitId":"banchiang"},"content":"            return new TaskList();"},{"lineNumber":70,"author":{"gitId":"banchiang"},"content":"        }"},{"lineNumber":71,"author":{"gitId":"banchiang"},"content":"    }"},{"lineNumber":72,"author":{"gitId":"banchiang"},"content":"}"}],"authorContributionMap":{"banchiang":72}},{"path":"src/main/java/duke/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"banchiang"},"content":"package duke;"},{"lineNumber":2,"author":{"gitId":"banchiang"},"content":""},{"lineNumber":3,"author":{"gitId":"banchiang"},"content":"import java.time.LocalDateTime;"},{"lineNumber":4,"author":{"gitId":"banchiang"},"content":"import java.time.format.DateTimeFormatter;"},{"lineNumber":5,"author":{"gitId":"banchiang"},"content":""},{"lineNumber":6,"author":{"gitId":"banchiang"},"content":"public abstract class Task {"},{"lineNumber":7,"author":{"gitId":"banchiang"},"content":"    protected String description;"},{"lineNumber":8,"author":{"gitId":"banchiang"},"content":"    protected boolean isDone;"},{"lineNumber":9,"author":{"gitId":"banchiang"},"content":""},{"lineNumber":10,"author":{"gitId":"banchiang"},"content":"    /**"},{"lineNumber":11,"author":{"gitId":"banchiang"},"content":"     * Constructor for task object."},{"lineNumber":12,"author":{"gitId":"banchiang"},"content":"     * @param description Name of task."},{"lineNumber":13,"author":{"gitId":"banchiang"},"content":"     */"},{"lineNumber":14,"author":{"gitId":"banchiang"},"content":"    public Task(String description) {"},{"lineNumber":15,"author":{"gitId":"banchiang"},"content":"        this.description \u003d description;"},{"lineNumber":16,"author":{"gitId":"banchiang"},"content":"        this.isDone \u003d false;"},{"lineNumber":17,"author":{"gitId":"banchiang"},"content":"    }"},{"lineNumber":18,"author":{"gitId":"banchiang"},"content":""},{"lineNumber":19,"author":{"gitId":"banchiang"},"content":""},{"lineNumber":20,"author":{"gitId":"banchiang"},"content":"    /**"},{"lineNumber":21,"author":{"gitId":"banchiang"},"content":"     * Return string logo for task\u0027s completion."},{"lineNumber":22,"author":{"gitId":"banchiang"},"content":"     * \u0027X\u0027 is done. \u0027 \u0027 is not done."},{"lineNumber":23,"author":{"gitId":"banchiang"},"content":"     *"},{"lineNumber":24,"author":{"gitId":"banchiang"},"content":"     * @return string logo."},{"lineNumber":25,"author":{"gitId":"banchiang"},"content":"     */"},{"lineNumber":26,"author":{"gitId":"banchiang"},"content":"    public String getStatusIcon() {"},{"lineNumber":27,"author":{"gitId":"banchiang"},"content":"        return (isDone ? \"X\" : \" \");"},{"lineNumber":28,"author":{"gitId":"banchiang"},"content":"    }"},{"lineNumber":29,"author":{"gitId":"banchiang"},"content":""},{"lineNumber":30,"author":{"gitId":"banchiang"},"content":"    /**"},{"lineNumber":31,"author":{"gitId":"banchiang"},"content":"     * String for task date and timing."},{"lineNumber":32,"author":{"gitId":"banchiang"},"content":"     *"},{"lineNumber":33,"author":{"gitId":"banchiang"},"content":"     * @param dateTime date and timing of task."},{"lineNumber":34,"author":{"gitId":"banchiang"},"content":"     * @return String for task date and timing."},{"lineNumber":35,"author":{"gitId":"banchiang"},"content":"     */"},{"lineNumber":36,"author":{"gitId":"banchiang"},"content":"    public String timeFormat(LocalDateTime dateTime) {"},{"lineNumber":37,"author":{"gitId":"banchiang"},"content":"        return dateTime.format(DateTimeFormatter.ofPattern(\"MMM d yyyy Hmm\"));"},{"lineNumber":38,"author":{"gitId":"banchiang"},"content":"    }"},{"lineNumber":39,"author":{"gitId":"banchiang"},"content":""},{"lineNumber":40,"author":{"gitId":"banchiang"},"content":"    public String getName() {"},{"lineNumber":41,"author":{"gitId":"banchiang"},"content":"        return description;"},{"lineNumber":42,"author":{"gitId":"banchiang"},"content":"    }"},{"lineNumber":43,"author":{"gitId":"banchiang"},"content":""},{"lineNumber":44,"author":{"gitId":"banchiang"},"content":"    public void finishTask() {"},{"lineNumber":45,"author":{"gitId":"banchiang"},"content":"        isDone \u003d true;"},{"lineNumber":46,"author":{"gitId":"banchiang"},"content":"    }"},{"lineNumber":47,"author":{"gitId":"banchiang"},"content":""},{"lineNumber":48,"author":{"gitId":"banchiang"},"content":"    public abstract String saveTask();"},{"lineNumber":49,"author":{"gitId":"banchiang"},"content":""},{"lineNumber":50,"author":{"gitId":"banchiang"},"content":""},{"lineNumber":51,"author":{"gitId":"banchiang"},"content":""},{"lineNumber":52,"author":{"gitId":"banchiang"},"content":"    @Override"},{"lineNumber":53,"author":{"gitId":"banchiang"},"content":"    public String toString() {"},{"lineNumber":54,"author":{"gitId":"banchiang"},"content":"        return String.format(\"[%s] %s\", this.getStatusIcon(), this.description);"},{"lineNumber":55,"author":{"gitId":"banchiang"},"content":"    }"},{"lineNumber":56,"author":{"gitId":"banchiang"},"content":"}"}],"authorContributionMap":{"banchiang":56}},{"path":"src/main/java/duke/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"banchiang"},"content":"package duke;"},{"lineNumber":2,"author":{"gitId":"banchiang"},"content":""},{"lineNumber":3,"author":{"gitId":"banchiang"},"content":"import java.lang.StringBuilder;"},{"lineNumber":4,"author":{"gitId":"banchiang"},"content":"import java.util.ArrayList;"},{"lineNumber":5,"author":{"gitId":"banchiang"},"content":"import java.util.Collection;"},{"lineNumber":6,"author":{"gitId":"banchiang"},"content":""},{"lineNumber":7,"author":{"gitId":"banchiang"},"content":"public class TaskList {"},{"lineNumber":8,"author":{"gitId":"banchiang"},"content":"    private ArrayList\u003cTask\u003e taskList;"},{"lineNumber":9,"author":{"gitId":"banchiang"},"content":""},{"lineNumber":10,"author":{"gitId":"banchiang"},"content":"    public TaskList() {"},{"lineNumber":11,"author":{"gitId":"banchiang"},"content":"        this.taskList \u003d new ArrayList\u003c\u003e();"},{"lineNumber":12,"author":{"gitId":"banchiang"},"content":"    }"},{"lineNumber":13,"author":{"gitId":"banchiang"},"content":""},{"lineNumber":14,"author":{"gitId":"banchiang"},"content":"    public TaskList(Collection\u003cTask\u003e tasks) {"},{"lineNumber":15,"author":{"gitId":"banchiang"},"content":"        this.taskList \u003d new ArrayList\u003c\u003e(tasks);"},{"lineNumber":16,"author":{"gitId":"banchiang"},"content":"    }"},{"lineNumber":17,"author":{"gitId":"banchiang"},"content":""},{"lineNumber":18,"author":{"gitId":"banchiang"},"content":"    /**"},{"lineNumber":19,"author":{"gitId":"banchiang"},"content":"     * Add task into task list."},{"lineNumber":20,"author":{"gitId":"banchiang"},"content":"     *"},{"lineNumber":21,"author":{"gitId":"banchiang"},"content":"     * @param t task to be added into list."},{"lineNumber":22,"author":{"gitId":"banchiang"},"content":"     */"},{"lineNumber":23,"author":{"gitId":"banchiang"},"content":"    public void add(Task t) {"},{"lineNumber":24,"author":{"gitId":"banchiang"},"content":"        taskList.add(t);"},{"lineNumber":25,"author":{"gitId":"banchiang"},"content":"    }"},{"lineNumber":26,"author":{"gitId":"banchiang"},"content":""},{"lineNumber":27,"author":{"gitId":"banchiang"},"content":"    /**"},{"lineNumber":28,"author":{"gitId":"banchiang"},"content":"     * Remove a task from the list."},{"lineNumber":29,"author":{"gitId":"banchiang"},"content":"     *"},{"lineNumber":30,"author":{"gitId":"banchiang"},"content":"     * @param num index of task to be removed."},{"lineNumber":31,"author":{"gitId":"banchiang"},"content":"     * @return removed task."},{"lineNumber":32,"author":{"gitId":"banchiang"},"content":"     */"},{"lineNumber":33,"author":{"gitId":"banchiang"},"content":"    public Task remove(int num) {"},{"lineNumber":34,"author":{"gitId":"banchiang"},"content":"        return taskList.remove(num);"},{"lineNumber":35,"author":{"gitId":"banchiang"},"content":"    }"},{"lineNumber":36,"author":{"gitId":"banchiang"},"content":""},{"lineNumber":37,"author":{"gitId":"banchiang"},"content":"    /**"},{"lineNumber":38,"author":{"gitId":"banchiang"},"content":"     * Return task from the list."},{"lineNumber":39,"author":{"gitId":"banchiang"},"content":"     *"},{"lineNumber":40,"author":{"gitId":"banchiang"},"content":"     * @param num index of task."},{"lineNumber":41,"author":{"gitId":"banchiang"},"content":"     * @return task of certain index."},{"lineNumber":42,"author":{"gitId":"banchiang"},"content":"     */"},{"lineNumber":43,"author":{"gitId":"banchiang"},"content":"    public Task get(int num) {"},{"lineNumber":44,"author":{"gitId":"banchiang"},"content":"        return taskList.get(num);"},{"lineNumber":45,"author":{"gitId":"banchiang"},"content":"    }"},{"lineNumber":46,"author":{"gitId":"banchiang"},"content":""},{"lineNumber":47,"author":{"gitId":"banchiang"},"content":"    /**"},{"lineNumber":48,"author":{"gitId":"banchiang"},"content":"     * Replace task of certain index."},{"lineNumber":49,"author":{"gitId":"banchiang"},"content":"     *"},{"lineNumber":50,"author":{"gitId":"banchiang"},"content":"     * @param taskNum index of task replaced."},{"lineNumber":51,"author":{"gitId":"banchiang"},"content":"     * @param t task that is replacing."},{"lineNumber":52,"author":{"gitId":"banchiang"},"content":"     */"},{"lineNumber":53,"author":{"gitId":"banchiang"},"content":"    public void set(int taskNum, Task t) {"},{"lineNumber":54,"author":{"gitId":"banchiang"},"content":"        taskList.set(taskNum, t);"},{"lineNumber":55,"author":{"gitId":"banchiang"},"content":"    }"},{"lineNumber":56,"author":{"gitId":"banchiang"},"content":""},{"lineNumber":57,"author":{"gitId":"banchiang"},"content":"    /**"},{"lineNumber":58,"author":{"gitId":"banchiang"},"content":"     * Returns task list in ArrayList"},{"lineNumber":59,"author":{"gitId":"banchiang"},"content":"     *"},{"lineNumber":60,"author":{"gitId":"banchiang"},"content":"     * @return ArrayList of tasks."},{"lineNumber":61,"author":{"gitId":"banchiang"},"content":"     */"},{"lineNumber":62,"author":{"gitId":"banchiang"},"content":"    public ArrayList\u003cTask\u003e getList() {"},{"lineNumber":63,"author":{"gitId":"banchiang"},"content":"        return new ArrayList\u003cTask\u003e(taskList);"},{"lineNumber":64,"author":{"gitId":"banchiang"},"content":"    }"},{"lineNumber":65,"author":{"gitId":"banchiang"},"content":""},{"lineNumber":66,"author":{"gitId":"banchiang"},"content":"    public int size() {"},{"lineNumber":67,"author":{"gitId":"banchiang"},"content":"        return taskList.size();"},{"lineNumber":68,"author":{"gitId":"banchiang"},"content":"    }"},{"lineNumber":69,"author":{"gitId":"banchiang"},"content":""},{"lineNumber":70,"author":{"gitId":"banchiang"},"content":"    /**"},{"lineNumber":71,"author":{"gitId":"banchiang"},"content":"     * Returns string format of all task in list."},{"lineNumber":72,"author":{"gitId":"banchiang"},"content":"     *"},{"lineNumber":73,"author":{"gitId":"banchiang"},"content":"     * @return concatenated string of tasks in list."},{"lineNumber":74,"author":{"gitId":"banchiang"},"content":"     */"},{"lineNumber":75,"author":{"gitId":"banchiang"},"content":"    @Override"},{"lineNumber":76,"author":{"gitId":"banchiang"},"content":"    public String toString() {"},{"lineNumber":77,"author":{"gitId":"banchiang"},"content":"        StringBuilder sb \u003d new StringBuilder(\"\");"},{"lineNumber":78,"author":{"gitId":"banchiang"},"content":"        for (Task t : taskList) {"},{"lineNumber":79,"author":{"gitId":"banchiang"},"content":"            sb.append(t.saveTask());"},{"lineNumber":80,"author":{"gitId":"banchiang"},"content":"        }"},{"lineNumber":81,"author":{"gitId":"banchiang"},"content":"        return sb.toString();"},{"lineNumber":82,"author":{"gitId":"banchiang"},"content":"    }"},{"lineNumber":83,"author":{"gitId":"banchiang"},"content":"}"}],"authorContributionMap":{"banchiang":83}},{"path":"src/main/java/duke/ToDo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"banchiang"},"content":"package duke;"},{"lineNumber":2,"author":{"gitId":"banchiang"},"content":""},{"lineNumber":3,"author":{"gitId":"banchiang"},"content":"public class ToDo extends Task {"},{"lineNumber":4,"author":{"gitId":"banchiang"},"content":"    /**"},{"lineNumber":5,"author":{"gitId":"banchiang"},"content":"     * Constructor of to-do task."},{"lineNumber":6,"author":{"gitId":"banchiang"},"content":"     * @param description Name of task."},{"lineNumber":7,"author":{"gitId":"banchiang"},"content":"     */"},{"lineNumber":8,"author":{"gitId":"banchiang"},"content":"    public ToDo(String description) {"},{"lineNumber":9,"author":{"gitId":"banchiang"},"content":"        super(description);"},{"lineNumber":10,"author":{"gitId":"banchiang"},"content":"    }"},{"lineNumber":11,"author":{"gitId":"banchiang"},"content":""},{"lineNumber":12,"author":{"gitId":"banchiang"},"content":"    /**"},{"lineNumber":13,"author":{"gitId":"banchiang"},"content":"     * Creates a to-do task and returns it."},{"lineNumber":14,"author":{"gitId":"banchiang"},"content":"     *"},{"lineNumber":15,"author":{"gitId":"banchiang"},"content":"     * @param taskInfo information of to-do task."},{"lineNumber":16,"author":{"gitId":"banchiang"},"content":"     * @return new to-do task."},{"lineNumber":17,"author":{"gitId":"banchiang"},"content":"     * @throws DukeMissingDescriptionException if task info is empty."},{"lineNumber":18,"author":{"gitId":"banchiang"},"content":"     */"},{"lineNumber":19,"author":{"gitId":"banchiang"},"content":"    public static ToDo create(String taskInfo) throws DukeMissingDescriptionException {"},{"lineNumber":20,"author":{"gitId":"banchiang"},"content":"        if (taskInfo.equals(\" \") || taskInfo.equals(\"\")) {"},{"lineNumber":21,"author":{"gitId":"banchiang"},"content":"            throw new DukeMissingDescriptionException(\"todo\");"},{"lineNumber":22,"author":{"gitId":"banchiang"},"content":"        } else {"},{"lineNumber":23,"author":{"gitId":"banchiang"},"content":"            return new ToDo(taskInfo);"},{"lineNumber":24,"author":{"gitId":"banchiang"},"content":"        }"},{"lineNumber":25,"author":{"gitId":"banchiang"},"content":"    }"},{"lineNumber":26,"author":{"gitId":"banchiang"},"content":""},{"lineNumber":27,"author":{"gitId":"banchiang"},"content":"    /**"},{"lineNumber":28,"author":{"gitId":"banchiang"},"content":"     * Return string of to-do task name and info."},{"lineNumber":29,"author":{"gitId":"banchiang"},"content":"     * Format is for saving task into text file."},{"lineNumber":30,"author":{"gitId":"banchiang"},"content":"     *"},{"lineNumber":31,"author":{"gitId":"banchiang"},"content":"     * @return string format of to-do info."},{"lineNumber":32,"author":{"gitId":"banchiang"},"content":"     */"},{"lineNumber":33,"author":{"gitId":"banchiang"},"content":"    @Override"},{"lineNumber":34,"author":{"gitId":"banchiang"},"content":"    public String saveTask() {"},{"lineNumber":35,"author":{"gitId":"banchiang"},"content":"        return String.format(\"T | %s | %s\\n\","},{"lineNumber":36,"author":{"gitId":"banchiang"},"content":"                super.getStatusIcon(), description);"},{"lineNumber":37,"author":{"gitId":"banchiang"},"content":"    }"},{"lineNumber":38,"author":{"gitId":"banchiang"},"content":""},{"lineNumber":39,"author":{"gitId":"banchiang"},"content":"    /**"},{"lineNumber":40,"author":{"gitId":"banchiang"},"content":"     * Returns string of event task name and info."},{"lineNumber":41,"author":{"gitId":"banchiang"},"content":"     * Format is for the display on the list."},{"lineNumber":42,"author":{"gitId":"banchiang"},"content":"     *"},{"lineNumber":43,"author":{"gitId":"banchiang"},"content":"     * @return string format of task\u0027s info."},{"lineNumber":44,"author":{"gitId":"banchiang"},"content":"     */"},{"lineNumber":45,"author":{"gitId":"banchiang"},"content":"    @Override"},{"lineNumber":46,"author":{"gitId":"banchiang"},"content":"    public String toString() {"},{"lineNumber":47,"author":{"gitId":"banchiang"},"content":"        return \"[T]\" + super.toString();"},{"lineNumber":48,"author":{"gitId":"banchiang"},"content":"    }"},{"lineNumber":49,"author":{"gitId":"banchiang"},"content":"}"}],"authorContributionMap":{"banchiang":49}},{"path":"src/main/java/duke/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"banchiang"},"content":"package duke;"},{"lineNumber":2,"author":{"gitId":"banchiang"},"content":""},{"lineNumber":3,"author":{"gitId":"banchiang"},"content":"import java.util.Scanner;"},{"lineNumber":4,"author":{"gitId":"banchiang"},"content":""},{"lineNumber":5,"author":{"gitId":"banchiang"},"content":"public class Ui {"},{"lineNumber":6,"author":{"gitId":"banchiang"},"content":"    private final String LINE \u003d \"\";"},{"lineNumber":7,"author":{"gitId":"banchiang"},"content":"    private final String HELP \u003d \"     These are the formats for Duke commands:\\n\""},{"lineNumber":8,"author":{"gitId":"banchiang"},"content":"            + \"    - help\\n\""},{"lineNumber":9,"author":{"gitId":"banchiang"},"content":"            + \"    - list\\n\""},{"lineNumber":10,"author":{"gitId":"banchiang"},"content":"            + \"    - todo (taskName)\\n\""},{"lineNumber":11,"author":{"gitId":"banchiang"},"content":"            + \"    - deadline (taskName) /by (YYYY-M-D TIME)\\n\""},{"lineNumber":12,"author":{"gitId":"banchiang"},"content":"            + \"    - event (taskName) /at (YYYY-M-D TIME-TIME)\\n\""},{"lineNumber":13,"author":{"gitId":"banchiang"},"content":"            + \"    - find (relevantName)\\n\""},{"lineNumber":14,"author":{"gitId":"banchiang"},"content":"            + \"    - delete (taskNumber from list)\\n\""},{"lineNumber":15,"author":{"gitId":"banchiang"},"content":"            + \"    - done (taskNumber from list)\\n\";"},{"lineNumber":16,"author":{"gitId":"banchiang"},"content":"    private Scanner sc;"},{"lineNumber":17,"author":{"gitId":"banchiang"},"content":""},{"lineNumber":18,"author":{"gitId":"banchiang"},"content":"    public Ui() {"},{"lineNumber":19,"author":{"gitId":"banchiang"},"content":"        sc \u003d new Scanner(System.in);"},{"lineNumber":20,"author":{"gitId":"banchiang"},"content":"    }"},{"lineNumber":21,"author":{"gitId":"banchiang"},"content":""},{"lineNumber":22,"author":{"gitId":"banchiang"},"content":"    /**"},{"lineNumber":23,"author":{"gitId":"banchiang"},"content":"     * Print greeting message."},{"lineNumber":24,"author":{"gitId":"banchiang"},"content":"     */"},{"lineNumber":25,"author":{"gitId":"banchiang"},"content":"    public String printGreeting() {"},{"lineNumber":26,"author":{"gitId":"banchiang"},"content":"        String greeting \u003d \"     Hello! I\u0027m Duke\\n\" + \"     What can I do for you?\\n\";"},{"lineNumber":27,"author":{"gitId":"banchiang"},"content":"        return greeting;"},{"lineNumber":28,"author":{"gitId":"banchiang"},"content":"    }"},{"lineNumber":29,"author":{"gitId":"banchiang"},"content":""},{"lineNumber":30,"author":{"gitId":"banchiang"},"content":"    public String printHelp() {"},{"lineNumber":31,"author":{"gitId":"banchiang"},"content":"        return HELP;"},{"lineNumber":32,"author":{"gitId":"banchiang"},"content":"    }"},{"lineNumber":33,"author":{"gitId":"banchiang"},"content":""},{"lineNumber":34,"author":{"gitId":"banchiang"},"content":"    /**"},{"lineNumber":35,"author":{"gitId":"banchiang"},"content":"     * Print bye message."},{"lineNumber":36,"author":{"gitId":"banchiang"},"content":"     */"},{"lineNumber":37,"author":{"gitId":"banchiang"},"content":"    public String printBye() {"},{"lineNumber":38,"author":{"gitId":"banchiang"},"content":"        String byeMessage \u003d \"     Bye. Hope to see you again soon!\\n\";"},{"lineNumber":39,"author":{"gitId":"banchiang"},"content":"        return byeMessage;"},{"lineNumber":40,"author":{"gitId":"banchiang"},"content":"    }"},{"lineNumber":41,"author":{"gitId":"banchiang"},"content":""},{"lineNumber":42,"author":{"gitId":"banchiang"},"content":"    /**"},{"lineNumber":43,"author":{"gitId":"banchiang"},"content":"     * Print message to user."},{"lineNumber":44,"author":{"gitId":"banchiang"},"content":"     *"},{"lineNumber":45,"author":{"gitId":"banchiang"},"content":"     * @param message message to user."},{"lineNumber":46,"author":{"gitId":"banchiang"},"content":"     */"},{"lineNumber":47,"author":{"gitId":"banchiang"},"content":"    public static void printMessage(String message) {"},{"lineNumber":48,"author":{"gitId":"banchiang"},"content":"        System.out.println(message);"},{"lineNumber":49,"author":{"gitId":"banchiang"},"content":"    }"},{"lineNumber":50,"author":{"gitId":"banchiang"},"content":""},{"lineNumber":51,"author":{"gitId":"banchiang"},"content":"    /**"},{"lineNumber":52,"author":{"gitId":"banchiang"},"content":"     * Print errors by user input."},{"lineNumber":53,"author":{"gitId":"banchiang"},"content":"     *"},{"lineNumber":54,"author":{"gitId":"banchiang"},"content":"     * @param error error found."},{"lineNumber":55,"author":{"gitId":"banchiang"},"content":"     */"},{"lineNumber":56,"author":{"gitId":"banchiang"},"content":"    public String printError(String error) {"},{"lineNumber":57,"author":{"gitId":"banchiang"},"content":"        return LINE + error + LINE;"},{"lineNumber":58,"author":{"gitId":"banchiang"},"content":"    }"},{"lineNumber":59,"author":{"gitId":"banchiang"},"content":""},{"lineNumber":60,"author":{"gitId":"banchiang"},"content":"    /**"},{"lineNumber":61,"author":{"gitId":"banchiang"},"content":"     * Reads next line of user input."},{"lineNumber":62,"author":{"gitId":"banchiang"},"content":"     * Returns in string format."},{"lineNumber":63,"author":{"gitId":"banchiang"},"content":"     *"},{"lineNumber":64,"author":{"gitId":"banchiang"},"content":"     * @return string format of user input."},{"lineNumber":65,"author":{"gitId":"banchiang"},"content":"     */"},{"lineNumber":66,"author":{"gitId":"banchiang"},"content":"    public String readLine() {"},{"lineNumber":67,"author":{"gitId":"banchiang"},"content":"        return sc.nextLine();"},{"lineNumber":68,"author":{"gitId":"banchiang"},"content":"    }"},{"lineNumber":69,"author":{"gitId":"banchiang"},"content":""},{"lineNumber":70,"author":{"gitId":"banchiang"},"content":"    /**"},{"lineNumber":71,"author":{"gitId":"banchiang"},"content":"     * Prints the list of the tasks."},{"lineNumber":72,"author":{"gitId":"banchiang"},"content":"     *"},{"lineNumber":73,"author":{"gitId":"banchiang"},"content":"     * @param tl task list to be printed."},{"lineNumber":74,"author":{"gitId":"banchiang"},"content":"     */"},{"lineNumber":75,"author":{"gitId":"banchiang"},"content":"    public String printTasks(TaskList tl) {"},{"lineNumber":76,"author":{"gitId":"banchiang"},"content":"        if (tl.size() \u003d\u003d 0) {"},{"lineNumber":77,"author":{"gitId":"banchiang"},"content":"            String emptyListMsg \u003d \"     There are no tasks in your list!\\n\";"},{"lineNumber":78,"author":{"gitId":"banchiang"},"content":"            return LINE + emptyListMsg + LINE;"},{"lineNumber":79,"author":{"gitId":"banchiang"},"content":"        } else {"},{"lineNumber":80,"author":{"gitId":"banchiang"},"content":"            int index \u003d 1;"},{"lineNumber":81,"author":{"gitId":"banchiang"},"content":"            String listMsg \u003d \"     These are the tasks in your list:\\n\";"},{"lineNumber":82,"author":{"gitId":"banchiang"},"content":"            String msg \u003d \"\";"},{"lineNumber":83,"author":{"gitId":"banchiang"},"content":"            msg +\u003d LINE + listMsg;"},{"lineNumber":84,"author":{"gitId":"banchiang"},"content":"            for (Task t : tl.getList()) {"},{"lineNumber":85,"author":{"gitId":"banchiang"},"content":"                msg +\u003d String.format(\"     %d. %s\\n\","},{"lineNumber":86,"author":{"gitId":"banchiang"},"content":"                        index++, t.toString());"},{"lineNumber":87,"author":{"gitId":"banchiang"},"content":"            }"},{"lineNumber":88,"author":{"gitId":"banchiang"},"content":"            msg +\u003d LINE;"},{"lineNumber":89,"author":{"gitId":"banchiang"},"content":"            return msg;"},{"lineNumber":90,"author":{"gitId":"banchiang"},"content":"        }"},{"lineNumber":91,"author":{"gitId":"banchiang"},"content":"    }"},{"lineNumber":92,"author":{"gitId":"banchiang"},"content":""},{"lineNumber":93,"author":{"gitId":"banchiang"},"content":"    private String taskListSizeMsg(int numOfTasks) {"},{"lineNumber":94,"author":{"gitId":"banchiang"},"content":"        return String.format(\"     Now you have %d task(s) in the list\\n\", numOfTasks);"},{"lineNumber":95,"author":{"gitId":"banchiang"},"content":"    }"},{"lineNumber":96,"author":{"gitId":"banchiang"},"content":""},{"lineNumber":97,"author":{"gitId":"banchiang"},"content":"    /**"},{"lineNumber":98,"author":{"gitId":"banchiang"},"content":"     * Print task added to task list message."},{"lineNumber":99,"author":{"gitId":"banchiang"},"content":"     *"},{"lineNumber":100,"author":{"gitId":"banchiang"},"content":"     * @param t task added to task list."},{"lineNumber":101,"author":{"gitId":"banchiang"},"content":"     */"},{"lineNumber":102,"author":{"gitId":"banchiang"},"content":"    public String printAddedTask(Task t, TaskList tl) {"},{"lineNumber":103,"author":{"gitId":"banchiang"},"content":"        String addMsg \u003d \"     Got it. I\u0027ve added this task:\\n\";"},{"lineNumber":104,"author":{"gitId":"banchiang"},"content":"        String taskMsg \u003d \"\\t\" + t.toString() + \"\\n\";"},{"lineNumber":105,"author":{"gitId":"banchiang"},"content":"        String listSizeMsg \u003d taskListSizeMsg(tl.size());"},{"lineNumber":106,"author":{"gitId":"banchiang"},"content":"        return LINE + addMsg + taskMsg + listSizeMsg + LINE;"},{"lineNumber":107,"author":{"gitId":"banchiang"},"content":"    }"},{"lineNumber":108,"author":{"gitId":"banchiang"},"content":""},{"lineNumber":109,"author":{"gitId":"banchiang"},"content":"    /**"},{"lineNumber":110,"author":{"gitId":"banchiang"},"content":"     * Print task marked done message."},{"lineNumber":111,"author":{"gitId":"banchiang"},"content":"     *"},{"lineNumber":112,"author":{"gitId":"banchiang"},"content":"     * @param t task marked done."},{"lineNumber":113,"author":{"gitId":"banchiang"},"content":"     */"},{"lineNumber":114,"author":{"gitId":"banchiang"},"content":"    public String printMarkedDone(Task t) {"},{"lineNumber":115,"author":{"gitId":"banchiang"},"content":"        String doneMsg \u003d \"     Nice! I\u0027ve marked this task as done:\\n\";"},{"lineNumber":116,"author":{"gitId":"banchiang"},"content":"        String taskMsg \u003d \"\\t\" + t.toString() + \"\\n\";"},{"lineNumber":117,"author":{"gitId":"banchiang"},"content":"        return LINE + doneMsg + taskMsg + LINE;"},{"lineNumber":118,"author":{"gitId":"banchiang"},"content":"    }"},{"lineNumber":119,"author":{"gitId":"banchiang"},"content":""},{"lineNumber":120,"author":{"gitId":"banchiang"},"content":"    /**"},{"lineNumber":121,"author":{"gitId":"banchiang"},"content":"     * Print deleted task message."},{"lineNumber":122,"author":{"gitId":"banchiang"},"content":"     *"},{"lineNumber":123,"author":{"gitId":"banchiang"},"content":"     * @param t task deleted."},{"lineNumber":124,"author":{"gitId":"banchiang"},"content":"     */"},{"lineNumber":125,"author":{"gitId":"banchiang"},"content":"    public String printDeletedTask(Task t, TaskList tl) {"},{"lineNumber":126,"author":{"gitId":"banchiang"},"content":"        String deleteMsg \u003d \"     Noted. I\u0027ve removed this task:\\n\";"},{"lineNumber":127,"author":{"gitId":"banchiang"},"content":"        String taskMsg \u003d \"\\t\" + t.toString() + \"\\n\";"},{"lineNumber":128,"author":{"gitId":"banchiang"},"content":"        String listSizeMsg \u003d taskListSizeMsg(tl.size());"},{"lineNumber":129,"author":{"gitId":"banchiang"},"content":"        return LINE + deleteMsg + taskMsg + listSizeMsg + LINE;"},{"lineNumber":130,"author":{"gitId":"banchiang"},"content":"    }"},{"lineNumber":131,"author":{"gitId":"banchiang"},"content":""},{"lineNumber":132,"author":{"gitId":"banchiang"},"content":"    /**"},{"lineNumber":133,"author":{"gitId":"banchiang"},"content":"     * Print matched tasks as a list."},{"lineNumber":134,"author":{"gitId":"banchiang"},"content":"     * If list size is zero, print no matching task."},{"lineNumber":135,"author":{"gitId":"banchiang"},"content":"     *"},{"lineNumber":136,"author":{"gitId":"banchiang"},"content":"     * @param tl list of task to be printed."},{"lineNumber":137,"author":{"gitId":"banchiang"},"content":"     */"},{"lineNumber":138,"author":{"gitId":"banchiang"},"content":"    public String printFoundTasks(TaskList tl) {"},{"lineNumber":139,"author":{"gitId":"banchiang"},"content":"        if (tl.size() \u003d\u003d 0) {"},{"lineNumber":140,"author":{"gitId":"banchiang"},"content":"            String noMatchMsg \u003d \"     There are no matching task in your list!\\n\";"},{"lineNumber":141,"author":{"gitId":"banchiang"},"content":"            return LINE + noMatchMsg + LINE;"},{"lineNumber":142,"author":{"gitId":"banchiang"},"content":"        } else {"},{"lineNumber":143,"author":{"gitId":"banchiang"},"content":"            int index \u003d 1;"},{"lineNumber":144,"author":{"gitId":"banchiang"},"content":"            String findMsg \u003d \"     Here are the matching tasks in your list:\\n\";"},{"lineNumber":145,"author":{"gitId":"banchiang"},"content":"            String msg \u003d \"\";"},{"lineNumber":146,"author":{"gitId":"banchiang"},"content":"            msg +\u003d LINE + findMsg;"},{"lineNumber":147,"author":{"gitId":"banchiang"},"content":"            for (Task t : tl.getList()) {"},{"lineNumber":148,"author":{"gitId":"banchiang"},"content":"                msg +\u003d String.format(\"     %d. %s\\n\","},{"lineNumber":149,"author":{"gitId":"banchiang"},"content":"                        index++, t.toString());"},{"lineNumber":150,"author":{"gitId":"banchiang"},"content":"            }"},{"lineNumber":151,"author":{"gitId":"banchiang"},"content":"            msg +\u003d LINE;"},{"lineNumber":152,"author":{"gitId":"banchiang"},"content":"            return msg;"},{"lineNumber":153,"author":{"gitId":"banchiang"},"content":"        }"},{"lineNumber":154,"author":{"gitId":"banchiang"},"content":"    }"},{"lineNumber":155,"author":{"gitId":"banchiang"},"content":"}"}],"authorContributionMap":{"banchiang":155}},{"path":"src/main/resources/view/DialogBox.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"banchiang"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"},{"lineNumber":2,"author":{"gitId":"banchiang"},"content":""},{"lineNumber":3,"author":{"gitId":"banchiang"},"content":"\u003c?import javafx.geometry.Insets?\u003e"},{"lineNumber":4,"author":{"gitId":"banchiang"},"content":"\u003c?import javafx.scene.control.Label?\u003e"},{"lineNumber":5,"author":{"gitId":"banchiang"},"content":"\u003c?import javafx.scene.image.ImageView?\u003e"},{"lineNumber":6,"author":{"gitId":"banchiang"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e"},{"lineNumber":7,"author":{"gitId":"banchiang"},"content":""},{"lineNumber":8,"author":{"gitId":"banchiang"},"content":"\u003cfx:root alignment\u003d\"TOP_RIGHT\" maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\" minHeight\u003d\"-Infinity\" prefWidth\u003d\"400.0\" type\u003d\"javafx.scene.layout.HBox\" xmlns\u003d\"http://javafx.com/fxml/1\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e"},{"lineNumber":9,"author":{"gitId":"banchiang"},"content":"    \u003cchildren\u003e"},{"lineNumber":10,"author":{"gitId":"banchiang"},"content":"        \u003cLabel fx:id\u003d\"dialog\" text\u003d\"Label\" wrapText\u003d\"true\" /\u003e"},{"lineNumber":11,"author":{"gitId":"banchiang"},"content":"        \u003cImageView fx:id\u003d\"displayPicture\" fitHeight\u003d\"99.0\" fitWidth\u003d\"99.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\" /\u003e"},{"lineNumber":12,"author":{"gitId":"banchiang"},"content":"    \u003c/children\u003e"},{"lineNumber":13,"author":{"gitId":"banchiang"},"content":"    \u003cpadding\u003e"},{"lineNumber":14,"author":{"gitId":"banchiang"},"content":"        \u003cInsets bottom\u003d\"15.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"15.0\" /\u003e"},{"lineNumber":15,"author":{"gitId":"banchiang"},"content":"    \u003c/padding\u003e"},{"lineNumber":16,"author":{"gitId":"banchiang"},"content":"\u003c/fx:root\u003e"}],"authorContributionMap":{"banchiang":16}},{"path":"src/main/resources/view/MainWindow.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"banchiang"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"},{"lineNumber":2,"author":{"gitId":"banchiang"},"content":""},{"lineNumber":3,"author":{"gitId":"banchiang"},"content":"\u003c?import javafx.scene.control.Button?\u003e"},{"lineNumber":4,"author":{"gitId":"banchiang"},"content":"\u003c?import javafx.scene.control.ScrollPane?\u003e"},{"lineNumber":5,"author":{"gitId":"banchiang"},"content":"\u003c?import javafx.scene.control.TextField?\u003e"},{"lineNumber":6,"author":{"gitId":"banchiang"},"content":"\u003c?import javafx.scene.layout.AnchorPane?\u003e"},{"lineNumber":7,"author":{"gitId":"banchiang"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e"},{"lineNumber":8,"author":{"gitId":"banchiang"},"content":""},{"lineNumber":9,"author":{"gitId":"banchiang"},"content":"\u003cAnchorPane maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefHeight\u003d\"600.0\" prefWidth\u003d\"400.0\" xmlns\u003d\"http://javafx.com/javafx/8.0.171\" xmlns:fx\u003d\"http://javafx.com/fxml/1\" fx:controller\u003d\"duke.MainWindow\"\u003e"},{"lineNumber":10,"author":{"gitId":"banchiang"},"content":"    \u003cchildren\u003e"},{"lineNumber":11,"author":{"gitId":"banchiang"},"content":"        \u003cTextField fx:id\u003d\"userInput\" layoutY\u003d\"558.0\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"324.0\" AnchorPane.bottomAnchor\u003d\"1.0\" /\u003e"},{"lineNumber":12,"author":{"gitId":"banchiang"},"content":"        \u003cButton fx:id\u003d\"sendButton\" layoutX\u003d\"324.0\" layoutY\u003d\"558.0\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"76.0\" text\u003d\"Send\" /\u003e"},{"lineNumber":13,"author":{"gitId":"banchiang"},"content":"        \u003cScrollPane fx:id\u003d\"scrollPane\" hbarPolicy\u003d\"NEVER\" hvalue\u003d\"1.0\" prefHeight\u003d\"557.0\" prefWidth\u003d\"400.0\" vvalue\u003d\"1.0\"\u003e"},{"lineNumber":14,"author":{"gitId":"banchiang"},"content":"            \u003ccontent\u003e"},{"lineNumber":15,"author":{"gitId":"banchiang"},"content":"                \u003cVBox fx:id\u003d\"dialogContainer\" prefHeight\u003d\"552.0\" prefWidth\u003d\"388.0\" /\u003e"},{"lineNumber":16,"author":{"gitId":"banchiang"},"content":"            \u003c/content\u003e"},{"lineNumber":17,"author":{"gitId":"banchiang"},"content":"        \u003c/ScrollPane\u003e"},{"lineNumber":18,"author":{"gitId":"banchiang"},"content":"    \u003c/children\u003e"},{"lineNumber":19,"author":{"gitId":"banchiang"},"content":"\u003c/AnchorPane\u003e"}],"authorContributionMap":{"banchiang":19}},{"path":"src/test/java/duke/TaskListTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"banchiang"},"content":"package duke;"},{"lineNumber":2,"author":{"gitId":"banchiang"},"content":""},{"lineNumber":3,"author":{"gitId":"banchiang"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;"},{"lineNumber":4,"author":{"gitId":"banchiang"},"content":""},{"lineNumber":5,"author":{"gitId":"banchiang"},"content":"import org.junit.jupiter.api.Test;"},{"lineNumber":6,"author":{"gitId":"banchiang"},"content":""},{"lineNumber":7,"author":{"gitId":"banchiang"},"content":""},{"lineNumber":8,"author":{"gitId":"banchiang"},"content":"public class TaskListTest {"},{"lineNumber":9,"author":{"gitId":"banchiang"},"content":""},{"lineNumber":10,"author":{"gitId":"banchiang"},"content":"    @Test"},{"lineNumber":11,"author":{"gitId":"banchiang"},"content":"    public void testAddTask() {"},{"lineNumber":12,"author":{"gitId":"banchiang"},"content":"        TaskList tl \u003d new TaskList();"},{"lineNumber":13,"author":{"gitId":"banchiang"},"content":"        Task t1 \u003d new ToDo(\"read book\");"},{"lineNumber":14,"author":{"gitId":"banchiang"},"content":"        tl.add(t1);"},{"lineNumber":15,"author":{"gitId":"banchiang"},"content":"        Task t2 \u003d tl.get(0);"},{"lineNumber":16,"author":{"gitId":"banchiang"},"content":"        assertEquals(t1.getName(), t2.getName());"},{"lineNumber":17,"author":{"gitId":"banchiang"},"content":"    }"},{"lineNumber":18,"author":{"gitId":"banchiang"},"content":""},{"lineNumber":19,"author":{"gitId":"banchiang"},"content":"    @Test"},{"lineNumber":20,"author":{"gitId":"banchiang"},"content":"    public void testDeleteTask() {"},{"lineNumber":21,"author":{"gitId":"banchiang"},"content":"        TaskList tl \u003d new TaskList();"},{"lineNumber":22,"author":{"gitId":"banchiang"},"content":"        Task t1 \u003d new ToDo(\"read book\");"},{"lineNumber":23,"author":{"gitId":"banchiang"},"content":"        tl.add(t1);"},{"lineNumber":24,"author":{"gitId":"banchiang"},"content":"        Task t2 \u003d tl.remove(0);"},{"lineNumber":25,"author":{"gitId":"banchiang"},"content":"        assertEquals(t1.getName() , t2.getName());"},{"lineNumber":26,"author":{"gitId":"banchiang"},"content":"    }"},{"lineNumber":27,"author":{"gitId":"banchiang"},"content":"}"}],"authorContributionMap":{"banchiang":27}},{"path":"src/test/java/duke/TaskTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"banchiang"},"content":"package duke;"},{"lineNumber":2,"author":{"gitId":"banchiang"},"content":""},{"lineNumber":3,"author":{"gitId":"banchiang"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;"},{"lineNumber":4,"author":{"gitId":"banchiang"},"content":""},{"lineNumber":5,"author":{"gitId":"banchiang"},"content":"import org.junit.jupiter.api.Test;"},{"lineNumber":6,"author":{"gitId":"banchiang"},"content":""},{"lineNumber":7,"author":{"gitId":"banchiang"},"content":"public class TaskTest {"},{"lineNumber":8,"author":{"gitId":"banchiang"},"content":""},{"lineNumber":9,"author":{"gitId":"banchiang"},"content":"    @Test"},{"lineNumber":10,"author":{"gitId":"banchiang"},"content":"    public void testGetName() {"},{"lineNumber":11,"author":{"gitId":"banchiang"},"content":"        Task t \u003d new ToDo(\"read book\");"},{"lineNumber":12,"author":{"gitId":"banchiang"},"content":"        assertEquals(\"read book\", t.getName());"},{"lineNumber":13,"author":{"gitId":"banchiang"},"content":"    }"},{"lineNumber":14,"author":{"gitId":"banchiang"},"content":""},{"lineNumber":15,"author":{"gitId":"banchiang"},"content":"    @Test"},{"lineNumber":16,"author":{"gitId":"banchiang"},"content":"    public void testGetIcon() {"},{"lineNumber":17,"author":{"gitId":"banchiang"},"content":"        Task t \u003d new ToDo(\"read book\");"},{"lineNumber":18,"author":{"gitId":"banchiang"},"content":"        assertEquals(\" \", t.getStatusIcon());"},{"lineNumber":19,"author":{"gitId":"banchiang"},"content":"    }"},{"lineNumber":20,"author":{"gitId":"banchiang"},"content":""},{"lineNumber":21,"author":{"gitId":"banchiang"},"content":"    @Test"},{"lineNumber":22,"author":{"gitId":"banchiang"},"content":"    public void testFinishTask() {"},{"lineNumber":23,"author":{"gitId":"banchiang"},"content":"        Task t \u003d new ToDo(\"read book\");"},{"lineNumber":24,"author":{"gitId":"banchiang"},"content":"        t.finishTask();"},{"lineNumber":25,"author":{"gitId":"banchiang"},"content":"        assertEquals(\"X\", t.getStatusIcon());"},{"lineNumber":26,"author":{"gitId":"banchiang"},"content":"    }"},{"lineNumber":27,"author":{"gitId":"banchiang"},"content":"}"}],"authorContributionMap":{"banchiang":27}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"banchiang"},"content":"todo read book"},{"lineNumber":2,"author":{"gitId":"banchiang"},"content":"list"},{"lineNumber":3,"author":{"gitId":"banchiang"},"content":"bye"}],"authorContributionMap":{"banchiang":3}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF"},{"lineNumber":2,"author":{"gitId":"-"},"content":""},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist"},{"lineNumber":4,"author":{"gitId":"banchiang"},"content":"if not exist \\Users\\chian\\Desktop\\bin mkdir \\Users\\chian\\Desktop\\bin"},{"lineNumber":5,"author":{"gitId":"-"},"content":""},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run"},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT"},{"lineNumber":8,"author":{"gitId":"-"},"content":""},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder"},{"lineNumber":10,"author":{"gitId":"banchiang"},"content":"javac  -cp \\Users\\chian\\Desktop\\CS2103\\ip\\src\\main\\java -Xlint:none -d \\Users\\chian\\Desktop\\bin \\Users\\chian\\Desktop\\CS2103\\ip\\src\\main\\java\\*.java"},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 ("},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1"},{"lineNumber":14,"author":{"gitId":"-"},"content":")"},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0"},{"lineNumber":16,"author":{"gitId":"-"},"content":""},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"},{"lineNumber":18,"author":{"gitId":"banchiang"},"content":"java -classpath \\Users\\chian\\Desktop\\bin Duke \u003c input.txt \u003e ACTUAL.TXT"},{"lineNumber":19,"author":{"gitId":"-"},"content":""},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM compare the output to the expected output"},{"lineNumber":21,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT"}],"authorContributionMap":{"banchiang":3,"-":18}}]
