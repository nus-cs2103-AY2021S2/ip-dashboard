[{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027checkstyle\u0027"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027"},{"lineNumber":6,"author":{"gitId":"-"},"content":"}"},{"lineNumber":7,"author":{"gitId":"-"},"content":""},{"lineNumber":8,"author":{"gitId":"-"},"content":"repositories {"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    mavenCentral()"},{"lineNumber":10,"author":{"gitId":"-"},"content":"}"},{"lineNumber":11,"author":{"gitId":"-"},"content":""},{"lineNumber":12,"author":{"gitId":"-"},"content":"dependencies {"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.5.0\u0027"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.5.0\u0027"},{"lineNumber":15,"author":{"gitId":"banchiang"},"content":""},{"lineNumber":16,"author":{"gitId":"banchiang"},"content":"    String javaFxVersion \u003d \u002711\u0027"},{"lineNumber":17,"author":{"gitId":"banchiang"},"content":""},{"lineNumber":18,"author":{"gitId":"banchiang"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027"},{"lineNumber":19,"author":{"gitId":"banchiang"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"},{"lineNumber":20,"author":{"gitId":"banchiang"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"},{"lineNumber":21,"author":{"gitId":"banchiang"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027"},{"lineNumber":22,"author":{"gitId":"banchiang"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"},{"lineNumber":23,"author":{"gitId":"banchiang"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"},{"lineNumber":24,"author":{"gitId":"banchiang"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027"},{"lineNumber":25,"author":{"gitId":"banchiang"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"},{"lineNumber":26,"author":{"gitId":"banchiang"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"},{"lineNumber":27,"author":{"gitId":"banchiang"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027"},{"lineNumber":28,"author":{"gitId":"banchiang"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"},{"lineNumber":29,"author":{"gitId":"banchiang"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"},{"lineNumber":30,"author":{"gitId":"-"},"content":"}"},{"lineNumber":31,"author":{"gitId":"-"},"content":""},{"lineNumber":32,"author":{"gitId":"-"},"content":"test {"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    useJUnitPlatform()"},{"lineNumber":34,"author":{"gitId":"-"},"content":""},{"lineNumber":35,"author":{"gitId":"-"},"content":"    testLogging {"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\""},{"lineNumber":37,"author":{"gitId":"-"},"content":""},{"lineNumber":38,"author":{"gitId":"-"},"content":"        showExceptions true"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\""},{"lineNumber":40,"author":{"gitId":"-"},"content":"        showCauses true"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        showStackTraces true"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":44,"author":{"gitId":"-"},"content":"}"},{"lineNumber":45,"author":{"gitId":"-"},"content":""},{"lineNumber":46,"author":{"gitId":"banchiang"},"content":"dependencies {"},{"lineNumber":47,"author":{"gitId":"banchiang"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.5.0\u0027"},{"lineNumber":48,"author":{"gitId":"banchiang"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.5.0\u0027"},{"lineNumber":49,"author":{"gitId":"banchiang"},"content":"}"},{"lineNumber":50,"author":{"gitId":"banchiang"},"content":""},{"lineNumber":51,"author":{"gitId":"-"},"content":"application {"},{"lineNumber":52,"author":{"gitId":"banchiang"},"content":"    mainClassName \u003d \"duke.Launcher\""},{"lineNumber":53,"author":{"gitId":"-"},"content":"}"},{"lineNumber":54,"author":{"gitId":"-"},"content":""},{"lineNumber":55,"author":{"gitId":"-"},"content":"shadowJar {"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    archiveBaseName \u003d \"duke\""},{"lineNumber":57,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null"},{"lineNumber":58,"author":{"gitId":"-"},"content":"}"},{"lineNumber":59,"author":{"gitId":"-"},"content":""},{"lineNumber":60,"author":{"gitId":"-"},"content":"checkstyle {"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    toolVersion \u003d \u00278.29\u0027"},{"lineNumber":62,"author":{"gitId":"-"},"content":"}"},{"lineNumber":63,"author":{"gitId":"-"},"content":""},{"lineNumber":64,"author":{"gitId":"-"},"content":"run{"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in"},{"lineNumber":66,"author":{"gitId":"-"},"content":"}"}],"authorContributionMap":{"banchiang":21,"-":45}},{"path":"data/data.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"banchiang"},"content":"T | X | return book"}],"authorContributionMap":{"banchiang":1}},{"path":"docs/README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"# User Guide"},{"lineNumber":2,"author":{"gitId":"-"},"content":""},{"lineNumber":3,"author":{"gitId":"banchiang"},"content":"# Introduction"},{"lineNumber":4,"author":{"gitId":"banchiang"},"content":"**[Duke (banchiang\u0027s version)](https://github.com/banchiang/ip/releases/tag/A-Release)** is a desktop (jar) application to track user\u0027s daily tasks. \u003cbr\u003e"},{"lineNumber":5,"author":{"gitId":"banchiang"},"content":"It functions as a GUI for users to type down tasks they want to record. \u003cbr\u003e"},{"lineNumber":6,"author":{"gitId":"banchiang"},"content":"Duke requires the download of [Java SE 11](https://www.oracle.com/java/technologies/javase-jdk11-downloads.html);"},{"lineNumber":7,"author":{"gitId":"-"},"content":""},{"lineNumber":8,"author":{"gitId":"banchiang"},"content":"# Features "},{"lineNumber":9,"author":{"gitId":"banchiang"},"content":"\u003cbr\u003e"},{"lineNumber":10,"author":{"gitId":"-"},"content":""},{"lineNumber":11,"author":{"gitId":"banchiang"},"content":"## General features:"},{"lineNumber":12,"author":{"gitId":"-"},"content":""},{"lineNumber":13,"author":{"gitId":"-"},"content":""},{"lineNumber":14,"author":{"gitId":"banchiang"},"content":"## Feature `help`"},{"lineNumber":15,"author":{"gitId":"banchiang"},"content":"View the commands for Duke."},{"lineNumber":16,"author":{"gitId":"-"},"content":""},{"lineNumber":17,"author":{"gitId":"banchiang"},"content":"### Usage - Enter in `help`"},{"lineNumber":18,"author":{"gitId":"-"},"content":""},{"lineNumber":19,"author":{"gitId":"-"},"content":"Example of usage:"},{"lineNumber":20,"author":{"gitId":"-"},"content":""},{"lineNumber":21,"author":{"gitId":"banchiang"},"content":"`help`"},{"lineNumber":22,"author":{"gitId":"-"},"content":""},{"lineNumber":23,"author":{"gitId":"-"},"content":"Expected outcome:"},{"lineNumber":24,"author":{"gitId":"-"},"content":""},{"lineNumber":25,"author":{"gitId":"banchiang"},"content":"`These are the formats for Duke commands:` \u003cbr\u003e"},{"lineNumber":26,"author":{"gitId":"banchiang"},"content":"`- help` \u003cbr\u003e"},{"lineNumber":27,"author":{"gitId":"banchiang"},"content":"`- bye` \u003cbr\u003e"},{"lineNumber":28,"author":{"gitId":"banchiang"},"content":"`- list` \u003cbr\u003e"},{"lineNumber":29,"author":{"gitId":"banchiang"},"content":"`- todo (taskName)` \u003cbr\u003e"},{"lineNumber":30,"author":{"gitId":"banchiang"},"content":"`- deadline (taskName) /by (YYYY-M-D TIME)` \u003cbr\u003e"},{"lineNumber":31,"author":{"gitId":"banchiang"},"content":"`- event (taskName) /at (YYYY-M-D TIME-TIME)` \u003cbr\u003e"},{"lineNumber":32,"author":{"gitId":"banchiang"},"content":"`- find (relevantName)` \u003cbr\u003e"},{"lineNumber":33,"author":{"gitId":"banchiang"},"content":"`- delete (taskNumber from list)` \u003cbr\u003e"},{"lineNumber":34,"author":{"gitId":"banchiang"},"content":"`- done (taskNumber from list)` \u003cbr\u003e"},{"lineNumber":35,"author":{"gitId":"banchiang"},"content":""},{"lineNumber":36,"author":{"gitId":"banchiang"},"content":"## Feature `bye`"},{"lineNumber":37,"author":{"gitId":"banchiang"},"content":"Exit the program."},{"lineNumber":38,"author":{"gitId":"banchiang"},"content":""},{"lineNumber":39,"author":{"gitId":"banchiang"},"content":"### Usage - Enter in `bye`"},{"lineNumber":40,"author":{"gitId":"banchiang"},"content":""},{"lineNumber":41,"author":{"gitId":"banchiang"},"content":"Example of usage:"},{"lineNumber":42,"author":{"gitId":"banchiang"},"content":""},{"lineNumber":43,"author":{"gitId":"banchiang"},"content":"`bye`"},{"lineNumber":44,"author":{"gitId":"banchiang"},"content":""},{"lineNumber":45,"author":{"gitId":"banchiang"},"content":"Expected outcome:"},{"lineNumber":46,"author":{"gitId":"banchiang"},"content":""},{"lineNumber":47,"author":{"gitId":"banchiang"},"content":"`Bye. Hope to see you again soon!`\u003cbr\u003e"},{"lineNumber":48,"author":{"gitId":"banchiang"},"content":"Program terminates."},{"lineNumber":49,"author":{"gitId":"banchiang"},"content":""},{"lineNumber":50,"author":{"gitId":"banchiang"},"content":"## Feature `list` "},{"lineNumber":51,"author":{"gitId":"banchiang"},"content":"View the list of tasks."},{"lineNumber":52,"author":{"gitId":"banchiang"},"content":""},{"lineNumber":53,"author":{"gitId":"banchiang"},"content":"### Usage - Enter in `list` "},{"lineNumber":54,"author":{"gitId":"-"},"content":""},{"lineNumber":55,"author":{"gitId":"-"},"content":"Example of usage: "},{"lineNumber":56,"author":{"gitId":"-"},"content":""},{"lineNumber":57,"author":{"gitId":"banchiang"},"content":"`list`"},{"lineNumber":58,"author":{"gitId":"banchiang"},"content":""},{"lineNumber":59,"author":{"gitId":"banchiang"},"content":"Expected outcome:"},{"lineNumber":60,"author":{"gitId":"banchiang"},"content":""},{"lineNumber":61,"author":{"gitId":"banchiang"},"content":"`These are the tasks in your list:`\u003cbr\u003e"},{"lineNumber":62,"author":{"gitId":"banchiang"},"content":"`1. [T][] read book`"},{"lineNumber":63,"author":{"gitId":"banchiang"},"content":"\u003cbr\u003e"},{"lineNumber":64,"author":{"gitId":"banchiang"},"content":""},{"lineNumber":65,"author":{"gitId":"banchiang"},"content":"## Features to add a task in your list:"},{"lineNumber":66,"author":{"gitId":"banchiang"},"content":""},{"lineNumber":67,"author":{"gitId":"banchiang"},"content":"## Feature `todo`"},{"lineNumber":68,"author":{"gitId":"banchiang"},"content":"Add a to-do task in your list."},{"lineNumber":69,"author":{"gitId":"banchiang"},"content":""},{"lineNumber":70,"author":{"gitId":"banchiang"},"content":"### Usage - Enter in `todo \u003ctask name\u003e`"},{"lineNumber":71,"author":{"gitId":"banchiang"},"content":""},{"lineNumber":72,"author":{"gitId":"banchiang"},"content":"Example of usage:"},{"lineNumber":73,"author":{"gitId":"banchiang"},"content":""},{"lineNumber":74,"author":{"gitId":"banchiang"},"content":"`todo read book`"},{"lineNumber":75,"author":{"gitId":"banchiang"},"content":""},{"lineNumber":76,"author":{"gitId":"banchiang"},"content":"Expected outcome:"},{"lineNumber":77,"author":{"gitId":"banchiang"},"content":""},{"lineNumber":78,"author":{"gitId":"banchiang"},"content":"`Got it. I\u0027ve added this task:`\u003cbr\u003e"},{"lineNumber":79,"author":{"gitId":"banchiang"},"content":"`[T][] read book` \u003cbr\u003e"},{"lineNumber":80,"author":{"gitId":"banchiang"},"content":"`You have 1 task(s) in your list.` "},{"lineNumber":81,"author":{"gitId":"banchiang"},"content":""},{"lineNumber":82,"author":{"gitId":"banchiang"},"content":"## Feature `deadline`"},{"lineNumber":83,"author":{"gitId":"banchiang"},"content":"Add a deadline task in your list."},{"lineNumber":84,"author":{"gitId":"banchiang"},"content":""},{"lineNumber":85,"author":{"gitId":"banchiang"},"content":"### Usage - Enter in `deadline \u003ctask name\u003e /by \u003cYYYY-M-D TIME\u003e`"},{"lineNumber":86,"author":{"gitId":"banchiang"},"content":""},{"lineNumber":87,"author":{"gitId":"banchiang"},"content":"Example of usage:"},{"lineNumber":88,"author":{"gitId":"banchiang"},"content":""},{"lineNumber":89,"author":{"gitId":"banchiang"},"content":"`deadline math homework /by 2021-12-31 2359`"},{"lineNumber":90,"author":{"gitId":"-"},"content":""},{"lineNumber":91,"author":{"gitId":"-"},"content":"Expected outcome:"},{"lineNumber":92,"author":{"gitId":"-"},"content":""},{"lineNumber":93,"author":{"gitId":"banchiang"},"content":"`Got it. I\u0027ve added this task:`\u003cbr\u003e"},{"lineNumber":94,"author":{"gitId":"banchiang"},"content":"`[D][] math homework (by: Dec 31 2021 2359)` \u003cbr\u003e"},{"lineNumber":95,"author":{"gitId":"banchiang"},"content":"`You have 1 task(s) in your list.`"},{"lineNumber":96,"author":{"gitId":"banchiang"},"content":""},{"lineNumber":97,"author":{"gitId":"banchiang"},"content":"## Feature `event`"},{"lineNumber":98,"author":{"gitId":"banchiang"},"content":"Add an event task in your list."},{"lineNumber":99,"author":{"gitId":"banchiang"},"content":""},{"lineNumber":100,"author":{"gitId":"banchiang"},"content":"### Usage - Enter in `event \u003ctask name\u003e /at \u003cYYYY-M-D TIME-TIME\u003e`"},{"lineNumber":101,"author":{"gitId":"banchiang"},"content":""},{"lineNumber":102,"author":{"gitId":"banchiang"},"content":"Example of usage:"},{"lineNumber":103,"author":{"gitId":"banchiang"},"content":""},{"lineNumber":104,"author":{"gitId":"banchiang"},"content":"`event team meeting /at 2021-12-31 1200-1400`"},{"lineNumber":105,"author":{"gitId":"banchiang"},"content":""},{"lineNumber":106,"author":{"gitId":"banchiang"},"content":"Expected outcome:"},{"lineNumber":107,"author":{"gitId":"banchiang"},"content":""},{"lineNumber":108,"author":{"gitId":"banchiang"},"content":"`Got it. I\u0027ve added this task:`\u003cbr\u003e"},{"lineNumber":109,"author":{"gitId":"banchiang"},"content":"`[E][] team meeting (at: Dec 31 2021 1200 - Dec 31 2021 1400)` \u003cbr\u003e"},{"lineNumber":110,"author":{"gitId":"banchiang"},"content":"`You have 1 task(s) in your list.`"},{"lineNumber":111,"author":{"gitId":"banchiang"},"content":""},{"lineNumber":112,"author":{"gitId":"banchiang"},"content":"## Features regarding tasks:"},{"lineNumber":113,"author":{"gitId":"banchiang"},"content":"\u003cbr\u003e"},{"lineNumber":114,"author":{"gitId":"banchiang"},"content":""},{"lineNumber":115,"author":{"gitId":"banchiang"},"content":"## Feature `delete`"},{"lineNumber":116,"author":{"gitId":"banchiang"},"content":"Delete a task from your task list."},{"lineNumber":117,"author":{"gitId":"banchiang"},"content":""},{"lineNumber":118,"author":{"gitId":"banchiang"},"content":"### Usage - Enter in `delete \u003ctask number\u003e`"},{"lineNumber":119,"author":{"gitId":"banchiang"},"content":""},{"lineNumber":120,"author":{"gitId":"banchiang"},"content":"Example of usage:"},{"lineNumber":121,"author":{"gitId":"banchiang"},"content":""},{"lineNumber":122,"author":{"gitId":"banchiang"},"content":"`delete 1`"},{"lineNumber":123,"author":{"gitId":"banchiang"},"content":""},{"lineNumber":124,"author":{"gitId":"banchiang"},"content":"Expected outcome:"},{"lineNumber":125,"author":{"gitId":"banchiang"},"content":""},{"lineNumber":126,"author":{"gitId":"banchiang"},"content":"`Noted. I\u0027ve removed this task:`\u003cbr\u003e"},{"lineNumber":127,"author":{"gitId":"banchiang"},"content":"`[T][] read book` \u003cbr\u003e"},{"lineNumber":128,"author":{"gitId":"banchiang"},"content":"`You have 0 task(s) in your list.`"},{"lineNumber":129,"author":{"gitId":"banchiang"},"content":""},{"lineNumber":130,"author":{"gitId":"banchiang"},"content":"## Feature `find`"},{"lineNumber":131,"author":{"gitId":"banchiang"},"content":"Find a task with relevant keyword."},{"lineNumber":132,"author":{"gitId":"banchiang"},"content":""},{"lineNumber":133,"author":{"gitId":"banchiang"},"content":"### Usage - Enter in `find \u003ckeyword\u003e`"},{"lineNumber":134,"author":{"gitId":"banchiang"},"content":""},{"lineNumber":135,"author":{"gitId":"banchiang"},"content":"Example of usage:"},{"lineNumber":136,"author":{"gitId":"banchiang"},"content":""},{"lineNumber":137,"author":{"gitId":"banchiang"},"content":"`find book`"},{"lineNumber":138,"author":{"gitId":"banchiang"},"content":""},{"lineNumber":139,"author":{"gitId":"banchiang"},"content":"Expected outcome:"},{"lineNumber":140,"author":{"gitId":"banchiang"},"content":""},{"lineNumber":141,"author":{"gitId":"banchiang"},"content":"`Here are the matching tasks in your list:`\u003cbr\u003e"},{"lineNumber":142,"author":{"gitId":"banchiang"},"content":"`1. [T][] read book` \u003cbr\u003e"},{"lineNumber":143,"author":{"gitId":"banchiang"},"content":"`2. [T][] return book`"},{"lineNumber":144,"author":{"gitId":"banchiang"},"content":""},{"lineNumber":145,"author":{"gitId":"banchiang"},"content":"## Feature `done`"},{"lineNumber":146,"author":{"gitId":"banchiang"},"content":"Mark a task in your task list as done."},{"lineNumber":147,"author":{"gitId":"banchiang"},"content":""},{"lineNumber":148,"author":{"gitId":"banchiang"},"content":"### Usage - Enter in `done \u003ctask number\u003e`"},{"lineNumber":149,"author":{"gitId":"banchiang"},"content":""},{"lineNumber":150,"author":{"gitId":"banchiang"},"content":"Example of usage:"},{"lineNumber":151,"author":{"gitId":"banchiang"},"content":""},{"lineNumber":152,"author":{"gitId":"banchiang"},"content":"`done 1`"},{"lineNumber":153,"author":{"gitId":"banchiang"},"content":""},{"lineNumber":154,"author":{"gitId":"banchiang"},"content":"Expected outcome:"},{"lineNumber":155,"author":{"gitId":"banchiang"},"content":""},{"lineNumber":156,"author":{"gitId":"banchiang"},"content":"`Nice! I\u0027ve marked this task as done:`\u003cbr\u003e"},{"lineNumber":157,"author":{"gitId":"banchiang"},"content":"`[T][X] read book` \u003cbr\u003e"},{"lineNumber":158,"author":{"gitId":"banchiang"},"content":"`You have 1 task(s) in your list.` \u003cbr\u003e"},{"lineNumber":159,"author":{"gitId":"banchiang"},"content":""},{"lineNumber":160,"author":{"gitId":"banchiang"},"content":"Notice that \u0027X\u0027 appears at the second box of the task. \u003cbr\u003e"},{"lineNumber":161,"author":{"gitId":"banchiang"},"content":"That \u0027X\u0027 signifies that the task is done. \u003cbr\u003e"},{"lineNumber":162,"author":{"gitId":"banchiang"},"content":"\u003cbr\u003e"},{"lineNumber":163,"author":{"gitId":"banchiang"},"content":""},{"lineNumber":164,"author":{"gitId":"banchiang"},"content":"# Summary of Duke Commands"},{"lineNumber":165,"author":{"gitId":"banchiang"},"content":""},{"lineNumber":166,"author":{"gitId":"banchiang"},"content":"Action | Command"},{"lineNumber":167,"author":{"gitId":"banchiang"},"content":"------ | --------"},{"lineNumber":168,"author":{"gitId":"banchiang"},"content":"See commands available | `help`"},{"lineNumber":169,"author":{"gitId":"banchiang"},"content":"Exit program | `bye`"},{"lineNumber":170,"author":{"gitId":"banchiang"},"content":"See task list | `list`"},{"lineNumber":171,"author":{"gitId":"banchiang"},"content":"Add todo task | `todo \u003ctask name\u003e`"},{"lineNumber":172,"author":{"gitId":"banchiang"},"content":"Add deadline task | `deadline \u003ctask name\u003e /by \u003cYYYY-M-D TIME*\u003e`"},{"lineNumber":173,"author":{"gitId":"banchiang"},"content":"Add event task | `event \u003ctask name\u003e /at \u003cYYYY-M-D TIME*-TIME*\u003e`"},{"lineNumber":174,"author":{"gitId":"banchiang"},"content":"Find task with keyword | `find \u003ckeyword\u003e`"},{"lineNumber":175,"author":{"gitId":"banchiang"},"content":"Delete task | `delete \u003ctask number**\u003e`"},{"lineNumber":176,"author":{"gitId":"banchiang"},"content":"Mark task as done | `done \u003ctask number**\u003e`"},{"lineNumber":177,"author":{"gitId":"banchiang"},"content":""},{"lineNumber":178,"author":{"gitId":"banchiang"},"content":"*TIME \u003d format in 24hours. (eg: 2359, 0030) \u003cbr\u003e"},{"lineNumber":179,"author":{"gitId":"banchiang"},"content":"**task number \u003d number for task in task list. (use `list` to check number) "}],"authorContributionMap":{"banchiang":160,"-":19}},{"path":"src/main/java/duke/AddCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"banchiang"},"content":"package duke;"},{"lineNumber":2,"author":{"gitId":"banchiang"},"content":""},{"lineNumber":3,"author":{"gitId":"banchiang"},"content":"/**"},{"lineNumber":4,"author":{"gitId":"banchiang"},"content":" * Add task command for Duke."},{"lineNumber":5,"author":{"gitId":"banchiang"},"content":" */"},{"lineNumber":6,"author":{"gitId":"banchiang"},"content":"public class AddCommand extends Command {"},{"lineNumber":7,"author":{"gitId":"banchiang"},"content":"    private String taskType;"},{"lineNumber":8,"author":{"gitId":"banchiang"},"content":"    private String taskInfo;"},{"lineNumber":9,"author":{"gitId":"banchiang"},"content":""},{"lineNumber":10,"author":{"gitId":"banchiang"},"content":"    /**"},{"lineNumber":11,"author":{"gitId":"banchiang"},"content":"     * Constructs new add command."},{"lineNumber":12,"author":{"gitId":"banchiang"},"content":"     *"},{"lineNumber":13,"author":{"gitId":"banchiang"},"content":"     * @param taskType Type of task to add."},{"lineNumber":14,"author":{"gitId":"banchiang"},"content":"     * @param taskInfo Information of task to be parsed."},{"lineNumber":15,"author":{"gitId":"banchiang"},"content":"     */"},{"lineNumber":16,"author":{"gitId":"banchiang"},"content":"    public AddCommand(String taskType, String taskInfo) {"},{"lineNumber":17,"author":{"gitId":"banchiang"},"content":"        super();"},{"lineNumber":18,"author":{"gitId":"banchiang"},"content":"        this.taskType \u003d taskType;"},{"lineNumber":19,"author":{"gitId":"banchiang"},"content":"        this.taskInfo \u003d taskInfo;"},{"lineNumber":20,"author":{"gitId":"banchiang"},"content":"    }"},{"lineNumber":21,"author":{"gitId":"banchiang"},"content":""},{"lineNumber":22,"author":{"gitId":"banchiang"},"content":"    /**"},{"lineNumber":23,"author":{"gitId":"banchiang"},"content":"     * Identifies task type and create the task with the task info."},{"lineNumber":24,"author":{"gitId":"banchiang"},"content":"     * Task is then added to the task list and stored on disk."},{"lineNumber":25,"author":{"gitId":"banchiang"},"content":"     *"},{"lineNumber":26,"author":{"gitId":"banchiang"},"content":"     * @param tl task list."},{"lineNumber":27,"author":{"gitId":"banchiang"},"content":"     * @param ui user interface object."},{"lineNumber":28,"author":{"gitId":"banchiang"},"content":"     * @param storage storage of task list."},{"lineNumber":29,"author":{"gitId":"banchiang"},"content":"     * @throws DukeException if task cannot be created."},{"lineNumber":30,"author":{"gitId":"banchiang"},"content":"     */"},{"lineNumber":31,"author":{"gitId":"banchiang"},"content":"    @Override"},{"lineNumber":32,"author":{"gitId":"banchiang"},"content":"    public String execute(TaskList tl, Ui ui, Storage storage) throws DukeException {"},{"lineNumber":33,"author":{"gitId":"banchiang"},"content":"        Task t \u003d null;"},{"lineNumber":34,"author":{"gitId":"banchiang"},"content":"        switch (taskType) {"},{"lineNumber":35,"author":{"gitId":"banchiang"},"content":"        case \"todo\":"},{"lineNumber":36,"author":{"gitId":"banchiang"},"content":"            t \u003d ToDo.create(taskInfo);"},{"lineNumber":37,"author":{"gitId":"banchiang"},"content":"            break;"},{"lineNumber":38,"author":{"gitId":"banchiang"},"content":"        case \"deadline\":"},{"lineNumber":39,"author":{"gitId":"banchiang"},"content":"            t \u003d Deadline.create(taskInfo);"},{"lineNumber":40,"author":{"gitId":"banchiang"},"content":"            break;"},{"lineNumber":41,"author":{"gitId":"banchiang"},"content":"        case \"event\":"},{"lineNumber":42,"author":{"gitId":"banchiang"},"content":"            t \u003d Event.create(taskInfo);"},{"lineNumber":43,"author":{"gitId":"banchiang"},"content":"            break;"},{"lineNumber":44,"author":{"gitId":"banchiang"},"content":"        default:"},{"lineNumber":45,"author":{"gitId":"banchiang"},"content":"            throw new DukeWrongCommandException(taskType);"},{"lineNumber":46,"author":{"gitId":"banchiang"},"content":"        }"},{"lineNumber":47,"author":{"gitId":"banchiang"},"content":"        assert t !\u003d null : \"Task should not be null!\";"},{"lineNumber":48,"author":{"gitId":"banchiang"},"content":"        tl.add(t);"},{"lineNumber":49,"author":{"gitId":"banchiang"},"content":"        storage.save(tl.toString());"},{"lineNumber":50,"author":{"gitId":"banchiang"},"content":"        return ui.printTaskMsg(t, tl, \"add\");"},{"lineNumber":51,"author":{"gitId":"banchiang"},"content":"    }"},{"lineNumber":52,"author":{"gitId":"banchiang"},"content":"}"},{"lineNumber":53,"author":{"gitId":"banchiang"},"content":""}],"authorContributionMap":{"banchiang":53}},{"path":"src/main/java/duke/ByeCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"banchiang"},"content":"package duke;"},{"lineNumber":2,"author":{"gitId":"banchiang"},"content":""},{"lineNumber":3,"author":{"gitId":"banchiang"},"content":"/**"},{"lineNumber":4,"author":{"gitId":"banchiang"},"content":" * Exit command for Duke."},{"lineNumber":5,"author":{"gitId":"banchiang"},"content":" */"},{"lineNumber":6,"author":{"gitId":"banchiang"},"content":"public class ByeCommand extends Command {"},{"lineNumber":7,"author":{"gitId":"banchiang"},"content":""},{"lineNumber":8,"author":{"gitId":"banchiang"},"content":"    /**"},{"lineNumber":9,"author":{"gitId":"banchiang"},"content":"     * Prints out bye message."},{"lineNumber":10,"author":{"gitId":"banchiang"},"content":"     *"},{"lineNumber":11,"author":{"gitId":"banchiang"},"content":"     * @param tl Task list of Duke."},{"lineNumber":12,"author":{"gitId":"banchiang"},"content":"     * @param ui User interface for Duke."},{"lineNumber":13,"author":{"gitId":"banchiang"},"content":"     * @param storage Storage to save files."},{"lineNumber":14,"author":{"gitId":"banchiang"},"content":"     * @return String message for bye."},{"lineNumber":15,"author":{"gitId":"banchiang"},"content":"     */"},{"lineNumber":16,"author":{"gitId":"banchiang"},"content":"    @Override"},{"lineNumber":17,"author":{"gitId":"banchiang"},"content":"    public String execute(TaskList tl, Ui ui, Storage storage) {"},{"lineNumber":18,"author":{"gitId":"banchiang"},"content":"        return ui.printBye();"},{"lineNumber":19,"author":{"gitId":"banchiang"},"content":"    }"},{"lineNumber":20,"author":{"gitId":"banchiang"},"content":"}"},{"lineNumber":21,"author":{"gitId":"banchiang"},"content":""}],"authorContributionMap":{"banchiang":21}},{"path":"src/main/java/duke/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"banchiang"},"content":"package duke;"},{"lineNumber":2,"author":{"gitId":"banchiang"},"content":""},{"lineNumber":3,"author":{"gitId":"banchiang"},"content":"/**"},{"lineNumber":4,"author":{"gitId":"banchiang"},"content":" * Command class for Duke to understand different commands."},{"lineNumber":5,"author":{"gitId":"banchiang"},"content":" */"},{"lineNumber":6,"author":{"gitId":"banchiang"},"content":"public abstract class Command {"},{"lineNumber":7,"author":{"gitId":"banchiang"},"content":"    public abstract String execute(TaskList tl, Ui ui, Storage storage) throws DukeException;"},{"lineNumber":8,"author":{"gitId":"banchiang"},"content":"}"},{"lineNumber":9,"author":{"gitId":"banchiang"},"content":""}],"authorContributionMap":{"banchiang":9}},{"path":"src/main/java/duke/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"banchiang"},"content":"package duke;"},{"lineNumber":2,"author":{"gitId":"banchiang"},"content":""},{"lineNumber":3,"author":{"gitId":"banchiang"},"content":"import java.time.LocalDateTime;"},{"lineNumber":4,"author":{"gitId":"banchiang"},"content":"import java.time.format.DateTimeParseException;"},{"lineNumber":5,"author":{"gitId":"banchiang"},"content":""},{"lineNumber":6,"author":{"gitId":"banchiang"},"content":"/**"},{"lineNumber":7,"author":{"gitId":"banchiang"},"content":" * A sub-type of Task, deadline."},{"lineNumber":8,"author":{"gitId":"banchiang"},"content":" */"},{"lineNumber":9,"author":{"gitId":"banchiang"},"content":"public class Deadline extends Task {"},{"lineNumber":10,"author":{"gitId":"banchiang"},"content":"    protected LocalDateTime deadline;"},{"lineNumber":11,"author":{"gitId":"banchiang"},"content":""},{"lineNumber":12,"author":{"gitId":"banchiang"},"content":"    /**"},{"lineNumber":13,"author":{"gitId":"banchiang"},"content":"     * Constructs new deadline task."},{"lineNumber":14,"author":{"gitId":"banchiang"},"content":"     *"},{"lineNumber":15,"author":{"gitId":"banchiang"},"content":"     * @param description Name of Deadline task."},{"lineNumber":16,"author":{"gitId":"banchiang"},"content":"     * @param deadline Time format of deadline."},{"lineNumber":17,"author":{"gitId":"banchiang"},"content":"     */"},{"lineNumber":18,"author":{"gitId":"banchiang"},"content":"    public Deadline(String description, LocalDateTime deadline) {"},{"lineNumber":19,"author":{"gitId":"banchiang"},"content":"        super(description);"},{"lineNumber":20,"author":{"gitId":"banchiang"},"content":"        this.deadline \u003d deadline;"},{"lineNumber":21,"author":{"gitId":"banchiang"},"content":"    }"},{"lineNumber":22,"author":{"gitId":"banchiang"},"content":""},{"lineNumber":23,"author":{"gitId":"banchiang"},"content":"    /**"},{"lineNumber":24,"author":{"gitId":"banchiang"},"content":"     * Returns new deadline task created with taskInfo."},{"lineNumber":25,"author":{"gitId":"banchiang"},"content":"     *"},{"lineNumber":26,"author":{"gitId":"banchiang"},"content":"     * @param taskInfo information about the deadline task."},{"lineNumber":27,"author":{"gitId":"banchiang"},"content":"     * @return a deadline task."},{"lineNumber":28,"author":{"gitId":"banchiang"},"content":"     * @throws DukeWrongFormatException if info is wrongly formatted."},{"lineNumber":29,"author":{"gitId":"banchiang"},"content":"     * @throws DukeMissingDescriptionException if info is missing."},{"lineNumber":30,"author":{"gitId":"banchiang"},"content":"     */"},{"lineNumber":31,"author":{"gitId":"banchiang"},"content":"    public static Deadline create(String taskInfo) throws DukeWrongFormatException,"},{"lineNumber":32,"author":{"gitId":"banchiang"},"content":"            DukeMissingDescriptionException {"},{"lineNumber":33,"author":{"gitId":"banchiang"},"content":"        String[] parsedInfo \u003d taskInfo.split(\" /by \", 2);"},{"lineNumber":34,"author":{"gitId":"banchiang"},"content":"        if (parsedInfo.length !\u003d 2) {"},{"lineNumber":35,"author":{"gitId":"banchiang"},"content":"            throw new DukeWrongFormatException(\"deadline\");"},{"lineNumber":36,"author":{"gitId":"banchiang"},"content":"        } else if (parsedInfo[0].equals(\" \") || parsedInfo[1].equals(\" \")) {"},{"lineNumber":37,"author":{"gitId":"banchiang"},"content":"            throw new DukeMissingDescriptionException(\"deadline\");"},{"lineNumber":38,"author":{"gitId":"banchiang"},"content":"        } else {"},{"lineNumber":39,"author":{"gitId":"banchiang"},"content":"            try {"},{"lineNumber":40,"author":{"gitId":"banchiang"},"content":"                String deadlineName \u003d parsedInfo[0];"},{"lineNumber":41,"author":{"gitId":"banchiang"},"content":"                LocalDateTime deadline \u003d Parser.parseInputDate(parsedInfo[1]);"},{"lineNumber":42,"author":{"gitId":"banchiang"},"content":"                return new Deadline(deadlineName, deadline);"},{"lineNumber":43,"author":{"gitId":"banchiang"},"content":"            } catch (DateTimeParseException e) {"},{"lineNumber":44,"author":{"gitId":"banchiang"},"content":"                throw new DukeWrongFormatException(\"deadline\");"},{"lineNumber":45,"author":{"gitId":"banchiang"},"content":"            }"},{"lineNumber":46,"author":{"gitId":"banchiang"},"content":"        }"},{"lineNumber":47,"author":{"gitId":"banchiang"},"content":"    }"},{"lineNumber":48,"author":{"gitId":"banchiang"},"content":""},{"lineNumber":49,"author":{"gitId":"banchiang"},"content":"    /**"},{"lineNumber":50,"author":{"gitId":"banchiang"},"content":"     * Return string of deadline name and info."},{"lineNumber":51,"author":{"gitId":"banchiang"},"content":"     * Format is for saving task into text file."},{"lineNumber":52,"author":{"gitId":"banchiang"},"content":"     *"},{"lineNumber":53,"author":{"gitId":"banchiang"},"content":"     * @return string format of task\u0027s info."},{"lineNumber":54,"author":{"gitId":"banchiang"},"content":"     */"},{"lineNumber":55,"author":{"gitId":"banchiang"},"content":"    @Override"},{"lineNumber":56,"author":{"gitId":"banchiang"},"content":"    public String saveTask() {"},{"lineNumber":57,"author":{"gitId":"banchiang"},"content":"        return String.format(\"D | %s | %s | %s\\n\", super.getStatusIcon(),"},{"lineNumber":58,"author":{"gitId":"banchiang"},"content":"                description, super.formatTime(deadline));"},{"lineNumber":59,"author":{"gitId":"banchiang"},"content":"    }"},{"lineNumber":60,"author":{"gitId":"banchiang"},"content":""},{"lineNumber":61,"author":{"gitId":"banchiang"},"content":"    /**"},{"lineNumber":62,"author":{"gitId":"banchiang"},"content":"     * Returns string of deadline task name and info."},{"lineNumber":63,"author":{"gitId":"banchiang"},"content":"     * Format is for the display on the list."},{"lineNumber":64,"author":{"gitId":"banchiang"},"content":"     *"},{"lineNumber":65,"author":{"gitId":"banchiang"},"content":"     * @return string format of task\u0027s info."},{"lineNumber":66,"author":{"gitId":"banchiang"},"content":"     */"},{"lineNumber":67,"author":{"gitId":"banchiang"},"content":"    @Override"},{"lineNumber":68,"author":{"gitId":"banchiang"},"content":"    public String toString() {"},{"lineNumber":69,"author":{"gitId":"banchiang"},"content":"        return \"[D]\" + super.toString() + \" (by: \""},{"lineNumber":70,"author":{"gitId":"banchiang"},"content":"                + super.formatTime(deadline) + \")\";"},{"lineNumber":71,"author":{"gitId":"banchiang"},"content":"    }"},{"lineNumber":72,"author":{"gitId":"banchiang"},"content":"}"},{"lineNumber":73,"author":{"gitId":"banchiang"},"content":""}],"authorContributionMap":{"banchiang":73}},{"path":"src/main/java/duke/DeleteCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"banchiang"},"content":"package duke;"},{"lineNumber":2,"author":{"gitId":"banchiang"},"content":""},{"lineNumber":3,"author":{"gitId":"banchiang"},"content":"/**"},{"lineNumber":4,"author":{"gitId":"banchiang"},"content":" * Delete command for Duke."},{"lineNumber":5,"author":{"gitId":"banchiang"},"content":" */"},{"lineNumber":6,"author":{"gitId":"banchiang"},"content":"public class DeleteCommand extends Command {"},{"lineNumber":7,"author":{"gitId":"banchiang"},"content":"    private int taskNum;"},{"lineNumber":8,"author":{"gitId":"banchiang"},"content":""},{"lineNumber":9,"author":{"gitId":"banchiang"},"content":"    /**"},{"lineNumber":10,"author":{"gitId":"banchiang"},"content":"     * Constructs a delete command."},{"lineNumber":11,"author":{"gitId":"banchiang"},"content":"     *"},{"lineNumber":12,"author":{"gitId":"banchiang"},"content":"     * @param taskNum The task number to delete in task list."},{"lineNumber":13,"author":{"gitId":"banchiang"},"content":"     */"},{"lineNumber":14,"author":{"gitId":"banchiang"},"content":"    public DeleteCommand(int taskNum) {"},{"lineNumber":15,"author":{"gitId":"banchiang"},"content":"        super();"},{"lineNumber":16,"author":{"gitId":"banchiang"},"content":"        this.taskNum \u003d taskNum;"},{"lineNumber":17,"author":{"gitId":"banchiang"},"content":"    }"},{"lineNumber":18,"author":{"gitId":"banchiang"},"content":""},{"lineNumber":19,"author":{"gitId":"banchiang"},"content":"    /**"},{"lineNumber":20,"author":{"gitId":"banchiang"},"content":"     * Deletes task from list of matching task-numbering."},{"lineNumber":21,"author":{"gitId":"banchiang"},"content":"     * Then prints delete message and update drive."},{"lineNumber":22,"author":{"gitId":"banchiang"},"content":"     *"},{"lineNumber":23,"author":{"gitId":"banchiang"},"content":"     * @param tl task list."},{"lineNumber":24,"author":{"gitId":"banchiang"},"content":"     * @param ui object for user interface."},{"lineNumber":25,"author":{"gitId":"banchiang"},"content":"     * @param storage storage for tasks."},{"lineNumber":26,"author":{"gitId":"banchiang"},"content":"     * @throws DukeException When command is wrong in printTaskMsg()."},{"lineNumber":27,"author":{"gitId":"banchiang"},"content":"     */"},{"lineNumber":28,"author":{"gitId":"banchiang"},"content":"    @Override"},{"lineNumber":29,"author":{"gitId":"banchiang"},"content":"    public String execute(TaskList tl, Ui ui, Storage storage) throws DukeException {"},{"lineNumber":30,"author":{"gitId":"banchiang"},"content":"        Task t \u003d tl.remove(taskNum - 1);"},{"lineNumber":31,"author":{"gitId":"banchiang"},"content":"        storage.save(tl.toString());"},{"lineNumber":32,"author":{"gitId":"banchiang"},"content":"        return ui.printTaskMsg(t, tl, \"delete\");"},{"lineNumber":33,"author":{"gitId":"banchiang"},"content":"    }"},{"lineNumber":34,"author":{"gitId":"banchiang"},"content":"}"},{"lineNumber":35,"author":{"gitId":"banchiang"},"content":""}],"authorContributionMap":{"banchiang":35}},{"path":"src/main/java/duke/DialogBox.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"banchiang"},"content":"package duke;"},{"lineNumber":2,"author":{"gitId":"banchiang"},"content":""},{"lineNumber":3,"author":{"gitId":"banchiang"},"content":"import java.io.IOException;"},{"lineNumber":4,"author":{"gitId":"banchiang"},"content":"import java.util.Collections;"},{"lineNumber":5,"author":{"gitId":"banchiang"},"content":""},{"lineNumber":6,"author":{"gitId":"banchiang"},"content":"import javafx.collections.FXCollections;"},{"lineNumber":7,"author":{"gitId":"banchiang"},"content":"import javafx.collections.ObservableList;"},{"lineNumber":8,"author":{"gitId":"banchiang"},"content":"import javafx.fxml.FXML;"},{"lineNumber":9,"author":{"gitId":"banchiang"},"content":"import javafx.fxml.FXMLLoader;"},{"lineNumber":10,"author":{"gitId":"banchiang"},"content":"import javafx.geometry.Pos;"},{"lineNumber":11,"author":{"gitId":"banchiang"},"content":"import javafx.scene.Node;"},{"lineNumber":12,"author":{"gitId":"banchiang"},"content":"import javafx.scene.control.Label;"},{"lineNumber":13,"author":{"gitId":"banchiang"},"content":"import javafx.scene.image.Image;"},{"lineNumber":14,"author":{"gitId":"banchiang"},"content":"import javafx.scene.image.ImageView;"},{"lineNumber":15,"author":{"gitId":"banchiang"},"content":"import javafx.scene.layout.HBox;"},{"lineNumber":16,"author":{"gitId":"banchiang"},"content":""},{"lineNumber":17,"author":{"gitId":"banchiang"},"content":"/**"},{"lineNumber":18,"author":{"gitId":"banchiang"},"content":" * An example of a custom control using FXML."},{"lineNumber":19,"author":{"gitId":"banchiang"},"content":" * This control represents a dialog box consisting of an ImageView to represent the speaker\u0027s face and a label"},{"lineNumber":20,"author":{"gitId":"banchiang"},"content":" * containing text from the speaker."},{"lineNumber":21,"author":{"gitId":"banchiang"},"content":" */"},{"lineNumber":22,"author":{"gitId":"banchiang"},"content":"public class DialogBox extends HBox {"},{"lineNumber":23,"author":{"gitId":"banchiang"},"content":"    @FXML"},{"lineNumber":24,"author":{"gitId":"banchiang"},"content":"    private Label dialog;"},{"lineNumber":25,"author":{"gitId":"banchiang"},"content":"    @FXML"},{"lineNumber":26,"author":{"gitId":"banchiang"},"content":"    private ImageView displayPicture;"},{"lineNumber":27,"author":{"gitId":"banchiang"},"content":""},{"lineNumber":28,"author":{"gitId":"banchiang"},"content":"    private DialogBox(String text, Image img) {"},{"lineNumber":29,"author":{"gitId":"banchiang"},"content":"        try {"},{"lineNumber":30,"author":{"gitId":"banchiang"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(\"/view/DialogBox.fxml\"));"},{"lineNumber":31,"author":{"gitId":"banchiang"},"content":"            fxmlLoader.setController(this);"},{"lineNumber":32,"author":{"gitId":"banchiang"},"content":"            fxmlLoader.setRoot(this);"},{"lineNumber":33,"author":{"gitId":"banchiang"},"content":"            fxmlLoader.load();"},{"lineNumber":34,"author":{"gitId":"banchiang"},"content":"        } catch (IOException e) {"},{"lineNumber":35,"author":{"gitId":"banchiang"},"content":"            e.printStackTrace();"},{"lineNumber":36,"author":{"gitId":"banchiang"},"content":"        }"},{"lineNumber":37,"author":{"gitId":"banchiang"},"content":""},{"lineNumber":38,"author":{"gitId":"banchiang"},"content":"        dialog.setText(text);"},{"lineNumber":39,"author":{"gitId":"banchiang"},"content":"        displayPicture.setImage(img);"},{"lineNumber":40,"author":{"gitId":"banchiang"},"content":"    }"},{"lineNumber":41,"author":{"gitId":"banchiang"},"content":""},{"lineNumber":42,"author":{"gitId":"banchiang"},"content":"    /**"},{"lineNumber":43,"author":{"gitId":"banchiang"},"content":"     * Flips the dialog box such that the ImageView is on the left and text on the right."},{"lineNumber":44,"author":{"gitId":"banchiang"},"content":"     */"},{"lineNumber":45,"author":{"gitId":"banchiang"},"content":"    private void flip() {"},{"lineNumber":46,"author":{"gitId":"banchiang"},"content":"        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());"},{"lineNumber":47,"author":{"gitId":"banchiang"},"content":"        Collections.reverse(tmp);"},{"lineNumber":48,"author":{"gitId":"banchiang"},"content":"        getChildren().setAll(tmp);"},{"lineNumber":49,"author":{"gitId":"banchiang"},"content":"        setAlignment(Pos.TOP_LEFT);"},{"lineNumber":50,"author":{"gitId":"banchiang"},"content":"    }"},{"lineNumber":51,"author":{"gitId":"banchiang"},"content":""},{"lineNumber":52,"author":{"gitId":"banchiang"},"content":"    public static DialogBox getUserDialog(String text, Image img) {"},{"lineNumber":53,"author":{"gitId":"banchiang"},"content":"        return new DialogBox(text, img);"},{"lineNumber":54,"author":{"gitId":"banchiang"},"content":"    }"},{"lineNumber":55,"author":{"gitId":"banchiang"},"content":""},{"lineNumber":56,"author":{"gitId":"banchiang"},"content":"    public static DialogBox getDukeDialog(String text, Image img) {"},{"lineNumber":57,"author":{"gitId":"banchiang"},"content":"        var db \u003d new DialogBox(text, img);"},{"lineNumber":58,"author":{"gitId":"banchiang"},"content":"        db.flip();"},{"lineNumber":59,"author":{"gitId":"banchiang"},"content":"        return db;"},{"lineNumber":60,"author":{"gitId":"banchiang"},"content":"    }"},{"lineNumber":61,"author":{"gitId":"banchiang"},"content":"}"},{"lineNumber":62,"author":{"gitId":"banchiang"},"content":""}],"authorContributionMap":{"banchiang":62}},{"path":"src/main/java/duke/DoneCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"banchiang"},"content":"package duke;"},{"lineNumber":2,"author":{"gitId":"banchiang"},"content":""},{"lineNumber":3,"author":{"gitId":"banchiang"},"content":"/**"},{"lineNumber":4,"author":{"gitId":"banchiang"},"content":" * Done command for Duke."},{"lineNumber":5,"author":{"gitId":"banchiang"},"content":" */"},{"lineNumber":6,"author":{"gitId":"banchiang"},"content":"public class DoneCommand extends Command {"},{"lineNumber":7,"author":{"gitId":"banchiang"},"content":"    private int taskNum;"},{"lineNumber":8,"author":{"gitId":"banchiang"},"content":""},{"lineNumber":9,"author":{"gitId":"banchiang"},"content":"    /**"},{"lineNumber":10,"author":{"gitId":"banchiang"},"content":"     * Constructs new done command."},{"lineNumber":11,"author":{"gitId":"banchiang"},"content":"     *"},{"lineNumber":12,"author":{"gitId":"banchiang"},"content":"     * @param taskNum The task number to be set as done."},{"lineNumber":13,"author":{"gitId":"banchiang"},"content":"     */"},{"lineNumber":14,"author":{"gitId":"banchiang"},"content":"    public DoneCommand(int taskNum) {"},{"lineNumber":15,"author":{"gitId":"banchiang"},"content":"        super();"},{"lineNumber":16,"author":{"gitId":"banchiang"},"content":"        this.taskNum \u003d taskNum;"},{"lineNumber":17,"author":{"gitId":"banchiang"},"content":"    }"},{"lineNumber":18,"author":{"gitId":"banchiang"},"content":""},{"lineNumber":19,"author":{"gitId":"banchiang"},"content":"    /**"},{"lineNumber":20,"author":{"gitId":"banchiang"},"content":"     * Marks a task done of a specific numbering."},{"lineNumber":21,"author":{"gitId":"banchiang"},"content":"     * Prints marked message and update drive."},{"lineNumber":22,"author":{"gitId":"banchiang"},"content":"     *"},{"lineNumber":23,"author":{"gitId":"banchiang"},"content":"     * @param tl task list."},{"lineNumber":24,"author":{"gitId":"banchiang"},"content":"     * @param ui object for user interface."},{"lineNumber":25,"author":{"gitId":"banchiang"},"content":"     * @param storage object to store and load task list."},{"lineNumber":26,"author":{"gitId":"banchiang"},"content":"     * @throws DukeException When command is wrong in printTaskMsg()."},{"lineNumber":27,"author":{"gitId":"banchiang"},"content":"     */"},{"lineNumber":28,"author":{"gitId":"banchiang"},"content":"    @Override"},{"lineNumber":29,"author":{"gitId":"banchiang"},"content":"    public String execute(TaskList tl, Ui ui, Storage storage) throws DukeException {"},{"lineNumber":30,"author":{"gitId":"banchiang"},"content":"        Task t \u003d tl.get(taskNum - 1);"},{"lineNumber":31,"author":{"gitId":"banchiang"},"content":"        t.finishTask();"},{"lineNumber":32,"author":{"gitId":"banchiang"},"content":"        tl.set(taskNum - 1, t);"},{"lineNumber":33,"author":{"gitId":"banchiang"},"content":"        storage.save(tl.toString());"},{"lineNumber":34,"author":{"gitId":"banchiang"},"content":"        return ui.printTaskMsg(t, tl, \"done\");"},{"lineNumber":35,"author":{"gitId":"banchiang"},"content":"    }"},{"lineNumber":36,"author":{"gitId":"banchiang"},"content":"}"},{"lineNumber":37,"author":{"gitId":"banchiang"},"content":""}],"authorContributionMap":{"banchiang":37}},{"path":"src/main/java/duke/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"banchiang"},"content":"package duke;"},{"lineNumber":2,"author":{"gitId":"banchiang"},"content":""},{"lineNumber":3,"author":{"gitId":"banchiang"},"content":"import java.io.UnsupportedEncodingException;"},{"lineNumber":4,"author":{"gitId":"banchiang"},"content":"import java.net.URLDecoder;"},{"lineNumber":5,"author":{"gitId":"banchiang"},"content":""},{"lineNumber":6,"author":{"gitId":"banchiang"},"content":"/**"},{"lineNumber":7,"author":{"gitId":"banchiang"},"content":" * Duke class, the main chatting bot of the application."},{"lineNumber":8,"author":{"gitId":"banchiang"},"content":" */"},{"lineNumber":9,"author":{"gitId":"banchiang"},"content":"public class Duke {"},{"lineNumber":10,"author":{"gitId":"banchiang"},"content":"    private Ui ui;"},{"lineNumber":11,"author":{"gitId":"banchiang"},"content":"    private Storage storage;"},{"lineNumber":12,"author":{"gitId":"banchiang"},"content":"    private TaskList tl;"},{"lineNumber":13,"author":{"gitId":"banchiang"},"content":""},{"lineNumber":14,"author":{"gitId":"banchiang"},"content":"    /**"},{"lineNumber":15,"author":{"gitId":"banchiang"},"content":"     * Constructs new Duke object."},{"lineNumber":16,"author":{"gitId":"banchiang"},"content":"     */"},{"lineNumber":17,"author":{"gitId":"banchiang"},"content":"    public Duke() {"},{"lineNumber":18,"author":{"gitId":"banchiang"},"content":"        this.ui \u003d new Ui();"},{"lineNumber":19,"author":{"gitId":"banchiang"},"content":"        this.storage \u003d new Storage();"},{"lineNumber":20,"author":{"gitId":"banchiang"},"content":"        this.tl \u003d this.storage.load();"},{"lineNumber":21,"author":{"gitId":"banchiang"},"content":"    }"},{"lineNumber":22,"author":{"gitId":"banchiang"},"content":""},{"lineNumber":23,"author":{"gitId":"banchiang"},"content":"    /**"},{"lineNumber":24,"author":{"gitId":"banchiang"},"content":"     * Returns string of greeting."},{"lineNumber":25,"author":{"gitId":"banchiang"},"content":"     *"},{"lineNumber":26,"author":{"gitId":"banchiang"},"content":"     * @return Greeting message."},{"lineNumber":27,"author":{"gitId":"banchiang"},"content":"     */"},{"lineNumber":28,"author":{"gitId":"banchiang"},"content":"    public static String greeting() {"},{"lineNumber":29,"author":{"gitId":"banchiang"},"content":"        return new Ui().printGreeting();"},{"lineNumber":30,"author":{"gitId":"banchiang"},"content":"    }"},{"lineNumber":31,"author":{"gitId":"banchiang"},"content":""},{"lineNumber":32,"author":{"gitId":"banchiang"},"content":"    /**"},{"lineNumber":33,"author":{"gitId":"banchiang"},"content":"     * Returns string of help message."},{"lineNumber":34,"author":{"gitId":"banchiang"},"content":"     *"},{"lineNumber":35,"author":{"gitId":"banchiang"},"content":"     * @return Help message."},{"lineNumber":36,"author":{"gitId":"banchiang"},"content":"     */"},{"lineNumber":37,"author":{"gitId":"banchiang"},"content":"    public static String help() {"},{"lineNumber":38,"author":{"gitId":"banchiang"},"content":"        return new Ui().printHelp();"},{"lineNumber":39,"author":{"gitId":"banchiang"},"content":"    }"},{"lineNumber":40,"author":{"gitId":"banchiang"},"content":""},{"lineNumber":41,"author":{"gitId":"banchiang"},"content":"    /**"},{"lineNumber":42,"author":{"gitId":"banchiang"},"content":"     * Returns path of Duke.class jar directory."},{"lineNumber":43,"author":{"gitId":"banchiang"},"content":"     *"},{"lineNumber":44,"author":{"gitId":"banchiang"},"content":"     * @return String format of path of Duke."},{"lineNumber":45,"author":{"gitId":"banchiang"},"content":"     * @throws UnsupportedEncodingException When unable to create string of duke\u0027s path."},{"lineNumber":46,"author":{"gitId":"banchiang"},"content":"     */"},{"lineNumber":47,"author":{"gitId":"banchiang"},"content":"    public static String getPath() throws UnsupportedEncodingException {"},{"lineNumber":48,"author":{"gitId":"banchiang"},"content":"        String path \u003d Duke.class.getProtectionDomain().getCodeSource().getLocation().getPath();"},{"lineNumber":49,"author":{"gitId":"banchiang"},"content":"        String decodedPath \u003d URLDecoder.decode(path, \"UTF-8\");"},{"lineNumber":50,"author":{"gitId":"banchiang"},"content":"        return decodedPath;"},{"lineNumber":51,"author":{"gitId":"banchiang"},"content":"    }"},{"lineNumber":52,"author":{"gitId":"banchiang"},"content":""},{"lineNumber":53,"author":{"gitId":"banchiang"},"content":"    public static void main(String[] args) {"},{"lineNumber":54,"author":{"gitId":"banchiang"},"content":""},{"lineNumber":55,"author":{"gitId":"banchiang"},"content":"    }"},{"lineNumber":56,"author":{"gitId":"banchiang"},"content":""},{"lineNumber":57,"author":{"gitId":"banchiang"},"content":"    /**"},{"lineNumber":58,"author":{"gitId":"banchiang"},"content":"     * Returns string to print given user input."},{"lineNumber":59,"author":{"gitId":"banchiang"},"content":"     *"},{"lineNumber":60,"author":{"gitId":"banchiang"},"content":"     * @param input Input from user."},{"lineNumber":61,"author":{"gitId":"banchiang"},"content":"     * @return Respond from duke in string format."},{"lineNumber":62,"author":{"gitId":"banchiang"},"content":"     */"},{"lineNumber":63,"author":{"gitId":"banchiang"},"content":"    public String getResponse(String input) {"},{"lineNumber":64,"author":{"gitId":"banchiang"},"content":"        try {"},{"lineNumber":65,"author":{"gitId":"banchiang"},"content":"            Command c \u003d Parser.parseInput(input);"},{"lineNumber":66,"author":{"gitId":"banchiang"},"content":"            return c.execute(tl, ui, storage);"},{"lineNumber":67,"author":{"gitId":"banchiang"},"content":"        } catch (Exception e) {"},{"lineNumber":68,"author":{"gitId":"banchiang"},"content":"            return ui.printError(e.toString());"},{"lineNumber":69,"author":{"gitId":"banchiang"},"content":"        }"},{"lineNumber":70,"author":{"gitId":"banchiang"},"content":"    }"},{"lineNumber":71,"author":{"gitId":"banchiang"},"content":"}"}],"authorContributionMap":{"banchiang":71}},{"path":"src/main/java/duke/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"banchiang"},"content":"package duke;"},{"lineNumber":2,"author":{"gitId":"banchiang"},"content":""},{"lineNumber":3,"author":{"gitId":"banchiang"},"content":"/**"},{"lineNumber":4,"author":{"gitId":"banchiang"},"content":" * Exceptions created by Duke are under this class."},{"lineNumber":5,"author":{"gitId":"banchiang"},"content":" */"},{"lineNumber":6,"author":{"gitId":"banchiang"},"content":"public class DukeException extends Exception {"},{"lineNumber":7,"author":{"gitId":"banchiang"},"content":"    protected static final String HELP_MSG \u003d \"Please check format/command via \u0027help\u0027.\\n\";"},{"lineNumber":8,"author":{"gitId":"banchiang"},"content":""},{"lineNumber":9,"author":{"gitId":"banchiang"},"content":"    /**"},{"lineNumber":10,"author":{"gitId":"banchiang"},"content":"     * Returns string for DukeException."},{"lineNumber":11,"author":{"gitId":"banchiang"},"content":"     *"},{"lineNumber":12,"author":{"gitId":"banchiang"},"content":"     * @return String message for a DukeException."},{"lineNumber":13,"author":{"gitId":"banchiang"},"content":"     */"},{"lineNumber":14,"author":{"gitId":"banchiang"},"content":"    @Override"},{"lineNumber":15,"author":{"gitId":"banchiang"},"content":"    public String toString() {"},{"lineNumber":16,"author":{"gitId":"banchiang"},"content":"        return \"Exception in Duke occurred!\";"},{"lineNumber":17,"author":{"gitId":"banchiang"},"content":"    }"},{"lineNumber":18,"author":{"gitId":"banchiang"},"content":"}"},{"lineNumber":19,"author":{"gitId":"banchiang"},"content":""}],"authorContributionMap":{"banchiang":19}},{"path":"src/main/java/duke/DukeMissingDescriptionException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"banchiang"},"content":"package duke;"},{"lineNumber":2,"author":{"gitId":"banchiang"},"content":""},{"lineNumber":3,"author":{"gitId":"banchiang"},"content":"/**"},{"lineNumber":4,"author":{"gitId":"banchiang"},"content":" * Exception of missing description of commands for Duke."},{"lineNumber":5,"author":{"gitId":"banchiang"},"content":" */"},{"lineNumber":6,"author":{"gitId":"banchiang"},"content":"public class DukeMissingDescriptionException extends DukeException {"},{"lineNumber":7,"author":{"gitId":"banchiang"},"content":"    private String command;"},{"lineNumber":8,"author":{"gitId":"banchiang"},"content":""},{"lineNumber":9,"author":{"gitId":"banchiang"},"content":"    /**"},{"lineNumber":10,"author":{"gitId":"banchiang"},"content":"     * Constructs missing description exception."},{"lineNumber":11,"author":{"gitId":"banchiang"},"content":"     *"},{"lineNumber":12,"author":{"gitId":"banchiang"},"content":"     * @param command Type of command which had the exception."},{"lineNumber":13,"author":{"gitId":"banchiang"},"content":"     */"},{"lineNumber":14,"author":{"gitId":"banchiang"},"content":"    public DukeMissingDescriptionException(String command) {"},{"lineNumber":15,"author":{"gitId":"banchiang"},"content":"        this.command \u003d command;"},{"lineNumber":16,"author":{"gitId":"banchiang"},"content":"    }"},{"lineNumber":17,"author":{"gitId":"banchiang"},"content":""},{"lineNumber":18,"author":{"gitId":"banchiang"},"content":"    /**"},{"lineNumber":19,"author":{"gitId":"banchiang"},"content":"     * Returns string message of missing description exception."},{"lineNumber":20,"author":{"gitId":"banchiang"},"content":"     *"},{"lineNumber":21,"author":{"gitId":"banchiang"},"content":"     * @return String message of missing description exception."},{"lineNumber":22,"author":{"gitId":"banchiang"},"content":"     */"},{"lineNumber":23,"author":{"gitId":"banchiang"},"content":"    @Override"},{"lineNumber":24,"author":{"gitId":"banchiang"},"content":"    public String toString() {"},{"lineNumber":25,"author":{"gitId":"banchiang"},"content":"        String missingMsg \u003d String.format(\"Sorry, \u0027%s\u0027 task has missing description!\\n\","},{"lineNumber":26,"author":{"gitId":"banchiang"},"content":"                command);"},{"lineNumber":27,"author":{"gitId":"banchiang"},"content":"        return missingMsg + HELP_MSG;"},{"lineNumber":28,"author":{"gitId":"banchiang"},"content":"    }"},{"lineNumber":29,"author":{"gitId":"banchiang"},"content":"}"}],"authorContributionMap":{"banchiang":29}},{"path":"src/main/java/duke/DukeNumOutOfRangeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"banchiang"},"content":"package duke;"},{"lineNumber":2,"author":{"gitId":"banchiang"},"content":""},{"lineNumber":3,"author":{"gitId":"banchiang"},"content":"/**"},{"lineNumber":4,"author":{"gitId":"banchiang"},"content":" * Exceptions of input numbers out of number range for Duke."},{"lineNumber":5,"author":{"gitId":"banchiang"},"content":" */"},{"lineNumber":6,"author":{"gitId":"banchiang"},"content":"public class DukeNumOutOfRangeException extends DukeException {"},{"lineNumber":7,"author":{"gitId":"banchiang"},"content":"    private final String message \u003d \"\u0027done/delete\u0027 cmd num input is out of range!\\n\""},{"lineNumber":8,"author":{"gitId":"banchiang"},"content":"            + \"Range to be within N (num of task in list).\\n\""},{"lineNumber":9,"author":{"gitId":"banchiang"},"content":"            + \"to check N, use \u0027list\u0027 command.\\n\""},{"lineNumber":10,"author":{"gitId":"banchiang"},"content":"            + \"*if they are no task in the list,\\n\""},{"lineNumber":11,"author":{"gitId":"banchiang"},"content":"            + \"do not use done/delete commands!\\n\";"},{"lineNumber":12,"author":{"gitId":"banchiang"},"content":""},{"lineNumber":13,"author":{"gitId":"banchiang"},"content":"    /**"},{"lineNumber":14,"author":{"gitId":"banchiang"},"content":"     * Returns string message of error."},{"lineNumber":15,"author":{"gitId":"banchiang"},"content":"     *"},{"lineNumber":16,"author":{"gitId":"banchiang"},"content":"     * @return String of num out of range error."},{"lineNumber":17,"author":{"gitId":"banchiang"},"content":"     */"},{"lineNumber":18,"author":{"gitId":"banchiang"},"content":"    @Override"},{"lineNumber":19,"author":{"gitId":"banchiang"},"content":"    public String toString() {"},{"lineNumber":20,"author":{"gitId":"banchiang"},"content":"        return message;"},{"lineNumber":21,"author":{"gitId":"banchiang"},"content":"    }"},{"lineNumber":22,"author":{"gitId":"banchiang"},"content":"}"},{"lineNumber":23,"author":{"gitId":"banchiang"},"content":""}],"authorContributionMap":{"banchiang":23}},{"path":"src/main/java/duke/DukeSaveFileException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"banchiang"},"content":"package duke;"},{"lineNumber":2,"author":{"gitId":"banchiang"},"content":""},{"lineNumber":3,"author":{"gitId":"banchiang"},"content":"/**"},{"lineNumber":4,"author":{"gitId":"banchiang"},"content":" * Exception where Duke was unable to save file."},{"lineNumber":5,"author":{"gitId":"banchiang"},"content":" */"},{"lineNumber":6,"author":{"gitId":"banchiang"},"content":"public class DukeSaveFileException extends DukeException {"},{"lineNumber":7,"author":{"gitId":"banchiang"},"content":""},{"lineNumber":8,"author":{"gitId":"banchiang"},"content":"    /**"},{"lineNumber":9,"author":{"gitId":"banchiang"},"content":"     * Returns string message of save file exception."},{"lineNumber":10,"author":{"gitId":"banchiang"},"content":"     *"},{"lineNumber":11,"author":{"gitId":"banchiang"},"content":"     * @return String message of save file exception."},{"lineNumber":12,"author":{"gitId":"banchiang"},"content":"     */"},{"lineNumber":13,"author":{"gitId":"banchiang"},"content":"    @Override"},{"lineNumber":14,"author":{"gitId":"banchiang"},"content":"    public String toString() {"},{"lineNumber":15,"author":{"gitId":"banchiang"},"content":"        return \"Sorry the file could not be saved in drive!\\n\";"},{"lineNumber":16,"author":{"gitId":"banchiang"},"content":"    }"},{"lineNumber":17,"author":{"gitId":"banchiang"},"content":"}"}],"authorContributionMap":{"banchiang":17}},{"path":"src/main/java/duke/DukeWrongCommandException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"banchiang"},"content":"package duke;"},{"lineNumber":2,"author":{"gitId":"banchiang"},"content":""},{"lineNumber":3,"author":{"gitId":"banchiang"},"content":"/**"},{"lineNumber":4,"author":{"gitId":"banchiang"},"content":" * Exception where command does not exist for Duke."},{"lineNumber":5,"author":{"gitId":"banchiang"},"content":" */"},{"lineNumber":6,"author":{"gitId":"banchiang"},"content":"public class DukeWrongCommandException extends DukeException {"},{"lineNumber":7,"author":{"gitId":"banchiang"},"content":"    private String command;"},{"lineNumber":8,"author":{"gitId":"banchiang"},"content":""},{"lineNumber":9,"author":{"gitId":"banchiang"},"content":"    /**"},{"lineNumber":10,"author":{"gitId":"banchiang"},"content":"     * Constructs wrong command exception."},{"lineNumber":11,"author":{"gitId":"banchiang"},"content":"     *"},{"lineNumber":12,"author":{"gitId":"banchiang"},"content":"     * @param command String format of command which is wrong."},{"lineNumber":13,"author":{"gitId":"banchiang"},"content":"     */"},{"lineNumber":14,"author":{"gitId":"banchiang"},"content":"    public DukeWrongCommandException(String command) {"},{"lineNumber":15,"author":{"gitId":"banchiang"},"content":"        this.command \u003d command;"},{"lineNumber":16,"author":{"gitId":"banchiang"},"content":"    }"},{"lineNumber":17,"author":{"gitId":"banchiang"},"content":""},{"lineNumber":18,"author":{"gitId":"banchiang"},"content":"    /**"},{"lineNumber":19,"author":{"gitId":"banchiang"},"content":"     * Returns string message of wrong command exception."},{"lineNumber":20,"author":{"gitId":"banchiang"},"content":"     *"},{"lineNumber":21,"author":{"gitId":"banchiang"},"content":"     * @return string message of wrong command exception."},{"lineNumber":22,"author":{"gitId":"banchiang"},"content":"     */"},{"lineNumber":23,"author":{"gitId":"banchiang"},"content":"    @Override"},{"lineNumber":24,"author":{"gitId":"banchiang"},"content":"    public String toString() {"},{"lineNumber":25,"author":{"gitId":"banchiang"},"content":"        String wrongFormatMsg \u003d String.format(\"Sorry, \u0027%s\u0027 is not a proper command for Duke!\\n\","},{"lineNumber":26,"author":{"gitId":"banchiang"},"content":"                command);"},{"lineNumber":27,"author":{"gitId":"banchiang"},"content":"        return wrongFormatMsg + HELP_MSG;"},{"lineNumber":28,"author":{"gitId":"banchiang"},"content":"    }"},{"lineNumber":29,"author":{"gitId":"banchiang"},"content":"}"}],"authorContributionMap":{"banchiang":29}},{"path":"src/main/java/duke/DukeWrongFormatException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"banchiang"},"content":"package duke;"},{"lineNumber":2,"author":{"gitId":"banchiang"},"content":""},{"lineNumber":3,"author":{"gitId":"banchiang"},"content":"/**"},{"lineNumber":4,"author":{"gitId":"banchiang"},"content":" * Exception where formatting of commands for Duke is wrong."},{"lineNumber":5,"author":{"gitId":"banchiang"},"content":" */"},{"lineNumber":6,"author":{"gitId":"banchiang"},"content":"public class DukeWrongFormatException extends DukeException {"},{"lineNumber":7,"author":{"gitId":"banchiang"},"content":"    private String command;"},{"lineNumber":8,"author":{"gitId":"banchiang"},"content":""},{"lineNumber":9,"author":{"gitId":"banchiang"},"content":"    /**"},{"lineNumber":10,"author":{"gitId":"banchiang"},"content":"     * Constructs new duke wrong format exception."},{"lineNumber":11,"author":{"gitId":"banchiang"},"content":"     *"},{"lineNumber":12,"author":{"gitId":"banchiang"},"content":"     * @param command Name of command which the exception occurs."},{"lineNumber":13,"author":{"gitId":"banchiang"},"content":"     */"},{"lineNumber":14,"author":{"gitId":"banchiang"},"content":"    DukeWrongFormatException(String command) {"},{"lineNumber":15,"author":{"gitId":"banchiang"},"content":"        this.command \u003d command;"},{"lineNumber":16,"author":{"gitId":"banchiang"},"content":"    }"},{"lineNumber":17,"author":{"gitId":"banchiang"},"content":""},{"lineNumber":18,"author":{"gitId":"banchiang"},"content":"    /**"},{"lineNumber":19,"author":{"gitId":"banchiang"},"content":"     * Returns string format of exception message."},{"lineNumber":20,"author":{"gitId":"banchiang"},"content":"     *"},{"lineNumber":21,"author":{"gitId":"banchiang"},"content":"     * @return String message of wrong format exception."},{"lineNumber":22,"author":{"gitId":"banchiang"},"content":"     */"},{"lineNumber":23,"author":{"gitId":"banchiang"},"content":"    @Override"},{"lineNumber":24,"author":{"gitId":"banchiang"},"content":"    public String toString() {"},{"lineNumber":25,"author":{"gitId":"banchiang"},"content":"        String formatMsg \u003d String.format(\"\u0027%s\u0027 command has wrong format!\\n\", command);"},{"lineNumber":26,"author":{"gitId":"banchiang"},"content":"        return formatMsg + HELP_MSG;"},{"lineNumber":27,"author":{"gitId":"banchiang"},"content":"    }"},{"lineNumber":28,"author":{"gitId":"banchiang"},"content":"}"}],"authorContributionMap":{"banchiang":28}},{"path":"src/main/java/duke/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"banchiang"},"content":"package duke;"},{"lineNumber":2,"author":{"gitId":"banchiang"},"content":""},{"lineNumber":3,"author":{"gitId":"banchiang"},"content":"import java.time.LocalDateTime;"},{"lineNumber":4,"author":{"gitId":"banchiang"},"content":""},{"lineNumber":5,"author":{"gitId":"banchiang"},"content":"/**"},{"lineNumber":6,"author":{"gitId":"banchiang"},"content":" * A subtype of task, Event."},{"lineNumber":7,"author":{"gitId":"banchiang"},"content":" */"},{"lineNumber":8,"author":{"gitId":"banchiang"},"content":"public class Event extends Task {"},{"lineNumber":9,"author":{"gitId":"banchiang"},"content":"    protected LocalDateTime start;"},{"lineNumber":10,"author":{"gitId":"banchiang"},"content":"    protected LocalDateTime end;"},{"lineNumber":11,"author":{"gitId":"banchiang"},"content":""},{"lineNumber":12,"author":{"gitId":"banchiang"},"content":"    /**"},{"lineNumber":13,"author":{"gitId":"banchiang"},"content":"     * Constructs new Event task."},{"lineNumber":14,"author":{"gitId":"banchiang"},"content":"     *"},{"lineNumber":15,"author":{"gitId":"banchiang"},"content":"     * @param description Name of the event."},{"lineNumber":16,"author":{"gitId":"banchiang"},"content":"     * @param start Starting time of event."},{"lineNumber":17,"author":{"gitId":"banchiang"},"content":"     * @param end Ending time of event."},{"lineNumber":18,"author":{"gitId":"banchiang"},"content":"     */"},{"lineNumber":19,"author":{"gitId":"banchiang"},"content":"    public Event(String description, LocalDateTime start, LocalDateTime end) {"},{"lineNumber":20,"author":{"gitId":"banchiang"},"content":"        super(description);"},{"lineNumber":21,"author":{"gitId":"banchiang"},"content":"        this.start \u003d start;"},{"lineNumber":22,"author":{"gitId":"banchiang"},"content":"        this.end \u003d end;"},{"lineNumber":23,"author":{"gitId":"banchiang"},"content":"    }"},{"lineNumber":24,"author":{"gitId":"banchiang"},"content":""},{"lineNumber":25,"author":{"gitId":"banchiang"},"content":"    /**"},{"lineNumber":26,"author":{"gitId":"banchiang"},"content":"     * Returns event task."},{"lineNumber":27,"author":{"gitId":"banchiang"},"content":"     *"},{"lineNumber":28,"author":{"gitId":"banchiang"},"content":"     * @param taskInfo Information of the task."},{"lineNumber":29,"author":{"gitId":"banchiang"},"content":"     * @return New Event task."},{"lineNumber":30,"author":{"gitId":"banchiang"},"content":"     * @throws DukeWrongFormatException If taskInfo format is wrong."},{"lineNumber":31,"author":{"gitId":"banchiang"},"content":"     * @throws DukeMissingDescriptionException If taskInfo is blank."},{"lineNumber":32,"author":{"gitId":"banchiang"},"content":"     */"},{"lineNumber":33,"author":{"gitId":"banchiang"},"content":"    public static Event create(String taskInfo) throws DukeWrongFormatException,"},{"lineNumber":34,"author":{"gitId":"banchiang"},"content":"            DukeMissingDescriptionException {"},{"lineNumber":35,"author":{"gitId":"banchiang"},"content":"        String[] parsedInfo \u003d taskInfo.split(\" /at \", 2);"},{"lineNumber":36,"author":{"gitId":"banchiang"},"content":"        if (parsedInfo.length !\u003d 2) {"},{"lineNumber":37,"author":{"gitId":"banchiang"},"content":"            throw new DukeWrongFormatException(\"event1\");"},{"lineNumber":38,"author":{"gitId":"banchiang"},"content":"        } else if (parsedInfo[0].equals(\" \") || parsedInfo[1].equals(\" \")) {"},{"lineNumber":39,"author":{"gitId":"banchiang"},"content":"            throw new DukeMissingDescriptionException(\"event\");"},{"lineNumber":40,"author":{"gitId":"banchiang"},"content":"        } else {"},{"lineNumber":41,"author":{"gitId":"banchiang"},"content":"            try {"},{"lineNumber":42,"author":{"gitId":"banchiang"},"content":"                String eventName \u003d parsedInfo[0];"},{"lineNumber":43,"author":{"gitId":"banchiang"},"content":""},{"lineNumber":44,"author":{"gitId":"banchiang"},"content":"                //split event string into 2 parts, first is date, second is time"},{"lineNumber":45,"author":{"gitId":"banchiang"},"content":"                String[] parsedDate \u003d parsedInfo[1].split(\" \");"},{"lineNumber":46,"author":{"gitId":"banchiang"},"content":"                String date \u003d parsedDate[0];"},{"lineNumber":47,"author":{"gitId":"banchiang"},"content":""},{"lineNumber":48,"author":{"gitId":"banchiang"},"content":"                //split time string into 2 parts, first is start time, second is end time"},{"lineNumber":49,"author":{"gitId":"banchiang"},"content":"                String[] parsedTime \u003d parsedDate[1].split(\"-\");"},{"lineNumber":50,"author":{"gitId":"banchiang"},"content":"                String startTime \u003d parsedTime[0];"},{"lineNumber":51,"author":{"gitId":"banchiang"},"content":"                String endTime \u003d parsedTime[1];"},{"lineNumber":52,"author":{"gitId":"banchiang"},"content":""},{"lineNumber":53,"author":{"gitId":"banchiang"},"content":"                //convert string time format to local date time format"},{"lineNumber":54,"author":{"gitId":"banchiang"},"content":"                LocalDateTime ldtStart \u003d Parser.parseInputDate(date + \" \" + startTime);"},{"lineNumber":55,"author":{"gitId":"banchiang"},"content":"                LocalDateTime ldtEnd \u003d Parser.parseInputDate(date + \" \" + endTime);"},{"lineNumber":56,"author":{"gitId":"banchiang"},"content":""},{"lineNumber":57,"author":{"gitId":"banchiang"},"content":"                return new Event(eventName, ldtStart, ldtEnd);"},{"lineNumber":58,"author":{"gitId":"banchiang"},"content":"            } catch (Exception e) {"},{"lineNumber":59,"author":{"gitId":"banchiang"},"content":"                throw new DukeWrongFormatException(\"event\");"},{"lineNumber":60,"author":{"gitId":"banchiang"},"content":"            }"},{"lineNumber":61,"author":{"gitId":"banchiang"},"content":"        }"},{"lineNumber":62,"author":{"gitId":"banchiang"},"content":"    }"},{"lineNumber":63,"author":{"gitId":"banchiang"},"content":""},{"lineNumber":64,"author":{"gitId":"banchiang"},"content":"    /**"},{"lineNumber":65,"author":{"gitId":"banchiang"},"content":"     * Returns string of deadline name and info."},{"lineNumber":66,"author":{"gitId":"banchiang"},"content":"     * Format is for saving task into text file."},{"lineNumber":67,"author":{"gitId":"banchiang"},"content":"     *"},{"lineNumber":68,"author":{"gitId":"banchiang"},"content":"     * @return string format of task\u0027s info."},{"lineNumber":69,"author":{"gitId":"banchiang"},"content":"     */"},{"lineNumber":70,"author":{"gitId":"banchiang"},"content":"    @Override"},{"lineNumber":71,"author":{"gitId":"banchiang"},"content":"    public String saveTask() {"},{"lineNumber":72,"author":{"gitId":"banchiang"},"content":"        return String.format(\"E | %s | %s | %s-%s\\n\", super.getStatusIcon(),"},{"lineNumber":73,"author":{"gitId":"banchiang"},"content":"                description, super.formatTime(start), super.formatTime(end));"},{"lineNumber":74,"author":{"gitId":"banchiang"},"content":"    }"},{"lineNumber":75,"author":{"gitId":"banchiang"},"content":""},{"lineNumber":76,"author":{"gitId":"banchiang"},"content":"    /**"},{"lineNumber":77,"author":{"gitId":"banchiang"},"content":"     * Returns string of event task name and info."},{"lineNumber":78,"author":{"gitId":"banchiang"},"content":"     * Format is for the display on the list."},{"lineNumber":79,"author":{"gitId":"banchiang"},"content":"     *"},{"lineNumber":80,"author":{"gitId":"banchiang"},"content":"     * @return string format of task\u0027s info."},{"lineNumber":81,"author":{"gitId":"banchiang"},"content":"     */"},{"lineNumber":82,"author":{"gitId":"banchiang"},"content":"    @Override"},{"lineNumber":83,"author":{"gitId":"banchiang"},"content":"    public String toString() {"},{"lineNumber":84,"author":{"gitId":"banchiang"},"content":"        return String.format(\"[E]%s (at: %s - %s)\", super.toString(),"},{"lineNumber":85,"author":{"gitId":"banchiang"},"content":"                super.formatTime(start), super.formatTime(end));"},{"lineNumber":86,"author":{"gitId":"banchiang"},"content":"    }"},{"lineNumber":87,"author":{"gitId":"banchiang"},"content":"}"}],"authorContributionMap":{"banchiang":87}},{"path":"src/main/java/duke/FindCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"banchiang"},"content":"package duke;"},{"lineNumber":2,"author":{"gitId":"banchiang"},"content":""},{"lineNumber":3,"author":{"gitId":"banchiang"},"content":"/**"},{"lineNumber":4,"author":{"gitId":"banchiang"},"content":" * Command to find relevant tasks with keyword."},{"lineNumber":5,"author":{"gitId":"banchiang"},"content":" */"},{"lineNumber":6,"author":{"gitId":"banchiang"},"content":"public class FindCommand extends Command {"},{"lineNumber":7,"author":{"gitId":"banchiang"},"content":"    private String pattern;"},{"lineNumber":8,"author":{"gitId":"banchiang"},"content":""},{"lineNumber":9,"author":{"gitId":"banchiang"},"content":"    /**"},{"lineNumber":10,"author":{"gitId":"banchiang"},"content":"     * Constructs new find command."},{"lineNumber":11,"author":{"gitId":"banchiang"},"content":"     * @param pattern String pattern to find in task list."},{"lineNumber":12,"author":{"gitId":"banchiang"},"content":"     */"},{"lineNumber":13,"author":{"gitId":"banchiang"},"content":"    public FindCommand(String pattern) {"},{"lineNumber":14,"author":{"gitId":"banchiang"},"content":"        this.pattern \u003d pattern;"},{"lineNumber":15,"author":{"gitId":"banchiang"},"content":"    }"},{"lineNumber":16,"author":{"gitId":"banchiang"},"content":""},{"lineNumber":17,"author":{"gitId":"banchiang"},"content":"    /**"},{"lineNumber":18,"author":{"gitId":"banchiang"},"content":"     * Finds all taskName that contains pattern."},{"lineNumber":19,"author":{"gitId":"banchiang"},"content":"     * Matching tasks would then be printed out."},{"lineNumber":20,"author":{"gitId":"banchiang"},"content":"     *"},{"lineNumber":21,"author":{"gitId":"banchiang"},"content":"     * @param tl Task list for Duke."},{"lineNumber":22,"author":{"gitId":"banchiang"},"content":"     * @param ui User Interface for Duke."},{"lineNumber":23,"author":{"gitId":"banchiang"},"content":"     * @param storage Storage to save list to drive."},{"lineNumber":24,"author":{"gitId":"banchiang"},"content":"     * @return String of all task that matches pattern."},{"lineNumber":25,"author":{"gitId":"banchiang"},"content":"     */"},{"lineNumber":26,"author":{"gitId":"banchiang"},"content":"    @Override"},{"lineNumber":27,"author":{"gitId":"banchiang"},"content":"    public String execute(TaskList tl, Ui ui, Storage storage) {"},{"lineNumber":28,"author":{"gitId":"banchiang"},"content":"        TaskList tempTL \u003d new TaskList();"},{"lineNumber":29,"author":{"gitId":"banchiang"},"content":"        for (Task t : tl.getList()) {"},{"lineNumber":30,"author":{"gitId":"banchiang"},"content":"            String taskName \u003d t.getName();"},{"lineNumber":31,"author":{"gitId":"banchiang"},"content":"            if (taskName.contains(pattern)) {"},{"lineNumber":32,"author":{"gitId":"banchiang"},"content":"                tempTL.add(t);"},{"lineNumber":33,"author":{"gitId":"banchiang"},"content":"            }"},{"lineNumber":34,"author":{"gitId":"banchiang"},"content":"        }"},{"lineNumber":35,"author":{"gitId":"banchiang"},"content":"        return ui.printFoundTasks(tempTL);"},{"lineNumber":36,"author":{"gitId":"banchiang"},"content":"    }"},{"lineNumber":37,"author":{"gitId":"banchiang"},"content":"}"}],"authorContributionMap":{"banchiang":37}},{"path":"src/main/java/duke/HelpCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"banchiang"},"content":"package duke;"},{"lineNumber":2,"author":{"gitId":"banchiang"},"content":""},{"lineNumber":3,"author":{"gitId":"banchiang"},"content":"/**"},{"lineNumber":4,"author":{"gitId":"banchiang"},"content":" * Command to ask Duke for help."},{"lineNumber":5,"author":{"gitId":"banchiang"},"content":" */"},{"lineNumber":6,"author":{"gitId":"banchiang"},"content":"public class HelpCommand extends Command {"},{"lineNumber":7,"author":{"gitId":"banchiang"},"content":""},{"lineNumber":8,"author":{"gitId":"banchiang"},"content":"    /**"},{"lineNumber":9,"author":{"gitId":"banchiang"},"content":"     * Prints help message."},{"lineNumber":10,"author":{"gitId":"banchiang"},"content":"     *"},{"lineNumber":11,"author":{"gitId":"banchiang"},"content":"     * @param tl Task list of Duke."},{"lineNumber":12,"author":{"gitId":"banchiang"},"content":"     * @param ui User interface of Duke."},{"lineNumber":13,"author":{"gitId":"banchiang"},"content":"     * @param storage Storage to save list to drive."},{"lineNumber":14,"author":{"gitId":"banchiang"},"content":"     * @return String format of help message."},{"lineNumber":15,"author":{"gitId":"banchiang"},"content":"     */"},{"lineNumber":16,"author":{"gitId":"banchiang"},"content":"    @Override"},{"lineNumber":17,"author":{"gitId":"banchiang"},"content":"    public String execute(TaskList tl, Ui ui, Storage storage) {"},{"lineNumber":18,"author":{"gitId":"banchiang"},"content":"        return ui.printHelp();"},{"lineNumber":19,"author":{"gitId":"banchiang"},"content":"    }"},{"lineNumber":20,"author":{"gitId":"banchiang"},"content":"}"}],"authorContributionMap":{"banchiang":20}},{"path":"src/main/java/duke/Launcher.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"banchiang"},"content":"package duke;"},{"lineNumber":2,"author":{"gitId":"banchiang"},"content":""},{"lineNumber":3,"author":{"gitId":"banchiang"},"content":"import javafx.application.Application;"},{"lineNumber":4,"author":{"gitId":"banchiang"},"content":""},{"lineNumber":5,"author":{"gitId":"banchiang"},"content":"/**"},{"lineNumber":6,"author":{"gitId":"banchiang"},"content":" * Launcher class for Duke GUI."},{"lineNumber":7,"author":{"gitId":"banchiang"},"content":" */"},{"lineNumber":8,"author":{"gitId":"banchiang"},"content":"public class Launcher {"},{"lineNumber":9,"author":{"gitId":"banchiang"},"content":"    public static void main(String[] args) {"},{"lineNumber":10,"author":{"gitId":"banchiang"},"content":"        Application.launch(Main.class, args);"},{"lineNumber":11,"author":{"gitId":"banchiang"},"content":"    }"},{"lineNumber":12,"author":{"gitId":"banchiang"},"content":"}"}],"authorContributionMap":{"banchiang":12}},{"path":"src/main/java/duke/ListCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"banchiang"},"content":"package duke;"},{"lineNumber":2,"author":{"gitId":"banchiang"},"content":""},{"lineNumber":3,"author":{"gitId":"banchiang"},"content":"/**"},{"lineNumber":4,"author":{"gitId":"banchiang"},"content":" * Command for duke to list out all the tasks."},{"lineNumber":5,"author":{"gitId":"banchiang"},"content":" */"},{"lineNumber":6,"author":{"gitId":"banchiang"},"content":"public class ListCommand extends Command {"},{"lineNumber":7,"author":{"gitId":"banchiang"},"content":""},{"lineNumber":8,"author":{"gitId":"banchiang"},"content":"    /**"},{"lineNumber":9,"author":{"gitId":"banchiang"},"content":"     * Lists out the tasks in the list to user."},{"lineNumber":10,"author":{"gitId":"banchiang"},"content":"     *"},{"lineNumber":11,"author":{"gitId":"banchiang"},"content":"     * @param tl task list."},{"lineNumber":12,"author":{"gitId":"banchiang"},"content":"     * @param ui object for user interface."},{"lineNumber":13,"author":{"gitId":"banchiang"},"content":"     * @param storage object to load and save tasks."},{"lineNumber":14,"author":{"gitId":"banchiang"},"content":"     */"},{"lineNumber":15,"author":{"gitId":"banchiang"},"content":"    @Override"},{"lineNumber":16,"author":{"gitId":"banchiang"},"content":"    public String execute(TaskList tl, Ui ui, Storage storage) {"},{"lineNumber":17,"author":{"gitId":"banchiang"},"content":"        return ui.printTasks(tl);"},{"lineNumber":18,"author":{"gitId":"banchiang"},"content":"    }"},{"lineNumber":19,"author":{"gitId":"banchiang"},"content":"}"}],"authorContributionMap":{"banchiang":19}},{"path":"src/main/java/duke/Main.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"banchiang"},"content":"package duke;"},{"lineNumber":2,"author":{"gitId":"banchiang"},"content":""},{"lineNumber":3,"author":{"gitId":"banchiang"},"content":"import java.io.IOException;"},{"lineNumber":4,"author":{"gitId":"banchiang"},"content":""},{"lineNumber":5,"author":{"gitId":"banchiang"},"content":"import javafx.application.Application;"},{"lineNumber":6,"author":{"gitId":"banchiang"},"content":"import javafx.fxml.FXMLLoader;"},{"lineNumber":7,"author":{"gitId":"banchiang"},"content":"import javafx.scene.Scene;"},{"lineNumber":8,"author":{"gitId":"banchiang"},"content":"import javafx.scene.image.Image;"},{"lineNumber":9,"author":{"gitId":"banchiang"},"content":"import javafx.scene.layout.AnchorPane;"},{"lineNumber":10,"author":{"gitId":"banchiang"},"content":"import javafx.stage.Stage;"},{"lineNumber":11,"author":{"gitId":"banchiang"},"content":""},{"lineNumber":12,"author":{"gitId":"banchiang"},"content":"/**"},{"lineNumber":13,"author":{"gitId":"banchiang"},"content":" * A GUI for Duke using FXML."},{"lineNumber":14,"author":{"gitId":"banchiang"},"content":" */"},{"lineNumber":15,"author":{"gitId":"banchiang"},"content":"public class Main extends Application {"},{"lineNumber":16,"author":{"gitId":"banchiang"},"content":"    private Duke duke \u003d new Duke();"},{"lineNumber":17,"author":{"gitId":"banchiang"},"content":""},{"lineNumber":18,"author":{"gitId":"banchiang"},"content":"    /**"},{"lineNumber":19,"author":{"gitId":"banchiang"},"content":"     * Starts the GUI for Duke."},{"lineNumber":20,"author":{"gitId":"banchiang"},"content":"     *"},{"lineNumber":21,"author":{"gitId":"banchiang"},"content":"     * @param stage Main stage for the GUI to appear."},{"lineNumber":22,"author":{"gitId":"banchiang"},"content":"     */"},{"lineNumber":23,"author":{"gitId":"banchiang"},"content":"    @Override"},{"lineNumber":24,"author":{"gitId":"banchiang"},"content":"    public void start(Stage stage) {"},{"lineNumber":25,"author":{"gitId":"banchiang"},"content":"        try {"},{"lineNumber":26,"author":{"gitId":"banchiang"},"content":""},{"lineNumber":27,"author":{"gitId":"banchiang"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(Main.class.getResource(\"/view/MainWindow.fxml\"));"},{"lineNumber":28,"author":{"gitId":"banchiang"},"content":"            AnchorPane ap \u003d fxmlLoader.load();"},{"lineNumber":29,"author":{"gitId":"banchiang"},"content":"            Scene scene \u003d new Scene(ap);"},{"lineNumber":30,"author":{"gitId":"banchiang"},"content":"            stage.setTitle(\"Duke (banchiang\u0027s version)\");"},{"lineNumber":31,"author":{"gitId":"banchiang"},"content":"            stage.getIcons().add(new Image(\"/images/robot.jpg\"));"},{"lineNumber":32,"author":{"gitId":"banchiang"},"content":"            stage.setScene(scene);"},{"lineNumber":33,"author":{"gitId":"banchiang"},"content":"            stage.setResizable(false);"},{"lineNumber":34,"author":{"gitId":"banchiang"},"content":"            fxmlLoader.\u003cMainWindow\u003egetController().setDuke(duke);"},{"lineNumber":35,"author":{"gitId":"banchiang"},"content":"            stage.show();"},{"lineNumber":36,"author":{"gitId":"banchiang"},"content":"        } catch (IOException e) {"},{"lineNumber":37,"author":{"gitId":"banchiang"},"content":"            e.printStackTrace();"},{"lineNumber":38,"author":{"gitId":"banchiang"},"content":"        }"},{"lineNumber":39,"author":{"gitId":"banchiang"},"content":"    }"},{"lineNumber":40,"author":{"gitId":"banchiang"},"content":"}"}],"authorContributionMap":{"banchiang":40}},{"path":"src/main/java/duke/MainWindow.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"banchiang"},"content":"package duke;"},{"lineNumber":2,"author":{"gitId":"banchiang"},"content":""},{"lineNumber":3,"author":{"gitId":"banchiang"},"content":"import java.util.Timer;"},{"lineNumber":4,"author":{"gitId":"banchiang"},"content":"import java.util.TimerTask;"},{"lineNumber":5,"author":{"gitId":"banchiang"},"content":""},{"lineNumber":6,"author":{"gitId":"banchiang"},"content":"import javafx.application.Platform;"},{"lineNumber":7,"author":{"gitId":"banchiang"},"content":"import javafx.fxml.FXML;"},{"lineNumber":8,"author":{"gitId":"banchiang"},"content":"import javafx.scene.control.Button;"},{"lineNumber":9,"author":{"gitId":"banchiang"},"content":"import javafx.scene.control.ScrollPane;"},{"lineNumber":10,"author":{"gitId":"banchiang"},"content":"import javafx.scene.control.TextField;"},{"lineNumber":11,"author":{"gitId":"banchiang"},"content":"import javafx.scene.image.Image;"},{"lineNumber":12,"author":{"gitId":"banchiang"},"content":"import javafx.scene.layout.AnchorPane;"},{"lineNumber":13,"author":{"gitId":"banchiang"},"content":"import javafx.scene.layout.VBox;"},{"lineNumber":14,"author":{"gitId":"banchiang"},"content":""},{"lineNumber":15,"author":{"gitId":"banchiang"},"content":"/**"},{"lineNumber":16,"author":{"gitId":"banchiang"},"content":" * Controller for MainWindow. Provides the layout for the other controls."},{"lineNumber":17,"author":{"gitId":"banchiang"},"content":" */"},{"lineNumber":18,"author":{"gitId":"banchiang"},"content":"public class MainWindow extends AnchorPane {"},{"lineNumber":19,"author":{"gitId":"banchiang"},"content":"    @FXML"},{"lineNumber":20,"author":{"gitId":"banchiang"},"content":"    private ScrollPane scrollPane;"},{"lineNumber":21,"author":{"gitId":"banchiang"},"content":"    @FXML"},{"lineNumber":22,"author":{"gitId":"banchiang"},"content":"    private VBox dialogContainer;"},{"lineNumber":23,"author":{"gitId":"banchiang"},"content":"    @FXML"},{"lineNumber":24,"author":{"gitId":"banchiang"},"content":"    private TextField userInput;"},{"lineNumber":25,"author":{"gitId":"banchiang"},"content":"    @FXML"},{"lineNumber":26,"author":{"gitId":"banchiang"},"content":"    private Button sendButton;"},{"lineNumber":27,"author":{"gitId":"banchiang"},"content":""},{"lineNumber":28,"author":{"gitId":"banchiang"},"content":"    private Duke duke;"},{"lineNumber":29,"author":{"gitId":"banchiang"},"content":""},{"lineNumber":30,"author":{"gitId":"banchiang"},"content":"    private Image userImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/punpun.jpg\"));"},{"lineNumber":31,"author":{"gitId":"banchiang"},"content":"    private Image dukeImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/robot.jpg\"));"},{"lineNumber":32,"author":{"gitId":"banchiang"},"content":""},{"lineNumber":33,"author":{"gitId":"banchiang"},"content":"    /**"},{"lineNumber":34,"author":{"gitId":"banchiang"},"content":"     * Initialises the main window of the GUI."},{"lineNumber":35,"author":{"gitId":"banchiang"},"content":"     */"},{"lineNumber":36,"author":{"gitId":"banchiang"},"content":"    @FXML"},{"lineNumber":37,"author":{"gitId":"banchiang"},"content":"    public void initialize() {"},{"lineNumber":38,"author":{"gitId":"banchiang"},"content":"        scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());"},{"lineNumber":39,"author":{"gitId":"banchiang"},"content":"        dialogContainer.getChildren().addAll("},{"lineNumber":40,"author":{"gitId":"banchiang"},"content":"                DialogBox.getDukeDialog(Duke.greeting(), dukeImage),"},{"lineNumber":41,"author":{"gitId":"banchiang"},"content":"                DialogBox.getDukeDialog(Duke.help(), dukeImage)"},{"lineNumber":42,"author":{"gitId":"banchiang"},"content":"        );"},{"lineNumber":43,"author":{"gitId":"banchiang"},"content":"    }"},{"lineNumber":44,"author":{"gitId":"banchiang"},"content":""},{"lineNumber":45,"author":{"gitId":"banchiang"},"content":"    public void setDuke(Duke d) {"},{"lineNumber":46,"author":{"gitId":"banchiang"},"content":"        duke \u003d d;"},{"lineNumber":47,"author":{"gitId":"banchiang"},"content":"    }"},{"lineNumber":48,"author":{"gitId":"banchiang"},"content":""},{"lineNumber":49,"author":{"gitId":"banchiang"},"content":"    /**"},{"lineNumber":50,"author":{"gitId":"banchiang"},"content":"     * Creates two dialog boxes, one echoing user input and"},{"lineNumber":51,"author":{"gitId":"banchiang"},"content":"     * the other containing Duke\u0027s reply and then appends them to"},{"lineNumber":52,"author":{"gitId":"banchiang"},"content":"     * the dialog container. Clears the user input after processing."},{"lineNumber":53,"author":{"gitId":"banchiang"},"content":"     */"},{"lineNumber":54,"author":{"gitId":"banchiang"},"content":"    @FXML"},{"lineNumber":55,"author":{"gitId":"banchiang"},"content":"    private void handleUserInput() throws Exception {"},{"lineNumber":56,"author":{"gitId":"banchiang"},"content":"        String input \u003d userInput.getText();"},{"lineNumber":57,"author":{"gitId":"banchiang"},"content":"        String response \u003d duke.getResponse(input);"},{"lineNumber":58,"author":{"gitId":"banchiang"},"content":"        dialogContainer.getChildren().addAll("},{"lineNumber":59,"author":{"gitId":"banchiang"},"content":"                DialogBox.getUserDialog(input, userImage),"},{"lineNumber":60,"author":{"gitId":"banchiang"},"content":"                DialogBox.getDukeDialog(response, dukeImage)"},{"lineNumber":61,"author":{"gitId":"banchiang"},"content":"        );"},{"lineNumber":62,"author":{"gitId":"banchiang"},"content":"        userInput.clear();"},{"lineNumber":63,"author":{"gitId":"banchiang"},"content":"        if (input.equals(\"bye\")) {"},{"lineNumber":64,"author":{"gitId":"banchiang"},"content":"            this.exit();"},{"lineNumber":65,"author":{"gitId":"banchiang"},"content":"        }"},{"lineNumber":66,"author":{"gitId":"banchiang"},"content":"    }"},{"lineNumber":67,"author":{"gitId":"banchiang"},"content":""},{"lineNumber":68,"author":{"gitId":"banchiang"},"content":"    private void exit() {"},{"lineNumber":69,"author":{"gitId":"banchiang"},"content":"        TimerTask timertask \u003d new TimerTask() {"},{"lineNumber":70,"author":{"gitId":"banchiang"},"content":"            public void run() {"},{"lineNumber":71,"author":{"gitId":"banchiang"},"content":"                Platform.exit();"},{"lineNumber":72,"author":{"gitId":"banchiang"},"content":"                System.exit(0);"},{"lineNumber":73,"author":{"gitId":"banchiang"},"content":"            }"},{"lineNumber":74,"author":{"gitId":"banchiang"},"content":"        };"},{"lineNumber":75,"author":{"gitId":"banchiang"},"content":"        Timer timer \u003d new Timer();"},{"lineNumber":76,"author":{"gitId":"banchiang"},"content":"        timer.schedule(timertask, 1000);"},{"lineNumber":77,"author":{"gitId":"banchiang"},"content":"    }"},{"lineNumber":78,"author":{"gitId":"banchiang"},"content":"}"}],"authorContributionMap":{"banchiang":78}},{"path":"src/main/java/duke/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"banchiang"},"content":"package duke;"},{"lineNumber":2,"author":{"gitId":"banchiang"},"content":""},{"lineNumber":3,"author":{"gitId":"banchiang"},"content":"import java.time.LocalDateTime;"},{"lineNumber":4,"author":{"gitId":"banchiang"},"content":"import java.time.format.DateTimeFormatter;"},{"lineNumber":5,"author":{"gitId":"banchiang"},"content":""},{"lineNumber":6,"author":{"gitId":"banchiang"},"content":"/**"},{"lineNumber":7,"author":{"gitId":"banchiang"},"content":" * Class to parse the inputs for Duke."},{"lineNumber":8,"author":{"gitId":"banchiang"},"content":" */"},{"lineNumber":9,"author":{"gitId":"banchiang"},"content":"public class Parser {"},{"lineNumber":10,"author":{"gitId":"banchiang"},"content":""},{"lineNumber":11,"author":{"gitId":"banchiang"},"content":"    /**"},{"lineNumber":12,"author":{"gitId":"banchiang"},"content":"     * Returns LocalDateTime from input string date format."},{"lineNumber":13,"author":{"gitId":"banchiang"},"content":"     *"},{"lineNumber":14,"author":{"gitId":"banchiang"},"content":"     * @param date Input date from user."},{"lineNumber":15,"author":{"gitId":"banchiang"},"content":"     * @return Time specified by user."},{"lineNumber":16,"author":{"gitId":"banchiang"},"content":"     */"},{"lineNumber":17,"author":{"gitId":"banchiang"},"content":"    public static LocalDateTime parseInputDate(String date) {"},{"lineNumber":18,"author":{"gitId":"banchiang"},"content":"        return LocalDateTime.parse(date, DateTimeFormatter.ofPattern(\"yyyy-M-d Hmm\"));"},{"lineNumber":19,"author":{"gitId":"banchiang"},"content":"    }"},{"lineNumber":20,"author":{"gitId":"banchiang"},"content":""},{"lineNumber":21,"author":{"gitId":"banchiang"},"content":"    /**"},{"lineNumber":22,"author":{"gitId":"banchiang"},"content":"     * Returns LocalDateTime from file string date format."},{"lineNumber":23,"author":{"gitId":"banchiang"},"content":"     *"},{"lineNumber":24,"author":{"gitId":"banchiang"},"content":"     * @param date Input date from file"},{"lineNumber":25,"author":{"gitId":"banchiang"},"content":"     * @return Time specified by file."},{"lineNumber":26,"author":{"gitId":"banchiang"},"content":"     */"},{"lineNumber":27,"author":{"gitId":"banchiang"},"content":"    public static LocalDateTime parseFileDate(String date) {"},{"lineNumber":28,"author":{"gitId":"banchiang"},"content":"        return LocalDateTime.parse(date, DateTimeFormatter.ofPattern(\"MMM d yyyy Hmm\"));"},{"lineNumber":29,"author":{"gitId":"banchiang"},"content":"    }"},{"lineNumber":30,"author":{"gitId":"banchiang"},"content":""},{"lineNumber":31,"author":{"gitId":"banchiang"},"content":"    /**"},{"lineNumber":32,"author":{"gitId":"banchiang"},"content":"     * Returns integer by parsing string input."},{"lineNumber":33,"author":{"gitId":"banchiang"},"content":"     *"},{"lineNumber":34,"author":{"gitId":"banchiang"},"content":"     * @param input Input string."},{"lineNumber":35,"author":{"gitId":"banchiang"},"content":"     * @return Integer converted from String input."},{"lineNumber":36,"author":{"gitId":"banchiang"},"content":"     * @throws DukeWrongFormatException When string is not a number."},{"lineNumber":37,"author":{"gitId":"banchiang"},"content":"     */"},{"lineNumber":38,"author":{"gitId":"banchiang"},"content":"    private static Integer parseInt(String input) throws DukeWrongFormatException {"},{"lineNumber":39,"author":{"gitId":"banchiang"},"content":"        try {"},{"lineNumber":40,"author":{"gitId":"banchiang"},"content":"            return Integer.parseInt(input);"},{"lineNumber":41,"author":{"gitId":"banchiang"},"content":"        } catch (Exception e) {"},{"lineNumber":42,"author":{"gitId":"banchiang"},"content":"            throw new DukeWrongFormatException(\"done/delete\");"},{"lineNumber":43,"author":{"gitId":"banchiang"},"content":"        }"},{"lineNumber":44,"author":{"gitId":"banchiang"},"content":"    }"},{"lineNumber":45,"author":{"gitId":"banchiang"},"content":""},{"lineNumber":46,"author":{"gitId":"banchiang"},"content":"    /**"},{"lineNumber":47,"author":{"gitId":"banchiang"},"content":"     * Parses the user input for Duke."},{"lineNumber":48,"author":{"gitId":"banchiang"},"content":"     * Allows duke to identify which command user inputted."},{"lineNumber":49,"author":{"gitId":"banchiang"},"content":"     * Returns the unique command."},{"lineNumber":50,"author":{"gitId":"banchiang"},"content":"     *"},{"lineNumber":51,"author":{"gitId":"banchiang"},"content":"     * @param input User input for the command for Duke."},{"lineNumber":52,"author":{"gitId":"banchiang"},"content":"     * @return Command of a type matching to the input from user."},{"lineNumber":53,"author":{"gitId":"banchiang"},"content":"     * @throws DukeWrongCommandException When command is unknown."},{"lineNumber":54,"author":{"gitId":"banchiang"},"content":"     */"},{"lineNumber":55,"author":{"gitId":"banchiang"},"content":"    public static Command parseInput(String input) throws DukeException {"},{"lineNumber":56,"author":{"gitId":"banchiang"},"content":"        String[] parsedInput \u003d input.split(\" \", 2);"},{"lineNumber":57,"author":{"gitId":"banchiang"},"content":"        String commandStr \u003d parsedInput[0];"},{"lineNumber":58,"author":{"gitId":"banchiang"},"content":"        Command c;"},{"lineNumber":59,"author":{"gitId":"banchiang"},"content":"        switch (commandStr) {"},{"lineNumber":60,"author":{"gitId":"banchiang"},"content":"        case \"bye\":"},{"lineNumber":61,"author":{"gitId":"banchiang"},"content":"            c \u003d new ByeCommand();"},{"lineNumber":62,"author":{"gitId":"banchiang"},"content":"            break;"},{"lineNumber":63,"author":{"gitId":"banchiang"},"content":"        case \"help\":"},{"lineNumber":64,"author":{"gitId":"banchiang"},"content":"            c \u003d new HelpCommand();"},{"lineNumber":65,"author":{"gitId":"banchiang"},"content":"            break;"},{"lineNumber":66,"author":{"gitId":"banchiang"},"content":"        case \"find\":"},{"lineNumber":67,"author":{"gitId":"banchiang"},"content":"            c \u003d new FindCommand(parsedInput[1]);"},{"lineNumber":68,"author":{"gitId":"banchiang"},"content":"            break;"},{"lineNumber":69,"author":{"gitId":"banchiang"},"content":"        case \"list\":"},{"lineNumber":70,"author":{"gitId":"banchiang"},"content":"            c \u003d new ListCommand();"},{"lineNumber":71,"author":{"gitId":"banchiang"},"content":"            break;"},{"lineNumber":72,"author":{"gitId":"banchiang"},"content":"        case \"done\":"},{"lineNumber":73,"author":{"gitId":"banchiang"},"content":"            c \u003d new DoneCommand(Parser.parseInt(parsedInput[1]));"},{"lineNumber":74,"author":{"gitId":"banchiang"},"content":"            break;"},{"lineNumber":75,"author":{"gitId":"banchiang"},"content":"        case \"todo\":"},{"lineNumber":76,"author":{"gitId":"banchiang"},"content":"        case \"deadline\":"},{"lineNumber":77,"author":{"gitId":"banchiang"},"content":"        case \"event\":"},{"lineNumber":78,"author":{"gitId":"banchiang"},"content":"            c \u003d new AddCommand(commandStr, parsedInput[1]);"},{"lineNumber":79,"author":{"gitId":"banchiang"},"content":"            break;"},{"lineNumber":80,"author":{"gitId":"banchiang"},"content":"        case \"delete\":"},{"lineNumber":81,"author":{"gitId":"banchiang"},"content":"            c \u003d new DeleteCommand(Parser.parseInt(parsedInput[1]));"},{"lineNumber":82,"author":{"gitId":"banchiang"},"content":"            break;"},{"lineNumber":83,"author":{"gitId":"banchiang"},"content":"        default:"},{"lineNumber":84,"author":{"gitId":"banchiang"},"content":"            throw new DukeWrongCommandException(commandStr);"},{"lineNumber":85,"author":{"gitId":"banchiang"},"content":"        }"},{"lineNumber":86,"author":{"gitId":"banchiang"},"content":"        assert c !\u003d null : \"Command should not be null!\";"},{"lineNumber":87,"author":{"gitId":"banchiang"},"content":"        return c;"},{"lineNumber":88,"author":{"gitId":"banchiang"},"content":"    }"},{"lineNumber":89,"author":{"gitId":"banchiang"},"content":"}"}],"authorContributionMap":{"banchiang":89}},{"path":"src/main/java/duke/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"banchiang"},"content":"package duke;"},{"lineNumber":2,"author":{"gitId":"banchiang"},"content":""},{"lineNumber":3,"author":{"gitId":"banchiang"},"content":"import java.io.File;"},{"lineNumber":4,"author":{"gitId":"banchiang"},"content":"import java.io.FileWriter;"},{"lineNumber":5,"author":{"gitId":"banchiang"},"content":"import java.time.LocalDateTime;"},{"lineNumber":6,"author":{"gitId":"banchiang"},"content":"import java.util.Scanner;"},{"lineNumber":7,"author":{"gitId":"banchiang"},"content":""},{"lineNumber":8,"author":{"gitId":"banchiang"},"content":"/**"},{"lineNumber":9,"author":{"gitId":"banchiang"},"content":" * Storage class for Duke."},{"lineNumber":10,"author":{"gitId":"banchiang"},"content":" */"},{"lineNumber":11,"author":{"gitId":"banchiang"},"content":"public class Storage {"},{"lineNumber":12,"author":{"gitId":"banchiang"},"content":"    private static final String FILE_NAME \u003d \".data.txt\";"},{"lineNumber":13,"author":{"gitId":"banchiang"},"content":""},{"lineNumber":14,"author":{"gitId":"banchiang"},"content":"    /**"},{"lineNumber":15,"author":{"gitId":"banchiang"},"content":"     * Writes file with tasks on list and saves."},{"lineNumber":16,"author":{"gitId":"banchiang"},"content":"     *"},{"lineNumber":17,"author":{"gitId":"banchiang"},"content":"     * @param tasks string format of all tasks on list."},{"lineNumber":18,"author":{"gitId":"banchiang"},"content":"     */"},{"lineNumber":19,"author":{"gitId":"banchiang"},"content":"    public void save(String tasks) throws DukeException {"},{"lineNumber":20,"author":{"gitId":"banchiang"},"content":"        try {"},{"lineNumber":21,"author":{"gitId":"banchiang"},"content":"            String path \u003d Duke.getPath();"},{"lineNumber":22,"author":{"gitId":"banchiang"},"content":"            FileWriter fw \u003d new FileWriter(path + FILE_NAME);"},{"lineNumber":23,"author":{"gitId":"banchiang"},"content":"            fw.write(tasks);"},{"lineNumber":24,"author":{"gitId":"banchiang"},"content":"            fw.close();"},{"lineNumber":25,"author":{"gitId":"banchiang"},"content":"        } catch (Exception e) {"},{"lineNumber":26,"author":{"gitId":"banchiang"},"content":"            throw new DukeSaveFileException();"},{"lineNumber":27,"author":{"gitId":"banchiang"},"content":"        }"},{"lineNumber":28,"author":{"gitId":"banchiang"},"content":"    }"},{"lineNumber":29,"author":{"gitId":"banchiang"},"content":""},{"lineNumber":30,"author":{"gitId":"banchiang"},"content":"    /**"},{"lineNumber":31,"author":{"gitId":"banchiang"},"content":"     * Loads tasks stored in drive to task list."},{"lineNumber":32,"author":{"gitId":"banchiang"},"content":"     */"},{"lineNumber":33,"author":{"gitId":"banchiang"},"content":"    public TaskList load() {"},{"lineNumber":34,"author":{"gitId":"banchiang"},"content":"        try {"},{"lineNumber":35,"author":{"gitId":"banchiang"},"content":"            TaskList tl \u003d new TaskList();"},{"lineNumber":36,"author":{"gitId":"banchiang"},"content":"            String path \u003d Duke.getPath();"},{"lineNumber":37,"author":{"gitId":"banchiang"},"content":"            File f \u003d new File(path + FILE_NAME);"},{"lineNumber":38,"author":{"gitId":"banchiang"},"content":"            f.createNewFile();"},{"lineNumber":39,"author":{"gitId":"banchiang"},"content":"            Scanner sc \u003d new Scanner(f);"},{"lineNumber":40,"author":{"gitId":"banchiang"},"content":"            while (sc.hasNext()) {"},{"lineNumber":41,"author":{"gitId":"banchiang"},"content":"                String taskInfo \u003d sc.nextLine();"},{"lineNumber":42,"author":{"gitId":"banchiang"},"content":"                Task t \u003d loadTask(taskInfo);"},{"lineNumber":43,"author":{"gitId":"banchiang"},"content":"                tl.add(t);"},{"lineNumber":44,"author":{"gitId":"banchiang"},"content":"            }"},{"lineNumber":45,"author":{"gitId":"banchiang"},"content":"            return tl;"},{"lineNumber":46,"author":{"gitId":"banchiang"},"content":"        } catch (Exception e) {"},{"lineNumber":47,"author":{"gitId":"banchiang"},"content":"            return new TaskList();"},{"lineNumber":48,"author":{"gitId":"banchiang"},"content":"        }"},{"lineNumber":49,"author":{"gitId":"banchiang"},"content":"    }"},{"lineNumber":50,"author":{"gitId":"banchiang"},"content":""},{"lineNumber":51,"author":{"gitId":"banchiang"},"content":"    private Task loadTask(String taskInfo) throws DukeWrongFormatException {"},{"lineNumber":52,"author":{"gitId":"banchiang"},"content":""},{"lineNumber":53,"author":{"gitId":"banchiang"},"content":"        /* Split task info into 3 - 4 parts (array)"},{"lineNumber":54,"author":{"gitId":"banchiang"},"content":"        *  first part is task type"},{"lineNumber":55,"author":{"gitId":"banchiang"},"content":"        *  second part is if task is finished"},{"lineNumber":56,"author":{"gitId":"banchiang"},"content":"        *  third part is task name"},{"lineNumber":57,"author":{"gitId":"banchiang"},"content":"        *  fourth part (if applicable) is time */"},{"lineNumber":58,"author":{"gitId":"banchiang"},"content":"        String[] taskArray \u003d taskInfo.split(\" \\\\| \");"},{"lineNumber":59,"author":{"gitId":"banchiang"},"content":"        String taskName \u003d taskArray[2];"},{"lineNumber":60,"author":{"gitId":"banchiang"},"content":"        Task t \u003d null;"},{"lineNumber":61,"author":{"gitId":"banchiang"},"content":"        switch (taskArray[0]) {"},{"lineNumber":62,"author":{"gitId":"banchiang"},"content":"        case \"T\":"},{"lineNumber":63,"author":{"gitId":"banchiang"},"content":"            t \u003d new ToDo(taskName);"},{"lineNumber":64,"author":{"gitId":"banchiang"},"content":"            break;"},{"lineNumber":65,"author":{"gitId":"banchiang"},"content":"        case \"E\":"},{"lineNumber":66,"author":{"gitId":"banchiang"},"content":"            String[] timeArray \u003d taskArray[3].split(\"-\");"},{"lineNumber":67,"author":{"gitId":"banchiang"},"content":"            LocalDateTime ldtStart \u003d Parser.parseFileDate(timeArray[0]);"},{"lineNumber":68,"author":{"gitId":"banchiang"},"content":"            LocalDateTime ldtEnd \u003d Parser.parseFileDate(timeArray[1]);"},{"lineNumber":69,"author":{"gitId":"banchiang"},"content":"            t \u003d new Event(taskName, ldtStart, ldtEnd);"},{"lineNumber":70,"author":{"gitId":"banchiang"},"content":"            break;"},{"lineNumber":71,"author":{"gitId":"banchiang"},"content":"        case \"D\":"},{"lineNumber":72,"author":{"gitId":"banchiang"},"content":"            LocalDateTime deadline \u003d Parser.parseFileDate(taskArray[3]);"},{"lineNumber":73,"author":{"gitId":"banchiang"},"content":"            t \u003d new Deadline(taskName, deadline);"},{"lineNumber":74,"author":{"gitId":"banchiang"},"content":"            break;"},{"lineNumber":75,"author":{"gitId":"banchiang"},"content":"        default:"},{"lineNumber":76,"author":{"gitId":"banchiang"},"content":"            throw new DukeWrongFormatException(\"loaded file\");"},{"lineNumber":77,"author":{"gitId":"banchiang"},"content":"        }"},{"lineNumber":78,"author":{"gitId":"banchiang"},"content":"        assert t !\u003d null : \"Task should not be null!\";"},{"lineNumber":79,"author":{"gitId":"banchiang"},"content":"        if (taskArray[1].equals(\"X\")) {"},{"lineNumber":80,"author":{"gitId":"banchiang"},"content":"            t.finishTask();"},{"lineNumber":81,"author":{"gitId":"banchiang"},"content":"        }"},{"lineNumber":82,"author":{"gitId":"banchiang"},"content":"        return t;"},{"lineNumber":83,"author":{"gitId":"banchiang"},"content":"    }"},{"lineNumber":84,"author":{"gitId":"banchiang"},"content":"}"}],"authorContributionMap":{"banchiang":84}},{"path":"src/main/java/duke/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"banchiang"},"content":"package duke;"},{"lineNumber":2,"author":{"gitId":"banchiang"},"content":""},{"lineNumber":3,"author":{"gitId":"banchiang"},"content":"import java.time.LocalDateTime;"},{"lineNumber":4,"author":{"gitId":"banchiang"},"content":"import java.time.format.DateTimeFormatter;"},{"lineNumber":5,"author":{"gitId":"banchiang"},"content":""},{"lineNumber":6,"author":{"gitId":"banchiang"},"content":"/**"},{"lineNumber":7,"author":{"gitId":"banchiang"},"content":" * Tasks to be recorded down for Duke."},{"lineNumber":8,"author":{"gitId":"banchiang"},"content":" */"},{"lineNumber":9,"author":{"gitId":"banchiang"},"content":"public abstract class Task {"},{"lineNumber":10,"author":{"gitId":"banchiang"},"content":"    protected String description;"},{"lineNumber":11,"author":{"gitId":"banchiang"},"content":"    protected boolean isDone;"},{"lineNumber":12,"author":{"gitId":"banchiang"},"content":""},{"lineNumber":13,"author":{"gitId":"banchiang"},"content":"    /**"},{"lineNumber":14,"author":{"gitId":"banchiang"},"content":"     * Constructs new task object."},{"lineNumber":15,"author":{"gitId":"banchiang"},"content":"     *"},{"lineNumber":16,"author":{"gitId":"banchiang"},"content":"     * @param description Name of task."},{"lineNumber":17,"author":{"gitId":"banchiang"},"content":"     */"},{"lineNumber":18,"author":{"gitId":"banchiang"},"content":"    public Task(String description) {"},{"lineNumber":19,"author":{"gitId":"banchiang"},"content":"        this.description \u003d description;"},{"lineNumber":20,"author":{"gitId":"banchiang"},"content":"        this.isDone \u003d false;"},{"lineNumber":21,"author":{"gitId":"banchiang"},"content":"    }"},{"lineNumber":22,"author":{"gitId":"banchiang"},"content":""},{"lineNumber":23,"author":{"gitId":"banchiang"},"content":"    /**"},{"lineNumber":24,"author":{"gitId":"banchiang"},"content":"     * Returns string logo for task\u0027s completion."},{"lineNumber":25,"author":{"gitId":"banchiang"},"content":"     * \u0027X\u0027 is done. \u0027 \u0027 is not done."},{"lineNumber":26,"author":{"gitId":"banchiang"},"content":"     *"},{"lineNumber":27,"author":{"gitId":"banchiang"},"content":"     * @return string logo."},{"lineNumber":28,"author":{"gitId":"banchiang"},"content":"     */"},{"lineNumber":29,"author":{"gitId":"banchiang"},"content":"    public String getStatusIcon() {"},{"lineNumber":30,"author":{"gitId":"banchiang"},"content":"        return (isDone ? \"X\" : \" \");"},{"lineNumber":31,"author":{"gitId":"banchiang"},"content":"    }"},{"lineNumber":32,"author":{"gitId":"banchiang"},"content":""},{"lineNumber":33,"author":{"gitId":"banchiang"},"content":"    /**"},{"lineNumber":34,"author":{"gitId":"banchiang"},"content":"     * Returns string for task date and timing."},{"lineNumber":35,"author":{"gitId":"banchiang"},"content":"     *"},{"lineNumber":36,"author":{"gitId":"banchiang"},"content":"     * @param dateTime date and timing of task."},{"lineNumber":37,"author":{"gitId":"banchiang"},"content":"     * @return String for task date and timing."},{"lineNumber":38,"author":{"gitId":"banchiang"},"content":"     */"},{"lineNumber":39,"author":{"gitId":"banchiang"},"content":"    public String formatTime(LocalDateTime dateTime) {"},{"lineNumber":40,"author":{"gitId":"banchiang"},"content":"        return dateTime.format(DateTimeFormatter.ofPattern(\"MMM d yyyy HHmm\"));"},{"lineNumber":41,"author":{"gitId":"banchiang"},"content":"    }"},{"lineNumber":42,"author":{"gitId":"banchiang"},"content":""},{"lineNumber":43,"author":{"gitId":"banchiang"},"content":"    /**"},{"lineNumber":44,"author":{"gitId":"banchiang"},"content":"     * Returns task name."},{"lineNumber":45,"author":{"gitId":"banchiang"},"content":"     *"},{"lineNumber":46,"author":{"gitId":"banchiang"},"content":"     * @return String for task name."},{"lineNumber":47,"author":{"gitId":"banchiang"},"content":"     */"},{"lineNumber":48,"author":{"gitId":"banchiang"},"content":"    public String getName() {"},{"lineNumber":49,"author":{"gitId":"banchiang"},"content":"        return description;"},{"lineNumber":50,"author":{"gitId":"banchiang"},"content":"    }"},{"lineNumber":51,"author":{"gitId":"banchiang"},"content":""},{"lineNumber":52,"author":{"gitId":"banchiang"},"content":"    /**"},{"lineNumber":53,"author":{"gitId":"banchiang"},"content":"     * Finishes the task."},{"lineNumber":54,"author":{"gitId":"banchiang"},"content":"     */"},{"lineNumber":55,"author":{"gitId":"banchiang"},"content":"    public void finishTask() {"},{"lineNumber":56,"author":{"gitId":"banchiang"},"content":"        isDone \u003d true;"},{"lineNumber":57,"author":{"gitId":"banchiang"},"content":"    }"},{"lineNumber":58,"author":{"gitId":"banchiang"},"content":""},{"lineNumber":59,"author":{"gitId":"banchiang"},"content":"    public abstract String saveTask();"},{"lineNumber":60,"author":{"gitId":"banchiang"},"content":""},{"lineNumber":61,"author":{"gitId":"banchiang"},"content":"    /**"},{"lineNumber":62,"author":{"gitId":"banchiang"},"content":"     * Returns string for task."},{"lineNumber":63,"author":{"gitId":"banchiang"},"content":"     *"},{"lineNumber":64,"author":{"gitId":"banchiang"},"content":"     * String contains type and name of task."},{"lineNumber":65,"author":{"gitId":"banchiang"},"content":"     * @return String message for task information."},{"lineNumber":66,"author":{"gitId":"banchiang"},"content":"     */"},{"lineNumber":67,"author":{"gitId":"banchiang"},"content":"    @Override"},{"lineNumber":68,"author":{"gitId":"banchiang"},"content":"    public String toString() {"},{"lineNumber":69,"author":{"gitId":"banchiang"},"content":"        return String.format(\"[%s] %s\", this.getStatusIcon(), this.description);"},{"lineNumber":70,"author":{"gitId":"banchiang"},"content":"    }"},{"lineNumber":71,"author":{"gitId":"banchiang"},"content":"}"}],"authorContributionMap":{"banchiang":71}},{"path":"src/main/java/duke/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"banchiang"},"content":"package duke;"},{"lineNumber":2,"author":{"gitId":"banchiang"},"content":""},{"lineNumber":3,"author":{"gitId":"banchiang"},"content":"import java.util.ArrayList;"},{"lineNumber":4,"author":{"gitId":"banchiang"},"content":"import java.util.Collection;"},{"lineNumber":5,"author":{"gitId":"banchiang"},"content":""},{"lineNumber":6,"author":{"gitId":"banchiang"},"content":"/**"},{"lineNumber":7,"author":{"gitId":"banchiang"},"content":" * Class to store Tasks in a list."},{"lineNumber":8,"author":{"gitId":"banchiang"},"content":" */"},{"lineNumber":9,"author":{"gitId":"banchiang"},"content":"public class TaskList {"},{"lineNumber":10,"author":{"gitId":"banchiang"},"content":"    private ArrayList\u003cTask\u003e taskList;"},{"lineNumber":11,"author":{"gitId":"banchiang"},"content":""},{"lineNumber":12,"author":{"gitId":"banchiang"},"content":"    /**"},{"lineNumber":13,"author":{"gitId":"banchiang"},"content":"     * Constructs new task list."},{"lineNumber":14,"author":{"gitId":"banchiang"},"content":"     */"},{"lineNumber":15,"author":{"gitId":"banchiang"},"content":"    public TaskList() {"},{"lineNumber":16,"author":{"gitId":"banchiang"},"content":"        this.taskList \u003d new ArrayList\u003c\u003e();"},{"lineNumber":17,"author":{"gitId":"banchiang"},"content":"    }"},{"lineNumber":18,"author":{"gitId":"banchiang"},"content":""},{"lineNumber":19,"author":{"gitId":"banchiang"},"content":"    /**"},{"lineNumber":20,"author":{"gitId":"banchiang"},"content":"     * Constructs new task list with existing list."},{"lineNumber":21,"author":{"gitId":"banchiang"},"content":"     *"},{"lineNumber":22,"author":{"gitId":"banchiang"},"content":"     * @param tasks Collection of tasks."},{"lineNumber":23,"author":{"gitId":"banchiang"},"content":"     */"},{"lineNumber":24,"author":{"gitId":"banchiang"},"content":"    public TaskList(Collection\u003cTask\u003e tasks) {"},{"lineNumber":25,"author":{"gitId":"banchiang"},"content":"        this.taskList \u003d new ArrayList\u003c\u003e(tasks);"},{"lineNumber":26,"author":{"gitId":"banchiang"},"content":"    }"},{"lineNumber":27,"author":{"gitId":"banchiang"},"content":""},{"lineNumber":28,"author":{"gitId":"banchiang"},"content":"    /**"},{"lineNumber":29,"author":{"gitId":"banchiang"},"content":"     * Adds task into task list."},{"lineNumber":30,"author":{"gitId":"banchiang"},"content":"     *"},{"lineNumber":31,"author":{"gitId":"banchiang"},"content":"     * @param t task to be added into list."},{"lineNumber":32,"author":{"gitId":"banchiang"},"content":"     */"},{"lineNumber":33,"author":{"gitId":"banchiang"},"content":"    public void add(Task t) {"},{"lineNumber":34,"author":{"gitId":"banchiang"},"content":"        taskList.add(t);"},{"lineNumber":35,"author":{"gitId":"banchiang"},"content":"    }"},{"lineNumber":36,"author":{"gitId":"banchiang"},"content":""},{"lineNumber":37,"author":{"gitId":"banchiang"},"content":"    /**"},{"lineNumber":38,"author":{"gitId":"banchiang"},"content":"     * Removes a task from the list."},{"lineNumber":39,"author":{"gitId":"banchiang"},"content":"     *"},{"lineNumber":40,"author":{"gitId":"banchiang"},"content":"     * @param num index of task to be removed."},{"lineNumber":41,"author":{"gitId":"banchiang"},"content":"     * @return removed task."},{"lineNumber":42,"author":{"gitId":"banchiang"},"content":"     */"},{"lineNumber":43,"author":{"gitId":"banchiang"},"content":"    public Task remove(int num) throws DukeNumOutOfRangeException {"},{"lineNumber":44,"author":{"gitId":"banchiang"},"content":"        try {"},{"lineNumber":45,"author":{"gitId":"banchiang"},"content":"            return taskList.remove(num);"},{"lineNumber":46,"author":{"gitId":"banchiang"},"content":"        } catch (Exception e) {"},{"lineNumber":47,"author":{"gitId":"banchiang"},"content":"            throw new DukeNumOutOfRangeException();"},{"lineNumber":48,"author":{"gitId":"banchiang"},"content":"        }"},{"lineNumber":49,"author":{"gitId":"banchiang"},"content":"    }"},{"lineNumber":50,"author":{"gitId":"banchiang"},"content":""},{"lineNumber":51,"author":{"gitId":"banchiang"},"content":"    /**"},{"lineNumber":52,"author":{"gitId":"banchiang"},"content":"     * Returns task from the list."},{"lineNumber":53,"author":{"gitId":"banchiang"},"content":"     *"},{"lineNumber":54,"author":{"gitId":"banchiang"},"content":"     * @param num index of task."},{"lineNumber":55,"author":{"gitId":"banchiang"},"content":"     * @return task of certain index."},{"lineNumber":56,"author":{"gitId":"banchiang"},"content":"     */"},{"lineNumber":57,"author":{"gitId":"banchiang"},"content":"    public Task get(int num) throws DukeNumOutOfRangeException {"},{"lineNumber":58,"author":{"gitId":"banchiang"},"content":"        try {"},{"lineNumber":59,"author":{"gitId":"banchiang"},"content":"            return taskList.get(num);"},{"lineNumber":60,"author":{"gitId":"banchiang"},"content":"        } catch (Exception e) {"},{"lineNumber":61,"author":{"gitId":"banchiang"},"content":"            throw new DukeNumOutOfRangeException();"},{"lineNumber":62,"author":{"gitId":"banchiang"},"content":"        }"},{"lineNumber":63,"author":{"gitId":"banchiang"},"content":""},{"lineNumber":64,"author":{"gitId":"banchiang"},"content":"    }"},{"lineNumber":65,"author":{"gitId":"banchiang"},"content":""},{"lineNumber":66,"author":{"gitId":"banchiang"},"content":"    /**"},{"lineNumber":67,"author":{"gitId":"banchiang"},"content":"     * Replaces task of certain index."},{"lineNumber":68,"author":{"gitId":"banchiang"},"content":"     *"},{"lineNumber":69,"author":{"gitId":"banchiang"},"content":"     * @param taskNum index of task replaced."},{"lineNumber":70,"author":{"gitId":"banchiang"},"content":"     * @param t task that is replacing."},{"lineNumber":71,"author":{"gitId":"banchiang"},"content":"     */"},{"lineNumber":72,"author":{"gitId":"banchiang"},"content":"    public void set(int taskNum, Task t) throws DukeNumOutOfRangeException {"},{"lineNumber":73,"author":{"gitId":"banchiang"},"content":"        try {"},{"lineNumber":74,"author":{"gitId":"banchiang"},"content":"            taskList.set(taskNum, t);"},{"lineNumber":75,"author":{"gitId":"banchiang"},"content":"        } catch (Exception e) {"},{"lineNumber":76,"author":{"gitId":"banchiang"},"content":"            throw new DukeNumOutOfRangeException();"},{"lineNumber":77,"author":{"gitId":"banchiang"},"content":"        }"},{"lineNumber":78,"author":{"gitId":"banchiang"},"content":"    }"},{"lineNumber":79,"author":{"gitId":"banchiang"},"content":""},{"lineNumber":80,"author":{"gitId":"banchiang"},"content":"    /**"},{"lineNumber":81,"author":{"gitId":"banchiang"},"content":"     * Returns task list in ArrayList"},{"lineNumber":82,"author":{"gitId":"banchiang"},"content":"     *"},{"lineNumber":83,"author":{"gitId":"banchiang"},"content":"     * @return ArrayList of tasks."},{"lineNumber":84,"author":{"gitId":"banchiang"},"content":"     */"},{"lineNumber":85,"author":{"gitId":"banchiang"},"content":"    public ArrayList\u003cTask\u003e getList() {"},{"lineNumber":86,"author":{"gitId":"banchiang"},"content":"        return new ArrayList\u003cTask\u003e(taskList);"},{"lineNumber":87,"author":{"gitId":"banchiang"},"content":"    }"},{"lineNumber":88,"author":{"gitId":"banchiang"},"content":""},{"lineNumber":89,"author":{"gitId":"banchiang"},"content":"    /**"},{"lineNumber":90,"author":{"gitId":"banchiang"},"content":"     * Returns size of task list."},{"lineNumber":91,"author":{"gitId":"banchiang"},"content":"     *"},{"lineNumber":92,"author":{"gitId":"banchiang"},"content":"     * @return Integer size of task list."},{"lineNumber":93,"author":{"gitId":"banchiang"},"content":"     */"},{"lineNumber":94,"author":{"gitId":"banchiang"},"content":"    public int getSize() {"},{"lineNumber":95,"author":{"gitId":"banchiang"},"content":"        return taskList.size();"},{"lineNumber":96,"author":{"gitId":"banchiang"},"content":"    }"},{"lineNumber":97,"author":{"gitId":"banchiang"},"content":""},{"lineNumber":98,"author":{"gitId":"banchiang"},"content":"    /**"},{"lineNumber":99,"author":{"gitId":"banchiang"},"content":"     * Returns string format of all task in list."},{"lineNumber":100,"author":{"gitId":"banchiang"},"content":"     *"},{"lineNumber":101,"author":{"gitId":"banchiang"},"content":"     * @return concatenated string of tasks in list."},{"lineNumber":102,"author":{"gitId":"banchiang"},"content":"     */"},{"lineNumber":103,"author":{"gitId":"banchiang"},"content":"    @Override"},{"lineNumber":104,"author":{"gitId":"banchiang"},"content":"    public String toString() {"},{"lineNumber":105,"author":{"gitId":"banchiang"},"content":"        StringBuilder sb \u003d new StringBuilder(\"\");"},{"lineNumber":106,"author":{"gitId":"banchiang"},"content":"        for (Task t : taskList) {"},{"lineNumber":107,"author":{"gitId":"banchiang"},"content":"            sb.append(t.saveTask());"},{"lineNumber":108,"author":{"gitId":"banchiang"},"content":"        }"},{"lineNumber":109,"author":{"gitId":"banchiang"},"content":"        return sb.toString();"},{"lineNumber":110,"author":{"gitId":"banchiang"},"content":"    }"},{"lineNumber":111,"author":{"gitId":"banchiang"},"content":"}"}],"authorContributionMap":{"banchiang":111}},{"path":"src/main/java/duke/ToDo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"banchiang"},"content":"package duke;"},{"lineNumber":2,"author":{"gitId":"banchiang"},"content":""},{"lineNumber":3,"author":{"gitId":"banchiang"},"content":"/**"},{"lineNumber":4,"author":{"gitId":"banchiang"},"content":" * A subtype of task, to-do."},{"lineNumber":5,"author":{"gitId":"banchiang"},"content":" */"},{"lineNumber":6,"author":{"gitId":"banchiang"},"content":"public class ToDo extends Task {"},{"lineNumber":7,"author":{"gitId":"banchiang"},"content":"    /**"},{"lineNumber":8,"author":{"gitId":"banchiang"},"content":"     * Constructs new to-do task."},{"lineNumber":9,"author":{"gitId":"banchiang"},"content":"     * @param description Name of task."},{"lineNumber":10,"author":{"gitId":"banchiang"},"content":"     */"},{"lineNumber":11,"author":{"gitId":"banchiang"},"content":"    public ToDo(String description) {"},{"lineNumber":12,"author":{"gitId":"banchiang"},"content":"        super(description);"},{"lineNumber":13,"author":{"gitId":"banchiang"},"content":"    }"},{"lineNumber":14,"author":{"gitId":"banchiang"},"content":""},{"lineNumber":15,"author":{"gitId":"banchiang"},"content":"    /**"},{"lineNumber":16,"author":{"gitId":"banchiang"},"content":"     * Creates a to-do task and returns it."},{"lineNumber":17,"author":{"gitId":"banchiang"},"content":"     *"},{"lineNumber":18,"author":{"gitId":"banchiang"},"content":"     * @param taskInfo information of to-do task."},{"lineNumber":19,"author":{"gitId":"banchiang"},"content":"     * @return new to-do task."},{"lineNumber":20,"author":{"gitId":"banchiang"},"content":"     * @throws DukeMissingDescriptionException if task info is empty."},{"lineNumber":21,"author":{"gitId":"banchiang"},"content":"     */"},{"lineNumber":22,"author":{"gitId":"banchiang"},"content":"    public static ToDo create(String taskInfo) throws DukeMissingDescriptionException {"},{"lineNumber":23,"author":{"gitId":"banchiang"},"content":"        if (taskInfo.equals(\" \") || taskInfo.equals(\"\")) {"},{"lineNumber":24,"author":{"gitId":"banchiang"},"content":"            throw new DukeMissingDescriptionException(\"todo\");"},{"lineNumber":25,"author":{"gitId":"banchiang"},"content":"        } else {"},{"lineNumber":26,"author":{"gitId":"banchiang"},"content":"            return new ToDo(taskInfo);"},{"lineNumber":27,"author":{"gitId":"banchiang"},"content":"        }"},{"lineNumber":28,"author":{"gitId":"banchiang"},"content":"    }"},{"lineNumber":29,"author":{"gitId":"banchiang"},"content":""},{"lineNumber":30,"author":{"gitId":"banchiang"},"content":"    /**"},{"lineNumber":31,"author":{"gitId":"banchiang"},"content":"     * Returns string of to-do task name and info."},{"lineNumber":32,"author":{"gitId":"banchiang"},"content":"     * Format is for saving task into text file."},{"lineNumber":33,"author":{"gitId":"banchiang"},"content":"     *"},{"lineNumber":34,"author":{"gitId":"banchiang"},"content":"     * @return string format of to-do info."},{"lineNumber":35,"author":{"gitId":"banchiang"},"content":"     */"},{"lineNumber":36,"author":{"gitId":"banchiang"},"content":"    @Override"},{"lineNumber":37,"author":{"gitId":"banchiang"},"content":"    public String saveTask() {"},{"lineNumber":38,"author":{"gitId":"banchiang"},"content":"        return String.format(\"T | %s | %s\\n\","},{"lineNumber":39,"author":{"gitId":"banchiang"},"content":"                super.getStatusIcon(), description);"},{"lineNumber":40,"author":{"gitId":"banchiang"},"content":"    }"},{"lineNumber":41,"author":{"gitId":"banchiang"},"content":""},{"lineNumber":42,"author":{"gitId":"banchiang"},"content":"    /**"},{"lineNumber":43,"author":{"gitId":"banchiang"},"content":"     * Returns string of event task name and info."},{"lineNumber":44,"author":{"gitId":"banchiang"},"content":"     * Format is for the display on the list."},{"lineNumber":45,"author":{"gitId":"banchiang"},"content":"     *"},{"lineNumber":46,"author":{"gitId":"banchiang"},"content":"     * @return string format of task\u0027s info."},{"lineNumber":47,"author":{"gitId":"banchiang"},"content":"     */"},{"lineNumber":48,"author":{"gitId":"banchiang"},"content":"    @Override"},{"lineNumber":49,"author":{"gitId":"banchiang"},"content":"    public String toString() {"},{"lineNumber":50,"author":{"gitId":"banchiang"},"content":"        return \"[T]\" + super.toString();"},{"lineNumber":51,"author":{"gitId":"banchiang"},"content":"    }"},{"lineNumber":52,"author":{"gitId":"banchiang"},"content":"}"}],"authorContributionMap":{"banchiang":52}},{"path":"src/main/java/duke/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"banchiang"},"content":"package duke;"},{"lineNumber":2,"author":{"gitId":"banchiang"},"content":""},{"lineNumber":3,"author":{"gitId":"banchiang"},"content":"import java.util.Scanner;"},{"lineNumber":4,"author":{"gitId":"banchiang"},"content":""},{"lineNumber":5,"author":{"gitId":"banchiang"},"content":"/**"},{"lineNumber":6,"author":{"gitId":"banchiang"},"content":" * Response from Duke are stored here (output for Duke)."},{"lineNumber":7,"author":{"gitId":"banchiang"},"content":" */"},{"lineNumber":8,"author":{"gitId":"banchiang"},"content":"public class Ui {"},{"lineNumber":9,"author":{"gitId":"banchiang"},"content":"    private static final String HELP \u003d \"These are the formats for Duke commands:\\n\""},{"lineNumber":10,"author":{"gitId":"banchiang"},"content":"            + \"- help\\n\""},{"lineNumber":11,"author":{"gitId":"banchiang"},"content":"            + \"- bye\\n\""},{"lineNumber":12,"author":{"gitId":"banchiang"},"content":"            + \"- list\\n\""},{"lineNumber":13,"author":{"gitId":"banchiang"},"content":"            + \"- todo (taskName)\\n\""},{"lineNumber":14,"author":{"gitId":"banchiang"},"content":"            + \"- deadline (taskName) /by (YYYY-M-D TIME)\\n\""},{"lineNumber":15,"author":{"gitId":"banchiang"},"content":"            + \"- event (taskName) /at (YYYY-M-D TIME-TIME)\\n\""},{"lineNumber":16,"author":{"gitId":"banchiang"},"content":"            + \"- find (relevantName)\\n\""},{"lineNumber":17,"author":{"gitId":"banchiang"},"content":"            + \"- delete (taskNumber from list)\\n\""},{"lineNumber":18,"author":{"gitId":"banchiang"},"content":"            + \"- done (taskNumber from list)\\n\";"},{"lineNumber":19,"author":{"gitId":"banchiang"},"content":"    private static final String ADD_MSG \u003d \"Got it. I\u0027ve added this task:\\n\";"},{"lineNumber":20,"author":{"gitId":"banchiang"},"content":"    private static final String DELETE_MSG \u003d \"Noted. I\u0027ve removed this task:\\n\";"},{"lineNumber":21,"author":{"gitId":"banchiang"},"content":"    private static final String DONE_MSG \u003d \"Nice! I\u0027ve marked this task as done:\\n\";"},{"lineNumber":22,"author":{"gitId":"banchiang"},"content":"    private Scanner sc;"},{"lineNumber":23,"author":{"gitId":"banchiang"},"content":""},{"lineNumber":24,"author":{"gitId":"banchiang"},"content":"    /**"},{"lineNumber":25,"author":{"gitId":"banchiang"},"content":"     * Constructs new Ui object."},{"lineNumber":26,"author":{"gitId":"banchiang"},"content":"     */"},{"lineNumber":27,"author":{"gitId":"banchiang"},"content":"    public Ui() {"},{"lineNumber":28,"author":{"gitId":"banchiang"},"content":"        sc \u003d new Scanner(System.in);"},{"lineNumber":29,"author":{"gitId":"banchiang"},"content":"    }"},{"lineNumber":30,"author":{"gitId":"banchiang"},"content":""},{"lineNumber":31,"author":{"gitId":"banchiang"},"content":"    /**"},{"lineNumber":32,"author":{"gitId":"banchiang"},"content":"     * Returns greeting message to be printed."},{"lineNumber":33,"author":{"gitId":"banchiang"},"content":"     *"},{"lineNumber":34,"author":{"gitId":"banchiang"},"content":"     * @return String format of greeting."},{"lineNumber":35,"author":{"gitId":"banchiang"},"content":"     */"},{"lineNumber":36,"author":{"gitId":"banchiang"},"content":"    public String printGreeting() {"},{"lineNumber":37,"author":{"gitId":"banchiang"},"content":"        String greeting \u003d \"Hello! I\u0027m Duke\\n\" + \"What can I do for you?\\n\";"},{"lineNumber":38,"author":{"gitId":"banchiang"},"content":"        return greeting;"},{"lineNumber":39,"author":{"gitId":"banchiang"},"content":"    }"},{"lineNumber":40,"author":{"gitId":"banchiang"},"content":""},{"lineNumber":41,"author":{"gitId":"banchiang"},"content":"    /**"},{"lineNumber":42,"author":{"gitId":"banchiang"},"content":"     * Returns help message to be printed."},{"lineNumber":43,"author":{"gitId":"banchiang"},"content":"     *"},{"lineNumber":44,"author":{"gitId":"banchiang"},"content":"     * @return String message of help."},{"lineNumber":45,"author":{"gitId":"banchiang"},"content":"     */"},{"lineNumber":46,"author":{"gitId":"banchiang"},"content":"    public String printHelp() {"},{"lineNumber":47,"author":{"gitId":"banchiang"},"content":"        return HELP;"},{"lineNumber":48,"author":{"gitId":"banchiang"},"content":"    }"},{"lineNumber":49,"author":{"gitId":"banchiang"},"content":""},{"lineNumber":50,"author":{"gitId":"banchiang"},"content":"    /**"},{"lineNumber":51,"author":{"gitId":"banchiang"},"content":"     * Returns string of bye message."},{"lineNumber":52,"author":{"gitId":"banchiang"},"content":"     *"},{"lineNumber":53,"author":{"gitId":"banchiang"},"content":"     * @return String format of bye message."},{"lineNumber":54,"author":{"gitId":"banchiang"},"content":"     */"},{"lineNumber":55,"author":{"gitId":"banchiang"},"content":"    public String printBye() {"},{"lineNumber":56,"author":{"gitId":"banchiang"},"content":"        String byeMessage \u003d \"Bye. Hope to see you again soon!\\n\";"},{"lineNumber":57,"author":{"gitId":"banchiang"},"content":"        return byeMessage;"},{"lineNumber":58,"author":{"gitId":"banchiang"},"content":"    }"},{"lineNumber":59,"author":{"gitId":"banchiang"},"content":""},{"lineNumber":60,"author":{"gitId":"banchiang"},"content":"    /**"},{"lineNumber":61,"author":{"gitId":"banchiang"},"content":"     * Returns String format of error."},{"lineNumber":62,"author":{"gitId":"banchiang"},"content":"     *"},{"lineNumber":63,"author":{"gitId":"banchiang"},"content":"     * @param error String format of error."},{"lineNumber":64,"author":{"gitId":"banchiang"},"content":"     * @return String format of error."},{"lineNumber":65,"author":{"gitId":"banchiang"},"content":"     */"},{"lineNumber":66,"author":{"gitId":"banchiang"},"content":"    public String printError(String error) {"},{"lineNumber":67,"author":{"gitId":"banchiang"},"content":"        return error;"},{"lineNumber":68,"author":{"gitId":"banchiang"},"content":"    }"},{"lineNumber":69,"author":{"gitId":"banchiang"},"content":""},{"lineNumber":70,"author":{"gitId":"banchiang"},"content":"    /**"},{"lineNumber":71,"author":{"gitId":"banchiang"},"content":"     * Returns string message for commands for task."},{"lineNumber":72,"author":{"gitId":"banchiang"},"content":"     *"},{"lineNumber":73,"author":{"gitId":"banchiang"},"content":"     * @param t Given task."},{"lineNumber":74,"author":{"gitId":"banchiang"},"content":"     * @param tl Task list containing the task."},{"lineNumber":75,"author":{"gitId":"banchiang"},"content":"     * @param command Type of command for task."},{"lineNumber":76,"author":{"gitId":"banchiang"},"content":"     * @return String message for action on task."},{"lineNumber":77,"author":{"gitId":"banchiang"},"content":"     * @throws DukeException When command is unknown."},{"lineNumber":78,"author":{"gitId":"banchiang"},"content":"     */"},{"lineNumber":79,"author":{"gitId":"banchiang"},"content":"    public String printTaskMsg(Task t, TaskList tl, String command) throws DukeException {"},{"lineNumber":80,"author":{"gitId":"banchiang"},"content":"        String cmdMsg \u003d getCommandMsg(command);"},{"lineNumber":81,"author":{"gitId":"banchiang"},"content":"        String taskMsg \u003d \"\\t\" + t.toString() + \"\\n\";"},{"lineNumber":82,"author":{"gitId":"banchiang"},"content":"        String listSizeMsg \u003d getTaskListSizeMsg(tl.getSize());"},{"lineNumber":83,"author":{"gitId":"banchiang"},"content":"        return cmdMsg + taskMsg + listSizeMsg;"},{"lineNumber":84,"author":{"gitId":"banchiang"},"content":"    }"},{"lineNumber":85,"author":{"gitId":"banchiang"},"content":""},{"lineNumber":86,"author":{"gitId":"banchiang"},"content":"    /**"},{"lineNumber":87,"author":{"gitId":"banchiang"},"content":"     * Returns string format for found task."},{"lineNumber":88,"author":{"gitId":"banchiang"},"content":"     * If no tasks found, return corresponding message."},{"lineNumber":89,"author":{"gitId":"banchiang"},"content":"     *"},{"lineNumber":90,"author":{"gitId":"banchiang"},"content":"     * @param tl Task list containing task."},{"lineNumber":91,"author":{"gitId":"banchiang"},"content":"     * @return String message for task(s) found."},{"lineNumber":92,"author":{"gitId":"banchiang"},"content":"     */"},{"lineNumber":93,"author":{"gitId":"banchiang"},"content":"    public String printFoundTasks(TaskList tl) {"},{"lineNumber":94,"author":{"gitId":"banchiang"},"content":"        if (tl.getSize() \u003d\u003d 0) {"},{"lineNumber":95,"author":{"gitId":"banchiang"},"content":"            String noMatchMsg \u003d \"There are no matching task in your list!\\n\";"},{"lineNumber":96,"author":{"gitId":"banchiang"},"content":"            return noMatchMsg;"},{"lineNumber":97,"author":{"gitId":"banchiang"},"content":"        } else {"},{"lineNumber":98,"author":{"gitId":"banchiang"},"content":"            String findMsg \u003d \"Here are the matching tasks in your list:\\n\";"},{"lineNumber":99,"author":{"gitId":"banchiang"},"content":"            String taskListMsg \u003d getTaskListMsg(tl);"},{"lineNumber":100,"author":{"gitId":"banchiang"},"content":"            return findMsg + taskListMsg;"},{"lineNumber":101,"author":{"gitId":"banchiang"},"content":"        }"},{"lineNumber":102,"author":{"gitId":"banchiang"},"content":"    }"},{"lineNumber":103,"author":{"gitId":"banchiang"},"content":""},{"lineNumber":104,"author":{"gitId":"banchiang"},"content":"    /**"},{"lineNumber":105,"author":{"gitId":"banchiang"},"content":"     * Returns String format of tasks."},{"lineNumber":106,"author":{"gitId":"banchiang"},"content":"     *"},{"lineNumber":107,"author":{"gitId":"banchiang"},"content":"     * @param tl Task list containing tasks."},{"lineNumber":108,"author":{"gitId":"banchiang"},"content":"     * @return String format of tasks."},{"lineNumber":109,"author":{"gitId":"banchiang"},"content":"     */"},{"lineNumber":110,"author":{"gitId":"banchiang"},"content":"    public String printTasks(TaskList tl) {"},{"lineNumber":111,"author":{"gitId":"banchiang"},"content":"        if (tl.getSize() \u003d\u003d 0) {"},{"lineNumber":112,"author":{"gitId":"banchiang"},"content":"            String emptyListMsg \u003d \"There are no tasks in your list!\\n\";"},{"lineNumber":113,"author":{"gitId":"banchiang"},"content":"            return emptyListMsg;"},{"lineNumber":114,"author":{"gitId":"banchiang"},"content":"        } else {"},{"lineNumber":115,"author":{"gitId":"banchiang"},"content":"            String listMsg \u003d \"These are the tasks in your list:\\n\";"},{"lineNumber":116,"author":{"gitId":"banchiang"},"content":"            String taskListMsg \u003d getTaskListMsg(tl);"},{"lineNumber":117,"author":{"gitId":"banchiang"},"content":"            return listMsg + taskListMsg;"},{"lineNumber":118,"author":{"gitId":"banchiang"},"content":"        }"},{"lineNumber":119,"author":{"gitId":"banchiang"},"content":"    }"},{"lineNumber":120,"author":{"gitId":"banchiang"},"content":""},{"lineNumber":121,"author":{"gitId":"banchiang"},"content":"    private String getTaskListSizeMsg(int numOfTasks) {"},{"lineNumber":122,"author":{"gitId":"banchiang"},"content":"        return String.format(\"You have %d task(s) in your list.\\n\", numOfTasks);"},{"lineNumber":123,"author":{"gitId":"banchiang"},"content":"    }"},{"lineNumber":124,"author":{"gitId":"banchiang"},"content":""},{"lineNumber":125,"author":{"gitId":"banchiang"},"content":"    private String getTaskListMsg(TaskList tl) {"},{"lineNumber":126,"author":{"gitId":"banchiang"},"content":"        int index \u003d 1;"},{"lineNumber":127,"author":{"gitId":"banchiang"},"content":"        String msg \u003d \"\";"},{"lineNumber":128,"author":{"gitId":"banchiang"},"content":"        for (Task t : tl.getList()) {"},{"lineNumber":129,"author":{"gitId":"banchiang"},"content":"            msg +\u003d String.format(\"%d. %s\\n\","},{"lineNumber":130,"author":{"gitId":"banchiang"},"content":"                    index++, t.toString());"},{"lineNumber":131,"author":{"gitId":"banchiang"},"content":"        }"},{"lineNumber":132,"author":{"gitId":"banchiang"},"content":"        return msg;"},{"lineNumber":133,"author":{"gitId":"banchiang"},"content":"    }"},{"lineNumber":134,"author":{"gitId":"banchiang"},"content":""},{"lineNumber":135,"author":{"gitId":"banchiang"},"content":"    private String getCommandMsg(String command) throws DukeWrongCommandException {"},{"lineNumber":136,"author":{"gitId":"banchiang"},"content":"        String cmdMsg;"},{"lineNumber":137,"author":{"gitId":"banchiang"},"content":"        switch(command) {"},{"lineNumber":138,"author":{"gitId":"banchiang"},"content":"        case \"add\":"},{"lineNumber":139,"author":{"gitId":"banchiang"},"content":"            cmdMsg \u003d ADD_MSG;"},{"lineNumber":140,"author":{"gitId":"banchiang"},"content":"            break;"},{"lineNumber":141,"author":{"gitId":"banchiang"},"content":"        case \"delete\":"},{"lineNumber":142,"author":{"gitId":"banchiang"},"content":"            cmdMsg \u003d DELETE_MSG;"},{"lineNumber":143,"author":{"gitId":"banchiang"},"content":"            break;"},{"lineNumber":144,"author":{"gitId":"banchiang"},"content":"        case \"done\":"},{"lineNumber":145,"author":{"gitId":"banchiang"},"content":"            cmdMsg \u003d DONE_MSG;"},{"lineNumber":146,"author":{"gitId":"banchiang"},"content":"            break;"},{"lineNumber":147,"author":{"gitId":"banchiang"},"content":"        default:"},{"lineNumber":148,"author":{"gitId":"banchiang"},"content":"            throw new DukeWrongCommandException(command);"},{"lineNumber":149,"author":{"gitId":"banchiang"},"content":"        }"},{"lineNumber":150,"author":{"gitId":"banchiang"},"content":"        return cmdMsg;"},{"lineNumber":151,"author":{"gitId":"banchiang"},"content":"    }"},{"lineNumber":152,"author":{"gitId":"banchiang"},"content":"}"}],"authorContributionMap":{"banchiang":152}},{"path":"src/main/resources/view/DialogBox.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"banchiang"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"},{"lineNumber":2,"author":{"gitId":"banchiang"},"content":""},{"lineNumber":3,"author":{"gitId":"banchiang"},"content":"\u003c?import javafx.geometry.Insets?\u003e"},{"lineNumber":4,"author":{"gitId":"banchiang"},"content":"\u003c?import javafx.scene.control.Label?\u003e"},{"lineNumber":5,"author":{"gitId":"banchiang"},"content":"\u003c?import javafx.scene.image.ImageView?\u003e"},{"lineNumber":6,"author":{"gitId":"banchiang"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e"},{"lineNumber":7,"author":{"gitId":"banchiang"},"content":""},{"lineNumber":8,"author":{"gitId":"banchiang"},"content":"\u003cfx:root alignment\u003d\"TOP_RIGHT\" maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\" minHeight\u003d\"-Infinity\" prefWidth\u003d\"400.0\" type\u003d\"javafx.scene.layout.HBox\" xmlns\u003d\"http://javafx.com/fxml/1\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e"},{"lineNumber":9,"author":{"gitId":"banchiang"},"content":"    \u003cchildren\u003e"},{"lineNumber":10,"author":{"gitId":"banchiang"},"content":"        \u003cLabel fx:id\u003d\"dialog\" style\u003d\"-fx-background-color: #66ff99; -fx-background-radius: 20; -fx-border-color: grey; -fx-border-radius: 20; -fx-padding: 5 15 5 15;\" text\u003d\"Label\" wrapText\u003d\"true\" /\u003e"},{"lineNumber":11,"author":{"gitId":"banchiang"},"content":"        \u003cImageView fx:id\u003d\"displayPicture\" style\u003d\"\" fitHeight\u003d\"99.0\" fitWidth\u003d\"99.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"false\" /\u003e"},{"lineNumber":12,"author":{"gitId":"banchiang"},"content":"    \u003c/children\u003e"},{"lineNumber":13,"author":{"gitId":"banchiang"},"content":"    \u003cpadding\u003e"},{"lineNumber":14,"author":{"gitId":"banchiang"},"content":"        \u003cInsets bottom\u003d\"15.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"15.0\" /\u003e"},{"lineNumber":15,"author":{"gitId":"banchiang"},"content":"    \u003c/padding\u003e"},{"lineNumber":16,"author":{"gitId":"banchiang"},"content":"\u003c/fx:root\u003e"}],"authorContributionMap":{"banchiang":16}},{"path":"src/main/resources/view/MainWindow.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"banchiang"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"},{"lineNumber":2,"author":{"gitId":"banchiang"},"content":""},{"lineNumber":3,"author":{"gitId":"banchiang"},"content":"\u003c?import javafx.scene.control.Button?\u003e"},{"lineNumber":4,"author":{"gitId":"banchiang"},"content":"\u003c?import javafx.scene.control.ScrollPane?\u003e"},{"lineNumber":5,"author":{"gitId":"banchiang"},"content":"\u003c?import javafx.scene.control.TextField?\u003e"},{"lineNumber":6,"author":{"gitId":"banchiang"},"content":"\u003c?import javafx.scene.layout.AnchorPane?\u003e"},{"lineNumber":7,"author":{"gitId":"banchiang"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e"},{"lineNumber":8,"author":{"gitId":"banchiang"},"content":""},{"lineNumber":9,"author":{"gitId":"banchiang"},"content":"\u003cAnchorPane maxHeight\u003d\"600.0\" maxWidth\u003d\"400.0\" minHeight\u003d\"600.0\" minWidth\u003d\"400.0\" prefHeight\u003d\"600.0\" prefWidth\u003d\"400.0\" xmlns\u003d\"http://javafx.com/javafx/8.0.171\" xmlns:fx\u003d\"http://javafx.com/fxml/1\" fx:controller\u003d\"duke.MainWindow\"\u003e"},{"lineNumber":10,"author":{"gitId":"banchiang"},"content":"    \u003cchildren\u003e"},{"lineNumber":11,"author":{"gitId":"banchiang"},"content":"        \u003cTextField fx:id\u003d\"userInput\" layoutY\u003d\"558.0\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"324.0\" AnchorPane.bottomAnchor\u003d\"1.0\" /\u003e"},{"lineNumber":12,"author":{"gitId":"banchiang"},"content":"        \u003cButton fx:id\u003d\"sendButton\" layoutX\u003d\"324.0\" layoutY\u003d\"558.0\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"76.0\" text\u003d\"Send\" /\u003e"},{"lineNumber":13,"author":{"gitId":"banchiang"},"content":"        \u003cScrollPane fx:id\u003d\"scrollPane\" hbarPolicy\u003d\"NEVER\" hvalue\u003d\"1.0\" prefHeight\u003d\"557.0\" prefWidth\u003d\"400.0\" vvalue\u003d\"1.0\"\u003e"},{"lineNumber":14,"author":{"gitId":"banchiang"},"content":"            \u003ccontent\u003e"},{"lineNumber":15,"author":{"gitId":"banchiang"},"content":"                \u003cVBox fx:id\u003d\"dialogContainer\" prefHeight\u003d\"552.0\" prefWidth\u003d\"388.0\" /\u003e"},{"lineNumber":16,"author":{"gitId":"banchiang"},"content":"            \u003c/content\u003e"},{"lineNumber":17,"author":{"gitId":"banchiang"},"content":"        \u003c/ScrollPane\u003e"},{"lineNumber":18,"author":{"gitId":"banchiang"},"content":"    \u003c/children\u003e"},{"lineNumber":19,"author":{"gitId":"banchiang"},"content":"\u003c/AnchorPane\u003e"}],"authorContributionMap":{"banchiang":19}},{"path":"src/test/java/duke/TaskListTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"banchiang"},"content":"package duke;"},{"lineNumber":2,"author":{"gitId":"banchiang"},"content":""},{"lineNumber":3,"author":{"gitId":"banchiang"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;"},{"lineNumber":4,"author":{"gitId":"banchiang"},"content":""},{"lineNumber":5,"author":{"gitId":"banchiang"},"content":"import org.junit.jupiter.api.Test;"},{"lineNumber":6,"author":{"gitId":"banchiang"},"content":""},{"lineNumber":7,"author":{"gitId":"banchiang"},"content":"/**"},{"lineNumber":8,"author":{"gitId":"banchiang"},"content":" * Test class for task list class."},{"lineNumber":9,"author":{"gitId":"banchiang"},"content":" */"},{"lineNumber":10,"author":{"gitId":"banchiang"},"content":"public class TaskListTest {"},{"lineNumber":11,"author":{"gitId":"banchiang"},"content":""},{"lineNumber":12,"author":{"gitId":"banchiang"},"content":"    @Test"},{"lineNumber":13,"author":{"gitId":"banchiang"},"content":"    public void testAddTask() throws DukeNumOutOfRangeException {"},{"lineNumber":14,"author":{"gitId":"banchiang"},"content":"        TaskList tl \u003d new TaskList();"},{"lineNumber":15,"author":{"gitId":"banchiang"},"content":"        Task t1 \u003d new ToDo(\"read book\");"},{"lineNumber":16,"author":{"gitId":"banchiang"},"content":"        tl.add(t1);"},{"lineNumber":17,"author":{"gitId":"banchiang"},"content":"        Task t2 \u003d tl.get(0);"},{"lineNumber":18,"author":{"gitId":"banchiang"},"content":"        assertEquals(t1.getName(), t2.getName());"},{"lineNumber":19,"author":{"gitId":"banchiang"},"content":"    }"},{"lineNumber":20,"author":{"gitId":"banchiang"},"content":""},{"lineNumber":21,"author":{"gitId":"banchiang"},"content":"    @Test"},{"lineNumber":22,"author":{"gitId":"banchiang"},"content":"    public void testDeleteTask() throws DukeNumOutOfRangeException {"},{"lineNumber":23,"author":{"gitId":"banchiang"},"content":"        TaskList tl \u003d new TaskList();"},{"lineNumber":24,"author":{"gitId":"banchiang"},"content":"        Task t1 \u003d new ToDo(\"read book\");"},{"lineNumber":25,"author":{"gitId":"banchiang"},"content":"        tl.add(t1);"},{"lineNumber":26,"author":{"gitId":"banchiang"},"content":"        Task t2 \u003d tl.remove(0);"},{"lineNumber":27,"author":{"gitId":"banchiang"},"content":"        assertEquals(t1.getName() , t2.getName());"},{"lineNumber":28,"author":{"gitId":"banchiang"},"content":"    }"},{"lineNumber":29,"author":{"gitId":"banchiang"},"content":"}"}],"authorContributionMap":{"banchiang":29}},{"path":"src/test/java/duke/TestUi.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"banchiang"},"content":"package duke;"},{"lineNumber":2,"author":{"gitId":"banchiang"},"content":""},{"lineNumber":3,"author":{"gitId":"banchiang"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;"},{"lineNumber":4,"author":{"gitId":"banchiang"},"content":""},{"lineNumber":5,"author":{"gitId":"banchiang"},"content":"import org.junit.jupiter.api.Test;"},{"lineNumber":6,"author":{"gitId":"banchiang"},"content":""},{"lineNumber":7,"author":{"gitId":"banchiang"},"content":"/**"},{"lineNumber":8,"author":{"gitId":"banchiang"},"content":" * Test class for Ui class."},{"lineNumber":9,"author":{"gitId":"banchiang"},"content":" */"},{"lineNumber":10,"author":{"gitId":"banchiang"},"content":"public class TestUi {"},{"lineNumber":11,"author":{"gitId":"banchiang"},"content":""},{"lineNumber":12,"author":{"gitId":"banchiang"},"content":"    /**"},{"lineNumber":13,"author":{"gitId":"banchiang"},"content":"     * Tests greeting."},{"lineNumber":14,"author":{"gitId":"banchiang"},"content":"     */"},{"lineNumber":15,"author":{"gitId":"banchiang"},"content":"    @Test"},{"lineNumber":16,"author":{"gitId":"banchiang"},"content":"    public void testGreeting() {"},{"lineNumber":17,"author":{"gitId":"banchiang"},"content":"        String greeting \u003d \"Hello! I\u0027m Duke\\n\" + \"What can I do for you?\\n\";"},{"lineNumber":18,"author":{"gitId":"banchiang"},"content":"        assertEquals(new Ui().printGreeting(), greeting);"},{"lineNumber":19,"author":{"gitId":"banchiang"},"content":"    }"},{"lineNumber":20,"author":{"gitId":"banchiang"},"content":""},{"lineNumber":21,"author":{"gitId":"banchiang"},"content":"    /**"},{"lineNumber":22,"author":{"gitId":"banchiang"},"content":"     * Tests exit message."},{"lineNumber":23,"author":{"gitId":"banchiang"},"content":"     */"},{"lineNumber":24,"author":{"gitId":"banchiang"},"content":"    @Test"},{"lineNumber":25,"author":{"gitId":"banchiang"},"content":"    public void testByeMessage() {"},{"lineNumber":26,"author":{"gitId":"banchiang"},"content":"        String byeMessage \u003d \"Bye. Hope to see you again soon!\\n\";"},{"lineNumber":27,"author":{"gitId":"banchiang"},"content":"        assertEquals(new Ui().printBye(), byeMessage);"},{"lineNumber":28,"author":{"gitId":"banchiang"},"content":"    }"},{"lineNumber":29,"author":{"gitId":"banchiang"},"content":""},{"lineNumber":30,"author":{"gitId":"banchiang"},"content":"    /**"},{"lineNumber":31,"author":{"gitId":"banchiang"},"content":"     * Tests error message."},{"lineNumber":32,"author":{"gitId":"banchiang"},"content":"     */"},{"lineNumber":33,"author":{"gitId":"banchiang"},"content":"    @Test"},{"lineNumber":34,"author":{"gitId":"banchiang"},"content":"    public void testPrintError() {"},{"lineNumber":35,"author":{"gitId":"banchiang"},"content":"        String error \u003d \"error\";"},{"lineNumber":36,"author":{"gitId":"banchiang"},"content":"        assertEquals(new Ui().printError(error), error);"},{"lineNumber":37,"author":{"gitId":"banchiang"},"content":"    }"},{"lineNumber":38,"author":{"gitId":"banchiang"},"content":"}"}],"authorContributionMap":{"banchiang":38}},{"path":"src/test/java/duke/ToDoTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"banchiang"},"content":"package duke;"},{"lineNumber":2,"author":{"gitId":"banchiang"},"content":""},{"lineNumber":3,"author":{"gitId":"banchiang"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;"},{"lineNumber":4,"author":{"gitId":"banchiang"},"content":""},{"lineNumber":5,"author":{"gitId":"banchiang"},"content":"import org.junit.jupiter.api.Test;"},{"lineNumber":6,"author":{"gitId":"banchiang"},"content":""},{"lineNumber":7,"author":{"gitId":"banchiang"},"content":"/**"},{"lineNumber":8,"author":{"gitId":"banchiang"},"content":" * Test class for to-do class."},{"lineNumber":9,"author":{"gitId":"banchiang"},"content":" */"},{"lineNumber":10,"author":{"gitId":"banchiang"},"content":"public class ToDoTest {"},{"lineNumber":11,"author":{"gitId":"banchiang"},"content":""},{"lineNumber":12,"author":{"gitId":"banchiang"},"content":"    @Test"},{"lineNumber":13,"author":{"gitId":"banchiang"},"content":"    public void testGetName() {"},{"lineNumber":14,"author":{"gitId":"banchiang"},"content":"        ToDo t \u003d new ToDo(\"read book\");"},{"lineNumber":15,"author":{"gitId":"banchiang"},"content":"        assertEquals(\"read book\", t.getName());"},{"lineNumber":16,"author":{"gitId":"banchiang"},"content":"    }"},{"lineNumber":17,"author":{"gitId":"banchiang"},"content":""},{"lineNumber":18,"author":{"gitId":"banchiang"},"content":"    @Test"},{"lineNumber":19,"author":{"gitId":"banchiang"},"content":"    public void testGetIcon() {"},{"lineNumber":20,"author":{"gitId":"banchiang"},"content":"        ToDo t \u003d new ToDo(\"read book\");"},{"lineNumber":21,"author":{"gitId":"banchiang"},"content":"        assertEquals(\" \", t.getStatusIcon());"},{"lineNumber":22,"author":{"gitId":"banchiang"},"content":"    }"},{"lineNumber":23,"author":{"gitId":"banchiang"},"content":""},{"lineNumber":24,"author":{"gitId":"banchiang"},"content":"    @Test"},{"lineNumber":25,"author":{"gitId":"banchiang"},"content":"    public void testFinishTask() {"},{"lineNumber":26,"author":{"gitId":"banchiang"},"content":"        ToDo t \u003d new ToDo(\"read book\");"},{"lineNumber":27,"author":{"gitId":"banchiang"},"content":"        t.finishTask();"},{"lineNumber":28,"author":{"gitId":"banchiang"},"content":"        assertEquals(\"X\", t.getStatusIcon());"},{"lineNumber":29,"author":{"gitId":"banchiang"},"content":"    }"},{"lineNumber":30,"author":{"gitId":"banchiang"},"content":"}"}],"authorContributionMap":{"banchiang":30}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"banchiang"},"content":"todo read book"},{"lineNumber":2,"author":{"gitId":"banchiang"},"content":"list"},{"lineNumber":3,"author":{"gitId":"banchiang"},"content":"bye"}],"authorContributionMap":{"banchiang":3}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF"},{"lineNumber":2,"author":{"gitId":"-"},"content":""},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist"},{"lineNumber":4,"author":{"gitId":"banchiang"},"content":"if not exist \\Users\\chian\\Desktop\\bin mkdir \\Users\\chian\\Desktop\\bin"},{"lineNumber":5,"author":{"gitId":"-"},"content":""},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run"},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT"},{"lineNumber":8,"author":{"gitId":"-"},"content":""},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder"},{"lineNumber":10,"author":{"gitId":"banchiang"},"content":"javac  -cp \\Users\\chian\\Desktop\\CS2103\\ip\\src\\main\\java -Xlint:none -d \\Users\\chian\\Desktop\\bin \\Users\\chian\\Desktop\\CS2103\\ip\\src\\main\\java\\*.java"},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 ("},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1"},{"lineNumber":14,"author":{"gitId":"-"},"content":")"},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0"},{"lineNumber":16,"author":{"gitId":"-"},"content":""},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"},{"lineNumber":18,"author":{"gitId":"banchiang"},"content":"java -classpath \\Users\\chian\\Desktop\\bin Duke \u003c input.txt \u003e ACTUAL.TXT"},{"lineNumber":19,"author":{"gitId":"-"},"content":""},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM compare the output to the expected output"},{"lineNumber":21,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT"}],"authorContributionMap":{"banchiang":3,"-":18}}]
