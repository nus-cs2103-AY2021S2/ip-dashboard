[{"path":"src/main/java/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"natosy"},"content":"public class Deadline extends Task {"},{"lineNumber":2,"author":{"gitId":"natosy"},"content":""},{"lineNumber":3,"author":{"gitId":"natosy"},"content":"    public String date;"},{"lineNumber":4,"author":{"gitId":"natosy"},"content":""},{"lineNumber":5,"author":{"gitId":"natosy"},"content":"    Deadline(String description) {"},{"lineNumber":6,"author":{"gitId":"natosy"},"content":"        super(description.substring(9).split(\" /by \")[0]);"},{"lineNumber":7,"author":{"gitId":"natosy"},"content":"        this.date \u003d description.substring(9).split(\" /by \")[1];"},{"lineNumber":8,"author":{"gitId":"natosy"},"content":"        isDone \u003d false;"},{"lineNumber":9,"author":{"gitId":"natosy"},"content":"    }"},{"lineNumber":10,"author":{"gitId":"natosy"},"content":""},{"lineNumber":11,"author":{"gitId":"natosy"},"content":"    @Override"},{"lineNumber":12,"author":{"gitId":"natosy"},"content":"    public String getDate() {"},{"lineNumber":13,"author":{"gitId":"natosy"},"content":"        return \" (by: \" + date + \")\";"},{"lineNumber":14,"author":{"gitId":"natosy"},"content":"    }"},{"lineNumber":15,"author":{"gitId":"natosy"},"content":""},{"lineNumber":16,"author":{"gitId":"natosy"},"content":"    @Override"},{"lineNumber":17,"author":{"gitId":"natosy"},"content":"    public String toString() {"},{"lineNumber":18,"author":{"gitId":"natosy"},"content":"        return \"[D]\" + super.toString() + getDate() + \"\\n\";"},{"lineNumber":19,"author":{"gitId":"natosy"},"content":"    }"},{"lineNumber":20,"author":{"gitId":"natosy"},"content":"}"}],"authorContributionMap":{"natosy":20}},{"path":"src/main/java/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"natosy"},"content":"import java.util.ArrayList;"},{"lineNumber":2,"author":{"gitId":"natosy"},"content":"import java.util.Scanner;"},{"lineNumber":3,"author":{"gitId":"natosy"},"content":""},{"lineNumber":4,"author":{"gitId":"-"},"content":"public class Duke {"},{"lineNumber":5,"author":{"gitId":"natosy"},"content":""},{"lineNumber":6,"author":{"gitId":"natosy"},"content":"    static ArrayList\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();"},{"lineNumber":7,"author":{"gitId":"natosy"},"content":""},{"lineNumber":8,"author":{"gitId":"natosy"},"content":"    static void display(String str) {"},{"lineNumber":9,"author":{"gitId":"natosy"},"content":"        int longest \u003d 0;"},{"lineNumber":10,"author":{"gitId":"natosy"},"content":"        String[] strings \u003d str.split(\"\\n\");"},{"lineNumber":11,"author":{"gitId":"natosy"},"content":"        for (String s : strings) if (s.length() \u003e longest) longest \u003d s.length();"},{"lineNumber":12,"author":{"gitId":"natosy"},"content":"        String topBorder \u003d \"    ╭\" + \"-\".repeat(longest + 2) + \"╮\\n\";"},{"lineNumber":13,"author":{"gitId":"natosy"},"content":"        String botBorder \u003d \"    ╰\" + \"-\".repeat(longest + 2) + \"╯\\n\";"},{"lineNumber":14,"author":{"gitId":"natosy"},"content":"        StringBuilder mainText \u003d new StringBuilder();"},{"lineNumber":15,"author":{"gitId":"natosy"},"content":"        for (String s : strings) mainText.append(\"    | \" + s + \" \".repeat(longest - s.length() + 1) + \"|\\n\");"},{"lineNumber":16,"author":{"gitId":"natosy"},"content":"        System.out.println(topBorder + mainText + botBorder);"},{"lineNumber":17,"author":{"gitId":"natosy"},"content":"    }"},{"lineNumber":18,"author":{"gitId":"natosy"},"content":""},{"lineNumber":19,"author":{"gitId":"natosy"},"content":"    static void displayAllTasks() {"},{"lineNumber":20,"author":{"gitId":"natosy"},"content":"        StringBuilder sb \u003d new StringBuilder();"},{"lineNumber":21,"author":{"gitId":"natosy"},"content":"        sb.append(\"Here\u0027s what you\u0027ve ordered so far:\\n\");"},{"lineNumber":22,"author":{"gitId":"natosy"},"content":"        for (int i \u003d 1; i \u003c\u003d tasks.size(); i++) {"},{"lineNumber":23,"author":{"gitId":"natosy"},"content":"            String formattedTask \u003d i + \". \" + tasks.get(i - 1).toString();"},{"lineNumber":24,"author":{"gitId":"natosy"},"content":"            sb.append(formattedTask);"},{"lineNumber":25,"author":{"gitId":"natosy"},"content":"        }"},{"lineNumber":26,"author":{"gitId":"natosy"},"content":"        display(sb.toString());"},{"lineNumber":27,"author":{"gitId":"natosy"},"content":"    }"},{"lineNumber":28,"author":{"gitId":"natosy"},"content":""},{"lineNumber":29,"author":{"gitId":"natosy"},"content":"    static void displayAddedTask(Task task) {"},{"lineNumber":30,"author":{"gitId":"natosy"},"content":"        display(\"Cool! I\u0027ve added the following item to your order list.\\n  \""},{"lineNumber":31,"author":{"gitId":"natosy"},"content":"                + task"},{"lineNumber":32,"author":{"gitId":"natosy"},"content":"                + \"You now have \""},{"lineNumber":33,"author":{"gitId":"natosy"},"content":"                + tasks.size()"},{"lineNumber":34,"author":{"gitId":"natosy"},"content":"                + \" order(s)!\");"},{"lineNumber":35,"author":{"gitId":"natosy"},"content":"    }"},{"lineNumber":36,"author":{"gitId":"natosy"},"content":""},{"lineNumber":37,"author":{"gitId":"natosy"},"content":"    static void displayRemovedTask(Task task) {"},{"lineNumber":38,"author":{"gitId":"natosy"},"content":"        display(\"Aw man... I told Ronald that was a bad item to put on the menu.\\n\""},{"lineNumber":39,"author":{"gitId":"natosy"},"content":"                + \"Here you go, I\u0027ve removed this item from your order list!\\n\" + task +"},{"lineNumber":40,"author":{"gitId":"natosy"},"content":"                \"You have \" + tasks.size() + \" order(s) left!\");"},{"lineNumber":41,"author":{"gitId":"natosy"},"content":"    }"},{"lineNumber":42,"author":{"gitId":"natosy"},"content":""},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public static void main(String[] args) {"},{"lineNumber":44,"author":{"gitId":"natosy"},"content":"        Scanner sc \u003d new Scanner(System.in);"},{"lineNumber":45,"author":{"gitId":"natosy"},"content":""},{"lineNumber":46,"author":{"gitId":"natosy"},"content":"        display("},{"lineNumber":47,"author":{"gitId":"natosy"},"content":"                \"  __  __      _____                    _     _     \\n\" +"},{"lineNumber":48,"author":{"gitId":"natosy"},"content":"                        \" |  \\\\/  |    |  __ \\\\                  | |   | |    \\n\" +"},{"lineNumber":49,"author":{"gitId":"natosy"},"content":"                        \" | \\\\  / | ___| |  | | ___  _ __   __ _| | __| |___ \\n\" +"},{"lineNumber":50,"author":{"gitId":"natosy"},"content":"                        \" | |\\\\/| |/ __| |  | |/ _ \\\\| \u0027_ \\\\ / _` | |/ _` / __|\\n\" +"},{"lineNumber":51,"author":{"gitId":"natosy"},"content":"                        \" | |  | | (__| |__| | (_) | | | | (_| | | (_| \\\\__ \\\\\\n\" +"},{"lineNumber":52,"author":{"gitId":"natosy"},"content":"                        \" |_|  |_|\\\\___|_____/ \\\\___/|_| |_|\\\\__,_|_|\\\\__,_|___/\\n\" +"},{"lineNumber":53,"author":{"gitId":"natosy"},"content":"                        \"                                                   \\n\""},{"lineNumber":54,"author":{"gitId":"natosy"},"content":"                        + \"BALAPALAPA~ Welcome to McDonalds!\\n\""},{"lineNumber":55,"author":{"gitId":"natosy"},"content":"                        + \"I\u0027m McSpicy, the best burger ever!\\n\""},{"lineNumber":56,"author":{"gitId":"natosy"},"content":"                        + \"What can I do for you today?\");"},{"lineNumber":57,"author":{"gitId":"natosy"},"content":"        while (sc.hasNextLine()) {"},{"lineNumber":58,"author":{"gitId":"natosy"},"content":"            String input \u003d sc.nextLine();"},{"lineNumber":59,"author":{"gitId":"natosy"},"content":"            if (input.equals(\"bye\")) break;"},{"lineNumber":60,"author":{"gitId":"natosy"},"content":"            try {"},{"lineNumber":61,"author":{"gitId":"natosy"},"content":"                respond(input);"},{"lineNumber":62,"author":{"gitId":"natosy"},"content":"            } catch (DukeException e) {"},{"lineNumber":63,"author":{"gitId":"natosy"},"content":"                display(e.getMessage());"},{"lineNumber":64,"author":{"gitId":"natosy"},"content":"            }"},{"lineNumber":65,"author":{"gitId":"natosy"},"content":"        }"},{"lineNumber":66,"author":{"gitId":"natosy"},"content":"        display(\"Thanks for patronising McDonalds!\\nWe hope to see you again soon!\");"},{"lineNumber":67,"author":{"gitId":"natosy"},"content":"        sc.close();"},{"lineNumber":68,"author":{"gitId":"natosy"},"content":"    }"},{"lineNumber":69,"author":{"gitId":"natosy"},"content":""},{"lineNumber":70,"author":{"gitId":"natosy"},"content":"    public static void respond(String input) throws DukeException {"},{"lineNumber":71,"author":{"gitId":"natosy"},"content":"        String[] command \u003d input.split(\" \");"},{"lineNumber":72,"author":{"gitId":"natosy"},"content":"        Task task;"},{"lineNumber":73,"author":{"gitId":"natosy"},"content":"        if (command[0].equals(\"list\")) {"},{"lineNumber":74,"author":{"gitId":"natosy"},"content":"            displayAllTasks();"},{"lineNumber":75,"author":{"gitId":"natosy"},"content":"        } else if (command[0].equals(\"done\")) {"},{"lineNumber":76,"author":{"gitId":"natosy"},"content":"            if (command.length \u003e 2)"},{"lineNumber":77,"author":{"gitId":"natosy"},"content":"                throw new DukeException(\"We can only serve one order at a time...\\nTry again!\");"},{"lineNumber":78,"author":{"gitId":"natosy"},"content":"            try {"},{"lineNumber":79,"author":{"gitId":"natosy"},"content":"                Task toMarkDone \u003d tasks.get(Integer.parseInt(command[1]) - 1);"},{"lineNumber":80,"author":{"gitId":"natosy"},"content":"                toMarkDone.markDone();"},{"lineNumber":81,"author":{"gitId":"natosy"},"content":"                display(\"Tada! Your order has been served:\\n  \" + toMarkDone);"},{"lineNumber":82,"author":{"gitId":"natosy"},"content":"            } catch (Exception e) {"},{"lineNumber":83,"author":{"gitId":"natosy"},"content":"                throw new DukeException(\"Oops! That doesn\u0027t seem like a valid order number...\\nTry again!\");"},{"lineNumber":84,"author":{"gitId":"natosy"},"content":"            }"},{"lineNumber":85,"author":{"gitId":"natosy"},"content":"        } else if (command[0].equals(\"todo\")) {"},{"lineNumber":86,"author":{"gitId":"natosy"},"content":"            if (command.length \u003d\u003d 1)"},{"lineNumber":87,"author":{"gitId":"natosy"},"content":"                throw new DukeException(\"I can\u0027t add an item with no name to your orders!\\nTry again!\");"},{"lineNumber":88,"author":{"gitId":"natosy"},"content":"            task \u003d new Todo(input);"},{"lineNumber":89,"author":{"gitId":"natosy"},"content":"            tasks.add(task);"},{"lineNumber":90,"author":{"gitId":"natosy"},"content":"            displayAddedTask(task);"},{"lineNumber":91,"author":{"gitId":"natosy"},"content":"        } else if (command[0].equals(\"deadline\")) {"},{"lineNumber":92,"author":{"gitId":"natosy"},"content":"            if (!input.contains(\"/by\"))"},{"lineNumber":93,"author":{"gitId":"natosy"},"content":"                throw new DukeException(\"Hmm.. When do you want this order to be served by?\\nTry again!\");"},{"lineNumber":94,"author":{"gitId":"natosy"},"content":"            task \u003d new Deadline(input);"},{"lineNumber":95,"author":{"gitId":"natosy"},"content":"            tasks.add(task);"},{"lineNumber":96,"author":{"gitId":"natosy"},"content":"            displayAddedTask(task);"},{"lineNumber":97,"author":{"gitId":"natosy"},"content":"        } else if (command[0].equals(\"event\")) {"},{"lineNumber":98,"author":{"gitId":"natosy"},"content":"            if (!input.contains(\"/at\"))"},{"lineNumber":99,"author":{"gitId":"natosy"},"content":"                throw new DukeException(\"Hmm.. When do you want this order to be served?\\nTry again!\");"},{"lineNumber":100,"author":{"gitId":"natosy"},"content":"            task \u003d new Event(input);"},{"lineNumber":101,"author":{"gitId":"natosy"},"content":"            tasks.add(task);"},{"lineNumber":102,"author":{"gitId":"natosy"},"content":"            displayAddedTask(task);"},{"lineNumber":103,"author":{"gitId":"natosy"},"content":"        } else if (command[0].equals(\"delete\")) {"},{"lineNumber":104,"author":{"gitId":"natosy"},"content":"            if (command.length \u003e 2)"},{"lineNumber":105,"author":{"gitId":"natosy"},"content":"                throw new DukeException(\"I can only delete one order at a time...\\nTry again!\");"},{"lineNumber":106,"author":{"gitId":"natosy"},"content":"            try {"},{"lineNumber":107,"author":{"gitId":"natosy"},"content":"                task \u003d tasks.remove(Integer.parseInt(command[1]) - 1);"},{"lineNumber":108,"author":{"gitId":"natosy"},"content":"                displayRemovedTask(task);"},{"lineNumber":109,"author":{"gitId":"natosy"},"content":"            } catch (Exception e) {"},{"lineNumber":110,"author":{"gitId":"natosy"},"content":"                throw new DukeException(\"Oops! That doesn\u0027t seem like a valid order number...\\nTry again!\");"},{"lineNumber":111,"author":{"gitId":"natosy"},"content":"            }"},{"lineNumber":112,"author":{"gitId":"natosy"},"content":"        } else {"},{"lineNumber":113,"author":{"gitId":"natosy"},"content":"            throw new DukeException(\"Hmm... That doesn\u0027t look like an item in our menu...\");"},{"lineNumber":114,"author":{"gitId":"natosy"},"content":"        }"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":116,"author":{"gitId":"-"},"content":"}"},{"lineNumber":117,"author":{"gitId":"natosy"},"content":""}],"authorContributionMap":{"natosy":113,"-":4}},{"path":"src/main/java/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"natosy"},"content":"public class DukeException extends Exception {"},{"lineNumber":2,"author":{"gitId":"natosy"},"content":"    DukeException(String message) {"},{"lineNumber":3,"author":{"gitId":"natosy"},"content":"        super(message);"},{"lineNumber":4,"author":{"gitId":"natosy"},"content":"    }"},{"lineNumber":5,"author":{"gitId":"natosy"},"content":"}"}],"authorContributionMap":{"natosy":5}},{"path":"src/main/java/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"natosy"},"content":"public class Event extends Task {"},{"lineNumber":2,"author":{"gitId":"natosy"},"content":"    public String date;"},{"lineNumber":3,"author":{"gitId":"natosy"},"content":""},{"lineNumber":4,"author":{"gitId":"natosy"},"content":"    Event(String description) {"},{"lineNumber":5,"author":{"gitId":"natosy"},"content":"        super(description.substring(6).split(\" /at \")[0]);"},{"lineNumber":6,"author":{"gitId":"natosy"},"content":"        this.date \u003d description.substring(6).split(\" /at \")[1];"},{"lineNumber":7,"author":{"gitId":"natosy"},"content":"        isDone \u003d false;"},{"lineNumber":8,"author":{"gitId":"natosy"},"content":"    }"},{"lineNumber":9,"author":{"gitId":"natosy"},"content":"    @Override"},{"lineNumber":10,"author":{"gitId":"natosy"},"content":"    public String getDate() {"},{"lineNumber":11,"author":{"gitId":"natosy"},"content":"        return \" (at: \" + date + \")\";"},{"lineNumber":12,"author":{"gitId":"natosy"},"content":"    }"},{"lineNumber":13,"author":{"gitId":"natosy"},"content":""},{"lineNumber":14,"author":{"gitId":"natosy"},"content":"    @Override"},{"lineNumber":15,"author":{"gitId":"natosy"},"content":"    public String toString() {"},{"lineNumber":16,"author":{"gitId":"natosy"},"content":"        return \"[E]\" + super.toString() + getDate() + \"\\n\";"},{"lineNumber":17,"author":{"gitId":"natosy"},"content":"    }"},{"lineNumber":18,"author":{"gitId":"natosy"},"content":"}"}],"authorContributionMap":{"natosy":18}},{"path":"src/main/java/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"natosy"},"content":"public class Task {"},{"lineNumber":2,"author":{"gitId":"natosy"},"content":""},{"lineNumber":3,"author":{"gitId":"natosy"},"content":"    String description;"},{"lineNumber":4,"author":{"gitId":"natosy"},"content":"    boolean isDone;"},{"lineNumber":5,"author":{"gitId":"natosy"},"content":""},{"lineNumber":6,"author":{"gitId":"natosy"},"content":"    Task(String description) {"},{"lineNumber":7,"author":{"gitId":"natosy"},"content":"        this.description \u003d description;"},{"lineNumber":8,"author":{"gitId":"natosy"},"content":"        isDone \u003d false;"},{"lineNumber":9,"author":{"gitId":"natosy"},"content":"    }"},{"lineNumber":10,"author":{"gitId":"natosy"},"content":""},{"lineNumber":11,"author":{"gitId":"natosy"},"content":"    public String getStatusIcon() {"},{"lineNumber":12,"author":{"gitId":"natosy"},"content":"        return isDone ? \"[\\u2713] \" : \"[ ] \";"},{"lineNumber":13,"author":{"gitId":"natosy"},"content":"    }"},{"lineNumber":14,"author":{"gitId":"natosy"},"content":""},{"lineNumber":15,"author":{"gitId":"natosy"},"content":"    String getDate() {"},{"lineNumber":16,"author":{"gitId":"natosy"},"content":"        return \"\";"},{"lineNumber":17,"author":{"gitId":"natosy"},"content":"    }"},{"lineNumber":18,"author":{"gitId":"natosy"},"content":""},{"lineNumber":19,"author":{"gitId":"natosy"},"content":"    public void markDone() {"},{"lineNumber":20,"author":{"gitId":"natosy"},"content":"        isDone \u003d true;"},{"lineNumber":21,"author":{"gitId":"natosy"},"content":"    }"},{"lineNumber":22,"author":{"gitId":"natosy"},"content":""},{"lineNumber":23,"author":{"gitId":"natosy"},"content":"    @Override"},{"lineNumber":24,"author":{"gitId":"natosy"},"content":"    public String toString() {"},{"lineNumber":25,"author":{"gitId":"natosy"},"content":"        return getStatusIcon() + description;"},{"lineNumber":26,"author":{"gitId":"natosy"},"content":"    }"},{"lineNumber":27,"author":{"gitId":"natosy"},"content":"}"}],"authorContributionMap":{"natosy":27}},{"path":"src/main/java/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"natosy"},"content":"public class Todo extends Task {"},{"lineNumber":2,"author":{"gitId":"natosy"},"content":"    Todo(String description) {"},{"lineNumber":3,"author":{"gitId":"natosy"},"content":"        super(description.substring(5));"},{"lineNumber":4,"author":{"gitId":"natosy"},"content":"    }"},{"lineNumber":5,"author":{"gitId":"natosy"},"content":""},{"lineNumber":6,"author":{"gitId":"natosy"},"content":"    @Override"},{"lineNumber":7,"author":{"gitId":"natosy"},"content":"    public String toString() {"},{"lineNumber":8,"author":{"gitId":"natosy"},"content":"        return \"[T]\" + super.toString() + getDate() + \"\\n\";"},{"lineNumber":9,"author":{"gitId":"natosy"},"content":"    }"},{"lineNumber":10,"author":{"gitId":"natosy"},"content":"}"}],"authorContributionMap":{"natosy":10}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"natosy"},"content":"todo task 1"},{"lineNumber":2,"author":{"gitId":"natosy"},"content":"deadline task 2 /by tomorrow"},{"lineNumber":3,"author":{"gitId":"natosy"},"content":"event task 3 /at tonight"},{"lineNumber":4,"author":{"gitId":"natosy"},"content":"list"},{"lineNumber":5,"author":{"gitId":"natosy"},"content":"bye"}],"authorContributionMap":{"natosy":5}}]
