[{"path":"README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"# Duke project template"},{"lineNumber":2,"author":{"gitId":"-"},"content":""},{"lineNumber":3,"author":{"gitId":"WeiLiangLOL"},"content":"This is a project template for a greenfield Java project. It\u0027s named after the Java mascot _Duke_. Given below are instructions on how to use it. Wei Liang tampered with it!"},{"lineNumber":4,"author":{"gitId":"-"},"content":""},{"lineNumber":5,"author":{"gitId":"-"},"content":"## Setting up in Intellij"},{"lineNumber":6,"author":{"gitId":"-"},"content":""},{"lineNumber":7,"author":{"gitId":"-"},"content":"Prerequisites: JDK 11, update Intellij to the most recent version."},{"lineNumber":8,"author":{"gitId":"-"},"content":""},{"lineNumber":9,"author":{"gitId":"-"},"content":"1. Open Intellij (if you are not in the welcome screen, click `File` \u003e `Close Project` to close the existing project first)"},{"lineNumber":10,"author":{"gitId":"-"},"content":"1. Open the project into Intellij as follows:"},{"lineNumber":11,"author":{"gitId":"-"},"content":"   1. Click `Open`."},{"lineNumber":12,"author":{"gitId":"-"},"content":"   1. Select the project directory, and click `OK`."},{"lineNumber":13,"author":{"gitId":"-"},"content":"   1. If there are any further prompts, accept the defaults."},{"lineNumber":14,"author":{"gitId":"-"},"content":"1. Configure the project to use **JDK 11** (not other versions) as explained in [here](https://www.jetbrains.com/help/idea/sdk.html#set-up-jdk)."},{"lineNumber":15,"author":{"gitId":"-"},"content":"1. After that, locate the `src/main/java/Duke.java` file, right-click it, and choose `Run Duke.main()`. If the setup is correct, you should see something like the below:"},{"lineNumber":16,"author":{"gitId":"-"},"content":"   ```"},{"lineNumber":17,"author":{"gitId":"-"},"content":"   Hello from"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    ____        _        "},{"lineNumber":19,"author":{"gitId":"-"},"content":"   |  _ \\ _   _| | _____ "},{"lineNumber":20,"author":{"gitId":"-"},"content":"   | | | | | | | |/ / _ \\"},{"lineNumber":21,"author":{"gitId":"-"},"content":"   | |_| | |_| |   \u003c  __/"},{"lineNumber":22,"author":{"gitId":"-"},"content":"   |____/ \\__,_|_|\\_\\___|"},{"lineNumber":23,"author":{"gitId":"-"},"content":"   ```"}],"authorContributionMap":{"WeiLiangLOL":1,"-":22}},{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027checkstyle\u0027"},{"lineNumber":5,"author":{"gitId":"WeiLiangLOL"},"content":"    id \u0027org.openjfx.javafxplugin\u0027 version \u00270.0.9\u0027"},{"lineNumber":6,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027"},{"lineNumber":7,"author":{"gitId":"-"},"content":"}"},{"lineNumber":8,"author":{"gitId":"-"},"content":""},{"lineNumber":9,"author":{"gitId":"WeiLiangLOL"},"content":"javafx {"},{"lineNumber":10,"author":{"gitId":"WeiLiangLOL"},"content":"    version \u003d \"11\""},{"lineNumber":11,"author":{"gitId":"WeiLiangLOL"},"content":"    modules \u003d [ \u0027javafx.controls\u0027, \u0027javafx.fxml\u0027 ]"},{"lineNumber":12,"author":{"gitId":"WeiLiangLOL"},"content":"}"},{"lineNumber":13,"author":{"gitId":"WeiLiangLOL"},"content":""},{"lineNumber":14,"author":{"gitId":"WeiLiangLOL"},"content":"compileJava   {"},{"lineNumber":15,"author":{"gitId":"WeiLiangLOL"},"content":"    sourceCompatibility \u003d \u00271.8\u0027"},{"lineNumber":16,"author":{"gitId":"WeiLiangLOL"},"content":"    targetCompatibility \u003d \u00271.8\u0027"},{"lineNumber":17,"author":{"gitId":"WeiLiangLOL"},"content":"}"},{"lineNumber":18,"author":{"gitId":"WeiLiangLOL"},"content":""},{"lineNumber":19,"author":{"gitId":"-"},"content":"repositories {"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    mavenCentral()"},{"lineNumber":21,"author":{"gitId":"-"},"content":"}"},{"lineNumber":22,"author":{"gitId":"-"},"content":""},{"lineNumber":23,"author":{"gitId":"-"},"content":"dependencies {    "},{"lineNumber":24,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.5.0\u0027"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.5.0\u0027"},{"lineNumber":26,"author":{"gitId":"-"},"content":"}"},{"lineNumber":27,"author":{"gitId":"-"},"content":""},{"lineNumber":28,"author":{"gitId":"-"},"content":"test {"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    useJUnitPlatform()"},{"lineNumber":30,"author":{"gitId":"-"},"content":""},{"lineNumber":31,"author":{"gitId":"-"},"content":"    testLogging {"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\""},{"lineNumber":33,"author":{"gitId":"-"},"content":""},{"lineNumber":34,"author":{"gitId":"-"},"content":"        showExceptions true"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\""},{"lineNumber":36,"author":{"gitId":"-"},"content":"        showCauses true"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        showStackTraces true"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":40,"author":{"gitId":"-"},"content":"}"},{"lineNumber":41,"author":{"gitId":"-"},"content":""},{"lineNumber":42,"author":{"gitId":"-"},"content":"application {"},{"lineNumber":43,"author":{"gitId":"WeiLiangLOL"},"content":"    mainClassName \u003d \"com.weiliang.Launcher\""},{"lineNumber":44,"author":{"gitId":"-"},"content":"}"},{"lineNumber":45,"author":{"gitId":"-"},"content":""},{"lineNumber":46,"author":{"gitId":"-"},"content":"shadowJar {"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    archiveBaseName \u003d \"duke\""},{"lineNumber":48,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null"},{"lineNumber":49,"author":{"gitId":"-"},"content":"}"},{"lineNumber":50,"author":{"gitId":"-"},"content":""},{"lineNumber":51,"author":{"gitId":"-"},"content":"checkstyle {"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    toolVersion \u003d \u00278.29\u0027"},{"lineNumber":53,"author":{"gitId":"-"},"content":"}"},{"lineNumber":54,"author":{"gitId":"-"},"content":""},{"lineNumber":55,"author":{"gitId":"-"},"content":"run {"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in"},{"lineNumber":57,"author":{"gitId":"-"},"content":"}"}],"authorContributionMap":{"WeiLiangLOL":12,"-":45}},{"path":"docs/README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"WeiLiangLOL"},"content":"# Simple Bot - User Guide"},{"lineNumber":2,"author":{"gitId":"-"},"content":""},{"lineNumber":3,"author":{"gitId":"WeiLiangLOL"},"content":"## Introduction"},{"lineNumber":4,"author":{"gitId":"-"},"content":""},{"lineNumber":5,"author":{"gitId":"WeiLiangLOL"},"content":"Enjoy last minute task completions? No? Well, regardless, here\u0027s an application written for you!"},{"lineNumber":6,"author":{"gitId":"WeiLiangLOL"},"content":""},{"lineNumber":7,"author":{"gitId":"WeiLiangLOL"},"content":"SimpleBot is a chat-operated task reminder system. Contains the bare minimum to get you through the day."},{"lineNumber":8,"author":{"gitId":"WeiLiangLOL"},"content":""},{"lineNumber":9,"author":{"gitId":"WeiLiangLOL"},"content":"## Installation Guide"},{"lineNumber":10,"author":{"gitId":"WeiLiangLOL"},"content":""},{"lineNumber":11,"author":{"gitId":"WeiLiangLOL"},"content":"- Install [Java 11](https://www.oracle.com/sg/java/technologies/javase-jdk11-downloads.html) on your machine."},{"lineNumber":12,"author":{"gitId":"WeiLiangLOL"},"content":"- Download the latest [release](https://github.com/WeiLiangLOL/ip/releases/latest)."},{"lineNumber":13,"author":{"gitId":"WeiLiangLOL"},"content":"- Run the jar executable."},{"lineNumber":14,"author":{"gitId":"-"},"content":""},{"lineNumber":15,"author":{"gitId":"WeiLiangLOL"},"content":"## Overview"},{"lineNumber":16,"author":{"gitId":"-"},"content":""},{"lineNumber":17,"author":{"gitId":"WeiLiangLOL"},"content":"![Ui](Ui.png)"},{"lineNumber":18,"author":{"gitId":"WeiLiangLOL"},"content":""},{"lineNumber":19,"author":{"gitId":"WeiLiangLOL"},"content":"### Commands Overview"},{"lineNumber":20,"author":{"gitId":"WeiLiangLOL"},"content":""},{"lineNumber":21,"author":{"gitId":"WeiLiangLOL"},"content":"Here\u0027s an overview of all the functions!"},{"lineNumber":22,"author":{"gitId":"WeiLiangLOL"},"content":""},{"lineNumber":23,"author":{"gitId":"WeiLiangLOL"},"content":"- `hello` Greets you and establishes friendliness."},{"lineNumber":24,"author":{"gitId":"WeiLiangLOL"},"content":"- `bye` Saves the given tasks."},{"lineNumber":25,"author":{"gitId":"WeiLiangLOL"},"content":"- `list` Prints current list of tasks."},{"lineNumber":26,"author":{"gitId":"WeiLiangLOL"},"content":"- `delete \u003cindex\u003e` Deletes task at given index."},{"lineNumber":27,"author":{"gitId":"WeiLiangLOL"},"content":"- `done \u003cindex\u003e` Marks task at given index to be done."},{"lineNumber":28,"author":{"gitId":"WeiLiangLOL"},"content":"- `todo \u003cdescription\u003e` Creates a generic to-do task."},{"lineNumber":29,"author":{"gitId":"WeiLiangLOL"},"content":"- `deadline \u003cdescription\u003e /by \u003cdate\u003e` Creates a task with a deadline."},{"lineNumber":30,"author":{"gitId":"WeiLiangLOL"},"content":"- `event \u003cdescription\u003e /at \u003cdate\u003e` Creates an event on given date."},{"lineNumber":31,"author":{"gitId":"WeiLiangLOL"},"content":"- `find \u003cdescription\u003e` Locates a task given a portion of the description."},{"lineNumber":32,"author":{"gitId":"WeiLiangLOL"},"content":"- `undo` Undo the most recent add or remove."},{"lineNumber":33,"author":{"gitId":"-"},"content":""},{"lineNumber":34,"author":{"gitId":"-"},"content":"## Usage"},{"lineNumber":35,"author":{"gitId":"-"},"content":""},{"lineNumber":36,"author":{"gitId":"WeiLiangLOL"},"content":"### `hello` - Greets you"},{"lineNumber":37,"author":{"gitId":"WeiLiangLOL"},"content":""},{"lineNumber":38,"author":{"gitId":"WeiLiangLOL"},"content":"Greets you, to keep things friendly."},{"lineNumber":39,"author":{"gitId":"WeiLiangLOL"},"content":""},{"lineNumber":40,"author":{"gitId":"WeiLiangLOL"},"content":"Example of usage:"},{"lineNumber":41,"author":{"gitId":"WeiLiangLOL"},"content":""},{"lineNumber":42,"author":{"gitId":"WeiLiangLOL"},"content":"`hello`"},{"lineNumber":43,"author":{"gitId":"WeiLiangLOL"},"content":""},{"lineNumber":44,"author":{"gitId":"WeiLiangLOL"},"content":"Sample reply:"},{"lineNumber":45,"author":{"gitId":"WeiLiangLOL"},"content":""},{"lineNumber":46,"author":{"gitId":"WeiLiangLOL"},"content":"```"},{"lineNumber":47,"author":{"gitId":"WeiLiangLOL"},"content":"Hello my name is SimpleBot!"},{"lineNumber":48,"author":{"gitId":"WeiLiangLOL"},"content":"```"},{"lineNumber":49,"author":{"gitId":"WeiLiangLOL"},"content":""},{"lineNumber":50,"author":{"gitId":"WeiLiangLOL"},"content":"---"},{"lineNumber":51,"author":{"gitId":"WeiLiangLOL"},"content":""},{"lineNumber":52,"author":{"gitId":"WeiLiangLOL"},"content":"### `bye` - Says goodbye and saves"},{"lineNumber":53,"author":{"gitId":"WeiLiangLOL"},"content":""},{"lineNumber":54,"author":{"gitId":"WeiLiangLOL"},"content":"Saves your task list as well as bid farewell."},{"lineNumber":55,"author":{"gitId":"WeiLiangLOL"},"content":""},{"lineNumber":56,"author":{"gitId":"WeiLiangLOL"},"content":"Example of usage:"},{"lineNumber":57,"author":{"gitId":"WeiLiangLOL"},"content":""},{"lineNumber":58,"author":{"gitId":"WeiLiangLOL"},"content":"`bye`"},{"lineNumber":59,"author":{"gitId":"-"},"content":""},{"lineNumber":60,"author":{"gitId":"WeiLiangLOL"},"content":"Sample reply:"},{"lineNumber":61,"author":{"gitId":"WeiLiangLOL"},"content":""},{"lineNumber":62,"author":{"gitId":"WeiLiangLOL"},"content":"```"},{"lineNumber":63,"author":{"gitId":"WeiLiangLOL"},"content":"Bye. Hope to see you again soon!"},{"lineNumber":64,"author":{"gitId":"WeiLiangLOL"},"content":"```"},{"lineNumber":65,"author":{"gitId":"WeiLiangLOL"},"content":""},{"lineNumber":66,"author":{"gitId":"WeiLiangLOL"},"content":"---"},{"lineNumber":67,"author":{"gitId":"WeiLiangLOL"},"content":""},{"lineNumber":68,"author":{"gitId":"WeiLiangLOL"},"content":"### `list` - Lists all tasks"},{"lineNumber":69,"author":{"gitId":"WeiLiangLOL"},"content":""},{"lineNumber":70,"author":{"gitId":"WeiLiangLOL"},"content":"Prints the current list of tasks added to the system."},{"lineNumber":71,"author":{"gitId":"-"},"content":""},{"lineNumber":72,"author":{"gitId":"-"},"content":"Example of usage: "},{"lineNumber":73,"author":{"gitId":"-"},"content":""},{"lineNumber":74,"author":{"gitId":"WeiLiangLOL"},"content":"`list`"},{"lineNumber":75,"author":{"gitId":"WeiLiangLOL"},"content":""},{"lineNumber":76,"author":{"gitId":"WeiLiangLOL"},"content":"Sample outcome:"},{"lineNumber":77,"author":{"gitId":"WeiLiangLOL"},"content":""},{"lineNumber":78,"author":{"gitId":"WeiLiangLOL"},"content":"```"},{"lineNumber":79,"author":{"gitId":"WeiLiangLOL"},"content":"Printing List!"},{"lineNumber":80,"author":{"gitId":"WeiLiangLOL"},"content":"1.[T][ ] Feed the dog"},{"lineNumber":81,"author":{"gitId":"WeiLiangLOL"},"content":"2.[T][X] Kiss a cat"},{"lineNumber":82,"author":{"gitId":"WeiLiangLOL"},"content":"```"},{"lineNumber":83,"author":{"gitId":"WeiLiangLOL"},"content":""},{"lineNumber":84,"author":{"gitId":"WeiLiangLOL"},"content":"---"},{"lineNumber":85,"author":{"gitId":"WeiLiangLOL"},"content":""},{"lineNumber":86,"author":{"gitId":"WeiLiangLOL"},"content":"### `delete \u003cindex\u003e` - Deletes task"},{"lineNumber":87,"author":{"gitId":"WeiLiangLOL"},"content":""},{"lineNumber":88,"author":{"gitId":"WeiLiangLOL"},"content":"Deletes a task at given index."},{"lineNumber":89,"author":{"gitId":"WeiLiangLOL"},"content":""},{"lineNumber":90,"author":{"gitId":"WeiLiangLOL"},"content":"Example of usage:"},{"lineNumber":91,"author":{"gitId":"WeiLiangLOL"},"content":""},{"lineNumber":92,"author":{"gitId":"WeiLiangLOL"},"content":"`delete 1`"},{"lineNumber":93,"author":{"gitId":"WeiLiangLOL"},"content":""},{"lineNumber":94,"author":{"gitId":"WeiLiangLOL"},"content":"Sample outcome:"},{"lineNumber":95,"author":{"gitId":"WeiLiangLOL"},"content":""},{"lineNumber":96,"author":{"gitId":"WeiLiangLOL"},"content":"```"},{"lineNumber":97,"author":{"gitId":"WeiLiangLOL"},"content":"Noted, I have removed this task."},{"lineNumber":98,"author":{"gitId":"WeiLiangLOL"},"content":"[T][ ] Eat apples"},{"lineNumber":99,"author":{"gitId":"WeiLiangLOL"},"content":"Now you have 5 tasks in the list."},{"lineNumber":100,"author":{"gitId":"WeiLiangLOL"},"content":"```"},{"lineNumber":101,"author":{"gitId":"WeiLiangLOL"},"content":""},{"lineNumber":102,"author":{"gitId":"WeiLiangLOL"},"content":"---"},{"lineNumber":103,"author":{"gitId":"WeiLiangLOL"},"content":""},{"lineNumber":104,"author":{"gitId":"WeiLiangLOL"},"content":"### `done \u003cindex\u003e` - Marks task done"},{"lineNumber":105,"author":{"gitId":"WeiLiangLOL"},"content":""},{"lineNumber":106,"author":{"gitId":"WeiLiangLOL"},"content":"Marks a task as completed."},{"lineNumber":107,"author":{"gitId":"WeiLiangLOL"},"content":""},{"lineNumber":108,"author":{"gitId":"WeiLiangLOL"},"content":"Example of usage:"},{"lineNumber":109,"author":{"gitId":"WeiLiangLOL"},"content":""},{"lineNumber":110,"author":{"gitId":"WeiLiangLOL"},"content":"`done 1`"},{"lineNumber":111,"author":{"gitId":"WeiLiangLOL"},"content":""},{"lineNumber":112,"author":{"gitId":"WeiLiangLOL"},"content":"Sample outcome:"},{"lineNumber":113,"author":{"gitId":"WeiLiangLOL"},"content":""},{"lineNumber":114,"author":{"gitId":"WeiLiangLOL"},"content":"```"},{"lineNumber":115,"author":{"gitId":"WeiLiangLOL"},"content":"Nice, I\u0027ve marked the task as done!"},{"lineNumber":116,"author":{"gitId":"WeiLiangLOL"},"content":"[T][X] Create a task"},{"lineNumber":117,"author":{"gitId":"WeiLiangLOL"},"content":"Now you have 1 tasks in the list."},{"lineNumber":118,"author":{"gitId":"WeiLiangLOL"},"content":"```"},{"lineNumber":119,"author":{"gitId":"WeiLiangLOL"},"content":""},{"lineNumber":120,"author":{"gitId":"WeiLiangLOL"},"content":"---"},{"lineNumber":121,"author":{"gitId":"WeiLiangLOL"},"content":""},{"lineNumber":122,"author":{"gitId":"WeiLiangLOL"},"content":"### `todo \u003cdescription\u003e` - Creates todo"},{"lineNumber":123,"author":{"gitId":"WeiLiangLOL"},"content":""},{"lineNumber":124,"author":{"gitId":"WeiLiangLOL"},"content":"Creates a generic todo task with given description."},{"lineNumber":125,"author":{"gitId":"WeiLiangLOL"},"content":""},{"lineNumber":126,"author":{"gitId":"WeiLiangLOL"},"content":"Example of usage:"},{"lineNumber":127,"author":{"gitId":"WeiLiangLOL"},"content":""},{"lineNumber":128,"author":{"gitId":"WeiLiangLOL"},"content":"`todo CS2103T iP`"},{"lineNumber":129,"author":{"gitId":"WeiLiangLOL"},"content":""},{"lineNumber":130,"author":{"gitId":"WeiLiangLOL"},"content":"Sample outcome:"},{"lineNumber":131,"author":{"gitId":"WeiLiangLOL"},"content":""},{"lineNumber":132,"author":{"gitId":"WeiLiangLOL"},"content":"```"},{"lineNumber":133,"author":{"gitId":"WeiLiangLOL"},"content":"Got it! I\u0027ve added this task."},{"lineNumber":134,"author":{"gitId":"WeiLiangLOL"},"content":"[T][ ] CS2103T iP"},{"lineNumber":135,"author":{"gitId":"WeiLiangLOL"},"content":"Now you have 103 tasks in the list."},{"lineNumber":136,"author":{"gitId":"WeiLiangLOL"},"content":"```"},{"lineNumber":137,"author":{"gitId":"WeiLiangLOL"},"content":""},{"lineNumber":138,"author":{"gitId":"WeiLiangLOL"},"content":"---"},{"lineNumber":139,"author":{"gitId":"WeiLiangLOL"},"content":""},{"lineNumber":140,"author":{"gitId":"WeiLiangLOL"},"content":"### `deadline \u003cdescription\u003e /by \u003cdate\u003e` - Creates deadline"},{"lineNumber":141,"author":{"gitId":"WeiLiangLOL"},"content":""},{"lineNumber":142,"author":{"gitId":"WeiLiangLOL"},"content":"Creates a task with a deadline, with the given description.  "},{"lineNumber":143,"author":{"gitId":"WeiLiangLOL"},"content":"(Note: Date needs to be in java date time format.)"},{"lineNumber":144,"author":{"gitId":"WeiLiangLOL"},"content":""},{"lineNumber":145,"author":{"gitId":"WeiLiangLOL"},"content":"Example of usage:"},{"lineNumber":146,"author":{"gitId":"WeiLiangLOL"},"content":""},{"lineNumber":147,"author":{"gitId":"WeiLiangLOL"},"content":"`deadline CS2103T iP /by 2021-02-19T23:59:59`"},{"lineNumber":148,"author":{"gitId":"WeiLiangLOL"},"content":""},{"lineNumber":149,"author":{"gitId":"WeiLiangLOL"},"content":"Sample outcome:"},{"lineNumber":150,"author":{"gitId":"WeiLiangLOL"},"content":""},{"lineNumber":151,"author":{"gitId":"WeiLiangLOL"},"content":"```"},{"lineNumber":152,"author":{"gitId":"WeiLiangLOL"},"content":"Got it! I\u0027ve added this task."},{"lineNumber":153,"author":{"gitId":"WeiLiangLOL"},"content":"[D][ ] CS2103T iP (by: 19 February 2021, 11:59PM)"},{"lineNumber":154,"author":{"gitId":"WeiLiangLOL"},"content":"Now you have 103 tasks in the list."},{"lineNumber":155,"author":{"gitId":"WeiLiangLOL"},"content":"```"},{"lineNumber":156,"author":{"gitId":"WeiLiangLOL"},"content":""},{"lineNumber":157,"author":{"gitId":"WeiLiangLOL"},"content":"---"},{"lineNumber":158,"author":{"gitId":"WeiLiangLOL"},"content":""},{"lineNumber":159,"author":{"gitId":"WeiLiangLOL"},"content":"### `event \u003cdescription\u003e /at \u003cdate\u003e` - Creates event"},{"lineNumber":160,"author":{"gitId":"WeiLiangLOL"},"content":""},{"lineNumber":161,"author":{"gitId":"WeiLiangLOL"},"content":"Creates a event with a date, with the given description.  "},{"lineNumber":162,"author":{"gitId":"WeiLiangLOL"},"content":"(Note: Date needs to be in java date time format.)"},{"lineNumber":163,"author":{"gitId":"WeiLiangLOL"},"content":""},{"lineNumber":164,"author":{"gitId":"WeiLiangLOL"},"content":"Example of usage:"},{"lineNumber":165,"author":{"gitId":"WeiLiangLOL"},"content":""},{"lineNumber":166,"author":{"gitId":"WeiLiangLOL"},"content":"`event Cry cause I think this is ugly /at 2021-02-20T00:00:00`"},{"lineNumber":167,"author":{"gitId":"WeiLiangLOL"},"content":""},{"lineNumber":168,"author":{"gitId":"WeiLiangLOL"},"content":"Sample outcome:"},{"lineNumber":169,"author":{"gitId":"WeiLiangLOL"},"content":""},{"lineNumber":170,"author":{"gitId":"WeiLiangLOL"},"content":"```"},{"lineNumber":171,"author":{"gitId":"WeiLiangLOL"},"content":"Got it! I\u0027ve added this task."},{"lineNumber":172,"author":{"gitId":"WeiLiangLOL"},"content":"[E][ ] Cry cause I think this is ugly (at: 20 February 2021, 12:00AM)"},{"lineNumber":173,"author":{"gitId":"WeiLiangLOL"},"content":"Now you have 104 tasks in the list."},{"lineNumber":174,"author":{"gitId":"WeiLiangLOL"},"content":"```"},{"lineNumber":175,"author":{"gitId":"WeiLiangLOL"},"content":""},{"lineNumber":176,"author":{"gitId":"WeiLiangLOL"},"content":"---"},{"lineNumber":177,"author":{"gitId":"WeiLiangLOL"},"content":""},{"lineNumber":178,"author":{"gitId":"WeiLiangLOL"},"content":"### `find \u003cdescription\u003e` - Finds tasks"},{"lineNumber":179,"author":{"gitId":"WeiLiangLOL"},"content":""},{"lineNumber":180,"author":{"gitId":"WeiLiangLOL"},"content":"Locate tasks containing the description."},{"lineNumber":181,"author":{"gitId":"WeiLiangLOL"},"content":""},{"lineNumber":182,"author":{"gitId":"WeiLiangLOL"},"content":"Example of usage:"},{"lineNumber":183,"author":{"gitId":"WeiLiangLOL"},"content":""},{"lineNumber":184,"author":{"gitId":"WeiLiangLOL"},"content":"`find Eat`"},{"lineNumber":185,"author":{"gitId":"WeiLiangLOL"},"content":""},{"lineNumber":186,"author":{"gitId":"WeiLiangLOL"},"content":"Sample outcome:"},{"lineNumber":187,"author":{"gitId":"WeiLiangLOL"},"content":""},{"lineNumber":188,"author":{"gitId":"WeiLiangLOL"},"content":"```"},{"lineNumber":189,"author":{"gitId":"WeiLiangLOL"},"content":"Printing matches!"},{"lineNumber":190,"author":{"gitId":"WeiLiangLOL"},"content":"1.[T][ ] Eat peaches"},{"lineNumber":191,"author":{"gitId":"WeiLiangLOL"},"content":"2.[T][ ] Eat bananas"},{"lineNumber":192,"author":{"gitId":"WeiLiangLOL"},"content":"```"},{"lineNumber":193,"author":{"gitId":"WeiLiangLOL"},"content":""},{"lineNumber":194,"author":{"gitId":"WeiLiangLOL"},"content":"---"},{"lineNumber":195,"author":{"gitId":"WeiLiangLOL"},"content":""},{"lineNumber":196,"author":{"gitId":"WeiLiangLOL"},"content":"### `undo` - Undos last action"},{"lineNumber":197,"author":{"gitId":"-"},"content":""},{"lineNumber":198,"author":{"gitId":"WeiLiangLOL"},"content":"Undo up to the previous action.  "},{"lineNumber":199,"author":{"gitId":"WeiLiangLOL"},"content":"(Note: Undo only works up to the most recent creation/deletion of task.)"},{"lineNumber":200,"author":{"gitId":"-"},"content":""},{"lineNumber":201,"author":{"gitId":"-"},"content":"Example of usage:"},{"lineNumber":202,"author":{"gitId":"-"},"content":""},{"lineNumber":203,"author":{"gitId":"WeiLiangLOL"},"content":"`undo`"},{"lineNumber":204,"author":{"gitId":"-"},"content":""},{"lineNumber":205,"author":{"gitId":"WeiLiangLOL"},"content":"Sample outcome:"},{"lineNumber":206,"author":{"gitId":"-"},"content":""},{"lineNumber":207,"author":{"gitId":"WeiLiangLOL"},"content":"```"},{"lineNumber":208,"author":{"gitId":"WeiLiangLOL"},"content":"Successfully undone previous action!"},{"lineNumber":209,"author":{"gitId":"WeiLiangLOL"},"content":"```"}],"authorContributionMap":{"WeiLiangLOL":192,"-":17}},{"path":"save.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"WeiLiangLOL"},"content":"T | 0 | Test"}],"authorContributionMap":{"WeiLiangLOL":1}},{"path":"src/main/java/com/weiliang/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"WeiLiangLOL"},"content":"package com.weiliang;"},{"lineNumber":2,"author":{"gitId":"WeiLiangLOL"},"content":""},{"lineNumber":3,"author":{"gitId":"WeiLiangLOL"},"content":"import com.weiliang.storage.Storage;"},{"lineNumber":4,"author":{"gitId":"WeiLiangLOL"},"content":"import com.weiliang.task.TaskList;"},{"lineNumber":5,"author":{"gitId":"WeiLiangLOL"},"content":""},{"lineNumber":6,"author":{"gitId":"WeiLiangLOL"},"content":"/**"},{"lineNumber":7,"author":{"gitId":"WeiLiangLOL"},"content":" * Main logic controller for a simple bot program."},{"lineNumber":8,"author":{"gitId":"WeiLiangLOL"},"content":" */"},{"lineNumber":9,"author":{"gitId":"WeiLiangLOL"},"content":"public class Duke {"},{"lineNumber":10,"author":{"gitId":"WeiLiangLOL"},"content":""},{"lineNumber":11,"author":{"gitId":"WeiLiangLOL"},"content":"    private Storage storage;"},{"lineNumber":12,"author":{"gitId":"WeiLiangLOL"},"content":"    private TaskList tasks;"},{"lineNumber":13,"author":{"gitId":"WeiLiangLOL"},"content":"    private Parser parser;"},{"lineNumber":14,"author":{"gitId":"WeiLiangLOL"},"content":""},{"lineNumber":15,"author":{"gitId":"WeiLiangLOL"},"content":"    private String name;"},{"lineNumber":16,"author":{"gitId":"WeiLiangLOL"},"content":""},{"lineNumber":17,"author":{"gitId":"WeiLiangLOL"},"content":"    /**"},{"lineNumber":18,"author":{"gitId":"WeiLiangLOL"},"content":"     * Initializes a new instance of the logic controller."},{"lineNumber":19,"author":{"gitId":"WeiLiangLOL"},"content":"     *"},{"lineNumber":20,"author":{"gitId":"WeiLiangLOL"},"content":"     * @param name The name of the associated AI."},{"lineNumber":21,"author":{"gitId":"WeiLiangLOL"},"content":"     */"},{"lineNumber":22,"author":{"gitId":"WeiLiangLOL"},"content":"    public Duke(String name) {"},{"lineNumber":23,"author":{"gitId":"WeiLiangLOL"},"content":"        this.name \u003d name;"},{"lineNumber":24,"author":{"gitId":"WeiLiangLOL"},"content":""},{"lineNumber":25,"author":{"gitId":"WeiLiangLOL"},"content":"        this.storage \u003d new Storage(\"save.txt\");"},{"lineNumber":26,"author":{"gitId":"WeiLiangLOL"},"content":"        try {"},{"lineNumber":27,"author":{"gitId":"WeiLiangLOL"},"content":"            this.tasks \u003d storage.loadTasks();"},{"lineNumber":28,"author":{"gitId":"WeiLiangLOL"},"content":"        } catch (DukeException e) {"},{"lineNumber":29,"author":{"gitId":"WeiLiangLOL"},"content":"            this.tasks \u003d new TaskList();"},{"lineNumber":30,"author":{"gitId":"WeiLiangLOL"},"content":"            e.printStackTrace();"},{"lineNumber":31,"author":{"gitId":"WeiLiangLOL"},"content":"        }"},{"lineNumber":32,"author":{"gitId":"WeiLiangLOL"},"content":"        this.parser \u003d new Parser(tasks);"},{"lineNumber":33,"author":{"gitId":"WeiLiangLOL"},"content":"    }"},{"lineNumber":34,"author":{"gitId":"WeiLiangLOL"},"content":""},{"lineNumber":35,"author":{"gitId":"WeiLiangLOL"},"content":"    /**"},{"lineNumber":36,"author":{"gitId":"WeiLiangLOL"},"content":"     * Returns the name the artificial intelligence."},{"lineNumber":37,"author":{"gitId":"WeiLiangLOL"},"content":"     *"},{"lineNumber":38,"author":{"gitId":"WeiLiangLOL"},"content":"     * @return The name."},{"lineNumber":39,"author":{"gitId":"WeiLiangLOL"},"content":"     */"},{"lineNumber":40,"author":{"gitId":"WeiLiangLOL"},"content":"    public String getName() {"},{"lineNumber":41,"author":{"gitId":"WeiLiangLOL"},"content":"        return name;"},{"lineNumber":42,"author":{"gitId":"WeiLiangLOL"},"content":"    }"},{"lineNumber":43,"author":{"gitId":"WeiLiangLOL"},"content":""},{"lineNumber":44,"author":{"gitId":"WeiLiangLOL"},"content":"    /**"},{"lineNumber":45,"author":{"gitId":"WeiLiangLOL"},"content":"     * Returns a {@link String} response after processing is done by the artificial intelligence."},{"lineNumber":46,"author":{"gitId":"WeiLiangLOL"},"content":"     *"},{"lineNumber":47,"author":{"gitId":"WeiLiangLOL"},"content":"     * @param input Input from user."},{"lineNumber":48,"author":{"gitId":"WeiLiangLOL"},"content":"     * @return Response from simple bot."},{"lineNumber":49,"author":{"gitId":"WeiLiangLOL"},"content":"     * @throws DukeException If unable to process input correctly."},{"lineNumber":50,"author":{"gitId":"WeiLiangLOL"},"content":"     */"},{"lineNumber":51,"author":{"gitId":"WeiLiangLOL"},"content":"    public String getResponse(String input) throws DukeException {"},{"lineNumber":52,"author":{"gitId":"WeiLiangLOL"},"content":"        // Clear leading and trailing whitespace"},{"lineNumber":53,"author":{"gitId":"WeiLiangLOL"},"content":"        input \u003d input.strip();"},{"lineNumber":54,"author":{"gitId":"WeiLiangLOL"},"content":""},{"lineNumber":55,"author":{"gitId":"WeiLiangLOL"},"content":"        // Greeting and exit"},{"lineNumber":56,"author":{"gitId":"WeiLiangLOL"},"content":"        if (input.equalsIgnoreCase(\"hello\")) {"},{"lineNumber":57,"author":{"gitId":"WeiLiangLOL"},"content":"            return \"Hello! My name is \" + name + \"!\";"},{"lineNumber":58,"author":{"gitId":"WeiLiangLOL"},"content":"        }"},{"lineNumber":59,"author":{"gitId":"WeiLiangLOL"},"content":"        if (input.equalsIgnoreCase(\"bye\")) {"},{"lineNumber":60,"author":{"gitId":"WeiLiangLOL"},"content":"            storage.storeFile(tasks);"},{"lineNumber":61,"author":{"gitId":"WeiLiangLOL"},"content":"            return \"Bye. Hope to see you again soon!\";"},{"lineNumber":62,"author":{"gitId":"WeiLiangLOL"},"content":"        }"},{"lineNumber":63,"author":{"gitId":"WeiLiangLOL"},"content":""},{"lineNumber":64,"author":{"gitId":"WeiLiangLOL"},"content":"        // Task related"},{"lineNumber":65,"author":{"gitId":"WeiLiangLOL"},"content":"        if (input.equals(\"list\")) {"},{"lineNumber":66,"author":{"gitId":"WeiLiangLOL"},"content":"            return parser.list();"},{"lineNumber":67,"author":{"gitId":"WeiLiangLOL"},"content":"        }"},{"lineNumber":68,"author":{"gitId":"WeiLiangLOL"},"content":"        if (input.startsWith(\"delete\")) {"},{"lineNumber":69,"author":{"gitId":"WeiLiangLOL"},"content":"            if (input.matches(\"^delete \\\\d+$\")) {"},{"lineNumber":70,"author":{"gitId":"WeiLiangLOL"},"content":"                int taskNo \u003d Integer.parseInt(input.replaceFirst(\"delete \", \"\")) - 1;"},{"lineNumber":71,"author":{"gitId":"WeiLiangLOL"},"content":"                return parser.delete(taskNo);"},{"lineNumber":72,"author":{"gitId":"WeiLiangLOL"},"content":"            } else {"},{"lineNumber":73,"author":{"gitId":"WeiLiangLOL"},"content":"                throw new DukeException(\"Missing delete index!\");"},{"lineNumber":74,"author":{"gitId":"WeiLiangLOL"},"content":"            }"},{"lineNumber":75,"author":{"gitId":"WeiLiangLOL"},"content":"        }"},{"lineNumber":76,"author":{"gitId":"WeiLiangLOL"},"content":"        if (input.startsWith(\"done\")) {"},{"lineNumber":77,"author":{"gitId":"WeiLiangLOL"},"content":"            if (input.matches(\"^done \\\\d+$\")) {"},{"lineNumber":78,"author":{"gitId":"WeiLiangLOL"},"content":"                int taskNo \u003d Integer.parseInt(input.substring(5)) - 1;"},{"lineNumber":79,"author":{"gitId":"WeiLiangLOL"},"content":"                return parser.markDone(taskNo);"},{"lineNumber":80,"author":{"gitId":"WeiLiangLOL"},"content":"            } else {"},{"lineNumber":81,"author":{"gitId":"WeiLiangLOL"},"content":"                throw new DukeException(\"Missing done index!\");"},{"lineNumber":82,"author":{"gitId":"WeiLiangLOL"},"content":"            }"},{"lineNumber":83,"author":{"gitId":"WeiLiangLOL"},"content":"        }"},{"lineNumber":84,"author":{"gitId":"WeiLiangLOL"},"content":"        if (input.startsWith(\"todo\")) {"},{"lineNumber":85,"author":{"gitId":"WeiLiangLOL"},"content":"            if (input.matches(\"^todo .+$\")) {"},{"lineNumber":86,"author":{"gitId":"WeiLiangLOL"},"content":"                input \u003d input.replaceFirst(\"todo \", \"\");"},{"lineNumber":87,"author":{"gitId":"WeiLiangLOL"},"content":"                return parser.createToDo(input);"},{"lineNumber":88,"author":{"gitId":"WeiLiangLOL"},"content":"            } else {"},{"lineNumber":89,"author":{"gitId":"WeiLiangLOL"},"content":"                throw new DukeException(\"The description of a todo cannot be empty!\");"},{"lineNumber":90,"author":{"gitId":"WeiLiangLOL"},"content":"            }"},{"lineNumber":91,"author":{"gitId":"WeiLiangLOL"},"content":"        }"},{"lineNumber":92,"author":{"gitId":"WeiLiangLOL"},"content":"        if (input.startsWith(\"deadline\")) {"},{"lineNumber":93,"author":{"gitId":"WeiLiangLOL"},"content":"            if (input.matches(\"^deadline .+ \\\\/by .+$\")) {"},{"lineNumber":94,"author":{"gitId":"WeiLiangLOL"},"content":"                String[] inputs \u003d input.replaceFirst(\"deadline \", \"\").split(\" /by \");"},{"lineNumber":95,"author":{"gitId":"WeiLiangLOL"},"content":"                return parser.createDeadline(inputs[0], inputs[1]);"},{"lineNumber":96,"author":{"gitId":"WeiLiangLOL"},"content":"            } else {"},{"lineNumber":97,"author":{"gitId":"WeiLiangLOL"},"content":"                throw new DukeException(\"The description of a deadline cannot be empty!\");"},{"lineNumber":98,"author":{"gitId":"WeiLiangLOL"},"content":"            }"},{"lineNumber":99,"author":{"gitId":"WeiLiangLOL"},"content":"        }"},{"lineNumber":100,"author":{"gitId":"WeiLiangLOL"},"content":"        if (input.startsWith(\"event\")) {"},{"lineNumber":101,"author":{"gitId":"WeiLiangLOL"},"content":"            if (input.matches(\"^event .+ \\\\/at .+$\")) {"},{"lineNumber":102,"author":{"gitId":"WeiLiangLOL"},"content":"                String[] inputs \u003d input.replaceFirst(\"event \", \"\").split(\" /at \");"},{"lineNumber":103,"author":{"gitId":"WeiLiangLOL"},"content":"                return parser.createEvent(inputs[0], inputs[1]);"},{"lineNumber":104,"author":{"gitId":"WeiLiangLOL"},"content":"            } else {"},{"lineNumber":105,"author":{"gitId":"WeiLiangLOL"},"content":"                throw new DukeException(\"The description of an event cannot be empty!\");"},{"lineNumber":106,"author":{"gitId":"WeiLiangLOL"},"content":"            }"},{"lineNumber":107,"author":{"gitId":"WeiLiangLOL"},"content":"        }"},{"lineNumber":108,"author":{"gitId":"WeiLiangLOL"},"content":"        if (input.startsWith(\"find\")) {"},{"lineNumber":109,"author":{"gitId":"WeiLiangLOL"},"content":"            if (input.matches(\"^find .+$\")) {"},{"lineNumber":110,"author":{"gitId":"WeiLiangLOL"},"content":"                String searchField \u003d input.substring(5);"},{"lineNumber":111,"author":{"gitId":"WeiLiangLOL"},"content":"                return parser.search(searchField);"},{"lineNumber":112,"author":{"gitId":"WeiLiangLOL"},"content":"            } else {"},{"lineNumber":113,"author":{"gitId":"WeiLiangLOL"},"content":"                throw new DukeException(\"Missing search information!\");"},{"lineNumber":114,"author":{"gitId":"WeiLiangLOL"},"content":"            }"},{"lineNumber":115,"author":{"gitId":"WeiLiangLOL"},"content":"        }"},{"lineNumber":116,"author":{"gitId":"WeiLiangLOL"},"content":"        if (input.equals(\"undo\")) {"},{"lineNumber":117,"author":{"gitId":"WeiLiangLOL"},"content":"            return parser.undo();"},{"lineNumber":118,"author":{"gitId":"WeiLiangLOL"},"content":"        }"},{"lineNumber":119,"author":{"gitId":"WeiLiangLOL"},"content":""},{"lineNumber":120,"author":{"gitId":"WeiLiangLOL"},"content":"        // Default"},{"lineNumber":121,"author":{"gitId":"WeiLiangLOL"},"content":"        throw new DukeException(\"Don\u0027t understand.\");"},{"lineNumber":122,"author":{"gitId":"WeiLiangLOL"},"content":"    }"},{"lineNumber":123,"author":{"gitId":"WeiLiangLOL"},"content":""},{"lineNumber":124,"author":{"gitId":"WeiLiangLOL"},"content":"}"}],"authorContributionMap":{"WeiLiangLOL":124}},{"path":"src/main/java/com/weiliang/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"WeiLiangLOL"},"content":"package com.weiliang;"},{"lineNumber":2,"author":{"gitId":"WeiLiangLOL"},"content":""},{"lineNumber":3,"author":{"gitId":"WeiLiangLOL"},"content":"/**"},{"lineNumber":4,"author":{"gitId":"WeiLiangLOL"},"content":" * Main wrapper class for {@link Duke} related exceptions."},{"lineNumber":5,"author":{"gitId":"WeiLiangLOL"},"content":" */"},{"lineNumber":6,"author":{"gitId":"WeiLiangLOL"},"content":"public class DukeException extends Exception {"},{"lineNumber":7,"author":{"gitId":"WeiLiangLOL"},"content":""},{"lineNumber":8,"author":{"gitId":"WeiLiangLOL"},"content":"    private static final long serialVersionUID \u003d 1L;"},{"lineNumber":9,"author":{"gitId":"WeiLiangLOL"},"content":""},{"lineNumber":10,"author":{"gitId":"WeiLiangLOL"},"content":"    /**"},{"lineNumber":11,"author":{"gitId":"WeiLiangLOL"},"content":"     * Creates an instance of the Duke exception."},{"lineNumber":12,"author":{"gitId":"WeiLiangLOL"},"content":"     *"},{"lineNumber":13,"author":{"gitId":"WeiLiangLOL"},"content":"     * @param message The description."},{"lineNumber":14,"author":{"gitId":"WeiLiangLOL"},"content":"     */"},{"lineNumber":15,"author":{"gitId":"WeiLiangLOL"},"content":"    public DukeException(String message) {"},{"lineNumber":16,"author":{"gitId":"WeiLiangLOL"},"content":"        super(message);"},{"lineNumber":17,"author":{"gitId":"WeiLiangLOL"},"content":"    }"},{"lineNumber":18,"author":{"gitId":"WeiLiangLOL"},"content":""},{"lineNumber":19,"author":{"gitId":"WeiLiangLOL"},"content":"}"}],"authorContributionMap":{"WeiLiangLOL":19}},{"path":"src/main/java/com/weiliang/Launcher.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"WeiLiangLOL"},"content":"package com.weiliang;"},{"lineNumber":2,"author":{"gitId":"WeiLiangLOL"},"content":""},{"lineNumber":3,"author":{"gitId":"WeiLiangLOL"},"content":"import javafx.application.Application;"},{"lineNumber":4,"author":{"gitId":"WeiLiangLOL"},"content":""},{"lineNumber":5,"author":{"gitId":"WeiLiangLOL"},"content":"/**"},{"lineNumber":6,"author":{"gitId":"WeiLiangLOL"},"content":" * Main application for launching graphic UI."},{"lineNumber":7,"author":{"gitId":"WeiLiangLOL"},"content":" */"},{"lineNumber":8,"author":{"gitId":"WeiLiangLOL"},"content":"public class Launcher {"},{"lineNumber":9,"author":{"gitId":"WeiLiangLOL"},"content":""},{"lineNumber":10,"author":{"gitId":"WeiLiangLOL"},"content":"    /**"},{"lineNumber":11,"author":{"gitId":"WeiLiangLOL"},"content":"     * The main function."},{"lineNumber":12,"author":{"gitId":"WeiLiangLOL"},"content":"     *"},{"lineNumber":13,"author":{"gitId":"WeiLiangLOL"},"content":"     * @param args The command line arguments."},{"lineNumber":14,"author":{"gitId":"WeiLiangLOL"},"content":"     */"},{"lineNumber":15,"author":{"gitId":"WeiLiangLOL"},"content":"    public static void main(String[] args) {"},{"lineNumber":16,"author":{"gitId":"WeiLiangLOL"},"content":"        Application.launch(Main.class, args);"},{"lineNumber":17,"author":{"gitId":"WeiLiangLOL"},"content":"    }"},{"lineNumber":18,"author":{"gitId":"WeiLiangLOL"},"content":""},{"lineNumber":19,"author":{"gitId":"WeiLiangLOL"},"content":"}"}],"authorContributionMap":{"WeiLiangLOL":19}},{"path":"src/main/java/com/weiliang/Main.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"WeiLiangLOL"},"content":"package com.weiliang;"},{"lineNumber":2,"author":{"gitId":"WeiLiangLOL"},"content":""},{"lineNumber":3,"author":{"gitId":"WeiLiangLOL"},"content":"import java.io.IOException;"},{"lineNumber":4,"author":{"gitId":"WeiLiangLOL"},"content":""},{"lineNumber":5,"author":{"gitId":"WeiLiangLOL"},"content":"import com.weiliang.ui.MainWindow;"},{"lineNumber":6,"author":{"gitId":"WeiLiangLOL"},"content":""},{"lineNumber":7,"author":{"gitId":"WeiLiangLOL"},"content":"import javafx.application.Application;"},{"lineNumber":8,"author":{"gitId":"WeiLiangLOL"},"content":"import javafx.fxml.FXMLLoader;"},{"lineNumber":9,"author":{"gitId":"WeiLiangLOL"},"content":"import javafx.scene.Scene;"},{"lineNumber":10,"author":{"gitId":"WeiLiangLOL"},"content":"import javafx.scene.layout.AnchorPane;"},{"lineNumber":11,"author":{"gitId":"WeiLiangLOL"},"content":"import javafx.stage.Stage;"},{"lineNumber":12,"author":{"gitId":"WeiLiangLOL"},"content":""},{"lineNumber":13,"author":{"gitId":"WeiLiangLOL"},"content":"/**"},{"lineNumber":14,"author":{"gitId":"WeiLiangLOL"},"content":" * Main GUI for bot using FXML."},{"lineNumber":15,"author":{"gitId":"WeiLiangLOL"},"content":" */"},{"lineNumber":16,"author":{"gitId":"WeiLiangLOL"},"content":"public class Main extends Application {"},{"lineNumber":17,"author":{"gitId":"WeiLiangLOL"},"content":""},{"lineNumber":18,"author":{"gitId":"WeiLiangLOL"},"content":"    private final Duke duke;"},{"lineNumber":19,"author":{"gitId":"WeiLiangLOL"},"content":""},{"lineNumber":20,"author":{"gitId":"WeiLiangLOL"},"content":"    /**"},{"lineNumber":21,"author":{"gitId":"WeiLiangLOL"},"content":"     * Instantiates the JavaFX application."},{"lineNumber":22,"author":{"gitId":"WeiLiangLOL"},"content":"     */"},{"lineNumber":23,"author":{"gitId":"WeiLiangLOL"},"content":"    public Main() {"},{"lineNumber":24,"author":{"gitId":"WeiLiangLOL"},"content":"        this.duke \u003d new Duke(\"SimpleBot\");"},{"lineNumber":25,"author":{"gitId":"WeiLiangLOL"},"content":"    }"},{"lineNumber":26,"author":{"gitId":"WeiLiangLOL"},"content":""},{"lineNumber":27,"author":{"gitId":"WeiLiangLOL"},"content":"    @Override"},{"lineNumber":28,"author":{"gitId":"WeiLiangLOL"},"content":"    public void start(Stage stage) {"},{"lineNumber":29,"author":{"gitId":"WeiLiangLOL"},"content":"        try {"},{"lineNumber":30,"author":{"gitId":"WeiLiangLOL"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(Main.class.getResource(\"/view/MainWindow.fxml\"));"},{"lineNumber":31,"author":{"gitId":"WeiLiangLOL"},"content":""},{"lineNumber":32,"author":{"gitId":"WeiLiangLOL"},"content":"            // Set up scene information"},{"lineNumber":33,"author":{"gitId":"WeiLiangLOL"},"content":"            AnchorPane ap \u003d fxmlLoader.load();"},{"lineNumber":34,"author":{"gitId":"WeiLiangLOL"},"content":"            Scene scene \u003d new Scene(ap);"},{"lineNumber":35,"author":{"gitId":"WeiLiangLOL"},"content":"            stage.setTitle(duke.getName());"},{"lineNumber":36,"author":{"gitId":"WeiLiangLOL"},"content":"            stage.setResizable(false);"},{"lineNumber":37,"author":{"gitId":"WeiLiangLOL"},"content":"            stage.setScene(scene);"},{"lineNumber":38,"author":{"gitId":"WeiLiangLOL"},"content":""},{"lineNumber":39,"author":{"gitId":"WeiLiangLOL"},"content":"            fxmlLoader.\u003cMainWindow\u003egetController().setDuke(duke);"},{"lineNumber":40,"author":{"gitId":"WeiLiangLOL"},"content":"            stage.show();"},{"lineNumber":41,"author":{"gitId":"WeiLiangLOL"},"content":"        } catch (IOException e) {"},{"lineNumber":42,"author":{"gitId":"WeiLiangLOL"},"content":"            e.printStackTrace();"},{"lineNumber":43,"author":{"gitId":"WeiLiangLOL"},"content":"        }"},{"lineNumber":44,"author":{"gitId":"WeiLiangLOL"},"content":"    }"},{"lineNumber":45,"author":{"gitId":"WeiLiangLOL"},"content":""},{"lineNumber":46,"author":{"gitId":"WeiLiangLOL"},"content":"}"}],"authorContributionMap":{"WeiLiangLOL":46}},{"path":"src/main/java/com/weiliang/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"WeiLiangLOL"},"content":"package com.weiliang;"},{"lineNumber":2,"author":{"gitId":"WeiLiangLOL"},"content":""},{"lineNumber":3,"author":{"gitId":"WeiLiangLOL"},"content":"import com.weiliang.task.Deadline;"},{"lineNumber":4,"author":{"gitId":"WeiLiangLOL"},"content":"import com.weiliang.task.Event;"},{"lineNumber":5,"author":{"gitId":"WeiLiangLOL"},"content":"import com.weiliang.task.Task;"},{"lineNumber":6,"author":{"gitId":"WeiLiangLOL"},"content":"import com.weiliang.task.TaskList;"},{"lineNumber":7,"author":{"gitId":"WeiLiangLOL"},"content":""},{"lineNumber":8,"author":{"gitId":"WeiLiangLOL"},"content":"/**"},{"lineNumber":9,"author":{"gitId":"WeiLiangLOL"},"content":" * Handles command related operations."},{"lineNumber":10,"author":{"gitId":"WeiLiangLOL"},"content":" */"},{"lineNumber":11,"author":{"gitId":"WeiLiangLOL"},"content":"public class Parser {"},{"lineNumber":12,"author":{"gitId":"WeiLiangLOL"},"content":""},{"lineNumber":13,"author":{"gitId":"WeiLiangLOL"},"content":"    private final TaskList tasks;"},{"lineNumber":14,"author":{"gitId":"WeiLiangLOL"},"content":""},{"lineNumber":15,"author":{"gitId":"WeiLiangLOL"},"content":"    /**"},{"lineNumber":16,"author":{"gitId":"WeiLiangLOL"},"content":"     * Instantiates a new parser object for operating commands."},{"lineNumber":17,"author":{"gitId":"WeiLiangLOL"},"content":"     *"},{"lineNumber":18,"author":{"gitId":"WeiLiangLOL"},"content":"     * @param tasks Task list to handle."},{"lineNumber":19,"author":{"gitId":"WeiLiangLOL"},"content":"     */"},{"lineNumber":20,"author":{"gitId":"WeiLiangLOL"},"content":"    public Parser(TaskList tasks) {"},{"lineNumber":21,"author":{"gitId":"WeiLiangLOL"},"content":"        this.tasks \u003d tasks;"},{"lineNumber":22,"author":{"gitId":"WeiLiangLOL"},"content":"    }"},{"lineNumber":23,"author":{"gitId":"WeiLiangLOL"},"content":""},{"lineNumber":24,"author":{"gitId":"WeiLiangLOL"},"content":"    /**"},{"lineNumber":25,"author":{"gitId":"WeiLiangLOL"},"content":"     * Returns a reply containing list of tasks."},{"lineNumber":26,"author":{"gitId":"WeiLiangLOL"},"content":"     *"},{"lineNumber":27,"author":{"gitId":"WeiLiangLOL"},"content":"     * @return Formatted reply."},{"lineNumber":28,"author":{"gitId":"WeiLiangLOL"},"content":"     * @throws DukeException If unable to fetch from task list."},{"lineNumber":29,"author":{"gitId":"WeiLiangLOL"},"content":"     */"},{"lineNumber":30,"author":{"gitId":"WeiLiangLOL"},"content":"    public String list() throws DukeException {"},{"lineNumber":31,"author":{"gitId":"WeiLiangLOL"},"content":"        String message \u003d \"Printing list!\";"},{"lineNumber":32,"author":{"gitId":"WeiLiangLOL"},"content":"        for (int i \u003d 0; i \u003c tasks.size(); i++) {"},{"lineNumber":33,"author":{"gitId":"WeiLiangLOL"},"content":"            message +\u003d \"\\n\" + (i + 1) + \".\" + tasks.get(i);"},{"lineNumber":34,"author":{"gitId":"WeiLiangLOL"},"content":"        }"},{"lineNumber":35,"author":{"gitId":"WeiLiangLOL"},"content":"        return message;"},{"lineNumber":36,"author":{"gitId":"WeiLiangLOL"},"content":"    }"},{"lineNumber":37,"author":{"gitId":"WeiLiangLOL"},"content":""},{"lineNumber":38,"author":{"gitId":"WeiLiangLOL"},"content":"    /**"},{"lineNumber":39,"author":{"gitId":"WeiLiangLOL"},"content":"     * Returns the bot\u0027s response after deleting task with given index."},{"lineNumber":40,"author":{"gitId":"WeiLiangLOL"},"content":"     *"},{"lineNumber":41,"author":{"gitId":"WeiLiangLOL"},"content":"     * @param index The index of the task in the task list."},{"lineNumber":42,"author":{"gitId":"WeiLiangLOL"},"content":"     * @return The bot\u0027s response."},{"lineNumber":43,"author":{"gitId":"WeiLiangLOL"},"content":"     * @throws DukeException If the task cannot be removed."},{"lineNumber":44,"author":{"gitId":"WeiLiangLOL"},"content":"     */"},{"lineNumber":45,"author":{"gitId":"WeiLiangLOL"},"content":"    public String delete(int index) throws DukeException {"},{"lineNumber":46,"author":{"gitId":"WeiLiangLOL"},"content":"        // Mark complete"},{"lineNumber":47,"author":{"gitId":"WeiLiangLOL"},"content":"        Task task \u003d tasks.remove(index);"},{"lineNumber":48,"author":{"gitId":"WeiLiangLOL"},"content":""},{"lineNumber":49,"author":{"gitId":"WeiLiangLOL"},"content":"        String message \u003d \"Noted, I have removed this task.\";"},{"lineNumber":50,"author":{"gitId":"WeiLiangLOL"},"content":"        message +\u003d \"\\n\" + task;"},{"lineNumber":51,"author":{"gitId":"WeiLiangLOL"},"content":"        message +\u003d \"\\n\" + \"Now you have \" + tasks.size() + \" tasks in the list.\";"},{"lineNumber":52,"author":{"gitId":"WeiLiangLOL"},"content":"        return message;"},{"lineNumber":53,"author":{"gitId":"WeiLiangLOL"},"content":"    }"},{"lineNumber":54,"author":{"gitId":"WeiLiangLOL"},"content":""},{"lineNumber":55,"author":{"gitId":"WeiLiangLOL"},"content":"    /**"},{"lineNumber":56,"author":{"gitId":"WeiLiangLOL"},"content":"     * Returns a bot\u0027s response after marking a done as complete."},{"lineNumber":57,"author":{"gitId":"WeiLiangLOL"},"content":"     *"},{"lineNumber":58,"author":{"gitId":"WeiLiangLOL"},"content":"     * @param index The position of the task in the task list to mark."},{"lineNumber":59,"author":{"gitId":"WeiLiangLOL"},"content":"     * @return The bot\u0027s response."},{"lineNumber":60,"author":{"gitId":"WeiLiangLOL"},"content":"     * @throws DukeException If the task cannot be marked as complete."},{"lineNumber":61,"author":{"gitId":"WeiLiangLOL"},"content":"     */"},{"lineNumber":62,"author":{"gitId":"WeiLiangLOL"},"content":"    public String markDone(int index) throws DukeException {"},{"lineNumber":63,"author":{"gitId":"WeiLiangLOL"},"content":"        // Mark complete"},{"lineNumber":64,"author":{"gitId":"WeiLiangLOL"},"content":"        Task task \u003d tasks.get(index);"},{"lineNumber":65,"author":{"gitId":"WeiLiangLOL"},"content":"        task.markComplete();"},{"lineNumber":66,"author":{"gitId":"WeiLiangLOL"},"content":""},{"lineNumber":67,"author":{"gitId":"WeiLiangLOL"},"content":"        assert task.isComplete() : \"Failed to mark done\";"},{"lineNumber":68,"author":{"gitId":"WeiLiangLOL"},"content":""},{"lineNumber":69,"author":{"gitId":"WeiLiangLOL"},"content":"        String message \u003d \"Nice, I\u0027ve marked the task as done!\";"},{"lineNumber":70,"author":{"gitId":"WeiLiangLOL"},"content":"        message +\u003d \"\\n\" + task;"},{"lineNumber":71,"author":{"gitId":"WeiLiangLOL"},"content":"        message +\u003d \"\\n\" + \"Now you have \" + tasks.size() + \" tasks in the list.\";"},{"lineNumber":72,"author":{"gitId":"WeiLiangLOL"},"content":"        return message;"},{"lineNumber":73,"author":{"gitId":"WeiLiangLOL"},"content":"    }"},{"lineNumber":74,"author":{"gitId":"WeiLiangLOL"},"content":""},{"lineNumber":75,"author":{"gitId":"WeiLiangLOL"},"content":"    /**"},{"lineNumber":76,"author":{"gitId":"WeiLiangLOL"},"content":"     * Returns the bot\u0027s response after creating a to-do task."},{"lineNumber":77,"author":{"gitId":"WeiLiangLOL"},"content":"     *"},{"lineNumber":78,"author":{"gitId":"WeiLiangLOL"},"content":"     * @param description The description of the task."},{"lineNumber":79,"author":{"gitId":"WeiLiangLOL"},"content":"     * @return The bot\u0027s response."},{"lineNumber":80,"author":{"gitId":"WeiLiangLOL"},"content":"     */"},{"lineNumber":81,"author":{"gitId":"WeiLiangLOL"},"content":"    public String createToDo(String description) {"},{"lineNumber":82,"author":{"gitId":"WeiLiangLOL"},"content":"        Task task \u003d new Task(description);"},{"lineNumber":83,"author":{"gitId":"WeiLiangLOL"},"content":"        tasks.add(task);"},{"lineNumber":84,"author":{"gitId":"WeiLiangLOL"},"content":""},{"lineNumber":85,"author":{"gitId":"WeiLiangLOL"},"content":"        assert tasks.contains(task) : \"Failed to add task\";"},{"lineNumber":86,"author":{"gitId":"WeiLiangLOL"},"content":""},{"lineNumber":87,"author":{"gitId":"WeiLiangLOL"},"content":"        String message \u003d \"Got it! I\u0027ve added this task.\";"},{"lineNumber":88,"author":{"gitId":"WeiLiangLOL"},"content":"        message +\u003d \"\\n\" + task;"},{"lineNumber":89,"author":{"gitId":"WeiLiangLOL"},"content":"        message +\u003d \"\\n\" + \"Now you have \" + tasks.size() + \" tasks in the list.\";"},{"lineNumber":90,"author":{"gitId":"WeiLiangLOL"},"content":"        return message;"},{"lineNumber":91,"author":{"gitId":"WeiLiangLOL"},"content":"    }"},{"lineNumber":92,"author":{"gitId":"WeiLiangLOL"},"content":""},{"lineNumber":93,"author":{"gitId":"WeiLiangLOL"},"content":"    /**"},{"lineNumber":94,"author":{"gitId":"WeiLiangLOL"},"content":"     * Returns the bot\u0027s response after creating a deadline task."},{"lineNumber":95,"author":{"gitId":"WeiLiangLOL"},"content":"     *"},{"lineNumber":96,"author":{"gitId":"WeiLiangLOL"},"content":"     * @param description The description of the task."},{"lineNumber":97,"author":{"gitId":"WeiLiangLOL"},"content":"     * @param time The time of the task."},{"lineNumber":98,"author":{"gitId":"WeiLiangLOL"},"content":"     * @return The bot\u0027s reply."},{"lineNumber":99,"author":{"gitId":"WeiLiangLOL"},"content":"     * @throws DukeException If the deadline task can\u0027t be created."},{"lineNumber":100,"author":{"gitId":"WeiLiangLOL"},"content":"     */"},{"lineNumber":101,"author":{"gitId":"WeiLiangLOL"},"content":"    public String createDeadline(String description, String time) throws DukeException {"},{"lineNumber":102,"author":{"gitId":"WeiLiangLOL"},"content":"        Task task \u003d new Deadline(description, time);"},{"lineNumber":103,"author":{"gitId":"WeiLiangLOL"},"content":"        tasks.add(task);"},{"lineNumber":104,"author":{"gitId":"WeiLiangLOL"},"content":""},{"lineNumber":105,"author":{"gitId":"WeiLiangLOL"},"content":"        assert tasks.contains(task) : \"Failed to add deadline\";"},{"lineNumber":106,"author":{"gitId":"WeiLiangLOL"},"content":""},{"lineNumber":107,"author":{"gitId":"WeiLiangLOL"},"content":"        String message \u003d \"Got it! I\u0027ve added this task.\";"},{"lineNumber":108,"author":{"gitId":"WeiLiangLOL"},"content":"        message +\u003d \"\\n\" + task;"},{"lineNumber":109,"author":{"gitId":"WeiLiangLOL"},"content":"        message +\u003d \"\\n\" + \"Now you have \" + tasks.size() + \" tasks in the list.\";"},{"lineNumber":110,"author":{"gitId":"WeiLiangLOL"},"content":"        return message;"},{"lineNumber":111,"author":{"gitId":"WeiLiangLOL"},"content":"    }"},{"lineNumber":112,"author":{"gitId":"WeiLiangLOL"},"content":""},{"lineNumber":113,"author":{"gitId":"WeiLiangLOL"},"content":"    /**"},{"lineNumber":114,"author":{"gitId":"WeiLiangLOL"},"content":"     * Returns the bot\u0027s response after creating an event task."},{"lineNumber":115,"author":{"gitId":"WeiLiangLOL"},"content":"     *"},{"lineNumber":116,"author":{"gitId":"WeiLiangLOL"},"content":"     * @param description The description of the task."},{"lineNumber":117,"author":{"gitId":"WeiLiangLOL"},"content":"     * @param time The time of the task."},{"lineNumber":118,"author":{"gitId":"WeiLiangLOL"},"content":"     * @return The bot\u0027s reply."},{"lineNumber":119,"author":{"gitId":"WeiLiangLOL"},"content":"     * @throws DukeException If the event task can\u0027t be created."},{"lineNumber":120,"author":{"gitId":"WeiLiangLOL"},"content":"     */"},{"lineNumber":121,"author":{"gitId":"WeiLiangLOL"},"content":"    public String createEvent(String description, String time) throws DukeException {"},{"lineNumber":122,"author":{"gitId":"WeiLiangLOL"},"content":"        Task task \u003d new Event(description, time);"},{"lineNumber":123,"author":{"gitId":"WeiLiangLOL"},"content":"        tasks.add(task);"},{"lineNumber":124,"author":{"gitId":"WeiLiangLOL"},"content":""},{"lineNumber":125,"author":{"gitId":"WeiLiangLOL"},"content":"        assert tasks.contains(task) : \"Failed to add event\";"},{"lineNumber":126,"author":{"gitId":"WeiLiangLOL"},"content":""},{"lineNumber":127,"author":{"gitId":"WeiLiangLOL"},"content":"        String message \u003d \"Got it! I\u0027ve added this task.\";"},{"lineNumber":128,"author":{"gitId":"WeiLiangLOL"},"content":"        message +\u003d \"\\n\" + task;"},{"lineNumber":129,"author":{"gitId":"WeiLiangLOL"},"content":"        message +\u003d \"\\n\" + \"Now you have \" + tasks.size() + \" tasks in the list.\";"},{"lineNumber":130,"author":{"gitId":"WeiLiangLOL"},"content":"        return message;"},{"lineNumber":131,"author":{"gitId":"WeiLiangLOL"},"content":"    }"},{"lineNumber":132,"author":{"gitId":"WeiLiangLOL"},"content":""},{"lineNumber":133,"author":{"gitId":"WeiLiangLOL"},"content":"    /**"},{"lineNumber":134,"author":{"gitId":"WeiLiangLOL"},"content":"     * Returns the bot\u0027s response after searching through task list for matching task description."},{"lineNumber":135,"author":{"gitId":"WeiLiangLOL"},"content":"     *"},{"lineNumber":136,"author":{"gitId":"WeiLiangLOL"},"content":"     * @param searchField The search string."},{"lineNumber":137,"author":{"gitId":"WeiLiangLOL"},"content":"     * @return The bot\u0027s response."},{"lineNumber":138,"author":{"gitId":"WeiLiangLOL"},"content":"     */"},{"lineNumber":139,"author":{"gitId":"WeiLiangLOL"},"content":"    public String search(String searchField) {"},{"lineNumber":140,"author":{"gitId":"WeiLiangLOL"},"content":"        String message \u003d \"Printing matches!\";"},{"lineNumber":141,"author":{"gitId":"WeiLiangLOL"},"content":"        int i \u003d 0;"},{"lineNumber":142,"author":{"gitId":"WeiLiangLOL"},"content":"        for (Task task : tasks) {"},{"lineNumber":143,"author":{"gitId":"WeiLiangLOL"},"content":"            if (task.getDescription().contains(searchField)) {"},{"lineNumber":144,"author":{"gitId":"WeiLiangLOL"},"content":"                message +\u003d \"\\n\" + (i + 1) + \".\" + task;"},{"lineNumber":145,"author":{"gitId":"WeiLiangLOL"},"content":"            }"},{"lineNumber":146,"author":{"gitId":"WeiLiangLOL"},"content":"            i++;"},{"lineNumber":147,"author":{"gitId":"WeiLiangLOL"},"content":"        }"},{"lineNumber":148,"author":{"gitId":"WeiLiangLOL"},"content":"        if (i \u003d\u003d 0) {"},{"lineNumber":149,"author":{"gitId":"WeiLiangLOL"},"content":"            message +\u003d \"\\nNo results found!\";"},{"lineNumber":150,"author":{"gitId":"WeiLiangLOL"},"content":"        }"},{"lineNumber":151,"author":{"gitId":"WeiLiangLOL"},"content":"        return message;"},{"lineNumber":152,"author":{"gitId":"WeiLiangLOL"},"content":"    }"},{"lineNumber":153,"author":{"gitId":"WeiLiangLOL"},"content":""},{"lineNumber":154,"author":{"gitId":"WeiLiangLOL"},"content":"    /**"},{"lineNumber":155,"author":{"gitId":"WeiLiangLOL"},"content":"     * Returns the bot\u0027s reply after undoing the previous action."},{"lineNumber":156,"author":{"gitId":"WeiLiangLOL"},"content":"     *"},{"lineNumber":157,"author":{"gitId":"WeiLiangLOL"},"content":"     * @return The bot\u0027s reply."},{"lineNumber":158,"author":{"gitId":"WeiLiangLOL"},"content":"     * @throws DukeException If unable to undo."},{"lineNumber":159,"author":{"gitId":"WeiLiangLOL"},"content":"     */"},{"lineNumber":160,"author":{"gitId":"WeiLiangLOL"},"content":"    public String undo() throws DukeException {"},{"lineNumber":161,"author":{"gitId":"WeiLiangLOL"},"content":"        tasks.undo();"},{"lineNumber":162,"author":{"gitId":"WeiLiangLOL"},"content":"        return \"Successfully undone previous action!\";"},{"lineNumber":163,"author":{"gitId":"WeiLiangLOL"},"content":"    }"},{"lineNumber":164,"author":{"gitId":"WeiLiangLOL"},"content":"}"}],"authorContributionMap":{"WeiLiangLOL":164}},{"path":"src/main/java/com/weiliang/storage/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"WeiLiangLOL"},"content":"package com.weiliang.storage;"},{"lineNumber":2,"author":{"gitId":"WeiLiangLOL"},"content":""},{"lineNumber":3,"author":{"gitId":"WeiLiangLOL"},"content":"import java.io.BufferedReader;"},{"lineNumber":4,"author":{"gitId":"WeiLiangLOL"},"content":"import java.io.BufferedWriter;"},{"lineNumber":5,"author":{"gitId":"WeiLiangLOL"},"content":"import java.io.File;"},{"lineNumber":6,"author":{"gitId":"WeiLiangLOL"},"content":"import java.io.FileReader;"},{"lineNumber":7,"author":{"gitId":"WeiLiangLOL"},"content":"import java.io.FileWriter;"},{"lineNumber":8,"author":{"gitId":"WeiLiangLOL"},"content":"import java.io.IOException;"},{"lineNumber":9,"author":{"gitId":"WeiLiangLOL"},"content":""},{"lineNumber":10,"author":{"gitId":"WeiLiangLOL"},"content":"import com.weiliang.DukeException;"},{"lineNumber":11,"author":{"gitId":"WeiLiangLOL"},"content":"import com.weiliang.task.Deadline;"},{"lineNumber":12,"author":{"gitId":"WeiLiangLOL"},"content":"import com.weiliang.task.Event;"},{"lineNumber":13,"author":{"gitId":"WeiLiangLOL"},"content":"import com.weiliang.task.Task;"},{"lineNumber":14,"author":{"gitId":"WeiLiangLOL"},"content":"import com.weiliang.task.TaskList;"},{"lineNumber":15,"author":{"gitId":"WeiLiangLOL"},"content":""},{"lineNumber":16,"author":{"gitId":"WeiLiangLOL"},"content":"/**"},{"lineNumber":17,"author":{"gitId":"WeiLiangLOL"},"content":" * The main text-based storage facility."},{"lineNumber":18,"author":{"gitId":"WeiLiangLOL"},"content":" */"},{"lineNumber":19,"author":{"gitId":"WeiLiangLOL"},"content":"public class Storage {"},{"lineNumber":20,"author":{"gitId":"WeiLiangLOL"},"content":""},{"lineNumber":21,"author":{"gitId":"WeiLiangLOL"},"content":"    /** The name of the file to store to. Does not include file extension. */"},{"lineNumber":22,"author":{"gitId":"WeiLiangLOL"},"content":"    private String fileName;"},{"lineNumber":23,"author":{"gitId":"WeiLiangLOL"},"content":""},{"lineNumber":24,"author":{"gitId":"WeiLiangLOL"},"content":"    /**"},{"lineNumber":25,"author":{"gitId":"WeiLiangLOL"},"content":"     * Initializes a new storage instance."},{"lineNumber":26,"author":{"gitId":"WeiLiangLOL"},"content":"     *"},{"lineNumber":27,"author":{"gitId":"WeiLiangLOL"},"content":"     * @param fileName File name of text document."},{"lineNumber":28,"author":{"gitId":"WeiLiangLOL"},"content":"     */"},{"lineNumber":29,"author":{"gitId":"WeiLiangLOL"},"content":"    public Storage(String fileName) {"},{"lineNumber":30,"author":{"gitId":"WeiLiangLOL"},"content":"        this.fileName \u003d fileName;"},{"lineNumber":31,"author":{"gitId":"WeiLiangLOL"},"content":"    }"},{"lineNumber":32,"author":{"gitId":"WeiLiangLOL"},"content":""},{"lineNumber":33,"author":{"gitId":"WeiLiangLOL"},"content":"    /**"},{"lineNumber":34,"author":{"gitId":"WeiLiangLOL"},"content":"     * Stores a list of tasks into text documents."},{"lineNumber":35,"author":{"gitId":"WeiLiangLOL"},"content":"     *"},{"lineNumber":36,"author":{"gitId":"WeiLiangLOL"},"content":"     * @param tasks Task list."},{"lineNumber":37,"author":{"gitId":"WeiLiangLOL"},"content":"     */"},{"lineNumber":38,"author":{"gitId":"WeiLiangLOL"},"content":"    public void storeFile(TaskList tasks) {"},{"lineNumber":39,"author":{"gitId":"WeiLiangLOL"},"content":"        try (BufferedWriter bufferedWriter \u003d new BufferedWriter(new FileWriter(fileName))) {"},{"lineNumber":40,"author":{"gitId":"WeiLiangLOL"},"content":"            for (Task task : tasks) {"},{"lineNumber":41,"author":{"gitId":"WeiLiangLOL"},"content":"                bufferedWriter.write(task.toFormattedString());"},{"lineNumber":42,"author":{"gitId":"WeiLiangLOL"},"content":"                bufferedWriter.newLine();"},{"lineNumber":43,"author":{"gitId":"WeiLiangLOL"},"content":"            }"},{"lineNumber":44,"author":{"gitId":"WeiLiangLOL"},"content":"        } catch (IOException e) {"},{"lineNumber":45,"author":{"gitId":"WeiLiangLOL"},"content":"            e.printStackTrace();"},{"lineNumber":46,"author":{"gitId":"WeiLiangLOL"},"content":"        }"},{"lineNumber":47,"author":{"gitId":"WeiLiangLOL"},"content":"    }"},{"lineNumber":48,"author":{"gitId":"WeiLiangLOL"},"content":""},{"lineNumber":49,"author":{"gitId":"WeiLiangLOL"},"content":"    /**"},{"lineNumber":50,"author":{"gitId":"WeiLiangLOL"},"content":"     * Returns list of tasks from text document."},{"lineNumber":51,"author":{"gitId":"WeiLiangLOL"},"content":"     *"},{"lineNumber":52,"author":{"gitId":"WeiLiangLOL"},"content":"     * @return Associated {@code TaskList}."},{"lineNumber":53,"author":{"gitId":"WeiLiangLOL"},"content":"     * @throws DukeException If unable to fetch tasks."},{"lineNumber":54,"author":{"gitId":"WeiLiangLOL"},"content":"     */"},{"lineNumber":55,"author":{"gitId":"WeiLiangLOL"},"content":"    public TaskList loadTasks() throws DukeException {"},{"lineNumber":56,"author":{"gitId":"WeiLiangLOL"},"content":"        TaskList tasks \u003d new TaskList();"},{"lineNumber":57,"author":{"gitId":"WeiLiangLOL"},"content":""},{"lineNumber":58,"author":{"gitId":"WeiLiangLOL"},"content":"        // Create if non-existent"},{"lineNumber":59,"author":{"gitId":"WeiLiangLOL"},"content":"        try {"},{"lineNumber":60,"author":{"gitId":"WeiLiangLOL"},"content":"            File file \u003d new File(fileName);"},{"lineNumber":61,"author":{"gitId":"WeiLiangLOL"},"content":"            file.createNewFile();"},{"lineNumber":62,"author":{"gitId":"WeiLiangLOL"},"content":"        } catch (IOException e) {"},{"lineNumber":63,"author":{"gitId":"WeiLiangLOL"},"content":"            e.printStackTrace();"},{"lineNumber":64,"author":{"gitId":"WeiLiangLOL"},"content":"        }"},{"lineNumber":65,"author":{"gitId":"WeiLiangLOL"},"content":""},{"lineNumber":66,"author":{"gitId":"WeiLiangLOL"},"content":"        // Read from file"},{"lineNumber":67,"author":{"gitId":"WeiLiangLOL"},"content":"        try (BufferedReader bufferedReader \u003d new BufferedReader(new FileReader(fileName))) {"},{"lineNumber":68,"author":{"gitId":"WeiLiangLOL"},"content":"            String line \u003d bufferedReader.readLine();"},{"lineNumber":69,"author":{"gitId":"WeiLiangLOL"},"content":"            while (line !\u003d null \u0026\u0026 !line.isEmpty()) {"},{"lineNumber":70,"author":{"gitId":"WeiLiangLOL"},"content":"                tasks.add(parseTask(line));"},{"lineNumber":71,"author":{"gitId":"WeiLiangLOL"},"content":"                line \u003d bufferedReader.readLine();"},{"lineNumber":72,"author":{"gitId":"WeiLiangLOL"},"content":"            }"},{"lineNumber":73,"author":{"gitId":"WeiLiangLOL"},"content":"        } catch (IOException e) {"},{"lineNumber":74,"author":{"gitId":"WeiLiangLOL"},"content":"            e.printStackTrace();"},{"lineNumber":75,"author":{"gitId":"WeiLiangLOL"},"content":"        }"},{"lineNumber":76,"author":{"gitId":"WeiLiangLOL"},"content":""},{"lineNumber":77,"author":{"gitId":"WeiLiangLOL"},"content":"        return tasks;"},{"lineNumber":78,"author":{"gitId":"WeiLiangLOL"},"content":"    }"},{"lineNumber":79,"author":{"gitId":"WeiLiangLOL"},"content":""},{"lineNumber":80,"author":{"gitId":"WeiLiangLOL"},"content":"    /**"},{"lineNumber":81,"author":{"gitId":"WeiLiangLOL"},"content":"     * Parses task information from raw data."},{"lineNumber":82,"author":{"gitId":"WeiLiangLOL"},"content":"     *"},{"lineNumber":83,"author":{"gitId":"WeiLiangLOL"},"content":"     * @param content Raw string content."},{"lineNumber":84,"author":{"gitId":"WeiLiangLOL"},"content":"     * @return The parsed task."},{"lineNumber":85,"author":{"gitId":"WeiLiangLOL"},"content":"     * @throws DukeException If file fails to load."},{"lineNumber":86,"author":{"gitId":"WeiLiangLOL"},"content":"     */"},{"lineNumber":87,"author":{"gitId":"WeiLiangLOL"},"content":"    private Task parseTask(String content) throws DukeException {"},{"lineNumber":88,"author":{"gitId":"WeiLiangLOL"},"content":"        // Format -\u003e D | 1 | details | timing"},{"lineNumber":89,"author":{"gitId":"WeiLiangLOL"},"content":"        String[] parts \u003d content.split(\" \\\\| \");"},{"lineNumber":90,"author":{"gitId":"WeiLiangLOL"},"content":"        Task task;"},{"lineNumber":91,"author":{"gitId":"WeiLiangLOL"},"content":""},{"lineNumber":92,"author":{"gitId":"WeiLiangLOL"},"content":"        if (parts[0].equals(\"D\")) {"},{"lineNumber":93,"author":{"gitId":"WeiLiangLOL"},"content":"            task \u003d new Deadline(parts[2], parts[3]);"},{"lineNumber":94,"author":{"gitId":"WeiLiangLOL"},"content":"        } else if (parts[0].equals(\"E\")) {"},{"lineNumber":95,"author":{"gitId":"WeiLiangLOL"},"content":"            task \u003d new Event(parts[2], parts[3]);"},{"lineNumber":96,"author":{"gitId":"WeiLiangLOL"},"content":"        } else {"},{"lineNumber":97,"author":{"gitId":"WeiLiangLOL"},"content":"            task \u003d new Task(parts[2]);"},{"lineNumber":98,"author":{"gitId":"WeiLiangLOL"},"content":"        }"},{"lineNumber":99,"author":{"gitId":"WeiLiangLOL"},"content":""},{"lineNumber":100,"author":{"gitId":"WeiLiangLOL"},"content":"        if (parts[1].equals(\"1\")) {"},{"lineNumber":101,"author":{"gitId":"WeiLiangLOL"},"content":"            task.markComplete();"},{"lineNumber":102,"author":{"gitId":"WeiLiangLOL"},"content":"        }"},{"lineNumber":103,"author":{"gitId":"WeiLiangLOL"},"content":"        return task;"},{"lineNumber":104,"author":{"gitId":"WeiLiangLOL"},"content":"    }"},{"lineNumber":105,"author":{"gitId":"WeiLiangLOL"},"content":""},{"lineNumber":106,"author":{"gitId":"WeiLiangLOL"},"content":"}"}],"authorContributionMap":{"WeiLiangLOL":106}},{"path":"src/main/java/com/weiliang/task/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"WeiLiangLOL"},"content":"package com.weiliang.task;"},{"lineNumber":2,"author":{"gitId":"WeiLiangLOL"},"content":""},{"lineNumber":3,"author":{"gitId":"WeiLiangLOL"},"content":"import java.time.LocalDateTime;"},{"lineNumber":4,"author":{"gitId":"WeiLiangLOL"},"content":"import java.time.format.DateTimeFormatter;"},{"lineNumber":5,"author":{"gitId":"WeiLiangLOL"},"content":"import java.time.format.DateTimeParseException;"},{"lineNumber":6,"author":{"gitId":"WeiLiangLOL"},"content":""},{"lineNumber":7,"author":{"gitId":"WeiLiangLOL"},"content":"import com.weiliang.DukeException;"},{"lineNumber":8,"author":{"gitId":"WeiLiangLOL"},"content":""},{"lineNumber":9,"author":{"gitId":"WeiLiangLOL"},"content":"/**"},{"lineNumber":10,"author":{"gitId":"WeiLiangLOL"},"content":" * A deadline affiliated task."},{"lineNumber":11,"author":{"gitId":"WeiLiangLOL"},"content":" */"},{"lineNumber":12,"author":{"gitId":"WeiLiangLOL"},"content":"public class Deadline extends Task {"},{"lineNumber":13,"author":{"gitId":"WeiLiangLOL"},"content":""},{"lineNumber":14,"author":{"gitId":"WeiLiangLOL"},"content":"    private final LocalDateTime timing;"},{"lineNumber":15,"author":{"gitId":"WeiLiangLOL"},"content":""},{"lineNumber":16,"author":{"gitId":"WeiLiangLOL"},"content":"    /**"},{"lineNumber":17,"author":{"gitId":"WeiLiangLOL"},"content":"     * Instantiates a deadline with the given task description and timing."},{"lineNumber":18,"author":{"gitId":"WeiLiangLOL"},"content":"     *"},{"lineNumber":19,"author":{"gitId":"WeiLiangLOL"},"content":"     * @param task The description of the task."},{"lineNumber":20,"author":{"gitId":"WeiLiangLOL"},"content":"     * @param timing The time associated in String representation."},{"lineNumber":21,"author":{"gitId":"WeiLiangLOL"},"content":"     * @throws DukeException If the timing provided is invalid."},{"lineNumber":22,"author":{"gitId":"WeiLiangLOL"},"content":"     */"},{"lineNumber":23,"author":{"gitId":"WeiLiangLOL"},"content":"    public Deadline(String task, String timing) throws DukeException {"},{"lineNumber":24,"author":{"gitId":"WeiLiangLOL"},"content":"        super(task);"},{"lineNumber":25,"author":{"gitId":"WeiLiangLOL"},"content":"        try {"},{"lineNumber":26,"author":{"gitId":"WeiLiangLOL"},"content":"            this.timing \u003d LocalDateTime.parse(timing);"},{"lineNumber":27,"author":{"gitId":"WeiLiangLOL"},"content":"        } catch (DateTimeParseException e) {"},{"lineNumber":28,"author":{"gitId":"WeiLiangLOL"},"content":"            throw new DukeException(\"Unable to parse date!\");"},{"lineNumber":29,"author":{"gitId":"WeiLiangLOL"},"content":"        }"},{"lineNumber":30,"author":{"gitId":"WeiLiangLOL"},"content":"    }"},{"lineNumber":31,"author":{"gitId":"WeiLiangLOL"},"content":""},{"lineNumber":32,"author":{"gitId":"WeiLiangLOL"},"content":"    @Override"},{"lineNumber":33,"author":{"gitId":"WeiLiangLOL"},"content":"    public String toFormattedString() {"},{"lineNumber":34,"author":{"gitId":"WeiLiangLOL"},"content":"        return \"D | \" + (isComplete ? 1 : 0) + \" | \" + task + \" | \" + timing;"},{"lineNumber":35,"author":{"gitId":"WeiLiangLOL"},"content":"    }"},{"lineNumber":36,"author":{"gitId":"WeiLiangLOL"},"content":""},{"lineNumber":37,"author":{"gitId":"WeiLiangLOL"},"content":"    @Override"},{"lineNumber":38,"author":{"gitId":"WeiLiangLOL"},"content":"    public String toString() {"},{"lineNumber":39,"author":{"gitId":"WeiLiangLOL"},"content":"        return \"[D][\" + (isComplete ? \"X\" : \" \") + \"] \" + task + \" (by: \""},{"lineNumber":40,"author":{"gitId":"WeiLiangLOL"},"content":"                + timing.format(DateTimeFormatter.ofPattern(\"dd MMMM yyyy, hh:mma\")) + \")\";"},{"lineNumber":41,"author":{"gitId":"WeiLiangLOL"},"content":"    }"},{"lineNumber":42,"author":{"gitId":"WeiLiangLOL"},"content":""},{"lineNumber":43,"author":{"gitId":"WeiLiangLOL"},"content":"}"}],"authorContributionMap":{"WeiLiangLOL":43}},{"path":"src/main/java/com/weiliang/task/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"WeiLiangLOL"},"content":"package com.weiliang.task;"},{"lineNumber":2,"author":{"gitId":"WeiLiangLOL"},"content":""},{"lineNumber":3,"author":{"gitId":"WeiLiangLOL"},"content":"import java.time.LocalDateTime;"},{"lineNumber":4,"author":{"gitId":"WeiLiangLOL"},"content":"import java.time.format.DateTimeFormatter;"},{"lineNumber":5,"author":{"gitId":"WeiLiangLOL"},"content":"import java.time.format.DateTimeParseException;"},{"lineNumber":6,"author":{"gitId":"WeiLiangLOL"},"content":""},{"lineNumber":7,"author":{"gitId":"WeiLiangLOL"},"content":"import com.weiliang.DukeException;"},{"lineNumber":8,"author":{"gitId":"WeiLiangLOL"},"content":""},{"lineNumber":9,"author":{"gitId":"WeiLiangLOL"},"content":"/**"},{"lineNumber":10,"author":{"gitId":"WeiLiangLOL"},"content":" * An event task with a given date."},{"lineNumber":11,"author":{"gitId":"WeiLiangLOL"},"content":" */"},{"lineNumber":12,"author":{"gitId":"WeiLiangLOL"},"content":"public class Event extends Task {"},{"lineNumber":13,"author":{"gitId":"WeiLiangLOL"},"content":""},{"lineNumber":14,"author":{"gitId":"WeiLiangLOL"},"content":"    private final LocalDateTime timing;"},{"lineNumber":15,"author":{"gitId":"WeiLiangLOL"},"content":""},{"lineNumber":16,"author":{"gitId":"WeiLiangLOL"},"content":"    /**"},{"lineNumber":17,"author":{"gitId":"WeiLiangLOL"},"content":"     * Instantiates an event with the given task description and timing."},{"lineNumber":18,"author":{"gitId":"WeiLiangLOL"},"content":"     *"},{"lineNumber":19,"author":{"gitId":"WeiLiangLOL"},"content":"     * @param task The description of the task."},{"lineNumber":20,"author":{"gitId":"WeiLiangLOL"},"content":"     * @param timing The time associated in String representation."},{"lineNumber":21,"author":{"gitId":"WeiLiangLOL"},"content":"     * @throws DukeException If the timing provided is invalid."},{"lineNumber":22,"author":{"gitId":"WeiLiangLOL"},"content":"     */"},{"lineNumber":23,"author":{"gitId":"WeiLiangLOL"},"content":"    public Event(String task, String timing) throws DukeException {"},{"lineNumber":24,"author":{"gitId":"WeiLiangLOL"},"content":"        super(task);"},{"lineNumber":25,"author":{"gitId":"WeiLiangLOL"},"content":"        try {"},{"lineNumber":26,"author":{"gitId":"WeiLiangLOL"},"content":"            this.timing \u003d LocalDateTime.parse(timing);"},{"lineNumber":27,"author":{"gitId":"WeiLiangLOL"},"content":"        } catch (DateTimeParseException e) {"},{"lineNumber":28,"author":{"gitId":"WeiLiangLOL"},"content":"            throw new DukeException(\"Unable to parse date!\");"},{"lineNumber":29,"author":{"gitId":"WeiLiangLOL"},"content":"        }"},{"lineNumber":30,"author":{"gitId":"WeiLiangLOL"},"content":"    }"},{"lineNumber":31,"author":{"gitId":"WeiLiangLOL"},"content":""},{"lineNumber":32,"author":{"gitId":"WeiLiangLOL"},"content":"    @Override"},{"lineNumber":33,"author":{"gitId":"WeiLiangLOL"},"content":"    public String toFormattedString() {"},{"lineNumber":34,"author":{"gitId":"WeiLiangLOL"},"content":"        return \"E | \" + (isComplete ? 1 : 0) + \" | \" + task + \" | \" + timing;"},{"lineNumber":35,"author":{"gitId":"WeiLiangLOL"},"content":"    }"},{"lineNumber":36,"author":{"gitId":"WeiLiangLOL"},"content":""},{"lineNumber":37,"author":{"gitId":"WeiLiangLOL"},"content":"    @Override"},{"lineNumber":38,"author":{"gitId":"WeiLiangLOL"},"content":"    public String toString() {"},{"lineNumber":39,"author":{"gitId":"WeiLiangLOL"},"content":"        return \"[E][\" + (isComplete ? \"X\" : \" \") + \"] \" + task + \" (at: \""},{"lineNumber":40,"author":{"gitId":"WeiLiangLOL"},"content":"                + timing.format(DateTimeFormatter.ofPattern(\"dd MMMM yyyy, hh:mma\")) + \")\";"},{"lineNumber":41,"author":{"gitId":"WeiLiangLOL"},"content":"    }"},{"lineNumber":42,"author":{"gitId":"WeiLiangLOL"},"content":""},{"lineNumber":43,"author":{"gitId":"WeiLiangLOL"},"content":"}"}],"authorContributionMap":{"WeiLiangLOL":43}},{"path":"src/main/java/com/weiliang/task/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"WeiLiangLOL"},"content":"package com.weiliang.task;"},{"lineNumber":2,"author":{"gitId":"WeiLiangLOL"},"content":""},{"lineNumber":3,"author":{"gitId":"WeiLiangLOL"},"content":"/**"},{"lineNumber":4,"author":{"gitId":"WeiLiangLOL"},"content":" * The default to-do task."},{"lineNumber":5,"author":{"gitId":"WeiLiangLOL"},"content":" */"},{"lineNumber":6,"author":{"gitId":"WeiLiangLOL"},"content":"public class Task {"},{"lineNumber":7,"author":{"gitId":"WeiLiangLOL"},"content":""},{"lineNumber":8,"author":{"gitId":"WeiLiangLOL"},"content":"    protected String task;"},{"lineNumber":9,"author":{"gitId":"WeiLiangLOL"},"content":"    protected boolean isComplete;"},{"lineNumber":10,"author":{"gitId":"WeiLiangLOL"},"content":""},{"lineNumber":11,"author":{"gitId":"WeiLiangLOL"},"content":"    /**"},{"lineNumber":12,"author":{"gitId":"WeiLiangLOL"},"content":"     * Initializes an instance of the task."},{"lineNumber":13,"author":{"gitId":"WeiLiangLOL"},"content":"     *"},{"lineNumber":14,"author":{"gitId":"WeiLiangLOL"},"content":"     * @param task The description."},{"lineNumber":15,"author":{"gitId":"WeiLiangLOL"},"content":"     */"},{"lineNumber":16,"author":{"gitId":"WeiLiangLOL"},"content":"    public Task(String task) {"},{"lineNumber":17,"author":{"gitId":"WeiLiangLOL"},"content":"        this.task \u003d task;"},{"lineNumber":18,"author":{"gitId":"WeiLiangLOL"},"content":"    }"},{"lineNumber":19,"author":{"gitId":"WeiLiangLOL"},"content":""},{"lineNumber":20,"author":{"gitId":"WeiLiangLOL"},"content":"    /**"},{"lineNumber":21,"author":{"gitId":"WeiLiangLOL"},"content":"     * Marks the given task as complete."},{"lineNumber":22,"author":{"gitId":"WeiLiangLOL"},"content":"     */"},{"lineNumber":23,"author":{"gitId":"WeiLiangLOL"},"content":"    public void markComplete() {"},{"lineNumber":24,"author":{"gitId":"WeiLiangLOL"},"content":"        this.isComplete \u003d true;"},{"lineNumber":25,"author":{"gitId":"WeiLiangLOL"},"content":"    }"},{"lineNumber":26,"author":{"gitId":"WeiLiangLOL"},"content":""},{"lineNumber":27,"author":{"gitId":"WeiLiangLOL"},"content":"    /**"},{"lineNumber":28,"author":{"gitId":"WeiLiangLOL"},"content":"     * Returns the description of the task."},{"lineNumber":29,"author":{"gitId":"WeiLiangLOL"},"content":"     *"},{"lineNumber":30,"author":{"gitId":"WeiLiangLOL"},"content":"     * @return The description."},{"lineNumber":31,"author":{"gitId":"WeiLiangLOL"},"content":"     */"},{"lineNumber":32,"author":{"gitId":"WeiLiangLOL"},"content":"    public String getDescription() {"},{"lineNumber":33,"author":{"gitId":"WeiLiangLOL"},"content":"        return task;"},{"lineNumber":34,"author":{"gitId":"WeiLiangLOL"},"content":"    }"},{"lineNumber":35,"author":{"gitId":"WeiLiangLOL"},"content":""},{"lineNumber":36,"author":{"gitId":"WeiLiangLOL"},"content":"    /**"},{"lineNumber":37,"author":{"gitId":"WeiLiangLOL"},"content":"     * Returns {@code true} if the task is completed, {@code false} otherwise."},{"lineNumber":38,"author":{"gitId":"WeiLiangLOL"},"content":"     *"},{"lineNumber":39,"author":{"gitId":"WeiLiangLOL"},"content":"     * @return The completion status."},{"lineNumber":40,"author":{"gitId":"WeiLiangLOL"},"content":"     */"},{"lineNumber":41,"author":{"gitId":"WeiLiangLOL"},"content":"    public boolean isComplete() {"},{"lineNumber":42,"author":{"gitId":"WeiLiangLOL"},"content":"        return isComplete;"},{"lineNumber":43,"author":{"gitId":"WeiLiangLOL"},"content":"    }"},{"lineNumber":44,"author":{"gitId":"WeiLiangLOL"},"content":""},{"lineNumber":45,"author":{"gitId":"WeiLiangLOL"},"content":"    /**"},{"lineNumber":46,"author":{"gitId":"WeiLiangLOL"},"content":"     * Returns an alternative string formatting of the task, using vertical bars."},{"lineNumber":47,"author":{"gitId":"WeiLiangLOL"},"content":"     *"},{"lineNumber":48,"author":{"gitId":"WeiLiangLOL"},"content":"     * @return String formatting."},{"lineNumber":49,"author":{"gitId":"WeiLiangLOL"},"content":"     */"},{"lineNumber":50,"author":{"gitId":"WeiLiangLOL"},"content":"    public String toFormattedString() {"},{"lineNumber":51,"author":{"gitId":"WeiLiangLOL"},"content":"        return \"T | \" + (isComplete ? 1 : 0) + \" | \" + task;"},{"lineNumber":52,"author":{"gitId":"WeiLiangLOL"},"content":"    }"},{"lineNumber":53,"author":{"gitId":"WeiLiangLOL"},"content":""},{"lineNumber":54,"author":{"gitId":"WeiLiangLOL"},"content":"    /**"},{"lineNumber":55,"author":{"gitId":"WeiLiangLOL"},"content":"     * Returns the {@link String} representation of the task."},{"lineNumber":56,"author":{"gitId":"WeiLiangLOL"},"content":"     *"},{"lineNumber":57,"author":{"gitId":"WeiLiangLOL"},"content":"     * @return String representation."},{"lineNumber":58,"author":{"gitId":"WeiLiangLOL"},"content":"     */"},{"lineNumber":59,"author":{"gitId":"WeiLiangLOL"},"content":"    @Override"},{"lineNumber":60,"author":{"gitId":"WeiLiangLOL"},"content":"    public String toString() {"},{"lineNumber":61,"author":{"gitId":"WeiLiangLOL"},"content":"        return \"[T][\" + (isComplete ? \"X\" : \" \") + \"] \" + task;"},{"lineNumber":62,"author":{"gitId":"WeiLiangLOL"},"content":"    }"},{"lineNumber":63,"author":{"gitId":"WeiLiangLOL"},"content":""},{"lineNumber":64,"author":{"gitId":"WeiLiangLOL"},"content":"}"}],"authorContributionMap":{"WeiLiangLOL":64}},{"path":"src/main/java/com/weiliang/task/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"WeiLiangLOL"},"content":"package com.weiliang.task;"},{"lineNumber":2,"author":{"gitId":"WeiLiangLOL"},"content":""},{"lineNumber":3,"author":{"gitId":"WeiLiangLOL"},"content":"import java.util.ArrayList;"},{"lineNumber":4,"author":{"gitId":"WeiLiangLOL"},"content":"import java.util.Iterator;"},{"lineNumber":5,"author":{"gitId":"WeiLiangLOL"},"content":"import java.util.List;"},{"lineNumber":6,"author":{"gitId":"WeiLiangLOL"},"content":""},{"lineNumber":7,"author":{"gitId":"WeiLiangLOL"},"content":"import com.weiliang.DukeException;"},{"lineNumber":8,"author":{"gitId":"WeiLiangLOL"},"content":""},{"lineNumber":9,"author":{"gitId":"WeiLiangLOL"},"content":"/**"},{"lineNumber":10,"author":{"gitId":"WeiLiangLOL"},"content":" * A collection to hold the tasks."},{"lineNumber":11,"author":{"gitId":"WeiLiangLOL"},"content":" */"},{"lineNumber":12,"author":{"gitId":"WeiLiangLOL"},"content":"public class TaskList implements Iterable\u003cTask\u003e {"},{"lineNumber":13,"author":{"gitId":"WeiLiangLOL"},"content":""},{"lineNumber":14,"author":{"gitId":"WeiLiangLOL"},"content":"    private List\u003cTask\u003e tasks;"},{"lineNumber":15,"author":{"gitId":"WeiLiangLOL"},"content":"    private List\u003cTask\u003e history;"},{"lineNumber":16,"author":{"gitId":"WeiLiangLOL"},"content":""},{"lineNumber":17,"author":{"gitId":"WeiLiangLOL"},"content":"    /**"},{"lineNumber":18,"author":{"gitId":"WeiLiangLOL"},"content":"     * Instantiates a new empty task list."},{"lineNumber":19,"author":{"gitId":"WeiLiangLOL"},"content":"     */"},{"lineNumber":20,"author":{"gitId":"WeiLiangLOL"},"content":"    public TaskList() {"},{"lineNumber":21,"author":{"gitId":"WeiLiangLOL"},"content":"        this(new ArrayList\u003c\u003e());"},{"lineNumber":22,"author":{"gitId":"WeiLiangLOL"},"content":"    }"},{"lineNumber":23,"author":{"gitId":"WeiLiangLOL"},"content":""},{"lineNumber":24,"author":{"gitId":"WeiLiangLOL"},"content":"    /**"},{"lineNumber":25,"author":{"gitId":"WeiLiangLOL"},"content":"     * Instantiates a task list given a set of tasks."},{"lineNumber":26,"author":{"gitId":"WeiLiangLOL"},"content":"     *"},{"lineNumber":27,"author":{"gitId":"WeiLiangLOL"},"content":"     * @param tasks The tasks to be added."},{"lineNumber":28,"author":{"gitId":"WeiLiangLOL"},"content":"     */"},{"lineNumber":29,"author":{"gitId":"WeiLiangLOL"},"content":"    public TaskList(List\u003cTask\u003e tasks) {"},{"lineNumber":30,"author":{"gitId":"WeiLiangLOL"},"content":"        this.tasks \u003d tasks;"},{"lineNumber":31,"author":{"gitId":"WeiLiangLOL"},"content":"    }"},{"lineNumber":32,"author":{"gitId":"WeiLiangLOL"},"content":""},{"lineNumber":33,"author":{"gitId":"WeiLiangLOL"},"content":"    /**"},{"lineNumber":34,"author":{"gitId":"WeiLiangLOL"},"content":"     * Returns the size of this list."},{"lineNumber":35,"author":{"gitId":"WeiLiangLOL"},"content":"     *"},{"lineNumber":36,"author":{"gitId":"WeiLiangLOL"},"content":"     * @return The size of the task list."},{"lineNumber":37,"author":{"gitId":"WeiLiangLOL"},"content":"     */"},{"lineNumber":38,"author":{"gitId":"WeiLiangLOL"},"content":"    public int size() {"},{"lineNumber":39,"author":{"gitId":"WeiLiangLOL"},"content":"        return tasks.size();"},{"lineNumber":40,"author":{"gitId":"WeiLiangLOL"},"content":"    }"},{"lineNumber":41,"author":{"gitId":"WeiLiangLOL"},"content":""},{"lineNumber":42,"author":{"gitId":"WeiLiangLOL"},"content":"    /**"},{"lineNumber":43,"author":{"gitId":"WeiLiangLOL"},"content":"     * Returns the task, with its given index in the list."},{"lineNumber":44,"author":{"gitId":"WeiLiangLOL"},"content":"     *"},{"lineNumber":45,"author":{"gitId":"WeiLiangLOL"},"content":"     * @param taskNum The index position of the task."},{"lineNumber":46,"author":{"gitId":"WeiLiangLOL"},"content":"     * @return The task."},{"lineNumber":47,"author":{"gitId":"WeiLiangLOL"},"content":"     * @throws DukeException If item cannot be fetched."},{"lineNumber":48,"author":{"gitId":"WeiLiangLOL"},"content":"     */"},{"lineNumber":49,"author":{"gitId":"WeiLiangLOL"},"content":"    public Task get(int taskNum) throws DukeException {"},{"lineNumber":50,"author":{"gitId":"WeiLiangLOL"},"content":"        if (taskNum \u003e\u003d 0 \u0026\u0026 taskNum \u003c tasks.size()) {"},{"lineNumber":51,"author":{"gitId":"WeiLiangLOL"},"content":"            return tasks.get(taskNum);"},{"lineNumber":52,"author":{"gitId":"WeiLiangLOL"},"content":"        } else {"},{"lineNumber":53,"author":{"gitId":"WeiLiangLOL"},"content":"            throw new DukeException(\"Item not found!\");"},{"lineNumber":54,"author":{"gitId":"WeiLiangLOL"},"content":"        }"},{"lineNumber":55,"author":{"gitId":"WeiLiangLOL"},"content":"    }"},{"lineNumber":56,"author":{"gitId":"WeiLiangLOL"},"content":""},{"lineNumber":57,"author":{"gitId":"WeiLiangLOL"},"content":"    /**"},{"lineNumber":58,"author":{"gitId":"WeiLiangLOL"},"content":"     * Removes a task given the index position."},{"lineNumber":59,"author":{"gitId":"WeiLiangLOL"},"content":"     *"},{"lineNumber":60,"author":{"gitId":"WeiLiangLOL"},"content":"     * @param taskNum The index position of the task."},{"lineNumber":61,"author":{"gitId":"WeiLiangLOL"},"content":"     * @return The removed task."},{"lineNumber":62,"author":{"gitId":"WeiLiangLOL"},"content":"     * @throws DukeException If unable to remove."},{"lineNumber":63,"author":{"gitId":"WeiLiangLOL"},"content":"     */"},{"lineNumber":64,"author":{"gitId":"WeiLiangLOL"},"content":"    public Task remove(int taskNum) throws DukeException {"},{"lineNumber":65,"author":{"gitId":"WeiLiangLOL"},"content":"        history \u003d new ArrayList\u003c\u003e(tasks);"},{"lineNumber":66,"author":{"gitId":"WeiLiangLOL"},"content":"        if (taskNum \u003e\u003d 0 \u0026\u0026 taskNum \u003c tasks.size()) {"},{"lineNumber":67,"author":{"gitId":"WeiLiangLOL"},"content":"            return tasks.remove(taskNum);"},{"lineNumber":68,"author":{"gitId":"WeiLiangLOL"},"content":"        } else {"},{"lineNumber":69,"author":{"gitId":"WeiLiangLOL"},"content":"            throw new DukeException(\"Item not found!\");"},{"lineNumber":70,"author":{"gitId":"WeiLiangLOL"},"content":"        }"},{"lineNumber":71,"author":{"gitId":"WeiLiangLOL"},"content":"    }"},{"lineNumber":72,"author":{"gitId":"WeiLiangLOL"},"content":""},{"lineNumber":73,"author":{"gitId":"WeiLiangLOL"},"content":"    /**"},{"lineNumber":74,"author":{"gitId":"WeiLiangLOL"},"content":"     * Appends the specified task to the end of this list."},{"lineNumber":75,"author":{"gitId":"WeiLiangLOL"},"content":"     *"},{"lineNumber":76,"author":{"gitId":"WeiLiangLOL"},"content":"     * @param task The task to be added."},{"lineNumber":77,"author":{"gitId":"WeiLiangLOL"},"content":"     */"},{"lineNumber":78,"author":{"gitId":"WeiLiangLOL"},"content":"    public void add(Task task) {"},{"lineNumber":79,"author":{"gitId":"WeiLiangLOL"},"content":"        history \u003d new ArrayList\u003c\u003e(tasks);"},{"lineNumber":80,"author":{"gitId":"WeiLiangLOL"},"content":"        tasks.add(task);"},{"lineNumber":81,"author":{"gitId":"WeiLiangLOL"},"content":"    }"},{"lineNumber":82,"author":{"gitId":"WeiLiangLOL"},"content":""},{"lineNumber":83,"author":{"gitId":"WeiLiangLOL"},"content":"    /**"},{"lineNumber":84,"author":{"gitId":"WeiLiangLOL"},"content":"     * Returns {@code true} if this list contains the specified task."},{"lineNumber":85,"author":{"gitId":"WeiLiangLOL"},"content":"     *"},{"lineNumber":86,"author":{"gitId":"WeiLiangLOL"},"content":"     * @param task The task to compare against."},{"lineNumber":87,"author":{"gitId":"WeiLiangLOL"},"content":"     * @return {@code true} if the list contains given task."},{"lineNumber":88,"author":{"gitId":"WeiLiangLOL"},"content":"     */"},{"lineNumber":89,"author":{"gitId":"WeiLiangLOL"},"content":"    public boolean contains(Task task) {"},{"lineNumber":90,"author":{"gitId":"WeiLiangLOL"},"content":"        return tasks.contains(task);"},{"lineNumber":91,"author":{"gitId":"WeiLiangLOL"},"content":"    }"},{"lineNumber":92,"author":{"gitId":"WeiLiangLOL"},"content":""},{"lineNumber":93,"author":{"gitId":"WeiLiangLOL"},"content":"    /**"},{"lineNumber":94,"author":{"gitId":"WeiLiangLOL"},"content":"     * Undo a single creation/deletion operation."},{"lineNumber":95,"author":{"gitId":"WeiLiangLOL"},"content":"     *"},{"lineNumber":96,"author":{"gitId":"WeiLiangLOL"},"content":"     * @throws DukeException If creation/deletion history is empty or pass the limit of one operation."},{"lineNumber":97,"author":{"gitId":"WeiLiangLOL"},"content":"     */"},{"lineNumber":98,"author":{"gitId":"WeiLiangLOL"},"content":"    public void undo() throws DukeException {"},{"lineNumber":99,"author":{"gitId":"WeiLiangLOL"},"content":"        if (history \u003d\u003d null) {"},{"lineNumber":100,"author":{"gitId":"WeiLiangLOL"},"content":"            throw new DukeException(\"Unable to undo action!\");"},{"lineNumber":101,"author":{"gitId":"WeiLiangLOL"},"content":"        }"},{"lineNumber":102,"author":{"gitId":"WeiLiangLOL"},"content":""},{"lineNumber":103,"author":{"gitId":"WeiLiangLOL"},"content":"        tasks \u003d history;"},{"lineNumber":104,"author":{"gitId":"WeiLiangLOL"},"content":"        history \u003d null;"},{"lineNumber":105,"author":{"gitId":"WeiLiangLOL"},"content":"    }"},{"lineNumber":106,"author":{"gitId":"WeiLiangLOL"},"content":""},{"lineNumber":107,"author":{"gitId":"WeiLiangLOL"},"content":"    /**"},{"lineNumber":108,"author":{"gitId":"WeiLiangLOL"},"content":"     * Returns an iterator over the tasks in the list."},{"lineNumber":109,"author":{"gitId":"WeiLiangLOL"},"content":"     *"},{"lineNumber":110,"author":{"gitId":"WeiLiangLOL"},"content":"     * @return An iterator over the tasks."},{"lineNumber":111,"author":{"gitId":"WeiLiangLOL"},"content":"     */"},{"lineNumber":112,"author":{"gitId":"WeiLiangLOL"},"content":"    @Override"},{"lineNumber":113,"author":{"gitId":"WeiLiangLOL"},"content":"    public Iterator\u003cTask\u003e iterator() {"},{"lineNumber":114,"author":{"gitId":"WeiLiangLOL"},"content":"        return tasks.iterator();"},{"lineNumber":115,"author":{"gitId":"WeiLiangLOL"},"content":"    }"},{"lineNumber":116,"author":{"gitId":"WeiLiangLOL"},"content":""},{"lineNumber":117,"author":{"gitId":"WeiLiangLOL"},"content":"}"}],"authorContributionMap":{"WeiLiangLOL":117}},{"path":"src/main/java/com/weiliang/ui/DialogBox.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"WeiLiangLOL"},"content":"package com.weiliang.ui;"},{"lineNumber":2,"author":{"gitId":"WeiLiangLOL"},"content":""},{"lineNumber":3,"author":{"gitId":"WeiLiangLOL"},"content":"import java.io.IOException;"},{"lineNumber":4,"author":{"gitId":"WeiLiangLOL"},"content":""},{"lineNumber":5,"author":{"gitId":"WeiLiangLOL"},"content":"import javafx.fxml.FXML;"},{"lineNumber":6,"author":{"gitId":"WeiLiangLOL"},"content":"import javafx.fxml.FXMLLoader;"},{"lineNumber":7,"author":{"gitId":"WeiLiangLOL"},"content":"import javafx.scene.control.Label;"},{"lineNumber":8,"author":{"gitId":"WeiLiangLOL"},"content":"import javafx.scene.layout.HBox;"},{"lineNumber":9,"author":{"gitId":"WeiLiangLOL"},"content":""},{"lineNumber":10,"author":{"gitId":"WeiLiangLOL"},"content":"public class DialogBox extends HBox {"},{"lineNumber":11,"author":{"gitId":"WeiLiangLOL"},"content":""},{"lineNumber":12,"author":{"gitId":"WeiLiangLOL"},"content":"    @FXML"},{"lineNumber":13,"author":{"gitId":"WeiLiangLOL"},"content":"    private Label dialog;"},{"lineNumber":14,"author":{"gitId":"WeiLiangLOL"},"content":""},{"lineNumber":15,"author":{"gitId":"WeiLiangLOL"},"content":"    private DialogBox(String text) {"},{"lineNumber":16,"author":{"gitId":"WeiLiangLOL"},"content":"        try {"},{"lineNumber":17,"author":{"gitId":"WeiLiangLOL"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(\"/view/DialogBox.fxml\"));"},{"lineNumber":18,"author":{"gitId":"WeiLiangLOL"},"content":"            fxmlLoader.setController(this);"},{"lineNumber":19,"author":{"gitId":"WeiLiangLOL"},"content":"            fxmlLoader.setRoot(this);"},{"lineNumber":20,"author":{"gitId":"WeiLiangLOL"},"content":"            fxmlLoader.load();"},{"lineNumber":21,"author":{"gitId":"WeiLiangLOL"},"content":"        } catch (IOException e) {"},{"lineNumber":22,"author":{"gitId":"WeiLiangLOL"},"content":"            e.printStackTrace();"},{"lineNumber":23,"author":{"gitId":"WeiLiangLOL"},"content":"        }"},{"lineNumber":24,"author":{"gitId":"WeiLiangLOL"},"content":""},{"lineNumber":25,"author":{"gitId":"WeiLiangLOL"},"content":"        dialog.setText(text);"},{"lineNumber":26,"author":{"gitId":"WeiLiangLOL"},"content":"    }"},{"lineNumber":27,"author":{"gitId":"WeiLiangLOL"},"content":""},{"lineNumber":28,"author":{"gitId":"WeiLiangLOL"},"content":"    public static DialogBox getDialog(String text) {"},{"lineNumber":29,"author":{"gitId":"WeiLiangLOL"},"content":"        return new DialogBox(text);"},{"lineNumber":30,"author":{"gitId":"WeiLiangLOL"},"content":"    }"},{"lineNumber":31,"author":{"gitId":"WeiLiangLOL"},"content":""},{"lineNumber":32,"author":{"gitId":"WeiLiangLOL"},"content":"}"}],"authorContributionMap":{"WeiLiangLOL":32}},{"path":"src/main/java/com/weiliang/ui/MainWindow.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"WeiLiangLOL"},"content":"package com.weiliang.ui;"},{"lineNumber":2,"author":{"gitId":"WeiLiangLOL"},"content":""},{"lineNumber":3,"author":{"gitId":"WeiLiangLOL"},"content":"import com.weiliang.Duke;"},{"lineNumber":4,"author":{"gitId":"WeiLiangLOL"},"content":"import com.weiliang.DukeException;"},{"lineNumber":5,"author":{"gitId":"WeiLiangLOL"},"content":""},{"lineNumber":6,"author":{"gitId":"WeiLiangLOL"},"content":"import javafx.fxml.FXML;"},{"lineNumber":7,"author":{"gitId":"WeiLiangLOL"},"content":"import javafx.scene.control.Button;"},{"lineNumber":8,"author":{"gitId":"WeiLiangLOL"},"content":"import javafx.scene.control.ScrollPane;"},{"lineNumber":9,"author":{"gitId":"WeiLiangLOL"},"content":"import javafx.scene.control.TextField;"},{"lineNumber":10,"author":{"gitId":"WeiLiangLOL"},"content":"import javafx.scene.layout.AnchorPane;"},{"lineNumber":11,"author":{"gitId":"WeiLiangLOL"},"content":"import javafx.scene.layout.VBox;"},{"lineNumber":12,"author":{"gitId":"WeiLiangLOL"},"content":""},{"lineNumber":13,"author":{"gitId":"WeiLiangLOL"},"content":"/**"},{"lineNumber":14,"author":{"gitId":"WeiLiangLOL"},"content":" * Controller for MainWindow. Provides the layout for the other controls."},{"lineNumber":15,"author":{"gitId":"WeiLiangLOL"},"content":" */"},{"lineNumber":16,"author":{"gitId":"WeiLiangLOL"},"content":"public class MainWindow extends AnchorPane {"},{"lineNumber":17,"author":{"gitId":"WeiLiangLOL"},"content":""},{"lineNumber":18,"author":{"gitId":"WeiLiangLOL"},"content":"    @FXML"},{"lineNumber":19,"author":{"gitId":"WeiLiangLOL"},"content":"    private ScrollPane scrollPane;"},{"lineNumber":20,"author":{"gitId":"WeiLiangLOL"},"content":"    @FXML"},{"lineNumber":21,"author":{"gitId":"WeiLiangLOL"},"content":"    private VBox dialogContainer;"},{"lineNumber":22,"author":{"gitId":"WeiLiangLOL"},"content":"    @FXML"},{"lineNumber":23,"author":{"gitId":"WeiLiangLOL"},"content":"    private TextField userInput;"},{"lineNumber":24,"author":{"gitId":"WeiLiangLOL"},"content":"    @FXML"},{"lineNumber":25,"author":{"gitId":"WeiLiangLOL"},"content":"    private Button sendButton;"},{"lineNumber":26,"author":{"gitId":"WeiLiangLOL"},"content":""},{"lineNumber":27,"author":{"gitId":"WeiLiangLOL"},"content":"    private Duke duke;"},{"lineNumber":28,"author":{"gitId":"WeiLiangLOL"},"content":""},{"lineNumber":29,"author":{"gitId":"WeiLiangLOL"},"content":"    @FXML"},{"lineNumber":30,"author":{"gitId":"WeiLiangLOL"},"content":"    public void initialize() {"},{"lineNumber":31,"author":{"gitId":"WeiLiangLOL"},"content":"        scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());"},{"lineNumber":32,"author":{"gitId":"WeiLiangLOL"},"content":"    }"},{"lineNumber":33,"author":{"gitId":"WeiLiangLOL"},"content":""},{"lineNumber":34,"author":{"gitId":"WeiLiangLOL"},"content":"    public void setDuke(Duke d) {"},{"lineNumber":35,"author":{"gitId":"WeiLiangLOL"},"content":"        duke \u003d d;"},{"lineNumber":36,"author":{"gitId":"WeiLiangLOL"},"content":"    }"},{"lineNumber":37,"author":{"gitId":"WeiLiangLOL"},"content":""},{"lineNumber":38,"author":{"gitId":"WeiLiangLOL"},"content":"    /**"},{"lineNumber":39,"author":{"gitId":"WeiLiangLOL"},"content":"     * Creates two dialog boxes, one echoing user input and the other containing Duke\u0027s reply and then appends them to"},{"lineNumber":40,"author":{"gitId":"WeiLiangLOL"},"content":"     * the dialog container. Clears the user input after processing."},{"lineNumber":41,"author":{"gitId":"WeiLiangLOL"},"content":"     */"},{"lineNumber":42,"author":{"gitId":"WeiLiangLOL"},"content":"    @FXML"},{"lineNumber":43,"author":{"gitId":"WeiLiangLOL"},"content":"    private void handleUserInput() {"},{"lineNumber":44,"author":{"gitId":"WeiLiangLOL"},"content":"        String input \u003d userInput.getText();"},{"lineNumber":45,"author":{"gitId":"WeiLiangLOL"},"content":"        String response;"},{"lineNumber":46,"author":{"gitId":"WeiLiangLOL"},"content":"        try {"},{"lineNumber":47,"author":{"gitId":"WeiLiangLOL"},"content":"            response \u003d duke.getResponse(input);"},{"lineNumber":48,"author":{"gitId":"WeiLiangLOL"},"content":"        } catch (DukeException e) {"},{"lineNumber":49,"author":{"gitId":"WeiLiangLOL"},"content":"            response \u003d e.getMessage();"},{"lineNumber":50,"author":{"gitId":"WeiLiangLOL"},"content":"        }"},{"lineNumber":51,"author":{"gitId":"WeiLiangLOL"},"content":"        dialogContainer.getChildren().addAll("},{"lineNumber":52,"author":{"gitId":"WeiLiangLOL"},"content":"                DialogBox.getDialog(\"You: \" + input),"},{"lineNumber":53,"author":{"gitId":"WeiLiangLOL"},"content":"                DialogBox.getDialog(\"Bot: \" + response)"},{"lineNumber":54,"author":{"gitId":"WeiLiangLOL"},"content":"        );"},{"lineNumber":55,"author":{"gitId":"WeiLiangLOL"},"content":"        userInput.clear();"},{"lineNumber":56,"author":{"gitId":"WeiLiangLOL"},"content":"    }"},{"lineNumber":57,"author":{"gitId":"WeiLiangLOL"},"content":""},{"lineNumber":58,"author":{"gitId":"WeiLiangLOL"},"content":"}"}],"authorContributionMap":{"WeiLiangLOL":58}},{"path":"src/main/resources/view/DialogBox.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"WeiLiangLOL"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"},{"lineNumber":2,"author":{"gitId":"WeiLiangLOL"},"content":""},{"lineNumber":3,"author":{"gitId":"WeiLiangLOL"},"content":"\u003c?import javafx.geometry.*?\u003e"},{"lineNumber":4,"author":{"gitId":"WeiLiangLOL"},"content":"\u003c?import javafx.scene.control.*?\u003e"},{"lineNumber":5,"author":{"gitId":"WeiLiangLOL"},"content":"\u003c?import javafx.scene.layout.*?\u003e"},{"lineNumber":6,"author":{"gitId":"WeiLiangLOL"},"content":""},{"lineNumber":7,"author":{"gitId":"WeiLiangLOL"},"content":"\u003cfx:root maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefWidth\u003d\"400.0\" type\u003d\"javafx.scene.layout.HBox\" xmlns\u003d\"http://javafx.com/javafx\" xmlns:fx\u003d\"http://javafx.com/fxml\"\u003e"},{"lineNumber":8,"author":{"gitId":"WeiLiangLOL"},"content":"    \u003cpadding\u003e"},{"lineNumber":9,"author":{"gitId":"WeiLiangLOL"},"content":"        \u003cInsets left\u003d\"10.0\" right\u003d\"10.0\" top\u003d\"10.0\" /\u003e"},{"lineNumber":10,"author":{"gitId":"WeiLiangLOL"},"content":"    \u003c/padding\u003e"},{"lineNumber":11,"author":{"gitId":"WeiLiangLOL"},"content":"    \u003cLabel fx:id\u003d\"dialog\" maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" text\u003d\"Label\" wrapText\u003d\"true\" /\u003e"},{"lineNumber":12,"author":{"gitId":"WeiLiangLOL"},"content":"\u003c/fx:root\u003e"}],"authorContributionMap":{"WeiLiangLOL":12}},{"path":"src/main/resources/view/MainWindow.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"WeiLiangLOL"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"},{"lineNumber":2,"author":{"gitId":"WeiLiangLOL"},"content":""},{"lineNumber":3,"author":{"gitId":"WeiLiangLOL"},"content":"\u003c?import javafx.scene.control.Button?\u003e"},{"lineNumber":4,"author":{"gitId":"WeiLiangLOL"},"content":"\u003c?import javafx.scene.control.ScrollPane?\u003e"},{"lineNumber":5,"author":{"gitId":"WeiLiangLOL"},"content":"\u003c?import javafx.scene.control.TextField?\u003e"},{"lineNumber":6,"author":{"gitId":"WeiLiangLOL"},"content":"\u003c?import javafx.scene.layout.AnchorPane?\u003e"},{"lineNumber":7,"author":{"gitId":"WeiLiangLOL"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e"},{"lineNumber":8,"author":{"gitId":"WeiLiangLOL"},"content":""},{"lineNumber":9,"author":{"gitId":"WeiLiangLOL"},"content":"\u003cAnchorPane maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefHeight\u003d\"600.0\""},{"lineNumber":10,"author":{"gitId":"WeiLiangLOL"},"content":"            prefWidth\u003d\"400.0\" xmlns\u003d\"http://javafx.com/javafx\" xmlns:fx\u003d\"http://javafx.com/fxml\""},{"lineNumber":11,"author":{"gitId":"WeiLiangLOL"},"content":"            fx:controller\u003d\"com.weiliang.ui.MainWindow\"\u003e"},{"lineNumber":12,"author":{"gitId":"WeiLiangLOL"},"content":"    \u003cTextField fx:id\u003d\"userInput\" layoutY\u003d\"558.0\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"324.0\""},{"lineNumber":13,"author":{"gitId":"WeiLiangLOL"},"content":"               AnchorPane.bottomAnchor\u003d\"1.0\"/\u003e"},{"lineNumber":14,"author":{"gitId":"WeiLiangLOL"},"content":"    \u003cButton fx:id\u003d\"sendButton\" layoutX\u003d\"324.0\" layoutY\u003d\"558.0\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleUserInput\""},{"lineNumber":15,"author":{"gitId":"WeiLiangLOL"},"content":"            prefHeight\u003d\"41.0\" prefWidth\u003d\"76.0\" text\u003d\"Send\"/\u003e"},{"lineNumber":16,"author":{"gitId":"WeiLiangLOL"},"content":"    \u003cScrollPane fx:id\u003d\"scrollPane\" hbarPolicy\u003d\"NEVER\" hvalue\u003d\"1.0\" prefHeight\u003d\"557.0\" prefWidth\u003d\"400.0\" vvalue\u003d\"1.0\"\u003e"},{"lineNumber":17,"author":{"gitId":"WeiLiangLOL"},"content":"        \u003cVBox fx:id\u003d\"dialogContainer\" prefHeight\u003d\"552.0\" prefWidth\u003d\"388.0\"/\u003e"},{"lineNumber":18,"author":{"gitId":"WeiLiangLOL"},"content":"    \u003c/ScrollPane\u003e"},{"lineNumber":19,"author":{"gitId":"WeiLiangLOL"},"content":"\u003c/AnchorPane\u003e"}],"authorContributionMap":{"WeiLiangLOL":19}},{"path":"src/test/java/com/weiliang/task/DeadlineTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"WeiLiangLOL"},"content":"package com.weiliang.task;"},{"lineNumber":2,"author":{"gitId":"WeiLiangLOL"},"content":""},{"lineNumber":3,"author":{"gitId":"WeiLiangLOL"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;"},{"lineNumber":4,"author":{"gitId":"WeiLiangLOL"},"content":""},{"lineNumber":5,"author":{"gitId":"WeiLiangLOL"},"content":"import org.junit.jupiter.api.Test;"},{"lineNumber":6,"author":{"gitId":"WeiLiangLOL"},"content":""},{"lineNumber":7,"author":{"gitId":"WeiLiangLOL"},"content":"import com.weiliang.DukeException;"},{"lineNumber":8,"author":{"gitId":"WeiLiangLOL"},"content":""},{"lineNumber":9,"author":{"gitId":"WeiLiangLOL"},"content":"public class DeadlineTest {"},{"lineNumber":10,"author":{"gitId":"WeiLiangLOL"},"content":""},{"lineNumber":11,"author":{"gitId":"WeiLiangLOL"},"content":"    @Test"},{"lineNumber":12,"author":{"gitId":"WeiLiangLOL"},"content":"    public void deadlineTest() throws DukeException {"},{"lineNumber":13,"author":{"gitId":"WeiLiangLOL"},"content":"        Task task \u003d new Deadline(\"test\", \"2000-01-01T23:59:59\");"},{"lineNumber":14,"author":{"gitId":"WeiLiangLOL"},"content":"        task.markComplete();"},{"lineNumber":15,"author":{"gitId":"WeiLiangLOL"},"content":"        assertEquals(task.toString(), \"[D][X] test (by: 01 January 2000, 11:59PM)\");"},{"lineNumber":16,"author":{"gitId":"WeiLiangLOL"},"content":"    }"},{"lineNumber":17,"author":{"gitId":"WeiLiangLOL"},"content":""},{"lineNumber":18,"author":{"gitId":"WeiLiangLOL"},"content":"}"}],"authorContributionMap":{"WeiLiangLOL":18}},{"path":"src/test/java/com/weiliang/task/EventTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"WeiLiangLOL"},"content":"package com.weiliang.task;"},{"lineNumber":2,"author":{"gitId":"WeiLiangLOL"},"content":""},{"lineNumber":3,"author":{"gitId":"WeiLiangLOL"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;"},{"lineNumber":4,"author":{"gitId":"WeiLiangLOL"},"content":""},{"lineNumber":5,"author":{"gitId":"WeiLiangLOL"},"content":"import org.junit.jupiter.api.Test;"},{"lineNumber":6,"author":{"gitId":"WeiLiangLOL"},"content":""},{"lineNumber":7,"author":{"gitId":"WeiLiangLOL"},"content":"import com.weiliang.DukeException;"},{"lineNumber":8,"author":{"gitId":"WeiLiangLOL"},"content":""},{"lineNumber":9,"author":{"gitId":"WeiLiangLOL"},"content":"public class EventTest {"},{"lineNumber":10,"author":{"gitId":"WeiLiangLOL"},"content":""},{"lineNumber":11,"author":{"gitId":"WeiLiangLOL"},"content":"    @Test"},{"lineNumber":12,"author":{"gitId":"WeiLiangLOL"},"content":"    public void eventTest() throws DukeException {"},{"lineNumber":13,"author":{"gitId":"WeiLiangLOL"},"content":"        Task task \u003d new Event(\"test\", \"2000-01-01T23:59:59\");"},{"lineNumber":14,"author":{"gitId":"WeiLiangLOL"},"content":"        task.markComplete();"},{"lineNumber":15,"author":{"gitId":"WeiLiangLOL"},"content":"        assertEquals(task.toString(), \"[E][X] test (at: 01 January 2000, 11:59PM)\");"},{"lineNumber":16,"author":{"gitId":"WeiLiangLOL"},"content":"    }"},{"lineNumber":17,"author":{"gitId":"WeiLiangLOL"},"content":""},{"lineNumber":18,"author":{"gitId":"WeiLiangLOL"},"content":"}"}],"authorContributionMap":{"WeiLiangLOL":18}},{"path":"src/test/java/com/weiliang/task/TaskTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"WeiLiangLOL"},"content":"package com.weiliang.task;"},{"lineNumber":2,"author":{"gitId":"WeiLiangLOL"},"content":""},{"lineNumber":3,"author":{"gitId":"WeiLiangLOL"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;"},{"lineNumber":4,"author":{"gitId":"WeiLiangLOL"},"content":""},{"lineNumber":5,"author":{"gitId":"WeiLiangLOL"},"content":"import org.junit.jupiter.api.Test;"},{"lineNumber":6,"author":{"gitId":"WeiLiangLOL"},"content":""},{"lineNumber":7,"author":{"gitId":"WeiLiangLOL"},"content":"public class TaskTest {"},{"lineNumber":8,"author":{"gitId":"WeiLiangLOL"},"content":""},{"lineNumber":9,"author":{"gitId":"WeiLiangLOL"},"content":"    @Test"},{"lineNumber":10,"author":{"gitId":"WeiLiangLOL"},"content":"    public void taskTest() {"},{"lineNumber":11,"author":{"gitId":"WeiLiangLOL"},"content":"        Task task \u003d new Task(\"test\");"},{"lineNumber":12,"author":{"gitId":"WeiLiangLOL"},"content":"        assertEquals(task.toString(), \"[T][ ] test\");"},{"lineNumber":13,"author":{"gitId":"WeiLiangLOL"},"content":"    }"},{"lineNumber":14,"author":{"gitId":"WeiLiangLOL"},"content":""},{"lineNumber":15,"author":{"gitId":"WeiLiangLOL"},"content":"}"}],"authorContributionMap":{"WeiLiangLOL":15}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"WeiLiangLOL"},"content":"hello"},{"lineNumber":2,"author":{"gitId":"WeiLiangLOL"},"content":"event Birthday /at July 16"},{"lineNumber":3,"author":{"gitId":"WeiLiangLOL"},"content":"deadline Homework /by yesterday"},{"lineNumber":4,"author":{"gitId":"WeiLiangLOL"},"content":"done 2"},{"lineNumber":5,"author":{"gitId":"WeiLiangLOL"},"content":"bye"}],"authorContributionMap":{"WeiLiangLOL":5}}]
