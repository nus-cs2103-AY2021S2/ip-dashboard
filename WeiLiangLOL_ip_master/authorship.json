[{"path":"README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"# Duke project template"},{"lineNumber":2,"author":{"gitId":"-"},"content":""},{"lineNumber":3,"author":{"gitId":"WeiLiangLOL"},"content":"This is a project template for a greenfield Java project. It\u0027s named after the Java mascot _Duke_. Given below are instructions on how to use it. Wei Liang tampered with it!"},{"lineNumber":4,"author":{"gitId":"-"},"content":""},{"lineNumber":5,"author":{"gitId":"-"},"content":"## Setting up in Intellij"},{"lineNumber":6,"author":{"gitId":"-"},"content":""},{"lineNumber":7,"author":{"gitId":"-"},"content":"Prerequisites: JDK 11, update Intellij to the most recent version."},{"lineNumber":8,"author":{"gitId":"-"},"content":""},{"lineNumber":9,"author":{"gitId":"-"},"content":"1. Open Intellij (if you are not in the welcome screen, click `File` \u003e `Close Project` to close the existing project first)"},{"lineNumber":10,"author":{"gitId":"-"},"content":"1. Open the project into Intellij as follows:"},{"lineNumber":11,"author":{"gitId":"-"},"content":"   1. Click `Open`."},{"lineNumber":12,"author":{"gitId":"-"},"content":"   1. Select the project directory, and click `OK`."},{"lineNumber":13,"author":{"gitId":"-"},"content":"   1. If there are any further prompts, accept the defaults."},{"lineNumber":14,"author":{"gitId":"-"},"content":"1. Configure the project to use **JDK 11** (not other versions) as explained in [here](https://www.jetbrains.com/help/idea/sdk.html#set-up-jdk)."},{"lineNumber":15,"author":{"gitId":"-"},"content":"1. After that, locate the `src/main/java/Duke.java` file, right-click it, and choose `Run Duke.main()`. If the setup is correct, you should see something like the below:"},{"lineNumber":16,"author":{"gitId":"-"},"content":"   ```"},{"lineNumber":17,"author":{"gitId":"-"},"content":"   Hello from"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    ____        _        "},{"lineNumber":19,"author":{"gitId":"-"},"content":"   |  _ \\ _   _| | _____ "},{"lineNumber":20,"author":{"gitId":"-"},"content":"   | | | | | | | |/ / _ \\"},{"lineNumber":21,"author":{"gitId":"-"},"content":"   | |_| | |_| |   \u003c  __/"},{"lineNumber":22,"author":{"gitId":"-"},"content":"   |____/ \\__,_|_|\\_\\___|"},{"lineNumber":23,"author":{"gitId":"-"},"content":"   ```"}],"authorContributionMap":{"WeiLiangLOL":1,"-":22}},{"path":"src/main/java/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"WeiLiangLOL"},"content":"import java.util.Scanner;"},{"lineNumber":2,"author":{"gitId":"WeiLiangLOL"},"content":""},{"lineNumber":3,"author":{"gitId":"WeiLiangLOL"},"content":"import weiliang.bot.UI;"},{"lineNumber":4,"author":{"gitId":"WeiLiangLOL"},"content":"import weiliang.bot.task.TaskList;"},{"lineNumber":5,"author":{"gitId":"WeiLiangLOL"},"content":"import weiliang.bot.DukeException;"},{"lineNumber":6,"author":{"gitId":"WeiLiangLOL"},"content":"import weiliang.bot.Storage;"},{"lineNumber":7,"author":{"gitId":"WeiLiangLOL"},"content":""},{"lineNumber":8,"author":{"gitId":"WeiLiangLOL"},"content":"/**"},{"lineNumber":9,"author":{"gitId":"WeiLiangLOL"},"content":" * Main runner program"},{"lineNumber":10,"author":{"gitId":"WeiLiangLOL"},"content":" */"},{"lineNumber":11,"author":{"gitId":"WeiLiangLOL"},"content":"public class Duke implements Runnable {"},{"lineNumber":12,"author":{"gitId":"WeiLiangLOL"},"content":""},{"lineNumber":13,"author":{"gitId":"WeiLiangLOL"},"content":"    private Storage storage;"},{"lineNumber":14,"author":{"gitId":"WeiLiangLOL"},"content":"    private TaskList tasks;"},{"lineNumber":15,"author":{"gitId":"WeiLiangLOL"},"content":"    private UI ui;"},{"lineNumber":16,"author":{"gitId":"WeiLiangLOL"},"content":""},{"lineNumber":17,"author":{"gitId":"WeiLiangLOL"},"content":"    /**"},{"lineNumber":18,"author":{"gitId":"WeiLiangLOL"},"content":"     * Constructor for main duke program"},{"lineNumber":19,"author":{"gitId":"WeiLiangLOL"},"content":"     */"},{"lineNumber":20,"author":{"gitId":"WeiLiangLOL"},"content":"    public Duke() {"},{"lineNumber":21,"author":{"gitId":"WeiLiangLOL"},"content":"        this.storage \u003d new Storage(\"memory.txt\");"},{"lineNumber":22,"author":{"gitId":"WeiLiangLOL"},"content":"        this.ui \u003d new UI(\"SimpleBot\");"},{"lineNumber":23,"author":{"gitId":"WeiLiangLOL"},"content":"    }"},{"lineNumber":24,"author":{"gitId":"WeiLiangLOL"},"content":""},{"lineNumber":25,"author":{"gitId":"WeiLiangLOL"},"content":"    /**"},{"lineNumber":26,"author":{"gitId":"WeiLiangLOL"},"content":"     * Initializes duke experiment"},{"lineNumber":27,"author":{"gitId":"WeiLiangLOL"},"content":"     * "},{"lineNumber":28,"author":{"gitId":"WeiLiangLOL"},"content":"     * @throws DukeException if fail to init"},{"lineNumber":29,"author":{"gitId":"WeiLiangLOL"},"content":"     */"},{"lineNumber":30,"author":{"gitId":"WeiLiangLOL"},"content":"    public void init() throws DukeException {"},{"lineNumber":31,"author":{"gitId":"WeiLiangLOL"},"content":"        this.tasks \u003d storage.loadTasks();"},{"lineNumber":32,"author":{"gitId":"WeiLiangLOL"},"content":"        this.ui.loadTasks(tasks);"},{"lineNumber":33,"author":{"gitId":"WeiLiangLOL"},"content":"    }"},{"lineNumber":34,"author":{"gitId":"WeiLiangLOL"},"content":"    "},{"lineNumber":35,"author":{"gitId":"WeiLiangLOL"},"content":"    /**"},{"lineNumber":36,"author":{"gitId":"WeiLiangLOL"},"content":"     * Runs simulation"},{"lineNumber":37,"author":{"gitId":"WeiLiangLOL"},"content":"     */"},{"lineNumber":38,"author":{"gitId":"WeiLiangLOL"},"content":"    @Override"},{"lineNumber":39,"author":{"gitId":"WeiLiangLOL"},"content":"    public void run() {"},{"lineNumber":40,"author":{"gitId":"WeiLiangLOL"},"content":"        System.out.println(ui.getInitMessage());"},{"lineNumber":41,"author":{"gitId":"WeiLiangLOL"},"content":""},{"lineNumber":42,"author":{"gitId":"WeiLiangLOL"},"content":"        // Perform main logic loop"},{"lineNumber":43,"author":{"gitId":"WeiLiangLOL"},"content":"        try (Scanner scanner \u003d new Scanner(System.in)) {"},{"lineNumber":44,"author":{"gitId":"WeiLiangLOL"},"content":"            while (ui.isActive()) {"},{"lineNumber":45,"author":{"gitId":"WeiLiangLOL"},"content":"                System.out.print(\"You: \");"},{"lineNumber":46,"author":{"gitId":"WeiLiangLOL"},"content":"                String reply;"},{"lineNumber":47,"author":{"gitId":"WeiLiangLOL"},"content":"                try {"},{"lineNumber":48,"author":{"gitId":"WeiLiangLOL"},"content":"                    reply \u003d ui.respond(scanner.nextLine());"},{"lineNumber":49,"author":{"gitId":"WeiLiangLOL"},"content":"                } catch (DukeException e) {"},{"lineNumber":50,"author":{"gitId":"WeiLiangLOL"},"content":"                    reply \u003d ui.formatMessage(e.getMessage());"},{"lineNumber":51,"author":{"gitId":"WeiLiangLOL"},"content":"                }"},{"lineNumber":52,"author":{"gitId":"WeiLiangLOL"},"content":"                // Additional line break"},{"lineNumber":53,"author":{"gitId":"WeiLiangLOL"},"content":"                System.out.println();"},{"lineNumber":54,"author":{"gitId":"WeiLiangLOL"},"content":"                System.out.println(reply);"},{"lineNumber":55,"author":{"gitId":"WeiLiangLOL"},"content":"            }"},{"lineNumber":56,"author":{"gitId":"WeiLiangLOL"},"content":""},{"lineNumber":57,"author":{"gitId":"WeiLiangLOL"},"content":"            // Update after stopping"},{"lineNumber":58,"author":{"gitId":"WeiLiangLOL"},"content":"            storage.storeFile(tasks);"},{"lineNumber":59,"author":{"gitId":"WeiLiangLOL"},"content":"        }    "},{"lineNumber":60,"author":{"gitId":"WeiLiangLOL"},"content":"    }"},{"lineNumber":61,"author":{"gitId":"WeiLiangLOL"},"content":""},{"lineNumber":62,"author":{"gitId":"WeiLiangLOL"},"content":"    /**"},{"lineNumber":63,"author":{"gitId":"WeiLiangLOL"},"content":"     * Main runner method"},{"lineNumber":64,"author":{"gitId":"WeiLiangLOL"},"content":"     * @param args"},{"lineNumber":65,"author":{"gitId":"WeiLiangLOL"},"content":"     */"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    public static void main(String[] args) {"},{"lineNumber":67,"author":{"gitId":"WeiLiangLOL"},"content":"        try {"},{"lineNumber":68,"author":{"gitId":"WeiLiangLOL"},"content":"            Duke duke \u003d new Duke();"},{"lineNumber":69,"author":{"gitId":"WeiLiangLOL"},"content":"            duke.init();"},{"lineNumber":70,"author":{"gitId":"WeiLiangLOL"},"content":"            duke.run();"},{"lineNumber":71,"author":{"gitId":"WeiLiangLOL"},"content":"        } catch (DukeException e) {"},{"lineNumber":72,"author":{"gitId":"WeiLiangLOL"},"content":"            e.printStackTrace();"},{"lineNumber":73,"author":{"gitId":"WeiLiangLOL"},"content":"        }"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":75,"author":{"gitId":"-"},"content":"}"}],"authorContributionMap":{"WeiLiangLOL":72,"-":3}},{"path":"src/main/java/weiliang/bot/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"WeiLiangLOL"},"content":"package weiliang.bot;"},{"lineNumber":2,"author":{"gitId":"WeiLiangLOL"},"content":""},{"lineNumber":3,"author":{"gitId":"WeiLiangLOL"},"content":"/**"},{"lineNumber":4,"author":{"gitId":"WeiLiangLOL"},"content":" * Main wrapper class for Duke exceptions"},{"lineNumber":5,"author":{"gitId":"WeiLiangLOL"},"content":" */"},{"lineNumber":6,"author":{"gitId":"WeiLiangLOL"},"content":"public class DukeException extends Exception {"},{"lineNumber":7,"author":{"gitId":"WeiLiangLOL"},"content":""},{"lineNumber":8,"author":{"gitId":"WeiLiangLOL"},"content":"    private static final long serialVersionUID \u003d 1L;"},{"lineNumber":9,"author":{"gitId":"WeiLiangLOL"},"content":"    "},{"lineNumber":10,"author":{"gitId":"WeiLiangLOL"},"content":"    /**"},{"lineNumber":11,"author":{"gitId":"WeiLiangLOL"},"content":"     * Constructor for DukeException"},{"lineNumber":12,"author":{"gitId":"WeiLiangLOL"},"content":"     * "},{"lineNumber":13,"author":{"gitId":"WeiLiangLOL"},"content":"     * @param message the description of exception"},{"lineNumber":14,"author":{"gitId":"WeiLiangLOL"},"content":"     */"},{"lineNumber":15,"author":{"gitId":"WeiLiangLOL"},"content":"    public DukeException(String message) {"},{"lineNumber":16,"author":{"gitId":"WeiLiangLOL"},"content":"        super(message);"},{"lineNumber":17,"author":{"gitId":"WeiLiangLOL"},"content":"    }"},{"lineNumber":18,"author":{"gitId":"WeiLiangLOL"},"content":""},{"lineNumber":19,"author":{"gitId":"WeiLiangLOL"},"content":"}"}],"authorContributionMap":{"WeiLiangLOL":19}},{"path":"src/main/java/weiliang/bot/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"WeiLiangLOL"},"content":"package weiliang.bot;"},{"lineNumber":2,"author":{"gitId":"WeiLiangLOL"},"content":""},{"lineNumber":3,"author":{"gitId":"WeiLiangLOL"},"content":"import java.io.BufferedReader;"},{"lineNumber":4,"author":{"gitId":"WeiLiangLOL"},"content":"import java.io.BufferedWriter;"},{"lineNumber":5,"author":{"gitId":"WeiLiangLOL"},"content":"import java.io.File;"},{"lineNumber":6,"author":{"gitId":"WeiLiangLOL"},"content":"import java.io.FileReader;"},{"lineNumber":7,"author":{"gitId":"WeiLiangLOL"},"content":"import java.io.FileWriter;"},{"lineNumber":8,"author":{"gitId":"WeiLiangLOL"},"content":"import java.io.IOException;"},{"lineNumber":9,"author":{"gitId":"WeiLiangLOL"},"content":""},{"lineNumber":10,"author":{"gitId":"WeiLiangLOL"},"content":"import weiliang.bot.task.Deadline;"},{"lineNumber":11,"author":{"gitId":"WeiLiangLOL"},"content":"import weiliang.bot.task.Event;"},{"lineNumber":12,"author":{"gitId":"WeiLiangLOL"},"content":"import weiliang.bot.task.Task;"},{"lineNumber":13,"author":{"gitId":"WeiLiangLOL"},"content":"import weiliang.bot.task.TaskList;"},{"lineNumber":14,"author":{"gitId":"WeiLiangLOL"},"content":""},{"lineNumber":15,"author":{"gitId":"WeiLiangLOL"},"content":"/**"},{"lineNumber":16,"author":{"gitId":"WeiLiangLOL"},"content":" * Main text-based storage facility"},{"lineNumber":17,"author":{"gitId":"WeiLiangLOL"},"content":" */"},{"lineNumber":18,"author":{"gitId":"WeiLiangLOL"},"content":"public class Storage {"},{"lineNumber":19,"author":{"gitId":"WeiLiangLOL"},"content":""},{"lineNumber":20,"author":{"gitId":"WeiLiangLOL"},"content":"    /**"},{"lineNumber":21,"author":{"gitId":"WeiLiangLOL"},"content":"     * The filename to store to"},{"lineNumber":22,"author":{"gitId":"WeiLiangLOL"},"content":"     */"},{"lineNumber":23,"author":{"gitId":"WeiLiangLOL"},"content":"    private String filename;"},{"lineNumber":24,"author":{"gitId":"WeiLiangLOL"},"content":""},{"lineNumber":25,"author":{"gitId":"WeiLiangLOL"},"content":"    /**"},{"lineNumber":26,"author":{"gitId":"WeiLiangLOL"},"content":"     * Initializes a new storage"},{"lineNumber":27,"author":{"gitId":"WeiLiangLOL"},"content":"     * "},{"lineNumber":28,"author":{"gitId":"WeiLiangLOL"},"content":"     * @param filename the text file associated"},{"lineNumber":29,"author":{"gitId":"WeiLiangLOL"},"content":"     */"},{"lineNumber":30,"author":{"gitId":"WeiLiangLOL"},"content":"    public Storage(String filename) {"},{"lineNumber":31,"author":{"gitId":"WeiLiangLOL"},"content":"        this.filename \u003d filename;"},{"lineNumber":32,"author":{"gitId":"WeiLiangLOL"},"content":"    }"},{"lineNumber":33,"author":{"gitId":"WeiLiangLOL"},"content":""},{"lineNumber":34,"author":{"gitId":"WeiLiangLOL"},"content":"    /**"},{"lineNumber":35,"author":{"gitId":"WeiLiangLOL"},"content":"     * Stores lists of tasks into textfile"},{"lineNumber":36,"author":{"gitId":"WeiLiangLOL"},"content":"     * "},{"lineNumber":37,"author":{"gitId":"WeiLiangLOL"},"content":"     * @param tasks the lists of tasks"},{"lineNumber":38,"author":{"gitId":"WeiLiangLOL"},"content":"     */"},{"lineNumber":39,"author":{"gitId":"WeiLiangLOL"},"content":"    public void storeFile(TaskList tasks) {"},{"lineNumber":40,"author":{"gitId":"WeiLiangLOL"},"content":"        try (BufferedWriter bufferedWriter \u003d new BufferedWriter(new FileWriter(filename))) {"},{"lineNumber":41,"author":{"gitId":"WeiLiangLOL"},"content":"            for (Task task : tasks) {"},{"lineNumber":42,"author":{"gitId":"WeiLiangLOL"},"content":"                bufferedWriter.write(task.toFormattedString());"},{"lineNumber":43,"author":{"gitId":"WeiLiangLOL"},"content":"                bufferedWriter.newLine();"},{"lineNumber":44,"author":{"gitId":"WeiLiangLOL"},"content":"            }"},{"lineNumber":45,"author":{"gitId":"WeiLiangLOL"},"content":"        } catch (IOException e) {"},{"lineNumber":46,"author":{"gitId":"WeiLiangLOL"},"content":"            e.printStackTrace();"},{"lineNumber":47,"author":{"gitId":"WeiLiangLOL"},"content":"        }"},{"lineNumber":48,"author":{"gitId":"WeiLiangLOL"},"content":"    }"},{"lineNumber":49,"author":{"gitId":"WeiLiangLOL"},"content":""},{"lineNumber":50,"author":{"gitId":"WeiLiangLOL"},"content":""},{"lineNumber":51,"author":{"gitId":"WeiLiangLOL"},"content":"    /**"},{"lineNumber":52,"author":{"gitId":"WeiLiangLOL"},"content":"     * Retrieves list of tasks from text document"},{"lineNumber":53,"author":{"gitId":"WeiLiangLOL"},"content":"     * "},{"lineNumber":54,"author":{"gitId":"WeiLiangLOL"},"content":"     * @return task list associated"},{"lineNumber":55,"author":{"gitId":"WeiLiangLOL"},"content":"     * @throws DukeException if unable to fetch"},{"lineNumber":56,"author":{"gitId":"WeiLiangLOL"},"content":"     */"},{"lineNumber":57,"author":{"gitId":"WeiLiangLOL"},"content":"    public TaskList loadTasks() throws DukeException {"},{"lineNumber":58,"author":{"gitId":"WeiLiangLOL"},"content":"        TaskList tasks \u003d new TaskList();"},{"lineNumber":59,"author":{"gitId":"WeiLiangLOL"},"content":""},{"lineNumber":60,"author":{"gitId":"WeiLiangLOL"},"content":"        // Create if non-existent"},{"lineNumber":61,"author":{"gitId":"WeiLiangLOL"},"content":"        try {"},{"lineNumber":62,"author":{"gitId":"WeiLiangLOL"},"content":"            File file \u003d new File(filename);"},{"lineNumber":63,"author":{"gitId":"WeiLiangLOL"},"content":"            file.createNewFile();"},{"lineNumber":64,"author":{"gitId":"WeiLiangLOL"},"content":"        } catch (IOException e) {"},{"lineNumber":65,"author":{"gitId":"WeiLiangLOL"},"content":"            e.printStackTrace();"},{"lineNumber":66,"author":{"gitId":"WeiLiangLOL"},"content":"        }"},{"lineNumber":67,"author":{"gitId":"WeiLiangLOL"},"content":""},{"lineNumber":68,"author":{"gitId":"WeiLiangLOL"},"content":"        try (BufferedReader bufferedReader \u003d new BufferedReader(new FileReader(filename))) {"},{"lineNumber":69,"author":{"gitId":"WeiLiangLOL"},"content":"            String line \u003d bufferedReader.readLine();"},{"lineNumber":70,"author":{"gitId":"WeiLiangLOL"},"content":"            while (line !\u003d null \u0026\u0026 !line.isEmpty()) {"},{"lineNumber":71,"author":{"gitId":"WeiLiangLOL"},"content":"                tasks.add(parseTask(line));"},{"lineNumber":72,"author":{"gitId":"WeiLiangLOL"},"content":"                line \u003d bufferedReader.readLine();"},{"lineNumber":73,"author":{"gitId":"WeiLiangLOL"},"content":"            }"},{"lineNumber":74,"author":{"gitId":"WeiLiangLOL"},"content":"        } catch (IOException e) {"},{"lineNumber":75,"author":{"gitId":"WeiLiangLOL"},"content":"            e.printStackTrace();"},{"lineNumber":76,"author":{"gitId":"WeiLiangLOL"},"content":"        }"},{"lineNumber":77,"author":{"gitId":"WeiLiangLOL"},"content":""},{"lineNumber":78,"author":{"gitId":"WeiLiangLOL"},"content":"        return tasks;"},{"lineNumber":79,"author":{"gitId":"WeiLiangLOL"},"content":"    }"},{"lineNumber":80,"author":{"gitId":"WeiLiangLOL"},"content":""},{"lineNumber":81,"author":{"gitId":"WeiLiangLOL"},"content":"    /**"},{"lineNumber":82,"author":{"gitId":"WeiLiangLOL"},"content":"     * Inner method for parsing information"},{"lineNumber":83,"author":{"gitId":"WeiLiangLOL"},"content":"     * "},{"lineNumber":84,"author":{"gitId":"WeiLiangLOL"},"content":"     * @param content raw string content"},{"lineNumber":85,"author":{"gitId":"WeiLiangLOL"},"content":"     * @return parsed task"},{"lineNumber":86,"author":{"gitId":"WeiLiangLOL"},"content":"     */"},{"lineNumber":87,"author":{"gitId":"WeiLiangLOL"},"content":"    private Task parseTask(String content) {"},{"lineNumber":88,"author":{"gitId":"WeiLiangLOL"},"content":"        // Format -\u003e D | 1 | details | timing"},{"lineNumber":89,"author":{"gitId":"WeiLiangLOL"},"content":"        String[] parts \u003d content.split(\" \\\\| \");"},{"lineNumber":90,"author":{"gitId":"WeiLiangLOL"},"content":"        Task task;"},{"lineNumber":91,"author":{"gitId":"WeiLiangLOL"},"content":""},{"lineNumber":92,"author":{"gitId":"WeiLiangLOL"},"content":"        if (parts[0].equals(\"D\")) {"},{"lineNumber":93,"author":{"gitId":"WeiLiangLOL"},"content":"            task \u003d new Deadline(parts[2], parts[3]);"},{"lineNumber":94,"author":{"gitId":"WeiLiangLOL"},"content":"        } else if (parts[0].equals(\"E\")) {"},{"lineNumber":95,"author":{"gitId":"WeiLiangLOL"},"content":"            task \u003d new Event(parts[2], parts[3]);"},{"lineNumber":96,"author":{"gitId":"WeiLiangLOL"},"content":"        } else {"},{"lineNumber":97,"author":{"gitId":"WeiLiangLOL"},"content":"            task \u003d new Task(parts[2]);"},{"lineNumber":98,"author":{"gitId":"WeiLiangLOL"},"content":"        }"},{"lineNumber":99,"author":{"gitId":"WeiLiangLOL"},"content":""},{"lineNumber":100,"author":{"gitId":"WeiLiangLOL"},"content":"        if (parts[1].equals(\"1\")) {"},{"lineNumber":101,"author":{"gitId":"WeiLiangLOL"},"content":"            task.complete();"},{"lineNumber":102,"author":{"gitId":"WeiLiangLOL"},"content":"        }"},{"lineNumber":103,"author":{"gitId":"WeiLiangLOL"},"content":"        return task;"},{"lineNumber":104,"author":{"gitId":"WeiLiangLOL"},"content":"    }"},{"lineNumber":105,"author":{"gitId":"WeiLiangLOL"},"content":""},{"lineNumber":106,"author":{"gitId":"WeiLiangLOL"},"content":"}"}],"authorContributionMap":{"WeiLiangLOL":106}},{"path":"src/main/java/weiliang/bot/UI.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"WeiLiangLOL"},"content":"package weiliang.bot;"},{"lineNumber":2,"author":{"gitId":"WeiLiangLOL"},"content":""},{"lineNumber":3,"author":{"gitId":"WeiLiangLOL"},"content":"import weiliang.bot.task.Deadline;"},{"lineNumber":4,"author":{"gitId":"WeiLiangLOL"},"content":"import weiliang.bot.task.Event;"},{"lineNumber":5,"author":{"gitId":"WeiLiangLOL"},"content":"import weiliang.bot.task.Task;"},{"lineNumber":6,"author":{"gitId":"WeiLiangLOL"},"content":"import weiliang.bot.task.TaskList;"},{"lineNumber":7,"author":{"gitId":"WeiLiangLOL"},"content":""},{"lineNumber":8,"author":{"gitId":"WeiLiangLOL"},"content":"/**"},{"lineNumber":9,"author":{"gitId":"WeiLiangLOL"},"content":" * Main ui class"},{"lineNumber":10,"author":{"gitId":"WeiLiangLOL"},"content":" */"},{"lineNumber":11,"author":{"gitId":"WeiLiangLOL"},"content":"public class UI {"},{"lineNumber":12,"author":{"gitId":"WeiLiangLOL"},"content":""},{"lineNumber":13,"author":{"gitId":"WeiLiangLOL"},"content":"    private String name;"},{"lineNumber":14,"author":{"gitId":"WeiLiangLOL"},"content":"    private String logo;"},{"lineNumber":15,"author":{"gitId":"WeiLiangLOL"},"content":""},{"lineNumber":16,"author":{"gitId":"WeiLiangLOL"},"content":"    private boolean active;"},{"lineNumber":17,"author":{"gitId":"WeiLiangLOL"},"content":"    private TaskList tasks;"},{"lineNumber":18,"author":{"gitId":"WeiLiangLOL"},"content":""},{"lineNumber":19,"author":{"gitId":"WeiLiangLOL"},"content":"    /**"},{"lineNumber":20,"author":{"gitId":"WeiLiangLOL"},"content":"     * Creates an empty ui"},{"lineNumber":21,"author":{"gitId":"WeiLiangLOL"},"content":"     * "},{"lineNumber":22,"author":{"gitId":"WeiLiangLOL"},"content":"     * @param name the name for the bot"},{"lineNumber":23,"author":{"gitId":"WeiLiangLOL"},"content":"     */"},{"lineNumber":24,"author":{"gitId":"WeiLiangLOL"},"content":"    public UI(String name) {"},{"lineNumber":25,"author":{"gitId":"WeiLiangLOL"},"content":"        this.name \u003d name;"},{"lineNumber":26,"author":{"gitId":"WeiLiangLOL"},"content":"        this.logo \u003d \"  ___ _            _     ___      _   \\n\" + \" / __(_)_ __  _ __| |___| _ ) ___| |_ \\n\""},{"lineNumber":27,"author":{"gitId":"WeiLiangLOL"},"content":"                + \" \\\\__ \\\\ | \u0027  \\\\| \u0027_ \\\\ / -_) _ \\\\/ _ \\\\  _|\\n\" + \" |___/_|_|_|_| .__/_\\\\___|___/\\\\___/\\\\__|\\n\""},{"lineNumber":28,"author":{"gitId":"WeiLiangLOL"},"content":"                + \"             |_|                      \\n\\n\";"},{"lineNumber":29,"author":{"gitId":"WeiLiangLOL"},"content":"        this.active \u003d true;"},{"lineNumber":30,"author":{"gitId":"WeiLiangLOL"},"content":"        this.tasks \u003d new TaskList();"},{"lineNumber":31,"author":{"gitId":"WeiLiangLOL"},"content":"    }"},{"lineNumber":32,"author":{"gitId":"WeiLiangLOL"},"content":""},{"lineNumber":33,"author":{"gitId":"WeiLiangLOL"},"content":"    /**"},{"lineNumber":34,"author":{"gitId":"WeiLiangLOL"},"content":"     * Loads the tasks given list"},{"lineNumber":35,"author":{"gitId":"WeiLiangLOL"},"content":"     * "},{"lineNumber":36,"author":{"gitId":"WeiLiangLOL"},"content":"     * @param tasks tasks to load"},{"lineNumber":37,"author":{"gitId":"WeiLiangLOL"},"content":"     */"},{"lineNumber":38,"author":{"gitId":"WeiLiangLOL"},"content":"    public void loadTasks(TaskList tasks) {"},{"lineNumber":39,"author":{"gitId":"WeiLiangLOL"},"content":"        this.tasks \u003d tasks;"},{"lineNumber":40,"author":{"gitId":"WeiLiangLOL"},"content":"    }"},{"lineNumber":41,"author":{"gitId":"WeiLiangLOL"},"content":""},{"lineNumber":42,"author":{"gitId":"WeiLiangLOL"},"content":"    /**"},{"lineNumber":43,"author":{"gitId":"WeiLiangLOL"},"content":"     * Formats message to given form"},{"lineNumber":44,"author":{"gitId":"WeiLiangLOL"},"content":"     * "},{"lineNumber":45,"author":{"gitId":"WeiLiangLOL"},"content":"     * @param message user input"},{"lineNumber":46,"author":{"gitId":"WeiLiangLOL"},"content":"     * @return formatted bot message"},{"lineNumber":47,"author":{"gitId":"WeiLiangLOL"},"content":"     */"},{"lineNumber":48,"author":{"gitId":"WeiLiangLOL"},"content":"    public String formatMessage(String message) {"},{"lineNumber":49,"author":{"gitId":"WeiLiangLOL"},"content":"        return name + \": \" + message.replace(\"{{bot:name}}\", name);"},{"lineNumber":50,"author":{"gitId":"WeiLiangLOL"},"content":"    }"},{"lineNumber":51,"author":{"gitId":"WeiLiangLOL"},"content":""},{"lineNumber":52,"author":{"gitId":"WeiLiangLOL"},"content":"    /**"},{"lineNumber":53,"author":{"gitId":"WeiLiangLOL"},"content":"     * Gets initialization message"},{"lineNumber":54,"author":{"gitId":"WeiLiangLOL"},"content":"     * "},{"lineNumber":55,"author":{"gitId":"WeiLiangLOL"},"content":"     * @return init message"},{"lineNumber":56,"author":{"gitId":"WeiLiangLOL"},"content":"     */"},{"lineNumber":57,"author":{"gitId":"WeiLiangLOL"},"content":"    public String getInitMessage() {"},{"lineNumber":58,"author":{"gitId":"WeiLiangLOL"},"content":"        return logo + formatMessage(\"Hi, my name is {{bot:name}}!\");"},{"lineNumber":59,"author":{"gitId":"WeiLiangLOL"},"content":"    }"},{"lineNumber":60,"author":{"gitId":"WeiLiangLOL"},"content":""},{"lineNumber":61,"author":{"gitId":"WeiLiangLOL"},"content":"    /**"},{"lineNumber":62,"author":{"gitId":"WeiLiangLOL"},"content":"     * Check if the bot is alive"},{"lineNumber":63,"author":{"gitId":"WeiLiangLOL"},"content":"     * "},{"lineNumber":64,"author":{"gitId":"WeiLiangLOL"},"content":"     * @return true if active"},{"lineNumber":65,"author":{"gitId":"WeiLiangLOL"},"content":"     */"},{"lineNumber":66,"author":{"gitId":"WeiLiangLOL"},"content":"    public boolean isActive() {"},{"lineNumber":67,"author":{"gitId":"WeiLiangLOL"},"content":"        return active;"},{"lineNumber":68,"author":{"gitId":"WeiLiangLOL"},"content":"    }"},{"lineNumber":69,"author":{"gitId":"WeiLiangLOL"},"content":""},{"lineNumber":70,"author":{"gitId":"WeiLiangLOL"},"content":"    /**"},{"lineNumber":71,"author":{"gitId":"WeiLiangLOL"},"content":"     * Gets a parsed input from bot"},{"lineNumber":72,"author":{"gitId":"WeiLiangLOL"},"content":"     * "},{"lineNumber":73,"author":{"gitId":"WeiLiangLOL"},"content":"     * @param input user command"},{"lineNumber":74,"author":{"gitId":"WeiLiangLOL"},"content":"     * @return bot formatted string response"},{"lineNumber":75,"author":{"gitId":"WeiLiangLOL"},"content":"     * @throws DukeException if error while parsing"},{"lineNumber":76,"author":{"gitId":"WeiLiangLOL"},"content":"     */"},{"lineNumber":77,"author":{"gitId":"WeiLiangLOL"},"content":"    public String respond(String input) throws DukeException {"},{"lineNumber":78,"author":{"gitId":"WeiLiangLOL"},"content":"        // Clear leading and trailing whitespace"},{"lineNumber":79,"author":{"gitId":"WeiLiangLOL"},"content":"        input \u003d input.strip();"},{"lineNumber":80,"author":{"gitId":"WeiLiangLOL"},"content":""},{"lineNumber":81,"author":{"gitId":"WeiLiangLOL"},"content":"        // Greeting and exit"},{"lineNumber":82,"author":{"gitId":"WeiLiangLOL"},"content":"        if (input.equalsIgnoreCase(\"hello\")) {"},{"lineNumber":83,"author":{"gitId":"WeiLiangLOL"},"content":"            return formatMessage(\"Hello! My name is {{bot:name}}!\");"},{"lineNumber":84,"author":{"gitId":"WeiLiangLOL"},"content":"        }"},{"lineNumber":85,"author":{"gitId":"WeiLiangLOL"},"content":"        if (input.equalsIgnoreCase(\"bye\")) {"},{"lineNumber":86,"author":{"gitId":"WeiLiangLOL"},"content":"            active \u003d false;"},{"lineNumber":87,"author":{"gitId":"WeiLiangLOL"},"content":"            return formatMessage(\"Bye. Hope to see you again soon!\");"},{"lineNumber":88,"author":{"gitId":"WeiLiangLOL"},"content":"        }"},{"lineNumber":89,"author":{"gitId":"WeiLiangLOL"},"content":""},{"lineNumber":90,"author":{"gitId":"WeiLiangLOL"},"content":"        // Task related"},{"lineNumber":91,"author":{"gitId":"WeiLiangLOL"},"content":"        if (input.equals(\"list\")) {"},{"lineNumber":92,"author":{"gitId":"WeiLiangLOL"},"content":"            String message \u003d formatMessage(\"Printing list!\");"},{"lineNumber":93,"author":{"gitId":"WeiLiangLOL"},"content":"            for (int i \u003d 0; i \u003c tasks.size(); i++) {"},{"lineNumber":94,"author":{"gitId":"WeiLiangLOL"},"content":"                message +\u003d \"\\n\" + (i + 1) + \".\" + tasks.get(i);"},{"lineNumber":95,"author":{"gitId":"WeiLiangLOL"},"content":"            }"},{"lineNumber":96,"author":{"gitId":"WeiLiangLOL"},"content":"            return message;"},{"lineNumber":97,"author":{"gitId":"WeiLiangLOL"},"content":"        }"},{"lineNumber":98,"author":{"gitId":"WeiLiangLOL"},"content":"        if (input.matches(\"^delete \\\\d+$\")) {"},{"lineNumber":99,"author":{"gitId":"WeiLiangLOL"},"content":"            int taskNo \u003d Integer.parseInt(input.replaceFirst(\"delete \", \"\")) - 1;"},{"lineNumber":100,"author":{"gitId":"WeiLiangLOL"},"content":""},{"lineNumber":101,"author":{"gitId":"WeiLiangLOL"},"content":"            // Check if in tasks"},{"lineNumber":102,"author":{"gitId":"WeiLiangLOL"},"content":"            if (taskNo \u003e tasks.size() - 1) {"},{"lineNumber":103,"author":{"gitId":"WeiLiangLOL"},"content":"                return formatMessage(\"Unable to remove item!\");"},{"lineNumber":104,"author":{"gitId":"WeiLiangLOL"},"content":"            }"},{"lineNumber":105,"author":{"gitId":"WeiLiangLOL"},"content":""},{"lineNumber":106,"author":{"gitId":"WeiLiangLOL"},"content":"            // Mark complete"},{"lineNumber":107,"author":{"gitId":"WeiLiangLOL"},"content":"            Task task \u003d tasks.remove(taskNo);"},{"lineNumber":108,"author":{"gitId":"WeiLiangLOL"},"content":""},{"lineNumber":109,"author":{"gitId":"WeiLiangLOL"},"content":"            String message \u003d formatMessage(\"Noted, I have removed this task.\");"},{"lineNumber":110,"author":{"gitId":"WeiLiangLOL"},"content":"            message +\u003d \"\\n\" + task;"},{"lineNumber":111,"author":{"gitId":"WeiLiangLOL"},"content":"            message +\u003d \"\\n\" + \"Now you have \" + tasks.size() + \" tasks in the list.\";"},{"lineNumber":112,"author":{"gitId":"WeiLiangLOL"},"content":"            return message;"},{"lineNumber":113,"author":{"gitId":"WeiLiangLOL"},"content":"        }"},{"lineNumber":114,"author":{"gitId":"WeiLiangLOL"},"content":"        if (input.matches(\"^done \\\\d+$\")) {"},{"lineNumber":115,"author":{"gitId":"WeiLiangLOL"},"content":"            int taskNo \u003d Integer.parseInt(input.substring(5)) - 1;"},{"lineNumber":116,"author":{"gitId":"WeiLiangLOL"},"content":""},{"lineNumber":117,"author":{"gitId":"WeiLiangLOL"},"content":"            // Check if in tasks"},{"lineNumber":118,"author":{"gitId":"WeiLiangLOL"},"content":"            if (taskNo \u003e tasks.size() - 1) {"},{"lineNumber":119,"author":{"gitId":"WeiLiangLOL"},"content":"                return formatMessage(\"Unable to remove item!\");"},{"lineNumber":120,"author":{"gitId":"WeiLiangLOL"},"content":"            }"},{"lineNumber":121,"author":{"gitId":"WeiLiangLOL"},"content":""},{"lineNumber":122,"author":{"gitId":"WeiLiangLOL"},"content":"            // Mark complete"},{"lineNumber":123,"author":{"gitId":"WeiLiangLOL"},"content":"            Task task \u003d tasks.get(taskNo);"},{"lineNumber":124,"author":{"gitId":"WeiLiangLOL"},"content":"            task.complete();"},{"lineNumber":125,"author":{"gitId":"WeiLiangLOL"},"content":""},{"lineNumber":126,"author":{"gitId":"WeiLiangLOL"},"content":"            String message \u003d formatMessage(\"Nice, I\u0027ve marked the task as done!\");"},{"lineNumber":127,"author":{"gitId":"WeiLiangLOL"},"content":"            message +\u003d \"\\n\" + task;"},{"lineNumber":128,"author":{"gitId":"WeiLiangLOL"},"content":"            message +\u003d \"\\n\" + \"Now you have \" + tasks.size() + \" tasks in the list.\";"},{"lineNumber":129,"author":{"gitId":"WeiLiangLOL"},"content":"            return message;"},{"lineNumber":130,"author":{"gitId":"WeiLiangLOL"},"content":"        }"},{"lineNumber":131,"author":{"gitId":"WeiLiangLOL"},"content":"        if (input.startsWith(\"todo\")) {"},{"lineNumber":132,"author":{"gitId":"WeiLiangLOL"},"content":"            if (input.matches(\"^todo .+$\")) {"},{"lineNumber":133,"author":{"gitId":"WeiLiangLOL"},"content":"                Task task \u003d new Task(input.replaceFirst(\"todo \", \"\"));"},{"lineNumber":134,"author":{"gitId":"WeiLiangLOL"},"content":"                tasks.add(task);"},{"lineNumber":135,"author":{"gitId":"WeiLiangLOL"},"content":"                "},{"lineNumber":136,"author":{"gitId":"WeiLiangLOL"},"content":"                String message \u003d formatMessage(\"Got it! I\u0027ve added this task.\");"},{"lineNumber":137,"author":{"gitId":"WeiLiangLOL"},"content":"                message +\u003d \"\\n\" + task;"},{"lineNumber":138,"author":{"gitId":"WeiLiangLOL"},"content":"                message +\u003d \"\\n\" + \"Now you have \" + tasks.size() + \" tasks in the list.\";"},{"lineNumber":139,"author":{"gitId":"WeiLiangLOL"},"content":"                return message;"},{"lineNumber":140,"author":{"gitId":"WeiLiangLOL"},"content":"            } else {"},{"lineNumber":141,"author":{"gitId":"WeiLiangLOL"},"content":"                throw new DukeException(\"The description of a todo cannot be empty!\");"},{"lineNumber":142,"author":{"gitId":"WeiLiangLOL"},"content":"            }"},{"lineNumber":143,"author":{"gitId":"WeiLiangLOL"},"content":"        }"},{"lineNumber":144,"author":{"gitId":"WeiLiangLOL"},"content":"        if (input.startsWith(\"deadline\")) {"},{"lineNumber":145,"author":{"gitId":"WeiLiangLOL"},"content":"            if (input.matches(\"^deadline .+ \\\\/by .+$\")) {"},{"lineNumber":146,"author":{"gitId":"WeiLiangLOL"},"content":"                String[] inputs \u003d input.replaceFirst(\"deadline \", \"\").split(\" /by \");"},{"lineNumber":147,"author":{"gitId":"WeiLiangLOL"},"content":"                Task task \u003d new Deadline(inputs[0], inputs[1]);"},{"lineNumber":148,"author":{"gitId":"WeiLiangLOL"},"content":"                tasks.add(task);"},{"lineNumber":149,"author":{"gitId":"WeiLiangLOL"},"content":"                "},{"lineNumber":150,"author":{"gitId":"WeiLiangLOL"},"content":"                String message \u003d formatMessage(\"Got it! I\u0027ve added this task.\");"},{"lineNumber":151,"author":{"gitId":"WeiLiangLOL"},"content":"                message +\u003d \"\\n\" + task;"},{"lineNumber":152,"author":{"gitId":"WeiLiangLOL"},"content":"                message +\u003d \"\\n\" + \"Now you have \" + tasks.size() + \" tasks in the list.\";"},{"lineNumber":153,"author":{"gitId":"WeiLiangLOL"},"content":"                return message;"},{"lineNumber":154,"author":{"gitId":"WeiLiangLOL"},"content":"            } else {"},{"lineNumber":155,"author":{"gitId":"WeiLiangLOL"},"content":"                throw new DukeException(\"The description of a deadline cannot be empty!\");"},{"lineNumber":156,"author":{"gitId":"WeiLiangLOL"},"content":"            }"},{"lineNumber":157,"author":{"gitId":"WeiLiangLOL"},"content":"        }"},{"lineNumber":158,"author":{"gitId":"WeiLiangLOL"},"content":"        if (input.startsWith(\"event\")) {"},{"lineNumber":159,"author":{"gitId":"WeiLiangLOL"},"content":"            if (input.matches(\"^event .+ \\\\/at .+$\")) {"},{"lineNumber":160,"author":{"gitId":"WeiLiangLOL"},"content":"                String[] inputs \u003d input.replaceFirst(\"event \", \"\").split(\" /at \");"},{"lineNumber":161,"author":{"gitId":"WeiLiangLOL"},"content":"                Task task \u003d new Event(inputs[0], inputs[1]);"},{"lineNumber":162,"author":{"gitId":"WeiLiangLOL"},"content":"                tasks.add(task);"},{"lineNumber":163,"author":{"gitId":"WeiLiangLOL"},"content":"                "},{"lineNumber":164,"author":{"gitId":"WeiLiangLOL"},"content":"                String message \u003d formatMessage(\"Got it! I\u0027ve added this task.\");"},{"lineNumber":165,"author":{"gitId":"WeiLiangLOL"},"content":"                message +\u003d \"\\n\" + task;"},{"lineNumber":166,"author":{"gitId":"WeiLiangLOL"},"content":"                message +\u003d \"\\n\" + \"Now you have \" + tasks.size() + \" tasks in the list.\";"},{"lineNumber":167,"author":{"gitId":"WeiLiangLOL"},"content":"                return message;"},{"lineNumber":168,"author":{"gitId":"WeiLiangLOL"},"content":"            } else {"},{"lineNumber":169,"author":{"gitId":"WeiLiangLOL"},"content":"                throw new DukeException(\"The description of an event cannot be empty!\");"},{"lineNumber":170,"author":{"gitId":"WeiLiangLOL"},"content":"            }"},{"lineNumber":171,"author":{"gitId":"WeiLiangLOL"},"content":"        }"},{"lineNumber":172,"author":{"gitId":"WeiLiangLOL"},"content":"        if (input.matches(\"^find .+$\")) {"},{"lineNumber":173,"author":{"gitId":"WeiLiangLOL"},"content":"            String searchField \u003d input.substring(5);"},{"lineNumber":174,"author":{"gitId":"WeiLiangLOL"},"content":"            String message \u003d formatMessage(\"Printing matches!\");"},{"lineNumber":175,"author":{"gitId":"WeiLiangLOL"},"content":"            int i \u003d 0;"},{"lineNumber":176,"author":{"gitId":"WeiLiangLOL"},"content":"            for (Task task : tasks) {"},{"lineNumber":177,"author":{"gitId":"WeiLiangLOL"},"content":"                if (task.getDescription().contains(searchField)) {"},{"lineNumber":178,"author":{"gitId":"WeiLiangLOL"},"content":"                    message +\u003d \"\\n\" + (i+1) + \".\" + task;"},{"lineNumber":179,"author":{"gitId":"WeiLiangLOL"},"content":"                }"},{"lineNumber":180,"author":{"gitId":"WeiLiangLOL"},"content":"                i++;"},{"lineNumber":181,"author":{"gitId":"WeiLiangLOL"},"content":"            }"},{"lineNumber":182,"author":{"gitId":"WeiLiangLOL"},"content":"            if (i \u003d\u003d 0) {"},{"lineNumber":183,"author":{"gitId":"WeiLiangLOL"},"content":"                message +\u003d \"\\nNo results found!\";"},{"lineNumber":184,"author":{"gitId":"WeiLiangLOL"},"content":"            }"},{"lineNumber":185,"author":{"gitId":"WeiLiangLOL"},"content":"            return message;"},{"lineNumber":186,"author":{"gitId":"WeiLiangLOL"},"content":"        }"},{"lineNumber":187,"author":{"gitId":"WeiLiangLOL"},"content":""},{"lineNumber":188,"author":{"gitId":"WeiLiangLOL"},"content":"        // Default"},{"lineNumber":189,"author":{"gitId":"WeiLiangLOL"},"content":"        // Don\u0027t actually need to throw bot exception"},{"lineNumber":190,"author":{"gitId":"WeiLiangLOL"},"content":"        throw new DukeException(\"Don\u0027t understand.\");"},{"lineNumber":191,"author":{"gitId":"WeiLiangLOL"},"content":"    }"},{"lineNumber":192,"author":{"gitId":"WeiLiangLOL"},"content":""},{"lineNumber":193,"author":{"gitId":"WeiLiangLOL"},"content":"}"}],"authorContributionMap":{"WeiLiangLOL":193}},{"path":"src/main/java/weiliang/bot/task/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"WeiLiangLOL"},"content":"package weiliang.bot.task;"},{"lineNumber":2,"author":{"gitId":"WeiLiangLOL"},"content":""},{"lineNumber":3,"author":{"gitId":"WeiLiangLOL"},"content":"import java.time.LocalDateTime;"},{"lineNumber":4,"author":{"gitId":"WeiLiangLOL"},"content":"import java.time.format.DateTimeFormatter;"},{"lineNumber":5,"author":{"gitId":"WeiLiangLOL"},"content":""},{"lineNumber":6,"author":{"gitId":"WeiLiangLOL"},"content":"public class Deadline extends Task {"},{"lineNumber":7,"author":{"gitId":"WeiLiangLOL"},"content":""},{"lineNumber":8,"author":{"gitId":"WeiLiangLOL"},"content":"    private LocalDateTime timing;"},{"lineNumber":9,"author":{"gitId":"WeiLiangLOL"},"content":""},{"lineNumber":10,"author":{"gitId":"WeiLiangLOL"},"content":"    public Deadline(String task, String timing) {"},{"lineNumber":11,"author":{"gitId":"WeiLiangLOL"},"content":"        super(task);"},{"lineNumber":12,"author":{"gitId":"WeiLiangLOL"},"content":"        this.timing \u003d LocalDateTime.parse(timing);"},{"lineNumber":13,"author":{"gitId":"WeiLiangLOL"},"content":"    }"},{"lineNumber":14,"author":{"gitId":"WeiLiangLOL"},"content":""},{"lineNumber":15,"author":{"gitId":"WeiLiangLOL"},"content":"    @Override"},{"lineNumber":16,"author":{"gitId":"WeiLiangLOL"},"content":"    public String toFormattedString() {"},{"lineNumber":17,"author":{"gitId":"WeiLiangLOL"},"content":"        return \"D | \" + (completed ? 1 : 0) + \" | \" + task + \" | \" + timing;"},{"lineNumber":18,"author":{"gitId":"WeiLiangLOL"},"content":"    }"},{"lineNumber":19,"author":{"gitId":"WeiLiangLOL"},"content":""},{"lineNumber":20,"author":{"gitId":"WeiLiangLOL"},"content":"    @Override"},{"lineNumber":21,"author":{"gitId":"WeiLiangLOL"},"content":"    public String toString() {"},{"lineNumber":22,"author":{"gitId":"WeiLiangLOL"},"content":"        return \"[D][\" + (completed ? \"X\" : \" \") + \"] \" + task + \" (by: \""},{"lineNumber":23,"author":{"gitId":"WeiLiangLOL"},"content":"                + timing.format(DateTimeFormatter.ofPattern(\"dd MMMM YYYY, hh:mma\")) + \")\";"},{"lineNumber":24,"author":{"gitId":"WeiLiangLOL"},"content":"    }"},{"lineNumber":25,"author":{"gitId":"WeiLiangLOL"},"content":""},{"lineNumber":26,"author":{"gitId":"WeiLiangLOL"},"content":"}"}],"authorContributionMap":{"WeiLiangLOL":26}},{"path":"src/main/java/weiliang/bot/task/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"WeiLiangLOL"},"content":"package weiliang.bot.task;"},{"lineNumber":2,"author":{"gitId":"WeiLiangLOL"},"content":""},{"lineNumber":3,"author":{"gitId":"WeiLiangLOL"},"content":"import java.time.LocalDateTime;"},{"lineNumber":4,"author":{"gitId":"WeiLiangLOL"},"content":"import java.time.format.DateTimeFormatter;"},{"lineNumber":5,"author":{"gitId":"WeiLiangLOL"},"content":""},{"lineNumber":6,"author":{"gitId":"WeiLiangLOL"},"content":"public class Event extends Task {"},{"lineNumber":7,"author":{"gitId":"WeiLiangLOL"},"content":""},{"lineNumber":8,"author":{"gitId":"WeiLiangLOL"},"content":"    private LocalDateTime timing;"},{"lineNumber":9,"author":{"gitId":"WeiLiangLOL"},"content":""},{"lineNumber":10,"author":{"gitId":"WeiLiangLOL"},"content":"    public Event(String task, String timing) {"},{"lineNumber":11,"author":{"gitId":"WeiLiangLOL"},"content":"        super(task);"},{"lineNumber":12,"author":{"gitId":"WeiLiangLOL"},"content":"        this.timing \u003d LocalDateTime.parse(timing);"},{"lineNumber":13,"author":{"gitId":"WeiLiangLOL"},"content":"    }"},{"lineNumber":14,"author":{"gitId":"WeiLiangLOL"},"content":""},{"lineNumber":15,"author":{"gitId":"WeiLiangLOL"},"content":"    @Override"},{"lineNumber":16,"author":{"gitId":"WeiLiangLOL"},"content":"    public String toFormattedString() {"},{"lineNumber":17,"author":{"gitId":"WeiLiangLOL"},"content":"        return \"E | \" + (completed ? 1 : 0) + \" | \" + task + \" | \" + timing;"},{"lineNumber":18,"author":{"gitId":"WeiLiangLOL"},"content":"    }"},{"lineNumber":19,"author":{"gitId":"WeiLiangLOL"},"content":""},{"lineNumber":20,"author":{"gitId":"WeiLiangLOL"},"content":"    @Override"},{"lineNumber":21,"author":{"gitId":"WeiLiangLOL"},"content":"    public String toString() {"},{"lineNumber":22,"author":{"gitId":"WeiLiangLOL"},"content":"        return \"[E][\" + (completed ? \"X\" : \" \") + \"] \" + task + \" (at: \""},{"lineNumber":23,"author":{"gitId":"WeiLiangLOL"},"content":"                + timing.format(DateTimeFormatter.ofPattern(\"dd MMMM YYYY, hh:mma\")) + \")\";"},{"lineNumber":24,"author":{"gitId":"WeiLiangLOL"},"content":"    }"},{"lineNumber":25,"author":{"gitId":"WeiLiangLOL"},"content":""},{"lineNumber":26,"author":{"gitId":"WeiLiangLOL"},"content":"}"}],"authorContributionMap":{"WeiLiangLOL":26}},{"path":"src/main/java/weiliang/bot/task/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"WeiLiangLOL"},"content":"package weiliang.bot.task;"},{"lineNumber":2,"author":{"gitId":"WeiLiangLOL"},"content":""},{"lineNumber":3,"author":{"gitId":"WeiLiangLOL"},"content":"public class Task {"},{"lineNumber":4,"author":{"gitId":"WeiLiangLOL"},"content":""},{"lineNumber":5,"author":{"gitId":"WeiLiangLOL"},"content":"    protected String task;"},{"lineNumber":6,"author":{"gitId":"WeiLiangLOL"},"content":"    protected boolean completed;"},{"lineNumber":7,"author":{"gitId":"WeiLiangLOL"},"content":""},{"lineNumber":8,"author":{"gitId":"WeiLiangLOL"},"content":"    public Task(String task) {"},{"lineNumber":9,"author":{"gitId":"WeiLiangLOL"},"content":"        this.task \u003d task;"},{"lineNumber":10,"author":{"gitId":"WeiLiangLOL"},"content":"    }"},{"lineNumber":11,"author":{"gitId":"WeiLiangLOL"},"content":""},{"lineNumber":12,"author":{"gitId":"WeiLiangLOL"},"content":"    public void complete() {"},{"lineNumber":13,"author":{"gitId":"WeiLiangLOL"},"content":"        this.completed \u003d true;"},{"lineNumber":14,"author":{"gitId":"WeiLiangLOL"},"content":"    }"},{"lineNumber":15,"author":{"gitId":"WeiLiangLOL"},"content":""},{"lineNumber":16,"author":{"gitId":"WeiLiangLOL"},"content":"    public String getDescription() {"},{"lineNumber":17,"author":{"gitId":"WeiLiangLOL"},"content":"        return task;"},{"lineNumber":18,"author":{"gitId":"WeiLiangLOL"},"content":"    }"},{"lineNumber":19,"author":{"gitId":"WeiLiangLOL"},"content":""},{"lineNumber":20,"author":{"gitId":"WeiLiangLOL"},"content":"    public String toFormattedString() {"},{"lineNumber":21,"author":{"gitId":"WeiLiangLOL"},"content":"        return \"T | \" + (completed ? 1 : 0) + \" | \" + task;"},{"lineNumber":22,"author":{"gitId":"WeiLiangLOL"},"content":"    }"},{"lineNumber":23,"author":{"gitId":"WeiLiangLOL"},"content":""},{"lineNumber":24,"author":{"gitId":"WeiLiangLOL"},"content":"    @Override"},{"lineNumber":25,"author":{"gitId":"WeiLiangLOL"},"content":"    public String toString() {"},{"lineNumber":26,"author":{"gitId":"WeiLiangLOL"},"content":"        return \"[T][\" + (completed ? \"X\" : \" \") + \"] \" + task;"},{"lineNumber":27,"author":{"gitId":"WeiLiangLOL"},"content":"    }"},{"lineNumber":28,"author":{"gitId":"WeiLiangLOL"},"content":""},{"lineNumber":29,"author":{"gitId":"WeiLiangLOL"},"content":"}"}],"authorContributionMap":{"WeiLiangLOL":29}},{"path":"src/main/java/weiliang/bot/task/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"WeiLiangLOL"},"content":"package weiliang.bot.task;"},{"lineNumber":2,"author":{"gitId":"WeiLiangLOL"},"content":""},{"lineNumber":3,"author":{"gitId":"WeiLiangLOL"},"content":"import java.util.ArrayList;"},{"lineNumber":4,"author":{"gitId":"WeiLiangLOL"},"content":"import java.util.Iterator;"},{"lineNumber":5,"author":{"gitId":"WeiLiangLOL"},"content":"import java.util.List;"},{"lineNumber":6,"author":{"gitId":"WeiLiangLOL"},"content":""},{"lineNumber":7,"author":{"gitId":"WeiLiangLOL"},"content":"import weiliang.bot.DukeException;"},{"lineNumber":8,"author":{"gitId":"WeiLiangLOL"},"content":""},{"lineNumber":9,"author":{"gitId":"WeiLiangLOL"},"content":"public class TaskList implements Iterable\u003cTask\u003e {"},{"lineNumber":10,"author":{"gitId":"WeiLiangLOL"},"content":""},{"lineNumber":11,"author":{"gitId":"WeiLiangLOL"},"content":"    private List\u003cTask\u003e tasks;"},{"lineNumber":12,"author":{"gitId":"WeiLiangLOL"},"content":""},{"lineNumber":13,"author":{"gitId":"WeiLiangLOL"},"content":"    public TaskList() {"},{"lineNumber":14,"author":{"gitId":"WeiLiangLOL"},"content":"        this(new ArrayList\u003c\u003e());"},{"lineNumber":15,"author":{"gitId":"WeiLiangLOL"},"content":"    }"},{"lineNumber":16,"author":{"gitId":"WeiLiangLOL"},"content":""},{"lineNumber":17,"author":{"gitId":"WeiLiangLOL"},"content":"    public TaskList(List\u003cTask\u003e tasks) {"},{"lineNumber":18,"author":{"gitId":"WeiLiangLOL"},"content":"        this.tasks \u003d tasks;"},{"lineNumber":19,"author":{"gitId":"WeiLiangLOL"},"content":"    }"},{"lineNumber":20,"author":{"gitId":"WeiLiangLOL"},"content":""},{"lineNumber":21,"author":{"gitId":"WeiLiangLOL"},"content":"    public int size() {"},{"lineNumber":22,"author":{"gitId":"WeiLiangLOL"},"content":"        return tasks.size();"},{"lineNumber":23,"author":{"gitId":"WeiLiangLOL"},"content":"    }"},{"lineNumber":24,"author":{"gitId":"WeiLiangLOL"},"content":""},{"lineNumber":25,"author":{"gitId":"WeiLiangLOL"},"content":"    public Task get(int taskNum) throws DukeException {"},{"lineNumber":26,"author":{"gitId":"WeiLiangLOL"},"content":"        if (taskNum \u003e\u003d 0 \u0026\u0026 taskNum \u003c tasks.size()) {"},{"lineNumber":27,"author":{"gitId":"WeiLiangLOL"},"content":"            return tasks.get(taskNum);"},{"lineNumber":28,"author":{"gitId":"WeiLiangLOL"},"content":"        } else {"},{"lineNumber":29,"author":{"gitId":"WeiLiangLOL"},"content":"            throw new DukeException(\"Item not found!\");"},{"lineNumber":30,"author":{"gitId":"WeiLiangLOL"},"content":"        }"},{"lineNumber":31,"author":{"gitId":"WeiLiangLOL"},"content":"    }"},{"lineNumber":32,"author":{"gitId":"WeiLiangLOL"},"content":""},{"lineNumber":33,"author":{"gitId":"WeiLiangLOL"},"content":"    public Task remove(int taskNum) throws DukeException {"},{"lineNumber":34,"author":{"gitId":"WeiLiangLOL"},"content":"        if (taskNum \u003e\u003d 0 \u0026\u0026 taskNum \u003c tasks.size()) {"},{"lineNumber":35,"author":{"gitId":"WeiLiangLOL"},"content":"            return tasks.remove(taskNum);"},{"lineNumber":36,"author":{"gitId":"WeiLiangLOL"},"content":"        } else {"},{"lineNumber":37,"author":{"gitId":"WeiLiangLOL"},"content":"            throw new DukeException(\"Item not found!\");"},{"lineNumber":38,"author":{"gitId":"WeiLiangLOL"},"content":"        }"},{"lineNumber":39,"author":{"gitId":"WeiLiangLOL"},"content":"    }"},{"lineNumber":40,"author":{"gitId":"WeiLiangLOL"},"content":""},{"lineNumber":41,"author":{"gitId":"WeiLiangLOL"},"content":"    public void add(Task task) throws DukeException {"},{"lineNumber":42,"author":{"gitId":"WeiLiangLOL"},"content":"        if (!tasks.add(task)) {"},{"lineNumber":43,"author":{"gitId":"WeiLiangLOL"},"content":"            throw new DukeException(\"Failed to add task!\");"},{"lineNumber":44,"author":{"gitId":"WeiLiangLOL"},"content":"        }"},{"lineNumber":45,"author":{"gitId":"WeiLiangLOL"},"content":"    }"},{"lineNumber":46,"author":{"gitId":"WeiLiangLOL"},"content":""},{"lineNumber":47,"author":{"gitId":"WeiLiangLOL"},"content":"    @Override"},{"lineNumber":48,"author":{"gitId":"WeiLiangLOL"},"content":"    public Iterator\u003cTask\u003e iterator() {"},{"lineNumber":49,"author":{"gitId":"WeiLiangLOL"},"content":"        return tasks.iterator();"},{"lineNumber":50,"author":{"gitId":"WeiLiangLOL"},"content":"    }"},{"lineNumber":51,"author":{"gitId":"WeiLiangLOL"},"content":""},{"lineNumber":52,"author":{"gitId":"WeiLiangLOL"},"content":"}"}],"authorContributionMap":{"WeiLiangLOL":52}},{"path":"src/test/java/weiliang/bot/task/DeadlineTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"WeiLiangLOL"},"content":"package weiliang.bot.task;"},{"lineNumber":2,"author":{"gitId":"WeiLiangLOL"},"content":""},{"lineNumber":3,"author":{"gitId":"WeiLiangLOL"},"content":"import org.junit.jupiter.api.Test;"},{"lineNumber":4,"author":{"gitId":"WeiLiangLOL"},"content":""},{"lineNumber":5,"author":{"gitId":"WeiLiangLOL"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;"},{"lineNumber":6,"author":{"gitId":"WeiLiangLOL"},"content":""},{"lineNumber":7,"author":{"gitId":"WeiLiangLOL"},"content":"public class DeadlineTest {"},{"lineNumber":8,"author":{"gitId":"WeiLiangLOL"},"content":"    "},{"lineNumber":9,"author":{"gitId":"WeiLiangLOL"},"content":"    @Test"},{"lineNumber":10,"author":{"gitId":"WeiLiangLOL"},"content":"    public void taskTest() {"},{"lineNumber":11,"author":{"gitId":"WeiLiangLOL"},"content":"        Task task \u003d new Deadline(\"test\", \"2000-01-01T23:59:59\");"},{"lineNumber":12,"author":{"gitId":"WeiLiangLOL"},"content":"        task.complete();"},{"lineNumber":13,"author":{"gitId":"WeiLiangLOL"},"content":"        assertEquals(task, \"[T][X] test (by: 01 January 2000, 11:59PM)\");"},{"lineNumber":14,"author":{"gitId":"WeiLiangLOL"},"content":"    }"},{"lineNumber":15,"author":{"gitId":"WeiLiangLOL"},"content":""},{"lineNumber":16,"author":{"gitId":"WeiLiangLOL"},"content":"}"}],"authorContributionMap":{"WeiLiangLOL":16}},{"path":"src/test/java/weiliang/bot/task/TaskTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"WeiLiangLOL"},"content":"package weiliang.bot.task;"},{"lineNumber":2,"author":{"gitId":"WeiLiangLOL"},"content":""},{"lineNumber":3,"author":{"gitId":"WeiLiangLOL"},"content":"import org.junit.jupiter.api.Test;"},{"lineNumber":4,"author":{"gitId":"WeiLiangLOL"},"content":""},{"lineNumber":5,"author":{"gitId":"WeiLiangLOL"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;"},{"lineNumber":6,"author":{"gitId":"WeiLiangLOL"},"content":""},{"lineNumber":7,"author":{"gitId":"WeiLiangLOL"},"content":"public class TaskTest {"},{"lineNumber":8,"author":{"gitId":"WeiLiangLOL"},"content":"    "},{"lineNumber":9,"author":{"gitId":"WeiLiangLOL"},"content":"    @Test"},{"lineNumber":10,"author":{"gitId":"WeiLiangLOL"},"content":"    public void taskTest() {"},{"lineNumber":11,"author":{"gitId":"WeiLiangLOL"},"content":"        Task task \u003d new Task(\"test\");"},{"lineNumber":12,"author":{"gitId":"WeiLiangLOL"},"content":"        assertEquals(task.toString(), \"[T][ ] test\");"},{"lineNumber":13,"author":{"gitId":"WeiLiangLOL"},"content":"    }"},{"lineNumber":14,"author":{"gitId":"WeiLiangLOL"},"content":""},{"lineNumber":15,"author":{"gitId":"WeiLiangLOL"},"content":"}"}],"authorContributionMap":{"WeiLiangLOL":15}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"WeiLiangLOL"},"content":"hello"},{"lineNumber":2,"author":{"gitId":"WeiLiangLOL"},"content":"event Birthday /at July 16"},{"lineNumber":3,"author":{"gitId":"WeiLiangLOL"},"content":"deadline Homework /by yesterday"},{"lineNumber":4,"author":{"gitId":"WeiLiangLOL"},"content":"done 2"},{"lineNumber":5,"author":{"gitId":"WeiLiangLOL"},"content":"bye"}],"authorContributionMap":{"WeiLiangLOL":5}}]
