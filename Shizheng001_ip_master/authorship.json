[{"path":"ip-add-gradle-support/docs/README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"Shizheng001"},"content":"# User Guide"},{"lineNumber":2,"author":{"gitId":"Shizheng001"},"content":""},{"lineNumber":3,"author":{"gitId":"Shizheng001"},"content":"## Features "},{"lineNumber":4,"author":{"gitId":"Shizheng001"},"content":""},{"lineNumber":5,"author":{"gitId":"Shizheng001"},"content":"### Feature 1 "},{"lineNumber":6,"author":{"gitId":"Shizheng001"},"content":"Description of feature."},{"lineNumber":7,"author":{"gitId":"Shizheng001"},"content":""},{"lineNumber":8,"author":{"gitId":"Shizheng001"},"content":"## Usage"},{"lineNumber":9,"author":{"gitId":"Shizheng001"},"content":""},{"lineNumber":10,"author":{"gitId":"Shizheng001"},"content":"### `Keyword` - Describe action"},{"lineNumber":11,"author":{"gitId":"Shizheng001"},"content":""},{"lineNumber":12,"author":{"gitId":"Shizheng001"},"content":"Describe action and its outcome."},{"lineNumber":13,"author":{"gitId":"Shizheng001"},"content":""},{"lineNumber":14,"author":{"gitId":"Shizheng001"},"content":"Example of usage: "},{"lineNumber":15,"author":{"gitId":"Shizheng001"},"content":""},{"lineNumber":16,"author":{"gitId":"Shizheng001"},"content":"`keyword (optional arguments)`"},{"lineNumber":17,"author":{"gitId":"Shizheng001"},"content":""},{"lineNumber":18,"author":{"gitId":"Shizheng001"},"content":"Expected outcome:"},{"lineNumber":19,"author":{"gitId":"Shizheng001"},"content":""},{"lineNumber":20,"author":{"gitId":"Shizheng001"},"content":"`outcome`"}],"authorContributionMap":{"Shizheng001":20}},{"path":"ip-add-gradle-support/text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"Shizheng001"},"content":"@ECHO OFF"},{"lineNumber":2,"author":{"gitId":"Shizheng001"},"content":""},{"lineNumber":3,"author":{"gitId":"Shizheng001"},"content":"REM create bin directory if it doesn\u0027t exist"},{"lineNumber":4,"author":{"gitId":"Shizheng001"},"content":"if not exist ..\\bin mkdir ..\\bin"},{"lineNumber":5,"author":{"gitId":"Shizheng001"},"content":""},{"lineNumber":6,"author":{"gitId":"Shizheng001"},"content":"REM delete output from previous run"},{"lineNumber":7,"author":{"gitId":"Shizheng001"},"content":"del ACTUAL.TXT"},{"lineNumber":8,"author":{"gitId":"Shizheng001"},"content":""},{"lineNumber":9,"author":{"gitId":"Shizheng001"},"content":"REM compile the code into the bin folder"},{"lineNumber":10,"author":{"gitId":"Shizheng001"},"content":"javac  -cp ..\\src -Xlint:none -d ..\\bin ..\\src\\main\\java\\Duke.java"},{"lineNumber":11,"author":{"gitId":"Shizheng001"},"content":"IF ERRORLEVEL 1 ("},{"lineNumber":12,"author":{"gitId":"Shizheng001"},"content":"    echo ********** BUILD FAILURE **********"},{"lineNumber":13,"author":{"gitId":"Shizheng001"},"content":"    exit /b 1"},{"lineNumber":14,"author":{"gitId":"Shizheng001"},"content":")"},{"lineNumber":15,"author":{"gitId":"Shizheng001"},"content":"REM no error here, errorlevel \u003d\u003d 0"},{"lineNumber":16,"author":{"gitId":"Shizheng001"},"content":""},{"lineNumber":17,"author":{"gitId":"Shizheng001"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"},{"lineNumber":18,"author":{"gitId":"Shizheng001"},"content":"java -classpath ..\\bin Duke \u003c input.txt \u003e ACTUAL.TXT"},{"lineNumber":19,"author":{"gitId":"Shizheng001"},"content":""},{"lineNumber":20,"author":{"gitId":"Shizheng001"},"content":"REM compare the output to the expected output"},{"lineNumber":21,"author":{"gitId":"Shizheng001"},"content":"FC ACTUAL.TXT EXPECTED.TXT"}],"authorContributionMap":{"Shizheng001":21}},{"path":"src/main/java/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Shizheng001"},"content":"import Duke.*;"},{"lineNumber":2,"author":{"gitId":"Shizheng001"},"content":"import DukeException.DukeException;"},{"lineNumber":3,"author":{"gitId":"Shizheng001"},"content":"import Parser.Parser;"},{"lineNumber":4,"author":{"gitId":"Shizheng001"},"content":"import Storage.Storage;"},{"lineNumber":5,"author":{"gitId":"Shizheng001"},"content":"import Ui.Ui;"},{"lineNumber":6,"author":{"gitId":"Shizheng001"},"content":""},{"lineNumber":7,"author":{"gitId":"Shizheng001"},"content":""},{"lineNumber":8,"author":{"gitId":"-"},"content":"public class Duke {"},{"lineNumber":9,"author":{"gitId":"Shizheng001"},"content":"    public static final String LOG_PATH \u003d \"./duke.txt\";"},{"lineNumber":10,"author":{"gitId":"Shizheng001"},"content":"    private Storage storage;"},{"lineNumber":11,"author":{"gitId":"Shizheng001"},"content":"    private TaskList tasks;"},{"lineNumber":12,"author":{"gitId":"Shizheng001"},"content":"    private Ui ui;"},{"lineNumber":13,"author":{"gitId":"Shizheng001"},"content":""},{"lineNumber":14,"author":{"gitId":"Shizheng001"},"content":"    public Duke(String filepath) {"},{"lineNumber":15,"author":{"gitId":"Shizheng001"},"content":"        this.storage \u003d new Storage(filepath);"},{"lineNumber":16,"author":{"gitId":"Shizheng001"},"content":"        this.tasks \u003d new TaskList(this.storage);"},{"lineNumber":17,"author":{"gitId":"Shizheng001"},"content":"        this.ui \u003d new Ui();"},{"lineNumber":18,"author":{"gitId":"Shizheng001"},"content":"    }"},{"lineNumber":19,"author":{"gitId":"Shizheng001"},"content":""},{"lineNumber":20,"author":{"gitId":"Shizheng001"},"content":"    public static void main(String[] args) throws DukeException {"},{"lineNumber":21,"author":{"gitId":"Shizheng001"},"content":"        try {"},{"lineNumber":22,"author":{"gitId":"Shizheng001"},"content":"            new Duke(LOG_PATH).run();"},{"lineNumber":23,"author":{"gitId":"Shizheng001"},"content":"        } catch (DukeException e) {"},{"lineNumber":24,"author":{"gitId":"Shizheng001"},"content":"            throw new DukeException(\"unable to load file, probably wrong format.\");"},{"lineNumber":25,"author":{"gitId":"Shizheng001"},"content":"        }"},{"lineNumber":26,"author":{"gitId":"Shizheng001"},"content":"    }"},{"lineNumber":27,"author":{"gitId":"Shizheng001"},"content":""},{"lineNumber":28,"author":{"gitId":"Shizheng001"},"content":"    private void process(Parser p) {"},{"lineNumber":29,"author":{"gitId":"Shizheng001"},"content":""},{"lineNumber":30,"author":{"gitId":"Shizheng001"},"content":"        switch (p.getCommand()) {"},{"lineNumber":31,"author":{"gitId":"Shizheng001"},"content":"            case \"delete\":"},{"lineNumber":32,"author":{"gitId":"Shizheng001"},"content":"                this.tasks.remove(p.getTaskNum());"},{"lineNumber":33,"author":{"gitId":"Shizheng001"},"content":"                ui.printTaskRemovedMessage((p.getTaskNum()));"},{"lineNumber":34,"author":{"gitId":"Shizheng001"},"content":"                break;"},{"lineNumber":35,"author":{"gitId":"Shizheng001"},"content":"            case \"done\":"},{"lineNumber":36,"author":{"gitId":"Shizheng001"},"content":"                Task done \u003d this.tasks.get(p.getTaskNum());"},{"lineNumber":37,"author":{"gitId":"Shizheng001"},"content":"                done.markDone();"},{"lineNumber":38,"author":{"gitId":"Shizheng001"},"content":"                this.tasks.set(p.getTaskNum(), done);"},{"lineNumber":39,"author":{"gitId":"Shizheng001"},"content":"                ui.printDoneMessage((done));"},{"lineNumber":40,"author":{"gitId":"Shizheng001"},"content":"                break;"},{"lineNumber":41,"author":{"gitId":"Shizheng001"},"content":"            case \"add\":"},{"lineNumber":42,"author":{"gitId":"Shizheng001"},"content":"                this.tasks.add(p.getTask());"},{"lineNumber":43,"author":{"gitId":"Shizheng001"},"content":"                ui.printTaskAddedMessage(p.getTask(), this.tasks.getSize());"},{"lineNumber":44,"author":{"gitId":"Shizheng001"},"content":"                break;"},{"lineNumber":45,"author":{"gitId":"Shizheng001"},"content":"            case \"set\":"},{"lineNumber":46,"author":{"gitId":"Shizheng001"},"content":"                this.tasks.set(p.getTaskNum(), p.getTask());"},{"lineNumber":47,"author":{"gitId":"Shizheng001"},"content":"                break;"},{"lineNumber":48,"author":{"gitId":"Shizheng001"},"content":"            case \"list\":"},{"lineNumber":49,"author":{"gitId":"Shizheng001"},"content":"                ui.printList(this.tasks);"},{"lineNumber":50,"author":{"gitId":"Shizheng001"},"content":"                break;"},{"lineNumber":51,"author":{"gitId":"Shizheng001"},"content":"            default:"},{"lineNumber":52,"author":{"gitId":"Shizheng001"},"content":"        }"},{"lineNumber":53,"author":{"gitId":"Shizheng001"},"content":"    }"},{"lineNumber":54,"author":{"gitId":"Shizheng001"},"content":""},{"lineNumber":55,"author":{"gitId":"Shizheng001"},"content":"    public void run() throws DukeException {"},{"lineNumber":56,"author":{"gitId":"Shizheng001"},"content":"        Ui.printGreeting();"},{"lineNumber":57,"author":{"gitId":"Shizheng001"},"content":""},{"lineNumber":58,"author":{"gitId":"Shizheng001"},"content":"        while (true) {"},{"lineNumber":59,"author":{"gitId":"Shizheng001"},"content":"            String userInput \u003d ui.getUserInput();"},{"lineNumber":60,"author":{"gitId":"Shizheng001"},"content":"            Parser p;"},{"lineNumber":61,"author":{"gitId":"Shizheng001"},"content":""},{"lineNumber":62,"author":{"gitId":"Shizheng001"},"content":"            try {"},{"lineNumber":63,"author":{"gitId":"Shizheng001"},"content":"                p \u003d Parser.parse(userInput);"},{"lineNumber":64,"author":{"gitId":"Shizheng001"},"content":"            } catch (DukeException e) {"},{"lineNumber":65,"author":{"gitId":"Shizheng001"},"content":"                System.out.println(e.getMessage());"},{"lineNumber":66,"author":{"gitId":"Shizheng001"},"content":"                continue;"},{"lineNumber":67,"author":{"gitId":"Shizheng001"},"content":"            }"},{"lineNumber":68,"author":{"gitId":"Shizheng001"},"content":"            if (p.getCommand().equals(\"bye\")) {"},{"lineNumber":69,"author":{"gitId":"Shizheng001"},"content":"                break;"},{"lineNumber":70,"author":{"gitId":"Shizheng001"},"content":"            }"},{"lineNumber":71,"author":{"gitId":"Shizheng001"},"content":"            this.process(p);"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":73,"author":{"gitId":"Shizheng001"},"content":"        Ui.printGoodbye();"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":75,"author":{"gitId":"-"},"content":"}"}],"authorContributionMap":{"Shizheng001":71,"-":4}},{"path":"src/main/java/Duke/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Shizheng001"},"content":"package Duke;"},{"lineNumber":2,"author":{"gitId":"Shizheng001"},"content":""},{"lineNumber":3,"author":{"gitId":"Shizheng001"},"content":"import java.time.LocalDate;"},{"lineNumber":4,"author":{"gitId":"Shizheng001"},"content":"import java.time.format.DateTimeFormatter;"},{"lineNumber":5,"author":{"gitId":"Shizheng001"},"content":""},{"lineNumber":6,"author":{"gitId":"Shizheng001"},"content":"public class Deadline extends Task {"},{"lineNumber":7,"author":{"gitId":"Shizheng001"},"content":"    private final LocalDate deadLine;"},{"lineNumber":8,"author":{"gitId":"Shizheng001"},"content":""},{"lineNumber":9,"author":{"gitId":"Shizheng001"},"content":"    public Deadline(String description, String deadLine) {"},{"lineNumber":10,"author":{"gitId":"Shizheng001"},"content":"        super(description);"},{"lineNumber":11,"author":{"gitId":"Shizheng001"},"content":"        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"yyyy-M-dd\");"},{"lineNumber":12,"author":{"gitId":"Shizheng001"},"content":"        this.deadLine \u003d LocalDate.parse(deadLine.trim(), formatter);"},{"lineNumber":13,"author":{"gitId":"Shizheng001"},"content":"    }"},{"lineNumber":14,"author":{"gitId":"Shizheng001"},"content":""},{"lineNumber":15,"author":{"gitId":"Shizheng001"},"content":"    @Override"},{"lineNumber":16,"author":{"gitId":"Shizheng001"},"content":"    public String encode() {"},{"lineNumber":17,"author":{"gitId":"Shizheng001"},"content":"        return \"D|\" + super.encode() + \" | \" + this.deadLine.format(DateTimeFormatter.ofPattern(\"yyyy-M-dd\"));"},{"lineNumber":18,"author":{"gitId":"Shizheng001"},"content":"    }"},{"lineNumber":19,"author":{"gitId":"Shizheng001"},"content":""},{"lineNumber":20,"author":{"gitId":"Shizheng001"},"content":"    @Override"},{"lineNumber":21,"author":{"gitId":"Shizheng001"},"content":"    public String toString() {"},{"lineNumber":22,"author":{"gitId":"Shizheng001"},"content":"        return \"[D]\" + super.toString() + \" | \" + \" (by: \" + this.deadLine.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\")) + \")\";"},{"lineNumber":23,"author":{"gitId":"Shizheng001"},"content":"    }"},{"lineNumber":24,"author":{"gitId":"Shizheng001"},"content":""},{"lineNumber":25,"author":{"gitId":"Shizheng001"},"content":"}"}],"authorContributionMap":{"Shizheng001":25}},{"path":"src/main/java/Duke/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Shizheng001"},"content":"package Duke;"},{"lineNumber":2,"author":{"gitId":"Shizheng001"},"content":""},{"lineNumber":3,"author":{"gitId":"Shizheng001"},"content":"import java.time.LocalDate;"},{"lineNumber":4,"author":{"gitId":"Shizheng001"},"content":"import java.time.format.DateTimeFormatter;"},{"lineNumber":5,"author":{"gitId":"Shizheng001"},"content":""},{"lineNumber":6,"author":{"gitId":"Shizheng001"},"content":"public class Event extends Task {"},{"lineNumber":7,"author":{"gitId":"Shizheng001"},"content":"    private LocalDate eventTime;"},{"lineNumber":8,"author":{"gitId":"Shizheng001"},"content":"    private DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"yyyy-M-dd\");"},{"lineNumber":9,"author":{"gitId":"Shizheng001"},"content":""},{"lineNumber":10,"author":{"gitId":"Shizheng001"},"content":"        public Event(String description, String eventTime) {"},{"lineNumber":11,"author":{"gitId":"Shizheng001"},"content":"            super(description);"},{"lineNumber":12,"author":{"gitId":"Shizheng001"},"content":"            this.eventTime \u003d LocalDate.parse(eventTime.trim(), formatter);"},{"lineNumber":13,"author":{"gitId":"Shizheng001"},"content":"        }"},{"lineNumber":14,"author":{"gitId":"Shizheng001"},"content":"    @Override"},{"lineNumber":15,"author":{"gitId":"Shizheng001"},"content":"    public String encode() {"},{"lineNumber":16,"author":{"gitId":"Shizheng001"},"content":"        return \"E|\" + super.encode() + \" | \" + this.eventTime.format(DateTimeFormatter.ofPattern(\"yyyy-M-dd\"));"},{"lineNumber":17,"author":{"gitId":"Shizheng001"},"content":"    }"},{"lineNumber":18,"author":{"gitId":"Shizheng001"},"content":""},{"lineNumber":19,"author":{"gitId":"Shizheng001"},"content":"    @Override"},{"lineNumber":20,"author":{"gitId":"Shizheng001"},"content":"    public String toString() {"},{"lineNumber":21,"author":{"gitId":"Shizheng001"},"content":"        return \"[E]\" + super.toString() + \" (at: \" + this.eventTime.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\")) + \")\";"},{"lineNumber":22,"author":{"gitId":"Shizheng001"},"content":"    }"},{"lineNumber":23,"author":{"gitId":"Shizheng001"},"content":"}"},{"lineNumber":24,"author":{"gitId":"Shizheng001"},"content":""},{"lineNumber":25,"author":{"gitId":"Shizheng001"},"content":""}],"authorContributionMap":{"Shizheng001":25}},{"path":"src/main/java/Duke/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Shizheng001"},"content":"package Duke;"},{"lineNumber":2,"author":{"gitId":"Shizheng001"},"content":""},{"lineNumber":3,"author":{"gitId":"Shizheng001"},"content":"public class Task {"},{"lineNumber":4,"author":{"gitId":"Shizheng001"},"content":"    protected String description;"},{"lineNumber":5,"author":{"gitId":"Shizheng001"},"content":"    protected boolean isDone;"},{"lineNumber":6,"author":{"gitId":"Shizheng001"},"content":"    protected String dateTime;"},{"lineNumber":7,"author":{"gitId":"Shizheng001"},"content":""},{"lineNumber":8,"author":{"gitId":"Shizheng001"},"content":"    public Task(String description) {"},{"lineNumber":9,"author":{"gitId":"Shizheng001"},"content":"        this.description \u003d description;"},{"lineNumber":10,"author":{"gitId":"Shizheng001"},"content":"        this.isDone \u003d false;"},{"lineNumber":11,"author":{"gitId":"Shizheng001"},"content":"    }"},{"lineNumber":12,"author":{"gitId":"Shizheng001"},"content":""},{"lineNumber":13,"author":{"gitId":"Shizheng001"},"content":"    public Task(String description, String dateTime) {"},{"lineNumber":14,"author":{"gitId":"Shizheng001"},"content":"        this.description \u003d description;"},{"lineNumber":15,"author":{"gitId":"Shizheng001"},"content":"        this.dateTime \u003d dateTime;"},{"lineNumber":16,"author":{"gitId":"Shizheng001"},"content":"    }"},{"lineNumber":17,"author":{"gitId":"Shizheng001"},"content":""},{"lineNumber":18,"author":{"gitId":"Shizheng001"},"content":"    public void markDone() {"},{"lineNumber":19,"author":{"gitId":"Shizheng001"},"content":"        this.isDone \u003d true;"},{"lineNumber":20,"author":{"gitId":"Shizheng001"},"content":"    }"},{"lineNumber":21,"author":{"gitId":"Shizheng001"},"content":"    public String getDoneStatus() {"},{"lineNumber":22,"author":{"gitId":"Shizheng001"},"content":"        return (isDone ? \"X\" : \" \");"},{"lineNumber":23,"author":{"gitId":"Shizheng001"},"content":"    }"},{"lineNumber":24,"author":{"gitId":"Shizheng001"},"content":""},{"lineNumber":25,"author":{"gitId":"Shizheng001"},"content":"    public String getDescription() {"},{"lineNumber":26,"author":{"gitId":"Shizheng001"},"content":"        return this.description;"},{"lineNumber":27,"author":{"gitId":"Shizheng001"},"content":"    }"},{"lineNumber":28,"author":{"gitId":"Shizheng001"},"content":""},{"lineNumber":29,"author":{"gitId":"Shizheng001"},"content":"    public String encode() {"},{"lineNumber":30,"author":{"gitId":"Shizheng001"},"content":"        if (isDone) {"},{"lineNumber":31,"author":{"gitId":"Shizheng001"},"content":"            return \"X|\" + this.description ;"},{"lineNumber":32,"author":{"gitId":"Shizheng001"},"content":"        } else {"},{"lineNumber":33,"author":{"gitId":"Shizheng001"},"content":"            return \" |\" + this.description ;"},{"lineNumber":34,"author":{"gitId":"Shizheng001"},"content":"        }"},{"lineNumber":35,"author":{"gitId":"Shizheng001"},"content":"    }"},{"lineNumber":36,"author":{"gitId":"Shizheng001"},"content":""},{"lineNumber":37,"author":{"gitId":"Shizheng001"},"content":"    public String toString() {"},{"lineNumber":38,"author":{"gitId":"Shizheng001"},"content":"        return \"[\" + getDoneStatus() + \"]\" + getDescription();"},{"lineNumber":39,"author":{"gitId":"Shizheng001"},"content":""},{"lineNumber":40,"author":{"gitId":"Shizheng001"},"content":"    }"},{"lineNumber":41,"author":{"gitId":"Shizheng001"},"content":"}"}],"authorContributionMap":{"Shizheng001":41}},{"path":"src/main/java/Duke/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Shizheng001"},"content":"package Duke;"},{"lineNumber":2,"author":{"gitId":"Shizheng001"},"content":""},{"lineNumber":3,"author":{"gitId":"Shizheng001"},"content":"import java.util.ArrayList;"},{"lineNumber":4,"author":{"gitId":"Shizheng001"},"content":"import java.util.List;"},{"lineNumber":5,"author":{"gitId":"Shizheng001"},"content":"import Storage.Storage;"},{"lineNumber":6,"author":{"gitId":"Shizheng001"},"content":""},{"lineNumber":7,"author":{"gitId":"Shizheng001"},"content":"public class TaskList {"},{"lineNumber":8,"author":{"gitId":"Shizheng001"},"content":"    private final Storage storage;"},{"lineNumber":9,"author":{"gitId":"Shizheng001"},"content":"    private final List\u003cTask\u003e tasks;"},{"lineNumber":10,"author":{"gitId":"Shizheng001"},"content":"    private int numOfTasks;"},{"lineNumber":11,"author":{"gitId":"Shizheng001"},"content":""},{"lineNumber":12,"author":{"gitId":"Shizheng001"},"content":"    public TaskList(Storage storage) {"},{"lineNumber":13,"author":{"gitId":"Shizheng001"},"content":"        this.storage \u003d storage;"},{"lineNumber":14,"author":{"gitId":"Shizheng001"},"content":"        this.tasks \u003d new ArrayList\u003c\u003e();"},{"lineNumber":15,"author":{"gitId":"Shizheng001"},"content":"        ArrayList\u003cString\u003e storedData \u003d this.storage.load();"},{"lineNumber":16,"author":{"gitId":"Shizheng001"},"content":"        for (String s : storedData) {"},{"lineNumber":17,"author":{"gitId":"Shizheng001"},"content":"            this.tasks.add(loadData(s));"},{"lineNumber":18,"author":{"gitId":"Shizheng001"},"content":"        }"},{"lineNumber":19,"author":{"gitId":"Shizheng001"},"content":"        this.numOfTasks \u003d this.tasks.size();"},{"lineNumber":20,"author":{"gitId":"Shizheng001"},"content":"    }"},{"lineNumber":21,"author":{"gitId":"Shizheng001"},"content":""},{"lineNumber":22,"author":{"gitId":"Shizheng001"},"content":"    private Task loadData(String data) {"},{"lineNumber":23,"author":{"gitId":"Shizheng001"},"content":"        String[] dataArray \u003d data.split(\"\\\\|\");"},{"lineNumber":24,"author":{"gitId":"Shizheng001"},"content":""},{"lineNumber":25,"author":{"gitId":"Shizheng001"},"content":"        //System.out.println(dataArray.length + \" \" + dataArray[0] + dataArray[1]);"},{"lineNumber":26,"author":{"gitId":"Shizheng001"},"content":""},{"lineNumber":27,"author":{"gitId":"Shizheng001"},"content":"        Task task;"},{"lineNumber":28,"author":{"gitId":"Shizheng001"},"content":""},{"lineNumber":29,"author":{"gitId":"Shizheng001"},"content":"        if (dataArray[0].equals(\"T\")) {"},{"lineNumber":30,"author":{"gitId":"Shizheng001"},"content":"            task \u003d new Todo(dataArray[2]);"},{"lineNumber":31,"author":{"gitId":"Shizheng001"},"content":"        } else if (dataArray[0].equals(\"D\")) {"},{"lineNumber":32,"author":{"gitId":"Shizheng001"},"content":"            task \u003d new Deadline(dataArray[2], dataArray[3]);"},{"lineNumber":33,"author":{"gitId":"Shizheng001"},"content":"        } else {"},{"lineNumber":34,"author":{"gitId":"Shizheng001"},"content":"            task \u003d new Event(dataArray[2], dataArray[3]);"},{"lineNumber":35,"author":{"gitId":"Shizheng001"},"content":"        }"},{"lineNumber":36,"author":{"gitId":"Shizheng001"},"content":"        if (dataArray[1].contains(\"X\")) {"},{"lineNumber":37,"author":{"gitId":"Shizheng001"},"content":"            task.markDone();"},{"lineNumber":38,"author":{"gitId":"Shizheng001"},"content":"        }"},{"lineNumber":39,"author":{"gitId":"Shizheng001"},"content":""},{"lineNumber":40,"author":{"gitId":"Shizheng001"},"content":"        return task;"},{"lineNumber":41,"author":{"gitId":"Shizheng001"},"content":"    }"},{"lineNumber":42,"author":{"gitId":"Shizheng001"},"content":""},{"lineNumber":43,"author":{"gitId":"Shizheng001"},"content":"    public Task get(int taskNumber) {"},{"lineNumber":44,"author":{"gitId":"Shizheng001"},"content":"        return this.tasks.get(taskNumber - 1);"},{"lineNumber":45,"author":{"gitId":"Shizheng001"},"content":"    }"},{"lineNumber":46,"author":{"gitId":"Shizheng001"},"content":""},{"lineNumber":47,"author":{"gitId":"Shizheng001"},"content":"    public void add(Task task) {"},{"lineNumber":48,"author":{"gitId":"Shizheng001"},"content":"        this.storage.add(task);"},{"lineNumber":49,"author":{"gitId":"Shizheng001"},"content":"        this.tasks.add(task);"},{"lineNumber":50,"author":{"gitId":"Shizheng001"},"content":"        this.numOfTasks \u003d this.tasks.size();"},{"lineNumber":51,"author":{"gitId":"Shizheng001"},"content":"    }"},{"lineNumber":52,"author":{"gitId":"Shizheng001"},"content":"    public void remove(int index) {"},{"lineNumber":53,"author":{"gitId":"Shizheng001"},"content":"        this.storage.remove(index);"},{"lineNumber":54,"author":{"gitId":"Shizheng001"},"content":"        this.tasks.remove(index - 1);"},{"lineNumber":55,"author":{"gitId":"Shizheng001"},"content":"        this.numOfTasks \u003d this.tasks.size();"},{"lineNumber":56,"author":{"gitId":"Shizheng001"},"content":"    }"},{"lineNumber":57,"author":{"gitId":"Shizheng001"},"content":""},{"lineNumber":58,"author":{"gitId":"Shizheng001"},"content":"    public void set(int index, Task task) {"},{"lineNumber":59,"author":{"gitId":"Shizheng001"},"content":"        this.storage.set(index, task);"},{"lineNumber":60,"author":{"gitId":"Shizheng001"},"content":"        this.tasks.set(index - 1, task);"},{"lineNumber":61,"author":{"gitId":"Shizheng001"},"content":"    }"},{"lineNumber":62,"author":{"gitId":"Shizheng001"},"content":""},{"lineNumber":63,"author":{"gitId":"Shizheng001"},"content":"    public int getSize() {"},{"lineNumber":64,"author":{"gitId":"Shizheng001"},"content":"        return this.numOfTasks;"},{"lineNumber":65,"author":{"gitId":"Shizheng001"},"content":"    }"},{"lineNumber":66,"author":{"gitId":"Shizheng001"},"content":""},{"lineNumber":67,"author":{"gitId":"Shizheng001"},"content":"}"}],"authorContributionMap":{"Shizheng001":67}},{"path":"src/main/java/Duke/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Shizheng001"},"content":"package Duke;"},{"lineNumber":2,"author":{"gitId":"Shizheng001"},"content":""},{"lineNumber":3,"author":{"gitId":"Shizheng001"},"content":"import java.time.format.DateTimeFormatter;"},{"lineNumber":4,"author":{"gitId":"Shizheng001"},"content":""},{"lineNumber":5,"author":{"gitId":"Shizheng001"},"content":"public class Todo extends Task {"},{"lineNumber":6,"author":{"gitId":"Shizheng001"},"content":""},{"lineNumber":7,"author":{"gitId":"Shizheng001"},"content":"    public Todo(String description) {"},{"lineNumber":8,"author":{"gitId":"Shizheng001"},"content":"        super(description);"},{"lineNumber":9,"author":{"gitId":"Shizheng001"},"content":"    }"},{"lineNumber":10,"author":{"gitId":"Shizheng001"},"content":""},{"lineNumber":11,"author":{"gitId":"Shizheng001"},"content":"    @Override"},{"lineNumber":12,"author":{"gitId":"Shizheng001"},"content":"    public String encode() {"},{"lineNumber":13,"author":{"gitId":"Shizheng001"},"content":"        return \"T|\" + super.encode();"},{"lineNumber":14,"author":{"gitId":"Shizheng001"},"content":"    }"},{"lineNumber":15,"author":{"gitId":"Shizheng001"},"content":"    @Override"},{"lineNumber":16,"author":{"gitId":"Shizheng001"},"content":"    public String toString() {"},{"lineNumber":17,"author":{"gitId":"Shizheng001"},"content":"        return \"[T]\" + super.toString();"},{"lineNumber":18,"author":{"gitId":"Shizheng001"},"content":"    }"},{"lineNumber":19,"author":{"gitId":"Shizheng001"},"content":"}"},{"lineNumber":20,"author":{"gitId":"Shizheng001"},"content":""},{"lineNumber":21,"author":{"gitId":"Shizheng001"},"content":""}],"authorContributionMap":{"Shizheng001":21}},{"path":"src/main/java/DukeException/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Shizheng001"},"content":"package DukeException;"},{"lineNumber":2,"author":{"gitId":"Shizheng001"},"content":""},{"lineNumber":3,"author":{"gitId":"Shizheng001"},"content":"public class DukeException extends Exception {"},{"lineNumber":4,"author":{"gitId":"Shizheng001"},"content":""},{"lineNumber":5,"author":{"gitId":"Shizheng001"},"content":"    public DukeException(String e) {"},{"lineNumber":6,"author":{"gitId":"Shizheng001"},"content":"        super(e);"},{"lineNumber":7,"author":{"gitId":"Shizheng001"},"content":"    }"},{"lineNumber":8,"author":{"gitId":"Shizheng001"},"content":"}"}],"authorContributionMap":{"Shizheng001":8}},{"path":"src/main/java/Parser/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Shizheng001"},"content":"package Parser;"},{"lineNumber":2,"author":{"gitId":"Shizheng001"},"content":""},{"lineNumber":3,"author":{"gitId":"Shizheng001"},"content":"import Duke.*;"},{"lineNumber":4,"author":{"gitId":"Shizheng001"},"content":"import DukeException.DukeException;"},{"lineNumber":5,"author":{"gitId":"Shizheng001"},"content":""},{"lineNumber":6,"author":{"gitId":"Shizheng001"},"content":"public class Parser {"},{"lineNumber":7,"author":{"gitId":"Shizheng001"},"content":"    private Task task;"},{"lineNumber":8,"author":{"gitId":"Shizheng001"},"content":"    private int taskNum;"},{"lineNumber":9,"author":{"gitId":"Shizheng001"},"content":"    private final String command;"},{"lineNumber":10,"author":{"gitId":"Shizheng001"},"content":"    private String searchWord;"},{"lineNumber":11,"author":{"gitId":"Shizheng001"},"content":""},{"lineNumber":12,"author":{"gitId":"Shizheng001"},"content":"    public Parser(String command) {"},{"lineNumber":13,"author":{"gitId":"Shizheng001"},"content":"        this.command \u003d command;"},{"lineNumber":14,"author":{"gitId":"Shizheng001"},"content":"    }"},{"lineNumber":15,"author":{"gitId":"Shizheng001"},"content":""},{"lineNumber":16,"author":{"gitId":"Shizheng001"},"content":"    public Parser(String command, String searchWord) {"},{"lineNumber":17,"author":{"gitId":"Shizheng001"},"content":"        this.command \u003d command;"},{"lineNumber":18,"author":{"gitId":"Shizheng001"},"content":"        this.searchWord \u003d searchWord;"},{"lineNumber":19,"author":{"gitId":"Shizheng001"},"content":"    }"},{"lineNumber":20,"author":{"gitId":"Shizheng001"},"content":""},{"lineNumber":21,"author":{"gitId":"Shizheng001"},"content":"    public Parser(int taskNum, String command) {"},{"lineNumber":22,"author":{"gitId":"Shizheng001"},"content":"        this.taskNum \u003d taskNum;"},{"lineNumber":23,"author":{"gitId":"Shizheng001"},"content":"        this.command \u003d command;"},{"lineNumber":24,"author":{"gitId":"Shizheng001"},"content":"    }"},{"lineNumber":25,"author":{"gitId":"Shizheng001"},"content":""},{"lineNumber":26,"author":{"gitId":"Shizheng001"},"content":"    public Parser(Task task, String command) {"},{"lineNumber":27,"author":{"gitId":"Shizheng001"},"content":"        this.task \u003d task;"},{"lineNumber":28,"author":{"gitId":"Shizheng001"},"content":"        this.command \u003d command;"},{"lineNumber":29,"author":{"gitId":"Shizheng001"},"content":"    }"},{"lineNumber":30,"author":{"gitId":"Shizheng001"},"content":""},{"lineNumber":31,"author":{"gitId":"Shizheng001"},"content":"    public Task getTask() {"},{"lineNumber":32,"author":{"gitId":"Shizheng001"},"content":"        return this.task;"},{"lineNumber":33,"author":{"gitId":"Shizheng001"},"content":"    }"},{"lineNumber":34,"author":{"gitId":"Shizheng001"},"content":""},{"lineNumber":35,"author":{"gitId":"Shizheng001"},"content":"    public int getTaskNum() {"},{"lineNumber":36,"author":{"gitId":"Shizheng001"},"content":"        return this.taskNum;"},{"lineNumber":37,"author":{"gitId":"Shizheng001"},"content":"    }"},{"lineNumber":38,"author":{"gitId":"Shizheng001"},"content":""},{"lineNumber":39,"author":{"gitId":"Shizheng001"},"content":"    public String getCommand() {"},{"lineNumber":40,"author":{"gitId":"Shizheng001"},"content":"        return this.command;"},{"lineNumber":41,"author":{"gitId":"Shizheng001"},"content":"    }"},{"lineNumber":42,"author":{"gitId":"Shizheng001"},"content":""},{"lineNumber":43,"author":{"gitId":"Shizheng001"},"content":"    public String getSearchWord() {"},{"lineNumber":44,"author":{"gitId":"Shizheng001"},"content":"        return this.searchWord;"},{"lineNumber":45,"author":{"gitId":"Shizheng001"},"content":"    }"},{"lineNumber":46,"author":{"gitId":"Shizheng001"},"content":""},{"lineNumber":47,"author":{"gitId":"Shizheng001"},"content":"    public static Parser parse(String userInput) throws DukeException {"},{"lineNumber":48,"author":{"gitId":"Shizheng001"},"content":"        try {"},{"lineNumber":49,"author":{"gitId":"Shizheng001"},"content":"            String[] input \u003d userInput.split(\" \");"},{"lineNumber":50,"author":{"gitId":"Shizheng001"},"content":"            String commandWord \u003d input[0];"},{"lineNumber":51,"author":{"gitId":"Shizheng001"},"content":"            String taskContent \u003d \"\";"},{"lineNumber":52,"author":{"gitId":"Shizheng001"},"content":"            StringBuilder taskTime \u003d new StringBuilder();"},{"lineNumber":53,"author":{"gitId":"Shizheng001"},"content":"            int taskNumber \u003d 0;"},{"lineNumber":54,"author":{"gitId":"Shizheng001"},"content":"            int count \u003d 0;"},{"lineNumber":55,"author":{"gitId":"Shizheng001"},"content":""},{"lineNumber":56,"author":{"gitId":"Shizheng001"},"content":"            if (input.length !\u003d 2) {"},{"lineNumber":57,"author":{"gitId":"Shizheng001"},"content":"                for (int i \u003d 1; i \u003c input.length; i++) {"},{"lineNumber":58,"author":{"gitId":"Shizheng001"},"content":"                    if (!(input[i].equals(\"/by\") || input[i].equals(\"/at\"))) {"},{"lineNumber":59,"author":{"gitId":"Shizheng001"},"content":"                        taskContent \u003d taskContent + \" \" + input[i];"},{"lineNumber":60,"author":{"gitId":"Shizheng001"},"content":"                        count++;"},{"lineNumber":61,"author":{"gitId":"Shizheng001"},"content":"                    } else {"},{"lineNumber":62,"author":{"gitId":"Shizheng001"},"content":"                        if (i + 1 \u003d\u003d input.length) {"},{"lineNumber":63,"author":{"gitId":"Shizheng001"},"content":"                            if (commandWord.equals(\"deadline\")) {"},{"lineNumber":64,"author":{"gitId":"Shizheng001"},"content":"                                throw new DukeException(\"DeadLine for\" + input[0] + \"cannot be empty.\");"},{"lineNumber":65,"author":{"gitId":"Shizheng001"},"content":"                            } else {"},{"lineNumber":66,"author":{"gitId":"Shizheng001"},"content":"                                throw new DukeException(\"Event for\" + input[0] + \"cannot be empty.\");"},{"lineNumber":67,"author":{"gitId":"Shizheng001"},"content":"                            }"},{"lineNumber":68,"author":{"gitId":"Shizheng001"},"content":"                        }"},{"lineNumber":69,"author":{"gitId":"Shizheng001"},"content":"                        break;"},{"lineNumber":70,"author":{"gitId":"Shizheng001"},"content":"                    }"},{"lineNumber":71,"author":{"gitId":"Shizheng001"},"content":"                }"},{"lineNumber":72,"author":{"gitId":"Shizheng001"},"content":"                for (int j \u003d count + 2; j \u003c input.length; j++) {"},{"lineNumber":73,"author":{"gitId":"Shizheng001"},"content":"                    taskTime.append(input[j]);"},{"lineNumber":74,"author":{"gitId":"Shizheng001"},"content":"                }"},{"lineNumber":75,"author":{"gitId":"Shizheng001"},"content":"            } else {"},{"lineNumber":76,"author":{"gitId":"Shizheng001"},"content":"                taskNumber \u003d Integer.parseInt(input[1]);"},{"lineNumber":77,"author":{"gitId":"Shizheng001"},"content":"            }"},{"lineNumber":78,"author":{"gitId":"Shizheng001"},"content":"            if (commandWord.equals(\"bye\")) {"},{"lineNumber":79,"author":{"gitId":"Shizheng001"},"content":"                return new Parser(commandWord);"},{"lineNumber":80,"author":{"gitId":"Shizheng001"},"content":"            } else {"},{"lineNumber":81,"author":{"gitId":"Shizheng001"},"content":"                return switch (commandWord) {"},{"lineNumber":82,"author":{"gitId":"Shizheng001"},"content":"                    case \"list\" -\u003e new Parser(\"list\");"},{"lineNumber":83,"author":{"gitId":"Shizheng001"},"content":"                    case \"done\" -\u003e new Parser(taskNumber, \"done\");"},{"lineNumber":84,"author":{"gitId":"Shizheng001"},"content":"                    case \"delete\" -\u003e new Parser(taskNumber, \"delete\");"},{"lineNumber":85,"author":{"gitId":"Shizheng001"},"content":"                    case \"todo\" -\u003e new Parser(new Todo(taskContent), \"add\");"},{"lineNumber":86,"author":{"gitId":"Shizheng001"},"content":"                    case \"deadline\" -\u003e new Parser(new Deadline(taskContent, taskTime.toString()), \"add\");"},{"lineNumber":87,"author":{"gitId":"Shizheng001"},"content":"                    case \"event\" -\u003e new Parser(new Event(taskContent, taskTime.toString()), \"add\");"},{"lineNumber":88,"author":{"gitId":"Shizheng001"},"content":"                    case \"find\" -\u003e new Parser(commandWord, \"set\");"},{"lineNumber":89,"author":{"gitId":"Shizheng001"},"content":"                    default -\u003e throw new DukeException(\"I\u0027m sorry, but I don\u0027t know what that means :-(\");"},{"lineNumber":90,"author":{"gitId":"Shizheng001"},"content":"                };"},{"lineNumber":91,"author":{"gitId":"Shizheng001"},"content":"            }"},{"lineNumber":92,"author":{"gitId":"Shizheng001"},"content":"        } catch (Exception e) {"},{"lineNumber":93,"author":{"gitId":"Shizheng001"},"content":"            throw new DukeException(\"Don\u0027t be lazy. Tell me more details.\");"},{"lineNumber":94,"author":{"gitId":"Shizheng001"},"content":"        }"},{"lineNumber":95,"author":{"gitId":"Shizheng001"},"content":"    }"},{"lineNumber":96,"author":{"gitId":"Shizheng001"},"content":""},{"lineNumber":97,"author":{"gitId":"Shizheng001"},"content":"}"}],"authorContributionMap":{"Shizheng001":97}},{"path":"src/main/java/Storage/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Shizheng001"},"content":"package Storage;"},{"lineNumber":2,"author":{"gitId":"Shizheng001"},"content":""},{"lineNumber":3,"author":{"gitId":"Shizheng001"},"content":"import java.io.FileNotFoundException;"},{"lineNumber":4,"author":{"gitId":"Shizheng001"},"content":"import java.io.IOException;"},{"lineNumber":5,"author":{"gitId":"Shizheng001"},"content":"import java.io.PrintWriter;"},{"lineNumber":6,"author":{"gitId":"Shizheng001"},"content":"import java.nio.file.Files;"},{"lineNumber":7,"author":{"gitId":"Shizheng001"},"content":"import java.nio.file.Paths;"},{"lineNumber":8,"author":{"gitId":"Shizheng001"},"content":"import java.util.ArrayList;"},{"lineNumber":9,"author":{"gitId":"Shizheng001"},"content":"import Duke.*;"},{"lineNumber":10,"author":{"gitId":"Shizheng001"},"content":""},{"lineNumber":11,"author":{"gitId":"Shizheng001"},"content":"public class Storage {"},{"lineNumber":12,"author":{"gitId":"Shizheng001"},"content":"    private ArrayList\u003cString\u003e listOfTasks;"},{"lineNumber":13,"author":{"gitId":"Shizheng001"},"content":"    private String path;"},{"lineNumber":14,"author":{"gitId":"Shizheng001"},"content":""},{"lineNumber":15,"author":{"gitId":"Shizheng001"},"content":"    public Storage (String path) {"},{"lineNumber":16,"author":{"gitId":"Shizheng001"},"content":"        this.path \u003d path;"},{"lineNumber":17,"author":{"gitId":"Shizheng001"},"content":"        try {"},{"lineNumber":18,"author":{"gitId":"Shizheng001"},"content":"            this.listOfTasks \u003d new ArrayList\u003c\u003e(Files.readAllLines(Paths.get(path)));"},{"lineNumber":19,"author":{"gitId":"Shizheng001"},"content":"        } catch (IOException e) {"},{"lineNumber":20,"author":{"gitId":"Shizheng001"},"content":"            System.out.println(e);"},{"lineNumber":21,"author":{"gitId":"Shizheng001"},"content":"            this.listOfTasks \u003d new ArrayList\u003c\u003e();"},{"lineNumber":22,"author":{"gitId":"Shizheng001"},"content":"        }"},{"lineNumber":23,"author":{"gitId":"Shizheng001"},"content":"    }"},{"lineNumber":24,"author":{"gitId":"Shizheng001"},"content":""},{"lineNumber":25,"author":{"gitId":"Shizheng001"},"content":"    public ArrayList\u003cString\u003e load() {"},{"lineNumber":26,"author":{"gitId":"Shizheng001"},"content":"        return this.listOfTasks;"},{"lineNumber":27,"author":{"gitId":"Shizheng001"},"content":"    }"},{"lineNumber":28,"author":{"gitId":"Shizheng001"},"content":""},{"lineNumber":29,"author":{"gitId":"Shizheng001"},"content":"    public void add(Task task) {"},{"lineNumber":30,"author":{"gitId":"Shizheng001"},"content":"        this.listOfTasks.add(task.encode());"},{"lineNumber":31,"author":{"gitId":"Shizheng001"},"content":"        this.update();"},{"lineNumber":32,"author":{"gitId":"Shizheng001"},"content":"    }"},{"lineNumber":33,"author":{"gitId":"Shizheng001"},"content":""},{"lineNumber":34,"author":{"gitId":"Shizheng001"},"content":"    public void remove(int index) {"},{"lineNumber":35,"author":{"gitId":"Shizheng001"},"content":"        this.listOfTasks.remove(index - 1);"},{"lineNumber":36,"author":{"gitId":"Shizheng001"},"content":"        this.update();"},{"lineNumber":37,"author":{"gitId":"Shizheng001"},"content":"    }"},{"lineNumber":38,"author":{"gitId":"Shizheng001"},"content":""},{"lineNumber":39,"author":{"gitId":"Shizheng001"},"content":"    public void set(int index, Task newTask) {"},{"lineNumber":40,"author":{"gitId":"Shizheng001"},"content":"        this.listOfTasks.set(index - 1, newTask.encode());"},{"lineNumber":41,"author":{"gitId":"Shizheng001"},"content":"        this.update();"},{"lineNumber":42,"author":{"gitId":"Shizheng001"},"content":"    }"},{"lineNumber":43,"author":{"gitId":"Shizheng001"},"content":""},{"lineNumber":44,"author":{"gitId":"Shizheng001"},"content":"    public void update() {"},{"lineNumber":45,"author":{"gitId":"Shizheng001"},"content":"        try {"},{"lineNumber":46,"author":{"gitId":"Shizheng001"},"content":"            PrintWriter writer \u003d new PrintWriter(this.path);"},{"lineNumber":47,"author":{"gitId":"Shizheng001"},"content":"            for (String line : this.listOfTasks) {"},{"lineNumber":48,"author":{"gitId":"Shizheng001"},"content":"                writer.println(line);"},{"lineNumber":49,"author":{"gitId":"Shizheng001"},"content":"            }"},{"lineNumber":50,"author":{"gitId":"Shizheng001"},"content":"            writer.close();"},{"lineNumber":51,"author":{"gitId":"Shizheng001"},"content":"        } catch (FileNotFoundException e) {"},{"lineNumber":52,"author":{"gitId":"Shizheng001"},"content":"            System.out.println(e);"},{"lineNumber":53,"author":{"gitId":"Shizheng001"},"content":"        }"},{"lineNumber":54,"author":{"gitId":"Shizheng001"},"content":"    }"},{"lineNumber":55,"author":{"gitId":"Shizheng001"},"content":"}"}],"authorContributionMap":{"Shizheng001":55}},{"path":"src/main/java/Ui/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Shizheng001"},"content":"package Ui;"},{"lineNumber":2,"author":{"gitId":"Shizheng001"},"content":""},{"lineNumber":3,"author":{"gitId":"Shizheng001"},"content":"import Duke.*;"},{"lineNumber":4,"author":{"gitId":"Shizheng001"},"content":"import java.util.Scanner;"},{"lineNumber":5,"author":{"gitId":"Shizheng001"},"content":""},{"lineNumber":6,"author":{"gitId":"Shizheng001"},"content":"public class Ui {"},{"lineNumber":7,"author":{"gitId":"Shizheng001"},"content":"    private Scanner sc;"},{"lineNumber":8,"author":{"gitId":"Shizheng001"},"content":"    private String userInput;"},{"lineNumber":9,"author":{"gitId":"Shizheng001"},"content":""},{"lineNumber":10,"author":{"gitId":"Shizheng001"},"content":"    public Ui() {"},{"lineNumber":11,"author":{"gitId":"Shizheng001"},"content":"        this.sc \u003d new Scanner(System.in);"},{"lineNumber":12,"author":{"gitId":"Shizheng001"},"content":"    }"},{"lineNumber":13,"author":{"gitId":"Shizheng001"},"content":""},{"lineNumber":14,"author":{"gitId":"Shizheng001"},"content":"    public String getUserInput() {"},{"lineNumber":15,"author":{"gitId":"Shizheng001"},"content":"        this.userInput \u003d this.sc.nextLine().trim();"},{"lineNumber":16,"author":{"gitId":"Shizheng001"},"content":"        return userInput;"},{"lineNumber":17,"author":{"gitId":"Shizheng001"},"content":"    }"},{"lineNumber":18,"author":{"gitId":"Shizheng001"},"content":""},{"lineNumber":19,"author":{"gitId":"Shizheng001"},"content":"    public static void printGreeting() {"},{"lineNumber":20,"author":{"gitId":"Shizheng001"},"content":"        String logo \u003d \" ____        _        \\n\""},{"lineNumber":21,"author":{"gitId":"Shizheng001"},"content":"                    + \"|  _ \\\\ _   _| | _____ \\n\""},{"lineNumber":22,"author":{"gitId":"Shizheng001"},"content":"                    + \"| | | | | | | |/ / _ \\\\\\n\""},{"lineNumber":23,"author":{"gitId":"Shizheng001"},"content":"                    + \"| |_| | |_| |   \u003c  __/\\n\""},{"lineNumber":24,"author":{"gitId":"Shizheng001"},"content":"                    + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\";"},{"lineNumber":25,"author":{"gitId":"Shizheng001"},"content":"        System.out.println(\"Hello from\\n\" + logo);"},{"lineNumber":26,"author":{"gitId":"Shizheng001"},"content":""},{"lineNumber":27,"author":{"gitId":"Shizheng001"},"content":"        System.out.println(\"Greetings! I am Duke! How may I assist you?\\n\");"},{"lineNumber":28,"author":{"gitId":"Shizheng001"},"content":"    }"},{"lineNumber":29,"author":{"gitId":"Shizheng001"},"content":""},{"lineNumber":30,"author":{"gitId":"Shizheng001"},"content":"    public static void printGoodbye() {"},{"lineNumber":31,"author":{"gitId":"Shizheng001"},"content":"        System.out.println(\"\\nGoodbye! Have a nice day!\\n\");"},{"lineNumber":32,"author":{"gitId":"Shizheng001"},"content":"    }"},{"lineNumber":33,"author":{"gitId":"Shizheng001"},"content":""},{"lineNumber":34,"author":{"gitId":"Shizheng001"},"content":"    public static void printList(TaskList tasks) {"},{"lineNumber":35,"author":{"gitId":"Shizheng001"},"content":"        for (int i \u003d 1; i \u003c\u003d tasks.getSize(); i++) {"},{"lineNumber":36,"author":{"gitId":"Shizheng001"},"content":"            System.out.println(i + \". \" + tasks.get(i).toString());"},{"lineNumber":37,"author":{"gitId":"Shizheng001"},"content":"        }"},{"lineNumber":38,"author":{"gitId":"Shizheng001"},"content":"    }"},{"lineNumber":39,"author":{"gitId":"Shizheng001"},"content":""},{"lineNumber":40,"author":{"gitId":"Shizheng001"},"content":"    public void printDoneMessage(Task task) {"},{"lineNumber":41,"author":{"gitId":"Shizheng001"},"content":"        System.out.println(\"Alright, I will mark this as done.\\n\" + task.toString());"},{"lineNumber":42,"author":{"gitId":"Shizheng001"},"content":"    }"},{"lineNumber":43,"author":{"gitId":"Shizheng001"},"content":""},{"lineNumber":44,"author":{"gitId":"Shizheng001"},"content":"    public void printTaskAddedMessage(Task task, int count) {"},{"lineNumber":45,"author":{"gitId":"Shizheng001"},"content":"        System.out.println(\"Got it. I have added this task: \\n\" + task.getDescription()"},{"lineNumber":46,"author":{"gitId":"Shizheng001"},"content":"                            + \". \\n Now you have \" + count + \" items in your list.\");"},{"lineNumber":47,"author":{"gitId":"Shizheng001"},"content":"    }"},{"lineNumber":48,"author":{"gitId":"Shizheng001"},"content":""},{"lineNumber":49,"author":{"gitId":"Shizheng001"},"content":"    public void printTaskRemovedMessage(int index) {"},{"lineNumber":50,"author":{"gitId":"Shizheng001"},"content":"        System.out.println(\"I have removed item \" + index + \". Welcome.\");"},{"lineNumber":51,"author":{"gitId":"Shizheng001"},"content":"    }"},{"lineNumber":52,"author":{"gitId":"Shizheng001"},"content":""},{"lineNumber":53,"author":{"gitId":"Shizheng001"},"content":"}"}],"authorContributionMap":{"Shizheng001":53}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"Shizheng001"},"content":"todo homework1"},{"lineNumber":2,"author":{"gitId":"Shizheng001"},"content":"event lecture 1 (10.00am tmr)"},{"lineNumber":3,"author":{"gitId":"Shizheng001"},"content":"deadline OP1cs2101 (16 Feb)"},{"lineNumber":4,"author":{"gitId":"Shizheng001"},"content":""},{"lineNumber":5,"author":{"gitId":"Shizheng001"},"content":"done 1"},{"lineNumber":6,"author":{"gitId":"Shizheng001"},"content":"done 2"},{"lineNumber":7,"author":{"gitId":"Shizheng001"},"content":"done 3"}],"authorContributionMap":{"Shizheng001":7}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF"},{"lineNumber":2,"author":{"gitId":"-"},"content":""},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin"},{"lineNumber":5,"author":{"gitId":"-"},"content":""},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run"},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT"},{"lineNumber":8,"author":{"gitId":"-"},"content":""},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder"},{"lineNumber":10,"author":{"gitId":"Shizheng001"},"content":"javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\Duke.java"},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 ("},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1"},{"lineNumber":14,"author":{"gitId":"-"},"content":")"},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0"},{"lineNumber":16,"author":{"gitId":"-"},"content":""},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"},{"lineNumber":18,"author":{"gitId":"-"},"content":"java -classpath ..\\bin Duke \u003c input.txt \u003e ACTUAL.TXT"},{"lineNumber":19,"author":{"gitId":"-"},"content":""},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM compare the output to the expected output"},{"lineNumber":21,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT"}],"authorContributionMap":{"Shizheng001":1,"-":20}}]
