[{"path":"src/main/java/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Shizheng001"},"content":"public class Deadline extends Task {"},{"lineNumber":2,"author":{"gitId":"Shizheng001"},"content":""},{"lineNumber":3,"author":{"gitId":"Shizheng001"},"content":"    public Deadline(String description) {"},{"lineNumber":4,"author":{"gitId":"Shizheng001"},"content":"        super(description);"},{"lineNumber":5,"author":{"gitId":"Shizheng001"},"content":"    }"},{"lineNumber":6,"author":{"gitId":"Shizheng001"},"content":""},{"lineNumber":7,"author":{"gitId":"Shizheng001"},"content":"    public Deadline(String description, boolean b) {"},{"lineNumber":8,"author":{"gitId":"Shizheng001"},"content":"        super(description,b);"},{"lineNumber":9,"author":{"gitId":"Shizheng001"},"content":"    }"},{"lineNumber":10,"author":{"gitId":"Shizheng001"},"content":""},{"lineNumber":11,"author":{"gitId":"Shizheng001"},"content":"    public String toString() {"},{"lineNumber":12,"author":{"gitId":"Shizheng001"},"content":"        return \"[D]\" + super.toString();"},{"lineNumber":13,"author":{"gitId":"Shizheng001"},"content":"    }"},{"lineNumber":14,"author":{"gitId":"Shizheng001"},"content":"}"}],"authorContributionMap":{"Shizheng001":14}},{"path":"src/main/java/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Shizheng001"},"content":"import java.util.Scanner;"},{"lineNumber":2,"author":{"gitId":"Shizheng001"},"content":"import java.util.ArrayList;"},{"lineNumber":3,"author":{"gitId":"Shizheng001"},"content":""},{"lineNumber":4,"author":{"gitId":"-"},"content":"public class Duke {"},{"lineNumber":5,"author":{"gitId":"Shizheng001"},"content":""},{"lineNumber":6,"author":{"gitId":"Shizheng001"},"content":"    /**"},{"lineNumber":7,"author":{"gitId":"Shizheng001"},"content":"     * main method to run the program"},{"lineNumber":8,"author":{"gitId":"Shizheng001"},"content":"     *"},{"lineNumber":9,"author":{"gitId":"Shizheng001"},"content":"     * @param args command line arguments taken in"},{"lineNumber":10,"author":{"gitId":"Shizheng001"},"content":"     */"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    public static void main(String[] args) {"},{"lineNumber":12,"author":{"gitId":"Shizheng001"},"content":"        Scanner sc \u003d new Scanner(System.in);"},{"lineNumber":13,"author":{"gitId":"Shizheng001"},"content":"        System.out.println(\"Hello! I\u0027m Duke\\n\"+ \"What can I do for you?\");"},{"lineNumber":14,"author":{"gitId":"Shizheng001"},"content":"        ArrayList\u003cTask\u003e items \u003d new ArrayList\u003c\u003e();"},{"lineNumber":15,"author":{"gitId":"Shizheng001"},"content":""},{"lineNumber":16,"author":{"gitId":"Shizheng001"},"content":"        while (true) {"},{"lineNumber":17,"author":{"gitId":"Shizheng001"},"content":"            String input \u003d sc.nextLine();"},{"lineNumber":18,"author":{"gitId":"Shizheng001"},"content":"            try {"},{"lineNumber":19,"author":{"gitId":"Shizheng001"},"content":"                errorHandling(input);"},{"lineNumber":20,"author":{"gitId":"Shizheng001"},"content":"                if (input.equals(\"bye\")) {"},{"lineNumber":21,"author":{"gitId":"Shizheng001"},"content":"                    bye();"},{"lineNumber":22,"author":{"gitId":"Shizheng001"},"content":"                    break;"},{"lineNumber":23,"author":{"gitId":"Shizheng001"},"content":"                } else if (input.contains(\"done\")) {"},{"lineNumber":24,"author":{"gitId":"Shizheng001"},"content":"                    System.out.println(\"Nice! I\u0027ve marked this task as done: \");"},{"lineNumber":25,"author":{"gitId":"Shizheng001"},"content":""},{"lineNumber":26,"author":{"gitId":"Shizheng001"},"content":"                    int taskNum \u003d Integer.parseInt(input.substring(5));"},{"lineNumber":27,"author":{"gitId":"Shizheng001"},"content":"                    String name \u003d items.get(taskNum - 1).getDescription();"},{"lineNumber":28,"author":{"gitId":"Shizheng001"},"content":""},{"lineNumber":29,"author":{"gitId":"Shizheng001"},"content":"                    Task type \u003d items.get(taskNum - 1);"},{"lineNumber":30,"author":{"gitId":"Shizheng001"},"content":"                    items.remove(taskNum - 1);"},{"lineNumber":31,"author":{"gitId":"Shizheng001"},"content":"                    if (type instanceof Todo) {"},{"lineNumber":32,"author":{"gitId":"Shizheng001"},"content":"                        Todo markDone \u003d new Todo(name, true);"},{"lineNumber":33,"author":{"gitId":"Shizheng001"},"content":"                        items.add(taskNum - 1, markDone);"},{"lineNumber":34,"author":{"gitId":"Shizheng001"},"content":"                        System.out.println(markDone);"},{"lineNumber":35,"author":{"gitId":"Shizheng001"},"content":"                    } else if (type instanceof Deadline) {"},{"lineNumber":36,"author":{"gitId":"Shizheng001"},"content":"                        Deadline markDone \u003d new Deadline(name, true);"},{"lineNumber":37,"author":{"gitId":"Shizheng001"},"content":"                        items.add(taskNum - 1, markDone);"},{"lineNumber":38,"author":{"gitId":"Shizheng001"},"content":"                        System.out.println(markDone);"},{"lineNumber":39,"author":{"gitId":"Shizheng001"},"content":"                    } else {"},{"lineNumber":40,"author":{"gitId":"Shizheng001"},"content":"                        Event markDone \u003d new Event(name, true);"},{"lineNumber":41,"author":{"gitId":"Shizheng001"},"content":"                        items.add(taskNum - 1, markDone);"},{"lineNumber":42,"author":{"gitId":"Shizheng001"},"content":"                        System.out.println(markDone);"},{"lineNumber":43,"author":{"gitId":"Shizheng001"},"content":"                    }"},{"lineNumber":44,"author":{"gitId":"Shizheng001"},"content":""},{"lineNumber":45,"author":{"gitId":"Shizheng001"},"content":"                } else if (input.equals(\"list\")) {"},{"lineNumber":46,"author":{"gitId":"Shizheng001"},"content":"                    int n \u003d 1;"},{"lineNumber":47,"author":{"gitId":"Shizheng001"},"content":"                    System.out.println(\"Here are the tasks in your list:\");"},{"lineNumber":48,"author":{"gitId":"Shizheng001"},"content":"                    for (Task item : items) {"},{"lineNumber":49,"author":{"gitId":"Shizheng001"},"content":"                        System.out.println(n + \". \" + item);"},{"lineNumber":50,"author":{"gitId":"Shizheng001"},"content":"                        n++;"},{"lineNumber":51,"author":{"gitId":"Shizheng001"},"content":"                    }"},{"lineNumber":52,"author":{"gitId":"Shizheng001"},"content":""},{"lineNumber":53,"author":{"gitId":"Shizheng001"},"content":"                } else if (input.length() \u003e\u003d 8 \u0026\u0026 input.substring(0,8).equals(\"deadline\")) {"},{"lineNumber":54,"author":{"gitId":"Shizheng001"},"content":"                    items.add(new Deadline(input.substring(8)));"},{"lineNumber":55,"author":{"gitId":"Shizheng001"},"content":"                } else if (input.length() \u003e\u003d 4 \u0026\u0026 input.substring(0,4).equals(\"todo\")) {"},{"lineNumber":56,"author":{"gitId":"Shizheng001"},"content":"                    items.add(new Todo(input.substring(4)));"},{"lineNumber":57,"author":{"gitId":"Shizheng001"},"content":"                } else if (input.length() \u003e\u003d 5 \u0026\u0026 input.substring(0,5).equals(\"event\")) {"},{"lineNumber":58,"author":{"gitId":"Shizheng001"},"content":"                    items.add(new Event(input.substring(5)));"},{"lineNumber":59,"author":{"gitId":"Shizheng001"},"content":"                } else if (input.length() \u003e\u003d 6 \u0026\u0026 input.substring(0,6).equals(\"delete\")) {"},{"lineNumber":60,"author":{"gitId":"Shizheng001"},"content":"                    int taskToDelete \u003d Integer.parseInt(input.substring(7));"},{"lineNumber":61,"author":{"gitId":"Shizheng001"},"content":"                    Task toRemove \u003d items.get(taskToDelete - 1);"},{"lineNumber":62,"author":{"gitId":"Shizheng001"},"content":"                    items.remove(taskToDelete - 1);"},{"lineNumber":63,"author":{"gitId":"Shizheng001"},"content":"                    System.out.println(\"Noted. I\u0027ve removed this task:\\n  \""},{"lineNumber":64,"author":{"gitId":"Shizheng001"},"content":"                                       + toRemove + \"\\nNow you have \" + items.size() + \" tasks in the list.\");"},{"lineNumber":65,"author":{"gitId":"Shizheng001"},"content":""},{"lineNumber":66,"author":{"gitId":"Shizheng001"},"content":"                } else {"},{"lineNumber":67,"author":{"gitId":"Shizheng001"},"content":"                    items.add(new Task(input));"},{"lineNumber":68,"author":{"gitId":"Shizheng001"},"content":"                }"},{"lineNumber":69,"author":{"gitId":"Shizheng001"},"content":"            } catch (Exception e) {"},{"lineNumber":70,"author":{"gitId":"Shizheng001"},"content":"                System.out.println(e);"},{"lineNumber":71,"author":{"gitId":"Shizheng001"},"content":"            }"},{"lineNumber":72,"author":{"gitId":"Shizheng001"},"content":"        }"},{"lineNumber":73,"author":{"gitId":"Shizheng001"},"content":"    }"},{"lineNumber":74,"author":{"gitId":"Shizheng001"},"content":""},{"lineNumber":75,"author":{"gitId":"Shizheng001"},"content":"    /**"},{"lineNumber":76,"author":{"gitId":"Shizheng001"},"content":"     * prints Goodbye message."},{"lineNumber":77,"author":{"gitId":"Shizheng001"},"content":"     */"},{"lineNumber":78,"author":{"gitId":"Shizheng001"},"content":"    public static void bye() {"},{"lineNumber":79,"author":{"gitId":"Shizheng001"},"content":"        System.out.println(\"Bye. Hope to see you again soon!\");"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":81,"author":{"gitId":"Shizheng001"},"content":""},{"lineNumber":82,"author":{"gitId":"Shizheng001"},"content":"    public static void errorHandling(String input) throws DukeException {"},{"lineNumber":83,"author":{"gitId":"Shizheng001"},"content":"        if (input.length() \u003d\u003d 4 \u0026\u0026 input.equals(\"todo\")) {"},{"lineNumber":84,"author":{"gitId":"Shizheng001"},"content":"            throw new DukeException(\" ☹ OOPS!!! The description of a todo cannot be empty.\");"},{"lineNumber":85,"author":{"gitId":"Shizheng001"},"content":"        } else if (input.length() \u003d\u003d 8 \u0026\u0026 input.equals(\"deadline\")) {"},{"lineNumber":86,"author":{"gitId":"Shizheng001"},"content":"            throw new DukeException(\" ☹ OOPS!!! The description of a deadline cannot be empty.\");"},{"lineNumber":87,"author":{"gitId":"Shizheng001"},"content":"        } else if (input.length() \u003d\u003d 5 \u0026\u0026 input.equals(\"event\")) {"},{"lineNumber":88,"author":{"gitId":"Shizheng001"},"content":"            throw new DukeException(\" ☹ OOPS!!! The description of a event cannot be empty.\");"},{"lineNumber":89,"author":{"gitId":"Shizheng001"},"content":"        } else if (input.length() \u003e\u003d 4 \u0026\u0026 input.substring(0,4).equals(\"blah\")) {"},{"lineNumber":90,"author":{"gitId":"Shizheng001"},"content":"            throw new DukeException(\"☹ OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\");"},{"lineNumber":91,"author":{"gitId":"Shizheng001"},"content":"        } else if (input.isBlank()) {"},{"lineNumber":92,"author":{"gitId":"Shizheng001"},"content":"            throw new DukeException(\" ☹ OOPS!!! A Task cannot be empty.\");"},{"lineNumber":93,"author":{"gitId":"Shizheng001"},"content":"        } else {}"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":95,"author":{"gitId":"-"},"content":"}"}],"authorContributionMap":{"Shizheng001":90,"-":5}},{"path":"src/main/java/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Shizheng001"},"content":"public class DukeException extends Exception {"},{"lineNumber":2,"author":{"gitId":"Shizheng001"},"content":""},{"lineNumber":3,"author":{"gitId":"Shizheng001"},"content":"    public DukeException(String e) {"},{"lineNumber":4,"author":{"gitId":"Shizheng001"},"content":"        super(e);"},{"lineNumber":5,"author":{"gitId":"Shizheng001"},"content":"    }"},{"lineNumber":6,"author":{"gitId":"Shizheng001"},"content":"}"}],"authorContributionMap":{"Shizheng001":6}},{"path":"src/main/java/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Shizheng001"},"content":"public class Event extends Task {"},{"lineNumber":2,"author":{"gitId":"Shizheng001"},"content":"        public Event(String description) {"},{"lineNumber":3,"author":{"gitId":"Shizheng001"},"content":"            super(description);"},{"lineNumber":4,"author":{"gitId":"Shizheng001"},"content":"        }"},{"lineNumber":5,"author":{"gitId":"Shizheng001"},"content":""},{"lineNumber":6,"author":{"gitId":"Shizheng001"},"content":"        public Event(String description, boolean b) {"},{"lineNumber":7,"author":{"gitId":"Shizheng001"},"content":"            super(description,b);"},{"lineNumber":8,"author":{"gitId":"Shizheng001"},"content":"        }"},{"lineNumber":9,"author":{"gitId":"Shizheng001"},"content":""},{"lineNumber":10,"author":{"gitId":"Shizheng001"},"content":"        public String toString() {"},{"lineNumber":11,"author":{"gitId":"Shizheng001"},"content":"            return \"[E]\" + super.toString();"},{"lineNumber":12,"author":{"gitId":"Shizheng001"},"content":"        }"},{"lineNumber":13,"author":{"gitId":"Shizheng001"},"content":"}"},{"lineNumber":14,"author":{"gitId":"Shizheng001"},"content":""}],"authorContributionMap":{"Shizheng001":14}},{"path":"src/main/java/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Shizheng001"},"content":"public class Task {"},{"lineNumber":2,"author":{"gitId":"Shizheng001"},"content":"    protected String description;"},{"lineNumber":3,"author":{"gitId":"Shizheng001"},"content":"    protected boolean isDone;"},{"lineNumber":4,"author":{"gitId":"Shizheng001"},"content":""},{"lineNumber":5,"author":{"gitId":"Shizheng001"},"content":"    public Task(String description) {"},{"lineNumber":6,"author":{"gitId":"Shizheng001"},"content":"        this.description \u003d description;"},{"lineNumber":7,"author":{"gitId":"Shizheng001"},"content":"        this.isDone \u003d false;"},{"lineNumber":8,"author":{"gitId":"Shizheng001"},"content":"    }"},{"lineNumber":9,"author":{"gitId":"Shizheng001"},"content":""},{"lineNumber":10,"author":{"gitId":"Shizheng001"},"content":"    public Task(String description, boolean b) {"},{"lineNumber":11,"author":{"gitId":"Shizheng001"},"content":"        this.description \u003d description;"},{"lineNumber":12,"author":{"gitId":"Shizheng001"},"content":"        this.isDone \u003d b;"},{"lineNumber":13,"author":{"gitId":"Shizheng001"},"content":"    }"},{"lineNumber":14,"author":{"gitId":"Shizheng001"},"content":""},{"lineNumber":15,"author":{"gitId":"Shizheng001"},"content":"    public String getStatusIcon() {"},{"lineNumber":16,"author":{"gitId":"Shizheng001"},"content":"        return (isDone ? \"X\" : \" \"); // mark done task with X"},{"lineNumber":17,"author":{"gitId":"Shizheng001"},"content":"    }"},{"lineNumber":18,"author":{"gitId":"Shizheng001"},"content":""},{"lineNumber":19,"author":{"gitId":"Shizheng001"},"content":"    public String getDescription() {"},{"lineNumber":20,"author":{"gitId":"Shizheng001"},"content":"        return this.description;"},{"lineNumber":21,"author":{"gitId":"Shizheng001"},"content":"    }"},{"lineNumber":22,"author":{"gitId":"Shizheng001"},"content":""},{"lineNumber":23,"author":{"gitId":"Shizheng001"},"content":"    public Task changeStatus(Task t) {"},{"lineNumber":24,"author":{"gitId":"Shizheng001"},"content":"        return new Task(t.getDescription(), true);"},{"lineNumber":25,"author":{"gitId":"Shizheng001"},"content":"    }"},{"lineNumber":26,"author":{"gitId":"Shizheng001"},"content":""},{"lineNumber":27,"author":{"gitId":"Shizheng001"},"content":"    public String toString() {"},{"lineNumber":28,"author":{"gitId":"Shizheng001"},"content":"        return \"[\" + getStatusIcon() + \"]\" + getDescription();"},{"lineNumber":29,"author":{"gitId":"Shizheng001"},"content":""},{"lineNumber":30,"author":{"gitId":"Shizheng001"},"content":"    }"},{"lineNumber":31,"author":{"gitId":"Shizheng001"},"content":"}"}],"authorContributionMap":{"Shizheng001":31}},{"path":"src/main/java/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Shizheng001"},"content":"public class Todo extends Task {"},{"lineNumber":2,"author":{"gitId":"Shizheng001"},"content":"    public Todo(String description) {"},{"lineNumber":3,"author":{"gitId":"Shizheng001"},"content":"        super(description);"},{"lineNumber":4,"author":{"gitId":"Shizheng001"},"content":"    }"},{"lineNumber":5,"author":{"gitId":"Shizheng001"},"content":""},{"lineNumber":6,"author":{"gitId":"Shizheng001"},"content":"    public Todo(String description, boolean b) {"},{"lineNumber":7,"author":{"gitId":"Shizheng001"},"content":"        super(description, b);"},{"lineNumber":8,"author":{"gitId":"Shizheng001"},"content":"    }"},{"lineNumber":9,"author":{"gitId":"Shizheng001"},"content":""},{"lineNumber":10,"author":{"gitId":"Shizheng001"},"content":"    public String toString() {"},{"lineNumber":11,"author":{"gitId":"Shizheng001"},"content":"        return \"[T]\" + super.toString();"},{"lineNumber":12,"author":{"gitId":"Shizheng001"},"content":"    }"},{"lineNumber":13,"author":{"gitId":"Shizheng001"},"content":"}"},{"lineNumber":14,"author":{"gitId":"Shizheng001"},"content":""},{"lineNumber":15,"author":{"gitId":"Shizheng001"},"content":""}],"authorContributionMap":{"Shizheng001":15}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"Shizheng001"},"content":"todo homework1"},{"lineNumber":2,"author":{"gitId":"Shizheng001"},"content":"event lecture 1 (10.00am tmr)"},{"lineNumber":3,"author":{"gitId":"Shizheng001"},"content":"deadline OP1cs2101 (16 Feb)"},{"lineNumber":4,"author":{"gitId":"Shizheng001"},"content":""},{"lineNumber":5,"author":{"gitId":"Shizheng001"},"content":"done 1"},{"lineNumber":6,"author":{"gitId":"Shizheng001"},"content":"done 2"},{"lineNumber":7,"author":{"gitId":"Shizheng001"},"content":"done 3"}],"authorContributionMap":{"Shizheng001":7}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF"},{"lineNumber":2,"author":{"gitId":"-"},"content":""},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin"},{"lineNumber":5,"author":{"gitId":"-"},"content":""},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run"},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT"},{"lineNumber":8,"author":{"gitId":"-"},"content":""},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder"},{"lineNumber":10,"author":{"gitId":"Shizheng001"},"content":"javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\Duke.java"},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 ("},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1"},{"lineNumber":14,"author":{"gitId":"-"},"content":")"},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0"},{"lineNumber":16,"author":{"gitId":"-"},"content":""},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"},{"lineNumber":18,"author":{"gitId":"-"},"content":"java -classpath ..\\bin Duke \u003c input.txt \u003e ACTUAL.TXT"},{"lineNumber":19,"author":{"gitId":"-"},"content":""},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM compare the output to the expected output"},{"lineNumber":21,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT"}],"authorContributionMap":{"Shizheng001":1,"-":20}}]
