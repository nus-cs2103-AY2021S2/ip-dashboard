[{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"SiTingST"},"content":"plugins {"},{"lineNumber":2,"author":{"gitId":"SiTingST"},"content":"    id \u0027java\u0027"},{"lineNumber":3,"author":{"gitId":"SiTingST"},"content":"    id \u0027application\u0027"},{"lineNumber":4,"author":{"gitId":"SiTingST"},"content":"    id \u0027checkstyle\u0027"},{"lineNumber":5,"author":{"gitId":"SiTingST"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027"},{"lineNumber":6,"author":{"gitId":"SiTingST"},"content":"}"},{"lineNumber":7,"author":{"gitId":"SiTingST"},"content":""},{"lineNumber":8,"author":{"gitId":"SiTingST"},"content":"repositories {"},{"lineNumber":9,"author":{"gitId":"SiTingST"},"content":"    mavenCentral()"},{"lineNumber":10,"author":{"gitId":"SiTingST"},"content":"}"},{"lineNumber":11,"author":{"gitId":"SiTingST"},"content":""},{"lineNumber":12,"author":{"gitId":"SiTingST"},"content":"dependencies {"},{"lineNumber":13,"author":{"gitId":"SiTingST"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.5.0\u0027"},{"lineNumber":14,"author":{"gitId":"SiTingST"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.5.0\u0027"},{"lineNumber":15,"author":{"gitId":"SiTingST"},"content":""},{"lineNumber":16,"author":{"gitId":"SiTingST"},"content":"    String javaFxVersion \u003d \u002711\u0027"},{"lineNumber":17,"author":{"gitId":"SiTingST"},"content":""},{"lineNumber":18,"author":{"gitId":"SiTingST"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027"},{"lineNumber":19,"author":{"gitId":"SiTingST"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"},{"lineNumber":20,"author":{"gitId":"SiTingST"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"},{"lineNumber":21,"author":{"gitId":"SiTingST"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027"},{"lineNumber":22,"author":{"gitId":"SiTingST"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"},{"lineNumber":23,"author":{"gitId":"SiTingST"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"},{"lineNumber":24,"author":{"gitId":"SiTingST"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027"},{"lineNumber":25,"author":{"gitId":"SiTingST"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"},{"lineNumber":26,"author":{"gitId":"SiTingST"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"},{"lineNumber":27,"author":{"gitId":"SiTingST"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027"},{"lineNumber":28,"author":{"gitId":"SiTingST"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"},{"lineNumber":29,"author":{"gitId":"SiTingST"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"},{"lineNumber":30,"author":{"gitId":"SiTingST"},"content":"}"},{"lineNumber":31,"author":{"gitId":"SiTingST"},"content":""},{"lineNumber":32,"author":{"gitId":"SiTingST"},"content":"test {"},{"lineNumber":33,"author":{"gitId":"SiTingST"},"content":"    useJUnitPlatform()"},{"lineNumber":34,"author":{"gitId":"SiTingST"},"content":""},{"lineNumber":35,"author":{"gitId":"SiTingST"},"content":"    testLogging {"},{"lineNumber":36,"author":{"gitId":"SiTingST"},"content":"        events \"passed\", \"skipped\", \"failed\""},{"lineNumber":37,"author":{"gitId":"SiTingST"},"content":""},{"lineNumber":38,"author":{"gitId":"SiTingST"},"content":"        showExceptions true"},{"lineNumber":39,"author":{"gitId":"SiTingST"},"content":"        exceptionFormat \"full\""},{"lineNumber":40,"author":{"gitId":"SiTingST"},"content":"        showCauses true"},{"lineNumber":41,"author":{"gitId":"SiTingST"},"content":"        showStackTraces true"},{"lineNumber":42,"author":{"gitId":"SiTingST"},"content":"        showStandardStreams \u003d false"},{"lineNumber":43,"author":{"gitId":"SiTingST"},"content":"    }"},{"lineNumber":44,"author":{"gitId":"SiTingST"},"content":"}"},{"lineNumber":45,"author":{"gitId":"SiTingST"},"content":""},{"lineNumber":46,"author":{"gitId":"SiTingST"},"content":"application {"},{"lineNumber":47,"author":{"gitId":"SiTingST"},"content":"    mainClassName \u003d \"duke.Launcher\""},{"lineNumber":48,"author":{"gitId":"SiTingST"},"content":"}"},{"lineNumber":49,"author":{"gitId":"SiTingST"},"content":""},{"lineNumber":50,"author":{"gitId":"SiTingST"},"content":"shadowJar {"},{"lineNumber":51,"author":{"gitId":"SiTingST"},"content":"    archiveBaseName \u003d \"duke\""},{"lineNumber":52,"author":{"gitId":"SiTingST"},"content":"    archiveClassifier \u003d null"},{"lineNumber":53,"author":{"gitId":"SiTingST"},"content":"}"},{"lineNumber":54,"author":{"gitId":"SiTingST"},"content":""},{"lineNumber":55,"author":{"gitId":"SiTingST"},"content":"checkstyle {"},{"lineNumber":56,"author":{"gitId":"SiTingST"},"content":"    toolVersion \u003d \u00278.29\u0027"},{"lineNumber":57,"author":{"gitId":"SiTingST"},"content":"}"},{"lineNumber":58,"author":{"gitId":"SiTingST"},"content":""},{"lineNumber":59,"author":{"gitId":"SiTingST"},"content":"run{"},{"lineNumber":60,"author":{"gitId":"SiTingST"},"content":"    standardInput \u003d System.in"},{"lineNumber":61,"author":{"gitId":"SiTingST"},"content":"}"}],"authorContributionMap":{"SiTingST":61}},{"path":"data/listOfTask.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"SiTingST"},"content":"D,true,  ,2021-02-23,11:00"},{"lineNumber":2,"author":{"gitId":"SiTingST"},"content":"E,false,  oop ,2021-02-24,18:00,20:00"},{"lineNumber":3,"author":{"gitId":"SiTingST"},"content":"E,false,  attend internship meeting ,2022-02-17,10:00,11:00"}],"authorContributionMap":{"SiTingST":3}},{"path":"docs/README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"# User Guide"},{"lineNumber":2,"author":{"gitId":"-"},"content":""},{"lineNumber":3,"author":{"gitId":"SiTingST"},"content":"Duke is the go-to chat-bot that helps to manage and organize your task efficiently."},{"lineNumber":4,"author":{"gitId":"SiTingST"},"content":"\u003cbr\u003e Implemented with different avatars and a simple user interface, you will be able to navigate through it without fuss."},{"lineNumber":5,"author":{"gitId":"-"},"content":""},{"lineNumber":6,"author":{"gitId":"SiTingST"},"content":"## Table Of Content"},{"lineNumber":7,"author":{"gitId":"-"},"content":""},{"lineNumber":8,"author":{"gitId":"SiTingST"},"content":"* [Quick Start](#quick-start)"},{"lineNumber":9,"author":{"gitId":"SiTingST"},"content":"* [Features](#features)"},{"lineNumber":10,"author":{"gitId":"SiTingST"},"content":"\t1. Add a task "},{"lineNumber":11,"author":{"gitId":"SiTingST"},"content":"\t\t* [Todo](#adding-a-todo-task-todo)"},{"lineNumber":12,"author":{"gitId":"SiTingST"},"content":"\t\t* [Deadline](#adding-a-deadline-task-deadline)"},{"lineNumber":13,"author":{"gitId":"SiTingST"},"content":"\t\t* [Event](#adding-an-event-task-event)"},{"lineNumber":14,"author":{"gitId":"SiTingST"},"content":"\t2. [List all tasks](#list-all-tasks-list)"},{"lineNumber":15,"author":{"gitId":"SiTingST"},"content":"\t3. [Delete a task](#deletes-a-task-delete)"},{"lineNumber":16,"author":{"gitId":"SiTingST"},"content":"\t4. [Mark a task as done](#marks-a-task-as-done-done)"},{"lineNumber":17,"author":{"gitId":"SiTingST"},"content":"\t5. [Find a task](#finds-a-specific-task-find)"},{"lineNumber":18,"author":{"gitId":"SiTingST"},"content":"\t6. [Exit Program](#exit-bye)"},{"lineNumber":19,"author":{"gitId":"SiTingST"},"content":"* [Command Summary](#command-summary)"},{"lineNumber":20,"author":{"gitId":"-"},"content":""},{"lineNumber":21,"author":{"gitId":"-"},"content":""},{"lineNumber":22,"author":{"gitId":"SiTingST"},"content":"# Quick start"},{"lineNumber":23,"author":{"gitId":"-"},"content":""},{"lineNumber":24,"author":{"gitId":"SiTingST"},"content":"1. Ensure you have Java `11` or above installed on your computer."},{"lineNumber":25,"author":{"gitId":"-"},"content":""},{"lineNumber":26,"author":{"gitId":"SiTingST"},"content":"2. Download the latest `duke.jar` from [here](https://github.com/SiTingST/ip/releases/tag/A-Release)."},{"lineNumber":27,"author":{"gitId":"SiTingST"},"content":""},{"lineNumber":28,"author":{"gitId":"SiTingST"},"content":"3. Double-click on the downloaded file to launch Duke. "},{"lineNumber":29,"author":{"gitId":"SiTingST"},"content":"\t\u003cbr\u003e Note: A data folder will be created in the folder containing the duke.jar file. Duke saves your tasks in the data file for efficient retrieval of tasks. "},{"lineNumber":30,"author":{"gitId":"SiTingST"},"content":"\t"},{"lineNumber":31,"author":{"gitId":"SiTingST"},"content":"4. After starting the application, you should see the GUI as shown below:"},{"lineNumber":32,"author":{"gitId":"SiTingST"},"content":"![Ui](Ui.png)"},{"lineNumber":33,"author":{"gitId":"SiTingST"},"content":""},{"lineNumber":34,"author":{"gitId":"SiTingST"},"content":""},{"lineNumber":35,"author":{"gitId":"SiTingST"},"content":"## Features"},{"lineNumber":36,"author":{"gitId":"SiTingST"},"content":""},{"lineNumber":37,"author":{"gitId":"SiTingST"},"content":"Notes about the command format:**\u003cbr\u003e"},{"lineNumber":38,"author":{"gitId":"SiTingST"},"content":""},{"lineNumber":39,"author":{"gitId":"SiTingST"},"content":"* Words in `UPPER_CASE` are the *compulsory* parameters to be supplied by the user.\u003cbr\u003e"},{"lineNumber":40,"author":{"gitId":"SiTingST"},"content":""},{"lineNumber":41,"author":{"gitId":"SiTingST"},"content":"### Add a task:  `todo`, `deadline`, `event`"},{"lineNumber":42,"author":{"gitId":"SiTingST"},"content":""},{"lineNumber":43,"author":{"gitId":"SiTingST"},"content":"There are three different tasks, namely, todo, event, and deadline. "},{"lineNumber":44,"author":{"gitId":"SiTingST"},"content":"\u003cbr\u003e Differents commands are used to facilitate the adding of different tasks to the program as seen below."},{"lineNumber":45,"author":{"gitId":"SiTingST"},"content":""},{"lineNumber":46,"author":{"gitId":"SiTingST"},"content":"Notes:"},{"lineNumber":47,"author":{"gitId":"SiTingST"},"content":"* Commands are case-insensitive and the program only accepts commands typed in lower alphabets. "},{"lineNumber":48,"author":{"gitId":"SiTingST"},"content":"* Users should add **ONE** task at a time. "},{"lineNumber":49,"author":{"gitId":"SiTingST"},"content":"* There should **no duplication of tasks** with the same task description. "},{"lineNumber":50,"author":{"gitId":"SiTingST"},"content":""},{"lineNumber":51,"author":{"gitId":"SiTingST"},"content":"#### Adding a todo task: `todo`"},{"lineNumber":52,"author":{"gitId":"SiTingST"},"content":"The todo command adds a todo task that requires a task description and no other field as user input."},{"lineNumber":53,"author":{"gitId":"SiTingST"},"content":""},{"lineNumber":54,"author":{"gitId":"SiTingST"},"content":"Format: `todo` DESCRIPTION"},{"lineNumber":55,"author":{"gitId":"SiTingST"},"content":""},{"lineNumber":56,"author":{"gitId":"SiTingST"},"content":"Examples:"},{"lineNumber":57,"author":{"gitId":"SiTingST"},"content":"* `todo CNY visiting`"},{"lineNumber":58,"author":{"gitId":"SiTingST"},"content":"* `todo ST2334 tutorial`"},{"lineNumber":59,"author":{"gitId":"SiTingST"},"content":""},{"lineNumber":60,"author":{"gitId":"SiTingST"},"content":"![Ui](./Images/addTodoTask.png)"},{"lineNumber":61,"author":{"gitId":"SiTingST"},"content":""},{"lineNumber":62,"author":{"gitId":"SiTingST"},"content":"#### Adding a deadline task: `deadline`"},{"lineNumber":63,"author":{"gitId":"SiTingST"},"content":"The deadline command adds a deadline task that requires a task description, date and time to specify the due date and time of the task. "},{"lineNumber":64,"author":{"gitId":"SiTingST"},"content":""},{"lineNumber":65,"author":{"gitId":"SiTingST"},"content":"Format: `deadline` DESCRIPTION /BY DATE TIME "},{"lineNumber":66,"author":{"gitId":"SiTingST"},"content":"* DATE should be by DD/MM/YYYY (DATE that has already passed will not be accepted as a valid date)"},{"lineNumber":67,"author":{"gitId":"SiTingST"},"content":"* TIME should be in HHMM"},{"lineNumber":68,"author":{"gitId":"SiTingST"},"content":""},{"lineNumber":69,"author":{"gitId":"SiTingST"},"content":"Examples:"},{"lineNumber":70,"author":{"gitId":"SiTingST"},"content":"* `deadline submit proposal /by 03/05/2022 1800`"},{"lineNumber":71,"author":{"gitId":"SiTingST"},"content":""},{"lineNumber":72,"author":{"gitId":"SiTingST"},"content":"![Ui](./Images/addDeadlineTask.png)"},{"lineNumber":73,"author":{"gitId":"SiTingST"},"content":""},{"lineNumber":74,"author":{"gitId":"SiTingST"},"content":"#### Adding an event task: `event`"},{"lineNumber":75,"author":{"gitId":"SiTingST"},"content":"The event command adds an event task that requires a task description, date as well as start and end time of the task. "},{"lineNumber":76,"author":{"gitId":"SiTingST"},"content":""},{"lineNumber":77,"author":{"gitId":"SiTingST"},"content":"Format: `event` description /AT DATE START_TIME-END_TIME "},{"lineNumber":78,"author":{"gitId":"SiTingST"},"content":""},{"lineNumber":79,"author":{"gitId":"SiTingST"},"content":"Format: `deadline` DESCRIPTION /BY DATE TIME "},{"lineNumber":80,"author":{"gitId":"SiTingST"},"content":"* DATE is should be by DD/MM/YYYY (DATE that has already passed will not be accepted as a valid date)"},{"lineNumber":81,"author":{"gitId":"SiTingST"},"content":"* START_TIME and END_IME should be in HHMM (END_TIME earlier than START_TIME will *not be accepted as valid time)"},{"lineNumber":82,"author":{"gitId":"SiTingST"},"content":""},{"lineNumber":83,"author":{"gitId":"SiTingST"},"content":"Examples:"},{"lineNumber":84,"author":{"gitId":"SiTingST"},"content":"* `event attend internship meeting /at 17/02/2022 1000-1100`"},{"lineNumber":85,"author":{"gitId":"SiTingST"},"content":""},{"lineNumber":86,"author":{"gitId":"SiTingST"},"content":"![Ui](./Images/addEventTask.png)"},{"lineNumber":87,"author":{"gitId":"SiTingST"},"content":""},{"lineNumber":88,"author":{"gitId":"SiTingST"},"content":""},{"lineNumber":89,"author":{"gitId":"SiTingST"},"content":"### List all tasks: `list`"},{"lineNumber":90,"author":{"gitId":"SiTingST"},"content":""},{"lineNumber":91,"author":{"gitId":"SiTingST"},"content":"Shows a list of all the tasks in duke."},{"lineNumber":92,"author":{"gitId":"SiTingST"},"content":""},{"lineNumber":93,"author":{"gitId":"SiTingST"},"content":"Format: `list`"},{"lineNumber":94,"author":{"gitId":"SiTingST"},"content":""},{"lineNumber":95,"author":{"gitId":"SiTingST"},"content":"![Ui](./Images/listTask.png)"},{"lineNumber":96,"author":{"gitId":"SiTingST"},"content":""},{"lineNumber":97,"author":{"gitId":"SiTingST"},"content":"### Deletes a task: `delete`"},{"lineNumber":98,"author":{"gitId":"SiTingST"},"content":""},{"lineNumber":99,"author":{"gitId":"SiTingST"},"content":"Deletes a task using its task index in the list."},{"lineNumber":100,"author":{"gitId":"SiTingST"},"content":""},{"lineNumber":101,"author":{"gitId":"SiTingST"},"content":"Note: TASK_INDEX starts from 1."},{"lineNumber":102,"author":{"gitId":"SiTingST"},"content":""},{"lineNumber":103,"author":{"gitId":"SiTingST"},"content":"Format: `delete TASK_INDEX`"},{"lineNumber":104,"author":{"gitId":"SiTingST"},"content":""},{"lineNumber":105,"author":{"gitId":"SiTingST"},"content":"Assume that we still have 4 tasks, "},{"lineNumber":106,"author":{"gitId":"SiTingST"},"content":"\u003cbr\u003e`delete3`: will remove the third task on the list"},{"lineNumber":107,"author":{"gitId":"SiTingST"},"content":""},{"lineNumber":108,"author":{"gitId":"SiTingST"},"content":"![Ui](./Images/deleteTask.png)"},{"lineNumber":109,"author":{"gitId":"SiTingST"},"content":""},{"lineNumber":110,"author":{"gitId":"SiTingST"},"content":"### Marks a task as done: `done`"},{"lineNumber":111,"author":{"gitId":"SiTingST"},"content":""},{"lineNumber":112,"author":{"gitId":"SiTingST"},"content":"Marks the given task as completed which adds a tick beside the task. "},{"lineNumber":113,"author":{"gitId":"SiTingST"},"content":""},{"lineNumber":114,"author":{"gitId":"SiTingST"},"content":"Note: All tasks added are uncompleted by default and TASK_INDEX starts from 1. "},{"lineNumber":115,"author":{"gitId":"SiTingST"},"content":""},{"lineNumber":116,"author":{"gitId":"SiTingST"},"content":"Format: `done TASK_INDEX`"},{"lineNumber":117,"author":{"gitId":"SiTingST"},"content":""},{"lineNumber":118,"author":{"gitId":"SiTingST"},"content":"Example:"},{"lineNumber":119,"author":{"gitId":"SiTingST"},"content":""},{"lineNumber":120,"author":{"gitId":"SiTingST"},"content":"Assume that we still have 3 tasks, "},{"lineNumber":121,"author":{"gitId":"SiTingST"},"content":"\u003cbr\u003e `done 1`: will mark the first task on the list as completed "},{"lineNumber":122,"author":{"gitId":"SiTingST"},"content":""},{"lineNumber":123,"author":{"gitId":"SiTingST"},"content":"![Ui](./Images/markAsDone.png)"},{"lineNumber":124,"author":{"gitId":"SiTingST"},"content":""},{"lineNumber":125,"author":{"gitId":"SiTingST"},"content":"### Finds a specific task: `find`"},{"lineNumber":126,"author":{"gitId":"SiTingST"},"content":""},{"lineNumber":127,"author":{"gitId":"SiTingST"},"content":"Show all tasks that match or contain keywords. "},{"lineNumber":128,"author":{"gitId":"SiTingST"},"content":""},{"lineNumber":129,"author":{"gitId":"SiTingST"},"content":"Format: `find KEYWORDS`"},{"lineNumber":130,"author":{"gitId":"SiTingST"},"content":""},{"lineNumber":131,"author":{"gitId":"SiTingST"},"content":"Example:"},{"lineNumber":132,"author":{"gitId":"SiTingST"},"content":"  `find cs2103`"},{"lineNumber":133,"author":{"gitId":"SiTingST"},"content":""},{"lineNumber":134,"author":{"gitId":"SiTingST"},"content":"![Ui](./Images/findTask.png)"},{"lineNumber":135,"author":{"gitId":"SiTingST"},"content":""},{"lineNumber":136,"author":{"gitId":"SiTingST"},"content":"### Exit: `bye`"},{"lineNumber":137,"author":{"gitId":"SiTingST"},"content":""},{"lineNumber":138,"author":{"gitId":"SiTingST"},"content":"The program will terminate a few seconds after returning a \"Bye. Hope to see you again!\" message. "},{"lineNumber":139,"author":{"gitId":"SiTingST"},"content":""},{"lineNumber":140,"author":{"gitId":"SiTingST"},"content":""},{"lineNumber":141,"author":{"gitId":"SiTingST"},"content":"## Command Summary"},{"lineNumber":142,"author":{"gitId":"SiTingST"},"content":""},{"lineNumber":143,"author":{"gitId":"SiTingST"},"content":"**Action**  | **Format, Examples**"},{"lineNumber":144,"author":{"gitId":"SiTingST"},"content":"--------|-----------------"},{"lineNumber":145,"author":{"gitId":"SiTingST"},"content":"**Add todo task** | `todo TASK_DESCRIPTION` e.g, `add todo watch assignments`"},{"lineNumber":146,"author":{"gitId":"SiTingST"},"content":"**Add deadline task** | `deadline TASK_DESCRIPTION /by DATE` e.g., `deadline finish cs2103 quiz /by 18/02/2021`"},{"lineNumber":147,"author":{"gitId":"SiTingST"},"content":"**Add event task** | `event TASK_DESCRIPTION /at DATE START_TIME END_TIME` e.g., `event attend internship meeting /at 17/02/2021 1000-1100`"},{"lineNumber":148,"author":{"gitId":"SiTingST"},"content":"**List** | `list`"},{"lineNumber":149,"author":{"gitId":"SiTingST"},"content":"**Mark as Done** |`delete TASK_INDEX` e.g., `delete 3`"},{"lineNumber":150,"author":{"gitId":"SiTingST"},"content":"**Delete** | `delete TASK_NUMBER` e.g., `delete 1`"},{"lineNumber":151,"author":{"gitId":"SiTingST"},"content":"**Find** | `find KEYWORD` e.g., `find cs2103`"},{"lineNumber":152,"author":{"gitId":"SiTingST"},"content":"**Exit** | `bye`"},{"lineNumber":153,"author":{"gitId":"-"},"content":""},{"lineNumber":154,"author":{"gitId":"-"},"content":""}],"authorContributionMap":{"SiTingST":144,"-":10}},{"path":"gradlew.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"SiTingST"},"content":"@rem"},{"lineNumber":2,"author":{"gitId":"SiTingST"},"content":"@rem Copyright 2015 the original author or authors."},{"lineNumber":3,"author":{"gitId":"SiTingST"},"content":"@rem"},{"lineNumber":4,"author":{"gitId":"SiTingST"},"content":"@rem Licensed under the Apache License, Version 2.0 (the \"License\");"},{"lineNumber":5,"author":{"gitId":"SiTingST"},"content":"@rem you may not use this file except in compliance with the License."},{"lineNumber":6,"author":{"gitId":"SiTingST"},"content":"@rem You may obtain a copy of the License at"},{"lineNumber":7,"author":{"gitId":"SiTingST"},"content":"@rem"},{"lineNumber":8,"author":{"gitId":"SiTingST"},"content":"@rem      https://www.apache.org/licenses/LICENSE-2.0"},{"lineNumber":9,"author":{"gitId":"SiTingST"},"content":"@rem"},{"lineNumber":10,"author":{"gitId":"SiTingST"},"content":"@rem Unless required by applicable law or agreed to in writing, software"},{"lineNumber":11,"author":{"gitId":"SiTingST"},"content":"@rem distributed under the License is distributed on an \"AS IS\" BASIS,"},{"lineNumber":12,"author":{"gitId":"SiTingST"},"content":"@rem WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied."},{"lineNumber":13,"author":{"gitId":"SiTingST"},"content":"@rem See the License for the specific language governing permissions and"},{"lineNumber":14,"author":{"gitId":"SiTingST"},"content":"@rem limitations under the License."},{"lineNumber":15,"author":{"gitId":"SiTingST"},"content":"@rem"},{"lineNumber":16,"author":{"gitId":"SiTingST"},"content":""},{"lineNumber":17,"author":{"gitId":"SiTingST"},"content":"@if \"%DEBUG%\" \u003d\u003d \"\" @echo off"},{"lineNumber":18,"author":{"gitId":"SiTingST"},"content":"@rem ##########################################################################"},{"lineNumber":19,"author":{"gitId":"SiTingST"},"content":"@rem"},{"lineNumber":20,"author":{"gitId":"SiTingST"},"content":"@rem  Gradle startup script for Windows"},{"lineNumber":21,"author":{"gitId":"SiTingST"},"content":"@rem"},{"lineNumber":22,"author":{"gitId":"SiTingST"},"content":"@rem ##########################################################################"},{"lineNumber":23,"author":{"gitId":"SiTingST"},"content":""},{"lineNumber":24,"author":{"gitId":"SiTingST"},"content":"@rem Set local scope for the variables with windows NT shell"},{"lineNumber":25,"author":{"gitId":"SiTingST"},"content":"if \"%OS%\"\u003d\u003d\"Windows_NT\" setlocal"},{"lineNumber":26,"author":{"gitId":"SiTingST"},"content":""},{"lineNumber":27,"author":{"gitId":"SiTingST"},"content":"set DIRNAME\u003d%~dp0"},{"lineNumber":28,"author":{"gitId":"SiTingST"},"content":"if \"%DIRNAME%\" \u003d\u003d \"\" set DIRNAME\u003d."},{"lineNumber":29,"author":{"gitId":"SiTingST"},"content":"set APP_BASE_NAME\u003d%~n0"},{"lineNumber":30,"author":{"gitId":"SiTingST"},"content":"set APP_HOME\u003d%DIRNAME%"},{"lineNumber":31,"author":{"gitId":"SiTingST"},"content":""},{"lineNumber":32,"author":{"gitId":"SiTingST"},"content":"@rem Resolve any \".\" and \"..\" in APP_HOME to make it shorter."},{"lineNumber":33,"author":{"gitId":"SiTingST"},"content":"for %%i in (\"%APP_HOME%\") do set APP_HOME\u003d%%~fi"},{"lineNumber":34,"author":{"gitId":"SiTingST"},"content":""},{"lineNumber":35,"author":{"gitId":"SiTingST"},"content":"@rem Add default JVM options here. You can also use JAVA_OPTS and GRADLE_OPTS to pass JVM options to this script."},{"lineNumber":36,"author":{"gitId":"SiTingST"},"content":"set DEFAULT_JVM_OPTS\u003d\"-Xmx64m\" \"-Xms64m\""},{"lineNumber":37,"author":{"gitId":"SiTingST"},"content":""},{"lineNumber":38,"author":{"gitId":"SiTingST"},"content":"@rem Find java.exe"},{"lineNumber":39,"author":{"gitId":"SiTingST"},"content":"if defined JAVA_HOME goto findJavaFromJavaHome"},{"lineNumber":40,"author":{"gitId":"SiTingST"},"content":""},{"lineNumber":41,"author":{"gitId":"SiTingST"},"content":"set JAVA_EXE\u003djava.exe"},{"lineNumber":42,"author":{"gitId":"SiTingST"},"content":"%JAVA_EXE% -version \u003eNUL 2\u003e\u00261"},{"lineNumber":43,"author":{"gitId":"SiTingST"},"content":"if \"%ERRORLEVEL%\" \u003d\u003d \"0\" goto init"},{"lineNumber":44,"author":{"gitId":"SiTingST"},"content":""},{"lineNumber":45,"author":{"gitId":"SiTingST"},"content":"echo."},{"lineNumber":46,"author":{"gitId":"SiTingST"},"content":"echo ERROR: JAVA_HOME is not set and no \u0027java\u0027 command could be found in your PATH."},{"lineNumber":47,"author":{"gitId":"SiTingST"},"content":"echo."},{"lineNumber":48,"author":{"gitId":"SiTingST"},"content":"echo Please set the JAVA_HOME variable in your environment to match the"},{"lineNumber":49,"author":{"gitId":"SiTingST"},"content":"echo location of your Java installation."},{"lineNumber":50,"author":{"gitId":"SiTingST"},"content":""},{"lineNumber":51,"author":{"gitId":"SiTingST"},"content":"goto fail"},{"lineNumber":52,"author":{"gitId":"SiTingST"},"content":""},{"lineNumber":53,"author":{"gitId":"SiTingST"},"content":":findJavaFromJavaHome"},{"lineNumber":54,"author":{"gitId":"SiTingST"},"content":"set JAVA_HOME\u003d%JAVA_HOME:\"\u003d%"},{"lineNumber":55,"author":{"gitId":"SiTingST"},"content":"set JAVA_EXE\u003d%JAVA_HOME%/bin/java.exe"},{"lineNumber":56,"author":{"gitId":"SiTingST"},"content":""},{"lineNumber":57,"author":{"gitId":"SiTingST"},"content":"if exist \"%JAVA_EXE%\" goto init"},{"lineNumber":58,"author":{"gitId":"SiTingST"},"content":""},{"lineNumber":59,"author":{"gitId":"SiTingST"},"content":"echo."},{"lineNumber":60,"author":{"gitId":"SiTingST"},"content":"echo ERROR: JAVA_HOME is set to an invalid directory: %JAVA_HOME%"},{"lineNumber":61,"author":{"gitId":"SiTingST"},"content":"echo."},{"lineNumber":62,"author":{"gitId":"SiTingST"},"content":"echo Please set the JAVA_HOME variable in your environment to match the"},{"lineNumber":63,"author":{"gitId":"SiTingST"},"content":"echo location of your Java installation."},{"lineNumber":64,"author":{"gitId":"SiTingST"},"content":""},{"lineNumber":65,"author":{"gitId":"SiTingST"},"content":"goto fail"},{"lineNumber":66,"author":{"gitId":"SiTingST"},"content":""},{"lineNumber":67,"author":{"gitId":"SiTingST"},"content":":init"},{"lineNumber":68,"author":{"gitId":"SiTingST"},"content":"@rem Get command-line arguments, handling Windows variants"},{"lineNumber":69,"author":{"gitId":"SiTingST"},"content":""},{"lineNumber":70,"author":{"gitId":"SiTingST"},"content":"if not \"%OS%\" \u003d\u003d \"Windows_NT\" goto win9xME_args"},{"lineNumber":71,"author":{"gitId":"SiTingST"},"content":""},{"lineNumber":72,"author":{"gitId":"SiTingST"},"content":":win9xME_args"},{"lineNumber":73,"author":{"gitId":"SiTingST"},"content":"@rem Slurp the command line arguments."},{"lineNumber":74,"author":{"gitId":"SiTingST"},"content":"set CMD_LINE_ARGS\u003d"},{"lineNumber":75,"author":{"gitId":"SiTingST"},"content":"set _SKIP\u003d2"},{"lineNumber":76,"author":{"gitId":"SiTingST"},"content":""},{"lineNumber":77,"author":{"gitId":"SiTingST"},"content":":win9xME_args_slurp"},{"lineNumber":78,"author":{"gitId":"SiTingST"},"content":"if \"x%~1\" \u003d\u003d \"x\" goto execute"},{"lineNumber":79,"author":{"gitId":"SiTingST"},"content":""},{"lineNumber":80,"author":{"gitId":"SiTingST"},"content":"set CMD_LINE_ARGS\u003d%*"},{"lineNumber":81,"author":{"gitId":"SiTingST"},"content":""},{"lineNumber":82,"author":{"gitId":"SiTingST"},"content":":execute"},{"lineNumber":83,"author":{"gitId":"SiTingST"},"content":"@rem Setup the command line"},{"lineNumber":84,"author":{"gitId":"SiTingST"},"content":""},{"lineNumber":85,"author":{"gitId":"SiTingST"},"content":"set CLASSPATH\u003d%APP_HOME%\\gradle\\wrapper\\gradle-wrapper.jar"},{"lineNumber":86,"author":{"gitId":"SiTingST"},"content":""},{"lineNumber":87,"author":{"gitId":"SiTingST"},"content":"@rem Execute Gradle"},{"lineNumber":88,"author":{"gitId":"SiTingST"},"content":"\"%JAVA_EXE%\" %DEFAULT_JVM_OPTS% %JAVA_OPTS% %GRADLE_OPTS% \"-Dorg.gradle.appname\u003d%APP_BASE_NAME%\" -classpath \"%CLASSPATH%\" org.gradle.wrapper.GradleWrapperMain %CMD_LINE_ARGS%"},{"lineNumber":89,"author":{"gitId":"SiTingST"},"content":""},{"lineNumber":90,"author":{"gitId":"SiTingST"},"content":":end"},{"lineNumber":91,"author":{"gitId":"SiTingST"},"content":"@rem End local scope for the variables with windows NT shell"},{"lineNumber":92,"author":{"gitId":"SiTingST"},"content":"if \"%ERRORLEVEL%\"\u003d\u003d\"0\" goto mainEnd"},{"lineNumber":93,"author":{"gitId":"SiTingST"},"content":""},{"lineNumber":94,"author":{"gitId":"SiTingST"},"content":":fail"},{"lineNumber":95,"author":{"gitId":"SiTingST"},"content":"rem Set variable GRADLE_EXIT_CONSOLE if you need the _script_ return code instead of"},{"lineNumber":96,"author":{"gitId":"SiTingST"},"content":"rem the _cmd.exe /c_ return code!"},{"lineNumber":97,"author":{"gitId":"SiTingST"},"content":"if  not \"\" \u003d\u003d \"%GRADLE_EXIT_CONSOLE%\" exit 1"},{"lineNumber":98,"author":{"gitId":"SiTingST"},"content":"exit /b 1"},{"lineNumber":99,"author":{"gitId":"SiTingST"},"content":""},{"lineNumber":100,"author":{"gitId":"SiTingST"},"content":":mainEnd"},{"lineNumber":101,"author":{"gitId":"SiTingST"},"content":"if \"%OS%\"\u003d\u003d\"Windows_NT\" endlocal"},{"lineNumber":102,"author":{"gitId":"SiTingST"},"content":""},{"lineNumber":103,"author":{"gitId":"SiTingST"},"content":":omega"}],"authorContributionMap":{"SiTingST":103}},{"path":"src/main/java/duke/DialogBox.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"SiTingST"},"content":"package duke;"},{"lineNumber":2,"author":{"gitId":"SiTingST"},"content":"import java.io.IOException;"},{"lineNumber":3,"author":{"gitId":"SiTingST"},"content":"import java.util.Collections;"},{"lineNumber":4,"author":{"gitId":"SiTingST"},"content":""},{"lineNumber":5,"author":{"gitId":"SiTingST"},"content":"import javafx.collections.FXCollections;"},{"lineNumber":6,"author":{"gitId":"SiTingST"},"content":"import javafx.collections.ObservableList;"},{"lineNumber":7,"author":{"gitId":"SiTingST"},"content":"import javafx.fxml.FXML;"},{"lineNumber":8,"author":{"gitId":"SiTingST"},"content":"import javafx.fxml.FXMLLoader;"},{"lineNumber":9,"author":{"gitId":"SiTingST"},"content":"import javafx.geometry.Insets;"},{"lineNumber":10,"author":{"gitId":"SiTingST"},"content":"import javafx.geometry.Pos;"},{"lineNumber":11,"author":{"gitId":"SiTingST"},"content":"import javafx.scene.Node;"},{"lineNumber":12,"author":{"gitId":"SiTingST"},"content":"import javafx.scene.control.Label;"},{"lineNumber":13,"author":{"gitId":"SiTingST"},"content":"import javafx.scene.image.Image;"},{"lineNumber":14,"author":{"gitId":"SiTingST"},"content":"import javafx.scene.image.ImageView;"},{"lineNumber":15,"author":{"gitId":"SiTingST"},"content":"import javafx.scene.layout.Background;"},{"lineNumber":16,"author":{"gitId":"SiTingST"},"content":"import javafx.scene.layout.BackgroundFill;"},{"lineNumber":17,"author":{"gitId":"SiTingST"},"content":"import javafx.scene.layout.CornerRadii;"},{"lineNumber":18,"author":{"gitId":"SiTingST"},"content":"import javafx.scene.layout.HBox;"},{"lineNumber":19,"author":{"gitId":"SiTingST"},"content":"import javafx.scene.paint.Color;"},{"lineNumber":20,"author":{"gitId":"SiTingST"},"content":""},{"lineNumber":21,"author":{"gitId":"SiTingST"},"content":"/**"},{"lineNumber":22,"author":{"gitId":"SiTingST"},"content":" * An example of a custom control using FXML."},{"lineNumber":23,"author":{"gitId":"SiTingST"},"content":" * This control represents a dialog box consisting of an ImageView to represent the speaker\u0027s face and a label"},{"lineNumber":24,"author":{"gitId":"SiTingST"},"content":" * containing text from the speaker."},{"lineNumber":25,"author":{"gitId":"SiTingST"},"content":" */"},{"lineNumber":26,"author":{"gitId":"SiTingST"},"content":"public class DialogBox extends HBox {"},{"lineNumber":27,"author":{"gitId":"SiTingST"},"content":"    @FXML"},{"lineNumber":28,"author":{"gitId":"SiTingST"},"content":"    private Label dialog;"},{"lineNumber":29,"author":{"gitId":"SiTingST"},"content":"    @FXML"},{"lineNumber":30,"author":{"gitId":"SiTingST"},"content":"    private ImageView displayPicture;"},{"lineNumber":31,"author":{"gitId":"SiTingST"},"content":""},{"lineNumber":32,"author":{"gitId":"SiTingST"},"content":"    private DialogBox(String text, Image img) {"},{"lineNumber":33,"author":{"gitId":"SiTingST"},"content":"        try {"},{"lineNumber":34,"author":{"gitId":"SiTingST"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(\"/view/DialogBox.fxml\"));"},{"lineNumber":35,"author":{"gitId":"SiTingST"},"content":"            fxmlLoader.setController(this);"},{"lineNumber":36,"author":{"gitId":"SiTingST"},"content":"            fxmlLoader.setRoot(this);"},{"lineNumber":37,"author":{"gitId":"SiTingST"},"content":"            fxmlLoader.load();"},{"lineNumber":38,"author":{"gitId":"SiTingST"},"content":"        } catch (IOException e) {"},{"lineNumber":39,"author":{"gitId":"SiTingST"},"content":"            e.printStackTrace();"},{"lineNumber":40,"author":{"gitId":"SiTingST"},"content":"        }"},{"lineNumber":41,"author":{"gitId":"SiTingST"},"content":""},{"lineNumber":42,"author":{"gitId":"SiTingST"},"content":"        dialog.setTextFill(Color.BLACK);"},{"lineNumber":43,"author":{"gitId":"SiTingST"},"content":"        dialog.setText(text);"},{"lineNumber":44,"author":{"gitId":"SiTingST"},"content":"        displayPicture.setImage(img);"},{"lineNumber":45,"author":{"gitId":"SiTingST"},"content":"    }"},{"lineNumber":46,"author":{"gitId":"SiTingST"},"content":""},{"lineNumber":47,"author":{"gitId":"SiTingST"},"content":"    /**"},{"lineNumber":48,"author":{"gitId":"SiTingST"},"content":"     * Flips the dialog box such that the ImageView is on the left and text on the right."},{"lineNumber":49,"author":{"gitId":"SiTingST"},"content":"     */"},{"lineNumber":50,"author":{"gitId":"SiTingST"},"content":"    private void flip() {"},{"lineNumber":51,"author":{"gitId":"SiTingST"},"content":"        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());"},{"lineNumber":52,"author":{"gitId":"SiTingST"},"content":"        Collections.reverse(tmp);"},{"lineNumber":53,"author":{"gitId":"SiTingST"},"content":"        getChildren().setAll(tmp);"},{"lineNumber":54,"author":{"gitId":"SiTingST"},"content":"        setAlignment(Pos.TOP_LEFT);"},{"lineNumber":55,"author":{"gitId":"SiTingST"},"content":"    }"},{"lineNumber":56,"author":{"gitId":"SiTingST"},"content":""},{"lineNumber":57,"author":{"gitId":"SiTingST"},"content":"    public static DialogBox getUserDialog(String text, Image img) {"},{"lineNumber":58,"author":{"gitId":"SiTingST"},"content":"        var db \u003d new DialogBox(text, img);"},{"lineNumber":59,"author":{"gitId":"SiTingST"},"content":"        Color col \u003d Color.rgb(239, 216, 226);"},{"lineNumber":60,"author":{"gitId":"SiTingST"},"content":"        CornerRadii corn \u003d new CornerRadii(10);"},{"lineNumber":61,"author":{"gitId":"SiTingST"},"content":"        Background background \u003d new Background(new BackgroundFill(col, corn, Insets.EMPTY));"},{"lineNumber":62,"author":{"gitId":"SiTingST"},"content":"        db.dialog.setBackground(background);"},{"lineNumber":63,"author":{"gitId":"SiTingST"},"content":""},{"lineNumber":64,"author":{"gitId":"SiTingST"},"content":"        db.flip();"},{"lineNumber":65,"author":{"gitId":"SiTingST"},"content":"        return db;"},{"lineNumber":66,"author":{"gitId":"SiTingST"},"content":"    }"},{"lineNumber":67,"author":{"gitId":"SiTingST"},"content":""},{"lineNumber":68,"author":{"gitId":"SiTingST"},"content":"    public static DialogBox getDukeDialog(String text, Image img) {"},{"lineNumber":69,"author":{"gitId":"SiTingST"},"content":"        Color col \u003d Color.rgb(184, 217, 243);"},{"lineNumber":70,"author":{"gitId":"SiTingST"},"content":"        CornerRadii corn \u003d new CornerRadii(10);"},{"lineNumber":71,"author":{"gitId":"SiTingST"},"content":"        Background background \u003d new Background(new BackgroundFill(col, corn, Insets.EMPTY));"},{"lineNumber":72,"author":{"gitId":"SiTingST"},"content":"        DialogBox db \u003d new DialogBox(text, img);"},{"lineNumber":73,"author":{"gitId":"SiTingST"},"content":"        db.dialog.setBackground(background);"},{"lineNumber":74,"author":{"gitId":"SiTingST"},"content":""},{"lineNumber":75,"author":{"gitId":"SiTingST"},"content":"        return db;"},{"lineNumber":76,"author":{"gitId":"SiTingST"},"content":"    }"},{"lineNumber":77,"author":{"gitId":"SiTingST"},"content":"}"}],"authorContributionMap":{"SiTingST":77}},{"path":"src/main/java/duke/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"SiTingST"},"content":"package duke;"},{"lineNumber":2,"author":{"gitId":"SiTingST"},"content":"import java.io.IOException;"},{"lineNumber":3,"author":{"gitId":"SiTingST"},"content":""},{"lineNumber":4,"author":{"gitId":"SiTingST"},"content":"import duke.command.Command;"},{"lineNumber":5,"author":{"gitId":"SiTingST"},"content":"import duke.data.DataStorage;"},{"lineNumber":6,"author":{"gitId":"SiTingST"},"content":"import duke.exception.DukeException;"},{"lineNumber":7,"author":{"gitId":"SiTingST"},"content":"import duke.parser.Parser;"},{"lineNumber":8,"author":{"gitId":"SiTingST"},"content":"import duke.tasklist.TaskList;"},{"lineNumber":9,"author":{"gitId":"SiTingST"},"content":"import duke.ui.UI;"},{"lineNumber":10,"author":{"gitId":"SiTingST"},"content":"import javafx.application.Application;"},{"lineNumber":11,"author":{"gitId":"SiTingST"},"content":"import javafx.scene.Scene;"},{"lineNumber":12,"author":{"gitId":"SiTingST"},"content":"import javafx.scene.control.Label;"},{"lineNumber":13,"author":{"gitId":"SiTingST"},"content":"import javafx.stage.Stage;"},{"lineNumber":14,"author":{"gitId":"SiTingST"},"content":""},{"lineNumber":15,"author":{"gitId":"SiTingST"},"content":"public class Duke extends Application {"},{"lineNumber":16,"author":{"gitId":"SiTingST"},"content":""},{"lineNumber":17,"author":{"gitId":"SiTingST"},"content":"    private static DataStorage storage \u003d new DataStorage();"},{"lineNumber":18,"author":{"gitId":"SiTingST"},"content":"    private static UI ui \u003d new UI();"},{"lineNumber":19,"author":{"gitId":"SiTingST"},"content":"    private static TaskList tasks \u003d new TaskList();"},{"lineNumber":20,"author":{"gitId":"SiTingST"},"content":""},{"lineNumber":21,"author":{"gitId":"SiTingST"},"content":""},{"lineNumber":22,"author":{"gitId":"SiTingST"},"content":"    @Override"},{"lineNumber":23,"author":{"gitId":"SiTingST"},"content":"    public void start(Stage stage) {"},{"lineNumber":24,"author":{"gitId":"SiTingST"},"content":"        Label header \u003d new Label(\"Welcome to EventLab!\"); // Creating a new Label control"},{"lineNumber":25,"author":{"gitId":"SiTingST"},"content":"        Scene scene \u003d new Scene(header); // Setting the scene to be our Label"},{"lineNumber":26,"author":{"gitId":"SiTingST"},"content":"        stage.setScene(scene); // Setting the stage to show our screen"},{"lineNumber":27,"author":{"gitId":"SiTingST"},"content":"        stage.show(); // Render the stage."},{"lineNumber":28,"author":{"gitId":"SiTingST"},"content":"    }"},{"lineNumber":29,"author":{"gitId":"SiTingST"},"content":""},{"lineNumber":30,"author":{"gitId":"SiTingST"},"content":"    /**"},{"lineNumber":31,"author":{"gitId":"SiTingST"},"content":"     * Display welcome message by chat bot"},{"lineNumber":32,"author":{"gitId":"SiTingST"},"content":"     */"},{"lineNumber":33,"author":{"gitId":"SiTingST"},"content":"    public String displayStartMsg() {"},{"lineNumber":34,"author":{"gitId":"SiTingST"},"content":"        return ui.displayWelcomeMessage();"},{"lineNumber":35,"author":{"gitId":"SiTingST"},"content":"    }"},{"lineNumber":36,"author":{"gitId":"SiTingST"},"content":""},{"lineNumber":37,"author":{"gitId":"SiTingST"},"content":"    /**"},{"lineNumber":38,"author":{"gitId":"SiTingST"},"content":"     * Returns duke\u0027s response after processing user input"},{"lineNumber":39,"author":{"gitId":"SiTingST"},"content":"     */"},{"lineNumber":40,"author":{"gitId":"SiTingST"},"content":"    public String getResponse(String input) {"},{"lineNumber":41,"author":{"gitId":"SiTingST"},"content":"        String output \u003d null;"},{"lineNumber":42,"author":{"gitId":"SiTingST"},"content":"        try {"},{"lineNumber":43,"author":{"gitId":"SiTingST"},"content":"            Command command \u003d new Command(\"null\");"},{"lineNumber":44,"author":{"gitId":"SiTingST"},"content":"            command.execute();"},{"lineNumber":45,"author":{"gitId":"SiTingST"},"content":"            output \u003d Parser.parse(input);"},{"lineNumber":46,"author":{"gitId":"SiTingST"},"content":"        } catch (DukeException | IOException e) {"},{"lineNumber":47,"author":{"gitId":"SiTingST"},"content":"            return ui.showError(e.getMessage());"},{"lineNumber":48,"author":{"gitId":"SiTingST"},"content":"        }"},{"lineNumber":49,"author":{"gitId":"SiTingST"},"content":"        return output;"},{"lineNumber":50,"author":{"gitId":"SiTingST"},"content":"    }"},{"lineNumber":51,"author":{"gitId":"SiTingST"},"content":"}"}],"authorContributionMap":{"SiTingST":51}},{"path":"src/main/java/duke/Launcher.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"SiTingST"},"content":"package duke;"},{"lineNumber":2,"author":{"gitId":"SiTingST"},"content":"import javafx.application.Application;"},{"lineNumber":3,"author":{"gitId":"SiTingST"},"content":"/**"},{"lineNumber":4,"author":{"gitId":"SiTingST"},"content":" * A launcher class to workaround classpath issues."},{"lineNumber":5,"author":{"gitId":"SiTingST"},"content":" */"},{"lineNumber":6,"author":{"gitId":"SiTingST"},"content":"class Launcher {"},{"lineNumber":7,"author":{"gitId":"SiTingST"},"content":"    public static void main(String[] args) {"},{"lineNumber":8,"author":{"gitId":"SiTingST"},"content":"        Application.launch(Main.class, args);"},{"lineNumber":9,"author":{"gitId":"SiTingST"},"content":"    }"},{"lineNumber":10,"author":{"gitId":"SiTingST"},"content":"}"}],"authorContributionMap":{"SiTingST":10}},{"path":"src/main/java/duke/Main.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"SiTingST"},"content":"package duke;"},{"lineNumber":2,"author":{"gitId":"SiTingST"},"content":"import java.io.IOException;"},{"lineNumber":3,"author":{"gitId":"SiTingST"},"content":""},{"lineNumber":4,"author":{"gitId":"SiTingST"},"content":"import javafx.application.Application;"},{"lineNumber":5,"author":{"gitId":"SiTingST"},"content":"import javafx.fxml.FXMLLoader;"},{"lineNumber":6,"author":{"gitId":"SiTingST"},"content":"import javafx.scene.Scene;"},{"lineNumber":7,"author":{"gitId":"SiTingST"},"content":"import javafx.scene.layout.AnchorPane;"},{"lineNumber":8,"author":{"gitId":"SiTingST"},"content":"import javafx.stage.Stage;"},{"lineNumber":9,"author":{"gitId":"SiTingST"},"content":"/**"},{"lineNumber":10,"author":{"gitId":"SiTingST"},"content":" * A GUI for Duke using FXML."},{"lineNumber":11,"author":{"gitId":"SiTingST"},"content":" */"},{"lineNumber":12,"author":{"gitId":"SiTingST"},"content":"public class Main extends Application {"},{"lineNumber":13,"author":{"gitId":"SiTingST"},"content":""},{"lineNumber":14,"author":{"gitId":"SiTingST"},"content":"    private Duke duke \u003d new Duke();"},{"lineNumber":15,"author":{"gitId":"SiTingST"},"content":""},{"lineNumber":16,"author":{"gitId":"SiTingST"},"content":"    @Override"},{"lineNumber":17,"author":{"gitId":"SiTingST"},"content":"    public void start(Stage stage) {"},{"lineNumber":18,"author":{"gitId":"SiTingST"},"content":"        try {"},{"lineNumber":19,"author":{"gitId":"SiTingST"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(Main.class.getResource(\"/view/MainWindow.fxml\"));"},{"lineNumber":20,"author":{"gitId":"SiTingST"},"content":"            AnchorPane ap \u003d fxmlLoader.load();"},{"lineNumber":21,"author":{"gitId":"SiTingST"},"content":"            Scene scene \u003d new Scene(ap);"},{"lineNumber":22,"author":{"gitId":"SiTingST"},"content":"            stage.setScene(scene);"},{"lineNumber":23,"author":{"gitId":"SiTingST"},"content":"            stage.setTitle(\"Task Organizer Application\");"},{"lineNumber":24,"author":{"gitId":"SiTingST"},"content":"            fxmlLoader.\u003cMainWindow\u003egetController().setDuke(duke);"},{"lineNumber":25,"author":{"gitId":"SiTingST"},"content":"            stage.show();"},{"lineNumber":26,"author":{"gitId":"SiTingST"},"content":"        } catch (IOException e) {"},{"lineNumber":27,"author":{"gitId":"SiTingST"},"content":"            e.printStackTrace();"},{"lineNumber":28,"author":{"gitId":"SiTingST"},"content":"        }"},{"lineNumber":29,"author":{"gitId":"SiTingST"},"content":"    }"},{"lineNumber":30,"author":{"gitId":"SiTingST"},"content":"}"}],"authorContributionMap":{"SiTingST":30}},{"path":"src/main/java/duke/MainWindow.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"SiTingST"},"content":"package duke;"},{"lineNumber":2,"author":{"gitId":"SiTingST"},"content":""},{"lineNumber":3,"author":{"gitId":"SiTingST"},"content":"import javafx.animation.PauseTransition;"},{"lineNumber":4,"author":{"gitId":"SiTingST"},"content":"import javafx.application.Platform;"},{"lineNumber":5,"author":{"gitId":"SiTingST"},"content":"import javafx.fxml.FXML;"},{"lineNumber":6,"author":{"gitId":"SiTingST"},"content":"import javafx.scene.control.Button;"},{"lineNumber":7,"author":{"gitId":"SiTingST"},"content":"import javafx.scene.control.ScrollPane;"},{"lineNumber":8,"author":{"gitId":"SiTingST"},"content":"import javafx.scene.control.TextField;"},{"lineNumber":9,"author":{"gitId":"SiTingST"},"content":"import javafx.scene.image.Image;"},{"lineNumber":10,"author":{"gitId":"SiTingST"},"content":"import javafx.scene.layout.AnchorPane;"},{"lineNumber":11,"author":{"gitId":"SiTingST"},"content":"import javafx.scene.layout.VBox;"},{"lineNumber":12,"author":{"gitId":"SiTingST"},"content":"import javafx.util.Duration;"},{"lineNumber":13,"author":{"gitId":"SiTingST"},"content":""},{"lineNumber":14,"author":{"gitId":"SiTingST"},"content":"/**"},{"lineNumber":15,"author":{"gitId":"SiTingST"},"content":" * Controller for MainWindow. Provides the layout for the other controls."},{"lineNumber":16,"author":{"gitId":"SiTingST"},"content":" */"},{"lineNumber":17,"author":{"gitId":"SiTingST"},"content":"public class MainWindow\u003cexitApplicationMessage\u003e extends AnchorPane {"},{"lineNumber":18,"author":{"gitId":"SiTingST"},"content":"    @FXML"},{"lineNumber":19,"author":{"gitId":"SiTingST"},"content":"    private ScrollPane scrollPane;"},{"lineNumber":20,"author":{"gitId":"SiTingST"},"content":"    @FXML"},{"lineNumber":21,"author":{"gitId":"SiTingST"},"content":"    private VBox dialogContainer;"},{"lineNumber":22,"author":{"gitId":"SiTingST"},"content":"    @FXML"},{"lineNumber":23,"author":{"gitId":"SiTingST"},"content":"    private TextField userInput;"},{"lineNumber":24,"author":{"gitId":"SiTingST"},"content":"    @FXML"},{"lineNumber":25,"author":{"gitId":"SiTingST"},"content":"    private Button sendButton;"},{"lineNumber":26,"author":{"gitId":"SiTingST"},"content":""},{"lineNumber":27,"author":{"gitId":"SiTingST"},"content":"    private Duke duke;"},{"lineNumber":28,"author":{"gitId":"SiTingST"},"content":""},{"lineNumber":29,"author":{"gitId":"SiTingST"},"content":"    private Image userImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/will.png\"));"},{"lineNumber":30,"author":{"gitId":"SiTingST"},"content":"    private Image dukeImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/bear.png\"));"},{"lineNumber":31,"author":{"gitId":"SiTingST"},"content":""},{"lineNumber":32,"author":{"gitId":"SiTingST"},"content":"    private final String exitMessage \u003d \"Bye\";"},{"lineNumber":33,"author":{"gitId":"SiTingST"},"content":"    /**"},{"lineNumber":34,"author":{"gitId":"SiTingST"},"content":"     * Method that gets invoked when the program run"},{"lineNumber":35,"author":{"gitId":"SiTingST"},"content":"     */"},{"lineNumber":36,"author":{"gitId":"SiTingST"},"content":"    @FXML"},{"lineNumber":37,"author":{"gitId":"SiTingST"},"content":"    public void initialize() {"},{"lineNumber":38,"author":{"gitId":"SiTingST"},"content":"        setDuke(new Duke());"},{"lineNumber":39,"author":{"gitId":"SiTingST"},"content":""},{"lineNumber":40,"author":{"gitId":"SiTingST"},"content":"        scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());"},{"lineNumber":41,"author":{"gitId":"SiTingST"},"content":"        dialogContainer.getChildren().addAll("},{"lineNumber":42,"author":{"gitId":"SiTingST"},"content":"                DialogBox.getUserDialog(duke.displayStartMsg(), userImage)"},{"lineNumber":43,"author":{"gitId":"SiTingST"},"content":"        );"},{"lineNumber":44,"author":{"gitId":"SiTingST"},"content":"    }"},{"lineNumber":45,"author":{"gitId":"SiTingST"},"content":""},{"lineNumber":46,"author":{"gitId":"SiTingST"},"content":"    public void setDuke(Duke d) {"},{"lineNumber":47,"author":{"gitId":"SiTingST"},"content":"        duke \u003d d;"},{"lineNumber":48,"author":{"gitId":"SiTingST"},"content":"    }"},{"lineNumber":49,"author":{"gitId":"SiTingST"},"content":""},{"lineNumber":50,"author":{"gitId":"SiTingST"},"content":"    /**"},{"lineNumber":51,"author":{"gitId":"SiTingST"},"content":"     * Creates two dialog boxes, one echoing user input and the other containing Duke\u0027s reply and then appends them to"},{"lineNumber":52,"author":{"gitId":"SiTingST"},"content":"     * the dialog container. Clears the user input after processing."},{"lineNumber":53,"author":{"gitId":"SiTingST"},"content":"     */"},{"lineNumber":54,"author":{"gitId":"SiTingST"},"content":"    @FXML"},{"lineNumber":55,"author":{"gitId":"SiTingST"},"content":"    private void handleUserInput() {"},{"lineNumber":56,"author":{"gitId":"SiTingST"},"content":"        String input \u003d userInput.getText();"},{"lineNumber":57,"author":{"gitId":"SiTingST"},"content":"        String response \u003d duke.getResponse(input);"},{"lineNumber":58,"author":{"gitId":"SiTingST"},"content":"        dialogContainer.getChildren().addAll(DialogBox.getDukeDialog(input, dukeImage),"},{"lineNumber":59,"author":{"gitId":"SiTingST"},"content":"                DialogBox.getUserDialog(response, userImage));"},{"lineNumber":60,"author":{"gitId":"SiTingST"},"content":"        userInput.clear();"},{"lineNumber":61,"author":{"gitId":"SiTingST"},"content":""},{"lineNumber":62,"author":{"gitId":"SiTingST"},"content":"        if (response.substring(0, 3).equals(exitMessage)) {"},{"lineNumber":63,"author":{"gitId":"SiTingST"},"content":"            PauseTransition delay \u003d new PauseTransition(Duration.seconds(1));"},{"lineNumber":64,"author":{"gitId":"SiTingST"},"content":"            delay.setOnFinished(event -\u003e Platform.exit());"},{"lineNumber":65,"author":{"gitId":"SiTingST"},"content":"            delay.play();"},{"lineNumber":66,"author":{"gitId":"SiTingST"},"content":""},{"lineNumber":67,"author":{"gitId":"SiTingST"},"content":"        }"},{"lineNumber":68,"author":{"gitId":"SiTingST"},"content":"    }"},{"lineNumber":69,"author":{"gitId":"SiTingST"},"content":"}"}],"authorContributionMap":{"SiTingST":69}},{"path":"src/main/java/duke/command/AddCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"SiTingST"},"content":"package duke.command;"},{"lineNumber":2,"author":{"gitId":"SiTingST"},"content":""},{"lineNumber":3,"author":{"gitId":"SiTingST"},"content":"import java.time.LocalDate;"},{"lineNumber":4,"author":{"gitId":"SiTingST"},"content":"import java.time.LocalTime;"},{"lineNumber":5,"author":{"gitId":"SiTingST"},"content":""},{"lineNumber":6,"author":{"gitId":"SiTingST"},"content":"import duke.data.DataStorage;"},{"lineNumber":7,"author":{"gitId":"SiTingST"},"content":"import duke.exception.DukeException;"},{"lineNumber":8,"author":{"gitId":"SiTingST"},"content":""},{"lineNumber":9,"author":{"gitId":"SiTingST"},"content":"/**"},{"lineNumber":10,"author":{"gitId":"SiTingST"},"content":" * Create add command class"},{"lineNumber":11,"author":{"gitId":"SiTingST"},"content":" */"},{"lineNumber":12,"author":{"gitId":"SiTingST"},"content":""},{"lineNumber":13,"author":{"gitId":"SiTingST"},"content":"public class AddCommand extends Command {"},{"lineNumber":14,"author":{"gitId":"SiTingST"},"content":""},{"lineNumber":15,"author":{"gitId":"SiTingST"},"content":"    private String type;"},{"lineNumber":16,"author":{"gitId":"SiTingST"},"content":"    private LocalDate dueDate;"},{"lineNumber":17,"author":{"gitId":"SiTingST"},"content":"    private LocalTime startTime;"},{"lineNumber":18,"author":{"gitId":"SiTingST"},"content":"    private LocalTime endTime;"},{"lineNumber":19,"author":{"gitId":"SiTingST"},"content":""},{"lineNumber":20,"author":{"gitId":"SiTingST"},"content":"    /**"},{"lineNumber":21,"author":{"gitId":"SiTingST"},"content":"     * Create an add command"},{"lineNumber":22,"author":{"gitId":"SiTingST"},"content":"     */"},{"lineNumber":23,"author":{"gitId":"SiTingST"},"content":"    public AddCommand(String input, String type, LocalDate date, LocalTime startTime, LocalTime endTime) {"},{"lineNumber":24,"author":{"gitId":"SiTingST"},"content":"        super(input);"},{"lineNumber":25,"author":{"gitId":"SiTingST"},"content":"        this.type \u003d type;"},{"lineNumber":26,"author":{"gitId":"SiTingST"},"content":"        this.dueDate \u003d date;"},{"lineNumber":27,"author":{"gitId":"SiTingST"},"content":"        this.startTime \u003d startTime;"},{"lineNumber":28,"author":{"gitId":"SiTingST"},"content":"        this.endTime \u003d endTime;"},{"lineNumber":29,"author":{"gitId":"SiTingST"},"content":"    }"},{"lineNumber":30,"author":{"gitId":"SiTingST"},"content":""},{"lineNumber":31,"author":{"gitId":"SiTingST"},"content":"    /**"},{"lineNumber":32,"author":{"gitId":"SiTingST"},"content":"     * Adds a task into the task list"},{"lineNumber":33,"author":{"gitId":"SiTingST"},"content":"     * @return TaskList"},{"lineNumber":34,"author":{"gitId":"SiTingST"},"content":"     * @throws DukeException"},{"lineNumber":35,"author":{"gitId":"SiTingST"},"content":"     */"},{"lineNumber":36,"author":{"gitId":"SiTingST"},"content":"    public String execute() throws DukeException {"},{"lineNumber":37,"author":{"gitId":"SiTingST"},"content":"        boolean executedUnsuccessfully \u003d false;"},{"lineNumber":38,"author":{"gitId":"SiTingST"},"content":"        switch (type) {"},{"lineNumber":39,"author":{"gitId":"SiTingST"},"content":"        case (\"todo\"):"},{"lineNumber":40,"author":{"gitId":"SiTingST"},"content":"            executedUnsuccessfully \u003d tasklist.addToDo(input);"},{"lineNumber":41,"author":{"gitId":"SiTingST"},"content":"            break;"},{"lineNumber":42,"author":{"gitId":"SiTingST"},"content":"        case (\"deadline\"):"},{"lineNumber":43,"author":{"gitId":"SiTingST"},"content":"            executedUnsuccessfully \u003d tasklist.addDeadline(this.input, dueDate, startTime);"},{"lineNumber":44,"author":{"gitId":"SiTingST"},"content":"            break;"},{"lineNumber":45,"author":{"gitId":"SiTingST"},"content":"        case (\"event\"):"},{"lineNumber":46,"author":{"gitId":"SiTingST"},"content":"            executedUnsuccessfully \u003d tasklist.addEvent(this.input, dueDate, startTime, endTime);"},{"lineNumber":47,"author":{"gitId":"SiTingST"},"content":"            break;"},{"lineNumber":48,"author":{"gitId":"SiTingST"},"content":"        default:"},{"lineNumber":49,"author":{"gitId":"SiTingST"},"content":"            break;"},{"lineNumber":50,"author":{"gitId":"SiTingST"},"content":"        }"},{"lineNumber":51,"author":{"gitId":"SiTingST"},"content":""},{"lineNumber":52,"author":{"gitId":"SiTingST"},"content":"        int currentSize \u003d tasklist.getTaskListArray().size() - 1;"},{"lineNumber":53,"author":{"gitId":"SiTingST"},"content":"        DataStorage.save(tasklist.getTaskListArray());"},{"lineNumber":54,"author":{"gitId":"SiTingST"},"content":""},{"lineNumber":55,"author":{"gitId":"SiTingST"},"content":"        if (executedUnsuccessfully) {"},{"lineNumber":56,"author":{"gitId":"SiTingST"},"content":"            return ui.displayDuplicatedMessage();"},{"lineNumber":57,"author":{"gitId":"SiTingST"},"content":"        } else {"},{"lineNumber":58,"author":{"gitId":"SiTingST"},"content":"            return ui.displayAddedTaskMessage(tasklist.getTask(currentSize), currentSize + 1);"},{"lineNumber":59,"author":{"gitId":"SiTingST"},"content":"        }"},{"lineNumber":60,"author":{"gitId":"SiTingST"},"content":""},{"lineNumber":61,"author":{"gitId":"SiTingST"},"content":"    }"},{"lineNumber":62,"author":{"gitId":"SiTingST"},"content":"}"}],"authorContributionMap":{"SiTingST":62}},{"path":"src/main/java/duke/command/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"SiTingST"},"content":"package duke.command;"},{"lineNumber":2,"author":{"gitId":"SiTingST"},"content":""},{"lineNumber":3,"author":{"gitId":"SiTingST"},"content":"import java.io.IOException;"},{"lineNumber":4,"author":{"gitId":"SiTingST"},"content":""},{"lineNumber":5,"author":{"gitId":"SiTingST"},"content":"import duke.data.DataStorage;"},{"lineNumber":6,"author":{"gitId":"SiTingST"},"content":"import duke.exception.DukeException;"},{"lineNumber":7,"author":{"gitId":"SiTingST"},"content":"import duke.tasklist.TaskList;"},{"lineNumber":8,"author":{"gitId":"SiTingST"},"content":"import duke.ui.UI;"},{"lineNumber":9,"author":{"gitId":"SiTingST"},"content":""},{"lineNumber":10,"author":{"gitId":"SiTingST"},"content":"/**"},{"lineNumber":11,"author":{"gitId":"SiTingST"},"content":" * Command class that interacts with TaskList class to add, show, delete"},{"lineNumber":12,"author":{"gitId":"SiTingST"},"content":" *  find task and marking task as completed"},{"lineNumber":13,"author":{"gitId":"SiTingST"},"content":" */"},{"lineNumber":14,"author":{"gitId":"SiTingST"},"content":"public class Command {"},{"lineNumber":15,"author":{"gitId":"SiTingST"},"content":""},{"lineNumber":16,"author":{"gitId":"SiTingST"},"content":"    protected static String input;"},{"lineNumber":17,"author":{"gitId":"SiTingST"},"content":"    protected static TaskList tasklist \u003d new TaskList();"},{"lineNumber":18,"author":{"gitId":"SiTingST"},"content":"    protected static DataStorage storage;"},{"lineNumber":19,"author":{"gitId":"SiTingST"},"content":"    protected static UI ui \u003d new UI();"},{"lineNumber":20,"author":{"gitId":"SiTingST"},"content":""},{"lineNumber":21,"author":{"gitId":"SiTingST"},"content":"    /**"},{"lineNumber":22,"author":{"gitId":"SiTingST"},"content":"     * Createa  command object"},{"lineNumber":23,"author":{"gitId":"SiTingST"},"content":"     */"},{"lineNumber":24,"author":{"gitId":"SiTingST"},"content":"    public Command (String input) {"},{"lineNumber":25,"author":{"gitId":"SiTingST"},"content":"        this.input \u003d input;"},{"lineNumber":26,"author":{"gitId":"SiTingST"},"content":"    }"},{"lineNumber":27,"author":{"gitId":"SiTingST"},"content":""},{"lineNumber":28,"author":{"gitId":"SiTingST"},"content":"    /**"},{"lineNumber":29,"author":{"gitId":"SiTingST"},"content":"     * Retrieve past data from the data file and allow modification from other commands classes"},{"lineNumber":30,"author":{"gitId":"SiTingST"},"content":"     * @return null"},{"lineNumber":31,"author":{"gitId":"SiTingST"},"content":"     * @throws DukeException"},{"lineNumber":32,"author":{"gitId":"SiTingST"},"content":"     */"},{"lineNumber":33,"author":{"gitId":"SiTingST"},"content":"    public String execute() throws DukeException, IOException {"},{"lineNumber":34,"author":{"gitId":"SiTingST"},"content":"        tasklist.setTaskList(storage.loadFile());"},{"lineNumber":35,"author":{"gitId":"SiTingST"},"content":"        return null;"},{"lineNumber":36,"author":{"gitId":"SiTingST"},"content":"    }"},{"lineNumber":37,"author":{"gitId":"SiTingST"},"content":""},{"lineNumber":38,"author":{"gitId":"SiTingST"},"content":"}"}],"authorContributionMap":{"SiTingST":38}},{"path":"src/main/java/duke/command/DeleteCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"SiTingST"},"content":"package duke.command;"},{"lineNumber":2,"author":{"gitId":"SiTingST"},"content":""},{"lineNumber":3,"author":{"gitId":"SiTingST"},"content":"import duke.exception.DukeException;"},{"lineNumber":4,"author":{"gitId":"SiTingST"},"content":""},{"lineNumber":5,"author":{"gitId":"SiTingST"},"content":"/**"},{"lineNumber":6,"author":{"gitId":"SiTingST"},"content":" * Command class to delete task"},{"lineNumber":7,"author":{"gitId":"SiTingST"},"content":" */"},{"lineNumber":8,"author":{"gitId":"SiTingST"},"content":"public class DeleteCommand extends Command {"},{"lineNumber":9,"author":{"gitId":"SiTingST"},"content":""},{"lineNumber":10,"author":{"gitId":"SiTingST"},"content":"    /**"},{"lineNumber":11,"author":{"gitId":"SiTingST"},"content":"     * Create a delete command"},{"lineNumber":12,"author":{"gitId":"SiTingST"},"content":"     */"},{"lineNumber":13,"author":{"gitId":"SiTingST"},"content":"    public DeleteCommand(String input) {"},{"lineNumber":14,"author":{"gitId":"SiTingST"},"content":"        super(input);"},{"lineNumber":15,"author":{"gitId":"SiTingST"},"content":"    }"},{"lineNumber":16,"author":{"gitId":"SiTingST"},"content":""},{"lineNumber":17,"author":{"gitId":"SiTingST"},"content":"    /**"},{"lineNumber":18,"author":{"gitId":"SiTingST"},"content":"     *  Delete a specific task and store the new changes into the data file"},{"lineNumber":19,"author":{"gitId":"SiTingST"},"content":"     * @return String message upon successful execution of the command"},{"lineNumber":20,"author":{"gitId":"SiTingST"},"content":"     * @throws DukeException"},{"lineNumber":21,"author":{"gitId":"SiTingST"},"content":"     */"},{"lineNumber":22,"author":{"gitId":"SiTingST"},"content":"    @Override"},{"lineNumber":23,"author":{"gitId":"SiTingST"},"content":"    public String execute() throws DukeException {"},{"lineNumber":24,"author":{"gitId":"SiTingST"},"content":""},{"lineNumber":25,"author":{"gitId":"SiTingST"},"content":"        String output \u003d this.tasklist.deleteTask(Integer.parseInt(input) - 1);"},{"lineNumber":26,"author":{"gitId":"SiTingST"},"content":"        storage.save(this.tasklist.getTaskListArray());"},{"lineNumber":27,"author":{"gitId":"SiTingST"},"content":"        return output;"},{"lineNumber":28,"author":{"gitId":"SiTingST"},"content":"    }"},{"lineNumber":29,"author":{"gitId":"SiTingST"},"content":"}"}],"authorContributionMap":{"SiTingST":29}},{"path":"src/main/java/duke/command/DoneCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"SiTingST"},"content":"package duke.command;"},{"lineNumber":2,"author":{"gitId":"SiTingST"},"content":""},{"lineNumber":3,"author":{"gitId":"SiTingST"},"content":"import duke.exception.DukeException;"},{"lineNumber":4,"author":{"gitId":"SiTingST"},"content":""},{"lineNumber":5,"author":{"gitId":"SiTingST"},"content":"/**"},{"lineNumber":6,"author":{"gitId":"SiTingST"},"content":" * Command class to mark task as complete"},{"lineNumber":7,"author":{"gitId":"SiTingST"},"content":" */"},{"lineNumber":8,"author":{"gitId":"SiTingST"},"content":"public class DoneCommand extends Command {"},{"lineNumber":9,"author":{"gitId":"SiTingST"},"content":""},{"lineNumber":10,"author":{"gitId":"SiTingST"},"content":"    /**"},{"lineNumber":11,"author":{"gitId":"SiTingST"},"content":"     * Create a done command"},{"lineNumber":12,"author":{"gitId":"SiTingST"},"content":"     */"},{"lineNumber":13,"author":{"gitId":"SiTingST"},"content":"    public DoneCommand(String input) {"},{"lineNumber":14,"author":{"gitId":"SiTingST"},"content":"        super(input);"},{"lineNumber":15,"author":{"gitId":"SiTingST"},"content":"    }"},{"lineNumber":16,"author":{"gitId":"SiTingST"},"content":""},{"lineNumber":17,"author":{"gitId":"SiTingST"},"content":"    /**"},{"lineNumber":18,"author":{"gitId":"SiTingST"},"content":"     * Set task status of a specific task to complete and store the new changes to the data file"},{"lineNumber":19,"author":{"gitId":"SiTingST"},"content":"     * @return String message upon successful execution of the command"},{"lineNumber":20,"author":{"gitId":"SiTingST"},"content":"     */"},{"lineNumber":21,"author":{"gitId":"SiTingST"},"content":"    @Override"},{"lineNumber":22,"author":{"gitId":"SiTingST"},"content":"    public String execute() throws DukeException {"},{"lineNumber":23,"author":{"gitId":"SiTingST"},"content":""},{"lineNumber":24,"author":{"gitId":"SiTingST"},"content":"        String output \u003d tasklist.markAsDone(Integer.parseInt(input) - 1);"},{"lineNumber":25,"author":{"gitId":"SiTingST"},"content":"        storage.save(tasklist.getTaskListArray());"},{"lineNumber":26,"author":{"gitId":"SiTingST"},"content":"        return output;"},{"lineNumber":27,"author":{"gitId":"SiTingST"},"content":"    }"},{"lineNumber":28,"author":{"gitId":"SiTingST"},"content":"}"}],"authorContributionMap":{"SiTingST":28}},{"path":"src/main/java/duke/command/ExitCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"SiTingST"},"content":"package duke.command;"},{"lineNumber":2,"author":{"gitId":"SiTingST"},"content":""},{"lineNumber":3,"author":{"gitId":"SiTingST"},"content":"import duke.ui.UI;"},{"lineNumber":4,"author":{"gitId":"SiTingST"},"content":""},{"lineNumber":5,"author":{"gitId":"SiTingST"},"content":"/**"},{"lineNumber":6,"author":{"gitId":"SiTingST"},"content":" * Command class to exit the program"},{"lineNumber":7,"author":{"gitId":"SiTingST"},"content":" */"},{"lineNumber":8,"author":{"gitId":"SiTingST"},"content":"public class ExitCommand extends Command {"},{"lineNumber":9,"author":{"gitId":"SiTingST"},"content":""},{"lineNumber":10,"author":{"gitId":"SiTingST"},"content":"    /**"},{"lineNumber":11,"author":{"gitId":"SiTingST"},"content":"     * Create an exit command"},{"lineNumber":12,"author":{"gitId":"SiTingST"},"content":"     */"},{"lineNumber":13,"author":{"gitId":"SiTingST"},"content":"    public ExitCommand() {"},{"lineNumber":14,"author":{"gitId":"SiTingST"},"content":"        super(\"exit\");"},{"lineNumber":15,"author":{"gitId":"SiTingST"},"content":"    }"},{"lineNumber":16,"author":{"gitId":"SiTingST"},"content":""},{"lineNumber":17,"author":{"gitId":"SiTingST"},"content":"    /**"},{"lineNumber":18,"author":{"gitId":"SiTingST"},"content":"     * Display closing message to the user"},{"lineNumber":19,"author":{"gitId":"SiTingST"},"content":"     */"},{"lineNumber":20,"author":{"gitId":"SiTingST"},"content":"    @Override"},{"lineNumber":21,"author":{"gitId":"SiTingST"},"content":"    public String execute() {"},{"lineNumber":22,"author":{"gitId":"SiTingST"},"content":"        return UI.displayEndMessage();"},{"lineNumber":23,"author":{"gitId":"SiTingST"},"content":"    }"},{"lineNumber":24,"author":{"gitId":"SiTingST"},"content":"}"}],"authorContributionMap":{"SiTingST":24}},{"path":"src/main/java/duke/command/ListCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"SiTingST"},"content":"package duke.command;"},{"lineNumber":2,"author":{"gitId":"SiTingST"},"content":"import java.io.IOException;"},{"lineNumber":3,"author":{"gitId":"SiTingST"},"content":""},{"lineNumber":4,"author":{"gitId":"SiTingST"},"content":"import duke.exception.DukeException;"},{"lineNumber":5,"author":{"gitId":"SiTingST"},"content":""},{"lineNumber":6,"author":{"gitId":"SiTingST"},"content":"/**"},{"lineNumber":7,"author":{"gitId":"SiTingST"},"content":" * Command class to list task in the task list"},{"lineNumber":8,"author":{"gitId":"SiTingST"},"content":" */"},{"lineNumber":9,"author":{"gitId":"SiTingST"},"content":"public class ListCommand extends Command {"},{"lineNumber":10,"author":{"gitId":"SiTingST"},"content":""},{"lineNumber":11,"author":{"gitId":"SiTingST"},"content":"    /**"},{"lineNumber":12,"author":{"gitId":"SiTingST"},"content":"     * Create a list command"},{"lineNumber":13,"author":{"gitId":"SiTingST"},"content":"     */"},{"lineNumber":14,"author":{"gitId":"SiTingST"},"content":"    public ListCommand(String input) {"},{"lineNumber":15,"author":{"gitId":"SiTingST"},"content":"        super(input);"},{"lineNumber":16,"author":{"gitId":"SiTingST"},"content":"    }"},{"lineNumber":17,"author":{"gitId":"SiTingST"},"content":""},{"lineNumber":18,"author":{"gitId":"SiTingST"},"content":"    /**"},{"lineNumber":19,"author":{"gitId":"SiTingST"},"content":"     * Display all tasks found in the task list"},{"lineNumber":20,"author":{"gitId":"SiTingST"},"content":"     * @return String message upon successful execution of the command"},{"lineNumber":21,"author":{"gitId":"SiTingST"},"content":"     */"},{"lineNumber":22,"author":{"gitId":"SiTingST"},"content":"    @Override"},{"lineNumber":23,"author":{"gitId":"SiTingST"},"content":"    public String execute() throws DukeException, IOException {"},{"lineNumber":24,"author":{"gitId":"SiTingST"},"content":""},{"lineNumber":25,"author":{"gitId":"SiTingST"},"content":"        tasklist.setTaskList(storage.loadFile());"},{"lineNumber":26,"author":{"gitId":"SiTingST"},"content":"        String allTaskMessage \u003d tasklist.showAllTask(\"list\");"},{"lineNumber":27,"author":{"gitId":"SiTingST"},"content":""},{"lineNumber":28,"author":{"gitId":"SiTingST"},"content":"        if (allTaskMessage.trim().isBlank()) {"},{"lineNumber":29,"author":{"gitId":"SiTingST"},"content":"            return ui.displayNoTaskInList();"},{"lineNumber":30,"author":{"gitId":"SiTingST"},"content":"        } else {"},{"lineNumber":31,"author":{"gitId":"SiTingST"},"content":"            return allTaskMessage;"},{"lineNumber":32,"author":{"gitId":"SiTingST"},"content":"        }"},{"lineNumber":33,"author":{"gitId":"SiTingST"},"content":"    }"},{"lineNumber":34,"author":{"gitId":"SiTingST"},"content":""},{"lineNumber":35,"author":{"gitId":"SiTingST"},"content":"}"}],"authorContributionMap":{"SiTingST":35}},{"path":"src/main/java/duke/command/SearchCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"SiTingST"},"content":"package duke.command;"},{"lineNumber":2,"author":{"gitId":"SiTingST"},"content":""},{"lineNumber":3,"author":{"gitId":"SiTingST"},"content":"import duke.exception.DukeException;"},{"lineNumber":4,"author":{"gitId":"SiTingST"},"content":""},{"lineNumber":5,"author":{"gitId":"SiTingST"},"content":"/**"},{"lineNumber":6,"author":{"gitId":"SiTingST"},"content":" * Command class to search for task"},{"lineNumber":7,"author":{"gitId":"SiTingST"},"content":" */"},{"lineNumber":8,"author":{"gitId":"SiTingST"},"content":""},{"lineNumber":9,"author":{"gitId":"SiTingST"},"content":"public class SearchCommand extends Command {"},{"lineNumber":10,"author":{"gitId":"SiTingST"},"content":""},{"lineNumber":11,"author":{"gitId":"SiTingST"},"content":"    /**"},{"lineNumber":12,"author":{"gitId":"SiTingST"},"content":"     * Create a search command"},{"lineNumber":13,"author":{"gitId":"SiTingST"},"content":"     */"},{"lineNumber":14,"author":{"gitId":"SiTingST"},"content":"    public SearchCommand(String input) {"},{"lineNumber":15,"author":{"gitId":"SiTingST"},"content":"        super(input.trim());"},{"lineNumber":16,"author":{"gitId":"SiTingST"},"content":"    }"},{"lineNumber":17,"author":{"gitId":"SiTingST"},"content":""},{"lineNumber":18,"author":{"gitId":"SiTingST"},"content":"    /**"},{"lineNumber":19,"author":{"gitId":"SiTingST"},"content":"     * Display the task in the task list which matches or contains the given keyword"},{"lineNumber":20,"author":{"gitId":"SiTingST"},"content":"     * @return String message upon successful execution of the command"},{"lineNumber":21,"author":{"gitId":"SiTingST"},"content":"     */"},{"lineNumber":22,"author":{"gitId":"SiTingST"},"content":"    @Override"},{"lineNumber":23,"author":{"gitId":"SiTingST"},"content":"    public String execute() throws DukeException {"},{"lineNumber":24,"author":{"gitId":"SiTingST"},"content":"        return tasklist.findTask(input, this.tasklist);"},{"lineNumber":25,"author":{"gitId":"SiTingST"},"content":"    }"},{"lineNumber":26,"author":{"gitId":"SiTingST"},"content":"}"}],"authorContributionMap":{"SiTingST":26}},{"path":"src/main/java/duke/data/DataStorage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"SiTingST"},"content":"package duke.data;"},{"lineNumber":2,"author":{"gitId":"SiTingST"},"content":""},{"lineNumber":3,"author":{"gitId":"SiTingST"},"content":"import java.io.File;"},{"lineNumber":4,"author":{"gitId":"SiTingST"},"content":"import java.io.FileNotFoundException;"},{"lineNumber":5,"author":{"gitId":"SiTingST"},"content":"import java.io.FileWriter;"},{"lineNumber":6,"author":{"gitId":"SiTingST"},"content":"import java.io.IOException;"},{"lineNumber":7,"author":{"gitId":"SiTingST"},"content":"import java.util.ArrayList;"},{"lineNumber":8,"author":{"gitId":"SiTingST"},"content":"import java.util.Scanner;"},{"lineNumber":9,"author":{"gitId":"SiTingST"},"content":""},{"lineNumber":10,"author":{"gitId":"SiTingST"},"content":"import duke.exception.DukeException;"},{"lineNumber":11,"author":{"gitId":"SiTingST"},"content":"import duke.task.Task;"},{"lineNumber":12,"author":{"gitId":"SiTingST"},"content":""},{"lineNumber":13,"author":{"gitId":"SiTingST"},"content":"public class DataStorage {"},{"lineNumber":14,"author":{"gitId":"SiTingST"},"content":"    private static final String FILE_PATH \u003d \"data/listOfTask.txt\";"},{"lineNumber":15,"author":{"gitId":"SiTingST"},"content":""},{"lineNumber":16,"author":{"gitId":"SiTingST"},"content":"    /**"},{"lineNumber":17,"author":{"gitId":"SiTingST"},"content":"     *  Retrieve the data file if it is present. If not, a new data file will be created"},{"lineNumber":18,"author":{"gitId":"SiTingST"},"content":"     * @return file"},{"lineNumber":19,"author":{"gitId":"SiTingST"},"content":"     * @throws DukeException"},{"lineNumber":20,"author":{"gitId":"SiTingST"},"content":"     */"},{"lineNumber":21,"author":{"gitId":"SiTingST"},"content":"    public static File getFile() throws DukeException {"},{"lineNumber":22,"author":{"gitId":"SiTingST"},"content":""},{"lineNumber":23,"author":{"gitId":"SiTingST"},"content":"        File file \u003d new File(FILE_PATH);"},{"lineNumber":24,"author":{"gitId":"SiTingST"},"content":"        file.getParentFile().mkdirs();"},{"lineNumber":25,"author":{"gitId":"SiTingST"},"content":""},{"lineNumber":26,"author":{"gitId":"SiTingST"},"content":"        if (!file.exists()) {"},{"lineNumber":27,"author":{"gitId":"SiTingST"},"content":"            try {"},{"lineNumber":28,"author":{"gitId":"SiTingST"},"content":"                file.createNewFile();"},{"lineNumber":29,"author":{"gitId":"SiTingST"},"content":"            } catch (Exception e) {"},{"lineNumber":30,"author":{"gitId":"SiTingST"},"content":"                throw new DukeException(\"Error creating file\");"},{"lineNumber":31,"author":{"gitId":"SiTingST"},"content":"            }"},{"lineNumber":32,"author":{"gitId":"SiTingST"},"content":"        }"},{"lineNumber":33,"author":{"gitId":"SiTingST"},"content":"        return file;"},{"lineNumber":34,"author":{"gitId":"SiTingST"},"content":"    }"},{"lineNumber":35,"author":{"gitId":"SiTingST"},"content":""},{"lineNumber":36,"author":{"gitId":"SiTingST"},"content":"    /**"},{"lineNumber":37,"author":{"gitId":"SiTingST"},"content":"     * Save all tasks in the task list into data file"},{"lineNumber":38,"author":{"gitId":"SiTingST"},"content":"     * @param taskArrayList task list"},{"lineNumber":39,"author":{"gitId":"SiTingST"},"content":"     * @throws DukeException"},{"lineNumber":40,"author":{"gitId":"SiTingST"},"content":"     */"},{"lineNumber":41,"author":{"gitId":"SiTingST"},"content":"    public static void save(ArrayList\u003cTask\u003e taskArrayList) throws DukeException {"},{"lineNumber":42,"author":{"gitId":"SiTingST"},"content":"        try {"},{"lineNumber":43,"author":{"gitId":"SiTingST"},"content":"            File file \u003d getFile();"},{"lineNumber":44,"author":{"gitId":"SiTingST"},"content":"            FileWriter writer \u003d new FileWriter(file);"},{"lineNumber":45,"author":{"gitId":"SiTingST"},"content":"            for (int i \u003d 0; i \u003c taskArrayList.size(); i++) {"},{"lineNumber":46,"author":{"gitId":"SiTingST"},"content":"                writer.write(taskArrayList.get(i).changeFormat() + \u0027\\n\u0027);"},{"lineNumber":47,"author":{"gitId":"SiTingST"},"content":"                writer.flush();"},{"lineNumber":48,"author":{"gitId":"SiTingST"},"content":"            }"},{"lineNumber":49,"author":{"gitId":"SiTingST"},"content":"            writer.close();"},{"lineNumber":50,"author":{"gitId":"SiTingST"},"content":"        } catch (Exception e) {"},{"lineNumber":51,"author":{"gitId":"SiTingST"},"content":"            throw new DukeException(\"error writing into file\");"},{"lineNumber":52,"author":{"gitId":"SiTingST"},"content":"        }"},{"lineNumber":53,"author":{"gitId":"SiTingST"},"content":"    }"},{"lineNumber":54,"author":{"gitId":"SiTingST"},"content":""},{"lineNumber":55,"author":{"gitId":"SiTingST"},"content":"    /**"},{"lineNumber":56,"author":{"gitId":"SiTingST"},"content":"     * Load the file data to the application when program starts"},{"lineNumber":57,"author":{"gitId":"SiTingST"},"content":"     * @return task list to be displayed"},{"lineNumber":58,"author":{"gitId":"SiTingST"},"content":"     * @throws DukeException"},{"lineNumber":59,"author":{"gitId":"SiTingST"},"content":"     * @throws IOException"},{"lineNumber":60,"author":{"gitId":"SiTingST"},"content":"     */"},{"lineNumber":61,"author":{"gitId":"SiTingST"},"content":"    public static ArrayList\u003cTask\u003e loadFile() throws DukeException, IOException {"},{"lineNumber":62,"author":{"gitId":"SiTingST"},"content":"        File file \u003d getFile();"},{"lineNumber":63,"author":{"gitId":"SiTingST"},"content":"        Task t \u003d new Task();"},{"lineNumber":64,"author":{"gitId":"SiTingST"},"content":"        ArrayList\u003cTask\u003e taskAL \u003d new ArrayList\u003c\u003e();"},{"lineNumber":65,"author":{"gitId":"SiTingST"},"content":"        try {"},{"lineNumber":66,"author":{"gitId":"SiTingST"},"content":"            Scanner sc \u003d new Scanner(file);"},{"lineNumber":67,"author":{"gitId":"SiTingST"},"content":"            while (sc.hasNextLine()) {"},{"lineNumber":68,"author":{"gitId":"SiTingST"},"content":"                String s \u003d sc.nextLine();"},{"lineNumber":69,"author":{"gitId":"SiTingST"},"content":"                taskAL.add(t.changeToTaskFormat(s));"},{"lineNumber":70,"author":{"gitId":"SiTingST"},"content":"            }"},{"lineNumber":71,"author":{"gitId":"SiTingST"},"content":"            sc.close();"},{"lineNumber":72,"author":{"gitId":"SiTingST"},"content":"        } catch (FileNotFoundException e) {"},{"lineNumber":73,"author":{"gitId":"SiTingST"},"content":"            throw new DukeException(\"Error finding file\");"},{"lineNumber":74,"author":{"gitId":"SiTingST"},"content":"        }"},{"lineNumber":75,"author":{"gitId":"SiTingST"},"content":"        return taskAL;"},{"lineNumber":76,"author":{"gitId":"SiTingST"},"content":"    }"},{"lineNumber":77,"author":{"gitId":"SiTingST"},"content":""},{"lineNumber":78,"author":{"gitId":"SiTingST"},"content":"}"}],"authorContributionMap":{"SiTingST":78}},{"path":"src/main/java/duke/exception/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"SiTingST"},"content":"package duke.exception;"},{"lineNumber":2,"author":{"gitId":"SiTingST"},"content":"/**"},{"lineNumber":3,"author":{"gitId":"SiTingST"},"content":" * Customized exception class to display customized exception"},{"lineNumber":4,"author":{"gitId":"SiTingST"},"content":" */"},{"lineNumber":5,"author":{"gitId":"SiTingST"},"content":"public class DukeException extends Exception {"},{"lineNumber":6,"author":{"gitId":"SiTingST"},"content":""},{"lineNumber":7,"author":{"gitId":"SiTingST"},"content":"    /** Create a customized exception"},{"lineNumber":8,"author":{"gitId":"SiTingST"},"content":"     * @param message"},{"lineNumber":9,"author":{"gitId":"SiTingST"},"content":"     */"},{"lineNumber":10,"author":{"gitId":"SiTingST"},"content":"    public DukeException(String message) {"},{"lineNumber":11,"author":{"gitId":"SiTingST"},"content":"        super(message);"},{"lineNumber":12,"author":{"gitId":"SiTingST"},"content":"    }"},{"lineNumber":13,"author":{"gitId":"SiTingST"},"content":"}"}],"authorContributionMap":{"SiTingST":13}},{"path":"src/main/java/duke/parser/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"SiTingST"},"content":"package duke.parser;"},{"lineNumber":2,"author":{"gitId":"SiTingST"},"content":""},{"lineNumber":3,"author":{"gitId":"SiTingST"},"content":"import java.io.IOException;"},{"lineNumber":4,"author":{"gitId":"SiTingST"},"content":"import java.time.LocalDate;"},{"lineNumber":5,"author":{"gitId":"SiTingST"},"content":"import java.time.LocalTime;"},{"lineNumber":6,"author":{"gitId":"SiTingST"},"content":"import java.time.format.DateTimeFormatter;"},{"lineNumber":7,"author":{"gitId":"SiTingST"},"content":"import java.time.format.DateTimeParseException;"},{"lineNumber":8,"author":{"gitId":"SiTingST"},"content":""},{"lineNumber":9,"author":{"gitId":"SiTingST"},"content":"import duke.command.AddCommand;"},{"lineNumber":10,"author":{"gitId":"SiTingST"},"content":"import duke.command.DeleteCommand;"},{"lineNumber":11,"author":{"gitId":"SiTingST"},"content":"import duke.command.DoneCommand;"},{"lineNumber":12,"author":{"gitId":"SiTingST"},"content":"import duke.command.ExitCommand;"},{"lineNumber":13,"author":{"gitId":"SiTingST"},"content":"import duke.command.ListCommand;"},{"lineNumber":14,"author":{"gitId":"SiTingST"},"content":"import duke.command.SearchCommand;"},{"lineNumber":15,"author":{"gitId":"SiTingST"},"content":"import duke.exception.DukeException;"},{"lineNumber":16,"author":{"gitId":"SiTingST"},"content":"import duke.ui.UI;"},{"lineNumber":17,"author":{"gitId":"SiTingST"},"content":""},{"lineNumber":18,"author":{"gitId":"SiTingST"},"content":"/**"},{"lineNumber":19,"author":{"gitId":"SiTingST"},"content":" * Parser class to handle all user commands and input."},{"lineNumber":20,"author":{"gitId":"SiTingST"},"content":" */"},{"lineNumber":21,"author":{"gitId":"SiTingST"},"content":"public class Parser {"},{"lineNumber":22,"author":{"gitId":"SiTingST"},"content":""},{"lineNumber":23,"author":{"gitId":"SiTingST"},"content":"    private static final DateTimeFormatter DATE_TIME_FORMATTER \u003d DateTimeFormatter.ofPattern(\"d/MM/yyyy\");"},{"lineNumber":24,"author":{"gitId":"SiTingST"},"content":"    private static final DateTimeFormatter TIME_FORMATTER \u003d DateTimeFormatter.ofPattern(\"HHmm\");"},{"lineNumber":25,"author":{"gitId":"SiTingST"},"content":""},{"lineNumber":26,"author":{"gitId":"SiTingST"},"content":"    /**"},{"lineNumber":27,"author":{"gitId":"SiTingST"},"content":"     * Invoke the respective command method to handle the different cases of user input"},{"lineNumber":28,"author":{"gitId":"SiTingST"},"content":"     * @param input user input"},{"lineNumber":29,"author":{"gitId":"SiTingST"},"content":"     * @return String message to be displayed upon completion of commands"},{"lineNumber":30,"author":{"gitId":"SiTingST"},"content":"     * @throws DukeException"},{"lineNumber":31,"author":{"gitId":"SiTingST"},"content":"     * @throws IOException"},{"lineNumber":32,"author":{"gitId":"SiTingST"},"content":"     */"},{"lineNumber":33,"author":{"gitId":"SiTingST"},"content":"    public static String parse(String input) throws DukeException, IOException {"},{"lineNumber":34,"author":{"gitId":"SiTingST"},"content":""},{"lineNumber":35,"author":{"gitId":"SiTingST"},"content":"        String[] commandArray \u003d input.split(\"\\\\s+\");"},{"lineNumber":36,"author":{"gitId":"SiTingST"},"content":"        String[] userInputArray \u003d separateUserInput(input);"},{"lineNumber":37,"author":{"gitId":"SiTingST"},"content":"        String type \u003d userInputArray[0];"},{"lineNumber":38,"author":{"gitId":"SiTingST"},"content":"        String taskDetail \u003d input.replace(type, \" \");"},{"lineNumber":39,"author":{"gitId":"SiTingST"},"content":""},{"lineNumber":40,"author":{"gitId":"SiTingST"},"content":"        assert commandArray[0] !\u003d null : \"Command cannot be null\";"},{"lineNumber":41,"author":{"gitId":"SiTingST"},"content":""},{"lineNumber":42,"author":{"gitId":"SiTingST"},"content":"        if (input.equals(\"bye\")) {"},{"lineNumber":43,"author":{"gitId":"SiTingST"},"content":"            ExitCommand ec \u003d new ExitCommand();"},{"lineNumber":44,"author":{"gitId":"SiTingST"},"content":"            return ec.execute();"},{"lineNumber":45,"author":{"gitId":"SiTingST"},"content":"        }"},{"lineNumber":46,"author":{"gitId":"SiTingST"},"content":""},{"lineNumber":47,"author":{"gitId":"SiTingST"},"content":"        if (commandArray[0].equals(\"find\")) {"},{"lineNumber":48,"author":{"gitId":"SiTingST"},"content":"            validatingTaskDetails(taskDetail, \"find\");"},{"lineNumber":49,"author":{"gitId":"SiTingST"},"content":"            SearchCommand sc \u003d new SearchCommand(taskDetail);"},{"lineNumber":50,"author":{"gitId":"SiTingST"},"content":"            return sc.execute();"},{"lineNumber":51,"author":{"gitId":"SiTingST"},"content":"        } else if (input.equals(\"list\")) {"},{"lineNumber":52,"author":{"gitId":"SiTingST"},"content":"            ListCommand lc \u003d new ListCommand(null);"},{"lineNumber":53,"author":{"gitId":"SiTingST"},"content":"            return lc.execute();"},{"lineNumber":54,"author":{"gitId":"SiTingST"},"content":"        } else if (commandArray[0].equals(\"delete\")) {"},{"lineNumber":55,"author":{"gitId":"SiTingST"},"content":"            validatingTaskDetails(taskDetail, \"delete\");"},{"lineNumber":56,"author":{"gitId":"SiTingST"},"content":"            DeleteCommand dc \u003d new DeleteCommand(commandArray[1]);"},{"lineNumber":57,"author":{"gitId":"SiTingST"},"content":"            return dc.execute();"},{"lineNumber":58,"author":{"gitId":"SiTingST"},"content":"        } else if (commandArray[0].equals(\"done\")) {"},{"lineNumber":59,"author":{"gitId":"SiTingST"},"content":"            validatingTaskDetails(taskDetail, \"done\");"},{"lineNumber":60,"author":{"gitId":"SiTingST"},"content":"            DoneCommand doneCommand \u003d new DoneCommand(commandArray[1]);"},{"lineNumber":61,"author":{"gitId":"SiTingST"},"content":"            return doneCommand.execute();"},{"lineNumber":62,"author":{"gitId":"SiTingST"},"content":"        } else {"},{"lineNumber":63,"author":{"gitId":"SiTingST"},"content":"            return invokeAddCommand(type, taskDetail, input);"},{"lineNumber":64,"author":{"gitId":"SiTingST"},"content":"        }"},{"lineNumber":65,"author":{"gitId":"SiTingST"},"content":"    }"},{"lineNumber":66,"author":{"gitId":"SiTingST"},"content":""},{"lineNumber":67,"author":{"gitId":"SiTingST"},"content":"    /**"},{"lineNumber":68,"author":{"gitId":"SiTingST"},"content":"     * Invoke and pass in the necessary information to the add command method"},{"lineNumber":69,"author":{"gitId":"SiTingST"},"content":"     * @param type type of task"},{"lineNumber":70,"author":{"gitId":"SiTingST"},"content":"     * @param userInput user input"},{"lineNumber":71,"author":{"gitId":"SiTingST"},"content":"     * @param taskDetail details of the task"},{"lineNumber":72,"author":{"gitId":"SiTingST"},"content":"     * @return String message to be displayed upon completion of commands"},{"lineNumber":73,"author":{"gitId":"SiTingST"},"content":"     * @throws DukeException"},{"lineNumber":74,"author":{"gitId":"SiTingST"},"content":"     * @throws IOException"},{"lineNumber":75,"author":{"gitId":"SiTingST"},"content":"     */"},{"lineNumber":76,"author":{"gitId":"SiTingST"},"content":"    public static String invokeAddCommand(String type, String userInput, String taskDetail) throws DukeException {"},{"lineNumber":77,"author":{"gitId":"SiTingST"},"content":"        switch (type) {"},{"lineNumber":78,"author":{"gitId":"SiTingST"},"content":"        case (\"todo\"):"},{"lineNumber":79,"author":{"gitId":"SiTingST"},"content":"            AddCommand ac \u003d new AddCommand(userInput, \"todo\", null, null, null);"},{"lineNumber":80,"author":{"gitId":"SiTingST"},"content":"            if (userInput.isBlank()) {"},{"lineNumber":81,"author":{"gitId":"SiTingST"},"content":"                throw new DukeException(UI.displayInvalidParameter(\"noDescription\"));"},{"lineNumber":82,"author":{"gitId":"SiTingST"},"content":"            }"},{"lineNumber":83,"author":{"gitId":"SiTingST"},"content":"            return ac.execute();"},{"lineNumber":84,"author":{"gitId":"SiTingST"},"content":""},{"lineNumber":85,"author":{"gitId":"SiTingST"},"content":"        case (\"deadline\"):"},{"lineNumber":86,"author":{"gitId":"SiTingST"},"content":"            if (userInput.isBlank()) {"},{"lineNumber":87,"author":{"gitId":"SiTingST"},"content":"                throw new DukeException(UI.displayInvalidParameter(\"noDescription\"));"},{"lineNumber":88,"author":{"gitId":"SiTingST"},"content":"            }"},{"lineNumber":89,"author":{"gitId":"SiTingST"},"content":""},{"lineNumber":90,"author":{"gitId":"SiTingST"},"content":"            //check if there are no parameter following /by"},{"lineNumber":91,"author":{"gitId":"SiTingST"},"content":"            String[] dueDateArray \u003d separateDueDate(taskDetail, \"deadline\");"},{"lineNumber":92,"author":{"gitId":"SiTingST"},"content":""},{"lineNumber":93,"author":{"gitId":"SiTingST"},"content":"            //check for format of given date"},{"lineNumber":94,"author":{"gitId":"SiTingST"},"content":"            LocalDate deadlineDueDate \u003d check_valid_date(dueDateArray[1]);"},{"lineNumber":95,"author":{"gitId":"SiTingST"},"content":"            if (dueDateArray.length \u003d\u003d 2) {"},{"lineNumber":96,"author":{"gitId":"SiTingST"},"content":"                throw new DukeException(UI.displayInvalidParameter(\"noDueTime\"));"},{"lineNumber":97,"author":{"gitId":"SiTingST"},"content":"            } else if (dueDateArray.length \u003e 3) {"},{"lineNumber":98,"author":{"gitId":"SiTingST"},"content":"                throw new DukeException(UI.displayDeadlineInvalidParameter(\"extraParameter\"));"},{"lineNumber":99,"author":{"gitId":"SiTingST"},"content":"            }"},{"lineNumber":100,"author":{"gitId":"SiTingST"},"content":"            LocalTime deadlineDueTime \u003d check_valid_time(dueDateArray[2]);"},{"lineNumber":101,"author":{"gitId":"SiTingST"},"content":""},{"lineNumber":102,"author":{"gitId":"SiTingST"},"content":"            String[] taskDescription \u003d userInput.split(\"/by\");"},{"lineNumber":103,"author":{"gitId":"SiTingST"},"content":"            AddCommand addCommand \u003d new AddCommand(taskDescription[0], \"deadline\","},{"lineNumber":104,"author":{"gitId":"SiTingST"},"content":"                        deadlineDueDate, deadlineDueTime, null);"},{"lineNumber":105,"author":{"gitId":"SiTingST"},"content":"            return addCommand.execute();"},{"lineNumber":106,"author":{"gitId":"SiTingST"},"content":"        case (\"event\"):"},{"lineNumber":107,"author":{"gitId":"SiTingST"},"content":"            LocalDate startDate \u003d null;"},{"lineNumber":108,"author":{"gitId":"SiTingST"},"content":"            LocalTime startTime \u003d null;"},{"lineNumber":109,"author":{"gitId":"SiTingST"},"content":"            LocalTime endTime \u003d null;"},{"lineNumber":110,"author":{"gitId":"SiTingST"},"content":""},{"lineNumber":111,"author":{"gitId":"SiTingST"},"content":"            String[] eventDueDateArray \u003d separateDueDate(taskDetail, \"event\");"},{"lineNumber":112,"author":{"gitId":"SiTingST"},"content":"            startDate \u003d check_valid_date(eventDueDateArray[1]);"},{"lineNumber":113,"author":{"gitId":"SiTingST"},"content":""},{"lineNumber":114,"author":{"gitId":"SiTingST"},"content":"            if (eventDueDateArray.length \u003d\u003d 2) {"},{"lineNumber":115,"author":{"gitId":"SiTingST"},"content":"                throw new DukeException(UI.displayInvalidParameter(\"noDueDate\"));"},{"lineNumber":116,"author":{"gitId":"SiTingST"},"content":"            } else if (eventDueDateArray.length \u003e 3) {"},{"lineNumber":117,"author":{"gitId":"SiTingST"},"content":"                throw new DukeException(UI.displayEventInvalidParameter(\"extraParameter\"));"},{"lineNumber":118,"author":{"gitId":"SiTingST"},"content":"            }"},{"lineNumber":119,"author":{"gitId":"SiTingST"},"content":"            String[] eventDueTimeArray \u003d separateStartEndTime(eventDueDateArray);"},{"lineNumber":120,"author":{"gitId":"SiTingST"},"content":""},{"lineNumber":121,"author":{"gitId":"SiTingST"},"content":"            try {"},{"lineNumber":122,"author":{"gitId":"SiTingST"},"content":"                startTime \u003d LocalTime.parse(eventDueTimeArray[0], TIME_FORMATTER);"},{"lineNumber":123,"author":{"gitId":"SiTingST"},"content":"                endTime \u003d LocalTime.parse(eventDueTimeArray[1], TIME_FORMATTER);"},{"lineNumber":124,"author":{"gitId":"SiTingST"},"content":"            } catch (DateTimeParseException e) {"},{"lineNumber":125,"author":{"gitId":"SiTingST"},"content":"                throw new DukeException(UI.displayEventInvalidParameter(\"wrongTimeFormat\"));"},{"lineNumber":126,"author":{"gitId":"SiTingST"},"content":"            }"},{"lineNumber":127,"author":{"gitId":"SiTingST"},"content":""},{"lineNumber":128,"author":{"gitId":"SiTingST"},"content":"            if (startTime.isAfter(endTime) || startTime.toString().equals(endTime.toString())) {"},{"lineNumber":129,"author":{"gitId":"SiTingST"},"content":"                throw new DukeException(UI.displayEventInvalidParameter(\"invalidTimeInput\"));"},{"lineNumber":130,"author":{"gitId":"SiTingST"},"content":"            }"},{"lineNumber":131,"author":{"gitId":"SiTingST"},"content":""},{"lineNumber":132,"author":{"gitId":"SiTingST"},"content":"            String[] description \u003d userInput.split(\"/at\");"},{"lineNumber":133,"author":{"gitId":"SiTingST"},"content":""},{"lineNumber":134,"author":{"gitId":"SiTingST"},"content":"            if (description.length \u003e 2) {"},{"lineNumber":135,"author":{"gitId":"SiTingST"},"content":"                throw new DukeException(UI.displayInvalidParameter(\"lesserParameterGiven\"));"},{"lineNumber":136,"author":{"gitId":"SiTingST"},"content":"            }"},{"lineNumber":137,"author":{"gitId":"SiTingST"},"content":""},{"lineNumber":138,"author":{"gitId":"SiTingST"},"content":"            AddCommand addEventCommand \u003d new AddCommand(description[0], \"event\", startDate, startTime, endTime);"},{"lineNumber":139,"author":{"gitId":"SiTingST"},"content":"            return addEventCommand.execute();"},{"lineNumber":140,"author":{"gitId":"SiTingST"},"content":""},{"lineNumber":141,"author":{"gitId":"SiTingST"},"content":"        default:"},{"lineNumber":142,"author":{"gitId":"SiTingST"},"content":"            throw new DukeException(UI.displayUnknownCommand());"},{"lineNumber":143,"author":{"gitId":"SiTingST"},"content":"        }"},{"lineNumber":144,"author":{"gitId":"SiTingST"},"content":"    }"},{"lineNumber":145,"author":{"gitId":"SiTingST"},"content":""},{"lineNumber":146,"author":{"gitId":"SiTingST"},"content":"    /**"},{"lineNumber":147,"author":{"gitId":"SiTingST"},"content":"     * Returns an array of string after separating the given input by spaces"},{"lineNumber":148,"author":{"gitId":"SiTingST"},"content":"     * @param userInput"},{"lineNumber":149,"author":{"gitId":"SiTingST"},"content":"     * @return array of string that is split"},{"lineNumber":150,"author":{"gitId":"SiTingST"},"content":"     * @throws DukeException"},{"lineNumber":151,"author":{"gitId":"SiTingST"},"content":"     */"},{"lineNumber":152,"author":{"gitId":"SiTingST"},"content":"    public static String[] separateUserInput(String userInput) throws DukeException {"},{"lineNumber":153,"author":{"gitId":"SiTingST"},"content":"        String[] inputArray \u003d userInput.trim().split(\" \");"},{"lineNumber":154,"author":{"gitId":"SiTingST"},"content":"        String taskName \u003d inputArray[0];"},{"lineNumber":155,"author":{"gitId":"SiTingST"},"content":""},{"lineNumber":156,"author":{"gitId":"SiTingST"},"content":"        if (taskName.isBlank()) {"},{"lineNumber":157,"author":{"gitId":"SiTingST"},"content":"            throw new DukeException(UI.displayInvalidParameter(\"noTodoDescription\"));"},{"lineNumber":158,"author":{"gitId":"SiTingST"},"content":"        } else {"},{"lineNumber":159,"author":{"gitId":"SiTingST"},"content":"            return inputArray;"},{"lineNumber":160,"author":{"gitId":"SiTingST"},"content":"        }"},{"lineNumber":161,"author":{"gitId":"SiTingST"},"content":"    }"},{"lineNumber":162,"author":{"gitId":"SiTingST"},"content":""},{"lineNumber":163,"author":{"gitId":"SiTingST"},"content":"    /**"},{"lineNumber":164,"author":{"gitId":"SiTingST"},"content":"     * Returns the array of string after separating task details by due dates"},{"lineNumber":165,"author":{"gitId":"SiTingST"},"content":"     * @param taskDetail detail of task"},{"lineNumber":166,"author":{"gitId":"SiTingST"},"content":"     * @param taskType type of task"},{"lineNumber":167,"author":{"gitId":"SiTingST"},"content":"     * @return array of string containing due date and due time"},{"lineNumber":168,"author":{"gitId":"SiTingST"},"content":"     * @throws DukeException"},{"lineNumber":169,"author":{"gitId":"SiTingST"},"content":"     */"},{"lineNumber":170,"author":{"gitId":"SiTingST"},"content":"    public static String[] separateDueDate(String taskDetail, String taskType) throws DukeException {"},{"lineNumber":171,"author":{"gitId":"SiTingST"},"content":""},{"lineNumber":172,"author":{"gitId":"SiTingST"},"content":"        if (taskDetail.contains(\"/by\") \u0026\u0026 taskType.equals(\"deadline\")) {"},{"lineNumber":173,"author":{"gitId":"SiTingST"},"content":"            String[] dueBy \u003d splitParametersByDelimiter(taskDetail, \"/by\", taskType);"},{"lineNumber":174,"author":{"gitId":"SiTingST"},"content":"            String[] dueTimeArray \u003d splitParametersByDelimiter(dueBy[1], \" \", taskType);"},{"lineNumber":175,"author":{"gitId":"SiTingST"},"content":"            return dueTimeArray;"},{"lineNumber":176,"author":{"gitId":"SiTingST"},"content":"        } else if (taskDetail.contains(\"/at\") \u0026\u0026 taskType.equals(\"event\")) {"},{"lineNumber":177,"author":{"gitId":"SiTingST"},"content":"            String[] dueDetailsArray \u003d splitParametersByDelimiter(taskDetail, \"/at\", taskType);"},{"lineNumber":178,"author":{"gitId":"SiTingST"},"content":"            String[] dueDateAndDueTimeArray \u003d splitParametersByDelimiter(dueDetailsArray[1], \" \", taskType);"},{"lineNumber":179,"author":{"gitId":"SiTingST"},"content":"            return dueDateAndDueTimeArray;"},{"lineNumber":180,"author":{"gitId":"SiTingST"},"content":"        } else {"},{"lineNumber":181,"author":{"gitId":"SiTingST"},"content":"            throw new DukeException(UI.displayInvalidParameter(\"wrongCommand\"));"},{"lineNumber":182,"author":{"gitId":"SiTingST"},"content":"        }"},{"lineNumber":183,"author":{"gitId":"SiTingST"},"content":"    }"},{"lineNumber":184,"author":{"gitId":"SiTingST"},"content":""},{"lineNumber":185,"author":{"gitId":"SiTingST"},"content":"    /**"},{"lineNumber":186,"author":{"gitId":"SiTingST"},"content":"     * Returns the array of string after separating task details by start and end time"},{"lineNumber":187,"author":{"gitId":"SiTingST"},"content":"     * @param taskDueTime task details regarding the start and end time"},{"lineNumber":188,"author":{"gitId":"SiTingST"},"content":"     * @return array of string containing start and end time"},{"lineNumber":189,"author":{"gitId":"SiTingST"},"content":"     * @throws DukeException"},{"lineNumber":190,"author":{"gitId":"SiTingST"},"content":"     */"},{"lineNumber":191,"author":{"gitId":"SiTingST"},"content":"    public static String[] separateStartEndTime(String[] taskDueTime) throws DukeException {"},{"lineNumber":192,"author":{"gitId":"SiTingST"},"content":"        String[] timeArr;"},{"lineNumber":193,"author":{"gitId":"SiTingST"},"content":"        try {"},{"lineNumber":194,"author":{"gitId":"SiTingST"},"content":"            if (taskDueTime[2].contains(\"-\")) {"},{"lineNumber":195,"author":{"gitId":"SiTingST"},"content":"                timeArr \u003d taskDueTime[2].split(\"-\");"},{"lineNumber":196,"author":{"gitId":"SiTingST"},"content":"            } else {"},{"lineNumber":197,"author":{"gitId":"SiTingST"},"content":"                throw new DukeException(UI.displayEventInvalidParameter(\"errorSeparatingTime\"));"},{"lineNumber":198,"author":{"gitId":"SiTingST"},"content":"            }"},{"lineNumber":199,"author":{"gitId":"SiTingST"},"content":"        } catch (ArrayIndexOutOfBoundsException e) {"},{"lineNumber":200,"author":{"gitId":"SiTingST"},"content":"            throw new DukeException(UI.displayEventInvalidParameter(\"extraParameter\"));"},{"lineNumber":201,"author":{"gitId":"SiTingST"},"content":"        }"},{"lineNumber":202,"author":{"gitId":"SiTingST"},"content":"        return timeArr;"},{"lineNumber":203,"author":{"gitId":"SiTingST"},"content":"    }"},{"lineNumber":204,"author":{"gitId":"SiTingST"},"content":""},{"lineNumber":205,"author":{"gitId":"SiTingST"},"content":"    /**"},{"lineNumber":206,"author":{"gitId":"SiTingST"},"content":"     * Returns the array of string after separating task details by the given delimiter with handled exception"},{"lineNumber":207,"author":{"gitId":"SiTingST"},"content":"     * @param givenArray array used to separate inputs"},{"lineNumber":208,"author":{"gitId":"SiTingST"},"content":"     * @param delimiter string to separate the given array by"},{"lineNumber":209,"author":{"gitId":"SiTingST"},"content":"     * @param taskType type of task"},{"lineNumber":210,"author":{"gitId":"SiTingST"},"content":"     * @throws DukeException"},{"lineNumber":211,"author":{"gitId":"SiTingST"},"content":"     */"},{"lineNumber":212,"author":{"gitId":"SiTingST"},"content":"    public static String[] splitParametersByDelimiter(String givenArray, String delimiter, String taskType)"},{"lineNumber":213,"author":{"gitId":"SiTingST"},"content":"            throws DukeException {"},{"lineNumber":214,"author":{"gitId":"SiTingST"},"content":""},{"lineNumber":215,"author":{"gitId":"SiTingST"},"content":"        String[] separateOutput;"},{"lineNumber":216,"author":{"gitId":"SiTingST"},"content":"        try {"},{"lineNumber":217,"author":{"gitId":"SiTingST"},"content":"            separateOutput \u003d givenArray.split(delimiter);"},{"lineNumber":218,"author":{"gitId":"SiTingST"},"content":"            String output \u003d separateOutput[1];"},{"lineNumber":219,"author":{"gitId":"SiTingST"},"content":"        } catch (ArrayIndexOutOfBoundsException e) {"},{"lineNumber":220,"author":{"gitId":"SiTingST"},"content":"            if (taskType.equals(\"deadline\")) {"},{"lineNumber":221,"author":{"gitId":"SiTingST"},"content":"                throw new DukeException(UI.displayDeadlineInvalidParameter(\"noDueDateOrWrongFormat\"));"},{"lineNumber":222,"author":{"gitId":"SiTingST"},"content":"            } else {"},{"lineNumber":223,"author":{"gitId":"SiTingST"},"content":"                throw new DukeException(UI.displayEventInvalidParameter(\"noDueDateOrWrongFormat\"));"},{"lineNumber":224,"author":{"gitId":"SiTingST"},"content":"            }"},{"lineNumber":225,"author":{"gitId":"SiTingST"},"content":"        }"},{"lineNumber":226,"author":{"gitId":"SiTingST"},"content":""},{"lineNumber":227,"author":{"gitId":"SiTingST"},"content":"        boolean isThereTaskDescriptionForDeadline \u003d taskType.equals(\"deadline\") \u0026\u0026 delimiter.equals(\"/by\")"},{"lineNumber":228,"author":{"gitId":"SiTingST"},"content":"                \u0026\u0026 separateOutput[0].trim().replace(\"deadline\", \"\").isEmpty();"},{"lineNumber":229,"author":{"gitId":"SiTingST"},"content":""},{"lineNumber":230,"author":{"gitId":"SiTingST"},"content":"        boolean isThereTaskDescriptionForEvent \u003d taskType.equals(\"event\") \u0026\u0026 delimiter.equals(\"/at\")"},{"lineNumber":231,"author":{"gitId":"SiTingST"},"content":"                \u0026\u0026 separateOutput[0].trim().replace(\"event\", \"\").isEmpty();"},{"lineNumber":232,"author":{"gitId":"SiTingST"},"content":""},{"lineNumber":233,"author":{"gitId":"SiTingST"},"content":"        if (isThereTaskDescriptionForDeadline || isThereTaskDescriptionForEvent) {"},{"lineNumber":234,"author":{"gitId":"SiTingST"},"content":"            throw new DukeException(UI.displayInvalidParameter(\"noDescription\"));"},{"lineNumber":235,"author":{"gitId":"SiTingST"},"content":"        }"},{"lineNumber":236,"author":{"gitId":"SiTingST"},"content":""},{"lineNumber":237,"author":{"gitId":"SiTingST"},"content":"        return separateOutput;"},{"lineNumber":238,"author":{"gitId":"SiTingST"},"content":"    }"},{"lineNumber":239,"author":{"gitId":"SiTingST"},"content":""},{"lineNumber":240,"author":{"gitId":"SiTingST"},"content":"    /**"},{"lineNumber":241,"author":{"gitId":"SiTingST"},"content":"     * Check the validity of task parameters"},{"lineNumber":242,"author":{"gitId":"SiTingST"},"content":"     * @param taskDetail"},{"lineNumber":243,"author":{"gitId":"SiTingST"},"content":"     * @throws DukeException"},{"lineNumber":244,"author":{"gitId":"SiTingST"},"content":"     */"},{"lineNumber":245,"author":{"gitId":"SiTingST"},"content":"    public static void validatingTaskDetails(String taskDetail, String command) throws DukeException {"},{"lineNumber":246,"author":{"gitId":"SiTingST"},"content":"        if (taskDetail.isBlank()) {"},{"lineNumber":247,"author":{"gitId":"SiTingST"},"content":"            throw new DukeException(UI.displayInvalidParameter(command));"},{"lineNumber":248,"author":{"gitId":"SiTingST"},"content":"        } else if (command.equals(\"done\") || command.equals(\"delete\")) {"},{"lineNumber":249,"author":{"gitId":"SiTingST"},"content":"            try {"},{"lineNumber":250,"author":{"gitId":"SiTingST"},"content":"                Integer.parseInt(taskDetail.trim());"},{"lineNumber":251,"author":{"gitId":"SiTingST"},"content":"            } catch (NumberFormatException e) {"},{"lineNumber":252,"author":{"gitId":"SiTingST"},"content":"                throw new DukeException(UI.displayInvalidParameter(command));"},{"lineNumber":253,"author":{"gitId":"SiTingST"},"content":"            }"},{"lineNumber":254,"author":{"gitId":"SiTingST"},"content":""},{"lineNumber":255,"author":{"gitId":"SiTingST"},"content":"        }"},{"lineNumber":256,"author":{"gitId":"SiTingST"},"content":"    }"},{"lineNumber":257,"author":{"gitId":"SiTingST"},"content":""},{"lineNumber":258,"author":{"gitId":"SiTingST"},"content":"    /**"},{"lineNumber":259,"author":{"gitId":"SiTingST"},"content":"     * Check the validity of the date if it has already passed or is an invalid date"},{"lineNumber":260,"author":{"gitId":"SiTingST"},"content":"     * @param givenDate"},{"lineNumber":261,"author":{"gitId":"SiTingST"},"content":"     * @throws DukeException"},{"lineNumber":262,"author":{"gitId":"SiTingST"},"content":"     */"},{"lineNumber":263,"author":{"gitId":"SiTingST"},"content":"    public static LocalDate check_valid_date(String givenDate) throws DukeException {"},{"lineNumber":264,"author":{"gitId":"SiTingST"},"content":"        LocalDate dueDate;"},{"lineNumber":265,"author":{"gitId":"SiTingST"},"content":"        String dayOfMonth;"},{"lineNumber":266,"author":{"gitId":"SiTingST"},"content":"        try {"},{"lineNumber":267,"author":{"gitId":"SiTingST"},"content":"            dueDate \u003d LocalDate.parse(givenDate, DATE_TIME_FORMATTER);"},{"lineNumber":268,"author":{"gitId":"SiTingST"},"content":"            dayOfMonth \u003d givenDate.substring(0, 2);"},{"lineNumber":269,"author":{"gitId":"SiTingST"},"content":"        } catch (DateTimeParseException e) {"},{"lineNumber":270,"author":{"gitId":"SiTingST"},"content":"            throw new DukeException(UI.displayInvalidParameter(\"invalidDate\"));"},{"lineNumber":271,"author":{"gitId":"SiTingST"},"content":"        }"},{"lineNumber":272,"author":{"gitId":"SiTingST"},"content":""},{"lineNumber":273,"author":{"gitId":"SiTingST"},"content":"        if (Integer.parseInt(dayOfMonth) \u003e dueDate.lengthOfMonth()) {"},{"lineNumber":274,"author":{"gitId":"SiTingST"},"content":"            throw new DukeException(UI.displayInvalidParameter(\"dateExtendTotalDateInMonth\"));"},{"lineNumber":275,"author":{"gitId":"SiTingST"},"content":"        }"},{"lineNumber":276,"author":{"gitId":"SiTingST"},"content":""},{"lineNumber":277,"author":{"gitId":"SiTingST"},"content":"        LocalDate today \u003d LocalDate.now();"},{"lineNumber":278,"author":{"gitId":"SiTingST"},"content":"        if (dueDate.isBefore(today)) {"},{"lineNumber":279,"author":{"gitId":"SiTingST"},"content":"            throw new DukeException(UI.displayInvalidParameter(\"invalidDate\"));"},{"lineNumber":280,"author":{"gitId":"SiTingST"},"content":"        }"},{"lineNumber":281,"author":{"gitId":"SiTingST"},"content":"        return dueDate;"},{"lineNumber":282,"author":{"gitId":"SiTingST"},"content":"    }"},{"lineNumber":283,"author":{"gitId":"SiTingST"},"content":""},{"lineNumber":284,"author":{"gitId":"SiTingST"},"content":"    /**"},{"lineNumber":285,"author":{"gitId":"SiTingST"},"content":"     * Check the validity of the given time"},{"lineNumber":286,"author":{"gitId":"SiTingST"},"content":"     * @param givenTime string containing the start and end time"},{"lineNumber":287,"author":{"gitId":"SiTingST"},"content":"     * @throws DukeException"},{"lineNumber":288,"author":{"gitId":"SiTingST"},"content":"     */"},{"lineNumber":289,"author":{"gitId":"SiTingST"},"content":"    public static LocalTime check_valid_time(String givenTime) throws DukeException {"},{"lineNumber":290,"author":{"gitId":"SiTingST"},"content":"        LocalTime dueTime;"},{"lineNumber":291,"author":{"gitId":"SiTingST"},"content":"        try {"},{"lineNumber":292,"author":{"gitId":"SiTingST"},"content":"            dueTime \u003d LocalTime.parse(givenTime, TIME_FORMATTER);"},{"lineNumber":293,"author":{"gitId":"SiTingST"},"content":"        } catch (DateTimeParseException e) {"},{"lineNumber":294,"author":{"gitId":"SiTingST"},"content":"            throw new DukeException(UI.displayInvalidParameter(\"invalidTimeFormat\"));"},{"lineNumber":295,"author":{"gitId":"SiTingST"},"content":"        }"},{"lineNumber":296,"author":{"gitId":"SiTingST"},"content":"        return dueTime;"},{"lineNumber":297,"author":{"gitId":"SiTingST"},"content":"    }"},{"lineNumber":298,"author":{"gitId":"SiTingST"},"content":"}"}],"authorContributionMap":{"SiTingST":298}},{"path":"src/main/java/duke/task/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"SiTingST"},"content":"package duke.task;"},{"lineNumber":2,"author":{"gitId":"SiTingST"},"content":"import java.time.LocalDate;"},{"lineNumber":3,"author":{"gitId":"SiTingST"},"content":"import java.time.LocalTime;"},{"lineNumber":4,"author":{"gitId":"SiTingST"},"content":""},{"lineNumber":5,"author":{"gitId":"SiTingST"},"content":"/**"},{"lineNumber":6,"author":{"gitId":"SiTingST"},"content":" * Deadline class initialize and manage deadline tasks."},{"lineNumber":7,"author":{"gitId":"SiTingST"},"content":" */"},{"lineNumber":8,"author":{"gitId":"SiTingST"},"content":"public class Deadline extends Task {"},{"lineNumber":9,"author":{"gitId":"SiTingST"},"content":""},{"lineNumber":10,"author":{"gitId":"SiTingST"},"content":"    private LocalDate dueDate;"},{"lineNumber":11,"author":{"gitId":"SiTingST"},"content":"    private LocalTime dueTime;"},{"lineNumber":12,"author":{"gitId":"SiTingST"},"content":""},{"lineNumber":13,"author":{"gitId":"SiTingST"},"content":"    /**"},{"lineNumber":14,"author":{"gitId":"SiTingST"},"content":"     * Creates a deadline task with description, due date, and due time"},{"lineNumber":15,"author":{"gitId":"SiTingST"},"content":"     * @param description task description"},{"lineNumber":16,"author":{"gitId":"SiTingST"},"content":"     * @param dueBy due date"},{"lineNumber":17,"author":{"gitId":"SiTingST"},"content":"     * @param dueTime due time"},{"lineNumber":18,"author":{"gitId":"SiTingST"},"content":"     */"},{"lineNumber":19,"author":{"gitId":"SiTingST"},"content":"    public Deadline(String description, LocalDate dueBy, LocalTime dueTime) {"},{"lineNumber":20,"author":{"gitId":"SiTingST"},"content":"        super(description);"},{"lineNumber":21,"author":{"gitId":"SiTingST"},"content":"        this.dueDate \u003d dueBy;"},{"lineNumber":22,"author":{"gitId":"SiTingST"},"content":"        this.dueTime \u003d dueTime;"},{"lineNumber":23,"author":{"gitId":"SiTingST"},"content":"    }"},{"lineNumber":24,"author":{"gitId":"SiTingST"},"content":""},{"lineNumber":25,"author":{"gitId":"SiTingST"},"content":"    /**"},{"lineNumber":26,"author":{"gitId":"SiTingST"},"content":"     * Creates a deadline task with additional status field"},{"lineNumber":27,"author":{"gitId":"SiTingST"},"content":"     * @param description task description"},{"lineNumber":28,"author":{"gitId":"SiTingST"},"content":"     * @param isCompleted task status"},{"lineNumber":29,"author":{"gitId":"SiTingST"},"content":"     * @param dueBy due date"},{"lineNumber":30,"author":{"gitId":"SiTingST"},"content":"     * @param dueTime due time"},{"lineNumber":31,"author":{"gitId":"SiTingST"},"content":"     */"},{"lineNumber":32,"author":{"gitId":"SiTingST"},"content":"    public Deadline(String description, Boolean isCompleted, LocalDate dueBy, LocalTime dueTime) {"},{"lineNumber":33,"author":{"gitId":"SiTingST"},"content":"        super(description, isCompleted);"},{"lineNumber":34,"author":{"gitId":"SiTingST"},"content":"        this.dueDate \u003d dueBy;"},{"lineNumber":35,"author":{"gitId":"SiTingST"},"content":"        this.dueTime \u003d dueTime;"},{"lineNumber":36,"author":{"gitId":"SiTingST"},"content":"    }"},{"lineNumber":37,"author":{"gitId":"SiTingST"},"content":""},{"lineNumber":38,"author":{"gitId":"SiTingST"},"content":"    /**"},{"lineNumber":39,"author":{"gitId":"SiTingST"},"content":"     * Returns a string representation of deadline task to be added to the data file"},{"lineNumber":40,"author":{"gitId":"SiTingST"},"content":"     * @return string representation of deadline task"},{"lineNumber":41,"author":{"gitId":"SiTingST"},"content":"     */"},{"lineNumber":42,"author":{"gitId":"SiTingST"},"content":"    @Override"},{"lineNumber":43,"author":{"gitId":"SiTingST"},"content":"    public String changeFormat() {"},{"lineNumber":44,"author":{"gitId":"SiTingST"},"content":"        return \"D\" + super.changeFormat() + \",\" + this.dueDate + \",\" + this.dueTime;"},{"lineNumber":45,"author":{"gitId":"SiTingST"},"content":"    }"},{"lineNumber":46,"author":{"gitId":"SiTingST"},"content":""},{"lineNumber":47,"author":{"gitId":"SiTingST"},"content":"    /**"},{"lineNumber":48,"author":{"gitId":"SiTingST"},"content":"     * Returns a customized representation of the deadline task to the user"},{"lineNumber":49,"author":{"gitId":"SiTingST"},"content":"     * @return string representation of deadline task to be displayed to the user"},{"lineNumber":50,"author":{"gitId":"SiTingST"},"content":"     */"},{"lineNumber":51,"author":{"gitId":"SiTingST"},"content":"    @Override"},{"lineNumber":52,"author":{"gitId":"SiTingST"},"content":"    public String toString() {"},{"lineNumber":53,"author":{"gitId":"SiTingST"},"content":"        return \" Deadline:\" + super.toString() + \" (by: \" + this.dueDate + \" \" + this.dueTime + \")\";"},{"lineNumber":54,"author":{"gitId":"SiTingST"},"content":"    }"},{"lineNumber":55,"author":{"gitId":"SiTingST"},"content":"}"}],"authorContributionMap":{"SiTingST":55}},{"path":"src/main/java/duke/task/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"SiTingST"},"content":"package duke.task;"},{"lineNumber":2,"author":{"gitId":"SiTingST"},"content":"import java.time.LocalDate;"},{"lineNumber":3,"author":{"gitId":"SiTingST"},"content":"import java.time.LocalTime;"},{"lineNumber":4,"author":{"gitId":"SiTingST"},"content":""},{"lineNumber":5,"author":{"gitId":"SiTingST"},"content":"/**"},{"lineNumber":6,"author":{"gitId":"SiTingST"},"content":" * Event class initialize and manage event tasks."},{"lineNumber":7,"author":{"gitId":"SiTingST"},"content":" */"},{"lineNumber":8,"author":{"gitId":"SiTingST"},"content":"public class Event extends Task {"},{"lineNumber":9,"author":{"gitId":"SiTingST"},"content":""},{"lineNumber":10,"author":{"gitId":"SiTingST"},"content":"    private LocalDate date;"},{"lineNumber":11,"author":{"gitId":"SiTingST"},"content":"    private LocalTime startTime;"},{"lineNumber":12,"author":{"gitId":"SiTingST"},"content":"    private LocalTime endTime;"},{"lineNumber":13,"author":{"gitId":"SiTingST"},"content":""},{"lineNumber":14,"author":{"gitId":"SiTingST"},"content":"    /**"},{"lineNumber":15,"author":{"gitId":"SiTingST"},"content":"     * Creates an event task with description, task status, and due date"},{"lineNumber":16,"author":{"gitId":"SiTingST"},"content":"     * @param description task description"},{"lineNumber":17,"author":{"gitId":"SiTingST"},"content":"     * @param isCompleted task status"},{"lineNumber":18,"author":{"gitId":"SiTingST"},"content":"     * @param dueDate due date"},{"lineNumber":19,"author":{"gitId":"SiTingST"},"content":"     */"},{"lineNumber":20,"author":{"gitId":"SiTingST"},"content":""},{"lineNumber":21,"author":{"gitId":"SiTingST"},"content":"    public Event(String description, Boolean isCompleted, LocalDate dueDate) {"},{"lineNumber":22,"author":{"gitId":"SiTingST"},"content":"        super(description, isCompleted);"},{"lineNumber":23,"author":{"gitId":"SiTingST"},"content":"        this.date \u003d dueDate;"},{"lineNumber":24,"author":{"gitId":"SiTingST"},"content":"    }"},{"lineNumber":25,"author":{"gitId":"SiTingST"},"content":""},{"lineNumber":26,"author":{"gitId":"SiTingST"},"content":"    /**"},{"lineNumber":27,"author":{"gitId":"SiTingST"},"content":"     * Creates an event task with additional start and end time field"},{"lineNumber":28,"author":{"gitId":"SiTingST"},"content":"     * @param description task description"},{"lineNumber":29,"author":{"gitId":"SiTingST"},"content":"     * @param isCompleted task status"},{"lineNumber":30,"author":{"gitId":"SiTingST"},"content":"     * @param dueDate due date"},{"lineNumber":31,"author":{"gitId":"SiTingST"},"content":"     * @param startTime start time"},{"lineNumber":32,"author":{"gitId":"SiTingST"},"content":"     * @param endTime end time"},{"lineNumber":33,"author":{"gitId":"SiTingST"},"content":"     */"},{"lineNumber":34,"author":{"gitId":"SiTingST"},"content":""},{"lineNumber":35,"author":{"gitId":"SiTingST"},"content":"    public Event(String description, Boolean isCompleted, LocalDate dueDate, LocalTime startTime, LocalTime endTime) {"},{"lineNumber":36,"author":{"gitId":"SiTingST"},"content":"        super(description, isCompleted);"},{"lineNumber":37,"author":{"gitId":"SiTingST"},"content":"        this.date \u003d dueDate;"},{"lineNumber":38,"author":{"gitId":"SiTingST"},"content":"        this.startTime \u003d startTime;"},{"lineNumber":39,"author":{"gitId":"SiTingST"},"content":"        this.endTime \u003d endTime;"},{"lineNumber":40,"author":{"gitId":"SiTingST"},"content":"    }"},{"lineNumber":41,"author":{"gitId":"SiTingST"},"content":""},{"lineNumber":42,"author":{"gitId":"SiTingST"},"content":"    /**"},{"lineNumber":43,"author":{"gitId":"SiTingST"},"content":"     * Returns a string representation of event task to be added to the data file"},{"lineNumber":44,"author":{"gitId":"SiTingST"},"content":"     * @return string representation of event task"},{"lineNumber":45,"author":{"gitId":"SiTingST"},"content":"     */"},{"lineNumber":46,"author":{"gitId":"SiTingST"},"content":"    @Override"},{"lineNumber":47,"author":{"gitId":"SiTingST"},"content":"    public String changeFormat() {"},{"lineNumber":48,"author":{"gitId":"SiTingST"},"content":"        return \"E\" + super.changeFormat() + \",\" + this.date + \",\" + this.startTime + \",\" + this.endTime;"},{"lineNumber":49,"author":{"gitId":"SiTingST"},"content":"    }"},{"lineNumber":50,"author":{"gitId":"SiTingST"},"content":""},{"lineNumber":51,"author":{"gitId":"SiTingST"},"content":"    /**"},{"lineNumber":52,"author":{"gitId":"SiTingST"},"content":"     * Returns a customized representation of the event task to the user"},{"lineNumber":53,"author":{"gitId":"SiTingST"},"content":"     * @return string representation of event task to be displayed to the user"},{"lineNumber":54,"author":{"gitId":"SiTingST"},"content":"     */"},{"lineNumber":55,"author":{"gitId":"SiTingST"},"content":"    @Override"},{"lineNumber":56,"author":{"gitId":"SiTingST"},"content":"    public String toString() {"},{"lineNumber":57,"author":{"gitId":"SiTingST"},"content":"        return \" Event:\" + super.toString() + \"(at: \" + this.date + \" \" + this.startTime + \" \" + this.endTime + \")\";"},{"lineNumber":58,"author":{"gitId":"SiTingST"},"content":"    }"},{"lineNumber":59,"author":{"gitId":"SiTingST"},"content":"}"}],"authorContributionMap":{"SiTingST":59}},{"path":"src/main/java/duke/task/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"SiTingST"},"content":"package duke.task;"},{"lineNumber":2,"author":{"gitId":"SiTingST"},"content":""},{"lineNumber":3,"author":{"gitId":"SiTingST"},"content":"import java.time.LocalDate;"},{"lineNumber":4,"author":{"gitId":"SiTingST"},"content":"import java.time.LocalTime;"},{"lineNumber":5,"author":{"gitId":"SiTingST"},"content":"import java.time.format.DateTimeFormatter;"},{"lineNumber":6,"author":{"gitId":"SiTingST"},"content":""},{"lineNumber":7,"author":{"gitId":"SiTingST"},"content":"/**"},{"lineNumber":8,"author":{"gitId":"SiTingST"},"content":" * Task class to initialize and manage different type of tasks"},{"lineNumber":9,"author":{"gitId":"SiTingST"},"content":" */"},{"lineNumber":10,"author":{"gitId":"SiTingST"},"content":"public class Task {"},{"lineNumber":11,"author":{"gitId":"SiTingST"},"content":"    private static DateTimeFormatter timeFormatter \u003d DateTimeFormatter.ofPattern(\"HH:mm\");"},{"lineNumber":12,"author":{"gitId":"SiTingST"},"content":"    private static DateTimeFormatter dateFormatter \u003d DateTimeFormatter.ofPattern(\"yyyy-MM-dd\");"},{"lineNumber":13,"author":{"gitId":"SiTingST"},"content":""},{"lineNumber":14,"author":{"gitId":"SiTingST"},"content":"    protected String description;"},{"lineNumber":15,"author":{"gitId":"SiTingST"},"content":"    //Task status"},{"lineNumber":16,"author":{"gitId":"SiTingST"},"content":"    protected boolean isCompleted;"},{"lineNumber":17,"author":{"gitId":"SiTingST"},"content":""},{"lineNumber":18,"author":{"gitId":"SiTingST"},"content":"    public Task(){"},{"lineNumber":19,"author":{"gitId":"SiTingST"},"content":""},{"lineNumber":20,"author":{"gitId":"SiTingST"},"content":"    }"},{"lineNumber":21,"author":{"gitId":"SiTingST"},"content":""},{"lineNumber":22,"author":{"gitId":"SiTingST"},"content":"    /** Creates a task with description"},{"lineNumber":23,"author":{"gitId":"SiTingST"},"content":"     * @param description task description"},{"lineNumber":24,"author":{"gitId":"SiTingST"},"content":"     */"},{"lineNumber":25,"author":{"gitId":"SiTingST"},"content":"    public Task(String description) {"},{"lineNumber":26,"author":{"gitId":"SiTingST"},"content":"        this.description \u003d description;"},{"lineNumber":27,"author":{"gitId":"SiTingST"},"content":"        this.isCompleted \u003d false;"},{"lineNumber":28,"author":{"gitId":"SiTingST"},"content":"    }"},{"lineNumber":29,"author":{"gitId":"SiTingST"},"content":""},{"lineNumber":30,"author":{"gitId":"SiTingST"},"content":"    /** Creates a task with description and status"},{"lineNumber":31,"author":{"gitId":"SiTingST"},"content":"     * @param description task description"},{"lineNumber":32,"author":{"gitId":"SiTingST"},"content":"     * @param isCompleted task status"},{"lineNumber":33,"author":{"gitId":"SiTingST"},"content":"     */"},{"lineNumber":34,"author":{"gitId":"SiTingST"},"content":"    public Task(String description, boolean isCompleted) {"},{"lineNumber":35,"author":{"gitId":"SiTingST"},"content":"        this.description \u003d description;"},{"lineNumber":36,"author":{"gitId":"SiTingST"},"content":"        this.isCompleted \u003d isCompleted;"},{"lineNumber":37,"author":{"gitId":"SiTingST"},"content":"    }"},{"lineNumber":38,"author":{"gitId":"SiTingST"},"content":""},{"lineNumber":39,"author":{"gitId":"SiTingST"},"content":"    /**"},{"lineNumber":40,"author":{"gitId":"SiTingST"},"content":"     * Set task status to completed"},{"lineNumber":41,"author":{"gitId":"SiTingST"},"content":"     */"},{"lineNumber":42,"author":{"gitId":"SiTingST"},"content":"    public void setCompleted() {"},{"lineNumber":43,"author":{"gitId":"SiTingST"},"content":"        this.isCompleted \u003d true;"},{"lineNumber":44,"author":{"gitId":"SiTingST"},"content":"    }"},{"lineNumber":45,"author":{"gitId":"SiTingST"},"content":""},{"lineNumber":46,"author":{"gitId":"SiTingST"},"content":"    /** Returns task status in the form of a tick or a cross"},{"lineNumber":47,"author":{"gitId":"SiTingST"},"content":"     * @return a tick if the task status is completed or a cross if the task status is incomplete"},{"lineNumber":48,"author":{"gitId":"SiTingST"},"content":"     */"},{"lineNumber":49,"author":{"gitId":"SiTingST"},"content":"    public String getStatus() {"},{"lineNumber":50,"author":{"gitId":"SiTingST"},"content":"        return (this.isCompleted ? \"\\u2713\" : \"\\u2718\");"},{"lineNumber":51,"author":{"gitId":"SiTingST"},"content":"    }"},{"lineNumber":52,"author":{"gitId":"SiTingST"},"content":""},{"lineNumber":53,"author":{"gitId":"SiTingST"},"content":"    /** Returns task description of task"},{"lineNumber":54,"author":{"gitId":"SiTingST"},"content":"     */"},{"lineNumber":55,"author":{"gitId":"SiTingST"},"content":"    public String getTaskDescription() {"},{"lineNumber":56,"author":{"gitId":"SiTingST"},"content":"        return this.description;"},{"lineNumber":57,"author":{"gitId":"SiTingST"},"content":"    }"},{"lineNumber":58,"author":{"gitId":"SiTingST"},"content":""},{"lineNumber":59,"author":{"gitId":"SiTingST"},"content":"    /**"},{"lineNumber":60,"author":{"gitId":"SiTingST"},"content":"     * Returns a customized representation of the task to be added to the data file"},{"lineNumber":61,"author":{"gitId":"SiTingST"},"content":"     * @return string representation of a task"},{"lineNumber":62,"author":{"gitId":"SiTingST"},"content":"     */"},{"lineNumber":63,"author":{"gitId":"SiTingST"},"content":"    public String changeFormat() {"},{"lineNumber":64,"author":{"gitId":"SiTingST"},"content":"        return \",\" + this.isCompleted + \",\" + this.getTaskDescription();"},{"lineNumber":65,"author":{"gitId":"SiTingST"},"content":"    }"},{"lineNumber":66,"author":{"gitId":"SiTingST"},"content":""},{"lineNumber":67,"author":{"gitId":"SiTingST"},"content":"    /** Convert the task information stored in data file to task objects"},{"lineNumber":68,"author":{"gitId":"SiTingST"},"content":"     * @param taskDescription task description from data file"},{"lineNumber":69,"author":{"gitId":"SiTingST"},"content":"     * @return task"},{"lineNumber":70,"author":{"gitId":"SiTingST"},"content":"     */"},{"lineNumber":71,"author":{"gitId":"SiTingST"},"content":"    public Task changeToTaskFormat(String taskDescription) {"},{"lineNumber":72,"author":{"gitId":"SiTingST"},"content":""},{"lineNumber":73,"author":{"gitId":"SiTingST"},"content":"        assert taskDescription !\u003d null : \"Task identifier from data file should be specified\";"},{"lineNumber":74,"author":{"gitId":"SiTingST"},"content":"        if (taskDescription.charAt(0) \u003d\u003d \u0027T\u0027) {"},{"lineNumber":75,"author":{"gitId":"SiTingST"},"content":"            String[] tasks \u003d taskDescription.split(\",\");"},{"lineNumber":76,"author":{"gitId":"SiTingST"},"content":""},{"lineNumber":77,"author":{"gitId":"SiTingST"},"content":"            return new ToDo(tasks[2], Boolean.parseBoolean(tasks[1]));"},{"lineNumber":78,"author":{"gitId":"SiTingST"},"content":"        } else if (taskDescription.charAt(0) \u003d\u003d \u0027D\u0027) {"},{"lineNumber":79,"author":{"gitId":"SiTingST"},"content":"            String[] tasks \u003d taskDescription.split(\",\");"},{"lineNumber":80,"author":{"gitId":"SiTingST"},"content":"            LocalDate date \u003d LocalDate.parse(tasks[3], dateFormatter);"},{"lineNumber":81,"author":{"gitId":"SiTingST"},"content":"            LocalTime startTime \u003d LocalTime.parse(tasks[4], timeFormatter);"},{"lineNumber":82,"author":{"gitId":"SiTingST"},"content":""},{"lineNumber":83,"author":{"gitId":"SiTingST"},"content":"            return new Deadline(tasks[2], Boolean.parseBoolean(tasks[1]), date, startTime);"},{"lineNumber":84,"author":{"gitId":"SiTingST"},"content":"        } else if (taskDescription.charAt(0) \u003d\u003d \u0027E\u0027) {"},{"lineNumber":85,"author":{"gitId":"SiTingST"},"content":"            String[] tasks \u003d taskDescription.split(\",\");"},{"lineNumber":86,"author":{"gitId":"SiTingST"},"content":"            LocalDate date \u003d LocalDate.parse(tasks[3], dateFormatter);"},{"lineNumber":87,"author":{"gitId":"SiTingST"},"content":"            LocalTime startTime \u003d LocalTime.parse(tasks[4], timeFormatter);"},{"lineNumber":88,"author":{"gitId":"SiTingST"},"content":"            LocalTime endTime \u003d LocalTime.parse(tasks[5], timeFormatter);"},{"lineNumber":89,"author":{"gitId":"SiTingST"},"content":""},{"lineNumber":90,"author":{"gitId":"SiTingST"},"content":"            return new Event(tasks[2], Boolean.parseBoolean(tasks[1]), date, startTime, endTime);"},{"lineNumber":91,"author":{"gitId":"SiTingST"},"content":"        } else {"},{"lineNumber":92,"author":{"gitId":"SiTingST"},"content":"            return new Task();"},{"lineNumber":93,"author":{"gitId":"SiTingST"},"content":"        }"},{"lineNumber":94,"author":{"gitId":"SiTingST"},"content":"    }"},{"lineNumber":95,"author":{"gitId":"SiTingST"},"content":""},{"lineNumber":96,"author":{"gitId":"SiTingST"},"content":"    /**"},{"lineNumber":97,"author":{"gitId":"SiTingST"},"content":"     * Check for duplication of task"},{"lineNumber":98,"author":{"gitId":"SiTingST"},"content":"     * @param task"},{"lineNumber":99,"author":{"gitId":"SiTingST"},"content":"     * @return boolean true if task is duplicated"},{"lineNumber":100,"author":{"gitId":"SiTingST"},"content":"     */"},{"lineNumber":101,"author":{"gitId":"SiTingST"},"content":""},{"lineNumber":102,"author":{"gitId":"SiTingST"},"content":"    public boolean isSameTask(Task task) {"},{"lineNumber":103,"author":{"gitId":"SiTingST"},"content":"        return this.getTaskDescription().equals(task.getTaskDescription());"},{"lineNumber":104,"author":{"gitId":"SiTingST"},"content":"    }"},{"lineNumber":105,"author":{"gitId":"SiTingST"},"content":""},{"lineNumber":106,"author":{"gitId":"SiTingST"},"content":"    /**"},{"lineNumber":107,"author":{"gitId":"SiTingST"},"content":"     * Returns a customized representation of the task to the user"},{"lineNumber":108,"author":{"gitId":"SiTingST"},"content":"     * @return string representation of task to be displayed to the user"},{"lineNumber":109,"author":{"gitId":"SiTingST"},"content":"     */"},{"lineNumber":110,"author":{"gitId":"SiTingST"},"content":"    @Override"},{"lineNumber":111,"author":{"gitId":"SiTingST"},"content":"    public String toString() {"},{"lineNumber":112,"author":{"gitId":"SiTingST"},"content":"        return this.getTaskDescription() + \"[\" + this.getStatus() + \"] \";"},{"lineNumber":113,"author":{"gitId":"SiTingST"},"content":"    }"},{"lineNumber":114,"author":{"gitId":"SiTingST"},"content":"}"}],"authorContributionMap":{"SiTingST":114}},{"path":"src/main/java/duke/task/ToDo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"SiTingST"},"content":"package duke.task;"},{"lineNumber":2,"author":{"gitId":"SiTingST"},"content":""},{"lineNumber":3,"author":{"gitId":"SiTingST"},"content":"/**"},{"lineNumber":4,"author":{"gitId":"SiTingST"},"content":" * Todo class initialize and manage todo tasks."},{"lineNumber":5,"author":{"gitId":"SiTingST"},"content":" */"},{"lineNumber":6,"author":{"gitId":"SiTingST"},"content":""},{"lineNumber":7,"author":{"gitId":"SiTingST"},"content":"public class ToDo extends Task {"},{"lineNumber":8,"author":{"gitId":"SiTingST"},"content":""},{"lineNumber":9,"author":{"gitId":"SiTingST"},"content":"    /**"},{"lineNumber":10,"author":{"gitId":"SiTingST"},"content":"     * Create a todo task with description and status"},{"lineNumber":11,"author":{"gitId":"SiTingST"},"content":"     * @param description task description"},{"lineNumber":12,"author":{"gitId":"SiTingST"},"content":"     * @param isCompleted task status"},{"lineNumber":13,"author":{"gitId":"SiTingST"},"content":"     */"},{"lineNumber":14,"author":{"gitId":"SiTingST"},"content":"    public ToDo(String description, Boolean isCompleted) {"},{"lineNumber":15,"author":{"gitId":"SiTingST"},"content":"        super(description, isCompleted);"},{"lineNumber":16,"author":{"gitId":"SiTingST"},"content":"    }"},{"lineNumber":17,"author":{"gitId":"SiTingST"},"content":""},{"lineNumber":18,"author":{"gitId":"SiTingST"},"content":"    /**"},{"lineNumber":19,"author":{"gitId":"SiTingST"},"content":"     * Create a todo task with task description"},{"lineNumber":20,"author":{"gitId":"SiTingST"},"content":"     * @param description task description"},{"lineNumber":21,"author":{"gitId":"SiTingST"},"content":"     */"},{"lineNumber":22,"author":{"gitId":"SiTingST"},"content":"    public ToDo(String description) {"},{"lineNumber":23,"author":{"gitId":"SiTingST"},"content":"        super(description);"},{"lineNumber":24,"author":{"gitId":"SiTingST"},"content":"    }"},{"lineNumber":25,"author":{"gitId":"SiTingST"},"content":""},{"lineNumber":26,"author":{"gitId":"SiTingST"},"content":"    /**"},{"lineNumber":27,"author":{"gitId":"SiTingST"},"content":"     * Returns a string representation of todo task to be added to the data file"},{"lineNumber":28,"author":{"gitId":"SiTingST"},"content":"     * @return string representation of todo task"},{"lineNumber":29,"author":{"gitId":"SiTingST"},"content":"     */"},{"lineNumber":30,"author":{"gitId":"SiTingST"},"content":"    @Override"},{"lineNumber":31,"author":{"gitId":"SiTingST"},"content":"    public String changeFormat() {"},{"lineNumber":32,"author":{"gitId":"SiTingST"},"content":"        return \"T\" + super.changeFormat();"},{"lineNumber":33,"author":{"gitId":"SiTingST"},"content":"    }"},{"lineNumber":34,"author":{"gitId":"SiTingST"},"content":""},{"lineNumber":35,"author":{"gitId":"SiTingST"},"content":"    /**"},{"lineNumber":36,"author":{"gitId":"SiTingST"},"content":"     * Returns a customized representation of the todo task to the user"},{"lineNumber":37,"author":{"gitId":"SiTingST"},"content":"     * @return string representation of todo task to be displayed to the user"},{"lineNumber":38,"author":{"gitId":"SiTingST"},"content":"     */"},{"lineNumber":39,"author":{"gitId":"SiTingST"},"content":"    @Override"},{"lineNumber":40,"author":{"gitId":"SiTingST"},"content":"    public String toString() {"},{"lineNumber":41,"author":{"gitId":"SiTingST"},"content":"        return \" Todo:\" + super.toString();"},{"lineNumber":42,"author":{"gitId":"SiTingST"},"content":"    }"},{"lineNumber":43,"author":{"gitId":"SiTingST"},"content":"}"}],"authorContributionMap":{"SiTingST":43}},{"path":"src/main/java/duke/tasklist/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"SiTingST"},"content":"package duke.tasklist;"},{"lineNumber":2,"author":{"gitId":"SiTingST"},"content":""},{"lineNumber":3,"author":{"gitId":"SiTingST"},"content":"import java.time.LocalDate;"},{"lineNumber":4,"author":{"gitId":"SiTingST"},"content":"import java.time.LocalTime;"},{"lineNumber":5,"author":{"gitId":"SiTingST"},"content":"import java.util.ArrayList;"},{"lineNumber":6,"author":{"gitId":"SiTingST"},"content":""},{"lineNumber":7,"author":{"gitId":"SiTingST"},"content":"import duke.exception.DukeException;"},{"lineNumber":8,"author":{"gitId":"SiTingST"},"content":"import duke.task.Deadline;"},{"lineNumber":9,"author":{"gitId":"SiTingST"},"content":"import duke.task.Event;"},{"lineNumber":10,"author":{"gitId":"SiTingST"},"content":"import duke.task.Task;"},{"lineNumber":11,"author":{"gitId":"SiTingST"},"content":"import duke.task.ToDo;"},{"lineNumber":12,"author":{"gitId":"SiTingST"},"content":"import duke.ui.UI;"},{"lineNumber":13,"author":{"gitId":"SiTingST"},"content":""},{"lineNumber":14,"author":{"gitId":"SiTingST"},"content":"/**"},{"lineNumber":15,"author":{"gitId":"SiTingST"},"content":" * TaskList interact with task class to facilitate the creation, deletion and update of task"},{"lineNumber":16,"author":{"gitId":"SiTingST"},"content":" */"},{"lineNumber":17,"author":{"gitId":"SiTingST"},"content":"public class TaskList {"},{"lineNumber":18,"author":{"gitId":"SiTingST"},"content":""},{"lineNumber":19,"author":{"gitId":"SiTingST"},"content":"    private static ArrayList\u003cTask\u003e taskArraylist \u003d new ArrayList\u003cTask\u003e();"},{"lineNumber":20,"author":{"gitId":"SiTingST"},"content":"    private static ArrayList\u003cTask\u003e findTaskArraylist \u003d new ArrayList\u003cTask\u003e();"},{"lineNumber":21,"author":{"gitId":"SiTingST"},"content":""},{"lineNumber":22,"author":{"gitId":"SiTingST"},"content":"    private static UI ui \u003d new UI();"},{"lineNumber":23,"author":{"gitId":"SiTingST"},"content":""},{"lineNumber":24,"author":{"gitId":"SiTingST"},"content":"    /**"},{"lineNumber":25,"author":{"gitId":"SiTingST"},"content":"     * Add a todo task into the task list"},{"lineNumber":26,"author":{"gitId":"SiTingST"},"content":"     * @param description task description"},{"lineNumber":27,"author":{"gitId":"SiTingST"},"content":"     * @return Boolean true if the task is duplicated in the task list"},{"lineNumber":28,"author":{"gitId":"SiTingST"},"content":"     */"},{"lineNumber":29,"author":{"gitId":"SiTingST"},"content":"    public Boolean addToDo(String description) {"},{"lineNumber":30,"author":{"gitId":"SiTingST"},"content":""},{"lineNumber":31,"author":{"gitId":"SiTingST"},"content":"        Task toDo \u003d new ToDo(description);"},{"lineNumber":32,"author":{"gitId":"SiTingST"},"content":"        boolean isDuplicate \u003d false;"},{"lineNumber":33,"author":{"gitId":"SiTingST"},"content":"        for (int i \u003d 0; i \u003c taskArraylist.size(); i++) {"},{"lineNumber":34,"author":{"gitId":"SiTingST"},"content":"            isDuplicate \u003d this.getTaskListArray().get(i).isSameTask(toDo);"},{"lineNumber":35,"author":{"gitId":"SiTingST"},"content":"            if (isDuplicate) {"},{"lineNumber":36,"author":{"gitId":"SiTingST"},"content":"                break;"},{"lineNumber":37,"author":{"gitId":"SiTingST"},"content":"            }"},{"lineNumber":38,"author":{"gitId":"SiTingST"},"content":"        }"},{"lineNumber":39,"author":{"gitId":"SiTingST"},"content":"        if (!isDuplicate) {"},{"lineNumber":40,"author":{"gitId":"SiTingST"},"content":"            taskArraylist.add(toDo);"},{"lineNumber":41,"author":{"gitId":"SiTingST"},"content":"        }"},{"lineNumber":42,"author":{"gitId":"SiTingST"},"content":"        return isDuplicate;"},{"lineNumber":43,"author":{"gitId":"SiTingST"},"content":"    }"},{"lineNumber":44,"author":{"gitId":"SiTingST"},"content":""},{"lineNumber":45,"author":{"gitId":"SiTingST"},"content":"    /**"},{"lineNumber":46,"author":{"gitId":"SiTingST"},"content":"     * Add a deadline task into the task list"},{"lineNumber":47,"author":{"gitId":"SiTingST"},"content":"     * @param description task description"},{"lineNumber":48,"author":{"gitId":"SiTingST"},"content":"     * @param dueDate due date"},{"lineNumber":49,"author":{"gitId":"SiTingST"},"content":"     * @param endTime end time"},{"lineNumber":50,"author":{"gitId":"SiTingST"},"content":"     * @return Boolean true if the task is duplicated in the task list"},{"lineNumber":51,"author":{"gitId":"SiTingST"},"content":"     */"},{"lineNumber":52,"author":{"gitId":"SiTingST"},"content":"    public Boolean addDeadline(String description, LocalDate dueDate, LocalTime endTime) {"},{"lineNumber":53,"author":{"gitId":"SiTingST"},"content":""},{"lineNumber":54,"author":{"gitId":"SiTingST"},"content":"        Task deadline \u003d new Deadline(description, dueDate, endTime);"},{"lineNumber":55,"author":{"gitId":"SiTingST"},"content":"        boolean isDuplicate \u003d false;"},{"lineNumber":56,"author":{"gitId":"SiTingST"},"content":"        for (int i \u003d 0; i \u003c taskArraylist.size(); i++) {"},{"lineNumber":57,"author":{"gitId":"SiTingST"},"content":"            isDuplicate \u003d this.getTaskListArray().get(i).isSameTask(deadline);"},{"lineNumber":58,"author":{"gitId":"SiTingST"},"content":"            if (isDuplicate) {"},{"lineNumber":59,"author":{"gitId":"SiTingST"},"content":"                break;"},{"lineNumber":60,"author":{"gitId":"SiTingST"},"content":"            }"},{"lineNumber":61,"author":{"gitId":"SiTingST"},"content":"        }"},{"lineNumber":62,"author":{"gitId":"SiTingST"},"content":"        if (!isDuplicate) {"},{"lineNumber":63,"author":{"gitId":"SiTingST"},"content":"            taskArraylist.add(deadline);"},{"lineNumber":64,"author":{"gitId":"SiTingST"},"content":"        }"},{"lineNumber":65,"author":{"gitId":"SiTingST"},"content":"        return isDuplicate;"},{"lineNumber":66,"author":{"gitId":"SiTingST"},"content":"    }"},{"lineNumber":67,"author":{"gitId":"SiTingST"},"content":""},{"lineNumber":68,"author":{"gitId":"SiTingST"},"content":"    /**"},{"lineNumber":69,"author":{"gitId":"SiTingST"},"content":"     * Add an event task into the task list"},{"lineNumber":70,"author":{"gitId":"SiTingST"},"content":"     * @param description task description"},{"lineNumber":71,"author":{"gitId":"SiTingST"},"content":"     * @param dueDate due date"},{"lineNumber":72,"author":{"gitId":"SiTingST"},"content":"     * @param startTime start time"},{"lineNumber":73,"author":{"gitId":"SiTingST"},"content":"     * @param endTime end time"},{"lineNumber":74,"author":{"gitId":"SiTingST"},"content":"     * @return Boolean true if the task is duplicated in the task list"},{"lineNumber":75,"author":{"gitId":"SiTingST"},"content":"     */"},{"lineNumber":76,"author":{"gitId":"SiTingST"},"content":"    public Boolean addEvent(String description, LocalDate dueDate, LocalTime startTime, LocalTime endTime) {"},{"lineNumber":77,"author":{"gitId":"SiTingST"},"content":""},{"lineNumber":78,"author":{"gitId":"SiTingST"},"content":"        Task event \u003d new Event(description, false , dueDate, startTime, endTime);"},{"lineNumber":79,"author":{"gitId":"SiTingST"},"content":"        boolean isDuplicate \u003d false;"},{"lineNumber":80,"author":{"gitId":"SiTingST"},"content":"        for (int i \u003d 0; i \u003c taskArraylist.size(); i++) {"},{"lineNumber":81,"author":{"gitId":"SiTingST"},"content":"            isDuplicate \u003d this.getTaskListArray().get(i).isSameTask(event);"},{"lineNumber":82,"author":{"gitId":"SiTingST"},"content":"            if (isDuplicate) {"},{"lineNumber":83,"author":{"gitId":"SiTingST"},"content":"                break;"},{"lineNumber":84,"author":{"gitId":"SiTingST"},"content":"            }"},{"lineNumber":85,"author":{"gitId":"SiTingST"},"content":"        }"},{"lineNumber":86,"author":{"gitId":"SiTingST"},"content":""},{"lineNumber":87,"author":{"gitId":"SiTingST"},"content":"        if (!isDuplicate) {"},{"lineNumber":88,"author":{"gitId":"SiTingST"},"content":"            taskArraylist.add(event);"},{"lineNumber":89,"author":{"gitId":"SiTingST"},"content":"        }"},{"lineNumber":90,"author":{"gitId":"SiTingST"},"content":""},{"lineNumber":91,"author":{"gitId":"SiTingST"},"content":"        return isDuplicate;"},{"lineNumber":92,"author":{"gitId":"SiTingST"},"content":"    }"},{"lineNumber":93,"author":{"gitId":"SiTingST"},"content":""},{"lineNumber":94,"author":{"gitId":"SiTingST"},"content":"    /**"},{"lineNumber":95,"author":{"gitId":"SiTingST"},"content":"     * Display all task in the task list in their string representation"},{"lineNumber":96,"author":{"gitId":"SiTingST"},"content":"     * @param commandType type of command"},{"lineNumber":97,"author":{"gitId":"SiTingST"},"content":"     * @return"},{"lineNumber":98,"author":{"gitId":"SiTingST"},"content":"     */"},{"lineNumber":99,"author":{"gitId":"SiTingST"},"content":"    public String showAllTask(String commandType) {"},{"lineNumber":100,"author":{"gitId":"SiTingST"},"content":""},{"lineNumber":101,"author":{"gitId":"SiTingST"},"content":"        ArrayList\u003cTask\u003e taskList \u003d new ArrayList\u003c\u003e();"},{"lineNumber":102,"author":{"gitId":"SiTingST"},"content":"        String allTask \u003d \"\";"},{"lineNumber":103,"author":{"gitId":"SiTingST"},"content":""},{"lineNumber":104,"author":{"gitId":"SiTingST"},"content":"        if (commandType.equals(\"find\") \u0026\u0026 findTaskArraylist.size() \u003e 0) {"},{"lineNumber":105,"author":{"gitId":"SiTingST"},"content":"            taskList \u003d findTaskArraylist;"},{"lineNumber":106,"author":{"gitId":"SiTingST"},"content":"            allTask \u003d UI.displayHeader(\"find\");"},{"lineNumber":107,"author":{"gitId":"SiTingST"},"content":"        } else if (commandType.equals(\"list\") \u0026\u0026 taskArraylist.size() \u003e 0) {"},{"lineNumber":108,"author":{"gitId":"SiTingST"},"content":"            taskList \u003d taskArraylist;"},{"lineNumber":109,"author":{"gitId":"SiTingST"},"content":"            allTask \u003d UI.displayHeader(\"list\");"},{"lineNumber":110,"author":{"gitId":"SiTingST"},"content":"        } else if (commandType.equals(\"find\")) {"},{"lineNumber":111,"author":{"gitId":"SiTingST"},"content":"            allTask \u003d ui.displayNoTaskFoundMessage();"},{"lineNumber":112,"author":{"gitId":"SiTingST"},"content":"        } else {"},{"lineNumber":113,"author":{"gitId":"SiTingST"},"content":"            allTask \u003d ui.displayNoTaskInList();"},{"lineNumber":114,"author":{"gitId":"SiTingST"},"content":"        }"},{"lineNumber":115,"author":{"gitId":"SiTingST"},"content":""},{"lineNumber":116,"author":{"gitId":"SiTingST"},"content":"        for (int i \u003d 0; i \u003c taskList.size(); i++) {"},{"lineNumber":117,"author":{"gitId":"SiTingST"},"content":"            if (!taskList.get(i).toString().isBlank()) {"},{"lineNumber":118,"author":{"gitId":"SiTingST"},"content":"                allTask \u003d allTask + ui.displayTask(i, taskList.get(i));"},{"lineNumber":119,"author":{"gitId":"SiTingST"},"content":"            }"},{"lineNumber":120,"author":{"gitId":"SiTingST"},"content":"        }"},{"lineNumber":121,"author":{"gitId":"SiTingST"},"content":""},{"lineNumber":122,"author":{"gitId":"SiTingST"},"content":"        return allTask;"},{"lineNumber":123,"author":{"gitId":"SiTingST"},"content":"    }"},{"lineNumber":124,"author":{"gitId":"SiTingST"},"content":""},{"lineNumber":125,"author":{"gitId":"SiTingST"},"content":"    /**"},{"lineNumber":126,"author":{"gitId":"SiTingST"},"content":"     *  Update the task status of a specific task to completed given the index of a task"},{"lineNumber":127,"author":{"gitId":"SiTingST"},"content":"     * @param index position of task in the task list"},{"lineNumber":128,"author":{"gitId":"SiTingST"},"content":"     * @return"},{"lineNumber":129,"author":{"gitId":"SiTingST"},"content":"     */"},{"lineNumber":130,"author":{"gitId":"SiTingST"},"content":"    public String markAsDone(int index) throws DukeException {"},{"lineNumber":131,"author":{"gitId":"SiTingST"},"content":""},{"lineNumber":132,"author":{"gitId":"SiTingST"},"content":"        isValidIndex(index);"},{"lineNumber":133,"author":{"gitId":"SiTingST"},"content":"        if (taskArraylist.get(index).getStatus().equals(\"\\u2713\")) {"},{"lineNumber":134,"author":{"gitId":"SiTingST"},"content":"            throw new DukeException(UI.displayMarkingCompletedAsDone());"},{"lineNumber":135,"author":{"gitId":"SiTingST"},"content":"        }"},{"lineNumber":136,"author":{"gitId":"SiTingST"},"content":"        taskArraylist.get(index).setCompleted();"},{"lineNumber":137,"author":{"gitId":"SiTingST"},"content":"        return ui.displayDoneTaskMessage(taskArraylist.get(index));"},{"lineNumber":138,"author":{"gitId":"SiTingST"},"content":"    }"},{"lineNumber":139,"author":{"gitId":"SiTingST"},"content":""},{"lineNumber":140,"author":{"gitId":"SiTingST"},"content":"    /**"},{"lineNumber":141,"author":{"gitId":"SiTingST"},"content":"     * Delete a specific task given the index of a task in the task list"},{"lineNumber":142,"author":{"gitId":"SiTingST"},"content":"     * @param index position of task in list"},{"lineNumber":143,"author":{"gitId":"SiTingST"},"content":"     * @return"},{"lineNumber":144,"author":{"gitId":"SiTingST"},"content":"     */"},{"lineNumber":145,"author":{"gitId":"SiTingST"},"content":"    public String deleteTask(int index) throws DukeException {"},{"lineNumber":146,"author":{"gitId":"SiTingST"},"content":""},{"lineNumber":147,"author":{"gitId":"SiTingST"},"content":"        isValidIndex(index);"},{"lineNumber":148,"author":{"gitId":"SiTingST"},"content":"        String output \u003d ui.displayDeletedTaskMessage(taskArraylist.get(index));"},{"lineNumber":149,"author":{"gitId":"SiTingST"},"content":"        taskArraylist.remove(index);"},{"lineNumber":150,"author":{"gitId":"SiTingST"},"content":"        return output;"},{"lineNumber":151,"author":{"gitId":"SiTingST"},"content":"    }"},{"lineNumber":152,"author":{"gitId":"SiTingST"},"content":""},{"lineNumber":153,"author":{"gitId":"SiTingST"},"content":"    /**"},{"lineNumber":154,"author":{"gitId":"SiTingST"},"content":"     * Returns the task list"},{"lineNumber":155,"author":{"gitId":"SiTingST"},"content":"     * @return task list"},{"lineNumber":156,"author":{"gitId":"SiTingST"},"content":"     */"},{"lineNumber":157,"author":{"gitId":"SiTingST"},"content":"    public ArrayList\u003cTask\u003e getTaskListArray() {"},{"lineNumber":158,"author":{"gitId":"SiTingST"},"content":"        return this.taskArraylist;"},{"lineNumber":159,"author":{"gitId":"SiTingST"},"content":"    }"},{"lineNumber":160,"author":{"gitId":"SiTingST"},"content":""},{"lineNumber":161,"author":{"gitId":"SiTingST"},"content":"    /** Change the current task list to given task list"},{"lineNumber":162,"author":{"gitId":"SiTingST"},"content":"     * @param taskArrayList task list"},{"lineNumber":163,"author":{"gitId":"SiTingST"},"content":"     */"},{"lineNumber":164,"author":{"gitId":"SiTingST"},"content":"    public void setTaskList(ArrayList\u003cTask\u003e taskArrayList) {"},{"lineNumber":165,"author":{"gitId":"SiTingST"},"content":"        this.taskArraylist \u003d taskArrayList;"},{"lineNumber":166,"author":{"gitId":"SiTingST"},"content":"    }"},{"lineNumber":167,"author":{"gitId":"SiTingST"},"content":""},{"lineNumber":168,"author":{"gitId":"SiTingST"},"content":"    /**"},{"lineNumber":169,"author":{"gitId":"SiTingST"},"content":"     * Find tasks that matches or contains keywords searched by the user"},{"lineNumber":170,"author":{"gitId":"SiTingST"},"content":"     * @param input"},{"lineNumber":171,"author":{"gitId":"SiTingST"},"content":"     * @param list task list"},{"lineNumber":172,"author":{"gitId":"SiTingST"},"content":"     * @return String string representation of specific task"},{"lineNumber":173,"author":{"gitId":"SiTingST"},"content":"     */"},{"lineNumber":174,"author":{"gitId":"SiTingST"},"content":"    public String findTask(String input, TaskList list) {"},{"lineNumber":175,"author":{"gitId":"SiTingST"},"content":"        findTaskArraylist.clear();"},{"lineNumber":176,"author":{"gitId":"SiTingST"},"content":"        taskArraylist \u003d list.getTaskListArray();"},{"lineNumber":177,"author":{"gitId":"SiTingST"},"content":"        for (int i \u003d 0; i \u003c taskArraylist.size(); i++) {"},{"lineNumber":178,"author":{"gitId":"SiTingST"},"content":"            if (taskArraylist.get(i).getTaskDescription().contains(input)) {"},{"lineNumber":179,"author":{"gitId":"SiTingST"},"content":"                findTaskArraylist.add(taskArraylist.get(i));"},{"lineNumber":180,"author":{"gitId":"SiTingST"},"content":"            }"},{"lineNumber":181,"author":{"gitId":"SiTingST"},"content":"        }"},{"lineNumber":182,"author":{"gitId":"SiTingST"},"content":"        return showAllTask(\"find\");"},{"lineNumber":183,"author":{"gitId":"SiTingST"},"content":"    }"},{"lineNumber":184,"author":{"gitId":"SiTingST"},"content":""},{"lineNumber":185,"author":{"gitId":"SiTingST"},"content":"    /**"},{"lineNumber":186,"author":{"gitId":"SiTingST"},"content":"     * Returns a specific task given the index of the task in the task list"},{"lineNumber":187,"author":{"gitId":"SiTingST"},"content":"     * @param index index of task in the task list"},{"lineNumber":188,"author":{"gitId":"SiTingST"},"content":"     * @return task specific task given the index"},{"lineNumber":189,"author":{"gitId":"SiTingST"},"content":"     */"},{"lineNumber":190,"author":{"gitId":"SiTingST"},"content":"    public Task getTask(int index) {"},{"lineNumber":191,"author":{"gitId":"SiTingST"},"content":"        return taskArraylist.get(index);"},{"lineNumber":192,"author":{"gitId":"SiTingST"},"content":"    }"},{"lineNumber":193,"author":{"gitId":"SiTingST"},"content":""},{"lineNumber":194,"author":{"gitId":"SiTingST"},"content":"    /**"},{"lineNumber":195,"author":{"gitId":"SiTingST"},"content":"     * Check if task index given is valid"},{"lineNumber":196,"author":{"gitId":"SiTingST"},"content":"     * @param index task index"},{"lineNumber":197,"author":{"gitId":"SiTingST"},"content":"     * @throws DukeException"},{"lineNumber":198,"author":{"gitId":"SiTingST"},"content":"     */"},{"lineNumber":199,"author":{"gitId":"SiTingST"},"content":"    public static void isValidIndex(int index) throws DukeException {"},{"lineNumber":200,"author":{"gitId":"SiTingST"},"content":"        if (index \u003c 0) {"},{"lineNumber":201,"author":{"gitId":"SiTingST"},"content":"            throw new DukeException(UI.displayInvalidTaskIndex());"},{"lineNumber":202,"author":{"gitId":"SiTingST"},"content":"        } else if (taskArraylist.isEmpty() || taskArraylist.size() \u003c\u003d index) {"},{"lineNumber":203,"author":{"gitId":"SiTingST"},"content":"            throw new DukeException(UI.displayNoTaskFoundMessage());"},{"lineNumber":204,"author":{"gitId":"SiTingST"},"content":"        }"},{"lineNumber":205,"author":{"gitId":"SiTingST"},"content":"    }"},{"lineNumber":206,"author":{"gitId":"SiTingST"},"content":"}"},{"lineNumber":207,"author":{"gitId":"SiTingST"},"content":""}],"authorContributionMap":{"SiTingST":207}},{"path":"src/main/java/duke/ui/UI.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"SiTingST"},"content":"package duke.ui;"},{"lineNumber":2,"author":{"gitId":"SiTingST"},"content":""},{"lineNumber":3,"author":{"gitId":"SiTingST"},"content":"import duke.task.Task;"},{"lineNumber":4,"author":{"gitId":"SiTingST"},"content":""},{"lineNumber":5,"author":{"gitId":"SiTingST"},"content":"/**"},{"lineNumber":6,"author":{"gitId":"SiTingST"},"content":" * UI class to handle interaction with users"},{"lineNumber":7,"author":{"gitId":"SiTingST"},"content":" */"},{"lineNumber":8,"author":{"gitId":"SiTingST"},"content":"public class UI {"},{"lineNumber":9,"author":{"gitId":"SiTingST"},"content":""},{"lineNumber":10,"author":{"gitId":"SiTingST"},"content":"    /**"},{"lineNumber":11,"author":{"gitId":"SiTingST"},"content":"     * Display a greeting message upon launching the application"},{"lineNumber":12,"author":{"gitId":"SiTingST"},"content":"     */"},{"lineNumber":13,"author":{"gitId":"SiTingST"},"content":"    public static String displayWelcomeMessage() {"},{"lineNumber":14,"author":{"gitId":"SiTingST"},"content":"        String output \u003d \"Hello! I am Will, your personal assistant.\" + \"\\n\""},{"lineNumber":15,"author":{"gitId":"SiTingST"},"content":"                + \"What can I do for you today?\";"},{"lineNumber":16,"author":{"gitId":"SiTingST"},"content":"        return output;"},{"lineNumber":17,"author":{"gitId":"SiTingST"},"content":"    }"},{"lineNumber":18,"author":{"gitId":"SiTingST"},"content":""},{"lineNumber":19,"author":{"gitId":"SiTingST"},"content":"    /**"},{"lineNumber":20,"author":{"gitId":"SiTingST"},"content":"     * Display a bye message"},{"lineNumber":21,"author":{"gitId":"SiTingST"},"content":"     */"},{"lineNumber":22,"author":{"gitId":"SiTingST"},"content":"    public static String displayEndMessage() {"},{"lineNumber":23,"author":{"gitId":"SiTingST"},"content":"        return \"Bye. Hope to see you again!\" + \"\\n\";"},{"lineNumber":24,"author":{"gitId":"SiTingST"},"content":"    }"},{"lineNumber":25,"author":{"gitId":"SiTingST"},"content":""},{"lineNumber":26,"author":{"gitId":"SiTingST"},"content":"    /**"},{"lineNumber":27,"author":{"gitId":"SiTingST"},"content":"     * Display a particular task in list with its customized format"},{"lineNumber":28,"author":{"gitId":"SiTingST"},"content":"     *"},{"lineNumber":29,"author":{"gitId":"SiTingST"},"content":"     * @param index index of task in task list"},{"lineNumber":30,"author":{"gitId":"SiTingST"},"content":"     * @param task  task"},{"lineNumber":31,"author":{"gitId":"SiTingST"},"content":"     */"},{"lineNumber":32,"author":{"gitId":"SiTingST"},"content":"    public String displayTask(int index, Task task) {"},{"lineNumber":33,"author":{"gitId":"SiTingST"},"content":"        return \"\\n\" + (index + 1) + \".\" + task.toString();"},{"lineNumber":34,"author":{"gitId":"SiTingST"},"content":"    }"},{"lineNumber":35,"author":{"gitId":"SiTingST"},"content":""},{"lineNumber":36,"author":{"gitId":"SiTingST"},"content":"    /**"},{"lineNumber":37,"author":{"gitId":"SiTingST"},"content":"     * Display a message to inform users that there is are no task in list"},{"lineNumber":38,"author":{"gitId":"SiTingST"},"content":"     */"},{"lineNumber":39,"author":{"gitId":"SiTingST"},"content":"    public String displayNoTaskInList() {"},{"lineNumber":40,"author":{"gitId":"SiTingST"},"content":"        return \"There are no tasks in list.\";"},{"lineNumber":41,"author":{"gitId":"SiTingST"},"content":"    }"},{"lineNumber":42,"author":{"gitId":"SiTingST"},"content":""},{"lineNumber":43,"author":{"gitId":"SiTingST"},"content":"    /**"},{"lineNumber":44,"author":{"gitId":"SiTingST"},"content":"     * Display a message to inform users that there is a duplicated task"},{"lineNumber":45,"author":{"gitId":"SiTingST"},"content":"     */"},{"lineNumber":46,"author":{"gitId":"SiTingST"},"content":"    public String displayDuplicatedMessage() {"},{"lineNumber":47,"author":{"gitId":"SiTingST"},"content":"        return \"Existing entries with same task description was found.\""},{"lineNumber":48,"author":{"gitId":"SiTingST"},"content":"                + \" Please add a new task.\";"},{"lineNumber":49,"author":{"gitId":"SiTingST"},"content":"    }"},{"lineNumber":50,"author":{"gitId":"SiTingST"},"content":""},{"lineNumber":51,"author":{"gitId":"SiTingST"},"content":"    /**"},{"lineNumber":52,"author":{"gitId":"SiTingST"},"content":"     * Display a message to inform users that this are no task"},{"lineNumber":53,"author":{"gitId":"SiTingST"},"content":"     */"},{"lineNumber":54,"author":{"gitId":"SiTingST"},"content":"    public static String displayNoTaskFoundMessage() {"},{"lineNumber":55,"author":{"gitId":"SiTingST"},"content":"        return \"No such task is found.\";"},{"lineNumber":56,"author":{"gitId":"SiTingST"},"content":"    }"},{"lineNumber":57,"author":{"gitId":"SiTingST"},"content":""},{"lineNumber":58,"author":{"gitId":"SiTingST"},"content":"    /**"},{"lineNumber":59,"author":{"gitId":"SiTingST"},"content":"     * Display a header to show the tasks in the current list"},{"lineNumber":60,"author":{"gitId":"SiTingST"},"content":"     */"},{"lineNumber":61,"author":{"gitId":"SiTingST"},"content":"    public static String displayHeader(String type) {"},{"lineNumber":62,"author":{"gitId":"SiTingST"},"content":"        if (type.equals(\"find\")) {"},{"lineNumber":63,"author":{"gitId":"SiTingST"},"content":"            return \"Here are the matching tasks in your list:\";"},{"lineNumber":64,"author":{"gitId":"SiTingST"},"content":""},{"lineNumber":65,"author":{"gitId":"SiTingST"},"content":"        } else {"},{"lineNumber":66,"author":{"gitId":"SiTingST"},"content":"            return \"Here are the tasks in your list:\";"},{"lineNumber":67,"author":{"gitId":"SiTingST"},"content":"        }"},{"lineNumber":68,"author":{"gitId":"SiTingST"},"content":"    }"},{"lineNumber":69,"author":{"gitId":"SiTingST"},"content":""},{"lineNumber":70,"author":{"gitId":"SiTingST"},"content":"    /**"},{"lineNumber":71,"author":{"gitId":"SiTingST"},"content":"     * Display a message to inform users that task index is invalid"},{"lineNumber":72,"author":{"gitId":"SiTingST"},"content":"     */"},{"lineNumber":73,"author":{"gitId":"SiTingST"},"content":"    public static String displayInvalidTaskIndex() {"},{"lineNumber":74,"author":{"gitId":"SiTingST"},"content":"        return \"Task index starts from 1. Please try again with a valid task index.\";"},{"lineNumber":75,"author":{"gitId":"SiTingST"},"content":"    }"},{"lineNumber":76,"author":{"gitId":"SiTingST"},"content":""},{"lineNumber":77,"author":{"gitId":"SiTingST"},"content":"    /**"},{"lineNumber":78,"author":{"gitId":"SiTingST"},"content":"     * Display a message to inform users that there are no known commands"},{"lineNumber":79,"author":{"gitId":"SiTingST"},"content":"     */"},{"lineNumber":80,"author":{"gitId":"SiTingST"},"content":"    public static String displayUnknownCommand() {"},{"lineNumber":81,"author":{"gitId":"SiTingST"},"content":"        return \"OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\";"},{"lineNumber":82,"author":{"gitId":"SiTingST"},"content":"    }"},{"lineNumber":83,"author":{"gitId":"SiTingST"},"content":""},{"lineNumber":84,"author":{"gitId":"SiTingST"},"content":"    /**"},{"lineNumber":85,"author":{"gitId":"SiTingST"},"content":"     * Display a message when users supply invalid parameter or format for the command"},{"lineNumber":86,"author":{"gitId":"SiTingST"},"content":"     */"},{"lineNumber":87,"author":{"gitId":"SiTingST"},"content":"    public static String displayInvalidParameter(String command) {"},{"lineNumber":88,"author":{"gitId":"SiTingST"},"content":""},{"lineNumber":89,"author":{"gitId":"SiTingST"},"content":"        if (command.equals(\"find\")) {"},{"lineNumber":90,"author":{"gitId":"SiTingST"},"content":"            return \"Please input task description to be searched.\";"},{"lineNumber":91,"author":{"gitId":"SiTingST"},"content":"        } else if (command.equals(\"done\")) {"},{"lineNumber":92,"author":{"gitId":"SiTingST"},"content":"            return \"Please input a valid task number to mark the task as complete.\";"},{"lineNumber":93,"author":{"gitId":"SiTingST"},"content":"        } else if (command.equals(\"delete\")) {"},{"lineNumber":94,"author":{"gitId":"SiTingST"},"content":"            return \"Please input a valid task number to delete the task.\";"},{"lineNumber":95,"author":{"gitId":"SiTingST"},"content":"        } else if (command.equals(\"wrongCommand\")) {"},{"lineNumber":96,"author":{"gitId":"SiTingST"},"content":"            return \"Wrong command to add deadline or start/end time. \""},{"lineNumber":97,"author":{"gitId":"SiTingST"},"content":"                    + \"Use /by for deadline and /at for event\";"},{"lineNumber":98,"author":{"gitId":"SiTingST"},"content":"        } else if (command.equals(\"noDescription\")) {"},{"lineNumber":99,"author":{"gitId":"SiTingST"},"content":"            return \"OOPS!!! The description of a task cannot be empty.\";"},{"lineNumber":100,"author":{"gitId":"SiTingST"},"content":"        } else if (command.equals(\"invalidTimeFormat\")) {"},{"lineNumber":101,"author":{"gitId":"SiTingST"},"content":"            return \"Please specify a valid time format (HHmm) for the task.\";"},{"lineNumber":102,"author":{"gitId":"SiTingST"},"content":"        } else if (command.equals(\"invalidDate\")) {"},{"lineNumber":103,"author":{"gitId":"SiTingST"},"content":"            return \"Please specify a valid due date in the format (DD/MM/YYYY) \""},{"lineNumber":104,"author":{"gitId":"SiTingST"},"content":"                    + \"and the date must not have already passed.\";"},{"lineNumber":105,"author":{"gitId":"SiTingST"},"content":"        } else if (command.equals(\"dateExtendTotalDateInMonth\")) {"},{"lineNumber":106,"author":{"gitId":"SiTingST"},"content":"            return \"Please specify a valid day in the month.\";"},{"lineNumber":107,"author":{"gitId":"SiTingST"},"content":"        } else if (command.equals(\"noDueTime\")) {"},{"lineNumber":108,"author":{"gitId":"SiTingST"},"content":"            return \"The due time for the task is missing.\";"},{"lineNumber":109,"author":{"gitId":"SiTingST"},"content":"        } else if (command.equals(\"noDueDate\")) {"},{"lineNumber":110,"author":{"gitId":"SiTingST"},"content":"            return \"The due date for the task is missing.\";"},{"lineNumber":111,"author":{"gitId":"SiTingST"},"content":"        } else {"},{"lineNumber":112,"author":{"gitId":"SiTingST"},"content":"            return null;"},{"lineNumber":113,"author":{"gitId":"SiTingST"},"content":"        }"},{"lineNumber":114,"author":{"gitId":"SiTingST"},"content":"    }"},{"lineNumber":115,"author":{"gitId":"SiTingST"},"content":""},{"lineNumber":116,"author":{"gitId":"SiTingST"},"content":"    /**"},{"lineNumber":117,"author":{"gitId":"SiTingST"},"content":"     * Display a message when users supply invalid parameter or format for an deadline"},{"lineNumber":118,"author":{"gitId":"SiTingST"},"content":"     */"},{"lineNumber":119,"author":{"gitId":"SiTingST"},"content":"    public static String displayDeadlineInvalidParameter(String command) {"},{"lineNumber":120,"author":{"gitId":"SiTingST"},"content":"        if (command.equals(\"extraParameter\")) {"},{"lineNumber":121,"author":{"gitId":"SiTingST"},"content":"            return \"Please follow the given format to add deadlines or \""},{"lineNumber":122,"author":{"gitId":"SiTingST"},"content":"                    + \"add one deadline at a time.\";"},{"lineNumber":123,"author":{"gitId":"SiTingST"},"content":"        } else if (command.equals(\"noDueDateOrWrongFormat\")) {"},{"lineNumber":124,"author":{"gitId":"SiTingST"},"content":"            return \"Please follow the given format to add deadlines: \""},{"lineNumber":125,"author":{"gitId":"SiTingST"},"content":"                    + \"event task description /at DD/MM/YYYY HHmm)\";"},{"lineNumber":126,"author":{"gitId":"SiTingST"},"content":"        } else {"},{"lineNumber":127,"author":{"gitId":"SiTingST"},"content":"            return null;"},{"lineNumber":128,"author":{"gitId":"SiTingST"},"content":"        }"},{"lineNumber":129,"author":{"gitId":"SiTingST"},"content":"    }"},{"lineNumber":130,"author":{"gitId":"SiTingST"},"content":""},{"lineNumber":131,"author":{"gitId":"SiTingST"},"content":"    /**"},{"lineNumber":132,"author":{"gitId":"SiTingST"},"content":"     * Display a message when users supply invalid parameter or format for an event"},{"lineNumber":133,"author":{"gitId":"SiTingST"},"content":"     */"},{"lineNumber":134,"author":{"gitId":"SiTingST"},"content":"    public static String displayEventInvalidParameter(String command) {"},{"lineNumber":135,"author":{"gitId":"SiTingST"},"content":""},{"lineNumber":136,"author":{"gitId":"SiTingST"},"content":"        if (command.equals(\"extraParameter\")) {"},{"lineNumber":137,"author":{"gitId":"SiTingST"},"content":"            return \"Please follow the given format to add events or \""},{"lineNumber":138,"author":{"gitId":"SiTingST"},"content":"                    + \"add one event at a time.\";"},{"lineNumber":139,"author":{"gitId":"SiTingST"},"content":"        } else if (command.equals(\"lesserParameterGiven\")) {"},{"lineNumber":140,"author":{"gitId":"SiTingST"},"content":"            return \"Please follow the given format to add events or \""},{"lineNumber":141,"author":{"gitId":"SiTingST"},"content":"                    + \"add one task at a time.\";"},{"lineNumber":142,"author":{"gitId":"SiTingST"},"content":"        } else if (command.equals(\"errorSeparatingTime\")) {"},{"lineNumber":143,"author":{"gitId":"SiTingST"},"content":"            return \"Please specify the start and end time in the expected format. \""},{"lineNumber":144,"author":{"gitId":"SiTingST"},"content":"                    + \"For ie, 1800-2000 or include start/end date\";"},{"lineNumber":145,"author":{"gitId":"SiTingST"},"content":"        } else if (command.equals(\"wrongTimeFormat\")) {"},{"lineNumber":146,"author":{"gitId":"SiTingST"},"content":"            return \"Please specify a valid start and end time (HHmm) for the task.\";"},{"lineNumber":147,"author":{"gitId":"SiTingST"},"content":"        } else if (command.equals(\"invalidTimeInput\")) {"},{"lineNumber":148,"author":{"gitId":"SiTingST"},"content":"            return \"Unable to add event with start time later than or equal to end time.\";"},{"lineNumber":149,"author":{"gitId":"SiTingST"},"content":"        } else if (command.equals(\"noDueDateOrWrongFormat\")) {"},{"lineNumber":150,"author":{"gitId":"SiTingST"},"content":"            return \"Please follow the given format to add events: \""},{"lineNumber":151,"author":{"gitId":"SiTingST"},"content":"                    + \"event task description /at DD/MM/YYYY HHmm-HHmm)\";"},{"lineNumber":152,"author":{"gitId":"SiTingST"},"content":"        } else {"},{"lineNumber":153,"author":{"gitId":"SiTingST"},"content":"            return null;"},{"lineNumber":154,"author":{"gitId":"SiTingST"},"content":"        }"},{"lineNumber":155,"author":{"gitId":"SiTingST"},"content":"    }"},{"lineNumber":156,"author":{"gitId":"SiTingST"},"content":""},{"lineNumber":157,"author":{"gitId":"SiTingST"},"content":"    /**"},{"lineNumber":158,"author":{"gitId":"SiTingST"},"content":"     * Display a message to inform users that task has been marked as complete"},{"lineNumber":159,"author":{"gitId":"SiTingST"},"content":"     */"},{"lineNumber":160,"author":{"gitId":"SiTingST"},"content":"    public static String displayMarkingCompletedAsDone() {"},{"lineNumber":161,"author":{"gitId":"SiTingST"},"content":"        return \"The task has already been marked as complete.\";"},{"lineNumber":162,"author":{"gitId":"SiTingST"},"content":"    }"},{"lineNumber":163,"author":{"gitId":"SiTingST"},"content":""},{"lineNumber":164,"author":{"gitId":"SiTingST"},"content":"    /**"},{"lineNumber":165,"author":{"gitId":"SiTingST"},"content":"     * Display a message upon successful addition of task to task list"},{"lineNumber":166,"author":{"gitId":"SiTingST"},"content":"     * @param task task"},{"lineNumber":167,"author":{"gitId":"SiTingST"},"content":"     * @param size amount of items in task list"},{"lineNumber":168,"author":{"gitId":"SiTingST"},"content":"     */"},{"lineNumber":169,"author":{"gitId":"SiTingST"},"content":"    public static String displayAddedTaskMessage(Task task, int size) {"},{"lineNumber":170,"author":{"gitId":"SiTingST"},"content":"        return \"Got it. I\u0027ve added this task: \\n\" + task.toString() + \"\\nNow you have \""},{"lineNumber":171,"author":{"gitId":"SiTingST"},"content":"                + size + \" tasks in your list\";"},{"lineNumber":172,"author":{"gitId":"SiTingST"},"content":"    }"},{"lineNumber":173,"author":{"gitId":"SiTingST"},"content":""},{"lineNumber":174,"author":{"gitId":"SiTingST"},"content":"    /**"},{"lineNumber":175,"author":{"gitId":"SiTingST"},"content":"     * Display a message upon successful deletion of task"},{"lineNumber":176,"author":{"gitId":"SiTingST"},"content":"     * @param task task"},{"lineNumber":177,"author":{"gitId":"SiTingST"},"content":"     */"},{"lineNumber":178,"author":{"gitId":"SiTingST"},"content":"    public static String displayDeletedTaskMessage(Task task) {"},{"lineNumber":179,"author":{"gitId":"SiTingST"},"content":"        return \"Nice! I\u0027ve removed this task: \\n\" + task.toString();"},{"lineNumber":180,"author":{"gitId":"SiTingST"},"content":"    }"},{"lineNumber":181,"author":{"gitId":"SiTingST"},"content":""},{"lineNumber":182,"author":{"gitId":"SiTingST"},"content":"    /**"},{"lineNumber":183,"author":{"gitId":"SiTingST"},"content":"     * Display a message when task status is changed to completed"},{"lineNumber":184,"author":{"gitId":"SiTingST"},"content":"     * @param task task"},{"lineNumber":185,"author":{"gitId":"SiTingST"},"content":"     */"},{"lineNumber":186,"author":{"gitId":"SiTingST"},"content":"    public String displayDoneTaskMessage(Task task) {"},{"lineNumber":187,"author":{"gitId":"SiTingST"},"content":"        return \"Nice! I\u0027ll make this task as completed: \" + task.toString();"},{"lineNumber":188,"author":{"gitId":"SiTingST"},"content":"    }"},{"lineNumber":189,"author":{"gitId":"SiTingST"},"content":""},{"lineNumber":190,"author":{"gitId":"SiTingST"},"content":"    /** Display an exception messages upon encountering errors"},{"lineNumber":191,"author":{"gitId":"SiTingST"},"content":"     * @param e exception messages"},{"lineNumber":192,"author":{"gitId":"SiTingST"},"content":"     * @return"},{"lineNumber":193,"author":{"gitId":"SiTingST"},"content":"     */"},{"lineNumber":194,"author":{"gitId":"SiTingST"},"content":"    public String showError(String e) {"},{"lineNumber":195,"author":{"gitId":"SiTingST"},"content":"        return e;"},{"lineNumber":196,"author":{"gitId":"SiTingST"},"content":"    }"},{"lineNumber":197,"author":{"gitId":"SiTingST"},"content":""},{"lineNumber":198,"author":{"gitId":"SiTingST"},"content":"}"}],"authorContributionMap":{"SiTingST":198}},{"path":"src/main/resources/view/DialogBox.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"SiTingST"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"},{"lineNumber":2,"author":{"gitId":"SiTingST"},"content":""},{"lineNumber":3,"author":{"gitId":"SiTingST"},"content":"\u003c?import javafx.geometry.Insets?\u003e"},{"lineNumber":4,"author":{"gitId":"SiTingST"},"content":"\u003c?import javafx.scene.control.Label?\u003e"},{"lineNumber":5,"author":{"gitId":"SiTingST"},"content":"\u003c?import javafx.scene.image.ImageView?\u003e"},{"lineNumber":6,"author":{"gitId":"SiTingST"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e"},{"lineNumber":7,"author":{"gitId":"SiTingST"},"content":""},{"lineNumber":8,"author":{"gitId":"SiTingST"},"content":"\u003cfx:root alignment\u003d\"TOP_RIGHT\" minHeight\u003d\"-Infinity\" maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\" prefWidth\u003d\"400.0\" type\u003d\"javafx.scene.layout.HBox\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e"},{"lineNumber":9,"author":{"gitId":"SiTingST"},"content":"    \u003cchildren\u003e"},{"lineNumber":10,"author":{"gitId":"SiTingST"},"content":"        \u003cLabel fx:id\u003d\"dialog\" text\u003d\"Label\" wrapText\u003d\"true\"/\u003e"},{"lineNumber":11,"author":{"gitId":"SiTingST"},"content":"        \u003cImageView fx:id\u003d\"displayPicture\" fitHeight\u003d\"99.0\" fitWidth\u003d\"99.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\" /\u003e"},{"lineNumber":12,"author":{"gitId":"SiTingST"},"content":"    \u003c/children\u003e"},{"lineNumber":13,"author":{"gitId":"SiTingST"},"content":"    \u003cpadding\u003e"},{"lineNumber":14,"author":{"gitId":"SiTingST"},"content":"        \u003cInsets bottom\u003d\"15.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"15.0\" /\u003e"},{"lineNumber":15,"author":{"gitId":"SiTingST"},"content":"    \u003c/padding\u003e"},{"lineNumber":16,"author":{"gitId":"SiTingST"},"content":"\u003c/fx:root\u003e"}],"authorContributionMap":{"SiTingST":16}},{"path":"src/main/resources/view/MainWindow.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"SiTingST"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"},{"lineNumber":2,"author":{"gitId":"SiTingST"},"content":""},{"lineNumber":3,"author":{"gitId":"SiTingST"},"content":"\u003c?import javafx.scene.control.Button?\u003e"},{"lineNumber":4,"author":{"gitId":"SiTingST"},"content":"\u003c?import javafx.scene.control.ScrollPane?\u003e"},{"lineNumber":5,"author":{"gitId":"SiTingST"},"content":"\u003c?import javafx.scene.control.TextField?\u003e"},{"lineNumber":6,"author":{"gitId":"SiTingST"},"content":"\u003c?import javafx.scene.layout.AnchorPane?\u003e"},{"lineNumber":7,"author":{"gitId":"SiTingST"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e"},{"lineNumber":8,"author":{"gitId":"SiTingST"},"content":""},{"lineNumber":9,"author":{"gitId":"SiTingST"},"content":"\u003cAnchorPane maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefHeight\u003d\"600.0\" prefWidth\u003d\"400.0\" xmlns:fx\u003d\"http://javafx.com/fxml/1\" fx:controller\u003d\"duke.MainWindow\"\u003e"},{"lineNumber":10,"author":{"gitId":"SiTingST"},"content":"   \u003cchildren\u003e"},{"lineNumber":11,"author":{"gitId":"SiTingST"},"content":"      \u003cTextField fx:id\u003d\"userInput\" layoutY\u003d\"558.0\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"324.0\" AnchorPane.bottomAnchor\u003d\"1.0\" AnchorPane.leftAnchor\u003d\"1.0\" AnchorPane.rightAnchor\u003d\"1.0\"/\u003e"},{"lineNumber":12,"author":{"gitId":"SiTingST"},"content":"      \u003cButton fx:id\u003d\"sendButton\" layoutX\u003d\"324.0\" layoutY\u003d\"558.0\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"76.0\"  AnchorPane.bottomAnchor\u003d\"0.0\" AnchorPane.rightAnchor\u003d\"0.0\" text\u003d\"Send\" /\u003e"},{"lineNumber":13,"author":{"gitId":"SiTingST"},"content":"      \u003cScrollPane fx:id\u003d\"scrollPane\" hbarPolicy\u003d\"NEVER\" fitToHeight\u003d\"true\" fitToWidth\u003d\"true\" hvalue\u003d\"1.0\" maxHeight\u003d\"Infinity\" maxWidth\u003d\"Infinity\""},{"lineNumber":14,"author":{"gitId":"SiTingST"},"content":"                  prefHeight\u003d\"557.0\" prefWidth\u003d\"400.0\" vvalue\u003d\"1.0\" AnchorPane.leftAnchor\u003d\"1.0\" AnchorPane.rightAnchor\u003d\"1.0\""},{"lineNumber":15,"author":{"gitId":"SiTingST"},"content":"                  AnchorPane.topAnchor\u003d\"0.0\" AnchorPane.bottomAnchor\u003d\"40.0\" stylesheets\u003d\"@dukeDesign.css\" styleClass\u003d\"anchor\"\u003e"},{"lineNumber":16,"author":{"gitId":"SiTingST"},"content":"         \u003ccontent\u003e"},{"lineNumber":17,"author":{"gitId":"SiTingST"},"content":"            \u003cVBox fx:id\u003d\"dialogContainer\" /\u003e"},{"lineNumber":18,"author":{"gitId":"SiTingST"},"content":"         \u003c/content\u003e"},{"lineNumber":19,"author":{"gitId":"SiTingST"},"content":"      \u003c/ScrollPane\u003e"},{"lineNumber":20,"author":{"gitId":"SiTingST"},"content":"   \u003c/children\u003e"},{"lineNumber":21,"author":{"gitId":"SiTingST"},"content":"\u003c/AnchorPane\u003e"}],"authorContributionMap":{"SiTingST":21}},{"path":"src/test/java/duke/parser/ParserTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"SiTingST"},"content":"package duke.parser;"},{"lineNumber":2,"author":{"gitId":"SiTingST"},"content":""},{"lineNumber":3,"author":{"gitId":"SiTingST"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;"},{"lineNumber":4,"author":{"gitId":"SiTingST"},"content":""},{"lineNumber":5,"author":{"gitId":"SiTingST"},"content":"import java.time.LocalDate;"},{"lineNumber":6,"author":{"gitId":"SiTingST"},"content":"import java.time.format.DateTimeFormatter;"},{"lineNumber":7,"author":{"gitId":"SiTingST"},"content":""},{"lineNumber":8,"author":{"gitId":"SiTingST"},"content":"import org.junit.jupiter.api.Test;"},{"lineNumber":9,"author":{"gitId":"SiTingST"},"content":""},{"lineNumber":10,"author":{"gitId":"SiTingST"},"content":"import duke.exception.DukeException;"},{"lineNumber":11,"author":{"gitId":"SiTingST"},"content":""},{"lineNumber":12,"author":{"gitId":"SiTingST"},"content":"public class ParserTest {"},{"lineNumber":13,"author":{"gitId":"SiTingST"},"content":""},{"lineNumber":14,"author":{"gitId":"SiTingST"},"content":"    private static final DateTimeFormatter DATE_TIME_FORMATTER \u003d DateTimeFormatter.ofPattern(\"d/MM/yyyy\");"},{"lineNumber":15,"author":{"gitId":"SiTingST"},"content":""},{"lineNumber":16,"author":{"gitId":"SiTingST"},"content":"    @Test"},{"lineNumber":17,"author":{"gitId":"SiTingST"},"content":"    public void isValidTaskNumberTest() throws DukeException {"},{"lineNumber":18,"author":{"gitId":"SiTingST"},"content":"        Parser parser \u003d new Parser();"},{"lineNumber":19,"author":{"gitId":"SiTingST"},"content":"        String dateInString \u003d \"19/02/2025\";"},{"lineNumber":20,"author":{"gitId":"SiTingST"},"content":"        LocalDate date \u003d LocalDate.parse(dateInString, DATE_TIME_FORMATTER);"},{"lineNumber":21,"author":{"gitId":"SiTingST"},"content":""},{"lineNumber":22,"author":{"gitId":"SiTingST"},"content":"        assertEquals(parser.check_valid_date(\"19/02/2025\"), date);"},{"lineNumber":23,"author":{"gitId":"SiTingST"},"content":"    }"},{"lineNumber":24,"author":{"gitId":"SiTingST"},"content":"}"}],"authorContributionMap":{"SiTingST":24}},{"path":"src/test/java/duke/tasklist/TaskListTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"SiTingST"},"content":"package duke.tasklist;"},{"lineNumber":2,"author":{"gitId":"SiTingST"},"content":""},{"lineNumber":3,"author":{"gitId":"SiTingST"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;"},{"lineNumber":4,"author":{"gitId":"SiTingST"},"content":""},{"lineNumber":5,"author":{"gitId":"SiTingST"},"content":"import java.time.LocalDate;"},{"lineNumber":6,"author":{"gitId":"SiTingST"},"content":"import java.time.LocalTime;"},{"lineNumber":7,"author":{"gitId":"SiTingST"},"content":""},{"lineNumber":8,"author":{"gitId":"SiTingST"},"content":"import org.junit.jupiter.api.Test;"},{"lineNumber":9,"author":{"gitId":"SiTingST"},"content":""},{"lineNumber":10,"author":{"gitId":"SiTingST"},"content":"import duke.exception.DukeException;"},{"lineNumber":11,"author":{"gitId":"SiTingST"},"content":""},{"lineNumber":12,"author":{"gitId":"SiTingST"},"content":"public class TaskListTest {"},{"lineNumber":13,"author":{"gitId":"SiTingST"},"content":""},{"lineNumber":14,"author":{"gitId":"SiTingST"},"content":"    private static TaskList taskList \u003d new TaskList();"},{"lineNumber":15,"author":{"gitId":"SiTingST"},"content":""},{"lineNumber":16,"author":{"gitId":"SiTingST"},"content":"    @Test"},{"lineNumber":17,"author":{"gitId":"SiTingST"},"content":"    public void addingTaskTest() {"},{"lineNumber":18,"author":{"gitId":"SiTingST"},"content":""},{"lineNumber":19,"author":{"gitId":"SiTingST"},"content":"        taskList.addToDo(\"testing description\");"},{"lineNumber":20,"author":{"gitId":"SiTingST"},"content":""},{"lineNumber":21,"author":{"gitId":"SiTingST"},"content":"        LocalDate deadlineDate \u003d LocalDate.of(2021 , 1 , 25);"},{"lineNumber":22,"author":{"gitId":"SiTingST"},"content":"        taskList.addDeadline(\"test deadline\" , deadlineDate, LocalTime.NOON);"},{"lineNumber":23,"author":{"gitId":"SiTingST"},"content":""},{"lineNumber":24,"author":{"gitId":"SiTingST"},"content":"        LocalDate eventDate \u003d LocalDate.of(2021 , 1 , 26);"},{"lineNumber":25,"author":{"gitId":"SiTingST"},"content":"        taskList.addEvent(\"test event\" , eventDate , LocalTime.NOON, LocalTime.MIDNIGHT);"},{"lineNumber":26,"author":{"gitId":"SiTingST"},"content":""},{"lineNumber":27,"author":{"gitId":"SiTingST"},"content":"        assertEquals(\" Todo:testing description[\" + \u0027\\u2718\u0027 + \"] \","},{"lineNumber":28,"author":{"gitId":"SiTingST"},"content":"                taskList.getTaskListArray().get(1).toString());"},{"lineNumber":29,"author":{"gitId":"SiTingST"},"content":""},{"lineNumber":30,"author":{"gitId":"SiTingST"},"content":"        assertEquals(\" Deadline:test deadline[\" + \u0027\\u2718\u0027 + \"]  (by: 2021-01-25 12:00)\" ,"},{"lineNumber":31,"author":{"gitId":"SiTingST"},"content":"                taskList.getTaskListArray().get(2).toString());"},{"lineNumber":32,"author":{"gitId":"SiTingST"},"content":""},{"lineNumber":33,"author":{"gitId":"SiTingST"},"content":"        assertEquals(\" Event:test event[\" + \u0027\\u2718\u0027 + \"] (at: 2021-01-26 12:00 00:00)\","},{"lineNumber":34,"author":{"gitId":"SiTingST"},"content":"                taskList.getTaskListArray().get(3).toString());"},{"lineNumber":35,"author":{"gitId":"SiTingST"},"content":"    }"},{"lineNumber":36,"author":{"gitId":"SiTingST"},"content":""},{"lineNumber":37,"author":{"gitId":"SiTingST"},"content":""},{"lineNumber":38,"author":{"gitId":"SiTingST"},"content":"    @Test"},{"lineNumber":39,"author":{"gitId":"SiTingST"},"content":"    public void markAsDoneTest() throws DukeException {"},{"lineNumber":40,"author":{"gitId":"SiTingST"},"content":"        taskList.addToDo(\"do ip\");"},{"lineNumber":41,"author":{"gitId":"SiTingST"},"content":"        taskList.markAsDone(0);"},{"lineNumber":42,"author":{"gitId":"SiTingST"},"content":"        assertEquals(\" Todo:do ip[\" + \u0027\\u2713\u0027 + \"] \", taskList.getTaskListArray().get(0).toString());"},{"lineNumber":43,"author":{"gitId":"SiTingST"},"content":"    }"},{"lineNumber":44,"author":{"gitId":"SiTingST"},"content":""},{"lineNumber":45,"author":{"gitId":"SiTingST"},"content":"    @Test"},{"lineNumber":46,"author":{"gitId":"SiTingST"},"content":"    public void deleteTaskTest() throws DukeException {"},{"lineNumber":47,"author":{"gitId":"SiTingST"},"content":"        taskList.deleteTask(0);"},{"lineNumber":48,"author":{"gitId":"SiTingST"},"content":"        assertEquals(\" Todo:testing description[\" + \u0027\\u2718\u0027 + \"] \","},{"lineNumber":49,"author":{"gitId":"SiTingST"},"content":"                taskList.getTaskListArray().get(0).toString());"},{"lineNumber":50,"author":{"gitId":"SiTingST"},"content":"    }"},{"lineNumber":51,"author":{"gitId":"SiTingST"},"content":"}"}],"authorContributionMap":{"SiTingST":51}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"SiTingST"},"content":"todo st2334"},{"lineNumber":2,"author":{"gitId":"SiTingST"},"content":"todo read book"},{"lineNumber":3,"author":{"gitId":"SiTingST"},"content":"list"},{"lineNumber":4,"author":{"gitId":"SiTingST"},"content":"deadline return book /by Sunday"},{"lineNumber":5,"author":{"gitId":"SiTingST"},"content":"event project meeting /at Mon 2-4pm"},{"lineNumber":6,"author":{"gitId":"SiTingST"},"content":"deadline do homework /by no idea :-p"},{"lineNumber":7,"author":{"gitId":"SiTingST"},"content":"bye"}],"authorContributionMap":{"SiTingST":7}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF"},{"lineNumber":2,"author":{"gitId":"-"},"content":""},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin"},{"lineNumber":5,"author":{"gitId":"-"},"content":""},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run"},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT"},{"lineNumber":8,"author":{"gitId":"-"},"content":""},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder"},{"lineNumber":10,"author":{"gitId":"-"},"content":"javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\*.java"},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 ("},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1"},{"lineNumber":14,"author":{"gitId":"-"},"content":")"},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0"},{"lineNumber":16,"author":{"gitId":"-"},"content":""},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"},{"lineNumber":18,"author":{"gitId":"-"},"content":"java -classpath ..\\bin Duke \u003c input.txt \u003e ACTUAL.TXT"},{"lineNumber":19,"author":{"gitId":"-"},"content":""},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM compare the output to the expected output"},{"lineNumber":21,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT"},{"lineNumber":22,"author":{"gitId":"SiTingST"},"content":"timeout 60"}],"authorContributionMap":{"SiTingST":1,"-":21}}]
