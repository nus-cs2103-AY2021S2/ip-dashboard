[{"path":"src/main/java/Deadlines.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"SiTingST"},"content":"public class Deadlines extends Task {"},{"lineNumber":2,"author":{"gitId":"SiTingST"},"content":""},{"lineNumber":3,"author":{"gitId":"SiTingST"},"content":"    private String dueDate;"},{"lineNumber":4,"author":{"gitId":"SiTingST"},"content":""},{"lineNumber":5,"author":{"gitId":"SiTingST"},"content":"    public Deadlines(String title, String dueBy) {"},{"lineNumber":6,"author":{"gitId":"SiTingST"},"content":"        super(title);"},{"lineNumber":7,"author":{"gitId":"SiTingST"},"content":"        this.dueDate \u003d dueBy;"},{"lineNumber":8,"author":{"gitId":"SiTingST"},"content":"    }"},{"lineNumber":9,"author":{"gitId":"SiTingST"},"content":""},{"lineNumber":10,"author":{"gitId":"SiTingST"},"content":"    @Override"},{"lineNumber":11,"author":{"gitId":"SiTingST"},"content":"    public String toString() {"},{"lineNumber":12,"author":{"gitId":"SiTingST"},"content":"        return  \"[D]\" + super.toString() +  \"(by:\" + dueDate + \")\";"},{"lineNumber":13,"author":{"gitId":"SiTingST"},"content":"    }"},{"lineNumber":14,"author":{"gitId":"SiTingST"},"content":"}"}],"authorContributionMap":{"SiTingST":14}},{"path":"src/main/java/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"SiTingST"},"content":"import java.util.ArrayList;"},{"lineNumber":2,"author":{"gitId":"SiTingST"},"content":"import java.util.Scanner;"},{"lineNumber":3,"author":{"gitId":"SiTingST"},"content":""},{"lineNumber":4,"author":{"gitId":"-"},"content":"public class Duke {"},{"lineNumber":5,"author":{"gitId":"SiTingST"},"content":""},{"lineNumber":6,"author":{"gitId":"SiTingST"},"content":"    private static ArrayList\u003cTask\u003e taskArraylist \u003d new ArrayList\u003cTask\u003e();"},{"lineNumber":7,"author":{"gitId":"SiTingST"},"content":"    private static Scanner sc \u003d new Scanner(System.in);"},{"lineNumber":8,"author":{"gitId":"SiTingST"},"content":"    static final String lines \u003d \"----------------------------------------\";"},{"lineNumber":9,"author":{"gitId":"SiTingST"},"content":""},{"lineNumber":10,"author":{"gitId":"SiTingST"},"content":"    public static void displayWelcomeMessage() {"},{"lineNumber":11,"author":{"gitId":"-"},"content":"        String logo \u003d \" ____        _        \\n\""},{"lineNumber":12,"author":{"gitId":"-"},"content":"                + \"|  _ \\\\ _   _| | _____ \\n\""},{"lineNumber":13,"author":{"gitId":"-"},"content":"                + \"| | | | | | | |/ / _ \\\\\\n\""},{"lineNumber":14,"author":{"gitId":"-"},"content":"                + \"| |_| | |_| |   \u003c  __/\\n\""},{"lineNumber":15,"author":{"gitId":"-"},"content":"                + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\";"},{"lineNumber":16,"author":{"gitId":"SiTingST"},"content":"        System.out.println(\"Hi There! Greetings from \\n\" + logo);"},{"lineNumber":17,"author":{"gitId":"SiTingST"},"content":"        System.out.println(lines + \"\\n\" + \" Good day! I\u0027m Duke\" + \"\\n\" + \" How can I help you today? \" + \"\\n\" + lines);"},{"lineNumber":18,"author":{"gitId":"SiTingST"},"content":""},{"lineNumber":19,"author":{"gitId":"SiTingST"},"content":"    }"},{"lineNumber":20,"author":{"gitId":"SiTingST"},"content":""},{"lineNumber":21,"author":{"gitId":"SiTingST"},"content":"    public static void displayEndMessage() {"},{"lineNumber":22,"author":{"gitId":"SiTingST"},"content":"        sc.close();"},{"lineNumber":23,"author":{"gitId":"SiTingST"},"content":"        System.out.println(lines + \"\\n\" + \" Bye. Hope to see you again!\" + \"\\n\" + lines);"},{"lineNumber":24,"author":{"gitId":"SiTingST"},"content":"    }"},{"lineNumber":25,"author":{"gitId":"SiTingST"},"content":""},{"lineNumber":26,"author":{"gitId":"SiTingST"},"content":"    public static void displayAddedTaskMessage() {"},{"lineNumber":27,"author":{"gitId":"SiTingST"},"content":"        System.out.println(lines + \"\\nGot it. I\u0027ve added this task: \\n\\t\""},{"lineNumber":28,"author":{"gitId":"SiTingST"},"content":"                + taskArraylist.get(taskArraylist.size()-1).toString() + \"\\n Now you have \" + taskArraylist.size()"},{"lineNumber":29,"author":{"gitId":"SiTingST"},"content":"                + \" tasks in your list \\n\" + lines);"},{"lineNumber":30,"author":{"gitId":"SiTingST"},"content":"    }"},{"lineNumber":31,"author":{"gitId":"SiTingST"},"content":""},{"lineNumber":32,"author":{"gitId":"SiTingST"},"content":"    public static void addTask(String userInput, String typeOfTask) throws DukeException {"},{"lineNumber":33,"author":{"gitId":"SiTingST"},"content":""},{"lineNumber":34,"author":{"gitId":"SiTingST"},"content":"        int addToTask \u003d 0;"},{"lineNumber":35,"author":{"gitId":"SiTingST"},"content":"        String taskName;"},{"lineNumber":36,"author":{"gitId":"SiTingST"},"content":""},{"lineNumber":37,"author":{"gitId":"SiTingST"},"content":"        switch (typeOfTask) {"},{"lineNumber":38,"author":{"gitId":"SiTingST"},"content":"            case (\"todo\"):"},{"lineNumber":39,"author":{"gitId":"SiTingST"},"content":""},{"lineNumber":40,"author":{"gitId":"SiTingST"},"content":"                taskName \u003d returnTaskName(userInput,\"todo\");"},{"lineNumber":41,"author":{"gitId":"SiTingST"},"content":"                if(!taskName.equals(\"no task name\")){"},{"lineNumber":42,"author":{"gitId":"SiTingST"},"content":"                    taskArraylist.add(new ToDos(returnTaskName(userInput, \"todo\")));"},{"lineNumber":43,"author":{"gitId":"SiTingST"},"content":"                    addToTask\u003d 1;"},{"lineNumber":44,"author":{"gitId":"SiTingST"},"content":"                }"},{"lineNumber":45,"author":{"gitId":"SiTingST"},"content":"                break;"},{"lineNumber":46,"author":{"gitId":"SiTingST"},"content":""},{"lineNumber":47,"author":{"gitId":"SiTingST"},"content":"            case (\"deadline\"):"},{"lineNumber":48,"author":{"gitId":"SiTingST"},"content":""},{"lineNumber":49,"author":{"gitId":"SiTingST"},"content":"                if(userInput.contains(\"/by\")){"},{"lineNumber":50,"author":{"gitId":"SiTingST"},"content":"                    String dueBy[] \u003d userInput.split(\"/by\");"},{"lineNumber":51,"author":{"gitId":"SiTingST"},"content":"                    taskName \u003d returnTaskName(dueBy[0], \"deadline\");"},{"lineNumber":52,"author":{"gitId":"SiTingST"},"content":""},{"lineNumber":53,"author":{"gitId":"SiTingST"},"content":"                    if (!taskName.equals(\"no task name\") || !checkForAdditionalInfo(dueBy[0])) {"},{"lineNumber":54,"author":{"gitId":"SiTingST"},"content":"                        taskArraylist.add( new Deadlines(taskName, dueBy[dueBy.length - 1]));"},{"lineNumber":55,"author":{"gitId":"SiTingST"},"content":"                        addToTask \u003d 1;"},{"lineNumber":56,"author":{"gitId":"SiTingST"},"content":"                    }"},{"lineNumber":57,"author":{"gitId":"SiTingST"},"content":"                }else {"},{"lineNumber":58,"author":{"gitId":"SiTingST"},"content":"                    checkForAdditionalInfo(\"wrongInfo\");"},{"lineNumber":59,"author":{"gitId":"SiTingST"},"content":"                }"},{"lineNumber":60,"author":{"gitId":"SiTingST"},"content":""},{"lineNumber":61,"author":{"gitId":"SiTingST"},"content":"                break;"},{"lineNumber":62,"author":{"gitId":"SiTingST"},"content":"            case (\"event\"):"},{"lineNumber":63,"author":{"gitId":"SiTingST"},"content":""},{"lineNumber":64,"author":{"gitId":"SiTingST"},"content":"               if(userInput.contains(\"/at\")) {"},{"lineNumber":65,"author":{"gitId":"SiTingST"},"content":""},{"lineNumber":66,"author":{"gitId":"SiTingST"},"content":"                    String dueDetails[] \u003d userInput.split(\"/at \");"},{"lineNumber":67,"author":{"gitId":"SiTingST"},"content":"                   /* String date[] \u003d dueDetails[dueDetails.length - 1].split(\" \");"},{"lineNumber":68,"author":{"gitId":"SiTingST"},"content":"                    String[] startTimeArr \u003d date[date.length - 1].split(\"-\");"},{"lineNumber":69,"author":{"gitId":"SiTingST"},"content":"                    String startTime \u003d startTimeArr[0];"},{"lineNumber":70,"author":{"gitId":"SiTingST"},"content":"                    String endTime \u003d startTimeArr[startTimeArr.length - 1];"},{"lineNumber":71,"author":{"gitId":"SiTingST"},"content":""},{"lineNumber":72,"author":{"gitId":"SiTingST"},"content":"                  */"},{"lineNumber":73,"author":{"gitId":"SiTingST"},"content":"                    taskName \u003d returnTaskName(dueDetails[0], \"event\");"},{"lineNumber":74,"author":{"gitId":"SiTingST"},"content":""},{"lineNumber":75,"author":{"gitId":"SiTingST"},"content":"                    if (!taskName.equals(\"no task name\") || !checkForAdditionalInfo(dueDetails[1])) {"},{"lineNumber":76,"author":{"gitId":"SiTingST"},"content":"                        taskArraylist.add(new Events(taskName, dueDetails[1]));"},{"lineNumber":77,"author":{"gitId":"SiTingST"},"content":"                        addToTask \u003d 1;"},{"lineNumber":78,"author":{"gitId":"SiTingST"},"content":"                    }"},{"lineNumber":79,"author":{"gitId":"SiTingST"},"content":"                } else{"},{"lineNumber":80,"author":{"gitId":"SiTingST"},"content":"                    checkForAdditionalInfo(\"wrongInfo\");"},{"lineNumber":81,"author":{"gitId":"SiTingST"},"content":"                }"},{"lineNumber":82,"author":{"gitId":"SiTingST"},"content":""},{"lineNumber":83,"author":{"gitId":"SiTingST"},"content":"                break;"},{"lineNumber":84,"author":{"gitId":"SiTingST"},"content":"            default:"},{"lineNumber":85,"author":{"gitId":"SiTingST"},"content":"                returnTaskName(userInput,\"default\");"},{"lineNumber":86,"author":{"gitId":"SiTingST"},"content":"        }"},{"lineNumber":87,"author":{"gitId":"SiTingST"},"content":""},{"lineNumber":88,"author":{"gitId":"SiTingST"},"content":"        if(addToTask \u003d\u003d 1){"},{"lineNumber":89,"author":{"gitId":"SiTingST"},"content":"            displayAddedTaskMessage();"},{"lineNumber":90,"author":{"gitId":"SiTingST"},"content":"        }"},{"lineNumber":91,"author":{"gitId":"SiTingST"},"content":""},{"lineNumber":92,"author":{"gitId":"SiTingST"},"content":"    }"},{"lineNumber":93,"author":{"gitId":"SiTingST"},"content":""},{"lineNumber":94,"author":{"gitId":"SiTingST"},"content":"    public static String generateTaskName(String userInput, String type) throws DukeException {"},{"lineNumber":95,"author":{"gitId":"SiTingST"},"content":""},{"lineNumber":96,"author":{"gitId":"SiTingST"},"content":"        String taskName  \u003d userInput.replace(type, \"\");"},{"lineNumber":97,"author":{"gitId":"SiTingST"},"content":""},{"lineNumber":98,"author":{"gitId":"SiTingST"},"content":"        if(type.equals(\"default\")){"},{"lineNumber":99,"author":{"gitId":"SiTingST"},"content":"            throw new DukeException(\"OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\");"},{"lineNumber":100,"author":{"gitId":"SiTingST"},"content":"        } else if (taskName.isBlank() \u0026\u0026 !type.equals(\"default\")) {"},{"lineNumber":101,"author":{"gitId":"SiTingST"},"content":"            throw new DukeException(\"OOPS!!! The description of a \" + type + \" cannot be empty.\");"},{"lineNumber":102,"author":{"gitId":"SiTingST"},"content":"        }  else{"},{"lineNumber":103,"author":{"gitId":"SiTingST"},"content":"            return taskName;"},{"lineNumber":104,"author":{"gitId":"SiTingST"},"content":"        }"},{"lineNumber":105,"author":{"gitId":"SiTingST"},"content":"    }"},{"lineNumber":106,"author":{"gitId":"SiTingST"},"content":""},{"lineNumber":107,"author":{"gitId":"SiTingST"},"content":"    public static String returnTaskName(String userInput, String type){"},{"lineNumber":108,"author":{"gitId":"SiTingST"},"content":""},{"lineNumber":109,"author":{"gitId":"SiTingST"},"content":"        String task \u003d \"no task name\";"},{"lineNumber":110,"author":{"gitId":"SiTingST"},"content":"        try {"},{"lineNumber":111,"author":{"gitId":"SiTingST"},"content":"            task \u003d generateTaskName(userInput,type);"},{"lineNumber":112,"author":{"gitId":"SiTingST"},"content":"        } catch (DukeException exception){"},{"lineNumber":113,"author":{"gitId":"SiTingST"},"content":"            exception.printMessage();"},{"lineNumber":114,"author":{"gitId":"SiTingST"},"content":"        }"},{"lineNumber":115,"author":{"gitId":"SiTingST"},"content":"        return task;"},{"lineNumber":116,"author":{"gitId":"SiTingST"},"content":"    }"},{"lineNumber":117,"author":{"gitId":"SiTingST"},"content":""},{"lineNumber":118,"author":{"gitId":"SiTingST"},"content":"    public static boolean invalidItemNumber(int no, String type){"},{"lineNumber":119,"author":{"gitId":"SiTingST"},"content":""},{"lineNumber":120,"author":{"gitId":"SiTingST"},"content":"        try{"},{"lineNumber":121,"author":{"gitId":"SiTingST"},"content":"            if(no \u003c 0 || no \u003e\u003d taskArraylist.size() \u0026\u0026 !type.equals(\"done\") ){"},{"lineNumber":122,"author":{"gitId":"SiTingST"},"content":"                throw new DukeException(\"There are no task in list. Please add some task and try again.\");"},{"lineNumber":123,"author":{"gitId":"SiTingST"},"content":"            }"},{"lineNumber":124,"author":{"gitId":"SiTingST"},"content":"            else if(no \u003e\u003d taskArraylist.size() \u0026\u0026 type.equals(\"delete\") ){"},{"lineNumber":125,"author":{"gitId":"SiTingST"},"content":"                throw new DukeException(\"Item number \" + no + \" is not found in list. Please check again\");"},{"lineNumber":126,"author":{"gitId":"SiTingST"},"content":"            }else {"},{"lineNumber":127,"author":{"gitId":"SiTingST"},"content":"                return false;"},{"lineNumber":128,"author":{"gitId":"SiTingST"},"content":"            }"},{"lineNumber":129,"author":{"gitId":"SiTingST"},"content":""},{"lineNumber":130,"author":{"gitId":"SiTingST"},"content":"        }catch (DukeException e){"},{"lineNumber":131,"author":{"gitId":"SiTingST"},"content":"            e.printMessage();"},{"lineNumber":132,"author":{"gitId":"SiTingST"},"content":"            return true;"},{"lineNumber":133,"author":{"gitId":"SiTingST"},"content":"        }"},{"lineNumber":134,"author":{"gitId":"SiTingST"},"content":"    }"},{"lineNumber":135,"author":{"gitId":"SiTingST"},"content":""},{"lineNumber":136,"author":{"gitId":"SiTingST"},"content":"    public static void noAdditionalInfo(String s) throws DukeException {"},{"lineNumber":137,"author":{"gitId":"SiTingST"},"content":"        if(s.isBlank()){"},{"lineNumber":138,"author":{"gitId":"SiTingST"},"content":"            throw new DukeException(\"OOPS!!! The deadline or start/end time cannot be empty\");"},{"lineNumber":139,"author":{"gitId":"SiTingST"},"content":"        }"},{"lineNumber":140,"author":{"gitId":"SiTingST"},"content":"        if(s.equals(\"wrongInfo\")){"},{"lineNumber":141,"author":{"gitId":"SiTingST"},"content":"            throw new DukeException(\"OOPS!!! Wrong command to add deadlines or start/end time. \" +"},{"lineNumber":142,"author":{"gitId":"SiTingST"},"content":"                    \"Use /by for deadline and /at for event\");"},{"lineNumber":143,"author":{"gitId":"SiTingST"},"content":"        }"},{"lineNumber":144,"author":{"gitId":"SiTingST"},"content":"    }"},{"lineNumber":145,"author":{"gitId":"SiTingST"},"content":""},{"lineNumber":146,"author":{"gitId":"SiTingST"},"content":"    public static boolean checkForAdditionalInfo (String input){"},{"lineNumber":147,"author":{"gitId":"SiTingST"},"content":"        try{"},{"lineNumber":148,"author":{"gitId":"SiTingST"},"content":"            noAdditionalInfo(input);"},{"lineNumber":149,"author":{"gitId":"SiTingST"},"content":"            return true;"},{"lineNumber":150,"author":{"gitId":"SiTingST"},"content":"        }"},{"lineNumber":151,"author":{"gitId":"SiTingST"},"content":"        catch (DukeException de){"},{"lineNumber":152,"author":{"gitId":"SiTingST"},"content":"            de.printMessage();"},{"lineNumber":153,"author":{"gitId":"SiTingST"},"content":"            return false;"},{"lineNumber":154,"author":{"gitId":"SiTingST"},"content":"        }"},{"lineNumber":155,"author":{"gitId":"SiTingST"},"content":"    }"},{"lineNumber":156,"author":{"gitId":"SiTingST"},"content":""},{"lineNumber":157,"author":{"gitId":"SiTingST"},"content":"    public static void executeCommand(String command) throws DukeException {"},{"lineNumber":158,"author":{"gitId":"SiTingST"},"content":""},{"lineNumber":159,"author":{"gitId":"SiTingST"},"content":"        String commandArray[] \u003d command.split(\"\\\\s+\");"},{"lineNumber":160,"author":{"gitId":"SiTingST"},"content":""},{"lineNumber":161,"author":{"gitId":"SiTingST"},"content":"        switch (commandArray[0]) {"},{"lineNumber":162,"author":{"gitId":"SiTingST"},"content":""},{"lineNumber":163,"author":{"gitId":"SiTingST"},"content":"            case (\"list\"):"},{"lineNumber":164,"author":{"gitId":"SiTingST"},"content":"                if(!invalidItemNumber(taskArraylist.size()-1, \"\")) {"},{"lineNumber":165,"author":{"gitId":"SiTingST"},"content":"                    System.out.println(lines + \"\\nHere are the tasks in your list:\");"},{"lineNumber":166,"author":{"gitId":"SiTingST"},"content":"                    for (int i \u003d 0; i \u003c taskArraylist.size(); i++) {"},{"lineNumber":167,"author":{"gitId":"SiTingST"},"content":"                        System.out.println((i + 1) + \".\" + taskArraylist.get(i).toString());"},{"lineNumber":168,"author":{"gitId":"SiTingST"},"content":"                    }"},{"lineNumber":169,"author":{"gitId":"SiTingST"},"content":"                    System.out.println(lines);"},{"lineNumber":170,"author":{"gitId":"SiTingST"},"content":"                }"},{"lineNumber":171,"author":{"gitId":"SiTingST"},"content":"                break;"},{"lineNumber":172,"author":{"gitId":"SiTingST"},"content":""},{"lineNumber":173,"author":{"gitId":"SiTingST"},"content":"            case (\"done\"):"},{"lineNumber":174,"author":{"gitId":"SiTingST"},"content":"                int index \u003d Integer.parseInt(commandArray[1])-1;"},{"lineNumber":175,"author":{"gitId":"SiTingST"},"content":"                if(!invalidItemNumber(index,\"\")) {"},{"lineNumber":176,"author":{"gitId":"SiTingST"},"content":"                    taskArraylist.get(index).setCompleted();"},{"lineNumber":177,"author":{"gitId":"SiTingST"},"content":"                    System.out.println(lines + \"\\nNice! I\u0027ll make this task as done: \\n\""},{"lineNumber":178,"author":{"gitId":"SiTingST"},"content":"                            + taskArraylist.get(index).toString() + \"\\n\" + lines);"},{"lineNumber":179,"author":{"gitId":"SiTingST"},"content":"                }"},{"lineNumber":180,"author":{"gitId":"SiTingST"},"content":"                break;"},{"lineNumber":181,"author":{"gitId":"SiTingST"},"content":""},{"lineNumber":182,"author":{"gitId":"SiTingST"},"content":"            case(\"delete\"):"},{"lineNumber":183,"author":{"gitId":"SiTingST"},"content":"                int indexInArray \u003d Integer.parseInt(commandArray[1])-1;"},{"lineNumber":184,"author":{"gitId":"SiTingST"},"content":"                if(!invalidItemNumber(indexInArray, \"delete\")) {"},{"lineNumber":185,"author":{"gitId":"SiTingST"},"content":"                    System.out.println(lines + \"\\nNice! I\u0027ve removed this task: \\n\""},{"lineNumber":186,"author":{"gitId":"SiTingST"},"content":"                            + taskArraylist.get(indexInArray).toString() + \"\\n\" + lines);"},{"lineNumber":187,"author":{"gitId":"SiTingST"},"content":"                    taskArraylist.remove(indexInArray);"},{"lineNumber":188,"author":{"gitId":"SiTingST"},"content":"                }"},{"lineNumber":189,"author":{"gitId":"SiTingST"},"content":"                break;"},{"lineNumber":190,"author":{"gitId":"SiTingST"},"content":"            default:"},{"lineNumber":191,"author":{"gitId":"SiTingST"},"content":"                addTask(command, commandArray[0]);"},{"lineNumber":192,"author":{"gitId":"SiTingST"},"content":"        }"},{"lineNumber":193,"author":{"gitId":"SiTingST"},"content":"    }"},{"lineNumber":194,"author":{"gitId":"SiTingST"},"content":""},{"lineNumber":195,"author":{"gitId":"SiTingST"},"content":"    public static void main(String[] args) throws DukeException {"},{"lineNumber":196,"author":{"gitId":"SiTingST"},"content":""},{"lineNumber":197,"author":{"gitId":"SiTingST"},"content":"        displayWelcomeMessage();"},{"lineNumber":198,"author":{"gitId":"SiTingST"},"content":""},{"lineNumber":199,"author":{"gitId":"SiTingST"},"content":"        String userInput \u003d sc.nextLine();"},{"lineNumber":200,"author":{"gitId":"SiTingST"},"content":""},{"lineNumber":201,"author":{"gitId":"SiTingST"},"content":"        while (!userInput.equals(\"bye\")) {"},{"lineNumber":202,"author":{"gitId":"SiTingST"},"content":"            executeCommand(userInput);"},{"lineNumber":203,"author":{"gitId":"SiTingST"},"content":"            userInput \u003d sc.nextLine();"},{"lineNumber":204,"author":{"gitId":"SiTingST"},"content":"        }"},{"lineNumber":205,"author":{"gitId":"SiTingST"},"content":"        displayEndMessage();"},{"lineNumber":206,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":207,"author":{"gitId":"-"},"content":"}"}],"authorContributionMap":{"SiTingST":199,"-":8}},{"path":"src/main/java/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"SiTingST"},"content":"public class DukeException extends Exception {"},{"lineNumber":2,"author":{"gitId":"SiTingST"},"content":""},{"lineNumber":3,"author":{"gitId":"SiTingST"},"content":""},{"lineNumber":4,"author":{"gitId":"SiTingST"},"content":"    public DukeException(String message) {"},{"lineNumber":5,"author":{"gitId":"SiTingST"},"content":"        super(message);"},{"lineNumber":6,"author":{"gitId":"SiTingST"},"content":"    }"},{"lineNumber":7,"author":{"gitId":"SiTingST"},"content":""},{"lineNumber":8,"author":{"gitId":"SiTingST"},"content":"    public void printMessage(){"},{"lineNumber":9,"author":{"gitId":"SiTingST"},"content":"        System.out.println(\"----------------------------------------\\n\" + super.getMessage()"},{"lineNumber":10,"author":{"gitId":"SiTingST"},"content":"                + \"\\n----------------------------------------\");"},{"lineNumber":11,"author":{"gitId":"SiTingST"},"content":"    }"},{"lineNumber":12,"author":{"gitId":"SiTingST"},"content":""},{"lineNumber":13,"author":{"gitId":"SiTingST"},"content":"}"}],"authorContributionMap":{"SiTingST":13}},{"path":"src/main/java/Events.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"SiTingST"},"content":"public class Events extends Task {"},{"lineNumber":2,"author":{"gitId":"SiTingST"},"content":""},{"lineNumber":3,"author":{"gitId":"SiTingST"},"content":"    private String date;"},{"lineNumber":4,"author":{"gitId":"SiTingST"},"content":"  //  private String startTime;"},{"lineNumber":5,"author":{"gitId":"SiTingST"},"content":" //   private String endTime;"},{"lineNumber":6,"author":{"gitId":"SiTingST"},"content":""},{"lineNumber":7,"author":{"gitId":"SiTingST"},"content":"    public Events(String title, String date) {"},{"lineNumber":8,"author":{"gitId":"SiTingST"},"content":"        super(title);"},{"lineNumber":9,"author":{"gitId":"SiTingST"},"content":"        this.date \u003d date;"},{"lineNumber":10,"author":{"gitId":"SiTingST"},"content":"    }"},{"lineNumber":11,"author":{"gitId":"SiTingST"},"content":""},{"lineNumber":12,"author":{"gitId":"SiTingST"},"content":"    @Override"},{"lineNumber":13,"author":{"gitId":"SiTingST"},"content":"    public String toString() {"},{"lineNumber":14,"author":{"gitId":"SiTingST"},"content":"        return  \"[E]\" + super.toString() + \"(at:\" + this.date + \")\";"},{"lineNumber":15,"author":{"gitId":"SiTingST"},"content":"    }"},{"lineNumber":16,"author":{"gitId":"SiTingST"},"content":"}"}],"authorContributionMap":{"SiTingST":16}},{"path":"src/main/java/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"SiTingST"},"content":"public class Task {"},{"lineNumber":2,"author":{"gitId":"SiTingST"},"content":"    protected String title;"},{"lineNumber":3,"author":{"gitId":"SiTingST"},"content":"    protected boolean status;"},{"lineNumber":4,"author":{"gitId":"SiTingST"},"content":""},{"lineNumber":5,"author":{"gitId":"SiTingST"},"content":"    public Task(String title){"},{"lineNumber":6,"author":{"gitId":"SiTingST"},"content":"        this.title \u003d title;"},{"lineNumber":7,"author":{"gitId":"SiTingST"},"content":"         this.status \u003d false;"},{"lineNumber":8,"author":{"gitId":"SiTingST"},"content":"    }"},{"lineNumber":9,"author":{"gitId":"SiTingST"},"content":""},{"lineNumber":10,"author":{"gitId":"SiTingST"},"content":"    public void setCompleted(){"},{"lineNumber":11,"author":{"gitId":"SiTingST"},"content":"        this.status \u003d true;"},{"lineNumber":12,"author":{"gitId":"SiTingST"},"content":"    }"},{"lineNumber":13,"author":{"gitId":"SiTingST"},"content":""},{"lineNumber":14,"author":{"gitId":"SiTingST"},"content":"    public String isCompleted(){"},{"lineNumber":15,"author":{"gitId":"SiTingST"},"content":"        return (this.status ? \"\\u2718\" : \" \");"},{"lineNumber":16,"author":{"gitId":"SiTingST"},"content":"    }"},{"lineNumber":17,"author":{"gitId":"SiTingST"},"content":""},{"lineNumber":18,"author":{"gitId":"SiTingST"},"content":"    public String getTaskName(){"},{"lineNumber":19,"author":{"gitId":"SiTingST"},"content":"        return this.title;"},{"lineNumber":20,"author":{"gitId":"SiTingST"},"content":"    }"},{"lineNumber":21,"author":{"gitId":"SiTingST"},"content":""},{"lineNumber":22,"author":{"gitId":"SiTingST"},"content":"    @Override"},{"lineNumber":23,"author":{"gitId":"SiTingST"},"content":"    public String toString() {"},{"lineNumber":24,"author":{"gitId":"SiTingST"},"content":"        return \"[\" + isCompleted() + \"] \" + this.getTaskName();"},{"lineNumber":25,"author":{"gitId":"SiTingST"},"content":"    }"},{"lineNumber":26,"author":{"gitId":"SiTingST"},"content":"}"}],"authorContributionMap":{"SiTingST":26}},{"path":"src/main/java/ToDos.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"SiTingST"},"content":"public class ToDos extends Task {"},{"lineNumber":2,"author":{"gitId":"SiTingST"},"content":""},{"lineNumber":3,"author":{"gitId":"SiTingST"},"content":"    public ToDos(String title) {"},{"lineNumber":4,"author":{"gitId":"SiTingST"},"content":"        super(title);"},{"lineNumber":5,"author":{"gitId":"SiTingST"},"content":"    }"},{"lineNumber":6,"author":{"gitId":"SiTingST"},"content":""},{"lineNumber":7,"author":{"gitId":"SiTingST"},"content":"    @Override"},{"lineNumber":8,"author":{"gitId":"SiTingST"},"content":"    public String toString() {"},{"lineNumber":9,"author":{"gitId":"SiTingST"},"content":"        return  \"[T]\" + super.toString();"},{"lineNumber":10,"author":{"gitId":"SiTingST"},"content":"    }"},{"lineNumber":11,"author":{"gitId":"SiTingST"},"content":"}"}],"authorContributionMap":{"SiTingST":11}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"SiTingST"},"content":"todo st2334"},{"lineNumber":2,"author":{"gitId":"SiTingST"},"content":"todo read book"},{"lineNumber":3,"author":{"gitId":"SiTingST"},"content":"list"},{"lineNumber":4,"author":{"gitId":"SiTingST"},"content":"deadline return book /by Sunday"},{"lineNumber":5,"author":{"gitId":"SiTingST"},"content":"event project meeting /at Mon 2-4pm"},{"lineNumber":6,"author":{"gitId":"SiTingST"},"content":"deadline do homework /by no idea :-p"},{"lineNumber":7,"author":{"gitId":"SiTingST"},"content":"bye"}],"authorContributionMap":{"SiTingST":7}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF"},{"lineNumber":2,"author":{"gitId":"-"},"content":""},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin"},{"lineNumber":5,"author":{"gitId":"-"},"content":""},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run"},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT"},{"lineNumber":8,"author":{"gitId":"-"},"content":""},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder"},{"lineNumber":10,"author":{"gitId":"-"},"content":"javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\*.java"},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 ("},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1"},{"lineNumber":14,"author":{"gitId":"-"},"content":")"},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0"},{"lineNumber":16,"author":{"gitId":"-"},"content":""},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"},{"lineNumber":18,"author":{"gitId":"-"},"content":"java -classpath ..\\bin Duke \u003c input.txt \u003e ACTUAL.TXT"},{"lineNumber":19,"author":{"gitId":"-"},"content":""},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM compare the output to the expected output"},{"lineNumber":21,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT"},{"lineNumber":22,"author":{"gitId":"SiTingST"},"content":"timeout 60"}],"authorContributionMap":{"SiTingST":1,"-":21}}]
