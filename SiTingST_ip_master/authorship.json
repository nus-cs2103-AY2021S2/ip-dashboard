[{"path":"src/main/java/AddCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"SiTingST"},"content":"import java.time.LocalDate;"},{"lineNumber":2,"author":{"gitId":"SiTingST"},"content":"import java.time.LocalTime;"},{"lineNumber":3,"author":{"gitId":"SiTingST"},"content":"import java.util.ArrayList;"},{"lineNumber":4,"author":{"gitId":"SiTingST"},"content":""},{"lineNumber":5,"author":{"gitId":"SiTingST"},"content":"public class AddCommand extends Command{"},{"lineNumber":6,"author":{"gitId":"SiTingST"},"content":""},{"lineNumber":7,"author":{"gitId":"SiTingST"},"content":"    public AddCommand(String input, TaskList taskList) {"},{"lineNumber":8,"author":{"gitId":"SiTingST"},"content":"        super(input,taskList);"},{"lineNumber":9,"author":{"gitId":"SiTingST"},"content":"    }"},{"lineNumber":10,"author":{"gitId":"SiTingST"},"content":""},{"lineNumber":11,"author":{"gitId":"SiTingST"},"content":""},{"lineNumber":12,"author":{"gitId":"SiTingST"},"content":"    public TaskList execute(TaskList tasklist, UI ui, DataStorage storage, String type,"},{"lineNumber":13,"author":{"gitId":"SiTingST"},"content":"                        LocalDate dueDate, LocalTime startTime, LocalTime endTime) throws DukeException {"},{"lineNumber":14,"author":{"gitId":"SiTingST"},"content":""},{"lineNumber":15,"author":{"gitId":"SiTingST"},"content":"        switch (type) {"},{"lineNumber":16,"author":{"gitId":"SiTingST"},"content":"        case (\"todo\"):"},{"lineNumber":17,"author":{"gitId":"SiTingST"},"content":"            tasklist.addToDo(this.input);"},{"lineNumber":18,"author":{"gitId":"SiTingST"},"content":"            break;"},{"lineNumber":19,"author":{"gitId":"SiTingST"},"content":"        case (\"deadlines\"):"},{"lineNumber":20,"author":{"gitId":"SiTingST"},"content":"            System.out.println(\"hehe \" + this.input);"},{"lineNumber":21,"author":{"gitId":"SiTingST"},"content":"            tasklist.addDeadline(this.input, dueDate, startTime);"},{"lineNumber":22,"author":{"gitId":"SiTingST"},"content":"           break;"},{"lineNumber":23,"author":{"gitId":"SiTingST"},"content":"        case (\"events\"):"},{"lineNumber":24,"author":{"gitId":"SiTingST"},"content":"            tasklist.addEvent(this.input, dueDate, startTime, endTime);"},{"lineNumber":25,"author":{"gitId":"SiTingST"},"content":"          break;"},{"lineNumber":26,"author":{"gitId":"SiTingST"},"content":"       }"},{"lineNumber":27,"author":{"gitId":"SiTingST"},"content":""},{"lineNumber":28,"author":{"gitId":"SiTingST"},"content":"        ArrayList\u003cTask\u003e taskArrayList \u003d tasklist.getTaskListArray();"},{"lineNumber":29,"author":{"gitId":"SiTingST"},"content":"        int curr_size \u003d taskArrayList.size();"},{"lineNumber":30,"author":{"gitId":"SiTingST"},"content":"        ui.displayAddedTaskMessage(tasklist.getTask(curr_size-1), curr_size);"},{"lineNumber":31,"author":{"gitId":"SiTingST"},"content":"       storage.save(tasklist.getTaskListArray());"},{"lineNumber":32,"author":{"gitId":"SiTingST"},"content":"       return tasklist;"},{"lineNumber":33,"author":{"gitId":"SiTingST"},"content":"    }"},{"lineNumber":34,"author":{"gitId":"SiTingST"},"content":""},{"lineNumber":35,"author":{"gitId":"SiTingST"},"content":"}"}],"authorContributionMap":{"SiTingST":35}},{"path":"src/main/java/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"SiTingST"},"content":"public class Command {"},{"lineNumber":2,"author":{"gitId":"SiTingST"},"content":""},{"lineNumber":3,"author":{"gitId":"SiTingST"},"content":"    protected static String input;"},{"lineNumber":4,"author":{"gitId":"SiTingST"},"content":"    protected static boolean isExit;"},{"lineNumber":5,"author":{"gitId":"SiTingST"},"content":""},{"lineNumber":6,"author":{"gitId":"SiTingST"},"content":"    public Command (String input, TaskList taskList){"},{"lineNumber":7,"author":{"gitId":"SiTingST"},"content":"        this.input \u003d input;"},{"lineNumber":8,"author":{"gitId":"SiTingST"},"content":"        this.isExit \u003d false;"},{"lineNumber":9,"author":{"gitId":"SiTingST"},"content":"    }"},{"lineNumber":10,"author":{"gitId":"SiTingST"},"content":""},{"lineNumber":11,"author":{"gitId":"SiTingST"},"content":"    public TaskList execute(TaskList tasklist, UI ui, DataStorage storage) throws DukeException {"},{"lineNumber":12,"author":{"gitId":"SiTingST"},"content":"        if(this.input.equals(\"bye\")){"},{"lineNumber":13,"author":{"gitId":"SiTingST"},"content":"            Command ec \u003d new ExitCommand();"},{"lineNumber":14,"author":{"gitId":"SiTingST"},"content":"            ec.execute(tasklist,ui,storage);"},{"lineNumber":15,"author":{"gitId":"SiTingST"},"content":"        }"},{"lineNumber":16,"author":{"gitId":"SiTingST"},"content":"        return tasklist;"},{"lineNumber":17,"author":{"gitId":"SiTingST"},"content":""},{"lineNumber":18,"author":{"gitId":"SiTingST"},"content":"    }"},{"lineNumber":19,"author":{"gitId":"SiTingST"},"content":""},{"lineNumber":20,"author":{"gitId":"SiTingST"},"content":"    protected static boolean isExit(){"},{"lineNumber":21,"author":{"gitId":"SiTingST"},"content":"        return isExit;"},{"lineNumber":22,"author":{"gitId":"SiTingST"},"content":"    }"},{"lineNumber":23,"author":{"gitId":"SiTingST"},"content":""},{"lineNumber":24,"author":{"gitId":"SiTingST"},"content":""},{"lineNumber":25,"author":{"gitId":"SiTingST"},"content":""},{"lineNumber":26,"author":{"gitId":"SiTingST"},"content":""},{"lineNumber":27,"author":{"gitId":"SiTingST"},"content":""},{"lineNumber":28,"author":{"gitId":"SiTingST"},"content":""},{"lineNumber":29,"author":{"gitId":"SiTingST"},"content":"}"}],"authorContributionMap":{"SiTingST":29}},{"path":"src/main/java/DataStorage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"SiTingST"},"content":"import java.io.File;"},{"lineNumber":2,"author":{"gitId":"SiTingST"},"content":"import java.io.FileNotFoundException;"},{"lineNumber":3,"author":{"gitId":"SiTingST"},"content":"import java.io.FileWriter;"},{"lineNumber":4,"author":{"gitId":"SiTingST"},"content":"import java.io.IOException;"},{"lineNumber":5,"author":{"gitId":"SiTingST"},"content":"import java.util.ArrayList;"},{"lineNumber":6,"author":{"gitId":"SiTingST"},"content":"import java.util.Scanner;"},{"lineNumber":7,"author":{"gitId":"SiTingST"},"content":""},{"lineNumber":8,"author":{"gitId":"SiTingST"},"content":"public class DataStorage {"},{"lineNumber":9,"author":{"gitId":"SiTingST"},"content":"    private static final String filePath \u003d \"./src/main/java/duke/data/data.txt\";"},{"lineNumber":10,"author":{"gitId":"SiTingST"},"content":""},{"lineNumber":11,"author":{"gitId":"SiTingST"},"content":"    public static File getFile() throws IOException, DukeException {"},{"lineNumber":12,"author":{"gitId":"SiTingST"},"content":""},{"lineNumber":13,"author":{"gitId":"SiTingST"},"content":"        File file \u003d new File(filePath);"},{"lineNumber":14,"author":{"gitId":"SiTingST"},"content":"        if(!file.exists()){"},{"lineNumber":15,"author":{"gitId":"SiTingST"},"content":"            try {"},{"lineNumber":16,"author":{"gitId":"SiTingST"},"content":"                file.createNewFile();"},{"lineNumber":17,"author":{"gitId":"SiTingST"},"content":"            }catch (Exception e){"},{"lineNumber":18,"author":{"gitId":"SiTingST"},"content":"                e.printStackTrace();"},{"lineNumber":19,"author":{"gitId":"SiTingST"},"content":"                throw new DukeException(\"Error creating file\");"},{"lineNumber":20,"author":{"gitId":"SiTingST"},"content":"            }"},{"lineNumber":21,"author":{"gitId":"SiTingST"},"content":"        }"},{"lineNumber":22,"author":{"gitId":"SiTingST"},"content":"        return file;"},{"lineNumber":23,"author":{"gitId":"SiTingST"},"content":"    }"},{"lineNumber":24,"author":{"gitId":"SiTingST"},"content":""},{"lineNumber":25,"author":{"gitId":"SiTingST"},"content":"    public static void save(ArrayList\u003cTask\u003e taskAL) throws DukeException {"},{"lineNumber":26,"author":{"gitId":"SiTingST"},"content":"        try {"},{"lineNumber":27,"author":{"gitId":"SiTingST"},"content":"            File file \u003d getFile();"},{"lineNumber":28,"author":{"gitId":"SiTingST"},"content":"            FileWriter writer \u003d new FileWriter(file);"},{"lineNumber":29,"author":{"gitId":"SiTingST"},"content":"            for (int i \u003d 0; i \u003c taskAL.size(); i++) {"},{"lineNumber":30,"author":{"gitId":"SiTingST"},"content":"                writer.write(taskAL.get(i).changeFormat() + \u0027\\n\u0027);"},{"lineNumber":31,"author":{"gitId":"SiTingST"},"content":"                writer.flush();"},{"lineNumber":32,"author":{"gitId":"SiTingST"},"content":"            }"},{"lineNumber":33,"author":{"gitId":"SiTingST"},"content":"            writer.close();"},{"lineNumber":34,"author":{"gitId":"SiTingST"},"content":"        }catch (Exception e){"},{"lineNumber":35,"author":{"gitId":"SiTingST"},"content":"            throw new DukeException(\"error writing into file\");"},{"lineNumber":36,"author":{"gitId":"SiTingST"},"content":"        }"},{"lineNumber":37,"author":{"gitId":"SiTingST"},"content":""},{"lineNumber":38,"author":{"gitId":"SiTingST"},"content":"    }"},{"lineNumber":39,"author":{"gitId":"SiTingST"},"content":""},{"lineNumber":40,"author":{"gitId":"SiTingST"},"content":"    public static ArrayList\u003cTask\u003e load() throws DukeException, IOException {"},{"lineNumber":41,"author":{"gitId":"SiTingST"},"content":"        File file \u003d getFile();"},{"lineNumber":42,"author":{"gitId":"SiTingST"},"content":"        Task t \u003d new Task();"},{"lineNumber":43,"author":{"gitId":"SiTingST"},"content":"        ArrayList\u003cTask\u003e taskAL \u003d new ArrayList\u003c\u003e();"},{"lineNumber":44,"author":{"gitId":"SiTingST"},"content":"        try {"},{"lineNumber":45,"author":{"gitId":"SiTingST"},"content":"            Scanner sc \u003d new Scanner(file);"},{"lineNumber":46,"author":{"gitId":"SiTingST"},"content":"            while (sc.hasNextLine()) {"},{"lineNumber":47,"author":{"gitId":"SiTingST"},"content":"                String s \u003d sc.nextLine();"},{"lineNumber":48,"author":{"gitId":"SiTingST"},"content":"                taskAL.add( t.changeToTaskFormat(s));"},{"lineNumber":49,"author":{"gitId":"SiTingST"},"content":"            }"},{"lineNumber":50,"author":{"gitId":"SiTingST"},"content":"            sc.close();"},{"lineNumber":51,"author":{"gitId":"SiTingST"},"content":"        } catch (FileNotFoundException e) {"},{"lineNumber":52,"author":{"gitId":"SiTingST"},"content":"            throw new DukeException(\"Error finding file\");"},{"lineNumber":53,"author":{"gitId":"SiTingST"},"content":"        }"},{"lineNumber":54,"author":{"gitId":"SiTingST"},"content":"        return taskAL;"},{"lineNumber":55,"author":{"gitId":"SiTingST"},"content":""},{"lineNumber":56,"author":{"gitId":"SiTingST"},"content":"    }"},{"lineNumber":57,"author":{"gitId":"SiTingST"},"content":""},{"lineNumber":58,"author":{"gitId":"SiTingST"},"content":"}"}],"authorContributionMap":{"SiTingST":58}},{"path":"src/main/java/Deadlines.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"SiTingST"},"content":"import java.time.LocalDate;"},{"lineNumber":2,"author":{"gitId":"SiTingST"},"content":"import java.time.LocalTime;"},{"lineNumber":3,"author":{"gitId":"SiTingST"},"content":""},{"lineNumber":4,"author":{"gitId":"SiTingST"},"content":"public class Deadlines extends Task {"},{"lineNumber":5,"author":{"gitId":"SiTingST"},"content":""},{"lineNumber":6,"author":{"gitId":"SiTingST"},"content":"    private LocalDate dueDate;"},{"lineNumber":7,"author":{"gitId":"SiTingST"},"content":"    private LocalTime dueTime;"},{"lineNumber":8,"author":{"gitId":"SiTingST"},"content":""},{"lineNumber":9,"author":{"gitId":"SiTingST"},"content":""},{"lineNumber":10,"author":{"gitId":"SiTingST"},"content":"    public Deadlines(String title, LocalDate dueBy, LocalTime time) {"},{"lineNumber":11,"author":{"gitId":"SiTingST"},"content":"        super(title);"},{"lineNumber":12,"author":{"gitId":"SiTingST"},"content":"        this.dueDate \u003d dueBy;"},{"lineNumber":13,"author":{"gitId":"SiTingST"},"content":"        this.dueTime \u003d time;"},{"lineNumber":14,"author":{"gitId":"SiTingST"},"content":"    }"},{"lineNumber":15,"author":{"gitId":"SiTingST"},"content":""},{"lineNumber":16,"author":{"gitId":"SiTingST"},"content":"    public Deadlines(String title, Boolean b, LocalDate dueBy, LocalTime time) {"},{"lineNumber":17,"author":{"gitId":"SiTingST"},"content":"        super(title, b);"},{"lineNumber":18,"author":{"gitId":"SiTingST"},"content":"        this.dueDate \u003d dueBy;"},{"lineNumber":19,"author":{"gitId":"SiTingST"},"content":"        this.dueTime \u003d time;"},{"lineNumber":20,"author":{"gitId":"SiTingST"},"content":"    }"},{"lineNumber":21,"author":{"gitId":"SiTingST"},"content":""},{"lineNumber":22,"author":{"gitId":"SiTingST"},"content":"    @Override"},{"lineNumber":23,"author":{"gitId":"SiTingST"},"content":"    public String changeFormat(){"},{"lineNumber":24,"author":{"gitId":"SiTingST"},"content":"        return \"D\" + super.changeFormat() + \",\" + this.dueDate + \",\" + this.dueTime;"},{"lineNumber":25,"author":{"gitId":"SiTingST"},"content":"    }"},{"lineNumber":26,"author":{"gitId":"SiTingST"},"content":""},{"lineNumber":27,"author":{"gitId":"SiTingST"},"content":"    @Override"},{"lineNumber":28,"author":{"gitId":"SiTingST"},"content":"    public String toString() {"},{"lineNumber":29,"author":{"gitId":"SiTingST"},"content":"        return  \"[D]\" + super.toString() + \" (by: \" + this.dueDate + \" \" + this.dueTime + \")\";"},{"lineNumber":30,"author":{"gitId":"SiTingST"},"content":"    }"},{"lineNumber":31,"author":{"gitId":"SiTingST"},"content":"}"}],"authorContributionMap":{"SiTingST":31}},{"path":"src/main/java/DeleteCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"SiTingST"},"content":"public class DeleteCommand extends Command {"},{"lineNumber":2,"author":{"gitId":"SiTingST"},"content":""},{"lineNumber":3,"author":{"gitId":"SiTingST"},"content":"    public DeleteCommand(String input, TaskList tl) {"},{"lineNumber":4,"author":{"gitId":"SiTingST"},"content":"        super(input,tl);"},{"lineNumber":5,"author":{"gitId":"SiTingST"},"content":"    }"},{"lineNumber":6,"author":{"gitId":"SiTingST"},"content":""},{"lineNumber":7,"author":{"gitId":"SiTingST"},"content":"    @Override"},{"lineNumber":8,"author":{"gitId":"SiTingST"},"content":"    public TaskList execute(TaskList tasks, UI ui, DataStorage storage) throws DukeException {"},{"lineNumber":9,"author":{"gitId":"SiTingST"},"content":"        tasks.deleteTask(Integer.parseInt(input)-1);"},{"lineNumber":10,"author":{"gitId":"SiTingST"},"content":"        storage.save(tasks.getTaskListArray());"},{"lineNumber":11,"author":{"gitId":"SiTingST"},"content":"        return tasks;"},{"lineNumber":12,"author":{"gitId":"SiTingST"},"content":"    }"},{"lineNumber":13,"author":{"gitId":"SiTingST"},"content":"}"}],"authorContributionMap":{"SiTingST":13}},{"path":"src/main/java/DoneCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"SiTingST"},"content":"public class DoneCommand extends Command{"},{"lineNumber":2,"author":{"gitId":"SiTingST"},"content":""},{"lineNumber":3,"author":{"gitId":"SiTingST"},"content":"    public DoneCommand(String input, TaskList taskList) {"},{"lineNumber":4,"author":{"gitId":"SiTingST"},"content":"        super(input, taskList);"},{"lineNumber":5,"author":{"gitId":"SiTingST"},"content":"    }"},{"lineNumber":6,"author":{"gitId":"SiTingST"},"content":""},{"lineNumber":7,"author":{"gitId":"SiTingST"},"content":"    @Override"},{"lineNumber":8,"author":{"gitId":"SiTingST"},"content":"    public TaskList execute(TaskList tasks, UI ui, DataStorage storage) throws DukeException {"},{"lineNumber":9,"author":{"gitId":"SiTingST"},"content":"        tasks.markAsDone(Integer.parseInt(input)-1);"},{"lineNumber":10,"author":{"gitId":"SiTingST"},"content":"        storage.save(tasks.getTaskListArray());"},{"lineNumber":11,"author":{"gitId":"SiTingST"},"content":"        return tasks;"},{"lineNumber":12,"author":{"gitId":"SiTingST"},"content":"    }"},{"lineNumber":13,"author":{"gitId":"SiTingST"},"content":"}"}],"authorContributionMap":{"SiTingST":13}},{"path":"src/main/java/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"SiTingST"},"content":"import java.io.IOException;"},{"lineNumber":2,"author":{"gitId":"SiTingST"},"content":"import java.time.LocalDate;"},{"lineNumber":3,"author":{"gitId":"SiTingST"},"content":"import java.time.LocalTime;"},{"lineNumber":4,"author":{"gitId":"SiTingST"},"content":"import java.time.format.DateTimeFormatter;"},{"lineNumber":5,"author":{"gitId":"SiTingST"},"content":"import java.util.ArrayList;"},{"lineNumber":6,"author":{"gitId":"SiTingST"},"content":"import java.util.Scanner;"},{"lineNumber":7,"author":{"gitId":"SiTingST"},"content":""},{"lineNumber":8,"author":{"gitId":"-"},"content":"public class Duke {"},{"lineNumber":9,"author":{"gitId":"SiTingST"},"content":""},{"lineNumber":10,"author":{"gitId":"SiTingST"},"content":"    private static ArrayList\u003cTask\u003e taskArraylist \u003d new ArrayList\u003cTask\u003e();"},{"lineNumber":11,"author":{"gitId":"SiTingST"},"content":"    private static Scanner sc \u003d new Scanner(System.in);"},{"lineNumber":12,"author":{"gitId":"SiTingST"},"content":"    static final String lines \u003d \"----------------------------------------\";"},{"lineNumber":13,"author":{"gitId":"SiTingST"},"content":"    private static DataStorage storage  \u003d new DataStorage();"},{"lineNumber":14,"author":{"gitId":"SiTingST"},"content":""},{"lineNumber":15,"author":{"gitId":"SiTingST"},"content":"    public static void displayWelcomeMessage() {"},{"lineNumber":16,"author":{"gitId":"-"},"content":"        String logo \u003d \" ____        _        \\n\""},{"lineNumber":17,"author":{"gitId":"-"},"content":"                + \"|  _ \\\\ _   _| | _____ \\n\""},{"lineNumber":18,"author":{"gitId":"-"},"content":"                + \"| | | | | | | |/ / _ \\\\\\n\""},{"lineNumber":19,"author":{"gitId":"-"},"content":"                + \"| |_| | |_| |   \u003c  __/\\n\""},{"lineNumber":20,"author":{"gitId":"-"},"content":"                + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\";"},{"lineNumber":21,"author":{"gitId":"SiTingST"},"content":"        System.out.println(\"Hi There! Greetings from \\n\" + logo);"},{"lineNumber":22,"author":{"gitId":"SiTingST"},"content":"        System.out.println(lines + \"\\n\" + \" Good day! I\u0027m Duke\" + \"\\n\" + \" How can I help you today? \" + \"\\n\" + lines);"},{"lineNumber":23,"author":{"gitId":"SiTingST"},"content":""},{"lineNumber":24,"author":{"gitId":"SiTingST"},"content":"    }"},{"lineNumber":25,"author":{"gitId":"SiTingST"},"content":""},{"lineNumber":26,"author":{"gitId":"SiTingST"},"content":"    public static void displayEndMessage() {"},{"lineNumber":27,"author":{"gitId":"SiTingST"},"content":"        sc.close();"},{"lineNumber":28,"author":{"gitId":"SiTingST"},"content":"        System.out.println(lines + \"\\n\" + \" Bye. Hope to see you again!\" + \"\\n\" + lines);"},{"lineNumber":29,"author":{"gitId":"SiTingST"},"content":"    }"},{"lineNumber":30,"author":{"gitId":"SiTingST"},"content":""},{"lineNumber":31,"author":{"gitId":"SiTingST"},"content":"    public static void displayAddedTaskMessage() {"},{"lineNumber":32,"author":{"gitId":"SiTingST"},"content":"        System.out.println(lines + \"\\nGot it. I\u0027ve added this task: \\n\\t\""},{"lineNumber":33,"author":{"gitId":"SiTingST"},"content":"                + taskArraylist.get(taskArraylist.size()-1).toString() + \"\\n Now you have \" + taskArraylist.size()"},{"lineNumber":34,"author":{"gitId":"SiTingST"},"content":"                + \" tasks in your list \\n\" + lines);"},{"lineNumber":35,"author":{"gitId":"SiTingST"},"content":"    }"},{"lineNumber":36,"author":{"gitId":"SiTingST"},"content":""},{"lineNumber":37,"author":{"gitId":"SiTingST"},"content":"    public static void addTask(String userInput, String typeOfTask) throws DukeException {"},{"lineNumber":38,"author":{"gitId":"SiTingST"},"content":""},{"lineNumber":39,"author":{"gitId":"SiTingST"},"content":"        int addToTask \u003d 0;"},{"lineNumber":40,"author":{"gitId":"SiTingST"},"content":"        String taskName;"},{"lineNumber":41,"author":{"gitId":"SiTingST"},"content":""},{"lineNumber":42,"author":{"gitId":"SiTingST"},"content":"        switch (typeOfTask) {"},{"lineNumber":43,"author":{"gitId":"SiTingST"},"content":"            case (\"todo\"):"},{"lineNumber":44,"author":{"gitId":"SiTingST"},"content":""},{"lineNumber":45,"author":{"gitId":"SiTingST"},"content":"                taskName \u003d returnTaskName(userInput,\"todo\");"},{"lineNumber":46,"author":{"gitId":"SiTingST"},"content":"                if(!taskName.equals(\"no task name\")){"},{"lineNumber":47,"author":{"gitId":"SiTingST"},"content":"                    taskArraylist.add(new ToDos(returnTaskName(userInput, \"todo\")));"},{"lineNumber":48,"author":{"gitId":"SiTingST"},"content":"                    addToTask\u003d 1;"},{"lineNumber":49,"author":{"gitId":"SiTingST"},"content":"                }"},{"lineNumber":50,"author":{"gitId":"SiTingST"},"content":"                break;"},{"lineNumber":51,"author":{"gitId":"SiTingST"},"content":""},{"lineNumber":52,"author":{"gitId":"SiTingST"},"content":"            case (\"deadline\"):"},{"lineNumber":53,"author":{"gitId":"SiTingST"},"content":""},{"lineNumber":54,"author":{"gitId":"SiTingST"},"content":"                if(userInput.contains(\"/by\")){"},{"lineNumber":55,"author":{"gitId":"SiTingST"},"content":"                    String dueBy[] \u003d userInput.split(\"/by \");"},{"lineNumber":56,"author":{"gitId":"SiTingST"},"content":"                    taskName \u003d returnTaskName(dueBy[0], \"deadline\");"},{"lineNumber":57,"author":{"gitId":"SiTingST"},"content":"                    String[] stringTime \u003d dueBy[1].split(\" \");"},{"lineNumber":58,"author":{"gitId":"SiTingST"},"content":""},{"lineNumber":59,"author":{"gitId":"SiTingST"},"content":"                    DateTimeFormatter df \u003d DateTimeFormatter.ofPattern(\"d/MM/yyyy\");"},{"lineNumber":60,"author":{"gitId":"SiTingST"},"content":"                    LocalDate date \u003d LocalDate.parse(stringTime[0], df);"},{"lineNumber":61,"author":{"gitId":"SiTingST"},"content":""},{"lineNumber":62,"author":{"gitId":"SiTingST"},"content":"                    DateTimeFormatter inputFormat \u003d DateTimeFormatter.ofPattern(\"HHmm\");"},{"lineNumber":63,"author":{"gitId":"SiTingST"},"content":"                    LocalTime time \u003d LocalTime.parse(stringTime[1],inputFormat);"},{"lineNumber":64,"author":{"gitId":"SiTingST"},"content":""},{"lineNumber":65,"author":{"gitId":"SiTingST"},"content":"                    if (!taskName.equals(\"no task name\") || !checkForAdditionalInfo(dueBy[0])) {"},{"lineNumber":66,"author":{"gitId":"SiTingST"},"content":"                        taskArraylist.add( new Deadlines(taskName,date,time ));"},{"lineNumber":67,"author":{"gitId":"SiTingST"},"content":"                        addToTask \u003d 1;"},{"lineNumber":68,"author":{"gitId":"SiTingST"},"content":"                    }"},{"lineNumber":69,"author":{"gitId":"SiTingST"},"content":"                }else {"},{"lineNumber":70,"author":{"gitId":"SiTingST"},"content":"                    checkForAdditionalInfo(\"wrongInfo\");"},{"lineNumber":71,"author":{"gitId":"SiTingST"},"content":"                }"},{"lineNumber":72,"author":{"gitId":"SiTingST"},"content":""},{"lineNumber":73,"author":{"gitId":"SiTingST"},"content":"                break;"},{"lineNumber":74,"author":{"gitId":"SiTingST"},"content":"            case (\"event\"):"},{"lineNumber":75,"author":{"gitId":"SiTingST"},"content":""},{"lineNumber":76,"author":{"gitId":"SiTingST"},"content":"                if(userInput.contains(\"/at\")) {"},{"lineNumber":77,"author":{"gitId":"SiTingST"},"content":""},{"lineNumber":78,"author":{"gitId":"SiTingST"},"content":"                    String dueDetails[] \u003d userInput.split(\"/at \");"},{"lineNumber":79,"author":{"gitId":"SiTingST"},"content":"                    String dateTime[] \u003d dueDetails[1].split(\" \");"},{"lineNumber":80,"author":{"gitId":"SiTingST"},"content":""},{"lineNumber":81,"author":{"gitId":"SiTingST"},"content":"                    String[] timeArr \u003d dateTime[1].split(\"-\");"},{"lineNumber":82,"author":{"gitId":"SiTingST"},"content":"                    String startTime \u003d timeArr[0];"},{"lineNumber":83,"author":{"gitId":"SiTingST"},"content":"                    String endTime \u003d timeArr[timeArr.length - 1];"},{"lineNumber":84,"author":{"gitId":"SiTingST"},"content":""},{"lineNumber":85,"author":{"gitId":"SiTingST"},"content":"                    DateTimeFormatter df \u003d DateTimeFormatter.ofPattern(\"d/MM/yyyy\");"},{"lineNumber":86,"author":{"gitId":"SiTingST"},"content":"                    LocalDate localdate \u003d LocalDate.parse(dateTime[0], df);"},{"lineNumber":87,"author":{"gitId":"SiTingST"},"content":""},{"lineNumber":88,"author":{"gitId":"SiTingST"},"content":"                    DateTimeFormatter inputFormat \u003d DateTimeFormatter.ofPattern(\"HHmm\");"},{"lineNumber":89,"author":{"gitId":"SiTingST"},"content":""},{"lineNumber":90,"author":{"gitId":"SiTingST"},"content":"                    taskName \u003d returnTaskName(dueDetails[0], \"event\");"},{"lineNumber":91,"author":{"gitId":"SiTingST"},"content":""},{"lineNumber":92,"author":{"gitId":"SiTingST"},"content":"                    if (!taskName.equals(\"no task name\") || !checkForAdditionalInfo(dueDetails[1])) {"},{"lineNumber":93,"author":{"gitId":"SiTingST"},"content":"                        taskArraylist.add(new Events(taskName, false, localdate, LocalTime.parse(startTime,inputFormat),"},{"lineNumber":94,"author":{"gitId":"SiTingST"},"content":"                                LocalTime.parse(endTime,inputFormat)));"},{"lineNumber":95,"author":{"gitId":"SiTingST"},"content":"                        addToTask \u003d 1;"},{"lineNumber":96,"author":{"gitId":"SiTingST"},"content":"                    }"},{"lineNumber":97,"author":{"gitId":"SiTingST"},"content":"                } else{"},{"lineNumber":98,"author":{"gitId":"SiTingST"},"content":"                    checkForAdditionalInfo(\"wrongInfo\");"},{"lineNumber":99,"author":{"gitId":"SiTingST"},"content":"                }"},{"lineNumber":100,"author":{"gitId":"SiTingST"},"content":""},{"lineNumber":101,"author":{"gitId":"SiTingST"},"content":"                break;"},{"lineNumber":102,"author":{"gitId":"SiTingST"},"content":"            default:"},{"lineNumber":103,"author":{"gitId":"SiTingST"},"content":"                returnTaskName(userInput,\"default\");"},{"lineNumber":104,"author":{"gitId":"SiTingST"},"content":"        }"},{"lineNumber":105,"author":{"gitId":"SiTingST"},"content":""},{"lineNumber":106,"author":{"gitId":"SiTingST"},"content":"        if(addToTask \u003d\u003d 1){"},{"lineNumber":107,"author":{"gitId":"SiTingST"},"content":"            displayAddedTaskMessage();"},{"lineNumber":108,"author":{"gitId":"SiTingST"},"content":"        }"},{"lineNumber":109,"author":{"gitId":"SiTingST"},"content":""},{"lineNumber":110,"author":{"gitId":"SiTingST"},"content":"    }"},{"lineNumber":111,"author":{"gitId":"SiTingST"},"content":""},{"lineNumber":112,"author":{"gitId":"SiTingST"},"content":"    public static String generateTaskName(String userInput, String type) throws DukeException {"},{"lineNumber":113,"author":{"gitId":"SiTingST"},"content":""},{"lineNumber":114,"author":{"gitId":"SiTingST"},"content":"        String taskName  \u003d userInput.replace(type, \"\");"},{"lineNumber":115,"author":{"gitId":"SiTingST"},"content":""},{"lineNumber":116,"author":{"gitId":"SiTingST"},"content":"        if(type.equals(\"default\")){"},{"lineNumber":117,"author":{"gitId":"SiTingST"},"content":"            throw new DukeException(\"OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\");"},{"lineNumber":118,"author":{"gitId":"SiTingST"},"content":"        } else if (taskName.isBlank() \u0026\u0026 !type.equals(\"default\")) {"},{"lineNumber":119,"author":{"gitId":"SiTingST"},"content":"            throw new DukeException(\"OOPS!!! The description of a \" + type + \" cannot be empty.\");"},{"lineNumber":120,"author":{"gitId":"SiTingST"},"content":"        }  else{"},{"lineNumber":121,"author":{"gitId":"SiTingST"},"content":"            return taskName;"},{"lineNumber":122,"author":{"gitId":"SiTingST"},"content":"        }"},{"lineNumber":123,"author":{"gitId":"SiTingST"},"content":"    }"},{"lineNumber":124,"author":{"gitId":"SiTingST"},"content":""},{"lineNumber":125,"author":{"gitId":"SiTingST"},"content":"    public static String returnTaskName(String userInput, String type){"},{"lineNumber":126,"author":{"gitId":"SiTingST"},"content":""},{"lineNumber":127,"author":{"gitId":"SiTingST"},"content":"        String task \u003d \"no task name\";"},{"lineNumber":128,"author":{"gitId":"SiTingST"},"content":"        try {"},{"lineNumber":129,"author":{"gitId":"SiTingST"},"content":"            task \u003d generateTaskName(userInput,type);"},{"lineNumber":130,"author":{"gitId":"SiTingST"},"content":"        } catch (DukeException exception){"},{"lineNumber":131,"author":{"gitId":"SiTingST"},"content":"            exception.printMessage();"},{"lineNumber":132,"author":{"gitId":"SiTingST"},"content":"        }"},{"lineNumber":133,"author":{"gitId":"SiTingST"},"content":"        return task;"},{"lineNumber":134,"author":{"gitId":"SiTingST"},"content":"    }"},{"lineNumber":135,"author":{"gitId":"SiTingST"},"content":""},{"lineNumber":136,"author":{"gitId":"SiTingST"},"content":"    public static boolean invalidItemNumber(int no, String type){"},{"lineNumber":137,"author":{"gitId":"SiTingST"},"content":""},{"lineNumber":138,"author":{"gitId":"SiTingST"},"content":"        try{"},{"lineNumber":139,"author":{"gitId":"SiTingST"},"content":"            if(no \u003c 0 || no \u003e\u003d taskArraylist.size() \u0026\u0026 !type.equals(\"done\") ){"},{"lineNumber":140,"author":{"gitId":"SiTingST"},"content":"                throw new DukeException(\"There are no task in list. Please add some task and try again.\");"},{"lineNumber":141,"author":{"gitId":"SiTingST"},"content":"            }"},{"lineNumber":142,"author":{"gitId":"SiTingST"},"content":"            else if(no \u003e\u003d taskArraylist.size() \u0026\u0026 type.equals(\"delete\") ){"},{"lineNumber":143,"author":{"gitId":"SiTingST"},"content":"                throw new DukeException(\"Item number \" + no + \" is not found in list. Please check again\");"},{"lineNumber":144,"author":{"gitId":"SiTingST"},"content":"            }else {"},{"lineNumber":145,"author":{"gitId":"SiTingST"},"content":"                return false;"},{"lineNumber":146,"author":{"gitId":"SiTingST"},"content":"            }"},{"lineNumber":147,"author":{"gitId":"SiTingST"},"content":""},{"lineNumber":148,"author":{"gitId":"SiTingST"},"content":"        }catch (DukeException e){"},{"lineNumber":149,"author":{"gitId":"SiTingST"},"content":"            e.printMessage();"},{"lineNumber":150,"author":{"gitId":"SiTingST"},"content":"            return true;"},{"lineNumber":151,"author":{"gitId":"SiTingST"},"content":"        }"},{"lineNumber":152,"author":{"gitId":"SiTingST"},"content":"    }"},{"lineNumber":153,"author":{"gitId":"SiTingST"},"content":""},{"lineNumber":154,"author":{"gitId":"SiTingST"},"content":"    public static void noAdditionalInfo(String s) throws DukeException {"},{"lineNumber":155,"author":{"gitId":"SiTingST"},"content":"        if(s.isBlank()){"},{"lineNumber":156,"author":{"gitId":"SiTingST"},"content":"            throw new DukeException(\"OOPS!!! The deadline or start/end time cannot be empty\");"},{"lineNumber":157,"author":{"gitId":"SiTingST"},"content":"        }"},{"lineNumber":158,"author":{"gitId":"SiTingST"},"content":"        if(s.equals(\"wrongInfo\")){"},{"lineNumber":159,"author":{"gitId":"SiTingST"},"content":"            throw new DukeException(\"OOPS!!! Wrong command to add deadlines or start/end time. \" +"},{"lineNumber":160,"author":{"gitId":"SiTingST"},"content":"                    \"Use /by for deadline and /at for event\");"},{"lineNumber":161,"author":{"gitId":"SiTingST"},"content":"        }"},{"lineNumber":162,"author":{"gitId":"SiTingST"},"content":"    }"},{"lineNumber":163,"author":{"gitId":"SiTingST"},"content":""},{"lineNumber":164,"author":{"gitId":"SiTingST"},"content":"    public static boolean checkForAdditionalInfo (String input){"},{"lineNumber":165,"author":{"gitId":"SiTingST"},"content":"        try{"},{"lineNumber":166,"author":{"gitId":"SiTingST"},"content":"            noAdditionalInfo(input);"},{"lineNumber":167,"author":{"gitId":"SiTingST"},"content":"            return true;"},{"lineNumber":168,"author":{"gitId":"SiTingST"},"content":"        }"},{"lineNumber":169,"author":{"gitId":"SiTingST"},"content":"        catch (DukeException de){"},{"lineNumber":170,"author":{"gitId":"SiTingST"},"content":"            de.printMessage();"},{"lineNumber":171,"author":{"gitId":"SiTingST"},"content":"            return false;"},{"lineNumber":172,"author":{"gitId":"SiTingST"},"content":"        }"},{"lineNumber":173,"author":{"gitId":"SiTingST"},"content":"    }"},{"lineNumber":174,"author":{"gitId":"SiTingST"},"content":""},{"lineNumber":175,"author":{"gitId":"SiTingST"},"content":"    public static void executeCommand(String command) throws DukeException {"},{"lineNumber":176,"author":{"gitId":"SiTingST"},"content":""},{"lineNumber":177,"author":{"gitId":"SiTingST"},"content":"        String commandArray[] \u003d command.split(\"\\\\s+\");"},{"lineNumber":178,"author":{"gitId":"SiTingST"},"content":""},{"lineNumber":179,"author":{"gitId":"SiTingST"},"content":"        switch (commandArray[0]) {"},{"lineNumber":180,"author":{"gitId":"SiTingST"},"content":""},{"lineNumber":181,"author":{"gitId":"SiTingST"},"content":"            case (\"list\"):"},{"lineNumber":182,"author":{"gitId":"SiTingST"},"content":"                if(!invalidItemNumber(taskArraylist.size()-1, \"\")) {"},{"lineNumber":183,"author":{"gitId":"SiTingST"},"content":"                    System.out.println(lines + \"\\nHere are the tasks in your list:\");"},{"lineNumber":184,"author":{"gitId":"SiTingST"},"content":"                    for (int i \u003d 0; i \u003c taskArraylist.size(); i++) {"},{"lineNumber":185,"author":{"gitId":"SiTingST"},"content":"                        System.out.println((i + 1) + \".\" + taskArraylist.get(i).toString());"},{"lineNumber":186,"author":{"gitId":"SiTingST"},"content":"                    }"},{"lineNumber":187,"author":{"gitId":"SiTingST"},"content":"                    System.out.println(lines);"},{"lineNumber":188,"author":{"gitId":"SiTingST"},"content":"                }"},{"lineNumber":189,"author":{"gitId":"SiTingST"},"content":"                break;"},{"lineNumber":190,"author":{"gitId":"SiTingST"},"content":""},{"lineNumber":191,"author":{"gitId":"SiTingST"},"content":"            case (\"done\"):"},{"lineNumber":192,"author":{"gitId":"SiTingST"},"content":"                int index \u003d Integer.parseInt(commandArray[1])-1;"},{"lineNumber":193,"author":{"gitId":"SiTingST"},"content":"                if(!invalidItemNumber(index,\"\")) {"},{"lineNumber":194,"author":{"gitId":"SiTingST"},"content":"                    taskArraylist.get(index).setCompleted();"},{"lineNumber":195,"author":{"gitId":"SiTingST"},"content":"                    System.out.println(lines + \"\\nNice! I\u0027ll make this task as done: \\n\""},{"lineNumber":196,"author":{"gitId":"SiTingST"},"content":"                            + taskArraylist.get(index).toString() + \"\\n\" + lines);"},{"lineNumber":197,"author":{"gitId":"SiTingST"},"content":"                }"},{"lineNumber":198,"author":{"gitId":"SiTingST"},"content":"                break;"},{"lineNumber":199,"author":{"gitId":"SiTingST"},"content":""},{"lineNumber":200,"author":{"gitId":"SiTingST"},"content":"            case(\"delete\"):"},{"lineNumber":201,"author":{"gitId":"SiTingST"},"content":"                int indexInArray \u003d Integer.parseInt(commandArray[1])-1;"},{"lineNumber":202,"author":{"gitId":"SiTingST"},"content":"                if(!invalidItemNumber(indexInArray, \"delete\")) {"},{"lineNumber":203,"author":{"gitId":"SiTingST"},"content":"                    System.out.println(lines + \"\\nNice! I\u0027ve removed this task: \\n\""},{"lineNumber":204,"author":{"gitId":"SiTingST"},"content":"                            + taskArraylist.get(indexInArray).toString() + \"\\n\" + lines);"},{"lineNumber":205,"author":{"gitId":"SiTingST"},"content":"                    taskArraylist.remove(indexInArray);"},{"lineNumber":206,"author":{"gitId":"SiTingST"},"content":"                }"},{"lineNumber":207,"author":{"gitId":"SiTingST"},"content":"                break;"},{"lineNumber":208,"author":{"gitId":"SiTingST"},"content":"            default:"},{"lineNumber":209,"author":{"gitId":"SiTingST"},"content":"                addTask(command, commandArray[0]);"},{"lineNumber":210,"author":{"gitId":"SiTingST"},"content":"        }"},{"lineNumber":211,"author":{"gitId":"SiTingST"},"content":"    }"},{"lineNumber":212,"author":{"gitId":"SiTingST"},"content":""},{"lineNumber":213,"author":{"gitId":"SiTingST"},"content":"    public static void main(String[] args) throws DukeException, IOException {"},{"lineNumber":214,"author":{"gitId":"SiTingST"},"content":""},{"lineNumber":215,"author":{"gitId":"SiTingST"},"content":"        displayWelcomeMessage();"},{"lineNumber":216,"author":{"gitId":"SiTingST"},"content":""},{"lineNumber":217,"author":{"gitId":"SiTingST"},"content":"        String userInput \u003d sc.nextLine();"},{"lineNumber":218,"author":{"gitId":"SiTingST"},"content":"        while (!userInput.equals(\"bye\")) {"},{"lineNumber":219,"author":{"gitId":"SiTingST"},"content":"            executeCommand(userInput);"},{"lineNumber":220,"author":{"gitId":"SiTingST"},"content":"            userInput \u003d sc.nextLine();"},{"lineNumber":221,"author":{"gitId":"SiTingST"},"content":"        }"},{"lineNumber":222,"author":{"gitId":"SiTingST"},"content":"        displayEndMessage();"},{"lineNumber":223,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":224,"author":{"gitId":"-"},"content":"}"}],"authorContributionMap":{"SiTingST":216,"-":8}},{"path":"src/main/java/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"SiTingST"},"content":"public class DukeException extends Exception {"},{"lineNumber":2,"author":{"gitId":"SiTingST"},"content":""},{"lineNumber":3,"author":{"gitId":"SiTingST"},"content":""},{"lineNumber":4,"author":{"gitId":"SiTingST"},"content":"    public DukeException(String message) {"},{"lineNumber":5,"author":{"gitId":"SiTingST"},"content":"        super(message);"},{"lineNumber":6,"author":{"gitId":"SiTingST"},"content":"    }"},{"lineNumber":7,"author":{"gitId":"SiTingST"},"content":""},{"lineNumber":8,"author":{"gitId":"SiTingST"},"content":"    public void printMessage(){"},{"lineNumber":9,"author":{"gitId":"SiTingST"},"content":"        System.out.println(\"----------------------------------------\\n\" + super.getMessage()"},{"lineNumber":10,"author":{"gitId":"SiTingST"},"content":"                + \"\\n----------------------------------------\");"},{"lineNumber":11,"author":{"gitId":"SiTingST"},"content":"    }"},{"lineNumber":12,"author":{"gitId":"SiTingST"},"content":""},{"lineNumber":13,"author":{"gitId":"SiTingST"},"content":"}"}],"authorContributionMap":{"SiTingST":13}},{"path":"src/main/java/Events.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"SiTingST"},"content":"import java.time.LocalDate;"},{"lineNumber":2,"author":{"gitId":"SiTingST"},"content":"import java.time.LocalTime;"},{"lineNumber":3,"author":{"gitId":"SiTingST"},"content":""},{"lineNumber":4,"author":{"gitId":"SiTingST"},"content":"public class Events extends Task {"},{"lineNumber":5,"author":{"gitId":"SiTingST"},"content":""},{"lineNumber":6,"author":{"gitId":"SiTingST"},"content":"    private LocalDate date;"},{"lineNumber":7,"author":{"gitId":"SiTingST"},"content":"    private LocalTime startTime;"},{"lineNumber":8,"author":{"gitId":"SiTingST"},"content":"    private LocalTime endTime;"},{"lineNumber":9,"author":{"gitId":"SiTingST"},"content":""},{"lineNumber":10,"author":{"gitId":"SiTingST"},"content":"    public Events(String title, Boolean b, LocalDate data) {"},{"lineNumber":11,"author":{"gitId":"SiTingST"},"content":"        super(title, b);"},{"lineNumber":12,"author":{"gitId":"SiTingST"},"content":"        this.date \u003d data;"},{"lineNumber":13,"author":{"gitId":"SiTingST"},"content":"    }"},{"lineNumber":14,"author":{"gitId":"SiTingST"},"content":""},{"lineNumber":15,"author":{"gitId":"SiTingST"},"content":"    public Events(String taskName,boolean b, LocalDate date, LocalTime startTime, LocalTime endTime) {"},{"lineNumber":16,"author":{"gitId":"SiTingST"},"content":"        super(taskName,b);"},{"lineNumber":17,"author":{"gitId":"SiTingST"},"content":"        this.date \u003d date;"},{"lineNumber":18,"author":{"gitId":"SiTingST"},"content":"        this.startTime \u003d startTime;"},{"lineNumber":19,"author":{"gitId":"SiTingST"},"content":"        this.endTime \u003d endTime;"},{"lineNumber":20,"author":{"gitId":"SiTingST"},"content":"    }"},{"lineNumber":21,"author":{"gitId":"SiTingST"},"content":""},{"lineNumber":22,"author":{"gitId":"SiTingST"},"content":"    @Override"},{"lineNumber":23,"author":{"gitId":"SiTingST"},"content":"    public String changeFormat(){"},{"lineNumber":24,"author":{"gitId":"SiTingST"},"content":"        return \"E\" + super.changeFormat() + \",\" + this.date + \",\" + this.startTime + \",\" + this.endTime;"},{"lineNumber":25,"author":{"gitId":"SiTingST"},"content":"    }"},{"lineNumber":26,"author":{"gitId":"SiTingST"},"content":""},{"lineNumber":27,"author":{"gitId":"SiTingST"},"content":"    @Override"},{"lineNumber":28,"author":{"gitId":"SiTingST"},"content":"    public String toString() {"},{"lineNumber":29,"author":{"gitId":"SiTingST"},"content":"        return  \"[E]\" + super.toString() + \"(at: \" + this.date + \" \" + this.startTime + \" \" + this.endTime + \")\";"},{"lineNumber":30,"author":{"gitId":"SiTingST"},"content":"    }"},{"lineNumber":31,"author":{"gitId":"SiTingST"},"content":"}"}],"authorContributionMap":{"SiTingST":31}},{"path":"src/main/java/ExitCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"SiTingST"},"content":"public class ExitCommand extends Command{"},{"lineNumber":2,"author":{"gitId":"SiTingST"},"content":"    public ExitCommand(){"},{"lineNumber":3,"author":{"gitId":"SiTingST"},"content":"        super(null,null);"},{"lineNumber":4,"author":{"gitId":"SiTingST"},"content":"        this.isExit \u003d true;"},{"lineNumber":5,"author":{"gitId":"SiTingST"},"content":"    }"},{"lineNumber":6,"author":{"gitId":"SiTingST"},"content":""},{"lineNumber":7,"author":{"gitId":"SiTingST"},"content":"    @Override"},{"lineNumber":8,"author":{"gitId":"SiTingST"},"content":"    public TaskList execute(TaskList tasklist, UI ui, DataStorage storage) throws DukeException {"},{"lineNumber":9,"author":{"gitId":"SiTingST"},"content":"        ui.displayEndMessage();"},{"lineNumber":10,"author":{"gitId":"SiTingST"},"content":"        return null;"},{"lineNumber":11,"author":{"gitId":"SiTingST"},"content":"    }"},{"lineNumber":12,"author":{"gitId":"SiTingST"},"content":"}"}],"authorContributionMap":{"SiTingST":12}},{"path":"src/main/java/ListCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"SiTingST"},"content":"public class ListCommand extends Command {"},{"lineNumber":2,"author":{"gitId":"SiTingST"},"content":""},{"lineNumber":3,"author":{"gitId":"SiTingST"},"content":"    public ListCommand(String input, TaskList tl) {"},{"lineNumber":4,"author":{"gitId":"SiTingST"},"content":"        super(input,tl);"},{"lineNumber":5,"author":{"gitId":"SiTingST"},"content":"    }"},{"lineNumber":6,"author":{"gitId":"SiTingST"},"content":""},{"lineNumber":7,"author":{"gitId":"SiTingST"},"content":"    @Override"},{"lineNumber":8,"author":{"gitId":"SiTingST"},"content":"    public TaskList execute(TaskList tasks, UI ui, DataStorage storage){"},{"lineNumber":9,"author":{"gitId":"SiTingST"},"content":"        tasks.showAllTask();"},{"lineNumber":10,"author":{"gitId":"SiTingST"},"content":"        return null;"},{"lineNumber":11,"author":{"gitId":"SiTingST"},"content":"    }"},{"lineNumber":12,"author":{"gitId":"SiTingST"},"content":""},{"lineNumber":13,"author":{"gitId":"SiTingST"},"content":"}"}],"authorContributionMap":{"SiTingST":13}},{"path":"src/main/java/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"SiTingST"},"content":"import java.time.LocalDate;"},{"lineNumber":2,"author":{"gitId":"SiTingST"},"content":"import java.time.LocalTime;"},{"lineNumber":3,"author":{"gitId":"SiTingST"},"content":"import java.time.format.DateTimeFormatter;"},{"lineNumber":4,"author":{"gitId":"SiTingST"},"content":""},{"lineNumber":5,"author":{"gitId":"SiTingST"},"content":"public class Parser {"},{"lineNumber":6,"author":{"gitId":"SiTingST"},"content":""},{"lineNumber":7,"author":{"gitId":"SiTingST"},"content":"    private static UI ui \u003d new UI();"},{"lineNumber":8,"author":{"gitId":"SiTingST"},"content":"    private static DataStorage storage \u003d new DataStorage();"},{"lineNumber":9,"author":{"gitId":"SiTingST"},"content":"    private static TaskList taskList \u003d new TaskList();"},{"lineNumber":10,"author":{"gitId":"SiTingST"},"content":""},{"lineNumber":11,"author":{"gitId":"SiTingST"},"content":"    private static DateTimeFormatter dateFormatter  \u003d DateTimeFormatter.ofPattern(\"d/MM/yyyy\");"},{"lineNumber":12,"author":{"gitId":"SiTingST"},"content":"    private static DateTimeFormatter timeFormatter \u003d DateTimeFormatter.ofPattern(\"HHmm\");"},{"lineNumber":13,"author":{"gitId":"SiTingST"},"content":""},{"lineNumber":14,"author":{"gitId":"SiTingST"},"content":"    //Global Variable"},{"lineNumber":15,"author":{"gitId":"SiTingST"},"content":"    private static String TaskName;"},{"lineNumber":16,"author":{"gitId":"SiTingST"},"content":"    private static boolean firstLaunch \u003d true;"},{"lineNumber":17,"author":{"gitId":"SiTingST"},"content":""},{"lineNumber":18,"author":{"gitId":"SiTingST"},"content":""},{"lineNumber":19,"author":{"gitId":"SiTingST"},"content":"    public static boolean parse(TaskList list, String input) throws DukeException {"},{"lineNumber":20,"author":{"gitId":"SiTingST"},"content":""},{"lineNumber":21,"author":{"gitId":"SiTingST"},"content":"        if(firstLaunch){"},{"lineNumber":22,"author":{"gitId":"SiTingST"},"content":"            taskList \u003d list;"},{"lineNumber":23,"author":{"gitId":"SiTingST"},"content":"            firstLaunch \u003dfalse;"},{"lineNumber":24,"author":{"gitId":"SiTingST"},"content":"        }"},{"lineNumber":25,"author":{"gitId":"SiTingST"},"content":""},{"lineNumber":26,"author":{"gitId":"SiTingST"},"content":""},{"lineNumber":27,"author":{"gitId":"SiTingST"},"content":"        if(input.equals(\"bye\")){"},{"lineNumber":28,"author":{"gitId":"SiTingST"},"content":"            ExitCommand ec \u003d new ExitCommand();"},{"lineNumber":29,"author":{"gitId":"SiTingST"},"content":"            return ec.isExit();"},{"lineNumber":30,"author":{"gitId":"SiTingST"},"content":"        }"},{"lineNumber":31,"author":{"gitId":"SiTingST"},"content":""},{"lineNumber":32,"author":{"gitId":"SiTingST"},"content":"        String commandArray[] \u003d input.split(\"\\\\s+\");"},{"lineNumber":33,"author":{"gitId":"SiTingST"},"content":""},{"lineNumber":34,"author":{"gitId":"SiTingST"},"content":"        int size \u003d  taskList.getTaskListArray().size();"},{"lineNumber":35,"author":{"gitId":"SiTingST"},"content":""},{"lineNumber":36,"author":{"gitId":"SiTingST"},"content":"        if(commandArray[0].equals(\"list\") \u0026\u0026 isValidTaskNumber(0, \"list\",size)){"},{"lineNumber":37,"author":{"gitId":"SiTingST"},"content":"            ListCommand lc \u003d new ListCommand(null, taskList);"},{"lineNumber":38,"author":{"gitId":"SiTingST"},"content":"            lc.execute(taskList, ui, null);"},{"lineNumber":39,"author":{"gitId":"SiTingST"},"content":"        } else if(commandArray[0].equals(\"delete\") \u0026\u0026"},{"lineNumber":40,"author":{"gitId":"SiTingST"},"content":"                isValidTaskNumber(Integer.parseInt(commandArray[1])-1, \"delete\", size)){"},{"lineNumber":41,"author":{"gitId":"SiTingST"},"content":"            DeleteCommand dc \u003d new DeleteCommand(commandArray[1],taskList);"},{"lineNumber":42,"author":{"gitId":"SiTingST"},"content":"            dc.execute(taskList, ui, storage);"},{"lineNumber":43,"author":{"gitId":"SiTingST"},"content":"        } else if(commandArray[0].equals(\"done\") \u0026\u0026"},{"lineNumber":44,"author":{"gitId":"SiTingST"},"content":"                isValidTaskNumber(Integer.parseInt(commandArray[1])-1, \"done\", size)) {"},{"lineNumber":45,"author":{"gitId":"SiTingST"},"content":"            DoneCommand doneCommand \u003d new DoneCommand(commandArray[1], taskList);"},{"lineNumber":46,"author":{"gitId":"SiTingST"},"content":"            taskList \u003d doneCommand.execute(taskList, ui, storage);"},{"lineNumber":47,"author":{"gitId":"SiTingST"},"content":"        }else{"},{"lineNumber":48,"author":{"gitId":"SiTingST"},"content":""},{"lineNumber":49,"author":{"gitId":"SiTingST"},"content":"            String [] userInputArray \u003d separateUserInput(input);"},{"lineNumber":50,"author":{"gitId":"SiTingST"},"content":"            String type \u003d userInputArray[0];"},{"lineNumber":51,"author":{"gitId":"SiTingST"},"content":"            String userInput \u003d input.replace(type, \" \");"},{"lineNumber":52,"author":{"gitId":"SiTingST"},"content":""},{"lineNumber":53,"author":{"gitId":"SiTingST"},"content":""},{"lineNumber":54,"author":{"gitId":"SiTingST"},"content":""},{"lineNumber":55,"author":{"gitId":"SiTingST"},"content":"            AddCommand ac \u003d new AddCommand(userInput, taskList);"},{"lineNumber":56,"author":{"gitId":"SiTingST"},"content":""},{"lineNumber":57,"author":{"gitId":"SiTingST"},"content":"            switch (type) {"},{"lineNumber":58,"author":{"gitId":"SiTingST"},"content":"            case (\"todo\"):"},{"lineNumber":59,"author":{"gitId":"SiTingST"},"content":"                if (userInput.isBlank() ) {"},{"lineNumber":60,"author":{"gitId":"SiTingST"},"content":"                    throw new DukeException(\"OOPS!!! The description of a \" + type + \" cannot be empty.\");"},{"lineNumber":61,"author":{"gitId":"SiTingST"},"content":"                }"},{"lineNumber":62,"author":{"gitId":"SiTingST"},"content":"                taskList \u003d ac.execute(taskList, ui, storage,\"todo\", null, null,null);"},{"lineNumber":63,"author":{"gitId":"SiTingST"},"content":"                break;"},{"lineNumber":64,"author":{"gitId":"SiTingST"},"content":"            case (\"deadline\"):"},{"lineNumber":65,"author":{"gitId":"SiTingST"},"content":"                String dateTime[] \u003d seperateDueDate(input, \"deadline\");"},{"lineNumber":66,"author":{"gitId":"SiTingST"},"content":""},{"lineNumber":67,"author":{"gitId":"SiTingST"},"content":"                LocalDate date \u003d LocalDate.parse(dateTime[0], dateFormatter);"},{"lineNumber":68,"author":{"gitId":"SiTingST"},"content":"                LocalTime time;"},{"lineNumber":69,"author":{"gitId":"SiTingST"},"content":"                if(dateTimeParse(dateTime, \"deadline\")){"},{"lineNumber":70,"author":{"gitId":"SiTingST"},"content":"                     time \u003dnull;"},{"lineNumber":71,"author":{"gitId":"SiTingST"},"content":"                }else {"},{"lineNumber":72,"author":{"gitId":"SiTingST"},"content":"                     time \u003d LocalTime.parse(dateTime[1], timeFormatter);"},{"lineNumber":73,"author":{"gitId":"SiTingST"},"content":"                }"},{"lineNumber":74,"author":{"gitId":"SiTingST"},"content":""},{"lineNumber":75,"author":{"gitId":"SiTingST"},"content":"                System.out.println(\"time is \" +time);"},{"lineNumber":76,"author":{"gitId":"SiTingST"},"content":""},{"lineNumber":77,"author":{"gitId":"SiTingST"},"content":"                ac \u003d new AddCommand(TaskName, taskList);"},{"lineNumber":78,"author":{"gitId":"SiTingST"},"content":"                taskList \u003d ac.execute(taskList, ui, storage,\"deadlines\", date, time,null);"},{"lineNumber":79,"author":{"gitId":"SiTingST"},"content":"                break;"},{"lineNumber":80,"author":{"gitId":"SiTingST"},"content":"            case (\"event\"):"},{"lineNumber":81,"author":{"gitId":"SiTingST"},"content":""},{"lineNumber":82,"author":{"gitId":"SiTingST"},"content":"                String dateTimeArray[] \u003d seperateDueDate(input, \"event\");"},{"lineNumber":83,"author":{"gitId":"SiTingST"},"content":"                String timeArray[] \u003d seperateStartEndTime(dateTimeArray);"},{"lineNumber":84,"author":{"gitId":"SiTingST"},"content":""},{"lineNumber":85,"author":{"gitId":"SiTingST"},"content":"                LocalDate startDate \u003d LocalDate.parse(dateTimeArray[0], dateFormatter);"},{"lineNumber":86,"author":{"gitId":"SiTingST"},"content":"                LocalTime startTime \u003d LocalTime.parse(timeArray[0], timeFormatter);"},{"lineNumber":87,"author":{"gitId":"SiTingST"},"content":"                LocalTime endTime \u003d LocalTime.parse(timeArray[1],timeFormatter);"},{"lineNumber":88,"author":{"gitId":"SiTingST"},"content":""},{"lineNumber":89,"author":{"gitId":"SiTingST"},"content":"                ac \u003d new AddCommand(TaskName, taskList);"},{"lineNumber":90,"author":{"gitId":"SiTingST"},"content":"                taskList \u003d ac.execute(taskList, ui, storage,\"events\", startDate, startTime,endTime);"},{"lineNumber":91,"author":{"gitId":"SiTingST"},"content":"                break;"},{"lineNumber":92,"author":{"gitId":"SiTingST"},"content":"            default:"},{"lineNumber":93,"author":{"gitId":"SiTingST"},"content":"                throw new DukeException(\"OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\");"},{"lineNumber":94,"author":{"gitId":"SiTingST"},"content":"            }"},{"lineNumber":95,"author":{"gitId":"SiTingST"},"content":"        }"},{"lineNumber":96,"author":{"gitId":"SiTingST"},"content":"        return false;"},{"lineNumber":97,"author":{"gitId":"SiTingST"},"content":"    }"},{"lineNumber":98,"author":{"gitId":"SiTingST"},"content":""},{"lineNumber":99,"author":{"gitId":"SiTingST"},"content":""},{"lineNumber":100,"author":{"gitId":"SiTingST"},"content":""},{"lineNumber":101,"author":{"gitId":"SiTingST"},"content":""},{"lineNumber":102,"author":{"gitId":"SiTingST"},"content":"    public static boolean isValidTaskNumber(int no, String type, int arraySize) {"},{"lineNumber":103,"author":{"gitId":"SiTingST"},"content":"        try {"},{"lineNumber":104,"author":{"gitId":"SiTingST"},"content":"            if (no \u003c 0 || no \u003e\u003d arraySize \u0026\u0026 !type.equals(\"done\")) {"},{"lineNumber":105,"author":{"gitId":"SiTingST"},"content":"                throw new DukeException(\"There are no task in list. Please add some task and try again.\");"},{"lineNumber":106,"author":{"gitId":"SiTingST"},"content":"            } else if (no \u003e\u003d arraySize \u0026\u0026 type.equals(\"delete\")) {"},{"lineNumber":107,"author":{"gitId":"SiTingST"},"content":"                throw new DukeException(\"Item number \" + no + \" is not found in list. Please check again\");"},{"lineNumber":108,"author":{"gitId":"SiTingST"},"content":"            }  else if (arraySize \u003c 0 \u0026\u0026 type.equals(\"list\")) {"},{"lineNumber":109,"author":{"gitId":"SiTingST"},"content":"                throw new DukeException(\"There are no task in list. Please check again\");"},{"lineNumber":110,"author":{"gitId":"SiTingST"},"content":"            } else {"},{"lineNumber":111,"author":{"gitId":"SiTingST"},"content":"                return true;"},{"lineNumber":112,"author":{"gitId":"SiTingST"},"content":"            }"},{"lineNumber":113,"author":{"gitId":"SiTingST"},"content":"        } catch (DukeException e) {"},{"lineNumber":114,"author":{"gitId":"SiTingST"},"content":"            e.printMessage();"},{"lineNumber":115,"author":{"gitId":"SiTingST"},"content":"            return false;"},{"lineNumber":116,"author":{"gitId":"SiTingST"},"content":"        }"},{"lineNumber":117,"author":{"gitId":"SiTingST"},"content":"    }"},{"lineNumber":118,"author":{"gitId":"SiTingST"},"content":""},{"lineNumber":119,"author":{"gitId":"SiTingST"},"content":"    public static String[] separateUserInput(String userInput) throws DukeException {"},{"lineNumber":120,"author":{"gitId":"SiTingST"},"content":""},{"lineNumber":121,"author":{"gitId":"SiTingST"},"content":"        String[] inputArray  \u003d userInput.split(\" \");"},{"lineNumber":122,"author":{"gitId":"SiTingST"},"content":"        String taskName \u003d inputArray[0];"},{"lineNumber":123,"author":{"gitId":"SiTingST"},"content":""},{"lineNumber":124,"author":{"gitId":"SiTingST"},"content":"        if (taskName.isBlank()) {"},{"lineNumber":125,"author":{"gitId":"SiTingST"},"content":"            throw new DukeException(\"OOPS!!! The description of a \" + inputArray[1] + \" cannot be empty.\");"},{"lineNumber":126,"author":{"gitId":"SiTingST"},"content":"        } else{"},{"lineNumber":127,"author":{"gitId":"SiTingST"},"content":"            return inputArray;"},{"lineNumber":128,"author":{"gitId":"SiTingST"},"content":"        }"},{"lineNumber":129,"author":{"gitId":"SiTingST"},"content":"    }"},{"lineNumber":130,"author":{"gitId":"SiTingST"},"content":""},{"lineNumber":131,"author":{"gitId":"SiTingST"},"content":"    public static String[] seperateDueDate (String input, String type) throws DukeException {"},{"lineNumber":132,"author":{"gitId":"SiTingST"},"content":""},{"lineNumber":133,"author":{"gitId":"SiTingST"},"content":"        if(input.contains(\"/by\") \u0026\u0026 type.equals(\"deadline\")) {"},{"lineNumber":134,"author":{"gitId":"SiTingST"},"content":"            String dueBy[] \u003d input.split(\"/by \");"},{"lineNumber":135,"author":{"gitId":"SiTingST"},"content":"            TaskName \u003d dueBy[0].replace(type, \"\");"},{"lineNumber":136,"author":{"gitId":"SiTingST"},"content":"            String[] stringTime \u003d dueBy[1].split(\" \");"},{"lineNumber":137,"author":{"gitId":"SiTingST"},"content":"            return stringTime;"},{"lineNumber":138,"author":{"gitId":"SiTingST"},"content":"        }else if(input.contains(\"/at\") \u0026\u0026 type.equals(\"event\")){"},{"lineNumber":139,"author":{"gitId":"SiTingST"},"content":"            String dueDetails[] \u003d input.split(\"/at \");"},{"lineNumber":140,"author":{"gitId":"SiTingST"},"content":"            TaskName \u003d dueDetails[0].replace(type, \"\");"},{"lineNumber":141,"author":{"gitId":"SiTingST"},"content":"            String dateTime[] \u003d dueDetails[1].split(\" \");"},{"lineNumber":142,"author":{"gitId":"SiTingST"},"content":"            return dateTime;"},{"lineNumber":143,"author":{"gitId":"SiTingST"},"content":"        } else{"},{"lineNumber":144,"author":{"gitId":"SiTingST"},"content":"            throw new DukeException(\"OOPS!!! Wrong command to add deadlines or start/end time. \" +"},{"lineNumber":145,"author":{"gitId":"SiTingST"},"content":"                    \"Use /by for deadline and /at for event\");"},{"lineNumber":146,"author":{"gitId":"SiTingST"},"content":"        }"},{"lineNumber":147,"author":{"gitId":"SiTingST"},"content":""},{"lineNumber":148,"author":{"gitId":"SiTingST"},"content":"    }"},{"lineNumber":149,"author":{"gitId":"SiTingST"},"content":""},{"lineNumber":150,"author":{"gitId":"SiTingST"},"content":"    public static boolean dateTimeParse(String[] dateTime, String type) throws DukeException {"},{"lineNumber":151,"author":{"gitId":"SiTingST"},"content":""},{"lineNumber":152,"author":{"gitId":"SiTingST"},"content":"        if(dateTime.length \u003c 2 \u0026\u0026 type.equals(\"deadline\")){"},{"lineNumber":153,"author":{"gitId":"SiTingST"},"content":"            return true;"},{"lineNumber":154,"author":{"gitId":"SiTingST"},"content":"        } else if(dateTime.length \u003e2 \u0026\u0026 type.equals(\"deadline\")){"},{"lineNumber":155,"author":{"gitId":"SiTingST"},"content":"            throw new DukeException(\"OOPS!!! Deadline task only accept one start time. Please create an event instead\");"},{"lineNumber":156,"author":{"gitId":"SiTingST"},"content":"        }"},{"lineNumber":157,"author":{"gitId":"SiTingST"},"content":"        return false;"},{"lineNumber":158,"author":{"gitId":"SiTingST"},"content":"    }"},{"lineNumber":159,"author":{"gitId":"SiTingST"},"content":""},{"lineNumber":160,"author":{"gitId":"SiTingST"},"content":""},{"lineNumber":161,"author":{"gitId":"SiTingST"},"content":"    public static String[] seperateStartEndTime (String[] dateTime) throws DukeException {"},{"lineNumber":162,"author":{"gitId":"SiTingST"},"content":"        String[] timeArr;"},{"lineNumber":163,"author":{"gitId":"SiTingST"},"content":"        if(dateTime[1].contains(\"-\")) {"},{"lineNumber":164,"author":{"gitId":"SiTingST"},"content":"            timeArr \u003d dateTime[1].split(\"-\");"},{"lineNumber":165,"author":{"gitId":"SiTingST"},"content":"        }else{"},{"lineNumber":166,"author":{"gitId":"SiTingST"},"content":"            throw new DukeException(\"Please seperate the time with \u0027-\u0027. For ie, 1800-2000 or include start/end date\");"},{"lineNumber":167,"author":{"gitId":"SiTingST"},"content":"        }"},{"lineNumber":168,"author":{"gitId":"SiTingST"},"content":"        return timeArr;"},{"lineNumber":169,"author":{"gitId":"SiTingST"},"content":"    }"},{"lineNumber":170,"author":{"gitId":"SiTingST"},"content":""},{"lineNumber":171,"author":{"gitId":"SiTingST"},"content":"}"}],"authorContributionMap":{"SiTingST":171}},{"path":"src/main/java/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"SiTingST"},"content":"import java.time.LocalDate;"},{"lineNumber":2,"author":{"gitId":"SiTingST"},"content":"import java.time.LocalTime;"},{"lineNumber":3,"author":{"gitId":"SiTingST"},"content":"import java.time.format.DateTimeFormatter;"},{"lineNumber":4,"author":{"gitId":"SiTingST"},"content":""},{"lineNumber":5,"author":{"gitId":"SiTingST"},"content":"public class Task {"},{"lineNumber":6,"author":{"gitId":"SiTingST"},"content":"    protected String description;"},{"lineNumber":7,"author":{"gitId":"SiTingST"},"content":"    protected boolean status;"},{"lineNumber":8,"author":{"gitId":"SiTingST"},"content":""},{"lineNumber":9,"author":{"gitId":"SiTingST"},"content":"    private static DateTimeFormatter dateFormatter  \u003d DateTimeFormatter.ofPattern(\"yyyy-MM-dd\");"},{"lineNumber":10,"author":{"gitId":"SiTingST"},"content":"    private static DateTimeFormatter timeFormatter \u003d DateTimeFormatter.ofPattern(\"HH:mm\");"},{"lineNumber":11,"author":{"gitId":"SiTingST"},"content":""},{"lineNumber":12,"author":{"gitId":"SiTingST"},"content":"    public Task(){"},{"lineNumber":13,"author":{"gitId":"SiTingST"},"content":""},{"lineNumber":14,"author":{"gitId":"SiTingST"},"content":"    }"},{"lineNumber":15,"author":{"gitId":"SiTingST"},"content":""},{"lineNumber":16,"author":{"gitId":"SiTingST"},"content":"    public Task(String title){"},{"lineNumber":17,"author":{"gitId":"SiTingST"},"content":"        this.description \u003d title;"},{"lineNumber":18,"author":{"gitId":"SiTingST"},"content":"        this.status \u003d false;"},{"lineNumber":19,"author":{"gitId":"SiTingST"},"content":"    }"},{"lineNumber":20,"author":{"gitId":"SiTingST"},"content":""},{"lineNumber":21,"author":{"gitId":"SiTingST"},"content":"    public Task(String title, boolean b){"},{"lineNumber":22,"author":{"gitId":"SiTingST"},"content":"        this.description \u003d title;"},{"lineNumber":23,"author":{"gitId":"SiTingST"},"content":"         this.status \u003d b;"},{"lineNumber":24,"author":{"gitId":"SiTingST"},"content":"    }"},{"lineNumber":25,"author":{"gitId":"SiTingST"},"content":""},{"lineNumber":26,"author":{"gitId":"SiTingST"},"content":"    public void setCompleted(){"},{"lineNumber":27,"author":{"gitId":"SiTingST"},"content":"        this.status \u003d true;"},{"lineNumber":28,"author":{"gitId":"SiTingST"},"content":"    }"},{"lineNumber":29,"author":{"gitId":"SiTingST"},"content":""},{"lineNumber":30,"author":{"gitId":"SiTingST"},"content":"    public String isCompleted(){"},{"lineNumber":31,"author":{"gitId":"SiTingST"},"content":"        return (this.status ? \"\\u2718\" : \" \");"},{"lineNumber":32,"author":{"gitId":"SiTingST"},"content":"    }"},{"lineNumber":33,"author":{"gitId":"SiTingST"},"content":""},{"lineNumber":34,"author":{"gitId":"SiTingST"},"content":"    public String getTaskName(){"},{"lineNumber":35,"author":{"gitId":"SiTingST"},"content":"        return this.description;"},{"lineNumber":36,"author":{"gitId":"SiTingST"},"content":"    }"},{"lineNumber":37,"author":{"gitId":"SiTingST"},"content":""},{"lineNumber":38,"author":{"gitId":"SiTingST"},"content":"    public String changeFormat(){"},{"lineNumber":39,"author":{"gitId":"SiTingST"},"content":"        return \",\" +  this.status + \",\" + this.getTaskName();"},{"lineNumber":40,"author":{"gitId":"SiTingST"},"content":"    }"},{"lineNumber":41,"author":{"gitId":"SiTingST"},"content":""},{"lineNumber":42,"author":{"gitId":"SiTingST"},"content":"    public Task changeToTaskFormat(String string_task) {"},{"lineNumber":43,"author":{"gitId":"SiTingST"},"content":""},{"lineNumber":44,"author":{"gitId":"SiTingST"},"content":"        if(string_task.charAt(0) \u003d\u003d \u0027T\u0027){"},{"lineNumber":45,"author":{"gitId":"SiTingST"},"content":"            String[] tasks \u003d string_task.split(\",\");"},{"lineNumber":46,"author":{"gitId":"SiTingST"},"content":"            return new ToDos(tasks[2], Boolean.parseBoolean(tasks[1]));"},{"lineNumber":47,"author":{"gitId":"SiTingST"},"content":""},{"lineNumber":48,"author":{"gitId":"SiTingST"},"content":"        } else if(string_task.charAt(0) \u003d\u003d \u0027D\u0027){"},{"lineNumber":49,"author":{"gitId":"SiTingST"},"content":"            String[] tasks \u003d string_task.split(\",\");"},{"lineNumber":50,"author":{"gitId":"SiTingST"},"content":""},{"lineNumber":51,"author":{"gitId":"SiTingST"},"content":"            LocalDate date \u003d LocalDate.parse(tasks[3], dateFormatter);"},{"lineNumber":52,"author":{"gitId":"SiTingST"},"content":"            LocalTime startTime \u003d LocalTime.parse(tasks[4], timeFormatter);"},{"lineNumber":53,"author":{"gitId":"SiTingST"},"content":""},{"lineNumber":54,"author":{"gitId":"SiTingST"},"content":"            return new Deadlines(tasks[2], Boolean.parseBoolean(tasks[1]),date, startTime);"},{"lineNumber":55,"author":{"gitId":"SiTingST"},"content":""},{"lineNumber":56,"author":{"gitId":"SiTingST"},"content":"        }else if(string_task.charAt(0) \u003d\u003d \u0027E\u0027){"},{"lineNumber":57,"author":{"gitId":"SiTingST"},"content":"            String[] tasks \u003d string_task.split(\",\");"},{"lineNumber":58,"author":{"gitId":"SiTingST"},"content":""},{"lineNumber":59,"author":{"gitId":"SiTingST"},"content":"            LocalDate date \u003d LocalDate.parse(tasks[3], dateFormatter);"},{"lineNumber":60,"author":{"gitId":"SiTingST"},"content":"            LocalTime startTime \u003d LocalTime.parse(tasks[4], timeFormatter);"},{"lineNumber":61,"author":{"gitId":"SiTingST"},"content":"            LocalTime endTime \u003d LocalTime.parse(tasks[5], timeFormatter);"},{"lineNumber":62,"author":{"gitId":"SiTingST"},"content":""},{"lineNumber":63,"author":{"gitId":"SiTingST"},"content":"            return new Events(tasks[2], Boolean.parseBoolean(tasks[1]), date, startTime,endTime);"},{"lineNumber":64,"author":{"gitId":"SiTingST"},"content":"        }"},{"lineNumber":65,"author":{"gitId":"SiTingST"},"content":"        else{"},{"lineNumber":66,"author":{"gitId":"SiTingST"},"content":"            return new Task();"},{"lineNumber":67,"author":{"gitId":"SiTingST"},"content":"        }"},{"lineNumber":68,"author":{"gitId":"SiTingST"},"content":"    }"},{"lineNumber":69,"author":{"gitId":"SiTingST"},"content":""},{"lineNumber":70,"author":{"gitId":"SiTingST"},"content":"    @Override"},{"lineNumber":71,"author":{"gitId":"SiTingST"},"content":"    public String toString() {"},{"lineNumber":72,"author":{"gitId":"SiTingST"},"content":"        return \"[\" + this.isCompleted() + \"] \" + this.getTaskName();"},{"lineNumber":73,"author":{"gitId":"SiTingST"},"content":"    }"},{"lineNumber":74,"author":{"gitId":"SiTingST"},"content":"}"}],"authorContributionMap":{"SiTingST":74}},{"path":"src/main/java/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"SiTingST"},"content":"import java.time.LocalDate;"},{"lineNumber":2,"author":{"gitId":"SiTingST"},"content":"import java.time.LocalTime;"},{"lineNumber":3,"author":{"gitId":"SiTingST"},"content":"import java.util.ArrayList;"},{"lineNumber":4,"author":{"gitId":"SiTingST"},"content":""},{"lineNumber":5,"author":{"gitId":"SiTingST"},"content":"public class TaskList {"},{"lineNumber":6,"author":{"gitId":"SiTingST"},"content":"    private static ArrayList\u003cTask\u003e taskArraylist \u003d new ArrayList\u003cTask\u003e();"},{"lineNumber":7,"author":{"gitId":"SiTingST"},"content":"    private static UI ui \u003d new UI();"},{"lineNumber":8,"author":{"gitId":"SiTingST"},"content":""},{"lineNumber":9,"author":{"gitId":"SiTingST"},"content":"    public void addToDo(String description)  {"},{"lineNumber":10,"author":{"gitId":"SiTingST"},"content":"        taskArraylist.add(new ToDos(description));"},{"lineNumber":11,"author":{"gitId":"SiTingST"},"content":"    }"},{"lineNumber":12,"author":{"gitId":"SiTingST"},"content":""},{"lineNumber":13,"author":{"gitId":"SiTingST"},"content":""},{"lineNumber":14,"author":{"gitId":"SiTingST"},"content":"    public void addDeadline(String description, LocalDate dueDate, LocalTime endTime) {"},{"lineNumber":15,"author":{"gitId":"SiTingST"},"content":"        taskArraylist.add(new Deadlines(description,dueDate, endTime));"},{"lineNumber":16,"author":{"gitId":"SiTingST"},"content":"    }"},{"lineNumber":17,"author":{"gitId":"SiTingST"},"content":""},{"lineNumber":18,"author":{"gitId":"SiTingST"},"content":"    public void addEvent(String description, LocalDate dueDate, LocalTime startTime, LocalTime endTime) {"},{"lineNumber":19,"author":{"gitId":"SiTingST"},"content":"        taskArraylist.add(new Events(description, false, dueDate, startTime, endTime));"},{"lineNumber":20,"author":{"gitId":"SiTingST"},"content":"    }"},{"lineNumber":21,"author":{"gitId":"SiTingST"},"content":""},{"lineNumber":22,"author":{"gitId":"SiTingST"},"content":"    public void showAllTask(){"},{"lineNumber":23,"author":{"gitId":"SiTingST"},"content":"        ui.printListHeader();"},{"lineNumber":24,"author":{"gitId":"SiTingST"},"content":"        for (int i \u003d 0; i \u003c taskArraylist.size(); i++) {"},{"lineNumber":25,"author":{"gitId":"SiTingST"},"content":"            ui.printTask(i,taskArraylist.get(i) );"},{"lineNumber":26,"author":{"gitId":"SiTingST"},"content":"        }"},{"lineNumber":27,"author":{"gitId":"SiTingST"},"content":"        ui.displayLines();"},{"lineNumber":28,"author":{"gitId":"SiTingST"},"content":"    }"},{"lineNumber":29,"author":{"gitId":"SiTingST"},"content":""},{"lineNumber":30,"author":{"gitId":"SiTingST"},"content":"    public void markAsDone(int index){"},{"lineNumber":31,"author":{"gitId":"SiTingST"},"content":"        taskArraylist.get(index).setCompleted();"},{"lineNumber":32,"author":{"gitId":"SiTingST"},"content":"        ui.displayDoneTaskMessage(taskArraylist.get(index));"},{"lineNumber":33,"author":{"gitId":"SiTingST"},"content":"        taskArraylist.get(index).setCompleted();"},{"lineNumber":34,"author":{"gitId":"SiTingST"},"content":"    }"},{"lineNumber":35,"author":{"gitId":"SiTingST"},"content":""},{"lineNumber":36,"author":{"gitId":"SiTingST"},"content":"    public void deleteTask(int index){"},{"lineNumber":37,"author":{"gitId":"SiTingST"},"content":"        ui.displayDeletedTaskMessage(taskArraylist.get(index));"},{"lineNumber":38,"author":{"gitId":"SiTingST"},"content":"        taskArraylist.remove(index);"},{"lineNumber":39,"author":{"gitId":"SiTingST"},"content":"    }"},{"lineNumber":40,"author":{"gitId":"SiTingST"},"content":""},{"lineNumber":41,"author":{"gitId":"SiTingST"},"content":"    public ArrayList\u003cTask\u003e getTaskListArray(){"},{"lineNumber":42,"author":{"gitId":"SiTingST"},"content":"        return this.taskArraylist;"},{"lineNumber":43,"author":{"gitId":"SiTingST"},"content":"    }"},{"lineNumber":44,"author":{"gitId":"SiTingST"},"content":""},{"lineNumber":45,"author":{"gitId":"SiTingST"},"content":"    public void setTaskArraylist (ArrayList\u003cTask\u003e al){"},{"lineNumber":46,"author":{"gitId":"SiTingST"},"content":"       this.taskArraylist \u003d al;"},{"lineNumber":47,"author":{"gitId":"SiTingST"},"content":"    }"},{"lineNumber":48,"author":{"gitId":"SiTingST"},"content":"    public Task getTask(int index){"},{"lineNumber":49,"author":{"gitId":"SiTingST"},"content":"        return taskArraylist.get(index);"},{"lineNumber":50,"author":{"gitId":"SiTingST"},"content":"    }"},{"lineNumber":51,"author":{"gitId":"SiTingST"},"content":"}"}],"authorContributionMap":{"SiTingST":51}},{"path":"src/main/java/ToDos.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"SiTingST"},"content":"public class ToDos extends Task {"},{"lineNumber":2,"author":{"gitId":"SiTingST"},"content":""},{"lineNumber":3,"author":{"gitId":"SiTingST"},"content":"    public ToDos(String title, Boolean b) {"},{"lineNumber":4,"author":{"gitId":"SiTingST"},"content":"        super(title, b);"},{"lineNumber":5,"author":{"gitId":"SiTingST"},"content":"    }"},{"lineNumber":6,"author":{"gitId":"SiTingST"},"content":""},{"lineNumber":7,"author":{"gitId":"SiTingST"},"content":"    public ToDos(String title) {"},{"lineNumber":8,"author":{"gitId":"SiTingST"},"content":"        super(title);"},{"lineNumber":9,"author":{"gitId":"SiTingST"},"content":"    }"},{"lineNumber":10,"author":{"gitId":"SiTingST"},"content":""},{"lineNumber":11,"author":{"gitId":"SiTingST"},"content":"    @Override"},{"lineNumber":12,"author":{"gitId":"SiTingST"},"content":"    public String changeFormat(){"},{"lineNumber":13,"author":{"gitId":"SiTingST"},"content":"        return \"T\" + super.changeFormat();"},{"lineNumber":14,"author":{"gitId":"SiTingST"},"content":"    }"},{"lineNumber":15,"author":{"gitId":"SiTingST"},"content":""},{"lineNumber":16,"author":{"gitId":"SiTingST"},"content":"    @Override"},{"lineNumber":17,"author":{"gitId":"SiTingST"},"content":"    public String toString() {"},{"lineNumber":18,"author":{"gitId":"SiTingST"},"content":"        return  \"[T]\" + super.toString();"},{"lineNumber":19,"author":{"gitId":"SiTingST"},"content":"    }"},{"lineNumber":20,"author":{"gitId":"SiTingST"},"content":"}"}],"authorContributionMap":{"SiTingST":20}},{"path":"src/main/java/UI.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"SiTingST"},"content":"import java.util.Scanner;"},{"lineNumber":2,"author":{"gitId":"SiTingST"},"content":""},{"lineNumber":3,"author":{"gitId":"SiTingST"},"content":"public class UI {"},{"lineNumber":4,"author":{"gitId":"SiTingST"},"content":"    static final String lines \u003d \"----------------------------------------\";"},{"lineNumber":5,"author":{"gitId":"SiTingST"},"content":"    private static Scanner sc \u003d new Scanner(System.in);"},{"lineNumber":6,"author":{"gitId":"SiTingST"},"content":""},{"lineNumber":7,"author":{"gitId":"SiTingST"},"content":""},{"lineNumber":8,"author":{"gitId":"SiTingST"},"content":"    public static void displayWelcomeMessage() {"},{"lineNumber":9,"author":{"gitId":"SiTingST"},"content":"        String logo \u003d \" ____        _        \\n\""},{"lineNumber":10,"author":{"gitId":"SiTingST"},"content":"                + \"|  _ \\\\ _   _| | _____ \\n\""},{"lineNumber":11,"author":{"gitId":"SiTingST"},"content":"                + \"| | | | | | | |/ / _ \\\\\\n\""},{"lineNumber":12,"author":{"gitId":"SiTingST"},"content":"                + \"| |_| | |_| |   \u003c  __/\\n\""},{"lineNumber":13,"author":{"gitId":"SiTingST"},"content":"                + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\";"},{"lineNumber":14,"author":{"gitId":"SiTingST"},"content":"        System.out.println(\"Hi There! Greetings from \\n\" + logo);"},{"lineNumber":15,"author":{"gitId":"SiTingST"},"content":"        System.out.println(lines + \"\\n\" + \" Good day! I\u0027m Duke\" + \"\\n\" + \" How can I help you today? \" + \"\\n\" + lines);"},{"lineNumber":16,"author":{"gitId":"SiTingST"},"content":""},{"lineNumber":17,"author":{"gitId":"SiTingST"},"content":"    }"},{"lineNumber":18,"author":{"gitId":"SiTingST"},"content":""},{"lineNumber":19,"author":{"gitId":"SiTingST"},"content":"    public static void displayEndMessage() {"},{"lineNumber":20,"author":{"gitId":"SiTingST"},"content":"        System.out.println(lines + \"\\n\" + \" Bye. Hope to see you again!\" + \"\\n\" + lines);"},{"lineNumber":21,"author":{"gitId":"SiTingST"},"content":"    }"},{"lineNumber":22,"author":{"gitId":"SiTingST"},"content":""},{"lineNumber":23,"author":{"gitId":"SiTingST"},"content":"    public static String readCommand(){"},{"lineNumber":24,"author":{"gitId":"SiTingST"},"content":"        return sc.nextLine();"},{"lineNumber":25,"author":{"gitId":"SiTingST"},"content":"    }"},{"lineNumber":26,"author":{"gitId":"SiTingST"},"content":""},{"lineNumber":27,"author":{"gitId":"SiTingST"},"content":"    public void printTask(int count, Task task){"},{"lineNumber":28,"author":{"gitId":"SiTingST"},"content":"        System.out.println((count + 1) + \".\" + task.toString());"},{"lineNumber":29,"author":{"gitId":"SiTingST"},"content":"    }"},{"lineNumber":30,"author":{"gitId":"SiTingST"},"content":""},{"lineNumber":31,"author":{"gitId":"SiTingST"},"content":"    public void printListHeader(){"},{"lineNumber":32,"author":{"gitId":"SiTingST"},"content":"        System.out.println( \"\\nHere are the tasks in your list:\");"},{"lineNumber":33,"author":{"gitId":"SiTingST"},"content":"    }"},{"lineNumber":34,"author":{"gitId":"SiTingST"},"content":""},{"lineNumber":35,"author":{"gitId":"SiTingST"},"content":"    public void displayLines(){"},{"lineNumber":36,"author":{"gitId":"SiTingST"},"content":"        System.out.println(lines);"},{"lineNumber":37,"author":{"gitId":"SiTingST"},"content":"    }"},{"lineNumber":38,"author":{"gitId":"SiTingST"},"content":""},{"lineNumber":39,"author":{"gitId":"SiTingST"},"content":"    public void displayAddedTaskMessage(Task t, int size) {"},{"lineNumber":40,"author":{"gitId":"SiTingST"},"content":"        System.out.println(lines + \"\\nGot it. I\u0027ve added this task: \\n\\t\" + t.toString() + \"\\n Now you have \""},{"lineNumber":41,"author":{"gitId":"SiTingST"},"content":"                + size + \" tasks in your list \\n\" + lines);"},{"lineNumber":42,"author":{"gitId":"SiTingST"},"content":"    }"},{"lineNumber":43,"author":{"gitId":"SiTingST"},"content":""},{"lineNumber":44,"author":{"gitId":"SiTingST"},"content":"    public static void displayDeletedTaskMessage(Task t){"},{"lineNumber":45,"author":{"gitId":"SiTingST"},"content":"        System.out.println(lines + \"\\nNice! I\u0027ve removed this task: \\n\" + t.toString() + \"\\n\" + lines);"},{"lineNumber":46,"author":{"gitId":"SiTingST"},"content":"    }"},{"lineNumber":47,"author":{"gitId":"SiTingST"},"content":""},{"lineNumber":48,"author":{"gitId":"SiTingST"},"content":"    public void displayDoneTaskMessage(Task t){"},{"lineNumber":49,"author":{"gitId":"SiTingST"},"content":"        System.out.println(lines + \"\\nNice! I\u0027ll make this task as done: \\n\" + t.toString() + \"\\n\" + lines);"},{"lineNumber":50,"author":{"gitId":"SiTingST"},"content":"    }"},{"lineNumber":51,"author":{"gitId":"SiTingST"},"content":""},{"lineNumber":52,"author":{"gitId":"SiTingST"},"content":"    public void showError(String e){"},{"lineNumber":53,"author":{"gitId":"SiTingST"},"content":"        System.out.println(e);"},{"lineNumber":54,"author":{"gitId":"SiTingST"},"content":"    }"},{"lineNumber":55,"author":{"gitId":"SiTingST"},"content":""},{"lineNumber":56,"author":{"gitId":"SiTingST"},"content":"}"}],"authorContributionMap":{"SiTingST":56}},{"path":"src/main/java/duke/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"SiTingST"},"content":"package duke;"},{"lineNumber":2,"author":{"gitId":"SiTingST"},"content":"import java.io.IOException;"},{"lineNumber":3,"author":{"gitId":"SiTingST"},"content":""},{"lineNumber":4,"author":{"gitId":"SiTingST"},"content":"import duke.parser.Parser;"},{"lineNumber":5,"author":{"gitId":"SiTingST"},"content":"import duke.tasklist.TaskList;"},{"lineNumber":6,"author":{"gitId":"SiTingST"},"content":"import duke.ui.UI;"},{"lineNumber":7,"author":{"gitId":"SiTingST"},"content":"import duke.data.DataStorage;"},{"lineNumber":8,"author":{"gitId":"SiTingST"},"content":"import duke.exception.DukeException;"},{"lineNumber":9,"author":{"gitId":"SiTingST"},"content":""},{"lineNumber":10,"author":{"gitId":"SiTingST"},"content":"public class Duke {"},{"lineNumber":11,"author":{"gitId":"SiTingST"},"content":""},{"lineNumber":12,"author":{"gitId":"SiTingST"},"content":"    private static DataStorage storage \u003d new DataStorage();"},{"lineNumber":13,"author":{"gitId":"SiTingST"},"content":"    private static UI ui \u003d new UI();"},{"lineNumber":14,"author":{"gitId":"SiTingST"},"content":"    private static TaskList tasks \u003d new TaskList();"},{"lineNumber":15,"author":{"gitId":"SiTingST"},"content":""},{"lineNumber":16,"author":{"gitId":"SiTingST"},"content":"    /**"},{"lineNumber":17,"author":{"gitId":"SiTingST"},"content":"     * Method to start program"},{"lineNumber":18,"author":{"gitId":"SiTingST"},"content":"     */"},{"lineNumber":19,"author":{"gitId":"SiTingST"},"content":"    public static void run() {"},{"lineNumber":20,"author":{"gitId":"SiTingST"},"content":""},{"lineNumber":21,"author":{"gitId":"SiTingST"},"content":"        ui.displayWelcomeMessage();"},{"lineNumber":22,"author":{"gitId":"SiTingST"},"content":"        boolean isExit \u003d false;"},{"lineNumber":23,"author":{"gitId":"SiTingST"},"content":"        while (!isExit) {"},{"lineNumber":24,"author":{"gitId":"SiTingST"},"content":"            try {"},{"lineNumber":25,"author":{"gitId":"SiTingST"},"content":"                tasks.setTaskArraylist(storage.loadFile());"},{"lineNumber":26,"author":{"gitId":"SiTingST"},"content":"                String fullCommand \u003d ui.readCommand();"},{"lineNumber":27,"author":{"gitId":"SiTingST"},"content":"                ui.displayLines();"},{"lineNumber":28,"author":{"gitId":"SiTingST"},"content":"                isExit \u003d Parser.parse(tasks, fullCommand);"},{"lineNumber":29,"author":{"gitId":"SiTingST"},"content":"            } catch (DukeException | IOException e) {"},{"lineNumber":30,"author":{"gitId":"SiTingST"},"content":"                ui.showError(e.getMessage());"},{"lineNumber":31,"author":{"gitId":"SiTingST"},"content":"            } finally {"},{"lineNumber":32,"author":{"gitId":"SiTingST"},"content":"                ui.displayLines();"},{"lineNumber":33,"author":{"gitId":"SiTingST"},"content":"            }"},{"lineNumber":34,"author":{"gitId":"SiTingST"},"content":"        }"},{"lineNumber":35,"author":{"gitId":"SiTingST"},"content":"    }"},{"lineNumber":36,"author":{"gitId":"SiTingST"},"content":""},{"lineNumber":37,"author":{"gitId":"SiTingST"},"content":"    public static void main(String[] args) throws DukeException, IOException {"},{"lineNumber":38,"author":{"gitId":"SiTingST"},"content":"        run();"},{"lineNumber":39,"author":{"gitId":"SiTingST"},"content":"    }"},{"lineNumber":40,"author":{"gitId":"SiTingST"},"content":"}"}],"authorContributionMap":{"SiTingST":40}},{"path":"src/main/java/duke/command/AddCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"SiTingST"},"content":"package duke.command;"},{"lineNumber":2,"author":{"gitId":"SiTingST"},"content":""},{"lineNumber":3,"author":{"gitId":"SiTingST"},"content":"import java.time.LocalDate;"},{"lineNumber":4,"author":{"gitId":"SiTingST"},"content":"import java.time.LocalTime;"},{"lineNumber":5,"author":{"gitId":"SiTingST"},"content":"import java.util.ArrayList;"},{"lineNumber":6,"author":{"gitId":"SiTingST"},"content":""},{"lineNumber":7,"author":{"gitId":"SiTingST"},"content":"import duke.tasklist.TaskList;"},{"lineNumber":8,"author":{"gitId":"SiTingST"},"content":"import duke.ui.UI;"},{"lineNumber":9,"author":{"gitId":"SiTingST"},"content":"import duke.data.DataStorage;"},{"lineNumber":10,"author":{"gitId":"SiTingST"},"content":"import duke.exception.DukeException;"},{"lineNumber":11,"author":{"gitId":"SiTingST"},"content":"import duke.task.Task;"},{"lineNumber":12,"author":{"gitId":"SiTingST"},"content":""},{"lineNumber":13,"author":{"gitId":"SiTingST"},"content":"/**"},{"lineNumber":14,"author":{"gitId":"SiTingST"},"content":" * Create add command class"},{"lineNumber":15,"author":{"gitId":"SiTingST"},"content":" */"},{"lineNumber":16,"author":{"gitId":"SiTingST"},"content":""},{"lineNumber":17,"author":{"gitId":"SiTingST"},"content":"public class AddCommand extends Command {"},{"lineNumber":18,"author":{"gitId":"SiTingST"},"content":""},{"lineNumber":19,"author":{"gitId":"SiTingST"},"content":"    /**"},{"lineNumber":20,"author":{"gitId":"SiTingST"},"content":"     * Constructor to create add command object"},{"lineNumber":21,"author":{"gitId":"SiTingST"},"content":"     */"},{"lineNumber":22,"author":{"gitId":"SiTingST"},"content":"    public AddCommand(String input, TaskList taskList) {"},{"lineNumber":23,"author":{"gitId":"SiTingST"},"content":"        super(input, taskList);"},{"lineNumber":24,"author":{"gitId":"SiTingST"},"content":"    }"},{"lineNumber":25,"author":{"gitId":"SiTingST"},"content":""},{"lineNumber":26,"author":{"gitId":"SiTingST"},"content":"    /** Add task into task list and return task list"},{"lineNumber":27,"author":{"gitId":"SiTingST"},"content":"     * @param tasklist"},{"lineNumber":28,"author":{"gitId":"SiTingST"},"content":"     * @param ui"},{"lineNumber":29,"author":{"gitId":"SiTingST"},"content":"     * @param storage"},{"lineNumber":30,"author":{"gitId":"SiTingST"},"content":"     * @param type"},{"lineNumber":31,"author":{"gitId":"SiTingST"},"content":"     * @param dueDate"},{"lineNumber":32,"author":{"gitId":"SiTingST"},"content":"     * @param startTime"},{"lineNumber":33,"author":{"gitId":"SiTingST"},"content":"     * @param endTime"},{"lineNumber":34,"author":{"gitId":"SiTingST"},"content":"     * @return TaskList"},{"lineNumber":35,"author":{"gitId":"SiTingST"},"content":"     * @throws DukeException"},{"lineNumber":36,"author":{"gitId":"SiTingST"},"content":"     */"},{"lineNumber":37,"author":{"gitId":"SiTingST"},"content":"    public TaskList execute(TaskList tasklist, UI ui, DataStorage storage, String type, LocalDate dueDate,"},{"lineNumber":38,"author":{"gitId":"SiTingST"},"content":"                            LocalTime startTime, LocalTime endTime) throws DukeException {"},{"lineNumber":39,"author":{"gitId":"SiTingST"},"content":"        switch (type) {"},{"lineNumber":40,"author":{"gitId":"SiTingST"},"content":"        case (\"todo\"):"},{"lineNumber":41,"author":{"gitId":"SiTingST"},"content":"            tasklist.addToDo(this.input);"},{"lineNumber":42,"author":{"gitId":"SiTingST"},"content":"            break;"},{"lineNumber":43,"author":{"gitId":"SiTingST"},"content":"        case (\"deadlines\"):"},{"lineNumber":44,"author":{"gitId":"SiTingST"},"content":"            System.out.println(\"hehe \" + this.input);"},{"lineNumber":45,"author":{"gitId":"SiTingST"},"content":"            tasklist.addDeadline(this.input, dueDate, startTime);"},{"lineNumber":46,"author":{"gitId":"SiTingST"},"content":"            break;"},{"lineNumber":47,"author":{"gitId":"SiTingST"},"content":"        case (\"events\"):"},{"lineNumber":48,"author":{"gitId":"SiTingST"},"content":"            tasklist.addEvent(this.input, dueDate, startTime, endTime);"},{"lineNumber":49,"author":{"gitId":"SiTingST"},"content":"            break;"},{"lineNumber":50,"author":{"gitId":"SiTingST"},"content":"        default:"},{"lineNumber":51,"author":{"gitId":"SiTingST"},"content":"            break;"},{"lineNumber":52,"author":{"gitId":"SiTingST"},"content":"        }"},{"lineNumber":53,"author":{"gitId":"SiTingST"},"content":""},{"lineNumber":54,"author":{"gitId":"SiTingST"},"content":"        ArrayList\u003cTask\u003e taskArrayList \u003d tasklist.getTaskListArray();"},{"lineNumber":55,"author":{"gitId":"SiTingST"},"content":"        int currentSize \u003d taskArrayList.size();"},{"lineNumber":56,"author":{"gitId":"SiTingST"},"content":""},{"lineNumber":57,"author":{"gitId":"SiTingST"},"content":"        ui.displayAddedTaskMessage(tasklist.getTask(currentSize - 1), currentSize);"},{"lineNumber":58,"author":{"gitId":"SiTingST"},"content":"        storage.save(tasklist.getTaskListArray());"},{"lineNumber":59,"author":{"gitId":"SiTingST"},"content":""},{"lineNumber":60,"author":{"gitId":"SiTingST"},"content":"        return tasklist;"},{"lineNumber":61,"author":{"gitId":"SiTingST"},"content":"    }"},{"lineNumber":62,"author":{"gitId":"SiTingST"},"content":""},{"lineNumber":63,"author":{"gitId":"SiTingST"},"content":"}"}],"authorContributionMap":{"SiTingST":63}},{"path":"src/main/java/duke/command/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"SiTingST"},"content":"package duke.command;"},{"lineNumber":2,"author":{"gitId":"SiTingST"},"content":""},{"lineNumber":3,"author":{"gitId":"SiTingST"},"content":"import duke.tasklist.TaskList;"},{"lineNumber":4,"author":{"gitId":"SiTingST"},"content":"import duke.ui.UI;"},{"lineNumber":5,"author":{"gitId":"SiTingST"},"content":"import duke.data.DataStorage;"},{"lineNumber":6,"author":{"gitId":"SiTingST"},"content":"import duke.exception.DukeException;"},{"lineNumber":7,"author":{"gitId":"SiTingST"},"content":""},{"lineNumber":8,"author":{"gitId":"SiTingST"},"content":"/**"},{"lineNumber":9,"author":{"gitId":"SiTingST"},"content":" * A class that interacts with TaskList to add and modify task"},{"lineNumber":10,"author":{"gitId":"SiTingST"},"content":" */"},{"lineNumber":11,"author":{"gitId":"SiTingST"},"content":"public class Command {"},{"lineNumber":12,"author":{"gitId":"SiTingST"},"content":""},{"lineNumber":13,"author":{"gitId":"SiTingST"},"content":"    protected static String input;"},{"lineNumber":14,"author":{"gitId":"SiTingST"},"content":"    protected static boolean isExit;"},{"lineNumber":15,"author":{"gitId":"SiTingST"},"content":""},{"lineNumber":16,"author":{"gitId":"SiTingST"},"content":"    /** Create command object"},{"lineNumber":17,"author":{"gitId":"SiTingST"},"content":"     * @param input"},{"lineNumber":18,"author":{"gitId":"SiTingST"},"content":"     * @param taskList"},{"lineNumber":19,"author":{"gitId":"SiTingST"},"content":"     */"},{"lineNumber":20,"author":{"gitId":"SiTingST"},"content":"    public Command (String input, TaskList taskList) {"},{"lineNumber":21,"author":{"gitId":"SiTingST"},"content":"        this.input \u003d input;"},{"lineNumber":22,"author":{"gitId":"SiTingST"},"content":"        this.isExit \u003d false;"},{"lineNumber":23,"author":{"gitId":"SiTingST"},"content":"    }"},{"lineNumber":24,"author":{"gitId":"SiTingST"},"content":""},{"lineNumber":25,"author":{"gitId":"SiTingST"},"content":"    /** Allow each command to execute their own function"},{"lineNumber":26,"author":{"gitId":"SiTingST"},"content":"     * @param tasklist"},{"lineNumber":27,"author":{"gitId":"SiTingST"},"content":"     * @param ui"},{"lineNumber":28,"author":{"gitId":"SiTingST"},"content":"     * @param storage"},{"lineNumber":29,"author":{"gitId":"SiTingST"},"content":"     * @return"},{"lineNumber":30,"author":{"gitId":"SiTingST"},"content":"     */"},{"lineNumber":31,"author":{"gitId":"SiTingST"},"content":"    public TaskList execute(TaskList tasklist, UI ui, DataStorage storage) throws DukeException {"},{"lineNumber":32,"author":{"gitId":"SiTingST"},"content":"        if (this.input.equals(\"bye\")) {"},{"lineNumber":33,"author":{"gitId":"SiTingST"},"content":"            Command ec \u003d new ExitCommand();"},{"lineNumber":34,"author":{"gitId":"SiTingST"},"content":"            ec.execute(tasklist, ui , storage);"},{"lineNumber":35,"author":{"gitId":"SiTingST"},"content":"        }"},{"lineNumber":36,"author":{"gitId":"SiTingST"},"content":"        return tasklist;"},{"lineNumber":37,"author":{"gitId":"SiTingST"},"content":"    }"},{"lineNumber":38,"author":{"gitId":"SiTingST"},"content":""},{"lineNumber":39,"author":{"gitId":"SiTingST"},"content":"    /** Return boolean to terminate/continue the program"},{"lineNumber":40,"author":{"gitId":"SiTingST"},"content":"     * @return boolean"},{"lineNumber":41,"author":{"gitId":"SiTingST"},"content":"     */"},{"lineNumber":42,"author":{"gitId":"SiTingST"},"content":"    public static boolean isExit() {"},{"lineNumber":43,"author":{"gitId":"SiTingST"},"content":"        return isExit;"},{"lineNumber":44,"author":{"gitId":"SiTingST"},"content":"    }"},{"lineNumber":45,"author":{"gitId":"SiTingST"},"content":""},{"lineNumber":46,"author":{"gitId":"SiTingST"},"content":""},{"lineNumber":47,"author":{"gitId":"SiTingST"},"content":""},{"lineNumber":48,"author":{"gitId":"SiTingST"},"content":""},{"lineNumber":49,"author":{"gitId":"SiTingST"},"content":""},{"lineNumber":50,"author":{"gitId":"SiTingST"},"content":""},{"lineNumber":51,"author":{"gitId":"SiTingST"},"content":"}"}],"authorContributionMap":{"SiTingST":51}},{"path":"src/main/java/duke/command/DeleteCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"SiTingST"},"content":"package duke.command;"},{"lineNumber":2,"author":{"gitId":"SiTingST"},"content":""},{"lineNumber":3,"author":{"gitId":"SiTingST"},"content":"import duke.tasklist.TaskList;"},{"lineNumber":4,"author":{"gitId":"SiTingST"},"content":"import duke.ui.UI;"},{"lineNumber":5,"author":{"gitId":"SiTingST"},"content":"import duke.data.DataStorage;"},{"lineNumber":6,"author":{"gitId":"SiTingST"},"content":"import duke.exception.DukeException;"},{"lineNumber":7,"author":{"gitId":"SiTingST"},"content":""},{"lineNumber":8,"author":{"gitId":"SiTingST"},"content":"/**"},{"lineNumber":9,"author":{"gitId":"SiTingST"},"content":" * Create delete command object"},{"lineNumber":10,"author":{"gitId":"SiTingST"},"content":" */"},{"lineNumber":11,"author":{"gitId":"SiTingST"},"content":"public class DeleteCommand extends Command {"},{"lineNumber":12,"author":{"gitId":"SiTingST"},"content":""},{"lineNumber":13,"author":{"gitId":"SiTingST"},"content":"    /**"},{"lineNumber":14,"author":{"gitId":"SiTingST"},"content":"     * Constructor to create delete command object"},{"lineNumber":15,"author":{"gitId":"SiTingST"},"content":"     */"},{"lineNumber":16,"author":{"gitId":"SiTingST"},"content":"    public DeleteCommand(String input, TaskList tl) {"},{"lineNumber":17,"author":{"gitId":"SiTingST"},"content":"        super(input, tl);"},{"lineNumber":18,"author":{"gitId":"SiTingST"},"content":"    }"},{"lineNumber":19,"author":{"gitId":"SiTingST"},"content":""},{"lineNumber":20,"author":{"gitId":"SiTingST"},"content":"    /** Delete task"},{"lineNumber":21,"author":{"gitId":"SiTingST"},"content":"     *  Store the new changes back to data file"},{"lineNumber":22,"author":{"gitId":"SiTingST"},"content":"     * @param tasks"},{"lineNumber":23,"author":{"gitId":"SiTingST"},"content":"     * @param ui"},{"lineNumber":24,"author":{"gitId":"SiTingST"},"content":"     * @param storage"},{"lineNumber":25,"author":{"gitId":"SiTingST"},"content":"     * @return array of task list"},{"lineNumber":26,"author":{"gitId":"SiTingST"},"content":"     * @throws DukeException"},{"lineNumber":27,"author":{"gitId":"SiTingST"},"content":"     */"},{"lineNumber":28,"author":{"gitId":"SiTingST"},"content":"    @Override"},{"lineNumber":29,"author":{"gitId":"SiTingST"},"content":"    public TaskList execute(TaskList tasks, UI ui, DataStorage storage) throws DukeException {"},{"lineNumber":30,"author":{"gitId":"SiTingST"},"content":"        tasks.deleteTask(Integer.parseInt(input) - 1);"},{"lineNumber":31,"author":{"gitId":"SiTingST"},"content":"        storage.save(tasks.getTaskListArray());"},{"lineNumber":32,"author":{"gitId":"SiTingST"},"content":"        return tasks;"},{"lineNumber":33,"author":{"gitId":"SiTingST"},"content":"    }"},{"lineNumber":34,"author":{"gitId":"SiTingST"},"content":"}"}],"authorContributionMap":{"SiTingST":34}},{"path":"src/main/java/duke/command/DoneCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"SiTingST"},"content":"package duke.command;"},{"lineNumber":2,"author":{"gitId":"SiTingST"},"content":""},{"lineNumber":3,"author":{"gitId":"SiTingST"},"content":"import duke.tasklist.TaskList;"},{"lineNumber":4,"author":{"gitId":"SiTingST"},"content":"import duke.ui.UI;"},{"lineNumber":5,"author":{"gitId":"SiTingST"},"content":"import duke.data.DataStorage;"},{"lineNumber":6,"author":{"gitId":"SiTingST"},"content":"import duke.exception.DukeException;"},{"lineNumber":7,"author":{"gitId":"SiTingST"},"content":""},{"lineNumber":8,"author":{"gitId":"SiTingST"},"content":"/**"},{"lineNumber":9,"author":{"gitId":"SiTingST"},"content":" * Create done command class"},{"lineNumber":10,"author":{"gitId":"SiTingST"},"content":" */"},{"lineNumber":11,"author":{"gitId":"SiTingST"},"content":"public class DoneCommand extends Command {"},{"lineNumber":12,"author":{"gitId":"SiTingST"},"content":""},{"lineNumber":13,"author":{"gitId":"SiTingST"},"content":"    /**"},{"lineNumber":14,"author":{"gitId":"SiTingST"},"content":"     * Constructor to create done command object"},{"lineNumber":15,"author":{"gitId":"SiTingST"},"content":"     */"},{"lineNumber":16,"author":{"gitId":"SiTingST"},"content":"    public DoneCommand(String input, TaskList taskList) {"},{"lineNumber":17,"author":{"gitId":"SiTingST"},"content":"        super(input, taskList);"},{"lineNumber":18,"author":{"gitId":"SiTingST"},"content":"    }"},{"lineNumber":19,"author":{"gitId":"SiTingST"},"content":""},{"lineNumber":20,"author":{"gitId":"SiTingST"},"content":"    /** Set and display task as completed"},{"lineNumber":21,"author":{"gitId":"SiTingST"},"content":"     * Store the new changes back to data file"},{"lineNumber":22,"author":{"gitId":"SiTingST"},"content":"     * @param tasks"},{"lineNumber":23,"author":{"gitId":"SiTingST"},"content":"     * @param ui"},{"lineNumber":24,"author":{"gitId":"SiTingST"},"content":"     * @param storage"},{"lineNumber":25,"author":{"gitId":"SiTingST"},"content":"     * @return"},{"lineNumber":26,"author":{"gitId":"SiTingST"},"content":"     */"},{"lineNumber":27,"author":{"gitId":"SiTingST"},"content":"    @Override"},{"lineNumber":28,"author":{"gitId":"SiTingST"},"content":"    public TaskList execute(TaskList tasks, UI ui, DataStorage storage) throws DukeException {"},{"lineNumber":29,"author":{"gitId":"SiTingST"},"content":"        tasks.markAsDone(Integer.parseInt(input) - 1);"},{"lineNumber":30,"author":{"gitId":"SiTingST"},"content":"        storage.save(tasks.getTaskListArray());"},{"lineNumber":31,"author":{"gitId":"SiTingST"},"content":"        return tasks;"},{"lineNumber":32,"author":{"gitId":"SiTingST"},"content":"    }"},{"lineNumber":33,"author":{"gitId":"SiTingST"},"content":"}"}],"authorContributionMap":{"SiTingST":33}},{"path":"src/main/java/duke/command/ExitCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"SiTingST"},"content":"package duke.command;"},{"lineNumber":2,"author":{"gitId":"SiTingST"},"content":""},{"lineNumber":3,"author":{"gitId":"SiTingST"},"content":"import duke.tasklist.TaskList;"},{"lineNumber":4,"author":{"gitId":"SiTingST"},"content":"import duke.ui.UI;"},{"lineNumber":5,"author":{"gitId":"SiTingST"},"content":"import duke.data.DataStorage;"},{"lineNumber":6,"author":{"gitId":"SiTingST"},"content":""},{"lineNumber":7,"author":{"gitId":"SiTingST"},"content":"/**"},{"lineNumber":8,"author":{"gitId":"SiTingST"},"content":" * Create exit command class"},{"lineNumber":9,"author":{"gitId":"SiTingST"},"content":" */"},{"lineNumber":10,"author":{"gitId":"SiTingST"},"content":"public class ExitCommand extends Command {"},{"lineNumber":11,"author":{"gitId":"SiTingST"},"content":""},{"lineNumber":12,"author":{"gitId":"SiTingST"},"content":"    /**"},{"lineNumber":13,"author":{"gitId":"SiTingST"},"content":"     * Constructor to create exit command object"},{"lineNumber":14,"author":{"gitId":"SiTingST"},"content":"     */"},{"lineNumber":15,"author":{"gitId":"SiTingST"},"content":"    public ExitCommand() {"},{"lineNumber":16,"author":{"gitId":"SiTingST"},"content":"        super(null, null);"},{"lineNumber":17,"author":{"gitId":"SiTingST"},"content":"        this.isExit \u003d true;"},{"lineNumber":18,"author":{"gitId":"SiTingST"},"content":"    }"},{"lineNumber":19,"author":{"gitId":"SiTingST"},"content":""},{"lineNumber":20,"author":{"gitId":"SiTingST"},"content":"    /** Terminate the whole program"},{"lineNumber":21,"author":{"gitId":"SiTingST"},"content":"     * @param tasklist"},{"lineNumber":22,"author":{"gitId":"SiTingST"},"content":"     * @param ui"},{"lineNumber":23,"author":{"gitId":"SiTingST"},"content":"     * @param storage"},{"lineNumber":24,"author":{"gitId":"SiTingST"},"content":"     * @return"},{"lineNumber":25,"author":{"gitId":"SiTingST"},"content":"     */"},{"lineNumber":26,"author":{"gitId":"SiTingST"},"content":"    @Override"},{"lineNumber":27,"author":{"gitId":"SiTingST"},"content":"    public TaskList execute(TaskList tasklist, UI ui, DataStorage storage) {"},{"lineNumber":28,"author":{"gitId":"SiTingST"},"content":"        ui.displayEndMessage();"},{"lineNumber":29,"author":{"gitId":"SiTingST"},"content":"        return null;"},{"lineNumber":30,"author":{"gitId":"SiTingST"},"content":"    }"},{"lineNumber":31,"author":{"gitId":"SiTingST"},"content":"}"}],"authorContributionMap":{"SiTingST":31}},{"path":"src/main/java/duke/command/ListCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"SiTingST"},"content":"package duke.command;"},{"lineNumber":2,"author":{"gitId":"SiTingST"},"content":""},{"lineNumber":3,"author":{"gitId":"SiTingST"},"content":"import duke.tasklist.TaskList;"},{"lineNumber":4,"author":{"gitId":"SiTingST"},"content":"import duke.ui.UI;"},{"lineNumber":5,"author":{"gitId":"SiTingST"},"content":"import duke.data.DataStorage;"},{"lineNumber":6,"author":{"gitId":"SiTingST"},"content":""},{"lineNumber":7,"author":{"gitId":"SiTingST"},"content":"/**"},{"lineNumber":8,"author":{"gitId":"SiTingST"},"content":" * Create list command class"},{"lineNumber":9,"author":{"gitId":"SiTingST"},"content":" */"},{"lineNumber":10,"author":{"gitId":"SiTingST"},"content":"public class ListCommand extends Command {"},{"lineNumber":11,"author":{"gitId":"SiTingST"},"content":""},{"lineNumber":12,"author":{"gitId":"SiTingST"},"content":"    /**"},{"lineNumber":13,"author":{"gitId":"SiTingST"},"content":"     * Constructor to create delete command object"},{"lineNumber":14,"author":{"gitId":"SiTingST"},"content":"     */"},{"lineNumber":15,"author":{"gitId":"SiTingST"},"content":""},{"lineNumber":16,"author":{"gitId":"SiTingST"},"content":"    public ListCommand(String input, TaskList tl) {"},{"lineNumber":17,"author":{"gitId":"SiTingST"},"content":"        super(input, tl);"},{"lineNumber":18,"author":{"gitId":"SiTingST"},"content":"    }"},{"lineNumber":19,"author":{"gitId":"SiTingST"},"content":""},{"lineNumber":20,"author":{"gitId":"SiTingST"},"content":"    /** Display all the task found in list"},{"lineNumber":21,"author":{"gitId":"SiTingST"},"content":"     * @param tasks"},{"lineNumber":22,"author":{"gitId":"SiTingST"},"content":"     * @param ui"},{"lineNumber":23,"author":{"gitId":"SiTingST"},"content":"     * @param storage"},{"lineNumber":24,"author":{"gitId":"SiTingST"},"content":"     * @return"},{"lineNumber":25,"author":{"gitId":"SiTingST"},"content":"     */"},{"lineNumber":26,"author":{"gitId":"SiTingST"},"content":"    @Override"},{"lineNumber":27,"author":{"gitId":"SiTingST"},"content":"    public TaskList execute(TaskList tasks, UI ui, DataStorage storage) {"},{"lineNumber":28,"author":{"gitId":"SiTingST"},"content":"        tasks.showAllTask(\"list\");"},{"lineNumber":29,"author":{"gitId":"SiTingST"},"content":"        return null;"},{"lineNumber":30,"author":{"gitId":"SiTingST"},"content":"    }"},{"lineNumber":31,"author":{"gitId":"SiTingST"},"content":""},{"lineNumber":32,"author":{"gitId":"SiTingST"},"content":"}"}],"authorContributionMap":{"SiTingST":32}},{"path":"src/main/java/duke/command/SearchCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"SiTingST"},"content":"package duke.command;"},{"lineNumber":2,"author":{"gitId":"SiTingST"},"content":""},{"lineNumber":3,"author":{"gitId":"SiTingST"},"content":"import duke.tasklist.TaskList;"},{"lineNumber":4,"author":{"gitId":"SiTingST"},"content":"import duke.ui.UI;"},{"lineNumber":5,"author":{"gitId":"SiTingST"},"content":"import duke.data.DataStorage;"},{"lineNumber":6,"author":{"gitId":"SiTingST"},"content":"import duke.exception.DukeException;"},{"lineNumber":7,"author":{"gitId":"SiTingST"},"content":""},{"lineNumber":8,"author":{"gitId":"SiTingST"},"content":"public class SearchCommand extends Command {"},{"lineNumber":9,"author":{"gitId":"SiTingST"},"content":""},{"lineNumber":10,"author":{"gitId":"SiTingST"},"content":"    public SearchCommand(String input, TaskList taskList) {"},{"lineNumber":11,"author":{"gitId":"SiTingST"},"content":"        super(input.trim(), taskList);"},{"lineNumber":12,"author":{"gitId":"SiTingST"},"content":"    }"},{"lineNumber":13,"author":{"gitId":"SiTingST"},"content":""},{"lineNumber":14,"author":{"gitId":"SiTingST"},"content":"    @Override"},{"lineNumber":15,"author":{"gitId":"SiTingST"},"content":"    public TaskList execute(TaskList tasks, UI ui, DataStorage storage) throws DukeException {"},{"lineNumber":16,"author":{"gitId":"SiTingST"},"content":"        tasks.findTask(input,tasks);"},{"lineNumber":17,"author":{"gitId":"SiTingST"},"content":"        return tasks;"},{"lineNumber":18,"author":{"gitId":"SiTingST"},"content":"    }"},{"lineNumber":19,"author":{"gitId":"SiTingST"},"content":"}"}],"authorContributionMap":{"SiTingST":19}},{"path":"src/main/java/duke/data/DataStorage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"SiTingST"},"content":"package duke.data;"},{"lineNumber":2,"author":{"gitId":"SiTingST"},"content":""},{"lineNumber":3,"author":{"gitId":"SiTingST"},"content":"import java.io.File;"},{"lineNumber":4,"author":{"gitId":"SiTingST"},"content":"import java.io.FileNotFoundException;"},{"lineNumber":5,"author":{"gitId":"SiTingST"},"content":"import java.io.FileWriter;"},{"lineNumber":6,"author":{"gitId":"SiTingST"},"content":"import java.io.IOException;"},{"lineNumber":7,"author":{"gitId":"SiTingST"},"content":"import java.util.ArrayList;"},{"lineNumber":8,"author":{"gitId":"SiTingST"},"content":"import java.util.Scanner;"},{"lineNumber":9,"author":{"gitId":"SiTingST"},"content":""},{"lineNumber":10,"author":{"gitId":"SiTingST"},"content":"import duke.exception.DukeException;"},{"lineNumber":11,"author":{"gitId":"SiTingST"},"content":"import duke.task.Task;"},{"lineNumber":12,"author":{"gitId":"SiTingST"},"content":""},{"lineNumber":13,"author":{"gitId":"SiTingST"},"content":"public class DataStorage {"},{"lineNumber":14,"author":{"gitId":"SiTingST"},"content":"    private static final String filePath \u003d \"./src/main/java/duke/data/data.txt\";"},{"lineNumber":15,"author":{"gitId":"SiTingST"},"content":""},{"lineNumber":16,"author":{"gitId":"SiTingST"},"content":"    /** Retrieve data file if present"},{"lineNumber":17,"author":{"gitId":"SiTingST"},"content":"     * Else create new data file"},{"lineNumber":18,"author":{"gitId":"SiTingST"},"content":"     * @return file"},{"lineNumber":19,"author":{"gitId":"SiTingST"},"content":"     * @throws DukeException"},{"lineNumber":20,"author":{"gitId":"SiTingST"},"content":"     */"},{"lineNumber":21,"author":{"gitId":"SiTingST"},"content":"    public static File getFile() throws DukeException {"},{"lineNumber":22,"author":{"gitId":"SiTingST"},"content":""},{"lineNumber":23,"author":{"gitId":"SiTingST"},"content":"        File file \u003d new File(filePath);"},{"lineNumber":24,"author":{"gitId":"SiTingST"},"content":"        file.getParentFile().mkdirs();"},{"lineNumber":25,"author":{"gitId":"SiTingST"},"content":""},{"lineNumber":26,"author":{"gitId":"SiTingST"},"content":"        if (!file.exists()) {"},{"lineNumber":27,"author":{"gitId":"SiTingST"},"content":"            try {"},{"lineNumber":28,"author":{"gitId":"SiTingST"},"content":"                file.createNewFile();"},{"lineNumber":29,"author":{"gitId":"SiTingST"},"content":"            } catch (Exception e) {"},{"lineNumber":30,"author":{"gitId":"SiTingST"},"content":"                throw new DukeException(\"Error creating file\");"},{"lineNumber":31,"author":{"gitId":"SiTingST"},"content":"            }"},{"lineNumber":32,"author":{"gitId":"SiTingST"},"content":"        }"},{"lineNumber":33,"author":{"gitId":"SiTingST"},"content":"        return file;"},{"lineNumber":34,"author":{"gitId":"SiTingST"},"content":"    }"},{"lineNumber":35,"author":{"gitId":"SiTingST"},"content":""},{"lineNumber":36,"author":{"gitId":"SiTingST"},"content":""},{"lineNumber":37,"author":{"gitId":"SiTingST"},"content":"    /** Save task into data file"},{"lineNumber":38,"author":{"gitId":"SiTingST"},"content":"     * @param taskAL array list of task"},{"lineNumber":39,"author":{"gitId":"SiTingST"},"content":"     * @throws DukeException"},{"lineNumber":40,"author":{"gitId":"SiTingST"},"content":"     */"},{"lineNumber":41,"author":{"gitId":"SiTingST"},"content":"    public static void save(ArrayList\u003cTask\u003e taskAL) throws DukeException {"},{"lineNumber":42,"author":{"gitId":"SiTingST"},"content":"        try {"},{"lineNumber":43,"author":{"gitId":"SiTingST"},"content":"            File file \u003d getFile();"},{"lineNumber":44,"author":{"gitId":"SiTingST"},"content":"            FileWriter writer \u003d new FileWriter(file);"},{"lineNumber":45,"author":{"gitId":"SiTingST"},"content":"            for (int i \u003d 0; i \u003c taskAL.size(); i++) {"},{"lineNumber":46,"author":{"gitId":"SiTingST"},"content":"                writer.write(taskAL.get(i).changeFormat() + \u0027\\n\u0027);"},{"lineNumber":47,"author":{"gitId":"SiTingST"},"content":"                writer.flush();"},{"lineNumber":48,"author":{"gitId":"SiTingST"},"content":"            }"},{"lineNumber":49,"author":{"gitId":"SiTingST"},"content":"            writer.close();"},{"lineNumber":50,"author":{"gitId":"SiTingST"},"content":"        } catch (Exception e) {"},{"lineNumber":51,"author":{"gitId":"SiTingST"},"content":"            throw new DukeException(\"error writing into file\");"},{"lineNumber":52,"author":{"gitId":"SiTingST"},"content":"        }"},{"lineNumber":53,"author":{"gitId":"SiTingST"},"content":""},{"lineNumber":54,"author":{"gitId":"SiTingST"},"content":"    }"},{"lineNumber":55,"author":{"gitId":"SiTingST"},"content":""},{"lineNumber":56,"author":{"gitId":"SiTingST"},"content":""},{"lineNumber":57,"author":{"gitId":"SiTingST"},"content":"    /** Load data in file when program starts"},{"lineNumber":58,"author":{"gitId":"SiTingST"},"content":"     * @return array lise of task"},{"lineNumber":59,"author":{"gitId":"SiTingST"},"content":"     * @throws DukeException"},{"lineNumber":60,"author":{"gitId":"SiTingST"},"content":"     * @throws IOException"},{"lineNumber":61,"author":{"gitId":"SiTingST"},"content":"     */"},{"lineNumber":62,"author":{"gitId":"SiTingST"},"content":"    public static ArrayList\u003cTask\u003e loadFile() throws DukeException, IOException {"},{"lineNumber":63,"author":{"gitId":"SiTingST"},"content":"        File file \u003d getFile();"},{"lineNumber":64,"author":{"gitId":"SiTingST"},"content":"        Task t \u003d new Task();"},{"lineNumber":65,"author":{"gitId":"SiTingST"},"content":"        ArrayList\u003cTask\u003e taskAL \u003d new ArrayList\u003c\u003e();"},{"lineNumber":66,"author":{"gitId":"SiTingST"},"content":"        try {"},{"lineNumber":67,"author":{"gitId":"SiTingST"},"content":"            Scanner sc \u003d new Scanner(file);"},{"lineNumber":68,"author":{"gitId":"SiTingST"},"content":"            while (sc.hasNextLine()) {"},{"lineNumber":69,"author":{"gitId":"SiTingST"},"content":"                String s \u003d sc.nextLine();"},{"lineNumber":70,"author":{"gitId":"SiTingST"},"content":"                taskAL.add(t.changeToTaskFormat(s));"},{"lineNumber":71,"author":{"gitId":"SiTingST"},"content":"            }"},{"lineNumber":72,"author":{"gitId":"SiTingST"},"content":"            sc.close();"},{"lineNumber":73,"author":{"gitId":"SiTingST"},"content":"        } catch (FileNotFoundException e) {"},{"lineNumber":74,"author":{"gitId":"SiTingST"},"content":"            throw new DukeException(\"Error finding file\");"},{"lineNumber":75,"author":{"gitId":"SiTingST"},"content":"        }"},{"lineNumber":76,"author":{"gitId":"SiTingST"},"content":"        return taskAL;"},{"lineNumber":77,"author":{"gitId":"SiTingST"},"content":""},{"lineNumber":78,"author":{"gitId":"SiTingST"},"content":"    }"},{"lineNumber":79,"author":{"gitId":"SiTingST"},"content":""},{"lineNumber":80,"author":{"gitId":"SiTingST"},"content":"}"}],"authorContributionMap":{"SiTingST":80}},{"path":"src/main/java/duke/data/data.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"SiTingST"},"content":"T,false,  111"}],"authorContributionMap":{"SiTingST":1}},{"path":"src/main/java/duke/exception/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"SiTingST"},"content":"package duke.exception;"},{"lineNumber":2,"author":{"gitId":"SiTingST"},"content":""},{"lineNumber":3,"author":{"gitId":"SiTingST"},"content":"/**"},{"lineNumber":4,"author":{"gitId":"SiTingST"},"content":" * Customized exception class"},{"lineNumber":5,"author":{"gitId":"SiTingST"},"content":" */"},{"lineNumber":6,"author":{"gitId":"SiTingST"},"content":"public class DukeException extends Exception {"},{"lineNumber":7,"author":{"gitId":"SiTingST"},"content":""},{"lineNumber":8,"author":{"gitId":"SiTingST"},"content":"    /** Create customized exception class objects"},{"lineNumber":9,"author":{"gitId":"SiTingST"},"content":"     * @param message"},{"lineNumber":10,"author":{"gitId":"SiTingST"},"content":"     */"},{"lineNumber":11,"author":{"gitId":"SiTingST"},"content":"    public DukeException(String message) {"},{"lineNumber":12,"author":{"gitId":"SiTingST"},"content":"        super(message);"},{"lineNumber":13,"author":{"gitId":"SiTingST"},"content":"    }"},{"lineNumber":14,"author":{"gitId":"SiTingST"},"content":""},{"lineNumber":15,"author":{"gitId":"SiTingST"},"content":"    /**"},{"lineNumber":16,"author":{"gitId":"SiTingST"},"content":"     * Display exception message"},{"lineNumber":17,"author":{"gitId":"SiTingST"},"content":"     */"},{"lineNumber":18,"author":{"gitId":"SiTingST"},"content":"    public void printMessage() {"},{"lineNumber":19,"author":{"gitId":"SiTingST"},"content":"        System.out.println(\"----------------------------------------\\n\" + super.getMessage()"},{"lineNumber":20,"author":{"gitId":"SiTingST"},"content":"                + \"\\n----------------------------------------\");"},{"lineNumber":21,"author":{"gitId":"SiTingST"},"content":"    }"},{"lineNumber":22,"author":{"gitId":"SiTingST"},"content":""},{"lineNumber":23,"author":{"gitId":"SiTingST"},"content":"}"}],"authorContributionMap":{"SiTingST":23}},{"path":"src/main/java/duke/parser/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"SiTingST"},"content":"package duke.parser;"},{"lineNumber":2,"author":{"gitId":"SiTingST"},"content":""},{"lineNumber":3,"author":{"gitId":"SiTingST"},"content":"import java.time.LocalDate;"},{"lineNumber":4,"author":{"gitId":"SiTingST"},"content":"import java.time.LocalTime;"},{"lineNumber":5,"author":{"gitId":"SiTingST"},"content":"import java.time.format.DateTimeFormatter;"},{"lineNumber":6,"author":{"gitId":"SiTingST"},"content":""},{"lineNumber":7,"author":{"gitId":"SiTingST"},"content":"import duke.tasklist.TaskList;"},{"lineNumber":8,"author":{"gitId":"SiTingST"},"content":"import duke.ui.UI;"},{"lineNumber":9,"author":{"gitId":"SiTingST"},"content":"import duke.command.AddCommand;"},{"lineNumber":10,"author":{"gitId":"SiTingST"},"content":"import duke.command.DeleteCommand;"},{"lineNumber":11,"author":{"gitId":"SiTingST"},"content":"import duke.command.DoneCommand;"},{"lineNumber":12,"author":{"gitId":"SiTingST"},"content":"import duke.command.ExitCommand;"},{"lineNumber":13,"author":{"gitId":"SiTingST"},"content":"import duke.command.ListCommand;"},{"lineNumber":14,"author":{"gitId":"SiTingST"},"content":"import duke.command.SearchCommand;"},{"lineNumber":15,"author":{"gitId":"SiTingST"},"content":"import duke.data.DataStorage;"},{"lineNumber":16,"author":{"gitId":"SiTingST"},"content":"import duke.exception.DukeException;"},{"lineNumber":17,"author":{"gitId":"SiTingST"},"content":""},{"lineNumber":18,"author":{"gitId":"SiTingST"},"content":"/**"},{"lineNumber":19,"author":{"gitId":"SiTingST"},"content":" * A class to handle all user input"},{"lineNumber":20,"author":{"gitId":"SiTingST"},"content":" */"},{"lineNumber":21,"author":{"gitId":"SiTingST"},"content":"public class Parser {"},{"lineNumber":22,"author":{"gitId":"SiTingST"},"content":""},{"lineNumber":23,"author":{"gitId":"SiTingST"},"content":"    private static UI ui \u003d new UI();"},{"lineNumber":24,"author":{"gitId":"SiTingST"},"content":"    private static DataStorage storage \u003d new DataStorage();"},{"lineNumber":25,"author":{"gitId":"SiTingST"},"content":"    private static TaskList taskList \u003d new TaskList();"},{"lineNumber":26,"author":{"gitId":"SiTingST"},"content":""},{"lineNumber":27,"author":{"gitId":"SiTingST"},"content":"    private static DateTimeFormatter dateFormatter \u003d DateTimeFormatter.ofPattern(\"d/MM/yyyy\");"},{"lineNumber":28,"author":{"gitId":"SiTingST"},"content":"    private static DateTimeFormatter timeFormatter \u003d DateTimeFormatter.ofPattern(\"HHmm\");"},{"lineNumber":29,"author":{"gitId":"SiTingST"},"content":""},{"lineNumber":30,"author":{"gitId":"SiTingST"},"content":"    //Global Variable"},{"lineNumber":31,"author":{"gitId":"SiTingST"},"content":"    private static String taskName;"},{"lineNumber":32,"author":{"gitId":"SiTingST"},"content":"    private static boolean isFirstLaunch \u003d true;"},{"lineNumber":33,"author":{"gitId":"SiTingST"},"content":""},{"lineNumber":34,"author":{"gitId":"SiTingST"},"content":""},{"lineNumber":35,"author":{"gitId":"SiTingST"},"content":"    /** Call onto the respective command classes to handle different cases of command"},{"lineNumber":36,"author":{"gitId":"SiTingST"},"content":"     * @param list"},{"lineNumber":37,"author":{"gitId":"SiTingST"},"content":"     * @param input"},{"lineNumber":38,"author":{"gitId":"SiTingST"},"content":"     * @return boolean"},{"lineNumber":39,"author":{"gitId":"SiTingST"},"content":"     * @throws DukeException"},{"lineNumber":40,"author":{"gitId":"SiTingST"},"content":"     */"},{"lineNumber":41,"author":{"gitId":"SiTingST"},"content":"    public static boolean parse(TaskList list, String input) throws DukeException {"},{"lineNumber":42,"author":{"gitId":"SiTingST"},"content":"        if (isFirstLaunch) {"},{"lineNumber":43,"author":{"gitId":"SiTingST"},"content":"            taskList \u003d list;"},{"lineNumber":44,"author":{"gitId":"SiTingST"},"content":"            isFirstLaunch \u003d false;"},{"lineNumber":45,"author":{"gitId":"SiTingST"},"content":"        }"},{"lineNumber":46,"author":{"gitId":"SiTingST"},"content":""},{"lineNumber":47,"author":{"gitId":"SiTingST"},"content":"        if (input.equals(\"bye\")) {"},{"lineNumber":48,"author":{"gitId":"SiTingST"},"content":"            ExitCommand ec \u003d new ExitCommand();"},{"lineNumber":49,"author":{"gitId":"SiTingST"},"content":"            return ec.isExit();"},{"lineNumber":50,"author":{"gitId":"SiTingST"},"content":"        }"},{"lineNumber":51,"author":{"gitId":"SiTingST"},"content":"        String [] commandArray \u003d input.split(\"\\\\s+\");"},{"lineNumber":52,"author":{"gitId":"SiTingST"},"content":"        int size \u003d taskList.getTaskListArray().size();"},{"lineNumber":53,"author":{"gitId":"SiTingST"},"content":""},{"lineNumber":54,"author":{"gitId":"SiTingST"},"content":"        String [] userInputArray \u003d separateUserInput(input);"},{"lineNumber":55,"author":{"gitId":"SiTingST"},"content":"        String type \u003d userInputArray[0];"},{"lineNumber":56,"author":{"gitId":"SiTingST"},"content":"        String userInput \u003d input.replace(type, \" \");"},{"lineNumber":57,"author":{"gitId":"SiTingST"},"content":""},{"lineNumber":58,"author":{"gitId":"SiTingST"},"content":"        if (commandArray[0].equals(\"find\")) {"},{"lineNumber":59,"author":{"gitId":"SiTingST"},"content":"            if (userInput.isBlank()) {"},{"lineNumber":60,"author":{"gitId":"SiTingST"},"content":"                throw new DukeException(\"Please input task description to be searched.\");"},{"lineNumber":61,"author":{"gitId":"SiTingST"},"content":"            } else {"},{"lineNumber":62,"author":{"gitId":"SiTingST"},"content":"                SearchCommand sc \u003d new SearchCommand(userInput, taskList);"},{"lineNumber":63,"author":{"gitId":"SiTingST"},"content":"                sc.execute(taskList, ui, null);"},{"lineNumber":64,"author":{"gitId":"SiTingST"},"content":"            }"},{"lineNumber":65,"author":{"gitId":"SiTingST"},"content":"        }"},{"lineNumber":66,"author":{"gitId":"SiTingST"},"content":"        else if (commandArray[0].equals(\"list\") \u0026\u0026 isValidTaskNumber(0, \"list\" , size)) {"},{"lineNumber":67,"author":{"gitId":"SiTingST"},"content":"            ListCommand lc \u003d new ListCommand(null, taskList);"},{"lineNumber":68,"author":{"gitId":"SiTingST"},"content":"            lc.execute(taskList, ui, null);"},{"lineNumber":69,"author":{"gitId":"SiTingST"},"content":"        } else if (commandArray[0].equals(\"delete\")"},{"lineNumber":70,"author":{"gitId":"SiTingST"},"content":"                \u0026\u0026 isValidTaskNumber(Integer.parseInt(commandArray[1]) - 1, \"delete\", size)) {"},{"lineNumber":71,"author":{"gitId":"SiTingST"},"content":"            DeleteCommand dc \u003d new DeleteCommand(commandArray[1], taskList);"},{"lineNumber":72,"author":{"gitId":"SiTingST"},"content":"            dc.execute(taskList, ui, storage);"},{"lineNumber":73,"author":{"gitId":"SiTingST"},"content":"        } else if (commandArray[0].equals(\"done\")"},{"lineNumber":74,"author":{"gitId":"SiTingST"},"content":"                \u0026\u0026 isValidTaskNumber(Integer.parseInt(commandArray[1]) - 1, \"done\", size)) {"},{"lineNumber":75,"author":{"gitId":"SiTingST"},"content":"            DoneCommand doneCommand \u003d new DoneCommand(commandArray[1], taskList);"},{"lineNumber":76,"author":{"gitId":"SiTingST"},"content":"            taskList \u003d doneCommand.execute(taskList, ui, storage);"},{"lineNumber":77,"author":{"gitId":"SiTingST"},"content":"        } else {"},{"lineNumber":78,"author":{"gitId":"SiTingST"},"content":""},{"lineNumber":79,"author":{"gitId":"SiTingST"},"content":"            AddCommand ac \u003d new AddCommand(userInput, taskList);"},{"lineNumber":80,"author":{"gitId":"SiTingST"},"content":""},{"lineNumber":81,"author":{"gitId":"SiTingST"},"content":"            switch (type) {"},{"lineNumber":82,"author":{"gitId":"SiTingST"},"content":"            case (\"todo\"):"},{"lineNumber":83,"author":{"gitId":"SiTingST"},"content":"                if (userInput.isBlank()) {"},{"lineNumber":84,"author":{"gitId":"SiTingST"},"content":"                    throw new DukeException(\"OOPS!!! The description of a \" + type + \" cannot be empty.\");"},{"lineNumber":85,"author":{"gitId":"SiTingST"},"content":"                }"},{"lineNumber":86,"author":{"gitId":"SiTingST"},"content":"                taskList \u003d ac.execute(taskList, ui, storage, \"todo\", null, null , null);"},{"lineNumber":87,"author":{"gitId":"SiTingST"},"content":"                break;"},{"lineNumber":88,"author":{"gitId":"SiTingST"},"content":"            case (\"deadline\"):"},{"lineNumber":89,"author":{"gitId":"SiTingST"},"content":"                String [] dateTime \u003d separateDueDate(input, \"deadline\");"},{"lineNumber":90,"author":{"gitId":"SiTingST"},"content":""},{"lineNumber":91,"author":{"gitId":"SiTingST"},"content":"                LocalDate date \u003d LocalDate.parse(dateTime[0], dateFormatter);"},{"lineNumber":92,"author":{"gitId":"SiTingST"},"content":"                LocalTime time;"},{"lineNumber":93,"author":{"gitId":"SiTingST"},"content":"                if (dateTimeParse(dateTime, \"deadline\")) {"},{"lineNumber":94,"author":{"gitId":"SiTingST"},"content":"                    time \u003d null;"},{"lineNumber":95,"author":{"gitId":"SiTingST"},"content":"                } else {"},{"lineNumber":96,"author":{"gitId":"SiTingST"},"content":"                    time \u003d LocalTime.parse(dateTime[1], timeFormatter);"},{"lineNumber":97,"author":{"gitId":"SiTingST"},"content":"                }"},{"lineNumber":98,"author":{"gitId":"SiTingST"},"content":""},{"lineNumber":99,"author":{"gitId":"SiTingST"},"content":"                ac \u003d new AddCommand(taskName, taskList);"},{"lineNumber":100,"author":{"gitId":"SiTingST"},"content":"                taskList \u003d ac.execute(taskList, ui, storage, \"deadlines\", date, time, null);"},{"lineNumber":101,"author":{"gitId":"SiTingST"},"content":"                break;"},{"lineNumber":102,"author":{"gitId":"SiTingST"},"content":"            case (\"event\"):"},{"lineNumber":103,"author":{"gitId":"SiTingST"},"content":""},{"lineNumber":104,"author":{"gitId":"SiTingST"},"content":"                String []dateTimeArray \u003d separateDueDate(input, \"event\");"},{"lineNumber":105,"author":{"gitId":"SiTingST"},"content":"                String [] timeArray \u003d separateStartEndTime(dateTimeArray);"},{"lineNumber":106,"author":{"gitId":"SiTingST"},"content":""},{"lineNumber":107,"author":{"gitId":"SiTingST"},"content":"                LocalDate startDate \u003d LocalDate.parse(dateTimeArray[0], dateFormatter);"},{"lineNumber":108,"author":{"gitId":"SiTingST"},"content":"                LocalTime startTime \u003d LocalTime.parse(timeArray[0], timeFormatter);"},{"lineNumber":109,"author":{"gitId":"SiTingST"},"content":"                LocalTime endTime \u003d LocalTime.parse(timeArray[1], timeFormatter);"},{"lineNumber":110,"author":{"gitId":"SiTingST"},"content":""},{"lineNumber":111,"author":{"gitId":"SiTingST"},"content":"                ac \u003d new AddCommand(taskName, taskList);"},{"lineNumber":112,"author":{"gitId":"SiTingST"},"content":"                taskList \u003d ac.execute(taskList, ui, storage, \"events\", startDate, startTime, endTime);"},{"lineNumber":113,"author":{"gitId":"SiTingST"},"content":"                break;"},{"lineNumber":114,"author":{"gitId":"SiTingST"},"content":"            default:"},{"lineNumber":115,"author":{"gitId":"SiTingST"},"content":"                throw new DukeException(\"OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\");"},{"lineNumber":116,"author":{"gitId":"SiTingST"},"content":"            }"},{"lineNumber":117,"author":{"gitId":"SiTingST"},"content":"        }"},{"lineNumber":118,"author":{"gitId":"SiTingST"},"content":"        return false;"},{"lineNumber":119,"author":{"gitId":"SiTingST"},"content":"    }"},{"lineNumber":120,"author":{"gitId":"SiTingST"},"content":""},{"lineNumber":121,"author":{"gitId":"SiTingST"},"content":""},{"lineNumber":122,"author":{"gitId":"SiTingST"},"content":"    /** Check if index is valid in array list"},{"lineNumber":123,"author":{"gitId":"SiTingST"},"content":"     * @param no index in arraylist"},{"lineNumber":124,"author":{"gitId":"SiTingST"},"content":"     * @param type event type"},{"lineNumber":125,"author":{"gitId":"SiTingST"},"content":"     * @param arraySize"},{"lineNumber":126,"author":{"gitId":"SiTingST"},"content":"     * @return boolean"},{"lineNumber":127,"author":{"gitId":"SiTingST"},"content":"     */"},{"lineNumber":128,"author":{"gitId":"SiTingST"},"content":"    public static boolean isValidTaskNumber(int no, String type, int arraySize) {"},{"lineNumber":129,"author":{"gitId":"SiTingST"},"content":"        try {"},{"lineNumber":130,"author":{"gitId":"SiTingST"},"content":"            if (no \u003c 0 || no \u003e\u003d arraySize \u0026\u0026 !type.equals(\"done\")) {"},{"lineNumber":131,"author":{"gitId":"SiTingST"},"content":"                throw new DukeException(\"There are no task in list. Please add some task and try again.\");"},{"lineNumber":132,"author":{"gitId":"SiTingST"},"content":"            } else if (no \u003e\u003d arraySize \u0026\u0026 type.equals(\"delete\")) {"},{"lineNumber":133,"author":{"gitId":"SiTingST"},"content":"                throw new DukeException(\"Item number \" + no + \" is not found in list. Please check again\");"},{"lineNumber":134,"author":{"gitId":"SiTingST"},"content":"            } else if (arraySize \u003c 0 \u0026\u0026 type.equals(\"list\")) {"},{"lineNumber":135,"author":{"gitId":"SiTingST"},"content":"                throw new DukeException(\"There are no task in list. Please check again\");"},{"lineNumber":136,"author":{"gitId":"SiTingST"},"content":"            } else {"},{"lineNumber":137,"author":{"gitId":"SiTingST"},"content":"                return true;"},{"lineNumber":138,"author":{"gitId":"SiTingST"},"content":"            }"},{"lineNumber":139,"author":{"gitId":"SiTingST"},"content":"        } catch (DukeException e) {"},{"lineNumber":140,"author":{"gitId":"SiTingST"},"content":"            e.printMessage();"},{"lineNumber":141,"author":{"gitId":"SiTingST"},"content":"            return false;"},{"lineNumber":142,"author":{"gitId":"SiTingST"},"content":"        }"},{"lineNumber":143,"author":{"gitId":"SiTingST"},"content":"    }"},{"lineNumber":144,"author":{"gitId":"SiTingST"},"content":""},{"lineNumber":145,"author":{"gitId":"SiTingST"},"content":"    /** Return array of string separated by space"},{"lineNumber":146,"author":{"gitId":"SiTingST"},"content":"     * @param userInput"},{"lineNumber":147,"author":{"gitId":"SiTingST"},"content":"     * @return array of string"},{"lineNumber":148,"author":{"gitId":"SiTingST"},"content":"     * @throws DukeException"},{"lineNumber":149,"author":{"gitId":"SiTingST"},"content":"     */"},{"lineNumber":150,"author":{"gitId":"SiTingST"},"content":"    public static String[] separateUserInput(String userInput) throws DukeException {"},{"lineNumber":151,"author":{"gitId":"SiTingST"},"content":"        String[] inputArray \u003d userInput.split(\" \");"},{"lineNumber":152,"author":{"gitId":"SiTingST"},"content":"        String taskName \u003d inputArray[0];"},{"lineNumber":153,"author":{"gitId":"SiTingST"},"content":""},{"lineNumber":154,"author":{"gitId":"SiTingST"},"content":"        if (taskName.isBlank()) {"},{"lineNumber":155,"author":{"gitId":"SiTingST"},"content":"            throw new DukeException(\"OOPS!!! The description of a \" + inputArray[1] + \" cannot be empty.\");"},{"lineNumber":156,"author":{"gitId":"SiTingST"},"content":"        } else {"},{"lineNumber":157,"author":{"gitId":"SiTingST"},"content":"            return inputArray;"},{"lineNumber":158,"author":{"gitId":"SiTingST"},"content":"        }"},{"lineNumber":159,"author":{"gitId":"SiTingST"},"content":"    }"},{"lineNumber":160,"author":{"gitId":"SiTingST"},"content":""},{"lineNumber":161,"author":{"gitId":"SiTingST"},"content":"    /** Return array of string separated into due dates"},{"lineNumber":162,"author":{"gitId":"SiTingST"},"content":"     * @param input"},{"lineNumber":163,"author":{"gitId":"SiTingST"},"content":"     * @param type"},{"lineNumber":164,"author":{"gitId":"SiTingST"},"content":"     * @return array of string"},{"lineNumber":165,"author":{"gitId":"SiTingST"},"content":"     * @throws DukeException"},{"lineNumber":166,"author":{"gitId":"SiTingST"},"content":"     */"},{"lineNumber":167,"author":{"gitId":"SiTingST"},"content":"    public static String[] separateDueDate (String input, String type) throws DukeException {"},{"lineNumber":168,"author":{"gitId":"SiTingST"},"content":"        if (input.contains(\"/by\") \u0026\u0026 type.equals(\"deadline\")) {"},{"lineNumber":169,"author":{"gitId":"SiTingST"},"content":"            String [] dueBy \u003d input.split(\"/by \");"},{"lineNumber":170,"author":{"gitId":"SiTingST"},"content":"            taskName \u003d dueBy[0].replace(type, \"\");"},{"lineNumber":171,"author":{"gitId":"SiTingST"},"content":"            String[] stringTime \u003d dueBy[1].split(\" \");"},{"lineNumber":172,"author":{"gitId":"SiTingST"},"content":"            return stringTime;"},{"lineNumber":173,"author":{"gitId":"SiTingST"},"content":"        } else if (input.contains(\"/at\") \u0026\u0026 type.equals(\"event\")) {"},{"lineNumber":174,"author":{"gitId":"SiTingST"},"content":"            String[] dueDetails \u003d input.split(\"/at \");"},{"lineNumber":175,"author":{"gitId":"SiTingST"},"content":"            taskName \u003d dueDetails[0].replace(type, \"\");"},{"lineNumber":176,"author":{"gitId":"SiTingST"},"content":"            String[] dateTime \u003d dueDetails[1].split(\" \");"},{"lineNumber":177,"author":{"gitId":"SiTingST"},"content":"            return dateTime;"},{"lineNumber":178,"author":{"gitId":"SiTingST"},"content":"        } else {"},{"lineNumber":179,"author":{"gitId":"SiTingST"},"content":"            throw new DukeException(\"OOPS!!! Wrong command to add deadlines or start/end time. \""},{"lineNumber":180,"author":{"gitId":"SiTingST"},"content":"                    + \"Use /by for deadline and /at for event\");"},{"lineNumber":181,"author":{"gitId":"SiTingST"},"content":"        }"},{"lineNumber":182,"author":{"gitId":"SiTingST"},"content":"    }"},{"lineNumber":183,"author":{"gitId":"SiTingST"},"content":""},{"lineNumber":184,"author":{"gitId":"SiTingST"},"content":"    /** Return array of string separated into start and end time"},{"lineNumber":185,"author":{"gitId":"SiTingST"},"content":"     * @param dateTime"},{"lineNumber":186,"author":{"gitId":"SiTingST"},"content":"     * @return array of string"},{"lineNumber":187,"author":{"gitId":"SiTingST"},"content":"     * @throws DukeException"},{"lineNumber":188,"author":{"gitId":"SiTingST"},"content":"     */"},{"lineNumber":189,"author":{"gitId":"SiTingST"},"content":""},{"lineNumber":190,"author":{"gitId":"SiTingST"},"content":"    public static String[] separateStartEndTime(String[] dateTime) throws DukeException {"},{"lineNumber":191,"author":{"gitId":"SiTingST"},"content":"        String[] timeArr;"},{"lineNumber":192,"author":{"gitId":"SiTingST"},"content":"        if (dateTime[1].contains(\"-\")) {"},{"lineNumber":193,"author":{"gitId":"SiTingST"},"content":"            timeArr \u003d dateTime[1].split(\"-\");"},{"lineNumber":194,"author":{"gitId":"SiTingST"},"content":"        } else {"},{"lineNumber":195,"author":{"gitId":"SiTingST"},"content":"            throw new DukeException(\"Please seperate the time with \u0027-\u0027. For ie, 1800-2000 or include start/end date\");"},{"lineNumber":196,"author":{"gitId":"SiTingST"},"content":"        }"},{"lineNumber":197,"author":{"gitId":"SiTingST"},"content":"        return timeArr;"},{"lineNumber":198,"author":{"gitId":"SiTingST"},"content":"    }"},{"lineNumber":199,"author":{"gitId":"SiTingST"},"content":""},{"lineNumber":200,"author":{"gitId":"SiTingST"},"content":"    /** Check if user passed in enugh parameters for deadline and event task"},{"lineNumber":201,"author":{"gitId":"SiTingST"},"content":"     * @param dateTime"},{"lineNumber":202,"author":{"gitId":"SiTingST"},"content":"     * @param type"},{"lineNumber":203,"author":{"gitId":"SiTingST"},"content":"     * @return boolean"},{"lineNumber":204,"author":{"gitId":"SiTingST"},"content":"     * @throws DukeException"},{"lineNumber":205,"author":{"gitId":"SiTingST"},"content":"     */"},{"lineNumber":206,"author":{"gitId":"SiTingST"},"content":"    public static boolean dateTimeParse(String[] dateTime, String type) throws DukeException {"},{"lineNumber":207,"author":{"gitId":"SiTingST"},"content":"        if (dateTime.length \u003c 2 \u0026\u0026 type.equals(\"deadline\")) {"},{"lineNumber":208,"author":{"gitId":"SiTingST"},"content":"            return true;"},{"lineNumber":209,"author":{"gitId":"SiTingST"},"content":"        } else if (dateTime.length \u003e 2 \u0026\u0026 type.equals(\"deadline\")) {"},{"lineNumber":210,"author":{"gitId":"SiTingST"},"content":"            throw new DukeException(\"OOPS!!! Deadline task only accept one start time. Please create an event instead\");"},{"lineNumber":211,"author":{"gitId":"SiTingST"},"content":"        }"},{"lineNumber":212,"author":{"gitId":"SiTingST"},"content":"        return false;"},{"lineNumber":213,"author":{"gitId":"SiTingST"},"content":"    }"},{"lineNumber":214,"author":{"gitId":"SiTingST"},"content":"}"}],"authorContributionMap":{"SiTingST":214}},{"path":"src/main/java/duke/task/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"SiTingST"},"content":"package duke.task;"},{"lineNumber":2,"author":{"gitId":"SiTingST"},"content":"import java.time.LocalDate;"},{"lineNumber":3,"author":{"gitId":"SiTingST"},"content":"import java.time.LocalTime;"},{"lineNumber":4,"author":{"gitId":"SiTingST"},"content":""},{"lineNumber":5,"author":{"gitId":"SiTingST"},"content":"/** Create a Deadline class"},{"lineNumber":6,"author":{"gitId":"SiTingST"},"content":" *"},{"lineNumber":7,"author":{"gitId":"SiTingST"},"content":" */"},{"lineNumber":8,"author":{"gitId":"SiTingST"},"content":"public class Deadline extends Task {"},{"lineNumber":9,"author":{"gitId":"SiTingST"},"content":""},{"lineNumber":10,"author":{"gitId":"SiTingST"},"content":"    private LocalDate dueDate;"},{"lineNumber":11,"author":{"gitId":"SiTingST"},"content":"    private LocalTime dueTime;"},{"lineNumber":12,"author":{"gitId":"SiTingST"},"content":""},{"lineNumber":13,"author":{"gitId":"SiTingST"},"content":"    /**Constructor to create deadline object"},{"lineNumber":14,"author":{"gitId":"SiTingST"},"content":"     * @param title"},{"lineNumber":15,"author":{"gitId":"SiTingST"},"content":"     * @param dueBy"},{"lineNumber":16,"author":{"gitId":"SiTingST"},"content":"     * @param time"},{"lineNumber":17,"author":{"gitId":"SiTingST"},"content":"     */"},{"lineNumber":18,"author":{"gitId":"SiTingST"},"content":"    public Deadline(String title, LocalDate dueBy, LocalTime time) {"},{"lineNumber":19,"author":{"gitId":"SiTingST"},"content":"        super(title);"},{"lineNumber":20,"author":{"gitId":"SiTingST"},"content":"        this.dueDate \u003d dueBy;"},{"lineNumber":21,"author":{"gitId":"SiTingST"},"content":"        this.dueTime \u003d time;"},{"lineNumber":22,"author":{"gitId":"SiTingST"},"content":"    }"},{"lineNumber":23,"author":{"gitId":"SiTingST"},"content":""},{"lineNumber":24,"author":{"gitId":"SiTingST"},"content":"    /** Overloaded constructor for retrieval of task from data file"},{"lineNumber":25,"author":{"gitId":"SiTingST"},"content":"     * @param title"},{"lineNumber":26,"author":{"gitId":"SiTingST"},"content":"     * @param b boolean"},{"lineNumber":27,"author":{"gitId":"SiTingST"},"content":"     * @param dueBy"},{"lineNumber":28,"author":{"gitId":"SiTingST"},"content":"     * @param time"},{"lineNumber":29,"author":{"gitId":"SiTingST"},"content":"     */"},{"lineNumber":30,"author":{"gitId":"SiTingST"},"content":"    public Deadline(String title, Boolean b, LocalDate dueBy, LocalTime time) {"},{"lineNumber":31,"author":{"gitId":"SiTingST"},"content":"        super(title, b);"},{"lineNumber":32,"author":{"gitId":"SiTingST"},"content":"        this.dueDate \u003d dueBy;"},{"lineNumber":33,"author":{"gitId":"SiTingST"},"content":"        this.dueTime \u003d time;"},{"lineNumber":34,"author":{"gitId":"SiTingST"},"content":"    }"},{"lineNumber":35,"author":{"gitId":"SiTingST"},"content":""},{"lineNumber":36,"author":{"gitId":"SiTingST"},"content":"    /** Change representation of task to be added to data file"},{"lineNumber":37,"author":{"gitId":"SiTingST"},"content":"     * @return String"},{"lineNumber":38,"author":{"gitId":"SiTingST"},"content":"     */"},{"lineNumber":39,"author":{"gitId":"SiTingST"},"content":"    @Override"},{"lineNumber":40,"author":{"gitId":"SiTingST"},"content":"    public String changeFormat() {"},{"lineNumber":41,"author":{"gitId":"SiTingST"},"content":"        return \"D\" + super.changeFormat() + \",\" + this.dueDate + \",\" + this.dueTime;"},{"lineNumber":42,"author":{"gitId":"SiTingST"},"content":"    }"},{"lineNumber":43,"author":{"gitId":"SiTingST"},"content":""},{"lineNumber":44,"author":{"gitId":"SiTingST"},"content":"    /** Print customized representation of task to user"},{"lineNumber":45,"author":{"gitId":"SiTingST"},"content":"     * @return String"},{"lineNumber":46,"author":{"gitId":"SiTingST"},"content":"     */"},{"lineNumber":47,"author":{"gitId":"SiTingST"},"content":"    @Override"},{"lineNumber":48,"author":{"gitId":"SiTingST"},"content":"    public String toString() {"},{"lineNumber":49,"author":{"gitId":"SiTingST"},"content":"        return \"[D]\" + super.toString() + \" (by: \" + this.dueDate + \" \" + this.dueTime + \")\";"},{"lineNumber":50,"author":{"gitId":"SiTingST"},"content":"    }"},{"lineNumber":51,"author":{"gitId":"SiTingST"},"content":"}"}],"authorContributionMap":{"SiTingST":51}},{"path":"src/main/java/duke/task/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"SiTingST"},"content":"package duke.task;"},{"lineNumber":2,"author":{"gitId":"SiTingST"},"content":"import java.time.LocalDate;"},{"lineNumber":3,"author":{"gitId":"SiTingST"},"content":"import java.time.LocalTime;"},{"lineNumber":4,"author":{"gitId":"SiTingST"},"content":""},{"lineNumber":5,"author":{"gitId":"SiTingST"},"content":"/** Create a Event class"},{"lineNumber":6,"author":{"gitId":"SiTingST"},"content":" *"},{"lineNumber":7,"author":{"gitId":"SiTingST"},"content":" */"},{"lineNumber":8,"author":{"gitId":"SiTingST"},"content":"public class Event extends Task {"},{"lineNumber":9,"author":{"gitId":"SiTingST"},"content":""},{"lineNumber":10,"author":{"gitId":"SiTingST"},"content":"    private LocalDate date;"},{"lineNumber":11,"author":{"gitId":"SiTingST"},"content":"    private LocalTime startTime;"},{"lineNumber":12,"author":{"gitId":"SiTingST"},"content":"    private LocalTime endTime;"},{"lineNumber":13,"author":{"gitId":"SiTingST"},"content":""},{"lineNumber":14,"author":{"gitId":"SiTingST"},"content":"    /**Constructor to create events object"},{"lineNumber":15,"author":{"gitId":"SiTingST"},"content":"     * @param title"},{"lineNumber":16,"author":{"gitId":"SiTingST"},"content":"     * @param  b boolean"},{"lineNumber":17,"author":{"gitId":"SiTingST"},"content":"     * @param data duedate"},{"lineNumber":18,"author":{"gitId":"SiTingST"},"content":"     */"},{"lineNumber":19,"author":{"gitId":"SiTingST"},"content":""},{"lineNumber":20,"author":{"gitId":"SiTingST"},"content":"    public Event(String title, Boolean b, LocalDate data) {"},{"lineNumber":21,"author":{"gitId":"SiTingST"},"content":"        super(title, b);"},{"lineNumber":22,"author":{"gitId":"SiTingST"},"content":"        this.date \u003d data;"},{"lineNumber":23,"author":{"gitId":"SiTingST"},"content":"    }"},{"lineNumber":24,"author":{"gitId":"SiTingST"},"content":""},{"lineNumber":25,"author":{"gitId":"SiTingST"},"content":"    /**Constructor to create events object for retrieval of task from data file"},{"lineNumber":26,"author":{"gitId":"SiTingST"},"content":"     * @param title"},{"lineNumber":27,"author":{"gitId":"SiTingST"},"content":"     * @param  b boolean"},{"lineNumber":28,"author":{"gitId":"SiTingST"},"content":"     * @param date duedate"},{"lineNumber":29,"author":{"gitId":"SiTingST"},"content":"     * @param  startTime"},{"lineNumber":30,"author":{"gitId":"SiTingST"},"content":"     * @param  endTime"},{"lineNumber":31,"author":{"gitId":"SiTingST"},"content":"     */"},{"lineNumber":32,"author":{"gitId":"SiTingST"},"content":""},{"lineNumber":33,"author":{"gitId":"SiTingST"},"content":"    public Event(String title, Boolean b, LocalDate date, LocalTime startTime, LocalTime endTime) {"},{"lineNumber":34,"author":{"gitId":"SiTingST"},"content":"        super(title, b);"},{"lineNumber":35,"author":{"gitId":"SiTingST"},"content":"        this.date \u003d date;"},{"lineNumber":36,"author":{"gitId":"SiTingST"},"content":"        this.startTime \u003d startTime;"},{"lineNumber":37,"author":{"gitId":"SiTingST"},"content":"        this.endTime \u003d endTime;"},{"lineNumber":38,"author":{"gitId":"SiTingST"},"content":"    }"},{"lineNumber":39,"author":{"gitId":"SiTingST"},"content":""},{"lineNumber":40,"author":{"gitId":"SiTingST"},"content":"    /** Change representation of task to be added to data file"},{"lineNumber":41,"author":{"gitId":"SiTingST"},"content":"     * @return String"},{"lineNumber":42,"author":{"gitId":"SiTingST"},"content":"     */"},{"lineNumber":43,"author":{"gitId":"SiTingST"},"content":"    @Override"},{"lineNumber":44,"author":{"gitId":"SiTingST"},"content":"    public String changeFormat() {"},{"lineNumber":45,"author":{"gitId":"SiTingST"},"content":"        return \"E\" + super.changeFormat() + \",\" + this.date + \",\" + this.startTime + \",\" + this.endTime;"},{"lineNumber":46,"author":{"gitId":"SiTingST"},"content":"    }"},{"lineNumber":47,"author":{"gitId":"SiTingST"},"content":""},{"lineNumber":48,"author":{"gitId":"SiTingST"},"content":"    /** Print customized representation of task to user"},{"lineNumber":49,"author":{"gitId":"SiTingST"},"content":"     * @return String"},{"lineNumber":50,"author":{"gitId":"SiTingST"},"content":"     */"},{"lineNumber":51,"author":{"gitId":"SiTingST"},"content":"    @Override"},{"lineNumber":52,"author":{"gitId":"SiTingST"},"content":"    public String toString() {"},{"lineNumber":53,"author":{"gitId":"SiTingST"},"content":"        return \"[E]\" + super.toString() + \"(at: \" + this.date + \" \" + this.startTime + \" \" + this.endTime + \")\";"},{"lineNumber":54,"author":{"gitId":"SiTingST"},"content":"    }"},{"lineNumber":55,"author":{"gitId":"SiTingST"},"content":"}"}],"authorContributionMap":{"SiTingST":55}},{"path":"src/main/java/duke/task/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"SiTingST"},"content":"package duke.task;"},{"lineNumber":2,"author":{"gitId":"SiTingST"},"content":""},{"lineNumber":3,"author":{"gitId":"SiTingST"},"content":"import java.time.LocalDate;"},{"lineNumber":4,"author":{"gitId":"SiTingST"},"content":"import java.time.LocalTime;"},{"lineNumber":5,"author":{"gitId":"SiTingST"},"content":"import java.time.format.DateTimeFormatter;"},{"lineNumber":6,"author":{"gitId":"SiTingST"},"content":""},{"lineNumber":7,"author":{"gitId":"SiTingST"},"content":"/**"},{"lineNumber":8,"author":{"gitId":"SiTingST"},"content":" * Stores all type of task"},{"lineNumber":9,"author":{"gitId":"SiTingST"},"content":" */"},{"lineNumber":10,"author":{"gitId":"SiTingST"},"content":"public class Task {"},{"lineNumber":11,"author":{"gitId":"SiTingST"},"content":"    private static DateTimeFormatter timeFormatter \u003d DateTimeFormatter.ofPattern(\"HH:mm\");"},{"lineNumber":12,"author":{"gitId":"SiTingST"},"content":"    private static DateTimeFormatter dateFormatter \u003d DateTimeFormatter.ofPattern(\"yyyy-MM-dd\");"},{"lineNumber":13,"author":{"gitId":"SiTingST"},"content":""},{"lineNumber":14,"author":{"gitId":"SiTingST"},"content":"    protected String description;"},{"lineNumber":15,"author":{"gitId":"SiTingST"},"content":"    protected boolean isCompleted;"},{"lineNumber":16,"author":{"gitId":"SiTingST"},"content":""},{"lineNumber":17,"author":{"gitId":"SiTingST"},"content":"    /**"},{"lineNumber":18,"author":{"gitId":"SiTingST"},"content":"     * Empty constructor"},{"lineNumber":19,"author":{"gitId":"SiTingST"},"content":"     */"},{"lineNumber":20,"author":{"gitId":"SiTingST"},"content":"    public Task(){"},{"lineNumber":21,"author":{"gitId":"SiTingST"},"content":""},{"lineNumber":22,"author":{"gitId":"SiTingST"},"content":"    }"},{"lineNumber":23,"author":{"gitId":"SiTingST"},"content":""},{"lineNumber":24,"author":{"gitId":"SiTingST"},"content":"    /** Constructor to create task object"},{"lineNumber":25,"author":{"gitId":"SiTingST"},"content":"     * @param title"},{"lineNumber":26,"author":{"gitId":"SiTingST"},"content":"     */"},{"lineNumber":27,"author":{"gitId":"SiTingST"},"content":"    public Task(String title) {"},{"lineNumber":28,"author":{"gitId":"SiTingST"},"content":"        this.description \u003d title;"},{"lineNumber":29,"author":{"gitId":"SiTingST"},"content":"        this.isCompleted \u003d false;"},{"lineNumber":30,"author":{"gitId":"SiTingST"},"content":"    }"},{"lineNumber":31,"author":{"gitId":"SiTingST"},"content":""},{"lineNumber":32,"author":{"gitId":"SiTingST"},"content":"    /**Constructor to create task object for retrieval of task from data file"},{"lineNumber":33,"author":{"gitId":"SiTingST"},"content":"     * @param title"},{"lineNumber":34,"author":{"gitId":"SiTingST"},"content":"     * @param b"},{"lineNumber":35,"author":{"gitId":"SiTingST"},"content":"     */"},{"lineNumber":36,"author":{"gitId":"SiTingST"},"content":"    public Task(String title, boolean b) {"},{"lineNumber":37,"author":{"gitId":"SiTingST"},"content":"        this.description \u003d title;"},{"lineNumber":38,"author":{"gitId":"SiTingST"},"content":"        this.isCompleted \u003d b;"},{"lineNumber":39,"author":{"gitId":"SiTingST"},"content":"    }"},{"lineNumber":40,"author":{"gitId":"SiTingST"},"content":""},{"lineNumber":41,"author":{"gitId":"SiTingST"},"content":"    /**"},{"lineNumber":42,"author":{"gitId":"SiTingST"},"content":"     * Set task to completed"},{"lineNumber":43,"author":{"gitId":"SiTingST"},"content":"     */"},{"lineNumber":44,"author":{"gitId":"SiTingST"},"content":"    public void setCompleted() {"},{"lineNumber":45,"author":{"gitId":"SiTingST"},"content":"        this.isCompleted \u003d true;"},{"lineNumber":46,"author":{"gitId":"SiTingST"},"content":"    }"},{"lineNumber":47,"author":{"gitId":"SiTingST"},"content":""},{"lineNumber":48,"author":{"gitId":"SiTingST"},"content":"    /** Return cross if task is completed"},{"lineNumber":49,"author":{"gitId":"SiTingST"},"content":"     * @return"},{"lineNumber":50,"author":{"gitId":"SiTingST"},"content":"     */"},{"lineNumber":51,"author":{"gitId":"SiTingST"},"content":"    public String checkStatus() {"},{"lineNumber":52,"author":{"gitId":"SiTingST"},"content":"        return (this.isCompleted ? \"\\u2718\" : \" \");"},{"lineNumber":53,"author":{"gitId":"SiTingST"},"content":"    }"},{"lineNumber":54,"author":{"gitId":"SiTingST"},"content":""},{"lineNumber":55,"author":{"gitId":"SiTingST"},"content":"    public String getStatus() {"},{"lineNumber":56,"author":{"gitId":"SiTingST"},"content":"        return (this.isCompleted ? \"\\u2718\" : \" \");"},{"lineNumber":57,"author":{"gitId":"SiTingST"},"content":"    }"},{"lineNumber":58,"author":{"gitId":"SiTingST"},"content":""},{"lineNumber":59,"author":{"gitId":"SiTingST"},"content":"    /** Return description of task"},{"lineNumber":60,"author":{"gitId":"SiTingST"},"content":"     * @return"},{"lineNumber":61,"author":{"gitId":"SiTingST"},"content":"     */"},{"lineNumber":62,"author":{"gitId":"SiTingST"},"content":"    public String getTaskName() {"},{"lineNumber":63,"author":{"gitId":"SiTingST"},"content":"        return this.description;"},{"lineNumber":64,"author":{"gitId":"SiTingST"},"content":"    }"},{"lineNumber":65,"author":{"gitId":"SiTingST"},"content":""},{"lineNumber":66,"author":{"gitId":"SiTingST"},"content":"    /** Return customized representation of task to add to data file"},{"lineNumber":67,"author":{"gitId":"SiTingST"},"content":"     * @return"},{"lineNumber":68,"author":{"gitId":"SiTingST"},"content":"     */"},{"lineNumber":69,"author":{"gitId":"SiTingST"},"content":"    public String changeFormat() {"},{"lineNumber":70,"author":{"gitId":"SiTingST"},"content":"        return \",\" + this.isCompleted + \",\" + this.getTaskName();"},{"lineNumber":71,"author":{"gitId":"SiTingST"},"content":"    }"},{"lineNumber":72,"author":{"gitId":"SiTingST"},"content":""},{"lineNumber":73,"author":{"gitId":"SiTingST"},"content":"    /** Return the string version of task from data file to task objects"},{"lineNumber":74,"author":{"gitId":"SiTingST"},"content":"     * @param stringTask"},{"lineNumber":75,"author":{"gitId":"SiTingST"},"content":"     * @return"},{"lineNumber":76,"author":{"gitId":"SiTingST"},"content":"     */"},{"lineNumber":77,"author":{"gitId":"SiTingST"},"content":"    public Task changeToTaskFormat(String stringTask) {"},{"lineNumber":78,"author":{"gitId":"SiTingST"},"content":""},{"lineNumber":79,"author":{"gitId":"SiTingST"},"content":"        if (stringTask.charAt(0) \u003d\u003d \u0027T\u0027) {"},{"lineNumber":80,"author":{"gitId":"SiTingST"},"content":"            String[] tasks \u003d stringTask.split(\",\");"},{"lineNumber":81,"author":{"gitId":"SiTingST"},"content":"            return new ToDo(tasks[2], Boolean.parseBoolean(tasks[1]));"},{"lineNumber":82,"author":{"gitId":"SiTingST"},"content":"        } else if (stringTask.charAt(0) \u003d\u003d \u0027D\u0027) {"},{"lineNumber":83,"author":{"gitId":"SiTingST"},"content":"            String[] tasks \u003d stringTask.split(\",\");"},{"lineNumber":84,"author":{"gitId":"SiTingST"},"content":""},{"lineNumber":85,"author":{"gitId":"SiTingST"},"content":"            LocalDate date \u003d LocalDate.parse(tasks[3], dateFormatter);"},{"lineNumber":86,"author":{"gitId":"SiTingST"},"content":"            LocalTime startTime \u003d LocalTime.parse(tasks[4], timeFormatter);"},{"lineNumber":87,"author":{"gitId":"SiTingST"},"content":""},{"lineNumber":88,"author":{"gitId":"SiTingST"},"content":"            return new Deadline(tasks[2], Boolean.parseBoolean(tasks[1]), date, startTime);"},{"lineNumber":89,"author":{"gitId":"SiTingST"},"content":"        } else if (stringTask.charAt(0) \u003d\u003d \u0027E\u0027) {"},{"lineNumber":90,"author":{"gitId":"SiTingST"},"content":"            String[] tasks \u003d stringTask.split(\",\");"},{"lineNumber":91,"author":{"gitId":"SiTingST"},"content":""},{"lineNumber":92,"author":{"gitId":"SiTingST"},"content":"            LocalDate date \u003d LocalDate.parse(tasks[3], dateFormatter);"},{"lineNumber":93,"author":{"gitId":"SiTingST"},"content":"            LocalTime startTime \u003d LocalTime.parse(tasks[4], timeFormatter);"},{"lineNumber":94,"author":{"gitId":"SiTingST"},"content":"            LocalTime endTime \u003d LocalTime.parse(tasks[5], timeFormatter);"},{"lineNumber":95,"author":{"gitId":"SiTingST"},"content":""},{"lineNumber":96,"author":{"gitId":"SiTingST"},"content":"            return new Event(tasks[2], Boolean.parseBoolean(tasks[1]), date, startTime, endTime);"},{"lineNumber":97,"author":{"gitId":"SiTingST"},"content":"        } else {"},{"lineNumber":98,"author":{"gitId":"SiTingST"},"content":"            return new Task();"},{"lineNumber":99,"author":{"gitId":"SiTingST"},"content":"        }"},{"lineNumber":100,"author":{"gitId":"SiTingST"},"content":"    }"},{"lineNumber":101,"author":{"gitId":"SiTingST"},"content":""},{"lineNumber":102,"author":{"gitId":"SiTingST"},"content":"    /** Print customized representation of task to user"},{"lineNumber":103,"author":{"gitId":"SiTingST"},"content":"     * @return String"},{"lineNumber":104,"author":{"gitId":"SiTingST"},"content":"     */"},{"lineNumber":105,"author":{"gitId":"SiTingST"},"content":"    @Override"},{"lineNumber":106,"author":{"gitId":"SiTingST"},"content":"    public String toString() {"},{"lineNumber":107,"author":{"gitId":"SiTingST"},"content":"        return \"[\" + this.getStatus() + \"] \" + this.getTaskName();"},{"lineNumber":108,"author":{"gitId":"SiTingST"},"content":"    }"},{"lineNumber":109,"author":{"gitId":"SiTingST"},"content":"}"}],"authorContributionMap":{"SiTingST":109}},{"path":"src/main/java/duke/task/ToDo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"SiTingST"},"content":"package duke.task;"},{"lineNumber":2,"author":{"gitId":"SiTingST"},"content":""},{"lineNumber":3,"author":{"gitId":"SiTingST"},"content":""},{"lineNumber":4,"author":{"gitId":"SiTingST"},"content":"/**"},{"lineNumber":5,"author":{"gitId":"SiTingST"},"content":" *  Create a todo class"},{"lineNumber":6,"author":{"gitId":"SiTingST"},"content":" */"},{"lineNumber":7,"author":{"gitId":"SiTingST"},"content":""},{"lineNumber":8,"author":{"gitId":"SiTingST"},"content":"public class ToDo extends Task {"},{"lineNumber":9,"author":{"gitId":"SiTingST"},"content":""},{"lineNumber":10,"author":{"gitId":"SiTingST"},"content":"    public ToDo(String title, Boolean b) {"},{"lineNumber":11,"author":{"gitId":"SiTingST"},"content":"        super(title, b);"},{"lineNumber":12,"author":{"gitId":"SiTingST"},"content":"    }"},{"lineNumber":13,"author":{"gitId":"SiTingST"},"content":""},{"lineNumber":14,"author":{"gitId":"SiTingST"},"content":"    public ToDo(String title) {"},{"lineNumber":15,"author":{"gitId":"SiTingST"},"content":"        super(title);"},{"lineNumber":16,"author":{"gitId":"SiTingST"},"content":"    }"},{"lineNumber":17,"author":{"gitId":"SiTingST"},"content":""},{"lineNumber":18,"author":{"gitId":"SiTingST"},"content":"    /** Change representation of task to be added to data file"},{"lineNumber":19,"author":{"gitId":"SiTingST"},"content":"     * @return String"},{"lineNumber":20,"author":{"gitId":"SiTingST"},"content":"     */"},{"lineNumber":21,"author":{"gitId":"SiTingST"},"content":""},{"lineNumber":22,"author":{"gitId":"SiTingST"},"content":"    @Override"},{"lineNumber":23,"author":{"gitId":"SiTingST"},"content":"    public String changeFormat() {"},{"lineNumber":24,"author":{"gitId":"SiTingST"},"content":"        return \"T\" + super.changeFormat();"},{"lineNumber":25,"author":{"gitId":"SiTingST"},"content":"    }"},{"lineNumber":26,"author":{"gitId":"SiTingST"},"content":""},{"lineNumber":27,"author":{"gitId":"SiTingST"},"content":"    /** Print customized representation of task to user"},{"lineNumber":28,"author":{"gitId":"SiTingST"},"content":"     * @return String"},{"lineNumber":29,"author":{"gitId":"SiTingST"},"content":"     */"},{"lineNumber":30,"author":{"gitId":"SiTingST"},"content":"    @Override"},{"lineNumber":31,"author":{"gitId":"SiTingST"},"content":"    public String toString() {"},{"lineNumber":32,"author":{"gitId":"SiTingST"},"content":"        return \"[T]\" + super.toString();"},{"lineNumber":33,"author":{"gitId":"SiTingST"},"content":"    }"},{"lineNumber":34,"author":{"gitId":"SiTingST"},"content":"}"}],"authorContributionMap":{"SiTingST":34}},{"path":"src/main/java/duke/tasklist/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"SiTingST"},"content":"package duke.tasklist;"},{"lineNumber":2,"author":{"gitId":"SiTingST"},"content":""},{"lineNumber":3,"author":{"gitId":"SiTingST"},"content":"import java.time.LocalDate;"},{"lineNumber":4,"author":{"gitId":"SiTingST"},"content":"import java.time.LocalTime;"},{"lineNumber":5,"author":{"gitId":"SiTingST"},"content":"import java.util.ArrayList;"},{"lineNumber":6,"author":{"gitId":"SiTingST"},"content":""},{"lineNumber":7,"author":{"gitId":"SiTingST"},"content":"import duke.ui.UI;"},{"lineNumber":8,"author":{"gitId":"SiTingST"},"content":"import duke.task.Deadline;"},{"lineNumber":9,"author":{"gitId":"SiTingST"},"content":"import duke.task.Event;"},{"lineNumber":10,"author":{"gitId":"SiTingST"},"content":"import duke.task.Task;"},{"lineNumber":11,"author":{"gitId":"SiTingST"},"content":"import duke.task.ToDo;"},{"lineNumber":12,"author":{"gitId":"SiTingST"},"content":""},{"lineNumber":13,"author":{"gitId":"SiTingST"},"content":""},{"lineNumber":14,"author":{"gitId":"SiTingST"},"content":"/**"},{"lineNumber":15,"author":{"gitId":"SiTingST"},"content":" * Store an array list of task"},{"lineNumber":16,"author":{"gitId":"SiTingST"},"content":" * Interact with task class to facilitate the creation, update, deletion of task"},{"lineNumber":17,"author":{"gitId":"SiTingST"},"content":" */"},{"lineNumber":18,"author":{"gitId":"SiTingST"},"content":"public class TaskList {"},{"lineNumber":19,"author":{"gitId":"SiTingST"},"content":""},{"lineNumber":20,"author":{"gitId":"SiTingST"},"content":"    private static ArrayList\u003cTask\u003e taskArraylist \u003d new ArrayList\u003cTask\u003e();"},{"lineNumber":21,"author":{"gitId":"SiTingST"},"content":"    private static ArrayList\u003cTask\u003e findTaskArraylist \u003d new ArrayList\u003cTask\u003e();"},{"lineNumber":22,"author":{"gitId":"SiTingST"},"content":""},{"lineNumber":23,"author":{"gitId":"SiTingST"},"content":"    private static UI ui \u003d new UI();"},{"lineNumber":24,"author":{"gitId":"SiTingST"},"content":""},{"lineNumber":25,"author":{"gitId":"SiTingST"},"content":"    /**Add a todo task to arraylist"},{"lineNumber":26,"author":{"gitId":"SiTingST"},"content":"     * @param description"},{"lineNumber":27,"author":{"gitId":"SiTingST"},"content":"     */"},{"lineNumber":28,"author":{"gitId":"SiTingST"},"content":"    public void addToDo(String description) {"},{"lineNumber":29,"author":{"gitId":"SiTingST"},"content":"        taskArraylist.add(new ToDo(description));"},{"lineNumber":30,"author":{"gitId":"SiTingST"},"content":"    }"},{"lineNumber":31,"author":{"gitId":"SiTingST"},"content":""},{"lineNumber":32,"author":{"gitId":"SiTingST"},"content":"    /**Add a deadline task to arraylist"},{"lineNumber":33,"author":{"gitId":"SiTingST"},"content":"     * @param description"},{"lineNumber":34,"author":{"gitId":"SiTingST"},"content":"     * @param dueDate"},{"lineNumber":35,"author":{"gitId":"SiTingST"},"content":"     * @param endTime"},{"lineNumber":36,"author":{"gitId":"SiTingST"},"content":"     */"},{"lineNumber":37,"author":{"gitId":"SiTingST"},"content":"    public void addDeadline(String description, LocalDate dueDate, LocalTime endTime) {"},{"lineNumber":38,"author":{"gitId":"SiTingST"},"content":"        taskArraylist.add(new Deadline(description, dueDate, endTime));"},{"lineNumber":39,"author":{"gitId":"SiTingST"},"content":"    }"},{"lineNumber":40,"author":{"gitId":"SiTingST"},"content":""},{"lineNumber":41,"author":{"gitId":"SiTingST"},"content":"    /**Add an event task to arraylist"},{"lineNumber":42,"author":{"gitId":"SiTingST"},"content":"     * @param description"},{"lineNumber":43,"author":{"gitId":"SiTingST"},"content":"     * @param dueDate"},{"lineNumber":44,"author":{"gitId":"SiTingST"},"content":"     * @param startTime"},{"lineNumber":45,"author":{"gitId":"SiTingST"},"content":"     * @param endTime"},{"lineNumber":46,"author":{"gitId":"SiTingST"},"content":"     */"},{"lineNumber":47,"author":{"gitId":"SiTingST"},"content":"    public void addEvent(String description, LocalDate dueDate, LocalTime startTime, LocalTime endTime) {"},{"lineNumber":48,"author":{"gitId":"SiTingST"},"content":"        taskArraylist.add(new Event(description, false , dueDate, startTime, endTime));"},{"lineNumber":49,"author":{"gitId":"SiTingST"},"content":"    }"},{"lineNumber":50,"author":{"gitId":"SiTingST"},"content":""},{"lineNumber":51,"author":{"gitId":"SiTingST"},"content":"    /**"},{"lineNumber":52,"author":{"gitId":"SiTingST"},"content":"     * Print out all task in array list"},{"lineNumber":53,"author":{"gitId":"SiTingST"},"content":"     * @param type"},{"lineNumber":54,"author":{"gitId":"SiTingST"},"content":"     */"},{"lineNumber":55,"author":{"gitId":"SiTingST"},"content":"    public void showAllTask(String type) {"},{"lineNumber":56,"author":{"gitId":"SiTingST"},"content":"        ArrayList\u003cTask\u003e taskList;"},{"lineNumber":57,"author":{"gitId":"SiTingST"},"content":""},{"lineNumber":58,"author":{"gitId":"SiTingST"},"content":"        if (type.equals(\"find\")) {"},{"lineNumber":59,"author":{"gitId":"SiTingST"},"content":"            ui.printFindHeader();"},{"lineNumber":60,"author":{"gitId":"SiTingST"},"content":"            taskList \u003d findTaskArraylist;"},{"lineNumber":61,"author":{"gitId":"SiTingST"},"content":"        } else {"},{"lineNumber":62,"author":{"gitId":"SiTingST"},"content":"            ui.printListHeader();"},{"lineNumber":63,"author":{"gitId":"SiTingST"},"content":"            taskList \u003d taskArraylist;"},{"lineNumber":64,"author":{"gitId":"SiTingST"},"content":"        }"},{"lineNumber":65,"author":{"gitId":"SiTingST"},"content":"        for (int i \u003d 0; i \u003c taskList.size(); i++) {"},{"lineNumber":66,"author":{"gitId":"SiTingST"},"content":"            ui.printTask(i, taskList.get(i));"},{"lineNumber":67,"author":{"gitId":"SiTingST"},"content":"        }"},{"lineNumber":68,"author":{"gitId":"SiTingST"},"content":"        ui.displayLines();"},{"lineNumber":69,"author":{"gitId":"SiTingST"},"content":"    }"},{"lineNumber":70,"author":{"gitId":"SiTingST"},"content":""},{"lineNumber":71,"author":{"gitId":"SiTingST"},"content":"    /** Update specific task to completed"},{"lineNumber":72,"author":{"gitId":"SiTingST"},"content":"     * @param index  position(index) of task in array list"},{"lineNumber":73,"author":{"gitId":"SiTingST"},"content":"     */"},{"lineNumber":74,"author":{"gitId":"SiTingST"},"content":"    public void markAsDone(int index) {"},{"lineNumber":75,"author":{"gitId":"SiTingST"},"content":"        taskArraylist.get(index).setCompleted();"},{"lineNumber":76,"author":{"gitId":"SiTingST"},"content":"        ui.displayDoneTaskMessage(taskArraylist.get(index));"},{"lineNumber":77,"author":{"gitId":"SiTingST"},"content":"        taskArraylist.get(index).setCompleted();"},{"lineNumber":78,"author":{"gitId":"SiTingST"},"content":"    }"},{"lineNumber":79,"author":{"gitId":"SiTingST"},"content":""},{"lineNumber":80,"author":{"gitId":"SiTingST"},"content":"    /** Delete specific task given the index of task in array list"},{"lineNumber":81,"author":{"gitId":"SiTingST"},"content":"     * @param index  position(index) of task in array list"},{"lineNumber":82,"author":{"gitId":"SiTingST"},"content":"     */"},{"lineNumber":83,"author":{"gitId":"SiTingST"},"content":"    public void deleteTask(int index) {"},{"lineNumber":84,"author":{"gitId":"SiTingST"},"content":"        ui.displayDeletedTaskMessage(taskArraylist.get(index));"},{"lineNumber":85,"author":{"gitId":"SiTingST"},"content":"        taskArraylist.remove(index);"},{"lineNumber":86,"author":{"gitId":"SiTingST"},"content":"    }"},{"lineNumber":87,"author":{"gitId":"SiTingST"},"content":""},{"lineNumber":88,"author":{"gitId":"SiTingST"},"content":"    /** Return arraylist of task"},{"lineNumber":89,"author":{"gitId":"SiTingST"},"content":"     * @return arraylist of task"},{"lineNumber":90,"author":{"gitId":"SiTingST"},"content":"     */"},{"lineNumber":91,"author":{"gitId":"SiTingST"},"content":"    public ArrayList\u003cTask\u003e getTaskListArray() {"},{"lineNumber":92,"author":{"gitId":"SiTingST"},"content":"        return this.taskArraylist;"},{"lineNumber":93,"author":{"gitId":"SiTingST"},"content":"    }"},{"lineNumber":94,"author":{"gitId":"SiTingST"},"content":""},{"lineNumber":95,"author":{"gitId":"SiTingST"},"content":"    /** Set current array list of task to given array list from parameter"},{"lineNumber":96,"author":{"gitId":"SiTingST"},"content":"     * @param al array list of task"},{"lineNumber":97,"author":{"gitId":"SiTingST"},"content":"     */"},{"lineNumber":98,"author":{"gitId":"SiTingST"},"content":"    public void setTaskArraylist (ArrayList\u003cTask\u003e al) {"},{"lineNumber":99,"author":{"gitId":"SiTingST"},"content":"        this.taskArraylist \u003d al;"},{"lineNumber":100,"author":{"gitId":"SiTingST"},"content":"    }"},{"lineNumber":101,"author":{"gitId":"SiTingST"},"content":""},{"lineNumber":102,"author":{"gitId":"SiTingST"},"content":"    /** Find task in array list of task"},{"lineNumber":103,"author":{"gitId":"SiTingST"},"content":"     * @param input"},{"lineNumber":104,"author":{"gitId":"SiTingST"},"content":"     * @param t tasklist"},{"lineNumber":105,"author":{"gitId":"SiTingST"},"content":"     */"},{"lineNumber":106,"author":{"gitId":"SiTingST"},"content":"    public void findTask(String input, TaskList t) {"},{"lineNumber":107,"author":{"gitId":"SiTingST"},"content":"        findTaskArraylist.clear();"},{"lineNumber":108,"author":{"gitId":"SiTingST"},"content":"        taskArraylist \u003d t.getTaskListArray();"},{"lineNumber":109,"author":{"gitId":"SiTingST"},"content":"        for (int i \u003d 0; i \u003c taskArraylist.size(); i++) {"},{"lineNumber":110,"author":{"gitId":"SiTingST"},"content":"            if (taskArraylist.get(i).getTaskName().contains(input)) {"},{"lineNumber":111,"author":{"gitId":"SiTingST"},"content":"                findTaskArraylist.add(taskArraylist.get(i));"},{"lineNumber":112,"author":{"gitId":"SiTingST"},"content":"            }"},{"lineNumber":113,"author":{"gitId":"SiTingST"},"content":"        }"},{"lineNumber":114,"author":{"gitId":"SiTingST"},"content":"        showAllTask(\"find\");"},{"lineNumber":115,"author":{"gitId":"SiTingST"},"content":"    }"},{"lineNumber":116,"author":{"gitId":"SiTingST"},"content":""},{"lineNumber":117,"author":{"gitId":"SiTingST"},"content":"    /** Return specific task given the index of task in array list"},{"lineNumber":118,"author":{"gitId":"SiTingST"},"content":"     * @param index position(index) of task in array list"},{"lineNumber":119,"author":{"gitId":"SiTingST"},"content":"     * @return"},{"lineNumber":120,"author":{"gitId":"SiTingST"},"content":"     */"},{"lineNumber":121,"author":{"gitId":"SiTingST"},"content":"    public Task getTask(int index) {"},{"lineNumber":122,"author":{"gitId":"SiTingST"},"content":"        return taskArraylist.get(index);"},{"lineNumber":123,"author":{"gitId":"SiTingST"},"content":"    }"},{"lineNumber":124,"author":{"gitId":"SiTingST"},"content":"}"}],"authorContributionMap":{"SiTingST":124}},{"path":"src/main/java/duke/ui/UI.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"SiTingST"},"content":"package duke.ui;"},{"lineNumber":2,"author":{"gitId":"SiTingST"},"content":""},{"lineNumber":3,"author":{"gitId":"SiTingST"},"content":"import java.util.Scanner;"},{"lineNumber":4,"author":{"gitId":"SiTingST"},"content":""},{"lineNumber":5,"author":{"gitId":"SiTingST"},"content":"import duke.task.Task;"},{"lineNumber":6,"author":{"gitId":"SiTingST"},"content":""},{"lineNumber":7,"author":{"gitId":"SiTingST"},"content":"/**"},{"lineNumber":8,"author":{"gitId":"SiTingST"},"content":" * A class to handle interaction with users"},{"lineNumber":9,"author":{"gitId":"SiTingST"},"content":" */"},{"lineNumber":10,"author":{"gitId":"SiTingST"},"content":"public class UI {"},{"lineNumber":11,"author":{"gitId":"SiTingST"},"content":"    static final String LINES \u003d \"----------------------------------------\";"},{"lineNumber":12,"author":{"gitId":"SiTingST"},"content":"    private static Scanner sc \u003d new Scanner(System.in);"},{"lineNumber":13,"author":{"gitId":"SiTingST"},"content":""},{"lineNumber":14,"author":{"gitId":"SiTingST"},"content":"    /**"},{"lineNumber":15,"author":{"gitId":"SiTingST"},"content":"     * Print out welcome message to user"},{"lineNumber":16,"author":{"gitId":"SiTingST"},"content":"     */"},{"lineNumber":17,"author":{"gitId":"SiTingST"},"content":"    public static void displayWelcomeMessage() {"},{"lineNumber":18,"author":{"gitId":"SiTingST"},"content":"        String logo \u003d \" ____        _        \\n\""},{"lineNumber":19,"author":{"gitId":"SiTingST"},"content":"                + \"|  _ \\\\ _   _| | _____ \\n\""},{"lineNumber":20,"author":{"gitId":"SiTingST"},"content":"                + \"| | | | | | | |/ / _ \\\\\\n\""},{"lineNumber":21,"author":{"gitId":"SiTingST"},"content":"                + \"| |_| | |_| |   \u003c  __/\\n\""},{"lineNumber":22,"author":{"gitId":"SiTingST"},"content":"                + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\";"},{"lineNumber":23,"author":{"gitId":"SiTingST"},"content":"        System.out.println(\"Hi There! Greetings from \\n\" + logo);"},{"lineNumber":24,"author":{"gitId":"SiTingST"},"content":"        System.out.println(LINES + \"\\n\" + \" Good day! I\u0027m Duke\" + \"\\n\" + \" How can I help you today? \" + \"\\n\" + LINES);"},{"lineNumber":25,"author":{"gitId":"SiTingST"},"content":""},{"lineNumber":26,"author":{"gitId":"SiTingST"},"content":"    }"},{"lineNumber":27,"author":{"gitId":"SiTingST"},"content":""},{"lineNumber":28,"author":{"gitId":"SiTingST"},"content":"    /**"},{"lineNumber":29,"author":{"gitId":"SiTingST"},"content":"     * Print out bye message to user"},{"lineNumber":30,"author":{"gitId":"SiTingST"},"content":"     */"},{"lineNumber":31,"author":{"gitId":"SiTingST"},"content":"    public static void displayEndMessage() {"},{"lineNumber":32,"author":{"gitId":"SiTingST"},"content":"        System.out.println(LINES + \"\\n\" + \" Bye. Hope to see you again!\" + \"\\n\" + LINES);"},{"lineNumber":33,"author":{"gitId":"SiTingST"},"content":"    }"},{"lineNumber":34,"author":{"gitId":"SiTingST"},"content":""},{"lineNumber":35,"author":{"gitId":"SiTingST"},"content":"    /** Read next input from user"},{"lineNumber":36,"author":{"gitId":"SiTingST"},"content":"     * @return String"},{"lineNumber":37,"author":{"gitId":"SiTingST"},"content":"     */"},{"lineNumber":38,"author":{"gitId":"SiTingST"},"content":"    public static String readCommand() {"},{"lineNumber":39,"author":{"gitId":"SiTingST"},"content":"        return sc.nextLine();"},{"lineNumber":40,"author":{"gitId":"SiTingST"},"content":"    }"},{"lineNumber":41,"author":{"gitId":"SiTingST"},"content":""},{"lineNumber":42,"author":{"gitId":"SiTingST"},"content":"    /** Print out the task found in list"},{"lineNumber":43,"author":{"gitId":"SiTingST"},"content":"     * @param count"},{"lineNumber":44,"author":{"gitId":"SiTingST"},"content":"     * @param task"},{"lineNumber":45,"author":{"gitId":"SiTingST"},"content":"     */"},{"lineNumber":46,"author":{"gitId":"SiTingST"},"content":"    public void printTask(int count, Task task) {"},{"lineNumber":47,"author":{"gitId":"SiTingST"},"content":"        System.out.println((count + 1) + \".\" + task.toString());"},{"lineNumber":48,"author":{"gitId":"SiTingST"},"content":"    }"},{"lineNumber":49,"author":{"gitId":"SiTingST"},"content":""},{"lineNumber":50,"author":{"gitId":"SiTingST"},"content":"    /**"},{"lineNumber":51,"author":{"gitId":"SiTingST"},"content":"     * Display header for list method"},{"lineNumber":52,"author":{"gitId":"SiTingST"},"content":"     */"},{"lineNumber":53,"author":{"gitId":"SiTingST"},"content":"    public void printListHeader() {"},{"lineNumber":54,"author":{"gitId":"SiTingST"},"content":"        System.out.println(\"\\nHere are the tasks in your list:\");"},{"lineNumber":55,"author":{"gitId":"SiTingST"},"content":"    }"},{"lineNumber":56,"author":{"gitId":"SiTingST"},"content":""},{"lineNumber":57,"author":{"gitId":"SiTingST"},"content":"    public void printFindHeader() {"},{"lineNumber":58,"author":{"gitId":"SiTingST"},"content":"        System.out.println(\"\\nHere are the matching tasks in your list:\");"},{"lineNumber":59,"author":{"gitId":"SiTingST"},"content":"    }"},{"lineNumber":60,"author":{"gitId":"SiTingST"},"content":""},{"lineNumber":61,"author":{"gitId":"SiTingST"},"content":"    /**"},{"lineNumber":62,"author":{"gitId":"SiTingST"},"content":"     * Display dotted lines"},{"lineNumber":63,"author":{"gitId":"SiTingST"},"content":"     */"},{"lineNumber":64,"author":{"gitId":"SiTingST"},"content":"    public void displayLines() {"},{"lineNumber":65,"author":{"gitId":"SiTingST"},"content":"        System.out.println(LINES);"},{"lineNumber":66,"author":{"gitId":"SiTingST"},"content":"    }"},{"lineNumber":67,"author":{"gitId":"SiTingST"},"content":""},{"lineNumber":68,"author":{"gitId":"SiTingST"},"content":"    /** Print out message when task is added"},{"lineNumber":69,"author":{"gitId":"SiTingST"},"content":"     * @param t task"},{"lineNumber":70,"author":{"gitId":"SiTingST"},"content":"     * @param size"},{"lineNumber":71,"author":{"gitId":"SiTingST"},"content":"     */"},{"lineNumber":72,"author":{"gitId":"SiTingST"},"content":"    public void displayAddedTaskMessage(Task t, int size) {"},{"lineNumber":73,"author":{"gitId":"SiTingST"},"content":"        System.out.println(LINES + \"\\nGot it. I\u0027ve added this task: \\n\\t\" + t.toString() + \"\\n Now you have \""},{"lineNumber":74,"author":{"gitId":"SiTingST"},"content":"                + size + \" tasks in your list \\n\" + LINES);"},{"lineNumber":75,"author":{"gitId":"SiTingST"},"content":"    }"},{"lineNumber":76,"author":{"gitId":"SiTingST"},"content":""},{"lineNumber":77,"author":{"gitId":"SiTingST"},"content":"    /**Print out message when task is deleted"},{"lineNumber":78,"author":{"gitId":"SiTingST"},"content":"     * @param t task"},{"lineNumber":79,"author":{"gitId":"SiTingST"},"content":"     */"},{"lineNumber":80,"author":{"gitId":"SiTingST"},"content":"    public static void displayDeletedTaskMessage(Task t) {"},{"lineNumber":81,"author":{"gitId":"SiTingST"},"content":"        System.out.println(LINES + \"\\nNice! I\u0027ve removed this task: \\n\" + t.toString() + \"\\n\" + LINES);"},{"lineNumber":82,"author":{"gitId":"SiTingST"},"content":"    }"},{"lineNumber":83,"author":{"gitId":"SiTingST"},"content":""},{"lineNumber":84,"author":{"gitId":"SiTingST"},"content":"    /** Print out message when task is done"},{"lineNumber":85,"author":{"gitId":"SiTingST"},"content":"     * @param t task"},{"lineNumber":86,"author":{"gitId":"SiTingST"},"content":"     */"},{"lineNumber":87,"author":{"gitId":"SiTingST"},"content":"    public void displayDoneTaskMessage(Task t) {"},{"lineNumber":88,"author":{"gitId":"SiTingST"},"content":"        System.out.println(LINES + \"\\nNice! I\u0027ll make this task as done: \\n\" + t.toString() + \"\\n\" + LINES);"},{"lineNumber":89,"author":{"gitId":"SiTingST"},"content":"    }"},{"lineNumber":90,"author":{"gitId":"SiTingST"},"content":""},{"lineNumber":91,"author":{"gitId":"SiTingST"},"content":"    /** Print out exception messsage"},{"lineNumber":92,"author":{"gitId":"SiTingST"},"content":"     * @param e execption messsage"},{"lineNumber":93,"author":{"gitId":"SiTingST"},"content":"     */"},{"lineNumber":94,"author":{"gitId":"SiTingST"},"content":"    public void showError(String e) {"},{"lineNumber":95,"author":{"gitId":"SiTingST"},"content":"        System.out.println(e);"},{"lineNumber":96,"author":{"gitId":"SiTingST"},"content":"    }"},{"lineNumber":97,"author":{"gitId":"SiTingST"},"content":""},{"lineNumber":98,"author":{"gitId":"SiTingST"},"content":"}"}],"authorContributionMap":{"SiTingST":98}},{"path":"src/test/java/duke/parser/ParserTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"SiTingST"},"content":"package java.duke.parser;"},{"lineNumber":2,"author":{"gitId":"SiTingST"},"content":""},{"lineNumber":3,"author":{"gitId":"SiTingST"},"content":"import duke.parser.Parser;"},{"lineNumber":4,"author":{"gitId":"SiTingST"},"content":"import org.junit.jupiter.api.Test;"},{"lineNumber":5,"author":{"gitId":"SiTingST"},"content":""},{"lineNumber":6,"author":{"gitId":"SiTingST"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;"},{"lineNumber":7,"author":{"gitId":"SiTingST"},"content":""},{"lineNumber":8,"author":{"gitId":"SiTingST"},"content":"public class ParserTest {"},{"lineNumber":9,"author":{"gitId":"SiTingST"},"content":"    @Test"},{"lineNumber":10,"author":{"gitId":"SiTingST"},"content":"    public void isValidTaskNumberTest(){"},{"lineNumber":11,"author":{"gitId":"SiTingST"},"content":"        Parser p \u003d new Parser();"},{"lineNumber":12,"author":{"gitId":"SiTingST"},"content":""},{"lineNumber":13,"author":{"gitId":"SiTingST"},"content":"        assertEquals(false,p.isValidTaskNumber(-1, \"done\", 0));"},{"lineNumber":14,"author":{"gitId":"SiTingST"},"content":"        assertEquals(false,p.isValidTaskNumber(-1, \"delete\", 0));"},{"lineNumber":15,"author":{"gitId":"SiTingST"},"content":"        assertEquals(true,p.isValidTaskNumber(3, \"done\", 10));"},{"lineNumber":16,"author":{"gitId":"SiTingST"},"content":"    }"},{"lineNumber":17,"author":{"gitId":"SiTingST"},"content":"}"}],"authorContributionMap":{"SiTingST":17}},{"path":"src/test/java/duke/tasklist/TaskListTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"SiTingST"},"content":"package java.duke.tasklist;"},{"lineNumber":2,"author":{"gitId":"SiTingST"},"content":""},{"lineNumber":3,"author":{"gitId":"SiTingST"},"content":"import duke.tasklist.TaskList;"},{"lineNumber":4,"author":{"gitId":"SiTingST"},"content":"import org.junit.jupiter.api.Test;"},{"lineNumber":5,"author":{"gitId":"SiTingST"},"content":""},{"lineNumber":6,"author":{"gitId":"SiTingST"},"content":"import java.time.LocalDate;"},{"lineNumber":7,"author":{"gitId":"SiTingST"},"content":"import java.time.LocalTime;"},{"lineNumber":8,"author":{"gitId":"SiTingST"},"content":""},{"lineNumber":9,"author":{"gitId":"SiTingST"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;"},{"lineNumber":10,"author":{"gitId":"SiTingST"},"content":""},{"lineNumber":11,"author":{"gitId":"SiTingST"},"content":"public class TaskListTest {"},{"lineNumber":12,"author":{"gitId":"SiTingST"},"content":""},{"lineNumber":13,"author":{"gitId":"SiTingST"},"content":"    private static TaskList tl \u003d new TaskList();"},{"lineNumber":14,"author":{"gitId":"SiTingST"},"content":""},{"lineNumber":15,"author":{"gitId":"SiTingST"},"content":"    @Test"},{"lineNumber":16,"author":{"gitId":"SiTingST"},"content":"    public void addingTaskTest(){"},{"lineNumber":17,"author":{"gitId":"SiTingST"},"content":"        tl.addToDo(\"testing description\");"},{"lineNumber":18,"author":{"gitId":"SiTingST"},"content":"        tl.addDeadline(\"test deadline\", LocalDate.of(2021, 1,25),"},{"lineNumber":19,"author":{"gitId":"SiTingST"},"content":"                LocalTime.NOON);"},{"lineNumber":20,"author":{"gitId":"SiTingST"},"content":"        tl.addEvent(\"test event\", LocalDate.of(2021, 1,26),"},{"lineNumber":21,"author":{"gitId":"SiTingST"},"content":"                LocalTime.NOON, LocalTime.MIDNIGHT);"},{"lineNumber":22,"author":{"gitId":"SiTingST"},"content":""},{"lineNumber":23,"author":{"gitId":"SiTingST"},"content":"        assertEquals(\"[T][ ] testing description\",  tl.getTaskListArray().get(1).toString());"},{"lineNumber":24,"author":{"gitId":"SiTingST"},"content":"        assertEquals(\"[D][ ] test deadline (by: 2021-01-25 12:00)\",  tl.getTaskListArray().get(2).toString());"},{"lineNumber":25,"author":{"gitId":"SiTingST"},"content":"        assertEquals(\"[E][ ] test event(at: 2021-01-26 12:00 00:00)\",  tl.getTaskListArray().get(3).toString());"},{"lineNumber":26,"author":{"gitId":"SiTingST"},"content":"    }"},{"lineNumber":27,"author":{"gitId":"SiTingST"},"content":""},{"lineNumber":28,"author":{"gitId":"SiTingST"},"content":"    @Test"},{"lineNumber":29,"author":{"gitId":"SiTingST"},"content":"    public void markAsDoneTest(){"},{"lineNumber":30,"author":{"gitId":"SiTingST"},"content":"        tl.addToDo(\"do ip\");"},{"lineNumber":31,"author":{"gitId":"SiTingST"},"content":"        tl.markAsDone(0);"},{"lineNumber":32,"author":{"gitId":"SiTingST"},"content":"        assertEquals(\"[T][✘] do ip\", tl.getTaskListArray().get(0).toString());"},{"lineNumber":33,"author":{"gitId":"SiTingST"},"content":"    }"},{"lineNumber":34,"author":{"gitId":"SiTingST"},"content":""},{"lineNumber":35,"author":{"gitId":"SiTingST"},"content":"    @Test"},{"lineNumber":36,"author":{"gitId":"SiTingST"},"content":"    public void deleteTaskTest(){"},{"lineNumber":37,"author":{"gitId":"SiTingST"},"content":"        tl.deleteTask(0);"},{"lineNumber":38,"author":{"gitId":"SiTingST"},"content":"        assertEquals(\"[T][ ] testing description\", tl.getTaskListArray().get(0).toString());"},{"lineNumber":39,"author":{"gitId":"SiTingST"},"content":"    }"},{"lineNumber":40,"author":{"gitId":"SiTingST"},"content":""},{"lineNumber":41,"author":{"gitId":"SiTingST"},"content":"    }"}],"authorContributionMap":{"SiTingST":41}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"SiTingST"},"content":"todo st2334"},{"lineNumber":2,"author":{"gitId":"SiTingST"},"content":"todo read book"},{"lineNumber":3,"author":{"gitId":"SiTingST"},"content":"list"},{"lineNumber":4,"author":{"gitId":"SiTingST"},"content":"deadline return book /by Sunday"},{"lineNumber":5,"author":{"gitId":"SiTingST"},"content":"event project meeting /at Mon 2-4pm"},{"lineNumber":6,"author":{"gitId":"SiTingST"},"content":"deadline do homework /by no idea :-p"},{"lineNumber":7,"author":{"gitId":"SiTingST"},"content":"bye"}],"authorContributionMap":{"SiTingST":7}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF"},{"lineNumber":2,"author":{"gitId":"-"},"content":""},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin"},{"lineNumber":5,"author":{"gitId":"-"},"content":""},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run"},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT"},{"lineNumber":8,"author":{"gitId":"-"},"content":""},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder"},{"lineNumber":10,"author":{"gitId":"-"},"content":"javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\*.java"},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 ("},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1"},{"lineNumber":14,"author":{"gitId":"-"},"content":")"},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0"},{"lineNumber":16,"author":{"gitId":"-"},"content":""},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"},{"lineNumber":18,"author":{"gitId":"-"},"content":"java -classpath ..\\bin Duke \u003c input.txt \u003e ACTUAL.TXT"},{"lineNumber":19,"author":{"gitId":"-"},"content":""},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM compare the output to the expected output"},{"lineNumber":21,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT"},{"lineNumber":22,"author":{"gitId":"SiTingST"},"content":"timeout 60"}],"authorContributionMap":{"SiTingST":1,"-":21}}]
