[{"path":"README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"tashawan23"},"content":"# duke.Duke project template"},{"lineNumber":2,"author":{"gitId":"-"},"content":""},{"lineNumber":3,"author":{"gitId":"-"},"content":"This is a project template for a greenfield Java project. It\u0027s named after the Java mascot _Duke_. Given below are instructions on how to use it."},{"lineNumber":4,"author":{"gitId":"-"},"content":""},{"lineNumber":5,"author":{"gitId":"-"},"content":"## Setting up in Intellij"},{"lineNumber":6,"author":{"gitId":"-"},"content":""},{"lineNumber":7,"author":{"gitId":"-"},"content":"Prerequisites: JDK 11, update Intellij to the most recent version."},{"lineNumber":8,"author":{"gitId":"-"},"content":""},{"lineNumber":9,"author":{"gitId":"-"},"content":"1. Open Intellij (if you are not in the welcome screen, click `File` \u003e `Close Project` to close the existing project first)"},{"lineNumber":10,"author":{"gitId":"-"},"content":"1. Open the project into Intellij as follows:"},{"lineNumber":11,"author":{"gitId":"-"},"content":"   1. Click `Open`."},{"lineNumber":12,"author":{"gitId":"-"},"content":"   1. Select the project directory, and click `OK`."},{"lineNumber":13,"author":{"gitId":"-"},"content":"   1. If there are any further prompts, accept the defaults."},{"lineNumber":14,"author":{"gitId":"-"},"content":"1. Configure the project to use **JDK 11** (not other versions) as explained in [here](https://www.jetbrains.com/help/idea/sdk.html#set-up-jdk)."},{"lineNumber":15,"author":{"gitId":"tashawan23"},"content":"1. After that, locate the `src/main/java/duke.Duke.java` file, right-click it, and choose `Run duke.Duke.main()`. If the setup is correct, you should see something like the below:"},{"lineNumber":16,"author":{"gitId":"-"},"content":"   ```"},{"lineNumber":17,"author":{"gitId":"-"},"content":"   Hello from"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    ____        _        "},{"lineNumber":19,"author":{"gitId":"-"},"content":"   |  _ \\ _   _| | _____ "},{"lineNumber":20,"author":{"gitId":"-"},"content":"   | | | | | | | |/ / _ \\"},{"lineNumber":21,"author":{"gitId":"-"},"content":"   | |_| | |_| |   \u003c  __/"},{"lineNumber":22,"author":{"gitId":"-"},"content":"   |____/ \\__,_|_|\\_\\___|"},{"lineNumber":23,"author":{"gitId":"-"},"content":"   ```"}],"authorContributionMap":{"tashawan23":2,"-":21}},{"path":"src/data/duke.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"tashawan23"},"content":"T : 1 : Buy book"},{"lineNumber":2,"author":{"gitId":"tashawan23"},"content":"E : 0 : meeting : 2021-01-29"},{"lineNumber":3,"author":{"gitId":"tashawan23"},"content":"D : 1 : Homework : 2021-02-03"},{"lineNumber":4,"author":{"gitId":"tashawan23"},"content":"T : 1 : return book"},{"lineNumber":5,"author":{"gitId":"tashawan23"},"content":"D : 1 : Quiz : 2021-01-28"}],"authorContributionMap":{"tashawan23":5}},{"path":"src/main/java/duke/Commands/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tashawan23"},"content":"package duke.Commands;"},{"lineNumber":2,"author":{"gitId":"tashawan23"},"content":""},{"lineNumber":3,"author":{"gitId":"tashawan23"},"content":"import duke.Storage;"},{"lineNumber":4,"author":{"gitId":"tashawan23"},"content":"import duke.TaskList;"},{"lineNumber":5,"author":{"gitId":"tashawan23"},"content":"import duke.Ui;"},{"lineNumber":6,"author":{"gitId":"tashawan23"},"content":""},{"lineNumber":7,"author":{"gitId":"tashawan23"},"content":""},{"lineNumber":8,"author":{"gitId":"tashawan23"},"content":"public abstract class Command {"},{"lineNumber":9,"author":{"gitId":"tashawan23"},"content":"    int targetIndex;"},{"lineNumber":10,"author":{"gitId":"tashawan23"},"content":""},{"lineNumber":11,"author":{"gitId":"tashawan23"},"content":"    public Command(int targetIndex) {"},{"lineNumber":12,"author":{"gitId":"tashawan23"},"content":"        this.targetIndex \u003d targetIndex;"},{"lineNumber":13,"author":{"gitId":"tashawan23"},"content":"    }"},{"lineNumber":14,"author":{"gitId":"tashawan23"},"content":""},{"lineNumber":15,"author":{"gitId":"tashawan23"},"content":"    public abstract boolean isExit();"},{"lineNumber":16,"author":{"gitId":"tashawan23"},"content":"    public abstract void execute(Ui ui, TaskList taskList, Storage storage);"},{"lineNumber":17,"author":{"gitId":"tashawan23"},"content":""},{"lineNumber":18,"author":{"gitId":"tashawan23"},"content":"}"}],"authorContributionMap":{"tashawan23":18}},{"path":"src/main/java/duke/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tashawan23"},"content":"package duke;"},{"lineNumber":2,"author":{"gitId":"tashawan23"},"content":""},{"lineNumber":3,"author":{"gitId":"tashawan23"},"content":"import duke.Exceptions.DukeExceptions;"},{"lineNumber":4,"author":{"gitId":"tashawan23"},"content":"import duke.Exceptions.MissingInputException;"},{"lineNumber":5,"author":{"gitId":"tashawan23"},"content":"import duke.Exceptions.UnclearInputException;"},{"lineNumber":6,"author":{"gitId":"tashawan23"},"content":"import duke.Tasks.Deadline;"},{"lineNumber":7,"author":{"gitId":"tashawan23"},"content":"import duke.Tasks.Event;"},{"lineNumber":8,"author":{"gitId":"tashawan23"},"content":"import duke.Tasks.Task;"},{"lineNumber":9,"author":{"gitId":"tashawan23"},"content":"import duke.Tasks.Todo;"},{"lineNumber":10,"author":{"gitId":"tashawan23"},"content":""},{"lineNumber":11,"author":{"gitId":"tashawan23"},"content":"public class Duke {"},{"lineNumber":12,"author":{"gitId":"tashawan23"},"content":""},{"lineNumber":13,"author":{"gitId":"tashawan23"},"content":"    /** Storage instance to read and write file */"},{"lineNumber":14,"author":{"gitId":"tashawan23"},"content":"    private Storage storage;"},{"lineNumber":15,"author":{"gitId":"tashawan23"},"content":""},{"lineNumber":16,"author":{"gitId":"tashawan23"},"content":"    /** TaskList instance to store and handle tasks */"},{"lineNumber":17,"author":{"gitId":"tashawan23"},"content":"    private TaskList tasks;"},{"lineNumber":18,"author":{"gitId":"tashawan23"},"content":""},{"lineNumber":19,"author":{"gitId":"tashawan23"},"content":"    /** Ui instance to interact with user */"},{"lineNumber":20,"author":{"gitId":"tashawan23"},"content":"    private Ui ui;"},{"lineNumber":21,"author":{"gitId":"tashawan23"},"content":""},{"lineNumber":22,"author":{"gitId":"tashawan23"},"content":"    public Duke(String path) {"},{"lineNumber":23,"author":{"gitId":"tashawan23"},"content":"        ui \u003d new Ui();"},{"lineNumber":24,"author":{"gitId":"tashawan23"},"content":"        tasks \u003d new TaskList();"},{"lineNumber":25,"author":{"gitId":"tashawan23"},"content":"        storage \u003d new Storage(path, tasks);"},{"lineNumber":26,"author":{"gitId":"tashawan23"},"content":"    }"},{"lineNumber":27,"author":{"gitId":"tashawan23"},"content":""},{"lineNumber":28,"author":{"gitId":"tashawan23"},"content":"    /** Runs the program and handles each command from user */"},{"lineNumber":29,"author":{"gitId":"tashawan23"},"content":"    public void run() {"},{"lineNumber":30,"author":{"gitId":"tashawan23"},"content":"        ui.greetUser();"},{"lineNumber":31,"author":{"gitId":"tashawan23"},"content":"        Parser commandparser \u003d new Parser();"},{"lineNumber":32,"author":{"gitId":"tashawan23"},"content":"        boolean readOn \u003d true;"},{"lineNumber":33,"author":{"gitId":"tashawan23"},"content":"        while (readOn) {"},{"lineNumber":34,"author":{"gitId":"tashawan23"},"content":"            try {"},{"lineNumber":35,"author":{"gitId":"tashawan23"},"content":"                String command \u003d ui.getCommand();"},{"lineNumber":36,"author":{"gitId":"tashawan23"},"content":"                commandparser.parse(command);"},{"lineNumber":37,"author":{"gitId":"tashawan23"},"content":"                String[] desc \u003d commandparser.getDesc(command);"},{"lineNumber":38,"author":{"gitId":"tashawan23"},"content":"                String action \u003d desc[0];"},{"lineNumber":39,"author":{"gitId":"tashawan23"},"content":"                switch (action) {"},{"lineNumber":40,"author":{"gitId":"tashawan23"},"content":"                    case \"bye\":"},{"lineNumber":41,"author":{"gitId":"tashawan23"},"content":"                        readOn \u003d false;"},{"lineNumber":42,"author":{"gitId":"tashawan23"},"content":"                        break;"},{"lineNumber":43,"author":{"gitId":"tashawan23"},"content":"                    case \"list\":"},{"lineNumber":44,"author":{"gitId":"tashawan23"},"content":"                        ui.printList(tasks.taskList);"},{"lineNumber":45,"author":{"gitId":"tashawan23"},"content":"                        break;"},{"lineNumber":46,"author":{"gitId":"tashawan23"},"content":"                    case \"done\":"},{"lineNumber":47,"author":{"gitId":"tashawan23"},"content":"                        int n \u003d Integer.parseInt(desc[1]);"},{"lineNumber":48,"author":{"gitId":"tashawan23"},"content":"                        Task t \u003d tasks.getTask(n);"},{"lineNumber":49,"author":{"gitId":"tashawan23"},"content":"                        tasks.markComplete(n);"},{"lineNumber":50,"author":{"gitId":"tashawan23"},"content":"                        ui.checkedTask(t);"},{"lineNumber":51,"author":{"gitId":"tashawan23"},"content":"                        break;"},{"lineNumber":52,"author":{"gitId":"tashawan23"},"content":"                    case \"todo\":"},{"lineNumber":53,"author":{"gitId":"tashawan23"},"content":"                        Task todo \u003d new Todo(desc[1]);"},{"lineNumber":54,"author":{"gitId":"tashawan23"},"content":"                        tasks.storeTask(todo);"},{"lineNumber":55,"author":{"gitId":"tashawan23"},"content":"                        ui.addedTask(tasks.taskList, todo);"},{"lineNumber":56,"author":{"gitId":"tashawan23"},"content":"                        break;"},{"lineNumber":57,"author":{"gitId":"tashawan23"},"content":"                    case \"event\":"},{"lineNumber":58,"author":{"gitId":"tashawan23"},"content":"                        ui.requestDate();"},{"lineNumber":59,"author":{"gitId":"tashawan23"},"content":"                        String date \u003d ui.getDate();"},{"lineNumber":60,"author":{"gitId":"tashawan23"},"content":"                        Task event \u003d new Event(desc[1], date);"},{"lineNumber":61,"author":{"gitId":"tashawan23"},"content":"                        tasks.storeTask(event);"},{"lineNumber":62,"author":{"gitId":"tashawan23"},"content":"                        ui.addedTask(tasks.taskList, event);"},{"lineNumber":63,"author":{"gitId":"tashawan23"},"content":"                        break;"},{"lineNumber":64,"author":{"gitId":"tashawan23"},"content":"                    case \"deadline\":"},{"lineNumber":65,"author":{"gitId":"tashawan23"},"content":"                        ui.requestDeadline();"},{"lineNumber":66,"author":{"gitId":"tashawan23"},"content":"                        String due \u003d ui.getDate();"},{"lineNumber":67,"author":{"gitId":"tashawan23"},"content":"                        Task deadline \u003d new Deadline(desc[1], due);"},{"lineNumber":68,"author":{"gitId":"tashawan23"},"content":"                        tasks.storeTask(deadline);"},{"lineNumber":69,"author":{"gitId":"tashawan23"},"content":"                        ui.addedTask(tasks.taskList, deadline);"},{"lineNumber":70,"author":{"gitId":"tashawan23"},"content":"                        break;"},{"lineNumber":71,"author":{"gitId":"tashawan23"},"content":"                    case \"delete\":"},{"lineNumber":72,"author":{"gitId":"tashawan23"},"content":"                        Task task \u003d tasks.getTask(Integer.parseInt(desc[1]));"},{"lineNumber":73,"author":{"gitId":"tashawan23"},"content":"                        tasks.deleteTask(Integer.parseInt(desc[1]));"},{"lineNumber":74,"author":{"gitId":"tashawan23"},"content":"                        ui.deletedTask(tasks.taskList, task);"},{"lineNumber":75,"author":{"gitId":"tashawan23"},"content":"                        break;"},{"lineNumber":76,"author":{"gitId":"tashawan23"},"content":"                    case \"find\":"},{"lineNumber":77,"author":{"gitId":"tashawan23"},"content":"                        tasks.findTasks(desc[1]);"},{"lineNumber":78,"author":{"gitId":"tashawan23"},"content":"                        break;"},{"lineNumber":79,"author":{"gitId":"tashawan23"},"content":"                    default:"},{"lineNumber":80,"author":{"gitId":"tashawan23"},"content":"                        throw new UnclearInputException();"},{"lineNumber":81,"author":{"gitId":"tashawan23"},"content":"                }"},{"lineNumber":82,"author":{"gitId":"tashawan23"},"content":"            } catch (MissingInputException e) {"},{"lineNumber":83,"author":{"gitId":"tashawan23"},"content":"                System.out.println((e.getMessage()));"},{"lineNumber":84,"author":{"gitId":"tashawan23"},"content":"            } catch (UnclearInputException e) {"},{"lineNumber":85,"author":{"gitId":"tashawan23"},"content":"                System.out.println((e.getMessage()));"},{"lineNumber":86,"author":{"gitId":"tashawan23"},"content":"            } catch (DukeExceptions e) {"},{"lineNumber":87,"author":{"gitId":"tashawan23"},"content":"                System.out.println((e.getMessage()));"},{"lineNumber":88,"author":{"gitId":"tashawan23"},"content":"            }"},{"lineNumber":89,"author":{"gitId":"tashawan23"},"content":"        }"},{"lineNumber":90,"author":{"gitId":"tashawan23"},"content":"        ui.sayGoodbye();"},{"lineNumber":91,"author":{"gitId":"tashawan23"},"content":"        storage.write(tasks);"},{"lineNumber":92,"author":{"gitId":"tashawan23"},"content":"    }"},{"lineNumber":93,"author":{"gitId":"tashawan23"},"content":"    public static void main(String[] args) {"},{"lineNumber":94,"author":{"gitId":"tashawan23"},"content":"        new Duke(\"src/data/duke.txt\").run();"},{"lineNumber":95,"author":{"gitId":"tashawan23"},"content":"    }"},{"lineNumber":96,"author":{"gitId":"tashawan23"},"content":"}"},{"lineNumber":97,"author":{"gitId":"tashawan23"},"content":""}],"authorContributionMap":{"tashawan23":97}},{"path":"src/main/java/duke/Exceptions/DukeExceptions.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tashawan23"},"content":"package duke.Exceptions;"},{"lineNumber":2,"author":{"gitId":"tashawan23"},"content":""},{"lineNumber":3,"author":{"gitId":"tashawan23"},"content":"public class DukeExceptions extends Exception {"},{"lineNumber":4,"author":{"gitId":"tashawan23"},"content":"    public DukeExceptions(String msg) {"},{"lineNumber":5,"author":{"gitId":"tashawan23"},"content":"        super(msg);"},{"lineNumber":6,"author":{"gitId":"tashawan23"},"content":"    }"},{"lineNumber":7,"author":{"gitId":"tashawan23"},"content":""},{"lineNumber":8,"author":{"gitId":"tashawan23"},"content":"}"}],"authorContributionMap":{"tashawan23":8}},{"path":"src/main/java/duke/Exceptions/MissingInputException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tashawan23"},"content":"package duke.Exceptions;"},{"lineNumber":2,"author":{"gitId":"tashawan23"},"content":""},{"lineNumber":3,"author":{"gitId":"tashawan23"},"content":"public class MissingInputException extends DukeExceptions {"},{"lineNumber":4,"author":{"gitId":"tashawan23"},"content":""},{"lineNumber":5,"author":{"gitId":"tashawan23"},"content":"    public MissingInputException(String cat) {"},{"lineNumber":6,"author":{"gitId":"tashawan23"},"content":"        super(\"OOPS!!! The description of an \" + cat +  \" cannot be empty.\");"},{"lineNumber":7,"author":{"gitId":"tashawan23"},"content":"    }"},{"lineNumber":8,"author":{"gitId":"tashawan23"},"content":"}"}],"authorContributionMap":{"tashawan23":8}},{"path":"src/main/java/duke/Exceptions/MissingTaskException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tashawan23"},"content":"package duke.Exceptions;"},{"lineNumber":2,"author":{"gitId":"tashawan23"},"content":""},{"lineNumber":3,"author":{"gitId":"tashawan23"},"content":"public class MissingTaskException extends DukeExceptions {"},{"lineNumber":4,"author":{"gitId":"tashawan23"},"content":""},{"lineNumber":5,"author":{"gitId":"tashawan23"},"content":"    public MissingTaskException () {"},{"lineNumber":6,"author":{"gitId":"tashawan23"},"content":"        super(\"OOPS!!! The task to be marked completed/ deleted cannot be empty.\");"},{"lineNumber":7,"author":{"gitId":"tashawan23"},"content":"    }"},{"lineNumber":8,"author":{"gitId":"tashawan23"},"content":"}"}],"authorContributionMap":{"tashawan23":8}},{"path":"src/main/java/duke/Exceptions/UnclearInputException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tashawan23"},"content":"package duke.Exceptions;"},{"lineNumber":2,"author":{"gitId":"tashawan23"},"content":""},{"lineNumber":3,"author":{"gitId":"tashawan23"},"content":"public class UnclearInputException extends DukeExceptions {"},{"lineNumber":4,"author":{"gitId":"tashawan23"},"content":""},{"lineNumber":5,"author":{"gitId":"tashawan23"},"content":"    public UnclearInputException() {"},{"lineNumber":6,"author":{"gitId":"tashawan23"},"content":"        super(\"OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\");"},{"lineNumber":7,"author":{"gitId":"tashawan23"},"content":"    }"},{"lineNumber":8,"author":{"gitId":"tashawan23"},"content":"}"}],"authorContributionMap":{"tashawan23":8}},{"path":"src/main/java/duke/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tashawan23"},"content":"package duke;"},{"lineNumber":2,"author":{"gitId":"tashawan23"},"content":""},{"lineNumber":3,"author":{"gitId":"tashawan23"},"content":"import duke.Exceptions.MissingInputException;"},{"lineNumber":4,"author":{"gitId":"tashawan23"},"content":"import duke.Exceptions.MissingTaskException;"},{"lineNumber":5,"author":{"gitId":"tashawan23"},"content":"import duke.Exceptions.UnclearInputException;"},{"lineNumber":6,"author":{"gitId":"tashawan23"},"content":""},{"lineNumber":7,"author":{"gitId":"tashawan23"},"content":"public class Parser {"},{"lineNumber":8,"author":{"gitId":"tashawan23"},"content":""},{"lineNumber":9,"author":{"gitId":"tashawan23"},"content":"    /** Array to store input from user that is split by empty space */"},{"lineNumber":10,"author":{"gitId":"tashawan23"},"content":"    private String[] arr;"},{"lineNumber":11,"author":{"gitId":"tashawan23"},"content":""},{"lineNumber":12,"author":{"gitId":"tashawan23"},"content":"    public Parser() {"},{"lineNumber":13,"author":{"gitId":"tashawan23"},"content":"    }"},{"lineNumber":14,"author":{"gitId":"tashawan23"},"content":""},{"lineNumber":15,"author":{"gitId":"tashawan23"},"content":"    /**"},{"lineNumber":16,"author":{"gitId":"tashawan23"},"content":"     * Splits user input and checks for exceptions"},{"lineNumber":17,"author":{"gitId":"tashawan23"},"content":"     *"},{"lineNumber":18,"author":{"gitId":"tashawan23"},"content":"     * @throws MissingTaskException if chosen task is not specified"},{"lineNumber":19,"author":{"gitId":"tashawan23"},"content":"     * @throws MissingInputException if description of task is not provided"},{"lineNumber":20,"author":{"gitId":"tashawan23"},"content":"     * */"},{"lineNumber":21,"author":{"gitId":"tashawan23"},"content":"    public void parse(String cmd) throws MissingInputException, MissingTaskException {"},{"lineNumber":22,"author":{"gitId":"tashawan23"},"content":"        arr \u003d cmd.split(\" \", 2);"},{"lineNumber":23,"author":{"gitId":"tashawan23"},"content":"        String action \u003d arr[0];"},{"lineNumber":24,"author":{"gitId":"tashawan23"},"content":"        if(action.equals(\"deadline\") || action.equals(\"event\") || action.equals(\"todo\")) {"},{"lineNumber":25,"author":{"gitId":"tashawan23"},"content":"            if (arr.length \u003c\u003d 1) {"},{"lineNumber":26,"author":{"gitId":"tashawan23"},"content":"                throw new MissingInputException(action);"},{"lineNumber":27,"author":{"gitId":"tashawan23"},"content":"            }"},{"lineNumber":28,"author":{"gitId":"tashawan23"},"content":"        } else if(action.equals(\"done\") || action.equals(\"delete\")) {"},{"lineNumber":29,"author":{"gitId":"tashawan23"},"content":"            if (arr.length \u003c\u003d 1) {"},{"lineNumber":30,"author":{"gitId":"tashawan23"},"content":"                throw new MissingTaskException();"},{"lineNumber":31,"author":{"gitId":"tashawan23"},"content":"            }"},{"lineNumber":32,"author":{"gitId":"tashawan23"},"content":"        }"},{"lineNumber":33,"author":{"gitId":"tashawan23"},"content":"    }"},{"lineNumber":34,"author":{"gitId":"tashawan23"},"content":""},{"lineNumber":35,"author":{"gitId":"tashawan23"},"content":"    /**"},{"lineNumber":36,"author":{"gitId":"tashawan23"},"content":"     * Get command from user input"},{"lineNumber":37,"author":{"gitId":"tashawan23"},"content":"     *"},{"lineNumber":38,"author":{"gitId":"tashawan23"},"content":"     * @param user input"},{"lineNumber":39,"author":{"gitId":"tashawan23"},"content":"     * @return a string"},{"lineNumber":40,"author":{"gitId":"tashawan23"},"content":"     * */"},{"lineNumber":41,"author":{"gitId":"tashawan23"},"content":"    public String[] getDesc(String cmd) {"},{"lineNumber":42,"author":{"gitId":"tashawan23"},"content":"        return cmd.split(\" \", 2);"},{"lineNumber":43,"author":{"gitId":"tashawan23"},"content":"    }"},{"lineNumber":44,"author":{"gitId":"tashawan23"},"content":""},{"lineNumber":45,"author":{"gitId":"tashawan23"},"content":"}"}],"authorContributionMap":{"tashawan23":45}},{"path":"src/main/java/duke/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tashawan23"},"content":"package duke;"},{"lineNumber":2,"author":{"gitId":"tashawan23"},"content":""},{"lineNumber":3,"author":{"gitId":"tashawan23"},"content":"import duke.Tasks.Deadline;"},{"lineNumber":4,"author":{"gitId":"tashawan23"},"content":"import duke.Tasks.Event;"},{"lineNumber":5,"author":{"gitId":"tashawan23"},"content":"import duke.Tasks.Task;"},{"lineNumber":6,"author":{"gitId":"tashawan23"},"content":"import duke.Tasks.Todo;"},{"lineNumber":7,"author":{"gitId":"tashawan23"},"content":""},{"lineNumber":8,"author":{"gitId":"tashawan23"},"content":"import java.io.File;"},{"lineNumber":9,"author":{"gitId":"tashawan23"},"content":"import java.io.FileWriter;"},{"lineNumber":10,"author":{"gitId":"tashawan23"},"content":"import java.io.FileNotFoundException;"},{"lineNumber":11,"author":{"gitId":"tashawan23"},"content":"import java.io.IOException;"},{"lineNumber":12,"author":{"gitId":"tashawan23"},"content":"import java.util.ArrayList;"},{"lineNumber":13,"author":{"gitId":"tashawan23"},"content":"import java.util.Scanner;"},{"lineNumber":14,"author":{"gitId":"tashawan23"},"content":""},{"lineNumber":15,"author":{"gitId":"tashawan23"},"content":"public class Storage {"},{"lineNumber":16,"author":{"gitId":"tashawan23"},"content":""},{"lineNumber":17,"author":{"gitId":"tashawan23"},"content":"    /** Filewriter instance to write to file */"},{"lineNumber":18,"author":{"gitId":"tashawan23"},"content":"    private FileWriter writer;"},{"lineNumber":19,"author":{"gitId":"tashawan23"},"content":""},{"lineNumber":20,"author":{"gitId":"tashawan23"},"content":"    /** File instance to store data */"},{"lineNumber":21,"author":{"gitId":"tashawan23"},"content":"    private File dataFile;"},{"lineNumber":22,"author":{"gitId":"tashawan23"},"content":""},{"lineNumber":23,"author":{"gitId":"tashawan23"},"content":"    /** Tasklist instance to store and handle tasks */"},{"lineNumber":24,"author":{"gitId":"tashawan23"},"content":"    public TaskList tasks;"},{"lineNumber":25,"author":{"gitId":"tashawan23"},"content":""},{"lineNumber":26,"author":{"gitId":"tashawan23"},"content":"    public Storage(String path, TaskList tasks) {"},{"lineNumber":27,"author":{"gitId":"tashawan23"},"content":"        dataFile \u003d new File(path);"},{"lineNumber":28,"author":{"gitId":"tashawan23"},"content":"        try {"},{"lineNumber":29,"author":{"gitId":"tashawan23"},"content":"            if (!dataFile.exists()) {"},{"lineNumber":30,"author":{"gitId":"tashawan23"},"content":"                File parent \u003d dataFile.getParentFile();"},{"lineNumber":31,"author":{"gitId":"tashawan23"},"content":"                parent.mkdir();"},{"lineNumber":32,"author":{"gitId":"tashawan23"},"content":"                dataFile.createNewFile();"},{"lineNumber":33,"author":{"gitId":"tashawan23"},"content":"            } else {"},{"lineNumber":34,"author":{"gitId":"tashawan23"},"content":"                fileToList(tasks);"},{"lineNumber":35,"author":{"gitId":"tashawan23"},"content":"            }"},{"lineNumber":36,"author":{"gitId":"tashawan23"},"content":"        } catch (IOException e) {"},{"lineNumber":37,"author":{"gitId":"tashawan23"},"content":"            System.out.println((e.getMessage()));"},{"lineNumber":38,"author":{"gitId":"tashawan23"},"content":"        }"},{"lineNumber":39,"author":{"gitId":"tashawan23"},"content":"    }"},{"lineNumber":40,"author":{"gitId":"tashawan23"},"content":""},{"lineNumber":41,"author":{"gitId":"tashawan23"},"content":"    /**"},{"lineNumber":42,"author":{"gitId":"tashawan23"},"content":"     * Reads a file and stores tasks in TaskList"},{"lineNumber":43,"author":{"gitId":"tashawan23"},"content":"     *"},{"lineNumber":44,"author":{"gitId":"tashawan23"},"content":"     * @param TaskList to store tasks"},{"lineNumber":45,"author":{"gitId":"tashawan23"},"content":"     * */"},{"lineNumber":46,"author":{"gitId":"tashawan23"},"content":"    public void fileToList(TaskList taskList) {"},{"lineNumber":47,"author":{"gitId":"tashawan23"},"content":"        try {"},{"lineNumber":48,"author":{"gitId":"tashawan23"},"content":"            Scanner reader \u003d new Scanner(dataFile);"},{"lineNumber":49,"author":{"gitId":"tashawan23"},"content":"            while (reader.hasNextLine()) {"},{"lineNumber":50,"author":{"gitId":"tashawan23"},"content":"                String data \u003d reader.nextLine();"},{"lineNumber":51,"author":{"gitId":"tashawan23"},"content":"                String arr[] \u003d data.split(\" : \", 4);"},{"lineNumber":52,"author":{"gitId":"tashawan23"},"content":"                String cat \u003d arr[0];"},{"lineNumber":53,"author":{"gitId":"tashawan23"},"content":"                String completed \u003d arr[1];"},{"lineNumber":54,"author":{"gitId":"tashawan23"},"content":"                String des \u003d arr[2];"},{"lineNumber":55,"author":{"gitId":"tashawan23"},"content":"                if (cat.equals(\"E\")) {"},{"lineNumber":56,"author":{"gitId":"tashawan23"},"content":"                    String date \u003d arr[3];"},{"lineNumber":57,"author":{"gitId":"tashawan23"},"content":"                    Event event \u003d new Event(des, date);"},{"lineNumber":58,"author":{"gitId":"tashawan23"},"content":"                    if (completed \u003d\u003d \"1\") {"},{"lineNumber":59,"author":{"gitId":"tashawan23"},"content":"                        event.checkTask();"},{"lineNumber":60,"author":{"gitId":"tashawan23"},"content":"                    }"},{"lineNumber":61,"author":{"gitId":"tashawan23"},"content":"                    taskList.storeTask(event);"},{"lineNumber":62,"author":{"gitId":"tashawan23"},"content":"                } else if (cat.equals(\"D\")) {"},{"lineNumber":63,"author":{"gitId":"tashawan23"},"content":"                    String date \u003d arr[3];"},{"lineNumber":64,"author":{"gitId":"tashawan23"},"content":"                    Deadline deadline \u003d new Deadline(des, date);"},{"lineNumber":65,"author":{"gitId":"tashawan23"},"content":"                    if (completed.equals(\"1\")) {"},{"lineNumber":66,"author":{"gitId":"tashawan23"},"content":"                        deadline.checkTask();"},{"lineNumber":67,"author":{"gitId":"tashawan23"},"content":"                    }"},{"lineNumber":68,"author":{"gitId":"tashawan23"},"content":"                    taskList.storeTask(deadline);"},{"lineNumber":69,"author":{"gitId":"tashawan23"},"content":"                } else {"},{"lineNumber":70,"author":{"gitId":"tashawan23"},"content":"                    Todo todo \u003d new Todo(des);"},{"lineNumber":71,"author":{"gitId":"tashawan23"},"content":"                    if (completed.equals(\"1\")) {"},{"lineNumber":72,"author":{"gitId":"tashawan23"},"content":"                        todo.checkTask();"},{"lineNumber":73,"author":{"gitId":"tashawan23"},"content":"                    }"},{"lineNumber":74,"author":{"gitId":"tashawan23"},"content":"                    taskList.storeTask(todo);"},{"lineNumber":75,"author":{"gitId":"tashawan23"},"content":"                }"},{"lineNumber":76,"author":{"gitId":"tashawan23"},"content":"            }"},{"lineNumber":77,"author":{"gitId":"tashawan23"},"content":"            reader.close();"},{"lineNumber":78,"author":{"gitId":"tashawan23"},"content":"        } catch (FileNotFoundException e) {"},{"lineNumber":79,"author":{"gitId":"tashawan23"},"content":"            System.out.println(e.getMessage());"},{"lineNumber":80,"author":{"gitId":"tashawan23"},"content":"            e.printStackTrace();"},{"lineNumber":81,"author":{"gitId":"tashawan23"},"content":"        }"},{"lineNumber":82,"author":{"gitId":"tashawan23"},"content":"    }"},{"lineNumber":83,"author":{"gitId":"tashawan23"},"content":""},{"lineNumber":84,"author":{"gitId":"tashawan23"},"content":"    /**"},{"lineNumber":85,"author":{"gitId":"tashawan23"},"content":"     * Goes through TaskList and parses task into string"},{"lineNumber":86,"author":{"gitId":"tashawan23"},"content":"     *"},{"lineNumber":87,"author":{"gitId":"tashawan23"},"content":"     * @param TaskList"},{"lineNumber":88,"author":{"gitId":"tashawan23"},"content":"     * @return String of tasks"},{"lineNumber":89,"author":{"gitId":"tashawan23"},"content":"     * */"},{"lineNumber":90,"author":{"gitId":"tashawan23"},"content":"    public String taskListToString(TaskList tasks) {"},{"lineNumber":91,"author":{"gitId":"tashawan23"},"content":"        String res \u003d \"\";"},{"lineNumber":92,"author":{"gitId":"tashawan23"},"content":"        ArrayList\u003cTask\u003e taskList \u003d tasks.taskList;"},{"lineNumber":93,"author":{"gitId":"tashawan23"},"content":"        for(Task task : taskList) {"},{"lineNumber":94,"author":{"gitId":"tashawan23"},"content":"            char cat \u003d task.getCat();"},{"lineNumber":95,"author":{"gitId":"tashawan23"},"content":"            String name \u003d task.getName();"},{"lineNumber":96,"author":{"gitId":"tashawan23"},"content":"            int checked;"},{"lineNumber":97,"author":{"gitId":"tashawan23"},"content":"            if (task.getCompleted()) {"},{"lineNumber":98,"author":{"gitId":"tashawan23"},"content":"                checked \u003d 1;"},{"lineNumber":99,"author":{"gitId":"tashawan23"},"content":"            } else {"},{"lineNumber":100,"author":{"gitId":"tashawan23"},"content":"                checked \u003d 0;"},{"lineNumber":101,"author":{"gitId":"tashawan23"},"content":"            }"},{"lineNumber":102,"author":{"gitId":"tashawan23"},"content":"            if (cat \u003d\u003d \u0027E\u0027) {"},{"lineNumber":103,"author":{"gitId":"tashawan23"},"content":"                Event event \u003d (Event) task;"},{"lineNumber":104,"author":{"gitId":"tashawan23"},"content":"                String date \u003d event.getTime();"},{"lineNumber":105,"author":{"gitId":"tashawan23"},"content":"                res +\u003d cat + \" : \" + checked + \" : \" + name + \" : \" + date + \"\\n\";"},{"lineNumber":106,"author":{"gitId":"tashawan23"},"content":"            } else if (cat \u003d\u003d \u0027D\u0027) {"},{"lineNumber":107,"author":{"gitId":"tashawan23"},"content":"                Deadline deadline \u003d (Deadline) task;"},{"lineNumber":108,"author":{"gitId":"tashawan23"},"content":"                String date \u003d deadline.getDeadline();"},{"lineNumber":109,"author":{"gitId":"tashawan23"},"content":"                res +\u003d cat + \" : \" + checked + \" : \" + name + \" : \" + date + \"\\n\";"},{"lineNumber":110,"author":{"gitId":"tashawan23"},"content":"            } else {"},{"lineNumber":111,"author":{"gitId":"tashawan23"},"content":"                res +\u003d cat + \" : \" + checked + \" : \" + name + \"\\n\";"},{"lineNumber":112,"author":{"gitId":"tashawan23"},"content":"            }"},{"lineNumber":113,"author":{"gitId":"tashawan23"},"content":"        }"},{"lineNumber":114,"author":{"gitId":"tashawan23"},"content":"        return res;"},{"lineNumber":115,"author":{"gitId":"tashawan23"},"content":"    }"},{"lineNumber":116,"author":{"gitId":"tashawan23"},"content":""},{"lineNumber":117,"author":{"gitId":"tashawan23"},"content":"    /** Writes the tasks in TaskList to file"},{"lineNumber":118,"author":{"gitId":"tashawan23"},"content":"     *"},{"lineNumber":119,"author":{"gitId":"tashawan23"},"content":"     * @param TaskList"},{"lineNumber":120,"author":{"gitId":"tashawan23"},"content":"     * @throws IOException if there is an IO exception"},{"lineNumber":121,"author":{"gitId":"tashawan23"},"content":"     * */"},{"lineNumber":122,"author":{"gitId":"tashawan23"},"content":"    public void write(TaskList taskList) {"},{"lineNumber":123,"author":{"gitId":"tashawan23"},"content":"        try {"},{"lineNumber":124,"author":{"gitId":"tashawan23"},"content":"            writer \u003d new FileWriter(dataFile);"},{"lineNumber":125,"author":{"gitId":"tashawan23"},"content":"            writer.write(taskListToString(taskList));"},{"lineNumber":126,"author":{"gitId":"tashawan23"},"content":"            writer.close();"},{"lineNumber":127,"author":{"gitId":"tashawan23"},"content":"        } catch  (IOException e) {"},{"lineNumber":128,"author":{"gitId":"tashawan23"},"content":"            System.out.println((e.getMessage()));"},{"lineNumber":129,"author":{"gitId":"tashawan23"},"content":"        }"},{"lineNumber":130,"author":{"gitId":"tashawan23"},"content":"    }"},{"lineNumber":131,"author":{"gitId":"tashawan23"},"content":""},{"lineNumber":132,"author":{"gitId":"tashawan23"},"content":"}"}],"authorContributionMap":{"tashawan23":132}},{"path":"src/main/java/duke/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tashawan23"},"content":"package duke;"},{"lineNumber":2,"author":{"gitId":"tashawan23"},"content":""},{"lineNumber":3,"author":{"gitId":"tashawan23"},"content":"import duke.Tasks.Task;"},{"lineNumber":4,"author":{"gitId":"tashawan23"},"content":""},{"lineNumber":5,"author":{"gitId":"tashawan23"},"content":"import java.lang.reflect.Array;"},{"lineNumber":6,"author":{"gitId":"tashawan23"},"content":"import java.util.ArrayList;"},{"lineNumber":7,"author":{"gitId":"tashawan23"},"content":""},{"lineNumber":8,"author":{"gitId":"tashawan23"},"content":"public class TaskList {"},{"lineNumber":9,"author":{"gitId":"tashawan23"},"content":"    /** Array list of tasks */"},{"lineNumber":10,"author":{"gitId":"tashawan23"},"content":"    public ArrayList\u003cTask\u003e taskList;"},{"lineNumber":11,"author":{"gitId":"tashawan23"},"content":""},{"lineNumber":12,"author":{"gitId":"tashawan23"},"content":"    public TaskList() {"},{"lineNumber":13,"author":{"gitId":"tashawan23"},"content":"        taskList \u003d new ArrayList\u003c\u003e();"},{"lineNumber":14,"author":{"gitId":"tashawan23"},"content":"    }"},{"lineNumber":15,"author":{"gitId":"tashawan23"},"content":""},{"lineNumber":16,"author":{"gitId":"tashawan23"},"content":"    /** Retrieves task from TaskList and marks"},{"lineNumber":17,"author":{"gitId":"tashawan23"},"content":"     * it as completed"},{"lineNumber":18,"author":{"gitId":"tashawan23"},"content":"     *"},{"lineNumber":19,"author":{"gitId":"tashawan23"},"content":"     * @param Position of task in TaskList"},{"lineNumber":20,"author":{"gitId":"tashawan23"},"content":"     * */"},{"lineNumber":21,"author":{"gitId":"tashawan23"},"content":"    public void markComplete(int n) {"},{"lineNumber":22,"author":{"gitId":"tashawan23"},"content":"        Task temp \u003d this.taskList.get(n - 1);"},{"lineNumber":23,"author":{"gitId":"tashawan23"},"content":"        temp.checkTask();"},{"lineNumber":24,"author":{"gitId":"tashawan23"},"content":"    }"},{"lineNumber":25,"author":{"gitId":"tashawan23"},"content":""},{"lineNumber":26,"author":{"gitId":"tashawan23"},"content":"    /** Removes task from TaskList"},{"lineNumber":27,"author":{"gitId":"tashawan23"},"content":"     *"},{"lineNumber":28,"author":{"gitId":"tashawan23"},"content":"     * @param Position of task in TaskList"},{"lineNumber":29,"author":{"gitId":"tashawan23"},"content":"     * */"},{"lineNumber":30,"author":{"gitId":"tashawan23"},"content":"    public void deleteTask(int task) {"},{"lineNumber":31,"author":{"gitId":"tashawan23"},"content":"        this.taskList.remove(task - 1);"},{"lineNumber":32,"author":{"gitId":"tashawan23"},"content":"    }"},{"lineNumber":33,"author":{"gitId":"tashawan23"},"content":""},{"lineNumber":34,"author":{"gitId":"tashawan23"},"content":"    /** Adds new task to TaskList"},{"lineNumber":35,"author":{"gitId":"tashawan23"},"content":"     *"},{"lineNumber":36,"author":{"gitId":"tashawan23"},"content":"     * @param new Task"},{"lineNumber":37,"author":{"gitId":"tashawan23"},"content":"     * */"},{"lineNumber":38,"author":{"gitId":"tashawan23"},"content":"    public void storeTask(Task task) {"},{"lineNumber":39,"author":{"gitId":"tashawan23"},"content":"        this.taskList.add(task);"},{"lineNumber":40,"author":{"gitId":"tashawan23"},"content":"    }"},{"lineNumber":41,"author":{"gitId":"tashawan23"},"content":""},{"lineNumber":42,"author":{"gitId":"tashawan23"},"content":"    /** Retrieves and returns task from TaskList"},{"lineNumber":43,"author":{"gitId":"tashawan23"},"content":"     *"},{"lineNumber":44,"author":{"gitId":"tashawan23"},"content":"     * @param Position of task in TaskList"},{"lineNumber":45,"author":{"gitId":"tashawan23"},"content":"     * @return Chosen Task*/"},{"lineNumber":46,"author":{"gitId":"tashawan23"},"content":"    public Task getTask(int n) {"},{"lineNumber":47,"author":{"gitId":"tashawan23"},"content":"        return this.taskList.get(n - 1);"},{"lineNumber":48,"author":{"gitId":"tashawan23"},"content":"    }"},{"lineNumber":49,"author":{"gitId":"tashawan23"},"content":""},{"lineNumber":50,"author":{"gitId":"tashawan23"},"content":"    public void findTasks(String s) {"},{"lineNumber":51,"author":{"gitId":"tashawan23"},"content":"        ArrayList\u003cTask\u003e matched \u003d new ArrayList\u003c\u003e();"},{"lineNumber":52,"author":{"gitId":"tashawan23"},"content":"        for(Task t : taskList) {"},{"lineNumber":53,"author":{"gitId":"tashawan23"},"content":"            String name \u003d t.getName();"},{"lineNumber":54,"author":{"gitId":"tashawan23"},"content":"            if(name.contains(s)) {"},{"lineNumber":55,"author":{"gitId":"tashawan23"},"content":"                matched.add(t);"},{"lineNumber":56,"author":{"gitId":"tashawan23"},"content":"            }"},{"lineNumber":57,"author":{"gitId":"tashawan23"},"content":"        }"},{"lineNumber":58,"author":{"gitId":"tashawan23"},"content":"        if(matched.size() \u003e\u003d 1) {"},{"lineNumber":59,"author":{"gitId":"tashawan23"},"content":"            String msg \u003d \"Duchess: Here are the matching tasks in your list:\";"},{"lineNumber":60,"author":{"gitId":"tashawan23"},"content":"            for(int i \u003d 0; i \u003c matched.size(); i++) {"},{"lineNumber":61,"author":{"gitId":"tashawan23"},"content":"                msg+\u003d \"\\n\" +  (i + 1) + \". \" + matched.get(i);"},{"lineNumber":62,"author":{"gitId":"tashawan23"},"content":"            }"},{"lineNumber":63,"author":{"gitId":"tashawan23"},"content":"            System.out.println(msg);"},{"lineNumber":64,"author":{"gitId":"tashawan23"},"content":"        } else {"},{"lineNumber":65,"author":{"gitId":"tashawan23"},"content":"            System.out.println(\"Duchess: No matching tasks found!\");"},{"lineNumber":66,"author":{"gitId":"tashawan23"},"content":"        }"},{"lineNumber":67,"author":{"gitId":"tashawan23"},"content":"    }"},{"lineNumber":68,"author":{"gitId":"tashawan23"},"content":"}"}],"authorContributionMap":{"tashawan23":68}},{"path":"src/main/java/duke/Tasks/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tashawan23"},"content":"package duke.Tasks;"},{"lineNumber":2,"author":{"gitId":"tashawan23"},"content":""},{"lineNumber":3,"author":{"gitId":"tashawan23"},"content":"import java.time.LocalDate;"},{"lineNumber":4,"author":{"gitId":"tashawan23"},"content":"import java.time.format.DateTimeFormatter;"},{"lineNumber":5,"author":{"gitId":"tashawan23"},"content":""},{"lineNumber":6,"author":{"gitId":"tashawan23"},"content":"public class Deadline extends Task {"},{"lineNumber":7,"author":{"gitId":"tashawan23"},"content":"    /** Deadline of deadline */"},{"lineNumber":8,"author":{"gitId":"tashawan23"},"content":"    protected LocalDate by;"},{"lineNumber":9,"author":{"gitId":"tashawan23"},"content":""},{"lineNumber":10,"author":{"gitId":"tashawan23"},"content":"    public Deadline(String name, String by) {"},{"lineNumber":11,"author":{"gitId":"tashawan23"},"content":"        super(name);"},{"lineNumber":12,"author":{"gitId":"tashawan23"},"content":"        this.by \u003d LocalDate.parse(by);"},{"lineNumber":13,"author":{"gitId":"tashawan23"},"content":"        this.cat \u003d \u0027D\u0027;"},{"lineNumber":14,"author":{"gitId":"tashawan23"},"content":"    }"},{"lineNumber":15,"author":{"gitId":"tashawan23"},"content":""},{"lineNumber":16,"author":{"gitId":"tashawan23"},"content":"    /** Returns deadline in the format yyy-MM-dd"},{"lineNumber":17,"author":{"gitId":"tashawan23"},"content":"     *"},{"lineNumber":18,"author":{"gitId":"tashawan23"},"content":"     * @return Deadline as a string"},{"lineNumber":19,"author":{"gitId":"tashawan23"},"content":"     * */"},{"lineNumber":20,"author":{"gitId":"tashawan23"},"content":"    public String getDeadline() {"},{"lineNumber":21,"author":{"gitId":"tashawan23"},"content":"        return this.by.format(DateTimeFormatter.ofPattern(\"yyyy-MM-dd\"));"},{"lineNumber":22,"author":{"gitId":"tashawan23"},"content":"    }"},{"lineNumber":23,"author":{"gitId":"tashawan23"},"content":""},{"lineNumber":24,"author":{"gitId":"tashawan23"},"content":"    /** Returns deadline in the format MMM d yyyy"},{"lineNumber":25,"author":{"gitId":"tashawan23"},"content":"     *"},{"lineNumber":26,"author":{"gitId":"tashawan23"},"content":"     * @return Deadline as a string */"},{"lineNumber":27,"author":{"gitId":"tashawan23"},"content":"    public String getFormattedDeadline() {"},{"lineNumber":28,"author":{"gitId":"tashawan23"},"content":"        return this.by.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\"));"},{"lineNumber":29,"author":{"gitId":"tashawan23"},"content":"    }"},{"lineNumber":30,"author":{"gitId":"tashawan23"},"content":""},{"lineNumber":31,"author":{"gitId":"tashawan23"},"content":"    @Override"},{"lineNumber":32,"author":{"gitId":"tashawan23"},"content":"    public String toString() {"},{"lineNumber":33,"author":{"gitId":"tashawan23"},"content":"        return \"[D] \" + super.toString() + \" (by: \" + this.getFormattedDeadline() + \")\";"},{"lineNumber":34,"author":{"gitId":"tashawan23"},"content":"    }"},{"lineNumber":35,"author":{"gitId":"tashawan23"},"content":""},{"lineNumber":36,"author":{"gitId":"tashawan23"},"content":"}"},{"lineNumber":37,"author":{"gitId":"tashawan23"},"content":""}],"authorContributionMap":{"tashawan23":37}},{"path":"src/main/java/duke/Tasks/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tashawan23"},"content":"package duke.Tasks;"},{"lineNumber":2,"author":{"gitId":"tashawan23"},"content":""},{"lineNumber":3,"author":{"gitId":"tashawan23"},"content":"import java.time.LocalDate;"},{"lineNumber":4,"author":{"gitId":"tashawan23"},"content":"import java.time.format.DateTimeFormatter;"},{"lineNumber":5,"author":{"gitId":"tashawan23"},"content":""},{"lineNumber":6,"author":{"gitId":"tashawan23"},"content":"public class Event extends Task {"},{"lineNumber":7,"author":{"gitId":"tashawan23"},"content":"    /** Time of event */"},{"lineNumber":8,"author":{"gitId":"tashawan23"},"content":"    protected LocalDate time;"},{"lineNumber":9,"author":{"gitId":"tashawan23"},"content":""},{"lineNumber":10,"author":{"gitId":"tashawan23"},"content":"    public Event(String name, String time) {"},{"lineNumber":11,"author":{"gitId":"tashawan23"},"content":"        super(name);"},{"lineNumber":12,"author":{"gitId":"tashawan23"},"content":"        this.time \u003d LocalDate.parse(time);"},{"lineNumber":13,"author":{"gitId":"tashawan23"},"content":"        this.cat \u003d \u0027E\u0027;"},{"lineNumber":14,"author":{"gitId":"tashawan23"},"content":"    }"},{"lineNumber":15,"author":{"gitId":"tashawan23"},"content":""},{"lineNumber":16,"author":{"gitId":"tashawan23"},"content":"    /** Returns time of event in the format yyyy-MM-dd"},{"lineNumber":17,"author":{"gitId":"tashawan23"},"content":"     *"},{"lineNumber":18,"author":{"gitId":"tashawan23"},"content":"     * @return Time as a string"},{"lineNumber":19,"author":{"gitId":"tashawan23"},"content":"     * */"},{"lineNumber":20,"author":{"gitId":"tashawan23"},"content":"    public String getTime() {"},{"lineNumber":21,"author":{"gitId":"tashawan23"},"content":"        return this.time.format(DateTimeFormatter.ofPattern(\"yyyy-MM-dd\"));"},{"lineNumber":22,"author":{"gitId":"tashawan23"},"content":"    }"},{"lineNumber":23,"author":{"gitId":"tashawan23"},"content":""},{"lineNumber":24,"author":{"gitId":"tashawan23"},"content":"    /** Returns time of event in the format MMM d yyyy"},{"lineNumber":25,"author":{"gitId":"tashawan23"},"content":"     *"},{"lineNumber":26,"author":{"gitId":"tashawan23"},"content":"     * @return Time as a string"},{"lineNumber":27,"author":{"gitId":"tashawan23"},"content":"     * */"},{"lineNumber":28,"author":{"gitId":"tashawan23"},"content":"    public String getFormattedTime() {"},{"lineNumber":29,"author":{"gitId":"tashawan23"},"content":"        return this.time.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\"));"},{"lineNumber":30,"author":{"gitId":"tashawan23"},"content":"    }"},{"lineNumber":31,"author":{"gitId":"tashawan23"},"content":""},{"lineNumber":32,"author":{"gitId":"tashawan23"},"content":""},{"lineNumber":33,"author":{"gitId":"tashawan23"},"content":"    @Override"},{"lineNumber":34,"author":{"gitId":"tashawan23"},"content":"    public String toString() {"},{"lineNumber":35,"author":{"gitId":"tashawan23"},"content":"        return \"[E] \" + super.toString() + \" (at: \" + this.getFormattedTime() + \")\" ;"},{"lineNumber":36,"author":{"gitId":"tashawan23"},"content":"    }"},{"lineNumber":37,"author":{"gitId":"tashawan23"},"content":"}"}],"authorContributionMap":{"tashawan23":37}},{"path":"src/main/java/duke/Tasks/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tashawan23"},"content":"package duke.Tasks;"},{"lineNumber":2,"author":{"gitId":"tashawan23"},"content":""},{"lineNumber":3,"author":{"gitId":"tashawan23"},"content":"public class Task {"},{"lineNumber":4,"author":{"gitId":"tashawan23"},"content":"    /** Name of task */"},{"lineNumber":5,"author":{"gitId":"tashawan23"},"content":"    protected String name;"},{"lineNumber":6,"author":{"gitId":"tashawan23"},"content":""},{"lineNumber":7,"author":{"gitId":"tashawan23"},"content":"    /** Boolean to mark whether task is completed */"},{"lineNumber":8,"author":{"gitId":"tashawan23"},"content":"    protected boolean isCompleted;"},{"lineNumber":9,"author":{"gitId":"tashawan23"},"content":""},{"lineNumber":10,"author":{"gitId":"tashawan23"},"content":"    /** Label the category of the task */"},{"lineNumber":11,"author":{"gitId":"tashawan23"},"content":"    protected char cat;"},{"lineNumber":12,"author":{"gitId":"tashawan23"},"content":""},{"lineNumber":13,"author":{"gitId":"tashawan23"},"content":"    public Task(String name) {"},{"lineNumber":14,"author":{"gitId":"tashawan23"},"content":"        this.name \u003d name;"},{"lineNumber":15,"author":{"gitId":"tashawan23"},"content":"        this.isCompleted \u003d false;"},{"lineNumber":16,"author":{"gitId":"tashawan23"},"content":"    }"},{"lineNumber":17,"author":{"gitId":"tashawan23"},"content":""},{"lineNumber":18,"author":{"gitId":"tashawan23"},"content":"    /** Returns the category of task"},{"lineNumber":19,"author":{"gitId":"tashawan23"},"content":"     *"},{"lineNumber":20,"author":{"gitId":"tashawan23"},"content":"     * @return Category label of task as a char"},{"lineNumber":21,"author":{"gitId":"tashawan23"},"content":"     */"},{"lineNumber":22,"author":{"gitId":"tashawan23"},"content":"    public char getCat() {"},{"lineNumber":23,"author":{"gitId":"tashawan23"},"content":"        return this.cat;"},{"lineNumber":24,"author":{"gitId":"tashawan23"},"content":"    }"},{"lineNumber":25,"author":{"gitId":"tashawan23"},"content":""},{"lineNumber":26,"author":{"gitId":"tashawan23"},"content":"    /** Returns the name of task"},{"lineNumber":27,"author":{"gitId":"tashawan23"},"content":"     *"},{"lineNumber":28,"author":{"gitId":"tashawan23"},"content":"     * @return Name of task as string"},{"lineNumber":29,"author":{"gitId":"tashawan23"},"content":"     */"},{"lineNumber":30,"author":{"gitId":"tashawan23"},"content":"    public String getName() {"},{"lineNumber":31,"author":{"gitId":"tashawan23"},"content":"        return this.name;"},{"lineNumber":32,"author":{"gitId":"tashawan23"},"content":"    }"},{"lineNumber":33,"author":{"gitId":"tashawan23"},"content":""},{"lineNumber":34,"author":{"gitId":"tashawan23"},"content":"    /** Returns boolean of whether task has been completed"},{"lineNumber":35,"author":{"gitId":"tashawan23"},"content":"     *"},{"lineNumber":36,"author":{"gitId":"tashawan23"},"content":"     * @return Boolean"},{"lineNumber":37,"author":{"gitId":"tashawan23"},"content":"     * */"},{"lineNumber":38,"author":{"gitId":"tashawan23"},"content":"    public boolean getCompleted() {"},{"lineNumber":39,"author":{"gitId":"tashawan23"},"content":"        return this.isCompleted;"},{"lineNumber":40,"author":{"gitId":"tashawan23"},"content":"    }"},{"lineNumber":41,"author":{"gitId":"tashawan23"},"content":""},{"lineNumber":42,"author":{"gitId":"tashawan23"},"content":"    /** Marks task as completed */"},{"lineNumber":43,"author":{"gitId":"tashawan23"},"content":"    public void checkTask() {"},{"lineNumber":44,"author":{"gitId":"tashawan23"},"content":"        this.isCompleted \u003d true;"},{"lineNumber":45,"author":{"gitId":"tashawan23"},"content":"    }"},{"lineNumber":46,"author":{"gitId":"tashawan23"},"content":""},{"lineNumber":47,"author":{"gitId":"tashawan23"},"content":"    /** Returns an icon to mark whether task has been completed"},{"lineNumber":48,"author":{"gitId":"tashawan23"},"content":"     *"},{"lineNumber":49,"author":{"gitId":"tashawan23"},"content":"     * @return Icon as string"},{"lineNumber":50,"author":{"gitId":"tashawan23"},"content":"     * */"},{"lineNumber":51,"author":{"gitId":"tashawan23"},"content":"    public String getStatusIcon() {"},{"lineNumber":52,"author":{"gitId":"tashawan23"},"content":"        return (isCompleted ? \"X\" : \" \"); //return tick or blank"},{"lineNumber":53,"author":{"gitId":"tashawan23"},"content":"    }"},{"lineNumber":54,"author":{"gitId":"tashawan23"},"content":""},{"lineNumber":55,"author":{"gitId":"tashawan23"},"content":"    public String toString() {"},{"lineNumber":56,"author":{"gitId":"tashawan23"},"content":"        return \"[\" + this.getStatusIcon() + \"] \" + this.name;"},{"lineNumber":57,"author":{"gitId":"tashawan23"},"content":"    }"},{"lineNumber":58,"author":{"gitId":"tashawan23"},"content":"}"}],"authorContributionMap":{"tashawan23":58}},{"path":"src/main/java/duke/Tasks/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tashawan23"},"content":"package duke.Tasks;"},{"lineNumber":2,"author":{"gitId":"tashawan23"},"content":""},{"lineNumber":3,"author":{"gitId":"tashawan23"},"content":"public class Todo extends Task {"},{"lineNumber":4,"author":{"gitId":"tashawan23"},"content":""},{"lineNumber":5,"author":{"gitId":"tashawan23"},"content":"    public Todo(String name) {"},{"lineNumber":6,"author":{"gitId":"tashawan23"},"content":"        super(name);"},{"lineNumber":7,"author":{"gitId":"tashawan23"},"content":"        this.cat \u003d \u0027T\u0027;"},{"lineNumber":8,"author":{"gitId":"tashawan23"},"content":"    }"},{"lineNumber":9,"author":{"gitId":"tashawan23"},"content":""},{"lineNumber":10,"author":{"gitId":"tashawan23"},"content":"    @Override"},{"lineNumber":11,"author":{"gitId":"tashawan23"},"content":"    public String toString() {"},{"lineNumber":12,"author":{"gitId":"tashawan23"},"content":"        return \"[T] \" + super.toString() ;"},{"lineNumber":13,"author":{"gitId":"tashawan23"},"content":"    }"},{"lineNumber":14,"author":{"gitId":"tashawan23"},"content":"}"}],"authorContributionMap":{"tashawan23":14}},{"path":"src/main/java/duke/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tashawan23"},"content":"package duke;"},{"lineNumber":2,"author":{"gitId":"tashawan23"},"content":""},{"lineNumber":3,"author":{"gitId":"tashawan23"},"content":"import duke.Tasks.Task;"},{"lineNumber":4,"author":{"gitId":"tashawan23"},"content":""},{"lineNumber":5,"author":{"gitId":"tashawan23"},"content":"import java.util.ArrayList;"},{"lineNumber":6,"author":{"gitId":"tashawan23"},"content":"import java.util.Scanner;"},{"lineNumber":7,"author":{"gitId":"tashawan23"},"content":""},{"lineNumber":8,"author":{"gitId":"tashawan23"},"content":"public class Ui {"},{"lineNumber":9,"author":{"gitId":"tashawan23"},"content":"    /** Scanner instance to scan user input*/"},{"lineNumber":10,"author":{"gitId":"tashawan23"},"content":"    Scanner sc;"},{"lineNumber":11,"author":{"gitId":"tashawan23"},"content":""},{"lineNumber":12,"author":{"gitId":"tashawan23"},"content":"    public Ui() {"},{"lineNumber":13,"author":{"gitId":"tashawan23"},"content":"    }"},{"lineNumber":14,"author":{"gitId":"tashawan23"},"content":""},{"lineNumber":15,"author":{"gitId":"tashawan23"},"content":"    /** Scans and returns user input"},{"lineNumber":16,"author":{"gitId":"tashawan23"},"content":"     *"},{"lineNumber":17,"author":{"gitId":"tashawan23"},"content":"     * @return user input"},{"lineNumber":18,"author":{"gitId":"tashawan23"},"content":"     * */"},{"lineNumber":19,"author":{"gitId":"tashawan23"},"content":"    public String getCommand() {"},{"lineNumber":20,"author":{"gitId":"tashawan23"},"content":"        sc \u003d new Scanner(System.in);"},{"lineNumber":21,"author":{"gitId":"tashawan23"},"content":"        String command \u003d sc.nextLine();"},{"lineNumber":22,"author":{"gitId":"tashawan23"},"content":"        return command;"},{"lineNumber":23,"author":{"gitId":"tashawan23"},"content":"    }"},{"lineNumber":24,"author":{"gitId":"tashawan23"},"content":""},{"lineNumber":25,"author":{"gitId":"tashawan23"},"content":"    /** Scans and returns date of event or deadline"},{"lineNumber":26,"author":{"gitId":"tashawan23"},"content":"     *"},{"lineNumber":27,"author":{"gitId":"tashawan23"},"content":"     * @return date as a string"},{"lineNumber":28,"author":{"gitId":"tashawan23"},"content":"     * */"},{"lineNumber":29,"author":{"gitId":"tashawan23"},"content":"    public String getDate() {"},{"lineNumber":30,"author":{"gitId":"tashawan23"},"content":"        String date \u003d sc.nextLine();"},{"lineNumber":31,"author":{"gitId":"tashawan23"},"content":"        return date;"},{"lineNumber":32,"author":{"gitId":"tashawan23"},"content":"    }"},{"lineNumber":33,"author":{"gitId":"tashawan23"},"content":""},{"lineNumber":34,"author":{"gitId":"tashawan23"},"content":"    /** Prints message to greet user */"},{"lineNumber":35,"author":{"gitId":"tashawan23"},"content":"    public void greetUser() {"},{"lineNumber":36,"author":{"gitId":"tashawan23"},"content":"        System.out.println(\"Duchess: Hello, Duchess here. What can i do for you?\");"},{"lineNumber":37,"author":{"gitId":"tashawan23"},"content":"    }"},{"lineNumber":38,"author":{"gitId":"tashawan23"},"content":""},{"lineNumber":39,"author":{"gitId":"tashawan23"},"content":"    /** Prints message to say goodbye to user */"},{"lineNumber":40,"author":{"gitId":"tashawan23"},"content":"    public void sayGoodbye() {"},{"lineNumber":41,"author":{"gitId":"tashawan23"},"content":"        System.out.println(\"Duchess: Bye, Have an awesome day!\");"},{"lineNumber":42,"author":{"gitId":"tashawan23"},"content":"        sc.close();"},{"lineNumber":43,"author":{"gitId":"tashawan23"},"content":"    }"},{"lineNumber":44,"author":{"gitId":"tashawan23"},"content":""},{"lineNumber":45,"author":{"gitId":"tashawan23"},"content":"    /** Prints message to request for date of event */"},{"lineNumber":46,"author":{"gitId":"tashawan23"},"content":"    public void requestDate() {"},{"lineNumber":47,"author":{"gitId":"tashawan23"},"content":"        System.out.println(\"Duchess: When will this event be?\");"},{"lineNumber":48,"author":{"gitId":"tashawan23"},"content":"    }"},{"lineNumber":49,"author":{"gitId":"tashawan23"},"content":""},{"lineNumber":50,"author":{"gitId":"tashawan23"},"content":"    /** Prints message to request for deadline */"},{"lineNumber":51,"author":{"gitId":"tashawan23"},"content":"    public void requestDeadline() {"},{"lineNumber":52,"author":{"gitId":"tashawan23"},"content":"        System.out.println(\"Duchess: When does this have to be done by?\");"},{"lineNumber":53,"author":{"gitId":"tashawan23"},"content":"    }"},{"lineNumber":54,"author":{"gitId":"tashawan23"},"content":""},{"lineNumber":55,"author":{"gitId":"tashawan23"},"content":"    /** Prints tasks in TaskList"},{"lineNumber":56,"author":{"gitId":"tashawan23"},"content":"     *"},{"lineNumber":57,"author":{"gitId":"tashawan23"},"content":"     * @param TaskList"},{"lineNumber":58,"author":{"gitId":"tashawan23"},"content":"     * */"},{"lineNumber":59,"author":{"gitId":"tashawan23"},"content":"    public void printList(ArrayList\u003cTask\u003e taskList) {"},{"lineNumber":60,"author":{"gitId":"tashawan23"},"content":"        String msg \u003d \"Duchess: Here are the tasks in your list:\";"},{"lineNumber":61,"author":{"gitId":"tashawan23"},"content":"        for(int i \u003d 0; i \u003c taskList.size(); i++) {"},{"lineNumber":62,"author":{"gitId":"tashawan23"},"content":"            msg+\u003d \"\\n\" +  (i + 1) + \". \" + taskList.get(i);"},{"lineNumber":63,"author":{"gitId":"tashawan23"},"content":"        }"},{"lineNumber":64,"author":{"gitId":"tashawan23"},"content":"        System.out.println(msg);"},{"lineNumber":65,"author":{"gitId":"tashawan23"},"content":"    }"},{"lineNumber":66,"author":{"gitId":"tashawan23"},"content":""},{"lineNumber":67,"author":{"gitId":"tashawan23"},"content":"    /** Prints message when task is checked off successfully"},{"lineNumber":68,"author":{"gitId":"tashawan23"},"content":"     *"},{"lineNumber":69,"author":{"gitId":"tashawan23"},"content":"     * @param Task to be checked"},{"lineNumber":70,"author":{"gitId":"tashawan23"},"content":"     * */"},{"lineNumber":71,"author":{"gitId":"tashawan23"},"content":"    public void checkedTask(Task task) {"},{"lineNumber":72,"author":{"gitId":"tashawan23"},"content":"        System.out.println(\"Duchess: Woohoo I\u0027ve checked off this task:\" + \"\\n\" + task);"},{"lineNumber":73,"author":{"gitId":"tashawan23"},"content":"    }"},{"lineNumber":74,"author":{"gitId":"tashawan23"},"content":""},{"lineNumber":75,"author":{"gitId":"tashawan23"},"content":"    /** Prints message when task is successfully deleted"},{"lineNumber":76,"author":{"gitId":"tashawan23"},"content":"     *"},{"lineNumber":77,"author":{"gitId":"tashawan23"},"content":"     * @param TaskList"},{"lineNumber":78,"author":{"gitId":"tashawan23"},"content":"     * @param Task to be deleted"},{"lineNumber":79,"author":{"gitId":"tashawan23"},"content":"     * */"},{"lineNumber":80,"author":{"gitId":"tashawan23"},"content":"    public void deletedTask(ArrayList\u003cTask\u003e taskList, Task task) {"},{"lineNumber":81,"author":{"gitId":"tashawan23"},"content":"        System.out.println(\"Duchess: As requested, i have removed this task:\" + \"\\n\""},{"lineNumber":82,"author":{"gitId":"tashawan23"},"content":"                + task + \"\\n\" + \"U have \" +  taskList.size() + \" tasks in the list now :)\");"},{"lineNumber":83,"author":{"gitId":"tashawan23"},"content":"    }"},{"lineNumber":84,"author":{"gitId":"tashawan23"},"content":""},{"lineNumber":85,"author":{"gitId":"tashawan23"},"content":"    /** Prints message when task is successfully added"},{"lineNumber":86,"author":{"gitId":"tashawan23"},"content":"     *"},{"lineNumber":87,"author":{"gitId":"tashawan23"},"content":"     * @param TaskList"},{"lineNumber":88,"author":{"gitId":"tashawan23"},"content":"     * @param Task to be added"},{"lineNumber":89,"author":{"gitId":"tashawan23"},"content":"     * */"},{"lineNumber":90,"author":{"gitId":"tashawan23"},"content":"    public void addedTask(ArrayList\u003cTask\u003e taskList, Task task) {"},{"lineNumber":91,"author":{"gitId":"tashawan23"},"content":"        System.out.println(\"Duchess: Great! I have added:\" + \"\\n\" + task + \"\\n\" + \"U have \" + taskList.size()"},{"lineNumber":92,"author":{"gitId":"tashawan23"},"content":"                + \" tasks in the list now :)\");"},{"lineNumber":93,"author":{"gitId":"tashawan23"},"content":"    }"},{"lineNumber":94,"author":{"gitId":"tashawan23"},"content":""},{"lineNumber":95,"author":{"gitId":"tashawan23"},"content":"}"}],"authorContributionMap":{"tashawan23":95}},{"path":"src/test/java/DeadlineTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tashawan23"},"content":"import duke.Tasks.Deadline;"},{"lineNumber":2,"author":{"gitId":"tashawan23"},"content":"import duke.Tasks.Task;"},{"lineNumber":3,"author":{"gitId":"tashawan23"},"content":"import org.junit.jupiter.api.Test;"},{"lineNumber":4,"author":{"gitId":"tashawan23"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;"},{"lineNumber":5,"author":{"gitId":"tashawan23"},"content":""},{"lineNumber":6,"author":{"gitId":"tashawan23"},"content":"public class DeadlineTest {"},{"lineNumber":7,"author":{"gitId":"tashawan23"},"content":"    @Test"},{"lineNumber":8,"author":{"gitId":"tashawan23"},"content":"    public void testStringConversion() {"},{"lineNumber":9,"author":{"gitId":"tashawan23"},"content":"        assertEquals(\"[D] [ ] Homework (by: Jan 31 2021)\", new Deadline(\"Homework\", \"2021-01-31\").toString());"},{"lineNumber":10,"author":{"gitId":"tashawan23"},"content":"    }"},{"lineNumber":11,"author":{"gitId":"tashawan23"},"content":""},{"lineNumber":12,"author":{"gitId":"tashawan23"},"content":"    @Test"},{"lineNumber":13,"author":{"gitId":"tashawan23"},"content":"    public void testGetDeadline() {"},{"lineNumber":14,"author":{"gitId":"tashawan23"},"content":"        Deadline d \u003d new Deadline(\"Homework\", \"2021-01-31\");"},{"lineNumber":15,"author":{"gitId":"tashawan23"},"content":"        assertEquals(\"2021-01-31\", d.getDeadline());"},{"lineNumber":16,"author":{"gitId":"tashawan23"},"content":"    }"},{"lineNumber":17,"author":{"gitId":"tashawan23"},"content":""},{"lineNumber":18,"author":{"gitId":"tashawan23"},"content":"    @Test"},{"lineNumber":19,"author":{"gitId":"tashawan23"},"content":"    public void testGetFormattedDeadline() {"},{"lineNumber":20,"author":{"gitId":"tashawan23"},"content":"        Deadline d \u003d new Deadline(\"Homework\", \"2021-01-31\");"},{"lineNumber":21,"author":{"gitId":"tashawan23"},"content":"        assertEquals(\"Jan 31 2021\", d.getFormattedDeadline());"},{"lineNumber":22,"author":{"gitId":"tashawan23"},"content":"    }"},{"lineNumber":23,"author":{"gitId":"tashawan23"},"content":""},{"lineNumber":24,"author":{"gitId":"tashawan23"},"content":"}"}],"authorContributionMap":{"tashawan23":24}},{"path":"src/test/java/DukeTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tashawan23"},"content":"import org.junit.jupiter.api.Test;"},{"lineNumber":2,"author":{"gitId":"tashawan23"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;"},{"lineNumber":3,"author":{"gitId":"tashawan23"},"content":""},{"lineNumber":4,"author":{"gitId":"tashawan23"},"content":"public class DukeTest {"},{"lineNumber":5,"author":{"gitId":"tashawan23"},"content":"    @Test"},{"lineNumber":6,"author":{"gitId":"tashawan23"},"content":"    public void dummyTest(){"},{"lineNumber":7,"author":{"gitId":"tashawan23"},"content":"        assertEquals(2, 2);"},{"lineNumber":8,"author":{"gitId":"tashawan23"},"content":"    }"},{"lineNumber":9,"author":{"gitId":"tashawan23"},"content":"}"}],"authorContributionMap":{"tashawan23":9}},{"path":"src/test/java/TaskListTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tashawan23"},"content":"import duke.TaskList;"},{"lineNumber":2,"author":{"gitId":"tashawan23"},"content":"import duke.Tasks.Task;"},{"lineNumber":3,"author":{"gitId":"tashawan23"},"content":"import org.junit.jupiter.api.Test;"},{"lineNumber":4,"author":{"gitId":"tashawan23"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;"},{"lineNumber":5,"author":{"gitId":"tashawan23"},"content":""},{"lineNumber":6,"author":{"gitId":"tashawan23"},"content":"import java.util.ArrayList;"},{"lineNumber":7,"author":{"gitId":"tashawan23"},"content":""},{"lineNumber":8,"author":{"gitId":"tashawan23"},"content":"public class TaskListTest {"},{"lineNumber":9,"author":{"gitId":"tashawan23"},"content":"    @Test"},{"lineNumber":10,"author":{"gitId":"tashawan23"},"content":"    public void testStoreTask() {"},{"lineNumber":11,"author":{"gitId":"tashawan23"},"content":"        TaskList tasklist \u003d new TaskList();"},{"lineNumber":12,"author":{"gitId":"tashawan23"},"content":"        Task task \u003d new Task(\"Buy candies\");"},{"lineNumber":13,"author":{"gitId":"tashawan23"},"content":"        tasklist.storeTask(task);"},{"lineNumber":14,"author":{"gitId":"tashawan23"},"content":"        assertEquals(tasklist.taskList.contains(task), true);"},{"lineNumber":15,"author":{"gitId":"tashawan23"},"content":"    }"},{"lineNumber":16,"author":{"gitId":"tashawan23"},"content":""},{"lineNumber":17,"author":{"gitId":"tashawan23"},"content":"    @Test"},{"lineNumber":18,"author":{"gitId":"tashawan23"},"content":"    public void testDeleteTask() {"},{"lineNumber":19,"author":{"gitId":"tashawan23"},"content":"        TaskList tasklist \u003d new TaskList();"},{"lineNumber":20,"author":{"gitId":"tashawan23"},"content":"        Task task \u003d new Task(\"Buy candies\");"},{"lineNumber":21,"author":{"gitId":"tashawan23"},"content":"        tasklist.storeTask(task);"},{"lineNumber":22,"author":{"gitId":"tashawan23"},"content":"        tasklist.deleteTask(1);"},{"lineNumber":23,"author":{"gitId":"tashawan23"},"content":"        assertEquals(tasklist.taskList.contains(task), false);"},{"lineNumber":24,"author":{"gitId":"tashawan23"},"content":"    }"},{"lineNumber":25,"author":{"gitId":"tashawan23"},"content":""},{"lineNumber":26,"author":{"gitId":"tashawan23"},"content":"    @Test"},{"lineNumber":27,"author":{"gitId":"tashawan23"},"content":"    public void testGetTask() {"},{"lineNumber":28,"author":{"gitId":"tashawan23"},"content":"        TaskList tasklist \u003d new TaskList();"},{"lineNumber":29,"author":{"gitId":"tashawan23"},"content":"        Task task \u003d new Task(\"Buy candies\");"},{"lineNumber":30,"author":{"gitId":"tashawan23"},"content":"        tasklist.storeTask(task);"},{"lineNumber":31,"author":{"gitId":"tashawan23"},"content":"        assertEquals(tasklist.getTask(1), task);"},{"lineNumber":32,"author":{"gitId":"tashawan23"},"content":"    }"},{"lineNumber":33,"author":{"gitId":"tashawan23"},"content":""},{"lineNumber":34,"author":{"gitId":"tashawan23"},"content":"    @Test"},{"lineNumber":35,"author":{"gitId":"tashawan23"},"content":"    public void testMarkComplete() {"},{"lineNumber":36,"author":{"gitId":"tashawan23"},"content":"        Task task \u003d new Task(\"Buy candies\");"},{"lineNumber":37,"author":{"gitId":"tashawan23"},"content":"        TaskList tasklist \u003d new TaskList();"},{"lineNumber":38,"author":{"gitId":"tashawan23"},"content":"        tasklist.storeTask(task);"},{"lineNumber":39,"author":{"gitId":"tashawan23"},"content":"        tasklist.markComplete(1);"},{"lineNumber":40,"author":{"gitId":"tashawan23"},"content":"        assertEquals(tasklist.taskList.get(0).getCompleted(), true);"},{"lineNumber":41,"author":{"gitId":"tashawan23"},"content":"    }"},{"lineNumber":42,"author":{"gitId":"tashawan23"},"content":""},{"lineNumber":43,"author":{"gitId":"tashawan23"},"content":"}"}],"authorContributionMap":{"tashawan23":43}},{"path":"src/test/java/TaskTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tashawan23"},"content":"import duke.Tasks.Task;"},{"lineNumber":2,"author":{"gitId":"tashawan23"},"content":"import org.junit.jupiter.api.Test;"},{"lineNumber":3,"author":{"gitId":"tashawan23"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;"},{"lineNumber":4,"author":{"gitId":"tashawan23"},"content":""},{"lineNumber":5,"author":{"gitId":"tashawan23"},"content":"public class TaskTest {"},{"lineNumber":6,"author":{"gitId":"tashawan23"},"content":"    @Test"},{"lineNumber":7,"author":{"gitId":"tashawan23"},"content":"    public void testStringConversion() {"},{"lineNumber":8,"author":{"gitId":"tashawan23"},"content":"        assertEquals(\"[ ] Buy candies\", new Task(\"Buy candies\").toString());"},{"lineNumber":9,"author":{"gitId":"tashawan23"},"content":"    }"},{"lineNumber":10,"author":{"gitId":"tashawan23"},"content":""},{"lineNumber":11,"author":{"gitId":"tashawan23"},"content":"    @Test"},{"lineNumber":12,"author":{"gitId":"tashawan23"},"content":"    public void testGetName() {"},{"lineNumber":13,"author":{"gitId":"tashawan23"},"content":"        assertEquals(\"Make acai\", new Task(\"Make acai\").getName());"},{"lineNumber":14,"author":{"gitId":"tashawan23"},"content":"    }"},{"lineNumber":15,"author":{"gitId":"tashawan23"},"content":""},{"lineNumber":16,"author":{"gitId":"tashawan23"},"content":"    @Test"},{"lineNumber":17,"author":{"gitId":"tashawan23"},"content":"    public void testGetCompleted() {"},{"lineNumber":18,"author":{"gitId":"tashawan23"},"content":"        assertEquals(false, new Task(\"Make acai\").getCompleted());"},{"lineNumber":19,"author":{"gitId":"tashawan23"},"content":"    }"},{"lineNumber":20,"author":{"gitId":"tashawan23"},"content":""},{"lineNumber":21,"author":{"gitId":"tashawan23"},"content":"    @Test"},{"lineNumber":22,"author":{"gitId":"tashawan23"},"content":"    public void testCheckTask() {"},{"lineNumber":23,"author":{"gitId":"tashawan23"},"content":"        Task task \u003d new Task(\"Buy Candies\");"},{"lineNumber":24,"author":{"gitId":"tashawan23"},"content":"        task.checkTask();"},{"lineNumber":25,"author":{"gitId":"tashawan23"},"content":"        assertEquals(true, task.getCompleted());"},{"lineNumber":26,"author":{"gitId":"tashawan23"},"content":"    }"},{"lineNumber":27,"author":{"gitId":"tashawan23"},"content":""},{"lineNumber":28,"author":{"gitId":"tashawan23"},"content":"    @Test"},{"lineNumber":29,"author":{"gitId":"tashawan23"},"content":"    public void testGetStatusIcon() {"},{"lineNumber":30,"author":{"gitId":"tashawan23"},"content":"        Task task \u003d new Task(\"Buy Candies\");"},{"lineNumber":31,"author":{"gitId":"tashawan23"},"content":"        task.checkTask();"},{"lineNumber":32,"author":{"gitId":"tashawan23"},"content":"        assertEquals(\"X\", task.getStatusIcon());"},{"lineNumber":33,"author":{"gitId":"tashawan23"},"content":"    }"},{"lineNumber":34,"author":{"gitId":"tashawan23"},"content":""},{"lineNumber":35,"author":{"gitId":"tashawan23"},"content":"}"}],"authorContributionMap":{"tashawan23":35}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"tashawan23"},"content":"todo Workout"},{"lineNumber":2,"author":{"gitId":"tashawan23"},"content":"event Meeting"},{"lineNumber":3,"author":{"gitId":"tashawan23"},"content":"Monday 2-4pm"},{"lineNumber":4,"author":{"gitId":"tashawan23"},"content":"list"},{"lineNumber":5,"author":{"gitId":"tashawan23"},"content":"deadline Homework"},{"lineNumber":6,"author":{"gitId":"tashawan23"},"content":"Saturday"},{"lineNumber":7,"author":{"gitId":"tashawan23"},"content":"done 1"},{"lineNumber":8,"author":{"gitId":"tashawan23"},"content":"list"},{"lineNumber":9,"author":{"gitId":"tashawan23"},"content":"delete 2"},{"lineNumber":10,"author":{"gitId":"tashawan23"},"content":"list"},{"lineNumber":11,"author":{"gitId":"tashawan23"},"content":"bye"}],"authorContributionMap":{"tashawan23":11}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF"},{"lineNumber":2,"author":{"gitId":"-"},"content":""},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin"},{"lineNumber":5,"author":{"gitId":"-"},"content":""},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run"},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT"},{"lineNumber":8,"author":{"gitId":"-"},"content":""},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder"},{"lineNumber":10,"author":{"gitId":"-"},"content":"javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\*.java"},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 ("},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1"},{"lineNumber":14,"author":{"gitId":"-"},"content":")"},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0"},{"lineNumber":16,"author":{"gitId":"-"},"content":""},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"},{"lineNumber":18,"author":{"gitId":"tashawan23"},"content":"java -classpath ..\\bin duke.Duke \u003c input.txt \u003e ACTUAL.TXT"},{"lineNumber":19,"author":{"gitId":"-"},"content":""},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM compare the output to the expected output"},{"lineNumber":21,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT"}],"authorContributionMap":{"tashawan23":1,"-":20}}]
