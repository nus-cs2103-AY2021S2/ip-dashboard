[{"path":"README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"tashawan23"},"content":"# duke.Duke project template"},{"lineNumber":2,"author":{"gitId":"-"},"content":""},{"lineNumber":3,"author":{"gitId":"-"},"content":"This is a project template for a greenfield Java project. It\u0027s named after the Java mascot _Duke_. Given below are instructions on how to use it."},{"lineNumber":4,"author":{"gitId":"-"},"content":""},{"lineNumber":5,"author":{"gitId":"-"},"content":"## Setting up in Intellij"},{"lineNumber":6,"author":{"gitId":"-"},"content":""},{"lineNumber":7,"author":{"gitId":"-"},"content":"Prerequisites: JDK 11, update Intellij to the most recent version."},{"lineNumber":8,"author":{"gitId":"-"},"content":""},{"lineNumber":9,"author":{"gitId":"-"},"content":"1. Open Intellij (if you are not in the welcome screen, click `File` \u003e `Close Project` to close the existing project first)"},{"lineNumber":10,"author":{"gitId":"-"},"content":"1. Open the project into Intellij as follows:"},{"lineNumber":11,"author":{"gitId":"-"},"content":"   1. Click `Open`."},{"lineNumber":12,"author":{"gitId":"-"},"content":"   1. Select the project directory, and click `OK`."},{"lineNumber":13,"author":{"gitId":"-"},"content":"   1. If there are any further prompts, accept the defaults."},{"lineNumber":14,"author":{"gitId":"-"},"content":"1. Configure the project to use **JDK 11** (not other versions) as explained in [here](https://www.jetbrains.com/help/idea/sdk.html#set-up-jdk)."},{"lineNumber":15,"author":{"gitId":"tashawan23"},"content":"1. After that, locate the `src/main/java/duke.Duke.java` file, right-click it, and choose `Run duke.Duke.main()`. If the setup is correct, you should see something like the below:"},{"lineNumber":16,"author":{"gitId":"-"},"content":"   ```"},{"lineNumber":17,"author":{"gitId":"-"},"content":"   Hello from"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    ____        _        "},{"lineNumber":19,"author":{"gitId":"-"},"content":"   |  _ \\ _   _| | _____ "},{"lineNumber":20,"author":{"gitId":"-"},"content":"   | | | | | | | |/ / _ \\"},{"lineNumber":21,"author":{"gitId":"-"},"content":"   | |_| | |_| |   \u003c  __/"},{"lineNumber":22,"author":{"gitId":"-"},"content":"   |____/ \\__,_|_|\\_\\___|"},{"lineNumber":23,"author":{"gitId":"-"},"content":"   ```"}],"authorContributionMap":{"tashawan23":2,"-":21}},{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027checkstyle\u0027"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027"},{"lineNumber":6,"author":{"gitId":"-"},"content":"}"},{"lineNumber":7,"author":{"gitId":"-"},"content":""},{"lineNumber":8,"author":{"gitId":"-"},"content":"repositories {"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    mavenCentral()"},{"lineNumber":10,"author":{"gitId":"-"},"content":"}"},{"lineNumber":11,"author":{"gitId":"-"},"content":""},{"lineNumber":12,"author":{"gitId":"-"},"content":"dependencies {"},{"lineNumber":13,"author":{"gitId":"tashawan23"},"content":"    String javaFxVersion \u003d \u002711\u0027"},{"lineNumber":14,"author":{"gitId":"tashawan23"},"content":""},{"lineNumber":15,"author":{"gitId":"tashawan23"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027"},{"lineNumber":16,"author":{"gitId":"tashawan23"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"},{"lineNumber":17,"author":{"gitId":"tashawan23"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"},{"lineNumber":18,"author":{"gitId":"tashawan23"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027"},{"lineNumber":19,"author":{"gitId":"tashawan23"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"},{"lineNumber":20,"author":{"gitId":"tashawan23"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"},{"lineNumber":21,"author":{"gitId":"tashawan23"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027"},{"lineNumber":22,"author":{"gitId":"tashawan23"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"},{"lineNumber":23,"author":{"gitId":"tashawan23"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"},{"lineNumber":24,"author":{"gitId":"tashawan23"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027"},{"lineNumber":25,"author":{"gitId":"tashawan23"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"},{"lineNumber":26,"author":{"gitId":"tashawan23"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.5.0\u0027"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.5.0\u0027"},{"lineNumber":29,"author":{"gitId":"-"},"content":"}"},{"lineNumber":30,"author":{"gitId":"-"},"content":""},{"lineNumber":31,"author":{"gitId":"-"},"content":"test {"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    useJUnitPlatform()"},{"lineNumber":33,"author":{"gitId":"-"},"content":""},{"lineNumber":34,"author":{"gitId":"-"},"content":"    testLogging {"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\""},{"lineNumber":36,"author":{"gitId":"-"},"content":""},{"lineNumber":37,"author":{"gitId":"-"},"content":"        showExceptions true"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\""},{"lineNumber":39,"author":{"gitId":"-"},"content":"        showCauses true"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        showStackTraces true"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":43,"author":{"gitId":"-"},"content":"}"},{"lineNumber":44,"author":{"gitId":"-"},"content":""},{"lineNumber":45,"author":{"gitId":"-"},"content":"application {"},{"lineNumber":46,"author":{"gitId":"tashawan23"},"content":"    //mainClassName \u003d \"seedu.duke.Duke\""},{"lineNumber":47,"author":{"gitId":"tashawan23"},"content":"    mainClassName \u003d \"duke.Duke\""},{"lineNumber":48,"author":{"gitId":"-"},"content":"}"},{"lineNumber":49,"author":{"gitId":"-"},"content":""},{"lineNumber":50,"author":{"gitId":"-"},"content":"shadowJar {"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    archiveBaseName \u003d \"duke\""},{"lineNumber":52,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null"},{"lineNumber":53,"author":{"gitId":"-"},"content":"}"},{"lineNumber":54,"author":{"gitId":"-"},"content":""},{"lineNumber":55,"author":{"gitId":"-"},"content":"checkstyle {"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    toolVersion \u003d \u00278.29\u0027"},{"lineNumber":57,"author":{"gitId":"-"},"content":"}"},{"lineNumber":58,"author":{"gitId":"-"},"content":""},{"lineNumber":59,"author":{"gitId":"-"},"content":"run{"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in"},{"lineNumber":61,"author":{"gitId":"-"},"content":"}"}],"authorContributionMap":{"tashawan23":16,"-":45}},{"path":"src/data/duke.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"tashawan23"},"content":"T : 1 : Buy book"},{"lineNumber":2,"author":{"gitId":"tashawan23"},"content":"D : 1 : Homework : 2021-02-03"},{"lineNumber":3,"author":{"gitId":"tashawan23"},"content":"D : 1 : Quiz : 2021-01-28"},{"lineNumber":4,"author":{"gitId":"tashawan23"},"content":"E : 0 : party : 2021-01-30"},{"lineNumber":5,"author":{"gitId":"tashawan23"},"content":"T : 0 : Make cake"},{"lineNumber":6,"author":{"gitId":"tashawan23"},"content":"D : 1 : Essay : 2021-03-02"},{"lineNumber":7,"author":{"gitId":"tashawan23"},"content":"E : 0 :  Dinner : 2021-03-05"}],"authorContributionMap":{"tashawan23":7}},{"path":"src/main/java/duke/DialogBox.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tashawan23"},"content":"package duke;"},{"lineNumber":2,"author":{"gitId":"tashawan23"},"content":""},{"lineNumber":3,"author":{"gitId":"tashawan23"},"content":"import java.io.IOException;"},{"lineNumber":4,"author":{"gitId":"tashawan23"},"content":""},{"lineNumber":5,"author":{"gitId":"tashawan23"},"content":"import javafx.collections.FXCollections;"},{"lineNumber":6,"author":{"gitId":"tashawan23"},"content":"import javafx.collections.ObservableList;"},{"lineNumber":7,"author":{"gitId":"tashawan23"},"content":"import javafx.fxml.FXML;"},{"lineNumber":8,"author":{"gitId":"tashawan23"},"content":"import javafx.fxml.FXMLLoader;"},{"lineNumber":9,"author":{"gitId":"tashawan23"},"content":"import javafx.geometry.Pos;"},{"lineNumber":10,"author":{"gitId":"tashawan23"},"content":"import javafx.scene.Node;"},{"lineNumber":11,"author":{"gitId":"tashawan23"},"content":"import javafx.scene.control.Label;"},{"lineNumber":12,"author":{"gitId":"tashawan23"},"content":"import javafx.scene.image.Image;"},{"lineNumber":13,"author":{"gitId":"tashawan23"},"content":"import javafx.scene.image.ImageView;"},{"lineNumber":14,"author":{"gitId":"tashawan23"},"content":"import javafx.scene.layout.HBox;"},{"lineNumber":15,"author":{"gitId":"tashawan23"},"content":""},{"lineNumber":16,"author":{"gitId":"tashawan23"},"content":""},{"lineNumber":17,"author":{"gitId":"tashawan23"},"content":"public class DialogBox extends HBox {"},{"lineNumber":18,"author":{"gitId":"tashawan23"},"content":"    @FXML"},{"lineNumber":19,"author":{"gitId":"tashawan23"},"content":"    private Label dialog;"},{"lineNumber":20,"author":{"gitId":"tashawan23"},"content":"    @FXML"},{"lineNumber":21,"author":{"gitId":"tashawan23"},"content":"    private ImageView displayPicture;"},{"lineNumber":22,"author":{"gitId":"tashawan23"},"content":""},{"lineNumber":23,"author":{"gitId":"tashawan23"},"content":"    /** Creating a custom control using FXML."},{"lineNumber":24,"author":{"gitId":"tashawan23"},"content":"     * DialogBox handles dialogues between the user and Duke by presenting the"},{"lineNumber":25,"author":{"gitId":"tashawan23"},"content":"     * dialogs and display pictures"},{"lineNumber":26,"author":{"gitId":"tashawan23"},"content":"     * */"},{"lineNumber":27,"author":{"gitId":"tashawan23"},"content":"    private DialogBox(String text, Image img) {"},{"lineNumber":28,"author":{"gitId":"tashawan23"},"content":"        try {"},{"lineNumber":29,"author":{"gitId":"tashawan23"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(\"/view/DialogBox.fxml\"));"},{"lineNumber":30,"author":{"gitId":"tashawan23"},"content":"            fxmlLoader.setController(this);"},{"lineNumber":31,"author":{"gitId":"tashawan23"},"content":"            fxmlLoader.setRoot(this);"},{"lineNumber":32,"author":{"gitId":"tashawan23"},"content":"            fxmlLoader.load();"},{"lineNumber":33,"author":{"gitId":"tashawan23"},"content":"        } catch (IOException e) {"},{"lineNumber":34,"author":{"gitId":"tashawan23"},"content":"            e.printStackTrace();"},{"lineNumber":35,"author":{"gitId":"tashawan23"},"content":"        }"},{"lineNumber":36,"author":{"gitId":"tashawan23"},"content":""},{"lineNumber":37,"author":{"gitId":"tashawan23"},"content":"        dialog.setText(text);"},{"lineNumber":38,"author":{"gitId":"tashawan23"},"content":"        displayPicture.setImage(img);"},{"lineNumber":39,"author":{"gitId":"tashawan23"},"content":"    }"},{"lineNumber":40,"author":{"gitId":"tashawan23"},"content":""},{"lineNumber":41,"author":{"gitId":"tashawan23"},"content":"    /**"},{"lineNumber":42,"author":{"gitId":"tashawan23"},"content":"     * Flips the dialog box such that the ImageView is on the left and text on the right."},{"lineNumber":43,"author":{"gitId":"tashawan23"},"content":"     */"},{"lineNumber":44,"author":{"gitId":"tashawan23"},"content":"    private void flip() {"},{"lineNumber":45,"author":{"gitId":"tashawan23"},"content":"        this.setAlignment(Pos.TOP_LEFT);"},{"lineNumber":46,"author":{"gitId":"tashawan23"},"content":"        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());"},{"lineNumber":47,"author":{"gitId":"tashawan23"},"content":"        FXCollections.reverse(tmp);"},{"lineNumber":48,"author":{"gitId":"tashawan23"},"content":"        this.getChildren().setAll(tmp);"},{"lineNumber":49,"author":{"gitId":"tashawan23"},"content":"    }"},{"lineNumber":50,"author":{"gitId":"tashawan23"},"content":""},{"lineNumber":51,"author":{"gitId":"tashawan23"},"content":"    public static DialogBox getUserDialog(String msg, Image picture) {"},{"lineNumber":52,"author":{"gitId":"tashawan23"},"content":"        return new DialogBox(msg, picture);"},{"lineNumber":53,"author":{"gitId":"tashawan23"},"content":"    }"},{"lineNumber":54,"author":{"gitId":"tashawan23"},"content":""},{"lineNumber":55,"author":{"gitId":"tashawan23"},"content":"    public static DialogBox getDukeDialog(String msg, Image picture) {"},{"lineNumber":56,"author":{"gitId":"tashawan23"},"content":"        var db \u003d new DialogBox(msg, picture);"},{"lineNumber":57,"author":{"gitId":"tashawan23"},"content":"        db.flip();"},{"lineNumber":58,"author":{"gitId":"tashawan23"},"content":"        return db;"},{"lineNumber":59,"author":{"gitId":"tashawan23"},"content":"    }"},{"lineNumber":60,"author":{"gitId":"tashawan23"},"content":"}"}],"authorContributionMap":{"tashawan23":60}},{"path":"src/main/java/duke/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tashawan23"},"content":"package duke;"},{"lineNumber":2,"author":{"gitId":"tashawan23"},"content":""},{"lineNumber":3,"author":{"gitId":"tashawan23"},"content":"import duke.Exceptions.DukeExceptions;"},{"lineNumber":4,"author":{"gitId":"tashawan23"},"content":"import duke.Exceptions.MissingInputException;"},{"lineNumber":5,"author":{"gitId":"tashawan23"},"content":"import duke.Exceptions.UnclearInputException;"},{"lineNumber":6,"author":{"gitId":"tashawan23"},"content":"import duke.Tasks.Deadline;"},{"lineNumber":7,"author":{"gitId":"tashawan23"},"content":"import duke.Tasks.Event;"},{"lineNumber":8,"author":{"gitId":"tashawan23"},"content":"import duke.Tasks.Task;"},{"lineNumber":9,"author":{"gitId":"tashawan23"},"content":"import duke.Tasks.Todo;"},{"lineNumber":10,"author":{"gitId":"tashawan23"},"content":""},{"lineNumber":11,"author":{"gitId":"tashawan23"},"content":"public class Duke {"},{"lineNumber":12,"author":{"gitId":"tashawan23"},"content":""},{"lineNumber":13,"author":{"gitId":"tashawan23"},"content":"    /** TaskList instance to store and handle tasks */"},{"lineNumber":14,"author":{"gitId":"tashawan23"},"content":"    private TaskList tasks;"},{"lineNumber":15,"author":{"gitId":"tashawan23"},"content":""},{"lineNumber":16,"author":{"gitId":"tashawan23"},"content":"    /** Storage instance to read and write file */"},{"lineNumber":17,"author":{"gitId":"tashawan23"},"content":"    private Storage storage;"},{"lineNumber":18,"author":{"gitId":"tashawan23"},"content":""},{"lineNumber":19,"author":{"gitId":"tashawan23"},"content":"    /** Ui instance to interact with user */"},{"lineNumber":20,"author":{"gitId":"tashawan23"},"content":"    private Ui ui;"},{"lineNumber":21,"author":{"gitId":"tashawan23"},"content":""},{"lineNumber":22,"author":{"gitId":"tashawan23"},"content":"    /** Constructs a new Duke object"},{"lineNumber":23,"author":{"gitId":"tashawan23"},"content":"     *"},{"lineNumber":24,"author":{"gitId":"tashawan23"},"content":"     * @param path of file"},{"lineNumber":25,"author":{"gitId":"tashawan23"},"content":"     */"},{"lineNumber":26,"author":{"gitId":"tashawan23"},"content":"    public Duke(String path) {"},{"lineNumber":27,"author":{"gitId":"tashawan23"},"content":"        ui \u003d new Ui();"},{"lineNumber":28,"author":{"gitId":"tashawan23"},"content":"        tasks \u003d new TaskList();"},{"lineNumber":29,"author":{"gitId":"tashawan23"},"content":"        storage \u003d new Storage(path, tasks);"},{"lineNumber":30,"author":{"gitId":"tashawan23"},"content":"    }"},{"lineNumber":31,"author":{"gitId":"tashawan23"},"content":""},{"lineNumber":32,"author":{"gitId":"tashawan23"},"content":"    /** Runs the program and handles each command from user */"},{"lineNumber":33,"author":{"gitId":"tashawan23"},"content":"    public String getResponse(String input) {"},{"lineNumber":34,"author":{"gitId":"tashawan23"},"content":"        Parser commandParser \u003d new Parser();"},{"lineNumber":35,"author":{"gitId":"tashawan23"},"content":"        String speech \u003d \"\";"},{"lineNumber":36,"author":{"gitId":"tashawan23"},"content":"        try {"},{"lineNumber":37,"author":{"gitId":"tashawan23"},"content":"            commandParser.parse(input);"},{"lineNumber":38,"author":{"gitId":"tashawan23"},"content":"            String action \u003d commandParser.getCommand(input);"},{"lineNumber":39,"author":{"gitId":"tashawan23"},"content":"            String desc \u003d commandParser.getDesc(input);"},{"lineNumber":40,"author":{"gitId":"tashawan23"},"content":"            switch (action) {"},{"lineNumber":41,"author":{"gitId":"tashawan23"},"content":"            case \"bye\":"},{"lineNumber":42,"author":{"gitId":"tashawan23"},"content":"                speech +\u003d ui.sayGoodbye();"},{"lineNumber":43,"author":{"gitId":"tashawan23"},"content":"                break;"},{"lineNumber":44,"author":{"gitId":"tashawan23"},"content":"            case \"list\":"},{"lineNumber":45,"author":{"gitId":"tashawan23"},"content":"                speech +\u003d ui.printList(tasks.getTaskList());"},{"lineNumber":46,"author":{"gitId":"tashawan23"},"content":"                break;"},{"lineNumber":47,"author":{"gitId":"tashawan23"},"content":"            case \"done\":"},{"lineNumber":48,"author":{"gitId":"tashawan23"},"content":"                int n \u003d Integer.parseInt(desc);"},{"lineNumber":49,"author":{"gitId":"tashawan23"},"content":"                Task t \u003d tasks.getTask(n);"},{"lineNumber":50,"author":{"gitId":"tashawan23"},"content":"                tasks.markComplete(n);"},{"lineNumber":51,"author":{"gitId":"tashawan23"},"content":"                speech +\u003d ui.printChecked(t);"},{"lineNumber":52,"author":{"gitId":"tashawan23"},"content":"                break;"},{"lineNumber":53,"author":{"gitId":"tashawan23"},"content":"            case \"todo\":"},{"lineNumber":54,"author":{"gitId":"tashawan23"},"content":"                Task todo \u003d new Todo(desc);"},{"lineNumber":55,"author":{"gitId":"tashawan23"},"content":"                tasks.storeTask(todo);"},{"lineNumber":56,"author":{"gitId":"tashawan23"},"content":"                speech +\u003d ui.printAdded(tasks.getTaskList(), todo);"},{"lineNumber":57,"author":{"gitId":"tashawan23"},"content":"                break;"},{"lineNumber":58,"author":{"gitId":"tashawan23"},"content":"            case \"event\":"},{"lineNumber":59,"author":{"gitId":"tashawan23"},"content":"                String date \u003d commandParser.getDate(input);"},{"lineNumber":60,"author":{"gitId":"tashawan23"},"content":"                System.out.println(date);"},{"lineNumber":61,"author":{"gitId":"tashawan23"},"content":"                Task event \u003d new Event(desc, date);"},{"lineNumber":62,"author":{"gitId":"tashawan23"},"content":"                tasks.storeTask(event);"},{"lineNumber":63,"author":{"gitId":"tashawan23"},"content":"                speech +\u003d ui.printAdded(tasks.getTaskList(), event);"},{"lineNumber":64,"author":{"gitId":"tashawan23"},"content":"                break;"},{"lineNumber":65,"author":{"gitId":"tashawan23"},"content":"            case \"deadline\":"},{"lineNumber":66,"author":{"gitId":"tashawan23"},"content":"                String due \u003d commandParser.getDate(input);"},{"lineNumber":67,"author":{"gitId":"tashawan23"},"content":"                Task deadline \u003d new Deadline(desc, due);"},{"lineNumber":68,"author":{"gitId":"tashawan23"},"content":"                tasks.storeTask(deadline);"},{"lineNumber":69,"author":{"gitId":"tashawan23"},"content":"                speech +\u003d ui.printAdded(tasks.getTaskList(), deadline);"},{"lineNumber":70,"author":{"gitId":"tashawan23"},"content":"                break;"},{"lineNumber":71,"author":{"gitId":"tashawan23"},"content":"            case \"delete\":"},{"lineNumber":72,"author":{"gitId":"tashawan23"},"content":"                Task task \u003d tasks.getTask(Integer.parseInt(desc));"},{"lineNumber":73,"author":{"gitId":"tashawan23"},"content":"                tasks.deleteTask(Integer.parseInt(desc));"},{"lineNumber":74,"author":{"gitId":"tashawan23"},"content":"                speech +\u003d ui.printDeleted(tasks.getTaskList(), task);"},{"lineNumber":75,"author":{"gitId":"tashawan23"},"content":"                break;"},{"lineNumber":76,"author":{"gitId":"tashawan23"},"content":"            case \"find\":"},{"lineNumber":77,"author":{"gitId":"tashawan23"},"content":"                speech +\u003d tasks.findTasks(desc);"},{"lineNumber":78,"author":{"gitId":"tashawan23"},"content":"                break;"},{"lineNumber":79,"author":{"gitId":"tashawan23"},"content":"            default:"},{"lineNumber":80,"author":{"gitId":"tashawan23"},"content":"                throw new UnclearInputException();"},{"lineNumber":81,"author":{"gitId":"tashawan23"},"content":"            }"},{"lineNumber":82,"author":{"gitId":"tashawan23"},"content":"        } catch (MissingInputException e) {"},{"lineNumber":83,"author":{"gitId":"tashawan23"},"content":"            return e.getMessage();"},{"lineNumber":84,"author":{"gitId":"tashawan23"},"content":"        } catch (UnclearInputException e) {"},{"lineNumber":85,"author":{"gitId":"tashawan23"},"content":"            return e.getMessage();"},{"lineNumber":86,"author":{"gitId":"tashawan23"},"content":"        } catch (DukeExceptions e) {"},{"lineNumber":87,"author":{"gitId":"tashawan23"},"content":"            return e.getMessage();"},{"lineNumber":88,"author":{"gitId":"tashawan23"},"content":"        }"},{"lineNumber":89,"author":{"gitId":"tashawan23"},"content":"        storage.write(tasks);"},{"lineNumber":90,"author":{"gitId":"tashawan23"},"content":"        return speech;"},{"lineNumber":91,"author":{"gitId":"tashawan23"},"content":"    }"},{"lineNumber":92,"author":{"gitId":"tashawan23"},"content":"}"},{"lineNumber":93,"author":{"gitId":"tashawan23"},"content":""}],"authorContributionMap":{"tashawan23":93}},{"path":"src/main/java/duke/Exceptions/DukeExceptions.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tashawan23"},"content":"package duke.Exceptions;"},{"lineNumber":2,"author":{"gitId":"tashawan23"},"content":""},{"lineNumber":3,"author":{"gitId":"tashawan23"},"content":"public class DukeExceptions extends Exception {"},{"lineNumber":4,"author":{"gitId":"tashawan23"},"content":"    public DukeExceptions(String msg) {"},{"lineNumber":5,"author":{"gitId":"tashawan23"},"content":"        super(msg);"},{"lineNumber":6,"author":{"gitId":"tashawan23"},"content":"    }"},{"lineNumber":7,"author":{"gitId":"tashawan23"},"content":""},{"lineNumber":8,"author":{"gitId":"tashawan23"},"content":"}"}],"authorContributionMap":{"tashawan23":8}},{"path":"src/main/java/duke/Exceptions/MissingInputException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tashawan23"},"content":"package duke.Exceptions;"},{"lineNumber":2,"author":{"gitId":"tashawan23"},"content":""},{"lineNumber":3,"author":{"gitId":"tashawan23"},"content":"public class MissingInputException extends DukeExceptions {"},{"lineNumber":4,"author":{"gitId":"tashawan23"},"content":""},{"lineNumber":5,"author":{"gitId":"tashawan23"},"content":"    public MissingInputException(String cat) {"},{"lineNumber":6,"author":{"gitId":"tashawan23"},"content":"        super(\"OOPS!!! The description of a \" + cat + \" cannot be empty.\");"},{"lineNumber":7,"author":{"gitId":"tashawan23"},"content":"    }"},{"lineNumber":8,"author":{"gitId":"tashawan23"},"content":"}"}],"authorContributionMap":{"tashawan23":8}},{"path":"src/main/java/duke/Exceptions/MissingTaskException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tashawan23"},"content":"package duke.Exceptions;"},{"lineNumber":2,"author":{"gitId":"tashawan23"},"content":""},{"lineNumber":3,"author":{"gitId":"tashawan23"},"content":"public class MissingTaskException extends DukeExceptions {"},{"lineNumber":4,"author":{"gitId":"tashawan23"},"content":""},{"lineNumber":5,"author":{"gitId":"tashawan23"},"content":"    public MissingTaskException () {"},{"lineNumber":6,"author":{"gitId":"tashawan23"},"content":"        super(\"OOPS!!! The task to be marked completed/ deleted cannot be empty.\");"},{"lineNumber":7,"author":{"gitId":"tashawan23"},"content":"    }"},{"lineNumber":8,"author":{"gitId":"tashawan23"},"content":"}"}],"authorContributionMap":{"tashawan23":8}},{"path":"src/main/java/duke/Exceptions/UnclearInputException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tashawan23"},"content":"package duke.Exceptions;"},{"lineNumber":2,"author":{"gitId":"tashawan23"},"content":""},{"lineNumber":3,"author":{"gitId":"tashawan23"},"content":"public class UnclearInputException extends DukeExceptions {"},{"lineNumber":4,"author":{"gitId":"tashawan23"},"content":""},{"lineNumber":5,"author":{"gitId":"tashawan23"},"content":"    public UnclearInputException() {"},{"lineNumber":6,"author":{"gitId":"tashawan23"},"content":"        super(\"OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\");"},{"lineNumber":7,"author":{"gitId":"tashawan23"},"content":"    }"},{"lineNumber":8,"author":{"gitId":"tashawan23"},"content":"}"}],"authorContributionMap":{"tashawan23":8}},{"path":"src/main/java/duke/Launcher.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tashawan23"},"content":"package duke;"},{"lineNumber":2,"author":{"gitId":"tashawan23"},"content":""},{"lineNumber":3,"author":{"gitId":"tashawan23"},"content":"import javafx.application.Application;"},{"lineNumber":4,"author":{"gitId":"tashawan23"},"content":""},{"lineNumber":5,"author":{"gitId":"tashawan23"},"content":"public class Launcher {"},{"lineNumber":6,"author":{"gitId":"tashawan23"},"content":"    public static void main(String[] args) {"},{"lineNumber":7,"author":{"gitId":"tashawan23"},"content":"        Application.launch(Main.class, args);"},{"lineNumber":8,"author":{"gitId":"tashawan23"},"content":"    }"},{"lineNumber":9,"author":{"gitId":"tashawan23"},"content":"}"}],"authorContributionMap":{"tashawan23":9}},{"path":"src/main/java/duke/Main.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tashawan23"},"content":"package duke;"},{"lineNumber":2,"author":{"gitId":"tashawan23"},"content":""},{"lineNumber":3,"author":{"gitId":"tashawan23"},"content":"import java.io.IOException;"},{"lineNumber":4,"author":{"gitId":"tashawan23"},"content":""},{"lineNumber":5,"author":{"gitId":"tashawan23"},"content":"import javafx.application.Application;"},{"lineNumber":6,"author":{"gitId":"tashawan23"},"content":"import javafx.fxml.FXMLLoader;"},{"lineNumber":7,"author":{"gitId":"tashawan23"},"content":"import javafx.scene.Scene;"},{"lineNumber":8,"author":{"gitId":"tashawan23"},"content":"import javafx.scene.layout.AnchorPane;"},{"lineNumber":9,"author":{"gitId":"tashawan23"},"content":"import javafx.stage.Stage;"},{"lineNumber":10,"author":{"gitId":"tashawan23"},"content":""},{"lineNumber":11,"author":{"gitId":"tashawan23"},"content":""},{"lineNumber":12,"author":{"gitId":"tashawan23"},"content":"public class Main extends Application {"},{"lineNumber":13,"author":{"gitId":"tashawan23"},"content":"    private Duke duke \u003d new Duke(\"src/data/duke.txt\");"},{"lineNumber":14,"author":{"gitId":"tashawan23"},"content":""},{"lineNumber":15,"author":{"gitId":"tashawan23"},"content":"    @Override"},{"lineNumber":16,"author":{"gitId":"tashawan23"},"content":"    public void start(Stage stage) {"},{"lineNumber":17,"author":{"gitId":"tashawan23"},"content":"        try {"},{"lineNumber":18,"author":{"gitId":"tashawan23"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(Main.class.getResource(\"/view/MainWindow.fxml\"));"},{"lineNumber":19,"author":{"gitId":"tashawan23"},"content":"            AnchorPane ap \u003d fxmlLoader.load();"},{"lineNumber":20,"author":{"gitId":"tashawan23"},"content":"            Scene scene \u003d new Scene(ap);"},{"lineNumber":21,"author":{"gitId":"tashawan23"},"content":"            stage.setScene(scene);"},{"lineNumber":22,"author":{"gitId":"tashawan23"},"content":"            fxmlLoader.\u003cMainWindow\u003egetController().setDuke(duke);"},{"lineNumber":23,"author":{"gitId":"tashawan23"},"content":"            stage.show();"},{"lineNumber":24,"author":{"gitId":"tashawan23"},"content":"        } catch (IOException e) {"},{"lineNumber":25,"author":{"gitId":"tashawan23"},"content":"            e.printStackTrace();"},{"lineNumber":26,"author":{"gitId":"tashawan23"},"content":"        }"},{"lineNumber":27,"author":{"gitId":"tashawan23"},"content":"    }"},{"lineNumber":28,"author":{"gitId":"tashawan23"},"content":""},{"lineNumber":29,"author":{"gitId":"tashawan23"},"content":"}"}],"authorContributionMap":{"tashawan23":29}},{"path":"src/main/java/duke/MainWindow.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tashawan23"},"content":"package duke;"},{"lineNumber":2,"author":{"gitId":"tashawan23"},"content":""},{"lineNumber":3,"author":{"gitId":"tashawan23"},"content":"import javafx.fxml.FXML;"},{"lineNumber":4,"author":{"gitId":"tashawan23"},"content":"import javafx.scene.control.Button;"},{"lineNumber":5,"author":{"gitId":"tashawan23"},"content":"import javafx.scene.control.ScrollPane;"},{"lineNumber":6,"author":{"gitId":"tashawan23"},"content":"import javafx.scene.control.TextField;"},{"lineNumber":7,"author":{"gitId":"tashawan23"},"content":"import javafx.scene.image.Image;"},{"lineNumber":8,"author":{"gitId":"tashawan23"},"content":"import javafx.scene.layout.VBox;"},{"lineNumber":9,"author":{"gitId":"tashawan23"},"content":""},{"lineNumber":10,"author":{"gitId":"tashawan23"},"content":"/**"},{"lineNumber":11,"author":{"gitId":"tashawan23"},"content":" * Controller for MainWindow. Provides the layout for the other controls."},{"lineNumber":12,"author":{"gitId":"tashawan23"},"content":" */"},{"lineNumber":13,"author":{"gitId":"tashawan23"},"content":"public class MainWindow {"},{"lineNumber":14,"author":{"gitId":"tashawan23"},"content":"    @FXML"},{"lineNumber":15,"author":{"gitId":"tashawan23"},"content":"    private ScrollPane scrollPane;"},{"lineNumber":16,"author":{"gitId":"tashawan23"},"content":"    @FXML"},{"lineNumber":17,"author":{"gitId":"tashawan23"},"content":"    private VBox dialogContainer;"},{"lineNumber":18,"author":{"gitId":"tashawan23"},"content":"    @FXML"},{"lineNumber":19,"author":{"gitId":"tashawan23"},"content":"    private TextField userInput;"},{"lineNumber":20,"author":{"gitId":"tashawan23"},"content":"    @FXML"},{"lineNumber":21,"author":{"gitId":"tashawan23"},"content":"    private Button sendButton;"},{"lineNumber":22,"author":{"gitId":"tashawan23"},"content":""},{"lineNumber":23,"author":{"gitId":"tashawan23"},"content":"    private Duke duke;"},{"lineNumber":24,"author":{"gitId":"tashawan23"},"content":""},{"lineNumber":25,"author":{"gitId":"tashawan23"},"content":"    private Image userImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/Little_Green_Men.png\"));"},{"lineNumber":26,"author":{"gitId":"tashawan23"},"content":"    private Image dukeImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/princess.png\"));"},{"lineNumber":27,"author":{"gitId":"tashawan23"},"content":""},{"lineNumber":28,"author":{"gitId":"tashawan23"},"content":"    /** Initializes a window and displays welcome message */"},{"lineNumber":29,"author":{"gitId":"tashawan23"},"content":"    @FXML"},{"lineNumber":30,"author":{"gitId":"tashawan23"},"content":"    public void initialize() {"},{"lineNumber":31,"author":{"gitId":"tashawan23"},"content":"        scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());"},{"lineNumber":32,"author":{"gitId":"tashawan23"},"content":"        dialogContainer.getChildren().addAll("},{"lineNumber":33,"author":{"gitId":"tashawan23"},"content":"                DialogBox.getDukeDialog(Ui.greetUser(), dukeImage)"},{"lineNumber":34,"author":{"gitId":"tashawan23"},"content":"        );"},{"lineNumber":35,"author":{"gitId":"tashawan23"},"content":"    }"},{"lineNumber":36,"author":{"gitId":"tashawan23"},"content":""},{"lineNumber":37,"author":{"gitId":"tashawan23"},"content":"    public void setDuke(Duke d) {"},{"lineNumber":38,"author":{"gitId":"tashawan23"},"content":"        duke \u003d d;"},{"lineNumber":39,"author":{"gitId":"tashawan23"},"content":"    }"},{"lineNumber":40,"author":{"gitId":"tashawan23"},"content":""},{"lineNumber":41,"author":{"gitId":"tashawan23"},"content":"    /**"},{"lineNumber":42,"author":{"gitId":"tashawan23"},"content":"     * Creates two dialog boxes, one echoing user input and the other containing Duke\u0027s reply and then appends them to"},{"lineNumber":43,"author":{"gitId":"tashawan23"},"content":"     * the dialog container. Clears the user input after processing."},{"lineNumber":44,"author":{"gitId":"tashawan23"},"content":"     */"},{"lineNumber":45,"author":{"gitId":"tashawan23"},"content":"    @FXML"},{"lineNumber":46,"author":{"gitId":"tashawan23"},"content":"    private void handleUserInput() {"},{"lineNumber":47,"author":{"gitId":"tashawan23"},"content":"        String input \u003d userInput.getText();"},{"lineNumber":48,"author":{"gitId":"tashawan23"},"content":"        String response \u003d duke.getResponse(input);"},{"lineNumber":49,"author":{"gitId":"tashawan23"},"content":"        dialogContainer.getChildren().addAll("},{"lineNumber":50,"author":{"gitId":"tashawan23"},"content":"                DialogBox.getUserDialog(input, userImage),"},{"lineNumber":51,"author":{"gitId":"tashawan23"},"content":"                DialogBox.getDukeDialog(response, dukeImage)"},{"lineNumber":52,"author":{"gitId":"tashawan23"},"content":"        );"},{"lineNumber":53,"author":{"gitId":"tashawan23"},"content":"        userInput.clear();"},{"lineNumber":54,"author":{"gitId":"tashawan23"},"content":"    }"},{"lineNumber":55,"author":{"gitId":"tashawan23"},"content":"}"},{"lineNumber":56,"author":{"gitId":"tashawan23"},"content":""}],"authorContributionMap":{"tashawan23":56}},{"path":"src/main/java/duke/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tashawan23"},"content":"package duke;"},{"lineNumber":2,"author":{"gitId":"tashawan23"},"content":""},{"lineNumber":3,"author":{"gitId":"tashawan23"},"content":"import duke.Exceptions.MissingInputException;"},{"lineNumber":4,"author":{"gitId":"tashawan23"},"content":"import duke.Exceptions.MissingTaskException;"},{"lineNumber":5,"author":{"gitId":"tashawan23"},"content":""},{"lineNumber":6,"author":{"gitId":"tashawan23"},"content":"public class Parser {"},{"lineNumber":7,"author":{"gitId":"tashawan23"},"content":""},{"lineNumber":8,"author":{"gitId":"tashawan23"},"content":"    /** Array to store input from user that is split by empty space */"},{"lineNumber":9,"author":{"gitId":"tashawan23"},"content":"    private String[] arr;"},{"lineNumber":10,"author":{"gitId":"tashawan23"},"content":""},{"lineNumber":11,"author":{"gitId":"tashawan23"},"content":"    public Parser() {}"},{"lineNumber":12,"author":{"gitId":"tashawan23"},"content":""},{"lineNumber":13,"author":{"gitId":"tashawan23"},"content":"    /**"},{"lineNumber":14,"author":{"gitId":"tashawan23"},"content":"     * Splits user input and checks for exceptions"},{"lineNumber":15,"author":{"gitId":"tashawan23"},"content":"     *"},{"lineNumber":16,"author":{"gitId":"tashawan23"},"content":"     * @throws MissingTaskException if chosen task is not specified"},{"lineNumber":17,"author":{"gitId":"tashawan23"},"content":"     * @throws MissingInputException if description of task is not provided"},{"lineNumber":18,"author":{"gitId":"tashawan23"},"content":"     * */"},{"lineNumber":19,"author":{"gitId":"tashawan23"},"content":"    public void parse(String cmd) throws MissingInputException, MissingTaskException {"},{"lineNumber":20,"author":{"gitId":"tashawan23"},"content":"        arr \u003d cmd.split(\" \", 2);"},{"lineNumber":21,"author":{"gitId":"tashawan23"},"content":"        String action \u003d arr[0];"},{"lineNumber":22,"author":{"gitId":"tashawan23"},"content":"        if (action.equals(\"deadline\") || action.equals(\"event\") || action.equals(\"todo\")) {"},{"lineNumber":23,"author":{"gitId":"tashawan23"},"content":"            if (arr.length \u003c\u003d 1) {"},{"lineNumber":24,"author":{"gitId":"tashawan23"},"content":"                throw new MissingInputException(action);"},{"lineNumber":25,"author":{"gitId":"tashawan23"},"content":"            }"},{"lineNumber":26,"author":{"gitId":"tashawan23"},"content":"        } else if (action.equals(\"done\") || action.equals(\"delete\")) {"},{"lineNumber":27,"author":{"gitId":"tashawan23"},"content":"            if (arr.length \u003c\u003d 1) {"},{"lineNumber":28,"author":{"gitId":"tashawan23"},"content":"                throw new MissingTaskException();"},{"lineNumber":29,"author":{"gitId":"tashawan23"},"content":"            }"},{"lineNumber":30,"author":{"gitId":"tashawan23"},"content":"        }"},{"lineNumber":31,"author":{"gitId":"tashawan23"},"content":"    }"},{"lineNumber":32,"author":{"gitId":"tashawan23"},"content":""},{"lineNumber":33,"author":{"gitId":"tashawan23"},"content":"    /**"},{"lineNumber":34,"author":{"gitId":"tashawan23"},"content":"     * Get command from user input"},{"lineNumber":35,"author":{"gitId":"tashawan23"},"content":"     *"},{"lineNumber":36,"author":{"gitId":"tashawan23"},"content":"     * @param cmd user input"},{"lineNumber":37,"author":{"gitId":"tashawan23"},"content":"     * @return string command"},{"lineNumber":38,"author":{"gitId":"tashawan23"},"content":"     * */"},{"lineNumber":39,"author":{"gitId":"tashawan23"},"content":"    public String getCommand(String cmd) {"},{"lineNumber":40,"author":{"gitId":"tashawan23"},"content":"        String[] arr \u003d cmd.split(\" \", 2);"},{"lineNumber":41,"author":{"gitId":"tashawan23"},"content":"        return arr[0];"},{"lineNumber":42,"author":{"gitId":"tashawan23"},"content":"    }"},{"lineNumber":43,"author":{"gitId":"tashawan23"},"content":""},{"lineNumber":44,"author":{"gitId":"tashawan23"},"content":"    /**"},{"lineNumber":45,"author":{"gitId":"tashawan23"},"content":"     * Get description of task from user input"},{"lineNumber":46,"author":{"gitId":"tashawan23"},"content":"     *"},{"lineNumber":47,"author":{"gitId":"tashawan23"},"content":"     * @param cmd user input"},{"lineNumber":48,"author":{"gitId":"tashawan23"},"content":"     * @return string description"},{"lineNumber":49,"author":{"gitId":"tashawan23"},"content":"     * */"},{"lineNumber":50,"author":{"gitId":"tashawan23"},"content":"    public String getDesc(String cmd) {"},{"lineNumber":51,"author":{"gitId":"tashawan23"},"content":"        int dateIndx \u003d cmd.indexOf(\"/\");"},{"lineNumber":52,"author":{"gitId":"tashawan23"},"content":"        int cmdIndx \u003d cmd.indexOf(\" \");"},{"lineNumber":53,"author":{"gitId":"tashawan23"},"content":"        String desc;"},{"lineNumber":54,"author":{"gitId":"tashawan23"},"content":"        if (cmdIndx \u003d\u003d -1) {"},{"lineNumber":55,"author":{"gitId":"tashawan23"},"content":"            return \"\";"},{"lineNumber":56,"author":{"gitId":"tashawan23"},"content":"        } else if (dateIndx !\u003d -1) {"},{"lineNumber":57,"author":{"gitId":"tashawan23"},"content":"            desc \u003d cmd.substring(cmdIndx + 1, dateIndx);"},{"lineNumber":58,"author":{"gitId":"tashawan23"},"content":"        } else {"},{"lineNumber":59,"author":{"gitId":"tashawan23"},"content":"            String[] arr \u003d cmd.split(\" \", 2);"},{"lineNumber":60,"author":{"gitId":"tashawan23"},"content":"            desc \u003d arr[1];"},{"lineNumber":61,"author":{"gitId":"tashawan23"},"content":"        }"},{"lineNumber":62,"author":{"gitId":"tashawan23"},"content":"        return desc;"},{"lineNumber":63,"author":{"gitId":"tashawan23"},"content":"    }"},{"lineNumber":64,"author":{"gitId":"tashawan23"},"content":""},{"lineNumber":65,"author":{"gitId":"tashawan23"},"content":"    /** Get date of deadline or event"},{"lineNumber":66,"author":{"gitId":"tashawan23"},"content":"     *"},{"lineNumber":67,"author":{"gitId":"tashawan23"},"content":"     * @param cmd user input"},{"lineNumber":68,"author":{"gitId":"tashawan23"},"content":"     * @return string date"},{"lineNumber":69,"author":{"gitId":"tashawan23"},"content":"     * */"},{"lineNumber":70,"author":{"gitId":"tashawan23"},"content":"    public String getDate(String cmd) {"},{"lineNumber":71,"author":{"gitId":"tashawan23"},"content":"        int descIndx \u003d cmd.indexOf(\"/\");"},{"lineNumber":72,"author":{"gitId":"tashawan23"},"content":"        String date \u003d cmd.substring(descIndx + 4);"},{"lineNumber":73,"author":{"gitId":"tashawan23"},"content":"        return date;"},{"lineNumber":74,"author":{"gitId":"tashawan23"},"content":"    }"},{"lineNumber":75,"author":{"gitId":"tashawan23"},"content":"}"}],"authorContributionMap":{"tashawan23":75}},{"path":"src/main/java/duke/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tashawan23"},"content":"package duke;"},{"lineNumber":2,"author":{"gitId":"tashawan23"},"content":""},{"lineNumber":3,"author":{"gitId":"tashawan23"},"content":"import java.io.File;"},{"lineNumber":4,"author":{"gitId":"tashawan23"},"content":"import java.io.FileNotFoundException;"},{"lineNumber":5,"author":{"gitId":"tashawan23"},"content":"import java.io.FileWriter;"},{"lineNumber":6,"author":{"gitId":"tashawan23"},"content":"import java.io.IOException;"},{"lineNumber":7,"author":{"gitId":"tashawan23"},"content":"import java.util.ArrayList;"},{"lineNumber":8,"author":{"gitId":"tashawan23"},"content":"import java.util.Scanner;"},{"lineNumber":9,"author":{"gitId":"tashawan23"},"content":""},{"lineNumber":10,"author":{"gitId":"tashawan23"},"content":"import duke.Tasks.Deadline;"},{"lineNumber":11,"author":{"gitId":"tashawan23"},"content":"import duke.Tasks.Event;"},{"lineNumber":12,"author":{"gitId":"tashawan23"},"content":"import duke.Tasks.Task;"},{"lineNumber":13,"author":{"gitId":"tashawan23"},"content":"import duke.Tasks.Todo;"},{"lineNumber":14,"author":{"gitId":"tashawan23"},"content":""},{"lineNumber":15,"author":{"gitId":"tashawan23"},"content":""},{"lineNumber":16,"author":{"gitId":"tashawan23"},"content":"public class Storage {"},{"lineNumber":17,"author":{"gitId":"tashawan23"},"content":""},{"lineNumber":18,"author":{"gitId":"tashawan23"},"content":"    /** Filewriter instance to write to file */"},{"lineNumber":19,"author":{"gitId":"tashawan23"},"content":"    private FileWriter writer;"},{"lineNumber":20,"author":{"gitId":"tashawan23"},"content":""},{"lineNumber":21,"author":{"gitId":"tashawan23"},"content":"    /** File instance to store data */"},{"lineNumber":22,"author":{"gitId":"tashawan23"},"content":"    private File dataFile;"},{"lineNumber":23,"author":{"gitId":"tashawan23"},"content":""},{"lineNumber":24,"author":{"gitId":"tashawan23"},"content":"    /** Tasklist instance to store and handle tasks */"},{"lineNumber":25,"author":{"gitId":"tashawan23"},"content":"    private TaskList tasks;"},{"lineNumber":26,"author":{"gitId":"tashawan23"},"content":""},{"lineNumber":27,"author":{"gitId":"tashawan23"},"content":"    /** Constructs a new Storage objective"},{"lineNumber":28,"author":{"gitId":"tashawan23"},"content":"     *"},{"lineNumber":29,"author":{"gitId":"tashawan23"},"content":"     * @param path of the file"},{"lineNumber":30,"author":{"gitId":"tashawan23"},"content":"     * @param tasks in tasklist"},{"lineNumber":31,"author":{"gitId":"tashawan23"},"content":"     */"},{"lineNumber":32,"author":{"gitId":"tashawan23"},"content":"    public Storage(String path, TaskList tasks) {"},{"lineNumber":33,"author":{"gitId":"tashawan23"},"content":"        dataFile \u003d new File(path);"},{"lineNumber":34,"author":{"gitId":"tashawan23"},"content":"        try {"},{"lineNumber":35,"author":{"gitId":"tashawan23"},"content":"            if (!dataFile.exists()) {"},{"lineNumber":36,"author":{"gitId":"tashawan23"},"content":"                File parent \u003d dataFile.getParentFile();"},{"lineNumber":37,"author":{"gitId":"tashawan23"},"content":"                parent.mkdir();"},{"lineNumber":38,"author":{"gitId":"tashawan23"},"content":"                dataFile.createNewFile();"},{"lineNumber":39,"author":{"gitId":"tashawan23"},"content":"            } else {"},{"lineNumber":40,"author":{"gitId":"tashawan23"},"content":"                fileToList(tasks);"},{"lineNumber":41,"author":{"gitId":"tashawan23"},"content":"            }"},{"lineNumber":42,"author":{"gitId":"tashawan23"},"content":"        } catch (IOException e) {"},{"lineNumber":43,"author":{"gitId":"tashawan23"},"content":"            System.out.println((e.getMessage()));"},{"lineNumber":44,"author":{"gitId":"tashawan23"},"content":"        }"},{"lineNumber":45,"author":{"gitId":"tashawan23"},"content":"    }"},{"lineNumber":46,"author":{"gitId":"tashawan23"},"content":""},{"lineNumber":47,"author":{"gitId":"tashawan23"},"content":"    /**"},{"lineNumber":48,"author":{"gitId":"tashawan23"},"content":"     * Reads a file and stores tasks in TaskList"},{"lineNumber":49,"author":{"gitId":"tashawan23"},"content":"     *"},{"lineNumber":50,"author":{"gitId":"tashawan23"},"content":"     * @param taskList to store tasks"},{"lineNumber":51,"author":{"gitId":"tashawan23"},"content":"     * */"},{"lineNumber":52,"author":{"gitId":"tashawan23"},"content":"    public void fileToList(TaskList taskList) {"},{"lineNumber":53,"author":{"gitId":"tashawan23"},"content":"        try {"},{"lineNumber":54,"author":{"gitId":"tashawan23"},"content":"            Scanner reader \u003d new Scanner(dataFile);"},{"lineNumber":55,"author":{"gitId":"tashawan23"},"content":"            while (reader.hasNextLine()) {"},{"lineNumber":56,"author":{"gitId":"tashawan23"},"content":"                String data \u003d reader.nextLine();"},{"lineNumber":57,"author":{"gitId":"tashawan23"},"content":"                String[] arr \u003d data.split(\" : \", 4);"},{"lineNumber":58,"author":{"gitId":"tashawan23"},"content":"                String cat \u003d arr[0];"},{"lineNumber":59,"author":{"gitId":"tashawan23"},"content":"                String completed \u003d arr[1];"},{"lineNumber":60,"author":{"gitId":"tashawan23"},"content":"                String des \u003d arr[2];"},{"lineNumber":61,"author":{"gitId":"tashawan23"},"content":"                if (cat.equals(\"E\")) {"},{"lineNumber":62,"author":{"gitId":"tashawan23"},"content":"                    String date \u003d arr[3];"},{"lineNumber":63,"author":{"gitId":"tashawan23"},"content":"                    Event event \u003d new Event(des, date);"},{"lineNumber":64,"author":{"gitId":"tashawan23"},"content":"                    if (completed \u003d\u003d \"1\") {"},{"lineNumber":65,"author":{"gitId":"tashawan23"},"content":"                        event.checkTask();"},{"lineNumber":66,"author":{"gitId":"tashawan23"},"content":"                    }"},{"lineNumber":67,"author":{"gitId":"tashawan23"},"content":"                    taskList.storeTask(event);"},{"lineNumber":68,"author":{"gitId":"tashawan23"},"content":"                } else if (cat.equals(\"D\")) {"},{"lineNumber":69,"author":{"gitId":"tashawan23"},"content":"                    String date \u003d arr[3];"},{"lineNumber":70,"author":{"gitId":"tashawan23"},"content":"                    Deadline deadline \u003d new Deadline(des, date);"},{"lineNumber":71,"author":{"gitId":"tashawan23"},"content":"                    if (completed.equals(\"1\")) {"},{"lineNumber":72,"author":{"gitId":"tashawan23"},"content":"                        deadline.checkTask();"},{"lineNumber":73,"author":{"gitId":"tashawan23"},"content":"                    }"},{"lineNumber":74,"author":{"gitId":"tashawan23"},"content":"                    taskList.storeTask(deadline);"},{"lineNumber":75,"author":{"gitId":"tashawan23"},"content":"                } else {"},{"lineNumber":76,"author":{"gitId":"tashawan23"},"content":"                    Todo todo \u003d new Todo(des);"},{"lineNumber":77,"author":{"gitId":"tashawan23"},"content":"                    if (completed.equals(\"1\")) {"},{"lineNumber":78,"author":{"gitId":"tashawan23"},"content":"                        todo.checkTask();"},{"lineNumber":79,"author":{"gitId":"tashawan23"},"content":"                    }"},{"lineNumber":80,"author":{"gitId":"tashawan23"},"content":"                    taskList.storeTask(todo);"},{"lineNumber":81,"author":{"gitId":"tashawan23"},"content":"                }"},{"lineNumber":82,"author":{"gitId":"tashawan23"},"content":"            }"},{"lineNumber":83,"author":{"gitId":"tashawan23"},"content":"            reader.close();"},{"lineNumber":84,"author":{"gitId":"tashawan23"},"content":"        } catch (FileNotFoundException e) {"},{"lineNumber":85,"author":{"gitId":"tashawan23"},"content":"            System.out.println(e.getMessage());"},{"lineNumber":86,"author":{"gitId":"tashawan23"},"content":"            e.printStackTrace();"},{"lineNumber":87,"author":{"gitId":"tashawan23"},"content":"        }"},{"lineNumber":88,"author":{"gitId":"tashawan23"},"content":"    }"},{"lineNumber":89,"author":{"gitId":"tashawan23"},"content":""},{"lineNumber":90,"author":{"gitId":"tashawan23"},"content":"    /**"},{"lineNumber":91,"author":{"gitId":"tashawan23"},"content":"     * Goes through TaskList and parses task into string"},{"lineNumber":92,"author":{"gitId":"tashawan23"},"content":"     *"},{"lineNumber":93,"author":{"gitId":"tashawan23"},"content":"     * @param tasks tasklist"},{"lineNumber":94,"author":{"gitId":"tashawan23"},"content":"     * @return String of tasks"},{"lineNumber":95,"author":{"gitId":"tashawan23"},"content":"     * */"},{"lineNumber":96,"author":{"gitId":"tashawan23"},"content":"    public String taskListToString(TaskList tasks) {"},{"lineNumber":97,"author":{"gitId":"tashawan23"},"content":"        String res \u003d \"\";"},{"lineNumber":98,"author":{"gitId":"tashawan23"},"content":"        ArrayList\u003cTask\u003e taskList \u003d tasks.getTaskList();"},{"lineNumber":99,"author":{"gitId":"tashawan23"},"content":"        for (Task task : taskList) {"},{"lineNumber":100,"author":{"gitId":"tashawan23"},"content":"            char cat \u003d task.getCat();"},{"lineNumber":101,"author":{"gitId":"tashawan23"},"content":"            String name \u003d task.getName();"},{"lineNumber":102,"author":{"gitId":"tashawan23"},"content":"            int checked;"},{"lineNumber":103,"author":{"gitId":"tashawan23"},"content":"            if (task.getCompleted()) {"},{"lineNumber":104,"author":{"gitId":"tashawan23"},"content":"                checked \u003d 1;"},{"lineNumber":105,"author":{"gitId":"tashawan23"},"content":"            } else {"},{"lineNumber":106,"author":{"gitId":"tashawan23"},"content":"                checked \u003d 0;"},{"lineNumber":107,"author":{"gitId":"tashawan23"},"content":"            }"},{"lineNumber":108,"author":{"gitId":"tashawan23"},"content":"            if (cat \u003d\u003d \u0027E\u0027) {"},{"lineNumber":109,"author":{"gitId":"tashawan23"},"content":"                Event event \u003d (Event) task;"},{"lineNumber":110,"author":{"gitId":"tashawan23"},"content":"                String date \u003d event.getTime();"},{"lineNumber":111,"author":{"gitId":"tashawan23"},"content":"                res +\u003d cat + \" : \" + checked + \" : \" + name + \" : \" + date + \"\\n\";"},{"lineNumber":112,"author":{"gitId":"tashawan23"},"content":"            } else if (cat \u003d\u003d \u0027D\u0027) {"},{"lineNumber":113,"author":{"gitId":"tashawan23"},"content":"                Deadline deadline \u003d (Deadline) task;"},{"lineNumber":114,"author":{"gitId":"tashawan23"},"content":"                String date \u003d deadline.getDeadline();"},{"lineNumber":115,"author":{"gitId":"tashawan23"},"content":"                res +\u003d cat + \" : \" + checked + \" : \" + name + \" : \" + date + \"\\n\";"},{"lineNumber":116,"author":{"gitId":"tashawan23"},"content":"            } else {"},{"lineNumber":117,"author":{"gitId":"tashawan23"},"content":"                res +\u003d cat + \" : \" + checked + \" : \" + name + \"\\n\";"},{"lineNumber":118,"author":{"gitId":"tashawan23"},"content":"            }"},{"lineNumber":119,"author":{"gitId":"tashawan23"},"content":"        }"},{"lineNumber":120,"author":{"gitId":"tashawan23"},"content":"        return res;"},{"lineNumber":121,"author":{"gitId":"tashawan23"},"content":"    }"},{"lineNumber":122,"author":{"gitId":"tashawan23"},"content":""},{"lineNumber":123,"author":{"gitId":"tashawan23"},"content":"    /** Writes the tasks in TaskList to file"},{"lineNumber":124,"author":{"gitId":"tashawan23"},"content":"     *"},{"lineNumber":125,"author":{"gitId":"tashawan23"},"content":"     * @param taskList tasks to be written"},{"lineNumber":126,"author":{"gitId":"tashawan23"},"content":"     * @throws IOException if there is an IO exception"},{"lineNumber":127,"author":{"gitId":"tashawan23"},"content":"     * */"},{"lineNumber":128,"author":{"gitId":"tashawan23"},"content":"    public void write(TaskList taskList) {"},{"lineNumber":129,"author":{"gitId":"tashawan23"},"content":"        try {"},{"lineNumber":130,"author":{"gitId":"tashawan23"},"content":"            writer \u003d new FileWriter(dataFile);"},{"lineNumber":131,"author":{"gitId":"tashawan23"},"content":"            writer.write(taskListToString(taskList));"},{"lineNumber":132,"author":{"gitId":"tashawan23"},"content":"            writer.close();"},{"lineNumber":133,"author":{"gitId":"tashawan23"},"content":"        } catch (IOException e) {"},{"lineNumber":134,"author":{"gitId":"tashawan23"},"content":"            System.out.println((e.getMessage()));"},{"lineNumber":135,"author":{"gitId":"tashawan23"},"content":"        }"},{"lineNumber":136,"author":{"gitId":"tashawan23"},"content":"    }"},{"lineNumber":137,"author":{"gitId":"tashawan23"},"content":""},{"lineNumber":138,"author":{"gitId":"tashawan23"},"content":"}"}],"authorContributionMap":{"tashawan23":138}},{"path":"src/main/java/duke/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tashawan23"},"content":"package duke;"},{"lineNumber":2,"author":{"gitId":"tashawan23"},"content":""},{"lineNumber":3,"author":{"gitId":"tashawan23"},"content":"import java.util.ArrayList;"},{"lineNumber":4,"author":{"gitId":"tashawan23"},"content":""},{"lineNumber":5,"author":{"gitId":"tashawan23"},"content":"import duke.Tasks.Task;"},{"lineNumber":6,"author":{"gitId":"tashawan23"},"content":""},{"lineNumber":7,"author":{"gitId":"tashawan23"},"content":""},{"lineNumber":8,"author":{"gitId":"tashawan23"},"content":"public class TaskList {"},{"lineNumber":9,"author":{"gitId":"tashawan23"},"content":"    /** Array list of tasks */"},{"lineNumber":10,"author":{"gitId":"tashawan23"},"content":"    private ArrayList\u003cTask\u003e taskList;"},{"lineNumber":11,"author":{"gitId":"tashawan23"},"content":""},{"lineNumber":12,"author":{"gitId":"tashawan23"},"content":"    public TaskList() {"},{"lineNumber":13,"author":{"gitId":"tashawan23"},"content":"        taskList \u003d new ArrayList\u003c\u003e();"},{"lineNumber":14,"author":{"gitId":"tashawan23"},"content":"    }"},{"lineNumber":15,"author":{"gitId":"tashawan23"},"content":""},{"lineNumber":16,"author":{"gitId":"tashawan23"},"content":"    /** Returns tasklist */"},{"lineNumber":17,"author":{"gitId":"tashawan23"},"content":"    public ArrayList\u003cTask\u003e getTaskList() {"},{"lineNumber":18,"author":{"gitId":"tashawan23"},"content":"        return this.taskList;"},{"lineNumber":19,"author":{"gitId":"tashawan23"},"content":"    }"},{"lineNumber":20,"author":{"gitId":"tashawan23"},"content":""},{"lineNumber":21,"author":{"gitId":"tashawan23"},"content":"    /** Retrieves task from TaskList and marks"},{"lineNumber":22,"author":{"gitId":"tashawan23"},"content":"     * it as completed"},{"lineNumber":23,"author":{"gitId":"tashawan23"},"content":"     *"},{"lineNumber":24,"author":{"gitId":"tashawan23"},"content":"     * @param index position of task in TaskList"},{"lineNumber":25,"author":{"gitId":"tashawan23"},"content":"     * */"},{"lineNumber":26,"author":{"gitId":"tashawan23"},"content":"    public void markComplete(int index) {"},{"lineNumber":27,"author":{"gitId":"tashawan23"},"content":"        Task temp \u003d this.taskList.get(index - 1);"},{"lineNumber":28,"author":{"gitId":"tashawan23"},"content":"        temp.checkTask();"},{"lineNumber":29,"author":{"gitId":"tashawan23"},"content":"    }"},{"lineNumber":30,"author":{"gitId":"tashawan23"},"content":""},{"lineNumber":31,"author":{"gitId":"tashawan23"},"content":"    /** Removes task from TaskList"},{"lineNumber":32,"author":{"gitId":"tashawan23"},"content":"     *"},{"lineNumber":33,"author":{"gitId":"tashawan23"},"content":"     * @param task index of task in TaskList"},{"lineNumber":34,"author":{"gitId":"tashawan23"},"content":"     * */"},{"lineNumber":35,"author":{"gitId":"tashawan23"},"content":"    public void deleteTask(int task) {"},{"lineNumber":36,"author":{"gitId":"tashawan23"},"content":"        this.taskList.remove(task - 1);"},{"lineNumber":37,"author":{"gitId":"tashawan23"},"content":"    }"},{"lineNumber":38,"author":{"gitId":"tashawan23"},"content":""},{"lineNumber":39,"author":{"gitId":"tashawan23"},"content":"    /** Adds new task to TaskList"},{"lineNumber":40,"author":{"gitId":"tashawan23"},"content":"     *"},{"lineNumber":41,"author":{"gitId":"tashawan23"},"content":"     * @param task to be added"},{"lineNumber":42,"author":{"gitId":"tashawan23"},"content":"     * */"},{"lineNumber":43,"author":{"gitId":"tashawan23"},"content":"    public void storeTask(Task task) {"},{"lineNumber":44,"author":{"gitId":"tashawan23"},"content":"        this.taskList.add(task);"},{"lineNumber":45,"author":{"gitId":"tashawan23"},"content":"    }"},{"lineNumber":46,"author":{"gitId":"tashawan23"},"content":""},{"lineNumber":47,"author":{"gitId":"tashawan23"},"content":"    /** Retrieves and returns task from TaskList"},{"lineNumber":48,"author":{"gitId":"tashawan23"},"content":"     *"},{"lineNumber":49,"author":{"gitId":"tashawan23"},"content":"     * @param index of task in TaskList"},{"lineNumber":50,"author":{"gitId":"tashawan23"},"content":"     * @return Chosen Task*/"},{"lineNumber":51,"author":{"gitId":"tashawan23"},"content":"    public Task getTask(int index) {"},{"lineNumber":52,"author":{"gitId":"tashawan23"},"content":"        return this.taskList.get(index - 1);"},{"lineNumber":53,"author":{"gitId":"tashawan23"},"content":"    }"},{"lineNumber":54,"author":{"gitId":"tashawan23"},"content":""},{"lineNumber":55,"author":{"gitId":"tashawan23"},"content":"    /** Find tasks that matches the given string"},{"lineNumber":56,"author":{"gitId":"tashawan23"},"content":"     *"},{"lineNumber":57,"author":{"gitId":"tashawan23"},"content":"     * @param s string to search for"},{"lineNumber":58,"author":{"gitId":"tashawan23"},"content":"     */"},{"lineNumber":59,"author":{"gitId":"tashawan23"},"content":"    public String findTasks(String s) {"},{"lineNumber":60,"author":{"gitId":"tashawan23"},"content":"        ArrayList\u003cTask\u003e matched \u003d new ArrayList\u003c\u003e();"},{"lineNumber":61,"author":{"gitId":"tashawan23"},"content":"        String msg \u003d \"\";"},{"lineNumber":62,"author":{"gitId":"tashawan23"},"content":"        for (Task t : taskList) {"},{"lineNumber":63,"author":{"gitId":"tashawan23"},"content":"            String name \u003d t.getName();"},{"lineNumber":64,"author":{"gitId":"tashawan23"},"content":"            if (name.contains(s)) {"},{"lineNumber":65,"author":{"gitId":"tashawan23"},"content":"                matched.add(t);"},{"lineNumber":66,"author":{"gitId":"tashawan23"},"content":"            }"},{"lineNumber":67,"author":{"gitId":"tashawan23"},"content":"        }"},{"lineNumber":68,"author":{"gitId":"tashawan23"},"content":"        if (matched.size() \u003e\u003d 1) {"},{"lineNumber":69,"author":{"gitId":"tashawan23"},"content":"            msg +\u003d \"Duchess: Here are the matching tasks in your list:\";"},{"lineNumber":70,"author":{"gitId":"tashawan23"},"content":"            for (int i \u003d 0; i \u003c matched.size(); i++) {"},{"lineNumber":71,"author":{"gitId":"tashawan23"},"content":"                msg +\u003d \"\\n\" + (i + 1) + \". \" + matched.get(i);"},{"lineNumber":72,"author":{"gitId":"tashawan23"},"content":"            }"},{"lineNumber":73,"author":{"gitId":"tashawan23"},"content":"        } else {"},{"lineNumber":74,"author":{"gitId":"tashawan23"},"content":"            msg +\u003d \"Duchess: No matching tasks found!\";"},{"lineNumber":75,"author":{"gitId":"tashawan23"},"content":"        }"},{"lineNumber":76,"author":{"gitId":"tashawan23"},"content":"        return msg;"},{"lineNumber":77,"author":{"gitId":"tashawan23"},"content":"    }"},{"lineNumber":78,"author":{"gitId":"tashawan23"},"content":"}"}],"authorContributionMap":{"tashawan23":78}},{"path":"src/main/java/duke/Tasks/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tashawan23"},"content":"package duke.Tasks;"},{"lineNumber":2,"author":{"gitId":"tashawan23"},"content":""},{"lineNumber":3,"author":{"gitId":"tashawan23"},"content":"import java.time.LocalDate;"},{"lineNumber":4,"author":{"gitId":"tashawan23"},"content":"import java.time.format.DateTimeFormatter;"},{"lineNumber":5,"author":{"gitId":"tashawan23"},"content":""},{"lineNumber":6,"author":{"gitId":"tashawan23"},"content":"public class Deadline extends Task {"},{"lineNumber":7,"author":{"gitId":"tashawan23"},"content":"    /** Date of deadline */"},{"lineNumber":8,"author":{"gitId":"tashawan23"},"content":"    protected LocalDate by;"},{"lineNumber":9,"author":{"gitId":"tashawan23"},"content":""},{"lineNumber":10,"author":{"gitId":"tashawan23"},"content":"    /** Constructs a new deadline task"},{"lineNumber":11,"author":{"gitId":"tashawan23"},"content":"     *"},{"lineNumber":12,"author":{"gitId":"tashawan23"},"content":"     * @param name of task"},{"lineNumber":13,"author":{"gitId":"tashawan23"},"content":"     * @param by deadline"},{"lineNumber":14,"author":{"gitId":"tashawan23"},"content":"     */"},{"lineNumber":15,"author":{"gitId":"tashawan23"},"content":"    public Deadline(String name, String by) {"},{"lineNumber":16,"author":{"gitId":"tashawan23"},"content":"        super(name);"},{"lineNumber":17,"author":{"gitId":"tashawan23"},"content":"        this.by \u003d LocalDate.parse(by);"},{"lineNumber":18,"author":{"gitId":"tashawan23"},"content":"        this.cat \u003d \u0027D\u0027;"},{"lineNumber":19,"author":{"gitId":"tashawan23"},"content":"    }"},{"lineNumber":20,"author":{"gitId":"tashawan23"},"content":""},{"lineNumber":21,"author":{"gitId":"tashawan23"},"content":"    /** Returns deadline in the format yyy-MM-dd"},{"lineNumber":22,"author":{"gitId":"tashawan23"},"content":"     *"},{"lineNumber":23,"author":{"gitId":"tashawan23"},"content":"     * @return Deadline as a string"},{"lineNumber":24,"author":{"gitId":"tashawan23"},"content":"     * */"},{"lineNumber":25,"author":{"gitId":"tashawan23"},"content":"    public String getDeadline() {"},{"lineNumber":26,"author":{"gitId":"tashawan23"},"content":"        return this.by.format(DateTimeFormatter.ofPattern(\"yyyy-MM-dd\"));"},{"lineNumber":27,"author":{"gitId":"tashawan23"},"content":"    }"},{"lineNumber":28,"author":{"gitId":"tashawan23"},"content":""},{"lineNumber":29,"author":{"gitId":"tashawan23"},"content":"    /** Returns deadline in the format MMM d yyyy"},{"lineNumber":30,"author":{"gitId":"tashawan23"},"content":"     *"},{"lineNumber":31,"author":{"gitId":"tashawan23"},"content":"     * @return Deadline as a string */"},{"lineNumber":32,"author":{"gitId":"tashawan23"},"content":"    public String getFormattedDeadline() {"},{"lineNumber":33,"author":{"gitId":"tashawan23"},"content":"        return this.by.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\"));"},{"lineNumber":34,"author":{"gitId":"tashawan23"},"content":"    }"},{"lineNumber":35,"author":{"gitId":"tashawan23"},"content":""},{"lineNumber":36,"author":{"gitId":"tashawan23"},"content":"    @Override"},{"lineNumber":37,"author":{"gitId":"tashawan23"},"content":"    public String toString() {"},{"lineNumber":38,"author":{"gitId":"tashawan23"},"content":"        return \"[\" + this.cat + \"] \" + super.toString() + \" (by: \" + this.getFormattedDeadline() + \")\";"},{"lineNumber":39,"author":{"gitId":"tashawan23"},"content":"    }"},{"lineNumber":40,"author":{"gitId":"tashawan23"},"content":""},{"lineNumber":41,"author":{"gitId":"tashawan23"},"content":"}"},{"lineNumber":42,"author":{"gitId":"tashawan23"},"content":""}],"authorContributionMap":{"tashawan23":42}},{"path":"src/main/java/duke/Tasks/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tashawan23"},"content":"package duke.Tasks;"},{"lineNumber":2,"author":{"gitId":"tashawan23"},"content":""},{"lineNumber":3,"author":{"gitId":"tashawan23"},"content":"import java.time.LocalDate;"},{"lineNumber":4,"author":{"gitId":"tashawan23"},"content":"import java.time.format.DateTimeFormatter;"},{"lineNumber":5,"author":{"gitId":"tashawan23"},"content":""},{"lineNumber":6,"author":{"gitId":"tashawan23"},"content":"public class Event extends Task {"},{"lineNumber":7,"author":{"gitId":"tashawan23"},"content":"    /** Time of event */"},{"lineNumber":8,"author":{"gitId":"tashawan23"},"content":"    protected LocalDate time;"},{"lineNumber":9,"author":{"gitId":"tashawan23"},"content":""},{"lineNumber":10,"author":{"gitId":"tashawan23"},"content":"    /** Constructs a new event"},{"lineNumber":11,"author":{"gitId":"tashawan23"},"content":"     *"},{"lineNumber":12,"author":{"gitId":"tashawan23"},"content":"     * @param name of event"},{"lineNumber":13,"author":{"gitId":"tashawan23"},"content":"     * @param time of event"},{"lineNumber":14,"author":{"gitId":"tashawan23"},"content":"     * */"},{"lineNumber":15,"author":{"gitId":"tashawan23"},"content":""},{"lineNumber":16,"author":{"gitId":"tashawan23"},"content":"    public Event(String name, String time) {"},{"lineNumber":17,"author":{"gitId":"tashawan23"},"content":"        super(name);"},{"lineNumber":18,"author":{"gitId":"tashawan23"},"content":"        this.time \u003d LocalDate.parse(time);"},{"lineNumber":19,"author":{"gitId":"tashawan23"},"content":"        this.cat \u003d \u0027E\u0027;"},{"lineNumber":20,"author":{"gitId":"tashawan23"},"content":"    }"},{"lineNumber":21,"author":{"gitId":"tashawan23"},"content":""},{"lineNumber":22,"author":{"gitId":"tashawan23"},"content":"    /** Returns time of event in the format yyyy-MM-dd"},{"lineNumber":23,"author":{"gitId":"tashawan23"},"content":"     *"},{"lineNumber":24,"author":{"gitId":"tashawan23"},"content":"     * @return Time as a string"},{"lineNumber":25,"author":{"gitId":"tashawan23"},"content":"     * */"},{"lineNumber":26,"author":{"gitId":"tashawan23"},"content":"    public String getTime() {"},{"lineNumber":27,"author":{"gitId":"tashawan23"},"content":"        return this.time.format(DateTimeFormatter.ofPattern(\"yyyy-MM-dd\"));"},{"lineNumber":28,"author":{"gitId":"tashawan23"},"content":"    }"},{"lineNumber":29,"author":{"gitId":"tashawan23"},"content":""},{"lineNumber":30,"author":{"gitId":"tashawan23"},"content":"    /** Returns time of event in the format MMM d yyyy"},{"lineNumber":31,"author":{"gitId":"tashawan23"},"content":"     *"},{"lineNumber":32,"author":{"gitId":"tashawan23"},"content":"     * @return Time as a string"},{"lineNumber":33,"author":{"gitId":"tashawan23"},"content":"     * */"},{"lineNumber":34,"author":{"gitId":"tashawan23"},"content":"    public String getFormattedTime() {"},{"lineNumber":35,"author":{"gitId":"tashawan23"},"content":"        return this.time.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\"));"},{"lineNumber":36,"author":{"gitId":"tashawan23"},"content":"    }"},{"lineNumber":37,"author":{"gitId":"tashawan23"},"content":""},{"lineNumber":38,"author":{"gitId":"tashawan23"},"content":""},{"lineNumber":39,"author":{"gitId":"tashawan23"},"content":"    @Override"},{"lineNumber":40,"author":{"gitId":"tashawan23"},"content":"    public String toString() {"},{"lineNumber":41,"author":{"gitId":"tashawan23"},"content":"        return \"[\" + this.cat + \"] \" + super.toString() + \" (at: \" + this.getFormattedTime() + \")\";"},{"lineNumber":42,"author":{"gitId":"tashawan23"},"content":"    }"},{"lineNumber":43,"author":{"gitId":"tashawan23"},"content":"}"}],"authorContributionMap":{"tashawan23":43}},{"path":"src/main/java/duke/Tasks/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tashawan23"},"content":"package duke.Tasks;"},{"lineNumber":2,"author":{"gitId":"tashawan23"},"content":""},{"lineNumber":3,"author":{"gitId":"tashawan23"},"content":"public class Task {"},{"lineNumber":4,"author":{"gitId":"tashawan23"},"content":"    /** Name of task */"},{"lineNumber":5,"author":{"gitId":"tashawan23"},"content":"    protected String name;"},{"lineNumber":6,"author":{"gitId":"tashawan23"},"content":""},{"lineNumber":7,"author":{"gitId":"tashawan23"},"content":"    /** Boolean to mark whether task is completed */"},{"lineNumber":8,"author":{"gitId":"tashawan23"},"content":"    protected boolean isCompleted;"},{"lineNumber":9,"author":{"gitId":"tashawan23"},"content":""},{"lineNumber":10,"author":{"gitId":"tashawan23"},"content":"    /** Label the category of the task */"},{"lineNumber":11,"author":{"gitId":"tashawan23"},"content":"    protected char cat;"},{"lineNumber":12,"author":{"gitId":"tashawan23"},"content":""},{"lineNumber":13,"author":{"gitId":"tashawan23"},"content":"    /** Constructs a new task"},{"lineNumber":14,"author":{"gitId":"tashawan23"},"content":"     *"},{"lineNumber":15,"author":{"gitId":"tashawan23"},"content":"     * @param name of task"},{"lineNumber":16,"author":{"gitId":"tashawan23"},"content":"     */"},{"lineNumber":17,"author":{"gitId":"tashawan23"},"content":"    public Task(String name) {"},{"lineNumber":18,"author":{"gitId":"tashawan23"},"content":"        this.name \u003d name;"},{"lineNumber":19,"author":{"gitId":"tashawan23"},"content":"        this.isCompleted \u003d false;"},{"lineNumber":20,"author":{"gitId":"tashawan23"},"content":"    }"},{"lineNumber":21,"author":{"gitId":"tashawan23"},"content":""},{"lineNumber":22,"author":{"gitId":"tashawan23"},"content":"    /** Returns the category of task"},{"lineNumber":23,"author":{"gitId":"tashawan23"},"content":"     *"},{"lineNumber":24,"author":{"gitId":"tashawan23"},"content":"     * @return Category label of task as a char"},{"lineNumber":25,"author":{"gitId":"tashawan23"},"content":"     */"},{"lineNumber":26,"author":{"gitId":"tashawan23"},"content":"    public char getCat() {"},{"lineNumber":27,"author":{"gitId":"tashawan23"},"content":"        return this.cat;"},{"lineNumber":28,"author":{"gitId":"tashawan23"},"content":"    }"},{"lineNumber":29,"author":{"gitId":"tashawan23"},"content":""},{"lineNumber":30,"author":{"gitId":"tashawan23"},"content":"    /** Returns the name of task"},{"lineNumber":31,"author":{"gitId":"tashawan23"},"content":"     *"},{"lineNumber":32,"author":{"gitId":"tashawan23"},"content":"     * @return Name of task as string"},{"lineNumber":33,"author":{"gitId":"tashawan23"},"content":"     */"},{"lineNumber":34,"author":{"gitId":"tashawan23"},"content":"    public String getName() {"},{"lineNumber":35,"author":{"gitId":"tashawan23"},"content":"        return this.name;"},{"lineNumber":36,"author":{"gitId":"tashawan23"},"content":"    }"},{"lineNumber":37,"author":{"gitId":"tashawan23"},"content":""},{"lineNumber":38,"author":{"gitId":"tashawan23"},"content":"    /** Returns boolean of whether task has been completed"},{"lineNumber":39,"author":{"gitId":"tashawan23"},"content":"     *"},{"lineNumber":40,"author":{"gitId":"tashawan23"},"content":"     * @return Boolean"},{"lineNumber":41,"author":{"gitId":"tashawan23"},"content":"     * */"},{"lineNumber":42,"author":{"gitId":"tashawan23"},"content":"    public boolean getCompleted() {"},{"lineNumber":43,"author":{"gitId":"tashawan23"},"content":"        return this.isCompleted;"},{"lineNumber":44,"author":{"gitId":"tashawan23"},"content":"    }"},{"lineNumber":45,"author":{"gitId":"tashawan23"},"content":""},{"lineNumber":46,"author":{"gitId":"tashawan23"},"content":"    /** Marks task as completed */"},{"lineNumber":47,"author":{"gitId":"tashawan23"},"content":"    public void checkTask() {"},{"lineNumber":48,"author":{"gitId":"tashawan23"},"content":"        this.isCompleted \u003d true;"},{"lineNumber":49,"author":{"gitId":"tashawan23"},"content":"    }"},{"lineNumber":50,"author":{"gitId":"tashawan23"},"content":""},{"lineNumber":51,"author":{"gitId":"tashawan23"},"content":"    /** Returns an icon to mark whether task has been completed"},{"lineNumber":52,"author":{"gitId":"tashawan23"},"content":"     *"},{"lineNumber":53,"author":{"gitId":"tashawan23"},"content":"     * @return Icon as string"},{"lineNumber":54,"author":{"gitId":"tashawan23"},"content":"     * */"},{"lineNumber":55,"author":{"gitId":"tashawan23"},"content":"    public String getStatusIcon() {"},{"lineNumber":56,"author":{"gitId":"tashawan23"},"content":"        return (isCompleted ? \"X\" : \" \"); //return tick or blank"},{"lineNumber":57,"author":{"gitId":"tashawan23"},"content":"    }"},{"lineNumber":58,"author":{"gitId":"tashawan23"},"content":""},{"lineNumber":59,"author":{"gitId":"tashawan23"},"content":"    public String toString() {"},{"lineNumber":60,"author":{"gitId":"tashawan23"},"content":"        return \"[\" + this.getStatusIcon() + \"] \" + this.name;"},{"lineNumber":61,"author":{"gitId":"tashawan23"},"content":"    }"},{"lineNumber":62,"author":{"gitId":"tashawan23"},"content":"}"}],"authorContributionMap":{"tashawan23":62}},{"path":"src/main/java/duke/Tasks/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tashawan23"},"content":"package duke.Tasks;"},{"lineNumber":2,"author":{"gitId":"tashawan23"},"content":""},{"lineNumber":3,"author":{"gitId":"tashawan23"},"content":"public class Todo extends Task {"},{"lineNumber":4,"author":{"gitId":"tashawan23"},"content":""},{"lineNumber":5,"author":{"gitId":"tashawan23"},"content":"    /** Constructs new Todo task"},{"lineNumber":6,"author":{"gitId":"tashawan23"},"content":"     *"},{"lineNumber":7,"author":{"gitId":"tashawan23"},"content":"     * @param name todo task name"},{"lineNumber":8,"author":{"gitId":"tashawan23"},"content":"     */"},{"lineNumber":9,"author":{"gitId":"tashawan23"},"content":""},{"lineNumber":10,"author":{"gitId":"tashawan23"},"content":"    public Todo(String name) {"},{"lineNumber":11,"author":{"gitId":"tashawan23"},"content":"        super(name);"},{"lineNumber":12,"author":{"gitId":"tashawan23"},"content":"        this.cat \u003d \u0027T\u0027;"},{"lineNumber":13,"author":{"gitId":"tashawan23"},"content":"    }"},{"lineNumber":14,"author":{"gitId":"tashawan23"},"content":""},{"lineNumber":15,"author":{"gitId":"tashawan23"},"content":"    @Override"},{"lineNumber":16,"author":{"gitId":"tashawan23"},"content":"    public String toString() {"},{"lineNumber":17,"author":{"gitId":"tashawan23"},"content":"        return \"[\" + this.cat + \"] \" + super.toString();"},{"lineNumber":18,"author":{"gitId":"tashawan23"},"content":"    }"},{"lineNumber":19,"author":{"gitId":"tashawan23"},"content":"}"}],"authorContributionMap":{"tashawan23":19}},{"path":"src/main/java/duke/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tashawan23"},"content":"package duke;"},{"lineNumber":2,"author":{"gitId":"tashawan23"},"content":""},{"lineNumber":3,"author":{"gitId":"tashawan23"},"content":"import java.util.ArrayList;"},{"lineNumber":4,"author":{"gitId":"tashawan23"},"content":"import java.util.Scanner;"},{"lineNumber":5,"author":{"gitId":"tashawan23"},"content":""},{"lineNumber":6,"author":{"gitId":"tashawan23"},"content":"import duke.Tasks.Task;"},{"lineNumber":7,"author":{"gitId":"tashawan23"},"content":""},{"lineNumber":8,"author":{"gitId":"tashawan23"},"content":""},{"lineNumber":9,"author":{"gitId":"tashawan23"},"content":"public class Ui {"},{"lineNumber":10,"author":{"gitId":"tashawan23"},"content":"    /** Scanner instance to scan user input*/"},{"lineNumber":11,"author":{"gitId":"tashawan23"},"content":"    private Scanner sc;"},{"lineNumber":12,"author":{"gitId":"tashawan23"},"content":""},{"lineNumber":13,"author":{"gitId":"tashawan23"},"content":"    public Ui() {"},{"lineNumber":14,"author":{"gitId":"tashawan23"},"content":"    }"},{"lineNumber":15,"author":{"gitId":"tashawan23"},"content":"    /** Prints message to greet user */"},{"lineNumber":16,"author":{"gitId":"tashawan23"},"content":"    public static String greetUser() {"},{"lineNumber":17,"author":{"gitId":"tashawan23"},"content":"        String msg \u003d \"Duchess: Hello, Duchess here. What can i do for you?\";"},{"lineNumber":18,"author":{"gitId":"tashawan23"},"content":"        return msg;"},{"lineNumber":19,"author":{"gitId":"tashawan23"},"content":"    }"},{"lineNumber":20,"author":{"gitId":"tashawan23"},"content":""},{"lineNumber":21,"author":{"gitId":"tashawan23"},"content":"    /** Prints message to say goodbye to user */"},{"lineNumber":22,"author":{"gitId":"tashawan23"},"content":"    public String sayGoodbye() {"},{"lineNumber":23,"author":{"gitId":"tashawan23"},"content":"        String msg \u003d \"Duchess: Bye, Have an awesome day!\";"},{"lineNumber":24,"author":{"gitId":"tashawan23"},"content":"        return msg;"},{"lineNumber":25,"author":{"gitId":"tashawan23"},"content":"    }"},{"lineNumber":26,"author":{"gitId":"tashawan23"},"content":""},{"lineNumber":27,"author":{"gitId":"tashawan23"},"content":"    /** Prints tasks in TaskList"},{"lineNumber":28,"author":{"gitId":"tashawan23"},"content":"     *"},{"lineNumber":29,"author":{"gitId":"tashawan23"},"content":"     * * @param taskList of tasks to print"},{"lineNumber":30,"author":{"gitId":"tashawan23"},"content":"     * */"},{"lineNumber":31,"author":{"gitId":"tashawan23"},"content":"    public String printList(ArrayList\u003cTask\u003e taskList) {"},{"lineNumber":32,"author":{"gitId":"tashawan23"},"content":"        String msg \u003d \"Duchess: Here are the tasks in your list:\";"},{"lineNumber":33,"author":{"gitId":"tashawan23"},"content":"        for (int i \u003d 0; i \u003c taskList.size(); i++) {"},{"lineNumber":34,"author":{"gitId":"tashawan23"},"content":"            msg +\u003d \"\\n\" + (i + 1) + \". \" + taskList.get(i);"},{"lineNumber":35,"author":{"gitId":"tashawan23"},"content":"        }"},{"lineNumber":36,"author":{"gitId":"tashawan23"},"content":"        return msg;"},{"lineNumber":37,"author":{"gitId":"tashawan23"},"content":"    }"},{"lineNumber":38,"author":{"gitId":"tashawan23"},"content":""},{"lineNumber":39,"author":{"gitId":"tashawan23"},"content":"    /** Prints message when task is checked off successfully"},{"lineNumber":40,"author":{"gitId":"tashawan23"},"content":"     *"},{"lineNumber":41,"author":{"gitId":"tashawan23"},"content":"     * @param task to be checked"},{"lineNumber":42,"author":{"gitId":"tashawan23"},"content":"     * */"},{"lineNumber":43,"author":{"gitId":"tashawan23"},"content":"    public String printChecked(Task task) {"},{"lineNumber":44,"author":{"gitId":"tashawan23"},"content":"        String msg \u003d \"Duchess: Woohoo I\u0027ve checked off this task:\" + \"\\n\" + task;"},{"lineNumber":45,"author":{"gitId":"tashawan23"},"content":"        return msg;"},{"lineNumber":46,"author":{"gitId":"tashawan23"},"content":"    }"},{"lineNumber":47,"author":{"gitId":"tashawan23"},"content":""},{"lineNumber":48,"author":{"gitId":"tashawan23"},"content":"    /** Prints message when task is successfully deleted"},{"lineNumber":49,"author":{"gitId":"tashawan23"},"content":"     *"},{"lineNumber":50,"author":{"gitId":"tashawan23"},"content":"     * @param taskList of tasks"},{"lineNumber":51,"author":{"gitId":"tashawan23"},"content":"     * @param task to be deleted"},{"lineNumber":52,"author":{"gitId":"tashawan23"},"content":"     * */"},{"lineNumber":53,"author":{"gitId":"tashawan23"},"content":"    public String printDeleted(ArrayList\u003cTask\u003e taskList, Task task) {"},{"lineNumber":54,"author":{"gitId":"tashawan23"},"content":"        String msg \u003d \"Duchess: As requested, i have removed this task:\" + \"\\n\""},{"lineNumber":55,"author":{"gitId":"tashawan23"},"content":"                + task + \"\\n\" + \"U have \" + taskList.size() + \" tasks in the list now :)\";"},{"lineNumber":56,"author":{"gitId":"tashawan23"},"content":"        return msg;"},{"lineNumber":57,"author":{"gitId":"tashawan23"},"content":"    }"},{"lineNumber":58,"author":{"gitId":"tashawan23"},"content":""},{"lineNumber":59,"author":{"gitId":"tashawan23"},"content":"    /** Prints message when task is successfully added"},{"lineNumber":60,"author":{"gitId":"tashawan23"},"content":"     *"},{"lineNumber":61,"author":{"gitId":"tashawan23"},"content":"     * @param taskList of tasks"},{"lineNumber":62,"author":{"gitId":"tashawan23"},"content":"     * @param task to be added"},{"lineNumber":63,"author":{"gitId":"tashawan23"},"content":"     * */"},{"lineNumber":64,"author":{"gitId":"tashawan23"},"content":"    public String printAdded(ArrayList\u003cTask\u003e taskList, Task task) {"},{"lineNumber":65,"author":{"gitId":"tashawan23"},"content":"        String msg \u003d \"Duchess: Great! I have added:\" + \"\\n\" + task + \"\\n\" + \"U have \" + taskList.size()"},{"lineNumber":66,"author":{"gitId":"tashawan23"},"content":"                + \" tasks in the list now :)\";"},{"lineNumber":67,"author":{"gitId":"tashawan23"},"content":"        return msg;"},{"lineNumber":68,"author":{"gitId":"tashawan23"},"content":"    }"},{"lineNumber":69,"author":{"gitId":"tashawan23"},"content":"}"}],"authorContributionMap":{"tashawan23":69}},{"path":"src/main/resources/view/DialogBox.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"tashawan23"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"},{"lineNumber":2,"author":{"gitId":"tashawan23"},"content":""},{"lineNumber":3,"author":{"gitId":"tashawan23"},"content":"\u003c?import javafx.geometry.Insets?\u003e"},{"lineNumber":4,"author":{"gitId":"tashawan23"},"content":"\u003c?import javafx.scene.control.Label?\u003e"},{"lineNumber":5,"author":{"gitId":"tashawan23"},"content":"\u003c?import javafx.scene.image.ImageView?\u003e"},{"lineNumber":6,"author":{"gitId":"tashawan23"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e"},{"lineNumber":7,"author":{"gitId":"tashawan23"},"content":""},{"lineNumber":8,"author":{"gitId":"tashawan23"},"content":"\u003cfx:root alignment\u003d\"TOP_RIGHT\" maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\" prefWidth\u003d\"400.0\" type\u003d\"javafx.scene.layout.HBox\" xmlns\u003d\"http://javafx.com/javafx/8.0.171\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e"},{"lineNumber":9,"author":{"gitId":"tashawan23"},"content":"    \u003cchildren\u003e"},{"lineNumber":10,"author":{"gitId":"tashawan23"},"content":"        \u003cLabel fx:id\u003d\"dialog\" text\u003d\"Label\" wrapText\u003d\"true\" /\u003e"},{"lineNumber":11,"author":{"gitId":"tashawan23"},"content":"        \u003cImageView fx:id\u003d\"displayPicture\" fitHeight\u003d\"99.0\" fitWidth\u003d\"99.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\" /\u003e"},{"lineNumber":12,"author":{"gitId":"tashawan23"},"content":"    \u003c/children\u003e"},{"lineNumber":13,"author":{"gitId":"tashawan23"},"content":"    \u003cpadding\u003e"},{"lineNumber":14,"author":{"gitId":"tashawan23"},"content":"        \u003cInsets bottom\u003d\"15.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"15.0\" /\u003e"},{"lineNumber":15,"author":{"gitId":"tashawan23"},"content":"    \u003c/padding\u003e"},{"lineNumber":16,"author":{"gitId":"tashawan23"},"content":"\u003c/fx:root\u003e"}],"authorContributionMap":{"tashawan23":16}},{"path":"src/main/resources/view/MainWindow.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"tashawan23"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"},{"lineNumber":2,"author":{"gitId":"tashawan23"},"content":""},{"lineNumber":3,"author":{"gitId":"tashawan23"},"content":""},{"lineNumber":4,"author":{"gitId":"tashawan23"},"content":"\u003c?import javafx.scene.control.Button?\u003e"},{"lineNumber":5,"author":{"gitId":"tashawan23"},"content":"\u003c?import javafx.scene.control.ScrollPane?\u003e"},{"lineNumber":6,"author":{"gitId":"tashawan23"},"content":"\u003c?import javafx.scene.control.TextField?\u003e"},{"lineNumber":7,"author":{"gitId":"tashawan23"},"content":"\u003c?import javafx.scene.layout.AnchorPane?\u003e"},{"lineNumber":8,"author":{"gitId":"tashawan23"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e"},{"lineNumber":9,"author":{"gitId":"tashawan23"},"content":""},{"lineNumber":10,"author":{"gitId":"tashawan23"},"content":"\u003cAnchorPane maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefHeight\u003d\"600.0\" prefWidth\u003d\"400.0\" xmlns\u003d\"http://javafx.com/javafx/8.0.171\" xmlns:fx\u003d\"http://javafx.com/fxml/1\" fx:controller\u003d\"duke.MainWindow\"\u003e"},{"lineNumber":11,"author":{"gitId":"tashawan23"},"content":"    \u003cchildren\u003e"},{"lineNumber":12,"author":{"gitId":"tashawan23"},"content":"        \u003cTextField fx:id\u003d\"userInput\" layoutY\u003d\"558.0\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"324.0\" AnchorPane.bottomAnchor\u003d\"1.0\" /\u003e"},{"lineNumber":13,"author":{"gitId":"tashawan23"},"content":"        \u003cButton fx:id\u003d\"sendButton\" layoutX\u003d\"324.0\" layoutY\u003d\"558.0\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"76.0\" text\u003d\"Send\" /\u003e"},{"lineNumber":14,"author":{"gitId":"tashawan23"},"content":"        \u003cScrollPane fx:id\u003d\"scrollPane\" hbarPolicy\u003d\"NEVER\" hvalue\u003d\"1.0\" prefHeight\u003d\"557.0\" prefWidth\u003d\"400.0\" vvalue\u003d\"1.0\"\u003e"},{"lineNumber":15,"author":{"gitId":"tashawan23"},"content":"            \u003ccontent\u003e"},{"lineNumber":16,"author":{"gitId":"tashawan23"},"content":"                \u003cVBox fx:id\u003d\"dialogContainer\" prefHeight\u003d\"552.0\" prefWidth\u003d\"388.0\" /\u003e"},{"lineNumber":17,"author":{"gitId":"tashawan23"},"content":"            \u003c/content\u003e"},{"lineNumber":18,"author":{"gitId":"tashawan23"},"content":"        \u003c/ScrollPane\u003e"},{"lineNumber":19,"author":{"gitId":"tashawan23"},"content":"    \u003c/children\u003e"},{"lineNumber":20,"author":{"gitId":"tashawan23"},"content":"\u003c/AnchorPane\u003e"}],"authorContributionMap":{"tashawan23":20}},{"path":"src/test/java/DeadlineTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tashawan23"},"content":"import duke.Tasks.Deadline;"},{"lineNumber":2,"author":{"gitId":"tashawan23"},"content":"import duke.Tasks.Task;"},{"lineNumber":3,"author":{"gitId":"tashawan23"},"content":"import org.junit.jupiter.api.Test;"},{"lineNumber":4,"author":{"gitId":"tashawan23"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;"},{"lineNumber":5,"author":{"gitId":"tashawan23"},"content":""},{"lineNumber":6,"author":{"gitId":"tashawan23"},"content":"public class DeadlineTest {"},{"lineNumber":7,"author":{"gitId":"tashawan23"},"content":"    @Test"},{"lineNumber":8,"author":{"gitId":"tashawan23"},"content":"    public void testStringConversion() {"},{"lineNumber":9,"author":{"gitId":"tashawan23"},"content":"        assertEquals(\"[D] [ ] Homework (by: Jan 31 2021)\", new Deadline(\"Homework\", \"2021-01-31\").toString());"},{"lineNumber":10,"author":{"gitId":"tashawan23"},"content":"    }"},{"lineNumber":11,"author":{"gitId":"tashawan23"},"content":""},{"lineNumber":12,"author":{"gitId":"tashawan23"},"content":"    @Test"},{"lineNumber":13,"author":{"gitId":"tashawan23"},"content":"    public void testGetDeadline() {"},{"lineNumber":14,"author":{"gitId":"tashawan23"},"content":"        Deadline d \u003d new Deadline(\"Homework\", \"2021-01-31\");"},{"lineNumber":15,"author":{"gitId":"tashawan23"},"content":"        assertEquals(\"2021-01-31\", d.getDeadline());"},{"lineNumber":16,"author":{"gitId":"tashawan23"},"content":"    }"},{"lineNumber":17,"author":{"gitId":"tashawan23"},"content":""},{"lineNumber":18,"author":{"gitId":"tashawan23"},"content":"    @Test"},{"lineNumber":19,"author":{"gitId":"tashawan23"},"content":"    public void testGetFormattedDeadline() {"},{"lineNumber":20,"author":{"gitId":"tashawan23"},"content":"        Deadline d \u003d new Deadline(\"Homework\", \"2021-01-31\");"},{"lineNumber":21,"author":{"gitId":"tashawan23"},"content":"        assertEquals(\"Jan 31 2021\", d.getFormattedDeadline());"},{"lineNumber":22,"author":{"gitId":"tashawan23"},"content":"    }"},{"lineNumber":23,"author":{"gitId":"tashawan23"},"content":""},{"lineNumber":24,"author":{"gitId":"tashawan23"},"content":"}"}],"authorContributionMap":{"tashawan23":24}},{"path":"src/test/java/DukeTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tashawan23"},"content":"import org.junit.jupiter.api.Test;"},{"lineNumber":2,"author":{"gitId":"tashawan23"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;"},{"lineNumber":3,"author":{"gitId":"tashawan23"},"content":""},{"lineNumber":4,"author":{"gitId":"tashawan23"},"content":"public class DukeTest {"},{"lineNumber":5,"author":{"gitId":"tashawan23"},"content":"    @Test"},{"lineNumber":6,"author":{"gitId":"tashawan23"},"content":"    public void dummyTest(){"},{"lineNumber":7,"author":{"gitId":"tashawan23"},"content":"        assertEquals(2, 2);"},{"lineNumber":8,"author":{"gitId":"tashawan23"},"content":"    }"},{"lineNumber":9,"author":{"gitId":"tashawan23"},"content":"}"}],"authorContributionMap":{"tashawan23":9}},{"path":"src/test/java/TaskListTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tashawan23"},"content":"import duke.TaskList;"},{"lineNumber":2,"author":{"gitId":"tashawan23"},"content":"import duke.Tasks.Task;"},{"lineNumber":3,"author":{"gitId":"tashawan23"},"content":"import org.junit.jupiter.api.Test;"},{"lineNumber":4,"author":{"gitId":"tashawan23"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;"},{"lineNumber":5,"author":{"gitId":"tashawan23"},"content":""},{"lineNumber":6,"author":{"gitId":"tashawan23"},"content":"import java.util.ArrayList;"},{"lineNumber":7,"author":{"gitId":"tashawan23"},"content":""},{"lineNumber":8,"author":{"gitId":"tashawan23"},"content":"public class TaskListTest {"},{"lineNumber":9,"author":{"gitId":"tashawan23"},"content":"    @Test"},{"lineNumber":10,"author":{"gitId":"tashawan23"},"content":"    public void testStoreTask() {"},{"lineNumber":11,"author":{"gitId":"tashawan23"},"content":"        TaskList tasklist \u003d new TaskList();"},{"lineNumber":12,"author":{"gitId":"tashawan23"},"content":"        Task task \u003d new Task(\"Buy candies\");"},{"lineNumber":13,"author":{"gitId":"tashawan23"},"content":"        tasklist.storeTask(task);"},{"lineNumber":14,"author":{"gitId":"tashawan23"},"content":"        assertEquals(tasklist.taskList.contains(task), true);"},{"lineNumber":15,"author":{"gitId":"tashawan23"},"content":"    }"},{"lineNumber":16,"author":{"gitId":"tashawan23"},"content":""},{"lineNumber":17,"author":{"gitId":"tashawan23"},"content":"    @Test"},{"lineNumber":18,"author":{"gitId":"tashawan23"},"content":"    public void testDeleteTask() {"},{"lineNumber":19,"author":{"gitId":"tashawan23"},"content":"        TaskList tasklist \u003d new TaskList();"},{"lineNumber":20,"author":{"gitId":"tashawan23"},"content":"        Task task \u003d new Task(\"Buy candies\");"},{"lineNumber":21,"author":{"gitId":"tashawan23"},"content":"        tasklist.storeTask(task);"},{"lineNumber":22,"author":{"gitId":"tashawan23"},"content":"        tasklist.deleteTask(1);"},{"lineNumber":23,"author":{"gitId":"tashawan23"},"content":"        assertEquals(tasklist.taskList.contains(task), false);"},{"lineNumber":24,"author":{"gitId":"tashawan23"},"content":"    }"},{"lineNumber":25,"author":{"gitId":"tashawan23"},"content":""},{"lineNumber":26,"author":{"gitId":"tashawan23"},"content":"    @Test"},{"lineNumber":27,"author":{"gitId":"tashawan23"},"content":"    public void testGetTask() {"},{"lineNumber":28,"author":{"gitId":"tashawan23"},"content":"        TaskList tasklist \u003d new TaskList();"},{"lineNumber":29,"author":{"gitId":"tashawan23"},"content":"        Task task \u003d new Task(\"Buy candies\");"},{"lineNumber":30,"author":{"gitId":"tashawan23"},"content":"        tasklist.storeTask(task);"},{"lineNumber":31,"author":{"gitId":"tashawan23"},"content":"        assertEquals(tasklist.getTask(1), task);"},{"lineNumber":32,"author":{"gitId":"tashawan23"},"content":"    }"},{"lineNumber":33,"author":{"gitId":"tashawan23"},"content":""},{"lineNumber":34,"author":{"gitId":"tashawan23"},"content":"    @Test"},{"lineNumber":35,"author":{"gitId":"tashawan23"},"content":"    public void testMarkComplete() {"},{"lineNumber":36,"author":{"gitId":"tashawan23"},"content":"        Task task \u003d new Task(\"Buy candies\");"},{"lineNumber":37,"author":{"gitId":"tashawan23"},"content":"        TaskList tasklist \u003d new TaskList();"},{"lineNumber":38,"author":{"gitId":"tashawan23"},"content":"        tasklist.storeTask(task);"},{"lineNumber":39,"author":{"gitId":"tashawan23"},"content":"        tasklist.markComplete(1);"},{"lineNumber":40,"author":{"gitId":"tashawan23"},"content":"        assertEquals(tasklist.taskList.get(0).getCompleted(), true);"},{"lineNumber":41,"author":{"gitId":"tashawan23"},"content":"    }"},{"lineNumber":42,"author":{"gitId":"tashawan23"},"content":""},{"lineNumber":43,"author":{"gitId":"tashawan23"},"content":"}"}],"authorContributionMap":{"tashawan23":43}},{"path":"src/test/java/TaskTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tashawan23"},"content":"import duke.Tasks.Task;"},{"lineNumber":2,"author":{"gitId":"tashawan23"},"content":"import org.junit.jupiter.api.Test;"},{"lineNumber":3,"author":{"gitId":"tashawan23"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;"},{"lineNumber":4,"author":{"gitId":"tashawan23"},"content":""},{"lineNumber":5,"author":{"gitId":"tashawan23"},"content":"public class TaskTest {"},{"lineNumber":6,"author":{"gitId":"tashawan23"},"content":"    @Test"},{"lineNumber":7,"author":{"gitId":"tashawan23"},"content":"    public void testStringConversion() {"},{"lineNumber":8,"author":{"gitId":"tashawan23"},"content":"        assertEquals(\"[ ] Buy candies\", new Task(\"Buy candies\").toString());"},{"lineNumber":9,"author":{"gitId":"tashawan23"},"content":"    }"},{"lineNumber":10,"author":{"gitId":"tashawan23"},"content":""},{"lineNumber":11,"author":{"gitId":"tashawan23"},"content":"    @Test"},{"lineNumber":12,"author":{"gitId":"tashawan23"},"content":"    public void testGetName() {"},{"lineNumber":13,"author":{"gitId":"tashawan23"},"content":"        assertEquals(\"Make acai\", new Task(\"Make acai\").getName());"},{"lineNumber":14,"author":{"gitId":"tashawan23"},"content":"    }"},{"lineNumber":15,"author":{"gitId":"tashawan23"},"content":""},{"lineNumber":16,"author":{"gitId":"tashawan23"},"content":"    @Test"},{"lineNumber":17,"author":{"gitId":"tashawan23"},"content":"    public void testGetCompleted() {"},{"lineNumber":18,"author":{"gitId":"tashawan23"},"content":"        assertEquals(false, new Task(\"Make acai\").getCompleted());"},{"lineNumber":19,"author":{"gitId":"tashawan23"},"content":"    }"},{"lineNumber":20,"author":{"gitId":"tashawan23"},"content":""},{"lineNumber":21,"author":{"gitId":"tashawan23"},"content":"    @Test"},{"lineNumber":22,"author":{"gitId":"tashawan23"},"content":"    public void testCheckTask() {"},{"lineNumber":23,"author":{"gitId":"tashawan23"},"content":"        Task task \u003d new Task(\"Buy Candies\");"},{"lineNumber":24,"author":{"gitId":"tashawan23"},"content":"        task.checkTask();"},{"lineNumber":25,"author":{"gitId":"tashawan23"},"content":"        assertEquals(true, task.getCompleted());"},{"lineNumber":26,"author":{"gitId":"tashawan23"},"content":"    }"},{"lineNumber":27,"author":{"gitId":"tashawan23"},"content":""},{"lineNumber":28,"author":{"gitId":"tashawan23"},"content":"    @Test"},{"lineNumber":29,"author":{"gitId":"tashawan23"},"content":"    public void testGetStatusIcon() {"},{"lineNumber":30,"author":{"gitId":"tashawan23"},"content":"        Task task \u003d new Task(\"Buy Candies\");"},{"lineNumber":31,"author":{"gitId":"tashawan23"},"content":"        task.checkTask();"},{"lineNumber":32,"author":{"gitId":"tashawan23"},"content":"        assertEquals(\"X\", task.getStatusIcon());"},{"lineNumber":33,"author":{"gitId":"tashawan23"},"content":"    }"},{"lineNumber":34,"author":{"gitId":"tashawan23"},"content":""},{"lineNumber":35,"author":{"gitId":"tashawan23"},"content":"}"}],"authorContributionMap":{"tashawan23":35}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"tashawan23"},"content":"todo Workout"},{"lineNumber":2,"author":{"gitId":"tashawan23"},"content":"event Meeting"},{"lineNumber":3,"author":{"gitId":"tashawan23"},"content":"Monday 2-4pm"},{"lineNumber":4,"author":{"gitId":"tashawan23"},"content":"list"},{"lineNumber":5,"author":{"gitId":"tashawan23"},"content":"deadline Homework"},{"lineNumber":6,"author":{"gitId":"tashawan23"},"content":"Saturday"},{"lineNumber":7,"author":{"gitId":"tashawan23"},"content":"done 1"},{"lineNumber":8,"author":{"gitId":"tashawan23"},"content":"list"},{"lineNumber":9,"author":{"gitId":"tashawan23"},"content":"delete 2"},{"lineNumber":10,"author":{"gitId":"tashawan23"},"content":"list"},{"lineNumber":11,"author":{"gitId":"tashawan23"},"content":"bye"}],"authorContributionMap":{"tashawan23":11}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF"},{"lineNumber":2,"author":{"gitId":"-"},"content":""},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin"},{"lineNumber":5,"author":{"gitId":"-"},"content":""},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run"},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT"},{"lineNumber":8,"author":{"gitId":"-"},"content":""},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder"},{"lineNumber":10,"author":{"gitId":"-"},"content":"javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\*.java"},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 ("},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1"},{"lineNumber":14,"author":{"gitId":"-"},"content":")"},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0"},{"lineNumber":16,"author":{"gitId":"-"},"content":""},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"},{"lineNumber":18,"author":{"gitId":"tashawan23"},"content":"java -classpath ..\\bin duke.Duke \u003c input.txt \u003e ACTUAL.TXT"},{"lineNumber":19,"author":{"gitId":"-"},"content":""},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM compare the output to the expected output"},{"lineNumber":21,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT"}],"authorContributionMap":{"tashawan23":1,"-":20}}]
