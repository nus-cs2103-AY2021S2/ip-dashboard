[{"path":"src/main/java/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"branzuelajohn"},"content":"import java.time.LocalDate;"},{"lineNumber":2,"author":{"gitId":"branzuelajohn"},"content":"import java.time.LocalTime;"},{"lineNumber":3,"author":{"gitId":"branzuelajohn"},"content":"import java.time.format.DateTimeFormatter;"},{"lineNumber":4,"author":{"gitId":"branzuelajohn"},"content":"import java.time.LocalDateTime;"},{"lineNumber":5,"author":{"gitId":"branzuelajohn"},"content":""},{"lineNumber":6,"author":{"gitId":"branzuelajohn"},"content":""},{"lineNumber":7,"author":{"gitId":"branzuelajohn"},"content":"public class Deadline extends Task {"},{"lineNumber":8,"author":{"gitId":"branzuelajohn"},"content":""},{"lineNumber":9,"author":{"gitId":"branzuelajohn"},"content":"    protected String by;"},{"lineNumber":10,"author":{"gitId":"branzuelajohn"},"content":"    protected LocalDate dateTime;"},{"lineNumber":11,"author":{"gitId":"branzuelajohn"},"content":"    protected LocalDateTime time;"},{"lineNumber":12,"author":{"gitId":"branzuelajohn"},"content":""},{"lineNumber":13,"author":{"gitId":"branzuelajohn"},"content":"    public Deadline(String description, String by) {"},{"lineNumber":14,"author":{"gitId":"branzuelajohn"},"content":"        super(description);"},{"lineNumber":15,"author":{"gitId":"branzuelajohn"},"content":"        this.by \u003d by;"},{"lineNumber":16,"author":{"gitId":"branzuelajohn"},"content":"        String[] dateArr \u003d by.split(\" \");"},{"lineNumber":17,"author":{"gitId":"branzuelajohn"},"content":"        String[] date \u003d dateArr[0].split(\"-\");"},{"lineNumber":18,"author":{"gitId":"branzuelajohn"},"content":"        LocalDate dateTime \u003d LocalDate.of(Integer.parseInt(date[0]), Integer.parseInt(date[1]),"},{"lineNumber":19,"author":{"gitId":"branzuelajohn"},"content":"                Integer.parseInt(date[2]));"},{"lineNumber":20,"author":{"gitId":"branzuelajohn"},"content":"        if(dateArr.length \u003e 1)  {"},{"lineNumber":21,"author":{"gitId":"branzuelajohn"},"content":"            String t \u003d dateArr[1];"},{"lineNumber":22,"author":{"gitId":"branzuelajohn"},"content":"            LocalTime hm \u003d LocalTime.of(Integer.parseInt(t.substring(0,2)), Integer.parseInt(t.substring(2)));"},{"lineNumber":23,"author":{"gitId":"branzuelajohn"},"content":"            time \u003d LocalDateTime.of(dateTime, hm);"},{"lineNumber":24,"author":{"gitId":"branzuelajohn"},"content":"        }"},{"lineNumber":25,"author":{"gitId":"branzuelajohn"},"content":"        this.dateTime \u003d dateTime;"},{"lineNumber":26,"author":{"gitId":"branzuelajohn"},"content":"        this.time \u003d time;"},{"lineNumber":27,"author":{"gitId":"branzuelajohn"},"content":"    }"},{"lineNumber":28,"author":{"gitId":"branzuelajohn"},"content":""},{"lineNumber":29,"author":{"gitId":"branzuelajohn"},"content":"    public String getBy() {"},{"lineNumber":30,"author":{"gitId":"branzuelajohn"},"content":"        return this.by;"},{"lineNumber":31,"author":{"gitId":"branzuelajohn"},"content":"    }"},{"lineNumber":32,"author":{"gitId":"branzuelajohn"},"content":""},{"lineNumber":33,"author":{"gitId":"branzuelajohn"},"content":"        @Override"},{"lineNumber":34,"author":{"gitId":"branzuelajohn"},"content":"        public String toString () {"},{"lineNumber":35,"author":{"gitId":"branzuelajohn"},"content":"            String period \u003d time.getHour() \u003e\u003d 12 ? \"PM\" : \"AM\";"},{"lineNumber":36,"author":{"gitId":"branzuelajohn"},"content":"            String hour \u003d time.getHour() \u003e 12 ? Integer.toString(time.getHour() - 12)"},{"lineNumber":37,"author":{"gitId":"branzuelajohn"},"content":"                    : Integer.toString(time.getHour());"},{"lineNumber":38,"author":{"gitId":"branzuelajohn"},"content":"            if(time !\u003d null) {"},{"lineNumber":39,"author":{"gitId":"branzuelajohn"},"content":"                if(time.getMinute() \u003e 0) {"},{"lineNumber":40,"author":{"gitId":"branzuelajohn"},"content":"                    return \"[D]\" + super.toString() + \" (by: \" + dateTime.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\"))"},{"lineNumber":41,"author":{"gitId":"branzuelajohn"},"content":"                            + \" \"  + hour + \".\" + time.getMinute() + period +\")\";"},{"lineNumber":42,"author":{"gitId":"branzuelajohn"},"content":"                } else {"},{"lineNumber":43,"author":{"gitId":"branzuelajohn"},"content":"                    return \"[D]\" + super.toString() + \" (by: \" + dateTime.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\"))"},{"lineNumber":44,"author":{"gitId":"branzuelajohn"},"content":"                            + \" \"  + hour + period +\")\";"},{"lineNumber":45,"author":{"gitId":"branzuelajohn"},"content":"                }"},{"lineNumber":46,"author":{"gitId":"branzuelajohn"},"content":"            } else {"},{"lineNumber":47,"author":{"gitId":"branzuelajohn"},"content":"                return \"[D]\" + super.toString() + \" (by: \" + dateTime.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\"))+ \")\";"},{"lineNumber":48,"author":{"gitId":"branzuelajohn"},"content":"            }"},{"lineNumber":49,"author":{"gitId":"branzuelajohn"},"content":"        }"},{"lineNumber":50,"author":{"gitId":"branzuelajohn"},"content":"}"},{"lineNumber":51,"author":{"gitId":"branzuelajohn"},"content":""}],"authorContributionMap":{"branzuelajohn":51}},{"path":"src/main/java/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"branzuelajohn"},"content":"import java.io.*;"},{"lineNumber":2,"author":{"gitId":"branzuelajohn"},"content":"import java.util.*;"},{"lineNumber":3,"author":{"gitId":"branzuelajohn"},"content":"import java.util.ArrayList;"},{"lineNumber":4,"author":{"gitId":"branzuelajohn"},"content":"import java.util.Scanner;"},{"lineNumber":5,"author":{"gitId":"branzuelajohn"},"content":"import java.util.List;"},{"lineNumber":6,"author":{"gitId":"branzuelajohn"},"content":"import java.nio.file.Paths;"},{"lineNumber":7,"author":{"gitId":"branzuelajohn"},"content":"import java.nio.file.Files;"},{"lineNumber":8,"author":{"gitId":"branzuelajohn"},"content":""},{"lineNumber":9,"author":{"gitId":"branzuelajohn"},"content":"/**"},{"lineNumber":10,"author":{"gitId":"branzuelajohn"},"content":" *  Juke is a chatbot that helps users keep track of tasks."},{"lineNumber":11,"author":{"gitId":"branzuelajohn"},"content":" *"},{"lineNumber":12,"author":{"gitId":"branzuelajohn"},"content":" *  The chatbot supports, todos, events and deadlines,"},{"lineNumber":13,"author":{"gitId":"branzuelajohn"},"content":" *      todos: add to do task to a list"},{"lineNumber":14,"author":{"gitId":"branzuelajohn"},"content":" *      events: adds task to a list with a specific time for the event with \"/at\""},{"lineNumber":15,"author":{"gitId":"branzuelajohn"},"content":" *      deadlines: adds task to a list with a specific deadline with \"/by\""},{"lineNumber":16,"author":{"gitId":"branzuelajohn"},"content":" *"},{"lineNumber":17,"author":{"gitId":"branzuelajohn"},"content":" *      The done command followed by an integer x checks off  task x."},{"lineNumber":18,"author":{"gitId":"branzuelajohn"},"content":" *      The chatbot supports deletion of tasks with the \"delete\" command"},{"lineNumber":19,"author":{"gitId":"branzuelajohn"},"content":" *"},{"lineNumber":20,"author":{"gitId":"branzuelajohn"},"content":" *      The chatbot will throw exceptions for invalid inputs."},{"lineNumber":21,"author":{"gitId":"branzuelajohn"},"content":" * @author branzuelajohn"},{"lineNumber":22,"author":{"gitId":"branzuelajohn"},"content":" * @version CS2103T AY20/21 Semester 2, Individual Project"},{"lineNumber":23,"author":{"gitId":"branzuelajohn"},"content":" */"},{"lineNumber":24,"author":{"gitId":"-"},"content":"public class Duke {"},{"lineNumber":25,"author":{"gitId":"branzuelajohn"},"content":"    public static final String TASK_DONE \u003d \"1\";"},{"lineNumber":26,"author":{"gitId":"branzuelajohn"},"content":"    public static final String TASK_NOT_DONE \u003d \"0\";"},{"lineNumber":27,"author":{"gitId":"branzuelajohn"},"content":""},{"lineNumber":28,"author":{"gitId":"branzuelajohn"},"content":"    public static void main(String[] args) throws Exception {"},{"lineNumber":29,"author":{"gitId":"branzuelajohn"},"content":""},{"lineNumber":30,"author":{"gitId":"branzuelajohn"},"content":"        // Level 7"},{"lineNumber":31,"author":{"gitId":"branzuelajohn"},"content":"        String currentDir \u003d System.getProperty(\"user.dir\");"},{"lineNumber":32,"author":{"gitId":"branzuelajohn"},"content":"        String filePath \u003d currentDir + File.separator + \"data\" + File.separator + \"duke.txt\";"},{"lineNumber":33,"author":{"gitId":"branzuelajohn"},"content":"        File file \u003d new File(filePath);"},{"lineNumber":34,"author":{"gitId":"branzuelajohn"},"content":"        // constants"},{"lineNumber":35,"author":{"gitId":"branzuelajohn"},"content":"        List\u003cTask\u003e list \u003d Duke.loadFile(filePath);"},{"lineNumber":36,"author":{"gitId":"branzuelajohn"},"content":"        Scanner sc \u003d new Scanner(System.in);"},{"lineNumber":37,"author":{"gitId":"branzuelajohn"},"content":""},{"lineNumber":38,"author":{"gitId":"branzuelajohn"},"content":"        int counter \u003d 0;"},{"lineNumber":39,"author":{"gitId":"branzuelajohn"},"content":"        int total \u003d 0;"},{"lineNumber":40,"author":{"gitId":"branzuelajohn"},"content":"        Duke.printHorizontalLine();"},{"lineNumber":41,"author":{"gitId":"branzuelajohn"},"content":"        System.out.println(\"Hello! I\u0027m Juke\");"},{"lineNumber":42,"author":{"gitId":"branzuelajohn"},"content":"        System.out.println(\"What can I do for you?\");"},{"lineNumber":43,"author":{"gitId":"branzuelajohn"},"content":"        Duke.printHorizontalLine();"},{"lineNumber":44,"author":{"gitId":"branzuelajohn"},"content":""},{"lineNumber":45,"author":{"gitId":"branzuelajohn"},"content":"        while(true) {"},{"lineNumber":46,"author":{"gitId":"branzuelajohn"},"content":"            String s \u003d sc.nextLine();"},{"lineNumber":47,"author":{"gitId":"branzuelajohn"},"content":"            if (s.equals(\"bye\")) {"},{"lineNumber":48,"author":{"gitId":"branzuelajohn"},"content":"                Duke.byeCommand();"},{"lineNumber":49,"author":{"gitId":"branzuelajohn"},"content":"                saveFile(list, filePath);"},{"lineNumber":50,"author":{"gitId":"branzuelajohn"},"content":"                break;"},{"lineNumber":51,"author":{"gitId":"branzuelajohn"},"content":"            } else if (s.equals(\"list\")) {"},{"lineNumber":52,"author":{"gitId":"branzuelajohn"},"content":"                Duke.printHorizontalLine();"},{"lineNumber":53,"author":{"gitId":"branzuelajohn"},"content":"                Duke.listCommand(list);"},{"lineNumber":54,"author":{"gitId":"branzuelajohn"},"content":"                Duke.printHorizontalLine();"},{"lineNumber":55,"author":{"gitId":"branzuelajohn"},"content":"            } else {"},{"lineNumber":56,"author":{"gitId":"branzuelajohn"},"content":"                try {"},{"lineNumber":57,"author":{"gitId":"branzuelajohn"},"content":"                    if (s.contains(\"done\")) {"},{"lineNumber":58,"author":{"gitId":"branzuelajohn"},"content":"                        String[] array \u003d s.split(\" \");"},{"lineNumber":59,"author":{"gitId":"branzuelajohn"},"content":"                        if (array.length \u003d\u003d 1) {"},{"lineNumber":60,"author":{"gitId":"branzuelajohn"},"content":"                            throw new DukeException(\"☹ OOPS!!! I don\u0027t know which task to mark as done.\");"},{"lineNumber":61,"author":{"gitId":"branzuelajohn"},"content":"                        }"},{"lineNumber":62,"author":{"gitId":"branzuelajohn"},"content":"                        if(list.isEmpty()) {"},{"lineNumber":63,"author":{"gitId":"branzuelajohn"},"content":"                            throw new DukeException(\"☹ OOPS!!! There are no tasks to be marked as done.\");"},{"lineNumber":64,"author":{"gitId":"branzuelajohn"},"content":"                        }"},{"lineNumber":65,"author":{"gitId":"branzuelajohn"},"content":"                        if(Integer.parseInt(array[1]) \u003e list.size()) {"},{"lineNumber":66,"author":{"gitId":"branzuelajohn"},"content":"                            throw new DukeException(\"☹ OOPS!!! There is no such task to be marked as done.\");"},{"lineNumber":67,"author":{"gitId":"branzuelajohn"},"content":"                        } else {"},{"lineNumber":68,"author":{"gitId":"branzuelajohn"},"content":"                            doneCommand(list, array);"},{"lineNumber":69,"author":{"gitId":"branzuelajohn"},"content":"                        }"},{"lineNumber":70,"author":{"gitId":"branzuelajohn"},"content":"                        total--;"},{"lineNumber":71,"author":{"gitId":"branzuelajohn"},"content":"                    } else if (s.contains(\"todo\")) {"},{"lineNumber":72,"author":{"gitId":"branzuelajohn"},"content":"                        if (s.length() \u003c\u003d 5) {"},{"lineNumber":73,"author":{"gitId":"branzuelajohn"},"content":"                            throw new DukeException(\"☹ OOPS!!! The description of a todo cannot be empty.\");"},{"lineNumber":74,"author":{"gitId":"branzuelajohn"},"content":"                        }"},{"lineNumber":75,"author":{"gitId":"branzuelajohn"},"content":"                        String st \u003d s.substring(5);"},{"lineNumber":76,"author":{"gitId":"branzuelajohn"},"content":"                        toDoCommand(st, list);"},{"lineNumber":77,"author":{"gitId":"branzuelajohn"},"content":"                        total++;"},{"lineNumber":78,"author":{"gitId":"branzuelajohn"},"content":"                        continue;"},{"lineNumber":79,"author":{"gitId":"branzuelajohn"},"content":"                    } else if (s.contains(\"deadline\")) {"},{"lineNumber":80,"author":{"gitId":"branzuelajohn"},"content":"                        if (s.length() \u003c\u003d 9 || !s.contains(\"/by\")) {"},{"lineNumber":81,"author":{"gitId":"branzuelajohn"},"content":"                            throw new DukeException(\"☹ OOPS!!! The description of a deadline cannot be empty.\");"},{"lineNumber":82,"author":{"gitId":"branzuelajohn"},"content":"                        }"},{"lineNumber":83,"author":{"gitId":"branzuelajohn"},"content":"                        String[] strArr \u003d s.split(\"/by \");"},{"lineNumber":84,"author":{"gitId":"branzuelajohn"},"content":"                        String description \u003d strArr[0].substring(9).trim();"},{"lineNumber":85,"author":{"gitId":"branzuelajohn"},"content":"                        String by \u003d strArr[1];"},{"lineNumber":86,"author":{"gitId":"branzuelajohn"},"content":"                        deadlineCommand(description, by, list);"},{"lineNumber":87,"author":{"gitId":"branzuelajohn"},"content":"                        total++;"},{"lineNumber":88,"author":{"gitId":"branzuelajohn"},"content":"                        continue;"},{"lineNumber":89,"author":{"gitId":"branzuelajohn"},"content":""},{"lineNumber":90,"author":{"gitId":"branzuelajohn"},"content":"                    } else if (s.contains(\"event\")) {"},{"lineNumber":91,"author":{"gitId":"branzuelajohn"},"content":"                        if (s.length() \u003c\u003d 6 || !s.contains(\"/at\")) {"},{"lineNumber":92,"author":{"gitId":"branzuelajohn"},"content":"                            throw new DukeException(\"☹ OOPS!!! The description of an event cannot be empty.\");"},{"lineNumber":93,"author":{"gitId":"branzuelajohn"},"content":"                        }"},{"lineNumber":94,"author":{"gitId":"branzuelajohn"},"content":"                        String[] strArr \u003d s.split(\"/at \");"},{"lineNumber":95,"author":{"gitId":"branzuelajohn"},"content":"                        String description \u003d strArr[0].substring(6).trim();"},{"lineNumber":96,"author":{"gitId":"branzuelajohn"},"content":"                        String date \u003d strArr[1];"},{"lineNumber":97,"author":{"gitId":"branzuelajohn"},"content":"                        eventCommand(description, date, list);"},{"lineNumber":98,"author":{"gitId":"branzuelajohn"},"content":"                        total++;"},{"lineNumber":99,"author":{"gitId":"branzuelajohn"},"content":"                        continue;"},{"lineNumber":100,"author":{"gitId":"branzuelajohn"},"content":"                    } else if (s.contains(\"delete\")) {"},{"lineNumber":101,"author":{"gitId":"branzuelajohn"},"content":"                        String[] strArr \u003d s.split(\" \");"},{"lineNumber":102,"author":{"gitId":"branzuelajohn"},"content":"                        if(strArr.length \u003d\u003d 1) {"},{"lineNumber":103,"author":{"gitId":"branzuelajohn"},"content":"                            throw new DukeException(\"☹ OOPS!!! I don\u0027t know which task to delete.\");"},{"lineNumber":104,"author":{"gitId":"branzuelajohn"},"content":"                        }"},{"lineNumber":105,"author":{"gitId":"branzuelajohn"},"content":"                        int idx \u003d Integer.parseInt(strArr[1]) - 1;"},{"lineNumber":106,"author":{"gitId":"branzuelajohn"},"content":"                        deleteCommand(idx, list);"},{"lineNumber":107,"author":{"gitId":"branzuelajohn"},"content":"                        total--;"},{"lineNumber":108,"author":{"gitId":"branzuelajohn"},"content":"                    } else {"},{"lineNumber":109,"author":{"gitId":"branzuelajohn"},"content":"                        throw new DukeException(\"☹ OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\");"},{"lineNumber":110,"author":{"gitId":"branzuelajohn"},"content":"                    }"},{"lineNumber":111,"author":{"gitId":"branzuelajohn"},"content":"                } catch (DukeException ex) {"},{"lineNumber":112,"author":{"gitId":"branzuelajohn"},"content":"                    System.out.println(ex);"},{"lineNumber":113,"author":{"gitId":"branzuelajohn"},"content":"                }"},{"lineNumber":114,"author":{"gitId":"branzuelajohn"},"content":"            }"},{"lineNumber":115,"author":{"gitId":"branzuelajohn"},"content":"        }"},{"lineNumber":116,"author":{"gitId":"branzuelajohn"},"content":"     }"},{"lineNumber":117,"author":{"gitId":"branzuelajohn"},"content":""},{"lineNumber":118,"author":{"gitId":"branzuelajohn"},"content":"    /**"},{"lineNumber":119,"author":{"gitId":"branzuelajohn"},"content":"     * prints horizontal line"},{"lineNumber":120,"author":{"gitId":"branzuelajohn"},"content":"     */"},{"lineNumber":121,"author":{"gitId":"branzuelajohn"},"content":"    public static void printHorizontalLine() {"},{"lineNumber":122,"author":{"gitId":"branzuelajohn"},"content":"        System.out.println(\"____________________________________________________________\");"},{"lineNumber":123,"author":{"gitId":"branzuelajohn"},"content":"    }"},{"lineNumber":124,"author":{"gitId":"branzuelajohn"},"content":""},{"lineNumber":125,"author":{"gitId":"branzuelajohn"},"content":"    /**"},{"lineNumber":126,"author":{"gitId":"branzuelajohn"},"content":"     *  Prints bye message in between two horizontal lines."},{"lineNumber":127,"author":{"gitId":"branzuelajohn"},"content":"     */"},{"lineNumber":128,"author":{"gitId":"branzuelajohn"},"content":"    public static void byeCommand() {"},{"lineNumber":129,"author":{"gitId":"branzuelajohn"},"content":"        Duke.printHorizontalLine();"},{"lineNumber":130,"author":{"gitId":"branzuelajohn"},"content":"        System.out.println(\"Bye. Hope to see you again soon!\");"},{"lineNumber":131,"author":{"gitId":"branzuelajohn"},"content":"        Duke.printHorizontalLine();"},{"lineNumber":132,"author":{"gitId":"branzuelajohn"},"content":""},{"lineNumber":133,"author":{"gitId":"branzuelajohn"},"content":"    }"},{"lineNumber":134,"author":{"gitId":"branzuelajohn"},"content":""},{"lineNumber":135,"author":{"gitId":"branzuelajohn"},"content":"    /**"},{"lineNumber":136,"author":{"gitId":"branzuelajohn"},"content":"     *"},{"lineNumber":137,"author":{"gitId":"branzuelajohn"},"content":"     * @param list the list of tasks"},{"lineNumber":138,"author":{"gitId":"branzuelajohn"},"content":"     * @param counter the number of tasks in the list"},{"lineNumber":139,"author":{"gitId":"branzuelajohn"},"content":"     */"},{"lineNumber":140,"author":{"gitId":"branzuelajohn"},"content":"    public static void listCommand(List\u003cTask\u003e list) {"},{"lineNumber":141,"author":{"gitId":"branzuelajohn"},"content":"        System.out.println(\"Here are the tasks in your list:\");"},{"lineNumber":142,"author":{"gitId":"branzuelajohn"},"content":"        for(int i \u003d 0; i \u003c list.size(); i++) {"},{"lineNumber":143,"author":{"gitId":"branzuelajohn"},"content":"            int j \u003d i + 1;"},{"lineNumber":144,"author":{"gitId":"branzuelajohn"},"content":"            Task t \u003d list.get(i);"},{"lineNumber":145,"author":{"gitId":"branzuelajohn"},"content":"            System.out.println((j) + \".\" + t);"},{"lineNumber":146,"author":{"gitId":"branzuelajohn"},"content":"        }"},{"lineNumber":147,"author":{"gitId":"branzuelajohn"},"content":"    }"},{"lineNumber":148,"author":{"gitId":"branzuelajohn"},"content":""},{"lineNumber":149,"author":{"gitId":"branzuelajohn"},"content":"    /**"},{"lineNumber":150,"author":{"gitId":"branzuelajohn"},"content":"     *"},{"lineNumber":151,"author":{"gitId":"branzuelajohn"},"content":"     * @param list the list of tasks"},{"lineNumber":152,"author":{"gitId":"branzuelajohn"},"content":"     * @param array String array "},{"lineNumber":153,"author":{"gitId":"branzuelajohn"},"content":"     */"},{"lineNumber":154,"author":{"gitId":"branzuelajohn"},"content":"    public static void doneCommand(List\u003cTask\u003e list, String[] array) {"},{"lineNumber":155,"author":{"gitId":"branzuelajohn"},"content":"        int m \u003d Integer.valueOf(array[1]) - 1;"},{"lineNumber":156,"author":{"gitId":"branzuelajohn"},"content":"        Task t  \u003d list.get(m);"},{"lineNumber":157,"author":{"gitId":"branzuelajohn"},"content":"        t.markAsDone();"},{"lineNumber":158,"author":{"gitId":"branzuelajohn"},"content":"        Duke.printHorizontalLine();"},{"lineNumber":159,"author":{"gitId":"branzuelajohn"},"content":"        System.out.println(\"Nice! I\u0027ve marked this task as done:\");"},{"lineNumber":160,"author":{"gitId":"branzuelajohn"},"content":"        System.out.printf(\"[%s] %s%n\", t.getStatusIcon(), t.getDescription());"},{"lineNumber":161,"author":{"gitId":"branzuelajohn"},"content":"        Duke.printHorizontalLine();"},{"lineNumber":162,"author":{"gitId":"branzuelajohn"},"content":"    }"},{"lineNumber":163,"author":{"gitId":"branzuelajohn"},"content":""},{"lineNumber":164,"author":{"gitId":"branzuelajohn"},"content":"    /*public static void addCommand(Task t) {"},{"lineNumber":165,"author":{"gitId":"branzuelajohn"},"content":"        Duke.printHorizontalLine();"},{"lineNumber":166,"author":{"gitId":"branzuelajohn"},"content":"        System.out.printf(\"added: %s%n\", t);"},{"lineNumber":167,"author":{"gitId":"branzuelajohn"},"content":"        Duke.printHorizontalLine();"},{"lineNumber":168,"author":{"gitId":"branzuelajohn"},"content":"    }*/"},{"lineNumber":169,"author":{"gitId":"branzuelajohn"},"content":""},{"lineNumber":170,"author":{"gitId":"branzuelajohn"},"content":"    public static void toDoCommand(String s, List\u003cTask\u003e list) {"},{"lineNumber":171,"author":{"gitId":"branzuelajohn"},"content":"        Duke.printHorizontalLine();"},{"lineNumber":172,"author":{"gitId":"branzuelajohn"},"content":"        System.out.println(\"Got it. I\u0027ve added this task:\");"},{"lineNumber":173,"author":{"gitId":"branzuelajohn"},"content":"        ToDo td \u003d new ToDo(s);"},{"lineNumber":174,"author":{"gitId":"branzuelajohn"},"content":"        list.add(td);"},{"lineNumber":175,"author":{"gitId":"branzuelajohn"},"content":"        System.out.println(\" \" + td.toString());"},{"lineNumber":176,"author":{"gitId":"branzuelajohn"},"content":"        if(list.size() \u003d\u003d 1) {"},{"lineNumber":177,"author":{"gitId":"branzuelajohn"},"content":"            System.out.printf(\"Now you have %d task in the list.%n\", list.size());"},{"lineNumber":178,"author":{"gitId":"branzuelajohn"},"content":"        } else {"},{"lineNumber":179,"author":{"gitId":"branzuelajohn"},"content":"            System.out.printf(\"Now you have %d tasks in the list.%n\", list.size());"},{"lineNumber":180,"author":{"gitId":"branzuelajohn"},"content":"        }"},{"lineNumber":181,"author":{"gitId":"branzuelajohn"},"content":"        Duke.printHorizontalLine();"},{"lineNumber":182,"author":{"gitId":"branzuelajohn"},"content":"    }"},{"lineNumber":183,"author":{"gitId":"branzuelajohn"},"content":""},{"lineNumber":184,"author":{"gitId":"branzuelajohn"},"content":"    public static void deadlineCommand(String description, String by, List\u003cTask\u003e list) {"},{"lineNumber":185,"author":{"gitId":"branzuelajohn"},"content":"        Duke.printHorizontalLine();"},{"lineNumber":186,"author":{"gitId":"branzuelajohn"},"content":"        System.out.println(\"Got it. I\u0027ve added this task:\");"},{"lineNumber":187,"author":{"gitId":"branzuelajohn"},"content":"        Deadline d \u003d new Deadline(description, by);"},{"lineNumber":188,"author":{"gitId":"branzuelajohn"},"content":"        list.add(d);"},{"lineNumber":189,"author":{"gitId":"branzuelajohn"},"content":"        System.out.println(\" \" + d.toString());"},{"lineNumber":190,"author":{"gitId":"branzuelajohn"},"content":"        if(list.size() \u003d\u003d 1) {"},{"lineNumber":191,"author":{"gitId":"branzuelajohn"},"content":"            System.out.printf(\"Now you have %d task in the list.%n\", list.size());"},{"lineNumber":192,"author":{"gitId":"branzuelajohn"},"content":"        } else {"},{"lineNumber":193,"author":{"gitId":"branzuelajohn"},"content":"            System.out.printf(\"Now you have %d tasks in the list.%n\", list.size());"},{"lineNumber":194,"author":{"gitId":"branzuelajohn"},"content":"        }"},{"lineNumber":195,"author":{"gitId":"branzuelajohn"},"content":"        Duke.printHorizontalLine();"},{"lineNumber":196,"author":{"gitId":"branzuelajohn"},"content":"    }"},{"lineNumber":197,"author":{"gitId":"branzuelajohn"},"content":""},{"lineNumber":198,"author":{"gitId":"branzuelajohn"},"content":"    public static void eventCommand(String description, String date, List\u003cTask\u003e list) {"},{"lineNumber":199,"author":{"gitId":"branzuelajohn"},"content":"        System.out.println(\"Got it. I\u0027ve added this task:\");"},{"lineNumber":200,"author":{"gitId":"branzuelajohn"},"content":"        Event e \u003d new Event(description, date);"},{"lineNumber":201,"author":{"gitId":"branzuelajohn"},"content":"        list.add(e);"},{"lineNumber":202,"author":{"gitId":"branzuelajohn"},"content":"        System.out.println(\" \" + e.toString());"},{"lineNumber":203,"author":{"gitId":"branzuelajohn"},"content":"        if(list.size() \u003d\u003d 1) {"},{"lineNumber":204,"author":{"gitId":"branzuelajohn"},"content":"            System.out.printf(\"Now you have %d task in the list.%n\", list.size());"},{"lineNumber":205,"author":{"gitId":"branzuelajohn"},"content":"        } else {"},{"lineNumber":206,"author":{"gitId":"branzuelajohn"},"content":"            System.out.printf(\"Now you have %d tasks in the list.%n\", list.size());"},{"lineNumber":207,"author":{"gitId":"branzuelajohn"},"content":"        }"},{"lineNumber":208,"author":{"gitId":"branzuelajohn"},"content":"        Duke.printHorizontalLine();"},{"lineNumber":209,"author":{"gitId":"branzuelajohn"},"content":"    }"},{"lineNumber":210,"author":{"gitId":"branzuelajohn"},"content":""},{"lineNumber":211,"author":{"gitId":"branzuelajohn"},"content":"    public static void deleteCommand(int index, List\u003cTask\u003e list) {"},{"lineNumber":212,"author":{"gitId":"branzuelajohn"},"content":"        Task t \u003d list.get(index);"},{"lineNumber":213,"author":{"gitId":"branzuelajohn"},"content":"        list.remove(index);"},{"lineNumber":214,"author":{"gitId":"branzuelajohn"},"content":"        System.out.println(\"Noted. I\u0027ve removed this task:\\n\" + t + \"\\nNow you have \""},{"lineNumber":215,"author":{"gitId":"branzuelajohn"},"content":"                + list.size() + \" tasks in the list.\");"},{"lineNumber":216,"author":{"gitId":"branzuelajohn"},"content":"    }"},{"lineNumber":217,"author":{"gitId":"branzuelajohn"},"content":""},{"lineNumber":218,"author":{"gitId":"branzuelajohn"},"content":"    public static void saveFile(List\u003cTask\u003e list, String filePath) throws DukeException {"},{"lineNumber":219,"author":{"gitId":"branzuelajohn"},"content":"        try {"},{"lineNumber":220,"author":{"gitId":"branzuelajohn"},"content":"            StringBuffer sb \u003d new StringBuffer(\"\");"},{"lineNumber":221,"author":{"gitId":"branzuelajohn"},"content":""},{"lineNumber":222,"author":{"gitId":"branzuelajohn"},"content":"            for (int i \u003d 0; i \u003c list.size(); i++) {"},{"lineNumber":223,"author":{"gitId":"branzuelajohn"},"content":"                Task t \u003d list.get(i);"},{"lineNumber":224,"author":{"gitId":"branzuelajohn"},"content":"                String taskType \u003d t.getType();"},{"lineNumber":225,"author":{"gitId":"branzuelajohn"},"content":"                String isDone \u003d t.getIsDone() ? TASK_DONE : TASK_NOT_DONE;"},{"lineNumber":226,"author":{"gitId":"branzuelajohn"},"content":"                String line;"},{"lineNumber":227,"author":{"gitId":"branzuelajohn"},"content":""},{"lineNumber":228,"author":{"gitId":"branzuelajohn"},"content":"                switch (taskType) {"},{"lineNumber":229,"author":{"gitId":"branzuelajohn"},"content":"                    case \"T\":"},{"lineNumber":230,"author":{"gitId":"branzuelajohn"},"content":"                        line \u003d \"T | \" + isDone + \" | \" + t.getDescription();"},{"lineNumber":231,"author":{"gitId":"branzuelajohn"},"content":"                        break;"},{"lineNumber":232,"author":{"gitId":"branzuelajohn"},"content":"                    case \"D\":"},{"lineNumber":233,"author":{"gitId":"branzuelajohn"},"content":"                        Deadline d \u003d (Deadline) t;"},{"lineNumber":234,"author":{"gitId":"branzuelajohn"},"content":"                        line \u003d \"D | \" + isDone + \" | \" + d.getDescription() + \" | \" + d.getBy();"},{"lineNumber":235,"author":{"gitId":"branzuelajohn"},"content":"                        break;"},{"lineNumber":236,"author":{"gitId":"branzuelajohn"},"content":"                    case \"E\":"},{"lineNumber":237,"author":{"gitId":"branzuelajohn"},"content":"                        Event e \u003d (Event) t;"},{"lineNumber":238,"author":{"gitId":"branzuelajohn"},"content":"                        line \u003d \"E | \" + isDone + \" | \" + e.getDescription() + \" | \" + e.getDate();"},{"lineNumber":239,"author":{"gitId":"branzuelajohn"},"content":"                        break;"},{"lineNumber":240,"author":{"gitId":"branzuelajohn"},"content":""},{"lineNumber":241,"author":{"gitId":"branzuelajohn"},"content":"                    default:"},{"lineNumber":242,"author":{"gitId":"branzuelajohn"},"content":"                        throw new DukeException(\"Task to be written is not recognised\");"},{"lineNumber":243,"author":{"gitId":"branzuelajohn"},"content":""},{"lineNumber":244,"author":{"gitId":"branzuelajohn"},"content":"                }"},{"lineNumber":245,"author":{"gitId":"branzuelajohn"},"content":"                if (i \u003d\u003d list.size() - 1) {"},{"lineNumber":246,"author":{"gitId":"branzuelajohn"},"content":"                    sb.append(line);"},{"lineNumber":247,"author":{"gitId":"branzuelajohn"},"content":"                } else {"},{"lineNumber":248,"author":{"gitId":"branzuelajohn"},"content":"                    sb.append(line + \"\\n\");"},{"lineNumber":249,"author":{"gitId":"branzuelajohn"},"content":"                }"},{"lineNumber":250,"author":{"gitId":"branzuelajohn"},"content":"            }"},{"lineNumber":251,"author":{"gitId":"branzuelajohn"},"content":""},{"lineNumber":252,"author":{"gitId":"branzuelajohn"},"content":"            FileWriter myWriter \u003d new FileWriter(new File(filePath));"},{"lineNumber":253,"author":{"gitId":"branzuelajohn"},"content":"            myWriter.write(sb.toString());"},{"lineNumber":254,"author":{"gitId":"branzuelajohn"},"content":"            myWriter.close();"},{"lineNumber":255,"author":{"gitId":"branzuelajohn"},"content":""},{"lineNumber":256,"author":{"gitId":"branzuelajohn"},"content":"        } catch (IOException e) {"},{"lineNumber":257,"author":{"gitId":"branzuelajohn"},"content":"            System.out.println(\"Error saving file: \" + e.getMessage());"},{"lineNumber":258,"author":{"gitId":"branzuelajohn"},"content":"            throw new DukeException(\"Error saving file\");"},{"lineNumber":259,"author":{"gitId":"branzuelajohn"},"content":"        }"},{"lineNumber":260,"author":{"gitId":"branzuelajohn"},"content":"    }"},{"lineNumber":261,"author":{"gitId":"branzuelajohn"},"content":""},{"lineNumber":262,"author":{"gitId":"branzuelajohn"},"content":"    public static ArrayList\u003cTask\u003e loadFile(String filePath) throws DukeException {"},{"lineNumber":263,"author":{"gitId":"branzuelajohn"},"content":"        ArrayList\u003cTask\u003e list \u003d new ArrayList\u003c\u003e();"},{"lineNumber":264,"author":{"gitId":"branzuelajohn"},"content":"        File f \u003d new File(filePath);"},{"lineNumber":265,"author":{"gitId":"branzuelajohn"},"content":""},{"lineNumber":266,"author":{"gitId":"branzuelajohn"},"content":"        if(f.exists() \u0026\u0026 !f.isDirectory()) {"},{"lineNumber":267,"author":{"gitId":"branzuelajohn"},"content":"            try {"},{"lineNumber":268,"author":{"gitId":"branzuelajohn"},"content":"                for(String line :  Files.readAllLines(Paths.get(filePath))) {"},{"lineNumber":269,"author":{"gitId":"branzuelajohn"},"content":"                    String[] dataArr \u003d line.split(\" \\\\| \");"},{"lineNumber":270,"author":{"gitId":"branzuelajohn"},"content":"                    String typeTask \u003d dataArr[0];"},{"lineNumber":271,"author":{"gitId":"branzuelajohn"},"content":""},{"lineNumber":272,"author":{"gitId":"branzuelajohn"},"content":"                    switch (typeTask) {"},{"lineNumber":273,"author":{"gitId":"branzuelajohn"},"content":"                        case \"T\":"},{"lineNumber":274,"author":{"gitId":"branzuelajohn"},"content":"                            ToDo td \u003d new ToDo(dataArr[2]);"},{"lineNumber":275,"author":{"gitId":"branzuelajohn"},"content":"                            if (dataArr[1].equals(\"1\")) {"},{"lineNumber":276,"author":{"gitId":"branzuelajohn"},"content":"                                td.markAsDone();"},{"lineNumber":277,"author":{"gitId":"branzuelajohn"},"content":"                            }"},{"lineNumber":278,"author":{"gitId":"branzuelajohn"},"content":""},{"lineNumber":279,"author":{"gitId":"branzuelajohn"},"content":"                            list.add(td);"},{"lineNumber":280,"author":{"gitId":"branzuelajohn"},"content":"                            break;"},{"lineNumber":281,"author":{"gitId":"branzuelajohn"},"content":""},{"lineNumber":282,"author":{"gitId":"branzuelajohn"},"content":"                        case \"D\":"},{"lineNumber":283,"author":{"gitId":"branzuelajohn"},"content":"                            Deadline d \u003d new Deadline(dataArr[2], dataArr[3]);"},{"lineNumber":284,"author":{"gitId":"branzuelajohn"},"content":""},{"lineNumber":285,"author":{"gitId":"branzuelajohn"},"content":"                            if (dataArr[1].equals(\"1\")) {"},{"lineNumber":286,"author":{"gitId":"branzuelajohn"},"content":"                                d.markAsDone();"},{"lineNumber":287,"author":{"gitId":"branzuelajohn"},"content":"                            }"},{"lineNumber":288,"author":{"gitId":"branzuelajohn"},"content":""},{"lineNumber":289,"author":{"gitId":"branzuelajohn"},"content":"                            list.add(d);"},{"lineNumber":290,"author":{"gitId":"branzuelajohn"},"content":"                            break;"},{"lineNumber":291,"author":{"gitId":"branzuelajohn"},"content":""},{"lineNumber":292,"author":{"gitId":"branzuelajohn"},"content":"                        case \"E\":"},{"lineNumber":293,"author":{"gitId":"branzuelajohn"},"content":"                            Event e \u003d new Event(dataArr[2], dataArr[3]);"},{"lineNumber":294,"author":{"gitId":"branzuelajohn"},"content":""},{"lineNumber":295,"author":{"gitId":"branzuelajohn"},"content":"                            if (dataArr[1].equals(\"1\")) {"},{"lineNumber":296,"author":{"gitId":"branzuelajohn"},"content":"                                e.markAsDone();"},{"lineNumber":297,"author":{"gitId":"branzuelajohn"},"content":"                            }"},{"lineNumber":298,"author":{"gitId":"branzuelajohn"},"content":"                            list.add(e);"},{"lineNumber":299,"author":{"gitId":"branzuelajohn"},"content":"                            break;"},{"lineNumber":300,"author":{"gitId":"branzuelajohn"},"content":"                        default:"},{"lineNumber":301,"author":{"gitId":"branzuelajohn"},"content":"                            throw new DukeException(\"Line cannot be read\");"},{"lineNumber":302,"author":{"gitId":"branzuelajohn"},"content":"                        }"},{"lineNumber":303,"author":{"gitId":"branzuelajohn"},"content":"                    }"},{"lineNumber":304,"author":{"gitId":"branzuelajohn"},"content":"                    //Collections.sort(list);"},{"lineNumber":305,"author":{"gitId":"branzuelajohn"},"content":"                    System.out.println(\"loading old file\");"},{"lineNumber":306,"author":{"gitId":"branzuelajohn"},"content":"                    return list;"},{"lineNumber":307,"author":{"gitId":"branzuelajohn"},"content":"            } catch (IOException e) {"},{"lineNumber":308,"author":{"gitId":"branzuelajohn"},"content":"                System.out.println(\"Error reading file\" + e);"},{"lineNumber":309,"author":{"gitId":"branzuelajohn"},"content":"                throw new DukeException(\"Error reading file\");"},{"lineNumber":310,"author":{"gitId":"branzuelajohn"},"content":"            }"},{"lineNumber":311,"author":{"gitId":"branzuelajohn"},"content":"        } else {"},{"lineNumber":312,"author":{"gitId":"branzuelajohn"},"content":"            try {"},{"lineNumber":313,"author":{"gitId":"branzuelajohn"},"content":"                f.getParentFile().mkdirs();"},{"lineNumber":314,"author":{"gitId":"branzuelajohn"},"content":"                f.createNewFile();"},{"lineNumber":315,"author":{"gitId":"branzuelajohn"},"content":"            } catch (IOException e) {"},{"lineNumber":316,"author":{"gitId":"branzuelajohn"},"content":"                System.out.println(\"Error creating file\" + e);"},{"lineNumber":317,"author":{"gitId":"branzuelajohn"},"content":"                throw new DukeException(\"Error reading file\");"},{"lineNumber":318,"author":{"gitId":"branzuelajohn"},"content":"            }"},{"lineNumber":319,"author":{"gitId":"branzuelajohn"},"content":"        }"},{"lineNumber":320,"author":{"gitId":"branzuelajohn"},"content":"        return new ArrayList\u003c\u003e();"},{"lineNumber":321,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":322,"author":{"gitId":"-"},"content":"}"}],"authorContributionMap":{"branzuelajohn":319,"-":3}},{"path":"src/main/java/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"branzuelajohn"},"content":"public class DukeException extends Exception {"},{"lineNumber":2,"author":{"gitId":"branzuelajohn"},"content":""},{"lineNumber":3,"author":{"gitId":"branzuelajohn"},"content":"    public DukeException(String error) {"},{"lineNumber":4,"author":{"gitId":"branzuelajohn"},"content":"        super(error);"},{"lineNumber":5,"author":{"gitId":"branzuelajohn"},"content":"    }"},{"lineNumber":6,"author":{"gitId":"branzuelajohn"},"content":""},{"lineNumber":7,"author":{"gitId":"branzuelajohn"},"content":"}"}],"authorContributionMap":{"branzuelajohn":7}},{"path":"src/main/java/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"branzuelajohn"},"content":"public class Event extends Task {"},{"lineNumber":2,"author":{"gitId":"branzuelajohn"},"content":""},{"lineNumber":3,"author":{"gitId":"branzuelajohn"},"content":"    protected String date;"},{"lineNumber":4,"author":{"gitId":"branzuelajohn"},"content":""},{"lineNumber":5,"author":{"gitId":"branzuelajohn"},"content":"    public Event(String description, String date) {"},{"lineNumber":6,"author":{"gitId":"branzuelajohn"},"content":"        super(description);"},{"lineNumber":7,"author":{"gitId":"branzuelajohn"},"content":"        this.date \u003d date;"},{"lineNumber":8,"author":{"gitId":"branzuelajohn"},"content":"    }"},{"lineNumber":9,"author":{"gitId":"branzuelajohn"},"content":""},{"lineNumber":10,"author":{"gitId":"branzuelajohn"},"content":"    public String getDate() {"},{"lineNumber":11,"author":{"gitId":"branzuelajohn"},"content":"        return this.date;"},{"lineNumber":12,"author":{"gitId":"branzuelajohn"},"content":"    }"},{"lineNumber":13,"author":{"gitId":"branzuelajohn"},"content":""},{"lineNumber":14,"author":{"gitId":"branzuelajohn"},"content":"    @Override"},{"lineNumber":15,"author":{"gitId":"branzuelajohn"},"content":"    public String toString() {"},{"lineNumber":16,"author":{"gitId":"branzuelajohn"},"content":"        return \"[E]\" + super.toString() + \" (at: \" + date + \")\";"},{"lineNumber":17,"author":{"gitId":"branzuelajohn"},"content":"    }"},{"lineNumber":18,"author":{"gitId":"branzuelajohn"},"content":"}"}],"authorContributionMap":{"branzuelajohn":18}},{"path":"src/main/java/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"branzuelajohn"},"content":"public class Task {"},{"lineNumber":2,"author":{"gitId":"branzuelajohn"},"content":"    protected String description;"},{"lineNumber":3,"author":{"gitId":"branzuelajohn"},"content":"    protected boolean isDone;"},{"lineNumber":4,"author":{"gitId":"branzuelajohn"},"content":""},{"lineNumber":5,"author":{"gitId":"branzuelajohn"},"content":"    public Task(String description) {"},{"lineNumber":6,"author":{"gitId":"branzuelajohn"},"content":"        this.description \u003d description;"},{"lineNumber":7,"author":{"gitId":"branzuelajohn"},"content":"        this.isDone \u003d false;"},{"lineNumber":8,"author":{"gitId":"branzuelajohn"},"content":"    }"},{"lineNumber":9,"author":{"gitId":"branzuelajohn"},"content":""},{"lineNumber":10,"author":{"gitId":"branzuelajohn"},"content":"    public Task(String description, boolean isDone) {"},{"lineNumber":11,"author":{"gitId":"branzuelajohn"},"content":"        this.description \u003d description;"},{"lineNumber":12,"author":{"gitId":"branzuelajohn"},"content":"        this.isDone \u003d isDone;"},{"lineNumber":13,"author":{"gitId":"branzuelajohn"},"content":"    }"},{"lineNumber":14,"author":{"gitId":"branzuelajohn"},"content":""},{"lineNumber":15,"author":{"gitId":"branzuelajohn"},"content":"    public boolean markAsDone() {"},{"lineNumber":16,"author":{"gitId":"branzuelajohn"},"content":"        this.isDone \u003d true;"},{"lineNumber":17,"author":{"gitId":"branzuelajohn"},"content":"        return true;"},{"lineNumber":18,"author":{"gitId":"branzuelajohn"},"content":"    }"},{"lineNumber":19,"author":{"gitId":"branzuelajohn"},"content":""},{"lineNumber":20,"author":{"gitId":"branzuelajohn"},"content":"    public String getType() {"},{"lineNumber":21,"author":{"gitId":"branzuelajohn"},"content":"        if(this instanceof ToDo) {"},{"lineNumber":22,"author":{"gitId":"branzuelajohn"},"content":"            return \"T\";"},{"lineNumber":23,"author":{"gitId":"branzuelajohn"},"content":"        } else if(this instanceof Deadline) {"},{"lineNumber":24,"author":{"gitId":"branzuelajohn"},"content":"            return \"D\";"},{"lineNumber":25,"author":{"gitId":"branzuelajohn"},"content":"        } else {"},{"lineNumber":26,"author":{"gitId":"branzuelajohn"},"content":"            return \"E\";"},{"lineNumber":27,"author":{"gitId":"branzuelajohn"},"content":"        }"},{"lineNumber":28,"author":{"gitId":"branzuelajohn"},"content":"    }"},{"lineNumber":29,"author":{"gitId":"branzuelajohn"},"content":""},{"lineNumber":30,"author":{"gitId":"branzuelajohn"},"content":"    public String getDescription() {"},{"lineNumber":31,"author":{"gitId":"branzuelajohn"},"content":"        return this.description;"},{"lineNumber":32,"author":{"gitId":"branzuelajohn"},"content":"    }"},{"lineNumber":33,"author":{"gitId":"branzuelajohn"},"content":""},{"lineNumber":34,"author":{"gitId":"branzuelajohn"},"content":"    public String getStatusIcon() {"},{"lineNumber":35,"author":{"gitId":"branzuelajohn"},"content":"        return (isDone ? \"\\u2713\" : \"\\u2718\");"},{"lineNumber":36,"author":{"gitId":"branzuelajohn"},"content":"    }"},{"lineNumber":37,"author":{"gitId":"branzuelajohn"},"content":""},{"lineNumber":38,"author":{"gitId":"branzuelajohn"},"content":"    public boolean getIsDone() {"},{"lineNumber":39,"author":{"gitId":"branzuelajohn"},"content":"        return this.isDone;"},{"lineNumber":40,"author":{"gitId":"branzuelajohn"},"content":"    }"},{"lineNumber":41,"author":{"gitId":"branzuelajohn"},"content":""},{"lineNumber":42,"author":{"gitId":"branzuelajohn"},"content":"    @Override"},{"lineNumber":43,"author":{"gitId":"branzuelajohn"},"content":"    public String toString() {"},{"lineNumber":44,"author":{"gitId":"branzuelajohn"},"content":"        return \"[\" + this.getStatusIcon() + \"] \" + this.description;"},{"lineNumber":45,"author":{"gitId":"branzuelajohn"},"content":"    }"},{"lineNumber":46,"author":{"gitId":"branzuelajohn"},"content":"}"}],"authorContributionMap":{"branzuelajohn":46}},{"path":"src/main/java/ToDo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"branzuelajohn"},"content":"public class ToDo extends Task {"},{"lineNumber":2,"author":{"gitId":"branzuelajohn"},"content":"    public ToDo(String description) {"},{"lineNumber":3,"author":{"gitId":"branzuelajohn"},"content":"        super(description);"},{"lineNumber":4,"author":{"gitId":"branzuelajohn"},"content":"    }"},{"lineNumber":5,"author":{"gitId":"branzuelajohn"},"content":""},{"lineNumber":6,"author":{"gitId":"branzuelajohn"},"content":"    @Override"},{"lineNumber":7,"author":{"gitId":"branzuelajohn"},"content":"    public String toString() {"},{"lineNumber":8,"author":{"gitId":"branzuelajohn"},"content":"        return \"[T]\" + super.toString();"},{"lineNumber":9,"author":{"gitId":"branzuelajohn"},"content":"    }"},{"lineNumber":10,"author":{"gitId":"branzuelajohn"},"content":""},{"lineNumber":11,"author":{"gitId":"branzuelajohn"},"content":"}"}],"authorContributionMap":{"branzuelajohn":11}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"branzuelajohn"},"content":"todo write essay"},{"lineNumber":2,"author":{"gitId":"branzuelajohn"},"content":"deadline complete essay /by August 6th"},{"lineNumber":3,"author":{"gitId":"branzuelajohn"},"content":"event project meeting /at 21st Jan 10PM"},{"lineNumber":4,"author":{"gitId":"branzuelajohn"},"content":"todo run"},{"lineNumber":5,"author":{"gitId":"branzuelajohn"},"content":"bye"}],"authorContributionMap":{"branzuelajohn":5}}]
