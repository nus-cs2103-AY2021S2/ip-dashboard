[{"path":"data/duke.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"branzuelajohn"},"content":"T | 0 | hello"},{"lineNumber":2,"author":{"gitId":"branzuelajohn"},"content":"T | 0 | borrow book"}],"authorContributionMap":{"branzuelajohn":2}},{"path":"src/main/java/duke/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"branzuelajohn"},"content":"package duke;"},{"lineNumber":2,"author":{"gitId":"branzuelajohn"},"content":"import java.io.File;"},{"lineNumber":3,"author":{"gitId":"branzuelajohn"},"content":"import duke.tasks.TaskList;"},{"lineNumber":4,"author":{"gitId":"branzuelajohn"},"content":"import duke.command.Command;"},{"lineNumber":5,"author":{"gitId":"branzuelajohn"},"content":""},{"lineNumber":6,"author":{"gitId":"branzuelajohn"},"content":"/**"},{"lineNumber":7,"author":{"gitId":"branzuelajohn"},"content":" *  Juke is a chatbot that helps users keep track of tasks."},{"lineNumber":8,"author":{"gitId":"branzuelajohn"},"content":" *"},{"lineNumber":9,"author":{"gitId":"branzuelajohn"},"content":" *  The chatbot supports, todos, events and deadlines,"},{"lineNumber":10,"author":{"gitId":"branzuelajohn"},"content":" *      todos: add to do task to a list"},{"lineNumber":11,"author":{"gitId":"branzuelajohn"},"content":" *      events: adds task to a list with a specific time for the event with \"/at\""},{"lineNumber":12,"author":{"gitId":"branzuelajohn"},"content":" *      deadlines: adds task to a list with a specific deadline with \"/by\""},{"lineNumber":13,"author":{"gitId":"branzuelajohn"},"content":" *"},{"lineNumber":14,"author":{"gitId":"branzuelajohn"},"content":" *      The done command followed by an integer x checks off  task x."},{"lineNumber":15,"author":{"gitId":"branzuelajohn"},"content":" *      The chatbot supports deletion of tasks with the \"delete\" command"},{"lineNumber":16,"author":{"gitId":"branzuelajohn"},"content":" *"},{"lineNumber":17,"author":{"gitId":"branzuelajohn"},"content":" *      The chatbot will throw exceptions for invalid inputs."},{"lineNumber":18,"author":{"gitId":"branzuelajohn"},"content":" * @author branzuelajohn"},{"lineNumber":19,"author":{"gitId":"branzuelajohn"},"content":" * @version CS2103T AY20/21 Semester 2, Individual Project"},{"lineNumber":20,"author":{"gitId":"branzuelajohn"},"content":" */"},{"lineNumber":21,"author":{"gitId":"-"},"content":"public class Duke {"},{"lineNumber":22,"author":{"gitId":"branzuelajohn"},"content":""},{"lineNumber":23,"author":{"gitId":"branzuelajohn"},"content":""},{"lineNumber":24,"author":{"gitId":"branzuelajohn"},"content":"        private Storage storage;"},{"lineNumber":25,"author":{"gitId":"branzuelajohn"},"content":"        private TaskList tasks;"},{"lineNumber":26,"author":{"gitId":"branzuelajohn"},"content":"        private Ui ui;"},{"lineNumber":27,"author":{"gitId":"branzuelajohn"},"content":""},{"lineNumber":28,"author":{"gitId":"branzuelajohn"},"content":"        public Duke(String filePath) {"},{"lineNumber":29,"author":{"gitId":"branzuelajohn"},"content":"            ui \u003d new Ui();"},{"lineNumber":30,"author":{"gitId":"branzuelajohn"},"content":"            storage \u003d new Storage(filePath);"},{"lineNumber":31,"author":{"gitId":"branzuelajohn"},"content":"            try {"},{"lineNumber":32,"author":{"gitId":"branzuelajohn"},"content":"                tasks \u003d new TaskList(storage.loadAllTasks());"},{"lineNumber":33,"author":{"gitId":"branzuelajohn"},"content":"            } catch (DukeException e) {"},{"lineNumber":34,"author":{"gitId":"branzuelajohn"},"content":"                System.out.println(tasks);"},{"lineNumber":35,"author":{"gitId":"branzuelajohn"},"content":"                ui.showLoadingError();"},{"lineNumber":36,"author":{"gitId":"branzuelajohn"},"content":"                tasks \u003d new TaskList();"},{"lineNumber":37,"author":{"gitId":"branzuelajohn"},"content":"            }"},{"lineNumber":38,"author":{"gitId":"branzuelajohn"},"content":"        }"},{"lineNumber":39,"author":{"gitId":"branzuelajohn"},"content":""},{"lineNumber":40,"author":{"gitId":"branzuelajohn"},"content":"        public void run() {"},{"lineNumber":41,"author":{"gitId":"branzuelajohn"},"content":"            ui.showWelcome();"},{"lineNumber":42,"author":{"gitId":"branzuelajohn"},"content":"            boolean isExit \u003d false;"},{"lineNumber":43,"author":{"gitId":"branzuelajohn"},"content":"            while (!isExit) {"},{"lineNumber":44,"author":{"gitId":"branzuelajohn"},"content":"                try {"},{"lineNumber":45,"author":{"gitId":"branzuelajohn"},"content":"                    String command \u003d ui.readCommand();"},{"lineNumber":46,"author":{"gitId":"branzuelajohn"},"content":"                    ui.printHorizontalLine();"},{"lineNumber":47,"author":{"gitId":"branzuelajohn"},"content":"                    Command c \u003d Parser.parse(command);"},{"lineNumber":48,"author":{"gitId":"branzuelajohn"},"content":"                    c.execute(tasks, ui, storage);"},{"lineNumber":49,"author":{"gitId":"branzuelajohn"},"content":"                    isExit \u003d c.isExit();"},{"lineNumber":50,"author":{"gitId":"branzuelajohn"},"content":"                } catch (DukeException e) {"},{"lineNumber":51,"author":{"gitId":"branzuelajohn"},"content":"                    ui.showError(e.getMessage());"},{"lineNumber":52,"author":{"gitId":"branzuelajohn"},"content":"                } finally {"},{"lineNumber":53,"author":{"gitId":"branzuelajohn"},"content":"                    ui.printHorizontalLine();"},{"lineNumber":54,"author":{"gitId":"branzuelajohn"},"content":"                }"},{"lineNumber":55,"author":{"gitId":"branzuelajohn"},"content":"            }"},{"lineNumber":56,"author":{"gitId":"branzuelajohn"},"content":"        }"},{"lineNumber":57,"author":{"gitId":"branzuelajohn"},"content":""},{"lineNumber":58,"author":{"gitId":"branzuelajohn"},"content":"        public static void main(String[] args) {"},{"lineNumber":59,"author":{"gitId":"branzuelajohn"},"content":"            String currentDir \u003d System.getProperty(\"user.dir\");"},{"lineNumber":60,"author":{"gitId":"branzuelajohn"},"content":"            String filePath \u003d currentDir + File.separator + \"data\" + File.separator + \"duke.txt\";"},{"lineNumber":61,"author":{"gitId":"branzuelajohn"},"content":""},{"lineNumber":62,"author":{"gitId":"branzuelajohn"},"content":"            new Duke(filePath).run();"},{"lineNumber":63,"author":{"gitId":"branzuelajohn"},"content":"        }"},{"lineNumber":64,"author":{"gitId":"branzuelajohn"},"content":""},{"lineNumber":65,"author":{"gitId":"-"},"content":"}"}],"authorContributionMap":{"branzuelajohn":63,"-":2}},{"path":"src/main/java/duke/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"branzuelajohn"},"content":"package duke;"},{"lineNumber":2,"author":{"gitId":"branzuelajohn"},"content":""},{"lineNumber":3,"author":{"gitId":"branzuelajohn"},"content":"public class DukeException extends Exception {"},{"lineNumber":4,"author":{"gitId":"branzuelajohn"},"content":""},{"lineNumber":5,"author":{"gitId":"branzuelajohn"},"content":"    public DukeException(String error) {"},{"lineNumber":6,"author":{"gitId":"branzuelajohn"},"content":"        super(error);"},{"lineNumber":7,"author":{"gitId":"branzuelajohn"},"content":"    }"},{"lineNumber":8,"author":{"gitId":"branzuelajohn"},"content":""},{"lineNumber":9,"author":{"gitId":"branzuelajohn"},"content":"}"}],"authorContributionMap":{"branzuelajohn":9}},{"path":"src/main/java/duke/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"branzuelajohn"},"content":"package duke;"},{"lineNumber":2,"author":{"gitId":"branzuelajohn"},"content":""},{"lineNumber":3,"author":{"gitId":"branzuelajohn"},"content":"import duke.command.*;"},{"lineNumber":4,"author":{"gitId":"branzuelajohn"},"content":""},{"lineNumber":5,"author":{"gitId":"branzuelajohn"},"content":"public class Parser {"},{"lineNumber":6,"author":{"gitId":"branzuelajohn"},"content":""},{"lineNumber":7,"author":{"gitId":"branzuelajohn"},"content":"    public static Command parse(String command) throws DukeException {"},{"lineNumber":8,"author":{"gitId":"branzuelajohn"},"content":"        if (command.equals(\"bye\")) {"},{"lineNumber":9,"author":{"gitId":"branzuelajohn"},"content":"            return new ByeCommand();"},{"lineNumber":10,"author":{"gitId":"branzuelajohn"},"content":"        } else if (command.equals(\"list\")) {"},{"lineNumber":11,"author":{"gitId":"branzuelajohn"},"content":"            return new ListCommand();"},{"lineNumber":12,"author":{"gitId":"branzuelajohn"},"content":"        } else if (command.contains(\"done\")) {"},{"lineNumber":13,"author":{"gitId":"branzuelajohn"},"content":"            return new DoneCommand(command);"},{"lineNumber":14,"author":{"gitId":"branzuelajohn"},"content":"        } else if (command.contains(\"todo\")) {"},{"lineNumber":15,"author":{"gitId":"branzuelajohn"},"content":"            return new ToDoCommand(command);"},{"lineNumber":16,"author":{"gitId":"branzuelajohn"},"content":"        } else if (command.contains(\"deadline\")) {"},{"lineNumber":17,"author":{"gitId":"branzuelajohn"},"content":"            return new DeadlineCommand(command);"},{"lineNumber":18,"author":{"gitId":"branzuelajohn"},"content":"        } else if (command.contains(\"event\")) {"},{"lineNumber":19,"author":{"gitId":"branzuelajohn"},"content":"            return new EventCommand(command);"},{"lineNumber":20,"author":{"gitId":"branzuelajohn"},"content":"        } else if (command.contains(\"delete\")) {"},{"lineNumber":21,"author":{"gitId":"branzuelajohn"},"content":"            return new DeleteCommand(command);"},{"lineNumber":22,"author":{"gitId":"branzuelajohn"},"content":"        } else {"},{"lineNumber":23,"author":{"gitId":"branzuelajohn"},"content":"            throw new DukeException(\"â˜¹ OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\");"},{"lineNumber":24,"author":{"gitId":"branzuelajohn"},"content":"        }"},{"lineNumber":25,"author":{"gitId":"branzuelajohn"},"content":"    }"},{"lineNumber":26,"author":{"gitId":"branzuelajohn"},"content":"}"}],"authorContributionMap":{"branzuelajohn":26}},{"path":"src/main/java/duke/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"branzuelajohn"},"content":"package duke;"},{"lineNumber":2,"author":{"gitId":"branzuelajohn"},"content":""},{"lineNumber":3,"author":{"gitId":"branzuelajohn"},"content":"import duke.tasks.Task;"},{"lineNumber":4,"author":{"gitId":"branzuelajohn"},"content":"import duke.tasks.Deadline;"},{"lineNumber":5,"author":{"gitId":"branzuelajohn"},"content":"import duke.tasks.Event;"},{"lineNumber":6,"author":{"gitId":"branzuelajohn"},"content":"import duke.tasks.ToDo;"},{"lineNumber":7,"author":{"gitId":"branzuelajohn"},"content":""},{"lineNumber":8,"author":{"gitId":"branzuelajohn"},"content":"import java.io.FileWriter;"},{"lineNumber":9,"author":{"gitId":"branzuelajohn"},"content":"import java.io.BufferedReader;"},{"lineNumber":10,"author":{"gitId":"branzuelajohn"},"content":"import java.io.FileReader;"},{"lineNumber":11,"author":{"gitId":"branzuelajohn"},"content":"import java.io.File;"},{"lineNumber":12,"author":{"gitId":"branzuelajohn"},"content":"import java.nio.file.Files;"},{"lineNumber":13,"author":{"gitId":"branzuelajohn"},"content":"import java.nio.file.Paths;"},{"lineNumber":14,"author":{"gitId":"branzuelajohn"},"content":"import java.util.ArrayList;"},{"lineNumber":15,"author":{"gitId":"branzuelajohn"},"content":"import java.io.IOException;"},{"lineNumber":16,"author":{"gitId":"branzuelajohn"},"content":""},{"lineNumber":17,"author":{"gitId":"branzuelajohn"},"content":"public class Storage {"},{"lineNumber":18,"author":{"gitId":"branzuelajohn"},"content":"    protected String filePath;"},{"lineNumber":19,"author":{"gitId":"branzuelajohn"},"content":""},{"lineNumber":20,"author":{"gitId":"branzuelajohn"},"content":"    public Storage(String filePath)  {"},{"lineNumber":21,"author":{"gitId":"branzuelajohn"},"content":"        this.filePath \u003d filePath;"},{"lineNumber":22,"author":{"gitId":"branzuelajohn"},"content":"    }"},{"lineNumber":23,"author":{"gitId":"branzuelajohn"},"content":""},{"lineNumber":24,"author":{"gitId":"branzuelajohn"},"content":"    public ArrayList\u003cTask\u003e loadAllTasks() throws DukeException {"},{"lineNumber":25,"author":{"gitId":"branzuelajohn"},"content":"        ArrayList\u003cTask\u003e taskList \u003d new ArrayList\u003c\u003e();"},{"lineNumber":26,"author":{"gitId":"branzuelajohn"},"content":"        File f \u003d new File(filePath);"},{"lineNumber":27,"author":{"gitId":"branzuelajohn"},"content":""},{"lineNumber":28,"author":{"gitId":"branzuelajohn"},"content":"        if(f.exists() \u0026\u0026 !f.isDirectory()) {"},{"lineNumber":29,"author":{"gitId":"branzuelajohn"},"content":"            try {"},{"lineNumber":30,"author":{"gitId":"branzuelajohn"},"content":"                for(String line :  Files.readAllLines(Paths.get(filePath))) {"},{"lineNumber":31,"author":{"gitId":"branzuelajohn"},"content":"                    String[] dataArr \u003d line.split(\" \\\\| \");"},{"lineNumber":32,"author":{"gitId":"branzuelajohn"},"content":"                    String typeTask \u003d dataArr[0];"},{"lineNumber":33,"author":{"gitId":"branzuelajohn"},"content":""},{"lineNumber":34,"author":{"gitId":"branzuelajohn"},"content":"                    switch (typeTask) {"},{"lineNumber":35,"author":{"gitId":"branzuelajohn"},"content":"                    case \"T\":"},{"lineNumber":36,"author":{"gitId":"branzuelajohn"},"content":"                        ToDo td \u003d new ToDo(dataArr[2]);"},{"lineNumber":37,"author":{"gitId":"branzuelajohn"},"content":"                        if (dataArr[1].equals(\"1\")) {"},{"lineNumber":38,"author":{"gitId":"branzuelajohn"},"content":"                            td.markAsDone();"},{"lineNumber":39,"author":{"gitId":"branzuelajohn"},"content":"                        }"},{"lineNumber":40,"author":{"gitId":"branzuelajohn"},"content":""},{"lineNumber":41,"author":{"gitId":"branzuelajohn"},"content":"                        taskList.add(td);"},{"lineNumber":42,"author":{"gitId":"branzuelajohn"},"content":"                        break;"},{"lineNumber":43,"author":{"gitId":"branzuelajohn"},"content":""},{"lineNumber":44,"author":{"gitId":"branzuelajohn"},"content":"                    case \"D\":"},{"lineNumber":45,"author":{"gitId":"branzuelajohn"},"content":"                        Deadline d \u003d new Deadline(dataArr[2], dataArr[3]);"},{"lineNumber":46,"author":{"gitId":"branzuelajohn"},"content":""},{"lineNumber":47,"author":{"gitId":"branzuelajohn"},"content":"                        if (dataArr[1].equals(\"1\")) {"},{"lineNumber":48,"author":{"gitId":"branzuelajohn"},"content":"                            d.markAsDone();"},{"lineNumber":49,"author":{"gitId":"branzuelajohn"},"content":"                        }"},{"lineNumber":50,"author":{"gitId":"branzuelajohn"},"content":""},{"lineNumber":51,"author":{"gitId":"branzuelajohn"},"content":"                        taskList.add(d);"},{"lineNumber":52,"author":{"gitId":"branzuelajohn"},"content":"                        break;"},{"lineNumber":53,"author":{"gitId":"branzuelajohn"},"content":""},{"lineNumber":54,"author":{"gitId":"branzuelajohn"},"content":"                    case \"E\":"},{"lineNumber":55,"author":{"gitId":"branzuelajohn"},"content":"                        Event e \u003d new Event(dataArr[2], dataArr[3]);"},{"lineNumber":56,"author":{"gitId":"branzuelajohn"},"content":""},{"lineNumber":57,"author":{"gitId":"branzuelajohn"},"content":"                        if (dataArr[1].equals(\"1\")) {"},{"lineNumber":58,"author":{"gitId":"branzuelajohn"},"content":"                            e.markAsDone();"},{"lineNumber":59,"author":{"gitId":"branzuelajohn"},"content":"                        }"},{"lineNumber":60,"author":{"gitId":"branzuelajohn"},"content":"                        taskList.add(e);"},{"lineNumber":61,"author":{"gitId":"branzuelajohn"},"content":"                        break;"},{"lineNumber":62,"author":{"gitId":"branzuelajohn"},"content":"                    default:"},{"lineNumber":63,"author":{"gitId":"branzuelajohn"},"content":"                        throw new DukeException(\"Line cannot be read\");"},{"lineNumber":64,"author":{"gitId":"branzuelajohn"},"content":"                    }"},{"lineNumber":65,"author":{"gitId":"branzuelajohn"},"content":"                }"},{"lineNumber":66,"author":{"gitId":"branzuelajohn"},"content":"                System.out.println(\"Successfully loaded all tasks\");"},{"lineNumber":67,"author":{"gitId":"branzuelajohn"},"content":"                return taskList;"},{"lineNumber":68,"author":{"gitId":"branzuelajohn"},"content":"            } catch (IOException e) {"},{"lineNumber":69,"author":{"gitId":"branzuelajohn"},"content":"                System.out.println(\"Error reading file\" + e);"},{"lineNumber":70,"author":{"gitId":"branzuelajohn"},"content":"                throw new DukeException(\"Error reading file\");"},{"lineNumber":71,"author":{"gitId":"branzuelajohn"},"content":"            }"},{"lineNumber":72,"author":{"gitId":"branzuelajohn"},"content":"        } else {"},{"lineNumber":73,"author":{"gitId":"branzuelajohn"},"content":"            try {"},{"lineNumber":74,"author":{"gitId":"branzuelajohn"},"content":"                f.getParentFile().mkdirs();"},{"lineNumber":75,"author":{"gitId":"branzuelajohn"},"content":"                f.createNewFile();"},{"lineNumber":76,"author":{"gitId":"branzuelajohn"},"content":"            } catch (IOException e) {"},{"lineNumber":77,"author":{"gitId":"branzuelajohn"},"content":"                System.out.println(\"Error creating file\" + e);"},{"lineNumber":78,"author":{"gitId":"branzuelajohn"},"content":"                throw new DukeException(\"Error reading file\");"},{"lineNumber":79,"author":{"gitId":"branzuelajohn"},"content":"            }"},{"lineNumber":80,"author":{"gitId":"branzuelajohn"},"content":"        }"},{"lineNumber":81,"author":{"gitId":"branzuelajohn"},"content":"        return new ArrayList\u003c\u003e();"},{"lineNumber":82,"author":{"gitId":"branzuelajohn"},"content":"    }"},{"lineNumber":83,"author":{"gitId":"branzuelajohn"},"content":""},{"lineNumber":84,"author":{"gitId":"branzuelajohn"},"content":"    public void addNewDataToFile(String taskType, String done, String description, String deadline) {"},{"lineNumber":85,"author":{"gitId":"branzuelajohn"},"content":"        try {"},{"lineNumber":86,"author":{"gitId":"branzuelajohn"},"content":"            FileWriter mw \u003d new FileWriter(filePath, true);"},{"lineNumber":87,"author":{"gitId":"branzuelajohn"},"content":"            switch (taskType) {"},{"lineNumber":88,"author":{"gitId":"branzuelajohn"},"content":"            case \"T\":"},{"lineNumber":89,"author":{"gitId":"branzuelajohn"},"content":"                mw.write(taskType + \" | \" + done + \" | \" + description + \"\\n\");"},{"lineNumber":90,"author":{"gitId":"branzuelajohn"},"content":"                mw.close();"},{"lineNumber":91,"author":{"gitId":"branzuelajohn"},"content":"                break;"},{"lineNumber":92,"author":{"gitId":"branzuelajohn"},"content":"            case \"D\":"},{"lineNumber":93,"author":{"gitId":"branzuelajohn"},"content":"            case \"E\":"},{"lineNumber":94,"author":{"gitId":"branzuelajohn"},"content":"                mw.write(taskType + \" | \" + done + \" | \" + description + \" | \" + deadline + \"\\n\");"},{"lineNumber":95,"author":{"gitId":"branzuelajohn"},"content":"                mw.close();"},{"lineNumber":96,"author":{"gitId":"branzuelajohn"},"content":"            }"},{"lineNumber":97,"author":{"gitId":"branzuelajohn"},"content":"        } catch (IOException e) {"},{"lineNumber":98,"author":{"gitId":"branzuelajohn"},"content":"            System.out.println(\"Encountered problem writing to file\" + e);"},{"lineNumber":99,"author":{"gitId":"branzuelajohn"},"content":"        }"},{"lineNumber":100,"author":{"gitId":"branzuelajohn"},"content":"    }"},{"lineNumber":101,"author":{"gitId":"branzuelajohn"},"content":""},{"lineNumber":102,"author":{"gitId":"branzuelajohn"},"content":"    public void editDataInFile(int taskNumber, String taskType, String done,"},{"lineNumber":103,"author":{"gitId":"branzuelajohn"},"content":"                                      String description, String deadline, int total) {"},{"lineNumber":104,"author":{"gitId":"branzuelajohn"},"content":"        try {"},{"lineNumber":105,"author":{"gitId":"branzuelajohn"},"content":""},{"lineNumber":106,"author":{"gitId":"branzuelajohn"},"content":"            BufferedReader br \u003d new BufferedReader(new FileReader(filePath));"},{"lineNumber":107,"author":{"gitId":"branzuelajohn"},"content":""},{"lineNumber":108,"author":{"gitId":"branzuelajohn"},"content":"            //String buffer to store contents of the file"},{"lineNumber":109,"author":{"gitId":"branzuelajohn"},"content":"            StringBuffer sb \u003d new StringBuffer(\"\");"},{"lineNumber":110,"author":{"gitId":"branzuelajohn"},"content":""},{"lineNumber":111,"author":{"gitId":"branzuelajohn"},"content":"            //Keep track of the line number"},{"lineNumber":112,"author":{"gitId":"branzuelajohn"},"content":"            int lineNumber \u003d 1;"},{"lineNumber":113,"author":{"gitId":"branzuelajohn"},"content":"            String line;"},{"lineNumber":114,"author":{"gitId":"branzuelajohn"},"content":"            System.out.println(\"total: \" + total);"},{"lineNumber":115,"author":{"gitId":"branzuelajohn"},"content":"            System.out.println(\"taskNumber: \" + taskNumber);"},{"lineNumber":116,"author":{"gitId":"branzuelajohn"},"content":""},{"lineNumber":117,"author":{"gitId":"branzuelajohn"},"content":"            while ((line \u003d br.readLine()) !\u003d null) {"},{"lineNumber":118,"author":{"gitId":"branzuelajohn"},"content":"                //Store each valid line in the string buffer"},{"lineNumber":119,"author":{"gitId":"branzuelajohn"},"content":"                if (lineNumber !\u003d taskNumber \u0026\u0026 lineNumber !\u003d total) {"},{"lineNumber":120,"author":{"gitId":"branzuelajohn"},"content":"                    System.out.println(\"linenumber: \" + lineNumber + \" line: \" + line);"},{"lineNumber":121,"author":{"gitId":"branzuelajohn"},"content":"                    sb.append(line + \"\\n\");"},{"lineNumber":122,"author":{"gitId":"branzuelajohn"},"content":"                } else if (lineNumber !\u003d taskNumber) {"},{"lineNumber":123,"author":{"gitId":"branzuelajohn"},"content":"                    System.out.println(\"linenumber: \" + lineNumber + \" line: \" + line);"},{"lineNumber":124,"author":{"gitId":"branzuelajohn"},"content":"                    sb.append(line);"},{"lineNumber":125,"author":{"gitId":"branzuelajohn"},"content":"                } else {"},{"lineNumber":126,"author":{"gitId":"branzuelajohn"},"content":"                    String data;"},{"lineNumber":127,"author":{"gitId":"branzuelajohn"},"content":"                    if (taskType.equals(\"T\")) {"},{"lineNumber":128,"author":{"gitId":"branzuelajohn"},"content":"                        data \u003d taskType + \" | \" + done + \" | \" + description;"},{"lineNumber":129,"author":{"gitId":"branzuelajohn"},"content":"                    } else {"},{"lineNumber":130,"author":{"gitId":"branzuelajohn"},"content":"                        data \u003d taskType + \" | \" + done + \" | \" + description + \" | \" + deadline;"},{"lineNumber":131,"author":{"gitId":"branzuelajohn"},"content":"                    }"},{"lineNumber":132,"author":{"gitId":"branzuelajohn"},"content":"                    System.out.println(\"lineNumber: \" + lineNumber + \" line: \" + line);"},{"lineNumber":133,"author":{"gitId":"branzuelajohn"},"content":""},{"lineNumber":134,"author":{"gitId":"branzuelajohn"},"content":"                    if (lineNumber \u003d\u003d total) {"},{"lineNumber":135,"author":{"gitId":"branzuelajohn"},"content":"                        sb.append(data);"},{"lineNumber":136,"author":{"gitId":"branzuelajohn"},"content":"                    } else {"},{"lineNumber":137,"author":{"gitId":"branzuelajohn"},"content":"                        sb.append(data + \"\\n\");"},{"lineNumber":138,"author":{"gitId":"branzuelajohn"},"content":"                    }"},{"lineNumber":139,"author":{"gitId":"branzuelajohn"},"content":"                }"},{"lineNumber":140,"author":{"gitId":"branzuelajohn"},"content":"                lineNumber++;"},{"lineNumber":141,"author":{"gitId":"branzuelajohn"},"content":"            }"},{"lineNumber":142,"author":{"gitId":"branzuelajohn"},"content":"            br.close();"},{"lineNumber":143,"author":{"gitId":"branzuelajohn"},"content":""},{"lineNumber":144,"author":{"gitId":"branzuelajohn"},"content":"            FileWriter fw \u003d new FileWriter(new File(filePath));"},{"lineNumber":145,"author":{"gitId":"branzuelajohn"},"content":"            //Write entire string buffer into the file"},{"lineNumber":146,"author":{"gitId":"branzuelajohn"},"content":"            fw.write(sb.toString());"},{"lineNumber":147,"author":{"gitId":"branzuelajohn"},"content":"            fw.close();"},{"lineNumber":148,"author":{"gitId":"branzuelajohn"},"content":"        }"},{"lineNumber":149,"author":{"gitId":"branzuelajohn"},"content":"        catch (IOException e) {"},{"lineNumber":150,"author":{"gitId":"branzuelajohn"},"content":"            System.out.println(\"Error editing file: \" + e.getMessage());"},{"lineNumber":151,"author":{"gitId":"branzuelajohn"},"content":"        }"},{"lineNumber":152,"author":{"gitId":"branzuelajohn"},"content":"    }"},{"lineNumber":153,"author":{"gitId":"branzuelajohn"},"content":""},{"lineNumber":154,"author":{"gitId":"branzuelajohn"},"content":"    public void removeDataInFile(int taskNumber, int total) {"},{"lineNumber":155,"author":{"gitId":"branzuelajohn"},"content":"        try {"},{"lineNumber":156,"author":{"gitId":"branzuelajohn"},"content":"            String currentDir \u003d System.getProperty(\"user.dir\");"},{"lineNumber":157,"author":{"gitId":"branzuelajohn"},"content":"            String filePath \u003d currentDir + File.separator + \"data\" + File.separator + \"duke.txt\";"},{"lineNumber":158,"author":{"gitId":"branzuelajohn"},"content":"            BufferedReader br \u003d new BufferedReader(new FileReader(filePath));"},{"lineNumber":159,"author":{"gitId":"branzuelajohn"},"content":""},{"lineNumber":160,"author":{"gitId":"branzuelajohn"},"content":"            //String buffer to store contents of the file"},{"lineNumber":161,"author":{"gitId":"branzuelajohn"},"content":"            StringBuffer sb \u003d new StringBuffer(\"\");"},{"lineNumber":162,"author":{"gitId":"branzuelajohn"},"content":""},{"lineNumber":163,"author":{"gitId":"branzuelajohn"},"content":"            //Keep track of the line number"},{"lineNumber":164,"author":{"gitId":"branzuelajohn"},"content":"            int lineNumber \u003d 1;"},{"lineNumber":165,"author":{"gitId":"branzuelajohn"},"content":"            String line;"},{"lineNumber":166,"author":{"gitId":"branzuelajohn"},"content":""},{"lineNumber":167,"author":{"gitId":"branzuelajohn"},"content":"            while ((line \u003d br.readLine()) !\u003d null) {"},{"lineNumber":168,"author":{"gitId":"branzuelajohn"},"content":"                //Store each valid line in the string buffer"},{"lineNumber":169,"author":{"gitId":"branzuelajohn"},"content":"                if (lineNumber !\u003d taskNumber \u0026\u0026 lineNumber \u003d\u003d total + 1) {"},{"lineNumber":170,"author":{"gitId":"branzuelajohn"},"content":"                    sb.append(line);"},{"lineNumber":171,"author":{"gitId":"branzuelajohn"},"content":"                } else if (lineNumber !\u003d taskNumber) {"},{"lineNumber":172,"author":{"gitId":"branzuelajohn"},"content":"                    sb.append(line + \"\\n\");"},{"lineNumber":173,"author":{"gitId":"branzuelajohn"},"content":"                }"},{"lineNumber":174,"author":{"gitId":"branzuelajohn"},"content":"                lineNumber++;"},{"lineNumber":175,"author":{"gitId":"branzuelajohn"},"content":"            }"},{"lineNumber":176,"author":{"gitId":"branzuelajohn"},"content":"            br.close();"},{"lineNumber":177,"author":{"gitId":"branzuelajohn"},"content":""},{"lineNumber":178,"author":{"gitId":"branzuelajohn"},"content":"            FileWriter fw \u003d new FileWriter(new File(filePath));"},{"lineNumber":179,"author":{"gitId":"branzuelajohn"},"content":"            //Write entire string buffer into the file"},{"lineNumber":180,"author":{"gitId":"branzuelajohn"},"content":"            fw.write(sb.toString());"},{"lineNumber":181,"author":{"gitId":"branzuelajohn"},"content":"            fw.close();"},{"lineNumber":182,"author":{"gitId":"branzuelajohn"},"content":"        }"},{"lineNumber":183,"author":{"gitId":"branzuelajohn"},"content":"        catch (Exception ex) {"},{"lineNumber":184,"author":{"gitId":"branzuelajohn"},"content":"            System.out.println(\"Error deleting line: \" + ex.getMessage());"},{"lineNumber":185,"author":{"gitId":"branzuelajohn"},"content":"        }"},{"lineNumber":186,"author":{"gitId":"branzuelajohn"},"content":"    }"},{"lineNumber":187,"author":{"gitId":"branzuelajohn"},"content":"}"}],"authorContributionMap":{"branzuelajohn":187}},{"path":"src/main/java/duke/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"branzuelajohn"},"content":"package duke;"},{"lineNumber":2,"author":{"gitId":"branzuelajohn"},"content":""},{"lineNumber":3,"author":{"gitId":"branzuelajohn"},"content":"import java.util.Scanner;"},{"lineNumber":4,"author":{"gitId":"branzuelajohn"},"content":""},{"lineNumber":5,"author":{"gitId":"branzuelajohn"},"content":"public class Ui {"},{"lineNumber":6,"author":{"gitId":"branzuelajohn"},"content":"    Scanner sc;"},{"lineNumber":7,"author":{"gitId":"branzuelajohn"},"content":""},{"lineNumber":8,"author":{"gitId":"branzuelajohn"},"content":"    public Ui() {"},{"lineNumber":9,"author":{"gitId":"branzuelajohn"},"content":"        this.sc \u003d new Scanner(System.in);"},{"lineNumber":10,"author":{"gitId":"branzuelajohn"},"content":""},{"lineNumber":11,"author":{"gitId":"branzuelajohn"},"content":"    }"},{"lineNumber":12,"author":{"gitId":"branzuelajohn"},"content":""},{"lineNumber":13,"author":{"gitId":"branzuelajohn"},"content":"    public void printHorizontalLine() {"},{"lineNumber":14,"author":{"gitId":"branzuelajohn"},"content":"        System.out.println(\"_____________________________________\");"},{"lineNumber":15,"author":{"gitId":"branzuelajohn"},"content":"    }"},{"lineNumber":16,"author":{"gitId":"branzuelajohn"},"content":""},{"lineNumber":17,"author":{"gitId":"branzuelajohn"},"content":"    public void showWelcome() {"},{"lineNumber":18,"author":{"gitId":"branzuelajohn"},"content":"        printHorizontalLine();"},{"lineNumber":19,"author":{"gitId":"branzuelajohn"},"content":"        System.out.println(\"Hello! I\u0027m Juke\");"},{"lineNumber":20,"author":{"gitId":"branzuelajohn"},"content":"        System.out.println(\"What can I do for you?\");"},{"lineNumber":21,"author":{"gitId":"branzuelajohn"},"content":"        printHorizontalLine();"},{"lineNumber":22,"author":{"gitId":"branzuelajohn"},"content":"    }"},{"lineNumber":23,"author":{"gitId":"branzuelajohn"},"content":""},{"lineNumber":24,"author":{"gitId":"branzuelajohn"},"content":"    public String readCommand() {"},{"lineNumber":25,"author":{"gitId":"branzuelajohn"},"content":"        return sc.nextLine();"},{"lineNumber":26,"author":{"gitId":"branzuelajohn"},"content":"    }"},{"lineNumber":27,"author":{"gitId":"branzuelajohn"},"content":""},{"lineNumber":28,"author":{"gitId":"branzuelajohn"},"content":"    public void showLoadingError() {"},{"lineNumber":29,"author":{"gitId":"branzuelajohn"},"content":"        System.out.println(\"Error loading file\");"},{"lineNumber":30,"author":{"gitId":"branzuelajohn"},"content":"    }"},{"lineNumber":31,"author":{"gitId":"branzuelajohn"},"content":""},{"lineNumber":32,"author":{"gitId":"branzuelajohn"},"content":"    public void showError(String error) {"},{"lineNumber":33,"author":{"gitId":"branzuelajohn"},"content":"        System.out.println(error);"},{"lineNumber":34,"author":{"gitId":"branzuelajohn"},"content":"    }"},{"lineNumber":35,"author":{"gitId":"branzuelajohn"},"content":""},{"lineNumber":36,"author":{"gitId":"branzuelajohn"},"content":"    public void print(String message) {"},{"lineNumber":37,"author":{"gitId":"branzuelajohn"},"content":"        System.out.println(message);"},{"lineNumber":38,"author":{"gitId":"branzuelajohn"},"content":"    }"},{"lineNumber":39,"author":{"gitId":"branzuelajohn"},"content":"}"}],"authorContributionMap":{"branzuelajohn":39}},{"path":"src/main/java/duke/command/ByeCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"branzuelajohn"},"content":"package duke.command;"},{"lineNumber":2,"author":{"gitId":"branzuelajohn"},"content":""},{"lineNumber":3,"author":{"gitId":"branzuelajohn"},"content":"import duke.tasks.TaskList;"},{"lineNumber":4,"author":{"gitId":"branzuelajohn"},"content":"import duke.Ui;"},{"lineNumber":5,"author":{"gitId":"branzuelajohn"},"content":"import duke.Storage;"},{"lineNumber":6,"author":{"gitId":"branzuelajohn"},"content":""},{"lineNumber":7,"author":{"gitId":"branzuelajohn"},"content":"public class ByeCommand extends Command {"},{"lineNumber":8,"author":{"gitId":"branzuelajohn"},"content":"    public static final boolean IS_EXIT \u003d true;"},{"lineNumber":9,"author":{"gitId":"branzuelajohn"},"content":""},{"lineNumber":10,"author":{"gitId":"branzuelajohn"},"content":"    public ByeCommand() {"},{"lineNumber":11,"author":{"gitId":"branzuelajohn"},"content":"        super(IS_EXIT);"},{"lineNumber":12,"author":{"gitId":"branzuelajohn"},"content":"    }"},{"lineNumber":13,"author":{"gitId":"branzuelajohn"},"content":""},{"lineNumber":14,"author":{"gitId":"branzuelajohn"},"content":"    @Override"},{"lineNumber":15,"author":{"gitId":"branzuelajohn"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage) {"},{"lineNumber":16,"author":{"gitId":"branzuelajohn"},"content":"        System.out.println(\"    Bye. Hope to see you again soon!\");"},{"lineNumber":17,"author":{"gitId":"branzuelajohn"},"content":"    }"},{"lineNumber":18,"author":{"gitId":"branzuelajohn"},"content":"}"},{"lineNumber":19,"author":{"gitId":"branzuelajohn"},"content":""}],"authorContributionMap":{"branzuelajohn":19}},{"path":"src/main/java/duke/command/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"branzuelajohn"},"content":"package duke.command;"},{"lineNumber":2,"author":{"gitId":"branzuelajohn"},"content":""},{"lineNumber":3,"author":{"gitId":"branzuelajohn"},"content":"import duke.tasks.TaskList;"},{"lineNumber":4,"author":{"gitId":"branzuelajohn"},"content":"import duke.Ui;"},{"lineNumber":5,"author":{"gitId":"branzuelajohn"},"content":"import duke.Storage;"},{"lineNumber":6,"author":{"gitId":"branzuelajohn"},"content":"import duke.DukeException;"},{"lineNumber":7,"author":{"gitId":"branzuelajohn"},"content":""},{"lineNumber":8,"author":{"gitId":"branzuelajohn"},"content":""},{"lineNumber":9,"author":{"gitId":"branzuelajohn"},"content":"public abstract class Command {"},{"lineNumber":10,"author":{"gitId":"branzuelajohn"},"content":""},{"lineNumber":11,"author":{"gitId":"branzuelajohn"},"content":"    protected boolean isExit;"},{"lineNumber":12,"author":{"gitId":"branzuelajohn"},"content":""},{"lineNumber":13,"author":{"gitId":"branzuelajohn"},"content":"    public Command(boolean isExit) {"},{"lineNumber":14,"author":{"gitId":"branzuelajohn"},"content":"        this.isExit \u003d isExit;"},{"lineNumber":15,"author":{"gitId":"branzuelajohn"},"content":"    }"},{"lineNumber":16,"author":{"gitId":"branzuelajohn"},"content":""},{"lineNumber":17,"author":{"gitId":"branzuelajohn"},"content":"    public abstract void execute(TaskList tasks, Ui ui, Storage storage) throws DukeException;"},{"lineNumber":18,"author":{"gitId":"branzuelajohn"},"content":""},{"lineNumber":19,"author":{"gitId":"branzuelajohn"},"content":"    public boolean isExit() {"},{"lineNumber":20,"author":{"gitId":"branzuelajohn"},"content":"        return isExit;"},{"lineNumber":21,"author":{"gitId":"branzuelajohn"},"content":"    }"},{"lineNumber":22,"author":{"gitId":"branzuelajohn"},"content":""},{"lineNumber":23,"author":{"gitId":"branzuelajohn"},"content":"}"}],"authorContributionMap":{"branzuelajohn":23}},{"path":"src/main/java/duke/command/DeadlineCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"branzuelajohn"},"content":"package duke.command;"},{"lineNumber":2,"author":{"gitId":"branzuelajohn"},"content":""},{"lineNumber":3,"author":{"gitId":"branzuelajohn"},"content":"import duke.tasks.TaskList;"},{"lineNumber":4,"author":{"gitId":"branzuelajohn"},"content":"import duke.Ui;"},{"lineNumber":5,"author":{"gitId":"branzuelajohn"},"content":"import duke.Storage;"},{"lineNumber":6,"author":{"gitId":"branzuelajohn"},"content":"import duke.DukeException;"},{"lineNumber":7,"author":{"gitId":"branzuelajohn"},"content":"import duke.tasks.Deadline;"},{"lineNumber":8,"author":{"gitId":"branzuelajohn"},"content":""},{"lineNumber":9,"author":{"gitId":"branzuelajohn"},"content":"public class DeadlineCommand extends Command {"},{"lineNumber":10,"author":{"gitId":"branzuelajohn"},"content":"    public static final boolean IS_EXIT \u003d false;"},{"lineNumber":11,"author":{"gitId":"branzuelajohn"},"content":"    protected String input;"},{"lineNumber":12,"author":{"gitId":"branzuelajohn"},"content":""},{"lineNumber":13,"author":{"gitId":"branzuelajohn"},"content":"    public DeadlineCommand(String input) {"},{"lineNumber":14,"author":{"gitId":"branzuelajohn"},"content":"        super(IS_EXIT);"},{"lineNumber":15,"author":{"gitId":"branzuelajohn"},"content":"        this.input \u003d input;"},{"lineNumber":16,"author":{"gitId":"branzuelajohn"},"content":"    }"},{"lineNumber":17,"author":{"gitId":"branzuelajohn"},"content":""},{"lineNumber":18,"author":{"gitId":"branzuelajohn"},"content":"    @Override"},{"lineNumber":19,"author":{"gitId":"branzuelajohn"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage) throws DukeException {"},{"lineNumber":20,"author":{"gitId":"branzuelajohn"},"content":"        if (input.length() \u003c\u003d 9 || !input.contains(\"/by\")) {"},{"lineNumber":21,"author":{"gitId":"branzuelajohn"},"content":"            throw new DukeException(\"â˜¹ OOPS!!! The description of a deadline cannot be empty.\");"},{"lineNumber":22,"author":{"gitId":"branzuelajohn"},"content":"        }"},{"lineNumber":23,"author":{"gitId":"branzuelajohn"},"content":"        String[] strArr \u003d input.split(\"/by \");"},{"lineNumber":24,"author":{"gitId":"branzuelajohn"},"content":"        String description \u003d strArr[0].substring(9).trim();"},{"lineNumber":25,"author":{"gitId":"branzuelajohn"},"content":"        String by \u003d strArr[1];"},{"lineNumber":26,"author":{"gitId":"branzuelajohn"},"content":"        System.out.println(\"Got it. I\u0027ve added this task:\");"},{"lineNumber":27,"author":{"gitId":"branzuelajohn"},"content":"        Deadline d \u003d new Deadline(description, by);"},{"lineNumber":28,"author":{"gitId":"branzuelajohn"},"content":"        tasks.addTask(d);"},{"lineNumber":29,"author":{"gitId":"branzuelajohn"},"content":"        System.out.println(\" \" + d.toString());"},{"lineNumber":30,"author":{"gitId":"branzuelajohn"},"content":"        storage.addNewDataToFile(\"D\", \"0\", d.getDescription(), d.getBy());"},{"lineNumber":31,"author":{"gitId":"branzuelajohn"},"content":"        if(tasks.getSize() \u003d\u003d 1) {"},{"lineNumber":32,"author":{"gitId":"branzuelajohn"},"content":"            System.out.printf(\"Now you have %d task in the list.%n\", tasks.getSize());"},{"lineNumber":33,"author":{"gitId":"branzuelajohn"},"content":"        } else {"},{"lineNumber":34,"author":{"gitId":"branzuelajohn"},"content":"            System.out.printf(\"Now you have %d tasks in the list.%n\", tasks.getSize());"},{"lineNumber":35,"author":{"gitId":"branzuelajohn"},"content":"        }"},{"lineNumber":36,"author":{"gitId":"branzuelajohn"},"content":"    }"},{"lineNumber":37,"author":{"gitId":"branzuelajohn"},"content":"}"}],"authorContributionMap":{"branzuelajohn":37}},{"path":"src/main/java/duke/command/DeleteCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"branzuelajohn"},"content":"package duke.command;"},{"lineNumber":2,"author":{"gitId":"branzuelajohn"},"content":""},{"lineNumber":3,"author":{"gitId":"branzuelajohn"},"content":"import duke.tasks.Task;"},{"lineNumber":4,"author":{"gitId":"branzuelajohn"},"content":"import duke.tasks.TaskList;"},{"lineNumber":5,"author":{"gitId":"branzuelajohn"},"content":"import duke.Ui;"},{"lineNumber":6,"author":{"gitId":"branzuelajohn"},"content":"import duke.Storage;"},{"lineNumber":7,"author":{"gitId":"branzuelajohn"},"content":"import duke.DukeException;"},{"lineNumber":8,"author":{"gitId":"branzuelajohn"},"content":""},{"lineNumber":9,"author":{"gitId":"branzuelajohn"},"content":"public class DeleteCommand extends Command {"},{"lineNumber":10,"author":{"gitId":"branzuelajohn"},"content":"    public static final boolean IS_EXIT \u003d false;"},{"lineNumber":11,"author":{"gitId":"branzuelajohn"},"content":"    protected String input;"},{"lineNumber":12,"author":{"gitId":"branzuelajohn"},"content":""},{"lineNumber":13,"author":{"gitId":"branzuelajohn"},"content":"    public DeleteCommand(String input) {"},{"lineNumber":14,"author":{"gitId":"branzuelajohn"},"content":"        super(IS_EXIT);"},{"lineNumber":15,"author":{"gitId":"branzuelajohn"},"content":"        this.input \u003d input;"},{"lineNumber":16,"author":{"gitId":"branzuelajohn"},"content":"    }"},{"lineNumber":17,"author":{"gitId":"branzuelajohn"},"content":""},{"lineNumber":18,"author":{"gitId":"branzuelajohn"},"content":"    @Override"},{"lineNumber":19,"author":{"gitId":"branzuelajohn"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage) throws DukeException {"},{"lineNumber":20,"author":{"gitId":"branzuelajohn"},"content":"        String[] strArr \u003d input.split(\" \");"},{"lineNumber":21,"author":{"gitId":"branzuelajohn"},"content":"        if(strArr.length \u003d\u003d 1) {"},{"lineNumber":22,"author":{"gitId":"branzuelajohn"},"content":"            throw new DukeException(\"â˜¹ OOPS!!! I don\u0027t know which task to delete.\");"},{"lineNumber":23,"author":{"gitId":"branzuelajohn"},"content":"        }"},{"lineNumber":24,"author":{"gitId":"branzuelajohn"},"content":"        int idx \u003d Integer.parseInt(strArr[1]) - 1;"},{"lineNumber":25,"author":{"gitId":"branzuelajohn"},"content":"        Task t \u003d tasks.removeTask(idx);"},{"lineNumber":26,"author":{"gitId":"branzuelajohn"},"content":"        storage.removeDataInFile(idx + 1, tasks.getSize());"},{"lineNumber":27,"author":{"gitId":"branzuelajohn"},"content":"        System.out.println(\"Noted. I\u0027ve removed this task:\\n\" + t + \"\\nNow you have \""},{"lineNumber":28,"author":{"gitId":"branzuelajohn"},"content":"                + tasks.getSize() + \" tasks in the list.\");"},{"lineNumber":29,"author":{"gitId":"branzuelajohn"},"content":""},{"lineNumber":30,"author":{"gitId":"branzuelajohn"},"content":"    }"},{"lineNumber":31,"author":{"gitId":"branzuelajohn"},"content":"}"}],"authorContributionMap":{"branzuelajohn":31}},{"path":"src/main/java/duke/command/DoneCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"branzuelajohn"},"content":"package duke.command;"},{"lineNumber":2,"author":{"gitId":"branzuelajohn"},"content":""},{"lineNumber":3,"author":{"gitId":"branzuelajohn"},"content":"import duke.tasks.Task;"},{"lineNumber":4,"author":{"gitId":"branzuelajohn"},"content":"import duke.tasks.TaskList;"},{"lineNumber":5,"author":{"gitId":"branzuelajohn"},"content":"import duke.Ui;"},{"lineNumber":6,"author":{"gitId":"branzuelajohn"},"content":"import duke.Storage;"},{"lineNumber":7,"author":{"gitId":"branzuelajohn"},"content":"import duke.DukeException;"},{"lineNumber":8,"author":{"gitId":"branzuelajohn"},"content":"import duke.tasks.Deadline;"},{"lineNumber":9,"author":{"gitId":"branzuelajohn"},"content":"import duke.tasks.Event;"},{"lineNumber":10,"author":{"gitId":"branzuelajohn"},"content":""},{"lineNumber":11,"author":{"gitId":"branzuelajohn"},"content":"public class DoneCommand extends Command {"},{"lineNumber":12,"author":{"gitId":"branzuelajohn"},"content":"    public static final boolean IS_EXIT \u003d false;"},{"lineNumber":13,"author":{"gitId":"branzuelajohn"},"content":"    protected String input;"},{"lineNumber":14,"author":{"gitId":"branzuelajohn"},"content":""},{"lineNumber":15,"author":{"gitId":"branzuelajohn"},"content":"    public DoneCommand(String input) {"},{"lineNumber":16,"author":{"gitId":"branzuelajohn"},"content":"        super(IS_EXIT);"},{"lineNumber":17,"author":{"gitId":"branzuelajohn"},"content":"        this.input \u003d input;"},{"lineNumber":18,"author":{"gitId":"branzuelajohn"},"content":"    }"},{"lineNumber":19,"author":{"gitId":"branzuelajohn"},"content":""},{"lineNumber":20,"author":{"gitId":"branzuelajohn"},"content":"    @Override"},{"lineNumber":21,"author":{"gitId":"branzuelajohn"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage) throws DukeException {"},{"lineNumber":22,"author":{"gitId":"branzuelajohn"},"content":"        String[] array \u003d input.split(\" \");"},{"lineNumber":23,"author":{"gitId":"branzuelajohn"},"content":"        if (array.length \u003d\u003d 1) {"},{"lineNumber":24,"author":{"gitId":"branzuelajohn"},"content":"            throw new DukeException(\"â˜¹ OOPS!!! I don\u0027t know which task to mark as done.\");"},{"lineNumber":25,"author":{"gitId":"branzuelajohn"},"content":"        }"},{"lineNumber":26,"author":{"gitId":"branzuelajohn"},"content":"        if(tasks.getSize() \u003d\u003d 0) {"},{"lineNumber":27,"author":{"gitId":"branzuelajohn"},"content":"            throw new DukeException(\"â˜¹ OOPS!!! There are no tasks to be marked as done.\");"},{"lineNumber":28,"author":{"gitId":"branzuelajohn"},"content":"        }"},{"lineNumber":29,"author":{"gitId":"branzuelajohn"},"content":"        if(Integer.parseInt(array[1]) \u003e tasks.getSize()) {"},{"lineNumber":30,"author":{"gitId":"branzuelajohn"},"content":"            throw new DukeException(\"â˜¹ OOPS!!! There is no such task to be marked as done.\");"},{"lineNumber":31,"author":{"gitId":"branzuelajohn"},"content":"        }"},{"lineNumber":32,"author":{"gitId":"branzuelajohn"},"content":""},{"lineNumber":33,"author":{"gitId":"branzuelajohn"},"content":"        int idx \u003d Integer.parseInt(array[1]) - 1;"},{"lineNumber":34,"author":{"gitId":"branzuelajohn"},"content":"        Task t \u003d tasks.getTask(idx);"},{"lineNumber":35,"author":{"gitId":"branzuelajohn"},"content":"        t.markAsDone();"},{"lineNumber":36,"author":{"gitId":"branzuelajohn"},"content":"        if(t.getType().equals(\"D\")) {"},{"lineNumber":37,"author":{"gitId":"branzuelajohn"},"content":"            Deadline d \u003d (Deadline) t;"},{"lineNumber":38,"author":{"gitId":"branzuelajohn"},"content":"            storage.editDataInFile(idx + 1, t.getType(), \"1\", t.getDescription(),"},{"lineNumber":39,"author":{"gitId":"branzuelajohn"},"content":"                    d.getBy(), tasks.getSize());"},{"lineNumber":40,"author":{"gitId":"branzuelajohn"},"content":"        } else if (t.getType().equals(\"T\")) {"},{"lineNumber":41,"author":{"gitId":"branzuelajohn"},"content":"            storage.editDataInFile(idx + 1, t.getType(), \"1\", t.getDescription(),"},{"lineNumber":42,"author":{"gitId":"branzuelajohn"},"content":"                    \"\", tasks.getSize());"},{"lineNumber":43,"author":{"gitId":"branzuelajohn"},"content":""},{"lineNumber":44,"author":{"gitId":"branzuelajohn"},"content":"        } else {"},{"lineNumber":45,"author":{"gitId":"branzuelajohn"},"content":"            Event e \u003d (Event) t;"},{"lineNumber":46,"author":{"gitId":"branzuelajohn"},"content":"            storage.editDataInFile(idx + 1, t.getType(), \"1\", t.getDescription(),"},{"lineNumber":47,"author":{"gitId":"branzuelajohn"},"content":"                    e.getDate(), tasks.getSize());"},{"lineNumber":48,"author":{"gitId":"branzuelajohn"},"content":""},{"lineNumber":49,"author":{"gitId":"branzuelajohn"},"content":"        }"},{"lineNumber":50,"author":{"gitId":"branzuelajohn"},"content":"        System.out.println(\"    Nice! I\u0027ve marked this task as done:\\n  \" + t);"},{"lineNumber":51,"author":{"gitId":"branzuelajohn"},"content":"    }"},{"lineNumber":52,"author":{"gitId":"branzuelajohn"},"content":"}"}],"authorContributionMap":{"branzuelajohn":52}},{"path":"src/main/java/duke/command/EventCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"branzuelajohn"},"content":"package duke.command;"},{"lineNumber":2,"author":{"gitId":"branzuelajohn"},"content":""},{"lineNumber":3,"author":{"gitId":"branzuelajohn"},"content":"import duke.tasks.TaskList;"},{"lineNumber":4,"author":{"gitId":"branzuelajohn"},"content":"import duke.Ui;"},{"lineNumber":5,"author":{"gitId":"branzuelajohn"},"content":"import duke.Storage;"},{"lineNumber":6,"author":{"gitId":"branzuelajohn"},"content":"import duke.DukeException;"},{"lineNumber":7,"author":{"gitId":"branzuelajohn"},"content":"import duke.tasks.Event;"},{"lineNumber":8,"author":{"gitId":"branzuelajohn"},"content":""},{"lineNumber":9,"author":{"gitId":"branzuelajohn"},"content":"public class EventCommand extends Command {"},{"lineNumber":10,"author":{"gitId":"branzuelajohn"},"content":"    public static final boolean IS_EXIT \u003d false;"},{"lineNumber":11,"author":{"gitId":"branzuelajohn"},"content":"    protected String input;"},{"lineNumber":12,"author":{"gitId":"branzuelajohn"},"content":""},{"lineNumber":13,"author":{"gitId":"branzuelajohn"},"content":"    public EventCommand(String input) {"},{"lineNumber":14,"author":{"gitId":"branzuelajohn"},"content":"        super(IS_EXIT);"},{"lineNumber":15,"author":{"gitId":"branzuelajohn"},"content":"        this.input \u003d input;"},{"lineNumber":16,"author":{"gitId":"branzuelajohn"},"content":"    }"},{"lineNumber":17,"author":{"gitId":"branzuelajohn"},"content":""},{"lineNumber":18,"author":{"gitId":"branzuelajohn"},"content":"    @Override"},{"lineNumber":19,"author":{"gitId":"branzuelajohn"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage) throws DukeException {"},{"lineNumber":20,"author":{"gitId":"branzuelajohn"},"content":"        if(input.length() \u003c\u003d 6 || !input.contains(\"/at\")) {"},{"lineNumber":21,"author":{"gitId":"branzuelajohn"},"content":"            throw new DukeException(\"â˜¹ OOPS!!! The description of an event cannot be empty\");"},{"lineNumber":22,"author":{"gitId":"branzuelajohn"},"content":"        }"},{"lineNumber":23,"author":{"gitId":"branzuelajohn"},"content":"        String[] strArr \u003d input.split(\"/at \");"},{"lineNumber":24,"author":{"gitId":"branzuelajohn"},"content":"        String description \u003d strArr[0].substring(6).trim();"},{"lineNumber":25,"author":{"gitId":"branzuelajohn"},"content":"        String date \u003d strArr[1];"},{"lineNumber":26,"author":{"gitId":"branzuelajohn"},"content":"        System.out.println(\"Got it. I\u0027ve added this task:\");"},{"lineNumber":27,"author":{"gitId":"branzuelajohn"},"content":"        Event e \u003d new Event(description, date);"},{"lineNumber":28,"author":{"gitId":"branzuelajohn"},"content":"        tasks.addTask(e);"},{"lineNumber":29,"author":{"gitId":"branzuelajohn"},"content":"        System.out.println(\" \" + e.toString());"},{"lineNumber":30,"author":{"gitId":"branzuelajohn"},"content":"        storage.addNewDataToFile(\"E\", \"0\", e.getDescription(), e.getDate());"},{"lineNumber":31,"author":{"gitId":"branzuelajohn"},"content":"        if(tasks.getSize() \u003d\u003d 1) {"},{"lineNumber":32,"author":{"gitId":"branzuelajohn"},"content":"            System.out.printf(\"Now you have %d task in the list.%n\", tasks.getSize());"},{"lineNumber":33,"author":{"gitId":"branzuelajohn"},"content":"        } else {"},{"lineNumber":34,"author":{"gitId":"branzuelajohn"},"content":"            System.out.printf(\"Now you have %d tasks in the list.%n\", tasks.getSize());"},{"lineNumber":35,"author":{"gitId":"branzuelajohn"},"content":"        }"},{"lineNumber":36,"author":{"gitId":"branzuelajohn"},"content":"    }"},{"lineNumber":37,"author":{"gitId":"branzuelajohn"},"content":"}"}],"authorContributionMap":{"branzuelajohn":37}},{"path":"src/main/java/duke/command/ListCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"branzuelajohn"},"content":"package duke.command;"},{"lineNumber":2,"author":{"gitId":"branzuelajohn"},"content":""},{"lineNumber":3,"author":{"gitId":"branzuelajohn"},"content":"import duke.tasks.Task;"},{"lineNumber":4,"author":{"gitId":"branzuelajohn"},"content":"import duke.tasks.TaskList;"},{"lineNumber":5,"author":{"gitId":"branzuelajohn"},"content":"import duke.Ui;"},{"lineNumber":6,"author":{"gitId":"branzuelajohn"},"content":"import duke.Storage;"},{"lineNumber":7,"author":{"gitId":"branzuelajohn"},"content":""},{"lineNumber":8,"author":{"gitId":"branzuelajohn"},"content":"public class ListCommand extends Command {"},{"lineNumber":9,"author":{"gitId":"branzuelajohn"},"content":"    public static final boolean IS_EXIT \u003d false;"},{"lineNumber":10,"author":{"gitId":"branzuelajohn"},"content":""},{"lineNumber":11,"author":{"gitId":"branzuelajohn"},"content":"    public ListCommand() {"},{"lineNumber":12,"author":{"gitId":"branzuelajohn"},"content":"        super(IS_EXIT);"},{"lineNumber":13,"author":{"gitId":"branzuelajohn"},"content":"    }"},{"lineNumber":14,"author":{"gitId":"branzuelajohn"},"content":""},{"lineNumber":15,"author":{"gitId":"branzuelajohn"},"content":"    @Override"},{"lineNumber":16,"author":{"gitId":"branzuelajohn"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage) {"},{"lineNumber":17,"author":{"gitId":"branzuelajohn"},"content":"        System.out.println(\"    Here are the tasks in your list:\");"},{"lineNumber":18,"author":{"gitId":"branzuelajohn"},"content":"        for(int i \u003d 0; i \u003c tasks.getSize(); i++) {"},{"lineNumber":19,"author":{"gitId":"branzuelajohn"},"content":"            Task task \u003d tasks.getTask(i);"},{"lineNumber":20,"author":{"gitId":"branzuelajohn"},"content":"            int j \u003d i + 1;"},{"lineNumber":21,"author":{"gitId":"branzuelajohn"},"content":"            System.out.println(\"    \" + (j) + \".\" + task);"},{"lineNumber":22,"author":{"gitId":"branzuelajohn"},"content":"        }"},{"lineNumber":23,"author":{"gitId":"branzuelajohn"},"content":"    }"},{"lineNumber":24,"author":{"gitId":"branzuelajohn"},"content":"}"}],"authorContributionMap":{"branzuelajohn":24}},{"path":"src/main/java/duke/command/ToDoCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"branzuelajohn"},"content":"package duke.command;"},{"lineNumber":2,"author":{"gitId":"branzuelajohn"},"content":""},{"lineNumber":3,"author":{"gitId":"branzuelajohn"},"content":"import duke.tasks.TaskList;"},{"lineNumber":4,"author":{"gitId":"branzuelajohn"},"content":"import duke.Ui;"},{"lineNumber":5,"author":{"gitId":"branzuelajohn"},"content":"import duke.Storage;"},{"lineNumber":6,"author":{"gitId":"branzuelajohn"},"content":"import duke.DukeException;"},{"lineNumber":7,"author":{"gitId":"branzuelajohn"},"content":"import duke.tasks.ToDo;"},{"lineNumber":8,"author":{"gitId":"branzuelajohn"},"content":""},{"lineNumber":9,"author":{"gitId":"branzuelajohn"},"content":"public class ToDoCommand extends Command {"},{"lineNumber":10,"author":{"gitId":"branzuelajohn"},"content":"    public static final boolean IS_EXIT \u003d false;"},{"lineNumber":11,"author":{"gitId":"branzuelajohn"},"content":"    protected String input;"},{"lineNumber":12,"author":{"gitId":"branzuelajohn"},"content":""},{"lineNumber":13,"author":{"gitId":"branzuelajohn"},"content":"    public ToDoCommand(String input) {"},{"lineNumber":14,"author":{"gitId":"branzuelajohn"},"content":"        super(IS_EXIT);"},{"lineNumber":15,"author":{"gitId":"branzuelajohn"},"content":"        this.input \u003d input;"},{"lineNumber":16,"author":{"gitId":"branzuelajohn"},"content":"    }"},{"lineNumber":17,"author":{"gitId":"branzuelajohn"},"content":""},{"lineNumber":18,"author":{"gitId":"branzuelajohn"},"content":"    @Override"},{"lineNumber":19,"author":{"gitId":"branzuelajohn"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage) throws DukeException {"},{"lineNumber":20,"author":{"gitId":"branzuelajohn"},"content":"        if(input.length() \u003c\u003d 5) {"},{"lineNumber":21,"author":{"gitId":"branzuelajohn"},"content":"            throw new DukeException(\"â˜¹ OOPS!!! The description of a todo cannot be empty\");"},{"lineNumber":22,"author":{"gitId":"branzuelajohn"},"content":"        }"},{"lineNumber":23,"author":{"gitId":"branzuelajohn"},"content":"        System.out.println(\"Got it. I\u0027ve added this task:\");"},{"lineNumber":24,"author":{"gitId":"branzuelajohn"},"content":"        String s \u003d input.substring(5);"},{"lineNumber":25,"author":{"gitId":"branzuelajohn"},"content":"        ToDo td \u003d new ToDo(s);"},{"lineNumber":26,"author":{"gitId":"branzuelajohn"},"content":"        tasks.addTask(td);"},{"lineNumber":27,"author":{"gitId":"branzuelajohn"},"content":"        System.out.println(\" \" + td.toString());"},{"lineNumber":28,"author":{"gitId":"branzuelajohn"},"content":"        storage.addNewDataToFile(\"T\", \"0\", td.getDescription(), \"\");"},{"lineNumber":29,"author":{"gitId":"branzuelajohn"},"content":"        if(tasks.getSize() \u003d\u003d 1) {"},{"lineNumber":30,"author":{"gitId":"branzuelajohn"},"content":"            System.out.printf(\"Now you have %d task in the list.%n\", tasks.getSize());"},{"lineNumber":31,"author":{"gitId":"branzuelajohn"},"content":"        } else {"},{"lineNumber":32,"author":{"gitId":"branzuelajohn"},"content":"            System.out.printf(\"Now you have %d tasks in the list.%n\", tasks.getSize());"},{"lineNumber":33,"author":{"gitId":"branzuelajohn"},"content":"        }"},{"lineNumber":34,"author":{"gitId":"branzuelajohn"},"content":"    }"},{"lineNumber":35,"author":{"gitId":"branzuelajohn"},"content":"}"}],"authorContributionMap":{"branzuelajohn":35}},{"path":"src/main/java/duke/tasks/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"branzuelajohn"},"content":"package duke.tasks;"},{"lineNumber":2,"author":{"gitId":"branzuelajohn"},"content":""},{"lineNumber":3,"author":{"gitId":"branzuelajohn"},"content":"import java.time.LocalDate;"},{"lineNumber":4,"author":{"gitId":"branzuelajohn"},"content":"import java.time.LocalTime;"},{"lineNumber":5,"author":{"gitId":"branzuelajohn"},"content":"import java.time.format.DateTimeFormatter;"},{"lineNumber":6,"author":{"gitId":"branzuelajohn"},"content":"import java.time.LocalDateTime;"},{"lineNumber":7,"author":{"gitId":"branzuelajohn"},"content":""},{"lineNumber":8,"author":{"gitId":"branzuelajohn"},"content":""},{"lineNumber":9,"author":{"gitId":"branzuelajohn"},"content":"public class Deadline extends Task {"},{"lineNumber":10,"author":{"gitId":"branzuelajohn"},"content":""},{"lineNumber":11,"author":{"gitId":"branzuelajohn"},"content":"    protected String by;"},{"lineNumber":12,"author":{"gitId":"branzuelajohn"},"content":"    protected LocalDate dateTime;"},{"lineNumber":13,"author":{"gitId":"branzuelajohn"},"content":"    protected LocalDateTime time;"},{"lineNumber":14,"author":{"gitId":"branzuelajohn"},"content":""},{"lineNumber":15,"author":{"gitId":"branzuelajohn"},"content":"    public Deadline(String description, String by) {"},{"lineNumber":16,"author":{"gitId":"branzuelajohn"},"content":"        super(description);"},{"lineNumber":17,"author":{"gitId":"branzuelajohn"},"content":"        this.by \u003d by;"},{"lineNumber":18,"author":{"gitId":"branzuelajohn"},"content":"        String[] dateArr \u003d by.split(\" \");"},{"lineNumber":19,"author":{"gitId":"branzuelajohn"},"content":"        String[] date \u003d dateArr[0].split(\"-\");"},{"lineNumber":20,"author":{"gitId":"branzuelajohn"},"content":"        LocalDate dateTime \u003d LocalDate.of(Integer.parseInt(date[0]), Integer.parseInt(date[1]),"},{"lineNumber":21,"author":{"gitId":"branzuelajohn"},"content":"                Integer.parseInt(date[2]));"},{"lineNumber":22,"author":{"gitId":"branzuelajohn"},"content":"        if(dateArr.length \u003e 1)  {"},{"lineNumber":23,"author":{"gitId":"branzuelajohn"},"content":"            String t \u003d dateArr[1];"},{"lineNumber":24,"author":{"gitId":"branzuelajohn"},"content":"            LocalTime hm \u003d LocalTime.of(Integer.parseInt(t.substring(0,2)), Integer.parseInt(t.substring(2)));"},{"lineNumber":25,"author":{"gitId":"branzuelajohn"},"content":"            time \u003d LocalDateTime.of(dateTime, hm);"},{"lineNumber":26,"author":{"gitId":"branzuelajohn"},"content":"        }"},{"lineNumber":27,"author":{"gitId":"branzuelajohn"},"content":"        this.dateTime \u003d dateTime;"},{"lineNumber":28,"author":{"gitId":"branzuelajohn"},"content":"        this.time \u003d time;"},{"lineNumber":29,"author":{"gitId":"branzuelajohn"},"content":"    }"},{"lineNumber":30,"author":{"gitId":"branzuelajohn"},"content":""},{"lineNumber":31,"author":{"gitId":"branzuelajohn"},"content":"    public String getBy() {"},{"lineNumber":32,"author":{"gitId":"branzuelajohn"},"content":"        return this.by;"},{"lineNumber":33,"author":{"gitId":"branzuelajohn"},"content":"    }"},{"lineNumber":34,"author":{"gitId":"branzuelajohn"},"content":""},{"lineNumber":35,"author":{"gitId":"branzuelajohn"},"content":"        @Override"},{"lineNumber":36,"author":{"gitId":"branzuelajohn"},"content":"        public String toString () {"},{"lineNumber":37,"author":{"gitId":"branzuelajohn"},"content":"            String period \u003d time.getHour() \u003e\u003d 12 ? \"PM\" : \"AM\";"},{"lineNumber":38,"author":{"gitId":"branzuelajohn"},"content":"            String hour \u003d time.getHour() \u003e 12 ? Integer.toString(time.getHour() - 12)"},{"lineNumber":39,"author":{"gitId":"branzuelajohn"},"content":"                    : Integer.toString(time.getHour());"},{"lineNumber":40,"author":{"gitId":"branzuelajohn"},"content":"            if(time !\u003d null) {"},{"lineNumber":41,"author":{"gitId":"branzuelajohn"},"content":"                if(time.getMinute() \u003e 0) {"},{"lineNumber":42,"author":{"gitId":"branzuelajohn"},"content":"                    return \"[D]\" + super.toString() + \" (by: \" + dateTime.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\"))"},{"lineNumber":43,"author":{"gitId":"branzuelajohn"},"content":"                            + \" \"  + hour + \".\" + time.getMinute() + period +\")\";"},{"lineNumber":44,"author":{"gitId":"branzuelajohn"},"content":"                } else {"},{"lineNumber":45,"author":{"gitId":"branzuelajohn"},"content":"                    return \"[D]\" + super.toString() + \" (by: \" + dateTime.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\"))"},{"lineNumber":46,"author":{"gitId":"branzuelajohn"},"content":"                            + \" \"  + hour + period +\")\";"},{"lineNumber":47,"author":{"gitId":"branzuelajohn"},"content":"                }"},{"lineNumber":48,"author":{"gitId":"branzuelajohn"},"content":"            } else {"},{"lineNumber":49,"author":{"gitId":"branzuelajohn"},"content":"                return \"[D]\" + super.toString() + \" (by: \" + dateTime.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\"))+ \")\";"},{"lineNumber":50,"author":{"gitId":"branzuelajohn"},"content":"            }"},{"lineNumber":51,"author":{"gitId":"branzuelajohn"},"content":"        }"},{"lineNumber":52,"author":{"gitId":"branzuelajohn"},"content":"}"},{"lineNumber":53,"author":{"gitId":"branzuelajohn"},"content":""}],"authorContributionMap":{"branzuelajohn":53}},{"path":"src/main/java/duke/tasks/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"branzuelajohn"},"content":"package duke.tasks;"},{"lineNumber":2,"author":{"gitId":"branzuelajohn"},"content":""},{"lineNumber":3,"author":{"gitId":"branzuelajohn"},"content":"public class Event extends Task {"},{"lineNumber":4,"author":{"gitId":"branzuelajohn"},"content":""},{"lineNumber":5,"author":{"gitId":"branzuelajohn"},"content":"    protected String date;"},{"lineNumber":6,"author":{"gitId":"branzuelajohn"},"content":""},{"lineNumber":7,"author":{"gitId":"branzuelajohn"},"content":"    public Event(String description, String date) {"},{"lineNumber":8,"author":{"gitId":"branzuelajohn"},"content":"        super(description);"},{"lineNumber":9,"author":{"gitId":"branzuelajohn"},"content":"        this.date \u003d date;"},{"lineNumber":10,"author":{"gitId":"branzuelajohn"},"content":"    }"},{"lineNumber":11,"author":{"gitId":"branzuelajohn"},"content":""},{"lineNumber":12,"author":{"gitId":"branzuelajohn"},"content":"    public String getDate() {"},{"lineNumber":13,"author":{"gitId":"branzuelajohn"},"content":"        return this.date;"},{"lineNumber":14,"author":{"gitId":"branzuelajohn"},"content":"    }"},{"lineNumber":15,"author":{"gitId":"branzuelajohn"},"content":""},{"lineNumber":16,"author":{"gitId":"branzuelajohn"},"content":"    @Override"},{"lineNumber":17,"author":{"gitId":"branzuelajohn"},"content":"    public String toString() {"},{"lineNumber":18,"author":{"gitId":"branzuelajohn"},"content":"        return \"[E]\" + super.toString() + \" (at: \" + date + \")\";"},{"lineNumber":19,"author":{"gitId":"branzuelajohn"},"content":"    }"},{"lineNumber":20,"author":{"gitId":"branzuelajohn"},"content":"}"}],"authorContributionMap":{"branzuelajohn":20}},{"path":"src/main/java/duke/tasks/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"branzuelajohn"},"content":"package duke.tasks;"},{"lineNumber":2,"author":{"gitId":"branzuelajohn"},"content":""},{"lineNumber":3,"author":{"gitId":"branzuelajohn"},"content":"public class Task {"},{"lineNumber":4,"author":{"gitId":"branzuelajohn"},"content":"    protected String description;"},{"lineNumber":5,"author":{"gitId":"branzuelajohn"},"content":"    protected boolean isDone;"},{"lineNumber":6,"author":{"gitId":"branzuelajohn"},"content":""},{"lineNumber":7,"author":{"gitId":"branzuelajohn"},"content":"    public Task(String description) {"},{"lineNumber":8,"author":{"gitId":"branzuelajohn"},"content":"        this.description \u003d description;"},{"lineNumber":9,"author":{"gitId":"branzuelajohn"},"content":"        this.isDone \u003d false;"},{"lineNumber":10,"author":{"gitId":"branzuelajohn"},"content":"    }"},{"lineNumber":11,"author":{"gitId":"branzuelajohn"},"content":""},{"lineNumber":12,"author":{"gitId":"branzuelajohn"},"content":"    public Task(String description, boolean isDone) {"},{"lineNumber":13,"author":{"gitId":"branzuelajohn"},"content":"        this.description \u003d description;"},{"lineNumber":14,"author":{"gitId":"branzuelajohn"},"content":"        this.isDone \u003d isDone;"},{"lineNumber":15,"author":{"gitId":"branzuelajohn"},"content":"    }"},{"lineNumber":16,"author":{"gitId":"branzuelajohn"},"content":""},{"lineNumber":17,"author":{"gitId":"branzuelajohn"},"content":"    public boolean markAsDone() {"},{"lineNumber":18,"author":{"gitId":"branzuelajohn"},"content":"        this.isDone \u003d true;"},{"lineNumber":19,"author":{"gitId":"branzuelajohn"},"content":"        return true;"},{"lineNumber":20,"author":{"gitId":"branzuelajohn"},"content":"    }"},{"lineNumber":21,"author":{"gitId":"branzuelajohn"},"content":""},{"lineNumber":22,"author":{"gitId":"branzuelajohn"},"content":"    public String getType() {"},{"lineNumber":23,"author":{"gitId":"branzuelajohn"},"content":"        if(this instanceof ToDo) {"},{"lineNumber":24,"author":{"gitId":"branzuelajohn"},"content":"            return \"T\";"},{"lineNumber":25,"author":{"gitId":"branzuelajohn"},"content":"        } else if(this instanceof Deadline) {"},{"lineNumber":26,"author":{"gitId":"branzuelajohn"},"content":"            return \"D\";"},{"lineNumber":27,"author":{"gitId":"branzuelajohn"},"content":"        } else {"},{"lineNumber":28,"author":{"gitId":"branzuelajohn"},"content":"            return \"E\";"},{"lineNumber":29,"author":{"gitId":"branzuelajohn"},"content":"        }"},{"lineNumber":30,"author":{"gitId":"branzuelajohn"},"content":"    }"},{"lineNumber":31,"author":{"gitId":"branzuelajohn"},"content":""},{"lineNumber":32,"author":{"gitId":"branzuelajohn"},"content":"    public String getDescription() {"},{"lineNumber":33,"author":{"gitId":"branzuelajohn"},"content":"        return this.description;"},{"lineNumber":34,"author":{"gitId":"branzuelajohn"},"content":"    }"},{"lineNumber":35,"author":{"gitId":"branzuelajohn"},"content":""},{"lineNumber":36,"author":{"gitId":"branzuelajohn"},"content":"    public String getStatusIcon() {"},{"lineNumber":37,"author":{"gitId":"branzuelajohn"},"content":"        return (isDone ? \"\\u2713\" : \"\\u2718\");"},{"lineNumber":38,"author":{"gitId":"branzuelajohn"},"content":"    }"},{"lineNumber":39,"author":{"gitId":"branzuelajohn"},"content":""},{"lineNumber":40,"author":{"gitId":"branzuelajohn"},"content":"    public boolean getIsDone() {"},{"lineNumber":41,"author":{"gitId":"branzuelajohn"},"content":"        return this.isDone;"},{"lineNumber":42,"author":{"gitId":"branzuelajohn"},"content":"    }"},{"lineNumber":43,"author":{"gitId":"branzuelajohn"},"content":""},{"lineNumber":44,"author":{"gitId":"branzuelajohn"},"content":"    @Override"},{"lineNumber":45,"author":{"gitId":"branzuelajohn"},"content":"    public String toString() {"},{"lineNumber":46,"author":{"gitId":"branzuelajohn"},"content":"        return \"[\" + this.getStatusIcon() + \"] \" + this.description;"},{"lineNumber":47,"author":{"gitId":"branzuelajohn"},"content":"    }"},{"lineNumber":48,"author":{"gitId":"branzuelajohn"},"content":"}"}],"authorContributionMap":{"branzuelajohn":48}},{"path":"src/main/java/duke/tasks/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"branzuelajohn"},"content":"package duke.tasks;"},{"lineNumber":2,"author":{"gitId":"branzuelajohn"},"content":""},{"lineNumber":3,"author":{"gitId":"branzuelajohn"},"content":"import java.util.ArrayList;"},{"lineNumber":4,"author":{"gitId":"branzuelajohn"},"content":""},{"lineNumber":5,"author":{"gitId":"branzuelajohn"},"content":"public class TaskList {"},{"lineNumber":6,"author":{"gitId":"branzuelajohn"},"content":"    protected ArrayList\u003cTask\u003e tasks;"},{"lineNumber":7,"author":{"gitId":"branzuelajohn"},"content":""},{"lineNumber":8,"author":{"gitId":"branzuelajohn"},"content":"    public TaskList() {"},{"lineNumber":9,"author":{"gitId":"branzuelajohn"},"content":"        this.tasks \u003d new ArrayList\u003c\u003e();"},{"lineNumber":10,"author":{"gitId":"branzuelajohn"},"content":"    }"},{"lineNumber":11,"author":{"gitId":"branzuelajohn"},"content":""},{"lineNumber":12,"author":{"gitId":"branzuelajohn"},"content":"    public TaskList(ArrayList\u003cTask\u003e tasks) {"},{"lineNumber":13,"author":{"gitId":"branzuelajohn"},"content":"        this.tasks \u003d tasks;"},{"lineNumber":14,"author":{"gitId":"branzuelajohn"},"content":"    }"},{"lineNumber":15,"author":{"gitId":"branzuelajohn"},"content":""},{"lineNumber":16,"author":{"gitId":"branzuelajohn"},"content":"    public int getSize() {"},{"lineNumber":17,"author":{"gitId":"branzuelajohn"},"content":"        return tasks.size();"},{"lineNumber":18,"author":{"gitId":"branzuelajohn"},"content":"    }"},{"lineNumber":19,"author":{"gitId":"branzuelajohn"},"content":""},{"lineNumber":20,"author":{"gitId":"branzuelajohn"},"content":"    public Task getTask(int index) {"},{"lineNumber":21,"author":{"gitId":"branzuelajohn"},"content":"        return tasks.get(index);"},{"lineNumber":22,"author":{"gitId":"branzuelajohn"},"content":"    }"},{"lineNumber":23,"author":{"gitId":"branzuelajohn"},"content":""},{"lineNumber":24,"author":{"gitId":"branzuelajohn"},"content":"    public Task removeTask(int index) {"},{"lineNumber":25,"author":{"gitId":"branzuelajohn"},"content":"        return tasks.remove(index);"},{"lineNumber":26,"author":{"gitId":"branzuelajohn"},"content":"    }"},{"lineNumber":27,"author":{"gitId":"branzuelajohn"},"content":""},{"lineNumber":28,"author":{"gitId":"branzuelajohn"},"content":"    public boolean addTask(Task t) {"},{"lineNumber":29,"author":{"gitId":"branzuelajohn"},"content":"        return tasks.add(t);"},{"lineNumber":30,"author":{"gitId":"branzuelajohn"},"content":"    }"},{"lineNumber":31,"author":{"gitId":"branzuelajohn"},"content":""},{"lineNumber":32,"author":{"gitId":"branzuelajohn"},"content":"}"}],"authorContributionMap":{"branzuelajohn":32}},{"path":"src/main/java/duke/tasks/ToDo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"branzuelajohn"},"content":"package duke.tasks;"},{"lineNumber":2,"author":{"gitId":"branzuelajohn"},"content":""},{"lineNumber":3,"author":{"gitId":"branzuelajohn"},"content":"public class ToDo extends Task {"},{"lineNumber":4,"author":{"gitId":"branzuelajohn"},"content":"    public ToDo(String description) {"},{"lineNumber":5,"author":{"gitId":"branzuelajohn"},"content":"        super(description);"},{"lineNumber":6,"author":{"gitId":"branzuelajohn"},"content":"    }"},{"lineNumber":7,"author":{"gitId":"branzuelajohn"},"content":""},{"lineNumber":8,"author":{"gitId":"branzuelajohn"},"content":"    @Override"},{"lineNumber":9,"author":{"gitId":"branzuelajohn"},"content":"    public String toString() {"},{"lineNumber":10,"author":{"gitId":"branzuelajohn"},"content":"        return \"[T]\" + super.toString();"},{"lineNumber":11,"author":{"gitId":"branzuelajohn"},"content":"    }"},{"lineNumber":12,"author":{"gitId":"branzuelajohn"},"content":""},{"lineNumber":13,"author":{"gitId":"branzuelajohn"},"content":"}"}],"authorContributionMap":{"branzuelajohn":13}},{"path":"src/test/java/ParserTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"branzuelajohn"},"content":"import duke.DukeException;"},{"lineNumber":2,"author":{"gitId":"branzuelajohn"},"content":"import duke.Parser;"},{"lineNumber":3,"author":{"gitId":"branzuelajohn"},"content":"import duke.command.Command;"},{"lineNumber":4,"author":{"gitId":"branzuelajohn"},"content":"import org.junit.jupiter.api.Test;"},{"lineNumber":5,"author":{"gitId":"branzuelajohn"},"content":""},{"lineNumber":6,"author":{"gitId":"branzuelajohn"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;"},{"lineNumber":7,"author":{"gitId":"branzuelajohn"},"content":""},{"lineNumber":8,"author":{"gitId":"branzuelajohn"},"content":"public class ParserTest {"},{"lineNumber":9,"author":{"gitId":"branzuelajohn"},"content":""},{"lineNumber":10,"author":{"gitId":"branzuelajohn"},"content":"    @Test"},{"lineNumber":11,"author":{"gitId":"branzuelajohn"},"content":"    public void parseCommand_unknownCommand_exceptionThrown() {"},{"lineNumber":12,"author":{"gitId":"branzuelajohn"},"content":"        try {"},{"lineNumber":13,"author":{"gitId":"branzuelajohn"},"content":"            Command c \u003d Parser.parse(\"aaaa\");"},{"lineNumber":14,"author":{"gitId":"branzuelajohn"},"content":"        } catch (DukeException e) {"},{"lineNumber":15,"author":{"gitId":"branzuelajohn"},"content":"            assertTrue(e.getMessage().contains(\"â˜¹ OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\"));"},{"lineNumber":16,"author":{"gitId":"branzuelajohn"},"content":"        }"},{"lineNumber":17,"author":{"gitId":"branzuelajohn"},"content":"    }"},{"lineNumber":18,"author":{"gitId":"branzuelajohn"},"content":""},{"lineNumber":19,"author":{"gitId":"branzuelajohn"},"content":"    @Test"},{"lineNumber":20,"author":{"gitId":"branzuelajohn"},"content":"    public void parseCommand_unspecifiedDoneCommand_exceptionThrown() {"},{"lineNumber":21,"author":{"gitId":"branzuelajohn"},"content":"        try {"},{"lineNumber":22,"author":{"gitId":"branzuelajohn"},"content":"            Command c \u003d Parser.parse(\"done\");"},{"lineNumber":23,"author":{"gitId":"branzuelajohn"},"content":"        } catch (DukeException e) {"},{"lineNumber":24,"author":{"gitId":"branzuelajohn"},"content":"            assertTrue(e.getMessage().contains(\"â˜¹ OOPS!!! I don\u0027t know which task to mark as done.\"));"},{"lineNumber":25,"author":{"gitId":"branzuelajohn"},"content":"        }"},{"lineNumber":26,"author":{"gitId":"branzuelajohn"},"content":"    }"},{"lineNumber":27,"author":{"gitId":"branzuelajohn"},"content":""},{"lineNumber":28,"author":{"gitId":"branzuelajohn"},"content":""},{"lineNumber":29,"author":{"gitId":"branzuelajohn"},"content":"}"}],"authorContributionMap":{"branzuelajohn":29}},{"path":"src/test/java/ToDoTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"branzuelajohn"},"content":"import duke.tasks.ToDo;"},{"lineNumber":2,"author":{"gitId":"branzuelajohn"},"content":"import org.junit.jupiter.api.Test;"},{"lineNumber":3,"author":{"gitId":"branzuelajohn"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;"},{"lineNumber":4,"author":{"gitId":"branzuelajohn"},"content":""},{"lineNumber":5,"author":{"gitId":"branzuelajohn"},"content":"public class ToDoTest {"},{"lineNumber":6,"author":{"gitId":"branzuelajohn"},"content":"    @Test"},{"lineNumber":7,"author":{"gitId":"branzuelajohn"},"content":"    public void createToDo_withDescription_stringReturned() {"},{"lineNumber":8,"author":{"gitId":"branzuelajohn"},"content":"        ToDo test \u003d new ToDo(\"borrow book\");"},{"lineNumber":9,"author":{"gitId":"branzuelajohn"},"content":"        assertEquals(\"T | 0 | borrow book\",test.toString());"},{"lineNumber":10,"author":{"gitId":"branzuelajohn"},"content":"    }"},{"lineNumber":11,"author":{"gitId":"branzuelajohn"},"content":""},{"lineNumber":12,"author":{"gitId":"branzuelajohn"},"content":"    @Test"},{"lineNumber":13,"author":{"gitId":"branzuelajohn"},"content":"    public void createToDo_withNoDescription_stringReturned() {"},{"lineNumber":14,"author":{"gitId":"branzuelajohn"},"content":"        ToDo test \u003d new ToDo(\"\");"},{"lineNumber":15,"author":{"gitId":"branzuelajohn"},"content":"        assertEquals(\"T | 0 | \",test.toString());"},{"lineNumber":16,"author":{"gitId":"branzuelajohn"},"content":"    }"},{"lineNumber":17,"author":{"gitId":"branzuelajohn"},"content":"}"}],"authorContributionMap":{"branzuelajohn":17}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"branzuelajohn"},"content":"todo write essay"},{"lineNumber":2,"author":{"gitId":"branzuelajohn"},"content":"deadline complete essay /by August 6th"},{"lineNumber":3,"author":{"gitId":"branzuelajohn"},"content":"event project meeting /at 21st Jan 10PM"},{"lineNumber":4,"author":{"gitId":"branzuelajohn"},"content":"todo run"},{"lineNumber":5,"author":{"gitId":"branzuelajohn"},"content":"bye"}],"authorContributionMap":{"branzuelajohn":5}}]
