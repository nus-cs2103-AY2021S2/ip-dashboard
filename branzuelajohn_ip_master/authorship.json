[{"path":"README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"branzuelajohn"},"content":"# Juke Bot User Guide"},{"lineNumber":2,"author":{"gitId":"-"},"content":""},{"lineNumber":3,"author":{"gitId":"branzuelajohn"},"content":"Welcome to Juke\u0027s user guide. This is a comprehensive user guide to teach you how to use the chat bot, Juke."},{"lineNumber":4,"author":{"gitId":"-"},"content":""},{"lineNumber":5,"author":{"gitId":"branzuelajohn"},"content":"Juke is a command-line based Task Manager application. A user will type a series of command to instruct Juke."},{"lineNumber":6,"author":{"gitId":"-"},"content":""},{"lineNumber":7,"author":{"gitId":"branzuelajohn"},"content":"## User Interface"},{"lineNumber":8,"author":{"gitId":"branzuelajohn"},"content":"![UI](docs/Ui.png)"},{"lineNumber":9,"author":{"gitId":"-"},"content":""},{"lineNumber":10,"author":{"gitId":"branzuelajohn"},"content":"## Content Page"},{"lineNumber":11,"author":{"gitId":"branzuelajohn"},"content":"Here is an overview of the commands that Juke supports and a user can input."},{"lineNumber":12,"author":{"gitId":"branzuelajohn"},"content":"* [`help`](#help-command)"},{"lineNumber":13,"author":{"gitId":"branzuelajohn"},"content":"* [`todo`](#todo-command)"},{"lineNumber":14,"author":{"gitId":"branzuelajohn"},"content":"* [`deadline`](#deadline-command)"},{"lineNumber":15,"author":{"gitId":"branzuelajohn"},"content":"* [`event`](#event-command)"},{"lineNumber":16,"author":{"gitId":"branzuelajohn"},"content":"* [`delete`](#delete-command)"},{"lineNumber":17,"author":{"gitId":"branzuelajohn"},"content":"* [`find`](#find-command)"},{"lineNumber":18,"author":{"gitId":"branzuelajohn"},"content":"* [`done`](#done-command)"},{"lineNumber":19,"author":{"gitId":"branzuelajohn"},"content":"* [`list`](#list-command)"},{"lineNumber":20,"author":{"gitId":"branzuelajohn"},"content":"* [`bye`](#bye-command)"},{"lineNumber":21,"author":{"gitId":"branzuelajohn"},"content":"\u003cbr/\u003e\u003cbr/\u003e"},{"lineNumber":22,"author":{"gitId":"branzuelajohn"},"content":""},{"lineNumber":23,"author":{"gitId":"branzuelajohn"},"content":""},{"lineNumber":24,"author":{"gitId":"branzuelajohn"},"content":"## Features "},{"lineNumber":25,"author":{"gitId":"branzuelajohn"},"content":""},{"lineNumber":26,"author":{"gitId":"branzuelajohn"},"content":"### Task Manager"},{"lineNumber":27,"author":{"gitId":"branzuelajohn"},"content":"Juke Chat Bot is a personal task manager. It allows users to add, delete and search tasks."},{"lineNumber":28,"author":{"gitId":"branzuelajohn"},"content":""},{"lineNumber":29,"author":{"gitId":"branzuelajohn"},"content":"## Usage"},{"lineNumber":30,"author":{"gitId":"branzuelajohn"},"content":""},{"lineNumber":31,"author":{"gitId":"branzuelajohn"},"content":"# `help` command"},{"lineNumber":32,"author":{"gitId":"branzuelajohn"},"content":"* Description: Shows a list of supported commands and their descriptions."},{"lineNumber":33,"author":{"gitId":"branzuelajohn"},"content":"* Format: `help`"},{"lineNumber":34,"author":{"gitId":"branzuelajohn"},"content":"* Example: `help`"},{"lineNumber":35,"author":{"gitId":"branzuelajohn"},"content":""},{"lineNumber":36,"author":{"gitId":"branzuelajohn"},"content":"\u003cimg height\u003d\"740\" width\u003d\"512\" src\u003d\"https://raw.githubusercontent.com/branzuelajohn/ip/master/docs/images/help.png\"\u003e"},{"lineNumber":37,"author":{"gitId":"branzuelajohn"},"content":""},{"lineNumber":38,"author":{"gitId":"branzuelajohn"},"content":"### `todo` command"},{"lineNumber":39,"author":{"gitId":"branzuelajohn"},"content":"* Description: Creates a todo task and adds it to your task list."},{"lineNumber":40,"author":{"gitId":"branzuelajohn"},"content":"* Format: `todo \u003cdescription\u003e`"},{"lineNumber":41,"author":{"gitId":"branzuelajohn"},"content":"* Example: `todo read book`"},{"lineNumber":42,"author":{"gitId":"branzuelajohn"},"content":"* Expected outcome: "},{"lineNumber":43,"author":{"gitId":"branzuelajohn"},"content":"```"},{"lineNumber":44,"author":{"gitId":"branzuelajohn"},"content":"Got it. I\u0027ve added this task. "},{"lineNumber":45,"author":{"gitId":"branzuelajohn"},"content":"[T][X] read book"},{"lineNumber":46,"author":{"gitId":"branzuelajohn"},"content":"Now you have XX tasks in the list."},{"lineNumber":47,"author":{"gitId":"branzuelajohn"},"content":"```"},{"lineNumber":48,"author":{"gitId":"branzuelajohn"},"content":"\u003cp align\u003d\"center\"\u003e"},{"lineNumber":49,"author":{"gitId":"branzuelajohn"},"content":"  \u003cimg height\u003d\"740\" width\u003d\"512\" src\u003d\"https://raw.githubusercontent.com/branzuelajohn/ip/master/docs/images/todo.png\"\u003e"},{"lineNumber":50,"author":{"gitId":"branzuelajohn"},"content":"\u003c/p\u003e"},{"lineNumber":51,"author":{"gitId":"branzuelajohn"},"content":""},{"lineNumber":52,"author":{"gitId":"branzuelajohn"},"content":""},{"lineNumber":53,"author":{"gitId":"branzuelajohn"},"content":"### `deadline` command"},{"lineNumber":54,"author":{"gitId":"branzuelajohn"},"content":"* Description: Creates a deadline task due at a specific date and time and adds it to your task list."},{"lineNumber":55,"author":{"gitId":"branzuelajohn"},"content":"* Format: `deadline \u003cdescription\u003e /by \u003cdeadline date\u003e`"},{"lineNumber":56,"author":{"gitId":"branzuelajohn"},"content":"* Example: `deadline group project /by 2021-01-10 1800` "},{"lineNumber":57,"author":{"gitId":"branzuelajohn"},"content":"  Note: `deadline date` has to be in the `yyyy-MM-dd HH:mm` or `yyyy-MM-dd` format or else an exception will be thrown. "},{"lineNumber":58,"author":{"gitId":"branzuelajohn"},"content":"* Expected outcome: "},{"lineNumber":59,"author":{"gitId":"branzuelajohn"},"content":"```"},{"lineNumber":60,"author":{"gitId":"branzuelajohn"},"content":"Got it. I\u0027ve added this task. "},{"lineNumber":61,"author":{"gitId":"branzuelajohn"},"content":"[D][X] group project (by:Jan 10 2021 6PM) "},{"lineNumber":62,"author":{"gitId":"branzuelajohn"},"content":"Now you have XX tasks in the list."},{"lineNumber":63,"author":{"gitId":"-"},"content":"```"},{"lineNumber":64,"author":{"gitId":"branzuelajohn"},"content":"\u003cp align\u003d\"center\"\u003e"},{"lineNumber":65,"author":{"gitId":"branzuelajohn"},"content":"\u003cimg height\u003d\"740\" width\u003d\"512\" src\u003d\"https://raw.githubusercontent.com/branzuelajohn/ip/master/docs/images/deadline.png\"\u003e"},{"lineNumber":66,"author":{"gitId":"branzuelajohn"},"content":"\u003c/p\u003e"},{"lineNumber":67,"author":{"gitId":"branzuelajohn"},"content":""},{"lineNumber":68,"author":{"gitId":"branzuelajohn"},"content":"### `event` command"},{"lineNumber":69,"author":{"gitId":"branzuelajohn"},"content":"* Description: Creates an event task with an event at a specific date and time and adds it to your task list."},{"lineNumber":70,"author":{"gitId":"branzuelajohn"},"content":"* Format: `event \u003cdescription\u003e /at \u003cevent time\u003e`"},{"lineNumber":71,"author":{"gitId":"branzuelajohn"},"content":"* Example: `event meeting /at Wednesday 10PM` "},{"lineNumber":72,"author":{"gitId":"branzuelajohn"},"content":"* Expected outcome: "},{"lineNumber":73,"author":{"gitId":"branzuelajohn"},"content":"```"},{"lineNumber":74,"author":{"gitId":"branzuelajohn"},"content":"Got it. I\u0027ve added this task. "},{"lineNumber":75,"author":{"gitId":"branzuelajohn"},"content":"[E][X] meeting (at:Wednesday 10PM) "},{"lineNumber":76,"author":{"gitId":"branzuelajohn"},"content":"Now you have XX tasks in the list."},{"lineNumber":77,"author":{"gitId":"-"},"content":"```"},{"lineNumber":78,"author":{"gitId":"branzuelajohn"},"content":"\u003cp align\u003d\"center\"\u003e"},{"lineNumber":79,"author":{"gitId":"branzuelajohn"},"content":"\u003cimg height\u003d\"740\" width\u003d\"512\" src\u003d\"https://raw.githubusercontent.com/branzuelajohn/ip/master/docs/images/event.png\"\u003e"},{"lineNumber":80,"author":{"gitId":"branzuelajohn"},"content":"\u003c/p\u003e"},{"lineNumber":81,"author":{"gitId":"branzuelajohn"},"content":""},{"lineNumber":82,"author":{"gitId":"branzuelajohn"},"content":"### `delete` command"},{"lineNumber":83,"author":{"gitId":"branzuelajohn"},"content":"* Description: Shows a list of supported commands and their descriptions."},{"lineNumber":84,"author":{"gitId":"branzuelajohn"},"content":"* Format: `delete \u003ctaskID\u003e`"},{"lineNumber":85,"author":{"gitId":"branzuelajohn"},"content":"* Example: `delete 1`"},{"lineNumber":86,"author":{"gitId":"branzuelajohn"},"content":"\u003cp align\u003d\"center\"\u003e"},{"lineNumber":87,"author":{"gitId":"branzuelajohn"},"content":"\u003cimg height\u003d\"740\" width\u003d\"512\" src\u003d\"https://raw.githubusercontent.com/branzuelajohn/ip/master/docs/images/delete.png\"\u003e"},{"lineNumber":88,"author":{"gitId":"branzuelajohn"},"content":"\u003c/p\u003e"},{"lineNumber":89,"author":{"gitId":"branzuelajohn"},"content":""},{"lineNumber":90,"author":{"gitId":"branzuelajohn"},"content":"### `find` command"},{"lineNumber":91,"author":{"gitId":"branzuelajohn"},"content":"* Description: Shows a list of supported commands and their descriptions."},{"lineNumber":92,"author":{"gitId":"branzuelajohn"},"content":"* Format: `find \u003cregex\u003e`"},{"lineNumber":93,"author":{"gitId":"branzuelajohn"},"content":"* Example: `find read`"},{"lineNumber":94,"author":{"gitId":"branzuelajohn"},"content":"\u003cp align\u003d\"center\"\u003e"},{"lineNumber":95,"author":{"gitId":"branzuelajohn"},"content":"\u003cimg height\u003d\"740\" width\u003d\"512\" src\u003d\"https://raw.githubusercontent.com/branzuelajohn/ip/master/docs/images/find.png\"\u003e"},{"lineNumber":96,"author":{"gitId":"branzuelajohn"},"content":"\u003c/p\u003e"},{"lineNumber":97,"author":{"gitId":"branzuelajohn"},"content":""},{"lineNumber":98,"author":{"gitId":"branzuelajohn"},"content":"### `done` command"},{"lineNumber":99,"author":{"gitId":"branzuelajohn"},"content":"* Description: Shows a list of supported commands and their descriptions."},{"lineNumber":100,"author":{"gitId":"branzuelajohn"},"content":"* Format: `done \u003ctaskID\u003e`"},{"lineNumber":101,"author":{"gitId":"branzuelajohn"},"content":"* Example: `done 1`"},{"lineNumber":102,"author":{"gitId":"branzuelajohn"},"content":"\u003cp align\u003d\"center\"\u003e"},{"lineNumber":103,"author":{"gitId":"branzuelajohn"},"content":"\u003cimg height\u003d\"740\" width\u003d\"512\" src\u003d\"https://raw.githubusercontent.com/branzuelajohn/ip/master/docs/images/done.png\"\u003e"},{"lineNumber":104,"author":{"gitId":"branzuelajohn"},"content":"\u003c/p\u003e"},{"lineNumber":105,"author":{"gitId":"branzuelajohn"},"content":""},{"lineNumber":106,"author":{"gitId":"branzuelajohn"},"content":"### `list` command"},{"lineNumber":107,"author":{"gitId":"branzuelajohn"},"content":"* Description: Shows a list of supported commands and their descriptions."},{"lineNumber":108,"author":{"gitId":"branzuelajohn"},"content":"* Format: `list`"},{"lineNumber":109,"author":{"gitId":"branzuelajohn"},"content":"* Example: `list`"},{"lineNumber":110,"author":{"gitId":"branzuelajohn"},"content":"\u003cp align\u003d\"center\"\u003e"},{"lineNumber":111,"author":{"gitId":"branzuelajohn"},"content":"\u003cimg height\u003d\"740\" width\u003d\"512\" src\u003d\"https://raw.githubusercontent.com/branzuelajohn/ip/master/docs/images/list.png\"\u003e"},{"lineNumber":112,"author":{"gitId":"branzuelajohn"},"content":"\u003c/p\u003e"},{"lineNumber":113,"author":{"gitId":"branzuelajohn"},"content":""},{"lineNumber":114,"author":{"gitId":"branzuelajohn"},"content":"### `bye` command"},{"lineNumber":115,"author":{"gitId":"branzuelajohn"},"content":"* Description: Exits the application."},{"lineNumber":116,"author":{"gitId":"branzuelajohn"},"content":"* Format: `bye`"},{"lineNumber":117,"author":{"gitId":"branzuelajohn"},"content":"* Example: `bye`"},{"lineNumber":118,"author":{"gitId":"branzuelajohn"},"content":""},{"lineNumber":119,"author":{"gitId":"branzuelajohn"},"content":""},{"lineNumber":120,"author":{"gitId":"branzuelajohn"},"content":"## Acknowledgements"},{"lineNumber":121,"author":{"gitId":"branzuelajohn"},"content":"Profile picture of User and Juke obtained from [pngtree](www.pngtree.com)"},{"lineNumber":122,"author":{"gitId":"branzuelajohn"},"content":""},{"lineNumber":123,"author":{"gitId":"branzuelajohn"},"content":""}],"authorContributionMap":{"branzuelajohn":117,"-":6}},{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027checkstyle\u0027"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027"},{"lineNumber":6,"author":{"gitId":"-"},"content":"}"},{"lineNumber":7,"author":{"gitId":"-"},"content":""},{"lineNumber":8,"author":{"gitId":"-"},"content":"repositories {"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    mavenCentral()"},{"lineNumber":10,"author":{"gitId":"-"},"content":"}"},{"lineNumber":11,"author":{"gitId":"-"},"content":""},{"lineNumber":12,"author":{"gitId":"-"},"content":"dependencies {"},{"lineNumber":13,"author":{"gitId":"branzuelajohn"},"content":"    String javaFxVersion \u003d \u002711\u0027"},{"lineNumber":14,"author":{"gitId":"branzuelajohn"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027"},{"lineNumber":15,"author":{"gitId":"branzuelajohn"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"},{"lineNumber":16,"author":{"gitId":"branzuelajohn"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"},{"lineNumber":17,"author":{"gitId":"branzuelajohn"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027"},{"lineNumber":18,"author":{"gitId":"branzuelajohn"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"},{"lineNumber":19,"author":{"gitId":"branzuelajohn"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"},{"lineNumber":20,"author":{"gitId":"branzuelajohn"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027"},{"lineNumber":21,"author":{"gitId":"branzuelajohn"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"},{"lineNumber":22,"author":{"gitId":"branzuelajohn"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"},{"lineNumber":23,"author":{"gitId":"branzuelajohn"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027"},{"lineNumber":24,"author":{"gitId":"branzuelajohn"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"},{"lineNumber":25,"author":{"gitId":"branzuelajohn"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.5.0\u0027"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.5.0\u0027"},{"lineNumber":28,"author":{"gitId":"-"},"content":"}"},{"lineNumber":29,"author":{"gitId":"-"},"content":""},{"lineNumber":30,"author":{"gitId":"branzuelajohn"},"content":"run {"},{"lineNumber":31,"author":{"gitId":"branzuelajohn"},"content":"    enableAssertions \u003d true"},{"lineNumber":32,"author":{"gitId":"branzuelajohn"},"content":"}"},{"lineNumber":33,"author":{"gitId":"branzuelajohn"},"content":""},{"lineNumber":34,"author":{"gitId":"-"},"content":"test {"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    useJUnitPlatform()"},{"lineNumber":36,"author":{"gitId":"-"},"content":""},{"lineNumber":37,"author":{"gitId":"-"},"content":"    testLogging {"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\""},{"lineNumber":39,"author":{"gitId":"-"},"content":""},{"lineNumber":40,"author":{"gitId":"-"},"content":"        showExceptions true"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\""},{"lineNumber":42,"author":{"gitId":"-"},"content":"        showCauses true"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        showStackTraces true"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":46,"author":{"gitId":"-"},"content":"}"},{"lineNumber":47,"author":{"gitId":"-"},"content":""},{"lineNumber":48,"author":{"gitId":"-"},"content":"application {"},{"lineNumber":49,"author":{"gitId":"branzuelajohn"},"content":"    mainClassName \u003d \"duke.Launcher\""},{"lineNumber":50,"author":{"gitId":"-"},"content":"}"},{"lineNumber":51,"author":{"gitId":"-"},"content":""},{"lineNumber":52,"author":{"gitId":"-"},"content":"shadowJar {"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    archiveBaseName \u003d \"duke\""},{"lineNumber":54,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null"},{"lineNumber":55,"author":{"gitId":"-"},"content":"}"},{"lineNumber":56,"author":{"gitId":"-"},"content":""},{"lineNumber":57,"author":{"gitId":"-"},"content":"checkstyle {"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    toolVersion \u003d \u00278.29\u0027"},{"lineNumber":59,"author":{"gitId":"-"},"content":"}"},{"lineNumber":60,"author":{"gitId":"-"},"content":""},{"lineNumber":61,"author":{"gitId":"-"},"content":"run{"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in"},{"lineNumber":63,"author":{"gitId":"-"},"content":"}"}],"authorContributionMap":{"branzuelajohn":18,"-":45}},{"path":"data/duke.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"branzuelajohn"},"content":"T | 0 | read book"},{"lineNumber":2,"author":{"gitId":"branzuelajohn"},"content":"D | 0 | return book | 2021-02-02 1800"}],"authorContributionMap":{"branzuelajohn":2}},{"path":"docs/README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"branzuelajohn"},"content":"# Juke Bot User Guide"},{"lineNumber":2,"author":{"gitId":"branzuelajohn"},"content":""},{"lineNumber":3,"author":{"gitId":"branzuelajohn"},"content":"Welcome to Juke\u0027s user guide. This is a comprehensive user guide to teach you how to use the chat bot, Juke."},{"lineNumber":4,"author":{"gitId":"branzuelajohn"},"content":""},{"lineNumber":5,"author":{"gitId":"branzuelajohn"},"content":"Juke is a command-line based Task Manager application. A user will type a series of command to instruct Juke."},{"lineNumber":6,"author":{"gitId":"branzuelajohn"},"content":""},{"lineNumber":7,"author":{"gitId":"branzuelajohn"},"content":"## User Interface"},{"lineNumber":8,"author":{"gitId":"branzuelajohn"},"content":"![UI](Ui.png)"},{"lineNumber":9,"author":{"gitId":"branzuelajohn"},"content":""},{"lineNumber":10,"author":{"gitId":"branzuelajohn"},"content":"## Content Page"},{"lineNumber":11,"author":{"gitId":"branzuelajohn"},"content":"Here is an overview of the commands that Juke supports and a user can input."},{"lineNumber":12,"author":{"gitId":"branzuelajohn"},"content":"* [`help`](#help-command)"},{"lineNumber":13,"author":{"gitId":"branzuelajohn"},"content":"* [`todo`](#todo-command)"},{"lineNumber":14,"author":{"gitId":"branzuelajohn"},"content":"* [`deadline`](#deadline-command)"},{"lineNumber":15,"author":{"gitId":"branzuelajohn"},"content":"* [`event`](#event-command)"},{"lineNumber":16,"author":{"gitId":"branzuelajohn"},"content":"* [`delete`](#delete-command)"},{"lineNumber":17,"author":{"gitId":"branzuelajohn"},"content":"* [`find`](#find-command)"},{"lineNumber":18,"author":{"gitId":"branzuelajohn"},"content":"* [`done`](#done-command)"},{"lineNumber":19,"author":{"gitId":"branzuelajohn"},"content":"* [`list`](#list-command)"},{"lineNumber":20,"author":{"gitId":"branzuelajohn"},"content":"* [`bye`](#bye-command)"},{"lineNumber":21,"author":{"gitId":"branzuelajohn"},"content":"\u003cbr/\u003e\u003cbr/\u003e"},{"lineNumber":22,"author":{"gitId":"branzuelajohn"},"content":""},{"lineNumber":23,"author":{"gitId":"-"},"content":""},{"lineNumber":24,"author":{"gitId":"-"},"content":"## Features "},{"lineNumber":25,"author":{"gitId":"-"},"content":""},{"lineNumber":26,"author":{"gitId":"branzuelajohn"},"content":"### Task Manager"},{"lineNumber":27,"author":{"gitId":"branzuelajohn"},"content":"Juke Chat Bot is a personal task manager. It allows users to add, delete and search tasks."},{"lineNumber":28,"author":{"gitId":"-"},"content":""},{"lineNumber":29,"author":{"gitId":"-"},"content":"## Usage"},{"lineNumber":30,"author":{"gitId":"-"},"content":""},{"lineNumber":31,"author":{"gitId":"branzuelajohn"},"content":"# `help` command"},{"lineNumber":32,"author":{"gitId":"branzuelajohn"},"content":"* Description: Shows a list of supported commands and their descriptions."},{"lineNumber":33,"author":{"gitId":"branzuelajohn"},"content":"* Format: `help`"},{"lineNumber":34,"author":{"gitId":"branzuelajohn"},"content":"* Example: `help`"},{"lineNumber":35,"author":{"gitId":"branzuelajohn"},"content":""},{"lineNumber":36,"author":{"gitId":"branzuelajohn"},"content":"\u003cimg height\u003d\"740\" width\u003d\"512\" src\u003d\"https://raw.githubusercontent.com/branzuelajohn/ip/master/docs/images/help.png\"\u003e"},{"lineNumber":37,"author":{"gitId":"branzuelajohn"},"content":""},{"lineNumber":38,"author":{"gitId":"branzuelajohn"},"content":"### `todo` command"},{"lineNumber":39,"author":{"gitId":"branzuelajohn"},"content":"* Description: Creates a todo task and adds it to your task list."},{"lineNumber":40,"author":{"gitId":"branzuelajohn"},"content":"* Format: `todo \u003cdescription\u003e`"},{"lineNumber":41,"author":{"gitId":"branzuelajohn"},"content":"* Example: `todo read book`"},{"lineNumber":42,"author":{"gitId":"branzuelajohn"},"content":"* Expected outcome: "},{"lineNumber":43,"author":{"gitId":"branzuelajohn"},"content":"```"},{"lineNumber":44,"author":{"gitId":"branzuelajohn"},"content":"Got it. I\u0027ve added this task. "},{"lineNumber":45,"author":{"gitId":"branzuelajohn"},"content":"[T][X] read book"},{"lineNumber":46,"author":{"gitId":"branzuelajohn"},"content":"Now you have XX tasks in the list."},{"lineNumber":47,"author":{"gitId":"branzuelajohn"},"content":"```"},{"lineNumber":48,"author":{"gitId":"branzuelajohn"},"content":"\u003cp align\u003d\"center\"\u003e"},{"lineNumber":49,"author":{"gitId":"branzuelajohn"},"content":"  \u003cimg height\u003d\"740\" width\u003d\"512\" src\u003d\"https://raw.githubusercontent.com/branzuelajohn/ip/master/docs/images/todo.png\"\u003e"},{"lineNumber":50,"author":{"gitId":"branzuelajohn"},"content":"\u003c/p\u003e"},{"lineNumber":51,"author":{"gitId":"branzuelajohn"},"content":""},{"lineNumber":52,"author":{"gitId":"branzuelajohn"},"content":""},{"lineNumber":53,"author":{"gitId":"branzuelajohn"},"content":"### `deadline` command"},{"lineNumber":54,"author":{"gitId":"branzuelajohn"},"content":"* Description: Creates a deadline task due at a specific date and time and adds it to your task list."},{"lineNumber":55,"author":{"gitId":"branzuelajohn"},"content":"* Format: `deadline \u003cdescription\u003e /by \u003cdeadline date\u003e`"},{"lineNumber":56,"author":{"gitId":"branzuelajohn"},"content":"* Example: `deadline group project /by 2021-01-10 1800` "},{"lineNumber":57,"author":{"gitId":"branzuelajohn"},"content":"  Note: `deadline date` has to be in the `yyyy-MM-dd HH:mm` or `yyyy-MM-dd` format or else an exception will be thrown. "},{"lineNumber":58,"author":{"gitId":"branzuelajohn"},"content":"* Expected outcome: "},{"lineNumber":59,"author":{"gitId":"branzuelajohn"},"content":"```"},{"lineNumber":60,"author":{"gitId":"branzuelajohn"},"content":"Got it. I\u0027ve added this task. "},{"lineNumber":61,"author":{"gitId":"branzuelajohn"},"content":"[D][X] group project (by:Jan 10 2021 6PM) "},{"lineNumber":62,"author":{"gitId":"branzuelajohn"},"content":"Now you have XX tasks in the list."},{"lineNumber":63,"author":{"gitId":"branzuelajohn"},"content":"```"},{"lineNumber":64,"author":{"gitId":"branzuelajohn"},"content":"\u003cp align\u003d\"center\"\u003e"},{"lineNumber":65,"author":{"gitId":"branzuelajohn"},"content":"\u003cimg height\u003d\"740\" width\u003d\"512\" src\u003d\"https://raw.githubusercontent.com/branzuelajohn/ip/master/docs/images/deadline.png\"\u003e"},{"lineNumber":66,"author":{"gitId":"branzuelajohn"},"content":"\u003c/p\u003e"},{"lineNumber":67,"author":{"gitId":"branzuelajohn"},"content":""},{"lineNumber":68,"author":{"gitId":"branzuelajohn"},"content":"### `event` command"},{"lineNumber":69,"author":{"gitId":"branzuelajohn"},"content":"* Description: Creates an event task with an event at a specific date and time and adds it to your task list."},{"lineNumber":70,"author":{"gitId":"branzuelajohn"},"content":"* Format: `event \u003cdescription\u003e /at \u003cevent time\u003e`"},{"lineNumber":71,"author":{"gitId":"branzuelajohn"},"content":"* Example: `event meeting /at Wednesday 10PM` "},{"lineNumber":72,"author":{"gitId":"branzuelajohn"},"content":"* Expected outcome: "},{"lineNumber":73,"author":{"gitId":"branzuelajohn"},"content":"```"},{"lineNumber":74,"author":{"gitId":"branzuelajohn"},"content":"Got it. I\u0027ve added this task. "},{"lineNumber":75,"author":{"gitId":"branzuelajohn"},"content":"[E][X] meeting (at:Wednesday 10PM) "},{"lineNumber":76,"author":{"gitId":"branzuelajohn"},"content":"Now you have XX tasks in the list."},{"lineNumber":77,"author":{"gitId":"branzuelajohn"},"content":"```"},{"lineNumber":78,"author":{"gitId":"branzuelajohn"},"content":"\u003cp align\u003d\"center\"\u003e"},{"lineNumber":79,"author":{"gitId":"branzuelajohn"},"content":"\u003cimg height\u003d\"740\" width\u003d\"512\" src\u003d\"https://raw.githubusercontent.com/branzuelajohn/ip/master/docs/images/event.png\"\u003e"},{"lineNumber":80,"author":{"gitId":"branzuelajohn"},"content":"\u003c/p\u003e"},{"lineNumber":81,"author":{"gitId":"branzuelajohn"},"content":""},{"lineNumber":82,"author":{"gitId":"branzuelajohn"},"content":"### `delete` command"},{"lineNumber":83,"author":{"gitId":"branzuelajohn"},"content":"* Description: Shows a list of supported commands and their descriptions."},{"lineNumber":84,"author":{"gitId":"branzuelajohn"},"content":"* Format: `delete \u003ctaskID\u003e`"},{"lineNumber":85,"author":{"gitId":"branzuelajohn"},"content":"* Example: `delete 1`"},{"lineNumber":86,"author":{"gitId":"branzuelajohn"},"content":"\u003cp align\u003d\"center\"\u003e"},{"lineNumber":87,"author":{"gitId":"branzuelajohn"},"content":"\u003cimg height\u003d\"740\" width\u003d\"512\" src\u003d\"https://raw.githubusercontent.com/branzuelajohn/ip/master/docs/images/delete.png\"\u003e"},{"lineNumber":88,"author":{"gitId":"branzuelajohn"},"content":"\u003c/p\u003e"},{"lineNumber":89,"author":{"gitId":"branzuelajohn"},"content":""},{"lineNumber":90,"author":{"gitId":"branzuelajohn"},"content":"### `find` command"},{"lineNumber":91,"author":{"gitId":"branzuelajohn"},"content":"* Description: Shows a list of supported commands and their descriptions."},{"lineNumber":92,"author":{"gitId":"branzuelajohn"},"content":"* Format: `find \u003cregex\u003e`"},{"lineNumber":93,"author":{"gitId":"branzuelajohn"},"content":"* Example: `find read`"},{"lineNumber":94,"author":{"gitId":"branzuelajohn"},"content":"\u003cp align\u003d\"center\"\u003e"},{"lineNumber":95,"author":{"gitId":"branzuelajohn"},"content":"\u003cimg height\u003d\"740\" width\u003d\"512\" src\u003d\"https://raw.githubusercontent.com/branzuelajohn/ip/master/docs/images/find.png\"\u003e"},{"lineNumber":96,"author":{"gitId":"branzuelajohn"},"content":"\u003c/p\u003e"},{"lineNumber":97,"author":{"gitId":"branzuelajohn"},"content":""},{"lineNumber":98,"author":{"gitId":"branzuelajohn"},"content":"### `done` command"},{"lineNumber":99,"author":{"gitId":"branzuelajohn"},"content":"* Description: Shows a list of supported commands and their descriptions."},{"lineNumber":100,"author":{"gitId":"branzuelajohn"},"content":"* Format: `done \u003ctaskID\u003e`"},{"lineNumber":101,"author":{"gitId":"branzuelajohn"},"content":"* Example: `done 1`"},{"lineNumber":102,"author":{"gitId":"branzuelajohn"},"content":"\u003cp align\u003d\"center\"\u003e"},{"lineNumber":103,"author":{"gitId":"branzuelajohn"},"content":"\u003cimg height\u003d\"740\" width\u003d\"512\" src\u003d\"https://raw.githubusercontent.com/branzuelajohn/ip/master/docs/images/done.png\"\u003e"},{"lineNumber":104,"author":{"gitId":"branzuelajohn"},"content":"\u003c/p\u003e"},{"lineNumber":105,"author":{"gitId":"branzuelajohn"},"content":""},{"lineNumber":106,"author":{"gitId":"branzuelajohn"},"content":"### `list` command"},{"lineNumber":107,"author":{"gitId":"branzuelajohn"},"content":"* Description: Shows a list of supported commands and their descriptions."},{"lineNumber":108,"author":{"gitId":"branzuelajohn"},"content":"* Format: `list`"},{"lineNumber":109,"author":{"gitId":"branzuelajohn"},"content":"* Example: `list`"},{"lineNumber":110,"author":{"gitId":"branzuelajohn"},"content":"\u003cp align\u003d\"center\"\u003e"},{"lineNumber":111,"author":{"gitId":"branzuelajohn"},"content":"\u003cimg height\u003d\"740\" width\u003d\"512\" src\u003d\"https://raw.githubusercontent.com/branzuelajohn/ip/master/docs/images/list.png\"\u003e"},{"lineNumber":112,"author":{"gitId":"branzuelajohn"},"content":"\u003c/p\u003e"},{"lineNumber":113,"author":{"gitId":"-"},"content":""},{"lineNumber":114,"author":{"gitId":"branzuelajohn"},"content":"### `bye` command"},{"lineNumber":115,"author":{"gitId":"branzuelajohn"},"content":"* Description: Exits the application."},{"lineNumber":116,"author":{"gitId":"branzuelajohn"},"content":"* Format: `bye`"},{"lineNumber":117,"author":{"gitId":"branzuelajohn"},"content":"* Example: `bye`"},{"lineNumber":118,"author":{"gitId":"-"},"content":""},{"lineNumber":119,"author":{"gitId":"-"},"content":""},{"lineNumber":120,"author":{"gitId":"-"},"content":""},{"lineNumber":121,"author":{"gitId":"-"},"content":""},{"lineNumber":122,"author":{"gitId":"-"},"content":""}],"authorContributionMap":{"branzuelajohn":110,"-":12}},{"path":"src/main/java/duke/DialogBox.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"branzuelajohn"},"content":"package duke;"},{"lineNumber":2,"author":{"gitId":"branzuelajohn"},"content":""},{"lineNumber":3,"author":{"gitId":"branzuelajohn"},"content":"import java.io.IOException;"},{"lineNumber":4,"author":{"gitId":"branzuelajohn"},"content":"import java.util.Collections;"},{"lineNumber":5,"author":{"gitId":"branzuelajohn"},"content":""},{"lineNumber":6,"author":{"gitId":"branzuelajohn"},"content":"import javafx.collections.FXCollections;"},{"lineNumber":7,"author":{"gitId":"branzuelajohn"},"content":"import javafx.collections.ObservableList;"},{"lineNumber":8,"author":{"gitId":"branzuelajohn"},"content":"import javafx.fxml.FXML;"},{"lineNumber":9,"author":{"gitId":"branzuelajohn"},"content":"import javafx.fxml.FXMLLoader;"},{"lineNumber":10,"author":{"gitId":"branzuelajohn"},"content":"import javafx.geometry.Pos;"},{"lineNumber":11,"author":{"gitId":"branzuelajohn"},"content":"import javafx.scene.Node;"},{"lineNumber":12,"author":{"gitId":"branzuelajohn"},"content":"import javafx.scene.control.Label;"},{"lineNumber":13,"author":{"gitId":"branzuelajohn"},"content":"import javafx.scene.image.Image;"},{"lineNumber":14,"author":{"gitId":"branzuelajohn"},"content":"import javafx.scene.image.ImageView;"},{"lineNumber":15,"author":{"gitId":"branzuelajohn"},"content":"import javafx.scene.layout.HBox;"},{"lineNumber":16,"author":{"gitId":"branzuelajohn"},"content":"import javafx.scene.layout.Region;"},{"lineNumber":17,"author":{"gitId":"branzuelajohn"},"content":""},{"lineNumber":18,"author":{"gitId":"branzuelajohn"},"content":"/**"},{"lineNumber":19,"author":{"gitId":"branzuelajohn"},"content":" * An example of a custom control using FXML."},{"lineNumber":20,"author":{"gitId":"branzuelajohn"},"content":" * This control represents a dialog box consisting of an ImageView to represent the speaker\u0027s face and a label"},{"lineNumber":21,"author":{"gitId":"branzuelajohn"},"content":" * containing text from the speaker."},{"lineNumber":22,"author":{"gitId":"branzuelajohn"},"content":" */"},{"lineNumber":23,"author":{"gitId":"branzuelajohn"},"content":"public class DialogBox extends HBox {"},{"lineNumber":24,"author":{"gitId":"branzuelajohn"},"content":"    @FXML"},{"lineNumber":25,"author":{"gitId":"branzuelajohn"},"content":"    private Label dialog;"},{"lineNumber":26,"author":{"gitId":"branzuelajohn"},"content":"    @FXML"},{"lineNumber":27,"author":{"gitId":"branzuelajohn"},"content":"    private ImageView displayPicture;"},{"lineNumber":28,"author":{"gitId":"branzuelajohn"},"content":""},{"lineNumber":29,"author":{"gitId":"branzuelajohn"},"content":"    private DialogBox(String text, Image img) {"},{"lineNumber":30,"author":{"gitId":"branzuelajohn"},"content":"        try {"},{"lineNumber":31,"author":{"gitId":"branzuelajohn"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(\"/view/DialogBox.fxml\"));"},{"lineNumber":32,"author":{"gitId":"branzuelajohn"},"content":"            fxmlLoader.setController(this);"},{"lineNumber":33,"author":{"gitId":"branzuelajohn"},"content":"            fxmlLoader.setRoot(this);"},{"lineNumber":34,"author":{"gitId":"branzuelajohn"},"content":"            fxmlLoader.load();"},{"lineNumber":35,"author":{"gitId":"branzuelajohn"},"content":"        } catch (IOException e) {"},{"lineNumber":36,"author":{"gitId":"branzuelajohn"},"content":"            e.printStackTrace();"},{"lineNumber":37,"author":{"gitId":"branzuelajohn"},"content":"        }"},{"lineNumber":38,"author":{"gitId":"branzuelajohn"},"content":""},{"lineNumber":39,"author":{"gitId":"branzuelajohn"},"content":"        dialog.setText(text);"},{"lineNumber":40,"author":{"gitId":"branzuelajohn"},"content":"        displayPicture.setImage(img);"},{"lineNumber":41,"author":{"gitId":"branzuelajohn"},"content":"    }"},{"lineNumber":42,"author":{"gitId":"branzuelajohn"},"content":""},{"lineNumber":43,"author":{"gitId":"branzuelajohn"},"content":"    /**"},{"lineNumber":44,"author":{"gitId":"branzuelajohn"},"content":"     * Flips the dialog box such that the ImageView is on the left and text on the right."},{"lineNumber":45,"author":{"gitId":"branzuelajohn"},"content":"     */"},{"lineNumber":46,"author":{"gitId":"branzuelajohn"},"content":"    private void flip() {"},{"lineNumber":47,"author":{"gitId":"branzuelajohn"},"content":"        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());"},{"lineNumber":48,"author":{"gitId":"branzuelajohn"},"content":"        Collections.reverse(tmp);"},{"lineNumber":49,"author":{"gitId":"branzuelajohn"},"content":"        getChildren().setAll(tmp);"},{"lineNumber":50,"author":{"gitId":"branzuelajohn"},"content":"        setAlignment(Pos.TOP_LEFT);"},{"lineNumber":51,"author":{"gitId":"branzuelajohn"},"content":"    }"},{"lineNumber":52,"author":{"gitId":"branzuelajohn"},"content":""},{"lineNumber":53,"author":{"gitId":"branzuelajohn"},"content":"    public static DialogBox getUserDialog(String text, Image img) {"},{"lineNumber":54,"author":{"gitId":"branzuelajohn"},"content":"        var db \u003d new DialogBox(text, img);"},{"lineNumber":55,"author":{"gitId":"branzuelajohn"},"content":"        //db.setBackground(new Background(new BackgroundFill(Color.AQUA, null, null)));"},{"lineNumber":56,"author":{"gitId":"branzuelajohn"},"content":"        db.setMinHeight(Region.USE_PREF_SIZE);"},{"lineNumber":57,"author":{"gitId":"branzuelajohn"},"content":"        return db;"},{"lineNumber":58,"author":{"gitId":"branzuelajohn"},"content":"    }"},{"lineNumber":59,"author":{"gitId":"branzuelajohn"},"content":""},{"lineNumber":60,"author":{"gitId":"branzuelajohn"},"content":"    public static DialogBox getDukeDialog(String text, Image img) {"},{"lineNumber":61,"author":{"gitId":"branzuelajohn"},"content":"        var db \u003d new DialogBox(text, img);"},{"lineNumber":62,"author":{"gitId":"branzuelajohn"},"content":"        //db.setBackground(new Background(new BackgroundFill(Color.AQUAMARINE, null, null)));"},{"lineNumber":63,"author":{"gitId":"branzuelajohn"},"content":"        db.setMinHeight(Region.USE_PREF_SIZE);"},{"lineNumber":64,"author":{"gitId":"branzuelajohn"},"content":"        db.flip();"},{"lineNumber":65,"author":{"gitId":"branzuelajohn"},"content":"        return db;"},{"lineNumber":66,"author":{"gitId":"branzuelajohn"},"content":"    }"},{"lineNumber":67,"author":{"gitId":"branzuelajohn"},"content":"}"}],"authorContributionMap":{"branzuelajohn":67}},{"path":"src/main/java/duke/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"branzuelajohn"},"content":"package duke;"},{"lineNumber":2,"author":{"gitId":"branzuelajohn"},"content":""},{"lineNumber":3,"author":{"gitId":"branzuelajohn"},"content":"import java.io.File;"},{"lineNumber":4,"author":{"gitId":"branzuelajohn"},"content":""},{"lineNumber":5,"author":{"gitId":"branzuelajohn"},"content":"import duke.command.Command;"},{"lineNumber":6,"author":{"gitId":"branzuelajohn"},"content":"import duke.tasks.TaskList;"},{"lineNumber":7,"author":{"gitId":"branzuelajohn"},"content":"import javafx.application.Platform;"},{"lineNumber":8,"author":{"gitId":"branzuelajohn"},"content":""},{"lineNumber":9,"author":{"gitId":"branzuelajohn"},"content":"/**"},{"lineNumber":10,"author":{"gitId":"branzuelajohn"},"content":" *  Juke is a chatbot that helps users keep track of tasks."},{"lineNumber":11,"author":{"gitId":"branzuelajohn"},"content":" *"},{"lineNumber":12,"author":{"gitId":"branzuelajohn"},"content":" *  The chatbot supports, todos, events and deadlines,"},{"lineNumber":13,"author":{"gitId":"branzuelajohn"},"content":" *      todos: add to do task to a list"},{"lineNumber":14,"author":{"gitId":"branzuelajohn"},"content":" *      events: adds task to a list with a specific time for the event with \"/at\""},{"lineNumber":15,"author":{"gitId":"branzuelajohn"},"content":" *      deadlines: adds task to a list with a specific deadline with \"/by\""},{"lineNumber":16,"author":{"gitId":"branzuelajohn"},"content":" *"},{"lineNumber":17,"author":{"gitId":"branzuelajohn"},"content":" *      The done command followed by an integer x checks off  task x."},{"lineNumber":18,"author":{"gitId":"branzuelajohn"},"content":" *      The chatbot supports deletion of tasks with the \"delete\" command"},{"lineNumber":19,"author":{"gitId":"branzuelajohn"},"content":" *"},{"lineNumber":20,"author":{"gitId":"branzuelajohn"},"content":" *      The chatbot will throw exceptions for invalid inputs."},{"lineNumber":21,"author":{"gitId":"branzuelajohn"},"content":" * @author branzuelajohn"},{"lineNumber":22,"author":{"gitId":"branzuelajohn"},"content":" * @version CS2103T AY20/21 Semester 2, Individual Project"},{"lineNumber":23,"author":{"gitId":"branzuelajohn"},"content":" */"},{"lineNumber":24,"author":{"gitId":"-"},"content":"public class Duke {"},{"lineNumber":25,"author":{"gitId":"branzuelajohn"},"content":""},{"lineNumber":26,"author":{"gitId":"branzuelajohn"},"content":"    private Storage storage;"},{"lineNumber":27,"author":{"gitId":"branzuelajohn"},"content":"    private TaskList tasks;"},{"lineNumber":28,"author":{"gitId":"branzuelajohn"},"content":"    private Ui ui;"},{"lineNumber":29,"author":{"gitId":"branzuelajohn"},"content":""},{"lineNumber":30,"author":{"gitId":"branzuelajohn"},"content":"    /**"},{"lineNumber":31,"author":{"gitId":"branzuelajohn"},"content":"     * Creates a Duke Object."},{"lineNumber":32,"author":{"gitId":"branzuelajohn"},"content":"     */"},{"lineNumber":33,"author":{"gitId":"branzuelajohn"},"content":"    public Duke() {"},{"lineNumber":34,"author":{"gitId":"branzuelajohn"},"content":"        ui \u003d new Ui();"},{"lineNumber":35,"author":{"gitId":"branzuelajohn"},"content":"        String currentDir \u003d System.getProperty(\"user.dir\");"},{"lineNumber":36,"author":{"gitId":"branzuelajohn"},"content":"        String filePath \u003d currentDir + File.separator + \"data\" + File.separator + \"duke.txt\";"},{"lineNumber":37,"author":{"gitId":"branzuelajohn"},"content":"        storage \u003d new Storage(filePath);"},{"lineNumber":38,"author":{"gitId":"branzuelajohn"},"content":"        try {"},{"lineNumber":39,"author":{"gitId":"branzuelajohn"},"content":"            tasks \u003d new TaskList(storage.loadAllTasks());"},{"lineNumber":40,"author":{"gitId":"branzuelajohn"},"content":"        } catch (DukeException e) {"},{"lineNumber":41,"author":{"gitId":"branzuelajohn"},"content":"            ui.showLoadingError(e);"},{"lineNumber":42,"author":{"gitId":"branzuelajohn"},"content":"            tasks \u003d new TaskList();"},{"lineNumber":43,"author":{"gitId":"branzuelajohn"},"content":"        }"},{"lineNumber":44,"author":{"gitId":"branzuelajohn"},"content":"    }"},{"lineNumber":45,"author":{"gitId":"branzuelajohn"},"content":""},{"lineNumber":46,"author":{"gitId":"branzuelajohn"},"content":"    /**"},{"lineNumber":47,"author":{"gitId":"branzuelajohn"},"content":"     * Constructor method to create a Duke object."},{"lineNumber":48,"author":{"gitId":"branzuelajohn"},"content":"     * @param filePath the path file to duke text file in the hard drive."},{"lineNumber":49,"author":{"gitId":"branzuelajohn"},"content":"     */"},{"lineNumber":50,"author":{"gitId":"branzuelajohn"},"content":"    public Duke(String filePath) {"},{"lineNumber":51,"author":{"gitId":"branzuelajohn"},"content":"        ui \u003d new Ui();"},{"lineNumber":52,"author":{"gitId":"branzuelajohn"},"content":"        storage \u003d new Storage(filePath);"},{"lineNumber":53,"author":{"gitId":"branzuelajohn"},"content":"        try {"},{"lineNumber":54,"author":{"gitId":"branzuelajohn"},"content":"            tasks \u003d new TaskList(storage.loadAllTasks());"},{"lineNumber":55,"author":{"gitId":"branzuelajohn"},"content":"        } catch (DukeException e) {"},{"lineNumber":56,"author":{"gitId":"branzuelajohn"},"content":"            ui.showError(e.getMessage());"},{"lineNumber":57,"author":{"gitId":"branzuelajohn"},"content":"            tasks \u003d new TaskList();"},{"lineNumber":58,"author":{"gitId":"branzuelajohn"},"content":"        }"},{"lineNumber":59,"author":{"gitId":"branzuelajohn"},"content":"    }"},{"lineNumber":60,"author":{"gitId":"branzuelajohn"},"content":""},{"lineNumber":61,"author":{"gitId":"branzuelajohn"},"content":"    /**"},{"lineNumber":62,"author":{"gitId":"branzuelajohn"},"content":"     * You should have your own function to generate a response to user input."},{"lineNumber":63,"author":{"gitId":"branzuelajohn"},"content":"     * Replace this stub with your completed method."},{"lineNumber":64,"author":{"gitId":"branzuelajohn"},"content":"     */"},{"lineNumber":65,"author":{"gitId":"branzuelajohn"},"content":"    public String getResponse(String input) {"},{"lineNumber":66,"author":{"gitId":"branzuelajohn"},"content":"        try {"},{"lineNumber":67,"author":{"gitId":"branzuelajohn"},"content":"            Command c \u003d Parser.parse(input);"},{"lineNumber":68,"author":{"gitId":"branzuelajohn"},"content":"            if (c.isExit()) {"},{"lineNumber":69,"author":{"gitId":"branzuelajohn"},"content":"                Platform.exit();"},{"lineNumber":70,"author":{"gitId":"branzuelajohn"},"content":"            }"},{"lineNumber":71,"author":{"gitId":"branzuelajohn"},"content":"            return c.execute(this.tasks, this.ui, this.storage);"},{"lineNumber":72,"author":{"gitId":"branzuelajohn"},"content":"        } catch (DukeException e) {"},{"lineNumber":73,"author":{"gitId":"branzuelajohn"},"content":"            return (e.getMessage());"},{"lineNumber":74,"author":{"gitId":"branzuelajohn"},"content":"        }"},{"lineNumber":75,"author":{"gitId":"branzuelajohn"},"content":"    }"},{"lineNumber":76,"author":{"gitId":"branzuelajohn"},"content":""},{"lineNumber":77,"author":{"gitId":"-"},"content":"}"}],"authorContributionMap":{"branzuelajohn":75,"-":2}},{"path":"src/main/java/duke/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"branzuelajohn"},"content":"package duke;"},{"lineNumber":2,"author":{"gitId":"branzuelajohn"},"content":""},{"lineNumber":3,"author":{"gitId":"branzuelajohn"},"content":"/**"},{"lineNumber":4,"author":{"gitId":"branzuelajohn"},"content":" * Exception thrown when there is an invalid input from the user."},{"lineNumber":5,"author":{"gitId":"branzuelajohn"},"content":" */"},{"lineNumber":6,"author":{"gitId":"branzuelajohn"},"content":"public class DukeException extends Exception {"},{"lineNumber":7,"author":{"gitId":"branzuelajohn"},"content":"    /**"},{"lineNumber":8,"author":{"gitId":"branzuelajohn"},"content":"     * Constructor method"},{"lineNumber":9,"author":{"gitId":"branzuelajohn"},"content":"     * @param error The error message."},{"lineNumber":10,"author":{"gitId":"branzuelajohn"},"content":"     */"},{"lineNumber":11,"author":{"gitId":"branzuelajohn"},"content":"    public DukeException(String error) {"},{"lineNumber":12,"author":{"gitId":"branzuelajohn"},"content":"        super(error);"},{"lineNumber":13,"author":{"gitId":"branzuelajohn"},"content":"    }"},{"lineNumber":14,"author":{"gitId":"branzuelajohn"},"content":""},{"lineNumber":15,"author":{"gitId":"branzuelajohn"},"content":"}"}],"authorContributionMap":{"branzuelajohn":15}},{"path":"src/main/java/duke/Launcher.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"branzuelajohn"},"content":"package duke;"},{"lineNumber":2,"author":{"gitId":"branzuelajohn"},"content":""},{"lineNumber":3,"author":{"gitId":"branzuelajohn"},"content":"import javafx.application.Application;"},{"lineNumber":4,"author":{"gitId":"branzuelajohn"},"content":""},{"lineNumber":5,"author":{"gitId":"branzuelajohn"},"content":"/**"},{"lineNumber":6,"author":{"gitId":"branzuelajohn"},"content":" * A launcher class to workaround classpath issues."},{"lineNumber":7,"author":{"gitId":"branzuelajohn"},"content":" */"},{"lineNumber":8,"author":{"gitId":"branzuelajohn"},"content":"public class Launcher {"},{"lineNumber":9,"author":{"gitId":"branzuelajohn"},"content":"    public static void main(String[] args) {"},{"lineNumber":10,"author":{"gitId":"branzuelajohn"},"content":"        Application.launch(Main.class, args);"},{"lineNumber":11,"author":{"gitId":"branzuelajohn"},"content":"    }"},{"lineNumber":12,"author":{"gitId":"branzuelajohn"},"content":"}"}],"authorContributionMap":{"branzuelajohn":12}},{"path":"src/main/java/duke/Main.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"branzuelajohn"},"content":"package duke;"},{"lineNumber":2,"author":{"gitId":"branzuelajohn"},"content":""},{"lineNumber":3,"author":{"gitId":"branzuelajohn"},"content":"import java.io.IOException;"},{"lineNumber":4,"author":{"gitId":"branzuelajohn"},"content":""},{"lineNumber":5,"author":{"gitId":"branzuelajohn"},"content":"import javafx.application.Application;"},{"lineNumber":6,"author":{"gitId":"branzuelajohn"},"content":"import javafx.fxml.FXMLLoader;"},{"lineNumber":7,"author":{"gitId":"branzuelajohn"},"content":"import javafx.scene.Scene;"},{"lineNumber":8,"author":{"gitId":"branzuelajohn"},"content":"import javafx.scene.layout.AnchorPane;"},{"lineNumber":9,"author":{"gitId":"branzuelajohn"},"content":"import javafx.stage.Stage;"},{"lineNumber":10,"author":{"gitId":"branzuelajohn"},"content":""},{"lineNumber":11,"author":{"gitId":"branzuelajohn"},"content":"/**"},{"lineNumber":12,"author":{"gitId":"branzuelajohn"},"content":" * A GUI for Duke using FXML."},{"lineNumber":13,"author":{"gitId":"branzuelajohn"},"content":" */"},{"lineNumber":14,"author":{"gitId":"branzuelajohn"},"content":"public class Main extends Application {"},{"lineNumber":15,"author":{"gitId":"branzuelajohn"},"content":""},{"lineNumber":16,"author":{"gitId":"branzuelajohn"},"content":"    private Duke duke \u003d new Duke();"},{"lineNumber":17,"author":{"gitId":"branzuelajohn"},"content":""},{"lineNumber":18,"author":{"gitId":"branzuelajohn"},"content":"    public Main() throws IOException {}"},{"lineNumber":19,"author":{"gitId":"branzuelajohn"},"content":""},{"lineNumber":20,"author":{"gitId":"branzuelajohn"},"content":"    @Override"},{"lineNumber":21,"author":{"gitId":"branzuelajohn"},"content":"    public void start(Stage stage) {"},{"lineNumber":22,"author":{"gitId":"branzuelajohn"},"content":"        try {"},{"lineNumber":23,"author":{"gitId":"branzuelajohn"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(Main.class.getResource(\"/view/MainWindow.fxml\"));"},{"lineNumber":24,"author":{"gitId":"branzuelajohn"},"content":"            AnchorPane ap \u003d fxmlLoader.load();"},{"lineNumber":25,"author":{"gitId":"branzuelajohn"},"content":"            Scene scene \u003d new Scene(ap);"},{"lineNumber":26,"author":{"gitId":"branzuelajohn"},"content":"            stage.setScene(scene);"},{"lineNumber":27,"author":{"gitId":"branzuelajohn"},"content":"            stage.setResizable(false);"},{"lineNumber":28,"author":{"gitId":"branzuelajohn"},"content":"            fxmlLoader.\u003cMainWindow\u003egetController().setDuke(duke);"},{"lineNumber":29,"author":{"gitId":"branzuelajohn"},"content":"            stage.show();"},{"lineNumber":30,"author":{"gitId":"branzuelajohn"},"content":"        } catch (IOException e) {"},{"lineNumber":31,"author":{"gitId":"branzuelajohn"},"content":"            e.printStackTrace();"},{"lineNumber":32,"author":{"gitId":"branzuelajohn"},"content":"        }"},{"lineNumber":33,"author":{"gitId":"branzuelajohn"},"content":"    }"},{"lineNumber":34,"author":{"gitId":"branzuelajohn"},"content":"}"}],"authorContributionMap":{"branzuelajohn":34}},{"path":"src/main/java/duke/MainWindow.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"branzuelajohn"},"content":"package duke;"},{"lineNumber":2,"author":{"gitId":"branzuelajohn"},"content":""},{"lineNumber":3,"author":{"gitId":"branzuelajohn"},"content":"import javafx.fxml.FXML;"},{"lineNumber":4,"author":{"gitId":"branzuelajohn"},"content":"import javafx.scene.control.Button;"},{"lineNumber":5,"author":{"gitId":"branzuelajohn"},"content":"import javafx.scene.control.ScrollPane;"},{"lineNumber":6,"author":{"gitId":"branzuelajohn"},"content":"import javafx.scene.control.TextField;"},{"lineNumber":7,"author":{"gitId":"branzuelajohn"},"content":"import javafx.scene.image.Image;"},{"lineNumber":8,"author":{"gitId":"branzuelajohn"},"content":"import javafx.scene.layout.AnchorPane;"},{"lineNumber":9,"author":{"gitId":"branzuelajohn"},"content":"import javafx.scene.layout.VBox;"},{"lineNumber":10,"author":{"gitId":"branzuelajohn"},"content":"/**"},{"lineNumber":11,"author":{"gitId":"branzuelajohn"},"content":" * Controller for MainWindow. Provides the layout for the other controls."},{"lineNumber":12,"author":{"gitId":"branzuelajohn"},"content":" */"},{"lineNumber":13,"author":{"gitId":"branzuelajohn"},"content":"public class MainWindow extends AnchorPane {"},{"lineNumber":14,"author":{"gitId":"branzuelajohn"},"content":"    @FXML"},{"lineNumber":15,"author":{"gitId":"branzuelajohn"},"content":"    private ScrollPane scrollPane;"},{"lineNumber":16,"author":{"gitId":"branzuelajohn"},"content":"    @FXML"},{"lineNumber":17,"author":{"gitId":"branzuelajohn"},"content":"    private VBox dialogContainer;"},{"lineNumber":18,"author":{"gitId":"branzuelajohn"},"content":"    @FXML"},{"lineNumber":19,"author":{"gitId":"branzuelajohn"},"content":"    private TextField userInput;"},{"lineNumber":20,"author":{"gitId":"branzuelajohn"},"content":"    @FXML"},{"lineNumber":21,"author":{"gitId":"branzuelajohn"},"content":"    private Button sendButton;"},{"lineNumber":22,"author":{"gitId":"branzuelajohn"},"content":""},{"lineNumber":23,"author":{"gitId":"branzuelajohn"},"content":"    private Duke duke;"},{"lineNumber":24,"author":{"gitId":"branzuelajohn"},"content":""},{"lineNumber":25,"author":{"gitId":"branzuelajohn"},"content":"    private Image userImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/DukeUser.png\"));"},{"lineNumber":26,"author":{"gitId":"branzuelajohn"},"content":"    private Image dukeImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/DukeBot.png\"));"},{"lineNumber":27,"author":{"gitId":"branzuelajohn"},"content":""},{"lineNumber":28,"author":{"gitId":"branzuelajohn"},"content":"    /**"},{"lineNumber":29,"author":{"gitId":"branzuelajohn"},"content":"     * Initialises the main window."},{"lineNumber":30,"author":{"gitId":"branzuelajohn"},"content":"     */"},{"lineNumber":31,"author":{"gitId":"branzuelajohn"},"content":"    @FXML"},{"lineNumber":32,"author":{"gitId":"branzuelajohn"},"content":"    public void initialize() {"},{"lineNumber":33,"author":{"gitId":"branzuelajohn"},"content":"        scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());"},{"lineNumber":34,"author":{"gitId":"branzuelajohn"},"content":"        Ui ui \u003d new Ui();"},{"lineNumber":35,"author":{"gitId":"branzuelajohn"},"content":"        String welcomeMessage \u003d ui.showWelcome();"},{"lineNumber":36,"author":{"gitId":"branzuelajohn"},"content":"        dialogContainer.getChildren().addAll(DialogBox.getDukeDialog(welcomeMessage, dukeImage));"},{"lineNumber":37,"author":{"gitId":"branzuelajohn"},"content":"    }"},{"lineNumber":38,"author":{"gitId":"branzuelajohn"},"content":""},{"lineNumber":39,"author":{"gitId":"branzuelajohn"},"content":"    public void setDuke(Duke d) {"},{"lineNumber":40,"author":{"gitId":"branzuelajohn"},"content":"        duke \u003d d;"},{"lineNumber":41,"author":{"gitId":"branzuelajohn"},"content":"    }"},{"lineNumber":42,"author":{"gitId":"branzuelajohn"},"content":""},{"lineNumber":43,"author":{"gitId":"branzuelajohn"},"content":"    /**"},{"lineNumber":44,"author":{"gitId":"branzuelajohn"},"content":"     * Creates two dialog boxes, one echoing user input and the other containing Duke\u0027s reply and then appends them to"},{"lineNumber":45,"author":{"gitId":"branzuelajohn"},"content":"     * the dialog container. Clears the user input after processing."},{"lineNumber":46,"author":{"gitId":"branzuelajohn"},"content":"     */"},{"lineNumber":47,"author":{"gitId":"branzuelajohn"},"content":"    @FXML"},{"lineNumber":48,"author":{"gitId":"branzuelajohn"},"content":"    private void handleUserInput() {"},{"lineNumber":49,"author":{"gitId":"branzuelajohn"},"content":"        String input \u003d userInput.getText();"},{"lineNumber":50,"author":{"gitId":"branzuelajohn"},"content":"        String response \u003d duke.getResponse(input);"},{"lineNumber":51,"author":{"gitId":"branzuelajohn"},"content":"        dialogContainer.getChildren().addAll("},{"lineNumber":52,"author":{"gitId":"branzuelajohn"},"content":"            DialogBox.getUserDialog(input, userImage),"},{"lineNumber":53,"author":{"gitId":"branzuelajohn"},"content":"            DialogBox.getDukeDialog(response, dukeImage)"},{"lineNumber":54,"author":{"gitId":"branzuelajohn"},"content":"        );"},{"lineNumber":55,"author":{"gitId":"branzuelajohn"},"content":"        userInput.clear();"},{"lineNumber":56,"author":{"gitId":"branzuelajohn"},"content":"    }"},{"lineNumber":57,"author":{"gitId":"branzuelajohn"},"content":"}"}],"authorContributionMap":{"branzuelajohn":57}},{"path":"src/main/java/duke/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"branzuelajohn"},"content":"package duke;"},{"lineNumber":2,"author":{"gitId":"branzuelajohn"},"content":""},{"lineNumber":3,"author":{"gitId":"branzuelajohn"},"content":"import duke.command.ByeCommand;"},{"lineNumber":4,"author":{"gitId":"branzuelajohn"},"content":"import duke.command.Command;"},{"lineNumber":5,"author":{"gitId":"branzuelajohn"},"content":"import duke.command.DeadlineCommand;"},{"lineNumber":6,"author":{"gitId":"branzuelajohn"},"content":"import duke.command.DeleteCommand;"},{"lineNumber":7,"author":{"gitId":"branzuelajohn"},"content":"import duke.command.DoneCommand;"},{"lineNumber":8,"author":{"gitId":"branzuelajohn"},"content":"import duke.command.EventCommand;"},{"lineNumber":9,"author":{"gitId":"branzuelajohn"},"content":"import duke.command.FindCommand;"},{"lineNumber":10,"author":{"gitId":"branzuelajohn"},"content":"import duke.command.HelpCommand;"},{"lineNumber":11,"author":{"gitId":"branzuelajohn"},"content":"import duke.command.ListCommand;"},{"lineNumber":12,"author":{"gitId":"branzuelajohn"},"content":"import duke.command.ToDoCommand;"},{"lineNumber":13,"author":{"gitId":"branzuelajohn"},"content":""},{"lineNumber":14,"author":{"gitId":"branzuelajohn"},"content":""},{"lineNumber":15,"author":{"gitId":"branzuelajohn"},"content":"public class Parser {"},{"lineNumber":16,"author":{"gitId":"branzuelajohn"},"content":""},{"lineNumber":17,"author":{"gitId":"branzuelajohn"},"content":"    /**"},{"lineNumber":18,"author":{"gitId":"branzuelajohn"},"content":"     *  Returns the command to be executed"},{"lineNumber":19,"author":{"gitId":"branzuelajohn"},"content":"     *  If the command is invalid, DukeException is returned."},{"lineNumber":20,"author":{"gitId":"branzuelajohn"},"content":"     *"},{"lineNumber":21,"author":{"gitId":"branzuelajohn"},"content":"     * @param command The input command from the user."},{"lineNumber":22,"author":{"gitId":"branzuelajohn"},"content":"     * @return The command to be executed."},{"lineNumber":23,"author":{"gitId":"branzuelajohn"},"content":"     * @throws DukeException when the command is invalid."},{"lineNumber":24,"author":{"gitId":"branzuelajohn"},"content":"     */"},{"lineNumber":25,"author":{"gitId":"branzuelajohn"},"content":"    public static Command parse(String command) throws DukeException {"},{"lineNumber":26,"author":{"gitId":"branzuelajohn"},"content":"        String[] commandArr \u003d command.trim().toLowerCase().split(\" \");"},{"lineNumber":27,"author":{"gitId":"branzuelajohn"},"content":"        command \u003d command.trim();"},{"lineNumber":28,"author":{"gitId":"branzuelajohn"},"content":"        switch (commandArr[0]) {"},{"lineNumber":29,"author":{"gitId":"branzuelajohn"},"content":"        case \"bye\":"},{"lineNumber":30,"author":{"gitId":"branzuelajohn"},"content":"            return new ByeCommand();"},{"lineNumber":31,"author":{"gitId":"branzuelajohn"},"content":"        case \"list\":"},{"lineNumber":32,"author":{"gitId":"branzuelajohn"},"content":"            return new ListCommand();"},{"lineNumber":33,"author":{"gitId":"branzuelajohn"},"content":"        case \"done\":"},{"lineNumber":34,"author":{"gitId":"branzuelajohn"},"content":"            return new DoneCommand(command);"},{"lineNumber":35,"author":{"gitId":"branzuelajohn"},"content":"        case \"todo\":"},{"lineNumber":36,"author":{"gitId":"branzuelajohn"},"content":"            return new ToDoCommand(command);"},{"lineNumber":37,"author":{"gitId":"branzuelajohn"},"content":"        case \"deadline\":"},{"lineNumber":38,"author":{"gitId":"branzuelajohn"},"content":"            return new DeadlineCommand(command);"},{"lineNumber":39,"author":{"gitId":"branzuelajohn"},"content":"        case \"event\":"},{"lineNumber":40,"author":{"gitId":"branzuelajohn"},"content":"            return new EventCommand(command);"},{"lineNumber":41,"author":{"gitId":"branzuelajohn"},"content":"        case \"delete\":"},{"lineNumber":42,"author":{"gitId":"branzuelajohn"},"content":"            return new DeleteCommand(command);"},{"lineNumber":43,"author":{"gitId":"branzuelajohn"},"content":"        case \"find\":"},{"lineNumber":44,"author":{"gitId":"branzuelajohn"},"content":"            return new FindCommand(command);"},{"lineNumber":45,"author":{"gitId":"branzuelajohn"},"content":"        case \"help\":"},{"lineNumber":46,"author":{"gitId":"branzuelajohn"},"content":"            return new HelpCommand();"},{"lineNumber":47,"author":{"gitId":"branzuelajohn"},"content":"        default:"},{"lineNumber":48,"author":{"gitId":"branzuelajohn"},"content":"            throw new DukeException(\"☹ OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\");"},{"lineNumber":49,"author":{"gitId":"branzuelajohn"},"content":"        }"},{"lineNumber":50,"author":{"gitId":"branzuelajohn"},"content":"    }"},{"lineNumber":51,"author":{"gitId":"branzuelajohn"},"content":"}"}],"authorContributionMap":{"branzuelajohn":51}},{"path":"src/main/java/duke/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"branzuelajohn"},"content":"package duke;"},{"lineNumber":2,"author":{"gitId":"branzuelajohn"},"content":""},{"lineNumber":3,"author":{"gitId":"branzuelajohn"},"content":"import java.io.BufferedReader;"},{"lineNumber":4,"author":{"gitId":"branzuelajohn"},"content":"import java.io.File;"},{"lineNumber":5,"author":{"gitId":"branzuelajohn"},"content":"import java.io.FileReader;"},{"lineNumber":6,"author":{"gitId":"branzuelajohn"},"content":"import java.io.FileWriter;"},{"lineNumber":7,"author":{"gitId":"branzuelajohn"},"content":"import java.io.IOException;"},{"lineNumber":8,"author":{"gitId":"branzuelajohn"},"content":"import java.nio.file.Files;"},{"lineNumber":9,"author":{"gitId":"branzuelajohn"},"content":"import java.nio.file.Paths;"},{"lineNumber":10,"author":{"gitId":"branzuelajohn"},"content":"import java.util.ArrayList;"},{"lineNumber":11,"author":{"gitId":"branzuelajohn"},"content":""},{"lineNumber":12,"author":{"gitId":"branzuelajohn"},"content":"import duke.tasks.Deadline;"},{"lineNumber":13,"author":{"gitId":"branzuelajohn"},"content":"import duke.tasks.Event;"},{"lineNumber":14,"author":{"gitId":"branzuelajohn"},"content":"import duke.tasks.Task;"},{"lineNumber":15,"author":{"gitId":"branzuelajohn"},"content":"import duke.tasks.ToDo;"},{"lineNumber":16,"author":{"gitId":"branzuelajohn"},"content":""},{"lineNumber":17,"author":{"gitId":"branzuelajohn"},"content":"/**"},{"lineNumber":18,"author":{"gitId":"branzuelajohn"},"content":" * Storage class responsible for loading and saving data into the hard drive."},{"lineNumber":19,"author":{"gitId":"branzuelajohn"},"content":" */"},{"lineNumber":20,"author":{"gitId":"branzuelajohn"},"content":"public class Storage {"},{"lineNumber":21,"author":{"gitId":"branzuelajohn"},"content":"    protected String filePath;"},{"lineNumber":22,"author":{"gitId":"branzuelajohn"},"content":""},{"lineNumber":23,"author":{"gitId":"branzuelajohn"},"content":"    /**"},{"lineNumber":24,"author":{"gitId":"branzuelajohn"},"content":"     * Constructor method for storage class."},{"lineNumber":25,"author":{"gitId":"branzuelajohn"},"content":"     * @param filePath The pathfile to access text file."},{"lineNumber":26,"author":{"gitId":"branzuelajohn"},"content":"     */"},{"lineNumber":27,"author":{"gitId":"branzuelajohn"},"content":"    public Storage(String filePath) {"},{"lineNumber":28,"author":{"gitId":"branzuelajohn"},"content":"        this.filePath \u003d filePath;"},{"lineNumber":29,"author":{"gitId":"branzuelajohn"},"content":"    }"},{"lineNumber":30,"author":{"gitId":"branzuelajohn"},"content":""},{"lineNumber":31,"author":{"gitId":"branzuelajohn"},"content":"    /**"},{"lineNumber":32,"author":{"gitId":"branzuelajohn"},"content":"     * Loads Arraylist of tasks from text file in the hard drive ."},{"lineNumber":33,"author":{"gitId":"branzuelajohn"},"content":"     * @return ArrayList containing Task objects"},{"lineNumber":34,"author":{"gitId":"branzuelajohn"},"content":"     * @throws DukeException if there is error creating or reading the file."},{"lineNumber":35,"author":{"gitId":"branzuelajohn"},"content":"     */"},{"lineNumber":36,"author":{"gitId":"branzuelajohn"},"content":"    public ArrayList\u003cTask\u003e loadAllTasks() throws DukeException {"},{"lineNumber":37,"author":{"gitId":"branzuelajohn"},"content":"        ArrayList\u003cTask\u003e taskList \u003d new ArrayList\u003c\u003e();"},{"lineNumber":38,"author":{"gitId":"branzuelajohn"},"content":"        File file \u003d new File(filePath);"},{"lineNumber":39,"author":{"gitId":"branzuelajohn"},"content":""},{"lineNumber":40,"author":{"gitId":"branzuelajohn"},"content":"        if (file.exists() \u0026\u0026 !file.isDirectory()) {"},{"lineNumber":41,"author":{"gitId":"branzuelajohn"},"content":"            try {"},{"lineNumber":42,"author":{"gitId":"branzuelajohn"},"content":"                for (String line : Files.readAllLines(Paths.get(filePath))) {"},{"lineNumber":43,"author":{"gitId":"branzuelajohn"},"content":"                    String[] dataArr \u003d line.split(\" \\\\| \");"},{"lineNumber":44,"author":{"gitId":"branzuelajohn"},"content":"                    String typeTask \u003d dataArr[0];"},{"lineNumber":45,"author":{"gitId":"branzuelajohn"},"content":"                    assert (typeTask.equals(\"T\") || typeTask.equals(\"D\") || typeTask.equals(\"E\")) : \"Tasks are being \""},{"lineNumber":46,"author":{"gitId":"branzuelajohn"},"content":"                       + \"saved wrongly\";"},{"lineNumber":47,"author":{"gitId":"branzuelajohn"},"content":""},{"lineNumber":48,"author":{"gitId":"branzuelajohn"},"content":"                    switch (typeTask) {"},{"lineNumber":49,"author":{"gitId":"branzuelajohn"},"content":"                    case \"T\":"},{"lineNumber":50,"author":{"gitId":"branzuelajohn"},"content":"                        assert (dataArr.length \u003e 3) : \"Todo Tasks are being saved incorrectly\";"},{"lineNumber":51,"author":{"gitId":"branzuelajohn"},"content":"                        ToDo td \u003d new ToDo(dataArr[2]);"},{"lineNumber":52,"author":{"gitId":"branzuelajohn"},"content":"                        if (dataArr[1].equals(\"1\")) {"},{"lineNumber":53,"author":{"gitId":"branzuelajohn"},"content":"                            td.markAsDone();"},{"lineNumber":54,"author":{"gitId":"branzuelajohn"},"content":"                        }"},{"lineNumber":55,"author":{"gitId":"branzuelajohn"},"content":""},{"lineNumber":56,"author":{"gitId":"branzuelajohn"},"content":"                        taskList.add(td);"},{"lineNumber":57,"author":{"gitId":"branzuelajohn"},"content":"                        break;"},{"lineNumber":58,"author":{"gitId":"branzuelajohn"},"content":""},{"lineNumber":59,"author":{"gitId":"branzuelajohn"},"content":"                    case \"D\":"},{"lineNumber":60,"author":{"gitId":"branzuelajohn"},"content":"                        assert (dataArr.length \u003e 4) : \"Deadlines are being saved incorrectly\";"},{"lineNumber":61,"author":{"gitId":"branzuelajohn"},"content":"                        Deadline d \u003d new Deadline(dataArr[2], dataArr[3]);"},{"lineNumber":62,"author":{"gitId":"branzuelajohn"},"content":""},{"lineNumber":63,"author":{"gitId":"branzuelajohn"},"content":"                        if (dataArr[1].equals(\"1\")) {"},{"lineNumber":64,"author":{"gitId":"branzuelajohn"},"content":"                            d.markAsDone();"},{"lineNumber":65,"author":{"gitId":"branzuelajohn"},"content":"                        }"},{"lineNumber":66,"author":{"gitId":"branzuelajohn"},"content":""},{"lineNumber":67,"author":{"gitId":"branzuelajohn"},"content":"                        taskList.add(d);"},{"lineNumber":68,"author":{"gitId":"branzuelajohn"},"content":"                        break;"},{"lineNumber":69,"author":{"gitId":"branzuelajohn"},"content":""},{"lineNumber":70,"author":{"gitId":"branzuelajohn"},"content":"                    case \"E\":"},{"lineNumber":71,"author":{"gitId":"branzuelajohn"},"content":"                        assert (dataArr.length \u003e 4) : \"Events are being saved incorrectly\";"},{"lineNumber":72,"author":{"gitId":"branzuelajohn"},"content":"                        Event e \u003d new Event(dataArr[2], dataArr[3]);"},{"lineNumber":73,"author":{"gitId":"branzuelajohn"},"content":""},{"lineNumber":74,"author":{"gitId":"branzuelajohn"},"content":"                        if (dataArr[1].equals(\"1\")) {"},{"lineNumber":75,"author":{"gitId":"branzuelajohn"},"content":"                            e.markAsDone();"},{"lineNumber":76,"author":{"gitId":"branzuelajohn"},"content":"                        }"},{"lineNumber":77,"author":{"gitId":"branzuelajohn"},"content":"                        taskList.add(e);"},{"lineNumber":78,"author":{"gitId":"branzuelajohn"},"content":"                        break;"},{"lineNumber":79,"author":{"gitId":"branzuelajohn"},"content":"                    default:"},{"lineNumber":80,"author":{"gitId":"branzuelajohn"},"content":"                        throw new DukeException(\"Line cannot be read.\");"},{"lineNumber":81,"author":{"gitId":"branzuelajohn"},"content":"                    }"},{"lineNumber":82,"author":{"gitId":"branzuelajohn"},"content":"                }"},{"lineNumber":83,"author":{"gitId":"branzuelajohn"},"content":"                System.out.println(\"Successfully loaded all tasks\");"},{"lineNumber":84,"author":{"gitId":"branzuelajohn"},"content":"                return taskList;"},{"lineNumber":85,"author":{"gitId":"branzuelajohn"},"content":"            } catch (IOException e) {"},{"lineNumber":86,"author":{"gitId":"branzuelajohn"},"content":"                System.out.println(\"Error reading file\" + e);"},{"lineNumber":87,"author":{"gitId":"branzuelajohn"},"content":"                throw new DukeException(\"Error reading file\");"},{"lineNumber":88,"author":{"gitId":"branzuelajohn"},"content":"            }"},{"lineNumber":89,"author":{"gitId":"branzuelajohn"},"content":"        } else {"},{"lineNumber":90,"author":{"gitId":"branzuelajohn"},"content":"            try {"},{"lineNumber":91,"author":{"gitId":"branzuelajohn"},"content":"                file.getParentFile().mkdirs();"},{"lineNumber":92,"author":{"gitId":"branzuelajohn"},"content":"                file.createNewFile();"},{"lineNumber":93,"author":{"gitId":"branzuelajohn"},"content":"            } catch (IOException e) {"},{"lineNumber":94,"author":{"gitId":"branzuelajohn"},"content":"                System.out.println(\"Error creating file\" + e);"},{"lineNumber":95,"author":{"gitId":"branzuelajohn"},"content":"                throw new DukeException(\"Error reading file\");"},{"lineNumber":96,"author":{"gitId":"branzuelajohn"},"content":"            }"},{"lineNumber":97,"author":{"gitId":"branzuelajohn"},"content":"        }"},{"lineNumber":98,"author":{"gitId":"branzuelajohn"},"content":"        return new ArrayList\u003c\u003e();"},{"lineNumber":99,"author":{"gitId":"branzuelajohn"},"content":"    }"},{"lineNumber":100,"author":{"gitId":"branzuelajohn"},"content":""},{"lineNumber":101,"author":{"gitId":"branzuelajohn"},"content":"    /**"},{"lineNumber":102,"author":{"gitId":"branzuelajohn"},"content":"     * Adds new data to the text file."},{"lineNumber":103,"author":{"gitId":"branzuelajohn"},"content":"     * @param taskType The type of Task i.e Event, Deadline, ToDo."},{"lineNumber":104,"author":{"gitId":"branzuelajohn"},"content":"     * @param done Whether the task is completed."},{"lineNumber":105,"author":{"gitId":"branzuelajohn"},"content":"     * @param description The description of the task."},{"lineNumber":106,"author":{"gitId":"branzuelajohn"},"content":"     * @param deadline The time of the task."},{"lineNumber":107,"author":{"gitId":"branzuelajohn"},"content":"     */"},{"lineNumber":108,"author":{"gitId":"branzuelajohn"},"content":"    public void addNewDataToFile(String taskType, String done,"},{"lineNumber":109,"author":{"gitId":"branzuelajohn"},"content":"                                  String description, String deadline) throws DukeException {"},{"lineNumber":110,"author":{"gitId":"branzuelajohn"},"content":"        try {"},{"lineNumber":111,"author":{"gitId":"branzuelajohn"},"content":"            FileWriter mw \u003d new FileWriter(filePath, true);"},{"lineNumber":112,"author":{"gitId":"branzuelajohn"},"content":"            switch (taskType) {"},{"lineNumber":113,"author":{"gitId":"branzuelajohn"},"content":"            case \"T\":"},{"lineNumber":114,"author":{"gitId":"branzuelajohn"},"content":"                mw.write(taskType + \" | \" + done + \" | \" + description + \"\\n\");"},{"lineNumber":115,"author":{"gitId":"branzuelajohn"},"content":"                mw.close();"},{"lineNumber":116,"author":{"gitId":"branzuelajohn"},"content":"                break;"},{"lineNumber":117,"author":{"gitId":"branzuelajohn"},"content":"            case \"D\":"},{"lineNumber":118,"author":{"gitId":"branzuelajohn"},"content":"            case \"E\":"},{"lineNumber":119,"author":{"gitId":"branzuelajohn"},"content":"                mw.write(taskType + \" | \" + done + \" | \" + description + \" | \" + deadline + \"\\n\");"},{"lineNumber":120,"author":{"gitId":"branzuelajohn"},"content":"                mw.close();"},{"lineNumber":121,"author":{"gitId":"branzuelajohn"},"content":"                break;"},{"lineNumber":122,"author":{"gitId":"branzuelajohn"},"content":"            default:"},{"lineNumber":123,"author":{"gitId":"branzuelajohn"},"content":"                throw new DukeException(\"Task type cannot be read\");"},{"lineNumber":124,"author":{"gitId":"branzuelajohn"},"content":"            }"},{"lineNumber":125,"author":{"gitId":"branzuelajohn"},"content":"        } catch (IOException e) {"},{"lineNumber":126,"author":{"gitId":"branzuelajohn"},"content":"            System.out.println(\"Encountered problem writing to file\" + e);"},{"lineNumber":127,"author":{"gitId":"branzuelajohn"},"content":"        }"},{"lineNumber":128,"author":{"gitId":"branzuelajohn"},"content":"    }"},{"lineNumber":129,"author":{"gitId":"branzuelajohn"},"content":""},{"lineNumber":130,"author":{"gitId":"branzuelajohn"},"content":"    /**"},{"lineNumber":131,"author":{"gitId":"branzuelajohn"},"content":"     * Edits a task in the text file."},{"lineNumber":132,"author":{"gitId":"branzuelajohn"},"content":"     * @param taskNumber The index number of the task."},{"lineNumber":133,"author":{"gitId":"branzuelajohn"},"content":"     * @param taskType The type of the task."},{"lineNumber":134,"author":{"gitId":"branzuelajohn"},"content":"     * @param done Whether the task is completed."},{"lineNumber":135,"author":{"gitId":"branzuelajohn"},"content":"     * @param description The description of the task."},{"lineNumber":136,"author":{"gitId":"branzuelajohn"},"content":"     * @param deadline The time of the task."},{"lineNumber":137,"author":{"gitId":"branzuelajohn"},"content":"     * @param total The total number of tasks in the list."},{"lineNumber":138,"author":{"gitId":"branzuelajohn"},"content":"     */"},{"lineNumber":139,"author":{"gitId":"branzuelajohn"},"content":"    public void editDataInFile(int taskNumber, String taskType, String done,"},{"lineNumber":140,"author":{"gitId":"branzuelajohn"},"content":"                                      String description, String deadline, int total) {"},{"lineNumber":141,"author":{"gitId":"branzuelajohn"},"content":"        try {"},{"lineNumber":142,"author":{"gitId":"branzuelajohn"},"content":""},{"lineNumber":143,"author":{"gitId":"branzuelajohn"},"content":"            BufferedReader br \u003d new BufferedReader(new FileReader(filePath));"},{"lineNumber":144,"author":{"gitId":"branzuelajohn"},"content":""},{"lineNumber":145,"author":{"gitId":"branzuelajohn"},"content":"            //String buffer to store contents of the file"},{"lineNumber":146,"author":{"gitId":"branzuelajohn"},"content":"            StringBuffer sb \u003d new StringBuffer(\"\");"},{"lineNumber":147,"author":{"gitId":"branzuelajohn"},"content":""},{"lineNumber":148,"author":{"gitId":"branzuelajohn"},"content":"            //Keep track of the line number"},{"lineNumber":149,"author":{"gitId":"branzuelajohn"},"content":"            int lineNumber \u003d 1;"},{"lineNumber":150,"author":{"gitId":"branzuelajohn"},"content":"            String line;"},{"lineNumber":151,"author":{"gitId":"branzuelajohn"},"content":"            System.out.println(\"total: \" + total);"},{"lineNumber":152,"author":{"gitId":"branzuelajohn"},"content":"            System.out.println(\"taskNumber: \" + taskNumber);"},{"lineNumber":153,"author":{"gitId":"branzuelajohn"},"content":""},{"lineNumber":154,"author":{"gitId":"branzuelajohn"},"content":"            while ((line \u003d br.readLine()) !\u003d null) {"},{"lineNumber":155,"author":{"gitId":"branzuelajohn"},"content":"                //Store each valid line in the string buffer"},{"lineNumber":156,"author":{"gitId":"branzuelajohn"},"content":"                if (lineNumber !\u003d taskNumber \u0026\u0026 lineNumber !\u003d total) {"},{"lineNumber":157,"author":{"gitId":"branzuelajohn"},"content":"                    System.out.println(\"linenumber: \" + lineNumber + \" line: \" + line);"},{"lineNumber":158,"author":{"gitId":"branzuelajohn"},"content":"                    sb.append(line + \"\\n\");"},{"lineNumber":159,"author":{"gitId":"branzuelajohn"},"content":"                } else if (lineNumber !\u003d taskNumber) {"},{"lineNumber":160,"author":{"gitId":"branzuelajohn"},"content":"                    System.out.println(\"linenumber: \" + lineNumber + \" line: \" + line);"},{"lineNumber":161,"author":{"gitId":"branzuelajohn"},"content":"                    sb.append(line);"},{"lineNumber":162,"author":{"gitId":"branzuelajohn"},"content":"                } else {"},{"lineNumber":163,"author":{"gitId":"branzuelajohn"},"content":"                    String data;"},{"lineNumber":164,"author":{"gitId":"branzuelajohn"},"content":"                    if (taskType.equals(\"T\")) {"},{"lineNumber":165,"author":{"gitId":"branzuelajohn"},"content":"                        data \u003d taskType + \" | \" + done + \" | \" + description;"},{"lineNumber":166,"author":{"gitId":"branzuelajohn"},"content":"                    } else {"},{"lineNumber":167,"author":{"gitId":"branzuelajohn"},"content":"                        data \u003d taskType + \" | \" + done + \" | \" + description + \" | \" + deadline;"},{"lineNumber":168,"author":{"gitId":"branzuelajohn"},"content":"                    }"},{"lineNumber":169,"author":{"gitId":"branzuelajohn"},"content":"                    System.out.println(\"lineNumber: \" + lineNumber + \" line: \" + line);"},{"lineNumber":170,"author":{"gitId":"branzuelajohn"},"content":""},{"lineNumber":171,"author":{"gitId":"branzuelajohn"},"content":"                    if (lineNumber \u003d\u003d total) {"},{"lineNumber":172,"author":{"gitId":"branzuelajohn"},"content":"                        sb.append(data);"},{"lineNumber":173,"author":{"gitId":"branzuelajohn"},"content":"                    } else {"},{"lineNumber":174,"author":{"gitId":"branzuelajohn"},"content":"                        sb.append(data + \"\\n\");"},{"lineNumber":175,"author":{"gitId":"branzuelajohn"},"content":"                    }"},{"lineNumber":176,"author":{"gitId":"branzuelajohn"},"content":"                }"},{"lineNumber":177,"author":{"gitId":"branzuelajohn"},"content":"                lineNumber++;"},{"lineNumber":178,"author":{"gitId":"branzuelajohn"},"content":"            }"},{"lineNumber":179,"author":{"gitId":"branzuelajohn"},"content":"            br.close();"},{"lineNumber":180,"author":{"gitId":"branzuelajohn"},"content":""},{"lineNumber":181,"author":{"gitId":"branzuelajohn"},"content":"            FileWriter fw \u003d new FileWriter(new File(filePath));"},{"lineNumber":182,"author":{"gitId":"branzuelajohn"},"content":"            //Write entire string buffer into the file"},{"lineNumber":183,"author":{"gitId":"branzuelajohn"},"content":"            fw.write(sb.toString());"},{"lineNumber":184,"author":{"gitId":"branzuelajohn"},"content":"            fw.close();"},{"lineNumber":185,"author":{"gitId":"branzuelajohn"},"content":"        } catch (IOException e) {"},{"lineNumber":186,"author":{"gitId":"branzuelajohn"},"content":"            System.out.println(\"Error editing file: \" + e.getMessage());"},{"lineNumber":187,"author":{"gitId":"branzuelajohn"},"content":"        }"},{"lineNumber":188,"author":{"gitId":"branzuelajohn"},"content":"    }"},{"lineNumber":189,"author":{"gitId":"branzuelajohn"},"content":""},{"lineNumber":190,"author":{"gitId":"branzuelajohn"},"content":"    /**"},{"lineNumber":191,"author":{"gitId":"branzuelajohn"},"content":"     * Removes a task from the text file."},{"lineNumber":192,"author":{"gitId":"branzuelajohn"},"content":"     * @param taskNumber The index number of the task."},{"lineNumber":193,"author":{"gitId":"branzuelajohn"},"content":"     * @param total The total number of tasks in the list."},{"lineNumber":194,"author":{"gitId":"branzuelajohn"},"content":"     */"},{"lineNumber":195,"author":{"gitId":"branzuelajohn"},"content":"    public void removeDataInFile(int taskNumber, int total) {"},{"lineNumber":196,"author":{"gitId":"branzuelajohn"},"content":"        try {"},{"lineNumber":197,"author":{"gitId":"branzuelajohn"},"content":"            String currentDir \u003d System.getProperty(\"user.dir\");"},{"lineNumber":198,"author":{"gitId":"branzuelajohn"},"content":"            String filePath \u003d currentDir + File.separator + \"data\" + File.separator + \"duke.txt\";"},{"lineNumber":199,"author":{"gitId":"branzuelajohn"},"content":"            BufferedReader br \u003d new BufferedReader(new FileReader(filePath));"},{"lineNumber":200,"author":{"gitId":"branzuelajohn"},"content":""},{"lineNumber":201,"author":{"gitId":"branzuelajohn"},"content":"            //String buffer to store contents of the file"},{"lineNumber":202,"author":{"gitId":"branzuelajohn"},"content":"            StringBuffer sb \u003d new StringBuffer(\"\");"},{"lineNumber":203,"author":{"gitId":"branzuelajohn"},"content":""},{"lineNumber":204,"author":{"gitId":"branzuelajohn"},"content":"            //Keep track of the line number"},{"lineNumber":205,"author":{"gitId":"branzuelajohn"},"content":"            int lineNumber \u003d 1;"},{"lineNumber":206,"author":{"gitId":"branzuelajohn"},"content":"            String line;"},{"lineNumber":207,"author":{"gitId":"branzuelajohn"},"content":""},{"lineNumber":208,"author":{"gitId":"branzuelajohn"},"content":"            while ((line \u003d br.readLine()) !\u003d null) {"},{"lineNumber":209,"author":{"gitId":"branzuelajohn"},"content":"                //Store each valid line in the string buffer"},{"lineNumber":210,"author":{"gitId":"branzuelajohn"},"content":"                if (lineNumber !\u003d taskNumber \u0026\u0026 lineNumber \u003d\u003d total + 1) {"},{"lineNumber":211,"author":{"gitId":"branzuelajohn"},"content":"                    sb.append(line);"},{"lineNumber":212,"author":{"gitId":"branzuelajohn"},"content":"                } else if (lineNumber !\u003d taskNumber) {"},{"lineNumber":213,"author":{"gitId":"branzuelajohn"},"content":"                    sb.append(line + \"\\n\");"},{"lineNumber":214,"author":{"gitId":"branzuelajohn"},"content":"                }"},{"lineNumber":215,"author":{"gitId":"branzuelajohn"},"content":"                lineNumber++;"},{"lineNumber":216,"author":{"gitId":"branzuelajohn"},"content":"            }"},{"lineNumber":217,"author":{"gitId":"branzuelajohn"},"content":"            br.close();"},{"lineNumber":218,"author":{"gitId":"branzuelajohn"},"content":""},{"lineNumber":219,"author":{"gitId":"branzuelajohn"},"content":"            FileWriter fw \u003d new FileWriter(new File(filePath));"},{"lineNumber":220,"author":{"gitId":"branzuelajohn"},"content":"            //Write entire string buffer into the file"},{"lineNumber":221,"author":{"gitId":"branzuelajohn"},"content":"            fw.write(sb.toString());"},{"lineNumber":222,"author":{"gitId":"branzuelajohn"},"content":"            fw.close();"},{"lineNumber":223,"author":{"gitId":"branzuelajohn"},"content":"        } catch (Exception ex) {"},{"lineNumber":224,"author":{"gitId":"branzuelajohn"},"content":"            System.out.println(\"Error deleting line: \" + ex.getMessage());"},{"lineNumber":225,"author":{"gitId":"branzuelajohn"},"content":"        }"},{"lineNumber":226,"author":{"gitId":"branzuelajohn"},"content":"    }"},{"lineNumber":227,"author":{"gitId":"branzuelajohn"},"content":"}"}],"authorContributionMap":{"branzuelajohn":227}},{"path":"src/main/java/duke/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"branzuelajohn"},"content":"package duke;"},{"lineNumber":2,"author":{"gitId":"branzuelajohn"},"content":""},{"lineNumber":3,"author":{"gitId":"branzuelajohn"},"content":"import java.util.Scanner;"},{"lineNumber":4,"author":{"gitId":"branzuelajohn"},"content":""},{"lineNumber":5,"author":{"gitId":"branzuelajohn"},"content":"import duke.tasks.Task;"},{"lineNumber":6,"author":{"gitId":"branzuelajohn"},"content":"import duke.tasks.TaskList;"},{"lineNumber":7,"author":{"gitId":"branzuelajohn"},"content":""},{"lineNumber":8,"author":{"gitId":"branzuelajohn"},"content":"/**"},{"lineNumber":9,"author":{"gitId":"branzuelajohn"},"content":" * Ui class is a class that handles all IO aspects in Duke."},{"lineNumber":10,"author":{"gitId":"branzuelajohn"},"content":" */"},{"lineNumber":11,"author":{"gitId":"branzuelajohn"},"content":"public class Ui {"},{"lineNumber":12,"author":{"gitId":"branzuelajohn"},"content":""},{"lineNumber":13,"author":{"gitId":"branzuelajohn"},"content":"    /**"},{"lineNumber":14,"author":{"gitId":"branzuelajohn"},"content":"     * The messages that the chat bot will send out."},{"lineNumber":15,"author":{"gitId":"branzuelajohn"},"content":"     */"},{"lineNumber":16,"author":{"gitId":"branzuelajohn"},"content":"    static final String WELCOME_MESSAGE \u003d \"Hello! I am Juke, your personal assistant, how can I help you today?\";"},{"lineNumber":17,"author":{"gitId":"branzuelajohn"},"content":"    static final String HELP_PROMPT \u003d \"[Type \u0027help\u0027 to display instructions]\";"},{"lineNumber":18,"author":{"gitId":"branzuelajohn"},"content":"    static final String HELP_INTRO \u003d \"Here are the list of commands for Juke: \\n\";"},{"lineNumber":19,"author":{"gitId":"branzuelajohn"},"content":"    static final String[] COMMANDS \u003d {\"list\", \"bye\", \"todo\", \"deadline\", \"event\", \"done\", \"find\", \"delete\", \"help\"};"},{"lineNumber":20,"author":{"gitId":"branzuelajohn"},"content":"    static final String LIST_HELP \u003d \"1. list - lists out all existing tasks that have been stored in Juke\";"},{"lineNumber":21,"author":{"gitId":"branzuelajohn"},"content":"    static final String BYE_HELP \u003d \"2. bye - to exit Juke\";"},{"lineNumber":22,"author":{"gitId":"branzuelajohn"},"content":"    static final String TODO_HELP \u003d \"3. todo \u003cdescription\u003e - adds a Todo task with the specified \u003cdescription\u003e\";"},{"lineNumber":23,"author":{"gitId":"branzuelajohn"},"content":"    static final String DEADLINE_HELP \u003d \"4.  deadline \u003cdescription\u003e /by \u003cyyyy-MM-dd HH:mm\u003e - adds a Deadline task with\""},{"lineNumber":24,"author":{"gitId":"branzuelajohn"},"content":"        + \" the specified \u003cdescription\u003e by \u003cyyyy-MM-dd HH:mm\u003e\";"},{"lineNumber":25,"author":{"gitId":"branzuelajohn"},"content":"    static final String EVENT_HELP \u003d \"5. event \u003cdescription\u003e /at \u003cevent time\u003e - adds an Event task with\""},{"lineNumber":26,"author":{"gitId":"branzuelajohn"},"content":"        + \" the specified \u003cdescription\u003e and time\";"},{"lineNumber":27,"author":{"gitId":"branzuelajohn"},"content":"    static final String DONE_HELP \u003d \"6. done \u003ctaskId\u003e - marks a specific task as done\";"},{"lineNumber":28,"author":{"gitId":"branzuelajohn"},"content":"    static final String FIND_HELP \u003d \"7. find \u003cregex\u003e - to find all items containing the specified \""},{"lineNumber":29,"author":{"gitId":"branzuelajohn"},"content":"        + \"regex in its description\";"},{"lineNumber":30,"author":{"gitId":"branzuelajohn"},"content":"    static final String DELETE_HELP \u003d \"8. delete \u003ctaskId\u003e - deletes a specific task\";"},{"lineNumber":31,"author":{"gitId":"branzuelajohn"},"content":"    private Scanner sc;"},{"lineNumber":32,"author":{"gitId":"branzuelajohn"},"content":""},{"lineNumber":33,"author":{"gitId":"branzuelajohn"},"content":"    /**"},{"lineNumber":34,"author":{"gitId":"branzuelajohn"},"content":"     * Constructor method for Ui class."},{"lineNumber":35,"author":{"gitId":"branzuelajohn"},"content":"     */"},{"lineNumber":36,"author":{"gitId":"branzuelajohn"},"content":"    public Ui() {"},{"lineNumber":37,"author":{"gitId":"branzuelajohn"},"content":"        this.sc \u003d new Scanner(System.in);"},{"lineNumber":38,"author":{"gitId":"branzuelajohn"},"content":""},{"lineNumber":39,"author":{"gitId":"branzuelajohn"},"content":"    }"},{"lineNumber":40,"author":{"gitId":"branzuelajohn"},"content":""},{"lineNumber":41,"author":{"gitId":"branzuelajohn"},"content":"    /**"},{"lineNumber":42,"author":{"gitId":"branzuelajohn"},"content":"     * Shows Duke\u0027s welcome message."},{"lineNumber":43,"author":{"gitId":"branzuelajohn"},"content":"     * @return The string to be printed."},{"lineNumber":44,"author":{"gitId":"branzuelajohn"},"content":"     */"},{"lineNumber":45,"author":{"gitId":"branzuelajohn"},"content":"    public String showWelcome() {"},{"lineNumber":46,"author":{"gitId":"branzuelajohn"},"content":"        StringBuilder sb \u003d new StringBuilder(Ui.WELCOME_MESSAGE + \"\\n\" + \"\\n\" + Ui.HELP_PROMPT);"},{"lineNumber":47,"author":{"gitId":"branzuelajohn"},"content":"        return sb.toString();"},{"lineNumber":48,"author":{"gitId":"branzuelajohn"},"content":"    }"},{"lineNumber":49,"author":{"gitId":"branzuelajohn"},"content":""},{"lineNumber":50,"author":{"gitId":"branzuelajohn"},"content":""},{"lineNumber":51,"author":{"gitId":"branzuelajohn"},"content":"    public String readCommand() {"},{"lineNumber":52,"author":{"gitId":"branzuelajohn"},"content":"        return sc.nextLine();"},{"lineNumber":53,"author":{"gitId":"branzuelajohn"},"content":"    }"},{"lineNumber":54,"author":{"gitId":"branzuelajohn"},"content":""},{"lineNumber":55,"author":{"gitId":"branzuelajohn"},"content":"    public String showLoadingError(Exception e) {"},{"lineNumber":56,"author":{"gitId":"branzuelajohn"},"content":"        return e.getMessage();"},{"lineNumber":57,"author":{"gitId":"branzuelajohn"},"content":"    }"},{"lineNumber":58,"author":{"gitId":"branzuelajohn"},"content":""},{"lineNumber":59,"author":{"gitId":"branzuelajohn"},"content":"    /**"},{"lineNumber":60,"author":{"gitId":"branzuelajohn"},"content":"     * Shows the error message from exception."},{"lineNumber":61,"author":{"gitId":"branzuelajohn"},"content":"     * @param error The error message"},{"lineNumber":62,"author":{"gitId":"branzuelajohn"},"content":"     * @return The string to be printed."},{"lineNumber":63,"author":{"gitId":"branzuelajohn"},"content":"     */"},{"lineNumber":64,"author":{"gitId":"branzuelajohn"},"content":"    public String showError(String error) {"},{"lineNumber":65,"author":{"gitId":"branzuelajohn"},"content":"        return error;"},{"lineNumber":66,"author":{"gitId":"branzuelajohn"},"content":"    }"},{"lineNumber":67,"author":{"gitId":"branzuelajohn"},"content":""},{"lineNumber":68,"author":{"gitId":"branzuelajohn"},"content":"    /**"},{"lineNumber":69,"author":{"gitId":"branzuelajohn"},"content":"     *"},{"lineNumber":70,"author":{"gitId":"branzuelajohn"},"content":"     * @param message The message to be printed."},{"lineNumber":71,"author":{"gitId":"branzuelajohn"},"content":"     * @return The string to be printed"},{"lineNumber":72,"author":{"gitId":"branzuelajohn"},"content":"     */"},{"lineNumber":73,"author":{"gitId":"branzuelajohn"},"content":"    public String print(String message) {"},{"lineNumber":74,"author":{"gitId":"branzuelajohn"},"content":"        return message;"},{"lineNumber":75,"author":{"gitId":"branzuelajohn"},"content":"    }"},{"lineNumber":76,"author":{"gitId":"branzuelajohn"},"content":""},{"lineNumber":77,"author":{"gitId":"branzuelajohn"},"content":"    /**"},{"lineNumber":78,"author":{"gitId":"branzuelajohn"},"content":"     * Prints the task added"},{"lineNumber":79,"author":{"gitId":"branzuelajohn"},"content":"     * @param task Task to be added."},{"lineNumber":80,"author":{"gitId":"branzuelajohn"},"content":"     * @return The string to be printed."},{"lineNumber":81,"author":{"gitId":"branzuelajohn"},"content":"     */"},{"lineNumber":82,"author":{"gitId":"branzuelajohn"},"content":"    public String showTaskAdded(Task task) {"},{"lineNumber":83,"author":{"gitId":"branzuelajohn"},"content":"        return \"Got it. I\u0027ve added this task: \\n\" + task.toString();"},{"lineNumber":84,"author":{"gitId":"branzuelajohn"},"content":"    }"},{"lineNumber":85,"author":{"gitId":"branzuelajohn"},"content":""},{"lineNumber":86,"author":{"gitId":"branzuelajohn"},"content":"    /**"},{"lineNumber":87,"author":{"gitId":"branzuelajohn"},"content":"     * Prints the tasks in the list."},{"lineNumber":88,"author":{"gitId":"branzuelajohn"},"content":"     * @param taskList The list of tasks."},{"lineNumber":89,"author":{"gitId":"branzuelajohn"},"content":"     * @return The string to be printed."},{"lineNumber":90,"author":{"gitId":"branzuelajohn"},"content":"     */"},{"lineNumber":91,"author":{"gitId":"branzuelajohn"},"content":"    public String showNoOfItems(TaskList taskList) {"},{"lineNumber":92,"author":{"gitId":"branzuelajohn"},"content":"        int num \u003d taskList.getSize();"},{"lineNumber":93,"author":{"gitId":"branzuelajohn"},"content":"        if (num \u003d\u003d 1) {"},{"lineNumber":94,"author":{"gitId":"branzuelajohn"},"content":"            return \"Now you have \" + num + \" task in the list.\\n\";"},{"lineNumber":95,"author":{"gitId":"branzuelajohn"},"content":"        } else {"},{"lineNumber":96,"author":{"gitId":"branzuelajohn"},"content":"            return \"Now you have \" + num + \" tasks in the list.\\n\";"},{"lineNumber":97,"author":{"gitId":"branzuelajohn"},"content":"        }"},{"lineNumber":98,"author":{"gitId":"branzuelajohn"},"content":"    }"},{"lineNumber":99,"author":{"gitId":"branzuelajohn"},"content":""},{"lineNumber":100,"author":{"gitId":"branzuelajohn"},"content":"    /**"},{"lineNumber":101,"author":{"gitId":"branzuelajohn"},"content":"     * Prints the task marked as done."},{"lineNumber":102,"author":{"gitId":"branzuelajohn"},"content":"     * @param task The task to be marked as done."},{"lineNumber":103,"author":{"gitId":"branzuelajohn"},"content":"     * @return The string to be printed."},{"lineNumber":104,"author":{"gitId":"branzuelajohn"},"content":"     */"},{"lineNumber":105,"author":{"gitId":"branzuelajohn"},"content":"    public String showTaskDone(Task task) {"},{"lineNumber":106,"author":{"gitId":"branzuelajohn"},"content":"        return \"Nice! I\u0027ve marked this task as done: \\n\" + task.toString();"},{"lineNumber":107,"author":{"gitId":"branzuelajohn"},"content":"    }"},{"lineNumber":108,"author":{"gitId":"branzuelajohn"},"content":""},{"lineNumber":109,"author":{"gitId":"branzuelajohn"},"content":"    /**"},{"lineNumber":110,"author":{"gitId":"branzuelajohn"},"content":"     * Prints the task to be removed."},{"lineNumber":111,"author":{"gitId":"branzuelajohn"},"content":"     * @param task The task to be removed."},{"lineNumber":112,"author":{"gitId":"branzuelajohn"},"content":"     * @return The string to be printed."},{"lineNumber":113,"author":{"gitId":"branzuelajohn"},"content":"     */"},{"lineNumber":114,"author":{"gitId":"branzuelajohn"},"content":"    public String showTaskRemoved(Task task) {"},{"lineNumber":115,"author":{"gitId":"branzuelajohn"},"content":"        return \"Noted. I\u0027ve removed this task: \\n\" + task.toString();"},{"lineNumber":116,"author":{"gitId":"branzuelajohn"},"content":""},{"lineNumber":117,"author":{"gitId":"branzuelajohn"},"content":"    }"},{"lineNumber":118,"author":{"gitId":"branzuelajohn"},"content":""},{"lineNumber":119,"author":{"gitId":"branzuelajohn"},"content":"    /**"},{"lineNumber":120,"author":{"gitId":"branzuelajohn"},"content":"     * Prints out bye message."},{"lineNumber":121,"author":{"gitId":"branzuelajohn"},"content":"     * @return The string to be printed."},{"lineNumber":122,"author":{"gitId":"branzuelajohn"},"content":"     */"},{"lineNumber":123,"author":{"gitId":"branzuelajohn"},"content":"    public String showBye() {"},{"lineNumber":124,"author":{"gitId":"branzuelajohn"},"content":"        return \"    Bye. Hope to see you again soon!\";"},{"lineNumber":125,"author":{"gitId":"branzuelajohn"},"content":"    }"},{"lineNumber":126,"author":{"gitId":"branzuelajohn"},"content":""},{"lineNumber":127,"author":{"gitId":"branzuelajohn"},"content":"    /**"},{"lineNumber":128,"author":{"gitId":"branzuelajohn"},"content":"     * Prints out tasks found from find command."},{"lineNumber":129,"author":{"gitId":"branzuelajohn"},"content":"     * @return The string to be printed."},{"lineNumber":130,"author":{"gitId":"branzuelajohn"},"content":"     */"},{"lineNumber":131,"author":{"gitId":"branzuelajohn"},"content":"    public String showFoundTasks() {"},{"lineNumber":132,"author":{"gitId":"branzuelajohn"},"content":"        return \"    Here are the matching tasks in your list:\";"},{"lineNumber":133,"author":{"gitId":"branzuelajohn"},"content":"    }"},{"lineNumber":134,"author":{"gitId":"branzuelajohn"},"content":""},{"lineNumber":135,"author":{"gitId":"branzuelajohn"},"content":"    /**"},{"lineNumber":136,"author":{"gitId":"branzuelajohn"},"content":"     * Prints out the help reply"},{"lineNumber":137,"author":{"gitId":"branzuelajohn"},"content":"     * @return The string to be printed."},{"lineNumber":138,"author":{"gitId":"branzuelajohn"},"content":"     */"},{"lineNumber":139,"author":{"gitId":"branzuelajohn"},"content":"    public String showHelpReply() {"},{"lineNumber":140,"author":{"gitId":"branzuelajohn"},"content":"        StringBuilder sb \u003d new StringBuilder(\"[\");"},{"lineNumber":141,"author":{"gitId":"branzuelajohn"},"content":"        for (String command : Ui.COMMANDS) {"},{"lineNumber":142,"author":{"gitId":"branzuelajohn"},"content":"            sb.append(String.format(\"%s \", command));"},{"lineNumber":143,"author":{"gitId":"branzuelajohn"},"content":"        }"},{"lineNumber":144,"author":{"gitId":"branzuelajohn"},"content":"        // Deletes whitespace in the last character and adds \u0027]\u0027 to StringBuilder"},{"lineNumber":145,"author":{"gitId":"branzuelajohn"},"content":"        sb.setLength(sb.length() - 1);"},{"lineNumber":146,"author":{"gitId":"branzuelajohn"},"content":"        sb.append(\"]\");"},{"lineNumber":147,"author":{"gitId":"branzuelajohn"},"content":""},{"lineNumber":148,"author":{"gitId":"branzuelajohn"},"content":"        StringBuilder reply \u003d new StringBuilder();"},{"lineNumber":149,"author":{"gitId":"branzuelajohn"},"content":"        String[] commandsToAdd \u003d {Ui.HELP_INTRO, sb.toString().trim() , Ui.LIST_HELP, Ui.BYE_HELP, Ui.TODO_HELP,"},{"lineNumber":150,"author":{"gitId":"branzuelajohn"},"content":"            Ui.DEADLINE_HELP, Ui.EVENT_HELP, Ui.DONE_HELP, Ui.FIND_HELP, Ui.DELETE_HELP};"},{"lineNumber":151,"author":{"gitId":"branzuelajohn"},"content":"        for (String message : commandsToAdd) {"},{"lineNumber":152,"author":{"gitId":"branzuelajohn"},"content":"            reply.append(message).append(\"\\n\");"},{"lineNumber":153,"author":{"gitId":"branzuelajohn"},"content":"        }"},{"lineNumber":154,"author":{"gitId":"branzuelajohn"},"content":"        return reply.toString().trim();"},{"lineNumber":155,"author":{"gitId":"branzuelajohn"},"content":"    }"},{"lineNumber":156,"author":{"gitId":"branzuelajohn"},"content":""},{"lineNumber":157,"author":{"gitId":"branzuelajohn"},"content":"    public Scanner getSc() {"},{"lineNumber":158,"author":{"gitId":"branzuelajohn"},"content":"        return this.sc;"},{"lineNumber":159,"author":{"gitId":"branzuelajohn"},"content":"    }"},{"lineNumber":160,"author":{"gitId":"branzuelajohn"},"content":""},{"lineNumber":161,"author":{"gitId":"branzuelajohn"},"content":"}"}],"authorContributionMap":{"branzuelajohn":161}},{"path":"src/main/java/duke/command/ByeCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"branzuelajohn"},"content":"package duke.command;"},{"lineNumber":2,"author":{"gitId":"branzuelajohn"},"content":""},{"lineNumber":3,"author":{"gitId":"branzuelajohn"},"content":"import duke.Storage;"},{"lineNumber":4,"author":{"gitId":"branzuelajohn"},"content":"import duke.Ui;"},{"lineNumber":5,"author":{"gitId":"branzuelajohn"},"content":"import duke.tasks.TaskList;"},{"lineNumber":6,"author":{"gitId":"branzuelajohn"},"content":""},{"lineNumber":7,"author":{"gitId":"branzuelajohn"},"content":"public class ByeCommand extends Command {"},{"lineNumber":8,"author":{"gitId":"branzuelajohn"},"content":"    public static final boolean IS_EXIT \u003d true;"},{"lineNumber":9,"author":{"gitId":"branzuelajohn"},"content":""},{"lineNumber":10,"author":{"gitId":"branzuelajohn"},"content":"    /**"},{"lineNumber":11,"author":{"gitId":"branzuelajohn"},"content":"     * Constructor method"},{"lineNumber":12,"author":{"gitId":"branzuelajohn"},"content":"     */"},{"lineNumber":13,"author":{"gitId":"branzuelajohn"},"content":"    public ByeCommand() {"},{"lineNumber":14,"author":{"gitId":"branzuelajohn"},"content":"        super(IS_EXIT);"},{"lineNumber":15,"author":{"gitId":"branzuelajohn"},"content":"    }"},{"lineNumber":16,"author":{"gitId":"branzuelajohn"},"content":""},{"lineNumber":17,"author":{"gitId":"branzuelajohn"},"content":"    /**"},{"lineNumber":18,"author":{"gitId":"branzuelajohn"},"content":"     * Execute method for ByeCommand"},{"lineNumber":19,"author":{"gitId":"branzuelajohn"},"content":"     * Prints bye message and exits the bot."},{"lineNumber":20,"author":{"gitId":"branzuelajohn"},"content":"     * @param tasks The tasks in the TaskList."},{"lineNumber":21,"author":{"gitId":"branzuelajohn"},"content":"     * @param ui Standard UI object."},{"lineNumber":22,"author":{"gitId":"branzuelajohn"},"content":"     * @param storage Standard storage object."},{"lineNumber":23,"author":{"gitId":"branzuelajohn"},"content":"     * @return the line to print."},{"lineNumber":24,"author":{"gitId":"branzuelajohn"},"content":"     */"},{"lineNumber":25,"author":{"gitId":"branzuelajohn"},"content":"    @Override"},{"lineNumber":26,"author":{"gitId":"branzuelajohn"},"content":"    public String execute(TaskList tasks, Ui ui, Storage storage) {"},{"lineNumber":27,"author":{"gitId":"branzuelajohn"},"content":"        return ui.showBye();"},{"lineNumber":28,"author":{"gitId":"branzuelajohn"},"content":"    }"},{"lineNumber":29,"author":{"gitId":"branzuelajohn"},"content":"}"},{"lineNumber":30,"author":{"gitId":"branzuelajohn"},"content":""}],"authorContributionMap":{"branzuelajohn":30}},{"path":"src/main/java/duke/command/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"branzuelajohn"},"content":"package duke.command;"},{"lineNumber":2,"author":{"gitId":"branzuelajohn"},"content":""},{"lineNumber":3,"author":{"gitId":"branzuelajohn"},"content":"import duke.DukeException;"},{"lineNumber":4,"author":{"gitId":"branzuelajohn"},"content":"import duke.Storage;"},{"lineNumber":5,"author":{"gitId":"branzuelajohn"},"content":"import duke.Ui;"},{"lineNumber":6,"author":{"gitId":"branzuelajohn"},"content":"import duke.tasks.TaskList;"},{"lineNumber":7,"author":{"gitId":"branzuelajohn"},"content":""},{"lineNumber":8,"author":{"gitId":"branzuelajohn"},"content":"/**"},{"lineNumber":9,"author":{"gitId":"branzuelajohn"},"content":" * Abstract command class"},{"lineNumber":10,"author":{"gitId":"branzuelajohn"},"content":" */"},{"lineNumber":11,"author":{"gitId":"branzuelajohn"},"content":"public abstract class Command {"},{"lineNumber":12,"author":{"gitId":"branzuelajohn"},"content":""},{"lineNumber":13,"author":{"gitId":"branzuelajohn"},"content":"    /**"},{"lineNumber":14,"author":{"gitId":"branzuelajohn"},"content":"     * Boolean value for whether the task is an exit command."},{"lineNumber":15,"author":{"gitId":"branzuelajohn"},"content":"     */"},{"lineNumber":16,"author":{"gitId":"branzuelajohn"},"content":"    protected boolean isExit;"},{"lineNumber":17,"author":{"gitId":"branzuelajohn"},"content":""},{"lineNumber":18,"author":{"gitId":"branzuelajohn"},"content":"    /**"},{"lineNumber":19,"author":{"gitId":"branzuelajohn"},"content":"     * Constructor method for command class."},{"lineNumber":20,"author":{"gitId":"branzuelajohn"},"content":"     * @param isExit The boolean value for whether the task is an exit command."},{"lineNumber":21,"author":{"gitId":"branzuelajohn"},"content":"     */"},{"lineNumber":22,"author":{"gitId":"branzuelajohn"},"content":"    public Command(boolean isExit) {"},{"lineNumber":23,"author":{"gitId":"branzuelajohn"},"content":"        this.isExit \u003d isExit;"},{"lineNumber":24,"author":{"gitId":"branzuelajohn"},"content":"    }"},{"lineNumber":25,"author":{"gitId":"branzuelajohn"},"content":""},{"lineNumber":26,"author":{"gitId":"branzuelajohn"},"content":"    /**"},{"lineNumber":27,"author":{"gitId":"branzuelajohn"},"content":"     * Abstract execute method"},{"lineNumber":28,"author":{"gitId":"branzuelajohn"},"content":"     * @param tasks The tasks in the TaskList."},{"lineNumber":29,"author":{"gitId":"branzuelajohn"},"content":"     * @param ui Standard UI object"},{"lineNumber":30,"author":{"gitId":"branzuelajohn"},"content":"     * @param storage Standard storage object"},{"lineNumber":31,"author":{"gitId":"branzuelajohn"},"content":"     * @return the line to print."},{"lineNumber":32,"author":{"gitId":"branzuelajohn"},"content":"     * @throws DukeException if exception is thrown."},{"lineNumber":33,"author":{"gitId":"branzuelajohn"},"content":"     */"},{"lineNumber":34,"author":{"gitId":"branzuelajohn"},"content":"    public abstract String execute(TaskList tasks, Ui ui, Storage storage) throws DukeException;"},{"lineNumber":35,"author":{"gitId":"branzuelajohn"},"content":""},{"lineNumber":36,"author":{"gitId":"branzuelajohn"},"content":"    public boolean isExit() {"},{"lineNumber":37,"author":{"gitId":"branzuelajohn"},"content":"        return isExit;"},{"lineNumber":38,"author":{"gitId":"branzuelajohn"},"content":"    }"},{"lineNumber":39,"author":{"gitId":"branzuelajohn"},"content":""},{"lineNumber":40,"author":{"gitId":"branzuelajohn"},"content":"}"}],"authorContributionMap":{"branzuelajohn":40}},{"path":"src/main/java/duke/command/DeadlineCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"branzuelajohn"},"content":"package duke.command;"},{"lineNumber":2,"author":{"gitId":"branzuelajohn"},"content":""},{"lineNumber":3,"author":{"gitId":"branzuelajohn"},"content":"import duke.DukeException;"},{"lineNumber":4,"author":{"gitId":"branzuelajohn"},"content":"import duke.Storage;"},{"lineNumber":5,"author":{"gitId":"branzuelajohn"},"content":"import duke.Ui;"},{"lineNumber":6,"author":{"gitId":"branzuelajohn"},"content":"import duke.tasks.Deadline;"},{"lineNumber":7,"author":{"gitId":"branzuelajohn"},"content":"import duke.tasks.TaskList;"},{"lineNumber":8,"author":{"gitId":"branzuelajohn"},"content":""},{"lineNumber":9,"author":{"gitId":"branzuelajohn"},"content":"/**"},{"lineNumber":10,"author":{"gitId":"branzuelajohn"},"content":" * Command to create a deadline task."},{"lineNumber":11,"author":{"gitId":"branzuelajohn"},"content":" */"},{"lineNumber":12,"author":{"gitId":"branzuelajohn"},"content":"public class DeadlineCommand extends Command {"},{"lineNumber":13,"author":{"gitId":"branzuelajohn"},"content":"    public static final boolean IS_EXIT \u003d false;"},{"lineNumber":14,"author":{"gitId":"branzuelajohn"},"content":"    protected String input;"},{"lineNumber":15,"author":{"gitId":"branzuelajohn"},"content":""},{"lineNumber":16,"author":{"gitId":"branzuelajohn"},"content":"    /**"},{"lineNumber":17,"author":{"gitId":"branzuelajohn"},"content":"     * Constructor method"},{"lineNumber":18,"author":{"gitId":"branzuelajohn"},"content":"     * @param input The user input command."},{"lineNumber":19,"author":{"gitId":"branzuelajohn"},"content":"     */"},{"lineNumber":20,"author":{"gitId":"branzuelajohn"},"content":"    public DeadlineCommand(String input) {"},{"lineNumber":21,"author":{"gitId":"branzuelajohn"},"content":"        super(IS_EXIT);"},{"lineNumber":22,"author":{"gitId":"branzuelajohn"},"content":"        this.input \u003d input;"},{"lineNumber":23,"author":{"gitId":"branzuelajohn"},"content":"    }"},{"lineNumber":24,"author":{"gitId":"branzuelajohn"},"content":""},{"lineNumber":25,"author":{"gitId":"branzuelajohn"},"content":"    /**"},{"lineNumber":26,"author":{"gitId":"branzuelajohn"},"content":"     * The execute method for deadline."},{"lineNumber":27,"author":{"gitId":"branzuelajohn"},"content":"     * @param tasks The tasks in the TaskList."},{"lineNumber":28,"author":{"gitId":"branzuelajohn"},"content":"     * @param ui Standard UI object."},{"lineNumber":29,"author":{"gitId":"branzuelajohn"},"content":"     * @param storage Standard storage object."},{"lineNumber":30,"author":{"gitId":"branzuelajohn"},"content":"     * @return the line to print."},{"lineNumber":31,"author":{"gitId":"branzuelajohn"},"content":"     * @throws DukeException if the deadline command is missing a description or the user input is invalid."},{"lineNumber":32,"author":{"gitId":"branzuelajohn"},"content":"     */"},{"lineNumber":33,"author":{"gitId":"branzuelajohn"},"content":"    @Override"},{"lineNumber":34,"author":{"gitId":"branzuelajohn"},"content":"    public String execute(TaskList tasks, Ui ui, Storage storage) throws DukeException {"},{"lineNumber":35,"author":{"gitId":"branzuelajohn"},"content":"        if (input.length() \u003c\u003d 9 || !input.contains(\"/by\")) {"},{"lineNumber":36,"author":{"gitId":"branzuelajohn"},"content":"            throw new DukeException(\"☹ OOPS!!! The description of a deadline cannot be empty.\");"},{"lineNumber":37,"author":{"gitId":"branzuelajohn"},"content":"        }"},{"lineNumber":38,"author":{"gitId":"branzuelajohn"},"content":"        String[] strArr \u003d input.split(\"/by \");"},{"lineNumber":39,"author":{"gitId":"branzuelajohn"},"content":"        String description \u003d strArr[0].substring(9).trim();"},{"lineNumber":40,"author":{"gitId":"branzuelajohn"},"content":"        String by \u003d strArr[1];"},{"lineNumber":41,"author":{"gitId":"branzuelajohn"},"content":"        Deadline d \u003d new Deadline(description, by);"},{"lineNumber":42,"author":{"gitId":"branzuelajohn"},"content":"        tasks.addTask(d);"},{"lineNumber":43,"author":{"gitId":"branzuelajohn"},"content":"        storage.addNewDataToFile(\"D\", \"0\", d.getDescription(), d.getBy());"},{"lineNumber":44,"author":{"gitId":"branzuelajohn"},"content":"        StringBuilder sb \u003d new StringBuilder(ui.showTaskAdded(d) + \"\\n\" + ui.showNoOfItems(tasks));"},{"lineNumber":45,"author":{"gitId":"branzuelajohn"},"content":"        return sb.toString();"},{"lineNumber":46,"author":{"gitId":"branzuelajohn"},"content":"    }"},{"lineNumber":47,"author":{"gitId":"branzuelajohn"},"content":"}"}],"authorContributionMap":{"branzuelajohn":47}},{"path":"src/main/java/duke/command/DeleteCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"branzuelajohn"},"content":"package duke.command;"},{"lineNumber":2,"author":{"gitId":"branzuelajohn"},"content":""},{"lineNumber":3,"author":{"gitId":"branzuelajohn"},"content":"import duke.DukeException;"},{"lineNumber":4,"author":{"gitId":"branzuelajohn"},"content":"import duke.Storage;"},{"lineNumber":5,"author":{"gitId":"branzuelajohn"},"content":"import duke.Ui;"},{"lineNumber":6,"author":{"gitId":"branzuelajohn"},"content":"import duke.tasks.Task;"},{"lineNumber":7,"author":{"gitId":"branzuelajohn"},"content":"import duke.tasks.TaskList;"},{"lineNumber":8,"author":{"gitId":"branzuelajohn"},"content":""},{"lineNumber":9,"author":{"gitId":"branzuelajohn"},"content":"/**"},{"lineNumber":10,"author":{"gitId":"branzuelajohn"},"content":" * Command to delete a task"},{"lineNumber":11,"author":{"gitId":"branzuelajohn"},"content":" */"},{"lineNumber":12,"author":{"gitId":"branzuelajohn"},"content":"public class DeleteCommand extends Command {"},{"lineNumber":13,"author":{"gitId":"branzuelajohn"},"content":"    public static final boolean IS_EXIT \u003d false;"},{"lineNumber":14,"author":{"gitId":"branzuelajohn"},"content":"    protected String input;"},{"lineNumber":15,"author":{"gitId":"branzuelajohn"},"content":""},{"lineNumber":16,"author":{"gitId":"branzuelajohn"},"content":"    /**"},{"lineNumber":17,"author":{"gitId":"branzuelajohn"},"content":"     * Constructor method"},{"lineNumber":18,"author":{"gitId":"branzuelajohn"},"content":"     * @param input The input command from the user."},{"lineNumber":19,"author":{"gitId":"branzuelajohn"},"content":"     */"},{"lineNumber":20,"author":{"gitId":"branzuelajohn"},"content":"    public DeleteCommand(String input) {"},{"lineNumber":21,"author":{"gitId":"branzuelajohn"},"content":"        super(IS_EXIT);"},{"lineNumber":22,"author":{"gitId":"branzuelajohn"},"content":"        this.input \u003d input;"},{"lineNumber":23,"author":{"gitId":"branzuelajohn"},"content":"    }"},{"lineNumber":24,"author":{"gitId":"branzuelajohn"},"content":""},{"lineNumber":25,"author":{"gitId":"branzuelajohn"},"content":"    /**"},{"lineNumber":26,"author":{"gitId":"branzuelajohn"},"content":"     * Executes a delete command."},{"lineNumber":27,"author":{"gitId":"branzuelajohn"},"content":"     * Deletes a task from the list of tasks."},{"lineNumber":28,"author":{"gitId":"branzuelajohn"},"content":"     * @param tasks The tasks in the TaskList."},{"lineNumber":29,"author":{"gitId":"branzuelajohn"},"content":"     * @param ui Standard UI object."},{"lineNumber":30,"author":{"gitId":"branzuelajohn"},"content":"     * @param storage Standard storage object."},{"lineNumber":31,"author":{"gitId":"branzuelajohn"},"content":"     * @return the line to print."},{"lineNumber":32,"author":{"gitId":"branzuelajohn"},"content":"     * @throws DukeException if delete command is missing a number/description."},{"lineNumber":33,"author":{"gitId":"branzuelajohn"},"content":"     */"},{"lineNumber":34,"author":{"gitId":"branzuelajohn"},"content":"    @Override"},{"lineNumber":35,"author":{"gitId":"branzuelajohn"},"content":"    public String execute(TaskList tasks, Ui ui, Storage storage) throws DukeException {"},{"lineNumber":36,"author":{"gitId":"branzuelajohn"},"content":"        String[] strArr \u003d input.split(\" \");"},{"lineNumber":37,"author":{"gitId":"branzuelajohn"},"content":"        if (strArr.length \u003d\u003d 1) {"},{"lineNumber":38,"author":{"gitId":"branzuelajohn"},"content":"            throw new DukeException(\"☹ OOPS!!! I don\u0027t know which task to delete.\");"},{"lineNumber":39,"author":{"gitId":"branzuelajohn"},"content":"        }"},{"lineNumber":40,"author":{"gitId":"branzuelajohn"},"content":"        int idx \u003d Integer.parseInt(strArr[1]) - 1;"},{"lineNumber":41,"author":{"gitId":"branzuelajohn"},"content":"        Task t \u003d tasks.removeTask(idx);"},{"lineNumber":42,"author":{"gitId":"branzuelajohn"},"content":"        storage.removeDataInFile(idx + 1, tasks.getSize());"},{"lineNumber":43,"author":{"gitId":"branzuelajohn"},"content":"        StringBuilder toPrint \u003d new StringBuilder(ui.showTaskRemoved(t) + \"\\n\" + ui.showNoOfItems(tasks));"},{"lineNumber":44,"author":{"gitId":"branzuelajohn"},"content":"        return toPrint.toString();"},{"lineNumber":45,"author":{"gitId":"branzuelajohn"},"content":"    }"},{"lineNumber":46,"author":{"gitId":"branzuelajohn"},"content":"}"}],"authorContributionMap":{"branzuelajohn":46}},{"path":"src/main/java/duke/command/DoneCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"branzuelajohn"},"content":"package duke.command;"},{"lineNumber":2,"author":{"gitId":"branzuelajohn"},"content":""},{"lineNumber":3,"author":{"gitId":"branzuelajohn"},"content":"import duke.DukeException;"},{"lineNumber":4,"author":{"gitId":"branzuelajohn"},"content":"import duke.Storage;"},{"lineNumber":5,"author":{"gitId":"branzuelajohn"},"content":"import duke.Ui;"},{"lineNumber":6,"author":{"gitId":"branzuelajohn"},"content":"import duke.tasks.Deadline;"},{"lineNumber":7,"author":{"gitId":"branzuelajohn"},"content":"import duke.tasks.Event;"},{"lineNumber":8,"author":{"gitId":"branzuelajohn"},"content":"import duke.tasks.Task;"},{"lineNumber":9,"author":{"gitId":"branzuelajohn"},"content":"import duke.tasks.TaskList;"},{"lineNumber":10,"author":{"gitId":"branzuelajohn"},"content":""},{"lineNumber":11,"author":{"gitId":"branzuelajohn"},"content":"/**"},{"lineNumber":12,"author":{"gitId":"branzuelajohn"},"content":" * Command to mark a task as done."},{"lineNumber":13,"author":{"gitId":"branzuelajohn"},"content":" */"},{"lineNumber":14,"author":{"gitId":"branzuelajohn"},"content":"public class DoneCommand extends Command {"},{"lineNumber":15,"author":{"gitId":"branzuelajohn"},"content":"    public static final boolean IS_EXIT \u003d false;"},{"lineNumber":16,"author":{"gitId":"branzuelajohn"},"content":"    protected String input;"},{"lineNumber":17,"author":{"gitId":"branzuelajohn"},"content":""},{"lineNumber":18,"author":{"gitId":"branzuelajohn"},"content":"    /**"},{"lineNumber":19,"author":{"gitId":"branzuelajohn"},"content":"     * Constructor method"},{"lineNumber":20,"author":{"gitId":"branzuelajohn"},"content":"     * @param input The input command from the user."},{"lineNumber":21,"author":{"gitId":"branzuelajohn"},"content":"     */"},{"lineNumber":22,"author":{"gitId":"branzuelajohn"},"content":"    public DoneCommand(String input) {"},{"lineNumber":23,"author":{"gitId":"branzuelajohn"},"content":"        super(IS_EXIT);"},{"lineNumber":24,"author":{"gitId":"branzuelajohn"},"content":"        this.input \u003d input;"},{"lineNumber":25,"author":{"gitId":"branzuelajohn"},"content":"    }"},{"lineNumber":26,"author":{"gitId":"branzuelajohn"},"content":""},{"lineNumber":27,"author":{"gitId":"branzuelajohn"},"content":"    /**"},{"lineNumber":28,"author":{"gitId":"branzuelajohn"},"content":"     * Executes a done command."},{"lineNumber":29,"author":{"gitId":"branzuelajohn"},"content":"     * Marks a task as done from the list of tasks."},{"lineNumber":30,"author":{"gitId":"branzuelajohn"},"content":"     * @param tasks The tasks in the TaskList."},{"lineNumber":31,"author":{"gitId":"branzuelajohn"},"content":"     * @param ui Standard UI object."},{"lineNumber":32,"author":{"gitId":"branzuelajohn"},"content":"     * @param storage Standard storage object."},{"lineNumber":33,"author":{"gitId":"branzuelajohn"},"content":"     * @return the line to print."},{"lineNumber":34,"author":{"gitId":"branzuelajohn"},"content":"     * @throws DukeException is thrown if the description is missing or the input is invalid."},{"lineNumber":35,"author":{"gitId":"branzuelajohn"},"content":"     */"},{"lineNumber":36,"author":{"gitId":"branzuelajohn"},"content":"    @Override"},{"lineNumber":37,"author":{"gitId":"branzuelajohn"},"content":"    public String execute(TaskList tasks, Ui ui, Storage storage) throws DukeException {"},{"lineNumber":38,"author":{"gitId":"branzuelajohn"},"content":"        String[] array \u003d input.split(\" \");"},{"lineNumber":39,"author":{"gitId":"branzuelajohn"},"content":"        if (array.length \u003d\u003d 1) {"},{"lineNumber":40,"author":{"gitId":"branzuelajohn"},"content":"            throw new DukeException(\"☹ OOPS!!! I don\u0027t know which task to mark as done.\");"},{"lineNumber":41,"author":{"gitId":"branzuelajohn"},"content":"        }"},{"lineNumber":42,"author":{"gitId":"branzuelajohn"},"content":"        if (tasks.getSize() \u003d\u003d 0) {"},{"lineNumber":43,"author":{"gitId":"branzuelajohn"},"content":"            throw new DukeException(\"☹ OOPS!!! There are no tasks to be marked as done.\");"},{"lineNumber":44,"author":{"gitId":"branzuelajohn"},"content":"        }"},{"lineNumber":45,"author":{"gitId":"branzuelajohn"},"content":"        if (Integer.parseInt(array[1]) \u003e tasks.getSize()) {"},{"lineNumber":46,"author":{"gitId":"branzuelajohn"},"content":"            throw new DukeException(\"☹ OOPS!!! There is no such task to be marked as done.\");"},{"lineNumber":47,"author":{"gitId":"branzuelajohn"},"content":"        }"},{"lineNumber":48,"author":{"gitId":"branzuelajohn"},"content":""},{"lineNumber":49,"author":{"gitId":"branzuelajohn"},"content":"        int idx \u003d Integer.parseInt(array[1]) - 1;"},{"lineNumber":50,"author":{"gitId":"branzuelajohn"},"content":"        Task t \u003d tasks.getTask(idx);"},{"lineNumber":51,"author":{"gitId":"branzuelajohn"},"content":"        t.markAsDone();"},{"lineNumber":52,"author":{"gitId":"branzuelajohn"},"content":"        String taskType \u003d t.getType();"},{"lineNumber":53,"author":{"gitId":"branzuelajohn"},"content":""},{"lineNumber":54,"author":{"gitId":"branzuelajohn"},"content":"        switch(taskType) {"},{"lineNumber":55,"author":{"gitId":"branzuelajohn"},"content":"        case \"D\":"},{"lineNumber":56,"author":{"gitId":"branzuelajohn"},"content":"            Deadline d \u003d (Deadline) t;"},{"lineNumber":57,"author":{"gitId":"branzuelajohn"},"content":"            storage.editDataInFile(idx + 1, t.getType(), \"1\", t.getDescription(),"},{"lineNumber":58,"author":{"gitId":"branzuelajohn"},"content":"                    d.getBy(), tasks.getSize());"},{"lineNumber":59,"author":{"gitId":"branzuelajohn"},"content":"            break;"},{"lineNumber":60,"author":{"gitId":"branzuelajohn"},"content":"        case \"T\":"},{"lineNumber":61,"author":{"gitId":"branzuelajohn"},"content":"            storage.editDataInFile(idx + 1, t.getType(), \"1\", t.getDescription(),"},{"lineNumber":62,"author":{"gitId":"branzuelajohn"},"content":"                    \"\", tasks.getSize());"},{"lineNumber":63,"author":{"gitId":"branzuelajohn"},"content":"            break;"},{"lineNumber":64,"author":{"gitId":"branzuelajohn"},"content":""},{"lineNumber":65,"author":{"gitId":"branzuelajohn"},"content":"        case \"E\":"},{"lineNumber":66,"author":{"gitId":"branzuelajohn"},"content":"            Event e \u003d (Event) t;"},{"lineNumber":67,"author":{"gitId":"branzuelajohn"},"content":"            storage.editDataInFile(idx + 1, t.getType(), \"1\", t.getDescription(),"},{"lineNumber":68,"author":{"gitId":"branzuelajohn"},"content":"                    e.getDate(), tasks.getSize());"},{"lineNumber":69,"author":{"gitId":"branzuelajohn"},"content":"            break;"},{"lineNumber":70,"author":{"gitId":"branzuelajohn"},"content":"        default:"},{"lineNumber":71,"author":{"gitId":"branzuelajohn"},"content":"            throw new DukeException(\"Type cannot be determined\");"},{"lineNumber":72,"author":{"gitId":"branzuelajohn"},"content":""},{"lineNumber":73,"author":{"gitId":"branzuelajohn"},"content":"        }"},{"lineNumber":74,"author":{"gitId":"branzuelajohn"},"content":"        return ui.showTaskDone(t);"},{"lineNumber":75,"author":{"gitId":"branzuelajohn"},"content":"    }"},{"lineNumber":76,"author":{"gitId":"branzuelajohn"},"content":"}"}],"authorContributionMap":{"branzuelajohn":76}},{"path":"src/main/java/duke/command/EventCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"branzuelajohn"},"content":"package duke.command;"},{"lineNumber":2,"author":{"gitId":"branzuelajohn"},"content":""},{"lineNumber":3,"author":{"gitId":"branzuelajohn"},"content":"import duke.DukeException;"},{"lineNumber":4,"author":{"gitId":"branzuelajohn"},"content":"import duke.Storage;"},{"lineNumber":5,"author":{"gitId":"branzuelajohn"},"content":"import duke.Ui;"},{"lineNumber":6,"author":{"gitId":"branzuelajohn"},"content":"import duke.tasks.Event;"},{"lineNumber":7,"author":{"gitId":"branzuelajohn"},"content":"import duke.tasks.TaskList;"},{"lineNumber":8,"author":{"gitId":"branzuelajohn"},"content":""},{"lineNumber":9,"author":{"gitId":"branzuelajohn"},"content":"/**"},{"lineNumber":10,"author":{"gitId":"branzuelajohn"},"content":" * Command to create an event"},{"lineNumber":11,"author":{"gitId":"branzuelajohn"},"content":" */"},{"lineNumber":12,"author":{"gitId":"branzuelajohn"},"content":"public class EventCommand extends Command {"},{"lineNumber":13,"author":{"gitId":"branzuelajohn"},"content":"    public static final boolean IS_EXIT \u003d false;"},{"lineNumber":14,"author":{"gitId":"branzuelajohn"},"content":"    protected String input;"},{"lineNumber":15,"author":{"gitId":"branzuelajohn"},"content":""},{"lineNumber":16,"author":{"gitId":"branzuelajohn"},"content":"    /**"},{"lineNumber":17,"author":{"gitId":"branzuelajohn"},"content":"     * Constructor method"},{"lineNumber":18,"author":{"gitId":"branzuelajohn"},"content":"     * @param input The input command from the user."},{"lineNumber":19,"author":{"gitId":"branzuelajohn"},"content":"     */"},{"lineNumber":20,"author":{"gitId":"branzuelajohn"},"content":"    public EventCommand(String input) {"},{"lineNumber":21,"author":{"gitId":"branzuelajohn"},"content":"        super(IS_EXIT);"},{"lineNumber":22,"author":{"gitId":"branzuelajohn"},"content":"        this.input \u003d input;"},{"lineNumber":23,"author":{"gitId":"branzuelajohn"},"content":"    }"},{"lineNumber":24,"author":{"gitId":"branzuelajohn"},"content":""},{"lineNumber":25,"author":{"gitId":"branzuelajohn"},"content":"    /**"},{"lineNumber":26,"author":{"gitId":"branzuelajohn"},"content":"     * Execute command for event command."},{"lineNumber":27,"author":{"gitId":"branzuelajohn"},"content":"     * @param tasks The tasks in the TaskList."},{"lineNumber":28,"author":{"gitId":"branzuelajohn"},"content":"     * @param ui Standard UI object."},{"lineNumber":29,"author":{"gitId":"branzuelajohn"},"content":"     * @param storage Standard storage object."},{"lineNumber":30,"author":{"gitId":"branzuelajohn"},"content":"     * @return the line to print."},{"lineNumber":31,"author":{"gitId":"branzuelajohn"},"content":"     * @throws DukeException if the event command is missing description or the user input is invalid."},{"lineNumber":32,"author":{"gitId":"branzuelajohn"},"content":"     */"},{"lineNumber":33,"author":{"gitId":"branzuelajohn"},"content":"    @Override"},{"lineNumber":34,"author":{"gitId":"branzuelajohn"},"content":"    public String execute(TaskList tasks, Ui ui, Storage storage) throws DukeException {"},{"lineNumber":35,"author":{"gitId":"branzuelajohn"},"content":"        if (input.length() \u003c\u003d 6 || !input.contains(\"/at\")) {"},{"lineNumber":36,"author":{"gitId":"branzuelajohn"},"content":"            throw new DukeException(\"☹ OOPS!!! The description of an event cannot be empty\");"},{"lineNumber":37,"author":{"gitId":"branzuelajohn"},"content":"        }"},{"lineNumber":38,"author":{"gitId":"branzuelajohn"},"content":"        String[] strArr \u003d input.split(\"/at \");"},{"lineNumber":39,"author":{"gitId":"branzuelajohn"},"content":"        String description \u003d strArr[0].substring(6).trim();"},{"lineNumber":40,"author":{"gitId":"branzuelajohn"},"content":"        String date \u003d strArr[1];"},{"lineNumber":41,"author":{"gitId":"branzuelajohn"},"content":"        Event e \u003d new Event(description, date);"},{"lineNumber":42,"author":{"gitId":"branzuelajohn"},"content":"        tasks.addTask(e);"},{"lineNumber":43,"author":{"gitId":"branzuelajohn"},"content":"        storage.addNewDataToFile(\"E\", \"0\", e.getDescription(), e.getDate());"},{"lineNumber":44,"author":{"gitId":"branzuelajohn"},"content":"        StringBuilder sb \u003d new StringBuilder(ui.showTaskAdded(e) + ui.showNoOfItems(tasks));"},{"lineNumber":45,"author":{"gitId":"branzuelajohn"},"content":"        return sb.toString();"},{"lineNumber":46,"author":{"gitId":"branzuelajohn"},"content":"    }"},{"lineNumber":47,"author":{"gitId":"branzuelajohn"},"content":"}"}],"authorContributionMap":{"branzuelajohn":47}},{"path":"src/main/java/duke/command/FindCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"branzuelajohn"},"content":"package duke.command;"},{"lineNumber":2,"author":{"gitId":"branzuelajohn"},"content":""},{"lineNumber":3,"author":{"gitId":"branzuelajohn"},"content":"import duke.DukeException;"},{"lineNumber":4,"author":{"gitId":"branzuelajohn"},"content":"import duke.Storage;"},{"lineNumber":5,"author":{"gitId":"branzuelajohn"},"content":"import duke.Ui;"},{"lineNumber":6,"author":{"gitId":"branzuelajohn"},"content":"import duke.tasks.TaskList;"},{"lineNumber":7,"author":{"gitId":"branzuelajohn"},"content":""},{"lineNumber":8,"author":{"gitId":"branzuelajohn"},"content":""},{"lineNumber":9,"author":{"gitId":"branzuelajohn"},"content":"/**"},{"lineNumber":10,"author":{"gitId":"branzuelajohn"},"content":" * Command to find a task."},{"lineNumber":11,"author":{"gitId":"branzuelajohn"},"content":" */"},{"lineNumber":12,"author":{"gitId":"branzuelajohn"},"content":"public class FindCommand extends Command {"},{"lineNumber":13,"author":{"gitId":"branzuelajohn"},"content":"    public static final boolean IS_EXIT \u003d false;"},{"lineNumber":14,"author":{"gitId":"branzuelajohn"},"content":"    protected String input;"},{"lineNumber":15,"author":{"gitId":"branzuelajohn"},"content":""},{"lineNumber":16,"author":{"gitId":"branzuelajohn"},"content":"    /**"},{"lineNumber":17,"author":{"gitId":"branzuelajohn"},"content":"     * Finds a task by searching for a keyword"},{"lineNumber":18,"author":{"gitId":"branzuelajohn"},"content":"     * @param input The input command from the user."},{"lineNumber":19,"author":{"gitId":"branzuelajohn"},"content":"     */"},{"lineNumber":20,"author":{"gitId":"branzuelajohn"},"content":"    public FindCommand(String input) {"},{"lineNumber":21,"author":{"gitId":"branzuelajohn"},"content":"        super(IS_EXIT);"},{"lineNumber":22,"author":{"gitId":"branzuelajohn"},"content":"        this.input \u003d input;"},{"lineNumber":23,"author":{"gitId":"branzuelajohn"},"content":"    }"},{"lineNumber":24,"author":{"gitId":"branzuelajohn"},"content":""},{"lineNumber":25,"author":{"gitId":"branzuelajohn"},"content":"    /**"},{"lineNumber":26,"author":{"gitId":"branzuelajohn"},"content":"     * Executes find command and prints list of tasks that match the command."},{"lineNumber":27,"author":{"gitId":"branzuelajohn"},"content":"     * Tasks shown are numbered in ascending order starting from \"1.\""},{"lineNumber":28,"author":{"gitId":"branzuelajohn"},"content":"     * @param tasks The tasks in the TaskList."},{"lineNumber":29,"author":{"gitId":"branzuelajohn"},"content":"     * @param ui Standard UI object."},{"lineNumber":30,"author":{"gitId":"branzuelajohn"},"content":"     * @param storage Standard storage object."},{"lineNumber":31,"author":{"gitId":"branzuelajohn"},"content":"     * @return String the line to print."},{"lineNumber":32,"author":{"gitId":"branzuelajohn"},"content":"     * @throws DukeException if the user input is invalid."},{"lineNumber":33,"author":{"gitId":"branzuelajohn"},"content":"     */"},{"lineNumber":34,"author":{"gitId":"branzuelajohn"},"content":"    @Override"},{"lineNumber":35,"author":{"gitId":"branzuelajohn"},"content":"    public String execute(TaskList tasks, Ui ui, Storage storage) throws DukeException {"},{"lineNumber":36,"author":{"gitId":"branzuelajohn"},"content":"        String foundTasks \u003d ui.showFoundTasks();"},{"lineNumber":37,"author":{"gitId":"branzuelajohn"},"content":"        StringBuilder sb \u003d new StringBuilder(foundTasks + \" \\n\");"},{"lineNumber":38,"author":{"gitId":"branzuelajohn"},"content":"        String[] strArr \u003d input.split(\" \");"},{"lineNumber":39,"author":{"gitId":"branzuelajohn"},"content":"        int count \u003d 1;"},{"lineNumber":40,"author":{"gitId":"branzuelajohn"},"content":"        for (int i \u003d 0; i \u003c tasks.getSize(); i++) {"},{"lineNumber":41,"author":{"gitId":"branzuelajohn"},"content":"            if (tasks.getTask(i).getDescription().contains(strArr[1])) {"},{"lineNumber":42,"author":{"gitId":"branzuelajohn"},"content":"                String toPrint \u003d \"    \" + count + \". \" + tasks.getTask(i).toString();"},{"lineNumber":43,"author":{"gitId":"branzuelajohn"},"content":"                count++;"},{"lineNumber":44,"author":{"gitId":"branzuelajohn"},"content":"                sb.append(toPrint);"},{"lineNumber":45,"author":{"gitId":"branzuelajohn"},"content":"            }"},{"lineNumber":46,"author":{"gitId":"branzuelajohn"},"content":"        }"},{"lineNumber":47,"author":{"gitId":"branzuelajohn"},"content":"        return sb.toString();"},{"lineNumber":48,"author":{"gitId":"branzuelajohn"},"content":"    }"},{"lineNumber":49,"author":{"gitId":"branzuelajohn"},"content":"}"}],"authorContributionMap":{"branzuelajohn":49}},{"path":"src/main/java/duke/command/HelpCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"branzuelajohn"},"content":"package duke.command;"},{"lineNumber":2,"author":{"gitId":"branzuelajohn"},"content":""},{"lineNumber":3,"author":{"gitId":"branzuelajohn"},"content":"import duke.Storage;"},{"lineNumber":4,"author":{"gitId":"branzuelajohn"},"content":"import duke.Ui;"},{"lineNumber":5,"author":{"gitId":"branzuelajohn"},"content":"import duke.tasks.TaskList;"},{"lineNumber":6,"author":{"gitId":"branzuelajohn"},"content":""},{"lineNumber":7,"author":{"gitId":"branzuelajohn"},"content":"public class HelpCommand extends Command {"},{"lineNumber":8,"author":{"gitId":"branzuelajohn"},"content":""},{"lineNumber":9,"author":{"gitId":"branzuelajohn"},"content":"    public static final boolean IS_EXIT \u003d false;"},{"lineNumber":10,"author":{"gitId":"branzuelajohn"},"content":""},{"lineNumber":11,"author":{"gitId":"branzuelajohn"},"content":"    /**"},{"lineNumber":12,"author":{"gitId":"branzuelajohn"},"content":"     * Constructor method"},{"lineNumber":13,"author":{"gitId":"branzuelajohn"},"content":"     */"},{"lineNumber":14,"author":{"gitId":"branzuelajohn"},"content":"    public HelpCommand() {"},{"lineNumber":15,"author":{"gitId":"branzuelajohn"},"content":"        super(IS_EXIT);"},{"lineNumber":16,"author":{"gitId":"branzuelajohn"},"content":"    }"},{"lineNumber":17,"author":{"gitId":"branzuelajohn"},"content":""},{"lineNumber":18,"author":{"gitId":"branzuelajohn"},"content":"    /**"},{"lineNumber":19,"author":{"gitId":"branzuelajohn"},"content":"     *"},{"lineNumber":20,"author":{"gitId":"branzuelajohn"},"content":"     * @param tasks The tasks in the TaskList."},{"lineNumber":21,"author":{"gitId":"branzuelajohn"},"content":"     * @param ui Standard UI object."},{"lineNumber":22,"author":{"gitId":"branzuelajohn"},"content":"     * @param storage Standard storage object."},{"lineNumber":23,"author":{"gitId":"branzuelajohn"},"content":"     * @return String the line to print."},{"lineNumber":24,"author":{"gitId":"branzuelajohn"},"content":"     */"},{"lineNumber":25,"author":{"gitId":"branzuelajohn"},"content":"    @Override"},{"lineNumber":26,"author":{"gitId":"branzuelajohn"},"content":"    public String execute(TaskList tasks, Ui ui, Storage storage) {"},{"lineNumber":27,"author":{"gitId":"branzuelajohn"},"content":"        return ui.showHelpReply();"},{"lineNumber":28,"author":{"gitId":"branzuelajohn"},"content":"    }"},{"lineNumber":29,"author":{"gitId":"branzuelajohn"},"content":""},{"lineNumber":30,"author":{"gitId":"branzuelajohn"},"content":"}"}],"authorContributionMap":{"branzuelajohn":30}},{"path":"src/main/java/duke/command/ListCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"branzuelajohn"},"content":"package duke.command;"},{"lineNumber":2,"author":{"gitId":"branzuelajohn"},"content":""},{"lineNumber":3,"author":{"gitId":"branzuelajohn"},"content":"import duke.Storage;"},{"lineNumber":4,"author":{"gitId":"branzuelajohn"},"content":"import duke.Ui;"},{"lineNumber":5,"author":{"gitId":"branzuelajohn"},"content":"import duke.tasks.Task;"},{"lineNumber":6,"author":{"gitId":"branzuelajohn"},"content":"import duke.tasks.TaskList;"},{"lineNumber":7,"author":{"gitId":"branzuelajohn"},"content":""},{"lineNumber":8,"author":{"gitId":"branzuelajohn"},"content":"/**"},{"lineNumber":9,"author":{"gitId":"branzuelajohn"},"content":" * Command for showing all the tasks in the list of tasks."},{"lineNumber":10,"author":{"gitId":"branzuelajohn"},"content":" */"},{"lineNumber":11,"author":{"gitId":"branzuelajohn"},"content":"public class ListCommand extends Command {"},{"lineNumber":12,"author":{"gitId":"branzuelajohn"},"content":"    public static final boolean IS_EXIT \u003d false;"},{"lineNumber":13,"author":{"gitId":"branzuelajohn"},"content":""},{"lineNumber":14,"author":{"gitId":"branzuelajohn"},"content":"    /**"},{"lineNumber":15,"author":{"gitId":"branzuelajohn"},"content":"     * Constructor method"},{"lineNumber":16,"author":{"gitId":"branzuelajohn"},"content":"     */"},{"lineNumber":17,"author":{"gitId":"branzuelajohn"},"content":"    public ListCommand() {"},{"lineNumber":18,"author":{"gitId":"branzuelajohn"},"content":"        super(IS_EXIT);"},{"lineNumber":19,"author":{"gitId":"branzuelajohn"},"content":"    }"},{"lineNumber":20,"author":{"gitId":"branzuelajohn"},"content":""},{"lineNumber":21,"author":{"gitId":"branzuelajohn"},"content":"    /**"},{"lineNumber":22,"author":{"gitId":"branzuelajohn"},"content":"     * Executes method for list command."},{"lineNumber":23,"author":{"gitId":"branzuelajohn"},"content":"     * @param tasks The tasks in the TaskList."},{"lineNumber":24,"author":{"gitId":"branzuelajohn"},"content":"     * @param ui Standard UI object."},{"lineNumber":25,"author":{"gitId":"branzuelajohn"},"content":"     * @param storage Standard storage object."},{"lineNumber":26,"author":{"gitId":"branzuelajohn"},"content":"     * @return the line to print."},{"lineNumber":27,"author":{"gitId":"branzuelajohn"},"content":"     */"},{"lineNumber":28,"author":{"gitId":"branzuelajohn"},"content":"    @Override"},{"lineNumber":29,"author":{"gitId":"branzuelajohn"},"content":"    public String execute(TaskList tasks, Ui ui, Storage storage) {"},{"lineNumber":30,"author":{"gitId":"branzuelajohn"},"content":"        StringBuilder sb \u003d new StringBuilder(\"    Here are the tasks in your list: \\n\");"},{"lineNumber":31,"author":{"gitId":"branzuelajohn"},"content":"        for (int i \u003d 0; i \u003c tasks.getSize(); i++) {"},{"lineNumber":32,"author":{"gitId":"branzuelajohn"},"content":"            Task task \u003d tasks.getTask(i);"},{"lineNumber":33,"author":{"gitId":"branzuelajohn"},"content":"            int j \u003d i + 1;"},{"lineNumber":34,"author":{"gitId":"branzuelajohn"},"content":"            String toAppend \u003d \"    \" + (j) + \".\" + task.toString();"},{"lineNumber":35,"author":{"gitId":"branzuelajohn"},"content":"            sb.append(toAppend + \"\\n\");"},{"lineNumber":36,"author":{"gitId":"branzuelajohn"},"content":"        }"},{"lineNumber":37,"author":{"gitId":"branzuelajohn"},"content":"        return sb.toString();"},{"lineNumber":38,"author":{"gitId":"branzuelajohn"},"content":"    }"},{"lineNumber":39,"author":{"gitId":"branzuelajohn"},"content":"}"}],"authorContributionMap":{"branzuelajohn":39}},{"path":"src/main/java/duke/command/ToDoCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"branzuelajohn"},"content":"package duke.command;"},{"lineNumber":2,"author":{"gitId":"branzuelajohn"},"content":""},{"lineNumber":3,"author":{"gitId":"branzuelajohn"},"content":"import duke.DukeException;"},{"lineNumber":4,"author":{"gitId":"branzuelajohn"},"content":"import duke.Storage;"},{"lineNumber":5,"author":{"gitId":"branzuelajohn"},"content":"import duke.Ui;"},{"lineNumber":6,"author":{"gitId":"branzuelajohn"},"content":"import duke.tasks.TaskList;"},{"lineNumber":7,"author":{"gitId":"branzuelajohn"},"content":"import duke.tasks.ToDo;"},{"lineNumber":8,"author":{"gitId":"branzuelajohn"},"content":""},{"lineNumber":9,"author":{"gitId":"branzuelajohn"},"content":"/**"},{"lineNumber":10,"author":{"gitId":"branzuelajohn"},"content":" * Command to create a ToDo task."},{"lineNumber":11,"author":{"gitId":"branzuelajohn"},"content":" */"},{"lineNumber":12,"author":{"gitId":"branzuelajohn"},"content":"public class ToDoCommand extends Command {"},{"lineNumber":13,"author":{"gitId":"branzuelajohn"},"content":"    public static final boolean IS_EXIT \u003d false;"},{"lineNumber":14,"author":{"gitId":"branzuelajohn"},"content":"    protected String input;"},{"lineNumber":15,"author":{"gitId":"branzuelajohn"},"content":""},{"lineNumber":16,"author":{"gitId":"branzuelajohn"},"content":"    /**"},{"lineNumber":17,"author":{"gitId":"branzuelajohn"},"content":"     * Constructor method"},{"lineNumber":18,"author":{"gitId":"branzuelajohn"},"content":"     * @param input The input command from the user."},{"lineNumber":19,"author":{"gitId":"branzuelajohn"},"content":"     */"},{"lineNumber":20,"author":{"gitId":"branzuelajohn"},"content":"    public ToDoCommand(String input) {"},{"lineNumber":21,"author":{"gitId":"branzuelajohn"},"content":"        super(IS_EXIT);"},{"lineNumber":22,"author":{"gitId":"branzuelajohn"},"content":"        this.input \u003d input;"},{"lineNumber":23,"author":{"gitId":"branzuelajohn"},"content":"    }"},{"lineNumber":24,"author":{"gitId":"branzuelajohn"},"content":""},{"lineNumber":25,"author":{"gitId":"branzuelajohn"},"content":"    /**"},{"lineNumber":26,"author":{"gitId":"branzuelajohn"},"content":"     * Executes method for ToDo command."},{"lineNumber":27,"author":{"gitId":"branzuelajohn"},"content":"     * @param tasks The tasks in the TaskList."},{"lineNumber":28,"author":{"gitId":"branzuelajohn"},"content":"     * @param ui Standard UI object."},{"lineNumber":29,"author":{"gitId":"branzuelajohn"},"content":"     * @param storage Standard storage object."},{"lineNumber":30,"author":{"gitId":"branzuelajohn"},"content":"     * @return the line to print."},{"lineNumber":31,"author":{"gitId":"branzuelajohn"},"content":"     * @throws DukeException if the description of command is missing or if the user input is invalid."},{"lineNumber":32,"author":{"gitId":"branzuelajohn"},"content":"     */"},{"lineNumber":33,"author":{"gitId":"branzuelajohn"},"content":"    @Override"},{"lineNumber":34,"author":{"gitId":"branzuelajohn"},"content":"    public String execute(TaskList tasks, Ui ui, Storage storage) throws DukeException {"},{"lineNumber":35,"author":{"gitId":"branzuelajohn"},"content":"        if (input.length() \u003c\u003d 5) {"},{"lineNumber":36,"author":{"gitId":"branzuelajohn"},"content":"            throw new DukeException(\"☹ OOPS!!! The description of a todo cannot be empty\");"},{"lineNumber":37,"author":{"gitId":"branzuelajohn"},"content":"        }"},{"lineNumber":38,"author":{"gitId":"branzuelajohn"},"content":"        String s \u003d input.substring(5);"},{"lineNumber":39,"author":{"gitId":"branzuelajohn"},"content":"        ToDo td \u003d new ToDo(s);"},{"lineNumber":40,"author":{"gitId":"branzuelajohn"},"content":"        tasks.addTask(td);"},{"lineNumber":41,"author":{"gitId":"branzuelajohn"},"content":"        StringBuilder sb \u003d new StringBuilder(ui.showTaskAdded(td) + \"\\n\");"},{"lineNumber":42,"author":{"gitId":"branzuelajohn"},"content":"        storage.addNewDataToFile(\"T\", \"0\", td.getDescription(), \"\");"},{"lineNumber":43,"author":{"gitId":"branzuelajohn"},"content":"        sb.append(ui.showNoOfItems(tasks));"},{"lineNumber":44,"author":{"gitId":"branzuelajohn"},"content":"        return sb.toString();"},{"lineNumber":45,"author":{"gitId":"branzuelajohn"},"content":"    }"},{"lineNumber":46,"author":{"gitId":"branzuelajohn"},"content":"}"}],"authorContributionMap":{"branzuelajohn":46}},{"path":"src/main/java/duke/tasks/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"branzuelajohn"},"content":"package duke.tasks;"},{"lineNumber":2,"author":{"gitId":"branzuelajohn"},"content":""},{"lineNumber":3,"author":{"gitId":"branzuelajohn"},"content":"import java.time.LocalDate;"},{"lineNumber":4,"author":{"gitId":"branzuelajohn"},"content":"import java.time.LocalDateTime;"},{"lineNumber":5,"author":{"gitId":"branzuelajohn"},"content":"import java.time.LocalTime;"},{"lineNumber":6,"author":{"gitId":"branzuelajohn"},"content":"import java.time.format.DateTimeFormatter;"},{"lineNumber":7,"author":{"gitId":"branzuelajohn"},"content":""},{"lineNumber":8,"author":{"gitId":"branzuelajohn"},"content":"/**"},{"lineNumber":9,"author":{"gitId":"branzuelajohn"},"content":" * Deadline class that extends from Task parent class."},{"lineNumber":10,"author":{"gitId":"branzuelajohn"},"content":" * Deadline class specifies a deadline due at a specific date and time."},{"lineNumber":11,"author":{"gitId":"branzuelajohn"},"content":" */"},{"lineNumber":12,"author":{"gitId":"branzuelajohn"},"content":"public class Deadline extends Task {"},{"lineNumber":13,"author":{"gitId":"branzuelajohn"},"content":""},{"lineNumber":14,"author":{"gitId":"branzuelajohn"},"content":"    protected String by;"},{"lineNumber":15,"author":{"gitId":"branzuelajohn"},"content":"    protected LocalDate dateTime;"},{"lineNumber":16,"author":{"gitId":"branzuelajohn"},"content":"    protected LocalDateTime time;"},{"lineNumber":17,"author":{"gitId":"branzuelajohn"},"content":""},{"lineNumber":18,"author":{"gitId":"branzuelajohn"},"content":"    /**"},{"lineNumber":19,"author":{"gitId":"branzuelajohn"},"content":"     * Constructor method for Deadline class."},{"lineNumber":20,"author":{"gitId":"branzuelajohn"},"content":"     * @param description The description of the deadline."},{"lineNumber":21,"author":{"gitId":"branzuelajohn"},"content":"     * @param by The deadline time."},{"lineNumber":22,"author":{"gitId":"branzuelajohn"},"content":"     */"},{"lineNumber":23,"author":{"gitId":"branzuelajohn"},"content":"    public Deadline(String description, String by) {"},{"lineNumber":24,"author":{"gitId":"branzuelajohn"},"content":"        super(description);"},{"lineNumber":25,"author":{"gitId":"branzuelajohn"},"content":"        this.by \u003d by;"},{"lineNumber":26,"author":{"gitId":"branzuelajohn"},"content":"        String[] dateArr \u003d by.split(\" \");"},{"lineNumber":27,"author":{"gitId":"branzuelajohn"},"content":"        String[] date \u003d dateArr[0].split(\"-\");"},{"lineNumber":28,"author":{"gitId":"branzuelajohn"},"content":"        LocalDate dateTime \u003d LocalDate.of(Integer.parseInt(date[0]), Integer.parseInt(date[1]),"},{"lineNumber":29,"author":{"gitId":"branzuelajohn"},"content":"                Integer.parseInt(date[2]));"},{"lineNumber":30,"author":{"gitId":"branzuelajohn"},"content":""},{"lineNumber":31,"author":{"gitId":"branzuelajohn"},"content":"        if (dateArr.length \u003e 1) {"},{"lineNumber":32,"author":{"gitId":"branzuelajohn"},"content":"            String t \u003d dateArr[1];"},{"lineNumber":33,"author":{"gitId":"branzuelajohn"},"content":"            LocalTime hm \u003d LocalTime.of(Integer.parseInt(t.substring(0, 2)), Integer.parseInt(t.substring(2)));"},{"lineNumber":34,"author":{"gitId":"branzuelajohn"},"content":"            time \u003d LocalDateTime.of(dateTime, hm);"},{"lineNumber":35,"author":{"gitId":"branzuelajohn"},"content":"        }"},{"lineNumber":36,"author":{"gitId":"branzuelajohn"},"content":""},{"lineNumber":37,"author":{"gitId":"branzuelajohn"},"content":"        this.dateTime \u003d dateTime;"},{"lineNumber":38,"author":{"gitId":"branzuelajohn"},"content":"        this.time \u003d time;"},{"lineNumber":39,"author":{"gitId":"branzuelajohn"},"content":"    }"},{"lineNumber":40,"author":{"gitId":"branzuelajohn"},"content":""},{"lineNumber":41,"author":{"gitId":"branzuelajohn"},"content":"    public String getBy() {"},{"lineNumber":42,"author":{"gitId":"branzuelajohn"},"content":"        return this.by;"},{"lineNumber":43,"author":{"gitId":"branzuelajohn"},"content":"    }"},{"lineNumber":44,"author":{"gitId":"branzuelajohn"},"content":""},{"lineNumber":45,"author":{"gitId":"branzuelajohn"},"content":"    public LocalDateTime getTime() {"},{"lineNumber":46,"author":{"gitId":"branzuelajohn"},"content":"        return this.time;"},{"lineNumber":47,"author":{"gitId":"branzuelajohn"},"content":"    }"},{"lineNumber":48,"author":{"gitId":"branzuelajohn"},"content":""},{"lineNumber":49,"author":{"gitId":"branzuelajohn"},"content":"    @Override"},{"lineNumber":50,"author":{"gitId":"branzuelajohn"},"content":"    public String toString() {"},{"lineNumber":51,"author":{"gitId":"branzuelajohn"},"content":"        if (time !\u003d null) {"},{"lineNumber":52,"author":{"gitId":"branzuelajohn"},"content":"            String period \u003d time.getHour() \u003e\u003d 12 ? \"PM\" : \"AM\";"},{"lineNumber":53,"author":{"gitId":"branzuelajohn"},"content":"            String hour \u003d time.getHour() \u003e 12 ? Integer.toString(time.getHour() - 12)"},{"lineNumber":54,"author":{"gitId":"branzuelajohn"},"content":"                    : Integer.toString(time.getHour());"},{"lineNumber":55,"author":{"gitId":"branzuelajohn"},"content":"            if (time.getMinute() \u003e 0) {"},{"lineNumber":56,"author":{"gitId":"branzuelajohn"},"content":"                return \"[D]\" + super.toString() + \" (by: \" + dateTime.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\"))"},{"lineNumber":57,"author":{"gitId":"branzuelajohn"},"content":"                    + \" \" + hour + \".\" + time.getMinute() + period + \")\";"},{"lineNumber":58,"author":{"gitId":"branzuelajohn"},"content":"            } else {"},{"lineNumber":59,"author":{"gitId":"branzuelajohn"},"content":"                return \"[D]\" + super.toString() + \" (by: \" + dateTime.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\"))"},{"lineNumber":60,"author":{"gitId":"branzuelajohn"},"content":"                    + \" \" + hour + period + \")\";"},{"lineNumber":61,"author":{"gitId":"branzuelajohn"},"content":"            }"},{"lineNumber":62,"author":{"gitId":"branzuelajohn"},"content":"        } else {"},{"lineNumber":63,"author":{"gitId":"branzuelajohn"},"content":"            return \"[D]\" + super.toString() + \" (by: \" + dateTime.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\"))"},{"lineNumber":64,"author":{"gitId":"branzuelajohn"},"content":"                + \")\";"},{"lineNumber":65,"author":{"gitId":"branzuelajohn"},"content":"        }"},{"lineNumber":66,"author":{"gitId":"branzuelajohn"},"content":"    }"},{"lineNumber":67,"author":{"gitId":"branzuelajohn"},"content":"}"},{"lineNumber":68,"author":{"gitId":"branzuelajohn"},"content":""}],"authorContributionMap":{"branzuelajohn":68}},{"path":"src/main/java/duke/tasks/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"branzuelajohn"},"content":"package duke.tasks;"},{"lineNumber":2,"author":{"gitId":"branzuelajohn"},"content":""},{"lineNumber":3,"author":{"gitId":"branzuelajohn"},"content":"/**"},{"lineNumber":4,"author":{"gitId":"branzuelajohn"},"content":" * Event class that extends from Task parent class"},{"lineNumber":5,"author":{"gitId":"branzuelajohn"},"content":" * Event class specifies an event happening at a specific date and time."},{"lineNumber":6,"author":{"gitId":"branzuelajohn"},"content":" */"},{"lineNumber":7,"author":{"gitId":"branzuelajohn"},"content":"public class Event extends Task {"},{"lineNumber":8,"author":{"gitId":"branzuelajohn"},"content":""},{"lineNumber":9,"author":{"gitId":"branzuelajohn"},"content":"    protected String date;"},{"lineNumber":10,"author":{"gitId":"branzuelajohn"},"content":""},{"lineNumber":11,"author":{"gitId":"branzuelajohn"},"content":"    /**"},{"lineNumber":12,"author":{"gitId":"branzuelajohn"},"content":"     * Constructor method"},{"lineNumber":13,"author":{"gitId":"branzuelajohn"},"content":"     * @param description The description of the event."},{"lineNumber":14,"author":{"gitId":"branzuelajohn"},"content":"     * @param date The event date."},{"lineNumber":15,"author":{"gitId":"branzuelajohn"},"content":"     */"},{"lineNumber":16,"author":{"gitId":"branzuelajohn"},"content":"    public Event(String description, String date) {"},{"lineNumber":17,"author":{"gitId":"branzuelajohn"},"content":"        super(description);"},{"lineNumber":18,"author":{"gitId":"branzuelajohn"},"content":"        this.date \u003d date;"},{"lineNumber":19,"author":{"gitId":"branzuelajohn"},"content":"    }"},{"lineNumber":20,"author":{"gitId":"branzuelajohn"},"content":""},{"lineNumber":21,"author":{"gitId":"branzuelajohn"},"content":"    public String getDate() {"},{"lineNumber":22,"author":{"gitId":"branzuelajohn"},"content":"        return this.date;"},{"lineNumber":23,"author":{"gitId":"branzuelajohn"},"content":"    }"},{"lineNumber":24,"author":{"gitId":"branzuelajohn"},"content":""},{"lineNumber":25,"author":{"gitId":"branzuelajohn"},"content":"    @Override"},{"lineNumber":26,"author":{"gitId":"branzuelajohn"},"content":"    public String toString() {"},{"lineNumber":27,"author":{"gitId":"branzuelajohn"},"content":"        return \"[E]\" + super.toString() + \" (at: \" + date + \")\";"},{"lineNumber":28,"author":{"gitId":"branzuelajohn"},"content":"    }"},{"lineNumber":29,"author":{"gitId":"branzuelajohn"},"content":"}"}],"authorContributionMap":{"branzuelajohn":29}},{"path":"src/main/java/duke/tasks/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"branzuelajohn"},"content":"package duke.tasks;"},{"lineNumber":2,"author":{"gitId":"branzuelajohn"},"content":""},{"lineNumber":3,"author":{"gitId":"branzuelajohn"},"content":"/**"},{"lineNumber":4,"author":{"gitId":"branzuelajohn"},"content":" * Abstract parent class for all tasks i.e ToDo, Event, Deadline."},{"lineNumber":5,"author":{"gitId":"branzuelajohn"},"content":" */"},{"lineNumber":6,"author":{"gitId":"branzuelajohn"},"content":"public abstract class Task {"},{"lineNumber":7,"author":{"gitId":"branzuelajohn"},"content":"    protected String description;"},{"lineNumber":8,"author":{"gitId":"branzuelajohn"},"content":"    protected boolean isDone;"},{"lineNumber":9,"author":{"gitId":"branzuelajohn"},"content":""},{"lineNumber":10,"author":{"gitId":"branzuelajohn"},"content":"    /**"},{"lineNumber":11,"author":{"gitId":"branzuelajohn"},"content":"     * Constructor method for Task class"},{"lineNumber":12,"author":{"gitId":"branzuelajohn"},"content":"     * @param description The task description."},{"lineNumber":13,"author":{"gitId":"branzuelajohn"},"content":"     */"},{"lineNumber":14,"author":{"gitId":"branzuelajohn"},"content":"    public Task(String description) {"},{"lineNumber":15,"author":{"gitId":"branzuelajohn"},"content":"        this.description \u003d description;"},{"lineNumber":16,"author":{"gitId":"branzuelajohn"},"content":"        this.isDone \u003d false;"},{"lineNumber":17,"author":{"gitId":"branzuelajohn"},"content":"    }"},{"lineNumber":18,"author":{"gitId":"branzuelajohn"},"content":""},{"lineNumber":19,"author":{"gitId":"branzuelajohn"},"content":"    /**"},{"lineNumber":20,"author":{"gitId":"branzuelajohn"},"content":"     * Overloaded constructor method for Task class."},{"lineNumber":21,"author":{"gitId":"branzuelajohn"},"content":"     * @param description The task description."},{"lineNumber":22,"author":{"gitId":"branzuelajohn"},"content":"     * @param isDone Boolean for whether the task is done."},{"lineNumber":23,"author":{"gitId":"branzuelajohn"},"content":"     */"},{"lineNumber":24,"author":{"gitId":"branzuelajohn"},"content":"    public Task(String description, boolean isDone) {"},{"lineNumber":25,"author":{"gitId":"branzuelajohn"},"content":"        this.description \u003d description;"},{"lineNumber":26,"author":{"gitId":"branzuelajohn"},"content":"        this.isDone \u003d isDone;"},{"lineNumber":27,"author":{"gitId":"branzuelajohn"},"content":"    }"},{"lineNumber":28,"author":{"gitId":"branzuelajohn"},"content":""},{"lineNumber":29,"author":{"gitId":"branzuelajohn"},"content":"    /**"},{"lineNumber":30,"author":{"gitId":"branzuelajohn"},"content":"     * Marks the task as done."},{"lineNumber":31,"author":{"gitId":"branzuelajohn"},"content":"     * @return True"},{"lineNumber":32,"author":{"gitId":"branzuelajohn"},"content":"     */"},{"lineNumber":33,"author":{"gitId":"branzuelajohn"},"content":"    public boolean markAsDone() {"},{"lineNumber":34,"author":{"gitId":"branzuelajohn"},"content":"        this.isDone \u003d true;"},{"lineNumber":35,"author":{"gitId":"branzuelajohn"},"content":"        return true;"},{"lineNumber":36,"author":{"gitId":"branzuelajohn"},"content":"    }"},{"lineNumber":37,"author":{"gitId":"branzuelajohn"},"content":""},{"lineNumber":38,"author":{"gitId":"branzuelajohn"},"content":"    public String getType() {"},{"lineNumber":39,"author":{"gitId":"branzuelajohn"},"content":"        if (this instanceof ToDo) {"},{"lineNumber":40,"author":{"gitId":"branzuelajohn"},"content":"            return \"T\";"},{"lineNumber":41,"author":{"gitId":"branzuelajohn"},"content":"        } else if (this instanceof Deadline) {"},{"lineNumber":42,"author":{"gitId":"branzuelajohn"},"content":"            return \"D\";"},{"lineNumber":43,"author":{"gitId":"branzuelajohn"},"content":"        } else {"},{"lineNumber":44,"author":{"gitId":"branzuelajohn"},"content":"            return \"E\";"},{"lineNumber":45,"author":{"gitId":"branzuelajohn"},"content":"        }"},{"lineNumber":46,"author":{"gitId":"branzuelajohn"},"content":"    }"},{"lineNumber":47,"author":{"gitId":"branzuelajohn"},"content":""},{"lineNumber":48,"author":{"gitId":"branzuelajohn"},"content":"    public String getDescription() {"},{"lineNumber":49,"author":{"gitId":"branzuelajohn"},"content":"        return this.description;"},{"lineNumber":50,"author":{"gitId":"branzuelajohn"},"content":"    }"},{"lineNumber":51,"author":{"gitId":"branzuelajohn"},"content":""},{"lineNumber":52,"author":{"gitId":"branzuelajohn"},"content":"    public String getStatusIcon() {"},{"lineNumber":53,"author":{"gitId":"branzuelajohn"},"content":"        return (isDone ? \"\\u2713\" : \"\\u2718\");"},{"lineNumber":54,"author":{"gitId":"branzuelajohn"},"content":"    }"},{"lineNumber":55,"author":{"gitId":"branzuelajohn"},"content":""},{"lineNumber":56,"author":{"gitId":"branzuelajohn"},"content":"    public boolean getIsDone() {"},{"lineNumber":57,"author":{"gitId":"branzuelajohn"},"content":"        return this.isDone;"},{"lineNumber":58,"author":{"gitId":"branzuelajohn"},"content":"    }"},{"lineNumber":59,"author":{"gitId":"branzuelajohn"},"content":""},{"lineNumber":60,"author":{"gitId":"branzuelajohn"},"content":"    @Override"},{"lineNumber":61,"author":{"gitId":"branzuelajohn"},"content":"    public String toString() {"},{"lineNumber":62,"author":{"gitId":"branzuelajohn"},"content":"        return \"[\" + this.getStatusIcon() + \"] \" + this.description;"},{"lineNumber":63,"author":{"gitId":"branzuelajohn"},"content":"    }"},{"lineNumber":64,"author":{"gitId":"branzuelajohn"},"content":"}"}],"authorContributionMap":{"branzuelajohn":64}},{"path":"src/main/java/duke/tasks/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"branzuelajohn"},"content":"package duke.tasks;"},{"lineNumber":2,"author":{"gitId":"branzuelajohn"},"content":""},{"lineNumber":3,"author":{"gitId":"branzuelajohn"},"content":"import java.util.ArrayList;"},{"lineNumber":4,"author":{"gitId":"branzuelajohn"},"content":""},{"lineNumber":5,"author":{"gitId":"branzuelajohn"},"content":"/**"},{"lineNumber":6,"author":{"gitId":"branzuelajohn"},"content":" * ArrayList that keeps track of all the tasks stored in the hard drive."},{"lineNumber":7,"author":{"gitId":"branzuelajohn"},"content":" */"},{"lineNumber":8,"author":{"gitId":"branzuelajohn"},"content":"public class TaskList {"},{"lineNumber":9,"author":{"gitId":"branzuelajohn"},"content":"    protected ArrayList\u003cTask\u003e tasks;"},{"lineNumber":10,"author":{"gitId":"branzuelajohn"},"content":""},{"lineNumber":11,"author":{"gitId":"branzuelajohn"},"content":"    /**"},{"lineNumber":12,"author":{"gitId":"branzuelajohn"},"content":"     * Constructor method for TaskList class."},{"lineNumber":13,"author":{"gitId":"branzuelajohn"},"content":"     */"},{"lineNumber":14,"author":{"gitId":"branzuelajohn"},"content":"    public TaskList() {"},{"lineNumber":15,"author":{"gitId":"branzuelajohn"},"content":"        this.tasks \u003d new ArrayList\u003c\u003e();"},{"lineNumber":16,"author":{"gitId":"branzuelajohn"},"content":"    }"},{"lineNumber":17,"author":{"gitId":"branzuelajohn"},"content":""},{"lineNumber":18,"author":{"gitId":"branzuelajohn"},"content":"    /**"},{"lineNumber":19,"author":{"gitId":"branzuelajohn"},"content":"     * Overloaded constructor method for TaskList class."},{"lineNumber":20,"author":{"gitId":"branzuelajohn"},"content":"     * @param tasks The list of tasks."},{"lineNumber":21,"author":{"gitId":"branzuelajohn"},"content":"     */"},{"lineNumber":22,"author":{"gitId":"branzuelajohn"},"content":"    public TaskList(ArrayList\u003cTask\u003e tasks) {"},{"lineNumber":23,"author":{"gitId":"branzuelajohn"},"content":"        this.tasks \u003d tasks;"},{"lineNumber":24,"author":{"gitId":"branzuelajohn"},"content":"    }"},{"lineNumber":25,"author":{"gitId":"branzuelajohn"},"content":""},{"lineNumber":26,"author":{"gitId":"branzuelajohn"},"content":"    public int getSize() {"},{"lineNumber":27,"author":{"gitId":"branzuelajohn"},"content":"        return tasks.size();"},{"lineNumber":28,"author":{"gitId":"branzuelajohn"},"content":"    }"},{"lineNumber":29,"author":{"gitId":"branzuelajohn"},"content":""},{"lineNumber":30,"author":{"gitId":"branzuelajohn"},"content":"    public Task getTask(int index) {"},{"lineNumber":31,"author":{"gitId":"branzuelajohn"},"content":"        return tasks.get(index);"},{"lineNumber":32,"author":{"gitId":"branzuelajohn"},"content":"    }"},{"lineNumber":33,"author":{"gitId":"branzuelajohn"},"content":""},{"lineNumber":34,"author":{"gitId":"branzuelajohn"},"content":"    /**"},{"lineNumber":35,"author":{"gitId":"branzuelajohn"},"content":"     * Removes task for the list of task at specific index."},{"lineNumber":36,"author":{"gitId":"branzuelajohn"},"content":"     * @param index The index of task to remove."},{"lineNumber":37,"author":{"gitId":"branzuelajohn"},"content":"     * @return The list of tasks after removing the task at specific index."},{"lineNumber":38,"author":{"gitId":"branzuelajohn"},"content":"     */"},{"lineNumber":39,"author":{"gitId":"branzuelajohn"},"content":"    public Task removeTask(int index) {"},{"lineNumber":40,"author":{"gitId":"branzuelajohn"},"content":"        return tasks.remove(index);"},{"lineNumber":41,"author":{"gitId":"branzuelajohn"},"content":"    }"},{"lineNumber":42,"author":{"gitId":"branzuelajohn"},"content":""},{"lineNumber":43,"author":{"gitId":"branzuelajohn"},"content":"    /**"},{"lineNumber":44,"author":{"gitId":"branzuelajohn"},"content":"     * Adds task to the current list of tasks."},{"lineNumber":45,"author":{"gitId":"branzuelajohn"},"content":"     * @param task The task to add to the list of tasks."},{"lineNumber":46,"author":{"gitId":"branzuelajohn"},"content":"     * @return The list of tasks after adding the task."},{"lineNumber":47,"author":{"gitId":"branzuelajohn"},"content":"     */"},{"lineNumber":48,"author":{"gitId":"branzuelajohn"},"content":"    public boolean addTask(Task task) {"},{"lineNumber":49,"author":{"gitId":"branzuelajohn"},"content":"        return tasks.add(task);"},{"lineNumber":50,"author":{"gitId":"branzuelajohn"},"content":"    }"},{"lineNumber":51,"author":{"gitId":"branzuelajohn"},"content":""},{"lineNumber":52,"author":{"gitId":"branzuelajohn"},"content":"}"}],"authorContributionMap":{"branzuelajohn":52}},{"path":"src/main/java/duke/tasks/ToDo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"branzuelajohn"},"content":"package duke.tasks;"},{"lineNumber":2,"author":{"gitId":"branzuelajohn"},"content":""},{"lineNumber":3,"author":{"gitId":"branzuelajohn"},"content":"/**"},{"lineNumber":4,"author":{"gitId":"branzuelajohn"},"content":" * ToDo class that extends from parent Task class."},{"lineNumber":5,"author":{"gitId":"branzuelajohn"},"content":" * ToDo class specifies a task with a description."},{"lineNumber":6,"author":{"gitId":"branzuelajohn"},"content":" */"},{"lineNumber":7,"author":{"gitId":"branzuelajohn"},"content":"public class ToDo extends Task {"},{"lineNumber":8,"author":{"gitId":"branzuelajohn"},"content":"    /**"},{"lineNumber":9,"author":{"gitId":"branzuelajohn"},"content":"     * Constructor method"},{"lineNumber":10,"author":{"gitId":"branzuelajohn"},"content":"     * @param description The task description."},{"lineNumber":11,"author":{"gitId":"branzuelajohn"},"content":"     */"},{"lineNumber":12,"author":{"gitId":"branzuelajohn"},"content":"    public ToDo(String description) {"},{"lineNumber":13,"author":{"gitId":"branzuelajohn"},"content":"        super(description);"},{"lineNumber":14,"author":{"gitId":"branzuelajohn"},"content":"    }"},{"lineNumber":15,"author":{"gitId":"branzuelajohn"},"content":""},{"lineNumber":16,"author":{"gitId":"branzuelajohn"},"content":"    @Override"},{"lineNumber":17,"author":{"gitId":"branzuelajohn"},"content":"    public String toString() {"},{"lineNumber":18,"author":{"gitId":"branzuelajohn"},"content":"        return \"[T]\" + super.toString();"},{"lineNumber":19,"author":{"gitId":"branzuelajohn"},"content":"    }"},{"lineNumber":20,"author":{"gitId":"branzuelajohn"},"content":""},{"lineNumber":21,"author":{"gitId":"branzuelajohn"},"content":"}"}],"authorContributionMap":{"branzuelajohn":21}},{"path":"src/main/resources/view/DialogBox.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"branzuelajohn"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"},{"lineNumber":2,"author":{"gitId":"branzuelajohn"},"content":""},{"lineNumber":3,"author":{"gitId":"branzuelajohn"},"content":"\u003c?import javafx.geometry.Insets?\u003e"},{"lineNumber":4,"author":{"gitId":"branzuelajohn"},"content":"\u003c?import javafx.scene.control.Label?\u003e"},{"lineNumber":5,"author":{"gitId":"branzuelajohn"},"content":"\u003c?import javafx.scene.image.ImageView?\u003e"},{"lineNumber":6,"author":{"gitId":"branzuelajohn"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e"},{"lineNumber":7,"author":{"gitId":"branzuelajohn"},"content":"\u003c?import javafx.scene.text.Font?\u003e"},{"lineNumber":8,"author":{"gitId":"branzuelajohn"},"content":"\u003c?import javafx.scene.shape.Circle?\u003e"},{"lineNumber":9,"author":{"gitId":"branzuelajohn"},"content":""},{"lineNumber":10,"author":{"gitId":"branzuelajohn"},"content":"\u003cfx:root alignment\u003d\"TOP_RIGHT\" maxHeight\u003d\"2.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\" prefWidth\u003d\"400.0\" type\u003d\"javafx.scene.layout.HBox\" xmlns\u003d\"http://javafx.com/javafx/8.0.171\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e"},{"lineNumber":11,"author":{"gitId":"branzuelajohn"},"content":"    \u003cchildren\u003e"},{"lineNumber":12,"author":{"gitId":"branzuelajohn"},"content":"        \u003cLabel fx:id\u003d\"dialog\" text\u003d\"Label\" style\u003d\"-fx-shape: \u0026quot;M100,140 h200 a20,20 0 0 1 20,20 v200 a20,20 0 0 1 -20,20 h-200 a20,20 0 0 1 -20,-20 v-200 a20,20 0 0 1 20,-20 z\u0026quot;\u0026quot;M100,100 h200 a20,20 0 0 1 20,20 v200 a20,20 0 0 1 -20,20 h-200 a20,20 0 0 1 -20,-20 v-200 a20,20 0 0 1 20,-20 z\u0026quot;; -fx-padding: 30; -fx-background-color: rgba(84,137,119,0.43); -fx-background-insets: 5;\" HBox.hgrow\u003d\"ALWAYS\" wrapText\u003d\"true\" textFill\u003d\"BLACK\"\u003e"},{"lineNumber":13,"author":{"gitId":"branzuelajohn"},"content":"            \u003cfont\u003e"},{"lineNumber":14,"author":{"gitId":"branzuelajohn"},"content":"                \u003cFont name\u003d\"Open Sans\" size\u003d\"14.0\" /\u003e"},{"lineNumber":15,"author":{"gitId":"branzuelajohn"},"content":"            \u003c/font\u003e"},{"lineNumber":16,"author":{"gitId":"branzuelajohn"},"content":"        \u003c/Label\u003e"},{"lineNumber":17,"author":{"gitId":"branzuelajohn"},"content":"        \u003cImageView fx:id\u003d\"displayPicture\" fitHeight\u003d\"99.0\" fitWidth\u003d\"99.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\"\u003e"},{"lineNumber":18,"author":{"gitId":"branzuelajohn"},"content":"            \u003cclip\u003e"},{"lineNumber":19,"author":{"gitId":"branzuelajohn"},"content":"                    \u003cCircle centerX\u003d\"47.0\" centerY\u003d\"47.0\" radius\u003d\"47.0\" stroke\u003d\"black\" /\u003e"},{"lineNumber":20,"author":{"gitId":"branzuelajohn"},"content":"            \u003c/clip\u003e"},{"lineNumber":21,"author":{"gitId":"branzuelajohn"},"content":"        \u003c/ImageView\u003e"},{"lineNumber":22,"author":{"gitId":"branzuelajohn"},"content":"    \u003c/children\u003e"},{"lineNumber":23,"author":{"gitId":"branzuelajohn"},"content":"    \u003cpadding\u003e"},{"lineNumber":24,"author":{"gitId":"branzuelajohn"},"content":"        \u003cInsets bottom\u003d\"15.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"15.0\" /\u003e"},{"lineNumber":25,"author":{"gitId":"branzuelajohn"},"content":"    \u003c/padding\u003e"},{"lineNumber":26,"author":{"gitId":"branzuelajohn"},"content":"\u003c/fx:root\u003e"}],"authorContributionMap":{"branzuelajohn":26}},{"path":"src/main/resources/view/MainWindow.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"branzuelajohn"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"},{"lineNumber":2,"author":{"gitId":"branzuelajohn"},"content":""},{"lineNumber":3,"author":{"gitId":"branzuelajohn"},"content":"\u003c?import javafx.scene.control.Button?\u003e"},{"lineNumber":4,"author":{"gitId":"branzuelajohn"},"content":"\u003c?import javafx.scene.control.ScrollPane?\u003e"},{"lineNumber":5,"author":{"gitId":"branzuelajohn"},"content":"\u003c?import javafx.scene.control.TextField?\u003e"},{"lineNumber":6,"author":{"gitId":"branzuelajohn"},"content":"\u003c?import javafx.scene.layout.AnchorPane?\u003e"},{"lineNumber":7,"author":{"gitId":"branzuelajohn"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e"},{"lineNumber":8,"author":{"gitId":"branzuelajohn"},"content":""},{"lineNumber":9,"author":{"gitId":"branzuelajohn"},"content":"\u003cAnchorPane maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefHeight\u003d\"600.0\" prefWidth\u003d\"400.0\" xmlns\u003d\"http://javafx.com/javafx/8.0.171\" xmlns:fx\u003d\"http://javafx.com/fxml/1\" fx:controller\u003d\"duke.MainWindow\"\u003e"},{"lineNumber":10,"author":{"gitId":"branzuelajohn"},"content":"    \u003cchildren\u003e"},{"lineNumber":11,"author":{"gitId":"branzuelajohn"},"content":"        \u003cTextField fx:id\u003d\"userInput\" layoutY\u003d\"558.0\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"324.0\" AnchorPane.bottomAnchor\u003d\"1.0\" /\u003e"},{"lineNumber":12,"author":{"gitId":"branzuelajohn"},"content":"        \u003cButton fx:id\u003d\"sendButton\" layoutX\u003d\"324.0\" layoutY\u003d\"558.0\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"76.0\" text\u003d\"Send\" /\u003e"},{"lineNumber":13,"author":{"gitId":"branzuelajohn"},"content":"        \u003cScrollPane fx:id\u003d\"scrollPane\" hbarPolicy\u003d\"NEVER\" hvalue\u003d\"1.0\" prefHeight\u003d\"557.0\" prefWidth\u003d\"400.0\" vvalue\u003d\"1.0\"\u003e"},{"lineNumber":14,"author":{"gitId":"branzuelajohn"},"content":"            \u003ccontent\u003e"},{"lineNumber":15,"author":{"gitId":"branzuelajohn"},"content":"                \u003cVBox fx:id\u003d\"dialogContainer\" prefHeight\u003d\"552.0\" prefWidth\u003d\"400.0\""},{"lineNumber":16,"author":{"gitId":"branzuelajohn"},"content":"                      style\u003d\"-fx-background-size: cover; -fx-background-repeat: repeat;"},{"lineNumber":17,"author":{"gitId":"branzuelajohn"},"content":"                       -fx-background-image: url(\u0027/images/wallpaper.jpg\u0027)\"/\u003e"},{"lineNumber":18,"author":{"gitId":"branzuelajohn"},"content":"            \u003c/content\u003e"},{"lineNumber":19,"author":{"gitId":"branzuelajohn"},"content":"        \u003c/ScrollPane\u003e"},{"lineNumber":20,"author":{"gitId":"branzuelajohn"},"content":"    \u003c/children\u003e"},{"lineNumber":21,"author":{"gitId":"branzuelajohn"},"content":"\u003c/AnchorPane\u003e"}],"authorContributionMap":{"branzuelajohn":21}},{"path":"src/test/java/ParserTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"branzuelajohn"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;"},{"lineNumber":2,"author":{"gitId":"branzuelajohn"},"content":""},{"lineNumber":3,"author":{"gitId":"branzuelajohn"},"content":"import org.junit.jupiter.api.Test;"},{"lineNumber":4,"author":{"gitId":"branzuelajohn"},"content":""},{"lineNumber":5,"author":{"gitId":"branzuelajohn"},"content":"import duke.DukeException;"},{"lineNumber":6,"author":{"gitId":"branzuelajohn"},"content":"import duke.Parser;"},{"lineNumber":7,"author":{"gitId":"branzuelajohn"},"content":"import duke.command.Command;"},{"lineNumber":8,"author":{"gitId":"branzuelajohn"},"content":""},{"lineNumber":9,"author":{"gitId":"branzuelajohn"},"content":""},{"lineNumber":10,"author":{"gitId":"branzuelajohn"},"content":""},{"lineNumber":11,"author":{"gitId":"branzuelajohn"},"content":"public class ParserTest {"},{"lineNumber":12,"author":{"gitId":"branzuelajohn"},"content":""},{"lineNumber":13,"author":{"gitId":"branzuelajohn"},"content":"    @Test"},{"lineNumber":14,"author":{"gitId":"branzuelajohn"},"content":"    public void parseCommand_unknownCommand_exceptionThrown() {"},{"lineNumber":15,"author":{"gitId":"branzuelajohn"},"content":"        try {"},{"lineNumber":16,"author":{"gitId":"branzuelajohn"},"content":"            Command c \u003d Parser.parse(\"aaaa\");"},{"lineNumber":17,"author":{"gitId":"branzuelajohn"},"content":"        } catch (DukeException e) {"},{"lineNumber":18,"author":{"gitId":"branzuelajohn"},"content":"            assertTrue(e.getMessage().contains(\"☹ OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\"));"},{"lineNumber":19,"author":{"gitId":"branzuelajohn"},"content":"        }"},{"lineNumber":20,"author":{"gitId":"branzuelajohn"},"content":"    }"},{"lineNumber":21,"author":{"gitId":"branzuelajohn"},"content":""},{"lineNumber":22,"author":{"gitId":"branzuelajohn"},"content":"    @Test"},{"lineNumber":23,"author":{"gitId":"branzuelajohn"},"content":"    public void parseCommand_unspecifiedDoneCommand_exceptionThrown() {"},{"lineNumber":24,"author":{"gitId":"branzuelajohn"},"content":"        try {"},{"lineNumber":25,"author":{"gitId":"branzuelajohn"},"content":"            Command c \u003d Parser.parse(\"done\");"},{"lineNumber":26,"author":{"gitId":"branzuelajohn"},"content":"        } catch (DukeException e) {"},{"lineNumber":27,"author":{"gitId":"branzuelajohn"},"content":"            assertTrue(e.getMessage().contains(\"☹ OOPS!!! I don\u0027t know which task to mark as done.\"));"},{"lineNumber":28,"author":{"gitId":"branzuelajohn"},"content":"        }"},{"lineNumber":29,"author":{"gitId":"branzuelajohn"},"content":"    }"},{"lineNumber":30,"author":{"gitId":"branzuelajohn"},"content":""},{"lineNumber":31,"author":{"gitId":"branzuelajohn"},"content":""},{"lineNumber":32,"author":{"gitId":"branzuelajohn"},"content":"}"}],"authorContributionMap":{"branzuelajohn":32}},{"path":"src/test/java/ToDoTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"branzuelajohn"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;"},{"lineNumber":2,"author":{"gitId":"branzuelajohn"},"content":""},{"lineNumber":3,"author":{"gitId":"branzuelajohn"},"content":"import org.junit.jupiter.api.Test;"},{"lineNumber":4,"author":{"gitId":"branzuelajohn"},"content":""},{"lineNumber":5,"author":{"gitId":"branzuelajohn"},"content":"import duke.tasks.ToDo;"},{"lineNumber":6,"author":{"gitId":"branzuelajohn"},"content":""},{"lineNumber":7,"author":{"gitId":"branzuelajohn"},"content":"public class ToDoTest {"},{"lineNumber":8,"author":{"gitId":"branzuelajohn"},"content":"    @Test"},{"lineNumber":9,"author":{"gitId":"branzuelajohn"},"content":"    public void createToDo_withDescription_stringReturned() {"},{"lineNumber":10,"author":{"gitId":"branzuelajohn"},"content":"        ToDo test \u003d new ToDo(\"borrow book\");"},{"lineNumber":11,"author":{"gitId":"branzuelajohn"},"content":"        assertEquals(\"[T][✘] borrow book\", test.toString());"},{"lineNumber":12,"author":{"gitId":"branzuelajohn"},"content":"    }"},{"lineNumber":13,"author":{"gitId":"branzuelajohn"},"content":""},{"lineNumber":14,"author":{"gitId":"branzuelajohn"},"content":"    @Test"},{"lineNumber":15,"author":{"gitId":"branzuelajohn"},"content":"    public void createToDo_withNoDescription_stringReturned() {"},{"lineNumber":16,"author":{"gitId":"branzuelajohn"},"content":"        ToDo test \u003d new ToDo(\"\");"},{"lineNumber":17,"author":{"gitId":"branzuelajohn"},"content":"        assertEquals(\"[T][✘] \", test.toString());"},{"lineNumber":18,"author":{"gitId":"branzuelajohn"},"content":"    }"},{"lineNumber":19,"author":{"gitId":"branzuelajohn"},"content":"}"}],"authorContributionMap":{"branzuelajohn":19}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"branzuelajohn"},"content":"todo write essay"},{"lineNumber":2,"author":{"gitId":"branzuelajohn"},"content":"deadline complete essay /by August 6th"},{"lineNumber":3,"author":{"gitId":"branzuelajohn"},"content":"event project meeting /at 21st Jan 10PM"},{"lineNumber":4,"author":{"gitId":"branzuelajohn"},"content":"todo run"},{"lineNumber":5,"author":{"gitId":"branzuelajohn"},"content":"bye"}],"authorContributionMap":{"branzuelajohn":5}}]
