[{"path":"README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"deyixtan"},"content":"# User Guide"},{"lineNumber":2,"author":{"gitId":"deyixtan"},"content":"`Quackers` is a cross-platform chat-bot specialised in task management."},{"lineNumber":3,"author":{"gitId":"deyixtan"},"content":""},{"lineNumber":4,"author":{"gitId":"deyixtan"},"content":"---"},{"lineNumber":5,"author":{"gitId":"deyixtan"},"content":"## Quick start"},{"lineNumber":6,"author":{"gitId":"deyixtan"},"content":"1. Ensure you have Java `11` or above installed in your Computer."},{"lineNumber":7,"author":{"gitId":"deyixtan"},"content":"2. Download the latest `quackers.jar` from [here](https://github.com/deyixtan/ip/releases)."},{"lineNumber":8,"author":{"gitId":"deyixtan"},"content":"3. Copy the file to the folder you want to use as the home folder for your Quackers."},{"lineNumber":9,"author":{"gitId":"deyixtan"},"content":"4. Double-click the file to start the app. The GUI similar to the below should appear in a few seconds."},{"lineNumber":10,"author":{"gitId":"deyixtan"},"content":""},{"lineNumber":11,"author":{"gitId":"deyixtan"},"content":"![Image of Quackers](./docs/Ui.png)"},{"lineNumber":12,"author":{"gitId":"deyixtan"},"content":""},{"lineNumber":13,"author":{"gitId":"deyixtan"},"content":"---"},{"lineNumber":14,"author":{"gitId":"deyixtan"},"content":"## Features"},{"lineNumber":15,"author":{"gitId":"deyixtan"},"content":"### Viewing usage: `usage`"},{"lineNumber":16,"author":{"gitId":"deyixtan"},"content":"Shows a message explaining the different commands available with their arguments (if any)."},{"lineNumber":17,"author":{"gitId":"deyixtan"},"content":""},{"lineNumber":18,"author":{"gitId":"deyixtan"},"content":"Format: `usage`"},{"lineNumber":19,"author":{"gitId":"deyixtan"},"content":""},{"lineNumber":20,"author":{"gitId":"deyixtan"},"content":"---"},{"lineNumber":21,"author":{"gitId":"deyixtan"},"content":"### Exiting the program: `bye`"},{"lineNumber":22,"author":{"gitId":"deyixtan"},"content":"Exits the program."},{"lineNumber":23,"author":{"gitId":"deyixtan"},"content":""},{"lineNumber":24,"author":{"gitId":"deyixtan"},"content":"Format: `bye`"},{"lineNumber":25,"author":{"gitId":"deyixtan"},"content":""},{"lineNumber":26,"author":{"gitId":"deyixtan"},"content":"---"},{"lineNumber":27,"author":{"gitId":"deyixtan"},"content":"### Listing all tasks: `list`"},{"lineNumber":28,"author":{"gitId":"deyixtan"},"content":"Shows a list of all tasks being managed by Quackers."},{"lineNumber":29,"author":{"gitId":"deyixtan"},"content":""},{"lineNumber":30,"author":{"gitId":"deyixtan"},"content":"Format: `list`"},{"lineNumber":31,"author":{"gitId":"deyixtan"},"content":""},{"lineNumber":32,"author":{"gitId":"deyixtan"},"content":"---"},{"lineNumber":33,"author":{"gitId":"deyixtan"},"content":"### Locating task\\(s\\) with a keyword: `find`"},{"lineNumber":34,"author":{"gitId":"deyixtan"},"content":"Find tasks whose description contains the given keyword."},{"lineNumber":35,"author":{"gitId":"deyixtan"},"content":""},{"lineNumber":36,"author":{"gitId":"deyixtan"},"content":"Format: `find KEYWORD`"},{"lineNumber":37,"author":{"gitId":"deyixtan"},"content":"- The search is case-sensitive. e.g hans will not match Hans."},{"lineNumber":38,"author":{"gitId":"deyixtan"},"content":"- Only the task description is searched."},{"lineNumber":39,"author":{"gitId":"deyixtan"},"content":""},{"lineNumber":40,"author":{"gitId":"deyixtan"},"content":"---"},{"lineNumber":41,"author":{"gitId":"deyixtan"},"content":"### View statistics: `stats`"},{"lineNumber":42,"author":{"gitId":"deyixtan"},"content":"Shows a message describing the breakdown of the task list by their task type."},{"lineNumber":43,"author":{"gitId":"deyixtan"},"content":""},{"lineNumber":44,"author":{"gitId":"deyixtan"},"content":"Format: `stats`"},{"lineNumber":45,"author":{"gitId":"deyixtan"},"content":""},{"lineNumber":46,"author":{"gitId":"deyixtan"},"content":"---"},{"lineNumber":47,"author":{"gitId":"deyixtan"},"content":"### Adding a To-do task: `todo`"},{"lineNumber":48,"author":{"gitId":"deyixtan"},"content":"Adds a Todo task to the list of tasks being managed by Quackers."},{"lineNumber":49,"author":{"gitId":"deyixtan"},"content":""},{"lineNumber":50,"author":{"gitId":"deyixtan"},"content":"Format: `todo DESCRIPTION`"},{"lineNumber":51,"author":{"gitId":"deyixtan"},"content":""},{"lineNumber":52,"author":{"gitId":"deyixtan"},"content":"---"},{"lineNumber":53,"author":{"gitId":"deyixtan"},"content":"### Adding a Deadline task: `deadline`"},{"lineNumber":54,"author":{"gitId":"deyixtan"},"content":"Adds a Deadline task to the list of tasks being managed by Quackers."},{"lineNumber":55,"author":{"gitId":"deyixtan"},"content":""},{"lineNumber":56,"author":{"gitId":"deyixtan"},"content":"Format: `deadline DESCRIPTION /by DATETIME`"},{"lineNumber":57,"author":{"gitId":"deyixtan"},"content":"- The datetime argument must conform to the format `YYYY-MM-DD HH:mm`."},{"lineNumber":58,"author":{"gitId":"deyixtan"},"content":""},{"lineNumber":59,"author":{"gitId":"deyixtan"},"content":"---"},{"lineNumber":60,"author":{"gitId":"deyixtan"},"content":"### Adding an Event task: `event`"},{"lineNumber":61,"author":{"gitId":"deyixtan"},"content":"Adds a Event task to the list of tasks being managed by Quackers."},{"lineNumber":62,"author":{"gitId":"deyixtan"},"content":""},{"lineNumber":63,"author":{"gitId":"deyixtan"},"content":"Format: `event DESCRIPTION /at DATETIME`"},{"lineNumber":64,"author":{"gitId":"deyixtan"},"content":"- The datetime argument must conform to the format `YYYY-MM-DD HH:mm`."},{"lineNumber":65,"author":{"gitId":"deyixtan"},"content":""},{"lineNumber":66,"author":{"gitId":"deyixtan"},"content":"---"},{"lineNumber":67,"author":{"gitId":"deyixtan"},"content":"### Deleting a task: `delete`"},{"lineNumber":68,"author":{"gitId":"deyixtan"},"content":"Deletes the specified task from the list of tasks being managed by Quackers."},{"lineNumber":69,"author":{"gitId":"deyixtan"},"content":""},{"lineNumber":70,"author":{"gitId":"deyixtan"},"content":"Format: `delete INDEX`"},{"lineNumber":71,"author":{"gitId":"deyixtan"},"content":"- Deletes the task at the specified `INDEX`."},{"lineNumber":72,"author":{"gitId":"deyixtan"},"content":"- The index refers to the index number shown in the displayed task list."},{"lineNumber":73,"author":{"gitId":"deyixtan"},"content":"- The index must be a positive integer 1, 2, 3, ..."},{"lineNumber":74,"author":{"gitId":"deyixtan"},"content":""},{"lineNumber":75,"author":{"gitId":"deyixtan"},"content":"---"},{"lineNumber":76,"author":{"gitId":"deyixtan"},"content":"### Saving the data"},{"lineNumber":77,"author":{"gitId":"deyixtan"},"content":"Quackers data are saved in the hard disk automatically after any command that changes the data. There is no need to save manually."}],"authorContributionMap":{"deyixtan":77}},{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027checkstyle\u0027"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027"},{"lineNumber":6,"author":{"gitId":"-"},"content":"}"},{"lineNumber":7,"author":{"gitId":"-"},"content":""},{"lineNumber":8,"author":{"gitId":"-"},"content":"repositories {"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    mavenCentral()"},{"lineNumber":10,"author":{"gitId":"-"},"content":"}"},{"lineNumber":11,"author":{"gitId":"-"},"content":""},{"lineNumber":12,"author":{"gitId":"-"},"content":"dependencies {"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.5.0\u0027"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.5.0\u0027"},{"lineNumber":15,"author":{"gitId":"deyixtan"},"content":""},{"lineNumber":16,"author":{"gitId":"deyixtan"},"content":"    String javaFxVersion \u003d \u002711\u0027"},{"lineNumber":17,"author":{"gitId":"deyixtan"},"content":""},{"lineNumber":18,"author":{"gitId":"deyixtan"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027"},{"lineNumber":19,"author":{"gitId":"deyixtan"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"},{"lineNumber":20,"author":{"gitId":"deyixtan"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"},{"lineNumber":21,"author":{"gitId":"deyixtan"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027"},{"lineNumber":22,"author":{"gitId":"deyixtan"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"},{"lineNumber":23,"author":{"gitId":"deyixtan"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"},{"lineNumber":24,"author":{"gitId":"deyixtan"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027"},{"lineNumber":25,"author":{"gitId":"deyixtan"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"},{"lineNumber":26,"author":{"gitId":"deyixtan"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"},{"lineNumber":27,"author":{"gitId":"deyixtan"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027"},{"lineNumber":28,"author":{"gitId":"deyixtan"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"},{"lineNumber":29,"author":{"gitId":"deyixtan"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"},{"lineNumber":30,"author":{"gitId":"-"},"content":"}"},{"lineNumber":31,"author":{"gitId":"-"},"content":""},{"lineNumber":32,"author":{"gitId":"-"},"content":"test {"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    useJUnitPlatform()"},{"lineNumber":34,"author":{"gitId":"-"},"content":""},{"lineNumber":35,"author":{"gitId":"-"},"content":"    testLogging {"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\""},{"lineNumber":37,"author":{"gitId":"-"},"content":""},{"lineNumber":38,"author":{"gitId":"-"},"content":"        showExceptions true"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\""},{"lineNumber":40,"author":{"gitId":"-"},"content":"        showCauses true"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        showStackTraces true"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":44,"author":{"gitId":"-"},"content":"}"},{"lineNumber":45,"author":{"gitId":"-"},"content":""},{"lineNumber":46,"author":{"gitId":"-"},"content":"application {"},{"lineNumber":47,"author":{"gitId":"deyixtan"},"content":"    mainClassName \u003d \"Launcher\""},{"lineNumber":48,"author":{"gitId":"-"},"content":"}"},{"lineNumber":49,"author":{"gitId":"-"},"content":""},{"lineNumber":50,"author":{"gitId":"-"},"content":"shadowJar {"},{"lineNumber":51,"author":{"gitId":"deyixtan"},"content":"    archiveBaseName \u003d \"quackers\""},{"lineNumber":52,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null"},{"lineNumber":53,"author":{"gitId":"-"},"content":"}"},{"lineNumber":54,"author":{"gitId":"-"},"content":""},{"lineNumber":55,"author":{"gitId":"-"},"content":"checkstyle {"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    toolVersion \u003d \u00278.29\u0027"},{"lineNumber":57,"author":{"gitId":"-"},"content":"}"},{"lineNumber":58,"author":{"gitId":"-"},"content":""},{"lineNumber":59,"author":{"gitId":"-"},"content":"run{"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in"},{"lineNumber":61,"author":{"gitId":"deyixtan"},"content":"    enableAssertions \u003d true"},{"lineNumber":62,"author":{"gitId":"-"},"content":"}"}],"authorContributionMap":{"-":44,"deyixtan":18}},{"path":"docs/README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"# User Guide"},{"lineNumber":2,"author":{"gitId":"deyixtan"},"content":"`Quackers` is a cross-platform chat-bot specialised in task management."},{"lineNumber":3,"author":{"gitId":"-"},"content":""},{"lineNumber":4,"author":{"gitId":"deyixtan"},"content":"---"},{"lineNumber":5,"author":{"gitId":"deyixtan"},"content":"## Quick start"},{"lineNumber":6,"author":{"gitId":"deyixtan"},"content":"1. Ensure you have Java `11` or above installed in your Computer."},{"lineNumber":7,"author":{"gitId":"deyixtan"},"content":"2. Download the latest `quackers.jar` from [here](https://github.com/deyixtan/ip/releases)."},{"lineNumber":8,"author":{"gitId":"deyixtan"},"content":"3. Copy the file to the folder you want to use as the home folder for your Quackers."},{"lineNumber":9,"author":{"gitId":"deyixtan"},"content":"4. Double-click the file to start the app. The GUI similar to the below should appear in a few seconds."},{"lineNumber":10,"author":{"gitId":"-"},"content":""},{"lineNumber":11,"author":{"gitId":"deyixtan"},"content":"![Image of Quackers](./Ui.png)"},{"lineNumber":12,"author":{"gitId":"-"},"content":""},{"lineNumber":13,"author":{"gitId":"deyixtan"},"content":"---"},{"lineNumber":14,"author":{"gitId":"-"},"content":"## Features"},{"lineNumber":15,"author":{"gitId":"deyixtan"},"content":"### Viewing usage: `usage` "},{"lineNumber":16,"author":{"gitId":"deyixtan"},"content":"Shows a message explaining the different commands available with their arguments (if any)."},{"lineNumber":17,"author":{"gitId":"-"},"content":""},{"lineNumber":18,"author":{"gitId":"deyixtan"},"content":"Format: `usage`"},{"lineNumber":19,"author":{"gitId":"-"},"content":""},{"lineNumber":20,"author":{"gitId":"deyixtan"},"content":"---"},{"lineNumber":21,"author":{"gitId":"deyixtan"},"content":"### Exiting the program: `bye`"},{"lineNumber":22,"author":{"gitId":"deyixtan"},"content":"Exits the program."},{"lineNumber":23,"author":{"gitId":"-"},"content":""},{"lineNumber":24,"author":{"gitId":"deyixtan"},"content":"Format: `bye`"},{"lineNumber":25,"author":{"gitId":"-"},"content":""},{"lineNumber":26,"author":{"gitId":"deyixtan"},"content":"---"},{"lineNumber":27,"author":{"gitId":"deyixtan"},"content":"### Listing all tasks: `list`"},{"lineNumber":28,"author":{"gitId":"deyixtan"},"content":"Shows a list of all tasks being managed by Quackers."},{"lineNumber":29,"author":{"gitId":"-"},"content":""},{"lineNumber":30,"author":{"gitId":"deyixtan"},"content":"Format: `list`"},{"lineNumber":31,"author":{"gitId":"-"},"content":""},{"lineNumber":32,"author":{"gitId":"deyixtan"},"content":"---"},{"lineNumber":33,"author":{"gitId":"deyixtan"},"content":"### Locating task\\(s\\) with a keyword: `find`"},{"lineNumber":34,"author":{"gitId":"deyixtan"},"content":"Find tasks whose description contains the given keyword."},{"lineNumber":35,"author":{"gitId":"deyixtan"},"content":""},{"lineNumber":36,"author":{"gitId":"deyixtan"},"content":"Format: `find KEYWORD`"},{"lineNumber":37,"author":{"gitId":"deyixtan"},"content":"- The search is case-sensitive. e.g hans will not match Hans."},{"lineNumber":38,"author":{"gitId":"deyixtan"},"content":"- Only the task description is searched."},{"lineNumber":39,"author":{"gitId":"deyixtan"},"content":""},{"lineNumber":40,"author":{"gitId":"deyixtan"},"content":"---"},{"lineNumber":41,"author":{"gitId":"deyixtan"},"content":"### View statistics: `stats`"},{"lineNumber":42,"author":{"gitId":"deyixtan"},"content":"Shows a message describing the breakdown of the task list by their task type."},{"lineNumber":43,"author":{"gitId":"deyixtan"},"content":""},{"lineNumber":44,"author":{"gitId":"deyixtan"},"content":"Format: `stats`"},{"lineNumber":45,"author":{"gitId":"-"},"content":""},{"lineNumber":46,"author":{"gitId":"deyixtan"},"content":"---"},{"lineNumber":47,"author":{"gitId":"deyixtan"},"content":"### Adding a To-do task: `todo`"},{"lineNumber":48,"author":{"gitId":"deyixtan"},"content":"Adds a Todo task to the list of tasks being managed by Quackers."},{"lineNumber":49,"author":{"gitId":"-"},"content":""},{"lineNumber":50,"author":{"gitId":"deyixtan"},"content":"Format: `todo DESCRIPTION`"},{"lineNumber":51,"author":{"gitId":"-"},"content":""},{"lineNumber":52,"author":{"gitId":"deyixtan"},"content":"---"},{"lineNumber":53,"author":{"gitId":"deyixtan"},"content":"### Adding a Deadline task: `deadline`"},{"lineNumber":54,"author":{"gitId":"deyixtan"},"content":"Adds a Deadline task to the list of tasks being managed by Quackers."},{"lineNumber":55,"author":{"gitId":"-"},"content":""},{"lineNumber":56,"author":{"gitId":"deyixtan"},"content":"Format: `deadline DESCRIPTION /by DATETIME`"},{"lineNumber":57,"author":{"gitId":"deyixtan"},"content":"- The datetime argument must conform to the format `YYYY-MM-DD HH:mm`."},{"lineNumber":58,"author":{"gitId":"-"},"content":""},{"lineNumber":59,"author":{"gitId":"deyixtan"},"content":"---"},{"lineNumber":60,"author":{"gitId":"deyixtan"},"content":"### Adding an Event task: `event`"},{"lineNumber":61,"author":{"gitId":"deyixtan"},"content":"Adds a Event task to the list of tasks being managed by Quackers."},{"lineNumber":62,"author":{"gitId":"-"},"content":""},{"lineNumber":63,"author":{"gitId":"deyixtan"},"content":"Format: `event DESCRIPTION /at DATETIME`"},{"lineNumber":64,"author":{"gitId":"deyixtan"},"content":"- The datetime argument must conform to the format `YYYY-MM-DD HH:mm`."},{"lineNumber":65,"author":{"gitId":"-"},"content":""},{"lineNumber":66,"author":{"gitId":"deyixtan"},"content":"---"},{"lineNumber":67,"author":{"gitId":"deyixtan"},"content":"### Deleting a task: `delete`"},{"lineNumber":68,"author":{"gitId":"deyixtan"},"content":"Deletes the specified task from the list of tasks being managed by Quackers."},{"lineNumber":69,"author":{"gitId":"-"},"content":""},{"lineNumber":70,"author":{"gitId":"deyixtan"},"content":"Format: `delete INDEX`"},{"lineNumber":71,"author":{"gitId":"deyixtan"},"content":"- Deletes the task at the specified `INDEX`."},{"lineNumber":72,"author":{"gitId":"deyixtan"},"content":"- The index refers to the index number shown in the displayed task list."},{"lineNumber":73,"author":{"gitId":"deyixtan"},"content":"- The index must be a positive integer 1, 2, 3, ..."},{"lineNumber":74,"author":{"gitId":"deyixtan"},"content":""},{"lineNumber":75,"author":{"gitId":"deyixtan"},"content":"---"},{"lineNumber":76,"author":{"gitId":"deyixtan"},"content":"### Saving the data"},{"lineNumber":77,"author":{"gitId":"deyixtan"},"content":"Quackers data are saved in the hard disk automatically after any command that changes the data. There is no need to save manually."}],"authorContributionMap":{"-":19,"deyixtan":58}},{"path":"src/main/java/Launcher.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"deyixtan"},"content":"import javafx.application.Application;"},{"lineNumber":2,"author":{"gitId":"deyixtan"},"content":""},{"lineNumber":3,"author":{"gitId":"deyixtan"},"content":"/**"},{"lineNumber":4,"author":{"gitId":"deyixtan"},"content":" * A launcher class to workaround classpath issues."},{"lineNumber":5,"author":{"gitId":"deyixtan"},"content":" */"},{"lineNumber":6,"author":{"gitId":"deyixtan"},"content":"public class Launcher {"},{"lineNumber":7,"author":{"gitId":"deyixtan"},"content":""},{"lineNumber":8,"author":{"gitId":"deyixtan"},"content":"    /**"},{"lineNumber":9,"author":{"gitId":"deyixtan"},"content":"     * Entry point to Quackers."},{"lineNumber":10,"author":{"gitId":"deyixtan"},"content":"     *"},{"lineNumber":11,"author":{"gitId":"deyixtan"},"content":"     * @param args Arguments supplied to the application."},{"lineNumber":12,"author":{"gitId":"deyixtan"},"content":"     */"},{"lineNumber":13,"author":{"gitId":"deyixtan"},"content":"    public static void main(String[] args) {"},{"lineNumber":14,"author":{"gitId":"deyixtan"},"content":"        Application.launch(Main.class, args);"},{"lineNumber":15,"author":{"gitId":"deyixtan"},"content":"    }"},{"lineNumber":16,"author":{"gitId":"deyixtan"},"content":"}"}],"authorContributionMap":{"deyixtan":16}},{"path":"src/main/java/Main.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"deyixtan"},"content":"import java.io.IOException;"},{"lineNumber":2,"author":{"gitId":"deyixtan"},"content":""},{"lineNumber":3,"author":{"gitId":"deyixtan"},"content":"import javafx.application.Application;"},{"lineNumber":4,"author":{"gitId":"deyixtan"},"content":"import javafx.fxml.FXMLLoader;"},{"lineNumber":5,"author":{"gitId":"deyixtan"},"content":"import javafx.scene.Scene;"},{"lineNumber":6,"author":{"gitId":"deyixtan"},"content":"import javafx.scene.image.Image;"},{"lineNumber":7,"author":{"gitId":"deyixtan"},"content":"import javafx.scene.layout.AnchorPane;"},{"lineNumber":8,"author":{"gitId":"deyixtan"},"content":"import javafx.stage.Stage;"},{"lineNumber":9,"author":{"gitId":"deyixtan"},"content":"import quackers.Quackers;"},{"lineNumber":10,"author":{"gitId":"deyixtan"},"content":"import quackers.ui.javafx.MainWindow;"},{"lineNumber":11,"author":{"gitId":"deyixtan"},"content":""},{"lineNumber":12,"author":{"gitId":"deyixtan"},"content":"/**"},{"lineNumber":13,"author":{"gitId":"deyixtan"},"content":" * A GUI for Quackers using FXML."},{"lineNumber":14,"author":{"gitId":"deyixtan"},"content":" */"},{"lineNumber":15,"author":{"gitId":"deyixtan"},"content":"public class Main extends Application {"},{"lineNumber":16,"author":{"gitId":"deyixtan"},"content":""},{"lineNumber":17,"author":{"gitId":"deyixtan"},"content":"    private static final String TITLE \u003d \"Quackers\";"},{"lineNumber":18,"author":{"gitId":"deyixtan"},"content":"    private Image appIcon \u003d new Image(\"/images/AppIcon.png\");"},{"lineNumber":19,"author":{"gitId":"deyixtan"},"content":""},{"lineNumber":20,"author":{"gitId":"deyixtan"},"content":"    private Quackers quackers \u003d new Quackers();"},{"lineNumber":21,"author":{"gitId":"deyixtan"},"content":""},{"lineNumber":22,"author":{"gitId":"deyixtan"},"content":"    @Override"},{"lineNumber":23,"author":{"gitId":"deyixtan"},"content":"    public void start(Stage stage) {"},{"lineNumber":24,"author":{"gitId":"deyixtan"},"content":"        try {"},{"lineNumber":25,"author":{"gitId":"deyixtan"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader("},{"lineNumber":26,"author":{"gitId":"deyixtan"},"content":"                    Main.class.getResource(\"/view/MainWindow.fxml\"));"},{"lineNumber":27,"author":{"gitId":"deyixtan"},"content":"            AnchorPane ap \u003d fxmlLoader.load();"},{"lineNumber":28,"author":{"gitId":"deyixtan"},"content":"            Scene scene \u003d new Scene(ap);"},{"lineNumber":29,"author":{"gitId":"deyixtan"},"content":"            fxmlLoader.\u003cMainWindow\u003egetController().setQuackers(this.quackers);"},{"lineNumber":30,"author":{"gitId":"deyixtan"},"content":"            stage.setTitle(Main.TITLE);"},{"lineNumber":31,"author":{"gitId":"deyixtan"},"content":"            stage.setResizable(false);"},{"lineNumber":32,"author":{"gitId":"deyixtan"},"content":"            stage.getIcons().add(this.appIcon);"},{"lineNumber":33,"author":{"gitId":"deyixtan"},"content":"            stage.setScene(scene);"},{"lineNumber":34,"author":{"gitId":"deyixtan"},"content":"            stage.show();"},{"lineNumber":35,"author":{"gitId":"deyixtan"},"content":"        } catch (IOException e) {"},{"lineNumber":36,"author":{"gitId":"deyixtan"},"content":"            e.printStackTrace();"},{"lineNumber":37,"author":{"gitId":"deyixtan"},"content":"        }"},{"lineNumber":38,"author":{"gitId":"deyixtan"},"content":"    }"},{"lineNumber":39,"author":{"gitId":"deyixtan"},"content":"}"}],"authorContributionMap":{"deyixtan":39}},{"path":"src/main/java/quackers/Quackers.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"deyixtan"},"content":"package quackers;"},{"lineNumber":2,"author":{"gitId":"deyixtan"},"content":""},{"lineNumber":3,"author":{"gitId":"deyixtan"},"content":"import quackers.command.Command;"},{"lineNumber":4,"author":{"gitId":"deyixtan"},"content":"import quackers.command.CommandResponse;"},{"lineNumber":5,"author":{"gitId":"deyixtan"},"content":"import quackers.parser.CommandParser;"},{"lineNumber":6,"author":{"gitId":"deyixtan"},"content":"import quackers.storage.Storage;"},{"lineNumber":7,"author":{"gitId":"deyixtan"},"content":"import quackers.tasklist.TaskList;"},{"lineNumber":8,"author":{"gitId":"deyixtan"},"content":"import quackers.ui.Ui;"},{"lineNumber":9,"author":{"gitId":"deyixtan"},"content":""},{"lineNumber":10,"author":{"gitId":"deyixtan"},"content":"/**"},{"lineNumber":11,"author":{"gitId":"deyixtan"},"content":" * Represents the main logic used by Quackers."},{"lineNumber":12,"author":{"gitId":"deyixtan"},"content":" */"},{"lineNumber":13,"author":{"gitId":"deyixtan"},"content":"public class Quackers {"},{"lineNumber":14,"author":{"gitId":"deyixtan"},"content":""},{"lineNumber":15,"author":{"gitId":"deyixtan"},"content":"    private Storage storage;"},{"lineNumber":16,"author":{"gitId":"deyixtan"},"content":"    private TaskList tasks;"},{"lineNumber":17,"author":{"gitId":"deyixtan"},"content":""},{"lineNumber":18,"author":{"gitId":"deyixtan"},"content":"    /**"},{"lineNumber":19,"author":{"gitId":"deyixtan"},"content":"     * Constructs Quackers object with a fixed data file path."},{"lineNumber":20,"author":{"gitId":"deyixtan"},"content":"     */"},{"lineNumber":21,"author":{"gitId":"deyixtan"},"content":"    public Quackers() {"},{"lineNumber":22,"author":{"gitId":"deyixtan"},"content":"        this(\"data/tasks.txt\");"},{"lineNumber":23,"author":{"gitId":"deyixtan"},"content":"    }"},{"lineNumber":24,"author":{"gitId":"deyixtan"},"content":""},{"lineNumber":25,"author":{"gitId":"deyixtan"},"content":"    /**"},{"lineNumber":26,"author":{"gitId":"deyixtan"},"content":"     * Constructs Quackers object by specifying data file path."},{"lineNumber":27,"author":{"gitId":"deyixtan"},"content":"     *"},{"lineNumber":28,"author":{"gitId":"deyixtan"},"content":"     * @param filePath Path to data file."},{"lineNumber":29,"author":{"gitId":"deyixtan"},"content":"     */"},{"lineNumber":30,"author":{"gitId":"deyixtan"},"content":"    public Quackers(String filePath) {"},{"lineNumber":31,"author":{"gitId":"deyixtan"},"content":"        this.storage \u003d new Storage(filePath);"},{"lineNumber":32,"author":{"gitId":"deyixtan"},"content":"        try {"},{"lineNumber":33,"author":{"gitId":"deyixtan"},"content":"            this.tasks \u003d new TaskList(this.storage.load());"},{"lineNumber":34,"author":{"gitId":"deyixtan"},"content":"        } catch (QuackersException e) {"},{"lineNumber":35,"author":{"gitId":"deyixtan"},"content":"            this.tasks \u003d new TaskList();"},{"lineNumber":36,"author":{"gitId":"deyixtan"},"content":"        }"},{"lineNumber":37,"author":{"gitId":"deyixtan"},"content":"    }"},{"lineNumber":38,"author":{"gitId":"deyixtan"},"content":""},{"lineNumber":39,"author":{"gitId":"deyixtan"},"content":"    /**"},{"lineNumber":40,"author":{"gitId":"deyixtan"},"content":"     * Parses a raw command input text, executes the relevant Command and returns the response."},{"lineNumber":41,"author":{"gitId":"deyixtan"},"content":"     *"},{"lineNumber":42,"author":{"gitId":"deyixtan"},"content":"     * @param input Raw command input text."},{"lineNumber":43,"author":{"gitId":"deyixtan"},"content":"     * @return CommandResponse object."},{"lineNumber":44,"author":{"gitId":"deyixtan"},"content":"     */"},{"lineNumber":45,"author":{"gitId":"deyixtan"},"content":"    public CommandResponse getResponse(String input) {"},{"lineNumber":46,"author":{"gitId":"deyixtan"},"content":"        try {"},{"lineNumber":47,"author":{"gitId":"deyixtan"},"content":"            Command c \u003d CommandParser.getCommand(input);"},{"lineNumber":48,"author":{"gitId":"deyixtan"},"content":"            assert this.storage !\u003d null;"},{"lineNumber":49,"author":{"gitId":"deyixtan"},"content":"            assert this.tasks !\u003d null;"},{"lineNumber":50,"author":{"gitId":"deyixtan"},"content":"            return c.getResponse(this.tasks, this.storage);"},{"lineNumber":51,"author":{"gitId":"deyixtan"},"content":"        } catch (QuackersException e) {"},{"lineNumber":52,"author":{"gitId":"deyixtan"},"content":"            String message \u003d Ui.getErrorMessage(e.getMessage());"},{"lineNumber":53,"author":{"gitId":"deyixtan"},"content":"            return new CommandResponse(null, message, false);"},{"lineNumber":54,"author":{"gitId":"deyixtan"},"content":"        }"},{"lineNumber":55,"author":{"gitId":"deyixtan"},"content":"    }"},{"lineNumber":56,"author":{"gitId":"deyixtan"},"content":""},{"lineNumber":57,"author":{"gitId":"deyixtan"},"content":"    /**"},{"lineNumber":58,"author":{"gitId":"deyixtan"},"content":"     * Retrieves the Ui greeting."},{"lineNumber":59,"author":{"gitId":"deyixtan"},"content":"     *"},{"lineNumber":60,"author":{"gitId":"deyixtan"},"content":"     * @return Ui greeting."},{"lineNumber":61,"author":{"gitId":"deyixtan"},"content":"     */"},{"lineNumber":62,"author":{"gitId":"deyixtan"},"content":"    public String getGreeting() {"},{"lineNumber":63,"author":{"gitId":"deyixtan"},"content":"        return Ui.getGreeting();"},{"lineNumber":64,"author":{"gitId":"deyixtan"},"content":"    }"},{"lineNumber":65,"author":{"gitId":"deyixtan"},"content":""},{"lineNumber":66,"author":{"gitId":"deyixtan"},"content":"    /**"},{"lineNumber":67,"author":{"gitId":"deyixtan"},"content":"     * Retrieves the TaskList object."},{"lineNumber":68,"author":{"gitId":"deyixtan"},"content":"     *"},{"lineNumber":69,"author":{"gitId":"deyixtan"},"content":"     * @return TaskList object."},{"lineNumber":70,"author":{"gitId":"deyixtan"},"content":"     */"},{"lineNumber":71,"author":{"gitId":"deyixtan"},"content":"    public TaskList getTaskList() {"},{"lineNumber":72,"author":{"gitId":"deyixtan"},"content":"        return this.tasks;"},{"lineNumber":73,"author":{"gitId":"deyixtan"},"content":"    }"},{"lineNumber":74,"author":{"gitId":"-"},"content":"}"}],"authorContributionMap":{"-":1,"deyixtan":73}},{"path":"src/main/java/quackers/QuackersException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"deyixtan"},"content":"package quackers;"},{"lineNumber":2,"author":{"gitId":"deyixtan"},"content":""},{"lineNumber":3,"author":{"gitId":"deyixtan"},"content":"/**"},{"lineNumber":4,"author":{"gitId":"deyixtan"},"content":" * Represents the custom exception used by Quackers."},{"lineNumber":5,"author":{"gitId":"deyixtan"},"content":" */"},{"lineNumber":6,"author":{"gitId":"deyixtan"},"content":"public class QuackersException extends Exception {"},{"lineNumber":7,"author":{"gitId":"deyixtan"},"content":""},{"lineNumber":8,"author":{"gitId":"deyixtan"},"content":"    /**"},{"lineNumber":9,"author":{"gitId":"deyixtan"},"content":"     * Constructs a QuackersException object."},{"lineNumber":10,"author":{"gitId":"deyixtan"},"content":"     *"},{"lineNumber":11,"author":{"gitId":"deyixtan"},"content":"     * @param message Exception message."},{"lineNumber":12,"author":{"gitId":"deyixtan"},"content":"     */"},{"lineNumber":13,"author":{"gitId":"deyixtan"},"content":"    public QuackersException(String message) {"},{"lineNumber":14,"author":{"gitId":"deyixtan"},"content":"        super(message);"},{"lineNumber":15,"author":{"gitId":"deyixtan"},"content":"    }"},{"lineNumber":16,"author":{"gitId":"deyixtan"},"content":"}"}],"authorContributionMap":{"deyixtan":16}},{"path":"src/main/java/quackers/command/AddDeadlineCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"deyixtan"},"content":"package quackers.command;"},{"lineNumber":2,"author":{"gitId":"deyixtan"},"content":""},{"lineNumber":3,"author":{"gitId":"deyixtan"},"content":"import java.time.LocalDateTime;"},{"lineNumber":4,"author":{"gitId":"deyixtan"},"content":""},{"lineNumber":5,"author":{"gitId":"deyixtan"},"content":"import quackers.QuackersException;"},{"lineNumber":6,"author":{"gitId":"deyixtan"},"content":"import quackers.storage.Storage;"},{"lineNumber":7,"author":{"gitId":"deyixtan"},"content":"import quackers.task.Deadline;"},{"lineNumber":8,"author":{"gitId":"deyixtan"},"content":"import quackers.tasklist.TaskList;"},{"lineNumber":9,"author":{"gitId":"deyixtan"},"content":"import quackers.ui.Ui;"},{"lineNumber":10,"author":{"gitId":"deyixtan"},"content":""},{"lineNumber":11,"author":{"gitId":"deyixtan"},"content":"/**"},{"lineNumber":12,"author":{"gitId":"deyixtan"},"content":" * Represents the command to add a Deadline task."},{"lineNumber":13,"author":{"gitId":"deyixtan"},"content":" */"},{"lineNumber":14,"author":{"gitId":"deyixtan"},"content":"public class AddDeadlineCommand extends Command {"},{"lineNumber":15,"author":{"gitId":"deyixtan"},"content":""},{"lineNumber":16,"author":{"gitId":"deyixtan"},"content":"    private static final boolean toExit \u003d false;"},{"lineNumber":17,"author":{"gitId":"deyixtan"},"content":""},{"lineNumber":18,"author":{"gitId":"deyixtan"},"content":"    private Deadline deadline;"},{"lineNumber":19,"author":{"gitId":"deyixtan"},"content":""},{"lineNumber":20,"author":{"gitId":"deyixtan"},"content":"    /**"},{"lineNumber":21,"author":{"gitId":"deyixtan"},"content":"     * Constructs a AddDeadlineCommand object."},{"lineNumber":22,"author":{"gitId":"deyixtan"},"content":"     *"},{"lineNumber":23,"author":{"gitId":"deyixtan"},"content":"     * @param description Deadline description."},{"lineNumber":24,"author":{"gitId":"deyixtan"},"content":"     * @param dateTime Deadline DateTime object."},{"lineNumber":25,"author":{"gitId":"deyixtan"},"content":"     */"},{"lineNumber":26,"author":{"gitId":"deyixtan"},"content":"    public AddDeadlineCommand(String description, LocalDateTime dateTime) {"},{"lineNumber":27,"author":{"gitId":"deyixtan"},"content":"        this.deadline \u003d new Deadline(description, dateTime);"},{"lineNumber":28,"author":{"gitId":"deyixtan"},"content":"    }"},{"lineNumber":29,"author":{"gitId":"deyixtan"},"content":""},{"lineNumber":30,"author":{"gitId":"deyixtan"},"content":"    /**"},{"lineNumber":31,"author":{"gitId":"deyixtan"},"content":"     * Executes the command and returns a response."},{"lineNumber":32,"author":{"gitId":"deyixtan"},"content":"     *"},{"lineNumber":33,"author":{"gitId":"deyixtan"},"content":"     * @param tasks Core TaskList object."},{"lineNumber":34,"author":{"gitId":"deyixtan"},"content":"     * @param storage Core Storage object."},{"lineNumber":35,"author":{"gitId":"deyixtan"},"content":"     * @return CommandResponse object."},{"lineNumber":36,"author":{"gitId":"deyixtan"},"content":"     * @throws QuackersException If unable to save data to disk."},{"lineNumber":37,"author":{"gitId":"deyixtan"},"content":"     */"},{"lineNumber":38,"author":{"gitId":"deyixtan"},"content":"    @Override"},{"lineNumber":39,"author":{"gitId":"deyixtan"},"content":"    public CommandResponse getResponse(TaskList tasks, Storage storage) throws QuackersException {"},{"lineNumber":40,"author":{"gitId":"deyixtan"},"content":"        tasks.addTask(this.deadline);"},{"lineNumber":41,"author":{"gitId":"deyixtan"},"content":"        storage.save(tasks);"},{"lineNumber":42,"author":{"gitId":"deyixtan"},"content":""},{"lineNumber":43,"author":{"gitId":"deyixtan"},"content":"        String message \u003d Ui.getAddTaskSuccess(this.deadline);"},{"lineNumber":44,"author":{"gitId":"deyixtan"},"content":"        return new CommandResponse(AddDeadlineCommand.class, message, AddDeadlineCommand.toExit);"},{"lineNumber":45,"author":{"gitId":"deyixtan"},"content":"    }"},{"lineNumber":46,"author":{"gitId":"deyixtan"},"content":"}"}],"authorContributionMap":{"deyixtan":46}},{"path":"src/main/java/quackers/command/AddEventCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"deyixtan"},"content":"package quackers.command;"},{"lineNumber":2,"author":{"gitId":"deyixtan"},"content":""},{"lineNumber":3,"author":{"gitId":"deyixtan"},"content":"import java.time.LocalDateTime;"},{"lineNumber":4,"author":{"gitId":"deyixtan"},"content":""},{"lineNumber":5,"author":{"gitId":"deyixtan"},"content":"import quackers.QuackersException;"},{"lineNumber":6,"author":{"gitId":"deyixtan"},"content":"import quackers.storage.Storage;"},{"lineNumber":7,"author":{"gitId":"deyixtan"},"content":"import quackers.task.Event;"},{"lineNumber":8,"author":{"gitId":"deyixtan"},"content":"import quackers.tasklist.TaskList;"},{"lineNumber":9,"author":{"gitId":"deyixtan"},"content":"import quackers.ui.Ui;"},{"lineNumber":10,"author":{"gitId":"deyixtan"},"content":""},{"lineNumber":11,"author":{"gitId":"deyixtan"},"content":"/**"},{"lineNumber":12,"author":{"gitId":"deyixtan"},"content":" * Represents the command to add an Event task."},{"lineNumber":13,"author":{"gitId":"deyixtan"},"content":" */"},{"lineNumber":14,"author":{"gitId":"deyixtan"},"content":"public class AddEventCommand extends Command {"},{"lineNumber":15,"author":{"gitId":"deyixtan"},"content":""},{"lineNumber":16,"author":{"gitId":"deyixtan"},"content":"    private static final boolean toExit \u003d false;"},{"lineNumber":17,"author":{"gitId":"deyixtan"},"content":""},{"lineNumber":18,"author":{"gitId":"deyixtan"},"content":"    private Event event;"},{"lineNumber":19,"author":{"gitId":"deyixtan"},"content":""},{"lineNumber":20,"author":{"gitId":"deyixtan"},"content":"    /**"},{"lineNumber":21,"author":{"gitId":"deyixtan"},"content":"     * Constructs a AddEventCommand object."},{"lineNumber":22,"author":{"gitId":"deyixtan"},"content":"     *"},{"lineNumber":23,"author":{"gitId":"deyixtan"},"content":"     * @param description Event description."},{"lineNumber":24,"author":{"gitId":"deyixtan"},"content":"     * @param dateTime Event DateTime object."},{"lineNumber":25,"author":{"gitId":"deyixtan"},"content":"     */"},{"lineNumber":26,"author":{"gitId":"deyixtan"},"content":"    public AddEventCommand(String description, LocalDateTime dateTime) {"},{"lineNumber":27,"author":{"gitId":"deyixtan"},"content":"        this.event \u003d new Event(description, dateTime);"},{"lineNumber":28,"author":{"gitId":"deyixtan"},"content":"    }"},{"lineNumber":29,"author":{"gitId":"deyixtan"},"content":""},{"lineNumber":30,"author":{"gitId":"deyixtan"},"content":"    /**"},{"lineNumber":31,"author":{"gitId":"deyixtan"},"content":"     * Executes the command and returns a response."},{"lineNumber":32,"author":{"gitId":"deyixtan"},"content":"     *"},{"lineNumber":33,"author":{"gitId":"deyixtan"},"content":"     * @param tasks Core TaskList object."},{"lineNumber":34,"author":{"gitId":"deyixtan"},"content":"     * @param storage Core Storage object."},{"lineNumber":35,"author":{"gitId":"deyixtan"},"content":"     * @return CommandResponse object."},{"lineNumber":36,"author":{"gitId":"deyixtan"},"content":"     * @throws QuackersException If unable to save data to disk."},{"lineNumber":37,"author":{"gitId":"deyixtan"},"content":"     */"},{"lineNumber":38,"author":{"gitId":"deyixtan"},"content":"    @Override"},{"lineNumber":39,"author":{"gitId":"deyixtan"},"content":"    public CommandResponse getResponse(TaskList tasks, Storage storage) throws QuackersException {"},{"lineNumber":40,"author":{"gitId":"deyixtan"},"content":"        tasks.addTask(this.event);"},{"lineNumber":41,"author":{"gitId":"deyixtan"},"content":"        storage.save(tasks);"},{"lineNumber":42,"author":{"gitId":"deyixtan"},"content":""},{"lineNumber":43,"author":{"gitId":"deyixtan"},"content":"        String message \u003d Ui.getAddTaskSuccess(this.event);"},{"lineNumber":44,"author":{"gitId":"deyixtan"},"content":"        return new CommandResponse(AddEventCommand.class, message, AddEventCommand.toExit);"},{"lineNumber":45,"author":{"gitId":"deyixtan"},"content":"    }"},{"lineNumber":46,"author":{"gitId":"deyixtan"},"content":"}"}],"authorContributionMap":{"deyixtan":46}},{"path":"src/main/java/quackers/command/AddTodoCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"deyixtan"},"content":"package quackers.command;"},{"lineNumber":2,"author":{"gitId":"deyixtan"},"content":""},{"lineNumber":3,"author":{"gitId":"deyixtan"},"content":"import quackers.QuackersException;"},{"lineNumber":4,"author":{"gitId":"deyixtan"},"content":"import quackers.storage.Storage;"},{"lineNumber":5,"author":{"gitId":"deyixtan"},"content":"import quackers.task.Todo;"},{"lineNumber":6,"author":{"gitId":"deyixtan"},"content":"import quackers.tasklist.TaskList;"},{"lineNumber":7,"author":{"gitId":"deyixtan"},"content":"import quackers.ui.Ui;"},{"lineNumber":8,"author":{"gitId":"deyixtan"},"content":""},{"lineNumber":9,"author":{"gitId":"deyixtan"},"content":"/**"},{"lineNumber":10,"author":{"gitId":"deyixtan"},"content":" * Represents the command to add a To-do task."},{"lineNumber":11,"author":{"gitId":"deyixtan"},"content":" */"},{"lineNumber":12,"author":{"gitId":"deyixtan"},"content":"public class AddTodoCommand extends Command {"},{"lineNumber":13,"author":{"gitId":"deyixtan"},"content":""},{"lineNumber":14,"author":{"gitId":"deyixtan"},"content":"    private static final boolean toExit \u003d false;"},{"lineNumber":15,"author":{"gitId":"deyixtan"},"content":""},{"lineNumber":16,"author":{"gitId":"deyixtan"},"content":"    private Todo todo;"},{"lineNumber":17,"author":{"gitId":"deyixtan"},"content":""},{"lineNumber":18,"author":{"gitId":"deyixtan"},"content":"    /**"},{"lineNumber":19,"author":{"gitId":"deyixtan"},"content":"     * Constructs a AddTodoCommand object."},{"lineNumber":20,"author":{"gitId":"deyixtan"},"content":"     *"},{"lineNumber":21,"author":{"gitId":"deyixtan"},"content":"     * @param description To-do description."},{"lineNumber":22,"author":{"gitId":"deyixtan"},"content":"     */"},{"lineNumber":23,"author":{"gitId":"deyixtan"},"content":"    public AddTodoCommand(String description) {"},{"lineNumber":24,"author":{"gitId":"deyixtan"},"content":"        this.todo \u003d new Todo(description);"},{"lineNumber":25,"author":{"gitId":"deyixtan"},"content":"    }"},{"lineNumber":26,"author":{"gitId":"deyixtan"},"content":""},{"lineNumber":27,"author":{"gitId":"deyixtan"},"content":"    /**"},{"lineNumber":28,"author":{"gitId":"deyixtan"},"content":"     * Executes the command and returns a response."},{"lineNumber":29,"author":{"gitId":"deyixtan"},"content":"     *"},{"lineNumber":30,"author":{"gitId":"deyixtan"},"content":"     * @param tasks Core TaskList object."},{"lineNumber":31,"author":{"gitId":"deyixtan"},"content":"     * @param storage Core Storage object."},{"lineNumber":32,"author":{"gitId":"deyixtan"},"content":"     * @return CommandResponse object."},{"lineNumber":33,"author":{"gitId":"deyixtan"},"content":"     * @throws QuackersException If unable to save data to disk."},{"lineNumber":34,"author":{"gitId":"deyixtan"},"content":"     */"},{"lineNumber":35,"author":{"gitId":"deyixtan"},"content":"    @Override"},{"lineNumber":36,"author":{"gitId":"deyixtan"},"content":"    public CommandResponse getResponse(TaskList tasks, Storage storage) throws QuackersException {"},{"lineNumber":37,"author":{"gitId":"deyixtan"},"content":"        tasks.addTask(this.todo);"},{"lineNumber":38,"author":{"gitId":"deyixtan"},"content":"        storage.save(tasks);"},{"lineNumber":39,"author":{"gitId":"deyixtan"},"content":""},{"lineNumber":40,"author":{"gitId":"deyixtan"},"content":"        String message \u003d Ui.getAddTaskSuccess(this.todo);"},{"lineNumber":41,"author":{"gitId":"deyixtan"},"content":"        return new CommandResponse(AddTodoCommand.class, message, AddTodoCommand.toExit);"},{"lineNumber":42,"author":{"gitId":"deyixtan"},"content":"    }"},{"lineNumber":43,"author":{"gitId":"deyixtan"},"content":"}"}],"authorContributionMap":{"deyixtan":43}},{"path":"src/main/java/quackers/command/ByeCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"deyixtan"},"content":"package quackers.command;"},{"lineNumber":2,"author":{"gitId":"deyixtan"},"content":""},{"lineNumber":3,"author":{"gitId":"deyixtan"},"content":"import quackers.storage.Storage;"},{"lineNumber":4,"author":{"gitId":"deyixtan"},"content":"import quackers.tasklist.TaskList;"},{"lineNumber":5,"author":{"gitId":"deyixtan"},"content":"import quackers.ui.Ui;"},{"lineNumber":6,"author":{"gitId":"deyixtan"},"content":""},{"lineNumber":7,"author":{"gitId":"deyixtan"},"content":"/**"},{"lineNumber":8,"author":{"gitId":"deyixtan"},"content":" * Represents the command to exit program."},{"lineNumber":9,"author":{"gitId":"deyixtan"},"content":" */"},{"lineNumber":10,"author":{"gitId":"deyixtan"},"content":"public class ByeCommand extends Command {"},{"lineNumber":11,"author":{"gitId":"deyixtan"},"content":""},{"lineNumber":12,"author":{"gitId":"deyixtan"},"content":"    private static final boolean toExit \u003d true;"},{"lineNumber":13,"author":{"gitId":"deyixtan"},"content":""},{"lineNumber":14,"author":{"gitId":"deyixtan"},"content":"    /**"},{"lineNumber":15,"author":{"gitId":"deyixtan"},"content":"     * Executes the command and returns a response."},{"lineNumber":16,"author":{"gitId":"deyixtan"},"content":"     *"},{"lineNumber":17,"author":{"gitId":"deyixtan"},"content":"     * @param tasks Core TaskList object."},{"lineNumber":18,"author":{"gitId":"deyixtan"},"content":"     * @param storage Core Storage object."},{"lineNumber":19,"author":{"gitId":"deyixtan"},"content":"     * @return CommandResponse object."},{"lineNumber":20,"author":{"gitId":"deyixtan"},"content":"     */"},{"lineNumber":21,"author":{"gitId":"deyixtan"},"content":"    @Override"},{"lineNumber":22,"author":{"gitId":"deyixtan"},"content":"    public CommandResponse getResponse(TaskList tasks, Storage storage) {"},{"lineNumber":23,"author":{"gitId":"deyixtan"},"content":"        String message \u003d Ui.getByeSuccess();"},{"lineNumber":24,"author":{"gitId":"deyixtan"},"content":"        return new CommandResponse(ByeCommand.class, message, ByeCommand.toExit);"},{"lineNumber":25,"author":{"gitId":"deyixtan"},"content":"    }"},{"lineNumber":26,"author":{"gitId":"deyixtan"},"content":"}"}],"authorContributionMap":{"deyixtan":26}},{"path":"src/main/java/quackers/command/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"deyixtan"},"content":"package quackers.command;"},{"lineNumber":2,"author":{"gitId":"deyixtan"},"content":""},{"lineNumber":3,"author":{"gitId":"deyixtan"},"content":"import quackers.QuackersException;"},{"lineNumber":4,"author":{"gitId":"deyixtan"},"content":"import quackers.storage.Storage;"},{"lineNumber":5,"author":{"gitId":"deyixtan"},"content":"import quackers.tasklist.TaskList;"},{"lineNumber":6,"author":{"gitId":"deyixtan"},"content":""},{"lineNumber":7,"author":{"gitId":"deyixtan"},"content":"/**"},{"lineNumber":8,"author":{"gitId":"deyixtan"},"content":" * Represents the abstract command."},{"lineNumber":9,"author":{"gitId":"deyixtan"},"content":" */"},{"lineNumber":10,"author":{"gitId":"deyixtan"},"content":"public abstract class Command {"},{"lineNumber":11,"author":{"gitId":"deyixtan"},"content":""},{"lineNumber":12,"author":{"gitId":"deyixtan"},"content":"    public abstract CommandResponse getResponse(TaskList tasks, Storage storage) throws QuackersException;"},{"lineNumber":13,"author":{"gitId":"deyixtan"},"content":"}"}],"authorContributionMap":{"deyixtan":13}},{"path":"src/main/java/quackers/command/CommandResponse.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"deyixtan"},"content":"package quackers.command;"},{"lineNumber":2,"author":{"gitId":"deyixtan"},"content":""},{"lineNumber":3,"author":{"gitId":"deyixtan"},"content":"/**"},{"lineNumber":4,"author":{"gitId":"deyixtan"},"content":" * Represents the response of a command execution."},{"lineNumber":5,"author":{"gitId":"deyixtan"},"content":" */"},{"lineNumber":6,"author":{"gitId":"deyixtan"},"content":"public class CommandResponse {"},{"lineNumber":7,"author":{"gitId":"deyixtan"},"content":""},{"lineNumber":8,"author":{"gitId":"deyixtan"},"content":"    private Class\u003c? extends Command\u003e cls;"},{"lineNumber":9,"author":{"gitId":"deyixtan"},"content":"    private String message;"},{"lineNumber":10,"author":{"gitId":"deyixtan"},"content":"    private boolean toExit;"},{"lineNumber":11,"author":{"gitId":"deyixtan"},"content":""},{"lineNumber":12,"author":{"gitId":"deyixtan"},"content":"    /**"},{"lineNumber":13,"author":{"gitId":"deyixtan"},"content":"     * Constructs a CommandResponse object."},{"lineNumber":14,"author":{"gitId":"deyixtan"},"content":"     *"},{"lineNumber":15,"author":{"gitId":"deyixtan"},"content":"     * @param cls"},{"lineNumber":16,"author":{"gitId":"deyixtan"},"content":"     * @param message Response message."},{"lineNumber":17,"author":{"gitId":"deyixtan"},"content":"     * @param toExit Terminate program after command execution."},{"lineNumber":18,"author":{"gitId":"deyixtan"},"content":"     */"},{"lineNumber":19,"author":{"gitId":"deyixtan"},"content":"    public CommandResponse(Class\u003c? extends Command\u003e cls, String message, boolean toExit) {"},{"lineNumber":20,"author":{"gitId":"deyixtan"},"content":"        this.cls \u003d cls;"},{"lineNumber":21,"author":{"gitId":"deyixtan"},"content":"        this.message \u003d message;"},{"lineNumber":22,"author":{"gitId":"deyixtan"},"content":"        this.toExit \u003d toExit;"},{"lineNumber":23,"author":{"gitId":"deyixtan"},"content":"    }"},{"lineNumber":24,"author":{"gitId":"deyixtan"},"content":""},{"lineNumber":25,"author":{"gitId":"deyixtan"},"content":"    /**"},{"lineNumber":26,"author":{"gitId":"deyixtan"},"content":"     * Returns the class type of the command."},{"lineNumber":27,"author":{"gitId":"deyixtan"},"content":"     *"},{"lineNumber":28,"author":{"gitId":"deyixtan"},"content":"     * @return Command class type."},{"lineNumber":29,"author":{"gitId":"deyixtan"},"content":"     */"},{"lineNumber":30,"author":{"gitId":"deyixtan"},"content":"    public Class\u003c? extends Command\u003e getCommandClass() {"},{"lineNumber":31,"author":{"gitId":"deyixtan"},"content":"        return this.cls;"},{"lineNumber":32,"author":{"gitId":"deyixtan"},"content":"    }"},{"lineNumber":33,"author":{"gitId":"deyixtan"},"content":""},{"lineNumber":34,"author":{"gitId":"deyixtan"},"content":"    /**"},{"lineNumber":35,"author":{"gitId":"deyixtan"},"content":"     * Returns a boolean to check if the program terminates after command execution."},{"lineNumber":36,"author":{"gitId":"deyixtan"},"content":"     *"},{"lineNumber":37,"author":{"gitId":"deyixtan"},"content":"     * @return Command class type."},{"lineNumber":38,"author":{"gitId":"deyixtan"},"content":"     */"},{"lineNumber":39,"author":{"gitId":"deyixtan"},"content":"    public boolean canExit() {"},{"lineNumber":40,"author":{"gitId":"deyixtan"},"content":"        return this.toExit;"},{"lineNumber":41,"author":{"gitId":"deyixtan"},"content":"    }"},{"lineNumber":42,"author":{"gitId":"deyixtan"},"content":""},{"lineNumber":43,"author":{"gitId":"deyixtan"},"content":"    /**"},{"lineNumber":44,"author":{"gitId":"deyixtan"},"content":"     * Returns the response message."},{"lineNumber":45,"author":{"gitId":"deyixtan"},"content":"     *"},{"lineNumber":46,"author":{"gitId":"deyixtan"},"content":"     * @return Response message."},{"lineNumber":47,"author":{"gitId":"deyixtan"},"content":"     */"},{"lineNumber":48,"author":{"gitId":"deyixtan"},"content":"    @Override"},{"lineNumber":49,"author":{"gitId":"deyixtan"},"content":"    public String toString() {"},{"lineNumber":50,"author":{"gitId":"deyixtan"},"content":"        return this.message;"},{"lineNumber":51,"author":{"gitId":"deyixtan"},"content":"    }"},{"lineNumber":52,"author":{"gitId":"deyixtan"},"content":"}"}],"authorContributionMap":{"deyixtan":52}},{"path":"src/main/java/quackers/command/DeleteTaskCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"deyixtan"},"content":"package quackers.command;"},{"lineNumber":2,"author":{"gitId":"deyixtan"},"content":""},{"lineNumber":3,"author":{"gitId":"deyixtan"},"content":"import quackers.QuackersException;"},{"lineNumber":4,"author":{"gitId":"deyixtan"},"content":"import quackers.storage.Storage;"},{"lineNumber":5,"author":{"gitId":"deyixtan"},"content":"import quackers.task.Task;"},{"lineNumber":6,"author":{"gitId":"deyixtan"},"content":"import quackers.tasklist.TaskList;"},{"lineNumber":7,"author":{"gitId":"deyixtan"},"content":"import quackers.ui.Ui;"},{"lineNumber":8,"author":{"gitId":"deyixtan"},"content":""},{"lineNumber":9,"author":{"gitId":"deyixtan"},"content":"/**"},{"lineNumber":10,"author":{"gitId":"deyixtan"},"content":" * Represents the command to delete a task."},{"lineNumber":11,"author":{"gitId":"deyixtan"},"content":" */"},{"lineNumber":12,"author":{"gitId":"deyixtan"},"content":"public class DeleteTaskCommand extends Command {"},{"lineNumber":13,"author":{"gitId":"deyixtan"},"content":""},{"lineNumber":14,"author":{"gitId":"deyixtan"},"content":"    private static final boolean toExit \u003d false;"},{"lineNumber":15,"author":{"gitId":"deyixtan"},"content":""},{"lineNumber":16,"author":{"gitId":"deyixtan"},"content":"    private int taskIndex;"},{"lineNumber":17,"author":{"gitId":"deyixtan"},"content":""},{"lineNumber":18,"author":{"gitId":"deyixtan"},"content":"    /**"},{"lineNumber":19,"author":{"gitId":"deyixtan"},"content":"     * Constructs a DeleteTaskCommand object."},{"lineNumber":20,"author":{"gitId":"deyixtan"},"content":"     *"},{"lineNumber":21,"author":{"gitId":"deyixtan"},"content":"     * @param taskIndex Index of the task to be deleted."},{"lineNumber":22,"author":{"gitId":"deyixtan"},"content":"     */"},{"lineNumber":23,"author":{"gitId":"deyixtan"},"content":"    public DeleteTaskCommand(int taskIndex) {"},{"lineNumber":24,"author":{"gitId":"deyixtan"},"content":"        this.taskIndex \u003d taskIndex;"},{"lineNumber":25,"author":{"gitId":"deyixtan"},"content":"    }"},{"lineNumber":26,"author":{"gitId":"deyixtan"},"content":""},{"lineNumber":27,"author":{"gitId":"deyixtan"},"content":"    /**"},{"lineNumber":28,"author":{"gitId":"deyixtan"},"content":"     * Executes the command and returns a response."},{"lineNumber":29,"author":{"gitId":"deyixtan"},"content":"     *"},{"lineNumber":30,"author":{"gitId":"deyixtan"},"content":"     * @param tasks Core TaskList object."},{"lineNumber":31,"author":{"gitId":"deyixtan"},"content":"     * @param storage Core Storage object."},{"lineNumber":32,"author":{"gitId":"deyixtan"},"content":"     * @return CommandResponse object."},{"lineNumber":33,"author":{"gitId":"deyixtan"},"content":"     * @throws QuackersException If specified invalid index, or unable to save data to disk."},{"lineNumber":34,"author":{"gitId":"deyixtan"},"content":"     */"},{"lineNumber":35,"author":{"gitId":"deyixtan"},"content":"    @Override"},{"lineNumber":36,"author":{"gitId":"deyixtan"},"content":"    public CommandResponse getResponse(TaskList tasks, Storage storage) throws QuackersException {"},{"lineNumber":37,"author":{"gitId":"deyixtan"},"content":"        Task task \u003d tasks.deleteTask(this.taskIndex);"},{"lineNumber":38,"author":{"gitId":"deyixtan"},"content":"        storage.save(tasks);"},{"lineNumber":39,"author":{"gitId":"deyixtan"},"content":""},{"lineNumber":40,"author":{"gitId":"deyixtan"},"content":"        String message \u003d Ui.getDeleteTaskSuccess(task);"},{"lineNumber":41,"author":{"gitId":"deyixtan"},"content":"        return new CommandResponse(DeleteTaskCommand.class, message, DeleteTaskCommand.toExit);"},{"lineNumber":42,"author":{"gitId":"deyixtan"},"content":"    }"},{"lineNumber":43,"author":{"gitId":"deyixtan"},"content":"}"}],"authorContributionMap":{"deyixtan":43}},{"path":"src/main/java/quackers/command/FindTasksCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"deyixtan"},"content":"package quackers.command;"},{"lineNumber":2,"author":{"gitId":"deyixtan"},"content":""},{"lineNumber":3,"author":{"gitId":"deyixtan"},"content":"import quackers.storage.Storage;"},{"lineNumber":4,"author":{"gitId":"deyixtan"},"content":"import quackers.tasklist.TaskList;"},{"lineNumber":5,"author":{"gitId":"deyixtan"},"content":"import quackers.ui.Ui;"},{"lineNumber":6,"author":{"gitId":"deyixtan"},"content":""},{"lineNumber":7,"author":{"gitId":"deyixtan"},"content":"/**"},{"lineNumber":8,"author":{"gitId":"deyixtan"},"content":" * Represents the command to find tasks."},{"lineNumber":9,"author":{"gitId":"deyixtan"},"content":" */"},{"lineNumber":10,"author":{"gitId":"deyixtan"},"content":"public class FindTasksCommand extends Command {"},{"lineNumber":11,"author":{"gitId":"deyixtan"},"content":""},{"lineNumber":12,"author":{"gitId":"deyixtan"},"content":"    private static final boolean toExit \u003d false;"},{"lineNumber":13,"author":{"gitId":"deyixtan"},"content":""},{"lineNumber":14,"author":{"gitId":"deyixtan"},"content":"    private String keyword;"},{"lineNumber":15,"author":{"gitId":"deyixtan"},"content":""},{"lineNumber":16,"author":{"gitId":"deyixtan"},"content":"    /**"},{"lineNumber":17,"author":{"gitId":"deyixtan"},"content":"     * Constructs a FindTasksCommand object."},{"lineNumber":18,"author":{"gitId":"deyixtan"},"content":"     *"},{"lineNumber":19,"author":{"gitId":"deyixtan"},"content":"     * @param keyword Keyword to search."},{"lineNumber":20,"author":{"gitId":"deyixtan"},"content":"     */"},{"lineNumber":21,"author":{"gitId":"deyixtan"},"content":"    public FindTasksCommand(String keyword) {"},{"lineNumber":22,"author":{"gitId":"deyixtan"},"content":"        this.keyword \u003d keyword;"},{"lineNumber":23,"author":{"gitId":"deyixtan"},"content":"    }"},{"lineNumber":24,"author":{"gitId":"deyixtan"},"content":""},{"lineNumber":25,"author":{"gitId":"deyixtan"},"content":"    /**"},{"lineNumber":26,"author":{"gitId":"deyixtan"},"content":"     * Executes the command and returns a response."},{"lineNumber":27,"author":{"gitId":"deyixtan"},"content":"     *"},{"lineNumber":28,"author":{"gitId":"deyixtan"},"content":"     * @param tasks Core TaskList object."},{"lineNumber":29,"author":{"gitId":"deyixtan"},"content":"     * @param storage Core Storage object."},{"lineNumber":30,"author":{"gitId":"deyixtan"},"content":"     * @return CommandResponse object."},{"lineNumber":31,"author":{"gitId":"deyixtan"},"content":"     */"},{"lineNumber":32,"author":{"gitId":"deyixtan"},"content":"    @Override"},{"lineNumber":33,"author":{"gitId":"deyixtan"},"content":"    public CommandResponse getResponse(TaskList tasks, Storage storage) {"},{"lineNumber":34,"author":{"gitId":"deyixtan"},"content":"        String message \u003d Ui.getTaskList(tasks.findTasks(this.keyword));"},{"lineNumber":35,"author":{"gitId":"deyixtan"},"content":"        return new CommandResponse(FindTasksCommand.class, message, FindTasksCommand.toExit);"},{"lineNumber":36,"author":{"gitId":"deyixtan"},"content":"    }"},{"lineNumber":37,"author":{"gitId":"deyixtan"},"content":"}"}],"authorContributionMap":{"deyixtan":37}},{"path":"src/main/java/quackers/command/ListTasksCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"deyixtan"},"content":"package quackers.command;"},{"lineNumber":2,"author":{"gitId":"deyixtan"},"content":""},{"lineNumber":3,"author":{"gitId":"deyixtan"},"content":"import quackers.storage.Storage;"},{"lineNumber":4,"author":{"gitId":"deyixtan"},"content":"import quackers.tasklist.TaskList;"},{"lineNumber":5,"author":{"gitId":"deyixtan"},"content":"import quackers.ui.Ui;"},{"lineNumber":6,"author":{"gitId":"deyixtan"},"content":""},{"lineNumber":7,"author":{"gitId":"deyixtan"},"content":"/**"},{"lineNumber":8,"author":{"gitId":"deyixtan"},"content":" * Represents the command to list tasks."},{"lineNumber":9,"author":{"gitId":"deyixtan"},"content":" */"},{"lineNumber":10,"author":{"gitId":"deyixtan"},"content":"public class ListTasksCommand extends Command {"},{"lineNumber":11,"author":{"gitId":"deyixtan"},"content":""},{"lineNumber":12,"author":{"gitId":"deyixtan"},"content":"    private static final boolean toExit \u003d false;"},{"lineNumber":13,"author":{"gitId":"deyixtan"},"content":""},{"lineNumber":14,"author":{"gitId":"deyixtan"},"content":"    /**"},{"lineNumber":15,"author":{"gitId":"deyixtan"},"content":"     * Executes the command and returns a response."},{"lineNumber":16,"author":{"gitId":"deyixtan"},"content":"     *"},{"lineNumber":17,"author":{"gitId":"deyixtan"},"content":"     * @param tasks Core TaskList object."},{"lineNumber":18,"author":{"gitId":"deyixtan"},"content":"     * @param storage Core Storage object."},{"lineNumber":19,"author":{"gitId":"deyixtan"},"content":"     * @return CommandResponse object."},{"lineNumber":20,"author":{"gitId":"deyixtan"},"content":"     */"},{"lineNumber":21,"author":{"gitId":"deyixtan"},"content":"    @Override"},{"lineNumber":22,"author":{"gitId":"deyixtan"},"content":"    public CommandResponse getResponse(TaskList tasks, Storage storage) {"},{"lineNumber":23,"author":{"gitId":"deyixtan"},"content":"        String message \u003d Ui.getTaskList(tasks.getTaskList());"},{"lineNumber":24,"author":{"gitId":"deyixtan"},"content":"        return new CommandResponse(ListTasksCommand.class, message, ListTasksCommand.toExit);"},{"lineNumber":25,"author":{"gitId":"deyixtan"},"content":"    }"},{"lineNumber":26,"author":{"gitId":"deyixtan"},"content":"}"}],"authorContributionMap":{"deyixtan":26}},{"path":"src/main/java/quackers/command/MarkTaskAsDoneCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"deyixtan"},"content":"package quackers.command;"},{"lineNumber":2,"author":{"gitId":"deyixtan"},"content":""},{"lineNumber":3,"author":{"gitId":"deyixtan"},"content":"import quackers.QuackersException;"},{"lineNumber":4,"author":{"gitId":"deyixtan"},"content":"import quackers.storage.Storage;"},{"lineNumber":5,"author":{"gitId":"deyixtan"},"content":"import quackers.task.Task;"},{"lineNumber":6,"author":{"gitId":"deyixtan"},"content":"import quackers.tasklist.TaskList;"},{"lineNumber":7,"author":{"gitId":"deyixtan"},"content":"import quackers.ui.Ui;"},{"lineNumber":8,"author":{"gitId":"deyixtan"},"content":""},{"lineNumber":9,"author":{"gitId":"deyixtan"},"content":"/**"},{"lineNumber":10,"author":{"gitId":"deyixtan"},"content":" * Represents the command to mark a task as completed."},{"lineNumber":11,"author":{"gitId":"deyixtan"},"content":" */"},{"lineNumber":12,"author":{"gitId":"deyixtan"},"content":"public class MarkTaskAsDoneCommand extends Command {"},{"lineNumber":13,"author":{"gitId":"deyixtan"},"content":""},{"lineNumber":14,"author":{"gitId":"deyixtan"},"content":"    private static final boolean toExit \u003d false;"},{"lineNumber":15,"author":{"gitId":"deyixtan"},"content":""},{"lineNumber":16,"author":{"gitId":"deyixtan"},"content":"    private int taskIndex;"},{"lineNumber":17,"author":{"gitId":"deyixtan"},"content":""},{"lineNumber":18,"author":{"gitId":"deyixtan"},"content":"    /**"},{"lineNumber":19,"author":{"gitId":"deyixtan"},"content":"     * Constructs a MarkTaskAsDoneCommand object."},{"lineNumber":20,"author":{"gitId":"deyixtan"},"content":"     *"},{"lineNumber":21,"author":{"gitId":"deyixtan"},"content":"     * @param taskIndex Index of the task to mark."},{"lineNumber":22,"author":{"gitId":"deyixtan"},"content":"     */"},{"lineNumber":23,"author":{"gitId":"deyixtan"},"content":"    public MarkTaskAsDoneCommand(int taskIndex) {"},{"lineNumber":24,"author":{"gitId":"deyixtan"},"content":"        this.taskIndex \u003d taskIndex;"},{"lineNumber":25,"author":{"gitId":"deyixtan"},"content":"    }"},{"lineNumber":26,"author":{"gitId":"deyixtan"},"content":""},{"lineNumber":27,"author":{"gitId":"deyixtan"},"content":"    /**"},{"lineNumber":28,"author":{"gitId":"deyixtan"},"content":"     * Executes the command and returns a response."},{"lineNumber":29,"author":{"gitId":"deyixtan"},"content":"     *"},{"lineNumber":30,"author":{"gitId":"deyixtan"},"content":"     * @param tasks Core TaskList object."},{"lineNumber":31,"author":{"gitId":"deyixtan"},"content":"     * @param storage Core Storage object."},{"lineNumber":32,"author":{"gitId":"deyixtan"},"content":"     * @return CommandResponse object."},{"lineNumber":33,"author":{"gitId":"deyixtan"},"content":"     * @throws QuackersException If specified invalid index, or unable to save data to disk."},{"lineNumber":34,"author":{"gitId":"deyixtan"},"content":"     */"},{"lineNumber":35,"author":{"gitId":"deyixtan"},"content":"    @Override"},{"lineNumber":36,"author":{"gitId":"deyixtan"},"content":"    public CommandResponse getResponse(TaskList tasks, Storage storage) throws QuackersException {"},{"lineNumber":37,"author":{"gitId":"deyixtan"},"content":"        Task task \u003d tasks.markDone(this.taskIndex);"},{"lineNumber":38,"author":{"gitId":"deyixtan"},"content":"        storage.save(tasks);"},{"lineNumber":39,"author":{"gitId":"deyixtan"},"content":""},{"lineNumber":40,"author":{"gitId":"deyixtan"},"content":"        String message \u003d Ui.getMarkDoneTaskSuccess(task);"},{"lineNumber":41,"author":{"gitId":"deyixtan"},"content":"        return new CommandResponse(MarkTaskAsDoneCommand.class, message, MarkTaskAsDoneCommand.toExit);"},{"lineNumber":42,"author":{"gitId":"deyixtan"},"content":"    }"},{"lineNumber":43,"author":{"gitId":"deyixtan"},"content":"}"}],"authorContributionMap":{"deyixtan":43}},{"path":"src/main/java/quackers/command/MarkTaskAsUndoneCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"deyixtan"},"content":"package quackers.command;"},{"lineNumber":2,"author":{"gitId":"deyixtan"},"content":""},{"lineNumber":3,"author":{"gitId":"deyixtan"},"content":"import quackers.QuackersException;"},{"lineNumber":4,"author":{"gitId":"deyixtan"},"content":"import quackers.storage.Storage;"},{"lineNumber":5,"author":{"gitId":"deyixtan"},"content":"import quackers.task.Task;"},{"lineNumber":6,"author":{"gitId":"deyixtan"},"content":"import quackers.tasklist.TaskList;"},{"lineNumber":7,"author":{"gitId":"deyixtan"},"content":"import quackers.ui.Ui;"},{"lineNumber":8,"author":{"gitId":"deyixtan"},"content":""},{"lineNumber":9,"author":{"gitId":"deyixtan"},"content":"/**"},{"lineNumber":10,"author":{"gitId":"deyixtan"},"content":" * Represents the command to mark a task as incomplete."},{"lineNumber":11,"author":{"gitId":"deyixtan"},"content":" */"},{"lineNumber":12,"author":{"gitId":"deyixtan"},"content":"public class MarkTaskAsUndoneCommand extends Command {"},{"lineNumber":13,"author":{"gitId":"deyixtan"},"content":""},{"lineNumber":14,"author":{"gitId":"deyixtan"},"content":"    private static final boolean toExit \u003d false;"},{"lineNumber":15,"author":{"gitId":"deyixtan"},"content":""},{"lineNumber":16,"author":{"gitId":"deyixtan"},"content":"    private int taskIndex;"},{"lineNumber":17,"author":{"gitId":"deyixtan"},"content":""},{"lineNumber":18,"author":{"gitId":"deyixtan"},"content":"    /**"},{"lineNumber":19,"author":{"gitId":"deyixtan"},"content":"     * Constructs a MarkTaskAsUndoneCommand object."},{"lineNumber":20,"author":{"gitId":"deyixtan"},"content":"     *"},{"lineNumber":21,"author":{"gitId":"deyixtan"},"content":"     * @param taskIndex Index of the task to mark."},{"lineNumber":22,"author":{"gitId":"deyixtan"},"content":"     */"},{"lineNumber":23,"author":{"gitId":"deyixtan"},"content":"    public MarkTaskAsUndoneCommand(int taskIndex) {"},{"lineNumber":24,"author":{"gitId":"deyixtan"},"content":"        this.taskIndex \u003d taskIndex;"},{"lineNumber":25,"author":{"gitId":"deyixtan"},"content":"    }"},{"lineNumber":26,"author":{"gitId":"deyixtan"},"content":""},{"lineNumber":27,"author":{"gitId":"deyixtan"},"content":"    /**"},{"lineNumber":28,"author":{"gitId":"deyixtan"},"content":"     * Executes the command and returns a response."},{"lineNumber":29,"author":{"gitId":"deyixtan"},"content":"     *"},{"lineNumber":30,"author":{"gitId":"deyixtan"},"content":"     * @param tasks Core TaskList object."},{"lineNumber":31,"author":{"gitId":"deyixtan"},"content":"     * @param storage Core Storage object."},{"lineNumber":32,"author":{"gitId":"deyixtan"},"content":"     * @return CommandResponse object."},{"lineNumber":33,"author":{"gitId":"deyixtan"},"content":"     * @throws QuackersException If specified invalid index, or unable to save data to disk."},{"lineNumber":34,"author":{"gitId":"deyixtan"},"content":"     */"},{"lineNumber":35,"author":{"gitId":"deyixtan"},"content":"    @Override"},{"lineNumber":36,"author":{"gitId":"deyixtan"},"content":"    public CommandResponse getResponse(TaskList tasks, Storage storage) throws QuackersException {"},{"lineNumber":37,"author":{"gitId":"deyixtan"},"content":"        Task task \u003d tasks.markUndone(this.taskIndex);"},{"lineNumber":38,"author":{"gitId":"deyixtan"},"content":"        storage.save(tasks);"},{"lineNumber":39,"author":{"gitId":"deyixtan"},"content":""},{"lineNumber":40,"author":{"gitId":"deyixtan"},"content":"        String message \u003d Ui.getMarkUndoneTaskSuccess(task);"},{"lineNumber":41,"author":{"gitId":"deyixtan"},"content":"        return new CommandResponse(MarkTaskAsUndoneCommand.class, message, MarkTaskAsUndoneCommand.toExit);"},{"lineNumber":42,"author":{"gitId":"deyixtan"},"content":"    }"},{"lineNumber":43,"author":{"gitId":"deyixtan"},"content":"}"}],"authorContributionMap":{"deyixtan":43}},{"path":"src/main/java/quackers/command/StatsCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"deyixtan"},"content":"package quackers.command;"},{"lineNumber":2,"author":{"gitId":"deyixtan"},"content":""},{"lineNumber":3,"author":{"gitId":"deyixtan"},"content":"import quackers.storage.Storage;"},{"lineNumber":4,"author":{"gitId":"deyixtan"},"content":"import quackers.tasklist.TaskList;"},{"lineNumber":5,"author":{"gitId":"deyixtan"},"content":"import quackers.ui.Ui;"},{"lineNumber":6,"author":{"gitId":"deyixtan"},"content":""},{"lineNumber":7,"author":{"gitId":"deyixtan"},"content":"/**"},{"lineNumber":8,"author":{"gitId":"deyixtan"},"content":" * Represents the command show statistics."},{"lineNumber":9,"author":{"gitId":"deyixtan"},"content":" */"},{"lineNumber":10,"author":{"gitId":"deyixtan"},"content":"public class StatsCommand extends Command {"},{"lineNumber":11,"author":{"gitId":"deyixtan"},"content":""},{"lineNumber":12,"author":{"gitId":"deyixtan"},"content":"    private static final boolean toExit \u003d false;"},{"lineNumber":13,"author":{"gitId":"deyixtan"},"content":""},{"lineNumber":14,"author":{"gitId":"deyixtan"},"content":"    /**"},{"lineNumber":15,"author":{"gitId":"deyixtan"},"content":"     * Executes the command and returns a response."},{"lineNumber":16,"author":{"gitId":"deyixtan"},"content":"     *"},{"lineNumber":17,"author":{"gitId":"deyixtan"},"content":"     * @param tasks Core TaskList object."},{"lineNumber":18,"author":{"gitId":"deyixtan"},"content":"     * @param storage Core Storage object."},{"lineNumber":19,"author":{"gitId":"deyixtan"},"content":"     * @return CommandResponse object."},{"lineNumber":20,"author":{"gitId":"deyixtan"},"content":"     */"},{"lineNumber":21,"author":{"gitId":"deyixtan"},"content":"    @Override"},{"lineNumber":22,"author":{"gitId":"deyixtan"},"content":"    public CommandResponse getResponse(TaskList tasks, Storage storage) {"},{"lineNumber":23,"author":{"gitId":"deyixtan"},"content":"        String message \u003d Ui.getStatsSuccess();"},{"lineNumber":24,"author":{"gitId":"deyixtan"},"content":"        return new CommandResponse(StatsCommand.class, message, StatsCommand.toExit);"},{"lineNumber":25,"author":{"gitId":"deyixtan"},"content":"    }"},{"lineNumber":26,"author":{"gitId":"deyixtan"},"content":""},{"lineNumber":27,"author":{"gitId":"deyixtan"},"content":"}"}],"authorContributionMap":{"deyixtan":27}},{"path":"src/main/java/quackers/command/UsageCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"deyixtan"},"content":"package quackers.command;"},{"lineNumber":2,"author":{"gitId":"deyixtan"},"content":""},{"lineNumber":3,"author":{"gitId":"deyixtan"},"content":"import quackers.storage.Storage;"},{"lineNumber":4,"author":{"gitId":"deyixtan"},"content":"import quackers.tasklist.TaskList;"},{"lineNumber":5,"author":{"gitId":"deyixtan"},"content":"import quackers.ui.Ui;"},{"lineNumber":6,"author":{"gitId":"deyixtan"},"content":""},{"lineNumber":7,"author":{"gitId":"deyixtan"},"content":"/**"},{"lineNumber":8,"author":{"gitId":"deyixtan"},"content":" * Represents the command to view commands usage."},{"lineNumber":9,"author":{"gitId":"deyixtan"},"content":" */"},{"lineNumber":10,"author":{"gitId":"deyixtan"},"content":"public class UsageCommand extends Command {"},{"lineNumber":11,"author":{"gitId":"deyixtan"},"content":""},{"lineNumber":12,"author":{"gitId":"deyixtan"},"content":"    private static final boolean toExit \u003d false;"},{"lineNumber":13,"author":{"gitId":"deyixtan"},"content":""},{"lineNumber":14,"author":{"gitId":"deyixtan"},"content":"    /**"},{"lineNumber":15,"author":{"gitId":"deyixtan"},"content":"     * Executes the command and returns a response."},{"lineNumber":16,"author":{"gitId":"deyixtan"},"content":"     *"},{"lineNumber":17,"author":{"gitId":"deyixtan"},"content":"     * @param tasks Core TaskList object."},{"lineNumber":18,"author":{"gitId":"deyixtan"},"content":"     * @param storage Core Storage object."},{"lineNumber":19,"author":{"gitId":"deyixtan"},"content":"     * @return CommandResponse object."},{"lineNumber":20,"author":{"gitId":"deyixtan"},"content":"     */"},{"lineNumber":21,"author":{"gitId":"deyixtan"},"content":"    @Override"},{"lineNumber":22,"author":{"gitId":"deyixtan"},"content":"    public CommandResponse getResponse(TaskList tasks, Storage storage) {"},{"lineNumber":23,"author":{"gitId":"deyixtan"},"content":"        String message \u003d Ui.getUsage();"},{"lineNumber":24,"author":{"gitId":"deyixtan"},"content":"        return new CommandResponse(UsageCommand.class, message, UsageCommand.toExit);"},{"lineNumber":25,"author":{"gitId":"deyixtan"},"content":"    }"},{"lineNumber":26,"author":{"gitId":"deyixtan"},"content":"}"}],"authorContributionMap":{"deyixtan":26}},{"path":"src/main/java/quackers/parser/CommandParser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"deyixtan"},"content":"package quackers.parser;"},{"lineNumber":2,"author":{"gitId":"deyixtan"},"content":""},{"lineNumber":3,"author":{"gitId":"deyixtan"},"content":"import java.time.LocalDateTime;"},{"lineNumber":4,"author":{"gitId":"deyixtan"},"content":"import java.time.format.DateTimeFormatter;"},{"lineNumber":5,"author":{"gitId":"deyixtan"},"content":"import java.util.regex.Matcher;"},{"lineNumber":6,"author":{"gitId":"deyixtan"},"content":"import java.util.regex.Pattern;"},{"lineNumber":7,"author":{"gitId":"deyixtan"},"content":""},{"lineNumber":8,"author":{"gitId":"deyixtan"},"content":"import quackers.QuackersException;"},{"lineNumber":9,"author":{"gitId":"deyixtan"},"content":"import quackers.command.AddDeadlineCommand;"},{"lineNumber":10,"author":{"gitId":"deyixtan"},"content":"import quackers.command.AddEventCommand;"},{"lineNumber":11,"author":{"gitId":"deyixtan"},"content":"import quackers.command.AddTodoCommand;"},{"lineNumber":12,"author":{"gitId":"deyixtan"},"content":"import quackers.command.ByeCommand;"},{"lineNumber":13,"author":{"gitId":"deyixtan"},"content":"import quackers.command.Command;"},{"lineNumber":14,"author":{"gitId":"deyixtan"},"content":"import quackers.command.DeleteTaskCommand;"},{"lineNumber":15,"author":{"gitId":"deyixtan"},"content":"import quackers.command.FindTasksCommand;"},{"lineNumber":16,"author":{"gitId":"deyixtan"},"content":"import quackers.command.ListTasksCommand;"},{"lineNumber":17,"author":{"gitId":"deyixtan"},"content":"import quackers.command.MarkTaskAsDoneCommand;"},{"lineNumber":18,"author":{"gitId":"deyixtan"},"content":"import quackers.command.MarkTaskAsUndoneCommand;"},{"lineNumber":19,"author":{"gitId":"deyixtan"},"content":"import quackers.command.StatsCommand;"},{"lineNumber":20,"author":{"gitId":"deyixtan"},"content":"import quackers.command.UsageCommand;"},{"lineNumber":21,"author":{"gitId":"deyixtan"},"content":"import quackers.ui.Ui;"},{"lineNumber":22,"author":{"gitId":"deyixtan"},"content":""},{"lineNumber":23,"author":{"gitId":"deyixtan"},"content":"/**"},{"lineNumber":24,"author":{"gitId":"deyixtan"},"content":" * Represents the command parser."},{"lineNumber":25,"author":{"gitId":"deyixtan"},"content":" */"},{"lineNumber":26,"author":{"gitId":"deyixtan"},"content":"public class CommandParser {"},{"lineNumber":27,"author":{"gitId":"deyixtan"},"content":""},{"lineNumber":28,"author":{"gitId":"deyixtan"},"content":"    private static final DateTimeFormatter DATETIME_FORMATTER \u003d DateTimeFormatter.ofPattern(\"yyyy-MM-dd HH:mm\");"},{"lineNumber":29,"author":{"gitId":"deyixtan"},"content":"    private static final Pattern COMMAND_TYPE_PATTERN \u003d Pattern.compile("},{"lineNumber":30,"author":{"gitId":"deyixtan"},"content":"            \"usage|bye|list|find|stats|todo|deadline|event|delete|done\");"},{"lineNumber":31,"author":{"gitId":"deyixtan"},"content":"    private static final Pattern USAGE_PATTERN \u003d Pattern.compile(\"usage\");"},{"lineNumber":32,"author":{"gitId":"deyixtan"},"content":"    private static final Pattern BYE_PATTERN \u003d Pattern.compile(\"bye\");"},{"lineNumber":33,"author":{"gitId":"deyixtan"},"content":"    private static final Pattern LIST_TASKS_PATTERN \u003d Pattern.compile(\"list\");"},{"lineNumber":34,"author":{"gitId":"deyixtan"},"content":"    private static final Pattern FIND_TASKS_PATTERN \u003d Pattern.compile(\"find ([a-zA-Z0-9\\\\s]+)\");"},{"lineNumber":35,"author":{"gitId":"deyixtan"},"content":"    private static final Pattern STATS_PATTERN \u003d Pattern.compile(\"stats\");"},{"lineNumber":36,"author":{"gitId":"deyixtan"},"content":"    private static final Pattern ADD_TODO_PATTERN \u003d Pattern.compile(\"todo ([a-zA-Z0-9\\\\s]+)\");"},{"lineNumber":37,"author":{"gitId":"deyixtan"},"content":"    private static final Pattern ADD_DEADLINE_PATTERN \u003d Pattern.compile("},{"lineNumber":38,"author":{"gitId":"deyixtan"},"content":"            \"deadline ([a-zA-Z0-9\\\\s]+) /by (\\\\d{4}-\\\\d{2}-\\\\d{2} \\\\d{2}:\\\\d{2})\");"},{"lineNumber":39,"author":{"gitId":"deyixtan"},"content":"    private static final Pattern ADD_EVENT_PATTERN \u003d Pattern.compile("},{"lineNumber":40,"author":{"gitId":"deyixtan"},"content":"            \"event ([a-zA-Z0-9\\\\s]+) /at (\\\\d{4}-\\\\d{2}-\\\\d{2} \\\\d{2}:\\\\d{2})\");"},{"lineNumber":41,"author":{"gitId":"deyixtan"},"content":"    private static final Pattern DELETE_TASK_PATTERN \u003d Pattern.compile(\"delete ([0-9]+)\");"},{"lineNumber":42,"author":{"gitId":"deyixtan"},"content":"    private static final Pattern MARK_TASK_AS_DONE_PATTERN \u003d Pattern.compile(\"done ([0-9]+)\");"},{"lineNumber":43,"author":{"gitId":"deyixtan"},"content":"    private static final Pattern MARK_TASK_AS_UNDONE_PATTERN \u003d Pattern.compile(\"undone ([0-9]+)\");"},{"lineNumber":44,"author":{"gitId":"deyixtan"},"content":""},{"lineNumber":45,"author":{"gitId":"deyixtan"},"content":"    /**"},{"lineNumber":46,"author":{"gitId":"deyixtan"},"content":"     * Parses raw command text input and generate the specific Command object."},{"lineNumber":47,"author":{"gitId":"deyixtan"},"content":"     *"},{"lineNumber":48,"author":{"gitId":"deyixtan"},"content":"     * @param input Raw command text input."},{"lineNumber":49,"author":{"gitId":"deyixtan"},"content":"     * @return The actual parsed command object."},{"lineNumber":50,"author":{"gitId":"deyixtan"},"content":"     * @throws QuackersException If invalid text input specified."},{"lineNumber":51,"author":{"gitId":"deyixtan"},"content":"     */"},{"lineNumber":52,"author":{"gitId":"deyixtan"},"content":"    public static Command getCommand(String input) throws QuackersException {"},{"lineNumber":53,"author":{"gitId":"deyixtan"},"content":"        String commandType \u003d CommandParser.getCommandType(input);"},{"lineNumber":54,"author":{"gitId":"deyixtan"},"content":""},{"lineNumber":55,"author":{"gitId":"deyixtan"},"content":"        switch (commandType) {"},{"lineNumber":56,"author":{"gitId":"deyixtan"},"content":"        case \"usage\":"},{"lineNumber":57,"author":{"gitId":"deyixtan"},"content":"            return CommandParser.getUsageCommand(input);"},{"lineNumber":58,"author":{"gitId":"deyixtan"},"content":"        case \"bye\":"},{"lineNumber":59,"author":{"gitId":"deyixtan"},"content":"            return CommandParser.getByeCommand(input);"},{"lineNumber":60,"author":{"gitId":"deyixtan"},"content":"        case \"list\":"},{"lineNumber":61,"author":{"gitId":"deyixtan"},"content":"            return CommandParser.getListTasksCommand(input);"},{"lineNumber":62,"author":{"gitId":"deyixtan"},"content":"        case \"find\":"},{"lineNumber":63,"author":{"gitId":"deyixtan"},"content":"            return CommandParser.getFindTasksCommand(input);"},{"lineNumber":64,"author":{"gitId":"deyixtan"},"content":"        case \"stats\":"},{"lineNumber":65,"author":{"gitId":"deyixtan"},"content":"            return CommandParser.getStatsCommand(input);"},{"lineNumber":66,"author":{"gitId":"deyixtan"},"content":"        case \"todo\":"},{"lineNumber":67,"author":{"gitId":"deyixtan"},"content":"            return CommandParser.getAddTodoCommand(input);"},{"lineNumber":68,"author":{"gitId":"deyixtan"},"content":"        case \"deadline\":"},{"lineNumber":69,"author":{"gitId":"deyixtan"},"content":"            return CommandParser.getAddDeadlineCommand(input);"},{"lineNumber":70,"author":{"gitId":"deyixtan"},"content":"        case \"event\":"},{"lineNumber":71,"author":{"gitId":"deyixtan"},"content":"            return CommandParser.getAddEventCommand(input);"},{"lineNumber":72,"author":{"gitId":"deyixtan"},"content":"        case \"delete\":"},{"lineNumber":73,"author":{"gitId":"deyixtan"},"content":"            return CommandParser.getDeleteTaskCommand(input);"},{"lineNumber":74,"author":{"gitId":"deyixtan"},"content":"        case \"done\":"},{"lineNumber":75,"author":{"gitId":"deyixtan"},"content":"            return CommandParser.getMarkTaskAsDoneCommand(input);"},{"lineNumber":76,"author":{"gitId":"deyixtan"},"content":"        case \"undone\":"},{"lineNumber":77,"author":{"gitId":"deyixtan"},"content":"            return CommandParser.getMarkTaskAsUndoneCommand(input);"},{"lineNumber":78,"author":{"gitId":"deyixtan"},"content":"        default:"},{"lineNumber":79,"author":{"gitId":"deyixtan"},"content":"            throw new QuackersException(Ui.getInvalidCommand());"},{"lineNumber":80,"author":{"gitId":"deyixtan"},"content":"        }"},{"lineNumber":81,"author":{"gitId":"deyixtan"},"content":"    }"},{"lineNumber":82,"author":{"gitId":"deyixtan"},"content":""},{"lineNumber":83,"author":{"gitId":"deyixtan"},"content":"    /**"},{"lineNumber":84,"author":{"gitId":"deyixtan"},"content":"     * Retrieves the command type from the text input."},{"lineNumber":85,"author":{"gitId":"deyixtan"},"content":"     *"},{"lineNumber":86,"author":{"gitId":"deyixtan"},"content":"     * @param input Raw command text input."},{"lineNumber":87,"author":{"gitId":"deyixtan"},"content":"     * @return Command type."},{"lineNumber":88,"author":{"gitId":"deyixtan"},"content":"     * @throws QuackersException If there are no supported command types found."},{"lineNumber":89,"author":{"gitId":"deyixtan"},"content":"     */"},{"lineNumber":90,"author":{"gitId":"deyixtan"},"content":"    private static String getCommandType(String input) throws QuackersException {"},{"lineNumber":91,"author":{"gitId":"deyixtan"},"content":"        String commandType \u003d input.split(\" \")[0].toLowerCase();"},{"lineNumber":92,"author":{"gitId":"deyixtan"},"content":"        Matcher m \u003d CommandParser.COMMAND_TYPE_PATTERN.matcher(commandType);"},{"lineNumber":93,"author":{"gitId":"deyixtan"},"content":"        if (!m.find()) {"},{"lineNumber":94,"author":{"gitId":"deyixtan"},"content":"            throw new QuackersException(Ui.getInvalidCommand());"},{"lineNumber":95,"author":{"gitId":"deyixtan"},"content":"        }"},{"lineNumber":96,"author":{"gitId":"deyixtan"},"content":"        return commandType;"},{"lineNumber":97,"author":{"gitId":"deyixtan"},"content":"    }"},{"lineNumber":98,"author":{"gitId":"deyixtan"},"content":""},{"lineNumber":99,"author":{"gitId":"deyixtan"},"content":"    /**"},{"lineNumber":100,"author":{"gitId":"deyixtan"},"content":"     * Retrieves the UsageCommand object from the text input."},{"lineNumber":101,"author":{"gitId":"deyixtan"},"content":"     *"},{"lineNumber":102,"author":{"gitId":"deyixtan"},"content":"     * @param input Raw command text input."},{"lineNumber":103,"author":{"gitId":"deyixtan"},"content":"     * @return UsageCommand object."},{"lineNumber":104,"author":{"gitId":"deyixtan"},"content":"     * @throws QuackersException If invalid text input specified."},{"lineNumber":105,"author":{"gitId":"deyixtan"},"content":"     */"},{"lineNumber":106,"author":{"gitId":"deyixtan"},"content":"    private static UsageCommand getUsageCommand(String input) throws QuackersException {"},{"lineNumber":107,"author":{"gitId":"deyixtan"},"content":"        Matcher m \u003d CommandParser.USAGE_PATTERN.matcher(input);"},{"lineNumber":108,"author":{"gitId":"deyixtan"},"content":"        if (!m.find()) {"},{"lineNumber":109,"author":{"gitId":"deyixtan"},"content":"            throw new QuackersException(Ui.getInvalidCommand());"},{"lineNumber":110,"author":{"gitId":"deyixtan"},"content":"        }"},{"lineNumber":111,"author":{"gitId":"deyixtan"},"content":"        return new UsageCommand();"},{"lineNumber":112,"author":{"gitId":"deyixtan"},"content":"    }"},{"lineNumber":113,"author":{"gitId":"deyixtan"},"content":""},{"lineNumber":114,"author":{"gitId":"deyixtan"},"content":"    /**"},{"lineNumber":115,"author":{"gitId":"deyixtan"},"content":"     * Retrieves the ByeCommand object from the text input."},{"lineNumber":116,"author":{"gitId":"deyixtan"},"content":"     *"},{"lineNumber":117,"author":{"gitId":"deyixtan"},"content":"     * @param input Raw command text input."},{"lineNumber":118,"author":{"gitId":"deyixtan"},"content":"     * @return ByeCommand object."},{"lineNumber":119,"author":{"gitId":"deyixtan"},"content":"     * @throws QuackersException If invalid text input specified."},{"lineNumber":120,"author":{"gitId":"deyixtan"},"content":"     */"},{"lineNumber":121,"author":{"gitId":"deyixtan"},"content":"    private static ByeCommand getByeCommand(String input) throws QuackersException {"},{"lineNumber":122,"author":{"gitId":"deyixtan"},"content":"        Matcher m \u003d CommandParser.BYE_PATTERN.matcher(input);"},{"lineNumber":123,"author":{"gitId":"deyixtan"},"content":"        if (!m.find()) {"},{"lineNumber":124,"author":{"gitId":"deyixtan"},"content":"            throw new QuackersException(Ui.getInvalidCommand());"},{"lineNumber":125,"author":{"gitId":"deyixtan"},"content":"        }"},{"lineNumber":126,"author":{"gitId":"deyixtan"},"content":"        return new ByeCommand();"},{"lineNumber":127,"author":{"gitId":"deyixtan"},"content":"    }"},{"lineNumber":128,"author":{"gitId":"deyixtan"},"content":""},{"lineNumber":129,"author":{"gitId":"deyixtan"},"content":"    /**"},{"lineNumber":130,"author":{"gitId":"deyixtan"},"content":"     * Retrieves the ListTasksCommand object from the text input."},{"lineNumber":131,"author":{"gitId":"deyixtan"},"content":"     *"},{"lineNumber":132,"author":{"gitId":"deyixtan"},"content":"     * @param input Raw command text input."},{"lineNumber":133,"author":{"gitId":"deyixtan"},"content":"     * @return ListTasksCommand object."},{"lineNumber":134,"author":{"gitId":"deyixtan"},"content":"     * @throws QuackersException If invalid text input specified."},{"lineNumber":135,"author":{"gitId":"deyixtan"},"content":"     */"},{"lineNumber":136,"author":{"gitId":"deyixtan"},"content":"    private static ListTasksCommand getListTasksCommand(String input) throws QuackersException {"},{"lineNumber":137,"author":{"gitId":"deyixtan"},"content":"        Matcher m \u003d CommandParser.LIST_TASKS_PATTERN.matcher(input);"},{"lineNumber":138,"author":{"gitId":"deyixtan"},"content":"        if (!m.find()) {"},{"lineNumber":139,"author":{"gitId":"deyixtan"},"content":"            throw new QuackersException(Ui.getInvalidCommand());"},{"lineNumber":140,"author":{"gitId":"deyixtan"},"content":"        }"},{"lineNumber":141,"author":{"gitId":"deyixtan"},"content":"        return new ListTasksCommand();"},{"lineNumber":142,"author":{"gitId":"deyixtan"},"content":"    }"},{"lineNumber":143,"author":{"gitId":"deyixtan"},"content":""},{"lineNumber":144,"author":{"gitId":"deyixtan"},"content":"    /**"},{"lineNumber":145,"author":{"gitId":"deyixtan"},"content":"     * Retrieves the FindTasksCommand object from the text input."},{"lineNumber":146,"author":{"gitId":"deyixtan"},"content":"     *"},{"lineNumber":147,"author":{"gitId":"deyixtan"},"content":"     * @param input Raw command text input."},{"lineNumber":148,"author":{"gitId":"deyixtan"},"content":"     * @return FindTasksCommand object."},{"lineNumber":149,"author":{"gitId":"deyixtan"},"content":"     * @throws QuackersException If invalid text input specified."},{"lineNumber":150,"author":{"gitId":"deyixtan"},"content":"     */"},{"lineNumber":151,"author":{"gitId":"deyixtan"},"content":"    private static FindTasksCommand getFindTasksCommand(String input) throws QuackersException {"},{"lineNumber":152,"author":{"gitId":"deyixtan"},"content":"        Matcher m \u003d CommandParser.FIND_TASKS_PATTERN.matcher(input);"},{"lineNumber":153,"author":{"gitId":"deyixtan"},"content":"        if (!m.find() || m.groupCount() !\u003d 1) {"},{"lineNumber":154,"author":{"gitId":"deyixtan"},"content":"            throw new QuackersException(Ui.getInvalidCommand());"},{"lineNumber":155,"author":{"gitId":"deyixtan"},"content":"        }"},{"lineNumber":156,"author":{"gitId":"deyixtan"},"content":""},{"lineNumber":157,"author":{"gitId":"deyixtan"},"content":"        String keyword \u003d m.group(1);"},{"lineNumber":158,"author":{"gitId":"deyixtan"},"content":"        return new FindTasksCommand(keyword);"},{"lineNumber":159,"author":{"gitId":"deyixtan"},"content":"    }"},{"lineNumber":160,"author":{"gitId":"deyixtan"},"content":""},{"lineNumber":161,"author":{"gitId":"deyixtan"},"content":"    /**"},{"lineNumber":162,"author":{"gitId":"deyixtan"},"content":"     * Retrieves the StatsCommand object from the text input."},{"lineNumber":163,"author":{"gitId":"deyixtan"},"content":"     *"},{"lineNumber":164,"author":{"gitId":"deyixtan"},"content":"     * @param input Raw command text input."},{"lineNumber":165,"author":{"gitId":"deyixtan"},"content":"     * @return StatsCommand object."},{"lineNumber":166,"author":{"gitId":"deyixtan"},"content":"     * @throws QuackersException If invalid text input specified."},{"lineNumber":167,"author":{"gitId":"deyixtan"},"content":"     */"},{"lineNumber":168,"author":{"gitId":"deyixtan"},"content":"    private static StatsCommand getStatsCommand(String input) throws QuackersException {"},{"lineNumber":169,"author":{"gitId":"deyixtan"},"content":"        Matcher m \u003d CommandParser.STATS_PATTERN.matcher(input);"},{"lineNumber":170,"author":{"gitId":"deyixtan"},"content":"        if (!m.find()) {"},{"lineNumber":171,"author":{"gitId":"deyixtan"},"content":"            throw new QuackersException(Ui.getInvalidCommand());"},{"lineNumber":172,"author":{"gitId":"deyixtan"},"content":"        }"},{"lineNumber":173,"author":{"gitId":"deyixtan"},"content":"        return new StatsCommand();"},{"lineNumber":174,"author":{"gitId":"deyixtan"},"content":"    }"},{"lineNumber":175,"author":{"gitId":"deyixtan"},"content":""},{"lineNumber":176,"author":{"gitId":"deyixtan"},"content":"    /**"},{"lineNumber":177,"author":{"gitId":"deyixtan"},"content":"     * Retrieves the AddTodoCommand object from the text input."},{"lineNumber":178,"author":{"gitId":"deyixtan"},"content":"     *"},{"lineNumber":179,"author":{"gitId":"deyixtan"},"content":"     * @param input Raw command text input."},{"lineNumber":180,"author":{"gitId":"deyixtan"},"content":"     * @return AddTodoCommand object."},{"lineNumber":181,"author":{"gitId":"deyixtan"},"content":"     * @throws QuackersException If invalid text input specified."},{"lineNumber":182,"author":{"gitId":"deyixtan"},"content":"     */"},{"lineNumber":183,"author":{"gitId":"deyixtan"},"content":"    private static AddTodoCommand getAddTodoCommand(String input) throws QuackersException {"},{"lineNumber":184,"author":{"gitId":"deyixtan"},"content":"        Matcher m \u003d CommandParser.ADD_TODO_PATTERN.matcher(input);"},{"lineNumber":185,"author":{"gitId":"deyixtan"},"content":"        if (!m.find() || m.groupCount() !\u003d 1) {"},{"lineNumber":186,"author":{"gitId":"deyixtan"},"content":"            throw new QuackersException(Ui.getInvalidCommand());"},{"lineNumber":187,"author":{"gitId":"deyixtan"},"content":"        }"},{"lineNumber":188,"author":{"gitId":"deyixtan"},"content":""},{"lineNumber":189,"author":{"gitId":"deyixtan"},"content":"        String desc \u003d m.group(1);"},{"lineNumber":190,"author":{"gitId":"deyixtan"},"content":"        return new AddTodoCommand(desc);"},{"lineNumber":191,"author":{"gitId":"deyixtan"},"content":"    }"},{"lineNumber":192,"author":{"gitId":"deyixtan"},"content":""},{"lineNumber":193,"author":{"gitId":"deyixtan"},"content":"    /**"},{"lineNumber":194,"author":{"gitId":"deyixtan"},"content":"     * Retrieves the AddDeadlineCommand object from the text input."},{"lineNumber":195,"author":{"gitId":"deyixtan"},"content":"     *"},{"lineNumber":196,"author":{"gitId":"deyixtan"},"content":"     * @param input Raw command text input."},{"lineNumber":197,"author":{"gitId":"deyixtan"},"content":"     * @return AddDeadlineCommand object."},{"lineNumber":198,"author":{"gitId":"deyixtan"},"content":"     * @throws QuackersException If invalid text input specified."},{"lineNumber":199,"author":{"gitId":"deyixtan"},"content":"     */"},{"lineNumber":200,"author":{"gitId":"deyixtan"},"content":"    private static AddDeadlineCommand getAddDeadlineCommand(String input) throws QuackersException {"},{"lineNumber":201,"author":{"gitId":"deyixtan"},"content":"        Matcher m \u003d CommandParser.ADD_DEADLINE_PATTERN.matcher(input);"},{"lineNumber":202,"author":{"gitId":"deyixtan"},"content":"        if (!m.find() || m.groupCount() !\u003d 2) {"},{"lineNumber":203,"author":{"gitId":"deyixtan"},"content":"            throw new QuackersException(Ui.getInvalidCommand());"},{"lineNumber":204,"author":{"gitId":"deyixtan"},"content":"        }"},{"lineNumber":205,"author":{"gitId":"deyixtan"},"content":""},{"lineNumber":206,"author":{"gitId":"deyixtan"},"content":"        String desc \u003d m.group(1);"},{"lineNumber":207,"author":{"gitId":"deyixtan"},"content":"        LocalDateTime dateTime \u003d LocalDateTime.parse(m.group(2), CommandParser.DATETIME_FORMATTER);"},{"lineNumber":208,"author":{"gitId":"deyixtan"},"content":"        return new AddDeadlineCommand(desc, dateTime);"},{"lineNumber":209,"author":{"gitId":"deyixtan"},"content":"    }"},{"lineNumber":210,"author":{"gitId":"deyixtan"},"content":""},{"lineNumber":211,"author":{"gitId":"deyixtan"},"content":"    /**"},{"lineNumber":212,"author":{"gitId":"deyixtan"},"content":"     * Retrieves the AddEventCommand object from the text input."},{"lineNumber":213,"author":{"gitId":"deyixtan"},"content":"     *"},{"lineNumber":214,"author":{"gitId":"deyixtan"},"content":"     * @param input Raw command text input."},{"lineNumber":215,"author":{"gitId":"deyixtan"},"content":"     * @return AddEventCommand object."},{"lineNumber":216,"author":{"gitId":"deyixtan"},"content":"     * @throws QuackersException If invalid text input specified."},{"lineNumber":217,"author":{"gitId":"deyixtan"},"content":"     */"},{"lineNumber":218,"author":{"gitId":"deyixtan"},"content":"    private static AddEventCommand getAddEventCommand(String input) throws QuackersException {"},{"lineNumber":219,"author":{"gitId":"deyixtan"},"content":"        Matcher m \u003d CommandParser.ADD_EVENT_PATTERN.matcher(input);"},{"lineNumber":220,"author":{"gitId":"deyixtan"},"content":"        if (!m.find() || m.groupCount() !\u003d 2) {"},{"lineNumber":221,"author":{"gitId":"deyixtan"},"content":"            throw new QuackersException(Ui.getInvalidCommand());"},{"lineNumber":222,"author":{"gitId":"deyixtan"},"content":"        }"},{"lineNumber":223,"author":{"gitId":"deyixtan"},"content":""},{"lineNumber":224,"author":{"gitId":"deyixtan"},"content":"        String desc \u003d m.group(1);"},{"lineNumber":225,"author":{"gitId":"deyixtan"},"content":"        LocalDateTime dateTime \u003d LocalDateTime.parse(m.group(2), CommandParser.DATETIME_FORMATTER);"},{"lineNumber":226,"author":{"gitId":"deyixtan"},"content":"        return new AddEventCommand(desc, dateTime);"},{"lineNumber":227,"author":{"gitId":"deyixtan"},"content":"    }"},{"lineNumber":228,"author":{"gitId":"deyixtan"},"content":""},{"lineNumber":229,"author":{"gitId":"deyixtan"},"content":"    /**"},{"lineNumber":230,"author":{"gitId":"deyixtan"},"content":"     * Retrieves the DeleteTaskCommand object from the text input."},{"lineNumber":231,"author":{"gitId":"deyixtan"},"content":"     *"},{"lineNumber":232,"author":{"gitId":"deyixtan"},"content":"     * @param input Raw command text input."},{"lineNumber":233,"author":{"gitId":"deyixtan"},"content":"     * @return DeleteTaskCommand object."},{"lineNumber":234,"author":{"gitId":"deyixtan"},"content":"     * @throws QuackersException If invalid text input specified."},{"lineNumber":235,"author":{"gitId":"deyixtan"},"content":"     */"},{"lineNumber":236,"author":{"gitId":"deyixtan"},"content":"    private static DeleteTaskCommand getDeleteTaskCommand(String input) throws QuackersException {"},{"lineNumber":237,"author":{"gitId":"deyixtan"},"content":"        Matcher m \u003d CommandParser.DELETE_TASK_PATTERN.matcher(input);"},{"lineNumber":238,"author":{"gitId":"deyixtan"},"content":"        if (!m.find() || m.groupCount() !\u003d 1) {"},{"lineNumber":239,"author":{"gitId":"deyixtan"},"content":"            throw new QuackersException(Ui.getInvalidCommand());"},{"lineNumber":240,"author":{"gitId":"deyixtan"},"content":"        }"},{"lineNumber":241,"author":{"gitId":"deyixtan"},"content":""},{"lineNumber":242,"author":{"gitId":"deyixtan"},"content":"        int index \u003d Integer.parseInt(m.group(1));"},{"lineNumber":243,"author":{"gitId":"deyixtan"},"content":"        return new DeleteTaskCommand(index);"},{"lineNumber":244,"author":{"gitId":"deyixtan"},"content":"    }"},{"lineNumber":245,"author":{"gitId":"deyixtan"},"content":""},{"lineNumber":246,"author":{"gitId":"deyixtan"},"content":"    /**"},{"lineNumber":247,"author":{"gitId":"deyixtan"},"content":"     * Retrieves the MarkTaskAsDoneCommand object from the text input."},{"lineNumber":248,"author":{"gitId":"deyixtan"},"content":"     *"},{"lineNumber":249,"author":{"gitId":"deyixtan"},"content":"     * @param input Raw command text input."},{"lineNumber":250,"author":{"gitId":"deyixtan"},"content":"     * @return MarkTaskAsDoneCommand object."},{"lineNumber":251,"author":{"gitId":"deyixtan"},"content":"     * @throws QuackersException If invalid text input specified."},{"lineNumber":252,"author":{"gitId":"deyixtan"},"content":"     */"},{"lineNumber":253,"author":{"gitId":"deyixtan"},"content":"    private static MarkTaskAsDoneCommand getMarkTaskAsDoneCommand(String input) throws QuackersException {"},{"lineNumber":254,"author":{"gitId":"deyixtan"},"content":"        Matcher m \u003d CommandParser.MARK_TASK_AS_DONE_PATTERN.matcher(input);"},{"lineNumber":255,"author":{"gitId":"deyixtan"},"content":"        if (!m.find() || m.groupCount() !\u003d 1) {"},{"lineNumber":256,"author":{"gitId":"deyixtan"},"content":"            throw new QuackersException(Ui.getInvalidCommand());"},{"lineNumber":257,"author":{"gitId":"deyixtan"},"content":"        }"},{"lineNumber":258,"author":{"gitId":"deyixtan"},"content":""},{"lineNumber":259,"author":{"gitId":"deyixtan"},"content":"        int index \u003d Integer.parseInt(m.group(1));"},{"lineNumber":260,"author":{"gitId":"deyixtan"},"content":"        return new MarkTaskAsDoneCommand(index);"},{"lineNumber":261,"author":{"gitId":"deyixtan"},"content":"    }"},{"lineNumber":262,"author":{"gitId":"deyixtan"},"content":""},{"lineNumber":263,"author":{"gitId":"deyixtan"},"content":"    /**"},{"lineNumber":264,"author":{"gitId":"deyixtan"},"content":"     * Retrieves the MarkTaskAsUndoneCommand object from the text input."},{"lineNumber":265,"author":{"gitId":"deyixtan"},"content":"     *"},{"lineNumber":266,"author":{"gitId":"deyixtan"},"content":"     * @param input Raw command text input."},{"lineNumber":267,"author":{"gitId":"deyixtan"},"content":"     * @return MarkTaskAsUndoneCommand object."},{"lineNumber":268,"author":{"gitId":"deyixtan"},"content":"     * @throws QuackersException If invalid text input specified."},{"lineNumber":269,"author":{"gitId":"deyixtan"},"content":"     */"},{"lineNumber":270,"author":{"gitId":"deyixtan"},"content":"    private static MarkTaskAsUndoneCommand getMarkTaskAsUndoneCommand(String input) throws QuackersException {"},{"lineNumber":271,"author":{"gitId":"deyixtan"},"content":"        Matcher m \u003d CommandParser.MARK_TASK_AS_UNDONE_PATTERN.matcher(input);"},{"lineNumber":272,"author":{"gitId":"deyixtan"},"content":"        if (!m.find() || m.groupCount() !\u003d 1) {"},{"lineNumber":273,"author":{"gitId":"deyixtan"},"content":"            throw new QuackersException(Ui.getInvalidCommand());"},{"lineNumber":274,"author":{"gitId":"deyixtan"},"content":"        }"},{"lineNumber":275,"author":{"gitId":"deyixtan"},"content":""},{"lineNumber":276,"author":{"gitId":"deyixtan"},"content":"        int index \u003d Integer.parseInt(m.group(1));"},{"lineNumber":277,"author":{"gitId":"deyixtan"},"content":"        return new MarkTaskAsUndoneCommand(index);"},{"lineNumber":278,"author":{"gitId":"deyixtan"},"content":"    }"},{"lineNumber":279,"author":{"gitId":"deyixtan"},"content":"}"}],"authorContributionMap":{"deyixtan":279}},{"path":"src/main/java/quackers/parser/FileDataParser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"deyixtan"},"content":"package quackers.parser;"},{"lineNumber":2,"author":{"gitId":"deyixtan"},"content":""},{"lineNumber":3,"author":{"gitId":"deyixtan"},"content":"import java.time.LocalDateTime;"},{"lineNumber":4,"author":{"gitId":"deyixtan"},"content":"import java.time.format.DateTimeFormatter;"},{"lineNumber":5,"author":{"gitId":"deyixtan"},"content":"import java.util.ArrayList;"},{"lineNumber":6,"author":{"gitId":"deyixtan"},"content":"import java.util.List;"},{"lineNumber":7,"author":{"gitId":"deyixtan"},"content":"import java.util.regex.Matcher;"},{"lineNumber":8,"author":{"gitId":"deyixtan"},"content":"import java.util.regex.Pattern;"},{"lineNumber":9,"author":{"gitId":"deyixtan"},"content":""},{"lineNumber":10,"author":{"gitId":"deyixtan"},"content":"import quackers.QuackersException;"},{"lineNumber":11,"author":{"gitId":"deyixtan"},"content":"import quackers.task.Deadline;"},{"lineNumber":12,"author":{"gitId":"deyixtan"},"content":"import quackers.task.Event;"},{"lineNumber":13,"author":{"gitId":"deyixtan"},"content":"import quackers.task.Task;"},{"lineNumber":14,"author":{"gitId":"deyixtan"},"content":"import quackers.task.Todo;"},{"lineNumber":15,"author":{"gitId":"deyixtan"},"content":"import quackers.ui.Ui;"},{"lineNumber":16,"author":{"gitId":"deyixtan"},"content":""},{"lineNumber":17,"author":{"gitId":"deyixtan"},"content":"/**"},{"lineNumber":18,"author":{"gitId":"deyixtan"},"content":" * Represents the storage parser."},{"lineNumber":19,"author":{"gitId":"deyixtan"},"content":" */"},{"lineNumber":20,"author":{"gitId":"deyixtan"},"content":"public class FileDataParser {"},{"lineNumber":21,"author":{"gitId":"deyixtan"},"content":""},{"lineNumber":22,"author":{"gitId":"deyixtan"},"content":"    private static final DateTimeFormatter DATETIME_FORMATTER \u003d DateTimeFormatter.ofPattern(\"yyyy-MM-dd HH:mm\");"},{"lineNumber":23,"author":{"gitId":"deyixtan"},"content":"    private static final Pattern COMMAND_TYPE_PATTERN \u003d Pattern.compile(\"^\\\\[(T|D|E)\\\\]\");"},{"lineNumber":24,"author":{"gitId":"deyixtan"},"content":"    private static final Pattern TODO_DATA_PATTERN \u003d Pattern.compile(\"\\\\[(T)\\\\]\\\\[(\\\\*|\\\\s)\\\\] ([a-zA-Z0-9\\\\s]+)\");"},{"lineNumber":25,"author":{"gitId":"deyixtan"},"content":"    private static final Pattern DEADLINE_DATA_PATTERN \u003d Pattern.compile("},{"lineNumber":26,"author":{"gitId":"deyixtan"},"content":"            \"\\\\[(D)\\\\]\\\\[(\\\\*|\\\\s)\\\\] ([a-zA-Z0-9\\\\s]+) \\\\(by: (\\\\d{4}-\\\\d{2}-\\\\d{2} \\\\d{2}:\\\\d{2})\\\\)\");"},{"lineNumber":27,"author":{"gitId":"deyixtan"},"content":"    private static final Pattern EVENT_DATA_PATTERN \u003d Pattern.compile("},{"lineNumber":28,"author":{"gitId":"deyixtan"},"content":"            \"\\\\[(E)\\\\]\\\\[(\\\\*|\\\\s)\\\\] ([a-zA-Z0-9\\\\s]+) \\\\(at: (\\\\d{4}-\\\\d{2}-\\\\d{2} \\\\d{2}:\\\\d{2})\\\\)\");"},{"lineNumber":29,"author":{"gitId":"deyixtan"},"content":""},{"lineNumber":30,"author":{"gitId":"deyixtan"},"content":"    /**"},{"lineNumber":31,"author":{"gitId":"deyixtan"},"content":"     * Parses a list of raw text lines and generate a TaskList from it."},{"lineNumber":32,"author":{"gitId":"deyixtan"},"content":"     *"},{"lineNumber":33,"author":{"gitId":"deyixtan"},"content":"     * @param lines List of raw task data."},{"lineNumber":34,"author":{"gitId":"deyixtan"},"content":"     * @return TaskList object."},{"lineNumber":35,"author":{"gitId":"deyixtan"},"content":"     * @throws QuackersException If invalid task data specified."},{"lineNumber":36,"author":{"gitId":"deyixtan"},"content":"     */"},{"lineNumber":37,"author":{"gitId":"deyixtan"},"content":"    public static ArrayList\u003cTask\u003e getTaskListData(List\u003cString\u003e lines) throws QuackersException {"},{"lineNumber":38,"author":{"gitId":"deyixtan"},"content":"        ArrayList\u003cTask\u003e taskList \u003d new ArrayList\u003c\u003e();"},{"lineNumber":39,"author":{"gitId":"deyixtan"},"content":""},{"lineNumber":40,"author":{"gitId":"deyixtan"},"content":"        for (String line : lines) {"},{"lineNumber":41,"author":{"gitId":"deyixtan"},"content":"            String commandType \u003d FileDataParser.getCommandType(line);"},{"lineNumber":42,"author":{"gitId":"deyixtan"},"content":"            switch (commandType) {"},{"lineNumber":43,"author":{"gitId":"deyixtan"},"content":"            case \"T\":"},{"lineNumber":44,"author":{"gitId":"deyixtan"},"content":"                taskList.add(FileDataParser.getTodoData(line));"},{"lineNumber":45,"author":{"gitId":"deyixtan"},"content":"                break;"},{"lineNumber":46,"author":{"gitId":"deyixtan"},"content":"            case \"D\":"},{"lineNumber":47,"author":{"gitId":"deyixtan"},"content":"                taskList.add(FileDataParser.getDeadlineData(line));"},{"lineNumber":48,"author":{"gitId":"deyixtan"},"content":"                break;"},{"lineNumber":49,"author":{"gitId":"deyixtan"},"content":"            case \"E\":"},{"lineNumber":50,"author":{"gitId":"deyixtan"},"content":"                taskList.add(FileDataParser.getEventData(line));"},{"lineNumber":51,"author":{"gitId":"deyixtan"},"content":"                break;"},{"lineNumber":52,"author":{"gitId":"deyixtan"},"content":"            default:"},{"lineNumber":53,"author":{"gitId":"deyixtan"},"content":"                throw new QuackersException(Ui.getLoadTaskListFailure());"},{"lineNumber":54,"author":{"gitId":"deyixtan"},"content":"            }"},{"lineNumber":55,"author":{"gitId":"deyixtan"},"content":"        }"},{"lineNumber":56,"author":{"gitId":"deyixtan"},"content":"        return taskList;"},{"lineNumber":57,"author":{"gitId":"deyixtan"},"content":"    }"},{"lineNumber":58,"author":{"gitId":"deyixtan"},"content":""},{"lineNumber":59,"author":{"gitId":"deyixtan"},"content":"    /**"},{"lineNumber":60,"author":{"gitId":"deyixtan"},"content":"     * Retrieves the command type from the text input."},{"lineNumber":61,"author":{"gitId":"deyixtan"},"content":"     *"},{"lineNumber":62,"author":{"gitId":"deyixtan"},"content":"     * @param input Raw task data."},{"lineNumber":63,"author":{"gitId":"deyixtan"},"content":"     * @return Command type."},{"lineNumber":64,"author":{"gitId":"deyixtan"},"content":"     * @throws QuackersException If there are no supported command types found."},{"lineNumber":65,"author":{"gitId":"deyixtan"},"content":"     */"},{"lineNumber":66,"author":{"gitId":"deyixtan"},"content":"    private static String getCommandType(String input) throws QuackersException {"},{"lineNumber":67,"author":{"gitId":"deyixtan"},"content":"        Matcher m \u003d FileDataParser.COMMAND_TYPE_PATTERN.matcher(input);"},{"lineNumber":68,"author":{"gitId":"deyixtan"},"content":"        if (!m.find() || m.groupCount() !\u003d 1) {"},{"lineNumber":69,"author":{"gitId":"deyixtan"},"content":"            throw new QuackersException(Ui.getLoadTaskListFailure());"},{"lineNumber":70,"author":{"gitId":"deyixtan"},"content":"        }"},{"lineNumber":71,"author":{"gitId":"deyixtan"},"content":""},{"lineNumber":72,"author":{"gitId":"deyixtan"},"content":"        String commandType \u003d m.group(1);"},{"lineNumber":73,"author":{"gitId":"deyixtan"},"content":"        return commandType;"},{"lineNumber":74,"author":{"gitId":"deyixtan"},"content":"    }"},{"lineNumber":75,"author":{"gitId":"deyixtan"},"content":""},{"lineNumber":76,"author":{"gitId":"deyixtan"},"content":"    /**"},{"lineNumber":77,"author":{"gitId":"deyixtan"},"content":"     * Retrieves the Todo object from the text input."},{"lineNumber":78,"author":{"gitId":"deyixtan"},"content":"     *"},{"lineNumber":79,"author":{"gitId":"deyixtan"},"content":"     * @param input Raw task data."},{"lineNumber":80,"author":{"gitId":"deyixtan"},"content":"     * @return Todo object."},{"lineNumber":81,"author":{"gitId":"deyixtan"},"content":"     * @throws QuackersException If invalid task data specified."},{"lineNumber":82,"author":{"gitId":"deyixtan"},"content":"     */"},{"lineNumber":83,"author":{"gitId":"deyixtan"},"content":"    private static Todo getTodoData(String input) throws QuackersException {"},{"lineNumber":84,"author":{"gitId":"deyixtan"},"content":"        Matcher m \u003d FileDataParser.TODO_DATA_PATTERN.matcher(input);"},{"lineNumber":85,"author":{"gitId":"deyixtan"},"content":"        if (!m.find() || m.groupCount() !\u003d 3) {"},{"lineNumber":86,"author":{"gitId":"deyixtan"},"content":"            throw new QuackersException(Ui.getLoadTaskListFailure());"},{"lineNumber":87,"author":{"gitId":"deyixtan"},"content":"        }"},{"lineNumber":88,"author":{"gitId":"deyixtan"},"content":""},{"lineNumber":89,"author":{"gitId":"deyixtan"},"content":"        Todo todo \u003d new Todo(m.group(3));"},{"lineNumber":90,"author":{"gitId":"deyixtan"},"content":"        if (m.group(2).equals(\"*\")) {"},{"lineNumber":91,"author":{"gitId":"deyixtan"},"content":"            todo.markAsDone();"},{"lineNumber":92,"author":{"gitId":"deyixtan"},"content":"        }"},{"lineNumber":93,"author":{"gitId":"deyixtan"},"content":"        return todo;"},{"lineNumber":94,"author":{"gitId":"deyixtan"},"content":"    }"},{"lineNumber":95,"author":{"gitId":"deyixtan"},"content":""},{"lineNumber":96,"author":{"gitId":"deyixtan"},"content":"    /**"},{"lineNumber":97,"author":{"gitId":"deyixtan"},"content":"     * Retrieves the Deadline object from the text input."},{"lineNumber":98,"author":{"gitId":"deyixtan"},"content":"     *"},{"lineNumber":99,"author":{"gitId":"deyixtan"},"content":"     * @param input Raw task data."},{"lineNumber":100,"author":{"gitId":"deyixtan"},"content":"     * @return Deadline object."},{"lineNumber":101,"author":{"gitId":"deyixtan"},"content":"     * @throws QuackersException If invalid task data specified."},{"lineNumber":102,"author":{"gitId":"deyixtan"},"content":"     */"},{"lineNumber":103,"author":{"gitId":"deyixtan"},"content":"    private static Deadline getDeadlineData(String input) throws QuackersException {"},{"lineNumber":104,"author":{"gitId":"deyixtan"},"content":"        Matcher m \u003d FileDataParser.DEADLINE_DATA_PATTERN.matcher(input);"},{"lineNumber":105,"author":{"gitId":"deyixtan"},"content":"        if (!m.find() || m.groupCount() !\u003d 4) {"},{"lineNumber":106,"author":{"gitId":"deyixtan"},"content":"            throw new QuackersException(Ui.getLoadTaskListFailure());"},{"lineNumber":107,"author":{"gitId":"deyixtan"},"content":"        }"},{"lineNumber":108,"author":{"gitId":"deyixtan"},"content":""},{"lineNumber":109,"author":{"gitId":"deyixtan"},"content":"        Deadline deadline \u003d new Deadline(m.group(3), LocalDateTime.parse(m.group(4), DATETIME_FORMATTER));"},{"lineNumber":110,"author":{"gitId":"deyixtan"},"content":"        if (m.group(2).equals(\"*\")) {"},{"lineNumber":111,"author":{"gitId":"deyixtan"},"content":"            deadline.markAsDone();"},{"lineNumber":112,"author":{"gitId":"deyixtan"},"content":"        }"},{"lineNumber":113,"author":{"gitId":"deyixtan"},"content":"        return deadline;"},{"lineNumber":114,"author":{"gitId":"deyixtan"},"content":"    }"},{"lineNumber":115,"author":{"gitId":"deyixtan"},"content":""},{"lineNumber":116,"author":{"gitId":"deyixtan"},"content":"    /**"},{"lineNumber":117,"author":{"gitId":"deyixtan"},"content":"     * Retrieves the Event object from the text input."},{"lineNumber":118,"author":{"gitId":"deyixtan"},"content":"     *"},{"lineNumber":119,"author":{"gitId":"deyixtan"},"content":"     * @param input Raw task data."},{"lineNumber":120,"author":{"gitId":"deyixtan"},"content":"     * @return Event object."},{"lineNumber":121,"author":{"gitId":"deyixtan"},"content":"     * @throws QuackersException If invalid task data specified."},{"lineNumber":122,"author":{"gitId":"deyixtan"},"content":"     */"},{"lineNumber":123,"author":{"gitId":"deyixtan"},"content":"    private static Event getEventData(String input) throws QuackersException {"},{"lineNumber":124,"author":{"gitId":"deyixtan"},"content":"        Matcher m \u003d FileDataParser.EVENT_DATA_PATTERN.matcher(input);"},{"lineNumber":125,"author":{"gitId":"deyixtan"},"content":"        if (!m.find() || m.groupCount() !\u003d 4) {"},{"lineNumber":126,"author":{"gitId":"deyixtan"},"content":"            throw new QuackersException(Ui.getLoadTaskListFailure());"},{"lineNumber":127,"author":{"gitId":"deyixtan"},"content":"        }"},{"lineNumber":128,"author":{"gitId":"deyixtan"},"content":""},{"lineNumber":129,"author":{"gitId":"deyixtan"},"content":"        Event event \u003d new Event(m.group(3), LocalDateTime.parse(m.group(4), DATETIME_FORMATTER));"},{"lineNumber":130,"author":{"gitId":"deyixtan"},"content":"        if (m.group(2).equals(\"*\")) {"},{"lineNumber":131,"author":{"gitId":"deyixtan"},"content":"            event.markAsDone();"},{"lineNumber":132,"author":{"gitId":"deyixtan"},"content":"        }"},{"lineNumber":133,"author":{"gitId":"deyixtan"},"content":"        return event;"},{"lineNumber":134,"author":{"gitId":"deyixtan"},"content":"    }"},{"lineNumber":135,"author":{"gitId":"deyixtan"},"content":"}"}],"authorContributionMap":{"deyixtan":135}},{"path":"src/main/java/quackers/storage/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"deyixtan"},"content":"package quackers.storage;"},{"lineNumber":2,"author":{"gitId":"deyixtan"},"content":""},{"lineNumber":3,"author":{"gitId":"deyixtan"},"content":"import java.io.IOException;"},{"lineNumber":4,"author":{"gitId":"deyixtan"},"content":"import java.nio.file.Files;"},{"lineNumber":5,"author":{"gitId":"deyixtan"},"content":"import java.nio.file.Path;"},{"lineNumber":6,"author":{"gitId":"deyixtan"},"content":"import java.nio.file.Paths;"},{"lineNumber":7,"author":{"gitId":"deyixtan"},"content":"import java.util.ArrayList;"},{"lineNumber":8,"author":{"gitId":"deyixtan"},"content":"import java.util.List;"},{"lineNumber":9,"author":{"gitId":"deyixtan"},"content":""},{"lineNumber":10,"author":{"gitId":"deyixtan"},"content":"import quackers.QuackersException;"},{"lineNumber":11,"author":{"gitId":"deyixtan"},"content":"import quackers.parser.FileDataParser;"},{"lineNumber":12,"author":{"gitId":"deyixtan"},"content":"import quackers.task.Task;"},{"lineNumber":13,"author":{"gitId":"deyixtan"},"content":"import quackers.tasklist.TaskList;"},{"lineNumber":14,"author":{"gitId":"deyixtan"},"content":"import quackers.ui.Ui;"},{"lineNumber":15,"author":{"gitId":"deyixtan"},"content":""},{"lineNumber":16,"author":{"gitId":"deyixtan"},"content":"/**"},{"lineNumber":17,"author":{"gitId":"deyixtan"},"content":" * Represents the storage capabilities of Quackers."},{"lineNumber":18,"author":{"gitId":"deyixtan"},"content":" */"},{"lineNumber":19,"author":{"gitId":"deyixtan"},"content":"public class Storage {"},{"lineNumber":20,"author":{"gitId":"deyixtan"},"content":""},{"lineNumber":21,"author":{"gitId":"deyixtan"},"content":"    protected Path filePath;"},{"lineNumber":22,"author":{"gitId":"deyixtan"},"content":""},{"lineNumber":23,"author":{"gitId":"deyixtan"},"content":"    /**"},{"lineNumber":24,"author":{"gitId":"deyixtan"},"content":"     * Constructs the core Storage object."},{"lineNumber":25,"author":{"gitId":"deyixtan"},"content":"     *"},{"lineNumber":26,"author":{"gitId":"deyixtan"},"content":"     * @param filePath Path to file containing tasks data."},{"lineNumber":27,"author":{"gitId":"deyixtan"},"content":"     */"},{"lineNumber":28,"author":{"gitId":"deyixtan"},"content":"    public Storage(String filePath) {"},{"lineNumber":29,"author":{"gitId":"deyixtan"},"content":"        this.filePath \u003d Paths.get(System.getProperty(\"user.dir\"), filePath);"},{"lineNumber":30,"author":{"gitId":"deyixtan"},"content":"    }"},{"lineNumber":31,"author":{"gitId":"deyixtan"},"content":""},{"lineNumber":32,"author":{"gitId":"deyixtan"},"content":"    /**"},{"lineNumber":33,"author":{"gitId":"deyixtan"},"content":"     * Loads the tasks data file."},{"lineNumber":34,"author":{"gitId":"deyixtan"},"content":"     *"},{"lineNumber":35,"author":{"gitId":"deyixtan"},"content":"     * @return List of tasks generated from the data file."},{"lineNumber":36,"author":{"gitId":"deyixtan"},"content":"     * @throws QuackersException If the data file cannot be opened."},{"lineNumber":37,"author":{"gitId":"deyixtan"},"content":"     */"},{"lineNumber":38,"author":{"gitId":"deyixtan"},"content":"    public ArrayList\u003cTask\u003e load() throws QuackersException {"},{"lineNumber":39,"author":{"gitId":"deyixtan"},"content":"        try {"},{"lineNumber":40,"author":{"gitId":"deyixtan"},"content":"            List\u003cString\u003e lines;"},{"lineNumber":41,"author":{"gitId":"deyixtan"},"content":"            lines \u003d Files.readAllLines(this.filePath);"},{"lineNumber":42,"author":{"gitId":"deyixtan"},"content":""},{"lineNumber":43,"author":{"gitId":"deyixtan"},"content":"            ArrayList\u003cTask\u003e taskList \u003d FileDataParser.getTaskListData(lines);"},{"lineNumber":44,"author":{"gitId":"deyixtan"},"content":"            return taskList;"},{"lineNumber":45,"author":{"gitId":"deyixtan"},"content":"        } catch (IOException e) {"},{"lineNumber":46,"author":{"gitId":"deyixtan"},"content":"            this.forceCreateStorageDirectory();"},{"lineNumber":47,"author":{"gitId":"deyixtan"},"content":"            throw new QuackersException(Ui.getLoadTaskListFailure());"},{"lineNumber":48,"author":{"gitId":"deyixtan"},"content":"        }"},{"lineNumber":49,"author":{"gitId":"deyixtan"},"content":"    }"},{"lineNumber":50,"author":{"gitId":"deyixtan"},"content":""},{"lineNumber":51,"author":{"gitId":"deyixtan"},"content":"    /**"},{"lineNumber":52,"author":{"gitId":"deyixtan"},"content":"     * Saves the existing list of tasks onto the disk."},{"lineNumber":53,"author":{"gitId":"deyixtan"},"content":"     *"},{"lineNumber":54,"author":{"gitId":"deyixtan"},"content":"     * @param taskList Existing list of tasks."},{"lineNumber":55,"author":{"gitId":"deyixtan"},"content":"     * @throws QuackersException If the data file cannot be opened."},{"lineNumber":56,"author":{"gitId":"deyixtan"},"content":"     */"},{"lineNumber":57,"author":{"gitId":"deyixtan"},"content":"    public void save(TaskList taskList) throws QuackersException {"},{"lineNumber":58,"author":{"gitId":"deyixtan"},"content":"        try {"},{"lineNumber":59,"author":{"gitId":"deyixtan"},"content":"            StringBuilder sb \u003d new StringBuilder();"},{"lineNumber":60,"author":{"gitId":"deyixtan"},"content":"            for (Task task : taskList.getList()) {"},{"lineNumber":61,"author":{"gitId":"deyixtan"},"content":"                sb.append(task);"},{"lineNumber":62,"author":{"gitId":"deyixtan"},"content":"                sb.append(\u0027\\n\u0027);"},{"lineNumber":63,"author":{"gitId":"deyixtan"},"content":"            }"},{"lineNumber":64,"author":{"gitId":"deyixtan"},"content":"            Files.write(this.filePath, sb.toString().getBytes());"},{"lineNumber":65,"author":{"gitId":"deyixtan"},"content":"        } catch (IOException e) {"},{"lineNumber":66,"author":{"gitId":"deyixtan"},"content":"            this.forceCreateStorageDirectory();"},{"lineNumber":67,"author":{"gitId":"deyixtan"},"content":"            throw new QuackersException(Ui.getSaveTaskListFailure());"},{"lineNumber":68,"author":{"gitId":"deyixtan"},"content":"        }"},{"lineNumber":69,"author":{"gitId":"deyixtan"},"content":"    }"},{"lineNumber":70,"author":{"gitId":"deyixtan"},"content":""},{"lineNumber":71,"author":{"gitId":"deyixtan"},"content":"    /**"},{"lineNumber":72,"author":{"gitId":"deyixtan"},"content":"     * Force create directories leading to the specified task data file."},{"lineNumber":73,"author":{"gitId":"deyixtan"},"content":"     *"},{"lineNumber":74,"author":{"gitId":"deyixtan"},"content":"     * @throws QuackersException If I/O errors occurred."},{"lineNumber":75,"author":{"gitId":"deyixtan"},"content":"     */"},{"lineNumber":76,"author":{"gitId":"deyixtan"},"content":"    private void forceCreateStorageDirectory() throws QuackersException {"},{"lineNumber":77,"author":{"gitId":"deyixtan"},"content":"        try {"},{"lineNumber":78,"author":{"gitId":"deyixtan"},"content":"            Files.createDirectories(this.filePath.toAbsolutePath().getParent());"},{"lineNumber":79,"author":{"gitId":"deyixtan"},"content":"        } catch (IOException e) {"},{"lineNumber":80,"author":{"gitId":"deyixtan"},"content":"            throw new QuackersException(Ui.getLoadTaskListFailure());"},{"lineNumber":81,"author":{"gitId":"deyixtan"},"content":"        }"},{"lineNumber":82,"author":{"gitId":"deyixtan"},"content":"    }"},{"lineNumber":83,"author":{"gitId":"deyixtan"},"content":"}"}],"authorContributionMap":{"deyixtan":83}},{"path":"src/main/java/quackers/task/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"deyixtan"},"content":"package quackers.task;"},{"lineNumber":2,"author":{"gitId":"deyixtan"},"content":""},{"lineNumber":3,"author":{"gitId":"deyixtan"},"content":"import java.time.LocalDateTime;"},{"lineNumber":4,"author":{"gitId":"deyixtan"},"content":"import java.time.format.DateTimeFormatter;"},{"lineNumber":5,"author":{"gitId":"deyixtan"},"content":""},{"lineNumber":6,"author":{"gitId":"deyixtan"},"content":"/**"},{"lineNumber":7,"author":{"gitId":"deyixtan"},"content":" * Represents a Deadline task."},{"lineNumber":8,"author":{"gitId":"deyixtan"},"content":" */"},{"lineNumber":9,"author":{"gitId":"deyixtan"},"content":"public class Deadline extends Task {"},{"lineNumber":10,"author":{"gitId":"deyixtan"},"content":""},{"lineNumber":11,"author":{"gitId":"deyixtan"},"content":"    private static final DateTimeFormatter DATETIME_FORMATTER \u003d DateTimeFormatter.ofPattern(\"yyyy-MM-dd HH:mm\");"},{"lineNumber":12,"author":{"gitId":"deyixtan"},"content":""},{"lineNumber":13,"author":{"gitId":"deyixtan"},"content":"    protected LocalDateTime by;"},{"lineNumber":14,"author":{"gitId":"deyixtan"},"content":""},{"lineNumber":15,"author":{"gitId":"deyixtan"},"content":"    /**"},{"lineNumber":16,"author":{"gitId":"deyixtan"},"content":"     * Constructs a Deadline object."},{"lineNumber":17,"author":{"gitId":"deyixtan"},"content":"     *"},{"lineNumber":18,"author":{"gitId":"deyixtan"},"content":"     * @param description Task description."},{"lineNumber":19,"author":{"gitId":"deyixtan"},"content":"     * @param by Task date and time."},{"lineNumber":20,"author":{"gitId":"deyixtan"},"content":"     */"},{"lineNumber":21,"author":{"gitId":"deyixtan"},"content":"    public Deadline(String description, LocalDateTime by) {"},{"lineNumber":22,"author":{"gitId":"deyixtan"},"content":"        super(description);"},{"lineNumber":23,"author":{"gitId":"deyixtan"},"content":"        this.by \u003d by;"},{"lineNumber":24,"author":{"gitId":"deyixtan"},"content":"    }"},{"lineNumber":25,"author":{"gitId":"deyixtan"},"content":""},{"lineNumber":26,"author":{"gitId":"deyixtan"},"content":"    /**"},{"lineNumber":27,"author":{"gitId":"deyixtan"},"content":"     * Formats the task string representation."},{"lineNumber":28,"author":{"gitId":"deyixtan"},"content":"     *"},{"lineNumber":29,"author":{"gitId":"deyixtan"},"content":"     * @return Formatted string."},{"lineNumber":30,"author":{"gitId":"deyixtan"},"content":"     */"},{"lineNumber":31,"author":{"gitId":"deyixtan"},"content":"    @Override"},{"lineNumber":32,"author":{"gitId":"deyixtan"},"content":"    public String toString() {"},{"lineNumber":33,"author":{"gitId":"deyixtan"},"content":"        return String.format(\"[D]%s (by: %s)\", super.toString(), this.by.format(Deadline.DATETIME_FORMATTER));"},{"lineNumber":34,"author":{"gitId":"deyixtan"},"content":"    }"},{"lineNumber":35,"author":{"gitId":"deyixtan"},"content":"}"}],"authorContributionMap":{"deyixtan":35}},{"path":"src/main/java/quackers/task/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"deyixtan"},"content":"package quackers.task;"},{"lineNumber":2,"author":{"gitId":"deyixtan"},"content":""},{"lineNumber":3,"author":{"gitId":"deyixtan"},"content":"import java.time.LocalDateTime;"},{"lineNumber":4,"author":{"gitId":"deyixtan"},"content":"import java.time.format.DateTimeFormatter;"},{"lineNumber":5,"author":{"gitId":"deyixtan"},"content":""},{"lineNumber":6,"author":{"gitId":"deyixtan"},"content":"/**"},{"lineNumber":7,"author":{"gitId":"deyixtan"},"content":" * Represents a Event task."},{"lineNumber":8,"author":{"gitId":"deyixtan"},"content":" */"},{"lineNumber":9,"author":{"gitId":"deyixtan"},"content":"public class Event extends Task {"},{"lineNumber":10,"author":{"gitId":"deyixtan"},"content":""},{"lineNumber":11,"author":{"gitId":"deyixtan"},"content":"    private static final DateTimeFormatter DATETIME_FORMATTER \u003d DateTimeFormatter.ofPattern(\"yyyy-MM-dd HH:mm\");"},{"lineNumber":12,"author":{"gitId":"deyixtan"},"content":""},{"lineNumber":13,"author":{"gitId":"deyixtan"},"content":"    protected LocalDateTime at;"},{"lineNumber":14,"author":{"gitId":"deyixtan"},"content":""},{"lineNumber":15,"author":{"gitId":"deyixtan"},"content":"    /**"},{"lineNumber":16,"author":{"gitId":"deyixtan"},"content":"     * Constructs a Event object."},{"lineNumber":17,"author":{"gitId":"deyixtan"},"content":"     * @param description Task description."},{"lineNumber":18,"author":{"gitId":"deyixtan"},"content":"     * @param at Task date and time."},{"lineNumber":19,"author":{"gitId":"deyixtan"},"content":"     */"},{"lineNumber":20,"author":{"gitId":"deyixtan"},"content":"    public Event(String description, LocalDateTime at) {"},{"lineNumber":21,"author":{"gitId":"deyixtan"},"content":"        super(description);"},{"lineNumber":22,"author":{"gitId":"deyixtan"},"content":"        this.at \u003d at;"},{"lineNumber":23,"author":{"gitId":"deyixtan"},"content":"    }"},{"lineNumber":24,"author":{"gitId":"deyixtan"},"content":""},{"lineNumber":25,"author":{"gitId":"deyixtan"},"content":"    /**"},{"lineNumber":26,"author":{"gitId":"deyixtan"},"content":"     * Formats the task string representation."},{"lineNumber":27,"author":{"gitId":"deyixtan"},"content":"     *"},{"lineNumber":28,"author":{"gitId":"deyixtan"},"content":"     * @return Formatted string."},{"lineNumber":29,"author":{"gitId":"deyixtan"},"content":"     */"},{"lineNumber":30,"author":{"gitId":"deyixtan"},"content":"    @Override"},{"lineNumber":31,"author":{"gitId":"deyixtan"},"content":"    public String toString() {"},{"lineNumber":32,"author":{"gitId":"deyixtan"},"content":"        return String.format(\"[E]%s (at: %s)\", super.toString(), this.at.format(Event.DATETIME_FORMATTER));"},{"lineNumber":33,"author":{"gitId":"deyixtan"},"content":"    }"},{"lineNumber":34,"author":{"gitId":"deyixtan"},"content":"}"}],"authorContributionMap":{"deyixtan":34}},{"path":"src/main/java/quackers/task/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"deyixtan"},"content":"package quackers.task;"},{"lineNumber":2,"author":{"gitId":"deyixtan"},"content":""},{"lineNumber":3,"author":{"gitId":"deyixtan"},"content":"/**"},{"lineNumber":4,"author":{"gitId":"deyixtan"},"content":" * Represents the abstract task."},{"lineNumber":5,"author":{"gitId":"deyixtan"},"content":" */"},{"lineNumber":6,"author":{"gitId":"deyixtan"},"content":"public abstract class Task {"},{"lineNumber":7,"author":{"gitId":"deyixtan"},"content":""},{"lineNumber":8,"author":{"gitId":"deyixtan"},"content":"    protected String description;"},{"lineNumber":9,"author":{"gitId":"deyixtan"},"content":"    protected boolean isDone;"},{"lineNumber":10,"author":{"gitId":"deyixtan"},"content":""},{"lineNumber":11,"author":{"gitId":"deyixtan"},"content":"    /**"},{"lineNumber":12,"author":{"gitId":"deyixtan"},"content":"     * Constructs a Task object."},{"lineNumber":13,"author":{"gitId":"deyixtan"},"content":"     *"},{"lineNumber":14,"author":{"gitId":"deyixtan"},"content":"     * @param description Task description."},{"lineNumber":15,"author":{"gitId":"deyixtan"},"content":"     */"},{"lineNumber":16,"author":{"gitId":"deyixtan"},"content":"    public Task(String description) {"},{"lineNumber":17,"author":{"gitId":"deyixtan"},"content":"        this.description \u003d description;"},{"lineNumber":18,"author":{"gitId":"deyixtan"},"content":"        this.isDone \u003d false;"},{"lineNumber":19,"author":{"gitId":"deyixtan"},"content":"    }"},{"lineNumber":20,"author":{"gitId":"deyixtan"},"content":""},{"lineNumber":21,"author":{"gitId":"deyixtan"},"content":"    public String getDescription() {"},{"lineNumber":22,"author":{"gitId":"deyixtan"},"content":"        return this.description;"},{"lineNumber":23,"author":{"gitId":"deyixtan"},"content":"    }"},{"lineNumber":24,"author":{"gitId":"deyixtan"},"content":""},{"lineNumber":25,"author":{"gitId":"deyixtan"},"content":"    public String getStatusIcon() {"},{"lineNumber":26,"author":{"gitId":"deyixtan"},"content":"        return (this.isDone ? \"*\" : \" \");"},{"lineNumber":27,"author":{"gitId":"deyixtan"},"content":"    }"},{"lineNumber":28,"author":{"gitId":"deyixtan"},"content":""},{"lineNumber":29,"author":{"gitId":"deyixtan"},"content":"    public void markAsDone() {"},{"lineNumber":30,"author":{"gitId":"deyixtan"},"content":"        this.isDone \u003d true;"},{"lineNumber":31,"author":{"gitId":"deyixtan"},"content":"    }"},{"lineNumber":32,"author":{"gitId":"deyixtan"},"content":""},{"lineNumber":33,"author":{"gitId":"deyixtan"},"content":"    public void markAsUndone() {"},{"lineNumber":34,"author":{"gitId":"deyixtan"},"content":"        this.isDone \u003d false;"},{"lineNumber":35,"author":{"gitId":"deyixtan"},"content":"    }"},{"lineNumber":36,"author":{"gitId":"deyixtan"},"content":""},{"lineNumber":37,"author":{"gitId":"deyixtan"},"content":"    @Override"},{"lineNumber":38,"author":{"gitId":"deyixtan"},"content":"    public String toString() {"},{"lineNumber":39,"author":{"gitId":"deyixtan"},"content":"        return String.format(\"[%s] %s\", this.getStatusIcon(), this.description);"},{"lineNumber":40,"author":{"gitId":"deyixtan"},"content":"    }"},{"lineNumber":41,"author":{"gitId":"deyixtan"},"content":"}"}],"authorContributionMap":{"deyixtan":41}},{"path":"src/main/java/quackers/task/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"deyixtan"},"content":"package quackers.task;"},{"lineNumber":2,"author":{"gitId":"deyixtan"},"content":""},{"lineNumber":3,"author":{"gitId":"deyixtan"},"content":"/**"},{"lineNumber":4,"author":{"gitId":"deyixtan"},"content":" * Represents a Todo task."},{"lineNumber":5,"author":{"gitId":"deyixtan"},"content":" */"},{"lineNumber":6,"author":{"gitId":"deyixtan"},"content":"public class Todo extends Task {"},{"lineNumber":7,"author":{"gitId":"deyixtan"},"content":""},{"lineNumber":8,"author":{"gitId":"deyixtan"},"content":"    /**"},{"lineNumber":9,"author":{"gitId":"deyixtan"},"content":"     * Constructs a Task object."},{"lineNumber":10,"author":{"gitId":"deyixtan"},"content":"     *"},{"lineNumber":11,"author":{"gitId":"deyixtan"},"content":"     * @param description Task description."},{"lineNumber":12,"author":{"gitId":"deyixtan"},"content":"     */"},{"lineNumber":13,"author":{"gitId":"deyixtan"},"content":"    public Todo(String description) {"},{"lineNumber":14,"author":{"gitId":"deyixtan"},"content":"        super(description);"},{"lineNumber":15,"author":{"gitId":"deyixtan"},"content":"    }"},{"lineNumber":16,"author":{"gitId":"deyixtan"},"content":""},{"lineNumber":17,"author":{"gitId":"deyixtan"},"content":"    /**"},{"lineNumber":18,"author":{"gitId":"deyixtan"},"content":"     * Formats the task string representation."},{"lineNumber":19,"author":{"gitId":"deyixtan"},"content":"     *"},{"lineNumber":20,"author":{"gitId":"deyixtan"},"content":"     * @return Formatted string."},{"lineNumber":21,"author":{"gitId":"deyixtan"},"content":"     */"},{"lineNumber":22,"author":{"gitId":"deyixtan"},"content":"    @Override"},{"lineNumber":23,"author":{"gitId":"deyixtan"},"content":"    public String toString() {"},{"lineNumber":24,"author":{"gitId":"deyixtan"},"content":"        return String.format(\"[T]%s\", super.toString());"},{"lineNumber":25,"author":{"gitId":"deyixtan"},"content":"    }"},{"lineNumber":26,"author":{"gitId":"deyixtan"},"content":"}"}],"authorContributionMap":{"deyixtan":26}},{"path":"src/main/java/quackers/tasklist/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"deyixtan"},"content":"package quackers.tasklist;"},{"lineNumber":2,"author":{"gitId":"deyixtan"},"content":""},{"lineNumber":3,"author":{"gitId":"deyixtan"},"content":"import java.util.ArrayList;"},{"lineNumber":4,"author":{"gitId":"deyixtan"},"content":""},{"lineNumber":5,"author":{"gitId":"deyixtan"},"content":"import quackers.QuackersException;"},{"lineNumber":6,"author":{"gitId":"deyixtan"},"content":"import quackers.task.Task;"},{"lineNumber":7,"author":{"gitId":"deyixtan"},"content":"import quackers.ui.Ui;"},{"lineNumber":8,"author":{"gitId":"deyixtan"},"content":""},{"lineNumber":9,"author":{"gitId":"deyixtan"},"content":"/**"},{"lineNumber":10,"author":{"gitId":"deyixtan"},"content":" * Represents the task management capabilities of Quackers."},{"lineNumber":11,"author":{"gitId":"deyixtan"},"content":" */"},{"lineNumber":12,"author":{"gitId":"deyixtan"},"content":"public class TaskList {"},{"lineNumber":13,"author":{"gitId":"deyixtan"},"content":""},{"lineNumber":14,"author":{"gitId":"deyixtan"},"content":"    protected ArrayList\u003cTask\u003e taskList;"},{"lineNumber":15,"author":{"gitId":"deyixtan"},"content":""},{"lineNumber":16,"author":{"gitId":"deyixtan"},"content":"    /**"},{"lineNumber":17,"author":{"gitId":"deyixtan"},"content":"     * Constructs an empty TaskList object."},{"lineNumber":18,"author":{"gitId":"deyixtan"},"content":"     */"},{"lineNumber":19,"author":{"gitId":"deyixtan"},"content":"    public TaskList() {"},{"lineNumber":20,"author":{"gitId":"deyixtan"},"content":"        this.taskList \u003d new ArrayList\u003c\u003e();"},{"lineNumber":21,"author":{"gitId":"deyixtan"},"content":"    }"},{"lineNumber":22,"author":{"gitId":"deyixtan"},"content":""},{"lineNumber":23,"author":{"gitId":"deyixtan"},"content":"    /**"},{"lineNumber":24,"author":{"gitId":"deyixtan"},"content":"     * Constructs a TaskList object by populating a list of existing tasks."},{"lineNumber":25,"author":{"gitId":"deyixtan"},"content":"     *"},{"lineNumber":26,"author":{"gitId":"deyixtan"},"content":"     * @param taskList List of tasks."},{"lineNumber":27,"author":{"gitId":"deyixtan"},"content":"     */"},{"lineNumber":28,"author":{"gitId":"deyixtan"},"content":"    public TaskList(ArrayList\u003cTask\u003e taskList) {"},{"lineNumber":29,"author":{"gitId":"deyixtan"},"content":"        this.taskList \u003d new ArrayList\u003c\u003e(taskList);"},{"lineNumber":30,"author":{"gitId":"deyixtan"},"content":"    }"},{"lineNumber":31,"author":{"gitId":"deyixtan"},"content":""},{"lineNumber":32,"author":{"gitId":"deyixtan"},"content":"    /**"},{"lineNumber":33,"author":{"gitId":"deyixtan"},"content":"     * Retrieves the current size of the list."},{"lineNumber":34,"author":{"gitId":"deyixtan"},"content":"     *"},{"lineNumber":35,"author":{"gitId":"deyixtan"},"content":"     * @return Size of list."},{"lineNumber":36,"author":{"gitId":"deyixtan"},"content":"     */"},{"lineNumber":37,"author":{"gitId":"deyixtan"},"content":"    public int size() {"},{"lineNumber":38,"author":{"gitId":"deyixtan"},"content":"        return this.taskList.size();"},{"lineNumber":39,"author":{"gitId":"deyixtan"},"content":"    }"},{"lineNumber":40,"author":{"gitId":"deyixtan"},"content":""},{"lineNumber":41,"author":{"gitId":"deyixtan"},"content":"    /**"},{"lineNumber":42,"author":{"gitId":"deyixtan"},"content":"     * Retrieves the list of tasks."},{"lineNumber":43,"author":{"gitId":"deyixtan"},"content":"     *"},{"lineNumber":44,"author":{"gitId":"deyixtan"},"content":"     * @return List of tasks."},{"lineNumber":45,"author":{"gitId":"deyixtan"},"content":"     */"},{"lineNumber":46,"author":{"gitId":"deyixtan"},"content":"    public ArrayList\u003cTask\u003e getList() {"},{"lineNumber":47,"author":{"gitId":"deyixtan"},"content":"        return this.taskList;"},{"lineNumber":48,"author":{"gitId":"deyixtan"},"content":"    }"},{"lineNumber":49,"author":{"gitId":"deyixtan"},"content":""},{"lineNumber":50,"author":{"gitId":"deyixtan"},"content":"    /**"},{"lineNumber":51,"author":{"gitId":"deyixtan"},"content":"     * Retrieves the task at a given index."},{"lineNumber":52,"author":{"gitId":"deyixtan"},"content":"     *"},{"lineNumber":53,"author":{"gitId":"deyixtan"},"content":"     * @param taskIndex Task index."},{"lineNumber":54,"author":{"gitId":"deyixtan"},"content":"     * @return Task at the given index."},{"lineNumber":55,"author":{"gitId":"deyixtan"},"content":"     */"},{"lineNumber":56,"author":{"gitId":"deyixtan"},"content":"    public Task get(int taskIndex) {"},{"lineNumber":57,"author":{"gitId":"deyixtan"},"content":"        return this.taskList.get(taskIndex);"},{"lineNumber":58,"author":{"gitId":"deyixtan"},"content":"    }"},{"lineNumber":59,"author":{"gitId":"deyixtan"},"content":""},{"lineNumber":60,"author":{"gitId":"deyixtan"},"content":"    /**"},{"lineNumber":61,"author":{"gitId":"deyixtan"},"content":"     * Retrieves the TaskList object."},{"lineNumber":62,"author":{"gitId":"deyixtan"},"content":"     *"},{"lineNumber":63,"author":{"gitId":"deyixtan"},"content":"     * @return TaskList object."},{"lineNumber":64,"author":{"gitId":"deyixtan"},"content":"     */"},{"lineNumber":65,"author":{"gitId":"deyixtan"},"content":"    public TaskList getTaskList() {"},{"lineNumber":66,"author":{"gitId":"deyixtan"},"content":"        return new TaskList(this.taskList);"},{"lineNumber":67,"author":{"gitId":"deyixtan"},"content":"    }"},{"lineNumber":68,"author":{"gitId":"deyixtan"},"content":""},{"lineNumber":69,"author":{"gitId":"deyixtan"},"content":"    /**"},{"lineNumber":70,"author":{"gitId":"deyixtan"},"content":"     * Retrieves the current size of a specific task in the list."},{"lineNumber":71,"author":{"gitId":"deyixtan"},"content":"     *"},{"lineNumber":72,"author":{"gitId":"deyixtan"},"content":"     * @param cls Class of specific task."},{"lineNumber":73,"author":{"gitId":"deyixtan"},"content":"     * @return Size of specific list of tasks."},{"lineNumber":74,"author":{"gitId":"deyixtan"},"content":"     */"},{"lineNumber":75,"author":{"gitId":"deyixtan"},"content":"    public int getTaskCount(Class\u003c? extends Task\u003e cls) {"},{"lineNumber":76,"author":{"gitId":"deyixtan"},"content":"        int count \u003d 0;"},{"lineNumber":77,"author":{"gitId":"deyixtan"},"content":"        for (Task task : this.taskList) {"},{"lineNumber":78,"author":{"gitId":"deyixtan"},"content":"            if (task.getClass() \u003d\u003d cls) {"},{"lineNumber":79,"author":{"gitId":"deyixtan"},"content":"                count +\u003d 1;"},{"lineNumber":80,"author":{"gitId":"deyixtan"},"content":"            }"},{"lineNumber":81,"author":{"gitId":"deyixtan"},"content":"        }"},{"lineNumber":82,"author":{"gitId":"deyixtan"},"content":"        return count;"},{"lineNumber":83,"author":{"gitId":"deyixtan"},"content":"    }"},{"lineNumber":84,"author":{"gitId":"deyixtan"},"content":""},{"lineNumber":85,"author":{"gitId":"deyixtan"},"content":"    /**"},{"lineNumber":86,"author":{"gitId":"deyixtan"},"content":"     * Retrieves all the tasks with description match a given keyword."},{"lineNumber":87,"author":{"gitId":"deyixtan"},"content":"     *"},{"lineNumber":88,"author":{"gitId":"deyixtan"},"content":"     * @param keyword Keyword to search."},{"lineNumber":89,"author":{"gitId":"deyixtan"},"content":"     * @return List of tasks."},{"lineNumber":90,"author":{"gitId":"deyixtan"},"content":"     */"},{"lineNumber":91,"author":{"gitId":"deyixtan"},"content":"    public TaskList findTasks(String keyword) {"},{"lineNumber":92,"author":{"gitId":"deyixtan"},"content":"        ArrayList\u003cTask\u003e temp \u003d new ArrayList\u003cTask\u003e();"},{"lineNumber":93,"author":{"gitId":"deyixtan"},"content":"        for (Task task : this.taskList) {"},{"lineNumber":94,"author":{"gitId":"deyixtan"},"content":"            if (task.getDescription().contains(keyword)) {"},{"lineNumber":95,"author":{"gitId":"deyixtan"},"content":"                temp.add(task);"},{"lineNumber":96,"author":{"gitId":"deyixtan"},"content":"            }"},{"lineNumber":97,"author":{"gitId":"deyixtan"},"content":"        }"},{"lineNumber":98,"author":{"gitId":"deyixtan"},"content":"        return new TaskList(temp);"},{"lineNumber":99,"author":{"gitId":"deyixtan"},"content":"    }"},{"lineNumber":100,"author":{"gitId":"deyixtan"},"content":""},{"lineNumber":101,"author":{"gitId":"deyixtan"},"content":"    /**"},{"lineNumber":102,"author":{"gitId":"deyixtan"},"content":"     * Adds task to list."},{"lineNumber":103,"author":{"gitId":"deyixtan"},"content":"     *"},{"lineNumber":104,"author":{"gitId":"deyixtan"},"content":"     * @param task Task object."},{"lineNumber":105,"author":{"gitId":"deyixtan"},"content":"     */"},{"lineNumber":106,"author":{"gitId":"deyixtan"},"content":"    public void addTask(Task task) {"},{"lineNumber":107,"author":{"gitId":"deyixtan"},"content":"        this.taskList.add(task);"},{"lineNumber":108,"author":{"gitId":"deyixtan"},"content":"    }"},{"lineNumber":109,"author":{"gitId":"deyixtan"},"content":""},{"lineNumber":110,"author":{"gitId":"deyixtan"},"content":""},{"lineNumber":111,"author":{"gitId":"deyixtan"},"content":"    /**"},{"lineNumber":112,"author":{"gitId":"deyixtan"},"content":"     * Deletes task from list with a given index."},{"lineNumber":113,"author":{"gitId":"deyixtan"},"content":"     *"},{"lineNumber":114,"author":{"gitId":"deyixtan"},"content":"     * @param taskIndex Task index."},{"lineNumber":115,"author":{"gitId":"deyixtan"},"content":"     * @return Deleted task."},{"lineNumber":116,"author":{"gitId":"deyixtan"},"content":"     * @throws QuackersException If index specified is invalid."},{"lineNumber":117,"author":{"gitId":"deyixtan"},"content":"     */"},{"lineNumber":118,"author":{"gitId":"deyixtan"},"content":"    public Task deleteTask(int taskIndex) throws QuackersException {"},{"lineNumber":119,"author":{"gitId":"deyixtan"},"content":"        try {"},{"lineNumber":120,"author":{"gitId":"deyixtan"},"content":"            return this.taskList.remove(taskIndex - 1);"},{"lineNumber":121,"author":{"gitId":"deyixtan"},"content":"        } catch (IndexOutOfBoundsException e) {"},{"lineNumber":122,"author":{"gitId":"deyixtan"},"content":"            throw new QuackersException(Ui.getDeleteTaskFailure());"},{"lineNumber":123,"author":{"gitId":"deyixtan"},"content":"        }"},{"lineNumber":124,"author":{"gitId":"deyixtan"},"content":"    }"},{"lineNumber":125,"author":{"gitId":"deyixtan"},"content":""},{"lineNumber":126,"author":{"gitId":"deyixtan"},"content":"    /**"},{"lineNumber":127,"author":{"gitId":"deyixtan"},"content":"     * Marks task from list as completed with a given index."},{"lineNumber":128,"author":{"gitId":"deyixtan"},"content":"     *"},{"lineNumber":129,"author":{"gitId":"deyixtan"},"content":"     * @param taskIndex Task index."},{"lineNumber":130,"author":{"gitId":"deyixtan"},"content":"     * @return Marked task."},{"lineNumber":131,"author":{"gitId":"deyixtan"},"content":"     * @throws QuackersException If index specified is invalid."},{"lineNumber":132,"author":{"gitId":"deyixtan"},"content":"     */"},{"lineNumber":133,"author":{"gitId":"deyixtan"},"content":"    public Task markDone(int taskIndex) throws QuackersException {"},{"lineNumber":134,"author":{"gitId":"deyixtan"},"content":"        try {"},{"lineNumber":135,"author":{"gitId":"deyixtan"},"content":"            Task task \u003d this.taskList.get(taskIndex - 1);"},{"lineNumber":136,"author":{"gitId":"deyixtan"},"content":"            task.markAsDone();"},{"lineNumber":137,"author":{"gitId":"deyixtan"},"content":"            return task;"},{"lineNumber":138,"author":{"gitId":"deyixtan"},"content":"        } catch (IndexOutOfBoundsException e) {"},{"lineNumber":139,"author":{"gitId":"deyixtan"},"content":"            throw new QuackersException(Ui.getMarkDoneTaskFailure());"},{"lineNumber":140,"author":{"gitId":"deyixtan"},"content":"        }"},{"lineNumber":141,"author":{"gitId":"deyixtan"},"content":"    }"},{"lineNumber":142,"author":{"gitId":"deyixtan"},"content":""},{"lineNumber":143,"author":{"gitId":"deyixtan"},"content":"    /**"},{"lineNumber":144,"author":{"gitId":"deyixtan"},"content":"     * Marks task from list as incomplete with a given index."},{"lineNumber":145,"author":{"gitId":"deyixtan"},"content":"     *"},{"lineNumber":146,"author":{"gitId":"deyixtan"},"content":"     * @param taskIndex Task index."},{"lineNumber":147,"author":{"gitId":"deyixtan"},"content":"     * @return Marked task."},{"lineNumber":148,"author":{"gitId":"deyixtan"},"content":"     * @throws QuackersException If index specified is invalid."},{"lineNumber":149,"author":{"gitId":"deyixtan"},"content":"     */"},{"lineNumber":150,"author":{"gitId":"deyixtan"},"content":"    public Task markUndone(int taskIndex) throws QuackersException {"},{"lineNumber":151,"author":{"gitId":"deyixtan"},"content":"        try {"},{"lineNumber":152,"author":{"gitId":"deyixtan"},"content":"            Task task \u003d this.taskList.get(taskIndex - 1);"},{"lineNumber":153,"author":{"gitId":"deyixtan"},"content":"            task.markAsUndone();"},{"lineNumber":154,"author":{"gitId":"deyixtan"},"content":"            return task;"},{"lineNumber":155,"author":{"gitId":"deyixtan"},"content":"        } catch (IndexOutOfBoundsException e) {"},{"lineNumber":156,"author":{"gitId":"deyixtan"},"content":"            throw new QuackersException(Ui.getMarkUndoneTaskFailure());"},{"lineNumber":157,"author":{"gitId":"deyixtan"},"content":"        }"},{"lineNumber":158,"author":{"gitId":"deyixtan"},"content":"    }"},{"lineNumber":159,"author":{"gitId":"deyixtan"},"content":"}"}],"authorContributionMap":{"deyixtan":159}},{"path":"src/main/java/quackers/ui/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"deyixtan"},"content":"package quackers.ui;"},{"lineNumber":2,"author":{"gitId":"deyixtan"},"content":""},{"lineNumber":3,"author":{"gitId":"deyixtan"},"content":"import quackers.task.Task;"},{"lineNumber":4,"author":{"gitId":"deyixtan"},"content":"import quackers.tasklist.TaskList;"},{"lineNumber":5,"author":{"gitId":"deyixtan"},"content":""},{"lineNumber":6,"author":{"gitId":"deyixtan"},"content":"/**"},{"lineNumber":7,"author":{"gitId":"deyixtan"},"content":" * Represents the Ui capabilities of Quackers."},{"lineNumber":8,"author":{"gitId":"deyixtan"},"content":" */"},{"lineNumber":9,"author":{"gitId":"deyixtan"},"content":"public class Ui {"},{"lineNumber":10,"author":{"gitId":"deyixtan"},"content":""},{"lineNumber":11,"author":{"gitId":"deyixtan"},"content":"    private static final String NEWLINE \u003d \"\\n\";"},{"lineNumber":12,"author":{"gitId":"deyixtan"},"content":"    private static final String TAB \u003d \"\\t\";"},{"lineNumber":13,"author":{"gitId":"deyixtan"},"content":"    private static final String SPACE \u003d \" \";"},{"lineNumber":14,"author":{"gitId":"deyixtan"},"content":"    private static final String PERIOD \u003d \".\";"},{"lineNumber":15,"author":{"gitId":"deyixtan"},"content":"    private static final String DOUBLE_QUOTE \u003d \"\\\"\";"},{"lineNumber":16,"author":{"gitId":"deyixtan"},"content":"    private static final String ERROR_HEADING \u003d \"Oh no... \";"},{"lineNumber":17,"author":{"gitId":"deyixtan"},"content":"    private static final String INVALID_COMMAND \u003d \"I\u0027m not trained with to understand this yet...\";"},{"lineNumber":18,"author":{"gitId":"deyixtan"},"content":"    private static final String GREETING \u003d \"Quack quack! I\u0027m Quackers, a duck really good with task management!\""},{"lineNumber":19,"author":{"gitId":"deyixtan"},"content":"            + NEWLINE + \"To know more about what I can do for you, quack \u0027usage\u0027.\""},{"lineNumber":20,"author":{"gitId":"deyixtan"},"content":"            + NEWLINE + \"Is there anything I can do for you today?\";"},{"lineNumber":21,"author":{"gitId":"deyixtan"},"content":"    private static final String USAGE \u003d \"These are the commands available:\""},{"lineNumber":22,"author":{"gitId":"deyixtan"},"content":"            + NEWLINE + TAB + \"- usage\""},{"lineNumber":23,"author":{"gitId":"deyixtan"},"content":"            + NEWLINE + TAB + \"- bye\""},{"lineNumber":24,"author":{"gitId":"deyixtan"},"content":"            + NEWLINE + TAB + \"- list\""},{"lineNumber":25,"author":{"gitId":"deyixtan"},"content":"            + NEWLINE + TAB + \"- find \u003ckeyword\u003e\""},{"lineNumber":26,"author":{"gitId":"deyixtan"},"content":"            + NEWLINE + TAB + \"- stats\""},{"lineNumber":27,"author":{"gitId":"deyixtan"},"content":"            + NEWLINE + TAB + \"- todo \u003ctask_description\u003e\""},{"lineNumber":28,"author":{"gitId":"deyixtan"},"content":"            + NEWLINE + TAB + \"- deadline \u003ctask_description\u003e /by \u003cdate_time\u003e\""},{"lineNumber":29,"author":{"gitId":"deyixtan"},"content":"            + NEWLINE + TAB + \"- event \u003ctask_description\u003e /at \u003cdate_time\u003e\""},{"lineNumber":30,"author":{"gitId":"deyixtan"},"content":"            + NEWLINE + TAB + \"- delete \u003ctask_number\u003e\""},{"lineNumber":31,"author":{"gitId":"deyixtan"},"content":"            + NEWLINE + TAB + \"- done \u003ctask_number\u003e\";"},{"lineNumber":32,"author":{"gitId":"deyixtan"},"content":"    private static final String BYE_SUCCESS \u003d \"Alright, take care. Hope to see you again!\";"},{"lineNumber":33,"author":{"gitId":"deyixtan"},"content":"    private static final String STATISTICS_SUCCESS \u003d \"\";"},{"lineNumber":34,"author":{"gitId":"deyixtan"},"content":"    private static final String STORAGE_LOAD_FAILURE \u003d \"Argh, I can\u0027t load your data file.\";"},{"lineNumber":35,"author":{"gitId":"deyixtan"},"content":"    private static final String STORAGE_SAVE_FAILURE \u003d \"Argh, I can\u0027t save your data.\""},{"lineNumber":36,"author":{"gitId":"deyixtan"},"content":"            + NEWLINE + \"I believe you do not have the necessary data directory set up.\""},{"lineNumber":37,"author":{"gitId":"deyixtan"},"content":"            + NEWLINE + \"I\u0027ve taken the liberty to set them up for you. Please try saving again...\""},{"lineNumber":38,"author":{"gitId":"deyixtan"},"content":"            + NEWLINE + \"Quack quack...\";"},{"lineNumber":39,"author":{"gitId":"deyixtan"},"content":"    private static final String TASK_LIST_TITLE \u003d \"Tasks currently in your list:\";"},{"lineNumber":40,"author":{"gitId":"deyixtan"},"content":"    private static final String TASK_LIST_EMPTY \u003d \"There isn\u0027t any task found in the list.\";"},{"lineNumber":41,"author":{"gitId":"deyixtan"},"content":"    private static final String TASK_ADD_SUCCESS \u003d \"has been successfully added to the list.\";"},{"lineNumber":42,"author":{"gitId":"deyixtan"},"content":"    private static final String TASK_DELETE_SUCCESS \u003d \"has been successfully removed from the list.\";"},{"lineNumber":43,"author":{"gitId":"deyixtan"},"content":"    private static final String TASK_DELETE_FAILURE \u003d \"I can\u0027t remove something that doesn\u0027t even exist...\";"},{"lineNumber":44,"author":{"gitId":"deyixtan"},"content":"    private static final String TASK_MARK_DONE_SUCCESS \u003d \"has been successfully marked as completed.\";"},{"lineNumber":45,"author":{"gitId":"deyixtan"},"content":"    private static final String TASK_MARK_DONE_FAILURE \u003d \"I can\u0027t mark something that doesn\u0027t even exist...\";"},{"lineNumber":46,"author":{"gitId":"deyixtan"},"content":"    private static final String TASK_MARK_UNDONE_SUCCESS \u003d \"has been successfully marked as incomplete.\";"},{"lineNumber":47,"author":{"gitId":"deyixtan"},"content":"    private static final String TASK_MARK_UNDONE_FAILURE \u003d \"I can\u0027t mark something that doesn\u0027t even exist...\";"},{"lineNumber":48,"author":{"gitId":"deyixtan"},"content":""},{"lineNumber":49,"author":{"gitId":"deyixtan"},"content":"    /**"},{"lineNumber":50,"author":{"gitId":"deyixtan"},"content":"     * Formats any given message into an error message."},{"lineNumber":51,"author":{"gitId":"deyixtan"},"content":"     *"},{"lineNumber":52,"author":{"gitId":"deyixtan"},"content":"     * @param message Message input."},{"lineNumber":53,"author":{"gitId":"deyixtan"},"content":"     * @return Error message."},{"lineNumber":54,"author":{"gitId":"deyixtan"},"content":"     */"},{"lineNumber":55,"author":{"gitId":"deyixtan"},"content":"    public static String getErrorMessage(String message) {"},{"lineNumber":56,"author":{"gitId":"deyixtan"},"content":"        return Ui.ERROR_HEADING + message;"},{"lineNumber":57,"author":{"gitId":"deyixtan"},"content":"    }"},{"lineNumber":58,"author":{"gitId":"deyixtan"},"content":""},{"lineNumber":59,"author":{"gitId":"deyixtan"},"content":"    /**"},{"lineNumber":60,"author":{"gitId":"deyixtan"},"content":"     * Retrieves the invalid command message"},{"lineNumber":61,"author":{"gitId":"deyixtan"},"content":"     *"},{"lineNumber":62,"author":{"gitId":"deyixtan"},"content":"     * @return Invalid command message."},{"lineNumber":63,"author":{"gitId":"deyixtan"},"content":"     */"},{"lineNumber":64,"author":{"gitId":"deyixtan"},"content":"    public static String getInvalidCommand() {"},{"lineNumber":65,"author":{"gitId":"deyixtan"},"content":"        return Ui.INVALID_COMMAND;"},{"lineNumber":66,"author":{"gitId":"deyixtan"},"content":"    }"},{"lineNumber":67,"author":{"gitId":"deyixtan"},"content":""},{"lineNumber":68,"author":{"gitId":"deyixtan"},"content":"    /**"},{"lineNumber":69,"author":{"gitId":"deyixtan"},"content":"     * Retrieves the greeting."},{"lineNumber":70,"author":{"gitId":"deyixtan"},"content":"     *"},{"lineNumber":71,"author":{"gitId":"deyixtan"},"content":"     * @return Greeting message."},{"lineNumber":72,"author":{"gitId":"deyixtan"},"content":"     */"},{"lineNumber":73,"author":{"gitId":"deyixtan"},"content":"    public static String getGreeting() {"},{"lineNumber":74,"author":{"gitId":"deyixtan"},"content":"        return Ui.GREETING;"},{"lineNumber":75,"author":{"gitId":"deyixtan"},"content":"    }"},{"lineNumber":76,"author":{"gitId":"deyixtan"},"content":""},{"lineNumber":77,"author":{"gitId":"deyixtan"},"content":"    /**"},{"lineNumber":78,"author":{"gitId":"deyixtan"},"content":"     * Retrieves the UsageCommand message."},{"lineNumber":79,"author":{"gitId":"deyixtan"},"content":"     *"},{"lineNumber":80,"author":{"gitId":"deyixtan"},"content":"     * @return UsageCommand message."},{"lineNumber":81,"author":{"gitId":"deyixtan"},"content":"     */"},{"lineNumber":82,"author":{"gitId":"deyixtan"},"content":"    public static String getUsage() {"},{"lineNumber":83,"author":{"gitId":"deyixtan"},"content":"        return Ui.USAGE;"},{"lineNumber":84,"author":{"gitId":"deyixtan"},"content":"    }"},{"lineNumber":85,"author":{"gitId":"deyixtan"},"content":""},{"lineNumber":86,"author":{"gitId":"deyixtan"},"content":"    /**"},{"lineNumber":87,"author":{"gitId":"deyixtan"},"content":"     * Retrieves the ByeCommand successful message."},{"lineNumber":88,"author":{"gitId":"deyixtan"},"content":"     *"},{"lineNumber":89,"author":{"gitId":"deyixtan"},"content":"     * @return ByeCommand successful message."},{"lineNumber":90,"author":{"gitId":"deyixtan"},"content":"     */"},{"lineNumber":91,"author":{"gitId":"deyixtan"},"content":"    public static String getByeSuccess() {"},{"lineNumber":92,"author":{"gitId":"deyixtan"},"content":"        return Ui.BYE_SUCCESS;"},{"lineNumber":93,"author":{"gitId":"deyixtan"},"content":"    }"},{"lineNumber":94,"author":{"gitId":"deyixtan"},"content":""},{"lineNumber":95,"author":{"gitId":"deyixtan"},"content":"    /**"},{"lineNumber":96,"author":{"gitId":"deyixtan"},"content":"     * Retrieves the StatsCommand successful message."},{"lineNumber":97,"author":{"gitId":"deyixtan"},"content":"     *"},{"lineNumber":98,"author":{"gitId":"deyixtan"},"content":"     * @return StatsCommand successful message"},{"lineNumber":99,"author":{"gitId":"deyixtan"},"content":"     */"},{"lineNumber":100,"author":{"gitId":"deyixtan"},"content":"    public static String getStatsSuccess() {"},{"lineNumber":101,"author":{"gitId":"deyixtan"},"content":"        return Ui.STATISTICS_SUCCESS;"},{"lineNumber":102,"author":{"gitId":"deyixtan"},"content":"    }"},{"lineNumber":103,"author":{"gitId":"deyixtan"},"content":""},{"lineNumber":104,"author":{"gitId":"deyixtan"},"content":"    /**"},{"lineNumber":105,"author":{"gitId":"deyixtan"},"content":"     * Retrieves the message when reading file data failed."},{"lineNumber":106,"author":{"gitId":"deyixtan"},"content":"     *"},{"lineNumber":107,"author":{"gitId":"deyixtan"},"content":"     * @return Reading file data failure message."},{"lineNumber":108,"author":{"gitId":"deyixtan"},"content":"     */"},{"lineNumber":109,"author":{"gitId":"deyixtan"},"content":"    public static String getLoadTaskListFailure() {"},{"lineNumber":110,"author":{"gitId":"deyixtan"},"content":"        return Ui.STORAGE_LOAD_FAILURE;"},{"lineNumber":111,"author":{"gitId":"deyixtan"},"content":"    }"},{"lineNumber":112,"author":{"gitId":"deyixtan"},"content":""},{"lineNumber":113,"author":{"gitId":"deyixtan"},"content":"    /**"},{"lineNumber":114,"author":{"gitId":"deyixtan"},"content":"     * Retrieves the message when writing file data failed."},{"lineNumber":115,"author":{"gitId":"deyixtan"},"content":"     *"},{"lineNumber":116,"author":{"gitId":"deyixtan"},"content":"     * @return Writing file data failure message."},{"lineNumber":117,"author":{"gitId":"deyixtan"},"content":"     */"},{"lineNumber":118,"author":{"gitId":"deyixtan"},"content":"    public static String getSaveTaskListFailure() {"},{"lineNumber":119,"author":{"gitId":"deyixtan"},"content":"        return Ui.STORAGE_SAVE_FAILURE;"},{"lineNumber":120,"author":{"gitId":"deyixtan"},"content":"    }"},{"lineNumber":121,"author":{"gitId":"deyixtan"},"content":""},{"lineNumber":122,"author":{"gitId":"deyixtan"},"content":"    /**"},{"lineNumber":123,"author":{"gitId":"deyixtan"},"content":"     * Generates a formatted text from a list of tasks."},{"lineNumber":124,"author":{"gitId":"deyixtan"},"content":"     * @param tasks List of tasks."},{"lineNumber":125,"author":{"gitId":"deyixtan"},"content":"     * @return Formatted text."},{"lineNumber":126,"author":{"gitId":"deyixtan"},"content":"     */"},{"lineNumber":127,"author":{"gitId":"deyixtan"},"content":"    public static String getTaskList(TaskList tasks) {"},{"lineNumber":128,"author":{"gitId":"deyixtan"},"content":"        if (tasks.size() \u003d\u003d 0) {"},{"lineNumber":129,"author":{"gitId":"deyixtan"},"content":"            return Ui.TASK_LIST_EMPTY;"},{"lineNumber":130,"author":{"gitId":"deyixtan"},"content":"        }"},{"lineNumber":131,"author":{"gitId":"deyixtan"},"content":""},{"lineNumber":132,"author":{"gitId":"deyixtan"},"content":"        StringBuilder sb \u003d new StringBuilder(Ui.TASK_LIST_TITLE + Ui.NEWLINE);"},{"lineNumber":133,"author":{"gitId":"deyixtan"},"content":"        for (int i \u003d 0; i \u003c tasks.size(); i++) {"},{"lineNumber":134,"author":{"gitId":"deyixtan"},"content":"            sb.append(Ui.TAB);"},{"lineNumber":135,"author":{"gitId":"deyixtan"},"content":"            sb.append(i + 1);"},{"lineNumber":136,"author":{"gitId":"deyixtan"},"content":"            sb.append(Ui.PERIOD);"},{"lineNumber":137,"author":{"gitId":"deyixtan"},"content":"            sb.append(Ui.SPACE);"},{"lineNumber":138,"author":{"gitId":"deyixtan"},"content":"            sb.append(tasks.get(i));"},{"lineNumber":139,"author":{"gitId":"deyixtan"},"content":"            sb.append(Ui.NEWLINE);"},{"lineNumber":140,"author":{"gitId":"deyixtan"},"content":"        }"},{"lineNumber":141,"author":{"gitId":"deyixtan"},"content":"        return sb.toString();"},{"lineNumber":142,"author":{"gitId":"deyixtan"},"content":"    }"},{"lineNumber":143,"author":{"gitId":"deyixtan"},"content":""},{"lineNumber":144,"author":{"gitId":"deyixtan"},"content":"    /**"},{"lineNumber":145,"author":{"gitId":"deyixtan"},"content":"     * Retrieves the message when adding task succeeded."},{"lineNumber":146,"author":{"gitId":"deyixtan"},"content":"     *"},{"lineNumber":147,"author":{"gitId":"deyixtan"},"content":"     * @param task Task to add."},{"lineNumber":148,"author":{"gitId":"deyixtan"},"content":"     * @return Add task success message."},{"lineNumber":149,"author":{"gitId":"deyixtan"},"content":"     */"},{"lineNumber":150,"author":{"gitId":"deyixtan"},"content":"    public static String getAddTaskSuccess(Task task) {"},{"lineNumber":151,"author":{"gitId":"deyixtan"},"content":"        return Ui.DOUBLE_QUOTE + task.getDescription() + Ui.DOUBLE_QUOTE + Ui.SPACE + Ui.TASK_ADD_SUCCESS;"},{"lineNumber":152,"author":{"gitId":"deyixtan"},"content":"    }"},{"lineNumber":153,"author":{"gitId":"deyixtan"},"content":""},{"lineNumber":154,"author":{"gitId":"deyixtan"},"content":"    /**"},{"lineNumber":155,"author":{"gitId":"deyixtan"},"content":"     * Retrieves the message when deleting task succeeded."},{"lineNumber":156,"author":{"gitId":"deyixtan"},"content":"     *"},{"lineNumber":157,"author":{"gitId":"deyixtan"},"content":"     * @param task Task to delete."},{"lineNumber":158,"author":{"gitId":"deyixtan"},"content":"     * @return Delete task success message."},{"lineNumber":159,"author":{"gitId":"deyixtan"},"content":"     */"},{"lineNumber":160,"author":{"gitId":"deyixtan"},"content":"    public static String getDeleteTaskSuccess(Task task) {"},{"lineNumber":161,"author":{"gitId":"deyixtan"},"content":"        return Ui.DOUBLE_QUOTE + task.getDescription() + Ui.DOUBLE_QUOTE + Ui.SPACE + Ui.TASK_DELETE_SUCCESS;"},{"lineNumber":162,"author":{"gitId":"deyixtan"},"content":"    }"},{"lineNumber":163,"author":{"gitId":"deyixtan"},"content":""},{"lineNumber":164,"author":{"gitId":"deyixtan"},"content":"    /**"},{"lineNumber":165,"author":{"gitId":"deyixtan"},"content":"     * Retrieves the message when deleting task failed."},{"lineNumber":166,"author":{"gitId":"deyixtan"},"content":"     *"},{"lineNumber":167,"author":{"gitId":"deyixtan"},"content":"     * @return Delete task failure message."},{"lineNumber":168,"author":{"gitId":"deyixtan"},"content":"     */"},{"lineNumber":169,"author":{"gitId":"deyixtan"},"content":"    public static String getDeleteTaskFailure() {"},{"lineNumber":170,"author":{"gitId":"deyixtan"},"content":"        return Ui.TASK_DELETE_FAILURE;"},{"lineNumber":171,"author":{"gitId":"deyixtan"},"content":"    }"},{"lineNumber":172,"author":{"gitId":"deyixtan"},"content":""},{"lineNumber":173,"author":{"gitId":"deyixtan"},"content":"    /**"},{"lineNumber":174,"author":{"gitId":"deyixtan"},"content":"     * Retrieves the message when marking task as complete succeeded."},{"lineNumber":175,"author":{"gitId":"deyixtan"},"content":"     *"},{"lineNumber":176,"author":{"gitId":"deyixtan"},"content":"     * @param task Task to mark."},{"lineNumber":177,"author":{"gitId":"deyixtan"},"content":"     * @return Mark task complete success message."},{"lineNumber":178,"author":{"gitId":"deyixtan"},"content":"     */"},{"lineNumber":179,"author":{"gitId":"deyixtan"},"content":"    public static String getMarkDoneTaskSuccess(Task task) {"},{"lineNumber":180,"author":{"gitId":"deyixtan"},"content":"        return Ui.DOUBLE_QUOTE + task.getDescription() + Ui.DOUBLE_QUOTE + Ui.SPACE + Ui.TASK_MARK_DONE_SUCCESS;"},{"lineNumber":181,"author":{"gitId":"deyixtan"},"content":"    }"},{"lineNumber":182,"author":{"gitId":"deyixtan"},"content":""},{"lineNumber":183,"author":{"gitId":"deyixtan"},"content":"    /**"},{"lineNumber":184,"author":{"gitId":"deyixtan"},"content":"     * Retrieves the message when marking task as complete failed."},{"lineNumber":185,"author":{"gitId":"deyixtan"},"content":"     *"},{"lineNumber":186,"author":{"gitId":"deyixtan"},"content":"     * @return Mark task complete fail message."},{"lineNumber":187,"author":{"gitId":"deyixtan"},"content":"     */"},{"lineNumber":188,"author":{"gitId":"deyixtan"},"content":"    public static String getMarkDoneTaskFailure() {"},{"lineNumber":189,"author":{"gitId":"deyixtan"},"content":"        return Ui.TASK_MARK_DONE_FAILURE;"},{"lineNumber":190,"author":{"gitId":"deyixtan"},"content":"    }"},{"lineNumber":191,"author":{"gitId":"deyixtan"},"content":""},{"lineNumber":192,"author":{"gitId":"deyixtan"},"content":"    /**"},{"lineNumber":193,"author":{"gitId":"deyixtan"},"content":"     * Retrieves the message when marking task as incomplete succeeded."},{"lineNumber":194,"author":{"gitId":"deyixtan"},"content":"     *"},{"lineNumber":195,"author":{"gitId":"deyixtan"},"content":"     * @param task Task to mark."},{"lineNumber":196,"author":{"gitId":"deyixtan"},"content":"     * @return Mark task incomplete success message."},{"lineNumber":197,"author":{"gitId":"deyixtan"},"content":"     */"},{"lineNumber":198,"author":{"gitId":"deyixtan"},"content":"    public static String getMarkUndoneTaskSuccess(Task task) {"},{"lineNumber":199,"author":{"gitId":"deyixtan"},"content":"        return Ui.DOUBLE_QUOTE + task.getDescription() + Ui.DOUBLE_QUOTE + Ui.SPACE + Ui.TASK_MARK_UNDONE_SUCCESS;"},{"lineNumber":200,"author":{"gitId":"deyixtan"},"content":"    }"},{"lineNumber":201,"author":{"gitId":"deyixtan"},"content":""},{"lineNumber":202,"author":{"gitId":"deyixtan"},"content":"    /**"},{"lineNumber":203,"author":{"gitId":"deyixtan"},"content":"     * Retrieves the message when marking task as incomplete failed."},{"lineNumber":204,"author":{"gitId":"deyixtan"},"content":"     *"},{"lineNumber":205,"author":{"gitId":"deyixtan"},"content":"     * @return Mark task incomplete fail message."},{"lineNumber":206,"author":{"gitId":"deyixtan"},"content":"     */"},{"lineNumber":207,"author":{"gitId":"deyixtan"},"content":"    public static String getMarkUndoneTaskFailure() {"},{"lineNumber":208,"author":{"gitId":"deyixtan"},"content":"        return Ui.TASK_MARK_UNDONE_FAILURE;"},{"lineNumber":209,"author":{"gitId":"deyixtan"},"content":"    }"},{"lineNumber":210,"author":{"gitId":"deyixtan"},"content":"}"}],"authorContributionMap":{"deyixtan":210}},{"path":"src/main/java/quackers/ui/javafx/MainWindow.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"deyixtan"},"content":"package quackers.ui.javafx;"},{"lineNumber":2,"author":{"gitId":"deyixtan"},"content":""},{"lineNumber":3,"author":{"gitId":"deyixtan"},"content":"import javafx.application.Platform;"},{"lineNumber":4,"author":{"gitId":"deyixtan"},"content":"import javafx.fxml.FXML;"},{"lineNumber":5,"author":{"gitId":"deyixtan"},"content":"import javafx.scene.control.Button;"},{"lineNumber":6,"author":{"gitId":"deyixtan"},"content":"import javafx.scene.control.ScrollPane;"},{"lineNumber":7,"author":{"gitId":"deyixtan"},"content":"import javafx.scene.control.TextField;"},{"lineNumber":8,"author":{"gitId":"deyixtan"},"content":"import javafx.scene.image.Image;"},{"lineNumber":9,"author":{"gitId":"deyixtan"},"content":"import javafx.scene.layout.AnchorPane;"},{"lineNumber":10,"author":{"gitId":"deyixtan"},"content":"import javafx.scene.layout.VBox;"},{"lineNumber":11,"author":{"gitId":"deyixtan"},"content":"import quackers.Quackers;"},{"lineNumber":12,"author":{"gitId":"deyixtan"},"content":"import quackers.command.CommandResponse;"},{"lineNumber":13,"author":{"gitId":"deyixtan"},"content":"import quackers.command.StatsCommand;"},{"lineNumber":14,"author":{"gitId":"deyixtan"},"content":""},{"lineNumber":15,"author":{"gitId":"deyixtan"},"content":"/**"},{"lineNumber":16,"author":{"gitId":"deyixtan"},"content":" * Controller for MainWindow. Provides the layout for the other controls."},{"lineNumber":17,"author":{"gitId":"deyixtan"},"content":" */"},{"lineNumber":18,"author":{"gitId":"deyixtan"},"content":"public class MainWindow extends AnchorPane {"},{"lineNumber":19,"author":{"gitId":"deyixtan"},"content":"    @FXML"},{"lineNumber":20,"author":{"gitId":"deyixtan"},"content":"    private ScrollPane scrollPane;"},{"lineNumber":21,"author":{"gitId":"deyixtan"},"content":"    @FXML"},{"lineNumber":22,"author":{"gitId":"deyixtan"},"content":"    private VBox dialogContainer;"},{"lineNumber":23,"author":{"gitId":"deyixtan"},"content":"    @FXML"},{"lineNumber":24,"author":{"gitId":"deyixtan"},"content":"    private TextField userInput;"},{"lineNumber":25,"author":{"gitId":"deyixtan"},"content":"    @FXML"},{"lineNumber":26,"author":{"gitId":"deyixtan"},"content":"    private Button sendButton;"},{"lineNumber":27,"author":{"gitId":"deyixtan"},"content":""},{"lineNumber":28,"author":{"gitId":"deyixtan"},"content":"    private Quackers quackers;"},{"lineNumber":29,"author":{"gitId":"deyixtan"},"content":""},{"lineNumber":30,"author":{"gitId":"deyixtan"},"content":"    private Image quackersImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/Quackers.png\"));"},{"lineNumber":31,"author":{"gitId":"deyixtan"},"content":"    private Image userImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/User.png\"));"},{"lineNumber":32,"author":{"gitId":"deyixtan"},"content":""},{"lineNumber":33,"author":{"gitId":"deyixtan"},"content":"    /**"},{"lineNumber":34,"author":{"gitId":"deyixtan"},"content":"     * Initialises GUI control properties."},{"lineNumber":35,"author":{"gitId":"deyixtan"},"content":"     */"},{"lineNumber":36,"author":{"gitId":"deyixtan"},"content":"    @FXML"},{"lineNumber":37,"author":{"gitId":"deyixtan"},"content":"    public void initialize() {"},{"lineNumber":38,"author":{"gitId":"deyixtan"},"content":"        this.scrollPane.vvalueProperty().bind("},{"lineNumber":39,"author":{"gitId":"deyixtan"},"content":"                this.dialogContainer.heightProperty());"},{"lineNumber":40,"author":{"gitId":"deyixtan"},"content":"    }"},{"lineNumber":41,"author":{"gitId":"deyixtan"},"content":""},{"lineNumber":42,"author":{"gitId":"deyixtan"},"content":"    public void setQuackers(Quackers d) {"},{"lineNumber":43,"author":{"gitId":"deyixtan"},"content":"        this.quackers \u003d d;"},{"lineNumber":44,"author":{"gitId":"deyixtan"},"content":"        this.dialogContainer.getChildren().add("},{"lineNumber":45,"author":{"gitId":"deyixtan"},"content":"                QuackersTextDialogBox.getDialogBox(this.quackers.getGreeting(), this.quackersImage));"},{"lineNumber":46,"author":{"gitId":"deyixtan"},"content":"    }"},{"lineNumber":47,"author":{"gitId":"deyixtan"},"content":""},{"lineNumber":48,"author":{"gitId":"deyixtan"},"content":"    /**"},{"lineNumber":49,"author":{"gitId":"deyixtan"},"content":"     * Creates two dialog boxes, one echoing user input and the other containing Quackers\u0027s reply."},{"lineNumber":50,"author":{"gitId":"deyixtan"},"content":"     * Clears the user input after processing."},{"lineNumber":51,"author":{"gitId":"deyixtan"},"content":"     */"},{"lineNumber":52,"author":{"gitId":"deyixtan"},"content":"    @FXML"},{"lineNumber":53,"author":{"gitId":"deyixtan"},"content":"    private void handleUserInput() {"},{"lineNumber":54,"author":{"gitId":"deyixtan"},"content":"        String input \u003d this.userInput.getText();"},{"lineNumber":55,"author":{"gitId":"deyixtan"},"content":"        CommandResponse response \u003d this.quackers.getResponse(input);"},{"lineNumber":56,"author":{"gitId":"deyixtan"},"content":"        if (response.canExit()) {"},{"lineNumber":57,"author":{"gitId":"deyixtan"},"content":"            Platform.exit();"},{"lineNumber":58,"author":{"gitId":"deyixtan"},"content":"        }"},{"lineNumber":59,"author":{"gitId":"deyixtan"},"content":""},{"lineNumber":60,"author":{"gitId":"deyixtan"},"content":"        if (!input.isBlank()) {"},{"lineNumber":61,"author":{"gitId":"deyixtan"},"content":"            this.dialogContainer.getChildren().add(UserTextDialogBox.getDialogBox(input, this.userImage));"},{"lineNumber":62,"author":{"gitId":"deyixtan"},"content":"            if (response.getCommandClass() \u003d\u003d StatsCommand.class) {"},{"lineNumber":63,"author":{"gitId":"deyixtan"},"content":"                this.dialogContainer.getChildren().add("},{"lineNumber":64,"author":{"gitId":"deyixtan"},"content":"                        QuackersPieChartDialogBox.getDialogBox(this.quackers.getTaskList(), this.quackersImage));"},{"lineNumber":65,"author":{"gitId":"deyixtan"},"content":"            } else {"},{"lineNumber":66,"author":{"gitId":"deyixtan"},"content":"                this.dialogContainer.getChildren().add("},{"lineNumber":67,"author":{"gitId":"deyixtan"},"content":"                        QuackersTextDialogBox.getDialogBox(response.toString(), this.quackersImage));"},{"lineNumber":68,"author":{"gitId":"deyixtan"},"content":"            }"},{"lineNumber":69,"author":{"gitId":"deyixtan"},"content":"        }"},{"lineNumber":70,"author":{"gitId":"deyixtan"},"content":"        this.userInput.clear();"},{"lineNumber":71,"author":{"gitId":"deyixtan"},"content":"    }"},{"lineNumber":72,"author":{"gitId":"deyixtan"},"content":"}"}],"authorContributionMap":{"deyixtan":72}},{"path":"src/main/java/quackers/ui/javafx/QuackersPieChartDialogBox.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"deyixtan"},"content":"package quackers.ui.javafx;"},{"lineNumber":2,"author":{"gitId":"deyixtan"},"content":""},{"lineNumber":3,"author":{"gitId":"deyixtan"},"content":"import java.io.IOException;"},{"lineNumber":4,"author":{"gitId":"deyixtan"},"content":""},{"lineNumber":5,"author":{"gitId":"deyixtan"},"content":"import javafx.collections.FXCollections;"},{"lineNumber":6,"author":{"gitId":"deyixtan"},"content":"import javafx.collections.ObservableList;"},{"lineNumber":7,"author":{"gitId":"deyixtan"},"content":"import javafx.fxml.FXML;"},{"lineNumber":8,"author":{"gitId":"deyixtan"},"content":"import javafx.fxml.FXMLLoader;"},{"lineNumber":9,"author":{"gitId":"deyixtan"},"content":"import javafx.scene.chart.PieChart;"},{"lineNumber":10,"author":{"gitId":"deyixtan"},"content":"import javafx.scene.image.Image;"},{"lineNumber":11,"author":{"gitId":"deyixtan"},"content":"import javafx.scene.image.ImageView;"},{"lineNumber":12,"author":{"gitId":"deyixtan"},"content":"import javafx.scene.layout.HBox;"},{"lineNumber":13,"author":{"gitId":"deyixtan"},"content":"import quackers.task.Deadline;"},{"lineNumber":14,"author":{"gitId":"deyixtan"},"content":"import quackers.task.Event;"},{"lineNumber":15,"author":{"gitId":"deyixtan"},"content":"import quackers.task.Todo;"},{"lineNumber":16,"author":{"gitId":"deyixtan"},"content":"import quackers.tasklist.TaskList;"},{"lineNumber":17,"author":{"gitId":"deyixtan"},"content":""},{"lineNumber":18,"author":{"gitId":"deyixtan"},"content":"/**"},{"lineNumber":19,"author":{"gitId":"deyixtan"},"content":" * This control represents a dialog box consisting of an ImageView to represent the speaker\u0027s face and a PieChart"},{"lineNumber":20,"author":{"gitId":"deyixtan"},"content":" * containing statistics generated from the speaker."},{"lineNumber":21,"author":{"gitId":"deyixtan"},"content":" */"},{"lineNumber":22,"author":{"gitId":"deyixtan"},"content":"public class QuackersPieChartDialogBox extends HBox {"},{"lineNumber":23,"author":{"gitId":"deyixtan"},"content":"    @FXML"},{"lineNumber":24,"author":{"gitId":"deyixtan"},"content":"    private PieChart dialog;"},{"lineNumber":25,"author":{"gitId":"deyixtan"},"content":"    @FXML"},{"lineNumber":26,"author":{"gitId":"deyixtan"},"content":"    private ImageView displayPicture;"},{"lineNumber":27,"author":{"gitId":"deyixtan"},"content":""},{"lineNumber":28,"author":{"gitId":"deyixtan"},"content":"    private QuackersPieChartDialogBox(TaskList taskList, Image image) {"},{"lineNumber":29,"author":{"gitId":"deyixtan"},"content":"        try {"},{"lineNumber":30,"author":{"gitId":"deyixtan"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader("},{"lineNumber":31,"author":{"gitId":"deyixtan"},"content":"                    MainWindow.class.getResource(\"/view/QuackersPieChartDialogBox.fxml\"));"},{"lineNumber":32,"author":{"gitId":"deyixtan"},"content":"            fxmlLoader.setController(this);"},{"lineNumber":33,"author":{"gitId":"deyixtan"},"content":"            fxmlLoader.setRoot(this);"},{"lineNumber":34,"author":{"gitId":"deyixtan"},"content":"            fxmlLoader.load();"},{"lineNumber":35,"author":{"gitId":"deyixtan"},"content":"        } catch (IOException e) {"},{"lineNumber":36,"author":{"gitId":"deyixtan"},"content":"            e.printStackTrace();"},{"lineNumber":37,"author":{"gitId":"deyixtan"},"content":"        }"},{"lineNumber":38,"author":{"gitId":"deyixtan"},"content":"        this.loadProperties(taskList, image);"},{"lineNumber":39,"author":{"gitId":"deyixtan"},"content":"    }"},{"lineNumber":40,"author":{"gitId":"deyixtan"},"content":""},{"lineNumber":41,"author":{"gitId":"deyixtan"},"content":"    public static QuackersPieChartDialogBox getDialogBox(TaskList taskList, Image img) {"},{"lineNumber":42,"author":{"gitId":"deyixtan"},"content":"        return new QuackersPieChartDialogBox(taskList, img);"},{"lineNumber":43,"author":{"gitId":"deyixtan"},"content":"    }"},{"lineNumber":44,"author":{"gitId":"deyixtan"},"content":""},{"lineNumber":45,"author":{"gitId":"deyixtan"},"content":"    private void loadProperties(TaskList taskList, Image image) {"},{"lineNumber":46,"author":{"gitId":"deyixtan"},"content":"        this.setDisplayPicture(image);"},{"lineNumber":47,"author":{"gitId":"deyixtan"},"content":"        this.setTaskListBreakdown(taskList);"},{"lineNumber":48,"author":{"gitId":"deyixtan"},"content":"    }"},{"lineNumber":49,"author":{"gitId":"deyixtan"},"content":""},{"lineNumber":50,"author":{"gitId":"deyixtan"},"content":"    private void setDisplayPicture(Image image) {"},{"lineNumber":51,"author":{"gitId":"deyixtan"},"content":"        this.displayPicture.setImage(image);"},{"lineNumber":52,"author":{"gitId":"deyixtan"},"content":"    }"},{"lineNumber":53,"author":{"gitId":"deyixtan"},"content":""},{"lineNumber":54,"author":{"gitId":"deyixtan"},"content":"    private void setTaskListBreakdown(TaskList taskList) {"},{"lineNumber":55,"author":{"gitId":"deyixtan"},"content":"        this.dialog.setTitle(\"Task List Breakdown\");"},{"lineNumber":56,"author":{"gitId":"deyixtan"},"content":"        this.dialog.setData(this.getBreakdownData(taskList));"},{"lineNumber":57,"author":{"gitId":"deyixtan"},"content":"    }"},{"lineNumber":58,"author":{"gitId":"deyixtan"},"content":""},{"lineNumber":59,"author":{"gitId":"deyixtan"},"content":"    private ObservableList\u003cPieChart.Data\u003e getBreakdownData(TaskList taskList) {"},{"lineNumber":60,"author":{"gitId":"deyixtan"},"content":"        int todoCount \u003d taskList.getTaskCount(Todo.class);"},{"lineNumber":61,"author":{"gitId":"deyixtan"},"content":"        int deadlineCount \u003d taskList.getTaskCount(Deadline.class);"},{"lineNumber":62,"author":{"gitId":"deyixtan"},"content":"        int eventCount \u003d taskList.getTaskCount(Event.class);"},{"lineNumber":63,"author":{"gitId":"deyixtan"},"content":"        int total \u003d todoCount + deadlineCount + eventCount;"},{"lineNumber":64,"author":{"gitId":"deyixtan"},"content":""},{"lineNumber":65,"author":{"gitId":"deyixtan"},"content":"        double todoPercentage \u003d Double.valueOf(todoCount) / total * 100;"},{"lineNumber":66,"author":{"gitId":"deyixtan"},"content":"        double deadlinePercentage \u003d Double.valueOf(deadlineCount) / total * 100;"},{"lineNumber":67,"author":{"gitId":"deyixtan"},"content":"        double eventPercentage \u003d Double.valueOf(eventCount) / total * 100;"},{"lineNumber":68,"author":{"gitId":"deyixtan"},"content":""},{"lineNumber":69,"author":{"gitId":"deyixtan"},"content":"        String todoText \u003d String.format(\"To-do %.2f%%\", todoPercentage);"},{"lineNumber":70,"author":{"gitId":"deyixtan"},"content":"        String deadlineText \u003d String.format(\"Deadline %.2f%%\", deadlinePercentage);"},{"lineNumber":71,"author":{"gitId":"deyixtan"},"content":"        String eventText \u003d String.format(\"Event %.2f%%\", eventPercentage);"},{"lineNumber":72,"author":{"gitId":"deyixtan"},"content":""},{"lineNumber":73,"author":{"gitId":"deyixtan"},"content":"        ObservableList\u003cPieChart.Data\u003e pieChartData \u003d"},{"lineNumber":74,"author":{"gitId":"deyixtan"},"content":"                FXCollections.observableArrayList("},{"lineNumber":75,"author":{"gitId":"deyixtan"},"content":"                        new PieChart.Data(todoText, todoCount),"},{"lineNumber":76,"author":{"gitId":"deyixtan"},"content":"                        new PieChart.Data(deadlineText, deadlineCount),"},{"lineNumber":77,"author":{"gitId":"deyixtan"},"content":"                        new PieChart.Data(eventText, eventCount));"},{"lineNumber":78,"author":{"gitId":"deyixtan"},"content":"        return pieChartData;"},{"lineNumber":79,"author":{"gitId":"deyixtan"},"content":"    }"},{"lineNumber":80,"author":{"gitId":"deyixtan"},"content":"}"}],"authorContributionMap":{"deyixtan":80}},{"path":"src/main/java/quackers/ui/javafx/QuackersTextDialogBox.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"deyixtan"},"content":"package quackers.ui.javafx;"},{"lineNumber":2,"author":{"gitId":"deyixtan"},"content":""},{"lineNumber":3,"author":{"gitId":"deyixtan"},"content":"import java.io.IOException;"},{"lineNumber":4,"author":{"gitId":"deyixtan"},"content":""},{"lineNumber":5,"author":{"gitId":"deyixtan"},"content":"import javafx.fxml.FXML;"},{"lineNumber":6,"author":{"gitId":"deyixtan"},"content":"import javafx.fxml.FXMLLoader;"},{"lineNumber":7,"author":{"gitId":"deyixtan"},"content":"import javafx.scene.control.Label;"},{"lineNumber":8,"author":{"gitId":"deyixtan"},"content":"import javafx.scene.image.Image;"},{"lineNumber":9,"author":{"gitId":"deyixtan"},"content":"import javafx.scene.image.ImageView;"},{"lineNumber":10,"author":{"gitId":"deyixtan"},"content":"import javafx.scene.layout.HBox;"},{"lineNumber":11,"author":{"gitId":"deyixtan"},"content":""},{"lineNumber":12,"author":{"gitId":"deyixtan"},"content":"/**"},{"lineNumber":13,"author":{"gitId":"deyixtan"},"content":" * This control represents a dialog box consisting of an ImageView to represent the speaker\u0027s face and a label"},{"lineNumber":14,"author":{"gitId":"deyixtan"},"content":" * containing text from the speaker."},{"lineNumber":15,"author":{"gitId":"deyixtan"},"content":" */"},{"lineNumber":16,"author":{"gitId":"deyixtan"},"content":"public class QuackersTextDialogBox extends HBox {"},{"lineNumber":17,"author":{"gitId":"deyixtan"},"content":"    @FXML"},{"lineNumber":18,"author":{"gitId":"deyixtan"},"content":"    private Label dialog;"},{"lineNumber":19,"author":{"gitId":"deyixtan"},"content":"    @FXML"},{"lineNumber":20,"author":{"gitId":"deyixtan"},"content":"    private ImageView displayPicture;"},{"lineNumber":21,"author":{"gitId":"deyixtan"},"content":""},{"lineNumber":22,"author":{"gitId":"deyixtan"},"content":"    private QuackersTextDialogBox(String text, Image image) {"},{"lineNumber":23,"author":{"gitId":"deyixtan"},"content":"        try {"},{"lineNumber":24,"author":{"gitId":"deyixtan"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(\"/view/QuackersTextDialogBox.fxml\"));"},{"lineNumber":25,"author":{"gitId":"deyixtan"},"content":"            fxmlLoader.setController(this);"},{"lineNumber":26,"author":{"gitId":"deyixtan"},"content":"            fxmlLoader.setRoot(this);"},{"lineNumber":27,"author":{"gitId":"deyixtan"},"content":"            fxmlLoader.load();"},{"lineNumber":28,"author":{"gitId":"deyixtan"},"content":"        } catch (IOException e) {"},{"lineNumber":29,"author":{"gitId":"deyixtan"},"content":"            e.printStackTrace();"},{"lineNumber":30,"author":{"gitId":"deyixtan"},"content":"        }"},{"lineNumber":31,"author":{"gitId":"deyixtan"},"content":"        this.loadProperties(text, image);"},{"lineNumber":32,"author":{"gitId":"deyixtan"},"content":"    }"},{"lineNumber":33,"author":{"gitId":"deyixtan"},"content":""},{"lineNumber":34,"author":{"gitId":"deyixtan"},"content":"    public static QuackersTextDialogBox getDialogBox(String text, Image img) {"},{"lineNumber":35,"author":{"gitId":"deyixtan"},"content":"        return new QuackersTextDialogBox(text, img);"},{"lineNumber":36,"author":{"gitId":"deyixtan"},"content":"    }"},{"lineNumber":37,"author":{"gitId":"deyixtan"},"content":""},{"lineNumber":38,"author":{"gitId":"deyixtan"},"content":"    private void loadProperties(String text, Image image) {"},{"lineNumber":39,"author":{"gitId":"deyixtan"},"content":"        this.setDisplayPicture(image);"},{"lineNumber":40,"author":{"gitId":"deyixtan"},"content":"        this.setText(text);"},{"lineNumber":41,"author":{"gitId":"deyixtan"},"content":"    }"},{"lineNumber":42,"author":{"gitId":"deyixtan"},"content":""},{"lineNumber":43,"author":{"gitId":"deyixtan"},"content":"    private void setDisplayPicture(Image image) {"},{"lineNumber":44,"author":{"gitId":"deyixtan"},"content":"        this.displayPicture.setImage(image);"},{"lineNumber":45,"author":{"gitId":"deyixtan"},"content":"    }"},{"lineNumber":46,"author":{"gitId":"deyixtan"},"content":""},{"lineNumber":47,"author":{"gitId":"deyixtan"},"content":"    private void setText(String text) {"},{"lineNumber":48,"author":{"gitId":"deyixtan"},"content":"        this.dialog.setText(text);"},{"lineNumber":49,"author":{"gitId":"deyixtan"},"content":"    }"},{"lineNumber":50,"author":{"gitId":"deyixtan"},"content":"}"}],"authorContributionMap":{"deyixtan":50}},{"path":"src/main/java/quackers/ui/javafx/UserTextDialogBox.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"deyixtan"},"content":"package quackers.ui.javafx;"},{"lineNumber":2,"author":{"gitId":"deyixtan"},"content":""},{"lineNumber":3,"author":{"gitId":"deyixtan"},"content":"import java.io.IOException;"},{"lineNumber":4,"author":{"gitId":"deyixtan"},"content":""},{"lineNumber":5,"author":{"gitId":"deyixtan"},"content":"import javafx.fxml.FXML;"},{"lineNumber":6,"author":{"gitId":"deyixtan"},"content":"import javafx.fxml.FXMLLoader;"},{"lineNumber":7,"author":{"gitId":"deyixtan"},"content":"import javafx.scene.control.Label;"},{"lineNumber":8,"author":{"gitId":"deyixtan"},"content":"import javafx.scene.image.Image;"},{"lineNumber":9,"author":{"gitId":"deyixtan"},"content":"import javafx.scene.image.ImageView;"},{"lineNumber":10,"author":{"gitId":"deyixtan"},"content":"import javafx.scene.layout.HBox;"},{"lineNumber":11,"author":{"gitId":"deyixtan"},"content":""},{"lineNumber":12,"author":{"gitId":"deyixtan"},"content":"/**"},{"lineNumber":13,"author":{"gitId":"deyixtan"},"content":" * This control represents a dialog box consisting of an ImageView to represent the speaker\u0027s face and a label"},{"lineNumber":14,"author":{"gitId":"deyixtan"},"content":" * containing text from the speaker."},{"lineNumber":15,"author":{"gitId":"deyixtan"},"content":" */"},{"lineNumber":16,"author":{"gitId":"deyixtan"},"content":"public class UserTextDialogBox extends HBox {"},{"lineNumber":17,"author":{"gitId":"deyixtan"},"content":"    @FXML"},{"lineNumber":18,"author":{"gitId":"deyixtan"},"content":"    private Label dialog;"},{"lineNumber":19,"author":{"gitId":"deyixtan"},"content":"    @FXML"},{"lineNumber":20,"author":{"gitId":"deyixtan"},"content":"    private ImageView displayPicture;"},{"lineNumber":21,"author":{"gitId":"deyixtan"},"content":""},{"lineNumber":22,"author":{"gitId":"deyixtan"},"content":"    private UserTextDialogBox(String text, Image image) {"},{"lineNumber":23,"author":{"gitId":"deyixtan"},"content":"        try {"},{"lineNumber":24,"author":{"gitId":"deyixtan"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(\"/view/UserTextDialogBox.fxml\"));"},{"lineNumber":25,"author":{"gitId":"deyixtan"},"content":"            fxmlLoader.setController(this);"},{"lineNumber":26,"author":{"gitId":"deyixtan"},"content":"            fxmlLoader.setRoot(this);"},{"lineNumber":27,"author":{"gitId":"deyixtan"},"content":"            fxmlLoader.load();"},{"lineNumber":28,"author":{"gitId":"deyixtan"},"content":"        } catch (IOException e) {"},{"lineNumber":29,"author":{"gitId":"deyixtan"},"content":"            e.printStackTrace();"},{"lineNumber":30,"author":{"gitId":"deyixtan"},"content":"        }"},{"lineNumber":31,"author":{"gitId":"deyixtan"},"content":"        this.loadProperties(text, image);"},{"lineNumber":32,"author":{"gitId":"deyixtan"},"content":"    }"},{"lineNumber":33,"author":{"gitId":"deyixtan"},"content":""},{"lineNumber":34,"author":{"gitId":"deyixtan"},"content":"    public static UserTextDialogBox getDialogBox(String text, Image img) {"},{"lineNumber":35,"author":{"gitId":"deyixtan"},"content":"        return new UserTextDialogBox(text, img);"},{"lineNumber":36,"author":{"gitId":"deyixtan"},"content":"    }"},{"lineNumber":37,"author":{"gitId":"deyixtan"},"content":""},{"lineNumber":38,"author":{"gitId":"deyixtan"},"content":"    private void loadProperties(String text, Image image) {"},{"lineNumber":39,"author":{"gitId":"deyixtan"},"content":"        this.setDisplayPicture(image);"},{"lineNumber":40,"author":{"gitId":"deyixtan"},"content":"        this.setText(text);"},{"lineNumber":41,"author":{"gitId":"deyixtan"},"content":"    }"},{"lineNumber":42,"author":{"gitId":"deyixtan"},"content":""},{"lineNumber":43,"author":{"gitId":"deyixtan"},"content":"    private void setDisplayPicture(Image image) {"},{"lineNumber":44,"author":{"gitId":"deyixtan"},"content":"        this.displayPicture.setImage(image);"},{"lineNumber":45,"author":{"gitId":"deyixtan"},"content":"    }"},{"lineNumber":46,"author":{"gitId":"deyixtan"},"content":""},{"lineNumber":47,"author":{"gitId":"deyixtan"},"content":"    private void setText(String text) {"},{"lineNumber":48,"author":{"gitId":"deyixtan"},"content":"        this.dialog.setText(text);"},{"lineNumber":49,"author":{"gitId":"deyixtan"},"content":"    }"},{"lineNumber":50,"author":{"gitId":"deyixtan"},"content":"}"}],"authorContributionMap":{"deyixtan":50}},{"path":"src/main/resources/view/MainWindow.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"deyixtan"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"},{"lineNumber":2,"author":{"gitId":"deyixtan"},"content":""},{"lineNumber":3,"author":{"gitId":"deyixtan"},"content":"\u003c?import javafx.scene.control.Button?\u003e"},{"lineNumber":4,"author":{"gitId":"deyixtan"},"content":"\u003c?import javafx.scene.control.ScrollPane?\u003e"},{"lineNumber":5,"author":{"gitId":"deyixtan"},"content":"\u003c?import javafx.scene.control.TextField?\u003e"},{"lineNumber":6,"author":{"gitId":"deyixtan"},"content":"\u003c?import javafx.scene.layout.AnchorPane?\u003e"},{"lineNumber":7,"author":{"gitId":"deyixtan"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e"},{"lineNumber":8,"author":{"gitId":"deyixtan"},"content":""},{"lineNumber":9,"author":{"gitId":"deyixtan"},"content":"\u003cAnchorPane maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefHeight\u003d\"600.0\" prefWidth\u003d\"617.0\" style\u003d\"-fx-background-color: #c4aead;\" xmlns\u003d\"http://javafx.com/javafx/15.0.1\" xmlns:fx\u003d\"http://javafx.com/fxml/1\" fx:controller\u003d\"quackers.ui.javafx.MainWindow\"\u003e"},{"lineNumber":10,"author":{"gitId":"deyixtan"},"content":"  \u003cchildren\u003e"},{"lineNumber":11,"author":{"gitId":"deyixtan"},"content":"    \u003cTextField fx:id\u003d\"userInput\" layoutY\u003d\"558.0\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"539.0\" style\u003d\"-fx-background-color: #c4aead;\" AnchorPane.bottomAnchor\u003d\"1.0\" /\u003e"},{"lineNumber":12,"author":{"gitId":"deyixtan"},"content":"    \u003cButton fx:id\u003d\"sendButton\" layoutX\u003d\"540.0\" layoutY\u003d\"558.0\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"76.0\" style\u003d\"-fx-background-color: #c4aead; -fx-border-radius: 10px; -fx-border-color: #997a8d;\" text\u003d\"Quack\" /\u003e"},{"lineNumber":13,"author":{"gitId":"deyixtan"},"content":"    \u003cScrollPane fx:id\u003d\"scrollPane\" fitToHeight\u003d\"true\" fitToWidth\u003d\"true\" hbarPolicy\u003d\"NEVER\" hvalue\u003d\"1.0\" prefHeight\u003d\"557.0\" prefWidth\u003d\"617.0\" style\u003d\"-fx-background-color: #708090; -fx-border-color: #708090;\" vvalue\u003d\"1.0\"\u003e"},{"lineNumber":14,"author":{"gitId":"deyixtan"},"content":"      \u003ccontent\u003e"},{"lineNumber":15,"author":{"gitId":"deyixtan"},"content":"        \u003cVBox fx:id\u003d\"dialogContainer\" prefHeight\u003d\"552.0\" prefWidth\u003d\"573.0\" style\u003d\"-fx-background-color: #708090;\" /\u003e"},{"lineNumber":16,"author":{"gitId":"deyixtan"},"content":"      \u003c/content\u003e"},{"lineNumber":17,"author":{"gitId":"deyixtan"},"content":"    \u003c/ScrollPane\u003e"},{"lineNumber":18,"author":{"gitId":"deyixtan"},"content":"  \u003c/children\u003e"},{"lineNumber":19,"author":{"gitId":"deyixtan"},"content":"\u003c/AnchorPane\u003e"}],"authorContributionMap":{"deyixtan":19}},{"path":"src/main/resources/view/QuackersPieChartDialogBox.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"deyixtan"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"},{"lineNumber":2,"author":{"gitId":"deyixtan"},"content":""},{"lineNumber":3,"author":{"gitId":"deyixtan"},"content":"\u003c?import javafx.geometry.Insets?\u003e"},{"lineNumber":4,"author":{"gitId":"deyixtan"},"content":"\u003c?import javafx.scene.chart.PieChart?\u003e"},{"lineNumber":5,"author":{"gitId":"deyixtan"},"content":"\u003c?import javafx.scene.image.ImageView?\u003e"},{"lineNumber":6,"author":{"gitId":"deyixtan"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e"},{"lineNumber":7,"author":{"gitId":"deyixtan"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e"},{"lineNumber":8,"author":{"gitId":"deyixtan"},"content":""},{"lineNumber":9,"author":{"gitId":"deyixtan"},"content":"\u003cfx:root alignment\u003d\"TOP_RIGHT\" maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\" prefHeight\u003d\"0.0\" prefWidth\u003d\"400.0\" style\u003d\"-fx-background-color: #708090;\" type\u003d\"javafx.scene.layout.HBox\" xmlns\u003d\"http://javafx.com/javafx/15.0.1\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e"},{"lineNumber":10,"author":{"gitId":"deyixtan"},"content":"  \u003cchildren\u003e"},{"lineNumber":11,"author":{"gitId":"deyixtan"},"content":"    \u003cImageView fx:id\u003d\"displayPicture\" fitHeight\u003d\"99.0\" fitWidth\u003d\"99.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\" /\u003e"},{"lineNumber":12,"author":{"gitId":"deyixtan"},"content":"      \u003cVBox prefHeight\u003d\"200.0\" prefWidth\u003d\"291.0\" HBox.hgrow\u003d\"SOMETIMES\"\u003e"},{"lineNumber":13,"author":{"gitId":"deyixtan"},"content":"         \u003cchildren\u003e"},{"lineNumber":14,"author":{"gitId":"deyixtan"},"content":"            \u003cPieChart fx:id\u003d\"dialog\" minHeight\u003d\"-Infinity\" prefWidth\u003d\"291.0\" style\u003d\"-fx-background-radius: 10px; -fx-background-color: #c0c0c0; -fx-border-color: #c0c0c0; -fx-border-radius: 10px; -fx-border-width: 10px;\" /\u003e"},{"lineNumber":15,"author":{"gitId":"deyixtan"},"content":"         \u003c/children\u003e"},{"lineNumber":16,"author":{"gitId":"deyixtan"},"content":"      \u003c/VBox\u003e"},{"lineNumber":17,"author":{"gitId":"deyixtan"},"content":"  \u003c/children\u003e"},{"lineNumber":18,"author":{"gitId":"deyixtan"},"content":"  \u003cpadding\u003e"},{"lineNumber":19,"author":{"gitId":"deyixtan"},"content":"    \u003cInsets bottom\u003d\"15.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"15.0\" /\u003e"},{"lineNumber":20,"author":{"gitId":"deyixtan"},"content":"  \u003c/padding\u003e"},{"lineNumber":21,"author":{"gitId":"deyixtan"},"content":"\u003c/fx:root\u003e"}],"authorContributionMap":{"deyixtan":21}},{"path":"src/main/resources/view/QuackersTextDialogBox.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"deyixtan"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"},{"lineNumber":2,"author":{"gitId":"deyixtan"},"content":""},{"lineNumber":3,"author":{"gitId":"deyixtan"},"content":"\u003c?import javafx.geometry.Insets?\u003e"},{"lineNumber":4,"author":{"gitId":"deyixtan"},"content":"\u003c?import javafx.scene.control.Label?\u003e"},{"lineNumber":5,"author":{"gitId":"deyixtan"},"content":"\u003c?import javafx.scene.image.ImageView?\u003e"},{"lineNumber":6,"author":{"gitId":"deyixtan"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e"},{"lineNumber":7,"author":{"gitId":"deyixtan"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e"},{"lineNumber":8,"author":{"gitId":"deyixtan"},"content":""},{"lineNumber":9,"author":{"gitId":"deyixtan"},"content":"\u003cfx:root alignment\u003d\"TOP_RIGHT\" maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\" prefHeight\u003d\"33.0\" prefWidth\u003d\"400.0\" style\u003d\"-fx-background-color: #708090;\" type\u003d\"javafx.scene.layout.HBox\" xmlns\u003d\"http://javafx.com/javafx/15.0.1\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e"},{"lineNumber":10,"author":{"gitId":"deyixtan"},"content":"  \u003cchildren\u003e"},{"lineNumber":11,"author":{"gitId":"deyixtan"},"content":"    \u003cImageView fx:id\u003d\"displayPicture\" fitHeight\u003d\"99.0\" fitWidth\u003d\"99.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\" /\u003e"},{"lineNumber":12,"author":{"gitId":"deyixtan"},"content":"      \u003cVBox prefHeight\u003d\"200.0\" prefWidth\u003d\"291.0\" HBox.hgrow\u003d\"SOMETIMES\"\u003e"},{"lineNumber":13,"author":{"gitId":"deyixtan"},"content":"         \u003cchildren\u003e"},{"lineNumber":14,"author":{"gitId":"deyixtan"},"content":"          \u003cLabel fx:id\u003d\"dialog\" maxHeight\u003d\"1.7976931348623157E308\" minHeight\u003d\"-Infinity\" style\u003d\"-fx-background-radius: 10px; -fx-background-color: #c0c0c0; -fx-border-color: #c0c0c0; -fx-border-radius: 10px; -fx-border-width: 10px;\" text\u003d\"Label\" textFill\u003d\"#3e6504\" wrapText\u003d\"true\" /\u003e"},{"lineNumber":15,"author":{"gitId":"deyixtan"},"content":"         \u003c/children\u003e"},{"lineNumber":16,"author":{"gitId":"deyixtan"},"content":"      \u003c/VBox\u003e"},{"lineNumber":17,"author":{"gitId":"deyixtan"},"content":"  \u003c/children\u003e"},{"lineNumber":18,"author":{"gitId":"deyixtan"},"content":"  \u003cpadding\u003e"},{"lineNumber":19,"author":{"gitId":"deyixtan"},"content":"    \u003cInsets bottom\u003d\"15.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"15.0\" /\u003e"},{"lineNumber":20,"author":{"gitId":"deyixtan"},"content":"  \u003c/padding\u003e"},{"lineNumber":21,"author":{"gitId":"deyixtan"},"content":"\u003c/fx:root\u003e"}],"authorContributionMap":{"deyixtan":21}},{"path":"src/main/resources/view/UserTextDialogBox.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"deyixtan"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"},{"lineNumber":2,"author":{"gitId":"deyixtan"},"content":""},{"lineNumber":3,"author":{"gitId":"deyixtan"},"content":"\u003c?import javafx.geometry.Insets?\u003e"},{"lineNumber":4,"author":{"gitId":"deyixtan"},"content":"\u003c?import javafx.scene.control.Label?\u003e"},{"lineNumber":5,"author":{"gitId":"deyixtan"},"content":"\u003c?import javafx.scene.image.ImageView?\u003e"},{"lineNumber":6,"author":{"gitId":"deyixtan"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e"},{"lineNumber":7,"author":{"gitId":"deyixtan"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e"},{"lineNumber":8,"author":{"gitId":"deyixtan"},"content":""},{"lineNumber":9,"author":{"gitId":"deyixtan"},"content":"\u003cfx:root alignment\u003d\"TOP_RIGHT\" maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\" prefHeight\u003d\"33.0\" prefWidth\u003d\"400.0\" style\u003d\"-fx-background-color: #708090;\" type\u003d\"javafx.scene.layout.HBox\" xmlns\u003d\"http://javafx.com/javafx/15.0.1\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e"},{"lineNumber":10,"author":{"gitId":"deyixtan"},"content":"  \u003cchildren\u003e"},{"lineNumber":11,"author":{"gitId":"deyixtan"},"content":"      \u003cVBox alignment\u003d\"TOP_RIGHT\" prefHeight\u003d\"200.0\" prefWidth\u003d\"291.0\" HBox.hgrow\u003d\"SOMETIMES\"\u003e"},{"lineNumber":12,"author":{"gitId":"deyixtan"},"content":"         \u003cchildren\u003e"},{"lineNumber":13,"author":{"gitId":"deyixtan"},"content":"          \u003cLabel fx:id\u003d\"dialog\" maxHeight\u003d\"1.7976931348623157E308\" minHeight\u003d\"-Infinity\" style\u003d\"-fx-background-radius: 10px; -fx-background-color: #fada5e; -fx-border-color: #fada5e; -fx-border-radius: 10px; -fx-border-width: 10px;\" text\u003d\"Label\" textFill\u003d\"#3e6504\" wrapText\u003d\"true\" /\u003e"},{"lineNumber":14,"author":{"gitId":"deyixtan"},"content":"         \u003c/children\u003e"},{"lineNumber":15,"author":{"gitId":"deyixtan"},"content":"      \u003c/VBox\u003e"},{"lineNumber":16,"author":{"gitId":"deyixtan"},"content":"    \u003cImageView fx:id\u003d\"displayPicture\" fitHeight\u003d\"99.0\" fitWidth\u003d\"99.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\" /\u003e"},{"lineNumber":17,"author":{"gitId":"deyixtan"},"content":"  \u003c/children\u003e"},{"lineNumber":18,"author":{"gitId":"deyixtan"},"content":"  \u003cpadding\u003e"},{"lineNumber":19,"author":{"gitId":"deyixtan"},"content":"    \u003cInsets bottom\u003d\"15.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"15.0\" /\u003e"},{"lineNumber":20,"author":{"gitId":"deyixtan"},"content":"  \u003c/padding\u003e"},{"lineNumber":21,"author":{"gitId":"deyixtan"},"content":"\u003c/fx:root\u003e"}],"authorContributionMap":{"deyixtan":21}},{"path":"src/test/java/quackers/task/DeadlineTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"deyixtan"},"content":"package quackers.task;"},{"lineNumber":2,"author":{"gitId":"deyixtan"},"content":""},{"lineNumber":3,"author":{"gitId":"deyixtan"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;"},{"lineNumber":4,"author":{"gitId":"deyixtan"},"content":"import static org.junit.jupiter.api.Assertions.assertNotEquals;"},{"lineNumber":5,"author":{"gitId":"deyixtan"},"content":""},{"lineNumber":6,"author":{"gitId":"deyixtan"},"content":"import java.time.LocalDateTime;"},{"lineNumber":7,"author":{"gitId":"deyixtan"},"content":"import java.time.format.DateTimeFormatter;"},{"lineNumber":8,"author":{"gitId":"deyixtan"},"content":""},{"lineNumber":9,"author":{"gitId":"deyixtan"},"content":"import org.junit.jupiter.api.Test;"},{"lineNumber":10,"author":{"gitId":"deyixtan"},"content":""},{"lineNumber":11,"author":{"gitId":"deyixtan"},"content":"public class DeadlineTest {"},{"lineNumber":12,"author":{"gitId":"deyixtan"},"content":""},{"lineNumber":13,"author":{"gitId":"deyixtan"},"content":"    private static final DateTimeFormatter DATETIME_FORMATTER \u003d DateTimeFormatter.ofPattern(\"yyyy-MM-dd HH:mm\");"},{"lineNumber":14,"author":{"gitId":"deyixtan"},"content":""},{"lineNumber":15,"author":{"gitId":"deyixtan"},"content":"    @Test"},{"lineNumber":16,"author":{"gitId":"deyixtan"},"content":"    void markAsDone_success() {"},{"lineNumber":17,"author":{"gitId":"deyixtan"},"content":"        LocalDateTime dateTime \u003d LocalDateTime.parse(\"2021-01-01 00:00\", DeadlineTest.DATETIME_FORMATTER);"},{"lineNumber":18,"author":{"gitId":"deyixtan"},"content":"        Deadline deadline \u003d new Deadline(\"Homework\", dateTime);"},{"lineNumber":19,"author":{"gitId":"deyixtan"},"content":"        deadline.markAsDone();"},{"lineNumber":20,"author":{"gitId":"deyixtan"},"content":"        String statusIcon \u003d deadline.getStatusIcon();"},{"lineNumber":21,"author":{"gitId":"deyixtan"},"content":"        assertEquals(\"*\", statusIcon);"},{"lineNumber":22,"author":{"gitId":"deyixtan"},"content":"    }"},{"lineNumber":23,"author":{"gitId":"deyixtan"},"content":""},{"lineNumber":24,"author":{"gitId":"deyixtan"},"content":"    @Test"},{"lineNumber":25,"author":{"gitId":"deyixtan"},"content":"    void markAsDone_fail() {"},{"lineNumber":26,"author":{"gitId":"deyixtan"},"content":"        LocalDateTime dateTime \u003d LocalDateTime.parse(\"2021-01-01 00:00\", DeadlineTest.DATETIME_FORMATTER);"},{"lineNumber":27,"author":{"gitId":"deyixtan"},"content":"        Deadline deadline \u003d new Deadline(\"Homework\", dateTime);"},{"lineNumber":28,"author":{"gitId":"deyixtan"},"content":"        deadline.markAsDone();"},{"lineNumber":29,"author":{"gitId":"deyixtan"},"content":"        deadline.markAsUndone();"},{"lineNumber":30,"author":{"gitId":"deyixtan"},"content":"        String statusIcon \u003d deadline.getStatusIcon();"},{"lineNumber":31,"author":{"gitId":"deyixtan"},"content":"        assertNotEquals(\"*\", statusIcon);"},{"lineNumber":32,"author":{"gitId":"deyixtan"},"content":"    }"},{"lineNumber":33,"author":{"gitId":"deyixtan"},"content":""},{"lineNumber":34,"author":{"gitId":"deyixtan"},"content":"    @Test"},{"lineNumber":35,"author":{"gitId":"deyixtan"},"content":"    void markAsUndone_success() {"},{"lineNumber":36,"author":{"gitId":"deyixtan"},"content":"        LocalDateTime dateTime \u003d LocalDateTime.parse(\"2021-01-01 00:00\", DeadlineTest.DATETIME_FORMATTER);"},{"lineNumber":37,"author":{"gitId":"deyixtan"},"content":"        Deadline deadline \u003d new Deadline(\"Homework\", dateTime);"},{"lineNumber":38,"author":{"gitId":"deyixtan"},"content":"        deadline.markAsDone();"},{"lineNumber":39,"author":{"gitId":"deyixtan"},"content":"        deadline.markAsUndone();"},{"lineNumber":40,"author":{"gitId":"deyixtan"},"content":"        String statusIcon \u003d deadline.getStatusIcon();"},{"lineNumber":41,"author":{"gitId":"deyixtan"},"content":"        assertEquals(\" \", statusIcon);"},{"lineNumber":42,"author":{"gitId":"deyixtan"},"content":"    }"},{"lineNumber":43,"author":{"gitId":"deyixtan"},"content":""},{"lineNumber":44,"author":{"gitId":"deyixtan"},"content":"    @Test"},{"lineNumber":45,"author":{"gitId":"deyixtan"},"content":"    void markAsUndone_fail() {"},{"lineNumber":46,"author":{"gitId":"deyixtan"},"content":"        LocalDateTime dateTime \u003d LocalDateTime.parse(\"2021-01-01 00:00\", DeadlineTest.DATETIME_FORMATTER);"},{"lineNumber":47,"author":{"gitId":"deyixtan"},"content":"        Deadline deadline \u003d new Deadline(\"Homework\", dateTime);"},{"lineNumber":48,"author":{"gitId":"deyixtan"},"content":"        deadline.markAsDone();"},{"lineNumber":49,"author":{"gitId":"deyixtan"},"content":"        String statusIcon \u003d deadline.getStatusIcon();"},{"lineNumber":50,"author":{"gitId":"deyixtan"},"content":"        assertNotEquals(\" \", statusIcon);"},{"lineNumber":51,"author":{"gitId":"deyixtan"},"content":"    }"},{"lineNumber":52,"author":{"gitId":"deyixtan"},"content":"}"}],"authorContributionMap":{"deyixtan":52}},{"path":"src/test/java/quackers/task/EventTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"deyixtan"},"content":"package quackers.task;"},{"lineNumber":2,"author":{"gitId":"deyixtan"},"content":""},{"lineNumber":3,"author":{"gitId":"deyixtan"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;"},{"lineNumber":4,"author":{"gitId":"deyixtan"},"content":"import static org.junit.jupiter.api.Assertions.assertNotEquals;"},{"lineNumber":5,"author":{"gitId":"deyixtan"},"content":""},{"lineNumber":6,"author":{"gitId":"deyixtan"},"content":"import java.time.LocalDateTime;"},{"lineNumber":7,"author":{"gitId":"deyixtan"},"content":"import java.time.format.DateTimeFormatter;"},{"lineNumber":8,"author":{"gitId":"deyixtan"},"content":""},{"lineNumber":9,"author":{"gitId":"deyixtan"},"content":"import org.junit.jupiter.api.Test;"},{"lineNumber":10,"author":{"gitId":"deyixtan"},"content":""},{"lineNumber":11,"author":{"gitId":"deyixtan"},"content":"public class EventTest {"},{"lineNumber":12,"author":{"gitId":"deyixtan"},"content":""},{"lineNumber":13,"author":{"gitId":"deyixtan"},"content":"    private static final DateTimeFormatter DATETIME_FORMATTER \u003d DateTimeFormatter.ofPattern(\"yyyy-MM-dd HH:mm\");"},{"lineNumber":14,"author":{"gitId":"deyixtan"},"content":""},{"lineNumber":15,"author":{"gitId":"deyixtan"},"content":"    @Test"},{"lineNumber":16,"author":{"gitId":"deyixtan"},"content":"    void markAsDone_success() {"},{"lineNumber":17,"author":{"gitId":"deyixtan"},"content":"        LocalDateTime dateTime \u003d LocalDateTime.parse(\"2021-01-01 00:00\", EventTest.DATETIME_FORMATTER);"},{"lineNumber":18,"author":{"gitId":"deyixtan"},"content":"        Event event \u003d new Event(\"Homework\", dateTime);"},{"lineNumber":19,"author":{"gitId":"deyixtan"},"content":"        event.markAsDone();"},{"lineNumber":20,"author":{"gitId":"deyixtan"},"content":"        String statusIcon \u003d event.getStatusIcon();"},{"lineNumber":21,"author":{"gitId":"deyixtan"},"content":"        assertEquals(\"*\", statusIcon);"},{"lineNumber":22,"author":{"gitId":"deyixtan"},"content":"    }"},{"lineNumber":23,"author":{"gitId":"deyixtan"},"content":""},{"lineNumber":24,"author":{"gitId":"deyixtan"},"content":"    @Test"},{"lineNumber":25,"author":{"gitId":"deyixtan"},"content":"    void markAsDone_fail() {"},{"lineNumber":26,"author":{"gitId":"deyixtan"},"content":"        LocalDateTime dateTime \u003d LocalDateTime.parse(\"2021-01-01 00:00\", EventTest.DATETIME_FORMATTER);"},{"lineNumber":27,"author":{"gitId":"deyixtan"},"content":"        Event event \u003d new Event(\"Homework\", dateTime);"},{"lineNumber":28,"author":{"gitId":"deyixtan"},"content":"        event.markAsDone();"},{"lineNumber":29,"author":{"gitId":"deyixtan"},"content":"        event.markAsUndone();"},{"lineNumber":30,"author":{"gitId":"deyixtan"},"content":"        String statusIcon \u003d event.getStatusIcon();"},{"lineNumber":31,"author":{"gitId":"deyixtan"},"content":"        assertNotEquals(\"*\", statusIcon);"},{"lineNumber":32,"author":{"gitId":"deyixtan"},"content":"    }"},{"lineNumber":33,"author":{"gitId":"deyixtan"},"content":""},{"lineNumber":34,"author":{"gitId":"deyixtan"},"content":"    @Test"},{"lineNumber":35,"author":{"gitId":"deyixtan"},"content":"    void markAsUndone_success() {"},{"lineNumber":36,"author":{"gitId":"deyixtan"},"content":"        LocalDateTime dateTime \u003d LocalDateTime.parse(\"2021-01-01 00:00\", EventTest.DATETIME_FORMATTER);"},{"lineNumber":37,"author":{"gitId":"deyixtan"},"content":"        Event event \u003d new Event(\"Homework\", dateTime);"},{"lineNumber":38,"author":{"gitId":"deyixtan"},"content":"        event.markAsDone();"},{"lineNumber":39,"author":{"gitId":"deyixtan"},"content":"        event.markAsUndone();"},{"lineNumber":40,"author":{"gitId":"deyixtan"},"content":"        String statusIcon \u003d event.getStatusIcon();"},{"lineNumber":41,"author":{"gitId":"deyixtan"},"content":"        assertEquals(\" \", statusIcon);"},{"lineNumber":42,"author":{"gitId":"deyixtan"},"content":"    }"},{"lineNumber":43,"author":{"gitId":"deyixtan"},"content":""},{"lineNumber":44,"author":{"gitId":"deyixtan"},"content":"    @Test"},{"lineNumber":45,"author":{"gitId":"deyixtan"},"content":"    void markAsUndone_fail() {"},{"lineNumber":46,"author":{"gitId":"deyixtan"},"content":"        LocalDateTime dateTime \u003d LocalDateTime.parse(\"2021-01-01 00:00\", EventTest.DATETIME_FORMATTER);"},{"lineNumber":47,"author":{"gitId":"deyixtan"},"content":"        Event event \u003d new Event(\"Homework\", dateTime);"},{"lineNumber":48,"author":{"gitId":"deyixtan"},"content":"        event.markAsDone();"},{"lineNumber":49,"author":{"gitId":"deyixtan"},"content":"        String statusIcon \u003d event.getStatusIcon();"},{"lineNumber":50,"author":{"gitId":"deyixtan"},"content":"        assertNotEquals(\" \", statusIcon);"},{"lineNumber":51,"author":{"gitId":"deyixtan"},"content":"    }"},{"lineNumber":52,"author":{"gitId":"deyixtan"},"content":"}"}],"authorContributionMap":{"deyixtan":52}},{"path":"src/test/java/quackers/task/TodoTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"deyixtan"},"content":"package quackers.task;"},{"lineNumber":2,"author":{"gitId":"deyixtan"},"content":""},{"lineNumber":3,"author":{"gitId":"deyixtan"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;"},{"lineNumber":4,"author":{"gitId":"deyixtan"},"content":"import static org.junit.jupiter.api.Assertions.assertNotEquals;"},{"lineNumber":5,"author":{"gitId":"deyixtan"},"content":""},{"lineNumber":6,"author":{"gitId":"deyixtan"},"content":"import org.junit.jupiter.api.Test;"},{"lineNumber":7,"author":{"gitId":"deyixtan"},"content":""},{"lineNumber":8,"author":{"gitId":"deyixtan"},"content":"public class TodoTest {"},{"lineNumber":9,"author":{"gitId":"deyixtan"},"content":""},{"lineNumber":10,"author":{"gitId":"deyixtan"},"content":"    @Test"},{"lineNumber":11,"author":{"gitId":"deyixtan"},"content":"    void markAsDone_success() {"},{"lineNumber":12,"author":{"gitId":"deyixtan"},"content":"        Todo todo \u003d new Todo(\"Homework\");"},{"lineNumber":13,"author":{"gitId":"deyixtan"},"content":"        todo.markAsDone();"},{"lineNumber":14,"author":{"gitId":"deyixtan"},"content":"        String statusIcon \u003d todo.getStatusIcon();"},{"lineNumber":15,"author":{"gitId":"deyixtan"},"content":"        assertEquals(\"*\", statusIcon);"},{"lineNumber":16,"author":{"gitId":"deyixtan"},"content":"    }"},{"lineNumber":17,"author":{"gitId":"deyixtan"},"content":""},{"lineNumber":18,"author":{"gitId":"deyixtan"},"content":"    @Test"},{"lineNumber":19,"author":{"gitId":"deyixtan"},"content":"    void markAsDone_fail() {"},{"lineNumber":20,"author":{"gitId":"deyixtan"},"content":"        Todo todo \u003d new Todo(\"Homework\");"},{"lineNumber":21,"author":{"gitId":"deyixtan"},"content":"        todo.markAsDone();"},{"lineNumber":22,"author":{"gitId":"deyixtan"},"content":"        todo.markAsUndone();"},{"lineNumber":23,"author":{"gitId":"deyixtan"},"content":"        String statusIcon \u003d todo.getStatusIcon();"},{"lineNumber":24,"author":{"gitId":"deyixtan"},"content":"        assertNotEquals(\"*\", statusIcon);"},{"lineNumber":25,"author":{"gitId":"deyixtan"},"content":"    }"},{"lineNumber":26,"author":{"gitId":"deyixtan"},"content":""},{"lineNumber":27,"author":{"gitId":"deyixtan"},"content":"    @Test"},{"lineNumber":28,"author":{"gitId":"deyixtan"},"content":"    void markAsUndone_success() {"},{"lineNumber":29,"author":{"gitId":"deyixtan"},"content":"        Todo todo \u003d new Todo(\"Homework\");"},{"lineNumber":30,"author":{"gitId":"deyixtan"},"content":"        todo.markAsDone();"},{"lineNumber":31,"author":{"gitId":"deyixtan"},"content":"        todo.markAsUndone();"},{"lineNumber":32,"author":{"gitId":"deyixtan"},"content":"        String statusIcon \u003d todo.getStatusIcon();"},{"lineNumber":33,"author":{"gitId":"deyixtan"},"content":"        assertEquals(\" \", statusIcon);"},{"lineNumber":34,"author":{"gitId":"deyixtan"},"content":"    }"},{"lineNumber":35,"author":{"gitId":"deyixtan"},"content":""},{"lineNumber":36,"author":{"gitId":"deyixtan"},"content":"    @Test"},{"lineNumber":37,"author":{"gitId":"deyixtan"},"content":"    void markAsUndone_fail() {"},{"lineNumber":38,"author":{"gitId":"deyixtan"},"content":"        Todo todo \u003d new Todo(\"Homework\");"},{"lineNumber":39,"author":{"gitId":"deyixtan"},"content":"        todo.markAsDone();"},{"lineNumber":40,"author":{"gitId":"deyixtan"},"content":"        String statusIcon \u003d todo.getStatusIcon();"},{"lineNumber":41,"author":{"gitId":"deyixtan"},"content":"        assertNotEquals(\" \", statusIcon);"},{"lineNumber":42,"author":{"gitId":"deyixtan"},"content":"    }"},{"lineNumber":43,"author":{"gitId":"deyixtan"},"content":"}"}],"authorContributionMap":{"deyixtan":43}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"deyixtan"},"content":"usage"},{"lineNumber":2,"author":{"gitId":"deyixtan"},"content":"test"},{"lineNumber":3,"author":{"gitId":"deyixtan"},"content":"todo"},{"lineNumber":4,"author":{"gitId":"deyixtan"},"content":"todo read book"},{"lineNumber":5,"author":{"gitId":"deyixtan"},"content":"list"},{"lineNumber":6,"author":{"gitId":"deyixtan"},"content":"deadline"},{"lineNumber":7,"author":{"gitId":"deyixtan"},"content":"deadline /by June 6th"},{"lineNumber":8,"author":{"gitId":"deyixtan"},"content":"deadline return book"},{"lineNumber":9,"author":{"gitId":"deyixtan"},"content":"deadline return book /at June 6th"},{"lineNumber":10,"author":{"gitId":"deyixtan"},"content":"deadline return book /by June 6th"},{"lineNumber":11,"author":{"gitId":"deyixtan"},"content":"list"},{"lineNumber":12,"author":{"gitId":"deyixtan"},"content":"event"},{"lineNumber":13,"author":{"gitId":"deyixtan"},"content":"event /at Aug 6th 2-4pm"},{"lineNumber":14,"author":{"gitId":"deyixtan"},"content":"event project meeting"},{"lineNumber":15,"author":{"gitId":"deyixtan"},"content":"event project meeting /by Aug 6th 2-4pm"},{"lineNumber":16,"author":{"gitId":"deyixtan"},"content":"event project meeting /at Aug 6th 2-4pm"},{"lineNumber":17,"author":{"gitId":"deyixtan"},"content":"list"},{"lineNumber":18,"author":{"gitId":"deyixtan"},"content":"todo join sports club"},{"lineNumber":19,"author":{"gitId":"deyixtan"},"content":"list"},{"lineNumber":20,"author":{"gitId":"deyixtan"},"content":"done 1"},{"lineNumber":21,"author":{"gitId":"deyixtan"},"content":"done 10"},{"lineNumber":22,"author":{"gitId":"deyixtan"},"content":"done 4"},{"lineNumber":23,"author":{"gitId":"deyixtan"},"content":"done 2"},{"lineNumber":24,"author":{"gitId":"deyixtan"},"content":"done 4"},{"lineNumber":25,"author":{"gitId":"deyixtan"},"content":"list"},{"lineNumber":26,"author":{"gitId":"deyixtan"},"content":"todo borrow book"},{"lineNumber":27,"author":{"gitId":"deyixtan"},"content":"deadline return book /by Sunday"},{"lineNumber":28,"author":{"gitId":"deyixtan"},"content":"event project meeting /at Mon 2-4pm"},{"lineNumber":29,"author":{"gitId":"deyixtan"},"content":"deadline do homework /by no idea :-p"},{"lineNumber":30,"author":{"gitId":"deyixtan"},"content":"list"},{"lineNumber":31,"author":{"gitId":"deyixtan"},"content":"delete"},{"lineNumber":32,"author":{"gitId":"deyixtan"},"content":"delete test"},{"lineNumber":33,"author":{"gitId":"deyixtan"},"content":"delete 8"},{"lineNumber":34,"author":{"gitId":"deyixtan"},"content":"delete 6"},{"lineNumber":35,"author":{"gitId":"deyixtan"},"content":"delete 6"},{"lineNumber":36,"author":{"gitId":"deyixtan"},"content":"list"},{"lineNumber":37,"author":{"gitId":"deyixtan"},"content":"bye"},{"lineNumber":38,"author":{"gitId":"deyixtan"},"content":"test"},{"lineNumber":39,"author":{"gitId":"deyixtan"},"content":"bye"},{"lineNumber":40,"author":{"gitId":"deyixtan"},"content":"N"},{"lineNumber":41,"author":{"gitId":"deyixtan"},"content":"bye"},{"lineNumber":42,"author":{"gitId":"deyixtan"},"content":""},{"lineNumber":43,"author":{"gitId":"deyixtan"},"content":""},{"lineNumber":44,"author":{"gitId":"deyixtan"},"content":"bye"},{"lineNumber":45,"author":{"gitId":"deyixtan"},"content":"Y"}],"authorContributionMap":{"deyixtan":45}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF"},{"lineNumber":2,"author":{"gitId":"-"},"content":""},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin"},{"lineNumber":5,"author":{"gitId":"-"},"content":""},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run"},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT"},{"lineNumber":8,"author":{"gitId":"-"},"content":""},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder"},{"lineNumber":10,"author":{"gitId":"-"},"content":"javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\*.java"},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 ("},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1"},{"lineNumber":14,"author":{"gitId":"-"},"content":")"},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0"},{"lineNumber":16,"author":{"gitId":"-"},"content":""},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"},{"lineNumber":18,"author":{"gitId":"deyixtan"},"content":"java -classpath ..\\bin Quackers \u003c input.txt \u003e ACTUAL.TXT"},{"lineNumber":19,"author":{"gitId":"-"},"content":""},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM compare the output to the expected output"},{"lineNumber":21,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT"}],"authorContributionMap":{"-":20,"deyixtan":1}},{"path":"text-ui-test/runtest.sh","fileType":"sh","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"#!/usr/bin/env bash"},{"lineNumber":2,"author":{"gitId":"-"},"content":""},{"lineNumber":3,"author":{"gitId":"-"},"content":"# create bin directory if it doesn\u0027t exist"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if [ ! -d \"../bin\" ]"},{"lineNumber":5,"author":{"gitId":"-"},"content":"then"},{"lineNumber":6,"author":{"gitId":"-"},"content":"    mkdir ../bin"},{"lineNumber":7,"author":{"gitId":"-"},"content":"fi"},{"lineNumber":8,"author":{"gitId":"-"},"content":""},{"lineNumber":9,"author":{"gitId":"-"},"content":"# delete output from previous run"},{"lineNumber":10,"author":{"gitId":"-"},"content":"if [ -e \"./ACTUAL.TXT\" ]"},{"lineNumber":11,"author":{"gitId":"-"},"content":"then"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    rm ACTUAL.TXT"},{"lineNumber":13,"author":{"gitId":"-"},"content":"fi"},{"lineNumber":14,"author":{"gitId":"-"},"content":""},{"lineNumber":15,"author":{"gitId":"-"},"content":"# compile the code into the bin folder, terminates if error occurred"},{"lineNumber":16,"author":{"gitId":"-"},"content":"if ! javac -cp ../src/main/java -Xlint:none -d ../bin ../src/main/java/*.java"},{"lineNumber":17,"author":{"gitId":"-"},"content":"then"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    echo \"********** BUILD FAILURE **********\""},{"lineNumber":19,"author":{"gitId":"-"},"content":"    exit 1"},{"lineNumber":20,"author":{"gitId":"-"},"content":"fi"},{"lineNumber":21,"author":{"gitId":"-"},"content":""},{"lineNumber":22,"author":{"gitId":"-"},"content":"# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"},{"lineNumber":23,"author":{"gitId":"deyixtan"},"content":"java -classpath ../bin Quackers \u003c input.txt \u003e ACTUAL.TXT"},{"lineNumber":24,"author":{"gitId":"-"},"content":""},{"lineNumber":25,"author":{"gitId":"-"},"content":"# convert to UNIX format"},{"lineNumber":26,"author":{"gitId":"-"},"content":"cp EXPECTED.TXT EXPECTED-UNIX.TXT"},{"lineNumber":27,"author":{"gitId":"-"},"content":"dos2unix ACTUAL.TXT EXPECTED-UNIX.TXT"},{"lineNumber":28,"author":{"gitId":"-"},"content":""},{"lineNumber":29,"author":{"gitId":"-"},"content":"# compare the output to the expected output"},{"lineNumber":30,"author":{"gitId":"-"},"content":"diff ACTUAL.TXT EXPECTED-UNIX.TXT"},{"lineNumber":31,"author":{"gitId":"-"},"content":"if [ $? -eq 0 ]"},{"lineNumber":32,"author":{"gitId":"-"},"content":"then"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    echo \"Test result: PASSED\""},{"lineNumber":34,"author":{"gitId":"-"},"content":"    exit 0"},{"lineNumber":35,"author":{"gitId":"-"},"content":"else"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    echo \"Test result: FAILED\""},{"lineNumber":37,"author":{"gitId":"-"},"content":"    exit 1"},{"lineNumber":38,"author":{"gitId":"-"},"content":"fi"}],"authorContributionMap":{"-":37,"deyixtan":1}}]
