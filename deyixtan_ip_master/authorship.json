[{"path":"src/main/java/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"deyixtan"},"content":"public class Deadline extends Task {"},{"lineNumber":2,"author":{"gitId":"deyixtan"},"content":""},{"lineNumber":3,"author":{"gitId":"deyixtan"},"content":"    protected String by;"},{"lineNumber":4,"author":{"gitId":"deyixtan"},"content":""},{"lineNumber":5,"author":{"gitId":"deyixtan"},"content":"    public Deadline(String description, String by) {"},{"lineNumber":6,"author":{"gitId":"deyixtan"},"content":"        super(description);"},{"lineNumber":7,"author":{"gitId":"deyixtan"},"content":"        this.by \u003d by;"},{"lineNumber":8,"author":{"gitId":"deyixtan"},"content":"    }"},{"lineNumber":9,"author":{"gitId":"deyixtan"},"content":""},{"lineNumber":10,"author":{"gitId":"deyixtan"},"content":"    @Override"},{"lineNumber":11,"author":{"gitId":"deyixtan"},"content":"    public String toString() {"},{"lineNumber":12,"author":{"gitId":"deyixtan"},"content":"        return String.format(\"[D]%s (by: %s)\", super.toString(), this.by);"},{"lineNumber":13,"author":{"gitId":"deyixtan"},"content":"    }"},{"lineNumber":14,"author":{"gitId":"deyixtan"},"content":"}"}],"authorContributionMap":{"deyixtan":14}},{"path":"src/main/java/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"deyixtan"},"content":"import java.util.ArrayList;"},{"lineNumber":2,"author":{"gitId":"deyixtan"},"content":"import java.util.Scanner;"},{"lineNumber":3,"author":{"gitId":"deyixtan"},"content":""},{"lineNumber":4,"author":{"gitId":"-"},"content":"public class Duke {"},{"lineNumber":5,"author":{"gitId":"deyixtan"},"content":""},{"lineNumber":6,"author":{"gitId":"deyixtan"},"content":"    public enum Commands {"},{"lineNumber":7,"author":{"gitId":"deyixtan"},"content":"        USAGE, LIST,"},{"lineNumber":8,"author":{"gitId":"deyixtan"},"content":"        TODO, DEADLINE, EVENT,"},{"lineNumber":9,"author":{"gitId":"deyixtan"},"content":"        DONE, DELETE, BYE"},{"lineNumber":10,"author":{"gitId":"deyixtan"},"content":"    }"},{"lineNumber":11,"author":{"gitId":"deyixtan"},"content":""},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public static void main(String[] args) {"},{"lineNumber":13,"author":{"gitId":"deyixtan"},"content":"        Scanner sc \u003d new Scanner(System.in);"},{"lineNumber":14,"author":{"gitId":"deyixtan"},"content":"        ArrayList\u003cTask\u003e collection \u003d new ArrayList\u003cTask\u003e();"},{"lineNumber":15,"author":{"gitId":"deyixtan"},"content":"        boolean exit \u003d false;"},{"lineNumber":16,"author":{"gitId":"deyixtan"},"content":""},{"lineNumber":17,"author":{"gitId":"deyixtan"},"content":"        // Welcomes user"},{"lineNumber":18,"author":{"gitId":"deyixtan"},"content":"        greeting();"},{"lineNumber":19,"author":{"gitId":"deyixtan"},"content":"        // Receive action"},{"lineNumber":20,"author":{"gitId":"deyixtan"},"content":"        do {"},{"lineNumber":21,"author":{"gitId":"deyixtan"},"content":"            try {"},{"lineNumber":22,"author":{"gitId":"deyixtan"},"content":"                String input \u003d Duke.ask(sc);"},{"lineNumber":23,"author":{"gitId":"deyixtan"},"content":"                // Check if input is an empty line"},{"lineNumber":24,"author":{"gitId":"deyixtan"},"content":"                if (input.equals(\"\"))"},{"lineNumber":25,"author":{"gitId":"deyixtan"},"content":"                    continue;"},{"lineNumber":26,"author":{"gitId":"deyixtan"},"content":""},{"lineNumber":27,"author":{"gitId":"deyixtan"},"content":"                // Process input"},{"lineNumber":28,"author":{"gitId":"deyixtan"},"content":"                Commands command \u003d Commands.valueOf(input.split(\" \")[0].toUpperCase());"},{"lineNumber":29,"author":{"gitId":"deyixtan"},"content":"                switch (command) {"},{"lineNumber":30,"author":{"gitId":"deyixtan"},"content":"                    case USAGE:"},{"lineNumber":31,"author":{"gitId":"deyixtan"},"content":"                        usage();"},{"lineNumber":32,"author":{"gitId":"deyixtan"},"content":"                        break;"},{"lineNumber":33,"author":{"gitId":"deyixtan"},"content":"                    case LIST:"},{"lineNumber":34,"author":{"gitId":"deyixtan"},"content":"                        list(collection);"},{"lineNumber":35,"author":{"gitId":"deyixtan"},"content":"                        break;"},{"lineNumber":36,"author":{"gitId":"deyixtan"},"content":"                    case TODO:"},{"lineNumber":37,"author":{"gitId":"deyixtan"},"content":"                    case DEADLINE:"},{"lineNumber":38,"author":{"gitId":"deyixtan"},"content":"                    case EVENT:"},{"lineNumber":39,"author":{"gitId":"deyixtan"},"content":"                        add(collection, input);"},{"lineNumber":40,"author":{"gitId":"deyixtan"},"content":"                        break;"},{"lineNumber":41,"author":{"gitId":"deyixtan"},"content":"                    case DONE:"},{"lineNumber":42,"author":{"gitId":"deyixtan"},"content":"                        done(collection, input);"},{"lineNumber":43,"author":{"gitId":"deyixtan"},"content":"                        break;"},{"lineNumber":44,"author":{"gitId":"deyixtan"},"content":"                    case DELETE:"},{"lineNumber":45,"author":{"gitId":"deyixtan"},"content":"                        delete(collection, input);"},{"lineNumber":46,"author":{"gitId":"deyixtan"},"content":"                        break;"},{"lineNumber":47,"author":{"gitId":"deyixtan"},"content":"                    case BYE:"},{"lineNumber":48,"author":{"gitId":"deyixtan"},"content":"                        exit \u003d bye(sc);"},{"lineNumber":49,"author":{"gitId":"deyixtan"},"content":"                }"},{"lineNumber":50,"author":{"gitId":"deyixtan"},"content":"            } catch (IllegalArgumentException e) {"},{"lineNumber":51,"author":{"gitId":"deyixtan"},"content":"                Duke.say(\"Oh no... I\u0027m not trained with these commands yet...\");"},{"lineNumber":52,"author":{"gitId":"deyixtan"},"content":"            } catch (DukeException e) {"},{"lineNumber":53,"author":{"gitId":"deyixtan"},"content":"                Duke.say(\"Oh no... \" + e.getMessage());"},{"lineNumber":54,"author":{"gitId":"deyixtan"},"content":"            }"},{"lineNumber":55,"author":{"gitId":"deyixtan"},"content":"        } while (!exit || sc.hasNextLine());"},{"lineNumber":56,"author":{"gitId":"deyixtan"},"content":"    }"},{"lineNumber":57,"author":{"gitId":"deyixtan"},"content":""},{"lineNumber":58,"author":{"gitId":"deyixtan"},"content":"    public static void say(String message, Boolean newLine) {"},{"lineNumber":59,"author":{"gitId":"deyixtan"},"content":"        System.out.print(\"\u003e\u003e \" + message);"},{"lineNumber":60,"author":{"gitId":"deyixtan"},"content":"        if (newLine)"},{"lineNumber":61,"author":{"gitId":"deyixtan"},"content":"            System.out.print(\"\\n\");"},{"lineNumber":62,"author":{"gitId":"deyixtan"},"content":"    }"},{"lineNumber":63,"author":{"gitId":"deyixtan"},"content":""},{"lineNumber":64,"author":{"gitId":"deyixtan"},"content":"    public static void say(String message) {"},{"lineNumber":65,"author":{"gitId":"deyixtan"},"content":"        Duke.say(message, true);"},{"lineNumber":66,"author":{"gitId":"deyixtan"},"content":"    }"},{"lineNumber":67,"author":{"gitId":"deyixtan"},"content":""},{"lineNumber":68,"author":{"gitId":"deyixtan"},"content":"    public static String ask(Scanner sc) {"},{"lineNumber":69,"author":{"gitId":"deyixtan"},"content":"        System.out.print(\"\u003c\u003c \");"},{"lineNumber":70,"author":{"gitId":"deyixtan"},"content":"        return sc.nextLine();"},{"lineNumber":71,"author":{"gitId":"deyixtan"},"content":"    }"},{"lineNumber":72,"author":{"gitId":"deyixtan"},"content":""},{"lineNumber":73,"author":{"gitId":"deyixtan"},"content":"    public static String[] parseInput(String input) throws DukeException {"},{"lineNumber":74,"author":{"gitId":"deyixtan"},"content":"        String[] inputArr \u003d input.split(\" \");"},{"lineNumber":75,"author":{"gitId":"deyixtan"},"content":"        String taskType \u003d inputArr[0].toLowerCase();"},{"lineNumber":76,"author":{"gitId":"deyixtan"},"content":"        String taskDesc \u003d \"\";"},{"lineNumber":77,"author":{"gitId":"deyixtan"},"content":"        String taskArg \u003d \"\";"},{"lineNumber":78,"author":{"gitId":"deyixtan"},"content":""},{"lineNumber":79,"author":{"gitId":"deyixtan"},"content":"        // Get description"},{"lineNumber":80,"author":{"gitId":"deyixtan"},"content":"        int i;"},{"lineNumber":81,"author":{"gitId":"deyixtan"},"content":"        for (i \u003d 1; i \u003c inputArr.length; i++) {"},{"lineNumber":82,"author":{"gitId":"deyixtan"},"content":"            if (taskType.equals(\"todo\") || (!inputArr[i].toLowerCase().equals(\"/by\") \u0026\u0026 !inputArr[i].toLowerCase().equals(\"/at\"))) {"},{"lineNumber":83,"author":{"gitId":"deyixtan"},"content":"                if (!taskDesc.equals(\"\"))"},{"lineNumber":84,"author":{"gitId":"deyixtan"},"content":"                    taskDesc +\u003d \" \";"},{"lineNumber":85,"author":{"gitId":"deyixtan"},"content":"                taskDesc +\u003d inputArr[i];"},{"lineNumber":86,"author":{"gitId":"deyixtan"},"content":"            } else {"},{"lineNumber":87,"author":{"gitId":"deyixtan"},"content":"                // Ensure no misuse of arguments"},{"lineNumber":88,"author":{"gitId":"deyixtan"},"content":"                if (!inputArr[i].toLowerCase().equals(\"/by\") \u0026\u0026 taskType.equals(\"deadline\"))"},{"lineNumber":89,"author":{"gitId":"deyixtan"},"content":"                    throw new DukeException(\"You\u0027re confusing me with parameters from other commands...\");"},{"lineNumber":90,"author":{"gitId":"deyixtan"},"content":"                else if (!inputArr[i].toLowerCase().equals(\"/at\") \u0026\u0026 taskType.equals(\"event\"))"},{"lineNumber":91,"author":{"gitId":"deyixtan"},"content":"                    throw new DukeException(\"You\u0027re confusing me with parameters from other commands...\");"},{"lineNumber":92,"author":{"gitId":"deyixtan"},"content":""},{"lineNumber":93,"author":{"gitId":"deyixtan"},"content":"                break;"},{"lineNumber":94,"author":{"gitId":"deyixtan"},"content":"            }"},{"lineNumber":95,"author":{"gitId":"deyixtan"},"content":"        }"},{"lineNumber":96,"author":{"gitId":"deyixtan"},"content":""},{"lineNumber":97,"author":{"gitId":"deyixtan"},"content":"        // Get argument"},{"lineNumber":98,"author":{"gitId":"deyixtan"},"content":"        for (i \u003d i + 1; i \u003c inputArr.length; i++) {"},{"lineNumber":99,"author":{"gitId":"deyixtan"},"content":"            if (!taskArg.equals(\"\"))"},{"lineNumber":100,"author":{"gitId":"deyixtan"},"content":"                taskArg +\u003d \" \";"},{"lineNumber":101,"author":{"gitId":"deyixtan"},"content":"            taskArg +\u003d inputArr[i];"},{"lineNumber":102,"author":{"gitId":"deyixtan"},"content":"        }"},{"lineNumber":103,"author":{"gitId":"deyixtan"},"content":""},{"lineNumber":104,"author":{"gitId":"deyixtan"},"content":"        return new String[]{taskType, taskDesc, taskArg};"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":106,"author":{"gitId":"deyixtan"},"content":""},{"lineNumber":107,"author":{"gitId":"deyixtan"},"content":"    public static void greeting() {"},{"lineNumber":108,"author":{"gitId":"deyixtan"},"content":"        System.out.println(\"____________________________________________________________\");"},{"lineNumber":109,"author":{"gitId":"deyixtan"},"content":"        System.out.println(\" ____        _        \\n\""},{"lineNumber":110,"author":{"gitId":"-"},"content":"                + \"|  _ \\\\ _   _| | _____ \\n\""},{"lineNumber":111,"author":{"gitId":"-"},"content":"                + \"| | | | | | | |/ / _ \\\\\\n\""},{"lineNumber":112,"author":{"gitId":"-"},"content":"                + \"| |_| | |_| |   \u003c  __/\\n\""},{"lineNumber":113,"author":{"gitId":"deyixtan"},"content":"                + \"|____/ \\\\__,_|_|\\\\_\\\\___|\");"},{"lineNumber":114,"author":{"gitId":"deyixtan"},"content":"        System.out.println(\"____________________________________________________________\");"},{"lineNumber":115,"author":{"gitId":"deyixtan"},"content":"        Duke.say(\"Hey, hello there! I\u0027m Duke, your personal chat bot.\");"},{"lineNumber":116,"author":{"gitId":"deyixtan"},"content":"        Duke.say(\"To know more about what I can do, type \u0027usage\u0027.\");"},{"lineNumber":117,"author":{"gitId":"deyixtan"},"content":"        Duke.say(\"Sooooo... Is there anything I can do for you today?\");"},{"lineNumber":118,"author":{"gitId":"deyixtan"},"content":"    }"},{"lineNumber":119,"author":{"gitId":"deyixtan"},"content":""},{"lineNumber":120,"author":{"gitId":"deyixtan"},"content":"    public static void usage() {"},{"lineNumber":121,"author":{"gitId":"deyixtan"},"content":"        Duke.say(\"Hey! These are the commands available:\");"},{"lineNumber":122,"author":{"gitId":"deyixtan"},"content":"        Duke.say(\"\\t- usage\");"},{"lineNumber":123,"author":{"gitId":"deyixtan"},"content":"        Duke.say(\"\\t- list\");"},{"lineNumber":124,"author":{"gitId":"deyixtan"},"content":"        Duke.say(\"\\t- todo \u003ctask_description\u003e\");"},{"lineNumber":125,"author":{"gitId":"deyixtan"},"content":"        Duke.say(\"\\t- deadline \u003ctask_description\u003e /by \u003cdate_time\u003e\");"},{"lineNumber":126,"author":{"gitId":"deyixtan"},"content":"        Duke.say(\"\\t- event \u003ctask_description\u003e /at \u003cdate_time\u003e\");"},{"lineNumber":127,"author":{"gitId":"deyixtan"},"content":"        Duke.say(\"\\t- done \u003ctask_number\u003e\");"},{"lineNumber":128,"author":{"gitId":"deyixtan"},"content":"        Duke.say(\"\\t- delete \u003ctask_number\u003e\");"},{"lineNumber":129,"author":{"gitId":"deyixtan"},"content":"        Duke.say(\"\\t- bye\");"},{"lineNumber":130,"author":{"gitId":"deyixtan"},"content":"    }"},{"lineNumber":131,"author":{"gitId":"deyixtan"},"content":""},{"lineNumber":132,"author":{"gitId":"deyixtan"},"content":"    public static void list(ArrayList\u003cTask\u003e collection) {"},{"lineNumber":133,"author":{"gitId":"deyixtan"},"content":"        Duke.say(\"You got a total of \" + collection.size() + \" task(s).\");"},{"lineNumber":134,"author":{"gitId":"deyixtan"},"content":"        for (int i \u003d 0; i \u003c collection.size(); i++) {"},{"lineNumber":135,"author":{"gitId":"deyixtan"},"content":"            Duke.say(String.format(\"\\t%d. %s\", i + 1, collection.get(i)));"},{"lineNumber":136,"author":{"gitId":"deyixtan"},"content":"        }"},{"lineNumber":137,"author":{"gitId":"deyixtan"},"content":"    }"},{"lineNumber":138,"author":{"gitId":"deyixtan"},"content":""},{"lineNumber":139,"author":{"gitId":"deyixtan"},"content":"    public static void add(ArrayList\u003cTask\u003e collection, String input) throws DukeException {"},{"lineNumber":140,"author":{"gitId":"deyixtan"},"content":"        // Parse input"},{"lineNumber":141,"author":{"gitId":"deyixtan"},"content":"        String[] parsedInputArr \u003d Duke.parseInput(input);"},{"lineNumber":142,"author":{"gitId":"deyixtan"},"content":""},{"lineNumber":143,"author":{"gitId":"deyixtan"},"content":"        // Ensure task description and argument cannot be empty"},{"lineNumber":144,"author":{"gitId":"deyixtan"},"content":"        if (parsedInputArr[1].equals(\"\")) {"},{"lineNumber":145,"author":{"gitId":"deyixtan"},"content":"            throw new DukeException(\"I need a description of your task...\");"},{"lineNumber":146,"author":{"gitId":"deyixtan"},"content":"        } else if (parsedInputArr[2].equals(\"\")) {"},{"lineNumber":147,"author":{"gitId":"deyixtan"},"content":"            if (parsedInputArr[0].equals(\"deadline\"))"},{"lineNumber":148,"author":{"gitId":"deyixtan"},"content":"                throw new DukeException(\"I need to know when your task ends...\");"},{"lineNumber":149,"author":{"gitId":"deyixtan"},"content":"            if (parsedInputArr[0].equals(\"event\"))"},{"lineNumber":150,"author":{"gitId":"deyixtan"},"content":"                throw new DukeException(\"I need to know the time period of your event...\");"},{"lineNumber":151,"author":{"gitId":"deyixtan"},"content":"        }"},{"lineNumber":152,"author":{"gitId":"deyixtan"},"content":""},{"lineNumber":153,"author":{"gitId":"deyixtan"},"content":"        // Add to collection"},{"lineNumber":154,"author":{"gitId":"deyixtan"},"content":"        if (parsedInputArr[0].equals(\"todo\"))"},{"lineNumber":155,"author":{"gitId":"deyixtan"},"content":"            collection.add(new Todo(parsedInputArr[1]));"},{"lineNumber":156,"author":{"gitId":"deyixtan"},"content":"        else if (parsedInputArr[0].equals(\"deadline\"))"},{"lineNumber":157,"author":{"gitId":"deyixtan"},"content":"            collection.add(new Deadline(parsedInputArr[1], parsedInputArr[2]));"},{"lineNumber":158,"author":{"gitId":"deyixtan"},"content":"        else if (parsedInputArr[0].equals(\"event\"))"},{"lineNumber":159,"author":{"gitId":"deyixtan"},"content":"            collection.add(new Event(parsedInputArr[1], parsedInputArr[2]));"},{"lineNumber":160,"author":{"gitId":"deyixtan"},"content":"        Duke.say(\"Got it, I have added the task \u0027\" + parsedInputArr[1] + \"\u0027 to your collection.\");"},{"lineNumber":161,"author":{"gitId":"deyixtan"},"content":"    }"},{"lineNumber":162,"author":{"gitId":"deyixtan"},"content":""},{"lineNumber":163,"author":{"gitId":"deyixtan"},"content":"    public static void done(ArrayList\u003cTask\u003e collection, String input) throws DukeException {"},{"lineNumber":164,"author":{"gitId":"deyixtan"},"content":"        try {"},{"lineNumber":165,"author":{"gitId":"deyixtan"},"content":"            int itemIdx \u003d Integer.parseInt(input.split(\" \")[1]) - 1;"},{"lineNumber":166,"author":{"gitId":"deyixtan"},"content":"            boolean status \u003d collection.get(itemIdx).markAsDone();"},{"lineNumber":167,"author":{"gitId":"deyixtan"},"content":"            if (!status)"},{"lineNumber":168,"author":{"gitId":"deyixtan"},"content":"                throw new IllegalArgumentException();"},{"lineNumber":169,"author":{"gitId":"deyixtan"},"content":"            Duke.say(\"Task \u0027\" + collection.get(itemIdx).getDescription() + \"\u0027 is marked as done.\");"},{"lineNumber":170,"author":{"gitId":"deyixtan"},"content":"        } catch (NumberFormatException e) {"},{"lineNumber":171,"author":{"gitId":"deyixtan"},"content":"            throw new DukeException(\"I need a task number...\");"},{"lineNumber":172,"author":{"gitId":"deyixtan"},"content":"        } catch (IndexOutOfBoundsException e) {"},{"lineNumber":173,"author":{"gitId":"deyixtan"},"content":"            throw new DukeException(\"I don\u0027t think there is such a task...\");"},{"lineNumber":174,"author":{"gitId":"deyixtan"},"content":"        } catch (IllegalArgumentException e) {"},{"lineNumber":175,"author":{"gitId":"deyixtan"},"content":"            throw new DukeException(\"Task had already been marked as done...\");"},{"lineNumber":176,"author":{"gitId":"deyixtan"},"content":"        }"},{"lineNumber":177,"author":{"gitId":"deyixtan"},"content":"    }"},{"lineNumber":178,"author":{"gitId":"deyixtan"},"content":""},{"lineNumber":179,"author":{"gitId":"deyixtan"},"content":"    public static void delete(ArrayList\u003cTask\u003e collection, String input) throws DukeException {"},{"lineNumber":180,"author":{"gitId":"deyixtan"},"content":"        try {"},{"lineNumber":181,"author":{"gitId":"deyixtan"},"content":"            int itemIdx \u003d Integer.parseInt(input.split(\" \")[1]) - 1;"},{"lineNumber":182,"author":{"gitId":"deyixtan"},"content":"            Task task \u003d collection.remove(itemIdx);"},{"lineNumber":183,"author":{"gitId":"deyixtan"},"content":"            Duke.say(\"Task \u0027\" + task.getDescription() + \"\u0027 has been deleted.\");"},{"lineNumber":184,"author":{"gitId":"deyixtan"},"content":"        } catch (NumberFormatException e) {"},{"lineNumber":185,"author":{"gitId":"deyixtan"},"content":"            throw new DukeException(\"I need a task number...\");"},{"lineNumber":186,"author":{"gitId":"deyixtan"},"content":"        } catch (IndexOutOfBoundsException e) {"},{"lineNumber":187,"author":{"gitId":"deyixtan"},"content":"            throw new DukeException(\"I don\u0027t think there is such a task...\");"},{"lineNumber":188,"author":{"gitId":"deyixtan"},"content":"        }"},{"lineNumber":189,"author":{"gitId":"deyixtan"},"content":"    }"},{"lineNumber":190,"author":{"gitId":"deyixtan"},"content":""},{"lineNumber":191,"author":{"gitId":"deyixtan"},"content":"    public static boolean bye(Scanner sc) {"},{"lineNumber":192,"author":{"gitId":"deyixtan"},"content":"        Duke.say(\"Are you sure? (Y/N)\");"},{"lineNumber":193,"author":{"gitId":"deyixtan"},"content":"        String confirmation \u003d Duke.ask(sc);"},{"lineNumber":194,"author":{"gitId":"deyixtan"},"content":"        if (confirmation.toLowerCase().equals(\"y\") || confirmation.toLowerCase().equals(\"yes\")) {"},{"lineNumber":195,"author":{"gitId":"deyixtan"},"content":"            Duke.say(\"Alright, take care. I hope to see you again soon!\");"},{"lineNumber":196,"author":{"gitId":"deyixtan"},"content":"            return true;"},{"lineNumber":197,"author":{"gitId":"deyixtan"},"content":"        }"},{"lineNumber":198,"author":{"gitId":"deyixtan"},"content":"        Duke.say(\"Hmm... alright I\u0027ll stay.\");"},{"lineNumber":199,"author":{"gitId":"deyixtan"},"content":"        return false;"},{"lineNumber":200,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":201,"author":{"gitId":"-"},"content":"}"}],"authorContributionMap":{"-":8,"deyixtan":193}},{"path":"src/main/java/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"deyixtan"},"content":"public class DukeException extends Exception {"},{"lineNumber":2,"author":{"gitId":"deyixtan"},"content":""},{"lineNumber":3,"author":{"gitId":"deyixtan"},"content":"    public DukeException(String message) {"},{"lineNumber":4,"author":{"gitId":"deyixtan"},"content":"        super(message);"},{"lineNumber":5,"author":{"gitId":"deyixtan"},"content":"    }"},{"lineNumber":6,"author":{"gitId":"deyixtan"},"content":"}"},{"lineNumber":7,"author":{"gitId":"deyixtan"},"content":""}],"authorContributionMap":{"deyixtan":7}},{"path":"src/main/java/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"deyixtan"},"content":"public class Event extends Task {"},{"lineNumber":2,"author":{"gitId":"deyixtan"},"content":""},{"lineNumber":3,"author":{"gitId":"deyixtan"},"content":"    protected String at;"},{"lineNumber":4,"author":{"gitId":"deyixtan"},"content":""},{"lineNumber":5,"author":{"gitId":"deyixtan"},"content":"    public Event(String description, String at) {"},{"lineNumber":6,"author":{"gitId":"deyixtan"},"content":"        super(description);"},{"lineNumber":7,"author":{"gitId":"deyixtan"},"content":"        this.at \u003d at;"},{"lineNumber":8,"author":{"gitId":"deyixtan"},"content":"    }"},{"lineNumber":9,"author":{"gitId":"deyixtan"},"content":""},{"lineNumber":10,"author":{"gitId":"deyixtan"},"content":"    @Override"},{"lineNumber":11,"author":{"gitId":"deyixtan"},"content":"    public String toString() {"},{"lineNumber":12,"author":{"gitId":"deyixtan"},"content":"        return String.format(\"[E]%s (at: %s)\", super.toString(), this.at);"},{"lineNumber":13,"author":{"gitId":"deyixtan"},"content":"    }"},{"lineNumber":14,"author":{"gitId":"deyixtan"},"content":"}"}],"authorContributionMap":{"deyixtan":14}},{"path":"src/main/java/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"deyixtan"},"content":"public class Task {"},{"lineNumber":2,"author":{"gitId":"deyixtan"},"content":""},{"lineNumber":3,"author":{"gitId":"deyixtan"},"content":"    protected String description;"},{"lineNumber":4,"author":{"gitId":"deyixtan"},"content":"    protected boolean isDone;"},{"lineNumber":5,"author":{"gitId":"deyixtan"},"content":""},{"lineNumber":6,"author":{"gitId":"deyixtan"},"content":"    public Task(String description) {"},{"lineNumber":7,"author":{"gitId":"deyixtan"},"content":"        this.description \u003d description;"},{"lineNumber":8,"author":{"gitId":"deyixtan"},"content":"        this.isDone \u003d false;"},{"lineNumber":9,"author":{"gitId":"deyixtan"},"content":"    }"},{"lineNumber":10,"author":{"gitId":"deyixtan"},"content":""},{"lineNumber":11,"author":{"gitId":"deyixtan"},"content":"    public String getDescription() {"},{"lineNumber":12,"author":{"gitId":"deyixtan"},"content":"        return this.description;"},{"lineNumber":13,"author":{"gitId":"deyixtan"},"content":"    }"},{"lineNumber":14,"author":{"gitId":"deyixtan"},"content":""},{"lineNumber":15,"author":{"gitId":"deyixtan"},"content":"    public String getStatusIcon() {"},{"lineNumber":16,"author":{"gitId":"deyixtan"},"content":"        return (isDone ? \"*\" : \" \");"},{"lineNumber":17,"author":{"gitId":"deyixtan"},"content":"    }"},{"lineNumber":18,"author":{"gitId":"deyixtan"},"content":""},{"lineNumber":19,"author":{"gitId":"deyixtan"},"content":"    public Boolean markAsDone() {"},{"lineNumber":20,"author":{"gitId":"deyixtan"},"content":"        if (this.isDone)"},{"lineNumber":21,"author":{"gitId":"deyixtan"},"content":"            return false;"},{"lineNumber":22,"author":{"gitId":"deyixtan"},"content":"        this.isDone \u003d true;"},{"lineNumber":23,"author":{"gitId":"deyixtan"},"content":"        return true;"},{"lineNumber":24,"author":{"gitId":"deyixtan"},"content":"    }"},{"lineNumber":25,"author":{"gitId":"deyixtan"},"content":""},{"lineNumber":26,"author":{"gitId":"deyixtan"},"content":"    @Override"},{"lineNumber":27,"author":{"gitId":"deyixtan"},"content":"    public String toString() {"},{"lineNumber":28,"author":{"gitId":"deyixtan"},"content":"        return String.format(\"[%s] %s\", this.getStatusIcon(), this.description);"},{"lineNumber":29,"author":{"gitId":"deyixtan"},"content":"    }"},{"lineNumber":30,"author":{"gitId":"deyixtan"},"content":"}"}],"authorContributionMap":{"deyixtan":30}},{"path":"src/main/java/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"deyixtan"},"content":"public class Todo extends Task {"},{"lineNumber":2,"author":{"gitId":"deyixtan"},"content":""},{"lineNumber":3,"author":{"gitId":"deyixtan"},"content":"    public Todo(String description) {"},{"lineNumber":4,"author":{"gitId":"deyixtan"},"content":"        super(description);"},{"lineNumber":5,"author":{"gitId":"deyixtan"},"content":"    }"},{"lineNumber":6,"author":{"gitId":"deyixtan"},"content":""},{"lineNumber":7,"author":{"gitId":"deyixtan"},"content":"    @Override"},{"lineNumber":8,"author":{"gitId":"deyixtan"},"content":"    public String toString() {"},{"lineNumber":9,"author":{"gitId":"deyixtan"},"content":"        return String.format(\"[T]%s\", super.toString());"},{"lineNumber":10,"author":{"gitId":"deyixtan"},"content":"    }"},{"lineNumber":11,"author":{"gitId":"deyixtan"},"content":"}"}],"authorContributionMap":{"deyixtan":11}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"deyixtan"},"content":"usage"},{"lineNumber":2,"author":{"gitId":"deyixtan"},"content":"test"},{"lineNumber":3,"author":{"gitId":"deyixtan"},"content":"todo"},{"lineNumber":4,"author":{"gitId":"deyixtan"},"content":"todo read book"},{"lineNumber":5,"author":{"gitId":"deyixtan"},"content":"list"},{"lineNumber":6,"author":{"gitId":"deyixtan"},"content":"deadline"},{"lineNumber":7,"author":{"gitId":"deyixtan"},"content":"deadline /by June 6th"},{"lineNumber":8,"author":{"gitId":"deyixtan"},"content":"deadline return book"},{"lineNumber":9,"author":{"gitId":"deyixtan"},"content":"deadline return book /at June 6th"},{"lineNumber":10,"author":{"gitId":"deyixtan"},"content":"deadline return book /by June 6th"},{"lineNumber":11,"author":{"gitId":"deyixtan"},"content":"list"},{"lineNumber":12,"author":{"gitId":"deyixtan"},"content":"event"},{"lineNumber":13,"author":{"gitId":"deyixtan"},"content":"event /at Aug 6th 2-4pm"},{"lineNumber":14,"author":{"gitId":"deyixtan"},"content":"event project meeting"},{"lineNumber":15,"author":{"gitId":"deyixtan"},"content":"event project meeting /by Aug 6th 2-4pm"},{"lineNumber":16,"author":{"gitId":"deyixtan"},"content":"event project meeting /at Aug 6th 2-4pm"},{"lineNumber":17,"author":{"gitId":"deyixtan"},"content":"list"},{"lineNumber":18,"author":{"gitId":"deyixtan"},"content":"todo join sports club"},{"lineNumber":19,"author":{"gitId":"deyixtan"},"content":"list"},{"lineNumber":20,"author":{"gitId":"deyixtan"},"content":"done 1"},{"lineNumber":21,"author":{"gitId":"deyixtan"},"content":"done 10"},{"lineNumber":22,"author":{"gitId":"deyixtan"},"content":"done 4"},{"lineNumber":23,"author":{"gitId":"deyixtan"},"content":"done 2"},{"lineNumber":24,"author":{"gitId":"deyixtan"},"content":"done 4"},{"lineNumber":25,"author":{"gitId":"deyixtan"},"content":"list"},{"lineNumber":26,"author":{"gitId":"deyixtan"},"content":"todo borrow book"},{"lineNumber":27,"author":{"gitId":"deyixtan"},"content":"deadline return book /by Sunday"},{"lineNumber":28,"author":{"gitId":"deyixtan"},"content":"event project meeting /at Mon 2-4pm"},{"lineNumber":29,"author":{"gitId":"deyixtan"},"content":"deadline do homework /by no idea :-p"},{"lineNumber":30,"author":{"gitId":"deyixtan"},"content":"list"},{"lineNumber":31,"author":{"gitId":"deyixtan"},"content":"delete"},{"lineNumber":32,"author":{"gitId":"deyixtan"},"content":"delete test"},{"lineNumber":33,"author":{"gitId":"deyixtan"},"content":"delete 8"},{"lineNumber":34,"author":{"gitId":"deyixtan"},"content":"delete 6"},{"lineNumber":35,"author":{"gitId":"deyixtan"},"content":"delete 6"},{"lineNumber":36,"author":{"gitId":"deyixtan"},"content":"list"},{"lineNumber":37,"author":{"gitId":"deyixtan"},"content":"bye"},{"lineNumber":38,"author":{"gitId":"deyixtan"},"content":"test"},{"lineNumber":39,"author":{"gitId":"deyixtan"},"content":"bye"},{"lineNumber":40,"author":{"gitId":"deyixtan"},"content":"N"},{"lineNumber":41,"author":{"gitId":"deyixtan"},"content":"bye"},{"lineNumber":42,"author":{"gitId":"deyixtan"},"content":""},{"lineNumber":43,"author":{"gitId":"deyixtan"},"content":""},{"lineNumber":44,"author":{"gitId":"deyixtan"},"content":"bye"},{"lineNumber":45,"author":{"gitId":"deyixtan"},"content":"Y"}],"authorContributionMap":{"deyixtan":45}}]
