[{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027checkstyle\u0027"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027"},{"lineNumber":6,"author":{"gitId":"-"},"content":"}"},{"lineNumber":7,"author":{"gitId":"-"},"content":""},{"lineNumber":8,"author":{"gitId":"-"},"content":"repositories {"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    mavenCentral()"},{"lineNumber":10,"author":{"gitId":"-"},"content":"}"},{"lineNumber":11,"author":{"gitId":"-"},"content":""},{"lineNumber":12,"author":{"gitId":"-"},"content":"dependencies {"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.5.0\u0027"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.5.0\u0027"},{"lineNumber":15,"author":{"gitId":"deyixtan"},"content":""},{"lineNumber":16,"author":{"gitId":"deyixtan"},"content":"    String javaFxVersion \u003d \u002711\u0027"},{"lineNumber":17,"author":{"gitId":"deyixtan"},"content":""},{"lineNumber":18,"author":{"gitId":"deyixtan"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027"},{"lineNumber":19,"author":{"gitId":"deyixtan"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"},{"lineNumber":20,"author":{"gitId":"deyixtan"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"},{"lineNumber":21,"author":{"gitId":"deyixtan"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027"},{"lineNumber":22,"author":{"gitId":"deyixtan"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"},{"lineNumber":23,"author":{"gitId":"deyixtan"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"},{"lineNumber":24,"author":{"gitId":"deyixtan"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027"},{"lineNumber":25,"author":{"gitId":"deyixtan"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"},{"lineNumber":26,"author":{"gitId":"deyixtan"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"},{"lineNumber":27,"author":{"gitId":"deyixtan"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027"},{"lineNumber":28,"author":{"gitId":"deyixtan"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"},{"lineNumber":29,"author":{"gitId":"deyixtan"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"},{"lineNumber":30,"author":{"gitId":"-"},"content":"}"},{"lineNumber":31,"author":{"gitId":"-"},"content":""},{"lineNumber":32,"author":{"gitId":"-"},"content":"test {"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    useJUnitPlatform()"},{"lineNumber":34,"author":{"gitId":"-"},"content":""},{"lineNumber":35,"author":{"gitId":"-"},"content":"    testLogging {"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\""},{"lineNumber":37,"author":{"gitId":"-"},"content":""},{"lineNumber":38,"author":{"gitId":"-"},"content":"        showExceptions true"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\""},{"lineNumber":40,"author":{"gitId":"-"},"content":"        showCauses true"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        showStackTraces true"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":44,"author":{"gitId":"-"},"content":"}"},{"lineNumber":45,"author":{"gitId":"-"},"content":""},{"lineNumber":46,"author":{"gitId":"-"},"content":"application {"},{"lineNumber":47,"author":{"gitId":"deyixtan"},"content":"    mainClassName \u003d \"duke.Launcher\""},{"lineNumber":48,"author":{"gitId":"-"},"content":"}"},{"lineNumber":49,"author":{"gitId":"-"},"content":""},{"lineNumber":50,"author":{"gitId":"-"},"content":"shadowJar {"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    archiveBaseName \u003d \"duke\""},{"lineNumber":52,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null"},{"lineNumber":53,"author":{"gitId":"-"},"content":"}"},{"lineNumber":54,"author":{"gitId":"-"},"content":""},{"lineNumber":55,"author":{"gitId":"-"},"content":"checkstyle {"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    toolVersion \u003d \u00278.29\u0027"},{"lineNumber":57,"author":{"gitId":"-"},"content":"}"},{"lineNumber":58,"author":{"gitId":"-"},"content":""},{"lineNumber":59,"author":{"gitId":"-"},"content":"run{"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in"},{"lineNumber":61,"author":{"gitId":"-"},"content":"}"}],"authorContributionMap":{"-":45,"deyixtan":16}},{"path":"src/main/java/duke/DialogBox.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"deyixtan"},"content":"package duke;"},{"lineNumber":2,"author":{"gitId":"deyixtan"},"content":""},{"lineNumber":3,"author":{"gitId":"deyixtan"},"content":"import java.io.IOException;"},{"lineNumber":4,"author":{"gitId":"deyixtan"},"content":"import java.util.Collections;"},{"lineNumber":5,"author":{"gitId":"deyixtan"},"content":""},{"lineNumber":6,"author":{"gitId":"deyixtan"},"content":"import javafx.collections.FXCollections;"},{"lineNumber":7,"author":{"gitId":"deyixtan"},"content":"import javafx.collections.ObservableList;"},{"lineNumber":8,"author":{"gitId":"deyixtan"},"content":"import javafx.fxml.FXML;"},{"lineNumber":9,"author":{"gitId":"deyixtan"},"content":"import javafx.fxml.FXMLLoader;"},{"lineNumber":10,"author":{"gitId":"deyixtan"},"content":"import javafx.geometry.Pos;"},{"lineNumber":11,"author":{"gitId":"deyixtan"},"content":"import javafx.scene.Node;"},{"lineNumber":12,"author":{"gitId":"deyixtan"},"content":"import javafx.scene.control.Label;"},{"lineNumber":13,"author":{"gitId":"deyixtan"},"content":"import javafx.scene.image.Image;"},{"lineNumber":14,"author":{"gitId":"deyixtan"},"content":"import javafx.scene.image.ImageView;"},{"lineNumber":15,"author":{"gitId":"deyixtan"},"content":"import javafx.scene.layout.HBox;"},{"lineNumber":16,"author":{"gitId":"deyixtan"},"content":""},{"lineNumber":17,"author":{"gitId":"deyixtan"},"content":"/**"},{"lineNumber":18,"author":{"gitId":"deyixtan"},"content":" * An example of a custom control using FXML."},{"lineNumber":19,"author":{"gitId":"deyixtan"},"content":" * This control represents a dialog box consisting of an ImageView to represent the speaker\u0027s face and a label"},{"lineNumber":20,"author":{"gitId":"deyixtan"},"content":" * containing text from the speaker."},{"lineNumber":21,"author":{"gitId":"deyixtan"},"content":" */"},{"lineNumber":22,"author":{"gitId":"deyixtan"},"content":"public class DialogBox extends HBox {"},{"lineNumber":23,"author":{"gitId":"deyixtan"},"content":"    @FXML"},{"lineNumber":24,"author":{"gitId":"deyixtan"},"content":"    private Label dialog;"},{"lineNumber":25,"author":{"gitId":"deyixtan"},"content":"    @FXML"},{"lineNumber":26,"author":{"gitId":"deyixtan"},"content":"    private ImageView displayPicture;"},{"lineNumber":27,"author":{"gitId":"deyixtan"},"content":""},{"lineNumber":28,"author":{"gitId":"deyixtan"},"content":"    private DialogBox(String text, Image img) {"},{"lineNumber":29,"author":{"gitId":"deyixtan"},"content":"        try {"},{"lineNumber":30,"author":{"gitId":"deyixtan"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(\"/view/DialogBox.fxml\"));"},{"lineNumber":31,"author":{"gitId":"deyixtan"},"content":"            fxmlLoader.setController(this);"},{"lineNumber":32,"author":{"gitId":"deyixtan"},"content":"            fxmlLoader.setRoot(this);"},{"lineNumber":33,"author":{"gitId":"deyixtan"},"content":"            fxmlLoader.load();"},{"lineNumber":34,"author":{"gitId":"deyixtan"},"content":"        } catch (IOException e) {"},{"lineNumber":35,"author":{"gitId":"deyixtan"},"content":"            e.printStackTrace();"},{"lineNumber":36,"author":{"gitId":"deyixtan"},"content":"        }"},{"lineNumber":37,"author":{"gitId":"deyixtan"},"content":""},{"lineNumber":38,"author":{"gitId":"deyixtan"},"content":"        dialog.setText(text);"},{"lineNumber":39,"author":{"gitId":"deyixtan"},"content":"        displayPicture.setImage(img);"},{"lineNumber":40,"author":{"gitId":"deyixtan"},"content":"    }"},{"lineNumber":41,"author":{"gitId":"deyixtan"},"content":""},{"lineNumber":42,"author":{"gitId":"deyixtan"},"content":"    /**"},{"lineNumber":43,"author":{"gitId":"deyixtan"},"content":"     * Flips the dialog box such that the ImageView is on the left and text on the right."},{"lineNumber":44,"author":{"gitId":"deyixtan"},"content":"     */"},{"lineNumber":45,"author":{"gitId":"deyixtan"},"content":"    private void flip() {"},{"lineNumber":46,"author":{"gitId":"deyixtan"},"content":"        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());"},{"lineNumber":47,"author":{"gitId":"deyixtan"},"content":"        Collections.reverse(tmp);"},{"lineNumber":48,"author":{"gitId":"deyixtan"},"content":"        getChildren().setAll(tmp);"},{"lineNumber":49,"author":{"gitId":"deyixtan"},"content":"        setAlignment(Pos.TOP_LEFT);"},{"lineNumber":50,"author":{"gitId":"deyixtan"},"content":"    }"},{"lineNumber":51,"author":{"gitId":"deyixtan"},"content":""},{"lineNumber":52,"author":{"gitId":"deyixtan"},"content":"    public static DialogBox getUserDialog(String text, Image img) {"},{"lineNumber":53,"author":{"gitId":"deyixtan"},"content":"        return new DialogBox(text, img);"},{"lineNumber":54,"author":{"gitId":"deyixtan"},"content":"    }"},{"lineNumber":55,"author":{"gitId":"deyixtan"},"content":""},{"lineNumber":56,"author":{"gitId":"deyixtan"},"content":"    public static DialogBox getDukeDialog(String text, Image img) {"},{"lineNumber":57,"author":{"gitId":"deyixtan"},"content":"        var db \u003d new DialogBox(text, img);"},{"lineNumber":58,"author":{"gitId":"deyixtan"},"content":"        db.flip();"},{"lineNumber":59,"author":{"gitId":"deyixtan"},"content":"        return db;"},{"lineNumber":60,"author":{"gitId":"deyixtan"},"content":"    }"},{"lineNumber":61,"author":{"gitId":"deyixtan"},"content":"}"}],"authorContributionMap":{"deyixtan":61}},{"path":"src/main/java/duke/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"deyixtan"},"content":"package duke;"},{"lineNumber":2,"author":{"gitId":"deyixtan"},"content":""},{"lineNumber":3,"author":{"gitId":"deyixtan"},"content":"import duke.command.Command;"},{"lineNumber":4,"author":{"gitId":"deyixtan"},"content":""},{"lineNumber":5,"author":{"gitId":"deyixtan"},"content":"/**"},{"lineNumber":6,"author":{"gitId":"deyixtan"},"content":" * Represents the main logic used by the Duke chat bot."},{"lineNumber":7,"author":{"gitId":"deyixtan"},"content":" * It encapsulates all the functionalities such as"},{"lineNumber":8,"author":{"gitId":"deyixtan"},"content":" * storage, the handling of tasks, Ui, as well as"},{"lineNumber":9,"author":{"gitId":"deyixtan"},"content":" * error handling."},{"lineNumber":10,"author":{"gitId":"deyixtan"},"content":" */"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class Duke {"},{"lineNumber":12,"author":{"gitId":"deyixtan"},"content":""},{"lineNumber":13,"author":{"gitId":"deyixtan"},"content":"    private Storage storage;"},{"lineNumber":14,"author":{"gitId":"deyixtan"},"content":"    private TaskList tasks;"},{"lineNumber":15,"author":{"gitId":"deyixtan"},"content":"    private Ui ui;"},{"lineNumber":16,"author":{"gitId":"deyixtan"},"content":""},{"lineNumber":17,"author":{"gitId":"deyixtan"},"content":"    public Duke() {"},{"lineNumber":18,"author":{"gitId":"deyixtan"},"content":"        this(\"data/tasks.txt\");"},{"lineNumber":19,"author":{"gitId":"deyixtan"},"content":"    }"},{"lineNumber":20,"author":{"gitId":"deyixtan"},"content":""},{"lineNumber":21,"author":{"gitId":"deyixtan"},"content":"    /**"},{"lineNumber":22,"author":{"gitId":"deyixtan"},"content":"     * Initialises the Duke chat bot with all"},{"lineNumber":23,"author":{"gitId":"deyixtan"},"content":"     * of its core functionalities."},{"lineNumber":24,"author":{"gitId":"deyixtan"},"content":"     * Attempts to load previously saved tasks\u0027 data."},{"lineNumber":25,"author":{"gitId":"deyixtan"},"content":"     *"},{"lineNumber":26,"author":{"gitId":"deyixtan"},"content":"     * @param filePath Saved data file path."},{"lineNumber":27,"author":{"gitId":"deyixtan"},"content":"     */"},{"lineNumber":28,"author":{"gitId":"deyixtan"},"content":"    public Duke(String filePath) {"},{"lineNumber":29,"author":{"gitId":"deyixtan"},"content":"        ui \u003d new Ui();"},{"lineNumber":30,"author":{"gitId":"deyixtan"},"content":"        storage \u003d new Storage(filePath);"},{"lineNumber":31,"author":{"gitId":"deyixtan"},"content":"        try {"},{"lineNumber":32,"author":{"gitId":"deyixtan"},"content":"            tasks \u003d new TaskList(storage.load());"},{"lineNumber":33,"author":{"gitId":"deyixtan"},"content":"        } catch (DukeException e) {"},{"lineNumber":34,"author":{"gitId":"deyixtan"},"content":"            ui.showLoadingError();"},{"lineNumber":35,"author":{"gitId":"deyixtan"},"content":"            tasks \u003d new TaskList();"},{"lineNumber":36,"author":{"gitId":"deyixtan"},"content":"        }"},{"lineNumber":37,"author":{"gitId":"deyixtan"},"content":"    }"},{"lineNumber":38,"author":{"gitId":"deyixtan"},"content":""},{"lineNumber":39,"author":{"gitId":"deyixtan"},"content":"    public String getResponse(String input) {"},{"lineNumber":40,"author":{"gitId":"deyixtan"},"content":"        try {"},{"lineNumber":41,"author":{"gitId":"deyixtan"},"content":"            Command c \u003d Parser.parse(input);"},{"lineNumber":42,"author":{"gitId":"deyixtan"},"content":"            return c.execute(tasks, ui, storage);"},{"lineNumber":43,"author":{"gitId":"deyixtan"},"content":"        } catch (DukeException e) {"},{"lineNumber":44,"author":{"gitId":"deyixtan"},"content":"            return \"Oh no... \" + e.getMessage();"},{"lineNumber":45,"author":{"gitId":"deyixtan"},"content":"        }"},{"lineNumber":46,"author":{"gitId":"deyixtan"},"content":"    }"},{"lineNumber":47,"author":{"gitId":"deyixtan"},"content":""},{"lineNumber":48,"author":{"gitId":"deyixtan"},"content":"//    /**"},{"lineNumber":49,"author":{"gitId":"deyixtan"},"content":"//     * Manages the logic of the Duke chat bot."},{"lineNumber":50,"author":{"gitId":"deyixtan"},"content":"//     */"},{"lineNumber":51,"author":{"gitId":"deyixtan"},"content":"//    public void run() {"},{"lineNumber":52,"author":{"gitId":"deyixtan"},"content":"//        ui.showGreetings();"},{"lineNumber":53,"author":{"gitId":"deyixtan"},"content":"//        boolean isExit \u003d false;"},{"lineNumber":54,"author":{"gitId":"deyixtan"},"content":"//        while (!isExit) {"},{"lineNumber":55,"author":{"gitId":"deyixtan"},"content":"//            try {"},{"lineNumber":56,"author":{"gitId":"deyixtan"},"content":"//                String fullCommand \u003d ui.ask();"},{"lineNumber":57,"author":{"gitId":"deyixtan"},"content":"//                ui.showLine();"},{"lineNumber":58,"author":{"gitId":"deyixtan"},"content":"//                Command c \u003d Parser.parse(fullCommand);"},{"lineNumber":59,"author":{"gitId":"deyixtan"},"content":"//                c.execute(tasks, ui, storage);"},{"lineNumber":60,"author":{"gitId":"deyixtan"},"content":"//                isExit \u003d c.isExit();"},{"lineNumber":61,"author":{"gitId":"deyixtan"},"content":"//            } catch (DukeException e) {"},{"lineNumber":62,"author":{"gitId":"deyixtan"},"content":"//                ui.showError(\"Oh no... \" + e.getMessage());"},{"lineNumber":63,"author":{"gitId":"deyixtan"},"content":"//            } finally {"},{"lineNumber":64,"author":{"gitId":"deyixtan"},"content":"//                ui.showLine();"},{"lineNumber":65,"author":{"gitId":"deyixtan"},"content":"//            }"},{"lineNumber":66,"author":{"gitId":"deyixtan"},"content":"//        }"},{"lineNumber":67,"author":{"gitId":"deyixtan"},"content":"//    }"},{"lineNumber":68,"author":{"gitId":"-"},"content":"}"}],"authorContributionMap":{"-":2,"deyixtan":66}},{"path":"src/main/java/duke/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"deyixtan"},"content":"package duke;"},{"lineNumber":2,"author":{"gitId":"deyixtan"},"content":""},{"lineNumber":3,"author":{"gitId":"deyixtan"},"content":"/**"},{"lineNumber":4,"author":{"gitId":"deyixtan"},"content":" * Represents the custom exceptions used by"},{"lineNumber":5,"author":{"gitId":"deyixtan"},"content":" * the Duke chat bot."},{"lineNumber":6,"author":{"gitId":"deyixtan"},"content":" */"},{"lineNumber":7,"author":{"gitId":"deyixtan"},"content":"public class DukeException extends Exception {"},{"lineNumber":8,"author":{"gitId":"deyixtan"},"content":""},{"lineNumber":9,"author":{"gitId":"deyixtan"},"content":"    /**"},{"lineNumber":10,"author":{"gitId":"deyixtan"},"content":"     * Initialises the user-defined exception"},{"lineNumber":11,"author":{"gitId":"deyixtan"},"content":"     * with a given message."},{"lineNumber":12,"author":{"gitId":"deyixtan"},"content":"     *"},{"lineNumber":13,"author":{"gitId":"deyixtan"},"content":"     * @param message Exception message."},{"lineNumber":14,"author":{"gitId":"deyixtan"},"content":"     */"},{"lineNumber":15,"author":{"gitId":"deyixtan"},"content":"    public DukeException(String message) {"},{"lineNumber":16,"author":{"gitId":"deyixtan"},"content":"        super(message);"},{"lineNumber":17,"author":{"gitId":"deyixtan"},"content":"    }"},{"lineNumber":18,"author":{"gitId":"deyixtan"},"content":"}"},{"lineNumber":19,"author":{"gitId":"deyixtan"},"content":""}],"authorContributionMap":{"deyixtan":19}},{"path":"src/main/java/duke/Launcher.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"deyixtan"},"content":"package duke;"},{"lineNumber":2,"author":{"gitId":"deyixtan"},"content":""},{"lineNumber":3,"author":{"gitId":"deyixtan"},"content":"import javafx.application.Application;"},{"lineNumber":4,"author":{"gitId":"deyixtan"},"content":""},{"lineNumber":5,"author":{"gitId":"deyixtan"},"content":"/**"},{"lineNumber":6,"author":{"gitId":"deyixtan"},"content":" * A launcher class to workaround classpath issues."},{"lineNumber":7,"author":{"gitId":"deyixtan"},"content":" */"},{"lineNumber":8,"author":{"gitId":"deyixtan"},"content":"public class Launcher {"},{"lineNumber":9,"author":{"gitId":"deyixtan"},"content":""},{"lineNumber":10,"author":{"gitId":"deyixtan"},"content":"    /**"},{"lineNumber":11,"author":{"gitId":"deyixtan"},"content":"     * Entry point to the Duke chat bot."},{"lineNumber":12,"author":{"gitId":"deyixtan"},"content":"     *"},{"lineNumber":13,"author":{"gitId":"deyixtan"},"content":"     * @param args Arguments supplied to the application."},{"lineNumber":14,"author":{"gitId":"deyixtan"},"content":"     */"},{"lineNumber":15,"author":{"gitId":"deyixtan"},"content":"    public static void main(String[] args) {"},{"lineNumber":16,"author":{"gitId":"deyixtan"},"content":"        Application.launch(Main.class, args);"},{"lineNumber":17,"author":{"gitId":"deyixtan"},"content":"    }"},{"lineNumber":18,"author":{"gitId":"deyixtan"},"content":"}"}],"authorContributionMap":{"deyixtan":18}},{"path":"src/main/java/duke/Main.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"deyixtan"},"content":"package duke;"},{"lineNumber":2,"author":{"gitId":"deyixtan"},"content":""},{"lineNumber":3,"author":{"gitId":"deyixtan"},"content":"import java.io.IOException;"},{"lineNumber":4,"author":{"gitId":"deyixtan"},"content":""},{"lineNumber":5,"author":{"gitId":"deyixtan"},"content":"import javafx.application.Application;"},{"lineNumber":6,"author":{"gitId":"deyixtan"},"content":"import javafx.fxml.FXMLLoader;"},{"lineNumber":7,"author":{"gitId":"deyixtan"},"content":"import javafx.scene.Scene;"},{"lineNumber":8,"author":{"gitId":"deyixtan"},"content":"import javafx.scene.layout.AnchorPane;"},{"lineNumber":9,"author":{"gitId":"deyixtan"},"content":"import javafx.stage.Stage;"},{"lineNumber":10,"author":{"gitId":"deyixtan"},"content":""},{"lineNumber":11,"author":{"gitId":"deyixtan"},"content":"/**"},{"lineNumber":12,"author":{"gitId":"deyixtan"},"content":" * A GUI for Duke using FXML."},{"lineNumber":13,"author":{"gitId":"deyixtan"},"content":" */"},{"lineNumber":14,"author":{"gitId":"deyixtan"},"content":"public class Main extends Application {"},{"lineNumber":15,"author":{"gitId":"deyixtan"},"content":""},{"lineNumber":16,"author":{"gitId":"deyixtan"},"content":"    private Duke duke \u003d new Duke();"},{"lineNumber":17,"author":{"gitId":"deyixtan"},"content":""},{"lineNumber":18,"author":{"gitId":"deyixtan"},"content":"    @Override"},{"lineNumber":19,"author":{"gitId":"deyixtan"},"content":"    public void start(Stage stage) {"},{"lineNumber":20,"author":{"gitId":"deyixtan"},"content":"        try {"},{"lineNumber":21,"author":{"gitId":"deyixtan"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(Main.class.getResource(\"/view/MainWindow.fxml\"));"},{"lineNumber":22,"author":{"gitId":"deyixtan"},"content":"            AnchorPane ap \u003d fxmlLoader.load();"},{"lineNumber":23,"author":{"gitId":"deyixtan"},"content":"            Scene scene \u003d new Scene(ap);"},{"lineNumber":24,"author":{"gitId":"deyixtan"},"content":"            stage.setScene(scene);"},{"lineNumber":25,"author":{"gitId":"deyixtan"},"content":"            fxmlLoader.\u003cMainWindow\u003egetController().setDuke(duke);"},{"lineNumber":26,"author":{"gitId":"deyixtan"},"content":"            stage.show();"},{"lineNumber":27,"author":{"gitId":"deyixtan"},"content":"        } catch (IOException e) {"},{"lineNumber":28,"author":{"gitId":"deyixtan"},"content":"            e.printStackTrace();"},{"lineNumber":29,"author":{"gitId":"deyixtan"},"content":"        }"},{"lineNumber":30,"author":{"gitId":"deyixtan"},"content":"    }"},{"lineNumber":31,"author":{"gitId":"deyixtan"},"content":"}"}],"authorContributionMap":{"deyixtan":31}},{"path":"src/main/java/duke/MainWindow.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"deyixtan"},"content":"package duke;"},{"lineNumber":2,"author":{"gitId":"deyixtan"},"content":""},{"lineNumber":3,"author":{"gitId":"deyixtan"},"content":"import javafx.fxml.FXML;"},{"lineNumber":4,"author":{"gitId":"deyixtan"},"content":"import javafx.scene.control.Button;"},{"lineNumber":5,"author":{"gitId":"deyixtan"},"content":"import javafx.scene.control.ScrollPane;"},{"lineNumber":6,"author":{"gitId":"deyixtan"},"content":"import javafx.scene.control.TextField;"},{"lineNumber":7,"author":{"gitId":"deyixtan"},"content":"import javafx.scene.image.Image;"},{"lineNumber":8,"author":{"gitId":"deyixtan"},"content":"import javafx.scene.layout.AnchorPane;"},{"lineNumber":9,"author":{"gitId":"deyixtan"},"content":"import javafx.scene.layout.VBox;"},{"lineNumber":10,"author":{"gitId":"deyixtan"},"content":"/**"},{"lineNumber":11,"author":{"gitId":"deyixtan"},"content":" * Controller for MainWindow. Provides the layout for the other controls."},{"lineNumber":12,"author":{"gitId":"deyixtan"},"content":" */"},{"lineNumber":13,"author":{"gitId":"deyixtan"},"content":"public class MainWindow extends AnchorPane {"},{"lineNumber":14,"author":{"gitId":"deyixtan"},"content":"    @FXML"},{"lineNumber":15,"author":{"gitId":"deyixtan"},"content":"    private ScrollPane scrollPane;"},{"lineNumber":16,"author":{"gitId":"deyixtan"},"content":"    @FXML"},{"lineNumber":17,"author":{"gitId":"deyixtan"},"content":"    private VBox dialogContainer;"},{"lineNumber":18,"author":{"gitId":"deyixtan"},"content":"    @FXML"},{"lineNumber":19,"author":{"gitId":"deyixtan"},"content":"    private TextField userInput;"},{"lineNumber":20,"author":{"gitId":"deyixtan"},"content":"    @FXML"},{"lineNumber":21,"author":{"gitId":"deyixtan"},"content":"    private Button sendButton;"},{"lineNumber":22,"author":{"gitId":"deyixtan"},"content":""},{"lineNumber":23,"author":{"gitId":"deyixtan"},"content":"    private Duke duke;"},{"lineNumber":24,"author":{"gitId":"deyixtan"},"content":""},{"lineNumber":25,"author":{"gitId":"deyixtan"},"content":"    private Image userImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaUser.png\"));"},{"lineNumber":26,"author":{"gitId":"deyixtan"},"content":"    private Image dukeImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaDuke.png\"));"},{"lineNumber":27,"author":{"gitId":"deyixtan"},"content":""},{"lineNumber":28,"author":{"gitId":"deyixtan"},"content":"    @FXML"},{"lineNumber":29,"author":{"gitId":"deyixtan"},"content":"    public void initialize() {"},{"lineNumber":30,"author":{"gitId":"deyixtan"},"content":"        scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());"},{"lineNumber":31,"author":{"gitId":"deyixtan"},"content":"    }"},{"lineNumber":32,"author":{"gitId":"deyixtan"},"content":""},{"lineNumber":33,"author":{"gitId":"deyixtan"},"content":"    public void setDuke(Duke d) {"},{"lineNumber":34,"author":{"gitId":"deyixtan"},"content":"        duke \u003d d;"},{"lineNumber":35,"author":{"gitId":"deyixtan"},"content":"    }"},{"lineNumber":36,"author":{"gitId":"deyixtan"},"content":""},{"lineNumber":37,"author":{"gitId":"deyixtan"},"content":"    /**"},{"lineNumber":38,"author":{"gitId":"deyixtan"},"content":"     * Creates two dialog boxes, one echoing user input and the other containing Duke\u0027s reply and then appends them to"},{"lineNumber":39,"author":{"gitId":"deyixtan"},"content":"     * the dialog container. Clears the user input after processing."},{"lineNumber":40,"author":{"gitId":"deyixtan"},"content":"     */"},{"lineNumber":41,"author":{"gitId":"deyixtan"},"content":"    @FXML"},{"lineNumber":42,"author":{"gitId":"deyixtan"},"content":"    private void handleUserInput() {"},{"lineNumber":43,"author":{"gitId":"deyixtan"},"content":"        String input \u003d userInput.getText();"},{"lineNumber":44,"author":{"gitId":"deyixtan"},"content":"        String response \u003d duke.getResponse(input);"},{"lineNumber":45,"author":{"gitId":"deyixtan"},"content":"        dialogContainer.getChildren().addAll("},{"lineNumber":46,"author":{"gitId":"deyixtan"},"content":"                DialogBox.getUserDialog(input, userImage),"},{"lineNumber":47,"author":{"gitId":"deyixtan"},"content":"                DialogBox.getDukeDialog(response, dukeImage)"},{"lineNumber":48,"author":{"gitId":"deyixtan"},"content":"        );"},{"lineNumber":49,"author":{"gitId":"deyixtan"},"content":"        userInput.clear();"},{"lineNumber":50,"author":{"gitId":"deyixtan"},"content":"    }"},{"lineNumber":51,"author":{"gitId":"deyixtan"},"content":"}"}],"authorContributionMap":{"deyixtan":51}},{"path":"src/main/java/duke/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"deyixtan"},"content":"package duke;"},{"lineNumber":2,"author":{"gitId":"deyixtan"},"content":""},{"lineNumber":3,"author":{"gitId":"deyixtan"},"content":"import duke.command.Command;"},{"lineNumber":4,"author":{"gitId":"deyixtan"},"content":""},{"lineNumber":5,"author":{"gitId":"deyixtan"},"content":"/**"},{"lineNumber":6,"author":{"gitId":"deyixtan"},"content":" * Represents the parser used by the Duke chat bot."},{"lineNumber":7,"author":{"gitId":"deyixtan"},"content":" * It parses raw user inputs, and convert them into"},{"lineNumber":8,"author":{"gitId":"deyixtan"},"content":" * a suitable Command format for execution."},{"lineNumber":9,"author":{"gitId":"deyixtan"},"content":" */"},{"lineNumber":10,"author":{"gitId":"deyixtan"},"content":"public class Parser {"},{"lineNumber":11,"author":{"gitId":"deyixtan"},"content":""},{"lineNumber":12,"author":{"gitId":"deyixtan"},"content":"    /**"},{"lineNumber":13,"author":{"gitId":"deyixtan"},"content":"     * Processes the raw user input and converts it"},{"lineNumber":14,"author":{"gitId":"deyixtan"},"content":"     * into a friendly Command data type for the"},{"lineNumber":15,"author":{"gitId":"deyixtan"},"content":"     * Duke chat bot to execute."},{"lineNumber":16,"author":{"gitId":"deyixtan"},"content":"     *"},{"lineNumber":17,"author":{"gitId":"deyixtan"},"content":"     * @param input Raw user input."},{"lineNumber":18,"author":{"gitId":"deyixtan"},"content":"     * @return User input in a Command format."},{"lineNumber":19,"author":{"gitId":"deyixtan"},"content":"     * @throws DukeException If command arguments are misused."},{"lineNumber":20,"author":{"gitId":"deyixtan"},"content":"     */"},{"lineNumber":21,"author":{"gitId":"deyixtan"},"content":"    public static Command parse(String input) throws DukeException {"},{"lineNumber":22,"author":{"gitId":"deyixtan"},"content":"        String[] inputArr \u003d input.split(\" \");"},{"lineNumber":23,"author":{"gitId":"deyixtan"},"content":"        String taskType \u003d inputArr[0].toLowerCase();"},{"lineNumber":24,"author":{"gitId":"deyixtan"},"content":"        String taskDesc \u003d \"\";"},{"lineNumber":25,"author":{"gitId":"deyixtan"},"content":"        String taskArg \u003d \"\";"},{"lineNumber":26,"author":{"gitId":"deyixtan"},"content":""},{"lineNumber":27,"author":{"gitId":"deyixtan"},"content":"        // Get description"},{"lineNumber":28,"author":{"gitId":"deyixtan"},"content":"        int i;"},{"lineNumber":29,"author":{"gitId":"deyixtan"},"content":"        for (i \u003d 1; i \u003c inputArr.length; i++) {"},{"lineNumber":30,"author":{"gitId":"deyixtan"},"content":"            if (taskType.equals(\"todo\") || (!inputArr[i].equalsIgnoreCase(\"/by\")"},{"lineNumber":31,"author":{"gitId":"deyixtan"},"content":"                    \u0026\u0026 !inputArr[i].equalsIgnoreCase(\"/at\"))) {"},{"lineNumber":32,"author":{"gitId":"deyixtan"},"content":"                if (!taskDesc.equals(\"\")) {"},{"lineNumber":33,"author":{"gitId":"deyixtan"},"content":"                    taskDesc +\u003d \" \";"},{"lineNumber":34,"author":{"gitId":"deyixtan"},"content":"                }"},{"lineNumber":35,"author":{"gitId":"deyixtan"},"content":"                taskDesc +\u003d inputArr[i];"},{"lineNumber":36,"author":{"gitId":"deyixtan"},"content":"            } else {"},{"lineNumber":37,"author":{"gitId":"deyixtan"},"content":"                // Ensure no misuse of arguments"},{"lineNumber":38,"author":{"gitId":"deyixtan"},"content":"                if (!inputArr[i].equalsIgnoreCase(\"/by\") \u0026\u0026 taskType.equals(\"deadline\")) {"},{"lineNumber":39,"author":{"gitId":"deyixtan"},"content":"                    throw new DukeException(\"You\u0027re confusing me with parameters from other commands...\");"},{"lineNumber":40,"author":{"gitId":"deyixtan"},"content":"                } else if (!inputArr[i].equalsIgnoreCase(\"/at\") \u0026\u0026 taskType.equals(\"event\")) {"},{"lineNumber":41,"author":{"gitId":"deyixtan"},"content":"                    throw new DukeException(\"You\u0027re confusing me with parameters from other commands...\");"},{"lineNumber":42,"author":{"gitId":"deyixtan"},"content":"                }"},{"lineNumber":43,"author":{"gitId":"deyixtan"},"content":"                break;"},{"lineNumber":44,"author":{"gitId":"deyixtan"},"content":"            }"},{"lineNumber":45,"author":{"gitId":"deyixtan"},"content":"        }"},{"lineNumber":46,"author":{"gitId":"deyixtan"},"content":""},{"lineNumber":47,"author":{"gitId":"deyixtan"},"content":"        // Get argument"},{"lineNumber":48,"author":{"gitId":"deyixtan"},"content":"        for (i \u003d i + 1; i \u003c inputArr.length; i++) {"},{"lineNumber":49,"author":{"gitId":"deyixtan"},"content":"            if (!taskArg.equals(\"\")) {"},{"lineNumber":50,"author":{"gitId":"deyixtan"},"content":"                taskArg +\u003d \" \";"},{"lineNumber":51,"author":{"gitId":"deyixtan"},"content":"            }"},{"lineNumber":52,"author":{"gitId":"deyixtan"},"content":"            taskArg +\u003d inputArr[i];"},{"lineNumber":53,"author":{"gitId":"deyixtan"},"content":"        }"},{"lineNumber":54,"author":{"gitId":"deyixtan"},"content":""},{"lineNumber":55,"author":{"gitId":"deyixtan"},"content":"        return new Command(taskType, new String[]{taskDesc, taskArg});"},{"lineNumber":56,"author":{"gitId":"deyixtan"},"content":"    }"},{"lineNumber":57,"author":{"gitId":"deyixtan"},"content":"}"}],"authorContributionMap":{"deyixtan":57}},{"path":"src/main/java/duke/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"deyixtan"},"content":"package duke;"},{"lineNumber":2,"author":{"gitId":"deyixtan"},"content":""},{"lineNumber":3,"author":{"gitId":"deyixtan"},"content":"import java.io.IOException;"},{"lineNumber":4,"author":{"gitId":"deyixtan"},"content":"import java.nio.file.Files;"},{"lineNumber":5,"author":{"gitId":"deyixtan"},"content":"import java.nio.file.Path;"},{"lineNumber":6,"author":{"gitId":"deyixtan"},"content":"import java.nio.file.Paths;"},{"lineNumber":7,"author":{"gitId":"deyixtan"},"content":"import java.time.LocalDate;"},{"lineNumber":8,"author":{"gitId":"deyixtan"},"content":"import java.util.ArrayList;"},{"lineNumber":9,"author":{"gitId":"deyixtan"},"content":"import java.util.List;"},{"lineNumber":10,"author":{"gitId":"deyixtan"},"content":""},{"lineNumber":11,"author":{"gitId":"deyixtan"},"content":"import duke.task.Deadline;"},{"lineNumber":12,"author":{"gitId":"deyixtan"},"content":"import duke.task.Event;"},{"lineNumber":13,"author":{"gitId":"deyixtan"},"content":"import duke.task.Task;"},{"lineNumber":14,"author":{"gitId":"deyixtan"},"content":"import duke.task.Todo;"},{"lineNumber":15,"author":{"gitId":"deyixtan"},"content":""},{"lineNumber":16,"author":{"gitId":"deyixtan"},"content":"/**"},{"lineNumber":17,"author":{"gitId":"deyixtan"},"content":" * Represents the storage functionalities used by"},{"lineNumber":18,"author":{"gitId":"deyixtan"},"content":" * the Duke chat bot. It manages the loading and saving"},{"lineNumber":19,"author":{"gitId":"deyixtan"},"content":" * of tasks in and out of the disk."},{"lineNumber":20,"author":{"gitId":"deyixtan"},"content":" */"},{"lineNumber":21,"author":{"gitId":"deyixtan"},"content":"public class Storage {"},{"lineNumber":22,"author":{"gitId":"deyixtan"},"content":""},{"lineNumber":23,"author":{"gitId":"deyixtan"},"content":"    protected Path filePath;"},{"lineNumber":24,"author":{"gitId":"deyixtan"},"content":""},{"lineNumber":25,"author":{"gitId":"deyixtan"},"content":"    /**"},{"lineNumber":26,"author":{"gitId":"deyixtan"},"content":"     * Initialises the class with a file path"},{"lineNumber":27,"author":{"gitId":"deyixtan"},"content":"     * where the file will be used for data storage"},{"lineNumber":28,"author":{"gitId":"deyixtan"},"content":"     * operations."},{"lineNumber":29,"author":{"gitId":"deyixtan"},"content":"     */"},{"lineNumber":30,"author":{"gitId":"deyixtan"},"content":"    public Storage(String filePath) {"},{"lineNumber":31,"author":{"gitId":"deyixtan"},"content":"        this.filePath \u003d Paths.get(System.getProperty(\"user.dir\"), filePath);"},{"lineNumber":32,"author":{"gitId":"deyixtan"},"content":"    }"},{"lineNumber":33,"author":{"gitId":"deyixtan"},"content":""},{"lineNumber":34,"author":{"gitId":"deyixtan"},"content":"    /**"},{"lineNumber":35,"author":{"gitId":"deyixtan"},"content":"     * Loads task list data found in the disk"},{"lineNumber":36,"author":{"gitId":"deyixtan"},"content":"     * into the Duke chat bot."},{"lineNumber":37,"author":{"gitId":"deyixtan"},"content":"     *"},{"lineNumber":38,"author":{"gitId":"deyixtan"},"content":"     * @return Task list."},{"lineNumber":39,"author":{"gitId":"deyixtan"},"content":"     * @throws DukeException If the file cannot be found."},{"lineNumber":40,"author":{"gitId":"deyixtan"},"content":"     */"},{"lineNumber":41,"author":{"gitId":"deyixtan"},"content":"    public ArrayList\u003cTask\u003e load() throws DukeException {"},{"lineNumber":42,"author":{"gitId":"deyixtan"},"content":"        ArrayList\u003cTask\u003e collection \u003d new ArrayList\u003c\u003e();"},{"lineNumber":43,"author":{"gitId":"deyixtan"},"content":""},{"lineNumber":44,"author":{"gitId":"deyixtan"},"content":"        List\u003cString\u003e lines;"},{"lineNumber":45,"author":{"gitId":"deyixtan"},"content":"        try {"},{"lineNumber":46,"author":{"gitId":"deyixtan"},"content":"            lines \u003d Files.readAllLines(this.filePath);"},{"lineNumber":47,"author":{"gitId":"deyixtan"},"content":"            for (String line : lines) {"},{"lineNumber":48,"author":{"gitId":"deyixtan"},"content":"                String[] parts \u003d line.replace(\u0027|\u0027, \u0027 \u0027).split(\"[ ]+\");"},{"lineNumber":49,"author":{"gitId":"deyixtan"},"content":""},{"lineNumber":50,"author":{"gitId":"deyixtan"},"content":"                Task task;"},{"lineNumber":51,"author":{"gitId":"deyixtan"},"content":"                if (parts[0].equals(\"T\")) {"},{"lineNumber":52,"author":{"gitId":"deyixtan"},"content":"                    task \u003d new Todo(parts[2]);"},{"lineNumber":53,"author":{"gitId":"deyixtan"},"content":"                } else if (parts[0].equals(\"D\")) {"},{"lineNumber":54,"author":{"gitId":"deyixtan"},"content":"                    task \u003d new Deadline(parts[2], LocalDate.parse(parts[3]));"},{"lineNumber":55,"author":{"gitId":"deyixtan"},"content":"                } else {"},{"lineNumber":56,"author":{"gitId":"deyixtan"},"content":"                    task \u003d new Event(parts[2], LocalDate.parse(parts[3]));"},{"lineNumber":57,"author":{"gitId":"deyixtan"},"content":"                }"},{"lineNumber":58,"author":{"gitId":"deyixtan"},"content":""},{"lineNumber":59,"author":{"gitId":"deyixtan"},"content":"                if (parts[1].equals(\"1\")) {"},{"lineNumber":60,"author":{"gitId":"deyixtan"},"content":"                    task.markAsDone();"},{"lineNumber":61,"author":{"gitId":"deyixtan"},"content":"                }"},{"lineNumber":62,"author":{"gitId":"deyixtan"},"content":"                collection.add(task);"},{"lineNumber":63,"author":{"gitId":"deyixtan"},"content":"            }"},{"lineNumber":64,"author":{"gitId":"deyixtan"},"content":"        } catch (IOException e) {"},{"lineNumber":65,"author":{"gitId":"deyixtan"},"content":"            throw new DukeException(\"Unable to load file.\");"},{"lineNumber":66,"author":{"gitId":"deyixtan"},"content":"        }"},{"lineNumber":67,"author":{"gitId":"deyixtan"},"content":""},{"lineNumber":68,"author":{"gitId":"deyixtan"},"content":"        return collection;"},{"lineNumber":69,"author":{"gitId":"deyixtan"},"content":"    }"},{"lineNumber":70,"author":{"gitId":"deyixtan"},"content":""},{"lineNumber":71,"author":{"gitId":"deyixtan"},"content":"    /**"},{"lineNumber":72,"author":{"gitId":"deyixtan"},"content":"     * Saves the task list data from the"},{"lineNumber":73,"author":{"gitId":"deyixtan"},"content":"     * Duke chat bot into the disk."},{"lineNumber":74,"author":{"gitId":"deyixtan"},"content":"     *"},{"lineNumber":75,"author":{"gitId":"deyixtan"},"content":"     * @param collection Task list."},{"lineNumber":76,"author":{"gitId":"deyixtan"},"content":"     * @return Successful result of the operation."},{"lineNumber":77,"author":{"gitId":"deyixtan"},"content":"     * @throws DukeException If the file cannot be found."},{"lineNumber":78,"author":{"gitId":"deyixtan"},"content":"     */"},{"lineNumber":79,"author":{"gitId":"deyixtan"},"content":"    public String save(ArrayList\u003cTask\u003e collection) throws DukeException {"},{"lineNumber":80,"author":{"gitId":"deyixtan"},"content":"        try {"},{"lineNumber":81,"author":{"gitId":"deyixtan"},"content":"            Files.createDirectories(this.filePath.getParent()); // force create directories"},{"lineNumber":82,"author":{"gitId":"deyixtan"},"content":""},{"lineNumber":83,"author":{"gitId":"deyixtan"},"content":"            StringBuilder sb \u003d new StringBuilder();"},{"lineNumber":84,"author":{"gitId":"deyixtan"},"content":"            for (Task task : collection) {"},{"lineNumber":85,"author":{"gitId":"deyixtan"},"content":"                // Task type"},{"lineNumber":86,"author":{"gitId":"deyixtan"},"content":"                if (task instanceof Todo) {"},{"lineNumber":87,"author":{"gitId":"deyixtan"},"content":"                    sb.append(\u0027T\u0027);"},{"lineNumber":88,"author":{"gitId":"deyixtan"},"content":"                } else if (task instanceof Deadline) {"},{"lineNumber":89,"author":{"gitId":"deyixtan"},"content":"                    sb.append(\u0027D\u0027);"},{"lineNumber":90,"author":{"gitId":"deyixtan"},"content":"                } else if (task instanceof Event) {"},{"lineNumber":91,"author":{"gitId":"deyixtan"},"content":"                    sb.append(\u0027E\u0027);"},{"lineNumber":92,"author":{"gitId":"deyixtan"},"content":"                }"},{"lineNumber":93,"author":{"gitId":"deyixtan"},"content":""},{"lineNumber":94,"author":{"gitId":"deyixtan"},"content":"                // Status"},{"lineNumber":95,"author":{"gitId":"deyixtan"},"content":"                sb.append(\" | \");"},{"lineNumber":96,"author":{"gitId":"deyixtan"},"content":"                if (task.getStatusIcon().equals(\"*\")) {"},{"lineNumber":97,"author":{"gitId":"deyixtan"},"content":"                    sb.append(\"1\");"},{"lineNumber":98,"author":{"gitId":"deyixtan"},"content":"                } else {"},{"lineNumber":99,"author":{"gitId":"deyixtan"},"content":"                    sb.append(\"0\");"},{"lineNumber":100,"author":{"gitId":"deyixtan"},"content":"                }"},{"lineNumber":101,"author":{"gitId":"deyixtan"},"content":""},{"lineNumber":102,"author":{"gitId":"deyixtan"},"content":"                // Description"},{"lineNumber":103,"author":{"gitId":"deyixtan"},"content":"                sb.append(\" | \");"},{"lineNumber":104,"author":{"gitId":"deyixtan"},"content":"                sb.append(task.getDescription());"},{"lineNumber":105,"author":{"gitId":"deyixtan"},"content":""},{"lineNumber":106,"author":{"gitId":"deyixtan"},"content":"                // Args"},{"lineNumber":107,"author":{"gitId":"deyixtan"},"content":"                if (task instanceof Deadline) {"},{"lineNumber":108,"author":{"gitId":"deyixtan"},"content":"                    sb.append(\" | \");"},{"lineNumber":109,"author":{"gitId":"deyixtan"},"content":"                    sb.append(((Deadline) task).getBy());"},{"lineNumber":110,"author":{"gitId":"deyixtan"},"content":"                } else if (task instanceof Event) {"},{"lineNumber":111,"author":{"gitId":"deyixtan"},"content":"                    sb.append(\" | \");"},{"lineNumber":112,"author":{"gitId":"deyixtan"},"content":"                    sb.append(((Event) task).getAt());"},{"lineNumber":113,"author":{"gitId":"deyixtan"},"content":"                }"},{"lineNumber":114,"author":{"gitId":"deyixtan"},"content":"                sb.append(\u0027\\n\u0027);"},{"lineNumber":115,"author":{"gitId":"deyixtan"},"content":"            }"},{"lineNumber":116,"author":{"gitId":"deyixtan"},"content":"            Files.write(this.filePath, sb.toString().getBytes());"},{"lineNumber":117,"author":{"gitId":"deyixtan"},"content":"            return \"Task list saved.\";"},{"lineNumber":118,"author":{"gitId":"deyixtan"},"content":"        } catch (IOException e) {"},{"lineNumber":119,"author":{"gitId":"deyixtan"},"content":"            throw new DukeException(\"I don\u0027t think there is such a file...\");"},{"lineNumber":120,"author":{"gitId":"deyixtan"},"content":"        }"},{"lineNumber":121,"author":{"gitId":"deyixtan"},"content":"    }"},{"lineNumber":122,"author":{"gitId":"deyixtan"},"content":""},{"lineNumber":123,"author":{"gitId":"deyixtan"},"content":"}"}],"authorContributionMap":{"deyixtan":123}},{"path":"src/main/java/duke/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"deyixtan"},"content":"package duke;"},{"lineNumber":2,"author":{"gitId":"deyixtan"},"content":""},{"lineNumber":3,"author":{"gitId":"deyixtan"},"content":"import java.time.LocalDate;"},{"lineNumber":4,"author":{"gitId":"deyixtan"},"content":"import java.time.format.DateTimeParseException;"},{"lineNumber":5,"author":{"gitId":"deyixtan"},"content":"import java.util.ArrayList;"},{"lineNumber":6,"author":{"gitId":"deyixtan"},"content":""},{"lineNumber":7,"author":{"gitId":"deyixtan"},"content":"import duke.task.Deadline;"},{"lineNumber":8,"author":{"gitId":"deyixtan"},"content":"import duke.task.Event;"},{"lineNumber":9,"author":{"gitId":"deyixtan"},"content":"import duke.task.Task;"},{"lineNumber":10,"author":{"gitId":"deyixtan"},"content":"import duke.task.Todo;"},{"lineNumber":11,"author":{"gitId":"deyixtan"},"content":""},{"lineNumber":12,"author":{"gitId":"deyixtan"},"content":"/**"},{"lineNumber":13,"author":{"gitId":"deyixtan"},"content":" * Represents the task list used by the Duke chat bot."},{"lineNumber":14,"author":{"gitId":"deyixtan"},"content":" * It manages all the tasks in the list."},{"lineNumber":15,"author":{"gitId":"deyixtan"},"content":" */"},{"lineNumber":16,"author":{"gitId":"deyixtan"},"content":"public class TaskList {"},{"lineNumber":17,"author":{"gitId":"deyixtan"},"content":""},{"lineNumber":18,"author":{"gitId":"deyixtan"},"content":"    protected ArrayList\u003cTask\u003e collection;"},{"lineNumber":19,"author":{"gitId":"deyixtan"},"content":""},{"lineNumber":20,"author":{"gitId":"deyixtan"},"content":"    /**"},{"lineNumber":21,"author":{"gitId":"deyixtan"},"content":"     * Initialises the class with an empty"},{"lineNumber":22,"author":{"gitId":"deyixtan"},"content":"     * task list collection for future"},{"lineNumber":23,"author":{"gitId":"deyixtan"},"content":"     * task-related operations."},{"lineNumber":24,"author":{"gitId":"deyixtan"},"content":"     */"},{"lineNumber":25,"author":{"gitId":"deyixtan"},"content":"    public TaskList() {"},{"lineNumber":26,"author":{"gitId":"deyixtan"},"content":"        this.collection \u003d new ArrayList\u003c\u003e();"},{"lineNumber":27,"author":{"gitId":"deyixtan"},"content":"    }"},{"lineNumber":28,"author":{"gitId":"deyixtan"},"content":""},{"lineNumber":29,"author":{"gitId":"deyixtan"},"content":"    /**"},{"lineNumber":30,"author":{"gitId":"deyixtan"},"content":"     * Initialises the class with a specified"},{"lineNumber":31,"author":{"gitId":"deyixtan"},"content":"     * task list collection for future"},{"lineNumber":32,"author":{"gitId":"deyixtan"},"content":"     * task-related operations."},{"lineNumber":33,"author":{"gitId":"deyixtan"},"content":"     */"},{"lineNumber":34,"author":{"gitId":"deyixtan"},"content":"    public TaskList(ArrayList\u003cTask\u003e collection) {"},{"lineNumber":35,"author":{"gitId":"deyixtan"},"content":"        this.collection \u003d collection;"},{"lineNumber":36,"author":{"gitId":"deyixtan"},"content":"    }"},{"lineNumber":37,"author":{"gitId":"deyixtan"},"content":""},{"lineNumber":38,"author":{"gitId":"deyixtan"},"content":"    /**"},{"lineNumber":39,"author":{"gitId":"deyixtan"},"content":"     * Retrieves the exact task list."},{"lineNumber":40,"author":{"gitId":"deyixtan"},"content":"     *"},{"lineNumber":41,"author":{"gitId":"deyixtan"},"content":"     * @return Task list."},{"lineNumber":42,"author":{"gitId":"deyixtan"},"content":"     */"},{"lineNumber":43,"author":{"gitId":"deyixtan"},"content":"    public ArrayList\u003cTask\u003e getList() {"},{"lineNumber":44,"author":{"gitId":"deyixtan"},"content":"        return this.collection;"},{"lineNumber":45,"author":{"gitId":"deyixtan"},"content":"    }"},{"lineNumber":46,"author":{"gitId":"deyixtan"},"content":""},{"lineNumber":47,"author":{"gitId":"deyixtan"},"content":"    /**"},{"lineNumber":48,"author":{"gitId":"deyixtan"},"content":"     * Retrieves the exact task list in a"},{"lineNumber":49,"author":{"gitId":"deyixtan"},"content":"     * nicely formatted output."},{"lineNumber":50,"author":{"gitId":"deyixtan"},"content":"     *"},{"lineNumber":51,"author":{"gitId":"deyixtan"},"content":"     * @return Formatted output."},{"lineNumber":52,"author":{"gitId":"deyixtan"},"content":"     */"},{"lineNumber":53,"author":{"gitId":"deyixtan"},"content":"    public String showList() {"},{"lineNumber":54,"author":{"gitId":"deyixtan"},"content":"        StringBuilder sb \u003d new StringBuilder();"},{"lineNumber":55,"author":{"gitId":"deyixtan"},"content":""},{"lineNumber":56,"author":{"gitId":"deyixtan"},"content":"        sb.append(\"You got a total of \" + this.collection.size() + \" task(s).\\n\");"},{"lineNumber":57,"author":{"gitId":"deyixtan"},"content":"        for (int i \u003d 0; i \u003c collection.size(); i++) {"},{"lineNumber":58,"author":{"gitId":"deyixtan"},"content":"            sb.append(String.format(\"\\t%d. %s\\n\", i + 1, collection.get(i)));"},{"lineNumber":59,"author":{"gitId":"deyixtan"},"content":"        }"},{"lineNumber":60,"author":{"gitId":"deyixtan"},"content":""},{"lineNumber":61,"author":{"gitId":"deyixtan"},"content":"        return sb.toString();"},{"lineNumber":62,"author":{"gitId":"deyixtan"},"content":"    }"},{"lineNumber":63,"author":{"gitId":"deyixtan"},"content":""},{"lineNumber":64,"author":{"gitId":"deyixtan"},"content":"    /**"},{"lineNumber":65,"author":{"gitId":"deyixtan"},"content":"     * Filters the task list to find tasks"},{"lineNumber":66,"author":{"gitId":"deyixtan"},"content":"     * that matches a certain keyword."},{"lineNumber":67,"author":{"gitId":"deyixtan"},"content":"     * Formats the result into a pleasant"},{"lineNumber":68,"author":{"gitId":"deyixtan"},"content":"     * viewing format."},{"lineNumber":69,"author":{"gitId":"deyixtan"},"content":"     *"},{"lineNumber":70,"author":{"gitId":"deyixtan"},"content":"     * @param keyword Keyword used to filter."},{"lineNumber":71,"author":{"gitId":"deyixtan"},"content":"     * @return Formatted output."},{"lineNumber":72,"author":{"gitId":"deyixtan"},"content":"     */"},{"lineNumber":73,"author":{"gitId":"deyixtan"},"content":"    public String findTasks(String keyword) {"},{"lineNumber":74,"author":{"gitId":"deyixtan"},"content":"        StringBuilder sb \u003d new StringBuilder();"},{"lineNumber":75,"author":{"gitId":"deyixtan"},"content":""},{"lineNumber":76,"author":{"gitId":"deyixtan"},"content":"        sb.append(\"Here are the matching tasks in your list:\\n\");"},{"lineNumber":77,"author":{"gitId":"deyixtan"},"content":"        for (int i \u003d 0; i \u003c collection.size(); i++) {"},{"lineNumber":78,"author":{"gitId":"deyixtan"},"content":"            Task task \u003d this.collection.get(i);"},{"lineNumber":79,"author":{"gitId":"deyixtan"},"content":"            if (task.getDescription().contains(keyword)) {"},{"lineNumber":80,"author":{"gitId":"deyixtan"},"content":"                sb.append(String.format(\"\\t%d. %s\\n\", i + 1, collection.get(i)));"},{"lineNumber":81,"author":{"gitId":"deyixtan"},"content":"            }"},{"lineNumber":82,"author":{"gitId":"deyixtan"},"content":"        }"},{"lineNumber":83,"author":{"gitId":"deyixtan"},"content":"        return sb.toString();"},{"lineNumber":84,"author":{"gitId":"deyixtan"},"content":"    }"},{"lineNumber":85,"author":{"gitId":"deyixtan"},"content":""},{"lineNumber":86,"author":{"gitId":"deyixtan"},"content":"    /**"},{"lineNumber":87,"author":{"gitId":"deyixtan"},"content":"     * Adds the specified task into the task list."},{"lineNumber":88,"author":{"gitId":"deyixtan"},"content":"     *"},{"lineNumber":89,"author":{"gitId":"deyixtan"},"content":"     * @param type Task type."},{"lineNumber":90,"author":{"gitId":"deyixtan"},"content":"     * @param args Task arguments."},{"lineNumber":91,"author":{"gitId":"deyixtan"},"content":"     * @return Successful result of the operation."},{"lineNumber":92,"author":{"gitId":"deyixtan"},"content":"     * @throws DukeException If invalid task type or arguments specified."},{"lineNumber":93,"author":{"gitId":"deyixtan"},"content":"     */"},{"lineNumber":94,"author":{"gitId":"deyixtan"},"content":"    public String addTask(String type, String[] args) throws DukeException {"},{"lineNumber":95,"author":{"gitId":"deyixtan"},"content":"        // Ensure task description and argument cannot be empty"},{"lineNumber":96,"author":{"gitId":"deyixtan"},"content":"        if (args[0].equals(\"\")) {"},{"lineNumber":97,"author":{"gitId":"deyixtan"},"content":"            throw new DukeException(\"I need a description of your task...\");"},{"lineNumber":98,"author":{"gitId":"deyixtan"},"content":"        } else if (args[1].equals(\"\")) {"},{"lineNumber":99,"author":{"gitId":"deyixtan"},"content":"            if (type.equals(\"deadline\")) {"},{"lineNumber":100,"author":{"gitId":"deyixtan"},"content":"                throw new DukeException(\"I need to know when your task ends...\");"},{"lineNumber":101,"author":{"gitId":"deyixtan"},"content":"            }"},{"lineNumber":102,"author":{"gitId":"deyixtan"},"content":"            if (type.equals(\"event\")) {"},{"lineNumber":103,"author":{"gitId":"deyixtan"},"content":"                throw new DukeException(\"I need to know the time period of your event...\");"},{"lineNumber":104,"author":{"gitId":"deyixtan"},"content":"            }"},{"lineNumber":105,"author":{"gitId":"deyixtan"},"content":"        }"},{"lineNumber":106,"author":{"gitId":"deyixtan"},"content":""},{"lineNumber":107,"author":{"gitId":"deyixtan"},"content":"        // Add to collection"},{"lineNumber":108,"author":{"gitId":"deyixtan"},"content":"        try {"},{"lineNumber":109,"author":{"gitId":"deyixtan"},"content":"            switch (type) {"},{"lineNumber":110,"author":{"gitId":"deyixtan"},"content":"            case \"todo\":"},{"lineNumber":111,"author":{"gitId":"deyixtan"},"content":"                this.collection.add(new Todo(args[0]));"},{"lineNumber":112,"author":{"gitId":"deyixtan"},"content":"                break;"},{"lineNumber":113,"author":{"gitId":"deyixtan"},"content":"            case \"deadline\":"},{"lineNumber":114,"author":{"gitId":"deyixtan"},"content":"                this.collection.add(new Deadline(args[0], LocalDate.parse(args[1])));"},{"lineNumber":115,"author":{"gitId":"deyixtan"},"content":"                break;"},{"lineNumber":116,"author":{"gitId":"deyixtan"},"content":"            case \"event\":"},{"lineNumber":117,"author":{"gitId":"deyixtan"},"content":"                this.collection.add(new Event(args[0], LocalDate.parse(args[1])));"},{"lineNumber":118,"author":{"gitId":"deyixtan"},"content":"                break;"},{"lineNumber":119,"author":{"gitId":"deyixtan"},"content":"            default:"},{"lineNumber":120,"author":{"gitId":"deyixtan"},"content":"                throw new DukeException(\"Invalid task type.\");"},{"lineNumber":121,"author":{"gitId":"deyixtan"},"content":"            }"},{"lineNumber":122,"author":{"gitId":"deyixtan"},"content":"        } catch (DateTimeParseException e) {"},{"lineNumber":123,"author":{"gitId":"deyixtan"},"content":"            throw new DukeException(\"Please specify a proper date... (Format: YYYY-MM-DD)\");"},{"lineNumber":124,"author":{"gitId":"deyixtan"},"content":"        }"},{"lineNumber":125,"author":{"gitId":"deyixtan"},"content":"        return \"Got it, I have added the task \u0027\" + args[0] + \"\u0027 to your collection.\";"},{"lineNumber":126,"author":{"gitId":"deyixtan"},"content":"    }"},{"lineNumber":127,"author":{"gitId":"deyixtan"},"content":""},{"lineNumber":128,"author":{"gitId":"deyixtan"},"content":"    /**"},{"lineNumber":129,"author":{"gitId":"deyixtan"},"content":"     * Marks specified task from the task list as done."},{"lineNumber":130,"author":{"gitId":"deyixtan"},"content":"     *"},{"lineNumber":131,"author":{"gitId":"deyixtan"},"content":"     * @param index Index of the task from the task list."},{"lineNumber":132,"author":{"gitId":"deyixtan"},"content":"     * @return Successful result of the operation."},{"lineNumber":133,"author":{"gitId":"deyixtan"},"content":"     * @throws DukeException If invalid index specified."},{"lineNumber":134,"author":{"gitId":"deyixtan"},"content":"     */"},{"lineNumber":135,"author":{"gitId":"deyixtan"},"content":"    public String markDone(String index) throws DukeException {"},{"lineNumber":136,"author":{"gitId":"deyixtan"},"content":"        try {"},{"lineNumber":137,"author":{"gitId":"deyixtan"},"content":"            int itemIdx \u003d Integer.parseInt(index.split(\" \")[0]) - 1;"},{"lineNumber":138,"author":{"gitId":"deyixtan"},"content":"            boolean status \u003d this.collection.get(itemIdx).markAsDone();"},{"lineNumber":139,"author":{"gitId":"deyixtan"},"content":"            if (!status) {"},{"lineNumber":140,"author":{"gitId":"deyixtan"},"content":"                throw new IllegalArgumentException();"},{"lineNumber":141,"author":{"gitId":"deyixtan"},"content":"            }"},{"lineNumber":142,"author":{"gitId":"deyixtan"},"content":"            return \"Task \u0027\" + this.collection.get(itemIdx).getDescription() + \"\u0027 is marked as done.\";"},{"lineNumber":143,"author":{"gitId":"deyixtan"},"content":"        } catch (NumberFormatException e) {"},{"lineNumber":144,"author":{"gitId":"deyixtan"},"content":"            throw new DukeException(\"I need a task number...\");"},{"lineNumber":145,"author":{"gitId":"deyixtan"},"content":"        } catch (IndexOutOfBoundsException e) {"},{"lineNumber":146,"author":{"gitId":"deyixtan"},"content":"            throw new DukeException(\"I don\u0027t think there is such a task...\");"},{"lineNumber":147,"author":{"gitId":"deyixtan"},"content":"        } catch (IllegalArgumentException e) {"},{"lineNumber":148,"author":{"gitId":"deyixtan"},"content":"            throw new DukeException(\"Task had already been marked as done...\");"},{"lineNumber":149,"author":{"gitId":"deyixtan"},"content":"        }"},{"lineNumber":150,"author":{"gitId":"deyixtan"},"content":"    }"},{"lineNumber":151,"author":{"gitId":"deyixtan"},"content":""},{"lineNumber":152,"author":{"gitId":"deyixtan"},"content":"    /**"},{"lineNumber":153,"author":{"gitId":"deyixtan"},"content":"     * Deletes specified task from the task list"},{"lineNumber":154,"author":{"gitId":"deyixtan"},"content":"     *"},{"lineNumber":155,"author":{"gitId":"deyixtan"},"content":"     * @param index Index of the task from the task list."},{"lineNumber":156,"author":{"gitId":"deyixtan"},"content":"     * @return Successful result of the operation."},{"lineNumber":157,"author":{"gitId":"deyixtan"},"content":"     * @throws DukeException If invalid index specified."},{"lineNumber":158,"author":{"gitId":"deyixtan"},"content":"     */"},{"lineNumber":159,"author":{"gitId":"deyixtan"},"content":"    public String deleteTask(String index) throws DukeException {"},{"lineNumber":160,"author":{"gitId":"deyixtan"},"content":"        try {"},{"lineNumber":161,"author":{"gitId":"deyixtan"},"content":"            int itemIdx \u003d Integer.parseInt(index.split(\" \")[0]) - 1;"},{"lineNumber":162,"author":{"gitId":"deyixtan"},"content":"            Task task \u003d this.collection.remove(itemIdx);"},{"lineNumber":163,"author":{"gitId":"deyixtan"},"content":"            return \"Task \u0027\" + task.getDescription() + \"\u0027 has been deleted.\";"},{"lineNumber":164,"author":{"gitId":"deyixtan"},"content":"        } catch (NumberFormatException e) {"},{"lineNumber":165,"author":{"gitId":"deyixtan"},"content":"            throw new DukeException(\"I need a task number...\");"},{"lineNumber":166,"author":{"gitId":"deyixtan"},"content":"        } catch (IndexOutOfBoundsException e) {"},{"lineNumber":167,"author":{"gitId":"deyixtan"},"content":"            throw new DukeException(\"I don\u0027t think there is such a task...\");"},{"lineNumber":168,"author":{"gitId":"deyixtan"},"content":"        }"},{"lineNumber":169,"author":{"gitId":"deyixtan"},"content":"    }"},{"lineNumber":170,"author":{"gitId":"deyixtan"},"content":"}"}],"authorContributionMap":{"deyixtan":170}},{"path":"src/main/java/duke/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"deyixtan"},"content":"package duke;"},{"lineNumber":2,"author":{"gitId":"deyixtan"},"content":""},{"lineNumber":3,"author":{"gitId":"deyixtan"},"content":"import java.util.Scanner;"},{"lineNumber":4,"author":{"gitId":"deyixtan"},"content":""},{"lineNumber":5,"author":{"gitId":"deyixtan"},"content":"/**"},{"lineNumber":6,"author":{"gitId":"deyixtan"},"content":" * Represents the UI of the Duke chat bot."},{"lineNumber":7,"author":{"gitId":"deyixtan"},"content":" * It manages all the IO operations."},{"lineNumber":8,"author":{"gitId":"deyixtan"},"content":" */"},{"lineNumber":9,"author":{"gitId":"deyixtan"},"content":"public class Ui {"},{"lineNumber":10,"author":{"gitId":"deyixtan"},"content":""},{"lineNumber":11,"author":{"gitId":"deyixtan"},"content":"    protected Scanner sc;"},{"lineNumber":12,"author":{"gitId":"deyixtan"},"content":""},{"lineNumber":13,"author":{"gitId":"deyixtan"},"content":"    /**"},{"lineNumber":14,"author":{"gitId":"deyixtan"},"content":"     * Initialises the IO objects used by the class."},{"lineNumber":15,"author":{"gitId":"deyixtan"},"content":"     */"},{"lineNumber":16,"author":{"gitId":"deyixtan"},"content":"    public Ui() {"},{"lineNumber":17,"author":{"gitId":"deyixtan"},"content":"        sc \u003d new Scanner(System.in);"},{"lineNumber":18,"author":{"gitId":"deyixtan"},"content":"    }"},{"lineNumber":19,"author":{"gitId":"deyixtan"},"content":""},{"lineNumber":20,"author":{"gitId":"deyixtan"},"content":"    /**"},{"lineNumber":21,"author":{"gitId":"deyixtan"},"content":"     * Prints the usage menu."},{"lineNumber":22,"author":{"gitId":"deyixtan"},"content":"     */"},{"lineNumber":23,"author":{"gitId":"deyixtan"},"content":"    public String showUsage() {"},{"lineNumber":24,"author":{"gitId":"deyixtan"},"content":"        String output \u003d \"Hey! These are the commands available:\";"},{"lineNumber":25,"author":{"gitId":"deyixtan"},"content":"        output +\u003d \"\\t- usage\";"},{"lineNumber":26,"author":{"gitId":"deyixtan"},"content":"        output +\u003d \"\\t- list\";"},{"lineNumber":27,"author":{"gitId":"deyixtan"},"content":"        output +\u003d \"\\t- todo \u003ctask_description\u003e\";"},{"lineNumber":28,"author":{"gitId":"deyixtan"},"content":"        output +\u003d \"\\t- deadline \u003ctask_description\u003e /by \u003cdate_time\u003e\";"},{"lineNumber":29,"author":{"gitId":"deyixtan"},"content":"        output +\u003d \"\\t- event \u003ctask_description\u003e /at \u003cdate_time\u003e\";"},{"lineNumber":30,"author":{"gitId":"deyixtan"},"content":"        output +\u003d \"\\t- done \u003ctask_number\u003e\";"},{"lineNumber":31,"author":{"gitId":"deyixtan"},"content":"        output +\u003d \"\\t- delete \u003ctask_number\u003e\";"},{"lineNumber":32,"author":{"gitId":"deyixtan"},"content":"        output +\u003d \"\\t- save\";"},{"lineNumber":33,"author":{"gitId":"deyixtan"},"content":"        output +\u003d \"\\t- bye\";"},{"lineNumber":34,"author":{"gitId":"deyixtan"},"content":"        return output;"},{"lineNumber":35,"author":{"gitId":"deyixtan"},"content":"    }"},{"lineNumber":36,"author":{"gitId":"deyixtan"},"content":""},{"lineNumber":37,"author":{"gitId":"deyixtan"},"content":"    /**"},{"lineNumber":38,"author":{"gitId":"deyixtan"},"content":"     * Prints the greetings."},{"lineNumber":39,"author":{"gitId":"deyixtan"},"content":"     */"},{"lineNumber":40,"author":{"gitId":"deyixtan"},"content":"    public String showGreetings() {"},{"lineNumber":41,"author":{"gitId":"deyixtan"},"content":"        String output \u003d \"Hey, hello there! I\u0027m Duke, your personal chat bot.\";"},{"lineNumber":42,"author":{"gitId":"deyixtan"},"content":"        output +\u003d \"To know more about what I can do, type \u0027usage\u0027.\";"},{"lineNumber":43,"author":{"gitId":"deyixtan"},"content":"        output +\u003d \"So... Is there anything I can do for you today?\";"},{"lineNumber":44,"author":{"gitId":"deyixtan"},"content":"        return output;"},{"lineNumber":45,"author":{"gitId":"deyixtan"},"content":"    }"},{"lineNumber":46,"author":{"gitId":"deyixtan"},"content":""},{"lineNumber":47,"author":{"gitId":"deyixtan"},"content":"    /**"},{"lineNumber":48,"author":{"gitId":"deyixtan"},"content":"     * Prints the file load error message."},{"lineNumber":49,"author":{"gitId":"deyixtan"},"content":"     */"},{"lineNumber":50,"author":{"gitId":"deyixtan"},"content":"    public String showLoadingError() {"},{"lineNumber":51,"author":{"gitId":"deyixtan"},"content":"        return this.say(\"Unable to load file.\");"},{"lineNumber":52,"author":{"gitId":"deyixtan"},"content":"    }"},{"lineNumber":53,"author":{"gitId":"deyixtan"},"content":""},{"lineNumber":54,"author":{"gitId":"deyixtan"},"content":"    /**"},{"lineNumber":55,"author":{"gitId":"deyixtan"},"content":"     * Prints specified error message."},{"lineNumber":56,"author":{"gitId":"deyixtan"},"content":"     * Typically messages sent from DukeExceptions."},{"lineNumber":57,"author":{"gitId":"deyixtan"},"content":"     *"},{"lineNumber":58,"author":{"gitId":"deyixtan"},"content":"     * @param message Error message."},{"lineNumber":59,"author":{"gitId":"deyixtan"},"content":"     */"},{"lineNumber":60,"author":{"gitId":"deyixtan"},"content":"    public String showError(String message) {"},{"lineNumber":61,"author":{"gitId":"deyixtan"},"content":"        return this.say(message);"},{"lineNumber":62,"author":{"gitId":"deyixtan"},"content":"    }"},{"lineNumber":63,"author":{"gitId":"deyixtan"},"content":""},{"lineNumber":64,"author":{"gitId":"deyixtan"},"content":"    /**"},{"lineNumber":65,"author":{"gitId":"deyixtan"},"content":"     * Formats and prints output messages in a"},{"lineNumber":66,"author":{"gitId":"deyixtan"},"content":"     * more personalised manner and"},{"lineNumber":67,"author":{"gitId":"deyixtan"},"content":"     * \u0027chat bot\u0027-like manner."},{"lineNumber":68,"author":{"gitId":"deyixtan"},"content":"     *"},{"lineNumber":69,"author":{"gitId":"deyixtan"},"content":"     * @param message Message to be formatted and displayed."},{"lineNumber":70,"author":{"gitId":"deyixtan"},"content":"     */"},{"lineNumber":71,"author":{"gitId":"deyixtan"},"content":"    public String say(String message) {"},{"lineNumber":72,"author":{"gitId":"deyixtan"},"content":"        return message;"},{"lineNumber":73,"author":{"gitId":"deyixtan"},"content":"    }"},{"lineNumber":74,"author":{"gitId":"deyixtan"},"content":"}"}],"authorContributionMap":{"deyixtan":74}},{"path":"src/main/java/duke/command/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"deyixtan"},"content":"package duke.command;"},{"lineNumber":2,"author":{"gitId":"deyixtan"},"content":""},{"lineNumber":3,"author":{"gitId":"deyixtan"},"content":"import duke.DukeException;"},{"lineNumber":4,"author":{"gitId":"deyixtan"},"content":"import duke.Storage;"},{"lineNumber":5,"author":{"gitId":"deyixtan"},"content":"import duke.TaskList;"},{"lineNumber":6,"author":{"gitId":"deyixtan"},"content":"import duke.Ui;"},{"lineNumber":7,"author":{"gitId":"deyixtan"},"content":""},{"lineNumber":8,"author":{"gitId":"deyixtan"},"content":"/**"},{"lineNumber":9,"author":{"gitId":"deyixtan"},"content":" * Represents a command used by the Duke chat bot."},{"lineNumber":10,"author":{"gitId":"deyixtan"},"content":" * It is represented by a command type, followed by"},{"lineNumber":11,"author":{"gitId":"deyixtan"},"content":" * a series of arguments."},{"lineNumber":12,"author":{"gitId":"deyixtan"},"content":" */"},{"lineNumber":13,"author":{"gitId":"deyixtan"},"content":"public class Command {"},{"lineNumber":14,"author":{"gitId":"deyixtan"},"content":""},{"lineNumber":15,"author":{"gitId":"deyixtan"},"content":"    protected String commandType;"},{"lineNumber":16,"author":{"gitId":"deyixtan"},"content":"    protected String[] commandArgs;"},{"lineNumber":17,"author":{"gitId":"deyixtan"},"content":"    protected boolean toExit;"},{"lineNumber":18,"author":{"gitId":"deyixtan"},"content":""},{"lineNumber":19,"author":{"gitId":"deyixtan"},"content":"    public enum CommandsEnum {"},{"lineNumber":20,"author":{"gitId":"deyixtan"},"content":"        USAGE, LIST, FIND,"},{"lineNumber":21,"author":{"gitId":"deyixtan"},"content":"        TODO, DEADLINE, EVENT,"},{"lineNumber":22,"author":{"gitId":"deyixtan"},"content":"        DONE, DELETE, SAVE, BYE"},{"lineNumber":23,"author":{"gitId":"deyixtan"},"content":"    }"},{"lineNumber":24,"author":{"gitId":"deyixtan"},"content":""},{"lineNumber":25,"author":{"gitId":"deyixtan"},"content":"    /**"},{"lineNumber":26,"author":{"gitId":"deyixtan"},"content":"     * Initialises the command by specifying"},{"lineNumber":27,"author":{"gitId":"deyixtan"},"content":"     * its type and their corresponding arguments."},{"lineNumber":28,"author":{"gitId":"deyixtan"},"content":"     *"},{"lineNumber":29,"author":{"gitId":"deyixtan"},"content":"     * @param commandType Command type."},{"lineNumber":30,"author":{"gitId":"deyixtan"},"content":"     * @param commandArgs Command arguments."},{"lineNumber":31,"author":{"gitId":"deyixtan"},"content":"     */"},{"lineNumber":32,"author":{"gitId":"deyixtan"},"content":"    public Command(String commandType, String[] commandArgs) {"},{"lineNumber":33,"author":{"gitId":"deyixtan"},"content":"        this.commandType \u003d commandType;"},{"lineNumber":34,"author":{"gitId":"deyixtan"},"content":"        this.commandArgs \u003d commandArgs;"},{"lineNumber":35,"author":{"gitId":"deyixtan"},"content":"        this.toExit \u003d false;"},{"lineNumber":36,"author":{"gitId":"deyixtan"},"content":"    }"},{"lineNumber":37,"author":{"gitId":"deyixtan"},"content":""},{"lineNumber":38,"author":{"gitId":"deyixtan"},"content":"    /**"},{"lineNumber":39,"author":{"gitId":"deyixtan"},"content":"     * Executes the command."},{"lineNumber":40,"author":{"gitId":"deyixtan"},"content":"     * Requires the core functions of the"},{"lineNumber":41,"author":{"gitId":"deyixtan"},"content":"     * Duke chat bot to be supplied as arguments."},{"lineNumber":42,"author":{"gitId":"deyixtan"},"content":"     *"},{"lineNumber":43,"author":{"gitId":"deyixtan"},"content":"     * @param tasks Core TaskList object."},{"lineNumber":44,"author":{"gitId":"deyixtan"},"content":"     * @param ui Core Ui object."},{"lineNumber":45,"author":{"gitId":"deyixtan"},"content":"     * @param storage Core Storage object."},{"lineNumber":46,"author":{"gitId":"deyixtan"},"content":"     * @throws DukeException If unknown command was specified"},{"lineNumber":47,"author":{"gitId":"deyixtan"},"content":"     */"},{"lineNumber":48,"author":{"gitId":"deyixtan"},"content":"    public String execute(TaskList tasks, Ui ui, Storage storage) throws DukeException {"},{"lineNumber":49,"author":{"gitId":"deyixtan"},"content":"        try {"},{"lineNumber":50,"author":{"gitId":"deyixtan"},"content":"            CommandsEnum ce \u003d CommandsEnum.valueOf(this.commandType.toUpperCase());"},{"lineNumber":51,"author":{"gitId":"deyixtan"},"content":"            switch (ce) {"},{"lineNumber":52,"author":{"gitId":"deyixtan"},"content":"            case USAGE:"},{"lineNumber":53,"author":{"gitId":"deyixtan"},"content":"                return ui.showUsage();"},{"lineNumber":54,"author":{"gitId":"deyixtan"},"content":"            case LIST:"},{"lineNumber":55,"author":{"gitId":"deyixtan"},"content":"                return this.listCommand(tasks, ui);"},{"lineNumber":56,"author":{"gitId":"deyixtan"},"content":"            case FIND:"},{"lineNumber":57,"author":{"gitId":"deyixtan"},"content":"                return this.findTasks(tasks, ui);"},{"lineNumber":58,"author":{"gitId":"deyixtan"},"content":"            case TODO:"},{"lineNumber":59,"author":{"gitId":"deyixtan"},"content":"            case DEADLINE:"},{"lineNumber":60,"author":{"gitId":"deyixtan"},"content":"            case EVENT:"},{"lineNumber":61,"author":{"gitId":"deyixtan"},"content":"                return this.addTask(tasks, ui);"},{"lineNumber":62,"author":{"gitId":"deyixtan"},"content":"            case DONE:"},{"lineNumber":63,"author":{"gitId":"deyixtan"},"content":"                return this.markDone(tasks, ui);"},{"lineNumber":64,"author":{"gitId":"deyixtan"},"content":"            case DELETE:"},{"lineNumber":65,"author":{"gitId":"deyixtan"},"content":"                return this.deleteTask(tasks, ui);"},{"lineNumber":66,"author":{"gitId":"deyixtan"},"content":"            case SAVE:"},{"lineNumber":67,"author":{"gitId":"deyixtan"},"content":"                return this.saveTasks(tasks, ui, storage);"},{"lineNumber":68,"author":{"gitId":"deyixtan"},"content":"            default:"},{"lineNumber":69,"author":{"gitId":"deyixtan"},"content":"                throw new DukeException(\"I\u0027m not trained with these commands yet...\");"},{"lineNumber":70,"author":{"gitId":"deyixtan"},"content":"            }"},{"lineNumber":71,"author":{"gitId":"deyixtan"},"content":"        } catch (IllegalArgumentException e) {"},{"lineNumber":72,"author":{"gitId":"deyixtan"},"content":"            throw new DukeException(\"I\u0027m not trained with these commands yet...\");"},{"lineNumber":73,"author":{"gitId":"deyixtan"},"content":"        }"},{"lineNumber":74,"author":{"gitId":"deyixtan"},"content":"    }"},{"lineNumber":75,"author":{"gitId":"deyixtan"},"content":""},{"lineNumber":76,"author":{"gitId":"deyixtan"},"content":"    /**"},{"lineNumber":77,"author":{"gitId":"deyixtan"},"content":"     * Lists all the tasks information currently"},{"lineNumber":78,"author":{"gitId":"deyixtan"},"content":"     * handled by the Duke chat box."},{"lineNumber":79,"author":{"gitId":"deyixtan"},"content":"     *"},{"lineNumber":80,"author":{"gitId":"deyixtan"},"content":"     * @param tasks Core TaskList object."},{"lineNumber":81,"author":{"gitId":"deyixtan"},"content":"     * @param ui Core Ui object."},{"lineNumber":82,"author":{"gitId":"deyixtan"},"content":"     */"},{"lineNumber":83,"author":{"gitId":"deyixtan"},"content":"    public String listCommand(TaskList tasks, Ui ui) {"},{"lineNumber":84,"author":{"gitId":"deyixtan"},"content":"        return ui.say(tasks.showList());"},{"lineNumber":85,"author":{"gitId":"deyixtan"},"content":"    }"},{"lineNumber":86,"author":{"gitId":"deyixtan"},"content":""},{"lineNumber":87,"author":{"gitId":"deyixtan"},"content":"    /**"},{"lineNumber":88,"author":{"gitId":"deyixtan"},"content":"     * Filters the task list to find tasks"},{"lineNumber":89,"author":{"gitId":"deyixtan"},"content":"     * that matches a certain keyword."},{"lineNumber":90,"author":{"gitId":"deyixtan"},"content":"     *"},{"lineNumber":91,"author":{"gitId":"deyixtan"},"content":"     * @param tasks Core TaskList object."},{"lineNumber":92,"author":{"gitId":"deyixtan"},"content":"     * @param ui Core Ui object."},{"lineNumber":93,"author":{"gitId":"deyixtan"},"content":"     */"},{"lineNumber":94,"author":{"gitId":"deyixtan"},"content":"    public String findTasks(TaskList tasks, Ui ui) {"},{"lineNumber":95,"author":{"gitId":"deyixtan"},"content":"        return ui.say(tasks.findTasks(this.commandArgs[0]));"},{"lineNumber":96,"author":{"gitId":"deyixtan"},"content":"    }"},{"lineNumber":97,"author":{"gitId":"deyixtan"},"content":""},{"lineNumber":98,"author":{"gitId":"deyixtan"},"content":"    /**"},{"lineNumber":99,"author":{"gitId":"deyixtan"},"content":"     * Adds task into the task list."},{"lineNumber":100,"author":{"gitId":"deyixtan"},"content":"     *"},{"lineNumber":101,"author":{"gitId":"deyixtan"},"content":"     * @param tasks Core TaskList object."},{"lineNumber":102,"author":{"gitId":"deyixtan"},"content":"     * @param ui Core Ui object."},{"lineNumber":103,"author":{"gitId":"deyixtan"},"content":"     * @throws DukeException  If invalid task type or arguments specified."},{"lineNumber":104,"author":{"gitId":"deyixtan"},"content":"     */"},{"lineNumber":105,"author":{"gitId":"deyixtan"},"content":"    public String addTask(TaskList tasks, Ui ui) throws DukeException {"},{"lineNumber":106,"author":{"gitId":"deyixtan"},"content":"        return ui.say(tasks.addTask(this.commandType, this.commandArgs));"},{"lineNumber":107,"author":{"gitId":"deyixtan"},"content":"    }"},{"lineNumber":108,"author":{"gitId":"deyixtan"},"content":""},{"lineNumber":109,"author":{"gitId":"deyixtan"},"content":"    /**"},{"lineNumber":110,"author":{"gitId":"deyixtan"},"content":"     * Marks specific task from the task list as done."},{"lineNumber":111,"author":{"gitId":"deyixtan"},"content":"     *"},{"lineNumber":112,"author":{"gitId":"deyixtan"},"content":"     * @param tasks Core TaskList object."},{"lineNumber":113,"author":{"gitId":"deyixtan"},"content":"     * @param ui Core Ui object."},{"lineNumber":114,"author":{"gitId":"deyixtan"},"content":"     * @throws DukeException If invalid index specified."},{"lineNumber":115,"author":{"gitId":"deyixtan"},"content":"     */"},{"lineNumber":116,"author":{"gitId":"deyixtan"},"content":"    public String markDone(TaskList tasks, Ui ui) throws DukeException {"},{"lineNumber":117,"author":{"gitId":"deyixtan"},"content":"        return ui.say(tasks.markDone(this.commandArgs[0]));"},{"lineNumber":118,"author":{"gitId":"deyixtan"},"content":"    }"},{"lineNumber":119,"author":{"gitId":"deyixtan"},"content":""},{"lineNumber":120,"author":{"gitId":"deyixtan"},"content":"    /**"},{"lineNumber":121,"author":{"gitId":"deyixtan"},"content":"     * Deletes specific task from the task list."},{"lineNumber":122,"author":{"gitId":"deyixtan"},"content":"     *"},{"lineNumber":123,"author":{"gitId":"deyixtan"},"content":"     * @param tasks Core TaskList object."},{"lineNumber":124,"author":{"gitId":"deyixtan"},"content":"     * @param ui Core Ui object."},{"lineNumber":125,"author":{"gitId":"deyixtan"},"content":"     * @throws DukeException If invalid index specified."},{"lineNumber":126,"author":{"gitId":"deyixtan"},"content":"     */"},{"lineNumber":127,"author":{"gitId":"deyixtan"},"content":"    public String deleteTask(TaskList tasks, Ui ui) throws DukeException {"},{"lineNumber":128,"author":{"gitId":"deyixtan"},"content":"        return ui.say(tasks.deleteTask(this.commandArgs[0]));"},{"lineNumber":129,"author":{"gitId":"deyixtan"},"content":"    }"},{"lineNumber":130,"author":{"gitId":"deyixtan"},"content":""},{"lineNumber":131,"author":{"gitId":"deyixtan"},"content":"    /**"},{"lineNumber":132,"author":{"gitId":"deyixtan"},"content":"     * Saves tasks from the task list into the disk."},{"lineNumber":133,"author":{"gitId":"deyixtan"},"content":"     *"},{"lineNumber":134,"author":{"gitId":"deyixtan"},"content":"     * @param tasks Core TaskList object."},{"lineNumber":135,"author":{"gitId":"deyixtan"},"content":"     * @param ui Core Ui object."},{"lineNumber":136,"author":{"gitId":"deyixtan"},"content":"     * @param storage Core Storage object."},{"lineNumber":137,"author":{"gitId":"deyixtan"},"content":"     * @throws DukeException If the file cannot be found."},{"lineNumber":138,"author":{"gitId":"deyixtan"},"content":"     */"},{"lineNumber":139,"author":{"gitId":"deyixtan"},"content":"    public String saveTasks(TaskList tasks, Ui ui, Storage storage) throws DukeException {"},{"lineNumber":140,"author":{"gitId":"deyixtan"},"content":"        return ui.say(storage.save(tasks.getList()));"},{"lineNumber":141,"author":{"gitId":"deyixtan"},"content":"    }"},{"lineNumber":142,"author":{"gitId":"deyixtan"},"content":""},{"lineNumber":143,"author":{"gitId":"deyixtan"},"content":"    /**"},{"lineNumber":144,"author":{"gitId":"deyixtan"},"content":"     * Checks if chat bot is required to exit."},{"lineNumber":145,"author":{"gitId":"deyixtan"},"content":"     *"},{"lineNumber":146,"author":{"gitId":"deyixtan"},"content":"     * @return Exit status."},{"lineNumber":147,"author":{"gitId":"deyixtan"},"content":"     */"},{"lineNumber":148,"author":{"gitId":"deyixtan"},"content":"    public boolean isExit() {"},{"lineNumber":149,"author":{"gitId":"deyixtan"},"content":"        return toExit;"},{"lineNumber":150,"author":{"gitId":"deyixtan"},"content":"    }"},{"lineNumber":151,"author":{"gitId":"deyixtan"},"content":"}"}],"authorContributionMap":{"deyixtan":151}},{"path":"src/main/java/duke/task/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"deyixtan"},"content":"package duke.task;"},{"lineNumber":2,"author":{"gitId":"deyixtan"},"content":""},{"lineNumber":3,"author":{"gitId":"deyixtan"},"content":"import java.time.LocalDate;"},{"lineNumber":4,"author":{"gitId":"deyixtan"},"content":"import java.time.format.DateTimeFormatter;"},{"lineNumber":5,"author":{"gitId":"deyixtan"},"content":""},{"lineNumber":6,"author":{"gitId":"deyixtan"},"content":"/**"},{"lineNumber":7,"author":{"gitId":"deyixtan"},"content":" * Represents a deadline task."},{"lineNumber":8,"author":{"gitId":"deyixtan"},"content":" */"},{"lineNumber":9,"author":{"gitId":"deyixtan"},"content":"public class Deadline extends Task {"},{"lineNumber":10,"author":{"gitId":"deyixtan"},"content":""},{"lineNumber":11,"author":{"gitId":"deyixtan"},"content":"    protected LocalDate by;"},{"lineNumber":12,"author":{"gitId":"deyixtan"},"content":""},{"lineNumber":13,"author":{"gitId":"deyixtan"},"content":"    /**"},{"lineNumber":14,"author":{"gitId":"deyixtan"},"content":"     * Initialises the task with a description and"},{"lineNumber":15,"author":{"gitId":"deyixtan"},"content":"     * a deadline represented by a date."},{"lineNumber":16,"author":{"gitId":"deyixtan"},"content":"     *"},{"lineNumber":17,"author":{"gitId":"deyixtan"},"content":"     * @param description Description of the task."},{"lineNumber":18,"author":{"gitId":"deyixtan"},"content":"     * @param by Task deadline."},{"lineNumber":19,"author":{"gitId":"deyixtan"},"content":"     */"},{"lineNumber":20,"author":{"gitId":"deyixtan"},"content":"    public Deadline(String description, LocalDate by) {"},{"lineNumber":21,"author":{"gitId":"deyixtan"},"content":"        super(description);"},{"lineNumber":22,"author":{"gitId":"deyixtan"},"content":"        this.by \u003d by;"},{"lineNumber":23,"author":{"gitId":"deyixtan"},"content":"    }"},{"lineNumber":24,"author":{"gitId":"deyixtan"},"content":""},{"lineNumber":25,"author":{"gitId":"deyixtan"},"content":"    /**"},{"lineNumber":26,"author":{"gitId":"deyixtan"},"content":"     * Retrieves the deadline of the task."},{"lineNumber":27,"author":{"gitId":"deyixtan"},"content":"     *"},{"lineNumber":28,"author":{"gitId":"deyixtan"},"content":"     * @return Task deadline."},{"lineNumber":29,"author":{"gitId":"deyixtan"},"content":"     */"},{"lineNumber":30,"author":{"gitId":"deyixtan"},"content":"    public LocalDate getBy() {"},{"lineNumber":31,"author":{"gitId":"deyixtan"},"content":"        return this.by;"},{"lineNumber":32,"author":{"gitId":"deyixtan"},"content":"    }"},{"lineNumber":33,"author":{"gitId":"deyixtan"},"content":""},{"lineNumber":34,"author":{"gitId":"deyixtan"},"content":"    /**"},{"lineNumber":35,"author":{"gitId":"deyixtan"},"content":"     * Formats the task string representation."},{"lineNumber":36,"author":{"gitId":"deyixtan"},"content":"     *"},{"lineNumber":37,"author":{"gitId":"deyixtan"},"content":"     * @return Formatted string."},{"lineNumber":38,"author":{"gitId":"deyixtan"},"content":"     */"},{"lineNumber":39,"author":{"gitId":"deyixtan"},"content":"    @Override"},{"lineNumber":40,"author":{"gitId":"deyixtan"},"content":"    public String toString() {"},{"lineNumber":41,"author":{"gitId":"deyixtan"},"content":"        return String.format(\"[D]%s (by: %s)\", super.toString(),"},{"lineNumber":42,"author":{"gitId":"deyixtan"},"content":"                this.by.format(DateTimeFormatter.ofPattern(\"MMM dd yyyy\")));"},{"lineNumber":43,"author":{"gitId":"deyixtan"},"content":"    }"},{"lineNumber":44,"author":{"gitId":"deyixtan"},"content":"}"}],"authorContributionMap":{"deyixtan":44}},{"path":"src/main/java/duke/task/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"deyixtan"},"content":"package duke.task;"},{"lineNumber":2,"author":{"gitId":"deyixtan"},"content":""},{"lineNumber":3,"author":{"gitId":"deyixtan"},"content":"import java.time.LocalDate;"},{"lineNumber":4,"author":{"gitId":"deyixtan"},"content":"import java.time.format.DateTimeFormatter;"},{"lineNumber":5,"author":{"gitId":"deyixtan"},"content":""},{"lineNumber":6,"author":{"gitId":"deyixtan"},"content":"/**"},{"lineNumber":7,"author":{"gitId":"deyixtan"},"content":" * Represents a event task."},{"lineNumber":8,"author":{"gitId":"deyixtan"},"content":" */"},{"lineNumber":9,"author":{"gitId":"deyixtan"},"content":"public class Event extends Task {"},{"lineNumber":10,"author":{"gitId":"deyixtan"},"content":""},{"lineNumber":11,"author":{"gitId":"deyixtan"},"content":"    protected LocalDate at;"},{"lineNumber":12,"author":{"gitId":"deyixtan"},"content":""},{"lineNumber":13,"author":{"gitId":"deyixtan"},"content":"    /**"},{"lineNumber":14,"author":{"gitId":"deyixtan"},"content":"     * Initialises the task with a description and"},{"lineNumber":15,"author":{"gitId":"deyixtan"},"content":"     * a duration represented by a date."},{"lineNumber":16,"author":{"gitId":"deyixtan"},"content":"     *"},{"lineNumber":17,"author":{"gitId":"deyixtan"},"content":"     * @param description Description of the task."},{"lineNumber":18,"author":{"gitId":"deyixtan"},"content":"     * @param at Task duration."},{"lineNumber":19,"author":{"gitId":"deyixtan"},"content":"     */"},{"lineNumber":20,"author":{"gitId":"deyixtan"},"content":"    public Event(String description, LocalDate at) {"},{"lineNumber":21,"author":{"gitId":"deyixtan"},"content":"        super(description);"},{"lineNumber":22,"author":{"gitId":"deyixtan"},"content":"        this.at \u003d at;"},{"lineNumber":23,"author":{"gitId":"deyixtan"},"content":"    }"},{"lineNumber":24,"author":{"gitId":"deyixtan"},"content":""},{"lineNumber":25,"author":{"gitId":"deyixtan"},"content":"    /**"},{"lineNumber":26,"author":{"gitId":"deyixtan"},"content":"     * Retrieves the duration of the task."},{"lineNumber":27,"author":{"gitId":"deyixtan"},"content":"     *"},{"lineNumber":28,"author":{"gitId":"deyixtan"},"content":"     * @return Task duration."},{"lineNumber":29,"author":{"gitId":"deyixtan"},"content":"     */"},{"lineNumber":30,"author":{"gitId":"deyixtan"},"content":"    public LocalDate getAt() {"},{"lineNumber":31,"author":{"gitId":"deyixtan"},"content":"        return this.at;"},{"lineNumber":32,"author":{"gitId":"deyixtan"},"content":"    }"},{"lineNumber":33,"author":{"gitId":"deyixtan"},"content":""},{"lineNumber":34,"author":{"gitId":"deyixtan"},"content":"    /**"},{"lineNumber":35,"author":{"gitId":"deyixtan"},"content":"     * Formats the task string representation."},{"lineNumber":36,"author":{"gitId":"deyixtan"},"content":"     *"},{"lineNumber":37,"author":{"gitId":"deyixtan"},"content":"     * @return Formatted string."},{"lineNumber":38,"author":{"gitId":"deyixtan"},"content":"     */"},{"lineNumber":39,"author":{"gitId":"deyixtan"},"content":"    @Override"},{"lineNumber":40,"author":{"gitId":"deyixtan"},"content":"    public String toString() {"},{"lineNumber":41,"author":{"gitId":"deyixtan"},"content":"        return String.format(\"[E]%s (at: %s)\", super.toString(),"},{"lineNumber":42,"author":{"gitId":"deyixtan"},"content":"                this.at.format(DateTimeFormatter.ofPattern(\"MMM dd yyyy\")));"},{"lineNumber":43,"author":{"gitId":"deyixtan"},"content":"    }"},{"lineNumber":44,"author":{"gitId":"deyixtan"},"content":"}"}],"authorContributionMap":{"deyixtan":44}},{"path":"src/main/java/duke/task/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"deyixtan"},"content":"package duke.task;"},{"lineNumber":2,"author":{"gitId":"deyixtan"},"content":""},{"lineNumber":3,"author":{"gitId":"deyixtan"},"content":"/**"},{"lineNumber":4,"author":{"gitId":"deyixtan"},"content":" * Represents a task in the Duke chat bot."},{"lineNumber":5,"author":{"gitId":"deyixtan"},"content":" * Typically used as a template for"},{"lineNumber":6,"author":{"gitId":"deyixtan"},"content":" * more specific tasks to inherit."},{"lineNumber":7,"author":{"gitId":"deyixtan"},"content":" */"},{"lineNumber":8,"author":{"gitId":"deyixtan"},"content":"public class Task {"},{"lineNumber":9,"author":{"gitId":"deyixtan"},"content":""},{"lineNumber":10,"author":{"gitId":"deyixtan"},"content":"    protected String description;"},{"lineNumber":11,"author":{"gitId":"deyixtan"},"content":"    protected boolean isDone;"},{"lineNumber":12,"author":{"gitId":"deyixtan"},"content":""},{"lineNumber":13,"author":{"gitId":"deyixtan"},"content":"    /**"},{"lineNumber":14,"author":{"gitId":"deyixtan"},"content":"     * Initialises the task with a description."},{"lineNumber":15,"author":{"gitId":"deyixtan"},"content":"     *"},{"lineNumber":16,"author":{"gitId":"deyixtan"},"content":"     * @param description Description of the task."},{"lineNumber":17,"author":{"gitId":"deyixtan"},"content":"     */"},{"lineNumber":18,"author":{"gitId":"deyixtan"},"content":"    public Task(String description) {"},{"lineNumber":19,"author":{"gitId":"deyixtan"},"content":"        this.description \u003d description;"},{"lineNumber":20,"author":{"gitId":"deyixtan"},"content":"        this.isDone \u003d false;"},{"lineNumber":21,"author":{"gitId":"deyixtan"},"content":"    }"},{"lineNumber":22,"author":{"gitId":"deyixtan"},"content":""},{"lineNumber":23,"author":{"gitId":"deyixtan"},"content":"    /**"},{"lineNumber":24,"author":{"gitId":"deyixtan"},"content":"     * Retrieves the description of the task."},{"lineNumber":25,"author":{"gitId":"deyixtan"},"content":"     *"},{"lineNumber":26,"author":{"gitId":"deyixtan"},"content":"     * @return Task description."},{"lineNumber":27,"author":{"gitId":"deyixtan"},"content":"     */"},{"lineNumber":28,"author":{"gitId":"deyixtan"},"content":"    public String getDescription() {"},{"lineNumber":29,"author":{"gitId":"deyixtan"},"content":"        return this.description;"},{"lineNumber":30,"author":{"gitId":"deyixtan"},"content":"    }"},{"lineNumber":31,"author":{"gitId":"deyixtan"},"content":""},{"lineNumber":32,"author":{"gitId":"deyixtan"},"content":"    /**"},{"lineNumber":33,"author":{"gitId":"deyixtan"},"content":"     * Retrieves the status icon of the task."},{"lineNumber":34,"author":{"gitId":"deyixtan"},"content":"     *"},{"lineNumber":35,"author":{"gitId":"deyixtan"},"content":"     * @return Task status icon."},{"lineNumber":36,"author":{"gitId":"deyixtan"},"content":"     */"},{"lineNumber":37,"author":{"gitId":"deyixtan"},"content":"    public String getStatusIcon() {"},{"lineNumber":38,"author":{"gitId":"deyixtan"},"content":"        return (isDone ? \"*\" : \" \");"},{"lineNumber":39,"author":{"gitId":"deyixtan"},"content":"    }"},{"lineNumber":40,"author":{"gitId":"deyixtan"},"content":""},{"lineNumber":41,"author":{"gitId":"deyixtan"},"content":"    /**"},{"lineNumber":42,"author":{"gitId":"deyixtan"},"content":"     * Sets the status of the task as \u0027done\u0027."},{"lineNumber":43,"author":{"gitId":"deyixtan"},"content":"     * If the task is already marked as done,"},{"lineNumber":44,"author":{"gitId":"deyixtan"},"content":"     * no action will be taken."},{"lineNumber":45,"author":{"gitId":"deyixtan"},"content":"     *"},{"lineNumber":46,"author":{"gitId":"deyixtan"},"content":"     * @return Outcome of the action."},{"lineNumber":47,"author":{"gitId":"deyixtan"},"content":"     */"},{"lineNumber":48,"author":{"gitId":"deyixtan"},"content":"    public Boolean markAsDone() {"},{"lineNumber":49,"author":{"gitId":"deyixtan"},"content":"        if (this.isDone) {"},{"lineNumber":50,"author":{"gitId":"deyixtan"},"content":"            return false;"},{"lineNumber":51,"author":{"gitId":"deyixtan"},"content":"        }"},{"lineNumber":52,"author":{"gitId":"deyixtan"},"content":"        this.isDone \u003d true;"},{"lineNumber":53,"author":{"gitId":"deyixtan"},"content":"        return true;"},{"lineNumber":54,"author":{"gitId":"deyixtan"},"content":"    }"},{"lineNumber":55,"author":{"gitId":"deyixtan"},"content":""},{"lineNumber":56,"author":{"gitId":"deyixtan"},"content":"    /**"},{"lineNumber":57,"author":{"gitId":"deyixtan"},"content":"     * Formats the task string representation."},{"lineNumber":58,"author":{"gitId":"deyixtan"},"content":"     *"},{"lineNumber":59,"author":{"gitId":"deyixtan"},"content":"     * @return Formatted string."},{"lineNumber":60,"author":{"gitId":"deyixtan"},"content":"     */"},{"lineNumber":61,"author":{"gitId":"deyixtan"},"content":"    @Override"},{"lineNumber":62,"author":{"gitId":"deyixtan"},"content":"    public String toString() {"},{"lineNumber":63,"author":{"gitId":"deyixtan"},"content":"        return String.format(\"[%s] %s\","},{"lineNumber":64,"author":{"gitId":"deyixtan"},"content":"                this.getStatusIcon(), this.description);"},{"lineNumber":65,"author":{"gitId":"deyixtan"},"content":"    }"},{"lineNumber":66,"author":{"gitId":"deyixtan"},"content":"}"}],"authorContributionMap":{"deyixtan":66}},{"path":"src/main/java/duke/task/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"deyixtan"},"content":"package duke.task;"},{"lineNumber":2,"author":{"gitId":"deyixtan"},"content":""},{"lineNumber":3,"author":{"gitId":"deyixtan"},"content":"/**"},{"lineNumber":4,"author":{"gitId":"deyixtan"},"content":" * Represents a to-do task."},{"lineNumber":5,"author":{"gitId":"deyixtan"},"content":" */"},{"lineNumber":6,"author":{"gitId":"deyixtan"},"content":"public class Todo extends Task {"},{"lineNumber":7,"author":{"gitId":"deyixtan"},"content":""},{"lineNumber":8,"author":{"gitId":"deyixtan"},"content":"    /**"},{"lineNumber":9,"author":{"gitId":"deyixtan"},"content":"     * Initialises the task with a description."},{"lineNumber":10,"author":{"gitId":"deyixtan"},"content":"     *"},{"lineNumber":11,"author":{"gitId":"deyixtan"},"content":"     * @param description Description of the task."},{"lineNumber":12,"author":{"gitId":"deyixtan"},"content":"     */"},{"lineNumber":13,"author":{"gitId":"deyixtan"},"content":"    public Todo(String description) {"},{"lineNumber":14,"author":{"gitId":"deyixtan"},"content":"        super(description);"},{"lineNumber":15,"author":{"gitId":"deyixtan"},"content":"    }"},{"lineNumber":16,"author":{"gitId":"deyixtan"},"content":""},{"lineNumber":17,"author":{"gitId":"deyixtan"},"content":"    /**"},{"lineNumber":18,"author":{"gitId":"deyixtan"},"content":"     * Formats the task string representation."},{"lineNumber":19,"author":{"gitId":"deyixtan"},"content":"     *"},{"lineNumber":20,"author":{"gitId":"deyixtan"},"content":"     * @return Formatted string."},{"lineNumber":21,"author":{"gitId":"deyixtan"},"content":"     */"},{"lineNumber":22,"author":{"gitId":"deyixtan"},"content":"    @Override"},{"lineNumber":23,"author":{"gitId":"deyixtan"},"content":"    public String toString() {"},{"lineNumber":24,"author":{"gitId":"deyixtan"},"content":"        return String.format(\"[T]%s\", super.toString());"},{"lineNumber":25,"author":{"gitId":"deyixtan"},"content":"    }"},{"lineNumber":26,"author":{"gitId":"deyixtan"},"content":"}"}],"authorContributionMap":{"deyixtan":26}},{"path":"src/main/resources/view/DialogBox.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"deyixtan"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"},{"lineNumber":2,"author":{"gitId":"deyixtan"},"content":""},{"lineNumber":3,"author":{"gitId":"deyixtan"},"content":"\u003c?import javafx.geometry.Insets?\u003e"},{"lineNumber":4,"author":{"gitId":"deyixtan"},"content":"\u003c?import javafx.scene.control.Label?\u003e"},{"lineNumber":5,"author":{"gitId":"deyixtan"},"content":"\u003c?import javafx.scene.image.ImageView?\u003e"},{"lineNumber":6,"author":{"gitId":"deyixtan"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e"},{"lineNumber":7,"author":{"gitId":"deyixtan"},"content":""},{"lineNumber":8,"author":{"gitId":"deyixtan"},"content":"\u003cfx:root alignment\u003d\"TOP_RIGHT\" maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\" prefWidth\u003d\"400.0\" type\u003d\"javafx.scene.layout.HBox\" xmlns\u003d\"http://javafx.com/javafx/8.0.171\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e"},{"lineNumber":9,"author":{"gitId":"deyixtan"},"content":"  \u003cchildren\u003e"},{"lineNumber":10,"author":{"gitId":"deyixtan"},"content":"    \u003cLabel fx:id\u003d\"dialog\" text\u003d\"Label\" wrapText\u003d\"true\" /\u003e"},{"lineNumber":11,"author":{"gitId":"deyixtan"},"content":"    \u003cImageView fx:id\u003d\"displayPicture\" fitHeight\u003d\"99.0\" fitWidth\u003d\"99.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\" /\u003e"},{"lineNumber":12,"author":{"gitId":"deyixtan"},"content":"  \u003c/children\u003e"},{"lineNumber":13,"author":{"gitId":"deyixtan"},"content":"  \u003cpadding\u003e"},{"lineNumber":14,"author":{"gitId":"deyixtan"},"content":"    \u003cInsets bottom\u003d\"15.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"15.0\" /\u003e"},{"lineNumber":15,"author":{"gitId":"deyixtan"},"content":"  \u003c/padding\u003e"},{"lineNumber":16,"author":{"gitId":"deyixtan"},"content":"\u003c/fx:root\u003e"}],"authorContributionMap":{"deyixtan":16}},{"path":"src/main/resources/view/MainWindow.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"deyixtan"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"},{"lineNumber":2,"author":{"gitId":"deyixtan"},"content":""},{"lineNumber":3,"author":{"gitId":"deyixtan"},"content":"\u003c?import javafx.scene.control.Button?\u003e"},{"lineNumber":4,"author":{"gitId":"deyixtan"},"content":"\u003c?import javafx.scene.control.ScrollPane?\u003e"},{"lineNumber":5,"author":{"gitId":"deyixtan"},"content":"\u003c?import javafx.scene.control.TextField?\u003e"},{"lineNumber":6,"author":{"gitId":"deyixtan"},"content":"\u003c?import javafx.scene.layout.AnchorPane?\u003e"},{"lineNumber":7,"author":{"gitId":"deyixtan"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e"},{"lineNumber":8,"author":{"gitId":"deyixtan"},"content":""},{"lineNumber":9,"author":{"gitId":"deyixtan"},"content":"\u003cAnchorPane maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefHeight\u003d\"600.0\" prefWidth\u003d\"400.0\" xmlns\u003d\"http://javafx.com/javafx/8.0.171\" xmlns:fx\u003d\"http://javafx.com/fxml/1\" fx:controller\u003d\"duke.MainWindow\"\u003e"},{"lineNumber":10,"author":{"gitId":"deyixtan"},"content":"  \u003cchildren\u003e"},{"lineNumber":11,"author":{"gitId":"deyixtan"},"content":"    \u003cTextField fx:id\u003d\"userInput\" layoutY\u003d\"558.0\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"324.0\" AnchorPane.bottomAnchor\u003d\"1.0\" /\u003e"},{"lineNumber":12,"author":{"gitId":"deyixtan"},"content":"    \u003cButton fx:id\u003d\"sendButton\" layoutX\u003d\"324.0\" layoutY\u003d\"558.0\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"76.0\" text\u003d\"Send\" /\u003e"},{"lineNumber":13,"author":{"gitId":"deyixtan"},"content":"    \u003cScrollPane fx:id\u003d\"scrollPane\" hbarPolicy\u003d\"NEVER\" hvalue\u003d\"1.0\" prefHeight\u003d\"557.0\" prefWidth\u003d\"400.0\" vvalue\u003d\"1.0\"\u003e"},{"lineNumber":14,"author":{"gitId":"deyixtan"},"content":"      \u003ccontent\u003e"},{"lineNumber":15,"author":{"gitId":"deyixtan"},"content":"        \u003cVBox fx:id\u003d\"dialogContainer\" prefHeight\u003d\"552.0\" prefWidth\u003d\"388.0\" /\u003e"},{"lineNumber":16,"author":{"gitId":"deyixtan"},"content":"      \u003c/content\u003e"},{"lineNumber":17,"author":{"gitId":"deyixtan"},"content":"    \u003c/ScrollPane\u003e"},{"lineNumber":18,"author":{"gitId":"deyixtan"},"content":"  \u003c/children\u003e"},{"lineNumber":19,"author":{"gitId":"deyixtan"},"content":"\u003c/AnchorPane\u003e"}],"authorContributionMap":{"deyixtan":19}},{"path":"src/test/java/duke/TaskListTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"deyixtan"},"content":"package duke;"},{"lineNumber":2,"author":{"gitId":"deyixtan"},"content":""},{"lineNumber":3,"author":{"gitId":"deyixtan"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;"},{"lineNumber":4,"author":{"gitId":"deyixtan"},"content":"import static org.junit.jupiter.api.Assertions.fail;"},{"lineNumber":5,"author":{"gitId":"deyixtan"},"content":""},{"lineNumber":6,"author":{"gitId":"deyixtan"},"content":"import org.junit.jupiter.api.Test;"},{"lineNumber":7,"author":{"gitId":"deyixtan"},"content":""},{"lineNumber":8,"author":{"gitId":"deyixtan"},"content":"public class TaskListTest {"},{"lineNumber":9,"author":{"gitId":"deyixtan"},"content":""},{"lineNumber":10,"author":{"gitId":"deyixtan"},"content":"    @Test"},{"lineNumber":11,"author":{"gitId":"deyixtan"},"content":"    void deleteTask_emptyIndex_exceptionThrown() {"},{"lineNumber":12,"author":{"gitId":"deyixtan"},"content":"        TaskList tasks \u003d new TaskList();"},{"lineNumber":13,"author":{"gitId":"deyixtan"},"content":"        try {"},{"lineNumber":14,"author":{"gitId":"deyixtan"},"content":"            tasks.addTask(\"todo\", new String[]{\"Homework\", \"\"});"},{"lineNumber":15,"author":{"gitId":"deyixtan"},"content":"            tasks.deleteTask(\"\");"},{"lineNumber":16,"author":{"gitId":"deyixtan"},"content":"            fail();"},{"lineNumber":17,"author":{"gitId":"deyixtan"},"content":"        } catch (Exception e) {"},{"lineNumber":18,"author":{"gitId":"deyixtan"},"content":"            assertEquals(\"I need a task number...\", e.getMessage());"},{"lineNumber":19,"author":{"gitId":"deyixtan"},"content":"        }"},{"lineNumber":20,"author":{"gitId":"deyixtan"},"content":"    }"},{"lineNumber":21,"author":{"gitId":"deyixtan"},"content":""},{"lineNumber":22,"author":{"gitId":"deyixtan"},"content":"    @Test"},{"lineNumber":23,"author":{"gitId":"deyixtan"},"content":"    void deleteTask_emptyList_exceptionThrown() {"},{"lineNumber":24,"author":{"gitId":"deyixtan"},"content":"        TaskList tasks \u003d new TaskList();"},{"lineNumber":25,"author":{"gitId":"deyixtan"},"content":"        try {"},{"lineNumber":26,"author":{"gitId":"deyixtan"},"content":"            tasks.deleteTask(\"1\");"},{"lineNumber":27,"author":{"gitId":"deyixtan"},"content":"            fail();"},{"lineNumber":28,"author":{"gitId":"deyixtan"},"content":"        } catch (Exception e) {"},{"lineNumber":29,"author":{"gitId":"deyixtan"},"content":"            assertEquals(\"I don\u0027t think there is such a task...\", e.getMessage());"},{"lineNumber":30,"author":{"gitId":"deyixtan"},"content":"        }"},{"lineNumber":31,"author":{"gitId":"deyixtan"},"content":"    }"},{"lineNumber":32,"author":{"gitId":"deyixtan"},"content":""},{"lineNumber":33,"author":{"gitId":"deyixtan"},"content":"    @Test"},{"lineNumber":34,"author":{"gitId":"deyixtan"},"content":"    void deleteTask_invalidTask_exceptionThrown() {"},{"lineNumber":35,"author":{"gitId":"deyixtan"},"content":"        TaskList tasks \u003d new TaskList();"},{"lineNumber":36,"author":{"gitId":"deyixtan"},"content":"        try {"},{"lineNumber":37,"author":{"gitId":"deyixtan"},"content":"            tasks.addTask(\"todo\", new String[]{\"Homework\", \"\"});"},{"lineNumber":38,"author":{"gitId":"deyixtan"},"content":"            tasks.deleteTask(\"99\");"},{"lineNumber":39,"author":{"gitId":"deyixtan"},"content":"            fail();"},{"lineNumber":40,"author":{"gitId":"deyixtan"},"content":"        } catch (Exception e) {"},{"lineNumber":41,"author":{"gitId":"deyixtan"},"content":"            assertEquals(\"I don\u0027t think there is such a task...\", e.getMessage());"},{"lineNumber":42,"author":{"gitId":"deyixtan"},"content":"        }"},{"lineNumber":43,"author":{"gitId":"deyixtan"},"content":"    }"},{"lineNumber":44,"author":{"gitId":"deyixtan"},"content":"}"}],"authorContributionMap":{"deyixtan":44}},{"path":"src/test/java/duke/task/DeadlineTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"deyixtan"},"content":"package duke.task;"},{"lineNumber":2,"author":{"gitId":"deyixtan"},"content":""},{"lineNumber":3,"author":{"gitId":"deyixtan"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;"},{"lineNumber":4,"author":{"gitId":"deyixtan"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;"},{"lineNumber":5,"author":{"gitId":"deyixtan"},"content":""},{"lineNumber":6,"author":{"gitId":"deyixtan"},"content":"import java.time.LocalDate;"},{"lineNumber":7,"author":{"gitId":"deyixtan"},"content":""},{"lineNumber":8,"author":{"gitId":"deyixtan"},"content":"import org.junit.jupiter.api.Test;"},{"lineNumber":9,"author":{"gitId":"deyixtan"},"content":""},{"lineNumber":10,"author":{"gitId":"deyixtan"},"content":"public class DeadlineTest {"},{"lineNumber":11,"author":{"gitId":"deyixtan"},"content":""},{"lineNumber":12,"author":{"gitId":"deyixtan"},"content":"    @Test"},{"lineNumber":13,"author":{"gitId":"deyixtan"},"content":"    void markAsDone_success() {"},{"lineNumber":14,"author":{"gitId":"deyixtan"},"content":"        Deadline deadline \u003d new Deadline(\"Homework\", LocalDate.parse(\"2020-01-01\"));"},{"lineNumber":15,"author":{"gitId":"deyixtan"},"content":"        assertTrue(deadline.markAsDone());"},{"lineNumber":16,"author":{"gitId":"deyixtan"},"content":"    }"},{"lineNumber":17,"author":{"gitId":"deyixtan"},"content":""},{"lineNumber":18,"author":{"gitId":"deyixtan"},"content":"    @Test"},{"lineNumber":19,"author":{"gitId":"deyixtan"},"content":"    void markAsDone_alreadyMarked_fail() {"},{"lineNumber":20,"author":{"gitId":"deyixtan"},"content":"        Deadline deadline \u003d new Deadline(\"Homework\", LocalDate.parse(\"2020-01-01\"));"},{"lineNumber":21,"author":{"gitId":"deyixtan"},"content":"        assertTrue(deadline.markAsDone());"},{"lineNumber":22,"author":{"gitId":"deyixtan"},"content":"        assertFalse(deadline.markAsDone());"},{"lineNumber":23,"author":{"gitId":"deyixtan"},"content":"    }"},{"lineNumber":24,"author":{"gitId":"deyixtan"},"content":"}"}],"authorContributionMap":{"deyixtan":24}},{"path":"src/test/java/duke/task/EventTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"deyixtan"},"content":"package duke.task;"},{"lineNumber":2,"author":{"gitId":"deyixtan"},"content":""},{"lineNumber":3,"author":{"gitId":"deyixtan"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;"},{"lineNumber":4,"author":{"gitId":"deyixtan"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;"},{"lineNumber":5,"author":{"gitId":"deyixtan"},"content":""},{"lineNumber":6,"author":{"gitId":"deyixtan"},"content":"import java.time.LocalDate;"},{"lineNumber":7,"author":{"gitId":"deyixtan"},"content":""},{"lineNumber":8,"author":{"gitId":"deyixtan"},"content":"import org.junit.jupiter.api.Test;"},{"lineNumber":9,"author":{"gitId":"deyixtan"},"content":""},{"lineNumber":10,"author":{"gitId":"deyixtan"},"content":"public class EventTest {"},{"lineNumber":11,"author":{"gitId":"deyixtan"},"content":""},{"lineNumber":12,"author":{"gitId":"deyixtan"},"content":"    @Test"},{"lineNumber":13,"author":{"gitId":"deyixtan"},"content":"    void markAsDone_success() {"},{"lineNumber":14,"author":{"gitId":"deyixtan"},"content":"        Event event \u003d new Event(\"Homework\", LocalDate.parse(\"2020-01-01\"));"},{"lineNumber":15,"author":{"gitId":"deyixtan"},"content":"        assertTrue(event.markAsDone());"},{"lineNumber":16,"author":{"gitId":"deyixtan"},"content":"    }"},{"lineNumber":17,"author":{"gitId":"deyixtan"},"content":""},{"lineNumber":18,"author":{"gitId":"deyixtan"},"content":"    @Test"},{"lineNumber":19,"author":{"gitId":"deyixtan"},"content":"    void markAsDone_alreadyMarked_fail() {"},{"lineNumber":20,"author":{"gitId":"deyixtan"},"content":"        Event event \u003d new Event(\"Homework\", LocalDate.parse(\"2020-01-01\"));"},{"lineNumber":21,"author":{"gitId":"deyixtan"},"content":"        assertTrue(event.markAsDone());"},{"lineNumber":22,"author":{"gitId":"deyixtan"},"content":"        assertFalse(event.markAsDone());"},{"lineNumber":23,"author":{"gitId":"deyixtan"},"content":"    }"},{"lineNumber":24,"author":{"gitId":"deyixtan"},"content":"}"}],"authorContributionMap":{"deyixtan":24}},{"path":"src/test/java/duke/task/TodoTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"deyixtan"},"content":"package duke.task;"},{"lineNumber":2,"author":{"gitId":"deyixtan"},"content":""},{"lineNumber":3,"author":{"gitId":"deyixtan"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;"},{"lineNumber":4,"author":{"gitId":"deyixtan"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;"},{"lineNumber":5,"author":{"gitId":"deyixtan"},"content":""},{"lineNumber":6,"author":{"gitId":"deyixtan"},"content":"import org.junit.jupiter.api.Test;"},{"lineNumber":7,"author":{"gitId":"deyixtan"},"content":""},{"lineNumber":8,"author":{"gitId":"deyixtan"},"content":"public class TodoTest {"},{"lineNumber":9,"author":{"gitId":"deyixtan"},"content":""},{"lineNumber":10,"author":{"gitId":"deyixtan"},"content":"    @Test"},{"lineNumber":11,"author":{"gitId":"deyixtan"},"content":"    void markAsDone_success() {"},{"lineNumber":12,"author":{"gitId":"deyixtan"},"content":"        Todo todo \u003d new Todo(\"Homework\");"},{"lineNumber":13,"author":{"gitId":"deyixtan"},"content":"        assertTrue(todo.markAsDone());"},{"lineNumber":14,"author":{"gitId":"deyixtan"},"content":"    }"},{"lineNumber":15,"author":{"gitId":"deyixtan"},"content":""},{"lineNumber":16,"author":{"gitId":"deyixtan"},"content":"    @Test"},{"lineNumber":17,"author":{"gitId":"deyixtan"},"content":"    void markAsDone_alreadyMarked_fail() {"},{"lineNumber":18,"author":{"gitId":"deyixtan"},"content":"        Todo todo \u003d new Todo(\"Homework\");"},{"lineNumber":19,"author":{"gitId":"deyixtan"},"content":"        todo.markAsDone();"},{"lineNumber":20,"author":{"gitId":"deyixtan"},"content":"        assertFalse(todo.markAsDone());"},{"lineNumber":21,"author":{"gitId":"deyixtan"},"content":"    }"},{"lineNumber":22,"author":{"gitId":"deyixtan"},"content":"}"}],"authorContributionMap":{"deyixtan":22}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"deyixtan"},"content":"usage"},{"lineNumber":2,"author":{"gitId":"deyixtan"},"content":"test"},{"lineNumber":3,"author":{"gitId":"deyixtan"},"content":"todo"},{"lineNumber":4,"author":{"gitId":"deyixtan"},"content":"todo read book"},{"lineNumber":5,"author":{"gitId":"deyixtan"},"content":"list"},{"lineNumber":6,"author":{"gitId":"deyixtan"},"content":"deadline"},{"lineNumber":7,"author":{"gitId":"deyixtan"},"content":"deadline /by June 6th"},{"lineNumber":8,"author":{"gitId":"deyixtan"},"content":"deadline return book"},{"lineNumber":9,"author":{"gitId":"deyixtan"},"content":"deadline return book /at June 6th"},{"lineNumber":10,"author":{"gitId":"deyixtan"},"content":"deadline return book /by June 6th"},{"lineNumber":11,"author":{"gitId":"deyixtan"},"content":"list"},{"lineNumber":12,"author":{"gitId":"deyixtan"},"content":"event"},{"lineNumber":13,"author":{"gitId":"deyixtan"},"content":"event /at Aug 6th 2-4pm"},{"lineNumber":14,"author":{"gitId":"deyixtan"},"content":"event project meeting"},{"lineNumber":15,"author":{"gitId":"deyixtan"},"content":"event project meeting /by Aug 6th 2-4pm"},{"lineNumber":16,"author":{"gitId":"deyixtan"},"content":"event project meeting /at Aug 6th 2-4pm"},{"lineNumber":17,"author":{"gitId":"deyixtan"},"content":"list"},{"lineNumber":18,"author":{"gitId":"deyixtan"},"content":"todo join sports club"},{"lineNumber":19,"author":{"gitId":"deyixtan"},"content":"list"},{"lineNumber":20,"author":{"gitId":"deyixtan"},"content":"done 1"},{"lineNumber":21,"author":{"gitId":"deyixtan"},"content":"done 10"},{"lineNumber":22,"author":{"gitId":"deyixtan"},"content":"done 4"},{"lineNumber":23,"author":{"gitId":"deyixtan"},"content":"done 2"},{"lineNumber":24,"author":{"gitId":"deyixtan"},"content":"done 4"},{"lineNumber":25,"author":{"gitId":"deyixtan"},"content":"list"},{"lineNumber":26,"author":{"gitId":"deyixtan"},"content":"todo borrow book"},{"lineNumber":27,"author":{"gitId":"deyixtan"},"content":"deadline return book /by Sunday"},{"lineNumber":28,"author":{"gitId":"deyixtan"},"content":"event project meeting /at Mon 2-4pm"},{"lineNumber":29,"author":{"gitId":"deyixtan"},"content":"deadline do homework /by no idea :-p"},{"lineNumber":30,"author":{"gitId":"deyixtan"},"content":"list"},{"lineNumber":31,"author":{"gitId":"deyixtan"},"content":"delete"},{"lineNumber":32,"author":{"gitId":"deyixtan"},"content":"delete test"},{"lineNumber":33,"author":{"gitId":"deyixtan"},"content":"delete 8"},{"lineNumber":34,"author":{"gitId":"deyixtan"},"content":"delete 6"},{"lineNumber":35,"author":{"gitId":"deyixtan"},"content":"delete 6"},{"lineNumber":36,"author":{"gitId":"deyixtan"},"content":"list"},{"lineNumber":37,"author":{"gitId":"deyixtan"},"content":"bye"},{"lineNumber":38,"author":{"gitId":"deyixtan"},"content":"test"},{"lineNumber":39,"author":{"gitId":"deyixtan"},"content":"bye"},{"lineNumber":40,"author":{"gitId":"deyixtan"},"content":"N"},{"lineNumber":41,"author":{"gitId":"deyixtan"},"content":"bye"},{"lineNumber":42,"author":{"gitId":"deyixtan"},"content":""},{"lineNumber":43,"author":{"gitId":"deyixtan"},"content":""},{"lineNumber":44,"author":{"gitId":"deyixtan"},"content":"bye"},{"lineNumber":45,"author":{"gitId":"deyixtan"},"content":"Y"}],"authorContributionMap":{"deyixtan":45}}]
