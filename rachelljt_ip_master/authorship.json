[{"path":"README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"rachelljt"},"content":"# duke.Duke project template"},{"lineNumber":2,"author":{"gitId":"-"},"content":""},{"lineNumber":3,"author":{"gitId":"-"},"content":"This is a project template for a greenfield Java project. It\u0027s named after the Java mascot _Duke_. Given below are instructions on how to use it."},{"lineNumber":4,"author":{"gitId":"-"},"content":""},{"lineNumber":5,"author":{"gitId":"-"},"content":"## Setting up in Intellij"},{"lineNumber":6,"author":{"gitId":"-"},"content":""},{"lineNumber":7,"author":{"gitId":"-"},"content":"Prerequisites: JDK 11, update Intellij to the most recent version."},{"lineNumber":8,"author":{"gitId":"-"},"content":""},{"lineNumber":9,"author":{"gitId":"-"},"content":"1. Open Intellij (if you are not in the welcome screen, click `File` \u003e `Close Project` to close the existing project dialog first)"},{"lineNumber":10,"author":{"gitId":"-"},"content":"1. Set up the correct JDK version, as follows:"},{"lineNumber":11,"author":{"gitId":"-"},"content":"   1. Click `Configure` \u003e `Structure for New Projects` and then `Project Settings` \u003e `Project` \u003e `Project SDK`"},{"lineNumber":12,"author":{"gitId":"-"},"content":"   1. If JDK 11 is listed in the drop down, select it. If it is not, click `New...` and select the directory where you installed JDK 11"},{"lineNumber":13,"author":{"gitId":"-"},"content":"   1. Click `OK`"},{"lineNumber":14,"author":{"gitId":"-"},"content":"1. Import the project into Intellij as follows:"},{"lineNumber":15,"author":{"gitId":"-"},"content":"   1. Click `Open or Import`."},{"lineNumber":16,"author":{"gitId":"-"},"content":"   1. Select the project directory, and click `OK`"},{"lineNumber":17,"author":{"gitId":"-"},"content":"   1. If there are any further prompts, accept the defaults."},{"lineNumber":18,"author":{"gitId":"rachelljt"},"content":"1. After the importing is complete, locate the `src/main/java/duke.Duke.java` file, right-click it, and choose `Run duke.Duke.main()`. If the setup is correct, you should see something like the below:"},{"lineNumber":19,"author":{"gitId":"-"},"content":"   ```"},{"lineNumber":20,"author":{"gitId":"-"},"content":"   Hello from"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    ____        _        "},{"lineNumber":22,"author":{"gitId":"-"},"content":"   |  _ \\ _   _| | _____ "},{"lineNumber":23,"author":{"gitId":"-"},"content":"   | | | | | | | |/ / _ \\"},{"lineNumber":24,"author":{"gitId":"-"},"content":"   | |_| | |_| |   \u003c  __/"},{"lineNumber":25,"author":{"gitId":"-"},"content":"   |____/ \\__,_|_|\\_\\___|"},{"lineNumber":26,"author":{"gitId":"-"},"content":"   ```"}],"authorContributionMap":{"rachelljt":2,"-":24}},{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027checkstyle\u0027"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027"},{"lineNumber":6,"author":{"gitId":"-"},"content":"}"},{"lineNumber":7,"author":{"gitId":"-"},"content":""},{"lineNumber":8,"author":{"gitId":"-"},"content":"repositories {"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    mavenCentral()"},{"lineNumber":10,"author":{"gitId":"-"},"content":"}"},{"lineNumber":11,"author":{"gitId":"-"},"content":""},{"lineNumber":12,"author":{"gitId":"-"},"content":"dependencies {"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.5.0\u0027"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.5.0\u0027"},{"lineNumber":15,"author":{"gitId":"rachelljt"},"content":"    String javaFxVersion \u003d \u002711\u0027"},{"lineNumber":16,"author":{"gitId":"rachelljt"},"content":""},{"lineNumber":17,"author":{"gitId":"rachelljt"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027"},{"lineNumber":18,"author":{"gitId":"rachelljt"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"},{"lineNumber":19,"author":{"gitId":"rachelljt"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"},{"lineNumber":20,"author":{"gitId":"rachelljt"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027"},{"lineNumber":21,"author":{"gitId":"rachelljt"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"},{"lineNumber":22,"author":{"gitId":"rachelljt"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"},{"lineNumber":23,"author":{"gitId":"rachelljt"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027"},{"lineNumber":24,"author":{"gitId":"rachelljt"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"},{"lineNumber":25,"author":{"gitId":"rachelljt"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"},{"lineNumber":26,"author":{"gitId":"rachelljt"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027"},{"lineNumber":27,"author":{"gitId":"rachelljt"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"},{"lineNumber":28,"author":{"gitId":"rachelljt"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"},{"lineNumber":29,"author":{"gitId":"-"},"content":"}"},{"lineNumber":30,"author":{"gitId":"-"},"content":""},{"lineNumber":31,"author":{"gitId":"-"},"content":"test {"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    useJUnitPlatform()"},{"lineNumber":33,"author":{"gitId":"-"},"content":""},{"lineNumber":34,"author":{"gitId":"-"},"content":"    testLogging {"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\""},{"lineNumber":36,"author":{"gitId":"-"},"content":""},{"lineNumber":37,"author":{"gitId":"-"},"content":"        showExceptions true"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\""},{"lineNumber":39,"author":{"gitId":"-"},"content":"        showCauses true"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        showStackTraces true"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":43,"author":{"gitId":"-"},"content":"}"},{"lineNumber":44,"author":{"gitId":"-"},"content":""},{"lineNumber":45,"author":{"gitId":"-"},"content":"application {"},{"lineNumber":46,"author":{"gitId":"rachelljt"},"content":"    mainClassName \u003d \"duke.Duke\""},{"lineNumber":47,"author":{"gitId":"-"},"content":"}"},{"lineNumber":48,"author":{"gitId":"-"},"content":""},{"lineNumber":49,"author":{"gitId":"-"},"content":"shadowJar {"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    archiveBaseName \u003d \"duke\""},{"lineNumber":51,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null"},{"lineNumber":52,"author":{"gitId":"-"},"content":"}"},{"lineNumber":53,"author":{"gitId":"-"},"content":""},{"lineNumber":54,"author":{"gitId":"-"},"content":"checkstyle {"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    toolVersion \u003d \u00278.29\u0027"},{"lineNumber":56,"author":{"gitId":"-"},"content":"}"},{"lineNumber":57,"author":{"gitId":"-"},"content":""},{"lineNumber":58,"author":{"gitId":"-"},"content":"run{"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in"},{"lineNumber":60,"author":{"gitId":"-"},"content":"}"}],"authorContributionMap":{"rachelljt":15,"-":45}},{"path":"src/main/java/duke/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"rachelljt"},"content":"package duke;"},{"lineNumber":2,"author":{"gitId":"rachelljt"},"content":""},{"lineNumber":3,"author":{"gitId":"rachelljt"},"content":"import duke.exceptions.DukeException;"},{"lineNumber":4,"author":{"gitId":"rachelljt"},"content":"import duke.command.Command;"},{"lineNumber":5,"author":{"gitId":"rachelljt"},"content":"import duke.tasks.TaskList;"},{"lineNumber":6,"author":{"gitId":"rachelljt"},"content":""},{"lineNumber":7,"author":{"gitId":"-"},"content":"public class Duke {"},{"lineNumber":8,"author":{"gitId":"rachelljt"},"content":"    private final Storage storage;"},{"lineNumber":9,"author":{"gitId":"rachelljt"},"content":"    private TaskList tasks;"},{"lineNumber":10,"author":{"gitId":"rachelljt"},"content":"    private final Ui ui;"},{"lineNumber":11,"author":{"gitId":"rachelljt"},"content":""},{"lineNumber":12,"author":{"gitId":"rachelljt"},"content":"    /**"},{"lineNumber":13,"author":{"gitId":"rachelljt"},"content":"     * Initialising certain fields."},{"lineNumber":14,"author":{"gitId":"rachelljt"},"content":"     *"},{"lineNumber":15,"author":{"gitId":"rachelljt"},"content":"     * @throws DukeException If there are Exceptions."},{"lineNumber":16,"author":{"gitId":"rachelljt"},"content":"     */"},{"lineNumber":17,"author":{"gitId":"rachelljt"},"content":"    public Duke() throws DukeException {"},{"lineNumber":18,"author":{"gitId":"rachelljt"},"content":"        ui \u003d new Ui();"},{"lineNumber":19,"author":{"gitId":"rachelljt"},"content":"        storage \u003d new Storage();"},{"lineNumber":20,"author":{"gitId":"rachelljt"},"content":"        try {"},{"lineNumber":21,"author":{"gitId":"rachelljt"},"content":"            tasks \u003d new TaskList(storage.displayTasks());"},{"lineNumber":22,"author":{"gitId":"rachelljt"},"content":"        } catch (DukeException e) {"},{"lineNumber":23,"author":{"gitId":"rachelljt"},"content":"            tasks \u003d new TaskList();"},{"lineNumber":24,"author":{"gitId":"rachelljt"},"content":""},{"lineNumber":25,"author":{"gitId":"rachelljt"},"content":"        }"},{"lineNumber":26,"author":{"gitId":"rachelljt"},"content":"    }"},{"lineNumber":27,"author":{"gitId":"rachelljt"},"content":""},{"lineNumber":28,"author":{"gitId":"rachelljt"},"content":"    /**"},{"lineNumber":29,"author":{"gitId":"rachelljt"},"content":"     * Returns the response from Duke"},{"lineNumber":30,"author":{"gitId":"rachelljt"},"content":"     *"},{"lineNumber":31,"author":{"gitId":"rachelljt"},"content":"     * @param input User input."},{"lineNumber":32,"author":{"gitId":"rachelljt"},"content":"     * @return the description of the output."},{"lineNumber":33,"author":{"gitId":"rachelljt"},"content":"     * @throws DukeException if there exists an exception from executing the functions."},{"lineNumber":34,"author":{"gitId":"rachelljt"},"content":"     */"},{"lineNumber":35,"author":{"gitId":"rachelljt"},"content":"    public String getResponse(String input) throws DukeException {"},{"lineNumber":36,"author":{"gitId":"rachelljt"},"content":"        try {"},{"lineNumber":37,"author":{"gitId":"rachelljt"},"content":"            Command cmd \u003d Parser.parseTask(input);"},{"lineNumber":38,"author":{"gitId":"rachelljt"},"content":"            return cmd.execute(tasks, ui, storage);"},{"lineNumber":39,"author":{"gitId":"rachelljt"},"content":"        } catch (DukeException e) {"},{"lineNumber":40,"author":{"gitId":"rachelljt"},"content":"            return e.getMessage();"},{"lineNumber":41,"author":{"gitId":"rachelljt"},"content":"        }"},{"lineNumber":42,"author":{"gitId":"rachelljt"},"content":"    }"},{"lineNumber":43,"author":{"gitId":"rachelljt"},"content":""},{"lineNumber":44,"author":{"gitId":"rachelljt"},"content":"    /**"},{"lineNumber":45,"author":{"gitId":"rachelljt"},"content":"     * Displays the welcome message."},{"lineNumber":46,"author":{"gitId":"rachelljt"},"content":"     *"},{"lineNumber":47,"author":{"gitId":"rachelljt"},"content":"     * @return a String containing the welcome message."},{"lineNumber":48,"author":{"gitId":"rachelljt"},"content":"     */"},{"lineNumber":49,"author":{"gitId":"rachelljt"},"content":"    public String welcomeMessage() {"},{"lineNumber":50,"author":{"gitId":"rachelljt"},"content":"        return \"Hello from Duke!\\n\" + \"\\nWhat can I do for you?\";"},{"lineNumber":51,"author":{"gitId":"rachelljt"},"content":"    }"},{"lineNumber":52,"author":{"gitId":"-"},"content":"}"}],"authorContributionMap":{"rachelljt":50,"-":2}},{"path":"src/main/java/duke/Launcher.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"rachelljt"},"content":"package duke;"},{"lineNumber":2,"author":{"gitId":"rachelljt"},"content":""},{"lineNumber":3,"author":{"gitId":"rachelljt"},"content":"import javafx.application.Application;"},{"lineNumber":4,"author":{"gitId":"rachelljt"},"content":""},{"lineNumber":5,"author":{"gitId":"rachelljt"},"content":"public class Launcher {"},{"lineNumber":6,"author":{"gitId":"rachelljt"},"content":"    public static void main(String[] args) {"},{"lineNumber":7,"author":{"gitId":"rachelljt"},"content":"        Application.launch(Main.class, args);"},{"lineNumber":8,"author":{"gitId":"rachelljt"},"content":"    }"},{"lineNumber":9,"author":{"gitId":"rachelljt"},"content":"}"}],"authorContributionMap":{"rachelljt":9}},{"path":"src/main/java/duke/Main.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"rachelljt"},"content":"package duke;"},{"lineNumber":2,"author":{"gitId":"rachelljt"},"content":""},{"lineNumber":3,"author":{"gitId":"rachelljt"},"content":"import java.io.IOException;"},{"lineNumber":4,"author":{"gitId":"rachelljt"},"content":""},{"lineNumber":5,"author":{"gitId":"rachelljt"},"content":"import duke.exceptions.DukeException;"},{"lineNumber":6,"author":{"gitId":"rachelljt"},"content":"import duke.controller.MainWindow;"},{"lineNumber":7,"author":{"gitId":"rachelljt"},"content":"import javafx.application.Application;"},{"lineNumber":8,"author":{"gitId":"rachelljt"},"content":"import javafx.fxml.FXMLLoader;"},{"lineNumber":9,"author":{"gitId":"rachelljt"},"content":"import javafx.scene.Scene;"},{"lineNumber":10,"author":{"gitId":"rachelljt"},"content":"import javafx.scene.layout.AnchorPane;"},{"lineNumber":11,"author":{"gitId":"rachelljt"},"content":"import javafx.stage.Stage;"},{"lineNumber":12,"author":{"gitId":"rachelljt"},"content":""},{"lineNumber":13,"author":{"gitId":"rachelljt"},"content":"public class Main extends Application {"},{"lineNumber":14,"author":{"gitId":"rachelljt"},"content":"    private final Duke duke \u003d new Duke();"},{"lineNumber":15,"author":{"gitId":"rachelljt"},"content":""},{"lineNumber":16,"author":{"gitId":"rachelljt"},"content":"    public Main() throws DukeException {"},{"lineNumber":17,"author":{"gitId":"rachelljt"},"content":"    }"},{"lineNumber":18,"author":{"gitId":"rachelljt"},"content":""},{"lineNumber":19,"author":{"gitId":"rachelljt"},"content":"    @Override"},{"lineNumber":20,"author":{"gitId":"rachelljt"},"content":"    public void start(Stage stage) {"},{"lineNumber":21,"author":{"gitId":"rachelljt"},"content":"        try {"},{"lineNumber":22,"author":{"gitId":"rachelljt"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(Main.class.getResource(\"/view/MainWindow.fxml\"));"},{"lineNumber":23,"author":{"gitId":"rachelljt"},"content":"            AnchorPane ap \u003d fxmlLoader.load();"},{"lineNumber":24,"author":{"gitId":"rachelljt"},"content":"            Scene scene \u003d new Scene(ap);"},{"lineNumber":25,"author":{"gitId":"rachelljt"},"content":"            stage.setScene(scene);"},{"lineNumber":26,"author":{"gitId":"rachelljt"},"content":"            fxmlLoader.\u003cMainWindow\u003egetController().setDuke(duke);"},{"lineNumber":27,"author":{"gitId":"rachelljt"},"content":"            fxmlLoader.\u003cMainWindow\u003egetController().welcomeMessage();"},{"lineNumber":28,"author":{"gitId":"rachelljt"},"content":"            stage.show();"},{"lineNumber":29,"author":{"gitId":"rachelljt"},"content":"        } catch (IOException e) {"},{"lineNumber":30,"author":{"gitId":"rachelljt"},"content":"            e.printStackTrace();"},{"lineNumber":31,"author":{"gitId":"rachelljt"},"content":"        }"},{"lineNumber":32,"author":{"gitId":"rachelljt"},"content":"    }"},{"lineNumber":33,"author":{"gitId":"rachelljt"},"content":"}"}],"authorContributionMap":{"rachelljt":33}},{"path":"src/main/java/duke/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"rachelljt"},"content":"package duke;"},{"lineNumber":2,"author":{"gitId":"rachelljt"},"content":""},{"lineNumber":3,"author":{"gitId":"rachelljt"},"content":"import duke.exceptions.DukeException;"},{"lineNumber":4,"author":{"gitId":"rachelljt"},"content":"import duke.exceptions.EmptyLineException;"},{"lineNumber":5,"author":{"gitId":"rachelljt"},"content":"import duke.exceptions.IncorrectTypeException;"},{"lineNumber":6,"author":{"gitId":"rachelljt"},"content":"import duke.command.AddDeadlineCommand;"},{"lineNumber":7,"author":{"gitId":"rachelljt"},"content":"import duke.command.AddEventCommand;"},{"lineNumber":8,"author":{"gitId":"rachelljt"},"content":"import duke.command.AddToDoCommand;"},{"lineNumber":9,"author":{"gitId":"rachelljt"},"content":"import duke.command.ByeCommand;"},{"lineNumber":10,"author":{"gitId":"rachelljt"},"content":"import duke.command.Command;"},{"lineNumber":11,"author":{"gitId":"rachelljt"},"content":"import duke.command.DeleteCommand;"},{"lineNumber":12,"author":{"gitId":"rachelljt"},"content":"import duke.command.DoneCommand;"},{"lineNumber":13,"author":{"gitId":"rachelljt"},"content":"import duke.command.FindCommand;"},{"lineNumber":14,"author":{"gitId":"rachelljt"},"content":"import duke.command.showListCommand;"},{"lineNumber":15,"author":{"gitId":"rachelljt"},"content":""},{"lineNumber":16,"author":{"gitId":"rachelljt"},"content":"public class Parser {"},{"lineNumber":17,"author":{"gitId":"rachelljt"},"content":""},{"lineNumber":18,"author":{"gitId":"rachelljt"},"content":"    /**"},{"lineNumber":19,"author":{"gitId":"rachelljt"},"content":"     * Returns a command on what to do with the given description."},{"lineNumber":20,"author":{"gitId":"rachelljt"},"content":"     *"},{"lineNumber":21,"author":{"gitId":"rachelljt"},"content":"     * @param input String of an input."},{"lineNumber":22,"author":{"gitId":"rachelljt"},"content":"     * @return Command."},{"lineNumber":23,"author":{"gitId":"rachelljt"},"content":"     * @throws DukeException If the input is blank."},{"lineNumber":24,"author":{"gitId":"rachelljt"},"content":"     */"},{"lineNumber":25,"author":{"gitId":"rachelljt"},"content":"    public static Command parseTask(String input) throws DukeException {"},{"lineNumber":26,"author":{"gitId":"rachelljt"},"content":"        String[] line \u003d input.split(\" \", 2); // split type of task from description"},{"lineNumber":27,"author":{"gitId":"rachelljt"},"content":"        String type \u003d line[0]; // type of task"},{"lineNumber":28,"author":{"gitId":"rachelljt"},"content":"        if (input.isBlank()) {"},{"lineNumber":29,"author":{"gitId":"rachelljt"},"content":"            throw new EmptyLineException(\" \");"},{"lineNumber":30,"author":{"gitId":"rachelljt"},"content":"        }"},{"lineNumber":31,"author":{"gitId":"rachelljt"},"content":"        if (line.length !\u003d 2) {"},{"lineNumber":32,"author":{"gitId":"rachelljt"},"content":"            line \u003d new String[]{type, \"\"};"},{"lineNumber":33,"author":{"gitId":"rachelljt"},"content":"        }"},{"lineNumber":34,"author":{"gitId":"rachelljt"},"content":"        switch (type) {"},{"lineNumber":35,"author":{"gitId":"rachelljt"},"content":"        case \"list\":"},{"lineNumber":36,"author":{"gitId":"rachelljt"},"content":"            return new showListCommand(\"list\");"},{"lineNumber":37,"author":{"gitId":"rachelljt"},"content":"        case \"done\":"},{"lineNumber":38,"author":{"gitId":"rachelljt"},"content":"            return new DoneCommand(line[1]);"},{"lineNumber":39,"author":{"gitId":"rachelljt"},"content":"        case \"delete\":"},{"lineNumber":40,"author":{"gitId":"rachelljt"},"content":"            return new DeleteCommand(line[1]);"},{"lineNumber":41,"author":{"gitId":"rachelljt"},"content":"        case \"find\":"},{"lineNumber":42,"author":{"gitId":"rachelljt"},"content":"            return new FindCommand(line[1]);"},{"lineNumber":43,"author":{"gitId":"rachelljt"},"content":"        case \"todo\":"},{"lineNumber":44,"author":{"gitId":"rachelljt"},"content":"            return new AddToDoCommand(line[1]);"},{"lineNumber":45,"author":{"gitId":"rachelljt"},"content":"        case \"deadline\":"},{"lineNumber":46,"author":{"gitId":"rachelljt"},"content":"            return new AddDeadlineCommand(line[1]);"},{"lineNumber":47,"author":{"gitId":"rachelljt"},"content":"        case \"event\":"},{"lineNumber":48,"author":{"gitId":"rachelljt"},"content":"            return new AddEventCommand(line[1]);"},{"lineNumber":49,"author":{"gitId":"rachelljt"},"content":"        case \"bye\":"},{"lineNumber":50,"author":{"gitId":"rachelljt"},"content":"            return new ByeCommand(\"bye\");"},{"lineNumber":51,"author":{"gitId":"rachelljt"},"content":"        default:"},{"lineNumber":52,"author":{"gitId":"rachelljt"},"content":"            throw new IncorrectTypeException(\"\");"},{"lineNumber":53,"author":{"gitId":"rachelljt"},"content":"        }"},{"lineNumber":54,"author":{"gitId":"rachelljt"},"content":"    }"},{"lineNumber":55,"author":{"gitId":"rachelljt"},"content":"}"}],"authorContributionMap":{"rachelljt":55}},{"path":"src/main/java/duke/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"rachelljt"},"content":"package duke;"},{"lineNumber":2,"author":{"gitId":"rachelljt"},"content":""},{"lineNumber":3,"author":{"gitId":"rachelljt"},"content":"import java.io.File;"},{"lineNumber":4,"author":{"gitId":"rachelljt"},"content":"import java.io.FileNotFoundException;"},{"lineNumber":5,"author":{"gitId":"rachelljt"},"content":"import java.io.FileWriter;"},{"lineNumber":6,"author":{"gitId":"rachelljt"},"content":"import java.io.IOException;"},{"lineNumber":7,"author":{"gitId":"rachelljt"},"content":"import java.time.LocalDateTime;"},{"lineNumber":8,"author":{"gitId":"rachelljt"},"content":"import java.util.ArrayList;"},{"lineNumber":9,"author":{"gitId":"rachelljt"},"content":"import java.util.Scanner;"},{"lineNumber":10,"author":{"gitId":"rachelljt"},"content":""},{"lineNumber":11,"author":{"gitId":"rachelljt"},"content":"import duke.exceptions.DukeException;"},{"lineNumber":12,"author":{"gitId":"rachelljt"},"content":"import duke.tasks.Deadline;"},{"lineNumber":13,"author":{"gitId":"rachelljt"},"content":"import duke.tasks.Event;"},{"lineNumber":14,"author":{"gitId":"rachelljt"},"content":"import duke.tasks.Task;"},{"lineNumber":15,"author":{"gitId":"rachelljt"},"content":"import duke.tasks.ToDo;"},{"lineNumber":16,"author":{"gitId":"rachelljt"},"content":""},{"lineNumber":17,"author":{"gitId":"rachelljt"},"content":"public class Storage {"},{"lineNumber":18,"author":{"gitId":"rachelljt"},"content":"    private final File f;"},{"lineNumber":19,"author":{"gitId":"rachelljt"},"content":""},{"lineNumber":20,"author":{"gitId":"rachelljt"},"content":"    private final String path \u003d \"/Users/rachel/Desktop/ip/src/main/java/duke/data/myDuke.txt\";"},{"lineNumber":21,"author":{"gitId":"rachelljt"},"content":""},{"lineNumber":22,"author":{"gitId":"rachelljt"},"content":"    /**"},{"lineNumber":23,"author":{"gitId":"rachelljt"},"content":"     * initialises a storage object."},{"lineNumber":24,"author":{"gitId":"rachelljt"},"content":"     *"},{"lineNumber":25,"author":{"gitId":"rachelljt"},"content":"     * @throws DukeException due to IOException."},{"lineNumber":26,"author":{"gitId":"rachelljt"},"content":"     */"},{"lineNumber":27,"author":{"gitId":"rachelljt"},"content":"    public Storage() throws DukeException {"},{"lineNumber":28,"author":{"gitId":"rachelljt"},"content":"        this.f \u003d new File(path);"},{"lineNumber":29,"author":{"gitId":"rachelljt"},"content":"        createFile();"},{"lineNumber":30,"author":{"gitId":"rachelljt"},"content":"    }"},{"lineNumber":31,"author":{"gitId":"rachelljt"},"content":""},{"lineNumber":32,"author":{"gitId":"rachelljt"},"content":"    /**"},{"lineNumber":33,"author":{"gitId":"rachelljt"},"content":"     * creates a new file if not found in directory."},{"lineNumber":34,"author":{"gitId":"rachelljt"},"content":"     *"},{"lineNumber":35,"author":{"gitId":"rachelljt"},"content":"     * @throws DukeException due to IOException."},{"lineNumber":36,"author":{"gitId":"rachelljt"},"content":"     */"},{"lineNumber":37,"author":{"gitId":"rachelljt"},"content":"    public void createFile() throws DukeException {"},{"lineNumber":38,"author":{"gitId":"rachelljt"},"content":"        try {"},{"lineNumber":39,"author":{"gitId":"rachelljt"},"content":"            if (f.getParentFile().mkdirs()) {"},{"lineNumber":40,"author":{"gitId":"rachelljt"},"content":"                System.out.println(\"File is loading...\");"},{"lineNumber":41,"author":{"gitId":"rachelljt"},"content":"            } else {"},{"lineNumber":42,"author":{"gitId":"rachelljt"},"content":"                f.createNewFile();"},{"lineNumber":43,"author":{"gitId":"rachelljt"},"content":""},{"lineNumber":44,"author":{"gitId":"rachelljt"},"content":"                System.out.println(\"File already exists!\");"},{"lineNumber":45,"author":{"gitId":"rachelljt"},"content":"            }"},{"lineNumber":46,"author":{"gitId":"rachelljt"},"content":"        } catch (IOException e) {"},{"lineNumber":47,"author":{"gitId":"rachelljt"},"content":"            throw new DukeException(\"☹ OOPS!!! File creation error\");"},{"lineNumber":48,"author":{"gitId":"rachelljt"},"content":"        }"},{"lineNumber":49,"author":{"gitId":"rachelljt"},"content":"    }"},{"lineNumber":50,"author":{"gitId":"rachelljt"},"content":""},{"lineNumber":51,"author":{"gitId":"rachelljt"},"content":"    /**"},{"lineNumber":52,"author":{"gitId":"rachelljt"},"content":"     * Returns a list of tasks in the myDuke.txt file."},{"lineNumber":53,"author":{"gitId":"rachelljt"},"content":"     *"},{"lineNumber":54,"author":{"gitId":"rachelljt"},"content":"     * @return a list of tasks."},{"lineNumber":55,"author":{"gitId":"rachelljt"},"content":"     * @throws DukeException due to FileNotFoundException."},{"lineNumber":56,"author":{"gitId":"rachelljt"},"content":"     */"},{"lineNumber":57,"author":{"gitId":"rachelljt"},"content":"    public ArrayList\u003cTask\u003e displayTasks() throws DukeException {"},{"lineNumber":58,"author":{"gitId":"rachelljt"},"content":"        ArrayList\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();"},{"lineNumber":59,"author":{"gitId":"rachelljt"},"content":"        try {"},{"lineNumber":60,"author":{"gitId":"rachelljt"},"content":"            Scanner s \u003d new Scanner(f);"},{"lineNumber":61,"author":{"gitId":"rachelljt"},"content":"            while (s.hasNextLine()) {"},{"lineNumber":62,"author":{"gitId":"rachelljt"},"content":"                Task task \u003d parseTasks(s.nextLine());"},{"lineNumber":63,"author":{"gitId":"rachelljt"},"content":"                tasks.add(task);"},{"lineNumber":64,"author":{"gitId":"rachelljt"},"content":"            }"},{"lineNumber":65,"author":{"gitId":"rachelljt"},"content":"        } catch (FileNotFoundException e) {"},{"lineNumber":66,"author":{"gitId":"rachelljt"},"content":"            throw new DukeException(\"☹ OOPS!!! File not found!\");"},{"lineNumber":67,"author":{"gitId":"rachelljt"},"content":"        }"},{"lineNumber":68,"author":{"gitId":"rachelljt"},"content":"        return tasks;"},{"lineNumber":69,"author":{"gitId":"rachelljt"},"content":"    }"},{"lineNumber":70,"author":{"gitId":"rachelljt"},"content":""},{"lineNumber":71,"author":{"gitId":"rachelljt"},"content":"    /**"},{"lineNumber":72,"author":{"gitId":"rachelljt"},"content":"     * Parses the task saved in the file to identify"},{"lineNumber":73,"author":{"gitId":"rachelljt"},"content":"     * the type of task."},{"lineNumber":74,"author":{"gitId":"rachelljt"},"content":"     *"},{"lineNumber":75,"author":{"gitId":"rachelljt"},"content":"     * @param task description of task in String."},{"lineNumber":76,"author":{"gitId":"rachelljt"},"content":"     * @return a newly created Task."},{"lineNumber":77,"author":{"gitId":"rachelljt"},"content":"     * @throws DukeException if the type of task is unknown."},{"lineNumber":78,"author":{"gitId":"rachelljt"},"content":"     */"},{"lineNumber":79,"author":{"gitId":"rachelljt"},"content":"    public Task parseTasks(String task) throws DukeException {"},{"lineNumber":80,"author":{"gitId":"rachelljt"},"content":"        String[] description \u003d task.split(\" / \", 4);"},{"lineNumber":81,"author":{"gitId":"rachelljt"},"content":"        Task t \u003d null;"},{"lineNumber":82,"author":{"gitId":"rachelljt"},"content":"        try {"},{"lineNumber":83,"author":{"gitId":"rachelljt"},"content":"            LocalDateTime dateTime;"},{"lineNumber":84,"author":{"gitId":"rachelljt"},"content":"            String type \u003d description[0];"},{"lineNumber":85,"author":{"gitId":"rachelljt"},"content":"            switch (type) {"},{"lineNumber":86,"author":{"gitId":"rachelljt"},"content":"            case \"T\":"},{"lineNumber":87,"author":{"gitId":"rachelljt"},"content":"                t \u003d new ToDo(description[2]);"},{"lineNumber":88,"author":{"gitId":"rachelljt"},"content":"                break;"},{"lineNumber":89,"author":{"gitId":"rachelljt"},"content":""},{"lineNumber":90,"author":{"gitId":"rachelljt"},"content":"            case \"D\":"},{"lineNumber":91,"author":{"gitId":"rachelljt"},"content":"                dateTime \u003d LocalDateTime.parse(description[3]);"},{"lineNumber":92,"author":{"gitId":"rachelljt"},"content":"                t \u003d new Deadline(description[2], dateTime);"},{"lineNumber":93,"author":{"gitId":"rachelljt"},"content":"                break;"},{"lineNumber":94,"author":{"gitId":"rachelljt"},"content":""},{"lineNumber":95,"author":{"gitId":"rachelljt"},"content":"            case \"E\":"},{"lineNumber":96,"author":{"gitId":"rachelljt"},"content":"                dateTime \u003d LocalDateTime.parse(description[3]);"},{"lineNumber":97,"author":{"gitId":"rachelljt"},"content":"                t \u003d new Event(description[2], dateTime);"},{"lineNumber":98,"author":{"gitId":"rachelljt"},"content":"                break;"},{"lineNumber":99,"author":{"gitId":"rachelljt"},"content":"            default:"},{"lineNumber":100,"author":{"gitId":"rachelljt"},"content":"            }"},{"lineNumber":101,"author":{"gitId":"rachelljt"},"content":""},{"lineNumber":102,"author":{"gitId":"rachelljt"},"content":"            if (description[1].equals(\"1\")) {"},{"lineNumber":103,"author":{"gitId":"rachelljt"},"content":"                assert t !\u003d null;"},{"lineNumber":104,"author":{"gitId":"rachelljt"},"content":"                t.markAsDone();"},{"lineNumber":105,"author":{"gitId":"rachelljt"},"content":"            }"},{"lineNumber":106,"author":{"gitId":"rachelljt"},"content":""},{"lineNumber":107,"author":{"gitId":"rachelljt"},"content":"        } catch (Exception e) {"},{"lineNumber":108,"author":{"gitId":"rachelljt"},"content":""},{"lineNumber":109,"author":{"gitId":"rachelljt"},"content":"            throw new DukeException("},{"lineNumber":110,"author":{"gitId":"rachelljt"},"content":"                    \"☹ OOPS!!! I do not understand what are you saying!\");"},{"lineNumber":111,"author":{"gitId":"rachelljt"},"content":""},{"lineNumber":112,"author":{"gitId":"rachelljt"},"content":"        }"},{"lineNumber":113,"author":{"gitId":"rachelljt"},"content":""},{"lineNumber":114,"author":{"gitId":"rachelljt"},"content":"        return t;"},{"lineNumber":115,"author":{"gitId":"rachelljt"},"content":"    }"},{"lineNumber":116,"author":{"gitId":"rachelljt"},"content":""},{"lineNumber":117,"author":{"gitId":"rachelljt"},"content":"    /**"},{"lineNumber":118,"author":{"gitId":"rachelljt"},"content":"     * Saves tasks in the myDuke.txt file"},{"lineNumber":119,"author":{"gitId":"rachelljt"},"content":"     *"},{"lineNumber":120,"author":{"gitId":"rachelljt"},"content":"     * @param tasks A list of tasks"},{"lineNumber":121,"author":{"gitId":"rachelljt"},"content":"     * @throws DukeException due to IOException."},{"lineNumber":122,"author":{"gitId":"rachelljt"},"content":"     */"},{"lineNumber":123,"author":{"gitId":"rachelljt"},"content":"    public void saveTasks(ArrayList\u003cTask\u003e tasks) throws DukeException {"},{"lineNumber":124,"author":{"gitId":"rachelljt"},"content":"        try {"},{"lineNumber":125,"author":{"gitId":"rachelljt"},"content":"            FileWriter fw \u003d new FileWriter(path);"},{"lineNumber":126,"author":{"gitId":"rachelljt"},"content":"            for (Task t : tasks) {"},{"lineNumber":127,"author":{"gitId":"rachelljt"},"content":"                fw.write(t.toSave() + System.lineSeparator());"},{"lineNumber":128,"author":{"gitId":"rachelljt"},"content":"            }"},{"lineNumber":129,"author":{"gitId":"rachelljt"},"content":"            fw.close();"},{"lineNumber":130,"author":{"gitId":"rachelljt"},"content":"        } catch (IOException e) {"},{"lineNumber":131,"author":{"gitId":"rachelljt"},"content":"            throw new DukeException(\"☹ OOPS!!! Tasks cannot be saved.\");"},{"lineNumber":132,"author":{"gitId":"rachelljt"},"content":"        }"},{"lineNumber":133,"author":{"gitId":"rachelljt"},"content":"    }"},{"lineNumber":134,"author":{"gitId":"rachelljt"},"content":"}"}],"authorContributionMap":{"rachelljt":134}},{"path":"src/main/java/duke/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"rachelljt"},"content":"package duke;"},{"lineNumber":2,"author":{"gitId":"rachelljt"},"content":""},{"lineNumber":3,"author":{"gitId":"rachelljt"},"content":"import java.util.ArrayList;"},{"lineNumber":4,"author":{"gitId":"rachelljt"},"content":""},{"lineNumber":5,"author":{"gitId":"rachelljt"},"content":"import duke.tasks.Task;"},{"lineNumber":6,"author":{"gitId":"rachelljt"},"content":""},{"lineNumber":7,"author":{"gitId":"rachelljt"},"content":""},{"lineNumber":8,"author":{"gitId":"rachelljt"},"content":"public class Ui {"},{"lineNumber":9,"author":{"gitId":"rachelljt"},"content":""},{"lineNumber":10,"author":{"gitId":"rachelljt"},"content":"    public Ui() {"},{"lineNumber":11,"author":{"gitId":"rachelljt"},"content":""},{"lineNumber":12,"author":{"gitId":"rachelljt"},"content":"    }"},{"lineNumber":13,"author":{"gitId":"rachelljt"},"content":""},{"lineNumber":14,"author":{"gitId":"rachelljt"},"content":"    public String displayAddedTask(Task task, int num) {"},{"lineNumber":15,"author":{"gitId":"rachelljt"},"content":"        return \"☺ Got it. I\u0027ve added this task: \\n\" + task + \"\\n\""},{"lineNumber":16,"author":{"gitId":"rachelljt"},"content":"                + \"Now you have \" + num + \" tasks in the list.\";"},{"lineNumber":17,"author":{"gitId":"rachelljt"},"content":"    }"},{"lineNumber":18,"author":{"gitId":"rachelljt"},"content":""},{"lineNumber":19,"author":{"gitId":"rachelljt"},"content":"    public String displayDoneTask(Task task) {"},{"lineNumber":20,"author":{"gitId":"rachelljt"},"content":"        return \"☺ Nice! I\u0027ve marked this task as done: \\n\" + task;"},{"lineNumber":21,"author":{"gitId":"rachelljt"},"content":"    }"},{"lineNumber":22,"author":{"gitId":"rachelljt"},"content":""},{"lineNumber":23,"author":{"gitId":"rachelljt"},"content":"    public String displayDeletedTask(Task task, int num) {"},{"lineNumber":24,"author":{"gitId":"rachelljt"},"content":"        return \"☺ Noted. I\u0027ve removed this task: \\n\" + task + \"\\n\""},{"lineNumber":25,"author":{"gitId":"rachelljt"},"content":"                + \"Now you have \" + num + \" tasks in the list.\";"},{"lineNumber":26,"author":{"gitId":"rachelljt"},"content":"    }"},{"lineNumber":27,"author":{"gitId":"rachelljt"},"content":""},{"lineNumber":28,"author":{"gitId":"rachelljt"},"content":"    public String displayMatchingTasks(ArrayList\u003cTask\u003e tasks) {"},{"lineNumber":29,"author":{"gitId":"rachelljt"},"content":"        StringBuilder sb \u003d new StringBuilder();"},{"lineNumber":30,"author":{"gitId":"rachelljt"},"content":"        sb.append(\"Here are the matching tasks in your list: \\n\");"},{"lineNumber":31,"author":{"gitId":"rachelljt"},"content":"        for (int i \u003d 1; i \u003c\u003d tasks.size(); i++) {"},{"lineNumber":32,"author":{"gitId":"rachelljt"},"content":"            Task t \u003d tasks.get(i - 1);"},{"lineNumber":33,"author":{"gitId":"rachelljt"},"content":"            sb.append(i).append(\". \").append(t).append(\"\\n\");"},{"lineNumber":34,"author":{"gitId":"rachelljt"},"content":"        }"},{"lineNumber":35,"author":{"gitId":"rachelljt"},"content":"        return sb.toString();"},{"lineNumber":36,"author":{"gitId":"rachelljt"},"content":"    }"},{"lineNumber":37,"author":{"gitId":"rachelljt"},"content":""},{"lineNumber":38,"author":{"gitId":"rachelljt"},"content":"    public String displayList(ArrayList\u003cTask\u003e tasks) {"},{"lineNumber":39,"author":{"gitId":"rachelljt"},"content":"        StringBuilder sb \u003d new StringBuilder();"},{"lineNumber":40,"author":{"gitId":"rachelljt"},"content":"        sb.append(\"Here are the tasks in your list:\\n\");"},{"lineNumber":41,"author":{"gitId":"rachelljt"},"content":"        for (int i \u003d 1; i \u003c\u003d tasks.size(); i++) {"},{"lineNumber":42,"author":{"gitId":"rachelljt"},"content":"            Task t \u003d tasks.get(i - 1);"},{"lineNumber":43,"author":{"gitId":"rachelljt"},"content":"            sb.append(i).append(\". \").append(t).append(\"\\n\");"},{"lineNumber":44,"author":{"gitId":"rachelljt"},"content":"        }"},{"lineNumber":45,"author":{"gitId":"rachelljt"},"content":"        return sb.toString();"},{"lineNumber":46,"author":{"gitId":"rachelljt"},"content":"    }"},{"lineNumber":47,"author":{"gitId":"rachelljt"},"content":""},{"lineNumber":48,"author":{"gitId":"rachelljt"},"content":"    public String goodbyeMessage() {"},{"lineNumber":49,"author":{"gitId":"rachelljt"},"content":"        return \"Bye. Hope to see you again soon! ☺\";"},{"lineNumber":50,"author":{"gitId":"rachelljt"},"content":"    }"},{"lineNumber":51,"author":{"gitId":"rachelljt"},"content":"}"}],"authorContributionMap":{"rachelljt":51}},{"path":"src/main/java/duke/command/AddDeadlineCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"rachelljt"},"content":"package duke.command;"},{"lineNumber":2,"author":{"gitId":"rachelljt"},"content":""},{"lineNumber":3,"author":{"gitId":"rachelljt"},"content":"import java.time.LocalDateTime;"},{"lineNumber":4,"author":{"gitId":"rachelljt"},"content":"import java.time.format.DateTimeFormatter;"},{"lineNumber":5,"author":{"gitId":"rachelljt"},"content":""},{"lineNumber":6,"author":{"gitId":"rachelljt"},"content":"import duke.Storage;"},{"lineNumber":7,"author":{"gitId":"rachelljt"},"content":"import duke.Ui;"},{"lineNumber":8,"author":{"gitId":"rachelljt"},"content":"import duke.exceptions.DukeException;"},{"lineNumber":9,"author":{"gitId":"rachelljt"},"content":"import duke.exceptions.MissingDateException;"},{"lineNumber":10,"author":{"gitId":"rachelljt"},"content":"import duke.exceptions.UnknownInputException;"},{"lineNumber":11,"author":{"gitId":"rachelljt"},"content":"import duke.tasks.Deadline;"},{"lineNumber":12,"author":{"gitId":"rachelljt"},"content":"import duke.tasks.TaskList;"},{"lineNumber":13,"author":{"gitId":"rachelljt"},"content":""},{"lineNumber":14,"author":{"gitId":"rachelljt"},"content":"public class AddDeadlineCommand extends Command {"},{"lineNumber":15,"author":{"gitId":"rachelljt"},"content":"    private final Deadline deadline;"},{"lineNumber":16,"author":{"gitId":"rachelljt"},"content":""},{"lineNumber":17,"author":{"gitId":"rachelljt"},"content":"    public AddDeadlineCommand(String description) throws DukeException {"},{"lineNumber":18,"author":{"gitId":"rachelljt"},"content":"        if (description.isBlank()) {"},{"lineNumber":19,"author":{"gitId":"rachelljt"},"content":"            throw new UnknownInputException(\"deadline\");"},{"lineNumber":20,"author":{"gitId":"rachelljt"},"content":"        }"},{"lineNumber":21,"author":{"gitId":"rachelljt"},"content":""},{"lineNumber":22,"author":{"gitId":"rachelljt"},"content":"        String[] name \u003d description.split(\" /by \", 2);"},{"lineNumber":23,"author":{"gitId":"rachelljt"},"content":""},{"lineNumber":24,"author":{"gitId":"rachelljt"},"content":"        if (name.length !\u003d 2) {"},{"lineNumber":25,"author":{"gitId":"rachelljt"},"content":"            throw new MissingDateException(\"\");"},{"lineNumber":26,"author":{"gitId":"rachelljt"},"content":"        }"},{"lineNumber":27,"author":{"gitId":"rachelljt"},"content":""},{"lineNumber":28,"author":{"gitId":"rachelljt"},"content":"        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"dd/MM/yyyy HHmm\");"},{"lineNumber":29,"author":{"gitId":"rachelljt"},"content":"        LocalDateTime dateTime \u003d LocalDateTime.parse(name[1], formatter);"},{"lineNumber":30,"author":{"gitId":"rachelljt"},"content":"        this.deadline \u003d new Deadline(name[0], dateTime);"},{"lineNumber":31,"author":{"gitId":"rachelljt"},"content":"    }"},{"lineNumber":32,"author":{"gitId":"rachelljt"},"content":""},{"lineNumber":33,"author":{"gitId":"rachelljt"},"content":"    public String execute(TaskList tasks, Ui ui, Storage storage) throws DukeException {"},{"lineNumber":34,"author":{"gitId":"rachelljt"},"content":"        tasks.add(this.deadline);"},{"lineNumber":35,"author":{"gitId":"rachelljt"},"content":"        String result \u003d ui.displayAddedTask(this.deadline, tasks.getNumOfTasks());"},{"lineNumber":36,"author":{"gitId":"rachelljt"},"content":"        storage.saveTasks(tasks.getTasks());"},{"lineNumber":37,"author":{"gitId":"rachelljt"},"content":"        return result;"},{"lineNumber":38,"author":{"gitId":"rachelljt"},"content":"    }"},{"lineNumber":39,"author":{"gitId":"rachelljt"},"content":""},{"lineNumber":40,"author":{"gitId":"rachelljt"},"content":""},{"lineNumber":41,"author":{"gitId":"rachelljt"},"content":"    public boolean isExit() {"},{"lineNumber":42,"author":{"gitId":"rachelljt"},"content":"        return false;"},{"lineNumber":43,"author":{"gitId":"rachelljt"},"content":"    }"},{"lineNumber":44,"author":{"gitId":"rachelljt"},"content":""},{"lineNumber":45,"author":{"gitId":"rachelljt"},"content":""},{"lineNumber":46,"author":{"gitId":"rachelljt"},"content":"}"}],"authorContributionMap":{"rachelljt":46}},{"path":"src/main/java/duke/command/AddEventCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"rachelljt"},"content":"package duke.command;"},{"lineNumber":2,"author":{"gitId":"rachelljt"},"content":""},{"lineNumber":3,"author":{"gitId":"rachelljt"},"content":"import java.time.LocalDateTime;"},{"lineNumber":4,"author":{"gitId":"rachelljt"},"content":"import java.time.format.DateTimeFormatter;"},{"lineNumber":5,"author":{"gitId":"rachelljt"},"content":""},{"lineNumber":6,"author":{"gitId":"rachelljt"},"content":"import duke.Storage;"},{"lineNumber":7,"author":{"gitId":"rachelljt"},"content":"import duke.Ui;"},{"lineNumber":8,"author":{"gitId":"rachelljt"},"content":"import duke.exceptions.DukeException;"},{"lineNumber":9,"author":{"gitId":"rachelljt"},"content":"import duke.exceptions.MissingDateException;"},{"lineNumber":10,"author":{"gitId":"rachelljt"},"content":"import duke.exceptions.UnknownInputException;"},{"lineNumber":11,"author":{"gitId":"rachelljt"},"content":"import duke.tasks.Event;"},{"lineNumber":12,"author":{"gitId":"rachelljt"},"content":"import duke.tasks.TaskList;"},{"lineNumber":13,"author":{"gitId":"rachelljt"},"content":""},{"lineNumber":14,"author":{"gitId":"rachelljt"},"content":"public class AddEventCommand extends Command {"},{"lineNumber":15,"author":{"gitId":"rachelljt"},"content":"    private final Event event;"},{"lineNumber":16,"author":{"gitId":"rachelljt"},"content":""},{"lineNumber":17,"author":{"gitId":"rachelljt"},"content":"    public AddEventCommand(String description) throws DukeException {"},{"lineNumber":18,"author":{"gitId":"rachelljt"},"content":"        if (description.isBlank()) {"},{"lineNumber":19,"author":{"gitId":"rachelljt"},"content":"            throw new UnknownInputException(\"event\");"},{"lineNumber":20,"author":{"gitId":"rachelljt"},"content":"        }"},{"lineNumber":21,"author":{"gitId":"rachelljt"},"content":""},{"lineNumber":22,"author":{"gitId":"rachelljt"},"content":"        String[] name \u003d description.split(\" /at \", 2);"},{"lineNumber":23,"author":{"gitId":"rachelljt"},"content":""},{"lineNumber":24,"author":{"gitId":"rachelljt"},"content":"        if (name.length !\u003d 2) {"},{"lineNumber":25,"author":{"gitId":"rachelljt"},"content":"            throw new MissingDateException(\"\");"},{"lineNumber":26,"author":{"gitId":"rachelljt"},"content":"        }"},{"lineNumber":27,"author":{"gitId":"rachelljt"},"content":""},{"lineNumber":28,"author":{"gitId":"rachelljt"},"content":"        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"dd/MM/yyyy HHmm\");"},{"lineNumber":29,"author":{"gitId":"rachelljt"},"content":"        LocalDateTime dateTime \u003d LocalDateTime.parse(name[1], formatter);"},{"lineNumber":30,"author":{"gitId":"rachelljt"},"content":"        this.event \u003d new Event(name[0], dateTime);"},{"lineNumber":31,"author":{"gitId":"rachelljt"},"content":"    }"},{"lineNumber":32,"author":{"gitId":"rachelljt"},"content":""},{"lineNumber":33,"author":{"gitId":"rachelljt"},"content":""},{"lineNumber":34,"author":{"gitId":"rachelljt"},"content":"    @Override"},{"lineNumber":35,"author":{"gitId":"rachelljt"},"content":"    public String execute(TaskList tasks, Ui ui, Storage storage) throws DukeException {"},{"lineNumber":36,"author":{"gitId":"rachelljt"},"content":"        tasks.add(this.event);"},{"lineNumber":37,"author":{"gitId":"rachelljt"},"content":"        String result \u003d ui.displayAddedTask(this.event, tasks.getNumOfTasks());"},{"lineNumber":38,"author":{"gitId":"rachelljt"},"content":"        storage.saveTasks(tasks.getTasks());"},{"lineNumber":39,"author":{"gitId":"rachelljt"},"content":"        return result;"},{"lineNumber":40,"author":{"gitId":"rachelljt"},"content":"    }"},{"lineNumber":41,"author":{"gitId":"rachelljt"},"content":""},{"lineNumber":42,"author":{"gitId":"rachelljt"},"content":"    @Override"},{"lineNumber":43,"author":{"gitId":"rachelljt"},"content":"    public boolean isExit() {"},{"lineNumber":44,"author":{"gitId":"rachelljt"},"content":"        return false;"},{"lineNumber":45,"author":{"gitId":"rachelljt"},"content":"    }"},{"lineNumber":46,"author":{"gitId":"rachelljt"},"content":"}"}],"authorContributionMap":{"rachelljt":46}},{"path":"src/main/java/duke/command/AddToDoCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"rachelljt"},"content":"package duke.command;"},{"lineNumber":2,"author":{"gitId":"rachelljt"},"content":""},{"lineNumber":3,"author":{"gitId":"rachelljt"},"content":"import duke.Storage;"},{"lineNumber":4,"author":{"gitId":"rachelljt"},"content":"import duke.Ui;"},{"lineNumber":5,"author":{"gitId":"rachelljt"},"content":"import duke.exceptions.DukeException;"},{"lineNumber":6,"author":{"gitId":"rachelljt"},"content":"import duke.exceptions.UnknownInputException;"},{"lineNumber":7,"author":{"gitId":"rachelljt"},"content":"import duke.tasks.TaskList;"},{"lineNumber":8,"author":{"gitId":"rachelljt"},"content":"import duke.tasks.ToDo;"},{"lineNumber":9,"author":{"gitId":"rachelljt"},"content":""},{"lineNumber":10,"author":{"gitId":"rachelljt"},"content":"public class AddToDoCommand extends Command {"},{"lineNumber":11,"author":{"gitId":"rachelljt"},"content":"    private final ToDo todo;"},{"lineNumber":12,"author":{"gitId":"rachelljt"},"content":""},{"lineNumber":13,"author":{"gitId":"rachelljt"},"content":"    public AddToDoCommand(String description) throws DukeException {"},{"lineNumber":14,"author":{"gitId":"rachelljt"},"content":"        if (description.isBlank()) {"},{"lineNumber":15,"author":{"gitId":"rachelljt"},"content":"            throw new UnknownInputException(\"todo\");"},{"lineNumber":16,"author":{"gitId":"rachelljt"},"content":"        }"},{"lineNumber":17,"author":{"gitId":"rachelljt"},"content":""},{"lineNumber":18,"author":{"gitId":"rachelljt"},"content":"        this.todo \u003d new ToDo(description);"},{"lineNumber":19,"author":{"gitId":"rachelljt"},"content":"    }"},{"lineNumber":20,"author":{"gitId":"rachelljt"},"content":""},{"lineNumber":21,"author":{"gitId":"rachelljt"},"content":"    @Override"},{"lineNumber":22,"author":{"gitId":"rachelljt"},"content":"    public String execute(TaskList tasks, Ui ui, Storage storage) throws DukeException {"},{"lineNumber":23,"author":{"gitId":"rachelljt"},"content":"        tasks.add(todo);"},{"lineNumber":24,"author":{"gitId":"rachelljt"},"content":"        String result \u003d ui.displayAddedTask(todo, tasks.getNumOfTasks());"},{"lineNumber":25,"author":{"gitId":"rachelljt"},"content":"        storage.saveTasks(tasks.getTasks());"},{"lineNumber":26,"author":{"gitId":"rachelljt"},"content":"        return result;"},{"lineNumber":27,"author":{"gitId":"rachelljt"},"content":"    }"},{"lineNumber":28,"author":{"gitId":"rachelljt"},"content":""},{"lineNumber":29,"author":{"gitId":"rachelljt"},"content":"    @Override"},{"lineNumber":30,"author":{"gitId":"rachelljt"},"content":"    public boolean isExit() {"},{"lineNumber":31,"author":{"gitId":"rachelljt"},"content":"        return false;"},{"lineNumber":32,"author":{"gitId":"rachelljt"},"content":"    }"},{"lineNumber":33,"author":{"gitId":"rachelljt"},"content":"}"}],"authorContributionMap":{"rachelljt":33}},{"path":"src/main/java/duke/command/ByeCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"rachelljt"},"content":"package duke.command;"},{"lineNumber":2,"author":{"gitId":"rachelljt"},"content":""},{"lineNumber":3,"author":{"gitId":"rachelljt"},"content":"import duke.Storage;"},{"lineNumber":4,"author":{"gitId":"rachelljt"},"content":"import duke.Ui;"},{"lineNumber":5,"author":{"gitId":"rachelljt"},"content":"import duke.exceptions.DukeException;"},{"lineNumber":6,"author":{"gitId":"rachelljt"},"content":"import duke.tasks.TaskList;"},{"lineNumber":7,"author":{"gitId":"rachelljt"},"content":""},{"lineNumber":8,"author":{"gitId":"rachelljt"},"content":"public class ByeCommand extends Command {"},{"lineNumber":9,"author":{"gitId":"rachelljt"},"content":""},{"lineNumber":10,"author":{"gitId":"rachelljt"},"content":"    public ByeCommand(String description) {"},{"lineNumber":11,"author":{"gitId":"rachelljt"},"content":""},{"lineNumber":12,"author":{"gitId":"rachelljt"},"content":"    }"},{"lineNumber":13,"author":{"gitId":"rachelljt"},"content":""},{"lineNumber":14,"author":{"gitId":"rachelljt"},"content":"    @Override"},{"lineNumber":15,"author":{"gitId":"rachelljt"},"content":"    public String execute(TaskList tasks, Ui ui, Storage storage) throws DukeException {"},{"lineNumber":16,"author":{"gitId":"rachelljt"},"content":"        return ui.goodbyeMessage();"},{"lineNumber":17,"author":{"gitId":"rachelljt"},"content":"    }"},{"lineNumber":18,"author":{"gitId":"rachelljt"},"content":""},{"lineNumber":19,"author":{"gitId":"rachelljt"},"content":"    @Override"},{"lineNumber":20,"author":{"gitId":"rachelljt"},"content":"    public boolean isExit() {"},{"lineNumber":21,"author":{"gitId":"rachelljt"},"content":"        return true;"},{"lineNumber":22,"author":{"gitId":"rachelljt"},"content":"    }"},{"lineNumber":23,"author":{"gitId":"rachelljt"},"content":"}"}],"authorContributionMap":{"rachelljt":23}},{"path":"src/main/java/duke/command/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"rachelljt"},"content":"package duke.command;"},{"lineNumber":2,"author":{"gitId":"rachelljt"},"content":""},{"lineNumber":3,"author":{"gitId":"rachelljt"},"content":"import duke.Storage;"},{"lineNumber":4,"author":{"gitId":"rachelljt"},"content":"import duke.Ui;"},{"lineNumber":5,"author":{"gitId":"rachelljt"},"content":"import duke.exceptions.DukeException;"},{"lineNumber":6,"author":{"gitId":"rachelljt"},"content":"import duke.tasks.TaskList;"},{"lineNumber":7,"author":{"gitId":"rachelljt"},"content":""},{"lineNumber":8,"author":{"gitId":"rachelljt"},"content":"public abstract class Command {"},{"lineNumber":9,"author":{"gitId":"rachelljt"},"content":"    public abstract String execute(TaskList tasks, Ui ui, Storage storage) throws DukeException;"},{"lineNumber":10,"author":{"gitId":"rachelljt"},"content":""},{"lineNumber":11,"author":{"gitId":"rachelljt"},"content":"    public abstract boolean isExit();"},{"lineNumber":12,"author":{"gitId":"rachelljt"},"content":"}"}],"authorContributionMap":{"rachelljt":12}},{"path":"src/main/java/duke/command/DeleteCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"rachelljt"},"content":"package duke.command;"},{"lineNumber":2,"author":{"gitId":"rachelljt"},"content":""},{"lineNumber":3,"author":{"gitId":"rachelljt"},"content":"import duke.Storage;"},{"lineNumber":4,"author":{"gitId":"rachelljt"},"content":"import duke.Ui;"},{"lineNumber":5,"author":{"gitId":"rachelljt"},"content":"import duke.exceptions.DukeException;"},{"lineNumber":6,"author":{"gitId":"rachelljt"},"content":"import duke.exceptions.IncorrectNumberException;"},{"lineNumber":7,"author":{"gitId":"rachelljt"},"content":"import duke.tasks.Task;"},{"lineNumber":8,"author":{"gitId":"rachelljt"},"content":"import duke.tasks.TaskList;"},{"lineNumber":9,"author":{"gitId":"rachelljt"},"content":""},{"lineNumber":10,"author":{"gitId":"rachelljt"},"content":"public class DeleteCommand extends Command {"},{"lineNumber":11,"author":{"gitId":"rachelljt"},"content":"    private final int taskNum;"},{"lineNumber":12,"author":{"gitId":"rachelljt"},"content":""},{"lineNumber":13,"author":{"gitId":"rachelljt"},"content":"    public DeleteCommand(String description) throws DukeException {"},{"lineNumber":14,"author":{"gitId":"rachelljt"},"content":"        if (description.isBlank()) {"},{"lineNumber":15,"author":{"gitId":"rachelljt"},"content":"            throw new DukeException(\"Please key in a task number!\");"},{"lineNumber":16,"author":{"gitId":"rachelljt"},"content":"        }"},{"lineNumber":17,"author":{"gitId":"rachelljt"},"content":""},{"lineNumber":18,"author":{"gitId":"rachelljt"},"content":"        int num \u003d Integer.parseInt(description);"},{"lineNumber":19,"author":{"gitId":"rachelljt"},"content":"        this.taskNum \u003d num;"},{"lineNumber":20,"author":{"gitId":"rachelljt"},"content":""},{"lineNumber":21,"author":{"gitId":"rachelljt"},"content":"    }"},{"lineNumber":22,"author":{"gitId":"rachelljt"},"content":""},{"lineNumber":23,"author":{"gitId":"rachelljt"},"content":"    public String execute(TaskList tasks, Ui ui, Storage storage) throws DukeException {"},{"lineNumber":24,"author":{"gitId":"rachelljt"},"content":"        if (tasks.getNumOfTasks() \u003d\u003d 0) {"},{"lineNumber":25,"author":{"gitId":"rachelljt"},"content":"            throw new DukeException(\"There are currently no tasks in your list.\");"},{"lineNumber":26,"author":{"gitId":"rachelljt"},"content":"        }"},{"lineNumber":27,"author":{"gitId":"rachelljt"},"content":""},{"lineNumber":28,"author":{"gitId":"rachelljt"},"content":"        if (taskNum \u003c 1 || taskNum \u003e tasks.getNumOfTasks()) {"},{"lineNumber":29,"author":{"gitId":"rachelljt"},"content":"            throw new IncorrectNumberException(this.taskNum);"},{"lineNumber":30,"author":{"gitId":"rachelljt"},"content":"        }"},{"lineNumber":31,"author":{"gitId":"rachelljt"},"content":""},{"lineNumber":32,"author":{"gitId":"rachelljt"},"content":"        Task task \u003d tasks.getTask(taskNum);"},{"lineNumber":33,"author":{"gitId":"rachelljt"},"content":"        tasks.delete(taskNum);"},{"lineNumber":34,"author":{"gitId":"rachelljt"},"content":"        String result \u003d ui.displayDeletedTask(task, tasks.getNumOfTasks());"},{"lineNumber":35,"author":{"gitId":"rachelljt"},"content":"        storage.saveTasks(tasks.getTasks());"},{"lineNumber":36,"author":{"gitId":"rachelljt"},"content":"        return result;"},{"lineNumber":37,"author":{"gitId":"rachelljt"},"content":"    }"},{"lineNumber":38,"author":{"gitId":"rachelljt"},"content":""},{"lineNumber":39,"author":{"gitId":"rachelljt"},"content":"    public boolean isExit() {"},{"lineNumber":40,"author":{"gitId":"rachelljt"},"content":"        return false;"},{"lineNumber":41,"author":{"gitId":"rachelljt"},"content":"    }"},{"lineNumber":42,"author":{"gitId":"rachelljt"},"content":""},{"lineNumber":43,"author":{"gitId":"rachelljt"},"content":"}"}],"authorContributionMap":{"rachelljt":43}},{"path":"src/main/java/duke/command/DoneCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"rachelljt"},"content":"package duke.command;"},{"lineNumber":2,"author":{"gitId":"rachelljt"},"content":""},{"lineNumber":3,"author":{"gitId":"rachelljt"},"content":"import duke.Storage;"},{"lineNumber":4,"author":{"gitId":"rachelljt"},"content":"import duke.Ui;"},{"lineNumber":5,"author":{"gitId":"rachelljt"},"content":"import duke.exceptions.DukeException;"},{"lineNumber":6,"author":{"gitId":"rachelljt"},"content":"import duke.exceptions.IncorrectNumberException;"},{"lineNumber":7,"author":{"gitId":"rachelljt"},"content":"import duke.tasks.TaskList;"},{"lineNumber":8,"author":{"gitId":"rachelljt"},"content":""},{"lineNumber":9,"author":{"gitId":"rachelljt"},"content":"public class DoneCommand extends Command {"},{"lineNumber":10,"author":{"gitId":"rachelljt"},"content":"    private final int taskNum;"},{"lineNumber":11,"author":{"gitId":"rachelljt"},"content":""},{"lineNumber":12,"author":{"gitId":"rachelljt"},"content":"    public DoneCommand(String description) throws DukeException {"},{"lineNumber":13,"author":{"gitId":"rachelljt"},"content":"        if (description.isBlank()) {"},{"lineNumber":14,"author":{"gitId":"rachelljt"},"content":"            throw new DukeException(\"Please key in a task number!\");"},{"lineNumber":15,"author":{"gitId":"rachelljt"},"content":"        }"},{"lineNumber":16,"author":{"gitId":"rachelljt"},"content":""},{"lineNumber":17,"author":{"gitId":"rachelljt"},"content":"        this.taskNum \u003d Integer.parseInt(description);"},{"lineNumber":18,"author":{"gitId":"rachelljt"},"content":"    }"},{"lineNumber":19,"author":{"gitId":"rachelljt"},"content":""},{"lineNumber":20,"author":{"gitId":"rachelljt"},"content":"    @Override"},{"lineNumber":21,"author":{"gitId":"rachelljt"},"content":"    public String execute(TaskList tasks, Ui ui, Storage storage) throws DukeException {"},{"lineNumber":22,"author":{"gitId":"rachelljt"},"content":"        if (tasks.getNumOfTasks() \u003d\u003d 0) {"},{"lineNumber":23,"author":{"gitId":"rachelljt"},"content":"            throw new DukeException(\"There are currently no tasks in your list.\");"},{"lineNumber":24,"author":{"gitId":"rachelljt"},"content":"        }"},{"lineNumber":25,"author":{"gitId":"rachelljt"},"content":""},{"lineNumber":26,"author":{"gitId":"rachelljt"},"content":"        if (taskNum \u003c 1 || taskNum \u003e tasks.getNumOfTasks()) {"},{"lineNumber":27,"author":{"gitId":"rachelljt"},"content":"            throw new IncorrectNumberException(taskNum);"},{"lineNumber":28,"author":{"gitId":"rachelljt"},"content":"        }"},{"lineNumber":29,"author":{"gitId":"rachelljt"},"content":""},{"lineNumber":30,"author":{"gitId":"rachelljt"},"content":"        tasks.markAsDone(taskNum);"},{"lineNumber":31,"author":{"gitId":"rachelljt"},"content":"        String result \u003d ui.displayDoneTask(tasks.getTask(taskNum));"},{"lineNumber":32,"author":{"gitId":"rachelljt"},"content":"        storage.saveTasks(tasks.getTasks());"},{"lineNumber":33,"author":{"gitId":"rachelljt"},"content":"        return result;"},{"lineNumber":34,"author":{"gitId":"rachelljt"},"content":"    }"},{"lineNumber":35,"author":{"gitId":"rachelljt"},"content":""},{"lineNumber":36,"author":{"gitId":"rachelljt"},"content":"    @Override"},{"lineNumber":37,"author":{"gitId":"rachelljt"},"content":"    public boolean isExit() {"},{"lineNumber":38,"author":{"gitId":"rachelljt"},"content":"        return false;"},{"lineNumber":39,"author":{"gitId":"rachelljt"},"content":"    }"},{"lineNumber":40,"author":{"gitId":"rachelljt"},"content":"}"}],"authorContributionMap":{"rachelljt":40}},{"path":"src/main/java/duke/command/FindCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"rachelljt"},"content":"package duke.command;"},{"lineNumber":2,"author":{"gitId":"rachelljt"},"content":""},{"lineNumber":3,"author":{"gitId":"rachelljt"},"content":"import java.util.ArrayList;"},{"lineNumber":4,"author":{"gitId":"rachelljt"},"content":""},{"lineNumber":5,"author":{"gitId":"rachelljt"},"content":"import duke.Storage;"},{"lineNumber":6,"author":{"gitId":"rachelljt"},"content":"import duke.Ui;"},{"lineNumber":7,"author":{"gitId":"rachelljt"},"content":"import duke.exceptions.DukeException;"},{"lineNumber":8,"author":{"gitId":"rachelljt"},"content":"import duke.tasks.Task;"},{"lineNumber":9,"author":{"gitId":"rachelljt"},"content":"import duke.tasks.TaskList;"},{"lineNumber":10,"author":{"gitId":"rachelljt"},"content":""},{"lineNumber":11,"author":{"gitId":"rachelljt"},"content":"public class FindCommand extends Command {"},{"lineNumber":12,"author":{"gitId":"rachelljt"},"content":"    private final String keyword;"},{"lineNumber":13,"author":{"gitId":"rachelljt"},"content":""},{"lineNumber":14,"author":{"gitId":"rachelljt"},"content":"    public FindCommand(String description) throws DukeException {"},{"lineNumber":15,"author":{"gitId":"rachelljt"},"content":"        if (description.isBlank()) {"},{"lineNumber":16,"author":{"gitId":"rachelljt"},"content":"            throw new DukeException(\"Please enter the keywords!\");"},{"lineNumber":17,"author":{"gitId":"rachelljt"},"content":"        }"},{"lineNumber":18,"author":{"gitId":"rachelljt"},"content":""},{"lineNumber":19,"author":{"gitId":"rachelljt"},"content":"        this.keyword \u003d description;"},{"lineNumber":20,"author":{"gitId":"rachelljt"},"content":"    }"},{"lineNumber":21,"author":{"gitId":"rachelljt"},"content":""},{"lineNumber":22,"author":{"gitId":"rachelljt"},"content":"    @Override"},{"lineNumber":23,"author":{"gitId":"rachelljt"},"content":"    public String execute(TaskList tasks, Ui ui, Storage storage) throws DukeException {"},{"lineNumber":24,"author":{"gitId":"rachelljt"},"content":"        ArrayList\u003cTask\u003e newTasks \u003d tasks.findMatchingTasks(this.keyword);"},{"lineNumber":25,"author":{"gitId":"rachelljt"},"content":"        String result \u003d ui.displayMatchingTasks(newTasks);"},{"lineNumber":26,"author":{"gitId":"rachelljt"},"content":"        storage.saveTasks(tasks.getTasks());"},{"lineNumber":27,"author":{"gitId":"rachelljt"},"content":"        return result;"},{"lineNumber":28,"author":{"gitId":"rachelljt"},"content":"    }"},{"lineNumber":29,"author":{"gitId":"rachelljt"},"content":""},{"lineNumber":30,"author":{"gitId":"rachelljt"},"content":"    @Override"},{"lineNumber":31,"author":{"gitId":"rachelljt"},"content":"    public boolean isExit() {"},{"lineNumber":32,"author":{"gitId":"rachelljt"},"content":"        return false;"},{"lineNumber":33,"author":{"gitId":"rachelljt"},"content":"    }"},{"lineNumber":34,"author":{"gitId":"rachelljt"},"content":"}"}],"authorContributionMap":{"rachelljt":34}},{"path":"src/main/java/duke/command/showListCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"rachelljt"},"content":"package duke.command;"},{"lineNumber":2,"author":{"gitId":"rachelljt"},"content":""},{"lineNumber":3,"author":{"gitId":"rachelljt"},"content":"import duke.Storage;"},{"lineNumber":4,"author":{"gitId":"rachelljt"},"content":"import duke.Ui;"},{"lineNumber":5,"author":{"gitId":"rachelljt"},"content":"import duke.exceptions.DukeException;"},{"lineNumber":6,"author":{"gitId":"rachelljt"},"content":"import duke.tasks.TaskList;"},{"lineNumber":7,"author":{"gitId":"rachelljt"},"content":""},{"lineNumber":8,"author":{"gitId":"rachelljt"},"content":"public class showListCommand extends Command {"},{"lineNumber":9,"author":{"gitId":"rachelljt"},"content":""},{"lineNumber":10,"author":{"gitId":"rachelljt"},"content":"    public showListCommand(String description) {"},{"lineNumber":11,"author":{"gitId":"rachelljt"},"content":""},{"lineNumber":12,"author":{"gitId":"rachelljt"},"content":"    }"},{"lineNumber":13,"author":{"gitId":"rachelljt"},"content":""},{"lineNumber":14,"author":{"gitId":"rachelljt"},"content":"    @Override"},{"lineNumber":15,"author":{"gitId":"rachelljt"},"content":"    public String execute(TaskList tasks, Ui ui, Storage storage) throws DukeException {"},{"lineNumber":16,"author":{"gitId":"rachelljt"},"content":"        if (tasks.getNumOfTasks() \u003d\u003d 0) {"},{"lineNumber":17,"author":{"gitId":"rachelljt"},"content":"            throw new DukeException(\"There are currently no duke.tasks in your list.\");"},{"lineNumber":18,"author":{"gitId":"rachelljt"},"content":"        }"},{"lineNumber":19,"author":{"gitId":"rachelljt"},"content":""},{"lineNumber":20,"author":{"gitId":"rachelljt"},"content":"        String result \u003d ui.displayList(tasks.getTasks());"},{"lineNumber":21,"author":{"gitId":"rachelljt"},"content":"        return result;"},{"lineNumber":22,"author":{"gitId":"rachelljt"},"content":"    }"},{"lineNumber":23,"author":{"gitId":"rachelljt"},"content":""},{"lineNumber":24,"author":{"gitId":"rachelljt"},"content":"    @Override"},{"lineNumber":25,"author":{"gitId":"rachelljt"},"content":"    public boolean isExit() {"},{"lineNumber":26,"author":{"gitId":"rachelljt"},"content":"        return false;"},{"lineNumber":27,"author":{"gitId":"rachelljt"},"content":"    }"},{"lineNumber":28,"author":{"gitId":"rachelljt"},"content":"}"}],"authorContributionMap":{"rachelljt":28}},{"path":"src/main/java/duke/controller/DialogBox.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"rachelljt"},"content":"package duke.controller;"},{"lineNumber":2,"author":{"gitId":"rachelljt"},"content":""},{"lineNumber":3,"author":{"gitId":"rachelljt"},"content":"import java.io.IOException;"},{"lineNumber":4,"author":{"gitId":"rachelljt"},"content":"import java.util.Collections;"},{"lineNumber":5,"author":{"gitId":"rachelljt"},"content":""},{"lineNumber":6,"author":{"gitId":"rachelljt"},"content":"import javafx.collections.FXCollections;"},{"lineNumber":7,"author":{"gitId":"rachelljt"},"content":"import javafx.collections.ObservableList;"},{"lineNumber":8,"author":{"gitId":"rachelljt"},"content":"import javafx.fxml.FXML;"},{"lineNumber":9,"author":{"gitId":"rachelljt"},"content":"import javafx.fxml.FXMLLoader;"},{"lineNumber":10,"author":{"gitId":"rachelljt"},"content":"import javafx.geometry.Insets;"},{"lineNumber":11,"author":{"gitId":"rachelljt"},"content":"import javafx.geometry.Pos;"},{"lineNumber":12,"author":{"gitId":"rachelljt"},"content":"import javafx.scene.Node;"},{"lineNumber":13,"author":{"gitId":"rachelljt"},"content":"import javafx.scene.control.Label;"},{"lineNumber":14,"author":{"gitId":"rachelljt"},"content":"import javafx.scene.image.Image;"},{"lineNumber":15,"author":{"gitId":"rachelljt"},"content":"import javafx.scene.image.ImageView;"},{"lineNumber":16,"author":{"gitId":"rachelljt"},"content":"import javafx.scene.layout.Background;"},{"lineNumber":17,"author":{"gitId":"rachelljt"},"content":"import javafx.scene.layout.BackgroundFill;"},{"lineNumber":18,"author":{"gitId":"rachelljt"},"content":"import javafx.scene.layout.CornerRadii;"},{"lineNumber":19,"author":{"gitId":"rachelljt"},"content":"import javafx.scene.layout.HBox;"},{"lineNumber":20,"author":{"gitId":"rachelljt"},"content":"import javafx.scene.paint.Color;"},{"lineNumber":21,"author":{"gitId":"rachelljt"},"content":""},{"lineNumber":22,"author":{"gitId":"rachelljt"},"content":"/**"},{"lineNumber":23,"author":{"gitId":"rachelljt"},"content":" * An example of a custom control using FXML."},{"lineNumber":24,"author":{"gitId":"rachelljt"},"content":" * This control represents a dialog box consisting of an ImageView to represent the speaker\u0027s face and a label"},{"lineNumber":25,"author":{"gitId":"rachelljt"},"content":" * containing text from the speaker."},{"lineNumber":26,"author":{"gitId":"rachelljt"},"content":" */"},{"lineNumber":27,"author":{"gitId":"rachelljt"},"content":"public class DialogBox extends HBox {"},{"lineNumber":28,"author":{"gitId":"rachelljt"},"content":"    @FXML"},{"lineNumber":29,"author":{"gitId":"rachelljt"},"content":"    private Label dialog;"},{"lineNumber":30,"author":{"gitId":"rachelljt"},"content":"    @FXML"},{"lineNumber":31,"author":{"gitId":"rachelljt"},"content":"    private ImageView displayPicture;"},{"lineNumber":32,"author":{"gitId":"rachelljt"},"content":""},{"lineNumber":33,"author":{"gitId":"rachelljt"},"content":"    /**"},{"lineNumber":34,"author":{"gitId":"rachelljt"},"content":"     * Initialises a DialogBox object."},{"lineNumber":35,"author":{"gitId":"rachelljt"},"content":"     *"},{"lineNumber":36,"author":{"gitId":"rachelljt"},"content":"     * @param text Description of text"},{"lineNumber":37,"author":{"gitId":"rachelljt"},"content":"     * @param img Image of User/Duke."},{"lineNumber":38,"author":{"gitId":"rachelljt"},"content":"     */"},{"lineNumber":39,"author":{"gitId":"rachelljt"},"content":"    private DialogBox(String text, Image img) {"},{"lineNumber":40,"author":{"gitId":"rachelljt"},"content":"        try {"},{"lineNumber":41,"author":{"gitId":"rachelljt"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(\"/view/DialogBox.fxml\"));"},{"lineNumber":42,"author":{"gitId":"rachelljt"},"content":"            fxmlLoader.setController(this);"},{"lineNumber":43,"author":{"gitId":"rachelljt"},"content":"            fxmlLoader.setRoot(this);"},{"lineNumber":44,"author":{"gitId":"rachelljt"},"content":"            fxmlLoader.load();"},{"lineNumber":45,"author":{"gitId":"rachelljt"},"content":"        } catch (IOException e) {"},{"lineNumber":46,"author":{"gitId":"rachelljt"},"content":"            e.printStackTrace();"},{"lineNumber":47,"author":{"gitId":"rachelljt"},"content":"        }"},{"lineNumber":48,"author":{"gitId":"rachelljt"},"content":""},{"lineNumber":49,"author":{"gitId":"rachelljt"},"content":"        dialog.setText(text);"},{"lineNumber":50,"author":{"gitId":"rachelljt"},"content":"        displayPicture.setImage(img);"},{"lineNumber":51,"author":{"gitId":"rachelljt"},"content":"    }"},{"lineNumber":52,"author":{"gitId":"rachelljt"},"content":""},{"lineNumber":53,"author":{"gitId":"rachelljt"},"content":"    /**"},{"lineNumber":54,"author":{"gitId":"rachelljt"},"content":"     * Flips the dialog box such that the ImageView is on the left and text on the right."},{"lineNumber":55,"author":{"gitId":"rachelljt"},"content":"     */"},{"lineNumber":56,"author":{"gitId":"rachelljt"},"content":"    private void flip() {"},{"lineNumber":57,"author":{"gitId":"rachelljt"},"content":"        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());"},{"lineNumber":58,"author":{"gitId":"rachelljt"},"content":"        Collections.reverse(tmp);"},{"lineNumber":59,"author":{"gitId":"rachelljt"},"content":"        getChildren().setAll(tmp);"},{"lineNumber":60,"author":{"gitId":"rachelljt"},"content":"        setAlignment(Pos.TOP_LEFT);"},{"lineNumber":61,"author":{"gitId":"rachelljt"},"content":"    }"},{"lineNumber":62,"author":{"gitId":"rachelljt"},"content":""},{"lineNumber":63,"author":{"gitId":"rachelljt"},"content":"    /**"},{"lineNumber":64,"author":{"gitId":"rachelljt"},"content":"     * Returns a dialog box for the user."},{"lineNumber":65,"author":{"gitId":"rachelljt"},"content":"     *"},{"lineNumber":66,"author":{"gitId":"rachelljt"},"content":"     * @param text Description of the input."},{"lineNumber":67,"author":{"gitId":"rachelljt"},"content":"     * @param img Image of the user."},{"lineNumber":68,"author":{"gitId":"rachelljt"},"content":"     * @return a DialogBox for the user."},{"lineNumber":69,"author":{"gitId":"rachelljt"},"content":"     */"},{"lineNumber":70,"author":{"gitId":"rachelljt"},"content":"    public static DialogBox getUserDialog(String text, Image img) {"},{"lineNumber":71,"author":{"gitId":"rachelljt"},"content":"        var db \u003d new DialogBox(text, img);"},{"lineNumber":72,"author":{"gitId":"rachelljt"},"content":"        BackgroundFill bgFill \u003d new BackgroundFill(Color.rgb(229, 242, 255), CornerRadii.EMPTY, Insets.EMPTY);"},{"lineNumber":73,"author":{"gitId":"rachelljt"},"content":"        Background bg \u003d new Background(bgFill);"},{"lineNumber":74,"author":{"gitId":"rachelljt"},"content":"        db.setBackground(bg);"},{"lineNumber":75,"author":{"gitId":"rachelljt"},"content":"        return db;"},{"lineNumber":76,"author":{"gitId":"rachelljt"},"content":"    }"},{"lineNumber":77,"author":{"gitId":"rachelljt"},"content":""},{"lineNumber":78,"author":{"gitId":"rachelljt"},"content":"    /**"},{"lineNumber":79,"author":{"gitId":"rachelljt"},"content":"     * Returns a dialog box for Duke."},{"lineNumber":80,"author":{"gitId":"rachelljt"},"content":"     *"},{"lineNumber":81,"author":{"gitId":"rachelljt"},"content":"     * @param text Description of the output."},{"lineNumber":82,"author":{"gitId":"rachelljt"},"content":"     * @param img Image of Duke."},{"lineNumber":83,"author":{"gitId":"rachelljt"},"content":"     * @return a DialogBox for Duke."},{"lineNumber":84,"author":{"gitId":"rachelljt"},"content":"     */"},{"lineNumber":85,"author":{"gitId":"rachelljt"},"content":"    public static DialogBox getDukeDialog(String text, Image img) {"},{"lineNumber":86,"author":{"gitId":"rachelljt"},"content":"        var db \u003d new DialogBox(text, img);"},{"lineNumber":87,"author":{"gitId":"rachelljt"},"content":"        db.flip();"},{"lineNumber":88,"author":{"gitId":"rachelljt"},"content":"        BackgroundFill bgFill \u003d new BackgroundFill(Color.rgb(255, 229, 236), CornerRadii.EMPTY, Insets.EMPTY);"},{"lineNumber":89,"author":{"gitId":"rachelljt"},"content":"        Background bg \u003d new Background(bgFill);"},{"lineNumber":90,"author":{"gitId":"rachelljt"},"content":"        db.setBackground(bg);"},{"lineNumber":91,"author":{"gitId":"rachelljt"},"content":"        return db;"},{"lineNumber":92,"author":{"gitId":"rachelljt"},"content":"    }"},{"lineNumber":93,"author":{"gitId":"rachelljt"},"content":"}"}],"authorContributionMap":{"rachelljt":93}},{"path":"src/main/java/duke/controller/MainWindow.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"rachelljt"},"content":"package duke.controller;"},{"lineNumber":2,"author":{"gitId":"rachelljt"},"content":""},{"lineNumber":3,"author":{"gitId":"rachelljt"},"content":"import duke.Duke;"},{"lineNumber":4,"author":{"gitId":"rachelljt"},"content":"import duke.exceptions.DukeException;"},{"lineNumber":5,"author":{"gitId":"rachelljt"},"content":"import javafx.fxml.FXML;"},{"lineNumber":6,"author":{"gitId":"rachelljt"},"content":"import javafx.scene.control.Button;"},{"lineNumber":7,"author":{"gitId":"rachelljt"},"content":"import javafx.scene.control.ScrollPane;"},{"lineNumber":8,"author":{"gitId":"rachelljt"},"content":"import javafx.scene.control.TextField;"},{"lineNumber":9,"author":{"gitId":"rachelljt"},"content":"import javafx.scene.image.Image;"},{"lineNumber":10,"author":{"gitId":"rachelljt"},"content":"import javafx.scene.layout.AnchorPane;"},{"lineNumber":11,"author":{"gitId":"rachelljt"},"content":"import javafx.scene.layout.VBox;"},{"lineNumber":12,"author":{"gitId":"rachelljt"},"content":""},{"lineNumber":13,"author":{"gitId":"rachelljt"},"content":"/**"},{"lineNumber":14,"author":{"gitId":"rachelljt"},"content":" * Controller for MainWindow. Provides the layout for the other controls."},{"lineNumber":15,"author":{"gitId":"rachelljt"},"content":" */"},{"lineNumber":16,"author":{"gitId":"rachelljt"},"content":"public class MainWindow extends AnchorPane {"},{"lineNumber":17,"author":{"gitId":"rachelljt"},"content":"    @FXML"},{"lineNumber":18,"author":{"gitId":"rachelljt"},"content":"    private ScrollPane scrollPane;"},{"lineNumber":19,"author":{"gitId":"rachelljt"},"content":"    @FXML"},{"lineNumber":20,"author":{"gitId":"rachelljt"},"content":"    private VBox dialogContainer;"},{"lineNumber":21,"author":{"gitId":"rachelljt"},"content":"    @FXML"},{"lineNumber":22,"author":{"gitId":"rachelljt"},"content":"    private TextField userInput;"},{"lineNumber":23,"author":{"gitId":"rachelljt"},"content":"    @FXML"},{"lineNumber":24,"author":{"gitId":"rachelljt"},"content":"    private Button sendButton;"},{"lineNumber":25,"author":{"gitId":"rachelljt"},"content":""},{"lineNumber":26,"author":{"gitId":"rachelljt"},"content":"    private Duke duke;"},{"lineNumber":27,"author":{"gitId":"rachelljt"},"content":""},{"lineNumber":28,"author":{"gitId":"rachelljt"},"content":"    private final Image userImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/Jessie.png\"));"},{"lineNumber":29,"author":{"gitId":"rachelljt"},"content":"    private final Image dukeImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/Piper.png\"));"},{"lineNumber":30,"author":{"gitId":"rachelljt"},"content":""},{"lineNumber":31,"author":{"gitId":"rachelljt"},"content":"    @FXML"},{"lineNumber":32,"author":{"gitId":"rachelljt"},"content":"    public void initialize() {"},{"lineNumber":33,"author":{"gitId":"rachelljt"},"content":"        scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());"},{"lineNumber":34,"author":{"gitId":"rachelljt"},"content":"    }"},{"lineNumber":35,"author":{"gitId":"rachelljt"},"content":""},{"lineNumber":36,"author":{"gitId":"rachelljt"},"content":"    public void setDuke(Duke d) {"},{"lineNumber":37,"author":{"gitId":"rachelljt"},"content":"        this.duke \u003d d;"},{"lineNumber":38,"author":{"gitId":"rachelljt"},"content":"    }"},{"lineNumber":39,"author":{"gitId":"rachelljt"},"content":""},{"lineNumber":40,"author":{"gitId":"rachelljt"},"content":"    /**"},{"lineNumber":41,"author":{"gitId":"rachelljt"},"content":"     * Creates two dialog boxes, one echoing user input and the other containing Duke\u0027s reply and then appends them to"},{"lineNumber":42,"author":{"gitId":"rachelljt"},"content":"     * the dialog container. Clears the user input after processing."},{"lineNumber":43,"author":{"gitId":"rachelljt"},"content":"     */"},{"lineNumber":44,"author":{"gitId":"rachelljt"},"content":"    @FXML"},{"lineNumber":45,"author":{"gitId":"rachelljt"},"content":"    private void handleUserInput() {"},{"lineNumber":46,"author":{"gitId":"rachelljt"},"content":"        String input \u003d userInput.getText();"},{"lineNumber":47,"author":{"gitId":"rachelljt"},"content":"        try {"},{"lineNumber":48,"author":{"gitId":"rachelljt"},"content":"            String response \u003d duke.getResponse(input);"},{"lineNumber":49,"author":{"gitId":"rachelljt"},"content":"            dialogContainer.getChildren().addAll("},{"lineNumber":50,"author":{"gitId":"rachelljt"},"content":"                    DialogBox.getUserDialog(input, userImage),"},{"lineNumber":51,"author":{"gitId":"rachelljt"},"content":"                    DialogBox.getDukeDialog(response, dukeImage)"},{"lineNumber":52,"author":{"gitId":"rachelljt"},"content":"            );"},{"lineNumber":53,"author":{"gitId":"rachelljt"},"content":"            userInput.clear();"},{"lineNumber":54,"author":{"gitId":"rachelljt"},"content":"        } catch (DukeException e) {"},{"lineNumber":55,"author":{"gitId":"rachelljt"},"content":"            dialogContainer.getChildren().addAll("},{"lineNumber":56,"author":{"gitId":"rachelljt"},"content":"                    DialogBox.getUserDialog(input, userImage),"},{"lineNumber":57,"author":{"gitId":"rachelljt"},"content":"                    DialogBox.getDukeDialog(e.getMessage(), dukeImage)"},{"lineNumber":58,"author":{"gitId":"rachelljt"},"content":"            );"},{"lineNumber":59,"author":{"gitId":"rachelljt"},"content":"            userInput.clear();"},{"lineNumber":60,"author":{"gitId":"rachelljt"},"content":"        }"},{"lineNumber":61,"author":{"gitId":"rachelljt"},"content":"    }"},{"lineNumber":62,"author":{"gitId":"rachelljt"},"content":""},{"lineNumber":63,"author":{"gitId":"rachelljt"},"content":"    public void welcomeMessage() {"},{"lineNumber":64,"author":{"gitId":"rachelljt"},"content":"        dialogContainer.getChildren().addAll("},{"lineNumber":65,"author":{"gitId":"rachelljt"},"content":"                DialogBox.getDukeDialog(duke.welcomeMessage(), dukeImage)"},{"lineNumber":66,"author":{"gitId":"rachelljt"},"content":"        );"},{"lineNumber":67,"author":{"gitId":"rachelljt"},"content":"    }"},{"lineNumber":68,"author":{"gitId":"rachelljt"},"content":"}"}],"authorContributionMap":{"rachelljt":68}},{"path":"src/main/java/duke/data/myDuke.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"rachelljt"},"content":"T / 1 / read a book"},{"lineNumber":2,"author":{"gitId":"rachelljt"},"content":"E / 0 / marathon / 2020-08-22T05:00"},{"lineNumber":3,"author":{"gitId":"rachelljt"},"content":"D / 1 / complete assignment / 2020-01-29T10:00"},{"lineNumber":4,"author":{"gitId":"rachelljt"},"content":"T / 1 / watch a show"}],"authorContributionMap":{"rachelljt":4}},{"path":"src/main/java/duke/exceptions/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"rachelljt"},"content":"package duke.exceptions;"},{"lineNumber":2,"author":{"gitId":"rachelljt"},"content":""},{"lineNumber":3,"author":{"gitId":"rachelljt"},"content":"public class DukeException extends Exception {"},{"lineNumber":4,"author":{"gitId":"rachelljt"},"content":"    public DukeException(String message) {"},{"lineNumber":5,"author":{"gitId":"rachelljt"},"content":"        super(message);"},{"lineNumber":6,"author":{"gitId":"rachelljt"},"content":"    }"},{"lineNumber":7,"author":{"gitId":"rachelljt"},"content":"}"}],"authorContributionMap":{"rachelljt":7}},{"path":"src/main/java/duke/exceptions/EmptyLineException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"rachelljt"},"content":"package duke.exceptions;"},{"lineNumber":2,"author":{"gitId":"rachelljt"},"content":""},{"lineNumber":3,"author":{"gitId":"rachelljt"},"content":"public class EmptyLineException extends DukeException {"},{"lineNumber":4,"author":{"gitId":"rachelljt"},"content":"    public EmptyLineException(String message) {"},{"lineNumber":5,"author":{"gitId":"rachelljt"},"content":"        super(\"☹ OOPS!!! The input line cannot be empty.\");"},{"lineNumber":6,"author":{"gitId":"rachelljt"},"content":"    }"},{"lineNumber":7,"author":{"gitId":"rachelljt"},"content":"}"}],"authorContributionMap":{"rachelljt":7}},{"path":"src/main/java/duke/exceptions/IncorrectNumberException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"rachelljt"},"content":"package duke.exceptions;"},{"lineNumber":2,"author":{"gitId":"rachelljt"},"content":""},{"lineNumber":3,"author":{"gitId":"rachelljt"},"content":"public class IncorrectNumberException extends DukeException {"},{"lineNumber":4,"author":{"gitId":"rachelljt"},"content":"    public IncorrectNumberException(int num) {"},{"lineNumber":5,"author":{"gitId":"rachelljt"},"content":"        super(\"☹ OOPS!!! The task number \""},{"lineNumber":6,"author":{"gitId":"rachelljt"},"content":"                + num + \" cannot be found.\" );"},{"lineNumber":7,"author":{"gitId":"rachelljt"},"content":"    }"},{"lineNumber":8,"author":{"gitId":"rachelljt"},"content":""},{"lineNumber":9,"author":{"gitId":"rachelljt"},"content":"}"}],"authorContributionMap":{"rachelljt":9}},{"path":"src/main/java/duke/exceptions/IncorrectTypeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"rachelljt"},"content":"package duke.exceptions;"},{"lineNumber":2,"author":{"gitId":"rachelljt"},"content":""},{"lineNumber":3,"author":{"gitId":"rachelljt"},"content":"public class IncorrectTypeException extends DukeException {"},{"lineNumber":4,"author":{"gitId":"rachelljt"},"content":"    public IncorrectTypeException(String message) {"},{"lineNumber":5,"author":{"gitId":"rachelljt"},"content":"        super(\"☹ OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\");"},{"lineNumber":6,"author":{"gitId":"rachelljt"},"content":"    }"},{"lineNumber":7,"author":{"gitId":"rachelljt"},"content":"}"}],"authorContributionMap":{"rachelljt":7}},{"path":"src/main/java/duke/exceptions/MissingDateException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"rachelljt"},"content":"package duke.exceptions;"},{"lineNumber":2,"author":{"gitId":"rachelljt"},"content":""},{"lineNumber":3,"author":{"gitId":"rachelljt"},"content":"public class MissingDateException extends DukeException {"},{"lineNumber":4,"author":{"gitId":"rachelljt"},"content":"    public MissingDateException(String message) {"},{"lineNumber":5,"author":{"gitId":"rachelljt"},"content":"        super(\"☹ OOPS!!! Please enter a date/time.\");"},{"lineNumber":6,"author":{"gitId":"rachelljt"},"content":"    }"},{"lineNumber":7,"author":{"gitId":"rachelljt"},"content":"}"}],"authorContributionMap":{"rachelljt":7}},{"path":"src/main/java/duke/exceptions/UnknownInputException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"rachelljt"},"content":"package duke.exceptions;"},{"lineNumber":2,"author":{"gitId":"rachelljt"},"content":""},{"lineNumber":3,"author":{"gitId":"rachelljt"},"content":"public class UnknownInputException extends DukeException {"},{"lineNumber":4,"author":{"gitId":"rachelljt"},"content":"    public UnknownInputException(String type) {"},{"lineNumber":5,"author":{"gitId":"rachelljt"},"content":"        super(\"☹ OOPS!!! The description of a \""},{"lineNumber":6,"author":{"gitId":"rachelljt"},"content":"                + type + \" function cannot be empty.\");"},{"lineNumber":7,"author":{"gitId":"rachelljt"},"content":"    }"},{"lineNumber":8,"author":{"gitId":"rachelljt"},"content":"}"}],"authorContributionMap":{"rachelljt":8}},{"path":"src/main/java/duke/tasks/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"rachelljt"},"content":"package duke.tasks;"},{"lineNumber":2,"author":{"gitId":"rachelljt"},"content":""},{"lineNumber":3,"author":{"gitId":"rachelljt"},"content":"import java.time.LocalDateTime;"},{"lineNumber":4,"author":{"gitId":"rachelljt"},"content":"import java.time.format.DateTimeFormatter;"},{"lineNumber":5,"author":{"gitId":"rachelljt"},"content":""},{"lineNumber":6,"author":{"gitId":"rachelljt"},"content":"public class Deadline extends Task {"},{"lineNumber":7,"author":{"gitId":"rachelljt"},"content":"    protected LocalDateTime dateTime;"},{"lineNumber":8,"author":{"gitId":"rachelljt"},"content":""},{"lineNumber":9,"author":{"gitId":"rachelljt"},"content":"    /**"},{"lineNumber":10,"author":{"gitId":"rachelljt"},"content":"     * Initialises a new Deadline."},{"lineNumber":11,"author":{"gitId":"rachelljt"},"content":"     *"},{"lineNumber":12,"author":{"gitId":"rachelljt"},"content":"     * @param taskName Description of task."},{"lineNumber":13,"author":{"gitId":"rachelljt"},"content":"     * @param dateTime Date and Time."},{"lineNumber":14,"author":{"gitId":"rachelljt"},"content":"     */"},{"lineNumber":15,"author":{"gitId":"rachelljt"},"content":"    public Deadline(String taskName, LocalDateTime dateTime) {"},{"lineNumber":16,"author":{"gitId":"rachelljt"},"content":"        super(taskName);"},{"lineNumber":17,"author":{"gitId":"rachelljt"},"content":"        this.dateTime \u003d dateTime;"},{"lineNumber":18,"author":{"gitId":"rachelljt"},"content":"    }"},{"lineNumber":19,"author":{"gitId":"rachelljt"},"content":""},{"lineNumber":20,"author":{"gitId":"rachelljt"},"content":"    /**"},{"lineNumber":21,"author":{"gitId":"rachelljt"},"content":"     * Returns a the task type."},{"lineNumber":22,"author":{"gitId":"rachelljt"},"content":"     *"},{"lineNumber":23,"author":{"gitId":"rachelljt"},"content":"     * @return a String of the type."},{"lineNumber":24,"author":{"gitId":"rachelljt"},"content":"     */"},{"lineNumber":25,"author":{"gitId":"rachelljt"},"content":"    public String getTaskType() {"},{"lineNumber":26,"author":{"gitId":"rachelljt"},"content":"        return \"Deadline\";"},{"lineNumber":27,"author":{"gitId":"rachelljt"},"content":"    }"},{"lineNumber":28,"author":{"gitId":"rachelljt"},"content":""},{"lineNumber":29,"author":{"gitId":"rachelljt"},"content":"    /**"},{"lineNumber":30,"author":{"gitId":"rachelljt"},"content":"     * Returns a string of the LocalDateTime."},{"lineNumber":31,"author":{"gitId":"rachelljt"},"content":"     *"},{"lineNumber":32,"author":{"gitId":"rachelljt"},"content":"     * @return a String of the date time."},{"lineNumber":33,"author":{"gitId":"rachelljt"},"content":"     */"},{"lineNumber":34,"author":{"gitId":"rachelljt"},"content":"    public String getDateTime() {"},{"lineNumber":35,"author":{"gitId":"rachelljt"},"content":"        return dateTime.format("},{"lineNumber":36,"author":{"gitId":"rachelljt"},"content":"                DateTimeFormatter.ofPattern(\"MMM d yyyy, HH:mm\"));"},{"lineNumber":37,"author":{"gitId":"rachelljt"},"content":"    }"},{"lineNumber":38,"author":{"gitId":"rachelljt"},"content":""},{"lineNumber":39,"author":{"gitId":"rachelljt"},"content":"    /**"},{"lineNumber":40,"author":{"gitId":"rachelljt"},"content":"     * Returns a string of description to be saved in the myDuke.txt."},{"lineNumber":41,"author":{"gitId":"rachelljt"},"content":"     *"},{"lineNumber":42,"author":{"gitId":"rachelljt"},"content":"     * @return A String."},{"lineNumber":43,"author":{"gitId":"rachelljt"},"content":"     */"},{"lineNumber":44,"author":{"gitId":"rachelljt"},"content":"    @Override"},{"lineNumber":45,"author":{"gitId":"rachelljt"},"content":"    public String toSave() {"},{"lineNumber":46,"author":{"gitId":"rachelljt"},"content":"        return \"D / \" + super.isDoneString"},{"lineNumber":47,"author":{"gitId":"rachelljt"},"content":"                + super.taskName + \" / \" + dateTime;"},{"lineNumber":48,"author":{"gitId":"rachelljt"},"content":"    }"},{"lineNumber":49,"author":{"gitId":"rachelljt"},"content":""},{"lineNumber":50,"author":{"gitId":"rachelljt"},"content":"    /**"},{"lineNumber":51,"author":{"gitId":"rachelljt"},"content":"     * Returns a string of description to be printed out."},{"lineNumber":52,"author":{"gitId":"rachelljt"},"content":"     *"},{"lineNumber":53,"author":{"gitId":"rachelljt"},"content":"     * @return A String."},{"lineNumber":54,"author":{"gitId":"rachelljt"},"content":"     */"},{"lineNumber":55,"author":{"gitId":"rachelljt"},"content":"    @Override"},{"lineNumber":56,"author":{"gitId":"rachelljt"},"content":"    public String toString() {"},{"lineNumber":57,"author":{"gitId":"rachelljt"},"content":"        return \"[D]\" + super.toString()"},{"lineNumber":58,"author":{"gitId":"rachelljt"},"content":"                + \" (by: \" + getDateTime() + \")\";"},{"lineNumber":59,"author":{"gitId":"rachelljt"},"content":"    }"},{"lineNumber":60,"author":{"gitId":"rachelljt"},"content":"}"}],"authorContributionMap":{"rachelljt":60}},{"path":"src/main/java/duke/tasks/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"rachelljt"},"content":"package duke.tasks;"},{"lineNumber":2,"author":{"gitId":"rachelljt"},"content":""},{"lineNumber":3,"author":{"gitId":"rachelljt"},"content":"import java.time.LocalDateTime;"},{"lineNumber":4,"author":{"gitId":"rachelljt"},"content":"import java.time.format.DateTimeFormatter;"},{"lineNumber":5,"author":{"gitId":"rachelljt"},"content":""},{"lineNumber":6,"author":{"gitId":"rachelljt"},"content":"public class Event extends Task {"},{"lineNumber":7,"author":{"gitId":"rachelljt"},"content":"    protected LocalDateTime dateTime;"},{"lineNumber":8,"author":{"gitId":"rachelljt"},"content":""},{"lineNumber":9,"author":{"gitId":"rachelljt"},"content":"    /**"},{"lineNumber":10,"author":{"gitId":"rachelljt"},"content":"     * Initialises a new Event."},{"lineNumber":11,"author":{"gitId":"rachelljt"},"content":"     *"},{"lineNumber":12,"author":{"gitId":"rachelljt"},"content":"     * @param taskName Description of task."},{"lineNumber":13,"author":{"gitId":"rachelljt"},"content":"     * @param dateTime Date and Time."},{"lineNumber":14,"author":{"gitId":"rachelljt"},"content":"     */"},{"lineNumber":15,"author":{"gitId":"rachelljt"},"content":"    public Event(String taskName, LocalDateTime dateTime) {"},{"lineNumber":16,"author":{"gitId":"rachelljt"},"content":"        super(taskName);"},{"lineNumber":17,"author":{"gitId":"rachelljt"},"content":"        this.dateTime \u003d dateTime;"},{"lineNumber":18,"author":{"gitId":"rachelljt"},"content":"    }"},{"lineNumber":19,"author":{"gitId":"rachelljt"},"content":""},{"lineNumber":20,"author":{"gitId":"rachelljt"},"content":"    /**"},{"lineNumber":21,"author":{"gitId":"rachelljt"},"content":"     * Returns a the task type."},{"lineNumber":22,"author":{"gitId":"rachelljt"},"content":"     *"},{"lineNumber":23,"author":{"gitId":"rachelljt"},"content":"     * @return a String of the type."},{"lineNumber":24,"author":{"gitId":"rachelljt"},"content":"     */"},{"lineNumber":25,"author":{"gitId":"rachelljt"},"content":"    public String getTaskType() {"},{"lineNumber":26,"author":{"gitId":"rachelljt"},"content":"        return \"Event\";"},{"lineNumber":27,"author":{"gitId":"rachelljt"},"content":"    }"},{"lineNumber":28,"author":{"gitId":"rachelljt"},"content":""},{"lineNumber":29,"author":{"gitId":"rachelljt"},"content":"    /**"},{"lineNumber":30,"author":{"gitId":"rachelljt"},"content":"     * Returns a string of the LocalDateTime."},{"lineNumber":31,"author":{"gitId":"rachelljt"},"content":"     *"},{"lineNumber":32,"author":{"gitId":"rachelljt"},"content":"     * @return a String of the date time."},{"lineNumber":33,"author":{"gitId":"rachelljt"},"content":"     */"},{"lineNumber":34,"author":{"gitId":"rachelljt"},"content":"    public String getDateTime() {"},{"lineNumber":35,"author":{"gitId":"rachelljt"},"content":"        return dateTime.format("},{"lineNumber":36,"author":{"gitId":"rachelljt"},"content":"                DateTimeFormatter.ofPattern(\"MMM d yyyy, HH:mm\"));"},{"lineNumber":37,"author":{"gitId":"rachelljt"},"content":"    }"},{"lineNumber":38,"author":{"gitId":"rachelljt"},"content":""},{"lineNumber":39,"author":{"gitId":"rachelljt"},"content":"    /**"},{"lineNumber":40,"author":{"gitId":"rachelljt"},"content":"     * Returns a string of description to be saved in the myDuke.txt."},{"lineNumber":41,"author":{"gitId":"rachelljt"},"content":"     *"},{"lineNumber":42,"author":{"gitId":"rachelljt"},"content":"     * @return A String."},{"lineNumber":43,"author":{"gitId":"rachelljt"},"content":"     */"},{"lineNumber":44,"author":{"gitId":"rachelljt"},"content":"    @Override"},{"lineNumber":45,"author":{"gitId":"rachelljt"},"content":"    public String toSave() {"},{"lineNumber":46,"author":{"gitId":"rachelljt"},"content":"        return \"E / \" + super.isDoneString"},{"lineNumber":47,"author":{"gitId":"rachelljt"},"content":"                + super.taskName + \" / \" + dateTime;"},{"lineNumber":48,"author":{"gitId":"rachelljt"},"content":"    }"},{"lineNumber":49,"author":{"gitId":"rachelljt"},"content":""},{"lineNumber":50,"author":{"gitId":"rachelljt"},"content":"    /**"},{"lineNumber":51,"author":{"gitId":"rachelljt"},"content":"     * Returns a string of description to be printed out."},{"lineNumber":52,"author":{"gitId":"rachelljt"},"content":"     *"},{"lineNumber":53,"author":{"gitId":"rachelljt"},"content":"     * @return A String."},{"lineNumber":54,"author":{"gitId":"rachelljt"},"content":"     */"},{"lineNumber":55,"author":{"gitId":"rachelljt"},"content":"    @Override"},{"lineNumber":56,"author":{"gitId":"rachelljt"},"content":"    public String toString() {"},{"lineNumber":57,"author":{"gitId":"rachelljt"},"content":"        return \"[E]\" + super.toString()"},{"lineNumber":58,"author":{"gitId":"rachelljt"},"content":"                + \" (at: \" + getDateTime() + \")\";"},{"lineNumber":59,"author":{"gitId":"rachelljt"},"content":"    }"},{"lineNumber":60,"author":{"gitId":"rachelljt"},"content":"}"}],"authorContributionMap":{"rachelljt":60}},{"path":"src/main/java/duke/tasks/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"rachelljt"},"content":"package duke.tasks;"},{"lineNumber":2,"author":{"gitId":"rachelljt"},"content":""},{"lineNumber":3,"author":{"gitId":"rachelljt"},"content":"public class Task {"},{"lineNumber":4,"author":{"gitId":"rachelljt"},"content":"    protected String taskName;"},{"lineNumber":5,"author":{"gitId":"rachelljt"},"content":"    protected boolean isDone;"},{"lineNumber":6,"author":{"gitId":"rachelljt"},"content":"    protected String statusIcon;"},{"lineNumber":7,"author":{"gitId":"rachelljt"},"content":"    protected String isDoneString;"},{"lineNumber":8,"author":{"gitId":"rachelljt"},"content":""},{"lineNumber":9,"author":{"gitId":"rachelljt"},"content":"    /**"},{"lineNumber":10,"author":{"gitId":"rachelljt"},"content":"     * Initialises a new task."},{"lineNumber":11,"author":{"gitId":"rachelljt"},"content":"     *"},{"lineNumber":12,"author":{"gitId":"rachelljt"},"content":"     * @param taskName Description of task."},{"lineNumber":13,"author":{"gitId":"rachelljt"},"content":"     */"},{"lineNumber":14,"author":{"gitId":"rachelljt"},"content":"    public Task(String taskName) {"},{"lineNumber":15,"author":{"gitId":"rachelljt"},"content":"        this.taskName \u003d taskName;"},{"lineNumber":16,"author":{"gitId":"rachelljt"},"content":"        this.isDone \u003d false;"},{"lineNumber":17,"author":{"gitId":"rachelljt"},"content":"        this.statusIcon \u003d \"[ ] \";"},{"lineNumber":18,"author":{"gitId":"rachelljt"},"content":"        this.isDoneString \u003d \"0 / \";"},{"lineNumber":19,"author":{"gitId":"rachelljt"},"content":"    }"},{"lineNumber":20,"author":{"gitId":"rachelljt"},"content":""},{"lineNumber":21,"author":{"gitId":"rachelljt"},"content":"    /**"},{"lineNumber":22,"author":{"gitId":"rachelljt"},"content":"     * Returns the description of the task."},{"lineNumber":23,"author":{"gitId":"rachelljt"},"content":"     * @return a String of description of task."},{"lineNumber":24,"author":{"gitId":"rachelljt"},"content":"     */"},{"lineNumber":25,"author":{"gitId":"rachelljt"},"content":"    public String getTaskName() {"},{"lineNumber":26,"author":{"gitId":"rachelljt"},"content":"        return this.taskName;"},{"lineNumber":27,"author":{"gitId":"rachelljt"},"content":"    }"},{"lineNumber":28,"author":{"gitId":"rachelljt"},"content":""},{"lineNumber":29,"author":{"gitId":"rachelljt"},"content":"    /**"},{"lineNumber":30,"author":{"gitId":"rachelljt"},"content":"     * Marks the given task as completed."},{"lineNumber":31,"author":{"gitId":"rachelljt"},"content":"     */"},{"lineNumber":32,"author":{"gitId":"rachelljt"},"content":"    public void markAsDone() {"},{"lineNumber":33,"author":{"gitId":"rachelljt"},"content":"        this.isDone \u003d true;"},{"lineNumber":34,"author":{"gitId":"rachelljt"},"content":"        this.statusIcon \u003d \"[\\u2713] \";"},{"lineNumber":35,"author":{"gitId":"rachelljt"},"content":"        this.isDoneString \u003d \"1 / \";"},{"lineNumber":36,"author":{"gitId":"rachelljt"},"content":""},{"lineNumber":37,"author":{"gitId":"rachelljt"},"content":"    }"},{"lineNumber":38,"author":{"gitId":"rachelljt"},"content":""},{"lineNumber":39,"author":{"gitId":"rachelljt"},"content":"    /**"},{"lineNumber":40,"author":{"gitId":"rachelljt"},"content":"     * Returns a string of description to be saved in the myDuke.txt."},{"lineNumber":41,"author":{"gitId":"rachelljt"},"content":"     *"},{"lineNumber":42,"author":{"gitId":"rachelljt"},"content":"     * @return A String."},{"lineNumber":43,"author":{"gitId":"rachelljt"},"content":"     */"},{"lineNumber":44,"author":{"gitId":"rachelljt"},"content":"    public String toSave() {"},{"lineNumber":45,"author":{"gitId":"rachelljt"},"content":"        return this.taskName;"},{"lineNumber":46,"author":{"gitId":"rachelljt"},"content":"    }"},{"lineNumber":47,"author":{"gitId":"rachelljt"},"content":""},{"lineNumber":48,"author":{"gitId":"rachelljt"},"content":"    /**"},{"lineNumber":49,"author":{"gitId":"rachelljt"},"content":"     * Returns a string of description to be printed out."},{"lineNumber":50,"author":{"gitId":"rachelljt"},"content":"     *"},{"lineNumber":51,"author":{"gitId":"rachelljt"},"content":"     * @return A String."},{"lineNumber":52,"author":{"gitId":"rachelljt"},"content":"     */"},{"lineNumber":53,"author":{"gitId":"rachelljt"},"content":"    public String toString() {"},{"lineNumber":54,"author":{"gitId":"rachelljt"},"content":"        return statusIcon + this.taskName;"},{"lineNumber":55,"author":{"gitId":"rachelljt"},"content":"    }"},{"lineNumber":56,"author":{"gitId":"rachelljt"},"content":"}"}],"authorContributionMap":{"rachelljt":56}},{"path":"src/main/java/duke/tasks/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"rachelljt"},"content":"package duke.tasks;"},{"lineNumber":2,"author":{"gitId":"rachelljt"},"content":""},{"lineNumber":3,"author":{"gitId":"rachelljt"},"content":"import java.util.ArrayList;"},{"lineNumber":4,"author":{"gitId":"rachelljt"},"content":""},{"lineNumber":5,"author":{"gitId":"rachelljt"},"content":"import duke.exceptions.DukeException;"},{"lineNumber":6,"author":{"gitId":"rachelljt"},"content":""},{"lineNumber":7,"author":{"gitId":"rachelljt"},"content":""},{"lineNumber":8,"author":{"gitId":"rachelljt"},"content":"public class TaskList {"},{"lineNumber":9,"author":{"gitId":"rachelljt"},"content":"    private final ArrayList\u003cTask\u003e tasks;"},{"lineNumber":10,"author":{"gitId":"rachelljt"},"content":""},{"lineNumber":11,"author":{"gitId":"rachelljt"},"content":"    /**"},{"lineNumber":12,"author":{"gitId":"rachelljt"},"content":"     * Initialises a new TaskList."},{"lineNumber":13,"author":{"gitId":"rachelljt"},"content":"     *"},{"lineNumber":14,"author":{"gitId":"rachelljt"},"content":"     * @param tasks List of tasks."},{"lineNumber":15,"author":{"gitId":"rachelljt"},"content":"     */"},{"lineNumber":16,"author":{"gitId":"rachelljt"},"content":"    public TaskList(ArrayList\u003cTask\u003e tasks) {"},{"lineNumber":17,"author":{"gitId":"rachelljt"},"content":"        this.tasks \u003d tasks;"},{"lineNumber":18,"author":{"gitId":"rachelljt"},"content":"    }"},{"lineNumber":19,"author":{"gitId":"rachelljt"},"content":""},{"lineNumber":20,"author":{"gitId":"rachelljt"},"content":"    /**"},{"lineNumber":21,"author":{"gitId":"rachelljt"},"content":"     * Initialises a new TaskList."},{"lineNumber":22,"author":{"gitId":"rachelljt"},"content":"     */"},{"lineNumber":23,"author":{"gitId":"rachelljt"},"content":"    public TaskList() {"},{"lineNumber":24,"author":{"gitId":"rachelljt"},"content":"        this.tasks \u003d new ArrayList\u003c\u003e();"},{"lineNumber":25,"author":{"gitId":"rachelljt"},"content":"    }"},{"lineNumber":26,"author":{"gitId":"rachelljt"},"content":""},{"lineNumber":27,"author":{"gitId":"rachelljt"},"content":"    /**"},{"lineNumber":28,"author":{"gitId":"rachelljt"},"content":"     * Returns the Task at the specific index."},{"lineNumber":29,"author":{"gitId":"rachelljt"},"content":"     *"},{"lineNumber":30,"author":{"gitId":"rachelljt"},"content":"     * @param num Integer index."},{"lineNumber":31,"author":{"gitId":"rachelljt"},"content":"     * @return Task at specific index."},{"lineNumber":32,"author":{"gitId":"rachelljt"},"content":"     */"},{"lineNumber":33,"author":{"gitId":"rachelljt"},"content":"    public Task getTask(int num) {"},{"lineNumber":34,"author":{"gitId":"rachelljt"},"content":"        return this.tasks.get(num - 1);"},{"lineNumber":35,"author":{"gitId":"rachelljt"},"content":"    }"},{"lineNumber":36,"author":{"gitId":"rachelljt"},"content":""},{"lineNumber":37,"author":{"gitId":"rachelljt"},"content":"    /**"},{"lineNumber":38,"author":{"gitId":"rachelljt"},"content":"     * Returns the total number of tasks."},{"lineNumber":39,"author":{"gitId":"rachelljt"},"content":"     *"},{"lineNumber":40,"author":{"gitId":"rachelljt"},"content":"     * @return The total number of tasks."},{"lineNumber":41,"author":{"gitId":"rachelljt"},"content":"     */"},{"lineNumber":42,"author":{"gitId":"rachelljt"},"content":"    public int getNumOfTasks() {"},{"lineNumber":43,"author":{"gitId":"rachelljt"},"content":"        return this.tasks.size();"},{"lineNumber":44,"author":{"gitId":"rachelljt"},"content":"    }"},{"lineNumber":45,"author":{"gitId":"rachelljt"},"content":""},{"lineNumber":46,"author":{"gitId":"rachelljt"},"content":"    /**"},{"lineNumber":47,"author":{"gitId":"rachelljt"},"content":"     * Returns a List of tasks."},{"lineNumber":48,"author":{"gitId":"rachelljt"},"content":"     *"},{"lineNumber":49,"author":{"gitId":"rachelljt"},"content":"     * @return A list of tasks."},{"lineNumber":50,"author":{"gitId":"rachelljt"},"content":"     */"},{"lineNumber":51,"author":{"gitId":"rachelljt"},"content":"    public ArrayList\u003cTask\u003e getTasks() {"},{"lineNumber":52,"author":{"gitId":"rachelljt"},"content":"        return this.tasks;"},{"lineNumber":53,"author":{"gitId":"rachelljt"},"content":"    }"},{"lineNumber":54,"author":{"gitId":"rachelljt"},"content":""},{"lineNumber":55,"author":{"gitId":"rachelljt"},"content":"    /**"},{"lineNumber":56,"author":{"gitId":"rachelljt"},"content":"     * Add task to list."},{"lineNumber":57,"author":{"gitId":"rachelljt"},"content":"     *"},{"lineNumber":58,"author":{"gitId":"rachelljt"},"content":"     * @param task Task."},{"lineNumber":59,"author":{"gitId":"rachelljt"},"content":"     */"},{"lineNumber":60,"author":{"gitId":"rachelljt"},"content":"    public void add(Task task) {"},{"lineNumber":61,"author":{"gitId":"rachelljt"},"content":"        tasks.add(task);"},{"lineNumber":62,"author":{"gitId":"rachelljt"},"content":"    }"},{"lineNumber":63,"author":{"gitId":"rachelljt"},"content":""},{"lineNumber":64,"author":{"gitId":"rachelljt"},"content":"    /**"},{"lineNumber":65,"author":{"gitId":"rachelljt"},"content":"     * Delete task at specific index."},{"lineNumber":66,"author":{"gitId":"rachelljt"},"content":"     *"},{"lineNumber":67,"author":{"gitId":"rachelljt"},"content":"     * @param num Integer index."},{"lineNumber":68,"author":{"gitId":"rachelljt"},"content":"     */"},{"lineNumber":69,"author":{"gitId":"rachelljt"},"content":"    public void delete(int num) {"},{"lineNumber":70,"author":{"gitId":"rachelljt"},"content":"        tasks.remove(num - 1);"},{"lineNumber":71,"author":{"gitId":"rachelljt"},"content":"    }"},{"lineNumber":72,"author":{"gitId":"rachelljt"},"content":""},{"lineNumber":73,"author":{"gitId":"rachelljt"},"content":"    /**"},{"lineNumber":74,"author":{"gitId":"rachelljt"},"content":"     * Mark task as completed."},{"lineNumber":75,"author":{"gitId":"rachelljt"},"content":"     *"},{"lineNumber":76,"author":{"gitId":"rachelljt"},"content":"     * @param num Integer index."},{"lineNumber":77,"author":{"gitId":"rachelljt"},"content":"     */"},{"lineNumber":78,"author":{"gitId":"rachelljt"},"content":"    public void markAsDone(int num) {"},{"lineNumber":79,"author":{"gitId":"rachelljt"},"content":"        tasks.get(num - 1).markAsDone();"},{"lineNumber":80,"author":{"gitId":"rachelljt"},"content":"    }"},{"lineNumber":81,"author":{"gitId":"rachelljt"},"content":""},{"lineNumber":82,"author":{"gitId":"rachelljt"},"content":"    /**"},{"lineNumber":83,"author":{"gitId":"rachelljt"},"content":"     * Returns a list of matching tasks."},{"lineNumber":84,"author":{"gitId":"rachelljt"},"content":"     *"},{"lineNumber":85,"author":{"gitId":"rachelljt"},"content":"     * @param keyword Keyword of the task."},{"lineNumber":86,"author":{"gitId":"rachelljt"},"content":"     * @return A lists of matching tasks."},{"lineNumber":87,"author":{"gitId":"rachelljt"},"content":"     * @throws DukeException If there are no matching tasks."},{"lineNumber":88,"author":{"gitId":"rachelljt"},"content":"     */"},{"lineNumber":89,"author":{"gitId":"rachelljt"},"content":"    public ArrayList\u003cTask\u003e findMatchingTasks(String keyword) throws DukeException {"},{"lineNumber":90,"author":{"gitId":"rachelljt"},"content":"        ArrayList\u003cTask\u003e newList \u003d new ArrayList\u003c\u003e();"},{"lineNumber":91,"author":{"gitId":"rachelljt"},"content":"        boolean hasFoundMatchingTask \u003d false;"},{"lineNumber":92,"author":{"gitId":"rachelljt"},"content":""},{"lineNumber":93,"author":{"gitId":"rachelljt"},"content":"        for (Task task : tasks) {"},{"lineNumber":94,"author":{"gitId":"rachelljt"},"content":"            if (task.getTaskName().contains(keyword)) {"},{"lineNumber":95,"author":{"gitId":"rachelljt"},"content":"                newList.add(task);"},{"lineNumber":96,"author":{"gitId":"rachelljt"},"content":"                hasFoundMatchingTask \u003d true;"},{"lineNumber":97,"author":{"gitId":"rachelljt"},"content":"            }"},{"lineNumber":98,"author":{"gitId":"rachelljt"},"content":"        }"},{"lineNumber":99,"author":{"gitId":"rachelljt"},"content":""},{"lineNumber":100,"author":{"gitId":"rachelljt"},"content":"        if (!hasFoundMatchingTask) {"},{"lineNumber":101,"author":{"gitId":"rachelljt"},"content":"            throw new DukeException(\"There are no matching tasks in your list!\");"},{"lineNumber":102,"author":{"gitId":"rachelljt"},"content":"        }"},{"lineNumber":103,"author":{"gitId":"rachelljt"},"content":""},{"lineNumber":104,"author":{"gitId":"rachelljt"},"content":"        return newList;"},{"lineNumber":105,"author":{"gitId":"rachelljt"},"content":"    }"},{"lineNumber":106,"author":{"gitId":"rachelljt"},"content":"}"}],"authorContributionMap":{"rachelljt":106}},{"path":"src/main/java/duke/tasks/ToDo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"rachelljt"},"content":"package duke.tasks;"},{"lineNumber":2,"author":{"gitId":"rachelljt"},"content":""},{"lineNumber":3,"author":{"gitId":"rachelljt"},"content":"public class ToDo extends Task {"},{"lineNumber":4,"author":{"gitId":"rachelljt"},"content":"    protected String taskName;"},{"lineNumber":5,"author":{"gitId":"rachelljt"},"content":""},{"lineNumber":6,"author":{"gitId":"rachelljt"},"content":"    public ToDo(String taskName) {"},{"lineNumber":7,"author":{"gitId":"rachelljt"},"content":"        super(taskName);"},{"lineNumber":8,"author":{"gitId":"rachelljt"},"content":"    }"},{"lineNumber":9,"author":{"gitId":"rachelljt"},"content":""},{"lineNumber":10,"author":{"gitId":"rachelljt"},"content":"    /**"},{"lineNumber":11,"author":{"gitId":"rachelljt"},"content":"     * Returns a the task type."},{"lineNumber":12,"author":{"gitId":"rachelljt"},"content":"     *"},{"lineNumber":13,"author":{"gitId":"rachelljt"},"content":"     * @return the String of the type."},{"lineNumber":14,"author":{"gitId":"rachelljt"},"content":"     */"},{"lineNumber":15,"author":{"gitId":"rachelljt"},"content":"    public String getTaskType() {"},{"lineNumber":16,"author":{"gitId":"rachelljt"},"content":"        return \"ToDo\";"},{"lineNumber":17,"author":{"gitId":"rachelljt"},"content":"    }"},{"lineNumber":18,"author":{"gitId":"rachelljt"},"content":""},{"lineNumber":19,"author":{"gitId":"rachelljt"},"content":"    /**"},{"lineNumber":20,"author":{"gitId":"rachelljt"},"content":"     * Returns a string of description to be saved in the myDuke.txt."},{"lineNumber":21,"author":{"gitId":"rachelljt"},"content":"     *"},{"lineNumber":22,"author":{"gitId":"rachelljt"},"content":"     * @return A String."},{"lineNumber":23,"author":{"gitId":"rachelljt"},"content":"     */"},{"lineNumber":24,"author":{"gitId":"rachelljt"},"content":"    @Override"},{"lineNumber":25,"author":{"gitId":"rachelljt"},"content":"    public String toSave() {"},{"lineNumber":26,"author":{"gitId":"rachelljt"},"content":"        return \"T / \" + super.isDoneString + super.taskName;"},{"lineNumber":27,"author":{"gitId":"rachelljt"},"content":"    }"},{"lineNumber":28,"author":{"gitId":"rachelljt"},"content":""},{"lineNumber":29,"author":{"gitId":"rachelljt"},"content":"    /**"},{"lineNumber":30,"author":{"gitId":"rachelljt"},"content":"     * Returns a string of description to be printed out."},{"lineNumber":31,"author":{"gitId":"rachelljt"},"content":"     *"},{"lineNumber":32,"author":{"gitId":"rachelljt"},"content":"     * @return A String."},{"lineNumber":33,"author":{"gitId":"rachelljt"},"content":"     */"},{"lineNumber":34,"author":{"gitId":"rachelljt"},"content":"    @Override"},{"lineNumber":35,"author":{"gitId":"rachelljt"},"content":"    public String toString() {"},{"lineNumber":36,"author":{"gitId":"rachelljt"},"content":"        return \"[T]\" + super.toString();"},{"lineNumber":37,"author":{"gitId":"rachelljt"},"content":"    }"},{"lineNumber":38,"author":{"gitId":"rachelljt"},"content":""},{"lineNumber":39,"author":{"gitId":"rachelljt"},"content":"}"}],"authorContributionMap":{"rachelljt":39}},{"path":"src/main/resources/view/DialogBox.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"rachelljt"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"},{"lineNumber":2,"author":{"gitId":"rachelljt"},"content":""},{"lineNumber":3,"author":{"gitId":"rachelljt"},"content":"\u003c?import javafx.geometry.Insets?\u003e"},{"lineNumber":4,"author":{"gitId":"rachelljt"},"content":"\u003c?import javafx.geometry.Point3D?\u003e"},{"lineNumber":5,"author":{"gitId":"rachelljt"},"content":"\u003c?import javafx.scene.control.Label?\u003e"},{"lineNumber":6,"author":{"gitId":"rachelljt"},"content":"\u003c?import javafx.scene.image.ImageView?\u003e"},{"lineNumber":7,"author":{"gitId":"rachelljt"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e"},{"lineNumber":8,"author":{"gitId":"rachelljt"},"content":"\u003c?import javafx.scene.text.Font?\u003e"},{"lineNumber":9,"author":{"gitId":"rachelljt"},"content":""},{"lineNumber":10,"author":{"gitId":"rachelljt"},"content":"\u003cfx:root alignment\u003d\"TOP_RIGHT\" fillHeight\u003d\"false\" maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\" prefWidth\u003d\"400.0\" type\u003d\"javafx.scene.layout.HBox\" xmlns\u003d\"http://javafx.com/javafx/15.0.1\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e"},{"lineNumber":11,"author":{"gitId":"rachelljt"},"content":"    \u003cchildren\u003e"},{"lineNumber":12,"author":{"gitId":"rachelljt"},"content":"        \u003cLabel fx:id\u003d\"dialog\" maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\" minHeight\u003d\"-Infinity\" rotate\u003d\"1.1\" text\u003d\"Label\" wrapText\u003d\"true\"\u003e"},{"lineNumber":13,"author":{"gitId":"rachelljt"},"content":"         \u003cpadding\u003e"},{"lineNumber":14,"author":{"gitId":"rachelljt"},"content":"            \u003cInsets bottom\u003d\"5.0\" left\u003d\"10.0\" right\u003d\"10.0\" top\u003d\"5.0\" /\u003e"},{"lineNumber":15,"author":{"gitId":"rachelljt"},"content":"         \u003c/padding\u003e"},{"lineNumber":16,"author":{"gitId":"rachelljt"},"content":"         \u003crotationAxis\u003e"},{"lineNumber":17,"author":{"gitId":"rachelljt"},"content":"            \u003cPoint3D /\u003e"},{"lineNumber":18,"author":{"gitId":"rachelljt"},"content":"         \u003c/rotationAxis\u003e"},{"lineNumber":19,"author":{"gitId":"rachelljt"},"content":"         \u003cfont\u003e"},{"lineNumber":20,"author":{"gitId":"rachelljt"},"content":"            \u003cFont name\u003d\"Stabillo Medium\" size\u003d\"17.0\" /\u003e"},{"lineNumber":21,"author":{"gitId":"rachelljt"},"content":"         \u003c/font\u003e"},{"lineNumber":22,"author":{"gitId":"rachelljt"},"content":"         \u003copaqueInsets\u003e"},{"lineNumber":23,"author":{"gitId":"rachelljt"},"content":"            \u003cInsets /\u003e"},{"lineNumber":24,"author":{"gitId":"rachelljt"},"content":"         \u003c/opaqueInsets\u003e\u003c/Label\u003e"},{"lineNumber":25,"author":{"gitId":"rachelljt"},"content":"        \u003cImageView fx:id\u003d\"displayPicture\" fitHeight\u003d\"99.0\" fitWidth\u003d\"99.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\" /\u003e"},{"lineNumber":26,"author":{"gitId":"rachelljt"},"content":"    \u003c/children\u003e"},{"lineNumber":27,"author":{"gitId":"rachelljt"},"content":"    \u003cpadding\u003e"},{"lineNumber":28,"author":{"gitId":"rachelljt"},"content":"        \u003cInsets bottom\u003d\"15.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"15.0\" /\u003e"},{"lineNumber":29,"author":{"gitId":"rachelljt"},"content":"    \u003c/padding\u003e"},{"lineNumber":30,"author":{"gitId":"rachelljt"},"content":"\u003c/fx:root\u003e"}],"authorContributionMap":{"rachelljt":30}},{"path":"src/main/resources/view/MainWindow.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"rachelljt"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"},{"lineNumber":2,"author":{"gitId":"rachelljt"},"content":""},{"lineNumber":3,"author":{"gitId":"rachelljt"},"content":"\u003c?import javafx.scene.control.Button?\u003e"},{"lineNumber":4,"author":{"gitId":"rachelljt"},"content":"\u003c?import javafx.scene.control.ScrollPane?\u003e"},{"lineNumber":5,"author":{"gitId":"rachelljt"},"content":"\u003c?import javafx.scene.control.TextField?\u003e"},{"lineNumber":6,"author":{"gitId":"rachelljt"},"content":"\u003c?import javafx.scene.layout.AnchorPane?\u003e"},{"lineNumber":7,"author":{"gitId":"rachelljt"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e"},{"lineNumber":8,"author":{"gitId":"rachelljt"},"content":""},{"lineNumber":9,"author":{"gitId":"rachelljt"},"content":"\u003cAnchorPane maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefHeight\u003d\"600.0\" prefWidth\u003d\"400.0\" xmlns\u003d\"http://javafx.com/javafx/15.0.1\" xmlns:fx\u003d\"http://javafx.com/fxml/1\" fx:controller\u003d\"duke.controller.MainWindow\"\u003e"},{"lineNumber":10,"author":{"gitId":"rachelljt"},"content":"    \u003cchildren\u003e"},{"lineNumber":11,"author":{"gitId":"rachelljt"},"content":"        \u003cTextField fx:id\u003d\"userInput\" layoutY\u003d\"558.0\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"324.0\" AnchorPane.bottomAnchor\u003d\"1.0\" /\u003e"},{"lineNumber":12,"author":{"gitId":"rachelljt"},"content":"        \u003cButton fx:id\u003d\"sendButton\" defaultButton\u003d\"true\" layoutX\u003d\"324.0\" layoutY\u003d\"558.0\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"76.0\" text\u003d\"Send\" textFill\u003d\"#c92a77\" /\u003e"},{"lineNumber":13,"author":{"gitId":"rachelljt"},"content":"        \u003cScrollPane fx:id\u003d\"scrollPane\" hbarPolicy\u003d\"NEVER\" hvalue\u003d\"1.0\" prefHeight\u003d\"557.0\" prefWidth\u003d\"400.0\" vvalue\u003d\"1.0\"\u003e"},{"lineNumber":14,"author":{"gitId":"rachelljt"},"content":"            \u003ccontent\u003e"},{"lineNumber":15,"author":{"gitId":"rachelljt"},"content":"                \u003cVBox fx:id\u003d\"dialogContainer\" prefHeight\u003d\"552.0\" prefWidth\u003d\"388.0\" /\u003e"},{"lineNumber":16,"author":{"gitId":"rachelljt"},"content":"            \u003c/content\u003e"},{"lineNumber":17,"author":{"gitId":"rachelljt"},"content":"        \u003c/ScrollPane\u003e"},{"lineNumber":18,"author":{"gitId":"rachelljt"},"content":"    \u003c/children\u003e"},{"lineNumber":19,"author":{"gitId":"rachelljt"},"content":"\u003c/AnchorPane\u003e"}],"authorContributionMap":{"rachelljt":19}},{"path":"src/test/java/duke/DeadlineTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"rachelljt"},"content":"package duke;"},{"lineNumber":2,"author":{"gitId":"rachelljt"},"content":""},{"lineNumber":3,"author":{"gitId":"rachelljt"},"content":"import org.junit.jupiter.api.Test;"},{"lineNumber":4,"author":{"gitId":"rachelljt"},"content":"import duke.tasks.Deadline;"},{"lineNumber":5,"author":{"gitId":"rachelljt"},"content":""},{"lineNumber":6,"author":{"gitId":"rachelljt"},"content":"import java.time.LocalDateTime;"},{"lineNumber":7,"author":{"gitId":"rachelljt"},"content":""},{"lineNumber":8,"author":{"gitId":"rachelljt"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;"},{"lineNumber":9,"author":{"gitId":"rachelljt"},"content":""},{"lineNumber":10,"author":{"gitId":"rachelljt"},"content":"public class DeadlineTest {"},{"lineNumber":11,"author":{"gitId":"rachelljt"},"content":"    @Test"},{"lineNumber":12,"author":{"gitId":"rachelljt"},"content":"    public void dummyTest() {"},{"lineNumber":13,"author":{"gitId":"rachelljt"},"content":"        Deadline deadline \u003d new Deadline(\"hello\", LocalDateTime.now());"},{"lineNumber":14,"author":{"gitId":"rachelljt"},"content":"        assertEquals(\"Deadline\",deadline.getTaskType());"},{"lineNumber":15,"author":{"gitId":"rachelljt"},"content":"    }"},{"lineNumber":16,"author":{"gitId":"rachelljt"},"content":"}"}],"authorContributionMap":{"rachelljt":16}},{"path":"src/test/java/duke/DukeTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"rachelljt"},"content":"package duke;"},{"lineNumber":2,"author":{"gitId":"rachelljt"},"content":""},{"lineNumber":3,"author":{"gitId":"rachelljt"},"content":"import org.junit.jupiter.api.Test;"},{"lineNumber":4,"author":{"gitId":"rachelljt"},"content":""},{"lineNumber":5,"author":{"gitId":"rachelljt"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;"},{"lineNumber":6,"author":{"gitId":"rachelljt"},"content":""},{"lineNumber":7,"author":{"gitId":"rachelljt"},"content":"public class DukeTest {"},{"lineNumber":8,"author":{"gitId":"rachelljt"},"content":"    @Test"},{"lineNumber":9,"author":{"gitId":"rachelljt"},"content":"    public void dummyTest() {"},{"lineNumber":10,"author":{"gitId":"rachelljt"},"content":"        assertEquals(2,2);"},{"lineNumber":11,"author":{"gitId":"rachelljt"},"content":"    }"},{"lineNumber":12,"author":{"gitId":"rachelljt"},"content":"}"}],"authorContributionMap":{"rachelljt":12}},{"path":"src/test/java/duke/EventTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"rachelljt"},"content":"package duke;"},{"lineNumber":2,"author":{"gitId":"rachelljt"},"content":""},{"lineNumber":3,"author":{"gitId":"rachelljt"},"content":"import org.junit.jupiter.api.Test;"},{"lineNumber":4,"author":{"gitId":"rachelljt"},"content":"import duke.tasks.Event;"},{"lineNumber":5,"author":{"gitId":"rachelljt"},"content":""},{"lineNumber":6,"author":{"gitId":"rachelljt"},"content":"import java.time.LocalDateTime;"},{"lineNumber":7,"author":{"gitId":"rachelljt"},"content":""},{"lineNumber":8,"author":{"gitId":"rachelljt"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;"},{"lineNumber":9,"author":{"gitId":"rachelljt"},"content":""},{"lineNumber":10,"author":{"gitId":"rachelljt"},"content":"public class EventTest {"},{"lineNumber":11,"author":{"gitId":"rachelljt"},"content":"    @Test"},{"lineNumber":12,"author":{"gitId":"rachelljt"},"content":"    public void dummyTest() {"},{"lineNumber":13,"author":{"gitId":"rachelljt"},"content":"        Event event \u003d new Event(\"hello\", LocalDateTime.now());"},{"lineNumber":14,"author":{"gitId":"rachelljt"},"content":"        assertEquals(\"Event\", event.getTaskType());"},{"lineNumber":15,"author":{"gitId":"rachelljt"},"content":""},{"lineNumber":16,"author":{"gitId":"rachelljt"},"content":"    }"},{"lineNumber":17,"author":{"gitId":"rachelljt"},"content":"}"}],"authorContributionMap":{"rachelljt":17}},{"path":"src/test/java/duke/ToDoTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"rachelljt"},"content":"package duke;"},{"lineNumber":2,"author":{"gitId":"rachelljt"},"content":""},{"lineNumber":3,"author":{"gitId":"rachelljt"},"content":"import org.junit.jupiter.api.Test;"},{"lineNumber":4,"author":{"gitId":"rachelljt"},"content":"import duke.tasks.ToDo;"},{"lineNumber":5,"author":{"gitId":"rachelljt"},"content":""},{"lineNumber":6,"author":{"gitId":"rachelljt"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;"},{"lineNumber":7,"author":{"gitId":"rachelljt"},"content":""},{"lineNumber":8,"author":{"gitId":"rachelljt"},"content":""},{"lineNumber":9,"author":{"gitId":"rachelljt"},"content":"public class ToDoTest {"},{"lineNumber":10,"author":{"gitId":"rachelljt"},"content":""},{"lineNumber":11,"author":{"gitId":"rachelljt"},"content":"    @Test"},{"lineNumber":12,"author":{"gitId":"rachelljt"},"content":"    public void dummyTest() {"},{"lineNumber":13,"author":{"gitId":"rachelljt"},"content":"        ToDo todo \u003d new ToDo(\"hello\");"},{"lineNumber":14,"author":{"gitId":"rachelljt"},"content":"        assertEquals(\"ToDo\",todo.getTaskType());"},{"lineNumber":15,"author":{"gitId":"rachelljt"},"content":""},{"lineNumber":16,"author":{"gitId":"rachelljt"},"content":"    }"},{"lineNumber":17,"author":{"gitId":"rachelljt"},"content":""},{"lineNumber":18,"author":{"gitId":"rachelljt"},"content":"}"}],"authorContributionMap":{"rachelljt":18}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"rachelljt"},"content":"deadline homework /by 12 jan"},{"lineNumber":2,"author":{"gitId":"rachelljt"},"content":"todo eat medicine"},{"lineNumber":3,"author":{"gitId":"rachelljt"},"content":"event shopping /at orchard"},{"lineNumber":4,"author":{"gitId":"rachelljt"},"content":"done 2"},{"lineNumber":5,"author":{"gitId":"rachelljt"},"content":"delete 2"}],"authorContributionMap":{"rachelljt":5}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF"},{"lineNumber":2,"author":{"gitId":"-"},"content":""},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin"},{"lineNumber":5,"author":{"gitId":"-"},"content":""},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run"},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT"},{"lineNumber":8,"author":{"gitId":"-"},"content":""},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder"},{"lineNumber":10,"author":{"gitId":"-"},"content":"javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\*.java"},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 ("},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1"},{"lineNumber":14,"author":{"gitId":"-"},"content":")"},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0"},{"lineNumber":16,"author":{"gitId":"-"},"content":""},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"},{"lineNumber":18,"author":{"gitId":"rachelljt"},"content":"java -classpath ..\\bin duke.Duke \u003c input.txt \u003e ACTUAL.TXT"},{"lineNumber":19,"author":{"gitId":"-"},"content":""},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM compare the output to the expected output"},{"lineNumber":21,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT"}],"authorContributionMap":{"rachelljt":1,"-":20}}]
