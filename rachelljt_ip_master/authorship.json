[{"path":"README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"rachelljt"},"content":"# duke.Duke project template"},{"lineNumber":2,"author":{"gitId":"-"},"content":""},{"lineNumber":3,"author":{"gitId":"-"},"content":"This is a project template for a greenfield Java project. It\u0027s named after the Java mascot _Duke_. Given below are instructions on how to use it."},{"lineNumber":4,"author":{"gitId":"-"},"content":""},{"lineNumber":5,"author":{"gitId":"-"},"content":"## Setting up in Intellij"},{"lineNumber":6,"author":{"gitId":"-"},"content":""},{"lineNumber":7,"author":{"gitId":"-"},"content":"Prerequisites: JDK 11, update Intellij to the most recent version."},{"lineNumber":8,"author":{"gitId":"-"},"content":""},{"lineNumber":9,"author":{"gitId":"-"},"content":"1. Open Intellij (if you are not in the welcome screen, click `File` \u003e `Close Project` to close the existing project dialog first)"},{"lineNumber":10,"author":{"gitId":"-"},"content":"1. Set up the correct JDK version, as follows:"},{"lineNumber":11,"author":{"gitId":"-"},"content":"   1. Click `Configure` \u003e `Structure for New Projects` and then `Project Settings` \u003e `Project` \u003e `Project SDK`"},{"lineNumber":12,"author":{"gitId":"-"},"content":"   1. If JDK 11 is listed in the drop down, select it. If it is not, click `New...` and select the directory where you installed JDK 11"},{"lineNumber":13,"author":{"gitId":"-"},"content":"   1. Click `OK`"},{"lineNumber":14,"author":{"gitId":"-"},"content":"1. Import the project into Intellij as follows:"},{"lineNumber":15,"author":{"gitId":"-"},"content":"   1. Click `Open or Import`."},{"lineNumber":16,"author":{"gitId":"-"},"content":"   1. Select the project directory, and click `OK`"},{"lineNumber":17,"author":{"gitId":"-"},"content":"   1. If there are any further prompts, accept the defaults."},{"lineNumber":18,"author":{"gitId":"rachelljt"},"content":"1. After the importing is complete, locate the `src/main/java/duke.Duke.java` file, right-click it, and choose `Run duke.Duke.main()`. If the setup is correct, you should see something like the below:"},{"lineNumber":19,"author":{"gitId":"-"},"content":"   ```"},{"lineNumber":20,"author":{"gitId":"-"},"content":"   Hello from"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    ____        _        "},{"lineNumber":22,"author":{"gitId":"-"},"content":"   |  _ \\ _   _| | _____ "},{"lineNumber":23,"author":{"gitId":"-"},"content":"   | | | | | | | |/ / _ \\"},{"lineNumber":24,"author":{"gitId":"-"},"content":"   | |_| | |_| |   \u003c  __/"},{"lineNumber":25,"author":{"gitId":"-"},"content":"   |____/ \\__,_|_|\\_\\___|"},{"lineNumber":26,"author":{"gitId":"-"},"content":"   ```"}],"authorContributionMap":{"rachelljt":2,"-":24}},{"path":"src/main/java/duke/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"rachelljt"},"content":"package duke;"},{"lineNumber":2,"author":{"gitId":"rachelljt"},"content":""},{"lineNumber":3,"author":{"gitId":"rachelljt"},"content":"import duke.Exceptions.*;"},{"lineNumber":4,"author":{"gitId":"rachelljt"},"content":"import duke.ui.Ui;"},{"lineNumber":5,"author":{"gitId":"rachelljt"},"content":"import duke.command.Command;"},{"lineNumber":6,"author":{"gitId":"rachelljt"},"content":"import duke.parser.Parser;"},{"lineNumber":7,"author":{"gitId":"rachelljt"},"content":"import duke.storage.Storage;"},{"lineNumber":8,"author":{"gitId":"rachelljt"},"content":"import duke.tasks.TaskList;"},{"lineNumber":9,"author":{"gitId":"rachelljt"},"content":""},{"lineNumber":10,"author":{"gitId":"rachelljt"},"content":""},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class Duke {"},{"lineNumber":12,"author":{"gitId":"rachelljt"},"content":"    private final Storage storage;"},{"lineNumber":13,"author":{"gitId":"rachelljt"},"content":"    private TaskList tasks;"},{"lineNumber":14,"author":{"gitId":"rachelljt"},"content":"    private final Ui ui;"},{"lineNumber":15,"author":{"gitId":"rachelljt"},"content":""},{"lineNumber":16,"author":{"gitId":"rachelljt"},"content":"    /**"},{"lineNumber":17,"author":{"gitId":"rachelljt"},"content":"     * Initialising certain fields."},{"lineNumber":18,"author":{"gitId":"rachelljt"},"content":"     *"},{"lineNumber":19,"author":{"gitId":"rachelljt"},"content":"     * @throws DukeException If there are Exceptions."},{"lineNumber":20,"author":{"gitId":"rachelljt"},"content":"     */"},{"lineNumber":21,"author":{"gitId":"rachelljt"},"content":"    public Duke() throws DukeException {"},{"lineNumber":22,"author":{"gitId":"rachelljt"},"content":"        ui \u003d new Ui();"},{"lineNumber":23,"author":{"gitId":"rachelljt"},"content":"        ui.welcomeMessage();"},{"lineNumber":24,"author":{"gitId":"rachelljt"},"content":"        storage \u003d new Storage();"},{"lineNumber":25,"author":{"gitId":"rachelljt"},"content":"        try {"},{"lineNumber":26,"author":{"gitId":"rachelljt"},"content":"            tasks \u003d new TaskList(storage.displayTasks());"},{"lineNumber":27,"author":{"gitId":"rachelljt"},"content":"        } catch (DukeException e) {"},{"lineNumber":28,"author":{"gitId":"rachelljt"},"content":"            ui.printExceptions(e.getMessage());"},{"lineNumber":29,"author":{"gitId":"rachelljt"},"content":"            tasks \u003d new TaskList();"},{"lineNumber":30,"author":{"gitId":"rachelljt"},"content":""},{"lineNumber":31,"author":{"gitId":"rachelljt"},"content":"        }"},{"lineNumber":32,"author":{"gitId":"rachelljt"},"content":"    }"},{"lineNumber":33,"author":{"gitId":"rachelljt"},"content":""},{"lineNumber":34,"author":{"gitId":"rachelljt"},"content":"    /**"},{"lineNumber":35,"author":{"gitId":"rachelljt"},"content":"     * Runs the program."},{"lineNumber":36,"author":{"gitId":"rachelljt"},"content":"     */"},{"lineNumber":37,"author":{"gitId":"rachelljt"},"content":"    public void run() {"},{"lineNumber":38,"author":{"gitId":"rachelljt"},"content":"        boolean isExit \u003d false;"},{"lineNumber":39,"author":{"gitId":"rachelljt"},"content":"        while (!isExit) {"},{"lineNumber":40,"author":{"gitId":"rachelljt"},"content":"            try {"},{"lineNumber":41,"author":{"gitId":"rachelljt"},"content":"                String str \u003d ui.readCommand();"},{"lineNumber":42,"author":{"gitId":"rachelljt"},"content":"                Command cmd \u003d Parser.parseTask(str);"},{"lineNumber":43,"author":{"gitId":"rachelljt"},"content":"                cmd.execute(tasks, ui, storage);"},{"lineNumber":44,"author":{"gitId":"rachelljt"},"content":"                isExit \u003d cmd.isExit();"},{"lineNumber":45,"author":{"gitId":"rachelljt"},"content":"            } catch (DukeException e) {"},{"lineNumber":46,"author":{"gitId":"rachelljt"},"content":"                ui.printExceptions(e.getMessage());"},{"lineNumber":47,"author":{"gitId":"rachelljt"},"content":"            }"},{"lineNumber":48,"author":{"gitId":"rachelljt"},"content":"        }"},{"lineNumber":49,"author":{"gitId":"rachelljt"},"content":"    }"},{"lineNumber":50,"author":{"gitId":"rachelljt"},"content":""},{"lineNumber":51,"author":{"gitId":"rachelljt"},"content":""},{"lineNumber":52,"author":{"gitId":"rachelljt"},"content":"    public static void main(String[] args) throws DukeException {"},{"lineNumber":53,"author":{"gitId":"rachelljt"},"content":"        new Duke().run();"},{"lineNumber":54,"author":{"gitId":"rachelljt"},"content":"    }"},{"lineNumber":55,"author":{"gitId":"-"},"content":"}"}],"authorContributionMap":{"rachelljt":53,"-":2}},{"path":"src/main/java/duke/Exceptions/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"rachelljt"},"content":"package duke.Exceptions;"},{"lineNumber":2,"author":{"gitId":"rachelljt"},"content":""},{"lineNumber":3,"author":{"gitId":"rachelljt"},"content":"public class DukeException extends Exception {"},{"lineNumber":4,"author":{"gitId":"rachelljt"},"content":"    public DukeException(String message) {"},{"lineNumber":5,"author":{"gitId":"rachelljt"},"content":"        super(message);"},{"lineNumber":6,"author":{"gitId":"rachelljt"},"content":"    }"},{"lineNumber":7,"author":{"gitId":"rachelljt"},"content":"}"}],"authorContributionMap":{"rachelljt":7}},{"path":"src/main/java/duke/Exceptions/EmptyLineException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"rachelljt"},"content":"package duke.Exceptions;"},{"lineNumber":2,"author":{"gitId":"rachelljt"},"content":""},{"lineNumber":3,"author":{"gitId":"rachelljt"},"content":"public class EmptyLineException extends DukeException {"},{"lineNumber":4,"author":{"gitId":"rachelljt"},"content":"    public EmptyLineException(String message) {"},{"lineNumber":5,"author":{"gitId":"rachelljt"},"content":"        super(\"☹ OOPS!!! The input line cannot be empty.\");"},{"lineNumber":6,"author":{"gitId":"rachelljt"},"content":"    }"},{"lineNumber":7,"author":{"gitId":"rachelljt"},"content":"}"}],"authorContributionMap":{"rachelljt":7}},{"path":"src/main/java/duke/Exceptions/IncorrectNumberException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"rachelljt"},"content":"package duke.Exceptions;"},{"lineNumber":2,"author":{"gitId":"rachelljt"},"content":""},{"lineNumber":3,"author":{"gitId":"rachelljt"},"content":"public class IncorrectNumberException extends DukeException {"},{"lineNumber":4,"author":{"gitId":"rachelljt"},"content":"    public IncorrectNumberException(int num) {"},{"lineNumber":5,"author":{"gitId":"rachelljt"},"content":"        super(\"☹ OOPS!!! The task number \""},{"lineNumber":6,"author":{"gitId":"rachelljt"},"content":"                + num + \" cannot be found.\" );"},{"lineNumber":7,"author":{"gitId":"rachelljt"},"content":"    }"},{"lineNumber":8,"author":{"gitId":"rachelljt"},"content":""},{"lineNumber":9,"author":{"gitId":"rachelljt"},"content":"}"}],"authorContributionMap":{"rachelljt":9}},{"path":"src/main/java/duke/Exceptions/IncorrectTypeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"rachelljt"},"content":"package duke.Exceptions;"},{"lineNumber":2,"author":{"gitId":"rachelljt"},"content":""},{"lineNumber":3,"author":{"gitId":"rachelljt"},"content":"public class IncorrectTypeException extends DukeException {"},{"lineNumber":4,"author":{"gitId":"rachelljt"},"content":"    public IncorrectTypeException(String message) {"},{"lineNumber":5,"author":{"gitId":"rachelljt"},"content":"        super(\"☹ OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\");"},{"lineNumber":6,"author":{"gitId":"rachelljt"},"content":"    }"},{"lineNumber":7,"author":{"gitId":"rachelljt"},"content":"}"}],"authorContributionMap":{"rachelljt":7}},{"path":"src/main/java/duke/Exceptions/MissingDateException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"rachelljt"},"content":"package duke.Exceptions;"},{"lineNumber":2,"author":{"gitId":"rachelljt"},"content":""},{"lineNumber":3,"author":{"gitId":"rachelljt"},"content":"public class MissingDateException extends DukeException {"},{"lineNumber":4,"author":{"gitId":"rachelljt"},"content":"    public MissingDateException(String message) {"},{"lineNumber":5,"author":{"gitId":"rachelljt"},"content":"        super(\"☹ OOPS!!! Please enter a date/time.\");"},{"lineNumber":6,"author":{"gitId":"rachelljt"},"content":"    }"},{"lineNumber":7,"author":{"gitId":"rachelljt"},"content":"}"}],"authorContributionMap":{"rachelljt":7}},{"path":"src/main/java/duke/Exceptions/UnknownInputException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"rachelljt"},"content":"package duke.Exceptions;"},{"lineNumber":2,"author":{"gitId":"rachelljt"},"content":""},{"lineNumber":3,"author":{"gitId":"rachelljt"},"content":"public class UnknownInputException extends DukeException {"},{"lineNumber":4,"author":{"gitId":"rachelljt"},"content":"    public UnknownInputException(String type) {"},{"lineNumber":5,"author":{"gitId":"rachelljt"},"content":"        super(\"☹ OOPS!!! The description of a \""},{"lineNumber":6,"author":{"gitId":"rachelljt"},"content":"                + type + \" function cannot be empty.\");"},{"lineNumber":7,"author":{"gitId":"rachelljt"},"content":"    }"},{"lineNumber":8,"author":{"gitId":"rachelljt"},"content":"}"}],"authorContributionMap":{"rachelljt":8}},{"path":"src/main/java/duke/command/AddDeadlineCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"rachelljt"},"content":"package duke.command;"},{"lineNumber":2,"author":{"gitId":"rachelljt"},"content":""},{"lineNumber":3,"author":{"gitId":"rachelljt"},"content":"import duke.Exceptions.DukeException;"},{"lineNumber":4,"author":{"gitId":"rachelljt"},"content":"import duke.Exceptions.MissingDateException;"},{"lineNumber":5,"author":{"gitId":"rachelljt"},"content":"import duke.Exceptions.UnknownInputException;"},{"lineNumber":6,"author":{"gitId":"rachelljt"},"content":"import duke.ui.Ui;"},{"lineNumber":7,"author":{"gitId":"rachelljt"},"content":"import duke.storage.Storage;"},{"lineNumber":8,"author":{"gitId":"rachelljt"},"content":"import duke.tasks.Deadline;"},{"lineNumber":9,"author":{"gitId":"rachelljt"},"content":"import duke.tasks.TaskList;"},{"lineNumber":10,"author":{"gitId":"rachelljt"},"content":""},{"lineNumber":11,"author":{"gitId":"rachelljt"},"content":"import java.time.LocalDateTime;"},{"lineNumber":12,"author":{"gitId":"rachelljt"},"content":"import java.time.format.DateTimeFormatter;"},{"lineNumber":13,"author":{"gitId":"rachelljt"},"content":""},{"lineNumber":14,"author":{"gitId":"rachelljt"},"content":"public class AddDeadlineCommand extends Command{"},{"lineNumber":15,"author":{"gitId":"rachelljt"},"content":"    private final Deadline deadline;"},{"lineNumber":16,"author":{"gitId":"rachelljt"},"content":""},{"lineNumber":17,"author":{"gitId":"rachelljt"},"content":"    public AddDeadlineCommand(String description) throws DukeException {"},{"lineNumber":18,"author":{"gitId":"rachelljt"},"content":"        if (description.isBlank()) {"},{"lineNumber":19,"author":{"gitId":"rachelljt"},"content":"            throw new UnknownInputException(\"deadline\");"},{"lineNumber":20,"author":{"gitId":"rachelljt"},"content":"        }"},{"lineNumber":21,"author":{"gitId":"rachelljt"},"content":""},{"lineNumber":22,"author":{"gitId":"rachelljt"},"content":"        String[] name \u003d description.split(\" /by \", 2);"},{"lineNumber":23,"author":{"gitId":"rachelljt"},"content":""},{"lineNumber":24,"author":{"gitId":"rachelljt"},"content":"        if (name.length !\u003d 2) {"},{"lineNumber":25,"author":{"gitId":"rachelljt"},"content":"            throw new MissingDateException(\"\");"},{"lineNumber":26,"author":{"gitId":"rachelljt"},"content":"        }"},{"lineNumber":27,"author":{"gitId":"rachelljt"},"content":""},{"lineNumber":28,"author":{"gitId":"rachelljt"},"content":"        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"dd/MM/yyyy HHmm\");"},{"lineNumber":29,"author":{"gitId":"rachelljt"},"content":"        LocalDateTime dateTime \u003d LocalDateTime.parse(name[1], formatter);"},{"lineNumber":30,"author":{"gitId":"rachelljt"},"content":"        this.deadline \u003d new Deadline(name[0], dateTime);"},{"lineNumber":31,"author":{"gitId":"rachelljt"},"content":"    }"},{"lineNumber":32,"author":{"gitId":"rachelljt"},"content":""},{"lineNumber":33,"author":{"gitId":"rachelljt"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage) throws DukeException {"},{"lineNumber":34,"author":{"gitId":"rachelljt"},"content":"        tasks.add(this.deadline);"},{"lineNumber":35,"author":{"gitId":"rachelljt"},"content":"        ui.displayAddedTask(this.deadline, tasks.getNumOfTasks());"},{"lineNumber":36,"author":{"gitId":"rachelljt"},"content":"        storage.saveTasks(tasks.getTasks());"},{"lineNumber":37,"author":{"gitId":"rachelljt"},"content":"    }"},{"lineNumber":38,"author":{"gitId":"rachelljt"},"content":""},{"lineNumber":39,"author":{"gitId":"rachelljt"},"content":"    public boolean isExit() {"},{"lineNumber":40,"author":{"gitId":"rachelljt"},"content":"         return false;"},{"lineNumber":41,"author":{"gitId":"rachelljt"},"content":"    }"},{"lineNumber":42,"author":{"gitId":"rachelljt"},"content":""},{"lineNumber":43,"author":{"gitId":"rachelljt"},"content":""},{"lineNumber":44,"author":{"gitId":"rachelljt"},"content":"}"}],"authorContributionMap":{"rachelljt":44}},{"path":"src/main/java/duke/command/AddEventCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"rachelljt"},"content":"package duke.command;"},{"lineNumber":2,"author":{"gitId":"rachelljt"},"content":""},{"lineNumber":3,"author":{"gitId":"rachelljt"},"content":"import duke.Exceptions.DukeException;"},{"lineNumber":4,"author":{"gitId":"rachelljt"},"content":"import duke.Exceptions.MissingDateException;"},{"lineNumber":5,"author":{"gitId":"rachelljt"},"content":"import duke.Exceptions.UnknownInputException;"},{"lineNumber":6,"author":{"gitId":"rachelljt"},"content":"import duke.ui.Ui;"},{"lineNumber":7,"author":{"gitId":"rachelljt"},"content":"import duke.storage.Storage;"},{"lineNumber":8,"author":{"gitId":"rachelljt"},"content":"import duke.tasks.Event;"},{"lineNumber":9,"author":{"gitId":"rachelljt"},"content":"import duke.tasks.TaskList;"},{"lineNumber":10,"author":{"gitId":"rachelljt"},"content":""},{"lineNumber":11,"author":{"gitId":"rachelljt"},"content":"import java.time.LocalDateTime;"},{"lineNumber":12,"author":{"gitId":"rachelljt"},"content":"import java.time.format.DateTimeFormatter;"},{"lineNumber":13,"author":{"gitId":"rachelljt"},"content":""},{"lineNumber":14,"author":{"gitId":"rachelljt"},"content":"public class AddEventCommand extends Command {"},{"lineNumber":15,"author":{"gitId":"rachelljt"},"content":"    private final Event event;"},{"lineNumber":16,"author":{"gitId":"rachelljt"},"content":""},{"lineNumber":17,"author":{"gitId":"rachelljt"},"content":"    public AddEventCommand(String description) throws DukeException {"},{"lineNumber":18,"author":{"gitId":"rachelljt"},"content":"        if (description.isBlank()) {"},{"lineNumber":19,"author":{"gitId":"rachelljt"},"content":"            throw new UnknownInputException(\"event\");"},{"lineNumber":20,"author":{"gitId":"rachelljt"},"content":"        }"},{"lineNumber":21,"author":{"gitId":"rachelljt"},"content":""},{"lineNumber":22,"author":{"gitId":"rachelljt"},"content":"        String[] name \u003d description.split(\" /at \", 2);"},{"lineNumber":23,"author":{"gitId":"rachelljt"},"content":""},{"lineNumber":24,"author":{"gitId":"rachelljt"},"content":"        if (name.length !\u003d 2) {"},{"lineNumber":25,"author":{"gitId":"rachelljt"},"content":"            throw new MissingDateException(\"\");"},{"lineNumber":26,"author":{"gitId":"rachelljt"},"content":"        }"},{"lineNumber":27,"author":{"gitId":"rachelljt"},"content":""},{"lineNumber":28,"author":{"gitId":"rachelljt"},"content":"        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"dd/MM/yyyy HHmm\");"},{"lineNumber":29,"author":{"gitId":"rachelljt"},"content":"        LocalDateTime dateTime \u003d LocalDateTime.parse(name[1], formatter);"},{"lineNumber":30,"author":{"gitId":"rachelljt"},"content":"        this.event \u003d new Event(name[0], dateTime);"},{"lineNumber":31,"author":{"gitId":"rachelljt"},"content":"    }"},{"lineNumber":32,"author":{"gitId":"rachelljt"},"content":""},{"lineNumber":33,"author":{"gitId":"rachelljt"},"content":""},{"lineNumber":34,"author":{"gitId":"rachelljt"},"content":"    @Override"},{"lineNumber":35,"author":{"gitId":"rachelljt"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage) throws DukeException {"},{"lineNumber":36,"author":{"gitId":"rachelljt"},"content":"        tasks.add(this.event);"},{"lineNumber":37,"author":{"gitId":"rachelljt"},"content":"        ui.displayAddedTask(this.event, tasks.getNumOfTasks());"},{"lineNumber":38,"author":{"gitId":"rachelljt"},"content":"        storage.saveTasks(tasks.getTasks());"},{"lineNumber":39,"author":{"gitId":"rachelljt"},"content":"    }"},{"lineNumber":40,"author":{"gitId":"rachelljt"},"content":""},{"lineNumber":41,"author":{"gitId":"rachelljt"},"content":"    @Override"},{"lineNumber":42,"author":{"gitId":"rachelljt"},"content":"    public boolean isExit() {"},{"lineNumber":43,"author":{"gitId":"rachelljt"},"content":"        return false;"},{"lineNumber":44,"author":{"gitId":"rachelljt"},"content":"    }"},{"lineNumber":45,"author":{"gitId":"rachelljt"},"content":"}"}],"authorContributionMap":{"rachelljt":45}},{"path":"src/main/java/duke/command/AddToDoCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"rachelljt"},"content":"package duke.command;"},{"lineNumber":2,"author":{"gitId":"rachelljt"},"content":""},{"lineNumber":3,"author":{"gitId":"rachelljt"},"content":"import duke.Exceptions.DukeException;"},{"lineNumber":4,"author":{"gitId":"rachelljt"},"content":"import duke.Exceptions.UnknownInputException;"},{"lineNumber":5,"author":{"gitId":"rachelljt"},"content":"import duke.ui.Ui;"},{"lineNumber":6,"author":{"gitId":"rachelljt"},"content":"import duke.storage.Storage;"},{"lineNumber":7,"author":{"gitId":"rachelljt"},"content":"import duke.tasks.TaskList;"},{"lineNumber":8,"author":{"gitId":"rachelljt"},"content":"import duke.tasks.ToDo;"},{"lineNumber":9,"author":{"gitId":"rachelljt"},"content":""},{"lineNumber":10,"author":{"gitId":"rachelljt"},"content":"public class AddToDoCommand extends Command{"},{"lineNumber":11,"author":{"gitId":"rachelljt"},"content":"    private final ToDo todo;"},{"lineNumber":12,"author":{"gitId":"rachelljt"},"content":""},{"lineNumber":13,"author":{"gitId":"rachelljt"},"content":"    public AddToDoCommand(String description) throws DukeException {"},{"lineNumber":14,"author":{"gitId":"rachelljt"},"content":"        if (description.isBlank()) {"},{"lineNumber":15,"author":{"gitId":"rachelljt"},"content":"            throw new UnknownInputException(\"todo\");"},{"lineNumber":16,"author":{"gitId":"rachelljt"},"content":"        }"},{"lineNumber":17,"author":{"gitId":"rachelljt"},"content":""},{"lineNumber":18,"author":{"gitId":"rachelljt"},"content":"        this.todo \u003d new ToDo(description);"},{"lineNumber":19,"author":{"gitId":"rachelljt"},"content":"    }"},{"lineNumber":20,"author":{"gitId":"rachelljt"},"content":""},{"lineNumber":21,"author":{"gitId":"rachelljt"},"content":"    @Override"},{"lineNumber":22,"author":{"gitId":"rachelljt"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage) throws DukeException {"},{"lineNumber":23,"author":{"gitId":"rachelljt"},"content":"        tasks.add(todo);"},{"lineNumber":24,"author":{"gitId":"rachelljt"},"content":"        ui.displayAddedTask(todo, tasks.getNumOfTasks());"},{"lineNumber":25,"author":{"gitId":"rachelljt"},"content":"        storage.saveTasks(tasks.getTasks());"},{"lineNumber":26,"author":{"gitId":"rachelljt"},"content":"    }"},{"lineNumber":27,"author":{"gitId":"rachelljt"},"content":""},{"lineNumber":28,"author":{"gitId":"rachelljt"},"content":"    @Override"},{"lineNumber":29,"author":{"gitId":"rachelljt"},"content":"    public boolean isExit() {"},{"lineNumber":30,"author":{"gitId":"rachelljt"},"content":"        return false;"},{"lineNumber":31,"author":{"gitId":"rachelljt"},"content":"    }"},{"lineNumber":32,"author":{"gitId":"rachelljt"},"content":"}"}],"authorContributionMap":{"rachelljt":32}},{"path":"src/main/java/duke/command/ByeCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"rachelljt"},"content":"package duke.command;"},{"lineNumber":2,"author":{"gitId":"rachelljt"},"content":""},{"lineNumber":3,"author":{"gitId":"rachelljt"},"content":"import duke.Exceptions.DukeException;"},{"lineNumber":4,"author":{"gitId":"rachelljt"},"content":"import duke.ui.Ui;"},{"lineNumber":5,"author":{"gitId":"rachelljt"},"content":"import duke.storage.Storage;"},{"lineNumber":6,"author":{"gitId":"rachelljt"},"content":"import duke.tasks.TaskList;"},{"lineNumber":7,"author":{"gitId":"rachelljt"},"content":""},{"lineNumber":8,"author":{"gitId":"rachelljt"},"content":"public class ByeCommand extends Command {"},{"lineNumber":9,"author":{"gitId":"rachelljt"},"content":""},{"lineNumber":10,"author":{"gitId":"rachelljt"},"content":"    public ByeCommand(String description) {"},{"lineNumber":11,"author":{"gitId":"rachelljt"},"content":""},{"lineNumber":12,"author":{"gitId":"rachelljt"},"content":"    }"},{"lineNumber":13,"author":{"gitId":"rachelljt"},"content":""},{"lineNumber":14,"author":{"gitId":"rachelljt"},"content":"    @Override"},{"lineNumber":15,"author":{"gitId":"rachelljt"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage) throws DukeException {"},{"lineNumber":16,"author":{"gitId":"rachelljt"},"content":"        ui.goodbyeMessage();"},{"lineNumber":17,"author":{"gitId":"rachelljt"},"content":"    }"},{"lineNumber":18,"author":{"gitId":"rachelljt"},"content":""},{"lineNumber":19,"author":{"gitId":"rachelljt"},"content":"    @Override"},{"lineNumber":20,"author":{"gitId":"rachelljt"},"content":"    public boolean isExit() {"},{"lineNumber":21,"author":{"gitId":"rachelljt"},"content":"        return true;"},{"lineNumber":22,"author":{"gitId":"rachelljt"},"content":"    }"},{"lineNumber":23,"author":{"gitId":"rachelljt"},"content":"}"}],"authorContributionMap":{"rachelljt":23}},{"path":"src/main/java/duke/command/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"rachelljt"},"content":"package duke.command;"},{"lineNumber":2,"author":{"gitId":"rachelljt"},"content":""},{"lineNumber":3,"author":{"gitId":"rachelljt"},"content":"import duke.ui.Ui;"},{"lineNumber":4,"author":{"gitId":"rachelljt"},"content":"import duke.storage.Storage;"},{"lineNumber":5,"author":{"gitId":"rachelljt"},"content":"import duke.Exceptions.DukeException;"},{"lineNumber":6,"author":{"gitId":"rachelljt"},"content":"import duke.tasks.TaskList;"},{"lineNumber":7,"author":{"gitId":"rachelljt"},"content":""},{"lineNumber":8,"author":{"gitId":"rachelljt"},"content":"public abstract class Command {"},{"lineNumber":9,"author":{"gitId":"rachelljt"},"content":"    public abstract void execute(TaskList tasks, Ui ui, Storage storage) throws DukeException;"},{"lineNumber":10,"author":{"gitId":"rachelljt"},"content":""},{"lineNumber":11,"author":{"gitId":"rachelljt"},"content":"    public abstract boolean isExit();"},{"lineNumber":12,"author":{"gitId":"rachelljt"},"content":"}"}],"authorContributionMap":{"rachelljt":12}},{"path":"src/main/java/duke/command/DeleteCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"rachelljt"},"content":"package duke.command;"},{"lineNumber":2,"author":{"gitId":"rachelljt"},"content":""},{"lineNumber":3,"author":{"gitId":"rachelljt"},"content":"import duke.Exceptions.DukeException;"},{"lineNumber":4,"author":{"gitId":"rachelljt"},"content":"import duke.Exceptions.IncorrectNumberException;"},{"lineNumber":5,"author":{"gitId":"rachelljt"},"content":"import duke.ui.Ui;"},{"lineNumber":6,"author":{"gitId":"rachelljt"},"content":"import duke.storage.Storage;"},{"lineNumber":7,"author":{"gitId":"rachelljt"},"content":"import duke.tasks.Task;"},{"lineNumber":8,"author":{"gitId":"rachelljt"},"content":"import duke.tasks.TaskList;"},{"lineNumber":9,"author":{"gitId":"rachelljt"},"content":""},{"lineNumber":10,"author":{"gitId":"rachelljt"},"content":"public class DeleteCommand extends Command{"},{"lineNumber":11,"author":{"gitId":"rachelljt"},"content":"    private final int taskNum;"},{"lineNumber":12,"author":{"gitId":"rachelljt"},"content":""},{"lineNumber":13,"author":{"gitId":"rachelljt"},"content":"    public DeleteCommand(String description) throws DukeException {"},{"lineNumber":14,"author":{"gitId":"rachelljt"},"content":"        if (description.isBlank()) {"},{"lineNumber":15,"author":{"gitId":"rachelljt"},"content":"            throw new DukeException(\"Please key in a task number!\");"},{"lineNumber":16,"author":{"gitId":"rachelljt"},"content":"        }"},{"lineNumber":17,"author":{"gitId":"rachelljt"},"content":""},{"lineNumber":18,"author":{"gitId":"rachelljt"},"content":"        int num \u003d Integer.parseInt(description);"},{"lineNumber":19,"author":{"gitId":"rachelljt"},"content":"        this.taskNum \u003d num;"},{"lineNumber":20,"author":{"gitId":"rachelljt"},"content":""},{"lineNumber":21,"author":{"gitId":"rachelljt"},"content":"    }"},{"lineNumber":22,"author":{"gitId":"rachelljt"},"content":""},{"lineNumber":23,"author":{"gitId":"rachelljt"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage) throws DukeException {"},{"lineNumber":24,"author":{"gitId":"rachelljt"},"content":"        if (tasks.getNumOfTasks() \u003d\u003d 0) {"},{"lineNumber":25,"author":{"gitId":"rachelljt"},"content":"            throw new DukeException(\"There are currently no duke.tasks in your list.\");"},{"lineNumber":26,"author":{"gitId":"rachelljt"},"content":"        }"},{"lineNumber":27,"author":{"gitId":"rachelljt"},"content":""},{"lineNumber":28,"author":{"gitId":"rachelljt"},"content":"        if (taskNum \u003c 1 || taskNum \u003e tasks.getNumOfTasks()) {"},{"lineNumber":29,"author":{"gitId":"rachelljt"},"content":"            throw new IncorrectNumberException(this.taskNum);"},{"lineNumber":30,"author":{"gitId":"rachelljt"},"content":"        }"},{"lineNumber":31,"author":{"gitId":"rachelljt"},"content":"        Task task \u003d tasks.getTask(taskNum);"},{"lineNumber":32,"author":{"gitId":"rachelljt"},"content":"        tasks.delete(taskNum);"},{"lineNumber":33,"author":{"gitId":"rachelljt"},"content":"        ui.displayDeletedTask(task, tasks.getNumOfTasks());"},{"lineNumber":34,"author":{"gitId":"rachelljt"},"content":"        storage.saveTasks(tasks.getTasks());"},{"lineNumber":35,"author":{"gitId":"rachelljt"},"content":"    }"},{"lineNumber":36,"author":{"gitId":"rachelljt"},"content":""},{"lineNumber":37,"author":{"gitId":"rachelljt"},"content":"    public boolean isExit() {"},{"lineNumber":38,"author":{"gitId":"rachelljt"},"content":"        return false;"},{"lineNumber":39,"author":{"gitId":"rachelljt"},"content":"    }"},{"lineNumber":40,"author":{"gitId":"rachelljt"},"content":""},{"lineNumber":41,"author":{"gitId":"rachelljt"},"content":"}"}],"authorContributionMap":{"rachelljt":41}},{"path":"src/main/java/duke/command/DoneCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"rachelljt"},"content":"package duke.command;"},{"lineNumber":2,"author":{"gitId":"rachelljt"},"content":""},{"lineNumber":3,"author":{"gitId":"rachelljt"},"content":"import duke.Exceptions.DukeException;"},{"lineNumber":4,"author":{"gitId":"rachelljt"},"content":"import duke.Exceptions.IncorrectNumberException;"},{"lineNumber":5,"author":{"gitId":"rachelljt"},"content":"import duke.ui.Ui;"},{"lineNumber":6,"author":{"gitId":"rachelljt"},"content":"import duke.storage.Storage;"},{"lineNumber":7,"author":{"gitId":"rachelljt"},"content":"import duke.tasks.TaskList;"},{"lineNumber":8,"author":{"gitId":"rachelljt"},"content":""},{"lineNumber":9,"author":{"gitId":"rachelljt"},"content":"public class DoneCommand extends Command {"},{"lineNumber":10,"author":{"gitId":"rachelljt"},"content":"    private final int taskNum;"},{"lineNumber":11,"author":{"gitId":"rachelljt"},"content":""},{"lineNumber":12,"author":{"gitId":"rachelljt"},"content":"    public DoneCommand(String description) throws DukeException {"},{"lineNumber":13,"author":{"gitId":"rachelljt"},"content":"        if (description.isBlank()) {"},{"lineNumber":14,"author":{"gitId":"rachelljt"},"content":"            throw new DukeException(\"Please key in a task number!\");"},{"lineNumber":15,"author":{"gitId":"rachelljt"},"content":"        }"},{"lineNumber":16,"author":{"gitId":"rachelljt"},"content":""},{"lineNumber":17,"author":{"gitId":"rachelljt"},"content":"        this.taskNum\u003d Integer.parseInt(description);"},{"lineNumber":18,"author":{"gitId":"rachelljt"},"content":"    }"},{"lineNumber":19,"author":{"gitId":"rachelljt"},"content":"    @Override"},{"lineNumber":20,"author":{"gitId":"rachelljt"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage) throws DukeException {"},{"lineNumber":21,"author":{"gitId":"rachelljt"},"content":"        if (tasks.getNumOfTasks() \u003d\u003d 0) {"},{"lineNumber":22,"author":{"gitId":"rachelljt"},"content":"            throw new DukeException(\"There are currently no duke.tasks in your list.\");"},{"lineNumber":23,"author":{"gitId":"rachelljt"},"content":"        }"},{"lineNumber":24,"author":{"gitId":"rachelljt"},"content":""},{"lineNumber":25,"author":{"gitId":"rachelljt"},"content":"        if (taskNum \u003c 1 || taskNum \u003e tasks.getNumOfTasks()) {"},{"lineNumber":26,"author":{"gitId":"rachelljt"},"content":"            throw new IncorrectNumberException(taskNum);"},{"lineNumber":27,"author":{"gitId":"rachelljt"},"content":"        }"},{"lineNumber":28,"author":{"gitId":"rachelljt"},"content":""},{"lineNumber":29,"author":{"gitId":"rachelljt"},"content":"        tasks.markAsDone(taskNum);"},{"lineNumber":30,"author":{"gitId":"rachelljt"},"content":"        ui.displayDoneTask(tasks.getTask(taskNum));"},{"lineNumber":31,"author":{"gitId":"rachelljt"},"content":"        storage.saveTasks(tasks.getTasks());"},{"lineNumber":32,"author":{"gitId":"rachelljt"},"content":"    }"},{"lineNumber":33,"author":{"gitId":"rachelljt"},"content":""},{"lineNumber":34,"author":{"gitId":"rachelljt"},"content":"    @Override"},{"lineNumber":35,"author":{"gitId":"rachelljt"},"content":"    public boolean isExit() {"},{"lineNumber":36,"author":{"gitId":"rachelljt"},"content":"        return false;"},{"lineNumber":37,"author":{"gitId":"rachelljt"},"content":"    }"},{"lineNumber":38,"author":{"gitId":"rachelljt"},"content":"}"}],"authorContributionMap":{"rachelljt":38}},{"path":"src/main/java/duke/command/FindCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"rachelljt"},"content":"package duke.command;"},{"lineNumber":2,"author":{"gitId":"rachelljt"},"content":""},{"lineNumber":3,"author":{"gitId":"rachelljt"},"content":"import duke.Exceptions.DukeException;"},{"lineNumber":4,"author":{"gitId":"rachelljt"},"content":"import duke.storage.Storage;"},{"lineNumber":5,"author":{"gitId":"rachelljt"},"content":"import duke.tasks.Task;"},{"lineNumber":6,"author":{"gitId":"rachelljt"},"content":"import duke.tasks.TaskList;"},{"lineNumber":7,"author":{"gitId":"rachelljt"},"content":"import duke.ui.Ui;"},{"lineNumber":8,"author":{"gitId":"rachelljt"},"content":""},{"lineNumber":9,"author":{"gitId":"rachelljt"},"content":"import java.util.ArrayList;"},{"lineNumber":10,"author":{"gitId":"rachelljt"},"content":""},{"lineNumber":11,"author":{"gitId":"rachelljt"},"content":"public class FindCommand extends Command {"},{"lineNumber":12,"author":{"gitId":"rachelljt"},"content":"    private final String keyword;"},{"lineNumber":13,"author":{"gitId":"rachelljt"},"content":""},{"lineNumber":14,"author":{"gitId":"rachelljt"},"content":"    public FindCommand(String description) throws DukeException {"},{"lineNumber":15,"author":{"gitId":"rachelljt"},"content":"        if (description.isBlank()) {"},{"lineNumber":16,"author":{"gitId":"rachelljt"},"content":"            throw new DukeException(\"Please enter the keywords!\");"},{"lineNumber":17,"author":{"gitId":"rachelljt"},"content":"        }"},{"lineNumber":18,"author":{"gitId":"rachelljt"},"content":""},{"lineNumber":19,"author":{"gitId":"rachelljt"},"content":"        this.keyword \u003d description;"},{"lineNumber":20,"author":{"gitId":"rachelljt"},"content":"    }"},{"lineNumber":21,"author":{"gitId":"rachelljt"},"content":""},{"lineNumber":22,"author":{"gitId":"rachelljt"},"content":"    @Override"},{"lineNumber":23,"author":{"gitId":"rachelljt"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage) throws DukeException {"},{"lineNumber":24,"author":{"gitId":"rachelljt"},"content":"        ArrayList\u003cTask\u003e newTasks \u003d tasks.findMatchingTasks(this.keyword);"},{"lineNumber":25,"author":{"gitId":"rachelljt"},"content":"        ui.displayMatchingTasks(newTasks);"},{"lineNumber":26,"author":{"gitId":"rachelljt"},"content":"        storage.saveTasks(tasks.getTasks());"},{"lineNumber":27,"author":{"gitId":"rachelljt"},"content":"    }"},{"lineNumber":28,"author":{"gitId":"rachelljt"},"content":""},{"lineNumber":29,"author":{"gitId":"rachelljt"},"content":"    @Override"},{"lineNumber":30,"author":{"gitId":"rachelljt"},"content":"    public boolean isExit() {"},{"lineNumber":31,"author":{"gitId":"rachelljt"},"content":"        return false;"},{"lineNumber":32,"author":{"gitId":"rachelljt"},"content":"    }"},{"lineNumber":33,"author":{"gitId":"rachelljt"},"content":"}"}],"authorContributionMap":{"rachelljt":33}},{"path":"src/main/java/duke/command/showListCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"rachelljt"},"content":"package duke.command;"},{"lineNumber":2,"author":{"gitId":"rachelljt"},"content":""},{"lineNumber":3,"author":{"gitId":"rachelljt"},"content":"import duke.Exceptions.DukeException;"},{"lineNumber":4,"author":{"gitId":"rachelljt"},"content":"import duke.ui.Ui;"},{"lineNumber":5,"author":{"gitId":"rachelljt"},"content":"import duke.storage.Storage;"},{"lineNumber":6,"author":{"gitId":"rachelljt"},"content":"import duke.tasks.TaskList;"},{"lineNumber":7,"author":{"gitId":"rachelljt"},"content":""},{"lineNumber":8,"author":{"gitId":"rachelljt"},"content":"public class showListCommand extends Command {"},{"lineNumber":9,"author":{"gitId":"rachelljt"},"content":""},{"lineNumber":10,"author":{"gitId":"rachelljt"},"content":"    public showListCommand(String description) {"},{"lineNumber":11,"author":{"gitId":"rachelljt"},"content":""},{"lineNumber":12,"author":{"gitId":"rachelljt"},"content":"    }"},{"lineNumber":13,"author":{"gitId":"rachelljt"},"content":""},{"lineNumber":14,"author":{"gitId":"rachelljt"},"content":"    @Override"},{"lineNumber":15,"author":{"gitId":"rachelljt"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage) throws DukeException {"},{"lineNumber":16,"author":{"gitId":"rachelljt"},"content":"        if (tasks.getNumOfTasks() \u003d\u003d 0) {"},{"lineNumber":17,"author":{"gitId":"rachelljt"},"content":"            throw new DukeException(\"There are currently no duke.tasks in your list.\");"},{"lineNumber":18,"author":{"gitId":"rachelljt"},"content":"        }"},{"lineNumber":19,"author":{"gitId":"rachelljt"},"content":"        "},{"lineNumber":20,"author":{"gitId":"rachelljt"},"content":"        ui.displayList(tasks.getTasks());"},{"lineNumber":21,"author":{"gitId":"rachelljt"},"content":"    }"},{"lineNumber":22,"author":{"gitId":"rachelljt"},"content":""},{"lineNumber":23,"author":{"gitId":"rachelljt"},"content":"    @Override"},{"lineNumber":24,"author":{"gitId":"rachelljt"},"content":"    public boolean isExit() {"},{"lineNumber":25,"author":{"gitId":"rachelljt"},"content":"        return false;"},{"lineNumber":26,"author":{"gitId":"rachelljt"},"content":"    }"},{"lineNumber":27,"author":{"gitId":"rachelljt"},"content":"}"}],"authorContributionMap":{"rachelljt":27}},{"path":"src/main/java/duke/data/myDuke.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"rachelljt"},"content":"T / 1 / read a book"},{"lineNumber":2,"author":{"gitId":"rachelljt"},"content":"E / 0 / marathon / 2020-08-22T05:00"},{"lineNumber":3,"author":{"gitId":"rachelljt"},"content":"D / 0 / complete assignment / 2020-01-29T10:00"},{"lineNumber":4,"author":{"gitId":"rachelljt"},"content":"T / 0 / watch a show"}],"authorContributionMap":{"rachelljt":4}},{"path":"src/main/java/duke/parser/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"rachelljt"},"content":"package duke.parser;"},{"lineNumber":2,"author":{"gitId":"rachelljt"},"content":""},{"lineNumber":3,"author":{"gitId":"rachelljt"},"content":"import duke.Exceptions.*;"},{"lineNumber":4,"author":{"gitId":"rachelljt"},"content":"import duke.command.*;"},{"lineNumber":5,"author":{"gitId":"rachelljt"},"content":""},{"lineNumber":6,"author":{"gitId":"rachelljt"},"content":"public class Parser {"},{"lineNumber":7,"author":{"gitId":"rachelljt"},"content":""},{"lineNumber":8,"author":{"gitId":"rachelljt"},"content":"    /**"},{"lineNumber":9,"author":{"gitId":"rachelljt"},"content":"     * Returns a command on what to do with the given description."},{"lineNumber":10,"author":{"gitId":"rachelljt"},"content":"     *"},{"lineNumber":11,"author":{"gitId":"rachelljt"},"content":"     * @param input String of an input."},{"lineNumber":12,"author":{"gitId":"rachelljt"},"content":"     * @return Command."},{"lineNumber":13,"author":{"gitId":"rachelljt"},"content":"     * @throws DukeException If the input is blank."},{"lineNumber":14,"author":{"gitId":"rachelljt"},"content":"     */"},{"lineNumber":15,"author":{"gitId":"rachelljt"},"content":"    public static Command parseTask(String input) throws DukeException {"},{"lineNumber":16,"author":{"gitId":"rachelljt"},"content":"        String[] line \u003d input.split(\" \", 2); // split type of task from description"},{"lineNumber":17,"author":{"gitId":"rachelljt"},"content":"        String type \u003d line[0]; // type of task"},{"lineNumber":18,"author":{"gitId":"rachelljt"},"content":"        if (input.isBlank()) {"},{"lineNumber":19,"author":{"gitId":"rachelljt"},"content":"            throw new EmptyLineException(\" \");"},{"lineNumber":20,"author":{"gitId":"rachelljt"},"content":"        }"},{"lineNumber":21,"author":{"gitId":"rachelljt"},"content":"        if (line.length !\u003d 2) {"},{"lineNumber":22,"author":{"gitId":"rachelljt"},"content":"            line \u003d new String[]{type, \"\"};"},{"lineNumber":23,"author":{"gitId":"rachelljt"},"content":"        }"},{"lineNumber":24,"author":{"gitId":"rachelljt"},"content":"        switch (type) {"},{"lineNumber":25,"author":{"gitId":"rachelljt"},"content":"        case \"list\":"},{"lineNumber":26,"author":{"gitId":"rachelljt"},"content":"            return new showListCommand(\"list\");"},{"lineNumber":27,"author":{"gitId":"rachelljt"},"content":"        case \"done\":"},{"lineNumber":28,"author":{"gitId":"rachelljt"},"content":"            return new DoneCommand(line[1]);"},{"lineNumber":29,"author":{"gitId":"rachelljt"},"content":"        case \"delete\":"},{"lineNumber":30,"author":{"gitId":"rachelljt"},"content":"            return new DeleteCommand(line[1]);"},{"lineNumber":31,"author":{"gitId":"rachelljt"},"content":"        case \"find\":"},{"lineNumber":32,"author":{"gitId":"rachelljt"},"content":"            return new FindCommand(line[1]);"},{"lineNumber":33,"author":{"gitId":"rachelljt"},"content":"        case \"todo\":"},{"lineNumber":34,"author":{"gitId":"rachelljt"},"content":"            return new AddToDoCommand(line[1]);"},{"lineNumber":35,"author":{"gitId":"rachelljt"},"content":"        case \"deadline\":"},{"lineNumber":36,"author":{"gitId":"rachelljt"},"content":"            return new AddDeadlineCommand(line[1]);"},{"lineNumber":37,"author":{"gitId":"rachelljt"},"content":"        case \"event\":"},{"lineNumber":38,"author":{"gitId":"rachelljt"},"content":"            return new AddEventCommand(line[1]);"},{"lineNumber":39,"author":{"gitId":"rachelljt"},"content":"        case \"bye\":"},{"lineNumber":40,"author":{"gitId":"rachelljt"},"content":"            return new ByeCommand(\"bye\");"},{"lineNumber":41,"author":{"gitId":"rachelljt"},"content":"        default:"},{"lineNumber":42,"author":{"gitId":"rachelljt"},"content":"            throw new IncorrectTypeException(\"\");"},{"lineNumber":43,"author":{"gitId":"rachelljt"},"content":"        }"},{"lineNumber":44,"author":{"gitId":"rachelljt"},"content":"    }"},{"lineNumber":45,"author":{"gitId":"rachelljt"},"content":"}"}],"authorContributionMap":{"rachelljt":45}},{"path":"src/main/java/duke/storage/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"rachelljt"},"content":"package duke.storage;"},{"lineNumber":2,"author":{"gitId":"rachelljt"},"content":""},{"lineNumber":3,"author":{"gitId":"rachelljt"},"content":"import duke.Exceptions.DukeException;"},{"lineNumber":4,"author":{"gitId":"rachelljt"},"content":"import duke.tasks.Deadline;"},{"lineNumber":5,"author":{"gitId":"rachelljt"},"content":"import duke.tasks.Event;"},{"lineNumber":6,"author":{"gitId":"rachelljt"},"content":"import duke.tasks.Task;"},{"lineNumber":7,"author":{"gitId":"rachelljt"},"content":"import duke.tasks.ToDo;"},{"lineNumber":8,"author":{"gitId":"rachelljt"},"content":""},{"lineNumber":9,"author":{"gitId":"rachelljt"},"content":"import java.io.File;"},{"lineNumber":10,"author":{"gitId":"rachelljt"},"content":"import java.io.FileNotFoundException;"},{"lineNumber":11,"author":{"gitId":"rachelljt"},"content":"import java.io.IOException;"},{"lineNumber":12,"author":{"gitId":"rachelljt"},"content":"import java.io.FileWriter;"},{"lineNumber":13,"author":{"gitId":"rachelljt"},"content":""},{"lineNumber":14,"author":{"gitId":"rachelljt"},"content":"import java.util.ArrayList;"},{"lineNumber":15,"author":{"gitId":"rachelljt"},"content":"import java.util.Scanner;"},{"lineNumber":16,"author":{"gitId":"rachelljt"},"content":""},{"lineNumber":17,"author":{"gitId":"rachelljt"},"content":"import java.time.LocalDateTime;"},{"lineNumber":18,"author":{"gitId":"rachelljt"},"content":""},{"lineNumber":19,"author":{"gitId":"rachelljt"},"content":"public class Storage {"},{"lineNumber":20,"author":{"gitId":"rachelljt"},"content":"    private final File f;"},{"lineNumber":21,"author":{"gitId":"rachelljt"},"content":""},{"lineNumber":22,"author":{"gitId":"rachelljt"},"content":"    private final String path \u003d \"/Users/rachel/Desktop/ip/src/main/java/duke/data/myDuke.txt\";"},{"lineNumber":23,"author":{"gitId":"rachelljt"},"content":""},{"lineNumber":24,"author":{"gitId":"rachelljt"},"content":"    /**"},{"lineNumber":25,"author":{"gitId":"rachelljt"},"content":"     * initialises a storage object."},{"lineNumber":26,"author":{"gitId":"rachelljt"},"content":"     *"},{"lineNumber":27,"author":{"gitId":"rachelljt"},"content":"     * @throws DukeException due to IOException."},{"lineNumber":28,"author":{"gitId":"rachelljt"},"content":"     */"},{"lineNumber":29,"author":{"gitId":"rachelljt"},"content":"    public Storage() throws DukeException {"},{"lineNumber":30,"author":{"gitId":"rachelljt"},"content":"        this.f \u003d new File(path);"},{"lineNumber":31,"author":{"gitId":"rachelljt"},"content":"        createFile();"},{"lineNumber":32,"author":{"gitId":"rachelljt"},"content":"    }"},{"lineNumber":33,"author":{"gitId":"rachelljt"},"content":""},{"lineNumber":34,"author":{"gitId":"rachelljt"},"content":"    /**"},{"lineNumber":35,"author":{"gitId":"rachelljt"},"content":"     * creates a new file if not found in directory."},{"lineNumber":36,"author":{"gitId":"rachelljt"},"content":"     *"},{"lineNumber":37,"author":{"gitId":"rachelljt"},"content":"     * @throws DukeException due to IOException."},{"lineNumber":38,"author":{"gitId":"rachelljt"},"content":"     */"},{"lineNumber":39,"author":{"gitId":"rachelljt"},"content":"    public void createFile() throws DukeException {"},{"lineNumber":40,"author":{"gitId":"rachelljt"},"content":"        try {"},{"lineNumber":41,"author":{"gitId":"rachelljt"},"content":"            if (f.getParentFile().mkdirs()) {"},{"lineNumber":42,"author":{"gitId":"rachelljt"},"content":"                System.out.println(\"File is loading...\");"},{"lineNumber":43,"author":{"gitId":"rachelljt"},"content":"            } else {"},{"lineNumber":44,"author":{"gitId":"rachelljt"},"content":"                f.createNewFile();"},{"lineNumber":45,"author":{"gitId":"rachelljt"},"content":""},{"lineNumber":46,"author":{"gitId":"rachelljt"},"content":"                System.out.println(\"File already exists!\");"},{"lineNumber":47,"author":{"gitId":"rachelljt"},"content":"            }"},{"lineNumber":48,"author":{"gitId":"rachelljt"},"content":"        } catch (IOException e) {"},{"lineNumber":49,"author":{"gitId":"rachelljt"},"content":"            throw new DukeException(\"☹ OOPS!!! File creation error\");"},{"lineNumber":50,"author":{"gitId":"rachelljt"},"content":"        }"},{"lineNumber":51,"author":{"gitId":"rachelljt"},"content":"    }"},{"lineNumber":52,"author":{"gitId":"rachelljt"},"content":""},{"lineNumber":53,"author":{"gitId":"rachelljt"},"content":"    /**"},{"lineNumber":54,"author":{"gitId":"rachelljt"},"content":"     * Returns a list of tasks in the myDuke.txt file."},{"lineNumber":55,"author":{"gitId":"rachelljt"},"content":"     *"},{"lineNumber":56,"author":{"gitId":"rachelljt"},"content":"     * @return a list of tasks."},{"lineNumber":57,"author":{"gitId":"rachelljt"},"content":"     * @throws DukeException due to FileNotFoundException."},{"lineNumber":58,"author":{"gitId":"rachelljt"},"content":"     */"},{"lineNumber":59,"author":{"gitId":"rachelljt"},"content":"    public ArrayList\u003cTask\u003e displayTasks() throws DukeException {"},{"lineNumber":60,"author":{"gitId":"rachelljt"},"content":"        ArrayList\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();"},{"lineNumber":61,"author":{"gitId":"rachelljt"},"content":"        try {"},{"lineNumber":62,"author":{"gitId":"rachelljt"},"content":"            Scanner s \u003d new Scanner(f);"},{"lineNumber":63,"author":{"gitId":"rachelljt"},"content":"            while (s.hasNextLine()) {"},{"lineNumber":64,"author":{"gitId":"rachelljt"},"content":"                Task task \u003d parseTasks(s.nextLine());"},{"lineNumber":65,"author":{"gitId":"rachelljt"},"content":"                tasks.add(task);"},{"lineNumber":66,"author":{"gitId":"rachelljt"},"content":"            }"},{"lineNumber":67,"author":{"gitId":"rachelljt"},"content":"        } catch (FileNotFoundException e) {"},{"lineNumber":68,"author":{"gitId":"rachelljt"},"content":"            throw new DukeException(\"☹ OOPS!!! File not found!\");"},{"lineNumber":69,"author":{"gitId":"rachelljt"},"content":"        }"},{"lineNumber":70,"author":{"gitId":"rachelljt"},"content":"        return tasks;"},{"lineNumber":71,"author":{"gitId":"rachelljt"},"content":"    }"},{"lineNumber":72,"author":{"gitId":"rachelljt"},"content":""},{"lineNumber":73,"author":{"gitId":"rachelljt"},"content":"    /**"},{"lineNumber":74,"author":{"gitId":"rachelljt"},"content":"     * Parses the task saved in the file to identify"},{"lineNumber":75,"author":{"gitId":"rachelljt"},"content":"     * the type of task."},{"lineNumber":76,"author":{"gitId":"rachelljt"},"content":"     *"},{"lineNumber":77,"author":{"gitId":"rachelljt"},"content":"     * @param task description of task in String."},{"lineNumber":78,"author":{"gitId":"rachelljt"},"content":"     * @return a newly created Task."},{"lineNumber":79,"author":{"gitId":"rachelljt"},"content":"     * @throws DukeException if the type of task is unknown."},{"lineNumber":80,"author":{"gitId":"rachelljt"},"content":"     */"},{"lineNumber":81,"author":{"gitId":"rachelljt"},"content":"    public Task parseTasks(String task) throws DukeException {"},{"lineNumber":82,"author":{"gitId":"rachelljt"},"content":"        String[] description \u003d task.split(\" / \", 4);"},{"lineNumber":83,"author":{"gitId":"rachelljt"},"content":"        Task t \u003d null;"},{"lineNumber":84,"author":{"gitId":"rachelljt"},"content":"        try {"},{"lineNumber":85,"author":{"gitId":"rachelljt"},"content":"            LocalDateTime dateTime;"},{"lineNumber":86,"author":{"gitId":"rachelljt"},"content":"            String type \u003d description[0];"},{"lineNumber":87,"author":{"gitId":"rachelljt"},"content":"            switch (type) {"},{"lineNumber":88,"author":{"gitId":"rachelljt"},"content":"            case \"T\":"},{"lineNumber":89,"author":{"gitId":"rachelljt"},"content":"                t \u003d new ToDo(description[2]);"},{"lineNumber":90,"author":{"gitId":"rachelljt"},"content":"                break;"},{"lineNumber":91,"author":{"gitId":"rachelljt"},"content":""},{"lineNumber":92,"author":{"gitId":"rachelljt"},"content":"            case \"D\":"},{"lineNumber":93,"author":{"gitId":"rachelljt"},"content":"                dateTime \u003d LocalDateTime.parse(description[3]);"},{"lineNumber":94,"author":{"gitId":"rachelljt"},"content":"                t \u003d new Deadline(description[2], dateTime);"},{"lineNumber":95,"author":{"gitId":"rachelljt"},"content":"                break;"},{"lineNumber":96,"author":{"gitId":"rachelljt"},"content":""},{"lineNumber":97,"author":{"gitId":"rachelljt"},"content":"            case \"E\":"},{"lineNumber":98,"author":{"gitId":"rachelljt"},"content":"                dateTime \u003d LocalDateTime.parse(description[3]);"},{"lineNumber":99,"author":{"gitId":"rachelljt"},"content":"                t \u003d new Event(description[2], dateTime);"},{"lineNumber":100,"author":{"gitId":"rachelljt"},"content":"                break;"},{"lineNumber":101,"author":{"gitId":"rachelljt"},"content":"            }"},{"lineNumber":102,"author":{"gitId":"rachelljt"},"content":""},{"lineNumber":103,"author":{"gitId":"rachelljt"},"content":"            if (description[1].equals(\"1\")) {"},{"lineNumber":104,"author":{"gitId":"rachelljt"},"content":"                assert t !\u003d null;"},{"lineNumber":105,"author":{"gitId":"rachelljt"},"content":"                t.markAsDone();"},{"lineNumber":106,"author":{"gitId":"rachelljt"},"content":"            }"},{"lineNumber":107,"author":{"gitId":"rachelljt"},"content":""},{"lineNumber":108,"author":{"gitId":"rachelljt"},"content":"        } catch (Exception e) {"},{"lineNumber":109,"author":{"gitId":"rachelljt"},"content":"\u003c\u003c\u003c\u003c\u003c\u003c\u003c HEAD"},{"lineNumber":110,"author":{"gitId":"rachelljt"},"content":"            throw new DukeException("},{"lineNumber":111,"author":{"gitId":"rachelljt"},"content":"                    \"☹ OOPS!!! I do not understand what are you saying!\");"},{"lineNumber":112,"author":{"gitId":"rachelljt"},"content":"\u003d\u003d\u003d\u003d\u003d\u003d\u003d"},{"lineNumber":113,"author":{"gitId":"rachelljt"},"content":"            throw new DukeException(\"☹ OOPS!!! I do not understand what are you saying!\");"},{"lineNumber":114,"author":{"gitId":"rachelljt"},"content":"\u003e\u003e\u003e\u003e\u003e\u003e\u003e branch-Level-9"},{"lineNumber":115,"author":{"gitId":"rachelljt"},"content":"        }"},{"lineNumber":116,"author":{"gitId":"rachelljt"},"content":""},{"lineNumber":117,"author":{"gitId":"rachelljt"},"content":"        return t;"},{"lineNumber":118,"author":{"gitId":"rachelljt"},"content":"    }"},{"lineNumber":119,"author":{"gitId":"rachelljt"},"content":""},{"lineNumber":120,"author":{"gitId":"rachelljt"},"content":"    /**"},{"lineNumber":121,"author":{"gitId":"rachelljt"},"content":"     * Saves tasks in the myDuke.txt file"},{"lineNumber":122,"author":{"gitId":"rachelljt"},"content":"     *"},{"lineNumber":123,"author":{"gitId":"rachelljt"},"content":"     * @param tasks A list of tasks"},{"lineNumber":124,"author":{"gitId":"rachelljt"},"content":"     * @throws DukeException due to IOException."},{"lineNumber":125,"author":{"gitId":"rachelljt"},"content":"     */"},{"lineNumber":126,"author":{"gitId":"rachelljt"},"content":"    public void saveTasks(ArrayList\u003cTask\u003e tasks) throws DukeException {"},{"lineNumber":127,"author":{"gitId":"rachelljt"},"content":"        try {"},{"lineNumber":128,"author":{"gitId":"rachelljt"},"content":"            FileWriter fw \u003d new FileWriter(path);"},{"lineNumber":129,"author":{"gitId":"rachelljt"},"content":"            for (Task t : tasks) {"},{"lineNumber":130,"author":{"gitId":"rachelljt"},"content":"                fw.write(t.toSave() + System.lineSeparator());"},{"lineNumber":131,"author":{"gitId":"rachelljt"},"content":"            }"},{"lineNumber":132,"author":{"gitId":"rachelljt"},"content":"            fw.close();"},{"lineNumber":133,"author":{"gitId":"rachelljt"},"content":"        } catch (IOException e) {"},{"lineNumber":134,"author":{"gitId":"rachelljt"},"content":"            throw new DukeException(\"☹ OOPS!!! Tasks cannot be saved.\");"},{"lineNumber":135,"author":{"gitId":"rachelljt"},"content":"        }"},{"lineNumber":136,"author":{"gitId":"rachelljt"},"content":"    }"},{"lineNumber":137,"author":{"gitId":"rachelljt"},"content":"}"}],"authorContributionMap":{"rachelljt":137}},{"path":"src/main/java/duke/tasks/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"rachelljt"},"content":"package duke.tasks;"},{"lineNumber":2,"author":{"gitId":"rachelljt"},"content":""},{"lineNumber":3,"author":{"gitId":"rachelljt"},"content":"import java.time.LocalDateTime;"},{"lineNumber":4,"author":{"gitId":"rachelljt"},"content":"import java.time.format.DateTimeFormatter;"},{"lineNumber":5,"author":{"gitId":"rachelljt"},"content":""},{"lineNumber":6,"author":{"gitId":"rachelljt"},"content":"public class Deadline extends Task {"},{"lineNumber":7,"author":{"gitId":"rachelljt"},"content":"    protected LocalDateTime dateTime;"},{"lineNumber":8,"author":{"gitId":"rachelljt"},"content":""},{"lineNumber":9,"author":{"gitId":"rachelljt"},"content":"    /**"},{"lineNumber":10,"author":{"gitId":"rachelljt"},"content":"     * Initialises a new Deadline."},{"lineNumber":11,"author":{"gitId":"rachelljt"},"content":"     *"},{"lineNumber":12,"author":{"gitId":"rachelljt"},"content":"     * @param taskName Description of task."},{"lineNumber":13,"author":{"gitId":"rachelljt"},"content":"     * @param dateTime Date and Time."},{"lineNumber":14,"author":{"gitId":"rachelljt"},"content":"     */"},{"lineNumber":15,"author":{"gitId":"rachelljt"},"content":"    public Deadline(String taskName, LocalDateTime dateTime) {"},{"lineNumber":16,"author":{"gitId":"rachelljt"},"content":"        super(taskName);"},{"lineNumber":17,"author":{"gitId":"rachelljt"},"content":"        this.dateTime \u003d dateTime;"},{"lineNumber":18,"author":{"gitId":"rachelljt"},"content":"    }"},{"lineNumber":19,"author":{"gitId":"rachelljt"},"content":""},{"lineNumber":20,"author":{"gitId":"rachelljt"},"content":"    /**"},{"lineNumber":21,"author":{"gitId":"rachelljt"},"content":"     * Returns a the task type."},{"lineNumber":22,"author":{"gitId":"rachelljt"},"content":"     *"},{"lineNumber":23,"author":{"gitId":"rachelljt"},"content":"     * @return a String of the type."},{"lineNumber":24,"author":{"gitId":"rachelljt"},"content":"     */"},{"lineNumber":25,"author":{"gitId":"rachelljt"},"content":"    public String getTaskType() {"},{"lineNumber":26,"author":{"gitId":"rachelljt"},"content":"        return \"Deadline\";"},{"lineNumber":27,"author":{"gitId":"rachelljt"},"content":"    }"},{"lineNumber":28,"author":{"gitId":"rachelljt"},"content":""},{"lineNumber":29,"author":{"gitId":"rachelljt"},"content":"    /**"},{"lineNumber":30,"author":{"gitId":"rachelljt"},"content":"     * Returns a string of the LocalDateTime."},{"lineNumber":31,"author":{"gitId":"rachelljt"},"content":"     *"},{"lineNumber":32,"author":{"gitId":"rachelljt"},"content":"     * @return a String of the date time."},{"lineNumber":33,"author":{"gitId":"rachelljt"},"content":"     */"},{"lineNumber":34,"author":{"gitId":"rachelljt"},"content":"    public String getDateTime() {"},{"lineNumber":35,"author":{"gitId":"rachelljt"},"content":"        return dateTime.format("},{"lineNumber":36,"author":{"gitId":"rachelljt"},"content":"                DateTimeFormatter.ofPattern(\"MMM d yyyy, HH:mm\"));"},{"lineNumber":37,"author":{"gitId":"rachelljt"},"content":"    }"},{"lineNumber":38,"author":{"gitId":"rachelljt"},"content":""},{"lineNumber":39,"author":{"gitId":"rachelljt"},"content":"    /**"},{"lineNumber":40,"author":{"gitId":"rachelljt"},"content":"     * Returns a string of description to be saved in the myDuke.txt."},{"lineNumber":41,"author":{"gitId":"rachelljt"},"content":"     *"},{"lineNumber":42,"author":{"gitId":"rachelljt"},"content":"     * @return A String."},{"lineNumber":43,"author":{"gitId":"rachelljt"},"content":"     */"},{"lineNumber":44,"author":{"gitId":"rachelljt"},"content":"    @Override"},{"lineNumber":45,"author":{"gitId":"rachelljt"},"content":"    public String toSave() {"},{"lineNumber":46,"author":{"gitId":"rachelljt"},"content":"        return \"D / \" + super.isDoneString"},{"lineNumber":47,"author":{"gitId":"rachelljt"},"content":"                + super.taskName + \" / \" + dateTime;"},{"lineNumber":48,"author":{"gitId":"rachelljt"},"content":"    }"},{"lineNumber":49,"author":{"gitId":"rachelljt"},"content":""},{"lineNumber":50,"author":{"gitId":"rachelljt"},"content":"    /**"},{"lineNumber":51,"author":{"gitId":"rachelljt"},"content":"     * Returns a string of description to be printed out."},{"lineNumber":52,"author":{"gitId":"rachelljt"},"content":"     *"},{"lineNumber":53,"author":{"gitId":"rachelljt"},"content":"     * @return A String."},{"lineNumber":54,"author":{"gitId":"rachelljt"},"content":"     */"},{"lineNumber":55,"author":{"gitId":"rachelljt"},"content":"    @Override"},{"lineNumber":56,"author":{"gitId":"rachelljt"},"content":"    public String toString() {"},{"lineNumber":57,"author":{"gitId":"rachelljt"},"content":"        return \"[D]\" + super.toString()"},{"lineNumber":58,"author":{"gitId":"rachelljt"},"content":"                + \" (by: \" + getDateTime() + \")\";"},{"lineNumber":59,"author":{"gitId":"rachelljt"},"content":"    }"},{"lineNumber":60,"author":{"gitId":"rachelljt"},"content":"}"}],"authorContributionMap":{"rachelljt":60}},{"path":"src/main/java/duke/tasks/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"rachelljt"},"content":"package duke.tasks;"},{"lineNumber":2,"author":{"gitId":"rachelljt"},"content":""},{"lineNumber":3,"author":{"gitId":"rachelljt"},"content":"import java.time.LocalDateTime;"},{"lineNumber":4,"author":{"gitId":"rachelljt"},"content":"import java.time.format.DateTimeFormatter;"},{"lineNumber":5,"author":{"gitId":"rachelljt"},"content":""},{"lineNumber":6,"author":{"gitId":"rachelljt"},"content":"public class Event extends Task {"},{"lineNumber":7,"author":{"gitId":"rachelljt"},"content":"    protected LocalDateTime dateTime;"},{"lineNumber":8,"author":{"gitId":"rachelljt"},"content":""},{"lineNumber":9,"author":{"gitId":"rachelljt"},"content":"    /**"},{"lineNumber":10,"author":{"gitId":"rachelljt"},"content":"     * Initialises a new Event."},{"lineNumber":11,"author":{"gitId":"rachelljt"},"content":"     *"},{"lineNumber":12,"author":{"gitId":"rachelljt"},"content":"     * @param taskName Description of task."},{"lineNumber":13,"author":{"gitId":"rachelljt"},"content":"     * @param dateTime Date and Time."},{"lineNumber":14,"author":{"gitId":"rachelljt"},"content":"     */"},{"lineNumber":15,"author":{"gitId":"rachelljt"},"content":"    public Event(String taskName, LocalDateTime dateTime) {"},{"lineNumber":16,"author":{"gitId":"rachelljt"},"content":"        super(taskName);"},{"lineNumber":17,"author":{"gitId":"rachelljt"},"content":"        this.dateTime \u003d dateTime;"},{"lineNumber":18,"author":{"gitId":"rachelljt"},"content":"    }"},{"lineNumber":19,"author":{"gitId":"rachelljt"},"content":""},{"lineNumber":20,"author":{"gitId":"rachelljt"},"content":"    /**"},{"lineNumber":21,"author":{"gitId":"rachelljt"},"content":"     * Returns a the task type."},{"lineNumber":22,"author":{"gitId":"rachelljt"},"content":"     *"},{"lineNumber":23,"author":{"gitId":"rachelljt"},"content":"     * @return a String of the type."},{"lineNumber":24,"author":{"gitId":"rachelljt"},"content":"     */"},{"lineNumber":25,"author":{"gitId":"rachelljt"},"content":"    public String getTaskType() {"},{"lineNumber":26,"author":{"gitId":"rachelljt"},"content":"        return \"Event\";"},{"lineNumber":27,"author":{"gitId":"rachelljt"},"content":"    }"},{"lineNumber":28,"author":{"gitId":"rachelljt"},"content":""},{"lineNumber":29,"author":{"gitId":"rachelljt"},"content":"    /**"},{"lineNumber":30,"author":{"gitId":"rachelljt"},"content":"     * Returns a string of the LocalDateTime."},{"lineNumber":31,"author":{"gitId":"rachelljt"},"content":"     *"},{"lineNumber":32,"author":{"gitId":"rachelljt"},"content":"     * @return a String of the date time."},{"lineNumber":33,"author":{"gitId":"rachelljt"},"content":"     */"},{"lineNumber":34,"author":{"gitId":"rachelljt"},"content":"    public String getDateTime() {"},{"lineNumber":35,"author":{"gitId":"rachelljt"},"content":"        return dateTime.format("},{"lineNumber":36,"author":{"gitId":"rachelljt"},"content":"                DateTimeFormatter.ofPattern(\"MMM d yyyy, HH:mm\"));"},{"lineNumber":37,"author":{"gitId":"rachelljt"},"content":"    }"},{"lineNumber":38,"author":{"gitId":"rachelljt"},"content":""},{"lineNumber":39,"author":{"gitId":"rachelljt"},"content":"    /**"},{"lineNumber":40,"author":{"gitId":"rachelljt"},"content":"     * Returns a string of description to be saved in the myDuke.txt."},{"lineNumber":41,"author":{"gitId":"rachelljt"},"content":"     *"},{"lineNumber":42,"author":{"gitId":"rachelljt"},"content":"     * @return A String."},{"lineNumber":43,"author":{"gitId":"rachelljt"},"content":"     */"},{"lineNumber":44,"author":{"gitId":"rachelljt"},"content":"    @Override"},{"lineNumber":45,"author":{"gitId":"rachelljt"},"content":"    public String toSave() {"},{"lineNumber":46,"author":{"gitId":"rachelljt"},"content":"        return \"E / \" + super.isDoneString"},{"lineNumber":47,"author":{"gitId":"rachelljt"},"content":"                + super.taskName + \" / \" + dateTime;"},{"lineNumber":48,"author":{"gitId":"rachelljt"},"content":"    }"},{"lineNumber":49,"author":{"gitId":"rachelljt"},"content":""},{"lineNumber":50,"author":{"gitId":"rachelljt"},"content":"    /**"},{"lineNumber":51,"author":{"gitId":"rachelljt"},"content":"     * Returns a string of description to be printed out."},{"lineNumber":52,"author":{"gitId":"rachelljt"},"content":"     *"},{"lineNumber":53,"author":{"gitId":"rachelljt"},"content":"     * @return A String."},{"lineNumber":54,"author":{"gitId":"rachelljt"},"content":"     */"},{"lineNumber":55,"author":{"gitId":"rachelljt"},"content":"    @Override"},{"lineNumber":56,"author":{"gitId":"rachelljt"},"content":"    public String toString() {"},{"lineNumber":57,"author":{"gitId":"rachelljt"},"content":"        return \"[E]\" + super.toString()"},{"lineNumber":58,"author":{"gitId":"rachelljt"},"content":"                + \" (at: \" + getDateTime() + \")\";"},{"lineNumber":59,"author":{"gitId":"rachelljt"},"content":"    }"},{"lineNumber":60,"author":{"gitId":"rachelljt"},"content":"}"}],"authorContributionMap":{"rachelljt":60}},{"path":"src/main/java/duke/tasks/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"rachelljt"},"content":"package duke.tasks;"},{"lineNumber":2,"author":{"gitId":"rachelljt"},"content":""},{"lineNumber":3,"author":{"gitId":"rachelljt"},"content":"public class Task {"},{"lineNumber":4,"author":{"gitId":"rachelljt"},"content":"    protected String taskName;"},{"lineNumber":5,"author":{"gitId":"rachelljt"},"content":"    protected boolean isDone;"},{"lineNumber":6,"author":{"gitId":"rachelljt"},"content":"    protected String statusIcon;"},{"lineNumber":7,"author":{"gitId":"rachelljt"},"content":"    protected String isDoneString;"},{"lineNumber":8,"author":{"gitId":"rachelljt"},"content":""},{"lineNumber":9,"author":{"gitId":"rachelljt"},"content":"    /**"},{"lineNumber":10,"author":{"gitId":"rachelljt"},"content":"     * Initialises a new task."},{"lineNumber":11,"author":{"gitId":"rachelljt"},"content":"     *"},{"lineNumber":12,"author":{"gitId":"rachelljt"},"content":"     * @param taskName Description of task."},{"lineNumber":13,"author":{"gitId":"rachelljt"},"content":"     */"},{"lineNumber":14,"author":{"gitId":"rachelljt"},"content":"    public Task(String taskName) {"},{"lineNumber":15,"author":{"gitId":"rachelljt"},"content":"        this.taskName \u003d taskName;"},{"lineNumber":16,"author":{"gitId":"rachelljt"},"content":"        this.isDone \u003d false;"},{"lineNumber":17,"author":{"gitId":"rachelljt"},"content":"        this.statusIcon \u003d \"[ ] \";"},{"lineNumber":18,"author":{"gitId":"rachelljt"},"content":"        this.isDoneString \u003d \"0 / \";"},{"lineNumber":19,"author":{"gitId":"rachelljt"},"content":"    }"},{"lineNumber":20,"author":{"gitId":"rachelljt"},"content":""},{"lineNumber":21,"author":{"gitId":"rachelljt"},"content":"    /**"},{"lineNumber":22,"author":{"gitId":"rachelljt"},"content":"     * Returns the description of the task."},{"lineNumber":23,"author":{"gitId":"rachelljt"},"content":"     * @return a String of description of task."},{"lineNumber":24,"author":{"gitId":"rachelljt"},"content":"     */"},{"lineNumber":25,"author":{"gitId":"rachelljt"},"content":"    public String getTaskName() {"},{"lineNumber":26,"author":{"gitId":"rachelljt"},"content":"        return this.taskName;"},{"lineNumber":27,"author":{"gitId":"rachelljt"},"content":"    }"},{"lineNumber":28,"author":{"gitId":"rachelljt"},"content":""},{"lineNumber":29,"author":{"gitId":"rachelljt"},"content":"    /**"},{"lineNumber":30,"author":{"gitId":"rachelljt"},"content":"     * Marks the given task as completed."},{"lineNumber":31,"author":{"gitId":"rachelljt"},"content":"     */"},{"lineNumber":32,"author":{"gitId":"rachelljt"},"content":"    public void markAsDone() {"},{"lineNumber":33,"author":{"gitId":"rachelljt"},"content":"        this.isDone \u003d true;"},{"lineNumber":34,"author":{"gitId":"rachelljt"},"content":"        this.statusIcon \u003d \"[\\u2713] \";"},{"lineNumber":35,"author":{"gitId":"rachelljt"},"content":"        this.isDoneString \u003d \"1 / \";"},{"lineNumber":36,"author":{"gitId":"rachelljt"},"content":""},{"lineNumber":37,"author":{"gitId":"rachelljt"},"content":"    }"},{"lineNumber":38,"author":{"gitId":"rachelljt"},"content":""},{"lineNumber":39,"author":{"gitId":"rachelljt"},"content":"    /**"},{"lineNumber":40,"author":{"gitId":"rachelljt"},"content":"     * Returns a string of description to be saved in the myDuke.txt."},{"lineNumber":41,"author":{"gitId":"rachelljt"},"content":"     *"},{"lineNumber":42,"author":{"gitId":"rachelljt"},"content":"     * @return A String."},{"lineNumber":43,"author":{"gitId":"rachelljt"},"content":"     */"},{"lineNumber":44,"author":{"gitId":"rachelljt"},"content":"    public String toSave() {"},{"lineNumber":45,"author":{"gitId":"rachelljt"},"content":"        return this.taskName;"},{"lineNumber":46,"author":{"gitId":"rachelljt"},"content":"    }"},{"lineNumber":47,"author":{"gitId":"rachelljt"},"content":""},{"lineNumber":48,"author":{"gitId":"rachelljt"},"content":"    /**"},{"lineNumber":49,"author":{"gitId":"rachelljt"},"content":"     * Returns a string of description to be printed out."},{"lineNumber":50,"author":{"gitId":"rachelljt"},"content":"     *"},{"lineNumber":51,"author":{"gitId":"rachelljt"},"content":"     * @return A String."},{"lineNumber":52,"author":{"gitId":"rachelljt"},"content":"     */"},{"lineNumber":53,"author":{"gitId":"rachelljt"},"content":"    public String toString() {"},{"lineNumber":54,"author":{"gitId":"rachelljt"},"content":"        return statusIcon + this.taskName;"},{"lineNumber":55,"author":{"gitId":"rachelljt"},"content":"    }"},{"lineNumber":56,"author":{"gitId":"rachelljt"},"content":"}"}],"authorContributionMap":{"rachelljt":56}},{"path":"src/main/java/duke/tasks/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"rachelljt"},"content":"package duke.tasks;"},{"lineNumber":2,"author":{"gitId":"rachelljt"},"content":""},{"lineNumber":3,"author":{"gitId":"rachelljt"},"content":"import duke.Exceptions.DukeException;"},{"lineNumber":4,"author":{"gitId":"rachelljt"},"content":""},{"lineNumber":5,"author":{"gitId":"rachelljt"},"content":"import java.util.ArrayList;"},{"lineNumber":6,"author":{"gitId":"rachelljt"},"content":""},{"lineNumber":7,"author":{"gitId":"rachelljt"},"content":"public class TaskList {"},{"lineNumber":8,"author":{"gitId":"rachelljt"},"content":"    private final ArrayList\u003cTask\u003e tasks;"},{"lineNumber":9,"author":{"gitId":"rachelljt"},"content":""},{"lineNumber":10,"author":{"gitId":"rachelljt"},"content":"    /**"},{"lineNumber":11,"author":{"gitId":"rachelljt"},"content":"     * Initialises a new TaskList."},{"lineNumber":12,"author":{"gitId":"rachelljt"},"content":"     *"},{"lineNumber":13,"author":{"gitId":"rachelljt"},"content":"     * @param tasks List of tasks."},{"lineNumber":14,"author":{"gitId":"rachelljt"},"content":"     */"},{"lineNumber":15,"author":{"gitId":"rachelljt"},"content":"    public TaskList(ArrayList\u003cTask\u003e tasks) {"},{"lineNumber":16,"author":{"gitId":"rachelljt"},"content":"        this.tasks \u003d tasks;"},{"lineNumber":17,"author":{"gitId":"rachelljt"},"content":"    }"},{"lineNumber":18,"author":{"gitId":"rachelljt"},"content":""},{"lineNumber":19,"author":{"gitId":"rachelljt"},"content":"    /**"},{"lineNumber":20,"author":{"gitId":"rachelljt"},"content":"     * Initialises a new TaskList."},{"lineNumber":21,"author":{"gitId":"rachelljt"},"content":"     */"},{"lineNumber":22,"author":{"gitId":"rachelljt"},"content":"    public TaskList() {"},{"lineNumber":23,"author":{"gitId":"rachelljt"},"content":"        this.tasks \u003d new ArrayList\u003c\u003e();"},{"lineNumber":24,"author":{"gitId":"rachelljt"},"content":"    }"},{"lineNumber":25,"author":{"gitId":"rachelljt"},"content":""},{"lineNumber":26,"author":{"gitId":"rachelljt"},"content":"    /**"},{"lineNumber":27,"author":{"gitId":"rachelljt"},"content":"     * Returns the Task at the specific index."},{"lineNumber":28,"author":{"gitId":"rachelljt"},"content":"     *"},{"lineNumber":29,"author":{"gitId":"rachelljt"},"content":"     * @param num Integer index."},{"lineNumber":30,"author":{"gitId":"rachelljt"},"content":"     * @return Task at specific index."},{"lineNumber":31,"author":{"gitId":"rachelljt"},"content":"     */"},{"lineNumber":32,"author":{"gitId":"rachelljt"},"content":"    public Task getTask(int num) {"},{"lineNumber":33,"author":{"gitId":"rachelljt"},"content":"        return this.tasks.get(num - 1);"},{"lineNumber":34,"author":{"gitId":"rachelljt"},"content":"    }"},{"lineNumber":35,"author":{"gitId":"rachelljt"},"content":""},{"lineNumber":36,"author":{"gitId":"rachelljt"},"content":"    /**"},{"lineNumber":37,"author":{"gitId":"rachelljt"},"content":"     * Returns the total number of tasks."},{"lineNumber":38,"author":{"gitId":"rachelljt"},"content":"     *"},{"lineNumber":39,"author":{"gitId":"rachelljt"},"content":"     * @return The total number of tasks."},{"lineNumber":40,"author":{"gitId":"rachelljt"},"content":"     */"},{"lineNumber":41,"author":{"gitId":"rachelljt"},"content":"    public int getNumOfTasks() {"},{"lineNumber":42,"author":{"gitId":"rachelljt"},"content":"        return this.tasks.size();"},{"lineNumber":43,"author":{"gitId":"rachelljt"},"content":"    }"},{"lineNumber":44,"author":{"gitId":"rachelljt"},"content":""},{"lineNumber":45,"author":{"gitId":"rachelljt"},"content":"    /**"},{"lineNumber":46,"author":{"gitId":"rachelljt"},"content":"     * Returns a List of tasks."},{"lineNumber":47,"author":{"gitId":"rachelljt"},"content":"     *"},{"lineNumber":48,"author":{"gitId":"rachelljt"},"content":"     * @return A list of tasks."},{"lineNumber":49,"author":{"gitId":"rachelljt"},"content":"     */"},{"lineNumber":50,"author":{"gitId":"rachelljt"},"content":"    public ArrayList\u003cTask\u003e getTasks() {"},{"lineNumber":51,"author":{"gitId":"rachelljt"},"content":"        return this.tasks;"},{"lineNumber":52,"author":{"gitId":"rachelljt"},"content":"    }"},{"lineNumber":53,"author":{"gitId":"rachelljt"},"content":""},{"lineNumber":54,"author":{"gitId":"rachelljt"},"content":"    /**"},{"lineNumber":55,"author":{"gitId":"rachelljt"},"content":"     * Add task to list."},{"lineNumber":56,"author":{"gitId":"rachelljt"},"content":"     *"},{"lineNumber":57,"author":{"gitId":"rachelljt"},"content":"     * @param task Task."},{"lineNumber":58,"author":{"gitId":"rachelljt"},"content":"     */"},{"lineNumber":59,"author":{"gitId":"rachelljt"},"content":"    public void add(Task task) {"},{"lineNumber":60,"author":{"gitId":"rachelljt"},"content":"        tasks.add(task);"},{"lineNumber":61,"author":{"gitId":"rachelljt"},"content":"    }"},{"lineNumber":62,"author":{"gitId":"rachelljt"},"content":""},{"lineNumber":63,"author":{"gitId":"rachelljt"},"content":"    /**"},{"lineNumber":64,"author":{"gitId":"rachelljt"},"content":"     * Delete task at specific index."},{"lineNumber":65,"author":{"gitId":"rachelljt"},"content":"     *"},{"lineNumber":66,"author":{"gitId":"rachelljt"},"content":"     * @param num Integer index."},{"lineNumber":67,"author":{"gitId":"rachelljt"},"content":"     */"},{"lineNumber":68,"author":{"gitId":"rachelljt"},"content":"    public void delete(int num) {"},{"lineNumber":69,"author":{"gitId":"rachelljt"},"content":"        tasks.remove(num - 1);"},{"lineNumber":70,"author":{"gitId":"rachelljt"},"content":"    }"},{"lineNumber":71,"author":{"gitId":"rachelljt"},"content":""},{"lineNumber":72,"author":{"gitId":"rachelljt"},"content":"    /**"},{"lineNumber":73,"author":{"gitId":"rachelljt"},"content":"     * Mark task as completed."},{"lineNumber":74,"author":{"gitId":"rachelljt"},"content":"     *"},{"lineNumber":75,"author":{"gitId":"rachelljt"},"content":"     * @param num Integer index."},{"lineNumber":76,"author":{"gitId":"rachelljt"},"content":"     */"},{"lineNumber":77,"author":{"gitId":"rachelljt"},"content":"    public void markAsDone(int num) {"},{"lineNumber":78,"author":{"gitId":"rachelljt"},"content":"        tasks.get(num - 1).markAsDone();"},{"lineNumber":79,"author":{"gitId":"rachelljt"},"content":"    }"},{"lineNumber":80,"author":{"gitId":"rachelljt"},"content":"\u003c\u003c\u003c\u003c\u003c\u003c\u003c HEAD"},{"lineNumber":81,"author":{"gitId":"rachelljt"},"content":"\u003d\u003d\u003d\u003d\u003d\u003d\u003d"},{"lineNumber":82,"author":{"gitId":"rachelljt"},"content":""},{"lineNumber":83,"author":{"gitId":"rachelljt"},"content":"    /**"},{"lineNumber":84,"author":{"gitId":"rachelljt"},"content":"     * Returns a list of matching tasks."},{"lineNumber":85,"author":{"gitId":"rachelljt"},"content":"     *"},{"lineNumber":86,"author":{"gitId":"rachelljt"},"content":"     * @param keyword Keyword of the task."},{"lineNumber":87,"author":{"gitId":"rachelljt"},"content":"     * @return A lists of matching tasks."},{"lineNumber":88,"author":{"gitId":"rachelljt"},"content":"     * @throws DukeException If there are no matching tasks."},{"lineNumber":89,"author":{"gitId":"rachelljt"},"content":"     */"},{"lineNumber":90,"author":{"gitId":"rachelljt"},"content":"    public ArrayList\u003cTask\u003e findMatchingTasks(String keyword) throws DukeException {"},{"lineNumber":91,"author":{"gitId":"rachelljt"},"content":"        ArrayList\u003cTask\u003e newList \u003d new ArrayList\u003c\u003e();"},{"lineNumber":92,"author":{"gitId":"rachelljt"},"content":"        boolean hasFoundMatchingTask \u003d false;"},{"lineNumber":93,"author":{"gitId":"rachelljt"},"content":""},{"lineNumber":94,"author":{"gitId":"rachelljt"},"content":"        for (Task task : tasks) {"},{"lineNumber":95,"author":{"gitId":"rachelljt"},"content":"            if (task.getTaskName().contains(keyword)) {"},{"lineNumber":96,"author":{"gitId":"rachelljt"},"content":"                newList.add(task);"},{"lineNumber":97,"author":{"gitId":"rachelljt"},"content":"                hasFoundMatchingTask \u003d true;"},{"lineNumber":98,"author":{"gitId":"rachelljt"},"content":"            }"},{"lineNumber":99,"author":{"gitId":"rachelljt"},"content":"        }"},{"lineNumber":100,"author":{"gitId":"rachelljt"},"content":""},{"lineNumber":101,"author":{"gitId":"rachelljt"},"content":"        if (!hasFoundMatchingTask) {"},{"lineNumber":102,"author":{"gitId":"rachelljt"},"content":"            throw new DukeException(\"There are no matching tasks in your list!\");"},{"lineNumber":103,"author":{"gitId":"rachelljt"},"content":"        }"},{"lineNumber":104,"author":{"gitId":"rachelljt"},"content":""},{"lineNumber":105,"author":{"gitId":"rachelljt"},"content":"        return newList;"},{"lineNumber":106,"author":{"gitId":"rachelljt"},"content":"    }"},{"lineNumber":107,"author":{"gitId":"rachelljt"},"content":"\u003e\u003e\u003e\u003e\u003e\u003e\u003e branch-Level-9"},{"lineNumber":108,"author":{"gitId":"rachelljt"},"content":"}"}],"authorContributionMap":{"rachelljt":108}},{"path":"src/main/java/duke/tasks/ToDo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"rachelljt"},"content":"package duke.tasks;"},{"lineNumber":2,"author":{"gitId":"rachelljt"},"content":""},{"lineNumber":3,"author":{"gitId":"rachelljt"},"content":"public class ToDo extends Task {"},{"lineNumber":4,"author":{"gitId":"rachelljt"},"content":"    protected String taskName;"},{"lineNumber":5,"author":{"gitId":"rachelljt"},"content":""},{"lineNumber":6,"author":{"gitId":"rachelljt"},"content":"    public ToDo(String taskName) {"},{"lineNumber":7,"author":{"gitId":"rachelljt"},"content":"        super(taskName);"},{"lineNumber":8,"author":{"gitId":"rachelljt"},"content":"    }"},{"lineNumber":9,"author":{"gitId":"rachelljt"},"content":""},{"lineNumber":10,"author":{"gitId":"rachelljt"},"content":"    /**"},{"lineNumber":11,"author":{"gitId":"rachelljt"},"content":"     * Returns a the task type."},{"lineNumber":12,"author":{"gitId":"rachelljt"},"content":"     *"},{"lineNumber":13,"author":{"gitId":"rachelljt"},"content":"     * @return the String of the type."},{"lineNumber":14,"author":{"gitId":"rachelljt"},"content":"     */"},{"lineNumber":15,"author":{"gitId":"rachelljt"},"content":"    public String getTaskType() {"},{"lineNumber":16,"author":{"gitId":"rachelljt"},"content":"        return \"ToDo\";"},{"lineNumber":17,"author":{"gitId":"rachelljt"},"content":"    }"},{"lineNumber":18,"author":{"gitId":"rachelljt"},"content":""},{"lineNumber":19,"author":{"gitId":"rachelljt"},"content":"    /**"},{"lineNumber":20,"author":{"gitId":"rachelljt"},"content":"     * Returns a string of description to be saved in the myDuke.txt."},{"lineNumber":21,"author":{"gitId":"rachelljt"},"content":"     *"},{"lineNumber":22,"author":{"gitId":"rachelljt"},"content":"     * @return A String."},{"lineNumber":23,"author":{"gitId":"rachelljt"},"content":"     */"},{"lineNumber":24,"author":{"gitId":"rachelljt"},"content":"    @Override"},{"lineNumber":25,"author":{"gitId":"rachelljt"},"content":"    public String toSave() {"},{"lineNumber":26,"author":{"gitId":"rachelljt"},"content":"        return \"T / \" + super.isDoneString + super.taskName;"},{"lineNumber":27,"author":{"gitId":"rachelljt"},"content":"    }"},{"lineNumber":28,"author":{"gitId":"rachelljt"},"content":""},{"lineNumber":29,"author":{"gitId":"rachelljt"},"content":"    /**"},{"lineNumber":30,"author":{"gitId":"rachelljt"},"content":"     * Returns a string of description to be printed out."},{"lineNumber":31,"author":{"gitId":"rachelljt"},"content":"     *"},{"lineNumber":32,"author":{"gitId":"rachelljt"},"content":"     * @return A String."},{"lineNumber":33,"author":{"gitId":"rachelljt"},"content":"     */"},{"lineNumber":34,"author":{"gitId":"rachelljt"},"content":"    @Override"},{"lineNumber":35,"author":{"gitId":"rachelljt"},"content":"    public String toString() {"},{"lineNumber":36,"author":{"gitId":"rachelljt"},"content":"        return \"[T]\" + super.toString();"},{"lineNumber":37,"author":{"gitId":"rachelljt"},"content":"    }"},{"lineNumber":38,"author":{"gitId":"rachelljt"},"content":""},{"lineNumber":39,"author":{"gitId":"rachelljt"},"content":"}"}],"authorContributionMap":{"rachelljt":39}},{"path":"src/main/java/duke/ui/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"rachelljt"},"content":"package duke.ui;"},{"lineNumber":2,"author":{"gitId":"rachelljt"},"content":""},{"lineNumber":3,"author":{"gitId":"rachelljt"},"content":"import duke.tasks.Task;"},{"lineNumber":4,"author":{"gitId":"rachelljt"},"content":""},{"lineNumber":5,"author":{"gitId":"rachelljt"},"content":"import java.util.ArrayList;"},{"lineNumber":6,"author":{"gitId":"rachelljt"},"content":"import java.util.Scanner;"},{"lineNumber":7,"author":{"gitId":"rachelljt"},"content":""},{"lineNumber":8,"author":{"gitId":"rachelljt"},"content":"public class Ui {"},{"lineNumber":9,"author":{"gitId":"rachelljt"},"content":"    private final Scanner sc;"},{"lineNumber":10,"author":{"gitId":"rachelljt"},"content":""},{"lineNumber":11,"author":{"gitId":"rachelljt"},"content":"    public Ui() {"},{"lineNumber":12,"author":{"gitId":"rachelljt"},"content":"        sc \u003d new Scanner(System.in);"},{"lineNumber":13,"author":{"gitId":"rachelljt"},"content":"    }"},{"lineNumber":14,"author":{"gitId":"rachelljt"},"content":""},{"lineNumber":15,"author":{"gitId":"rachelljt"},"content":"    public String readCommand() {"},{"lineNumber":16,"author":{"gitId":"rachelljt"},"content":"        return sc.nextLine();"},{"lineNumber":17,"author":{"gitId":"rachelljt"},"content":"    }"},{"lineNumber":18,"author":{"gitId":"rachelljt"},"content":""},{"lineNumber":19,"author":{"gitId":"rachelljt"},"content":"    public void displayAddedTask(Task task, int num) {"},{"lineNumber":20,"author":{"gitId":"rachelljt"},"content":"        System.out.println();"},{"lineNumber":21,"author":{"gitId":"rachelljt"},"content":"        System.out.println(\"☺ Got it. I\u0027ve added this task:\");"},{"lineNumber":22,"author":{"gitId":"rachelljt"},"content":"        System.out.println(task);"},{"lineNumber":23,"author":{"gitId":"rachelljt"},"content":"        System.out.println(\"Now you have \" + num + \" duke.tasks in the list.\");"},{"lineNumber":24,"author":{"gitId":"rachelljt"},"content":"        System.out.println();"},{"lineNumber":25,"author":{"gitId":"rachelljt"},"content":"    }"},{"lineNumber":26,"author":{"gitId":"rachelljt"},"content":""},{"lineNumber":27,"author":{"gitId":"rachelljt"},"content":"    public void displayDoneTask(Task task) {"},{"lineNumber":28,"author":{"gitId":"rachelljt"},"content":"        System.out.println();"},{"lineNumber":29,"author":{"gitId":"rachelljt"},"content":"        System.out.println(\"☺ Nice! I\u0027ve marked this task as done:\");"},{"lineNumber":30,"author":{"gitId":"rachelljt"},"content":"        System.out.println(task);"},{"lineNumber":31,"author":{"gitId":"rachelljt"},"content":"        System.out.println();"},{"lineNumber":32,"author":{"gitId":"rachelljt"},"content":"    }"},{"lineNumber":33,"author":{"gitId":"rachelljt"},"content":""},{"lineNumber":34,"author":{"gitId":"rachelljt"},"content":"    public void displayDeletedTask(Task task, int num) {"},{"lineNumber":35,"author":{"gitId":"rachelljt"},"content":"        System.out.println();"},{"lineNumber":36,"author":{"gitId":"rachelljt"},"content":"        System.out.println(\"☺ Noted. I\u0027ve removed this task:\");"},{"lineNumber":37,"author":{"gitId":"rachelljt"},"content":"        System.out.println(task);"},{"lineNumber":38,"author":{"gitId":"rachelljt"},"content":"        System.out.println(\"Now you have \" + num + \" duke.tasks in the list.\");"},{"lineNumber":39,"author":{"gitId":"rachelljt"},"content":"        System.out.println();"},{"lineNumber":40,"author":{"gitId":"rachelljt"},"content":"    }"},{"lineNumber":41,"author":{"gitId":"rachelljt"},"content":""},{"lineNumber":42,"author":{"gitId":"rachelljt"},"content":"    public void displayMatchingTasks(ArrayList\u003cTask\u003e tasks) {"},{"lineNumber":43,"author":{"gitId":"rachelljt"},"content":"        System.out.println();"},{"lineNumber":44,"author":{"gitId":"rachelljt"},"content":"        System.out.println(\"Here are the matching tasks in your list:\");"},{"lineNumber":45,"author":{"gitId":"rachelljt"},"content":"        for (int i \u003d 1; i \u003c\u003d tasks.size(); i++) {"},{"lineNumber":46,"author":{"gitId":"rachelljt"},"content":"            Task t \u003d tasks.get(i - 1);"},{"lineNumber":47,"author":{"gitId":"rachelljt"},"content":"            System.out.println(i + \".\" + t);"},{"lineNumber":48,"author":{"gitId":"rachelljt"},"content":"        }"},{"lineNumber":49,"author":{"gitId":"rachelljt"},"content":"        System.out.println();"},{"lineNumber":50,"author":{"gitId":"rachelljt"},"content":"    }"},{"lineNumber":51,"author":{"gitId":"rachelljt"},"content":""},{"lineNumber":52,"author":{"gitId":"rachelljt"},"content":"    public void displayList(ArrayList\u003cTask\u003e tasks) {"},{"lineNumber":53,"author":{"gitId":"rachelljt"},"content":"        System.out.println();"},{"lineNumber":54,"author":{"gitId":"rachelljt"},"content":"        System.out.println(\"Here are the tasks in your list:\");"},{"lineNumber":55,"author":{"gitId":"rachelljt"},"content":"        for (int i \u003d 1; i \u003c\u003d tasks.size(); i++) {"},{"lineNumber":56,"author":{"gitId":"rachelljt"},"content":"            Task t \u003d tasks.get(i - 1);"},{"lineNumber":57,"author":{"gitId":"rachelljt"},"content":"            System.out.println(i + \".\" + t);"},{"lineNumber":58,"author":{"gitId":"rachelljt"},"content":"        }"},{"lineNumber":59,"author":{"gitId":"rachelljt"},"content":"        System.out.println();"},{"lineNumber":60,"author":{"gitId":"rachelljt"},"content":"    }"},{"lineNumber":61,"author":{"gitId":"rachelljt"},"content":""},{"lineNumber":62,"author":{"gitId":"rachelljt"},"content":"    public void printExceptions(String message) {"},{"lineNumber":63,"author":{"gitId":"rachelljt"},"content":"        System.out.println();"},{"lineNumber":64,"author":{"gitId":"rachelljt"},"content":"        System.err.println(message);"},{"lineNumber":65,"author":{"gitId":"rachelljt"},"content":"        System.err.println();"},{"lineNumber":66,"author":{"gitId":"rachelljt"},"content":"    }"},{"lineNumber":67,"author":{"gitId":"rachelljt"},"content":""},{"lineNumber":68,"author":{"gitId":"rachelljt"},"content":"    public void welcomeMessage() {"},{"lineNumber":69,"author":{"gitId":"rachelljt"},"content":"        String logo \u003d \" ____        _        \\n\""},{"lineNumber":70,"author":{"gitId":"rachelljt"},"content":"                + \"|  _ \\\\ _   _| | _____ \\n\""},{"lineNumber":71,"author":{"gitId":"rachelljt"},"content":"                + \"| | | | | | | |/ / _ \\\\\\n\""},{"lineNumber":72,"author":{"gitId":"rachelljt"},"content":"                + \"| |_| | |_| |   \u003c  __/\\n\""},{"lineNumber":73,"author":{"gitId":"rachelljt"},"content":"                + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\";"},{"lineNumber":74,"author":{"gitId":"rachelljt"},"content":"        System.out.println(\"Hello from\\n\" + logo + \"\\nWhat can I do for you?\");"},{"lineNumber":75,"author":{"gitId":"rachelljt"},"content":"    }"},{"lineNumber":76,"author":{"gitId":"rachelljt"},"content":""},{"lineNumber":77,"author":{"gitId":"rachelljt"},"content":"    public void goodbyeMessage() {"},{"lineNumber":78,"author":{"gitId":"rachelljt"},"content":"        System.out.println();"},{"lineNumber":79,"author":{"gitId":"rachelljt"},"content":"        System.out.println(\"Bye. Hope to see you again soon! ☺\");"},{"lineNumber":80,"author":{"gitId":"rachelljt"},"content":"        sc.close();"},{"lineNumber":81,"author":{"gitId":"rachelljt"},"content":"    }"},{"lineNumber":82,"author":{"gitId":"rachelljt"},"content":"}"}],"authorContributionMap":{"rachelljt":82}},{"path":"src/test/java/duke/DeadlineTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"rachelljt"},"content":"package duke;"},{"lineNumber":2,"author":{"gitId":"rachelljt"},"content":""},{"lineNumber":3,"author":{"gitId":"rachelljt"},"content":"import org.junit.jupiter.api.Test;"},{"lineNumber":4,"author":{"gitId":"rachelljt"},"content":"import duke.tasks.Deadline;"},{"lineNumber":5,"author":{"gitId":"rachelljt"},"content":""},{"lineNumber":6,"author":{"gitId":"rachelljt"},"content":"import java.time.LocalDateTime;"},{"lineNumber":7,"author":{"gitId":"rachelljt"},"content":""},{"lineNumber":8,"author":{"gitId":"rachelljt"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;"},{"lineNumber":9,"author":{"gitId":"rachelljt"},"content":""},{"lineNumber":10,"author":{"gitId":"rachelljt"},"content":"public class DeadlineTest {"},{"lineNumber":11,"author":{"gitId":"rachelljt"},"content":"    @Test"},{"lineNumber":12,"author":{"gitId":"rachelljt"},"content":"    public void dummyTest() {"},{"lineNumber":13,"author":{"gitId":"rachelljt"},"content":"        Deadline deadline \u003d new Deadline(\"hello\", LocalDateTime.now());"},{"lineNumber":14,"author":{"gitId":"rachelljt"},"content":"        assertEquals(\"Deadline\",deadline.getTaskType());"},{"lineNumber":15,"author":{"gitId":"rachelljt"},"content":"    }"},{"lineNumber":16,"author":{"gitId":"rachelljt"},"content":"}"}],"authorContributionMap":{"rachelljt":16}},{"path":"src/test/java/duke/DukeTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"rachelljt"},"content":"package duke;"},{"lineNumber":2,"author":{"gitId":"rachelljt"},"content":""},{"lineNumber":3,"author":{"gitId":"rachelljt"},"content":"import org.junit.jupiter.api.Test;"},{"lineNumber":4,"author":{"gitId":"rachelljt"},"content":""},{"lineNumber":5,"author":{"gitId":"rachelljt"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;"},{"lineNumber":6,"author":{"gitId":"rachelljt"},"content":""},{"lineNumber":7,"author":{"gitId":"rachelljt"},"content":"public class DukeTest {"},{"lineNumber":8,"author":{"gitId":"rachelljt"},"content":"    @Test"},{"lineNumber":9,"author":{"gitId":"rachelljt"},"content":"    public void dummyTest() {"},{"lineNumber":10,"author":{"gitId":"rachelljt"},"content":"        assertEquals(2,2);"},{"lineNumber":11,"author":{"gitId":"rachelljt"},"content":"    }"},{"lineNumber":12,"author":{"gitId":"rachelljt"},"content":"}"}],"authorContributionMap":{"rachelljt":12}},{"path":"src/test/java/duke/EventTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"rachelljt"},"content":"package duke;"},{"lineNumber":2,"author":{"gitId":"rachelljt"},"content":""},{"lineNumber":3,"author":{"gitId":"rachelljt"},"content":"import org.junit.jupiter.api.Test;"},{"lineNumber":4,"author":{"gitId":"rachelljt"},"content":"import duke.tasks.Event;"},{"lineNumber":5,"author":{"gitId":"rachelljt"},"content":""},{"lineNumber":6,"author":{"gitId":"rachelljt"},"content":"import java.time.LocalDateTime;"},{"lineNumber":7,"author":{"gitId":"rachelljt"},"content":""},{"lineNumber":8,"author":{"gitId":"rachelljt"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;"},{"lineNumber":9,"author":{"gitId":"rachelljt"},"content":""},{"lineNumber":10,"author":{"gitId":"rachelljt"},"content":"public class EventTest {"},{"lineNumber":11,"author":{"gitId":"rachelljt"},"content":"    @Test"},{"lineNumber":12,"author":{"gitId":"rachelljt"},"content":"    public void dummyTest() {"},{"lineNumber":13,"author":{"gitId":"rachelljt"},"content":"        Event event \u003d new Event(\"hello\", LocalDateTime.now());"},{"lineNumber":14,"author":{"gitId":"rachelljt"},"content":"        assertEquals(\"Event\", event.getTaskType());"},{"lineNumber":15,"author":{"gitId":"rachelljt"},"content":""},{"lineNumber":16,"author":{"gitId":"rachelljt"},"content":"    }"},{"lineNumber":17,"author":{"gitId":"rachelljt"},"content":"}"}],"authorContributionMap":{"rachelljt":17}},{"path":"src/test/java/duke/ToDoTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"rachelljt"},"content":"package duke;"},{"lineNumber":2,"author":{"gitId":"rachelljt"},"content":""},{"lineNumber":3,"author":{"gitId":"rachelljt"},"content":"import org.junit.jupiter.api.Test;"},{"lineNumber":4,"author":{"gitId":"rachelljt"},"content":"import duke.tasks.ToDo;"},{"lineNumber":5,"author":{"gitId":"rachelljt"},"content":""},{"lineNumber":6,"author":{"gitId":"rachelljt"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;"},{"lineNumber":7,"author":{"gitId":"rachelljt"},"content":""},{"lineNumber":8,"author":{"gitId":"rachelljt"},"content":""},{"lineNumber":9,"author":{"gitId":"rachelljt"},"content":"public class ToDoTest {"},{"lineNumber":10,"author":{"gitId":"rachelljt"},"content":""},{"lineNumber":11,"author":{"gitId":"rachelljt"},"content":"    @Test"},{"lineNumber":12,"author":{"gitId":"rachelljt"},"content":"    public void dummyTest() {"},{"lineNumber":13,"author":{"gitId":"rachelljt"},"content":"        ToDo todo \u003d new ToDo(\"hello\");"},{"lineNumber":14,"author":{"gitId":"rachelljt"},"content":"        assertEquals(\"ToDo\",todo.getTaskType());"},{"lineNumber":15,"author":{"gitId":"rachelljt"},"content":""},{"lineNumber":16,"author":{"gitId":"rachelljt"},"content":"    }"},{"lineNumber":17,"author":{"gitId":"rachelljt"},"content":""},{"lineNumber":18,"author":{"gitId":"rachelljt"},"content":"}"}],"authorContributionMap":{"rachelljt":18}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"rachelljt"},"content":"deadline homework /by 12 jan"},{"lineNumber":2,"author":{"gitId":"rachelljt"},"content":"todo eat medicine"},{"lineNumber":3,"author":{"gitId":"rachelljt"},"content":"event shopping /at orchard"},{"lineNumber":4,"author":{"gitId":"rachelljt"},"content":"done 2"},{"lineNumber":5,"author":{"gitId":"rachelljt"},"content":"delete 2"}],"authorContributionMap":{"rachelljt":5}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF"},{"lineNumber":2,"author":{"gitId":"-"},"content":""},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin"},{"lineNumber":5,"author":{"gitId":"-"},"content":""},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run"},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT"},{"lineNumber":8,"author":{"gitId":"-"},"content":""},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder"},{"lineNumber":10,"author":{"gitId":"-"},"content":"javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\*.java"},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 ("},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1"},{"lineNumber":14,"author":{"gitId":"-"},"content":")"},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0"},{"lineNumber":16,"author":{"gitId":"-"},"content":""},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"},{"lineNumber":18,"author":{"gitId":"rachelljt"},"content":"java -classpath ..\\bin duke.Duke \u003c input.txt \u003e ACTUAL.TXT"},{"lineNumber":19,"author":{"gitId":"-"},"content":""},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM compare the output to the expected output"},{"lineNumber":21,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT"}],"authorContributionMap":{"rachelljt":1,"-":20}}]
