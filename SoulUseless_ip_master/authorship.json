[{"path":"README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"# Duke project template"},{"lineNumber":2,"author":{"gitId":"-"},"content":""},{"lineNumber":3,"author":{"gitId":"-"},"content":"This is a project template for a greenfield Java project. It\u0027s named after the Java mascot _Duke_. Given below are instructions on how to use it."},{"lineNumber":4,"author":{"gitId":"-"},"content":""},{"lineNumber":5,"author":{"gitId":"-"},"content":"## Setting up in Intellij"},{"lineNumber":6,"author":{"gitId":"-"},"content":""},{"lineNumber":7,"author":{"gitId":"-"},"content":"Prerequisites: JDK 11, update Intellij to the most recent version."},{"lineNumber":8,"author":{"gitId":"-"},"content":""},{"lineNumber":9,"author":{"gitId":"-"},"content":"1. Open Intellij (if you are not in the welcome screen, click `File` \u003e `Close Project` to close the existing project first)"},{"lineNumber":10,"author":{"gitId":"-"},"content":"1. Open the project into Intellij as follows:"},{"lineNumber":11,"author":{"gitId":"-"},"content":"   1. Click `Open`."},{"lineNumber":12,"author":{"gitId":"-"},"content":"   1. Select the project directory, and click `OK`."},{"lineNumber":13,"author":{"gitId":"-"},"content":"   1. If there are any further prompts, accept the defaults."},{"lineNumber":14,"author":{"gitId":"-"},"content":"1. Configure the project to use **JDK 11** (not other versions) as explained in [here](https://www.jetbrains.com/help/idea/sdk.html#set-up-jdk)."},{"lineNumber":15,"author":{"gitId":"SoulUseless"},"content":"1. After that, locate the `src/main/java/Duke.java` file, right-click it, and choose `Run Duke.main()`. If the setup is correct, you should see something like the below:"},{"lineNumber":16,"author":{"gitId":"-"},"content":"   ```"},{"lineNumber":17,"author":{"gitId":"-"},"content":"   Hello from"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    ____        _        "},{"lineNumber":19,"author":{"gitId":"-"},"content":"   |  _ \\ _   _| | _____ "},{"lineNumber":20,"author":{"gitId":"-"},"content":"   | | | | | | | |/ / _ \\"},{"lineNumber":21,"author":{"gitId":"-"},"content":"   | |_| | |_| |   \u003c  __/"},{"lineNumber":22,"author":{"gitId":"-"},"content":"   |____/ \\__,_|_|\\_\\___|"},{"lineNumber":23,"author":{"gitId":"-"},"content":"   ```"}],"authorContributionMap":{"-":22,"SoulUseless":1}},{"path":"src/main/java/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"SoulUseless"},"content":"import commands.Command;"},{"lineNumber":2,"author":{"gitId":"SoulUseless"},"content":"import duke.Parser;"},{"lineNumber":3,"author":{"gitId":"SoulUseless"},"content":"import duke.TaskManager;"},{"lineNumber":4,"author":{"gitId":"SoulUseless"},"content":"import duke.Ui;"},{"lineNumber":5,"author":{"gitId":"SoulUseless"},"content":"import exceptions.DukeException;"},{"lineNumber":6,"author":{"gitId":"SoulUseless"},"content":""},{"lineNumber":7,"author":{"gitId":"-"},"content":"public class Duke {"},{"lineNumber":8,"author":{"gitId":"SoulUseless"},"content":"    private TaskManager tm;"},{"lineNumber":9,"author":{"gitId":"SoulUseless"},"content":"    private Ui ui;"},{"lineNumber":10,"author":{"gitId":"SoulUseless"},"content":""},{"lineNumber":11,"author":{"gitId":"SoulUseless"},"content":"    public Duke() {"},{"lineNumber":12,"author":{"gitId":"SoulUseless"},"content":"        ui \u003d new Ui();"},{"lineNumber":13,"author":{"gitId":"SoulUseless"},"content":"        tm \u003d new TaskManager(ui);"},{"lineNumber":14,"author":{"gitId":"SoulUseless"},"content":"    }"},{"lineNumber":15,"author":{"gitId":"SoulUseless"},"content":""},{"lineNumber":16,"author":{"gitId":"SoulUseless"},"content":"    public void run() {"},{"lineNumber":17,"author":{"gitId":"SoulUseless"},"content":"        ui.showWelcome();"},{"lineNumber":18,"author":{"gitId":"SoulUseless"},"content":""},{"lineNumber":19,"author":{"gitId":"SoulUseless"},"content":"        boolean done \u003d false;"},{"lineNumber":20,"author":{"gitId":"SoulUseless"},"content":"        while (!done) {"},{"lineNumber":21,"author":{"gitId":"SoulUseless"},"content":"            try {"},{"lineNumber":22,"author":{"gitId":"SoulUseless"},"content":"                String command \u003d ui.nextCommand();"},{"lineNumber":23,"author":{"gitId":"SoulUseless"},"content":"                ui.showLine();"},{"lineNumber":24,"author":{"gitId":"SoulUseless"},"content":"                Command c \u003d Parser.parse(command);"},{"lineNumber":25,"author":{"gitId":"SoulUseless"},"content":"                c.execute(ui, tm);"},{"lineNumber":26,"author":{"gitId":"SoulUseless"},"content":"                done \u003d c.isExit();"},{"lineNumber":27,"author":{"gitId":"SoulUseless"},"content":"            } catch (DukeException e) {"},{"lineNumber":28,"author":{"gitId":"SoulUseless"},"content":"                ui.showError(e.getMessage());"},{"lineNumber":29,"author":{"gitId":"SoulUseless"},"content":"            } finally {"},{"lineNumber":30,"author":{"gitId":"SoulUseless"},"content":"                ui.showLine();"},{"lineNumber":31,"author":{"gitId":"SoulUseless"},"content":"            }"},{"lineNumber":32,"author":{"gitId":"SoulUseless"},"content":"        }"},{"lineNumber":33,"author":{"gitId":"SoulUseless"},"content":"    }"},{"lineNumber":34,"author":{"gitId":"SoulUseless"},"content":""},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public static void main(String[] args) {"},{"lineNumber":36,"author":{"gitId":"SoulUseless"},"content":"        new Duke().run();"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":38,"author":{"gitId":"-"},"content":"}"}],"authorContributionMap":{"-":4,"SoulUseless":34}},{"path":"src/main/java/commands/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"SoulUseless"},"content":"package commands;"},{"lineNumber":2,"author":{"gitId":"SoulUseless"},"content":""},{"lineNumber":3,"author":{"gitId":"SoulUseless"},"content":"import duke.TaskManager;"},{"lineNumber":4,"author":{"gitId":"SoulUseless"},"content":"import duke.Ui;"},{"lineNumber":5,"author":{"gitId":"SoulUseless"},"content":"import exceptions.DukeException;"},{"lineNumber":6,"author":{"gitId":"SoulUseless"},"content":""},{"lineNumber":7,"author":{"gitId":"SoulUseless"},"content":"public abstract class Command {"},{"lineNumber":8,"author":{"gitId":"SoulUseless"},"content":""},{"lineNumber":9,"author":{"gitId":"SoulUseless"},"content":"    public boolean isExit() {"},{"lineNumber":10,"author":{"gitId":"SoulUseless"},"content":"        return false;"},{"lineNumber":11,"author":{"gitId":"SoulUseless"},"content":"    }"},{"lineNumber":12,"author":{"gitId":"SoulUseless"},"content":""},{"lineNumber":13,"author":{"gitId":"SoulUseless"},"content":"    public abstract void execute(Ui ui, TaskManager tm) throws DukeException;"},{"lineNumber":14,"author":{"gitId":"SoulUseless"},"content":"}"}],"authorContributionMap":{"SoulUseless":14}},{"path":"src/main/java/commands/DeadlineCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"SoulUseless"},"content":"package commands;"},{"lineNumber":2,"author":{"gitId":"SoulUseless"},"content":""},{"lineNumber":3,"author":{"gitId":"SoulUseless"},"content":"import duke.Ui;"},{"lineNumber":4,"author":{"gitId":"SoulUseless"},"content":"import duke.TaskManager;"},{"lineNumber":5,"author":{"gitId":"SoulUseless"},"content":""},{"lineNumber":6,"author":{"gitId":"SoulUseless"},"content":"public class DeadlineCommand extends Command {"},{"lineNumber":7,"author":{"gitId":"SoulUseless"},"content":"    private String name;"},{"lineNumber":8,"author":{"gitId":"SoulUseless"},"content":"    private String flag;"},{"lineNumber":9,"author":{"gitId":"SoulUseless"},"content":""},{"lineNumber":10,"author":{"gitId":"SoulUseless"},"content":"    public DeadlineCommand(String[] params) {"},{"lineNumber":11,"author":{"gitId":"SoulUseless"},"content":"        this.name \u003d params[0];"},{"lineNumber":12,"author":{"gitId":"SoulUseless"},"content":"        this.flag \u003d params[1];"},{"lineNumber":13,"author":{"gitId":"SoulUseless"},"content":"    }"},{"lineNumber":14,"author":{"gitId":"SoulUseless"},"content":""},{"lineNumber":15,"author":{"gitId":"SoulUseless"},"content":"    public void execute(Ui ui, TaskManager tm) {"},{"lineNumber":16,"author":{"gitId":"SoulUseless"},"content":"        tm.addDeadlineTask(name, flag);"},{"lineNumber":17,"author":{"gitId":"SoulUseless"},"content":"    }"},{"lineNumber":18,"author":{"gitId":"SoulUseless"},"content":"}"}],"authorContributionMap":{"SoulUseless":18}},{"path":"src/main/java/commands/DeleteCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"SoulUseless"},"content":"package commands;"},{"lineNumber":2,"author":{"gitId":"SoulUseless"},"content":""},{"lineNumber":3,"author":{"gitId":"SoulUseless"},"content":"import duke.Ui;"},{"lineNumber":4,"author":{"gitId":"SoulUseless"},"content":"import duke.TaskManager;"},{"lineNumber":5,"author":{"gitId":"SoulUseless"},"content":"import exceptions.DukeException;"},{"lineNumber":6,"author":{"gitId":"SoulUseless"},"content":""},{"lineNumber":7,"author":{"gitId":"SoulUseless"},"content":"public class DeleteCommand extends Command {"},{"lineNumber":8,"author":{"gitId":"SoulUseless"},"content":"    private int taskIndex;"},{"lineNumber":9,"author":{"gitId":"SoulUseless"},"content":""},{"lineNumber":10,"author":{"gitId":"SoulUseless"},"content":"    public DeleteCommand(int index) {"},{"lineNumber":11,"author":{"gitId":"SoulUseless"},"content":"        this.taskIndex \u003d index;"},{"lineNumber":12,"author":{"gitId":"SoulUseless"},"content":"    }"},{"lineNumber":13,"author":{"gitId":"SoulUseless"},"content":""},{"lineNumber":14,"author":{"gitId":"SoulUseless"},"content":"    public void execute(Ui ui, TaskManager tm) throws DukeException {"},{"lineNumber":15,"author":{"gitId":"SoulUseless"},"content":"        tm.deleteTask(taskIndex);"},{"lineNumber":16,"author":{"gitId":"SoulUseless"},"content":"    }"},{"lineNumber":17,"author":{"gitId":"SoulUseless"},"content":"}"}],"authorContributionMap":{"SoulUseless":17}},{"path":"src/main/java/commands/DoneCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"SoulUseless"},"content":"package commands;"},{"lineNumber":2,"author":{"gitId":"SoulUseless"},"content":""},{"lineNumber":3,"author":{"gitId":"SoulUseless"},"content":"import duke.TaskManager;"},{"lineNumber":4,"author":{"gitId":"SoulUseless"},"content":"import duke.Ui;"},{"lineNumber":5,"author":{"gitId":"SoulUseless"},"content":"import exceptions.DukeException;"},{"lineNumber":6,"author":{"gitId":"SoulUseless"},"content":""},{"lineNumber":7,"author":{"gitId":"SoulUseless"},"content":"public class DoneCommand extends Command {"},{"lineNumber":8,"author":{"gitId":"SoulUseless"},"content":"    private int taskIndex;"},{"lineNumber":9,"author":{"gitId":"SoulUseless"},"content":""},{"lineNumber":10,"author":{"gitId":"SoulUseless"},"content":"    public DoneCommand(int index) {"},{"lineNumber":11,"author":{"gitId":"SoulUseless"},"content":"        this.taskIndex \u003d index;"},{"lineNumber":12,"author":{"gitId":"SoulUseless"},"content":"    }"},{"lineNumber":13,"author":{"gitId":"SoulUseless"},"content":""},{"lineNumber":14,"author":{"gitId":"SoulUseless"},"content":"    public void execute(Ui ui, TaskManager tm) throws DukeException {"},{"lineNumber":15,"author":{"gitId":"SoulUseless"},"content":"        tm.markTaskAsDone(taskIndex);"},{"lineNumber":16,"author":{"gitId":"SoulUseless"},"content":"    }"},{"lineNumber":17,"author":{"gitId":"SoulUseless"},"content":"}"}],"authorContributionMap":{"SoulUseless":17}},{"path":"src/main/java/commands/EventCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"SoulUseless"},"content":"package commands;"},{"lineNumber":2,"author":{"gitId":"SoulUseless"},"content":""},{"lineNumber":3,"author":{"gitId":"SoulUseless"},"content":"import duke.Ui;"},{"lineNumber":4,"author":{"gitId":"SoulUseless"},"content":"import duke.TaskManager;"},{"lineNumber":5,"author":{"gitId":"SoulUseless"},"content":""},{"lineNumber":6,"author":{"gitId":"SoulUseless"},"content":"public class EventCommand extends Command {"},{"lineNumber":7,"author":{"gitId":"SoulUseless"},"content":"    private String name;"},{"lineNumber":8,"author":{"gitId":"SoulUseless"},"content":"    private String flag;"},{"lineNumber":9,"author":{"gitId":"SoulUseless"},"content":""},{"lineNumber":10,"author":{"gitId":"SoulUseless"},"content":"    public EventCommand(String[] params) {"},{"lineNumber":11,"author":{"gitId":"SoulUseless"},"content":"        this.name \u003d params[0];"},{"lineNumber":12,"author":{"gitId":"SoulUseless"},"content":"        this.flag \u003d params[1];"},{"lineNumber":13,"author":{"gitId":"SoulUseless"},"content":"    }"},{"lineNumber":14,"author":{"gitId":"SoulUseless"},"content":""},{"lineNumber":15,"author":{"gitId":"SoulUseless"},"content":"    public void execute(Ui ui, TaskManager tm) {"},{"lineNumber":16,"author":{"gitId":"SoulUseless"},"content":"        tm.addEventTask(name, flag);"},{"lineNumber":17,"author":{"gitId":"SoulUseless"},"content":"    }"},{"lineNumber":18,"author":{"gitId":"SoulUseless"},"content":"}"}],"authorContributionMap":{"SoulUseless":18}},{"path":"src/main/java/commands/ExitCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"SoulUseless"},"content":"package commands;"},{"lineNumber":2,"author":{"gitId":"SoulUseless"},"content":""},{"lineNumber":3,"author":{"gitId":"SoulUseless"},"content":"import duke.TaskManager;"},{"lineNumber":4,"author":{"gitId":"SoulUseless"},"content":"import duke.Ui;"},{"lineNumber":5,"author":{"gitId":"SoulUseless"},"content":""},{"lineNumber":6,"author":{"gitId":"SoulUseless"},"content":"public class ExitCommand extends Command {"},{"lineNumber":7,"author":{"gitId":"SoulUseless"},"content":""},{"lineNumber":8,"author":{"gitId":"SoulUseless"},"content":"    public ExitCommand() {"},{"lineNumber":9,"author":{"gitId":"SoulUseless"},"content":"        //do nothing"},{"lineNumber":10,"author":{"gitId":"SoulUseless"},"content":"    }"},{"lineNumber":11,"author":{"gitId":"SoulUseless"},"content":""},{"lineNumber":12,"author":{"gitId":"SoulUseless"},"content":"    public void execute(Ui ui, TaskManager tm) {"},{"lineNumber":13,"author":{"gitId":"SoulUseless"},"content":"        ui.showByeBye();"},{"lineNumber":14,"author":{"gitId":"SoulUseless"},"content":"    }"},{"lineNumber":15,"author":{"gitId":"SoulUseless"},"content":""},{"lineNumber":16,"author":{"gitId":"SoulUseless"},"content":"    @Override"},{"lineNumber":17,"author":{"gitId":"SoulUseless"},"content":"    public boolean isExit() {"},{"lineNumber":18,"author":{"gitId":"SoulUseless"},"content":"        return true;"},{"lineNumber":19,"author":{"gitId":"SoulUseless"},"content":"    }"},{"lineNumber":20,"author":{"gitId":"SoulUseless"},"content":""},{"lineNumber":21,"author":{"gitId":"SoulUseless"},"content":"}"}],"authorContributionMap":{"SoulUseless":21}},{"path":"src/main/java/commands/ListCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"SoulUseless"},"content":"package commands;"},{"lineNumber":2,"author":{"gitId":"SoulUseless"},"content":""},{"lineNumber":3,"author":{"gitId":"SoulUseless"},"content":"import duke.Ui;"},{"lineNumber":4,"author":{"gitId":"SoulUseless"},"content":"import duke.TaskManager;"},{"lineNumber":5,"author":{"gitId":"SoulUseless"},"content":""},{"lineNumber":6,"author":{"gitId":"SoulUseless"},"content":"public class ListCommand extends Command {"},{"lineNumber":7,"author":{"gitId":"SoulUseless"},"content":"    public ListCommand() {"},{"lineNumber":8,"author":{"gitId":"SoulUseless"},"content":"        //do nothing"},{"lineNumber":9,"author":{"gitId":"SoulUseless"},"content":"    }"},{"lineNumber":10,"author":{"gitId":"SoulUseless"},"content":""},{"lineNumber":11,"author":{"gitId":"SoulUseless"},"content":"    public void execute(Ui ui, TaskManager tm) {"},{"lineNumber":12,"author":{"gitId":"SoulUseless"},"content":"        ui.showTasks(tm.getTasks());"},{"lineNumber":13,"author":{"gitId":"SoulUseless"},"content":"    }"},{"lineNumber":14,"author":{"gitId":"SoulUseless"},"content":"}"}],"authorContributionMap":{"SoulUseless":14}},{"path":"src/main/java/commands/ToDoCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"SoulUseless"},"content":"package commands;"},{"lineNumber":2,"author":{"gitId":"SoulUseless"},"content":""},{"lineNumber":3,"author":{"gitId":"SoulUseless"},"content":"import duke.Ui;"},{"lineNumber":4,"author":{"gitId":"SoulUseless"},"content":"import duke.TaskManager;"},{"lineNumber":5,"author":{"gitId":"SoulUseless"},"content":""},{"lineNumber":6,"author":{"gitId":"SoulUseless"},"content":"public class ToDoCommand extends Command {"},{"lineNumber":7,"author":{"gitId":"SoulUseless"},"content":"    private String name;"},{"lineNumber":8,"author":{"gitId":"SoulUseless"},"content":""},{"lineNumber":9,"author":{"gitId":"SoulUseless"},"content":"    public ToDoCommand(String name) {"},{"lineNumber":10,"author":{"gitId":"SoulUseless"},"content":"        this.name \u003d name;"},{"lineNumber":11,"author":{"gitId":"SoulUseless"},"content":"    }"},{"lineNumber":12,"author":{"gitId":"SoulUseless"},"content":""},{"lineNumber":13,"author":{"gitId":"SoulUseless"},"content":"    public void execute(Ui ui, TaskManager tm) {"},{"lineNumber":14,"author":{"gitId":"SoulUseless"},"content":"        tm.addToDoTask(name);"},{"lineNumber":15,"author":{"gitId":"SoulUseless"},"content":"    }"},{"lineNumber":16,"author":{"gitId":"SoulUseless"},"content":"}"}],"authorContributionMap":{"SoulUseless":16}},{"path":"src/main/java/duke/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"SoulUseless"},"content":"package duke;"},{"lineNumber":2,"author":{"gitId":"SoulUseless"},"content":""},{"lineNumber":3,"author":{"gitId":"SoulUseless"},"content":"import commands.*;"},{"lineNumber":4,"author":{"gitId":"SoulUseless"},"content":"import exceptions.*;"},{"lineNumber":5,"author":{"gitId":"SoulUseless"},"content":""},{"lineNumber":6,"author":{"gitId":"SoulUseless"},"content":"public class Parser {"},{"lineNumber":7,"author":{"gitId":"SoulUseless"},"content":"    public static String[] acceptedCommands \u003d {"},{"lineNumber":8,"author":{"gitId":"SoulUseless"},"content":"            \"todo\", \"deadline\", \"event\", \"bye\", \"list\", \"done\", \"delete\""},{"lineNumber":9,"author":{"gitId":"SoulUseless"},"content":"    };"},{"lineNumber":10,"author":{"gitId":"SoulUseless"},"content":""},{"lineNumber":11,"author":{"gitId":"SoulUseless"},"content":"    public static void verifyCommand(String c) throws DukeUnknownCommandException {"},{"lineNumber":12,"author":{"gitId":"SoulUseless"},"content":"        boolean found \u003d false;"},{"lineNumber":13,"author":{"gitId":"SoulUseless"},"content":"        for (String cmd : acceptedCommands) {"},{"lineNumber":14,"author":{"gitId":"SoulUseless"},"content":"            if (c.equals(cmd)) {"},{"lineNumber":15,"author":{"gitId":"SoulUseless"},"content":"                found \u003d true;"},{"lineNumber":16,"author":{"gitId":"SoulUseless"},"content":"                break;"},{"lineNumber":17,"author":{"gitId":"SoulUseless"},"content":"            }"},{"lineNumber":18,"author":{"gitId":"SoulUseless"},"content":"        }"},{"lineNumber":19,"author":{"gitId":"SoulUseless"},"content":"        if (!found) {"},{"lineNumber":20,"author":{"gitId":"SoulUseless"},"content":"            throw new DukeUnknownCommandException();"},{"lineNumber":21,"author":{"gitId":"SoulUseless"},"content":"        }"},{"lineNumber":22,"author":{"gitId":"SoulUseless"},"content":"    }"},{"lineNumber":23,"author":{"gitId":"SoulUseless"},"content":""},{"lineNumber":24,"author":{"gitId":"SoulUseless"},"content":"    public static String[] extractFlag (String c, String s, String flag) throws DukeMissingFlagException {"},{"lineNumber":25,"author":{"gitId":"SoulUseless"},"content":"        String[] output \u003d s.split(flag);"},{"lineNumber":26,"author":{"gitId":"SoulUseless"},"content":"        if (output.length \u003c 2) {"},{"lineNumber":27,"author":{"gitId":"SoulUseless"},"content":"            throw new DukeMissingFlagException(c, flag);"},{"lineNumber":28,"author":{"gitId":"SoulUseless"},"content":"        }"},{"lineNumber":29,"author":{"gitId":"SoulUseless"},"content":"        return output;"},{"lineNumber":30,"author":{"gitId":"SoulUseless"},"content":"    }"},{"lineNumber":31,"author":{"gitId":"SoulUseless"},"content":""},{"lineNumber":32,"author":{"gitId":"SoulUseless"},"content":"    public static Command parse(String c) throws DukeException {"},{"lineNumber":33,"author":{"gitId":"SoulUseless"},"content":"        String[] params \u003d c.strip().split(\" \", 2);"},{"lineNumber":34,"author":{"gitId":"SoulUseless"},"content":""},{"lineNumber":35,"author":{"gitId":"SoulUseless"},"content":"        //command integrity verification"},{"lineNumber":36,"author":{"gitId":"SoulUseless"},"content":"        verifyCommand(params[0]);"},{"lineNumber":37,"author":{"gitId":"SoulUseless"},"content":""},{"lineNumber":38,"author":{"gitId":"SoulUseless"},"content":"        //zero-param commands"},{"lineNumber":39,"author":{"gitId":"SoulUseless"},"content":"        if (params[0].equals(\"bye\")) {"},{"lineNumber":40,"author":{"gitId":"SoulUseless"},"content":"            return new ExitCommand();"},{"lineNumber":41,"author":{"gitId":"SoulUseless"},"content":"        } else if (params[0].equals(\"list\")) {"},{"lineNumber":42,"author":{"gitId":"SoulUseless"},"content":"            return new ListCommand();"},{"lineNumber":43,"author":{"gitId":"SoulUseless"},"content":"        }"},{"lineNumber":44,"author":{"gitId":"SoulUseless"},"content":""},{"lineNumber":45,"author":{"gitId":"SoulUseless"},"content":"        //command integrity verification - parameter check"},{"lineNumber":46,"author":{"gitId":"SoulUseless"},"content":"        if (params.length \u003c 2) {"},{"lineNumber":47,"author":{"gitId":"SoulUseless"},"content":"            throw new DukeInsufficientParametersException(params[0]);"},{"lineNumber":48,"author":{"gitId":"SoulUseless"},"content":"        }"},{"lineNumber":49,"author":{"gitId":"SoulUseless"},"content":""},{"lineNumber":50,"author":{"gitId":"SoulUseless"},"content":"        //non-zero-param commands"},{"lineNumber":51,"author":{"gitId":"SoulUseless"},"content":"        try {"},{"lineNumber":52,"author":{"gitId":"SoulUseless"},"content":"            switch (params[0]) {"},{"lineNumber":53,"author":{"gitId":"SoulUseless"},"content":"                case \"done\":"},{"lineNumber":54,"author":{"gitId":"SoulUseless"},"content":"                    return new DoneCommand(Integer.parseInt(params[1]));"},{"lineNumber":55,"author":{"gitId":"SoulUseless"},"content":"                case \"delete\":"},{"lineNumber":56,"author":{"gitId":"SoulUseless"},"content":"                    return new DeleteCommand(Integer.parseInt(params[1]));"},{"lineNumber":57,"author":{"gitId":"SoulUseless"},"content":"                case \"todo\":"},{"lineNumber":58,"author":{"gitId":"SoulUseless"},"content":"                    return new ToDoCommand(params[1]);"},{"lineNumber":59,"author":{"gitId":"SoulUseless"},"content":"                case \"deadline\":"},{"lineNumber":60,"author":{"gitId":"SoulUseless"},"content":"                    return new DeadlineCommand(extractFlag(params[0], params[1], \"/by\"));"},{"lineNumber":61,"author":{"gitId":"SoulUseless"},"content":"                case \"event\":"},{"lineNumber":62,"author":{"gitId":"SoulUseless"},"content":"                    return new EventCommand(extractFlag(params[0], params[1], \"/at\"));"},{"lineNumber":63,"author":{"gitId":"SoulUseless"},"content":"            }"},{"lineNumber":64,"author":{"gitId":"SoulUseless"},"content":"        } catch (DukeException e) {"},{"lineNumber":65,"author":{"gitId":"SoulUseless"},"content":"            throw e;"},{"lineNumber":66,"author":{"gitId":"SoulUseless"},"content":"        } catch (Exception e) {"},{"lineNumber":67,"author":{"gitId":"SoulUseless"},"content":"            throw new DukeInvalidParametersException();"},{"lineNumber":68,"author":{"gitId":"SoulUseless"},"content":"        }"},{"lineNumber":69,"author":{"gitId":"SoulUseless"},"content":"        throw new DukeUnknownCommandException();"},{"lineNumber":70,"author":{"gitId":"SoulUseless"},"content":"    }"},{"lineNumber":71,"author":{"gitId":"SoulUseless"},"content":""},{"lineNumber":72,"author":{"gitId":"SoulUseless"},"content":"}"}],"authorContributionMap":{"SoulUseless":72}},{"path":"src/main/java/duke/TaskManager.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"SoulUseless"},"content":"package duke;"},{"lineNumber":2,"author":{"gitId":"SoulUseless"},"content":""},{"lineNumber":3,"author":{"gitId":"SoulUseless"},"content":"import exceptions.DukeIndexOutOfRangeException;"},{"lineNumber":4,"author":{"gitId":"SoulUseless"},"content":"import exceptions.DukeTaskAlreadyDoneException;"},{"lineNumber":5,"author":{"gitId":"SoulUseless"},"content":"import tasks.DeadlineTask;"},{"lineNumber":6,"author":{"gitId":"SoulUseless"},"content":"import tasks.EventTask;"},{"lineNumber":7,"author":{"gitId":"SoulUseless"},"content":"import tasks.Task;"},{"lineNumber":8,"author":{"gitId":"SoulUseless"},"content":"import tasks.ToDoTask;"},{"lineNumber":9,"author":{"gitId":"SoulUseless"},"content":""},{"lineNumber":10,"author":{"gitId":"SoulUseless"},"content":"import java.util.ArrayList;"},{"lineNumber":11,"author":{"gitId":"SoulUseless"},"content":""},{"lineNumber":12,"author":{"gitId":"SoulUseless"},"content":"/**"},{"lineNumber":13,"author":{"gitId":"SoulUseless"},"content":" *  duke.TaskManager manages all tasks given to Duke."},{"lineNumber":14,"author":{"gitId":"SoulUseless"},"content":" *"},{"lineNumber":15,"author":{"gitId":"SoulUseless"},"content":" *  @author Yap Jing Kang"},{"lineNumber":16,"author":{"gitId":"SoulUseless"},"content":" */"},{"lineNumber":17,"author":{"gitId":"SoulUseless"},"content":"public class TaskManager {"},{"lineNumber":18,"author":{"gitId":"SoulUseless"},"content":"    protected ArrayList\u003cTask\u003e tasks;"},{"lineNumber":19,"author":{"gitId":"SoulUseless"},"content":"    protected Ui ui;"},{"lineNumber":20,"author":{"gitId":"SoulUseless"},"content":""},{"lineNumber":21,"author":{"gitId":"SoulUseless"},"content":"    /**"},{"lineNumber":22,"author":{"gitId":"SoulUseless"},"content":"     *  Constructor initialises task list."},{"lineNumber":23,"author":{"gitId":"SoulUseless"},"content":"     */"},{"lineNumber":24,"author":{"gitId":"SoulUseless"},"content":"    public TaskManager(Ui ui) {"},{"lineNumber":25,"author":{"gitId":"SoulUseless"},"content":"        this.ui \u003d ui;"},{"lineNumber":26,"author":{"gitId":"SoulUseless"},"content":"        this.tasks \u003d new ArrayList\u003c\u003e();"},{"lineNumber":27,"author":{"gitId":"SoulUseless"},"content":"    }"},{"lineNumber":28,"author":{"gitId":"SoulUseless"},"content":""},{"lineNumber":29,"author":{"gitId":"SoulUseless"},"content":"    public ArrayList\u003cTask\u003e getTasks() {"},{"lineNumber":30,"author":{"gitId":"SoulUseless"},"content":"        return tasks;"},{"lineNumber":31,"author":{"gitId":"SoulUseless"},"content":"    }"},{"lineNumber":32,"author":{"gitId":"SoulUseless"},"content":""},{"lineNumber":33,"author":{"gitId":"SoulUseless"},"content":"    public void addToDoTask(String name) {"},{"lineNumber":34,"author":{"gitId":"SoulUseless"},"content":"        tasks.add(new ToDoTask(name));"},{"lineNumber":35,"author":{"gitId":"SoulUseless"},"content":"        ui.println(\"    added: \" + name);"},{"lineNumber":36,"author":{"gitId":"SoulUseless"},"content":"        ui.println(String.format(\"    Now you have %d task(s)\","},{"lineNumber":37,"author":{"gitId":"SoulUseless"},"content":"                tasks.size()));"},{"lineNumber":38,"author":{"gitId":"SoulUseless"},"content":"    }"},{"lineNumber":39,"author":{"gitId":"SoulUseless"},"content":""},{"lineNumber":40,"author":{"gitId":"SoulUseless"},"content":"    public void addDeadlineTask(String name, String flag) {"},{"lineNumber":41,"author":{"gitId":"SoulUseless"},"content":"        tasks.add(new DeadlineTask(name, flag));"},{"lineNumber":42,"author":{"gitId":"SoulUseless"},"content":"        ui.println(\"    added: \" + name);"},{"lineNumber":43,"author":{"gitId":"SoulUseless"},"content":"        ui.println(String.format(\"    Now you have %d task(s)\","},{"lineNumber":44,"author":{"gitId":"SoulUseless"},"content":"                tasks.size()));"},{"lineNumber":45,"author":{"gitId":"SoulUseless"},"content":"    }"},{"lineNumber":46,"author":{"gitId":"SoulUseless"},"content":""},{"lineNumber":47,"author":{"gitId":"SoulUseless"},"content":"    public void addEventTask(String name, String flag) {"},{"lineNumber":48,"author":{"gitId":"SoulUseless"},"content":"        tasks.add(new EventTask(name, flag));"},{"lineNumber":49,"author":{"gitId":"SoulUseless"},"content":"        ui.println(\"    added: \" + name);"},{"lineNumber":50,"author":{"gitId":"SoulUseless"},"content":"        ui.println(String.format(\"    Now you have %d task(s)\","},{"lineNumber":51,"author":{"gitId":"SoulUseless"},"content":"                tasks.size()));"},{"lineNumber":52,"author":{"gitId":"SoulUseless"},"content":"    }"},{"lineNumber":53,"author":{"gitId":"SoulUseless"},"content":""},{"lineNumber":54,"author":{"gitId":"SoulUseless"},"content":""},{"lineNumber":55,"author":{"gitId":"SoulUseless"},"content":"    /**"},{"lineNumber":56,"author":{"gitId":"SoulUseless"},"content":"     *  Method to mark specified task done."},{"lineNumber":57,"author":{"gitId":"SoulUseless"},"content":"     *"},{"lineNumber":58,"author":{"gitId":"SoulUseless"},"content":"     *\t@param x tasks.Task index."},{"lineNumber":59,"author":{"gitId":"SoulUseless"},"content":"     *"},{"lineNumber":60,"author":{"gitId":"SoulUseless"},"content":"     */"},{"lineNumber":61,"author":{"gitId":"SoulUseless"},"content":"    public void markTaskAsDone(int x) throws DukeIndexOutOfRangeException, DukeTaskAlreadyDoneException {"},{"lineNumber":62,"author":{"gitId":"SoulUseless"},"content":"        try {"},{"lineNumber":63,"author":{"gitId":"SoulUseless"},"content":"            Task t \u003d tasks.get(x - 1);"},{"lineNumber":64,"author":{"gitId":"SoulUseless"},"content":"            if (t.markAsDone()) {"},{"lineNumber":65,"author":{"gitId":"SoulUseless"},"content":"                ui.println(\"    Marked as Done: \");"},{"lineNumber":66,"author":{"gitId":"SoulUseless"},"content":"                ui.println(\"      \" + t.toString());"},{"lineNumber":67,"author":{"gitId":"SoulUseless"},"content":"            } else {"},{"lineNumber":68,"author":{"gitId":"SoulUseless"},"content":"                throw new DukeTaskAlreadyDoneException();"},{"lineNumber":69,"author":{"gitId":"SoulUseless"},"content":"            }"},{"lineNumber":70,"author":{"gitId":"SoulUseless"},"content":"        } catch (IndexOutOfBoundsException e) {"},{"lineNumber":71,"author":{"gitId":"SoulUseless"},"content":"            throw new DukeIndexOutOfRangeException();"},{"lineNumber":72,"author":{"gitId":"SoulUseless"},"content":"        }"},{"lineNumber":73,"author":{"gitId":"SoulUseless"},"content":"    }"},{"lineNumber":74,"author":{"gitId":"SoulUseless"},"content":""},{"lineNumber":75,"author":{"gitId":"SoulUseless"},"content":"    /**"},{"lineNumber":76,"author":{"gitId":"SoulUseless"},"content":"     *  Method to remove specified."},{"lineNumber":77,"author":{"gitId":"SoulUseless"},"content":"     *"},{"lineNumber":78,"author":{"gitId":"SoulUseless"},"content":"     *\t@param x tasks.Task index."},{"lineNumber":79,"author":{"gitId":"SoulUseless"},"content":"     *"},{"lineNumber":80,"author":{"gitId":"SoulUseless"},"content":"     */"},{"lineNumber":81,"author":{"gitId":"SoulUseless"},"content":"    public void deleteTask(int x) throws DukeIndexOutOfRangeException{"},{"lineNumber":82,"author":{"gitId":"SoulUseless"},"content":"        try {"},{"lineNumber":83,"author":{"gitId":"SoulUseless"},"content":"            Task t \u003d tasks.get(x - 1);"},{"lineNumber":84,"author":{"gitId":"SoulUseless"},"content":"            tasks.remove(x - 1);"},{"lineNumber":85,"author":{"gitId":"SoulUseless"},"content":"            ui.println(\"    The following task has been removed: \");"},{"lineNumber":86,"author":{"gitId":"SoulUseless"},"content":"            ui.println(\"       \" + t.toString());"},{"lineNumber":87,"author":{"gitId":"SoulUseless"},"content":"            ui.println(String.format(\"    Now you have %d task(s)%n\","},{"lineNumber":88,"author":{"gitId":"SoulUseless"},"content":"                    tasks.size()));"},{"lineNumber":89,"author":{"gitId":"SoulUseless"},"content":"        } catch (IndexOutOfBoundsException e) {"},{"lineNumber":90,"author":{"gitId":"SoulUseless"},"content":"            throw new DukeIndexOutOfRangeException();"},{"lineNumber":91,"author":{"gitId":"SoulUseless"},"content":"        }"},{"lineNumber":92,"author":{"gitId":"SoulUseless"},"content":"    }"},{"lineNumber":93,"author":{"gitId":"SoulUseless"},"content":"}"}],"authorContributionMap":{"SoulUseless":93}},{"path":"src/main/java/duke/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"SoulUseless"},"content":"package duke;"},{"lineNumber":2,"author":{"gitId":"SoulUseless"},"content":""},{"lineNumber":3,"author":{"gitId":"SoulUseless"},"content":"import tasks.Task;"},{"lineNumber":4,"author":{"gitId":"SoulUseless"},"content":""},{"lineNumber":5,"author":{"gitId":"SoulUseless"},"content":"import java.util.ArrayList;"},{"lineNumber":6,"author":{"gitId":"SoulUseless"},"content":"import java.util.Scanner;"},{"lineNumber":7,"author":{"gitId":"SoulUseless"},"content":""},{"lineNumber":8,"author":{"gitId":"SoulUseless"},"content":"public class Ui {"},{"lineNumber":9,"author":{"gitId":"SoulUseless"},"content":"    private Scanner sc;"},{"lineNumber":10,"author":{"gitId":"SoulUseless"},"content":""},{"lineNumber":11,"author":{"gitId":"SoulUseless"},"content":"    public Ui() {"},{"lineNumber":12,"author":{"gitId":"SoulUseless"},"content":"        sc \u003d new Scanner(System.in);"},{"lineNumber":13,"author":{"gitId":"SoulUseless"},"content":"    }"},{"lineNumber":14,"author":{"gitId":"SoulUseless"},"content":""},{"lineNumber":15,"author":{"gitId":"SoulUseless"},"content":"    /**"},{"lineNumber":16,"author":{"gitId":"SoulUseless"},"content":"     *  Greeter for Duke"},{"lineNumber":17,"author":{"gitId":"SoulUseless"},"content":"     */"},{"lineNumber":18,"author":{"gitId":"SoulUseless"},"content":"    public void showWelcome() {"},{"lineNumber":19,"author":{"gitId":"SoulUseless"},"content":"        String logo \u003d \"     ____        _        \\n\""},{"lineNumber":20,"author":{"gitId":"SoulUseless"},"content":"                + \"    |  _ \\\\ _   _| | _____ \\n\""},{"lineNumber":21,"author":{"gitId":"SoulUseless"},"content":"                + \"    | | | | | | | |/ / _ \\\\\\n\""},{"lineNumber":22,"author":{"gitId":"SoulUseless"},"content":"                + \"    | |_| | |_| |   \u003c  __/\\n\""},{"lineNumber":23,"author":{"gitId":"SoulUseless"},"content":"                + \"    |____/ \\\\__,_|_|\\\\_\\\\___|\\n\";"},{"lineNumber":24,"author":{"gitId":"SoulUseless"},"content":""},{"lineNumber":25,"author":{"gitId":"SoulUseless"},"content":"        System.out.println(\"    ---------------------------------------\");"},{"lineNumber":26,"author":{"gitId":"SoulUseless"},"content":"        System.out.println(logo);"},{"lineNumber":27,"author":{"gitId":"SoulUseless"},"content":"        System.out.println(\"    ---------------------------------------\");"},{"lineNumber":28,"author":{"gitId":"SoulUseless"},"content":"        System.out.println(\"    Hello! This is Duke\");"},{"lineNumber":29,"author":{"gitId":"SoulUseless"},"content":"        System.out.println(\"    What can I do for you?\");"},{"lineNumber":30,"author":{"gitId":"SoulUseless"},"content":"        System.out.println(\"    ---------------------------------------\");"},{"lineNumber":31,"author":{"gitId":"SoulUseless"},"content":"    }"},{"lineNumber":32,"author":{"gitId":"SoulUseless"},"content":""},{"lineNumber":33,"author":{"gitId":"SoulUseless"},"content":"    public void showByeBye() {"},{"lineNumber":34,"author":{"gitId":"SoulUseless"},"content":"        System.out.println(\"      Thanks for using me!\");"},{"lineNumber":35,"author":{"gitId":"SoulUseless"},"content":"    }"},{"lineNumber":36,"author":{"gitId":"SoulUseless"},"content":"    /**"},{"lineNumber":37,"author":{"gitId":"SoulUseless"},"content":"     *  LineBreak for Duke"},{"lineNumber":38,"author":{"gitId":"SoulUseless"},"content":"     */"},{"lineNumber":39,"author":{"gitId":"SoulUseless"},"content":"    public void showLine() {"},{"lineNumber":40,"author":{"gitId":"SoulUseless"},"content":"        System.out.println(\"    ---------------------------------------\");"},{"lineNumber":41,"author":{"gitId":"SoulUseless"},"content":"    }"},{"lineNumber":42,"author":{"gitId":"SoulUseless"},"content":""},{"lineNumber":43,"author":{"gitId":"SoulUseless"},"content":"    public String nextCommand() {"},{"lineNumber":44,"author":{"gitId":"SoulUseless"},"content":"        return sc.nextLine();"},{"lineNumber":45,"author":{"gitId":"SoulUseless"},"content":"    }"},{"lineNumber":46,"author":{"gitId":"SoulUseless"},"content":""},{"lineNumber":47,"author":{"gitId":"SoulUseless"},"content":"    public void println(String s) {"},{"lineNumber":48,"author":{"gitId":"SoulUseless"},"content":"        System.out.println(\"    \" + s);"},{"lineNumber":49,"author":{"gitId":"SoulUseless"},"content":"    }"},{"lineNumber":50,"author":{"gitId":"SoulUseless"},"content":""},{"lineNumber":51,"author":{"gitId":"SoulUseless"},"content":"    public void showError(String message) {"},{"lineNumber":52,"author":{"gitId":"SoulUseless"},"content":"        System.out.println(\"      Error: \" + message);"},{"lineNumber":53,"author":{"gitId":"SoulUseless"},"content":"    }"},{"lineNumber":54,"author":{"gitId":"SoulUseless"},"content":""},{"lineNumber":55,"author":{"gitId":"SoulUseless"},"content":"    public void showTasks(ArrayList\u003cTask\u003e tasks) {"},{"lineNumber":56,"author":{"gitId":"SoulUseless"},"content":"        System.out.println(\"    Listing all tasks: \");"},{"lineNumber":57,"author":{"gitId":"SoulUseless"},"content":"        for (int i \u003d 0; i \u003c tasks.size(); i++) {"},{"lineNumber":58,"author":{"gitId":"SoulUseless"},"content":"            int num \u003d i + 1;"},{"lineNumber":59,"author":{"gitId":"SoulUseless"},"content":"            System.out.println(\"     \" +"},{"lineNumber":60,"author":{"gitId":"SoulUseless"},"content":"                    num + \": \" + tasks.get(i));"},{"lineNumber":61,"author":{"gitId":"SoulUseless"},"content":"        }"},{"lineNumber":62,"author":{"gitId":"SoulUseless"},"content":"    }"},{"lineNumber":63,"author":{"gitId":"SoulUseless"},"content":"}"}],"authorContributionMap":{"SoulUseless":63}},{"path":"src/main/java/exceptions/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"SoulUseless"},"content":"package exceptions;"},{"lineNumber":2,"author":{"gitId":"SoulUseless"},"content":""},{"lineNumber":3,"author":{"gitId":"SoulUseless"},"content":"/**"},{"lineNumber":4,"author":{"gitId":"SoulUseless"},"content":" *  Generic DukeException."},{"lineNumber":5,"author":{"gitId":"SoulUseless"},"content":" *  Occurs when Duke-related exceptions happens."},{"lineNumber":6,"author":{"gitId":"SoulUseless"},"content":" *"},{"lineNumber":7,"author":{"gitId":"SoulUseless"},"content":" *  @author Yap Jing Kang"},{"lineNumber":8,"author":{"gitId":"SoulUseless"},"content":" */"},{"lineNumber":9,"author":{"gitId":"SoulUseless"},"content":""},{"lineNumber":10,"author":{"gitId":"SoulUseless"},"content":"public abstract class DukeException extends Exception {"},{"lineNumber":11,"author":{"gitId":"SoulUseless"},"content":"    public abstract String getMessage();"},{"lineNumber":12,"author":{"gitId":"SoulUseless"},"content":"}"}],"authorContributionMap":{"SoulUseless":12}},{"path":"src/main/java/exceptions/DukeIndexOutOfRangeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"SoulUseless"},"content":"package exceptions;"},{"lineNumber":2,"author":{"gitId":"SoulUseless"},"content":""},{"lineNumber":3,"author":{"gitId":"SoulUseless"},"content":"public class DukeIndexOutOfRangeException extends DukeException {"},{"lineNumber":4,"author":{"gitId":"SoulUseless"},"content":""},{"lineNumber":5,"author":{"gitId":"SoulUseless"},"content":"    /**"},{"lineNumber":6,"author":{"gitId":"SoulUseless"},"content":"     *  DukeIndexOutOfRangeException constructor."},{"lineNumber":7,"author":{"gitId":"SoulUseless"},"content":"     */"},{"lineNumber":8,"author":{"gitId":"SoulUseless"},"content":"    public DukeIndexOutOfRangeException() {"},{"lineNumber":9,"author":{"gitId":"SoulUseless"},"content":"    }"},{"lineNumber":10,"author":{"gitId":"SoulUseless"},"content":""},{"lineNumber":11,"author":{"gitId":"SoulUseless"},"content":"    @Override"},{"lineNumber":12,"author":{"gitId":"SoulUseless"},"content":"    public String getMessage() {"},{"lineNumber":13,"author":{"gitId":"SoulUseless"},"content":"        return \"Index provided out of range\";"},{"lineNumber":14,"author":{"gitId":"SoulUseless"},"content":"    }"},{"lineNumber":15,"author":{"gitId":"SoulUseless"},"content":""},{"lineNumber":16,"author":{"gitId":"SoulUseless"},"content":"    @Override"},{"lineNumber":17,"author":{"gitId":"SoulUseless"},"content":"    public String toString() {"},{"lineNumber":18,"author":{"gitId":"SoulUseless"},"content":"        return \"    Index provided out of range\";"},{"lineNumber":19,"author":{"gitId":"SoulUseless"},"content":"    }"},{"lineNumber":20,"author":{"gitId":"SoulUseless"},"content":"}"}],"authorContributionMap":{"SoulUseless":20}},{"path":"src/main/java/exceptions/DukeInsufficientParametersException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"SoulUseless"},"content":"package exceptions;"},{"lineNumber":2,"author":{"gitId":"SoulUseless"},"content":""},{"lineNumber":3,"author":{"gitId":"SoulUseless"},"content":"/**"},{"lineNumber":4,"author":{"gitId":"SoulUseless"},"content":" *  InsufficientParametersException."},{"lineNumber":5,"author":{"gitId":"SoulUseless"},"content":" *  Occurs when insufficient parameters provided given valid command."},{"lineNumber":6,"author":{"gitId":"SoulUseless"},"content":" *"},{"lineNumber":7,"author":{"gitId":"SoulUseless"},"content":" *  @author Yap Jing Kang"},{"lineNumber":8,"author":{"gitId":"SoulUseless"},"content":" */"},{"lineNumber":9,"author":{"gitId":"SoulUseless"},"content":"public class DukeInsufficientParametersException extends DukeException {"},{"lineNumber":10,"author":{"gitId":"SoulUseless"},"content":"    protected String command;"},{"lineNumber":11,"author":{"gitId":"SoulUseless"},"content":""},{"lineNumber":12,"author":{"gitId":"SoulUseless"},"content":"    /**"},{"lineNumber":13,"author":{"gitId":"SoulUseless"},"content":"     *  InsufficientParametersException constructor."},{"lineNumber":14,"author":{"gitId":"SoulUseless"},"content":"     *"},{"lineNumber":15,"author":{"gitId":"SoulUseless"},"content":"     *  @param cmd Name of command in question."},{"lineNumber":16,"author":{"gitId":"SoulUseless"},"content":"     */"},{"lineNumber":17,"author":{"gitId":"SoulUseless"},"content":"    public DukeInsufficientParametersException(String cmd) {"},{"lineNumber":18,"author":{"gitId":"SoulUseless"},"content":"        this.command \u003d cmd;"},{"lineNumber":19,"author":{"gitId":"SoulUseless"},"content":"    }"},{"lineNumber":20,"author":{"gitId":"SoulUseless"},"content":""},{"lineNumber":21,"author":{"gitId":"SoulUseless"},"content":"    @Override"},{"lineNumber":22,"author":{"gitId":"SoulUseless"},"content":"    public String getMessage() {"},{"lineNumber":23,"author":{"gitId":"SoulUseless"},"content":"        return String.format(\"Description of %s cannot be empty\", command);"},{"lineNumber":24,"author":{"gitId":"SoulUseless"},"content":"    }"},{"lineNumber":25,"author":{"gitId":"SoulUseless"},"content":""},{"lineNumber":26,"author":{"gitId":"SoulUseless"},"content":"    @Override"},{"lineNumber":27,"author":{"gitId":"SoulUseless"},"content":"    public String toString() {"},{"lineNumber":28,"author":{"gitId":"SoulUseless"},"content":"        return String.format(\"    Description of %s cannot be empty\", command);"},{"lineNumber":29,"author":{"gitId":"SoulUseless"},"content":"    }"},{"lineNumber":30,"author":{"gitId":"SoulUseless"},"content":"}"}],"authorContributionMap":{"SoulUseless":30}},{"path":"src/main/java/exceptions/DukeInvalidParametersException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"SoulUseless"},"content":"package exceptions;"},{"lineNumber":2,"author":{"gitId":"SoulUseless"},"content":""},{"lineNumber":3,"author":{"gitId":"SoulUseless"},"content":"public class DukeInvalidParametersException extends DukeException{"},{"lineNumber":4,"author":{"gitId":"SoulUseless"},"content":"    /**"},{"lineNumber":5,"author":{"gitId":"SoulUseless"},"content":"     *  InvalidParametersException."},{"lineNumber":6,"author":{"gitId":"SoulUseless"},"content":"     *  Occurs when invalid parameters provided given valid command."},{"lineNumber":7,"author":{"gitId":"SoulUseless"},"content":"     *"},{"lineNumber":8,"author":{"gitId":"SoulUseless"},"content":"     *  @author Yap Jing Kang"},{"lineNumber":9,"author":{"gitId":"SoulUseless"},"content":"     */"},{"lineNumber":10,"author":{"gitId":"SoulUseless"},"content":"    public DukeInvalidParametersException() {"},{"lineNumber":11,"author":{"gitId":"SoulUseless"},"content":"    }"},{"lineNumber":12,"author":{"gitId":"SoulUseless"},"content":""},{"lineNumber":13,"author":{"gitId":"SoulUseless"},"content":"    @Override"},{"lineNumber":14,"author":{"gitId":"SoulUseless"},"content":"    public String getMessage() {"},{"lineNumber":15,"author":{"gitId":"SoulUseless"},"content":"        return String.format(\"Invalid Parameters given\");"},{"lineNumber":16,"author":{"gitId":"SoulUseless"},"content":"    }"},{"lineNumber":17,"author":{"gitId":"SoulUseless"},"content":"    "},{"lineNumber":18,"author":{"gitId":"SoulUseless"},"content":"    @Override"},{"lineNumber":19,"author":{"gitId":"SoulUseless"},"content":"    public String toString() {"},{"lineNumber":20,"author":{"gitId":"SoulUseless"},"content":"        return String.format(\"    Invalid Parameters given\");"},{"lineNumber":21,"author":{"gitId":"SoulUseless"},"content":"    }"},{"lineNumber":22,"author":{"gitId":"SoulUseless"},"content":""},{"lineNumber":23,"author":{"gitId":"SoulUseless"},"content":"}"}],"authorContributionMap":{"SoulUseless":23}},{"path":"src/main/java/exceptions/DukeMissingFlagException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"SoulUseless"},"content":"package exceptions;"},{"lineNumber":2,"author":{"gitId":"SoulUseless"},"content":""},{"lineNumber":3,"author":{"gitId":"SoulUseless"},"content":"/**"},{"lineNumber":4,"author":{"gitId":"SoulUseless"},"content":" *  MissingFlagException."},{"lineNumber":5,"author":{"gitId":"SoulUseless"},"content":" *  Occurs when mandatory flags are not given."},{"lineNumber":6,"author":{"gitId":"SoulUseless"},"content":" *"},{"lineNumber":7,"author":{"gitId":"SoulUseless"},"content":" *  @author Yap Jing Kang"},{"lineNumber":8,"author":{"gitId":"SoulUseless"},"content":" */"},{"lineNumber":9,"author":{"gitId":"SoulUseless"},"content":"public class DukeMissingFlagException extends DukeException {"},{"lineNumber":10,"author":{"gitId":"SoulUseless"},"content":"    protected String command;"},{"lineNumber":11,"author":{"gitId":"SoulUseless"},"content":"    protected String flag;"},{"lineNumber":12,"author":{"gitId":"SoulUseless"},"content":""},{"lineNumber":13,"author":{"gitId":"SoulUseless"},"content":"    /**"},{"lineNumber":14,"author":{"gitId":"SoulUseless"},"content":"     *  MissingFlagException constructor."},{"lineNumber":15,"author":{"gitId":"SoulUseless"},"content":"     *"},{"lineNumber":16,"author":{"gitId":"SoulUseless"},"content":"     *  @param cmd Name of command in question."},{"lineNumber":17,"author":{"gitId":"SoulUseless"},"content":"     *  @param flag Missing flag."},{"lineNumber":18,"author":{"gitId":"SoulUseless"},"content":"     */"},{"lineNumber":19,"author":{"gitId":"SoulUseless"},"content":"    public DukeMissingFlagException(String cmd, String flag) {"},{"lineNumber":20,"author":{"gitId":"SoulUseless"},"content":"        this.command \u003d cmd;"},{"lineNumber":21,"author":{"gitId":"SoulUseless"},"content":"        this.flag \u003d flag;"},{"lineNumber":22,"author":{"gitId":"SoulUseless"},"content":"    }"},{"lineNumber":23,"author":{"gitId":"SoulUseless"},"content":""},{"lineNumber":24,"author":{"gitId":"SoulUseless"},"content":"    @Override"},{"lineNumber":25,"author":{"gitId":"SoulUseless"},"content":"    public String getMessage() {"},{"lineNumber":26,"author":{"gitId":"SoulUseless"},"content":"        return String.format(\"%s expects \u0027%s\u0027 flag; None found\", command, flag);"},{"lineNumber":27,"author":{"gitId":"SoulUseless"},"content":"    }"},{"lineNumber":28,"author":{"gitId":"SoulUseless"},"content":"    @Override"},{"lineNumber":29,"author":{"gitId":"SoulUseless"},"content":"    public String toString() {"},{"lineNumber":30,"author":{"gitId":"SoulUseless"},"content":"        return String.format(\"    %s expects \u0027%s\u0027 flag; None found\", command, flag);"},{"lineNumber":31,"author":{"gitId":"SoulUseless"},"content":"    }"},{"lineNumber":32,"author":{"gitId":"SoulUseless"},"content":"}"}],"authorContributionMap":{"SoulUseless":32}},{"path":"src/main/java/exceptions/DukeTaskAlreadyDoneException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"SoulUseless"},"content":"package exceptions;"},{"lineNumber":2,"author":{"gitId":"SoulUseless"},"content":""},{"lineNumber":3,"author":{"gitId":"SoulUseless"},"content":"public class DukeTaskAlreadyDoneException extends DukeException {"},{"lineNumber":4,"author":{"gitId":"SoulUseless"},"content":"    /**"},{"lineNumber":5,"author":{"gitId":"SoulUseless"},"content":"     *  DukeIndexOutOfRangeException constructor."},{"lineNumber":6,"author":{"gitId":"SoulUseless"},"content":"     */"},{"lineNumber":7,"author":{"gitId":"SoulUseless"},"content":"    public DukeTaskAlreadyDoneException() {"},{"lineNumber":8,"author":{"gitId":"SoulUseless"},"content":"    }"},{"lineNumber":9,"author":{"gitId":"SoulUseless"},"content":""},{"lineNumber":10,"author":{"gitId":"SoulUseless"},"content":"    @Override"},{"lineNumber":11,"author":{"gitId":"SoulUseless"},"content":"    public String getMessage() {"},{"lineNumber":12,"author":{"gitId":"SoulUseless"},"content":"        return \"Task is already done.\";"},{"lineNumber":13,"author":{"gitId":"SoulUseless"},"content":"    }"},{"lineNumber":14,"author":{"gitId":"SoulUseless"},"content":""},{"lineNumber":15,"author":{"gitId":"SoulUseless"},"content":"    @Override"},{"lineNumber":16,"author":{"gitId":"SoulUseless"},"content":"    public String toString() {"},{"lineNumber":17,"author":{"gitId":"SoulUseless"},"content":"        return \"    Task is already done.\";"},{"lineNumber":18,"author":{"gitId":"SoulUseless"},"content":"    }"},{"lineNumber":19,"author":{"gitId":"SoulUseless"},"content":"}"}],"authorContributionMap":{"SoulUseless":19}},{"path":"src/main/java/exceptions/DukeUnknownCommandException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"SoulUseless"},"content":"package exceptions;"},{"lineNumber":2,"author":{"gitId":"SoulUseless"},"content":""},{"lineNumber":3,"author":{"gitId":"SoulUseless"},"content":"/**"},{"lineNumber":4,"author":{"gitId":"SoulUseless"},"content":" *  UnknownCommandException."},{"lineNumber":5,"author":{"gitId":"SoulUseless"},"content":" *  Occurs when unrecognised command is provided."},{"lineNumber":6,"author":{"gitId":"SoulUseless"},"content":" *"},{"lineNumber":7,"author":{"gitId":"SoulUseless"},"content":" *  @author Yap Jing Kang"},{"lineNumber":8,"author":{"gitId":"SoulUseless"},"content":" */"},{"lineNumber":9,"author":{"gitId":"SoulUseless"},"content":"public class DukeUnknownCommandException extends DukeException {"},{"lineNumber":10,"author":{"gitId":"SoulUseless"},"content":""},{"lineNumber":11,"author":{"gitId":"SoulUseless"},"content":"    /**"},{"lineNumber":12,"author":{"gitId":"SoulUseless"},"content":"     *  InsufficientParametersException constructor."},{"lineNumber":13,"author":{"gitId":"SoulUseless"},"content":"     */"},{"lineNumber":14,"author":{"gitId":"SoulUseless"},"content":"    public DukeUnknownCommandException() {}"},{"lineNumber":15,"author":{"gitId":"SoulUseless"},"content":""},{"lineNumber":16,"author":{"gitId":"SoulUseless"},"content":"    @Override"},{"lineNumber":17,"author":{"gitId":"SoulUseless"},"content":"    public String getMessage() {"},{"lineNumber":18,"author":{"gitId":"SoulUseless"},"content":"        return \"I do not know what you are trying to do here..\";"},{"lineNumber":19,"author":{"gitId":"SoulUseless"},"content":"    }"},{"lineNumber":20,"author":{"gitId":"SoulUseless"},"content":"    @Override"},{"lineNumber":21,"author":{"gitId":"SoulUseless"},"content":"    public String toString() {"},{"lineNumber":22,"author":{"gitId":"SoulUseless"},"content":"        return \"    I do not know what you are trying to do here..\";"},{"lineNumber":23,"author":{"gitId":"SoulUseless"},"content":"    }"},{"lineNumber":24,"author":{"gitId":"SoulUseless"},"content":"}"}],"authorContributionMap":{"SoulUseless":24}},{"path":"src/main/java/tasks/DeadlineTask.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"SoulUseless"},"content":"package tasks;"},{"lineNumber":2,"author":{"gitId":"SoulUseless"},"content":""},{"lineNumber":3,"author":{"gitId":"SoulUseless"},"content":"/**"},{"lineNumber":4,"author":{"gitId":"SoulUseless"},"content":" *  Deadline tasks.Task."},{"lineNumber":5,"author":{"gitId":"SoulUseless"},"content":" *"},{"lineNumber":6,"author":{"gitId":"SoulUseless"},"content":" *  @author Yap Jing Kang"},{"lineNumber":7,"author":{"gitId":"SoulUseless"},"content":" */"},{"lineNumber":8,"author":{"gitId":"SoulUseless"},"content":""},{"lineNumber":9,"author":{"gitId":"SoulUseless"},"content":""},{"lineNumber":10,"author":{"gitId":"SoulUseless"},"content":"public class DeadlineTask extends Task {"},{"lineNumber":11,"author":{"gitId":"SoulUseless"},"content":"    protected String deadline;"},{"lineNumber":12,"author":{"gitId":"SoulUseless"},"content":""},{"lineNumber":13,"author":{"gitId":"SoulUseless"},"content":"    /**"},{"lineNumber":14,"author":{"gitId":"SoulUseless"},"content":"     *  tasks.DeadlineTask constructor."},{"lineNumber":15,"author":{"gitId":"SoulUseless"},"content":"     *"},{"lineNumber":16,"author":{"gitId":"SoulUseless"},"content":"     *  @param name Name of tasks.DeadlineTask."},{"lineNumber":17,"author":{"gitId":"SoulUseless"},"content":"     *  @param deadline Specified deadline of task."},{"lineNumber":18,"author":{"gitId":"SoulUseless"},"content":"     */"},{"lineNumber":19,"author":{"gitId":"SoulUseless"},"content":"    public DeadlineTask(String name, String deadline) {"},{"lineNumber":20,"author":{"gitId":"SoulUseless"},"content":"        super(name);"},{"lineNumber":21,"author":{"gitId":"SoulUseless"},"content":"        this.deadline \u003d deadline;"},{"lineNumber":22,"author":{"gitId":"SoulUseless"},"content":"    }"},{"lineNumber":23,"author":{"gitId":"SoulUseless"},"content":""},{"lineNumber":24,"author":{"gitId":"SoulUseless"},"content":"    @Override"},{"lineNumber":25,"author":{"gitId":"SoulUseless"},"content":"    public String toString() {"},{"lineNumber":26,"author":{"gitId":"SoulUseless"},"content":"        return String.format(\"[D][%s] %s (by: %s)\","},{"lineNumber":27,"author":{"gitId":"SoulUseless"},"content":"                done \u003d\u003d Status.DONE ? \"X\" : \" \","},{"lineNumber":28,"author":{"gitId":"SoulUseless"},"content":"                name,"},{"lineNumber":29,"author":{"gitId":"SoulUseless"},"content":"                deadline);"},{"lineNumber":30,"author":{"gitId":"SoulUseless"},"content":"    }"},{"lineNumber":31,"author":{"gitId":"SoulUseless"},"content":"}"}],"authorContributionMap":{"SoulUseless":31}},{"path":"src/main/java/tasks/EventTask.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"SoulUseless"},"content":"package tasks;"},{"lineNumber":2,"author":{"gitId":"SoulUseless"},"content":""},{"lineNumber":3,"author":{"gitId":"SoulUseless"},"content":"/**"},{"lineNumber":4,"author":{"gitId":"SoulUseless"},"content":" *  Event tasks.Task."},{"lineNumber":5,"author":{"gitId":"SoulUseless"},"content":" *"},{"lineNumber":6,"author":{"gitId":"SoulUseless"},"content":" *  @author Yap Jing Kang"},{"lineNumber":7,"author":{"gitId":"SoulUseless"},"content":" */"},{"lineNumber":8,"author":{"gitId":"SoulUseless"},"content":""},{"lineNumber":9,"author":{"gitId":"SoulUseless"},"content":""},{"lineNumber":10,"author":{"gitId":"SoulUseless"},"content":"public class EventTask extends Task {"},{"lineNumber":11,"author":{"gitId":"SoulUseless"},"content":"    protected String duration;"},{"lineNumber":12,"author":{"gitId":"SoulUseless"},"content":""},{"lineNumber":13,"author":{"gitId":"SoulUseless"},"content":"    /**"},{"lineNumber":14,"author":{"gitId":"SoulUseless"},"content":"     *  tasks.EventsTask constructor."},{"lineNumber":15,"author":{"gitId":"SoulUseless"},"content":"     *"},{"lineNumber":16,"author":{"gitId":"SoulUseless"},"content":"     *  @param name Name of tasks.EventsTask."},{"lineNumber":17,"author":{"gitId":"SoulUseless"},"content":"     *  @param duration Specified duration of task."},{"lineNumber":18,"author":{"gitId":"SoulUseless"},"content":"     */"},{"lineNumber":19,"author":{"gitId":"SoulUseless"},"content":"    public EventTask(String name, String duration) {"},{"lineNumber":20,"author":{"gitId":"SoulUseless"},"content":"        super(name);"},{"lineNumber":21,"author":{"gitId":"SoulUseless"},"content":"        this.duration \u003d duration;"},{"lineNumber":22,"author":{"gitId":"SoulUseless"},"content":"    }"},{"lineNumber":23,"author":{"gitId":"SoulUseless"},"content":""},{"lineNumber":24,"author":{"gitId":"SoulUseless"},"content":"    @Override"},{"lineNumber":25,"author":{"gitId":"SoulUseless"},"content":"    public String toString() {"},{"lineNumber":26,"author":{"gitId":"SoulUseless"},"content":"        return String.format(\"[E][%s] %s (by: %s)\","},{"lineNumber":27,"author":{"gitId":"SoulUseless"},"content":"                done \u003d\u003d Status.DONE ? \"X\" : \" \","},{"lineNumber":28,"author":{"gitId":"SoulUseless"},"content":"                name,"},{"lineNumber":29,"author":{"gitId":"SoulUseless"},"content":"                duration);"},{"lineNumber":30,"author":{"gitId":"SoulUseless"},"content":"    }"},{"lineNumber":31,"author":{"gitId":"SoulUseless"},"content":"}"}],"authorContributionMap":{"SoulUseless":31}},{"path":"src/main/java/tasks/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"SoulUseless"},"content":"package tasks;"},{"lineNumber":2,"author":{"gitId":"SoulUseless"},"content":""},{"lineNumber":3,"author":{"gitId":"SoulUseless"},"content":"enum Status {"},{"lineNumber":4,"author":{"gitId":"SoulUseless"},"content":"    DONE,"},{"lineNumber":5,"author":{"gitId":"SoulUseless"},"content":"    NOT_DONE"},{"lineNumber":6,"author":{"gitId":"SoulUseless"},"content":"}"},{"lineNumber":7,"author":{"gitId":"SoulUseless"},"content":""},{"lineNumber":8,"author":{"gitId":"SoulUseless"},"content":"/**"},{"lineNumber":9,"author":{"gitId":"SoulUseless"},"content":" *  Generic tasks.Task for inheritance."},{"lineNumber":10,"author":{"gitId":"SoulUseless"},"content":" *"},{"lineNumber":11,"author":{"gitId":"SoulUseless"},"content":" *  @author Yap Jing Kang"},{"lineNumber":12,"author":{"gitId":"SoulUseless"},"content":" */"},{"lineNumber":13,"author":{"gitId":"SoulUseless"},"content":""},{"lineNumber":14,"author":{"gitId":"SoulUseless"},"content":"public abstract class Task {"},{"lineNumber":15,"author":{"gitId":"SoulUseless"},"content":"    protected String name;"},{"lineNumber":16,"author":{"gitId":"SoulUseless"},"content":"    protected Status done;"},{"lineNumber":17,"author":{"gitId":"SoulUseless"},"content":""},{"lineNumber":18,"author":{"gitId":"SoulUseless"},"content":"    /**"},{"lineNumber":19,"author":{"gitId":"SoulUseless"},"content":"     *  Generic tasks.Task constructor."},{"lineNumber":20,"author":{"gitId":"SoulUseless"},"content":"     *"},{"lineNumber":21,"author":{"gitId":"SoulUseless"},"content":"     *  @param name Name of tasks.Task."},{"lineNumber":22,"author":{"gitId":"SoulUseless"},"content":"     */"},{"lineNumber":23,"author":{"gitId":"SoulUseless"},"content":"    public Task(String name) {"},{"lineNumber":24,"author":{"gitId":"SoulUseless"},"content":"        this.name \u003d name;"},{"lineNumber":25,"author":{"gitId":"SoulUseless"},"content":"        this.done \u003d Status.NOT_DONE;"},{"lineNumber":26,"author":{"gitId":"SoulUseless"},"content":"    }"},{"lineNumber":27,"author":{"gitId":"SoulUseless"},"content":""},{"lineNumber":28,"author":{"gitId":"SoulUseless"},"content":"    /**"},{"lineNumber":29,"author":{"gitId":"SoulUseless"},"content":"     *  tasks.Task name getter."},{"lineNumber":30,"author":{"gitId":"SoulUseless"},"content":"     *"},{"lineNumber":31,"author":{"gitId":"SoulUseless"},"content":"     *  @return Name of tasks.Task."},{"lineNumber":32,"author":{"gitId":"SoulUseless"},"content":"     */"},{"lineNumber":33,"author":{"gitId":"SoulUseless"},"content":"    public String getName() {"},{"lineNumber":34,"author":{"gitId":"SoulUseless"},"content":"        return this.name;"},{"lineNumber":35,"author":{"gitId":"SoulUseless"},"content":"    }"},{"lineNumber":36,"author":{"gitId":"SoulUseless"},"content":""},{"lineNumber":37,"author":{"gitId":"SoulUseless"},"content":"    /**"},{"lineNumber":38,"author":{"gitId":"SoulUseless"},"content":"     *  Marks tasks.Task to be completed."},{"lineNumber":39,"author":{"gitId":"SoulUseless"},"content":"     *  Returns true if successful, false if unsuccessful."},{"lineNumber":40,"author":{"gitId":"SoulUseless"},"content":"     *"},{"lineNumber":41,"author":{"gitId":"SoulUseless"},"content":"     *  @return Name of tasks.Task."},{"lineNumber":42,"author":{"gitId":"SoulUseless"},"content":"     */"},{"lineNumber":43,"author":{"gitId":"SoulUseless"},"content":"    public boolean markAsDone() {"},{"lineNumber":44,"author":{"gitId":"SoulUseless"},"content":"        if (this.done \u003d\u003d Status.DONE) {"},{"lineNumber":45,"author":{"gitId":"SoulUseless"},"content":"            return false;"},{"lineNumber":46,"author":{"gitId":"SoulUseless"},"content":"        }"},{"lineNumber":47,"author":{"gitId":"SoulUseless"},"content":"        this.done \u003d Status.DONE;"},{"lineNumber":48,"author":{"gitId":"SoulUseless"},"content":"        return true;"},{"lineNumber":49,"author":{"gitId":"SoulUseless"},"content":"    }"},{"lineNumber":50,"author":{"gitId":"SoulUseless"},"content":"}"}],"authorContributionMap":{"SoulUseless":50}},{"path":"src/main/java/tasks/ToDoTask.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"SoulUseless"},"content":"package tasks;"},{"lineNumber":2,"author":{"gitId":"SoulUseless"},"content":""},{"lineNumber":3,"author":{"gitId":"SoulUseless"},"content":"/**"},{"lineNumber":4,"author":{"gitId":"SoulUseless"},"content":" *  ToDo tasks.Task."},{"lineNumber":5,"author":{"gitId":"SoulUseless"},"content":" *"},{"lineNumber":6,"author":{"gitId":"SoulUseless"},"content":" *  @author Yap Jing Kang"},{"lineNumber":7,"author":{"gitId":"SoulUseless"},"content":" */"},{"lineNumber":8,"author":{"gitId":"SoulUseless"},"content":""},{"lineNumber":9,"author":{"gitId":"SoulUseless"},"content":"public class ToDoTask extends Task {"},{"lineNumber":10,"author":{"gitId":"SoulUseless"},"content":""},{"lineNumber":11,"author":{"gitId":"SoulUseless"},"content":"    /**"},{"lineNumber":12,"author":{"gitId":"SoulUseless"},"content":"     *  tasks.ToDoTask constructor."},{"lineNumber":13,"author":{"gitId":"SoulUseless"},"content":"     *"},{"lineNumber":14,"author":{"gitId":"SoulUseless"},"content":"     *  @param name Name of tasks.ToDoTask."},{"lineNumber":15,"author":{"gitId":"SoulUseless"},"content":"     */"},{"lineNumber":16,"author":{"gitId":"SoulUseless"},"content":"    public ToDoTask(String name) {"},{"lineNumber":17,"author":{"gitId":"SoulUseless"},"content":"        super(name);"},{"lineNumber":18,"author":{"gitId":"SoulUseless"},"content":"    }"},{"lineNumber":19,"author":{"gitId":"SoulUseless"},"content":""},{"lineNumber":20,"author":{"gitId":"SoulUseless"},"content":"    @Override"},{"lineNumber":21,"author":{"gitId":"SoulUseless"},"content":"    public String toString() {"},{"lineNumber":22,"author":{"gitId":"SoulUseless"},"content":"        if (done \u003d\u003d Status.DONE) {"},{"lineNumber":23,"author":{"gitId":"SoulUseless"},"content":"            return \"[T][X] \" + name;"},{"lineNumber":24,"author":{"gitId":"SoulUseless"},"content":"        }"},{"lineNumber":25,"author":{"gitId":"SoulUseless"},"content":"        return \"[T][ ] \" + name;"},{"lineNumber":26,"author":{"gitId":"SoulUseless"},"content":"    }"},{"lineNumber":27,"author":{"gitId":"SoulUseless"},"content":"}"}],"authorContributionMap":{"SoulUseless":27}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"SoulUseless"},"content":"hello"},{"lineNumber":2,"author":{"gitId":"SoulUseless"},"content":"list"},{"lineNumber":3,"author":{"gitId":"SoulUseless"},"content":"delete 1"},{"lineNumber":4,"author":{"gitId":"SoulUseless"},"content":"done 1"},{"lineNumber":5,"author":{"gitId":"SoulUseless"},"content":"todo"},{"lineNumber":6,"author":{"gitId":"SoulUseless"},"content":"deadline"},{"lineNumber":7,"author":{"gitId":"SoulUseless"},"content":"event"},{"lineNumber":8,"author":{"gitId":"SoulUseless"},"content":"deadline Complete Assignment /at 1230"},{"lineNumber":9,"author":{"gitId":"SoulUseless"},"content":"event CS2103 Lecture /by 1600"},{"lineNumber":10,"author":{"gitId":"SoulUseless"},"content":"todo Tutorial"},{"lineNumber":11,"author":{"gitId":"SoulUseless"},"content":"deadline Assignment /by 22 Nov"},{"lineNumber":12,"author":{"gitId":"SoulUseless"},"content":"event Lecture /at 20 Nov"},{"lineNumber":13,"author":{"gitId":"SoulUseless"},"content":"list"},{"lineNumber":14,"author":{"gitId":"SoulUseless"},"content":"done 1"},{"lineNumber":15,"author":{"gitId":"SoulUseless"},"content":"done 1"},{"lineNumber":16,"author":{"gitId":"SoulUseless"},"content":"done 2"},{"lineNumber":17,"author":{"gitId":"SoulUseless"},"content":"list"},{"lineNumber":18,"author":{"gitId":"SoulUseless"},"content":"done 3"},{"lineNumber":19,"author":{"gitId":"SoulUseless"},"content":"delete 2"},{"lineNumber":20,"author":{"gitId":"SoulUseless"},"content":"list"},{"lineNumber":21,"author":{"gitId":"SoulUseless"},"content":"delete 3"},{"lineNumber":22,"author":{"gitId":"SoulUseless"},"content":"delete 0"},{"lineNumber":23,"author":{"gitId":"SoulUseless"},"content":"delete 2"},{"lineNumber":24,"author":{"gitId":"SoulUseless"},"content":"list"},{"lineNumber":25,"author":{"gitId":"SoulUseless"},"content":"bye"}],"authorContributionMap":{"SoulUseless":25}}]
