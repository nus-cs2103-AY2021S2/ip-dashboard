[{"path":"README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"wangtao0717"},"content":"# duck.Duke project template"},{"lineNumber":2,"author":{"gitId":"-"},"content":""},{"lineNumber":3,"author":{"gitId":"-"},"content":"This is a project template for a greenfield Java project. It\u0027s named after the Java mascot _Duke_. Given below are instructions on how to use it."},{"lineNumber":4,"author":{"gitId":"-"},"content":""},{"lineNumber":5,"author":{"gitId":"-"},"content":"## Setting up in Intellij"},{"lineNumber":6,"author":{"gitId":"-"},"content":""},{"lineNumber":7,"author":{"gitId":"-"},"content":"Prerequisites: JDK 11, update Intellij to the most recent version."},{"lineNumber":8,"author":{"gitId":"-"},"content":""},{"lineNumber":9,"author":{"gitId":"-"},"content":"1. Open Intellij (if you are not in the welcome screen, click `File` \u003e `Close Project` to close the existing project first)"},{"lineNumber":10,"author":{"gitId":"-"},"content":"1. Open the project into Intellij as follows:"},{"lineNumber":11,"author":{"gitId":"-"},"content":"   1. Click `Open`."},{"lineNumber":12,"author":{"gitId":"-"},"content":"   1. Select the project directory, and click `OK`."},{"lineNumber":13,"author":{"gitId":"-"},"content":"   1. If there are any further prompts, accept the defaults."},{"lineNumber":14,"author":{"gitId":"-"},"content":"1. Configure the project to use **JDK 11** (not other versions) as explained in [here](https://www.jetbrains.com/help/idea/sdk.html#set-up-jdk)."},{"lineNumber":15,"author":{"gitId":"wangtao0717"},"content":"1. After that, locate the `src/main/java/duck.Duke.java` file, right-click it, and choose `Run duck.Duke.main()`. If the setup is correct, you should see something like the below:"},{"lineNumber":16,"author":{"gitId":"-"},"content":"   ```"},{"lineNumber":17,"author":{"gitId":"-"},"content":"   Hello from"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    ____        _        "},{"lineNumber":19,"author":{"gitId":"-"},"content":"   |  _ \\ _   _| | _____ "},{"lineNumber":20,"author":{"gitId":"-"},"content":"   | | | | | | | |/ / _ \\"},{"lineNumber":21,"author":{"gitId":"-"},"content":"   | |_| | |_| |   \u003c  __/"},{"lineNumber":22,"author":{"gitId":"-"},"content":"   |____/ \\__,_|_|\\_\\___|"},{"lineNumber":23,"author":{"gitId":"-"},"content":"   ```"}],"authorContributionMap":{"wangtao0717":2,"-":21}},{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027checkstyle\u0027"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027"},{"lineNumber":6,"author":{"gitId":"-"},"content":"}"},{"lineNumber":7,"author":{"gitId":"-"},"content":""},{"lineNumber":8,"author":{"gitId":"wangtao0717"},"content":"mainClassName \u003d \u0027duck.Launcher\u0027"},{"lineNumber":9,"author":{"gitId":"wangtao0717"},"content":""},{"lineNumber":10,"author":{"gitId":"-"},"content":"repositories {"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    mavenCentral()"},{"lineNumber":12,"author":{"gitId":"-"},"content":"}"},{"lineNumber":13,"author":{"gitId":"-"},"content":""},{"lineNumber":14,"author":{"gitId":"-"},"content":"dependencies {"},{"lineNumber":15,"author":{"gitId":"wangtao0717"},"content":"    implementation \u0027junit:junit:4.12\u0027"},{"lineNumber":16,"author":{"gitId":"wangtao0717"},"content":"    implementation \u0027org.junit.jupiter:junit-jupiter:5.4.2\u0027"},{"lineNumber":17,"author":{"gitId":"wangtao0717"},"content":"    implementation \u0027org.junit.jupiter:junit-jupiter:5.4.2\u0027"},{"lineNumber":18,"author":{"gitId":"wangtao0717"},"content":""},{"lineNumber":19,"author":{"gitId":"wangtao0717"},"content":"    // testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.5.0\u0027"},{"lineNumber":20,"author":{"gitId":"wangtao0717"},"content":"    //testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.5.0\u0027"},{"lineNumber":21,"author":{"gitId":"wangtao0717"},"content":"    String javaFxVersion \u003d \u002711\u0027"},{"lineNumber":22,"author":{"gitId":"wangtao0717"},"content":""},{"lineNumber":23,"author":{"gitId":"wangtao0717"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027"},{"lineNumber":24,"author":{"gitId":"wangtao0717"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"},{"lineNumber":25,"author":{"gitId":"wangtao0717"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"},{"lineNumber":26,"author":{"gitId":"wangtao0717"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027"},{"lineNumber":27,"author":{"gitId":"wangtao0717"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"},{"lineNumber":28,"author":{"gitId":"wangtao0717"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"},{"lineNumber":29,"author":{"gitId":"wangtao0717"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027"},{"lineNumber":30,"author":{"gitId":"wangtao0717"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"},{"lineNumber":31,"author":{"gitId":"wangtao0717"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"},{"lineNumber":32,"author":{"gitId":"wangtao0717"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027"},{"lineNumber":33,"author":{"gitId":"wangtao0717"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"},{"lineNumber":34,"author":{"gitId":"wangtao0717"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"},{"lineNumber":35,"author":{"gitId":"-"},"content":"}"},{"lineNumber":36,"author":{"gitId":"-"},"content":""},{"lineNumber":37,"author":{"gitId":"wangtao0717"},"content":""},{"lineNumber":38,"author":{"gitId":"-"},"content":"test {"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    useJUnitPlatform()"},{"lineNumber":40,"author":{"gitId":"-"},"content":""},{"lineNumber":41,"author":{"gitId":"-"},"content":"    testLogging {"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\""},{"lineNumber":43,"author":{"gitId":"-"},"content":""},{"lineNumber":44,"author":{"gitId":"-"},"content":"        showExceptions true"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\""},{"lineNumber":46,"author":{"gitId":"-"},"content":"        showCauses true"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        showStackTraces true"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":50,"author":{"gitId":"-"},"content":"}"},{"lineNumber":51,"author":{"gitId":"-"},"content":""},{"lineNumber":52,"author":{"gitId":"wangtao0717"},"content":""},{"lineNumber":53,"author":{"gitId":"-"},"content":""},{"lineNumber":54,"author":{"gitId":"-"},"content":"shadowJar {"},{"lineNumber":55,"author":{"gitId":"wangtao0717"},"content":"    archiveBaseName \u003d \"Duck_wt\""},{"lineNumber":56,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null"},{"lineNumber":57,"author":{"gitId":"-"},"content":"}"},{"lineNumber":58,"author":{"gitId":"-"},"content":""},{"lineNumber":59,"author":{"gitId":"-"},"content":"checkstyle {"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    toolVersion \u003d \u00278.29\u0027"},{"lineNumber":61,"author":{"gitId":"-"},"content":"}"},{"lineNumber":62,"author":{"gitId":"-"},"content":""},{"lineNumber":63,"author":{"gitId":"-"},"content":"run {"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in"},{"lineNumber":65,"author":{"gitId":"-"},"content":"}"}],"authorContributionMap":{"wangtao0717":25,"-":40}},{"path":"data/duke.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"wangtao0717"},"content":"T | 1 | borrow book"},{"lineNumber":2,"author":{"gitId":"wangtao0717"},"content":"T | 1 | read book"},{"lineNumber":3,"author":{"gitId":"wangtao0717"},"content":"D | 0 | return book | 2021-03-15"},{"lineNumber":4,"author":{"gitId":"wangtao0717"},"content":"E | 0 | attend project meeting | 2021-04-28"},{"lineNumber":5,"author":{"gitId":"wangtao0717"},"content":"T | 1 | do homework"},{"lineNumber":6,"author":{"gitId":"wangtao0717"},"content":"T | 0 | cleaning house"},{"lineNumber":7,"author":{"gitId":"wangtao0717"},"content":"D | 0 | submit the final version | 2021-02-19"}],"authorContributionMap":{"wangtao0717":7}},{"path":"docs/README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"# User Guide"},{"lineNumber":2,"author":{"gitId":"wangtao0717"},"content":"Duck is a personal assistant chat-bot that helps a person to keep track of various "},{"lineNumber":3,"author":{"gitId":"wangtao0717"},"content":"tasks including todo task, deadline task, and event task. It can record specific tasks,"},{"lineNumber":4,"author":{"gitId":"wangtao0717"},"content":"mark completion, obtain the selected task time limit and generate schedule automatically."},{"lineNumber":5,"author":{"gitId":"wangtao0717"},"content":""},{"lineNumber":6,"author":{"gitId":"wangtao0717"},"content":"![hello](images/hello.png)"},{"lineNumber":7,"author":{"gitId":"wangtao0717"},"content":""},{"lineNumber":8,"author":{"gitId":"wangtao0717"},"content":"## Usage"},{"lineNumber":9,"author":{"gitId":"wangtao0717"},"content":"1.Duck runs under java 11 or above version."},{"lineNumber":10,"author":{"gitId":"wangtao0717"},"content":""},{"lineNumber":11,"author":{"gitId":"wangtao0717"},"content":"2.Download the app, and double-click the file to start."},{"lineNumber":12,"author":{"gitId":"wangtao0717"},"content":""},{"lineNumber":13,"author":{"gitId":"wangtao0717"},"content":"3.Type the command in the command box and press Enter to execute it."},{"lineNumber":14,"author":{"gitId":"wangtao0717"},"content":""},{"lineNumber":15,"author":{"gitId":"wangtao0717"},"content":"4.use command to record and manage tasks. Master can add multiple tasks, "},{"lineNumber":16,"author":{"gitId":"wangtao0717"},"content":"mark completed tasks, find required task."},{"lineNumber":17,"author":{"gitId":"wangtao0717"},"content":""},{"lineNumber":18,"author":{"gitId":"wangtao0717"},"content":"5.use command to get time before set date and generate schedule."},{"lineNumber":19,"author":{"gitId":"wangtao0717"},"content":""},{"lineNumber":20,"author":{"gitId":"wangtao0717"},"content":""},{"lineNumber":21,"author":{"gitId":"-"},"content":""},{"lineNumber":22,"author":{"gitId":"-"},"content":"## Features "},{"lineNumber":23,"author":{"gitId":"-"},"content":""},{"lineNumber":24,"author":{"gitId":"wangtao0717"},"content":"### `list` - list all tasks "},{"lineNumber":25,"author":{"gitId":"-"},"content":""},{"lineNumber":26,"author":{"gitId":"wangtao0717"},"content":"Shows a list of all tasks in the Duck GUI."},{"lineNumber":27,"author":{"gitId":"wangtao0717"},"content":""},{"lineNumber":28,"author":{"gitId":"wangtao0717"},"content":"Format:`list`"},{"lineNumber":29,"author":{"gitId":"wangtao0717"},"content":""},{"lineNumber":30,"author":{"gitId":"wangtao0717"},"content":"Example:"},{"lineNumber":31,"author":{"gitId":"wangtao0717"},"content":""},{"lineNumber":32,"author":{"gitId":"wangtao0717"},"content":"![list](images/list.png)"},{"lineNumber":33,"author":{"gitId":"wangtao0717"},"content":""},{"lineNumber":34,"author":{"gitId":"wangtao0717"},"content":""},{"lineNumber":35,"author":{"gitId":"wangtao0717"},"content":"### `todo` - add todo task"},{"lineNumber":36,"author":{"gitId":"wangtao0717"},"content":""},{"lineNumber":37,"author":{"gitId":"wangtao0717"},"content":"Add a new todo Task including the specific  description. "},{"lineNumber":38,"author":{"gitId":"wangtao0717"},"content":"The task is marked as incomplete first."},{"lineNumber":39,"author":{"gitId":"wangtao0717"},"content":""},{"lineNumber":40,"author":{"gitId":"wangtao0717"},"content":"Format:`todo DESCRIPTION `"},{"lineNumber":41,"author":{"gitId":"wangtao0717"},"content":""},{"lineNumber":42,"author":{"gitId":"wangtao0717"},"content":"Example:`todo washing clothes`  "},{"lineNumber":43,"author":{"gitId":"wangtao0717"},"content":""},{"lineNumber":44,"author":{"gitId":"wangtao0717"},"content":"![todo](images/todo.png)"},{"lineNumber":45,"author":{"gitId":"wangtao0717"},"content":""},{"lineNumber":46,"author":{"gitId":"wangtao0717"},"content":"### `deadline ` - add deadline task"},{"lineNumber":47,"author":{"gitId":"wangtao0717"},"content":""},{"lineNumber":48,"author":{"gitId":"wangtao0717"},"content":"Add a new deadline Task including the specific description and deadline. "},{"lineNumber":49,"author":{"gitId":"wangtao0717"},"content":"The task is marked as incomplete first."},{"lineNumber":50,"author":{"gitId":"wangtao0717"},"content":""},{"lineNumber":51,"author":{"gitId":"wangtao0717"},"content":"Format:`deadline DESCRIPTION /by DEADLINE `"},{"lineNumber":52,"author":{"gitId":"wangtao0717"},"content":""},{"lineNumber":53,"author":{"gitId":"wangtao0717"},"content":"* The deadline entered must follow the time format YYYY-MM-DD. "},{"lineNumber":54,"author":{"gitId":"wangtao0717"},"content":""},{"lineNumber":55,"author":{"gitId":"wangtao0717"},"content":"Example:`deadline hand in homework /by 2021-02-16`"},{"lineNumber":56,"author":{"gitId":"wangtao0717"},"content":""},{"lineNumber":57,"author":{"gitId":"wangtao0717"},"content":"![deadline](images/deadline.png)"},{"lineNumber":58,"author":{"gitId":"wangtao0717"},"content":""},{"lineNumber":59,"author":{"gitId":"wangtao0717"},"content":"### `event` - add event task"},{"lineNumber":60,"author":{"gitId":"wangtao0717"},"content":""},{"lineNumber":61,"author":{"gitId":"wangtao0717"},"content":"Add a new event Task including the specific description and event starting time. "},{"lineNumber":62,"author":{"gitId":"wangtao0717"},"content":"The task is marked as incomplete first."},{"lineNumber":63,"author":{"gitId":"wangtao0717"},"content":""},{"lineNumber":64,"author":{"gitId":"wangtao0717"},"content":"Format:`event DESCRIPTION /at STARTING DATE`"},{"lineNumber":65,"author":{"gitId":"wangtao0717"},"content":""},{"lineNumber":66,"author":{"gitId":"wangtao0717"},"content":"Example:`event atteand meeting /at 2021-03-16 `"},{"lineNumber":67,"author":{"gitId":"wangtao0717"},"content":""},{"lineNumber":68,"author":{"gitId":"wangtao0717"},"content":"![event](images/event.png)"},{"lineNumber":69,"author":{"gitId":"wangtao0717"},"content":""},{"lineNumber":70,"author":{"gitId":"wangtao0717"},"content":"### `done` - mark task "},{"lineNumber":71,"author":{"gitId":"wangtao0717"},"content":""},{"lineNumber":72,"author":{"gitId":"wangtao0717"},"content":"Mark selected task as complete."},{"lineNumber":73,"author":{"gitId":"wangtao0717"},"content":"Usually use this command following list command."},{"lineNumber":74,"author":{"gitId":"wangtao0717"},"content":""},{"lineNumber":75,"author":{"gitId":"wangtao0717"},"content":"Format:`done INDEX `"},{"lineNumber":76,"author":{"gitId":"wangtao0717"},"content":""},{"lineNumber":77,"author":{"gitId":"wangtao0717"},"content":"* Done the task at the specified INDEX."},{"lineNumber":78,"author":{"gitId":"wangtao0717"},"content":"* The index refers to the index number shown in the displayed task list."},{"lineNumber":79,"author":{"gitId":"wangtao0717"},"content":"* The index must be a positive integer 1, 2, 3, … ,total number of tasks."},{"lineNumber":80,"author":{"gitId":"wangtao0717"},"content":""},{"lineNumber":81,"author":{"gitId":"wangtao0717"},"content":"Example:`done 5`"},{"lineNumber":82,"author":{"gitId":"wangtao0717"},"content":""},{"lineNumber":83,"author":{"gitId":"wangtao0717"},"content":"![done](images/done.png)"},{"lineNumber":84,"author":{"gitId":"wangtao0717"},"content":""},{"lineNumber":85,"author":{"gitId":"wangtao0717"},"content":"### `delete` - delete task"},{"lineNumber":86,"author":{"gitId":"wangtao0717"},"content":""},{"lineNumber":87,"author":{"gitId":"wangtao0717"},"content":"Delete selected Task from the task list. "},{"lineNumber":88,"author":{"gitId":"wangtao0717"},"content":"Usually use this command following list command."},{"lineNumber":89,"author":{"gitId":"wangtao0717"},"content":""},{"lineNumber":90,"author":{"gitId":"wangtao0717"},"content":"Format:`delete INDEX`"},{"lineNumber":91,"author":{"gitId":"wangtao0717"},"content":""},{"lineNumber":92,"author":{"gitId":"wangtao0717"},"content":"Example:`delete 8`"},{"lineNumber":93,"author":{"gitId":"wangtao0717"},"content":""},{"lineNumber":94,"author":{"gitId":"wangtao0717"},"content":"![delete](images/delete.png)"},{"lineNumber":95,"author":{"gitId":"wangtao0717"},"content":""},{"lineNumber":96,"author":{"gitId":"wangtao0717"},"content":"### `date` - time to task date "},{"lineNumber":97,"author":{"gitId":"wangtao0717"},"content":""},{"lineNumber":98,"author":{"gitId":"wangtao0717"},"content":"Get period from now to the selected task date.Usually use this command following list command."},{"lineNumber":99,"author":{"gitId":"wangtao0717"},"content":"if the selected task is todo task, Duck will reply \"the task hasn\u0027t determined the time\"."},{"lineNumber":100,"author":{"gitId":"wangtao0717"},"content":""},{"lineNumber":101,"author":{"gitId":"wangtao0717"},"content":""},{"lineNumber":102,"author":{"gitId":"wangtao0717"},"content":"Format:`date INDEX `"},{"lineNumber":103,"author":{"gitId":"wangtao0717"},"content":""},{"lineNumber":104,"author":{"gitId":"wangtao0717"},"content":"Example:`date 3`"},{"lineNumber":105,"author":{"gitId":"wangtao0717"},"content":""},{"lineNumber":106,"author":{"gitId":"wangtao0717"},"content":"![date](images/date.png)"},{"lineNumber":107,"author":{"gitId":"wangtao0717"},"content":""},{"lineNumber":108,"author":{"gitId":"wangtao0717"},"content":"### `find` - find task by keyword "},{"lineNumber":109,"author":{"gitId":"wangtao0717"},"content":""},{"lineNumber":110,"author":{"gitId":"wangtao0717"},"content":"Find tasks which descriptions include the given keyword, and show them in a list. "},{"lineNumber":111,"author":{"gitId":"wangtao0717"},"content":""},{"lineNumber":112,"author":{"gitId":"wangtao0717"},"content":"Format:`find KETWORD`"},{"lineNumber":113,"author":{"gitId":"wangtao0717"},"content":""},{"lineNumber":114,"author":{"gitId":"wangtao0717"},"content":"* The searching for tasks is case-insensitive."},{"lineNumber":115,"author":{"gitId":"wangtao0717"},"content":"* Only search the task descriptions but ignore the date."},{"lineNumber":116,"author":{"gitId":"wangtao0717"},"content":""},{"lineNumber":117,"author":{"gitId":"wangtao0717"},"content":"Example:`find book`  "},{"lineNumber":118,"author":{"gitId":"wangtao0717"},"content":""},{"lineNumber":119,"author":{"gitId":"wangtao0717"},"content":"![find](images/find.png)"},{"lineNumber":120,"author":{"gitId":"wangtao0717"},"content":""},{"lineNumber":121,"author":{"gitId":"wangtao0717"},"content":"### `schedule` - create a schedule "},{"lineNumber":122,"author":{"gitId":"wangtao0717"},"content":""},{"lineNumber":123,"author":{"gitId":"wangtao0717"},"content":"Create a schedule according to task date. Help master arrange time reasonably. "},{"lineNumber":124,"author":{"gitId":"wangtao0717"},"content":""},{"lineNumber":125,"author":{"gitId":"wangtao0717"},"content":"Format:`schedule `"},{"lineNumber":126,"author":{"gitId":"wangtao0717"},"content":""},{"lineNumber":127,"author":{"gitId":"wangtao0717"},"content":"Example:"},{"lineNumber":128,"author":{"gitId":"-"},"content":""},{"lineNumber":129,"author":{"gitId":"wangtao0717"},"content":"![schedule ](images/schedule.png)"},{"lineNumber":130,"author":{"gitId":"-"},"content":""},{"lineNumber":131,"author":{"gitId":"wangtao0717"},"content":"### `error management`"},{"lineNumber":132,"author":{"gitId":"-"},"content":""},{"lineNumber":133,"author":{"gitId":"wangtao0717"},"content":"If master input no-meaning command or incorrect format message, Duck will reply the"},{"lineNumber":134,"author":{"gitId":"wangtao0717"},"content":"error message which is red."},{"lineNumber":135,"author":{"gitId":"-"},"content":""},{"lineNumber":136,"author":{"gitId":"wangtao0717"},"content":"![error](images/error.png)"},{"lineNumber":137,"author":{"gitId":"-"},"content":""},{"lineNumber":138,"author":{"gitId":"wangtao0717"},"content":"## data transfer "},{"lineNumber":139,"author":{"gitId":"-"},"content":""},{"lineNumber":140,"author":{"gitId":"wangtao0717"},"content":"If wanting to install the app in the other computer and transfer the data,"},{"lineNumber":141,"author":{"gitId":"wangtao0717"},"content":"master can overwrite the empty data file (data/duck.txt). It creates with "},{"lineNumber":142,"author":{"gitId":"wangtao0717"},"content":"the file that contains the data of previous folder."}],"authorContributionMap":{"wangtao0717":131,"-":11}},{"path":"src/main/java/duck/DialogBox.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"wangtao0717"},"content":"package duck;"},{"lineNumber":2,"author":{"gitId":"wangtao0717"},"content":""},{"lineNumber":3,"author":{"gitId":"wangtao0717"},"content":"import javafx.collections.FXCollections;"},{"lineNumber":4,"author":{"gitId":"wangtao0717"},"content":"import javafx.collections.ObservableList;"},{"lineNumber":5,"author":{"gitId":"wangtao0717"},"content":"import javafx.geometry.Pos;"},{"lineNumber":6,"author":{"gitId":"wangtao0717"},"content":"import javafx.scene.Node;"},{"lineNumber":7,"author":{"gitId":"wangtao0717"},"content":"import javafx.scene.control.Label;"},{"lineNumber":8,"author":{"gitId":"wangtao0717"},"content":"import javafx.scene.image.ImageView;"},{"lineNumber":9,"author":{"gitId":"wangtao0717"},"content":"import javafx.scene.layout.HBox;"},{"lineNumber":10,"author":{"gitId":"wangtao0717"},"content":""},{"lineNumber":11,"author":{"gitId":"wangtao0717"},"content":""},{"lineNumber":12,"author":{"gitId":"wangtao0717"},"content":"public class DialogBox extends HBox {"},{"lineNumber":13,"author":{"gitId":"wangtao0717"},"content":""},{"lineNumber":14,"author":{"gitId":"wangtao0717"},"content":"    private static String indentation \u003d \"   \";"},{"lineNumber":15,"author":{"gitId":"wangtao0717"},"content":"    private Label text;"},{"lineNumber":16,"author":{"gitId":"wangtao0717"},"content":"    private ImageView displayPicture;"},{"lineNumber":17,"author":{"gitId":"wangtao0717"},"content":""},{"lineNumber":18,"author":{"gitId":"wangtao0717"},"content":"    /**"},{"lineNumber":19,"author":{"gitId":"wangtao0717"},"content":"     * Create dialog box which include the Avatar and label"},{"lineNumber":20,"author":{"gitId":"wangtao0717"},"content":"     *"},{"lineNumber":21,"author":{"gitId":"wangtao0717"},"content":"     * @param l  the label including dialogue"},{"lineNumber":22,"author":{"gitId":"wangtao0717"},"content":"     * @param iv the avatar"},{"lineNumber":23,"author":{"gitId":"wangtao0717"},"content":"     */"},{"lineNumber":24,"author":{"gitId":"wangtao0717"},"content":"    public DialogBox(Label l, ImageView iv) {"},{"lineNumber":25,"author":{"gitId":"wangtao0717"},"content":"        text \u003d l;"},{"lineNumber":26,"author":{"gitId":"wangtao0717"},"content":"        displayPicture \u003d iv;"},{"lineNumber":27,"author":{"gitId":"wangtao0717"},"content":"        Label textSpace \u003d new Label(indentation);"},{"lineNumber":28,"author":{"gitId":"wangtao0717"},"content":"        text.setWrapText(true);"},{"lineNumber":29,"author":{"gitId":"wangtao0717"},"content":"        displayPicture.setFitWidth(60.0);"},{"lineNumber":30,"author":{"gitId":"wangtao0717"},"content":"        displayPicture.setFitHeight(60.0);"},{"lineNumber":31,"author":{"gitId":"wangtao0717"},"content":""},{"lineNumber":32,"author":{"gitId":"wangtao0717"},"content":"        this.setAlignment(Pos.TOP_RIGHT);"},{"lineNumber":33,"author":{"gitId":"wangtao0717"},"content":"        this.getChildren().addAll(text, textSpace, displayPicture);"},{"lineNumber":34,"author":{"gitId":"wangtao0717"},"content":""},{"lineNumber":35,"author":{"gitId":"wangtao0717"},"content":"    }"},{"lineNumber":36,"author":{"gitId":"wangtao0717"},"content":""},{"lineNumber":37,"author":{"gitId":"wangtao0717"},"content":"    /**"},{"lineNumber":38,"author":{"gitId":"wangtao0717"},"content":"     * Flips the dialog box such that the ImageView is on the left and text on the right."},{"lineNumber":39,"author":{"gitId":"wangtao0717"},"content":"     */"},{"lineNumber":40,"author":{"gitId":"wangtao0717"},"content":"    private void flip() {"},{"lineNumber":41,"author":{"gitId":"wangtao0717"},"content":"        this.setAlignment(Pos.TOP_LEFT);"},{"lineNumber":42,"author":{"gitId":"wangtao0717"},"content":"        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());"},{"lineNumber":43,"author":{"gitId":"wangtao0717"},"content":"        FXCollections.reverse(tmp);"},{"lineNumber":44,"author":{"gitId":"wangtao0717"},"content":"        this.getChildren().setAll(tmp);"},{"lineNumber":45,"author":{"gitId":"wangtao0717"},"content":"    }"},{"lineNumber":46,"author":{"gitId":"wangtao0717"},"content":""},{"lineNumber":47,"author":{"gitId":"wangtao0717"},"content":"    /**"},{"lineNumber":48,"author":{"gitId":"wangtao0717"},"content":"     * create user\u0027s dialog box"},{"lineNumber":49,"author":{"gitId":"wangtao0717"},"content":"     *"},{"lineNumber":50,"author":{"gitId":"wangtao0717"},"content":"     * @param l  the label including dialogue"},{"lineNumber":51,"author":{"gitId":"wangtao0717"},"content":"     * @param iv the avatar of user"},{"lineNumber":52,"author":{"gitId":"wangtao0717"},"content":"     * @return dialog box"},{"lineNumber":53,"author":{"gitId":"wangtao0717"},"content":"     */"},{"lineNumber":54,"author":{"gitId":"wangtao0717"},"content":"    public static DialogBox getUserDialog(Label l, ImageView iv) {"},{"lineNumber":55,"author":{"gitId":"wangtao0717"},"content":"        DialogBox userDialog \u003d new DialogBox(l, iv);"},{"lineNumber":56,"author":{"gitId":"wangtao0717"},"content":"        userDialog.setStyle(\"-fx-padding: 10;\""},{"lineNumber":57,"author":{"gitId":"wangtao0717"},"content":"                + \"-fx-border-style: dashed;\""},{"lineNumber":58,"author":{"gitId":"wangtao0717"},"content":"                + \"-fx-border-width: 4;\""},{"lineNumber":59,"author":{"gitId":"wangtao0717"},"content":"                + \"-fx-border-radius: 5;\""},{"lineNumber":60,"author":{"gitId":"wangtao0717"},"content":"                + \"-fx-border-color: #87409c;\""},{"lineNumber":61,"author":{"gitId":"wangtao0717"},"content":"                + \"-fx-background-color: #FAF0E6;\""},{"lineNumber":62,"author":{"gitId":"wangtao0717"},"content":"                + \"-fx-font-size: 14px;\""},{"lineNumber":63,"author":{"gitId":"wangtao0717"},"content":"                + \"-fx-font-weight:bold\""},{"lineNumber":64,"author":{"gitId":"wangtao0717"},"content":"        );"},{"lineNumber":65,"author":{"gitId":"wangtao0717"},"content":"        return userDialog;"},{"lineNumber":66,"author":{"gitId":"wangtao0717"},"content":"    }"},{"lineNumber":67,"author":{"gitId":"wangtao0717"},"content":""},{"lineNumber":68,"author":{"gitId":"wangtao0717"},"content":"    /**"},{"lineNumber":69,"author":{"gitId":"wangtao0717"},"content":"     * create Duke\u0027s dialog box"},{"lineNumber":70,"author":{"gitId":"wangtao0717"},"content":"     *"},{"lineNumber":71,"author":{"gitId":"wangtao0717"},"content":"     * @param l  the label including dialogue"},{"lineNumber":72,"author":{"gitId":"wangtao0717"},"content":"     * @param iv the avatar of Duke"},{"lineNumber":73,"author":{"gitId":"wangtao0717"},"content":"     * @return dialog box"},{"lineNumber":74,"author":{"gitId":"wangtao0717"},"content":"     */"},{"lineNumber":75,"author":{"gitId":"wangtao0717"},"content":"    public static DialogBox getDukeDialog(Label l, ImageView iv, boolean isErrorReply) {"},{"lineNumber":76,"author":{"gitId":"wangtao0717"},"content":""},{"lineNumber":77,"author":{"gitId":"wangtao0717"},"content":"        if (isErrorReply) {"},{"lineNumber":78,"author":{"gitId":"wangtao0717"},"content":"            l.setStyle(\"-fx-text-fill: Red;\");"},{"lineNumber":79,"author":{"gitId":"wangtao0717"},"content":"        }"},{"lineNumber":80,"author":{"gitId":"wangtao0717"},"content":"        var duckDialog \u003d new DialogBox(l, iv);"},{"lineNumber":81,"author":{"gitId":"wangtao0717"},"content":"        duckDialog.flip();"},{"lineNumber":82,"author":{"gitId":"wangtao0717"},"content":"        duckDialog.setStyle(\"-fx-padding: 10;\""},{"lineNumber":83,"author":{"gitId":"wangtao0717"},"content":"                + \"-fx-border-style: dotted;\""},{"lineNumber":84,"author":{"gitId":"wangtao0717"},"content":"                + \"-fx-border-width: 4;\""},{"lineNumber":85,"author":{"gitId":"wangtao0717"},"content":"                + \"-fx-border-radius: 5;\""},{"lineNumber":86,"author":{"gitId":"wangtao0717"},"content":"                + \"-fx-border-color: #4d70a3;\""},{"lineNumber":87,"author":{"gitId":"wangtao0717"},"content":"                + \"-fx-background-color: #cadcf6;\""},{"lineNumber":88,"author":{"gitId":"wangtao0717"},"content":"                + \"-fx-font-size: 14px;\""},{"lineNumber":89,"author":{"gitId":"wangtao0717"},"content":"        );"},{"lineNumber":90,"author":{"gitId":"wangtao0717"},"content":"        return duckDialog;"},{"lineNumber":91,"author":{"gitId":"wangtao0717"},"content":"    }"},{"lineNumber":92,"author":{"gitId":"wangtao0717"},"content":"}"}],"authorContributionMap":{"wangtao0717":92}},{"path":"src/main/java/duck/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"wangtao0717"},"content":"package duck;"},{"lineNumber":2,"author":{"gitId":"wangtao0717"},"content":""},{"lineNumber":3,"author":{"gitId":"wangtao0717"},"content":"import java.io.IOException;"},{"lineNumber":4,"author":{"gitId":"wangtao0717"},"content":""},{"lineNumber":5,"author":{"gitId":"wangtao0717"},"content":"import duck.operation.CommandGui;"},{"lineNumber":6,"author":{"gitId":"wangtao0717"},"content":"import duck.operation.Gui;"},{"lineNumber":7,"author":{"gitId":"wangtao0717"},"content":"import duck.operation.Parser;"},{"lineNumber":8,"author":{"gitId":"wangtao0717"},"content":"import duck.operation.Storage;"},{"lineNumber":9,"author":{"gitId":"wangtao0717"},"content":"import duck.task.TaskList;"},{"lineNumber":10,"author":{"gitId":"wangtao0717"},"content":"import javafx.application.Application;"},{"lineNumber":11,"author":{"gitId":"wangtao0717"},"content":"import javafx.scene.Scene;"},{"lineNumber":12,"author":{"gitId":"wangtao0717"},"content":"import javafx.scene.control.Button;"},{"lineNumber":13,"author":{"gitId":"wangtao0717"},"content":"import javafx.scene.control.Label;"},{"lineNumber":14,"author":{"gitId":"wangtao0717"},"content":"import javafx.scene.control.ScrollPane;"},{"lineNumber":15,"author":{"gitId":"wangtao0717"},"content":"import javafx.scene.control.TextField;"},{"lineNumber":16,"author":{"gitId":"wangtao0717"},"content":"import javafx.scene.image.Image;"},{"lineNumber":17,"author":{"gitId":"wangtao0717"},"content":"import javafx.scene.image.ImageView;"},{"lineNumber":18,"author":{"gitId":"wangtao0717"},"content":"import javafx.scene.layout.AnchorPane;"},{"lineNumber":19,"author":{"gitId":"wangtao0717"},"content":"import javafx.scene.layout.Region;"},{"lineNumber":20,"author":{"gitId":"wangtao0717"},"content":"import javafx.scene.layout.VBox;"},{"lineNumber":21,"author":{"gitId":"wangtao0717"},"content":"import javafx.stage.Stage;"},{"lineNumber":22,"author":{"gitId":"wangtao0717"},"content":""},{"lineNumber":23,"author":{"gitId":"wangtao0717"},"content":""},{"lineNumber":24,"author":{"gitId":"wangtao0717"},"content":""},{"lineNumber":25,"author":{"gitId":"wangtao0717"},"content":""},{"lineNumber":26,"author":{"gitId":"wangtao0717"},"content":"public class Duke extends Application {"},{"lineNumber":27,"author":{"gitId":"wangtao0717"},"content":""},{"lineNumber":28,"author":{"gitId":"wangtao0717"},"content":"    private Storage storage;"},{"lineNumber":29,"author":{"gitId":"wangtao0717"},"content":"    private TaskList tasks;"},{"lineNumber":30,"author":{"gitId":"wangtao0717"},"content":"    private Gui gui;"},{"lineNumber":31,"author":{"gitId":"wangtao0717"},"content":"    private AnchorPane mainLayout;"},{"lineNumber":32,"author":{"gitId":"wangtao0717"},"content":"    private ScrollPane scrollPane;"},{"lineNumber":33,"author":{"gitId":"wangtao0717"},"content":"    private VBox dialogContainer;"},{"lineNumber":34,"author":{"gitId":"wangtao0717"},"content":"    private TextField userInput;"},{"lineNumber":35,"author":{"gitId":"wangtao0717"},"content":"    private Button sendButton;"},{"lineNumber":36,"author":{"gitId":"wangtao0717"},"content":"    private Scene scene;"},{"lineNumber":37,"author":{"gitId":"wangtao0717"},"content":""},{"lineNumber":38,"author":{"gitId":"wangtao0717"},"content":"    private Image user \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaUser.png\"));"},{"lineNumber":39,"author":{"gitId":"wangtao0717"},"content":"    private Image duke \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaDuke.png\"));"},{"lineNumber":40,"author":{"gitId":"wangtao0717"},"content":""},{"lineNumber":41,"author":{"gitId":"wangtao0717"},"content":"    /**"},{"lineNumber":42,"author":{"gitId":"wangtao0717"},"content":"     * initialize mainLayout"},{"lineNumber":43,"author":{"gitId":"wangtao0717"},"content":"     */"},{"lineNumber":44,"author":{"gitId":"wangtao0717"},"content":"    private void initMainLayout() {"},{"lineNumber":45,"author":{"gitId":"wangtao0717"},"content":"        scrollPane \u003d new ScrollPane();"},{"lineNumber":46,"author":{"gitId":"wangtao0717"},"content":"        dialogContainer \u003d new VBox();"},{"lineNumber":47,"author":{"gitId":"wangtao0717"},"content":"        scrollPane.setContent(dialogContainer);"},{"lineNumber":48,"author":{"gitId":"wangtao0717"},"content":"        userInput \u003d new TextField();"},{"lineNumber":49,"author":{"gitId":"wangtao0717"},"content":"        sendButton \u003d new Button(\"Send\");"},{"lineNumber":50,"author":{"gitId":"wangtao0717"},"content":""},{"lineNumber":51,"author":{"gitId":"wangtao0717"},"content":"        mainLayout \u003d new AnchorPane();"},{"lineNumber":52,"author":{"gitId":"wangtao0717"},"content":"        mainLayout.getChildren().addAll(scrollPane, userInput, sendButton);"},{"lineNumber":53,"author":{"gitId":"wangtao0717"},"content":"    }"},{"lineNumber":54,"author":{"gitId":"wangtao0717"},"content":""},{"lineNumber":55,"author":{"gitId":"wangtao0717"},"content":"    /**"},{"lineNumber":56,"author":{"gitId":"wangtao0717"},"content":"     * Set the showing scene"},{"lineNumber":57,"author":{"gitId":"wangtao0717"},"content":"     *"},{"lineNumber":58,"author":{"gitId":"wangtao0717"},"content":"     * @param stage  the stage which control the scene"},{"lineNumber":59,"author":{"gitId":"wangtao0717"},"content":"     * @param scene  the showing scene"},{"lineNumber":60,"author":{"gitId":"wangtao0717"},"content":"     * @param title  the title of scene"},{"lineNumber":61,"author":{"gitId":"wangtao0717"},"content":"     * @param height the height of scene"},{"lineNumber":62,"author":{"gitId":"wangtao0717"},"content":"     * @param width  the width of scene"},{"lineNumber":63,"author":{"gitId":"wangtao0717"},"content":"     */"},{"lineNumber":64,"author":{"gitId":"wangtao0717"},"content":"    private void setScene("},{"lineNumber":65,"author":{"gitId":"wangtao0717"},"content":"            Stage stage, Scene scene, String title, double height, double width) {"},{"lineNumber":66,"author":{"gitId":"wangtao0717"},"content":"        stage.setScene(scene);"},{"lineNumber":67,"author":{"gitId":"wangtao0717"},"content":"        stage.show();"},{"lineNumber":68,"author":{"gitId":"wangtao0717"},"content":"        stage.setTitle(title);"},{"lineNumber":69,"author":{"gitId":"wangtao0717"},"content":"        stage.setResizable(false);"},{"lineNumber":70,"author":{"gitId":"wangtao0717"},"content":"        stage.setMinHeight(height);"},{"lineNumber":71,"author":{"gitId":"wangtao0717"},"content":"        stage.setMinWidth(width);"},{"lineNumber":72,"author":{"gitId":"wangtao0717"},"content":"    }"},{"lineNumber":73,"author":{"gitId":"wangtao0717"},"content":""},{"lineNumber":74,"author":{"gitId":"wangtao0717"},"content":"    private void setPanePrefSize() {"},{"lineNumber":75,"author":{"gitId":"wangtao0717"},"content":"        mainLayout.setPrefSize(600.0, 800.0);"},{"lineNumber":76,"author":{"gitId":"wangtao0717"},"content":""},{"lineNumber":77,"author":{"gitId":"wangtao0717"},"content":"        setScrollPane(scrollPane, 585, 735);"},{"lineNumber":78,"author":{"gitId":"wangtao0717"},"content":""},{"lineNumber":79,"author":{"gitId":"wangtao0717"},"content":"        dialogContainer.setPrefHeight(Region.USE_COMPUTED_SIZE);"},{"lineNumber":80,"author":{"gitId":"wangtao0717"},"content":""},{"lineNumber":81,"author":{"gitId":"wangtao0717"},"content":"        userInput.setPrefWidth(525.0);"},{"lineNumber":82,"author":{"gitId":"wangtao0717"},"content":""},{"lineNumber":83,"author":{"gitId":"wangtao0717"},"content":"        sendButton.setPrefWidth(155.0);"},{"lineNumber":84,"author":{"gitId":"wangtao0717"},"content":"    }"},{"lineNumber":85,"author":{"gitId":"wangtao0717"},"content":""},{"lineNumber":86,"author":{"gitId":"wangtao0717"},"content":"    /**"},{"lineNumber":87,"author":{"gitId":"wangtao0717"},"content":"     * Set scrollPane"},{"lineNumber":88,"author":{"gitId":"wangtao0717"},"content":"     *"},{"lineNumber":89,"author":{"gitId":"wangtao0717"},"content":"     * @param scrollPane"},{"lineNumber":90,"author":{"gitId":"wangtao0717"},"content":"     * @param prefWidth  the width of scroll pane"},{"lineNumber":91,"author":{"gitId":"wangtao0717"},"content":"     * @param prefHeight the height of scroll pane"},{"lineNumber":92,"author":{"gitId":"wangtao0717"},"content":"     */"},{"lineNumber":93,"author":{"gitId":"wangtao0717"},"content":"    private void setScrollPane("},{"lineNumber":94,"author":{"gitId":"wangtao0717"},"content":"            ScrollPane scrollPane, double prefWidth, double prefHeight) {"},{"lineNumber":95,"author":{"gitId":"wangtao0717"},"content":"        scrollPane.setPrefSize(prefWidth, prefHeight);"},{"lineNumber":96,"author":{"gitId":"wangtao0717"},"content":"        scrollPane.setHbarPolicy(ScrollPane.ScrollBarPolicy.NEVER);"},{"lineNumber":97,"author":{"gitId":"wangtao0717"},"content":"        scrollPane.setVbarPolicy(ScrollPane.ScrollBarPolicy.ALWAYS);"},{"lineNumber":98,"author":{"gitId":"wangtao0717"},"content":"        scrollPane.setVvalue(1.0);"},{"lineNumber":99,"author":{"gitId":"wangtao0717"},"content":"        scrollPane.setFitToWidth(true);"},{"lineNumber":100,"author":{"gitId":"wangtao0717"},"content":"    }"},{"lineNumber":101,"author":{"gitId":"wangtao0717"},"content":""},{"lineNumber":102,"author":{"gitId":"wangtao0717"},"content":"    /**"},{"lineNumber":103,"author":{"gitId":"wangtao0717"},"content":"     * set anchor pane"},{"lineNumber":104,"author":{"gitId":"wangtao0717"},"content":"     *"},{"lineNumber":105,"author":{"gitId":"wangtao0717"},"content":"     * @param scrollPane"},{"lineNumber":106,"author":{"gitId":"wangtao0717"},"content":"     * @param sendButton"},{"lineNumber":107,"author":{"gitId":"wangtao0717"},"content":"     * @param userInput"},{"lineNumber":108,"author":{"gitId":"wangtao0717"},"content":"     */"},{"lineNumber":109,"author":{"gitId":"wangtao0717"},"content":"    private void setAnchorPane("},{"lineNumber":110,"author":{"gitId":"wangtao0717"},"content":"            ScrollPane scrollPane, Button sendButton, TextField userInput) {"},{"lineNumber":111,"author":{"gitId":"wangtao0717"},"content":"        AnchorPane.setTopAnchor(scrollPane, 1.0);"},{"lineNumber":112,"author":{"gitId":"wangtao0717"},"content":"        AnchorPane.setBottomAnchor(sendButton, 1.0);"},{"lineNumber":113,"author":{"gitId":"wangtao0717"},"content":"        AnchorPane.setRightAnchor(sendButton, 1.0);"},{"lineNumber":114,"author":{"gitId":"wangtao0717"},"content":"        AnchorPane.setLeftAnchor(userInput, 1.0);"},{"lineNumber":115,"author":{"gitId":"wangtao0717"},"content":"        AnchorPane.setBottomAnchor(userInput, 1.0);"},{"lineNumber":116,"author":{"gitId":"wangtao0717"},"content":"    }"},{"lineNumber":117,"author":{"gitId":"wangtao0717"},"content":""},{"lineNumber":118,"author":{"gitId":"wangtao0717"},"content":"    /**"},{"lineNumber":119,"author":{"gitId":"wangtao0717"},"content":"     * Creates two dialog boxes, one echoing user input and the other containing Duke\u0027s reply and then appends them to"},{"lineNumber":120,"author":{"gitId":"wangtao0717"},"content":"     * the dialog container. Clears the user input after processing."},{"lineNumber":121,"author":{"gitId":"wangtao0717"},"content":"     */"},{"lineNumber":122,"author":{"gitId":"wangtao0717"},"content":"    private void handleUserInput() throws IOException {"},{"lineNumber":123,"author":{"gitId":"wangtao0717"},"content":"        Label userText \u003d new Label(userInput.getText());"},{"lineNumber":124,"author":{"gitId":"wangtao0717"},"content":"        String response \u003d getResponse(userInput.getText());"},{"lineNumber":125,"author":{"gitId":"wangtao0717"},"content":"        Label dukeText \u003d new Label(response);"},{"lineNumber":126,"author":{"gitId":"wangtao0717"},"content":"        boolean isErrorReply \u003d false;"},{"lineNumber":127,"author":{"gitId":"wangtao0717"},"content":"        if (response.startsWith(\"OOPS\")) {"},{"lineNumber":128,"author":{"gitId":"wangtao0717"},"content":"            isErrorReply \u003d true;"},{"lineNumber":129,"author":{"gitId":"wangtao0717"},"content":"        }"},{"lineNumber":130,"author":{"gitId":"wangtao0717"},"content":"        dialogContainer.getChildren().addAll("},{"lineNumber":131,"author":{"gitId":"wangtao0717"},"content":"                DialogBox.getUserDialog(userText, new ImageView(user)),"},{"lineNumber":132,"author":{"gitId":"wangtao0717"},"content":"                DialogBox.getDukeDialog(dukeText, new ImageView(duke), isErrorReply));"},{"lineNumber":133,"author":{"gitId":"wangtao0717"},"content":"        userInput.clear();"},{"lineNumber":134,"author":{"gitId":"wangtao0717"},"content":"    }"},{"lineNumber":135,"author":{"gitId":"wangtao0717"},"content":""},{"lineNumber":136,"author":{"gitId":"wangtao0717"},"content":"    /**"},{"lineNumber":137,"author":{"gitId":"wangtao0717"},"content":"     * function to generate a response to user input."},{"lineNumber":138,"author":{"gitId":"wangtao0717"},"content":"     *"},{"lineNumber":139,"author":{"gitId":"wangtao0717"},"content":"     * @param input String input text to show"},{"lineNumber":140,"author":{"gitId":"wangtao0717"},"content":"     * @return the specified text"},{"lineNumber":141,"author":{"gitId":"wangtao0717"},"content":"     */"},{"lineNumber":142,"author":{"gitId":"wangtao0717"},"content":"    private String getResponse(String input) throws IOException {"},{"lineNumber":143,"author":{"gitId":"wangtao0717"},"content":"        CommandGui c \u003d Parser.parse(input);"},{"lineNumber":144,"author":{"gitId":"wangtao0717"},"content":"        return c.execute(tasks, gui, storage);"},{"lineNumber":145,"author":{"gitId":"wangtao0717"},"content":"    }"},{"lineNumber":146,"author":{"gitId":"wangtao0717"},"content":""},{"lineNumber":147,"author":{"gitId":"wangtao0717"},"content":"    @Override"},{"lineNumber":148,"author":{"gitId":"wangtao0717"},"content":"    public void start(Stage stage) throws IOException {"},{"lineNumber":149,"author":{"gitId":"wangtao0717"},"content":"        String dataFilePath \u003d \"./data/duke.txt\";"},{"lineNumber":150,"author":{"gitId":"wangtao0717"},"content":"        storage \u003d new Storage(dataFilePath);"},{"lineNumber":151,"author":{"gitId":"wangtao0717"},"content":"        tasks \u003d new TaskList(storage.load());"},{"lineNumber":152,"author":{"gitId":"wangtao0717"},"content":"        gui \u003d new Gui();"},{"lineNumber":153,"author":{"gitId":"wangtao0717"},"content":""},{"lineNumber":154,"author":{"gitId":"wangtao0717"},"content":"        initMainLayout();"},{"lineNumber":155,"author":{"gitId":"wangtao0717"},"content":""},{"lineNumber":156,"author":{"gitId":"wangtao0717"},"content":"        scene \u003d new Scene(mainLayout);"},{"lineNumber":157,"author":{"gitId":"wangtao0717"},"content":"        setScene(stage, scene, \"Duck\", 800.0, 600.0);"},{"lineNumber":158,"author":{"gitId":"wangtao0717"},"content":"        setPanePrefSize();"},{"lineNumber":159,"author":{"gitId":"wangtao0717"},"content":""},{"lineNumber":160,"author":{"gitId":"wangtao0717"},"content":"        setAnchorPane(scrollPane, sendButton, userInput);"},{"lineNumber":161,"author":{"gitId":"wangtao0717"},"content":""},{"lineNumber":162,"author":{"gitId":"wangtao0717"},"content":"        dialogContainer.setStyle(\"-fx-padding: 20 30 30 30;\""},{"lineNumber":163,"author":{"gitId":"wangtao0717"},"content":"                + \"-fx-background-size : contain;\""},{"lineNumber":164,"author":{"gitId":"wangtao0717"},"content":"                + \"-fx-background-image: url(/images/background.png)\""},{"lineNumber":165,"author":{"gitId":"wangtao0717"},"content":"        );"},{"lineNumber":166,"author":{"gitId":"wangtao0717"},"content":"        Label helloText \u003d new Label(gui.showWelcome());"},{"lineNumber":167,"author":{"gitId":"wangtao0717"},"content":""},{"lineNumber":168,"author":{"gitId":"wangtao0717"},"content":"        dialogContainer.getChildren().addAll("},{"lineNumber":169,"author":{"gitId":"wangtao0717"},"content":"                DialogBox.getDukeDialog(helloText, new ImageView(duke), false)"},{"lineNumber":170,"author":{"gitId":"wangtao0717"},"content":"        );"},{"lineNumber":171,"author":{"gitId":"wangtao0717"},"content":"        dialogContainer.setSpacing(10);"},{"lineNumber":172,"author":{"gitId":"wangtao0717"},"content":""},{"lineNumber":173,"author":{"gitId":"wangtao0717"},"content":"        dialogContainer.heightProperty().addListener((observable) -\u003e scrollPane.setVvalue(1.0));"},{"lineNumber":174,"author":{"gitId":"wangtao0717"},"content":""},{"lineNumber":175,"author":{"gitId":"wangtao0717"},"content":"        sendButton.setOnMouseClicked((event) -\u003e {"},{"lineNumber":176,"author":{"gitId":"wangtao0717"},"content":"            try {"},{"lineNumber":177,"author":{"gitId":"wangtao0717"},"content":"                handleUserInput();"},{"lineNumber":178,"author":{"gitId":"wangtao0717"},"content":"            } catch (IOException e) {"},{"lineNumber":179,"author":{"gitId":"wangtao0717"},"content":"                e.printStackTrace();"},{"lineNumber":180,"author":{"gitId":"wangtao0717"},"content":"            }"},{"lineNumber":181,"author":{"gitId":"wangtao0717"},"content":"        });"},{"lineNumber":182,"author":{"gitId":"wangtao0717"},"content":""},{"lineNumber":183,"author":{"gitId":"wangtao0717"},"content":"        userInput.setOnAction((event) -\u003e {"},{"lineNumber":184,"author":{"gitId":"wangtao0717"},"content":"            try {"},{"lineNumber":185,"author":{"gitId":"wangtao0717"},"content":"                handleUserInput();"},{"lineNumber":186,"author":{"gitId":"wangtao0717"},"content":"            } catch (IOException e) {"},{"lineNumber":187,"author":{"gitId":"wangtao0717"},"content":"                e.printStackTrace();"},{"lineNumber":188,"author":{"gitId":"wangtao0717"},"content":"            }"},{"lineNumber":189,"author":{"gitId":"wangtao0717"},"content":"        });"},{"lineNumber":190,"author":{"gitId":"wangtao0717"},"content":"    }"},{"lineNumber":191,"author":{"gitId":"wangtao0717"},"content":""},{"lineNumber":192,"author":{"gitId":"-"},"content":"}"}],"authorContributionMap":{"wangtao0717":191,"-":1}},{"path":"src/main/java/duck/Launcher.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"wangtao0717"},"content":"package duck;"},{"lineNumber":2,"author":{"gitId":"wangtao0717"},"content":""},{"lineNumber":3,"author":{"gitId":"wangtao0717"},"content":"import javafx.application.Application;"},{"lineNumber":4,"author":{"gitId":"wangtao0717"},"content":""},{"lineNumber":5,"author":{"gitId":"wangtao0717"},"content":"/**"},{"lineNumber":6,"author":{"gitId":"wangtao0717"},"content":" * A launcher class to workaround classpath issues."},{"lineNumber":7,"author":{"gitId":"wangtao0717"},"content":"*/"},{"lineNumber":8,"author":{"gitId":"wangtao0717"},"content":"public class Launcher {"},{"lineNumber":9,"author":{"gitId":"wangtao0717"},"content":"    public static void main(String[] args) {"},{"lineNumber":10,"author":{"gitId":"wangtao0717"},"content":"        Application.launch(Duke.class, args);"},{"lineNumber":11,"author":{"gitId":"wangtao0717"},"content":"    }"},{"lineNumber":12,"author":{"gitId":"wangtao0717"},"content":"}"}],"authorContributionMap":{"wangtao0717":12}},{"path":"src/main/java/duck/operation/CommandGui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"wangtao0717"},"content":"package duck.operation;"},{"lineNumber":2,"author":{"gitId":"wangtao0717"},"content":""},{"lineNumber":3,"author":{"gitId":"wangtao0717"},"content":"import java.io.IOException;"},{"lineNumber":4,"author":{"gitId":"wangtao0717"},"content":"import java.time.format.DateTimeParseException;"},{"lineNumber":5,"author":{"gitId":"wangtao0717"},"content":"import java.util.ArrayList;"},{"lineNumber":6,"author":{"gitId":"wangtao0717"},"content":""},{"lineNumber":7,"author":{"gitId":"wangtao0717"},"content":"import duck.task.Deadline;"},{"lineNumber":8,"author":{"gitId":"wangtao0717"},"content":"import duck.task.Event;"},{"lineNumber":9,"author":{"gitId":"wangtao0717"},"content":"import duck.task.TaskList;"},{"lineNumber":10,"author":{"gitId":"wangtao0717"},"content":"import duck.task.Todo;"},{"lineNumber":11,"author":{"gitId":"wangtao0717"},"content":""},{"lineNumber":12,"author":{"gitId":"wangtao0717"},"content":"public class CommandGui {"},{"lineNumber":13,"author":{"gitId":"wangtao0717"},"content":"    private String command;"},{"lineNumber":14,"author":{"gitId":"wangtao0717"},"content":"    private String description;"},{"lineNumber":15,"author":{"gitId":"wangtao0717"},"content":""},{"lineNumber":16,"author":{"gitId":"wangtao0717"},"content":"    /**"},{"lineNumber":17,"author":{"gitId":"wangtao0717"},"content":"     * Initialize the Command object"},{"lineNumber":18,"author":{"gitId":"wangtao0717"},"content":"     *"},{"lineNumber":19,"author":{"gitId":"wangtao0717"},"content":"     * @param command     the command getting from ui."},{"lineNumber":20,"author":{"gitId":"wangtao0717"},"content":"     * @param description the description of command,includes things to do, time and so on."},{"lineNumber":21,"author":{"gitId":"wangtao0717"},"content":"     * @return Lateral location."},{"lineNumber":22,"author":{"gitId":"wangtao0717"},"content":"     */"},{"lineNumber":23,"author":{"gitId":"wangtao0717"},"content":"    public CommandGui(String command, String description) {"},{"lineNumber":24,"author":{"gitId":"wangtao0717"},"content":"        this.command \u003d command;"},{"lineNumber":25,"author":{"gitId":"wangtao0717"},"content":"        this.description \u003d description;"},{"lineNumber":26,"author":{"gitId":"wangtao0717"},"content":"    }"},{"lineNumber":27,"author":{"gitId":"wangtao0717"},"content":""},{"lineNumber":28,"author":{"gitId":"wangtao0717"},"content":"    /**"},{"lineNumber":29,"author":{"gitId":"wangtao0717"},"content":"     * execute the done command"},{"lineNumber":30,"author":{"gitId":"wangtao0717"},"content":"     *"},{"lineNumber":31,"author":{"gitId":"wangtao0717"},"content":"     * @param tasks   the task list used to  record various tasks"},{"lineNumber":32,"author":{"gitId":"wangtao0717"},"content":"     * @param gui     deals with interactions with the user"},{"lineNumber":33,"author":{"gitId":"wangtao0717"},"content":"     * @param storage deals with loading tasks from the file and saving tasks in the file"},{"lineNumber":34,"author":{"gitId":"wangtao0717"},"content":"     * @return after executing, get the reply which will show in chat dot"},{"lineNumber":35,"author":{"gitId":"wangtao0717"},"content":"     */"},{"lineNumber":36,"author":{"gitId":"wangtao0717"},"content":""},{"lineNumber":37,"author":{"gitId":"wangtao0717"},"content":"    private String executeDone(TaskList tasks, Gui gui, Storage storage) {"},{"lineNumber":38,"author":{"gitId":"wangtao0717"},"content":"        try {"},{"lineNumber":39,"author":{"gitId":"wangtao0717"},"content":"            Integer noOfTask \u003d Integer.parseInt(description) - 1;"},{"lineNumber":40,"author":{"gitId":"wangtao0717"},"content":"            tasks.getTask(noOfTask).markAsDone();"},{"lineNumber":41,"author":{"gitId":"wangtao0717"},"content":"            storage.updateFile(tasks);"},{"lineNumber":42,"author":{"gitId":"wangtao0717"},"content":"            return gui.getDoneReply(noOfTask, tasks);"},{"lineNumber":43,"author":{"gitId":"wangtao0717"},"content":"        } catch (ArrayIndexOutOfBoundsException e) {"},{"lineNumber":44,"author":{"gitId":"wangtao0717"},"content":"            return gui.getErrorReply(\"error_done_empty\");"},{"lineNumber":45,"author":{"gitId":"wangtao0717"},"content":"        } catch (NumberFormatException e) {"},{"lineNumber":46,"author":{"gitId":"wangtao0717"},"content":"            return gui.getErrorReply(\"error_done_no_meaning\");"},{"lineNumber":47,"author":{"gitId":"wangtao0717"},"content":"        } catch (IndexOutOfBoundsException e) {"},{"lineNumber":48,"author":{"gitId":"wangtao0717"},"content":"            return gui.getErrorReply(\"error_done_non_existed_task\");"},{"lineNumber":49,"author":{"gitId":"wangtao0717"},"content":"        } catch (IOException e) {"},{"lineNumber":50,"author":{"gitId":"wangtao0717"},"content":"            e.printStackTrace();"},{"lineNumber":51,"author":{"gitId":"wangtao0717"},"content":"            return gui.getErrorReply(\"error_IO\");"},{"lineNumber":52,"author":{"gitId":"wangtao0717"},"content":"        }"},{"lineNumber":53,"author":{"gitId":"wangtao0717"},"content":"    }"},{"lineNumber":54,"author":{"gitId":"wangtao0717"},"content":""},{"lineNumber":55,"author":{"gitId":"wangtao0717"},"content":"    /**"},{"lineNumber":56,"author":{"gitId":"wangtao0717"},"content":"     * execute the delete command"},{"lineNumber":57,"author":{"gitId":"wangtao0717"},"content":"     *"},{"lineNumber":58,"author":{"gitId":"wangtao0717"},"content":"     * @param tasks   the task list used to  record various tasks"},{"lineNumber":59,"author":{"gitId":"wangtao0717"},"content":"     * @param gui     deals with interactions with the user"},{"lineNumber":60,"author":{"gitId":"wangtao0717"},"content":"     * @param storage deals with loading tasks from the file and saving tasks in the file"},{"lineNumber":61,"author":{"gitId":"wangtao0717"},"content":"     * @return after executing, get the reply which will show in chat dot"},{"lineNumber":62,"author":{"gitId":"wangtao0717"},"content":"     */"},{"lineNumber":63,"author":{"gitId":"wangtao0717"},"content":"    private String executeDelete(TaskList tasks, Gui gui, Storage storage) {"},{"lineNumber":64,"author":{"gitId":"wangtao0717"},"content":"        try {"},{"lineNumber":65,"author":{"gitId":"wangtao0717"},"content":"            Integer noOfTask \u003d Integer.parseInt(description) - 1;"},{"lineNumber":66,"author":{"gitId":"wangtao0717"},"content":"            tasks.getTask(noOfTask);"},{"lineNumber":67,"author":{"gitId":"wangtao0717"},"content":"            String replyString \u003d gui.getDeleteReply(noOfTask, tasks);"},{"lineNumber":68,"author":{"gitId":"wangtao0717"},"content":"            tasks.removeTask(noOfTask);"},{"lineNumber":69,"author":{"gitId":"wangtao0717"},"content":"            storage.updateFile(tasks);"},{"lineNumber":70,"author":{"gitId":"wangtao0717"},"content":"            return replyString;"},{"lineNumber":71,"author":{"gitId":"wangtao0717"},"content":"        } catch (ArrayIndexOutOfBoundsException e) {"},{"lineNumber":72,"author":{"gitId":"wangtao0717"},"content":"            return gui.getErrorReply(\"error_delete_empty\");"},{"lineNumber":73,"author":{"gitId":"wangtao0717"},"content":"        } catch (NumberFormatException e) {"},{"lineNumber":74,"author":{"gitId":"wangtao0717"},"content":"            return gui.getErrorReply(\"error_delete_no_meaning\");"},{"lineNumber":75,"author":{"gitId":"wangtao0717"},"content":"        } catch (NullPointerException e) {"},{"lineNumber":76,"author":{"gitId":"wangtao0717"},"content":"            return gui.getErrorReply(\"error_delete_non_existed_task\");"},{"lineNumber":77,"author":{"gitId":"wangtao0717"},"content":"        } catch (IndexOutOfBoundsException e) {"},{"lineNumber":78,"author":{"gitId":"wangtao0717"},"content":"            return gui.getErrorReply(\"error_delete_non_existed_task\");"},{"lineNumber":79,"author":{"gitId":"wangtao0717"},"content":"        } catch (IOException e) {"},{"lineNumber":80,"author":{"gitId":"wangtao0717"},"content":"            e.printStackTrace();"},{"lineNumber":81,"author":{"gitId":"wangtao0717"},"content":"            return gui.getErrorReply(\"error_IO\");"},{"lineNumber":82,"author":{"gitId":"wangtao0717"},"content":"        }"},{"lineNumber":83,"author":{"gitId":"wangtao0717"},"content":"    }"},{"lineNumber":84,"author":{"gitId":"wangtao0717"},"content":""},{"lineNumber":85,"author":{"gitId":"wangtao0717"},"content":"    /**"},{"lineNumber":86,"author":{"gitId":"wangtao0717"},"content":"     * execute the date command"},{"lineNumber":87,"author":{"gitId":"wangtao0717"},"content":"     *"},{"lineNumber":88,"author":{"gitId":"wangtao0717"},"content":"     * @param tasks the task list used to  record various tasks"},{"lineNumber":89,"author":{"gitId":"wangtao0717"},"content":"     * @param gui   deals with interactions with the user"},{"lineNumber":90,"author":{"gitId":"wangtao0717"},"content":"     * @return after executing, get the reply which will show in chat dot"},{"lineNumber":91,"author":{"gitId":"wangtao0717"},"content":"     */"},{"lineNumber":92,"author":{"gitId":"wangtao0717"},"content":"    private String executeDate(TaskList tasks, Gui gui) {"},{"lineNumber":93,"author":{"gitId":"wangtao0717"},"content":"        try {"},{"lineNumber":94,"author":{"gitId":"wangtao0717"},"content":"            Integer noOfTask \u003d Integer.parseInt(description) - 1;"},{"lineNumber":95,"author":{"gitId":"wangtao0717"},"content":"            tasks.getTask(noOfTask);"},{"lineNumber":96,"author":{"gitId":"wangtao0717"},"content":"            return gui.getDateReply(noOfTask, tasks);"},{"lineNumber":97,"author":{"gitId":"wangtao0717"},"content":"        } catch (ArrayIndexOutOfBoundsException e) {"},{"lineNumber":98,"author":{"gitId":"wangtao0717"},"content":"            return gui.getErrorReply(\"error_date_empty\");"},{"lineNumber":99,"author":{"gitId":"wangtao0717"},"content":"        } catch (NumberFormatException e) {"},{"lineNumber":100,"author":{"gitId":"wangtao0717"},"content":"            return gui.getErrorReply(\"error_date_no_meaning\");"},{"lineNumber":101,"author":{"gitId":"wangtao0717"},"content":"        } catch (NullPointerException | IndexOutOfBoundsException e) {"},{"lineNumber":102,"author":{"gitId":"wangtao0717"},"content":"            return gui.getErrorReply(\"error_date_non_existed_task\");"},{"lineNumber":103,"author":{"gitId":"wangtao0717"},"content":"        }"},{"lineNumber":104,"author":{"gitId":"wangtao0717"},"content":"    }"},{"lineNumber":105,"author":{"gitId":"wangtao0717"},"content":""},{"lineNumber":106,"author":{"gitId":"wangtao0717"},"content":"    /**"},{"lineNumber":107,"author":{"gitId":"wangtao0717"},"content":"     * execute the todo command"},{"lineNumber":108,"author":{"gitId":"wangtao0717"},"content":"     *"},{"lineNumber":109,"author":{"gitId":"wangtao0717"},"content":"     * @param tasks   the task list used to  record various tasks"},{"lineNumber":110,"author":{"gitId":"wangtao0717"},"content":"     * @param gui     deals with interactions with the user"},{"lineNumber":111,"author":{"gitId":"wangtao0717"},"content":"     * @param storage deals with loading tasks from the file and saving tasks in the file"},{"lineNumber":112,"author":{"gitId":"wangtao0717"},"content":"     * @return after executing, get the reply which will show in chat dot"},{"lineNumber":113,"author":{"gitId":"wangtao0717"},"content":"     */"},{"lineNumber":114,"author":{"gitId":"wangtao0717"},"content":"    private String executeTodo(TaskList tasks, Gui gui, Storage storage) throws IOException {"},{"lineNumber":115,"author":{"gitId":"wangtao0717"},"content":"        try {"},{"lineNumber":116,"author":{"gitId":"wangtao0717"},"content":"            description.equals(null);"},{"lineNumber":117,"author":{"gitId":"wangtao0717"},"content":"        } catch (NullPointerException e) {"},{"lineNumber":118,"author":{"gitId":"wangtao0717"},"content":"            return gui.getErrorReply(\"error_todo_empty\");"},{"lineNumber":119,"author":{"gitId":"wangtao0717"},"content":"        }"},{"lineNumber":120,"author":{"gitId":"wangtao0717"},"content":"        tasks.addTask(new Todo(description));"},{"lineNumber":121,"author":{"gitId":"wangtao0717"},"content":"        storage.updateFile(tasks);"},{"lineNumber":122,"author":{"gitId":"wangtao0717"},"content":"        return gui.getCommandReply(description, tasks);"},{"lineNumber":123,"author":{"gitId":"wangtao0717"},"content":"    }"},{"lineNumber":124,"author":{"gitId":"wangtao0717"},"content":""},{"lineNumber":125,"author":{"gitId":"wangtao0717"},"content":"    /**"},{"lineNumber":126,"author":{"gitId":"wangtao0717"},"content":"     * execute the deadline command"},{"lineNumber":127,"author":{"gitId":"wangtao0717"},"content":"     *"},{"lineNumber":128,"author":{"gitId":"wangtao0717"},"content":"     * @param tasks   the task list used to  record various tasks"},{"lineNumber":129,"author":{"gitId":"wangtao0717"},"content":"     * @param gui     deals with interactions with the user"},{"lineNumber":130,"author":{"gitId":"wangtao0717"},"content":"     * @param storage deals with loading tasks from the file and saving tasks in the file"},{"lineNumber":131,"author":{"gitId":"wangtao0717"},"content":"     * @return after executing, get the reply which will show in chat dot"},{"lineNumber":132,"author":{"gitId":"wangtao0717"},"content":"     */"},{"lineNumber":133,"author":{"gitId":"wangtao0717"},"content":"    private String executeDeadline(TaskList tasks, Gui gui, Storage storage) {"},{"lineNumber":134,"author":{"gitId":"wangtao0717"},"content":"        String[] descriptionSplit;"},{"lineNumber":135,"author":{"gitId":"wangtao0717"},"content":"        try {"},{"lineNumber":136,"author":{"gitId":"wangtao0717"},"content":"            descriptionSplit \u003d description.split(\"/by\");"},{"lineNumber":137,"author":{"gitId":"wangtao0717"},"content":"        } catch (NullPointerException e) {"},{"lineNumber":138,"author":{"gitId":"wangtao0717"},"content":"            return gui.getErrorReply(\"error_deadline_empty\");"},{"lineNumber":139,"author":{"gitId":"wangtao0717"},"content":"        }"},{"lineNumber":140,"author":{"gitId":"wangtao0717"},"content":"        try {"},{"lineNumber":141,"author":{"gitId":"wangtao0717"},"content":"            tasks.addTask(new Deadline(descriptionSplit[0].trim(), descriptionSplit[1].trim()));"},{"lineNumber":142,"author":{"gitId":"wangtao0717"},"content":"            storage.updateFile(tasks);"},{"lineNumber":143,"author":{"gitId":"wangtao0717"},"content":"            return gui.getCommandReply(command, tasks);"},{"lineNumber":144,"author":{"gitId":"wangtao0717"},"content":"        } catch (ArrayIndexOutOfBoundsException | DateTimeParseException e) {"},{"lineNumber":145,"author":{"gitId":"wangtao0717"},"content":"            return gui.getErrorReply(\"error_deadline_by\");"},{"lineNumber":146,"author":{"gitId":"wangtao0717"},"content":"        } catch (IOException e) {"},{"lineNumber":147,"author":{"gitId":"wangtao0717"},"content":"            return gui.getErrorReply(\"error_IO\");"},{"lineNumber":148,"author":{"gitId":"wangtao0717"},"content":"        }"},{"lineNumber":149,"author":{"gitId":"wangtao0717"},"content":"    }"},{"lineNumber":150,"author":{"gitId":"wangtao0717"},"content":""},{"lineNumber":151,"author":{"gitId":"wangtao0717"},"content":"    /**"},{"lineNumber":152,"author":{"gitId":"wangtao0717"},"content":"     * execute the event command"},{"lineNumber":153,"author":{"gitId":"wangtao0717"},"content":"     *"},{"lineNumber":154,"author":{"gitId":"wangtao0717"},"content":"     * @param tasks   the task list used to  record various tasks"},{"lineNumber":155,"author":{"gitId":"wangtao0717"},"content":"     * @param gui     deals with interactions with the user"},{"lineNumber":156,"author":{"gitId":"wangtao0717"},"content":"     * @param storage deals with loading tasks from the file and saving tasks in the file"},{"lineNumber":157,"author":{"gitId":"wangtao0717"},"content":"     * @return after executing, get the reply which will show in chat dot"},{"lineNumber":158,"author":{"gitId":"wangtao0717"},"content":"     */"},{"lineNumber":159,"author":{"gitId":"wangtao0717"},"content":"    private String executeEvent(TaskList tasks, Gui gui, Storage storage) {"},{"lineNumber":160,"author":{"gitId":"wangtao0717"},"content":"        String[] descriptionSplit;"},{"lineNumber":161,"author":{"gitId":"wangtao0717"},"content":"        try {"},{"lineNumber":162,"author":{"gitId":"wangtao0717"},"content":"            descriptionSplit \u003d description.split(\"/at\");"},{"lineNumber":163,"author":{"gitId":"wangtao0717"},"content":"        } catch (NullPointerException e) {"},{"lineNumber":164,"author":{"gitId":"wangtao0717"},"content":"            return gui.getErrorReply(\"error_event_empty\");"},{"lineNumber":165,"author":{"gitId":"wangtao0717"},"content":"        }"},{"lineNumber":166,"author":{"gitId":"wangtao0717"},"content":"        try {"},{"lineNumber":167,"author":{"gitId":"wangtao0717"},"content":"            tasks.addTask(new Event(descriptionSplit[0].trim(), descriptionSplit[1].trim()));"},{"lineNumber":168,"author":{"gitId":"wangtao0717"},"content":"            storage.updateFile(tasks);"},{"lineNumber":169,"author":{"gitId":"wangtao0717"},"content":"            return gui.getCommandReply(command, tasks);"},{"lineNumber":170,"author":{"gitId":"wangtao0717"},"content":"        } catch (ArrayIndexOutOfBoundsException | DateTimeParseException e) {"},{"lineNumber":171,"author":{"gitId":"wangtao0717"},"content":"            return gui.getErrorReply(\"error_event_at\");"},{"lineNumber":172,"author":{"gitId":"wangtao0717"},"content":"        } catch (IOException e) {"},{"lineNumber":173,"author":{"gitId":"wangtao0717"},"content":"            return gui.getErrorReply(\"error_IO\");"},{"lineNumber":174,"author":{"gitId":"wangtao0717"},"content":"        }"},{"lineNumber":175,"author":{"gitId":"wangtao0717"},"content":"    }"},{"lineNumber":176,"author":{"gitId":"wangtao0717"},"content":""},{"lineNumber":177,"author":{"gitId":"wangtao0717"},"content":"    /**"},{"lineNumber":178,"author":{"gitId":"wangtao0717"},"content":"     * execute the find command"},{"lineNumber":179,"author":{"gitId":"wangtao0717"},"content":"     *"},{"lineNumber":180,"author":{"gitId":"wangtao0717"},"content":"     * @param tasks the task list used to  record various tasks"},{"lineNumber":181,"author":{"gitId":"wangtao0717"},"content":"     * @param gui   deals with interactions with the user"},{"lineNumber":182,"author":{"gitId":"wangtao0717"},"content":"     * @return after executing, get the reply which will show in chat dot"},{"lineNumber":183,"author":{"gitId":"wangtao0717"},"content":"     */"},{"lineNumber":184,"author":{"gitId":"wangtao0717"},"content":"    private String executeFind(TaskList tasks, Gui gui) {"},{"lineNumber":185,"author":{"gitId":"wangtao0717"},"content":"        try {"},{"lineNumber":186,"author":{"gitId":"wangtao0717"},"content":"            String[] result \u003d tasks.findTask(description);"},{"lineNumber":187,"author":{"gitId":"wangtao0717"},"content":"            return gui.getFindReply(result);"},{"lineNumber":188,"author":{"gitId":"wangtao0717"},"content":"        } catch (NullPointerException e) {"},{"lineNumber":189,"author":{"gitId":"wangtao0717"},"content":"            return gui.getErrorReply(\"find_empty\");"},{"lineNumber":190,"author":{"gitId":"wangtao0717"},"content":"        }"},{"lineNumber":191,"author":{"gitId":"wangtao0717"},"content":"    }"},{"lineNumber":192,"author":{"gitId":"wangtao0717"},"content":""},{"lineNumber":193,"author":{"gitId":"wangtao0717"},"content":"    /**"},{"lineNumber":194,"author":{"gitId":"wangtao0717"},"content":"     * execute the schedule command"},{"lineNumber":195,"author":{"gitId":"wangtao0717"},"content":"     *"},{"lineNumber":196,"author":{"gitId":"wangtao0717"},"content":"     * @param tasks the task list used to  record various tasks"},{"lineNumber":197,"author":{"gitId":"wangtao0717"},"content":"     * @param gui   deals with interactions with the user"},{"lineNumber":198,"author":{"gitId":"wangtao0717"},"content":"     * @return after executing, get the reply which will show in chat dot"},{"lineNumber":199,"author":{"gitId":"wangtao0717"},"content":"     */"},{"lineNumber":200,"author":{"gitId":"wangtao0717"},"content":"    private String executeSchedule(TaskList tasks, Gui gui) {"},{"lineNumber":201,"author":{"gitId":"wangtao0717"},"content":"        ArrayList\u003cArrayList\u003cString\u003e\u003e scheduleTask \u003d tasks.scheduleTask();"},{"lineNumber":202,"author":{"gitId":"wangtao0717"},"content":"        return gui.getScheduleReply(scheduleTask);"},{"lineNumber":203,"author":{"gitId":"wangtao0717"},"content":"    }"},{"lineNumber":204,"author":{"gitId":"wangtao0717"},"content":""},{"lineNumber":205,"author":{"gitId":"wangtao0717"},"content":""},{"lineNumber":206,"author":{"gitId":"wangtao0717"},"content":"    /**"},{"lineNumber":207,"author":{"gitId":"wangtao0717"},"content":"     * execute the command"},{"lineNumber":208,"author":{"gitId":"wangtao0717"},"content":"     *"},{"lineNumber":209,"author":{"gitId":"wangtao0717"},"content":"     * @param tasks   the task list used to  record various tasks"},{"lineNumber":210,"author":{"gitId":"wangtao0717"},"content":"     * @param gui     deals with interactions with the user"},{"lineNumber":211,"author":{"gitId":"wangtao0717"},"content":"     * @param storage deals with loading tasks from the file and saving tasks in the file"},{"lineNumber":212,"author":{"gitId":"wangtao0717"},"content":"     * @return after executing, get the reply which will show in chat dot"},{"lineNumber":213,"author":{"gitId":"wangtao0717"},"content":"     * @throws IOException"},{"lineNumber":214,"author":{"gitId":"wangtao0717"},"content":"     */"},{"lineNumber":215,"author":{"gitId":"wangtao0717"},"content":"    public String execute(TaskList tasks, Gui gui, Storage storage) throws IOException {"},{"lineNumber":216,"author":{"gitId":"wangtao0717"},"content":"        assert (!command.equals(null));"},{"lineNumber":217,"author":{"gitId":"wangtao0717"},"content":"        switch (command) {"},{"lineNumber":218,"author":{"gitId":"wangtao0717"},"content":"        case \"bye\":"},{"lineNumber":219,"author":{"gitId":"wangtao0717"},"content":"        case \"list\":"},{"lineNumber":220,"author":{"gitId":"wangtao0717"},"content":"        case \"hello\":"},{"lineNumber":221,"author":{"gitId":"wangtao0717"},"content":"            return gui.getCommandReply(command, tasks);"},{"lineNumber":222,"author":{"gitId":"wangtao0717"},"content":"        case \"done\":"},{"lineNumber":223,"author":{"gitId":"wangtao0717"},"content":"            return executeDone(tasks, gui, storage);"},{"lineNumber":224,"author":{"gitId":"wangtao0717"},"content":"        case \"delete\":"},{"lineNumber":225,"author":{"gitId":"wangtao0717"},"content":"            return executeDelete(tasks, gui, storage);"},{"lineNumber":226,"author":{"gitId":"wangtao0717"},"content":"        case \"date\":"},{"lineNumber":227,"author":{"gitId":"wangtao0717"},"content":"            return executeDate(tasks, gui);"},{"lineNumber":228,"author":{"gitId":"wangtao0717"},"content":"        case \"todo\":"},{"lineNumber":229,"author":{"gitId":"wangtao0717"},"content":"            return executeTodo(tasks, gui, storage);"},{"lineNumber":230,"author":{"gitId":"wangtao0717"},"content":"        case \"deadline\":"},{"lineNumber":231,"author":{"gitId":"wangtao0717"},"content":"            return executeDeadline(tasks, gui, storage);"},{"lineNumber":232,"author":{"gitId":"wangtao0717"},"content":"        case \"event\":"},{"lineNumber":233,"author":{"gitId":"wangtao0717"},"content":"            return executeEvent(tasks, gui, storage);"},{"lineNumber":234,"author":{"gitId":"wangtao0717"},"content":"        case \"find\":"},{"lineNumber":235,"author":{"gitId":"wangtao0717"},"content":"            return executeFind(tasks, gui);"},{"lineNumber":236,"author":{"gitId":"wangtao0717"},"content":"        case \"schedule\":"},{"lineNumber":237,"author":{"gitId":"wangtao0717"},"content":"            return executeSchedule(tasks, gui);"},{"lineNumber":238,"author":{"gitId":"wangtao0717"},"content":"        default:"},{"lineNumber":239,"author":{"gitId":"wangtao0717"},"content":"            return gui.getErrorReply(\"error_no_meaning\");"},{"lineNumber":240,"author":{"gitId":"wangtao0717"},"content":"        }"},{"lineNumber":241,"author":{"gitId":"wangtao0717"},"content":"    }"},{"lineNumber":242,"author":{"gitId":"wangtao0717"},"content":"}"}],"authorContributionMap":{"wangtao0717":242}},{"path":"src/main/java/duck/operation/Gui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"wangtao0717"},"content":"package duck.operation;"},{"lineNumber":2,"author":{"gitId":"wangtao0717"},"content":""},{"lineNumber":3,"author":{"gitId":"wangtao0717"},"content":"import java.util.ArrayList;"},{"lineNumber":4,"author":{"gitId":"wangtao0717"},"content":""},{"lineNumber":5,"author":{"gitId":"wangtao0717"},"content":"import duck.task.TaskList;"},{"lineNumber":6,"author":{"gitId":"wangtao0717"},"content":""},{"lineNumber":7,"author":{"gitId":"wangtao0717"},"content":"public class Gui {"},{"lineNumber":8,"author":{"gitId":"wangtao0717"},"content":""},{"lineNumber":9,"author":{"gitId":"wangtao0717"},"content":"    private static String logo \u003d"},{"lineNumber":10,"author":{"gitId":"wangtao0717"},"content":"            \" ____           _        \\n\""},{"lineNumber":11,"author":{"gitId":"wangtao0717"},"content":"                    + \"|  _   \\\\ _   __|  | _____ \\n\""},{"lineNumber":12,"author":{"gitId":"wangtao0717"},"content":"                    + \"|  | |  |  |  |  |   |/  / _ \\\\\\n\""},{"lineNumber":13,"author":{"gitId":"wangtao0717"},"content":"                    + \"|  |_|  |  |_ |  |    \u003c  __/\\n\""},{"lineNumber":14,"author":{"gitId":"wangtao0717"},"content":"                    + \"|____/\\\\___,_|__|\\\\_\\\\___|\\n\";"},{"lineNumber":15,"author":{"gitId":"wangtao0717"},"content":""},{"lineNumber":16,"author":{"gitId":"wangtao0717"},"content":"    /**"},{"lineNumber":17,"author":{"gitId":"wangtao0717"},"content":"     * show a welcome logo and ask for command"},{"lineNumber":18,"author":{"gitId":"wangtao0717"},"content":"     */"},{"lineNumber":19,"author":{"gitId":"wangtao0717"},"content":"    public String showWelcome() {"},{"lineNumber":20,"author":{"gitId":"wangtao0717"},"content":"        return \"Hello from\\n\" + logo + \"\\nHello! I\u0027m duck.Duke Y(^_^)Y\\n\""},{"lineNumber":21,"author":{"gitId":"wangtao0717"},"content":"                + \"What can I do for you?\\n\";"},{"lineNumber":22,"author":{"gitId":"wangtao0717"},"content":"    }"},{"lineNumber":23,"author":{"gitId":"wangtao0717"},"content":""},{"lineNumber":24,"author":{"gitId":"wangtao0717"},"content":"    /**"},{"lineNumber":25,"author":{"gitId":"wangtao0717"},"content":"     * show the reply for command including hello,bye,list and so on"},{"lineNumber":26,"author":{"gitId":"wangtao0717"},"content":"     *"},{"lineNumber":27,"author":{"gitId":"wangtao0717"},"content":"     * @param command different kind of command"},{"lineNumber":28,"author":{"gitId":"wangtao0717"},"content":"     * @param tasks"},{"lineNumber":29,"author":{"gitId":"wangtao0717"},"content":"     */"},{"lineNumber":30,"author":{"gitId":"wangtao0717"},"content":"    public String getCommandReply(String command, TaskList tasks) {"},{"lineNumber":31,"author":{"gitId":"wangtao0717"},"content":"        assert (!command.isBlank());"},{"lineNumber":32,"author":{"gitId":"wangtao0717"},"content":"        switch (command) {"},{"lineNumber":33,"author":{"gitId":"wangtao0717"},"content":"        case \"hello\":"},{"lineNumber":34,"author":{"gitId":"wangtao0717"},"content":"            return \"Hello! I\u0027m duck.Duke Y(^_^)Y\\n\""},{"lineNumber":35,"author":{"gitId":"wangtao0717"},"content":"                    + \"What can I do for you?\\n\";"},{"lineNumber":36,"author":{"gitId":"wangtao0717"},"content":"        case \"bye\":"},{"lineNumber":37,"author":{"gitId":"wangtao0717"},"content":"            return \"Bye. (\u003e_\u003c) Hope to see you again soon! \";"},{"lineNumber":38,"author":{"gitId":"wangtao0717"},"content":"        case \"list\":"},{"lineNumber":39,"author":{"gitId":"wangtao0717"},"content":"            StringBuffer stringList \u003d new StringBuffer();"},{"lineNumber":40,"author":{"gitId":"wangtao0717"},"content":"            stringList.append(\"Here are the tasks in your list:\\n\");"},{"lineNumber":41,"author":{"gitId":"wangtao0717"},"content":"            for (int i \u003d 0; i \u003c tasks.getSizeOfTasks(); i++) {"},{"lineNumber":42,"author":{"gitId":"wangtao0717"},"content":"                stringList.append((i + 1) + \".\" + tasks.getTask(i).getTaskInfo() + \"\\n\");"},{"lineNumber":43,"author":{"gitId":"wangtao0717"},"content":"            }"},{"lineNumber":44,"author":{"gitId":"wangtao0717"},"content":"            return stringList.toString();"},{"lineNumber":45,"author":{"gitId":"wangtao0717"},"content":"        default:"},{"lineNumber":46,"author":{"gitId":"wangtao0717"},"content":"            return \"Got it. I\u0027ve added this task:\\n\""},{"lineNumber":47,"author":{"gitId":"wangtao0717"},"content":"                    + tasks.getTask(tasks.getSizeOfTasks() - 1).getTaskInfo() + \"\\n\""},{"lineNumber":48,"author":{"gitId":"wangtao0717"},"content":"                    + \"Now you have \" + tasks.getSizeOfTasks() + \" tasks in the list.\\n\";"},{"lineNumber":49,"author":{"gitId":"wangtao0717"},"content":"        }"},{"lineNumber":50,"author":{"gitId":"wangtao0717"},"content":""},{"lineNumber":51,"author":{"gitId":"wangtao0717"},"content":"    }"},{"lineNumber":52,"author":{"gitId":"wangtao0717"},"content":""},{"lineNumber":53,"author":{"gitId":"wangtao0717"},"content":"    /**"},{"lineNumber":54,"author":{"gitId":"wangtao0717"},"content":"     * show the reply for error"},{"lineNumber":55,"author":{"gitId":"wangtao0717"},"content":"     *"},{"lineNumber":56,"author":{"gitId":"wangtao0717"},"content":"     * @param reply the kind of error"},{"lineNumber":57,"author":{"gitId":"wangtao0717"},"content":"     */"},{"lineNumber":58,"author":{"gitId":"wangtao0717"},"content":"    public String getErrorReply(String reply) {"},{"lineNumber":59,"author":{"gitId":"wangtao0717"},"content":""},{"lineNumber":60,"author":{"gitId":"wangtao0717"},"content":"        switch (reply) {"},{"lineNumber":61,"author":{"gitId":"wangtao0717"},"content":"        case \"error_no_meaning\":"},{"lineNumber":62,"author":{"gitId":"wangtao0717"},"content":"            return \"OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\\n\";"},{"lineNumber":63,"author":{"gitId":"wangtao0717"},"content":"        case \"error_done_empty\":"},{"lineNumber":64,"author":{"gitId":"wangtao0717"},"content":"        case \"error_delete_empty\":"},{"lineNumber":65,"author":{"gitId":"wangtao0717"},"content":"        case \"error_date_empty\":"},{"lineNumber":66,"author":{"gitId":"wangtao0717"},"content":"            return \"OOPS!!! The number cannot be empty :-(\\n\";"},{"lineNumber":67,"author":{"gitId":"wangtao0717"},"content":"        case \"error_done_no_meaning\":"},{"lineNumber":68,"author":{"gitId":"wangtao0717"},"content":"        case \"error_delete_no_meaning\":"},{"lineNumber":69,"author":{"gitId":"wangtao0717"},"content":"        case \"error_date_no_meaning\":"},{"lineNumber":70,"author":{"gitId":"wangtao0717"},"content":"            return \"OOPS!!! Please input the number of the duck.task.Task :-(\\n\";"},{"lineNumber":71,"author":{"gitId":"wangtao0717"},"content":"        case \"error_done_non_existed_task\":"},{"lineNumber":72,"author":{"gitId":"wangtao0717"},"content":"        case \"error_delete_non_existed_task\":"},{"lineNumber":73,"author":{"gitId":"wangtao0717"},"content":"        case \"error_date_non_existed_task\":"},{"lineNumber":74,"author":{"gitId":"wangtao0717"},"content":"            return \"OOPS!!! the duck.task.Task you choosing isn\u0027t existed :-(\\n\";"},{"lineNumber":75,"author":{"gitId":"wangtao0717"},"content":"        case \"error_todo_empty\":"},{"lineNumber":76,"author":{"gitId":"wangtao0717"},"content":"        case \"error_deadline_empty\":"},{"lineNumber":77,"author":{"gitId":"wangtao0717"},"content":"        case \"error_event_empty\":"},{"lineNumber":78,"author":{"gitId":"wangtao0717"},"content":"            return \"OOPS!!! The description of a task cannot be empty. :-(\\n\";"},{"lineNumber":79,"author":{"gitId":"wangtao0717"},"content":"        case \"error_deadline_by\":"},{"lineNumber":80,"author":{"gitId":"wangtao0717"},"content":"            return \"OOPS!!! The deadline of a deadline task should be meaningful. :-(\\n\""},{"lineNumber":81,"author":{"gitId":"wangtao0717"},"content":"                    + \"Please enter according to the format eg.description /by YYYY-MM-DD\\n\";"},{"lineNumber":82,"author":{"gitId":"wangtao0717"},"content":"        case \"error_event_at\":"},{"lineNumber":83,"author":{"gitId":"wangtao0717"},"content":"            return \"OOPS!!! The period of a event task should be meaningful. :-(\\n\""},{"lineNumber":84,"author":{"gitId":"wangtao0717"},"content":"                    + \"Please enter according to the format eg.description /at YYYY-MM-DD\\n\";"},{"lineNumber":85,"author":{"gitId":"wangtao0717"},"content":"        case \"find_empty\":"},{"lineNumber":86,"author":{"gitId":"wangtao0717"},"content":"            return \"OOPS!!! Please enter the keyword of task. :-(\\n\";"},{"lineNumber":87,"author":{"gitId":"wangtao0717"},"content":"        case \"error_IO\":"},{"lineNumber":88,"author":{"gitId":"wangtao0717"},"content":"            return \"OOPS!!! Something wrong happens in IO. :-(\\n\";"},{"lineNumber":89,"author":{"gitId":"wangtao0717"},"content":"        default:"},{"lineNumber":90,"author":{"gitId":"wangtao0717"},"content":"            return \"error\";"},{"lineNumber":91,"author":{"gitId":"wangtao0717"},"content":"        }"},{"lineNumber":92,"author":{"gitId":"wangtao0717"},"content":"    }"},{"lineNumber":93,"author":{"gitId":"wangtao0717"},"content":""},{"lineNumber":94,"author":{"gitId":"wangtao0717"},"content":"    /**"},{"lineNumber":95,"author":{"gitId":"wangtao0717"},"content":"     * show the reply for done command"},{"lineNumber":96,"author":{"gitId":"wangtao0717"},"content":"     *"},{"lineNumber":97,"author":{"gitId":"wangtao0717"},"content":"     * @param number the number of task in task list"},{"lineNumber":98,"author":{"gitId":"wangtao0717"},"content":"     * @param tasks  task list"},{"lineNumber":99,"author":{"gitId":"wangtao0717"},"content":"     */"},{"lineNumber":100,"author":{"gitId":"wangtao0717"},"content":"    public String getDoneReply(int number, TaskList tasks) {"},{"lineNumber":101,"author":{"gitId":"wangtao0717"},"content":"        return \"Nice! I\u0027ve marked this task as done:\\n\""},{"lineNumber":102,"author":{"gitId":"wangtao0717"},"content":"                + (number + 1) + \".\" + tasks.getTask(number).getTaskInfo() + \"\\n\";"},{"lineNumber":103,"author":{"gitId":"wangtao0717"},"content":""},{"lineNumber":104,"author":{"gitId":"wangtao0717"},"content":"    }"},{"lineNumber":105,"author":{"gitId":"wangtao0717"},"content":""},{"lineNumber":106,"author":{"gitId":"wangtao0717"},"content":"    /**"},{"lineNumber":107,"author":{"gitId":"wangtao0717"},"content":"     * show the reply for delete command"},{"lineNumber":108,"author":{"gitId":"wangtao0717"},"content":"     *"},{"lineNumber":109,"author":{"gitId":"wangtao0717"},"content":"     * @param number the number of task in task list"},{"lineNumber":110,"author":{"gitId":"wangtao0717"},"content":"     * @param tasks  task list"},{"lineNumber":111,"author":{"gitId":"wangtao0717"},"content":"     */"},{"lineNumber":112,"author":{"gitId":"wangtao0717"},"content":"    public String getDeleteReply(int number, TaskList tasks) {"},{"lineNumber":113,"author":{"gitId":"wangtao0717"},"content":""},{"lineNumber":114,"author":{"gitId":"wangtao0717"},"content":"        return \"Noted. I\u0027ve removed this task:\\n \""},{"lineNumber":115,"author":{"gitId":"wangtao0717"},"content":"                + (number + 1) + \".\" + tasks.getTask(number).getTaskInfo() + \"\\n\""},{"lineNumber":116,"author":{"gitId":"wangtao0717"},"content":"                + \"Now you have \" + (tasks.getSizeOfTasks() - 1) + \" tasks in the list.\\n\";"},{"lineNumber":117,"author":{"gitId":"wangtao0717"},"content":""},{"lineNumber":118,"author":{"gitId":"wangtao0717"},"content":"    }"},{"lineNumber":119,"author":{"gitId":"wangtao0717"},"content":""},{"lineNumber":120,"author":{"gitId":"wangtao0717"},"content":"    /**"},{"lineNumber":121,"author":{"gitId":"wangtao0717"},"content":"     * show the reply for date command"},{"lineNumber":122,"author":{"gitId":"wangtao0717"},"content":"     *"},{"lineNumber":123,"author":{"gitId":"wangtao0717"},"content":"     * @param number the number of task in task list"},{"lineNumber":124,"author":{"gitId":"wangtao0717"},"content":"     * @param tasks  task list"},{"lineNumber":125,"author":{"gitId":"wangtao0717"},"content":"     */"},{"lineNumber":126,"author":{"gitId":"wangtao0717"},"content":"    public String getDateReply(int number, TaskList tasks) {"},{"lineNumber":127,"author":{"gitId":"wangtao0717"},"content":""},{"lineNumber":128,"author":{"gitId":"wangtao0717"},"content":"        return tasks.getTask(number).getPeriodDays();"},{"lineNumber":129,"author":{"gitId":"wangtao0717"},"content":""},{"lineNumber":130,"author":{"gitId":"wangtao0717"},"content":"    }"},{"lineNumber":131,"author":{"gitId":"wangtao0717"},"content":""},{"lineNumber":132,"author":{"gitId":"wangtao0717"},"content":"    /**"},{"lineNumber":133,"author":{"gitId":"wangtao0717"},"content":"     * show the reply for find command"},{"lineNumber":134,"author":{"gitId":"wangtao0717"},"content":"     *"},{"lineNumber":135,"author":{"gitId":"wangtao0717"},"content":"     * @param result the finding result string array"},{"lineNumber":136,"author":{"gitId":"wangtao0717"},"content":"     */"},{"lineNumber":137,"author":{"gitId":"wangtao0717"},"content":"    public String getFindReply(String[] result) {"},{"lineNumber":138,"author":{"gitId":"wangtao0717"},"content":""},{"lineNumber":139,"author":{"gitId":"wangtao0717"},"content":"        if (result[0] \u003d\u003d null) {"},{"lineNumber":140,"author":{"gitId":"wangtao0717"},"content":"            return \"Sorry, I don\u0027t find the task\\n\";"},{"lineNumber":141,"author":{"gitId":"wangtao0717"},"content":"        }"},{"lineNumber":142,"author":{"gitId":"wangtao0717"},"content":"        StringBuffer stringList \u003d new StringBuffer();"},{"lineNumber":143,"author":{"gitId":"wangtao0717"},"content":"        stringList.append(\"Here are the tasks in your list:\\n\");"},{"lineNumber":144,"author":{"gitId":"wangtao0717"},"content":"        for (int i \u003d 0; result[i] !\u003d null; i++) {"},{"lineNumber":145,"author":{"gitId":"wangtao0717"},"content":"            stringList.append(result[i] + \"\\n\");"},{"lineNumber":146,"author":{"gitId":"wangtao0717"},"content":"        }"},{"lineNumber":147,"author":{"gitId":"wangtao0717"},"content":"        return stringList.toString();"},{"lineNumber":148,"author":{"gitId":"wangtao0717"},"content":"    }"},{"lineNumber":149,"author":{"gitId":"wangtao0717"},"content":""},{"lineNumber":150,"author":{"gitId":"wangtao0717"},"content":"    /**"},{"lineNumber":151,"author":{"gitId":"wangtao0717"},"content":"     * show the reply for schedule command"},{"lineNumber":152,"author":{"gitId":"wangtao0717"},"content":"     *"},{"lineNumber":153,"author":{"gitId":"wangtao0717"},"content":"     * @param scheduleTask use tasks to form schedule"},{"lineNumber":154,"author":{"gitId":"wangtao0717"},"content":"     * @return schedule string"},{"lineNumber":155,"author":{"gitId":"wangtao0717"},"content":"     */"},{"lineNumber":156,"author":{"gitId":"wangtao0717"},"content":"    public String getScheduleReply("},{"lineNumber":157,"author":{"gitId":"wangtao0717"},"content":"            ArrayList\u003cArrayList\u003cString\u003e\u003e scheduleTask) {"},{"lineNumber":158,"author":{"gitId":"wangtao0717"},"content":"        String scheduleString \u003d \"Here are your schedule of tasks\\n\";"},{"lineNumber":159,"author":{"gitId":"wangtao0717"},"content":"        scheduleString +\u003d \"have not determined date:\\n\";"},{"lineNumber":160,"author":{"gitId":"wangtao0717"},"content":"        for (int i \u003d 1; i \u003c scheduleTask.get(0).size(); i++) {"},{"lineNumber":161,"author":{"gitId":"wangtao0717"},"content":"            scheduleString +\u003d scheduleTask.get(0).get(i) + \"\\n\";"},{"lineNumber":162,"author":{"gitId":"wangtao0717"},"content":"        }"},{"lineNumber":163,"author":{"gitId":"wangtao0717"},"content":"        scheduleString +\u003d \"\\n\";"},{"lineNumber":164,"author":{"gitId":"wangtao0717"},"content":""},{"lineNumber":165,"author":{"gitId":"wangtao0717"},"content":"        for (int i \u003d 1; i \u003c scheduleTask.size(); i++) {"},{"lineNumber":166,"author":{"gitId":"wangtao0717"},"content":"            scheduleString +\u003d scheduleTask.get(i).get(0) + \"\\n\";"},{"lineNumber":167,"author":{"gitId":"wangtao0717"},"content":"            for (int j \u003d 1; j \u003c scheduleTask.get(i).size(); j++) {"},{"lineNumber":168,"author":{"gitId":"wangtao0717"},"content":"                scheduleString +\u003d scheduleTask.get(i).get(j) + \"\\n\";"},{"lineNumber":169,"author":{"gitId":"wangtao0717"},"content":"            }"},{"lineNumber":170,"author":{"gitId":"wangtao0717"},"content":"            scheduleString +\u003d \"\\n\";"},{"lineNumber":171,"author":{"gitId":"wangtao0717"},"content":"        }"},{"lineNumber":172,"author":{"gitId":"wangtao0717"},"content":"        return scheduleString;"},{"lineNumber":173,"author":{"gitId":"wangtao0717"},"content":"    }"},{"lineNumber":174,"author":{"gitId":"wangtao0717"},"content":"}"}],"authorContributionMap":{"wangtao0717":174}},{"path":"src/main/java/duck/operation/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"wangtao0717"},"content":"package duck.operation;"},{"lineNumber":2,"author":{"gitId":"wangtao0717"},"content":""},{"lineNumber":3,"author":{"gitId":"wangtao0717"},"content":"public class Parser {"},{"lineNumber":4,"author":{"gitId":"wangtao0717"},"content":"    /**"},{"lineNumber":5,"author":{"gitId":"wangtao0717"},"content":"     * Recognize the full command and divide it into command and descriptions"},{"lineNumber":6,"author":{"gitId":"wangtao0717"},"content":"     *"},{"lineNumber":7,"author":{"gitId":"wangtao0717"},"content":"     * @param fullCommand"},{"lineNumber":8,"author":{"gitId":"wangtao0717"},"content":"     * @return Command class"},{"lineNumber":9,"author":{"gitId":"wangtao0717"},"content":"     */"},{"lineNumber":10,"author":{"gitId":"wangtao0717"},"content":"    public static CommandGui parse(String fullCommand) {"},{"lineNumber":11,"author":{"gitId":"wangtao0717"},"content":"        String[] commandSplit \u003d fullCommand.split(\" \");"},{"lineNumber":12,"author":{"gitId":"wangtao0717"},"content":"        String command;"},{"lineNumber":13,"author":{"gitId":"wangtao0717"},"content":"        String description;"},{"lineNumber":14,"author":{"gitId":"wangtao0717"},"content":"        try {"},{"lineNumber":15,"author":{"gitId":"wangtao0717"},"content":"            command \u003d commandSplit[0];"},{"lineNumber":16,"author":{"gitId":"wangtao0717"},"content":"            description \u003d fullCommand.substring(commandSplit[0].length() + 1, fullCommand.length()).trim();"},{"lineNumber":17,"author":{"gitId":"wangtao0717"},"content":"            if (description.isBlank()) {"},{"lineNumber":18,"author":{"gitId":"wangtao0717"},"content":"                description \u003d null;"},{"lineNumber":19,"author":{"gitId":"wangtao0717"},"content":"            }"},{"lineNumber":20,"author":{"gitId":"wangtao0717"},"content":"        } catch (StringIndexOutOfBoundsException e) {"},{"lineNumber":21,"author":{"gitId":"wangtao0717"},"content":"            command \u003d commandSplit[0];"},{"lineNumber":22,"author":{"gitId":"wangtao0717"},"content":"            description \u003d null;"},{"lineNumber":23,"author":{"gitId":"wangtao0717"},"content":"        } catch (ArrayIndexOutOfBoundsException e) {"},{"lineNumber":24,"author":{"gitId":"wangtao0717"},"content":"            command \u003d \"null\";"},{"lineNumber":25,"author":{"gitId":"wangtao0717"},"content":"            description \u003d null;"},{"lineNumber":26,"author":{"gitId":"wangtao0717"},"content":"        }"},{"lineNumber":27,"author":{"gitId":"wangtao0717"},"content":"        return new CommandGui(command, description);"},{"lineNumber":28,"author":{"gitId":"wangtao0717"},"content":"    }"},{"lineNumber":29,"author":{"gitId":"wangtao0717"},"content":"}"}],"authorContributionMap":{"wangtao0717":29}},{"path":"src/main/java/duck/operation/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"wangtao0717"},"content":"package duck.operation;"},{"lineNumber":2,"author":{"gitId":"wangtao0717"},"content":""},{"lineNumber":3,"author":{"gitId":"wangtao0717"},"content":"import java.io.BufferedReader;"},{"lineNumber":4,"author":{"gitId":"wangtao0717"},"content":"import java.io.File;"},{"lineNumber":5,"author":{"gitId":"wangtao0717"},"content":"import java.io.FileInputStream;"},{"lineNumber":6,"author":{"gitId":"wangtao0717"},"content":"import java.io.FileOutputStream;"},{"lineNumber":7,"author":{"gitId":"wangtao0717"},"content":"import java.io.IOException;"},{"lineNumber":8,"author":{"gitId":"wangtao0717"},"content":"import java.io.InputStreamReader;"},{"lineNumber":9,"author":{"gitId":"wangtao0717"},"content":"import java.io.OutputStreamWriter;"},{"lineNumber":10,"author":{"gitId":"wangtao0717"},"content":""},{"lineNumber":11,"author":{"gitId":"wangtao0717"},"content":"import duck.task.TaskList;"},{"lineNumber":12,"author":{"gitId":"wangtao0717"},"content":""},{"lineNumber":13,"author":{"gitId":"wangtao0717"},"content":""},{"lineNumber":14,"author":{"gitId":"wangtao0717"},"content":""},{"lineNumber":15,"author":{"gitId":"wangtao0717"},"content":""},{"lineNumber":16,"author":{"gitId":"wangtao0717"},"content":"public class Storage {"},{"lineNumber":17,"author":{"gitId":"wangtao0717"},"content":"    private File fileOfData;"},{"lineNumber":18,"author":{"gitId":"wangtao0717"},"content":""},{"lineNumber":19,"author":{"gitId":"wangtao0717"},"content":"    /**"},{"lineNumber":20,"author":{"gitId":"wangtao0717"},"content":"     * initialize Storage object, location file"},{"lineNumber":21,"author":{"gitId":"wangtao0717"},"content":"     * if it does not exist, generate a new one"},{"lineNumber":22,"author":{"gitId":"wangtao0717"},"content":"     *"},{"lineNumber":23,"author":{"gitId":"wangtao0717"},"content":"     * @param filePath the path of file"},{"lineNumber":24,"author":{"gitId":"wangtao0717"},"content":"     */"},{"lineNumber":25,"author":{"gitId":"wangtao0717"},"content":"    public Storage(String filePath) {"},{"lineNumber":26,"author":{"gitId":"wangtao0717"},"content":"        this.fileOfData \u003d new File(filePath);"},{"lineNumber":27,"author":{"gitId":"wangtao0717"},"content":"        File directory \u003d this.fileOfData.getParentFile();"},{"lineNumber":28,"author":{"gitId":"wangtao0717"},"content":"        if (!directory.exists()) {"},{"lineNumber":29,"author":{"gitId":"wangtao0717"},"content":"            directory.mkdirs();"},{"lineNumber":30,"author":{"gitId":"wangtao0717"},"content":"        }"},{"lineNumber":31,"author":{"gitId":"wangtao0717"},"content":"        try {"},{"lineNumber":32,"author":{"gitId":"wangtao0717"},"content":"            fileOfData.createNewFile();"},{"lineNumber":33,"author":{"gitId":"wangtao0717"},"content":"        } catch (IOException e) {"},{"lineNumber":34,"author":{"gitId":"wangtao0717"},"content":"            e.printStackTrace();"},{"lineNumber":35,"author":{"gitId":"wangtao0717"},"content":"        }"},{"lineNumber":36,"author":{"gitId":"wangtao0717"},"content":""},{"lineNumber":37,"author":{"gitId":"wangtao0717"},"content":"    }"},{"lineNumber":38,"author":{"gitId":"wangtao0717"},"content":""},{"lineNumber":39,"author":{"gitId":"wangtao0717"},"content":"    /**"},{"lineNumber":40,"author":{"gitId":"wangtao0717"},"content":"     * Get the data in the file, and return a list of string"},{"lineNumber":41,"author":{"gitId":"wangtao0717"},"content":"     *"},{"lineNumber":42,"author":{"gitId":"wangtao0717"},"content":"     * @return a list of data"},{"lineNumber":43,"author":{"gitId":"wangtao0717"},"content":"     * @throws IOException"},{"lineNumber":44,"author":{"gitId":"wangtao0717"},"content":"     */"},{"lineNumber":45,"author":{"gitId":"wangtao0717"},"content":"    public String[] load() throws IOException {"},{"lineNumber":46,"author":{"gitId":"wangtao0717"},"content":"        FileInputStream inStream \u003d new FileInputStream(fileOfData);"},{"lineNumber":47,"author":{"gitId":"wangtao0717"},"content":"        InputStreamReader reader \u003d new InputStreamReader(inStream);"},{"lineNumber":48,"author":{"gitId":"wangtao0717"},"content":"        BufferedReader br \u003d new BufferedReader(reader);"},{"lineNumber":49,"author":{"gitId":"wangtao0717"},"content":"        String[] data \u003d new String[1000];"},{"lineNumber":50,"author":{"gitId":"wangtao0717"},"content":"        int lines \u003d 0;"},{"lineNumber":51,"author":{"gitId":"wangtao0717"},"content":"        for (String line \u003d br.readLine(); line !\u003d null; line \u003d br.readLine()) {"},{"lineNumber":52,"author":{"gitId":"wangtao0717"},"content":"            data[lines] \u003d line;"},{"lineNumber":53,"author":{"gitId":"wangtao0717"},"content":"            lines++;"},{"lineNumber":54,"author":{"gitId":"wangtao0717"},"content":"        }"},{"lineNumber":55,"author":{"gitId":"wangtao0717"},"content":"        assert (lines \u003c 1000);"},{"lineNumber":56,"author":{"gitId":"wangtao0717"},"content":"        br.close();"},{"lineNumber":57,"author":{"gitId":"wangtao0717"},"content":"        return data;"},{"lineNumber":58,"author":{"gitId":"wangtao0717"},"content":"    }"},{"lineNumber":59,"author":{"gitId":"wangtao0717"},"content":""},{"lineNumber":60,"author":{"gitId":"wangtao0717"},"content":"    /**"},{"lineNumber":61,"author":{"gitId":"wangtao0717"},"content":"     * update the data of the file when task list changes."},{"lineNumber":62,"author":{"gitId":"wangtao0717"},"content":"     *"},{"lineNumber":63,"author":{"gitId":"wangtao0717"},"content":"     * @param tasks"},{"lineNumber":64,"author":{"gitId":"wangtao0717"},"content":"     * @throws IOException"},{"lineNumber":65,"author":{"gitId":"wangtao0717"},"content":"     */"},{"lineNumber":66,"author":{"gitId":"wangtao0717"},"content":"    public void updateFile(TaskList tasks) throws IOException {"},{"lineNumber":67,"author":{"gitId":"wangtao0717"},"content":"        FileOutputStream outStream \u003d new FileOutputStream(fileOfData);"},{"lineNumber":68,"author":{"gitId":"wangtao0717"},"content":"        OutputStreamWriter writer \u003d new OutputStreamWriter(outStream, \"UTF-8\");"},{"lineNumber":69,"author":{"gitId":"wangtao0717"},"content":"        writer.write(\"\");"},{"lineNumber":70,"author":{"gitId":"wangtao0717"},"content":"        writer.flush();"},{"lineNumber":71,"author":{"gitId":"wangtao0717"},"content":"        for (int i \u003d 0; i \u003c tasks.getSizeOfTasks(); i++) {"},{"lineNumber":72,"author":{"gitId":"wangtao0717"},"content":"            writer.write(tasks.getTask(i).getTaskInfoOfFile() + \"\\n\");"},{"lineNumber":73,"author":{"gitId":"wangtao0717"},"content":"        }"},{"lineNumber":74,"author":{"gitId":"wangtao0717"},"content":"        writer.flush();"},{"lineNumber":75,"author":{"gitId":"wangtao0717"},"content":"    }"},{"lineNumber":76,"author":{"gitId":"wangtao0717"},"content":""},{"lineNumber":77,"author":{"gitId":"wangtao0717"},"content":"}"}],"authorContributionMap":{"wangtao0717":77}},{"path":"src/main/java/duck/task/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"wangtao0717"},"content":"package duck.task;"},{"lineNumber":2,"author":{"gitId":"wangtao0717"},"content":""},{"lineNumber":3,"author":{"gitId":"wangtao0717"},"content":"import java.time.LocalDate;"},{"lineNumber":4,"author":{"gitId":"wangtao0717"},"content":"import java.time.format.DateTimeFormatter;"},{"lineNumber":5,"author":{"gitId":"wangtao0717"},"content":"import java.time.temporal.ChronoUnit;"},{"lineNumber":6,"author":{"gitId":"wangtao0717"},"content":""},{"lineNumber":7,"author":{"gitId":"wangtao0717"},"content":"public class Deadline extends TaskWithDate {"},{"lineNumber":8,"author":{"gitId":"wangtao0717"},"content":"    /**"},{"lineNumber":9,"author":{"gitId":"wangtao0717"},"content":"     * initialize Deadline object"},{"lineNumber":10,"author":{"gitId":"wangtao0717"},"content":"     *"},{"lineNumber":11,"author":{"gitId":"wangtao0717"},"content":"     * @param description the description of task"},{"lineNumber":12,"author":{"gitId":"wangtao0717"},"content":"     * @param by          the deadline of task (YYYY-MM-DD)"},{"lineNumber":13,"author":{"gitId":"wangtao0717"},"content":"     */"},{"lineNumber":14,"author":{"gitId":"wangtao0717"},"content":"    public Deadline(String description, String by) {"},{"lineNumber":15,"author":{"gitId":"wangtao0717"},"content":"        super(description, by);"},{"lineNumber":16,"author":{"gitId":"wangtao0717"},"content":"    }"},{"lineNumber":17,"author":{"gitId":"wangtao0717"},"content":""},{"lineNumber":18,"author":{"gitId":"wangtao0717"},"content":"    /**"},{"lineNumber":19,"author":{"gitId":"wangtao0717"},"content":"     * get task information"},{"lineNumber":20,"author":{"gitId":"wangtao0717"},"content":"     *"},{"lineNumber":21,"author":{"gitId":"wangtao0717"},"content":"     * @return a string show information of task"},{"lineNumber":22,"author":{"gitId":"wangtao0717"},"content":"     */"},{"lineNumber":23,"author":{"gitId":"wangtao0717"},"content":"    @Override"},{"lineNumber":24,"author":{"gitId":"wangtao0717"},"content":"    public String getTaskInfo() {"},{"lineNumber":25,"author":{"gitId":"wangtao0717"},"content":"        return \"[D]\" + super.getTaskInfo() + \" (by: \""},{"lineNumber":26,"author":{"gitId":"wangtao0717"},"content":"                + date.getDayOfWeek() + \", \" + date.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\")) + \")\";"},{"lineNumber":27,"author":{"gitId":"wangtao0717"},"content":"    }"},{"lineNumber":28,"author":{"gitId":"wangtao0717"},"content":""},{"lineNumber":29,"author":{"gitId":"wangtao0717"},"content":"    /**"},{"lineNumber":30,"author":{"gitId":"wangtao0717"},"content":"     * get period from now to deadline"},{"lineNumber":31,"author":{"gitId":"wangtao0717"},"content":"     *"},{"lineNumber":32,"author":{"gitId":"wangtao0717"},"content":"     * @return the number of period"},{"lineNumber":33,"author":{"gitId":"wangtao0717"},"content":"     */"},{"lineNumber":34,"author":{"gitId":"wangtao0717"},"content":"    @Override"},{"lineNumber":35,"author":{"gitId":"wangtao0717"},"content":"    public String getPeriodDays() {"},{"lineNumber":36,"author":{"gitId":"wangtao0717"},"content":"        LocalDate now \u003d LocalDate.parse(LocalDate.now().toString());"},{"lineNumber":37,"author":{"gitId":"wangtao0717"},"content":"        return \"There are \" + now.until(date, ChronoUnit.DAYS) + \" day(s) before the deadline\";"},{"lineNumber":38,"author":{"gitId":"wangtao0717"},"content":"    }"},{"lineNumber":39,"author":{"gitId":"wangtao0717"},"content":""},{"lineNumber":40,"author":{"gitId":"wangtao0717"},"content":"    /**"},{"lineNumber":41,"author":{"gitId":"wangtao0717"},"content":"     * get the task information showing in the file"},{"lineNumber":42,"author":{"gitId":"wangtao0717"},"content":"     *"},{"lineNumber":43,"author":{"gitId":"wangtao0717"},"content":"     * @return"},{"lineNumber":44,"author":{"gitId":"wangtao0717"},"content":"     */"},{"lineNumber":45,"author":{"gitId":"wangtao0717"},"content":"    @Override"},{"lineNumber":46,"author":{"gitId":"wangtao0717"},"content":"    public String getTaskInfoOfFile() {"},{"lineNumber":47,"author":{"gitId":"wangtao0717"},"content":"        return \"D | \" + (super.isDone ? \"1\" : \"0\") + \" | \" + super.getDescription() + \" | \" + this.date;"},{"lineNumber":48,"author":{"gitId":"wangtao0717"},"content":"    }"},{"lineNumber":49,"author":{"gitId":"wangtao0717"},"content":""},{"lineNumber":50,"author":{"gitId":"wangtao0717"},"content":"}"}],"authorContributionMap":{"wangtao0717":50}},{"path":"src/main/java/duck/task/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"wangtao0717"},"content":"package duck.task;"},{"lineNumber":2,"author":{"gitId":"wangtao0717"},"content":""},{"lineNumber":3,"author":{"gitId":"wangtao0717"},"content":"import java.time.LocalDate;"},{"lineNumber":4,"author":{"gitId":"wangtao0717"},"content":"import java.time.format.DateTimeFormatter;"},{"lineNumber":5,"author":{"gitId":"wangtao0717"},"content":"import java.time.temporal.ChronoUnit;"},{"lineNumber":6,"author":{"gitId":"wangtao0717"},"content":""},{"lineNumber":7,"author":{"gitId":"wangtao0717"},"content":"public class Event extends TaskWithDate {"},{"lineNumber":8,"author":{"gitId":"wangtao0717"},"content":"    /**"},{"lineNumber":9,"author":{"gitId":"wangtao0717"},"content":"     * initialize Event object"},{"lineNumber":10,"author":{"gitId":"wangtao0717"},"content":"     *"},{"lineNumber":11,"author":{"gitId":"wangtao0717"},"content":"     * @param description the description of task"},{"lineNumber":12,"author":{"gitId":"wangtao0717"},"content":"     * @param at          the starting time of task (YYYY-MM-DD)"},{"lineNumber":13,"author":{"gitId":"wangtao0717"},"content":"     */"},{"lineNumber":14,"author":{"gitId":"wangtao0717"},"content":"    public Event(String description, String at) {"},{"lineNumber":15,"author":{"gitId":"wangtao0717"},"content":"        super(description, at);"},{"lineNumber":16,"author":{"gitId":"wangtao0717"},"content":"    }"},{"lineNumber":17,"author":{"gitId":"wangtao0717"},"content":""},{"lineNumber":18,"author":{"gitId":"wangtao0717"},"content":"    /**"},{"lineNumber":19,"author":{"gitId":"wangtao0717"},"content":"     * get task information"},{"lineNumber":20,"author":{"gitId":"wangtao0717"},"content":"     *"},{"lineNumber":21,"author":{"gitId":"wangtao0717"},"content":"     * @return a string show information of task"},{"lineNumber":22,"author":{"gitId":"wangtao0717"},"content":"     */"},{"lineNumber":23,"author":{"gitId":"wangtao0717"},"content":"    @Override"},{"lineNumber":24,"author":{"gitId":"wangtao0717"},"content":"    public String getTaskInfo() {"},{"lineNumber":25,"author":{"gitId":"wangtao0717"},"content":"        return \"[E]\" + super.getTaskInfo() + \" (at: \""},{"lineNumber":26,"author":{"gitId":"wangtao0717"},"content":"                + date.getDayOfWeek() + \", \" + date.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\")) + \")\";"},{"lineNumber":27,"author":{"gitId":"wangtao0717"},"content":"    }"},{"lineNumber":28,"author":{"gitId":"wangtao0717"},"content":""},{"lineNumber":29,"author":{"gitId":"wangtao0717"},"content":"    /**"},{"lineNumber":30,"author":{"gitId":"wangtao0717"},"content":"     * get period from now to starting time"},{"lineNumber":31,"author":{"gitId":"wangtao0717"},"content":"     *"},{"lineNumber":32,"author":{"gitId":"wangtao0717"},"content":"     * @return the number of period"},{"lineNumber":33,"author":{"gitId":"wangtao0717"},"content":"     */"},{"lineNumber":34,"author":{"gitId":"wangtao0717"},"content":"    @Override"},{"lineNumber":35,"author":{"gitId":"wangtao0717"},"content":"    public String getPeriodDays() {"},{"lineNumber":36,"author":{"gitId":"wangtao0717"},"content":"        LocalDate now \u003d LocalDate.parse(LocalDate.now().toString());"},{"lineNumber":37,"author":{"gitId":"wangtao0717"},"content":"        return \"There are \" + now.until(date, ChronoUnit.DAYS) + \" day(s) before the event starting\";"},{"lineNumber":38,"author":{"gitId":"wangtao0717"},"content":"    }"},{"lineNumber":39,"author":{"gitId":"wangtao0717"},"content":""},{"lineNumber":40,"author":{"gitId":"wangtao0717"},"content":"    /**"},{"lineNumber":41,"author":{"gitId":"wangtao0717"},"content":"     * get the task information showing in the file"},{"lineNumber":42,"author":{"gitId":"wangtao0717"},"content":"     *"},{"lineNumber":43,"author":{"gitId":"wangtao0717"},"content":"     * @return"},{"lineNumber":44,"author":{"gitId":"wangtao0717"},"content":"     */"},{"lineNumber":45,"author":{"gitId":"wangtao0717"},"content":"    @Override"},{"lineNumber":46,"author":{"gitId":"wangtao0717"},"content":"    public String getTaskInfoOfFile() {"},{"lineNumber":47,"author":{"gitId":"wangtao0717"},"content":"        return \"E | \" + (super.isDone ? \"1\" : \"0\") + \" | \" + super.getDescription() + \" | \" + this.date;"},{"lineNumber":48,"author":{"gitId":"wangtao0717"},"content":"    }"},{"lineNumber":49,"author":{"gitId":"wangtao0717"},"content":"}"}],"authorContributionMap":{"wangtao0717":49}},{"path":"src/main/java/duck/task/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"wangtao0717"},"content":"package duck.task;"},{"lineNumber":2,"author":{"gitId":"wangtao0717"},"content":""},{"lineNumber":3,"author":{"gitId":"wangtao0717"},"content":"public class Task {"},{"lineNumber":4,"author":{"gitId":"wangtao0717"},"content":"    protected String description;"},{"lineNumber":5,"author":{"gitId":"wangtao0717"},"content":"    protected boolean isDone;"},{"lineNumber":6,"author":{"gitId":"wangtao0717"},"content":""},{"lineNumber":7,"author":{"gitId":"wangtao0717"},"content":"    /**"},{"lineNumber":8,"author":{"gitId":"wangtao0717"},"content":"     * initialize the task"},{"lineNumber":9,"author":{"gitId":"wangtao0717"},"content":"     *"},{"lineNumber":10,"author":{"gitId":"wangtao0717"},"content":"     * @param description the description of task"},{"lineNumber":11,"author":{"gitId":"wangtao0717"},"content":"     */"},{"lineNumber":12,"author":{"gitId":"wangtao0717"},"content":"    public Task(String description) {"},{"lineNumber":13,"author":{"gitId":"wangtao0717"},"content":"        this.description \u003d description;"},{"lineNumber":14,"author":{"gitId":"wangtao0717"},"content":"        this.isDone \u003d false;"},{"lineNumber":15,"author":{"gitId":"wangtao0717"},"content":"    }"},{"lineNumber":16,"author":{"gitId":"wangtao0717"},"content":""},{"lineNumber":17,"author":{"gitId":"wangtao0717"},"content":"    /**"},{"lineNumber":18,"author":{"gitId":"wangtao0717"},"content":"     * get status of task"},{"lineNumber":19,"author":{"gitId":"wangtao0717"},"content":"     *"},{"lineNumber":20,"author":{"gitId":"wangtao0717"},"content":"     * @return tick or X symbols"},{"lineNumber":21,"author":{"gitId":"wangtao0717"},"content":"     */"},{"lineNumber":22,"author":{"gitId":"wangtao0717"},"content":"    public String getStatusIcon() {"},{"lineNumber":23,"author":{"gitId":"wangtao0717"},"content":"        return (isDone ? \"[\\u2713]\" : \"[\\u2718]\");"},{"lineNumber":24,"author":{"gitId":"wangtao0717"},"content":"    }"},{"lineNumber":25,"author":{"gitId":"wangtao0717"},"content":""},{"lineNumber":26,"author":{"gitId":"wangtao0717"},"content":"    /**"},{"lineNumber":27,"author":{"gitId":"wangtao0717"},"content":"     * get description of task"},{"lineNumber":28,"author":{"gitId":"wangtao0717"},"content":"     *"},{"lineNumber":29,"author":{"gitId":"wangtao0717"},"content":"     * @return description"},{"lineNumber":30,"author":{"gitId":"wangtao0717"},"content":"     */"},{"lineNumber":31,"author":{"gitId":"wangtao0717"},"content":"    public String getDescription() {"},{"lineNumber":32,"author":{"gitId":"wangtao0717"},"content":"        return this.description;"},{"lineNumber":33,"author":{"gitId":"wangtao0717"},"content":"    }"},{"lineNumber":34,"author":{"gitId":"wangtao0717"},"content":""},{"lineNumber":35,"author":{"gitId":"wangtao0717"},"content":"    /**"},{"lineNumber":36,"author":{"gitId":"wangtao0717"},"content":"     * get task information"},{"lineNumber":37,"author":{"gitId":"wangtao0717"},"content":"     *"},{"lineNumber":38,"author":{"gitId":"wangtao0717"},"content":"     * @return a string show information of task"},{"lineNumber":39,"author":{"gitId":"wangtao0717"},"content":"     */"},{"lineNumber":40,"author":{"gitId":"wangtao0717"},"content":"    public String getTaskInfo() {"},{"lineNumber":41,"author":{"gitId":"wangtao0717"},"content":"        return getStatusIcon() + getDescription();"},{"lineNumber":42,"author":{"gitId":"wangtao0717"},"content":"    }"},{"lineNumber":43,"author":{"gitId":"wangtao0717"},"content":""},{"lineNumber":44,"author":{"gitId":"wangtao0717"},"content":"    /**"},{"lineNumber":45,"author":{"gitId":"wangtao0717"},"content":"     * get period from now to starting time"},{"lineNumber":46,"author":{"gitId":"wangtao0717"},"content":"     *"},{"lineNumber":47,"author":{"gitId":"wangtao0717"},"content":"     * @return the number of period"},{"lineNumber":48,"author":{"gitId":"wangtao0717"},"content":"     */"},{"lineNumber":49,"author":{"gitId":"wangtao0717"},"content":"    public String getTaskInfoOfFile() {"},{"lineNumber":50,"author":{"gitId":"wangtao0717"},"content":"        return getStatusIcon() + getDescription();"},{"lineNumber":51,"author":{"gitId":"wangtao0717"},"content":"    }"},{"lineNumber":52,"author":{"gitId":"wangtao0717"},"content":""},{"lineNumber":53,"author":{"gitId":"wangtao0717"},"content":"    /**"},{"lineNumber":54,"author":{"gitId":"wangtao0717"},"content":"     * mark task as done"},{"lineNumber":55,"author":{"gitId":"wangtao0717"},"content":"     */"},{"lineNumber":56,"author":{"gitId":"wangtao0717"},"content":"    public void markAsDone() {"},{"lineNumber":57,"author":{"gitId":"wangtao0717"},"content":"        this.isDone \u003d true;"},{"lineNumber":58,"author":{"gitId":"wangtao0717"},"content":"    }"},{"lineNumber":59,"author":{"gitId":"wangtao0717"},"content":""},{"lineNumber":60,"author":{"gitId":"wangtao0717"},"content":"    /**"},{"lineNumber":61,"author":{"gitId":"wangtao0717"},"content":"     * get period from now to the setting time"},{"lineNumber":62,"author":{"gitId":"wangtao0717"},"content":"     *"},{"lineNumber":63,"author":{"gitId":"wangtao0717"},"content":"     * @return spac, wait for overriding"},{"lineNumber":64,"author":{"gitId":"wangtao0717"},"content":"     */"},{"lineNumber":65,"author":{"gitId":"wangtao0717"},"content":"    public String getPeriodDays() {"},{"lineNumber":66,"author":{"gitId":"wangtao0717"},"content":"        return \"\";"},{"lineNumber":67,"author":{"gitId":"wangtao0717"},"content":"    }"},{"lineNumber":68,"author":{"gitId":"wangtao0717"},"content":""},{"lineNumber":69,"author":{"gitId":"wangtao0717"},"content":"}"}],"authorContributionMap":{"wangtao0717":69}},{"path":"src/main/java/duck/task/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"wangtao0717"},"content":"package duck.task;"},{"lineNumber":2,"author":{"gitId":"wangtao0717"},"content":""},{"lineNumber":3,"author":{"gitId":"wangtao0717"},"content":"import java.util.ArrayList;"},{"lineNumber":4,"author":{"gitId":"wangtao0717"},"content":"import java.util.Arrays;"},{"lineNumber":5,"author":{"gitId":"wangtao0717"},"content":""},{"lineNumber":6,"author":{"gitId":"wangtao0717"},"content":"public class TaskList {"},{"lineNumber":7,"author":{"gitId":"wangtao0717"},"content":"    private ArrayList\u003cTask\u003e taskList \u003d new ArrayList\u003cTask\u003e();"},{"lineNumber":8,"author":{"gitId":"wangtao0717"},"content":""},{"lineNumber":9,"author":{"gitId":"wangtao0717"},"content":"    /**"},{"lineNumber":10,"author":{"gitId":"wangtao0717"},"content":"     * initialize  the Task list object"},{"lineNumber":11,"author":{"gitId":"wangtao0717"},"content":"     *"},{"lineNumber":12,"author":{"gitId":"wangtao0717"},"content":"     * @param dataArray use data to form task list"},{"lineNumber":13,"author":{"gitId":"wangtao0717"},"content":"     */"},{"lineNumber":14,"author":{"gitId":"wangtao0717"},"content":"    public TaskList(String[] dataArray) {"},{"lineNumber":15,"author":{"gitId":"wangtao0717"},"content":"        for (int i \u003d 0; dataArray[i] !\u003d null; i++) {"},{"lineNumber":16,"author":{"gitId":"wangtao0717"},"content":"            String data \u003d dataArray[i];"},{"lineNumber":17,"author":{"gitId":"wangtao0717"},"content":"            String[] dataSplit \u003d data.split(\"\\\\|\");"},{"lineNumber":18,"author":{"gitId":"wangtao0717"},"content":"            switch (dataSplit[0].trim()) {"},{"lineNumber":19,"author":{"gitId":"wangtao0717"},"content":"            case \"T\":"},{"lineNumber":20,"author":{"gitId":"wangtao0717"},"content":"                taskList.add(new Todo(dataSplit[2].trim()));"},{"lineNumber":21,"author":{"gitId":"wangtao0717"},"content":"                break;"},{"lineNumber":22,"author":{"gitId":"wangtao0717"},"content":"            case \"D\":"},{"lineNumber":23,"author":{"gitId":"wangtao0717"},"content":"                taskList.add(new Deadline(dataSplit[2].trim(), dataSplit[3].trim()));"},{"lineNumber":24,"author":{"gitId":"wangtao0717"},"content":"                break;"},{"lineNumber":25,"author":{"gitId":"wangtao0717"},"content":"            case \"E\":"},{"lineNumber":26,"author":{"gitId":"wangtao0717"},"content":"                taskList.add(new Event(dataSplit[2].trim(), dataSplit[3].trim()));"},{"lineNumber":27,"author":{"gitId":"wangtao0717"},"content":"                break;"},{"lineNumber":28,"author":{"gitId":"wangtao0717"},"content":"            default:"},{"lineNumber":29,"author":{"gitId":"wangtao0717"},"content":"                break;"},{"lineNumber":30,"author":{"gitId":"wangtao0717"},"content":"            }"},{"lineNumber":31,"author":{"gitId":"wangtao0717"},"content":"            if (dataSplit[1].trim().equals(\"1\")) {"},{"lineNumber":32,"author":{"gitId":"wangtao0717"},"content":"                taskList.get(taskList.size() - 1).markAsDone();"},{"lineNumber":33,"author":{"gitId":"wangtao0717"},"content":"            }"},{"lineNumber":34,"author":{"gitId":"wangtao0717"},"content":"        }"},{"lineNumber":35,"author":{"gitId":"wangtao0717"},"content":"    }"},{"lineNumber":36,"author":{"gitId":"wangtao0717"},"content":""},{"lineNumber":37,"author":{"gitId":"wangtao0717"},"content":"    /**"},{"lineNumber":38,"author":{"gitId":"wangtao0717"},"content":"     * get size of task list"},{"lineNumber":39,"author":{"gitId":"wangtao0717"},"content":"     *"},{"lineNumber":40,"author":{"gitId":"wangtao0717"},"content":"     * @return number of tasks"},{"lineNumber":41,"author":{"gitId":"wangtao0717"},"content":"     */"},{"lineNumber":42,"author":{"gitId":"wangtao0717"},"content":"    public int getSizeOfTasks() {"},{"lineNumber":43,"author":{"gitId":"wangtao0717"},"content":"        return taskList.size();"},{"lineNumber":44,"author":{"gitId":"wangtao0717"},"content":"    }"},{"lineNumber":45,"author":{"gitId":"wangtao0717"},"content":""},{"lineNumber":46,"author":{"gitId":"wangtao0717"},"content":"    /**"},{"lineNumber":47,"author":{"gitId":"wangtao0717"},"content":"     * get a task from task list"},{"lineNumber":48,"author":{"gitId":"wangtao0717"},"content":"     *"},{"lineNumber":49,"author":{"gitId":"wangtao0717"},"content":"     * @param number the number of task"},{"lineNumber":50,"author":{"gitId":"wangtao0717"},"content":"     * @return task"},{"lineNumber":51,"author":{"gitId":"wangtao0717"},"content":"     */"},{"lineNumber":52,"author":{"gitId":"wangtao0717"},"content":"    public Task getTask(Integer number) {"},{"lineNumber":53,"author":{"gitId":"wangtao0717"},"content":"        return taskList.get(number);"},{"lineNumber":54,"author":{"gitId":"wangtao0717"},"content":"    }"},{"lineNumber":55,"author":{"gitId":"wangtao0717"},"content":""},{"lineNumber":56,"author":{"gitId":"wangtao0717"},"content":"    /**"},{"lineNumber":57,"author":{"gitId":"wangtao0717"},"content":"     * remove task from task list"},{"lineNumber":58,"author":{"gitId":"wangtao0717"},"content":"     *"},{"lineNumber":59,"author":{"gitId":"wangtao0717"},"content":"     * @param number the number of the choosing task"},{"lineNumber":60,"author":{"gitId":"wangtao0717"},"content":"     */"},{"lineNumber":61,"author":{"gitId":"wangtao0717"},"content":"    public void removeTask(Integer number) {"},{"lineNumber":62,"author":{"gitId":"wangtao0717"},"content":"        taskList.remove(taskList.get(number));"},{"lineNumber":63,"author":{"gitId":"wangtao0717"},"content":"    }"},{"lineNumber":64,"author":{"gitId":"wangtao0717"},"content":""},{"lineNumber":65,"author":{"gitId":"wangtao0717"},"content":"    /**"},{"lineNumber":66,"author":{"gitId":"wangtao0717"},"content":"     * add a new task to task list"},{"lineNumber":67,"author":{"gitId":"wangtao0717"},"content":"     *"},{"lineNumber":68,"author":{"gitId":"wangtao0717"},"content":"     * @param task"},{"lineNumber":69,"author":{"gitId":"wangtao0717"},"content":"     */"},{"lineNumber":70,"author":{"gitId":"wangtao0717"},"content":"    public void addTask(Task task) {"},{"lineNumber":71,"author":{"gitId":"wangtao0717"},"content":"        taskList.add(task);"},{"lineNumber":72,"author":{"gitId":"wangtao0717"},"content":"    }"},{"lineNumber":73,"author":{"gitId":"wangtao0717"},"content":""},{"lineNumber":74,"author":{"gitId":"wangtao0717"},"content":"    /**"},{"lineNumber":75,"author":{"gitId":"wangtao0717"},"content":"     * Using keyword to find task from task list"},{"lineNumber":76,"author":{"gitId":"wangtao0717"},"content":"     *"},{"lineNumber":77,"author":{"gitId":"wangtao0717"},"content":"     * @param description the keyword"},{"lineNumber":78,"author":{"gitId":"wangtao0717"},"content":"     * @return a string array includes the found task"},{"lineNumber":79,"author":{"gitId":"wangtao0717"},"content":"     */"},{"lineNumber":80,"author":{"gitId":"wangtao0717"},"content":"    public String[] findTask(String description) {"},{"lineNumber":81,"author":{"gitId":"wangtao0717"},"content":"        int numberOfFinding \u003d 0;"},{"lineNumber":82,"author":{"gitId":"wangtao0717"},"content":"        String[] findTask \u003d new String[100];"},{"lineNumber":83,"author":{"gitId":"wangtao0717"},"content":"        for (int i \u003d 0; i \u003c this.getSizeOfTasks(); i++) {"},{"lineNumber":84,"author":{"gitId":"wangtao0717"},"content":"            if (this.getTask(i).description.toLowerCase().contains(description.toLowerCase())) {"},{"lineNumber":85,"author":{"gitId":"wangtao0717"},"content":"                findTask[numberOfFinding] \u003d i + 1 + \".\" + this.getTask(i).getTaskInfo();"},{"lineNumber":86,"author":{"gitId":"wangtao0717"},"content":"                numberOfFinding++;"},{"lineNumber":87,"author":{"gitId":"wangtao0717"},"content":"            }"},{"lineNumber":88,"author":{"gitId":"wangtao0717"},"content":"        }"},{"lineNumber":89,"author":{"gitId":"wangtao0717"},"content":"        assert (numberOfFinding \u003c 100);"},{"lineNumber":90,"author":{"gitId":"wangtao0717"},"content":"        return findTask;"},{"lineNumber":91,"author":{"gitId":"wangtao0717"},"content":"    }"},{"lineNumber":92,"author":{"gitId":"wangtao0717"},"content":""},{"lineNumber":93,"author":{"gitId":"wangtao0717"},"content":"    /**"},{"lineNumber":94,"author":{"gitId":"wangtao0717"},"content":"     * create a schedule of all tasks"},{"lineNumber":95,"author":{"gitId":"wangtao0717"},"content":"     *"},{"lineNumber":96,"author":{"gitId":"wangtao0717"},"content":"     * @return"},{"lineNumber":97,"author":{"gitId":"wangtao0717"},"content":"     */"},{"lineNumber":98,"author":{"gitId":"wangtao0717"},"content":"    public ArrayList\u003cArrayList\u003cString\u003e\u003e scheduleTask() {"},{"lineNumber":99,"author":{"gitId":"wangtao0717"},"content":"        ArrayList\u003cArrayList\u003cString\u003e\u003e schedule \u003d new ArrayList\u003cArrayList\u003cString\u003e\u003e();"},{"lineNumber":100,"author":{"gitId":"wangtao0717"},"content":"        schedule.add(new ArrayList\u003cString\u003e(Arrays.asList(\"Todo\")));"},{"lineNumber":101,"author":{"gitId":"wangtao0717"},"content":"        for (int i \u003d 0; i \u003c this.getSizeOfTasks(); i++) {"},{"lineNumber":102,"author":{"gitId":"wangtao0717"},"content":"            if (this.getTask(i) instanceof Todo) {"},{"lineNumber":103,"author":{"gitId":"wangtao0717"},"content":"                schedule.get(0).add(this.getTask(i).getTaskInfo());"},{"lineNumber":104,"author":{"gitId":"wangtao0717"},"content":"            }"},{"lineNumber":105,"author":{"gitId":"wangtao0717"},"content":""},{"lineNumber":106,"author":{"gitId":"wangtao0717"},"content":"            if (this.getTask(i) instanceof TaskWithDate) {"},{"lineNumber":107,"author":{"gitId":"wangtao0717"},"content":"                TaskWithDate taskWithDate \u003d (TaskWithDate) this.getTask(i);"},{"lineNumber":108,"author":{"gitId":"wangtao0717"},"content":"                String taskDate \u003d taskWithDate.getDate();"},{"lineNumber":109,"author":{"gitId":"wangtao0717"},"content":"                Boolean isRecorded \u003d false;"},{"lineNumber":110,"author":{"gitId":"wangtao0717"},"content":"                for (int j \u003d 1; j \u003c schedule.size(); j++) {"},{"lineNumber":111,"author":{"gitId":"wangtao0717"},"content":"                    if (taskDate.equals(schedule.get(j).get(0))) {"},{"lineNumber":112,"author":{"gitId":"wangtao0717"},"content":"                        schedule.get(j).add(taskWithDate.getTaskInfo());"},{"lineNumber":113,"author":{"gitId":"wangtao0717"},"content":"                        isRecorded \u003d true;"},{"lineNumber":114,"author":{"gitId":"wangtao0717"},"content":"                        break;"},{"lineNumber":115,"author":{"gitId":"wangtao0717"},"content":"                    }"},{"lineNumber":116,"author":{"gitId":"wangtao0717"},"content":"                }"},{"lineNumber":117,"author":{"gitId":"wangtao0717"},"content":"                if (!isRecorded) {"},{"lineNumber":118,"author":{"gitId":"wangtao0717"},"content":"                    schedule.add(new ArrayList\u003c\u003e("},{"lineNumber":119,"author":{"gitId":"wangtao0717"},"content":"                            Arrays.asList(taskDate, taskWithDate.getTaskInfo())));"},{"lineNumber":120,"author":{"gitId":"wangtao0717"},"content":"                }"},{"lineNumber":121,"author":{"gitId":"wangtao0717"},"content":"            }"},{"lineNumber":122,"author":{"gitId":"wangtao0717"},"content":"        }"},{"lineNumber":123,"author":{"gitId":"wangtao0717"},"content":"        return schedule;"},{"lineNumber":124,"author":{"gitId":"wangtao0717"},"content":"    }"},{"lineNumber":125,"author":{"gitId":"wangtao0717"},"content":""},{"lineNumber":126,"author":{"gitId":"wangtao0717"},"content":"}"}],"authorContributionMap":{"wangtao0717":126}},{"path":"src/main/java/duck/task/TaskWithDate.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"wangtao0717"},"content":"package duck.task;"},{"lineNumber":2,"author":{"gitId":"wangtao0717"},"content":""},{"lineNumber":3,"author":{"gitId":"wangtao0717"},"content":"import java.time.LocalDate;"},{"lineNumber":4,"author":{"gitId":"wangtao0717"},"content":"import java.time.format.DateTimeFormatter;"},{"lineNumber":5,"author":{"gitId":"wangtao0717"},"content":""},{"lineNumber":6,"author":{"gitId":"wangtao0717"},"content":"public class TaskWithDate extends Task {"},{"lineNumber":7,"author":{"gitId":"wangtao0717"},"content":"    protected LocalDate date;"},{"lineNumber":8,"author":{"gitId":"wangtao0717"},"content":""},{"lineNumber":9,"author":{"gitId":"wangtao0717"},"content":"    /**"},{"lineNumber":10,"author":{"gitId":"wangtao0717"},"content":"     * initialize Deadline object"},{"lineNumber":11,"author":{"gitId":"wangtao0717"},"content":"     *"},{"lineNumber":12,"author":{"gitId":"wangtao0717"},"content":"     * @param description the description of task"},{"lineNumber":13,"author":{"gitId":"wangtao0717"},"content":"     * @param date        the date of task (YYYY-MM-DD)"},{"lineNumber":14,"author":{"gitId":"wangtao0717"},"content":"     */"},{"lineNumber":15,"author":{"gitId":"wangtao0717"},"content":"    public TaskWithDate(String description, String date) {"},{"lineNumber":16,"author":{"gitId":"wangtao0717"},"content":"        super(description);"},{"lineNumber":17,"author":{"gitId":"wangtao0717"},"content":"        this.date \u003d LocalDate.parse(date);"},{"lineNumber":18,"author":{"gitId":"wangtao0717"},"content":"        ;"},{"lineNumber":19,"author":{"gitId":"wangtao0717"},"content":"    }"},{"lineNumber":20,"author":{"gitId":"wangtao0717"},"content":""},{"lineNumber":21,"author":{"gitId":"wangtao0717"},"content":"    /**"},{"lineNumber":22,"author":{"gitId":"wangtao0717"},"content":"     * get task date"},{"lineNumber":23,"author":{"gitId":"wangtao0717"},"content":"     *"},{"lineNumber":24,"author":{"gitId":"wangtao0717"},"content":"     * @return date string"},{"lineNumber":25,"author":{"gitId":"wangtao0717"},"content":"     */"},{"lineNumber":26,"author":{"gitId":"wangtao0717"},"content":"    public String getDate() {"},{"lineNumber":27,"author":{"gitId":"wangtao0717"},"content":"        DateTimeFormatter fmt \u003d DateTimeFormatter.ofPattern(\"yyyy-MM-dd\");"},{"lineNumber":28,"author":{"gitId":"wangtao0717"},"content":"        return this.date.format(fmt);"},{"lineNumber":29,"author":{"gitId":"wangtao0717"},"content":"    }"},{"lineNumber":30,"author":{"gitId":"wangtao0717"},"content":"}"}],"authorContributionMap":{"wangtao0717":30}},{"path":"src/main/java/duck/task/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"wangtao0717"},"content":"package duck.task;"},{"lineNumber":2,"author":{"gitId":"wangtao0717"},"content":""},{"lineNumber":3,"author":{"gitId":"wangtao0717"},"content":"public class Todo extends Task {"},{"lineNumber":4,"author":{"gitId":"wangtao0717"},"content":""},{"lineNumber":5,"author":{"gitId":"wangtao0717"},"content":"    /**"},{"lineNumber":6,"author":{"gitId":"wangtao0717"},"content":"     * initialize Todo object"},{"lineNumber":7,"author":{"gitId":"wangtao0717"},"content":"     *"},{"lineNumber":8,"author":{"gitId":"wangtao0717"},"content":"     * @param description the description of task"},{"lineNumber":9,"author":{"gitId":"wangtao0717"},"content":"     */"},{"lineNumber":10,"author":{"gitId":"wangtao0717"},"content":"    public Todo(String description) {"},{"lineNumber":11,"author":{"gitId":"wangtao0717"},"content":"        super(description);"},{"lineNumber":12,"author":{"gitId":"wangtao0717"},"content":"    }"},{"lineNumber":13,"author":{"gitId":"wangtao0717"},"content":""},{"lineNumber":14,"author":{"gitId":"wangtao0717"},"content":"    /**"},{"lineNumber":15,"author":{"gitId":"wangtao0717"},"content":"     * get task information"},{"lineNumber":16,"author":{"gitId":"wangtao0717"},"content":"     *"},{"lineNumber":17,"author":{"gitId":"wangtao0717"},"content":"     * @return a string show information of task"},{"lineNumber":18,"author":{"gitId":"wangtao0717"},"content":"     */"},{"lineNumber":19,"author":{"gitId":"wangtao0717"},"content":"    @Override"},{"lineNumber":20,"author":{"gitId":"wangtao0717"},"content":"    public String getTaskInfo() {"},{"lineNumber":21,"author":{"gitId":"wangtao0717"},"content":"        return \"[T]\" + super.getTaskInfo();"},{"lineNumber":22,"author":{"gitId":"wangtao0717"},"content":"    }"},{"lineNumber":23,"author":{"gitId":"wangtao0717"},"content":""},{"lineNumber":24,"author":{"gitId":"wangtao0717"},"content":"    /**"},{"lineNumber":25,"author":{"gitId":"wangtao0717"},"content":"     * get the task information showing in the file"},{"lineNumber":26,"author":{"gitId":"wangtao0717"},"content":"     *"},{"lineNumber":27,"author":{"gitId":"wangtao0717"},"content":"     * @return a string of task information which is shown in the datafile"},{"lineNumber":28,"author":{"gitId":"wangtao0717"},"content":"     */"},{"lineNumber":29,"author":{"gitId":"wangtao0717"},"content":"    @Override"},{"lineNumber":30,"author":{"gitId":"wangtao0717"},"content":"    public String getTaskInfoOfFile() {"},{"lineNumber":31,"author":{"gitId":"wangtao0717"},"content":"        return \"T | \" + (super.isDone ? \"1\" : \"0\") + \" | \" + super.getDescription();"},{"lineNumber":32,"author":{"gitId":"wangtao0717"},"content":"    }"},{"lineNumber":33,"author":{"gitId":"wangtao0717"},"content":""},{"lineNumber":34,"author":{"gitId":"wangtao0717"},"content":"    /**"},{"lineNumber":35,"author":{"gitId":"wangtao0717"},"content":"     * get period from now to starting time"},{"lineNumber":36,"author":{"gitId":"wangtao0717"},"content":"     *"},{"lineNumber":37,"author":{"gitId":"wangtao0717"},"content":"     * @return the string because Todo task doesn\u0027t have time"},{"lineNumber":38,"author":{"gitId":"wangtao0717"},"content":"     */"},{"lineNumber":39,"author":{"gitId":"wangtao0717"},"content":"    @Override"},{"lineNumber":40,"author":{"gitId":"wangtao0717"},"content":"    public String getPeriodDays() {"},{"lineNumber":41,"author":{"gitId":"wangtao0717"},"content":"        return \"this task hasn\u0027t determine the time\";"},{"lineNumber":42,"author":{"gitId":"wangtao0717"},"content":""},{"lineNumber":43,"author":{"gitId":"wangtao0717"},"content":"    }"},{"lineNumber":44,"author":{"gitId":"wangtao0717"},"content":"}"}],"authorContributionMap":{"wangtao0717":44}},{"path":"src/test/java/DeadlineTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"wangtao0717"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;"},{"lineNumber":2,"author":{"gitId":"wangtao0717"},"content":""},{"lineNumber":3,"author":{"gitId":"wangtao0717"},"content":"import org.junit.jupiter.api.Test;"},{"lineNumber":4,"author":{"gitId":"wangtao0717"},"content":""},{"lineNumber":5,"author":{"gitId":"wangtao0717"},"content":"import duck.task.Deadline;"},{"lineNumber":6,"author":{"gitId":"wangtao0717"},"content":""},{"lineNumber":7,"author":{"gitId":"wangtao0717"},"content":"public class DeadlineTest {"},{"lineNumber":8,"author":{"gitId":"wangtao0717"},"content":"    private Deadline deadline \u003d new Deadline(\"return book\", \"2021-12-22\");"},{"lineNumber":9,"author":{"gitId":"wangtao0717"},"content":""},{"lineNumber":10,"author":{"gitId":"wangtao0717"},"content":"    @Test"},{"lineNumber":11,"author":{"gitId":"wangtao0717"},"content":"    public void dummyTest() {"},{"lineNumber":12,"author":{"gitId":"wangtao0717"},"content":"        assertEquals(\"D | 0 | return book | 2021-12-22\", deadline.getTaskInfoOfFile());"},{"lineNumber":13,"author":{"gitId":"wangtao0717"},"content":"        assertEquals(\"[\\u2718]\", deadline.getStatusIcon());"},{"lineNumber":14,"author":{"gitId":"wangtao0717"},"content":"    }"},{"lineNumber":15,"author":{"gitId":"wangtao0717"},"content":"}"},{"lineNumber":16,"author":{"gitId":"wangtao0717"},"content":""},{"lineNumber":17,"author":{"gitId":"wangtao0717"},"content":""},{"lineNumber":18,"author":{"gitId":"wangtao0717"},"content":""}],"authorContributionMap":{"wangtao0717":18}},{"path":"src/test/java/EventTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"wangtao0717"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;"},{"lineNumber":2,"author":{"gitId":"wangtao0717"},"content":""},{"lineNumber":3,"author":{"gitId":"wangtao0717"},"content":"import org.junit.jupiter.api.Test;"},{"lineNumber":4,"author":{"gitId":"wangtao0717"},"content":""},{"lineNumber":5,"author":{"gitId":"wangtao0717"},"content":"import duck.task.Event;"},{"lineNumber":6,"author":{"gitId":"wangtao0717"},"content":""},{"lineNumber":7,"author":{"gitId":"wangtao0717"},"content":"public class EventTest {"},{"lineNumber":8,"author":{"gitId":"wangtao0717"},"content":"    private Event event \u003d new Event(\"return book\", \"2021-12-22\");"},{"lineNumber":9,"author":{"gitId":"wangtao0717"},"content":""},{"lineNumber":10,"author":{"gitId":"wangtao0717"},"content":"    @Test"},{"lineNumber":11,"author":{"gitId":"wangtao0717"},"content":"    public void dummyTest() {"},{"lineNumber":12,"author":{"gitId":"wangtao0717"},"content":"        assertEquals(\"E | 0 | return book | 2021-12-22\", event.getTaskInfoOfFile());"},{"lineNumber":13,"author":{"gitId":"wangtao0717"},"content":"        assertEquals(\"[\\u2718]\", event.getStatusIcon());"},{"lineNumber":14,"author":{"gitId":"wangtao0717"},"content":"    }"},{"lineNumber":15,"author":{"gitId":"wangtao0717"},"content":"}"}],"authorContributionMap":{"wangtao0717":15}},{"path":"src/test/java/TaskTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"wangtao0717"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;"},{"lineNumber":2,"author":{"gitId":"wangtao0717"},"content":""},{"lineNumber":3,"author":{"gitId":"wangtao0717"},"content":"import org.junit.jupiter.api.Test;"},{"lineNumber":4,"author":{"gitId":"wangtao0717"},"content":""},{"lineNumber":5,"author":{"gitId":"wangtao0717"},"content":"import duck.task.Task;"},{"lineNumber":6,"author":{"gitId":"wangtao0717"},"content":""},{"lineNumber":7,"author":{"gitId":"wangtao0717"},"content":"public class TaskTest {"},{"lineNumber":8,"author":{"gitId":"wangtao0717"},"content":"    private Task task \u003d new Task(\"return book\");"},{"lineNumber":9,"author":{"gitId":"wangtao0717"},"content":""},{"lineNumber":10,"author":{"gitId":"wangtao0717"},"content":"    @Test"},{"lineNumber":11,"author":{"gitId":"wangtao0717"},"content":"    public void dummyTest() {"},{"lineNumber":12,"author":{"gitId":"wangtao0717"},"content":"        assertEquals(\"[\\u2718]return book\", task.getTaskInfo());"},{"lineNumber":13,"author":{"gitId":"wangtao0717"},"content":"        assertEquals(\"[\\u2718]\", task.getStatusIcon());"},{"lineNumber":14,"author":{"gitId":"wangtao0717"},"content":"        assertEquals(\"\", task.getPeriodDays());"},{"lineNumber":15,"author":{"gitId":"wangtao0717"},"content":"    }"},{"lineNumber":16,"author":{"gitId":"wangtao0717"},"content":"}"}],"authorContributionMap":{"wangtao0717":16}},{"path":"src/test/java/TodoTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"wangtao0717"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;"},{"lineNumber":2,"author":{"gitId":"wangtao0717"},"content":""},{"lineNumber":3,"author":{"gitId":"wangtao0717"},"content":"import org.junit.jupiter.api.Test;"},{"lineNumber":4,"author":{"gitId":"wangtao0717"},"content":""},{"lineNumber":5,"author":{"gitId":"wangtao0717"},"content":"import duck.task.Todo;"},{"lineNumber":6,"author":{"gitId":"wangtao0717"},"content":""},{"lineNumber":7,"author":{"gitId":"wangtao0717"},"content":"public class TodoTest {"},{"lineNumber":8,"author":{"gitId":"wangtao0717"},"content":"    private Todo todo \u003d new Todo(\"return book\");"},{"lineNumber":9,"author":{"gitId":"wangtao0717"},"content":""},{"lineNumber":10,"author":{"gitId":"wangtao0717"},"content":"    @Test"},{"lineNumber":11,"author":{"gitId":"wangtao0717"},"content":"    public void dummyTest() {"},{"lineNumber":12,"author":{"gitId":"wangtao0717"},"content":"        assertEquals(\"[T][\\u2718]return book\", todo.getTaskInfo());"},{"lineNumber":13,"author":{"gitId":"wangtao0717"},"content":"        assertEquals(\"this task hasn\u0027t determine the time\", todo.getPeriodDays());"},{"lineNumber":14,"author":{"gitId":"wangtao0717"},"content":"        assertEquals(\"T | 0 | return book\", todo.getTaskInfoOfFile());"},{"lineNumber":15,"author":{"gitId":"wangtao0717"},"content":"        assertEquals(\"[\\u2718]\", todo.getStatusIcon());"},{"lineNumber":16,"author":{"gitId":"wangtao0717"},"content":"    }"},{"lineNumber":17,"author":{"gitId":"wangtao0717"},"content":"}"}],"authorContributionMap":{"wangtao0717":17}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"wangtao0717"},"content":"todo borrow book"},{"lineNumber":2,"author":{"gitId":"wangtao0717"},"content":"todo read book"},{"lineNumber":3,"author":{"gitId":"wangtao0717"},"content":"deadline return book /by 2021-02-10"},{"lineNumber":4,"author":{"gitId":"wangtao0717"},"content":"event project meeting /at 2021-05-12"},{"lineNumber":5,"author":{"gitId":"wangtao0717"},"content":"list"},{"lineNumber":6,"author":{"gitId":"wangtao0717"},"content":"done 2"},{"lineNumber":7,"author":{"gitId":"wangtao0717"},"content":"done 4"},{"lineNumber":8,"author":{"gitId":"wangtao0717"},"content":"list"},{"lineNumber":9,"author":{"gitId":"wangtao0717"},"content":"todo"},{"lineNumber":10,"author":{"gitId":"wangtao0717"},"content":"done 7"},{"lineNumber":11,"author":{"gitId":"wangtao0717"},"content":"delete 7"},{"lineNumber":12,"author":{"gitId":"wangtao0717"},"content":"deadline washing"},{"lineNumber":13,"author":{"gitId":"wangtao0717"},"content":"event cleaning"},{"lineNumber":14,"author":{"gitId":"wangtao0717"},"content":"date 2"},{"lineNumber":15,"author":{"gitId":"wangtao0717"},"content":"date 4"},{"lineNumber":16,"author":{"gitId":"wangtao0717"},"content":"bye"}],"authorContributionMap":{"wangtao0717":16}}]
