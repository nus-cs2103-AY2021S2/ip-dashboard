[{"path":"README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"wangtao0717"},"content":"# duck.Duke project template"},{"lineNumber":2,"author":{"gitId":"-"},"content":""},{"lineNumber":3,"author":{"gitId":"-"},"content":"This is a project template for a greenfield Java project. It\u0027s named after the Java mascot _Duke_. Given below are instructions on how to use it."},{"lineNumber":4,"author":{"gitId":"-"},"content":""},{"lineNumber":5,"author":{"gitId":"-"},"content":"## Setting up in Intellij"},{"lineNumber":6,"author":{"gitId":"-"},"content":""},{"lineNumber":7,"author":{"gitId":"-"},"content":"Prerequisites: JDK 11, update Intellij to the most recent version."},{"lineNumber":8,"author":{"gitId":"-"},"content":""},{"lineNumber":9,"author":{"gitId":"-"},"content":"1. Open Intellij (if you are not in the welcome screen, click `File` \u003e `Close Project` to close the existing project first)"},{"lineNumber":10,"author":{"gitId":"-"},"content":"1. Open the project into Intellij as follows:"},{"lineNumber":11,"author":{"gitId":"-"},"content":"   1. Click `Open`."},{"lineNumber":12,"author":{"gitId":"-"},"content":"   1. Select the project directory, and click `OK`."},{"lineNumber":13,"author":{"gitId":"-"},"content":"   1. If there are any further prompts, accept the defaults."},{"lineNumber":14,"author":{"gitId":"-"},"content":"1. Configure the project to use **JDK 11** (not other versions) as explained in [here](https://www.jetbrains.com/help/idea/sdk.html#set-up-jdk)."},{"lineNumber":15,"author":{"gitId":"wangtao0717"},"content":"1. After that, locate the `src/main/java/duck.Duke.java` file, right-click it, and choose `Run duck.Duke.main()`. If the setup is correct, you should see something like the below:"},{"lineNumber":16,"author":{"gitId":"-"},"content":"   ```"},{"lineNumber":17,"author":{"gitId":"-"},"content":"   Hello from"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    ____        _        "},{"lineNumber":19,"author":{"gitId":"-"},"content":"   |  _ \\ _   _| | _____ "},{"lineNumber":20,"author":{"gitId":"-"},"content":"   | | | | | | | |/ / _ \\"},{"lineNumber":21,"author":{"gitId":"-"},"content":"   | |_| | |_| |   \u003c  __/"},{"lineNumber":22,"author":{"gitId":"-"},"content":"   |____/ \\__,_|_|\\_\\___|"},{"lineNumber":23,"author":{"gitId":"-"},"content":"   ```"}],"authorContributionMap":{"wangtao0717":2,"-":21}},{"path":"data/duke.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"wangtao0717"},"content":"T | 0 | adhsjnc"},{"lineNumber":2,"author":{"gitId":"wangtao0717"},"content":"T | 0 | havjds"},{"lineNumber":3,"author":{"gitId":"wangtao0717"},"content":"E | 0 | hjsaknvsdz | 2022-12-01"},{"lineNumber":4,"author":{"gitId":"wangtao0717"},"content":"T | 0 | afjnca"},{"lineNumber":5,"author":{"gitId":"wangtao0717"},"content":"T | 0 | avshdja"}],"authorContributionMap":{"wangtao0717":5}},{"path":"src/main/java/duck/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"wangtao0717"},"content":"package duck;"},{"lineNumber":2,"author":{"gitId":"wangtao0717"},"content":""},{"lineNumber":3,"author":{"gitId":"wangtao0717"},"content":"import duck.operation.Command;"},{"lineNumber":4,"author":{"gitId":"wangtao0717"},"content":"import duck.operation.Parser;"},{"lineNumber":5,"author":{"gitId":"wangtao0717"},"content":"import duck.operation.Storage;"},{"lineNumber":6,"author":{"gitId":"wangtao0717"},"content":"import duck.operation.Ui;"},{"lineNumber":7,"author":{"gitId":"wangtao0717"},"content":"import duck.task.TaskList;"},{"lineNumber":8,"author":{"gitId":"wangtao0717"},"content":""},{"lineNumber":9,"author":{"gitId":"wangtao0717"},"content":"import java.io.*;"},{"lineNumber":10,"author":{"gitId":"wangtao0717"},"content":""},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class Duke {"},{"lineNumber":12,"author":{"gitId":"wangtao0717"},"content":"    private Storage storage;"},{"lineNumber":13,"author":{"gitId":"wangtao0717"},"content":"    private TaskList tasks;"},{"lineNumber":14,"author":{"gitId":"wangtao0717"},"content":"    private Ui ui;"},{"lineNumber":15,"author":{"gitId":"wangtao0717"},"content":""},{"lineNumber":16,"author":{"gitId":"wangtao0717"},"content":"    /**"},{"lineNumber":17,"author":{"gitId":"wangtao0717"},"content":"     * initialize Duck object"},{"lineNumber":18,"author":{"gitId":"wangtao0717"},"content":"     * @param filePath the path of the file containing data of tasks"},{"lineNumber":19,"author":{"gitId":"wangtao0717"},"content":"     * @throws IOException"},{"lineNumber":20,"author":{"gitId":"wangtao0717"},"content":"     */"},{"lineNumber":21,"author":{"gitId":"wangtao0717"},"content":"    public Duke(String filePath) throws IOException {"},{"lineNumber":22,"author":{"gitId":"wangtao0717"},"content":"        storage \u003d new Storage(filePath);"},{"lineNumber":23,"author":{"gitId":"wangtao0717"},"content":"        tasks \u003d new TaskList(storage.load());"},{"lineNumber":24,"author":{"gitId":"wangtao0717"},"content":"        ui \u003d new Ui();"},{"lineNumber":25,"author":{"gitId":"wangtao0717"},"content":"    }"},{"lineNumber":26,"author":{"gitId":"wangtao0717"},"content":""},{"lineNumber":27,"author":{"gitId":"wangtao0717"},"content":"    /**"},{"lineNumber":28,"author":{"gitId":"wangtao0717"},"content":"     * Realize the duck program, record and change the list of tasks"},{"lineNumber":29,"author":{"gitId":"wangtao0717"},"content":"     * @throws IOException"},{"lineNumber":30,"author":{"gitId":"wangtao0717"},"content":"     */"},{"lineNumber":31,"author":{"gitId":"wangtao0717"},"content":"    public void run() throws IOException {"},{"lineNumber":32,"author":{"gitId":"wangtao0717"},"content":"        ui.showWelcome();"},{"lineNumber":33,"author":{"gitId":"wangtao0717"},"content":"        String fullCommand \u003d \"\";"},{"lineNumber":34,"author":{"gitId":"wangtao0717"},"content":"        do {"},{"lineNumber":35,"author":{"gitId":"wangtao0717"},"content":"            fullCommand \u003d ui.readCommand();"},{"lineNumber":36,"author":{"gitId":"wangtao0717"},"content":"            Command c \u003d Parser.parse(fullCommand);"},{"lineNumber":37,"author":{"gitId":"wangtao0717"},"content":"            c.execute(tasks, ui, storage);"},{"lineNumber":38,"author":{"gitId":"wangtao0717"},"content":""},{"lineNumber":39,"author":{"gitId":"wangtao0717"},"content":"        } while (!fullCommand.equals(\"bye\"));"},{"lineNumber":40,"author":{"gitId":"wangtao0717"},"content":"    }"},{"lineNumber":41,"author":{"gitId":"wangtao0717"},"content":""},{"lineNumber":42,"author":{"gitId":"wangtao0717"},"content":"    public static void main(String[] args) throws IOException {"},{"lineNumber":43,"author":{"gitId":"wangtao0717"},"content":"        String filePathOfData \u003d \".\\\\data\\\\duke.txt\";"},{"lineNumber":44,"author":{"gitId":"wangtao0717"},"content":"        new Duke(filePathOfData).run();"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":46,"author":{"gitId":"-"},"content":"}"}],"authorContributionMap":{"wangtao0717":43,"-":3}},{"path":"src/main/java/duck/operation/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"wangtao0717"},"content":"package duck.operation;"},{"lineNumber":2,"author":{"gitId":"wangtao0717"},"content":""},{"lineNumber":3,"author":{"gitId":"wangtao0717"},"content":"import duck.task.Deadline;"},{"lineNumber":4,"author":{"gitId":"wangtao0717"},"content":"import duck.task.Event;"},{"lineNumber":5,"author":{"gitId":"wangtao0717"},"content":"import duck.task.TaskList;"},{"lineNumber":6,"author":{"gitId":"wangtao0717"},"content":"import duck.task.Todo;"},{"lineNumber":7,"author":{"gitId":"wangtao0717"},"content":""},{"lineNumber":8,"author":{"gitId":"wangtao0717"},"content":"import java.io.IOException;"},{"lineNumber":9,"author":{"gitId":"wangtao0717"},"content":"import java.time.format.DateTimeParseException;"},{"lineNumber":10,"author":{"gitId":"wangtao0717"},"content":""},{"lineNumber":11,"author":{"gitId":"wangtao0717"},"content":"public class Command {"},{"lineNumber":12,"author":{"gitId":"wangtao0717"},"content":"    private String command;"},{"lineNumber":13,"author":{"gitId":"wangtao0717"},"content":"    private String description;"},{"lineNumber":14,"author":{"gitId":"wangtao0717"},"content":""},{"lineNumber":15,"author":{"gitId":"wangtao0717"},"content":"    /**"},{"lineNumber":16,"author":{"gitId":"wangtao0717"},"content":"     * Initialize the Command object"},{"lineNumber":17,"author":{"gitId":"wangtao0717"},"content":"     * @param command the command getting from ui."},{"lineNumber":18,"author":{"gitId":"wangtao0717"},"content":"     * @param description the description of command,includes things to do, time and so on."},{"lineNumber":19,"author":{"gitId":"wangtao0717"},"content":"     * @return Lateral location."},{"lineNumber":20,"author":{"gitId":"wangtao0717"},"content":"     */"},{"lineNumber":21,"author":{"gitId":"wangtao0717"},"content":"    public Command(String command, String description) {"},{"lineNumber":22,"author":{"gitId":"wangtao0717"},"content":"        this.command \u003d command;"},{"lineNumber":23,"author":{"gitId":"wangtao0717"},"content":"        this.description \u003d description;"},{"lineNumber":24,"author":{"gitId":"wangtao0717"},"content":"    }"},{"lineNumber":25,"author":{"gitId":"wangtao0717"},"content":""},{"lineNumber":26,"author":{"gitId":"wangtao0717"},"content":"    /**"},{"lineNumber":27,"author":{"gitId":"wangtao0717"},"content":"     * execute the command"},{"lineNumber":28,"author":{"gitId":"wangtao0717"},"content":"     * @param tasks the task list used to  record various tasks"},{"lineNumber":29,"author":{"gitId":"wangtao0717"},"content":"     * @param ui deals with interactions with the user"},{"lineNumber":30,"author":{"gitId":"wangtao0717"},"content":"     * @param storage deals with loading tasks from the file and saving tasks in the file"},{"lineNumber":31,"author":{"gitId":"wangtao0717"},"content":"     * @throws IOException"},{"lineNumber":32,"author":{"gitId":"wangtao0717"},"content":"     */"},{"lineNumber":33,"author":{"gitId":"wangtao0717"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage) throws IOException {"},{"lineNumber":34,"author":{"gitId":"wangtao0717"},"content":"        String[] descriptionSplit;"},{"lineNumber":35,"author":{"gitId":"wangtao0717"},"content":"        switch (command) {"},{"lineNumber":36,"author":{"gitId":"wangtao0717"},"content":"        case \"bye\":"},{"lineNumber":37,"author":{"gitId":"wangtao0717"},"content":"        case \"list\":"},{"lineNumber":38,"author":{"gitId":"wangtao0717"},"content":"        case \"hello\":"},{"lineNumber":39,"author":{"gitId":"wangtao0717"},"content":"            ui.showCommandReply(command, tasks);"},{"lineNumber":40,"author":{"gitId":"wangtao0717"},"content":"            break;"},{"lineNumber":41,"author":{"gitId":"wangtao0717"},"content":"        case \"done\":"},{"lineNumber":42,"author":{"gitId":"wangtao0717"},"content":"            try {"},{"lineNumber":43,"author":{"gitId":"wangtao0717"},"content":"                tasks.getTask(Integer.parseInt(description) - 1).markAsDone();"},{"lineNumber":44,"author":{"gitId":"wangtao0717"},"content":"                ui.showDoneReply(Integer.parseInt(description) - 1, tasks);"},{"lineNumber":45,"author":{"gitId":"wangtao0717"},"content":"                storage.updateFile(tasks);"},{"lineNumber":46,"author":{"gitId":"wangtao0717"},"content":"            } catch (ArrayIndexOutOfBoundsException e) {"},{"lineNumber":47,"author":{"gitId":"wangtao0717"},"content":"                ui.showErrorReply(\"error_done_empty\");"},{"lineNumber":48,"author":{"gitId":"wangtao0717"},"content":"            } catch (NumberFormatException e) {"},{"lineNumber":49,"author":{"gitId":"wangtao0717"},"content":"                ui.showErrorReply(\"error_done_no_meaning\");"},{"lineNumber":50,"author":{"gitId":"wangtao0717"},"content":"            } catch (IndexOutOfBoundsException e) {"},{"lineNumber":51,"author":{"gitId":"wangtao0717"},"content":"                ui.showErrorReply(\"error_done_non_existed_task\");"},{"lineNumber":52,"author":{"gitId":"wangtao0717"},"content":"            } catch (IOException e) {"},{"lineNumber":53,"author":{"gitId":"wangtao0717"},"content":"                e.printStackTrace();"},{"lineNumber":54,"author":{"gitId":"wangtao0717"},"content":"            }"},{"lineNumber":55,"author":{"gitId":"wangtao0717"},"content":"            break;"},{"lineNumber":56,"author":{"gitId":"wangtao0717"},"content":"        case \"delete\":"},{"lineNumber":57,"author":{"gitId":"wangtao0717"},"content":"            try {"},{"lineNumber":58,"author":{"gitId":"wangtao0717"},"content":"                tasks.getTask(Integer.parseInt(description) - 1);"},{"lineNumber":59,"author":{"gitId":"wangtao0717"},"content":"                ui.showDeleteReply(Integer.parseInt(description) - 1, tasks);"},{"lineNumber":60,"author":{"gitId":"wangtao0717"},"content":"                tasks.removeTask(Integer.parseInt(description) - 1);"},{"lineNumber":61,"author":{"gitId":"wangtao0717"},"content":"                storage.updateFile(tasks);"},{"lineNumber":62,"author":{"gitId":"wangtao0717"},"content":"            } catch (ArrayIndexOutOfBoundsException e) {"},{"lineNumber":63,"author":{"gitId":"wangtao0717"},"content":"                ui.showErrorReply(\"error_delete_empty\");"},{"lineNumber":64,"author":{"gitId":"wangtao0717"},"content":"            } catch (NumberFormatException e) {"},{"lineNumber":65,"author":{"gitId":"wangtao0717"},"content":"                ui.showErrorReply(\"error_delete_no_meaning\");"},{"lineNumber":66,"author":{"gitId":"wangtao0717"},"content":"            } catch (NullPointerException e) {"},{"lineNumber":67,"author":{"gitId":"wangtao0717"},"content":"                ui.showErrorReply(\"error_delete_non_existed_task\");"},{"lineNumber":68,"author":{"gitId":"wangtao0717"},"content":"            } catch (IndexOutOfBoundsException e) {"},{"lineNumber":69,"author":{"gitId":"wangtao0717"},"content":"                ui.showErrorReply(\"error_delete_non_existed_task\");"},{"lineNumber":70,"author":{"gitId":"wangtao0717"},"content":"            } catch (IOException e) {"},{"lineNumber":71,"author":{"gitId":"wangtao0717"},"content":"                e.printStackTrace();"},{"lineNumber":72,"author":{"gitId":"wangtao0717"},"content":"            }"},{"lineNumber":73,"author":{"gitId":"wangtao0717"},"content":"            break;"},{"lineNumber":74,"author":{"gitId":"wangtao0717"},"content":"        case \"date\":"},{"lineNumber":75,"author":{"gitId":"wangtao0717"},"content":"            try {"},{"lineNumber":76,"author":{"gitId":"wangtao0717"},"content":"                tasks.getTask(Integer.parseInt(description) - 1);"},{"lineNumber":77,"author":{"gitId":"wangtao0717"},"content":"                ui.showDateReply(Integer.parseInt(description) - 1, tasks);"},{"lineNumber":78,"author":{"gitId":"wangtao0717"},"content":"            } catch (ArrayIndexOutOfBoundsException e) {"},{"lineNumber":79,"author":{"gitId":"wangtao0717"},"content":"                ui.showErrorReply(\"error_date_empty\");"},{"lineNumber":80,"author":{"gitId":"wangtao0717"},"content":"            } catch (NumberFormatException e) {"},{"lineNumber":81,"author":{"gitId":"wangtao0717"},"content":"                ui.showErrorReply(\"error_date_no_meaning\");"},{"lineNumber":82,"author":{"gitId":"wangtao0717"},"content":"            } catch (NullPointerException e) {"},{"lineNumber":83,"author":{"gitId":"wangtao0717"},"content":"                ui.showErrorReply(\"error_date_non_existed_task\");"},{"lineNumber":84,"author":{"gitId":"wangtao0717"},"content":"            } catch (IndexOutOfBoundsException e) {"},{"lineNumber":85,"author":{"gitId":"wangtao0717"},"content":"                ui.showErrorReply(\"error_date_non_existed_task\");"},{"lineNumber":86,"author":{"gitId":"wangtao0717"},"content":"            }"},{"lineNumber":87,"author":{"gitId":"wangtao0717"},"content":"            break;"},{"lineNumber":88,"author":{"gitId":"wangtao0717"},"content":"        case \"todo\":"},{"lineNumber":89,"author":{"gitId":"wangtao0717"},"content":"            try {"},{"lineNumber":90,"author":{"gitId":"wangtao0717"},"content":"                String test \u003d description;"},{"lineNumber":91,"author":{"gitId":"wangtao0717"},"content":"            } catch (ArrayIndexOutOfBoundsException e) {"},{"lineNumber":92,"author":{"gitId":"wangtao0717"},"content":"                ui.showErrorReply(\"error_todo_empty\");"},{"lineNumber":93,"author":{"gitId":"wangtao0717"},"content":"                break;"},{"lineNumber":94,"author":{"gitId":"wangtao0717"},"content":"            }"},{"lineNumber":95,"author":{"gitId":"wangtao0717"},"content":"            tasks.addTask(new Todo(description));"},{"lineNumber":96,"author":{"gitId":"wangtao0717"},"content":"            storage.updateFile(tasks);"},{"lineNumber":97,"author":{"gitId":"wangtao0717"},"content":"            ui.showCommandReply(description, tasks);"},{"lineNumber":98,"author":{"gitId":"wangtao0717"},"content":"            break;"},{"lineNumber":99,"author":{"gitId":"wangtao0717"},"content":"        case \"deadline\":"},{"lineNumber":100,"author":{"gitId":"wangtao0717"},"content":"            try {"},{"lineNumber":101,"author":{"gitId":"wangtao0717"},"content":"                String test \u003d description;"},{"lineNumber":102,"author":{"gitId":"wangtao0717"},"content":"            } catch (ArrayIndexOutOfBoundsException e) {"},{"lineNumber":103,"author":{"gitId":"wangtao0717"},"content":"                ui.showErrorReply(\"error_deadline_empty\");"},{"lineNumber":104,"author":{"gitId":"wangtao0717"},"content":"                break;"},{"lineNumber":105,"author":{"gitId":"wangtao0717"},"content":"            }"},{"lineNumber":106,"author":{"gitId":"wangtao0717"},"content":"            descriptionSplit \u003d description.split(\"/by\");"},{"lineNumber":107,"author":{"gitId":"wangtao0717"},"content":"            try {"},{"lineNumber":108,"author":{"gitId":"wangtao0717"},"content":"                tasks.addTask(new Deadline(descriptionSplit[0].trim(), descriptionSplit[1].trim()));"},{"lineNumber":109,"author":{"gitId":"wangtao0717"},"content":"                storage.updateFile(tasks);"},{"lineNumber":110,"author":{"gitId":"wangtao0717"},"content":"                ui.showCommandReply(command, tasks);"},{"lineNumber":111,"author":{"gitId":"wangtao0717"},"content":"            } catch (ArrayIndexOutOfBoundsException e) {"},{"lineNumber":112,"author":{"gitId":"wangtao0717"},"content":"                ui.showErrorReply(\"error_deadline_by\");"},{"lineNumber":113,"author":{"gitId":"wangtao0717"},"content":"            } catch (DateTimeParseException e) {"},{"lineNumber":114,"author":{"gitId":"wangtao0717"},"content":"                ui.showErrorReply(\"error_deadline_by\");"},{"lineNumber":115,"author":{"gitId":"wangtao0717"},"content":"            }"},{"lineNumber":116,"author":{"gitId":"wangtao0717"},"content":"            break;"},{"lineNumber":117,"author":{"gitId":"wangtao0717"},"content":"        case \"event\":"},{"lineNumber":118,"author":{"gitId":"wangtao0717"},"content":"            try {"},{"lineNumber":119,"author":{"gitId":"wangtao0717"},"content":"                String test \u003d description;"},{"lineNumber":120,"author":{"gitId":"wangtao0717"},"content":"            } catch (ArrayIndexOutOfBoundsException e) {"},{"lineNumber":121,"author":{"gitId":"wangtao0717"},"content":"                ui.showErrorReply(\"error_event_empty\");"},{"lineNumber":122,"author":{"gitId":"wangtao0717"},"content":"                break;"},{"lineNumber":123,"author":{"gitId":"wangtao0717"},"content":"            }"},{"lineNumber":124,"author":{"gitId":"wangtao0717"},"content":"            descriptionSplit \u003d description.split(\"/at\");"},{"lineNumber":125,"author":{"gitId":"wangtao0717"},"content":"            try {"},{"lineNumber":126,"author":{"gitId":"wangtao0717"},"content":"                tasks.addTask(new Event(descriptionSplit[0].trim(), descriptionSplit[1].trim()));"},{"lineNumber":127,"author":{"gitId":"wangtao0717"},"content":"                storage.updateFile(tasks);"},{"lineNumber":128,"author":{"gitId":"wangtao0717"},"content":"                ui.showCommandReply(command, tasks);"},{"lineNumber":129,"author":{"gitId":"wangtao0717"},"content":"            } catch (ArrayIndexOutOfBoundsException e) {"},{"lineNumber":130,"author":{"gitId":"wangtao0717"},"content":"                ui.showErrorReply(\"error_event_at\");"},{"lineNumber":131,"author":{"gitId":"wangtao0717"},"content":"            } catch (DateTimeParseException e) {"},{"lineNumber":132,"author":{"gitId":"wangtao0717"},"content":"                ui.showErrorReply(\"error_event_at\");"},{"lineNumber":133,"author":{"gitId":"wangtao0717"},"content":"            }"},{"lineNumber":134,"author":{"gitId":"wangtao0717"},"content":"            break;"},{"lineNumber":135,"author":{"gitId":"wangtao0717"},"content":"        case \"find\":"},{"lineNumber":136,"author":{"gitId":"wangtao0717"},"content":"            try {"},{"lineNumber":137,"author":{"gitId":"wangtao0717"},"content":"                String[] result \u003d tasks.findTask(description);"},{"lineNumber":138,"author":{"gitId":"wangtao0717"},"content":"                ui.showFindReply(result);"},{"lineNumber":139,"author":{"gitId":"wangtao0717"},"content":"            } catch (NullPointerException e) {"},{"lineNumber":140,"author":{"gitId":"wangtao0717"},"content":"                ui.showErrorReply(\"find_empty\");"},{"lineNumber":141,"author":{"gitId":"wangtao0717"},"content":"            }"},{"lineNumber":142,"author":{"gitId":"wangtao0717"},"content":"            break;"},{"lineNumber":143,"author":{"gitId":"wangtao0717"},"content":"        default:"},{"lineNumber":144,"author":{"gitId":"wangtao0717"},"content":"            ui.showErrorReply(\"error_no_meaning\");"},{"lineNumber":145,"author":{"gitId":"wangtao0717"},"content":"        }"},{"lineNumber":146,"author":{"gitId":"wangtao0717"},"content":"    }"},{"lineNumber":147,"author":{"gitId":"wangtao0717"},"content":""},{"lineNumber":148,"author":{"gitId":"wangtao0717"},"content":"}"}],"authorContributionMap":{"wangtao0717":148}},{"path":"src/main/java/duck/operation/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"wangtao0717"},"content":"package duck.operation;"},{"lineNumber":2,"author":{"gitId":"wangtao0717"},"content":""},{"lineNumber":3,"author":{"gitId":"wangtao0717"},"content":"public class Parser {"},{"lineNumber":4,"author":{"gitId":"wangtao0717"},"content":"    /**"},{"lineNumber":5,"author":{"gitId":"wangtao0717"},"content":"     * Recognize the full command and divide it into command and descriptions"},{"lineNumber":6,"author":{"gitId":"wangtao0717"},"content":"     * @param fullCommand"},{"lineNumber":7,"author":{"gitId":"wangtao0717"},"content":"     * @return Command class"},{"lineNumber":8,"author":{"gitId":"wangtao0717"},"content":"     */"},{"lineNumber":9,"author":{"gitId":"wangtao0717"},"content":"    public static Command parse(String fullCommand) {"},{"lineNumber":10,"author":{"gitId":"wangtao0717"},"content":"        String[] commandSplit \u003d fullCommand.split(\" \");"},{"lineNumber":11,"author":{"gitId":"wangtao0717"},"content":"        String description;"},{"lineNumber":12,"author":{"gitId":"wangtao0717"},"content":"        try {"},{"lineNumber":13,"author":{"gitId":"wangtao0717"},"content":"            description \u003d fullCommand.substring(commandSplit[0].length() + 1, fullCommand.length()).trim();"},{"lineNumber":14,"author":{"gitId":"wangtao0717"},"content":"        } catch (StringIndexOutOfBoundsException e) {"},{"lineNumber":15,"author":{"gitId":"wangtao0717"},"content":"            description \u003d null;"},{"lineNumber":16,"author":{"gitId":"wangtao0717"},"content":"        }"},{"lineNumber":17,"author":{"gitId":"wangtao0717"},"content":"        return new Command(commandSplit[0], description);"},{"lineNumber":18,"author":{"gitId":"wangtao0717"},"content":"    }"},{"lineNumber":19,"author":{"gitId":"wangtao0717"},"content":"}"}],"authorContributionMap":{"wangtao0717":19}},{"path":"src/main/java/duck/operation/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"wangtao0717"},"content":"package duck.operation;"},{"lineNumber":2,"author":{"gitId":"wangtao0717"},"content":""},{"lineNumber":3,"author":{"gitId":"wangtao0717"},"content":"import duck.task.TaskList;"},{"lineNumber":4,"author":{"gitId":"wangtao0717"},"content":""},{"lineNumber":5,"author":{"gitId":"wangtao0717"},"content":"import java.io.*;"},{"lineNumber":6,"author":{"gitId":"wangtao0717"},"content":""},{"lineNumber":7,"author":{"gitId":"wangtao0717"},"content":"public class Storage {"},{"lineNumber":8,"author":{"gitId":"wangtao0717"},"content":"    private File fileOfData;"},{"lineNumber":9,"author":{"gitId":"wangtao0717"},"content":""},{"lineNumber":10,"author":{"gitId":"wangtao0717"},"content":"    /**"},{"lineNumber":11,"author":{"gitId":"wangtao0717"},"content":"     * initialize Storage object, location file"},{"lineNumber":12,"author":{"gitId":"wangtao0717"},"content":"     * if it does not exist, generate a new one"},{"lineNumber":13,"author":{"gitId":"wangtao0717"},"content":"     *"},{"lineNumber":14,"author":{"gitId":"wangtao0717"},"content":"     * @param filePath the path of file"},{"lineNumber":15,"author":{"gitId":"wangtao0717"},"content":"     * @throws IOException"},{"lineNumber":16,"author":{"gitId":"wangtao0717"},"content":"     */"},{"lineNumber":17,"author":{"gitId":"wangtao0717"},"content":"    public Storage(String filePath) throws IOException {"},{"lineNumber":18,"author":{"gitId":"wangtao0717"},"content":"        this.fileOfData \u003d new File(filePath);"},{"lineNumber":19,"author":{"gitId":"wangtao0717"},"content":"        if (!fileOfData.isFile()) {"},{"lineNumber":20,"author":{"gitId":"wangtao0717"},"content":"            fileOfData.createNewFile();"},{"lineNumber":21,"author":{"gitId":"wangtao0717"},"content":"        }"},{"lineNumber":22,"author":{"gitId":"wangtao0717"},"content":"    }"},{"lineNumber":23,"author":{"gitId":"wangtao0717"},"content":""},{"lineNumber":24,"author":{"gitId":"wangtao0717"},"content":"    /**"},{"lineNumber":25,"author":{"gitId":"wangtao0717"},"content":"     * Get the data in the file, and return a list of string"},{"lineNumber":26,"author":{"gitId":"wangtao0717"},"content":"     *"},{"lineNumber":27,"author":{"gitId":"wangtao0717"},"content":"     * @return a list of data"},{"lineNumber":28,"author":{"gitId":"wangtao0717"},"content":"     * @throws IOException"},{"lineNumber":29,"author":{"gitId":"wangtao0717"},"content":"     */"},{"lineNumber":30,"author":{"gitId":"wangtao0717"},"content":"    public String[] load() throws IOException {"},{"lineNumber":31,"author":{"gitId":"wangtao0717"},"content":"        FileInputStream inStream \u003d new FileInputStream(fileOfData);"},{"lineNumber":32,"author":{"gitId":"wangtao0717"},"content":"        InputStreamReader reader \u003d new InputStreamReader(inStream);"},{"lineNumber":33,"author":{"gitId":"wangtao0717"},"content":"        BufferedReader br \u003d new BufferedReader(reader);"},{"lineNumber":34,"author":{"gitId":"wangtao0717"},"content":"        String[] data \u003d new String[1000];"},{"lineNumber":35,"author":{"gitId":"wangtao0717"},"content":"        int lines \u003d 0;"},{"lineNumber":36,"author":{"gitId":"wangtao0717"},"content":"        for (String line \u003d br.readLine(); line !\u003d null; line \u003d br.readLine()) {"},{"lineNumber":37,"author":{"gitId":"wangtao0717"},"content":"            data[lines] \u003d line;"},{"lineNumber":38,"author":{"gitId":"wangtao0717"},"content":"            lines++;"},{"lineNumber":39,"author":{"gitId":"wangtao0717"},"content":"        }"},{"lineNumber":40,"author":{"gitId":"wangtao0717"},"content":"        br.close();"},{"lineNumber":41,"author":{"gitId":"wangtao0717"},"content":"        return data;"},{"lineNumber":42,"author":{"gitId":"wangtao0717"},"content":"    }"},{"lineNumber":43,"author":{"gitId":"wangtao0717"},"content":""},{"lineNumber":44,"author":{"gitId":"wangtao0717"},"content":"    /**"},{"lineNumber":45,"author":{"gitId":"wangtao0717"},"content":"     * update the data of the file when task list changes."},{"lineNumber":46,"author":{"gitId":"wangtao0717"},"content":"     *"},{"lineNumber":47,"author":{"gitId":"wangtao0717"},"content":"     * @param tasks"},{"lineNumber":48,"author":{"gitId":"wangtao0717"},"content":"     * @throws IOException"},{"lineNumber":49,"author":{"gitId":"wangtao0717"},"content":"     */"},{"lineNumber":50,"author":{"gitId":"wangtao0717"},"content":""},{"lineNumber":51,"author":{"gitId":"wangtao0717"},"content":"    public void updateFile(TaskList tasks) throws IOException {"},{"lineNumber":52,"author":{"gitId":"wangtao0717"},"content":"        FileOutputStream outStream \u003d new FileOutputStream(fileOfData);"},{"lineNumber":53,"author":{"gitId":"wangtao0717"},"content":"        OutputStreamWriter writer \u003d new OutputStreamWriter(outStream, \"UTF-8\");"},{"lineNumber":54,"author":{"gitId":"wangtao0717"},"content":"        writer.write(\"\");"},{"lineNumber":55,"author":{"gitId":"wangtao0717"},"content":"        writer.flush();"},{"lineNumber":56,"author":{"gitId":"wangtao0717"},"content":"        for (int i \u003d 0; i \u003c tasks.getSizeOfTasks(); i++) {"},{"lineNumber":57,"author":{"gitId":"wangtao0717"},"content":"            writer.write(tasks.getTask(i).getTaskInfoOfFile() + \"\\n\");"},{"lineNumber":58,"author":{"gitId":"wangtao0717"},"content":"        }"},{"lineNumber":59,"author":{"gitId":"wangtao0717"},"content":"        writer.flush();"},{"lineNumber":60,"author":{"gitId":"wangtao0717"},"content":"    }"},{"lineNumber":61,"author":{"gitId":"wangtao0717"},"content":""},{"lineNumber":62,"author":{"gitId":"wangtao0717"},"content":"}"}],"authorContributionMap":{"wangtao0717":62}},{"path":"src/main/java/duck/operation/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"wangtao0717"},"content":"package duck.operation;"},{"lineNumber":2,"author":{"gitId":"wangtao0717"},"content":""},{"lineNumber":3,"author":{"gitId":"wangtao0717"},"content":"import duck.task.TaskList;"},{"lineNumber":4,"author":{"gitId":"wangtao0717"},"content":""},{"lineNumber":5,"author":{"gitId":"wangtao0717"},"content":"import java.util.Scanner;"},{"lineNumber":6,"author":{"gitId":"wangtao0717"},"content":""},{"lineNumber":7,"author":{"gitId":"wangtao0717"},"content":"public class Ui {"},{"lineNumber":8,"author":{"gitId":"wangtao0717"},"content":"    private static String INDENTATION \u003d \"    \";"},{"lineNumber":9,"author":{"gitId":"wangtao0717"},"content":"    private static String HORIZON \u003d \"------------------------------------------------------\";"},{"lineNumber":10,"author":{"gitId":"wangtao0717"},"content":"    private static String logo \u003d \" ____        _        \\n\""},{"lineNumber":11,"author":{"gitId":"wangtao0717"},"content":"            + \"|  _ \\\\ _   _| | _____ \\n\""},{"lineNumber":12,"author":{"gitId":"wangtao0717"},"content":"            + \"| | | | | | | |/ / _ \\\\\\n\""},{"lineNumber":13,"author":{"gitId":"wangtao0717"},"content":"            + \"| |_| | |_| |   \u003c  __/\\n\""},{"lineNumber":14,"author":{"gitId":"wangtao0717"},"content":"            + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\";"},{"lineNumber":15,"author":{"gitId":"wangtao0717"},"content":""},{"lineNumber":16,"author":{"gitId":"wangtao0717"},"content":"    /**"},{"lineNumber":17,"author":{"gitId":"wangtao0717"},"content":"     * show a welcome logo and ask for command"},{"lineNumber":18,"author":{"gitId":"wangtao0717"},"content":"     */"},{"lineNumber":19,"author":{"gitId":"wangtao0717"},"content":"    public void showWelcome() {"},{"lineNumber":20,"author":{"gitId":"wangtao0717"},"content":"        System.out.println(\"Hello from\\n\" + logo);"},{"lineNumber":21,"author":{"gitId":"wangtao0717"},"content":"        System.out.println(INDENTATION + HORIZON);"},{"lineNumber":22,"author":{"gitId":"wangtao0717"},"content":"        System.out.println(INDENTATION + \"Hello! I\u0027m duck.Duke Y(^_^)Y\");"},{"lineNumber":23,"author":{"gitId":"wangtao0717"},"content":"        System.out.println(INDENTATION + \"What can I do for you?\\n\");"},{"lineNumber":24,"author":{"gitId":"wangtao0717"},"content":"        System.out.println(INDENTATION + HORIZON);"},{"lineNumber":25,"author":{"gitId":"wangtao0717"},"content":"    }"},{"lineNumber":26,"author":{"gitId":"wangtao0717"},"content":""},{"lineNumber":27,"author":{"gitId":"wangtao0717"},"content":"    /**"},{"lineNumber":28,"author":{"gitId":"wangtao0717"},"content":"     * read command from input"},{"lineNumber":29,"author":{"gitId":"wangtao0717"},"content":"     * @return a full command"},{"lineNumber":30,"author":{"gitId":"wangtao0717"},"content":"     */"},{"lineNumber":31,"author":{"gitId":"wangtao0717"},"content":"    public String readCommand() {"},{"lineNumber":32,"author":{"gitId":"wangtao0717"},"content":"        Scanner scanner \u003d new Scanner(System.in);"},{"lineNumber":33,"author":{"gitId":"wangtao0717"},"content":"        return scanner.nextLine().trim();"},{"lineNumber":34,"author":{"gitId":"wangtao0717"},"content":"    }"},{"lineNumber":35,"author":{"gitId":"wangtao0717"},"content":""},{"lineNumber":36,"author":{"gitId":"wangtao0717"},"content":"    /**"},{"lineNumber":37,"author":{"gitId":"wangtao0717"},"content":"     * show the reply for command including hello,bye,list and so on"},{"lineNumber":38,"author":{"gitId":"wangtao0717"},"content":"     * @param command different kind of command"},{"lineNumber":39,"author":{"gitId":"wangtao0717"},"content":"     * @param tasks"},{"lineNumber":40,"author":{"gitId":"wangtao0717"},"content":"     */"},{"lineNumber":41,"author":{"gitId":"wangtao0717"},"content":"    public void showCommandReply(String command, TaskList tasks) {"},{"lineNumber":42,"author":{"gitId":"wangtao0717"},"content":"        System.out.println(INDENTATION + HORIZON);"},{"lineNumber":43,"author":{"gitId":"wangtao0717"},"content":"        switch (command) {"},{"lineNumber":44,"author":{"gitId":"wangtao0717"},"content":"        case \"hello\":"},{"lineNumber":45,"author":{"gitId":"wangtao0717"},"content":"            System.out.println(INDENTATION + \"Hello! I\u0027m duck.Duke Y(^_^)Y\");"},{"lineNumber":46,"author":{"gitId":"wangtao0717"},"content":"            System.out.println(INDENTATION + \"What can I do for you?\\n\");"},{"lineNumber":47,"author":{"gitId":"wangtao0717"},"content":"            break;"},{"lineNumber":48,"author":{"gitId":"wangtao0717"},"content":"        case \"bye\":"},{"lineNumber":49,"author":{"gitId":"wangtao0717"},"content":"            System.out.println(INDENTATION + \"Bye. (\u003e_\u003c) Hope to see you again soon! \");"},{"lineNumber":50,"author":{"gitId":"wangtao0717"},"content":"            break;"},{"lineNumber":51,"author":{"gitId":"wangtao0717"},"content":"        case \"list\":"},{"lineNumber":52,"author":{"gitId":"wangtao0717"},"content":"            System.out.println(INDENTATION + \"Here are the tasks in your list:\");"},{"lineNumber":53,"author":{"gitId":"wangtao0717"},"content":"            for (int i \u003d 0; i \u003c tasks.getSizeOfTasks(); i++) {"},{"lineNumber":54,"author":{"gitId":"wangtao0717"},"content":"                System.out.println(INDENTATION + (i + 1) + \".\" + tasks.getTask(i).getTaskInfo());"},{"lineNumber":55,"author":{"gitId":"wangtao0717"},"content":"            }"},{"lineNumber":56,"author":{"gitId":"wangtao0717"},"content":"            break;"},{"lineNumber":57,"author":{"gitId":"wangtao0717"},"content":""},{"lineNumber":58,"author":{"gitId":"wangtao0717"},"content":"        default:"},{"lineNumber":59,"author":{"gitId":"wangtao0717"},"content":"            System.out.println(INDENTATION + \"Got it. I\u0027ve added this task:\");"},{"lineNumber":60,"author":{"gitId":"wangtao0717"},"content":"            System.out.println(INDENTATION + tasks.getTask(tasks.getSizeOfTasks() - 1).getTaskInfo());"},{"lineNumber":61,"author":{"gitId":"wangtao0717"},"content":"            System.out.println(INDENTATION + \"Now you have \" + tasks.getSizeOfTasks() + \" tasks in the list.\");"},{"lineNumber":62,"author":{"gitId":"wangtao0717"},"content":"        }"},{"lineNumber":63,"author":{"gitId":"wangtao0717"},"content":"        System.out.println(INDENTATION + HORIZON);"},{"lineNumber":64,"author":{"gitId":"wangtao0717"},"content":"    }"},{"lineNumber":65,"author":{"gitId":"wangtao0717"},"content":""},{"lineNumber":66,"author":{"gitId":"wangtao0717"},"content":"    /**"},{"lineNumber":67,"author":{"gitId":"wangtao0717"},"content":"     * show the reply for error"},{"lineNumber":68,"author":{"gitId":"wangtao0717"},"content":"     * @param reply the kind of error"},{"lineNumber":69,"author":{"gitId":"wangtao0717"},"content":"     */"},{"lineNumber":70,"author":{"gitId":"wangtao0717"},"content":"    public void showErrorReply(String reply) {"},{"lineNumber":71,"author":{"gitId":"wangtao0717"},"content":"        System.out.println(INDENTATION + HORIZON);"},{"lineNumber":72,"author":{"gitId":"wangtao0717"},"content":"        switch (reply) {"},{"lineNumber":73,"author":{"gitId":"wangtao0717"},"content":"        case \"error_no_meaning\":"},{"lineNumber":74,"author":{"gitId":"wangtao0717"},"content":"            System.out.println(INDENTATION + \"OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\");"},{"lineNumber":75,"author":{"gitId":"wangtao0717"},"content":"            break;"},{"lineNumber":76,"author":{"gitId":"wangtao0717"},"content":"        case \"error_done_empty\":"},{"lineNumber":77,"author":{"gitId":"wangtao0717"},"content":"        case \"error_delete_empty\":"},{"lineNumber":78,"author":{"gitId":"wangtao0717"},"content":"        case \"error_date_empty\":"},{"lineNumber":79,"author":{"gitId":"wangtao0717"},"content":"            System.out.println(INDENTATION + \"OOPS!!! The number cannot be empty :-(\");"},{"lineNumber":80,"author":{"gitId":"wangtao0717"},"content":"            break;"},{"lineNumber":81,"author":{"gitId":"wangtao0717"},"content":"        case \"error_done_no_meaning\":"},{"lineNumber":82,"author":{"gitId":"wangtao0717"},"content":"        case \"error_delete_no_meaning\":"},{"lineNumber":83,"author":{"gitId":"wangtao0717"},"content":"        case \"error_date_no_meaning\":"},{"lineNumber":84,"author":{"gitId":"wangtao0717"},"content":"            System.out.println(INDENTATION + \"OOPS!!! Please input the number of the duck.task.Task :-(\");"},{"lineNumber":85,"author":{"gitId":"wangtao0717"},"content":"            break;"},{"lineNumber":86,"author":{"gitId":"wangtao0717"},"content":"        case \"error_done_non_existed_task\":"},{"lineNumber":87,"author":{"gitId":"wangtao0717"},"content":"        case \"error_delete_non_existed_task\":"},{"lineNumber":88,"author":{"gitId":"wangtao0717"},"content":"        case \"error_date_non_existed_task\":"},{"lineNumber":89,"author":{"gitId":"wangtao0717"},"content":"            System.out.println(INDENTATION + \"OOPS!!! the duck.task.Task you choosing isn\u0027t existed :-(\");"},{"lineNumber":90,"author":{"gitId":"wangtao0717"},"content":"            break;"},{"lineNumber":91,"author":{"gitId":"wangtao0717"},"content":"        case \"error_todo_empty\":"},{"lineNumber":92,"author":{"gitId":"wangtao0717"},"content":"        case \"error_deadline_empty\":"},{"lineNumber":93,"author":{"gitId":"wangtao0717"},"content":"        case \"error_event_empty\":"},{"lineNumber":94,"author":{"gitId":"wangtao0717"},"content":"            System.out.println(INDENTATION + \"OOPS!!! The description of a task cannot be empty. :-(\");"},{"lineNumber":95,"author":{"gitId":"wangtao0717"},"content":"            break;"},{"lineNumber":96,"author":{"gitId":"wangtao0717"},"content":"        case \"error_deadline_by\":"},{"lineNumber":97,"author":{"gitId":"wangtao0717"},"content":"            System.out.println(INDENTATION + \"OOPS!!! The deadline of a deadline task should be meaningful. :-(\");"},{"lineNumber":98,"author":{"gitId":"wangtao0717"},"content":"            System.out.println(INDENTATION + \"Please enter according to the format eg.description /by YYYY-MM-DD\");"},{"lineNumber":99,"author":{"gitId":"wangtao0717"},"content":"            break;"},{"lineNumber":100,"author":{"gitId":"wangtao0717"},"content":"        case \"error_event_at\":"},{"lineNumber":101,"author":{"gitId":"wangtao0717"},"content":"            System.out.println(INDENTATION + \"OOPS!!! The period of a event task should be meaningful. :-(\");"},{"lineNumber":102,"author":{"gitId":"wangtao0717"},"content":"            System.out.println(INDENTATION + \"Please enter according to the format eg.description /at YYYY-MM-DD\");"},{"lineNumber":103,"author":{"gitId":"wangtao0717"},"content":"            break;"},{"lineNumber":104,"author":{"gitId":"wangtao0717"},"content":"        case \"find_empty\":"},{"lineNumber":105,"author":{"gitId":"wangtao0717"},"content":"            System.out.println(INDENTATION + \"OOPS!!! The enter the keyword of task. :-(\");"},{"lineNumber":106,"author":{"gitId":"wangtao0717"},"content":"        }"},{"lineNumber":107,"author":{"gitId":"wangtao0717"},"content":"        System.out.println(INDENTATION + HORIZON);"},{"lineNumber":108,"author":{"gitId":"wangtao0717"},"content":"    }"},{"lineNumber":109,"author":{"gitId":"wangtao0717"},"content":""},{"lineNumber":110,"author":{"gitId":"wangtao0717"},"content":"    /**"},{"lineNumber":111,"author":{"gitId":"wangtao0717"},"content":"     * show the reply for done command"},{"lineNumber":112,"author":{"gitId":"wangtao0717"},"content":"     * @param number the number of task in task list"},{"lineNumber":113,"author":{"gitId":"wangtao0717"},"content":"     * @param tasks task list"},{"lineNumber":114,"author":{"gitId":"wangtao0717"},"content":"     */"},{"lineNumber":115,"author":{"gitId":"wangtao0717"},"content":"    public void showDoneReply(int number, TaskList tasks) {"},{"lineNumber":116,"author":{"gitId":"wangtao0717"},"content":"        System.out.println(INDENTATION + HORIZON);"},{"lineNumber":117,"author":{"gitId":"wangtao0717"},"content":"        System.out.println(INDENTATION + \"Nice! I\u0027ve marked this task as done:\");"},{"lineNumber":118,"author":{"gitId":"wangtao0717"},"content":"        System.out.println(INDENTATION + (number + 1) + \".\" + tasks.getTask(number).getTaskInfo());"},{"lineNumber":119,"author":{"gitId":"wangtao0717"},"content":"        System.out.println(INDENTATION + HORIZON);"},{"lineNumber":120,"author":{"gitId":"wangtao0717"},"content":"    }"},{"lineNumber":121,"author":{"gitId":"wangtao0717"},"content":""},{"lineNumber":122,"author":{"gitId":"wangtao0717"},"content":"    /**"},{"lineNumber":123,"author":{"gitId":"wangtao0717"},"content":"     * show the reply for delete command"},{"lineNumber":124,"author":{"gitId":"wangtao0717"},"content":"     * @param number the number of task in task list"},{"lineNumber":125,"author":{"gitId":"wangtao0717"},"content":"     * @param tasks task list"},{"lineNumber":126,"author":{"gitId":"wangtao0717"},"content":"     */"},{"lineNumber":127,"author":{"gitId":"wangtao0717"},"content":"    public void showDeleteReply(int number, TaskList tasks) {"},{"lineNumber":128,"author":{"gitId":"wangtao0717"},"content":"        System.out.println(INDENTATION + HORIZON);"},{"lineNumber":129,"author":{"gitId":"wangtao0717"},"content":"        System.out.println(INDENTATION + \"Noted. I\u0027ve removed this task: \");"},{"lineNumber":130,"author":{"gitId":"wangtao0717"},"content":"        System.out.println(INDENTATION + (number + 1) + \".\" + tasks.getTask(number).getTaskInfo());"},{"lineNumber":131,"author":{"gitId":"wangtao0717"},"content":"        System.out.println(INDENTATION + \"Now you have \" + (tasks.getSizeOfTasks() - 1) + \" tasks in the list.\");"},{"lineNumber":132,"author":{"gitId":"wangtao0717"},"content":"        System.out.println(INDENTATION + HORIZON);"},{"lineNumber":133,"author":{"gitId":"wangtao0717"},"content":"    }"},{"lineNumber":134,"author":{"gitId":"wangtao0717"},"content":""},{"lineNumber":135,"author":{"gitId":"wangtao0717"},"content":"    /**"},{"lineNumber":136,"author":{"gitId":"wangtao0717"},"content":"     * show the reply for date command"},{"lineNumber":137,"author":{"gitId":"wangtao0717"},"content":"     * @param number the number of task in task list"},{"lineNumber":138,"author":{"gitId":"wangtao0717"},"content":"     * @param tasks task list"},{"lineNumber":139,"author":{"gitId":"wangtao0717"},"content":"     */"},{"lineNumber":140,"author":{"gitId":"wangtao0717"},"content":"    public void showDateReply(int number, TaskList tasks) {"},{"lineNumber":141,"author":{"gitId":"wangtao0717"},"content":"        System.out.println(INDENTATION + HORIZON);"},{"lineNumber":142,"author":{"gitId":"wangtao0717"},"content":"        System.out.println(tasks.getTask(number).getPeriodDays());"},{"lineNumber":143,"author":{"gitId":"wangtao0717"},"content":"        System.out.println(INDENTATION + HORIZON);"},{"lineNumber":144,"author":{"gitId":"wangtao0717"},"content":"    }"},{"lineNumber":145,"author":{"gitId":"wangtao0717"},"content":""},{"lineNumber":146,"author":{"gitId":"wangtao0717"},"content":"    public void showFindReply(String[] result) {"},{"lineNumber":147,"author":{"gitId":"wangtao0717"},"content":"        System.out.println(INDENTATION + HORIZON);"},{"lineNumber":148,"author":{"gitId":"wangtao0717"},"content":"        if (result[0] \u003d\u003d null) {"},{"lineNumber":149,"author":{"gitId":"wangtao0717"},"content":"            System.out.println(INDENTATION + \"Sorry, I don\u0027t find the task\");"},{"lineNumber":150,"author":{"gitId":"wangtao0717"},"content":"        }"},{"lineNumber":151,"author":{"gitId":"wangtao0717"},"content":"        for (int i \u003d 0; result[i] !\u003d null; i++) {"},{"lineNumber":152,"author":{"gitId":"wangtao0717"},"content":"            System.out.println(INDENTATION + result[i]);"},{"lineNumber":153,"author":{"gitId":"wangtao0717"},"content":"        }"},{"lineNumber":154,"author":{"gitId":"wangtao0717"},"content":"        System.out.println(INDENTATION + HORIZON);"},{"lineNumber":155,"author":{"gitId":"wangtao0717"},"content":"    }"},{"lineNumber":156,"author":{"gitId":"wangtao0717"},"content":"}"}],"authorContributionMap":{"wangtao0717":156}},{"path":"src/main/java/duck/task/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"wangtao0717"},"content":"package duck.task;"},{"lineNumber":2,"author":{"gitId":"wangtao0717"},"content":""},{"lineNumber":3,"author":{"gitId":"wangtao0717"},"content":"import java.time.LocalDate;"},{"lineNumber":4,"author":{"gitId":"wangtao0717"},"content":"import java.time.format.DateTimeFormatter;"},{"lineNumber":5,"author":{"gitId":"wangtao0717"},"content":"import java.time.temporal.ChronoUnit;"},{"lineNumber":6,"author":{"gitId":"wangtao0717"},"content":""},{"lineNumber":7,"author":{"gitId":"wangtao0717"},"content":"public class Deadline extends Task {"},{"lineNumber":8,"author":{"gitId":"wangtao0717"},"content":"    protected LocalDate by;"},{"lineNumber":9,"author":{"gitId":"wangtao0717"},"content":""},{"lineNumber":10,"author":{"gitId":"wangtao0717"},"content":"    /**"},{"lineNumber":11,"author":{"gitId":"wangtao0717"},"content":"     * initialize Deadline object"},{"lineNumber":12,"author":{"gitId":"wangtao0717"},"content":"     * @param description the description of task"},{"lineNumber":13,"author":{"gitId":"wangtao0717"},"content":"     * @param by          the deadline of task (YYYY-MM-DD)"},{"lineNumber":14,"author":{"gitId":"wangtao0717"},"content":"     */"},{"lineNumber":15,"author":{"gitId":"wangtao0717"},"content":"    public Deadline(String description, String by) {"},{"lineNumber":16,"author":{"gitId":"wangtao0717"},"content":"        super(description);"},{"lineNumber":17,"author":{"gitId":"wangtao0717"},"content":"        this.by \u003d LocalDate.parse(by);"},{"lineNumber":18,"author":{"gitId":"wangtao0717"},"content":"        ;"},{"lineNumber":19,"author":{"gitId":"wangtao0717"},"content":"    }"},{"lineNumber":20,"author":{"gitId":"wangtao0717"},"content":""},{"lineNumber":21,"author":{"gitId":"wangtao0717"},"content":"    /**"},{"lineNumber":22,"author":{"gitId":"wangtao0717"},"content":"     * get task information"},{"lineNumber":23,"author":{"gitId":"wangtao0717"},"content":"     * @return a string show information of task"},{"lineNumber":24,"author":{"gitId":"wangtao0717"},"content":"     */"},{"lineNumber":25,"author":{"gitId":"wangtao0717"},"content":"    @Override"},{"lineNumber":26,"author":{"gitId":"wangtao0717"},"content":"    public String getTaskInfo() {"},{"lineNumber":27,"author":{"gitId":"wangtao0717"},"content":"        return \"[D]\" + super.getTaskInfo() + \" (by: \""},{"lineNumber":28,"author":{"gitId":"wangtao0717"},"content":"                + by.getDayOfWeek() + \",\" + by.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\")) + \")\";"},{"lineNumber":29,"author":{"gitId":"wangtao0717"},"content":"    }"},{"lineNumber":30,"author":{"gitId":"wangtao0717"},"content":""},{"lineNumber":31,"author":{"gitId":"wangtao0717"},"content":"    /**"},{"lineNumber":32,"author":{"gitId":"wangtao0717"},"content":"     * get period from now to deadline"},{"lineNumber":33,"author":{"gitId":"wangtao0717"},"content":"     * @return the number of period"},{"lineNumber":34,"author":{"gitId":"wangtao0717"},"content":"     */"},{"lineNumber":35,"author":{"gitId":"wangtao0717"},"content":"    @Override"},{"lineNumber":36,"author":{"gitId":"wangtao0717"},"content":"    public String getPeriodDays() {"},{"lineNumber":37,"author":{"gitId":"wangtao0717"},"content":"        LocalDate now \u003d LocalDate.parse(LocalDate.now().toString());"},{"lineNumber":38,"author":{"gitId":"wangtao0717"},"content":"        return \"There are \" + String.valueOf(now.until(by, ChronoUnit.DAYS)) + \"day(s) before the deadline\";"},{"lineNumber":39,"author":{"gitId":"wangtao0717"},"content":"    }"},{"lineNumber":40,"author":{"gitId":"wangtao0717"},"content":""},{"lineNumber":41,"author":{"gitId":"wangtao0717"},"content":"    /**"},{"lineNumber":42,"author":{"gitId":"wangtao0717"},"content":"     * get the task information showing in the file"},{"lineNumber":43,"author":{"gitId":"wangtao0717"},"content":"     * @return"},{"lineNumber":44,"author":{"gitId":"wangtao0717"},"content":"     */"},{"lineNumber":45,"author":{"gitId":"wangtao0717"},"content":"    @Override"},{"lineNumber":46,"author":{"gitId":"wangtao0717"},"content":"    public String getTaskInfoOfFile() {"},{"lineNumber":47,"author":{"gitId":"wangtao0717"},"content":"        return \"D | \" + (super.isDone ? \"1\" : \"0\") + \" | \" + super.getDescription() + \" | \" + this.by;"},{"lineNumber":48,"author":{"gitId":"wangtao0717"},"content":"    }"},{"lineNumber":49,"author":{"gitId":"wangtao0717"},"content":""},{"lineNumber":50,"author":{"gitId":"wangtao0717"},"content":"}"}],"authorContributionMap":{"wangtao0717":50}},{"path":"src/main/java/duck/task/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"wangtao0717"},"content":"package duck.task;"},{"lineNumber":2,"author":{"gitId":"wangtao0717"},"content":""},{"lineNumber":3,"author":{"gitId":"wangtao0717"},"content":"import java.time.LocalDate;"},{"lineNumber":4,"author":{"gitId":"wangtao0717"},"content":"import java.time.format.DateTimeFormatter;"},{"lineNumber":5,"author":{"gitId":"wangtao0717"},"content":"import java.time.temporal.ChronoUnit;"},{"lineNumber":6,"author":{"gitId":"wangtao0717"},"content":""},{"lineNumber":7,"author":{"gitId":"wangtao0717"},"content":"public class Event extends Task {"},{"lineNumber":8,"author":{"gitId":"wangtao0717"},"content":"    protected LocalDate at;"},{"lineNumber":9,"author":{"gitId":"wangtao0717"},"content":""},{"lineNumber":10,"author":{"gitId":"wangtao0717"},"content":"    /**"},{"lineNumber":11,"author":{"gitId":"wangtao0717"},"content":"     * initialize Event object"},{"lineNumber":12,"author":{"gitId":"wangtao0717"},"content":"     * @param description the description of task"},{"lineNumber":13,"author":{"gitId":"wangtao0717"},"content":"     * @param at the starting time of task (YYYY-MM-DD)"},{"lineNumber":14,"author":{"gitId":"wangtao0717"},"content":"     */"},{"lineNumber":15,"author":{"gitId":"wangtao0717"},"content":"    public Event(String description, String at) {"},{"lineNumber":16,"author":{"gitId":"wangtao0717"},"content":"        super(description);"},{"lineNumber":17,"author":{"gitId":"wangtao0717"},"content":"        this.at \u003d LocalDate.parse(at);"},{"lineNumber":18,"author":{"gitId":"wangtao0717"},"content":"    }"},{"lineNumber":19,"author":{"gitId":"wangtao0717"},"content":""},{"lineNumber":20,"author":{"gitId":"wangtao0717"},"content":"    /**"},{"lineNumber":21,"author":{"gitId":"wangtao0717"},"content":"     * get task information"},{"lineNumber":22,"author":{"gitId":"wangtao0717"},"content":"     * @return a string show information of task"},{"lineNumber":23,"author":{"gitId":"wangtao0717"},"content":"     */"},{"lineNumber":24,"author":{"gitId":"wangtao0717"},"content":"    @Override"},{"lineNumber":25,"author":{"gitId":"wangtao0717"},"content":"    public String getTaskInfo() {"},{"lineNumber":26,"author":{"gitId":"wangtao0717"},"content":"        return \"[E]\" + super.getTaskInfo() + \" (at: \""},{"lineNumber":27,"author":{"gitId":"wangtao0717"},"content":"                + at.getDayOfWeek() + \",\" + at.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\")) + \")\";"},{"lineNumber":28,"author":{"gitId":"wangtao0717"},"content":"    }"},{"lineNumber":29,"author":{"gitId":"wangtao0717"},"content":""},{"lineNumber":30,"author":{"gitId":"wangtao0717"},"content":"    /**"},{"lineNumber":31,"author":{"gitId":"wangtao0717"},"content":"     * get period from now to starting time"},{"lineNumber":32,"author":{"gitId":"wangtao0717"},"content":"     * @return the number of period"},{"lineNumber":33,"author":{"gitId":"wangtao0717"},"content":"     */"},{"lineNumber":34,"author":{"gitId":"wangtao0717"},"content":"    @Override"},{"lineNumber":35,"author":{"gitId":"wangtao0717"},"content":"    public String getPeriodDays() {"},{"lineNumber":36,"author":{"gitId":"wangtao0717"},"content":"        LocalDate now \u003d LocalDate.parse(LocalDate.now().toString());"},{"lineNumber":37,"author":{"gitId":"wangtao0717"},"content":"        return \"There are \" + String.valueOf(now.until(at, ChronoUnit.DAYS)) + \"day(s) before the event starting\";"},{"lineNumber":38,"author":{"gitId":"wangtao0717"},"content":"    }"},{"lineNumber":39,"author":{"gitId":"wangtao0717"},"content":""},{"lineNumber":40,"author":{"gitId":"wangtao0717"},"content":"    /**"},{"lineNumber":41,"author":{"gitId":"wangtao0717"},"content":"     * get the task information showing in the file"},{"lineNumber":42,"author":{"gitId":"wangtao0717"},"content":"     * @return"},{"lineNumber":43,"author":{"gitId":"wangtao0717"},"content":"     */"},{"lineNumber":44,"author":{"gitId":"wangtao0717"},"content":"    @Override"},{"lineNumber":45,"author":{"gitId":"wangtao0717"},"content":"    public String getTaskInfoOfFile() {"},{"lineNumber":46,"author":{"gitId":"wangtao0717"},"content":"        return \"E | \" + (super.isDone ? \"1\" : \"0\") + \" | \" + super.getDescription() + \" | \" + this.at;"},{"lineNumber":47,"author":{"gitId":"wangtao0717"},"content":"    }"},{"lineNumber":48,"author":{"gitId":"wangtao0717"},"content":"}"}],"authorContributionMap":{"wangtao0717":48}},{"path":"src/main/java/duck/task/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"wangtao0717"},"content":"package duck.task;"},{"lineNumber":2,"author":{"gitId":"wangtao0717"},"content":""},{"lineNumber":3,"author":{"gitId":"wangtao0717"},"content":"public class Task {"},{"lineNumber":4,"author":{"gitId":"wangtao0717"},"content":"    protected String description;"},{"lineNumber":5,"author":{"gitId":"wangtao0717"},"content":"    protected boolean isDone;"},{"lineNumber":6,"author":{"gitId":"wangtao0717"},"content":""},{"lineNumber":7,"author":{"gitId":"wangtao0717"},"content":"    /**"},{"lineNumber":8,"author":{"gitId":"wangtao0717"},"content":"     * initialize the task"},{"lineNumber":9,"author":{"gitId":"wangtao0717"},"content":"     * @param description the description of task"},{"lineNumber":10,"author":{"gitId":"wangtao0717"},"content":"     */"},{"lineNumber":11,"author":{"gitId":"wangtao0717"},"content":"    public Task(String description) {"},{"lineNumber":12,"author":{"gitId":"wangtao0717"},"content":"        this.description \u003d description;"},{"lineNumber":13,"author":{"gitId":"wangtao0717"},"content":"        this.isDone \u003d false;"},{"lineNumber":14,"author":{"gitId":"wangtao0717"},"content":"    }"},{"lineNumber":15,"author":{"gitId":"wangtao0717"},"content":""},{"lineNumber":16,"author":{"gitId":"wangtao0717"},"content":"    /**"},{"lineNumber":17,"author":{"gitId":"wangtao0717"},"content":"     * get status of task"},{"lineNumber":18,"author":{"gitId":"wangtao0717"},"content":"     * @return  tick or X symbols"},{"lineNumber":19,"author":{"gitId":"wangtao0717"},"content":"     */"},{"lineNumber":20,"author":{"gitId":"wangtao0717"},"content":"    public String getStatusIcon() {"},{"lineNumber":21,"author":{"gitId":"wangtao0717"},"content":"        return (isDone ? \"[\\u2713]\" : \"[\\u2718]\");"},{"lineNumber":22,"author":{"gitId":"wangtao0717"},"content":"    }"},{"lineNumber":23,"author":{"gitId":"wangtao0717"},"content":""},{"lineNumber":24,"author":{"gitId":"wangtao0717"},"content":"    /**"},{"lineNumber":25,"author":{"gitId":"wangtao0717"},"content":"     * get description of task"},{"lineNumber":26,"author":{"gitId":"wangtao0717"},"content":"     * @return description"},{"lineNumber":27,"author":{"gitId":"wangtao0717"},"content":"     */"},{"lineNumber":28,"author":{"gitId":"wangtao0717"},"content":"    public String getDescription() {"},{"lineNumber":29,"author":{"gitId":"wangtao0717"},"content":"        return this.description;"},{"lineNumber":30,"author":{"gitId":"wangtao0717"},"content":"    }"},{"lineNumber":31,"author":{"gitId":"wangtao0717"},"content":""},{"lineNumber":32,"author":{"gitId":"wangtao0717"},"content":"    /**"},{"lineNumber":33,"author":{"gitId":"wangtao0717"},"content":"     * get task information"},{"lineNumber":34,"author":{"gitId":"wangtao0717"},"content":"     * @return a string show information of task"},{"lineNumber":35,"author":{"gitId":"wangtao0717"},"content":"     */"},{"lineNumber":36,"author":{"gitId":"wangtao0717"},"content":"    public String getTaskInfo() {"},{"lineNumber":37,"author":{"gitId":"wangtao0717"},"content":"        return getStatusIcon() + getDescription();"},{"lineNumber":38,"author":{"gitId":"wangtao0717"},"content":"    }"},{"lineNumber":39,"author":{"gitId":"wangtao0717"},"content":""},{"lineNumber":40,"author":{"gitId":"wangtao0717"},"content":"    /**"},{"lineNumber":41,"author":{"gitId":"wangtao0717"},"content":"     * get period from now to starting time"},{"lineNumber":42,"author":{"gitId":"wangtao0717"},"content":"     * @return the number of period"},{"lineNumber":43,"author":{"gitId":"wangtao0717"},"content":"     */"},{"lineNumber":44,"author":{"gitId":"wangtao0717"},"content":"    public String getTaskInfoOfFile() {"},{"lineNumber":45,"author":{"gitId":"wangtao0717"},"content":"        return getStatusIcon() + getDescription();"},{"lineNumber":46,"author":{"gitId":"wangtao0717"},"content":"    }"},{"lineNumber":47,"author":{"gitId":"wangtao0717"},"content":""},{"lineNumber":48,"author":{"gitId":"wangtao0717"},"content":"    /**"},{"lineNumber":49,"author":{"gitId":"wangtao0717"},"content":"     * mark task as done"},{"lineNumber":50,"author":{"gitId":"wangtao0717"},"content":"     */"},{"lineNumber":51,"author":{"gitId":"wangtao0717"},"content":"    public void markAsDone() {"},{"lineNumber":52,"author":{"gitId":"wangtao0717"},"content":"        this.isDone \u003d true;"},{"lineNumber":53,"author":{"gitId":"wangtao0717"},"content":"    }"},{"lineNumber":54,"author":{"gitId":"wangtao0717"},"content":""},{"lineNumber":55,"author":{"gitId":"wangtao0717"},"content":"    /**"},{"lineNumber":56,"author":{"gitId":"wangtao0717"},"content":"     * get period from now to the setting time"},{"lineNumber":57,"author":{"gitId":"wangtao0717"},"content":"     * @return spac,wait for overriding"},{"lineNumber":58,"author":{"gitId":"wangtao0717"},"content":"     */"},{"lineNumber":59,"author":{"gitId":"wangtao0717"},"content":"    public String getPeriodDays() {"},{"lineNumber":60,"author":{"gitId":"wangtao0717"},"content":"        return \"\";"},{"lineNumber":61,"author":{"gitId":"wangtao0717"},"content":"    }"},{"lineNumber":62,"author":{"gitId":"wangtao0717"},"content":""},{"lineNumber":63,"author":{"gitId":"wangtao0717"},"content":"}"}],"authorContributionMap":{"wangtao0717":63}},{"path":"src/main/java/duck/task/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"wangtao0717"},"content":"package duck.task;"},{"lineNumber":2,"author":{"gitId":"wangtao0717"},"content":""},{"lineNumber":3,"author":{"gitId":"wangtao0717"},"content":"import java.util.ArrayList;"},{"lineNumber":4,"author":{"gitId":"wangtao0717"},"content":""},{"lineNumber":5,"author":{"gitId":"wangtao0717"},"content":"public class TaskList {"},{"lineNumber":6,"author":{"gitId":"wangtao0717"},"content":"    private ArrayList\u003cTask\u003e taskList \u003d new ArrayList\u003cTask\u003e();"},{"lineNumber":7,"author":{"gitId":"wangtao0717"},"content":""},{"lineNumber":8,"author":{"gitId":"wangtao0717"},"content":"    /**"},{"lineNumber":9,"author":{"gitId":"wangtao0717"},"content":"     * initialize  the TaskLisk object"},{"lineNumber":10,"author":{"gitId":"wangtao0717"},"content":"     * @param data use data to form task list"},{"lineNumber":11,"author":{"gitId":"wangtao0717"},"content":"     */"},{"lineNumber":12,"author":{"gitId":"wangtao0717"},"content":"    public TaskList(String[] data) {"},{"lineNumber":13,"author":{"gitId":"wangtao0717"},"content":"        for (int i \u003d 0; data[i] !\u003d null; i++) {"},{"lineNumber":14,"author":{"gitId":"wangtao0717"},"content":"            String datas \u003d data[i];"},{"lineNumber":15,"author":{"gitId":"wangtao0717"},"content":"            String[] dataSplit \u003d datas.split(\"\\\\|\");"},{"lineNumber":16,"author":{"gitId":"wangtao0717"},"content":"            switch (dataSplit[0].trim()) {"},{"lineNumber":17,"author":{"gitId":"wangtao0717"},"content":"            case \"T\":"},{"lineNumber":18,"author":{"gitId":"wangtao0717"},"content":"                taskList.add(new Todo(dataSplit[2].trim()));"},{"lineNumber":19,"author":{"gitId":"wangtao0717"},"content":"                break;"},{"lineNumber":20,"author":{"gitId":"wangtao0717"},"content":"            case \"D\":"},{"lineNumber":21,"author":{"gitId":"wangtao0717"},"content":"                taskList.add(new Deadline(dataSplit[2].trim(), dataSplit[3].trim()));"},{"lineNumber":22,"author":{"gitId":"wangtao0717"},"content":"                break;"},{"lineNumber":23,"author":{"gitId":"wangtao0717"},"content":"            case \"E\":"},{"lineNumber":24,"author":{"gitId":"wangtao0717"},"content":"                taskList.add(new Event(dataSplit[2].trim(), dataSplit[3].trim()));"},{"lineNumber":25,"author":{"gitId":"wangtao0717"},"content":"                break;"},{"lineNumber":26,"author":{"gitId":"wangtao0717"},"content":"            }"},{"lineNumber":27,"author":{"gitId":"wangtao0717"},"content":"            if (dataSplit[1].trim().equals(\"1\")) {"},{"lineNumber":28,"author":{"gitId":"wangtao0717"},"content":"                taskList.get(taskList.size() - 1).markAsDone();"},{"lineNumber":29,"author":{"gitId":"wangtao0717"},"content":"            }"},{"lineNumber":30,"author":{"gitId":"wangtao0717"},"content":"        }"},{"lineNumber":31,"author":{"gitId":"wangtao0717"},"content":"    }"},{"lineNumber":32,"author":{"gitId":"wangtao0717"},"content":""},{"lineNumber":33,"author":{"gitId":"wangtao0717"},"content":"    /**"},{"lineNumber":34,"author":{"gitId":"wangtao0717"},"content":"     * get size of task list"},{"lineNumber":35,"author":{"gitId":"wangtao0717"},"content":"     * @return number of tasks"},{"lineNumber":36,"author":{"gitId":"wangtao0717"},"content":"     */"},{"lineNumber":37,"author":{"gitId":"wangtao0717"},"content":"    public int getSizeOfTasks() {"},{"lineNumber":38,"author":{"gitId":"wangtao0717"},"content":"        return taskList.size();"},{"lineNumber":39,"author":{"gitId":"wangtao0717"},"content":"    }"},{"lineNumber":40,"author":{"gitId":"wangtao0717"},"content":""},{"lineNumber":41,"author":{"gitId":"wangtao0717"},"content":"    /**"},{"lineNumber":42,"author":{"gitId":"wangtao0717"},"content":"     * get a task from task list"},{"lineNumber":43,"author":{"gitId":"wangtao0717"},"content":"     * @param number the number of task"},{"lineNumber":44,"author":{"gitId":"wangtao0717"},"content":"     * @return task"},{"lineNumber":45,"author":{"gitId":"wangtao0717"},"content":"     */"},{"lineNumber":46,"author":{"gitId":"wangtao0717"},"content":"    public Task getTask(Integer number) {"},{"lineNumber":47,"author":{"gitId":"wangtao0717"},"content":"        return taskList.get(number);"},{"lineNumber":48,"author":{"gitId":"wangtao0717"},"content":"    }"},{"lineNumber":49,"author":{"gitId":"wangtao0717"},"content":""},{"lineNumber":50,"author":{"gitId":"wangtao0717"},"content":"    /**"},{"lineNumber":51,"author":{"gitId":"wangtao0717"},"content":"     * remove task from task list"},{"lineNumber":52,"author":{"gitId":"wangtao0717"},"content":"     * @param number the number of the choosing task"},{"lineNumber":53,"author":{"gitId":"wangtao0717"},"content":"     */"},{"lineNumber":54,"author":{"gitId":"wangtao0717"},"content":"    public void removeTask(Integer number) {"},{"lineNumber":55,"author":{"gitId":"wangtao0717"},"content":"        taskList.remove(taskList.get(number));"},{"lineNumber":56,"author":{"gitId":"wangtao0717"},"content":"    }"},{"lineNumber":57,"author":{"gitId":"wangtao0717"},"content":""},{"lineNumber":58,"author":{"gitId":"wangtao0717"},"content":"    /**"},{"lineNumber":59,"author":{"gitId":"wangtao0717"},"content":"     * add a new task to task list"},{"lineNumber":60,"author":{"gitId":"wangtao0717"},"content":"     * @param task"},{"lineNumber":61,"author":{"gitId":"wangtao0717"},"content":"     */"},{"lineNumber":62,"author":{"gitId":"wangtao0717"},"content":"    public void addTask(Task task) {"},{"lineNumber":63,"author":{"gitId":"wangtao0717"},"content":"        taskList.add(task);"},{"lineNumber":64,"author":{"gitId":"wangtao0717"},"content":"    }"},{"lineNumber":65,"author":{"gitId":"wangtao0717"},"content":""},{"lineNumber":66,"author":{"gitId":"wangtao0717"},"content":"    public String[] findTask(String description) {"},{"lineNumber":67,"author":{"gitId":"wangtao0717"},"content":"        int numberOfFinding \u003d 0;"},{"lineNumber":68,"author":{"gitId":"wangtao0717"},"content":"        String[] findTask \u003d new String[100];"},{"lineNumber":69,"author":{"gitId":"wangtao0717"},"content":"        for (int i \u003d 0; i \u003c this.getSizeOfTasks(); i++) {"},{"lineNumber":70,"author":{"gitId":"wangtao0717"},"content":"            if (this.getTask(i).description.contains(description)) {"},{"lineNumber":71,"author":{"gitId":"wangtao0717"},"content":"                findTask[numberOfFinding] \u003d i + 1 + \".\" + this.getTask(i).getTaskInfo();"},{"lineNumber":72,"author":{"gitId":"wangtao0717"},"content":"                numberOfFinding++;"},{"lineNumber":73,"author":{"gitId":"wangtao0717"},"content":"            }"},{"lineNumber":74,"author":{"gitId":"wangtao0717"},"content":"        }"},{"lineNumber":75,"author":{"gitId":"wangtao0717"},"content":"        return findTask;"},{"lineNumber":76,"author":{"gitId":"wangtao0717"},"content":"    }"},{"lineNumber":77,"author":{"gitId":"wangtao0717"},"content":"}"}],"authorContributionMap":{"wangtao0717":77}},{"path":"src/main/java/duck/task/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"wangtao0717"},"content":"package duck.task;"},{"lineNumber":2,"author":{"gitId":"wangtao0717"},"content":""},{"lineNumber":3,"author":{"gitId":"wangtao0717"},"content":"public class Todo extends Task {"},{"lineNumber":4,"author":{"gitId":"wangtao0717"},"content":""},{"lineNumber":5,"author":{"gitId":"wangtao0717"},"content":"    /**"},{"lineNumber":6,"author":{"gitId":"wangtao0717"},"content":"     * initialize Todo object"},{"lineNumber":7,"author":{"gitId":"wangtao0717"},"content":"     * @param description the description of task"},{"lineNumber":8,"author":{"gitId":"wangtao0717"},"content":"     */"},{"lineNumber":9,"author":{"gitId":"wangtao0717"},"content":"    public Todo(String description) {"},{"lineNumber":10,"author":{"gitId":"wangtao0717"},"content":"        super(description);"},{"lineNumber":11,"author":{"gitId":"wangtao0717"},"content":"    }"},{"lineNumber":12,"author":{"gitId":"wangtao0717"},"content":""},{"lineNumber":13,"author":{"gitId":"wangtao0717"},"content":"    /**"},{"lineNumber":14,"author":{"gitId":"wangtao0717"},"content":"     * get task information"},{"lineNumber":15,"author":{"gitId":"wangtao0717"},"content":"     * @return a string show information of task"},{"lineNumber":16,"author":{"gitId":"wangtao0717"},"content":"     */"},{"lineNumber":17,"author":{"gitId":"wangtao0717"},"content":"    @Override"},{"lineNumber":18,"author":{"gitId":"wangtao0717"},"content":"    public String getTaskInfo() {"},{"lineNumber":19,"author":{"gitId":"wangtao0717"},"content":"        return \"[T]\" + super.getTaskInfo();"},{"lineNumber":20,"author":{"gitId":"wangtao0717"},"content":"    }"},{"lineNumber":21,"author":{"gitId":"wangtao0717"},"content":""},{"lineNumber":22,"author":{"gitId":"wangtao0717"},"content":"    /**"},{"lineNumber":23,"author":{"gitId":"wangtao0717"},"content":"     * get the task information showing in the file"},{"lineNumber":24,"author":{"gitId":"wangtao0717"},"content":"     * @return"},{"lineNumber":25,"author":{"gitId":"wangtao0717"},"content":"     */"},{"lineNumber":26,"author":{"gitId":"wangtao0717"},"content":"    @Override"},{"lineNumber":27,"author":{"gitId":"wangtao0717"},"content":"    public String getTaskInfoOfFile() {"},{"lineNumber":28,"author":{"gitId":"wangtao0717"},"content":"        return \"T | \" + (super.isDone ? \"1\" : \"0\") + \" | \" + super.getDescription();"},{"lineNumber":29,"author":{"gitId":"wangtao0717"},"content":"    }"},{"lineNumber":30,"author":{"gitId":"wangtao0717"},"content":""},{"lineNumber":31,"author":{"gitId":"wangtao0717"},"content":"    /**"},{"lineNumber":32,"author":{"gitId":"wangtao0717"},"content":"     * get period from now to starting time"},{"lineNumber":33,"author":{"gitId":"wangtao0717"},"content":"     * @return the string because Todo task doesn\u0027t have time"},{"lineNumber":34,"author":{"gitId":"wangtao0717"},"content":"     */"},{"lineNumber":35,"author":{"gitId":"wangtao0717"},"content":"    @Override"},{"lineNumber":36,"author":{"gitId":"wangtao0717"},"content":"    public String getPeriodDays() {"},{"lineNumber":37,"author":{"gitId":"wangtao0717"},"content":"        return \"this task hasn\u0027t determine the time\";"},{"lineNumber":38,"author":{"gitId":"wangtao0717"},"content":""},{"lineNumber":39,"author":{"gitId":"wangtao0717"},"content":"    }"},{"lineNumber":40,"author":{"gitId":"wangtao0717"},"content":"}"}],"authorContributionMap":{"wangtao0717":40}},{"path":"src/test/java/DeadlineTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"wangtao0717"},"content":"import duck.task.Deadline;"},{"lineNumber":2,"author":{"gitId":"wangtao0717"},"content":"import org.junit.jupiter.api.Test;"},{"lineNumber":3,"author":{"gitId":"wangtao0717"},"content":""},{"lineNumber":4,"author":{"gitId":"wangtao0717"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;"},{"lineNumber":5,"author":{"gitId":"wangtao0717"},"content":""},{"lineNumber":6,"author":{"gitId":"wangtao0717"},"content":"public class DeadlineTest {"},{"lineNumber":7,"author":{"gitId":"wangtao0717"},"content":"    Deadline deadline \u003d new Deadline(\"return book\",\"2021-12-22\");"},{"lineNumber":8,"author":{"gitId":"wangtao0717"},"content":"    @Test"},{"lineNumber":9,"author":{"gitId":"wangtao0717"},"content":"    public void dummyTest(){"},{"lineNumber":10,"author":{"gitId":"wangtao0717"},"content":"        assertEquals(\"[D][✘]return book (by: WEDNESDAY,Dec 22 2021)\",deadline.getTaskInfo());"},{"lineNumber":11,"author":{"gitId":"wangtao0717"},"content":"        assertEquals(\"There are 331day(s) before the deadline\",deadline.getPeriodDays());"},{"lineNumber":12,"author":{"gitId":"wangtao0717"},"content":"        assertEquals(\"D | 0 | return book | 2021-12-22\",deadline.getTaskInfoOfFile());"},{"lineNumber":13,"author":{"gitId":"wangtao0717"},"content":"        assertEquals(\"[✘]\",deadline.getStatusIcon());"},{"lineNumber":14,"author":{"gitId":"wangtao0717"},"content":"    }"},{"lineNumber":15,"author":{"gitId":"wangtao0717"},"content":"}"},{"lineNumber":16,"author":{"gitId":"wangtao0717"},"content":""},{"lineNumber":17,"author":{"gitId":"wangtao0717"},"content":""},{"lineNumber":18,"author":{"gitId":"wangtao0717"},"content":""}],"authorContributionMap":{"wangtao0717":18}},{"path":"src/test/java/EventTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"wangtao0717"},"content":"import duck.task.Event;"},{"lineNumber":2,"author":{"gitId":"wangtao0717"},"content":"import org.junit.jupiter.api.Test;"},{"lineNumber":3,"author":{"gitId":"wangtao0717"},"content":""},{"lineNumber":4,"author":{"gitId":"wangtao0717"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;"},{"lineNumber":5,"author":{"gitId":"wangtao0717"},"content":""},{"lineNumber":6,"author":{"gitId":"wangtao0717"},"content":"public class EventTest {"},{"lineNumber":7,"author":{"gitId":"wangtao0717"},"content":"    Event event \u003d new Event(\"return book\",\"2021-12-22\");"},{"lineNumber":8,"author":{"gitId":"wangtao0717"},"content":"    @Test"},{"lineNumber":9,"author":{"gitId":"wangtao0717"},"content":"    public void dummyTest(){"},{"lineNumber":10,"author":{"gitId":"wangtao0717"},"content":"        assertEquals(\"[E][✘]return book (at: WEDNESDAY,Dec 22 2021)\",event.getTaskInfo());"},{"lineNumber":11,"author":{"gitId":"wangtao0717"},"content":"        assertEquals(\"There are 331day(s) before the event starting\",event.getPeriodDays());"},{"lineNumber":12,"author":{"gitId":"wangtao0717"},"content":"        assertEquals(\"E | 0 | return book | 2021-12-22\",event.getTaskInfoOfFile());"},{"lineNumber":13,"author":{"gitId":"wangtao0717"},"content":"        assertEquals(\"[✘]\",event.getStatusIcon());"},{"lineNumber":14,"author":{"gitId":"wangtao0717"},"content":"    }"},{"lineNumber":15,"author":{"gitId":"wangtao0717"},"content":"}"}],"authorContributionMap":{"wangtao0717":15}},{"path":"src/test/java/TaskTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"wangtao0717"},"content":"import duck.task.Deadline;"},{"lineNumber":2,"author":{"gitId":"wangtao0717"},"content":"import duck.task.Task;"},{"lineNumber":3,"author":{"gitId":"wangtao0717"},"content":"import org.junit.jupiter.api.Test;"},{"lineNumber":4,"author":{"gitId":"wangtao0717"},"content":""},{"lineNumber":5,"author":{"gitId":"wangtao0717"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;"},{"lineNumber":6,"author":{"gitId":"wangtao0717"},"content":""},{"lineNumber":7,"author":{"gitId":"wangtao0717"},"content":"public class TaskTest {"},{"lineNumber":8,"author":{"gitId":"wangtao0717"},"content":"    Task task \u003d new Task(\"return book\");"},{"lineNumber":9,"author":{"gitId":"wangtao0717"},"content":"    @Test"},{"lineNumber":10,"author":{"gitId":"wangtao0717"},"content":"    public void dummyTest(){"},{"lineNumber":11,"author":{"gitId":"wangtao0717"},"content":"        assertEquals(\"[✘]return book\",task.getTaskInfo());"},{"lineNumber":12,"author":{"gitId":"wangtao0717"},"content":"        assertEquals(\"[✘]\",task.getStatusIcon());"},{"lineNumber":13,"author":{"gitId":"wangtao0717"},"content":"       assertEquals(\"\",task.getPeriodDays());"},{"lineNumber":14,"author":{"gitId":"wangtao0717"},"content":"    }"},{"lineNumber":15,"author":{"gitId":"wangtao0717"},"content":"}"}],"authorContributionMap":{"wangtao0717":15}},{"path":"src/test/java/TodoTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"wangtao0717"},"content":"import duck.task.Todo;"},{"lineNumber":2,"author":{"gitId":"wangtao0717"},"content":"import org.junit.jupiter.api.Test;"},{"lineNumber":3,"author":{"gitId":"wangtao0717"},"content":""},{"lineNumber":4,"author":{"gitId":"wangtao0717"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;"},{"lineNumber":5,"author":{"gitId":"wangtao0717"},"content":""},{"lineNumber":6,"author":{"gitId":"wangtao0717"},"content":"public class TodoTest {"},{"lineNumber":7,"author":{"gitId":"wangtao0717"},"content":"    Todo todo \u003d new Todo(\"return book\");"},{"lineNumber":8,"author":{"gitId":"wangtao0717"},"content":"    @Test"},{"lineNumber":9,"author":{"gitId":"wangtao0717"},"content":"    public void dummyTest(){"},{"lineNumber":10,"author":{"gitId":"wangtao0717"},"content":"        assertEquals(\"[T][✘]return book\",todo.getTaskInfo());"},{"lineNumber":11,"author":{"gitId":"wangtao0717"},"content":"        assertEquals(\"this task hasn\u0027t determine the time\",todo.getPeriodDays());"},{"lineNumber":12,"author":{"gitId":"wangtao0717"},"content":"        assertEquals(\"T | 0 | return book\",todo.getTaskInfoOfFile());"},{"lineNumber":13,"author":{"gitId":"wangtao0717"},"content":"        assertEquals(\"[✘]\",todo.getStatusIcon());"},{"lineNumber":14,"author":{"gitId":"wangtao0717"},"content":"    }"},{"lineNumber":15,"author":{"gitId":"wangtao0717"},"content":"}"}],"authorContributionMap":{"wangtao0717":15}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"wangtao0717"},"content":"todo borrow book"},{"lineNumber":2,"author":{"gitId":"wangtao0717"},"content":"todo read book"},{"lineNumber":3,"author":{"gitId":"wangtao0717"},"content":"deadline return book /by 2021-02-10"},{"lineNumber":4,"author":{"gitId":"wangtao0717"},"content":"event project meeting /at 2021-05-12"},{"lineNumber":5,"author":{"gitId":"wangtao0717"},"content":"list"},{"lineNumber":6,"author":{"gitId":"wangtao0717"},"content":"done 2"},{"lineNumber":7,"author":{"gitId":"wangtao0717"},"content":"done 4"},{"lineNumber":8,"author":{"gitId":"wangtao0717"},"content":"list"},{"lineNumber":9,"author":{"gitId":"wangtao0717"},"content":"todo"},{"lineNumber":10,"author":{"gitId":"wangtao0717"},"content":"done 7"},{"lineNumber":11,"author":{"gitId":"wangtao0717"},"content":"delete 7"},{"lineNumber":12,"author":{"gitId":"wangtao0717"},"content":"deadline washing"},{"lineNumber":13,"author":{"gitId":"wangtao0717"},"content":"event cleaning"},{"lineNumber":14,"author":{"gitId":"wangtao0717"},"content":"date 2"},{"lineNumber":15,"author":{"gitId":"wangtao0717"},"content":"date 4"},{"lineNumber":16,"author":{"gitId":"wangtao0717"},"content":"bye"}],"authorContributionMap":{"wangtao0717":16}}]
