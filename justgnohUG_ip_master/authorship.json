[{"path":"src/main/java/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"justgnohUG"},"content":"public class Deadline extends Task {"},{"lineNumber":2,"author":{"gitId":"justgnohUG"},"content":"    protected String by;"},{"lineNumber":3,"author":{"gitId":"justgnohUG"},"content":""},{"lineNumber":4,"author":{"gitId":"justgnohUG"},"content":"    public Deadline(String name, String by) {"},{"lineNumber":5,"author":{"gitId":"justgnohUG"},"content":"        super(name);"},{"lineNumber":6,"author":{"gitId":"justgnohUG"},"content":"        this.by \u003d by;"},{"lineNumber":7,"author":{"gitId":"justgnohUG"},"content":"    }"},{"lineNumber":8,"author":{"gitId":"justgnohUG"},"content":""},{"lineNumber":9,"author":{"gitId":"justgnohUG"},"content":"    @Override"},{"lineNumber":10,"author":{"gitId":"justgnohUG"},"content":"    public String toString() {"},{"lineNumber":11,"author":{"gitId":"justgnohUG"},"content":"        return \"[D]\" + super.toString() + \" (by: \" + by + \")\";"},{"lineNumber":12,"author":{"gitId":"justgnohUG"},"content":"    }"},{"lineNumber":13,"author":{"gitId":"justgnohUG"},"content":"}"}],"authorContributionMap":{"justgnohUG":13}},{"path":"src/main/java/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"justgnohUG"},"content":"import java.util.Scanner;"},{"lineNumber":2,"author":{"gitId":"justgnohUG"},"content":"import java.util.Arrays;"},{"lineNumber":3,"author":{"gitId":"justgnohUG"},"content":"import java.util.ArrayList;"},{"lineNumber":4,"author":{"gitId":"justgnohUG"},"content":""},{"lineNumber":5,"author":{"gitId":"-"},"content":"public class Duke {"},{"lineNumber":6,"author":{"gitId":"-"},"content":"    public static void main(String[] args) {"},{"lineNumber":7,"author":{"gitId":"-"},"content":"        String logo \u003d \" ____        _        \\n\""},{"lineNumber":8,"author":{"gitId":"-"},"content":"                + \"|  _ \\\\ _   _| | _____ \\n\""},{"lineNumber":9,"author":{"gitId":"-"},"content":"                + \"| | | | | | | |/ / _ \\\\\\n\""},{"lineNumber":10,"author":{"gitId":"-"},"content":"                + \"| |_| | |_| |   \u003c  __/\\n\""},{"lineNumber":11,"author":{"gitId":"-"},"content":"                + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\";"},{"lineNumber":12,"author":{"gitId":"justgnohUG"},"content":"        System.out.println(\"---------------------------------------\\n\");"},{"lineNumber":13,"author":{"gitId":"justgnohUG"},"content":"        System.out.println(\"What\u0027s up! I\u0027m Duke\\nPlease feed be commands :)\" );"},{"lineNumber":14,"author":{"gitId":"justgnohUG"},"content":"        System.out.println(\"---------------------------------------\" );"},{"lineNumber":15,"author":{"gitId":"justgnohUG"},"content":""},{"lineNumber":16,"author":{"gitId":"justgnohUG"},"content":"        Scanner scan \u003d new Scanner(System.in);"},{"lineNumber":17,"author":{"gitId":"justgnohUG"},"content":"        String input \u003d \" \";"},{"lineNumber":18,"author":{"gitId":"justgnohUG"},"content":""},{"lineNumber":19,"author":{"gitId":"justgnohUG"},"content":"//        Initialize Task container"},{"lineNumber":20,"author":{"gitId":"justgnohUG"},"content":"        ArrayList\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();"},{"lineNumber":21,"author":{"gitId":"justgnohUG"},"content":"        int taskNumber \u003d 0;"},{"lineNumber":22,"author":{"gitId":"justgnohUG"},"content":""},{"lineNumber":23,"author":{"gitId":"justgnohUG"},"content":""},{"lineNumber":24,"author":{"gitId":"justgnohUG"},"content":"        while(!input.equals(\"bye\")) {"},{"lineNumber":25,"author":{"gitId":"justgnohUG"},"content":"            input \u003d scan.nextLine().trim();"},{"lineNumber":26,"author":{"gitId":"justgnohUG"},"content":"            String command \u003d input.split(\" \")[0];"},{"lineNumber":27,"author":{"gitId":"justgnohUG"},"content":""},{"lineNumber":28,"author":{"gitId":"justgnohUG"},"content":"            switch (command) {"},{"lineNumber":29,"author":{"gitId":"justgnohUG"},"content":"                case \"bye\":"},{"lineNumber":30,"author":{"gitId":"justgnohUG"},"content":"                    System.out.println(\"\\n---------------------------------------\" );"},{"lineNumber":31,"author":{"gitId":"justgnohUG"},"content":"                    System.out.println(\"Bye. Sayonara and goodbye!\");"},{"lineNumber":32,"author":{"gitId":"justgnohUG"},"content":"                    System.out.println(\"---------------------------------------\" );"},{"lineNumber":33,"author":{"gitId":"justgnohUG"},"content":"                    break;"},{"lineNumber":34,"author":{"gitId":"justgnohUG"},"content":""},{"lineNumber":35,"author":{"gitId":"justgnohUG"},"content":"                case \"list\":"},{"lineNumber":36,"author":{"gitId":"justgnohUG"},"content":"//                    Numbers should change accordingly when deleted (For future Ref.)"},{"lineNumber":37,"author":{"gitId":"justgnohUG"},"content":"                    System.out.println(\"\\n---------------------------------------\" );"},{"lineNumber":38,"author":{"gitId":"justgnohUG"},"content":"                    System.out.println(\"Here are the tasks in your list:\");"},{"lineNumber":39,"author":{"gitId":"justgnohUG"},"content":"                    for (int i \u003d 0; i \u003c tasks.size(); i++) {"},{"lineNumber":40,"author":{"gitId":"justgnohUG"},"content":"                        System.out.println(String.valueOf(i+1) + \".\" + tasks.get(i).toString());"},{"lineNumber":41,"author":{"gitId":"justgnohUG"},"content":"                    }"},{"lineNumber":42,"author":{"gitId":"justgnohUG"},"content":"                    System.out.println(\"---------------------------------------\" );"},{"lineNumber":43,"author":{"gitId":"justgnohUG"},"content":"                    break;"},{"lineNumber":44,"author":{"gitId":"justgnohUG"},"content":""},{"lineNumber":45,"author":{"gitId":"justgnohUG"},"content":"                case \"done\":"},{"lineNumber":46,"author":{"gitId":"justgnohUG"},"content":"//                    Possible Error: index provided is out of bounds (NullPointerException)"},{"lineNumber":47,"author":{"gitId":"justgnohUG"},"content":"                    int index \u003d Integer.parseInt(input.split(\" \")[1]) - 1;"},{"lineNumber":48,"author":{"gitId":"justgnohUG"},"content":"                    tasks.get(index).markDone();"},{"lineNumber":49,"author":{"gitId":"justgnohUG"},"content":""},{"lineNumber":50,"author":{"gitId":"justgnohUG"},"content":"                    System.out.println(\"\\n---------------------------------------\" );"},{"lineNumber":51,"author":{"gitId":"justgnohUG"},"content":"                    System.out.println(\"Nice! I\u0027ve marked this task as done:\");"},{"lineNumber":52,"author":{"gitId":"justgnohUG"},"content":"                    System.out.println(\"[\" + tasks.get(index).getStatusIcon() + \"] \" + tasks.get(index).name.trim());"},{"lineNumber":53,"author":{"gitId":"justgnohUG"},"content":"                    System.out.println(\"---------------------------------------\" );"},{"lineNumber":54,"author":{"gitId":"justgnohUG"},"content":"                    break;"},{"lineNumber":55,"author":{"gitId":"justgnohUG"},"content":""},{"lineNumber":56,"author":{"gitId":"justgnohUG"},"content":"                case \"todo\":"},{"lineNumber":57,"author":{"gitId":"justgnohUG"},"content":"                    try {"},{"lineNumber":58,"author":{"gitId":"justgnohUG"},"content":"                        String name \u003d getTodoName(input);"},{"lineNumber":59,"author":{"gitId":"justgnohUG"},"content":"                        Todo todo \u003d new Todo(name);"},{"lineNumber":60,"author":{"gitId":"justgnohUG"},"content":"                        tasks.add(todo);"},{"lineNumber":61,"author":{"gitId":"justgnohUG"},"content":""},{"lineNumber":62,"author":{"gitId":"justgnohUG"},"content":"                        System.out.println(\"\\n---------------------------------------\" );"},{"lineNumber":63,"author":{"gitId":"justgnohUG"},"content":"                        System.out.println(\"Got it. I\u0027ve added this task:\");"},{"lineNumber":64,"author":{"gitId":"justgnohUG"},"content":"                        System.out.println(todo.toString());"},{"lineNumber":65,"author":{"gitId":"justgnohUG"},"content":"                        System.out.println(\"Now you have \" + tasks.size() + \" tasks in the list\");"},{"lineNumber":66,"author":{"gitId":"justgnohUG"},"content":"                        System.out.println(\"---------------------------------------\" );"},{"lineNumber":67,"author":{"gitId":"justgnohUG"},"content":"                    } catch(DukeException e) {"},{"lineNumber":68,"author":{"gitId":"justgnohUG"},"content":"                        e.printError(\"Come On Fella! Your ToDo description cannot be empty!\");"},{"lineNumber":69,"author":{"gitId":"justgnohUG"},"content":"                    }"},{"lineNumber":70,"author":{"gitId":"justgnohUG"},"content":"                    break;"},{"lineNumber":71,"author":{"gitId":"justgnohUG"},"content":""},{"lineNumber":72,"author":{"gitId":"justgnohUG"},"content":"                case \"deadline\":"},{"lineNumber":73,"author":{"gitId":"justgnohUG"},"content":"                    try{"},{"lineNumber":74,"author":{"gitId":"justgnohUG"},"content":"                        String name \u003d getEventOrDeadlineName(input);"},{"lineNumber":75,"author":{"gitId":"justgnohUG"},"content":"                        String by \u003d getEventOrDeadlineAttribute(input);"},{"lineNumber":76,"author":{"gitId":"justgnohUG"},"content":"                        Deadline deadline \u003d new Deadline(name, by);"},{"lineNumber":77,"author":{"gitId":"justgnohUG"},"content":"                        tasks.add(deadline);"},{"lineNumber":78,"author":{"gitId":"justgnohUG"},"content":""},{"lineNumber":79,"author":{"gitId":"justgnohUG"},"content":"                        System.out.println(\"\\n---------------------------------------\" );"},{"lineNumber":80,"author":{"gitId":"justgnohUG"},"content":"                        System.out.println(\"Got it. I\u0027ve added this task:\");"},{"lineNumber":81,"author":{"gitId":"justgnohUG"},"content":"                        System.out.println(deadline.toString());"},{"lineNumber":82,"author":{"gitId":"justgnohUG"},"content":"                        System.out.println(\"Now you have \" + tasks.size() + \" tasks in the list\");"},{"lineNumber":83,"author":{"gitId":"justgnohUG"},"content":"                        System.out.println(\"---------------------------------------\" );"},{"lineNumber":84,"author":{"gitId":"justgnohUG"},"content":"                    } catch (DukeException e) {"},{"lineNumber":85,"author":{"gitId":"justgnohUG"},"content":"                        e.printError(\"Hmm... You are either lacking a name or /by details!\");"},{"lineNumber":86,"author":{"gitId":"justgnohUG"},"content":"                    }"},{"lineNumber":87,"author":{"gitId":"justgnohUG"},"content":"                    break;"},{"lineNumber":88,"author":{"gitId":"justgnohUG"},"content":""},{"lineNumber":89,"author":{"gitId":"justgnohUG"},"content":"                case \"event\":"},{"lineNumber":90,"author":{"gitId":"justgnohUG"},"content":"                    try {"},{"lineNumber":91,"author":{"gitId":"justgnohUG"},"content":"                        String name \u003d getEventOrDeadlineName(input);"},{"lineNumber":92,"author":{"gitId":"justgnohUG"},"content":"                        String at \u003d getEventOrDeadlineAttribute(input);"},{"lineNumber":93,"author":{"gitId":"justgnohUG"},"content":""},{"lineNumber":94,"author":{"gitId":"justgnohUG"},"content":"                        Event event \u003d new Event(name,at);"},{"lineNumber":95,"author":{"gitId":"justgnohUG"},"content":"                        tasks.add(event);"},{"lineNumber":96,"author":{"gitId":"justgnohUG"},"content":""},{"lineNumber":97,"author":{"gitId":"justgnohUG"},"content":"                        System.out.println(\"\\n---------------------------------------\" );"},{"lineNumber":98,"author":{"gitId":"justgnohUG"},"content":"                        System.out.println(\"Got it. I\u0027ve added this task:\");"},{"lineNumber":99,"author":{"gitId":"justgnohUG"},"content":"                        System.out.println(event.toString());"},{"lineNumber":100,"author":{"gitId":"justgnohUG"},"content":"                        System.out.println(\"Now you have \" + tasks.size() + \" tasks in the list\");"},{"lineNumber":101,"author":{"gitId":"justgnohUG"},"content":"                        System.out.println(\"---------------------------------------\" );"},{"lineNumber":102,"author":{"gitId":"justgnohUG"},"content":"                    } catch (DukeException e) {"},{"lineNumber":103,"author":{"gitId":"justgnohUG"},"content":"                        e.printError(\"Hmm... You are either lacking a name or /at details!\");"},{"lineNumber":104,"author":{"gitId":"justgnohUG"},"content":"                    }"},{"lineNumber":105,"author":{"gitId":"justgnohUG"},"content":"                    break;"},{"lineNumber":106,"author":{"gitId":"justgnohUG"},"content":""},{"lineNumber":107,"author":{"gitId":"justgnohUG"},"content":"                case \"delete\":"},{"lineNumber":108,"author":{"gitId":"justgnohUG"},"content":"                    int i \u003d Integer.parseInt(input.split(\" \")[1]) - 1;"},{"lineNumber":109,"author":{"gitId":"justgnohUG"},"content":""},{"lineNumber":110,"author":{"gitId":"justgnohUG"},"content":"                    System.out.println(\"\\n---------------------------------------\" );"},{"lineNumber":111,"author":{"gitId":"justgnohUG"},"content":"                    System.out.println(\"Noted. I\u0027ve removed this task:\");"},{"lineNumber":112,"author":{"gitId":"justgnohUG"},"content":"                    System.out.println(tasks.get(i).toString());"},{"lineNumber":113,"author":{"gitId":"justgnohUG"},"content":"                    tasks.remove(i);"},{"lineNumber":114,"author":{"gitId":"justgnohUG"},"content":"                    System.out.println(\"Now you have \" + tasks.size() + \" tasks in the list\");"},{"lineNumber":115,"author":{"gitId":"justgnohUG"},"content":"                    System.out.println(\"---------------------------------------\" );"},{"lineNumber":116,"author":{"gitId":"justgnohUG"},"content":"                    break;"},{"lineNumber":117,"author":{"gitId":"justgnohUG"},"content":""},{"lineNumber":118,"author":{"gitId":"justgnohUG"},"content":"                default:"},{"lineNumber":119,"author":{"gitId":"justgnohUG"},"content":"//                    Does not exactly throw an exception*"},{"lineNumber":120,"author":{"gitId":"justgnohUG"},"content":"                    System.out.println(\"\\n---------------------------------------\" );"},{"lineNumber":121,"author":{"gitId":"justgnohUG"},"content":"                    System.out.println(\"Hol\u0027up, I don\u0027t know what that means :-(\");"},{"lineNumber":122,"author":{"gitId":"justgnohUG"},"content":"                    System.out.println(\"---------------------------------------\" );"},{"lineNumber":123,"author":{"gitId":"justgnohUG"},"content":"                    break;"},{"lineNumber":124,"author":{"gitId":"justgnohUG"},"content":"            }"},{"lineNumber":125,"author":{"gitId":"justgnohUG"},"content":"        }"},{"lineNumber":126,"author":{"gitId":"justgnohUG"},"content":"    }"},{"lineNumber":127,"author":{"gitId":"justgnohUG"},"content":""},{"lineNumber":128,"author":{"gitId":"justgnohUG"},"content":"    public static String getTodoName(String input) throws DukeException {"},{"lineNumber":129,"author":{"gitId":"justgnohUG"},"content":"        try {"},{"lineNumber":130,"author":{"gitId":"justgnohUG"},"content":"            String name \u003d input.split(\" \",2)[1].trim();"},{"lineNumber":131,"author":{"gitId":"justgnohUG"},"content":"            return name;"},{"lineNumber":132,"author":{"gitId":"justgnohUG"},"content":"        } catch (Exception e) {"},{"lineNumber":133,"author":{"gitId":"justgnohUG"},"content":"            throw new DukeException();"},{"lineNumber":134,"author":{"gitId":"justgnohUG"},"content":"        }"},{"lineNumber":135,"author":{"gitId":"justgnohUG"},"content":"    }"},{"lineNumber":136,"author":{"gitId":"justgnohUG"},"content":""},{"lineNumber":137,"author":{"gitId":"justgnohUG"},"content":"    public static String getEventOrDeadlineName(String input) throws DukeException {"},{"lineNumber":138,"author":{"gitId":"justgnohUG"},"content":"        try {"},{"lineNumber":139,"author":{"gitId":"justgnohUG"},"content":"            String name \u003d input.split(\"/\")[0].split(\" \",2)[1].trim();"},{"lineNumber":140,"author":{"gitId":"justgnohUG"},"content":"            return name;"},{"lineNumber":141,"author":{"gitId":"justgnohUG"},"content":"        } catch (Exception e) {"},{"lineNumber":142,"author":{"gitId":"justgnohUG"},"content":"            throw new DukeException();"},{"lineNumber":143,"author":{"gitId":"justgnohUG"},"content":"        }"},{"lineNumber":144,"author":{"gitId":"justgnohUG"},"content":"    }"},{"lineNumber":145,"author":{"gitId":"justgnohUG"},"content":""},{"lineNumber":146,"author":{"gitId":"justgnohUG"},"content":"    public static String getEventOrDeadlineAttribute(String byDate) throws DukeException {"},{"lineNumber":147,"author":{"gitId":"justgnohUG"},"content":"        try {"},{"lineNumber":148,"author":{"gitId":"justgnohUG"},"content":"            String atBy \u003d byDate.split(\"/\")[1].split(\" \",2)[1].trim();"},{"lineNumber":149,"author":{"gitId":"justgnohUG"},"content":"            return atBy;"},{"lineNumber":150,"author":{"gitId":"justgnohUG"},"content":"        } catch (Exception e) {"},{"lineNumber":151,"author":{"gitId":"justgnohUG"},"content":"            throw new DukeException();"},{"lineNumber":152,"author":{"gitId":"justgnohUG"},"content":"        }"},{"lineNumber":153,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":154,"author":{"gitId":"-"},"content":"}"}],"authorContributionMap":{"justgnohUG":145,"-":9}},{"path":"src/main/java/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"justgnohUG"},"content":"public class DukeException extends Exception {"},{"lineNumber":2,"author":{"gitId":"justgnohUG"},"content":""},{"lineNumber":3,"author":{"gitId":"justgnohUG"},"content":"    public DukeException() {"},{"lineNumber":4,"author":{"gitId":"justgnohUG"},"content":"        super();"},{"lineNumber":5,"author":{"gitId":"justgnohUG"},"content":"    }"},{"lineNumber":6,"author":{"gitId":"justgnohUG"},"content":""},{"lineNumber":7,"author":{"gitId":"justgnohUG"},"content":"    public DukeException(String message) {"},{"lineNumber":8,"author":{"gitId":"justgnohUG"},"content":"        super(message);"},{"lineNumber":9,"author":{"gitId":"justgnohUG"},"content":"    }"},{"lineNumber":10,"author":{"gitId":"justgnohUG"},"content":""},{"lineNumber":11,"author":{"gitId":"justgnohUG"},"content":"    public void printError(String message) {"},{"lineNumber":12,"author":{"gitId":"justgnohUG"},"content":"        System.out.println(\"\\n---------------------------------------\" );"},{"lineNumber":13,"author":{"gitId":"justgnohUG"},"content":"        System.out.println(message);"},{"lineNumber":14,"author":{"gitId":"justgnohUG"},"content":"        System.out.println(\"---------------------------------------\" );"},{"lineNumber":15,"author":{"gitId":"justgnohUG"},"content":"    }"},{"lineNumber":16,"author":{"gitId":"justgnohUG"},"content":"}"}],"authorContributionMap":{"justgnohUG":16}},{"path":"src/main/java/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"justgnohUG"},"content":"public class Event extends Task{"},{"lineNumber":2,"author":{"gitId":"justgnohUG"},"content":"    protected String at;"},{"lineNumber":3,"author":{"gitId":"justgnohUG"},"content":""},{"lineNumber":4,"author":{"gitId":"justgnohUG"},"content":"    public Event(String name, String at) {"},{"lineNumber":5,"author":{"gitId":"justgnohUG"},"content":"        super(name);"},{"lineNumber":6,"author":{"gitId":"justgnohUG"},"content":"        this.at \u003d at;"},{"lineNumber":7,"author":{"gitId":"justgnohUG"},"content":"    }"},{"lineNumber":8,"author":{"gitId":"justgnohUG"},"content":""},{"lineNumber":9,"author":{"gitId":"justgnohUG"},"content":"    @Override"},{"lineNumber":10,"author":{"gitId":"justgnohUG"},"content":"    public String toString() {"},{"lineNumber":11,"author":{"gitId":"justgnohUG"},"content":"        return \"[E]\" + super.toString() + \" (at: \" + at + \")\";"},{"lineNumber":12,"author":{"gitId":"justgnohUG"},"content":"    }"},{"lineNumber":13,"author":{"gitId":"justgnohUG"},"content":"}"}],"authorContributionMap":{"justgnohUG":13}},{"path":"src/main/java/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"justgnohUG"},"content":"public class Task {"},{"lineNumber":2,"author":{"gitId":"justgnohUG"},"content":"    protected boolean done;"},{"lineNumber":3,"author":{"gitId":"justgnohUG"},"content":"    protected String name;"},{"lineNumber":4,"author":{"gitId":"justgnohUG"},"content":""},{"lineNumber":5,"author":{"gitId":"justgnohUG"},"content":"    public Task(String name) {"},{"lineNumber":6,"author":{"gitId":"justgnohUG"},"content":"        this.done \u003d false;"},{"lineNumber":7,"author":{"gitId":"justgnohUG"},"content":"        this.name \u003d name;"},{"lineNumber":8,"author":{"gitId":"justgnohUG"},"content":"    }"},{"lineNumber":9,"author":{"gitId":"justgnohUG"},"content":""},{"lineNumber":10,"author":{"gitId":"justgnohUG"},"content":"    public void markDone() {"},{"lineNumber":11,"author":{"gitId":"justgnohUG"},"content":"        this.done \u003d true;"},{"lineNumber":12,"author":{"gitId":"justgnohUG"},"content":"    }"},{"lineNumber":13,"author":{"gitId":"justgnohUG"},"content":""},{"lineNumber":14,"author":{"gitId":"justgnohUG"},"content":"    public String getStatusIcon() {"},{"lineNumber":15,"author":{"gitId":"justgnohUG"},"content":"        return (done ? \"\\u2713\" : \"\\u2718\");"},{"lineNumber":16,"author":{"gitId":"justgnohUG"},"content":"    }"},{"lineNumber":17,"author":{"gitId":"justgnohUG"},"content":""},{"lineNumber":18,"author":{"gitId":"justgnohUG"},"content":"    @Override"},{"lineNumber":19,"author":{"gitId":"justgnohUG"},"content":"    public String toString() {"},{"lineNumber":20,"author":{"gitId":"justgnohUG"},"content":"        return \"[\" + this.getStatusIcon() + \"] \" + name;"},{"lineNumber":21,"author":{"gitId":"justgnohUG"},"content":"    }"},{"lineNumber":22,"author":{"gitId":"justgnohUG"},"content":"}"}],"authorContributionMap":{"justgnohUG":22}},{"path":"src/main/java/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"justgnohUG"},"content":"public class Todo extends Task {"},{"lineNumber":2,"author":{"gitId":"justgnohUG"},"content":""},{"lineNumber":3,"author":{"gitId":"justgnohUG"},"content":"    public Todo(String name) {"},{"lineNumber":4,"author":{"gitId":"justgnohUG"},"content":"        super(name);"},{"lineNumber":5,"author":{"gitId":"justgnohUG"},"content":"    }"},{"lineNumber":6,"author":{"gitId":"justgnohUG"},"content":""},{"lineNumber":7,"author":{"gitId":"justgnohUG"},"content":"    @Override"},{"lineNumber":8,"author":{"gitId":"justgnohUG"},"content":"    public String toString() {"},{"lineNumber":9,"author":{"gitId":"justgnohUG"},"content":"        return \"[T]\" + super.toString();"},{"lineNumber":10,"author":{"gitId":"justgnohUG"},"content":"    }"},{"lineNumber":11,"author":{"gitId":"justgnohUG"},"content":""},{"lineNumber":12,"author":{"gitId":"justgnohUG"},"content":"}"}],"authorContributionMap":{"justgnohUG":12}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"justgnohUG"},"content":"todo read book"},{"lineNumber":2,"author":{"gitId":"justgnohUG"},"content":"deadline return book /by Sunday"},{"lineNumber":3,"author":{"gitId":"justgnohUG"},"content":"event go to library /at Sunday"},{"lineNumber":4,"author":{"gitId":"justgnohUG"},"content":"done 1"},{"lineNumber":5,"author":{"gitId":"justgnohUG"},"content":"list"},{"lineNumber":6,"author":{"gitId":"justgnohUG"},"content":"done 2"},{"lineNumber":7,"author":{"gitId":"justgnohUG"},"content":"delete 2"},{"lineNumber":8,"author":{"gitId":"justgnohUG"},"content":"list"},{"lineNumber":9,"author":{"gitId":"justgnohUG"},"content":"bye"}],"authorContributionMap":{"justgnohUG":9}},{"path":"text-ui-test/runtest.sh","fileType":"sh","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"#!/usr/bin/env bash"},{"lineNumber":2,"author":{"gitId":"-"},"content":""},{"lineNumber":3,"author":{"gitId":"-"},"content":"# create bin directory if it doesn\u0027t exist"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if [ ! -d \"../bin\" ]"},{"lineNumber":5,"author":{"gitId":"-"},"content":"then"},{"lineNumber":6,"author":{"gitId":"-"},"content":"    mkdir ../bin"},{"lineNumber":7,"author":{"gitId":"-"},"content":"fi"},{"lineNumber":8,"author":{"gitId":"-"},"content":""},{"lineNumber":9,"author":{"gitId":"-"},"content":"# delete output from previous run"},{"lineNumber":10,"author":{"gitId":"-"},"content":"if [ -e \"./ACTUAL.TXT\" ]"},{"lineNumber":11,"author":{"gitId":"-"},"content":"then"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    rm ACTUAL.TXT"},{"lineNumber":13,"author":{"gitId":"-"},"content":"fi"},{"lineNumber":14,"author":{"gitId":"-"},"content":""},{"lineNumber":15,"author":{"gitId":"-"},"content":"# compile the code into the bin folder, terminates if error occurred"},{"lineNumber":16,"author":{"gitId":"justgnohUG"},"content":"if ! javac -cp ../src/ -Xlint:none -d ../bin ../src/main/java/*.java;"},{"lineNumber":17,"author":{"gitId":"-"},"content":"then"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    echo \"********** BUILD FAILURE **********\""},{"lineNumber":19,"author":{"gitId":"-"},"content":"    exit 1"},{"lineNumber":20,"author":{"gitId":"-"},"content":"fi"},{"lineNumber":21,"author":{"gitId":"-"},"content":""},{"lineNumber":22,"author":{"gitId":"-"},"content":"# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"},{"lineNumber":23,"author":{"gitId":"-"},"content":"java -classpath ../bin Duke \u003c input.txt \u003e ACTUAL.TXT"},{"lineNumber":24,"author":{"gitId":"-"},"content":""},{"lineNumber":25,"author":{"gitId":"-"},"content":"# convert to UNIX format"},{"lineNumber":26,"author":{"gitId":"-"},"content":"cp EXPECTED.TXT EXPECTED-UNIX.TXT"},{"lineNumber":27,"author":{"gitId":"-"},"content":"dos2unix ACTUAL.TXT EXPECTED-UNIX.TXT"},{"lineNumber":28,"author":{"gitId":"-"},"content":""},{"lineNumber":29,"author":{"gitId":"-"},"content":"# compare the output to the expected output"},{"lineNumber":30,"author":{"gitId":"-"},"content":"diff ACTUAL.TXT EXPECTED-UNIX.TXT"},{"lineNumber":31,"author":{"gitId":"-"},"content":"if [ $? -eq 0 ]"},{"lineNumber":32,"author":{"gitId":"-"},"content":"then"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    echo \"Test result: PASSED\""},{"lineNumber":34,"author":{"gitId":"-"},"content":"    exit 0"},{"lineNumber":35,"author":{"gitId":"-"},"content":"else"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    echo \"Test result: FAILED\""},{"lineNumber":37,"author":{"gitId":"-"},"content":"    exit 1"},{"lineNumber":38,"author":{"gitId":"-"},"content":"fi"}],"authorContributionMap":{"justgnohUG":1,"-":37}}]
