[{"path":"data/modoc_tm.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"justgnohUG"},"content":"T/0/homework"},{"lineNumber":2,"author":{"gitId":"justgnohUG"},"content":"E/0/study/school"},{"lineNumber":3,"author":{"gitId":"justgnohUG"},"content":"D/0/quiz/2020-09-17"}],"authorContributionMap":{"justgnohUG":3}},{"path":"src/main/java/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"justgnohUG"},"content":"import DukeTools.*;"},{"lineNumber":2,"author":{"gitId":"justgnohUG"},"content":""},{"lineNumber":3,"author":{"gitId":"justgnohUG"},"content":"import java.time.LocalDate;"},{"lineNumber":4,"author":{"gitId":"justgnohUG"},"content":"import java.time.format.DateTimeFormatter;"},{"lineNumber":5,"author":{"gitId":"justgnohUG"},"content":""},{"lineNumber":6,"author":{"gitId":"-"},"content":"public class Duke {"},{"lineNumber":7,"author":{"gitId":"justgnohUG"},"content":"    private Ui ui;"},{"lineNumber":8,"author":{"gitId":"justgnohUG"},"content":"    private TaskList taskList;"},{"lineNumber":9,"author":{"gitId":"justgnohUG"},"content":"    private Storage storage;"},{"lineNumber":10,"author":{"gitId":"justgnohUG"},"content":""},{"lineNumber":11,"author":{"gitId":"justgnohUG"},"content":"    public Duke(String filePath) {"},{"lineNumber":12,"author":{"gitId":"justgnohUG"},"content":"        ui \u003d new Ui();"},{"lineNumber":13,"author":{"gitId":"justgnohUG"},"content":"        storage \u003d new Storage(filePath);"},{"lineNumber":14,"author":{"gitId":"justgnohUG"},"content":"        try {"},{"lineNumber":15,"author":{"gitId":"justgnohUG"},"content":"            taskList \u003d new TaskList(storage.load());"},{"lineNumber":16,"author":{"gitId":"justgnohUG"},"content":"        } catch (DukeException e){"},{"lineNumber":17,"author":{"gitId":"justgnohUG"},"content":"            ui.showLoadingError();"},{"lineNumber":18,"author":{"gitId":"justgnohUG"},"content":"            taskList \u003d new TaskList();"},{"lineNumber":19,"author":{"gitId":"justgnohUG"},"content":"        }"},{"lineNumber":20,"author":{"gitId":"justgnohUG"},"content":"    }"},{"lineNumber":21,"author":{"gitId":"justgnohUG"},"content":""},{"lineNumber":22,"author":{"gitId":"justgnohUG"},"content":"    public void run() {"},{"lineNumber":23,"author":{"gitId":"justgnohUG"},"content":"//        Welcome Page"},{"lineNumber":24,"author":{"gitId":"justgnohUG"},"content":"        ui.printIntro();"},{"lineNumber":25,"author":{"gitId":"justgnohUG"},"content":""},{"lineNumber":26,"author":{"gitId":"justgnohUG"},"content":"//        Read Commands"},{"lineNumber":27,"author":{"gitId":"justgnohUG"},"content":"//        Scanner scan \u003d new Scanner(System.in);"},{"lineNumber":28,"author":{"gitId":"justgnohUG"},"content":"        String input \u003d \" \";"},{"lineNumber":29,"author":{"gitId":"justgnohUG"},"content":""},{"lineNumber":30,"author":{"gitId":"justgnohUG"},"content":"//        Create Tools.Parser"},{"lineNumber":31,"author":{"gitId":"justgnohUG"},"content":"        Parser parser \u003d new Parser();"},{"lineNumber":32,"author":{"gitId":"justgnohUG"},"content":""},{"lineNumber":33,"author":{"gitId":"justgnohUG"},"content":"        while(!input.equals(\"bye\")) {"},{"lineNumber":34,"author":{"gitId":"justgnohUG"},"content":"            parser.readLine();"},{"lineNumber":35,"author":{"gitId":"justgnohUG"},"content":"            input \u003d parser.read;"},{"lineNumber":36,"author":{"gitId":"justgnohUG"},"content":"            String command \u003d parser.getCommand(input);"},{"lineNumber":37,"author":{"gitId":"justgnohUG"},"content":""},{"lineNumber":38,"author":{"gitId":"justgnohUG"},"content":"            switch (command) {"},{"lineNumber":39,"author":{"gitId":"justgnohUG"},"content":"                case \"bye\":"},{"lineNumber":40,"author":{"gitId":"justgnohUG"},"content":"                    storage.save(taskList);"},{"lineNumber":41,"author":{"gitId":"justgnohUG"},"content":"                    ui.printBye();"},{"lineNumber":42,"author":{"gitId":"justgnohUG"},"content":"                    break;"},{"lineNumber":43,"author":{"gitId":"justgnohUG"},"content":""},{"lineNumber":44,"author":{"gitId":"justgnohUG"},"content":"                case \"list\":"},{"lineNumber":45,"author":{"gitId":"justgnohUG"},"content":"                    ui.printList(taskList);"},{"lineNumber":46,"author":{"gitId":"justgnohUG"},"content":"                    break;"},{"lineNumber":47,"author":{"gitId":"justgnohUG"},"content":""},{"lineNumber":48,"author":{"gitId":"justgnohUG"},"content":"                case \"done\":"},{"lineNumber":49,"author":{"gitId":"justgnohUG"},"content":"//                    Possible Error: index provided is out of bounds (NullPointerException"},{"lineNumber":50,"author":{"gitId":"justgnohUG"},"content":"                    int index \u003d Integer.parseInt(input.split(\" \")[1]) - 1;"},{"lineNumber":51,"author":{"gitId":"justgnohUG"},"content":"                    Task task \u003d taskList.getSingleTask(index);"},{"lineNumber":52,"author":{"gitId":"justgnohUG"},"content":"                    task.markDone();"},{"lineNumber":53,"author":{"gitId":"justgnohUG"},"content":""},{"lineNumber":54,"author":{"gitId":"justgnohUG"},"content":"                    ui.printDone(task);"},{"lineNumber":55,"author":{"gitId":"justgnohUG"},"content":"                    break;"},{"lineNumber":56,"author":{"gitId":"justgnohUG"},"content":""},{"lineNumber":57,"author":{"gitId":"justgnohUG"},"content":"                case \"todo\":"},{"lineNumber":58,"author":{"gitId":"justgnohUG"},"content":"                    try {"},{"lineNumber":59,"author":{"gitId":"justgnohUG"},"content":"                        String name \u003d getTodoName(input);"},{"lineNumber":60,"author":{"gitId":"justgnohUG"},"content":"                        Todo todo \u003d new Todo(name);"},{"lineNumber":61,"author":{"gitId":"justgnohUG"},"content":"                        taskList.addTask(todo);"},{"lineNumber":62,"author":{"gitId":"justgnohUG"},"content":"                        ui.printTask(todo, taskList.getSize());"},{"lineNumber":63,"author":{"gitId":"justgnohUG"},"content":"                    } catch(DukeException e) {"},{"lineNumber":64,"author":{"gitId":"justgnohUG"},"content":"                        e.printError(\"Come On Fella! Your ToDo description cannot be empty!\");"},{"lineNumber":65,"author":{"gitId":"justgnohUG"},"content":"                    }"},{"lineNumber":66,"author":{"gitId":"justgnohUG"},"content":"                    break;"},{"lineNumber":67,"author":{"gitId":"justgnohUG"},"content":""},{"lineNumber":68,"author":{"gitId":"justgnohUG"},"content":"                case \"deadline\":"},{"lineNumber":69,"author":{"gitId":"justgnohUG"},"content":"                    try{"},{"lineNumber":70,"author":{"gitId":"justgnohUG"},"content":"                        String name \u003d getEventOrDeadlineName(input);"},{"lineNumber":71,"author":{"gitId":"justgnohUG"},"content":"                        String by \u003d getEventOrDeadlineAttribute(input);"},{"lineNumber":72,"author":{"gitId":"justgnohUG"},"content":"                        LocalDate date \u003d LocalDate.parse(by, DateTimeFormatter.ofPattern(\"yyyy-MM-dd\"));"},{"lineNumber":73,"author":{"gitId":"justgnohUG"},"content":"                        Deadline deadline \u003d new Deadline(name, date);"},{"lineNumber":74,"author":{"gitId":"justgnohUG"},"content":"                        taskList.addTask(deadline);"},{"lineNumber":75,"author":{"gitId":"justgnohUG"},"content":"                        ui.printTask(deadline, taskList.getSize());"},{"lineNumber":76,"author":{"gitId":"justgnohUG"},"content":""},{"lineNumber":77,"author":{"gitId":"justgnohUG"},"content":"                    } catch (DukeException e) {"},{"lineNumber":78,"author":{"gitId":"justgnohUG"},"content":"                        e.printError(\"Hmm... You are either lacking a name or /by details!\");"},{"lineNumber":79,"author":{"gitId":"justgnohUG"},"content":"                    }"},{"lineNumber":80,"author":{"gitId":"justgnohUG"},"content":"                    break;"},{"lineNumber":81,"author":{"gitId":"justgnohUG"},"content":""},{"lineNumber":82,"author":{"gitId":"justgnohUG"},"content":"                case \"event\":"},{"lineNumber":83,"author":{"gitId":"justgnohUG"},"content":"                    try {"},{"lineNumber":84,"author":{"gitId":"justgnohUG"},"content":"                        String name \u003d getEventOrDeadlineName(input);"},{"lineNumber":85,"author":{"gitId":"justgnohUG"},"content":"                        String at \u003d getEventOrDeadlineAttribute(input);"},{"lineNumber":86,"author":{"gitId":"justgnohUG"},"content":"                        Event event \u003d new Event(name,at);"},{"lineNumber":87,"author":{"gitId":"justgnohUG"},"content":"                        taskList.addTask(event);"},{"lineNumber":88,"author":{"gitId":"justgnohUG"},"content":"                        ui.printTask(event, taskList.getSize());"},{"lineNumber":89,"author":{"gitId":"justgnohUG"},"content":""},{"lineNumber":90,"author":{"gitId":"justgnohUG"},"content":"                    } catch (DukeException e) {"},{"lineNumber":91,"author":{"gitId":"justgnohUG"},"content":"                        e.printError(\"Hmm... You are either lacking a name or /at details!\");"},{"lineNumber":92,"author":{"gitId":"justgnohUG"},"content":"                    }"},{"lineNumber":93,"author":{"gitId":"justgnohUG"},"content":"                    break;"},{"lineNumber":94,"author":{"gitId":"justgnohUG"},"content":""},{"lineNumber":95,"author":{"gitId":"justgnohUG"},"content":"                case \"delete\":"},{"lineNumber":96,"author":{"gitId":"justgnohUG"},"content":"                    int i \u003d Integer.parseInt(input.split(\" \")[1]) - 1;"},{"lineNumber":97,"author":{"gitId":"justgnohUG"},"content":"                    ui.printDelete(taskList.getSingleTask(i), taskList.getSize()-1);"},{"lineNumber":98,"author":{"gitId":"justgnohUG"},"content":"                    taskList.deleteTask(i);"},{"lineNumber":99,"author":{"gitId":"justgnohUG"},"content":"                    break;"},{"lineNumber":100,"author":{"gitId":"justgnohUG"},"content":""},{"lineNumber":101,"author":{"gitId":"justgnohUG"},"content":"                default:"},{"lineNumber":102,"author":{"gitId":"justgnohUG"},"content":"//                    Does not exactly throw an exception*"},{"lineNumber":103,"author":{"gitId":"justgnohUG"},"content":"                    ui.printUnknownCommand();"},{"lineNumber":104,"author":{"gitId":"justgnohUG"},"content":"                    break;"},{"lineNumber":105,"author":{"gitId":"justgnohUG"},"content":"            }"},{"lineNumber":106,"author":{"gitId":"justgnohUG"},"content":"        }"},{"lineNumber":107,"author":{"gitId":"justgnohUG"},"content":""},{"lineNumber":108,"author":{"gitId":"justgnohUG"},"content":"    }"},{"lineNumber":109,"author":{"gitId":"justgnohUG"},"content":""},{"lineNumber":110,"author":{"gitId":"-"},"content":"    public static void main(String[] args) {"},{"lineNumber":111,"author":{"gitId":"justgnohUG"},"content":"//        filePath has been hard-coded: /data/\u003cfilename\u003e"},{"lineNumber":112,"author":{"gitId":"justgnohUG"},"content":"        new Duke(\"/data/modoc_tm.txt\").run();"},{"lineNumber":113,"author":{"gitId":"justgnohUG"},"content":"    }"},{"lineNumber":114,"author":{"gitId":"justgnohUG"},"content":""},{"lineNumber":115,"author":{"gitId":"justgnohUG"},"content":"    public static String getTodoName(String input) throws DukeException {"},{"lineNumber":116,"author":{"gitId":"justgnohUG"},"content":"        try {"},{"lineNumber":117,"author":{"gitId":"justgnohUG"},"content":"            String name \u003d input.split(\" \",2)[1].trim();"},{"lineNumber":118,"author":{"gitId":"justgnohUG"},"content":"            return name;"},{"lineNumber":119,"author":{"gitId":"justgnohUG"},"content":"        } catch (Exception e) {"},{"lineNumber":120,"author":{"gitId":"justgnohUG"},"content":"            throw new DukeException();"},{"lineNumber":121,"author":{"gitId":"justgnohUG"},"content":"        }"},{"lineNumber":122,"author":{"gitId":"justgnohUG"},"content":"    }"},{"lineNumber":123,"author":{"gitId":"justgnohUG"},"content":""},{"lineNumber":124,"author":{"gitId":"justgnohUG"},"content":"    public static String getEventOrDeadlineName(String input) throws DukeException {"},{"lineNumber":125,"author":{"gitId":"justgnohUG"},"content":"        try {"},{"lineNumber":126,"author":{"gitId":"justgnohUG"},"content":"            String name \u003d input.split(\"/\")[0].split(\" \",2)[1].trim();"},{"lineNumber":127,"author":{"gitId":"justgnohUG"},"content":"            return name;"},{"lineNumber":128,"author":{"gitId":"justgnohUG"},"content":"        } catch (Exception e) {"},{"lineNumber":129,"author":{"gitId":"justgnohUG"},"content":"            throw new DukeException();"},{"lineNumber":130,"author":{"gitId":"justgnohUG"},"content":"        }"},{"lineNumber":131,"author":{"gitId":"justgnohUG"},"content":"    }"},{"lineNumber":132,"author":{"gitId":"justgnohUG"},"content":""},{"lineNumber":133,"author":{"gitId":"justgnohUG"},"content":"    public static String getEventOrDeadlineAttribute(String byDate) throws DukeException {"},{"lineNumber":134,"author":{"gitId":"justgnohUG"},"content":"        try {"},{"lineNumber":135,"author":{"gitId":"justgnohUG"},"content":"            String atBy \u003d byDate.split(\"/\")[1].split(\" \",2)[1].trim();"},{"lineNumber":136,"author":{"gitId":"justgnohUG"},"content":"            return atBy;"},{"lineNumber":137,"author":{"gitId":"justgnohUG"},"content":"        } catch (Exception e) {"},{"lineNumber":138,"author":{"gitId":"justgnohUG"},"content":"            throw new DukeException();"},{"lineNumber":139,"author":{"gitId":"justgnohUG"},"content":"        }"},{"lineNumber":140,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":141,"author":{"gitId":"justgnohUG"},"content":""},{"lineNumber":142,"author":{"gitId":"-"},"content":"}"}],"authorContributionMap":{"justgnohUG":138,"-":4}},{"path":"src/main/java/DukeTools/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"justgnohUG"},"content":"package DukeTools;"},{"lineNumber":2,"author":{"gitId":"justgnohUG"},"content":""},{"lineNumber":3,"author":{"gitId":"justgnohUG"},"content":"import java.time.LocalDate;"},{"lineNumber":4,"author":{"gitId":"justgnohUG"},"content":""},{"lineNumber":5,"author":{"gitId":"justgnohUG"},"content":"public class Deadline extends Task {"},{"lineNumber":6,"author":{"gitId":"justgnohUG"},"content":"    protected LocalDate by;"},{"lineNumber":7,"author":{"gitId":"justgnohUG"},"content":""},{"lineNumber":8,"author":{"gitId":"justgnohUG"},"content":"    public Deadline(String name, LocalDate by) {"},{"lineNumber":9,"author":{"gitId":"justgnohUG"},"content":"        super(name);"},{"lineNumber":10,"author":{"gitId":"justgnohUG"},"content":"        this.by \u003d by;"},{"lineNumber":11,"author":{"gitId":"justgnohUG"},"content":"    }"},{"lineNumber":12,"author":{"gitId":"justgnohUG"},"content":""},{"lineNumber":13,"author":{"gitId":"justgnohUG"},"content":""},{"lineNumber":14,"author":{"gitId":"justgnohUG"},"content":"    public Deadline(String name, LocalDate by, Boolean isDone) {"},{"lineNumber":15,"author":{"gitId":"justgnohUG"},"content":"        super(name, isDone);"},{"lineNumber":16,"author":{"gitId":"justgnohUG"},"content":"        this.by \u003d by;"},{"lineNumber":17,"author":{"gitId":"justgnohUG"},"content":"    }"},{"lineNumber":18,"author":{"gitId":"justgnohUG"},"content":""},{"lineNumber":19,"author":{"gitId":"justgnohUG"},"content":""},{"lineNumber":20,"author":{"gitId":"justgnohUG"},"content":"    public String processDate(LocalDate originalDate) {"},{"lineNumber":21,"author":{"gitId":"justgnohUG"},"content":"//        LocalDate date \u003d LocalDate.parse(originalDate, DateTimeFormatter.ofPattern(\"yyyy-MM-dd\"));"},{"lineNumber":22,"author":{"gitId":"justgnohUG"},"content":"        String month \u003d originalDate.getMonth().toString();"},{"lineNumber":23,"author":{"gitId":"justgnohUG"},"content":"        String threeLetteredMonth \u003d month.substring(0,1) + month.substring(1,3).toLowerCase();"},{"lineNumber":24,"author":{"gitId":"justgnohUG"},"content":"        String day \u003d Integer.toString(originalDate.getDayOfMonth());"},{"lineNumber":25,"author":{"gitId":"justgnohUG"},"content":"        String year \u003d Integer.toString(originalDate.getYear());"},{"lineNumber":26,"author":{"gitId":"justgnohUG"},"content":""},{"lineNumber":27,"author":{"gitId":"justgnohUG"},"content":"        String result \u003d threeLetteredMonth + \" \" + day + \" \" + year;"},{"lineNumber":28,"author":{"gitId":"justgnohUG"},"content":""},{"lineNumber":29,"author":{"gitId":"justgnohUG"},"content":"        return result;"},{"lineNumber":30,"author":{"gitId":"justgnohUG"},"content":"    }"},{"lineNumber":31,"author":{"gitId":"justgnohUG"},"content":"                    "},{"lineNumber":32,"author":{"gitId":"justgnohUG"},"content":"    @Override"},{"lineNumber":33,"author":{"gitId":"justgnohUG"},"content":"    public String toString() {"},{"lineNumber":34,"author":{"gitId":"justgnohUG"},"content":"        return \"[D]\" + super.toString() + \" (by: \" + processDate(by) + \")\";"},{"lineNumber":35,"author":{"gitId":"justgnohUG"},"content":"    }"},{"lineNumber":36,"author":{"gitId":"justgnohUG"},"content":"}"}],"authorContributionMap":{"justgnohUG":36}},{"path":"src/main/java/DukeTools/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"justgnohUG"},"content":"package DukeTools;"},{"lineNumber":2,"author":{"gitId":"justgnohUG"},"content":""},{"lineNumber":3,"author":{"gitId":"justgnohUG"},"content":"public class DukeException extends Exception {"},{"lineNumber":4,"author":{"gitId":"justgnohUG"},"content":""},{"lineNumber":5,"author":{"gitId":"justgnohUG"},"content":"    public DukeException() {"},{"lineNumber":6,"author":{"gitId":"justgnohUG"},"content":"        super();"},{"lineNumber":7,"author":{"gitId":"justgnohUG"},"content":"    }"},{"lineNumber":8,"author":{"gitId":"justgnohUG"},"content":""},{"lineNumber":9,"author":{"gitId":"justgnohUG"},"content":"    public DukeException(String message) {"},{"lineNumber":10,"author":{"gitId":"justgnohUG"},"content":"        super(message);"},{"lineNumber":11,"author":{"gitId":"justgnohUG"},"content":"    }"},{"lineNumber":12,"author":{"gitId":"justgnohUG"},"content":""},{"lineNumber":13,"author":{"gitId":"justgnohUG"},"content":"    public void printError(String message) {"},{"lineNumber":14,"author":{"gitId":"justgnohUG"},"content":"        System.out.println(\"\\n---------------------------------------\" );"},{"lineNumber":15,"author":{"gitId":"justgnohUG"},"content":"        System.out.println(message);"},{"lineNumber":16,"author":{"gitId":"justgnohUG"},"content":"        System.out.println(\"---------------------------------------\" );"},{"lineNumber":17,"author":{"gitId":"justgnohUG"},"content":"    }"},{"lineNumber":18,"author":{"gitId":"justgnohUG"},"content":"}"}],"authorContributionMap":{"justgnohUG":18}},{"path":"src/main/java/DukeTools/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"justgnohUG"},"content":"package DukeTools;"},{"lineNumber":2,"author":{"gitId":"justgnohUG"},"content":""},{"lineNumber":3,"author":{"gitId":"justgnohUG"},"content":"public class Event extends Task{"},{"lineNumber":4,"author":{"gitId":"justgnohUG"},"content":"    protected String at;"},{"lineNumber":5,"author":{"gitId":"justgnohUG"},"content":""},{"lineNumber":6,"author":{"gitId":"justgnohUG"},"content":"    public Event(String name, String at) {"},{"lineNumber":7,"author":{"gitId":"justgnohUG"},"content":"        super(name);"},{"lineNumber":8,"author":{"gitId":"justgnohUG"},"content":"        this.at \u003d at;"},{"lineNumber":9,"author":{"gitId":"justgnohUG"},"content":"    }"},{"lineNumber":10,"author":{"gitId":"justgnohUG"},"content":""},{"lineNumber":11,"author":{"gitId":"justgnohUG"},"content":"    public Event(String name, String at, boolean isDone) {"},{"lineNumber":12,"author":{"gitId":"justgnohUG"},"content":"        super(name, isDone);"},{"lineNumber":13,"author":{"gitId":"justgnohUG"},"content":"        this.at \u003d at;"},{"lineNumber":14,"author":{"gitId":"justgnohUG"},"content":"    }"},{"lineNumber":15,"author":{"gitId":"justgnohUG"},"content":""},{"lineNumber":16,"author":{"gitId":"justgnohUG"},"content":"    @Override"},{"lineNumber":17,"author":{"gitId":"justgnohUG"},"content":"    public String toString() {"},{"lineNumber":18,"author":{"gitId":"justgnohUG"},"content":"        return \"[E]\" + super.toString() + \" (at: \" + at + \")\";"},{"lineNumber":19,"author":{"gitId":"justgnohUG"},"content":"    }"},{"lineNumber":20,"author":{"gitId":"justgnohUG"},"content":"}"}],"authorContributionMap":{"justgnohUG":20}},{"path":"src/main/java/DukeTools/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"justgnohUG"},"content":"package DukeTools;"},{"lineNumber":2,"author":{"gitId":"justgnohUG"},"content":""},{"lineNumber":3,"author":{"gitId":"justgnohUG"},"content":"import java.util.Scanner;"},{"lineNumber":4,"author":{"gitId":"justgnohUG"},"content":""},{"lineNumber":5,"author":{"gitId":"justgnohUG"},"content":"public class Parser {"},{"lineNumber":6,"author":{"gitId":"justgnohUG"},"content":"    public String read;"},{"lineNumber":7,"author":{"gitId":"justgnohUG"},"content":""},{"lineNumber":8,"author":{"gitId":"justgnohUG"},"content":"    Scanner scan \u003d new Scanner(System.in);"},{"lineNumber":9,"author":{"gitId":"justgnohUG"},"content":""},{"lineNumber":10,"author":{"gitId":"justgnohUG"},"content":"    public void readLine() {"},{"lineNumber":11,"author":{"gitId":"justgnohUG"},"content":"        this.read \u003d scan.nextLine().trim();"},{"lineNumber":12,"author":{"gitId":"justgnohUG"},"content":"    }"},{"lineNumber":13,"author":{"gitId":"justgnohUG"},"content":""},{"lineNumber":14,"author":{"gitId":"justgnohUG"},"content":"    public String getCommand(String input) {"},{"lineNumber":15,"author":{"gitId":"justgnohUG"},"content":"        String command \u003d input.split(\" \")[0];"},{"lineNumber":16,"author":{"gitId":"justgnohUG"},"content":"        return command;"},{"lineNumber":17,"author":{"gitId":"justgnohUG"},"content":"    }"},{"lineNumber":18,"author":{"gitId":"justgnohUG"},"content":"}"}],"authorContributionMap":{"justgnohUG":18}},{"path":"src/main/java/DukeTools/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"justgnohUG"},"content":"package DukeTools;"},{"lineNumber":2,"author":{"gitId":"justgnohUG"},"content":""},{"lineNumber":3,"author":{"gitId":"justgnohUG"},"content":"import java.io.BufferedReader;"},{"lineNumber":4,"author":{"gitId":"justgnohUG"},"content":"import java.io.FileReader;"},{"lineNumber":5,"author":{"gitId":"justgnohUG"},"content":"import java.io.FileWriter;"},{"lineNumber":6,"author":{"gitId":"justgnohUG"},"content":"import java.io.IOException;"},{"lineNumber":7,"author":{"gitId":"justgnohUG"},"content":"import java.nio.file.Files;"},{"lineNumber":8,"author":{"gitId":"justgnohUG"},"content":"import java.nio.file.Paths;"},{"lineNumber":9,"author":{"gitId":"justgnohUG"},"content":"import java.time.LocalDate;"},{"lineNumber":10,"author":{"gitId":"justgnohUG"},"content":"import java.time.format.DateTimeFormatter;"},{"lineNumber":11,"author":{"gitId":"justgnohUG"},"content":"import java.util.ArrayList;"},{"lineNumber":12,"author":{"gitId":"justgnohUG"},"content":""},{"lineNumber":13,"author":{"gitId":"justgnohUG"},"content":"public class Storage {"},{"lineNumber":14,"author":{"gitId":"justgnohUG"},"content":"    String filePath;"},{"lineNumber":15,"author":{"gitId":"justgnohUG"},"content":""},{"lineNumber":16,"author":{"gitId":"justgnohUG"},"content":"    public Storage(String filePath) {"},{"lineNumber":17,"author":{"gitId":"justgnohUG"},"content":"        this.filePath \u003d filePath;"},{"lineNumber":18,"author":{"gitId":"justgnohUG"},"content":"    }"},{"lineNumber":19,"author":{"gitId":"justgnohUG"},"content":""},{"lineNumber":20,"author":{"gitId":"justgnohUG"},"content":"    public ArrayList\u003cTask\u003e load() throws DukeException {"},{"lineNumber":21,"author":{"gitId":"justgnohUG"},"content":"//        fetchTasks()"},{"lineNumber":22,"author":{"gitId":"justgnohUG"},"content":"        ArrayList\u003cTask\u003e result \u003d new ArrayList\u003c\u003e();"},{"lineNumber":23,"author":{"gitId":"justgnohUG"},"content":"        String currDir \u003d System.getProperty(\"user.dir\");"},{"lineNumber":24,"author":{"gitId":"justgnohUG"},"content":"        String expectedDir \u003d currDir + this.filePath;"},{"lineNumber":25,"author":{"gitId":"justgnohUG"},"content":"//        Hardcoded to: \"/data/modoc_tm.txt\";"},{"lineNumber":26,"author":{"gitId":"justgnohUG"},"content":""},{"lineNumber":27,"author":{"gitId":"justgnohUG"},"content":"        BufferedReader reader;"},{"lineNumber":28,"author":{"gitId":"justgnohUG"},"content":"        try {"},{"lineNumber":29,"author":{"gitId":"justgnohUG"},"content":"            reader \u003d new BufferedReader(new FileReader(expectedDir));"},{"lineNumber":30,"author":{"gitId":"justgnohUG"},"content":"            String lineRead \u003d reader.readLine();"},{"lineNumber":31,"author":{"gitId":"justgnohUG"},"content":"            while (lineRead !\u003d null) {"},{"lineNumber":32,"author":{"gitId":"justgnohUG"},"content":"                char taskType \u003d lineRead.charAt(0);"},{"lineNumber":33,"author":{"gitId":"justgnohUG"},"content":"                String[] data \u003d lineRead.split(\"/\");"},{"lineNumber":34,"author":{"gitId":"justgnohUG"},"content":"                Boolean isDone \u003d (Integer.parseInt(data[1]) \u003d\u003d 1);"},{"lineNumber":35,"author":{"gitId":"justgnohUG"},"content":"                if (taskType \u003d\u003d \u0027E\u0027) {"},{"lineNumber":36,"author":{"gitId":"justgnohUG"},"content":"                    Event event \u003d new Event(data[2], data[3], isDone);"},{"lineNumber":37,"author":{"gitId":"justgnohUG"},"content":"                    result.add(event);"},{"lineNumber":38,"author":{"gitId":"justgnohUG"},"content":"                } else if (taskType \u003d\u003d \u0027D\u0027) {"},{"lineNumber":39,"author":{"gitId":"justgnohUG"},"content":"                    String unparsedDate \u003d data[3];"},{"lineNumber":40,"author":{"gitId":"justgnohUG"},"content":"                    LocalDate date \u003d LocalDate.parse(unparsedDate, DateTimeFormatter.ofPattern(\"yyyy-MM-dd\"));"},{"lineNumber":41,"author":{"gitId":"justgnohUG"},"content":"                    Deadline deadline \u003d new Deadline(data[2], date, isDone);"},{"lineNumber":42,"author":{"gitId":"justgnohUG"},"content":"                    result.add(deadline);"},{"lineNumber":43,"author":{"gitId":"justgnohUG"},"content":"                } else {"},{"lineNumber":44,"author":{"gitId":"justgnohUG"},"content":"                    Todo todo \u003d new Todo(data[2], isDone);"},{"lineNumber":45,"author":{"gitId":"justgnohUG"},"content":"                    result.add(todo);"},{"lineNumber":46,"author":{"gitId":"justgnohUG"},"content":"                }"},{"lineNumber":47,"author":{"gitId":"justgnohUG"},"content":"                lineRead \u003d reader.readLine();"},{"lineNumber":48,"author":{"gitId":"justgnohUG"},"content":"            }"},{"lineNumber":49,"author":{"gitId":"justgnohUG"},"content":"        } catch (IOException e) {"},{"lineNumber":50,"author":{"gitId":"justgnohUG"},"content":"            throw new DukeException();"},{"lineNumber":51,"author":{"gitId":"justgnohUG"},"content":"        }"},{"lineNumber":52,"author":{"gitId":"justgnohUG"},"content":"        return result;"},{"lineNumber":53,"author":{"gitId":"justgnohUG"},"content":"    }"},{"lineNumber":54,"author":{"gitId":"justgnohUG"},"content":""},{"lineNumber":55,"author":{"gitId":"justgnohUG"},"content":"//    Currently hard-coded into position"},{"lineNumber":56,"author":{"gitId":"justgnohUG"},"content":"    public void save(TaskList tasks) {"},{"lineNumber":57,"author":{"gitId":"justgnohUG"},"content":"        String currDir \u003d System.getProperty(\"user.dir\");"},{"lineNumber":58,"author":{"gitId":"justgnohUG"},"content":"        String expectedDir \u003d currDir + \"/data\";"},{"lineNumber":59,"author":{"gitId":"justgnohUG"},"content":""},{"lineNumber":60,"author":{"gitId":"justgnohUG"},"content":"        try {"},{"lineNumber":61,"author":{"gitId":"justgnohUG"},"content":"//            Creates directory if doesn\u0027t exist"},{"lineNumber":62,"author":{"gitId":"justgnohUG"},"content":"            Files.createDirectories(Paths.get(expectedDir));"},{"lineNumber":63,"author":{"gitId":"justgnohUG"},"content":"//            Automatically creates file if it doesn\u0027t exist"},{"lineNumber":64,"author":{"gitId":"justgnohUG"},"content":"            FileWriter writer \u003d new FileWriter(expectedDir + \"/modoc_tm.txt\");"},{"lineNumber":65,"author":{"gitId":"justgnohUG"},"content":""},{"lineNumber":66,"author":{"gitId":"justgnohUG"},"content":"            ArrayList\u003cTask\u003e listTask \u003d tasks.getTasks();"},{"lineNumber":67,"author":{"gitId":"justgnohUG"},"content":""},{"lineNumber":68,"author":{"gitId":"justgnohUG"},"content":"            for (Task task : listTask) {"},{"lineNumber":69,"author":{"gitId":"justgnohUG"},"content":"                String result;"},{"lineNumber":70,"author":{"gitId":"justgnohUG"},"content":""},{"lineNumber":71,"author":{"gitId":"justgnohUG"},"content":"                Class taskType \u003d task.getClass();"},{"lineNumber":72,"author":{"gitId":"justgnohUG"},"content":"                boolean taskStatus \u003d task.isDone;"},{"lineNumber":73,"author":{"gitId":"justgnohUG"},"content":"                String description \u003d task.name;"},{"lineNumber":74,"author":{"gitId":"justgnohUG"},"content":""},{"lineNumber":75,"author":{"gitId":"justgnohUG"},"content":"                if (taskType.equals(Event.class)) {"},{"lineNumber":76,"author":{"gitId":"justgnohUG"},"content":"                    result \u003d \"E\" + \"/\" +  (taskStatus ? \"1\" : \"0\") + \"/\" + description + \"/\" + ((Event) task).at;"},{"lineNumber":77,"author":{"gitId":"justgnohUG"},"content":"                } else if (taskType.equals(Deadline.class)) {"},{"lineNumber":78,"author":{"gitId":"justgnohUG"},"content":"                    result \u003d \"D\" + \"/\" +  (taskStatus ? \"1\" : \"0\") + \"/\" + description + \"/\" + ((Deadline) task).by;"},{"lineNumber":79,"author":{"gitId":"justgnohUG"},"content":"                } else {"},{"lineNumber":80,"author":{"gitId":"justgnohUG"},"content":"                    result \u003d \"T\" + \"/\" +  (taskStatus ? \"1\" : \"0\") + \"/\" + description;"},{"lineNumber":81,"author":{"gitId":"justgnohUG"},"content":"                }"},{"lineNumber":82,"author":{"gitId":"justgnohUG"},"content":"                writer.write(result + \"\\n\");"},{"lineNumber":83,"author":{"gitId":"justgnohUG"},"content":"            }"},{"lineNumber":84,"author":{"gitId":"justgnohUG"},"content":"            writer.close();"},{"lineNumber":85,"author":{"gitId":"justgnohUG"},"content":"        } catch (IOException e) {"},{"lineNumber":86,"author":{"gitId":"justgnohUG"},"content":"            System.out.println(\"saveTask error\");"},{"lineNumber":87,"author":{"gitId":"justgnohUG"},"content":"            e.printStackTrace();"},{"lineNumber":88,"author":{"gitId":"justgnohUG"},"content":"        }"},{"lineNumber":89,"author":{"gitId":"justgnohUG"},"content":"    }"},{"lineNumber":90,"author":{"gitId":"justgnohUG"},"content":"}"}],"authorContributionMap":{"justgnohUG":90}},{"path":"src/main/java/DukeTools/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"justgnohUG"},"content":"package DukeTools;"},{"lineNumber":2,"author":{"gitId":"justgnohUG"},"content":""},{"lineNumber":3,"author":{"gitId":"justgnohUG"},"content":"public class Task {"},{"lineNumber":4,"author":{"gitId":"justgnohUG"},"content":"    protected boolean isDone;"},{"lineNumber":5,"author":{"gitId":"justgnohUG"},"content":"    public String name;"},{"lineNumber":6,"author":{"gitId":"justgnohUG"},"content":""},{"lineNumber":7,"author":{"gitId":"justgnohUG"},"content":"    public Task(String name) {"},{"lineNumber":8,"author":{"gitId":"justgnohUG"},"content":"        this.isDone \u003d false;"},{"lineNumber":9,"author":{"gitId":"justgnohUG"},"content":"        this.name \u003d name;"},{"lineNumber":10,"author":{"gitId":"justgnohUG"},"content":"    }"},{"lineNumber":11,"author":{"gitId":"justgnohUG"},"content":""},{"lineNumber":12,"author":{"gitId":"justgnohUG"},"content":"    public Task(String name, Boolean isDone) {"},{"lineNumber":13,"author":{"gitId":"justgnohUG"},"content":"        this.isDone \u003d isDone;"},{"lineNumber":14,"author":{"gitId":"justgnohUG"},"content":"        this.name \u003d name;"},{"lineNumber":15,"author":{"gitId":"justgnohUG"},"content":"    }"},{"lineNumber":16,"author":{"gitId":"justgnohUG"},"content":""},{"lineNumber":17,"author":{"gitId":"justgnohUG"},"content":"    public void markDone() {"},{"lineNumber":18,"author":{"gitId":"justgnohUG"},"content":"        this.isDone \u003d true;"},{"lineNumber":19,"author":{"gitId":"justgnohUG"},"content":"    }"},{"lineNumber":20,"author":{"gitId":"justgnohUG"},"content":""},{"lineNumber":21,"author":{"gitId":"justgnohUG"},"content":"    public String getStatusIcon() {"},{"lineNumber":22,"author":{"gitId":"justgnohUG"},"content":"        return (isDone ? \"\\u2713\" : \"\\u2718\");"},{"lineNumber":23,"author":{"gitId":"justgnohUG"},"content":"    }"},{"lineNumber":24,"author":{"gitId":"justgnohUG"},"content":""},{"lineNumber":25,"author":{"gitId":"justgnohUG"},"content":"    @Override"},{"lineNumber":26,"author":{"gitId":"justgnohUG"},"content":"    public String toString() {"},{"lineNumber":27,"author":{"gitId":"justgnohUG"},"content":"        return \"[\" + this.getStatusIcon() + \"] \" + name;"},{"lineNumber":28,"author":{"gitId":"justgnohUG"},"content":"    }"},{"lineNumber":29,"author":{"gitId":"justgnohUG"},"content":"}"}],"authorContributionMap":{"justgnohUG":29}},{"path":"src/main/java/DukeTools/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"justgnohUG"},"content":"package DukeTools;"},{"lineNumber":2,"author":{"gitId":"justgnohUG"},"content":""},{"lineNumber":3,"author":{"gitId":"justgnohUG"},"content":"import java.util.ArrayList;"},{"lineNumber":4,"author":{"gitId":"justgnohUG"},"content":""},{"lineNumber":5,"author":{"gitId":"justgnohUG"},"content":"public class TaskList {"},{"lineNumber":6,"author":{"gitId":"justgnohUG"},"content":"    private ArrayList\u003cTask\u003e tasks;"},{"lineNumber":7,"author":{"gitId":"justgnohUG"},"content":""},{"lineNumber":8,"author":{"gitId":"justgnohUG"},"content":"    public TaskList() {"},{"lineNumber":9,"author":{"gitId":"justgnohUG"},"content":"        this.tasks \u003d new ArrayList\u003cTask\u003e();"},{"lineNumber":10,"author":{"gitId":"justgnohUG"},"content":"    }"},{"lineNumber":11,"author":{"gitId":"justgnohUG"},"content":""},{"lineNumber":12,"author":{"gitId":"justgnohUG"},"content":"    public TaskList(ArrayList\u003cTask\u003e tasks) {"},{"lineNumber":13,"author":{"gitId":"justgnohUG"},"content":"        this.tasks \u003d tasks;"},{"lineNumber":14,"author":{"gitId":"justgnohUG"},"content":"    }"},{"lineNumber":15,"author":{"gitId":"justgnohUG"},"content":""},{"lineNumber":16,"author":{"gitId":"justgnohUG"},"content":"    public void addTask(Task task) {"},{"lineNumber":17,"author":{"gitId":"justgnohUG"},"content":"        this.tasks.add(task);"},{"lineNumber":18,"author":{"gitId":"justgnohUG"},"content":"    }"},{"lineNumber":19,"author":{"gitId":"justgnohUG"},"content":""},{"lineNumber":20,"author":{"gitId":"justgnohUG"},"content":"    public void deleteTask(int index) {"},{"lineNumber":21,"author":{"gitId":"justgnohUG"},"content":"        this.tasks.remove(index);"},{"lineNumber":22,"author":{"gitId":"justgnohUG"},"content":"    }"},{"lineNumber":23,"author":{"gitId":"justgnohUG"},"content":""},{"lineNumber":24,"author":{"gitId":"justgnohUG"},"content":"    public ArrayList\u003cTask\u003e getTasks() {"},{"lineNumber":25,"author":{"gitId":"justgnohUG"},"content":"        return this.tasks;"},{"lineNumber":26,"author":{"gitId":"justgnohUG"},"content":"    }"},{"lineNumber":27,"author":{"gitId":"justgnohUG"},"content":""},{"lineNumber":28,"author":{"gitId":"justgnohUG"},"content":"    public Task getSingleTask(int index) {"},{"lineNumber":29,"author":{"gitId":"justgnohUG"},"content":"        return this.tasks.get(index);"},{"lineNumber":30,"author":{"gitId":"justgnohUG"},"content":"    }"},{"lineNumber":31,"author":{"gitId":"justgnohUG"},"content":""},{"lineNumber":32,"author":{"gitId":"justgnohUG"},"content":"    public int getSize() {"},{"lineNumber":33,"author":{"gitId":"justgnohUG"},"content":"        return this.tasks.size();"},{"lineNumber":34,"author":{"gitId":"justgnohUG"},"content":"    }"},{"lineNumber":35,"author":{"gitId":"justgnohUG"},"content":"}"}],"authorContributionMap":{"justgnohUG":35}},{"path":"src/main/java/DukeTools/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"justgnohUG"},"content":"package DukeTools;"},{"lineNumber":2,"author":{"gitId":"justgnohUG"},"content":""},{"lineNumber":3,"author":{"gitId":"justgnohUG"},"content":"public class Todo extends Task {"},{"lineNumber":4,"author":{"gitId":"justgnohUG"},"content":""},{"lineNumber":5,"author":{"gitId":"justgnohUG"},"content":"    public Todo(String name) {"},{"lineNumber":6,"author":{"gitId":"justgnohUG"},"content":"        super(name);"},{"lineNumber":7,"author":{"gitId":"justgnohUG"},"content":"    }"},{"lineNumber":8,"author":{"gitId":"justgnohUG"},"content":"    public Todo(String name, Boolean isDone) {"},{"lineNumber":9,"author":{"gitId":"justgnohUG"},"content":"        super(name,isDone);"},{"lineNumber":10,"author":{"gitId":"justgnohUG"},"content":"    }"},{"lineNumber":11,"author":{"gitId":"justgnohUG"},"content":""},{"lineNumber":12,"author":{"gitId":"justgnohUG"},"content":"    @Override"},{"lineNumber":13,"author":{"gitId":"justgnohUG"},"content":"    public String toString() {"},{"lineNumber":14,"author":{"gitId":"justgnohUG"},"content":"        return \"[T]\" + super.toString();"},{"lineNumber":15,"author":{"gitId":"justgnohUG"},"content":"    }"},{"lineNumber":16,"author":{"gitId":"justgnohUG"},"content":""},{"lineNumber":17,"author":{"gitId":"justgnohUG"},"content":"}"}],"authorContributionMap":{"justgnohUG":17}},{"path":"src/main/java/DukeTools/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"justgnohUG"},"content":"package DukeTools;"},{"lineNumber":2,"author":{"gitId":"justgnohUG"},"content":""},{"lineNumber":3,"author":{"gitId":"justgnohUG"},"content":"public class Ui {"},{"lineNumber":4,"author":{"gitId":"justgnohUG"},"content":""},{"lineNumber":5,"author":{"gitId":"justgnohUG"},"content":"    public void printIntro() {"},{"lineNumber":6,"author":{"gitId":"justgnohUG"},"content":"        String logo \u003d \"  __  __  ___  ___   ___   ___   _____ __  __ \\n\" +"},{"lineNumber":7,"author":{"gitId":"justgnohUG"},"content":"                \" |  \\\\/  |/ _ \\\\|   \\\\ / _ \\\\ / __| |_   _|  \\\\/  |\\n\" +"},{"lineNumber":8,"author":{"gitId":"justgnohUG"},"content":"                \" | |\\\\/| | (_) | |) | (_) | (__    | | | |\\\\/| |\\n\" +"},{"lineNumber":9,"author":{"gitId":"justgnohUG"},"content":"                \" |_|  |_|\\\\___/|___/ \\\\___/ \\\\___|   |_| |_|  |_|\\n\" +"},{"lineNumber":10,"author":{"gitId":"justgnohUG"},"content":"                \"                                              \\n\";"},{"lineNumber":11,"author":{"gitId":"justgnohUG"},"content":"        String line \u003d \"---------------------------------------\\n\";"},{"lineNumber":12,"author":{"gitId":"justgnohUG"},"content":"        String line2 \u003d \"It is I, MODOC_TM... \\n(Mechanized Organism Designed Only for Computing and Tools.Task Management) \\n\";"},{"lineNumber":13,"author":{"gitId":"justgnohUG"},"content":"        String line3 \u003d \"Feed me the commands I so desire...\\n\";"},{"lineNumber":14,"author":{"gitId":"justgnohUG"},"content":"        String line4 \u003d \"---------------------------------------\";"},{"lineNumber":15,"author":{"gitId":"justgnohUG"},"content":""},{"lineNumber":16,"author":{"gitId":"justgnohUG"},"content":"        System.out.println(line+logo+line2+line3+line4);"},{"lineNumber":17,"author":{"gitId":"justgnohUG"},"content":"    }"},{"lineNumber":18,"author":{"gitId":"justgnohUG"},"content":""},{"lineNumber":19,"author":{"gitId":"justgnohUG"},"content":"    public void printBye() {"},{"lineNumber":20,"author":{"gitId":"justgnohUG"},"content":"        System.out.println(\"\\n---------------------------------------\" );"},{"lineNumber":21,"author":{"gitId":"justgnohUG"},"content":"        System.out.println(\"Bye. MODOC_TM Shutting Down...\");"},{"lineNumber":22,"author":{"gitId":"justgnohUG"},"content":"        System.out.println(\"---------------------------------------\" );"},{"lineNumber":23,"author":{"gitId":"justgnohUG"},"content":"    }"},{"lineNumber":24,"author":{"gitId":"justgnohUG"},"content":""},{"lineNumber":25,"author":{"gitId":"justgnohUG"},"content":"    public void printList(TaskList taskList) {"},{"lineNumber":26,"author":{"gitId":"justgnohUG"},"content":"        System.out.println(\"\\n---------------------------------------\" );"},{"lineNumber":27,"author":{"gitId":"justgnohUG"},"content":"        System.out.println(\"Here are the tasks in your list:\");"},{"lineNumber":28,"author":{"gitId":"justgnohUG"},"content":"        for (int i \u003d 0; i \u003c taskList.getSize(); i++) {"},{"lineNumber":29,"author":{"gitId":"justgnohUG"},"content":"            System.out.println(String.valueOf(i+1) + \".\" + taskList.getSingleTask(i).toString());"},{"lineNumber":30,"author":{"gitId":"justgnohUG"},"content":"        }"},{"lineNumber":31,"author":{"gitId":"justgnohUG"},"content":"        System.out.println(\"---------------------------------------\" );"},{"lineNumber":32,"author":{"gitId":"justgnohUG"},"content":"    }"},{"lineNumber":33,"author":{"gitId":"justgnohUG"},"content":""},{"lineNumber":34,"author":{"gitId":"justgnohUG"},"content":"    public void printDone(Task task) {"},{"lineNumber":35,"author":{"gitId":"justgnohUG"},"content":"        System.out.println(\"\\n---------------------------------------\" );"},{"lineNumber":36,"author":{"gitId":"justgnohUG"},"content":"        System.out.println(\"Nice! I\u0027ve marked this task as done:\");"},{"lineNumber":37,"author":{"gitId":"justgnohUG"},"content":"        System.out.println(\"[\" + task.getStatusIcon() + \"] \" + task.name.trim());"},{"lineNumber":38,"author":{"gitId":"justgnohUG"},"content":"        System.out.println(\"---------------------------------------\" );"},{"lineNumber":39,"author":{"gitId":"justgnohUG"},"content":"    }"},{"lineNumber":40,"author":{"gitId":"justgnohUG"},"content":""},{"lineNumber":41,"author":{"gitId":"justgnohUG"},"content":"    public void printTask(Task task, int remTask) {"},{"lineNumber":42,"author":{"gitId":"justgnohUG"},"content":"        System.out.println(\"\\n---------------------------------------\" );"},{"lineNumber":43,"author":{"gitId":"justgnohUG"},"content":"        System.out.println(\"Got it. I\u0027ve added this task:\");"},{"lineNumber":44,"author":{"gitId":"justgnohUG"},"content":"        System.out.println(task.toString());"},{"lineNumber":45,"author":{"gitId":"justgnohUG"},"content":"        System.out.println(\"Now you have \" + remTask + \" tasks in the list\");"},{"lineNumber":46,"author":{"gitId":"justgnohUG"},"content":"        System.out.println(\"---------------------------------------\" );"},{"lineNumber":47,"author":{"gitId":"justgnohUG"},"content":"    }"},{"lineNumber":48,"author":{"gitId":"justgnohUG"},"content":""},{"lineNumber":49,"author":{"gitId":"justgnohUG"},"content":"    public void printDelete(Task task, int remTask) {"},{"lineNumber":50,"author":{"gitId":"justgnohUG"},"content":"        System.out.println(\"\\n---------------------------------------\" );"},{"lineNumber":51,"author":{"gitId":"justgnohUG"},"content":"        System.out.println(\"Noted. I\u0027ve removed this task:\");"},{"lineNumber":52,"author":{"gitId":"justgnohUG"},"content":"        System.out.println(task.toString());"},{"lineNumber":53,"author":{"gitId":"justgnohUG"},"content":"        System.out.println(\"Now you have \" + remTask + \" tasks in the list\");"},{"lineNumber":54,"author":{"gitId":"justgnohUG"},"content":"        System.out.println(\"---------------------------------------\" );"},{"lineNumber":55,"author":{"gitId":"justgnohUG"},"content":"    }"},{"lineNumber":56,"author":{"gitId":"justgnohUG"},"content":""},{"lineNumber":57,"author":{"gitId":"justgnohUG"},"content":"    public void printUnknownCommand() {"},{"lineNumber":58,"author":{"gitId":"justgnohUG"},"content":"        System.out.println(\"\\n---------------------------------------\" );"},{"lineNumber":59,"author":{"gitId":"justgnohUG"},"content":"        System.out.println(\"Hol\u0027up, I don\u0027t know what that means :-(\");"},{"lineNumber":60,"author":{"gitId":"justgnohUG"},"content":"        System.out.println(\"---------------------------------------\" );"},{"lineNumber":61,"author":{"gitId":"justgnohUG"},"content":"    }"},{"lineNumber":62,"author":{"gitId":"justgnohUG"},"content":""},{"lineNumber":63,"author":{"gitId":"justgnohUG"},"content":"    public void showLoadingError() {"},{"lineNumber":64,"author":{"gitId":"justgnohUG"},"content":"        System.out.println(\"Existing tasks not found.\");"},{"lineNumber":65,"author":{"gitId":"justgnohUG"},"content":"    }"},{"lineNumber":66,"author":{"gitId":"justgnohUG"},"content":""},{"lineNumber":67,"author":{"gitId":"justgnohUG"},"content":"}"}],"authorContributionMap":{"justgnohUG":67}},{"path":"src/test/java/TaskListTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"justgnohUG"},"content":"import DukeTools.Task;"},{"lineNumber":2,"author":{"gitId":"justgnohUG"},"content":"import DukeTools.TaskList;"},{"lineNumber":3,"author":{"gitId":"justgnohUG"},"content":"import org.junit.jupiter.api.Test;"},{"lineNumber":4,"author":{"gitId":"justgnohUG"},"content":"import static org.junit.jupiter.api.Assertions.*;"},{"lineNumber":5,"author":{"gitId":"justgnohUG"},"content":""},{"lineNumber":6,"author":{"gitId":"justgnohUG"},"content":"import java.util.ArrayList;"},{"lineNumber":7,"author":{"gitId":"justgnohUG"},"content":""},{"lineNumber":8,"author":{"gitId":"justgnohUG"},"content":"class TaskListTest {"},{"lineNumber":9,"author":{"gitId":"justgnohUG"},"content":""},{"lineNumber":10,"author":{"gitId":"justgnohUG"},"content":"    @Test"},{"lineNumber":11,"author":{"gitId":"justgnohUG"},"content":"    void addTask() {"},{"lineNumber":12,"author":{"gitId":"justgnohUG"},"content":"        Task dummyTask \u003d new Task(\"homework\");"},{"lineNumber":13,"author":{"gitId":"justgnohUG"},"content":""},{"lineNumber":14,"author":{"gitId":"justgnohUG"},"content":"        ArrayList\u003cTask\u003e taskArrayList \u003d new ArrayList\u003cTask\u003e();"},{"lineNumber":15,"author":{"gitId":"justgnohUG"},"content":"        taskArrayList.add(dummyTask);"},{"lineNumber":16,"author":{"gitId":"justgnohUG"},"content":""},{"lineNumber":17,"author":{"gitId":"justgnohUG"},"content":"        TaskList tl \u003d new TaskList();"},{"lineNumber":18,"author":{"gitId":"justgnohUG"},"content":"        tl.addTask(dummyTask);"},{"lineNumber":19,"author":{"gitId":"justgnohUG"},"content":"        assertEquals(taskArrayList.get(0), tl.getSingleTask(0));"},{"lineNumber":20,"author":{"gitId":"justgnohUG"},"content":"    }"},{"lineNumber":21,"author":{"gitId":"justgnohUG"},"content":""},{"lineNumber":22,"author":{"gitId":"justgnohUG"},"content":"    @Test"},{"lineNumber":23,"author":{"gitId":"justgnohUG"},"content":"    void deleteTask() {"},{"lineNumber":24,"author":{"gitId":"justgnohUG"},"content":"        Task dummyTask \u003d new Task(\"homework\");"},{"lineNumber":25,"author":{"gitId":"justgnohUG"},"content":"        ArrayList\u003cTask\u003e taskArrayList \u003d new ArrayList\u003cTask\u003e();"},{"lineNumber":26,"author":{"gitId":"justgnohUG"},"content":"        taskArrayList.add(dummyTask);"},{"lineNumber":27,"author":{"gitId":"justgnohUG"},"content":"        taskArrayList.remove(0);"},{"lineNumber":28,"author":{"gitId":"justgnohUG"},"content":""},{"lineNumber":29,"author":{"gitId":"justgnohUG"},"content":"        TaskList tl \u003d new TaskList();"},{"lineNumber":30,"author":{"gitId":"justgnohUG"},"content":"        tl.addTask(dummyTask);"},{"lineNumber":31,"author":{"gitId":"justgnohUG"},"content":"        tl.deleteTask(0);"},{"lineNumber":32,"author":{"gitId":"justgnohUG"},"content":"        assertEquals(taskArrayList.size(), tl.getSize());"},{"lineNumber":33,"author":{"gitId":"justgnohUG"},"content":"    }"},{"lineNumber":34,"author":{"gitId":"justgnohUG"},"content":""},{"lineNumber":35,"author":{"gitId":"justgnohUG"},"content":"    //  To be tested"},{"lineNumber":36,"author":{"gitId":"justgnohUG"},"content":"    @Test"},{"lineNumber":37,"author":{"gitId":"justgnohUG"},"content":"    void getTasks() {"},{"lineNumber":38,"author":{"gitId":"justgnohUG"},"content":"    }"},{"lineNumber":39,"author":{"gitId":"justgnohUG"},"content":""},{"lineNumber":40,"author":{"gitId":"justgnohUG"},"content":"    @Test"},{"lineNumber":41,"author":{"gitId":"justgnohUG"},"content":"    void getSingleTask() {"},{"lineNumber":42,"author":{"gitId":"justgnohUG"},"content":"    }"},{"lineNumber":43,"author":{"gitId":"justgnohUG"},"content":""},{"lineNumber":44,"author":{"gitId":"justgnohUG"},"content":"    @Test"},{"lineNumber":45,"author":{"gitId":"justgnohUG"},"content":"    void getSize() {"},{"lineNumber":46,"author":{"gitId":"justgnohUG"},"content":"    }"},{"lineNumber":47,"author":{"gitId":"justgnohUG"},"content":"}"}],"authorContributionMap":{"justgnohUG":47}},{"path":"src/test/java/TodoTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"justgnohUG"},"content":"import DukeTools.Todo;"},{"lineNumber":2,"author":{"gitId":"justgnohUG"},"content":""},{"lineNumber":3,"author":{"gitId":"justgnohUG"},"content":"import org.junit.jupiter.api.Test;"},{"lineNumber":4,"author":{"gitId":"justgnohUG"},"content":"import static org.junit.jupiter.api.Assertions.*;"},{"lineNumber":5,"author":{"gitId":"justgnohUG"},"content":""},{"lineNumber":6,"author":{"gitId":"justgnohUG"},"content":"class TodoTest {"},{"lineNumber":7,"author":{"gitId":"justgnohUG"},"content":"    @Test"},{"lineNumber":8,"author":{"gitId":"justgnohUG"},"content":"    void testToString() {"},{"lineNumber":9,"author":{"gitId":"justgnohUG"},"content":"        Todo todo \u003d new Todo(\"homework\");"},{"lineNumber":10,"author":{"gitId":"justgnohUG"},"content":"        assertEquals(\"[T]\" + \"[\" + todo.getStatusIcon() + \"] \" + todo.name, todo.toString());"},{"lineNumber":11,"author":{"gitId":"justgnohUG"},"content":"    }"},{"lineNumber":12,"author":{"gitId":"justgnohUG"},"content":""},{"lineNumber":13,"author":{"gitId":"justgnohUG"},"content":"}"}],"authorContributionMap":{"justgnohUG":13}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"justgnohUG"},"content":"todo read book"},{"lineNumber":2,"author":{"gitId":"justgnohUG"},"content":"deadline return book /by Sunday"},{"lineNumber":3,"author":{"gitId":"justgnohUG"},"content":"event go to library /at Sunday"},{"lineNumber":4,"author":{"gitId":"justgnohUG"},"content":"done 1"},{"lineNumber":5,"author":{"gitId":"justgnohUG"},"content":"list"},{"lineNumber":6,"author":{"gitId":"justgnohUG"},"content":"done 2"},{"lineNumber":7,"author":{"gitId":"justgnohUG"},"content":"delete 2"},{"lineNumber":8,"author":{"gitId":"justgnohUG"},"content":"list"},{"lineNumber":9,"author":{"gitId":"justgnohUG"},"content":"bye"}],"authorContributionMap":{"justgnohUG":9}},{"path":"text-ui-test/runtest.sh","fileType":"sh","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"#!/usr/bin/env bash"},{"lineNumber":2,"author":{"gitId":"-"},"content":""},{"lineNumber":3,"author":{"gitId":"-"},"content":"# create bin directory if it doesn\u0027t exist"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if [ ! -d \"../bin\" ]"},{"lineNumber":5,"author":{"gitId":"-"},"content":"then"},{"lineNumber":6,"author":{"gitId":"-"},"content":"    mkdir ../bin"},{"lineNumber":7,"author":{"gitId":"-"},"content":"fi"},{"lineNumber":8,"author":{"gitId":"-"},"content":""},{"lineNumber":9,"author":{"gitId":"-"},"content":"# delete output from previous run"},{"lineNumber":10,"author":{"gitId":"-"},"content":"if [ -e \"./ACTUAL.TXT\" ]"},{"lineNumber":11,"author":{"gitId":"-"},"content":"then"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    rm ACTUAL.TXT"},{"lineNumber":13,"author":{"gitId":"-"},"content":"fi"},{"lineNumber":14,"author":{"gitId":"-"},"content":""},{"lineNumber":15,"author":{"gitId":"-"},"content":"# compile the code into the bin folder, terminates if error occurred"},{"lineNumber":16,"author":{"gitId":"justgnohUG"},"content":"if ! javac -cp ../src/ -Xlint:none -d ../bin ../src/main/java/*.java;"},{"lineNumber":17,"author":{"gitId":"-"},"content":"then"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    echo \"********** BUILD FAILURE **********\""},{"lineNumber":19,"author":{"gitId":"-"},"content":"    exit 1"},{"lineNumber":20,"author":{"gitId":"-"},"content":"fi"},{"lineNumber":21,"author":{"gitId":"-"},"content":""},{"lineNumber":22,"author":{"gitId":"-"},"content":"# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"},{"lineNumber":23,"author":{"gitId":"-"},"content":"java -classpath ../bin Duke \u003c input.txt \u003e ACTUAL.TXT"},{"lineNumber":24,"author":{"gitId":"-"},"content":""},{"lineNumber":25,"author":{"gitId":"-"},"content":"# convert to UNIX format"},{"lineNumber":26,"author":{"gitId":"-"},"content":"cp EXPECTED.TXT EXPECTED-UNIX.TXT"},{"lineNumber":27,"author":{"gitId":"-"},"content":"dos2unix ACTUAL.TXT EXPECTED-UNIX.TXT"},{"lineNumber":28,"author":{"gitId":"-"},"content":""},{"lineNumber":29,"author":{"gitId":"-"},"content":"# compare the output to the expected output"},{"lineNumber":30,"author":{"gitId":"-"},"content":"diff ACTUAL.TXT EXPECTED-UNIX.TXT"},{"lineNumber":31,"author":{"gitId":"-"},"content":"if [ $? -eq 0 ]"},{"lineNumber":32,"author":{"gitId":"-"},"content":"then"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    echo \"Test result: PASSED\""},{"lineNumber":34,"author":{"gitId":"-"},"content":"    exit 0"},{"lineNumber":35,"author":{"gitId":"-"},"content":"else"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    echo \"Test result: FAILED\""},{"lineNumber":37,"author":{"gitId":"-"},"content":"    exit 1"},{"lineNumber":38,"author":{"gitId":"-"},"content":"fi"}],"authorContributionMap":{"justgnohUG":1,"-":37}}]
