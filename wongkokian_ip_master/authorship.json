[{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027checkstyle\u0027"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027"},{"lineNumber":6,"author":{"gitId":"-"},"content":"}"},{"lineNumber":7,"author":{"gitId":"-"},"content":""},{"lineNumber":8,"author":{"gitId":"-"},"content":"repositories {"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    mavenCentral()"},{"lineNumber":10,"author":{"gitId":"-"},"content":"}"},{"lineNumber":11,"author":{"gitId":"-"},"content":""},{"lineNumber":12,"author":{"gitId":"-"},"content":"dependencies {"},{"lineNumber":13,"author":{"gitId":"wongkokian"},"content":"    String javaFxVersion \u003d \u002711\u0027"},{"lineNumber":14,"author":{"gitId":"wongkokian"},"content":""},{"lineNumber":15,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.5.0\u0027"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.5.0\u0027"},{"lineNumber":17,"author":{"gitId":"wongkokian"},"content":""},{"lineNumber":18,"author":{"gitId":"wongkokian"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027"},{"lineNumber":19,"author":{"gitId":"wongkokian"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"},{"lineNumber":20,"author":{"gitId":"wongkokian"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"},{"lineNumber":21,"author":{"gitId":"wongkokian"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027"},{"lineNumber":22,"author":{"gitId":"wongkokian"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"},{"lineNumber":23,"author":{"gitId":"wongkokian"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"},{"lineNumber":24,"author":{"gitId":"wongkokian"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027"},{"lineNumber":25,"author":{"gitId":"wongkokian"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"},{"lineNumber":26,"author":{"gitId":"wongkokian"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"},{"lineNumber":27,"author":{"gitId":"wongkokian"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027"},{"lineNumber":28,"author":{"gitId":"wongkokian"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"},{"lineNumber":29,"author":{"gitId":"wongkokian"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"},{"lineNumber":30,"author":{"gitId":"-"},"content":"}"},{"lineNumber":31,"author":{"gitId":"-"},"content":""},{"lineNumber":32,"author":{"gitId":"-"},"content":"test {"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    useJUnitPlatform()"},{"lineNumber":34,"author":{"gitId":"-"},"content":""},{"lineNumber":35,"author":{"gitId":"-"},"content":"    testLogging {"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\""},{"lineNumber":37,"author":{"gitId":"-"},"content":""},{"lineNumber":38,"author":{"gitId":"-"},"content":"        showExceptions true"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\""},{"lineNumber":40,"author":{"gitId":"-"},"content":"        showCauses true"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        showStackTraces true"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":44,"author":{"gitId":"-"},"content":"}"},{"lineNumber":45,"author":{"gitId":"-"},"content":""},{"lineNumber":46,"author":{"gitId":"-"},"content":"application {"},{"lineNumber":47,"author":{"gitId":"wongkokian"},"content":"    mainClassName \u003d \"duke.Launcher\""},{"lineNumber":48,"author":{"gitId":"-"},"content":"}"},{"lineNumber":49,"author":{"gitId":"-"},"content":""},{"lineNumber":50,"author":{"gitId":"-"},"content":"shadowJar {"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    archiveBaseName \u003d \"duke\""},{"lineNumber":52,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null"},{"lineNumber":53,"author":{"gitId":"-"},"content":"}"},{"lineNumber":54,"author":{"gitId":"-"},"content":""},{"lineNumber":55,"author":{"gitId":"-"},"content":"checkstyle {"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    toolVersion \u003d \u00278.29\u0027"},{"lineNumber":57,"author":{"gitId":"-"},"content":"}"},{"lineNumber":58,"author":{"gitId":"-"},"content":""},{"lineNumber":59,"author":{"gitId":"-"},"content":"run{"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in"},{"lineNumber":61,"author":{"gitId":"-"},"content":"}"}],"authorContributionMap":{"wongkokian":16,"-":45}},{"path":"docs/README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"# User Guide"},{"lineNumber":2,"author":{"gitId":"-"},"content":""},{"lineNumber":3,"author":{"gitId":"-"},"content":"## Features "},{"lineNumber":4,"author":{"gitId":"-"},"content":""},{"lineNumber":5,"author":{"gitId":"wongkokian"},"content":"### Adding a Todo: `todo`"},{"lineNumber":6,"author":{"gitId":"wongkokian"},"content":"Adds a todo to the task list."},{"lineNumber":7,"author":{"gitId":"-"},"content":""},{"lineNumber":8,"author":{"gitId":"wongkokian"},"content":"Format: `todo DESCRIPTION`"},{"lineNumber":9,"author":{"gitId":"-"},"content":""},{"lineNumber":10,"author":{"gitId":"wongkokian"},"content":"Example:"},{"lineNumber":11,"author":{"gitId":"-"},"content":""},{"lineNumber":12,"author":{"gitId":"wongkokian"},"content":"`todo read book`"},{"lineNumber":13,"author":{"gitId":"-"},"content":""},{"lineNumber":14,"author":{"gitId":"wongkokian"},"content":"Expected outcome:"},{"lineNumber":15,"author":{"gitId":"wongkokian"},"content":""},{"lineNumber":16,"author":{"gitId":"wongkokian"},"content":"![Todo Example](https://raw.githubusercontent.com/wongkokian/ip/master/src/main/resources/images/todo.png)"},{"lineNumber":17,"author":{"gitId":"wongkokian"},"content":""},{"lineNumber":18,"author":{"gitId":"wongkokian"},"content":"### Adding a Deadline: `deadline`"},{"lineNumber":19,"author":{"gitId":"wongkokian"},"content":"Adds a deadline to the task list."},{"lineNumber":20,"author":{"gitId":"wongkokian"},"content":""},{"lineNumber":21,"author":{"gitId":"wongkokian"},"content":"Format: `deadline DESCRIPTION /by DATE`"},{"lineNumber":22,"author":{"gitId":"wongkokian"},"content":""},{"lineNumber":23,"author":{"gitId":"wongkokian"},"content":"* `DATE` must be in the format `yyyy-mm-dd`."},{"lineNumber":24,"author":{"gitId":"wongkokian"},"content":""},{"lineNumber":25,"author":{"gitId":"wongkokian"},"content":"Example:"},{"lineNumber":26,"author":{"gitId":"wongkokian"},"content":""},{"lineNumber":27,"author":{"gitId":"wongkokian"},"content":"`deadline return book /by 2021-05-10`"},{"lineNumber":28,"author":{"gitId":"wongkokian"},"content":""},{"lineNumber":29,"author":{"gitId":"wongkokian"},"content":"Expected outcome:"},{"lineNumber":30,"author":{"gitId":"wongkokian"},"content":""},{"lineNumber":31,"author":{"gitId":"wongkokian"},"content":"![Deadline Example](https://raw.githubusercontent.com/wongkokian/ip/master/src/main/resources/images/deadline.png)"},{"lineNumber":32,"author":{"gitId":"wongkokian"},"content":""},{"lineNumber":33,"author":{"gitId":"wongkokian"},"content":"### Adding an Event: `event`"},{"lineNumber":34,"author":{"gitId":"wongkokian"},"content":"Adds an event to the task list."},{"lineNumber":35,"author":{"gitId":"wongkokian"},"content":""},{"lineNumber":36,"author":{"gitId":"wongkokian"},"content":"Format: `event DESCRIPTION /at DATE`"},{"lineNumber":37,"author":{"gitId":"wongkokian"},"content":""},{"lineNumber":38,"author":{"gitId":"wongkokian"},"content":"* `DATE` must be in the format `yyyy-mm-dd`."},{"lineNumber":39,"author":{"gitId":"wongkokian"},"content":""},{"lineNumber":40,"author":{"gitId":"wongkokian"},"content":"Example:"},{"lineNumber":41,"author":{"gitId":"wongkokian"},"content":""},{"lineNumber":42,"author":{"gitId":"wongkokian"},"content":"`event meeting /at 2021-04-21`"},{"lineNumber":43,"author":{"gitId":"wongkokian"},"content":""},{"lineNumber":44,"author":{"gitId":"wongkokian"},"content":"Expected outcome:"},{"lineNumber":45,"author":{"gitId":"wongkokian"},"content":""},{"lineNumber":46,"author":{"gitId":"wongkokian"},"content":"![Event Example](https://raw.githubusercontent.com/wongkokian/ip/master/src/main/resources/images/event.png)"},{"lineNumber":47,"author":{"gitId":"wongkokian"},"content":""},{"lineNumber":48,"author":{"gitId":"wongkokian"},"content":"### Listing all tasks: `list`"},{"lineNumber":49,"author":{"gitId":"wongkokian"},"content":"Lists all tasks in the task list."},{"lineNumber":50,"author":{"gitId":"wongkokian"},"content":""},{"lineNumber":51,"author":{"gitId":"wongkokian"},"content":"Format: `list`"},{"lineNumber":52,"author":{"gitId":"wongkokian"},"content":""},{"lineNumber":53,"author":{"gitId":"wongkokian"},"content":"Example:"},{"lineNumber":54,"author":{"gitId":"wongkokian"},"content":""},{"lineNumber":55,"author":{"gitId":"wongkokian"},"content":"`list`"},{"lineNumber":56,"author":{"gitId":"wongkokian"},"content":""},{"lineNumber":57,"author":{"gitId":"wongkokian"},"content":"Expected outcome:"},{"lineNumber":58,"author":{"gitId":"-"},"content":""},{"lineNumber":59,"author":{"gitId":"wongkokian"},"content":"![List Example](https://raw.githubusercontent.com/wongkokian/ip/master/src/main/resources/images/list.png)"},{"lineNumber":60,"author":{"gitId":"wongkokian"},"content":""},{"lineNumber":61,"author":{"gitId":"wongkokian"},"content":"### Completing a task: `done`"},{"lineNumber":62,"author":{"gitId":"wongkokian"},"content":"Completes a task in the task list."},{"lineNumber":63,"author":{"gitId":"wongkokian"},"content":""},{"lineNumber":64,"author":{"gitId":"wongkokian"},"content":"Format: `done INDEX`"},{"lineNumber":65,"author":{"gitId":"wongkokian"},"content":"* `INDEX` must be a positive integer that is within the range of the task list."},{"lineNumber":66,"author":{"gitId":"wongkokian"},"content":"* Use `list` to see the list of tasks."},{"lineNumber":67,"author":{"gitId":"wongkokian"},"content":""},{"lineNumber":68,"author":{"gitId":"wongkokian"},"content":"Example:"},{"lineNumber":69,"author":{"gitId":"wongkokian"},"content":""},{"lineNumber":70,"author":{"gitId":"wongkokian"},"content":"`done 1`"},{"lineNumber":71,"author":{"gitId":"-"},"content":""},{"lineNumber":72,"author":{"gitId":"-"},"content":"Expected outcome:"},{"lineNumber":73,"author":{"gitId":"-"},"content":""},{"lineNumber":74,"author":{"gitId":"wongkokian"},"content":"![Done Example](https://raw.githubusercontent.com/wongkokian/ip/master/src/main/resources/images/done.png)"},{"lineNumber":75,"author":{"gitId":"wongkokian"},"content":""},{"lineNumber":76,"author":{"gitId":"wongkokian"},"content":"### Updating a task: `update`"},{"lineNumber":77,"author":{"gitId":"wongkokian"},"content":"Edits a task in the task list."},{"lineNumber":78,"author":{"gitId":"wongkokian"},"content":""},{"lineNumber":79,"author":{"gitId":"wongkokian"},"content":"Format: `update INDEX /description DESCRIPTION` or `update INDEX /date DATE`"},{"lineNumber":80,"author":{"gitId":"wongkokian"},"content":"* `INDEX` must be a positive integer that is within the range of the task list."},{"lineNumber":81,"author":{"gitId":"wongkokian"},"content":"* Use `list` to see the list of tasks."},{"lineNumber":82,"author":{"gitId":"wongkokian"},"content":"* `DATE` must be in the format `yyyy-mm-dd`."},{"lineNumber":83,"author":{"gitId":"wongkokian"},"content":""},{"lineNumber":84,"author":{"gitId":"wongkokian"},"content":"Example:"},{"lineNumber":85,"author":{"gitId":"wongkokian"},"content":""},{"lineNumber":86,"author":{"gitId":"wongkokian"},"content":"`update 1 /description finish homework`"},{"lineNumber":87,"author":{"gitId":"wongkokian"},"content":""},{"lineNumber":88,"author":{"gitId":"wongkokian"},"content":"`update 1 /date 2021-03-15`"},{"lineNumber":89,"author":{"gitId":"wongkokian"},"content":""},{"lineNumber":90,"author":{"gitId":"wongkokian"},"content":"Expected outcome:"},{"lineNumber":91,"author":{"gitId":"wongkokian"},"content":""},{"lineNumber":92,"author":{"gitId":"wongkokian"},"content":"![Update Example 1](https://raw.githubusercontent.com/wongkokian/ip/master/src/main/resources/images/update.png)"},{"lineNumber":93,"author":{"gitId":"wongkokian"},"content":""},{"lineNumber":94,"author":{"gitId":"wongkokian"},"content":"![Update Example 2](https://raw.githubusercontent.com/wongkokian/ip/master/src/main/resources/images/update2.png)"},{"lineNumber":95,"author":{"gitId":"wongkokian"},"content":""},{"lineNumber":96,"author":{"gitId":"wongkokian"},"content":""},{"lineNumber":97,"author":{"gitId":"wongkokian"},"content":"### Finding all tasks with keyword: `find`"},{"lineNumber":98,"author":{"gitId":"wongkokian"},"content":"Finds all tasks in the task list that contains the keyword."},{"lineNumber":99,"author":{"gitId":"wongkokian"},"content":""},{"lineNumber":100,"author":{"gitId":"wongkokian"},"content":"Format: `find KEYWORD`"},{"lineNumber":101,"author":{"gitId":"wongkokian"},"content":""},{"lineNumber":102,"author":{"gitId":"wongkokian"},"content":"Example:"},{"lineNumber":103,"author":{"gitId":"wongkokian"},"content":""},{"lineNumber":104,"author":{"gitId":"wongkokian"},"content":"`find book`"},{"lineNumber":105,"author":{"gitId":"wongkokian"},"content":""},{"lineNumber":106,"author":{"gitId":"wongkokian"},"content":"Expected outcome:"},{"lineNumber":107,"author":{"gitId":"wongkokian"},"content":""},{"lineNumber":108,"author":{"gitId":"wongkokian"},"content":"![Find Example](https://raw.githubusercontent.com/wongkokian/ip/master/src/main/resources/images/find.png)"},{"lineNumber":109,"author":{"gitId":"wongkokian"},"content":""},{"lineNumber":110,"author":{"gitId":"wongkokian"},"content":"### Deleting a task: `delete`"},{"lineNumber":111,"author":{"gitId":"wongkokian"},"content":"Deletes a task from the task list."},{"lineNumber":112,"author":{"gitId":"wongkokian"},"content":""},{"lineNumber":113,"author":{"gitId":"wongkokian"},"content":"Format: `delete INDEX`"},{"lineNumber":114,"author":{"gitId":"wongkokian"},"content":"* `INDEX` must be a positive integer that is within the range of the task list."},{"lineNumber":115,"author":{"gitId":"wongkokian"},"content":"* Use `list` to see the list of tasks."},{"lineNumber":116,"author":{"gitId":"wongkokian"},"content":""},{"lineNumber":117,"author":{"gitId":"wongkokian"},"content":"Example:"},{"lineNumber":118,"author":{"gitId":"wongkokian"},"content":""},{"lineNumber":119,"author":{"gitId":"wongkokian"},"content":"`delete 1`"},{"lineNumber":120,"author":{"gitId":"wongkokian"},"content":""},{"lineNumber":121,"author":{"gitId":"wongkokian"},"content":"Expected outcome:"},{"lineNumber":122,"author":{"gitId":"wongkokian"},"content":""},{"lineNumber":123,"author":{"gitId":"wongkokian"},"content":"![Delete Example](https://raw.githubusercontent.com/wongkokian/ip/master/src/main/resources/images/delete.png)"},{"lineNumber":124,"author":{"gitId":"wongkokian"},"content":""},{"lineNumber":125,"author":{"gitId":"wongkokian"},"content":"### Exiting the program: `bye`"},{"lineNumber":126,"author":{"gitId":"wongkokian"},"content":"Exits the program."},{"lineNumber":127,"author":{"gitId":"wongkokian"},"content":""},{"lineNumber":128,"author":{"gitId":"wongkokian"},"content":"Format: `bye`"},{"lineNumber":129,"author":{"gitId":"wongkokian"},"content":""},{"lineNumber":130,"author":{"gitId":"wongkokian"},"content":"Example:"},{"lineNumber":131,"author":{"gitId":"wongkokian"},"content":""},{"lineNumber":132,"author":{"gitId":"wongkokian"},"content":"`bye`"},{"lineNumber":133,"author":{"gitId":"wongkokian"},"content":""},{"lineNumber":134,"author":{"gitId":"wongkokian"},"content":"Expected outcome:"},{"lineNumber":135,"author":{"gitId":"wongkokian"},"content":""},{"lineNumber":136,"author":{"gitId":"wongkokian"},"content":"![Bye Example](https://raw.githubusercontent.com/wongkokian/ip/master/src/main/resources/images/bye.png)"},{"lineNumber":137,"author":{"gitId":"wongkokian"},"content":""},{"lineNumber":138,"author":{"gitId":"wongkokian"},"content":"### Saving the data"},{"lineNumber":139,"author":{"gitId":"wongkokian"},"content":"Task list data are saved in the hard disk automatically after the program exits. "},{"lineNumber":140,"author":{"gitId":"wongkokian"},"content":""},{"lineNumber":141,"author":{"gitId":"wongkokian"},"content":"There is no need to save manually."},{"lineNumber":142,"author":{"gitId":"wongkokian"},"content":""},{"lineNumber":143,"author":{"gitId":"wongkokian"},"content":"### Loading the data"},{"lineNumber":144,"author":{"gitId":"wongkokian"},"content":"Task list data are loaded into the program from the hard disk automatically upon starting the program."},{"lineNumber":145,"author":{"gitId":"wongkokian"},"content":""},{"lineNumber":146,"author":{"gitId":"wongkokian"},"content":"There is no need to load manually."}],"authorContributionMap":{"wongkokian":134,"-":12}},{"path":"src/main/java/duke/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"wongkokian"},"content":"package duke;"},{"lineNumber":2,"author":{"gitId":"wongkokian"},"content":""},{"lineNumber":3,"author":{"gitId":"wongkokian"},"content":"import duke.command.Command;"},{"lineNumber":4,"author":{"gitId":"wongkokian"},"content":"import duke.exception.DukeException;"},{"lineNumber":5,"author":{"gitId":"wongkokian"},"content":"import duke.parser.Parser;"},{"lineNumber":6,"author":{"gitId":"wongkokian"},"content":"import duke.storage.Storage;"},{"lineNumber":7,"author":{"gitId":"wongkokian"},"content":"import duke.task.TaskList;"},{"lineNumber":8,"author":{"gitId":"wongkokian"},"content":""},{"lineNumber":9,"author":{"gitId":"wongkokian"},"content":"/**"},{"lineNumber":10,"author":{"gitId":"wongkokian"},"content":" * A Personal Assistant Chatbot that helps a person to keep track of various things."},{"lineNumber":11,"author":{"gitId":"wongkokian"},"content":" */"},{"lineNumber":12,"author":{"gitId":"-"},"content":"public class Duke {"},{"lineNumber":13,"author":{"gitId":"wongkokian"},"content":"    private final Storage storage;"},{"lineNumber":14,"author":{"gitId":"wongkokian"},"content":"    private TaskList taskList;"},{"lineNumber":15,"author":{"gitId":"wongkokian"},"content":""},{"lineNumber":16,"author":{"gitId":"wongkokian"},"content":"    /**"},{"lineNumber":17,"author":{"gitId":"wongkokian"},"content":"     * Constructs Duke chatbot."},{"lineNumber":18,"author":{"gitId":"wongkokian"},"content":"     */"},{"lineNumber":19,"author":{"gitId":"wongkokian"},"content":"    public Duke() {"},{"lineNumber":20,"author":{"gitId":"wongkokian"},"content":"        storage \u003d new Storage(\"data/tasks.txt\");"},{"lineNumber":21,"author":{"gitId":"wongkokian"},"content":"        try {"},{"lineNumber":22,"author":{"gitId":"wongkokian"},"content":"            storage.createFileAndDirectory();"},{"lineNumber":23,"author":{"gitId":"wongkokian"},"content":"            taskList \u003d new TaskList(storage.load());"},{"lineNumber":24,"author":{"gitId":"wongkokian"},"content":"        } catch (DukeException ex) {"},{"lineNumber":25,"author":{"gitId":"wongkokian"},"content":"            System.out.println(\"There was a problem loading up the storage.\");"},{"lineNumber":26,"author":{"gitId":"wongkokian"},"content":"        }"},{"lineNumber":27,"author":{"gitId":"wongkokian"},"content":"    }"},{"lineNumber":28,"author":{"gitId":"wongkokian"},"content":""},{"lineNumber":29,"author":{"gitId":"wongkokian"},"content":"    /**"},{"lineNumber":30,"author":{"gitId":"wongkokian"},"content":"     * Runs Duke chatbot."},{"lineNumber":31,"author":{"gitId":"wongkokian"},"content":"     *"},{"lineNumber":32,"author":{"gitId":"wongkokian"},"content":"     * @return Output for GUI."},{"lineNumber":33,"author":{"gitId":"wongkokian"},"content":"     */"},{"lineNumber":34,"author":{"gitId":"wongkokian"},"content":"    public String run(String input) {"},{"lineNumber":35,"author":{"gitId":"wongkokian"},"content":"        try {"},{"lineNumber":36,"author":{"gitId":"wongkokian"},"content":"            Command c \u003d Parser.parse(input);"},{"lineNumber":37,"author":{"gitId":"wongkokian"},"content":"            return c.execute(taskList, storage);"},{"lineNumber":38,"author":{"gitId":"wongkokian"},"content":"        } catch (DukeException ex) {"},{"lineNumber":39,"author":{"gitId":"wongkokian"},"content":"            return ex.getMessage();"},{"lineNumber":40,"author":{"gitId":"wongkokian"},"content":"        }"},{"lineNumber":41,"author":{"gitId":"wongkokian"},"content":"    }"},{"lineNumber":42,"author":{"gitId":"-"},"content":"}"}],"authorContributionMap":{"wongkokian":40,"-":2}},{"path":"src/main/java/duke/Launcher.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"wongkokian"},"content":"package duke;"},{"lineNumber":2,"author":{"gitId":"wongkokian"},"content":""},{"lineNumber":3,"author":{"gitId":"wongkokian"},"content":"import duke.ui.Main;"},{"lineNumber":4,"author":{"gitId":"wongkokian"},"content":""},{"lineNumber":5,"author":{"gitId":"wongkokian"},"content":"import javafx.application.Application;"},{"lineNumber":6,"author":{"gitId":"wongkokian"},"content":""},{"lineNumber":7,"author":{"gitId":"wongkokian"},"content":"/**"},{"lineNumber":8,"author":{"gitId":"wongkokian"},"content":" * A launcher class to workaround classpath issues."},{"lineNumber":9,"author":{"gitId":"wongkokian"},"content":" */"},{"lineNumber":10,"author":{"gitId":"wongkokian"},"content":"public class Launcher {"},{"lineNumber":11,"author":{"gitId":"wongkokian"},"content":"    public static void main(String[] args) {"},{"lineNumber":12,"author":{"gitId":"wongkokian"},"content":"        Application.launch(Main.class, args);"},{"lineNumber":13,"author":{"gitId":"wongkokian"},"content":"    }"},{"lineNumber":14,"author":{"gitId":"wongkokian"},"content":"}"}],"authorContributionMap":{"wongkokian":14}},{"path":"src/main/java/duke/command/AddTaskCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"wongkokian"},"content":"package duke.command;"},{"lineNumber":2,"author":{"gitId":"wongkokian"},"content":""},{"lineNumber":3,"author":{"gitId":"wongkokian"},"content":"import duke.exception.DukeException;"},{"lineNumber":4,"author":{"gitId":"wongkokian"},"content":"import duke.storage.Storage;"},{"lineNumber":5,"author":{"gitId":"wongkokian"},"content":"import duke.task.TaskList;"},{"lineNumber":6,"author":{"gitId":"wongkokian"},"content":""},{"lineNumber":7,"author":{"gitId":"wongkokian"},"content":"/**"},{"lineNumber":8,"author":{"gitId":"wongkokian"},"content":" * A AddTaskCommand class to execute add task."},{"lineNumber":9,"author":{"gitId":"wongkokian"},"content":" */"},{"lineNumber":10,"author":{"gitId":"wongkokian"},"content":"public class AddTaskCommand extends Command {"},{"lineNumber":11,"author":{"gitId":"wongkokian"},"content":"    protected String type;"},{"lineNumber":12,"author":{"gitId":"wongkokian"},"content":"    protected String fullCommand;"},{"lineNumber":13,"author":{"gitId":"wongkokian"},"content":""},{"lineNumber":14,"author":{"gitId":"wongkokian"},"content":"    /**"},{"lineNumber":15,"author":{"gitId":"wongkokian"},"content":"     * Constructs AddTaskCommand."},{"lineNumber":16,"author":{"gitId":"wongkokian"},"content":"     *"},{"lineNumber":17,"author":{"gitId":"wongkokian"},"content":"     * @param type        The type of task."},{"lineNumber":18,"author":{"gitId":"wongkokian"},"content":"     * @param fullCommand The command given."},{"lineNumber":19,"author":{"gitId":"wongkokian"},"content":"     */"},{"lineNumber":20,"author":{"gitId":"wongkokian"},"content":"    public AddTaskCommand(String type, String fullCommand) {"},{"lineNumber":21,"author":{"gitId":"wongkokian"},"content":"        super();"},{"lineNumber":22,"author":{"gitId":"wongkokian"},"content":"        this.type \u003d type;"},{"lineNumber":23,"author":{"gitId":"wongkokian"},"content":"        this.fullCommand \u003d fullCommand;"},{"lineNumber":24,"author":{"gitId":"wongkokian"},"content":"    }"},{"lineNumber":25,"author":{"gitId":"wongkokian"},"content":""},{"lineNumber":26,"author":{"gitId":"wongkokian"},"content":"    /**"},{"lineNumber":27,"author":{"gitId":"wongkokian"},"content":"     * Executes the add task depending on the type of task."},{"lineNumber":28,"author":{"gitId":"wongkokian"},"content":"     *"},{"lineNumber":29,"author":{"gitId":"wongkokian"},"content":"     * @param tasks The list of tasks."},{"lineNumber":30,"author":{"gitId":"wongkokian"},"content":"     * @param storage  The storage handler."},{"lineNumber":31,"author":{"gitId":"wongkokian"},"content":"     * @return Output for GUI."},{"lineNumber":32,"author":{"gitId":"wongkokian"},"content":"     * @throws DukeException If user input format is wrong."},{"lineNumber":33,"author":{"gitId":"wongkokian"},"content":"     */"},{"lineNumber":34,"author":{"gitId":"wongkokian"},"content":"    @Override"},{"lineNumber":35,"author":{"gitId":"wongkokian"},"content":"    public String execute(TaskList tasks, Storage storage) throws DukeException {"},{"lineNumber":36,"author":{"gitId":"wongkokian"},"content":"        return tasks.addTask(this.type, this.fullCommand);"},{"lineNumber":37,"author":{"gitId":"wongkokian"},"content":"    }"},{"lineNumber":38,"author":{"gitId":"wongkokian"},"content":"}"}],"authorContributionMap":{"wongkokian":38}},{"path":"src/main/java/duke/command/ByeCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"wongkokian"},"content":"package duke.command;"},{"lineNumber":2,"author":{"gitId":"wongkokian"},"content":""},{"lineNumber":3,"author":{"gitId":"wongkokian"},"content":"import duke.exception.DukeException;"},{"lineNumber":4,"author":{"gitId":"wongkokian"},"content":"import duke.storage.Storage;"},{"lineNumber":5,"author":{"gitId":"wongkokian"},"content":"import duke.task.TaskList;"},{"lineNumber":6,"author":{"gitId":"wongkokian"},"content":""},{"lineNumber":7,"author":{"gitId":"wongkokian"},"content":"/**"},{"lineNumber":8,"author":{"gitId":"wongkokian"},"content":" * A ByeCommand class to exit program."},{"lineNumber":9,"author":{"gitId":"wongkokian"},"content":" */"},{"lineNumber":10,"author":{"gitId":"wongkokian"},"content":"public class ByeCommand extends Command {"},{"lineNumber":11,"author":{"gitId":"wongkokian"},"content":"    /**"},{"lineNumber":12,"author":{"gitId":"wongkokian"},"content":"     * Constructs ByeCommand."},{"lineNumber":13,"author":{"gitId":"wongkokian"},"content":"     */"},{"lineNumber":14,"author":{"gitId":"wongkokian"},"content":"    public ByeCommand() {"},{"lineNumber":15,"author":{"gitId":"wongkokian"},"content":"        super();"},{"lineNumber":16,"author":{"gitId":"wongkokian"},"content":"    }"},{"lineNumber":17,"author":{"gitId":"wongkokian"},"content":""},{"lineNumber":18,"author":{"gitId":"wongkokian"},"content":"    /**"},{"lineNumber":19,"author":{"gitId":"wongkokian"},"content":"     * Executes program exit."},{"lineNumber":20,"author":{"gitId":"wongkokian"},"content":"     *"},{"lineNumber":21,"author":{"gitId":"wongkokian"},"content":"     * @param tasks The list of tasks."},{"lineNumber":22,"author":{"gitId":"wongkokian"},"content":"     * @param storage  The storage handler."},{"lineNumber":23,"author":{"gitId":"wongkokian"},"content":"     * @return Output for GUI."},{"lineNumber":24,"author":{"gitId":"wongkokian"},"content":"     * @throws DukeException If there is storage operation error."},{"lineNumber":25,"author":{"gitId":"wongkokian"},"content":"     */"},{"lineNumber":26,"author":{"gitId":"wongkokian"},"content":"    @Override"},{"lineNumber":27,"author":{"gitId":"wongkokian"},"content":"    public String execute(TaskList tasks, Storage storage) throws DukeException {"},{"lineNumber":28,"author":{"gitId":"wongkokian"},"content":"        storage.clear();"},{"lineNumber":29,"author":{"gitId":"wongkokian"},"content":"        storage.save(tasks.getTaskList());"},{"lineNumber":30,"author":{"gitId":"wongkokian"},"content":"        return \"Bye. Hope to see you again soon!\";"},{"lineNumber":31,"author":{"gitId":"wongkokian"},"content":"    }"},{"lineNumber":32,"author":{"gitId":"wongkokian"},"content":"}"}],"authorContributionMap":{"wongkokian":32}},{"path":"src/main/java/duke/command/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"wongkokian"},"content":"package duke.command;"},{"lineNumber":2,"author":{"gitId":"wongkokian"},"content":""},{"lineNumber":3,"author":{"gitId":"wongkokian"},"content":"import duke.exception.DukeException;"},{"lineNumber":4,"author":{"gitId":"wongkokian"},"content":"import duke.storage.Storage;"},{"lineNumber":5,"author":{"gitId":"wongkokian"},"content":"import duke.task.TaskList;"},{"lineNumber":6,"author":{"gitId":"wongkokian"},"content":""},{"lineNumber":7,"author":{"gitId":"wongkokian"},"content":"/**"},{"lineNumber":8,"author":{"gitId":"wongkokian"},"content":" * An abstract Command class."},{"lineNumber":9,"author":{"gitId":"wongkokian"},"content":" */"},{"lineNumber":10,"author":{"gitId":"wongkokian"},"content":"public abstract class Command {"},{"lineNumber":11,"author":{"gitId":"wongkokian"},"content":"    /**"},{"lineNumber":12,"author":{"gitId":"wongkokian"},"content":"     * Constructs Command."},{"lineNumber":13,"author":{"gitId":"wongkokian"},"content":"     */"},{"lineNumber":14,"author":{"gitId":"wongkokian"},"content":"    public Command() {"},{"lineNumber":15,"author":{"gitId":"wongkokian"},"content":"    }"},{"lineNumber":16,"author":{"gitId":"wongkokian"},"content":""},{"lineNumber":17,"author":{"gitId":"wongkokian"},"content":"    /**"},{"lineNumber":18,"author":{"gitId":"wongkokian"},"content":"     * Abstract execute method for Command."},{"lineNumber":19,"author":{"gitId":"wongkokian"},"content":"     *"},{"lineNumber":20,"author":{"gitId":"wongkokian"},"content":"     * @param tasks The list of tasks."},{"lineNumber":21,"author":{"gitId":"wongkokian"},"content":"     * @param storage  The storage handler."},{"lineNumber":22,"author":{"gitId":"wongkokian"},"content":"     * @return Output for GUI."},{"lineNumber":23,"author":{"gitId":"wongkokian"},"content":"     * @throws DukeException If there is error in execution."},{"lineNumber":24,"author":{"gitId":"wongkokian"},"content":"     */"},{"lineNumber":25,"author":{"gitId":"wongkokian"},"content":"    public abstract String execute(TaskList tasks, Storage storage) throws DukeException;"},{"lineNumber":26,"author":{"gitId":"wongkokian"},"content":"}"}],"authorContributionMap":{"wongkokian":26}},{"path":"src/main/java/duke/command/DeleteCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"wongkokian"},"content":"package duke.command;"},{"lineNumber":2,"author":{"gitId":"wongkokian"},"content":""},{"lineNumber":3,"author":{"gitId":"wongkokian"},"content":"import duke.exception.DukeException;"},{"lineNumber":4,"author":{"gitId":"wongkokian"},"content":"import duke.storage.Storage;"},{"lineNumber":5,"author":{"gitId":"wongkokian"},"content":"import duke.task.TaskList;"},{"lineNumber":6,"author":{"gitId":"wongkokian"},"content":""},{"lineNumber":7,"author":{"gitId":"wongkokian"},"content":"/**"},{"lineNumber":8,"author":{"gitId":"wongkokian"},"content":" * A DeleteCommand class to perform task deletion."},{"lineNumber":9,"author":{"gitId":"wongkokian"},"content":" */"},{"lineNumber":10,"author":{"gitId":"wongkokian"},"content":"public class DeleteCommand extends Command {"},{"lineNumber":11,"author":{"gitId":"wongkokian"},"content":"    protected String fullCommand;"},{"lineNumber":12,"author":{"gitId":"wongkokian"},"content":""},{"lineNumber":13,"author":{"gitId":"wongkokian"},"content":"    /**"},{"lineNumber":14,"author":{"gitId":"wongkokian"},"content":"     * Constructs DeleteCommand."},{"lineNumber":15,"author":{"gitId":"wongkokian"},"content":"     *"},{"lineNumber":16,"author":{"gitId":"wongkokian"},"content":"     * @param fullCommand The command given."},{"lineNumber":17,"author":{"gitId":"wongkokian"},"content":"     */"},{"lineNumber":18,"author":{"gitId":"wongkokian"},"content":"    public DeleteCommand(String fullCommand) {"},{"lineNumber":19,"author":{"gitId":"wongkokian"},"content":"        super();"},{"lineNumber":20,"author":{"gitId":"wongkokian"},"content":"        this.fullCommand \u003d fullCommand;"},{"lineNumber":21,"author":{"gitId":"wongkokian"},"content":"    }"},{"lineNumber":22,"author":{"gitId":"wongkokian"},"content":""},{"lineNumber":23,"author":{"gitId":"wongkokian"},"content":"    /**"},{"lineNumber":24,"author":{"gitId":"wongkokian"},"content":"     * Executes task deletion."},{"lineNumber":25,"author":{"gitId":"wongkokian"},"content":"     *"},{"lineNumber":26,"author":{"gitId":"wongkokian"},"content":"     * @param tasks The list of tasks."},{"lineNumber":27,"author":{"gitId":"wongkokian"},"content":"     * @param storage  The storage handler."},{"lineNumber":28,"author":{"gitId":"wongkokian"},"content":"     * @return Output for GUI."},{"lineNumber":29,"author":{"gitId":"wongkokian"},"content":"     * @throws DukeException If user input format is wrong."},{"lineNumber":30,"author":{"gitId":"wongkokian"},"content":"     */"},{"lineNumber":31,"author":{"gitId":"wongkokian"},"content":"    @Override"},{"lineNumber":32,"author":{"gitId":"wongkokian"},"content":"    public String execute(TaskList tasks, Storage storage) throws DukeException {"},{"lineNumber":33,"author":{"gitId":"wongkokian"},"content":"        return tasks.delete(this.fullCommand);"},{"lineNumber":34,"author":{"gitId":"wongkokian"},"content":"    }"},{"lineNumber":35,"author":{"gitId":"wongkokian"},"content":"}"}],"authorContributionMap":{"wongkokian":35}},{"path":"src/main/java/duke/command/DoneCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"wongkokian"},"content":"package duke.command;"},{"lineNumber":2,"author":{"gitId":"wongkokian"},"content":""},{"lineNumber":3,"author":{"gitId":"wongkokian"},"content":"import duke.exception.DukeException;"},{"lineNumber":4,"author":{"gitId":"wongkokian"},"content":"import duke.storage.Storage;"},{"lineNumber":5,"author":{"gitId":"wongkokian"},"content":"import duke.task.TaskList;"},{"lineNumber":6,"author":{"gitId":"wongkokian"},"content":""},{"lineNumber":7,"author":{"gitId":"wongkokian"},"content":"/**"},{"lineNumber":8,"author":{"gitId":"wongkokian"},"content":" * A DoneCommand class to perform task completion."},{"lineNumber":9,"author":{"gitId":"wongkokian"},"content":" */"},{"lineNumber":10,"author":{"gitId":"wongkokian"},"content":"public class DoneCommand extends Command {"},{"lineNumber":11,"author":{"gitId":"wongkokian"},"content":"    protected String fullCommand;"},{"lineNumber":12,"author":{"gitId":"wongkokian"},"content":""},{"lineNumber":13,"author":{"gitId":"wongkokian"},"content":"    /**"},{"lineNumber":14,"author":{"gitId":"wongkokian"},"content":"     * Constructs DoneCommand."},{"lineNumber":15,"author":{"gitId":"wongkokian"},"content":"     *"},{"lineNumber":16,"author":{"gitId":"wongkokian"},"content":"     * @param fullCommand The command given."},{"lineNumber":17,"author":{"gitId":"wongkokian"},"content":"     */"},{"lineNumber":18,"author":{"gitId":"wongkokian"},"content":"    public DoneCommand(String fullCommand) {"},{"lineNumber":19,"author":{"gitId":"wongkokian"},"content":"        super();"},{"lineNumber":20,"author":{"gitId":"wongkokian"},"content":"        this.fullCommand \u003d fullCommand;"},{"lineNumber":21,"author":{"gitId":"wongkokian"},"content":"    }"},{"lineNumber":22,"author":{"gitId":"wongkokian"},"content":""},{"lineNumber":23,"author":{"gitId":"wongkokian"},"content":"    /**"},{"lineNumber":24,"author":{"gitId":"wongkokian"},"content":"     * Executes task completion."},{"lineNumber":25,"author":{"gitId":"wongkokian"},"content":"     *"},{"lineNumber":26,"author":{"gitId":"wongkokian"},"content":"     * @param tasks The list of tasks."},{"lineNumber":27,"author":{"gitId":"wongkokian"},"content":"     * @param storage  The storage handler."},{"lineNumber":28,"author":{"gitId":"wongkokian"},"content":"     * @return Output for GUI."},{"lineNumber":29,"author":{"gitId":"wongkokian"},"content":"     * @throws DukeException If user input format is wrong."},{"lineNumber":30,"author":{"gitId":"wongkokian"},"content":"     */"},{"lineNumber":31,"author":{"gitId":"wongkokian"},"content":"    @Override"},{"lineNumber":32,"author":{"gitId":"wongkokian"},"content":"    public String execute(TaskList tasks, Storage storage) throws DukeException {"},{"lineNumber":33,"author":{"gitId":"wongkokian"},"content":"        return tasks.done(this.fullCommand);"},{"lineNumber":34,"author":{"gitId":"wongkokian"},"content":"    }"},{"lineNumber":35,"author":{"gitId":"wongkokian"},"content":"}"}],"authorContributionMap":{"wongkokian":35}},{"path":"src/main/java/duke/command/FindCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"wongkokian"},"content":"package duke.command;"},{"lineNumber":2,"author":{"gitId":"wongkokian"},"content":""},{"lineNumber":3,"author":{"gitId":"wongkokian"},"content":"import duke.exception.DukeException;"},{"lineNumber":4,"author":{"gitId":"wongkokian"},"content":"import duke.storage.Storage;"},{"lineNumber":5,"author":{"gitId":"wongkokian"},"content":"import duke.task.TaskList;"},{"lineNumber":6,"author":{"gitId":"wongkokian"},"content":""},{"lineNumber":7,"author":{"gitId":"wongkokian"},"content":"/**"},{"lineNumber":8,"author":{"gitId":"wongkokian"},"content":" * A FindCommand class to find tasks that contain a given keyword."},{"lineNumber":9,"author":{"gitId":"wongkokian"},"content":" */"},{"lineNumber":10,"author":{"gitId":"wongkokian"},"content":"public class FindCommand extends Command {"},{"lineNumber":11,"author":{"gitId":"wongkokian"},"content":"    protected String fullCommand;"},{"lineNumber":12,"author":{"gitId":"wongkokian"},"content":""},{"lineNumber":13,"author":{"gitId":"wongkokian"},"content":"    /**"},{"lineNumber":14,"author":{"gitId":"wongkokian"},"content":"     * Constructs FindCommand."},{"lineNumber":15,"author":{"gitId":"wongkokian"},"content":"     *"},{"lineNumber":16,"author":{"gitId":"wongkokian"},"content":"     * @param fullCommand The command given."},{"lineNumber":17,"author":{"gitId":"wongkokian"},"content":"     */"},{"lineNumber":18,"author":{"gitId":"wongkokian"},"content":"    public FindCommand(String fullCommand) {"},{"lineNumber":19,"author":{"gitId":"wongkokian"},"content":"        super();"},{"lineNumber":20,"author":{"gitId":"wongkokian"},"content":"        this.fullCommand \u003d fullCommand;"},{"lineNumber":21,"author":{"gitId":"wongkokian"},"content":"    }"},{"lineNumber":22,"author":{"gitId":"wongkokian"},"content":""},{"lineNumber":23,"author":{"gitId":"wongkokian"},"content":"    /**"},{"lineNumber":24,"author":{"gitId":"wongkokian"},"content":"     * Executes task find."},{"lineNumber":25,"author":{"gitId":"wongkokian"},"content":"     *"},{"lineNumber":26,"author":{"gitId":"wongkokian"},"content":"     * @param tasks The list of tasks."},{"lineNumber":27,"author":{"gitId":"wongkokian"},"content":"     * @param storage  The storage handler."},{"lineNumber":28,"author":{"gitId":"wongkokian"},"content":"     * @return Output for GUI."},{"lineNumber":29,"author":{"gitId":"wongkokian"},"content":"     * @throws DukeException If user input format is wrong."},{"lineNumber":30,"author":{"gitId":"wongkokian"},"content":"     */"},{"lineNumber":31,"author":{"gitId":"wongkokian"},"content":"    @Override"},{"lineNumber":32,"author":{"gitId":"wongkokian"},"content":"    public String execute(TaskList tasks, Storage storage) throws DukeException {"},{"lineNumber":33,"author":{"gitId":"wongkokian"},"content":"        return tasks.find(this.fullCommand);"},{"lineNumber":34,"author":{"gitId":"wongkokian"},"content":"    }"},{"lineNumber":35,"author":{"gitId":"wongkokian"},"content":"}"}],"authorContributionMap":{"wongkokian":35}},{"path":"src/main/java/duke/command/ListCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"wongkokian"},"content":"package duke.command;"},{"lineNumber":2,"author":{"gitId":"wongkokian"},"content":""},{"lineNumber":3,"author":{"gitId":"wongkokian"},"content":"import duke.storage.Storage;"},{"lineNumber":4,"author":{"gitId":"wongkokian"},"content":"import duke.task.TaskList;"},{"lineNumber":5,"author":{"gitId":"wongkokian"},"content":""},{"lineNumber":6,"author":{"gitId":"wongkokian"},"content":"/**"},{"lineNumber":7,"author":{"gitId":"wongkokian"},"content":" * A ListCommand class to list all tasks."},{"lineNumber":8,"author":{"gitId":"wongkokian"},"content":" */"},{"lineNumber":9,"author":{"gitId":"wongkokian"},"content":"public class ListCommand extends Command {"},{"lineNumber":10,"author":{"gitId":"wongkokian"},"content":"    /**"},{"lineNumber":11,"author":{"gitId":"wongkokian"},"content":"     * Constructs ListCommand."},{"lineNumber":12,"author":{"gitId":"wongkokian"},"content":"     */"},{"lineNumber":13,"author":{"gitId":"wongkokian"},"content":"    public ListCommand() {"},{"lineNumber":14,"author":{"gitId":"wongkokian"},"content":"        super();"},{"lineNumber":15,"author":{"gitId":"wongkokian"},"content":"    }"},{"lineNumber":16,"author":{"gitId":"wongkokian"},"content":""},{"lineNumber":17,"author":{"gitId":"wongkokian"},"content":"    /**"},{"lineNumber":18,"author":{"gitId":"wongkokian"},"content":"     * Executes the listing of tasks."},{"lineNumber":19,"author":{"gitId":"wongkokian"},"content":"     *"},{"lineNumber":20,"author":{"gitId":"wongkokian"},"content":"     * @param tasks The list of tasks."},{"lineNumber":21,"author":{"gitId":"wongkokian"},"content":"     * @param storage  The storage handler."},{"lineNumber":22,"author":{"gitId":"wongkokian"},"content":"     * @return Output for GUI."},{"lineNumber":23,"author":{"gitId":"wongkokian"},"content":"     */"},{"lineNumber":24,"author":{"gitId":"wongkokian"},"content":"    @Override"},{"lineNumber":25,"author":{"gitId":"wongkokian"},"content":"    public String execute(TaskList tasks, Storage storage) {"},{"lineNumber":26,"author":{"gitId":"wongkokian"},"content":"        return tasks.list();"},{"lineNumber":27,"author":{"gitId":"wongkokian"},"content":"    }"},{"lineNumber":28,"author":{"gitId":"wongkokian"},"content":"}"}],"authorContributionMap":{"wongkokian":28}},{"path":"src/main/java/duke/command/UnknownCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"wongkokian"},"content":"package duke.command;"},{"lineNumber":2,"author":{"gitId":"wongkokian"},"content":""},{"lineNumber":3,"author":{"gitId":"wongkokian"},"content":"import duke.storage.Storage;"},{"lineNumber":4,"author":{"gitId":"wongkokian"},"content":"import duke.task.TaskList;"},{"lineNumber":5,"author":{"gitId":"wongkokian"},"content":""},{"lineNumber":6,"author":{"gitId":"wongkokian"},"content":"/**"},{"lineNumber":7,"author":{"gitId":"wongkokian"},"content":" * A UnknownCommand class to handle unknown commands given by user."},{"lineNumber":8,"author":{"gitId":"wongkokian"},"content":" */"},{"lineNumber":9,"author":{"gitId":"wongkokian"},"content":"public class UnknownCommand extends Command {"},{"lineNumber":10,"author":{"gitId":"wongkokian"},"content":"    /**"},{"lineNumber":11,"author":{"gitId":"wongkokian"},"content":"     * Constructs UnknownCommand."},{"lineNumber":12,"author":{"gitId":"wongkokian"},"content":"     */"},{"lineNumber":13,"author":{"gitId":"wongkokian"},"content":"    public UnknownCommand() {"},{"lineNumber":14,"author":{"gitId":"wongkokian"},"content":"        super();"},{"lineNumber":15,"author":{"gitId":"wongkokian"},"content":"    }"},{"lineNumber":16,"author":{"gitId":"wongkokian"},"content":""},{"lineNumber":17,"author":{"gitId":"wongkokian"},"content":"    /**"},{"lineNumber":18,"author":{"gitId":"wongkokian"},"content":"     * Prints error message when unknown command encountered."},{"lineNumber":19,"author":{"gitId":"wongkokian"},"content":"     *"},{"lineNumber":20,"author":{"gitId":"wongkokian"},"content":"     * @param tasks The list of tasks."},{"lineNumber":21,"author":{"gitId":"wongkokian"},"content":"     * @param storage  The storage handler."},{"lineNumber":22,"author":{"gitId":"wongkokian"},"content":"     * @return Output for GUI."},{"lineNumber":23,"author":{"gitId":"wongkokian"},"content":"     */"},{"lineNumber":24,"author":{"gitId":"wongkokian"},"content":"    @Override"},{"lineNumber":25,"author":{"gitId":"wongkokian"},"content":"    public String execute(TaskList tasks, Storage storage) {"},{"lineNumber":26,"author":{"gitId":"wongkokian"},"content":"        return \"OOPS!!! I\u0027m sorry, but I don\u0027t know what that means...\";"},{"lineNumber":27,"author":{"gitId":"wongkokian"},"content":"    }"},{"lineNumber":28,"author":{"gitId":"wongkokian"},"content":"}"}],"authorContributionMap":{"wongkokian":28}},{"path":"src/main/java/duke/command/UpdateCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"wongkokian"},"content":"package duke.command;"},{"lineNumber":2,"author":{"gitId":"wongkokian"},"content":""},{"lineNumber":3,"author":{"gitId":"wongkokian"},"content":"import duke.exception.DukeException;"},{"lineNumber":4,"author":{"gitId":"wongkokian"},"content":"import duke.storage.Storage;"},{"lineNumber":5,"author":{"gitId":"wongkokian"},"content":"import duke.task.TaskList;"},{"lineNumber":6,"author":{"gitId":"wongkokian"},"content":""},{"lineNumber":7,"author":{"gitId":"wongkokian"},"content":"/**"},{"lineNumber":8,"author":{"gitId":"wongkokian"},"content":" * A UpdateCommand class to execute task update."},{"lineNumber":9,"author":{"gitId":"wongkokian"},"content":" */"},{"lineNumber":10,"author":{"gitId":"wongkokian"},"content":"public class UpdateCommand extends Command {"},{"lineNumber":11,"author":{"gitId":"wongkokian"},"content":"    protected String fullCommand;"},{"lineNumber":12,"author":{"gitId":"wongkokian"},"content":""},{"lineNumber":13,"author":{"gitId":"wongkokian"},"content":"    /**"},{"lineNumber":14,"author":{"gitId":"wongkokian"},"content":"     * Constructs UpdateCommand."},{"lineNumber":15,"author":{"gitId":"wongkokian"},"content":"     *"},{"lineNumber":16,"author":{"gitId":"wongkokian"},"content":"     * @param fullCommand The command given."},{"lineNumber":17,"author":{"gitId":"wongkokian"},"content":"     */"},{"lineNumber":18,"author":{"gitId":"wongkokian"},"content":"    public UpdateCommand(String fullCommand) {"},{"lineNumber":19,"author":{"gitId":"wongkokian"},"content":"        super();"},{"lineNumber":20,"author":{"gitId":"wongkokian"},"content":"        this.fullCommand \u003d fullCommand;"},{"lineNumber":21,"author":{"gitId":"wongkokian"},"content":"    }"},{"lineNumber":22,"author":{"gitId":"wongkokian"},"content":""},{"lineNumber":23,"author":{"gitId":"wongkokian"},"content":"    /**"},{"lineNumber":24,"author":{"gitId":"wongkokian"},"content":"     * Executes the task update."},{"lineNumber":25,"author":{"gitId":"wongkokian"},"content":"     *"},{"lineNumber":26,"author":{"gitId":"wongkokian"},"content":"     * @param tasks   The list of tasks."},{"lineNumber":27,"author":{"gitId":"wongkokian"},"content":"     * @param storage The storage handler."},{"lineNumber":28,"author":{"gitId":"wongkokian"},"content":"     * @return Output for GUI."},{"lineNumber":29,"author":{"gitId":"wongkokian"},"content":"     * @throws DukeException If user input format is wrong."},{"lineNumber":30,"author":{"gitId":"wongkokian"},"content":"     */"},{"lineNumber":31,"author":{"gitId":"wongkokian"},"content":"    @Override"},{"lineNumber":32,"author":{"gitId":"wongkokian"},"content":"    public String execute(TaskList tasks, Storage storage) throws DukeException {"},{"lineNumber":33,"author":{"gitId":"wongkokian"},"content":"        return tasks.updateTask(this.fullCommand);"},{"lineNumber":34,"author":{"gitId":"wongkokian"},"content":"    }"},{"lineNumber":35,"author":{"gitId":"wongkokian"},"content":"}"}],"authorContributionMap":{"wongkokian":35}},{"path":"src/main/java/duke/exception/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"wongkokian"},"content":"package duke.exception;"},{"lineNumber":2,"author":{"gitId":"wongkokian"},"content":""},{"lineNumber":3,"author":{"gitId":"wongkokian"},"content":"/**"},{"lineNumber":4,"author":{"gitId":"wongkokian"},"content":" * A DukeException class to represents all exceptions with"},{"lineNumber":5,"author":{"gitId":"wongkokian"},"content":" * regards to Duke."},{"lineNumber":6,"author":{"gitId":"wongkokian"},"content":" */"},{"lineNumber":7,"author":{"gitId":"wongkokian"},"content":"public class DukeException extends Exception {"},{"lineNumber":8,"author":{"gitId":"wongkokian"},"content":"    /**"},{"lineNumber":9,"author":{"gitId":"wongkokian"},"content":"     * Constructs DukeException."},{"lineNumber":10,"author":{"gitId":"wongkokian"},"content":"     *"},{"lineNumber":11,"author":{"gitId":"wongkokian"},"content":"     * @param message The error message."},{"lineNumber":12,"author":{"gitId":"wongkokian"},"content":"     */"},{"lineNumber":13,"author":{"gitId":"wongkokian"},"content":"    public DukeException(String message) {"},{"lineNumber":14,"author":{"gitId":"wongkokian"},"content":"        super(message);"},{"lineNumber":15,"author":{"gitId":"wongkokian"},"content":"    }"},{"lineNumber":16,"author":{"gitId":"wongkokian"},"content":"}"}],"authorContributionMap":{"wongkokian":16}},{"path":"src/main/java/duke/parser/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"wongkokian"},"content":"package duke.parser;"},{"lineNumber":2,"author":{"gitId":"wongkokian"},"content":""},{"lineNumber":3,"author":{"gitId":"wongkokian"},"content":"import duke.command.AddTaskCommand;"},{"lineNumber":4,"author":{"gitId":"wongkokian"},"content":"import duke.command.ByeCommand;"},{"lineNumber":5,"author":{"gitId":"wongkokian"},"content":"import duke.command.Command;"},{"lineNumber":6,"author":{"gitId":"wongkokian"},"content":"import duke.command.DeleteCommand;"},{"lineNumber":7,"author":{"gitId":"wongkokian"},"content":"import duke.command.DoneCommand;"},{"lineNumber":8,"author":{"gitId":"wongkokian"},"content":"import duke.command.FindCommand;"},{"lineNumber":9,"author":{"gitId":"wongkokian"},"content":"import duke.command.ListCommand;"},{"lineNumber":10,"author":{"gitId":"wongkokian"},"content":"import duke.command.UnknownCommand;"},{"lineNumber":11,"author":{"gitId":"wongkokian"},"content":"import duke.command.UpdateCommand;"},{"lineNumber":12,"author":{"gitId":"wongkokian"},"content":""},{"lineNumber":13,"author":{"gitId":"wongkokian"},"content":"/**"},{"lineNumber":14,"author":{"gitId":"wongkokian"},"content":" * A Parser class to parse inputs given by user into Commands."},{"lineNumber":15,"author":{"gitId":"wongkokian"},"content":" */"},{"lineNumber":16,"author":{"gitId":"wongkokian"},"content":"public class Parser {"},{"lineNumber":17,"author":{"gitId":"wongkokian"},"content":"    /**"},{"lineNumber":18,"author":{"gitId":"wongkokian"},"content":"     * Parses the given String into a Command."},{"lineNumber":19,"author":{"gitId":"wongkokian"},"content":"     *"},{"lineNumber":20,"author":{"gitId":"wongkokian"},"content":"     * @param fullCommand The user input to be parsed."},{"lineNumber":21,"author":{"gitId":"wongkokian"},"content":"     * @return The command as parsed from the input."},{"lineNumber":22,"author":{"gitId":"wongkokian"},"content":"     */"},{"lineNumber":23,"author":{"gitId":"wongkokian"},"content":"    public static Command parse(String fullCommand) {"},{"lineNumber":24,"author":{"gitId":"wongkokian"},"content":"        String[] commandArr \u003d fullCommand.split(\" \", 2);"},{"lineNumber":25,"author":{"gitId":"wongkokian"},"content":"        String type \u003d commandArr[0];"},{"lineNumber":26,"author":{"gitId":"wongkokian"},"content":"        switch (type) {"},{"lineNumber":27,"author":{"gitId":"wongkokian"},"content":"        case \"list\":"},{"lineNumber":28,"author":{"gitId":"wongkokian"},"content":"            return new ListCommand();"},{"lineNumber":29,"author":{"gitId":"wongkokian"},"content":"        case \"done\":"},{"lineNumber":30,"author":{"gitId":"wongkokian"},"content":"            return new DoneCommand(fullCommand);"},{"lineNumber":31,"author":{"gitId":"wongkokian"},"content":"        case \"delete\":"},{"lineNumber":32,"author":{"gitId":"wongkokian"},"content":"            return new DeleteCommand(fullCommand);"},{"lineNumber":33,"author":{"gitId":"wongkokian"},"content":"        case \"todo\":"},{"lineNumber":34,"author":{"gitId":"wongkokian"},"content":"        case \"deadline\":"},{"lineNumber":35,"author":{"gitId":"wongkokian"},"content":"        case \"event\":"},{"lineNumber":36,"author":{"gitId":"wongkokian"},"content":"            return new AddTaskCommand(type, fullCommand);"},{"lineNumber":37,"author":{"gitId":"wongkokian"},"content":"        case \"bye\":"},{"lineNumber":38,"author":{"gitId":"wongkokian"},"content":"            return new ByeCommand();"},{"lineNumber":39,"author":{"gitId":"wongkokian"},"content":"        case \"find\":"},{"lineNumber":40,"author":{"gitId":"wongkokian"},"content":"            return new FindCommand(fullCommand);"},{"lineNumber":41,"author":{"gitId":"wongkokian"},"content":"        case \"update\":"},{"lineNumber":42,"author":{"gitId":"wongkokian"},"content":"            return new UpdateCommand(fullCommand);"},{"lineNumber":43,"author":{"gitId":"wongkokian"},"content":"        default:"},{"lineNumber":44,"author":{"gitId":"wongkokian"},"content":"            return new UnknownCommand();"},{"lineNumber":45,"author":{"gitId":"wongkokian"},"content":"        }"},{"lineNumber":46,"author":{"gitId":"wongkokian"},"content":"    }"},{"lineNumber":47,"author":{"gitId":"wongkokian"},"content":"}"}],"authorContributionMap":{"wongkokian":47}},{"path":"src/main/java/duke/storage/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"wongkokian"},"content":"package duke.storage;"},{"lineNumber":2,"author":{"gitId":"wongkokian"},"content":""},{"lineNumber":3,"author":{"gitId":"wongkokian"},"content":"import java.io.File;"},{"lineNumber":4,"author":{"gitId":"wongkokian"},"content":"import java.io.FileNotFoundException;"},{"lineNumber":5,"author":{"gitId":"wongkokian"},"content":"import java.io.FileWriter;"},{"lineNumber":6,"author":{"gitId":"wongkokian"},"content":"import java.io.IOException;"},{"lineNumber":7,"author":{"gitId":"wongkokian"},"content":"import java.time.LocalDate;"},{"lineNumber":8,"author":{"gitId":"wongkokian"},"content":"import java.util.ArrayList;"},{"lineNumber":9,"author":{"gitId":"wongkokian"},"content":"import java.util.Scanner;"},{"lineNumber":10,"author":{"gitId":"wongkokian"},"content":""},{"lineNumber":11,"author":{"gitId":"wongkokian"},"content":"import duke.exception.DukeException;"},{"lineNumber":12,"author":{"gitId":"wongkokian"},"content":"import duke.task.Deadline;"},{"lineNumber":13,"author":{"gitId":"wongkokian"},"content":"import duke.task.Event;"},{"lineNumber":14,"author":{"gitId":"wongkokian"},"content":"import duke.task.Task;"},{"lineNumber":15,"author":{"gitId":"wongkokian"},"content":"import duke.task.Todo;"},{"lineNumber":16,"author":{"gitId":"wongkokian"},"content":""},{"lineNumber":17,"author":{"gitId":"wongkokian"},"content":"/**"},{"lineNumber":18,"author":{"gitId":"wongkokian"},"content":" * A Storage class to handle storage operations."},{"lineNumber":19,"author":{"gitId":"wongkokian"},"content":" */"},{"lineNumber":20,"author":{"gitId":"wongkokian"},"content":"public class Storage {"},{"lineNumber":21,"author":{"gitId":"wongkokian"},"content":"    private final File file;"},{"lineNumber":22,"author":{"gitId":"wongkokian"},"content":""},{"lineNumber":23,"author":{"gitId":"wongkokian"},"content":"    /**"},{"lineNumber":24,"author":{"gitId":"wongkokian"},"content":"     * Constructs Storage."},{"lineNumber":25,"author":{"gitId":"wongkokian"},"content":"     *"},{"lineNumber":26,"author":{"gitId":"wongkokian"},"content":"     * @param path The filepath of where the data file is to be stored at."},{"lineNumber":27,"author":{"gitId":"wongkokian"},"content":"     */"},{"lineNumber":28,"author":{"gitId":"wongkokian"},"content":"    public Storage(String path) {"},{"lineNumber":29,"author":{"gitId":"wongkokian"},"content":"        this.file \u003d new File(path);"},{"lineNumber":30,"author":{"gitId":"wongkokian"},"content":"    }"},{"lineNumber":31,"author":{"gitId":"wongkokian"},"content":""},{"lineNumber":32,"author":{"gitId":"wongkokian"},"content":"    /**"},{"lineNumber":33,"author":{"gitId":"wongkokian"},"content":"     * Creates the data file and directory which contains it if it does not exists."},{"lineNumber":34,"author":{"gitId":"wongkokian"},"content":"     *"},{"lineNumber":35,"author":{"gitId":"wongkokian"},"content":"     * @throws DukeException If unable to create file/directory."},{"lineNumber":36,"author":{"gitId":"wongkokian"},"content":"     */"},{"lineNumber":37,"author":{"gitId":"wongkokian"},"content":"    public void createFileAndDirectory() throws DukeException {"},{"lineNumber":38,"author":{"gitId":"wongkokian"},"content":"        try {"},{"lineNumber":39,"author":{"gitId":"wongkokian"},"content":"            File dir \u003d new File(\"data\");"},{"lineNumber":40,"author":{"gitId":"wongkokian"},"content":"            if (!dir.exists()) {"},{"lineNumber":41,"author":{"gitId":"wongkokian"},"content":"                if (dir.mkdir()) {"},{"lineNumber":42,"author":{"gitId":"wongkokian"},"content":"                    System.out.println(\"File directory created.\");"},{"lineNumber":43,"author":{"gitId":"wongkokian"},"content":"                }"},{"lineNumber":44,"author":{"gitId":"wongkokian"},"content":"            }"},{"lineNumber":45,"author":{"gitId":"wongkokian"},"content":"            File file \u003d new File(\"data/tasks.txt\");"},{"lineNumber":46,"author":{"gitId":"wongkokian"},"content":"            if (file.createNewFile()) {"},{"lineNumber":47,"author":{"gitId":"wongkokian"},"content":"                System.out.println(\"Data file created.\\n\");"},{"lineNumber":48,"author":{"gitId":"wongkokian"},"content":"            } else {"},{"lineNumber":49,"author":{"gitId":"wongkokian"},"content":"                System.out.println(\"There is an existing data file.\\n\");"},{"lineNumber":50,"author":{"gitId":"wongkokian"},"content":"            }"},{"lineNumber":51,"author":{"gitId":"wongkokian"},"content":"        } catch (IOException ex) {"},{"lineNumber":52,"author":{"gitId":"wongkokian"},"content":"            throw new DukeException(\"Unable to create new file.\");"},{"lineNumber":53,"author":{"gitId":"wongkokian"},"content":"        }"},{"lineNumber":54,"author":{"gitId":"wongkokian"},"content":"        assert file.exists(): \"File does not exists or has not been created.\";"},{"lineNumber":55,"author":{"gitId":"wongkokian"},"content":"    }"},{"lineNumber":56,"author":{"gitId":"wongkokian"},"content":""},{"lineNumber":57,"author":{"gitId":"wongkokian"},"content":"    /**"},{"lineNumber":58,"author":{"gitId":"wongkokian"},"content":"     * Loads tasks from data file to Duke."},{"lineNumber":59,"author":{"gitId":"wongkokian"},"content":"     *"},{"lineNumber":60,"author":{"gitId":"wongkokian"},"content":"     * @return The list of tasks to be loaded."},{"lineNumber":61,"author":{"gitId":"wongkokian"},"content":"     * @throws DukeException If file cannot be found."},{"lineNumber":62,"author":{"gitId":"wongkokian"},"content":"     */"},{"lineNumber":63,"author":{"gitId":"wongkokian"},"content":"    public ArrayList\u003cTask\u003e load() throws DukeException {"},{"lineNumber":64,"author":{"gitId":"wongkokian"},"content":"        Scanner sc;"},{"lineNumber":65,"author":{"gitId":"wongkokian"},"content":"        try {"},{"lineNumber":66,"author":{"gitId":"wongkokian"},"content":"            sc \u003d new Scanner(this.file);"},{"lineNumber":67,"author":{"gitId":"wongkokian"},"content":"        } catch (FileNotFoundException ex) {"},{"lineNumber":68,"author":{"gitId":"wongkokian"},"content":"            throw new DukeException(\"File not found.\");"},{"lineNumber":69,"author":{"gitId":"wongkokian"},"content":"        }"},{"lineNumber":70,"author":{"gitId":"wongkokian"},"content":"        ArrayList\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();"},{"lineNumber":71,"author":{"gitId":"wongkokian"},"content":"        while (sc.hasNextLine()) {"},{"lineNumber":72,"author":{"gitId":"wongkokian"},"content":"            String[] currTask \u003d sc.nextLine().split(\" // \");"},{"lineNumber":73,"author":{"gitId":"wongkokian"},"content":"            assert currTask[0].equals(\"T\") || currTask[0].equals(\"D\") || currTask[0].equals(\"E\")"},{"lineNumber":74,"author":{"gitId":"wongkokian"},"content":"                    : \"Data has been changed/modified incorrectly.\";"},{"lineNumber":75,"author":{"gitId":"wongkokian"},"content":"            String type \u003d currTask[0];"},{"lineNumber":76,"author":{"gitId":"wongkokian"},"content":"            switch (type) {"},{"lineNumber":77,"author":{"gitId":"wongkokian"},"content":"            case \"T\":"},{"lineNumber":78,"author":{"gitId":"wongkokian"},"content":"                tasks.add(new Todo(Integer.parseInt(currTask[1]), currTask[2]));"},{"lineNumber":79,"author":{"gitId":"wongkokian"},"content":"                break;"},{"lineNumber":80,"author":{"gitId":"wongkokian"},"content":"            case \"D\":"},{"lineNumber":81,"author":{"gitId":"wongkokian"},"content":"                tasks.add(new Deadline(Integer.parseInt(currTask[1]),"},{"lineNumber":82,"author":{"gitId":"wongkokian"},"content":"                        currTask[2], LocalDate.parse(currTask[3])));"},{"lineNumber":83,"author":{"gitId":"wongkokian"},"content":"                break;"},{"lineNumber":84,"author":{"gitId":"wongkokian"},"content":"            case \"E\":"},{"lineNumber":85,"author":{"gitId":"wongkokian"},"content":"                tasks.add(new Event(Integer.parseInt(currTask[1]),"},{"lineNumber":86,"author":{"gitId":"wongkokian"},"content":"                        currTask[2], LocalDate.parse(currTask[3])));"},{"lineNumber":87,"author":{"gitId":"wongkokian"},"content":"                break;"},{"lineNumber":88,"author":{"gitId":"wongkokian"},"content":"            default:"},{"lineNumber":89,"author":{"gitId":"wongkokian"},"content":"            }"},{"lineNumber":90,"author":{"gitId":"wongkokian"},"content":"        }"},{"lineNumber":91,"author":{"gitId":"wongkokian"},"content":"        return tasks;"},{"lineNumber":92,"author":{"gitId":"wongkokian"},"content":"    }"},{"lineNumber":93,"author":{"gitId":"wongkokian"},"content":""},{"lineNumber":94,"author":{"gitId":"wongkokian"},"content":"    /**"},{"lineNumber":95,"author":{"gitId":"wongkokian"},"content":"     * Saves the list of task to the data file."},{"lineNumber":96,"author":{"gitId":"wongkokian"},"content":"     *"},{"lineNumber":97,"author":{"gitId":"wongkokian"},"content":"     * @param tasks The list of tasks to be stored."},{"lineNumber":98,"author":{"gitId":"wongkokian"},"content":"     * @throws DukeException If unable to save data."},{"lineNumber":99,"author":{"gitId":"wongkokian"},"content":"     */"},{"lineNumber":100,"author":{"gitId":"wongkokian"},"content":"    public void save(ArrayList\u003cTask\u003e tasks) throws DukeException {"},{"lineNumber":101,"author":{"gitId":"wongkokian"},"content":"        assert file.exists(): \"File does not exist, cannot be saved.\";"},{"lineNumber":102,"author":{"gitId":"wongkokian"},"content":"        try {"},{"lineNumber":103,"author":{"gitId":"wongkokian"},"content":"            FileWriter fw \u003d new FileWriter(file, true);"},{"lineNumber":104,"author":{"gitId":"wongkokian"},"content":"            for (Task currTask : tasks) {"},{"lineNumber":105,"author":{"gitId":"wongkokian"},"content":"                fw.write(currTask.getFileString());"},{"lineNumber":106,"author":{"gitId":"wongkokian"},"content":"                fw.write(System.lineSeparator());"},{"lineNumber":107,"author":{"gitId":"wongkokian"},"content":"            }"},{"lineNumber":108,"author":{"gitId":"wongkokian"},"content":"            fw.close();"},{"lineNumber":109,"author":{"gitId":"wongkokian"},"content":"        } catch (IOException ex) {"},{"lineNumber":110,"author":{"gitId":"wongkokian"},"content":"            throw new DukeException(\"       OOPS!!! Unable to save data.\");"},{"lineNumber":111,"author":{"gitId":"wongkokian"},"content":"        }"},{"lineNumber":112,"author":{"gitId":"wongkokian"},"content":"    }"},{"lineNumber":113,"author":{"gitId":"wongkokian"},"content":""},{"lineNumber":114,"author":{"gitId":"wongkokian"},"content":"    /**"},{"lineNumber":115,"author":{"gitId":"wongkokian"},"content":"     * Clears the data in the existing data file."},{"lineNumber":116,"author":{"gitId":"wongkokian"},"content":"     *"},{"lineNumber":117,"author":{"gitId":"wongkokian"},"content":"     * @throws DukeException If unable to clear data."},{"lineNumber":118,"author":{"gitId":"wongkokian"},"content":"     */"},{"lineNumber":119,"author":{"gitId":"wongkokian"},"content":"    public void clear() throws DukeException {"},{"lineNumber":120,"author":{"gitId":"wongkokian"},"content":"        assert file.exists(): \"File does not exist, cannot be cleared.\";"},{"lineNumber":121,"author":{"gitId":"wongkokian"},"content":"        try {"},{"lineNumber":122,"author":{"gitId":"wongkokian"},"content":"            FileWriter cleaner \u003d new FileWriter(file, false);"},{"lineNumber":123,"author":{"gitId":"wongkokian"},"content":"            cleaner.close();"},{"lineNumber":124,"author":{"gitId":"wongkokian"},"content":"        } catch (IOException ex) {"},{"lineNumber":125,"author":{"gitId":"wongkokian"},"content":"            throw new DukeException(\"       OOPS!!! Unable to clear data.\");"},{"lineNumber":126,"author":{"gitId":"wongkokian"},"content":"        }"},{"lineNumber":127,"author":{"gitId":"wongkokian"},"content":"        assert file.length() \u003d\u003d 0: \"File has not been cleared.\";"},{"lineNumber":128,"author":{"gitId":"wongkokian"},"content":"    }"},{"lineNumber":129,"author":{"gitId":"wongkokian"},"content":"}"}],"authorContributionMap":{"wongkokian":129}},{"path":"src/main/java/duke/task/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"wongkokian"},"content":"package duke.task;"},{"lineNumber":2,"author":{"gitId":"wongkokian"},"content":""},{"lineNumber":3,"author":{"gitId":"wongkokian"},"content":"import java.time.LocalDate;"},{"lineNumber":4,"author":{"gitId":"wongkokian"},"content":"import java.time.format.DateTimeFormatter;"},{"lineNumber":5,"author":{"gitId":"wongkokian"},"content":""},{"lineNumber":6,"author":{"gitId":"wongkokian"},"content":"/**"},{"lineNumber":7,"author":{"gitId":"wongkokian"},"content":" * A Deadline class which represents a deadline task."},{"lineNumber":8,"author":{"gitId":"wongkokian"},"content":" */"},{"lineNumber":9,"author":{"gitId":"wongkokian"},"content":"public class Deadline extends Task {"},{"lineNumber":10,"author":{"gitId":"wongkokian"},"content":"    protected LocalDate date;"},{"lineNumber":11,"author":{"gitId":"wongkokian"},"content":""},{"lineNumber":12,"author":{"gitId":"wongkokian"},"content":"    /**"},{"lineNumber":13,"author":{"gitId":"wongkokian"},"content":"     * Constructs Deadline."},{"lineNumber":14,"author":{"gitId":"wongkokian"},"content":"     *"},{"lineNumber":15,"author":{"gitId":"wongkokian"},"content":"     * @param isDone      Determines if task is completed."},{"lineNumber":16,"author":{"gitId":"wongkokian"},"content":"     * @param description Task description."},{"lineNumber":17,"author":{"gitId":"wongkokian"},"content":"     * @param date        Due date."},{"lineNumber":18,"author":{"gitId":"wongkokian"},"content":"     */"},{"lineNumber":19,"author":{"gitId":"wongkokian"},"content":"    public Deadline(int isDone, String description, LocalDate date) {"},{"lineNumber":20,"author":{"gitId":"wongkokian"},"content":"        super(\u0027D\u0027, isDone, description);"},{"lineNumber":21,"author":{"gitId":"wongkokian"},"content":"        this.date \u003d date;"},{"lineNumber":22,"author":{"gitId":"wongkokian"},"content":"    }"},{"lineNumber":23,"author":{"gitId":"wongkokian"},"content":""},{"lineNumber":24,"author":{"gitId":"wongkokian"},"content":"    /**"},{"lineNumber":25,"author":{"gitId":"wongkokian"},"content":"     * Creates String to be stored in the data file."},{"lineNumber":26,"author":{"gitId":"wongkokian"},"content":"     *"},{"lineNumber":27,"author":{"gitId":"wongkokian"},"content":"     * @return String in the format to be stored in data file."},{"lineNumber":28,"author":{"gitId":"wongkokian"},"content":"     */"},{"lineNumber":29,"author":{"gitId":"wongkokian"},"content":"    @Override"},{"lineNumber":30,"author":{"gitId":"wongkokian"},"content":"    public String getFileString() {"},{"lineNumber":31,"author":{"gitId":"wongkokian"},"content":"        return super.getFileString() + \" // \" + this.date;"},{"lineNumber":32,"author":{"gitId":"wongkokian"},"content":"    }"},{"lineNumber":33,"author":{"gitId":"wongkokian"},"content":""},{"lineNumber":34,"author":{"gitId":"wongkokian"},"content":"    public void setDate(LocalDate date) {"},{"lineNumber":35,"author":{"gitId":"wongkokian"},"content":"        this.date \u003d date;"},{"lineNumber":36,"author":{"gitId":"wongkokian"},"content":"    }"},{"lineNumber":37,"author":{"gitId":"wongkokian"},"content":""},{"lineNumber":38,"author":{"gitId":"wongkokian"},"content":"    @Override"},{"lineNumber":39,"author":{"gitId":"wongkokian"},"content":"    public String toString() {"},{"lineNumber":40,"author":{"gitId":"wongkokian"},"content":"        return \"[D]\" + super.toString()"},{"lineNumber":41,"author":{"gitId":"wongkokian"},"content":"                + \" (by: \" + date.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\")) + \")\";"},{"lineNumber":42,"author":{"gitId":"wongkokian"},"content":"    }"},{"lineNumber":43,"author":{"gitId":"wongkokian"},"content":"}"}],"authorContributionMap":{"wongkokian":43}},{"path":"src/main/java/duke/task/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"wongkokian"},"content":"package duke.task;"},{"lineNumber":2,"author":{"gitId":"wongkokian"},"content":""},{"lineNumber":3,"author":{"gitId":"wongkokian"},"content":"import java.time.LocalDate;"},{"lineNumber":4,"author":{"gitId":"wongkokian"},"content":"import java.time.format.DateTimeFormatter;"},{"lineNumber":5,"author":{"gitId":"wongkokian"},"content":""},{"lineNumber":6,"author":{"gitId":"wongkokian"},"content":"/**"},{"lineNumber":7,"author":{"gitId":"wongkokian"},"content":" * A Event class to which represents a event task."},{"lineNumber":8,"author":{"gitId":"wongkokian"},"content":" */"},{"lineNumber":9,"author":{"gitId":"wongkokian"},"content":"public class Event extends Task {"},{"lineNumber":10,"author":{"gitId":"wongkokian"},"content":"    protected LocalDate date;"},{"lineNumber":11,"author":{"gitId":"wongkokian"},"content":""},{"lineNumber":12,"author":{"gitId":"wongkokian"},"content":"    /**"},{"lineNumber":13,"author":{"gitId":"wongkokian"},"content":"     * Constructs Event."},{"lineNumber":14,"author":{"gitId":"wongkokian"},"content":"     *"},{"lineNumber":15,"author":{"gitId":"wongkokian"},"content":"     * @param isDone      Determines if task is completed."},{"lineNumber":16,"author":{"gitId":"wongkokian"},"content":"     * @param description Task description."},{"lineNumber":17,"author":{"gitId":"wongkokian"},"content":"     * @param date        Date of Event."},{"lineNumber":18,"author":{"gitId":"wongkokian"},"content":"     */"},{"lineNumber":19,"author":{"gitId":"wongkokian"},"content":"    public Event(int isDone, String description, LocalDate date) {"},{"lineNumber":20,"author":{"gitId":"wongkokian"},"content":"        super(\u0027E\u0027, isDone, description);"},{"lineNumber":21,"author":{"gitId":"wongkokian"},"content":"        this.date \u003d date;"},{"lineNumber":22,"author":{"gitId":"wongkokian"},"content":"    }"},{"lineNumber":23,"author":{"gitId":"wongkokian"},"content":""},{"lineNumber":24,"author":{"gitId":"wongkokian"},"content":"    /**"},{"lineNumber":25,"author":{"gitId":"wongkokian"},"content":"     * Creates String to be stored in the data file."},{"lineNumber":26,"author":{"gitId":"wongkokian"},"content":"     *"},{"lineNumber":27,"author":{"gitId":"wongkokian"},"content":"     * @return String in the format to be stored in data file."},{"lineNumber":28,"author":{"gitId":"wongkokian"},"content":"     */"},{"lineNumber":29,"author":{"gitId":"wongkokian"},"content":"    @Override"},{"lineNumber":30,"author":{"gitId":"wongkokian"},"content":"    public String getFileString() {"},{"lineNumber":31,"author":{"gitId":"wongkokian"},"content":"        return super.getFileString() + \" // \" + this.date;"},{"lineNumber":32,"author":{"gitId":"wongkokian"},"content":"    }"},{"lineNumber":33,"author":{"gitId":"wongkokian"},"content":""},{"lineNumber":34,"author":{"gitId":"wongkokian"},"content":"    public void setDate(LocalDate date) {"},{"lineNumber":35,"author":{"gitId":"wongkokian"},"content":"        this.date \u003d date;"},{"lineNumber":36,"author":{"gitId":"wongkokian"},"content":"    }"},{"lineNumber":37,"author":{"gitId":"wongkokian"},"content":""},{"lineNumber":38,"author":{"gitId":"wongkokian"},"content":"    @Override"},{"lineNumber":39,"author":{"gitId":"wongkokian"},"content":"    public String toString() {"},{"lineNumber":40,"author":{"gitId":"wongkokian"},"content":"        return \"[E]\" + super.toString()"},{"lineNumber":41,"author":{"gitId":"wongkokian"},"content":"                + \" (at: \" + date.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\")) + \")\";"},{"lineNumber":42,"author":{"gitId":"wongkokian"},"content":"    }"},{"lineNumber":43,"author":{"gitId":"wongkokian"},"content":"}"}],"authorContributionMap":{"wongkokian":43}},{"path":"src/main/java/duke/task/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"wongkokian"},"content":"package duke.task;"},{"lineNumber":2,"author":{"gitId":"wongkokian"},"content":""},{"lineNumber":3,"author":{"gitId":"wongkokian"},"content":"/**"},{"lineNumber":4,"author":{"gitId":"wongkokian"},"content":" * A Task class which represents a task."},{"lineNumber":5,"author":{"gitId":"wongkokian"},"content":" */"},{"lineNumber":6,"author":{"gitId":"wongkokian"},"content":"public class Task {"},{"lineNumber":7,"author":{"gitId":"wongkokian"},"content":"    protected char type;"},{"lineNumber":8,"author":{"gitId":"wongkokian"},"content":"    protected String description;"},{"lineNumber":9,"author":{"gitId":"wongkokian"},"content":"    protected boolean isDone;"},{"lineNumber":10,"author":{"gitId":"wongkokian"},"content":""},{"lineNumber":11,"author":{"gitId":"wongkokian"},"content":"    /**"},{"lineNumber":12,"author":{"gitId":"wongkokian"},"content":"     * Constructs Task."},{"lineNumber":13,"author":{"gitId":"wongkokian"},"content":"     *"},{"lineNumber":14,"author":{"gitId":"wongkokian"},"content":"     * @param type        The type of task."},{"lineNumber":15,"author":{"gitId":"wongkokian"},"content":"     * @param isDone      Determines if task is completed."},{"lineNumber":16,"author":{"gitId":"wongkokian"},"content":"     * @param description Task description."},{"lineNumber":17,"author":{"gitId":"wongkokian"},"content":"     */"},{"lineNumber":18,"author":{"gitId":"wongkokian"},"content":"    public Task(char type, int isDone, String description) {"},{"lineNumber":19,"author":{"gitId":"wongkokian"},"content":"        this.type \u003d type;"},{"lineNumber":20,"author":{"gitId":"wongkokian"},"content":"        this.description \u003d description;"},{"lineNumber":21,"author":{"gitId":"wongkokian"},"content":"        this.isDone \u003d isDone \u003d\u003d 1;"},{"lineNumber":22,"author":{"gitId":"wongkokian"},"content":"    }"},{"lineNumber":23,"author":{"gitId":"wongkokian"},"content":""},{"lineNumber":24,"author":{"gitId":"wongkokian"},"content":"    /**"},{"lineNumber":25,"author":{"gitId":"wongkokian"},"content":"     * Creates String to be stored in the data file."},{"lineNumber":26,"author":{"gitId":"wongkokian"},"content":"     *"},{"lineNumber":27,"author":{"gitId":"wongkokian"},"content":"     * @return String in the format to be stored in data file."},{"lineNumber":28,"author":{"gitId":"wongkokian"},"content":"     */"},{"lineNumber":29,"author":{"gitId":"wongkokian"},"content":"    public String getFileString() {"},{"lineNumber":30,"author":{"gitId":"wongkokian"},"content":"        return String.format(\"%c // %d // %s\", this.type, isDone ? 1 : 0, this.description);"},{"lineNumber":31,"author":{"gitId":"wongkokian"},"content":"    }"},{"lineNumber":32,"author":{"gitId":"wongkokian"},"content":""},{"lineNumber":33,"author":{"gitId":"wongkokian"},"content":"    /**"},{"lineNumber":34,"author":{"gitId":"wongkokian"},"content":"     * Creates status icon."},{"lineNumber":35,"author":{"gitId":"wongkokian"},"content":"     *"},{"lineNumber":36,"author":{"gitId":"wongkokian"},"content":"     * @return Status icon of task whether completed or not."},{"lineNumber":37,"author":{"gitId":"wongkokian"},"content":"     */"},{"lineNumber":38,"author":{"gitId":"wongkokian"},"content":"    public String getStatusIcon() {"},{"lineNumber":39,"author":{"gitId":"wongkokian"},"content":"        return (isDone ? \"[X]\" : \"[ ]\");"},{"lineNumber":40,"author":{"gitId":"wongkokian"},"content":"    }"},{"lineNumber":41,"author":{"gitId":"wongkokian"},"content":""},{"lineNumber":42,"author":{"gitId":"wongkokian"},"content":"    /**"},{"lineNumber":43,"author":{"gitId":"wongkokian"},"content":"     * Marks task as done."},{"lineNumber":44,"author":{"gitId":"wongkokian"},"content":"     */"},{"lineNumber":45,"author":{"gitId":"wongkokian"},"content":"    public void markAsDone() {"},{"lineNumber":46,"author":{"gitId":"wongkokian"},"content":"        this.isDone \u003d true;"},{"lineNumber":47,"author":{"gitId":"wongkokian"},"content":"    }"},{"lineNumber":48,"author":{"gitId":"wongkokian"},"content":""},{"lineNumber":49,"author":{"gitId":"wongkokian"},"content":"    public String getDescription() {"},{"lineNumber":50,"author":{"gitId":"wongkokian"},"content":"        return this.description;"},{"lineNumber":51,"author":{"gitId":"wongkokian"},"content":"    }"},{"lineNumber":52,"author":{"gitId":"wongkokian"},"content":""},{"lineNumber":53,"author":{"gitId":"wongkokian"},"content":"    public void setDescription(String description) {"},{"lineNumber":54,"author":{"gitId":"wongkokian"},"content":"        this.description \u003d description;"},{"lineNumber":55,"author":{"gitId":"wongkokian"},"content":"    }"},{"lineNumber":56,"author":{"gitId":"wongkokian"},"content":""},{"lineNumber":57,"author":{"gitId":"wongkokian"},"content":"    public char getType() {"},{"lineNumber":58,"author":{"gitId":"wongkokian"},"content":"        return this.type;"},{"lineNumber":59,"author":{"gitId":"wongkokian"},"content":"    }"},{"lineNumber":60,"author":{"gitId":"wongkokian"},"content":""},{"lineNumber":61,"author":{"gitId":"wongkokian"},"content":"    @Override"},{"lineNumber":62,"author":{"gitId":"wongkokian"},"content":"    public String toString() {"},{"lineNumber":63,"author":{"gitId":"wongkokian"},"content":"        return getStatusIcon() + \" \" + description;"},{"lineNumber":64,"author":{"gitId":"wongkokian"},"content":"    }"},{"lineNumber":65,"author":{"gitId":"wongkokian"},"content":"}"}],"authorContributionMap":{"wongkokian":65}},{"path":"src/main/java/duke/task/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"wongkokian"},"content":"package duke.task;"},{"lineNumber":2,"author":{"gitId":"wongkokian"},"content":""},{"lineNumber":3,"author":{"gitId":"wongkokian"},"content":"import java.time.LocalDate;"},{"lineNumber":4,"author":{"gitId":"wongkokian"},"content":"import java.time.format.DateTimeParseException;"},{"lineNumber":5,"author":{"gitId":"wongkokian"},"content":"import java.util.ArrayList;"},{"lineNumber":6,"author":{"gitId":"wongkokian"},"content":""},{"lineNumber":7,"author":{"gitId":"wongkokian"},"content":"import duke.exception.DukeException;"},{"lineNumber":8,"author":{"gitId":"wongkokian"},"content":""},{"lineNumber":9,"author":{"gitId":"wongkokian"},"content":"/**"},{"lineNumber":10,"author":{"gitId":"wongkokian"},"content":" * A TaskList class to represent a list of tasks."},{"lineNumber":11,"author":{"gitId":"wongkokian"},"content":" */"},{"lineNumber":12,"author":{"gitId":"wongkokian"},"content":"public class TaskList {"},{"lineNumber":13,"author":{"gitId":"wongkokian"},"content":"    private final ArrayList\u003cTask\u003e tasks;"},{"lineNumber":14,"author":{"gitId":"wongkokian"},"content":""},{"lineNumber":15,"author":{"gitId":"wongkokian"},"content":"    /**"},{"lineNumber":16,"author":{"gitId":"wongkokian"},"content":"     * Constructs a TaskList."},{"lineNumber":17,"author":{"gitId":"wongkokian"},"content":"     *"},{"lineNumber":18,"author":{"gitId":"wongkokian"},"content":"     * @param tasks The list of tasks."},{"lineNumber":19,"author":{"gitId":"wongkokian"},"content":"     */"},{"lineNumber":20,"author":{"gitId":"wongkokian"},"content":"    public TaskList(ArrayList\u003cTask\u003e tasks) {"},{"lineNumber":21,"author":{"gitId":"wongkokian"},"content":"        this.tasks \u003d tasks;"},{"lineNumber":22,"author":{"gitId":"wongkokian"},"content":"    }"},{"lineNumber":23,"author":{"gitId":"wongkokian"},"content":""},{"lineNumber":24,"author":{"gitId":"wongkokian"},"content":"    /**"},{"lineNumber":25,"author":{"gitId":"wongkokian"},"content":"     * Checks if given String is not Numeric."},{"lineNumber":26,"author":{"gitId":"wongkokian"},"content":"     *"},{"lineNumber":27,"author":{"gitId":"wongkokian"},"content":"     * @param str String to be checked."},{"lineNumber":28,"author":{"gitId":"wongkokian"},"content":"     * @return True if not numeric, False otherwise."},{"lineNumber":29,"author":{"gitId":"wongkokian"},"content":"     */"},{"lineNumber":30,"author":{"gitId":"wongkokian"},"content":"    private static boolean checkIfNotNumeric(String str) {"},{"lineNumber":31,"author":{"gitId":"wongkokian"},"content":"        if (str \u003d\u003d null || str.length() \u003d\u003d 0) {"},{"lineNumber":32,"author":{"gitId":"wongkokian"},"content":"            return true;"},{"lineNumber":33,"author":{"gitId":"wongkokian"},"content":"        }"},{"lineNumber":34,"author":{"gitId":"wongkokian"},"content":"        return !str.chars().allMatch(Character::isDigit);"},{"lineNumber":35,"author":{"gitId":"wongkokian"},"content":"    }"},{"lineNumber":36,"author":{"gitId":"wongkokian"},"content":""},{"lineNumber":37,"author":{"gitId":"wongkokian"},"content":"    /**"},{"lineNumber":38,"author":{"gitId":"wongkokian"},"content":"     * Checks if given index is out of range of the TaskList."},{"lineNumber":39,"author":{"gitId":"wongkokian"},"content":"     *"},{"lineNumber":40,"author":{"gitId":"wongkokian"},"content":"     * @param index Index to be checked."},{"lineNumber":41,"author":{"gitId":"wongkokian"},"content":"     * @return True if out of range, False otherwise."},{"lineNumber":42,"author":{"gitId":"wongkokian"},"content":"     */"},{"lineNumber":43,"author":{"gitId":"wongkokian"},"content":"    private boolean checkIfOutOfRange(int index) {"},{"lineNumber":44,"author":{"gitId":"wongkokian"},"content":"        return index \u003c 0 || index \u003e\u003d this.tasks.size();"},{"lineNumber":45,"author":{"gitId":"wongkokian"},"content":"    }"},{"lineNumber":46,"author":{"gitId":"wongkokian"},"content":""},{"lineNumber":47,"author":{"gitId":"wongkokian"},"content":"    /**"},{"lineNumber":48,"author":{"gitId":"wongkokian"},"content":"     * Lists all tasks."},{"lineNumber":49,"author":{"gitId":"wongkokian"},"content":"     *"},{"lineNumber":50,"author":{"gitId":"wongkokian"},"content":"     * @return Output for GUI."},{"lineNumber":51,"author":{"gitId":"wongkokian"},"content":"     */"},{"lineNumber":52,"author":{"gitId":"wongkokian"},"content":"    public String list() {"},{"lineNumber":53,"author":{"gitId":"wongkokian"},"content":"        StringBuilder sb \u003d new StringBuilder(\"Here are the tasks in your list:\\n\");"},{"lineNumber":54,"author":{"gitId":"wongkokian"},"content":"        for (int i \u003d 0; i \u003c tasks.size(); i++) {"},{"lineNumber":55,"author":{"gitId":"wongkokian"},"content":"            Task currTask \u003d tasks.get(i);"},{"lineNumber":56,"author":{"gitId":"wongkokian"},"content":"            String msg \u003d (i + 1) + \". \" + currTask.toString() + \"\\n\";"},{"lineNumber":57,"author":{"gitId":"wongkokian"},"content":"            sb.append(msg);"},{"lineNumber":58,"author":{"gitId":"wongkokian"},"content":"        }"},{"lineNumber":59,"author":{"gitId":"wongkokian"},"content":"        return sb.toString();"},{"lineNumber":60,"author":{"gitId":"wongkokian"},"content":"    }"},{"lineNumber":61,"author":{"gitId":"wongkokian"},"content":""},{"lineNumber":62,"author":{"gitId":"wongkokian"},"content":"    /**"},{"lineNumber":63,"author":{"gitId":"wongkokian"},"content":"     * Completes a task in the TaskList."},{"lineNumber":64,"author":{"gitId":"wongkokian"},"content":"     *"},{"lineNumber":65,"author":{"gitId":"wongkokian"},"content":"     * @param fullCommand Command given by user."},{"lineNumber":66,"author":{"gitId":"wongkokian"},"content":"     * @return Output for GUI."},{"lineNumber":67,"author":{"gitId":"wongkokian"},"content":"     * @throws DukeException If user input format is wrong."},{"lineNumber":68,"author":{"gitId":"wongkokian"},"content":"     */"},{"lineNumber":69,"author":{"gitId":"wongkokian"},"content":"    public String done(String fullCommand) throws DukeException {"},{"lineNumber":70,"author":{"gitId":"wongkokian"},"content":"        String[] inputArr \u003d fullCommand.split(\" \");"},{"lineNumber":71,"author":{"gitId":"wongkokian"},"content":"        if (inputArr.length \u003e 2) {"},{"lineNumber":72,"author":{"gitId":"wongkokian"},"content":"            throw new DukeException(\"OOPS!!! The format should be \""},{"lineNumber":73,"author":{"gitId":"wongkokian"},"content":"                    + \"\\\"done ##\\\" where ## is the task number.\");"},{"lineNumber":74,"author":{"gitId":"wongkokian"},"content":"        }"},{"lineNumber":75,"author":{"gitId":"wongkokian"},"content":"        if (inputArr.length \u003d\u003d 1) {"},{"lineNumber":76,"author":{"gitId":"wongkokian"},"content":"            throw new DukeException(\"OOPS!!! The task number cannot be empty.\");"},{"lineNumber":77,"author":{"gitId":"wongkokian"},"content":"        }"},{"lineNumber":78,"author":{"gitId":"wongkokian"},"content":"        if (checkIfNotNumeric(inputArr[1])) {"},{"lineNumber":79,"author":{"gitId":"wongkokian"},"content":"            throw new DukeException(\"OOPS!!! The task number must be numeric.\");"},{"lineNumber":80,"author":{"gitId":"wongkokian"},"content":"        }"},{"lineNumber":81,"author":{"gitId":"wongkokian"},"content":"        int index \u003d Integer.parseInt(inputArr[1]) - 1;"},{"lineNumber":82,"author":{"gitId":"wongkokian"},"content":"        if (checkIfOutOfRange(index)) {"},{"lineNumber":83,"author":{"gitId":"wongkokian"},"content":"            throw new DukeException(\"OOPS!!! The task number is out of range. \""},{"lineNumber":84,"author":{"gitId":"wongkokian"},"content":"                    + \"Please use \\\"list\\\" to see the list of tasks.\");"},{"lineNumber":85,"author":{"gitId":"wongkokian"},"content":"        } else {"},{"lineNumber":86,"author":{"gitId":"wongkokian"},"content":"            this.tasks.get(index).markAsDone();"},{"lineNumber":87,"author":{"gitId":"wongkokian"},"content":"            Task currTask \u003d tasks.get(index);"},{"lineNumber":88,"author":{"gitId":"wongkokian"},"content":"            return \"Nice! I\u0027ve marked this task as done:\\n\""},{"lineNumber":89,"author":{"gitId":"wongkokian"},"content":"                    + currTask.toString() + \"\\n\";"},{"lineNumber":90,"author":{"gitId":"wongkokian"},"content":"        }"},{"lineNumber":91,"author":{"gitId":"wongkokian"},"content":"    }"},{"lineNumber":92,"author":{"gitId":"wongkokian"},"content":""},{"lineNumber":93,"author":{"gitId":"wongkokian"},"content":"    /**"},{"lineNumber":94,"author":{"gitId":"wongkokian"},"content":"     * Deletes a task from the TaskList."},{"lineNumber":95,"author":{"gitId":"wongkokian"},"content":"     *"},{"lineNumber":96,"author":{"gitId":"wongkokian"},"content":"     * @param fullCommand Command given by user."},{"lineNumber":97,"author":{"gitId":"wongkokian"},"content":"     * @return Output for GUI."},{"lineNumber":98,"author":{"gitId":"wongkokian"},"content":"     * @throws DukeException If user input format is wrong."},{"lineNumber":99,"author":{"gitId":"wongkokian"},"content":"     */"},{"lineNumber":100,"author":{"gitId":"wongkokian"},"content":"    public String delete(String fullCommand) throws DukeException {"},{"lineNumber":101,"author":{"gitId":"wongkokian"},"content":"        String[] inputArr \u003d fullCommand.split(\" \");"},{"lineNumber":102,"author":{"gitId":"wongkokian"},"content":"        if (inputArr.length \u003e 2) {"},{"lineNumber":103,"author":{"gitId":"wongkokian"},"content":""},{"lineNumber":104,"author":{"gitId":"wongkokian"},"content":"            throw new DukeException(\"OOPS!!! The format should be \""},{"lineNumber":105,"author":{"gitId":"wongkokian"},"content":"                    + \"\\\"delete ##\\\" where ## is the task number.\");"},{"lineNumber":106,"author":{"gitId":"wongkokian"},"content":"        }"},{"lineNumber":107,"author":{"gitId":"wongkokian"},"content":"        if (inputArr.length \u003d\u003d 1) {"},{"lineNumber":108,"author":{"gitId":"wongkokian"},"content":"            throw new DukeException(\"OOPS!!! The task number cannot be empty.\");"},{"lineNumber":109,"author":{"gitId":"wongkokian"},"content":"        }"},{"lineNumber":110,"author":{"gitId":"wongkokian"},"content":"        if (checkIfNotNumeric(inputArr[1])) {"},{"lineNumber":111,"author":{"gitId":"wongkokian"},"content":"            throw new DukeException(\"OOPS!!! The task number must be numeric.\");"},{"lineNumber":112,"author":{"gitId":"wongkokian"},"content":""},{"lineNumber":113,"author":{"gitId":"wongkokian"},"content":"        }"},{"lineNumber":114,"author":{"gitId":"wongkokian"},"content":"        int index \u003d Integer.parseInt(inputArr[1]) - 1;"},{"lineNumber":115,"author":{"gitId":"wongkokian"},"content":"        if (checkIfOutOfRange(index)) {"},{"lineNumber":116,"author":{"gitId":"wongkokian"},"content":"            throw new DukeException(\"OOPS!!! The task number is out of range. \""},{"lineNumber":117,"author":{"gitId":"wongkokian"},"content":"                    + \"Please use \\\"list\\\" to see the list of tasks.\");"},{"lineNumber":118,"author":{"gitId":"wongkokian"},"content":"        }"},{"lineNumber":119,"author":{"gitId":"wongkokian"},"content":"        return \"Noted. I\u0027ve removed this task:\\n\""},{"lineNumber":120,"author":{"gitId":"wongkokian"},"content":"                + this.tasks.remove(index).toString() + \"\\n\""},{"lineNumber":121,"author":{"gitId":"wongkokian"},"content":"                + \"Now you have \" + this.tasks.size() + \" tasks in the list.\\n\";"},{"lineNumber":122,"author":{"gitId":"wongkokian"},"content":"    }"},{"lineNumber":123,"author":{"gitId":"wongkokian"},"content":""},{"lineNumber":124,"author":{"gitId":"wongkokian"},"content":"    /**"},{"lineNumber":125,"author":{"gitId":"wongkokian"},"content":"     * Finds all task in task list that contains a given keyword."},{"lineNumber":126,"author":{"gitId":"wongkokian"},"content":"     *"},{"lineNumber":127,"author":{"gitId":"wongkokian"},"content":"     * @param fullCommand Command given by user."},{"lineNumber":128,"author":{"gitId":"wongkokian"},"content":"     * @return Output for GUI."},{"lineNumber":129,"author":{"gitId":"wongkokian"},"content":"     * @throws DukeException If user input format is wrong."},{"lineNumber":130,"author":{"gitId":"wongkokian"},"content":"     */"},{"lineNumber":131,"author":{"gitId":"wongkokian"},"content":"    public String find(String fullCommand) throws DukeException {"},{"lineNumber":132,"author":{"gitId":"wongkokian"},"content":"        String[] inputArr \u003d fullCommand.split(\" \");"},{"lineNumber":133,"author":{"gitId":"wongkokian"},"content":"        if (inputArr.length \u003e 2) {"},{"lineNumber":134,"author":{"gitId":"wongkokian"},"content":"            throw new DukeException(\"OOPS!!! The format should be \""},{"lineNumber":135,"author":{"gitId":"wongkokian"},"content":"                    + \"\\\"find ####\\\" where #### is the keyword to search.\");"},{"lineNumber":136,"author":{"gitId":"wongkokian"},"content":"        }"},{"lineNumber":137,"author":{"gitId":"wongkokian"},"content":"        if (inputArr.length \u003d\u003d 1) {"},{"lineNumber":138,"author":{"gitId":"wongkokian"},"content":"            throw new DukeException(\"OOPS!!! The keyword cannot be empty.\");"},{"lineNumber":139,"author":{"gitId":"wongkokian"},"content":"        }"},{"lineNumber":140,"author":{"gitId":"wongkokian"},"content":"        StringBuilder sb \u003d new StringBuilder(\"Here are the matching tasks in your list:\\n\");"},{"lineNumber":141,"author":{"gitId":"wongkokian"},"content":"        ArrayList\u003cTask\u003e temp \u003d new ArrayList\u003c\u003e();"},{"lineNumber":142,"author":{"gitId":"wongkokian"},"content":"        for (Task currTask : tasks) {"},{"lineNumber":143,"author":{"gitId":"wongkokian"},"content":"            String currDescription \u003d currTask.getDescription();"},{"lineNumber":144,"author":{"gitId":"wongkokian"},"content":"            if (currDescription.contains(inputArr[1])) {"},{"lineNumber":145,"author":{"gitId":"wongkokian"},"content":"                temp.add(currTask);"},{"lineNumber":146,"author":{"gitId":"wongkokian"},"content":"            }"},{"lineNumber":147,"author":{"gitId":"wongkokian"},"content":"        }"},{"lineNumber":148,"author":{"gitId":"wongkokian"},"content":"        for (int j \u003d 0; j \u003c temp.size(); j++) {"},{"lineNumber":149,"author":{"gitId":"wongkokian"},"content":"            Task tempTask \u003d temp.get(j);"},{"lineNumber":150,"author":{"gitId":"wongkokian"},"content":"            String msg \u003d (j + 1) + \". \" + tempTask.toString() + \"\\n\";"},{"lineNumber":151,"author":{"gitId":"wongkokian"},"content":"            sb.append(msg);"},{"lineNumber":152,"author":{"gitId":"wongkokian"},"content":"        }"},{"lineNumber":153,"author":{"gitId":"wongkokian"},"content":"        return sb.toString();"},{"lineNumber":154,"author":{"gitId":"wongkokian"},"content":"    }"},{"lineNumber":155,"author":{"gitId":"wongkokian"},"content":""},{"lineNumber":156,"author":{"gitId":"wongkokian"},"content":"    /**"},{"lineNumber":157,"author":{"gitId":"wongkokian"},"content":"     * Adds a task to the TaskList."},{"lineNumber":158,"author":{"gitId":"wongkokian"},"content":"     *"},{"lineNumber":159,"author":{"gitId":"wongkokian"},"content":"     * @param type        The type of task."},{"lineNumber":160,"author":{"gitId":"wongkokian"},"content":"     * @param fullCommand Command given by user."},{"lineNumber":161,"author":{"gitId":"wongkokian"},"content":"     * @return Output for GUI."},{"lineNumber":162,"author":{"gitId":"wongkokian"},"content":"     * @throws DukeException If user input format is wrong."},{"lineNumber":163,"author":{"gitId":"wongkokian"},"content":"     */"},{"lineNumber":164,"author":{"gitId":"wongkokian"},"content":"    public String addTask(String type, String fullCommand) throws DukeException {"},{"lineNumber":165,"author":{"gitId":"wongkokian"},"content":"        int currSize \u003d tasks.size();"},{"lineNumber":166,"author":{"gitId":"wongkokian"},"content":"        String[] inputArr \u003d fullCommand.split(\" \");"},{"lineNumber":167,"author":{"gitId":"wongkokian"},"content":"        String[] details \u003d new String[]{};"},{"lineNumber":168,"author":{"gitId":"wongkokian"},"content":"        LocalDate date \u003d LocalDate.now();"},{"lineNumber":169,"author":{"gitId":"wongkokian"},"content":""},{"lineNumber":170,"author":{"gitId":"wongkokian"},"content":"        if (inputArr.length \u003d\u003d 1) {"},{"lineNumber":171,"author":{"gitId":"wongkokian"},"content":"            throw new DukeException(\"OOPS!!! The description of the task cannot be empty.\");"},{"lineNumber":172,"author":{"gitId":"wongkokian"},"content":"        }"},{"lineNumber":173,"author":{"gitId":"wongkokian"},"content":""},{"lineNumber":174,"author":{"gitId":"wongkokian"},"content":"        if (!type.equals(\"todo\")) {"},{"lineNumber":175,"author":{"gitId":"wongkokian"},"content":"            if (type.equals(\"deadline\")) {"},{"lineNumber":176,"author":{"gitId":"wongkokian"},"content":"                details \u003d fullCommand.substring(9).split(\" /by \");"},{"lineNumber":177,"author":{"gitId":"wongkokian"},"content":"            } else {"},{"lineNumber":178,"author":{"gitId":"wongkokian"},"content":"                details \u003d fullCommand.substring(6).split(\" /at \");"},{"lineNumber":179,"author":{"gitId":"wongkokian"},"content":"            }"},{"lineNumber":180,"author":{"gitId":"wongkokian"},"content":"            if (details.length \u003d\u003d 1) {"},{"lineNumber":181,"author":{"gitId":"wongkokian"},"content":"                throw new DukeException(\"OOPS!!! The date of a deadline/event cannot be empty.\");"},{"lineNumber":182,"author":{"gitId":"wongkokian"},"content":"            }"},{"lineNumber":183,"author":{"gitId":"wongkokian"},"content":"            try {"},{"lineNumber":184,"author":{"gitId":"wongkokian"},"content":"                date \u003d LocalDate.parse(details[1]);"},{"lineNumber":185,"author":{"gitId":"wongkokian"},"content":"            } catch (DateTimeParseException ex) {"},{"lineNumber":186,"author":{"gitId":"wongkokian"},"content":"                throw new DukeException(\"OOPS!!! The date has to be in the format yyyy-mm-dd.\");"},{"lineNumber":187,"author":{"gitId":"wongkokian"},"content":"            }"},{"lineNumber":188,"author":{"gitId":"wongkokian"},"content":"        }"},{"lineNumber":189,"author":{"gitId":"wongkokian"},"content":""},{"lineNumber":190,"author":{"gitId":"wongkokian"},"content":"        switch (type) {"},{"lineNumber":191,"author":{"gitId":"wongkokian"},"content":"        case \"todo\":"},{"lineNumber":192,"author":{"gitId":"wongkokian"},"content":"            this.tasks.add(new Todo(0, fullCommand.substring(5)));"},{"lineNumber":193,"author":{"gitId":"wongkokian"},"content":"            break;"},{"lineNumber":194,"author":{"gitId":"wongkokian"},"content":"        case \"deadline\":"},{"lineNumber":195,"author":{"gitId":"wongkokian"},"content":"            this.tasks.add(new Deadline(0, details[0], date));"},{"lineNumber":196,"author":{"gitId":"wongkokian"},"content":"            break;"},{"lineNumber":197,"author":{"gitId":"wongkokian"},"content":"        case \"event\":"},{"lineNumber":198,"author":{"gitId":"wongkokian"},"content":"            this.tasks.add(new Event(0, details[0], date));"},{"lineNumber":199,"author":{"gitId":"wongkokian"},"content":"            break;"},{"lineNumber":200,"author":{"gitId":"wongkokian"},"content":"        default:"},{"lineNumber":201,"author":{"gitId":"wongkokian"},"content":"        }"},{"lineNumber":202,"author":{"gitId":"wongkokian"},"content":"        assert tasks.size() \u003d\u003d currSize + 1 : \"Task has not been added properly.\";"},{"lineNumber":203,"author":{"gitId":"wongkokian"},"content":"        return \"Got it. I\u0027ve added this task:\\n\""},{"lineNumber":204,"author":{"gitId":"wongkokian"},"content":"                + this.tasks.get(this.tasks.size() - 1).toString() + \"\\n\""},{"lineNumber":205,"author":{"gitId":"wongkokian"},"content":"                + \"Now you have \" + this.tasks.size() + \" tasks in the list.\\n\";"},{"lineNumber":206,"author":{"gitId":"wongkokian"},"content":"    }"},{"lineNumber":207,"author":{"gitId":"wongkokian"},"content":""},{"lineNumber":208,"author":{"gitId":"wongkokian"},"content":"    /**"},{"lineNumber":209,"author":{"gitId":"wongkokian"},"content":"     * Updates a task in the TaskList."},{"lineNumber":210,"author":{"gitId":"wongkokian"},"content":"     *"},{"lineNumber":211,"author":{"gitId":"wongkokian"},"content":"     * @param fullCommand Command given by user."},{"lineNumber":212,"author":{"gitId":"wongkokian"},"content":"     * @return Output for GUI."},{"lineNumber":213,"author":{"gitId":"wongkokian"},"content":"     * @throws DukeException If user input format is wrong."},{"lineNumber":214,"author":{"gitId":"wongkokian"},"content":"     */"},{"lineNumber":215,"author":{"gitId":"wongkokian"},"content":"    public String updateTask(String fullCommand) throws DukeException {"},{"lineNumber":216,"author":{"gitId":"wongkokian"},"content":"        String[] inputArr \u003d fullCommand.split(\" \", 3);"},{"lineNumber":217,"author":{"gitId":"wongkokian"},"content":""},{"lineNumber":218,"author":{"gitId":"wongkokian"},"content":"        if (inputArr.length \u003c 3) {"},{"lineNumber":219,"author":{"gitId":"wongkokian"},"content":"            throw new DukeException(\"OOPS!!! The description of the task update is not complete.\");"},{"lineNumber":220,"author":{"gitId":"wongkokian"},"content":"        }"},{"lineNumber":221,"author":{"gitId":"wongkokian"},"content":"        if (checkIfNotNumeric(inputArr[1])) {"},{"lineNumber":222,"author":{"gitId":"wongkokian"},"content":"            throw new DukeException(\"OOPS!!! The task number must be numeric.\");"},{"lineNumber":223,"author":{"gitId":"wongkokian"},"content":"        }"},{"lineNumber":224,"author":{"gitId":"wongkokian"},"content":"        int index \u003d Integer.parseInt(inputArr[1]) - 1;"},{"lineNumber":225,"author":{"gitId":"wongkokian"},"content":"        if (checkIfOutOfRange(index)) {"},{"lineNumber":226,"author":{"gitId":"wongkokian"},"content":"            throw new DukeException(\"OOPS!!! The task number is out of range. \""},{"lineNumber":227,"author":{"gitId":"wongkokian"},"content":"                    + \"Please use \\\"list\\\" to see the list of tasks.\");"},{"lineNumber":228,"author":{"gitId":"wongkokian"},"content":"        }"},{"lineNumber":229,"author":{"gitId":"wongkokian"},"content":""},{"lineNumber":230,"author":{"gitId":"wongkokian"},"content":"        Task currTask \u003d tasks.get(index);"},{"lineNumber":231,"author":{"gitId":"wongkokian"},"content":"        char type \u003d currTask.getType();"},{"lineNumber":232,"author":{"gitId":"wongkokian"},"content":"        String[] updateInfo \u003d inputArr[2].split(\" \", 2);"},{"lineNumber":233,"author":{"gitId":"wongkokian"},"content":""},{"lineNumber":234,"author":{"gitId":"wongkokian"},"content":"        if (type \u003d\u003d \u0027D\u0027 || type \u003d\u003d \u0027E\u0027) {"},{"lineNumber":235,"author":{"gitId":"wongkokian"},"content":"            if (!updateInfo[0].equals(\"/description\") \u0026\u0026 !updateInfo[0].equals(\"/date\")) {"},{"lineNumber":236,"author":{"gitId":"wongkokian"},"content":"                throw new DukeException(\"OOPS!!! Only the description \""},{"lineNumber":237,"author":{"gitId":"wongkokian"},"content":"                        + \"or date of the task can be updated.\");"},{"lineNumber":238,"author":{"gitId":"wongkokian"},"content":"            }"},{"lineNumber":239,"author":{"gitId":"wongkokian"},"content":"        }"},{"lineNumber":240,"author":{"gitId":"wongkokian"},"content":""},{"lineNumber":241,"author":{"gitId":"wongkokian"},"content":"        switch (type) {"},{"lineNumber":242,"author":{"gitId":"wongkokian"},"content":"        case \u0027T\u0027:"},{"lineNumber":243,"author":{"gitId":"wongkokian"},"content":"            currTask.setDescription(inputArr[2]);"},{"lineNumber":244,"author":{"gitId":"wongkokian"},"content":"            tasks.set(index, currTask);"},{"lineNumber":245,"author":{"gitId":"wongkokian"},"content":"            break;"},{"lineNumber":246,"author":{"gitId":"wongkokian"},"content":"        case \u0027D\u0027:"},{"lineNumber":247,"author":{"gitId":"wongkokian"},"content":"            if (updateInfo[0].equals(\"/description\")) {"},{"lineNumber":248,"author":{"gitId":"wongkokian"},"content":"                currTask.setDescription(updateInfo[1]);"},{"lineNumber":249,"author":{"gitId":"wongkokian"},"content":"            } else {"},{"lineNumber":250,"author":{"gitId":"wongkokian"},"content":"                ((Deadline) currTask).setDate(LocalDate.parse(updateInfo[1]));"},{"lineNumber":251,"author":{"gitId":"wongkokian"},"content":"            }"},{"lineNumber":252,"author":{"gitId":"wongkokian"},"content":"            tasks.set(index, currTask);"},{"lineNumber":253,"author":{"gitId":"wongkokian"},"content":"            break;"},{"lineNumber":254,"author":{"gitId":"wongkokian"},"content":"        case \u0027E\u0027:"},{"lineNumber":255,"author":{"gitId":"wongkokian"},"content":"            if (updateInfo[0].equals(\"/description\")) {"},{"lineNumber":256,"author":{"gitId":"wongkokian"},"content":"                currTask.setDescription(updateInfo[1]);"},{"lineNumber":257,"author":{"gitId":"wongkokian"},"content":"            } else {"},{"lineNumber":258,"author":{"gitId":"wongkokian"},"content":"                ((Event) currTask).setDate(LocalDate.parse(updateInfo[1]));"},{"lineNumber":259,"author":{"gitId":"wongkokian"},"content":"            }"},{"lineNumber":260,"author":{"gitId":"wongkokian"},"content":"            tasks.set(index, currTask);"},{"lineNumber":261,"author":{"gitId":"wongkokian"},"content":"            break;"},{"lineNumber":262,"author":{"gitId":"wongkokian"},"content":"        default:"},{"lineNumber":263,"author":{"gitId":"wongkokian"},"content":"        }"},{"lineNumber":264,"author":{"gitId":"wongkokian"},"content":"        return \"Got it. I\u0027ve updated this task:\\n\""},{"lineNumber":265,"author":{"gitId":"wongkokian"},"content":"                + this.tasks.get(index).toString() + \"\\n\";"},{"lineNumber":266,"author":{"gitId":"wongkokian"},"content":"    }"},{"lineNumber":267,"author":{"gitId":"wongkokian"},"content":""},{"lineNumber":268,"author":{"gitId":"wongkokian"},"content":"    public ArrayList\u003cTask\u003e getTaskList() {"},{"lineNumber":269,"author":{"gitId":"wongkokian"},"content":"        return this.tasks;"},{"lineNumber":270,"author":{"gitId":"wongkokian"},"content":"    }"},{"lineNumber":271,"author":{"gitId":"wongkokian"},"content":"}"}],"authorContributionMap":{"wongkokian":271}},{"path":"src/main/java/duke/task/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"wongkokian"},"content":"package duke.task;"},{"lineNumber":2,"author":{"gitId":"wongkokian"},"content":""},{"lineNumber":3,"author":{"gitId":"wongkokian"},"content":"/**"},{"lineNumber":4,"author":{"gitId":"wongkokian"},"content":" * A Todo class which represents a todo task."},{"lineNumber":5,"author":{"gitId":"wongkokian"},"content":" */"},{"lineNumber":6,"author":{"gitId":"wongkokian"},"content":"public class Todo extends Task {"},{"lineNumber":7,"author":{"gitId":"wongkokian"},"content":"    /**"},{"lineNumber":8,"author":{"gitId":"wongkokian"},"content":"     * Constructs Todo."},{"lineNumber":9,"author":{"gitId":"wongkokian"},"content":"     *"},{"lineNumber":10,"author":{"gitId":"wongkokian"},"content":"     * @param isDone      Determines if task is completed."},{"lineNumber":11,"author":{"gitId":"wongkokian"},"content":"     * @param description Task description."},{"lineNumber":12,"author":{"gitId":"wongkokian"},"content":"     */"},{"lineNumber":13,"author":{"gitId":"wongkokian"},"content":"    public Todo(int isDone, String description) {"},{"lineNumber":14,"author":{"gitId":"wongkokian"},"content":"        super(\u0027T\u0027, isDone, description);"},{"lineNumber":15,"author":{"gitId":"wongkokian"},"content":"    }"},{"lineNumber":16,"author":{"gitId":"wongkokian"},"content":""},{"lineNumber":17,"author":{"gitId":"wongkokian"},"content":"    @Override"},{"lineNumber":18,"author":{"gitId":"wongkokian"},"content":"    public String toString() {"},{"lineNumber":19,"author":{"gitId":"wongkokian"},"content":"        return \"[T]\" + super.toString();"},{"lineNumber":20,"author":{"gitId":"wongkokian"},"content":"    }"},{"lineNumber":21,"author":{"gitId":"wongkokian"},"content":"}"}],"authorContributionMap":{"wongkokian":21}},{"path":"src/main/java/duke/ui/DialogBox.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"wongkokian"},"content":"package duke.ui;"},{"lineNumber":2,"author":{"gitId":"wongkokian"},"content":""},{"lineNumber":3,"author":{"gitId":"wongkokian"},"content":"import java.io.IOException;"},{"lineNumber":4,"author":{"gitId":"wongkokian"},"content":"import java.util.Collections;"},{"lineNumber":5,"author":{"gitId":"wongkokian"},"content":""},{"lineNumber":6,"author":{"gitId":"wongkokian"},"content":"import javafx.collections.FXCollections;"},{"lineNumber":7,"author":{"gitId":"wongkokian"},"content":"import javafx.collections.ObservableList;"},{"lineNumber":8,"author":{"gitId":"wongkokian"},"content":"import javafx.fxml.FXML;"},{"lineNumber":9,"author":{"gitId":"wongkokian"},"content":"import javafx.fxml.FXMLLoader;"},{"lineNumber":10,"author":{"gitId":"wongkokian"},"content":"import javafx.geometry.Insets;"},{"lineNumber":11,"author":{"gitId":"wongkokian"},"content":"import javafx.geometry.Pos;"},{"lineNumber":12,"author":{"gitId":"wongkokian"},"content":"import javafx.scene.Node;"},{"lineNumber":13,"author":{"gitId":"wongkokian"},"content":"import javafx.scene.control.Label;"},{"lineNumber":14,"author":{"gitId":"wongkokian"},"content":"import javafx.scene.image.Image;"},{"lineNumber":15,"author":{"gitId":"wongkokian"},"content":"import javafx.scene.image.ImageView;"},{"lineNumber":16,"author":{"gitId":"wongkokian"},"content":"import javafx.scene.layout.Background;"},{"lineNumber":17,"author":{"gitId":"wongkokian"},"content":"import javafx.scene.layout.BackgroundFill;"},{"lineNumber":18,"author":{"gitId":"wongkokian"},"content":"import javafx.scene.layout.CornerRadii;"},{"lineNumber":19,"author":{"gitId":"wongkokian"},"content":"import javafx.scene.layout.HBox;"},{"lineNumber":20,"author":{"gitId":"wongkokian"},"content":"import javafx.scene.paint.Color;"},{"lineNumber":21,"author":{"gitId":"wongkokian"},"content":""},{"lineNumber":22,"author":{"gitId":"wongkokian"},"content":"/**"},{"lineNumber":23,"author":{"gitId":"wongkokian"},"content":" * An example of a custom control using FXML."},{"lineNumber":24,"author":{"gitId":"wongkokian"},"content":" * This control represents a dialog box consisting of an ImageView to represent the speaker\u0027s face and a label"},{"lineNumber":25,"author":{"gitId":"wongkokian"},"content":" * containing text from the speaker."},{"lineNumber":26,"author":{"gitId":"wongkokian"},"content":" */"},{"lineNumber":27,"author":{"gitId":"wongkokian"},"content":"public class DialogBox extends HBox {"},{"lineNumber":28,"author":{"gitId":"wongkokian"},"content":"    @FXML"},{"lineNumber":29,"author":{"gitId":"wongkokian"},"content":"    private Label dialog;"},{"lineNumber":30,"author":{"gitId":"wongkokian"},"content":"    @FXML"},{"lineNumber":31,"author":{"gitId":"wongkokian"},"content":"    private ImageView displayPicture;"},{"lineNumber":32,"author":{"gitId":"wongkokian"},"content":""},{"lineNumber":33,"author":{"gitId":"wongkokian"},"content":"    private DialogBox(String text, Image img, String role) {"},{"lineNumber":34,"author":{"gitId":"wongkokian"},"content":"        try {"},{"lineNumber":35,"author":{"gitId":"wongkokian"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(\"/view/DialogBox.fxml\"));"},{"lineNumber":36,"author":{"gitId":"wongkokian"},"content":"            fxmlLoader.setController(this);"},{"lineNumber":37,"author":{"gitId":"wongkokian"},"content":"            fxmlLoader.setRoot(this);"},{"lineNumber":38,"author":{"gitId":"wongkokian"},"content":"            fxmlLoader.load();"},{"lineNumber":39,"author":{"gitId":"wongkokian"},"content":"        } catch (IOException e) {"},{"lineNumber":40,"author":{"gitId":"wongkokian"},"content":"            e.printStackTrace();"},{"lineNumber":41,"author":{"gitId":"wongkokian"},"content":"        }"},{"lineNumber":42,"author":{"gitId":"wongkokian"},"content":""},{"lineNumber":43,"author":{"gitId":"wongkokian"},"content":"        dialog.setText(text);"},{"lineNumber":44,"author":{"gitId":"wongkokian"},"content":"        displayPicture.setImage(img);"},{"lineNumber":45,"author":{"gitId":"wongkokian"},"content":""},{"lineNumber":46,"author":{"gitId":"-"},"content":"        //@@author wongkokian-reused"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        //Reused from https://github.com/jonfoocy/ip with minor modifications"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        switch (role) {"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        case \"mando\":"},{"lineNumber":50,"author":{"gitId":"-"},"content":"            dialog.setBackground(new Background(new BackgroundFill(Color.LIGHTGREEN, new CornerRadii(20.0),"},{"lineNumber":51,"author":{"gitId":"-"},"content":"                    new Insets(0))));"},{"lineNumber":52,"author":{"gitId":"-"},"content":"            break;"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        case \"yoda\":"},{"lineNumber":54,"author":{"gitId":"-"},"content":"            dialog.setBackground(new Background(new BackgroundFill(Color.LIGHTGRAY, new CornerRadii(20.0),"},{"lineNumber":55,"author":{"gitId":"-"},"content":"                    new Insets(0))));"},{"lineNumber":56,"author":{"gitId":"-"},"content":"            break;"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        case \"error\":"},{"lineNumber":58,"author":{"gitId":"-"},"content":"            dialog.setBackground(new Background(new BackgroundFill(Color.INDIANRED, new CornerRadii(20.0),"},{"lineNumber":59,"author":{"gitId":"-"},"content":"                    new Insets(0))));"},{"lineNumber":60,"author":{"gitId":"-"},"content":"            break;"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        default:"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        //@@author"},{"lineNumber":64,"author":{"gitId":"wongkokian"},"content":"    }"},{"lineNumber":65,"author":{"gitId":"wongkokian"},"content":""},{"lineNumber":66,"author":{"gitId":"wongkokian"},"content":"    public static DialogBox getUserDialog(String text, Image img) {"},{"lineNumber":67,"author":{"gitId":"wongkokian"},"content":"        return new DialogBox(text, img, \"mando\");"},{"lineNumber":68,"author":{"gitId":"wongkokian"},"content":"    }"},{"lineNumber":69,"author":{"gitId":"wongkokian"},"content":""},{"lineNumber":70,"author":{"gitId":"wongkokian"},"content":"    public static DialogBox getDukeDialog(String text, Image img) {"},{"lineNumber":71,"author":{"gitId":"wongkokian"},"content":"        var db \u003d new DialogBox(text, img, \"yoda\");"},{"lineNumber":72,"author":{"gitId":"wongkokian"},"content":"        db.flip();"},{"lineNumber":73,"author":{"gitId":"wongkokian"},"content":"        return db;"},{"lineNumber":74,"author":{"gitId":"wongkokian"},"content":"    }"},{"lineNumber":75,"author":{"gitId":"wongkokian"},"content":""},{"lineNumber":76,"author":{"gitId":"wongkokian"},"content":"    public static DialogBox getErrorDialog(String text, Image img) {"},{"lineNumber":77,"author":{"gitId":"wongkokian"},"content":"        var db \u003d new DialogBox(text, img, \"error\");"},{"lineNumber":78,"author":{"gitId":"wongkokian"},"content":"        db.flip();"},{"lineNumber":79,"author":{"gitId":"wongkokian"},"content":"        return db;"},{"lineNumber":80,"author":{"gitId":"wongkokian"},"content":"    }"},{"lineNumber":81,"author":{"gitId":"wongkokian"},"content":""},{"lineNumber":82,"author":{"gitId":"wongkokian"},"content":"    /**"},{"lineNumber":83,"author":{"gitId":"wongkokian"},"content":"     * Flips the dialog box such that the ImageView is on the left and text on the right."},{"lineNumber":84,"author":{"gitId":"wongkokian"},"content":"     */"},{"lineNumber":85,"author":{"gitId":"wongkokian"},"content":"    private void flip() {"},{"lineNumber":86,"author":{"gitId":"wongkokian"},"content":"        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());"},{"lineNumber":87,"author":{"gitId":"wongkokian"},"content":"        Collections.reverse(tmp);"},{"lineNumber":88,"author":{"gitId":"wongkokian"},"content":"        getChildren().setAll(tmp);"},{"lineNumber":89,"author":{"gitId":"wongkokian"},"content":"        setAlignment(Pos.TOP_LEFT);"},{"lineNumber":90,"author":{"gitId":"wongkokian"},"content":"    }"},{"lineNumber":91,"author":{"gitId":"wongkokian"},"content":"}"}],"authorContributionMap":{"wongkokian":73,"-":18}},{"path":"src/main/java/duke/ui/Main.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"wongkokian"},"content":"package duke.ui;"},{"lineNumber":2,"author":{"gitId":"wongkokian"},"content":""},{"lineNumber":3,"author":{"gitId":"wongkokian"},"content":"import java.io.IOException;"},{"lineNumber":4,"author":{"gitId":"wongkokian"},"content":""},{"lineNumber":5,"author":{"gitId":"wongkokian"},"content":"import duke.Duke;"},{"lineNumber":6,"author":{"gitId":"wongkokian"},"content":""},{"lineNumber":7,"author":{"gitId":"wongkokian"},"content":"import javafx.application.Application;"},{"lineNumber":8,"author":{"gitId":"wongkokian"},"content":"import javafx.fxml.FXMLLoader;"},{"lineNumber":9,"author":{"gitId":"wongkokian"},"content":"import javafx.scene.Scene;"},{"lineNumber":10,"author":{"gitId":"wongkokian"},"content":"import javafx.scene.layout.AnchorPane;"},{"lineNumber":11,"author":{"gitId":"wongkokian"},"content":"import javafx.stage.Stage;"},{"lineNumber":12,"author":{"gitId":"wongkokian"},"content":""},{"lineNumber":13,"author":{"gitId":"wongkokian"},"content":"/**"},{"lineNumber":14,"author":{"gitId":"wongkokian"},"content":" * A GUI for Duke using FXML."},{"lineNumber":15,"author":{"gitId":"wongkokian"},"content":" */"},{"lineNumber":16,"author":{"gitId":"wongkokian"},"content":"public class Main extends Application {"},{"lineNumber":17,"author":{"gitId":"wongkokian"},"content":""},{"lineNumber":18,"author":{"gitId":"wongkokian"},"content":"    private Duke duke \u003d new Duke();"},{"lineNumber":19,"author":{"gitId":"wongkokian"},"content":""},{"lineNumber":20,"author":{"gitId":"wongkokian"},"content":"    @Override"},{"lineNumber":21,"author":{"gitId":"wongkokian"},"content":"    public void start(Stage stage) {"},{"lineNumber":22,"author":{"gitId":"wongkokian"},"content":"        try {"},{"lineNumber":23,"author":{"gitId":"wongkokian"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(Main.class.getResource(\"/view/MainWindow.fxml\"));"},{"lineNumber":24,"author":{"gitId":"wongkokian"},"content":"            AnchorPane ap \u003d fxmlLoader.load();"},{"lineNumber":25,"author":{"gitId":"wongkokian"},"content":"            Scene scene \u003d new Scene(ap);"},{"lineNumber":26,"author":{"gitId":"wongkokian"},"content":"            stage.setScene(scene);"},{"lineNumber":27,"author":{"gitId":"wongkokian"},"content":"            stage.setTitle(\"YodaBot\");"},{"lineNumber":28,"author":{"gitId":"wongkokian"},"content":"            fxmlLoader.\u003cMainWindow\u003egetController().setDuke(duke);"},{"lineNumber":29,"author":{"gitId":"wongkokian"},"content":"            fxmlLoader.\u003cMainWindow\u003egetController().welcome();"},{"lineNumber":30,"author":{"gitId":"wongkokian"},"content":"            stage.show();"},{"lineNumber":31,"author":{"gitId":"wongkokian"},"content":"        } catch (IOException e) {"},{"lineNumber":32,"author":{"gitId":"wongkokian"},"content":"            e.printStackTrace();"},{"lineNumber":33,"author":{"gitId":"wongkokian"},"content":"        }"},{"lineNumber":34,"author":{"gitId":"wongkokian"},"content":"    }"},{"lineNumber":35,"author":{"gitId":"wongkokian"},"content":"}"}],"authorContributionMap":{"wongkokian":35}},{"path":"src/main/java/duke/ui/MainWindow.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"wongkokian"},"content":"package duke.ui;"},{"lineNumber":2,"author":{"gitId":"wongkokian"},"content":""},{"lineNumber":3,"author":{"gitId":"wongkokian"},"content":"import duke.Duke;"},{"lineNumber":4,"author":{"gitId":"wongkokian"},"content":""},{"lineNumber":5,"author":{"gitId":"wongkokian"},"content":"import javafx.animation.PauseTransition;"},{"lineNumber":6,"author":{"gitId":"wongkokian"},"content":"import javafx.fxml.FXML;"},{"lineNumber":7,"author":{"gitId":"wongkokian"},"content":"import javafx.scene.control.Button;"},{"lineNumber":8,"author":{"gitId":"wongkokian"},"content":"import javafx.scene.control.ScrollPane;"},{"lineNumber":9,"author":{"gitId":"wongkokian"},"content":"import javafx.scene.control.TextField;"},{"lineNumber":10,"author":{"gitId":"wongkokian"},"content":"import javafx.scene.image.Image;"},{"lineNumber":11,"author":{"gitId":"wongkokian"},"content":"import javafx.scene.layout.AnchorPane;"},{"lineNumber":12,"author":{"gitId":"wongkokian"},"content":"import javafx.scene.layout.VBox;"},{"lineNumber":13,"author":{"gitId":"wongkokian"},"content":"import javafx.stage.Stage;"},{"lineNumber":14,"author":{"gitId":"wongkokian"},"content":"import javafx.util.Duration;"},{"lineNumber":15,"author":{"gitId":"wongkokian"},"content":""},{"lineNumber":16,"author":{"gitId":"wongkokian"},"content":"/**"},{"lineNumber":17,"author":{"gitId":"wongkokian"},"content":" * Controller for MainWindow. Provides the layout for the other controls."},{"lineNumber":18,"author":{"gitId":"wongkokian"},"content":" */"},{"lineNumber":19,"author":{"gitId":"wongkokian"},"content":"public class MainWindow extends AnchorPane {"},{"lineNumber":20,"author":{"gitId":"wongkokian"},"content":"    private final Image userImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/Mando.png\"));"},{"lineNumber":21,"author":{"gitId":"wongkokian"},"content":"    private final Image dukeImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/Yoda.png\"));"},{"lineNumber":22,"author":{"gitId":"wongkokian"},"content":"    @FXML"},{"lineNumber":23,"author":{"gitId":"wongkokian"},"content":"    private ScrollPane scrollPane;"},{"lineNumber":24,"author":{"gitId":"wongkokian"},"content":"    @FXML"},{"lineNumber":25,"author":{"gitId":"wongkokian"},"content":"    private VBox dialogContainer;"},{"lineNumber":26,"author":{"gitId":"wongkokian"},"content":"    @FXML"},{"lineNumber":27,"author":{"gitId":"wongkokian"},"content":"    private TextField userInput;"},{"lineNumber":28,"author":{"gitId":"wongkokian"},"content":"    @FXML"},{"lineNumber":29,"author":{"gitId":"wongkokian"},"content":"    private Button sendButton;"},{"lineNumber":30,"author":{"gitId":"wongkokian"},"content":"    private Duke duke;"},{"lineNumber":31,"author":{"gitId":"wongkokian"},"content":""},{"lineNumber":32,"author":{"gitId":"wongkokian"},"content":"    @FXML"},{"lineNumber":33,"author":{"gitId":"wongkokian"},"content":"    public void initialize() {"},{"lineNumber":34,"author":{"gitId":"wongkokian"},"content":"        scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());"},{"lineNumber":35,"author":{"gitId":"wongkokian"},"content":"    }"},{"lineNumber":36,"author":{"gitId":"wongkokian"},"content":""},{"lineNumber":37,"author":{"gitId":"wongkokian"},"content":"    public void setDuke(Duke d) {"},{"lineNumber":38,"author":{"gitId":"wongkokian"},"content":"        duke \u003d d;"},{"lineNumber":39,"author":{"gitId":"wongkokian"},"content":"    }"},{"lineNumber":40,"author":{"gitId":"wongkokian"},"content":""},{"lineNumber":41,"author":{"gitId":"wongkokian"},"content":"    /**"},{"lineNumber":42,"author":{"gitId":"wongkokian"},"content":"     * Creates two dialog boxes, one echoing user input and the other containing Duke\u0027s reply and then appends them to"},{"lineNumber":43,"author":{"gitId":"wongkokian"},"content":"     * the dialog container. Clears the user input after processing."},{"lineNumber":44,"author":{"gitId":"wongkokian"},"content":"     */"},{"lineNumber":45,"author":{"gitId":"wongkokian"},"content":"    @FXML"},{"lineNumber":46,"author":{"gitId":"wongkokian"},"content":"    private void handleUserInput() {"},{"lineNumber":47,"author":{"gitId":"wongkokian"},"content":"        String input \u003d userInput.getText();"},{"lineNumber":48,"author":{"gitId":"wongkokian"},"content":"        String response \u003d duke.run(input);"},{"lineNumber":49,"author":{"gitId":"wongkokian"},"content":"        if (response.startsWith(\"OOPS\")) {"},{"lineNumber":50,"author":{"gitId":"wongkokian"},"content":"            dialogContainer.getChildren().addAll("},{"lineNumber":51,"author":{"gitId":"wongkokian"},"content":"                    DialogBox.getUserDialog(input, userImage),"},{"lineNumber":52,"author":{"gitId":"wongkokian"},"content":"                    DialogBox.getErrorDialog(response, dukeImage)"},{"lineNumber":53,"author":{"gitId":"wongkokian"},"content":"            );"},{"lineNumber":54,"author":{"gitId":"wongkokian"},"content":"        } else {"},{"lineNumber":55,"author":{"gitId":"wongkokian"},"content":"            dialogContainer.getChildren().addAll("},{"lineNumber":56,"author":{"gitId":"wongkokian"},"content":"                    DialogBox.getUserDialog(input, userImage),"},{"lineNumber":57,"author":{"gitId":"wongkokian"},"content":"                    DialogBox.getDukeDialog(response, dukeImage)"},{"lineNumber":58,"author":{"gitId":"wongkokian"},"content":"            );"},{"lineNumber":59,"author":{"gitId":"wongkokian"},"content":"        }"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        //@@author wongkokian-reused"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        //Reused from https://github.com/jonfoocy/ip with minor modifications"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        if (input.equals(\"bye\")) {"},{"lineNumber":63,"author":{"gitId":"-"},"content":"            Stage stage \u003d (Stage) sendButton.getScene().getWindow();"},{"lineNumber":64,"author":{"gitId":"-"},"content":"            PauseTransition delay \u003d new PauseTransition(Duration.seconds(1));"},{"lineNumber":65,"author":{"gitId":"-"},"content":"            delay.setOnFinished((event) -\u003e stage.close());"},{"lineNumber":66,"author":{"gitId":"-"},"content":"            delay.play();"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        //@@author"},{"lineNumber":69,"author":{"gitId":"wongkokian"},"content":"        userInput.clear();"},{"lineNumber":70,"author":{"gitId":"wongkokian"},"content":"    }"},{"lineNumber":71,"author":{"gitId":"wongkokian"},"content":""},{"lineNumber":72,"author":{"gitId":"wongkokian"},"content":"    /**"},{"lineNumber":73,"author":{"gitId":"wongkokian"},"content":"     * Shows welcome message to the user."},{"lineNumber":74,"author":{"gitId":"wongkokian"},"content":"     */"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    //@@author wongkokian-reused"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    //Reused from https://github.com/jonfoocy/ip with minor modifications"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    public void welcome() {"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        String welcomeText \u003d \"Welcome to YodaBot!\\nWhat can I do for you?\";"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        dialogContainer.getChildren().add(DialogBox.getDukeDialog(welcomeText, dukeImage));"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    //@@author"},{"lineNumber":82,"author":{"gitId":"wongkokian"},"content":"}"}],"authorContributionMap":{"wongkokian":66,"-":16}},{"path":"src/main/resources/view/DialogBox.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"wongkokian"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"},{"lineNumber":2,"author":{"gitId":"wongkokian"},"content":""},{"lineNumber":3,"author":{"gitId":"wongkokian"},"content":"\u003c?import javafx.geometry.Insets?\u003e"},{"lineNumber":4,"author":{"gitId":"wongkokian"},"content":"\u003c?import javafx.scene.control.Label?\u003e"},{"lineNumber":5,"author":{"gitId":"wongkokian"},"content":"\u003c?import javafx.scene.image.ImageView?\u003e"},{"lineNumber":6,"author":{"gitId":"wongkokian"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e"},{"lineNumber":7,"author":{"gitId":"wongkokian"},"content":"\u003c?import javafx.scene.text.Font?\u003e"},{"lineNumber":8,"author":{"gitId":"wongkokian"},"content":""},{"lineNumber":9,"author":{"gitId":"wongkokian"},"content":"\u003cfx:root alignment\u003d\"TOP_RIGHT\" maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\" prefWidth\u003d\"400.0\""},{"lineNumber":10,"author":{"gitId":"wongkokian"},"content":"         type\u003d\"javafx.scene.layout.HBox\" xmlns\u003d\"http://javafx.com/javafx/8.0.171\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e"},{"lineNumber":11,"author":{"gitId":"wongkokian"},"content":"    \u003cpadding\u003e"},{"lineNumber":12,"author":{"gitId":"wongkokian"},"content":"        \u003cInsets bottom\u003d\"15.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"15.0\"/\u003e"},{"lineNumber":13,"author":{"gitId":"wongkokian"},"content":"    \u003c/padding\u003e"},{"lineNumber":14,"author":{"gitId":"wongkokian"},"content":"    \u003cLabel fx:id\u003d\"dialog\" minHeight\u003d\"-Infinity\" text\u003d\"Label\" wrapText\u003d\"true\"\u003e"},{"lineNumber":15,"author":{"gitId":"wongkokian"},"content":"        \u003cfont\u003e"},{"lineNumber":16,"author":{"gitId":"wongkokian"},"content":"            \u003cFont name\u003d\"Roboto\" size\u003d\"14.0\"/\u003e"},{"lineNumber":17,"author":{"gitId":"wongkokian"},"content":"        \u003c/font\u003e"},{"lineNumber":18,"author":{"gitId":"wongkokian"},"content":"        \u003cpadding\u003e"},{"lineNumber":19,"author":{"gitId":"wongkokian"},"content":"            \u003cInsets bottom\u003d\"5.0\" left\u003d\"15.0\" right\u003d\"15.0\" top\u003d\"5.0\"/\u003e"},{"lineNumber":20,"author":{"gitId":"wongkokian"},"content":"        \u003c/padding\u003e"},{"lineNumber":21,"author":{"gitId":"wongkokian"},"content":"    \u003c/Label\u003e"},{"lineNumber":22,"author":{"gitId":"wongkokian"},"content":"    \u003cImageView fx:id\u003d\"displayPicture\" fitHeight\u003d\"60.0\" fitWidth\u003d\"60.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\"/\u003e"},{"lineNumber":23,"author":{"gitId":"wongkokian"},"content":"\u003c/fx:root\u003e"}],"authorContributionMap":{"wongkokian":23}},{"path":"src/main/resources/view/MainWindow.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"wongkokian"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"},{"lineNumber":2,"author":{"gitId":"wongkokian"},"content":""},{"lineNumber":3,"author":{"gitId":"wongkokian"},"content":"\u003c?import javafx.scene.control.Button?\u003e"},{"lineNumber":4,"author":{"gitId":"wongkokian"},"content":"\u003c?import javafx.scene.control.ScrollPane?\u003e"},{"lineNumber":5,"author":{"gitId":"wongkokian"},"content":"\u003c?import javafx.scene.control.TextField?\u003e"},{"lineNumber":6,"author":{"gitId":"wongkokian"},"content":"\u003c?import javafx.scene.layout.AnchorPane?\u003e"},{"lineNumber":7,"author":{"gitId":"wongkokian"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e"},{"lineNumber":8,"author":{"gitId":"wongkokian"},"content":""},{"lineNumber":9,"author":{"gitId":"wongkokian"},"content":"\u003cAnchorPane maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefHeight\u003d\"600.0\" prefWidth\u003d\"400.0\" xmlns\u003d\"http://javafx.com/javafx/8.0.171\" xmlns:fx\u003d\"http://javafx.com/fxml/1\" fx:controller\u003d\"duke.ui.MainWindow\"\u003e"},{"lineNumber":10,"author":{"gitId":"wongkokian"},"content":"    \u003cchildren\u003e"},{"lineNumber":11,"author":{"gitId":"wongkokian"},"content":"        \u003cTextField fx:id\u003d\"userInput\" layoutY\u003d\"558.0\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"324.0\" AnchorPane.bottomAnchor\u003d\"1.0\" /\u003e"},{"lineNumber":12,"author":{"gitId":"wongkokian"},"content":"        \u003cButton fx:id\u003d\"sendButton\" layoutX\u003d\"324.0\" layoutY\u003d\"558.0\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"76.0\" text\u003d\"Send\" /\u003e"},{"lineNumber":13,"author":{"gitId":"wongkokian"},"content":"        \u003cScrollPane fx:id\u003d\"scrollPane\" hbarPolicy\u003d\"NEVER\" hvalue\u003d\"1.0\" prefHeight\u003d\"557.0\" prefWidth\u003d\"400.0\" stylesheets\u003d\"@../css/background.css\" vvalue\u003d\"1.0\"\u003e"},{"lineNumber":14,"author":{"gitId":"wongkokian"},"content":"            \u003ccontent\u003e"},{"lineNumber":15,"author":{"gitId":"wongkokian"},"content":"                \u003cVBox fx:id\u003d\"dialogContainer\" prefHeight\u003d\"552.0\" prefWidth\u003d\"388.0\" /\u003e"},{"lineNumber":16,"author":{"gitId":"wongkokian"},"content":"            \u003c/content\u003e"},{"lineNumber":17,"author":{"gitId":"wongkokian"},"content":"        \u003c/ScrollPane\u003e"},{"lineNumber":18,"author":{"gitId":"wongkokian"},"content":"    \u003c/children\u003e"},{"lineNumber":19,"author":{"gitId":"wongkokian"},"content":"\u003c/AnchorPane\u003e"}],"authorContributionMap":{"wongkokian":19}},{"path":"src/test/java/duke/task/DeadlineTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"wongkokian"},"content":"package duke.task;"},{"lineNumber":2,"author":{"gitId":"wongkokian"},"content":""},{"lineNumber":3,"author":{"gitId":"wongkokian"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;"},{"lineNumber":4,"author":{"gitId":"wongkokian"},"content":""},{"lineNumber":5,"author":{"gitId":"wongkokian"},"content":"import java.time.LocalDate;"},{"lineNumber":6,"author":{"gitId":"wongkokian"},"content":""},{"lineNumber":7,"author":{"gitId":"wongkokian"},"content":"import org.junit.jupiter.api.Test;"},{"lineNumber":8,"author":{"gitId":"wongkokian"},"content":""},{"lineNumber":9,"author":{"gitId":"wongkokian"},"content":"public class DeadlineTest {"},{"lineNumber":10,"author":{"gitId":"wongkokian"},"content":"    @Test"},{"lineNumber":11,"author":{"gitId":"wongkokian"},"content":"    public void markAsDoneTest() {"},{"lineNumber":12,"author":{"gitId":"wongkokian"},"content":"        Deadline temp \u003d new Deadline(0, \"submit assignment\","},{"lineNumber":13,"author":{"gitId":"wongkokian"},"content":"                LocalDate.parse(\"2020-10-15\"));"},{"lineNumber":14,"author":{"gitId":"wongkokian"},"content":"        temp.markAsDone();"},{"lineNumber":15,"author":{"gitId":"wongkokian"},"content":"        assertEquals(\"[D][X] submit assignment (by: Oct 15 2020)\", temp.toString());"},{"lineNumber":16,"author":{"gitId":"wongkokian"},"content":"    }"},{"lineNumber":17,"author":{"gitId":"wongkokian"},"content":"}"}],"authorContributionMap":{"wongkokian":17}},{"path":"src/test/java/duke/task/EventTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"wongkokian"},"content":"package duke.task;"},{"lineNumber":2,"author":{"gitId":"wongkokian"},"content":""},{"lineNumber":3,"author":{"gitId":"wongkokian"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;"},{"lineNumber":4,"author":{"gitId":"wongkokian"},"content":""},{"lineNumber":5,"author":{"gitId":"wongkokian"},"content":"import java.time.LocalDate;"},{"lineNumber":6,"author":{"gitId":"wongkokian"},"content":""},{"lineNumber":7,"author":{"gitId":"wongkokian"},"content":"import org.junit.jupiter.api.Test;"},{"lineNumber":8,"author":{"gitId":"wongkokian"},"content":""},{"lineNumber":9,"author":{"gitId":"wongkokian"},"content":"public class EventTest {"},{"lineNumber":10,"author":{"gitId":"wongkokian"},"content":"    @Test"},{"lineNumber":11,"author":{"gitId":"wongkokian"},"content":"    public void getFileStringTest() {"},{"lineNumber":12,"author":{"gitId":"wongkokian"},"content":"        assertEquals(\"E // 0 // meeting // 2020-12-15\","},{"lineNumber":13,"author":{"gitId":"wongkokian"},"content":"                new Event(0, \"meeting\", LocalDate.parse(\"2020-12-15\")).getFileString());"},{"lineNumber":14,"author":{"gitId":"wongkokian"},"content":"    }"},{"lineNumber":15,"author":{"gitId":"wongkokian"},"content":"}"}],"authorContributionMap":{"wongkokian":15}},{"path":"src/test/java/duke/task/TodoTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"wongkokian"},"content":"package duke.task;"},{"lineNumber":2,"author":{"gitId":"wongkokian"},"content":""},{"lineNumber":3,"author":{"gitId":"wongkokian"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;"},{"lineNumber":4,"author":{"gitId":"wongkokian"},"content":""},{"lineNumber":5,"author":{"gitId":"wongkokian"},"content":"import org.junit.jupiter.api.Test;"},{"lineNumber":6,"author":{"gitId":"wongkokian"},"content":""},{"lineNumber":7,"author":{"gitId":"wongkokian"},"content":"public class TodoTest {"},{"lineNumber":8,"author":{"gitId":"wongkokian"},"content":"    @Test"},{"lineNumber":9,"author":{"gitId":"wongkokian"},"content":"    public void toStringTest() {"},{"lineNumber":10,"author":{"gitId":"wongkokian"},"content":"        assertEquals(\"[T][X] return book\","},{"lineNumber":11,"author":{"gitId":"wongkokian"},"content":"                new Todo(1, \"return book\").toString());"},{"lineNumber":12,"author":{"gitId":"wongkokian"},"content":"    }"},{"lineNumber":13,"author":{"gitId":"wongkokian"},"content":"}"}],"authorContributionMap":{"wongkokian":13}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"wongkokian"},"content":"todo read book"},{"lineNumber":2,"author":{"gitId":"wongkokian"},"content":"deadline return book /by June 6th"},{"lineNumber":3,"author":{"gitId":"wongkokian"},"content":"event project meeting /at Aug 6th 2-4pm"},{"lineNumber":4,"author":{"gitId":"wongkokian"},"content":"todo join sports club"},{"lineNumber":5,"author":{"gitId":"wongkokian"},"content":"todo borrow book"},{"lineNumber":6,"author":{"gitId":"wongkokian"},"content":"done 1"},{"lineNumber":7,"author":{"gitId":"wongkokian"},"content":"done 4"},{"lineNumber":8,"author":{"gitId":"wongkokian"},"content":"list"},{"lineNumber":9,"author":{"gitId":"wongkokian"},"content":"deadline return book /by Sunday"},{"lineNumber":10,"author":{"gitId":"wongkokian"},"content":"event project meeting /at Mon 2-4pm"},{"lineNumber":11,"author":{"gitId":"wongkokian"},"content":"bye"}],"authorContributionMap":{"wongkokian":11}}]
