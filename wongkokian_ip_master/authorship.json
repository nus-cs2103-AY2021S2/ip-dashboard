[{"path":"src/main/java/duke/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"wongkokian"},"content":"package duke;"},{"lineNumber":2,"author":{"gitId":"wongkokian"},"content":""},{"lineNumber":3,"author":{"gitId":"wongkokian"},"content":"import duke.command.Command;"},{"lineNumber":4,"author":{"gitId":"wongkokian"},"content":"import duke.exception.DukeException;"},{"lineNumber":5,"author":{"gitId":"wongkokian"},"content":"import duke.parser.Parser;"},{"lineNumber":6,"author":{"gitId":"wongkokian"},"content":"import duke.storage.Storage;"},{"lineNumber":7,"author":{"gitId":"wongkokian"},"content":"import duke.task.TaskList;"},{"lineNumber":8,"author":{"gitId":"wongkokian"},"content":"import duke.ui.Ui;"},{"lineNumber":9,"author":{"gitId":"wongkokian"},"content":""},{"lineNumber":10,"author":{"gitId":"wongkokian"},"content":"/**"},{"lineNumber":11,"author":{"gitId":"wongkokian"},"content":" * A Personal Assistant Chatbot that helps a person to keep track of various things."},{"lineNumber":12,"author":{"gitId":"wongkokian"},"content":" */"},{"lineNumber":13,"author":{"gitId":"-"},"content":"public class Duke {"},{"lineNumber":14,"author":{"gitId":"wongkokian"},"content":"    private final Storage storage;"},{"lineNumber":15,"author":{"gitId":"wongkokian"},"content":"    private final Ui ui;"},{"lineNumber":16,"author":{"gitId":"wongkokian"},"content":"    private TaskList taskList;"},{"lineNumber":17,"author":{"gitId":"wongkokian"},"content":""},{"lineNumber":18,"author":{"gitId":"wongkokian"},"content":"    /**"},{"lineNumber":19,"author":{"gitId":"wongkokian"},"content":"     * Constructs Duke chatbot."},{"lineNumber":20,"author":{"gitId":"wongkokian"},"content":"     *"},{"lineNumber":21,"author":{"gitId":"wongkokian"},"content":"     * @param filepath The filepath of where the data is going to be stored at."},{"lineNumber":22,"author":{"gitId":"wongkokian"},"content":"     */"},{"lineNumber":23,"author":{"gitId":"wongkokian"},"content":"    public Duke(String filepath) {"},{"lineNumber":24,"author":{"gitId":"wongkokian"},"content":"        ui \u003d new Ui();"},{"lineNumber":25,"author":{"gitId":"wongkokian"},"content":"        storage \u003d new Storage(filepath);"},{"lineNumber":26,"author":{"gitId":"wongkokian"},"content":"        try {"},{"lineNumber":27,"author":{"gitId":"wongkokian"},"content":"            storage.createFileAndDirectory();"},{"lineNumber":28,"author":{"gitId":"wongkokian"},"content":"            taskList \u003d new TaskList(storage.load());"},{"lineNumber":29,"author":{"gitId":"wongkokian"},"content":"        } catch (DukeException ex) {"},{"lineNumber":30,"author":{"gitId":"wongkokian"},"content":"            ui.showLoadingError();"},{"lineNumber":31,"author":{"gitId":"wongkokian"},"content":"        }"},{"lineNumber":32,"author":{"gitId":"wongkokian"},"content":"    }"},{"lineNumber":33,"author":{"gitId":"wongkokian"},"content":""},{"lineNumber":34,"author":{"gitId":"wongkokian"},"content":"    public static void main(String[] args) {"},{"lineNumber":35,"author":{"gitId":"wongkokian"},"content":"        new Duke(\"data/tasks.txt\").run();"},{"lineNumber":36,"author":{"gitId":"wongkokian"},"content":"    }"},{"lineNumber":37,"author":{"gitId":"wongkokian"},"content":""},{"lineNumber":38,"author":{"gitId":"wongkokian"},"content":"    /**"},{"lineNumber":39,"author":{"gitId":"wongkokian"},"content":"     * Runs Duke chatbot."},{"lineNumber":40,"author":{"gitId":"wongkokian"},"content":"     */"},{"lineNumber":41,"author":{"gitId":"wongkokian"},"content":"    public void run() {"},{"lineNumber":42,"author":{"gitId":"wongkokian"},"content":"        ui.showWelcome();"},{"lineNumber":43,"author":{"gitId":"wongkokian"},"content":"        boolean isExit \u003d false;"},{"lineNumber":44,"author":{"gitId":"wongkokian"},"content":"        while (!isExit) {"},{"lineNumber":45,"author":{"gitId":"wongkokian"},"content":"            try {"},{"lineNumber":46,"author":{"gitId":"wongkokian"},"content":"                String fullCommand \u003d ui.readCommand();"},{"lineNumber":47,"author":{"gitId":"wongkokian"},"content":"                ui.showLine();"},{"lineNumber":48,"author":{"gitId":"wongkokian"},"content":"                Command c \u003d Parser.parse(fullCommand);"},{"lineNumber":49,"author":{"gitId":"wongkokian"},"content":"                c.execute(taskList, ui, storage);"},{"lineNumber":50,"author":{"gitId":"wongkokian"},"content":"                isExit \u003d c.isExit();"},{"lineNumber":51,"author":{"gitId":"wongkokian"},"content":"            } catch (DukeException ex) {"},{"lineNumber":52,"author":{"gitId":"wongkokian"},"content":"                ui.showError(ex.getMessage());"},{"lineNumber":53,"author":{"gitId":"wongkokian"},"content":"            } finally {"},{"lineNumber":54,"author":{"gitId":"wongkokian"},"content":"                ui.showLine();"},{"lineNumber":55,"author":{"gitId":"wongkokian"},"content":"            }"},{"lineNumber":56,"author":{"gitId":"wongkokian"},"content":"        }"},{"lineNumber":57,"author":{"gitId":"wongkokian"},"content":"    }"},{"lineNumber":58,"author":{"gitId":"-"},"content":"}"}],"authorContributionMap":{"wongkokian":56,"-":2}},{"path":"src/main/java/duke/command/AddTaskCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"wongkokian"},"content":"package duke.command;"},{"lineNumber":2,"author":{"gitId":"wongkokian"},"content":""},{"lineNumber":3,"author":{"gitId":"wongkokian"},"content":"import duke.exception.DukeException;"},{"lineNumber":4,"author":{"gitId":"wongkokian"},"content":"import duke.storage.Storage;"},{"lineNumber":5,"author":{"gitId":"wongkokian"},"content":"import duke.task.TaskList;"},{"lineNumber":6,"author":{"gitId":"wongkokian"},"content":"import duke.ui.Ui;"},{"lineNumber":7,"author":{"gitId":"wongkokian"},"content":""},{"lineNumber":8,"author":{"gitId":"wongkokian"},"content":"/**"},{"lineNumber":9,"author":{"gitId":"wongkokian"},"content":" * A AddTaskCommand class to execute add task."},{"lineNumber":10,"author":{"gitId":"wongkokian"},"content":" */"},{"lineNumber":11,"author":{"gitId":"wongkokian"},"content":"public class AddTaskCommand extends Command {"},{"lineNumber":12,"author":{"gitId":"wongkokian"},"content":"    protected String type;"},{"lineNumber":13,"author":{"gitId":"wongkokian"},"content":"    protected String fullCommand;"},{"lineNumber":14,"author":{"gitId":"wongkokian"},"content":""},{"lineNumber":15,"author":{"gitId":"wongkokian"},"content":"    /**"},{"lineNumber":16,"author":{"gitId":"wongkokian"},"content":"     * Constructs AddTaskCommand."},{"lineNumber":17,"author":{"gitId":"wongkokian"},"content":"     *"},{"lineNumber":18,"author":{"gitId":"wongkokian"},"content":"     * @param type        The type of task."},{"lineNumber":19,"author":{"gitId":"wongkokian"},"content":"     * @param fullCommand The command given."},{"lineNumber":20,"author":{"gitId":"wongkokian"},"content":"     */"},{"lineNumber":21,"author":{"gitId":"wongkokian"},"content":"    public AddTaskCommand(String type, String fullCommand) {"},{"lineNumber":22,"author":{"gitId":"wongkokian"},"content":"        super();"},{"lineNumber":23,"author":{"gitId":"wongkokian"},"content":"        this.type \u003d type;"},{"lineNumber":24,"author":{"gitId":"wongkokian"},"content":"        this.fullCommand \u003d fullCommand;"},{"lineNumber":25,"author":{"gitId":"wongkokian"},"content":"    }"},{"lineNumber":26,"author":{"gitId":"wongkokian"},"content":""},{"lineNumber":27,"author":{"gitId":"wongkokian"},"content":"    /**"},{"lineNumber":28,"author":{"gitId":"wongkokian"},"content":"     * Executes the add task depending on the type of task."},{"lineNumber":29,"author":{"gitId":"wongkokian"},"content":"     *"},{"lineNumber":30,"author":{"gitId":"wongkokian"},"content":"     * @param taskList The list of tasks."},{"lineNumber":31,"author":{"gitId":"wongkokian"},"content":"     * @param ui       The user interface."},{"lineNumber":32,"author":{"gitId":"wongkokian"},"content":"     * @param storage  The storage handler."},{"lineNumber":33,"author":{"gitId":"wongkokian"},"content":"     * @throws DukeException If user input format is wrong."},{"lineNumber":34,"author":{"gitId":"wongkokian"},"content":"     */"},{"lineNumber":35,"author":{"gitId":"wongkokian"},"content":"    @Override"},{"lineNumber":36,"author":{"gitId":"wongkokian"},"content":"    public void execute(TaskList taskList, Ui ui, Storage storage) throws DukeException {"},{"lineNumber":37,"author":{"gitId":"wongkokian"},"content":"        taskList.addTask(this.type, this.fullCommand);"},{"lineNumber":38,"author":{"gitId":"wongkokian"},"content":"    }"},{"lineNumber":39,"author":{"gitId":"wongkokian"},"content":""},{"lineNumber":40,"author":{"gitId":"wongkokian"},"content":"    /**"},{"lineNumber":41,"author":{"gitId":"wongkokian"},"content":"     * Program does not exit."},{"lineNumber":42,"author":{"gitId":"wongkokian"},"content":"     *"},{"lineNumber":43,"author":{"gitId":"wongkokian"},"content":"     * @return False to continue the program."},{"lineNumber":44,"author":{"gitId":"wongkokian"},"content":"     */"},{"lineNumber":45,"author":{"gitId":"wongkokian"},"content":"    @Override"},{"lineNumber":46,"author":{"gitId":"wongkokian"},"content":"    public boolean isExit() {"},{"lineNumber":47,"author":{"gitId":"wongkokian"},"content":"        return false;"},{"lineNumber":48,"author":{"gitId":"wongkokian"},"content":"    }"},{"lineNumber":49,"author":{"gitId":"wongkokian"},"content":"}"}],"authorContributionMap":{"wongkokian":49}},{"path":"src/main/java/duke/command/ByeCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"wongkokian"},"content":"package duke.command;"},{"lineNumber":2,"author":{"gitId":"wongkokian"},"content":""},{"lineNumber":3,"author":{"gitId":"wongkokian"},"content":"import duke.exception.DukeException;"},{"lineNumber":4,"author":{"gitId":"wongkokian"},"content":"import duke.storage.Storage;"},{"lineNumber":5,"author":{"gitId":"wongkokian"},"content":"import duke.task.TaskList;"},{"lineNumber":6,"author":{"gitId":"wongkokian"},"content":"import duke.ui.Ui;"},{"lineNumber":7,"author":{"gitId":"wongkokian"},"content":""},{"lineNumber":8,"author":{"gitId":"wongkokian"},"content":"/**"},{"lineNumber":9,"author":{"gitId":"wongkokian"},"content":" * A ByeCommand class to exit program."},{"lineNumber":10,"author":{"gitId":"wongkokian"},"content":" */"},{"lineNumber":11,"author":{"gitId":"wongkokian"},"content":"public class ByeCommand extends Command {"},{"lineNumber":12,"author":{"gitId":"wongkokian"},"content":"    /**"},{"lineNumber":13,"author":{"gitId":"wongkokian"},"content":"     * Constructs ByeCommand."},{"lineNumber":14,"author":{"gitId":"wongkokian"},"content":"     */"},{"lineNumber":15,"author":{"gitId":"wongkokian"},"content":"    public ByeCommand() {"},{"lineNumber":16,"author":{"gitId":"wongkokian"},"content":"        super();"},{"lineNumber":17,"author":{"gitId":"wongkokian"},"content":"    }"},{"lineNumber":18,"author":{"gitId":"wongkokian"},"content":""},{"lineNumber":19,"author":{"gitId":"wongkokian"},"content":"    /**"},{"lineNumber":20,"author":{"gitId":"wongkokian"},"content":"     * Executes program exit."},{"lineNumber":21,"author":{"gitId":"wongkokian"},"content":"     *"},{"lineNumber":22,"author":{"gitId":"wongkokian"},"content":"     * @param taskList The list of tasks."},{"lineNumber":23,"author":{"gitId":"wongkokian"},"content":"     * @param ui       The user interface."},{"lineNumber":24,"author":{"gitId":"wongkokian"},"content":"     * @param storage  The storage handler."},{"lineNumber":25,"author":{"gitId":"wongkokian"},"content":"     * @throws DukeException If there is storage operation error."},{"lineNumber":26,"author":{"gitId":"wongkokian"},"content":"     */"},{"lineNumber":27,"author":{"gitId":"wongkokian"},"content":"    @Override"},{"lineNumber":28,"author":{"gitId":"wongkokian"},"content":"    public void execute(TaskList taskList, Ui ui, Storage storage) throws DukeException {"},{"lineNumber":29,"author":{"gitId":"wongkokian"},"content":"        System.out.println(\"     Bye. Hope to see you again soon!\");"},{"lineNumber":30,"author":{"gitId":"wongkokian"},"content":"        storage.clear();"},{"lineNumber":31,"author":{"gitId":"wongkokian"},"content":"        storage.save(taskList.getTaskList());"},{"lineNumber":32,"author":{"gitId":"wongkokian"},"content":"    }"},{"lineNumber":33,"author":{"gitId":"wongkokian"},"content":""},{"lineNumber":34,"author":{"gitId":"wongkokian"},"content":"    /**"},{"lineNumber":35,"author":{"gitId":"wongkokian"},"content":"     * Exits program."},{"lineNumber":36,"author":{"gitId":"wongkokian"},"content":"     *"},{"lineNumber":37,"author":{"gitId":"wongkokian"},"content":"     * @return True to exit program."},{"lineNumber":38,"author":{"gitId":"wongkokian"},"content":"     */"},{"lineNumber":39,"author":{"gitId":"wongkokian"},"content":"    @Override"},{"lineNumber":40,"author":{"gitId":"wongkokian"},"content":"    public boolean isExit() {"},{"lineNumber":41,"author":{"gitId":"wongkokian"},"content":"        return true;"},{"lineNumber":42,"author":{"gitId":"wongkokian"},"content":"    }"},{"lineNumber":43,"author":{"gitId":"wongkokian"},"content":"}"}],"authorContributionMap":{"wongkokian":43}},{"path":"src/main/java/duke/command/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"wongkokian"},"content":"package duke.command;"},{"lineNumber":2,"author":{"gitId":"wongkokian"},"content":""},{"lineNumber":3,"author":{"gitId":"wongkokian"},"content":"import duke.exception.DukeException;"},{"lineNumber":4,"author":{"gitId":"wongkokian"},"content":"import duke.storage.Storage;"},{"lineNumber":5,"author":{"gitId":"wongkokian"},"content":"import duke.task.TaskList;"},{"lineNumber":6,"author":{"gitId":"wongkokian"},"content":"import duke.ui.Ui;"},{"lineNumber":7,"author":{"gitId":"wongkokian"},"content":""},{"lineNumber":8,"author":{"gitId":"wongkokian"},"content":"/**"},{"lineNumber":9,"author":{"gitId":"wongkokian"},"content":" * An abstract Command class."},{"lineNumber":10,"author":{"gitId":"wongkokian"},"content":" */"},{"lineNumber":11,"author":{"gitId":"wongkokian"},"content":"public abstract class Command {"},{"lineNumber":12,"author":{"gitId":"wongkokian"},"content":"    /**"},{"lineNumber":13,"author":{"gitId":"wongkokian"},"content":"     * Constructs Command."},{"lineNumber":14,"author":{"gitId":"wongkokian"},"content":"     */"},{"lineNumber":15,"author":{"gitId":"wongkokian"},"content":"    public Command() {"},{"lineNumber":16,"author":{"gitId":"wongkokian"},"content":"    }"},{"lineNumber":17,"author":{"gitId":"wongkokian"},"content":""},{"lineNumber":18,"author":{"gitId":"wongkokian"},"content":"    /**"},{"lineNumber":19,"author":{"gitId":"wongkokian"},"content":"     * Abstract execute method for Command."},{"lineNumber":20,"author":{"gitId":"wongkokian"},"content":"     *"},{"lineNumber":21,"author":{"gitId":"wongkokian"},"content":"     * @param taskList The list of tasks."},{"lineNumber":22,"author":{"gitId":"wongkokian"},"content":"     * @param ui       The user interface."},{"lineNumber":23,"author":{"gitId":"wongkokian"},"content":"     * @param storage  The storage handler."},{"lineNumber":24,"author":{"gitId":"wongkokian"},"content":"     * @throws DukeException If there is error in execution."},{"lineNumber":25,"author":{"gitId":"wongkokian"},"content":"     */"},{"lineNumber":26,"author":{"gitId":"wongkokian"},"content":"    public abstract void execute(TaskList taskList, Ui ui, Storage storage) throws DukeException;"},{"lineNumber":27,"author":{"gitId":"wongkokian"},"content":""},{"lineNumber":28,"author":{"gitId":"wongkokian"},"content":"    /**"},{"lineNumber":29,"author":{"gitId":"wongkokian"},"content":"     * Abstract isExit method to determine if execution will exit program."},{"lineNumber":30,"author":{"gitId":"wongkokian"},"content":"     *"},{"lineNumber":31,"author":{"gitId":"wongkokian"},"content":"     * @return True if program exits, False if program continues."},{"lineNumber":32,"author":{"gitId":"wongkokian"},"content":"     */"},{"lineNumber":33,"author":{"gitId":"wongkokian"},"content":"    public abstract boolean isExit();"},{"lineNumber":34,"author":{"gitId":"wongkokian"},"content":"}"}],"authorContributionMap":{"wongkokian":34}},{"path":"src/main/java/duke/command/DeleteCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"wongkokian"},"content":"package duke.command;"},{"lineNumber":2,"author":{"gitId":"wongkokian"},"content":""},{"lineNumber":3,"author":{"gitId":"wongkokian"},"content":"import duke.exception.DukeException;"},{"lineNumber":4,"author":{"gitId":"wongkokian"},"content":"import duke.storage.Storage;"},{"lineNumber":5,"author":{"gitId":"wongkokian"},"content":"import duke.task.TaskList;"},{"lineNumber":6,"author":{"gitId":"wongkokian"},"content":"import duke.ui.Ui;"},{"lineNumber":7,"author":{"gitId":"wongkokian"},"content":""},{"lineNumber":8,"author":{"gitId":"wongkokian"},"content":"/**"},{"lineNumber":9,"author":{"gitId":"wongkokian"},"content":" * A DeleteCommand class to perform task deletion."},{"lineNumber":10,"author":{"gitId":"wongkokian"},"content":" */"},{"lineNumber":11,"author":{"gitId":"wongkokian"},"content":"public class DeleteCommand extends Command {"},{"lineNumber":12,"author":{"gitId":"wongkokian"},"content":"    protected String fullCommand;"},{"lineNumber":13,"author":{"gitId":"wongkokian"},"content":""},{"lineNumber":14,"author":{"gitId":"wongkokian"},"content":"    /**"},{"lineNumber":15,"author":{"gitId":"wongkokian"},"content":"     * Constructs DeleteCommand."},{"lineNumber":16,"author":{"gitId":"wongkokian"},"content":"     *"},{"lineNumber":17,"author":{"gitId":"wongkokian"},"content":"     * @param fullCommand The command given."},{"lineNumber":18,"author":{"gitId":"wongkokian"},"content":"     */"},{"lineNumber":19,"author":{"gitId":"wongkokian"},"content":"    public DeleteCommand(String fullCommand) {"},{"lineNumber":20,"author":{"gitId":"wongkokian"},"content":"        super();"},{"lineNumber":21,"author":{"gitId":"wongkokian"},"content":"        this.fullCommand \u003d fullCommand;"},{"lineNumber":22,"author":{"gitId":"wongkokian"},"content":"    }"},{"lineNumber":23,"author":{"gitId":"wongkokian"},"content":""},{"lineNumber":24,"author":{"gitId":"wongkokian"},"content":"    /**"},{"lineNumber":25,"author":{"gitId":"wongkokian"},"content":"     * Executes task deletion."},{"lineNumber":26,"author":{"gitId":"wongkokian"},"content":"     *"},{"lineNumber":27,"author":{"gitId":"wongkokian"},"content":"     * @param taskList The list of tasks."},{"lineNumber":28,"author":{"gitId":"wongkokian"},"content":"     * @param ui       The user interface."},{"lineNumber":29,"author":{"gitId":"wongkokian"},"content":"     * @param storage  The storage handler."},{"lineNumber":30,"author":{"gitId":"wongkokian"},"content":"     * @throws DukeException If user input format is wrong."},{"lineNumber":31,"author":{"gitId":"wongkokian"},"content":"     */"},{"lineNumber":32,"author":{"gitId":"wongkokian"},"content":"    @Override"},{"lineNumber":33,"author":{"gitId":"wongkokian"},"content":"    public void execute(TaskList taskList, Ui ui, Storage storage) throws DukeException {"},{"lineNumber":34,"author":{"gitId":"wongkokian"},"content":"        taskList.delete(this.fullCommand);"},{"lineNumber":35,"author":{"gitId":"wongkokian"},"content":"    }"},{"lineNumber":36,"author":{"gitId":"wongkokian"},"content":""},{"lineNumber":37,"author":{"gitId":"wongkokian"},"content":"    /**"},{"lineNumber":38,"author":{"gitId":"wongkokian"},"content":"     * Program does not exit."},{"lineNumber":39,"author":{"gitId":"wongkokian"},"content":"     *"},{"lineNumber":40,"author":{"gitId":"wongkokian"},"content":"     * @return False to continue the program."},{"lineNumber":41,"author":{"gitId":"wongkokian"},"content":"     */"},{"lineNumber":42,"author":{"gitId":"wongkokian"},"content":"    @Override"},{"lineNumber":43,"author":{"gitId":"wongkokian"},"content":"    public boolean isExit() {"},{"lineNumber":44,"author":{"gitId":"wongkokian"},"content":"        return false;"},{"lineNumber":45,"author":{"gitId":"wongkokian"},"content":"    }"},{"lineNumber":46,"author":{"gitId":"wongkokian"},"content":"}"}],"authorContributionMap":{"wongkokian":46}},{"path":"src/main/java/duke/command/DoneCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"wongkokian"},"content":"package duke.command;"},{"lineNumber":2,"author":{"gitId":"wongkokian"},"content":""},{"lineNumber":3,"author":{"gitId":"wongkokian"},"content":"import duke.exception.DukeException;"},{"lineNumber":4,"author":{"gitId":"wongkokian"},"content":"import duke.storage.Storage;"},{"lineNumber":5,"author":{"gitId":"wongkokian"},"content":"import duke.task.TaskList;"},{"lineNumber":6,"author":{"gitId":"wongkokian"},"content":"import duke.ui.Ui;"},{"lineNumber":7,"author":{"gitId":"wongkokian"},"content":""},{"lineNumber":8,"author":{"gitId":"wongkokian"},"content":"/**"},{"lineNumber":9,"author":{"gitId":"wongkokian"},"content":" * A DoneCommand class to perform task completion."},{"lineNumber":10,"author":{"gitId":"wongkokian"},"content":" */"},{"lineNumber":11,"author":{"gitId":"wongkokian"},"content":"public class DoneCommand extends Command {"},{"lineNumber":12,"author":{"gitId":"wongkokian"},"content":"    protected String fullCommand;"},{"lineNumber":13,"author":{"gitId":"wongkokian"},"content":""},{"lineNumber":14,"author":{"gitId":"wongkokian"},"content":"    /**"},{"lineNumber":15,"author":{"gitId":"wongkokian"},"content":"     * Constructs DoneCommand."},{"lineNumber":16,"author":{"gitId":"wongkokian"},"content":"     *"},{"lineNumber":17,"author":{"gitId":"wongkokian"},"content":"     * @param fullCommand The command given."},{"lineNumber":18,"author":{"gitId":"wongkokian"},"content":"     */"},{"lineNumber":19,"author":{"gitId":"wongkokian"},"content":"    public DoneCommand(String fullCommand) {"},{"lineNumber":20,"author":{"gitId":"wongkokian"},"content":"        super();"},{"lineNumber":21,"author":{"gitId":"wongkokian"},"content":"        this.fullCommand \u003d fullCommand;"},{"lineNumber":22,"author":{"gitId":"wongkokian"},"content":"    }"},{"lineNumber":23,"author":{"gitId":"wongkokian"},"content":""},{"lineNumber":24,"author":{"gitId":"wongkokian"},"content":"    /**"},{"lineNumber":25,"author":{"gitId":"wongkokian"},"content":"     * Executes task completion."},{"lineNumber":26,"author":{"gitId":"wongkokian"},"content":"     *"},{"lineNumber":27,"author":{"gitId":"wongkokian"},"content":"     * @param taskList The list of tasks."},{"lineNumber":28,"author":{"gitId":"wongkokian"},"content":"     * @param ui       The user interface."},{"lineNumber":29,"author":{"gitId":"wongkokian"},"content":"     * @param storage  The storage handler."},{"lineNumber":30,"author":{"gitId":"wongkokian"},"content":"     * @throws DukeException If user input format is wrong."},{"lineNumber":31,"author":{"gitId":"wongkokian"},"content":"     */"},{"lineNumber":32,"author":{"gitId":"wongkokian"},"content":"    @Override"},{"lineNumber":33,"author":{"gitId":"wongkokian"},"content":"    public void execute(TaskList taskList, Ui ui, Storage storage) throws DukeException {"},{"lineNumber":34,"author":{"gitId":"wongkokian"},"content":"        taskList.done(this.fullCommand);"},{"lineNumber":35,"author":{"gitId":"wongkokian"},"content":"    }"},{"lineNumber":36,"author":{"gitId":"wongkokian"},"content":""},{"lineNumber":37,"author":{"gitId":"wongkokian"},"content":"    /**"},{"lineNumber":38,"author":{"gitId":"wongkokian"},"content":"     * Program does not exit."},{"lineNumber":39,"author":{"gitId":"wongkokian"},"content":"     *"},{"lineNumber":40,"author":{"gitId":"wongkokian"},"content":"     * @return False to continue the program."},{"lineNumber":41,"author":{"gitId":"wongkokian"},"content":"     */"},{"lineNumber":42,"author":{"gitId":"wongkokian"},"content":"    @Override"},{"lineNumber":43,"author":{"gitId":"wongkokian"},"content":"    public boolean isExit() {"},{"lineNumber":44,"author":{"gitId":"wongkokian"},"content":"        return false;"},{"lineNumber":45,"author":{"gitId":"wongkokian"},"content":"    }"},{"lineNumber":46,"author":{"gitId":"wongkokian"},"content":"}"}],"authorContributionMap":{"wongkokian":46}},{"path":"src/main/java/duke/command/FindCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"wongkokian"},"content":"package duke.command;"},{"lineNumber":2,"author":{"gitId":"wongkokian"},"content":""},{"lineNumber":3,"author":{"gitId":"wongkokian"},"content":"import duke.exception.DukeException;"},{"lineNumber":4,"author":{"gitId":"wongkokian"},"content":"import duke.storage.Storage;"},{"lineNumber":5,"author":{"gitId":"wongkokian"},"content":"import duke.task.TaskList;"},{"lineNumber":6,"author":{"gitId":"wongkokian"},"content":"import duke.ui.Ui;"},{"lineNumber":7,"author":{"gitId":"wongkokian"},"content":""},{"lineNumber":8,"author":{"gitId":"wongkokian"},"content":"/**"},{"lineNumber":9,"author":{"gitId":"wongkokian"},"content":" * A FindCommand class to find tasks that contain a given keyword."},{"lineNumber":10,"author":{"gitId":"wongkokian"},"content":" */"},{"lineNumber":11,"author":{"gitId":"wongkokian"},"content":"public class FindCommand extends Command {"},{"lineNumber":12,"author":{"gitId":"wongkokian"},"content":"    protected String fullCommand;"},{"lineNumber":13,"author":{"gitId":"wongkokian"},"content":""},{"lineNumber":14,"author":{"gitId":"wongkokian"},"content":"    /**"},{"lineNumber":15,"author":{"gitId":"wongkokian"},"content":"     * Constructs FindCommand."},{"lineNumber":16,"author":{"gitId":"wongkokian"},"content":"     *"},{"lineNumber":17,"author":{"gitId":"wongkokian"},"content":"     * @param fullCommand The command given."},{"lineNumber":18,"author":{"gitId":"wongkokian"},"content":"     */"},{"lineNumber":19,"author":{"gitId":"wongkokian"},"content":"    public FindCommand(String fullCommand) {"},{"lineNumber":20,"author":{"gitId":"wongkokian"},"content":"        super();"},{"lineNumber":21,"author":{"gitId":"wongkokian"},"content":"        this.fullCommand \u003d fullCommand;"},{"lineNumber":22,"author":{"gitId":"wongkokian"},"content":"    }"},{"lineNumber":23,"author":{"gitId":"wongkokian"},"content":""},{"lineNumber":24,"author":{"gitId":"wongkokian"},"content":"    /**"},{"lineNumber":25,"author":{"gitId":"wongkokian"},"content":"     * Executes task find."},{"lineNumber":26,"author":{"gitId":"wongkokian"},"content":"     *"},{"lineNumber":27,"author":{"gitId":"wongkokian"},"content":"     * @param taskList The list of tasks."},{"lineNumber":28,"author":{"gitId":"wongkokian"},"content":"     * @param ui       The user interface."},{"lineNumber":29,"author":{"gitId":"wongkokian"},"content":"     * @param storage  The storage handler."},{"lineNumber":30,"author":{"gitId":"wongkokian"},"content":"     * @throws DukeException"},{"lineNumber":31,"author":{"gitId":"wongkokian"},"content":"     */"},{"lineNumber":32,"author":{"gitId":"wongkokian"},"content":"    @Override"},{"lineNumber":33,"author":{"gitId":"wongkokian"},"content":"    public void execute(TaskList taskList, Ui ui, Storage storage) throws DukeException {"},{"lineNumber":34,"author":{"gitId":"wongkokian"},"content":"        taskList.find(this.fullCommand);"},{"lineNumber":35,"author":{"gitId":"wongkokian"},"content":"    }"},{"lineNumber":36,"author":{"gitId":"wongkokian"},"content":""},{"lineNumber":37,"author":{"gitId":"wongkokian"},"content":"    /**"},{"lineNumber":38,"author":{"gitId":"wongkokian"},"content":"     * Program does not exit."},{"lineNumber":39,"author":{"gitId":"wongkokian"},"content":"     *"},{"lineNumber":40,"author":{"gitId":"wongkokian"},"content":"     * @return False to continue the program."},{"lineNumber":41,"author":{"gitId":"wongkokian"},"content":"     */"},{"lineNumber":42,"author":{"gitId":"wongkokian"},"content":"    @Override"},{"lineNumber":43,"author":{"gitId":"wongkokian"},"content":"    public boolean isExit() {"},{"lineNumber":44,"author":{"gitId":"wongkokian"},"content":"        return false;"},{"lineNumber":45,"author":{"gitId":"wongkokian"},"content":"    }"},{"lineNumber":46,"author":{"gitId":"wongkokian"},"content":"}"}],"authorContributionMap":{"wongkokian":46}},{"path":"src/main/java/duke/command/ListCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"wongkokian"},"content":"package duke.command;"},{"lineNumber":2,"author":{"gitId":"wongkokian"},"content":""},{"lineNumber":3,"author":{"gitId":"wongkokian"},"content":"import duke.storage.Storage;"},{"lineNumber":4,"author":{"gitId":"wongkokian"},"content":"import duke.task.TaskList;"},{"lineNumber":5,"author":{"gitId":"wongkokian"},"content":"import duke.ui.Ui;"},{"lineNumber":6,"author":{"gitId":"wongkokian"},"content":""},{"lineNumber":7,"author":{"gitId":"wongkokian"},"content":"/**"},{"lineNumber":8,"author":{"gitId":"wongkokian"},"content":" * A ListCommand class to list all tasks."},{"lineNumber":9,"author":{"gitId":"wongkokian"},"content":" */"},{"lineNumber":10,"author":{"gitId":"wongkokian"},"content":"public class ListCommand extends Command {"},{"lineNumber":11,"author":{"gitId":"wongkokian"},"content":"    /**"},{"lineNumber":12,"author":{"gitId":"wongkokian"},"content":"     * Constructs ListCommand."},{"lineNumber":13,"author":{"gitId":"wongkokian"},"content":"     */"},{"lineNumber":14,"author":{"gitId":"wongkokian"},"content":"    public ListCommand() {"},{"lineNumber":15,"author":{"gitId":"wongkokian"},"content":"        super();"},{"lineNumber":16,"author":{"gitId":"wongkokian"},"content":"    }"},{"lineNumber":17,"author":{"gitId":"wongkokian"},"content":""},{"lineNumber":18,"author":{"gitId":"wongkokian"},"content":"    /**"},{"lineNumber":19,"author":{"gitId":"wongkokian"},"content":"     * Executes the listing of tasks."},{"lineNumber":20,"author":{"gitId":"wongkokian"},"content":"     *"},{"lineNumber":21,"author":{"gitId":"wongkokian"},"content":"     * @param taskList The list of tasks."},{"lineNumber":22,"author":{"gitId":"wongkokian"},"content":"     * @param ui       The user interface."},{"lineNumber":23,"author":{"gitId":"wongkokian"},"content":"     * @param storage  The storage handler."},{"lineNumber":24,"author":{"gitId":"wongkokian"},"content":"     */"},{"lineNumber":25,"author":{"gitId":"wongkokian"},"content":"    @Override"},{"lineNumber":26,"author":{"gitId":"wongkokian"},"content":"    public void execute(TaskList taskList, Ui ui, Storage storage) {"},{"lineNumber":27,"author":{"gitId":"wongkokian"},"content":"        taskList.list();"},{"lineNumber":28,"author":{"gitId":"wongkokian"},"content":"    }"},{"lineNumber":29,"author":{"gitId":"wongkokian"},"content":""},{"lineNumber":30,"author":{"gitId":"wongkokian"},"content":"    /**"},{"lineNumber":31,"author":{"gitId":"wongkokian"},"content":"     * Program does not exit."},{"lineNumber":32,"author":{"gitId":"wongkokian"},"content":"     *"},{"lineNumber":33,"author":{"gitId":"wongkokian"},"content":"     * @return False to continue the program."},{"lineNumber":34,"author":{"gitId":"wongkokian"},"content":"     */"},{"lineNumber":35,"author":{"gitId":"wongkokian"},"content":"    @Override"},{"lineNumber":36,"author":{"gitId":"wongkokian"},"content":"    public boolean isExit() {"},{"lineNumber":37,"author":{"gitId":"wongkokian"},"content":"        return false;"},{"lineNumber":38,"author":{"gitId":"wongkokian"},"content":"    }"},{"lineNumber":39,"author":{"gitId":"wongkokian"},"content":"}"}],"authorContributionMap":{"wongkokian":39}},{"path":"src/main/java/duke/command/UnknownCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"wongkokian"},"content":"package duke.command;"},{"lineNumber":2,"author":{"gitId":"wongkokian"},"content":""},{"lineNumber":3,"author":{"gitId":"wongkokian"},"content":"import duke.storage.Storage;"},{"lineNumber":4,"author":{"gitId":"wongkokian"},"content":"import duke.task.TaskList;"},{"lineNumber":5,"author":{"gitId":"wongkokian"},"content":"import duke.ui.Ui;"},{"lineNumber":6,"author":{"gitId":"wongkokian"},"content":""},{"lineNumber":7,"author":{"gitId":"wongkokian"},"content":"/**"},{"lineNumber":8,"author":{"gitId":"wongkokian"},"content":" * A UnknownCommand class to handle unknown commands given by user."},{"lineNumber":9,"author":{"gitId":"wongkokian"},"content":" */"},{"lineNumber":10,"author":{"gitId":"wongkokian"},"content":"public class UnknownCommand extends Command {"},{"lineNumber":11,"author":{"gitId":"wongkokian"},"content":"    /**"},{"lineNumber":12,"author":{"gitId":"wongkokian"},"content":"     * Constructs UnknownCommand."},{"lineNumber":13,"author":{"gitId":"wongkokian"},"content":"     */"},{"lineNumber":14,"author":{"gitId":"wongkokian"},"content":"    public UnknownCommand() {"},{"lineNumber":15,"author":{"gitId":"wongkokian"},"content":"        super();"},{"lineNumber":16,"author":{"gitId":"wongkokian"},"content":"    }"},{"lineNumber":17,"author":{"gitId":"wongkokian"},"content":""},{"lineNumber":18,"author":{"gitId":"wongkokian"},"content":"    /**"},{"lineNumber":19,"author":{"gitId":"wongkokian"},"content":"     * Prints error message when unknown command encountered."},{"lineNumber":20,"author":{"gitId":"wongkokian"},"content":"     *"},{"lineNumber":21,"author":{"gitId":"wongkokian"},"content":"     * @param taskList The list of tasks."},{"lineNumber":22,"author":{"gitId":"wongkokian"},"content":"     * @param ui       The user interface."},{"lineNumber":23,"author":{"gitId":"wongkokian"},"content":"     * @param storage  The storage handler."},{"lineNumber":24,"author":{"gitId":"wongkokian"},"content":"     */"},{"lineNumber":25,"author":{"gitId":"wongkokian"},"content":"    @Override"},{"lineNumber":26,"author":{"gitId":"wongkokian"},"content":"    public void execute(TaskList taskList, Ui ui, Storage storage) {"},{"lineNumber":27,"author":{"gitId":"wongkokian"},"content":"        System.out.println(\"       OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\");"},{"lineNumber":28,"author":{"gitId":"wongkokian"},"content":"    }"},{"lineNumber":29,"author":{"gitId":"wongkokian"},"content":""},{"lineNumber":30,"author":{"gitId":"wongkokian"},"content":"    /**"},{"lineNumber":31,"author":{"gitId":"wongkokian"},"content":"     * Program does not exit."},{"lineNumber":32,"author":{"gitId":"wongkokian"},"content":"     *"},{"lineNumber":33,"author":{"gitId":"wongkokian"},"content":"     * @return False to continue the program."},{"lineNumber":34,"author":{"gitId":"wongkokian"},"content":"     */"},{"lineNumber":35,"author":{"gitId":"wongkokian"},"content":"    @Override"},{"lineNumber":36,"author":{"gitId":"wongkokian"},"content":"    public boolean isExit() {"},{"lineNumber":37,"author":{"gitId":"wongkokian"},"content":"        return false;"},{"lineNumber":38,"author":{"gitId":"wongkokian"},"content":"    }"},{"lineNumber":39,"author":{"gitId":"wongkokian"},"content":"}"}],"authorContributionMap":{"wongkokian":39}},{"path":"src/main/java/duke/exception/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"wongkokian"},"content":"package duke.exception;"},{"lineNumber":2,"author":{"gitId":"wongkokian"},"content":""},{"lineNumber":3,"author":{"gitId":"wongkokian"},"content":"/**"},{"lineNumber":4,"author":{"gitId":"wongkokian"},"content":" * A DukeException class to represents all exceptions with"},{"lineNumber":5,"author":{"gitId":"wongkokian"},"content":" * regards to Duke."},{"lineNumber":6,"author":{"gitId":"wongkokian"},"content":" */"},{"lineNumber":7,"author":{"gitId":"wongkokian"},"content":"public class DukeException extends Exception {"},{"lineNumber":8,"author":{"gitId":"wongkokian"},"content":"    /**"},{"lineNumber":9,"author":{"gitId":"wongkokian"},"content":"     * Constructs DukeException."},{"lineNumber":10,"author":{"gitId":"wongkokian"},"content":"     *"},{"lineNumber":11,"author":{"gitId":"wongkokian"},"content":"     * @param message The error message."},{"lineNumber":12,"author":{"gitId":"wongkokian"},"content":"     */"},{"lineNumber":13,"author":{"gitId":"wongkokian"},"content":"    public DukeException(String message) {"},{"lineNumber":14,"author":{"gitId":"wongkokian"},"content":"        super(message);"},{"lineNumber":15,"author":{"gitId":"wongkokian"},"content":"    }"},{"lineNumber":16,"author":{"gitId":"wongkokian"},"content":"}"}],"authorContributionMap":{"wongkokian":16}},{"path":"src/main/java/duke/parser/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"wongkokian"},"content":"package duke.parser;"},{"lineNumber":2,"author":{"gitId":"wongkokian"},"content":""},{"lineNumber":3,"author":{"gitId":"wongkokian"},"content":"import duke.command.*;"},{"lineNumber":4,"author":{"gitId":"wongkokian"},"content":""},{"lineNumber":5,"author":{"gitId":"wongkokian"},"content":"/**"},{"lineNumber":6,"author":{"gitId":"wongkokian"},"content":" * A Parser class to parse inputs given by user into Commands."},{"lineNumber":7,"author":{"gitId":"wongkokian"},"content":" */"},{"lineNumber":8,"author":{"gitId":"wongkokian"},"content":"public class Parser {"},{"lineNumber":9,"author":{"gitId":"wongkokian"},"content":"    /**"},{"lineNumber":10,"author":{"gitId":"wongkokian"},"content":"     * Parses the given String into a Command."},{"lineNumber":11,"author":{"gitId":"wongkokian"},"content":"     *"},{"lineNumber":12,"author":{"gitId":"wongkokian"},"content":"     * @param fullCommand The user input to be parsed."},{"lineNumber":13,"author":{"gitId":"wongkokian"},"content":"     * @return The command as parsed from the input."},{"lineNumber":14,"author":{"gitId":"wongkokian"},"content":"     */"},{"lineNumber":15,"author":{"gitId":"wongkokian"},"content":"    public static Command parse(String fullCommand) {"},{"lineNumber":16,"author":{"gitId":"wongkokian"},"content":"        String[] commandArr \u003d fullCommand.split(\" \", 2);"},{"lineNumber":17,"author":{"gitId":"wongkokian"},"content":"        String type \u003d commandArr[0];"},{"lineNumber":18,"author":{"gitId":"wongkokian"},"content":"        switch (type) {"},{"lineNumber":19,"author":{"gitId":"wongkokian"},"content":"        case \"list\":"},{"lineNumber":20,"author":{"gitId":"wongkokian"},"content":"            return new ListCommand();"},{"lineNumber":21,"author":{"gitId":"wongkokian"},"content":"        case \"done\":"},{"lineNumber":22,"author":{"gitId":"wongkokian"},"content":"            return new DoneCommand(fullCommand);"},{"lineNumber":23,"author":{"gitId":"wongkokian"},"content":"        case \"delete\":"},{"lineNumber":24,"author":{"gitId":"wongkokian"},"content":"            return new DeleteCommand(fullCommand);"},{"lineNumber":25,"author":{"gitId":"wongkokian"},"content":"        case \"todo\":"},{"lineNumber":26,"author":{"gitId":"wongkokian"},"content":"        case \"deadline\":"},{"lineNumber":27,"author":{"gitId":"wongkokian"},"content":"        case \"event\":"},{"lineNumber":28,"author":{"gitId":"wongkokian"},"content":"            return new AddTaskCommand(type, fullCommand);"},{"lineNumber":29,"author":{"gitId":"wongkokian"},"content":"        case \"bye\":"},{"lineNumber":30,"author":{"gitId":"wongkokian"},"content":"            return new ByeCommand();"},{"lineNumber":31,"author":{"gitId":"wongkokian"},"content":"        case \"find\":"},{"lineNumber":32,"author":{"gitId":"wongkokian"},"content":"            return new FindCommand(fullCommand);"},{"lineNumber":33,"author":{"gitId":"wongkokian"},"content":"        default:"},{"lineNumber":34,"author":{"gitId":"wongkokian"},"content":"            return new UnknownCommand();"},{"lineNumber":35,"author":{"gitId":"wongkokian"},"content":"        }"},{"lineNumber":36,"author":{"gitId":"wongkokian"},"content":"    }"},{"lineNumber":37,"author":{"gitId":"wongkokian"},"content":"}"}],"authorContributionMap":{"wongkokian":37}},{"path":"src/main/java/duke/storage/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"wongkokian"},"content":"package duke.storage;"},{"lineNumber":2,"author":{"gitId":"wongkokian"},"content":""},{"lineNumber":3,"author":{"gitId":"wongkokian"},"content":"import duke.exception.DukeException;"},{"lineNumber":4,"author":{"gitId":"wongkokian"},"content":"import duke.task.Deadline;"},{"lineNumber":5,"author":{"gitId":"wongkokian"},"content":"import duke.task.Event;"},{"lineNumber":6,"author":{"gitId":"wongkokian"},"content":"import duke.task.Task;"},{"lineNumber":7,"author":{"gitId":"wongkokian"},"content":"import duke.task.Todo;"},{"lineNumber":8,"author":{"gitId":"wongkokian"},"content":""},{"lineNumber":9,"author":{"gitId":"wongkokian"},"content":"import java.io.File;"},{"lineNumber":10,"author":{"gitId":"wongkokian"},"content":"import java.io.FileNotFoundException;"},{"lineNumber":11,"author":{"gitId":"wongkokian"},"content":"import java.io.FileWriter;"},{"lineNumber":12,"author":{"gitId":"wongkokian"},"content":"import java.io.IOException;"},{"lineNumber":13,"author":{"gitId":"wongkokian"},"content":"import java.time.LocalDate;"},{"lineNumber":14,"author":{"gitId":"wongkokian"},"content":"import java.util.ArrayList;"},{"lineNumber":15,"author":{"gitId":"wongkokian"},"content":"import java.util.Scanner;"},{"lineNumber":16,"author":{"gitId":"wongkokian"},"content":""},{"lineNumber":17,"author":{"gitId":"wongkokian"},"content":"/**"},{"lineNumber":18,"author":{"gitId":"wongkokian"},"content":" * A Storage class to handle storage operations."},{"lineNumber":19,"author":{"gitId":"wongkokian"},"content":" */"},{"lineNumber":20,"author":{"gitId":"wongkokian"},"content":"public class Storage {"},{"lineNumber":21,"author":{"gitId":"wongkokian"},"content":"    private final File file;"},{"lineNumber":22,"author":{"gitId":"wongkokian"},"content":""},{"lineNumber":23,"author":{"gitId":"wongkokian"},"content":"    /**"},{"lineNumber":24,"author":{"gitId":"wongkokian"},"content":"     * Constructs Storage."},{"lineNumber":25,"author":{"gitId":"wongkokian"},"content":"     *"},{"lineNumber":26,"author":{"gitId":"wongkokian"},"content":"     * @param path The filepath of where the data file is to be stored at."},{"lineNumber":27,"author":{"gitId":"wongkokian"},"content":"     */"},{"lineNumber":28,"author":{"gitId":"wongkokian"},"content":"    public Storage(String path) {"},{"lineNumber":29,"author":{"gitId":"wongkokian"},"content":"        this.file \u003d new File(path);"},{"lineNumber":30,"author":{"gitId":"wongkokian"},"content":"    }"},{"lineNumber":31,"author":{"gitId":"wongkokian"},"content":""},{"lineNumber":32,"author":{"gitId":"wongkokian"},"content":"    /**"},{"lineNumber":33,"author":{"gitId":"wongkokian"},"content":"     * Creates the data file and directory which contains it if it does not exists."},{"lineNumber":34,"author":{"gitId":"wongkokian"},"content":"     *"},{"lineNumber":35,"author":{"gitId":"wongkokian"},"content":"     * @throws DukeException If unable to create file/directory."},{"lineNumber":36,"author":{"gitId":"wongkokian"},"content":"     */"},{"lineNumber":37,"author":{"gitId":"wongkokian"},"content":"    public void createFileAndDirectory() throws DukeException {"},{"lineNumber":38,"author":{"gitId":"wongkokian"},"content":"        try {"},{"lineNumber":39,"author":{"gitId":"wongkokian"},"content":"            File dir \u003d new File(\"data\");"},{"lineNumber":40,"author":{"gitId":"wongkokian"},"content":"            if (!dir.exists()) {"},{"lineNumber":41,"author":{"gitId":"wongkokian"},"content":"                if (dir.mkdir()) {"},{"lineNumber":42,"author":{"gitId":"wongkokian"},"content":"                    System.out.println(\"File directory created.\");"},{"lineNumber":43,"author":{"gitId":"wongkokian"},"content":"                }"},{"lineNumber":44,"author":{"gitId":"wongkokian"},"content":"            }"},{"lineNumber":45,"author":{"gitId":"wongkokian"},"content":"            File file \u003d new File(\"data/tasks.txt\");"},{"lineNumber":46,"author":{"gitId":"wongkokian"},"content":"            if (file.createNewFile()) {"},{"lineNumber":47,"author":{"gitId":"wongkokian"},"content":"                System.out.println(\"Data file created.\\n\");"},{"lineNumber":48,"author":{"gitId":"wongkokian"},"content":"            } else {"},{"lineNumber":49,"author":{"gitId":"wongkokian"},"content":"                System.out.println(\"There is an existing data file.\\n\");"},{"lineNumber":50,"author":{"gitId":"wongkokian"},"content":"            }"},{"lineNumber":51,"author":{"gitId":"wongkokian"},"content":"        } catch (IOException ex) {"},{"lineNumber":52,"author":{"gitId":"wongkokian"},"content":"            throw new DukeException(\"Unable to create new file.\");"},{"lineNumber":53,"author":{"gitId":"wongkokian"},"content":"        }"},{"lineNumber":54,"author":{"gitId":"wongkokian"},"content":"    }"},{"lineNumber":55,"author":{"gitId":"wongkokian"},"content":""},{"lineNumber":56,"author":{"gitId":"wongkokian"},"content":"    /**"},{"lineNumber":57,"author":{"gitId":"wongkokian"},"content":"     * Loads tasks from data file to Duke."},{"lineNumber":58,"author":{"gitId":"wongkokian"},"content":"     *"},{"lineNumber":59,"author":{"gitId":"wongkokian"},"content":"     * @return The list of tasks to be loaded."},{"lineNumber":60,"author":{"gitId":"wongkokian"},"content":"     * @throws DukeException If file cannot be found."},{"lineNumber":61,"author":{"gitId":"wongkokian"},"content":"     */"},{"lineNumber":62,"author":{"gitId":"wongkokian"},"content":"    public ArrayList\u003cTask\u003e load() throws DukeException {"},{"lineNumber":63,"author":{"gitId":"wongkokian"},"content":"        Scanner sc;"},{"lineNumber":64,"author":{"gitId":"wongkokian"},"content":"        try {"},{"lineNumber":65,"author":{"gitId":"wongkokian"},"content":"            sc \u003d new Scanner(this.file);"},{"lineNumber":66,"author":{"gitId":"wongkokian"},"content":"        } catch (FileNotFoundException ex) {"},{"lineNumber":67,"author":{"gitId":"wongkokian"},"content":"            throw new DukeException(\"File not found.\");"},{"lineNumber":68,"author":{"gitId":"wongkokian"},"content":"        }"},{"lineNumber":69,"author":{"gitId":"wongkokian"},"content":"        ArrayList\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();"},{"lineNumber":70,"author":{"gitId":"wongkokian"},"content":"        while (sc.hasNextLine()) {"},{"lineNumber":71,"author":{"gitId":"wongkokian"},"content":"            String[] currTask \u003d sc.nextLine().split(\" // \");"},{"lineNumber":72,"author":{"gitId":"wongkokian"},"content":"            String type \u003d currTask[0];"},{"lineNumber":73,"author":{"gitId":"wongkokian"},"content":"            switch (type) {"},{"lineNumber":74,"author":{"gitId":"wongkokian"},"content":"            case \"T\":"},{"lineNumber":75,"author":{"gitId":"wongkokian"},"content":"                tasks.add(new Todo(Integer.parseInt(currTask[1]), currTask[2]));"},{"lineNumber":76,"author":{"gitId":"wongkokian"},"content":"                break;"},{"lineNumber":77,"author":{"gitId":"wongkokian"},"content":"            case \"D\":"},{"lineNumber":78,"author":{"gitId":"wongkokian"},"content":"                tasks.add(new Deadline(Integer.parseInt(currTask[1]),"},{"lineNumber":79,"author":{"gitId":"wongkokian"},"content":"                        currTask[2], LocalDate.parse(currTask[3])));"},{"lineNumber":80,"author":{"gitId":"wongkokian"},"content":"                break;"},{"lineNumber":81,"author":{"gitId":"wongkokian"},"content":"            case \"E\":"},{"lineNumber":82,"author":{"gitId":"wongkokian"},"content":"                tasks.add(new Event(Integer.parseInt(currTask[1]),"},{"lineNumber":83,"author":{"gitId":"wongkokian"},"content":"                        currTask[2], LocalDate.parse(currTask[3])));"},{"lineNumber":84,"author":{"gitId":"wongkokian"},"content":"                break;"},{"lineNumber":85,"author":{"gitId":"wongkokian"},"content":"            }"},{"lineNumber":86,"author":{"gitId":"wongkokian"},"content":"        }"},{"lineNumber":87,"author":{"gitId":"wongkokian"},"content":"        return tasks;"},{"lineNumber":88,"author":{"gitId":"wongkokian"},"content":"    }"},{"lineNumber":89,"author":{"gitId":"wongkokian"},"content":""},{"lineNumber":90,"author":{"gitId":"wongkokian"},"content":"    /**"},{"lineNumber":91,"author":{"gitId":"wongkokian"},"content":"     * Saves the list of task to the data file."},{"lineNumber":92,"author":{"gitId":"wongkokian"},"content":"     *"},{"lineNumber":93,"author":{"gitId":"wongkokian"},"content":"     * @param tasks The list of tasks to be stored."},{"lineNumber":94,"author":{"gitId":"wongkokian"},"content":"     * @throws DukeException If unable to save data."},{"lineNumber":95,"author":{"gitId":"wongkokian"},"content":"     */"},{"lineNumber":96,"author":{"gitId":"wongkokian"},"content":"    public void save(ArrayList\u003cTask\u003e tasks) throws DukeException {"},{"lineNumber":97,"author":{"gitId":"wongkokian"},"content":"        try {"},{"lineNumber":98,"author":{"gitId":"wongkokian"},"content":"            FileWriter fw \u003d new FileWriter(file, true);"},{"lineNumber":99,"author":{"gitId":"wongkokian"},"content":"            for (Task currTask : tasks) {"},{"lineNumber":100,"author":{"gitId":"wongkokian"},"content":"                fw.write(currTask.getFileString());"},{"lineNumber":101,"author":{"gitId":"wongkokian"},"content":"                fw.write(System.lineSeparator());"},{"lineNumber":102,"author":{"gitId":"wongkokian"},"content":"            }"},{"lineNumber":103,"author":{"gitId":"wongkokian"},"content":"            fw.close();"},{"lineNumber":104,"author":{"gitId":"wongkokian"},"content":"        } catch (IOException ex) {"},{"lineNumber":105,"author":{"gitId":"wongkokian"},"content":"            throw new DukeException(\"       OOPS!!! Unable to save data.\");"},{"lineNumber":106,"author":{"gitId":"wongkokian"},"content":"        }"},{"lineNumber":107,"author":{"gitId":"wongkokian"},"content":"    }"},{"lineNumber":108,"author":{"gitId":"wongkokian"},"content":""},{"lineNumber":109,"author":{"gitId":"wongkokian"},"content":"    /**"},{"lineNumber":110,"author":{"gitId":"wongkokian"},"content":"     * Clears the data in the existing data file."},{"lineNumber":111,"author":{"gitId":"wongkokian"},"content":"     *"},{"lineNumber":112,"author":{"gitId":"wongkokian"},"content":"     * @throws DukeException If unable to clear data."},{"lineNumber":113,"author":{"gitId":"wongkokian"},"content":"     */"},{"lineNumber":114,"author":{"gitId":"wongkokian"},"content":"    public void clear() throws DukeException {"},{"lineNumber":115,"author":{"gitId":"wongkokian"},"content":"        try {"},{"lineNumber":116,"author":{"gitId":"wongkokian"},"content":"            FileWriter cleaner \u003d new FileWriter(file, false);"},{"lineNumber":117,"author":{"gitId":"wongkokian"},"content":"            cleaner.close();"},{"lineNumber":118,"author":{"gitId":"wongkokian"},"content":"        } catch (IOException ex) {"},{"lineNumber":119,"author":{"gitId":"wongkokian"},"content":"            throw new DukeException(\"       OOPS!!! Unable to clear data.\");"},{"lineNumber":120,"author":{"gitId":"wongkokian"},"content":"        }"},{"lineNumber":121,"author":{"gitId":"wongkokian"},"content":"    }"},{"lineNumber":122,"author":{"gitId":"wongkokian"},"content":"}"}],"authorContributionMap":{"wongkokian":122}},{"path":"src/main/java/duke/task/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"wongkokian"},"content":"package duke.task;"},{"lineNumber":2,"author":{"gitId":"wongkokian"},"content":""},{"lineNumber":3,"author":{"gitId":"wongkokian"},"content":"import java.time.LocalDate;"},{"lineNumber":4,"author":{"gitId":"wongkokian"},"content":"import java.time.format.DateTimeFormatter;"},{"lineNumber":5,"author":{"gitId":"wongkokian"},"content":""},{"lineNumber":6,"author":{"gitId":"wongkokian"},"content":"/**"},{"lineNumber":7,"author":{"gitId":"wongkokian"},"content":" * A Deadline class which represents a deadline task."},{"lineNumber":8,"author":{"gitId":"wongkokian"},"content":" */"},{"lineNumber":9,"author":{"gitId":"wongkokian"},"content":"public class Deadline extends Task {"},{"lineNumber":10,"author":{"gitId":"wongkokian"},"content":"    protected LocalDate by;"},{"lineNumber":11,"author":{"gitId":"wongkokian"},"content":""},{"lineNumber":12,"author":{"gitId":"wongkokian"},"content":"    /**"},{"lineNumber":13,"author":{"gitId":"wongkokian"},"content":"     * Constructs Deadline."},{"lineNumber":14,"author":{"gitId":"wongkokian"},"content":"     *"},{"lineNumber":15,"author":{"gitId":"wongkokian"},"content":"     * @param isDone      Determines if task is completed."},{"lineNumber":16,"author":{"gitId":"wongkokian"},"content":"     * @param description Task description."},{"lineNumber":17,"author":{"gitId":"wongkokian"},"content":"     * @param by          Due date."},{"lineNumber":18,"author":{"gitId":"wongkokian"},"content":"     */"},{"lineNumber":19,"author":{"gitId":"wongkokian"},"content":"    public Deadline(int isDone, String description, LocalDate by) {"},{"lineNumber":20,"author":{"gitId":"wongkokian"},"content":"        super(\u0027D\u0027, isDone, description);"},{"lineNumber":21,"author":{"gitId":"wongkokian"},"content":"        this.by \u003d by;"},{"lineNumber":22,"author":{"gitId":"wongkokian"},"content":"    }"},{"lineNumber":23,"author":{"gitId":"wongkokian"},"content":""},{"lineNumber":24,"author":{"gitId":"wongkokian"},"content":"    /**"},{"lineNumber":25,"author":{"gitId":"wongkokian"},"content":"     * Creates String to be stored in the data file."},{"lineNumber":26,"author":{"gitId":"wongkokian"},"content":"     *"},{"lineNumber":27,"author":{"gitId":"wongkokian"},"content":"     * @return String in the format to be stored in data file."},{"lineNumber":28,"author":{"gitId":"wongkokian"},"content":"     */"},{"lineNumber":29,"author":{"gitId":"wongkokian"},"content":"    @Override"},{"lineNumber":30,"author":{"gitId":"wongkokian"},"content":"    public String getFileString() {"},{"lineNumber":31,"author":{"gitId":"wongkokian"},"content":"        return super.getFileString() + \" // \" + this.by;"},{"lineNumber":32,"author":{"gitId":"wongkokian"},"content":"    }"},{"lineNumber":33,"author":{"gitId":"wongkokian"},"content":""},{"lineNumber":34,"author":{"gitId":"wongkokian"},"content":"    @Override"},{"lineNumber":35,"author":{"gitId":"wongkokian"},"content":"    public String toString() {"},{"lineNumber":36,"author":{"gitId":"wongkokian"},"content":"        return \"[D]\" + super.toString()"},{"lineNumber":37,"author":{"gitId":"wongkokian"},"content":"                + \" (by: \" + by.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\")) + \")\";"},{"lineNumber":38,"author":{"gitId":"wongkokian"},"content":"    }"},{"lineNumber":39,"author":{"gitId":"wongkokian"},"content":"}"}],"authorContributionMap":{"wongkokian":39}},{"path":"src/main/java/duke/task/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"wongkokian"},"content":"package duke.task;"},{"lineNumber":2,"author":{"gitId":"wongkokian"},"content":""},{"lineNumber":3,"author":{"gitId":"wongkokian"},"content":"import java.time.LocalDate;"},{"lineNumber":4,"author":{"gitId":"wongkokian"},"content":"import java.time.format.DateTimeFormatter;"},{"lineNumber":5,"author":{"gitId":"wongkokian"},"content":""},{"lineNumber":6,"author":{"gitId":"wongkokian"},"content":"/**"},{"lineNumber":7,"author":{"gitId":"wongkokian"},"content":" * A Event class to which represents a event task."},{"lineNumber":8,"author":{"gitId":"wongkokian"},"content":" */"},{"lineNumber":9,"author":{"gitId":"wongkokian"},"content":"public class Event extends Task {"},{"lineNumber":10,"author":{"gitId":"wongkokian"},"content":"    protected LocalDate at;"},{"lineNumber":11,"author":{"gitId":"wongkokian"},"content":""},{"lineNumber":12,"author":{"gitId":"wongkokian"},"content":"    /**"},{"lineNumber":13,"author":{"gitId":"wongkokian"},"content":"     * Constructs Event."},{"lineNumber":14,"author":{"gitId":"wongkokian"},"content":"     *"},{"lineNumber":15,"author":{"gitId":"wongkokian"},"content":"     * @param isDone      Determines if task is completed."},{"lineNumber":16,"author":{"gitId":"wongkokian"},"content":"     * @param description Task description."},{"lineNumber":17,"author":{"gitId":"wongkokian"},"content":"     * @param at          Date of Event."},{"lineNumber":18,"author":{"gitId":"wongkokian"},"content":"     */"},{"lineNumber":19,"author":{"gitId":"wongkokian"},"content":"    public Event(int isDone, String description, LocalDate at) {"},{"lineNumber":20,"author":{"gitId":"wongkokian"},"content":"        super(\u0027E\u0027, isDone, description);"},{"lineNumber":21,"author":{"gitId":"wongkokian"},"content":"        this.at \u003d at;"},{"lineNumber":22,"author":{"gitId":"wongkokian"},"content":"    }"},{"lineNumber":23,"author":{"gitId":"wongkokian"},"content":""},{"lineNumber":24,"author":{"gitId":"wongkokian"},"content":"    /**"},{"lineNumber":25,"author":{"gitId":"wongkokian"},"content":"     * Creates String to be stored in the data file."},{"lineNumber":26,"author":{"gitId":"wongkokian"},"content":"     *"},{"lineNumber":27,"author":{"gitId":"wongkokian"},"content":"     * @return String in the format to be stored in data file."},{"lineNumber":28,"author":{"gitId":"wongkokian"},"content":"     */"},{"lineNumber":29,"author":{"gitId":"wongkokian"},"content":"    @Override"},{"lineNumber":30,"author":{"gitId":"wongkokian"},"content":"    public String getFileString() {"},{"lineNumber":31,"author":{"gitId":"wongkokian"},"content":"        return super.getFileString() + \" // \" + this.at;"},{"lineNumber":32,"author":{"gitId":"wongkokian"},"content":"    }"},{"lineNumber":33,"author":{"gitId":"wongkokian"},"content":""},{"lineNumber":34,"author":{"gitId":"wongkokian"},"content":"    @Override"},{"lineNumber":35,"author":{"gitId":"wongkokian"},"content":"    public String toString() {"},{"lineNumber":36,"author":{"gitId":"wongkokian"},"content":"        return \"[E]\" + super.toString()"},{"lineNumber":37,"author":{"gitId":"wongkokian"},"content":"                + \" (at: \" + at.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\")) + \")\";"},{"lineNumber":38,"author":{"gitId":"wongkokian"},"content":"    }"},{"lineNumber":39,"author":{"gitId":"wongkokian"},"content":"}"}],"authorContributionMap":{"wongkokian":39}},{"path":"src/main/java/duke/task/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"wongkokian"},"content":"package duke.task;"},{"lineNumber":2,"author":{"gitId":"wongkokian"},"content":""},{"lineNumber":3,"author":{"gitId":"wongkokian"},"content":"/**"},{"lineNumber":4,"author":{"gitId":"wongkokian"},"content":" * A Task class which represents a task."},{"lineNumber":5,"author":{"gitId":"wongkokian"},"content":" */"},{"lineNumber":6,"author":{"gitId":"wongkokian"},"content":"public class Task {"},{"lineNumber":7,"author":{"gitId":"wongkokian"},"content":"    protected char type;"},{"lineNumber":8,"author":{"gitId":"wongkokian"},"content":"    protected String description;"},{"lineNumber":9,"author":{"gitId":"wongkokian"},"content":"    protected boolean isDone;"},{"lineNumber":10,"author":{"gitId":"wongkokian"},"content":""},{"lineNumber":11,"author":{"gitId":"wongkokian"},"content":"    /**"},{"lineNumber":12,"author":{"gitId":"wongkokian"},"content":"     * Constructs Task."},{"lineNumber":13,"author":{"gitId":"wongkokian"},"content":"     *"},{"lineNumber":14,"author":{"gitId":"wongkokian"},"content":"     * @param type        The type of task."},{"lineNumber":15,"author":{"gitId":"wongkokian"},"content":"     * @param isDone      Determines if task is completed."},{"lineNumber":16,"author":{"gitId":"wongkokian"},"content":"     * @param description Task description."},{"lineNumber":17,"author":{"gitId":"wongkokian"},"content":"     */"},{"lineNumber":18,"author":{"gitId":"wongkokian"},"content":"    public Task(char type, int isDone, String description) {"},{"lineNumber":19,"author":{"gitId":"wongkokian"},"content":"        this.type \u003d type;"},{"lineNumber":20,"author":{"gitId":"wongkokian"},"content":"        this.description \u003d description;"},{"lineNumber":21,"author":{"gitId":"wongkokian"},"content":"        this.isDone \u003d isDone \u003d\u003d 1;"},{"lineNumber":22,"author":{"gitId":"wongkokian"},"content":"    }"},{"lineNumber":23,"author":{"gitId":"wongkokian"},"content":""},{"lineNumber":24,"author":{"gitId":"wongkokian"},"content":"    /**"},{"lineNumber":25,"author":{"gitId":"wongkokian"},"content":"     * Creates String to be stored in the data file."},{"lineNumber":26,"author":{"gitId":"wongkokian"},"content":"     *"},{"lineNumber":27,"author":{"gitId":"wongkokian"},"content":"     * @return String in the format to be stored in data file."},{"lineNumber":28,"author":{"gitId":"wongkokian"},"content":"     */"},{"lineNumber":29,"author":{"gitId":"wongkokian"},"content":"    public String getFileString() {"},{"lineNumber":30,"author":{"gitId":"wongkokian"},"content":"        return String.format(\"%c // %d // %s\", this.type, isDone ? 1 : 0, this.description);"},{"lineNumber":31,"author":{"gitId":"wongkokian"},"content":"    }"},{"lineNumber":32,"author":{"gitId":"wongkokian"},"content":""},{"lineNumber":33,"author":{"gitId":"wongkokian"},"content":"    /**"},{"lineNumber":34,"author":{"gitId":"wongkokian"},"content":"     * Creates status icon."},{"lineNumber":35,"author":{"gitId":"wongkokian"},"content":"     *"},{"lineNumber":36,"author":{"gitId":"wongkokian"},"content":"     * @return Status icon of task whether completed or not."},{"lineNumber":37,"author":{"gitId":"wongkokian"},"content":"     */"},{"lineNumber":38,"author":{"gitId":"wongkokian"},"content":"    public String getStatusIcon() {"},{"lineNumber":39,"author":{"gitId":"wongkokian"},"content":"        return (isDone ? \"[X]\" : \"[ ]\");"},{"lineNumber":40,"author":{"gitId":"wongkokian"},"content":"    }"},{"lineNumber":41,"author":{"gitId":"wongkokian"},"content":""},{"lineNumber":42,"author":{"gitId":"wongkokian"},"content":"    /**"},{"lineNumber":43,"author":{"gitId":"wongkokian"},"content":"     * Marks task as done."},{"lineNumber":44,"author":{"gitId":"wongkokian"},"content":"     */"},{"lineNumber":45,"author":{"gitId":"wongkokian"},"content":"    public void markAsDone() {"},{"lineNumber":46,"author":{"gitId":"wongkokian"},"content":"        this.isDone \u003d true;"},{"lineNumber":47,"author":{"gitId":"wongkokian"},"content":"    }"},{"lineNumber":48,"author":{"gitId":"wongkokian"},"content":""},{"lineNumber":49,"author":{"gitId":"wongkokian"},"content":"    public String getDescription() {"},{"lineNumber":50,"author":{"gitId":"wongkokian"},"content":"        return this.description;"},{"lineNumber":51,"author":{"gitId":"wongkokian"},"content":"    }"},{"lineNumber":52,"author":{"gitId":"wongkokian"},"content":""},{"lineNumber":53,"author":{"gitId":"wongkokian"},"content":"    @Override"},{"lineNumber":54,"author":{"gitId":"wongkokian"},"content":"    public String toString() {"},{"lineNumber":55,"author":{"gitId":"wongkokian"},"content":"        return getStatusIcon() + \" \" + description;"},{"lineNumber":56,"author":{"gitId":"wongkokian"},"content":"    }"},{"lineNumber":57,"author":{"gitId":"wongkokian"},"content":"}"}],"authorContributionMap":{"wongkokian":57}},{"path":"src/main/java/duke/task/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"wongkokian"},"content":"package duke.task;"},{"lineNumber":2,"author":{"gitId":"wongkokian"},"content":""},{"lineNumber":3,"author":{"gitId":"wongkokian"},"content":"import duke.exception.DukeException;"},{"lineNumber":4,"author":{"gitId":"wongkokian"},"content":""},{"lineNumber":5,"author":{"gitId":"wongkokian"},"content":"import java.time.LocalDate;"},{"lineNumber":6,"author":{"gitId":"wongkokian"},"content":"import java.time.format.DateTimeParseException;"},{"lineNumber":7,"author":{"gitId":"wongkokian"},"content":"import java.util.ArrayList;"},{"lineNumber":8,"author":{"gitId":"wongkokian"},"content":""},{"lineNumber":9,"author":{"gitId":"wongkokian"},"content":"/**"},{"lineNumber":10,"author":{"gitId":"wongkokian"},"content":" * A TaskList class to represent a list of tasks."},{"lineNumber":11,"author":{"gitId":"wongkokian"},"content":" */"},{"lineNumber":12,"author":{"gitId":"wongkokian"},"content":"public class TaskList {"},{"lineNumber":13,"author":{"gitId":"wongkokian"},"content":"    private final ArrayList\u003cTask\u003e tasks;"},{"lineNumber":14,"author":{"gitId":"wongkokian"},"content":""},{"lineNumber":15,"author":{"gitId":"wongkokian"},"content":"    /**"},{"lineNumber":16,"author":{"gitId":"wongkokian"},"content":"     * Constructs a TaskList."},{"lineNumber":17,"author":{"gitId":"wongkokian"},"content":"     *"},{"lineNumber":18,"author":{"gitId":"wongkokian"},"content":"     * @param tasks The list of tasks."},{"lineNumber":19,"author":{"gitId":"wongkokian"},"content":"     */"},{"lineNumber":20,"author":{"gitId":"wongkokian"},"content":"    public TaskList(ArrayList\u003cTask\u003e tasks) {"},{"lineNumber":21,"author":{"gitId":"wongkokian"},"content":"        this.tasks \u003d tasks;"},{"lineNumber":22,"author":{"gitId":"wongkokian"},"content":"    }"},{"lineNumber":23,"author":{"gitId":"wongkokian"},"content":""},{"lineNumber":24,"author":{"gitId":"wongkokian"},"content":"    /**"},{"lineNumber":25,"author":{"gitId":"wongkokian"},"content":"     * Checks if given String is not Numeric."},{"lineNumber":26,"author":{"gitId":"wongkokian"},"content":"     *"},{"lineNumber":27,"author":{"gitId":"wongkokian"},"content":"     * @param str String to be checked."},{"lineNumber":28,"author":{"gitId":"wongkokian"},"content":"     * @return True if not numeric, False otherwise."},{"lineNumber":29,"author":{"gitId":"wongkokian"},"content":"     */"},{"lineNumber":30,"author":{"gitId":"wongkokian"},"content":"    private static boolean isNotNumeric(String str) {"},{"lineNumber":31,"author":{"gitId":"wongkokian"},"content":"        if (str \u003d\u003d null || str.length() \u003d\u003d 0) {"},{"lineNumber":32,"author":{"gitId":"wongkokian"},"content":"            return true;"},{"lineNumber":33,"author":{"gitId":"wongkokian"},"content":"        }"},{"lineNumber":34,"author":{"gitId":"wongkokian"},"content":"        return !str.chars().allMatch(Character::isDigit);"},{"lineNumber":35,"author":{"gitId":"wongkokian"},"content":"    }"},{"lineNumber":36,"author":{"gitId":"wongkokian"},"content":""},{"lineNumber":37,"author":{"gitId":"wongkokian"},"content":"    /**"},{"lineNumber":38,"author":{"gitId":"wongkokian"},"content":"     * Lists all tasks."},{"lineNumber":39,"author":{"gitId":"wongkokian"},"content":"     */"},{"lineNumber":40,"author":{"gitId":"wongkokian"},"content":"    public void list() {"},{"lineNumber":41,"author":{"gitId":"wongkokian"},"content":"        System.out.println(\"     Here are the tasks in your list:\");"},{"lineNumber":42,"author":{"gitId":"wongkokian"},"content":"        for (int i \u003d 0; i \u003c tasks.size(); i++) {"},{"lineNumber":43,"author":{"gitId":"wongkokian"},"content":"            Task currTask \u003d tasks.get(i);"},{"lineNumber":44,"author":{"gitId":"wongkokian"},"content":"            System.out.println(\"     \" + (i + 1) + \".\" + currTask.toString());"},{"lineNumber":45,"author":{"gitId":"wongkokian"},"content":"        }"},{"lineNumber":46,"author":{"gitId":"wongkokian"},"content":"    }"},{"lineNumber":47,"author":{"gitId":"wongkokian"},"content":""},{"lineNumber":48,"author":{"gitId":"wongkokian"},"content":"    /**"},{"lineNumber":49,"author":{"gitId":"wongkokian"},"content":"     * Completes a task in the TaskList."},{"lineNumber":50,"author":{"gitId":"wongkokian"},"content":"     *"},{"lineNumber":51,"author":{"gitId":"wongkokian"},"content":"     * @param fullCommand Command given by user."},{"lineNumber":52,"author":{"gitId":"wongkokian"},"content":"     * @throws DukeException If user input format is wrong."},{"lineNumber":53,"author":{"gitId":"wongkokian"},"content":"     */"},{"lineNumber":54,"author":{"gitId":"wongkokian"},"content":"    public void done(String fullCommand) throws DukeException {"},{"lineNumber":55,"author":{"gitId":"wongkokian"},"content":"        String[] inputArr \u003d fullCommand.split(\" \");"},{"lineNumber":56,"author":{"gitId":"wongkokian"},"content":"        if (inputArr.length \u003c 3) {"},{"lineNumber":57,"author":{"gitId":"wongkokian"},"content":"            if (inputArr.length \u003d\u003d 1) {"},{"lineNumber":58,"author":{"gitId":"wongkokian"},"content":"                throw new DukeException(\"       OOPS!!! The task number cannot be empty.\");"},{"lineNumber":59,"author":{"gitId":"wongkokian"},"content":"            } else if (isNotNumeric(inputArr[1])) {"},{"lineNumber":60,"author":{"gitId":"wongkokian"},"content":"                throw new DukeException(\"       OOPS!!! The task number must be numeric.\");"},{"lineNumber":61,"author":{"gitId":"wongkokian"},"content":"            } else {"},{"lineNumber":62,"author":{"gitId":"wongkokian"},"content":"                int i \u003d Integer.parseInt(inputArr[1]) - 1;"},{"lineNumber":63,"author":{"gitId":"wongkokian"},"content":"                if (i \u003e (this.tasks.size() - 1) || i \u003c 0) {"},{"lineNumber":64,"author":{"gitId":"wongkokian"},"content":"                    throw new DukeException(\"       OOPS!!! The task number is out of range. \""},{"lineNumber":65,"author":{"gitId":"wongkokian"},"content":"                            + \"Please use \\\"list\\\" to see the list of tasks.\");"},{"lineNumber":66,"author":{"gitId":"wongkokian"},"content":"                } else {"},{"lineNumber":67,"author":{"gitId":"wongkokian"},"content":"                    this.tasks.get(i).markAsDone();"},{"lineNumber":68,"author":{"gitId":"wongkokian"},"content":"                    Task currTask \u003d tasks.get(i);"},{"lineNumber":69,"author":{"gitId":"wongkokian"},"content":"                    System.out.println(\"     Nice! I\u0027ve marked this task as done:\\n\""},{"lineNumber":70,"author":{"gitId":"wongkokian"},"content":"                            + \"       \" + currTask.toString());"},{"lineNumber":71,"author":{"gitId":"wongkokian"},"content":"                }"},{"lineNumber":72,"author":{"gitId":"wongkokian"},"content":"            }"},{"lineNumber":73,"author":{"gitId":"wongkokian"},"content":"        } else {"},{"lineNumber":74,"author":{"gitId":"wongkokian"},"content":"            throw new DukeException(\"       OOPS!!! The format should be \""},{"lineNumber":75,"author":{"gitId":"wongkokian"},"content":"                    + \"\\\"done ##\\\" where ## is the task number.\");"},{"lineNumber":76,"author":{"gitId":"wongkokian"},"content":"        }"},{"lineNumber":77,"author":{"gitId":"wongkokian"},"content":"    }"},{"lineNumber":78,"author":{"gitId":"wongkokian"},"content":""},{"lineNumber":79,"author":{"gitId":"wongkokian"},"content":"    /**"},{"lineNumber":80,"author":{"gitId":"wongkokian"},"content":"     * Deletes a task from the TaskList."},{"lineNumber":81,"author":{"gitId":"wongkokian"},"content":"     *"},{"lineNumber":82,"author":{"gitId":"wongkokian"},"content":"     * @param fullCommand Command given by user."},{"lineNumber":83,"author":{"gitId":"wongkokian"},"content":"     * @throws DukeException If user input format is wrong."},{"lineNumber":84,"author":{"gitId":"wongkokian"},"content":"     */"},{"lineNumber":85,"author":{"gitId":"wongkokian"},"content":"    public void delete(String fullCommand) throws DukeException {"},{"lineNumber":86,"author":{"gitId":"wongkokian"},"content":"        String[] inputArr \u003d fullCommand.split(\" \");"},{"lineNumber":87,"author":{"gitId":"wongkokian"},"content":"        if (inputArr.length \u003c 3) {"},{"lineNumber":88,"author":{"gitId":"wongkokian"},"content":"            if (inputArr.length \u003d\u003d 1) {"},{"lineNumber":89,"author":{"gitId":"wongkokian"},"content":"                throw new DukeException(\"       OOPS!!! The task number cannot be empty.\");"},{"lineNumber":90,"author":{"gitId":"wongkokian"},"content":"            } else if (isNotNumeric(inputArr[1])) {"},{"lineNumber":91,"author":{"gitId":"wongkokian"},"content":"                throw new DukeException(\"       OOPS!!! The task number must be numeric.\");"},{"lineNumber":92,"author":{"gitId":"wongkokian"},"content":"            } else {"},{"lineNumber":93,"author":{"gitId":"wongkokian"},"content":"                int i \u003d Integer.parseInt(inputArr[1]) - 1;"},{"lineNumber":94,"author":{"gitId":"wongkokian"},"content":"                if (i \u003e (this.tasks.size() - 1) || i \u003c 0) {"},{"lineNumber":95,"author":{"gitId":"wongkokian"},"content":"                    throw new DukeException(\"       OOPS!!! The task number is out of range. \""},{"lineNumber":96,"author":{"gitId":"wongkokian"},"content":"                            + \"Please use \\\"list\\\" to see the list of tasks.\");"},{"lineNumber":97,"author":{"gitId":"wongkokian"},"content":"                } else {"},{"lineNumber":98,"author":{"gitId":"wongkokian"},"content":"                    System.out.println(\"     Noted. I\u0027ve removed this task:\\n\""},{"lineNumber":99,"author":{"gitId":"wongkokian"},"content":"                            + \"       \" + this.tasks.remove(i).toString() + \"\\n\""},{"lineNumber":100,"author":{"gitId":"wongkokian"},"content":"                            + \"     Now you have \" + this.tasks.size() + \" tasks in the list.\");"},{"lineNumber":101,"author":{"gitId":"wongkokian"},"content":"                }"},{"lineNumber":102,"author":{"gitId":"wongkokian"},"content":"            }"},{"lineNumber":103,"author":{"gitId":"wongkokian"},"content":"        } else {"},{"lineNumber":104,"author":{"gitId":"wongkokian"},"content":"            throw new DukeException(\"       OOPS!!! The format should be \""},{"lineNumber":105,"author":{"gitId":"wongkokian"},"content":"                    + \"\\\"delete ##\\\" where ## is the task number.\");"},{"lineNumber":106,"author":{"gitId":"wongkokian"},"content":"        }"},{"lineNumber":107,"author":{"gitId":"wongkokian"},"content":"    }"},{"lineNumber":108,"author":{"gitId":"wongkokian"},"content":""},{"lineNumber":109,"author":{"gitId":"wongkokian"},"content":"    /**"},{"lineNumber":110,"author":{"gitId":"wongkokian"},"content":"     * Finds all task in task list that contains a given keyword."},{"lineNumber":111,"author":{"gitId":"wongkokian"},"content":"     *"},{"lineNumber":112,"author":{"gitId":"wongkokian"},"content":"     * @param fullCommand Command given by user."},{"lineNumber":113,"author":{"gitId":"wongkokian"},"content":"     * @throws DukeException If user input format is wrong."},{"lineNumber":114,"author":{"gitId":"wongkokian"},"content":"     */"},{"lineNumber":115,"author":{"gitId":"wongkokian"},"content":"    public void find(String fullCommand) throws DukeException {"},{"lineNumber":116,"author":{"gitId":"wongkokian"},"content":"        String[] inputArr \u003d fullCommand.split(\" \");"},{"lineNumber":117,"author":{"gitId":"wongkokian"},"content":"        if (inputArr.length \u003c 3) {"},{"lineNumber":118,"author":{"gitId":"wongkokian"},"content":"            if (inputArr.length \u003d\u003d 1) {"},{"lineNumber":119,"author":{"gitId":"wongkokian"},"content":"                throw new DukeException(\"       OOPS!!! The keyword cannot be empty.\");"},{"lineNumber":120,"author":{"gitId":"wongkokian"},"content":"            } else {"},{"lineNumber":121,"author":{"gitId":"wongkokian"},"content":"                ArrayList\u003cTask\u003e temp \u003d new ArrayList\u003c\u003e();"},{"lineNumber":122,"author":{"gitId":"wongkokian"},"content":"                for (Task currTask : tasks) {"},{"lineNumber":123,"author":{"gitId":"wongkokian"},"content":"                    String currDescription \u003d currTask.getDescription();"},{"lineNumber":124,"author":{"gitId":"wongkokian"},"content":"                    if (currDescription.contains(inputArr[1])) {"},{"lineNumber":125,"author":{"gitId":"wongkokian"},"content":"                        temp.add(currTask);"},{"lineNumber":126,"author":{"gitId":"wongkokian"},"content":"                    }"},{"lineNumber":127,"author":{"gitId":"wongkokian"},"content":"                }"},{"lineNumber":128,"author":{"gitId":"wongkokian"},"content":"                System.out.println(\"     Here are the matching tasks in your list:\");"},{"lineNumber":129,"author":{"gitId":"wongkokian"},"content":"                for (int j \u003d 0; j \u003c temp.size(); j++) {"},{"lineNumber":130,"author":{"gitId":"wongkokian"},"content":"                    Task tempTask \u003d temp.get(j);"},{"lineNumber":131,"author":{"gitId":"wongkokian"},"content":"                    System.out.println(\"     \" + (j + 1) + \".\" + tempTask.toString());"},{"lineNumber":132,"author":{"gitId":"wongkokian"},"content":"                }"},{"lineNumber":133,"author":{"gitId":"wongkokian"},"content":"            }"},{"lineNumber":134,"author":{"gitId":"wongkokian"},"content":"        } else {"},{"lineNumber":135,"author":{"gitId":"wongkokian"},"content":"            throw new DukeException(\"       OOPS!!! The format should be \""},{"lineNumber":136,"author":{"gitId":"wongkokian"},"content":"                    + \"\\\"find ####\\\" where #### is the keyword to search.\");"},{"lineNumber":137,"author":{"gitId":"wongkokian"},"content":"        }"},{"lineNumber":138,"author":{"gitId":"wongkokian"},"content":"    }"},{"lineNumber":139,"author":{"gitId":"wongkokian"},"content":""},{"lineNumber":140,"author":{"gitId":"wongkokian"},"content":"    /**"},{"lineNumber":141,"author":{"gitId":"wongkokian"},"content":"     * Adds a task to the TaskList."},{"lineNumber":142,"author":{"gitId":"wongkokian"},"content":"     *"},{"lineNumber":143,"author":{"gitId":"wongkokian"},"content":"     * @param type        The type of task."},{"lineNumber":144,"author":{"gitId":"wongkokian"},"content":"     * @param fullCommand Command given by user."},{"lineNumber":145,"author":{"gitId":"wongkokian"},"content":"     * @throws DukeException If user input format is wrong."},{"lineNumber":146,"author":{"gitId":"wongkokian"},"content":"     */"},{"lineNumber":147,"author":{"gitId":"wongkokian"},"content":"    public void addTask(String type, String fullCommand) throws DukeException {"},{"lineNumber":148,"author":{"gitId":"wongkokian"},"content":"        String[] inputArr \u003d fullCommand.split(\" \");"},{"lineNumber":149,"author":{"gitId":"wongkokian"},"content":"        switch (type) {"},{"lineNumber":150,"author":{"gitId":"wongkokian"},"content":"        case \"todo\":"},{"lineNumber":151,"author":{"gitId":"wongkokian"},"content":"            if (inputArr.length \u003d\u003d 1) {"},{"lineNumber":152,"author":{"gitId":"wongkokian"},"content":"                throw new DukeException(\"       OOPS!!! The description of a todo cannot be empty.\");"},{"lineNumber":153,"author":{"gitId":"wongkokian"},"content":"            } else {"},{"lineNumber":154,"author":{"gitId":"wongkokian"},"content":"                this.tasks.add(new Todo(0, fullCommand.substring(5)));"},{"lineNumber":155,"author":{"gitId":"wongkokian"},"content":"            }"},{"lineNumber":156,"author":{"gitId":"wongkokian"},"content":"            break;"},{"lineNumber":157,"author":{"gitId":"wongkokian"},"content":"        case \"deadline\":"},{"lineNumber":158,"author":{"gitId":"wongkokian"},"content":"            if (inputArr.length \u003d\u003d 1) {"},{"lineNumber":159,"author":{"gitId":"wongkokian"},"content":"                throw new DukeException(\"       OOPS!!! The description and due date \""},{"lineNumber":160,"author":{"gitId":"wongkokian"},"content":"                        + \"of a deadline cannot be empty.\");"},{"lineNumber":161,"author":{"gitId":"wongkokian"},"content":"            } else {"},{"lineNumber":162,"author":{"gitId":"wongkokian"},"content":"                String[] details \u003d fullCommand.substring(9).split(\" /by \");"},{"lineNumber":163,"author":{"gitId":"wongkokian"},"content":"                if (details.length \u003d\u003d 1) {"},{"lineNumber":164,"author":{"gitId":"wongkokian"},"content":"                    throw new DukeException(\"       OOPS!!! The due date of a deadline \""},{"lineNumber":165,"author":{"gitId":"wongkokian"},"content":"                            + \"cannot be empty.\");"},{"lineNumber":166,"author":{"gitId":"wongkokian"},"content":"                } else {"},{"lineNumber":167,"author":{"gitId":"wongkokian"},"content":"                    try {"},{"lineNumber":168,"author":{"gitId":"wongkokian"},"content":"                        this.tasks.add(new Deadline(0, details[0], LocalDate.parse(details[1])));"},{"lineNumber":169,"author":{"gitId":"wongkokian"},"content":"                    } catch (DateTimeParseException ex) {"},{"lineNumber":170,"author":{"gitId":"wongkokian"},"content":"                        throw new DukeException(\"       OOPS!!! The date has to be in the format yyyy-mm-dd.\");"},{"lineNumber":171,"author":{"gitId":"wongkokian"},"content":"                    }"},{"lineNumber":172,"author":{"gitId":"wongkokian"},"content":"                }"},{"lineNumber":173,"author":{"gitId":"wongkokian"},"content":"            }"},{"lineNumber":174,"author":{"gitId":"wongkokian"},"content":"            break;"},{"lineNumber":175,"author":{"gitId":"wongkokian"},"content":"        case \"event\":"},{"lineNumber":176,"author":{"gitId":"wongkokian"},"content":"            if (inputArr.length \u003d\u003d 1) {"},{"lineNumber":177,"author":{"gitId":"wongkokian"},"content":"                throw new DukeException(\"       OOPS!!! The description and time frame \""},{"lineNumber":178,"author":{"gitId":"wongkokian"},"content":"                        + \"of an event cannot be empty.\");"},{"lineNumber":179,"author":{"gitId":"wongkokian"},"content":"            } else {"},{"lineNumber":180,"author":{"gitId":"wongkokian"},"content":"                String[] details \u003d fullCommand.substring(6).split(\" /at \");"},{"lineNumber":181,"author":{"gitId":"wongkokian"},"content":"                if (details.length \u003d\u003d 1) {"},{"lineNumber":182,"author":{"gitId":"wongkokian"},"content":"                    throw new DukeException(\"       OOPS!!! The time frame of an event \""},{"lineNumber":183,"author":{"gitId":"wongkokian"},"content":"                            + \"cannot be empty.\");"},{"lineNumber":184,"author":{"gitId":"wongkokian"},"content":"                } else {"},{"lineNumber":185,"author":{"gitId":"wongkokian"},"content":"                    try {"},{"lineNumber":186,"author":{"gitId":"wongkokian"},"content":"                        this.tasks.add(new Event(0, details[0], LocalDate.parse(details[1])));"},{"lineNumber":187,"author":{"gitId":"wongkokian"},"content":"                    } catch (DateTimeParseException ex) {"},{"lineNumber":188,"author":{"gitId":"wongkokian"},"content":"                        throw new DukeException(\"       OOPS!!! The date has to be in the format yyyy-mm-dd.\");"},{"lineNumber":189,"author":{"gitId":"wongkokian"},"content":"                    }"},{"lineNumber":190,"author":{"gitId":"wongkokian"},"content":"                }"},{"lineNumber":191,"author":{"gitId":"wongkokian"},"content":"            }"},{"lineNumber":192,"author":{"gitId":"wongkokian"},"content":"            break;"},{"lineNumber":193,"author":{"gitId":"wongkokian"},"content":"        }"},{"lineNumber":194,"author":{"gitId":"wongkokian"},"content":"        System.out.println(\"     Got it. I\u0027ve added this task:\\n\""},{"lineNumber":195,"author":{"gitId":"wongkokian"},"content":"                + \"       \" + this.tasks.get(this.tasks.size() - 1).toString() + \"\\n\""},{"lineNumber":196,"author":{"gitId":"wongkokian"},"content":"                + \"     Now you have \" + this.tasks.size() + \" tasks in the list.\");"},{"lineNumber":197,"author":{"gitId":"wongkokian"},"content":"    }"},{"lineNumber":198,"author":{"gitId":"wongkokian"},"content":""},{"lineNumber":199,"author":{"gitId":"wongkokian"},"content":"    public ArrayList\u003cTask\u003e getTaskList() {"},{"lineNumber":200,"author":{"gitId":"wongkokian"},"content":"        return this.tasks;"},{"lineNumber":201,"author":{"gitId":"wongkokian"},"content":"    }"},{"lineNumber":202,"author":{"gitId":"wongkokian"},"content":"}"}],"authorContributionMap":{"wongkokian":202}},{"path":"src/main/java/duke/task/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"wongkokian"},"content":"package duke.task;"},{"lineNumber":2,"author":{"gitId":"wongkokian"},"content":""},{"lineNumber":3,"author":{"gitId":"wongkokian"},"content":"/**"},{"lineNumber":4,"author":{"gitId":"wongkokian"},"content":" * A Todo class which represents a todo task."},{"lineNumber":5,"author":{"gitId":"wongkokian"},"content":" */"},{"lineNumber":6,"author":{"gitId":"wongkokian"},"content":"public class Todo extends Task {"},{"lineNumber":7,"author":{"gitId":"wongkokian"},"content":"    /**"},{"lineNumber":8,"author":{"gitId":"wongkokian"},"content":"     * Constructs Todo."},{"lineNumber":9,"author":{"gitId":"wongkokian"},"content":"     *"},{"lineNumber":10,"author":{"gitId":"wongkokian"},"content":"     * @param isDone      Determines if task is completed."},{"lineNumber":11,"author":{"gitId":"wongkokian"},"content":"     * @param description Task description."},{"lineNumber":12,"author":{"gitId":"wongkokian"},"content":"     */"},{"lineNumber":13,"author":{"gitId":"wongkokian"},"content":"    public Todo(int isDone, String description) {"},{"lineNumber":14,"author":{"gitId":"wongkokian"},"content":"        super(\u0027T\u0027, isDone, description);"},{"lineNumber":15,"author":{"gitId":"wongkokian"},"content":"    }"},{"lineNumber":16,"author":{"gitId":"wongkokian"},"content":""},{"lineNumber":17,"author":{"gitId":"wongkokian"},"content":"    @Override"},{"lineNumber":18,"author":{"gitId":"wongkokian"},"content":"    public String toString() {"},{"lineNumber":19,"author":{"gitId":"wongkokian"},"content":"        return \"[T]\" + super.toString();"},{"lineNumber":20,"author":{"gitId":"wongkokian"},"content":"    }"},{"lineNumber":21,"author":{"gitId":"wongkokian"},"content":"}"}],"authorContributionMap":{"wongkokian":21}},{"path":"src/main/java/duke/ui/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"wongkokian"},"content":"package duke.ui;"},{"lineNumber":2,"author":{"gitId":"wongkokian"},"content":""},{"lineNumber":3,"author":{"gitId":"wongkokian"},"content":"import java.io.InputStream;"},{"lineNumber":4,"author":{"gitId":"wongkokian"},"content":"import java.io.PrintStream;"},{"lineNumber":5,"author":{"gitId":"wongkokian"},"content":"import java.util.Scanner;"},{"lineNumber":6,"author":{"gitId":"wongkokian"},"content":""},{"lineNumber":7,"author":{"gitId":"wongkokian"},"content":"/**"},{"lineNumber":8,"author":{"gitId":"wongkokian"},"content":" * A class to handle user interface."},{"lineNumber":9,"author":{"gitId":"wongkokian"},"content":" */"},{"lineNumber":10,"author":{"gitId":"wongkokian"},"content":"public class Ui {"},{"lineNumber":11,"author":{"gitId":"wongkokian"},"content":"    private final Scanner in;"},{"lineNumber":12,"author":{"gitId":"wongkokian"},"content":"    private final PrintStream out;"},{"lineNumber":13,"author":{"gitId":"wongkokian"},"content":""},{"lineNumber":14,"author":{"gitId":"wongkokian"},"content":"    /**"},{"lineNumber":15,"author":{"gitId":"wongkokian"},"content":"     * Constructs Ui."},{"lineNumber":16,"author":{"gitId":"wongkokian"},"content":"     */"},{"lineNumber":17,"author":{"gitId":"wongkokian"},"content":"    public Ui() {"},{"lineNumber":18,"author":{"gitId":"wongkokian"},"content":"        this(System.in, System.out);"},{"lineNumber":19,"author":{"gitId":"wongkokian"},"content":"    }"},{"lineNumber":20,"author":{"gitId":"wongkokian"},"content":""},{"lineNumber":21,"author":{"gitId":"wongkokian"},"content":"    /**"},{"lineNumber":22,"author":{"gitId":"wongkokian"},"content":"     * Constructs Ui with InputStream and PrintStream."},{"lineNumber":23,"author":{"gitId":"wongkokian"},"content":"     *"},{"lineNumber":24,"author":{"gitId":"wongkokian"},"content":"     * @param in  The input stream of the user interface."},{"lineNumber":25,"author":{"gitId":"wongkokian"},"content":"     * @param out The print stream of the user interface."},{"lineNumber":26,"author":{"gitId":"wongkokian"},"content":"     */"},{"lineNumber":27,"author":{"gitId":"wongkokian"},"content":"    public Ui(InputStream in, PrintStream out) {"},{"lineNumber":28,"author":{"gitId":"wongkokian"},"content":"        this.in \u003d new Scanner(in);"},{"lineNumber":29,"author":{"gitId":"wongkokian"},"content":"        this.out \u003d out;"},{"lineNumber":30,"author":{"gitId":"wongkokian"},"content":"    }"},{"lineNumber":31,"author":{"gitId":"wongkokian"},"content":""},{"lineNumber":32,"author":{"gitId":"wongkokian"},"content":"    /**"},{"lineNumber":33,"author":{"gitId":"wongkokian"},"content":"     * Displays the Duke logo and greets the user."},{"lineNumber":34,"author":{"gitId":"wongkokian"},"content":"     */"},{"lineNumber":35,"author":{"gitId":"wongkokian"},"content":"    public void showWelcome() {"},{"lineNumber":36,"author":{"gitId":"wongkokian"},"content":"        String logo \u003d \" ____        _        \\n\""},{"lineNumber":37,"author":{"gitId":"wongkokian"},"content":"                + \"|  _ \\\\ _   _| | _____ \\n\""},{"lineNumber":38,"author":{"gitId":"wongkokian"},"content":"                + \"| | | | | | | |/ / _ \\\\\\n\""},{"lineNumber":39,"author":{"gitId":"wongkokian"},"content":"                + \"| |_| | |_| |   \u003c  __/\\n\""},{"lineNumber":40,"author":{"gitId":"wongkokian"},"content":"                + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\";"},{"lineNumber":41,"author":{"gitId":"wongkokian"},"content":"        this.out.println(\"Hello from\\n\" + logo);"},{"lineNumber":42,"author":{"gitId":"wongkokian"},"content":""},{"lineNumber":43,"author":{"gitId":"wongkokian"},"content":"        String greet \u003d \"    ____________________________________________________________\\n\""},{"lineNumber":44,"author":{"gitId":"wongkokian"},"content":"                + \"     Hello! I\u0027m Duke\\n\""},{"lineNumber":45,"author":{"gitId":"wongkokian"},"content":"                + \"     What can I do for you?\\n\""},{"lineNumber":46,"author":{"gitId":"wongkokian"},"content":"                + \"    ____________________________________________________________\\n\";"},{"lineNumber":47,"author":{"gitId":"wongkokian"},"content":"        this.out.println(greet);"},{"lineNumber":48,"author":{"gitId":"wongkokian"},"content":"    }"},{"lineNumber":49,"author":{"gitId":"wongkokian"},"content":""},{"lineNumber":50,"author":{"gitId":"wongkokian"},"content":"    /**"},{"lineNumber":51,"author":{"gitId":"wongkokian"},"content":"     * Prints a line."},{"lineNumber":52,"author":{"gitId":"wongkokian"},"content":"     */"},{"lineNumber":53,"author":{"gitId":"wongkokian"},"content":"    public void showLine() {"},{"lineNumber":54,"author":{"gitId":"wongkokian"},"content":"        this.out.println(\"    ____________________________________________________________\");"},{"lineNumber":55,"author":{"gitId":"wongkokian"},"content":"    }"},{"lineNumber":56,"author":{"gitId":"wongkokian"},"content":""},{"lineNumber":57,"author":{"gitId":"wongkokian"},"content":"    /**"},{"lineNumber":58,"author":{"gitId":"wongkokian"},"content":"     * Reads inputs from user."},{"lineNumber":59,"author":{"gitId":"wongkokian"},"content":"     *"},{"lineNumber":60,"author":{"gitId":"wongkokian"},"content":"     * @return The user input."},{"lineNumber":61,"author":{"gitId":"wongkokian"},"content":"     */"},{"lineNumber":62,"author":{"gitId":"wongkokian"},"content":"    public String readCommand() {"},{"lineNumber":63,"author":{"gitId":"wongkokian"},"content":"        return this.in.nextLine();"},{"lineNumber":64,"author":{"gitId":"wongkokian"},"content":"    }"},{"lineNumber":65,"author":{"gitId":"wongkokian"},"content":""},{"lineNumber":66,"author":{"gitId":"wongkokian"},"content":"    /**"},{"lineNumber":67,"author":{"gitId":"wongkokian"},"content":"     * Prints error message when there is a load error."},{"lineNumber":68,"author":{"gitId":"wongkokian"},"content":"     */"},{"lineNumber":69,"author":{"gitId":"wongkokian"},"content":"    public void showLoadingError() {"},{"lineNumber":70,"author":{"gitId":"wongkokian"},"content":"        this.out.println(\"     No previous data found.\");"},{"lineNumber":71,"author":{"gitId":"wongkokian"},"content":"    }"},{"lineNumber":72,"author":{"gitId":"wongkokian"},"content":""},{"lineNumber":73,"author":{"gitId":"wongkokian"},"content":"    /**"},{"lineNumber":74,"author":{"gitId":"wongkokian"},"content":"     * Prints given error message."},{"lineNumber":75,"author":{"gitId":"wongkokian"},"content":"     *"},{"lineNumber":76,"author":{"gitId":"wongkokian"},"content":"     * @param message The error message to be printed."},{"lineNumber":77,"author":{"gitId":"wongkokian"},"content":"     */"},{"lineNumber":78,"author":{"gitId":"wongkokian"},"content":"    public void showError(String message) {"},{"lineNumber":79,"author":{"gitId":"wongkokian"},"content":"        this.out.println(message);"},{"lineNumber":80,"author":{"gitId":"wongkokian"},"content":"    }"},{"lineNumber":81,"author":{"gitId":"wongkokian"},"content":"}"}],"authorContributionMap":{"wongkokian":81}},{"path":"src/test/java/duke/task/DeadlineTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"wongkokian"},"content":"package duke.task;"},{"lineNumber":2,"author":{"gitId":"wongkokian"},"content":""},{"lineNumber":3,"author":{"gitId":"wongkokian"},"content":"import org.junit.jupiter.api.Test;"},{"lineNumber":4,"author":{"gitId":"wongkokian"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;"},{"lineNumber":5,"author":{"gitId":"wongkokian"},"content":"import java.time.LocalDate;"},{"lineNumber":6,"author":{"gitId":"wongkokian"},"content":""},{"lineNumber":7,"author":{"gitId":"wongkokian"},"content":"public class DeadlineTest {"},{"lineNumber":8,"author":{"gitId":"wongkokian"},"content":"    @Test"},{"lineNumber":9,"author":{"gitId":"wongkokian"},"content":"    public void markAsDoneTest() {"},{"lineNumber":10,"author":{"gitId":"wongkokian"},"content":"        Deadline temp \u003d new Deadline(0, \"submit assignment\","},{"lineNumber":11,"author":{"gitId":"wongkokian"},"content":"                LocalDate.parse(\"2020-10-15\"));"},{"lineNumber":12,"author":{"gitId":"wongkokian"},"content":"        temp.markAsDone();"},{"lineNumber":13,"author":{"gitId":"wongkokian"},"content":"        assertEquals(\"[D][X] submit assignment (by: Oct 15 2020)\", temp.toString());"},{"lineNumber":14,"author":{"gitId":"wongkokian"},"content":"    }"},{"lineNumber":15,"author":{"gitId":"wongkokian"},"content":"}"}],"authorContributionMap":{"wongkokian":15}},{"path":"src/test/java/duke/task/EventTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"wongkokian"},"content":"package duke.task;"},{"lineNumber":2,"author":{"gitId":"wongkokian"},"content":""},{"lineNumber":3,"author":{"gitId":"wongkokian"},"content":"import org.junit.jupiter.api.Test;"},{"lineNumber":4,"author":{"gitId":"wongkokian"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;"},{"lineNumber":5,"author":{"gitId":"wongkokian"},"content":"import java.time.LocalDate;"},{"lineNumber":6,"author":{"gitId":"wongkokian"},"content":""},{"lineNumber":7,"author":{"gitId":"wongkokian"},"content":"public class EventTest {"},{"lineNumber":8,"author":{"gitId":"wongkokian"},"content":"    @Test"},{"lineNumber":9,"author":{"gitId":"wongkokian"},"content":"    public void getFileStringTest() {"},{"lineNumber":10,"author":{"gitId":"wongkokian"},"content":"        assertEquals(\"E // 0 // meeting // 2020-12-15\","},{"lineNumber":11,"author":{"gitId":"wongkokian"},"content":"                new Event(0, \"meeting\", LocalDate.parse(\"2020-12-15\")).getFileString());"},{"lineNumber":12,"author":{"gitId":"wongkokian"},"content":"    }"},{"lineNumber":13,"author":{"gitId":"wongkokian"},"content":"}"}],"authorContributionMap":{"wongkokian":13}},{"path":"src/test/java/duke/task/TodoTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"wongkokian"},"content":"package duke.task;"},{"lineNumber":2,"author":{"gitId":"wongkokian"},"content":""},{"lineNumber":3,"author":{"gitId":"wongkokian"},"content":"import org.junit.jupiter.api.Test;"},{"lineNumber":4,"author":{"gitId":"wongkokian"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;"},{"lineNumber":5,"author":{"gitId":"wongkokian"},"content":""},{"lineNumber":6,"author":{"gitId":"wongkokian"},"content":"public class TodoTest {"},{"lineNumber":7,"author":{"gitId":"wongkokian"},"content":"    @Test"},{"lineNumber":8,"author":{"gitId":"wongkokian"},"content":"    public void toStringTest() {"},{"lineNumber":9,"author":{"gitId":"wongkokian"},"content":"        assertEquals(\"[T][X] return book\","},{"lineNumber":10,"author":{"gitId":"wongkokian"},"content":"                new Todo(1, \"return book\").toString());"},{"lineNumber":11,"author":{"gitId":"wongkokian"},"content":"    }"},{"lineNumber":12,"author":{"gitId":"wongkokian"},"content":"}"}],"authorContributionMap":{"wongkokian":12}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"wongkokian"},"content":"todo read book"},{"lineNumber":2,"author":{"gitId":"wongkokian"},"content":"deadline return book /by June 6th"},{"lineNumber":3,"author":{"gitId":"wongkokian"},"content":"event project meeting /at Aug 6th 2-4pm"},{"lineNumber":4,"author":{"gitId":"wongkokian"},"content":"todo join sports club"},{"lineNumber":5,"author":{"gitId":"wongkokian"},"content":"todo borrow book"},{"lineNumber":6,"author":{"gitId":"wongkokian"},"content":"done 1"},{"lineNumber":7,"author":{"gitId":"wongkokian"},"content":"done 4"},{"lineNumber":8,"author":{"gitId":"wongkokian"},"content":"list"},{"lineNumber":9,"author":{"gitId":"wongkokian"},"content":"deadline return book /by Sunday"},{"lineNumber":10,"author":{"gitId":"wongkokian"},"content":"event project meeting /at Mon 2-4pm"},{"lineNumber":11,"author":{"gitId":"wongkokian"},"content":"bye"}],"authorContributionMap":{"wongkokian":11}}]
