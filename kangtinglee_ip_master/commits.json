{"authorDailyContributionsMap":{"kangtinglee":[{"date":"2021-01-16","commitResults":[{"hash":"42b1b6b98df63456d218bb350a48e9b6c98dd621","messageTitle":"Add basic functionality","messageBody":"Duke class: add printWithBorders() method\n\nThis method takes a string as input and prints it within borders before\nand after the string.\n\nDuke class: add while-loop within main() to provide basic functionality\n\nThe while-loop receives inputs from the user and echos it back.\nIf the string \"bye\" is given, the program terminates with a goodbye message.\n","tags":["Level-1"],"fileTypesAndContributionMap":{"java":{"insertions":23,"deletions":6}}},{"hash":"279fb5146f4b276602193fbd8378f7100ed257ed","messageTitle":"modified Duke.java to provide functionality for Level-2","messageBody":"Implemented a String array (named `records`) to contain user entries.\nSince it can be assumed that there will be at most 100 entries, a fixed size\narray initialised to 100 was implemented.\n\nModified the while-loop in Duke.main() to add entries to `records`.\n\nModified the while-loop in Duke.main() to list out entries in `records`.\n","tags":["Level-2"],"fileTypesAndContributionMap":{"java":{"insertions":16,"deletions":2}}},{"hash":"60be9f77d5f4e9f20993c667e87c92aa41a7bf9a","messageTitle":"add Task.java and TaskStatus.java","messageBody":"Encapsulation of a task as an object (containing its description and\nstatus).\n\nTaskStatus provides enumeration of completion status of tasks\n(currently, only either pending or completed).\n","fileTypesAndContributionMap":{"java":{"insertions":24,"deletions":0}}},{"hash":"f5177eef8d1edb7cc23ffb4328ce47d04e55fad8","messageTitle":"modify Duke.java to keep track of task completion status","messageBody":"Rename `records` to `tasks` so as to make naming more intuitive.\n\nChange tasks from String[] to Task[] as tasks are now stored as Task\nobjects instead of String.\n\nModify program loop to enable listing of tasks with completion status\nand also ability to mark tasks as complete.\n","tags":["Level-3"],"fileTypesAndContributionMap":{"java":{"insertions":15,"deletions":6}}}]},{"date":"2021-01-17","commitResults":[{"hash":"b3fabb79884bf617ee1c6831c76450b2ba16783f","messageTitle":"add Deadline.java, Todo.java, Event.java and TaskType.java","messageBody":"Add TaskType.java to provide enumerations for task types.\n\nAdd Deadline, Todo and Even classes which are sub-classes of Task to support different for the three types of entries.\n","fileTypesAndContributionMap":{"java":{"insertions":52,"deletions":0}}},{"hash":"50629017ea9c08ab9c89226be312071e57ca66f4","messageTitle":"modify Duke.java and Task.java","messageBody":"Modify Duke.java to reduce repeated print statements by streamlining\nthe message generation step to create a new StringBuilder object before\nthe program-loop and then a single call to print out the message at the\nend.\n\nModify Task.java to add method to parse user input in order to\ndetermine the type of Task the user has entered and process them in their own\ntask-specific manner.\n","tags":["Level-4"],"fileTypesAndContributionMap":{"java":{"insertions":42,"deletions":14}}},{"hash":"9bff4b811da30368e34d0f07dccd03799fb86ff8","messageTitle":"modify Duke.java","messageBody":"remove redundant whitespace at EOL\n","fileTypesAndContributionMap":{"java":{"insertions":1,"deletions":1}}},{"hash":"5fadadafaa59c18b693f1e4418b89497e6a6f2ce","messageTitle":"modify Duke.java","messageBody":"removed trailing whitespace at EOL\n","fileTypesAndContributionMap":{"java":{"insertions":1,"deletions":1}}},{"hash":"4c7995c8344ece2bce0771a4d84dd131643ac4f8","messageTitle":"modify text-ui-test files","messageBody":"Modify input.txt and EXPECTED.TXT to have updated test\ncases in line with recent changes to the programme.\n","fileTypesAndContributionMap":{"txt":{"insertions":7,"deletions":0}}},{"hash":"90344b494252e5c613e43a9afdd2ca6bcbeaa94f","messageTitle":"modified Duke.java and EXPECTED.TXT","messageBody":"modified output of \"list\" command to also include the proper headers\n","tags":["A-TextUiTesting"],"fileTypesAndContributionMap":{"java":{"insertions":1,"deletions":0}}},{"hash":"9bdc559654f17078a86ee7bb1994e772a6c2bca8","messageTitle":"add DukeException.java","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":5,"deletions":0}}},{"hash":"8b0b640c9648d7a35efa61e052955d386cb7b418","messageTitle":"modified Task and sub-classes to throw Exceptions","messageBody":"Modified Task.java, Deadline.java, Task.java and Todo.java to throw\nDukeExceptions when parsing errors are encountered\n","fileTypesAndContributionMap":{"java":{"insertions":23,"deletions":6}}},{"hash":"1ec97e3eaaeb4df3547da6557c79a41385827236","messageTitle":"modify Duke.java to handle exceptions","messageBody":"Modify Duke.java to catch DukeExceptions thrown by methods in the\nprogram-loop when errors/incorrect inputs are encountered. Also modify program loop\nto throw DukeExceptions on unknown commands.\n","tags":["Level-5"],"fileTypesAndContributionMap":{"java":{"insertions":36,"deletions":28}}},{"hash":"d99cda1cbdca5f160145a4619384303bbbc30f38","messageTitle":"modify Duke.java","messageBody":"Modify Duke.java to use an ArrayList to store tasks instead of Task[] array.\n","fileTypesAndContributionMap":{"java":{"insertions":9,"deletions":8}}},{"hash":"978953d772025429fa7c1ebf000869b249dece26","messageTitle":"modify Duke.java to support deletion of tasks","messageBody":"Modify Duke.java program-loop to support \"delete\" command\n","fileTypesAndContributionMap":{"java":{"insertions":10,"deletions":0}}},{"hash":"48d30e4b4cf263d189262215f205e4234dfdb3b7","messageTitle":"modify Duke.java to display correct exception message","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":1,"deletions":1}}},{"hash":"8586892d6ec83f0ef95779fa73eb87a1de158aee","messageTitle":"modify input.txt and EXPECTED.txt","messageBody":"Modify test cases to support newly added functionality\nsuch as exceptions and deletions.\n","tags":["Level-6"],"fileTypesAndContributionMap":{"txt":{"insertions":5,"deletions":0}}}]},{"date":"2021-01-20","commitResults":[{"hash":"22fc7858216b56ca4a12a0010f2cfcdaedc4d17e","messageTitle":"modify Task.java to use switch instead of if-else block","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":26,"deletions":13}}},{"hash":"72ebaa712840c5da060ffa243cdda2c434de4431","messageTitle":"modify Duke.java to throw exceptions on invalid options","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":7,"deletions":1}}},{"hash":"200596bab2cae9b813c0e616c7ca5dfcb174c853","messageTitle":"modify test cases to test new additions","messageBody":"modify test cases to test for proper behaviour when a \"done\" or\n\"delete\" command is provided with a number that is invalid.\n","tags":["A-Enums"],"fileTypesAndContributionMap":{"txt":{"insertions":1,"deletions":0}}}]},{"date":"2021-01-25","commitResults":[{"hash":"f92da36e84bc054e2b57dab29d9fe07efb7556df","messageTitle":"Remove completed TODOs","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":0,"deletions":2}}},{"hash":"96890c90bcb7ea39274e9a5536b4f6a0eb031bac","messageTitle":"Add ability to save and reload tasks to /from file","messageBody":"Modify Duke, Task, Todo, Event and Deadline to save tasks to file and reload on program startup.\n\nPreviously, tasks were lost at the end of the program.\n\nTasks are now saved at the end of the program (\"Bye\" command) and\nreloaded at the start of the program. To facilitate this, saveTasks and\nloadTasks method were implemented in Duke class to save and load tasks. Task\n(and sub-classes) also modified to now provide a storageEntry method to\noutput the string formatted entry to be written to file.\n","fileTypesAndContributionMap":{"java":{"insertions":126,"deletions":5}}},{"hash":"893caea0342ee4ba323e4c080a528db6c1674c08","messageTitle":"Update runtest.sh","messageBody":"Modify runtest.sh to delete data/tasks.txt so as to prevent reloading\nof tasks from previous tasks from interfering with the next tests.\n","tags":["Level-7"],"fileTypesAndContributionMap":{"sh":{"insertions":5,"deletions":0}}},{"hash":"09624da19c6866fabaeb97a1e15a4db7e0ead881","messageTitle":"Modify Duke.java to update file on every command","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":1,"deletions":1}}}]},{"date":"2021-01-26","commitResults":[{"hash":"752dc708a4873ae7acd4c26df1ce8f839c0fc9fb","messageTitle":"Modify Deadline.java to treat parse datetime objects","messageBody":"Deadline treated date or date and time as strings.\n\nModified Deadline class to store as LocalDate and LocalTime objects instead.\n","tags":["Level-8"],"fileTypesAndContributionMap":{"java":{"insertions":59,"deletions":7}}},{"hash":"c04525f607dc1862190dfa521e58cae572ef76f1","messageTitle":"Modify test cases","messageBody":"Modify test cases to match the new Deadline handling of datetime.\n","fileTypesAndContributionMap":{"txt":{"insertions":1,"deletions":1}}},{"hash":"7a93ca1a555f780390ed8edf44d8c2bbf29179d2","messageTitle":"Modify test cases","messageBody":"Update test cases to test newly added functionality with regards to\nDeadline.java behavior when dealing with datetime objects.\n","fileTypesAndContributionMap":{"txt":{"insertions":3,"deletions":1}}},{"hash":"79d4c0c139bbc9c6f76b36b088f9241f5ea0adad","messageTitle":"Add Parser, Storage, TaskList and Ui classes","messageBody":"Previously, the I/O, user-facing UI code, task list, etc was handled inside the Duke class.\n\nThis is a violation of OOP and these different functionalities can be\nextracted to respective classes for easier maintenance and clarity.\n\nAll methods to do with user commands have now been extracted to UI. A new\nTaskList class has been added to support methods such as get, size, remove, etc.\nStorage class handles the IO read/write of tasks to and from disk. Finally, Parser\nprocesses the user commands and dispatches the appropriate commands.\n","tags":["A-MoreOOP"],"fileTypesAndContributionMap":{"java":{"insertions":221,"deletions":108}}},{"hash":"ce8545883983a2bc28ff466539eaecbb8b3e915f","messageTitle":"Reorganize code into packages","messageBody":"","tags":["A-Packages"],"fileTypesAndContributionMap":{"java":{"insertions":57,"deletions":15}}},{"hash":"e971101e3d9c989b00b5ee890bdd871e14bc218f","messageTitle":"add Unit tests and minor variable name changes","messageBody":"add Unit tests for Todo and Deadline\nmodify Event.java to amend \"timing\" to \"location\"\n","tags":["A-Jar","A-JUnit"],"fileTypesAndContributionMap":{"java":{"insertions":99,"deletions":7}}},{"hash":"5d744b97b2c7bac6b4d29827b38813c76617838d","messageTitle":"add Javadoc for public classes and methods","messageBody":"","tags":["A-JavaDoc"],"fileTypesAndContributionMap":{"java":{"insertions":211,"deletions":19}}},{"hash":"766509e7ea0ed2ea80963be6fb5746eccf88b07c","messageTitle":"modify .java files in src/ to meet coding standards","messageBody":"","tags":["A-CodingStandard"],"fileTypesAndContributionMap":{"java":{"insertions":111,"deletions":106}}},{"hash":"a40c52b34f5f1f988d6399f541eaf2e2f397ab8b","messageTitle":"add \"find\" command support","messageBody":"There was previously no way for users to query the task list which is\nnot efficient if the user has a lot of tasks.\n\nSupport for a new command, \"find\", has now been added which displays\nonly tasks that meet the criteria.\n","tags":["Level-9"],"fileTypesAndContributionMap":{"java":{"insertions":18,"deletions":0}}},{"hash":"29cb6d7448a5276392ab75488d6dd26513ac251c","messageTitle":"refactor code to maintain code standards after merging","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":168,"deletions":135},"sh":{"insertions":2,"deletions":2}}},{"hash":"a0913866080a01cd70765e906ab348e604a1df3c","messageTitle":"add Javadoc to enum classes","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":174,"deletions":135},"sh":{"insertions":2,"deletions":2}}},{"hash":"11ce644a36349dc5bd5bd749a053da037283918e","messageTitle":"modify Parser to remove need for Storage obj","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":3,"deletions":8}}},{"hash":"f002ae1ba4675bd5eb08287af80292c70d01bf18","messageTitle":"modify Duke.java to remove duplicate method","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":0,"deletions":4}}}]},{"date":"2021-02-10","commitResults":[{"hash":"3a4dbb968456800f8b21426df2ee924a20636b44","messageTitle":"add JavaFX gui functionality","messageBody":"","tags":["Level-10"],"fileTypesAndContributionMap":{"gradle":{"insertions":17,"deletions":1},"java":{"insertions":243,"deletions":83}}},{"hash":"12b8b916af1481465e419ff67fb93e3af706c97d","messageTitle":"modify Main to allow named params","messageBody":"Specify the path to the file where tasks are stored with --data\u003d\u003dfile\n","tags":["A-Varargs"],"fileTypesAndContributionMap":{"java":{"insertions":2,"deletions":2}}},{"hash":"098745860f1365732258d2d01607cfac33dce51e","messageTitle":"add assert statements","messageBody":"","tags":["A-Assertions"],"fileTypesAndContributionMap":{"java":{"insertions":3,"deletions":2}}},{"hash":"5564628d923dd1e5e359bc35995164245d21a0f8","messageTitle":"refactor code base for readability","messageBody":"Under the CLI model, Ui class contained a scanner which was needed to read in\nuser input.\n\nIn current GUI implementation, Ui class methods can be static because they are\nfunctionally wrapper functions to decorate/format the strings accordingly.\n","tags":["A-CodeQuality"],"fileTypesAndContributionMap":{"java":{"insertions":14,"deletions":29}}},{"hash":"26dea4336b7db746f909b4c85606624f510f82d0","messageTitle":"modify Parser for friendlier syntax","messageBody":"Modify Parser to utilize Regex to determine the kind of command given\n","tags":["BCD-Extension"],"fileTypesAndContributionMap":{"gradle":{"insertions":5,"deletions":0},"java":{"insertions":55,"deletions":30}}}]},{"date":"2021-02-16","commitResults":[{"hash":"e52de32bffb1b68d0281508991ef2218392acb2b","messageTitle":"modify GUI for for more aesthetic value","messageBody":"modify fxml files to make stylistic changes to GUi such as rounded borders,\ngradients, resizing, etc.\n\nadd Response.java to encapsulate a response from Duke to be displayed by the\nGUI which contains information about whether or not the previous command triggered\nan error.\n","tags":["A-BetterGUI"],"fileTypesAndContributionMap":{"java":{"insertions":125,"deletions":52}}},{"hash":"8a3d73608a6e90001ddc95ce62e4c81766392c77","messageTitle":"add clear command","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":14,"deletions":2}}},{"hash":"2aeb69510905d1ce4db711a0b17e67ee4d3b9fa1","messageTitle":"add Command.java and add aesthetic changes","messageBody":"Previously, the execution of a given user command was handled by the\nParser class.\n\nHowever, this violates SLAP and also results in `Parser#parseCommand`\nbeing too deeply nested and untidy.\n\nAdd Command (and subclasses) class to handle the execution so that\n`Parser#parseCommand` will only have 1 level of abstraction and move the execution of\ncommands into Command class (and subclasses).\n\nModify DialogBox.java and corresponding .fxml files to create two\nseparate .fxml files for DukeDialog and UserDialog for more control over\nstyling.\n","fileTypesAndContributionMap":{"txt":{"insertions":3,"deletions":0},"java":{"insertions":334,"deletions":148}}},{"hash":"a535ce411e01c2a05ba93ea7fa3b328ef95e6e7a","messageTitle":"update docs/README.md user guide","messageBody":"","tags":["A-UserGuide"],"fileTypesAndContributionMap":{"md":{"insertions":61,"deletions":9}}},{"hash":"b39645e856b195ce4c03b52fac947b8218d4892f","messageTitle":"update user guide with delete command","messageBody":"","fileTypesAndContributionMap":{"md":{"insertions":9,"deletions":0}}},{"hash":"4fcb422f7c4f82dba1678624393881fef4a03dba","messageTitle":"update tasks.txt to match items in user guide","messageBody":"","tags":["A-Release"],"fileTypesAndContributionMap":{"txt":{"insertions":2,"deletions":1}}}]}]},"authorFileTypeContributionMap":{"kangtinglee":{"java":1323,"md":70,"fxml":73,"sh":7,"bat":0,"gradle":22,"txt":19}},"authorContributionVariance":{"kangtinglee":91992.19},"authorDisplayNameMap":{"kangtinglee":"CS2103T-W15-3 LEE ..RCUS"}}
