[{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027checkstyle\u0027"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027"},{"lineNumber":6,"author":{"gitId":"JulietTeoh"},"content":"    id \u0027org.openjfx.javafxplugin\u0027 version \u00270.0.9\u0027"},{"lineNumber":7,"author":{"gitId":"-"},"content":"}"},{"lineNumber":8,"author":{"gitId":"-"},"content":""},{"lineNumber":9,"author":{"gitId":"-"},"content":"repositories {"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    mavenCentral()"},{"lineNumber":11,"author":{"gitId":"-"},"content":"}"},{"lineNumber":12,"author":{"gitId":"-"},"content":""},{"lineNumber":13,"author":{"gitId":"-"},"content":"dependencies {"},{"lineNumber":14,"author":{"gitId":"JulietTeoh"},"content":"    String javaFxVersion \u003d \u002711\u0027"},{"lineNumber":15,"author":{"gitId":"JulietTeoh"},"content":""},{"lineNumber":16,"author":{"gitId":"JulietTeoh"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027"},{"lineNumber":17,"author":{"gitId":"JulietTeoh"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"},{"lineNumber":18,"author":{"gitId":"JulietTeoh"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"},{"lineNumber":19,"author":{"gitId":"JulietTeoh"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027"},{"lineNumber":20,"author":{"gitId":"JulietTeoh"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"},{"lineNumber":21,"author":{"gitId":"JulietTeoh"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"},{"lineNumber":22,"author":{"gitId":"JulietTeoh"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027"},{"lineNumber":23,"author":{"gitId":"JulietTeoh"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"},{"lineNumber":24,"author":{"gitId":"JulietTeoh"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"},{"lineNumber":25,"author":{"gitId":"JulietTeoh"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027"},{"lineNumber":26,"author":{"gitId":"JulietTeoh"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"},{"lineNumber":27,"author":{"gitId":"JulietTeoh"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"},{"lineNumber":28,"author":{"gitId":"JulietTeoh"},"content":""},{"lineNumber":29,"author":{"gitId":"JulietTeoh"},"content":"    implementation \u0027com.googlecode.json-simple:json-simple:1.1.1\u0027"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.5.0\u0027"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.5.0\u0027"},{"lineNumber":32,"author":{"gitId":"-"},"content":"}"},{"lineNumber":33,"author":{"gitId":"-"},"content":""},{"lineNumber":34,"author":{"gitId":"-"},"content":"test {"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    useJUnitPlatform()"},{"lineNumber":36,"author":{"gitId":"-"},"content":""},{"lineNumber":37,"author":{"gitId":"-"},"content":"    testLogging {"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\""},{"lineNumber":39,"author":{"gitId":"-"},"content":""},{"lineNumber":40,"author":{"gitId":"-"},"content":"        showExceptions true"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\""},{"lineNumber":42,"author":{"gitId":"-"},"content":"        showCauses true"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        showStackTraces true"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":46,"author":{"gitId":"-"},"content":"}"},{"lineNumber":47,"author":{"gitId":"-"},"content":""},{"lineNumber":48,"author":{"gitId":"-"},"content":"application {"},{"lineNumber":49,"author":{"gitId":"JulietTeoh"},"content":"    mainClassName \u003d \"Launcher\""},{"lineNumber":50,"author":{"gitId":"-"},"content":"}"},{"lineNumber":51,"author":{"gitId":"-"},"content":""},{"lineNumber":52,"author":{"gitId":"-"},"content":""},{"lineNumber":53,"author":{"gitId":"-"},"content":"checkstyle {"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    toolVersion \u003d \u00278.29\u0027"},{"lineNumber":55,"author":{"gitId":"-"},"content":"}"},{"lineNumber":56,"author":{"gitId":"-"},"content":""},{"lineNumber":57,"author":{"gitId":"-"},"content":"run{"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in"},{"lineNumber":59,"author":{"gitId":"-"},"content":"}"},{"lineNumber":60,"author":{"gitId":"JulietTeoh"},"content":""},{"lineNumber":61,"author":{"gitId":"JulietTeoh"},"content":"shadowJar {"},{"lineNumber":62,"author":{"gitId":"JulietTeoh"},"content":"    archiveBaseName \u003d \"duke\""},{"lineNumber":63,"author":{"gitId":"JulietTeoh"},"content":"    archiveClassifier \u003d null"},{"lineNumber":64,"author":{"gitId":"JulietTeoh"},"content":"}"},{"lineNumber":65,"author":{"gitId":"JulietTeoh"},"content":""},{"lineNumber":66,"author":{"gitId":"JulietTeoh"},"content":"checkstyle {"},{"lineNumber":67,"author":{"gitId":"JulietTeoh"},"content":"    toolVersion \u003d \u00278.29\u0027"},{"lineNumber":68,"author":{"gitId":"JulietTeoh"},"content":"}"}],"authorContributionMap":{"-":41,"JulietTeoh":27}},{"path":"data/dukedata.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"JulietTeoh"},"content":"T|0|take a nap"},{"lineNumber":2,"author":{"gitId":"JulietTeoh"},"content":"E|0|party|home"},{"lineNumber":3,"author":{"gitId":"JulietTeoh"},"content":"D|0|CS2101 tutorial 5|2021-04-04"}],"authorContributionMap":{"JulietTeoh":3}},{"path":"docs/README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"# User Guide"},{"lineNumber":2,"author":{"gitId":"JulietTeoh"},"content":"## Duke Task Manager"},{"lineNumber":3,"author":{"gitId":"JulietTeoh"},"content":"Duke Task Manager is a chatbot that can help you manage your tasks."},{"lineNumber":4,"author":{"gitId":"-"},"content":""},{"lineNumber":5,"author":{"gitId":"JulietTeoh"},"content":"\u003cp align\u003d\"center\"\u003e"},{"lineNumber":6,"author":{"gitId":"JulietTeoh"},"content":"  \u003cimg src\u003d\"https://github.com/JulietTeoh/ip/blob/master/docs/Ui.png?raw\u003dtrue\"\u003e"},{"lineNumber":7,"author":{"gitId":"JulietTeoh"},"content":"\u003c/p\u003e"},{"lineNumber":8,"author":{"gitId":"-"},"content":""},{"lineNumber":9,"author":{"gitId":"-"},"content":"## Features"},{"lineNumber":10,"author":{"gitId":"JulietTeoh"},"content":"* add todo task"},{"lineNumber":11,"author":{"gitId":"JulietTeoh"},"content":"* add event task"},{"lineNumber":12,"author":{"gitId":"JulietTeoh"},"content":"* add deadline task"},{"lineNumber":13,"author":{"gitId":"JulietTeoh"},"content":"* list all tasks"},{"lineNumber":14,"author":{"gitId":"JulietTeoh"},"content":"* delete task from list"},{"lineNumber":15,"author":{"gitId":"JulietTeoh"},"content":"* mark task as done"},{"lineNumber":16,"author":{"gitId":"JulietTeoh"},"content":"* find tasks related to given search string"},{"lineNumber":17,"author":{"gitId":"JulietTeoh"},"content":"* update description of specific task"},{"lineNumber":18,"author":{"gitId":"JulietTeoh"},"content":"* end current chatbot session and save tasks to memory"},{"lineNumber":19,"author":{"gitId":"-"},"content":""},{"lineNumber":20,"author":{"gitId":"JulietTeoh"},"content":"### Create and Add a todo task to Duke\u0027s task list : `todo`"},{"lineNumber":21,"author":{"gitId":"JulietTeoh"},"content":"### Usage"},{"lineNumber":22,"author":{"gitId":"JulietTeoh"},"content":"* Description: adds a todo task to duke\u0027s list"},{"lineNumber":23,"author":{"gitId":"JulietTeoh"},"content":"* Format: `todo GENERAL_DESCRIPTION_OF_TASK`"},{"lineNumber":24,"author":{"gitId":"JulietTeoh"},"content":"* Example: `todo take an afternoon nap`"},{"lineNumber":25,"author":{"gitId":"-"},"content":""},{"lineNumber":26,"author":{"gitId":"JulietTeoh"},"content":"### Create and Add an event task to Duke\u0027s task list : `event`"},{"lineNumber":27,"author":{"gitId":"JulietTeoh"},"content":"Add a ToDo tasks to list : `todo`"},{"lineNumber":28,"author":{"gitId":"JulietTeoh"},"content":"### Usage"},{"lineNumber":29,"author":{"gitId":"JulietTeoh"},"content":"* Description: adds a event task to duke\u0027s list"},{"lineNumber":30,"author":{"gitId":"JulietTeoh"},"content":"* Format: `todo GENERAL_DESCRIPTION_OF_TASK /at LOCATION_OF_EVENT`"},{"lineNumber":31,"author":{"gitId":"JulietTeoh"},"content":"* Example: `event party /at John\u0027s house`"},{"lineNumber":32,"author":{"gitId":"-"},"content":""},{"lineNumber":33,"author":{"gitId":"JulietTeoh"},"content":"### Create and Add an deadline task to Duke\u0027s task list : `deadline`"},{"lineNumber":34,"author":{"gitId":"JulietTeoh"},"content":"Add a ToDo tasks to list : `deadline`"},{"lineNumber":35,"author":{"gitId":"JulietTeoh"},"content":"### Usage"},{"lineNumber":36,"author":{"gitId":"JulietTeoh"},"content":"* Description: adds a deadline task to duke\u0027s list"},{"lineNumber":37,"author":{"gitId":"JulietTeoh"},"content":"* Format: `todo GENERAL_DESCRIPTION_OF_TASK /by YYYY-MM-DD` or `todo GENERAL_DESCRIPTION_OF_TASK /by DD-MM-YYYY`"},{"lineNumber":38,"author":{"gitId":"JulietTeoh"},"content":"* Example: `deadline CS2106 tutorial 5 /by 2021-02-16`"},{"lineNumber":39,"author":{"gitId":"-"},"content":""},{"lineNumber":40,"author":{"gitId":"JulietTeoh"},"content":"### View all tasks in Duke\u0027s task list : `list`"},{"lineNumber":41,"author":{"gitId":"JulietTeoh"},"content":"### Usage"},{"lineNumber":42,"author":{"gitId":"JulietTeoh"},"content":"* Description: view all the tasks the user has added to duke\u0027s task list"},{"lineNumber":43,"author":{"gitId":"JulietTeoh"},"content":"* Format: `list`"},{"lineNumber":44,"author":{"gitId":"JulietTeoh"},"content":"* Example: `list`"},{"lineNumber":45,"author":{"gitId":"-"},"content":""},{"lineNumber":46,"author":{"gitId":"JulietTeoh"},"content":"### Delete task : `delete`"},{"lineNumber":47,"author":{"gitId":"JulietTeoh"},"content":"### Usage"},{"lineNumber":48,"author":{"gitId":"JulietTeoh"},"content":"* Description: delete a task from duke\u0027s task list"},{"lineNumber":49,"author":{"gitId":"JulietTeoh"},"content":"* Format: `delete INDEX_OF_TASK`"},{"lineNumber":50,"author":{"gitId":"JulietTeoh"},"content":"* Example: `delete 3`"},{"lineNumber":51,"author":{"gitId":"-"},"content":""},{"lineNumber":52,"author":{"gitId":"JulietTeoh"},"content":"### Mark task as done : `done`"},{"lineNumber":53,"author":{"gitId":"JulietTeoh"},"content":"### Usage"},{"lineNumber":54,"author":{"gitId":"JulietTeoh"},"content":"* Description: done a task from duke\u0027s task list as done"},{"lineNumber":55,"author":{"gitId":"JulietTeoh"},"content":"* Format: `done INDEX_OF_TASK`"},{"lineNumber":56,"author":{"gitId":"JulietTeoh"},"content":"* Example: `done 3`"},{"lineNumber":57,"author":{"gitId":"-"},"content":""},{"lineNumber":58,"author":{"gitId":"JulietTeoh"},"content":"### Find task : `find`"},{"lineNumber":59,"author":{"gitId":"JulietTeoh"},"content":"### Usage"},{"lineNumber":60,"author":{"gitId":"JulietTeoh"},"content":"* Description: Finds all the tasks whose general description matches the given string"},{"lineNumber":61,"author":{"gitId":"JulietTeoh"},"content":"* Format: `find SEARCH_STRING`"},{"lineNumber":62,"author":{"gitId":"JulietTeoh"},"content":"* Example: `find book`"},{"lineNumber":63,"author":{"gitId":"-"},"content":"  "},{"lineNumber":64,"author":{"gitId":"JulietTeoh"},"content":"### Update descriptions of task : `update`"},{"lineNumber":65,"author":{"gitId":"JulietTeoh"},"content":"### Usage"},{"lineNumber":66,"author":{"gitId":"JulietTeoh"},"content":"* Description: Update the description of a specific task"},{"lineNumber":67,"author":{"gitId":"JulietTeoh"},"content":"* Format: `update INDEX_OF_TASK [/de GENERAL_DESCRIPTION_OF_TASK] [/by YYYY-MM-DD or DD-MM-YYYY] [/at LOCATION_OF_EVENT]`"},{"lineNumber":68,"author":{"gitId":"JulietTeoh"},"content":"* Example:"},{"lineNumber":69,"author":{"gitId":"JulietTeoh"},"content":"  * `update 1 /de buy groceries /at NTUC`"},{"lineNumber":70,"author":{"gitId":"JulietTeoh"},"content":"  * `update 3 /de return biology book /by 20-02-2021`"},{"lineNumber":71,"author":{"gitId":"-"},"content":""},{"lineNumber":72,"author":{"gitId":"JulietTeoh"},"content":"### End duke session : `bye`"},{"lineNumber":73,"author":{"gitId":"JulietTeoh"},"content":"### Usage"},{"lineNumber":74,"author":{"gitId":"JulietTeoh"},"content":"* Description: Ends current duke session and save the current tasks to disk"},{"lineNumber":75,"author":{"gitId":"JulietTeoh"},"content":"* Format: `bye`"},{"lineNumber":76,"author":{"gitId":"JulietTeoh"},"content":"* Example: `bye`"}],"authorContributionMap":{"-":13,"JulietTeoh":63}},{"path":"src/main/java/DialogBox.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"JulietTeoh"},"content":""},{"lineNumber":2,"author":{"gitId":"JulietTeoh"},"content":"import java.io.IOException;"},{"lineNumber":3,"author":{"gitId":"JulietTeoh"},"content":"import java.util.Collections;"},{"lineNumber":4,"author":{"gitId":"JulietTeoh"},"content":""},{"lineNumber":5,"author":{"gitId":"JulietTeoh"},"content":"import javafx.collections.FXCollections;"},{"lineNumber":6,"author":{"gitId":"JulietTeoh"},"content":"import javafx.collections.ObservableList;"},{"lineNumber":7,"author":{"gitId":"JulietTeoh"},"content":"import javafx.fxml.FXML;"},{"lineNumber":8,"author":{"gitId":"JulietTeoh"},"content":"import javafx.fxml.FXMLLoader;"},{"lineNumber":9,"author":{"gitId":"JulietTeoh"},"content":"import javafx.geometry.Pos;"},{"lineNumber":10,"author":{"gitId":"JulietTeoh"},"content":"import javafx.scene.Node;"},{"lineNumber":11,"author":{"gitId":"JulietTeoh"},"content":"import javafx.scene.control.Label;"},{"lineNumber":12,"author":{"gitId":"JulietTeoh"},"content":"import javafx.scene.image.Image;"},{"lineNumber":13,"author":{"gitId":"JulietTeoh"},"content":"import javafx.scene.image.ImageView;"},{"lineNumber":14,"author":{"gitId":"JulietTeoh"},"content":"import javafx.scene.layout.HBox;"},{"lineNumber":15,"author":{"gitId":"JulietTeoh"},"content":""},{"lineNumber":16,"author":{"gitId":"JulietTeoh"},"content":"/**"},{"lineNumber":17,"author":{"gitId":"JulietTeoh"},"content":" * An example of a custom control using FXML."},{"lineNumber":18,"author":{"gitId":"JulietTeoh"},"content":" * This control represents a dialog box consisting of an ImageView to represent the speaker\u0027s face and a label"},{"lineNumber":19,"author":{"gitId":"JulietTeoh"},"content":" * containing text from the speaker."},{"lineNumber":20,"author":{"gitId":"JulietTeoh"},"content":" */"},{"lineNumber":21,"author":{"gitId":"JulietTeoh"},"content":""},{"lineNumber":22,"author":{"gitId":"JulietTeoh"},"content":"//@@author JulietTeoh"},{"lineNumber":23,"author":{"gitId":"JulietTeoh"},"content":"//Reused from https://se-education.org/guides/tutorials/javaFxPart4.html with minor modifications."},{"lineNumber":24,"author":{"gitId":"JulietTeoh"},"content":"public class DialogBox extends HBox {"},{"lineNumber":25,"author":{"gitId":"JulietTeoh"},"content":"    @FXML"},{"lineNumber":26,"author":{"gitId":"JulietTeoh"},"content":"    private Label dialog;"},{"lineNumber":27,"author":{"gitId":"JulietTeoh"},"content":"    @FXML"},{"lineNumber":28,"author":{"gitId":"JulietTeoh"},"content":"    private ImageView displayPicture;"},{"lineNumber":29,"author":{"gitId":"JulietTeoh"},"content":""},{"lineNumber":30,"author":{"gitId":"JulietTeoh"},"content":"    private DialogBox(String text, Image img) {"},{"lineNumber":31,"author":{"gitId":"JulietTeoh"},"content":"        try {"},{"lineNumber":32,"author":{"gitId":"JulietTeoh"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(\"/view/DialogBox.fxml\"));"},{"lineNumber":33,"author":{"gitId":"JulietTeoh"},"content":"            fxmlLoader.setController(this);"},{"lineNumber":34,"author":{"gitId":"JulietTeoh"},"content":"            fxmlLoader.setRoot(this);"},{"lineNumber":35,"author":{"gitId":"JulietTeoh"},"content":"            fxmlLoader.load();"},{"lineNumber":36,"author":{"gitId":"JulietTeoh"},"content":"        } catch (IOException e) {"},{"lineNumber":37,"author":{"gitId":"JulietTeoh"},"content":"            e.printStackTrace();"},{"lineNumber":38,"author":{"gitId":"JulietTeoh"},"content":"        }"},{"lineNumber":39,"author":{"gitId":"JulietTeoh"},"content":""},{"lineNumber":40,"author":{"gitId":"JulietTeoh"},"content":"        dialog.setText(text);"},{"lineNumber":41,"author":{"gitId":"JulietTeoh"},"content":"        displayPicture.setImage(img);"},{"lineNumber":42,"author":{"gitId":"JulietTeoh"},"content":"    }"},{"lineNumber":43,"author":{"gitId":"JulietTeoh"},"content":""},{"lineNumber":44,"author":{"gitId":"JulietTeoh"},"content":"    /**"},{"lineNumber":45,"author":{"gitId":"JulietTeoh"},"content":"     * Flips the dialog box such that the ImageView is on the left and text on the right."},{"lineNumber":46,"author":{"gitId":"JulietTeoh"},"content":"     */"},{"lineNumber":47,"author":{"gitId":"JulietTeoh"},"content":"    private void flip() {"},{"lineNumber":48,"author":{"gitId":"JulietTeoh"},"content":"        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());"},{"lineNumber":49,"author":{"gitId":"JulietTeoh"},"content":"        Collections.reverse(tmp);"},{"lineNumber":50,"author":{"gitId":"JulietTeoh"},"content":"        getChildren().setAll(tmp);"},{"lineNumber":51,"author":{"gitId":"JulietTeoh"},"content":"        setAlignment(Pos.TOP_LEFT);"},{"lineNumber":52,"author":{"gitId":"JulietTeoh"},"content":"    }"},{"lineNumber":53,"author":{"gitId":"JulietTeoh"},"content":""},{"lineNumber":54,"author":{"gitId":"JulietTeoh"},"content":"    public static DialogBox getUserDialog(String text, Image img) {"},{"lineNumber":55,"author":{"gitId":"JulietTeoh"},"content":"        return new DialogBox(text, img);"},{"lineNumber":56,"author":{"gitId":"JulietTeoh"},"content":"    }"},{"lineNumber":57,"author":{"gitId":"JulietTeoh"},"content":""},{"lineNumber":58,"author":{"gitId":"JulietTeoh"},"content":"    public static DialogBox getDukeDialog(String text, Image img) {"},{"lineNumber":59,"author":{"gitId":"JulietTeoh"},"content":"        var db \u003d new DialogBox(text, img);"},{"lineNumber":60,"author":{"gitId":"JulietTeoh"},"content":"        db.flip();"},{"lineNumber":61,"author":{"gitId":"JulietTeoh"},"content":"        return db;"},{"lineNumber":62,"author":{"gitId":"JulietTeoh"},"content":"    }"},{"lineNumber":63,"author":{"gitId":"JulietTeoh"},"content":"}"}],"authorContributionMap":{"JulietTeoh":63}},{"path":"src/main/java/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"JulietTeoh"},"content":"import duke.command.Command;"},{"lineNumber":2,"author":{"gitId":"JulietTeoh"},"content":"import duke.exceptions.DukeException;"},{"lineNumber":3,"author":{"gitId":"JulietTeoh"},"content":"import duke.maincomponents.Parser;"},{"lineNumber":4,"author":{"gitId":"JulietTeoh"},"content":"import duke.maincomponents.Storage;"},{"lineNumber":5,"author":{"gitId":"JulietTeoh"},"content":"import duke.maincomponents.TaskList;"},{"lineNumber":6,"author":{"gitId":"JulietTeoh"},"content":"import duke.maincomponents.Ui;"},{"lineNumber":7,"author":{"gitId":"JulietTeoh"},"content":""},{"lineNumber":8,"author":{"gitId":"JulietTeoh"},"content":"/**"},{"lineNumber":9,"author":{"gitId":"JulietTeoh"},"content":" * Main class for Duke that handles the execution of its functions"},{"lineNumber":10,"author":{"gitId":"JulietTeoh"},"content":" */"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class Duke {"},{"lineNumber":12,"author":{"gitId":"JulietTeoh"},"content":"    private static final String FILE_NAME \u003d \"dukedata.txt\";"},{"lineNumber":13,"author":{"gitId":"JulietTeoh"},"content":"    private static final String FOLDER_NAME \u003d \"data\";"},{"lineNumber":14,"author":{"gitId":"JulietTeoh"},"content":"    private static final String RELATIVE_PATH \u003d FOLDER_NAME + \"/\" + FILE_NAME;"},{"lineNumber":15,"author":{"gitId":"JulietTeoh"},"content":"    private boolean isTerminated;"},{"lineNumber":16,"author":{"gitId":"JulietTeoh"},"content":"    private Storage dukeStorage;"},{"lineNumber":17,"author":{"gitId":"JulietTeoh"},"content":"    private TaskList dukeTaskList;"},{"lineNumber":18,"author":{"gitId":"JulietTeoh"},"content":"    private Ui dukeUi;"},{"lineNumber":19,"author":{"gitId":"JulietTeoh"},"content":"    private Parser stringParser;"},{"lineNumber":20,"author":{"gitId":"JulietTeoh"},"content":"    private boolean isCurrentError;"},{"lineNumber":21,"author":{"gitId":"JulietTeoh"},"content":""},{"lineNumber":22,"author":{"gitId":"JulietTeoh"},"content":"    /**"},{"lineNumber":23,"author":{"gitId":"JulietTeoh"},"content":"     * Default Constructor for Duke"},{"lineNumber":24,"author":{"gitId":"JulietTeoh"},"content":"     *"},{"lineNumber":25,"author":{"gitId":"JulietTeoh"},"content":"     * @param filePath path where the datafile storing the session is"},{"lineNumber":26,"author":{"gitId":"JulietTeoh"},"content":"     * @param folderName path of the folder storing the datafile"},{"lineNumber":27,"author":{"gitId":"JulietTeoh"},"content":"     */"},{"lineNumber":28,"author":{"gitId":"JulietTeoh"},"content":"    public Duke(String filePath, String folderName) {"},{"lineNumber":29,"author":{"gitId":"JulietTeoh"},"content":"        dukeUi \u003d new Ui();"},{"lineNumber":30,"author":{"gitId":"JulietTeoh"},"content":"        stringParser \u003d new Parser();"},{"lineNumber":31,"author":{"gitId":"JulietTeoh"},"content":"        isCurrentError \u003d false;"},{"lineNumber":32,"author":{"gitId":"JulietTeoh"},"content":"        try {"},{"lineNumber":33,"author":{"gitId":"JulietTeoh"},"content":"            dukeStorage \u003d new Storage(filePath, folderName);"},{"lineNumber":34,"author":{"gitId":"JulietTeoh"},"content":"            dukeTaskList \u003d new TaskList(dukeStorage.load());"},{"lineNumber":35,"author":{"gitId":"JulietTeoh"},"content":"        } catch (DukeException e) {"},{"lineNumber":36,"author":{"gitId":"JulietTeoh"},"content":"            dukeUi.showErrorMsg(e.getMessage());"},{"lineNumber":37,"author":{"gitId":"JulietTeoh"},"content":"            dukeTaskList \u003d new TaskList();"},{"lineNumber":38,"author":{"gitId":"JulietTeoh"},"content":"        }"},{"lineNumber":39,"author":{"gitId":"JulietTeoh"},"content":"        System.out.println();"},{"lineNumber":40,"author":{"gitId":"JulietTeoh"},"content":"    }"},{"lineNumber":41,"author":{"gitId":"JulietTeoh"},"content":""},{"lineNumber":42,"author":{"gitId":"JulietTeoh"},"content":"    /**"},{"lineNumber":43,"author":{"gitId":"JulietTeoh"},"content":"     * Runs the main loop of Duke program"},{"lineNumber":44,"author":{"gitId":"JulietTeoh"},"content":"     */"},{"lineNumber":45,"author":{"gitId":"JulietTeoh"},"content":"    public void run() {"},{"lineNumber":46,"author":{"gitId":"JulietTeoh"},"content":"        dukeUi.showWelcomeLine();"},{"lineNumber":47,"author":{"gitId":"JulietTeoh"},"content":""},{"lineNumber":48,"author":{"gitId":"JulietTeoh"},"content":"        String userInput \u003d dukeUi.readCommand();"},{"lineNumber":49,"author":{"gitId":"JulietTeoh"},"content":"        boolean isExit \u003d stringParser.checkIfExit(userInput);"},{"lineNumber":50,"author":{"gitId":"JulietTeoh"},"content":""},{"lineNumber":51,"author":{"gitId":"JulietTeoh"},"content":"        while (!isExit) {"},{"lineNumber":52,"author":{"gitId":"JulietTeoh"},"content":"            isCurrentError \u003d false;"},{"lineNumber":53,"author":{"gitId":"JulietTeoh"},"content":"            try {"},{"lineNumber":54,"author":{"gitId":"JulietTeoh"},"content":"                Command c \u003d stringParser.parse(userInput);"},{"lineNumber":55,"author":{"gitId":"JulietTeoh"},"content":"                c.execute(dukeTaskList, dukeUi, dukeStorage);"},{"lineNumber":56,"author":{"gitId":"JulietTeoh"},"content":"            } catch (DukeException e) {"},{"lineNumber":57,"author":{"gitId":"JulietTeoh"},"content":"                dukeUi.showErrorMsg(e.getMessage());"},{"lineNumber":58,"author":{"gitId":"JulietTeoh"},"content":"                isCurrentError \u003d true;"},{"lineNumber":59,"author":{"gitId":"JulietTeoh"},"content":"            }"},{"lineNumber":60,"author":{"gitId":"JulietTeoh"},"content":"            userInput \u003d dukeUi.readCommand();"},{"lineNumber":61,"author":{"gitId":"JulietTeoh"},"content":"            isExit \u003d stringParser.checkIfExit(userInput);"},{"lineNumber":62,"author":{"gitId":"JulietTeoh"},"content":""},{"lineNumber":63,"author":{"gitId":"JulietTeoh"},"content":"            try {"},{"lineNumber":64,"author":{"gitId":"JulietTeoh"},"content":"                dukeStorage.saveToFile(dukeTaskList.getCurrentTaskList());"},{"lineNumber":65,"author":{"gitId":"JulietTeoh"},"content":"            } catch (DukeException e) {"},{"lineNumber":66,"author":{"gitId":"JulietTeoh"},"content":"                dukeUi.showErrorMsg(e.getMessage());"},{"lineNumber":67,"author":{"gitId":"JulietTeoh"},"content":"            }"},{"lineNumber":68,"author":{"gitId":"JulietTeoh"},"content":"        }"},{"lineNumber":69,"author":{"gitId":"JulietTeoh"},"content":"        dukeUi.showGoodbyeLine();"},{"lineNumber":70,"author":{"gitId":"JulietTeoh"},"content":"    }"},{"lineNumber":71,"author":{"gitId":"JulietTeoh"},"content":""},{"lineNumber":72,"author":{"gitId":"JulietTeoh"},"content":"    /**"},{"lineNumber":73,"author":{"gitId":"JulietTeoh"},"content":"     * Get Duke\u0027s Response for the GUI"},{"lineNumber":74,"author":{"gitId":"JulietTeoh"},"content":"     *"},{"lineNumber":75,"author":{"gitId":"JulietTeoh"},"content":"     * @param userInput String of the user\u0027s input"},{"lineNumber":76,"author":{"gitId":"JulietTeoh"},"content":"     * @return String of duke\u0027s output"},{"lineNumber":77,"author":{"gitId":"JulietTeoh"},"content":"     */"},{"lineNumber":78,"author":{"gitId":"JulietTeoh"},"content":"    public String getResponse(String userInput) {"},{"lineNumber":79,"author":{"gitId":"JulietTeoh"},"content":"        String toReturnString;"},{"lineNumber":80,"author":{"gitId":"JulietTeoh"},"content":"        boolean isExit \u003d stringParser.checkIfExit(userInput);"},{"lineNumber":81,"author":{"gitId":"JulietTeoh"},"content":"        isCurrentError \u003d false;"},{"lineNumber":82,"author":{"gitId":"JulietTeoh"},"content":"        if (!isExit) {"},{"lineNumber":83,"author":{"gitId":"JulietTeoh"},"content":"            try {"},{"lineNumber":84,"author":{"gitId":"JulietTeoh"},"content":"                Command c \u003d stringParser.parse(userInput);"},{"lineNumber":85,"author":{"gitId":"JulietTeoh"},"content":"                toReturnString \u003d c.executeGui(dukeTaskList, dukeUi, dukeStorage);"},{"lineNumber":86,"author":{"gitId":"JulietTeoh"},"content":"            } catch (DukeException e) {"},{"lineNumber":87,"author":{"gitId":"JulietTeoh"},"content":"                toReturnString \u003d dukeUi.returnErrorMsg(e.getMessage());"},{"lineNumber":88,"author":{"gitId":"JulietTeoh"},"content":"                isCurrentError \u003d true;"},{"lineNumber":89,"author":{"gitId":"JulietTeoh"},"content":"            }"},{"lineNumber":90,"author":{"gitId":"JulietTeoh"},"content":"            try {"},{"lineNumber":91,"author":{"gitId":"JulietTeoh"},"content":"                dukeStorage.saveToFile(dukeTaskList.getCurrentTaskList());"},{"lineNumber":92,"author":{"gitId":"JulietTeoh"},"content":"            } catch (DukeException e) {"},{"lineNumber":93,"author":{"gitId":"JulietTeoh"},"content":"                toReturnString \u003d dukeUi.returnErrorMsg(e.getMessage());"},{"lineNumber":94,"author":{"gitId":"JulietTeoh"},"content":"                isCurrentError \u003d true;"},{"lineNumber":95,"author":{"gitId":"JulietTeoh"},"content":"            }"},{"lineNumber":96,"author":{"gitId":"JulietTeoh"},"content":"            return toReturnString;"},{"lineNumber":97,"author":{"gitId":"JulietTeoh"},"content":"        } else {"},{"lineNumber":98,"author":{"gitId":"JulietTeoh"},"content":"            isTerminated \u003d true;"},{"lineNumber":99,"author":{"gitId":"JulietTeoh"},"content":"            return getGoodbyeLine();"},{"lineNumber":100,"author":{"gitId":"JulietTeoh"},"content":"        }"},{"lineNumber":101,"author":{"gitId":"JulietTeoh"},"content":"    }"},{"lineNumber":102,"author":{"gitId":"JulietTeoh"},"content":""},{"lineNumber":103,"author":{"gitId":"JulietTeoh"},"content":"    public boolean getIsCurrentError() {"},{"lineNumber":104,"author":{"gitId":"JulietTeoh"},"content":"        return isCurrentError;"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":106,"author":{"gitId":"JulietTeoh"},"content":""},{"lineNumber":107,"author":{"gitId":"JulietTeoh"},"content":"    public String getGoodbyeLine() {"},{"lineNumber":108,"author":{"gitId":"JulietTeoh"},"content":"        return dukeUi.returnGoodbyeLine();"},{"lineNumber":109,"author":{"gitId":"JulietTeoh"},"content":"    }"},{"lineNumber":110,"author":{"gitId":"JulietTeoh"},"content":""},{"lineNumber":111,"author":{"gitId":"JulietTeoh"},"content":"    public boolean getIsTerminated() {"},{"lineNumber":112,"author":{"gitId":"JulietTeoh"},"content":"        return isTerminated;"},{"lineNumber":113,"author":{"gitId":"JulietTeoh"},"content":"    }"},{"lineNumber":114,"author":{"gitId":"JulietTeoh"},"content":""},{"lineNumber":115,"author":{"gitId":"-"},"content":"    public static void main(String[] args) {"},{"lineNumber":116,"author":{"gitId":"JulietTeoh"},"content":"        new Duke(RELATIVE_PATH, FOLDER_NAME).run();"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":118,"author":{"gitId":"JulietTeoh"},"content":""},{"lineNumber":119,"author":{"gitId":"-"},"content":"}"}],"authorContributionMap":{"-":5,"JulietTeoh":114}},{"path":"src/main/java/Launcher.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"JulietTeoh"},"content":""},{"lineNumber":2,"author":{"gitId":"JulietTeoh"},"content":"import javafx.application.Application;"},{"lineNumber":3,"author":{"gitId":"JulietTeoh"},"content":""},{"lineNumber":4,"author":{"gitId":"JulietTeoh"},"content":"/**"},{"lineNumber":5,"author":{"gitId":"JulietTeoh"},"content":" * A launcher class to workaround classpath issues."},{"lineNumber":6,"author":{"gitId":"JulietTeoh"},"content":" */"},{"lineNumber":7,"author":{"gitId":"JulietTeoh"},"content":""},{"lineNumber":8,"author":{"gitId":"JulietTeoh"},"content":"//@@author JulietTeoh"},{"lineNumber":9,"author":{"gitId":"JulietTeoh"},"content":"//Reused from https://se-education.org/guides/tutorials/javaFxPart4.html with minor modifications."},{"lineNumber":10,"author":{"gitId":"JulietTeoh"},"content":"public class Launcher {"},{"lineNumber":11,"author":{"gitId":"JulietTeoh"},"content":"    public static void main(String[] args) {"},{"lineNumber":12,"author":{"gitId":"JulietTeoh"},"content":"        Application.launch(Main.class, args);"},{"lineNumber":13,"author":{"gitId":"JulietTeoh"},"content":"    }"},{"lineNumber":14,"author":{"gitId":"JulietTeoh"},"content":"}"}],"authorContributionMap":{"JulietTeoh":14}},{"path":"src/main/java/Main.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"JulietTeoh"},"content":"import java.io.IOException;"},{"lineNumber":2,"author":{"gitId":"JulietTeoh"},"content":""},{"lineNumber":3,"author":{"gitId":"JulietTeoh"},"content":"import javafx.application.Application;"},{"lineNumber":4,"author":{"gitId":"JulietTeoh"},"content":"import javafx.fxml.FXMLLoader;"},{"lineNumber":5,"author":{"gitId":"JulietTeoh"},"content":"import javafx.scene.Scene;"},{"lineNumber":6,"author":{"gitId":"JulietTeoh"},"content":"import javafx.scene.layout.AnchorPane;"},{"lineNumber":7,"author":{"gitId":"JulietTeoh"},"content":"import javafx.stage.Stage;"},{"lineNumber":8,"author":{"gitId":"JulietTeoh"},"content":""},{"lineNumber":9,"author":{"gitId":"JulietTeoh"},"content":"/**"},{"lineNumber":10,"author":{"gitId":"JulietTeoh"},"content":" * A GUI for Duke using FXML."},{"lineNumber":11,"author":{"gitId":"JulietTeoh"},"content":" */"},{"lineNumber":12,"author":{"gitId":"JulietTeoh"},"content":"//@@author JulietTeoh"},{"lineNumber":13,"author":{"gitId":"JulietTeoh"},"content":"//Reused from https://se-education.org/guides/tutorials/javaFxPart4.html with minor modifications."},{"lineNumber":14,"author":{"gitId":"JulietTeoh"},"content":"public class Main extends Application {"},{"lineNumber":15,"author":{"gitId":"JulietTeoh"},"content":"    private static final String FILE_NAME \u003d \"dukedata.txt\";"},{"lineNumber":16,"author":{"gitId":"JulietTeoh"},"content":"    private static final String FOLDER_NAME \u003d \"data\";"},{"lineNumber":17,"author":{"gitId":"JulietTeoh"},"content":"    private static final String RELATIVE_PATH \u003d FOLDER_NAME + \"/\" + FILE_NAME;"},{"lineNumber":18,"author":{"gitId":"JulietTeoh"},"content":"    private Duke duke \u003d new Duke(RELATIVE_PATH, FOLDER_NAME);"},{"lineNumber":19,"author":{"gitId":"JulietTeoh"},"content":""},{"lineNumber":20,"author":{"gitId":"JulietTeoh"},"content":"    @Override"},{"lineNumber":21,"author":{"gitId":"JulietTeoh"},"content":"    public void start(Stage stage) {"},{"lineNumber":22,"author":{"gitId":"JulietTeoh"},"content":"        try {"},{"lineNumber":23,"author":{"gitId":"JulietTeoh"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(Main.class.getResource(\"/view/MainWindow.fxml\"));"},{"lineNumber":24,"author":{"gitId":"JulietTeoh"},"content":"            AnchorPane ap \u003d fxmlLoader.load();"},{"lineNumber":25,"author":{"gitId":"JulietTeoh"},"content":"            Scene scene \u003d new Scene(ap);"},{"lineNumber":26,"author":{"gitId":"JulietTeoh"},"content":"            stage.setScene(scene);"},{"lineNumber":27,"author":{"gitId":"JulietTeoh"},"content":"            fxmlLoader.\u003cMainWindow\u003egetController().setDuke(duke);"},{"lineNumber":28,"author":{"gitId":"JulietTeoh"},"content":"            stage.show();"},{"lineNumber":29,"author":{"gitId":"JulietTeoh"},"content":"        } catch (IOException e) {"},{"lineNumber":30,"author":{"gitId":"JulietTeoh"},"content":"            e.printStackTrace();"},{"lineNumber":31,"author":{"gitId":"JulietTeoh"},"content":"        }"},{"lineNumber":32,"author":{"gitId":"JulietTeoh"},"content":"    }"},{"lineNumber":33,"author":{"gitId":"JulietTeoh"},"content":"}"}],"authorContributionMap":{"JulietTeoh":33}},{"path":"src/main/java/MainWindow.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"JulietTeoh"},"content":"import javafx.application.Platform;"},{"lineNumber":2,"author":{"gitId":"JulietTeoh"},"content":"import javafx.fxml.FXML;"},{"lineNumber":3,"author":{"gitId":"JulietTeoh"},"content":"import javafx.scene.control.Button;"},{"lineNumber":4,"author":{"gitId":"JulietTeoh"},"content":"import javafx.scene.control.ScrollPane;"},{"lineNumber":5,"author":{"gitId":"JulietTeoh"},"content":"import javafx.scene.control.TextField;"},{"lineNumber":6,"author":{"gitId":"JulietTeoh"},"content":"import javafx.scene.image.Image;"},{"lineNumber":7,"author":{"gitId":"JulietTeoh"},"content":"import javafx.scene.layout.AnchorPane;"},{"lineNumber":8,"author":{"gitId":"JulietTeoh"},"content":"import javafx.scene.layout.VBox;"},{"lineNumber":9,"author":{"gitId":"JulietTeoh"},"content":"/**"},{"lineNumber":10,"author":{"gitId":"JulietTeoh"},"content":" * Controller for MainWindow. Provides the layout for the other controls."},{"lineNumber":11,"author":{"gitId":"JulietTeoh"},"content":" */"},{"lineNumber":12,"author":{"gitId":"JulietTeoh"},"content":"//@@author JulietTeoh"},{"lineNumber":13,"author":{"gitId":"JulietTeoh"},"content":"//Reused from https://se-education.org/guides/tutorials/javaFxPart4.html with minor modifications."},{"lineNumber":14,"author":{"gitId":"JulietTeoh"},"content":"public class MainWindow extends AnchorPane {"},{"lineNumber":15,"author":{"gitId":"JulietTeoh"},"content":"    @FXML"},{"lineNumber":16,"author":{"gitId":"JulietTeoh"},"content":"    private ScrollPane scrollPane;"},{"lineNumber":17,"author":{"gitId":"JulietTeoh"},"content":"    @FXML"},{"lineNumber":18,"author":{"gitId":"JulietTeoh"},"content":"    private VBox dialogContainer;"},{"lineNumber":19,"author":{"gitId":"JulietTeoh"},"content":"    @FXML"},{"lineNumber":20,"author":{"gitId":"JulietTeoh"},"content":"    private TextField userInput;"},{"lineNumber":21,"author":{"gitId":"JulietTeoh"},"content":"    @FXML"},{"lineNumber":22,"author":{"gitId":"JulietTeoh"},"content":"    private Button sendButton;"},{"lineNumber":23,"author":{"gitId":"JulietTeoh"},"content":""},{"lineNumber":24,"author":{"gitId":"JulietTeoh"},"content":"    private Duke duke;"},{"lineNumber":25,"author":{"gitId":"JulietTeoh"},"content":""},{"lineNumber":26,"author":{"gitId":"JulietTeoh"},"content":"    private Image userImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/cat2_png.png\"));"},{"lineNumber":27,"author":{"gitId":"JulietTeoh"},"content":"    private Image dukeNormalImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/cat3_png.png\"));"},{"lineNumber":28,"author":{"gitId":"JulietTeoh"},"content":"    private Image dukeErrorImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/cat1_png.png\"));"},{"lineNumber":29,"author":{"gitId":"JulietTeoh"},"content":""},{"lineNumber":30,"author":{"gitId":"JulietTeoh"},"content":"    /**"},{"lineNumber":31,"author":{"gitId":"JulietTeoh"},"content":"     * Initializes the javafx frame"},{"lineNumber":32,"author":{"gitId":"JulietTeoh"},"content":"     */"},{"lineNumber":33,"author":{"gitId":"JulietTeoh"},"content":"    @FXML"},{"lineNumber":34,"author":{"gitId":"JulietTeoh"},"content":"    public void initialize() {"},{"lineNumber":35,"author":{"gitId":"JulietTeoh"},"content":"        scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());"},{"lineNumber":36,"author":{"gitId":"JulietTeoh"},"content":"        dialogContainer.getChildren().addAll("},{"lineNumber":37,"author":{"gitId":"JulietTeoh"},"content":"                DialogBox.getDukeDialog("},{"lineNumber":38,"author":{"gitId":"JulietTeoh"},"content":"                        \"Hello! I\u0027m Duke!\\n\" + \"What can I do for you?\", dukeNormalImage)"},{"lineNumber":39,"author":{"gitId":"JulietTeoh"},"content":"        );"},{"lineNumber":40,"author":{"gitId":"JulietTeoh"},"content":"    }"},{"lineNumber":41,"author":{"gitId":"JulietTeoh"},"content":""},{"lineNumber":42,"author":{"gitId":"JulietTeoh"},"content":"    public void setDuke(Duke d) {"},{"lineNumber":43,"author":{"gitId":"JulietTeoh"},"content":"        duke \u003d d;"},{"lineNumber":44,"author":{"gitId":"JulietTeoh"},"content":"    }"},{"lineNumber":45,"author":{"gitId":"JulietTeoh"},"content":""},{"lineNumber":46,"author":{"gitId":"JulietTeoh"},"content":"    /**"},{"lineNumber":47,"author":{"gitId":"JulietTeoh"},"content":"     * Creates two dialog boxes, one echoing user input and the other containing Duke\u0027s reply and then appends them to"},{"lineNumber":48,"author":{"gitId":"JulietTeoh"},"content":"     * the dialog container. Clears the user input after processing."},{"lineNumber":49,"author":{"gitId":"JulietTeoh"},"content":"     */"},{"lineNumber":50,"author":{"gitId":"JulietTeoh"},"content":"    @FXML"},{"lineNumber":51,"author":{"gitId":"JulietTeoh"},"content":"    private void handleUserInput() {"},{"lineNumber":52,"author":{"gitId":"JulietTeoh"},"content":"        if (!duke.getIsTerminated()) {"},{"lineNumber":53,"author":{"gitId":"JulietTeoh"},"content":"            String input \u003d userInput.getText();"},{"lineNumber":54,"author":{"gitId":"JulietTeoh"},"content":"            String response \u003d duke.getResponse(input);"},{"lineNumber":55,"author":{"gitId":"JulietTeoh"},"content":""},{"lineNumber":56,"author":{"gitId":"JulietTeoh"},"content":"            if (!duke.getIsCurrentError()) {"},{"lineNumber":57,"author":{"gitId":"JulietTeoh"},"content":""},{"lineNumber":58,"author":{"gitId":"JulietTeoh"},"content":"                dialogContainer.getChildren().addAll("},{"lineNumber":59,"author":{"gitId":"JulietTeoh"},"content":"                        DialogBox.getUserDialog(input, userImage),"},{"lineNumber":60,"author":{"gitId":"JulietTeoh"},"content":"                        DialogBox.getDukeDialog(response, dukeNormalImage)"},{"lineNumber":61,"author":{"gitId":"JulietTeoh"},"content":"                );"},{"lineNumber":62,"author":{"gitId":"JulietTeoh"},"content":"            } else {"},{"lineNumber":63,"author":{"gitId":"JulietTeoh"},"content":"                dialogContainer.getChildren().addAll("},{"lineNumber":64,"author":{"gitId":"JulietTeoh"},"content":"                        DialogBox.getUserDialog(input, userImage),"},{"lineNumber":65,"author":{"gitId":"JulietTeoh"},"content":"                        DialogBox.getDukeDialog(response, dukeErrorImage)"},{"lineNumber":66,"author":{"gitId":"JulietTeoh"},"content":"                );"},{"lineNumber":67,"author":{"gitId":"JulietTeoh"},"content":"            }"},{"lineNumber":68,"author":{"gitId":"JulietTeoh"},"content":"            userInput.clear();"},{"lineNumber":69,"author":{"gitId":"JulietTeoh"},"content":"        } else {"},{"lineNumber":70,"author":{"gitId":"JulietTeoh"},"content":"            if (userInput.getText().equals(\"q\")) {"},{"lineNumber":71,"author":{"gitId":"JulietTeoh"},"content":"                Platform.exit();"},{"lineNumber":72,"author":{"gitId":"JulietTeoh"},"content":"            }"},{"lineNumber":73,"author":{"gitId":"JulietTeoh"},"content":"        }"},{"lineNumber":74,"author":{"gitId":"JulietTeoh"},"content":"    }"},{"lineNumber":75,"author":{"gitId":"JulietTeoh"},"content":"}"}],"authorContributionMap":{"JulietTeoh":75}},{"path":"src/main/java/duke/command/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"JulietTeoh"},"content":"package duke.command;"},{"lineNumber":2,"author":{"gitId":"JulietTeoh"},"content":""},{"lineNumber":3,"author":{"gitId":"JulietTeoh"},"content":"import duke.exceptions.DukeException;"},{"lineNumber":4,"author":{"gitId":"JulietTeoh"},"content":"import duke.maincomponents.Storage;"},{"lineNumber":5,"author":{"gitId":"JulietTeoh"},"content":"import duke.maincomponents.TaskList;"},{"lineNumber":6,"author":{"gitId":"JulietTeoh"},"content":"import duke.maincomponents.Ui;"},{"lineNumber":7,"author":{"gitId":"JulietTeoh"},"content":""},{"lineNumber":8,"author":{"gitId":"JulietTeoh"},"content":"/**"},{"lineNumber":9,"author":{"gitId":"JulietTeoh"},"content":" * Interface for all commands, which have an execute and executeGui method that performs an action"},{"lineNumber":10,"author":{"gitId":"JulietTeoh"},"content":" */"},{"lineNumber":11,"author":{"gitId":"JulietTeoh"},"content":""},{"lineNumber":12,"author":{"gitId":"JulietTeoh"},"content":"public interface Command {"},{"lineNumber":13,"author":{"gitId":"JulietTeoh"},"content":"    /**"},{"lineNumber":14,"author":{"gitId":"JulietTeoh"},"content":"     * Executes the deadline command, which adds a deadline task to Duke\u0027s TaskList"},{"lineNumber":15,"author":{"gitId":"JulietTeoh"},"content":"     *"},{"lineNumber":16,"author":{"gitId":"JulietTeoh"},"content":"     * @param dukeTaskList Give dukeTaskList"},{"lineNumber":17,"author":{"gitId":"JulietTeoh"},"content":"     * @param dukeUi Give dukeUi"},{"lineNumber":18,"author":{"gitId":"JulietTeoh"},"content":"     * @param dukeStorage Give dukeStorage"},{"lineNumber":19,"author":{"gitId":"JulietTeoh"},"content":"     */"},{"lineNumber":20,"author":{"gitId":"JulietTeoh"},"content":"    public void execute(TaskList dukeTaskList, Ui dukeUi, Storage dukeStorage) throws DukeException;"},{"lineNumber":21,"author":{"gitId":"JulietTeoh"},"content":""},{"lineNumber":22,"author":{"gitId":"JulietTeoh"},"content":"    /**"},{"lineNumber":23,"author":{"gitId":"JulietTeoh"},"content":"     * Executes the deadline command for the GUI, which adds a deadline task to Duke\u0027s TaskList"},{"lineNumber":24,"author":{"gitId":"JulietTeoh"},"content":"     *"},{"lineNumber":25,"author":{"gitId":"JulietTeoh"},"content":"     * @param dukeTaskList Give dukeTaskList"},{"lineNumber":26,"author":{"gitId":"JulietTeoh"},"content":"     * @param dukeUi Give dukeUi"},{"lineNumber":27,"author":{"gitId":"JulietTeoh"},"content":"     * @param dukeStorage Give dukeStorage"},{"lineNumber":28,"author":{"gitId":"JulietTeoh"},"content":"     * @return a String which represents the task that has occured"},{"lineNumber":29,"author":{"gitId":"JulietTeoh"},"content":"     * @throws DukeException throws DukeException"},{"lineNumber":30,"author":{"gitId":"JulietTeoh"},"content":"     */"},{"lineNumber":31,"author":{"gitId":"JulietTeoh"},"content":"    public String executeGui(TaskList dukeTaskList, Ui dukeUi, Storage dukeStorage) throws DukeException;"},{"lineNumber":32,"author":{"gitId":"JulietTeoh"},"content":""},{"lineNumber":33,"author":{"gitId":"JulietTeoh"},"content":"}"}],"authorContributionMap":{"JulietTeoh":33}},{"path":"src/main/java/duke/command/DeadlineCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"JulietTeoh"},"content":"package duke.command;"},{"lineNumber":2,"author":{"gitId":"JulietTeoh"},"content":""},{"lineNumber":3,"author":{"gitId":"JulietTeoh"},"content":"import java.util.ArrayList;"},{"lineNumber":4,"author":{"gitId":"JulietTeoh"},"content":""},{"lineNumber":5,"author":{"gitId":"JulietTeoh"},"content":"import duke.exceptions.DukeException;"},{"lineNumber":6,"author":{"gitId":"JulietTeoh"},"content":"import duke.maincomponents.Storage;"},{"lineNumber":7,"author":{"gitId":"JulietTeoh"},"content":"import duke.maincomponents.TaskList;"},{"lineNumber":8,"author":{"gitId":"JulietTeoh"},"content":"import duke.maincomponents.Ui;"},{"lineNumber":9,"author":{"gitId":"JulietTeoh"},"content":"import duke.task.Task;"},{"lineNumber":10,"author":{"gitId":"JulietTeoh"},"content":""},{"lineNumber":11,"author":{"gitId":"JulietTeoh"},"content":"/**"},{"lineNumber":12,"author":{"gitId":"JulietTeoh"},"content":" * Deadline Command, which adds a deadline task to Duke\u0027s TaskList when executed"},{"lineNumber":13,"author":{"gitId":"JulietTeoh"},"content":" */"},{"lineNumber":14,"author":{"gitId":"JulietTeoh"},"content":""},{"lineNumber":15,"author":{"gitId":"JulietTeoh"},"content":"public class DeadlineCommand implements Command {"},{"lineNumber":16,"author":{"gitId":"JulietTeoh"},"content":"    private final ArrayList\u003cString\u003e eventDescription;"},{"lineNumber":17,"author":{"gitId":"JulietTeoh"},"content":""},{"lineNumber":18,"author":{"gitId":"JulietTeoh"},"content":"    /**"},{"lineNumber":19,"author":{"gitId":"JulietTeoh"},"content":"     * Constucts a DeadlineCommand object"},{"lineNumber":20,"author":{"gitId":"JulietTeoh"},"content":"     *"},{"lineNumber":21,"author":{"gitId":"JulietTeoh"},"content":"     * @param a Arraylist where index 0 contains the description of the deadline and index 1"},{"lineNumber":22,"author":{"gitId":"JulietTeoh"},"content":"     *          is the by date of the deadline"},{"lineNumber":23,"author":{"gitId":"JulietTeoh"},"content":"     */"},{"lineNumber":24,"author":{"gitId":"JulietTeoh"},"content":"    public DeadlineCommand(ArrayList\u003cString\u003e a) {"},{"lineNumber":25,"author":{"gitId":"JulietTeoh"},"content":"        eventDescription \u003d a;"},{"lineNumber":26,"author":{"gitId":"JulietTeoh"},"content":"    }"},{"lineNumber":27,"author":{"gitId":"JulietTeoh"},"content":"    @Override"},{"lineNumber":28,"author":{"gitId":"JulietTeoh"},"content":"    public void execute(TaskList dukeTaskList, Ui dukeUi, Storage dukeStorage) throws DukeException {"},{"lineNumber":29,"author":{"gitId":"JulietTeoh"},"content":"        try {"},{"lineNumber":30,"author":{"gitId":"JulietTeoh"},"content":"            Task deadlineTask \u003d dukeTaskList.addDeadlineTask(eventDescription);"},{"lineNumber":31,"author":{"gitId":"JulietTeoh"},"content":"            dukeUi.showAddedTask(deadlineTask, dukeTaskList.getNumberOfTasks());"},{"lineNumber":32,"author":{"gitId":"JulietTeoh"},"content":"        } catch (DukeException e) {"},{"lineNumber":33,"author":{"gitId":"JulietTeoh"},"content":"            throw e;"},{"lineNumber":34,"author":{"gitId":"JulietTeoh"},"content":"        }"},{"lineNumber":35,"author":{"gitId":"JulietTeoh"},"content":"    }"},{"lineNumber":36,"author":{"gitId":"JulietTeoh"},"content":"    @Override"},{"lineNumber":37,"author":{"gitId":"JulietTeoh"},"content":"    public String executeGui(TaskList dukeTaskList, Ui dukeUi, Storage dukeStorage) throws DukeException {"},{"lineNumber":38,"author":{"gitId":"JulietTeoh"},"content":"        try {"},{"lineNumber":39,"author":{"gitId":"JulietTeoh"},"content":"            Task deadlineTask \u003d dukeTaskList.addDeadlineTask(eventDescription);"},{"lineNumber":40,"author":{"gitId":"JulietTeoh"},"content":"            return dukeUi.returnAddedTask(deadlineTask, dukeTaskList.getNumberOfTasks());"},{"lineNumber":41,"author":{"gitId":"JulietTeoh"},"content":"        } catch (DukeException e) {"},{"lineNumber":42,"author":{"gitId":"JulietTeoh"},"content":"            throw e;"},{"lineNumber":43,"author":{"gitId":"JulietTeoh"},"content":"        }"},{"lineNumber":44,"author":{"gitId":"JulietTeoh"},"content":"    }"},{"lineNumber":45,"author":{"gitId":"JulietTeoh"},"content":"}"}],"authorContributionMap":{"JulietTeoh":45}},{"path":"src/main/java/duke/command/DeleteCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"JulietTeoh"},"content":"package duke.command;"},{"lineNumber":2,"author":{"gitId":"JulietTeoh"},"content":""},{"lineNumber":3,"author":{"gitId":"JulietTeoh"},"content":"import duke.exceptions.DukeException;"},{"lineNumber":4,"author":{"gitId":"JulietTeoh"},"content":"import duke.maincomponents.Storage;"},{"lineNumber":5,"author":{"gitId":"JulietTeoh"},"content":"import duke.maincomponents.TaskList;"},{"lineNumber":6,"author":{"gitId":"JulietTeoh"},"content":"import duke.maincomponents.Ui;"},{"lineNumber":7,"author":{"gitId":"JulietTeoh"},"content":"import duke.task.Task;"},{"lineNumber":8,"author":{"gitId":"JulietTeoh"},"content":""},{"lineNumber":9,"author":{"gitId":"JulietTeoh"},"content":"/**"},{"lineNumber":10,"author":{"gitId":"JulietTeoh"},"content":" * Delete Command, which deletes a task from Duke\u0027s TaskList when executed"},{"lineNumber":11,"author":{"gitId":"JulietTeoh"},"content":" */"},{"lineNumber":12,"author":{"gitId":"JulietTeoh"},"content":""},{"lineNumber":13,"author":{"gitId":"JulietTeoh"},"content":"public class DeleteCommand implements Command {"},{"lineNumber":14,"author":{"gitId":"JulietTeoh"},"content":"    private final int taskDeleteInt;"},{"lineNumber":15,"author":{"gitId":"JulietTeoh"},"content":""},{"lineNumber":16,"author":{"gitId":"JulietTeoh"},"content":"    /**"},{"lineNumber":17,"author":{"gitId":"JulietTeoh"},"content":"     * Constructor of DeleteCommand"},{"lineNumber":18,"author":{"gitId":"JulietTeoh"},"content":"     *"},{"lineNumber":19,"author":{"gitId":"JulietTeoh"},"content":"     * @param i Index of task to delete"},{"lineNumber":20,"author":{"gitId":"JulietTeoh"},"content":"     */"},{"lineNumber":21,"author":{"gitId":"JulietTeoh"},"content":"    public DeleteCommand(int i) {"},{"lineNumber":22,"author":{"gitId":"JulietTeoh"},"content":"        assert i \u003e\u003d 0 : \" i has to be greater or equal to 0 as there are no negative indexes\";"},{"lineNumber":23,"author":{"gitId":"JulietTeoh"},"content":"        taskDeleteInt \u003d i;"},{"lineNumber":24,"author":{"gitId":"JulietTeoh"},"content":"    }"},{"lineNumber":25,"author":{"gitId":"JulietTeoh"},"content":"    @Override"},{"lineNumber":26,"author":{"gitId":"JulietTeoh"},"content":"    public void execute(TaskList dukeTaskList, Ui dukeUi, Storage dukeStorage) throws DukeException {"},{"lineNumber":27,"author":{"gitId":"JulietTeoh"},"content":"        try {"},{"lineNumber":28,"author":{"gitId":"JulietTeoh"},"content":"            Task deletedTask \u003d dukeTaskList.deleteTask(taskDeleteInt);"},{"lineNumber":29,"author":{"gitId":"JulietTeoh"},"content":"            dukeUi.showTaskDeleted(deletedTask, dukeTaskList.getNumberOfTasks());"},{"lineNumber":30,"author":{"gitId":"JulietTeoh"},"content":"        } catch (DukeException e) {"},{"lineNumber":31,"author":{"gitId":"JulietTeoh"},"content":"            throw e;"},{"lineNumber":32,"author":{"gitId":"JulietTeoh"},"content":"        }"},{"lineNumber":33,"author":{"gitId":"JulietTeoh"},"content":"    }"},{"lineNumber":34,"author":{"gitId":"JulietTeoh"},"content":"    @Override"},{"lineNumber":35,"author":{"gitId":"JulietTeoh"},"content":"    public String executeGui(TaskList dukeTaskList, Ui dukeUi, Storage dukeStorage) throws DukeException {"},{"lineNumber":36,"author":{"gitId":"JulietTeoh"},"content":"        try {"},{"lineNumber":37,"author":{"gitId":"JulietTeoh"},"content":"            Task deletedTask \u003d dukeTaskList.deleteTask(taskDeleteInt);"},{"lineNumber":38,"author":{"gitId":"JulietTeoh"},"content":"            return dukeUi.returnTaskDeleted(deletedTask, dukeTaskList.getNumberOfTasks());"},{"lineNumber":39,"author":{"gitId":"JulietTeoh"},"content":"        } catch (DukeException e) {"},{"lineNumber":40,"author":{"gitId":"JulietTeoh"},"content":"            throw e;"},{"lineNumber":41,"author":{"gitId":"JulietTeoh"},"content":"        }"},{"lineNumber":42,"author":{"gitId":"JulietTeoh"},"content":"    }"},{"lineNumber":43,"author":{"gitId":"JulietTeoh"},"content":"}"},{"lineNumber":44,"author":{"gitId":"JulietTeoh"},"content":""}],"authorContributionMap":{"JulietTeoh":44}},{"path":"src/main/java/duke/command/DoneCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"JulietTeoh"},"content":"package duke.command;"},{"lineNumber":2,"author":{"gitId":"JulietTeoh"},"content":""},{"lineNumber":3,"author":{"gitId":"JulietTeoh"},"content":"import duke.exceptions.DukeException;"},{"lineNumber":4,"author":{"gitId":"JulietTeoh"},"content":"import duke.maincomponents.Storage;"},{"lineNumber":5,"author":{"gitId":"JulietTeoh"},"content":"import duke.maincomponents.TaskList;"},{"lineNumber":6,"author":{"gitId":"JulietTeoh"},"content":"import duke.maincomponents.Ui;"},{"lineNumber":7,"author":{"gitId":"JulietTeoh"},"content":"import duke.task.Task;"},{"lineNumber":8,"author":{"gitId":"JulietTeoh"},"content":""},{"lineNumber":9,"author":{"gitId":"JulietTeoh"},"content":"/**"},{"lineNumber":10,"author":{"gitId":"JulietTeoh"},"content":" * DoneCommand, which marks a task as done when executed"},{"lineNumber":11,"author":{"gitId":"JulietTeoh"},"content":" */"},{"lineNumber":12,"author":{"gitId":"JulietTeoh"},"content":""},{"lineNumber":13,"author":{"gitId":"JulietTeoh"},"content":"public class DoneCommand implements Command {"},{"lineNumber":14,"author":{"gitId":"JulietTeoh"},"content":"    private final int taskDoneInt;"},{"lineNumber":15,"author":{"gitId":"JulietTeoh"},"content":""},{"lineNumber":16,"author":{"gitId":"JulietTeoh"},"content":"    /**"},{"lineNumber":17,"author":{"gitId":"JulietTeoh"},"content":"     * Constructor of DoneCommand"},{"lineNumber":18,"author":{"gitId":"JulietTeoh"},"content":"     *"},{"lineNumber":19,"author":{"gitId":"JulietTeoh"},"content":"     * @param i index of task to mark as done"},{"lineNumber":20,"author":{"gitId":"JulietTeoh"},"content":"     */"},{"lineNumber":21,"author":{"gitId":"JulietTeoh"},"content":"    public DoneCommand(int i) {"},{"lineNumber":22,"author":{"gitId":"JulietTeoh"},"content":"        assert i \u003e\u003d 0 : \" i has to be greater or equal to 0 as there are no negative indexes\";"},{"lineNumber":23,"author":{"gitId":"JulietTeoh"},"content":"        taskDoneInt \u003d i;"},{"lineNumber":24,"author":{"gitId":"JulietTeoh"},"content":"    }"},{"lineNumber":25,"author":{"gitId":"JulietTeoh"},"content":"    @Override"},{"lineNumber":26,"author":{"gitId":"JulietTeoh"},"content":"    public void execute(TaskList dukeTaskList, Ui dukeUi, Storage dukeStorage) throws DukeException {"},{"lineNumber":27,"author":{"gitId":"JulietTeoh"},"content":"        try {"},{"lineNumber":28,"author":{"gitId":"JulietTeoh"},"content":"            Task doneTask \u003d dukeTaskList.checkTaskAsDone(taskDoneInt);"},{"lineNumber":29,"author":{"gitId":"JulietTeoh"},"content":"            dukeUi.showTaskDone(doneTask);"},{"lineNumber":30,"author":{"gitId":"JulietTeoh"},"content":"        } catch (DukeException e) {"},{"lineNumber":31,"author":{"gitId":"JulietTeoh"},"content":"            throw e;"},{"lineNumber":32,"author":{"gitId":"JulietTeoh"},"content":"        }"},{"lineNumber":33,"author":{"gitId":"JulietTeoh"},"content":"    }"},{"lineNumber":34,"author":{"gitId":"JulietTeoh"},"content":"    @Override"},{"lineNumber":35,"author":{"gitId":"JulietTeoh"},"content":"    public String executeGui(TaskList dukeTaskList, Ui dukeUi, Storage dukeStorage) throws DukeException {"},{"lineNumber":36,"author":{"gitId":"JulietTeoh"},"content":"        try {"},{"lineNumber":37,"author":{"gitId":"JulietTeoh"},"content":"            Task doneTask \u003d dukeTaskList.checkTaskAsDone(taskDoneInt);"},{"lineNumber":38,"author":{"gitId":"JulietTeoh"},"content":"            return dukeUi.returnTaskDone(doneTask);"},{"lineNumber":39,"author":{"gitId":"JulietTeoh"},"content":"        } catch (DukeException e) {"},{"lineNumber":40,"author":{"gitId":"JulietTeoh"},"content":"            throw e;"},{"lineNumber":41,"author":{"gitId":"JulietTeoh"},"content":"        }"},{"lineNumber":42,"author":{"gitId":"JulietTeoh"},"content":"    }"},{"lineNumber":43,"author":{"gitId":"JulietTeoh"},"content":"}"}],"authorContributionMap":{"JulietTeoh":43}},{"path":"src/main/java/duke/command/EventCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"JulietTeoh"},"content":"package duke.command;"},{"lineNumber":2,"author":{"gitId":"JulietTeoh"},"content":""},{"lineNumber":3,"author":{"gitId":"JulietTeoh"},"content":"import java.util.ArrayList;"},{"lineNumber":4,"author":{"gitId":"JulietTeoh"},"content":""},{"lineNumber":5,"author":{"gitId":"JulietTeoh"},"content":"import duke.maincomponents.Storage;"},{"lineNumber":6,"author":{"gitId":"JulietTeoh"},"content":"import duke.maincomponents.TaskList;"},{"lineNumber":7,"author":{"gitId":"JulietTeoh"},"content":"import duke.maincomponents.Ui;"},{"lineNumber":8,"author":{"gitId":"JulietTeoh"},"content":"import duke.task.Task;"},{"lineNumber":9,"author":{"gitId":"JulietTeoh"},"content":""},{"lineNumber":10,"author":{"gitId":"JulietTeoh"},"content":"/**"},{"lineNumber":11,"author":{"gitId":"JulietTeoh"},"content":" * EventCommand, which adds a deadline task to Duke\u0027s TaskList when executed"},{"lineNumber":12,"author":{"gitId":"JulietTeoh"},"content":" */"},{"lineNumber":13,"author":{"gitId":"JulietTeoh"},"content":""},{"lineNumber":14,"author":{"gitId":"JulietTeoh"},"content":"public class EventCommand implements Command {"},{"lineNumber":15,"author":{"gitId":"JulietTeoh"},"content":"    private final ArrayList\u003cString\u003e eventDescription;"},{"lineNumber":16,"author":{"gitId":"JulietTeoh"},"content":""},{"lineNumber":17,"author":{"gitId":"JulietTeoh"},"content":"    /**"},{"lineNumber":18,"author":{"gitId":"JulietTeoh"},"content":"     * Default constructor for Event Comamnd"},{"lineNumber":19,"author":{"gitId":"JulietTeoh"},"content":"     *"},{"lineNumber":20,"author":{"gitId":"JulietTeoh"},"content":"     * @param a arrayList of descriptions for the event task"},{"lineNumber":21,"author":{"gitId":"JulietTeoh"},"content":"     */"},{"lineNumber":22,"author":{"gitId":"JulietTeoh"},"content":"    public EventCommand(ArrayList\u003cString\u003e a) {"},{"lineNumber":23,"author":{"gitId":"JulietTeoh"},"content":"        eventDescription \u003d a;"},{"lineNumber":24,"author":{"gitId":"JulietTeoh"},"content":"    }"},{"lineNumber":25,"author":{"gitId":"JulietTeoh"},"content":""},{"lineNumber":26,"author":{"gitId":"JulietTeoh"},"content":""},{"lineNumber":27,"author":{"gitId":"JulietTeoh"},"content":"    @Override"},{"lineNumber":28,"author":{"gitId":"JulietTeoh"},"content":"    public void execute(TaskList dukeTaskList, Ui dukeUi, Storage dukeStorage) {"},{"lineNumber":29,"author":{"gitId":"JulietTeoh"},"content":"        Task eventTask \u003d dukeTaskList.addEventTask(eventDescription);"},{"lineNumber":30,"author":{"gitId":"JulietTeoh"},"content":"        dukeUi.showAddedTask(eventTask, dukeTaskList.getNumberOfTasks());"},{"lineNumber":31,"author":{"gitId":"JulietTeoh"},"content":"    }"},{"lineNumber":32,"author":{"gitId":"JulietTeoh"},"content":""},{"lineNumber":33,"author":{"gitId":"JulietTeoh"},"content":"    @Override"},{"lineNumber":34,"author":{"gitId":"JulietTeoh"},"content":"    public String executeGui(TaskList dukeTaskList, Ui dukeUi, Storage dukeStorage) {"},{"lineNumber":35,"author":{"gitId":"JulietTeoh"},"content":"        Task eventTask \u003d dukeTaskList.addEventTask(eventDescription);"},{"lineNumber":36,"author":{"gitId":"JulietTeoh"},"content":"        return dukeUi.returnAddedTask(eventTask, dukeTaskList.getNumberOfTasks());"},{"lineNumber":37,"author":{"gitId":"JulietTeoh"},"content":"    }"},{"lineNumber":38,"author":{"gitId":"JulietTeoh"},"content":"}"}],"authorContributionMap":{"JulietTeoh":38}},{"path":"src/main/java/duke/command/FindCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"JulietTeoh"},"content":"package duke.command;"},{"lineNumber":2,"author":{"gitId":"JulietTeoh"},"content":""},{"lineNumber":3,"author":{"gitId":"JulietTeoh"},"content":"import java.util.ArrayList;"},{"lineNumber":4,"author":{"gitId":"JulietTeoh"},"content":""},{"lineNumber":5,"author":{"gitId":"JulietTeoh"},"content":"import duke.maincomponents.Storage;"},{"lineNumber":6,"author":{"gitId":"JulietTeoh"},"content":"import duke.maincomponents.TaskList;"},{"lineNumber":7,"author":{"gitId":"JulietTeoh"},"content":"import duke.maincomponents.Ui;"},{"lineNumber":8,"author":{"gitId":"JulietTeoh"},"content":"import duke.task.Task;"},{"lineNumber":9,"author":{"gitId":"JulietTeoh"},"content":""},{"lineNumber":10,"author":{"gitId":"JulietTeoh"},"content":"/**"},{"lineNumber":11,"author":{"gitId":"JulietTeoh"},"content":" * FindCommand, which find all the tasks that are similiar to a given string"},{"lineNumber":12,"author":{"gitId":"JulietTeoh"},"content":" */"},{"lineNumber":13,"author":{"gitId":"JulietTeoh"},"content":""},{"lineNumber":14,"author":{"gitId":"JulietTeoh"},"content":"public class FindCommand implements Command {"},{"lineNumber":15,"author":{"gitId":"JulietTeoh"},"content":"    private final String stringToFind;"},{"lineNumber":16,"author":{"gitId":"JulietTeoh"},"content":""},{"lineNumber":17,"author":{"gitId":"JulietTeoh"},"content":"    /**"},{"lineNumber":18,"author":{"gitId":"JulietTeoh"},"content":"     * Default Constructor for the find command"},{"lineNumber":19,"author":{"gitId":"JulietTeoh"},"content":"     *"},{"lineNumber":20,"author":{"gitId":"JulietTeoh"},"content":"     * @param s search string"},{"lineNumber":21,"author":{"gitId":"JulietTeoh"},"content":"     */"},{"lineNumber":22,"author":{"gitId":"JulietTeoh"},"content":"    public FindCommand(String s) {"},{"lineNumber":23,"author":{"gitId":"JulietTeoh"},"content":"        stringToFind \u003d s;"},{"lineNumber":24,"author":{"gitId":"JulietTeoh"},"content":"    }"},{"lineNumber":25,"author":{"gitId":"JulietTeoh"},"content":""},{"lineNumber":26,"author":{"gitId":"JulietTeoh"},"content":"    @Override"},{"lineNumber":27,"author":{"gitId":"JulietTeoh"},"content":"    public void execute(TaskList dukeTaskList, Ui dukeUi, Storage dukeStorage) {"},{"lineNumber":28,"author":{"gitId":"JulietTeoh"},"content":"        ArrayList\u003cTask\u003e currentTaskList \u003d dukeTaskList.getCurrentTaskList();"},{"lineNumber":29,"author":{"gitId":"JulietTeoh"},"content":"        ArrayList\u003cTask\u003e newTaskList \u003d new ArrayList\u003c\u003e();"},{"lineNumber":30,"author":{"gitId":"JulietTeoh"},"content":""},{"lineNumber":31,"author":{"gitId":"JulietTeoh"},"content":"        for (Task currentTask : currentTaskList) {"},{"lineNumber":32,"author":{"gitId":"JulietTeoh"},"content":"            if (currentTask.descriptionContains(stringToFind)) {"},{"lineNumber":33,"author":{"gitId":"JulietTeoh"},"content":"                newTaskList.add(currentTask);"},{"lineNumber":34,"author":{"gitId":"JulietTeoh"},"content":"            }"},{"lineNumber":35,"author":{"gitId":"JulietTeoh"},"content":"        }"},{"lineNumber":36,"author":{"gitId":"JulietTeoh"},"content":"        dukeUi.showFoundTaskList(newTaskList);"},{"lineNumber":37,"author":{"gitId":"JulietTeoh"},"content":"    }"},{"lineNumber":38,"author":{"gitId":"JulietTeoh"},"content":""},{"lineNumber":39,"author":{"gitId":"JulietTeoh"},"content":"    @Override"},{"lineNumber":40,"author":{"gitId":"JulietTeoh"},"content":"    public String executeGui(TaskList dukeTaskList, Ui dukeUi, Storage dukeStorage) {"},{"lineNumber":41,"author":{"gitId":"JulietTeoh"},"content":"        ArrayList\u003cTask\u003e currentTaskList \u003d dukeTaskList.getCurrentTaskList();"},{"lineNumber":42,"author":{"gitId":"JulietTeoh"},"content":"        ArrayList\u003cTask\u003e newTaskList \u003d new ArrayList\u003c\u003e();"},{"lineNumber":43,"author":{"gitId":"JulietTeoh"},"content":""},{"lineNumber":44,"author":{"gitId":"JulietTeoh"},"content":"        for (Task currentTask : currentTaskList) {"},{"lineNumber":45,"author":{"gitId":"JulietTeoh"},"content":"            if (currentTask.descriptionContains(stringToFind)) {"},{"lineNumber":46,"author":{"gitId":"JulietTeoh"},"content":"                newTaskList.add(currentTask);"},{"lineNumber":47,"author":{"gitId":"JulietTeoh"},"content":"            }"},{"lineNumber":48,"author":{"gitId":"JulietTeoh"},"content":"        }"},{"lineNumber":49,"author":{"gitId":"JulietTeoh"},"content":"        return dukeUi.returnFoundTaskList(newTaskList);"},{"lineNumber":50,"author":{"gitId":"JulietTeoh"},"content":"    }"},{"lineNumber":51,"author":{"gitId":"JulietTeoh"},"content":"}"}],"authorContributionMap":{"JulietTeoh":51}},{"path":"src/main/java/duke/command/ShowListCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"JulietTeoh"},"content":"package duke.command;"},{"lineNumber":2,"author":{"gitId":"JulietTeoh"},"content":""},{"lineNumber":3,"author":{"gitId":"JulietTeoh"},"content":"import java.util.ArrayList;"},{"lineNumber":4,"author":{"gitId":"JulietTeoh"},"content":""},{"lineNumber":5,"author":{"gitId":"JulietTeoh"},"content":"import duke.maincomponents.Storage;"},{"lineNumber":6,"author":{"gitId":"JulietTeoh"},"content":"import duke.maincomponents.TaskList;"},{"lineNumber":7,"author":{"gitId":"JulietTeoh"},"content":"import duke.maincomponents.Ui;"},{"lineNumber":8,"author":{"gitId":"JulietTeoh"},"content":"import duke.task.Task;"},{"lineNumber":9,"author":{"gitId":"JulietTeoh"},"content":""},{"lineNumber":10,"author":{"gitId":"JulietTeoh"},"content":"/**"},{"lineNumber":11,"author":{"gitId":"JulietTeoh"},"content":" * ShowListCommand, which shows the tasks on main.java.duke Task List when executed"},{"lineNumber":12,"author":{"gitId":"JulietTeoh"},"content":" */"},{"lineNumber":13,"author":{"gitId":"JulietTeoh"},"content":""},{"lineNumber":14,"author":{"gitId":"JulietTeoh"},"content":"public class ShowListCommand implements Command {"},{"lineNumber":15,"author":{"gitId":"JulietTeoh"},"content":""},{"lineNumber":16,"author":{"gitId":"JulietTeoh"},"content":"    /**"},{"lineNumber":17,"author":{"gitId":"JulietTeoh"},"content":"     * Executes ShowListCommand, which shows the tasks on main.java.duke Task List"},{"lineNumber":18,"author":{"gitId":"JulietTeoh"},"content":"     *"},{"lineNumber":19,"author":{"gitId":"JulietTeoh"},"content":"     * @param dukeTaskList give dukeTaskList"},{"lineNumber":20,"author":{"gitId":"JulietTeoh"},"content":"     * @param dukeUi give dukeUi"},{"lineNumber":21,"author":{"gitId":"JulietTeoh"},"content":"     * @param dukeStorage give dukeStorage"},{"lineNumber":22,"author":{"gitId":"JulietTeoh"},"content":"     */"},{"lineNumber":23,"author":{"gitId":"JulietTeoh"},"content":"    @Override"},{"lineNumber":24,"author":{"gitId":"JulietTeoh"},"content":"    public void execute(TaskList dukeTaskList, Ui dukeUi, Storage dukeStorage) {"},{"lineNumber":25,"author":{"gitId":"JulietTeoh"},"content":"        ArrayList\u003cTask\u003e currentTaskList \u003d dukeTaskList.getCurrentTaskList();"},{"lineNumber":26,"author":{"gitId":"JulietTeoh"},"content":"        dukeUi.showTaskList(currentTaskList);"},{"lineNumber":27,"author":{"gitId":"JulietTeoh"},"content":"    }"},{"lineNumber":28,"author":{"gitId":"JulietTeoh"},"content":""},{"lineNumber":29,"author":{"gitId":"JulietTeoh"},"content":"    @Override"},{"lineNumber":30,"author":{"gitId":"JulietTeoh"},"content":"    public String executeGui(TaskList dukeTaskList, Ui dukeUi, Storage dukeStorage) {"},{"lineNumber":31,"author":{"gitId":"JulietTeoh"},"content":"        ArrayList\u003cTask\u003e currentTaskList \u003d dukeTaskList.getCurrentTaskList();"},{"lineNumber":32,"author":{"gitId":"JulietTeoh"},"content":"        return dukeUi.returnTaskList(currentTaskList);"},{"lineNumber":33,"author":{"gitId":"JulietTeoh"},"content":"    }"},{"lineNumber":34,"author":{"gitId":"JulietTeoh"},"content":"}"}],"authorContributionMap":{"JulietTeoh":34}},{"path":"src/main/java/duke/command/ToDoCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"JulietTeoh"},"content":"package duke.command;"},{"lineNumber":2,"author":{"gitId":"JulietTeoh"},"content":""},{"lineNumber":3,"author":{"gitId":"JulietTeoh"},"content":"import duke.maincomponents.Storage;"},{"lineNumber":4,"author":{"gitId":"JulietTeoh"},"content":"import duke.maincomponents.TaskList;"},{"lineNumber":5,"author":{"gitId":"JulietTeoh"},"content":"import duke.maincomponents.Ui;"},{"lineNumber":6,"author":{"gitId":"JulietTeoh"},"content":"import duke.task.Task;"},{"lineNumber":7,"author":{"gitId":"JulietTeoh"},"content":""},{"lineNumber":8,"author":{"gitId":"JulietTeoh"},"content":"/**"},{"lineNumber":9,"author":{"gitId":"JulietTeoh"},"content":" * ToDo Command, which adds a todo task to Duke\u0027s TaskList when executed"},{"lineNumber":10,"author":{"gitId":"JulietTeoh"},"content":" */"},{"lineNumber":11,"author":{"gitId":"JulietTeoh"},"content":""},{"lineNumber":12,"author":{"gitId":"JulietTeoh"},"content":"public class ToDoCommand implements Command {"},{"lineNumber":13,"author":{"gitId":"JulietTeoh"},"content":"    private final String toDoDescription;"},{"lineNumber":14,"author":{"gitId":"JulietTeoh"},"content":""},{"lineNumber":15,"author":{"gitId":"JulietTeoh"},"content":"    /**"},{"lineNumber":16,"author":{"gitId":"JulietTeoh"},"content":"     * Default constructor for the Todo class"},{"lineNumber":17,"author":{"gitId":"JulietTeoh"},"content":"     *"},{"lineNumber":18,"author":{"gitId":"JulietTeoh"},"content":"     * @param s description of the todo task"},{"lineNumber":19,"author":{"gitId":"JulietTeoh"},"content":"     */"},{"lineNumber":20,"author":{"gitId":"JulietTeoh"},"content":"    public ToDoCommand(String s) {"},{"lineNumber":21,"author":{"gitId":"JulietTeoh"},"content":"        toDoDescription \u003d s;"},{"lineNumber":22,"author":{"gitId":"JulietTeoh"},"content":"    }"},{"lineNumber":23,"author":{"gitId":"JulietTeoh"},"content":""},{"lineNumber":24,"author":{"gitId":"JulietTeoh"},"content":"    @Override"},{"lineNumber":25,"author":{"gitId":"JulietTeoh"},"content":"    public void execute(TaskList dukeTaskList, Ui dukeUi, Storage dukeStorage) {"},{"lineNumber":26,"author":{"gitId":"JulietTeoh"},"content":"        Task toDoTask \u003d dukeTaskList.addToDoTask(toDoDescription);"},{"lineNumber":27,"author":{"gitId":"JulietTeoh"},"content":"        dukeUi.showAddedTask(toDoTask, dukeTaskList.getNumberOfTasks());"},{"lineNumber":28,"author":{"gitId":"JulietTeoh"},"content":"    }"},{"lineNumber":29,"author":{"gitId":"JulietTeoh"},"content":""},{"lineNumber":30,"author":{"gitId":"JulietTeoh"},"content":"    @Override"},{"lineNumber":31,"author":{"gitId":"JulietTeoh"},"content":"    public String executeGui(TaskList dukeTaskList, Ui dukeUi, Storage dukeStorage) {"},{"lineNumber":32,"author":{"gitId":"JulietTeoh"},"content":"        Task toDoTask \u003d dukeTaskList.addToDoTask(toDoDescription);"},{"lineNumber":33,"author":{"gitId":"JulietTeoh"},"content":"        return dukeUi.returnAddedTask(toDoTask, dukeTaskList.getNumberOfTasks());"},{"lineNumber":34,"author":{"gitId":"JulietTeoh"},"content":"    }"},{"lineNumber":35,"author":{"gitId":"JulietTeoh"},"content":"}"}],"authorContributionMap":{"JulietTeoh":35}},{"path":"src/main/java/duke/command/UpdateCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"JulietTeoh"},"content":"package duke.command;"},{"lineNumber":2,"author":{"gitId":"JulietTeoh"},"content":""},{"lineNumber":3,"author":{"gitId":"JulietTeoh"},"content":"import java.util.ArrayList;"},{"lineNumber":4,"author":{"gitId":"JulietTeoh"},"content":""},{"lineNumber":5,"author":{"gitId":"JulietTeoh"},"content":"import duke.exceptions.DukeException;"},{"lineNumber":6,"author":{"gitId":"JulietTeoh"},"content":"import duke.exceptions.TaskException;"},{"lineNumber":7,"author":{"gitId":"JulietTeoh"},"content":"import duke.maincomponents.Storage;"},{"lineNumber":8,"author":{"gitId":"JulietTeoh"},"content":"import duke.maincomponents.TaskList;"},{"lineNumber":9,"author":{"gitId":"JulietTeoh"},"content":"import duke.maincomponents.Ui;"},{"lineNumber":10,"author":{"gitId":"JulietTeoh"},"content":"import duke.task.Task;"},{"lineNumber":11,"author":{"gitId":"JulietTeoh"},"content":""},{"lineNumber":12,"author":{"gitId":"JulietTeoh"},"content":"/**"},{"lineNumber":13,"author":{"gitId":"JulietTeoh"},"content":" * Update Command, which updates the descriptions of a given task when executed"},{"lineNumber":14,"author":{"gitId":"JulietTeoh"},"content":" */"},{"lineNumber":15,"author":{"gitId":"JulietTeoh"},"content":""},{"lineNumber":16,"author":{"gitId":"JulietTeoh"},"content":"public class UpdateCommand implements Command {"},{"lineNumber":17,"author":{"gitId":"JulietTeoh"},"content":"    private final ArrayList\u003cString\u003e arrOfDescriptionToChange;"},{"lineNumber":18,"author":{"gitId":"JulietTeoh"},"content":"    private final int taskToEdit;"},{"lineNumber":19,"author":{"gitId":"JulietTeoh"},"content":""},{"lineNumber":20,"author":{"gitId":"JulietTeoh"},"content":"    /**"},{"lineNumber":21,"author":{"gitId":"JulietTeoh"},"content":"     * Default Constructor of Update Command"},{"lineNumber":22,"author":{"gitId":"JulietTeoh"},"content":"     *"},{"lineNumber":23,"author":{"gitId":"JulietTeoh"},"content":"     * @param taskToEdit Task object which is to be edited"},{"lineNumber":24,"author":{"gitId":"JulietTeoh"},"content":"     * @param descriptionToChange ArrayList of descriptions to change"},{"lineNumber":25,"author":{"gitId":"JulietTeoh"},"content":"     */"},{"lineNumber":26,"author":{"gitId":"JulietTeoh"},"content":"    public UpdateCommand(int taskToEdit, ArrayList\u003cString\u003e descriptionToChange) {"},{"lineNumber":27,"author":{"gitId":"JulietTeoh"},"content":"        this.arrOfDescriptionToChange \u003d descriptionToChange;"},{"lineNumber":28,"author":{"gitId":"JulietTeoh"},"content":"        this.taskToEdit \u003d taskToEdit;"},{"lineNumber":29,"author":{"gitId":"JulietTeoh"},"content":"    }"},{"lineNumber":30,"author":{"gitId":"JulietTeoh"},"content":""},{"lineNumber":31,"author":{"gitId":"JulietTeoh"},"content":"    @Override"},{"lineNumber":32,"author":{"gitId":"JulietTeoh"},"content":"    public void execute(TaskList dukeTaskList, Ui dukeUi, Storage dukeStorage) throws DukeException {"},{"lineNumber":33,"author":{"gitId":"JulietTeoh"},"content":"        try {"},{"lineNumber":34,"author":{"gitId":"JulietTeoh"},"content":"            Task task \u003d dukeTaskList.getTask(taskToEdit);"},{"lineNumber":35,"author":{"gitId":"JulietTeoh"},"content":"            task.changeDescription(arrOfDescriptionToChange);"},{"lineNumber":36,"author":{"gitId":"JulietTeoh"},"content":"            dukeUi.showChangedTask(task);"},{"lineNumber":37,"author":{"gitId":"JulietTeoh"},"content":"        } catch (TaskException e) {"},{"lineNumber":38,"author":{"gitId":"JulietTeoh"},"content":"            throw new DukeException(e.getMessage());"},{"lineNumber":39,"author":{"gitId":"JulietTeoh"},"content":"        }"},{"lineNumber":40,"author":{"gitId":"JulietTeoh"},"content":"    }"},{"lineNumber":41,"author":{"gitId":"JulietTeoh"},"content":""},{"lineNumber":42,"author":{"gitId":"JulietTeoh"},"content":"    @Override"},{"lineNumber":43,"author":{"gitId":"JulietTeoh"},"content":"    public String executeGui(TaskList dukeTaskList, Ui dukeUi, Storage dukeStorage) throws DukeException {"},{"lineNumber":44,"author":{"gitId":"JulietTeoh"},"content":"        try {"},{"lineNumber":45,"author":{"gitId":"JulietTeoh"},"content":"            Task task \u003d dukeTaskList.getTask(taskToEdit);"},{"lineNumber":46,"author":{"gitId":"JulietTeoh"},"content":"            task.changeDescription(arrOfDescriptionToChange);"},{"lineNumber":47,"author":{"gitId":"JulietTeoh"},"content":"            return dukeUi.returnChangedTask(task);"},{"lineNumber":48,"author":{"gitId":"JulietTeoh"},"content":"        } catch (TaskException e) {"},{"lineNumber":49,"author":{"gitId":"JulietTeoh"},"content":"            throw new DukeException(e.getMessage());"},{"lineNumber":50,"author":{"gitId":"JulietTeoh"},"content":"        }"},{"lineNumber":51,"author":{"gitId":"JulietTeoh"},"content":"    }"},{"lineNumber":52,"author":{"gitId":"JulietTeoh"},"content":"}"}],"authorContributionMap":{"JulietTeoh":52}},{"path":"src/main/java/duke/exceptions/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"JulietTeoh"},"content":"package duke.exceptions;"},{"lineNumber":2,"author":{"gitId":"JulietTeoh"},"content":""},{"lineNumber":3,"author":{"gitId":"JulietTeoh"},"content":"/**"},{"lineNumber":4,"author":{"gitId":"JulietTeoh"},"content":" * Duke Exception, which is the exception Duke Components will throw"},{"lineNumber":5,"author":{"gitId":"JulietTeoh"},"content":" */"},{"lineNumber":6,"author":{"gitId":"JulietTeoh"},"content":""},{"lineNumber":7,"author":{"gitId":"JulietTeoh"},"content":"public class DukeException extends Exception {"},{"lineNumber":8,"author":{"gitId":"JulietTeoh"},"content":""},{"lineNumber":9,"author":{"gitId":"JulietTeoh"},"content":"    /**"},{"lineNumber":10,"author":{"gitId":"JulietTeoh"},"content":"     * Constructor for DukeException"},{"lineNumber":11,"author":{"gitId":"JulietTeoh"},"content":"     *"},{"lineNumber":12,"author":{"gitId":"JulietTeoh"},"content":"     * @param message Error message regarding the execption"},{"lineNumber":13,"author":{"gitId":"JulietTeoh"},"content":"     */"},{"lineNumber":14,"author":{"gitId":"JulietTeoh"},"content":"    public DukeException(String message) {"},{"lineNumber":15,"author":{"gitId":"JulietTeoh"},"content":"        super(message);"},{"lineNumber":16,"author":{"gitId":"JulietTeoh"},"content":"    }"},{"lineNumber":17,"author":{"gitId":"JulietTeoh"},"content":"}"}],"authorContributionMap":{"JulietTeoh":17}},{"path":"src/main/java/duke/exceptions/TaskException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"JulietTeoh"},"content":"package duke.exceptions;"},{"lineNumber":2,"author":{"gitId":"JulietTeoh"},"content":""},{"lineNumber":3,"author":{"gitId":"JulietTeoh"},"content":"/**"},{"lineNumber":4,"author":{"gitId":"JulietTeoh"},"content":" * Task Exception, which is the exception Tasks will throw"},{"lineNumber":5,"author":{"gitId":"JulietTeoh"},"content":" */"},{"lineNumber":6,"author":{"gitId":"JulietTeoh"},"content":""},{"lineNumber":7,"author":{"gitId":"JulietTeoh"},"content":"public class TaskException extends Exception {"},{"lineNumber":8,"author":{"gitId":"JulietTeoh"},"content":"    /**"},{"lineNumber":9,"author":{"gitId":"JulietTeoh"},"content":"     * Constructor for TaskException"},{"lineNumber":10,"author":{"gitId":"JulietTeoh"},"content":"     *"},{"lineNumber":11,"author":{"gitId":"JulietTeoh"},"content":"     * @param message Error message regarding the execption"},{"lineNumber":12,"author":{"gitId":"JulietTeoh"},"content":"     */"},{"lineNumber":13,"author":{"gitId":"JulietTeoh"},"content":"    public TaskException(String message) {"},{"lineNumber":14,"author":{"gitId":"JulietTeoh"},"content":"        super(message);"},{"lineNumber":15,"author":{"gitId":"JulietTeoh"},"content":"    }"},{"lineNumber":16,"author":{"gitId":"JulietTeoh"},"content":"}"}],"authorContributionMap":{"JulietTeoh":16}},{"path":"src/main/java/duke/maincomponents/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"JulietTeoh"},"content":"package duke.maincomponents;"},{"lineNumber":2,"author":{"gitId":"JulietTeoh"},"content":""},{"lineNumber":3,"author":{"gitId":"JulietTeoh"},"content":"import java.util.ArrayList;"},{"lineNumber":4,"author":{"gitId":"JulietTeoh"},"content":""},{"lineNumber":5,"author":{"gitId":"JulietTeoh"},"content":"import duke.command.Command;"},{"lineNumber":6,"author":{"gitId":"JulietTeoh"},"content":"import duke.command.DeadlineCommand;"},{"lineNumber":7,"author":{"gitId":"JulietTeoh"},"content":"import duke.command.DeleteCommand;"},{"lineNumber":8,"author":{"gitId":"JulietTeoh"},"content":"import duke.command.DoneCommand;"},{"lineNumber":9,"author":{"gitId":"JulietTeoh"},"content":"import duke.command.EventCommand;"},{"lineNumber":10,"author":{"gitId":"JulietTeoh"},"content":"import duke.command.FindCommand;"},{"lineNumber":11,"author":{"gitId":"JulietTeoh"},"content":"import duke.command.ShowListCommand;"},{"lineNumber":12,"author":{"gitId":"JulietTeoh"},"content":"import duke.command.ToDoCommand;"},{"lineNumber":13,"author":{"gitId":"JulietTeoh"},"content":"import duke.command.UpdateCommand;"},{"lineNumber":14,"author":{"gitId":"JulietTeoh"},"content":"import duke.exceptions.DukeException;"},{"lineNumber":15,"author":{"gitId":"JulietTeoh"},"content":""},{"lineNumber":16,"author":{"gitId":"JulietTeoh"},"content":"/**"},{"lineNumber":17,"author":{"gitId":"JulietTeoh"},"content":" * Parser class, which Parser all the user inputs to create a Command that can be executed"},{"lineNumber":18,"author":{"gitId":"JulietTeoh"},"content":" */"},{"lineNumber":19,"author":{"gitId":"JulietTeoh"},"content":"public class Parser {"},{"lineNumber":20,"author":{"gitId":"JulietTeoh"},"content":""},{"lineNumber":21,"author":{"gitId":"JulietTeoh"},"content":"    private static boolean checkStringStartingEquals(String userInput, String stringToCheck) {"},{"lineNumber":22,"author":{"gitId":"JulietTeoh"},"content":"        return userInput.length() \u003e\u003d stringToCheck.length()"},{"lineNumber":23,"author":{"gitId":"JulietTeoh"},"content":"                \u0026\u0026 userInput.substring(0, stringToCheck.length()).equals(stringToCheck);"},{"lineNumber":24,"author":{"gitId":"JulietTeoh"},"content":"    }"},{"lineNumber":25,"author":{"gitId":"JulietTeoh"},"content":""},{"lineNumber":26,"author":{"gitId":"JulietTeoh"},"content":"    private static boolean checkStringEquals(String userInput, String stringToCheck) {"},{"lineNumber":27,"author":{"gitId":"JulietTeoh"},"content":"        return userInput.equals(stringToCheck) || userInput.equals(stringToCheck + \" \");"},{"lineNumber":28,"author":{"gitId":"JulietTeoh"},"content":"    }"},{"lineNumber":29,"author":{"gitId":"JulietTeoh"},"content":""},{"lineNumber":30,"author":{"gitId":"JulietTeoh"},"content":"    private boolean equalsToList(String userInput) {"},{"lineNumber":31,"author":{"gitId":"JulietTeoh"},"content":"        return checkStringEquals(userInput, \"list\");"},{"lineNumber":32,"author":{"gitId":"JulietTeoh"},"content":"    }"},{"lineNumber":33,"author":{"gitId":"JulietTeoh"},"content":""},{"lineNumber":34,"author":{"gitId":"JulietTeoh"},"content":"    private boolean equalsToDone(String userInput) {"},{"lineNumber":35,"author":{"gitId":"JulietTeoh"},"content":"        return checkStringStartingEquals(userInput, \"done\");"},{"lineNumber":36,"author":{"gitId":"JulietTeoh"},"content":"    }"},{"lineNumber":37,"author":{"gitId":"JulietTeoh"},"content":""},{"lineNumber":38,"author":{"gitId":"JulietTeoh"},"content":"    /**"},{"lineNumber":39,"author":{"gitId":"JulietTeoh"},"content":"     * Parse a command that starts with done"},{"lineNumber":40,"author":{"gitId":"JulietTeoh"},"content":"     * @param userInput User Input that has \"done\" as its start"},{"lineNumber":41,"author":{"gitId":"JulietTeoh"},"content":"     * @return index of task to mark as done"},{"lineNumber":42,"author":{"gitId":"JulietTeoh"},"content":"     * @throws DukeException an exception to indicate an error"},{"lineNumber":43,"author":{"gitId":"JulietTeoh"},"content":"     */"},{"lineNumber":44,"author":{"gitId":"JulietTeoh"},"content":"    private int parseDoneCommand(String userInput) throws DukeException {"},{"lineNumber":45,"author":{"gitId":"JulietTeoh"},"content":"        int length \u003d \"done\".length();"},{"lineNumber":46,"author":{"gitId":"JulietTeoh"},"content":"        if (checkStringEquals(userInput, \"done\")) {"},{"lineNumber":47,"author":{"gitId":"JulietTeoh"},"content":"            throw new DukeException(\"Error! Please indicate the task \""},{"lineNumber":48,"author":{"gitId":"JulietTeoh"},"content":"                    + \"which is done by its number on the list\");"},{"lineNumber":49,"author":{"gitId":"JulietTeoh"},"content":"        } else if (!checkStringEquals(userInput.substring(length, length + 1), \" \")) {"},{"lineNumber":50,"author":{"gitId":"JulietTeoh"},"content":"            throw new DukeException(\"Error! Please include a space after done. \""},{"lineNumber":51,"author":{"gitId":"JulietTeoh"},"content":"                    + \"[eg. done 1]\");"},{"lineNumber":52,"author":{"gitId":"JulietTeoh"},"content":"        } else {"},{"lineNumber":53,"author":{"gitId":"JulietTeoh"},"content":"            try {"},{"lineNumber":54,"author":{"gitId":"JulietTeoh"},"content":"                int taskInt \u003d Integer.parseInt(userInput.split(\" \")[1]);"},{"lineNumber":55,"author":{"gitId":"JulietTeoh"},"content":"                return taskInt;"},{"lineNumber":56,"author":{"gitId":"JulietTeoh"},"content":"            } catch (NumberFormatException e) {"},{"lineNumber":57,"author":{"gitId":"JulietTeoh"},"content":"                throw new DukeException(\"Error! You must give a number corresponding \""},{"lineNumber":58,"author":{"gitId":"JulietTeoh"},"content":"                        + \"to a task on the list to check as done\");"},{"lineNumber":59,"author":{"gitId":"JulietTeoh"},"content":"            }"},{"lineNumber":60,"author":{"gitId":"JulietTeoh"},"content":"        }"},{"lineNumber":61,"author":{"gitId":"JulietTeoh"},"content":"    }"},{"lineNumber":62,"author":{"gitId":"JulietTeoh"},"content":""},{"lineNumber":63,"author":{"gitId":"JulietTeoh"},"content":"    private boolean equalsToDelete(String userInput) {"},{"lineNumber":64,"author":{"gitId":"JulietTeoh"},"content":"        return checkStringStartingEquals(userInput, \"delete\");"},{"lineNumber":65,"author":{"gitId":"JulietTeoh"},"content":"    }"},{"lineNumber":66,"author":{"gitId":"JulietTeoh"},"content":""},{"lineNumber":67,"author":{"gitId":"JulietTeoh"},"content":"    /**"},{"lineNumber":68,"author":{"gitId":"JulietTeoh"},"content":"     * Parse a command that starts with delete"},{"lineNumber":69,"author":{"gitId":"JulietTeoh"},"content":"     * @param userInput User input that has \"delete\" at its start"},{"lineNumber":70,"author":{"gitId":"JulietTeoh"},"content":"     * @return index of task to delete"},{"lineNumber":71,"author":{"gitId":"JulietTeoh"},"content":"     * @throws DukeException an exception to indicate an error"},{"lineNumber":72,"author":{"gitId":"JulietTeoh"},"content":"     */"},{"lineNumber":73,"author":{"gitId":"JulietTeoh"},"content":"    private int parseDeleteCommand(String userInput) throws DukeException {"},{"lineNumber":74,"author":{"gitId":"JulietTeoh"},"content":"        int length \u003d \"delete\".length();"},{"lineNumber":75,"author":{"gitId":"JulietTeoh"},"content":"        if (checkStringEquals(userInput, \"delete\")) {"},{"lineNumber":76,"author":{"gitId":"JulietTeoh"},"content":"            throw new DukeException(\"Error! Please indicate the task which want to delete by its number on the list\");"},{"lineNumber":77,"author":{"gitId":"JulietTeoh"},"content":"        } else if (!checkStringEquals(userInput.substring(length, length + 1), \" \")) {"},{"lineNumber":78,"author":{"gitId":"JulietTeoh"},"content":"            throw new DukeException(\"Error! Please include a space after delete. \""},{"lineNumber":79,"author":{"gitId":"JulietTeoh"},"content":"                    + \"[eg. delete 1]\");"},{"lineNumber":80,"author":{"gitId":"JulietTeoh"},"content":"        } else {"},{"lineNumber":81,"author":{"gitId":"JulietTeoh"},"content":"            try {"},{"lineNumber":82,"author":{"gitId":"JulietTeoh"},"content":"                int taskInt \u003d Integer.parseInt(userInput.split(\" \")[1]);"},{"lineNumber":83,"author":{"gitId":"JulietTeoh"},"content":"                return taskInt;"},{"lineNumber":84,"author":{"gitId":"JulietTeoh"},"content":"            } catch (NumberFormatException e) {"},{"lineNumber":85,"author":{"gitId":"JulietTeoh"},"content":"                throw new DukeException(\"Error! You must give a number corresponding to a task on the list to delete\");"},{"lineNumber":86,"author":{"gitId":"JulietTeoh"},"content":"            }"},{"lineNumber":87,"author":{"gitId":"JulietTeoh"},"content":"        }"},{"lineNumber":88,"author":{"gitId":"JulietTeoh"},"content":"    }"},{"lineNumber":89,"author":{"gitId":"JulietTeoh"},"content":""},{"lineNumber":90,"author":{"gitId":"JulietTeoh"},"content":"    private boolean equalsToToDo(String userInput) {"},{"lineNumber":91,"author":{"gitId":"JulietTeoh"},"content":"        return checkStringStartingEquals(userInput, \"todo\");"},{"lineNumber":92,"author":{"gitId":"JulietTeoh"},"content":"    }"},{"lineNumber":93,"author":{"gitId":"JulietTeoh"},"content":""},{"lineNumber":94,"author":{"gitId":"JulietTeoh"},"content":"    /**"},{"lineNumber":95,"author":{"gitId":"JulietTeoh"},"content":"     * Parse a command that starts with \"todo\""},{"lineNumber":96,"author":{"gitId":"JulietTeoh"},"content":"     * @param userInput User input with todo at its start"},{"lineNumber":97,"author":{"gitId":"JulietTeoh"},"content":"     * @return description of todo task to add"},{"lineNumber":98,"author":{"gitId":"JulietTeoh"},"content":"     * @throws DukeException an exception to indicate an error"},{"lineNumber":99,"author":{"gitId":"JulietTeoh"},"content":"     */"},{"lineNumber":100,"author":{"gitId":"JulietTeoh"},"content":"    private String parseToDoCommand(String userInput) throws DukeException {"},{"lineNumber":101,"author":{"gitId":"JulietTeoh"},"content":"        int length \u003d \"todo\".length();"},{"lineNumber":102,"author":{"gitId":"JulietTeoh"},"content":"        if (checkStringEquals(userInput, \"todo\")) {"},{"lineNumber":103,"author":{"gitId":"JulietTeoh"},"content":"            throw new DukeException(\"Error! The description of a todo cannot be empty!\");"},{"lineNumber":104,"author":{"gitId":"JulietTeoh"},"content":"        } else if (!checkStringEquals(userInput.substring(length, length + 1), \" \")) {"},{"lineNumber":105,"author":{"gitId":"JulietTeoh"},"content":"            throw new DukeException(\"Error! Please include a space after todo. [eg. todo sleep]\");"},{"lineNumber":106,"author":{"gitId":"JulietTeoh"},"content":"        } else {"},{"lineNumber":107,"author":{"gitId":"JulietTeoh"},"content":"            return userInput.substring(length + 1);"},{"lineNumber":108,"author":{"gitId":"JulietTeoh"},"content":"        }"},{"lineNumber":109,"author":{"gitId":"JulietTeoh"},"content":"    }"},{"lineNumber":110,"author":{"gitId":"JulietTeoh"},"content":""},{"lineNumber":111,"author":{"gitId":"JulietTeoh"},"content":"    private boolean equalsToEvent(String userInput) {"},{"lineNumber":112,"author":{"gitId":"JulietTeoh"},"content":"        return checkStringStartingEquals(userInput, \"event\");"},{"lineNumber":113,"author":{"gitId":"JulietTeoh"},"content":"    }"},{"lineNumber":114,"author":{"gitId":"JulietTeoh"},"content":""},{"lineNumber":115,"author":{"gitId":"JulietTeoh"},"content":"    /**"},{"lineNumber":116,"author":{"gitId":"JulietTeoh"},"content":"     * Parse a command that has with event"},{"lineNumber":117,"author":{"gitId":"JulietTeoh"},"content":"     * @param userInput User input with event at it sstart"},{"lineNumber":118,"author":{"gitId":"JulietTeoh"},"content":"     * @return description of event and description of where the event is at in an arraylist"},{"lineNumber":119,"author":{"gitId":"JulietTeoh"},"content":"     * @throws DukeException an exception to indicate an error"},{"lineNumber":120,"author":{"gitId":"JulietTeoh"},"content":"     */"},{"lineNumber":121,"author":{"gitId":"JulietTeoh"},"content":"    private ArrayList\u003cString\u003e parseEventCommand(String userInput) throws DukeException {"},{"lineNumber":122,"author":{"gitId":"JulietTeoh"},"content":"        int length \u003d \"event\".length();"},{"lineNumber":123,"author":{"gitId":"JulietTeoh"},"content":"        if (checkStringEquals(userInput, \"event\")) {"},{"lineNumber":124,"author":{"gitId":"JulietTeoh"},"content":"            throw new DukeException(\"Error! The description of a event cannot be empty!\");"},{"lineNumber":125,"author":{"gitId":"JulietTeoh"},"content":"        } else if (!checkStringEquals(userInput.substring(length, length + 1), \" \")) {"},{"lineNumber":126,"author":{"gitId":"JulietTeoh"},"content":"            throw new DukeException(\"Error! Please include a space after event. [eg. event read /at 9pm]\");"},{"lineNumber":127,"author":{"gitId":"JulietTeoh"},"content":"        } else {"},{"lineNumber":128,"author":{"gitId":"JulietTeoh"},"content":"            if (userInput.contains(\" /at \")) {"},{"lineNumber":129,"author":{"gitId":"JulietTeoh"},"content":"                String[] arr \u003d userInput.substring(length + 1).split(\" /at \");"},{"lineNumber":130,"author":{"gitId":"JulietTeoh"},"content":"                String eventDescription \u003d arr[0];"},{"lineNumber":131,"author":{"gitId":"JulietTeoh"},"content":"                String descriptionAt \u003d arr[1];"},{"lineNumber":132,"author":{"gitId":"JulietTeoh"},"content":""},{"lineNumber":133,"author":{"gitId":"JulietTeoh"},"content":"                ArrayList\u003cString\u003e tempArr \u003d new ArrayList\u003c\u003e();"},{"lineNumber":134,"author":{"gitId":"JulietTeoh"},"content":"                tempArr.add(eventDescription);"},{"lineNumber":135,"author":{"gitId":"JulietTeoh"},"content":"                tempArr.add(descriptionAt);"},{"lineNumber":136,"author":{"gitId":"JulietTeoh"},"content":""},{"lineNumber":137,"author":{"gitId":"JulietTeoh"},"content":"                return tempArr;"},{"lineNumber":138,"author":{"gitId":"JulietTeoh"},"content":"            } else {"},{"lineNumber":139,"author":{"gitId":"JulietTeoh"},"content":"                throw new DukeException(\"Error! Please provide where and when the\""},{"lineNumber":140,"author":{"gitId":"JulietTeoh"},"content":"                        + \" event will take place after /at. [eg event read /at 9pm]\");"},{"lineNumber":141,"author":{"gitId":"JulietTeoh"},"content":"            }"},{"lineNumber":142,"author":{"gitId":"JulietTeoh"},"content":"        }"},{"lineNumber":143,"author":{"gitId":"JulietTeoh"},"content":"    }"},{"lineNumber":144,"author":{"gitId":"JulietTeoh"},"content":""},{"lineNumber":145,"author":{"gitId":"JulietTeoh"},"content":"    private boolean equalsToDeadline(String userInput) {"},{"lineNumber":146,"author":{"gitId":"JulietTeoh"},"content":"        return checkStringStartingEquals(userInput, \"deadline\");"},{"lineNumber":147,"author":{"gitId":"JulietTeoh"},"content":"    }"},{"lineNumber":148,"author":{"gitId":"JulietTeoh"},"content":"    private ArrayList\u003cString\u003e parseDeadlineCommand(String userInput) throws DukeException {"},{"lineNumber":149,"author":{"gitId":"JulietTeoh"},"content":"        int length \u003d \"deadline\".length();"},{"lineNumber":150,"author":{"gitId":"JulietTeoh"},"content":"        if (checkStringEquals(userInput, \"deadline\")) {"},{"lineNumber":151,"author":{"gitId":"JulietTeoh"},"content":"            throw new DukeException(\"Error! The description of a deadline cannot be empty!\");"},{"lineNumber":152,"author":{"gitId":"JulietTeoh"},"content":"        } else if (!checkStringEquals(userInput.substring(length, length + 1), \" \")) {"},{"lineNumber":153,"author":{"gitId":"JulietTeoh"},"content":"            throw new DukeException(\"Error! Please include a space after deadline. \""},{"lineNumber":154,"author":{"gitId":"JulietTeoh"},"content":"                    + \"[eg. deadline submit work /by 2020-03-20]\");"},{"lineNumber":155,"author":{"gitId":"JulietTeoh"},"content":"        } else {"},{"lineNumber":156,"author":{"gitId":"JulietTeoh"},"content":"            if (userInput.contains(\" /by \")) {"},{"lineNumber":157,"author":{"gitId":"JulietTeoh"},"content":"                String[] arr \u003d userInput.substring(length + 1).split(\" /by \");"},{"lineNumber":158,"author":{"gitId":"JulietTeoh"},"content":"                String deadlineDescription \u003d arr[0];"},{"lineNumber":159,"author":{"gitId":"JulietTeoh"},"content":"                String descriptionBy \u003d arr[1];"},{"lineNumber":160,"author":{"gitId":"JulietTeoh"},"content":""},{"lineNumber":161,"author":{"gitId":"JulietTeoh"},"content":"                ArrayList\u003cString\u003e tempArr \u003d new ArrayList\u003c\u003e();"},{"lineNumber":162,"author":{"gitId":"JulietTeoh"},"content":"                tempArr.add(deadlineDescription);"},{"lineNumber":163,"author":{"gitId":"JulietTeoh"},"content":"                tempArr.add(descriptionBy);"},{"lineNumber":164,"author":{"gitId":"JulietTeoh"},"content":""},{"lineNumber":165,"author":{"gitId":"JulietTeoh"},"content":"                return tempArr;"},{"lineNumber":166,"author":{"gitId":"JulietTeoh"},"content":"            } else {"},{"lineNumber":167,"author":{"gitId":"JulietTeoh"},"content":"                throw new DukeException(\"Error! Please provide when the deadline will be due after /by. \""},{"lineNumber":168,"author":{"gitId":"JulietTeoh"},"content":"                        + \"[eg. deadline submit work /by 2020-03-20]\");"},{"lineNumber":169,"author":{"gitId":"JulietTeoh"},"content":"            }"},{"lineNumber":170,"author":{"gitId":"JulietTeoh"},"content":"        }"},{"lineNumber":171,"author":{"gitId":"JulietTeoh"},"content":"    }"},{"lineNumber":172,"author":{"gitId":"JulietTeoh"},"content":""},{"lineNumber":173,"author":{"gitId":"JulietTeoh"},"content":"    private boolean equalsToFind(String userInput) {"},{"lineNumber":174,"author":{"gitId":"JulietTeoh"},"content":"        return checkStringStartingEquals(userInput, \"find\");"},{"lineNumber":175,"author":{"gitId":"JulietTeoh"},"content":"    }"},{"lineNumber":176,"author":{"gitId":"JulietTeoh"},"content":"    private String parseFindCommand(String userInput) throws DukeException {"},{"lineNumber":177,"author":{"gitId":"JulietTeoh"},"content":"        int length \u003d \"find\".length();"},{"lineNumber":178,"author":{"gitId":"JulietTeoh"},"content":"        if (checkStringEquals(userInput, \"find\")) {"},{"lineNumber":179,"author":{"gitId":"JulietTeoh"},"content":"            throw new DukeException(\"Error! The description of what you wish to find cannot be empty!\");"},{"lineNumber":180,"author":{"gitId":"JulietTeoh"},"content":"        } else if (!checkStringEquals(userInput.substring(length, length + 1), \" \")) {"},{"lineNumber":181,"author":{"gitId":"JulietTeoh"},"content":"            throw new DukeException(\"Error! Please include a space after the string you wish to find.\");"},{"lineNumber":182,"author":{"gitId":"JulietTeoh"},"content":"        } else {"},{"lineNumber":183,"author":{"gitId":"JulietTeoh"},"content":"            return userInput.substring(length + 1);"},{"lineNumber":184,"author":{"gitId":"JulietTeoh"},"content":"        }"},{"lineNumber":185,"author":{"gitId":"JulietTeoh"},"content":"    }"},{"lineNumber":186,"author":{"gitId":"JulietTeoh"},"content":""},{"lineNumber":187,"author":{"gitId":"JulietTeoh"},"content":"    private boolean equalsToUpdate(String userInput) {"},{"lineNumber":188,"author":{"gitId":"JulietTeoh"},"content":"        return checkStringStartingEquals(userInput, \"update\");"},{"lineNumber":189,"author":{"gitId":"JulietTeoh"},"content":"    }"},{"lineNumber":190,"author":{"gitId":"JulietTeoh"},"content":"    private ArrayList\u003cString\u003e parseUpdateCommand(String userInput) throws DukeException {"},{"lineNumber":191,"author":{"gitId":"JulietTeoh"},"content":"        int length \u003d \"update\".length();"},{"lineNumber":192,"author":{"gitId":"JulietTeoh"},"content":"        if (checkStringEquals(userInput, \"update\")) {"},{"lineNumber":193,"author":{"gitId":"JulietTeoh"},"content":"            throw new DukeException(\"Error! The description of what you wish to find cannot be empty!\");"},{"lineNumber":194,"author":{"gitId":"JulietTeoh"},"content":"        } else if (!checkStringEquals(userInput.substring(length, length + 1), \" \")) {"},{"lineNumber":195,"author":{"gitId":"JulietTeoh"},"content":"            throw new DukeException(\"Error! Please include a space after the string you wish to find.\");"},{"lineNumber":196,"author":{"gitId":"JulietTeoh"},"content":"        } else {"},{"lineNumber":197,"author":{"gitId":"JulietTeoh"},"content":"            ArrayList\u003cString\u003e descriptionArr \u003d new ArrayList\u003c\u003e();"},{"lineNumber":198,"author":{"gitId":"JulietTeoh"},"content":"            if (userInput.contains(\"/de\") \u0026\u0026 userInput.contains(\"/by\")) {"},{"lineNumber":199,"author":{"gitId":"JulietTeoh"},"content":"                parseDeAndBy(descriptionArr, userInput);"},{"lineNumber":200,"author":{"gitId":"JulietTeoh"},"content":"            } else if (userInput.contains(\"/de\") \u0026\u0026 userInput.contains(\"/at\")) {"},{"lineNumber":201,"author":{"gitId":"JulietTeoh"},"content":"                parseDeAndAt(descriptionArr, userInput);"},{"lineNumber":202,"author":{"gitId":"JulietTeoh"},"content":"            } else if (userInput.contains(\"/de\")) {"},{"lineNumber":203,"author":{"gitId":"JulietTeoh"},"content":"                parseOnlyDe(descriptionArr, userInput);"},{"lineNumber":204,"author":{"gitId":"JulietTeoh"},"content":"            } else if (userInput.contains(\"/at\")) {"},{"lineNumber":205,"author":{"gitId":"JulietTeoh"},"content":"                parseOnlyAt(descriptionArr, userInput);"},{"lineNumber":206,"author":{"gitId":"JulietTeoh"},"content":"            } else if (userInput.contains(\"/by\")) {"},{"lineNumber":207,"author":{"gitId":"JulietTeoh"},"content":"                parseOnlyBy(descriptionArr, userInput);"},{"lineNumber":208,"author":{"gitId":"JulietTeoh"},"content":"            } else {"},{"lineNumber":209,"author":{"gitId":"JulietTeoh"},"content":"                throw new DukeException(\"Error! Please use the correct tags!\\n\""},{"lineNumber":210,"author":{"gitId":"JulietTeoh"},"content":"                    + \"/de for the general description of all tasks\\n\""},{"lineNumber":211,"author":{"gitId":"JulietTeoh"},"content":"                    + \"/by for deadline tasks of the format year-month-data in numbers\\n\""},{"lineNumber":212,"author":{"gitId":"JulietTeoh"},"content":"                    + \"/at for event tasks\");"},{"lineNumber":213,"author":{"gitId":"JulietTeoh"},"content":"            }"},{"lineNumber":214,"author":{"gitId":"JulietTeoh"},"content":"            return descriptionArr;"},{"lineNumber":215,"author":{"gitId":"JulietTeoh"},"content":"        }"},{"lineNumber":216,"author":{"gitId":"JulietTeoh"},"content":"    }"},{"lineNumber":217,"author":{"gitId":"JulietTeoh"},"content":"    private void parseDeAndBy(ArrayList\u003cString\u003e descriptionArr, String userInput) throws DukeException {"},{"lineNumber":218,"author":{"gitId":"JulietTeoh"},"content":"        int deFrom \u003d userInput.indexOf(\"/de\");"},{"lineNumber":219,"author":{"gitId":"JulietTeoh"},"content":"        int byFrom \u003d userInput.indexOf(\"/by\");"},{"lineNumber":220,"author":{"gitId":"JulietTeoh"},"content":""},{"lineNumber":221,"author":{"gitId":"JulietTeoh"},"content":"        if (deFrom \u003e byFrom) {"},{"lineNumber":222,"author":{"gitId":"JulietTeoh"},"content":"            int deStart \u003d deFrom + 3;"},{"lineNumber":223,"author":{"gitId":"JulietTeoh"},"content":"            int deEnd \u003d userInput.length();"},{"lineNumber":224,"author":{"gitId":"JulietTeoh"},"content":"            int byStart \u003d byFrom + 3;"},{"lineNumber":225,"author":{"gitId":"JulietTeoh"},"content":"            int byEnd \u003d deFrom - 1;"},{"lineNumber":226,"author":{"gitId":"JulietTeoh"},"content":"            if (deStart \u003d\u003d deEnd) {"},{"lineNumber":227,"author":{"gitId":"JulietTeoh"},"content":"                throw new DukeException(\"/de cannot be empty!\");"},{"lineNumber":228,"author":{"gitId":"JulietTeoh"},"content":"            }"},{"lineNumber":229,"author":{"gitId":"JulietTeoh"},"content":"            if (byStart \u003d\u003d byEnd) {"},{"lineNumber":230,"author":{"gitId":"JulietTeoh"},"content":"                throw new DukeException(\"/by cannot be empty!\");"},{"lineNumber":231,"author":{"gitId":"JulietTeoh"},"content":"            }"},{"lineNumber":232,"author":{"gitId":"JulietTeoh"},"content":""},{"lineNumber":233,"author":{"gitId":"JulietTeoh"},"content":"            descriptionArr.add(\"/de\");"},{"lineNumber":234,"author":{"gitId":"JulietTeoh"},"content":"            descriptionArr.add(userInput.substring(deStart, deEnd).trim());"},{"lineNumber":235,"author":{"gitId":"JulietTeoh"},"content":"            descriptionArr.add(\"/by\");"},{"lineNumber":236,"author":{"gitId":"JulietTeoh"},"content":"            descriptionArr.add(userInput.substring(byStart, byEnd).trim());"},{"lineNumber":237,"author":{"gitId":"JulietTeoh"},"content":"        } else {"},{"lineNumber":238,"author":{"gitId":"JulietTeoh"},"content":"            int deStart \u003d deFrom + 3;"},{"lineNumber":239,"author":{"gitId":"JulietTeoh"},"content":"            int deEnd \u003d byFrom - 1;"},{"lineNumber":240,"author":{"gitId":"JulietTeoh"},"content":"            int byStart \u003d byFrom + 3;"},{"lineNumber":241,"author":{"gitId":"JulietTeoh"},"content":"            int byEnd \u003d userInput.length();"},{"lineNumber":242,"author":{"gitId":"JulietTeoh"},"content":""},{"lineNumber":243,"author":{"gitId":"JulietTeoh"},"content":"            if (deStart \u003d\u003d deEnd) {"},{"lineNumber":244,"author":{"gitId":"JulietTeoh"},"content":"                throw new DukeException(\"/de cannot be empty!\");"},{"lineNumber":245,"author":{"gitId":"JulietTeoh"},"content":"            }"},{"lineNumber":246,"author":{"gitId":"JulietTeoh"},"content":"            if (byStart \u003d\u003d byEnd) {"},{"lineNumber":247,"author":{"gitId":"JulietTeoh"},"content":"                throw new DukeException(\"/by cannot be empty!\");"},{"lineNumber":248,"author":{"gitId":"JulietTeoh"},"content":"            }"},{"lineNumber":249,"author":{"gitId":"JulietTeoh"},"content":""},{"lineNumber":250,"author":{"gitId":"JulietTeoh"},"content":"            descriptionArr.add(\"/de\");"},{"lineNumber":251,"author":{"gitId":"JulietTeoh"},"content":"            descriptionArr.add(userInput.substring(deStart, deEnd).trim());"},{"lineNumber":252,"author":{"gitId":"JulietTeoh"},"content":"            descriptionArr.add(\"/by\");"},{"lineNumber":253,"author":{"gitId":"JulietTeoh"},"content":"            descriptionArr.add(userInput.substring(byStart, byEnd).trim());"},{"lineNumber":254,"author":{"gitId":"JulietTeoh"},"content":"        }"},{"lineNumber":255,"author":{"gitId":"JulietTeoh"},"content":"    }"},{"lineNumber":256,"author":{"gitId":"JulietTeoh"},"content":""},{"lineNumber":257,"author":{"gitId":"JulietTeoh"},"content":"    private void parseDeAndAt(ArrayList\u003cString\u003e descriptionArr, String userInput) throws DukeException {"},{"lineNumber":258,"author":{"gitId":"JulietTeoh"},"content":"        int deFrom \u003d userInput.indexOf(\"/de\");"},{"lineNumber":259,"author":{"gitId":"JulietTeoh"},"content":"        int atFrom \u003d userInput.indexOf(\"/at\");"},{"lineNumber":260,"author":{"gitId":"JulietTeoh"},"content":""},{"lineNumber":261,"author":{"gitId":"JulietTeoh"},"content":"        if (deFrom \u003e atFrom) {"},{"lineNumber":262,"author":{"gitId":"JulietTeoh"},"content":"            int deStart \u003d deFrom + 3;"},{"lineNumber":263,"author":{"gitId":"JulietTeoh"},"content":"            int deEnd \u003d userInput.length();"},{"lineNumber":264,"author":{"gitId":"JulietTeoh"},"content":"            int atStart \u003d atFrom + 3;"},{"lineNumber":265,"author":{"gitId":"JulietTeoh"},"content":"            int atEnd \u003d deFrom - 1;"},{"lineNumber":266,"author":{"gitId":"JulietTeoh"},"content":""},{"lineNumber":267,"author":{"gitId":"JulietTeoh"},"content":"            if (deStart \u003d\u003d deEnd) {"},{"lineNumber":268,"author":{"gitId":"JulietTeoh"},"content":"                throw new DukeException(\"/de cannot be empty!\");"},{"lineNumber":269,"author":{"gitId":"JulietTeoh"},"content":"            }"},{"lineNumber":270,"author":{"gitId":"JulietTeoh"},"content":"            if (atStart \u003d\u003d atEnd) {"},{"lineNumber":271,"author":{"gitId":"JulietTeoh"},"content":"                throw new DukeException(\"/at cannot be empty!\");"},{"lineNumber":272,"author":{"gitId":"JulietTeoh"},"content":"            }"},{"lineNumber":273,"author":{"gitId":"JulietTeoh"},"content":""},{"lineNumber":274,"author":{"gitId":"JulietTeoh"},"content":"            descriptionArr.add(\"/de\");"},{"lineNumber":275,"author":{"gitId":"JulietTeoh"},"content":"            descriptionArr.add(userInput.substring(deStart, deEnd).trim());"},{"lineNumber":276,"author":{"gitId":"JulietTeoh"},"content":"            descriptionArr.add(\"/at\");"},{"lineNumber":277,"author":{"gitId":"JulietTeoh"},"content":"            descriptionArr.add(userInput.substring(atStart, atEnd).trim());"},{"lineNumber":278,"author":{"gitId":"JulietTeoh"},"content":"        } else {"},{"lineNumber":279,"author":{"gitId":"JulietTeoh"},"content":"            int deStart \u003d deFrom + 3;"},{"lineNumber":280,"author":{"gitId":"JulietTeoh"},"content":"            int deEnd \u003d atFrom - 1;"},{"lineNumber":281,"author":{"gitId":"JulietTeoh"},"content":"            int atStart \u003d atFrom + 3;"},{"lineNumber":282,"author":{"gitId":"JulietTeoh"},"content":"            int atEnd \u003d userInput.length();"},{"lineNumber":283,"author":{"gitId":"JulietTeoh"},"content":""},{"lineNumber":284,"author":{"gitId":"JulietTeoh"},"content":"            if (deStart \u003d\u003d deEnd) {"},{"lineNumber":285,"author":{"gitId":"JulietTeoh"},"content":"                throw new DukeException(\"/de cannot be empty!\");"},{"lineNumber":286,"author":{"gitId":"JulietTeoh"},"content":"            }"},{"lineNumber":287,"author":{"gitId":"JulietTeoh"},"content":"            if (atStart \u003d\u003d atEnd) {"},{"lineNumber":288,"author":{"gitId":"JulietTeoh"},"content":"                throw new DukeException(\"/at cannot be empty!\");"},{"lineNumber":289,"author":{"gitId":"JulietTeoh"},"content":"            }"},{"lineNumber":290,"author":{"gitId":"JulietTeoh"},"content":""},{"lineNumber":291,"author":{"gitId":"JulietTeoh"},"content":"            descriptionArr.add(\"/de\");"},{"lineNumber":292,"author":{"gitId":"JulietTeoh"},"content":"            descriptionArr.add(userInput.substring(deStart, deEnd).trim());"},{"lineNumber":293,"author":{"gitId":"JulietTeoh"},"content":"            descriptionArr.add(\"/at\");"},{"lineNumber":294,"author":{"gitId":"JulietTeoh"},"content":"            descriptionArr.add(userInput.substring(atStart, atEnd).trim());"},{"lineNumber":295,"author":{"gitId":"JulietTeoh"},"content":"        }"},{"lineNumber":296,"author":{"gitId":"JulietTeoh"},"content":"    }"},{"lineNumber":297,"author":{"gitId":"JulietTeoh"},"content":""},{"lineNumber":298,"author":{"gitId":"JulietTeoh"},"content":"    private void parseOnlyDe(ArrayList\u003cString\u003e descriptionArr, String userInput) throws DukeException {"},{"lineNumber":299,"author":{"gitId":"JulietTeoh"},"content":"        int deFrom \u003d userInput.indexOf(\"/de\");"},{"lineNumber":300,"author":{"gitId":"JulietTeoh"},"content":"        int deStart \u003d deFrom + 3;"},{"lineNumber":301,"author":{"gitId":"JulietTeoh"},"content":"        int deEnd \u003d userInput.length();"},{"lineNumber":302,"author":{"gitId":"JulietTeoh"},"content":""},{"lineNumber":303,"author":{"gitId":"JulietTeoh"},"content":"        if (deStart \u003d\u003d deEnd) {"},{"lineNumber":304,"author":{"gitId":"JulietTeoh"},"content":"            throw new DukeException(\"/de cannot be empty!\");"},{"lineNumber":305,"author":{"gitId":"JulietTeoh"},"content":"        }"},{"lineNumber":306,"author":{"gitId":"JulietTeoh"},"content":"        descriptionArr.add(\"/de\");"},{"lineNumber":307,"author":{"gitId":"JulietTeoh"},"content":"        descriptionArr.add(userInput.substring(deStart, deEnd).trim());"},{"lineNumber":308,"author":{"gitId":"JulietTeoh"},"content":"    }"},{"lineNumber":309,"author":{"gitId":"JulietTeoh"},"content":""},{"lineNumber":310,"author":{"gitId":"JulietTeoh"},"content":"    private void parseOnlyAt(ArrayList\u003cString\u003e descriptionArr, String userInput) throws DukeException {"},{"lineNumber":311,"author":{"gitId":"JulietTeoh"},"content":"        int atFrom \u003d userInput.indexOf(\"/at\");"},{"lineNumber":312,"author":{"gitId":"JulietTeoh"},"content":"        int atStart \u003d atFrom + 3;"},{"lineNumber":313,"author":{"gitId":"JulietTeoh"},"content":"        int atEnd \u003d userInput.length();"},{"lineNumber":314,"author":{"gitId":"JulietTeoh"},"content":""},{"lineNumber":315,"author":{"gitId":"JulietTeoh"},"content":"        if (atStart \u003d\u003d atEnd) {"},{"lineNumber":316,"author":{"gitId":"JulietTeoh"},"content":"            throw new DukeException(\"/at cannot be empty!\");"},{"lineNumber":317,"author":{"gitId":"JulietTeoh"},"content":"        }"},{"lineNumber":318,"author":{"gitId":"JulietTeoh"},"content":"        descriptionArr.add(\"/at\");"},{"lineNumber":319,"author":{"gitId":"JulietTeoh"},"content":"        descriptionArr.add(userInput.substring(atStart, atEnd).trim());"},{"lineNumber":320,"author":{"gitId":"JulietTeoh"},"content":"    }"},{"lineNumber":321,"author":{"gitId":"JulietTeoh"},"content":""},{"lineNumber":322,"author":{"gitId":"JulietTeoh"},"content":"    private void parseOnlyBy(ArrayList\u003cString\u003e descriptionArr, String userInput) throws DukeException {"},{"lineNumber":323,"author":{"gitId":"JulietTeoh"},"content":"        int byFrom \u003d userInput.indexOf(\"/by\");"},{"lineNumber":324,"author":{"gitId":"JulietTeoh"},"content":"        int byStart \u003d byFrom + 3;"},{"lineNumber":325,"author":{"gitId":"JulietTeoh"},"content":"        int byEnd \u003d userInput.length();"},{"lineNumber":326,"author":{"gitId":"JulietTeoh"},"content":""},{"lineNumber":327,"author":{"gitId":"JulietTeoh"},"content":"        if (byStart \u003d\u003d byEnd) {"},{"lineNumber":328,"author":{"gitId":"JulietTeoh"},"content":"            throw new DukeException(\"/by cannot be empty!\");"},{"lineNumber":329,"author":{"gitId":"JulietTeoh"},"content":"        }"},{"lineNumber":330,"author":{"gitId":"JulietTeoh"},"content":"        descriptionArr.add(\"/by\");"},{"lineNumber":331,"author":{"gitId":"JulietTeoh"},"content":"        descriptionArr.add(userInput.substring(byStart, byEnd).trim());"},{"lineNumber":332,"author":{"gitId":"JulietTeoh"},"content":"    }"},{"lineNumber":333,"author":{"gitId":"JulietTeoh"},"content":""},{"lineNumber":334,"author":{"gitId":"JulietTeoh"},"content":"    private int getUpdateTaskIndex(String userInput) throws DukeException {"},{"lineNumber":335,"author":{"gitId":"JulietTeoh"},"content":"        int length \u003d \"update\".length();"},{"lineNumber":336,"author":{"gitId":"JulietTeoh"},"content":"        if (checkStringEquals(userInput, \"update\")) {"},{"lineNumber":337,"author":{"gitId":"JulietTeoh"},"content":"            throw new DukeException(\"Error! Please indicate the task which want to update by its number on the list\");"},{"lineNumber":338,"author":{"gitId":"JulietTeoh"},"content":"        } else if (!checkStringEquals(userInput.substring(length, length + 1), \" \")) {"},{"lineNumber":339,"author":{"gitId":"JulietTeoh"},"content":"            throw new DukeException(\"Error! Please include a space after update.\");"},{"lineNumber":340,"author":{"gitId":"JulietTeoh"},"content":"        } else {"},{"lineNumber":341,"author":{"gitId":"JulietTeoh"},"content":"            try {"},{"lineNumber":342,"author":{"gitId":"JulietTeoh"},"content":"                int taskInt \u003d Integer.parseInt(userInput.split(\" \")[1]);"},{"lineNumber":343,"author":{"gitId":"JulietTeoh"},"content":"                return taskInt;"},{"lineNumber":344,"author":{"gitId":"JulietTeoh"},"content":"            } catch (NumberFormatException e) {"},{"lineNumber":345,"author":{"gitId":"JulietTeoh"},"content":"                throw new DukeException(\"Error! You must give a number corresponding to a task on the list to update\");"},{"lineNumber":346,"author":{"gitId":"JulietTeoh"},"content":"            }"},{"lineNumber":347,"author":{"gitId":"JulietTeoh"},"content":"        }"},{"lineNumber":348,"author":{"gitId":"JulietTeoh"},"content":"    }"},{"lineNumber":349,"author":{"gitId":"JulietTeoh"},"content":""},{"lineNumber":350,"author":{"gitId":"JulietTeoh"},"content":"    public boolean checkIfExit(String userInput) {"},{"lineNumber":351,"author":{"gitId":"JulietTeoh"},"content":"        return userInput.equals(\"bye\");"},{"lineNumber":352,"author":{"gitId":"JulietTeoh"},"content":"    }"},{"lineNumber":353,"author":{"gitId":"JulietTeoh"},"content":""},{"lineNumber":354,"author":{"gitId":"JulietTeoh"},"content":"    /**"},{"lineNumber":355,"author":{"gitId":"JulietTeoh"},"content":"     * Parses user input and return a command that can be executed"},{"lineNumber":356,"author":{"gitId":"JulietTeoh"},"content":"     *"},{"lineNumber":357,"author":{"gitId":"JulietTeoh"},"content":"     * @param userInput userInput to parse"},{"lineNumber":358,"author":{"gitId":"JulietTeoh"},"content":"     * @return Command that can be executed"},{"lineNumber":359,"author":{"gitId":"JulietTeoh"},"content":"     * @throws DukeException an execption"},{"lineNumber":360,"author":{"gitId":"JulietTeoh"},"content":"     */"},{"lineNumber":361,"author":{"gitId":"JulietTeoh"},"content":"    public Command parse(String userInput) throws DukeException {"},{"lineNumber":362,"author":{"gitId":"JulietTeoh"},"content":"        try {"},{"lineNumber":363,"author":{"gitId":"JulietTeoh"},"content":"            if (this.equalsToList(userInput)) {"},{"lineNumber":364,"author":{"gitId":"JulietTeoh"},"content":"                return new ShowListCommand();"},{"lineNumber":365,"author":{"gitId":"JulietTeoh"},"content":"            } else if (this.equalsToDone(userInput)) {"},{"lineNumber":366,"author":{"gitId":"JulietTeoh"},"content":"                int taskDoneInt \u003d this.parseDoneCommand(userInput);"},{"lineNumber":367,"author":{"gitId":"JulietTeoh"},"content":"                return new DoneCommand(taskDoneInt);"},{"lineNumber":368,"author":{"gitId":"JulietTeoh"},"content":"            } else if (this.equalsToDelete(userInput)) {"},{"lineNumber":369,"author":{"gitId":"JulietTeoh"},"content":"                int taskDeleteInt \u003d this.parseDeleteCommand(userInput);"},{"lineNumber":370,"author":{"gitId":"JulietTeoh"},"content":"                return new DeleteCommand(taskDeleteInt);"},{"lineNumber":371,"author":{"gitId":"JulietTeoh"},"content":"            } else if (this.equalsToToDo(userInput)) {"},{"lineNumber":372,"author":{"gitId":"JulietTeoh"},"content":"                String toDoDescription \u003d this.parseToDoCommand(userInput);"},{"lineNumber":373,"author":{"gitId":"JulietTeoh"},"content":"                return new ToDoCommand(toDoDescription);"},{"lineNumber":374,"author":{"gitId":"JulietTeoh"},"content":"            } else if (this.equalsToEvent(userInput)) {"},{"lineNumber":375,"author":{"gitId":"JulietTeoh"},"content":"                ArrayList\u003cString\u003e eventDescription \u003d this.parseEventCommand(userInput);"},{"lineNumber":376,"author":{"gitId":"JulietTeoh"},"content":"                return new EventCommand(eventDescription);"},{"lineNumber":377,"author":{"gitId":"JulietTeoh"},"content":"            } else if (this.equalsToDeadline(userInput)) {"},{"lineNumber":378,"author":{"gitId":"JulietTeoh"},"content":"                ArrayList\u003cString\u003e eventDescription \u003d this.parseDeadlineCommand(userInput);"},{"lineNumber":379,"author":{"gitId":"JulietTeoh"},"content":"                return new DeadlineCommand(eventDescription);"},{"lineNumber":380,"author":{"gitId":"JulietTeoh"},"content":"            } else if (this.equalsToFind(userInput)) {"},{"lineNumber":381,"author":{"gitId":"JulietTeoh"},"content":"                String stringToFind \u003d this.parseFindCommand(userInput);"},{"lineNumber":382,"author":{"gitId":"JulietTeoh"},"content":"                return new FindCommand(stringToFind);"},{"lineNumber":383,"author":{"gitId":"JulietTeoh"},"content":"            } else if (this.equalsToUpdate(userInput)) {"},{"lineNumber":384,"author":{"gitId":"JulietTeoh"},"content":"                int taskUpdateInt \u003d this.getUpdateTaskIndex(userInput);"},{"lineNumber":385,"author":{"gitId":"JulietTeoh"},"content":"                ArrayList\u003cString\u003e arrOfDescriptionToChange \u003d this.parseUpdateCommand(userInput);"},{"lineNumber":386,"author":{"gitId":"JulietTeoh"},"content":"                return new UpdateCommand(taskUpdateInt, arrOfDescriptionToChange);"},{"lineNumber":387,"author":{"gitId":"JulietTeoh"},"content":"            } else {"},{"lineNumber":388,"author":{"gitId":"JulietTeoh"},"content":"                throw new DukeException(\"I\u0027m sorry, but I don\u0027t know what that means\");"},{"lineNumber":389,"author":{"gitId":"JulietTeoh"},"content":"            }"},{"lineNumber":390,"author":{"gitId":"JulietTeoh"},"content":"        } catch (DukeException e) {"},{"lineNumber":391,"author":{"gitId":"JulietTeoh"},"content":"            throw e;"},{"lineNumber":392,"author":{"gitId":"JulietTeoh"},"content":"        }"},{"lineNumber":393,"author":{"gitId":"JulietTeoh"},"content":"    }"},{"lineNumber":394,"author":{"gitId":"JulietTeoh"},"content":"}"}],"authorContributionMap":{"JulietTeoh":394}},{"path":"src/main/java/duke/maincomponents/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"JulietTeoh"},"content":"package duke.maincomponents;"},{"lineNumber":2,"author":{"gitId":"JulietTeoh"},"content":""},{"lineNumber":3,"author":{"gitId":"JulietTeoh"},"content":"import java.io.File;"},{"lineNumber":4,"author":{"gitId":"JulietTeoh"},"content":"import java.io.FileNotFoundException;"},{"lineNumber":5,"author":{"gitId":"JulietTeoh"},"content":"import java.io.FileWriter;"},{"lineNumber":6,"author":{"gitId":"JulietTeoh"},"content":"import java.io.IOException;"},{"lineNumber":7,"author":{"gitId":"JulietTeoh"},"content":"import java.io.Writer;"},{"lineNumber":8,"author":{"gitId":"JulietTeoh"},"content":"import java.util.ArrayList;"},{"lineNumber":9,"author":{"gitId":"JulietTeoh"},"content":"import java.util.Scanner;"},{"lineNumber":10,"author":{"gitId":"JulietTeoh"},"content":""},{"lineNumber":11,"author":{"gitId":"JulietTeoh"},"content":"import duke.exceptions.DukeException;"},{"lineNumber":12,"author":{"gitId":"JulietTeoh"},"content":"import duke.exceptions.TaskException;"},{"lineNumber":13,"author":{"gitId":"JulietTeoh"},"content":"import duke.task.Deadline;"},{"lineNumber":14,"author":{"gitId":"JulietTeoh"},"content":"import duke.task.Event;"},{"lineNumber":15,"author":{"gitId":"JulietTeoh"},"content":"import duke.task.Task;"},{"lineNumber":16,"author":{"gitId":"JulietTeoh"},"content":"import duke.task.ToDo;"},{"lineNumber":17,"author":{"gitId":"JulietTeoh"},"content":""},{"lineNumber":18,"author":{"gitId":"JulietTeoh"},"content":"/**"},{"lineNumber":19,"author":{"gitId":"JulietTeoh"},"content":" * Storage class, which stores all the Tasks to memory"},{"lineNumber":20,"author":{"gitId":"JulietTeoh"},"content":" */"},{"lineNumber":21,"author":{"gitId":"JulietTeoh"},"content":"public class Storage {"},{"lineNumber":22,"author":{"gitId":"JulietTeoh"},"content":"    private String pathOfDataFile;"},{"lineNumber":23,"author":{"gitId":"JulietTeoh"},"content":""},{"lineNumber":24,"author":{"gitId":"JulietTeoh"},"content":"    /**"},{"lineNumber":25,"author":{"gitId":"JulietTeoh"},"content":"     * Default constructor for Storage"},{"lineNumber":26,"author":{"gitId":"JulietTeoh"},"content":"     *"},{"lineNumber":27,"author":{"gitId":"JulietTeoh"},"content":"     * @param filePath path of file to load and store"},{"lineNumber":28,"author":{"gitId":"JulietTeoh"},"content":"     * @param folderName foldername of where the file resides"},{"lineNumber":29,"author":{"gitId":"JulietTeoh"},"content":"     * @throws DukeException"},{"lineNumber":30,"author":{"gitId":"JulietTeoh"},"content":"     */"},{"lineNumber":31,"author":{"gitId":"JulietTeoh"},"content":"    public Storage(String filePath, String folderName) throws DukeException {"},{"lineNumber":32,"author":{"gitId":"JulietTeoh"},"content":"        pathOfDataFile \u003d filePath;"},{"lineNumber":33,"author":{"gitId":"JulietTeoh"},"content":"        try {"},{"lineNumber":34,"author":{"gitId":"JulietTeoh"},"content":"            File folder \u003d new File(folderName);"},{"lineNumber":35,"author":{"gitId":"JulietTeoh"},"content":"            folder.mkdir();"},{"lineNumber":36,"author":{"gitId":"JulietTeoh"},"content":""},{"lineNumber":37,"author":{"gitId":"JulietTeoh"},"content":"            File dataFile \u003d new File(filePath);"},{"lineNumber":38,"author":{"gitId":"JulietTeoh"},"content":"            dataFile.createNewFile();"},{"lineNumber":39,"author":{"gitId":"JulietTeoh"},"content":""},{"lineNumber":40,"author":{"gitId":"JulietTeoh"},"content":"        } catch (IOException e) {"},{"lineNumber":41,"author":{"gitId":"JulietTeoh"},"content":"            throw new DukeException(\"Error occured during file or folder creation\");"},{"lineNumber":42,"author":{"gitId":"JulietTeoh"},"content":"        }"},{"lineNumber":43,"author":{"gitId":"JulietTeoh"},"content":"    }"},{"lineNumber":44,"author":{"gitId":"JulietTeoh"},"content":""},{"lineNumber":45,"author":{"gitId":"JulietTeoh"},"content":"    /**"},{"lineNumber":46,"author":{"gitId":"JulietTeoh"},"content":"     * Loads memory into duke"},{"lineNumber":47,"author":{"gitId":"JulietTeoh"},"content":"     *"},{"lineNumber":48,"author":{"gitId":"JulietTeoh"},"content":"     * @return Array List of tasks"},{"lineNumber":49,"author":{"gitId":"JulietTeoh"},"content":"     * @throws DukeException IO exception if file cannot be read"},{"lineNumber":50,"author":{"gitId":"JulietTeoh"},"content":"     */"},{"lineNumber":51,"author":{"gitId":"JulietTeoh"},"content":"    public ArrayList\u003cTask\u003e load() throws DukeException {"},{"lineNumber":52,"author":{"gitId":"JulietTeoh"},"content":"        try {"},{"lineNumber":53,"author":{"gitId":"JulietTeoh"},"content":"            File dukeData \u003d new File(pathOfDataFile);"},{"lineNumber":54,"author":{"gitId":"JulietTeoh"},"content":"            Scanner dataReader \u003d new Scanner(dukeData);"},{"lineNumber":55,"author":{"gitId":"JulietTeoh"},"content":"            int tempNumberOfTasks \u003d 0;"},{"lineNumber":56,"author":{"gitId":"JulietTeoh"},"content":"            ArrayList\u003cTask\u003e tempArray \u003d new ArrayList\u003c\u003e();"},{"lineNumber":57,"author":{"gitId":"JulietTeoh"},"content":""},{"lineNumber":58,"author":{"gitId":"JulietTeoh"},"content":"            while (dataReader.hasNextLine()) {"},{"lineNumber":59,"author":{"gitId":"JulietTeoh"},"content":"                String data \u003d dataReader.nextLine();"},{"lineNumber":60,"author":{"gitId":"JulietTeoh"},"content":"                String[] arr \u003d data.split(\"\\\\|\");"},{"lineNumber":61,"author":{"gitId":"JulietTeoh"},"content":""},{"lineNumber":62,"author":{"gitId":"JulietTeoh"},"content":"                String taskSymbol \u003d arr[0];"},{"lineNumber":63,"author":{"gitId":"JulietTeoh"},"content":"                int doneInt \u003d Integer.valueOf(arr[1]);"},{"lineNumber":64,"author":{"gitId":"JulietTeoh"},"content":"                String description \u003d arr[2];"},{"lineNumber":65,"author":{"gitId":"JulietTeoh"},"content":""},{"lineNumber":66,"author":{"gitId":"JulietTeoh"},"content":"                if (taskSymbol.equals(\"T\")) {"},{"lineNumber":67,"author":{"gitId":"JulietTeoh"},"content":"                    tempArray.add(new ToDo(description, doneInt));"},{"lineNumber":68,"author":{"gitId":"JulietTeoh"},"content":"                    tempNumberOfTasks++;"},{"lineNumber":69,"author":{"gitId":"JulietTeoh"},"content":"                } else if (taskSymbol.equals(\"D\")) {"},{"lineNumber":70,"author":{"gitId":"JulietTeoh"},"content":"                    try {"},{"lineNumber":71,"author":{"gitId":"JulietTeoh"},"content":"                        tempArray.add(new Deadline(description, arr[3], doneInt));"},{"lineNumber":72,"author":{"gitId":"JulietTeoh"},"content":"                    } catch (TaskException e) {"},{"lineNumber":73,"author":{"gitId":"JulietTeoh"},"content":"                        throw new DukeException(\"Data Corrupted, failed to restore data.\");"},{"lineNumber":74,"author":{"gitId":"JulietTeoh"},"content":"                    }"},{"lineNumber":75,"author":{"gitId":"JulietTeoh"},"content":"                    tempNumberOfTasks++;"},{"lineNumber":76,"author":{"gitId":"JulietTeoh"},"content":"                } else if (taskSymbol.equals(\"E\")) {"},{"lineNumber":77,"author":{"gitId":"JulietTeoh"},"content":"                    tempArray.add(new Event(description, arr[3], doneInt));"},{"lineNumber":78,"author":{"gitId":"JulietTeoh"},"content":"                    tempNumberOfTasks++;"},{"lineNumber":79,"author":{"gitId":"JulietTeoh"},"content":"                }"},{"lineNumber":80,"author":{"gitId":"JulietTeoh"},"content":"            }"},{"lineNumber":81,"author":{"gitId":"JulietTeoh"},"content":"            dataReader.close();"},{"lineNumber":82,"author":{"gitId":"JulietTeoh"},"content":""},{"lineNumber":83,"author":{"gitId":"JulietTeoh"},"content":"            return tempArray;"},{"lineNumber":84,"author":{"gitId":"JulietTeoh"},"content":"        } catch (FileNotFoundException e) {"},{"lineNumber":85,"author":{"gitId":"JulietTeoh"},"content":"            throw new DukeException(pathOfDataFile + \" not found, failed to restore data.\");"},{"lineNumber":86,"author":{"gitId":"JulietTeoh"},"content":"        }"},{"lineNumber":87,"author":{"gitId":"JulietTeoh"},"content":"    }"},{"lineNumber":88,"author":{"gitId":"JulietTeoh"},"content":""},{"lineNumber":89,"author":{"gitId":"JulietTeoh"},"content":"    /**"},{"lineNumber":90,"author":{"gitId":"JulietTeoh"},"content":"     * Saves current task list to file at every iteration of user input"},{"lineNumber":91,"author":{"gitId":"JulietTeoh"},"content":"     *"},{"lineNumber":92,"author":{"gitId":"JulietTeoh"},"content":"     * @param taskArray Task array to save to memory"},{"lineNumber":93,"author":{"gitId":"JulietTeoh"},"content":"     * @throws DukeException IO exception if an error occurs with the file"},{"lineNumber":94,"author":{"gitId":"JulietTeoh"},"content":"     */"},{"lineNumber":95,"author":{"gitId":"JulietTeoh"},"content":"    public void saveToFile(ArrayList\u003cTask\u003e taskArray) throws DukeException {"},{"lineNumber":96,"author":{"gitId":"JulietTeoh"},"content":"        try {"},{"lineNumber":97,"author":{"gitId":"JulietTeoh"},"content":"            Writer fileWriter \u003d new FileWriter(\"data/dukedata.txt\", false);"},{"lineNumber":98,"author":{"gitId":"JulietTeoh"},"content":"            for (int i \u003d 0; i \u003c taskArray.size(); i++) {"},{"lineNumber":99,"author":{"gitId":"JulietTeoh"},"content":"                String line \u003d taskArray.get(i).toSaveFormat();"},{"lineNumber":100,"author":{"gitId":"JulietTeoh"},"content":"                fileWriter.write(line + \"\\n\");"},{"lineNumber":101,"author":{"gitId":"JulietTeoh"},"content":"            }"},{"lineNumber":102,"author":{"gitId":"JulietTeoh"},"content":"            fileWriter.close();"},{"lineNumber":103,"author":{"gitId":"JulietTeoh"},"content":"        } catch (IOException e) {"},{"lineNumber":104,"author":{"gitId":"JulietTeoh"},"content":"            throw new DukeException(\"Error could not save task list.\");"},{"lineNumber":105,"author":{"gitId":"JulietTeoh"},"content":"        }"},{"lineNumber":106,"author":{"gitId":"JulietTeoh"},"content":"    }"},{"lineNumber":107,"author":{"gitId":"JulietTeoh"},"content":"}"}],"authorContributionMap":{"JulietTeoh":107}},{"path":"src/main/java/duke/maincomponents/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"JulietTeoh"},"content":"package duke.maincomponents;"},{"lineNumber":2,"author":{"gitId":"JulietTeoh"},"content":""},{"lineNumber":3,"author":{"gitId":"JulietTeoh"},"content":"import java.util.ArrayList;"},{"lineNumber":4,"author":{"gitId":"JulietTeoh"},"content":""},{"lineNumber":5,"author":{"gitId":"JulietTeoh"},"content":"import duke.exceptions.DukeException;"},{"lineNumber":6,"author":{"gitId":"JulietTeoh"},"content":"import duke.exceptions.TaskException;"},{"lineNumber":7,"author":{"gitId":"JulietTeoh"},"content":"import duke.task.Deadline;"},{"lineNumber":8,"author":{"gitId":"JulietTeoh"},"content":"import duke.task.Event;"},{"lineNumber":9,"author":{"gitId":"JulietTeoh"},"content":"import duke.task.Task;"},{"lineNumber":10,"author":{"gitId":"JulietTeoh"},"content":"import duke.task.ToDo;"},{"lineNumber":11,"author":{"gitId":"JulietTeoh"},"content":""},{"lineNumber":12,"author":{"gitId":"JulietTeoh"},"content":""},{"lineNumber":13,"author":{"gitId":"JulietTeoh"},"content":"/**"},{"lineNumber":14,"author":{"gitId":"JulietTeoh"},"content":" * TaskList class, which stores all the Tasks in the list"},{"lineNumber":15,"author":{"gitId":"JulietTeoh"},"content":" */"},{"lineNumber":16,"author":{"gitId":"JulietTeoh"},"content":""},{"lineNumber":17,"author":{"gitId":"JulietTeoh"},"content":"public class TaskList {"},{"lineNumber":18,"author":{"gitId":"JulietTeoh"},"content":"    private ArrayList\u003cTask\u003e tasks;"},{"lineNumber":19,"author":{"gitId":"JulietTeoh"},"content":"    private int numberOfTasks;"},{"lineNumber":20,"author":{"gitId":"JulietTeoh"},"content":""},{"lineNumber":21,"author":{"gitId":"JulietTeoh"},"content":"    /**"},{"lineNumber":22,"author":{"gitId":"JulietTeoh"},"content":"     * Default constructor for TaskList, returns a TaskList object with an empty Tasklist"},{"lineNumber":23,"author":{"gitId":"JulietTeoh"},"content":"     */"},{"lineNumber":24,"author":{"gitId":"JulietTeoh"},"content":"    public TaskList() {"},{"lineNumber":25,"author":{"gitId":"JulietTeoh"},"content":"        this.tasks \u003d new ArrayList\u003cTask\u003e();"},{"lineNumber":26,"author":{"gitId":"JulietTeoh"},"content":"        this.numberOfTasks \u003d 0;"},{"lineNumber":27,"author":{"gitId":"JulietTeoh"},"content":"    }"},{"lineNumber":28,"author":{"gitId":"JulietTeoh"},"content":""},{"lineNumber":29,"author":{"gitId":"JulietTeoh"},"content":"    /**"},{"lineNumber":30,"author":{"gitId":"JulietTeoh"},"content":"     * Alternative Constructor for TaskList which returns a Tasklist that contains the tasks in taskArrayToLoad"},{"lineNumber":31,"author":{"gitId":"JulietTeoh"},"content":"     *"},{"lineNumber":32,"author":{"gitId":"JulietTeoh"},"content":"     * @param taskArrayToLoad ArrayList which contains tasks to put inside TaskList"},{"lineNumber":33,"author":{"gitId":"JulietTeoh"},"content":"     */"},{"lineNumber":34,"author":{"gitId":"JulietTeoh"},"content":"    public TaskList(ArrayList\u003cTask\u003e taskArrayToLoad) {"},{"lineNumber":35,"author":{"gitId":"JulietTeoh"},"content":"        this.tasks \u003d new ArrayList\u003c\u003e(taskArrayToLoad);"},{"lineNumber":36,"author":{"gitId":"JulietTeoh"},"content":"        this.numberOfTasks \u003d tasks.size();"},{"lineNumber":37,"author":{"gitId":"JulietTeoh"},"content":"    }"},{"lineNumber":38,"author":{"gitId":"JulietTeoh"},"content":""},{"lineNumber":39,"author":{"gitId":"JulietTeoh"},"content":"    /**"},{"lineNumber":40,"author":{"gitId":"JulietTeoh"},"content":"     * @return Returns number of tasks in the task list"},{"lineNumber":41,"author":{"gitId":"JulietTeoh"},"content":"     */"},{"lineNumber":42,"author":{"gitId":"JulietTeoh"},"content":"    public int getNumberOfTasks() {"},{"lineNumber":43,"author":{"gitId":"JulietTeoh"},"content":"        return numberOfTasks;"},{"lineNumber":44,"author":{"gitId":"JulietTeoh"},"content":"    }"},{"lineNumber":45,"author":{"gitId":"JulietTeoh"},"content":""},{"lineNumber":46,"author":{"gitId":"JulietTeoh"},"content":"    /**"},{"lineNumber":47,"author":{"gitId":"JulietTeoh"},"content":"     * @return Returns a arraylist containing all the current tasks in the tasklist"},{"lineNumber":48,"author":{"gitId":"JulietTeoh"},"content":"     */"},{"lineNumber":49,"author":{"gitId":"JulietTeoh"},"content":"    public ArrayList\u003cTask\u003e getCurrentTaskList() {"},{"lineNumber":50,"author":{"gitId":"JulietTeoh"},"content":"        return new ArrayList\u003cTask\u003e(tasks);"},{"lineNumber":51,"author":{"gitId":"JulietTeoh"},"content":"    }"},{"lineNumber":52,"author":{"gitId":"JulietTeoh"},"content":""},{"lineNumber":53,"author":{"gitId":"JulietTeoh"},"content":"    /**"},{"lineNumber":54,"author":{"gitId":"JulietTeoh"},"content":"     * Marks a given index\u0027s task as done"},{"lineNumber":55,"author":{"gitId":"JulietTeoh"},"content":"     *"},{"lineNumber":56,"author":{"gitId":"JulietTeoh"},"content":"     * @param number Index of task to mark as done"},{"lineNumber":57,"author":{"gitId":"JulietTeoh"},"content":"     * @return Returns tasks that has been marked as done"},{"lineNumber":58,"author":{"gitId":"JulietTeoh"},"content":"     * @throws DukeException Error thrown if the index given has no corresponding task"},{"lineNumber":59,"author":{"gitId":"JulietTeoh"},"content":"     */"},{"lineNumber":60,"author":{"gitId":"JulietTeoh"},"content":"    public Task checkTaskAsDone(int number) throws DukeException {"},{"lineNumber":61,"author":{"gitId":"JulietTeoh"},"content":"        if (number \u003e\u003d 1 \u0026\u0026 number \u003c\u003d tasks.size()) {"},{"lineNumber":62,"author":{"gitId":"JulietTeoh"},"content":"            Task currentTask \u003d tasks.get(number - 1);"},{"lineNumber":63,"author":{"gitId":"JulietTeoh"},"content":"            currentTask.changeTaskToDone();"},{"lineNumber":64,"author":{"gitId":"JulietTeoh"},"content":""},{"lineNumber":65,"author":{"gitId":"JulietTeoh"},"content":"            return currentTask;"},{"lineNumber":66,"author":{"gitId":"JulietTeoh"},"content":"        } else {"},{"lineNumber":67,"author":{"gitId":"JulietTeoh"},"content":"            throw new DukeException(\"Error! Please make sure the\""},{"lineNumber":68,"author":{"gitId":"JulietTeoh"},"content":"                    + \" number given has a corresponding task!\");"},{"lineNumber":69,"author":{"gitId":"JulietTeoh"},"content":"        }"},{"lineNumber":70,"author":{"gitId":"JulietTeoh"},"content":"    }"},{"lineNumber":71,"author":{"gitId":"JulietTeoh"},"content":""},{"lineNumber":72,"author":{"gitId":"JulietTeoh"},"content":"    /**"},{"lineNumber":73,"author":{"gitId":"JulietTeoh"},"content":"     * Deletes a given index\u0027s task from the TaskList"},{"lineNumber":74,"author":{"gitId":"JulietTeoh"},"content":"     *"},{"lineNumber":75,"author":{"gitId":"JulietTeoh"},"content":"     * @param taskInt Index of task to delete"},{"lineNumber":76,"author":{"gitId":"JulietTeoh"},"content":"     * @return Deleted task"},{"lineNumber":77,"author":{"gitId":"JulietTeoh"},"content":"     * @throws DukeException Error thrown if the index given has no corresponding task"},{"lineNumber":78,"author":{"gitId":"JulietTeoh"},"content":"     */"},{"lineNumber":79,"author":{"gitId":"JulietTeoh"},"content":"    public Task deleteTask(int taskInt) throws DukeException {"},{"lineNumber":80,"author":{"gitId":"JulietTeoh"},"content":"        if (taskInt \u003e\u003d 1 \u0026\u0026 taskInt \u003c\u003d tasks.size()) {"},{"lineNumber":81,"author":{"gitId":"JulietTeoh"},"content":"            Task todelete \u003d tasks.get(taskInt - 1);"},{"lineNumber":82,"author":{"gitId":"JulietTeoh"},"content":"            tasks.remove(taskInt - 1);"},{"lineNumber":83,"author":{"gitId":"JulietTeoh"},"content":"            numberOfTasks \u003d numberOfTasks - 1;"},{"lineNumber":84,"author":{"gitId":"JulietTeoh"},"content":""},{"lineNumber":85,"author":{"gitId":"JulietTeoh"},"content":"            return todelete;"},{"lineNumber":86,"author":{"gitId":"JulietTeoh"},"content":"        } else {"},{"lineNumber":87,"author":{"gitId":"JulietTeoh"},"content":"            throw new DukeException(\"Error! Please make sure the number given has a corresponding task!\");"},{"lineNumber":88,"author":{"gitId":"JulietTeoh"},"content":"        }"},{"lineNumber":89,"author":{"gitId":"JulietTeoh"},"content":"    }"},{"lineNumber":90,"author":{"gitId":"JulietTeoh"},"content":""},{"lineNumber":91,"author":{"gitId":"JulietTeoh"},"content":"    /**"},{"lineNumber":92,"author":{"gitId":"JulietTeoh"},"content":"     * Adds a to do task to the Task List"},{"lineNumber":93,"author":{"gitId":"JulietTeoh"},"content":"     *"},{"lineNumber":94,"author":{"gitId":"JulietTeoh"},"content":"     * @param description Description of the to do task"},{"lineNumber":95,"author":{"gitId":"JulietTeoh"},"content":"     * @return Returns the to do task that has been added"},{"lineNumber":96,"author":{"gitId":"JulietTeoh"},"content":"     */"},{"lineNumber":97,"author":{"gitId":"JulietTeoh"},"content":"    public Task addToDoTask(String description) {"},{"lineNumber":98,"author":{"gitId":"JulietTeoh"},"content":"        ToDo newToDo \u003d new ToDo(description);"},{"lineNumber":99,"author":{"gitId":"JulietTeoh"},"content":"        tasks.add(newToDo);"},{"lineNumber":100,"author":{"gitId":"JulietTeoh"},"content":"        numberOfTasks \u003d numberOfTasks + 1;"},{"lineNumber":101,"author":{"gitId":"JulietTeoh"},"content":""},{"lineNumber":102,"author":{"gitId":"JulietTeoh"},"content":"        return newToDo;"},{"lineNumber":103,"author":{"gitId":"JulietTeoh"},"content":"    }"},{"lineNumber":104,"author":{"gitId":"JulietTeoh"},"content":""},{"lineNumber":105,"author":{"gitId":"JulietTeoh"},"content":"    /**"},{"lineNumber":106,"author":{"gitId":"JulietTeoh"},"content":"     * Adds a event task to the tasklist"},{"lineNumber":107,"author":{"gitId":"JulietTeoh"},"content":"     *"},{"lineNumber":108,"author":{"gitId":"JulietTeoh"},"content":"     * @param description Array List of description of the event task, index 0 has the description and"},{"lineNumber":109,"author":{"gitId":"JulietTeoh"},"content":"     *                    index 1 has the event at description"},{"lineNumber":110,"author":{"gitId":"JulietTeoh"},"content":"     * @return Returns the event task that has been added"},{"lineNumber":111,"author":{"gitId":"JulietTeoh"},"content":"     */"},{"lineNumber":112,"author":{"gitId":"JulietTeoh"},"content":"    public Task addEventTask(ArrayList\u003cString\u003e description) {"},{"lineNumber":113,"author":{"gitId":"JulietTeoh"},"content":"        Event newEvent \u003d new Event(description.get(0), description.get(1));"},{"lineNumber":114,"author":{"gitId":"JulietTeoh"},"content":"        tasks.add(newEvent);"},{"lineNumber":115,"author":{"gitId":"JulietTeoh"},"content":"        numberOfTasks \u003d numberOfTasks + 1;"},{"lineNumber":116,"author":{"gitId":"JulietTeoh"},"content":""},{"lineNumber":117,"author":{"gitId":"JulietTeoh"},"content":"        return newEvent;"},{"lineNumber":118,"author":{"gitId":"JulietTeoh"},"content":"    }"},{"lineNumber":119,"author":{"gitId":"JulietTeoh"},"content":""},{"lineNumber":120,"author":{"gitId":"JulietTeoh"},"content":""},{"lineNumber":121,"author":{"gitId":"JulietTeoh"},"content":"    /**"},{"lineNumber":122,"author":{"gitId":"JulietTeoh"},"content":"     * Adds a deadline task to the tasklist"},{"lineNumber":123,"author":{"gitId":"JulietTeoh"},"content":"     *"},{"lineNumber":124,"author":{"gitId":"JulietTeoh"},"content":"     * @param description Array List of description of the event task, index 0 has the description and"},{"lineNumber":125,"author":{"gitId":"JulietTeoh"},"content":"     *                    index 1 has the event by description"},{"lineNumber":126,"author":{"gitId":"JulietTeoh"},"content":"     * @return Returns the deadline task that has been added"},{"lineNumber":127,"author":{"gitId":"JulietTeoh"},"content":"     * @throws DukeException Throws an exception if an error occured when creating the deadline task"},{"lineNumber":128,"author":{"gitId":"JulietTeoh"},"content":"     */"},{"lineNumber":129,"author":{"gitId":"JulietTeoh"},"content":"    public Task addDeadlineTask(ArrayList\u003cString\u003e description) throws DukeException {"},{"lineNumber":130,"author":{"gitId":"JulietTeoh"},"content":"        try {"},{"lineNumber":131,"author":{"gitId":"JulietTeoh"},"content":"            Deadline newDeadline \u003d new Deadline(description.get(0), description.get(1));"},{"lineNumber":132,"author":{"gitId":"JulietTeoh"},"content":"            tasks.add(newDeadline);"},{"lineNumber":133,"author":{"gitId":"JulietTeoh"},"content":"            numberOfTasks \u003d numberOfTasks + 1;"},{"lineNumber":134,"author":{"gitId":"JulietTeoh"},"content":"            return newDeadline;"},{"lineNumber":135,"author":{"gitId":"JulietTeoh"},"content":"        } catch (TaskException e) {"},{"lineNumber":136,"author":{"gitId":"JulietTeoh"},"content":"            throw new DukeException(e.getMessage());"},{"lineNumber":137,"author":{"gitId":"JulietTeoh"},"content":"        }"},{"lineNumber":138,"author":{"gitId":"JulietTeoh"},"content":"    }"},{"lineNumber":139,"author":{"gitId":"JulietTeoh"},"content":""},{"lineNumber":140,"author":{"gitId":"JulietTeoh"},"content":"    /**"},{"lineNumber":141,"author":{"gitId":"JulietTeoh"},"content":"     * Returns a task of a specfic index"},{"lineNumber":142,"author":{"gitId":"JulietTeoh"},"content":"     *"},{"lineNumber":143,"author":{"gitId":"JulietTeoh"},"content":"     * @param taskInt Index of the task to return"},{"lineNumber":144,"author":{"gitId":"JulietTeoh"},"content":"     * @return A task object"},{"lineNumber":145,"author":{"gitId":"JulietTeoh"},"content":"     * @throws DukeException Throws an exception if an error occured when creating the task"},{"lineNumber":146,"author":{"gitId":"JulietTeoh"},"content":"     */"},{"lineNumber":147,"author":{"gitId":"JulietTeoh"},"content":"    public Task getTask(int taskInt) throws DukeException {"},{"lineNumber":148,"author":{"gitId":"JulietTeoh"},"content":"        if (taskInt \u003e\u003d 1 \u0026\u0026 taskInt \u003c\u003d tasks.size()) {"},{"lineNumber":149,"author":{"gitId":"JulietTeoh"},"content":"            Task task \u003d tasks.get(taskInt - 1);"},{"lineNumber":150,"author":{"gitId":"JulietTeoh"},"content":"            return task;"},{"lineNumber":151,"author":{"gitId":"JulietTeoh"},"content":"        } else {"},{"lineNumber":152,"author":{"gitId":"JulietTeoh"},"content":"            throw new DukeException(\"Error! Please make sure the number given has a corresponding task!\");"},{"lineNumber":153,"author":{"gitId":"JulietTeoh"},"content":"        }"},{"lineNumber":154,"author":{"gitId":"JulietTeoh"},"content":"    }"},{"lineNumber":155,"author":{"gitId":"JulietTeoh"},"content":"}"}],"authorContributionMap":{"JulietTeoh":155}},{"path":"src/main/java/duke/maincomponents/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"JulietTeoh"},"content":"package duke.maincomponents;"},{"lineNumber":2,"author":{"gitId":"JulietTeoh"},"content":""},{"lineNumber":3,"author":{"gitId":"JulietTeoh"},"content":"import java.util.ArrayList;"},{"lineNumber":4,"author":{"gitId":"JulietTeoh"},"content":"import java.util.Scanner;"},{"lineNumber":5,"author":{"gitId":"JulietTeoh"},"content":""},{"lineNumber":6,"author":{"gitId":"JulietTeoh"},"content":"import duke.task.Task;"},{"lineNumber":7,"author":{"gitId":"JulietTeoh"},"content":""},{"lineNumber":8,"author":{"gitId":"JulietTeoh"},"content":"/**"},{"lineNumber":9,"author":{"gitId":"JulietTeoh"},"content":" * Ui class, which creates all the string that are to be shown to the user"},{"lineNumber":10,"author":{"gitId":"JulietTeoh"},"content":" */"},{"lineNumber":11,"author":{"gitId":"JulietTeoh"},"content":"public class Ui {"},{"lineNumber":12,"author":{"gitId":"JulietTeoh"},"content":"    private Scanner scanner;"},{"lineNumber":13,"author":{"gitId":"JulietTeoh"},"content":"    private int paddingGui \u003d 4;"},{"lineNumber":14,"author":{"gitId":"JulietTeoh"},"content":""},{"lineNumber":15,"author":{"gitId":"JulietTeoh"},"content":"    public Ui() {"},{"lineNumber":16,"author":{"gitId":"JulietTeoh"},"content":"        scanner \u003d new Scanner(System.in);"},{"lineNumber":17,"author":{"gitId":"JulietTeoh"},"content":"    }"},{"lineNumber":18,"author":{"gitId":"JulietTeoh"},"content":""},{"lineNumber":19,"author":{"gitId":"JulietTeoh"},"content":"    /**"},{"lineNumber":20,"author":{"gitId":"JulietTeoh"},"content":"     * Shows default welcome line"},{"lineNumber":21,"author":{"gitId":"JulietTeoh"},"content":"     */"},{"lineNumber":22,"author":{"gitId":"JulietTeoh"},"content":"    public void showWelcomeLine() {"},{"lineNumber":23,"author":{"gitId":"JulietTeoh"},"content":"        System.out.println(defaultFormatting(\"Hello! I\u0027m Duke\\n\""},{"lineNumber":24,"author":{"gitId":"JulietTeoh"},"content":"                + padSpaces(\"What can I do for you?\", 5)));"},{"lineNumber":25,"author":{"gitId":"JulietTeoh"},"content":"    }"},{"lineNumber":26,"author":{"gitId":"JulietTeoh"},"content":""},{"lineNumber":27,"author":{"gitId":"JulietTeoh"},"content":"    public String returnWelcomeLine() {"},{"lineNumber":28,"author":{"gitId":"JulietTeoh"},"content":"        return \"Hello! I\u0027m Duke\\n\" + \"What can I do for you?\";"},{"lineNumber":29,"author":{"gitId":"JulietTeoh"},"content":"    }"},{"lineNumber":30,"author":{"gitId":"JulietTeoh"},"content":""},{"lineNumber":31,"author":{"gitId":"JulietTeoh"},"content":"    public void showGoodbyeLine() {"},{"lineNumber":32,"author":{"gitId":"JulietTeoh"},"content":"        System.out.println(defaultFormatting(\"Bye. Hope to see you again soon!\"));"},{"lineNumber":33,"author":{"gitId":"JulietTeoh"},"content":"    }"},{"lineNumber":34,"author":{"gitId":"JulietTeoh"},"content":""},{"lineNumber":35,"author":{"gitId":"JulietTeoh"},"content":"    public String returnGoodbyeLine() {"},{"lineNumber":36,"author":{"gitId":"JulietTeoh"},"content":"        return \"Bye. Hope to see you again soon!\" + \"\\nPlease close this window by typing q or using the button!\";"},{"lineNumber":37,"author":{"gitId":"JulietTeoh"},"content":"    }"},{"lineNumber":38,"author":{"gitId":"JulietTeoh"},"content":""},{"lineNumber":39,"author":{"gitId":"JulietTeoh"},"content":"    private String numberOfTasksLine(int numberOfTasks) {"},{"lineNumber":40,"author":{"gitId":"JulietTeoh"},"content":"        return padSpaces(\"Now you have \" + numberOfTasks + \" task in the list.\", 5);"},{"lineNumber":41,"author":{"gitId":"JulietTeoh"},"content":"    }"},{"lineNumber":42,"author":{"gitId":"JulietTeoh"},"content":""},{"lineNumber":43,"author":{"gitId":"JulietTeoh"},"content":"    private String numberOfTasksLineGui(int numberOfTasks) {"},{"lineNumber":44,"author":{"gitId":"JulietTeoh"},"content":"        return padSpaces(\"Now you have \" + numberOfTasks + \" task in the list.\", paddingGui);"},{"lineNumber":45,"author":{"gitId":"JulietTeoh"},"content":"    }"},{"lineNumber":46,"author":{"gitId":"JulietTeoh"},"content":""},{"lineNumber":47,"author":{"gitId":"JulietTeoh"},"content":"    /**"},{"lineNumber":48,"author":{"gitId":"JulietTeoh"},"content":"     * Shows a task list to the user in the appropriate format"},{"lineNumber":49,"author":{"gitId":"JulietTeoh"},"content":"     *"},{"lineNumber":50,"author":{"gitId":"JulietTeoh"},"content":"     * @param taskArray Task array list to show to the viewer"},{"lineNumber":51,"author":{"gitId":"JulietTeoh"},"content":"     */"},{"lineNumber":52,"author":{"gitId":"JulietTeoh"},"content":"    public void showTaskList(ArrayList\u003cTask\u003e taskArray) {"},{"lineNumber":53,"author":{"gitId":"JulietTeoh"},"content":"        if (taskArray.size() \u003e 0) {"},{"lineNumber":54,"author":{"gitId":"JulietTeoh"},"content":"            StringBuilder sb \u003d new StringBuilder();"},{"lineNumber":55,"author":{"gitId":"JulietTeoh"},"content":"            sb.append(horizontalLine()).append(\u0027\\n\u0027);"},{"lineNumber":56,"author":{"gitId":"JulietTeoh"},"content":""},{"lineNumber":57,"author":{"gitId":"JulietTeoh"},"content":"            sb.append(padSpaces(\"Here are the task in your list:\\n\", 5));"},{"lineNumber":58,"author":{"gitId":"JulietTeoh"},"content":"            for (int i \u003d 0; i \u003c taskArray.size(); i++) {"},{"lineNumber":59,"author":{"gitId":"JulietTeoh"},"content":""},{"lineNumber":60,"author":{"gitId":"JulietTeoh"},"content":"                Task currentTask \u003d taskArray.get(i);"},{"lineNumber":61,"author":{"gitId":"JulietTeoh"},"content":""},{"lineNumber":62,"author":{"gitId":"JulietTeoh"},"content":"                String numberIndicator \u003d (i + 1) + \".\";"},{"lineNumber":63,"author":{"gitId":"JulietTeoh"},"content":"                String temp \u003d numberIndicator + currentTask.toString() + \u0027\\n\u0027;"},{"lineNumber":64,"author":{"gitId":"JulietTeoh"},"content":""},{"lineNumber":65,"author":{"gitId":"JulietTeoh"},"content":"                sb.append(padSpaces(temp, 5));"},{"lineNumber":66,"author":{"gitId":"JulietTeoh"},"content":"            }"},{"lineNumber":67,"author":{"gitId":"JulietTeoh"},"content":"            sb.append(horizontalLine());"},{"lineNumber":68,"author":{"gitId":"JulietTeoh"},"content":"            System.out.println(sb.toString());"},{"lineNumber":69,"author":{"gitId":"JulietTeoh"},"content":"        } else {"},{"lineNumber":70,"author":{"gitId":"JulietTeoh"},"content":"            System.out.println(defaultFormatting(\"There are no tasks on your list currently!\"));"},{"lineNumber":71,"author":{"gitId":"JulietTeoh"},"content":"        }"},{"lineNumber":72,"author":{"gitId":"JulietTeoh"},"content":"    }"},{"lineNumber":73,"author":{"gitId":"JulietTeoh"},"content":""},{"lineNumber":74,"author":{"gitId":"JulietTeoh"},"content":"    /**"},{"lineNumber":75,"author":{"gitId":"JulietTeoh"},"content":"     * Returns a string representation of a taskArray"},{"lineNumber":76,"author":{"gitId":"JulietTeoh"},"content":"     *"},{"lineNumber":77,"author":{"gitId":"JulietTeoh"},"content":"     * @param taskArray Array List of tasks"},{"lineNumber":78,"author":{"gitId":"JulietTeoh"},"content":"     * @return String representation of the taskArray given"},{"lineNumber":79,"author":{"gitId":"JulietTeoh"},"content":"     */"},{"lineNumber":80,"author":{"gitId":"JulietTeoh"},"content":"    public String returnTaskList(ArrayList\u003cTask\u003e taskArray) {"},{"lineNumber":81,"author":{"gitId":"JulietTeoh"},"content":"        if (taskArray.size() \u003e 0) {"},{"lineNumber":82,"author":{"gitId":"JulietTeoh"},"content":"            StringBuilder sb \u003d new StringBuilder();"},{"lineNumber":83,"author":{"gitId":"JulietTeoh"},"content":"            sb.append(\"Here are the task in your list:\\n\");"},{"lineNumber":84,"author":{"gitId":"JulietTeoh"},"content":"            for (int i \u003d 0; i \u003c taskArray.size(); i++) {"},{"lineNumber":85,"author":{"gitId":"JulietTeoh"},"content":""},{"lineNumber":86,"author":{"gitId":"JulietTeoh"},"content":"                Task currentTask \u003d taskArray.get(i);"},{"lineNumber":87,"author":{"gitId":"JulietTeoh"},"content":""},{"lineNumber":88,"author":{"gitId":"JulietTeoh"},"content":"                String numberIndicator \u003d (i + 1) + \".\";"},{"lineNumber":89,"author":{"gitId":"JulietTeoh"},"content":"                String temp \u003d numberIndicator + currentTask.toString() + \u0027\\n\u0027;"},{"lineNumber":90,"author":{"gitId":"JulietTeoh"},"content":""},{"lineNumber":91,"author":{"gitId":"JulietTeoh"},"content":"                sb.append(padSpaces(temp, paddingGui));"},{"lineNumber":92,"author":{"gitId":"JulietTeoh"},"content":"            }"},{"lineNumber":93,"author":{"gitId":"JulietTeoh"},"content":"            return sb.toString();"},{"lineNumber":94,"author":{"gitId":"JulietTeoh"},"content":"        } else {"},{"lineNumber":95,"author":{"gitId":"JulietTeoh"},"content":"            return \"There are no tasks on your list currently!\";"},{"lineNumber":96,"author":{"gitId":"JulietTeoh"},"content":"        }"},{"lineNumber":97,"author":{"gitId":"JulietTeoh"},"content":"    }"},{"lineNumber":98,"author":{"gitId":"JulietTeoh"},"content":""},{"lineNumber":99,"author":{"gitId":"JulietTeoh"},"content":"    public void showLoadingSucess() {"},{"lineNumber":100,"author":{"gitId":"JulietTeoh"},"content":"        System.out.println(defaultFormatting(\"Data Successfuly Restored\"));"},{"lineNumber":101,"author":{"gitId":"JulietTeoh"},"content":"    }"},{"lineNumber":102,"author":{"gitId":"JulietTeoh"},"content":""},{"lineNumber":103,"author":{"gitId":"JulietTeoh"},"content":"    /**"},{"lineNumber":104,"author":{"gitId":"JulietTeoh"},"content":"     * Shows a specificed error message"},{"lineNumber":105,"author":{"gitId":"JulietTeoh"},"content":"     *"},{"lineNumber":106,"author":{"gitId":"JulietTeoh"},"content":"     * @param errorMsg Error message to show to the user"},{"lineNumber":107,"author":{"gitId":"JulietTeoh"},"content":"     */"},{"lineNumber":108,"author":{"gitId":"JulietTeoh"},"content":"    public void showErrorMsg(String errorMsg) {"},{"lineNumber":109,"author":{"gitId":"JulietTeoh"},"content":"        System.out.println(defaultFormatting(errorMsg));"},{"lineNumber":110,"author":{"gitId":"JulietTeoh"},"content":"    }"},{"lineNumber":111,"author":{"gitId":"JulietTeoh"},"content":""},{"lineNumber":112,"author":{"gitId":"JulietTeoh"},"content":"    public String returnErrorMsg(String errorMsg) {"},{"lineNumber":113,"author":{"gitId":"JulietTeoh"},"content":"        return errorMsg;"},{"lineNumber":114,"author":{"gitId":"JulietTeoh"},"content":"    }"},{"lineNumber":115,"author":{"gitId":"JulietTeoh"},"content":""},{"lineNumber":116,"author":{"gitId":"JulietTeoh"},"content":"    /**"},{"lineNumber":117,"author":{"gitId":"JulietTeoh"},"content":"     * Shows the user that a specific task has been marked as done"},{"lineNumber":118,"author":{"gitId":"JulietTeoh"},"content":"     * @param doneTask Task that has been marked as done"},{"lineNumber":119,"author":{"gitId":"JulietTeoh"},"content":"     */"},{"lineNumber":120,"author":{"gitId":"JulietTeoh"},"content":"    public void showTaskDone(Task doneTask) {"},{"lineNumber":121,"author":{"gitId":"JulietTeoh"},"content":"        System.out.println(defaultFormatting(\"Nice! I\u0027ve marked this task as done:\\n\""},{"lineNumber":122,"author":{"gitId":"JulietTeoh"},"content":"                + padSpaces(doneTask.toString(), 7)));"},{"lineNumber":123,"author":{"gitId":"JulietTeoh"},"content":"    }"},{"lineNumber":124,"author":{"gitId":"JulietTeoh"},"content":""},{"lineNumber":125,"author":{"gitId":"JulietTeoh"},"content":"    /**"},{"lineNumber":126,"author":{"gitId":"JulietTeoh"},"content":"     * Returns a string representation that tells the user that a specific task has been marked as done"},{"lineNumber":127,"author":{"gitId":"JulietTeoh"},"content":"     *"},{"lineNumber":128,"author":{"gitId":"JulietTeoh"},"content":"     * @param doneTask Task that has been marked as done"},{"lineNumber":129,"author":{"gitId":"JulietTeoh"},"content":"     * @return String representation that tells the user that a specific task has been marked as done"},{"lineNumber":130,"author":{"gitId":"JulietTeoh"},"content":"     */"},{"lineNumber":131,"author":{"gitId":"JulietTeoh"},"content":"    public String returnTaskDone(Task doneTask) {"},{"lineNumber":132,"author":{"gitId":"JulietTeoh"},"content":"        return \"Nice! I\u0027ve marked this task as done:\\n\""},{"lineNumber":133,"author":{"gitId":"JulietTeoh"},"content":"                + padSpaces(doneTask.toString(), paddingGui);"},{"lineNumber":134,"author":{"gitId":"JulietTeoh"},"content":"    }"},{"lineNumber":135,"author":{"gitId":"JulietTeoh"},"content":""},{"lineNumber":136,"author":{"gitId":"JulietTeoh"},"content":"    /**"},{"lineNumber":137,"author":{"gitId":"JulietTeoh"},"content":"     * Show the user that a specific task has been deleted"},{"lineNumber":138,"author":{"gitId":"JulietTeoh"},"content":"     *"},{"lineNumber":139,"author":{"gitId":"JulietTeoh"},"content":"     * @param deletedTask Task that has been deleted"},{"lineNumber":140,"author":{"gitId":"JulietTeoh"},"content":"     * @param numberOfTasks Number of remaining tasks"},{"lineNumber":141,"author":{"gitId":"JulietTeoh"},"content":"     */"},{"lineNumber":142,"author":{"gitId":"JulietTeoh"},"content":"    public void showTaskDeleted(Task deletedTask, int numberOfTasks) {"},{"lineNumber":143,"author":{"gitId":"JulietTeoh"},"content":"        String a \u003d \"Noted. I\u0027ve removed this task:\\n\" + padSpaces(deletedTask.toString(), 7)"},{"lineNumber":144,"author":{"gitId":"JulietTeoh"},"content":"                + \"\\n\" + numberOfTasksLine(numberOfTasks);"},{"lineNumber":145,"author":{"gitId":"JulietTeoh"},"content":""},{"lineNumber":146,"author":{"gitId":"JulietTeoh"},"content":"        System.out.println(defaultFormatting(a));"},{"lineNumber":147,"author":{"gitId":"JulietTeoh"},"content":"    }"},{"lineNumber":148,"author":{"gitId":"JulietTeoh"},"content":""},{"lineNumber":149,"author":{"gitId":"JulietTeoh"},"content":"    /**"},{"lineNumber":150,"author":{"gitId":"JulietTeoh"},"content":"     * Returns a string representation that tells the user a specific task has been deleted"},{"lineNumber":151,"author":{"gitId":"JulietTeoh"},"content":"     *"},{"lineNumber":152,"author":{"gitId":"JulietTeoh"},"content":"     * @param deletedTask Task that has been deleted"},{"lineNumber":153,"author":{"gitId":"JulietTeoh"},"content":"     * @param numberOfTasks Number of remaining tasks"},{"lineNumber":154,"author":{"gitId":"JulietTeoh"},"content":"     * @return String representation that tells the user a specific task has been deleted"},{"lineNumber":155,"author":{"gitId":"JulietTeoh"},"content":"     */"},{"lineNumber":156,"author":{"gitId":"JulietTeoh"},"content":"    public String returnTaskDeleted(Task deletedTask, int numberOfTasks) {"},{"lineNumber":157,"author":{"gitId":"JulietTeoh"},"content":"        return \"Noted. I\u0027ve removed this task:\\n\" + padSpaces(deletedTask.toString(), paddingGui)"},{"lineNumber":158,"author":{"gitId":"JulietTeoh"},"content":"                + \"\\n\" + numberOfTasksLineGui(numberOfTasks);"},{"lineNumber":159,"author":{"gitId":"JulietTeoh"},"content":"    }"},{"lineNumber":160,"author":{"gitId":"JulietTeoh"},"content":""},{"lineNumber":161,"author":{"gitId":"JulietTeoh"},"content":"    /**"},{"lineNumber":162,"author":{"gitId":"JulietTeoh"},"content":"     * Shows the user the task that has been added to duke"},{"lineNumber":163,"author":{"gitId":"JulietTeoh"},"content":"     *"},{"lineNumber":164,"author":{"gitId":"JulietTeoh"},"content":"     * @param addedTask Task that has been added"},{"lineNumber":165,"author":{"gitId":"JulietTeoh"},"content":"     * @param numberOfTasks Number of tasks"},{"lineNumber":166,"author":{"gitId":"JulietTeoh"},"content":"     */"},{"lineNumber":167,"author":{"gitId":"JulietTeoh"},"content":"    public void showAddedTask(Task addedTask, int numberOfTasks) {"},{"lineNumber":168,"author":{"gitId":"JulietTeoh"},"content":"        String temp \u003d \"Got it. I\u0027ve added this task:\\n\" + padSpaces(addedTask.toString(), 7)"},{"lineNumber":169,"author":{"gitId":"JulietTeoh"},"content":"                + \"\\n\" + numberOfTasksLine(numberOfTasks);"},{"lineNumber":170,"author":{"gitId":"JulietTeoh"},"content":""},{"lineNumber":171,"author":{"gitId":"JulietTeoh"},"content":"        System.out.println(defaultFormatting(temp));"},{"lineNumber":172,"author":{"gitId":"JulietTeoh"},"content":"    }"},{"lineNumber":173,"author":{"gitId":"JulietTeoh"},"content":""},{"lineNumber":174,"author":{"gitId":"JulietTeoh"},"content":"    /**"},{"lineNumber":175,"author":{"gitId":"JulietTeoh"},"content":"     * Returns a string represention that tells the user a ask that has been added to duke"},{"lineNumber":176,"author":{"gitId":"JulietTeoh"},"content":"     *"},{"lineNumber":177,"author":{"gitId":"JulietTeoh"},"content":"     * @param addedTask Task that has been added"},{"lineNumber":178,"author":{"gitId":"JulietTeoh"},"content":"     * @param numberOfTasks Number of tasks"},{"lineNumber":179,"author":{"gitId":"JulietTeoh"},"content":"     * @return String represention that tells the user a ask that has been added to duke"},{"lineNumber":180,"author":{"gitId":"JulietTeoh"},"content":"     */"},{"lineNumber":181,"author":{"gitId":"JulietTeoh"},"content":"    public String returnAddedTask(Task addedTask, int numberOfTasks) {"},{"lineNumber":182,"author":{"gitId":"JulietTeoh"},"content":"        String temp \u003d \"Got it. I\u0027ve added this task:\\n\" + padSpaces(addedTask.toString(), paddingGui)"},{"lineNumber":183,"author":{"gitId":"JulietTeoh"},"content":"                + \"\\n\" + numberOfTasksLineGui(numberOfTasks);"},{"lineNumber":184,"author":{"gitId":"JulietTeoh"},"content":""},{"lineNumber":185,"author":{"gitId":"JulietTeoh"},"content":"        return temp;"},{"lineNumber":186,"author":{"gitId":"JulietTeoh"},"content":"    }"},{"lineNumber":187,"author":{"gitId":"JulietTeoh"},"content":""},{"lineNumber":188,"author":{"gitId":"JulietTeoh"},"content":"    /**"},{"lineNumber":189,"author":{"gitId":"JulietTeoh"},"content":"     * Shows tasks that are related to a string specificed by the user"},{"lineNumber":190,"author":{"gitId":"JulietTeoh"},"content":"     *"},{"lineNumber":191,"author":{"gitId":"JulietTeoh"},"content":"     * @param taskArray Array List of tasks that are related to a string specificed by the user"},{"lineNumber":192,"author":{"gitId":"JulietTeoh"},"content":"     */"},{"lineNumber":193,"author":{"gitId":"JulietTeoh"},"content":"    public void showFoundTaskList(ArrayList\u003cTask\u003e taskArray) {"},{"lineNumber":194,"author":{"gitId":"JulietTeoh"},"content":"        StringBuilder sb \u003d new StringBuilder();"},{"lineNumber":195,"author":{"gitId":"JulietTeoh"},"content":"        sb.append(horizontalLine()).append(\u0027\\n\u0027);"},{"lineNumber":196,"author":{"gitId":"JulietTeoh"},"content":""},{"lineNumber":197,"author":{"gitId":"JulietTeoh"},"content":"        sb.append(padSpaces(\"Here are the matching tasks in your list:\\n\", 5));"},{"lineNumber":198,"author":{"gitId":"JulietTeoh"},"content":"        for (int i \u003d 0; i \u003c taskArray.size(); i++) {"},{"lineNumber":199,"author":{"gitId":"JulietTeoh"},"content":""},{"lineNumber":200,"author":{"gitId":"JulietTeoh"},"content":"            Task currentTask \u003d taskArray.get(i);"},{"lineNumber":201,"author":{"gitId":"JulietTeoh"},"content":""},{"lineNumber":202,"author":{"gitId":"JulietTeoh"},"content":"            String numberIndicator \u003d (i + 1) + \".\";"},{"lineNumber":203,"author":{"gitId":"JulietTeoh"},"content":"            String temp \u003d numberIndicator + currentTask.toString() + \u0027\\n\u0027;"},{"lineNumber":204,"author":{"gitId":"JulietTeoh"},"content":""},{"lineNumber":205,"author":{"gitId":"JulietTeoh"},"content":"            sb.append(padSpaces(temp, 5));"},{"lineNumber":206,"author":{"gitId":"JulietTeoh"},"content":"        }"},{"lineNumber":207,"author":{"gitId":"JulietTeoh"},"content":"        sb.append(horizontalLine());"},{"lineNumber":208,"author":{"gitId":"JulietTeoh"},"content":"        System.out.println(sb.toString());"},{"lineNumber":209,"author":{"gitId":"JulietTeoh"},"content":"    }"},{"lineNumber":210,"author":{"gitId":"JulietTeoh"},"content":""},{"lineNumber":211,"author":{"gitId":"JulietTeoh"},"content":"    /**"},{"lineNumber":212,"author":{"gitId":"JulietTeoh"},"content":"     * Returns a string represention that tells the user the tasks that"},{"lineNumber":213,"author":{"gitId":"JulietTeoh"},"content":"     * are related to a string specificed by the user"},{"lineNumber":214,"author":{"gitId":"JulietTeoh"},"content":"     *"},{"lineNumber":215,"author":{"gitId":"JulietTeoh"},"content":"     * @param taskArray Array List of tasks that are related to a string specificed by the user"},{"lineNumber":216,"author":{"gitId":"JulietTeoh"},"content":"     * @return A string represention that tells the user the tasks that are related to a string specificed by the user"},{"lineNumber":217,"author":{"gitId":"JulietTeoh"},"content":"     */"},{"lineNumber":218,"author":{"gitId":"JulietTeoh"},"content":"    public String returnFoundTaskList(ArrayList\u003cTask\u003e taskArray) {"},{"lineNumber":219,"author":{"gitId":"JulietTeoh"},"content":"        StringBuilder sb \u003d new StringBuilder();"},{"lineNumber":220,"author":{"gitId":"JulietTeoh"},"content":""},{"lineNumber":221,"author":{"gitId":"JulietTeoh"},"content":"        sb.append(\"Here are the matching tasks in your list:\\n\");"},{"lineNumber":222,"author":{"gitId":"JulietTeoh"},"content":"        for (int i \u003d 0; i \u003c taskArray.size(); i++) {"},{"lineNumber":223,"author":{"gitId":"JulietTeoh"},"content":""},{"lineNumber":224,"author":{"gitId":"JulietTeoh"},"content":"            Task currentTask \u003d taskArray.get(i);"},{"lineNumber":225,"author":{"gitId":"JulietTeoh"},"content":""},{"lineNumber":226,"author":{"gitId":"JulietTeoh"},"content":"            String numberIndicator \u003d (i + 1) + \".\";"},{"lineNumber":227,"author":{"gitId":"JulietTeoh"},"content":"            String temp \u003d numberIndicator + currentTask.toString() + \u0027\\n\u0027;"},{"lineNumber":228,"author":{"gitId":"JulietTeoh"},"content":""},{"lineNumber":229,"author":{"gitId":"JulietTeoh"},"content":"            sb.append(padSpaces(temp, 4));"},{"lineNumber":230,"author":{"gitId":"JulietTeoh"},"content":"        }"},{"lineNumber":231,"author":{"gitId":"JulietTeoh"},"content":"        return sb.toString();"},{"lineNumber":232,"author":{"gitId":"JulietTeoh"},"content":"    }"},{"lineNumber":233,"author":{"gitId":"JulietTeoh"},"content":""},{"lineNumber":234,"author":{"gitId":"JulietTeoh"},"content":"    public String readCommand() {"},{"lineNumber":235,"author":{"gitId":"JulietTeoh"},"content":"        return scanner.nextLine().trim();"},{"lineNumber":236,"author":{"gitId":"JulietTeoh"},"content":"    }"},{"lineNumber":237,"author":{"gitId":"JulietTeoh"},"content":""},{"lineNumber":238,"author":{"gitId":"JulietTeoh"},"content":"    private static String horizontalLine() {"},{"lineNumber":239,"author":{"gitId":"JulietTeoh"},"content":"        return padSpaces(\"____________________________________________________________\", 4);"},{"lineNumber":240,"author":{"gitId":"JulietTeoh"},"content":"    }"},{"lineNumber":241,"author":{"gitId":"JulietTeoh"},"content":""},{"lineNumber":242,"author":{"gitId":"JulietTeoh"},"content":"    private static String defaultFormatting(String input) {"},{"lineNumber":243,"author":{"gitId":"JulietTeoh"},"content":"        return horizontalLine() + \u0027\\n\u0027 + padSpaces(input, 5) + \u0027\\n\u0027 + horizontalLine();"},{"lineNumber":244,"author":{"gitId":"JulietTeoh"},"content":"    }"},{"lineNumber":245,"author":{"gitId":"JulietTeoh"},"content":""},{"lineNumber":246,"author":{"gitId":"JulietTeoh"},"content":"    /**"},{"lineNumber":247,"author":{"gitId":"JulietTeoh"},"content":"     * Pads a string with spaces at its front"},{"lineNumber":248,"author":{"gitId":"JulietTeoh"},"content":"     *"},{"lineNumber":249,"author":{"gitId":"JulietTeoh"},"content":"     * @param input Input string"},{"lineNumber":250,"author":{"gitId":"JulietTeoh"},"content":"     * @param numOfSpacesToPad Number of spaces to add in front of a string"},{"lineNumber":251,"author":{"gitId":"JulietTeoh"},"content":"     * @return String padded with spaces"},{"lineNumber":252,"author":{"gitId":"JulietTeoh"},"content":"     */"},{"lineNumber":253,"author":{"gitId":"JulietTeoh"},"content":"    private static String padSpaces(String input, int numOfSpacesToPad) {"},{"lineNumber":254,"author":{"gitId":"JulietTeoh"},"content":"        StringBuilder toreturn \u003d new StringBuilder();"},{"lineNumber":255,"author":{"gitId":"JulietTeoh"},"content":""},{"lineNumber":256,"author":{"gitId":"JulietTeoh"},"content":"        toreturn.append(\" \".repeat(Math.max(0, numOfSpacesToPad)));"},{"lineNumber":257,"author":{"gitId":"JulietTeoh"},"content":""},{"lineNumber":258,"author":{"gitId":"JulietTeoh"},"content":"        return toreturn.toString() + input;"},{"lineNumber":259,"author":{"gitId":"JulietTeoh"},"content":"    }"},{"lineNumber":260,"author":{"gitId":"JulietTeoh"},"content":""},{"lineNumber":261,"author":{"gitId":"JulietTeoh"},"content":"    /**"},{"lineNumber":262,"author":{"gitId":"JulietTeoh"},"content":"     * Shows tasks that have been updated"},{"lineNumber":263,"author":{"gitId":"JulietTeoh"},"content":"     *"},{"lineNumber":264,"author":{"gitId":"JulietTeoh"},"content":"     * @param task Updated taks to print out"},{"lineNumber":265,"author":{"gitId":"JulietTeoh"},"content":"     */"},{"lineNumber":266,"author":{"gitId":"JulietTeoh"},"content":"    public void showChangedTask(Task task) {"},{"lineNumber":267,"author":{"gitId":"JulietTeoh"},"content":"        System.out.println(defaultFormatting(\"Alright! I\u0027ve update the task as follows:\\n\""},{"lineNumber":268,"author":{"gitId":"JulietTeoh"},"content":"                + padSpaces(task.toString(), 7)));"},{"lineNumber":269,"author":{"gitId":"JulietTeoh"},"content":"    }"},{"lineNumber":270,"author":{"gitId":"JulietTeoh"},"content":""},{"lineNumber":271,"author":{"gitId":"JulietTeoh"},"content":"    public String returnChangedTask(Task task) {"},{"lineNumber":272,"author":{"gitId":"JulietTeoh"},"content":"        return \"Alright! I\u0027ve update the task as follows:\\n\" + padSpaces(task.toString(), paddingGui);"},{"lineNumber":273,"author":{"gitId":"JulietTeoh"},"content":"    }"},{"lineNumber":274,"author":{"gitId":"JulietTeoh"},"content":"}"}],"authorContributionMap":{"JulietTeoh":274}},{"path":"src/main/java/duke/task/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"JulietTeoh"},"content":"package duke.task;"},{"lineNumber":2,"author":{"gitId":"JulietTeoh"},"content":""},{"lineNumber":3,"author":{"gitId":"JulietTeoh"},"content":"import java.time.LocalDate;"},{"lineNumber":4,"author":{"gitId":"JulietTeoh"},"content":"import java.time.format.DateTimeFormatter;"},{"lineNumber":5,"author":{"gitId":"JulietTeoh"},"content":"import java.util.ArrayList;"},{"lineNumber":6,"author":{"gitId":"JulietTeoh"},"content":""},{"lineNumber":7,"author":{"gitId":"JulietTeoh"},"content":"import duke.exceptions.TaskException;"},{"lineNumber":8,"author":{"gitId":"JulietTeoh"},"content":""},{"lineNumber":9,"author":{"gitId":"JulietTeoh"},"content":"/**"},{"lineNumber":10,"author":{"gitId":"JulietTeoh"},"content":" * Deadline task class"},{"lineNumber":11,"author":{"gitId":"JulietTeoh"},"content":" */"},{"lineNumber":12,"author":{"gitId":"JulietTeoh"},"content":"public class Deadline extends Task {"},{"lineNumber":13,"author":{"gitId":"JulietTeoh"},"content":"    private static final DateTimeFormatter FORMAT_ONE \u003d DateTimeFormatter.ofPattern(\"d-M-uuuu\");"},{"lineNumber":14,"author":{"gitId":"JulietTeoh"},"content":"    private static final DateTimeFormatter FORMAT_TWO \u003d DateTimeFormatter.ofPattern(\"uuuu-M-d\");"},{"lineNumber":15,"author":{"gitId":"JulietTeoh"},"content":"    private String deadlineBy;"},{"lineNumber":16,"author":{"gitId":"JulietTeoh"},"content":"    private LocalDate dateBy;"},{"lineNumber":17,"author":{"gitId":"JulietTeoh"},"content":""},{"lineNumber":18,"author":{"gitId":"JulietTeoh"},"content":"    /**"},{"lineNumber":19,"author":{"gitId":"JulietTeoh"},"content":"     * Default constructor for deadline"},{"lineNumber":20,"author":{"gitId":"JulietTeoh"},"content":"     * @param description description of deadline"},{"lineNumber":21,"author":{"gitId":"JulietTeoh"},"content":"     * @param by String of when the deadline is by"},{"lineNumber":22,"author":{"gitId":"JulietTeoh"},"content":"     * @throws TaskException throws an error if date formatting is wrong"},{"lineNumber":23,"author":{"gitId":"JulietTeoh"},"content":"     */"},{"lineNumber":24,"author":{"gitId":"JulietTeoh"},"content":"    public Deadline(String description, String by) throws TaskException {"},{"lineNumber":25,"author":{"gitId":"JulietTeoh"},"content":"        super(description);"},{"lineNumber":26,"author":{"gitId":"JulietTeoh"},"content":"        this.deadlineBy \u003d by;"},{"lineNumber":27,"author":{"gitId":"JulietTeoh"},"content":"        try {"},{"lineNumber":28,"author":{"gitId":"JulietTeoh"},"content":"            this.dateBy \u003d getDateBy(by);"},{"lineNumber":29,"author":{"gitId":"JulietTeoh"},"content":"        } catch (TaskException e) {"},{"lineNumber":30,"author":{"gitId":"JulietTeoh"},"content":"            throw e;"},{"lineNumber":31,"author":{"gitId":"JulietTeoh"},"content":"        }"},{"lineNumber":32,"author":{"gitId":"JulietTeoh"},"content":"    }"},{"lineNumber":33,"author":{"gitId":"JulietTeoh"},"content":""},{"lineNumber":34,"author":{"gitId":"JulietTeoh"},"content":"    /**"},{"lineNumber":35,"author":{"gitId":"JulietTeoh"},"content":"     * Alternative constructor for deadline"},{"lineNumber":36,"author":{"gitId":"JulietTeoh"},"content":"     * @param description description of deadline"},{"lineNumber":37,"author":{"gitId":"JulietTeoh"},"content":"     * @param by String of when the deadline is by"},{"lineNumber":38,"author":{"gitId":"JulietTeoh"},"content":"     * @param doneInt index to signify if deadline is done or not"},{"lineNumber":39,"author":{"gitId":"JulietTeoh"},"content":"     * @throws TaskException throws an error if date formatting is wrong"},{"lineNumber":40,"author":{"gitId":"JulietTeoh"},"content":"     */"},{"lineNumber":41,"author":{"gitId":"JulietTeoh"},"content":"    public Deadline(String description, String by, int doneInt) throws TaskException {"},{"lineNumber":42,"author":{"gitId":"JulietTeoh"},"content":"        super(description, doneInt);"},{"lineNumber":43,"author":{"gitId":"JulietTeoh"},"content":"        this.deadlineBy \u003d by;"},{"lineNumber":44,"author":{"gitId":"JulietTeoh"},"content":""},{"lineNumber":45,"author":{"gitId":"JulietTeoh"},"content":"        try {"},{"lineNumber":46,"author":{"gitId":"JulietTeoh"},"content":"            String trimmed \u003d deadlineBy.trim();"},{"lineNumber":47,"author":{"gitId":"JulietTeoh"},"content":"            if (trimmed.substring(0, 4).contains(\"-\")) {"},{"lineNumber":48,"author":{"gitId":"JulietTeoh"},"content":"                dateBy \u003d LocalDate.parse(deadlineBy.trim(), FORMAT_ONE);"},{"lineNumber":49,"author":{"gitId":"JulietTeoh"},"content":"            } else {"},{"lineNumber":50,"author":{"gitId":"JulietTeoh"},"content":"                dateBy \u003d LocalDate.parse(deadlineBy.trim(), FORMAT_TWO);"},{"lineNumber":51,"author":{"gitId":"JulietTeoh"},"content":"            }"},{"lineNumber":52,"author":{"gitId":"JulietTeoh"},"content":"        } catch (Exception e) {"},{"lineNumber":53,"author":{"gitId":"JulietTeoh"},"content":"            throw new TaskException(\"deadline must be of the format date-month-year, in numbers.\");"},{"lineNumber":54,"author":{"gitId":"JulietTeoh"},"content":"        }"},{"lineNumber":55,"author":{"gitId":"JulietTeoh"},"content":"    }"},{"lineNumber":56,"author":{"gitId":"JulietTeoh"},"content":""},{"lineNumber":57,"author":{"gitId":"JulietTeoh"},"content":"    private LocalDate getDateBy(String by) throws TaskException {"},{"lineNumber":58,"author":{"gitId":"JulietTeoh"},"content":"        try {"},{"lineNumber":59,"author":{"gitId":"JulietTeoh"},"content":"            String trimmed \u003d by.trim();"},{"lineNumber":60,"author":{"gitId":"JulietTeoh"},"content":"            if (trimmed.substring(0, 4).contains(\"-\")) {"},{"lineNumber":61,"author":{"gitId":"JulietTeoh"},"content":"                return LocalDate.parse(trimmed, FORMAT_ONE);"},{"lineNumber":62,"author":{"gitId":"JulietTeoh"},"content":"            } else {"},{"lineNumber":63,"author":{"gitId":"JulietTeoh"},"content":"                return LocalDate.parse(trimmed, FORMAT_TWO);"},{"lineNumber":64,"author":{"gitId":"JulietTeoh"},"content":"            }"},{"lineNumber":65,"author":{"gitId":"JulietTeoh"},"content":"        } catch (Exception e) {"},{"lineNumber":66,"author":{"gitId":"JulietTeoh"},"content":"            throw new TaskException(\"deadline must be of the format date-month-year, in numbers.\");"},{"lineNumber":67,"author":{"gitId":"JulietTeoh"},"content":"        }"},{"lineNumber":68,"author":{"gitId":"JulietTeoh"},"content":"    }"},{"lineNumber":69,"author":{"gitId":"JulietTeoh"},"content":""},{"lineNumber":70,"author":{"gitId":"JulietTeoh"},"content":"    @Override"},{"lineNumber":71,"author":{"gitId":"JulietTeoh"},"content":"    public String toString() {"},{"lineNumber":72,"author":{"gitId":"JulietTeoh"},"content":"        String formattedDate \u003d dateBy.format(DateTimeFormatter.ofPattern(\"MMM d uuuu\"));"},{"lineNumber":73,"author":{"gitId":"JulietTeoh"},"content":"        return \"[D]\" + super.toString() + \" (by: \" + formattedDate + \")\";"},{"lineNumber":74,"author":{"gitId":"JulietTeoh"},"content":"    }"},{"lineNumber":75,"author":{"gitId":"JulietTeoh"},"content":""},{"lineNumber":76,"author":{"gitId":"JulietTeoh"},"content":"    @Override"},{"lineNumber":77,"author":{"gitId":"JulietTeoh"},"content":"    public String toSaveFormat() {"},{"lineNumber":78,"author":{"gitId":"JulietTeoh"},"content":"        return \"D|\" + super.toSaveFormat() + \"|\" + deadlineBy;"},{"lineNumber":79,"author":{"gitId":"JulietTeoh"},"content":"    }"},{"lineNumber":80,"author":{"gitId":"JulietTeoh"},"content":""},{"lineNumber":81,"author":{"gitId":"JulietTeoh"},"content":"    @Override"},{"lineNumber":82,"author":{"gitId":"JulietTeoh"},"content":"    public void changeDescription(ArrayList\u003cString\u003e arrOfDescriptionToChange) throws TaskException {"},{"lineNumber":83,"author":{"gitId":"JulietTeoh"},"content":"        try {"},{"lineNumber":84,"author":{"gitId":"JulietTeoh"},"content":"            for (int i \u003d 0; i \u003c arrOfDescriptionToChange.size(); i \u003d i + 2) {"},{"lineNumber":85,"author":{"gitId":"JulietTeoh"},"content":"                if (arrOfDescriptionToChange.get(i).equals(\"/de\")) {"},{"lineNumber":86,"author":{"gitId":"JulietTeoh"},"content":"                    this.description \u003d arrOfDescriptionToChange.get(i + 1);"},{"lineNumber":87,"author":{"gitId":"JulietTeoh"},"content":"                } else if (arrOfDescriptionToChange.get(i).equals(\"/by\")) {"},{"lineNumber":88,"author":{"gitId":"JulietTeoh"},"content":"                    this.deadlineBy \u003d arrOfDescriptionToChange.get(i + 1);"},{"lineNumber":89,"author":{"gitId":"JulietTeoh"},"content":"                    this.dateBy \u003d getDateBy(arrOfDescriptionToChange.get(i + 1));"},{"lineNumber":90,"author":{"gitId":"JulietTeoh"},"content":"                } else {"},{"lineNumber":91,"author":{"gitId":"JulietTeoh"},"content":"                    throw new TaskException(\"Illegal tag detected! \\nPlease tag the part of the task you wish to change\""},{"lineNumber":92,"author":{"gitId":"JulietTeoh"},"content":"                            + \" using /de for general description, /by for deadline by and /at for event at.\");"},{"lineNumber":93,"author":{"gitId":"JulietTeoh"},"content":"                }"},{"lineNumber":94,"author":{"gitId":"JulietTeoh"},"content":"            }"},{"lineNumber":95,"author":{"gitId":"JulietTeoh"},"content":"        } catch (TaskException e) {"},{"lineNumber":96,"author":{"gitId":"JulietTeoh"},"content":"            throw e;"},{"lineNumber":97,"author":{"gitId":"JulietTeoh"},"content":"        }"},{"lineNumber":98,"author":{"gitId":"JulietTeoh"},"content":"    }"},{"lineNumber":99,"author":{"gitId":"JulietTeoh"},"content":"}"}],"authorContributionMap":{"JulietTeoh":99}},{"path":"src/main/java/duke/task/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"JulietTeoh"},"content":"package duke.task;"},{"lineNumber":2,"author":{"gitId":"JulietTeoh"},"content":""},{"lineNumber":3,"author":{"gitId":"JulietTeoh"},"content":"import java.util.ArrayList;"},{"lineNumber":4,"author":{"gitId":"JulietTeoh"},"content":""},{"lineNumber":5,"author":{"gitId":"JulietTeoh"},"content":"import duke.exceptions.TaskException;"},{"lineNumber":6,"author":{"gitId":"JulietTeoh"},"content":""},{"lineNumber":7,"author":{"gitId":"JulietTeoh"},"content":"/**"},{"lineNumber":8,"author":{"gitId":"JulietTeoh"},"content":" * Event task class"},{"lineNumber":9,"author":{"gitId":"JulietTeoh"},"content":" */"},{"lineNumber":10,"author":{"gitId":"JulietTeoh"},"content":"public class Event extends Task {"},{"lineNumber":11,"author":{"gitId":"JulietTeoh"},"content":"    private String eventAt;"},{"lineNumber":12,"author":{"gitId":"JulietTeoh"},"content":""},{"lineNumber":13,"author":{"gitId":"JulietTeoh"},"content":"    /**"},{"lineNumber":14,"author":{"gitId":"JulietTeoh"},"content":"     * Default constructor for event"},{"lineNumber":15,"author":{"gitId":"JulietTeoh"},"content":"     * @param description String description of event"},{"lineNumber":16,"author":{"gitId":"JulietTeoh"},"content":"     * @param eventAt String description of where event is at"},{"lineNumber":17,"author":{"gitId":"JulietTeoh"},"content":"     */"},{"lineNumber":18,"author":{"gitId":"JulietTeoh"},"content":"    public Event(String description, String eventAt) {"},{"lineNumber":19,"author":{"gitId":"JulietTeoh"},"content":"        super(description);"},{"lineNumber":20,"author":{"gitId":"JulietTeoh"},"content":"        this.eventAt \u003d eventAt;"},{"lineNumber":21,"author":{"gitId":"JulietTeoh"},"content":"    }"},{"lineNumber":22,"author":{"gitId":"JulietTeoh"},"content":""},{"lineNumber":23,"author":{"gitId":"JulietTeoh"},"content":"    /**"},{"lineNumber":24,"author":{"gitId":"JulietTeoh"},"content":"     * Alternative constructor for Event"},{"lineNumber":25,"author":{"gitId":"JulietTeoh"},"content":"     * @param description String description of event"},{"lineNumber":26,"author":{"gitId":"JulietTeoh"},"content":"     * @param eventAt String description of where event is at"},{"lineNumber":27,"author":{"gitId":"JulietTeoh"},"content":"     * @param doneInt integer to indicate if event is done"},{"lineNumber":28,"author":{"gitId":"JulietTeoh"},"content":"     */"},{"lineNumber":29,"author":{"gitId":"JulietTeoh"},"content":"    public Event(String description, String eventAt, int doneInt) {"},{"lineNumber":30,"author":{"gitId":"JulietTeoh"},"content":"        super(description, doneInt);"},{"lineNumber":31,"author":{"gitId":"JulietTeoh"},"content":"        this.eventAt \u003d eventAt;"},{"lineNumber":32,"author":{"gitId":"JulietTeoh"},"content":"    }"},{"lineNumber":33,"author":{"gitId":"JulietTeoh"},"content":""},{"lineNumber":34,"author":{"gitId":"JulietTeoh"},"content":"    @Override"},{"lineNumber":35,"author":{"gitId":"JulietTeoh"},"content":"    public String toString() {"},{"lineNumber":36,"author":{"gitId":"JulietTeoh"},"content":"        return \"[E]\" + super.toString() + \" (at: \" + eventAt + \")\";"},{"lineNumber":37,"author":{"gitId":"JulietTeoh"},"content":"    }"},{"lineNumber":38,"author":{"gitId":"JulietTeoh"},"content":""},{"lineNumber":39,"author":{"gitId":"JulietTeoh"},"content":"    @Override"},{"lineNumber":40,"author":{"gitId":"JulietTeoh"},"content":"    public String toSaveFormat() {"},{"lineNumber":41,"author":{"gitId":"JulietTeoh"},"content":"        return \"E|\" + super.toSaveFormat() + \"|\" + eventAt;"},{"lineNumber":42,"author":{"gitId":"JulietTeoh"},"content":"    }"},{"lineNumber":43,"author":{"gitId":"JulietTeoh"},"content":""},{"lineNumber":44,"author":{"gitId":"JulietTeoh"},"content":"    @Override"},{"lineNumber":45,"author":{"gitId":"JulietTeoh"},"content":"    public void changeDescription(ArrayList\u003cString\u003e arrOfDescriptionToChange) throws TaskException {"},{"lineNumber":46,"author":{"gitId":"JulietTeoh"},"content":"        for (int i \u003d 0; i \u003c arrOfDescriptionToChange.size(); i \u003d i + 2) {"},{"lineNumber":47,"author":{"gitId":"JulietTeoh"},"content":"            if (arrOfDescriptionToChange.get(i).equals(\"/de\")) {"},{"lineNumber":48,"author":{"gitId":"JulietTeoh"},"content":"                this.description \u003d arrOfDescriptionToChange.get(i + 1);"},{"lineNumber":49,"author":{"gitId":"JulietTeoh"},"content":"            } else if (arrOfDescriptionToChange.get(i).equals(\"/at\")) {"},{"lineNumber":50,"author":{"gitId":"JulietTeoh"},"content":"                this.eventAt \u003d arrOfDescriptionToChange.get(i + 1);"},{"lineNumber":51,"author":{"gitId":"JulietTeoh"},"content":"            } else {"},{"lineNumber":52,"author":{"gitId":"JulietTeoh"},"content":"                throw new TaskException(\"Illegal tag detected! \\nPlease tag the part of the task you wish to change \""},{"lineNumber":53,"author":{"gitId":"JulietTeoh"},"content":"                        + \"using /de for general description, /by for deadline by and /at for event at.\");"},{"lineNumber":54,"author":{"gitId":"JulietTeoh"},"content":"            }"},{"lineNumber":55,"author":{"gitId":"JulietTeoh"},"content":"        }"},{"lineNumber":56,"author":{"gitId":"JulietTeoh"},"content":"    }"},{"lineNumber":57,"author":{"gitId":"JulietTeoh"},"content":"}"}],"authorContributionMap":{"JulietTeoh":57}},{"path":"src/main/java/duke/task/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"JulietTeoh"},"content":"package duke.task;"},{"lineNumber":2,"author":{"gitId":"JulietTeoh"},"content":""},{"lineNumber":3,"author":{"gitId":"JulietTeoh"},"content":"import java.util.ArrayList;"},{"lineNumber":4,"author":{"gitId":"JulietTeoh"},"content":""},{"lineNumber":5,"author":{"gitId":"JulietTeoh"},"content":"import duke.exceptions.TaskException;"},{"lineNumber":6,"author":{"gitId":"JulietTeoh"},"content":""},{"lineNumber":7,"author":{"gitId":"JulietTeoh"},"content":"/**"},{"lineNumber":8,"author":{"gitId":"JulietTeoh"},"content":" * Parent Class of all tasks"},{"lineNumber":9,"author":{"gitId":"JulietTeoh"},"content":" */"},{"lineNumber":10,"author":{"gitId":"JulietTeoh"},"content":"public class Task {"},{"lineNumber":11,"author":{"gitId":"JulietTeoh"},"content":"    protected String description;"},{"lineNumber":12,"author":{"gitId":"JulietTeoh"},"content":""},{"lineNumber":13,"author":{"gitId":"JulietTeoh"},"content":"    private boolean isDone;"},{"lineNumber":14,"author":{"gitId":"JulietTeoh"},"content":""},{"lineNumber":15,"author":{"gitId":"JulietTeoh"},"content":"    /**"},{"lineNumber":16,"author":{"gitId":"JulietTeoh"},"content":"     * Default Constructor of a task"},{"lineNumber":17,"author":{"gitId":"JulietTeoh"},"content":"     *"},{"lineNumber":18,"author":{"gitId":"JulietTeoh"},"content":"     * @param description string description of a task"},{"lineNumber":19,"author":{"gitId":"JulietTeoh"},"content":"     */"},{"lineNumber":20,"author":{"gitId":"JulietTeoh"},"content":"    public Task(String description) {"},{"lineNumber":21,"author":{"gitId":"JulietTeoh"},"content":"        assert description !\u003d null : \"description of task cannot be null\";"},{"lineNumber":22,"author":{"gitId":"JulietTeoh"},"content":"        this.description \u003d description;"},{"lineNumber":23,"author":{"gitId":"JulietTeoh"},"content":"        this.isDone \u003d false;"},{"lineNumber":24,"author":{"gitId":"JulietTeoh"},"content":"    }"},{"lineNumber":25,"author":{"gitId":"JulietTeoh"},"content":""},{"lineNumber":26,"author":{"gitId":"JulietTeoh"},"content":"    /**"},{"lineNumber":27,"author":{"gitId":"JulietTeoh"},"content":"     * Constructor of a task"},{"lineNumber":28,"author":{"gitId":"JulietTeoh"},"content":"     *"},{"lineNumber":29,"author":{"gitId":"JulietTeoh"},"content":"     * @param description string description of a task"},{"lineNumber":30,"author":{"gitId":"JulietTeoh"},"content":"     * @param doneInt 1 indicates that the task is done, 0 indicates that the task is not done"},{"lineNumber":31,"author":{"gitId":"JulietTeoh"},"content":"     */"},{"lineNumber":32,"author":{"gitId":"JulietTeoh"},"content":"    public Task(String description, int doneInt) {"},{"lineNumber":33,"author":{"gitId":"JulietTeoh"},"content":"        this.description \u003d description;"},{"lineNumber":34,"author":{"gitId":"JulietTeoh"},"content":"        if (doneInt \u003d\u003d 1) {"},{"lineNumber":35,"author":{"gitId":"JulietTeoh"},"content":"            this.isDone \u003d true;"},{"lineNumber":36,"author":{"gitId":"JulietTeoh"},"content":"        } else {"},{"lineNumber":37,"author":{"gitId":"JulietTeoh"},"content":"            this.isDone \u003d false;"},{"lineNumber":38,"author":{"gitId":"JulietTeoh"},"content":"        }"},{"lineNumber":39,"author":{"gitId":"JulietTeoh"},"content":"    }"},{"lineNumber":40,"author":{"gitId":"JulietTeoh"},"content":""},{"lineNumber":41,"author":{"gitId":"JulietTeoh"},"content":"    /**"},{"lineNumber":42,"author":{"gitId":"JulietTeoh"},"content":"     * @return If the task is done, return an X, else return a empty space character"},{"lineNumber":43,"author":{"gitId":"JulietTeoh"},"content":"     */"},{"lineNumber":44,"author":{"gitId":"JulietTeoh"},"content":"    private String getStatusIcon() {"},{"lineNumber":45,"author":{"gitId":"JulietTeoh"},"content":"        return (isDone ? \"X\" : \" \"); //return tick or X symbols"},{"lineNumber":46,"author":{"gitId":"JulietTeoh"},"content":"    }"},{"lineNumber":47,"author":{"gitId":"JulietTeoh"},"content":""},{"lineNumber":48,"author":{"gitId":"JulietTeoh"},"content":"    /**"},{"lineNumber":49,"author":{"gitId":"JulietTeoh"},"content":"     * @return String that describes the task and its done status"},{"lineNumber":50,"author":{"gitId":"JulietTeoh"},"content":"     */"},{"lineNumber":51,"author":{"gitId":"JulietTeoh"},"content":"    @Override"},{"lineNumber":52,"author":{"gitId":"JulietTeoh"},"content":"    public String toString() {"},{"lineNumber":53,"author":{"gitId":"JulietTeoh"},"content":"        return \"[\" + getStatusIcon() + \"] \" + description;"},{"lineNumber":54,"author":{"gitId":"JulietTeoh"},"content":"    }"},{"lineNumber":55,"author":{"gitId":"JulietTeoh"},"content":""},{"lineNumber":56,"author":{"gitId":"JulietTeoh"},"content":"    public void changeTaskToDone() {"},{"lineNumber":57,"author":{"gitId":"JulietTeoh"},"content":"        isDone \u003d true;"},{"lineNumber":58,"author":{"gitId":"JulietTeoh"},"content":"    }"},{"lineNumber":59,"author":{"gitId":"JulietTeoh"},"content":""},{"lineNumber":60,"author":{"gitId":"JulietTeoh"},"content":"    /**"},{"lineNumber":61,"author":{"gitId":"JulietTeoh"},"content":"     * @return Output string that in the format that it should be saved as"},{"lineNumber":62,"author":{"gitId":"JulietTeoh"},"content":"     */"},{"lineNumber":63,"author":{"gitId":"JulietTeoh"},"content":"    public String toSaveFormat() {"},{"lineNumber":64,"author":{"gitId":"JulietTeoh"},"content":"        int isDoneInt \u003d isDone ? 1 : 0;"},{"lineNumber":65,"author":{"gitId":"JulietTeoh"},"content":"        return isDoneInt + \"|\" + description;"},{"lineNumber":66,"author":{"gitId":"JulietTeoh"},"content":"    }"},{"lineNumber":67,"author":{"gitId":"JulietTeoh"},"content":""},{"lineNumber":68,"author":{"gitId":"JulietTeoh"},"content":"    /**"},{"lineNumber":69,"author":{"gitId":"JulietTeoh"},"content":"     * Changes the descriptions within a task"},{"lineNumber":70,"author":{"gitId":"JulietTeoh"},"content":"     *"},{"lineNumber":71,"author":{"gitId":"JulietTeoh"},"content":"     * @param arrOfDescriptionToChange arrayList of String descriptions to change"},{"lineNumber":72,"author":{"gitId":"JulietTeoh"},"content":"     * @throws TaskException Throws a task exception if there is some error in the array"},{"lineNumber":73,"author":{"gitId":"JulietTeoh"},"content":"     */"},{"lineNumber":74,"author":{"gitId":"JulietTeoh"},"content":"    public void changeDescription(ArrayList\u003cString\u003e arrOfDescriptionToChange) throws TaskException {"},{"lineNumber":75,"author":{"gitId":"JulietTeoh"},"content":"        for (int i \u003d 0; i \u003c arrOfDescriptionToChange.size(); i \u003d i + 2) {"},{"lineNumber":76,"author":{"gitId":"JulietTeoh"},"content":"            if (arrOfDescriptionToChange.get(i).equals(\"/de\")) {"},{"lineNumber":77,"author":{"gitId":"JulietTeoh"},"content":"                this.description \u003d arrOfDescriptionToChange.get(i + 1);"},{"lineNumber":78,"author":{"gitId":"JulietTeoh"},"content":"            } else {"},{"lineNumber":79,"author":{"gitId":"JulietTeoh"},"content":"                throw new TaskException(\"Illegal tag detected! \\nPlease tag the part of the task you wish to change \""},{"lineNumber":80,"author":{"gitId":"JulietTeoh"},"content":"                        + \"using /de for general description, /by for deadline by and /at for event at.\");"},{"lineNumber":81,"author":{"gitId":"JulietTeoh"},"content":"            }"},{"lineNumber":82,"author":{"gitId":"JulietTeoh"},"content":"        }"},{"lineNumber":83,"author":{"gitId":"JulietTeoh"},"content":"    }"},{"lineNumber":84,"author":{"gitId":"JulietTeoh"},"content":""},{"lineNumber":85,"author":{"gitId":"JulietTeoh"},"content":"    public boolean descriptionContains(String input) {"},{"lineNumber":86,"author":{"gitId":"JulietTeoh"},"content":"        return description.contains(input);"},{"lineNumber":87,"author":{"gitId":"JulietTeoh"},"content":"    }"},{"lineNumber":88,"author":{"gitId":"JulietTeoh"},"content":"}"}],"authorContributionMap":{"JulietTeoh":88}},{"path":"src/main/java/duke/task/ToDo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"JulietTeoh"},"content":"package duke.task;"},{"lineNumber":2,"author":{"gitId":"JulietTeoh"},"content":""},{"lineNumber":3,"author":{"gitId":"JulietTeoh"},"content":"import java.util.ArrayList;"},{"lineNumber":4,"author":{"gitId":"JulietTeoh"},"content":""},{"lineNumber":5,"author":{"gitId":"JulietTeoh"},"content":"import duke.exceptions.TaskException;"},{"lineNumber":6,"author":{"gitId":"JulietTeoh"},"content":""},{"lineNumber":7,"author":{"gitId":"JulietTeoh"},"content":"/**"},{"lineNumber":8,"author":{"gitId":"JulietTeoh"},"content":" * Todo task class"},{"lineNumber":9,"author":{"gitId":"JulietTeoh"},"content":" */"},{"lineNumber":10,"author":{"gitId":"JulietTeoh"},"content":"public class ToDo extends Task {"},{"lineNumber":11,"author":{"gitId":"JulietTeoh"},"content":"    public ToDo(String description) {"},{"lineNumber":12,"author":{"gitId":"JulietTeoh"},"content":"        super(description);"},{"lineNumber":13,"author":{"gitId":"JulietTeoh"},"content":"    }"},{"lineNumber":14,"author":{"gitId":"JulietTeoh"},"content":""},{"lineNumber":15,"author":{"gitId":"JulietTeoh"},"content":"    public ToDo(String description, int doneInt) {"},{"lineNumber":16,"author":{"gitId":"JulietTeoh"},"content":"        super(description, doneInt);"},{"lineNumber":17,"author":{"gitId":"JulietTeoh"},"content":"    }"},{"lineNumber":18,"author":{"gitId":"JulietTeoh"},"content":""},{"lineNumber":19,"author":{"gitId":"JulietTeoh"},"content":"    @Override"},{"lineNumber":20,"author":{"gitId":"JulietTeoh"},"content":"    public String toString() {"},{"lineNumber":21,"author":{"gitId":"JulietTeoh"},"content":"        return \"[T]\" + super.toString();"},{"lineNumber":22,"author":{"gitId":"JulietTeoh"},"content":"    }"},{"lineNumber":23,"author":{"gitId":"JulietTeoh"},"content":""},{"lineNumber":24,"author":{"gitId":"JulietTeoh"},"content":"    @Override"},{"lineNumber":25,"author":{"gitId":"JulietTeoh"},"content":"    public String toSaveFormat() {"},{"lineNumber":26,"author":{"gitId":"JulietTeoh"},"content":"        return \"T|\" + super.toSaveFormat();"},{"lineNumber":27,"author":{"gitId":"JulietTeoh"},"content":"    }"},{"lineNumber":28,"author":{"gitId":"JulietTeoh"},"content":""},{"lineNumber":29,"author":{"gitId":"JulietTeoh"},"content":"    public void changeDescription(ArrayList\u003cString\u003e arrOfDescriptionToChange) throws TaskException {"},{"lineNumber":30,"author":{"gitId":"JulietTeoh"},"content":"        super.changeDescription(arrOfDescriptionToChange);"},{"lineNumber":31,"author":{"gitId":"JulietTeoh"},"content":"    }"},{"lineNumber":32,"author":{"gitId":"JulietTeoh"},"content":"}"}],"authorContributionMap":{"JulietTeoh":32}},{"path":"src/main/resources/view/DialogBox.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"JulietTeoh"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"},{"lineNumber":2,"author":{"gitId":"JulietTeoh"},"content":""},{"lineNumber":3,"author":{"gitId":"JulietTeoh"},"content":"\u003c?import javafx.geometry.Insets?\u003e"},{"lineNumber":4,"author":{"gitId":"JulietTeoh"},"content":"\u003c?import javafx.scene.control.Label?\u003e"},{"lineNumber":5,"author":{"gitId":"JulietTeoh"},"content":"\u003c?import javafx.scene.image.ImageView?\u003e"},{"lineNumber":6,"author":{"gitId":"JulietTeoh"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e"},{"lineNumber":7,"author":{"gitId":"JulietTeoh"},"content":""},{"lineNumber":8,"author":{"gitId":"JulietTeoh"},"content":"\u003cfx:root alignment\u003d\"TOP_RIGHT\" maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\" prefWidth\u003d\"400.0\" type\u003d\"javafx.scene.layout.HBox\" xmlns\u003d\"http://javafx.com/javafx/15.0.1\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e"},{"lineNumber":9,"author":{"gitId":"JulietTeoh"},"content":"    \u003cchildren\u003e"},{"lineNumber":10,"author":{"gitId":"JulietTeoh"},"content":"        \u003cLabel fx:id\u003d\"dialog\" graphicTextGap\u003d\"8.0\" maxHeight\u003d\"1.7976931348623157E308\" minHeight\u003d\"99.0\" minWidth\u003d\"276.0\" style\u003d\"-fx-background-color: #09b8f8#09b8f8;\" text\u003d\"Label\" wrapText\u003d\"true\" HBox.hgrow\u003d\"ALWAYS\"\u003e"},{"lineNumber":11,"author":{"gitId":"JulietTeoh"},"content":"         \u003cHBox.margin\u003e"},{"lineNumber":12,"author":{"gitId":"JulietTeoh"},"content":"            \u003cInsets /\u003e"},{"lineNumber":13,"author":{"gitId":"JulietTeoh"},"content":"         \u003c/HBox.margin\u003e\u003c/Label\u003e"},{"lineNumber":14,"author":{"gitId":"JulietTeoh"},"content":"        \u003cImageView fx:id\u003d\"displayPicture\" fitHeight\u003d\"99.0\" fitWidth\u003d\"99.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\" HBox.hgrow\u003d\"ALWAYS\" /\u003e"},{"lineNumber":15,"author":{"gitId":"JulietTeoh"},"content":"    \u003c/children\u003e"},{"lineNumber":16,"author":{"gitId":"JulietTeoh"},"content":"    \u003cpadding\u003e"},{"lineNumber":17,"author":{"gitId":"JulietTeoh"},"content":"        \u003cInsets bottom\u003d\"15.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"15.0\" /\u003e"},{"lineNumber":18,"author":{"gitId":"JulietTeoh"},"content":"    \u003c/padding\u003e"},{"lineNumber":19,"author":{"gitId":"JulietTeoh"},"content":"\u003c/fx:root\u003e"}],"authorContributionMap":{"JulietTeoh":19}},{"path":"src/main/resources/view/MainWindow.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"JulietTeoh"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"},{"lineNumber":2,"author":{"gitId":"JulietTeoh"},"content":""},{"lineNumber":3,"author":{"gitId":"JulietTeoh"},"content":"\u003c?import javafx.scene.control.Button?\u003e"},{"lineNumber":4,"author":{"gitId":"JulietTeoh"},"content":"\u003c?import javafx.scene.control.ScrollPane?\u003e"},{"lineNumber":5,"author":{"gitId":"JulietTeoh"},"content":"\u003c?import javafx.scene.control.TextField?\u003e"},{"lineNumber":6,"author":{"gitId":"JulietTeoh"},"content":"\u003c?import javafx.scene.layout.AnchorPane?\u003e"},{"lineNumber":7,"author":{"gitId":"JulietTeoh"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e"},{"lineNumber":8,"author":{"gitId":"JulietTeoh"},"content":""},{"lineNumber":9,"author":{"gitId":"JulietTeoh"},"content":"\u003cAnchorPane maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefHeight\u003d\"600.0\" prefWidth\u003d\"400.0\" xmlns\u003d\"http://javafx.com/javafx/15.0.1\" xmlns:fx\u003d\"http://javafx.com/fxml/1\" fx:controller\u003d\"MainWindow\"\u003e"},{"lineNumber":10,"author":{"gitId":"JulietTeoh"},"content":"    \u003cchildren\u003e"},{"lineNumber":11,"author":{"gitId":"JulietTeoh"},"content":"        \u003cTextField fx:id\u003d\"userInput\" layoutX\u003d\"5.0\" layoutY\u003d\"561.0\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"35.0\" prefWidth\u003d\"315.0\" AnchorPane.bottomAnchor\u003d\"4.0\" /\u003e"},{"lineNumber":12,"author":{"gitId":"JulietTeoh"},"content":"        \u003cButton fx:id\u003d\"sendButton\" layoutX\u003d\"327.0\" layoutY\u003d\"561.0\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"34.0\" prefWidth\u003d\"71.0\" text\u003d\"Send\" /\u003e"},{"lineNumber":13,"author":{"gitId":"JulietTeoh"},"content":"        \u003cScrollPane fx:id\u003d\"scrollPane\" hbarPolicy\u003d\"NEVER\" hvalue\u003d\"1.0\" prefHeight\u003d\"557.0\" prefWidth\u003d\"400.0\" vvalue\u003d\"1.0\"\u003e"},{"lineNumber":14,"author":{"gitId":"JulietTeoh"},"content":"            \u003ccontent\u003e"},{"lineNumber":15,"author":{"gitId":"JulietTeoh"},"content":"                \u003cVBox fx:id\u003d\"dialogContainer\" prefHeight\u003d\"552.0\" prefWidth\u003d\"388.0\" style\u003d\"-fx-background-color: white;\" /\u003e"},{"lineNumber":16,"author":{"gitId":"JulietTeoh"},"content":"            \u003c/content\u003e"},{"lineNumber":17,"author":{"gitId":"JulietTeoh"},"content":"        \u003c/ScrollPane\u003e"},{"lineNumber":18,"author":{"gitId":"JulietTeoh"},"content":"    \u003c/children\u003e"},{"lineNumber":19,"author":{"gitId":"JulietTeoh"},"content":"\u003c/AnchorPane\u003e"}],"authorContributionMap":{"JulietTeoh":19}},{"path":"src/test/java/DeadlineTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"JulietTeoh"},"content":""},{"lineNumber":2,"author":{"gitId":"JulietTeoh"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;"},{"lineNumber":3,"author":{"gitId":"JulietTeoh"},"content":""},{"lineNumber":4,"author":{"gitId":"JulietTeoh"},"content":"import org.junit.jupiter.api.Test;"},{"lineNumber":5,"author":{"gitId":"JulietTeoh"},"content":""},{"lineNumber":6,"author":{"gitId":"JulietTeoh"},"content":"import duke.exceptions.TaskException;"},{"lineNumber":7,"author":{"gitId":"JulietTeoh"},"content":"import duke.task.Deadline;"},{"lineNumber":8,"author":{"gitId":"JulietTeoh"},"content":""},{"lineNumber":9,"author":{"gitId":"JulietTeoh"},"content":"public class DeadlineTest {"},{"lineNumber":10,"author":{"gitId":"JulietTeoh"},"content":""},{"lineNumber":11,"author":{"gitId":"JulietTeoh"},"content":"    @Test"},{"lineNumber":12,"author":{"gitId":"JulietTeoh"},"content":"    public void checkStrings() {"},{"lineNumber":13,"author":{"gitId":"JulietTeoh"},"content":"        try {"},{"lineNumber":14,"author":{"gitId":"JulietTeoh"},"content":"            String output \u003d new Deadline(\"test\", \"2020-01-03\").toString();"},{"lineNumber":15,"author":{"gitId":"JulietTeoh"},"content":"            String output1 \u003d new Deadline(\"test\", \"2020-01-03\").toSaveFormat();"},{"lineNumber":16,"author":{"gitId":"JulietTeoh"},"content":""},{"lineNumber":17,"author":{"gitId":"JulietTeoh"},"content":"            String output2 \u003d new Deadline(\"test\", \"03-01-2020\").toString();"},{"lineNumber":18,"author":{"gitId":"JulietTeoh"},"content":"            assertEquals(\"[D][ ] test (by: Jan 3 2020)\", output);"},{"lineNumber":19,"author":{"gitId":"JulietTeoh"},"content":"            assertEquals(\"D|0|test|2020-01-03\", output1);"},{"lineNumber":20,"author":{"gitId":"JulietTeoh"},"content":"            assertEquals(output2, output);"},{"lineNumber":21,"author":{"gitId":"JulietTeoh"},"content":"        } catch (TaskException e) {"},{"lineNumber":22,"author":{"gitId":"JulietTeoh"},"content":"            // do nothing"},{"lineNumber":23,"author":{"gitId":"JulietTeoh"},"content":"        }"},{"lineNumber":24,"author":{"gitId":"JulietTeoh"},"content":"    }"},{"lineNumber":25,"author":{"gitId":"JulietTeoh"},"content":""},{"lineNumber":26,"author":{"gitId":"JulietTeoh"},"content":"    @Test"},{"lineNumber":27,"author":{"gitId":"JulietTeoh"},"content":"    public void checkDoneStateChange() {"},{"lineNumber":28,"author":{"gitId":"JulietTeoh"},"content":"        try {"},{"lineNumber":29,"author":{"gitId":"JulietTeoh"},"content":"            Deadline deadline \u003d new Deadline(\"test\", \"2020-01-03\");"},{"lineNumber":30,"author":{"gitId":"JulietTeoh"},"content":"            deadline.changeTaskToDone();"},{"lineNumber":31,"author":{"gitId":"JulietTeoh"},"content":""},{"lineNumber":32,"author":{"gitId":"JulietTeoh"},"content":"            String output1 \u003d deadline.toString();"},{"lineNumber":33,"author":{"gitId":"JulietTeoh"},"content":"            String output2 \u003d deadline.toSaveFormat();"},{"lineNumber":34,"author":{"gitId":"JulietTeoh"},"content":""},{"lineNumber":35,"author":{"gitId":"JulietTeoh"},"content":"            assertEquals(output1, \"[D][X] test (by: Jan 3 2020)\");"},{"lineNumber":36,"author":{"gitId":"JulietTeoh"},"content":"            assertEquals(\"D|1|test|2020-01-03\", output2);"},{"lineNumber":37,"author":{"gitId":"JulietTeoh"},"content":""},{"lineNumber":38,"author":{"gitId":"JulietTeoh"},"content":""},{"lineNumber":39,"author":{"gitId":"JulietTeoh"},"content":"        } catch (TaskException e) {"},{"lineNumber":40,"author":{"gitId":"JulietTeoh"},"content":"            // do nothing"},{"lineNumber":41,"author":{"gitId":"JulietTeoh"},"content":"        }"},{"lineNumber":42,"author":{"gitId":"JulietTeoh"},"content":"    }"},{"lineNumber":43,"author":{"gitId":"JulietTeoh"},"content":""},{"lineNumber":44,"author":{"gitId":"JulietTeoh"},"content":"}"}],"authorContributionMap":{"JulietTeoh":44}},{"path":"src/test/java/DukeTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"JulietTeoh"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;"},{"lineNumber":2,"author":{"gitId":"JulietTeoh"},"content":""},{"lineNumber":3,"author":{"gitId":"JulietTeoh"},"content":"import org.junit.jupiter.api.Test;"},{"lineNumber":4,"author":{"gitId":"JulietTeoh"},"content":""},{"lineNumber":5,"author":{"gitId":"JulietTeoh"},"content":"public class DukeTest {"},{"lineNumber":6,"author":{"gitId":"JulietTeoh"},"content":"    @Test"},{"lineNumber":7,"author":{"gitId":"JulietTeoh"},"content":"    public void dummyTest() {"},{"lineNumber":8,"author":{"gitId":"JulietTeoh"},"content":"        assertEquals(2, 2);"},{"lineNumber":9,"author":{"gitId":"JulietTeoh"},"content":"    }"},{"lineNumber":10,"author":{"gitId":"JulietTeoh"},"content":"}"}],"authorContributionMap":{"JulietTeoh":10}},{"path":"src/test/java/EventTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"JulietTeoh"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;"},{"lineNumber":2,"author":{"gitId":"JulietTeoh"},"content":""},{"lineNumber":3,"author":{"gitId":"JulietTeoh"},"content":"import org.junit.jupiter.api.Test;"},{"lineNumber":4,"author":{"gitId":"JulietTeoh"},"content":""},{"lineNumber":5,"author":{"gitId":"JulietTeoh"},"content":"import duke.task.Event;"},{"lineNumber":6,"author":{"gitId":"JulietTeoh"},"content":""},{"lineNumber":7,"author":{"gitId":"JulietTeoh"},"content":"public class EventTest {"},{"lineNumber":8,"author":{"gitId":"JulietTeoh"},"content":"    @Test"},{"lineNumber":9,"author":{"gitId":"JulietTeoh"},"content":"    public void checkStrings() {"},{"lineNumber":10,"author":{"gitId":"JulietTeoh"},"content":"        String output \u003d new Event(\"test\", \"NUS school\").toString();"},{"lineNumber":11,"author":{"gitId":"JulietTeoh"},"content":"        String output1 \u003d new Event(\"test\", \"NUS school\").toSaveFormat();"},{"lineNumber":12,"author":{"gitId":"JulietTeoh"},"content":""},{"lineNumber":13,"author":{"gitId":"JulietTeoh"},"content":"        assertEquals(\"[E][ ] test (at: NUS school)\", output);"},{"lineNumber":14,"author":{"gitId":"JulietTeoh"},"content":"        assertEquals(\"E|0|test|NUS school\", output1);"},{"lineNumber":15,"author":{"gitId":"JulietTeoh"},"content":""},{"lineNumber":16,"author":{"gitId":"JulietTeoh"},"content":"    }"},{"lineNumber":17,"author":{"gitId":"JulietTeoh"},"content":""},{"lineNumber":18,"author":{"gitId":"JulietTeoh"},"content":"    @Test"},{"lineNumber":19,"author":{"gitId":"JulietTeoh"},"content":"    public void checkDoneStateChange() {"},{"lineNumber":20,"author":{"gitId":"JulietTeoh"},"content":"        Event event \u003d new Event(\"testing at\", \"Now\");"},{"lineNumber":21,"author":{"gitId":"JulietTeoh"},"content":"        event.changeTaskToDone();"},{"lineNumber":22,"author":{"gitId":"JulietTeoh"},"content":""},{"lineNumber":23,"author":{"gitId":"JulietTeoh"},"content":"        assertEquals(\"[E][X] testing at (at: Now)\", event.toString());"},{"lineNumber":24,"author":{"gitId":"JulietTeoh"},"content":"        assertEquals(\"E|1|testing at|Now\", event.toSaveFormat());"},{"lineNumber":25,"author":{"gitId":"JulietTeoh"},"content":"    }"},{"lineNumber":26,"author":{"gitId":"JulietTeoh"},"content":"}"}],"authorContributionMap":{"JulietTeoh":26}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"JulietTeoh"},"content":"todo borrow book"},{"lineNumber":2,"author":{"gitId":"JulietTeoh"},"content":"deadline return book /by Sunday"},{"lineNumber":3,"author":{"gitId":"JulietTeoh"},"content":"event project meeting /at Mon 2-4pm"},{"lineNumber":4,"author":{"gitId":"JulietTeoh"},"content":"todo"},{"lineNumber":5,"author":{"gitId":"JulietTeoh"},"content":"boop"},{"lineNumber":6,"author":{"gitId":"JulietTeoh"},"content":"event"},{"lineNumber":7,"author":{"gitId":"JulietTeoh"},"content":"deadline"},{"lineNumber":8,"author":{"gitId":"JulietTeoh"},"content":"event a"},{"lineNumber":9,"author":{"gitId":"JulietTeoh"},"content":"deadline b"},{"lineNumber":10,"author":{"gitId":"JulietTeoh"},"content":"list"},{"lineNumber":11,"author":{"gitId":"JulietTeoh"},"content":"done 3"},{"lineNumber":12,"author":{"gitId":"JulietTeoh"},"content":"done 2"},{"lineNumber":13,"author":{"gitId":"JulietTeoh"},"content":"done 1"},{"lineNumber":14,"author":{"gitId":"JulietTeoh"},"content":"delete 3"},{"lineNumber":15,"author":{"gitId":"JulietTeoh"},"content":"delete 2"},{"lineNumber":16,"author":{"gitId":"JulietTeoh"},"content":"delete 1"},{"lineNumber":17,"author":{"gitId":"JulietTeoh"},"content":"todo check errors"},{"lineNumber":18,"author":{"gitId":"JulietTeoh"},"content":"done"},{"lineNumber":19,"author":{"gitId":"JulietTeoh"},"content":"done a"},{"lineNumber":20,"author":{"gitId":"JulietTeoh"},"content":"delete"},{"lineNumber":21,"author":{"gitId":"JulietTeoh"},"content":"done1"},{"lineNumber":22,"author":{"gitId":"JulietTeoh"},"content":"delete1"},{"lineNumber":23,"author":{"gitId":"JulietTeoh"},"content":"delete 1"},{"lineNumber":24,"author":{"gitId":"JulietTeoh"},"content":"todoa"},{"lineNumber":25,"author":{"gitId":"JulietTeoh"},"content":"eventa /by 9pm"},{"lineNumber":26,"author":{"gitId":"JulietTeoh"},"content":"deadlineb /by 10am"},{"lineNumber":27,"author":{"gitId":"JulietTeoh"},"content":"bye"}],"authorContributionMap":{"JulietTeoh":27}}]
