[{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027checkstyle\u0027"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027"},{"lineNumber":6,"author":{"gitId":"-"},"content":"}"},{"lineNumber":7,"author":{"gitId":"-"},"content":""},{"lineNumber":8,"author":{"gitId":"JulietTeoh"},"content":"checkstyle {"},{"lineNumber":9,"author":{"gitId":"JulietTeoh"},"content":"    toolVersion \u003d \u00278.29\u0027"},{"lineNumber":10,"author":{"gitId":"JulietTeoh"},"content":"}"},{"lineNumber":11,"author":{"gitId":"JulietTeoh"},"content":""},{"lineNumber":12,"author":{"gitId":"-"},"content":"repositories {"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    mavenCentral()"},{"lineNumber":14,"author":{"gitId":"-"},"content":"}"},{"lineNumber":15,"author":{"gitId":"-"},"content":""},{"lineNumber":16,"author":{"gitId":"-"},"content":"dependencies {"},{"lineNumber":17,"author":{"gitId":"JulietTeoh"},"content":"    implementation \u0027com.googlecode.json-simple:json-simple:1.1.1\u0027"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.5.0\u0027"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.5.0\u0027"},{"lineNumber":20,"author":{"gitId":"-"},"content":"}"},{"lineNumber":21,"author":{"gitId":"-"},"content":""},{"lineNumber":22,"author":{"gitId":"JulietTeoh"},"content":""},{"lineNumber":23,"author":{"gitId":"JulietTeoh"},"content":""},{"lineNumber":24,"author":{"gitId":"-"},"content":"test {"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    useJUnitPlatform()"},{"lineNumber":26,"author":{"gitId":"-"},"content":""},{"lineNumber":27,"author":{"gitId":"-"},"content":"    testLogging {"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\""},{"lineNumber":29,"author":{"gitId":"-"},"content":""},{"lineNumber":30,"author":{"gitId":"-"},"content":"        showExceptions true"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\""},{"lineNumber":32,"author":{"gitId":"-"},"content":"        showCauses true"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        showStackTraces true"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":36,"author":{"gitId":"-"},"content":"}"},{"lineNumber":37,"author":{"gitId":"-"},"content":""},{"lineNumber":38,"author":{"gitId":"-"},"content":"application {"},{"lineNumber":39,"author":{"gitId":"JulietTeoh"},"content":"    mainClassName \u003d \"Duke\""},{"lineNumber":40,"author":{"gitId":"-"},"content":"}"},{"lineNumber":41,"author":{"gitId":"-"},"content":""},{"lineNumber":42,"author":{"gitId":"-"},"content":"shadowJar {"},{"lineNumber":43,"author":{"gitId":"JulietTeoh"},"content":"    archiveBaseName \u003d \"main.java.duke\""},{"lineNumber":44,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null"},{"lineNumber":45,"author":{"gitId":"-"},"content":"}"},{"lineNumber":46,"author":{"gitId":"-"},"content":""},{"lineNumber":47,"author":{"gitId":"-"},"content":"checkstyle {"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    toolVersion \u003d \u00278.29\u0027"},{"lineNumber":49,"author":{"gitId":"-"},"content":"}"},{"lineNumber":50,"author":{"gitId":"-"},"content":""},{"lineNumber":51,"author":{"gitId":"-"},"content":"run{"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in"},{"lineNumber":53,"author":{"gitId":"-"},"content":"}"}],"authorContributionMap":{"-":44,"JulietTeoh":9}},{"path":"data/dukedata.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"JulietTeoh"},"content":"D|1|return book|20-11-2021"},{"lineNumber":2,"author":{"gitId":"JulietTeoh"},"content":"E|0|buy book|popular"},{"lineNumber":3,"author":{"gitId":"JulietTeoh"},"content":"T|0|bookbook"}],"authorContributionMap":{"JulietTeoh":3}},{"path":"src/main/java/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"JulietTeoh"},"content":"import duke.command.Command;"},{"lineNumber":2,"author":{"gitId":"JulietTeoh"},"content":"import duke.exceptions.DukeException;"},{"lineNumber":3,"author":{"gitId":"JulietTeoh"},"content":"import duke.maincomponents.Parser;"},{"lineNumber":4,"author":{"gitId":"JulietTeoh"},"content":"import duke.maincomponents.Storage;"},{"lineNumber":5,"author":{"gitId":"JulietTeoh"},"content":"import duke.maincomponents.TaskList;"},{"lineNumber":6,"author":{"gitId":"JulietTeoh"},"content":"import duke.maincomponents.Ui;"},{"lineNumber":7,"author":{"gitId":"JulietTeoh"},"content":""},{"lineNumber":8,"author":{"gitId":"JulietTeoh"},"content":"/**"},{"lineNumber":9,"author":{"gitId":"JulietTeoh"},"content":" * Main class for Duke that handles the execution of its functions"},{"lineNumber":10,"author":{"gitId":"JulietTeoh"},"content":" */"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class Duke {"},{"lineNumber":12,"author":{"gitId":"JulietTeoh"},"content":"    private static final String FILE_NAME \u003d \"dukedata.txt\";"},{"lineNumber":13,"author":{"gitId":"JulietTeoh"},"content":"    private static final String FOLDER_NAME \u003d \"data\";"},{"lineNumber":14,"author":{"gitId":"JulietTeoh"},"content":"    private static final String RELATIVE_PATH \u003d FOLDER_NAME + \"/\" + FILE_NAME;"},{"lineNumber":15,"author":{"gitId":"JulietTeoh"},"content":""},{"lineNumber":16,"author":{"gitId":"JulietTeoh"},"content":"    private Storage dukeStorage;"},{"lineNumber":17,"author":{"gitId":"JulietTeoh"},"content":"    private TaskList dukeTaskList;"},{"lineNumber":18,"author":{"gitId":"JulietTeoh"},"content":"    private Ui dukeUi;"},{"lineNumber":19,"author":{"gitId":"JulietTeoh"},"content":""},{"lineNumber":20,"author":{"gitId":"JulietTeoh"},"content":"    /**"},{"lineNumber":21,"author":{"gitId":"JulietTeoh"},"content":"     * Default Constructor for Duke"},{"lineNumber":22,"author":{"gitId":"JulietTeoh"},"content":"     * @param filePath path where the datafile storing the session is"},{"lineNumber":23,"author":{"gitId":"JulietTeoh"},"content":"     * @param folderName path of the folder storing the datafile"},{"lineNumber":24,"author":{"gitId":"JulietTeoh"},"content":"     */"},{"lineNumber":25,"author":{"gitId":"JulietTeoh"},"content":"    public Duke(String filePath, String folderName) {"},{"lineNumber":26,"author":{"gitId":"JulietTeoh"},"content":"        dukeUi \u003d new Ui();"},{"lineNumber":27,"author":{"gitId":"JulietTeoh"},"content":"        try {"},{"lineNumber":28,"author":{"gitId":"JulietTeoh"},"content":"            dukeStorage \u003d new Storage(filePath, folderName);"},{"lineNumber":29,"author":{"gitId":"JulietTeoh"},"content":"            dukeTaskList \u003d new TaskList(dukeStorage.load());"},{"lineNumber":30,"author":{"gitId":"JulietTeoh"},"content":"            dukeUi.showLoadingSucess();"},{"lineNumber":31,"author":{"gitId":"JulietTeoh"},"content":"        } catch (DukeException e) {"},{"lineNumber":32,"author":{"gitId":"JulietTeoh"},"content":"            dukeUi.showLoadingError(e.getMessage());"},{"lineNumber":33,"author":{"gitId":"JulietTeoh"},"content":"            dukeTaskList \u003d new TaskList();"},{"lineNumber":34,"author":{"gitId":"JulietTeoh"},"content":"        }"},{"lineNumber":35,"author":{"gitId":"JulietTeoh"},"content":"    }"},{"lineNumber":36,"author":{"gitId":"JulietTeoh"},"content":""},{"lineNumber":37,"author":{"gitId":"JulietTeoh"},"content":"    /**"},{"lineNumber":38,"author":{"gitId":"JulietTeoh"},"content":"     * Runs the main loop of Duke program"},{"lineNumber":39,"author":{"gitId":"JulietTeoh"},"content":"     */"},{"lineNumber":40,"author":{"gitId":"JulietTeoh"},"content":"    public void run() {"},{"lineNumber":41,"author":{"gitId":"JulietTeoh"},"content":"        Parser stringParser \u003d new Parser();"},{"lineNumber":42,"author":{"gitId":"JulietTeoh"},"content":"        dukeUi.showWelcomeLine();"},{"lineNumber":43,"author":{"gitId":"JulietTeoh"},"content":""},{"lineNumber":44,"author":{"gitId":"JulietTeoh"},"content":"        String userInput \u003d dukeUi.readCommand();"},{"lineNumber":45,"author":{"gitId":"JulietTeoh"},"content":"        boolean isExit \u003d stringParser.checkIfExit(userInput);"},{"lineNumber":46,"author":{"gitId":"JulietTeoh"},"content":""},{"lineNumber":47,"author":{"gitId":"JulietTeoh"},"content":"        while (!isExit) {"},{"lineNumber":48,"author":{"gitId":"JulietTeoh"},"content":"            try {"},{"lineNumber":49,"author":{"gitId":"JulietTeoh"},"content":"                Command c \u003d stringParser.parse(userInput);"},{"lineNumber":50,"author":{"gitId":"JulietTeoh"},"content":"                c.execute(dukeTaskList, dukeUi, dukeStorage);"},{"lineNumber":51,"author":{"gitId":"JulietTeoh"},"content":"            } catch (DukeException e) {"},{"lineNumber":52,"author":{"gitId":"JulietTeoh"},"content":"                dukeUi.showErrorMsg(e.getMessage());"},{"lineNumber":53,"author":{"gitId":"JulietTeoh"},"content":"            }"},{"lineNumber":54,"author":{"gitId":"JulietTeoh"},"content":"            userInput \u003d dukeUi.readCommand();"},{"lineNumber":55,"author":{"gitId":"JulietTeoh"},"content":"            isExit \u003d stringParser.checkIfExit(userInput);"},{"lineNumber":56,"author":{"gitId":"JulietTeoh"},"content":""},{"lineNumber":57,"author":{"gitId":"JulietTeoh"},"content":"            try {"},{"lineNumber":58,"author":{"gitId":"JulietTeoh"},"content":"                dukeStorage.saveToFile(dukeTaskList.getCurrentTaskList());"},{"lineNumber":59,"author":{"gitId":"JulietTeoh"},"content":"            } catch (DukeException e) {"},{"lineNumber":60,"author":{"gitId":"JulietTeoh"},"content":"                dukeUi.showErrorMsg(e.getMessage());"},{"lineNumber":61,"author":{"gitId":"JulietTeoh"},"content":"            }"},{"lineNumber":62,"author":{"gitId":"JulietTeoh"},"content":"        }"},{"lineNumber":63,"author":{"gitId":"JulietTeoh"},"content":"        dukeUi.showGoodbyeLine();"},{"lineNumber":64,"author":{"gitId":"JulietTeoh"},"content":"    }"},{"lineNumber":65,"author":{"gitId":"JulietTeoh"},"content":""},{"lineNumber":66,"author":{"gitId":"-"},"content":"    public static void main(String[] args) {"},{"lineNumber":67,"author":{"gitId":"JulietTeoh"},"content":"        new Duke(RELATIVE_PATH, FOLDER_NAME).run();"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":69,"author":{"gitId":"-"},"content":"}"}],"authorContributionMap":{"-":4,"JulietTeoh":65}},{"path":"src/main/java/duke/command/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"JulietTeoh"},"content":"package duke.command;"},{"lineNumber":2,"author":{"gitId":"JulietTeoh"},"content":""},{"lineNumber":3,"author":{"gitId":"JulietTeoh"},"content":"import duke.maincomponents.Storage;"},{"lineNumber":4,"author":{"gitId":"JulietTeoh"},"content":"import duke.maincomponents.TaskList;"},{"lineNumber":5,"author":{"gitId":"JulietTeoh"},"content":"import duke.maincomponents.Ui;"},{"lineNumber":6,"author":{"gitId":"JulietTeoh"},"content":""},{"lineNumber":7,"author":{"gitId":"JulietTeoh"},"content":"/**"},{"lineNumber":8,"author":{"gitId":"JulietTeoh"},"content":" * Interface for all command, which have an execute method that performs an action"},{"lineNumber":9,"author":{"gitId":"JulietTeoh"},"content":" */"},{"lineNumber":10,"author":{"gitId":"JulietTeoh"},"content":""},{"lineNumber":11,"author":{"gitId":"JulietTeoh"},"content":"public interface Command {"},{"lineNumber":12,"author":{"gitId":"JulietTeoh"},"content":"    public void execute(TaskList dukeTaskList, Ui dukeUi, Storage dukeStorage);"},{"lineNumber":13,"author":{"gitId":"JulietTeoh"},"content":"}"}],"authorContributionMap":{"JulietTeoh":13}},{"path":"src/main/java/duke/command/DeadlineCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"JulietTeoh"},"content":"package duke.command;"},{"lineNumber":2,"author":{"gitId":"JulietTeoh"},"content":""},{"lineNumber":3,"author":{"gitId":"JulietTeoh"},"content":"import java.util.ArrayList;"},{"lineNumber":4,"author":{"gitId":"JulietTeoh"},"content":""},{"lineNumber":5,"author":{"gitId":"JulietTeoh"},"content":"import duke.maincomponents.TaskList;"},{"lineNumber":6,"author":{"gitId":"JulietTeoh"},"content":"import duke.exceptions.DukeException;"},{"lineNumber":7,"author":{"gitId":"JulietTeoh"},"content":"import duke.maincomponents.Storage;"},{"lineNumber":8,"author":{"gitId":"JulietTeoh"},"content":"import duke.maincomponents.Ui;"},{"lineNumber":9,"author":{"gitId":"JulietTeoh"},"content":"import duke.task.Task;"},{"lineNumber":10,"author":{"gitId":"JulietTeoh"},"content":""},{"lineNumber":11,"author":{"gitId":"JulietTeoh"},"content":"/**"},{"lineNumber":12,"author":{"gitId":"JulietTeoh"},"content":" * Deadline Command, which adds a deadline task to Duke\u0027s TaskList when executed"},{"lineNumber":13,"author":{"gitId":"JulietTeoh"},"content":" */"},{"lineNumber":14,"author":{"gitId":"JulietTeoh"},"content":"public class DeadlineCommand implements Command {"},{"lineNumber":15,"author":{"gitId":"JulietTeoh"},"content":"    private ArrayList\u003cString\u003e eventDescription;"},{"lineNumber":16,"author":{"gitId":"JulietTeoh"},"content":""},{"lineNumber":17,"author":{"gitId":"JulietTeoh"},"content":"    /**"},{"lineNumber":18,"author":{"gitId":"JulietTeoh"},"content":"     * Constuct a DeadlineCommand object"},{"lineNumber":19,"author":{"gitId":"JulietTeoh"},"content":"     * @param a Arraylist where index 0 contains the description of the deadline and index 1"},{"lineNumber":20,"author":{"gitId":"JulietTeoh"},"content":"     *          is the by date of the deadline"},{"lineNumber":21,"author":{"gitId":"JulietTeoh"},"content":"     */"},{"lineNumber":22,"author":{"gitId":"JulietTeoh"},"content":"    public DeadlineCommand(ArrayList\u003cString\u003e a) {"},{"lineNumber":23,"author":{"gitId":"JulietTeoh"},"content":"        eventDescription \u003d a;"},{"lineNumber":24,"author":{"gitId":"JulietTeoh"},"content":"    }"},{"lineNumber":25,"author":{"gitId":"JulietTeoh"},"content":""},{"lineNumber":26,"author":{"gitId":"JulietTeoh"},"content":"    /**"},{"lineNumber":27,"author":{"gitId":"JulietTeoh"},"content":"     * Executes the deadline command, which adds a deadline task to Duke\u0027s TaskList"},{"lineNumber":28,"author":{"gitId":"JulietTeoh"},"content":"     * @param dukeTaskList give dukeTaskList"},{"lineNumber":29,"author":{"gitId":"JulietTeoh"},"content":"     * @param dukeUi give dukeUi"},{"lineNumber":30,"author":{"gitId":"JulietTeoh"},"content":"     * @param dukeStorage give dukeStorage"},{"lineNumber":31,"author":{"gitId":"JulietTeoh"},"content":"     */"},{"lineNumber":32,"author":{"gitId":"JulietTeoh"},"content":"    @Override"},{"lineNumber":33,"author":{"gitId":"JulietTeoh"},"content":"    public void execute(TaskList dukeTaskList, Ui dukeUi, Storage dukeStorage) {"},{"lineNumber":34,"author":{"gitId":"JulietTeoh"},"content":"        try {"},{"lineNumber":35,"author":{"gitId":"JulietTeoh"},"content":"            Task deadlineTask \u003d dukeTaskList.addDeadlineTask(eventDescription);"},{"lineNumber":36,"author":{"gitId":"JulietTeoh"},"content":"            dukeUi.showAddedTask(deadlineTask, dukeTaskList.getNumberOfTasks());"},{"lineNumber":37,"author":{"gitId":"JulietTeoh"},"content":"        } catch (DukeException e) {"},{"lineNumber":38,"author":{"gitId":"JulietTeoh"},"content":"            dukeUi.showErrorMsg(e.getMessage());"},{"lineNumber":39,"author":{"gitId":"JulietTeoh"},"content":"        }"},{"lineNumber":40,"author":{"gitId":"JulietTeoh"},"content":"    }"},{"lineNumber":41,"author":{"gitId":"JulietTeoh"},"content":"}"}],"authorContributionMap":{"JulietTeoh":41}},{"path":"src/main/java/duke/command/DeleteCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"JulietTeoh"},"content":"package duke.command;"},{"lineNumber":2,"author":{"gitId":"JulietTeoh"},"content":""},{"lineNumber":3,"author":{"gitId":"JulietTeoh"},"content":"import duke.exceptions.DukeException;"},{"lineNumber":4,"author":{"gitId":"JulietTeoh"},"content":"import duke.maincomponents.Storage;"},{"lineNumber":5,"author":{"gitId":"JulietTeoh"},"content":"import duke.maincomponents.TaskList;"},{"lineNumber":6,"author":{"gitId":"JulietTeoh"},"content":"import duke.maincomponents.Ui;"},{"lineNumber":7,"author":{"gitId":"JulietTeoh"},"content":"import duke.task.Task;"},{"lineNumber":8,"author":{"gitId":"JulietTeoh"},"content":""},{"lineNumber":9,"author":{"gitId":"JulietTeoh"},"content":"public class DeleteCommand implements Command {"},{"lineNumber":10,"author":{"gitId":"JulietTeoh"},"content":"    private int taskDeleteInt;"},{"lineNumber":11,"author":{"gitId":"JulietTeoh"},"content":"    public DeleteCommand(int i) {"},{"lineNumber":12,"author":{"gitId":"JulietTeoh"},"content":"        taskDeleteInt \u003d i;"},{"lineNumber":13,"author":{"gitId":"JulietTeoh"},"content":"    }"},{"lineNumber":14,"author":{"gitId":"JulietTeoh"},"content":""},{"lineNumber":15,"author":{"gitId":"JulietTeoh"},"content":"    @Override"},{"lineNumber":16,"author":{"gitId":"JulietTeoh"},"content":"    public void execute(TaskList dukeTaskList, Ui dukeUi, Storage dukeStorage) {"},{"lineNumber":17,"author":{"gitId":"JulietTeoh"},"content":"        try {"},{"lineNumber":18,"author":{"gitId":"JulietTeoh"},"content":"            Task deletedTask \u003d dukeTaskList.deleteTask(taskDeleteInt);"},{"lineNumber":19,"author":{"gitId":"JulietTeoh"},"content":"            dukeUi.showTaskDeleted(deletedTask, dukeTaskList.getNumberOfTasks());"},{"lineNumber":20,"author":{"gitId":"JulietTeoh"},"content":"        } catch (DukeException e) {"},{"lineNumber":21,"author":{"gitId":"JulietTeoh"},"content":"            dukeUi.showErrorMsg(e.getMessage());"},{"lineNumber":22,"author":{"gitId":"JulietTeoh"},"content":"        }"},{"lineNumber":23,"author":{"gitId":"JulietTeoh"},"content":"    }"},{"lineNumber":24,"author":{"gitId":"JulietTeoh"},"content":"}"},{"lineNumber":25,"author":{"gitId":"JulietTeoh"},"content":""}],"authorContributionMap":{"JulietTeoh":25}},{"path":"src/main/java/duke/command/DoneCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"JulietTeoh"},"content":"package duke.command;"},{"lineNumber":2,"author":{"gitId":"JulietTeoh"},"content":""},{"lineNumber":3,"author":{"gitId":"JulietTeoh"},"content":"import duke.exceptions.DukeException;"},{"lineNumber":4,"author":{"gitId":"JulietTeoh"},"content":"import duke.maincomponents.Storage;"},{"lineNumber":5,"author":{"gitId":"JulietTeoh"},"content":"import duke.maincomponents.TaskList;"},{"lineNumber":6,"author":{"gitId":"JulietTeoh"},"content":"import duke.maincomponents.Ui;"},{"lineNumber":7,"author":{"gitId":"JulietTeoh"},"content":"import duke.task.Task;"},{"lineNumber":8,"author":{"gitId":"JulietTeoh"},"content":""},{"lineNumber":9,"author":{"gitId":"JulietTeoh"},"content":"/**"},{"lineNumber":10,"author":{"gitId":"JulietTeoh"},"content":" * DoneCommand, which marks a task as done when executed"},{"lineNumber":11,"author":{"gitId":"JulietTeoh"},"content":" */"},{"lineNumber":12,"author":{"gitId":"JulietTeoh"},"content":"public class DoneCommand implements Command {"},{"lineNumber":13,"author":{"gitId":"JulietTeoh"},"content":"    private int taskDoneInt;"},{"lineNumber":14,"author":{"gitId":"JulietTeoh"},"content":""},{"lineNumber":15,"author":{"gitId":"JulietTeoh"},"content":"    /**"},{"lineNumber":16,"author":{"gitId":"JulietTeoh"},"content":"     * Constructor of DoneCommand"},{"lineNumber":17,"author":{"gitId":"JulietTeoh"},"content":"     * @param i index of task to mark as done"},{"lineNumber":18,"author":{"gitId":"JulietTeoh"},"content":"     */"},{"lineNumber":19,"author":{"gitId":"JulietTeoh"},"content":"    public DoneCommand(int i) {"},{"lineNumber":20,"author":{"gitId":"JulietTeoh"},"content":"        taskDoneInt \u003d i;"},{"lineNumber":21,"author":{"gitId":"JulietTeoh"},"content":"    }"},{"lineNumber":22,"author":{"gitId":"JulietTeoh"},"content":""},{"lineNumber":23,"author":{"gitId":"JulietTeoh"},"content":"    /**"},{"lineNumber":24,"author":{"gitId":"JulietTeoh"},"content":"     * Executes the Done command, which marks given task as done"},{"lineNumber":25,"author":{"gitId":"JulietTeoh"},"content":"     * @param dukeTaskList give dukeTaskList"},{"lineNumber":26,"author":{"gitId":"JulietTeoh"},"content":"     * @param dukeUi give dukeUi"},{"lineNumber":27,"author":{"gitId":"JulietTeoh"},"content":"     * @param dukeStorage give dukeStorage"},{"lineNumber":28,"author":{"gitId":"JulietTeoh"},"content":"     */"},{"lineNumber":29,"author":{"gitId":"JulietTeoh"},"content":"    @Override"},{"lineNumber":30,"author":{"gitId":"JulietTeoh"},"content":"    public void execute(TaskList dukeTaskList, Ui dukeUi, Storage dukeStorage) {"},{"lineNumber":31,"author":{"gitId":"JulietTeoh"},"content":"        try {"},{"lineNumber":32,"author":{"gitId":"JulietTeoh"},"content":"            Task doneTask \u003d dukeTaskList.checkTaskAsDone(taskDoneInt);"},{"lineNumber":33,"author":{"gitId":"JulietTeoh"},"content":"            dukeUi.showTaskDone(doneTask);"},{"lineNumber":34,"author":{"gitId":"JulietTeoh"},"content":"        } catch (DukeException e) {"},{"lineNumber":35,"author":{"gitId":"JulietTeoh"},"content":"            dukeUi.showErrorMsg(e.getMessage());"},{"lineNumber":36,"author":{"gitId":"JulietTeoh"},"content":"        }"},{"lineNumber":37,"author":{"gitId":"JulietTeoh"},"content":"    }"},{"lineNumber":38,"author":{"gitId":"JulietTeoh"},"content":"}"}],"authorContributionMap":{"JulietTeoh":38}},{"path":"src/main/java/duke/command/EventCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"JulietTeoh"},"content":"package duke.command;"},{"lineNumber":2,"author":{"gitId":"JulietTeoh"},"content":""},{"lineNumber":3,"author":{"gitId":"JulietTeoh"},"content":"import java.util.ArrayList;"},{"lineNumber":4,"author":{"gitId":"JulietTeoh"},"content":""},{"lineNumber":5,"author":{"gitId":"JulietTeoh"},"content":"import duke.maincomponents.Storage;"},{"lineNumber":6,"author":{"gitId":"JulietTeoh"},"content":"import duke.maincomponents.TaskList;"},{"lineNumber":7,"author":{"gitId":"JulietTeoh"},"content":"import duke.maincomponents.Ui;"},{"lineNumber":8,"author":{"gitId":"JulietTeoh"},"content":"import duke.task.Task;"},{"lineNumber":9,"author":{"gitId":"JulietTeoh"},"content":""},{"lineNumber":10,"author":{"gitId":"JulietTeoh"},"content":"public class EventCommand implements Command {"},{"lineNumber":11,"author":{"gitId":"JulietTeoh"},"content":"    private ArrayList\u003cString\u003e eventDescription;"},{"lineNumber":12,"author":{"gitId":"JulietTeoh"},"content":"    public EventCommand(ArrayList\u003cString\u003e a) {"},{"lineNumber":13,"author":{"gitId":"JulietTeoh"},"content":"        eventDescription \u003d a;"},{"lineNumber":14,"author":{"gitId":"JulietTeoh"},"content":"    }"},{"lineNumber":15,"author":{"gitId":"JulietTeoh"},"content":""},{"lineNumber":16,"author":{"gitId":"JulietTeoh"},"content":""},{"lineNumber":17,"author":{"gitId":"JulietTeoh"},"content":"    @Override"},{"lineNumber":18,"author":{"gitId":"JulietTeoh"},"content":"    public void execute(TaskList dukeTaskList, Ui dukeUi, Storage dukeStorage) {"},{"lineNumber":19,"author":{"gitId":"JulietTeoh"},"content":"        Task eventTask \u003d dukeTaskList.addEventTask(eventDescription);"},{"lineNumber":20,"author":{"gitId":"JulietTeoh"},"content":"        dukeUi.showAddedTask(eventTask, dukeTaskList.getNumberOfTasks());"},{"lineNumber":21,"author":{"gitId":"JulietTeoh"},"content":"    }"},{"lineNumber":22,"author":{"gitId":"JulietTeoh"},"content":""},{"lineNumber":23,"author":{"gitId":"JulietTeoh"},"content":""},{"lineNumber":24,"author":{"gitId":"JulietTeoh"},"content":"}"}],"authorContributionMap":{"JulietTeoh":24}},{"path":"src/main/java/duke/command/FindCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"JulietTeoh"},"content":"package duke.command;"},{"lineNumber":2,"author":{"gitId":"JulietTeoh"},"content":""},{"lineNumber":3,"author":{"gitId":"JulietTeoh"},"content":"import java.util.ArrayList;"},{"lineNumber":4,"author":{"gitId":"JulietTeoh"},"content":""},{"lineNumber":5,"author":{"gitId":"JulietTeoh"},"content":"import duke.maincomponents.Storage;"},{"lineNumber":6,"author":{"gitId":"JulietTeoh"},"content":"import duke.maincomponents.TaskList;"},{"lineNumber":7,"author":{"gitId":"JulietTeoh"},"content":"import duke.maincomponents.Ui;"},{"lineNumber":8,"author":{"gitId":"JulietTeoh"},"content":"import duke.task.Task;"},{"lineNumber":9,"author":{"gitId":"JulietTeoh"},"content":""},{"lineNumber":10,"author":{"gitId":"JulietTeoh"},"content":""},{"lineNumber":11,"author":{"gitId":"JulietTeoh"},"content":""},{"lineNumber":12,"author":{"gitId":"JulietTeoh"},"content":"public class FindCommand implements Command {"},{"lineNumber":13,"author":{"gitId":"JulietTeoh"},"content":"    private String stringToFind;"},{"lineNumber":14,"author":{"gitId":"JulietTeoh"},"content":""},{"lineNumber":15,"author":{"gitId":"JulietTeoh"},"content":"    public FindCommand(String s) {"},{"lineNumber":16,"author":{"gitId":"JulietTeoh"},"content":"        stringToFind \u003d s;"},{"lineNumber":17,"author":{"gitId":"JulietTeoh"},"content":"    }"},{"lineNumber":18,"author":{"gitId":"JulietTeoh"},"content":""},{"lineNumber":19,"author":{"gitId":"JulietTeoh"},"content":"    @Override"},{"lineNumber":20,"author":{"gitId":"JulietTeoh"},"content":"    public void execute(TaskList dukeTaskList, Ui dukeUi, Storage dukeStorage) {"},{"lineNumber":21,"author":{"gitId":"JulietTeoh"},"content":"        ArrayList\u003cTask\u003e currentTaskList \u003d dukeTaskList.getCurrentTaskList();"},{"lineNumber":22,"author":{"gitId":"JulietTeoh"},"content":"        ArrayList\u003cTask\u003e newTaskList \u003d new ArrayList\u003c\u003e();"},{"lineNumber":23,"author":{"gitId":"JulietTeoh"},"content":""},{"lineNumber":24,"author":{"gitId":"JulietTeoh"},"content":"        for (Task currentTask : currentTaskList) {"},{"lineNumber":25,"author":{"gitId":"JulietTeoh"},"content":""},{"lineNumber":26,"author":{"gitId":"JulietTeoh"},"content":"            if (currentTask.descriptionContains(stringToFind)) {"},{"lineNumber":27,"author":{"gitId":"JulietTeoh"},"content":"                newTaskList.add(currentTask);"},{"lineNumber":28,"author":{"gitId":"JulietTeoh"},"content":"            }"},{"lineNumber":29,"author":{"gitId":"JulietTeoh"},"content":"        }"},{"lineNumber":30,"author":{"gitId":"JulietTeoh"},"content":""},{"lineNumber":31,"author":{"gitId":"JulietTeoh"},"content":"        dukeUi.showFoundTaskList(newTaskList);"},{"lineNumber":32,"author":{"gitId":"JulietTeoh"},"content":"    }"},{"lineNumber":33,"author":{"gitId":"JulietTeoh"},"content":"}"}],"authorContributionMap":{"JulietTeoh":33}},{"path":"src/main/java/duke/command/ShowListCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"JulietTeoh"},"content":"package duke.command;"},{"lineNumber":2,"author":{"gitId":"JulietTeoh"},"content":""},{"lineNumber":3,"author":{"gitId":"JulietTeoh"},"content":"import java.util.ArrayList;"},{"lineNumber":4,"author":{"gitId":"JulietTeoh"},"content":""},{"lineNumber":5,"author":{"gitId":"JulietTeoh"},"content":"import duke.maincomponents.Storage;"},{"lineNumber":6,"author":{"gitId":"JulietTeoh"},"content":"import duke.maincomponents.TaskList;"},{"lineNumber":7,"author":{"gitId":"JulietTeoh"},"content":"import duke.maincomponents.Ui;"},{"lineNumber":8,"author":{"gitId":"JulietTeoh"},"content":"import duke.task.Task;"},{"lineNumber":9,"author":{"gitId":"JulietTeoh"},"content":""},{"lineNumber":10,"author":{"gitId":"JulietTeoh"},"content":""},{"lineNumber":11,"author":{"gitId":"JulietTeoh"},"content":""},{"lineNumber":12,"author":{"gitId":"JulietTeoh"},"content":"/**"},{"lineNumber":13,"author":{"gitId":"JulietTeoh"},"content":" * ShowListCommand, which shows the tasks on main.java.duke Task List when executed"},{"lineNumber":14,"author":{"gitId":"JulietTeoh"},"content":" */"},{"lineNumber":15,"author":{"gitId":"JulietTeoh"},"content":"public class ShowListCommand implements Command {"},{"lineNumber":16,"author":{"gitId":"JulietTeoh"},"content":"    /**"},{"lineNumber":17,"author":{"gitId":"JulietTeoh"},"content":"     * Constructor for ShowListCommand"},{"lineNumber":18,"author":{"gitId":"JulietTeoh"},"content":"     */"},{"lineNumber":19,"author":{"gitId":"JulietTeoh"},"content":"    public ShowListCommand() {"},{"lineNumber":20,"author":{"gitId":"JulietTeoh"},"content":"    }"},{"lineNumber":21,"author":{"gitId":"JulietTeoh"},"content":""},{"lineNumber":22,"author":{"gitId":"JulietTeoh"},"content":"    /**"},{"lineNumber":23,"author":{"gitId":"JulietTeoh"},"content":"     * Executes ShowListCommand, which shows the tasks on main.java.duke Task List"},{"lineNumber":24,"author":{"gitId":"JulietTeoh"},"content":"     * @param dukeTaskList give dukeTaskList"},{"lineNumber":25,"author":{"gitId":"JulietTeoh"},"content":"     * @param dukeUi give dukeUi"},{"lineNumber":26,"author":{"gitId":"JulietTeoh"},"content":"     * @param dukeStorage give dukeStorage"},{"lineNumber":27,"author":{"gitId":"JulietTeoh"},"content":"     */"},{"lineNumber":28,"author":{"gitId":"JulietTeoh"},"content":"    @Override"},{"lineNumber":29,"author":{"gitId":"JulietTeoh"},"content":"    public void execute(TaskList dukeTaskList, Ui dukeUi, Storage dukeStorage) {"},{"lineNumber":30,"author":{"gitId":"JulietTeoh"},"content":"        ArrayList\u003cTask\u003e currentTaskList \u003d dukeTaskList.getCurrentTaskList();"},{"lineNumber":31,"author":{"gitId":"JulietTeoh"},"content":"        dukeUi.showReturnTaskList(currentTaskList);"},{"lineNumber":32,"author":{"gitId":"JulietTeoh"},"content":"    }"},{"lineNumber":33,"author":{"gitId":"JulietTeoh"},"content":"}"}],"authorContributionMap":{"JulietTeoh":33}},{"path":"src/main/java/duke/command/ToDoCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"JulietTeoh"},"content":"package duke.command;"},{"lineNumber":2,"author":{"gitId":"JulietTeoh"},"content":""},{"lineNumber":3,"author":{"gitId":"JulietTeoh"},"content":"import duke.maincomponents.Storage;"},{"lineNumber":4,"author":{"gitId":"JulietTeoh"},"content":"import duke.maincomponents.TaskList;"},{"lineNumber":5,"author":{"gitId":"JulietTeoh"},"content":"import duke.maincomponents.Ui;"},{"lineNumber":6,"author":{"gitId":"JulietTeoh"},"content":"import duke.task.Task;"},{"lineNumber":7,"author":{"gitId":"JulietTeoh"},"content":""},{"lineNumber":8,"author":{"gitId":"JulietTeoh"},"content":"public class ToDoCommand implements Command {"},{"lineNumber":9,"author":{"gitId":"JulietTeoh"},"content":"    private String toDoDescription;"},{"lineNumber":10,"author":{"gitId":"JulietTeoh"},"content":""},{"lineNumber":11,"author":{"gitId":"JulietTeoh"},"content":"    public ToDoCommand(String s) {"},{"lineNumber":12,"author":{"gitId":"JulietTeoh"},"content":"        toDoDescription \u003d s;"},{"lineNumber":13,"author":{"gitId":"JulietTeoh"},"content":"    }"},{"lineNumber":14,"author":{"gitId":"JulietTeoh"},"content":""},{"lineNumber":15,"author":{"gitId":"JulietTeoh"},"content":"    @Override"},{"lineNumber":16,"author":{"gitId":"JulietTeoh"},"content":"    public void execute(TaskList dukeTaskList, Ui dukeUi, Storage dukeStorage) {"},{"lineNumber":17,"author":{"gitId":"JulietTeoh"},"content":"        Task toDoTask \u003d dukeTaskList.addToDoTask(toDoDescription);"},{"lineNumber":18,"author":{"gitId":"JulietTeoh"},"content":"        dukeUi.showAddedTask(toDoTask, dukeTaskList.getNumberOfTasks());"},{"lineNumber":19,"author":{"gitId":"JulietTeoh"},"content":"    }"},{"lineNumber":20,"author":{"gitId":"JulietTeoh"},"content":"}"}],"authorContributionMap":{"JulietTeoh":20}},{"path":"src/main/java/duke/exceptions/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"JulietTeoh"},"content":"package duke.exceptions;"},{"lineNumber":2,"author":{"gitId":"JulietTeoh"},"content":""},{"lineNumber":3,"author":{"gitId":"JulietTeoh"},"content":"/**"},{"lineNumber":4,"author":{"gitId":"JulietTeoh"},"content":" * Duke Exception, which is the exception Duke Components will throw"},{"lineNumber":5,"author":{"gitId":"JulietTeoh"},"content":" */"},{"lineNumber":6,"author":{"gitId":"JulietTeoh"},"content":"public class DukeException extends Exception {"},{"lineNumber":7,"author":{"gitId":"JulietTeoh"},"content":""},{"lineNumber":8,"author":{"gitId":"JulietTeoh"},"content":"    /**"},{"lineNumber":9,"author":{"gitId":"JulietTeoh"},"content":"     * Constructor for DukeException"},{"lineNumber":10,"author":{"gitId":"JulietTeoh"},"content":"     * @param message Error message regarding the execption"},{"lineNumber":11,"author":{"gitId":"JulietTeoh"},"content":"     */"},{"lineNumber":12,"author":{"gitId":"JulietTeoh"},"content":"    public DukeException(String message) {"},{"lineNumber":13,"author":{"gitId":"JulietTeoh"},"content":"        super(message);"},{"lineNumber":14,"author":{"gitId":"JulietTeoh"},"content":"    }"},{"lineNumber":15,"author":{"gitId":"JulietTeoh"},"content":"}"}],"authorContributionMap":{"JulietTeoh":15}},{"path":"src/main/java/duke/exceptions/TaskException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"JulietTeoh"},"content":"package duke.exceptions;"},{"lineNumber":2,"author":{"gitId":"JulietTeoh"},"content":""},{"lineNumber":3,"author":{"gitId":"JulietTeoh"},"content":"public class TaskException extends Exception {"},{"lineNumber":4,"author":{"gitId":"JulietTeoh"},"content":"    public TaskException(String message) {"},{"lineNumber":5,"author":{"gitId":"JulietTeoh"},"content":"        super(message);"},{"lineNumber":6,"author":{"gitId":"JulietTeoh"},"content":"    }"},{"lineNumber":7,"author":{"gitId":"JulietTeoh"},"content":"}"}],"authorContributionMap":{"JulietTeoh":7}},{"path":"src/main/java/duke/maincomponents/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"JulietTeoh"},"content":"package duke.maincomponents;"},{"lineNumber":2,"author":{"gitId":"JulietTeoh"},"content":""},{"lineNumber":3,"author":{"gitId":"JulietTeoh"},"content":"import java.util.ArrayList;"},{"lineNumber":4,"author":{"gitId":"JulietTeoh"},"content":""},{"lineNumber":5,"author":{"gitId":"JulietTeoh"},"content":"import duke.command.Command;"},{"lineNumber":6,"author":{"gitId":"JulietTeoh"},"content":"import duke.command.DeadlineCommand;"},{"lineNumber":7,"author":{"gitId":"JulietTeoh"},"content":"import duke.command.DeleteCommand;"},{"lineNumber":8,"author":{"gitId":"JulietTeoh"},"content":"import duke.command.DoneCommand;"},{"lineNumber":9,"author":{"gitId":"JulietTeoh"},"content":"import duke.command.EventCommand;"},{"lineNumber":10,"author":{"gitId":"JulietTeoh"},"content":"import duke.command.FindCommand;"},{"lineNumber":11,"author":{"gitId":"JulietTeoh"},"content":"import duke.command.ShowListCommand;"},{"lineNumber":12,"author":{"gitId":"JulietTeoh"},"content":"import duke.command.ToDoCommand;"},{"lineNumber":13,"author":{"gitId":"JulietTeoh"},"content":"import duke.exceptions.DukeException;"},{"lineNumber":14,"author":{"gitId":"JulietTeoh"},"content":""},{"lineNumber":15,"author":{"gitId":"JulietTeoh"},"content":""},{"lineNumber":16,"author":{"gitId":"JulietTeoh"},"content":"public class Parser {"},{"lineNumber":17,"author":{"gitId":"JulietTeoh"},"content":""},{"lineNumber":18,"author":{"gitId":"JulietTeoh"},"content":"    private static boolean checkStringStartingEquals(String userInput, String stringToCheck) {"},{"lineNumber":19,"author":{"gitId":"JulietTeoh"},"content":"        return userInput.length() \u003e\u003d stringToCheck.length()"},{"lineNumber":20,"author":{"gitId":"JulietTeoh"},"content":"                \u0026\u0026 userInput.substring(0, stringToCheck.length()).equals(stringToCheck);"},{"lineNumber":21,"author":{"gitId":"JulietTeoh"},"content":"    }"},{"lineNumber":22,"author":{"gitId":"JulietTeoh"},"content":""},{"lineNumber":23,"author":{"gitId":"JulietTeoh"},"content":"    private static boolean checkStringEquals(String userInput, String stringToCheck) {"},{"lineNumber":24,"author":{"gitId":"JulietTeoh"},"content":"        return userInput.equals(stringToCheck) || userInput.equals(stringToCheck + \" \");"},{"lineNumber":25,"author":{"gitId":"JulietTeoh"},"content":"    }"},{"lineNumber":26,"author":{"gitId":"JulietTeoh"},"content":""},{"lineNumber":27,"author":{"gitId":"JulietTeoh"},"content":"    private boolean equalsToList(String userInput) {"},{"lineNumber":28,"author":{"gitId":"JulietTeoh"},"content":"        return checkStringEquals(userInput, \"list\");"},{"lineNumber":29,"author":{"gitId":"JulietTeoh"},"content":"    }"},{"lineNumber":30,"author":{"gitId":"JulietTeoh"},"content":""},{"lineNumber":31,"author":{"gitId":"JulietTeoh"},"content":"    private boolean equalsToDone(String userInput) {"},{"lineNumber":32,"author":{"gitId":"JulietTeoh"},"content":"        return checkStringStartingEquals(userInput, \"done\");"},{"lineNumber":33,"author":{"gitId":"JulietTeoh"},"content":"    }"},{"lineNumber":34,"author":{"gitId":"JulietTeoh"},"content":""},{"lineNumber":35,"author":{"gitId":"JulietTeoh"},"content":"    public int parseDoneCommand(String userInput) throws DukeException {"},{"lineNumber":36,"author":{"gitId":"JulietTeoh"},"content":"        int length \u003d \"done\".length();"},{"lineNumber":37,"author":{"gitId":"JulietTeoh"},"content":"        if (checkStringEquals(userInput, \"done\")) {"},{"lineNumber":38,"author":{"gitId":"JulietTeoh"},"content":"            throw new DukeException(\"Error! Please indicate the task \""},{"lineNumber":39,"author":{"gitId":"JulietTeoh"},"content":"                    + \"which is done by its number on the list\");"},{"lineNumber":40,"author":{"gitId":"JulietTeoh"},"content":"        } else if (!checkStringEquals(userInput.substring(length, length + 1), \" \")) {"},{"lineNumber":41,"author":{"gitId":"JulietTeoh"},"content":"            throw new DukeException(\"Error! Please include a space after done. \""},{"lineNumber":42,"author":{"gitId":"JulietTeoh"},"content":"                    + \"[eg. done 1]\");"},{"lineNumber":43,"author":{"gitId":"JulietTeoh"},"content":"        } else {"},{"lineNumber":44,"author":{"gitId":"JulietTeoh"},"content":"            try {"},{"lineNumber":45,"author":{"gitId":"JulietTeoh"},"content":"                int taskInt \u003d Integer.parseInt(userInput.split(\" \")[1]);"},{"lineNumber":46,"author":{"gitId":"JulietTeoh"},"content":"                return taskInt;"},{"lineNumber":47,"author":{"gitId":"JulietTeoh"},"content":"            } catch (NumberFormatException e) {"},{"lineNumber":48,"author":{"gitId":"JulietTeoh"},"content":"                throw new DukeException(\"Error! You must give a number corresponding \""},{"lineNumber":49,"author":{"gitId":"JulietTeoh"},"content":"                        + \"to a task on the list to check as done\");"},{"lineNumber":50,"author":{"gitId":"JulietTeoh"},"content":"            }"},{"lineNumber":51,"author":{"gitId":"JulietTeoh"},"content":"        }"},{"lineNumber":52,"author":{"gitId":"JulietTeoh"},"content":"    }"},{"lineNumber":53,"author":{"gitId":"JulietTeoh"},"content":""},{"lineNumber":54,"author":{"gitId":"JulietTeoh"},"content":"    private boolean equalsToDelete(String userInput) {"},{"lineNumber":55,"author":{"gitId":"JulietTeoh"},"content":"        return checkStringStartingEquals(userInput, \"delete\");"},{"lineNumber":56,"author":{"gitId":"JulietTeoh"},"content":"    }"},{"lineNumber":57,"author":{"gitId":"JulietTeoh"},"content":""},{"lineNumber":58,"author":{"gitId":"JulietTeoh"},"content":"    public int parseDeleteCommand(String userInput) throws DukeException {"},{"lineNumber":59,"author":{"gitId":"JulietTeoh"},"content":"        int length \u003d \"delete\".length();"},{"lineNumber":60,"author":{"gitId":"JulietTeoh"},"content":"        if (checkStringEquals(userInput, \"delete\")) {"},{"lineNumber":61,"author":{"gitId":"JulietTeoh"},"content":"            throw new DukeException(\"Error! Please indicate the task which want to delete by its number on the list\");"},{"lineNumber":62,"author":{"gitId":"JulietTeoh"},"content":"        } else if (!checkStringEquals(userInput.substring(length, length + 1), \" \")) {"},{"lineNumber":63,"author":{"gitId":"JulietTeoh"},"content":"            throw new DukeException(\"Error! Please include a space after delete. \""},{"lineNumber":64,"author":{"gitId":"JulietTeoh"},"content":"                    + \"[eg. delete 1]\");"},{"lineNumber":65,"author":{"gitId":"JulietTeoh"},"content":"        } else {"},{"lineNumber":66,"author":{"gitId":"JulietTeoh"},"content":"            try {"},{"lineNumber":67,"author":{"gitId":"JulietTeoh"},"content":"                int taskInt \u003d Integer.parseInt(userInput.split(\" \")[1]);"},{"lineNumber":68,"author":{"gitId":"JulietTeoh"},"content":"                return taskInt;"},{"lineNumber":69,"author":{"gitId":"JulietTeoh"},"content":"            } catch (NumberFormatException e) {"},{"lineNumber":70,"author":{"gitId":"JulietTeoh"},"content":"                throw new DukeException(\"Error! You must give a number corresponding to a task on the list to delete\");"},{"lineNumber":71,"author":{"gitId":"JulietTeoh"},"content":"            }"},{"lineNumber":72,"author":{"gitId":"JulietTeoh"},"content":"        }"},{"lineNumber":73,"author":{"gitId":"JulietTeoh"},"content":"    }"},{"lineNumber":74,"author":{"gitId":"JulietTeoh"},"content":""},{"lineNumber":75,"author":{"gitId":"JulietTeoh"},"content":"    private boolean equalsToToDo(String userInput) {"},{"lineNumber":76,"author":{"gitId":"JulietTeoh"},"content":"        return checkStringStartingEquals(userInput, \"todo\");"},{"lineNumber":77,"author":{"gitId":"JulietTeoh"},"content":"    }"},{"lineNumber":78,"author":{"gitId":"JulietTeoh"},"content":""},{"lineNumber":79,"author":{"gitId":"JulietTeoh"},"content":"    public String parseToDoCommand(String userInput) throws DukeException {"},{"lineNumber":80,"author":{"gitId":"JulietTeoh"},"content":"        int length \u003d \"todo\".length();"},{"lineNumber":81,"author":{"gitId":"JulietTeoh"},"content":"        if (checkStringEquals(userInput, \"todo\")) {"},{"lineNumber":82,"author":{"gitId":"JulietTeoh"},"content":"            throw new DukeException(\"Error! The description of a todo cannot be empty!\");"},{"lineNumber":83,"author":{"gitId":"JulietTeoh"},"content":"        } else if (!checkStringEquals(userInput.substring(length, length + 1), \" \")) {"},{"lineNumber":84,"author":{"gitId":"JulietTeoh"},"content":"            throw new DukeException(\"Error! Please include a space after todo. [eg. todo sleep]\");"},{"lineNumber":85,"author":{"gitId":"JulietTeoh"},"content":"        } else {"},{"lineNumber":86,"author":{"gitId":"JulietTeoh"},"content":"            return userInput.substring(length + 1);"},{"lineNumber":87,"author":{"gitId":"JulietTeoh"},"content":"        }"},{"lineNumber":88,"author":{"gitId":"JulietTeoh"},"content":"    }"},{"lineNumber":89,"author":{"gitId":"JulietTeoh"},"content":""},{"lineNumber":90,"author":{"gitId":"JulietTeoh"},"content":"    private boolean equalsToEvent(String userInput) {"},{"lineNumber":91,"author":{"gitId":"JulietTeoh"},"content":"        return checkStringStartingEquals(userInput, \"event\");"},{"lineNumber":92,"author":{"gitId":"JulietTeoh"},"content":"    }"},{"lineNumber":93,"author":{"gitId":"JulietTeoh"},"content":""},{"lineNumber":94,"author":{"gitId":"JulietTeoh"},"content":"    public ArrayList\u003cString\u003e parseEventCommand(String userInput) throws DukeException {"},{"lineNumber":95,"author":{"gitId":"JulietTeoh"},"content":"        int length \u003d \"event\".length();"},{"lineNumber":96,"author":{"gitId":"JulietTeoh"},"content":"        if (checkStringEquals(userInput, \"event\")) {"},{"lineNumber":97,"author":{"gitId":"JulietTeoh"},"content":"            throw new DukeException(\"Error! The description of a event cannot be empty!\");"},{"lineNumber":98,"author":{"gitId":"JulietTeoh"},"content":"        } else if (!checkStringEquals(userInput.substring(length, length + 1), \" \")) {"},{"lineNumber":99,"author":{"gitId":"JulietTeoh"},"content":"            throw new DukeException(\"Error! Please include a space after event. [eg. event read /at 9pm]\");"},{"lineNumber":100,"author":{"gitId":"JulietTeoh"},"content":"        } else {"},{"lineNumber":101,"author":{"gitId":"JulietTeoh"},"content":"            if (userInput.contains(\" /at \")) {"},{"lineNumber":102,"author":{"gitId":"JulietTeoh"},"content":"                String[] arr \u003d userInput.substring(length + 1).split(\" /at \");"},{"lineNumber":103,"author":{"gitId":"JulietTeoh"},"content":"                String eventDescription \u003d arr[0];"},{"lineNumber":104,"author":{"gitId":"JulietTeoh"},"content":"                String descriptionAt \u003d arr[1];"},{"lineNumber":105,"author":{"gitId":"JulietTeoh"},"content":""},{"lineNumber":106,"author":{"gitId":"JulietTeoh"},"content":"                ArrayList\u003cString\u003e tempArr \u003d new ArrayList\u003c\u003e();"},{"lineNumber":107,"author":{"gitId":"JulietTeoh"},"content":"                tempArr.add(eventDescription);"},{"lineNumber":108,"author":{"gitId":"JulietTeoh"},"content":"                tempArr.add(descriptionAt);"},{"lineNumber":109,"author":{"gitId":"JulietTeoh"},"content":""},{"lineNumber":110,"author":{"gitId":"JulietTeoh"},"content":"                return tempArr;"},{"lineNumber":111,"author":{"gitId":"JulietTeoh"},"content":"            } else {"},{"lineNumber":112,"author":{"gitId":"JulietTeoh"},"content":"                throw new DukeException(\"Error! Please provide where and when the\""},{"lineNumber":113,"author":{"gitId":"JulietTeoh"},"content":"                        + \" event will take place after /at. [eg event read /at 9pm]\");"},{"lineNumber":114,"author":{"gitId":"JulietTeoh"},"content":"            }"},{"lineNumber":115,"author":{"gitId":"JulietTeoh"},"content":"        }"},{"lineNumber":116,"author":{"gitId":"JulietTeoh"},"content":"    }"},{"lineNumber":117,"author":{"gitId":"JulietTeoh"},"content":""},{"lineNumber":118,"author":{"gitId":"JulietTeoh"},"content":"    private boolean equalsToDeadline(String userInput) {"},{"lineNumber":119,"author":{"gitId":"JulietTeoh"},"content":"        return checkStringStartingEquals(userInput, \"deadline\");"},{"lineNumber":120,"author":{"gitId":"JulietTeoh"},"content":"    }"},{"lineNumber":121,"author":{"gitId":"JulietTeoh"},"content":""},{"lineNumber":122,"author":{"gitId":"JulietTeoh"},"content":"    public ArrayList\u003cString\u003e parseDeadlineCommand(String userInput) throws DukeException {"},{"lineNumber":123,"author":{"gitId":"JulietTeoh"},"content":"        int length \u003d \"deadline\".length();"},{"lineNumber":124,"author":{"gitId":"JulietTeoh"},"content":"        if (checkStringEquals(userInput, \"deadline\")) {"},{"lineNumber":125,"author":{"gitId":"JulietTeoh"},"content":"            throw new DukeException(\"Error! The description of a deadline cannot be empty!\");"},{"lineNumber":126,"author":{"gitId":"JulietTeoh"},"content":"        } else if (!checkStringEquals(userInput.substring(length, length + 1), \" \")) {"},{"lineNumber":127,"author":{"gitId":"JulietTeoh"},"content":"            throw new DukeException(\"Error! Please include a space after deadline. \""},{"lineNumber":128,"author":{"gitId":"JulietTeoh"},"content":"                    + \"[eg. deadline submit work /by 2020-03-20]\");"},{"lineNumber":129,"author":{"gitId":"JulietTeoh"},"content":"        } else {"},{"lineNumber":130,"author":{"gitId":"JulietTeoh"},"content":"            if (userInput.contains(\" /by \")) {"},{"lineNumber":131,"author":{"gitId":"JulietTeoh"},"content":"                String[] arr \u003d userInput.substring(length + 1).split(\" /by \");"},{"lineNumber":132,"author":{"gitId":"JulietTeoh"},"content":"                String deadlineDescription \u003d arr[0];"},{"lineNumber":133,"author":{"gitId":"JulietTeoh"},"content":"                String descriptionBy \u003d arr[1];"},{"lineNumber":134,"author":{"gitId":"JulietTeoh"},"content":""},{"lineNumber":135,"author":{"gitId":"JulietTeoh"},"content":"                ArrayList\u003cString\u003e tempArr \u003d new ArrayList\u003c\u003e();"},{"lineNumber":136,"author":{"gitId":"JulietTeoh"},"content":"                tempArr.add(deadlineDescription);"},{"lineNumber":137,"author":{"gitId":"JulietTeoh"},"content":"                tempArr.add(descriptionBy);"},{"lineNumber":138,"author":{"gitId":"JulietTeoh"},"content":""},{"lineNumber":139,"author":{"gitId":"JulietTeoh"},"content":"                return tempArr;"},{"lineNumber":140,"author":{"gitId":"JulietTeoh"},"content":"            } else {"},{"lineNumber":141,"author":{"gitId":"JulietTeoh"},"content":"                throw new DukeException(\"Error! Please provide when the deadline will be due after /by. \""},{"lineNumber":142,"author":{"gitId":"JulietTeoh"},"content":"                        + \"[eg. deadline submit work /by 2020-03-20]\");"},{"lineNumber":143,"author":{"gitId":"JulietTeoh"},"content":"            }"},{"lineNumber":144,"author":{"gitId":"JulietTeoh"},"content":"        }"},{"lineNumber":145,"author":{"gitId":"JulietTeoh"},"content":"    }"},{"lineNumber":146,"author":{"gitId":"JulietTeoh"},"content":""},{"lineNumber":147,"author":{"gitId":"JulietTeoh"},"content":"    private boolean equalsToFind(String userInput) {"},{"lineNumber":148,"author":{"gitId":"JulietTeoh"},"content":"        return checkStringStartingEquals(userInput, \"find\");"},{"lineNumber":149,"author":{"gitId":"JulietTeoh"},"content":"    }"},{"lineNumber":150,"author":{"gitId":"JulietTeoh"},"content":""},{"lineNumber":151,"author":{"gitId":"JulietTeoh"},"content":"    public String parseFindCommand(String userInput) throws DukeException {"},{"lineNumber":152,"author":{"gitId":"JulietTeoh"},"content":"        int length \u003d \"find\".length();"},{"lineNumber":153,"author":{"gitId":"JulietTeoh"},"content":""},{"lineNumber":154,"author":{"gitId":"JulietTeoh"},"content":"        if (checkStringEquals(userInput, \"find\")) {"},{"lineNumber":155,"author":{"gitId":"JulietTeoh"},"content":"            throw new DukeException(\"Error! The description of what you wish to find cannot be empty!\");"},{"lineNumber":156,"author":{"gitId":"JulietTeoh"},"content":"        } else if (!checkStringEquals(userInput.substring(length, length + 1), \" \")) {"},{"lineNumber":157,"author":{"gitId":"JulietTeoh"},"content":"            throw new DukeException(\"Error! Please include a space after the string you wish to find.\");"},{"lineNumber":158,"author":{"gitId":"JulietTeoh"},"content":"        } else {"},{"lineNumber":159,"author":{"gitId":"JulietTeoh"},"content":"            return userInput.substring(length + 1);"},{"lineNumber":160,"author":{"gitId":"JulietTeoh"},"content":"        }"},{"lineNumber":161,"author":{"gitId":"JulietTeoh"},"content":"    }"},{"lineNumber":162,"author":{"gitId":"JulietTeoh"},"content":""},{"lineNumber":163,"author":{"gitId":"JulietTeoh"},"content":"    public boolean checkIfExit(String userInput) {"},{"lineNumber":164,"author":{"gitId":"JulietTeoh"},"content":"        return userInput.equals(\"bye\");"},{"lineNumber":165,"author":{"gitId":"JulietTeoh"},"content":"    }"},{"lineNumber":166,"author":{"gitId":"JulietTeoh"},"content":""},{"lineNumber":167,"author":{"gitId":"JulietTeoh"},"content":"    public Command parse(String userInput) throws DukeException {"},{"lineNumber":168,"author":{"gitId":"JulietTeoh"},"content":"        try {"},{"lineNumber":169,"author":{"gitId":"JulietTeoh"},"content":"            if (this.equalsToList(userInput)) {"},{"lineNumber":170,"author":{"gitId":"JulietTeoh"},"content":"                return new ShowListCommand();"},{"lineNumber":171,"author":{"gitId":"JulietTeoh"},"content":"            } else if (this.equalsToDone(userInput)) {"},{"lineNumber":172,"author":{"gitId":"JulietTeoh"},"content":"                int taskDoneInt \u003d this.parseDoneCommand(userInput);"},{"lineNumber":173,"author":{"gitId":"JulietTeoh"},"content":"                return new DoneCommand(taskDoneInt);"},{"lineNumber":174,"author":{"gitId":"JulietTeoh"},"content":"            } else if (this.equalsToDelete(userInput)) {"},{"lineNumber":175,"author":{"gitId":"JulietTeoh"},"content":"                int taskDeleteInt \u003d this.parseDeleteCommand(userInput);"},{"lineNumber":176,"author":{"gitId":"JulietTeoh"},"content":"                return new DeleteCommand(taskDeleteInt);"},{"lineNumber":177,"author":{"gitId":"JulietTeoh"},"content":"            } else if (this.equalsToToDo(userInput)) {"},{"lineNumber":178,"author":{"gitId":"JulietTeoh"},"content":"                String toDoDescription \u003d this.parseToDoCommand(userInput);"},{"lineNumber":179,"author":{"gitId":"JulietTeoh"},"content":"                return new ToDoCommand(toDoDescription);"},{"lineNumber":180,"author":{"gitId":"JulietTeoh"},"content":"            } else if (this.equalsToEvent(userInput)) {"},{"lineNumber":181,"author":{"gitId":"JulietTeoh"},"content":"                ArrayList\u003cString\u003e eventDescription \u003d this.parseEventCommand(userInput);"},{"lineNumber":182,"author":{"gitId":"JulietTeoh"},"content":"                return new EventCommand(eventDescription);"},{"lineNumber":183,"author":{"gitId":"JulietTeoh"},"content":"            } else if (this.equalsToDeadline(userInput)) {"},{"lineNumber":184,"author":{"gitId":"JulietTeoh"},"content":"                ArrayList\u003cString\u003e eventDescription \u003d this.parseDeadlineCommand(userInput);"},{"lineNumber":185,"author":{"gitId":"JulietTeoh"},"content":"                return new DeadlineCommand(eventDescription);"},{"lineNumber":186,"author":{"gitId":"JulietTeoh"},"content":"            } else if (this.equalsToFind(userInput)) {"},{"lineNumber":187,"author":{"gitId":"JulietTeoh"},"content":"                String stringToFind \u003d this.parseFindCommand(userInput);"},{"lineNumber":188,"author":{"gitId":"JulietTeoh"},"content":"                return new FindCommand(stringToFind);"},{"lineNumber":189,"author":{"gitId":"JulietTeoh"},"content":"            } else {"},{"lineNumber":190,"author":{"gitId":"JulietTeoh"},"content":"                throw new DukeException(\"I\u0027m sorry, but I don\u0027t know what that means\");"},{"lineNumber":191,"author":{"gitId":"JulietTeoh"},"content":"            }"},{"lineNumber":192,"author":{"gitId":"JulietTeoh"},"content":""},{"lineNumber":193,"author":{"gitId":"JulietTeoh"},"content":"        } catch (DukeException e) {"},{"lineNumber":194,"author":{"gitId":"JulietTeoh"},"content":"            throw e;"},{"lineNumber":195,"author":{"gitId":"JulietTeoh"},"content":"        }"},{"lineNumber":196,"author":{"gitId":"JulietTeoh"},"content":"    }"},{"lineNumber":197,"author":{"gitId":"JulietTeoh"},"content":"}"}],"authorContributionMap":{"JulietTeoh":197}},{"path":"src/main/java/duke/maincomponents/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"JulietTeoh"},"content":"package duke.maincomponents;"},{"lineNumber":2,"author":{"gitId":"JulietTeoh"},"content":""},{"lineNumber":3,"author":{"gitId":"JulietTeoh"},"content":"import java.io.File;"},{"lineNumber":4,"author":{"gitId":"JulietTeoh"},"content":"import java.io.FileNotFoundException;"},{"lineNumber":5,"author":{"gitId":"JulietTeoh"},"content":"import java.io.FileWriter;"},{"lineNumber":6,"author":{"gitId":"JulietTeoh"},"content":"import java.io.IOException;"},{"lineNumber":7,"author":{"gitId":"JulietTeoh"},"content":"import java.io.Writer;"},{"lineNumber":8,"author":{"gitId":"JulietTeoh"},"content":"import java.util.ArrayList;"},{"lineNumber":9,"author":{"gitId":"JulietTeoh"},"content":"import java.util.Scanner;"},{"lineNumber":10,"author":{"gitId":"JulietTeoh"},"content":""},{"lineNumber":11,"author":{"gitId":"JulietTeoh"},"content":"import duke.exceptions.DukeException;"},{"lineNumber":12,"author":{"gitId":"JulietTeoh"},"content":"import duke.exceptions.TaskException;"},{"lineNumber":13,"author":{"gitId":"JulietTeoh"},"content":"import duke.task.Deadline;"},{"lineNumber":14,"author":{"gitId":"JulietTeoh"},"content":"import duke.task.Event;"},{"lineNumber":15,"author":{"gitId":"JulietTeoh"},"content":"import duke.task.Task;"},{"lineNumber":16,"author":{"gitId":"JulietTeoh"},"content":"import duke.task.ToDo;"},{"lineNumber":17,"author":{"gitId":"JulietTeoh"},"content":""},{"lineNumber":18,"author":{"gitId":"JulietTeoh"},"content":""},{"lineNumber":19,"author":{"gitId":"JulietTeoh"},"content":"public class Storage {"},{"lineNumber":20,"author":{"gitId":"JulietTeoh"},"content":"    private String pathOfDataFile;"},{"lineNumber":21,"author":{"gitId":"JulietTeoh"},"content":""},{"lineNumber":22,"author":{"gitId":"JulietTeoh"},"content":"    public Storage(String filePath, String folderName) throws DukeException {"},{"lineNumber":23,"author":{"gitId":"JulietTeoh"},"content":"        pathOfDataFile \u003d filePath;"},{"lineNumber":24,"author":{"gitId":"JulietTeoh"},"content":"        try {"},{"lineNumber":25,"author":{"gitId":"JulietTeoh"},"content":"            File folder \u003d new File(folderName);"},{"lineNumber":26,"author":{"gitId":"JulietTeoh"},"content":"            folder.mkdir();"},{"lineNumber":27,"author":{"gitId":"JulietTeoh"},"content":""},{"lineNumber":28,"author":{"gitId":"JulietTeoh"},"content":"            File dataFile \u003d new File(filePath);"},{"lineNumber":29,"author":{"gitId":"JulietTeoh"},"content":"            dataFile.createNewFile();"},{"lineNumber":30,"author":{"gitId":"JulietTeoh"},"content":""},{"lineNumber":31,"author":{"gitId":"JulietTeoh"},"content":"        } catch (IOException e) {"},{"lineNumber":32,"author":{"gitId":"JulietTeoh"},"content":"            throw new DukeException(\"Error occured during file or folder creation\");"},{"lineNumber":33,"author":{"gitId":"JulietTeoh"},"content":"        }"},{"lineNumber":34,"author":{"gitId":"JulietTeoh"},"content":"    }"},{"lineNumber":35,"author":{"gitId":"JulietTeoh"},"content":""},{"lineNumber":36,"author":{"gitId":"JulietTeoh"},"content":"    public ArrayList\u003cTask\u003e load() throws DukeException {"},{"lineNumber":37,"author":{"gitId":"JulietTeoh"},"content":"        try {"},{"lineNumber":38,"author":{"gitId":"JulietTeoh"},"content":"            File dukeData \u003d new File(pathOfDataFile);"},{"lineNumber":39,"author":{"gitId":"JulietTeoh"},"content":"            Scanner dataReader \u003d new Scanner(dukeData);"},{"lineNumber":40,"author":{"gitId":"JulietTeoh"},"content":"            int tempNumberOfTasks \u003d 0;"},{"lineNumber":41,"author":{"gitId":"JulietTeoh"},"content":"            ArrayList\u003cTask\u003e tempArray \u003d new ArrayList\u003c\u003e();"},{"lineNumber":42,"author":{"gitId":"JulietTeoh"},"content":""},{"lineNumber":43,"author":{"gitId":"JulietTeoh"},"content":"            while (dataReader.hasNextLine()) {"},{"lineNumber":44,"author":{"gitId":"JulietTeoh"},"content":"                String data \u003d dataReader.nextLine();"},{"lineNumber":45,"author":{"gitId":"JulietTeoh"},"content":"                String[] arr \u003d data.split(\"\\\\|\");"},{"lineNumber":46,"author":{"gitId":"JulietTeoh"},"content":""},{"lineNumber":47,"author":{"gitId":"JulietTeoh"},"content":"                String taskSymbol \u003d arr[0];"},{"lineNumber":48,"author":{"gitId":"JulietTeoh"},"content":"                int doneInt \u003d Integer.valueOf(arr[1]);"},{"lineNumber":49,"author":{"gitId":"JulietTeoh"},"content":"                String description \u003d arr[2];"},{"lineNumber":50,"author":{"gitId":"JulietTeoh"},"content":""},{"lineNumber":51,"author":{"gitId":"JulietTeoh"},"content":"                if (taskSymbol.equals(\"T\")) {"},{"lineNumber":52,"author":{"gitId":"JulietTeoh"},"content":"                    tempArray.add(new ToDo(description, doneInt));"},{"lineNumber":53,"author":{"gitId":"JulietTeoh"},"content":"                    tempNumberOfTasks++;"},{"lineNumber":54,"author":{"gitId":"JulietTeoh"},"content":"                } else if (taskSymbol.equals(\"D\")) {"},{"lineNumber":55,"author":{"gitId":"JulietTeoh"},"content":"                    try {"},{"lineNumber":56,"author":{"gitId":"JulietTeoh"},"content":"                        tempArray.add(new Deadline(description, arr[3], doneInt));"},{"lineNumber":57,"author":{"gitId":"JulietTeoh"},"content":"                    } catch (TaskException e) {"},{"lineNumber":58,"author":{"gitId":"JulietTeoh"},"content":"                        throw new DukeException(\"Data Corrupted, failed to restore data.\");"},{"lineNumber":59,"author":{"gitId":"JulietTeoh"},"content":"                    }"},{"lineNumber":60,"author":{"gitId":"JulietTeoh"},"content":"                    tempNumberOfTasks++;"},{"lineNumber":61,"author":{"gitId":"JulietTeoh"},"content":"                } else if (taskSymbol.equals(\"E\")) {"},{"lineNumber":62,"author":{"gitId":"JulietTeoh"},"content":"                    tempArray.add(new Event(description, arr[3], doneInt));"},{"lineNumber":63,"author":{"gitId":"JulietTeoh"},"content":"                    tempNumberOfTasks++;"},{"lineNumber":64,"author":{"gitId":"JulietTeoh"},"content":"                }"},{"lineNumber":65,"author":{"gitId":"JulietTeoh"},"content":"            }"},{"lineNumber":66,"author":{"gitId":"JulietTeoh"},"content":"            dataReader.close();"},{"lineNumber":67,"author":{"gitId":"JulietTeoh"},"content":""},{"lineNumber":68,"author":{"gitId":"JulietTeoh"},"content":"            return tempArray;"},{"lineNumber":69,"author":{"gitId":"JulietTeoh"},"content":"        } catch (FileNotFoundException e) {"},{"lineNumber":70,"author":{"gitId":"JulietTeoh"},"content":"            throw new DukeException(pathOfDataFile + \" not found, failed to restore data.\");"},{"lineNumber":71,"author":{"gitId":"JulietTeoh"},"content":"        }"},{"lineNumber":72,"author":{"gitId":"JulietTeoh"},"content":"    }"},{"lineNumber":73,"author":{"gitId":"JulietTeoh"},"content":""},{"lineNumber":74,"author":{"gitId":"JulietTeoh"},"content":"    public void saveToFile(ArrayList\u003cTask\u003e taskArray) throws DukeException {"},{"lineNumber":75,"author":{"gitId":"JulietTeoh"},"content":"        try {"},{"lineNumber":76,"author":{"gitId":"JulietTeoh"},"content":"            Writer fileWriter \u003d new FileWriter(\"data/dukedata.txt\", false);"},{"lineNumber":77,"author":{"gitId":"JulietTeoh"},"content":"            for (int i \u003d 0; i \u003c taskArray.size(); i++) {"},{"lineNumber":78,"author":{"gitId":"JulietTeoh"},"content":"                String line \u003d taskArray.get(i).toSaveFormat();"},{"lineNumber":79,"author":{"gitId":"JulietTeoh"},"content":"                fileWriter.write(line + \"\\n\");"},{"lineNumber":80,"author":{"gitId":"JulietTeoh"},"content":"            }"},{"lineNumber":81,"author":{"gitId":"JulietTeoh"},"content":"            fileWriter.close();"},{"lineNumber":82,"author":{"gitId":"JulietTeoh"},"content":"        } catch (IOException e) {"},{"lineNumber":83,"author":{"gitId":"JulietTeoh"},"content":"            throw new DukeException(\"Error could not save task list.\");"},{"lineNumber":84,"author":{"gitId":"JulietTeoh"},"content":"        }"},{"lineNumber":85,"author":{"gitId":"JulietTeoh"},"content":"    }"},{"lineNumber":86,"author":{"gitId":"JulietTeoh"},"content":"}"}],"authorContributionMap":{"JulietTeoh":86}},{"path":"src/main/java/duke/maincomponents/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"JulietTeoh"},"content":"package duke.maincomponents;"},{"lineNumber":2,"author":{"gitId":"JulietTeoh"},"content":""},{"lineNumber":3,"author":{"gitId":"JulietTeoh"},"content":"import java.util.ArrayList;"},{"lineNumber":4,"author":{"gitId":"JulietTeoh"},"content":""},{"lineNumber":5,"author":{"gitId":"JulietTeoh"},"content":"import duke.exceptions.DukeException;"},{"lineNumber":6,"author":{"gitId":"JulietTeoh"},"content":"import duke.exceptions.TaskException;"},{"lineNumber":7,"author":{"gitId":"JulietTeoh"},"content":"import duke.task.Deadline;"},{"lineNumber":8,"author":{"gitId":"JulietTeoh"},"content":"import duke.task.Event;"},{"lineNumber":9,"author":{"gitId":"JulietTeoh"},"content":"import duke.task.Task;"},{"lineNumber":10,"author":{"gitId":"JulietTeoh"},"content":"import duke.task.ToDo;"},{"lineNumber":11,"author":{"gitId":"JulietTeoh"},"content":""},{"lineNumber":12,"author":{"gitId":"JulietTeoh"},"content":""},{"lineNumber":13,"author":{"gitId":"JulietTeoh"},"content":"/**"},{"lineNumber":14,"author":{"gitId":"JulietTeoh"},"content":" * TaskList class, which stores all the Tasks in the list"},{"lineNumber":15,"author":{"gitId":"JulietTeoh"},"content":" */"},{"lineNumber":16,"author":{"gitId":"JulietTeoh"},"content":"public class TaskList {"},{"lineNumber":17,"author":{"gitId":"JulietTeoh"},"content":"    private ArrayList\u003cTask\u003e tasks;"},{"lineNumber":18,"author":{"gitId":"JulietTeoh"},"content":"    private int numberOfTasks;"},{"lineNumber":19,"author":{"gitId":"JulietTeoh"},"content":""},{"lineNumber":20,"author":{"gitId":"JulietTeoh"},"content":"    /**"},{"lineNumber":21,"author":{"gitId":"JulietTeoh"},"content":"     * Default constructor for TaskList, returns a TaskList object with an empty Tasklist"},{"lineNumber":22,"author":{"gitId":"JulietTeoh"},"content":"     */"},{"lineNumber":23,"author":{"gitId":"JulietTeoh"},"content":"    public TaskList() {"},{"lineNumber":24,"author":{"gitId":"JulietTeoh"},"content":"        this.tasks \u003d new ArrayList\u003cTask\u003e();"},{"lineNumber":25,"author":{"gitId":"JulietTeoh"},"content":"        this.numberOfTasks \u003d 0;"},{"lineNumber":26,"author":{"gitId":"JulietTeoh"},"content":"    }"},{"lineNumber":27,"author":{"gitId":"JulietTeoh"},"content":""},{"lineNumber":28,"author":{"gitId":"JulietTeoh"},"content":"    /**"},{"lineNumber":29,"author":{"gitId":"JulietTeoh"},"content":"     * Constructor for TaskList which returns a Tasklist that contains the tasks in taskArrayToLoad"},{"lineNumber":30,"author":{"gitId":"JulietTeoh"},"content":"     * @param taskArrayToLoad ArrayList which contains tasks to put inside TaskList"},{"lineNumber":31,"author":{"gitId":"JulietTeoh"},"content":"     */"},{"lineNumber":32,"author":{"gitId":"JulietTeoh"},"content":"    public TaskList(ArrayList\u003cTask\u003e taskArrayToLoad) {"},{"lineNumber":33,"author":{"gitId":"JulietTeoh"},"content":"        this.tasks \u003d new ArrayList\u003c\u003e(taskArrayToLoad);"},{"lineNumber":34,"author":{"gitId":"JulietTeoh"},"content":"        this.numberOfTasks \u003d tasks.size();"},{"lineNumber":35,"author":{"gitId":"JulietTeoh"},"content":"    }"},{"lineNumber":36,"author":{"gitId":"JulietTeoh"},"content":""},{"lineNumber":37,"author":{"gitId":"JulietTeoh"},"content":"    /**"},{"lineNumber":38,"author":{"gitId":"JulietTeoh"},"content":"     * @return Returns number of tasks in the task list"},{"lineNumber":39,"author":{"gitId":"JulietTeoh"},"content":"     */"},{"lineNumber":40,"author":{"gitId":"JulietTeoh"},"content":"    public int getNumberOfTasks() {"},{"lineNumber":41,"author":{"gitId":"JulietTeoh"},"content":"        return numberOfTasks;"},{"lineNumber":42,"author":{"gitId":"JulietTeoh"},"content":"    }"},{"lineNumber":43,"author":{"gitId":"JulietTeoh"},"content":""},{"lineNumber":44,"author":{"gitId":"JulietTeoh"},"content":"    /**"},{"lineNumber":45,"author":{"gitId":"JulietTeoh"},"content":"     * @return Returns a arraylist containing all the current tasks in the tasklist"},{"lineNumber":46,"author":{"gitId":"JulietTeoh"},"content":"     */"},{"lineNumber":47,"author":{"gitId":"JulietTeoh"},"content":"    public ArrayList\u003cTask\u003e getCurrentTaskList() {"},{"lineNumber":48,"author":{"gitId":"JulietTeoh"},"content":"        return new ArrayList\u003cTask\u003e(tasks);"},{"lineNumber":49,"author":{"gitId":"JulietTeoh"},"content":"    }"},{"lineNumber":50,"author":{"gitId":"JulietTeoh"},"content":""},{"lineNumber":51,"author":{"gitId":"JulietTeoh"},"content":"    /**"},{"lineNumber":52,"author":{"gitId":"JulietTeoh"},"content":"     * Checks a given index\u0027s task as done"},{"lineNumber":53,"author":{"gitId":"JulietTeoh"},"content":"     * @param number index of task to mark as done"},{"lineNumber":54,"author":{"gitId":"JulietTeoh"},"content":"     * @return returns tasks that has been marked as done"},{"lineNumber":55,"author":{"gitId":"JulietTeoh"},"content":"     * @throws DukeException error thrown if the index given has no corresponding task"},{"lineNumber":56,"author":{"gitId":"JulietTeoh"},"content":"     */"},{"lineNumber":57,"author":{"gitId":"JulietTeoh"},"content":"    public Task checkTaskAsDone(int number) throws DukeException {"},{"lineNumber":58,"author":{"gitId":"JulietTeoh"},"content":"        if (number \u003e\u003d 1 \u0026\u0026 number \u003c\u003d tasks.size()) {"},{"lineNumber":59,"author":{"gitId":"JulietTeoh"},"content":"            Task currentTask \u003d tasks.get(number - 1);"},{"lineNumber":60,"author":{"gitId":"JulietTeoh"},"content":"            currentTask.changeTaskToDone();"},{"lineNumber":61,"author":{"gitId":"JulietTeoh"},"content":""},{"lineNumber":62,"author":{"gitId":"JulietTeoh"},"content":"            return currentTask;"},{"lineNumber":63,"author":{"gitId":"JulietTeoh"},"content":"        } else {"},{"lineNumber":64,"author":{"gitId":"JulietTeoh"},"content":"            throw new DukeException(\"Error! Please make sure the\""},{"lineNumber":65,"author":{"gitId":"JulietTeoh"},"content":"                    + \" number given has a corresponding task!\");"},{"lineNumber":66,"author":{"gitId":"JulietTeoh"},"content":"        }"},{"lineNumber":67,"author":{"gitId":"JulietTeoh"},"content":"    }"},{"lineNumber":68,"author":{"gitId":"JulietTeoh"},"content":""},{"lineNumber":69,"author":{"gitId":"JulietTeoh"},"content":"    /**"},{"lineNumber":70,"author":{"gitId":"JulietTeoh"},"content":"     * Deletes a given index\u0027s task from the TaskList"},{"lineNumber":71,"author":{"gitId":"JulietTeoh"},"content":"     * @param taskInt index of task to delete"},{"lineNumber":72,"author":{"gitId":"JulietTeoh"},"content":"     * @return the delete task"},{"lineNumber":73,"author":{"gitId":"JulietTeoh"},"content":"     * @throws DukeException error thrown if the index given has no corresponding task"},{"lineNumber":74,"author":{"gitId":"JulietTeoh"},"content":"     */"},{"lineNumber":75,"author":{"gitId":"JulietTeoh"},"content":"    public Task deleteTask(int taskInt) throws DukeException {"},{"lineNumber":76,"author":{"gitId":"JulietTeoh"},"content":"        if (taskInt \u003e\u003d 1 \u0026\u0026 taskInt \u003c\u003d tasks.size()) {"},{"lineNumber":77,"author":{"gitId":"JulietTeoh"},"content":"            Task todelete \u003d tasks.get(taskInt - 1);"},{"lineNumber":78,"author":{"gitId":"JulietTeoh"},"content":"            tasks.remove(taskInt - 1);"},{"lineNumber":79,"author":{"gitId":"JulietTeoh"},"content":"            numberOfTasks \u003d numberOfTasks - 1;"},{"lineNumber":80,"author":{"gitId":"JulietTeoh"},"content":""},{"lineNumber":81,"author":{"gitId":"JulietTeoh"},"content":"            return todelete;"},{"lineNumber":82,"author":{"gitId":"JulietTeoh"},"content":"        } else {"},{"lineNumber":83,"author":{"gitId":"JulietTeoh"},"content":"            throw new DukeException(\"Error! Please make sure the number given has a corresponding task!\");"},{"lineNumber":84,"author":{"gitId":"JulietTeoh"},"content":"        }"},{"lineNumber":85,"author":{"gitId":"JulietTeoh"},"content":"    }"},{"lineNumber":86,"author":{"gitId":"JulietTeoh"},"content":""},{"lineNumber":87,"author":{"gitId":"JulietTeoh"},"content":"    /**"},{"lineNumber":88,"author":{"gitId":"JulietTeoh"},"content":"     * Add a to do task to the tasklist"},{"lineNumber":89,"author":{"gitId":"JulietTeoh"},"content":"     * @param description description of the to do task"},{"lineNumber":90,"author":{"gitId":"JulietTeoh"},"content":"     * @return returns the to do task that has been added"},{"lineNumber":91,"author":{"gitId":"JulietTeoh"},"content":"     */"},{"lineNumber":92,"author":{"gitId":"JulietTeoh"},"content":"    public Task addToDoTask(String description) {"},{"lineNumber":93,"author":{"gitId":"JulietTeoh"},"content":"        ToDo newToDo \u003d new ToDo(description);"},{"lineNumber":94,"author":{"gitId":"JulietTeoh"},"content":"        tasks.add(newToDo);"},{"lineNumber":95,"author":{"gitId":"JulietTeoh"},"content":"        numberOfTasks \u003d numberOfTasks + 1;"},{"lineNumber":96,"author":{"gitId":"JulietTeoh"},"content":""},{"lineNumber":97,"author":{"gitId":"JulietTeoh"},"content":"        return newToDo;"},{"lineNumber":98,"author":{"gitId":"JulietTeoh"},"content":"    }"},{"lineNumber":99,"author":{"gitId":"JulietTeoh"},"content":""},{"lineNumber":100,"author":{"gitId":"JulietTeoh"},"content":"    /**"},{"lineNumber":101,"author":{"gitId":"JulietTeoh"},"content":"     * Add a event task to the tasklist"},{"lineNumber":102,"author":{"gitId":"JulietTeoh"},"content":"     * @param description arraylist of description of the event task, index 0 has the description and"},{"lineNumber":103,"author":{"gitId":"JulietTeoh"},"content":"     *                    index 1 has the event at description"},{"lineNumber":104,"author":{"gitId":"JulietTeoh"},"content":"     * @return returns the event task that has been added"},{"lineNumber":105,"author":{"gitId":"JulietTeoh"},"content":"     */"},{"lineNumber":106,"author":{"gitId":"JulietTeoh"},"content":"    public Task addEventTask(ArrayList\u003cString\u003e description) {"},{"lineNumber":107,"author":{"gitId":"JulietTeoh"},"content":"        Event newEvent \u003d new Event(description.get(0), description.get(1));"},{"lineNumber":108,"author":{"gitId":"JulietTeoh"},"content":"        tasks.add(newEvent);"},{"lineNumber":109,"author":{"gitId":"JulietTeoh"},"content":"        numberOfTasks \u003d numberOfTasks + 1;"},{"lineNumber":110,"author":{"gitId":"JulietTeoh"},"content":""},{"lineNumber":111,"author":{"gitId":"JulietTeoh"},"content":"        return newEvent;"},{"lineNumber":112,"author":{"gitId":"JulietTeoh"},"content":"    }"},{"lineNumber":113,"author":{"gitId":"JulietTeoh"},"content":""},{"lineNumber":114,"author":{"gitId":"JulietTeoh"},"content":""},{"lineNumber":115,"author":{"gitId":"JulietTeoh"},"content":"    /**"},{"lineNumber":116,"author":{"gitId":"JulietTeoh"},"content":"     * Add a deadline task to the tasklist"},{"lineNumber":117,"author":{"gitId":"JulietTeoh"},"content":"     * @param description arraylist of description of the event task, index 0 has the description and"},{"lineNumber":118,"author":{"gitId":"JulietTeoh"},"content":"     *                    index 1 has the event by description"},{"lineNumber":119,"author":{"gitId":"JulietTeoh"},"content":"     * @return returns the deadline task that has been added"},{"lineNumber":120,"author":{"gitId":"JulietTeoh"},"content":"     * @throws DukeException"},{"lineNumber":121,"author":{"gitId":"JulietTeoh"},"content":"     */"},{"lineNumber":122,"author":{"gitId":"JulietTeoh"},"content":"    public Task addDeadlineTask(ArrayList\u003cString\u003e description) throws DukeException {"},{"lineNumber":123,"author":{"gitId":"JulietTeoh"},"content":"        try {"},{"lineNumber":124,"author":{"gitId":"JulietTeoh"},"content":"            Deadline newDeadline \u003d new Deadline(description.get(0), description.get(1));"},{"lineNumber":125,"author":{"gitId":"JulietTeoh"},"content":"            tasks.add(newDeadline);"},{"lineNumber":126,"author":{"gitId":"JulietTeoh"},"content":"            numberOfTasks \u003d numberOfTasks + 1;"},{"lineNumber":127,"author":{"gitId":"JulietTeoh"},"content":"            return newDeadline;"},{"lineNumber":128,"author":{"gitId":"JulietTeoh"},"content":"        } catch (TaskException e) {"},{"lineNumber":129,"author":{"gitId":"JulietTeoh"},"content":"            throw new DukeException(e.getMessage());"},{"lineNumber":130,"author":{"gitId":"JulietTeoh"},"content":"        }"},{"lineNumber":131,"author":{"gitId":"JulietTeoh"},"content":"    }"},{"lineNumber":132,"author":{"gitId":"JulietTeoh"},"content":"}"}],"authorContributionMap":{"JulietTeoh":132}},{"path":"src/main/java/duke/maincomponents/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"JulietTeoh"},"content":"package duke.maincomponents;"},{"lineNumber":2,"author":{"gitId":"JulietTeoh"},"content":""},{"lineNumber":3,"author":{"gitId":"JulietTeoh"},"content":"import java.util.ArrayList;"},{"lineNumber":4,"author":{"gitId":"JulietTeoh"},"content":"import java.util.Scanner;"},{"lineNumber":5,"author":{"gitId":"JulietTeoh"},"content":""},{"lineNumber":6,"author":{"gitId":"JulietTeoh"},"content":"import duke.task.Task;"},{"lineNumber":7,"author":{"gitId":"JulietTeoh"},"content":""},{"lineNumber":8,"author":{"gitId":"JulietTeoh"},"content":"public class Ui {"},{"lineNumber":9,"author":{"gitId":"JulietTeoh"},"content":"    private Scanner scanner;"},{"lineNumber":10,"author":{"gitId":"JulietTeoh"},"content":"    public Ui() {"},{"lineNumber":11,"author":{"gitId":"JulietTeoh"},"content":"        scanner \u003d new Scanner(System.in);"},{"lineNumber":12,"author":{"gitId":"JulietTeoh"},"content":"    }"},{"lineNumber":13,"author":{"gitId":"JulietTeoh"},"content":""},{"lineNumber":14,"author":{"gitId":"JulietTeoh"},"content":"    /**"},{"lineNumber":15,"author":{"gitId":"JulietTeoh"},"content":"     * Shows default welcome line"},{"lineNumber":16,"author":{"gitId":"JulietTeoh"},"content":"     */"},{"lineNumber":17,"author":{"gitId":"JulietTeoh"},"content":"    public void showWelcomeLine() {"},{"lineNumber":18,"author":{"gitId":"JulietTeoh"},"content":"        System.out.println(defaultFormatting(\"Hello! I\u0027m Duke\\n\""},{"lineNumber":19,"author":{"gitId":"JulietTeoh"},"content":"                + padSpaces(\"What can I do for you?\", 5)));"},{"lineNumber":20,"author":{"gitId":"JulietTeoh"},"content":"    }"},{"lineNumber":21,"author":{"gitId":"JulietTeoh"},"content":""},{"lineNumber":22,"author":{"gitId":"JulietTeoh"},"content":"    public void showGoodbyeLine() {"},{"lineNumber":23,"author":{"gitId":"JulietTeoh"},"content":"        System.out.println(defaultFormatting(\"Bye. Hope to see you again soon!\"));"},{"lineNumber":24,"author":{"gitId":"JulietTeoh"},"content":"    }"},{"lineNumber":25,"author":{"gitId":"JulietTeoh"},"content":""},{"lineNumber":26,"author":{"gitId":"JulietTeoh"},"content":"    private String numberOfTasksLine(int numberOfTasks) {"},{"lineNumber":27,"author":{"gitId":"JulietTeoh"},"content":"        return padSpaces(\"Now you have \" + String.valueOf(numberOfTasks) + \" task in the list.\", 5);"},{"lineNumber":28,"author":{"gitId":"JulietTeoh"},"content":"    }"},{"lineNumber":29,"author":{"gitId":"JulietTeoh"},"content":""},{"lineNumber":30,"author":{"gitId":"JulietTeoh"},"content":"    /**"},{"lineNumber":31,"author":{"gitId":"JulietTeoh"},"content":"     * Shows a task list to the user in the appropriate format"},{"lineNumber":32,"author":{"gitId":"JulietTeoh"},"content":"     * @param taskArray task array list to show to the viewer"},{"lineNumber":33,"author":{"gitId":"JulietTeoh"},"content":"     */"},{"lineNumber":34,"author":{"gitId":"JulietTeoh"},"content":"    public void showReturnTaskList(ArrayList\u003cTask\u003e taskArray) {"},{"lineNumber":35,"author":{"gitId":"JulietTeoh"},"content":"        StringBuilder sb \u003d new StringBuilder();"},{"lineNumber":36,"author":{"gitId":"JulietTeoh"},"content":"        sb.append(horizontalLine()).append(\u0027\\n\u0027);"},{"lineNumber":37,"author":{"gitId":"JulietTeoh"},"content":""},{"lineNumber":38,"author":{"gitId":"JulietTeoh"},"content":"        sb.append(indentedString(\"Here are the task in your list:\\n\"));"},{"lineNumber":39,"author":{"gitId":"JulietTeoh"},"content":"        for (int i \u003d 0; i \u003c taskArray.size(); i++) {"},{"lineNumber":40,"author":{"gitId":"JulietTeoh"},"content":""},{"lineNumber":41,"author":{"gitId":"JulietTeoh"},"content":"            Task currentTask \u003d taskArray.get(i);"},{"lineNumber":42,"author":{"gitId":"JulietTeoh"},"content":""},{"lineNumber":43,"author":{"gitId":"JulietTeoh"},"content":"            String numberIndicator \u003d (i + 1) + \".\";"},{"lineNumber":44,"author":{"gitId":"JulietTeoh"},"content":"            String temp \u003d numberIndicator + currentTask.toString() + \u0027\\n\u0027;"},{"lineNumber":45,"author":{"gitId":"JulietTeoh"},"content":""},{"lineNumber":46,"author":{"gitId":"JulietTeoh"},"content":"            sb.append(indentedString(temp));"},{"lineNumber":47,"author":{"gitId":"JulietTeoh"},"content":"        }"},{"lineNumber":48,"author":{"gitId":"JulietTeoh"},"content":"        sb.append(horizontalLine());"},{"lineNumber":49,"author":{"gitId":"JulietTeoh"},"content":"        System.out.println(sb.toString());"},{"lineNumber":50,"author":{"gitId":"JulietTeoh"},"content":"    }"},{"lineNumber":51,"author":{"gitId":"JulietTeoh"},"content":""},{"lineNumber":52,"author":{"gitId":"JulietTeoh"},"content":"    /**"},{"lineNumber":53,"author":{"gitId":"JulietTeoh"},"content":"     * Shows a specificed error message"},{"lineNumber":54,"author":{"gitId":"JulietTeoh"},"content":"     * @param errorMsg error message to show to the user"},{"lineNumber":55,"author":{"gitId":"JulietTeoh"},"content":"     */"},{"lineNumber":56,"author":{"gitId":"JulietTeoh"},"content":"    public void showLoadingError(String errorMsg) {"},{"lineNumber":57,"author":{"gitId":"JulietTeoh"},"content":"        System.out.println(defaultFormatting(errorMsg));"},{"lineNumber":58,"author":{"gitId":"JulietTeoh"},"content":"    }"},{"lineNumber":59,"author":{"gitId":"JulietTeoh"},"content":""},{"lineNumber":60,"author":{"gitId":"JulietTeoh"},"content":"    public void showLoadingSucess() {"},{"lineNumber":61,"author":{"gitId":"JulietTeoh"},"content":"        System.out.println(defaultFormatting(\"Data Successfuly Restored\"));"},{"lineNumber":62,"author":{"gitId":"JulietTeoh"},"content":"    }"},{"lineNumber":63,"author":{"gitId":"JulietTeoh"},"content":""},{"lineNumber":64,"author":{"gitId":"JulietTeoh"},"content":"    public void showErrorMsg(String msg) {"},{"lineNumber":65,"author":{"gitId":"JulietTeoh"},"content":"        System.out.println(defaultFormatting(msg));"},{"lineNumber":66,"author":{"gitId":"JulietTeoh"},"content":"    }"},{"lineNumber":67,"author":{"gitId":"JulietTeoh"},"content":""},{"lineNumber":68,"author":{"gitId":"JulietTeoh"},"content":"    /**"},{"lineNumber":69,"author":{"gitId":"JulietTeoh"},"content":"     * Show the user that a specific task has been marked as done"},{"lineNumber":70,"author":{"gitId":"JulietTeoh"},"content":"     * @param doneTask Task that has been marked as done"},{"lineNumber":71,"author":{"gitId":"JulietTeoh"},"content":"     */"},{"lineNumber":72,"author":{"gitId":"JulietTeoh"},"content":"    public void showTaskDone(Task doneTask) {"},{"lineNumber":73,"author":{"gitId":"JulietTeoh"},"content":"        System.out.println(defaultFormatting(\"Nice! I\u0027ve marked this task as done:\\n\""},{"lineNumber":74,"author":{"gitId":"JulietTeoh"},"content":"                + padSpaces(doneTask.toString(), 7)));"},{"lineNumber":75,"author":{"gitId":"JulietTeoh"},"content":"    }"},{"lineNumber":76,"author":{"gitId":"JulietTeoh"},"content":""},{"lineNumber":77,"author":{"gitId":"JulietTeoh"},"content":"    public void showTaskDeleted(Task deletedTask, int numberOfTasks) {"},{"lineNumber":78,"author":{"gitId":"JulietTeoh"},"content":"        String a \u003d \"Noted. I\u0027ve removed this task:\\n\" + padSpaces(deletedTask.toString(), 7)"},{"lineNumber":79,"author":{"gitId":"JulietTeoh"},"content":"                + \"\\n\" + numberOfTasksLine(numberOfTasks);"},{"lineNumber":80,"author":{"gitId":"JulietTeoh"},"content":""},{"lineNumber":81,"author":{"gitId":"JulietTeoh"},"content":"        System.out.println(defaultFormatting(a));"},{"lineNumber":82,"author":{"gitId":"JulietTeoh"},"content":"    }"},{"lineNumber":83,"author":{"gitId":"JulietTeoh"},"content":""},{"lineNumber":84,"author":{"gitId":"JulietTeoh"},"content":"    public void showAddedTask(Task addedTask, int numberOfTasks) {"},{"lineNumber":85,"author":{"gitId":"JulietTeoh"},"content":"        String temp \u003d \"Got it. I\u0027ve added this task:\\n\" + padSpaces(addedTask.toString(), 7)"},{"lineNumber":86,"author":{"gitId":"JulietTeoh"},"content":"                + \"\\n\" + numberOfTasksLine(numberOfTasks);"},{"lineNumber":87,"author":{"gitId":"JulietTeoh"},"content":""},{"lineNumber":88,"author":{"gitId":"JulietTeoh"},"content":"        System.out.println(defaultFormatting(temp));"},{"lineNumber":89,"author":{"gitId":"JulietTeoh"},"content":"    }"},{"lineNumber":90,"author":{"gitId":"JulietTeoh"},"content":""},{"lineNumber":91,"author":{"gitId":"JulietTeoh"},"content":""},{"lineNumber":92,"author":{"gitId":"JulietTeoh"},"content":"    public String readCommand() {"},{"lineNumber":93,"author":{"gitId":"JulietTeoh"},"content":"        return scanner.nextLine().trim();"},{"lineNumber":94,"author":{"gitId":"JulietTeoh"},"content":"    }"},{"lineNumber":95,"author":{"gitId":"JulietTeoh"},"content":""},{"lineNumber":96,"author":{"gitId":"JulietTeoh"},"content":"    private static String horizontalLine() {"},{"lineNumber":97,"author":{"gitId":"JulietTeoh"},"content":"        return padSpaces(\"____________________________________________________________\", 4);"},{"lineNumber":98,"author":{"gitId":"JulietTeoh"},"content":"    }"},{"lineNumber":99,"author":{"gitId":"JulietTeoh"},"content":""},{"lineNumber":100,"author":{"gitId":"JulietTeoh"},"content":"    private static String indentedString(String input) {"},{"lineNumber":101,"author":{"gitId":"JulietTeoh"},"content":"        return padSpaces(input, 5);"},{"lineNumber":102,"author":{"gitId":"JulietTeoh"},"content":"    }"},{"lineNumber":103,"author":{"gitId":"JulietTeoh"},"content":""},{"lineNumber":104,"author":{"gitId":"JulietTeoh"},"content":"    private static String defaultFormatting(String input) {"},{"lineNumber":105,"author":{"gitId":"JulietTeoh"},"content":"        return horizontalLine() + \u0027\\n\u0027 + indentedString(input) + \u0027\\n\u0027 + horizontalLine();"},{"lineNumber":106,"author":{"gitId":"JulietTeoh"},"content":"    }"},{"lineNumber":107,"author":{"gitId":"JulietTeoh"},"content":""},{"lineNumber":108,"author":{"gitId":"JulietTeoh"},"content":"    /**"},{"lineNumber":109,"author":{"gitId":"JulietTeoh"},"content":"     * pad a string with spaces at its front"},{"lineNumber":110,"author":{"gitId":"JulietTeoh"},"content":"     * @param input input string"},{"lineNumber":111,"author":{"gitId":"JulietTeoh"},"content":"     * @param numOfSpacesToPad number of spaces to add in front of a string"},{"lineNumber":112,"author":{"gitId":"JulietTeoh"},"content":"     * @return string padded with spaces"},{"lineNumber":113,"author":{"gitId":"JulietTeoh"},"content":"     */"},{"lineNumber":114,"author":{"gitId":"JulietTeoh"},"content":"    private static String padSpaces(String input, int numOfSpacesToPad) {"},{"lineNumber":115,"author":{"gitId":"JulietTeoh"},"content":"        String toreturn \u003d \"\";"},{"lineNumber":116,"author":{"gitId":"JulietTeoh"},"content":""},{"lineNumber":117,"author":{"gitId":"JulietTeoh"},"content":"        for (int i \u003d 0; i \u003c numOfSpacesToPad; i++) {"},{"lineNumber":118,"author":{"gitId":"JulietTeoh"},"content":"            toreturn \u003d toreturn + \u0027 \u0027;"},{"lineNumber":119,"author":{"gitId":"JulietTeoh"},"content":"        }"},{"lineNumber":120,"author":{"gitId":"JulietTeoh"},"content":""},{"lineNumber":121,"author":{"gitId":"JulietTeoh"},"content":"        return toreturn + input;"},{"lineNumber":122,"author":{"gitId":"JulietTeoh"},"content":"    }"},{"lineNumber":123,"author":{"gitId":"JulietTeoh"},"content":""},{"lineNumber":124,"author":{"gitId":"JulietTeoh"},"content":"    /**"},{"lineNumber":125,"author":{"gitId":"JulietTeoh"},"content":"     * Shows task that are related to a string specificed by the user"},{"lineNumber":126,"author":{"gitId":"JulietTeoh"},"content":"     * @param taskArray Array list of tasks that are related to a string specificed by the user"},{"lineNumber":127,"author":{"gitId":"JulietTeoh"},"content":"     */"},{"lineNumber":128,"author":{"gitId":"JulietTeoh"},"content":"    public void showFoundTaskList(ArrayList\u003cTask\u003e taskArray) {"},{"lineNumber":129,"author":{"gitId":"JulietTeoh"},"content":"        StringBuilder sb \u003d new StringBuilder();"},{"lineNumber":130,"author":{"gitId":"JulietTeoh"},"content":"        sb.append(horizontalLine()).append(\u0027\\n\u0027);"},{"lineNumber":131,"author":{"gitId":"JulietTeoh"},"content":""},{"lineNumber":132,"author":{"gitId":"JulietTeoh"},"content":"        sb.append(indentedString(\"Here are the matching tasks in your list:\\n\"));"},{"lineNumber":133,"author":{"gitId":"JulietTeoh"},"content":"        for (int i \u003d 0; i \u003c taskArray.size(); i++) {"},{"lineNumber":134,"author":{"gitId":"JulietTeoh"},"content":""},{"lineNumber":135,"author":{"gitId":"JulietTeoh"},"content":"            Task currentTask \u003d taskArray.get(i);"},{"lineNumber":136,"author":{"gitId":"JulietTeoh"},"content":""},{"lineNumber":137,"author":{"gitId":"JulietTeoh"},"content":"            String numberIndicator \u003d (i + 1) + \".\";"},{"lineNumber":138,"author":{"gitId":"JulietTeoh"},"content":"            String temp \u003d numberIndicator + currentTask.toString() + \u0027\\n\u0027;"},{"lineNumber":139,"author":{"gitId":"JulietTeoh"},"content":""},{"lineNumber":140,"author":{"gitId":"JulietTeoh"},"content":"            sb.append(indentedString( temp ));"},{"lineNumber":141,"author":{"gitId":"JulietTeoh"},"content":"        }"},{"lineNumber":142,"author":{"gitId":"JulietTeoh"},"content":"        sb.append(horizontalLine());"},{"lineNumber":143,"author":{"gitId":"JulietTeoh"},"content":"        System.out.println(sb.toString());"},{"lineNumber":144,"author":{"gitId":"JulietTeoh"},"content":"    }"},{"lineNumber":145,"author":{"gitId":"JulietTeoh"},"content":"}"}],"authorContributionMap":{"JulietTeoh":145}},{"path":"src/main/java/duke/task/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"JulietTeoh"},"content":"package duke.task;"},{"lineNumber":2,"author":{"gitId":"JulietTeoh"},"content":""},{"lineNumber":3,"author":{"gitId":"JulietTeoh"},"content":"import java.time.LocalDate;"},{"lineNumber":4,"author":{"gitId":"JulietTeoh"},"content":"import java.time.format.DateTimeFormatter;"},{"lineNumber":5,"author":{"gitId":"JulietTeoh"},"content":""},{"lineNumber":6,"author":{"gitId":"JulietTeoh"},"content":"import duke.exceptions.TaskException;"},{"lineNumber":7,"author":{"gitId":"JulietTeoh"},"content":"// import java.time.LocalDateTime;"},{"lineNumber":8,"author":{"gitId":"JulietTeoh"},"content":""},{"lineNumber":9,"author":{"gitId":"JulietTeoh"},"content":"public class Deadline extends Task {"},{"lineNumber":10,"author":{"gitId":"JulietTeoh"},"content":"    private final DateTimeFormatter FORMAT_ONE \u003d DateTimeFormatter.ofPattern(\"d-M-uuuu\");"},{"lineNumber":11,"author":{"gitId":"JulietTeoh"},"content":"    private final DateTimeFormatter FORMAT_TWO \u003d DateTimeFormatter.ofPattern(\"uuuu-M-d\");"},{"lineNumber":12,"author":{"gitId":"JulietTeoh"},"content":"    private String deadlineBy;"},{"lineNumber":13,"author":{"gitId":"JulietTeoh"},"content":"    private LocalDate dateBy;"},{"lineNumber":14,"author":{"gitId":"JulietTeoh"},"content":"    public Deadline(String description, String by) throws TaskException {"},{"lineNumber":15,"author":{"gitId":"JulietTeoh"},"content":"        super(description);"},{"lineNumber":16,"author":{"gitId":"JulietTeoh"},"content":"        this.deadlineBy \u003d by;"},{"lineNumber":17,"author":{"gitId":"JulietTeoh"},"content":""},{"lineNumber":18,"author":{"gitId":"JulietTeoh"},"content":"        try {"},{"lineNumber":19,"author":{"gitId":"JulietTeoh"},"content":"            String trimmed \u003d deadlineBy.trim();"},{"lineNumber":20,"author":{"gitId":"JulietTeoh"},"content":"            if (trimmed.substring(0, 4).contains(\"-\")) {"},{"lineNumber":21,"author":{"gitId":"JulietTeoh"},"content":"                dateBy \u003d LocalDate.parse(deadlineBy.trim(), FORMAT_ONE);"},{"lineNumber":22,"author":{"gitId":"JulietTeoh"},"content":"            } else {"},{"lineNumber":23,"author":{"gitId":"JulietTeoh"},"content":"                dateBy \u003d LocalDate.parse(deadlineBy.trim(), FORMAT_TWO);"},{"lineNumber":24,"author":{"gitId":"JulietTeoh"},"content":"            }"},{"lineNumber":25,"author":{"gitId":"JulietTeoh"},"content":"        } catch (Exception e) {"},{"lineNumber":26,"author":{"gitId":"JulietTeoh"},"content":"            throw new TaskException(\"deadline must be of the format date-month-year, in numbers.\");"},{"lineNumber":27,"author":{"gitId":"JulietTeoh"},"content":"        }"},{"lineNumber":28,"author":{"gitId":"JulietTeoh"},"content":"        /*"},{"lineNumber":29,"author":{"gitId":"JulietTeoh"},"content":"        DateTimeFormatter format \u003d DateTimeFormatter.ofPattern(\"d/M/uuuu HHmm\");"},{"lineNumber":30,"author":{"gitId":"JulietTeoh"},"content":"        dateBy \u003d LocalDateTime.parse(deadlineBy, format);"},{"lineNumber":31,"author":{"gitId":"JulietTeoh"},"content":"        System.out.println(dateBy.format(DateTimeFormatter.ofPattern(\"MMM d uuuu HH:mm\")));"},{"lineNumber":32,"author":{"gitId":"JulietTeoh"},"content":"        */"},{"lineNumber":33,"author":{"gitId":"JulietTeoh"},"content":"    }"},{"lineNumber":34,"author":{"gitId":"JulietTeoh"},"content":""},{"lineNumber":35,"author":{"gitId":"JulietTeoh"},"content":"    public Deadline(String description, String by, int doneInt) throws TaskException {"},{"lineNumber":36,"author":{"gitId":"JulietTeoh"},"content":"        super(description, doneInt);"},{"lineNumber":37,"author":{"gitId":"JulietTeoh"},"content":"        this.deadlineBy \u003d by;"},{"lineNumber":38,"author":{"gitId":"JulietTeoh"},"content":""},{"lineNumber":39,"author":{"gitId":"JulietTeoh"},"content":"        try {"},{"lineNumber":40,"author":{"gitId":"JulietTeoh"},"content":"            String trimmed \u003d deadlineBy.trim();"},{"lineNumber":41,"author":{"gitId":"JulietTeoh"},"content":"            if (trimmed.substring(0, 4).contains(\"-\")) {"},{"lineNumber":42,"author":{"gitId":"JulietTeoh"},"content":"                dateBy \u003d LocalDate.parse(deadlineBy.trim(), FORMAT_ONE);"},{"lineNumber":43,"author":{"gitId":"JulietTeoh"},"content":"            } else {"},{"lineNumber":44,"author":{"gitId":"JulietTeoh"},"content":"                dateBy \u003d LocalDate.parse(deadlineBy.trim(), FORMAT_TWO);"},{"lineNumber":45,"author":{"gitId":"JulietTeoh"},"content":"            }"},{"lineNumber":46,"author":{"gitId":"JulietTeoh"},"content":"        } catch (Exception e) {"},{"lineNumber":47,"author":{"gitId":"JulietTeoh"},"content":"            throw new TaskException(\"deadline must be of the format date-month-year, in numbers.\");"},{"lineNumber":48,"author":{"gitId":"JulietTeoh"},"content":"        }"},{"lineNumber":49,"author":{"gitId":"JulietTeoh"},"content":"    }"},{"lineNumber":50,"author":{"gitId":"JulietTeoh"},"content":""},{"lineNumber":51,"author":{"gitId":"JulietTeoh"},"content":"    @Override"},{"lineNumber":52,"author":{"gitId":"JulietTeoh"},"content":"    public String toString() {"},{"lineNumber":53,"author":{"gitId":"JulietTeoh"},"content":"        String formattedDate \u003d dateBy.format(DateTimeFormatter.ofPattern(\"MMM d uuuu\"));"},{"lineNumber":54,"author":{"gitId":"JulietTeoh"},"content":"        return \"[D]\" + super.toString() + \" (by: \" + formattedDate + \")\";"},{"lineNumber":55,"author":{"gitId":"JulietTeoh"},"content":"    }"},{"lineNumber":56,"author":{"gitId":"JulietTeoh"},"content":""},{"lineNumber":57,"author":{"gitId":"JulietTeoh"},"content":"    @Override"},{"lineNumber":58,"author":{"gitId":"JulietTeoh"},"content":"    public String toSaveFormat() {"},{"lineNumber":59,"author":{"gitId":"JulietTeoh"},"content":"        return \"D|\" + super.toSaveFormat() + \"|\" + deadlineBy;"},{"lineNumber":60,"author":{"gitId":"JulietTeoh"},"content":"    }"},{"lineNumber":61,"author":{"gitId":"JulietTeoh"},"content":"}"}],"authorContributionMap":{"JulietTeoh":61}},{"path":"src/main/java/duke/task/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"JulietTeoh"},"content":"package duke.task;"},{"lineNumber":2,"author":{"gitId":"JulietTeoh"},"content":""},{"lineNumber":3,"author":{"gitId":"JulietTeoh"},"content":"public class Event extends Task {"},{"lineNumber":4,"author":{"gitId":"JulietTeoh"},"content":"    private String eventAt;"},{"lineNumber":5,"author":{"gitId":"JulietTeoh"},"content":"    public Event(String description, String eventAt) {"},{"lineNumber":6,"author":{"gitId":"JulietTeoh"},"content":"        super(description);"},{"lineNumber":7,"author":{"gitId":"JulietTeoh"},"content":"        this.eventAt \u003d eventAt;"},{"lineNumber":8,"author":{"gitId":"JulietTeoh"},"content":"    }"},{"lineNumber":9,"author":{"gitId":"JulietTeoh"},"content":""},{"lineNumber":10,"author":{"gitId":"JulietTeoh"},"content":"    public Event(String description, String eventAt, int doneInt) {"},{"lineNumber":11,"author":{"gitId":"JulietTeoh"},"content":"        super(description, doneInt);"},{"lineNumber":12,"author":{"gitId":"JulietTeoh"},"content":"        this.eventAt \u003d eventAt;"},{"lineNumber":13,"author":{"gitId":"JulietTeoh"},"content":"    }"},{"lineNumber":14,"author":{"gitId":"JulietTeoh"},"content":""},{"lineNumber":15,"author":{"gitId":"JulietTeoh"},"content":"    @Override"},{"lineNumber":16,"author":{"gitId":"JulietTeoh"},"content":"    public String toString() {"},{"lineNumber":17,"author":{"gitId":"JulietTeoh"},"content":"        return \"[E]\" + super.toString() + \" (at: \" + eventAt + \")\";"},{"lineNumber":18,"author":{"gitId":"JulietTeoh"},"content":"    }"},{"lineNumber":19,"author":{"gitId":"JulietTeoh"},"content":""},{"lineNumber":20,"author":{"gitId":"JulietTeoh"},"content":"    @Override"},{"lineNumber":21,"author":{"gitId":"JulietTeoh"},"content":"    public String toSaveFormat() {"},{"lineNumber":22,"author":{"gitId":"JulietTeoh"},"content":"        return \"E|\" + super.toSaveFormat() + \"|\" + eventAt;"},{"lineNumber":23,"author":{"gitId":"JulietTeoh"},"content":"    }"},{"lineNumber":24,"author":{"gitId":"JulietTeoh"},"content":"}"}],"authorContributionMap":{"JulietTeoh":24}},{"path":"src/main/java/duke/task/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"JulietTeoh"},"content":"package duke.task;"},{"lineNumber":2,"author":{"gitId":"JulietTeoh"},"content":""},{"lineNumber":3,"author":{"gitId":"JulietTeoh"},"content":"/**"},{"lineNumber":4,"author":{"gitId":"JulietTeoh"},"content":" * Parent Class of all task"},{"lineNumber":5,"author":{"gitId":"JulietTeoh"},"content":" */"},{"lineNumber":6,"author":{"gitId":"JulietTeoh"},"content":"public class Task {"},{"lineNumber":7,"author":{"gitId":"JulietTeoh"},"content":"    protected String description;"},{"lineNumber":8,"author":{"gitId":"JulietTeoh"},"content":""},{"lineNumber":9,"author":{"gitId":"JulietTeoh"},"content":"    private boolean isDone;"},{"lineNumber":10,"author":{"gitId":"JulietTeoh"},"content":""},{"lineNumber":11,"author":{"gitId":"JulietTeoh"},"content":"    /**"},{"lineNumber":12,"author":{"gitId":"JulietTeoh"},"content":"     * Default Constructor of a task"},{"lineNumber":13,"author":{"gitId":"JulietTeoh"},"content":"     * @param description string description of a task"},{"lineNumber":14,"author":{"gitId":"JulietTeoh"},"content":"     */"},{"lineNumber":15,"author":{"gitId":"JulietTeoh"},"content":"    public Task(String description) {"},{"lineNumber":16,"author":{"gitId":"JulietTeoh"},"content":"        this.description \u003d description;"},{"lineNumber":17,"author":{"gitId":"JulietTeoh"},"content":"        this.isDone \u003d false;"},{"lineNumber":18,"author":{"gitId":"JulietTeoh"},"content":"    }"},{"lineNumber":19,"author":{"gitId":"JulietTeoh"},"content":""},{"lineNumber":20,"author":{"gitId":"JulietTeoh"},"content":"    /**"},{"lineNumber":21,"author":{"gitId":"JulietTeoh"},"content":"     * Constructor of a task"},{"lineNumber":22,"author":{"gitId":"JulietTeoh"},"content":"     * @param description string description of a task"},{"lineNumber":23,"author":{"gitId":"JulietTeoh"},"content":"     * @param doneInt 1 indicates that the task is done, 0 indicates that the task is not done"},{"lineNumber":24,"author":{"gitId":"JulietTeoh"},"content":"     */"},{"lineNumber":25,"author":{"gitId":"JulietTeoh"},"content":""},{"lineNumber":26,"author":{"gitId":"JulietTeoh"},"content":"    public Task(String description, int doneInt) {"},{"lineNumber":27,"author":{"gitId":"JulietTeoh"},"content":"        this.description \u003d description;"},{"lineNumber":28,"author":{"gitId":"JulietTeoh"},"content":"        if (doneInt \u003d\u003d 1) {"},{"lineNumber":29,"author":{"gitId":"JulietTeoh"},"content":"            this.isDone \u003d true;"},{"lineNumber":30,"author":{"gitId":"JulietTeoh"},"content":"        } else {"},{"lineNumber":31,"author":{"gitId":"JulietTeoh"},"content":"            this.isDone \u003d false;"},{"lineNumber":32,"author":{"gitId":"JulietTeoh"},"content":"        }"},{"lineNumber":33,"author":{"gitId":"JulietTeoh"},"content":"    }"},{"lineNumber":34,"author":{"gitId":"JulietTeoh"},"content":""},{"lineNumber":35,"author":{"gitId":"JulietTeoh"},"content":"    /**"},{"lineNumber":36,"author":{"gitId":"JulietTeoh"},"content":"     * @return If the task is done, return an X, else return a empty space character"},{"lineNumber":37,"author":{"gitId":"JulietTeoh"},"content":"     */"},{"lineNumber":38,"author":{"gitId":"JulietTeoh"},"content":"    private String getStatusIcon() {"},{"lineNumber":39,"author":{"gitId":"JulietTeoh"},"content":"        return (isDone ? \"X\" : \" \"); //return tick or X symbols"},{"lineNumber":40,"author":{"gitId":"JulietTeoh"},"content":"    }"},{"lineNumber":41,"author":{"gitId":"JulietTeoh"},"content":""},{"lineNumber":42,"author":{"gitId":"JulietTeoh"},"content":"    /**"},{"lineNumber":43,"author":{"gitId":"JulietTeoh"},"content":"     * @return String that describes the task and its done status"},{"lineNumber":44,"author":{"gitId":"JulietTeoh"},"content":"     */"},{"lineNumber":45,"author":{"gitId":"JulietTeoh"},"content":"    @Override"},{"lineNumber":46,"author":{"gitId":"JulietTeoh"},"content":"    public String toString() {"},{"lineNumber":47,"author":{"gitId":"JulietTeoh"},"content":"        return \"[\" + getStatusIcon() + \"] \" + description;"},{"lineNumber":48,"author":{"gitId":"JulietTeoh"},"content":"    }"},{"lineNumber":49,"author":{"gitId":"JulietTeoh"},"content":""},{"lineNumber":50,"author":{"gitId":"JulietTeoh"},"content":"    public void changeTaskToDone() {"},{"lineNumber":51,"author":{"gitId":"JulietTeoh"},"content":"        isDone \u003d true;"},{"lineNumber":52,"author":{"gitId":"JulietTeoh"},"content":"    }"},{"lineNumber":53,"author":{"gitId":"JulietTeoh"},"content":""},{"lineNumber":54,"author":{"gitId":"JulietTeoh"},"content":"    /**"},{"lineNumber":55,"author":{"gitId":"JulietTeoh"},"content":"     * @return Output string that in the format that it should be saved as"},{"lineNumber":56,"author":{"gitId":"JulietTeoh"},"content":"     */"},{"lineNumber":57,"author":{"gitId":"JulietTeoh"},"content":"    public String toSaveFormat() {"},{"lineNumber":58,"author":{"gitId":"JulietTeoh"},"content":"        int isDoneInt \u003d isDone ? 1 : 0;"},{"lineNumber":59,"author":{"gitId":"JulietTeoh"},"content":"        return isDoneInt + \"|\" + description;"},{"lineNumber":60,"author":{"gitId":"JulietTeoh"},"content":"    }"},{"lineNumber":61,"author":{"gitId":"JulietTeoh"},"content":""},{"lineNumber":62,"author":{"gitId":"JulietTeoh"},"content":"    public boolean descriptionContains(String input) {"},{"lineNumber":63,"author":{"gitId":"JulietTeoh"},"content":"        return description.contains(input);"},{"lineNumber":64,"author":{"gitId":"JulietTeoh"},"content":"    }"},{"lineNumber":65,"author":{"gitId":"JulietTeoh"},"content":"}"}],"authorContributionMap":{"JulietTeoh":65}},{"path":"src/main/java/duke/task/ToDo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"JulietTeoh"},"content":"package duke.task;"},{"lineNumber":2,"author":{"gitId":"JulietTeoh"},"content":""},{"lineNumber":3,"author":{"gitId":"JulietTeoh"},"content":"public class ToDo extends Task {"},{"lineNumber":4,"author":{"gitId":"JulietTeoh"},"content":"    public ToDo(String description) {"},{"lineNumber":5,"author":{"gitId":"JulietTeoh"},"content":"        super(description);"},{"lineNumber":6,"author":{"gitId":"JulietTeoh"},"content":"    }"},{"lineNumber":7,"author":{"gitId":"JulietTeoh"},"content":""},{"lineNumber":8,"author":{"gitId":"JulietTeoh"},"content":"    public ToDo(String description, int doneInt) {"},{"lineNumber":9,"author":{"gitId":"JulietTeoh"},"content":"        super(description, doneInt);"},{"lineNumber":10,"author":{"gitId":"JulietTeoh"},"content":"    }"},{"lineNumber":11,"author":{"gitId":"JulietTeoh"},"content":""},{"lineNumber":12,"author":{"gitId":"JulietTeoh"},"content":"    @Override"},{"lineNumber":13,"author":{"gitId":"JulietTeoh"},"content":"    public String toString() {"},{"lineNumber":14,"author":{"gitId":"JulietTeoh"},"content":"        return \"[T]\"+ super.toString();"},{"lineNumber":15,"author":{"gitId":"JulietTeoh"},"content":"    }"},{"lineNumber":16,"author":{"gitId":"JulietTeoh"},"content":""},{"lineNumber":17,"author":{"gitId":"JulietTeoh"},"content":"    @Override"},{"lineNumber":18,"author":{"gitId":"JulietTeoh"},"content":"    public String toSaveFormat() {"},{"lineNumber":19,"author":{"gitId":"JulietTeoh"},"content":"        return \"T|\" + super.toSaveFormat();"},{"lineNumber":20,"author":{"gitId":"JulietTeoh"},"content":"    }"},{"lineNumber":21,"author":{"gitId":"JulietTeoh"},"content":"}"}],"authorContributionMap":{"JulietTeoh":21}},{"path":"src/main/java/duke/unused/Echo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"JulietTeoh"},"content":"package duke.unused;"},{"lineNumber":2,"author":{"gitId":"JulietTeoh"},"content":""},{"lineNumber":3,"author":{"gitId":"JulietTeoh"},"content":"public class Echo {"},{"lineNumber":4,"author":{"gitId":"JulietTeoh"},"content":"    public Echo(){"},{"lineNumber":5,"author":{"gitId":"JulietTeoh"},"content":""},{"lineNumber":6,"author":{"gitId":"JulietTeoh"},"content":"    }"},{"lineNumber":7,"author":{"gitId":"JulietTeoh"},"content":"    public String dukeResponse (String input) {"},{"lineNumber":8,"author":{"gitId":"JulietTeoh"},"content":"        return horizontalLine() + \u0027\\n\u0027 + indentedString(input) + \u0027\\n\u0027 + horizontalLine();"},{"lineNumber":9,"author":{"gitId":"JulietTeoh"},"content":"    }"},{"lineNumber":10,"author":{"gitId":"JulietTeoh"},"content":""},{"lineNumber":11,"author":{"gitId":"JulietTeoh"},"content":"    private String horizontalLine() {"},{"lineNumber":12,"author":{"gitId":"JulietTeoh"},"content":"        return \"    ____________________________________________________________\";"},{"lineNumber":13,"author":{"gitId":"JulietTeoh"},"content":"    }"},{"lineNumber":14,"author":{"gitId":"JulietTeoh"},"content":""},{"lineNumber":15,"author":{"gitId":"JulietTeoh"},"content":"    private String indentedString(String input) {"},{"lineNumber":16,"author":{"gitId":"JulietTeoh"},"content":"        return \"     \" + input;"},{"lineNumber":17,"author":{"gitId":"JulietTeoh"},"content":"    }"},{"lineNumber":18,"author":{"gitId":"JulietTeoh"},"content":"}"}],"authorContributionMap":{"JulietTeoh":18}},{"path":"src/main/java/duke/unused/Output.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"JulietTeoh"},"content":"package duke.unused;"},{"lineNumber":2,"author":{"gitId":"JulietTeoh"},"content":""},{"lineNumber":3,"author":{"gitId":"JulietTeoh"},"content":"public abstract class Output {"},{"lineNumber":4,"author":{"gitId":"JulietTeoh"},"content":""},{"lineNumber":5,"author":{"gitId":"JulietTeoh"},"content":"    private String horizontalLine() {"},{"lineNumber":6,"author":{"gitId":"JulietTeoh"},"content":"        return \"    ____________________________________________________________\";"},{"lineNumber":7,"author":{"gitId":"JulietTeoh"},"content":"    }"},{"lineNumber":8,"author":{"gitId":"JulietTeoh"},"content":""},{"lineNumber":9,"author":{"gitId":"JulietTeoh"},"content":"    private String indentedString(String input) {"},{"lineNumber":10,"author":{"gitId":"JulietTeoh"},"content":"        return \"     \" + input;"},{"lineNumber":11,"author":{"gitId":"JulietTeoh"},"content":"    }"},{"lineNumber":12,"author":{"gitId":"JulietTeoh"},"content":""},{"lineNumber":13,"author":{"gitId":"JulietTeoh"},"content":"    public String defaultFormatting(String input) {"},{"lineNumber":14,"author":{"gitId":"JulietTeoh"},"content":"        return horizontalLine() + \u0027\\n\u0027 + indentedString(input) + \u0027\\n\u0027 + horizontalLine();"},{"lineNumber":15,"author":{"gitId":"JulietTeoh"},"content":"    }"},{"lineNumber":16,"author":{"gitId":"JulietTeoh"},"content":""},{"lineNumber":17,"author":{"gitId":"JulietTeoh"},"content":"    /**"},{"lineNumber":18,"author":{"gitId":"JulietTeoh"},"content":"     * pad a string with spaces at its front"},{"lineNumber":19,"author":{"gitId":"JulietTeoh"},"content":"     * @param input input string"},{"lineNumber":20,"author":{"gitId":"JulietTeoh"},"content":"     * @param numOfSpacesToPad number of spaces to add in front of a string"},{"lineNumber":21,"author":{"gitId":"JulietTeoh"},"content":"     * @return string padded with spaces"},{"lineNumber":22,"author":{"gitId":"JulietTeoh"},"content":"     */"},{"lineNumber":23,"author":{"gitId":"JulietTeoh"},"content":"    public String padSpaces(String input, int numOfSpacesToPad) {"},{"lineNumber":24,"author":{"gitId":"JulietTeoh"},"content":"        String toreturn \u003d \"\";"},{"lineNumber":25,"author":{"gitId":"JulietTeoh"},"content":""},{"lineNumber":26,"author":{"gitId":"JulietTeoh"},"content":"        for (int i \u003d 0; i \u003c numOfSpacesToPad; i++) {"},{"lineNumber":27,"author":{"gitId":"JulietTeoh"},"content":"            toreturn \u003d toreturn + \u0027 \u0027;"},{"lineNumber":28,"author":{"gitId":"JulietTeoh"},"content":"        }"},{"lineNumber":29,"author":{"gitId":"JulietTeoh"},"content":""},{"lineNumber":30,"author":{"gitId":"JulietTeoh"},"content":"        return toreturn + input;"},{"lineNumber":31,"author":{"gitId":"JulietTeoh"},"content":"    }"},{"lineNumber":32,"author":{"gitId":"JulietTeoh"},"content":"}"}],"authorContributionMap":{"JulietTeoh":32}},{"path":"src/test/java/DeadlineTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"JulietTeoh"},"content":"import duke.exceptions.TaskException;"},{"lineNumber":2,"author":{"gitId":"JulietTeoh"},"content":"import duke.task.Deadline;"},{"lineNumber":3,"author":{"gitId":"JulietTeoh"},"content":"import org.junit.jupiter.api.Test;"},{"lineNumber":4,"author":{"gitId":"JulietTeoh"},"content":""},{"lineNumber":5,"author":{"gitId":"JulietTeoh"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;"},{"lineNumber":6,"author":{"gitId":"JulietTeoh"},"content":""},{"lineNumber":7,"author":{"gitId":"JulietTeoh"},"content":"public class DeadlineTest {"},{"lineNumber":8,"author":{"gitId":"JulietTeoh"},"content":""},{"lineNumber":9,"author":{"gitId":"JulietTeoh"},"content":"    @Test"},{"lineNumber":10,"author":{"gitId":"JulietTeoh"},"content":"    public void checkStrings() {"},{"lineNumber":11,"author":{"gitId":"JulietTeoh"},"content":"        try {"},{"lineNumber":12,"author":{"gitId":"JulietTeoh"},"content":"            String output \u003d new Deadline(\"test\", \"2020-01-03\").toString();"},{"lineNumber":13,"author":{"gitId":"JulietTeoh"},"content":"            String output1 \u003d new Deadline(\"test\", \"2020-01-03\").toSaveFormat();"},{"lineNumber":14,"author":{"gitId":"JulietTeoh"},"content":""},{"lineNumber":15,"author":{"gitId":"JulietTeoh"},"content":"            String output2 \u003d new Deadline(\"test\", \"03-01-2020\").toString();"},{"lineNumber":16,"author":{"gitId":"JulietTeoh"},"content":"            assertEquals(\"[D][ ] test (by: Jan 3 2020)\", output);"},{"lineNumber":17,"author":{"gitId":"JulietTeoh"},"content":"            assertEquals(\"D|0|test|2020-01-03\", output1);"},{"lineNumber":18,"author":{"gitId":"JulietTeoh"},"content":"            assertEquals(output2, output);"},{"lineNumber":19,"author":{"gitId":"JulietTeoh"},"content":"        }catch(TaskException e){"},{"lineNumber":20,"author":{"gitId":"JulietTeoh"},"content":"            // do nothing"},{"lineNumber":21,"author":{"gitId":"JulietTeoh"},"content":"        }"},{"lineNumber":22,"author":{"gitId":"JulietTeoh"},"content":"    }"},{"lineNumber":23,"author":{"gitId":"JulietTeoh"},"content":""},{"lineNumber":24,"author":{"gitId":"JulietTeoh"},"content":"    @Test"},{"lineNumber":25,"author":{"gitId":"JulietTeoh"},"content":"    public void checkDoneStateChange(){"},{"lineNumber":26,"author":{"gitId":"JulietTeoh"},"content":"        try{"},{"lineNumber":27,"author":{"gitId":"JulietTeoh"},"content":"            Deadline deadline \u003d new Deadline(\"test\", \"2020-01-03\");"},{"lineNumber":28,"author":{"gitId":"JulietTeoh"},"content":"            deadline.changeTaskToDone();"},{"lineNumber":29,"author":{"gitId":"JulietTeoh"},"content":""},{"lineNumber":30,"author":{"gitId":"JulietTeoh"},"content":"            String output1 \u003d deadline.toString();"},{"lineNumber":31,"author":{"gitId":"JulietTeoh"},"content":"            String output2 \u003d deadline.toSaveFormat();"},{"lineNumber":32,"author":{"gitId":"JulietTeoh"},"content":""},{"lineNumber":33,"author":{"gitId":"JulietTeoh"},"content":"            assertEquals(output1, \"[D][X] test (by: Jan 3 2020)\");"},{"lineNumber":34,"author":{"gitId":"JulietTeoh"},"content":"            assertEquals(\"D|1|test|2020-01-03\", output2);"},{"lineNumber":35,"author":{"gitId":"JulietTeoh"},"content":""},{"lineNumber":36,"author":{"gitId":"JulietTeoh"},"content":""},{"lineNumber":37,"author":{"gitId":"JulietTeoh"},"content":"        }catch(TaskException e){"},{"lineNumber":38,"author":{"gitId":"JulietTeoh"},"content":""},{"lineNumber":39,"author":{"gitId":"JulietTeoh"},"content":"        }"},{"lineNumber":40,"author":{"gitId":"JulietTeoh"},"content":"    }"},{"lineNumber":41,"author":{"gitId":"JulietTeoh"},"content":""},{"lineNumber":42,"author":{"gitId":"JulietTeoh"},"content":"}"}],"authorContributionMap":{"JulietTeoh":42}},{"path":"src/test/java/DukeTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"JulietTeoh"},"content":"import org.junit.jupiter.api.Test;"},{"lineNumber":2,"author":{"gitId":"JulietTeoh"},"content":""},{"lineNumber":3,"author":{"gitId":"JulietTeoh"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;"},{"lineNumber":4,"author":{"gitId":"JulietTeoh"},"content":""},{"lineNumber":5,"author":{"gitId":"JulietTeoh"},"content":"public class DukeTest {"},{"lineNumber":6,"author":{"gitId":"JulietTeoh"},"content":"    @Test"},{"lineNumber":7,"author":{"gitId":"JulietTeoh"},"content":"    public void dummyTest(){"},{"lineNumber":8,"author":{"gitId":"JulietTeoh"},"content":"        assertEquals(2, 2);"},{"lineNumber":9,"author":{"gitId":"JulietTeoh"},"content":"    }"},{"lineNumber":10,"author":{"gitId":"JulietTeoh"},"content":"}"}],"authorContributionMap":{"JulietTeoh":10}},{"path":"src/test/java/EventTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"JulietTeoh"},"content":"import duke.task.Event;"},{"lineNumber":2,"author":{"gitId":"JulietTeoh"},"content":"import org.junit.jupiter.api.Test;"},{"lineNumber":3,"author":{"gitId":"JulietTeoh"},"content":""},{"lineNumber":4,"author":{"gitId":"JulietTeoh"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;"},{"lineNumber":5,"author":{"gitId":"JulietTeoh"},"content":""},{"lineNumber":6,"author":{"gitId":"JulietTeoh"},"content":"public class EventTest {"},{"lineNumber":7,"author":{"gitId":"JulietTeoh"},"content":"    @Test"},{"lineNumber":8,"author":{"gitId":"JulietTeoh"},"content":"    public void checkStrings() {"},{"lineNumber":9,"author":{"gitId":"JulietTeoh"},"content":"        String output \u003d new Event(\"test\", \"NUS school\").toString();"},{"lineNumber":10,"author":{"gitId":"JulietTeoh"},"content":"        String output1 \u003d new Event(\"test\", \"NUS school\").toSaveFormat();"},{"lineNumber":11,"author":{"gitId":"JulietTeoh"},"content":""},{"lineNumber":12,"author":{"gitId":"JulietTeoh"},"content":"        assertEquals(\"[E][ ] test (at: NUS school)\", output);"},{"lineNumber":13,"author":{"gitId":"JulietTeoh"},"content":"        assertEquals(\"E|0|test|NUS school\", output1);"},{"lineNumber":14,"author":{"gitId":"JulietTeoh"},"content":""},{"lineNumber":15,"author":{"gitId":"JulietTeoh"},"content":"    }"},{"lineNumber":16,"author":{"gitId":"JulietTeoh"},"content":""},{"lineNumber":17,"author":{"gitId":"JulietTeoh"},"content":"    @Test"},{"lineNumber":18,"author":{"gitId":"JulietTeoh"},"content":"    public void checkDoneStateChange(){"},{"lineNumber":19,"author":{"gitId":"JulietTeoh"},"content":"        Event event \u003d new Event(\"testing at\", \"Now\");"},{"lineNumber":20,"author":{"gitId":"JulietTeoh"},"content":"        event.changeTaskToDone();"},{"lineNumber":21,"author":{"gitId":"JulietTeoh"},"content":""},{"lineNumber":22,"author":{"gitId":"JulietTeoh"},"content":"        assertEquals(\"[E][X] testing at (at: Now)\", event.toString());"},{"lineNumber":23,"author":{"gitId":"JulietTeoh"},"content":"        assertEquals(\"E|1|testing at|Now\", event.toSaveFormat());"},{"lineNumber":24,"author":{"gitId":"JulietTeoh"},"content":"    }"},{"lineNumber":25,"author":{"gitId":"JulietTeoh"},"content":"}"}],"authorContributionMap":{"JulietTeoh":25}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"JulietTeoh"},"content":"todo borrow book"},{"lineNumber":2,"author":{"gitId":"JulietTeoh"},"content":"deadline return book /by Sunday"},{"lineNumber":3,"author":{"gitId":"JulietTeoh"},"content":"event project meeting /at Mon 2-4pm"},{"lineNumber":4,"author":{"gitId":"JulietTeoh"},"content":"todo"},{"lineNumber":5,"author":{"gitId":"JulietTeoh"},"content":"boop"},{"lineNumber":6,"author":{"gitId":"JulietTeoh"},"content":"event"},{"lineNumber":7,"author":{"gitId":"JulietTeoh"},"content":"deadline"},{"lineNumber":8,"author":{"gitId":"JulietTeoh"},"content":"event a"},{"lineNumber":9,"author":{"gitId":"JulietTeoh"},"content":"deadline b"},{"lineNumber":10,"author":{"gitId":"JulietTeoh"},"content":"list"},{"lineNumber":11,"author":{"gitId":"JulietTeoh"},"content":"done 3"},{"lineNumber":12,"author":{"gitId":"JulietTeoh"},"content":"done 2"},{"lineNumber":13,"author":{"gitId":"JulietTeoh"},"content":"done 1"},{"lineNumber":14,"author":{"gitId":"JulietTeoh"},"content":"delete 3"},{"lineNumber":15,"author":{"gitId":"JulietTeoh"},"content":"delete 2"},{"lineNumber":16,"author":{"gitId":"JulietTeoh"},"content":"delete 1"},{"lineNumber":17,"author":{"gitId":"JulietTeoh"},"content":"todo check errors"},{"lineNumber":18,"author":{"gitId":"JulietTeoh"},"content":"done"},{"lineNumber":19,"author":{"gitId":"JulietTeoh"},"content":"done a"},{"lineNumber":20,"author":{"gitId":"JulietTeoh"},"content":"delete"},{"lineNumber":21,"author":{"gitId":"JulietTeoh"},"content":"done1"},{"lineNumber":22,"author":{"gitId":"JulietTeoh"},"content":"delete1"},{"lineNumber":23,"author":{"gitId":"JulietTeoh"},"content":"delete 1"},{"lineNumber":24,"author":{"gitId":"JulietTeoh"},"content":"todoa"},{"lineNumber":25,"author":{"gitId":"JulietTeoh"},"content":"eventa /by 9pm"},{"lineNumber":26,"author":{"gitId":"JulietTeoh"},"content":"deadlineb /by 10am"},{"lineNumber":27,"author":{"gitId":"JulietTeoh"},"content":"bye"}],"authorContributionMap":{"JulietTeoh":27}}]
