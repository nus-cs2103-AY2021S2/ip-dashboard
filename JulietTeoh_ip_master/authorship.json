[{"path":"data/dukedata.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"JulietTeoh"},"content":"T|0|lalala"}],"authorContributionMap":{"JulietTeoh":1}},{"path":"src/main/java/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"JulietTeoh"},"content":"package main.java;"},{"lineNumber":2,"author":{"gitId":"JulietTeoh"},"content":"import java.time.LocalDateTime;"},{"lineNumber":3,"author":{"gitId":"JulietTeoh"},"content":"import java.time.LocalDate;"},{"lineNumber":4,"author":{"gitId":"JulietTeoh"},"content":"import java.time.format.DateTimeFormatter;"},{"lineNumber":5,"author":{"gitId":"JulietTeoh"},"content":""},{"lineNumber":6,"author":{"gitId":"JulietTeoh"},"content":"public class Deadline extends Task{"},{"lineNumber":7,"author":{"gitId":"JulietTeoh"},"content":"    final DateTimeFormatter formatone \u003d DateTimeFormatter.ofPattern(\"d-M-uuuu\");"},{"lineNumber":8,"author":{"gitId":"JulietTeoh"},"content":"    final DateTimeFormatter formattwo \u003d DateTimeFormatter.ofPattern(\"uuuu-M-d\");"},{"lineNumber":9,"author":{"gitId":"JulietTeoh"},"content":""},{"lineNumber":10,"author":{"gitId":"JulietTeoh"},"content":""},{"lineNumber":11,"author":{"gitId":"JulietTeoh"},"content":"    protected String deadlineBy;"},{"lineNumber":12,"author":{"gitId":"JulietTeoh"},"content":"    LocalDate dateBy;"},{"lineNumber":13,"author":{"gitId":"JulietTeoh"},"content":"    public Deadline(String description, String by) throws TaskException{"},{"lineNumber":14,"author":{"gitId":"JulietTeoh"},"content":"        super(description);"},{"lineNumber":15,"author":{"gitId":"JulietTeoh"},"content":"        this.deadlineBy \u003d by;"},{"lineNumber":16,"author":{"gitId":"JulietTeoh"},"content":""},{"lineNumber":17,"author":{"gitId":"JulietTeoh"},"content":"        try {"},{"lineNumber":18,"author":{"gitId":"JulietTeoh"},"content":"            String trimmed \u003d deadlineBy.trim();"},{"lineNumber":19,"author":{"gitId":"JulietTeoh"},"content":"            if (trimmed.substring(0,4).contains(\"-\")) {"},{"lineNumber":20,"author":{"gitId":"JulietTeoh"},"content":"                dateBy \u003d LocalDate.parse(deadlineBy.trim(), formatone);"},{"lineNumber":21,"author":{"gitId":"JulietTeoh"},"content":"            }else{"},{"lineNumber":22,"author":{"gitId":"JulietTeoh"},"content":"                dateBy \u003d LocalDate.parse(deadlineBy.trim(), formattwo);"},{"lineNumber":23,"author":{"gitId":"JulietTeoh"},"content":"            }"},{"lineNumber":24,"author":{"gitId":"JulietTeoh"},"content":"        }catch(Exception e){"},{"lineNumber":25,"author":{"gitId":"JulietTeoh"},"content":"            throw new TaskException(\"deadline must be of the format date-month-year, in numbers.\");"},{"lineNumber":26,"author":{"gitId":"JulietTeoh"},"content":"        }"},{"lineNumber":27,"author":{"gitId":"JulietTeoh"},"content":"        /*"},{"lineNumber":28,"author":{"gitId":"JulietTeoh"},"content":"        DateTimeFormatter format \u003d DateTimeFormatter.ofPattern(\"d/M/uuuu HHmm\");"},{"lineNumber":29,"author":{"gitId":"JulietTeoh"},"content":"        dateBy \u003d LocalDateTime.parse(deadlineBy, format);"},{"lineNumber":30,"author":{"gitId":"JulietTeoh"},"content":"        System.out.println(dateBy.format(DateTimeFormatter.ofPattern(\"MMM d uuuu HH:mm\")));"},{"lineNumber":31,"author":{"gitId":"JulietTeoh"},"content":"        */"},{"lineNumber":32,"author":{"gitId":"JulietTeoh"},"content":"    }"},{"lineNumber":33,"author":{"gitId":"JulietTeoh"},"content":""},{"lineNumber":34,"author":{"gitId":"JulietTeoh"},"content":"    public Deadline(String description, String by, int doneInt) throws TaskException{"},{"lineNumber":35,"author":{"gitId":"JulietTeoh"},"content":"        super(description, doneInt);"},{"lineNumber":36,"author":{"gitId":"JulietTeoh"},"content":"        this.deadlineBy \u003d by;"},{"lineNumber":37,"author":{"gitId":"JulietTeoh"},"content":""},{"lineNumber":38,"author":{"gitId":"JulietTeoh"},"content":"        try {"},{"lineNumber":39,"author":{"gitId":"JulietTeoh"},"content":"            String trimmed \u003d deadlineBy.trim();"},{"lineNumber":40,"author":{"gitId":"JulietTeoh"},"content":"            if (trimmed.substring(0,4).contains(\"-\")) {"},{"lineNumber":41,"author":{"gitId":"JulietTeoh"},"content":"                dateBy \u003d LocalDate.parse(deadlineBy.trim(), formatone);"},{"lineNumber":42,"author":{"gitId":"JulietTeoh"},"content":"            }else{"},{"lineNumber":43,"author":{"gitId":"JulietTeoh"},"content":"                dateBy \u003d LocalDate.parse(deadlineBy.trim(), formattwo);"},{"lineNumber":44,"author":{"gitId":"JulietTeoh"},"content":"            }"},{"lineNumber":45,"author":{"gitId":"JulietTeoh"},"content":"        }catch(Exception e){"},{"lineNumber":46,"author":{"gitId":"JulietTeoh"},"content":"            throw new TaskException(\"deadline must be of the format date-month-year, in numbers.\");"},{"lineNumber":47,"author":{"gitId":"JulietTeoh"},"content":"        }"},{"lineNumber":48,"author":{"gitId":"JulietTeoh"},"content":"    }"},{"lineNumber":49,"author":{"gitId":"JulietTeoh"},"content":""},{"lineNumber":50,"author":{"gitId":"JulietTeoh"},"content":"    @Override"},{"lineNumber":51,"author":{"gitId":"JulietTeoh"},"content":"    public String toString() {"},{"lineNumber":52,"author":{"gitId":"JulietTeoh"},"content":"        String formattedDate \u003d dateBy.format(DateTimeFormatter.ofPattern(\"MMM d uuuu\"));"},{"lineNumber":53,"author":{"gitId":"JulietTeoh"},"content":"        return \"[D]\" +super.toString() + \" (by: \" + formattedDate + \")\";"},{"lineNumber":54,"author":{"gitId":"JulietTeoh"},"content":"    }"},{"lineNumber":55,"author":{"gitId":"JulietTeoh"},"content":""},{"lineNumber":56,"author":{"gitId":"JulietTeoh"},"content":"    @Override"},{"lineNumber":57,"author":{"gitId":"JulietTeoh"},"content":"    public String toSaveFormat(){"},{"lineNumber":58,"author":{"gitId":"JulietTeoh"},"content":"        return \"D|\" + super.toSaveFormat() + \"|\" + deadlineBy;"},{"lineNumber":59,"author":{"gitId":"JulietTeoh"},"content":"    }"},{"lineNumber":60,"author":{"gitId":"JulietTeoh"},"content":"}"}],"authorContributionMap":{"JulietTeoh":60}},{"path":"src/main/java/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"JulietTeoh"},"content":"import main.java.DukeException;"},{"lineNumber":2,"author":{"gitId":"JulietTeoh"},"content":"import main.java.ListManager;"},{"lineNumber":3,"author":{"gitId":"JulietTeoh"},"content":""},{"lineNumber":4,"author":{"gitId":"JulietTeoh"},"content":"import java.io.File;"},{"lineNumber":5,"author":{"gitId":"JulietTeoh"},"content":"import java.io.FileNotFoundException;"},{"lineNumber":6,"author":{"gitId":"JulietTeoh"},"content":"import java.io.IOException;"},{"lineNumber":7,"author":{"gitId":"JulietTeoh"},"content":"import java.sql.SQLOutput;"},{"lineNumber":8,"author":{"gitId":"JulietTeoh"},"content":"import java.util.Scanner;"},{"lineNumber":9,"author":{"gitId":"JulietTeoh"},"content":"import java.io.FileWriter;"},{"lineNumber":10,"author":{"gitId":"JulietTeoh"},"content":""},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class Duke {"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public static void main(String[] args) {"},{"lineNumber":13,"author":{"gitId":"JulietTeoh"},"content":"        final String FILENAME \u003d \"dukedata.txt\";"},{"lineNumber":14,"author":{"gitId":"JulietTeoh"},"content":"        final String FOLDERNAME \u003d \"data\";"},{"lineNumber":15,"author":{"gitId":"JulietTeoh"},"content":"        final String PATH \u003d FOLDERNAME + \"/\" + FILENAME;"},{"lineNumber":16,"author":{"gitId":"JulietTeoh"},"content":""},{"lineNumber":17,"author":{"gitId":"-"},"content":"        String logo \u003d \" ____        _        \\n\""},{"lineNumber":18,"author":{"gitId":"-"},"content":"                + \"|  _ \\\\ _   _| | _____ \\n\""},{"lineNumber":19,"author":{"gitId":"-"},"content":"                + \"| | | | | | | |/ / _ \\\\\\n\""},{"lineNumber":20,"author":{"gitId":"-"},"content":"                + \"| |_| | |_| |   \u003c  __/\\n\""},{"lineNumber":21,"author":{"gitId":"-"},"content":"                + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\";"},{"lineNumber":22,"author":{"gitId":"JulietTeoh"},"content":"        //System.out.println(\"Hello from\\n\" + logo);"},{"lineNumber":23,"author":{"gitId":"JulietTeoh"},"content":""},{"lineNumber":24,"author":{"gitId":"JulietTeoh"},"content":"        try{"},{"lineNumber":25,"author":{"gitId":"JulietTeoh"},"content":"            File folder \u003d new File(FOLDERNAME);"},{"lineNumber":26,"author":{"gitId":"JulietTeoh"},"content":"            if (folder.mkdir()){"},{"lineNumber":27,"author":{"gitId":"JulietTeoh"},"content":"                System.out.println(\"Folder created: \" + folder.getName());"},{"lineNumber":28,"author":{"gitId":"JulietTeoh"},"content":"            }else{"},{"lineNumber":29,"author":{"gitId":"JulietTeoh"},"content":"                // System.out.println(\"Folder already exists.\");"},{"lineNumber":30,"author":{"gitId":"JulietTeoh"},"content":"            }"},{"lineNumber":31,"author":{"gitId":"JulietTeoh"},"content":"            File dataFile \u003d new File(PATH);"},{"lineNumber":32,"author":{"gitId":"JulietTeoh"},"content":"            if (dataFile.createNewFile()) {"},{"lineNumber":33,"author":{"gitId":"JulietTeoh"},"content":"                System.out.println(\"File created: \" + dataFile.getName());"},{"lineNumber":34,"author":{"gitId":"JulietTeoh"},"content":"            } else {"},{"lineNumber":35,"author":{"gitId":"JulietTeoh"},"content":"                // System.out.println(\"File already exists.\");"},{"lineNumber":36,"author":{"gitId":"JulietTeoh"},"content":"            }"},{"lineNumber":37,"author":{"gitId":"JulietTeoh"},"content":"        } catch (IOException e) {"},{"lineNumber":38,"author":{"gitId":"JulietTeoh"},"content":"            System.out.println(\"An error occurred.\");"},{"lineNumber":39,"author":{"gitId":"JulietTeoh"},"content":"            e.printStackTrace();"},{"lineNumber":40,"author":{"gitId":"JulietTeoh"},"content":"        }"},{"lineNumber":41,"author":{"gitId":"JulietTeoh"},"content":""},{"lineNumber":42,"author":{"gitId":"JulietTeoh"},"content":"        Scanner scanner \u003d new Scanner(System.in);"},{"lineNumber":43,"author":{"gitId":"JulietTeoh"},"content":"        ListManager listManager \u003d new ListManager(PATH);"},{"lineNumber":44,"author":{"gitId":"JulietTeoh"},"content":"        try {"},{"lineNumber":45,"author":{"gitId":"JulietTeoh"},"content":"            listManager.restoreDataFromDataFile();"},{"lineNumber":46,"author":{"gitId":"JulietTeoh"},"content":"        }catch(DukeException e){"},{"lineNumber":47,"author":{"gitId":"JulietTeoh"},"content":"            System.out.println(e.getMessage());"},{"lineNumber":48,"author":{"gitId":"JulietTeoh"},"content":"        }"},{"lineNumber":49,"author":{"gitId":"JulietTeoh"},"content":""},{"lineNumber":50,"author":{"gitId":"JulietTeoh"},"content":"        System.out.println(listManager.welcomeLine());"},{"lineNumber":51,"author":{"gitId":"JulietTeoh"},"content":"        String userinput \u003d scanner.nextLine();"},{"lineNumber":52,"author":{"gitId":"JulietTeoh"},"content":""},{"lineNumber":53,"author":{"gitId":"JulietTeoh"},"content":"        while ( !userinput.equals(\"bye\")){"},{"lineNumber":54,"author":{"gitId":"JulietTeoh"},"content":"            try {"},{"lineNumber":55,"author":{"gitId":"JulietTeoh"},"content":"                String outputString \u003d listManager.handleAllUserInput(userinput);"},{"lineNumber":56,"author":{"gitId":"JulietTeoh"},"content":"                System.out.println(outputString);"},{"lineNumber":57,"author":{"gitId":"JulietTeoh"},"content":"            }catch(DukeException e){"},{"lineNumber":58,"author":{"gitId":"JulietTeoh"},"content":"                System.out.println(e.getMessage());"},{"lineNumber":59,"author":{"gitId":"JulietTeoh"},"content":"            }"},{"lineNumber":60,"author":{"gitId":"JulietTeoh"},"content":""},{"lineNumber":61,"author":{"gitId":"JulietTeoh"},"content":"            userinput \u003d scanner.nextLine();"},{"lineNumber":62,"author":{"gitId":"JulietTeoh"},"content":"        }"},{"lineNumber":63,"author":{"gitId":"JulietTeoh"},"content":"        System.out.println(listManager.goodbyeLine());"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":65,"author":{"gitId":"-"},"content":"}"}],"authorContributionMap":{"-":9,"JulietTeoh":56}},{"path":"src/main/java/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"JulietTeoh"},"content":"package main.java;"},{"lineNumber":2,"author":{"gitId":"JulietTeoh"},"content":""},{"lineNumber":3,"author":{"gitId":"JulietTeoh"},"content":"public class DukeException extends Exception {"},{"lineNumber":4,"author":{"gitId":"JulietTeoh"},"content":"    public DukeException(String message){"},{"lineNumber":5,"author":{"gitId":"JulietTeoh"},"content":"        super(message);"},{"lineNumber":6,"author":{"gitId":"JulietTeoh"},"content":"    }"},{"lineNumber":7,"author":{"gitId":"JulietTeoh"},"content":"}"}],"authorContributionMap":{"JulietTeoh":7}},{"path":"src/main/java/EchoManager.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"JulietTeoh"},"content":"package main.java;"},{"lineNumber":2,"author":{"gitId":"JulietTeoh"},"content":""},{"lineNumber":3,"author":{"gitId":"JulietTeoh"},"content":"public class EchoManager extends Manager {"},{"lineNumber":4,"author":{"gitId":"JulietTeoh"},"content":""},{"lineNumber":5,"author":{"gitId":"JulietTeoh"},"content":"    public EchoManager(){"},{"lineNumber":6,"author":{"gitId":"JulietTeoh"},"content":""},{"lineNumber":7,"author":{"gitId":"JulietTeoh"},"content":"    }"},{"lineNumber":8,"author":{"gitId":"JulietTeoh"},"content":"    public String DukeResponse(String input){"},{"lineNumber":9,"author":{"gitId":"JulietTeoh"},"content":"        return horizontalLine() + \u0027\\n\u0027 + indentedString(input) + \u0027\\n\u0027 + horizontalLine();"},{"lineNumber":10,"author":{"gitId":"JulietTeoh"},"content":"    }"},{"lineNumber":11,"author":{"gitId":"JulietTeoh"},"content":""},{"lineNumber":12,"author":{"gitId":"JulietTeoh"},"content":"}"}],"authorContributionMap":{"JulietTeoh":12}},{"path":"src/main/java/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"JulietTeoh"},"content":"package main.java;"},{"lineNumber":2,"author":{"gitId":"JulietTeoh"},"content":""},{"lineNumber":3,"author":{"gitId":"JulietTeoh"},"content":"public class Event extends Task {"},{"lineNumber":4,"author":{"gitId":"JulietTeoh"},"content":"    protected String eventAt;"},{"lineNumber":5,"author":{"gitId":"JulietTeoh"},"content":"    public Event(String description, String eventAt) {"},{"lineNumber":6,"author":{"gitId":"JulietTeoh"},"content":"        super(description);"},{"lineNumber":7,"author":{"gitId":"JulietTeoh"},"content":"        this.eventAt \u003d eventAt;"},{"lineNumber":8,"author":{"gitId":"JulietTeoh"},"content":"    }"},{"lineNumber":9,"author":{"gitId":"JulietTeoh"},"content":""},{"lineNumber":10,"author":{"gitId":"JulietTeoh"},"content":"    public Event(String description, String eventAt, int doneInt){"},{"lineNumber":11,"author":{"gitId":"JulietTeoh"},"content":"        super(description, doneInt);"},{"lineNumber":12,"author":{"gitId":"JulietTeoh"},"content":"        this.eventAt \u003d eventAt;"},{"lineNumber":13,"author":{"gitId":"JulietTeoh"},"content":"    }"},{"lineNumber":14,"author":{"gitId":"JulietTeoh"},"content":""},{"lineNumber":15,"author":{"gitId":"JulietTeoh"},"content":"    @Override"},{"lineNumber":16,"author":{"gitId":"JulietTeoh"},"content":"    public String toString() {"},{"lineNumber":17,"author":{"gitId":"JulietTeoh"},"content":"        return \"[E]\" + super.toString() + \" (at: \" + eventAt + \")\";"},{"lineNumber":18,"author":{"gitId":"JulietTeoh"},"content":"    }"},{"lineNumber":19,"author":{"gitId":"JulietTeoh"},"content":""},{"lineNumber":20,"author":{"gitId":"JulietTeoh"},"content":"    @Override"},{"lineNumber":21,"author":{"gitId":"JulietTeoh"},"content":"    public String toSaveFormat(){"},{"lineNumber":22,"author":{"gitId":"JulietTeoh"},"content":"        return \"E|\" + super.toSaveFormat() + \"|\" + eventAt;"},{"lineNumber":23,"author":{"gitId":"JulietTeoh"},"content":"    }"},{"lineNumber":24,"author":{"gitId":"JulietTeoh"},"content":"}"}],"authorContributionMap":{"JulietTeoh":24}},{"path":"src/main/java/ListManager.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"JulietTeoh"},"content":"package main.java;"},{"lineNumber":2,"author":{"gitId":"JulietTeoh"},"content":""},{"lineNumber":3,"author":{"gitId":"JulietTeoh"},"content":"import java.io.*;"},{"lineNumber":4,"author":{"gitId":"JulietTeoh"},"content":"import java.util.ArrayList;"},{"lineNumber":5,"author":{"gitId":"JulietTeoh"},"content":"import java.util.Arrays;"},{"lineNumber":6,"author":{"gitId":"JulietTeoh"},"content":"import java.util.Scanner;"},{"lineNumber":7,"author":{"gitId":"JulietTeoh"},"content":""},{"lineNumber":8,"author":{"gitId":"JulietTeoh"},"content":"public class ListManager extends Manager {"},{"lineNumber":9,"author":{"gitId":"JulietTeoh"},"content":"    protected ArrayList\u003cTask\u003e TaskArray;"},{"lineNumber":10,"author":{"gitId":"JulietTeoh"},"content":"    protected int numberOfTasks;"},{"lineNumber":11,"author":{"gitId":"JulietTeoh"},"content":"    protected String pathOfDataFile;"},{"lineNumber":12,"author":{"gitId":"JulietTeoh"},"content":""},{"lineNumber":13,"author":{"gitId":"JulietTeoh"},"content":"    public ListManager(String pathOfDataFile){"},{"lineNumber":14,"author":{"gitId":"JulietTeoh"},"content":"        this.TaskArray \u003d new ArrayList\u003cTask\u003e();"},{"lineNumber":15,"author":{"gitId":"JulietTeoh"},"content":"        this.numberOfTasks \u003d 0;"},{"lineNumber":16,"author":{"gitId":"JulietTeoh"},"content":"        this.pathOfDataFile \u003d pathOfDataFile;"},{"lineNumber":17,"author":{"gitId":"JulietTeoh"},"content":"    }"},{"lineNumber":18,"author":{"gitId":"JulietTeoh"},"content":""},{"lineNumber":19,"author":{"gitId":"JulietTeoh"},"content":"    public String welcomeLine(){"},{"lineNumber":20,"author":{"gitId":"JulietTeoh"},"content":"        return defaultFormatting(\"Hello! I\u0027m Duke\\n\" + padSpaces(\"What can I do for you?\", 5));"},{"lineNumber":21,"author":{"gitId":"JulietTeoh"},"content":"    }"},{"lineNumber":22,"author":{"gitId":"JulietTeoh"},"content":""},{"lineNumber":23,"author":{"gitId":"JulietTeoh"},"content":"    public String goodbyeLine(){"},{"lineNumber":24,"author":{"gitId":"JulietTeoh"},"content":"        return defaultFormatting(\"Bye. Hope to see you again soon!\");"},{"lineNumber":25,"author":{"gitId":"JulietTeoh"},"content":"    }"},{"lineNumber":26,"author":{"gitId":"JulietTeoh"},"content":""},{"lineNumber":27,"author":{"gitId":"JulietTeoh"},"content":"    public String getNumberOfTasks(){"},{"lineNumber":28,"author":{"gitId":"JulietTeoh"},"content":"        return padSpaces(\"Now you have \" + String.valueOf(numberOfTasks)+ \" tasks in the list.\", 5);"},{"lineNumber":29,"author":{"gitId":"JulietTeoh"},"content":"    }"},{"lineNumber":30,"author":{"gitId":"JulietTeoh"},"content":""},{"lineNumber":31,"author":{"gitId":"JulietTeoh"},"content":"    public String addTask(String userInput) throws DukeException{"},{"lineNumber":32,"author":{"gitId":"JulietTeoh"},"content":"        Task newTask;"},{"lineNumber":33,"author":{"gitId":"JulietTeoh"},"content":""},{"lineNumber":34,"author":{"gitId":"JulietTeoh"},"content":"        if(checkStringStartingEquals(userInput, \"todo\")){"},{"lineNumber":35,"author":{"gitId":"JulietTeoh"},"content":""},{"lineNumber":36,"author":{"gitId":"JulietTeoh"},"content":"            int length \u003d \"todo\".length();"},{"lineNumber":37,"author":{"gitId":"JulietTeoh"},"content":"            if (checkStringEquals(userInput, \"todo\")){"},{"lineNumber":38,"author":{"gitId":"JulietTeoh"},"content":"                throw new DukeException(defaultFormatting(\"Error! The description of a todo cannot be empty!\"));"},{"lineNumber":39,"author":{"gitId":"JulietTeoh"},"content":"            }else if(!checkStringEquals(userInput.substring(length,length+1), \" \")){"},{"lineNumber":40,"author":{"gitId":"JulietTeoh"},"content":"                throw new DukeException(defaultFormatting(\"Error! Please include a space after todo. \" +"},{"lineNumber":41,"author":{"gitId":"JulietTeoh"},"content":"                        \"[eg. todo sleep]\"));"},{"lineNumber":42,"author":{"gitId":"JulietTeoh"},"content":"            }else{"},{"lineNumber":43,"author":{"gitId":"JulietTeoh"},"content":"                newTask \u003d new ToDo(userInput.substring(length + 1));"},{"lineNumber":44,"author":{"gitId":"JulietTeoh"},"content":"            }"},{"lineNumber":45,"author":{"gitId":"JulietTeoh"},"content":""},{"lineNumber":46,"author":{"gitId":"JulietTeoh"},"content":"        }else if(checkStringStartingEquals(userInput, \"event\")) {"},{"lineNumber":47,"author":{"gitId":"JulietTeoh"},"content":""},{"lineNumber":48,"author":{"gitId":"JulietTeoh"},"content":"            int length \u003d \"event\".length();"},{"lineNumber":49,"author":{"gitId":"JulietTeoh"},"content":"            if (checkStringEquals(userInput, \"event\")){"},{"lineNumber":50,"author":{"gitId":"JulietTeoh"},"content":"                throw new DukeException(defaultFormatting(\"Error! The description of a event cannot be empty!\"));"},{"lineNumber":51,"author":{"gitId":"JulietTeoh"},"content":"            }else if(!checkStringEquals(userInput.substring(length,length+1), \" \")){"},{"lineNumber":52,"author":{"gitId":"JulietTeoh"},"content":"                throw new DukeException(defaultFormatting(\"Error! Please include a space after event. \" +"},{"lineNumber":53,"author":{"gitId":"JulietTeoh"},"content":"                        \"[eg. event read /at 9pm]\"));"},{"lineNumber":54,"author":{"gitId":"JulietTeoh"},"content":"            }else {"},{"lineNumber":55,"author":{"gitId":"JulietTeoh"},"content":"                if (userInput.contains(\" /at \")) {"},{"lineNumber":56,"author":{"gitId":"JulietTeoh"},"content":"                    String[] arr \u003d userInput.substring(length + 1).split(\" /at \");"},{"lineNumber":57,"author":{"gitId":"JulietTeoh"},"content":"                    String eventDescription \u003d arr[0];"},{"lineNumber":58,"author":{"gitId":"JulietTeoh"},"content":"                    String descriptionAt \u003d arr[1];"},{"lineNumber":59,"author":{"gitId":"JulietTeoh"},"content":"                    newTask \u003d new Event(eventDescription, descriptionAt);"},{"lineNumber":60,"author":{"gitId":"JulietTeoh"},"content":"                }else{"},{"lineNumber":61,"author":{"gitId":"JulietTeoh"},"content":"                    throw new DukeException(defaultFormatting(\"Error! Please provide where and when the\" +"},{"lineNumber":62,"author":{"gitId":"JulietTeoh"},"content":"                            \" event will take place after /at. [eg event read /at 9pm]\"));"},{"lineNumber":63,"author":{"gitId":"JulietTeoh"},"content":"                }"},{"lineNumber":64,"author":{"gitId":"JulietTeoh"},"content":"            }"},{"lineNumber":65,"author":{"gitId":"JulietTeoh"},"content":"        }else if(checkStringStartingEquals(userInput, \"deadline\")){"},{"lineNumber":66,"author":{"gitId":"JulietTeoh"},"content":"            int length \u003d \"deadline\".length();"},{"lineNumber":67,"author":{"gitId":"JulietTeoh"},"content":"            if (checkStringEquals(userInput, \"deadline\")){"},{"lineNumber":68,"author":{"gitId":"JulietTeoh"},"content":"                throw new DukeException(defaultFormatting(\"Error! The description of a deadline cannot be empty!\"));"},{"lineNumber":69,"author":{"gitId":"JulietTeoh"},"content":"            }else if(!checkStringEquals(userInput.substring(length,length+1), \" \")){"},{"lineNumber":70,"author":{"gitId":"JulietTeoh"},"content":"                throw new DukeException(defaultFormatting(\"Error! Please include a space after deadline. \" +"},{"lineNumber":71,"author":{"gitId":"JulietTeoh"},"content":"                        \"[eg. deadline submit work /at 10am]\"));"},{"lineNumber":72,"author":{"gitId":"JulietTeoh"},"content":"            }else {"},{"lineNumber":73,"author":{"gitId":"JulietTeoh"},"content":"                if (userInput.contains(\" /by \")) {"},{"lineNumber":74,"author":{"gitId":"JulietTeoh"},"content":"                    String[] arr \u003d userInput.substring(length+1).split(\" /by \");"},{"lineNumber":75,"author":{"gitId":"JulietTeoh"},"content":"                    String deadlineDescription \u003d arr[0];"},{"lineNumber":76,"author":{"gitId":"JulietTeoh"},"content":"                    String descriptionBy \u003d arr[1];"},{"lineNumber":77,"author":{"gitId":"JulietTeoh"},"content":""},{"lineNumber":78,"author":{"gitId":"JulietTeoh"},"content":"                    try {"},{"lineNumber":79,"author":{"gitId":"JulietTeoh"},"content":"                        newTask \u003d new Deadline(deadlineDescription, descriptionBy);"},{"lineNumber":80,"author":{"gitId":"JulietTeoh"},"content":"                    }catch (TaskException e){"},{"lineNumber":81,"author":{"gitId":"JulietTeoh"},"content":"                        throw new DukeException(defaultFormatting(e.getMessage()));"},{"lineNumber":82,"author":{"gitId":"JulietTeoh"},"content":"                    }"},{"lineNumber":83,"author":{"gitId":"JulietTeoh"},"content":"                }else{"},{"lineNumber":84,"author":{"gitId":"JulietTeoh"},"content":"                    throw new DukeException(defaultFormatting(\"Error! Please provide when the deadline \" +"},{"lineNumber":85,"author":{"gitId":"JulietTeoh"},"content":"                            \"will be due after /by. [eg. deadline submit work /at 10am]\"));"},{"lineNumber":86,"author":{"gitId":"JulietTeoh"},"content":"                }"},{"lineNumber":87,"author":{"gitId":"JulietTeoh"},"content":"            }"},{"lineNumber":88,"author":{"gitId":"JulietTeoh"},"content":"        }else{"},{"lineNumber":89,"author":{"gitId":"JulietTeoh"},"content":"            throw new DukeException(defaultFormatting(\"I\u0027m sorry, but I don\u0027t know what that means\"));"},{"lineNumber":90,"author":{"gitId":"JulietTeoh"},"content":"        }"},{"lineNumber":91,"author":{"gitId":"JulietTeoh"},"content":""},{"lineNumber":92,"author":{"gitId":"JulietTeoh"},"content":"        TaskArray.add(newTask);"},{"lineNumber":93,"author":{"gitId":"JulietTeoh"},"content":"        numberOfTasks \u003d numberOfTasks + 1;"},{"lineNumber":94,"author":{"gitId":"JulietTeoh"},"content":"        String temp \u003d \"Got it. I\u0027ve added this task:\\n\" + padSpaces(newTask.toString(), 7) +"},{"lineNumber":95,"author":{"gitId":"JulietTeoh"},"content":"                \"\\n\" + getNumberOfTasks();"},{"lineNumber":96,"author":{"gitId":"JulietTeoh"},"content":"        return defaultFormatting(temp);"},{"lineNumber":97,"author":{"gitId":"JulietTeoh"},"content":"    }"},{"lineNumber":98,"author":{"gitId":"JulietTeoh"},"content":""},{"lineNumber":99,"author":{"gitId":"JulietTeoh"},"content":"    public String checkTaskAsDone(int number) throws DukeException{"},{"lineNumber":100,"author":{"gitId":"JulietTeoh"},"content":"        if (number \u003e\u003d 1 \u0026\u0026 number\u003c\u003d TaskArray.size()) {"},{"lineNumber":101,"author":{"gitId":"JulietTeoh"},"content":"            Task currentTask \u003d TaskArray.get(number - 1);"},{"lineNumber":102,"author":{"gitId":"JulietTeoh"},"content":"            currentTask.changeTaskToDone();"},{"lineNumber":103,"author":{"gitId":"JulietTeoh"},"content":"            return defaultFormatting(\"Nice! I\u0027ve marked this task as done:\\n\" +"},{"lineNumber":104,"author":{"gitId":"JulietTeoh"},"content":"                    padSpaces(currentTask.toString(),7));"},{"lineNumber":105,"author":{"gitId":"JulietTeoh"},"content":"        }else{"},{"lineNumber":106,"author":{"gitId":"JulietTeoh"},"content":"            throw new DukeException(defaultFormatting(\"Error! Please make sure the \" +"},{"lineNumber":107,"author":{"gitId":"JulietTeoh"},"content":"                    \"number given has a corresponding task!\"));"},{"lineNumber":108,"author":{"gitId":"JulietTeoh"},"content":"        }"},{"lineNumber":109,"author":{"gitId":"JulietTeoh"},"content":"    }"},{"lineNumber":110,"author":{"gitId":"JulietTeoh"},"content":""},{"lineNumber":111,"author":{"gitId":"JulietTeoh"},"content":"    public String returnTaskList(){"},{"lineNumber":112,"author":{"gitId":"JulietTeoh"},"content":"        StringBuilder sb \u003d new StringBuilder();"},{"lineNumber":113,"author":{"gitId":"JulietTeoh"},"content":"        sb.append(horizontalLine()).append(\u0027\\n\u0027);"},{"lineNumber":114,"author":{"gitId":"JulietTeoh"},"content":""},{"lineNumber":115,"author":{"gitId":"JulietTeoh"},"content":"        sb.append(indentedString(\"Here are the tasks in your list:\\n\"));"},{"lineNumber":116,"author":{"gitId":"JulietTeoh"},"content":"        for (int i \u003d 0; i \u003c TaskArray.size(); i++) {"},{"lineNumber":117,"author":{"gitId":"JulietTeoh"},"content":""},{"lineNumber":118,"author":{"gitId":"JulietTeoh"},"content":"            Task currentTask \u003d TaskArray.get(i);"},{"lineNumber":119,"author":{"gitId":"JulietTeoh"},"content":""},{"lineNumber":120,"author":{"gitId":"JulietTeoh"},"content":"            String numberIndicator \u003d  (i+1) + \".\";"},{"lineNumber":121,"author":{"gitId":"JulietTeoh"},"content":"            String temp \u003d numberIndicator + currentTask.toString() + \u0027\\n\u0027;"},{"lineNumber":122,"author":{"gitId":"JulietTeoh"},"content":""},{"lineNumber":123,"author":{"gitId":"JulietTeoh"},"content":"            sb.append(indentedString( temp ));"},{"lineNumber":124,"author":{"gitId":"JulietTeoh"},"content":"        }"},{"lineNumber":125,"author":{"gitId":"JulietTeoh"},"content":"        sb.append(horizontalLine());"},{"lineNumber":126,"author":{"gitId":"JulietTeoh"},"content":""},{"lineNumber":127,"author":{"gitId":"JulietTeoh"},"content":"        return sb.toString();"},{"lineNumber":128,"author":{"gitId":"JulietTeoh"},"content":"    }"},{"lineNumber":129,"author":{"gitId":"JulietTeoh"},"content":""},{"lineNumber":130,"author":{"gitId":"JulietTeoh"},"content":"    public String handleAllUserInput(String userInput) throws DukeException{"},{"lineNumber":131,"author":{"gitId":"JulietTeoh"},"content":"        if (checkStringEquals(userInput,\"list\")){"},{"lineNumber":132,"author":{"gitId":"JulietTeoh"},"content":"            return this.returnTaskList();"},{"lineNumber":133,"author":{"gitId":"JulietTeoh"},"content":"        }else{"},{"lineNumber":134,"author":{"gitId":"JulietTeoh"},"content":"            try {"},{"lineNumber":135,"author":{"gitId":"JulietTeoh"},"content":"                String outputString \u003d this.handleTaskRelatedUserInput(userInput);"},{"lineNumber":136,"author":{"gitId":"JulietTeoh"},"content":"                return outputString;"},{"lineNumber":137,"author":{"gitId":"JulietTeoh"},"content":"            }catch(DukeException e){"},{"lineNumber":138,"author":{"gitId":"JulietTeoh"},"content":"                throw e;"},{"lineNumber":139,"author":{"gitId":"JulietTeoh"},"content":"            }"},{"lineNumber":140,"author":{"gitId":"JulietTeoh"},"content":"        }"},{"lineNumber":141,"author":{"gitId":"JulietTeoh"},"content":"    }"},{"lineNumber":142,"author":{"gitId":"JulietTeoh"},"content":""},{"lineNumber":143,"author":{"gitId":"JulietTeoh"},"content":"    public String handleTaskRelatedUserInput(String userInput) throws DukeException{"},{"lineNumber":144,"author":{"gitId":"JulietTeoh"},"content":"        String outputString;"},{"lineNumber":145,"author":{"gitId":"JulietTeoh"},"content":"        if(checkStringStartingEquals(userInput, \"done\")){"},{"lineNumber":146,"author":{"gitId":"JulietTeoh"},"content":"            // done block"},{"lineNumber":147,"author":{"gitId":"JulietTeoh"},"content":"            int length \u003d \"done\".length();"},{"lineNumber":148,"author":{"gitId":"JulietTeoh"},"content":"            if (checkStringEquals(userInput, \"done\")){"},{"lineNumber":149,"author":{"gitId":"JulietTeoh"},"content":"                throw new DukeException(defaultFormatting(\"Error! Please indicate the task \" +"},{"lineNumber":150,"author":{"gitId":"JulietTeoh"},"content":"                        \"which is done by its number on the list\"));"},{"lineNumber":151,"author":{"gitId":"JulietTeoh"},"content":"            }else if(!checkStringEquals(userInput.substring(length,length+1), \" \")){"},{"lineNumber":152,"author":{"gitId":"JulietTeoh"},"content":"                throw new DukeException(defaultFormatting(\"Error! Please include a space after done. \" +"},{"lineNumber":153,"author":{"gitId":"JulietTeoh"},"content":"                        \"[eg. done 1]\"));"},{"lineNumber":154,"author":{"gitId":"JulietTeoh"},"content":"            }else {"},{"lineNumber":155,"author":{"gitId":"JulietTeoh"},"content":"                try {"},{"lineNumber":156,"author":{"gitId":"JulietTeoh"},"content":"                    int taskInt \u003d Integer.parseInt(userInput.split(\" \")[1]);"},{"lineNumber":157,"author":{"gitId":"JulietTeoh"},"content":"                    outputString \u003d this.checkTaskAsDone(taskInt);"},{"lineNumber":158,"author":{"gitId":"JulietTeoh"},"content":"                } catch (NumberFormatException e) {"},{"lineNumber":159,"author":{"gitId":"JulietTeoh"},"content":"                    throw new DukeException(defaultFormatting(\"Error! You must give a number \" +"},{"lineNumber":160,"author":{"gitId":"JulietTeoh"},"content":"                            \"corresponding to a task on the list to check as done\"));"},{"lineNumber":161,"author":{"gitId":"JulietTeoh"},"content":"                } catch (DukeException dukeException) {"},{"lineNumber":162,"author":{"gitId":"JulietTeoh"},"content":"                    throw dukeException;"},{"lineNumber":163,"author":{"gitId":"JulietTeoh"},"content":"                }"},{"lineNumber":164,"author":{"gitId":"JulietTeoh"},"content":"            }"},{"lineNumber":165,"author":{"gitId":"JulietTeoh"},"content":"        }else if(checkStringStartingEquals(userInput, \"delete\")){"},{"lineNumber":166,"author":{"gitId":"JulietTeoh"},"content":"            // delete block"},{"lineNumber":167,"author":{"gitId":"JulietTeoh"},"content":"            int length \u003d \"delete\".length();"},{"lineNumber":168,"author":{"gitId":"JulietTeoh"},"content":"            if (checkStringEquals(userInput, \"delete\")){"},{"lineNumber":169,"author":{"gitId":"JulietTeoh"},"content":"                throw new DukeException(defaultFormatting(\"Error! Please indicate the task \" +"},{"lineNumber":170,"author":{"gitId":"JulietTeoh"},"content":"                        \"which want to delete by its number on the list\"));"},{"lineNumber":171,"author":{"gitId":"JulietTeoh"},"content":"            }else if(!checkStringEquals(userInput.substring(length,length+1), \" \")){"},{"lineNumber":172,"author":{"gitId":"JulietTeoh"},"content":"                throw new DukeException(defaultFormatting(\"Error! Please include a space after delete. \" +"},{"lineNumber":173,"author":{"gitId":"JulietTeoh"},"content":"                        \"[eg. delete 1]\"));"},{"lineNumber":174,"author":{"gitId":"JulietTeoh"},"content":"            }else {"},{"lineNumber":175,"author":{"gitId":"JulietTeoh"},"content":"                try {"},{"lineNumber":176,"author":{"gitId":"JulietTeoh"},"content":"                    int taskInt \u003d Integer.parseInt(userInput.split(\" \")[1]);"},{"lineNumber":177,"author":{"gitId":"JulietTeoh"},"content":"                    outputString \u003d this.deleteTask(taskInt);"},{"lineNumber":178,"author":{"gitId":"JulietTeoh"},"content":"                } catch (NumberFormatException e) {"},{"lineNumber":179,"author":{"gitId":"JulietTeoh"},"content":"                    throw new DukeException(defaultFormatting(\"Error! You must give a number \" +"},{"lineNumber":180,"author":{"gitId":"JulietTeoh"},"content":"                            \"corresponding to a task on the list to delete\"));"},{"lineNumber":181,"author":{"gitId":"JulietTeoh"},"content":"                } catch (DukeException dukeException) {"},{"lineNumber":182,"author":{"gitId":"JulietTeoh"},"content":"                    throw dukeException;"},{"lineNumber":183,"author":{"gitId":"JulietTeoh"},"content":"                }"},{"lineNumber":184,"author":{"gitId":"JulietTeoh"},"content":"            }"},{"lineNumber":185,"author":{"gitId":"JulietTeoh"},"content":"        }else{"},{"lineNumber":186,"author":{"gitId":"JulietTeoh"},"content":"            // event deadline to-do block"},{"lineNumber":187,"author":{"gitId":"JulietTeoh"},"content":"            try{"},{"lineNumber":188,"author":{"gitId":"JulietTeoh"},"content":"                outputString \u003d this.addTask(userInput);"},{"lineNumber":189,"author":{"gitId":"JulietTeoh"},"content":"            }catch (DukeException dukeException){"},{"lineNumber":190,"author":{"gitId":"JulietTeoh"},"content":"                throw dukeException;"},{"lineNumber":191,"author":{"gitId":"JulietTeoh"},"content":"            }"},{"lineNumber":192,"author":{"gitId":"JulietTeoh"},"content":"        }"},{"lineNumber":193,"author":{"gitId":"JulietTeoh"},"content":""},{"lineNumber":194,"author":{"gitId":"JulietTeoh"},"content":"        saveToFile();"},{"lineNumber":195,"author":{"gitId":"JulietTeoh"},"content":"        return outputString;"},{"lineNumber":196,"author":{"gitId":"JulietTeoh"},"content":"    }"},{"lineNumber":197,"author":{"gitId":"JulietTeoh"},"content":""},{"lineNumber":198,"author":{"gitId":"JulietTeoh"},"content":"    public String deleteTask(int taskInt) throws DukeException{"},{"lineNumber":199,"author":{"gitId":"JulietTeoh"},"content":"        if (taskInt \u003e\u003d 1 \u0026\u0026 taskInt \u003c\u003d TaskArray.size()){"},{"lineNumber":200,"author":{"gitId":"JulietTeoh"},"content":""},{"lineNumber":201,"author":{"gitId":"JulietTeoh"},"content":"            Task todelete \u003d TaskArray.get(taskInt - 1);"},{"lineNumber":202,"author":{"gitId":"JulietTeoh"},"content":"            TaskArray.remove(taskInt - 1);"},{"lineNumber":203,"author":{"gitId":"JulietTeoh"},"content":"            numberOfTasks \u003d numberOfTasks - 1;"},{"lineNumber":204,"author":{"gitId":"JulietTeoh"},"content":""},{"lineNumber":205,"author":{"gitId":"JulietTeoh"},"content":"            String a \u003d \"Noted. I\u0027ve removed this task:\\n\" + padSpaces(todelete.toString(), 7) +"},{"lineNumber":206,"author":{"gitId":"JulietTeoh"},"content":"                    \"\\n\" + getNumberOfTasks();"},{"lineNumber":207,"author":{"gitId":"JulietTeoh"},"content":""},{"lineNumber":208,"author":{"gitId":"JulietTeoh"},"content":"            return defaultFormatting(a);"},{"lineNumber":209,"author":{"gitId":"JulietTeoh"},"content":"        }else{"},{"lineNumber":210,"author":{"gitId":"JulietTeoh"},"content":"            throw new DukeException(defaultFormatting(\"Error! Please make sure the \" +"},{"lineNumber":211,"author":{"gitId":"JulietTeoh"},"content":"                    \"number given has a corresponding task!\"));"},{"lineNumber":212,"author":{"gitId":"JulietTeoh"},"content":"        }"},{"lineNumber":213,"author":{"gitId":"JulietTeoh"},"content":"    }"},{"lineNumber":214,"author":{"gitId":"JulietTeoh"},"content":""},{"lineNumber":215,"author":{"gitId":"JulietTeoh"},"content":"    private static boolean checkStringStartingEquals(String userInput, String stringToCheck){"},{"lineNumber":216,"author":{"gitId":"JulietTeoh"},"content":"        return userInput.length() \u003e\u003d stringToCheck.length() \u0026\u0026"},{"lineNumber":217,"author":{"gitId":"JulietTeoh"},"content":"                userInput.substring(0, stringToCheck.length()).equals(stringToCheck);"},{"lineNumber":218,"author":{"gitId":"JulietTeoh"},"content":"    }"},{"lineNumber":219,"author":{"gitId":"JulietTeoh"},"content":""},{"lineNumber":220,"author":{"gitId":"JulietTeoh"},"content":"    private static boolean checkStringEquals(String userInput, String stringToCheck){"},{"lineNumber":221,"author":{"gitId":"JulietTeoh"},"content":"        return userInput.equals(stringToCheck) || userInput.equals(stringToCheck + \" \");"},{"lineNumber":222,"author":{"gitId":"JulietTeoh"},"content":"    }"},{"lineNumber":223,"author":{"gitId":"JulietTeoh"},"content":""},{"lineNumber":224,"author":{"gitId":"JulietTeoh"},"content":"    private void saveToFile(){"},{"lineNumber":225,"author":{"gitId":"JulietTeoh"},"content":"        try {"},{"lineNumber":226,"author":{"gitId":"JulietTeoh"},"content":"            Writer fileWriter \u003d new FileWriter(\"data/dukedata.txt\", false);"},{"lineNumber":227,"author":{"gitId":"JulietTeoh"},"content":"            for (int i \u003d 0; i \u003c TaskArray.size(); i++) {"},{"lineNumber":228,"author":{"gitId":"JulietTeoh"},"content":"                String line \u003d TaskArray.get(i).toSaveFormat();"},{"lineNumber":229,"author":{"gitId":"JulietTeoh"},"content":"                fileWriter.write(line + \"\\n\");"},{"lineNumber":230,"author":{"gitId":"JulietTeoh"},"content":"            }"},{"lineNumber":231,"author":{"gitId":"JulietTeoh"},"content":"            fileWriter.close();"},{"lineNumber":232,"author":{"gitId":"JulietTeoh"},"content":""},{"lineNumber":233,"author":{"gitId":"JulietTeoh"},"content":"        } catch (IOException e) {"},{"lineNumber":234,"author":{"gitId":"JulietTeoh"},"content":"            e.printStackTrace();"},{"lineNumber":235,"author":{"gitId":"JulietTeoh"},"content":"        }"},{"lineNumber":236,"author":{"gitId":"JulietTeoh"},"content":"    }"},{"lineNumber":237,"author":{"gitId":"JulietTeoh"},"content":""},{"lineNumber":238,"author":{"gitId":"JulietTeoh"},"content":"    public void restoreDataFromDataFile() throws DukeException{"},{"lineNumber":239,"author":{"gitId":"JulietTeoh"},"content":"        try{"},{"lineNumber":240,"author":{"gitId":"JulietTeoh"},"content":"            File dukeData \u003d new File(pathOfDataFile);"},{"lineNumber":241,"author":{"gitId":"JulietTeoh"},"content":"            Scanner dataReader \u003d new Scanner(dukeData);"},{"lineNumber":242,"author":{"gitId":"JulietTeoh"},"content":"            int tempNumberOfTasks \u003d 0;"},{"lineNumber":243,"author":{"gitId":"JulietTeoh"},"content":"            ArrayList\u003cTask\u003e tempArray \u003d new ArrayList\u003c\u003e();"},{"lineNumber":244,"author":{"gitId":"JulietTeoh"},"content":""},{"lineNumber":245,"author":{"gitId":"JulietTeoh"},"content":"            while (dataReader.hasNextLine()){"},{"lineNumber":246,"author":{"gitId":"JulietTeoh"},"content":"                String data \u003d dataReader.nextLine();"},{"lineNumber":247,"author":{"gitId":"JulietTeoh"},"content":"                String[] arr \u003d data.split(\"\\\\|\");"},{"lineNumber":248,"author":{"gitId":"JulietTeoh"},"content":""},{"lineNumber":249,"author":{"gitId":"JulietTeoh"},"content":"                String taskSymbol \u003d arr[0];"},{"lineNumber":250,"author":{"gitId":"JulietTeoh"},"content":"                int doneInt \u003d Integer.valueOf(arr[1]);"},{"lineNumber":251,"author":{"gitId":"JulietTeoh"},"content":"                String description \u003d arr[2];"},{"lineNumber":252,"author":{"gitId":"JulietTeoh"},"content":""},{"lineNumber":253,"author":{"gitId":"JulietTeoh"},"content":"                if (taskSymbol.equals(\"T\")){"},{"lineNumber":254,"author":{"gitId":"JulietTeoh"},"content":"                    tempArray.add(new ToDo(description, doneInt));"},{"lineNumber":255,"author":{"gitId":"JulietTeoh"},"content":"                    tempNumberOfTasks++;"},{"lineNumber":256,"author":{"gitId":"JulietTeoh"},"content":"                }else if(taskSymbol.equals(\"D\")){"},{"lineNumber":257,"author":{"gitId":"JulietTeoh"},"content":"                    try {"},{"lineNumber":258,"author":{"gitId":"JulietTeoh"},"content":"                        tempArray.add(new Deadline(description, arr[3], doneInt));"},{"lineNumber":259,"author":{"gitId":"JulietTeoh"},"content":"                    }catch(TaskException e){"},{"lineNumber":260,"author":{"gitId":"JulietTeoh"},"content":"                        throw new DukeException(defaultFormatting(\"Data Corrupted, failed to restore data.\"));"},{"lineNumber":261,"author":{"gitId":"JulietTeoh"},"content":"                    }"},{"lineNumber":262,"author":{"gitId":"JulietTeoh"},"content":"                    tempNumberOfTasks++;"},{"lineNumber":263,"author":{"gitId":"JulietTeoh"},"content":"                }else if(taskSymbol.equals(\"E\")){"},{"lineNumber":264,"author":{"gitId":"JulietTeoh"},"content":"                    tempArray.add(new Event(description, arr[3], doneInt));"},{"lineNumber":265,"author":{"gitId":"JulietTeoh"},"content":"                    tempNumberOfTasks++;"},{"lineNumber":266,"author":{"gitId":"JulietTeoh"},"content":"                }"},{"lineNumber":267,"author":{"gitId":"JulietTeoh"},"content":""},{"lineNumber":268,"author":{"gitId":"JulietTeoh"},"content":"            }"},{"lineNumber":269,"author":{"gitId":"JulietTeoh"},"content":"            dataReader.close();"},{"lineNumber":270,"author":{"gitId":"JulietTeoh"},"content":"            numberOfTasks \u003d numberOfTasks + tempNumberOfTasks;"},{"lineNumber":271,"author":{"gitId":"JulietTeoh"},"content":"            for (int i \u003d 0; i \u003c tempNumberOfTasks; i++) {"},{"lineNumber":272,"author":{"gitId":"JulietTeoh"},"content":"                TaskArray.add(tempArray.get(i));"},{"lineNumber":273,"author":{"gitId":"JulietTeoh"},"content":"            }"},{"lineNumber":274,"author":{"gitId":"JulietTeoh"},"content":"            System.out.println(defaultFormatting(\"Data Successfuly Restored\"));"},{"lineNumber":275,"author":{"gitId":"JulietTeoh"},"content":"        }catch(FileNotFoundException e){"},{"lineNumber":276,"author":{"gitId":"JulietTeoh"},"content":"            throw new DukeException(pathOfDataFile + \" not found, failed to restore data.\");"},{"lineNumber":277,"author":{"gitId":"JulietTeoh"},"content":"        }"},{"lineNumber":278,"author":{"gitId":"JulietTeoh"},"content":"    }"},{"lineNumber":279,"author":{"gitId":"JulietTeoh"},"content":"}"}],"authorContributionMap":{"JulietTeoh":279}},{"path":"src/main/java/Manager.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"JulietTeoh"},"content":"package main.java;"},{"lineNumber":2,"author":{"gitId":"JulietTeoh"},"content":""},{"lineNumber":3,"author":{"gitId":"JulietTeoh"},"content":"public abstract class Manager {"},{"lineNumber":4,"author":{"gitId":"JulietTeoh"},"content":""},{"lineNumber":5,"author":{"gitId":"JulietTeoh"},"content":"    public String horizontalLine(){"},{"lineNumber":6,"author":{"gitId":"JulietTeoh"},"content":"        return \"    ____________________________________________________________\";"},{"lineNumber":7,"author":{"gitId":"JulietTeoh"},"content":"    }"},{"lineNumber":8,"author":{"gitId":"JulietTeoh"},"content":""},{"lineNumber":9,"author":{"gitId":"JulietTeoh"},"content":"    public String indentedString(String input){"},{"lineNumber":10,"author":{"gitId":"JulietTeoh"},"content":"        return \"     \" + input;"},{"lineNumber":11,"author":{"gitId":"JulietTeoh"},"content":"    }"},{"lineNumber":12,"author":{"gitId":"JulietTeoh"},"content":""},{"lineNumber":13,"author":{"gitId":"JulietTeoh"},"content":"    public String defaultFormatting(String input){"},{"lineNumber":14,"author":{"gitId":"JulietTeoh"},"content":"        return horizontalLine() + \u0027\\n\u0027 + indentedString(input) + \u0027\\n\u0027 + horizontalLine();"},{"lineNumber":15,"author":{"gitId":"JulietTeoh"},"content":"    }"},{"lineNumber":16,"author":{"gitId":"JulietTeoh"},"content":""},{"lineNumber":17,"author":{"gitId":"JulietTeoh"},"content":"    public String padSpaces(String input, int numOfSpacesToPad){"},{"lineNumber":18,"author":{"gitId":"JulietTeoh"},"content":"        String toreturn \u003d \"\";"},{"lineNumber":19,"author":{"gitId":"JulietTeoh"},"content":""},{"lineNumber":20,"author":{"gitId":"JulietTeoh"},"content":"        for (int i \u003d 0; i \u003c numOfSpacesToPad; i++) {"},{"lineNumber":21,"author":{"gitId":"JulietTeoh"},"content":"            toreturn \u003d toreturn + \u0027 \u0027;"},{"lineNumber":22,"author":{"gitId":"JulietTeoh"},"content":"        }"},{"lineNumber":23,"author":{"gitId":"JulietTeoh"},"content":""},{"lineNumber":24,"author":{"gitId":"JulietTeoh"},"content":"        return toreturn + input;"},{"lineNumber":25,"author":{"gitId":"JulietTeoh"},"content":""},{"lineNumber":26,"author":{"gitId":"JulietTeoh"},"content":"    }"},{"lineNumber":27,"author":{"gitId":"JulietTeoh"},"content":"}"}],"authorContributionMap":{"JulietTeoh":27}},{"path":"src/main/java/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"JulietTeoh"},"content":"package main.java;"},{"lineNumber":2,"author":{"gitId":"JulietTeoh"},"content":""},{"lineNumber":3,"author":{"gitId":"JulietTeoh"},"content":"public class Task {"},{"lineNumber":4,"author":{"gitId":"JulietTeoh"},"content":"    protected String description;"},{"lineNumber":5,"author":{"gitId":"JulietTeoh"},"content":""},{"lineNumber":6,"author":{"gitId":"JulietTeoh"},"content":"    protected boolean isDone;"},{"lineNumber":7,"author":{"gitId":"JulietTeoh"},"content":""},{"lineNumber":8,"author":{"gitId":"JulietTeoh"},"content":"    public Task(String description) {"},{"lineNumber":9,"author":{"gitId":"JulietTeoh"},"content":"        this.description \u003d description;"},{"lineNumber":10,"author":{"gitId":"JulietTeoh"},"content":"        this.isDone \u003d false;"},{"lineNumber":11,"author":{"gitId":"JulietTeoh"},"content":"    }"},{"lineNumber":12,"author":{"gitId":"JulietTeoh"},"content":""},{"lineNumber":13,"author":{"gitId":"JulietTeoh"},"content":"    public Task(String description, int doneInt) {"},{"lineNumber":14,"author":{"gitId":"JulietTeoh"},"content":"        this.description \u003d description;"},{"lineNumber":15,"author":{"gitId":"JulietTeoh"},"content":"        if (doneInt \u003d\u003d 1){"},{"lineNumber":16,"author":{"gitId":"JulietTeoh"},"content":"            this.isDone \u003d true;"},{"lineNumber":17,"author":{"gitId":"JulietTeoh"},"content":"        }else{"},{"lineNumber":18,"author":{"gitId":"JulietTeoh"},"content":"            this.isDone \u003d false;"},{"lineNumber":19,"author":{"gitId":"JulietTeoh"},"content":"        }"},{"lineNumber":20,"author":{"gitId":"JulietTeoh"},"content":"    }"},{"lineNumber":21,"author":{"gitId":"JulietTeoh"},"content":""},{"lineNumber":22,"author":{"gitId":"JulietTeoh"},"content":"    public String getStatusIcon() {"},{"lineNumber":23,"author":{"gitId":"JulietTeoh"},"content":"        return (isDone ? \"X\" : \" \"); //return tick or X symbols"},{"lineNumber":24,"author":{"gitId":"JulietTeoh"},"content":"    }"},{"lineNumber":25,"author":{"gitId":"JulietTeoh"},"content":""},{"lineNumber":26,"author":{"gitId":"JulietTeoh"},"content":"    @Override"},{"lineNumber":27,"author":{"gitId":"JulietTeoh"},"content":"    public String toString(){"},{"lineNumber":28,"author":{"gitId":"JulietTeoh"},"content":"        return \"[\" + getStatusIcon() + \"] \" + description;"},{"lineNumber":29,"author":{"gitId":"JulietTeoh"},"content":"    }"},{"lineNumber":30,"author":{"gitId":"JulietTeoh"},"content":""},{"lineNumber":31,"author":{"gitId":"JulietTeoh"},"content":"    public void changeTaskToDone(){"},{"lineNumber":32,"author":{"gitId":"JulietTeoh"},"content":"        isDone \u003d true;"},{"lineNumber":33,"author":{"gitId":"JulietTeoh"},"content":"    }"},{"lineNumber":34,"author":{"gitId":"JulietTeoh"},"content":""},{"lineNumber":35,"author":{"gitId":"JulietTeoh"},"content":"    public String toSaveFormat(){"},{"lineNumber":36,"author":{"gitId":"JulietTeoh"},"content":"        int isDoneInt \u003d isDone ? 1 : 0;"},{"lineNumber":37,"author":{"gitId":"JulietTeoh"},"content":"        return isDoneInt + \"|\" + description;"},{"lineNumber":38,"author":{"gitId":"JulietTeoh"},"content":"    }"},{"lineNumber":39,"author":{"gitId":"JulietTeoh"},"content":"}"}],"authorContributionMap":{"JulietTeoh":39}},{"path":"src/main/java/TaskException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"JulietTeoh"},"content":"package main.java;"},{"lineNumber":2,"author":{"gitId":"JulietTeoh"},"content":""},{"lineNumber":3,"author":{"gitId":"JulietTeoh"},"content":"public class TaskException extends Exception{"},{"lineNumber":4,"author":{"gitId":"JulietTeoh"},"content":"    public TaskException(String message){"},{"lineNumber":5,"author":{"gitId":"JulietTeoh"},"content":"        super(message);"},{"lineNumber":6,"author":{"gitId":"JulietTeoh"},"content":"    }"},{"lineNumber":7,"author":{"gitId":"JulietTeoh"},"content":"}"}],"authorContributionMap":{"JulietTeoh":7}},{"path":"src/main/java/ToDo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"JulietTeoh"},"content":"package main.java;"},{"lineNumber":2,"author":{"gitId":"JulietTeoh"},"content":""},{"lineNumber":3,"author":{"gitId":"JulietTeoh"},"content":"public class ToDo extends Task{"},{"lineNumber":4,"author":{"gitId":"JulietTeoh"},"content":"    public ToDo(String description) {"},{"lineNumber":5,"author":{"gitId":"JulietTeoh"},"content":"        super(description);"},{"lineNumber":6,"author":{"gitId":"JulietTeoh"},"content":"    }"},{"lineNumber":7,"author":{"gitId":"JulietTeoh"},"content":""},{"lineNumber":8,"author":{"gitId":"JulietTeoh"},"content":"    public ToDo(String description, int doneInt){"},{"lineNumber":9,"author":{"gitId":"JulietTeoh"},"content":"        super(description, doneInt);"},{"lineNumber":10,"author":{"gitId":"JulietTeoh"},"content":"    }"},{"lineNumber":11,"author":{"gitId":"JulietTeoh"},"content":""},{"lineNumber":12,"author":{"gitId":"JulietTeoh"},"content":"    @Override"},{"lineNumber":13,"author":{"gitId":"JulietTeoh"},"content":"    public String toString() {"},{"lineNumber":14,"author":{"gitId":"JulietTeoh"},"content":"        return \"[T]\"+ super.toString();"},{"lineNumber":15,"author":{"gitId":"JulietTeoh"},"content":"    }"},{"lineNumber":16,"author":{"gitId":"JulietTeoh"},"content":""},{"lineNumber":17,"author":{"gitId":"JulietTeoh"},"content":"    @Override"},{"lineNumber":18,"author":{"gitId":"JulietTeoh"},"content":"    public String toSaveFormat(){"},{"lineNumber":19,"author":{"gitId":"JulietTeoh"},"content":"        return \"T|\" + super.toSaveFormat();"},{"lineNumber":20,"author":{"gitId":"JulietTeoh"},"content":"    }"},{"lineNumber":21,"author":{"gitId":"JulietTeoh"},"content":"}"}],"authorContributionMap":{"JulietTeoh":21}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"JulietTeoh"},"content":"todo borrow book"},{"lineNumber":2,"author":{"gitId":"JulietTeoh"},"content":"deadline return book /by Sunday"},{"lineNumber":3,"author":{"gitId":"JulietTeoh"},"content":"event project meeting /at Mon 2-4pm"},{"lineNumber":4,"author":{"gitId":"JulietTeoh"},"content":"todo"},{"lineNumber":5,"author":{"gitId":"JulietTeoh"},"content":"boop"},{"lineNumber":6,"author":{"gitId":"JulietTeoh"},"content":"event"},{"lineNumber":7,"author":{"gitId":"JulietTeoh"},"content":"deadline"},{"lineNumber":8,"author":{"gitId":"JulietTeoh"},"content":"event a"},{"lineNumber":9,"author":{"gitId":"JulietTeoh"},"content":"deadline b"},{"lineNumber":10,"author":{"gitId":"JulietTeoh"},"content":"list"},{"lineNumber":11,"author":{"gitId":"JulietTeoh"},"content":"done 3"},{"lineNumber":12,"author":{"gitId":"JulietTeoh"},"content":"done 2"},{"lineNumber":13,"author":{"gitId":"JulietTeoh"},"content":"done 1"},{"lineNumber":14,"author":{"gitId":"JulietTeoh"},"content":"delete 3"},{"lineNumber":15,"author":{"gitId":"JulietTeoh"},"content":"delete 2"},{"lineNumber":16,"author":{"gitId":"JulietTeoh"},"content":"delete 1"},{"lineNumber":17,"author":{"gitId":"JulietTeoh"},"content":"todo check errors"},{"lineNumber":18,"author":{"gitId":"JulietTeoh"},"content":"done"},{"lineNumber":19,"author":{"gitId":"JulietTeoh"},"content":"done a"},{"lineNumber":20,"author":{"gitId":"JulietTeoh"},"content":"delete"},{"lineNumber":21,"author":{"gitId":"JulietTeoh"},"content":"done1"},{"lineNumber":22,"author":{"gitId":"JulietTeoh"},"content":"delete1"},{"lineNumber":23,"author":{"gitId":"JulietTeoh"},"content":"delete 1"},{"lineNumber":24,"author":{"gitId":"JulietTeoh"},"content":"todoa"},{"lineNumber":25,"author":{"gitId":"JulietTeoh"},"content":"eventa /by 9pm"},{"lineNumber":26,"author":{"gitId":"JulietTeoh"},"content":"deadlineb /by 10am"},{"lineNumber":27,"author":{"gitId":"JulietTeoh"},"content":"bye"}],"authorContributionMap":{"JulietTeoh":27}}]
