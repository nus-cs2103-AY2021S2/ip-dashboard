[{"path":"src/main/java/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"car155"},"content":"public class Deadline extends Task {"},{"lineNumber":2,"author":{"gitId":"car155"},"content":"    private String date;"},{"lineNumber":3,"author":{"gitId":"car155"},"content":""},{"lineNumber":4,"author":{"gitId":"car155"},"content":"    public Deadline(String message, String date) {"},{"lineNumber":5,"author":{"gitId":"car155"},"content":"        super(\"D\", message);"},{"lineNumber":6,"author":{"gitId":"car155"},"content":"        this.date \u003d date;"},{"lineNumber":7,"author":{"gitId":"car155"},"content":"    }"},{"lineNumber":8,"author":{"gitId":"car155"},"content":""},{"lineNumber":9,"author":{"gitId":"car155"},"content":"    @Override"},{"lineNumber":10,"author":{"gitId":"car155"},"content":"    public String toString() {"},{"lineNumber":11,"author":{"gitId":"car155"},"content":"        return super.toString() + \" (by: \" + date + \")\";"},{"lineNumber":12,"author":{"gitId":"car155"},"content":"    }"},{"lineNumber":13,"author":{"gitId":"car155"},"content":"}"}],"authorContributionMap":{"car155":13}},{"path":"src/main/java/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"car155"},"content":"import java.util.Scanner;"},{"lineNumber":2,"author":{"gitId":"car155"},"content":"import java.util.ArrayList;"},{"lineNumber":3,"author":{"gitId":"car155"},"content":""},{"lineNumber":4,"author":{"gitId":"-"},"content":"public class Duke {"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    public static void main(String[] args) {"},{"lineNumber":6,"author":{"gitId":"car155"},"content":"        // task list"},{"lineNumber":7,"author":{"gitId":"car155"},"content":"        ArrayList\u003cTask\u003e ls \u003d new ArrayList\u003c\u003e();"},{"lineNumber":8,"author":{"gitId":"car155"},"content":""},{"lineNumber":9,"author":{"gitId":"car155"},"content":"        // greet"},{"lineNumber":10,"author":{"gitId":"car155"},"content":"        printMessage(\"Hello! I\u0027m Duke\\nWhat can I do for you?\");"},{"lineNumber":11,"author":{"gitId":"car155"},"content":""},{"lineNumber":12,"author":{"gitId":"car155"},"content":"        // setup scanner for inputs"},{"lineNumber":13,"author":{"gitId":"car155"},"content":"        Scanner sc \u003d new Scanner(System.in);"},{"lineNumber":14,"author":{"gitId":"car155"},"content":"        String input \u003d sc.nextLine().strip();"},{"lineNumber":15,"author":{"gitId":"car155"},"content":""},{"lineNumber":16,"author":{"gitId":"car155"},"content":"        // input loop"},{"lineNumber":17,"author":{"gitId":"car155"},"content":"        while (!input.equals(\"bye\")) {"},{"lineNumber":18,"author":{"gitId":"car155"},"content":"            try {"},{"lineNumber":19,"author":{"gitId":"car155"},"content":"                if (input.equals(\"list\")) {"},{"lineNumber":20,"author":{"gitId":"car155"},"content":"                    // list"},{"lineNumber":21,"author":{"gitId":"car155"},"content":"                    printList(ls);"},{"lineNumber":22,"author":{"gitId":"car155"},"content":"                } else {"},{"lineNumber":23,"author":{"gitId":"car155"},"content":"                    String[] splitInput \u003d input.split(\" \", 2);"},{"lineNumber":24,"author":{"gitId":"car155"},"content":""},{"lineNumber":25,"author":{"gitId":"car155"},"content":"                    // check that field is not empty"},{"lineNumber":26,"author":{"gitId":"car155"},"content":""},{"lineNumber":27,"author":{"gitId":"car155"},"content":"                    if (splitInput[0].equals(\"done\")) {"},{"lineNumber":28,"author":{"gitId":"car155"},"content":"                        // done"},{"lineNumber":29,"author":{"gitId":"car155"},"content":"                        int taskNum \u003d Integer.parseInt(splitInput[1]);"},{"lineNumber":30,"author":{"gitId":"car155"},"content":"                        Task finishedTask \u003d ls.get(taskNum - 1);"},{"lineNumber":31,"author":{"gitId":"car155"},"content":"                        finishedTask.setCompletion(true);"},{"lineNumber":32,"author":{"gitId":"car155"},"content":"                        printMessage(\"Nice! I\u0027ve marked this task as done:\\n   \" + finishedTask);"},{"lineNumber":33,"author":{"gitId":"car155"},"content":"                    } else if (splitInput[0].equals(\"delete\")) {"},{"lineNumber":34,"author":{"gitId":"car155"},"content":"                        int taskNum \u003d Integer.parseInt(splitInput[1]);"},{"lineNumber":35,"author":{"gitId":"car155"},"content":"                        Task deletedTask \u003d ls.remove(taskNum - 1);"},{"lineNumber":36,"author":{"gitId":"car155"},"content":"                        printMessage(\"Noted. I\u0027ve removed this task:\\n\" + \"  \" + deletedTask + \"Now you have \""},{"lineNumber":37,"author":{"gitId":"car155"},"content":"                                + ls.size() + \" tasks in the list.\");"},{"lineNumber":38,"author":{"gitId":"car155"},"content":"                    } else {"},{"lineNumber":39,"author":{"gitId":"car155"},"content":"                        if (splitInput[0].equals(\"todo\")) {"},{"lineNumber":40,"author":{"gitId":"car155"},"content":"                            // check for empty task"},{"lineNumber":41,"author":{"gitId":"car155"},"content":"                            if (splitInput.length \u003c 2) {"},{"lineNumber":42,"author":{"gitId":"car155"},"content":"                                throw new EmptyTaskException(\"todo\");"},{"lineNumber":43,"author":{"gitId":"car155"},"content":"                            }"},{"lineNumber":44,"author":{"gitId":"car155"},"content":""},{"lineNumber":45,"author":{"gitId":"car155"},"content":"                            // add todo"},{"lineNumber":46,"author":{"gitId":"car155"},"content":"                            addTask(ls, new ToDo(splitInput[1]));"},{"lineNumber":47,"author":{"gitId":"car155"},"content":"                        } else if (splitInput[0].equals(\"deadline\")) {"},{"lineNumber":48,"author":{"gitId":"car155"},"content":"                            // check for empty task"},{"lineNumber":49,"author":{"gitId":"car155"},"content":"                            if (splitInput.length \u003c 2) {"},{"lineNumber":50,"author":{"gitId":"car155"},"content":"                                throw new EmptyTaskException(\"deadline\");"},{"lineNumber":51,"author":{"gitId":"car155"},"content":"                            }"},{"lineNumber":52,"author":{"gitId":"car155"},"content":""},{"lineNumber":53,"author":{"gitId":"car155"},"content":"                            // add deadline"},{"lineNumber":54,"author":{"gitId":"car155"},"content":"                            String[] details \u003d splitInput[1].split(\" /by \");"},{"lineNumber":55,"author":{"gitId":"car155"},"content":"                            addTask(ls, new Deadline(details[0], details[1]));"},{"lineNumber":56,"author":{"gitId":"car155"},"content":"                        } else if (splitInput[0].equals(\"event\")) {"},{"lineNumber":57,"author":{"gitId":"car155"},"content":"                            // check for empty task"},{"lineNumber":58,"author":{"gitId":"car155"},"content":"                            if (splitInput.length \u003c 2) {"},{"lineNumber":59,"author":{"gitId":"car155"},"content":"                                throw new EmptyTaskException(\"event\");"},{"lineNumber":60,"author":{"gitId":"car155"},"content":"                            }"},{"lineNumber":61,"author":{"gitId":"car155"},"content":"                            // add event"},{"lineNumber":62,"author":{"gitId":"car155"},"content":"                            String[] details \u003d splitInput[1].split(\" /at \");"},{"lineNumber":63,"author":{"gitId":"car155"},"content":"                            addTask(ls, new Deadline(details[0], details[1]));"},{"lineNumber":64,"author":{"gitId":"car155"},"content":"                        } else {"},{"lineNumber":65,"author":{"gitId":"car155"},"content":"                            throw new NotDukeCommandException();"},{"lineNumber":66,"author":{"gitId":"car155"},"content":"                        }"},{"lineNumber":67,"author":{"gitId":"car155"},"content":"                    }"},{"lineNumber":68,"author":{"gitId":"car155"},"content":"                }"},{"lineNumber":69,"author":{"gitId":"car155"},"content":"                input \u003d sc.nextLine().strip();"},{"lineNumber":70,"author":{"gitId":"car155"},"content":"            } catch (DukeException e) {"},{"lineNumber":71,"author":{"gitId":"car155"},"content":"                printMessage(e.getMessage());"},{"lineNumber":72,"author":{"gitId":"car155"},"content":"                input \u003d sc.nextLine().strip();"},{"lineNumber":73,"author":{"gitId":"car155"},"content":"            }"},{"lineNumber":74,"author":{"gitId":"car155"},"content":"        }"},{"lineNumber":75,"author":{"gitId":"car155"},"content":""},{"lineNumber":76,"author":{"gitId":"car155"},"content":"        // exit"},{"lineNumber":77,"author":{"gitId":"car155"},"content":"        printMessage(\"Bye. Hope to see you again soon!\");"},{"lineNumber":78,"author":{"gitId":"car155"},"content":"        sc.close();"},{"lineNumber":79,"author":{"gitId":"car155"},"content":"    }"},{"lineNumber":80,"author":{"gitId":"car155"},"content":""},{"lineNumber":81,"author":{"gitId":"car155"},"content":"    // add task function"},{"lineNumber":82,"author":{"gitId":"car155"},"content":"    private static void addTask(ArrayList\u003cTask\u003e ls, Task addedTask) {"},{"lineNumber":83,"author":{"gitId":"car155"},"content":"        ls.add(addedTask);"},{"lineNumber":84,"author":{"gitId":"car155"},"content":"        String numOfTasks \u003d ls.size() + (ls.size() \u003e 1 ? \" tasks\" : \" task\");"},{"lineNumber":85,"author":{"gitId":"car155"},"content":"        printMessage("},{"lineNumber":86,"author":{"gitId":"car155"},"content":"                \"Got it. I\u0027ve added this task:\\n  \" + addedTask + \"\\nNow you have \" + numOfTasks + \" in the list.\");"},{"lineNumber":87,"author":{"gitId":"car155"},"content":"    }"},{"lineNumber":88,"author":{"gitId":"car155"},"content":""},{"lineNumber":89,"author":{"gitId":"car155"},"content":"    // prints list item number and string"},{"lineNumber":90,"author":{"gitId":"car155"},"content":"    private static void printList(ArrayList\u003cTask\u003e ls) {"},{"lineNumber":91,"author":{"gitId":"car155"},"content":"        System.out.println(\"    ____________________________________________________________\");"},{"lineNumber":92,"author":{"gitId":"car155"},"content":"        for (int i \u003d 0; i \u003c ls.size(); i++) {"},{"lineNumber":93,"author":{"gitId":"car155"},"content":"            System.out.println(\"     \" + (i + 1) + \".\" + ls.get(i).toString());"},{"lineNumber":94,"author":{"gitId":"car155"},"content":"        }"},{"lineNumber":95,"author":{"gitId":"car155"},"content":"        System.out.println(\"    ____________________________________________________________\\n\");"},{"lineNumber":96,"author":{"gitId":"car155"},"content":"    }"},{"lineNumber":97,"author":{"gitId":"car155"},"content":""},{"lineNumber":98,"author":{"gitId":"car155"},"content":"    // format for greeting, echo and exit"},{"lineNumber":99,"author":{"gitId":"car155"},"content":"    private static void printMessage(String message) {"},{"lineNumber":100,"author":{"gitId":"car155"},"content":"        String newMessage \u003d message.replaceAll(\"\\n\", \"\\n     \");"},{"lineNumber":101,"author":{"gitId":"car155"},"content":"        System.out.println(\"    ____________________________________________________________\\n\" + \"     \" + newMessage"},{"lineNumber":102,"author":{"gitId":"car155"},"content":"                + \"\\n\" + \"    ____________________________________________________________\\n\");"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":104,"author":{"gitId":"-"},"content":"}"}],"authorContributionMap":{"car155":100,"-":4}},{"path":"src/main/java/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"car155"},"content":"public class DukeException extends IllegalArgumentException {"},{"lineNumber":2,"author":{"gitId":"car155"},"content":"    private static final long serialVersionUID \u003d 50572093442410692L;"},{"lineNumber":3,"author":{"gitId":"car155"},"content":""},{"lineNumber":4,"author":{"gitId":"car155"},"content":"    public DukeException(String s) {"},{"lineNumber":5,"author":{"gitId":"car155"},"content":"        super(\"☹  OOPS!!! \" + s);"},{"lineNumber":6,"author":{"gitId":"car155"},"content":"    }"},{"lineNumber":7,"author":{"gitId":"car155"},"content":"}"}],"authorContributionMap":{"car155":7}},{"path":"src/main/java/EmptyTaskException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"car155"},"content":"public class EmptyTaskException extends DukeException {"},{"lineNumber":2,"author":{"gitId":"car155"},"content":"    private static final long serialVersionUID \u003d 7128896708432192178L;"},{"lineNumber":3,"author":{"gitId":"car155"},"content":""},{"lineNumber":4,"author":{"gitId":"car155"},"content":"    public EmptyTaskException(String taskType) {"},{"lineNumber":5,"author":{"gitId":"car155"},"content":"        super(\"The description of a \" + taskType + \" cannot be empty.\");"},{"lineNumber":6,"author":{"gitId":"car155"},"content":"    }"},{"lineNumber":7,"author":{"gitId":"car155"},"content":"}"}],"authorContributionMap":{"car155":7}},{"path":"src/main/java/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"car155"},"content":"public class Event extends Task {"},{"lineNumber":2,"author":{"gitId":"car155"},"content":"    private String time;"},{"lineNumber":3,"author":{"gitId":"car155"},"content":""},{"lineNumber":4,"author":{"gitId":"car155"},"content":"    public Event(String message, String time) {"},{"lineNumber":5,"author":{"gitId":"car155"},"content":"        super(\"E\", message);"},{"lineNumber":6,"author":{"gitId":"car155"},"content":"        this.time \u003d time;"},{"lineNumber":7,"author":{"gitId":"car155"},"content":"    }"},{"lineNumber":8,"author":{"gitId":"car155"},"content":""},{"lineNumber":9,"author":{"gitId":"car155"},"content":"    @Override"},{"lineNumber":10,"author":{"gitId":"car155"},"content":"    public String toString() {"},{"lineNumber":11,"author":{"gitId":"car155"},"content":"        return super.toString() + \" (at: \" + time + \")\";"},{"lineNumber":12,"author":{"gitId":"car155"},"content":"    }"},{"lineNumber":13,"author":{"gitId":"car155"},"content":"}"}],"authorContributionMap":{"car155":13}},{"path":"src/main/java/NotDukeCommandException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"car155"},"content":"public class NotDukeCommandException extends DukeException {"},{"lineNumber":2,"author":{"gitId":"car155"},"content":"    private static final long serialVersionUID \u003d -356663467350540212L;"},{"lineNumber":3,"author":{"gitId":"car155"},"content":""},{"lineNumber":4,"author":{"gitId":"car155"},"content":"    public NotDukeCommandException() {"},{"lineNumber":5,"author":{"gitId":"car155"},"content":"        super(\"I\u0027m sorry, but I don\u0027t know what that means :-(\");"},{"lineNumber":6,"author":{"gitId":"car155"},"content":"    }"},{"lineNumber":7,"author":{"gitId":"car155"},"content":"}"}],"authorContributionMap":{"car155":7}},{"path":"src/main/java/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"car155"},"content":"public abstract class Task {"},{"lineNumber":2,"author":{"gitId":"car155"},"content":"    private String tag;"},{"lineNumber":3,"author":{"gitId":"car155"},"content":"    private boolean complete;"},{"lineNumber":4,"author":{"gitId":"car155"},"content":"    private String message;"},{"lineNumber":5,"author":{"gitId":"car155"},"content":""},{"lineNumber":6,"author":{"gitId":"car155"},"content":"    protected Task(String tag, String message) {"},{"lineNumber":7,"author":{"gitId":"car155"},"content":"        this.tag \u003d tag;"},{"lineNumber":8,"author":{"gitId":"car155"},"content":"        this.complete \u003d false;"},{"lineNumber":9,"author":{"gitId":"car155"},"content":"        this.message \u003d message;"},{"lineNumber":10,"author":{"gitId":"car155"},"content":"    }"},{"lineNumber":11,"author":{"gitId":"car155"},"content":""},{"lineNumber":12,"author":{"gitId":"car155"},"content":"    public void setCompletion(boolean complete) {"},{"lineNumber":13,"author":{"gitId":"car155"},"content":"        this.complete \u003d complete;"},{"lineNumber":14,"author":{"gitId":"car155"},"content":"    }"},{"lineNumber":15,"author":{"gitId":"car155"},"content":""},{"lineNumber":16,"author":{"gitId":"car155"},"content":"    @Override"},{"lineNumber":17,"author":{"gitId":"car155"},"content":"    public String toString() {"},{"lineNumber":18,"author":{"gitId":"car155"},"content":"        String status \u003d complete ? \"[X] \" : \"[ ] \";"},{"lineNumber":19,"author":{"gitId":"car155"},"content":"        return \"[\" + tag + \"]\" + status + message;"},{"lineNumber":20,"author":{"gitId":"car155"},"content":"    }"},{"lineNumber":21,"author":{"gitId":"car155"},"content":"}"}],"authorContributionMap":{"car155":21}},{"path":"src/main/java/ToDo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"car155"},"content":"public class ToDo extends Task {"},{"lineNumber":2,"author":{"gitId":"car155"},"content":"    public ToDo(String message) {"},{"lineNumber":3,"author":{"gitId":"car155"},"content":"        super(\"T\", message);"},{"lineNumber":4,"author":{"gitId":"car155"},"content":"    }"},{"lineNumber":5,"author":{"gitId":"car155"},"content":"}"}],"authorContributionMap":{"car155":5}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"car155"},"content":"todo borrow book"},{"lineNumber":2,"author":{"gitId":"car155"},"content":"deadline return book /by June 6th"},{"lineNumber":3,"author":{"gitId":"car155"},"content":"event project meeting /at Aug 6th 2-4pm"},{"lineNumber":4,"author":{"gitId":"car155"},"content":"todo join sports club"},{"lineNumber":5,"author":{"gitId":"car155"},"content":"done 1"},{"lineNumber":6,"author":{"gitId":"car155"},"content":"done 4"},{"lineNumber":7,"author":{"gitId":"car155"},"content":"todo borrow book"},{"lineNumber":8,"author":{"gitId":"car155"},"content":"list"},{"lineNumber":9,"author":{"gitId":"car155"},"content":"deadline return book /by Sunday"},{"lineNumber":10,"author":{"gitId":"car155"},"content":"event project meeting /at Mon 2-4pm"}],"authorContributionMap":{"car155":10}}]
