[{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027checkstyle\u0027"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027"},{"lineNumber":6,"author":{"gitId":"-"},"content":"}"},{"lineNumber":7,"author":{"gitId":"-"},"content":""},{"lineNumber":8,"author":{"gitId":"car155"},"content":"checkstyle {"},{"lineNumber":9,"author":{"gitId":"car155"},"content":"    toolVersion \u003d \u00278.29\u0027"},{"lineNumber":10,"author":{"gitId":"car155"},"content":"}"},{"lineNumber":11,"author":{"gitId":"car155"},"content":""},{"lineNumber":12,"author":{"gitId":"-"},"content":"repositories {"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    mavenCentral()"},{"lineNumber":14,"author":{"gitId":"-"},"content":"}"},{"lineNumber":15,"author":{"gitId":"-"},"content":""},{"lineNumber":16,"author":{"gitId":"car155"},"content":"sourceSets {"},{"lineNumber":17,"author":{"gitId":"car155"},"content":"    main {"},{"lineNumber":18,"author":{"gitId":"car155"},"content":"        resources {"},{"lineNumber":19,"author":{"gitId":"car155"},"content":"            srcDirs \"src/main/resources\""},{"lineNumber":20,"author":{"gitId":"car155"},"content":"        }"},{"lineNumber":21,"author":{"gitId":"car155"},"content":"    }"},{"lineNumber":22,"author":{"gitId":"car155"},"content":"}"},{"lineNumber":23,"author":{"gitId":"car155"},"content":""},{"lineNumber":24,"author":{"gitId":"-"},"content":"dependencies {"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.5.0\u0027"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.5.0\u0027"},{"lineNumber":27,"author":{"gitId":"car155"},"content":""},{"lineNumber":28,"author":{"gitId":"car155"},"content":"    String javaFxVersion \u003d \u002711\u0027"},{"lineNumber":29,"author":{"gitId":"car155"},"content":""},{"lineNumber":30,"author":{"gitId":"car155"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027"},{"lineNumber":31,"author":{"gitId":"car155"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"},{"lineNumber":32,"author":{"gitId":"car155"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"},{"lineNumber":33,"author":{"gitId":"car155"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027"},{"lineNumber":34,"author":{"gitId":"car155"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"},{"lineNumber":35,"author":{"gitId":"car155"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"},{"lineNumber":36,"author":{"gitId":"car155"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027"},{"lineNumber":37,"author":{"gitId":"car155"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"},{"lineNumber":38,"author":{"gitId":"car155"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"},{"lineNumber":39,"author":{"gitId":"car155"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027"},{"lineNumber":40,"author":{"gitId":"car155"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"},{"lineNumber":41,"author":{"gitId":"car155"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"},{"lineNumber":42,"author":{"gitId":"-"},"content":"}"},{"lineNumber":43,"author":{"gitId":"-"},"content":""},{"lineNumber":44,"author":{"gitId":"-"},"content":"test {"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    useJUnitPlatform()"},{"lineNumber":46,"author":{"gitId":"-"},"content":""},{"lineNumber":47,"author":{"gitId":"-"},"content":"    testLogging {"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\""},{"lineNumber":49,"author":{"gitId":"-"},"content":""},{"lineNumber":50,"author":{"gitId":"-"},"content":"        showExceptions true"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\""},{"lineNumber":52,"author":{"gitId":"-"},"content":"        showCauses true"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        showStackTraces true"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":56,"author":{"gitId":"-"},"content":"}"},{"lineNumber":57,"author":{"gitId":"-"},"content":""},{"lineNumber":58,"author":{"gitId":"-"},"content":"application {"},{"lineNumber":59,"author":{"gitId":"car155"},"content":"    mainClassName \u003d \"duke.Launcher\""},{"lineNumber":60,"author":{"gitId":"-"},"content":"}"},{"lineNumber":61,"author":{"gitId":"-"},"content":""},{"lineNumber":62,"author":{"gitId":"-"},"content":"shadowJar {"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    archiveBaseName \u003d \"duke\""},{"lineNumber":64,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null"},{"lineNumber":65,"author":{"gitId":"-"},"content":"}"},{"lineNumber":66,"author":{"gitId":"-"},"content":""},{"lineNumber":67,"author":{"gitId":"-"},"content":"checkstyle {"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    toolVersion \u003d \u00278.29\u0027"},{"lineNumber":69,"author":{"gitId":"-"},"content":"}"},{"lineNumber":70,"author":{"gitId":"-"},"content":""},{"lineNumber":71,"author":{"gitId":"-"},"content":"run{"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in"},{"lineNumber":73,"author":{"gitId":"-"},"content":"}"}],"authorContributionMap":{"car155":28,"-":45}},{"path":"docs/README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"car155"},"content":"# **DUKE** - User Guide"},{"lineNumber":2,"author":{"gitId":"-"},"content":""},{"lineNumber":3,"author":{"gitId":"-"},"content":"## Features "},{"lineNumber":4,"author":{"gitId":"car155"},"content":"1. todo"},{"lineNumber":5,"author":{"gitId":"car155"},"content":"2. deadline"},{"lineNumber":6,"author":{"gitId":"car155"},"content":"3. event"},{"lineNumber":7,"author":{"gitId":"car155"},"content":"4. list"},{"lineNumber":8,"author":{"gitId":"car155"},"content":"5. done"},{"lineNumber":9,"author":{"gitId":"car155"},"content":"6. delete"},{"lineNumber":10,"author":{"gitId":"car155"},"content":"7. check"},{"lineNumber":11,"author":{"gitId":"car155"},"content":"8. find"},{"lineNumber":12,"author":{"gitId":"car155"},"content":"9. help"},{"lineNumber":13,"author":{"gitId":"car155"},"content":"10. exit"},{"lineNumber":14,"author":{"gitId":"-"},"content":""},{"lineNumber":15,"author":{"gitId":"car155"},"content":"`\u003c\u003e` - required inputs"},{"lineNumber":16,"author":{"gitId":"car155"},"content":"`{}` - optional inputs"},{"lineNumber":17,"author":{"gitId":"car155"},"content":"### 1. `todo` - Add todo task"},{"lineNumber":18,"author":{"gitId":"car155"},"content":"Adds a todo task to the list"},{"lineNumber":19,"author":{"gitId":"-"},"content":""},{"lineNumber":20,"author":{"gitId":"car155"},"content":"Format: `todo {task name}`"},{"lineNumber":21,"author":{"gitId":"-"},"content":""},{"lineNumber":22,"author":{"gitId":"car155"},"content":"#### Usage"},{"lineNumber":23,"author":{"gitId":"car155"},"content":"Example of usage: `todo read book`"},{"lineNumber":24,"author":{"gitId":"-"},"content":""},{"lineNumber":25,"author":{"gitId":"car155"},"content":"Expected response:"},{"lineNumber":26,"author":{"gitId":"car155"},"content":"````"},{"lineNumber":27,"author":{"gitId":"car155"},"content":"Got it. I\u0027ve added this task:"},{"lineNumber":28,"author":{"gitId":"car155"},"content":"  [T][ ] read book"},{"lineNumber":29,"author":{"gitId":"car155"},"content":"Now you have 1 task in the list"},{"lineNumber":30,"author":{"gitId":"car155"},"content":"````"},{"lineNumber":31,"author":{"gitId":"-"},"content":""},{"lineNumber":32,"author":{"gitId":"car155"},"content":"### 2. `deadline` - Add deadline task"},{"lineNumber":33,"author":{"gitId":"car155"},"content":"Adds a deadline task to the list"},{"lineNumber":34,"author":{"gitId":"-"},"content":""},{"lineNumber":35,"author":{"gitId":"car155"},"content":"Format: `deadline {task name} /by {date in YYYY-MM-DD format}`"},{"lineNumber":36,"author":{"gitId":"-"},"content":""},{"lineNumber":37,"author":{"gitId":"car155"},"content":"#### Usage"},{"lineNumber":38,"author":{"gitId":"car155"},"content":"Example of usage: `deadline submit essay /by 2021-05-03`"},{"lineNumber":39,"author":{"gitId":"-"},"content":""},{"lineNumber":40,"author":{"gitId":"car155"},"content":"Expected response:"},{"lineNumber":41,"author":{"gitId":"car155"},"content":"````"},{"lineNumber":42,"author":{"gitId":"car155"},"content":"Got it. I\u0027ve added this task:"},{"lineNumber":43,"author":{"gitId":"car155"},"content":"  [D][ ] submit essay (by: May 3 2021)"},{"lineNumber":44,"author":{"gitId":"car155"},"content":"Now you have 2 tasks in the list"},{"lineNumber":45,"author":{"gitId":"car155"},"content":"````"},{"lineNumber":46,"author":{"gitId":"car155"},"content":""},{"lineNumber":47,"author":{"gitId":"car155"},"content":"### 3. `event` - Add event task"},{"lineNumber":48,"author":{"gitId":"car155"},"content":"Adds a event task to the list"},{"lineNumber":49,"author":{"gitId":"car155"},"content":""},{"lineNumber":50,"author":{"gitId":"car155"},"content":"Format: `event {task name} /at {date in YYYY-MM-DD format}`"},{"lineNumber":51,"author":{"gitId":"car155"},"content":""},{"lineNumber":52,"author":{"gitId":"car155"},"content":"#### Usage"},{"lineNumber":53,"author":{"gitId":"car155"},"content":"Example of usage: `event workshop /at 2021-03-05`"},{"lineNumber":54,"author":{"gitId":"car155"},"content":""},{"lineNumber":55,"author":{"gitId":"car155"},"content":"Expected response:"},{"lineNumber":56,"author":{"gitId":"car155"},"content":"````"},{"lineNumber":57,"author":{"gitId":"car155"},"content":"Got it. I\u0027ve added this task:"},{"lineNumber":58,"author":{"gitId":"car155"},"content":"  [E][ ] workshop (at: Mar 5 2021)"},{"lineNumber":59,"author":{"gitId":"car155"},"content":"Now you have 3 tasks in the list"},{"lineNumber":60,"author":{"gitId":"car155"},"content":"````"},{"lineNumber":61,"author":{"gitId":"car155"},"content":""},{"lineNumber":62,"author":{"gitId":"car155"},"content":"### 4. `list` - lists tasks"},{"lineNumber":63,"author":{"gitId":"car155"},"content":"Lists all current tasks"},{"lineNumber":64,"author":{"gitId":"car155"},"content":""},{"lineNumber":65,"author":{"gitId":"car155"},"content":"Format: `list`"},{"lineNumber":66,"author":{"gitId":"car155"},"content":""},{"lineNumber":67,"author":{"gitId":"car155"},"content":"#### Usage"},{"lineNumber":68,"author":{"gitId":"car155"},"content":"Example of usage: list"},{"lineNumber":69,"author":{"gitId":"car155"},"content":""},{"lineNumber":70,"author":{"gitId":"car155"},"content":"Expected response:"},{"lineNumber":71,"author":{"gitId":"car155"},"content":"````"},{"lineNumber":72,"author":{"gitId":"car155"},"content":"1. [T][ ] read book"},{"lineNumber":73,"author":{"gitId":"car155"},"content":"2. [D][ ] submit essay (by: May 3 2021)"},{"lineNumber":74,"author":{"gitId":"car155"},"content":"3. [E][ ] workshop (at: Mar 5 2021)"},{"lineNumber":75,"author":{"gitId":"car155"},"content":"````"},{"lineNumber":76,"author":{"gitId":"car155"},"content":""},{"lineNumber":77,"author":{"gitId":"car155"},"content":"### 5. `done` - Marks task as done"},{"lineNumber":78,"author":{"gitId":"car155"},"content":"Marks the given task as done"},{"lineNumber":79,"author":{"gitId":"car155"},"content":""},{"lineNumber":80,"author":{"gitId":"car155"},"content":"Format: `done {task number}`"},{"lineNumber":81,"author":{"gitId":"car155"},"content":""},{"lineNumber":82,"author":{"gitId":"car155"},"content":"#### Usage"},{"lineNumber":83,"author":{"gitId":"car155"},"content":"Example of usage: `done 2`"},{"lineNumber":84,"author":{"gitId":"car155"},"content":""},{"lineNumber":85,"author":{"gitId":"car155"},"content":"Expected response:"},{"lineNumber":86,"author":{"gitId":"car155"},"content":"````"},{"lineNumber":87,"author":{"gitId":"car155"},"content":"Nice! I\u0027ve marked this taks as done:"},{"lineNumber":88,"author":{"gitId":"car155"},"content":"  [D][X] submit essay (by: May 3 2021)"},{"lineNumber":89,"author":{"gitId":"car155"},"content":"````"},{"lineNumber":90,"author":{"gitId":"car155"},"content":""},{"lineNumber":91,"author":{"gitId":"car155"},"content":"### 6. `delete` - Deletes a task"},{"lineNumber":92,"author":{"gitId":"car155"},"content":"Deletes the given task from the list"},{"lineNumber":93,"author":{"gitId":"car155"},"content":""},{"lineNumber":94,"author":{"gitId":"car155"},"content":"Format: `delete {task number}`"},{"lineNumber":95,"author":{"gitId":"car155"},"content":""},{"lineNumber":96,"author":{"gitId":"car155"},"content":"#### Usage"},{"lineNumber":97,"author":{"gitId":"car155"},"content":"Example of usage: `delete 2`"},{"lineNumber":98,"author":{"gitId":"car155"},"content":""},{"lineNumber":99,"author":{"gitId":"car155"},"content":"Expected response:"},{"lineNumber":100,"author":{"gitId":"car155"},"content":"````"},{"lineNumber":101,"author":{"gitId":"car155"},"content":"Noted. I\u0027ve removed this task:"},{"lineNumber":102,"author":{"gitId":"car155"},"content":"  [D][X] submit essay (by: May 3 2021)"},{"lineNumber":103,"author":{"gitId":"car155"},"content":"  Now you have 2 tasks in the list."},{"lineNumber":104,"author":{"gitId":"car155"},"content":"````"},{"lineNumber":105,"author":{"gitId":"car155"},"content":""},{"lineNumber":106,"author":{"gitId":"car155"},"content":"### 7. `check` - Checks tasks on date"},{"lineNumber":107,"author":{"gitId":"car155"},"content":"Looks for all tasks on a given date"},{"lineNumber":108,"author":{"gitId":"car155"},"content":""},{"lineNumber":109,"author":{"gitId":"car155"},"content":"Format: `check {date in YYYY-MM-DD format}`"},{"lineNumber":110,"author":{"gitId":"car155"},"content":""},{"lineNumber":111,"author":{"gitId":"car155"},"content":"#### Usage"},{"lineNumber":112,"author":{"gitId":"car155"},"content":"Example of usage: `check 2021-03-05`"},{"lineNumber":113,"author":{"gitId":"car155"},"content":""},{"lineNumber":114,"author":{"gitId":"car155"},"content":"Expected response:"},{"lineNumber":115,"author":{"gitId":"car155"},"content":"````"},{"lineNumber":116,"author":{"gitId":"car155"},"content":"1. [E][ ] workshop (at: Mar 5 2021)"},{"lineNumber":117,"author":{"gitId":"car155"},"content":"````"},{"lineNumber":118,"author":{"gitId":"car155"},"content":""},{"lineNumber":119,"author":{"gitId":"car155"},"content":"### 8. `find` - Finds tasks by name"},{"lineNumber":120,"author":{"gitId":"car155"},"content":"Looks for all tasks whose name contains a given key word"},{"lineNumber":121,"author":{"gitId":"car155"},"content":""},{"lineNumber":122,"author":{"gitId":"car155"},"content":"Format: `find {key work}`"},{"lineNumber":123,"author":{"gitId":"car155"},"content":""},{"lineNumber":124,"author":{"gitId":"car155"},"content":"#### Usage"},{"lineNumber":125,"author":{"gitId":"car155"},"content":"Example of usage: `find read`"},{"lineNumber":126,"author":{"gitId":"car155"},"content":""},{"lineNumber":127,"author":{"gitId":"car155"},"content":"Expected response:"},{"lineNumber":128,"author":{"gitId":"car155"},"content":"````"},{"lineNumber":129,"author":{"gitId":"car155"},"content":"1. [T][ ] read book"},{"lineNumber":130,"author":{"gitId":"car155"},"content":"````"},{"lineNumber":131,"author":{"gitId":"car155"},"content":""},{"lineNumber":132,"author":{"gitId":"car155"},"content":"### 9. `help` - Gives help for a command"},{"lineNumber":133,"author":{"gitId":"car155"},"content":"Gets help for the list of commands or a specific command"},{"lineNumber":134,"author":{"gitId":"car155"},"content":""},{"lineNumber":135,"author":{"gitId":"car155"},"content":"Format: `help (command)`"},{"lineNumber":136,"author":{"gitId":"car155"},"content":""},{"lineNumber":137,"author":{"gitId":"car155"},"content":"#### Usage"},{"lineNumber":138,"author":{"gitId":"car155"},"content":"Example of usage: `help`"},{"lineNumber":139,"author":{"gitId":"car155"},"content":""},{"lineNumber":140,"author":{"gitId":"car155"},"content":"Expected response:"},{"lineNumber":141,"author":{"gitId":"car155"},"content":"````"},{"lineNumber":142,"author":{"gitId":"car155"},"content":"List of commands:"},{"lineNumber":143,"author":{"gitId":"car155"},"content":"1. todo"},{"lineNumber":144,"author":{"gitId":"car155"},"content":"2. deadline"},{"lineNumber":145,"author":{"gitId":"car155"},"content":"3. event"},{"lineNumber":146,"author":{"gitId":"car155"},"content":"4. list"},{"lineNumber":147,"author":{"gitId":"car155"},"content":"5. done"},{"lineNumber":148,"author":{"gitId":"car155"},"content":"6. delete"},{"lineNumber":149,"author":{"gitId":"car155"},"content":"7. find"},{"lineNumber":150,"author":{"gitId":"car155"},"content":"8. check"},{"lineNumber":151,"author":{"gitId":"car155"},"content":"9. exit"},{"lineNumber":152,"author":{"gitId":"car155"},"content":"Type \u0027help \u003ccommand\u003e\u0027 in the chat to see the details!"},{"lineNumber":153,"author":{"gitId":"car155"},"content":"````"},{"lineNumber":154,"author":{"gitId":"car155"},"content":""},{"lineNumber":155,"author":{"gitId":"car155"},"content":"Example of usage: `help done`"},{"lineNumber":156,"author":{"gitId":"car155"},"content":""},{"lineNumber":157,"author":{"gitId":"car155"},"content":"Expected response:"},{"lineNumber":158,"author":{"gitId":"car155"},"content":"````"},{"lineNumber":159,"author":{"gitId":"car155"},"content":"Marks the task as done"},{"lineNumber":160,"author":{"gitId":"car155"},"content":""},{"lineNumber":161,"author":{"gitId":"car155"},"content":"Format: done \u003ctask number\u003e"},{"lineNumber":162,"author":{"gitId":"car155"},"content":"````"},{"lineNumber":163,"author":{"gitId":"car155"},"content":""},{"lineNumber":164,"author":{"gitId":"car155"},"content":"### 10. `exit` - Exits duke"},{"lineNumber":165,"author":{"gitId":"car155"},"content":"Prompts duke to say goodbye and closes the programme"},{"lineNumber":166,"author":{"gitId":"car155"},"content":""},{"lineNumber":167,"author":{"gitId":"car155"},"content":"Format: `exit`"},{"lineNumber":168,"author":{"gitId":"car155"},"content":""},{"lineNumber":169,"author":{"gitId":"car155"},"content":"#### Usage"},{"lineNumber":170,"author":{"gitId":"car155"},"content":"Example of usage: `exit`"},{"lineNumber":171,"author":{"gitId":"car155"},"content":""},{"lineNumber":172,"author":{"gitId":"car155"},"content":"Expected response:"},{"lineNumber":173,"author":{"gitId":"car155"},"content":"````"},{"lineNumber":174,"author":{"gitId":"car155"},"content":"Bye. Hope to see you again soon!"},{"lineNumber":175,"author":{"gitId":"car155"},"content":"````"}],"authorContributionMap":{"car155":165,"-":10}},{"path":"src/main/java/duke/Launcher.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"car155"},"content":"package duke;"},{"lineNumber":2,"author":{"gitId":"car155"},"content":""},{"lineNumber":3,"author":{"gitId":"car155"},"content":"import javafx.application.Application;"},{"lineNumber":4,"author":{"gitId":"car155"},"content":""},{"lineNumber":5,"author":{"gitId":"car155"},"content":"public class Launcher {"},{"lineNumber":6,"author":{"gitId":"car155"},"content":"    public static void main(String[] args) {"},{"lineNumber":7,"author":{"gitId":"car155"},"content":"        Application.launch(Main.class, args);"},{"lineNumber":8,"author":{"gitId":"car155"},"content":"    }"},{"lineNumber":9,"author":{"gitId":"car155"},"content":"}"}],"authorContributionMap":{"car155":9}},{"path":"src/main/java/duke/Main.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"car155"},"content":"package duke;"},{"lineNumber":2,"author":{"gitId":"car155"},"content":""},{"lineNumber":3,"author":{"gitId":"car155"},"content":"import java.io.IOException;"},{"lineNumber":4,"author":{"gitId":"car155"},"content":""},{"lineNumber":5,"author":{"gitId":"car155"},"content":"import duke.logic.Duke;"},{"lineNumber":6,"author":{"gitId":"car155"},"content":"import duke.ui.MainWindow;"},{"lineNumber":7,"author":{"gitId":"car155"},"content":"import javafx.application.Application;"},{"lineNumber":8,"author":{"gitId":"car155"},"content":"import javafx.fxml.FXMLLoader;"},{"lineNumber":9,"author":{"gitId":"car155"},"content":"import javafx.scene.Scene;"},{"lineNumber":10,"author":{"gitId":"car155"},"content":"import javafx.scene.layout.AnchorPane;"},{"lineNumber":11,"author":{"gitId":"car155"},"content":"import javafx.stage.Stage;"},{"lineNumber":12,"author":{"gitId":"car155"},"content":""},{"lineNumber":13,"author":{"gitId":"car155"},"content":"/**"},{"lineNumber":14,"author":{"gitId":"car155"},"content":" * A GUI for Duke using FXML."},{"lineNumber":15,"author":{"gitId":"car155"},"content":" */"},{"lineNumber":16,"author":{"gitId":"car155"},"content":"public class Main extends Application {"},{"lineNumber":17,"author":{"gitId":"car155"},"content":""},{"lineNumber":18,"author":{"gitId":"car155"},"content":"    private Duke duke \u003d new Duke(\"data/tasks.txt\");"},{"lineNumber":19,"author":{"gitId":"car155"},"content":""},{"lineNumber":20,"author":{"gitId":"car155"},"content":"    @Override"},{"lineNumber":21,"author":{"gitId":"car155"},"content":"    public void start(Stage stage) {"},{"lineNumber":22,"author":{"gitId":"car155"},"content":"        try {"},{"lineNumber":23,"author":{"gitId":"car155"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(Main.class.getResource(\"/view/MainWindow.fxml\"));"},{"lineNumber":24,"author":{"gitId":"car155"},"content":"            AnchorPane ap \u003d fxmlLoader.load();"},{"lineNumber":25,"author":{"gitId":"car155"},"content":"            Scene scene \u003d new Scene(ap);"},{"lineNumber":26,"author":{"gitId":"car155"},"content":"            stage.setScene(scene);"},{"lineNumber":27,"author":{"gitId":"car155"},"content":"            fxmlLoader.\u003cMainWindow\u003egetController().setDuke(duke);"},{"lineNumber":28,"author":{"gitId":"car155"},"content":"            fxmlLoader.\u003cMainWindow\u003egetController().setStage(stage);"},{"lineNumber":29,"author":{"gitId":"car155"},"content":"            fxmlLoader.\u003cMainWindow\u003egetController().greet();"},{"lineNumber":30,"author":{"gitId":"car155"},"content":"            stage.show();"},{"lineNumber":31,"author":{"gitId":"car155"},"content":"        } catch (IOException e) {"},{"lineNumber":32,"author":{"gitId":"car155"},"content":"            e.printStackTrace();"},{"lineNumber":33,"author":{"gitId":"car155"},"content":"        }"},{"lineNumber":34,"author":{"gitId":"car155"},"content":"    }"},{"lineNumber":35,"author":{"gitId":"car155"},"content":"}"}],"authorContributionMap":{"car155":35}},{"path":"src/main/java/duke/command/AddCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"car155"},"content":"package duke.command;"},{"lineNumber":2,"author":{"gitId":"car155"},"content":""},{"lineNumber":3,"author":{"gitId":"car155"},"content":"import java.io.IOException;"},{"lineNumber":4,"author":{"gitId":"car155"},"content":""},{"lineNumber":5,"author":{"gitId":"car155"},"content":"import duke.logic.DukeException;"},{"lineNumber":6,"author":{"gitId":"car155"},"content":"import duke.logic.Storage;"},{"lineNumber":7,"author":{"gitId":"car155"},"content":"import duke.task.Task;"},{"lineNumber":8,"author":{"gitId":"car155"},"content":"import duke.task.TaskList;"},{"lineNumber":9,"author":{"gitId":"car155"},"content":""},{"lineNumber":10,"author":{"gitId":"car155"},"content":"/**"},{"lineNumber":11,"author":{"gitId":"car155"},"content":" * Represents a command telling duke to add a task to its task list"},{"lineNumber":12,"author":{"gitId":"car155"},"content":" */"},{"lineNumber":13,"author":{"gitId":"car155"},"content":"public class AddCommand implements Command {"},{"lineNumber":14,"author":{"gitId":"car155"},"content":"    private Task taskToAdd;"},{"lineNumber":15,"author":{"gitId":"car155"},"content":""},{"lineNumber":16,"author":{"gitId":"car155"},"content":"    /**"},{"lineNumber":17,"author":{"gitId":"car155"},"content":"     * Constructor"},{"lineNumber":18,"author":{"gitId":"car155"},"content":"     * @param task Task to be added"},{"lineNumber":19,"author":{"gitId":"car155"},"content":"     */"},{"lineNumber":20,"author":{"gitId":"car155"},"content":"    public AddCommand(Task task) {"},{"lineNumber":21,"author":{"gitId":"car155"},"content":"        this.taskToAdd \u003d task;"},{"lineNumber":22,"author":{"gitId":"car155"},"content":"    }"},{"lineNumber":23,"author":{"gitId":"car155"},"content":""},{"lineNumber":24,"author":{"gitId":"car155"},"content":"    @Override"},{"lineNumber":25,"author":{"gitId":"car155"},"content":"    public boolean isExit() {"},{"lineNumber":26,"author":{"gitId":"car155"},"content":"        return false;"},{"lineNumber":27,"author":{"gitId":"car155"},"content":"    }"},{"lineNumber":28,"author":{"gitId":"car155"},"content":""},{"lineNumber":29,"author":{"gitId":"car155"},"content":"    @Override"},{"lineNumber":30,"author":{"gitId":"car155"},"content":"    public String execute(TaskList tasks, Storage storage) {"},{"lineNumber":31,"author":{"gitId":"car155"},"content":"        tasks.add(this.taskToAdd);"},{"lineNumber":32,"author":{"gitId":"car155"},"content":"        try {"},{"lineNumber":33,"author":{"gitId":"car155"},"content":"            storage.store(tasks);"},{"lineNumber":34,"author":{"gitId":"car155"},"content":"        } catch (IOException e) {"},{"lineNumber":35,"author":{"gitId":"car155"},"content":"            throw new DukeException(\"Cannot save tasks. Save file not found\");"},{"lineNumber":36,"author":{"gitId":"car155"},"content":"        }"},{"lineNumber":37,"author":{"gitId":"car155"},"content":"        String numOfTasks \u003d tasks.size() + (tasks.size() \u003e 1 ? \" tasks\" : \" task\");"},{"lineNumber":38,"author":{"gitId":"car155"},"content":"        String addResponse \u003d \"Got it. I\u0027ve added this task:\\n  \" + this.taskToAdd"},{"lineNumber":39,"author":{"gitId":"car155"},"content":"                + \"\\nNow you have \" + numOfTasks + \" in the list.\";"},{"lineNumber":40,"author":{"gitId":"car155"},"content":"        return addResponse;"},{"lineNumber":41,"author":{"gitId":"car155"},"content":"    }"},{"lineNumber":42,"author":{"gitId":"car155"},"content":"}"}],"authorContributionMap":{"car155":42}},{"path":"src/main/java/duke/command/CheckCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"car155"},"content":"package duke.command;"},{"lineNumber":2,"author":{"gitId":"car155"},"content":""},{"lineNumber":3,"author":{"gitId":"car155"},"content":"import java.time.LocalDate;"},{"lineNumber":4,"author":{"gitId":"car155"},"content":""},{"lineNumber":5,"author":{"gitId":"car155"},"content":"import duke.logic.Storage;"},{"lineNumber":6,"author":{"gitId":"car155"},"content":"import duke.task.Task;"},{"lineNumber":7,"author":{"gitId":"car155"},"content":"import duke.task.TaskList;"},{"lineNumber":8,"author":{"gitId":"car155"},"content":""},{"lineNumber":9,"author":{"gitId":"car155"},"content":"/**"},{"lineNumber":10,"author":{"gitId":"car155"},"content":" * Represetns a command telling to list all tasks on a specified date"},{"lineNumber":11,"author":{"gitId":"car155"},"content":" */"},{"lineNumber":12,"author":{"gitId":"car155"},"content":"public class CheckCommand implements Command {"},{"lineNumber":13,"author":{"gitId":"car155"},"content":"    private LocalDate date;"},{"lineNumber":14,"author":{"gitId":"car155"},"content":""},{"lineNumber":15,"author":{"gitId":"car155"},"content":"    /**"},{"lineNumber":16,"author":{"gitId":"car155"},"content":"     * Constructor"},{"lineNumber":17,"author":{"gitId":"car155"},"content":"     * @param date Date to check"},{"lineNumber":18,"author":{"gitId":"car155"},"content":"     */"},{"lineNumber":19,"author":{"gitId":"car155"},"content":"    public CheckCommand(LocalDate date) {"},{"lineNumber":20,"author":{"gitId":"car155"},"content":"        this.date \u003d date;"},{"lineNumber":21,"author":{"gitId":"car155"},"content":"    }"},{"lineNumber":22,"author":{"gitId":"car155"},"content":""},{"lineNumber":23,"author":{"gitId":"car155"},"content":"    @Override"},{"lineNumber":24,"author":{"gitId":"car155"},"content":"    public boolean isExit() {"},{"lineNumber":25,"author":{"gitId":"car155"},"content":"        return false;"},{"lineNumber":26,"author":{"gitId":"car155"},"content":"    }"},{"lineNumber":27,"author":{"gitId":"car155"},"content":""},{"lineNumber":28,"author":{"gitId":"car155"},"content":"    @Override"},{"lineNumber":29,"author":{"gitId":"car155"},"content":"    public String execute(TaskList tasks, Storage storage) {"},{"lineNumber":30,"author":{"gitId":"car155"},"content":"        TaskList filteredTasks \u003d new TaskList();"},{"lineNumber":31,"author":{"gitId":"car155"},"content":""},{"lineNumber":32,"author":{"gitId":"car155"},"content":"        for (int i \u003d 1; i \u003c\u003d tasks.size(); i++) {"},{"lineNumber":33,"author":{"gitId":"car155"},"content":"            Task currTask \u003d tasks.get(i);"},{"lineNumber":34,"author":{"gitId":"car155"},"content":"            if (this.date.equals(currTask.getDate())) {"},{"lineNumber":35,"author":{"gitId":"car155"},"content":"                filteredTasks.add(currTask);"},{"lineNumber":36,"author":{"gitId":"car155"},"content":"            }"},{"lineNumber":37,"author":{"gitId":"car155"},"content":"        }"},{"lineNumber":38,"author":{"gitId":"car155"},"content":""},{"lineNumber":39,"author":{"gitId":"car155"},"content":"        String checkResponse \u003d filteredTasks.toString();"},{"lineNumber":40,"author":{"gitId":"car155"},"content":"        return checkResponse;"},{"lineNumber":41,"author":{"gitId":"car155"},"content":"    }"},{"lineNumber":42,"author":{"gitId":"car155"},"content":"}"}],"authorContributionMap":{"car155":42}},{"path":"src/main/java/duke/command/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"car155"},"content":"package duke.command;"},{"lineNumber":2,"author":{"gitId":"car155"},"content":""},{"lineNumber":3,"author":{"gitId":"car155"},"content":"import duke.logic.Storage;"},{"lineNumber":4,"author":{"gitId":"car155"},"content":"import duke.task.TaskList;"},{"lineNumber":5,"author":{"gitId":"car155"},"content":""},{"lineNumber":6,"author":{"gitId":"car155"},"content":"/**"},{"lineNumber":7,"author":{"gitId":"car155"},"content":" * Represents a command to duke"},{"lineNumber":8,"author":{"gitId":"car155"},"content":" */"},{"lineNumber":9,"author":{"gitId":"car155"},"content":"public interface Command {"},{"lineNumber":10,"author":{"gitId":"car155"},"content":"    /**"},{"lineNumber":11,"author":{"gitId":"car155"},"content":"     * Checks if the command is an exit command"},{"lineNumber":12,"author":{"gitId":"car155"},"content":"     * @return True if is an exit command, false otherwise"},{"lineNumber":13,"author":{"gitId":"car155"},"content":"     */"},{"lineNumber":14,"author":{"gitId":"car155"},"content":"    public boolean isExit();"},{"lineNumber":15,"author":{"gitId":"car155"},"content":""},{"lineNumber":16,"author":{"gitId":"car155"},"content":"    /**"},{"lineNumber":17,"author":{"gitId":"car155"},"content":"     * Executes the command and gets the response"},{"lineNumber":18,"author":{"gitId":"car155"},"content":"     * @param tasks List of tasks to operate on"},{"lineNumber":19,"author":{"gitId":"car155"},"content":"     * @param storage Storage manager for loading and saving task files"},{"lineNumber":20,"author":{"gitId":"car155"},"content":"     * @return Duke\u0027s response after executing the command"},{"lineNumber":21,"author":{"gitId":"car155"},"content":"     */"},{"lineNumber":22,"author":{"gitId":"car155"},"content":"    public String execute(TaskList tasks, Storage storage);"},{"lineNumber":23,"author":{"gitId":"car155"},"content":"}"}],"authorContributionMap":{"car155":23}},{"path":"src/main/java/duke/command/DeleteCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"car155"},"content":"package duke.command;"},{"lineNumber":2,"author":{"gitId":"car155"},"content":""},{"lineNumber":3,"author":{"gitId":"car155"},"content":"import java.io.IOException;"},{"lineNumber":4,"author":{"gitId":"car155"},"content":""},{"lineNumber":5,"author":{"gitId":"car155"},"content":"import duke.logic.DukeException;"},{"lineNumber":6,"author":{"gitId":"car155"},"content":"import duke.logic.Storage;"},{"lineNumber":7,"author":{"gitId":"car155"},"content":"import duke.task.Task;"},{"lineNumber":8,"author":{"gitId":"car155"},"content":"import duke.task.TaskList;"},{"lineNumber":9,"author":{"gitId":"car155"},"content":""},{"lineNumber":10,"author":{"gitId":"car155"},"content":"/**"},{"lineNumber":11,"author":{"gitId":"car155"},"content":" * Represents a command telling duke to delete a task"},{"lineNumber":12,"author":{"gitId":"car155"},"content":" */"},{"lineNumber":13,"author":{"gitId":"car155"},"content":"public class DeleteCommand implements Command {"},{"lineNumber":14,"author":{"gitId":"car155"},"content":"    private int taskNum;"},{"lineNumber":15,"author":{"gitId":"car155"},"content":""},{"lineNumber":16,"author":{"gitId":"car155"},"content":"    /**"},{"lineNumber":17,"author":{"gitId":"car155"},"content":"     * Constructor"},{"lineNumber":18,"author":{"gitId":"car155"},"content":"     * @param taskNum The task number of the task to be deleted"},{"lineNumber":19,"author":{"gitId":"car155"},"content":"     */"},{"lineNumber":20,"author":{"gitId":"car155"},"content":"    public DeleteCommand(int taskNum) {"},{"lineNumber":21,"author":{"gitId":"car155"},"content":"        this.taskNum \u003d taskNum;"},{"lineNumber":22,"author":{"gitId":"car155"},"content":"    }"},{"lineNumber":23,"author":{"gitId":"car155"},"content":""},{"lineNumber":24,"author":{"gitId":"car155"},"content":"    @Override"},{"lineNumber":25,"author":{"gitId":"car155"},"content":"    public boolean isExit() {"},{"lineNumber":26,"author":{"gitId":"car155"},"content":"        return false;"},{"lineNumber":27,"author":{"gitId":"car155"},"content":"    }"},{"lineNumber":28,"author":{"gitId":"car155"},"content":""},{"lineNumber":29,"author":{"gitId":"car155"},"content":"    @Override"},{"lineNumber":30,"author":{"gitId":"car155"},"content":"    public String execute(TaskList tasks, Storage storage) {"},{"lineNumber":31,"author":{"gitId":"car155"},"content":"        if (this.taskNum \u003e tasks.size()) {"},{"lineNumber":32,"author":{"gitId":"car155"},"content":"            throw new DukeException(\"No such task exists!\");"},{"lineNumber":33,"author":{"gitId":"car155"},"content":"        }"},{"lineNumber":34,"author":{"gitId":"car155"},"content":"        Task deletedTask \u003d tasks.get(taskNum);"},{"lineNumber":35,"author":{"gitId":"car155"},"content":"        tasks.delete(taskNum);"},{"lineNumber":36,"author":{"gitId":"car155"},"content":""},{"lineNumber":37,"author":{"gitId":"car155"},"content":"        try {"},{"lineNumber":38,"author":{"gitId":"car155"},"content":"            storage.store(tasks);"},{"lineNumber":39,"author":{"gitId":"car155"},"content":"        } catch (IOException e) {"},{"lineNumber":40,"author":{"gitId":"car155"},"content":"            throw new DukeException(\"Cannot save delete. Save file not found\");"},{"lineNumber":41,"author":{"gitId":"car155"},"content":"        }"},{"lineNumber":42,"author":{"gitId":"car155"},"content":""},{"lineNumber":43,"author":{"gitId":"car155"},"content":"        String numOfTasks \u003d tasks.size() + (tasks.size() \u003e 1 ? \" tasks\" : \" task\");"},{"lineNumber":44,"author":{"gitId":"car155"},"content":"        String deleteResponse \u003d \"Noted. I\u0027ve removed this task:\\n  \" + deletedTask + \"\\nNow you have \""},{"lineNumber":45,"author":{"gitId":"car155"},"content":"                + numOfTasks + \" in the list.\";"},{"lineNumber":46,"author":{"gitId":"car155"},"content":"        return deleteResponse;"},{"lineNumber":47,"author":{"gitId":"car155"},"content":"    }"},{"lineNumber":48,"author":{"gitId":"car155"},"content":"}"}],"authorContributionMap":{"car155":48}},{"path":"src/main/java/duke/command/DoneCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"car155"},"content":"package duke.command;"},{"lineNumber":2,"author":{"gitId":"car155"},"content":""},{"lineNumber":3,"author":{"gitId":"car155"},"content":"import java.io.IOException;"},{"lineNumber":4,"author":{"gitId":"car155"},"content":""},{"lineNumber":5,"author":{"gitId":"car155"},"content":"import duke.logic.DukeException;"},{"lineNumber":6,"author":{"gitId":"car155"},"content":"import duke.logic.Storage;"},{"lineNumber":7,"author":{"gitId":"car155"},"content":"import duke.task.TaskList;"},{"lineNumber":8,"author":{"gitId":"car155"},"content":""},{"lineNumber":9,"author":{"gitId":"car155"},"content":"/**"},{"lineNumber":10,"author":{"gitId":"car155"},"content":" * Represents a command telling duke to mark a task as complete"},{"lineNumber":11,"author":{"gitId":"car155"},"content":" */"},{"lineNumber":12,"author":{"gitId":"car155"},"content":"public class DoneCommand implements Command {"},{"lineNumber":13,"author":{"gitId":"car155"},"content":"    private int taskNum;"},{"lineNumber":14,"author":{"gitId":"car155"},"content":""},{"lineNumber":15,"author":{"gitId":"car155"},"content":"    /**"},{"lineNumber":16,"author":{"gitId":"car155"},"content":"     * Constructor"},{"lineNumber":17,"author":{"gitId":"car155"},"content":"     * @param taskNum Task number of the task to be marked as complete"},{"lineNumber":18,"author":{"gitId":"car155"},"content":"     */"},{"lineNumber":19,"author":{"gitId":"car155"},"content":"    public DoneCommand(int taskNum) {"},{"lineNumber":20,"author":{"gitId":"car155"},"content":"        this.taskNum \u003d taskNum;"},{"lineNumber":21,"author":{"gitId":"car155"},"content":"    }"},{"lineNumber":22,"author":{"gitId":"car155"},"content":""},{"lineNumber":23,"author":{"gitId":"car155"},"content":"    @Override"},{"lineNumber":24,"author":{"gitId":"car155"},"content":"    public boolean isExit() {"},{"lineNumber":25,"author":{"gitId":"car155"},"content":"        return false;"},{"lineNumber":26,"author":{"gitId":"car155"},"content":"    }"},{"lineNumber":27,"author":{"gitId":"car155"},"content":""},{"lineNumber":28,"author":{"gitId":"car155"},"content":"    @Override"},{"lineNumber":29,"author":{"gitId":"car155"},"content":"    public String execute(TaskList tasks, Storage storage) {"},{"lineNumber":30,"author":{"gitId":"car155"},"content":"        if (this.taskNum \u003e tasks.size()) {"},{"lineNumber":31,"author":{"gitId":"car155"},"content":"            throw new DukeException(\"No such task exists!\");"},{"lineNumber":32,"author":{"gitId":"car155"},"content":"        }"},{"lineNumber":33,"author":{"gitId":"car155"},"content":"        tasks.done(taskNum);"},{"lineNumber":34,"author":{"gitId":"car155"},"content":""},{"lineNumber":35,"author":{"gitId":"car155"},"content":"        try {"},{"lineNumber":36,"author":{"gitId":"car155"},"content":"            storage.store(tasks);"},{"lineNumber":37,"author":{"gitId":"car155"},"content":"        } catch (IOException e) {"},{"lineNumber":38,"author":{"gitId":"car155"},"content":"            throw new DukeException(\"Cannot save tasks. Save file not found\");"},{"lineNumber":39,"author":{"gitId":"car155"},"content":"        }"},{"lineNumber":40,"author":{"gitId":"car155"},"content":""},{"lineNumber":41,"author":{"gitId":"car155"},"content":"        String doneResponse \u003d \"Nice! I\u0027ve marked this task as done:\\n  \" + tasks.get(taskNum).toString();"},{"lineNumber":42,"author":{"gitId":"car155"},"content":"        return doneResponse;"},{"lineNumber":43,"author":{"gitId":"car155"},"content":"    }"},{"lineNumber":44,"author":{"gitId":"car155"},"content":"}"}],"authorContributionMap":{"car155":44}},{"path":"src/main/java/duke/command/ExitCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"car155"},"content":"package duke.command;"},{"lineNumber":2,"author":{"gitId":"car155"},"content":""},{"lineNumber":3,"author":{"gitId":"car155"},"content":"import duke.logic.Storage;"},{"lineNumber":4,"author":{"gitId":"car155"},"content":"import duke.task.TaskList;"},{"lineNumber":5,"author":{"gitId":"car155"},"content":""},{"lineNumber":6,"author":{"gitId":"car155"},"content":"/**"},{"lineNumber":7,"author":{"gitId":"car155"},"content":" * Represents a command telling duke to close"},{"lineNumber":8,"author":{"gitId":"car155"},"content":" */"},{"lineNumber":9,"author":{"gitId":"car155"},"content":"public class ExitCommand implements Command {"},{"lineNumber":10,"author":{"gitId":"car155"},"content":""},{"lineNumber":11,"author":{"gitId":"car155"},"content":"    @Override"},{"lineNumber":12,"author":{"gitId":"car155"},"content":"    public boolean isExit() {"},{"lineNumber":13,"author":{"gitId":"car155"},"content":"        return true;"},{"lineNumber":14,"author":{"gitId":"car155"},"content":"    }"},{"lineNumber":15,"author":{"gitId":"car155"},"content":""},{"lineNumber":16,"author":{"gitId":"car155"},"content":"    @Override"},{"lineNumber":17,"author":{"gitId":"car155"},"content":"    public String execute(TaskList tasks, Storage storage) {"},{"lineNumber":18,"author":{"gitId":"car155"},"content":"        String goodbyeResponse \u003d \"Bye. Hope to see you again soon!\";"},{"lineNumber":19,"author":{"gitId":"car155"},"content":"        return goodbyeResponse;"},{"lineNumber":20,"author":{"gitId":"car155"},"content":"    }"},{"lineNumber":21,"author":{"gitId":"car155"},"content":"}"}],"authorContributionMap":{"car155":21}},{"path":"src/main/java/duke/command/FindCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"car155"},"content":"package duke.command;"},{"lineNumber":2,"author":{"gitId":"car155"},"content":""},{"lineNumber":3,"author":{"gitId":"car155"},"content":"import duke.logic.Storage;"},{"lineNumber":4,"author":{"gitId":"car155"},"content":"import duke.task.Task;"},{"lineNumber":5,"author":{"gitId":"car155"},"content":"import duke.task.TaskList;"},{"lineNumber":6,"author":{"gitId":"car155"},"content":""},{"lineNumber":7,"author":{"gitId":"car155"},"content":"/**"},{"lineNumber":8,"author":{"gitId":"car155"},"content":" * Represents a command telling Duke to find tasks containing a given word"},{"lineNumber":9,"author":{"gitId":"car155"},"content":" */"},{"lineNumber":10,"author":{"gitId":"car155"},"content":"public class FindCommand implements Command {"},{"lineNumber":11,"author":{"gitId":"car155"},"content":"    private String searchString;"},{"lineNumber":12,"author":{"gitId":"car155"},"content":""},{"lineNumber":13,"author":{"gitId":"car155"},"content":"    /**"},{"lineNumber":14,"author":{"gitId":"car155"},"content":"     * Constructor"},{"lineNumber":15,"author":{"gitId":"car155"},"content":"     * @param searchString The user input"},{"lineNumber":16,"author":{"gitId":"car155"},"content":"     */"},{"lineNumber":17,"author":{"gitId":"car155"},"content":"    public FindCommand(String searchString) {"},{"lineNumber":18,"author":{"gitId":"car155"},"content":"        this.searchString \u003d searchString;"},{"lineNumber":19,"author":{"gitId":"car155"},"content":"    }"},{"lineNumber":20,"author":{"gitId":"car155"},"content":""},{"lineNumber":21,"author":{"gitId":"car155"},"content":"    @Override"},{"lineNumber":22,"author":{"gitId":"car155"},"content":"    public boolean isExit() {"},{"lineNumber":23,"author":{"gitId":"car155"},"content":"        return false;"},{"lineNumber":24,"author":{"gitId":"car155"},"content":"    }"},{"lineNumber":25,"author":{"gitId":"car155"},"content":""},{"lineNumber":26,"author":{"gitId":"car155"},"content":"    @Override"},{"lineNumber":27,"author":{"gitId":"car155"},"content":"    public String execute(TaskList tasks, Storage storage) {"},{"lineNumber":28,"author":{"gitId":"car155"},"content":"        TaskList filteredTasks \u003d new TaskList();"},{"lineNumber":29,"author":{"gitId":"car155"},"content":""},{"lineNumber":30,"author":{"gitId":"car155"},"content":"        for (int i \u003d 1; i \u003c\u003d tasks.size(); i++) {"},{"lineNumber":31,"author":{"gitId":"car155"},"content":"            Task currTask \u003d tasks.get(i);"},{"lineNumber":32,"author":{"gitId":"car155"},"content":"            if (currTask.getDetail().indexOf(this.searchString) \u003e\u003d 0) {"},{"lineNumber":33,"author":{"gitId":"car155"},"content":"                filteredTasks.add(currTask);"},{"lineNumber":34,"author":{"gitId":"car155"},"content":"            }"},{"lineNumber":35,"author":{"gitId":"car155"},"content":"        }"},{"lineNumber":36,"author":{"gitId":"car155"},"content":""},{"lineNumber":37,"author":{"gitId":"car155"},"content":"        String findResponse \u003d filteredTasks.toString();"},{"lineNumber":38,"author":{"gitId":"car155"},"content":"        return findResponse;"},{"lineNumber":39,"author":{"gitId":"car155"},"content":"    }"},{"lineNumber":40,"author":{"gitId":"car155"},"content":"}"}],"authorContributionMap":{"car155":40}},{"path":"src/main/java/duke/command/HelpCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"car155"},"content":"package duke.command;"},{"lineNumber":2,"author":{"gitId":"car155"},"content":""},{"lineNumber":3,"author":{"gitId":"car155"},"content":"import duke.logic.Storage;"},{"lineNumber":4,"author":{"gitId":"car155"},"content":"import duke.task.TaskList;"},{"lineNumber":5,"author":{"gitId":"car155"},"content":""},{"lineNumber":6,"author":{"gitId":"car155"},"content":"/**"},{"lineNumber":7,"author":{"gitId":"car155"},"content":" * Represents a task telling Duke to help the user"},{"lineNumber":8,"author":{"gitId":"car155"},"content":" */"},{"lineNumber":9,"author":{"gitId":"car155"},"content":"public class HelpCommand implements Command {"},{"lineNumber":10,"author":{"gitId":"car155"},"content":"    private static final String HELP_ALL_RESPONSE \u003d \"List of commands:\\n\""},{"lineNumber":11,"author":{"gitId":"car155"},"content":"            + \"1. todo\\n2. deadline\\n3. event\\n4. list\\n5. done\\n6. delete\\n7. find\\n8. check\\n9. exit\\n\""},{"lineNumber":12,"author":{"gitId":"car155"},"content":"            + \"Type \u0027help \u003ccommand\u003e\u0027 in the chat to see the details!\";"},{"lineNumber":13,"author":{"gitId":"car155"},"content":"    private static final String HELP_TODO_RESPONSE \u003d \"Adds a todo task to the list\\n\\nFormat: todo \u003ctask name\u003e\";"},{"lineNumber":14,"author":{"gitId":"car155"},"content":"    private static final String HELP_DEADLINE_RESPONSE \u003d \"Adds a deadline task to the list\\n\\n\""},{"lineNumber":15,"author":{"gitId":"car155"},"content":"            + \"Format: deadline \u003ctask name\u003e /by \u003cdate in YYYY-MM-DD format\u003e\";"},{"lineNumber":16,"author":{"gitId":"car155"},"content":"    private static final String HELP_EVENT_RESPONSE \u003d \"Adds an event task to the list\\n\\n\""},{"lineNumber":17,"author":{"gitId":"car155"},"content":"            + \"Format: event \u003ctask name\u003e /at \u003cdate in YYYY-MM-DD format\u003e\";"},{"lineNumber":18,"author":{"gitId":"car155"},"content":"    private static final String HELP_LIST_RESPONSE \u003d \"Lists all the events currently in the list\\n\\nFormat: list\";"},{"lineNumber":19,"author":{"gitId":"car155"},"content":"    private static final String HELP_DONE_RESPONSE \u003d \"Marks the task as done\\n\\nFormat: done \u003ctask number\u003e\";"},{"lineNumber":20,"author":{"gitId":"car155"},"content":"    private static final String HELP_DELETE_RESPONSE \u003d \"Deletes the task\\n\\nFormat: delete \u003ctask number\u003e\";"},{"lineNumber":21,"author":{"gitId":"car155"},"content":"    private static final String HELP_FIND_RESPONSE \u003d \"Finds a task that contains the search term\\n\\n\""},{"lineNumber":22,"author":{"gitId":"car155"},"content":"            + \"Format: find \u003csearch term\u003e\";"},{"lineNumber":23,"author":{"gitId":"car155"},"content":"    private static final String HELP_CHECK_RESPONSE \u003d \"Checks all tasks on a specific date\\n\\n\""},{"lineNumber":24,"author":{"gitId":"car155"},"content":"            + \"Format: check \u003cdate in YYYY-MM-DD format\u003e\";"},{"lineNumber":25,"author":{"gitId":"car155"},"content":"    private static final String HELP_EXIT_RESPONSE \u003d \"Exits duke\\n\\nFormat: exit\";"},{"lineNumber":26,"author":{"gitId":"car155"},"content":""},{"lineNumber":27,"author":{"gitId":"car155"},"content":"    private String helpResponse;"},{"lineNumber":28,"author":{"gitId":"car155"},"content":""},{"lineNumber":29,"author":{"gitId":"car155"},"content":"    private HelpCommand(String helpResponse) {"},{"lineNumber":30,"author":{"gitId":"car155"},"content":"        this.helpResponse \u003d helpResponse;"},{"lineNumber":31,"author":{"gitId":"car155"},"content":"    }"},{"lineNumber":32,"author":{"gitId":"car155"},"content":""},{"lineNumber":33,"author":{"gitId":"car155"},"content":"    // static help command constructor"},{"lineNumber":34,"author":{"gitId":"car155"},"content":"    /**"},{"lineNumber":35,"author":{"gitId":"car155"},"content":"     * Static constructor for generic help command"},{"lineNumber":36,"author":{"gitId":"car155"},"content":"     * @return Help command with generic help response"},{"lineNumber":37,"author":{"gitId":"car155"},"content":"     */"},{"lineNumber":38,"author":{"gitId":"car155"},"content":"    public static HelpCommand getHelpAllCommand() {"},{"lineNumber":39,"author":{"gitId":"car155"},"content":"        return new HelpCommand(HELP_ALL_RESPONSE);"},{"lineNumber":40,"author":{"gitId":"car155"},"content":"    }"},{"lineNumber":41,"author":{"gitId":"car155"},"content":""},{"lineNumber":42,"author":{"gitId":"car155"},"content":"    /**"},{"lineNumber":43,"author":{"gitId":"car155"},"content":"     * Static constructor for todo help command"},{"lineNumber":44,"author":{"gitId":"car155"},"content":"     * @return Help command with help regarding the todo task"},{"lineNumber":45,"author":{"gitId":"car155"},"content":"     */"},{"lineNumber":46,"author":{"gitId":"car155"},"content":"    public static HelpCommand getHelpToDoCommand() {"},{"lineNumber":47,"author":{"gitId":"car155"},"content":"        return new HelpCommand(HELP_TODO_RESPONSE);"},{"lineNumber":48,"author":{"gitId":"car155"},"content":"    }"},{"lineNumber":49,"author":{"gitId":"car155"},"content":""},{"lineNumber":50,"author":{"gitId":"car155"},"content":"    /**"},{"lineNumber":51,"author":{"gitId":"car155"},"content":"     * Static constructor for deadline help command"},{"lineNumber":52,"author":{"gitId":"car155"},"content":"     * @return Help command with help regarding the deadline task"},{"lineNumber":53,"author":{"gitId":"car155"},"content":"     */"},{"lineNumber":54,"author":{"gitId":"car155"},"content":"    public static HelpCommand getHelpDeadlineCommand() {"},{"lineNumber":55,"author":{"gitId":"car155"},"content":"        return new HelpCommand(HELP_DEADLINE_RESPONSE);"},{"lineNumber":56,"author":{"gitId":"car155"},"content":"    }"},{"lineNumber":57,"author":{"gitId":"car155"},"content":""},{"lineNumber":58,"author":{"gitId":"car155"},"content":"    /**"},{"lineNumber":59,"author":{"gitId":"car155"},"content":"     * Static constructor for event help command"},{"lineNumber":60,"author":{"gitId":"car155"},"content":"     * @return Help command with help regarding the event task"},{"lineNumber":61,"author":{"gitId":"car155"},"content":"     */"},{"lineNumber":62,"author":{"gitId":"car155"},"content":"    public static HelpCommand getHelpEventCommand() {"},{"lineNumber":63,"author":{"gitId":"car155"},"content":"        return new HelpCommand(HELP_EVENT_RESPONSE);"},{"lineNumber":64,"author":{"gitId":"car155"},"content":"    }"},{"lineNumber":65,"author":{"gitId":"car155"},"content":""},{"lineNumber":66,"author":{"gitId":"car155"},"content":"    /**"},{"lineNumber":67,"author":{"gitId":"car155"},"content":"     * Static constructor for list help command"},{"lineNumber":68,"author":{"gitId":"car155"},"content":"     * @return Help command with help regarding the list command"},{"lineNumber":69,"author":{"gitId":"car155"},"content":"     */"},{"lineNumber":70,"author":{"gitId":"car155"},"content":"    public static HelpCommand getHelpListCommand() {"},{"lineNumber":71,"author":{"gitId":"car155"},"content":"        return new HelpCommand(HELP_LIST_RESPONSE);"},{"lineNumber":72,"author":{"gitId":"car155"},"content":"    }"},{"lineNumber":73,"author":{"gitId":"car155"},"content":""},{"lineNumber":74,"author":{"gitId":"car155"},"content":"    /**"},{"lineNumber":75,"author":{"gitId":"car155"},"content":"     * Static constructor for done help command"},{"lineNumber":76,"author":{"gitId":"car155"},"content":"     * @return Help command with help regarding the done command"},{"lineNumber":77,"author":{"gitId":"car155"},"content":"     */"},{"lineNumber":78,"author":{"gitId":"car155"},"content":"    public static HelpCommand getHelpDoneCommand() {"},{"lineNumber":79,"author":{"gitId":"car155"},"content":"        return new HelpCommand(HELP_DONE_RESPONSE);"},{"lineNumber":80,"author":{"gitId":"car155"},"content":"    }"},{"lineNumber":81,"author":{"gitId":"car155"},"content":""},{"lineNumber":82,"author":{"gitId":"car155"},"content":"    /**"},{"lineNumber":83,"author":{"gitId":"car155"},"content":"     * Static constructor for delete help command"},{"lineNumber":84,"author":{"gitId":"car155"},"content":"     * @return Help command with help regarding the delete command"},{"lineNumber":85,"author":{"gitId":"car155"},"content":"     */"},{"lineNumber":86,"author":{"gitId":"car155"},"content":"    public static HelpCommand getHelpDeleteCommand() {"},{"lineNumber":87,"author":{"gitId":"car155"},"content":"        return new HelpCommand(HELP_DELETE_RESPONSE);"},{"lineNumber":88,"author":{"gitId":"car155"},"content":"    }"},{"lineNumber":89,"author":{"gitId":"car155"},"content":""},{"lineNumber":90,"author":{"gitId":"car155"},"content":"    /**"},{"lineNumber":91,"author":{"gitId":"car155"},"content":"     * Static constructor for find help command"},{"lineNumber":92,"author":{"gitId":"car155"},"content":"     * @return Help command with help regarding the find command"},{"lineNumber":93,"author":{"gitId":"car155"},"content":"     */"},{"lineNumber":94,"author":{"gitId":"car155"},"content":"    public static HelpCommand getHelpFindCommand() {"},{"lineNumber":95,"author":{"gitId":"car155"},"content":"        return new HelpCommand(HELP_FIND_RESPONSE);"},{"lineNumber":96,"author":{"gitId":"car155"},"content":"    }"},{"lineNumber":97,"author":{"gitId":"car155"},"content":""},{"lineNumber":98,"author":{"gitId":"car155"},"content":"    /**"},{"lineNumber":99,"author":{"gitId":"car155"},"content":"     * Static constructor for check help command"},{"lineNumber":100,"author":{"gitId":"car155"},"content":"     * @return Help command with help regarding the check command"},{"lineNumber":101,"author":{"gitId":"car155"},"content":"     */"},{"lineNumber":102,"author":{"gitId":"car155"},"content":"    public static HelpCommand getHelpCheckCommand() {"},{"lineNumber":103,"author":{"gitId":"car155"},"content":"        return new HelpCommand(HELP_CHECK_RESPONSE);"},{"lineNumber":104,"author":{"gitId":"car155"},"content":"    }"},{"lineNumber":105,"author":{"gitId":"car155"},"content":""},{"lineNumber":106,"author":{"gitId":"car155"},"content":"    /**"},{"lineNumber":107,"author":{"gitId":"car155"},"content":"     * Static constructor for exit help command"},{"lineNumber":108,"author":{"gitId":"car155"},"content":"     * @return Help command with help regarding the exit command"},{"lineNumber":109,"author":{"gitId":"car155"},"content":"     */"},{"lineNumber":110,"author":{"gitId":"car155"},"content":"    public static HelpCommand getHelpExitCommand() {"},{"lineNumber":111,"author":{"gitId":"car155"},"content":"        return new HelpCommand(HELP_EXIT_RESPONSE);"},{"lineNumber":112,"author":{"gitId":"car155"},"content":"    }"},{"lineNumber":113,"author":{"gitId":"car155"},"content":""},{"lineNumber":114,"author":{"gitId":"car155"},"content":"    @Override"},{"lineNumber":115,"author":{"gitId":"car155"},"content":"    public boolean isExit() {"},{"lineNumber":116,"author":{"gitId":"car155"},"content":"        return false;"},{"lineNumber":117,"author":{"gitId":"car155"},"content":"    }"},{"lineNumber":118,"author":{"gitId":"car155"},"content":""},{"lineNumber":119,"author":{"gitId":"car155"},"content":"    @Override"},{"lineNumber":120,"author":{"gitId":"car155"},"content":"    public String execute(TaskList tasks, Storage storage) {"},{"lineNumber":121,"author":{"gitId":"car155"},"content":"        return helpResponse;"},{"lineNumber":122,"author":{"gitId":"car155"},"content":"    }"},{"lineNumber":123,"author":{"gitId":"car155"},"content":"}"}],"authorContributionMap":{"car155":123}},{"path":"src/main/java/duke/command/ListCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"car155"},"content":"package duke.command;"},{"lineNumber":2,"author":{"gitId":"car155"},"content":""},{"lineNumber":3,"author":{"gitId":"car155"},"content":"import duke.logic.Storage;"},{"lineNumber":4,"author":{"gitId":"car155"},"content":"import duke.task.TaskList;"},{"lineNumber":5,"author":{"gitId":"car155"},"content":""},{"lineNumber":6,"author":{"gitId":"car155"},"content":"/**"},{"lineNumber":7,"author":{"gitId":"car155"},"content":" * Represents a command telling duke to list all current tasks"},{"lineNumber":8,"author":{"gitId":"car155"},"content":" */"},{"lineNumber":9,"author":{"gitId":"car155"},"content":"public class ListCommand implements Command {"},{"lineNumber":10,"author":{"gitId":"car155"},"content":""},{"lineNumber":11,"author":{"gitId":"car155"},"content":"    @Override"},{"lineNumber":12,"author":{"gitId":"car155"},"content":"    public boolean isExit() {"},{"lineNumber":13,"author":{"gitId":"car155"},"content":"        return false;"},{"lineNumber":14,"author":{"gitId":"car155"},"content":"    }"},{"lineNumber":15,"author":{"gitId":"car155"},"content":""},{"lineNumber":16,"author":{"gitId":"car155"},"content":"    @Override"},{"lineNumber":17,"author":{"gitId":"car155"},"content":"    public String execute(TaskList tasks, Storage storage) {"},{"lineNumber":18,"author":{"gitId":"car155"},"content":"        String listResponse \u003d tasks.toString();"},{"lineNumber":19,"author":{"gitId":"car155"},"content":"        return listResponse;"},{"lineNumber":20,"author":{"gitId":"car155"},"content":"    }"},{"lineNumber":21,"author":{"gitId":"car155"},"content":"}"}],"authorContributionMap":{"car155":21}},{"path":"src/main/java/duke/logic/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"car155"},"content":"package duke.logic;"},{"lineNumber":2,"author":{"gitId":"car155"},"content":""},{"lineNumber":3,"author":{"gitId":"car155"},"content":"import java.io.IOException;"},{"lineNumber":4,"author":{"gitId":"car155"},"content":"import java.time.format.DateTimeParseException;"},{"lineNumber":5,"author":{"gitId":"car155"},"content":""},{"lineNumber":6,"author":{"gitId":"car155"},"content":"import duke.command.Command;"},{"lineNumber":7,"author":{"gitId":"car155"},"content":"import duke.task.TaskList;"},{"lineNumber":8,"author":{"gitId":"car155"},"content":""},{"lineNumber":9,"author":{"gitId":"car155"},"content":"/**"},{"lineNumber":10,"author":{"gitId":"car155"},"content":" * Represents a task manager"},{"lineNumber":11,"author":{"gitId":"car155"},"content":" */"},{"lineNumber":12,"author":{"gitId":"car155"},"content":"public class Duke {"},{"lineNumber":13,"author":{"gitId":"car155"},"content":"    private Storage storage;"},{"lineNumber":14,"author":{"gitId":"car155"},"content":"    private TaskList tasks;"},{"lineNumber":15,"author":{"gitId":"car155"},"content":"    private boolean isClosed;"},{"lineNumber":16,"author":{"gitId":"car155"},"content":"    private boolean isConfused;"},{"lineNumber":17,"author":{"gitId":"car155"},"content":""},{"lineNumber":18,"author":{"gitId":"car155"},"content":"    /**"},{"lineNumber":19,"author":{"gitId":"car155"},"content":"     * Class constructor with specified file path."},{"lineNumber":20,"author":{"gitId":"car155"},"content":"     * @param filePath The path to load and save from"},{"lineNumber":21,"author":{"gitId":"car155"},"content":"     */"},{"lineNumber":22,"author":{"gitId":"car155"},"content":"    public Duke(String filePath) {"},{"lineNumber":23,"author":{"gitId":"car155"},"content":"        storage \u003d new Storage(filePath);"},{"lineNumber":24,"author":{"gitId":"car155"},"content":"        isClosed \u003d false;"},{"lineNumber":25,"author":{"gitId":"car155"},"content":"        isConfused \u003d false;"},{"lineNumber":26,"author":{"gitId":"car155"},"content":"        try {"},{"lineNumber":27,"author":{"gitId":"car155"},"content":"            tasks \u003d storage.load();"},{"lineNumber":28,"author":{"gitId":"car155"},"content":"        } catch (IOException e) {"},{"lineNumber":29,"author":{"gitId":"car155"},"content":"            tasks \u003d new TaskList();"},{"lineNumber":30,"author":{"gitId":"car155"},"content":"        } catch (DateTimeParseException e) {"},{"lineNumber":31,"author":{"gitId":"car155"},"content":"            tasks \u003d new TaskList();"},{"lineNumber":32,"author":{"gitId":"car155"},"content":"        }"},{"lineNumber":33,"author":{"gitId":"car155"},"content":"    }"},{"lineNumber":34,"author":{"gitId":"car155"},"content":""},{"lineNumber":35,"author":{"gitId":"car155"},"content":"    /**"},{"lineNumber":36,"author":{"gitId":"car155"},"content":"     * Gets duke\u0027s response to the user input"},{"lineNumber":37,"author":{"gitId":"car155"},"content":"     * @param input The user input"},{"lineNumber":38,"author":{"gitId":"car155"},"content":"     * @return Duke\u0027s response"},{"lineNumber":39,"author":{"gitId":"car155"},"content":"     */"},{"lineNumber":40,"author":{"gitId":"car155"},"content":"    public String getResponse(String input) {"},{"lineNumber":41,"author":{"gitId":"car155"},"content":"        try {"},{"lineNumber":42,"author":{"gitId":"car155"},"content":"            Command c \u003d Parser.parse(input);"},{"lineNumber":43,"author":{"gitId":"car155"},"content":"            if (c.isExit()) {"},{"lineNumber":44,"author":{"gitId":"car155"},"content":"                isClosed \u003d true;"},{"lineNumber":45,"author":{"gitId":"car155"},"content":"            } else {"},{"lineNumber":46,"author":{"gitId":"car155"},"content":"                isClosed \u003d false;"},{"lineNumber":47,"author":{"gitId":"car155"},"content":"            }"},{"lineNumber":48,"author":{"gitId":"car155"},"content":"            String response \u003d c.execute(tasks, storage);"},{"lineNumber":49,"author":{"gitId":"car155"},"content":"            isConfused \u003d false;"},{"lineNumber":50,"author":{"gitId":"car155"},"content":"            return response;"},{"lineNumber":51,"author":{"gitId":"car155"},"content":"        } catch (DukeException e) {"},{"lineNumber":52,"author":{"gitId":"car155"},"content":"            isConfused \u003d true;"},{"lineNumber":53,"author":{"gitId":"car155"},"content":"            return e.getMessage();"},{"lineNumber":54,"author":{"gitId":"car155"},"content":"        }"},{"lineNumber":55,"author":{"gitId":"car155"},"content":"    }"},{"lineNumber":56,"author":{"gitId":"car155"},"content":""},{"lineNumber":57,"author":{"gitId":"car155"},"content":"    /**"},{"lineNumber":58,"author":{"gitId":"car155"},"content":"     * Gets the welcome string"},{"lineNumber":59,"author":{"gitId":"car155"},"content":"     * @return Welcome string"},{"lineNumber":60,"author":{"gitId":"car155"},"content":"     */"},{"lineNumber":61,"author":{"gitId":"car155"},"content":"    public String getWelcome() {"},{"lineNumber":62,"author":{"gitId":"car155"},"content":"        String welcomeMessage \u003d \"Hello! I\u0027m Duke\\nWhat can I do for you?\";"},{"lineNumber":63,"author":{"gitId":"car155"},"content":"        return welcomeMessage;"},{"lineNumber":64,"author":{"gitId":"car155"},"content":"    }"},{"lineNumber":65,"author":{"gitId":"car155"},"content":""},{"lineNumber":66,"author":{"gitId":"car155"},"content":"    /**"},{"lineNumber":67,"author":{"gitId":"car155"},"content":"     * Checks if previous command was an exit command"},{"lineNumber":68,"author":{"gitId":"car155"},"content":"     * @return true if previous command was an exit command and false otherwise"},{"lineNumber":69,"author":{"gitId":"car155"},"content":"     */"},{"lineNumber":70,"author":{"gitId":"car155"},"content":"    public boolean isClosed() {"},{"lineNumber":71,"author":{"gitId":"car155"},"content":"        return this.isClosed;"},{"lineNumber":72,"author":{"gitId":"car155"},"content":"    }"},{"lineNumber":73,"author":{"gitId":"car155"},"content":""},{"lineNumber":74,"author":{"gitId":"car155"},"content":"    /**"},{"lineNumber":75,"author":{"gitId":"car155"},"content":"     * Checks duke is confused by the last command"},{"lineNumber":76,"author":{"gitId":"car155"},"content":"     * @return true if duke is confused and false otherwise"},{"lineNumber":77,"author":{"gitId":"car155"},"content":"     */"},{"lineNumber":78,"author":{"gitId":"car155"},"content":"    public boolean isConfused() {"},{"lineNumber":79,"author":{"gitId":"car155"},"content":"        return this.isConfused;"},{"lineNumber":80,"author":{"gitId":"car155"},"content":"    }"},{"lineNumber":81,"author":{"gitId":"-"},"content":"}"}],"authorContributionMap":{"car155":80,"-":1}},{"path":"src/main/java/duke/logic/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"car155"},"content":"package duke.logic;"},{"lineNumber":2,"author":{"gitId":"car155"},"content":""},{"lineNumber":3,"author":{"gitId":"car155"},"content":"public class DukeException extends IllegalArgumentException {"},{"lineNumber":4,"author":{"gitId":"car155"},"content":"    private static final long serialVersionUID \u003d 50572093442410692L;"},{"lineNumber":5,"author":{"gitId":"car155"},"content":""},{"lineNumber":6,"author":{"gitId":"car155"},"content":"    public DukeException(String s) {"},{"lineNumber":7,"author":{"gitId":"car155"},"content":"        super(s);"},{"lineNumber":8,"author":{"gitId":"car155"},"content":"    }"},{"lineNumber":9,"author":{"gitId":"car155"},"content":"}"}],"authorContributionMap":{"car155":9}},{"path":"src/main/java/duke/logic/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"car155"},"content":"package duke.logic;"},{"lineNumber":2,"author":{"gitId":"car155"},"content":""},{"lineNumber":3,"author":{"gitId":"car155"},"content":"import java.time.LocalDate;"},{"lineNumber":4,"author":{"gitId":"car155"},"content":"import java.time.format.DateTimeParseException;"},{"lineNumber":5,"author":{"gitId":"car155"},"content":""},{"lineNumber":6,"author":{"gitId":"car155"},"content":"import duke.command.AddCommand;"},{"lineNumber":7,"author":{"gitId":"car155"},"content":"import duke.command.CheckCommand;"},{"lineNumber":8,"author":{"gitId":"car155"},"content":"import duke.command.Command;"},{"lineNumber":9,"author":{"gitId":"car155"},"content":"import duke.command.DeleteCommand;"},{"lineNumber":10,"author":{"gitId":"car155"},"content":"import duke.command.DoneCommand;"},{"lineNumber":11,"author":{"gitId":"car155"},"content":"import duke.command.ExitCommand;"},{"lineNumber":12,"author":{"gitId":"car155"},"content":"import duke.command.FindCommand;"},{"lineNumber":13,"author":{"gitId":"car155"},"content":"import duke.command.HelpCommand;"},{"lineNumber":14,"author":{"gitId":"car155"},"content":"import duke.command.ListCommand;"},{"lineNumber":15,"author":{"gitId":"car155"},"content":"import duke.task.Deadline;"},{"lineNumber":16,"author":{"gitId":"car155"},"content":"import duke.task.DeadlineException;"},{"lineNumber":17,"author":{"gitId":"car155"},"content":"import duke.task.Event;"},{"lineNumber":18,"author":{"gitId":"car155"},"content":"import duke.task.EventException;"},{"lineNumber":19,"author":{"gitId":"car155"},"content":"import duke.task.ToDo;"},{"lineNumber":20,"author":{"gitId":"car155"},"content":"import duke.task.ToDoException;"},{"lineNumber":21,"author":{"gitId":"car155"},"content":""},{"lineNumber":22,"author":{"gitId":"car155"},"content":"/**"},{"lineNumber":23,"author":{"gitId":"car155"},"content":" * Parser for Duke commands"},{"lineNumber":24,"author":{"gitId":"car155"},"content":" */"},{"lineNumber":25,"author":{"gitId":"car155"},"content":"public class Parser {"},{"lineNumber":26,"author":{"gitId":"car155"},"content":"    /**"},{"lineNumber":27,"author":{"gitId":"car155"},"content":"     * Parses a string input to the relevent command instruction."},{"lineNumber":28,"author":{"gitId":"car155"},"content":"     * @param input The String to be parsed"},{"lineNumber":29,"author":{"gitId":"car155"},"content":"     * @return Duke\u0027s response to the input as a String"},{"lineNumber":30,"author":{"gitId":"car155"},"content":"     * @throws DukeException"},{"lineNumber":31,"author":{"gitId":"car155"},"content":"     */"},{"lineNumber":32,"author":{"gitId":"car155"},"content":"    public static Command parse(String input) throws DukeException {"},{"lineNumber":33,"author":{"gitId":"car155"},"content":"        switch (input) {"},{"lineNumber":34,"author":{"gitId":"car155"},"content":""},{"lineNumber":35,"author":{"gitId":"car155"},"content":"        case \"list\":"},{"lineNumber":36,"author":{"gitId":"car155"},"content":"            return new ListCommand();"},{"lineNumber":37,"author":{"gitId":"car155"},"content":""},{"lineNumber":38,"author":{"gitId":"car155"},"content":"        case \"help\":"},{"lineNumber":39,"author":{"gitId":"car155"},"content":"            return HelpCommand.getHelpAllCommand();"},{"lineNumber":40,"author":{"gitId":"car155"},"content":""},{"lineNumber":41,"author":{"gitId":"car155"},"content":"        case \"exit\":"},{"lineNumber":42,"author":{"gitId":"car155"},"content":"            return new ExitCommand();"},{"lineNumber":43,"author":{"gitId":"car155"},"content":""},{"lineNumber":44,"author":{"gitId":"car155"},"content":"        default:"},{"lineNumber":45,"author":{"gitId":"car155"},"content":"            String[] splitInput \u003d input.split(\" \", 2);"},{"lineNumber":46,"author":{"gitId":"car155"},"content":""},{"lineNumber":47,"author":{"gitId":"car155"},"content":"            switch (splitInput[0]) {"},{"lineNumber":48,"author":{"gitId":"car155"},"content":"            case \"help\":"},{"lineNumber":49,"author":{"gitId":"car155"},"content":"                return getHelpCommand(splitInput[1].strip());"},{"lineNumber":50,"author":{"gitId":"car155"},"content":""},{"lineNumber":51,"author":{"gitId":"car155"},"content":"            case \"done\":"},{"lineNumber":52,"author":{"gitId":"car155"},"content":"                checkDoneFormat(splitInput);"},{"lineNumber":53,"author":{"gitId":"car155"},"content":"                return getDoneCommand(splitInput[1]);"},{"lineNumber":54,"author":{"gitId":"car155"},"content":""},{"lineNumber":55,"author":{"gitId":"car155"},"content":"            case \"delete\":"},{"lineNumber":56,"author":{"gitId":"car155"},"content":"                checkDeleteFormat(splitInput);"},{"lineNumber":57,"author":{"gitId":"car155"},"content":"                return getDeleteCommand(splitInput[1]);"},{"lineNumber":58,"author":{"gitId":"car155"},"content":""},{"lineNumber":59,"author":{"gitId":"car155"},"content":"            case \"check\":"},{"lineNumber":60,"author":{"gitId":"car155"},"content":"                checkCheckFormat(splitInput);"},{"lineNumber":61,"author":{"gitId":"car155"},"content":"                return getCheckCommand(splitInput[1]);"},{"lineNumber":62,"author":{"gitId":"car155"},"content":""},{"lineNumber":63,"author":{"gitId":"car155"},"content":"            case \"find\":"},{"lineNumber":64,"author":{"gitId":"car155"},"content":"                checkFindFormat(splitInput);"},{"lineNumber":65,"author":{"gitId":"car155"},"content":"                return new FindCommand(splitInput[1].strip());"},{"lineNumber":66,"author":{"gitId":"car155"},"content":""},{"lineNumber":67,"author":{"gitId":"car155"},"content":"            case \"todo\":"},{"lineNumber":68,"author":{"gitId":"car155"},"content":"                checkToDoFormat(splitInput);"},{"lineNumber":69,"author":{"gitId":"car155"},"content":"                ToDo todo \u003d new ToDo(splitInput[1]);"},{"lineNumber":70,"author":{"gitId":"car155"},"content":"                return new AddCommand(todo);"},{"lineNumber":71,"author":{"gitId":"car155"},"content":""},{"lineNumber":72,"author":{"gitId":"car155"},"content":"            case \"deadline\":"},{"lineNumber":73,"author":{"gitId":"car155"},"content":"                checkDeadlineFormat(splitInput);"},{"lineNumber":74,"author":{"gitId":"car155"},"content":"                Deadline deadline \u003d getDeadline(splitInput[1]);"},{"lineNumber":75,"author":{"gitId":"car155"},"content":"                return new AddCommand(deadline);"},{"lineNumber":76,"author":{"gitId":"car155"},"content":""},{"lineNumber":77,"author":{"gitId":"car155"},"content":"            case \"event\":"},{"lineNumber":78,"author":{"gitId":"car155"},"content":"                checkEventFormat(splitInput);"},{"lineNumber":79,"author":{"gitId":"car155"},"content":"                Event event \u003d getEvent(splitInput[1]);"},{"lineNumber":80,"author":{"gitId":"car155"},"content":"                return new AddCommand(event);"},{"lineNumber":81,"author":{"gitId":"car155"},"content":""},{"lineNumber":82,"author":{"gitId":"car155"},"content":"            default:"},{"lineNumber":83,"author":{"gitId":"car155"},"content":"                throw new DukeException(\"I\u0027m sorry :(\\nI don\u0027t know what that means\\n\""},{"lineNumber":84,"author":{"gitId":"car155"},"content":"                        + \"Type \u0027help\u0027 in the chat to see the list of valid commands\");"},{"lineNumber":85,"author":{"gitId":"car155"},"content":"            }"},{"lineNumber":86,"author":{"gitId":"car155"},"content":"        }"},{"lineNumber":87,"author":{"gitId":"car155"},"content":"    }"},{"lineNumber":88,"author":{"gitId":"car155"},"content":""},{"lineNumber":89,"author":{"gitId":"car155"},"content":"    private static void checkDoneFormat(String[] splitInput) throws DukeException {"},{"lineNumber":90,"author":{"gitId":"car155"},"content":"        if (splitInput.length \u003c 2) {"},{"lineNumber":91,"author":{"gitId":"car155"},"content":"            throw new DukeException(\"Please enter the task to mark as finished!\");"},{"lineNumber":92,"author":{"gitId":"car155"},"content":"        }"},{"lineNumber":93,"author":{"gitId":"car155"},"content":"    }"},{"lineNumber":94,"author":{"gitId":"car155"},"content":""},{"lineNumber":95,"author":{"gitId":"car155"},"content":"    private static void checkDeleteFormat(String[] splitInput) throws DukeException {"},{"lineNumber":96,"author":{"gitId":"car155"},"content":"        if (splitInput.length \u003c 2) {"},{"lineNumber":97,"author":{"gitId":"car155"},"content":"            throw new DukeException(\"Please enter the task to delete!\");"},{"lineNumber":98,"author":{"gitId":"car155"},"content":"        }"},{"lineNumber":99,"author":{"gitId":"car155"},"content":"    }"},{"lineNumber":100,"author":{"gitId":"car155"},"content":""},{"lineNumber":101,"author":{"gitId":"car155"},"content":"    private static void checkCheckFormat(String[] splitInput) throws DukeException {"},{"lineNumber":102,"author":{"gitId":"car155"},"content":"        if (splitInput.length \u003c 2) {"},{"lineNumber":103,"author":{"gitId":"car155"},"content":"            throw new DukeException(\"Please enter the date to check!\");"},{"lineNumber":104,"author":{"gitId":"car155"},"content":"        }"},{"lineNumber":105,"author":{"gitId":"car155"},"content":"    }"},{"lineNumber":106,"author":{"gitId":"car155"},"content":""},{"lineNumber":107,"author":{"gitId":"car155"},"content":"    private static void checkFindFormat(String[] splitInput) throws DukeException {"},{"lineNumber":108,"author":{"gitId":"car155"},"content":"        if (splitInput.length \u003c 2) {"},{"lineNumber":109,"author":{"gitId":"car155"},"content":"            throw new DukeException(\"Please enter the keyword(s) to find!\");"},{"lineNumber":110,"author":{"gitId":"car155"},"content":"        }"},{"lineNumber":111,"author":{"gitId":"car155"},"content":"    }"},{"lineNumber":112,"author":{"gitId":"car155"},"content":""},{"lineNumber":113,"author":{"gitId":"car155"},"content":"    private static void checkToDoFormat(String[] splitInput) throws ToDoException {"},{"lineNumber":114,"author":{"gitId":"car155"},"content":"        if (splitInput.length \u003c 2) {"},{"lineNumber":115,"author":{"gitId":"car155"},"content":"            throw new ToDoException(\"Todo details cannot be empty!\");"},{"lineNumber":116,"author":{"gitId":"car155"},"content":"        }"},{"lineNumber":117,"author":{"gitId":"car155"},"content":"    }"},{"lineNumber":118,"author":{"gitId":"car155"},"content":""},{"lineNumber":119,"author":{"gitId":"car155"},"content":"    private static void checkDeadlineFormat(String[] splitInput) throws DeadlineException {"},{"lineNumber":120,"author":{"gitId":"car155"},"content":"        if (splitInput.length \u003c 2) {"},{"lineNumber":121,"author":{"gitId":"car155"},"content":"            throw new DeadlineException(\"Deadline details cannot be empty!\");"},{"lineNumber":122,"author":{"gitId":"car155"},"content":"        }"},{"lineNumber":123,"author":{"gitId":"car155"},"content":"    }"},{"lineNumber":124,"author":{"gitId":"car155"},"content":""},{"lineNumber":125,"author":{"gitId":"car155"},"content":"    private static void checkEventFormat(String[] splitInput) throws EventException {"},{"lineNumber":126,"author":{"gitId":"car155"},"content":"        if (splitInput.length \u003c 2) {"},{"lineNumber":127,"author":{"gitId":"car155"},"content":"            throw new EventException(\"Event details cannot be empty!\");"},{"lineNumber":128,"author":{"gitId":"car155"},"content":"        }"},{"lineNumber":129,"author":{"gitId":"car155"},"content":"    }"},{"lineNumber":130,"author":{"gitId":"car155"},"content":""},{"lineNumber":131,"author":{"gitId":"car155"},"content":"    // get methods"},{"lineNumber":132,"author":{"gitId":"car155"},"content":"    private static Command getHelpCommand(String command) throws DukeException {"},{"lineNumber":133,"author":{"gitId":"car155"},"content":"        switch (command) {"},{"lineNumber":134,"author":{"gitId":"car155"},"content":"        case \"todo\":"},{"lineNumber":135,"author":{"gitId":"car155"},"content":"            return HelpCommand.getHelpToDoCommand();"},{"lineNumber":136,"author":{"gitId":"car155"},"content":"        case \"deadline\":"},{"lineNumber":137,"author":{"gitId":"car155"},"content":"            return HelpCommand.getHelpDeadlineCommand();"},{"lineNumber":138,"author":{"gitId":"car155"},"content":"        case \"event\":"},{"lineNumber":139,"author":{"gitId":"car155"},"content":"            return HelpCommand.getHelpEventCommand();"},{"lineNumber":140,"author":{"gitId":"car155"},"content":"        case \"list\":"},{"lineNumber":141,"author":{"gitId":"car155"},"content":"            return HelpCommand.getHelpListCommand();"},{"lineNumber":142,"author":{"gitId":"car155"},"content":"        case \"done\":"},{"lineNumber":143,"author":{"gitId":"car155"},"content":"            return HelpCommand.getHelpDoneCommand();"},{"lineNumber":144,"author":{"gitId":"car155"},"content":"        case \"delete\":"},{"lineNumber":145,"author":{"gitId":"car155"},"content":"            return HelpCommand.getHelpDeleteCommand();"},{"lineNumber":146,"author":{"gitId":"car155"},"content":"        case \"find\":"},{"lineNumber":147,"author":{"gitId":"car155"},"content":"            return HelpCommand.getHelpFindCommand();"},{"lineNumber":148,"author":{"gitId":"car155"},"content":"        case \"check\":"},{"lineNumber":149,"author":{"gitId":"car155"},"content":"            return HelpCommand.getHelpCheckCommand();"},{"lineNumber":150,"author":{"gitId":"car155"},"content":"        case \"exit\":"},{"lineNumber":151,"author":{"gitId":"car155"},"content":"            return HelpCommand.getHelpExitCommand();"},{"lineNumber":152,"author":{"gitId":"car155"},"content":"        default:"},{"lineNumber":153,"author":{"gitId":"car155"},"content":"            throw new DukeException(command + \" is not a valid command!\\n\""},{"lineNumber":154,"author":{"gitId":"car155"},"content":"                    + \"Type \u0027help\u0027 in the chat to see the list of valid commands\");"},{"lineNumber":155,"author":{"gitId":"car155"},"content":"        }"},{"lineNumber":156,"author":{"gitId":"car155"},"content":"    }"},{"lineNumber":157,"author":{"gitId":"car155"},"content":""},{"lineNumber":158,"author":{"gitId":"car155"},"content":"    private static Command getDoneCommand(String taskNumString) throws DukeException {"},{"lineNumber":159,"author":{"gitId":"car155"},"content":"        try {"},{"lineNumber":160,"author":{"gitId":"car155"},"content":"            int taskNum \u003d Integer.parseInt(taskNumString);"},{"lineNumber":161,"author":{"gitId":"car155"},"content":"            return new DoneCommand(taskNum);"},{"lineNumber":162,"author":{"gitId":"car155"},"content":"        } catch (NumberFormatException e) {"},{"lineNumber":163,"author":{"gitId":"car155"},"content":"            throw new DukeException(\"Incorrect input!\\nPlease re-enter the command in the format: done \u003ctask number\u003e\");"},{"lineNumber":164,"author":{"gitId":"car155"},"content":"        }"},{"lineNumber":165,"author":{"gitId":"car155"},"content":"    }"},{"lineNumber":166,"author":{"gitId":"car155"},"content":""},{"lineNumber":167,"author":{"gitId":"car155"},"content":"    private static Command getDeleteCommand(String taskNumString) throws DukeException {"},{"lineNumber":168,"author":{"gitId":"car155"},"content":"        try {"},{"lineNumber":169,"author":{"gitId":"car155"},"content":"            int taskNum \u003d Integer.parseInt(taskNumString);"},{"lineNumber":170,"author":{"gitId":"car155"},"content":"            return new DeleteCommand(taskNum);"},{"lineNumber":171,"author":{"gitId":"car155"},"content":"        } catch (NumberFormatException e) {"},{"lineNumber":172,"author":{"gitId":"car155"},"content":"            throw new DukeException("},{"lineNumber":173,"author":{"gitId":"car155"},"content":"                    \"Incorrect input!\\nPlease re-enter the command in the format: delete \u003ctask number\u003e\");"},{"lineNumber":174,"author":{"gitId":"car155"},"content":"        }"},{"lineNumber":175,"author":{"gitId":"car155"},"content":"    }"},{"lineNumber":176,"author":{"gitId":"car155"},"content":""},{"lineNumber":177,"author":{"gitId":"car155"},"content":"    private static Command getCheckCommand(String dateString) throws DukeException {"},{"lineNumber":178,"author":{"gitId":"car155"},"content":"        try {"},{"lineNumber":179,"author":{"gitId":"car155"},"content":"            LocalDate date \u003d LocalDate.parse(dateString);"},{"lineNumber":180,"author":{"gitId":"car155"},"content":"            return new CheckCommand(date);"},{"lineNumber":181,"author":{"gitId":"car155"},"content":"        } catch (DateTimeParseException e) {"},{"lineNumber":182,"author":{"gitId":"car155"},"content":"            throw new DukeException(\"Cannot read date!\\nPlease re-enter the command in the format: check \u003cYYYY-MM-DD\u003e\");"},{"lineNumber":183,"author":{"gitId":"car155"},"content":"        }"},{"lineNumber":184,"author":{"gitId":"car155"},"content":"    }"},{"lineNumber":185,"author":{"gitId":"car155"},"content":""},{"lineNumber":186,"author":{"gitId":"car155"},"content":"    private static Deadline getDeadline(String detail) {"},{"lineNumber":187,"author":{"gitId":"car155"},"content":"        if (detail.indexOf(\" /by \") \u003c 0) {"},{"lineNumber":188,"author":{"gitId":"car155"},"content":"            throw new DeadlineException(\"Missing a due date!\");"},{"lineNumber":189,"author":{"gitId":"car155"},"content":"        }"},{"lineNumber":190,"author":{"gitId":"car155"},"content":""},{"lineNumber":191,"author":{"gitId":"car155"},"content":"        String[] splitDetails \u003d detail.split(\" /by \");"},{"lineNumber":192,"author":{"gitId":"car155"},"content":""},{"lineNumber":193,"author":{"gitId":"car155"},"content":"        if (splitDetails.length \u003c 2) {"},{"lineNumber":194,"author":{"gitId":"car155"},"content":"            throw new DeadlineException(\"Deadline details cannot be empty!\");"},{"lineNumber":195,"author":{"gitId":"car155"},"content":"        } else if (splitDetails.length \u003e 2) {"},{"lineNumber":196,"author":{"gitId":"car155"},"content":"            throw new DeadlineException(\"Too many dates given!\");"},{"lineNumber":197,"author":{"gitId":"car155"},"content":"        } else {"},{"lineNumber":198,"author":{"gitId":"car155"},"content":"            assert(splitDetails.length \u003d\u003d 2);"},{"lineNumber":199,"author":{"gitId":"car155"},"content":""},{"lineNumber":200,"author":{"gitId":"car155"},"content":"            try {"},{"lineNumber":201,"author":{"gitId":"car155"},"content":"                LocalDate date \u003d LocalDate.parse(splitDetails[1]);"},{"lineNumber":202,"author":{"gitId":"car155"},"content":"                return new Deadline(splitDetails[0], date);"},{"lineNumber":203,"author":{"gitId":"car155"},"content":"            } catch (DateTimeParseException e) {"},{"lineNumber":204,"author":{"gitId":"car155"},"content":"                throw new DeadlineException(\"Cannot read date!\");"},{"lineNumber":205,"author":{"gitId":"car155"},"content":"            }"},{"lineNumber":206,"author":{"gitId":"car155"},"content":"        }"},{"lineNumber":207,"author":{"gitId":"car155"},"content":"    }"},{"lineNumber":208,"author":{"gitId":"car155"},"content":""},{"lineNumber":209,"author":{"gitId":"car155"},"content":"    private static Event getEvent(String detail) {"},{"lineNumber":210,"author":{"gitId":"car155"},"content":"        if (detail.indexOf(\" /at \") \u003c 0) {"},{"lineNumber":211,"author":{"gitId":"car155"},"content":"            throw new EventException(\"Missing a due date!\");"},{"lineNumber":212,"author":{"gitId":"car155"},"content":"        }"},{"lineNumber":213,"author":{"gitId":"car155"},"content":""},{"lineNumber":214,"author":{"gitId":"car155"},"content":"        String[] splitDetails \u003d detail.split(\" /at \");"},{"lineNumber":215,"author":{"gitId":"car155"},"content":""},{"lineNumber":216,"author":{"gitId":"car155"},"content":"        if (splitDetails.length \u003c 2) {"},{"lineNumber":217,"author":{"gitId":"car155"},"content":"            throw new EventException(\"Event details cannot be empty!\");"},{"lineNumber":218,"author":{"gitId":"car155"},"content":"        } else if (splitDetails.length \u003e 2) {"},{"lineNumber":219,"author":{"gitId":"car155"},"content":"            throw new EventException(\"Too many dates given!\");"},{"lineNumber":220,"author":{"gitId":"car155"},"content":"        } else {"},{"lineNumber":221,"author":{"gitId":"car155"},"content":"            assert(splitDetails.length \u003d\u003d 2);"},{"lineNumber":222,"author":{"gitId":"car155"},"content":""},{"lineNumber":223,"author":{"gitId":"car155"},"content":"            try {"},{"lineNumber":224,"author":{"gitId":"car155"},"content":"                LocalDate date \u003d LocalDate.parse(splitDetails[1]);"},{"lineNumber":225,"author":{"gitId":"car155"},"content":"                return new Event(splitDetails[0], date);"},{"lineNumber":226,"author":{"gitId":"car155"},"content":"            } catch (DateTimeParseException e) {"},{"lineNumber":227,"author":{"gitId":"car155"},"content":"                throw new EventException(\"Cannot read date!\");"},{"lineNumber":228,"author":{"gitId":"car155"},"content":"            }"},{"lineNumber":229,"author":{"gitId":"car155"},"content":"        }"},{"lineNumber":230,"author":{"gitId":"car155"},"content":"    }"},{"lineNumber":231,"author":{"gitId":"car155"},"content":""},{"lineNumber":232,"author":{"gitId":"car155"},"content":"}"}],"authorContributionMap":{"car155":232}},{"path":"src/main/java/duke/logic/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"car155"},"content":"package duke.logic;"},{"lineNumber":2,"author":{"gitId":"car155"},"content":""},{"lineNumber":3,"author":{"gitId":"car155"},"content":"import java.io.File;"},{"lineNumber":4,"author":{"gitId":"car155"},"content":"import java.io.FileNotFoundException;"},{"lineNumber":5,"author":{"gitId":"car155"},"content":"import java.io.FileWriter;"},{"lineNumber":6,"author":{"gitId":"car155"},"content":"import java.io.IOException;"},{"lineNumber":7,"author":{"gitId":"car155"},"content":"import java.time.LocalDate;"},{"lineNumber":8,"author":{"gitId":"car155"},"content":"import java.time.format.DateTimeParseException;"},{"lineNumber":9,"author":{"gitId":"car155"},"content":"import java.util.Scanner;"},{"lineNumber":10,"author":{"gitId":"car155"},"content":""},{"lineNumber":11,"author":{"gitId":"car155"},"content":"import duke.task.Deadline;"},{"lineNumber":12,"author":{"gitId":"car155"},"content":"import duke.task.Event;"},{"lineNumber":13,"author":{"gitId":"car155"},"content":"import duke.task.Task;"},{"lineNumber":14,"author":{"gitId":"car155"},"content":"import duke.task.TaskList;"},{"lineNumber":15,"author":{"gitId":"car155"},"content":"import duke.task.ToDo;"},{"lineNumber":16,"author":{"gitId":"car155"},"content":""},{"lineNumber":17,"author":{"gitId":"car155"},"content":"/**"},{"lineNumber":18,"author":{"gitId":"car155"},"content":" * Storage for Duke"},{"lineNumber":19,"author":{"gitId":"car155"},"content":" */"},{"lineNumber":20,"author":{"gitId":"car155"},"content":"public class Storage {"},{"lineNumber":21,"author":{"gitId":"car155"},"content":"    private String filePath;"},{"lineNumber":22,"author":{"gitId":"car155"},"content":""},{"lineNumber":23,"author":{"gitId":"car155"},"content":"    /**"},{"lineNumber":24,"author":{"gitId":"car155"},"content":"     * Construction with specified file path"},{"lineNumber":25,"author":{"gitId":"car155"},"content":"     * @param filePath the file path to load and save from"},{"lineNumber":26,"author":{"gitId":"car155"},"content":"     */"},{"lineNumber":27,"author":{"gitId":"car155"},"content":"    public Storage(String filePath) {"},{"lineNumber":28,"author":{"gitId":"car155"},"content":"        this.filePath \u003d filePath;"},{"lineNumber":29,"author":{"gitId":"car155"},"content":"    }"},{"lineNumber":30,"author":{"gitId":"car155"},"content":""},{"lineNumber":31,"author":{"gitId":"car155"},"content":"    /**"},{"lineNumber":32,"author":{"gitId":"car155"},"content":"     * Loads task list from the file path given during initialisation"},{"lineNumber":33,"author":{"gitId":"car155"},"content":"     * @return List of saved tasks"},{"lineNumber":34,"author":{"gitId":"car155"},"content":"     * @throws IOException"},{"lineNumber":35,"author":{"gitId":"car155"},"content":"     * @throws DateTimeParseException"},{"lineNumber":36,"author":{"gitId":"car155"},"content":"     */"},{"lineNumber":37,"author":{"gitId":"car155"},"content":"    public TaskList load() throws IOException, DateTimeParseException {"},{"lineNumber":38,"author":{"gitId":"car155"},"content":"        String fileDir \u003d getFileDir();"},{"lineNumber":39,"author":{"gitId":"car155"},"content":"        boolean fileDirExists \u003d checkDirPath(fileDir);"},{"lineNumber":40,"author":{"gitId":"car155"},"content":""},{"lineNumber":41,"author":{"gitId":"car155"},"content":"        if (!fileDirExists) {"},{"lineNumber":42,"author":{"gitId":"car155"},"content":"            makeFileDir(fileDir);"},{"lineNumber":43,"author":{"gitId":"car155"},"content":"        }"},{"lineNumber":44,"author":{"gitId":"car155"},"content":""},{"lineNumber":45,"author":{"gitId":"car155"},"content":"        File f \u003d new File(this.filePath);"},{"lineNumber":46,"author":{"gitId":"car155"},"content":""},{"lineNumber":47,"author":{"gitId":"car155"},"content":"        if (!f.exists()) {"},{"lineNumber":48,"author":{"gitId":"car155"},"content":"            f.createNewFile();"},{"lineNumber":49,"author":{"gitId":"car155"},"content":"            assert(f.exists());"},{"lineNumber":50,"author":{"gitId":"car155"},"content":"            return new TaskList();"},{"lineNumber":51,"author":{"gitId":"car155"},"content":"        } else {"},{"lineNumber":52,"author":{"gitId":"car155"},"content":"            TaskList memList \u003d readFromMem(f);"},{"lineNumber":53,"author":{"gitId":"car155"},"content":"            return memList;"},{"lineNumber":54,"author":{"gitId":"car155"},"content":"        }"},{"lineNumber":55,"author":{"gitId":"car155"},"content":"    }"},{"lineNumber":56,"author":{"gitId":"car155"},"content":""},{"lineNumber":57,"author":{"gitId":"car155"},"content":"    /**"},{"lineNumber":58,"author":{"gitId":"car155"},"content":"     * Stores task list into file path specified during initialisation"},{"lineNumber":59,"author":{"gitId":"car155"},"content":"     * @param tasks Task list to be saved"},{"lineNumber":60,"author":{"gitId":"car155"},"content":"     * @throws IOException"},{"lineNumber":61,"author":{"gitId":"car155"},"content":"     */"},{"lineNumber":62,"author":{"gitId":"car155"},"content":"    public void store(TaskList tasks) throws IOException {"},{"lineNumber":63,"author":{"gitId":"car155"},"content":"        File f \u003d new File(this.filePath);"},{"lineNumber":64,"author":{"gitId":"car155"},"content":"        assert(f.exists());"},{"lineNumber":65,"author":{"gitId":"car155"},"content":""},{"lineNumber":66,"author":{"gitId":"car155"},"content":"        FileWriter fw \u003d new FileWriter(this.filePath);"},{"lineNumber":67,"author":{"gitId":"car155"},"content":""},{"lineNumber":68,"author":{"gitId":"car155"},"content":"        for (int i \u003d 1; i \u003c\u003d tasks.size(); i++) {"},{"lineNumber":69,"author":{"gitId":"car155"},"content":"            Task currTask \u003d tasks.get(i);"},{"lineNumber":70,"author":{"gitId":"car155"},"content":"            String tag \u003d currTask.getTag();"},{"lineNumber":71,"author":{"gitId":"car155"},"content":"            int isComplete \u003d currTask.checkIsComplete() ? 1 : 0;"},{"lineNumber":72,"author":{"gitId":"car155"},"content":"            String detail \u003d currTask.getDetail();"},{"lineNumber":73,"author":{"gitId":"car155"},"content":"            String date \u003d currTask.getDate() \u003d\u003d null ? \"\" : currTask.getDate().toString();"},{"lineNumber":74,"author":{"gitId":"car155"},"content":"            fw.write(tag + \" | \" + isComplete + \" | \" + detail + \" | \" + date + \"\\n\");"},{"lineNumber":75,"author":{"gitId":"car155"},"content":"        }"},{"lineNumber":76,"author":{"gitId":"car155"},"content":"        fw.close();"},{"lineNumber":77,"author":{"gitId":"car155"},"content":"    }"},{"lineNumber":78,"author":{"gitId":"car155"},"content":""},{"lineNumber":79,"author":{"gitId":"car155"},"content":"    private String getFileDir() {"},{"lineNumber":80,"author":{"gitId":"car155"},"content":"        int lastDelimiterIndex \u003d this.filePath.lastIndexOf(\"/\");"},{"lineNumber":81,"author":{"gitId":"car155"},"content":"        if (lastDelimiterIndex \u003c 0) {"},{"lineNumber":82,"author":{"gitId":"car155"},"content":"            return \"\";"},{"lineNumber":83,"author":{"gitId":"car155"},"content":"        }"},{"lineNumber":84,"author":{"gitId":"car155"},"content":"        String fileDir \u003d this.filePath.substring(0, lastDelimiterIndex);"},{"lineNumber":85,"author":{"gitId":"car155"},"content":"        return fileDir;"},{"lineNumber":86,"author":{"gitId":"car155"},"content":"    }"},{"lineNumber":87,"author":{"gitId":"car155"},"content":""},{"lineNumber":88,"author":{"gitId":"car155"},"content":"    private boolean checkDirPath(String fileDir) {"},{"lineNumber":89,"author":{"gitId":"car155"},"content":"        File dir \u003d new File(fileDir);"},{"lineNumber":90,"author":{"gitId":"car155"},"content":"        return dir.exists();"},{"lineNumber":91,"author":{"gitId":"car155"},"content":"    }"},{"lineNumber":92,"author":{"gitId":"car155"},"content":""},{"lineNumber":93,"author":{"gitId":"car155"},"content":"    private void makeFileDir(String fileDir) {"},{"lineNumber":94,"author":{"gitId":"car155"},"content":"        File dir \u003d new File(fileDir);"},{"lineNumber":95,"author":{"gitId":"car155"},"content":"        dir.mkdirs();"},{"lineNumber":96,"author":{"gitId":"car155"},"content":"    }"},{"lineNumber":97,"author":{"gitId":"car155"},"content":""},{"lineNumber":98,"author":{"gitId":"car155"},"content":"    private TaskList readFromMem(File f) throws FileNotFoundException {"},{"lineNumber":99,"author":{"gitId":"car155"},"content":"        assert(f.exists());"},{"lineNumber":100,"author":{"gitId":"car155"},"content":""},{"lineNumber":101,"author":{"gitId":"car155"},"content":"        TaskList memList \u003d new TaskList();"},{"lineNumber":102,"author":{"gitId":"car155"},"content":""},{"lineNumber":103,"author":{"gitId":"car155"},"content":"        // fill with stored data"},{"lineNumber":104,"author":{"gitId":"car155"},"content":"        Scanner sc \u003d new Scanner(f);"},{"lineNumber":105,"author":{"gitId":"car155"},"content":"        while (sc.hasNext()) {"},{"lineNumber":106,"author":{"gitId":"car155"},"content":"            String taskString \u003d sc.nextLine();"},{"lineNumber":107,"author":{"gitId":"car155"},"content":"            Task parsedTask \u003d parseTask(taskString);"},{"lineNumber":108,"author":{"gitId":"car155"},"content":"            memList.add(parsedTask);"},{"lineNumber":109,"author":{"gitId":"car155"},"content":"        }"},{"lineNumber":110,"author":{"gitId":"car155"},"content":"        sc.close();"},{"lineNumber":111,"author":{"gitId":"car155"},"content":"        return memList;"},{"lineNumber":112,"author":{"gitId":"car155"},"content":"    }"},{"lineNumber":113,"author":{"gitId":"car155"},"content":""},{"lineNumber":114,"author":{"gitId":"car155"},"content":"    private Task parseTask(String taskString) {"},{"lineNumber":115,"author":{"gitId":"car155"},"content":"        String[] inputs \u003d taskString.split(\" \\\\| \");"},{"lineNumber":116,"author":{"gitId":"car155"},"content":"        String type \u003d inputs[0];"},{"lineNumber":117,"author":{"gitId":"car155"},"content":"        Task task;"},{"lineNumber":118,"author":{"gitId":"car155"},"content":""},{"lineNumber":119,"author":{"gitId":"car155"},"content":"        if (type.equals(\"T\")) { // todo"},{"lineNumber":120,"author":{"gitId":"car155"},"content":"            assert(inputs.length \u003d\u003d 3);"},{"lineNumber":121,"author":{"gitId":"car155"},"content":"            task \u003d new ToDo(inputs[2]);"},{"lineNumber":122,"author":{"gitId":"car155"},"content":""},{"lineNumber":123,"author":{"gitId":"car155"},"content":"        } else if (type.equals(\"D\")) { // deadline"},{"lineNumber":124,"author":{"gitId":"car155"},"content":"            assert(inputs.length \u003d\u003d 4);"},{"lineNumber":125,"author":{"gitId":"car155"},"content":"            LocalDate date \u003d LocalDate.parse(inputs[3]);"},{"lineNumber":126,"author":{"gitId":"car155"},"content":"            task \u003d new Deadline(inputs[2], date);"},{"lineNumber":127,"author":{"gitId":"car155"},"content":""},{"lineNumber":128,"author":{"gitId":"car155"},"content":"        } else { // event"},{"lineNumber":129,"author":{"gitId":"car155"},"content":"            assert(inputs.length \u003d\u003d 4);"},{"lineNumber":130,"author":{"gitId":"car155"},"content":"            LocalDate date \u003d LocalDate.parse(inputs[3]);"},{"lineNumber":131,"author":{"gitId":"car155"},"content":"            task \u003d new Event(inputs[2], date);"},{"lineNumber":132,"author":{"gitId":"car155"},"content":"        }"},{"lineNumber":133,"author":{"gitId":"car155"},"content":""},{"lineNumber":134,"author":{"gitId":"car155"},"content":"        // change status"},{"lineNumber":135,"author":{"gitId":"car155"},"content":"        if (inputs[1].equals(\"1\")) {"},{"lineNumber":136,"author":{"gitId":"car155"},"content":"            task.setCompletion(true);"},{"lineNumber":137,"author":{"gitId":"car155"},"content":"        }"},{"lineNumber":138,"author":{"gitId":"car155"},"content":""},{"lineNumber":139,"author":{"gitId":"car155"},"content":"        return task;"},{"lineNumber":140,"author":{"gitId":"car155"},"content":"    }"},{"lineNumber":141,"author":{"gitId":"car155"},"content":"}"}],"authorContributionMap":{"car155":141}},{"path":"src/main/java/duke/task/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"car155"},"content":"package duke.task;"},{"lineNumber":2,"author":{"gitId":"car155"},"content":""},{"lineNumber":3,"author":{"gitId":"car155"},"content":"import java.time.LocalDate;"},{"lineNumber":4,"author":{"gitId":"car155"},"content":"import java.time.format.DateTimeFormatter;"},{"lineNumber":5,"author":{"gitId":"car155"},"content":""},{"lineNumber":6,"author":{"gitId":"car155"},"content":"/**"},{"lineNumber":7,"author":{"gitId":"car155"},"content":" * Represents a deadline task"},{"lineNumber":8,"author":{"gitId":"car155"},"content":" */"},{"lineNumber":9,"author":{"gitId":"car155"},"content":"public class Deadline extends Task {"},{"lineNumber":10,"author":{"gitId":"car155"},"content":""},{"lineNumber":11,"author":{"gitId":"car155"},"content":"    /**"},{"lineNumber":12,"author":{"gitId":"car155"},"content":"     * Constructor"},{"lineNumber":13,"author":{"gitId":"car155"},"content":"     * @param message Deadline details"},{"lineNumber":14,"author":{"gitId":"car155"},"content":"     * @param date Due date"},{"lineNumber":15,"author":{"gitId":"car155"},"content":"     */"},{"lineNumber":16,"author":{"gitId":"car155"},"content":"    public Deadline(String message, LocalDate date) {"},{"lineNumber":17,"author":{"gitId":"car155"},"content":"        super(\"D\", message, date);"},{"lineNumber":18,"author":{"gitId":"car155"},"content":"    }"},{"lineNumber":19,"author":{"gitId":"car155"},"content":""},{"lineNumber":20,"author":{"gitId":"car155"},"content":"    @Override"},{"lineNumber":21,"author":{"gitId":"car155"},"content":"    public String toString() {"},{"lineNumber":22,"author":{"gitId":"car155"},"content":"        return super.toString() + \" (by: \" + this.date.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\")) + \")\";"},{"lineNumber":23,"author":{"gitId":"car155"},"content":"    }"},{"lineNumber":24,"author":{"gitId":"car155"},"content":"}"}],"authorContributionMap":{"car155":24}},{"path":"src/main/java/duke/task/DeadlineException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"car155"},"content":"package duke.task;"},{"lineNumber":2,"author":{"gitId":"car155"},"content":""},{"lineNumber":3,"author":{"gitId":"car155"},"content":"import duke.logic.DukeException;"},{"lineNumber":4,"author":{"gitId":"car155"},"content":""},{"lineNumber":5,"author":{"gitId":"car155"},"content":"public class DeadlineException extends DukeException {"},{"lineNumber":6,"author":{"gitId":"car155"},"content":"    private static final long serialVersionUID \u003d 5843754080272552309L;"},{"lineNumber":7,"author":{"gitId":"car155"},"content":""},{"lineNumber":8,"author":{"gitId":"car155"},"content":"    public DeadlineException(String s) {"},{"lineNumber":9,"author":{"gitId":"car155"},"content":"        super(s + \"\\nPlease re-enter the command in the format:\\ndeadline \u003ctask\u003e /by \u003cYYYY-MM-DD\u003e\");"},{"lineNumber":10,"author":{"gitId":"car155"},"content":"    }"},{"lineNumber":11,"author":{"gitId":"car155"},"content":"}"}],"authorContributionMap":{"car155":11}},{"path":"src/main/java/duke/task/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"car155"},"content":"package duke.task;"},{"lineNumber":2,"author":{"gitId":"car155"},"content":""},{"lineNumber":3,"author":{"gitId":"car155"},"content":"import java.time.LocalDate;"},{"lineNumber":4,"author":{"gitId":"car155"},"content":"import java.time.format.DateTimeFormatter;"},{"lineNumber":5,"author":{"gitId":"car155"},"content":""},{"lineNumber":6,"author":{"gitId":"car155"},"content":"/**"},{"lineNumber":7,"author":{"gitId":"car155"},"content":" * Represents an Event"},{"lineNumber":8,"author":{"gitId":"car155"},"content":" */"},{"lineNumber":9,"author":{"gitId":"car155"},"content":"public class Event extends Task {"},{"lineNumber":10,"author":{"gitId":"car155"},"content":""},{"lineNumber":11,"author":{"gitId":"car155"},"content":"    /**"},{"lineNumber":12,"author":{"gitId":"car155"},"content":"     * Constructor"},{"lineNumber":13,"author":{"gitId":"car155"},"content":"     * @param message Event details"},{"lineNumber":14,"author":{"gitId":"car155"},"content":"     * @param date Date of the event"},{"lineNumber":15,"author":{"gitId":"car155"},"content":"     */"},{"lineNumber":16,"author":{"gitId":"car155"},"content":"    public Event(String message, LocalDate date) {"},{"lineNumber":17,"author":{"gitId":"car155"},"content":"        super(\"E\", message, date);"},{"lineNumber":18,"author":{"gitId":"car155"},"content":"    }"},{"lineNumber":19,"author":{"gitId":"car155"},"content":""},{"lineNumber":20,"author":{"gitId":"car155"},"content":"    @Override"},{"lineNumber":21,"author":{"gitId":"car155"},"content":"    public String toString() {"},{"lineNumber":22,"author":{"gitId":"car155"},"content":"        return super.toString() + \" (at: \" + this.date.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\")) + \")\";"},{"lineNumber":23,"author":{"gitId":"car155"},"content":"    }"},{"lineNumber":24,"author":{"gitId":"car155"},"content":"}"}],"authorContributionMap":{"car155":24}},{"path":"src/main/java/duke/task/EventException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"car155"},"content":"package duke.task;"},{"lineNumber":2,"author":{"gitId":"car155"},"content":""},{"lineNumber":3,"author":{"gitId":"car155"},"content":"import duke.logic.DukeException;"},{"lineNumber":4,"author":{"gitId":"car155"},"content":""},{"lineNumber":5,"author":{"gitId":"car155"},"content":"public class EventException extends DukeException {"},{"lineNumber":6,"author":{"gitId":"car155"},"content":"    private static final long serialVersionUID \u003d 1L;"},{"lineNumber":7,"author":{"gitId":"car155"},"content":""},{"lineNumber":8,"author":{"gitId":"car155"},"content":"    public EventException(String s) {"},{"lineNumber":9,"author":{"gitId":"car155"},"content":"        super(s + \"\\nPlease re-enter the command in the format:\\nEvent \u003cevent name\u003e /at \u003cYYYY-MM-DD\u003e\");"},{"lineNumber":10,"author":{"gitId":"car155"},"content":"    }"},{"lineNumber":11,"author":{"gitId":"car155"},"content":"}"}],"authorContributionMap":{"car155":11}},{"path":"src/main/java/duke/task/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"car155"},"content":"package duke.task;"},{"lineNumber":2,"author":{"gitId":"car155"},"content":""},{"lineNumber":3,"author":{"gitId":"car155"},"content":"import java.time.LocalDate;"},{"lineNumber":4,"author":{"gitId":"car155"},"content":""},{"lineNumber":5,"author":{"gitId":"car155"},"content":"/**"},{"lineNumber":6,"author":{"gitId":"car155"},"content":" * Represents a task"},{"lineNumber":7,"author":{"gitId":"car155"},"content":" */"},{"lineNumber":8,"author":{"gitId":"car155"},"content":"public abstract class Task {"},{"lineNumber":9,"author":{"gitId":"car155"},"content":"    protected LocalDate date;"},{"lineNumber":10,"author":{"gitId":"car155"},"content":"    private String tag;"},{"lineNumber":11,"author":{"gitId":"car155"},"content":"    private boolean isComplete;"},{"lineNumber":12,"author":{"gitId":"car155"},"content":"    private String detail;"},{"lineNumber":13,"author":{"gitId":"car155"},"content":""},{"lineNumber":14,"author":{"gitId":"car155"},"content":"    /**"},{"lineNumber":15,"author":{"gitId":"car155"},"content":"     * Constructor"},{"lineNumber":16,"author":{"gitId":"car155"},"content":"     * @param tag Indentification for the task"},{"lineNumber":17,"author":{"gitId":"car155"},"content":"     * @param detail Details of the task"},{"lineNumber":18,"author":{"gitId":"car155"},"content":"     * @param date Date associated with the task"},{"lineNumber":19,"author":{"gitId":"car155"},"content":"     */"},{"lineNumber":20,"author":{"gitId":"car155"},"content":"    protected Task(String tag, String detail, LocalDate date) {"},{"lineNumber":21,"author":{"gitId":"car155"},"content":"        this.tag \u003d tag;"},{"lineNumber":22,"author":{"gitId":"car155"},"content":"        this.isComplete \u003d false;"},{"lineNumber":23,"author":{"gitId":"car155"},"content":"        this.detail \u003d detail;"},{"lineNumber":24,"author":{"gitId":"car155"},"content":"        this.date \u003d date;"},{"lineNumber":25,"author":{"gitId":"car155"},"content":"    }"},{"lineNumber":26,"author":{"gitId":"car155"},"content":""},{"lineNumber":27,"author":{"gitId":"car155"},"content":"    /**"},{"lineNumber":28,"author":{"gitId":"car155"},"content":"     * Sets the completion of a task"},{"lineNumber":29,"author":{"gitId":"car155"},"content":"     * @param isComplete Boolean representing if the task is done. True for done, False for not."},{"lineNumber":30,"author":{"gitId":"car155"},"content":"     */"},{"lineNumber":31,"author":{"gitId":"car155"},"content":"    public void setCompletion(boolean isComplete) {"},{"lineNumber":32,"author":{"gitId":"car155"},"content":"        this.isComplete \u003d isComplete;"},{"lineNumber":33,"author":{"gitId":"car155"},"content":"    }"},{"lineNumber":34,"author":{"gitId":"car155"},"content":""},{"lineNumber":35,"author":{"gitId":"car155"},"content":"    /**"},{"lineNumber":36,"author":{"gitId":"car155"},"content":"     * Gets the identifier tag of the task"},{"lineNumber":37,"author":{"gitId":"car155"},"content":"     * @return String representing the identifier tag"},{"lineNumber":38,"author":{"gitId":"car155"},"content":"     */"},{"lineNumber":39,"author":{"gitId":"car155"},"content":"    public String getTag() {"},{"lineNumber":40,"author":{"gitId":"car155"},"content":"        return this.tag;"},{"lineNumber":41,"author":{"gitId":"car155"},"content":"    }"},{"lineNumber":42,"author":{"gitId":"car155"},"content":""},{"lineNumber":43,"author":{"gitId":"car155"},"content":"    /**"},{"lineNumber":44,"author":{"gitId":"car155"},"content":"     * Gets the completion status of the task"},{"lineNumber":45,"author":{"gitId":"car155"},"content":"     * @return Boolean representing the completion status of the task. True if complete, false if not."},{"lineNumber":46,"author":{"gitId":"car155"},"content":"     */"},{"lineNumber":47,"author":{"gitId":"car155"},"content":"    public boolean checkIsComplete() {"},{"lineNumber":48,"author":{"gitId":"car155"},"content":"        return this.isComplete;"},{"lineNumber":49,"author":{"gitId":"car155"},"content":"    }"},{"lineNumber":50,"author":{"gitId":"car155"},"content":""},{"lineNumber":51,"author":{"gitId":"car155"},"content":"    /**"},{"lineNumber":52,"author":{"gitId":"car155"},"content":"     * Gets the details of the task"},{"lineNumber":53,"author":{"gitId":"car155"},"content":"     * @return String of the details of the task"},{"lineNumber":54,"author":{"gitId":"car155"},"content":"     */"},{"lineNumber":55,"author":{"gitId":"car155"},"content":"    public String getDetail() {"},{"lineNumber":56,"author":{"gitId":"car155"},"content":"        return this.detail;"},{"lineNumber":57,"author":{"gitId":"car155"},"content":"    }"},{"lineNumber":58,"author":{"gitId":"car155"},"content":""},{"lineNumber":59,"author":{"gitId":"car155"},"content":"    /**"},{"lineNumber":60,"author":{"gitId":"car155"},"content":"     * Gets the date of the task"},{"lineNumber":61,"author":{"gitId":"car155"},"content":"     * @return Date associated with the task"},{"lineNumber":62,"author":{"gitId":"car155"},"content":"     */"},{"lineNumber":63,"author":{"gitId":"car155"},"content":"    public LocalDate getDate() {"},{"lineNumber":64,"author":{"gitId":"car155"},"content":"        return this.date;"},{"lineNumber":65,"author":{"gitId":"car155"},"content":"    }"},{"lineNumber":66,"author":{"gitId":"car155"},"content":""},{"lineNumber":67,"author":{"gitId":"car155"},"content":"    @Override"},{"lineNumber":68,"author":{"gitId":"car155"},"content":"    public String toString() {"},{"lineNumber":69,"author":{"gitId":"car155"},"content":"        String status \u003d this.isComplete ? \"[X] \" : \"[ ] \";"},{"lineNumber":70,"author":{"gitId":"car155"},"content":"        return \"[\" + this.tag + \"]\" + status + this.detail;"},{"lineNumber":71,"author":{"gitId":"car155"},"content":"    }"},{"lineNumber":72,"author":{"gitId":"car155"},"content":"}"}],"authorContributionMap":{"car155":72}},{"path":"src/main/java/duke/task/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"car155"},"content":"package duke.task;"},{"lineNumber":2,"author":{"gitId":"car155"},"content":""},{"lineNumber":3,"author":{"gitId":"car155"},"content":"import java.util.ArrayList;"},{"lineNumber":4,"author":{"gitId":"car155"},"content":""},{"lineNumber":5,"author":{"gitId":"car155"},"content":"/**"},{"lineNumber":6,"author":{"gitId":"car155"},"content":" * Represents a list of tasks"},{"lineNumber":7,"author":{"gitId":"car155"},"content":" */"},{"lineNumber":8,"author":{"gitId":"car155"},"content":"public class TaskList {"},{"lineNumber":9,"author":{"gitId":"car155"},"content":"    private ArrayList\u003cTask\u003e tasks;"},{"lineNumber":10,"author":{"gitId":"car155"},"content":""},{"lineNumber":11,"author":{"gitId":"car155"},"content":"    /**"},{"lineNumber":12,"author":{"gitId":"car155"},"content":"     * Constructor"},{"lineNumber":13,"author":{"gitId":"car155"},"content":"     */"},{"lineNumber":14,"author":{"gitId":"car155"},"content":"    public TaskList() {"},{"lineNumber":15,"author":{"gitId":"car155"},"content":"        this.tasks \u003d new ArrayList\u003c\u003e();"},{"lineNumber":16,"author":{"gitId":"car155"},"content":"    }"},{"lineNumber":17,"author":{"gitId":"car155"},"content":""},{"lineNumber":18,"author":{"gitId":"car155"},"content":"    /**"},{"lineNumber":19,"author":{"gitId":"car155"},"content":"     * Adds task to list"},{"lineNumber":20,"author":{"gitId":"car155"},"content":"     * @param task Task to be added"},{"lineNumber":21,"author":{"gitId":"car155"},"content":"     */"},{"lineNumber":22,"author":{"gitId":"car155"},"content":"    public void add(Task task) {"},{"lineNumber":23,"author":{"gitId":"car155"},"content":"        this.tasks.add(task);"},{"lineNumber":24,"author":{"gitId":"car155"},"content":"    }"},{"lineNumber":25,"author":{"gitId":"car155"},"content":""},{"lineNumber":26,"author":{"gitId":"car155"},"content":"    /**"},{"lineNumber":27,"author":{"gitId":"car155"},"content":"     * Gets the task in the list based on its task number"},{"lineNumber":28,"author":{"gitId":"car155"},"content":"     * @param taskNum Task number of the task to be found"},{"lineNumber":29,"author":{"gitId":"car155"},"content":"     * @return Task with the given task number"},{"lineNumber":30,"author":{"gitId":"car155"},"content":"     */"},{"lineNumber":31,"author":{"gitId":"car155"},"content":"    public Task get(int taskNum) {"},{"lineNumber":32,"author":{"gitId":"car155"},"content":"        return this.tasks.get(taskNum - 1);"},{"lineNumber":33,"author":{"gitId":"car155"},"content":"    }"},{"lineNumber":34,"author":{"gitId":"car155"},"content":""},{"lineNumber":35,"author":{"gitId":"car155"},"content":"    /**"},{"lineNumber":36,"author":{"gitId":"car155"},"content":"     * Marks the task with the given task number as complete"},{"lineNumber":37,"author":{"gitId":"car155"},"content":"     * @param taskNum Task number of the task to be marked as complete"},{"lineNumber":38,"author":{"gitId":"car155"},"content":"     */"},{"lineNumber":39,"author":{"gitId":"car155"},"content":"    public void done(int taskNum) {"},{"lineNumber":40,"author":{"gitId":"car155"},"content":"        this.tasks.get(taskNum - 1).setCompletion(true);"},{"lineNumber":41,"author":{"gitId":"car155"},"content":"    }"},{"lineNumber":42,"author":{"gitId":"car155"},"content":""},{"lineNumber":43,"author":{"gitId":"car155"},"content":"    /**"},{"lineNumber":44,"author":{"gitId":"car155"},"content":"     * Removes the task with the given task number from the list"},{"lineNumber":45,"author":{"gitId":"car155"},"content":"     * @param taskNum Task number of the task to be removed"},{"lineNumber":46,"author":{"gitId":"car155"},"content":"     */"},{"lineNumber":47,"author":{"gitId":"car155"},"content":"    public void delete(int taskNum) {"},{"lineNumber":48,"author":{"gitId":"car155"},"content":"        this.tasks.remove(taskNum - 1);"},{"lineNumber":49,"author":{"gitId":"car155"},"content":"    }"},{"lineNumber":50,"author":{"gitId":"car155"},"content":""},{"lineNumber":51,"author":{"gitId":"car155"},"content":"    /**"},{"lineNumber":52,"author":{"gitId":"car155"},"content":"     * Gets the total number of tasks currently in the list"},{"lineNumber":53,"author":{"gitId":"car155"},"content":"     * @return Number of tasks in the list"},{"lineNumber":54,"author":{"gitId":"car155"},"content":"     */"},{"lineNumber":55,"author":{"gitId":"car155"},"content":"    public int size() {"},{"lineNumber":56,"author":{"gitId":"car155"},"content":"        return this.tasks.size();"},{"lineNumber":57,"author":{"gitId":"car155"},"content":"    }"},{"lineNumber":58,"author":{"gitId":"car155"},"content":""},{"lineNumber":59,"author":{"gitId":"car155"},"content":"    @Override"},{"lineNumber":60,"author":{"gitId":"car155"},"content":"    public String toString() {"},{"lineNumber":61,"author":{"gitId":"car155"},"content":"        StringBuilder taskListString \u003d new StringBuilder();"},{"lineNumber":62,"author":{"gitId":"car155"},"content":"        for (int i \u003d 1; i \u003c\u003d this.tasks.size(); i++) {"},{"lineNumber":63,"author":{"gitId":"car155"},"content":"            taskListString.append(i + \". \" + this.get(i).toString() + \"\\n\");"},{"lineNumber":64,"author":{"gitId":"car155"},"content":"        }"},{"lineNumber":65,"author":{"gitId":"car155"},"content":"        return taskListString.toString();"},{"lineNumber":66,"author":{"gitId":"car155"},"content":"    }"},{"lineNumber":67,"author":{"gitId":"car155"},"content":"}"}],"authorContributionMap":{"car155":67}},{"path":"src/main/java/duke/task/ToDo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"car155"},"content":"package duke.task;"},{"lineNumber":2,"author":{"gitId":"car155"},"content":""},{"lineNumber":3,"author":{"gitId":"car155"},"content":"/**"},{"lineNumber":4,"author":{"gitId":"car155"},"content":" * Represents a to do task"},{"lineNumber":5,"author":{"gitId":"car155"},"content":" */"},{"lineNumber":6,"author":{"gitId":"car155"},"content":"public class ToDo extends Task {"},{"lineNumber":7,"author":{"gitId":"car155"},"content":"    public ToDo(String message) {"},{"lineNumber":8,"author":{"gitId":"car155"},"content":"        super(\"T\", message, null);"},{"lineNumber":9,"author":{"gitId":"car155"},"content":"    }"},{"lineNumber":10,"author":{"gitId":"car155"},"content":"}"}],"authorContributionMap":{"car155":10}},{"path":"src/main/java/duke/task/ToDoException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"car155"},"content":"package duke.task;"},{"lineNumber":2,"author":{"gitId":"car155"},"content":""},{"lineNumber":3,"author":{"gitId":"car155"},"content":"import duke.logic.DukeException;"},{"lineNumber":4,"author":{"gitId":"car155"},"content":""},{"lineNumber":5,"author":{"gitId":"car155"},"content":"public class ToDoException extends DukeException {"},{"lineNumber":6,"author":{"gitId":"car155"},"content":"    private static final long serialVersionUID \u003d -1674176699745504837L;"},{"lineNumber":7,"author":{"gitId":"car155"},"content":""},{"lineNumber":8,"author":{"gitId":"car155"},"content":"    public ToDoException(String s) {"},{"lineNumber":9,"author":{"gitId":"car155"},"content":"        super(s + \"\\nPlease re-enter the command in the format: todo \u003ctask\u003e\");"},{"lineNumber":10,"author":{"gitId":"car155"},"content":"    }"},{"lineNumber":11,"author":{"gitId":"car155"},"content":"}"}],"authorContributionMap":{"car155":11}},{"path":"src/main/java/duke/ui/DialogBox.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"car155"},"content":"package duke.ui;"},{"lineNumber":2,"author":{"gitId":"car155"},"content":""},{"lineNumber":3,"author":{"gitId":"car155"},"content":"import java.io.IOException;"},{"lineNumber":4,"author":{"gitId":"car155"},"content":""},{"lineNumber":5,"author":{"gitId":"car155"},"content":"import javafx.fxml.FXML;"},{"lineNumber":6,"author":{"gitId":"car155"},"content":"import javafx.fxml.FXMLLoader;"},{"lineNumber":7,"author":{"gitId":"car155"},"content":"import javafx.geometry.Pos;"},{"lineNumber":8,"author":{"gitId":"car155"},"content":"import javafx.scene.control.Label;"},{"lineNumber":9,"author":{"gitId":"car155"},"content":"import javafx.scene.image.Image;"},{"lineNumber":10,"author":{"gitId":"car155"},"content":"import javafx.scene.layout.VBox;"},{"lineNumber":11,"author":{"gitId":"car155"},"content":""},{"lineNumber":12,"author":{"gitId":"car155"},"content":"/**"},{"lineNumber":13,"author":{"gitId":"car155"},"content":" * An example of a custom control using FXML."},{"lineNumber":14,"author":{"gitId":"car155"},"content":" * This control represents a dialog box consisting of an ImageView to represent the speaker\u0027s face and a label"},{"lineNumber":15,"author":{"gitId":"car155"},"content":" * containing text from the speaker."},{"lineNumber":16,"author":{"gitId":"car155"},"content":" */"},{"lineNumber":17,"author":{"gitId":"car155"},"content":"public class DialogBox extends VBox {"},{"lineNumber":18,"author":{"gitId":"car155"},"content":"    @FXML"},{"lineNumber":19,"author":{"gitId":"car155"},"content":"    private Label username;"},{"lineNumber":20,"author":{"gitId":"car155"},"content":""},{"lineNumber":21,"author":{"gitId":"car155"},"content":"    private DialogBox(String name, InnerDialogBox idb) {"},{"lineNumber":22,"author":{"gitId":"car155"},"content":"        try {"},{"lineNumber":23,"author":{"gitId":"car155"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(\"/view/DialogBox.fxml\"));"},{"lineNumber":24,"author":{"gitId":"car155"},"content":"            fxmlLoader.setController(this);"},{"lineNumber":25,"author":{"gitId":"car155"},"content":"            fxmlLoader.setRoot(this);"},{"lineNumber":26,"author":{"gitId":"car155"},"content":"            fxmlLoader.load();"},{"lineNumber":27,"author":{"gitId":"car155"},"content":"        } catch (IOException e) {"},{"lineNumber":28,"author":{"gitId":"car155"},"content":"            e.printStackTrace();"},{"lineNumber":29,"author":{"gitId":"car155"},"content":"        }"},{"lineNumber":30,"author":{"gitId":"car155"},"content":"        username.setText(name);"},{"lineNumber":31,"author":{"gitId":"car155"},"content":"        this.getChildren().addAll(idb);"},{"lineNumber":32,"author":{"gitId":"car155"},"content":"    }"},{"lineNumber":33,"author":{"gitId":"car155"},"content":""},{"lineNumber":34,"author":{"gitId":"car155"},"content":""},{"lineNumber":35,"author":{"gitId":"car155"},"content":"    public static DialogBox getUserDialog(String text, Image img, String name) {"},{"lineNumber":36,"author":{"gitId":"car155"},"content":"        return new DialogBox(name, InnerDialogBox.getInnerUserDialog(text, img));"},{"lineNumber":37,"author":{"gitId":"car155"},"content":"    }"},{"lineNumber":38,"author":{"gitId":"car155"},"content":""},{"lineNumber":39,"author":{"gitId":"car155"},"content":"    public static DialogBox getDukeDialog(String text, Image img, String name) {"},{"lineNumber":40,"author":{"gitId":"car155"},"content":"        DialogBox db \u003d new DialogBox(name, InnerDialogBox.getInnerDukeDialog(text, img));"},{"lineNumber":41,"author":{"gitId":"car155"},"content":"        db.setAlignment(Pos.TOP_LEFT);"},{"lineNumber":42,"author":{"gitId":"car155"},"content":"        return db;"},{"lineNumber":43,"author":{"gitId":"car155"},"content":"    }"},{"lineNumber":44,"author":{"gitId":"car155"},"content":"}"}],"authorContributionMap":{"car155":44}},{"path":"src/main/java/duke/ui/InnerDialogBox.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"car155"},"content":"package duke.ui;"},{"lineNumber":2,"author":{"gitId":"car155"},"content":""},{"lineNumber":3,"author":{"gitId":"car155"},"content":"import java.io.IOException;"},{"lineNumber":4,"author":{"gitId":"car155"},"content":"import java.util.Collections;"},{"lineNumber":5,"author":{"gitId":"car155"},"content":""},{"lineNumber":6,"author":{"gitId":"car155"},"content":"import javafx.collections.FXCollections;"},{"lineNumber":7,"author":{"gitId":"car155"},"content":"import javafx.collections.ObservableList;"},{"lineNumber":8,"author":{"gitId":"car155"},"content":"import javafx.fxml.FXML;"},{"lineNumber":9,"author":{"gitId":"car155"},"content":"import javafx.fxml.FXMLLoader;"},{"lineNumber":10,"author":{"gitId":"car155"},"content":"import javafx.geometry.Pos;"},{"lineNumber":11,"author":{"gitId":"car155"},"content":"import javafx.scene.Node;"},{"lineNumber":12,"author":{"gitId":"car155"},"content":"import javafx.scene.control.Label;"},{"lineNumber":13,"author":{"gitId":"car155"},"content":"import javafx.scene.image.Image;"},{"lineNumber":14,"author":{"gitId":"car155"},"content":"import javafx.scene.image.ImageView;"},{"lineNumber":15,"author":{"gitId":"car155"},"content":"import javafx.scene.layout.HBox;"},{"lineNumber":16,"author":{"gitId":"car155"},"content":""},{"lineNumber":17,"author":{"gitId":"car155"},"content":"/**"},{"lineNumber":18,"author":{"gitId":"car155"},"content":" * An example of a custom control using FXML."},{"lineNumber":19,"author":{"gitId":"car155"},"content":" * This control represents a dialog box consisting of an ImageView to represent the speaker\u0027s face and a label"},{"lineNumber":20,"author":{"gitId":"car155"},"content":" * containing text from the speaker."},{"lineNumber":21,"author":{"gitId":"car155"},"content":" */"},{"lineNumber":22,"author":{"gitId":"car155"},"content":"public class InnerDialogBox extends HBox {"},{"lineNumber":23,"author":{"gitId":"car155"},"content":"    @FXML"},{"lineNumber":24,"author":{"gitId":"car155"},"content":"    private Label dialog;"},{"lineNumber":25,"author":{"gitId":"car155"},"content":"    @FXML"},{"lineNumber":26,"author":{"gitId":"car155"},"content":"    private ImageView displayPicture;"},{"lineNumber":27,"author":{"gitId":"car155"},"content":""},{"lineNumber":28,"author":{"gitId":"car155"},"content":"    private InnerDialogBox(String text, Image img) {"},{"lineNumber":29,"author":{"gitId":"car155"},"content":"        try {"},{"lineNumber":30,"author":{"gitId":"car155"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(\"/view/InnerDialogBox.fxml\"));"},{"lineNumber":31,"author":{"gitId":"car155"},"content":"            fxmlLoader.setController(this);"},{"lineNumber":32,"author":{"gitId":"car155"},"content":"            fxmlLoader.setRoot(this);"},{"lineNumber":33,"author":{"gitId":"car155"},"content":"            fxmlLoader.load();"},{"lineNumber":34,"author":{"gitId":"car155"},"content":"        } catch (IOException e) {"},{"lineNumber":35,"author":{"gitId":"car155"},"content":"            e.printStackTrace();"},{"lineNumber":36,"author":{"gitId":"car155"},"content":"        }"},{"lineNumber":37,"author":{"gitId":"car155"},"content":"        dialog.setText(text);"},{"lineNumber":38,"author":{"gitId":"car155"},"content":"        displayPicture.setImage(img);"},{"lineNumber":39,"author":{"gitId":"car155"},"content":"    }"},{"lineNumber":40,"author":{"gitId":"car155"},"content":""},{"lineNumber":41,"author":{"gitId":"car155"},"content":"    /**"},{"lineNumber":42,"author":{"gitId":"car155"},"content":"     * Flips the dialog box such that the ImageView is on the left and text on the right."},{"lineNumber":43,"author":{"gitId":"car155"},"content":"     */"},{"lineNumber":44,"author":{"gitId":"car155"},"content":"    private void flip() {"},{"lineNumber":45,"author":{"gitId":"car155"},"content":"        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());"},{"lineNumber":46,"author":{"gitId":"car155"},"content":"        Collections.reverse(tmp);"},{"lineNumber":47,"author":{"gitId":"car155"},"content":"        this.getChildren().setAll(tmp);"},{"lineNumber":48,"author":{"gitId":"car155"},"content":"        setAlignment(Pos.TOP_LEFT);"},{"lineNumber":49,"author":{"gitId":"car155"},"content":"    }"},{"lineNumber":50,"author":{"gitId":"car155"},"content":""},{"lineNumber":51,"author":{"gitId":"car155"},"content":"    public static InnerDialogBox getInnerUserDialog(String text, Image img) {"},{"lineNumber":52,"author":{"gitId":"car155"},"content":"        return new InnerDialogBox(text, img);"},{"lineNumber":53,"author":{"gitId":"car155"},"content":"    }"},{"lineNumber":54,"author":{"gitId":"car155"},"content":""},{"lineNumber":55,"author":{"gitId":"car155"},"content":"    public static InnerDialogBox getInnerDukeDialog(String text, Image img) {"},{"lineNumber":56,"author":{"gitId":"car155"},"content":"        var db \u003d new InnerDialogBox(text, img);"},{"lineNumber":57,"author":{"gitId":"car155"},"content":"        db.flip();"},{"lineNumber":58,"author":{"gitId":"car155"},"content":"        return db;"},{"lineNumber":59,"author":{"gitId":"car155"},"content":"    }"},{"lineNumber":60,"author":{"gitId":"car155"},"content":"}"}],"authorContributionMap":{"car155":60}},{"path":"src/main/java/duke/ui/MainWindow.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"car155"},"content":"package duke.ui;"},{"lineNumber":2,"author":{"gitId":"car155"},"content":""},{"lineNumber":3,"author":{"gitId":"car155"},"content":"import duke.logic.Duke;"},{"lineNumber":4,"author":{"gitId":"car155"},"content":"import javafx.animation.PauseTransition;"},{"lineNumber":5,"author":{"gitId":"car155"},"content":"import javafx.fxml.FXML;"},{"lineNumber":6,"author":{"gitId":"car155"},"content":"import javafx.scene.control.Button;"},{"lineNumber":7,"author":{"gitId":"car155"},"content":"import javafx.scene.control.ScrollPane;"},{"lineNumber":8,"author":{"gitId":"car155"},"content":"import javafx.scene.control.TextField;"},{"lineNumber":9,"author":{"gitId":"car155"},"content":"import javafx.scene.image.Image;"},{"lineNumber":10,"author":{"gitId":"car155"},"content":"import javafx.scene.layout.AnchorPane;"},{"lineNumber":11,"author":{"gitId":"car155"},"content":"import javafx.scene.layout.VBox;"},{"lineNumber":12,"author":{"gitId":"car155"},"content":"import javafx.stage.Stage;"},{"lineNumber":13,"author":{"gitId":"car155"},"content":"import javafx.util.Duration;"},{"lineNumber":14,"author":{"gitId":"car155"},"content":""},{"lineNumber":15,"author":{"gitId":"car155"},"content":"/**"},{"lineNumber":16,"author":{"gitId":"car155"},"content":" * Controller for MainWindow. Provides the layout for the other controls."},{"lineNumber":17,"author":{"gitId":"car155"},"content":" */"},{"lineNumber":18,"author":{"gitId":"car155"},"content":"public class MainWindow extends AnchorPane {"},{"lineNumber":19,"author":{"gitId":"car155"},"content":"    @FXML"},{"lineNumber":20,"author":{"gitId":"car155"},"content":"    private ScrollPane scrollPane;"},{"lineNumber":21,"author":{"gitId":"car155"},"content":"    @FXML"},{"lineNumber":22,"author":{"gitId":"car155"},"content":"    private VBox dialogContainer;"},{"lineNumber":23,"author":{"gitId":"car155"},"content":"    @FXML"},{"lineNumber":24,"author":{"gitId":"car155"},"content":"    private TextField userInput;"},{"lineNumber":25,"author":{"gitId":"car155"},"content":"    @FXML"},{"lineNumber":26,"author":{"gitId":"car155"},"content":"    private Button sendButton;"},{"lineNumber":27,"author":{"gitId":"car155"},"content":""},{"lineNumber":28,"author":{"gitId":"car155"},"content":"    private Duke duke;"},{"lineNumber":29,"author":{"gitId":"car155"},"content":"    private Stage stage;"},{"lineNumber":30,"author":{"gitId":"car155"},"content":""},{"lineNumber":31,"author":{"gitId":"car155"},"content":"    private Image userImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaUser.png\"));"},{"lineNumber":32,"author":{"gitId":"car155"},"content":"    private Image dukeImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaDuke.png\"));"},{"lineNumber":33,"author":{"gitId":"car155"},"content":"    private Image dukeConfusedImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaDukeConfused.png\"));"},{"lineNumber":34,"author":{"gitId":"car155"},"content":""},{"lineNumber":35,"author":{"gitId":"car155"},"content":"    private String dukeName \u003d \"Duke\";"},{"lineNumber":36,"author":{"gitId":"car155"},"content":"    private String userName \u003d \"You\";"},{"lineNumber":37,"author":{"gitId":"car155"},"content":""},{"lineNumber":38,"author":{"gitId":"car155"},"content":"    /**"},{"lineNumber":39,"author":{"gitId":"car155"},"content":"     * Initialises MainWindow"},{"lineNumber":40,"author":{"gitId":"car155"},"content":"     */"},{"lineNumber":41,"author":{"gitId":"car155"},"content":"    @FXML"},{"lineNumber":42,"author":{"gitId":"car155"},"content":"    public void initialize() {"},{"lineNumber":43,"author":{"gitId":"car155"},"content":"        scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());"},{"lineNumber":44,"author":{"gitId":"car155"},"content":"    }"},{"lineNumber":45,"author":{"gitId":"car155"},"content":""},{"lineNumber":46,"author":{"gitId":"car155"},"content":"    /**"},{"lineNumber":47,"author":{"gitId":"car155"},"content":"     * Sets the duke used by MainWindow to the given duke"},{"lineNumber":48,"author":{"gitId":"car155"},"content":"     * @param d The duke to be set"},{"lineNumber":49,"author":{"gitId":"car155"},"content":"     */"},{"lineNumber":50,"author":{"gitId":"car155"},"content":"    public void setDuke(Duke d) {"},{"lineNumber":51,"author":{"gitId":"car155"},"content":"        duke \u003d d;"},{"lineNumber":52,"author":{"gitId":"car155"},"content":"    }"},{"lineNumber":53,"author":{"gitId":"car155"},"content":""},{"lineNumber":54,"author":{"gitId":"car155"},"content":"    /**"},{"lineNumber":55,"author":{"gitId":"car155"},"content":"     * Sets the Stage MainWindow is set in"},{"lineNumber":56,"author":{"gitId":"car155"},"content":"     * @param s The stage to be set"},{"lineNumber":57,"author":{"gitId":"car155"},"content":"     */"},{"lineNumber":58,"author":{"gitId":"car155"},"content":"    public void setStage(Stage s) {"},{"lineNumber":59,"author":{"gitId":"car155"},"content":"        stage \u003d s;"},{"lineNumber":60,"author":{"gitId":"car155"},"content":"    }"},{"lineNumber":61,"author":{"gitId":"car155"},"content":""},{"lineNumber":62,"author":{"gitId":"car155"},"content":"    /**"},{"lineNumber":63,"author":{"gitId":"car155"},"content":"     * Tells duke to greet the user"},{"lineNumber":64,"author":{"gitId":"car155"},"content":"     */"},{"lineNumber":65,"author":{"gitId":"car155"},"content":"    public void greet() {"},{"lineNumber":66,"author":{"gitId":"car155"},"content":"        String welcome \u003d duke.getWelcome();"},{"lineNumber":67,"author":{"gitId":"car155"},"content":"        dialogContainer.getChildren().addAll("},{"lineNumber":68,"author":{"gitId":"car155"},"content":"                DialogBox.getDukeDialog(welcome, dukeImage, dukeName)"},{"lineNumber":69,"author":{"gitId":"car155"},"content":"        );"},{"lineNumber":70,"author":{"gitId":"car155"},"content":"    }"},{"lineNumber":71,"author":{"gitId":"car155"},"content":""},{"lineNumber":72,"author":{"gitId":"car155"},"content":"    /**"},{"lineNumber":73,"author":{"gitId":"car155"},"content":"     * Creates two dialog boxes, one echoing user input and the other containing Duke\u0027s reply and then appends them to"},{"lineNumber":74,"author":{"gitId":"car155"},"content":"     * the dialog container. Clears the user input after processing."},{"lineNumber":75,"author":{"gitId":"car155"},"content":"     */"},{"lineNumber":76,"author":{"gitId":"car155"},"content":"    @FXML"},{"lineNumber":77,"author":{"gitId":"car155"},"content":"    private void handleUserInput() throws InterruptedException {"},{"lineNumber":78,"author":{"gitId":"car155"},"content":"        String input \u003d userInput.getText();"},{"lineNumber":79,"author":{"gitId":"car155"},"content":"        String response \u003d duke.getResponse(input);"},{"lineNumber":80,"author":{"gitId":"car155"},"content":"        dialogContainer.getChildren().addAll("},{"lineNumber":81,"author":{"gitId":"car155"},"content":"                DialogBox.getUserDialog(input, userImage, userName),"},{"lineNumber":82,"author":{"gitId":"car155"},"content":"                DialogBox.getDukeDialog(response, getDukeImage(), dukeName)"},{"lineNumber":83,"author":{"gitId":"car155"},"content":"        );"},{"lineNumber":84,"author":{"gitId":"car155"},"content":"        userInput.clear();"},{"lineNumber":85,"author":{"gitId":"car155"},"content":"        if (duke.isClosed()) {"},{"lineNumber":86,"author":{"gitId":"car155"},"content":"            exit();"},{"lineNumber":87,"author":{"gitId":"car155"},"content":"        }"},{"lineNumber":88,"author":{"gitId":"car155"},"content":"    }"},{"lineNumber":89,"author":{"gitId":"car155"},"content":""},{"lineNumber":90,"author":{"gitId":"car155"},"content":"    private void exit() {"},{"lineNumber":91,"author":{"gitId":"car155"},"content":"        PauseTransition delay \u003d new PauseTransition(Duration.seconds(1.5));"},{"lineNumber":92,"author":{"gitId":"car155"},"content":"        delay.setOnFinished(event -\u003e {"},{"lineNumber":93,"author":{"gitId":"car155"},"content":"            stage.close();"},{"lineNumber":94,"author":{"gitId":"car155"},"content":"        });"},{"lineNumber":95,"author":{"gitId":"car155"},"content":"        delay.play();"},{"lineNumber":96,"author":{"gitId":"car155"},"content":"    }"},{"lineNumber":97,"author":{"gitId":"car155"},"content":""},{"lineNumber":98,"author":{"gitId":"car155"},"content":"    private Image getDukeImage() {"},{"lineNumber":99,"author":{"gitId":"car155"},"content":"        if (duke.isConfused()) {"},{"lineNumber":100,"author":{"gitId":"car155"},"content":"            return dukeConfusedImage;"},{"lineNumber":101,"author":{"gitId":"car155"},"content":"        } else {"},{"lineNumber":102,"author":{"gitId":"car155"},"content":"            return dukeImage;"},{"lineNumber":103,"author":{"gitId":"car155"},"content":"        }"},{"lineNumber":104,"author":{"gitId":"car155"},"content":"    }"},{"lineNumber":105,"author":{"gitId":"car155"},"content":"}"}],"authorContributionMap":{"car155":105}},{"path":"src/main/resources/view/DialogBox.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"car155"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"},{"lineNumber":2,"author":{"gitId":"car155"},"content":""},{"lineNumber":3,"author":{"gitId":"car155"},"content":"\u003c?import javafx.geometry.Insets?\u003e"},{"lineNumber":4,"author":{"gitId":"car155"},"content":"\u003c?import javafx.scene.control.Label?\u003e"},{"lineNumber":5,"author":{"gitId":"car155"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e"},{"lineNumber":6,"author":{"gitId":"car155"},"content":"\u003c?import javafx.scene.text.Font?\u003e"},{"lineNumber":7,"author":{"gitId":"car155"},"content":""},{"lineNumber":8,"author":{"gitId":"car155"},"content":"\u003cfx:root alignment\u003d\"TOP_RIGHT\" type\u003d\"VBox\" xmlns\u003d\"http://javafx.com/javafx/15.0.1\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e"},{"lineNumber":9,"author":{"gitId":"car155"},"content":"  \u003cchildren\u003e"},{"lineNumber":10,"author":{"gitId":"car155"},"content":"    \u003cLabel fx:id\u003d\"username\" style\u003d\"-fx-padding: 0 5 5 5;\" text\u003d\"Label\"/\u003e"},{"lineNumber":11,"author":{"gitId":"car155"},"content":"  \u003c/children\u003e"},{"lineNumber":12,"author":{"gitId":"car155"},"content":"  \u003cpadding\u003e"},{"lineNumber":13,"author":{"gitId":"car155"},"content":"    \u003cInsets bottom\u003d\"15.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"10.0\" /\u003e"},{"lineNumber":14,"author":{"gitId":"car155"},"content":"  \u003c/padding\u003e"},{"lineNumber":15,"author":{"gitId":"car155"},"content":"\u003c/fx:root\u003e"}],"authorContributionMap":{"car155":15}},{"path":"src/main/resources/view/InnerDialogBox.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"car155"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"},{"lineNumber":2,"author":{"gitId":"car155"},"content":""},{"lineNumber":3,"author":{"gitId":"car155"},"content":"\u003c?import javafx.geometry.Insets?\u003e"},{"lineNumber":4,"author":{"gitId":"car155"},"content":"\u003c?import javafx.scene.control.Label?\u003e"},{"lineNumber":5,"author":{"gitId":"car155"},"content":"\u003c?import javafx.scene.image.ImageView?\u003e"},{"lineNumber":6,"author":{"gitId":"car155"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e"},{"lineNumber":7,"author":{"gitId":"car155"},"content":""},{"lineNumber":8,"author":{"gitId":"car155"},"content":"\u003cfx:root alignment\u003d\"TOP_RIGHT\" maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\" prefWidth\u003d\"400.0\" type\u003d\"HBox\" xmlns\u003d\"http://javafx.com/javafx/15.0.1\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e"},{"lineNumber":9,"author":{"gitId":"car155"},"content":"    \u003cchildren\u003e"},{"lineNumber":10,"author":{"gitId":"car155"},"content":"        \u003cLabel fx:id\u003d\"dialog\" style\u003d\"-fx-padding: 0 5 0 5;\" text\u003d\"Label\" wrapText\u003d\"true\" /\u003e"},{"lineNumber":11,"author":{"gitId":"car155"},"content":"        \u003cImageView fx:id\u003d\"displayPicture\" fitHeight\u003d\"99.0\" fitWidth\u003d\"99.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\" /\u003e"},{"lineNumber":12,"author":{"gitId":"car155"},"content":"    \u003c/children\u003e"},{"lineNumber":13,"author":{"gitId":"car155"},"content":"\u003c/fx:root\u003e"}],"authorContributionMap":{"car155":13}},{"path":"src/main/resources/view/MainWindow.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"car155"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"},{"lineNumber":2,"author":{"gitId":"car155"},"content":""},{"lineNumber":3,"author":{"gitId":"car155"},"content":"\u003c?import javafx.scene.control.Button?\u003e"},{"lineNumber":4,"author":{"gitId":"car155"},"content":"\u003c?import javafx.scene.control.ScrollPane?\u003e"},{"lineNumber":5,"author":{"gitId":"car155"},"content":"\u003c?import javafx.scene.control.TextField?\u003e"},{"lineNumber":6,"author":{"gitId":"car155"},"content":"\u003c?import javafx.scene.layout.AnchorPane?\u003e"},{"lineNumber":7,"author":{"gitId":"car155"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e"},{"lineNumber":8,"author":{"gitId":"car155"},"content":""},{"lineNumber":9,"author":{"gitId":"car155"},"content":"\u003cAnchorPane maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefHeight\u003d\"600.0\" prefWidth\u003d\"400.0\" xmlns\u003d\"http://javafx.com/javafx/15.0.1\" xmlns:fx\u003d\"http://javafx.com/fxml/1\" fx:controller\u003d\"duke.ui.MainWindow\"\u003e"},{"lineNumber":10,"author":{"gitId":"car155"},"content":"  \u003cchildren\u003e"},{"lineNumber":11,"author":{"gitId":"car155"},"content":"    \u003cTextField fx:id\u003d\"userInput\" layoutY\u003d\"558.0\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"324.0\" promptText\u003d\"Send Duke a message!\" AnchorPane.bottomAnchor\u003d\"1.0\" /\u003e"},{"lineNumber":12,"author":{"gitId":"car155"},"content":"    \u003cButton fx:id\u003d\"sendButton\" layoutX\u003d\"324.0\" layoutY\u003d\"558.0\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"76.0\" text\u003d\"Send\" /\u003e"},{"lineNumber":13,"author":{"gitId":"car155"},"content":"    \u003cScrollPane fx:id\u003d\"scrollPane\" hbarPolicy\u003d\"NEVER\" hvalue\u003d\"1.0\" prefHeight\u003d\"557.0\" prefWidth\u003d\"400.0\" vbarPolicy\u003d\"ALWAYS\" vvalue\u003d\"1.0\"\u003e"},{"lineNumber":14,"author":{"gitId":"car155"},"content":"      \u003ccontent\u003e"},{"lineNumber":15,"author":{"gitId":"car155"},"content":"        \u003cVBox fx:id\u003d\"dialogContainer\" prefWidth\u003d\"388.0\" /\u003e"},{"lineNumber":16,"author":{"gitId":"car155"},"content":"      \u003c/content\u003e"},{"lineNumber":17,"author":{"gitId":"car155"},"content":"    \u003c/ScrollPane\u003e"},{"lineNumber":18,"author":{"gitId":"car155"},"content":"  \u003c/children\u003e"},{"lineNumber":19,"author":{"gitId":"car155"},"content":"\u003c/AnchorPane\u003e"}],"authorContributionMap":{"car155":19}},{"path":"src/test/java/duke/DeadlineTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"car155"},"content":"package duke;"},{"lineNumber":2,"author":{"gitId":"car155"},"content":""},{"lineNumber":3,"author":{"gitId":"car155"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;"},{"lineNumber":4,"author":{"gitId":"car155"},"content":""},{"lineNumber":5,"author":{"gitId":"car155"},"content":"import java.time.LocalDate;"},{"lineNumber":6,"author":{"gitId":"car155"},"content":""},{"lineNumber":7,"author":{"gitId":"car155"},"content":"import org.junit.jupiter.api.Test;"},{"lineNumber":8,"author":{"gitId":"car155"},"content":""},{"lineNumber":9,"author":{"gitId":"car155"},"content":"import duke.task.Deadline;"},{"lineNumber":10,"author":{"gitId":"car155"},"content":""},{"lineNumber":11,"author":{"gitId":"car155"},"content":"public class DeadlineTest {"},{"lineNumber":12,"author":{"gitId":"car155"},"content":"    @Test"},{"lineNumber":13,"author":{"gitId":"car155"},"content":"    public void initTest() {"},{"lineNumber":14,"author":{"gitId":"car155"},"content":"        LocalDate date \u003d LocalDate.parse(\"2021-03-03\");"},{"lineNumber":15,"author":{"gitId":"car155"},"content":"        Deadline d \u003d new Deadline(\"Test\", date);"},{"lineNumber":16,"author":{"gitId":"car155"},"content":"        assertEquals(d.toString(), \"[D][ ] Test (by: Mar 3 2021)\");"},{"lineNumber":17,"author":{"gitId":"car155"},"content":"    }"},{"lineNumber":18,"author":{"gitId":"car155"},"content":""},{"lineNumber":19,"author":{"gitId":"car155"},"content":"    @Test"},{"lineNumber":20,"author":{"gitId":"car155"},"content":"    public void doneTest() {"},{"lineNumber":21,"author":{"gitId":"car155"},"content":"        LocalDate date \u003d LocalDate.parse(\"2021-03-03\");"},{"lineNumber":22,"author":{"gitId":"car155"},"content":"        Deadline d \u003d new Deadline(\"Test\", date);"},{"lineNumber":23,"author":{"gitId":"car155"},"content":"        d.setCompletion(true);"},{"lineNumber":24,"author":{"gitId":"car155"},"content":"        assertEquals(d.toString(), \"[D][X] Test (by: Mar 3 2021)\");"},{"lineNumber":25,"author":{"gitId":"car155"},"content":"    }"},{"lineNumber":26,"author":{"gitId":"car155"},"content":"}"}],"authorContributionMap":{"car155":26}},{"path":"src/test/java/duke/EventTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"car155"},"content":"package duke;"},{"lineNumber":2,"author":{"gitId":"car155"},"content":""},{"lineNumber":3,"author":{"gitId":"car155"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;"},{"lineNumber":4,"author":{"gitId":"car155"},"content":""},{"lineNumber":5,"author":{"gitId":"car155"},"content":"import java.time.LocalDate;"},{"lineNumber":6,"author":{"gitId":"car155"},"content":""},{"lineNumber":7,"author":{"gitId":"car155"},"content":"import org.junit.jupiter.api.Test;"},{"lineNumber":8,"author":{"gitId":"car155"},"content":""},{"lineNumber":9,"author":{"gitId":"car155"},"content":"import duke.task.Event;"},{"lineNumber":10,"author":{"gitId":"car155"},"content":""},{"lineNumber":11,"author":{"gitId":"car155"},"content":"public class EventTest {"},{"lineNumber":12,"author":{"gitId":"car155"},"content":""},{"lineNumber":13,"author":{"gitId":"car155"},"content":"    @Test"},{"lineNumber":14,"author":{"gitId":"car155"},"content":"    public void initTest() {"},{"lineNumber":15,"author":{"gitId":"car155"},"content":"        LocalDate date \u003d LocalDate.parse(\"2021-03-03\");"},{"lineNumber":16,"author":{"gitId":"car155"},"content":"        Event e \u003d new Event(\"Test\", date);"},{"lineNumber":17,"author":{"gitId":"car155"},"content":"        assertEquals(e.toString(), \"[E][ ] Test (at: Mar 3 2021)\");"},{"lineNumber":18,"author":{"gitId":"car155"},"content":"    }"},{"lineNumber":19,"author":{"gitId":"car155"},"content":""},{"lineNumber":20,"author":{"gitId":"car155"},"content":"    @Test"},{"lineNumber":21,"author":{"gitId":"car155"},"content":"    public void doneTest() {"},{"lineNumber":22,"author":{"gitId":"car155"},"content":"        LocalDate date \u003d LocalDate.parse(\"2021-03-03\");"},{"lineNumber":23,"author":{"gitId":"car155"},"content":"        Event e \u003d new Event(\"Test\", date);"},{"lineNumber":24,"author":{"gitId":"car155"},"content":"        e.setCompletion(true);"},{"lineNumber":25,"author":{"gitId":"car155"},"content":"        assertEquals(e.toString(), \"[E][X] Test (at: Mar 3 2021)\");"},{"lineNumber":26,"author":{"gitId":"car155"},"content":"    }"},{"lineNumber":27,"author":{"gitId":"car155"},"content":"}"}],"authorContributionMap":{"car155":27}},{"path":"src/test/java/duke/ToDoTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"car155"},"content":"package duke;"},{"lineNumber":2,"author":{"gitId":"car155"},"content":""},{"lineNumber":3,"author":{"gitId":"car155"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;"},{"lineNumber":4,"author":{"gitId":"car155"},"content":""},{"lineNumber":5,"author":{"gitId":"car155"},"content":"import org.junit.jupiter.api.Test;"},{"lineNumber":6,"author":{"gitId":"car155"},"content":""},{"lineNumber":7,"author":{"gitId":"car155"},"content":"import duke.task.ToDo;"},{"lineNumber":8,"author":{"gitId":"car155"},"content":""},{"lineNumber":9,"author":{"gitId":"car155"},"content":"public class ToDoTest {"},{"lineNumber":10,"author":{"gitId":"car155"},"content":"    @Test"},{"lineNumber":11,"author":{"gitId":"car155"},"content":"    public void initTest() {"},{"lineNumber":12,"author":{"gitId":"car155"},"content":"        ToDo t \u003d new ToDo(\"Test\");"},{"lineNumber":13,"author":{"gitId":"car155"},"content":"        assertEquals(t.toString(), \"[T][ ] Test\");"},{"lineNumber":14,"author":{"gitId":"car155"},"content":"    }"},{"lineNumber":15,"author":{"gitId":"car155"},"content":""},{"lineNumber":16,"author":{"gitId":"car155"},"content":"    @Test"},{"lineNumber":17,"author":{"gitId":"car155"},"content":"    public void doneTest() {"},{"lineNumber":18,"author":{"gitId":"car155"},"content":"        ToDo t \u003d new ToDo(\"Test\");"},{"lineNumber":19,"author":{"gitId":"car155"},"content":"        t.setCompletion(true);"},{"lineNumber":20,"author":{"gitId":"car155"},"content":"        assertEquals(t.toString(), \"[T][X] Test\");"},{"lineNumber":21,"author":{"gitId":"car155"},"content":"    }"},{"lineNumber":22,"author":{"gitId":"car155"},"content":"}"}],"authorContributionMap":{"car155":22}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"car155"},"content":"todo borrow book"},{"lineNumber":2,"author":{"gitId":"car155"},"content":"deadline return book /by June 6th"},{"lineNumber":3,"author":{"gitId":"car155"},"content":"event project meeting /at Aug 6th 2-4pm"},{"lineNumber":4,"author":{"gitId":"car155"},"content":"todo join sports club"},{"lineNumber":5,"author":{"gitId":"car155"},"content":"done 1"},{"lineNumber":6,"author":{"gitId":"car155"},"content":"done 4"},{"lineNumber":7,"author":{"gitId":"car155"},"content":"todo borrow book"},{"lineNumber":8,"author":{"gitId":"car155"},"content":"list"},{"lineNumber":9,"author":{"gitId":"car155"},"content":"deadline return book /by Sunday"},{"lineNumber":10,"author":{"gitId":"car155"},"content":"event project meeting /at Mon 2-4pm"}],"authorContributionMap":{"car155":10}}]
