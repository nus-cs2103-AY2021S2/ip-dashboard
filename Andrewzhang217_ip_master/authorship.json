[{"path":"src/main/java/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Andrewzhang217"},"content":"public class Command {"},{"lineNumber":2,"author":{"gitId":"Andrewzhang217"},"content":"    protected final int targetIndex;"},{"lineNumber":3,"author":{"gitId":"Andrewzhang217"},"content":"    protected final Duke duke;"},{"lineNumber":4,"author":{"gitId":"Andrewzhang217"},"content":""},{"lineNumber":5,"author":{"gitId":"Andrewzhang217"},"content":"    protected Command(int targetIndex, Duke duke) {"},{"lineNumber":6,"author":{"gitId":"Andrewzhang217"},"content":"        this.targetIndex \u003d targetIndex;"},{"lineNumber":7,"author":{"gitId":"Andrewzhang217"},"content":"        this.duke \u003d duke;"},{"lineNumber":8,"author":{"gitId":"Andrewzhang217"},"content":"    }"},{"lineNumber":9,"author":{"gitId":"Andrewzhang217"},"content":""},{"lineNumber":10,"author":{"gitId":"Andrewzhang217"},"content":"    public Duke execute() {"},{"lineNumber":11,"author":{"gitId":"Andrewzhang217"},"content":"        throw new UnsupportedOperationException(\"This method is to\""},{"lineNumber":12,"author":{"gitId":"Andrewzhang217"},"content":"                + \" be implemented by child classes.\");"},{"lineNumber":13,"author":{"gitId":"Andrewzhang217"},"content":"    }"},{"lineNumber":14,"author":{"gitId":"Andrewzhang217"},"content":""},{"lineNumber":15,"author":{"gitId":"Andrewzhang217"},"content":""},{"lineNumber":16,"author":{"gitId":"Andrewzhang217"},"content":"    public Command setDuke(Duke duke) {"},{"lineNumber":17,"author":{"gitId":"Andrewzhang217"},"content":"        return new Command(targetIndex, duke);"},{"lineNumber":18,"author":{"gitId":"Andrewzhang217"},"content":"    }"},{"lineNumber":19,"author":{"gitId":"Andrewzhang217"},"content":""},{"lineNumber":20,"author":{"gitId":"Andrewzhang217"},"content":"}"},{"lineNumber":21,"author":{"gitId":"Andrewzhang217"},"content":""},{"lineNumber":22,"author":{"gitId":"Andrewzhang217"},"content":""}],"authorContributionMap":{"Andrewzhang217":22}},{"path":"src/main/java/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Andrewzhang217"},"content":"public class Deadline extends Task{"},{"lineNumber":2,"author":{"gitId":"Andrewzhang217"},"content":""},{"lineNumber":3,"author":{"gitId":"Andrewzhang217"},"content":"    protected String by;"},{"lineNumber":4,"author":{"gitId":"Andrewzhang217"},"content":""},{"lineNumber":5,"author":{"gitId":"Andrewzhang217"},"content":"    public Deadline(String description, String by) {"},{"lineNumber":6,"author":{"gitId":"Andrewzhang217"},"content":"        super(description);"},{"lineNumber":7,"author":{"gitId":"Andrewzhang217"},"content":"        this.by \u003d by;"},{"lineNumber":8,"author":{"gitId":"Andrewzhang217"},"content":"    }"},{"lineNumber":9,"author":{"gitId":"Andrewzhang217"},"content":""},{"lineNumber":10,"author":{"gitId":"Andrewzhang217"},"content":"    @Override"},{"lineNumber":11,"author":{"gitId":"Andrewzhang217"},"content":"    public String toString() {"},{"lineNumber":12,"author":{"gitId":"Andrewzhang217"},"content":"        return \"[D]\" + super.toString() + \" (by: \" + by + \")\";"},{"lineNumber":13,"author":{"gitId":"Andrewzhang217"},"content":"    }"},{"lineNumber":14,"author":{"gitId":"Andrewzhang217"},"content":"}"},{"lineNumber":15,"author":{"gitId":"Andrewzhang217"},"content":""}],"authorContributionMap":{"Andrewzhang217":15}},{"path":"src/main/java/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Andrewzhang217"},"content":"import java.util.Scanner;"},{"lineNumber":2,"author":{"gitId":"Andrewzhang217"},"content":"import java.util.ArrayList;"},{"lineNumber":3,"author":{"gitId":"Andrewzhang217"},"content":""},{"lineNumber":4,"author":{"gitId":"Andrewzhang217"},"content":"/**"},{"lineNumber":5,"author":{"gitId":"Andrewzhang217"},"content":" * Main Duke chatbot class."},{"lineNumber":6,"author":{"gitId":"Andrewzhang217"},"content":" */"},{"lineNumber":7,"author":{"gitId":"-"},"content":"public class Duke {"},{"lineNumber":8,"author":{"gitId":"Andrewzhang217"},"content":"    /** List of Tasks */"},{"lineNumber":9,"author":{"gitId":"Andrewzhang217"},"content":"    private ArrayList\u003cTask\u003e list;"},{"lineNumber":10,"author":{"gitId":"Andrewzhang217"},"content":"    private Duke(ArrayList\u003cTask\u003e list){"},{"lineNumber":11,"author":{"gitId":"Andrewzhang217"},"content":""},{"lineNumber":12,"author":{"gitId":"Andrewzhang217"},"content":"        this.list \u003d list;"},{"lineNumber":13,"author":{"gitId":"Andrewzhang217"},"content":""},{"lineNumber":14,"author":{"gitId":"Andrewzhang217"},"content":"    }"},{"lineNumber":15,"author":{"gitId":"Andrewzhang217"},"content":""},{"lineNumber":16,"author":{"gitId":"Andrewzhang217"},"content":"    public void greeting(){"},{"lineNumber":17,"author":{"gitId":"Andrewzhang217"},"content":"        System.out.println(\"Hello! I\u0027m Duke\");"},{"lineNumber":18,"author":{"gitId":"Andrewzhang217"},"content":"        System.out.println(\"What can I do for you?\");"},{"lineNumber":19,"author":{"gitId":"Andrewzhang217"},"content":"    }"},{"lineNumber":20,"author":{"gitId":"Andrewzhang217"},"content":""},{"lineNumber":21,"author":{"gitId":"Andrewzhang217"},"content":"    public void add(String input) throws DukeEmptyCommandException{"},{"lineNumber":22,"author":{"gitId":"Andrewzhang217"},"content":"        if(input.equals(\"todo\")){"},{"lineNumber":23,"author":{"gitId":"Andrewzhang217"},"content":"            throw new DukeEmptyCommandException(\"OOPS!!! The description of a todo cannot be empty.\");"},{"lineNumber":24,"author":{"gitId":"Andrewzhang217"},"content":"        } else if (input.equals(\"deadline\")){"},{"lineNumber":25,"author":{"gitId":"Andrewzhang217"},"content":"            throw new DukeEmptyCommandException(\"OOPS!!! The description of a deadline cannot be empty.\");"},{"lineNumber":26,"author":{"gitId":"Andrewzhang217"},"content":"        } else if (input.equals(\"event\")){"},{"lineNumber":27,"author":{"gitId":"Andrewzhang217"},"content":"            throw new DukeEmptyCommandException(\"OOPS!!! The description of an event cannot be empty.\");"},{"lineNumber":28,"author":{"gitId":"Andrewzhang217"},"content":"        } else {"},{"lineNumber":29,"author":{"gitId":"Andrewzhang217"},"content":"            Task t \u003d new Task(input);"},{"lineNumber":30,"author":{"gitId":"Andrewzhang217"},"content":"            this.list.add(t);"},{"lineNumber":31,"author":{"gitId":"Andrewzhang217"},"content":"            System.out.println(\"Got it. I\u0027ve added this task: \");"},{"lineNumber":32,"author":{"gitId":"Andrewzhang217"},"content":"            System.out.println(t.toString());"},{"lineNumber":33,"author":{"gitId":"Andrewzhang217"},"content":""},{"lineNumber":34,"author":{"gitId":"Andrewzhang217"},"content":"        }"},{"lineNumber":35,"author":{"gitId":"Andrewzhang217"},"content":"    }"},{"lineNumber":36,"author":{"gitId":"Andrewzhang217"},"content":""},{"lineNumber":37,"author":{"gitId":"Andrewzhang217"},"content":"    public void display(){"},{"lineNumber":38,"author":{"gitId":"Andrewzhang217"},"content":"        System.out.println(\"Here are the tasks in your list:\");"},{"lineNumber":39,"author":{"gitId":"Andrewzhang217"},"content":"        int len \u003d this.list.size();"},{"lineNumber":40,"author":{"gitId":"Andrewzhang217"},"content":"                for(int i \u003d 0; i \u003c len; i++){"},{"lineNumber":41,"author":{"gitId":"Andrewzhang217"},"content":"                    int index \u003d i + 1;"},{"lineNumber":42,"author":{"gitId":"Andrewzhang217"},"content":"                    Task t \u003d this.list.get(i);"},{"lineNumber":43,"author":{"gitId":"Andrewzhang217"},"content":"                    if(t instanceof Todo){"},{"lineNumber":44,"author":{"gitId":"Andrewzhang217"},"content":"                        Todo todo \u003d (Todo) t;"},{"lineNumber":45,"author":{"gitId":"Andrewzhang217"},"content":"                        System.out.println(index + \".\" + todo.toString());"},{"lineNumber":46,"author":{"gitId":"Andrewzhang217"},"content":"                    } else if ( t instanceof Event){"},{"lineNumber":47,"author":{"gitId":"Andrewzhang217"},"content":"                        Event event \u003d (Event) t;"},{"lineNumber":48,"author":{"gitId":"Andrewzhang217"},"content":"                        System.out.println(index + \".\" + event.toString());"},{"lineNumber":49,"author":{"gitId":"Andrewzhang217"},"content":"                    } else if ( t instanceof Deadline){"},{"lineNumber":50,"author":{"gitId":"Andrewzhang217"},"content":"                        Deadline deadline \u003d (Deadline) t;"},{"lineNumber":51,"author":{"gitId":"Andrewzhang217"},"content":"                        System.out.println(index + \".\" + deadline.toString());"},{"lineNumber":52,"author":{"gitId":"Andrewzhang217"},"content":"                    } else {"},{"lineNumber":53,"author":{"gitId":"Andrewzhang217"},"content":"                        System.out.println(index + \".\" + t.toString());"},{"lineNumber":54,"author":{"gitId":"Andrewzhang217"},"content":"                    }"},{"lineNumber":55,"author":{"gitId":"Andrewzhang217"},"content":""},{"lineNumber":56,"author":{"gitId":"Andrewzhang217"},"content":"                }"},{"lineNumber":57,"author":{"gitId":"Andrewzhang217"},"content":"    }"},{"lineNumber":58,"author":{"gitId":"Andrewzhang217"},"content":""},{"lineNumber":59,"author":{"gitId":"Andrewzhang217"},"content":"    public void markDone(int index){"},{"lineNumber":60,"author":{"gitId":"Andrewzhang217"},"content":""},{"lineNumber":61,"author":{"gitId":"Andrewzhang217"},"content":"        Task t \u003d this.list.get(index);"},{"lineNumber":62,"author":{"gitId":"Andrewzhang217"},"content":"        System.out.println(\"Nice! I\u0027ve marked this task as done: \");"},{"lineNumber":63,"author":{"gitId":"Andrewzhang217"},"content":"        System.out.println(t.toString());"},{"lineNumber":64,"author":{"gitId":"Andrewzhang217"},"content":"        this.list.set(index, t.markAsDone());"},{"lineNumber":65,"author":{"gitId":"Andrewzhang217"},"content":""},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":67,"author":{"gitId":"Andrewzhang217"},"content":""},{"lineNumber":68,"author":{"gitId":"Andrewzhang217"},"content":"    public void delete(int index){"},{"lineNumber":69,"author":{"gitId":"Andrewzhang217"},"content":""},{"lineNumber":70,"author":{"gitId":"Andrewzhang217"},"content":"        Task t \u003d this.list.get(index);"},{"lineNumber":71,"author":{"gitId":"Andrewzhang217"},"content":"        System.out.println(\"Noted. I\u0027ve removed this task: \");"},{"lineNumber":72,"author":{"gitId":"Andrewzhang217"},"content":"        System.out.println(t.toString());"},{"lineNumber":73,"author":{"gitId":"Andrewzhang217"},"content":"        this.list.remove(index);"},{"lineNumber":74,"author":{"gitId":"Andrewzhang217"},"content":""},{"lineNumber":75,"author":{"gitId":"Andrewzhang217"},"content":"    }"},{"lineNumber":76,"author":{"gitId":"Andrewzhang217"},"content":"    public void bye(){"},{"lineNumber":77,"author":{"gitId":"Andrewzhang217"},"content":"        System.out.println(\"Bye. Hope to see you again soon!\");"},{"lineNumber":78,"author":{"gitId":"Andrewzhang217"},"content":"    }"},{"lineNumber":79,"author":{"gitId":"Andrewzhang217"},"content":""},{"lineNumber":80,"author":{"gitId":"Andrewzhang217"},"content":""},{"lineNumber":81,"author":{"gitId":"Andrewzhang217"},"content":""},{"lineNumber":82,"author":{"gitId":"Andrewzhang217"},"content":"    public static void main(String[] args) {"},{"lineNumber":83,"author":{"gitId":"Andrewzhang217"},"content":""},{"lineNumber":84,"author":{"gitId":"Andrewzhang217"},"content":"        Duke duke \u003d new Duke(new ArrayList\u003c\u003e());"},{"lineNumber":85,"author":{"gitId":"Andrewzhang217"},"content":""},{"lineNumber":86,"author":{"gitId":"Andrewzhang217"},"content":"        duke.greeting();"},{"lineNumber":87,"author":{"gitId":"Andrewzhang217"},"content":""},{"lineNumber":88,"author":{"gitId":"Andrewzhang217"},"content":"        Scanner sc \u003d new Scanner(System.in);"},{"lineNumber":89,"author":{"gitId":"Andrewzhang217"},"content":"        try{"},{"lineNumber":90,"author":{"gitId":"Andrewzhang217"},"content":"        while (sc.hasNext()) {"},{"lineNumber":91,"author":{"gitId":"Andrewzhang217"},"content":"            String input \u003d sc.nextLine();"},{"lineNumber":92,"author":{"gitId":"Andrewzhang217"},"content":""},{"lineNumber":93,"author":{"gitId":"Andrewzhang217"},"content":"            if (input.equals(\"bye\")) {"},{"lineNumber":94,"author":{"gitId":"Andrewzhang217"},"content":"                duke.bye();"},{"lineNumber":95,"author":{"gitId":"Andrewzhang217"},"content":"                break;"},{"lineNumber":96,"author":{"gitId":"Andrewzhang217"},"content":"            }"},{"lineNumber":97,"author":{"gitId":"Andrewzhang217"},"content":"            else if(input.equals(\"list\")) {"},{"lineNumber":98,"author":{"gitId":"Andrewzhang217"},"content":"                duke.display();"},{"lineNumber":99,"author":{"gitId":"Andrewzhang217"},"content":""},{"lineNumber":100,"author":{"gitId":"Andrewzhang217"},"content":"            } else if(input.startsWith(\"done\")){"},{"lineNumber":101,"author":{"gitId":"Andrewzhang217"},"content":"                String lastPart \u003d input.substring(5);"},{"lineNumber":102,"author":{"gitId":"Andrewzhang217"},"content":"                int index \u003d Integer.parseInt(lastPart) - 1;"},{"lineNumber":103,"author":{"gitId":"Andrewzhang217"},"content":"                duke.markDone(index);"},{"lineNumber":104,"author":{"gitId":"Andrewzhang217"},"content":""},{"lineNumber":105,"author":{"gitId":"Andrewzhang217"},"content":"            } else if(input.startsWith(\"delete\")){"},{"lineNumber":106,"author":{"gitId":"Andrewzhang217"},"content":"                String lastPart \u003d input.substring(7);"},{"lineNumber":107,"author":{"gitId":"Andrewzhang217"},"content":"                int index \u003d Integer.parseInt(lastPart) - 1;"},{"lineNumber":108,"author":{"gitId":"Andrewzhang217"},"content":"                duke.delete(index);"},{"lineNumber":109,"author":{"gitId":"Andrewzhang217"},"content":"                System.out.println(\"Now you have \" + duke.list.size() + \" tasks in the list.\" );"},{"lineNumber":110,"author":{"gitId":"Andrewzhang217"},"content":"            }"},{"lineNumber":111,"author":{"gitId":"Andrewzhang217"},"content":"            else if(input.startsWith(\"todo\")||input.startsWith(\"deadline\")||input.startsWith(\"event\")){"},{"lineNumber":112,"author":{"gitId":"Andrewzhang217"},"content":"                duke.add(input);"},{"lineNumber":113,"author":{"gitId":"Andrewzhang217"},"content":"                System.out.println(\"Now you have \" + duke.list.size() + \" tasks in the list.\" );"},{"lineNumber":114,"author":{"gitId":"Andrewzhang217"},"content":"            } else{"},{"lineNumber":115,"author":{"gitId":"Andrewzhang217"},"content":"                throw new DukeWrongCommandException(\"OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\");"},{"lineNumber":116,"author":{"gitId":"Andrewzhang217"},"content":"            }"},{"lineNumber":117,"author":{"gitId":"Andrewzhang217"},"content":"        }"},{"lineNumber":118,"author":{"gitId":"Andrewzhang217"},"content":"    } catch (DukeEmptyCommandException e){"},{"lineNumber":119,"author":{"gitId":"Andrewzhang217"},"content":"            System.out.println(e.toString());"},{"lineNumber":120,"author":{"gitId":"Andrewzhang217"},"content":"        } catch (DukeWrongCommandException w){"},{"lineNumber":121,"author":{"gitId":"Andrewzhang217"},"content":"            System.out.println(w.toString());"},{"lineNumber":122,"author":{"gitId":"Andrewzhang217"},"content":"        }"},{"lineNumber":123,"author":{"gitId":"-"},"content":"}"},{"lineNumber":124,"author":{"gitId":"-"},"content":"}"}],"authorContributionMap":{"-":4,"Andrewzhang217":120}},{"path":"src/main/java/DukeEmptyCommandException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Andrewzhang217"},"content":"public class DukeEmptyCommandException extends IllegalArgumentException{"},{"lineNumber":2,"author":{"gitId":"Andrewzhang217"},"content":"    public DukeEmptyCommandException(String s){"},{"lineNumber":3,"author":{"gitId":"Andrewzhang217"},"content":"        super(s);"},{"lineNumber":4,"author":{"gitId":"Andrewzhang217"},"content":"    }"},{"lineNumber":5,"author":{"gitId":"Andrewzhang217"},"content":"}"}],"authorContributionMap":{"Andrewzhang217":5}},{"path":"src/main/java/DukeWrongCommandException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Andrewzhang217"},"content":"public class DukeWrongCommandException extends IllegalArgumentException{"},{"lineNumber":2,"author":{"gitId":"Andrewzhang217"},"content":"    public DukeWrongCommandException (String s){"},{"lineNumber":3,"author":{"gitId":"Andrewzhang217"},"content":"        super(s);"},{"lineNumber":4,"author":{"gitId":"Andrewzhang217"},"content":"    }"},{"lineNumber":5,"author":{"gitId":"Andrewzhang217"},"content":"}"}],"authorContributionMap":{"Andrewzhang217":5}},{"path":"src/main/java/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Andrewzhang217"},"content":"public class Event extends Task{"},{"lineNumber":2,"author":{"gitId":"Andrewzhang217"},"content":""},{"lineNumber":3,"author":{"gitId":"Andrewzhang217"},"content":"    protected String by;"},{"lineNumber":4,"author":{"gitId":"Andrewzhang217"},"content":""},{"lineNumber":5,"author":{"gitId":"Andrewzhang217"},"content":"    public Event(String description, String by) {"},{"lineNumber":6,"author":{"gitId":"Andrewzhang217"},"content":"        super(description);"},{"lineNumber":7,"author":{"gitId":"Andrewzhang217"},"content":"        this.by \u003d by;"},{"lineNumber":8,"author":{"gitId":"Andrewzhang217"},"content":"    }"},{"lineNumber":9,"author":{"gitId":"Andrewzhang217"},"content":""},{"lineNumber":10,"author":{"gitId":"Andrewzhang217"},"content":"    @Override"},{"lineNumber":11,"author":{"gitId":"Andrewzhang217"},"content":"    public String toString() {"},{"lineNumber":12,"author":{"gitId":"Andrewzhang217"},"content":"        return \"[E]\" + super.toString() + \" (by: \" + by + \")\";"},{"lineNumber":13,"author":{"gitId":"Andrewzhang217"},"content":"    }"},{"lineNumber":14,"author":{"gitId":"Andrewzhang217"},"content":"}"}],"authorContributionMap":{"Andrewzhang217":14}},{"path":"src/main/java/FindCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Andrewzhang217"},"content":"public class FindCommand extends Command {"},{"lineNumber":2,"author":{"gitId":"Andrewzhang217"},"content":"    private final String searchString;"},{"lineNumber":3,"author":{"gitId":"Andrewzhang217"},"content":""},{"lineNumber":4,"author":{"gitId":"Andrewzhang217"},"content":"    private FindCommand(String searchString, Duke duke) {"},{"lineNumber":5,"author":{"gitId":"Andrewzhang217"},"content":"        super(-1, duke);"},{"lineNumber":6,"author":{"gitId":"Andrewzhang217"},"content":"        this.searchString \u003d searchString;"},{"lineNumber":7,"author":{"gitId":"Andrewzhang217"},"content":"    }"},{"lineNumber":8,"author":{"gitId":"Andrewzhang217"},"content":""},{"lineNumber":9,"author":{"gitId":"Andrewzhang217"},"content":"    public static FindCommand getFindCommand(String searchString) {"},{"lineNumber":10,"author":{"gitId":"Andrewzhang217"},"content":"        return new FindCommand(searchString, null);"},{"lineNumber":11,"author":{"gitId":"Andrewzhang217"},"content":"    }"},{"lineNumber":12,"author":{"gitId":"Andrewzhang217"},"content":""},{"lineNumber":13,"author":{"gitId":"Andrewzhang217"},"content":""},{"lineNumber":14,"author":{"gitId":"Andrewzhang217"},"content":"}"}],"authorContributionMap":{"Andrewzhang217":14}},{"path":"src/main/java/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Andrewzhang217"},"content":"public class Task {"},{"lineNumber":2,"author":{"gitId":"Andrewzhang217"},"content":""},{"lineNumber":3,"author":{"gitId":"Andrewzhang217"},"content":"    protected String description;"},{"lineNumber":4,"author":{"gitId":"Andrewzhang217"},"content":"    protected boolean isDone;"},{"lineNumber":5,"author":{"gitId":"Andrewzhang217"},"content":""},{"lineNumber":6,"author":{"gitId":"Andrewzhang217"},"content":"    public Task(String description) {"},{"lineNumber":7,"author":{"gitId":"Andrewzhang217"},"content":"        this.description \u003d description;"},{"lineNumber":8,"author":{"gitId":"Andrewzhang217"},"content":"        this.isDone \u003d false;"},{"lineNumber":9,"author":{"gitId":"Andrewzhang217"},"content":"    }"},{"lineNumber":10,"author":{"gitId":"Andrewzhang217"},"content":""},{"lineNumber":11,"author":{"gitId":"Andrewzhang217"},"content":"    public Task(String description, boolean isDone){"},{"lineNumber":12,"author":{"gitId":"Andrewzhang217"},"content":"        this.description \u003d description;"},{"lineNumber":13,"author":{"gitId":"Andrewzhang217"},"content":"        this.isDone \u003d isDone;"},{"lineNumber":14,"author":{"gitId":"Andrewzhang217"},"content":"    }"},{"lineNumber":15,"author":{"gitId":"Andrewzhang217"},"content":""},{"lineNumber":16,"author":{"gitId":"Andrewzhang217"},"content":"    public boolean getIsDone(){"},{"lineNumber":17,"author":{"gitId":"Andrewzhang217"},"content":"        return this.isDone;"},{"lineNumber":18,"author":{"gitId":"Andrewzhang217"},"content":"    }"},{"lineNumber":19,"author":{"gitId":"Andrewzhang217"},"content":""},{"lineNumber":20,"author":{"gitId":"Andrewzhang217"},"content":"    public String getDescription(){"},{"lineNumber":21,"author":{"gitId":"Andrewzhang217"},"content":"        return this.description;"},{"lineNumber":22,"author":{"gitId":"Andrewzhang217"},"content":"    }"},{"lineNumber":23,"author":{"gitId":"Andrewzhang217"},"content":""},{"lineNumber":24,"author":{"gitId":"Andrewzhang217"},"content":"    public Task markAsDone(){"},{"lineNumber":25,"author":{"gitId":"Andrewzhang217"},"content":""},{"lineNumber":26,"author":{"gitId":"Andrewzhang217"},"content":"        String description \u003d this.getDescription();"},{"lineNumber":27,"author":{"gitId":"Andrewzhang217"},"content":""},{"lineNumber":28,"author":{"gitId":"Andrewzhang217"},"content":"        return new Task(description,true);"},{"lineNumber":29,"author":{"gitId":"Andrewzhang217"},"content":"    }"},{"lineNumber":30,"author":{"gitId":"Andrewzhang217"},"content":""},{"lineNumber":31,"author":{"gitId":"Andrewzhang217"},"content":"    public String getStatusIcon() {"},{"lineNumber":32,"author":{"gitId":"Andrewzhang217"},"content":"        return (isDone ? \"V\" : \"X\"); //return tick or X symbols"},{"lineNumber":33,"author":{"gitId":"Andrewzhang217"},"content":"    }"},{"lineNumber":34,"author":{"gitId":"Andrewzhang217"},"content":""},{"lineNumber":35,"author":{"gitId":"Andrewzhang217"},"content":""},{"lineNumber":36,"author":{"gitId":"Andrewzhang217"},"content":"    public String toString(){"},{"lineNumber":37,"author":{"gitId":"Andrewzhang217"},"content":"        return \"[\" + this.getStatusIcon() + \"]\" + this.getDescription();"},{"lineNumber":38,"author":{"gitId":"Andrewzhang217"},"content":"    }"},{"lineNumber":39,"author":{"gitId":"Andrewzhang217"},"content":""},{"lineNumber":40,"author":{"gitId":"Andrewzhang217"},"content":"}"}],"authorContributionMap":{"Andrewzhang217":40}},{"path":"src/main/java/TaskManager.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Andrewzhang217"},"content":"import java.io.File;"},{"lineNumber":2,"author":{"gitId":"Andrewzhang217"},"content":"import java.io.FileNotFoundException;"},{"lineNumber":3,"author":{"gitId":"Andrewzhang217"},"content":"import java.io.FileWriter;"},{"lineNumber":4,"author":{"gitId":"Andrewzhang217"},"content":"import java.io.IOException;"},{"lineNumber":5,"author":{"gitId":"Andrewzhang217"},"content":"import java.nio.file.Path;"},{"lineNumber":6,"author":{"gitId":"Andrewzhang217"},"content":"import java.util.ArrayList;"},{"lineNumber":7,"author":{"gitId":"Andrewzhang217"},"content":"import java.util.List;"},{"lineNumber":8,"author":{"gitId":"Andrewzhang217"},"content":""},{"lineNumber":9,"author":{"gitId":"Andrewzhang217"},"content":"import java.util.Scanner;"},{"lineNumber":10,"author":{"gitId":"Andrewzhang217"},"content":""},{"lineNumber":11,"author":{"gitId":"Andrewzhang217"},"content":"public class TaskManager {"},{"lineNumber":12,"author":{"gitId":"Andrewzhang217"},"content":"    private final Path filePath;"},{"lineNumber":13,"author":{"gitId":"Andrewzhang217"},"content":""},{"lineNumber":14,"author":{"gitId":"Andrewzhang217"},"content":"    public TaskManager(Path filePath){"},{"lineNumber":15,"author":{"gitId":"Andrewzhang217"},"content":"        this.filePath \u003d filePath;"},{"lineNumber":16,"author":{"gitId":"Andrewzhang217"},"content":"    }"},{"lineNumber":17,"author":{"gitId":"Andrewzhang217"},"content":""},{"lineNumber":18,"author":{"gitId":"Andrewzhang217"},"content":"    private void WriteFile(String fileContent) throws IOException {"},{"lineNumber":19,"author":{"gitId":"Andrewzhang217"},"content":"        FileWriter fileWriter \u003d new FileWriter(String.valueOf(this.filePath));"},{"lineNumber":20,"author":{"gitId":"Andrewzhang217"},"content":"        fileWriter.write(fileContent);"},{"lineNumber":21,"author":{"gitId":"Andrewzhang217"},"content":"        fileWriter.close();"},{"lineNumber":22,"author":{"gitId":"Andrewzhang217"},"content":"    }"},{"lineNumber":23,"author":{"gitId":"Andrewzhang217"},"content":""},{"lineNumber":24,"author":{"gitId":"Andrewzhang217"},"content":"    private ArrayList\u003cString\u003e ReadFile(String fileName) throws FileNotFoundException {"},{"lineNumber":25,"author":{"gitId":"Andrewzhang217"},"content":"        Scanner scanner \u003d new Scanner(fileName);"},{"lineNumber":26,"author":{"gitId":"Andrewzhang217"},"content":"        ArrayList\u003cString\u003e fileContent \u003d new ArrayList\u003c\u003e();"},{"lineNumber":27,"author":{"gitId":"Andrewzhang217"},"content":""},{"lineNumber":28,"author":{"gitId":"Andrewzhang217"},"content":"        while(scanner.hasNext()){"},{"lineNumber":29,"author":{"gitId":"Andrewzhang217"},"content":"            fileContent.add(scanner.nextLine());"},{"lineNumber":30,"author":{"gitId":"Andrewzhang217"},"content":"            }"},{"lineNumber":31,"author":{"gitId":"Andrewzhang217"},"content":""},{"lineNumber":32,"author":{"gitId":"Andrewzhang217"},"content":"        return fileContent;"},{"lineNumber":33,"author":{"gitId":"Andrewzhang217"},"content":""},{"lineNumber":34,"author":{"gitId":"Andrewzhang217"},"content":"    }"},{"lineNumber":35,"author":{"gitId":"Andrewzhang217"},"content":""},{"lineNumber":36,"author":{"gitId":"Andrewzhang217"},"content":"    public void save(List\u003c? extends Task\u003e list) {"},{"lineNumber":37,"author":{"gitId":"Andrewzhang217"},"content":"        StringBuilder sb \u003d new StringBuilder();"},{"lineNumber":38,"author":{"gitId":"Andrewzhang217"},"content":""},{"lineNumber":39,"author":{"gitId":"Andrewzhang217"},"content":"        list.forEach(x -\u003e sb.append(x).append(\"\\n\"));"},{"lineNumber":40,"author":{"gitId":"Andrewzhang217"},"content":"        try {"},{"lineNumber":41,"author":{"gitId":"Andrewzhang217"},"content":"            WriteFile(sb.toString());"},{"lineNumber":42,"author":{"gitId":"Andrewzhang217"},"content":"        } catch (IOException e) {"},{"lineNumber":43,"author":{"gitId":"Andrewzhang217"},"content":"            System.out.println(\"Unable to save to disk!\");"},{"lineNumber":44,"author":{"gitId":"Andrewzhang217"},"content":"            e.printStackTrace();"},{"lineNumber":45,"author":{"gitId":"Andrewzhang217"},"content":"        }"},{"lineNumber":46,"author":{"gitId":"Andrewzhang217"},"content":""},{"lineNumber":47,"author":{"gitId":"Andrewzhang217"},"content":"    }"},{"lineNumber":48,"author":{"gitId":"Andrewzhang217"},"content":""},{"lineNumber":49,"author":{"gitId":"Andrewzhang217"},"content":""},{"lineNumber":50,"author":{"gitId":"Andrewzhang217"},"content":""},{"lineNumber":51,"author":{"gitId":"Andrewzhang217"},"content":"}"}],"authorContributionMap":{"Andrewzhang217":51}},{"path":"src/main/java/TimeParser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Andrewzhang217"},"content":"import java.time.LocalDate;"},{"lineNumber":2,"author":{"gitId":"Andrewzhang217"},"content":"import java.time.LocalDateTime;"},{"lineNumber":3,"author":{"gitId":"Andrewzhang217"},"content":"import java.util.ArrayList;"},{"lineNumber":4,"author":{"gitId":"Andrewzhang217"},"content":"import java.util.List;"},{"lineNumber":5,"author":{"gitId":"Andrewzhang217"},"content":"import java.util.regex.Matcher;"},{"lineNumber":6,"author":{"gitId":"Andrewzhang217"},"content":"import java.util.regex.Pattern;"},{"lineNumber":7,"author":{"gitId":"Andrewzhang217"},"content":""},{"lineNumber":8,"author":{"gitId":"Andrewzhang217"},"content":"public class TimeParser {"},{"lineNumber":9,"author":{"gitId":"Andrewzhang217"},"content":"    // Accept YYYYMMDD, DDMMYYYY"},{"lineNumber":10,"author":{"gitId":"Andrewzhang217"},"content":"    private static final List\u003cPattern\u003e DATE_PATTERN_LIST \u003d new ArrayList\u003c\u003e("},{"lineNumber":11,"author":{"gitId":"Andrewzhang217"},"content":"            List.of(Pattern.compile(\"(?\u003cyear\u003e\\\\d{4})[\\\\s\\\\-.]?(?\u003cmonth\u003e\\\\d{1,2})[\\\\s\\\\-.]?(?\u003cday\u003e\\\\d{1,2})\"),"},{"lineNumber":12,"author":{"gitId":"Andrewzhang217"},"content":"                    Pattern.compile(\"(?\u003cday\u003e\\\\d{1,2})[\\\\s\\\\-.]?(?\u003cmonth\u003e\\\\d{1,2})[\\\\s\\\\-.]?(?\u003cyear\u003e\\\\d{4})\")));"},{"lineNumber":13,"author":{"gitId":"Andrewzhang217"},"content":"    // Accept YYYY MM DD HHMM, DD MM YYYY HHMM"},{"lineNumber":14,"author":{"gitId":"Andrewzhang217"},"content":"    private static final List\u003cPattern\u003e DATETIME_PATTERN_LIST \u003d new ArrayList\u003c\u003e("},{"lineNumber":15,"author":{"gitId":"Andrewzhang217"},"content":"            List.of(Pattern.compile(\"(?\u003cyear\u003e\\\\d{4})[\\\\s\\\\-.](?\u003cmonth\u003e\\\\d{1,2})[\\\\s\\\\-.](?\u003cday\u003e\\\\d{1,2})\""},{"lineNumber":16,"author":{"gitId":"Andrewzhang217"},"content":"                            + \"[\\\\s\\\\-.T](?\u003chour\u003e\\\\d{1,2})[\\\\s\\\\-.:]?(?\u003cminute\u003e\\\\d{2})\"),"},{"lineNumber":17,"author":{"gitId":"Andrewzhang217"},"content":"                    Pattern.compile(\"(?\u003cday\u003e\\\\d{1,2})[\\\\s\\\\-.](?\u003cmonth\u003e\\\\d{1,2})[\\\\s\\\\-.](?\u003cyear\u003e\\\\d{4})\""},{"lineNumber":18,"author":{"gitId":"Andrewzhang217"},"content":"                            + \"[\\\\s\\\\-.T](?\u003chour\u003e\\\\d{1,2})[\\\\s\\\\-.:]?(?\u003cminute\u003e\\\\d{2})\")));"},{"lineNumber":19,"author":{"gitId":"Andrewzhang217"},"content":""},{"lineNumber":20,"author":{"gitId":"Andrewzhang217"},"content":"    public static LocalDate parseDate(String string) {"},{"lineNumber":21,"author":{"gitId":"Andrewzhang217"},"content":"        if (!isDate(string)) {"},{"lineNumber":22,"author":{"gitId":"Andrewzhang217"},"content":"            throw new RuntimeException(string +\" does not have a date time!\");"},{"lineNumber":23,"author":{"gitId":"Andrewzhang217"},"content":"        }"},{"lineNumber":24,"author":{"gitId":"Andrewzhang217"},"content":""},{"lineNumber":25,"author":{"gitId":"Andrewzhang217"},"content":"        Pattern pattern \u003d DATE_PATTERN_LIST"},{"lineNumber":26,"author":{"gitId":"Andrewzhang217"},"content":"                .stream()"},{"lineNumber":27,"author":{"gitId":"Andrewzhang217"},"content":"                .filter(x -\u003e x.matcher(string).find())"},{"lineNumber":28,"author":{"gitId":"Andrewzhang217"},"content":"                .findFirst()"},{"lineNumber":29,"author":{"gitId":"Andrewzhang217"},"content":"                .orElseThrow();"},{"lineNumber":30,"author":{"gitId":"Andrewzhang217"},"content":"        Matcher matcher \u003d pattern.matcher(string);"},{"lineNumber":31,"author":{"gitId":"Andrewzhang217"},"content":"        if (!matcher.matches()) {"},{"lineNumber":32,"author":{"gitId":"Andrewzhang217"},"content":"            throw new RuntimeException(string +\" failed to match regex!\");"},{"lineNumber":33,"author":{"gitId":"Andrewzhang217"},"content":"        }"},{"lineNumber":34,"author":{"gitId":"Andrewzhang217"},"content":"        return LocalDate.of(Integer.parseInt(matcher.group(\"year\")),"},{"lineNumber":35,"author":{"gitId":"Andrewzhang217"},"content":"                Integer.parseInt(matcher.group(\"month\")),"},{"lineNumber":36,"author":{"gitId":"Andrewzhang217"},"content":"                Integer.parseInt(matcher.group(\"day\")));"},{"lineNumber":37,"author":{"gitId":"Andrewzhang217"},"content":"    }"},{"lineNumber":38,"author":{"gitId":"Andrewzhang217"},"content":""},{"lineNumber":39,"author":{"gitId":"Andrewzhang217"},"content":""},{"lineNumber":40,"author":{"gitId":"Andrewzhang217"},"content":"    public static LocalDateTime parseDateTime(String string) {"},{"lineNumber":41,"author":{"gitId":"Andrewzhang217"},"content":"        if (!isDateTime(string)) {"},{"lineNumber":42,"author":{"gitId":"Andrewzhang217"},"content":"            throw new RuntimeException(string +\" does not have a date time!\");"},{"lineNumber":43,"author":{"gitId":"Andrewzhang217"},"content":"        }"},{"lineNumber":44,"author":{"gitId":"Andrewzhang217"},"content":""},{"lineNumber":45,"author":{"gitId":"Andrewzhang217"},"content":"        Pattern pattern \u003d DATETIME_PATTERN_LIST"},{"lineNumber":46,"author":{"gitId":"Andrewzhang217"},"content":"                .stream()"},{"lineNumber":47,"author":{"gitId":"Andrewzhang217"},"content":"                .filter(x -\u003e x.matcher(string).find())"},{"lineNumber":48,"author":{"gitId":"Andrewzhang217"},"content":"                .findFirst()"},{"lineNumber":49,"author":{"gitId":"Andrewzhang217"},"content":"                .orElseThrow();"},{"lineNumber":50,"author":{"gitId":"Andrewzhang217"},"content":"        Matcher matcher \u003d pattern.matcher(string);"},{"lineNumber":51,"author":{"gitId":"Andrewzhang217"},"content":"        if (!matcher.matches()) {"},{"lineNumber":52,"author":{"gitId":"Andrewzhang217"},"content":"            throw new RuntimeException(string +\" failed to match regex!\");"},{"lineNumber":53,"author":{"gitId":"Andrewzhang217"},"content":"        }"},{"lineNumber":54,"author":{"gitId":"Andrewzhang217"},"content":"        return LocalDateTime.of(Integer.parseInt(matcher.group(\"year\")),"},{"lineNumber":55,"author":{"gitId":"Andrewzhang217"},"content":"                Integer.parseInt(matcher.group(\"month\")),"},{"lineNumber":56,"author":{"gitId":"Andrewzhang217"},"content":"                Integer.parseInt(matcher.group(\"day\")),"},{"lineNumber":57,"author":{"gitId":"Andrewzhang217"},"content":"                Integer.parseInt(matcher.group(\"hour\")),"},{"lineNumber":58,"author":{"gitId":"Andrewzhang217"},"content":"                Integer.parseInt(matcher.group(\"minute\")));"},{"lineNumber":59,"author":{"gitId":"Andrewzhang217"},"content":"    }"},{"lineNumber":60,"author":{"gitId":"Andrewzhang217"},"content":""},{"lineNumber":61,"author":{"gitId":"Andrewzhang217"},"content":""},{"lineNumber":62,"author":{"gitId":"Andrewzhang217"},"content":"    public static boolean isDateTime(String string) {"},{"lineNumber":63,"author":{"gitId":"Andrewzhang217"},"content":"        return DATETIME_PATTERN_LIST.stream().anyMatch(x -\u003e x.matcher(string).matches());"},{"lineNumber":64,"author":{"gitId":"Andrewzhang217"},"content":"    }"},{"lineNumber":65,"author":{"gitId":"Andrewzhang217"},"content":""},{"lineNumber":66,"author":{"gitId":"Andrewzhang217"},"content":""},{"lineNumber":67,"author":{"gitId":"Andrewzhang217"},"content":"    public static boolean isDate(String string) {"},{"lineNumber":68,"author":{"gitId":"Andrewzhang217"},"content":"        return DATE_PATTERN_LIST.stream().anyMatch(x -\u003e x.matcher(string).matches());"},{"lineNumber":69,"author":{"gitId":"Andrewzhang217"},"content":"    }"},{"lineNumber":70,"author":{"gitId":"Andrewzhang217"},"content":"}"}],"authorContributionMap":{"Andrewzhang217":70}},{"path":"src/main/java/TimeWrapper.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Andrewzhang217"},"content":"import java.time.LocalDate;"},{"lineNumber":2,"author":{"gitId":"Andrewzhang217"},"content":"import java.time.LocalDateTime;"},{"lineNumber":3,"author":{"gitId":"Andrewzhang217"},"content":""},{"lineNumber":4,"author":{"gitId":"Andrewzhang217"},"content":""},{"lineNumber":5,"author":{"gitId":"Andrewzhang217"},"content":"public class TimeWrapper {"},{"lineNumber":6,"author":{"gitId":"Andrewzhang217"},"content":"    private final LocalDate date;"},{"lineNumber":7,"author":{"gitId":"Andrewzhang217"},"content":"    private final LocalDateTime dateTime;"},{"lineNumber":8,"author":{"gitId":"Andrewzhang217"},"content":"    private final String message;"},{"lineNumber":9,"author":{"gitId":"Andrewzhang217"},"content":""},{"lineNumber":10,"author":{"gitId":"Andrewzhang217"},"content":"    private TimeWrapper(LocalDate date, LocalDateTime dateTime, String message) {"},{"lineNumber":11,"author":{"gitId":"Andrewzhang217"},"content":"        this.date \u003d date;"},{"lineNumber":12,"author":{"gitId":"Andrewzhang217"},"content":"        this.dateTime \u003d dateTime;"},{"lineNumber":13,"author":{"gitId":"Andrewzhang217"},"content":"        this.message \u003d message;"},{"lineNumber":14,"author":{"gitId":"Andrewzhang217"},"content":"    }"},{"lineNumber":15,"author":{"gitId":"Andrewzhang217"},"content":""},{"lineNumber":16,"author":{"gitId":"Andrewzhang217"},"content":"    public static TimeWrapper getTimeWrapper(String string) {"},{"lineNumber":17,"author":{"gitId":"Andrewzhang217"},"content":"        if (TimeParser.isDateTime(string)) {"},{"lineNumber":18,"author":{"gitId":"Andrewzhang217"},"content":"            LocalDateTime ldt \u003d TimeParser.parseDateTime(string);"},{"lineNumber":19,"author":{"gitId":"Andrewzhang217"},"content":"            return new TimeWrapper(ldt.toLocalDate(), ldt, null);"},{"lineNumber":20,"author":{"gitId":"Andrewzhang217"},"content":"        } else if (TimeParser.isDate(string)) {"},{"lineNumber":21,"author":{"gitId":"Andrewzhang217"},"content":"            return new TimeWrapper(TimeParser.parseDate(string), null, null);"},{"lineNumber":22,"author":{"gitId":"Andrewzhang217"},"content":"        }"},{"lineNumber":23,"author":{"gitId":"Andrewzhang217"},"content":"        return new TimeWrapper(null, null, string);"},{"lineNumber":24,"author":{"gitId":"Andrewzhang217"},"content":"    }"},{"lineNumber":25,"author":{"gitId":"Andrewzhang217"},"content":"    "},{"lineNumber":26,"author":{"gitId":"Andrewzhang217"},"content":"    @Override"},{"lineNumber":27,"author":{"gitId":"Andrewzhang217"},"content":"    public boolean equals(Object obj) {"},{"lineNumber":28,"author":{"gitId":"Andrewzhang217"},"content":"        if (obj \u003d\u003d null) {"},{"lineNumber":29,"author":{"gitId":"Andrewzhang217"},"content":"            return false;"},{"lineNumber":30,"author":{"gitId":"Andrewzhang217"},"content":"        } else if (obj \u003d\u003d this) {"},{"lineNumber":31,"author":{"gitId":"Andrewzhang217"},"content":"            return true;"},{"lineNumber":32,"author":{"gitId":"Andrewzhang217"},"content":"        } else if (!(obj instanceof TimeWrapper)) {"},{"lineNumber":33,"author":{"gitId":"Andrewzhang217"},"content":"            return false;"},{"lineNumber":34,"author":{"gitId":"Andrewzhang217"},"content":"        }"},{"lineNumber":35,"author":{"gitId":"Andrewzhang217"},"content":"        TimeWrapper tw \u003d (TimeWrapper) obj;"},{"lineNumber":36,"author":{"gitId":"Andrewzhang217"},"content":"        if (this.dateTime !\u003d null \u0026\u0026 tw.dateTime !\u003d null) {"},{"lineNumber":37,"author":{"gitId":"Andrewzhang217"},"content":"            return this.dateTime.equals(tw.dateTime);"},{"lineNumber":38,"author":{"gitId":"Andrewzhang217"},"content":"        }"},{"lineNumber":39,"author":{"gitId":"Andrewzhang217"},"content":"        if (this.date !\u003d null \u0026\u0026 tw.date !\u003d null) {"},{"lineNumber":40,"author":{"gitId":"Andrewzhang217"},"content":"            return this.date.equals(tw.date);"},{"lineNumber":41,"author":{"gitId":"Andrewzhang217"},"content":"        }"},{"lineNumber":42,"author":{"gitId":"Andrewzhang217"},"content":"        if (this.message !\u003d null \u0026\u0026 tw.message !\u003d null) {"},{"lineNumber":43,"author":{"gitId":"Andrewzhang217"},"content":"            return this.message.equals(tw.message);"},{"lineNumber":44,"author":{"gitId":"Andrewzhang217"},"content":"        }"},{"lineNumber":45,"author":{"gitId":"Andrewzhang217"},"content":"        return false;"},{"lineNumber":46,"author":{"gitId":"Andrewzhang217"},"content":"    }"},{"lineNumber":47,"author":{"gitId":"Andrewzhang217"},"content":""},{"lineNumber":48,"author":{"gitId":"Andrewzhang217"},"content":"    @Override"},{"lineNumber":49,"author":{"gitId":"Andrewzhang217"},"content":"    public String toString() {"},{"lineNumber":50,"author":{"gitId":"Andrewzhang217"},"content":"        if (dateTime !\u003d null) {"},{"lineNumber":51,"author":{"gitId":"Andrewzhang217"},"content":"            return dateTime.toString();"},{"lineNumber":52,"author":{"gitId":"Andrewzhang217"},"content":"        }"},{"lineNumber":53,"author":{"gitId":"Andrewzhang217"},"content":"        if (date !\u003d null) {"},{"lineNumber":54,"author":{"gitId":"Andrewzhang217"},"content":"            return date.toString();"},{"lineNumber":55,"author":{"gitId":"Andrewzhang217"},"content":"        }"},{"lineNumber":56,"author":{"gitId":"Andrewzhang217"},"content":"        if (message !\u003d null) {"},{"lineNumber":57,"author":{"gitId":"Andrewzhang217"},"content":"            return message;"},{"lineNumber":58,"author":{"gitId":"Andrewzhang217"},"content":"        }"},{"lineNumber":59,"author":{"gitId":"Andrewzhang217"},"content":"        return \"No data found.\";"},{"lineNumber":60,"author":{"gitId":"Andrewzhang217"},"content":"    }"},{"lineNumber":61,"author":{"gitId":"Andrewzhang217"},"content":"}"}],"authorContributionMap":{"Andrewzhang217":61}},{"path":"src/main/java/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Andrewzhang217"},"content":"public class Todo extends Task {"},{"lineNumber":2,"author":{"gitId":"Andrewzhang217"},"content":""},{"lineNumber":3,"author":{"gitId":"Andrewzhang217"},"content":"    protected String by;"},{"lineNumber":4,"author":{"gitId":"Andrewzhang217"},"content":""},{"lineNumber":5,"author":{"gitId":"Andrewzhang217"},"content":"    public Todo(String description, String by) {"},{"lineNumber":6,"author":{"gitId":"Andrewzhang217"},"content":"        super(description);"},{"lineNumber":7,"author":{"gitId":"Andrewzhang217"},"content":"        this.by \u003d by;"},{"lineNumber":8,"author":{"gitId":"Andrewzhang217"},"content":"    }"},{"lineNumber":9,"author":{"gitId":"Andrewzhang217"},"content":""},{"lineNumber":10,"author":{"gitId":"Andrewzhang217"},"content":"    @Override"},{"lineNumber":11,"author":{"gitId":"Andrewzhang217"},"content":"    public String toString() {"},{"lineNumber":12,"author":{"gitId":"Andrewzhang217"},"content":"        return \"[T]\" + super.toString() + \" (by: \" + by + \")\";"},{"lineNumber":13,"author":{"gitId":"Andrewzhang217"},"content":"    }"},{"lineNumber":14,"author":{"gitId":"Andrewzhang217"},"content":"}"}],"authorContributionMap":{"Andrewzhang217":14}},{"path":"src/main/java/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Andrewzhang217"},"content":"import java.util.ArrayList;"},{"lineNumber":2,"author":{"gitId":"Andrewzhang217"},"content":"import java.util.List;"},{"lineNumber":3,"author":{"gitId":"Andrewzhang217"},"content":""},{"lineNumber":4,"author":{"gitId":"Andrewzhang217"},"content":"public class Ui {"},{"lineNumber":5,"author":{"gitId":"Andrewzhang217"},"content":""},{"lineNumber":6,"author":{"gitId":"Andrewzhang217"},"content":"    public static List\u003cTask\u003e list \u003d new ArrayList\u003c\u003e();"},{"lineNumber":7,"author":{"gitId":"Andrewzhang217"},"content":"    public static void greeting() {"},{"lineNumber":8,"author":{"gitId":"Andrewzhang217"},"content":"        System.out.println(\"Hello! I\u0027m Duke\");"},{"lineNumber":9,"author":{"gitId":"Andrewzhang217"},"content":"        System.out.println(\"What can I do for you?\");"},{"lineNumber":10,"author":{"gitId":"Andrewzhang217"},"content":"    }"},{"lineNumber":11,"author":{"gitId":"Andrewzhang217"},"content":""},{"lineNumber":12,"author":{"gitId":"Andrewzhang217"},"content":"    public static void bye() {"},{"lineNumber":13,"author":{"gitId":"Andrewzhang217"},"content":"        System.out.println(\"Bye. Hope to see you again soon!\");"},{"lineNumber":14,"author":{"gitId":"Andrewzhang217"},"content":"    }"},{"lineNumber":15,"author":{"gitId":"Andrewzhang217"},"content":""},{"lineNumber":16,"author":{"gitId":"Andrewzhang217"},"content":"    public static void addTasks(String input) {"},{"lineNumber":17,"author":{"gitId":"Andrewzhang217"},"content":"        if(input.equals(\"todo\")){"},{"lineNumber":18,"author":{"gitId":"Andrewzhang217"},"content":"            throw new DukeEmptyCommandException(\"OOPS!!! The description of a todo cannot be empty.\");"},{"lineNumber":19,"author":{"gitId":"Andrewzhang217"},"content":"        } else if (input.equals(\"deadline\")){"},{"lineNumber":20,"author":{"gitId":"Andrewzhang217"},"content":"            throw new DukeEmptyCommandException(\"OOPS!!! The description of a deadline cannot be empty.\");"},{"lineNumber":21,"author":{"gitId":"Andrewzhang217"},"content":"        } else if (input.equals(\"event\")){"},{"lineNumber":22,"author":{"gitId":"Andrewzhang217"},"content":"            throw new DukeEmptyCommandException(\"OOPS!!! The description of an event cannot be empty.\");"},{"lineNumber":23,"author":{"gitId":"Andrewzhang217"},"content":"        } else {"},{"lineNumber":24,"author":{"gitId":"Andrewzhang217"},"content":"            Task t \u003d new Task(input);"},{"lineNumber":25,"author":{"gitId":"Andrewzhang217"},"content":"            list.add(t);"},{"lineNumber":26,"author":{"gitId":"Andrewzhang217"},"content":"            System.out.println(\"Got it. I\u0027ve added this task: \");"},{"lineNumber":27,"author":{"gitId":"Andrewzhang217"},"content":"            System.out.println(t.toString());"},{"lineNumber":28,"author":{"gitId":"Andrewzhang217"},"content":""},{"lineNumber":29,"author":{"gitId":"Andrewzhang217"},"content":"        }"},{"lineNumber":30,"author":{"gitId":"Andrewzhang217"},"content":"    }"},{"lineNumber":31,"author":{"gitId":"Andrewzhang217"},"content":"}"}],"authorContributionMap":{"Andrewzhang217":31}},{"path":"src/main/java/UiTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Andrewzhang217"},"content":"import org.junit.After;"},{"lineNumber":2,"author":{"gitId":"Andrewzhang217"},"content":"import org.junit.Before;"},{"lineNumber":3,"author":{"gitId":"Andrewzhang217"},"content":"import org.junit.jupiter.api.Test;"},{"lineNumber":4,"author":{"gitId":"Andrewzhang217"},"content":"import java.io.ByteArrayOutputStream;"},{"lineNumber":5,"author":{"gitId":"Andrewzhang217"},"content":"import java.io.PrintStream;"},{"lineNumber":6,"author":{"gitId":"Andrewzhang217"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;"},{"lineNumber":7,"author":{"gitId":"Andrewzhang217"},"content":""},{"lineNumber":8,"author":{"gitId":"Andrewzhang217"},"content":""},{"lineNumber":9,"author":{"gitId":"Andrewzhang217"},"content":"public class UiTest {"},{"lineNumber":10,"author":{"gitId":"Andrewzhang217"},"content":"    private final ByteArrayOutputStream outContent \u003d new ByteArrayOutputStream();"},{"lineNumber":11,"author":{"gitId":"Andrewzhang217"},"content":"    private final ByteArrayOutputStream errContent \u003d new ByteArrayOutputStream();"},{"lineNumber":12,"author":{"gitId":"Andrewzhang217"},"content":"    private final PrintStream originalOut \u003d System.out;"},{"lineNumber":13,"author":{"gitId":"Andrewzhang217"},"content":"    private final PrintStream originalErr \u003d System.err;"},{"lineNumber":14,"author":{"gitId":"Andrewzhang217"},"content":""},{"lineNumber":15,"author":{"gitId":"Andrewzhang217"},"content":"    @Before"},{"lineNumber":16,"author":{"gitId":"Andrewzhang217"},"content":"        public void setUpStreams() {"},{"lineNumber":17,"author":{"gitId":"Andrewzhang217"},"content":"            System.setOut(new PrintStream(outContent));"},{"lineNumber":18,"author":{"gitId":"Andrewzhang217"},"content":"            System.setErr(new PrintStream(errContent));"},{"lineNumber":19,"author":{"gitId":"Andrewzhang217"},"content":"     }"},{"lineNumber":20,"author":{"gitId":"Andrewzhang217"},"content":""},{"lineNumber":21,"author":{"gitId":"Andrewzhang217"},"content":"     @After"},{"lineNumber":22,"author":{"gitId":"Andrewzhang217"},"content":"         public void restoreStreams() {"},{"lineNumber":23,"author":{"gitId":"Andrewzhang217"},"content":"            System.setOut(originalOut);"},{"lineNumber":24,"author":{"gitId":"Andrewzhang217"},"content":"            System.setErr(originalErr);"},{"lineNumber":25,"author":{"gitId":"Andrewzhang217"},"content":"     }"},{"lineNumber":26,"author":{"gitId":"Andrewzhang217"},"content":""},{"lineNumber":27,"author":{"gitId":"Andrewzhang217"},"content":"     @Test"},{"lineNumber":28,"author":{"gitId":"Andrewzhang217"},"content":"        public void greeting_printed(){"},{"lineNumber":29,"author":{"gitId":"Andrewzhang217"},"content":"            Ui.greeting();"},{"lineNumber":30,"author":{"gitId":"Andrewzhang217"},"content":"            String expectedOutput \u003d \"Hello! I\u0027m Duke \\n\" + \" What can I do for you?\";"},{"lineNumber":31,"author":{"gitId":"Andrewzhang217"},"content":"            assertEquals(expectedOutput, outContent.toString());"},{"lineNumber":32,"author":{"gitId":"Andrewzhang217"},"content":"    }"},{"lineNumber":33,"author":{"gitId":"Andrewzhang217"},"content":""},{"lineNumber":34,"author":{"gitId":"Andrewzhang217"},"content":""},{"lineNumber":35,"author":{"gitId":"Andrewzhang217"},"content":"    @Test"},{"lineNumber":36,"author":{"gitId":"Andrewzhang217"},"content":"        public void bye_printed(){"},{"lineNumber":37,"author":{"gitId":"Andrewzhang217"},"content":"        Ui.bye();"},{"lineNumber":38,"author":{"gitId":"Andrewzhang217"},"content":"        String expectedOutput \u003d \"Bye. Hope to see you again soon!\";"},{"lineNumber":39,"author":{"gitId":"Andrewzhang217"},"content":"        assertEquals(expectedOutput, outContent.toString());"},{"lineNumber":40,"author":{"gitId":"Andrewzhang217"},"content":"    }"},{"lineNumber":41,"author":{"gitId":"Andrewzhang217"},"content":""},{"lineNumber":42,"author":{"gitId":"Andrewzhang217"},"content":"    }"},{"lineNumber":43,"author":{"gitId":"Andrewzhang217"},"content":""}],"authorContributionMap":{"Andrewzhang217":43}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"Andrewzhang217"},"content":"todo borrow book"},{"lineNumber":2,"author":{"gitId":"Andrewzhang217"},"content":"list"},{"lineNumber":3,"author":{"gitId":"Andrewzhang217"},"content":"deadline return book /by Sunday"},{"lineNumber":4,"author":{"gitId":"Andrewzhang217"},"content":"list"},{"lineNumber":5,"author":{"gitId":"Andrewzhang217"},"content":"event project meeting /at Mon 2-4pm"}],"authorContributionMap":{"Andrewzhang217":5}},{"path":"text-ui-test/runtest.sh","fileType":"sh","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"#!/usr/bin/env bash"},{"lineNumber":2,"author":{"gitId":"-"},"content":""},{"lineNumber":3,"author":{"gitId":"-"},"content":"# create bin directory if it doesn\u0027t exist"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if [ ! -d \"../bin\" ]"},{"lineNumber":5,"author":{"gitId":"-"},"content":"then"},{"lineNumber":6,"author":{"gitId":"-"},"content":"    mkdir ../bin"},{"lineNumber":7,"author":{"gitId":"-"},"content":"fi"},{"lineNumber":8,"author":{"gitId":"-"},"content":""},{"lineNumber":9,"author":{"gitId":"-"},"content":"# delete output from previous run"},{"lineNumber":10,"author":{"gitId":"Andrewzhang217"},"content":"if [ -e \"./output.TXT\" ]"},{"lineNumber":11,"author":{"gitId":"-"},"content":"then"},{"lineNumber":12,"author":{"gitId":"Andrewzhang217"},"content":"    rm output.txt"},{"lineNumber":13,"author":{"gitId":"-"},"content":"fi"},{"lineNumber":14,"author":{"gitId":"-"},"content":""},{"lineNumber":15,"author":{"gitId":"-"},"content":"# compile the code into the bin folder, terminates if error occurred"},{"lineNumber":16,"author":{"gitId":"-"},"content":"if ! javac -cp ../src/main/java -Xlint:none -d ../bin ../src/main/java/*.java"},{"lineNumber":17,"author":{"gitId":"-"},"content":"then"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    echo \"********** BUILD FAILURE **********\""},{"lineNumber":19,"author":{"gitId":"-"},"content":"    exit 1"},{"lineNumber":20,"author":{"gitId":"-"},"content":"fi"},{"lineNumber":21,"author":{"gitId":"-"},"content":""},{"lineNumber":22,"author":{"gitId":"-"},"content":"# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"},{"lineNumber":23,"author":{"gitId":"Andrewzhang217"},"content":"java -classpath ../bin Duke \u003c input.txt \u003e output.txt"},{"lineNumber":24,"author":{"gitId":"-"},"content":""},{"lineNumber":25,"author":{"gitId":"-"},"content":"# convert to UNIX format"},{"lineNumber":26,"author":{"gitId":"-"},"content":"cp EXPECTED.TXT EXPECTED-UNIX.TXT"},{"lineNumber":27,"author":{"gitId":"Andrewzhang217"},"content":"dos2unix output.txt OUTPUT-UNIX.TXT"},{"lineNumber":28,"author":{"gitId":"-"},"content":""},{"lineNumber":29,"author":{"gitId":"-"},"content":"# compare the output to the expected output"},{"lineNumber":30,"author":{"gitId":"Andrewzhang217"},"content":"diff output.txt EXPECTED-UNIX.TXT"},{"lineNumber":31,"author":{"gitId":"-"},"content":"if [ $? -eq 0 ]"},{"lineNumber":32,"author":{"gitId":"-"},"content":"then"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    echo \"Test result: PASSED\""},{"lineNumber":34,"author":{"gitId":"-"},"content":"    exit 0"},{"lineNumber":35,"author":{"gitId":"-"},"content":"else"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    echo \"Test result: FAILED\""},{"lineNumber":37,"author":{"gitId":"-"},"content":"    exit 1"},{"lineNumber":38,"author":{"gitId":"-"},"content":"fi"}],"authorContributionMap":{"-":33,"Andrewzhang217":5}}]
