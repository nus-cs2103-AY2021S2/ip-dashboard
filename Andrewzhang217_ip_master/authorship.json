[{"path":"README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"Andrewzhang217"},"content":"# data.Duke project template"},{"lineNumber":2,"author":{"gitId":"-"},"content":""},{"lineNumber":3,"author":{"gitId":"-"},"content":"This is a project template for a greenfield Java project. It\u0027s named after the Java mascot _Duke_. Given below are instructions on how to use it."},{"lineNumber":4,"author":{"gitId":"-"},"content":""},{"lineNumber":5,"author":{"gitId":"-"},"content":"## Setting up in Intellij"},{"lineNumber":6,"author":{"gitId":"-"},"content":""},{"lineNumber":7,"author":{"gitId":"-"},"content":"Prerequisites: JDK 11, update Intellij to the most recent version."},{"lineNumber":8,"author":{"gitId":"-"},"content":""},{"lineNumber":9,"author":{"gitId":"-"},"content":"1. Open Intellij (if you are not in the welcome screen, click `File` \u003e `Close Project` to close the existing project first)"},{"lineNumber":10,"author":{"gitId":"-"},"content":"1. Open the project into Intellij as follows:"},{"lineNumber":11,"author":{"gitId":"-"},"content":"   1. Click `Open`."},{"lineNumber":12,"author":{"gitId":"-"},"content":"   1. Select the project directory, and click `OK`."},{"lineNumber":13,"author":{"gitId":"-"},"content":"   1. If there are any further prompts, accept the defaults."},{"lineNumber":14,"author":{"gitId":"-"},"content":"1. Configure the project to use **JDK 11** (not other versions) as explained in [here](https://www.jetbrains.com/help/idea/sdk.html#set-up-jdk)."},{"lineNumber":15,"author":{"gitId":"Andrewzhang217"},"content":"1. After that, locate the `src/main/java/data.Duke.java` file, right-click it, and choose `Run data.Duke.main()`. If the setup is correct, you should see something like the below:"},{"lineNumber":16,"author":{"gitId":"-"},"content":"   ```"},{"lineNumber":17,"author":{"gitId":"-"},"content":"   Hello from"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    ____        _        "},{"lineNumber":19,"author":{"gitId":"-"},"content":"   |  _ \\ _   _| | _____ "},{"lineNumber":20,"author":{"gitId":"-"},"content":"   | | | | | | | |/ / _ \\"},{"lineNumber":21,"author":{"gitId":"-"},"content":"   | |_| | |_| |   \u003c  __/"},{"lineNumber":22,"author":{"gitId":"-"},"content":"   |____/ \\__,_|_|\\_\\___|"},{"lineNumber":23,"author":{"gitId":"-"},"content":"   ```"}],"authorContributionMap":{"-":21,"Andrewzhang217":2}},{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"Andrewzhang217"},"content":"plugins {"},{"lineNumber":2,"author":{"gitId":"Andrewzhang217"},"content":"    id \u0027java\u0027"},{"lineNumber":3,"author":{"gitId":"Andrewzhang217"},"content":"    id \u0027application\u0027"},{"lineNumber":4,"author":{"gitId":"Andrewzhang217"},"content":"    id \u0027checkstyle\u0027"},{"lineNumber":5,"author":{"gitId":"Andrewzhang217"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027"},{"lineNumber":6,"author":{"gitId":"Andrewzhang217"},"content":"}"},{"lineNumber":7,"author":{"gitId":"Andrewzhang217"},"content":""},{"lineNumber":8,"author":{"gitId":"Andrewzhang217"},"content":"repositories {"},{"lineNumber":9,"author":{"gitId":"Andrewzhang217"},"content":"    mavenCentral()"},{"lineNumber":10,"author":{"gitId":"Andrewzhang217"},"content":"}"},{"lineNumber":11,"author":{"gitId":"Andrewzhang217"},"content":""},{"lineNumber":12,"author":{"gitId":"Andrewzhang217"},"content":"dependencies {"},{"lineNumber":13,"author":{"gitId":"Andrewzhang217"},"content":"    String javaFxVersion \u003d \u002711\u0027"},{"lineNumber":14,"author":{"gitId":"Andrewzhang217"},"content":""},{"lineNumber":15,"author":{"gitId":"Andrewzhang217"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027"},{"lineNumber":16,"author":{"gitId":"Andrewzhang217"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"},{"lineNumber":17,"author":{"gitId":"Andrewzhang217"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"},{"lineNumber":18,"author":{"gitId":"Andrewzhang217"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027"},{"lineNumber":19,"author":{"gitId":"Andrewzhang217"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"},{"lineNumber":20,"author":{"gitId":"Andrewzhang217"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"},{"lineNumber":21,"author":{"gitId":"Andrewzhang217"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027"},{"lineNumber":22,"author":{"gitId":"Andrewzhang217"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"},{"lineNumber":23,"author":{"gitId":"Andrewzhang217"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"},{"lineNumber":24,"author":{"gitId":"Andrewzhang217"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027"},{"lineNumber":25,"author":{"gitId":"Andrewzhang217"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"},{"lineNumber":26,"author":{"gitId":"Andrewzhang217"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"},{"lineNumber":27,"author":{"gitId":"Andrewzhang217"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.5.0\u0027"},{"lineNumber":28,"author":{"gitId":"Andrewzhang217"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.5.0\u0027"},{"lineNumber":29,"author":{"gitId":"Andrewzhang217"},"content":"}"},{"lineNumber":30,"author":{"gitId":"Andrewzhang217"},"content":""},{"lineNumber":31,"author":{"gitId":"Andrewzhang217"},"content":"test {"},{"lineNumber":32,"author":{"gitId":"Andrewzhang217"},"content":"    useJUnitPlatform()"},{"lineNumber":33,"author":{"gitId":"Andrewzhang217"},"content":""},{"lineNumber":34,"author":{"gitId":"Andrewzhang217"},"content":"    testLogging {"},{"lineNumber":35,"author":{"gitId":"Andrewzhang217"},"content":"        events \"passed\", \"skipped\", \"failed\""},{"lineNumber":36,"author":{"gitId":"Andrewzhang217"},"content":""},{"lineNumber":37,"author":{"gitId":"Andrewzhang217"},"content":"        showExceptions true"},{"lineNumber":38,"author":{"gitId":"Andrewzhang217"},"content":"        exceptionFormat \"full\""},{"lineNumber":39,"author":{"gitId":"Andrewzhang217"},"content":"        showCauses true"},{"lineNumber":40,"author":{"gitId":"Andrewzhang217"},"content":"        showStackTraces true"},{"lineNumber":41,"author":{"gitId":"Andrewzhang217"},"content":"        showStandardStreams \u003d false"},{"lineNumber":42,"author":{"gitId":"Andrewzhang217"},"content":"    }"},{"lineNumber":43,"author":{"gitId":"Andrewzhang217"},"content":"}"},{"lineNumber":44,"author":{"gitId":"Andrewzhang217"},"content":""},{"lineNumber":45,"author":{"gitId":"Andrewzhang217"},"content":"application {"},{"lineNumber":46,"author":{"gitId":"Andrewzhang217"},"content":"    mainClassName \u003d \"Main\""},{"lineNumber":47,"author":{"gitId":"Andrewzhang217"},"content":"}"},{"lineNumber":48,"author":{"gitId":"Andrewzhang217"},"content":""},{"lineNumber":49,"author":{"gitId":"Andrewzhang217"},"content":"shadowJar {"},{"lineNumber":50,"author":{"gitId":"Andrewzhang217"},"content":"    archiveBaseName \u003d \"duke\""},{"lineNumber":51,"author":{"gitId":"Andrewzhang217"},"content":"    archiveClassifier \u003d null"},{"lineNumber":52,"author":{"gitId":"Andrewzhang217"},"content":"}"},{"lineNumber":53,"author":{"gitId":"Andrewzhang217"},"content":""},{"lineNumber":54,"author":{"gitId":"Andrewzhang217"},"content":"checkstyle {"},{"lineNumber":55,"author":{"gitId":"Andrewzhang217"},"content":"    toolVersion \u003d \u00278.29\u0027"},{"lineNumber":56,"author":{"gitId":"Andrewzhang217"},"content":"}"},{"lineNumber":57,"author":{"gitId":"Andrewzhang217"},"content":""},{"lineNumber":58,"author":{"gitId":"Andrewzhang217"},"content":"run{"},{"lineNumber":59,"author":{"gitId":"Andrewzhang217"},"content":"    standardInput \u003d System.in"},{"lineNumber":60,"author":{"gitId":"Andrewzhang217"},"content":"}"}],"authorContributionMap":{"Andrewzhang217":60}},{"path":"gradlew.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"Andrewzhang217"},"content":"@rem"},{"lineNumber":2,"author":{"gitId":"Andrewzhang217"},"content":"@rem Copyright 2015 the original author or authors."},{"lineNumber":3,"author":{"gitId":"Andrewzhang217"},"content":"@rem"},{"lineNumber":4,"author":{"gitId":"Andrewzhang217"},"content":"@rem Licensed under the Apache License, Version 2.0 (the \"License\");"},{"lineNumber":5,"author":{"gitId":"Andrewzhang217"},"content":"@rem you may not use this file except in compliance with the License."},{"lineNumber":6,"author":{"gitId":"Andrewzhang217"},"content":"@rem You may obtain a copy of the License at"},{"lineNumber":7,"author":{"gitId":"Andrewzhang217"},"content":"@rem"},{"lineNumber":8,"author":{"gitId":"Andrewzhang217"},"content":"@rem      https://www.apache.org/licenses/LICENSE-2.0"},{"lineNumber":9,"author":{"gitId":"Andrewzhang217"},"content":"@rem"},{"lineNumber":10,"author":{"gitId":"Andrewzhang217"},"content":"@rem Unless required by applicable law or agreed to in writing, software"},{"lineNumber":11,"author":{"gitId":"Andrewzhang217"},"content":"@rem distributed under the License is distributed on an \"AS IS\" BASIS,"},{"lineNumber":12,"author":{"gitId":"Andrewzhang217"},"content":"@rem WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied."},{"lineNumber":13,"author":{"gitId":"Andrewzhang217"},"content":"@rem See the License for the specific language governing permissions and"},{"lineNumber":14,"author":{"gitId":"Andrewzhang217"},"content":"@rem limitations under the License."},{"lineNumber":15,"author":{"gitId":"Andrewzhang217"},"content":"@rem"},{"lineNumber":16,"author":{"gitId":"Andrewzhang217"},"content":""},{"lineNumber":17,"author":{"gitId":"Andrewzhang217"},"content":"@if \"%DEBUG%\" \u003d\u003d \"\" @echo off"},{"lineNumber":18,"author":{"gitId":"Andrewzhang217"},"content":"@rem ##########################################################################"},{"lineNumber":19,"author":{"gitId":"Andrewzhang217"},"content":"@rem"},{"lineNumber":20,"author":{"gitId":"Andrewzhang217"},"content":"@rem  Gradle startup script for Windows"},{"lineNumber":21,"author":{"gitId":"Andrewzhang217"},"content":"@rem"},{"lineNumber":22,"author":{"gitId":"Andrewzhang217"},"content":"@rem ##########################################################################"},{"lineNumber":23,"author":{"gitId":"Andrewzhang217"},"content":""},{"lineNumber":24,"author":{"gitId":"Andrewzhang217"},"content":"@rem Set local scope for the variables with windows NT shell"},{"lineNumber":25,"author":{"gitId":"Andrewzhang217"},"content":"if \"%OS%\"\u003d\u003d\"Windows_NT\" setlocal"},{"lineNumber":26,"author":{"gitId":"Andrewzhang217"},"content":""},{"lineNumber":27,"author":{"gitId":"Andrewzhang217"},"content":"set DIRNAME\u003d%~dp0"},{"lineNumber":28,"author":{"gitId":"Andrewzhang217"},"content":"if \"%DIRNAME%\" \u003d\u003d \"\" set DIRNAME\u003d."},{"lineNumber":29,"author":{"gitId":"Andrewzhang217"},"content":"set APP_BASE_NAME\u003d%~n0"},{"lineNumber":30,"author":{"gitId":"Andrewzhang217"},"content":"set APP_HOME\u003d%DIRNAME%"},{"lineNumber":31,"author":{"gitId":"Andrewzhang217"},"content":""},{"lineNumber":32,"author":{"gitId":"Andrewzhang217"},"content":"@rem Resolve any \".\" and \"..\" in APP_HOME to make it shorter."},{"lineNumber":33,"author":{"gitId":"Andrewzhang217"},"content":"for %%i in (\"%APP_HOME%\") do set APP_HOME\u003d%%~fi"},{"lineNumber":34,"author":{"gitId":"Andrewzhang217"},"content":""},{"lineNumber":35,"author":{"gitId":"Andrewzhang217"},"content":"@rem Add default JVM options here. You can also use JAVA_OPTS and GRADLE_OPTS to pass JVM options to this script."},{"lineNumber":36,"author":{"gitId":"Andrewzhang217"},"content":"set DEFAULT_JVM_OPTS\u003d\"-Xmx64m\" \"-Xms64m\""},{"lineNumber":37,"author":{"gitId":"Andrewzhang217"},"content":""},{"lineNumber":38,"author":{"gitId":"Andrewzhang217"},"content":"@rem Find java.exe"},{"lineNumber":39,"author":{"gitId":"Andrewzhang217"},"content":"if defined JAVA_HOME goto findJavaFromJavaHome"},{"lineNumber":40,"author":{"gitId":"Andrewzhang217"},"content":""},{"lineNumber":41,"author":{"gitId":"Andrewzhang217"},"content":"set JAVA_EXE\u003djava.exe"},{"lineNumber":42,"author":{"gitId":"Andrewzhang217"},"content":"%JAVA_EXE% -version \u003eNUL 2\u003e\u00261"},{"lineNumber":43,"author":{"gitId":"Andrewzhang217"},"content":"if \"%ERRORLEVEL%\" \u003d\u003d \"0\" goto execute"},{"lineNumber":44,"author":{"gitId":"Andrewzhang217"},"content":""},{"lineNumber":45,"author":{"gitId":"Andrewzhang217"},"content":"echo."},{"lineNumber":46,"author":{"gitId":"Andrewzhang217"},"content":"echo ERROR: JAVA_HOME is not set and no \u0027java\u0027 command could be found in your PATH."},{"lineNumber":47,"author":{"gitId":"Andrewzhang217"},"content":"echo."},{"lineNumber":48,"author":{"gitId":"Andrewzhang217"},"content":"echo Please set the JAVA_HOME variable in your environment to match the"},{"lineNumber":49,"author":{"gitId":"Andrewzhang217"},"content":"echo location of your Java installation."},{"lineNumber":50,"author":{"gitId":"Andrewzhang217"},"content":""},{"lineNumber":51,"author":{"gitId":"Andrewzhang217"},"content":"goto fail"},{"lineNumber":52,"author":{"gitId":"Andrewzhang217"},"content":""},{"lineNumber":53,"author":{"gitId":"Andrewzhang217"},"content":":findJavaFromJavaHome"},{"lineNumber":54,"author":{"gitId":"Andrewzhang217"},"content":"set JAVA_HOME\u003d%JAVA_HOME:\"\u003d%"},{"lineNumber":55,"author":{"gitId":"Andrewzhang217"},"content":"set JAVA_EXE\u003d%JAVA_HOME%/bin/java.exe"},{"lineNumber":56,"author":{"gitId":"Andrewzhang217"},"content":""},{"lineNumber":57,"author":{"gitId":"Andrewzhang217"},"content":"if exist \"%JAVA_EXE%\" goto execute"},{"lineNumber":58,"author":{"gitId":"Andrewzhang217"},"content":""},{"lineNumber":59,"author":{"gitId":"Andrewzhang217"},"content":"echo."},{"lineNumber":60,"author":{"gitId":"Andrewzhang217"},"content":"echo ERROR: JAVA_HOME is set to an invalid directory: %JAVA_HOME%"},{"lineNumber":61,"author":{"gitId":"Andrewzhang217"},"content":"echo."},{"lineNumber":62,"author":{"gitId":"Andrewzhang217"},"content":"echo Please set the JAVA_HOME variable in your environment to match the"},{"lineNumber":63,"author":{"gitId":"Andrewzhang217"},"content":"echo location of your Java installation."},{"lineNumber":64,"author":{"gitId":"Andrewzhang217"},"content":""},{"lineNumber":65,"author":{"gitId":"Andrewzhang217"},"content":"goto fail"},{"lineNumber":66,"author":{"gitId":"Andrewzhang217"},"content":""},{"lineNumber":67,"author":{"gitId":"Andrewzhang217"},"content":":execute"},{"lineNumber":68,"author":{"gitId":"Andrewzhang217"},"content":"@rem Setup the command line"},{"lineNumber":69,"author":{"gitId":"Andrewzhang217"},"content":""},{"lineNumber":70,"author":{"gitId":"Andrewzhang217"},"content":"set CLASSPATH\u003d%APP_HOME%\\gradle\\wrapper\\gradle-wrapper.jar"},{"lineNumber":71,"author":{"gitId":"Andrewzhang217"},"content":""},{"lineNumber":72,"author":{"gitId":"Andrewzhang217"},"content":""},{"lineNumber":73,"author":{"gitId":"Andrewzhang217"},"content":"@rem Execute Gradle"},{"lineNumber":74,"author":{"gitId":"Andrewzhang217"},"content":"\"%JAVA_EXE%\" %DEFAULT_JVM_OPTS% %JAVA_OPTS% %GRADLE_OPTS% \"-Dorg.gradle.appname\u003d%APP_BASE_NAME%\" -classpath \"%CLASSPATH%\" org.gradle.wrapper.GradleWrapperMain %*"},{"lineNumber":75,"author":{"gitId":"Andrewzhang217"},"content":""},{"lineNumber":76,"author":{"gitId":"Andrewzhang217"},"content":":end"},{"lineNumber":77,"author":{"gitId":"Andrewzhang217"},"content":"@rem End local scope for the variables with windows NT shell"},{"lineNumber":78,"author":{"gitId":"Andrewzhang217"},"content":"if \"%ERRORLEVEL%\"\u003d\u003d\"0\" goto mainEnd"},{"lineNumber":79,"author":{"gitId":"Andrewzhang217"},"content":""},{"lineNumber":80,"author":{"gitId":"Andrewzhang217"},"content":":fail"},{"lineNumber":81,"author":{"gitId":"Andrewzhang217"},"content":"rem Set variable GRADLE_EXIT_CONSOLE if you need the _script_ return code instead of"},{"lineNumber":82,"author":{"gitId":"Andrewzhang217"},"content":"rem the _cmd.exe /c_ return code!"},{"lineNumber":83,"author":{"gitId":"Andrewzhang217"},"content":"if  not \"\" \u003d\u003d \"%GRADLE_EXIT_CONSOLE%\" exit 1"},{"lineNumber":84,"author":{"gitId":"Andrewzhang217"},"content":"exit /b 1"},{"lineNumber":85,"author":{"gitId":"Andrewzhang217"},"content":""},{"lineNumber":86,"author":{"gitId":"Andrewzhang217"},"content":":mainEnd"},{"lineNumber":87,"author":{"gitId":"Andrewzhang217"},"content":"if \"%OS%\"\u003d\u003d\"Windows_NT\" endlocal"},{"lineNumber":88,"author":{"gitId":"Andrewzhang217"},"content":""},{"lineNumber":89,"author":{"gitId":"Andrewzhang217"},"content":":omega"}],"authorContributionMap":{"Andrewzhang217":89}},{"path":"src/main/java/DialogBox.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"Andrewzhang217"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"},{"lineNumber":2,"author":{"gitId":"Andrewzhang217"},"content":""},{"lineNumber":3,"author":{"gitId":"Andrewzhang217"},"content":"        \u003c?import javafx.geometry.Insets?\u003e"},{"lineNumber":4,"author":{"gitId":"Andrewzhang217"},"content":"        \u003c?import javafx.scene.control.Label?\u003e"},{"lineNumber":5,"author":{"gitId":"Andrewzhang217"},"content":"        \u003c?import javafx.scene.image.ImageView?\u003e"},{"lineNumber":6,"author":{"gitId":"Andrewzhang217"},"content":"        \u003c?import javafx.scene.layout.HBox?\u003e"},{"lineNumber":7,"author":{"gitId":"Andrewzhang217"},"content":""},{"lineNumber":8,"author":{"gitId":"Andrewzhang217"},"content":"\u003cfx:root alignment\u003d\"TOP_RIGHT\" maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\" prefWidth\u003d\"400.0\" type\u003d\"javafx.scene.layout.HBox\" xmlns\u003d\"http://javafx.com/javafx/8.0.171\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e"},{"lineNumber":9,"author":{"gitId":"Andrewzhang217"},"content":"\u003cchildren\u003e"},{"lineNumber":10,"author":{"gitId":"Andrewzhang217"},"content":"    \u003cLabel fx:id\u003d\"dialog\" text\u003d\"Label\" wrapText\u003d\"true\" /\u003e"},{"lineNumber":11,"author":{"gitId":"Andrewzhang217"},"content":"    \u003cImageView fx:id\u003d\"displayPicture\" fitHeight\u003d\"99.0\" fitWidth\u003d\"99.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\" /\u003e"},{"lineNumber":12,"author":{"gitId":"Andrewzhang217"},"content":"\u003c/children\u003e"},{"lineNumber":13,"author":{"gitId":"Andrewzhang217"},"content":"\u003cpadding\u003e"},{"lineNumber":14,"author":{"gitId":"Andrewzhang217"},"content":"    \u003cInsets bottom\u003d\"15.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"15.0\" /\u003e"},{"lineNumber":15,"author":{"gitId":"Andrewzhang217"},"content":"\u003c/padding\u003e"},{"lineNumber":16,"author":{"gitId":"Andrewzhang217"},"content":"\u003c/fx:root\u003e"}],"authorContributionMap":{"Andrewzhang217":16}},{"path":"src/main/java/DialogBox.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Andrewzhang217"},"content":"import java.io.IOException;"},{"lineNumber":2,"author":{"gitId":"Andrewzhang217"},"content":"import java.util.Collections;"},{"lineNumber":3,"author":{"gitId":"Andrewzhang217"},"content":""},{"lineNumber":4,"author":{"gitId":"Andrewzhang217"},"content":"import javafx.collections.FXCollections;"},{"lineNumber":5,"author":{"gitId":"Andrewzhang217"},"content":"import javafx.collections.ObservableList;"},{"lineNumber":6,"author":{"gitId":"Andrewzhang217"},"content":"import javafx.fxml.FXML;"},{"lineNumber":7,"author":{"gitId":"Andrewzhang217"},"content":"import javafx.fxml.FXMLLoader;"},{"lineNumber":8,"author":{"gitId":"Andrewzhang217"},"content":"import javafx.geometry.Pos;"},{"lineNumber":9,"author":{"gitId":"Andrewzhang217"},"content":"import javafx.scene.Node;"},{"lineNumber":10,"author":{"gitId":"Andrewzhang217"},"content":"import javafx.scene.control.Label;"},{"lineNumber":11,"author":{"gitId":"Andrewzhang217"},"content":"import javafx.scene.image.Image;"},{"lineNumber":12,"author":{"gitId":"Andrewzhang217"},"content":"import javafx.scene.image.ImageView;"},{"lineNumber":13,"author":{"gitId":"Andrewzhang217"},"content":"import javafx.scene.layout.HBox;"},{"lineNumber":14,"author":{"gitId":"Andrewzhang217"},"content":""},{"lineNumber":15,"author":{"gitId":"Andrewzhang217"},"content":"public class DialogBox extends HBox{"},{"lineNumber":16,"author":{"gitId":"Andrewzhang217"},"content":"    @FXML"},{"lineNumber":17,"author":{"gitId":"Andrewzhang217"},"content":"    private Label dialog;"},{"lineNumber":18,"author":{"gitId":"Andrewzhang217"},"content":"    @FXML"},{"lineNumber":19,"author":{"gitId":"Andrewzhang217"},"content":"    private ImageView displayPicture;"},{"lineNumber":20,"author":{"gitId":"Andrewzhang217"},"content":""},{"lineNumber":21,"author":{"gitId":"Andrewzhang217"},"content":"    private DialogBox(String text, Image img) {"},{"lineNumber":22,"author":{"gitId":"Andrewzhang217"},"content":"    try {"},{"lineNumber":23,"author":{"gitId":"Andrewzhang217"},"content":"        FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(\"/view/DialogBox.fxml\"));"},{"lineNumber":24,"author":{"gitId":"Andrewzhang217"},"content":"        fxmlLoader.setController(this);"},{"lineNumber":25,"author":{"gitId":"Andrewzhang217"},"content":"        fxmlLoader.setRoot(this);"},{"lineNumber":26,"author":{"gitId":"Andrewzhang217"},"content":"        fxmlLoader.load();"},{"lineNumber":27,"author":{"gitId":"Andrewzhang217"},"content":"    } catch (IOException e) {"},{"lineNumber":28,"author":{"gitId":"Andrewzhang217"},"content":"        e.printStackTrace();"},{"lineNumber":29,"author":{"gitId":"Andrewzhang217"},"content":"    }"},{"lineNumber":30,"author":{"gitId":"Andrewzhang217"},"content":""},{"lineNumber":31,"author":{"gitId":"Andrewzhang217"},"content":"        dialog.setText(text);"},{"lineNumber":32,"author":{"gitId":"Andrewzhang217"},"content":"        displayPicture.setImage(img);"},{"lineNumber":33,"author":{"gitId":"Andrewzhang217"},"content":"}"},{"lineNumber":34,"author":{"gitId":"Andrewzhang217"},"content":""},{"lineNumber":35,"author":{"gitId":"Andrewzhang217"},"content":"    /**"},{"lineNumber":36,"author":{"gitId":"Andrewzhang217"},"content":"     * Flips the dialog box such that the ImageView is on the left and text on the right."},{"lineNumber":37,"author":{"gitId":"Andrewzhang217"},"content":"     */"},{"lineNumber":38,"author":{"gitId":"Andrewzhang217"},"content":"    private void flip() {"},{"lineNumber":39,"author":{"gitId":"Andrewzhang217"},"content":"        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());"},{"lineNumber":40,"author":{"gitId":"Andrewzhang217"},"content":"        Collections.reverse(tmp);"},{"lineNumber":41,"author":{"gitId":"Andrewzhang217"},"content":"        getChildren().setAll(tmp);"},{"lineNumber":42,"author":{"gitId":"Andrewzhang217"},"content":"        setAlignment(Pos.TOP_LEFT);"},{"lineNumber":43,"author":{"gitId":"Andrewzhang217"},"content":"    }"},{"lineNumber":44,"author":{"gitId":"Andrewzhang217"},"content":""},{"lineNumber":45,"author":{"gitId":"Andrewzhang217"},"content":"    public static DialogBox getUserDialog(String text, Image img) {"},{"lineNumber":46,"author":{"gitId":"Andrewzhang217"},"content":"        return new DialogBox(text, img);"},{"lineNumber":47,"author":{"gitId":"Andrewzhang217"},"content":"    }"},{"lineNumber":48,"author":{"gitId":"Andrewzhang217"},"content":""},{"lineNumber":49,"author":{"gitId":"Andrewzhang217"},"content":"    public static DialogBox getDukeDialog(String text, Image img) {"},{"lineNumber":50,"author":{"gitId":"Andrewzhang217"},"content":"        var db \u003d new DialogBox(text, img);"},{"lineNumber":51,"author":{"gitId":"Andrewzhang217"},"content":"        db.flip();"},{"lineNumber":52,"author":{"gitId":"Andrewzhang217"},"content":"        return db;"},{"lineNumber":53,"author":{"gitId":"Andrewzhang217"},"content":""},{"lineNumber":54,"author":{"gitId":"Andrewzhang217"},"content":"    }"},{"lineNumber":55,"author":{"gitId":"Andrewzhang217"},"content":""},{"lineNumber":56,"author":{"gitId":"Andrewzhang217"},"content":"}"}],"authorContributionMap":{"Andrewzhang217":56}},{"path":"src/main/java/Main.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Andrewzhang217"},"content":""},{"lineNumber":2,"author":{"gitId":"Andrewzhang217"},"content":"import data.Duke;"},{"lineNumber":3,"author":{"gitId":"Andrewzhang217"},"content":"import data.IDuke;"},{"lineNumber":4,"author":{"gitId":"Andrewzhang217"},"content":""},{"lineNumber":5,"author":{"gitId":"Andrewzhang217"},"content":""},{"lineNumber":6,"author":{"gitId":"Andrewzhang217"},"content":"import javafx.application.Application;"},{"lineNumber":7,"author":{"gitId":"Andrewzhang217"},"content":"import javafx.fxml.FXMLLoader;"},{"lineNumber":8,"author":{"gitId":"Andrewzhang217"},"content":"import javafx.scene.Scene;"},{"lineNumber":9,"author":{"gitId":"Andrewzhang217"},"content":"import javafx.scene.layout.AnchorPane;"},{"lineNumber":10,"author":{"gitId":"Andrewzhang217"},"content":"import javafx.stage.Stage;"},{"lineNumber":11,"author":{"gitId":"Andrewzhang217"},"content":""},{"lineNumber":12,"author":{"gitId":"Andrewzhang217"},"content":"import java.util.Scanner;"},{"lineNumber":13,"author":{"gitId":"Andrewzhang217"},"content":""},{"lineNumber":14,"author":{"gitId":"Andrewzhang217"},"content":"public class Main extends Application {"},{"lineNumber":15,"author":{"gitId":"Andrewzhang217"},"content":"    private final IDuke duke \u003d Duke.getDuke(\"data/duke.txt\");"},{"lineNumber":16,"author":{"gitId":"Andrewzhang217"},"content":""},{"lineNumber":17,"author":{"gitId":"Andrewzhang217"},"content":"    @Override"},{"lineNumber":18,"author":{"gitId":"Andrewzhang217"},"content":"    public void start(Stage stage) {"},{"lineNumber":19,"author":{"gitId":"Andrewzhang217"},"content":"        try {"},{"lineNumber":20,"author":{"gitId":"Andrewzhang217"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(Main.class.getResource(\"/view/MainWindow.fxml\"));"},{"lineNumber":21,"author":{"gitId":"Andrewzhang217"},"content":"            AnchorPane ap \u003d fxmlLoader.load();"},{"lineNumber":22,"author":{"gitId":"Andrewzhang217"},"content":"            Scene scene \u003d new Scene(ap);"},{"lineNumber":23,"author":{"gitId":"Andrewzhang217"},"content":"            stage.setScene(scene);"},{"lineNumber":24,"author":{"gitId":"Andrewzhang217"},"content":"            fxmlLoader.\u003cMainWindow\u003egetController().setDuke(duke);"},{"lineNumber":25,"author":{"gitId":"Andrewzhang217"},"content":"            stage.show();"},{"lineNumber":26,"author":{"gitId":"Andrewzhang217"},"content":"        } catch (IOException e) {"},{"lineNumber":27,"author":{"gitId":"Andrewzhang217"},"content":"            e.printStackTrace();"},{"lineNumber":28,"author":{"gitId":"Andrewzhang217"},"content":"        }"},{"lineNumber":29,"author":{"gitId":"Andrewzhang217"},"content":"    }"},{"lineNumber":30,"author":{"gitId":"Andrewzhang217"},"content":""},{"lineNumber":31,"author":{"gitId":"Andrewzhang217"},"content":""},{"lineNumber":32,"author":{"gitId":"Andrewzhang217"},"content":"}"}],"authorContributionMap":{"Andrewzhang217":32}},{"path":"src/main/java/MainWindow.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"Andrewzhang217"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"},{"lineNumber":2,"author":{"gitId":"Andrewzhang217"},"content":""},{"lineNumber":3,"author":{"gitId":"Andrewzhang217"},"content":"\u003c?import javafx.scene.control.Button?\u003e"},{"lineNumber":4,"author":{"gitId":"Andrewzhang217"},"content":"\u003c?import javafx.scene.control.ScrollPane?\u003e"},{"lineNumber":5,"author":{"gitId":"Andrewzhang217"},"content":"\u003c?import javafx.scene.control.TextField?\u003e"},{"lineNumber":6,"author":{"gitId":"Andrewzhang217"},"content":"\u003c?import javafx.scene.layout.AnchorPane?\u003e"},{"lineNumber":7,"author":{"gitId":"Andrewzhang217"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e"},{"lineNumber":8,"author":{"gitId":"Andrewzhang217"},"content":""},{"lineNumber":9,"author":{"gitId":"Andrewzhang217"},"content":"\u003cAnchorPane maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefHeight\u003d\"600.0\" prefWidth\u003d\"400.0\" xmlns\u003d\"http://javafx.com/javafx/8.0.171\" xmlns:fx\u003d\"http://javafx.com/fxml/1\" fx:controller\u003d\"luoyi.duke.MainWindow\"\u003e"},{"lineNumber":10,"author":{"gitId":"Andrewzhang217"},"content":"    \u003cchildren\u003e"},{"lineNumber":11,"author":{"gitId":"Andrewzhang217"},"content":"        \u003cTextField fx:id\u003d\"userInput\" layoutY\u003d\"558.0\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"324.0\" AnchorPane.bottomAnchor\u003d\"1.0\" /\u003e"},{"lineNumber":12,"author":{"gitId":"Andrewzhang217"},"content":"        \u003cButton fx:id\u003d\"sendButton\" layoutX\u003d\"324.0\" layoutY\u003d\"558.0\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"76.0\" text\u003d\"Send\" /\u003e"},{"lineNumber":13,"author":{"gitId":"Andrewzhang217"},"content":"        \u003cScrollPane fx:id\u003d\"scrollPane\" hbarPolicy\u003d\"NEVER\" hvalue\u003d\"1.0\" prefHeight\u003d\"557.0\" prefWidth\u003d\"400.0\" vvalue\u003d\"1.0\"\u003e"},{"lineNumber":14,"author":{"gitId":"Andrewzhang217"},"content":"            \u003ccontent\u003e"},{"lineNumber":15,"author":{"gitId":"Andrewzhang217"},"content":"                \u003cVBox fx:id\u003d\"dialogContainer\" prefHeight\u003d\"552.0\" prefWidth\u003d\"388.0\" /\u003e"},{"lineNumber":16,"author":{"gitId":"Andrewzhang217"},"content":"            \u003c/content\u003e"},{"lineNumber":17,"author":{"gitId":"Andrewzhang217"},"content":"        \u003c/ScrollPane\u003e"},{"lineNumber":18,"author":{"gitId":"Andrewzhang217"},"content":"    \u003c/children\u003e"},{"lineNumber":19,"author":{"gitId":"Andrewzhang217"},"content":"\u003c/AnchorPane\u003e"}],"authorContributionMap":{"Andrewzhang217":19}},{"path":"src/main/java/MainWindow.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Andrewzhang217"},"content":"import javafx.application.Platform;"},{"lineNumber":2,"author":{"gitId":"Andrewzhang217"},"content":"import javafx.fxml.FXML;"},{"lineNumber":3,"author":{"gitId":"Andrewzhang217"},"content":"import javafx.scene.control.Button;"},{"lineNumber":4,"author":{"gitId":"Andrewzhang217"},"content":"import javafx.scene.control.ScrollPane;"},{"lineNumber":5,"author":{"gitId":"Andrewzhang217"},"content":"import javafx.scene.control.TextField;"},{"lineNumber":6,"author":{"gitId":"Andrewzhang217"},"content":"import javafx.scene.image.Image;"},{"lineNumber":7,"author":{"gitId":"Andrewzhang217"},"content":"import javafx.scene.layout.AnchorPane;"},{"lineNumber":8,"author":{"gitId":"Andrewzhang217"},"content":"import javafx.scene.layout.VBox;"},{"lineNumber":9,"author":{"gitId":"Andrewzhang217"},"content":"import java.util.Timer;"},{"lineNumber":10,"author":{"gitId":"Andrewzhang217"},"content":"import java.util.TimerTask;"},{"lineNumber":11,"author":{"gitId":"Andrewzhang217"},"content":""},{"lineNumber":12,"author":{"gitId":"Andrewzhang217"},"content":"/**"},{"lineNumber":13,"author":{"gitId":"Andrewzhang217"},"content":" * Controller for MainWindow. Provides the layout for the other controls."},{"lineNumber":14,"author":{"gitId":"Andrewzhang217"},"content":" */"},{"lineNumber":15,"author":{"gitId":"Andrewzhang217"},"content":"public class MainWindow extends AnchorPane {"},{"lineNumber":16,"author":{"gitId":"Andrewzhang217"},"content":"    @FXML"},{"lineNumber":17,"author":{"gitId":"Andrewzhang217"},"content":"    private ScrollPane scrollPane;"},{"lineNumber":18,"author":{"gitId":"Andrewzhang217"},"content":"    @FXML"},{"lineNumber":19,"author":{"gitId":"Andrewzhang217"},"content":"    private VBox dialogContainer;"},{"lineNumber":20,"author":{"gitId":"Andrewzhang217"},"content":"    @FXML"},{"lineNumber":21,"author":{"gitId":"Andrewzhang217"},"content":"    private TextField userInput;"},{"lineNumber":22,"author":{"gitId":"Andrewzhang217"},"content":"    @FXML"},{"lineNumber":23,"author":{"gitId":"Andrewzhang217"},"content":"    private Button sendButton;"},{"lineNumber":24,"author":{"gitId":"Andrewzhang217"},"content":""},{"lineNumber":25,"author":{"gitId":"Andrewzhang217"},"content":"    private IDuke duke;"},{"lineNumber":26,"author":{"gitId":"Andrewzhang217"},"content":""},{"lineNumber":27,"author":{"gitId":"Andrewzhang217"},"content":"    private Image userImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/hikaru.png\"));"},{"lineNumber":28,"author":{"gitId":"Andrewzhang217"},"content":"    private Image dukeImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/akira.jpg\"));"},{"lineNumber":29,"author":{"gitId":"Andrewzhang217"},"content":""},{"lineNumber":30,"author":{"gitId":"Andrewzhang217"},"content":"    @FXML"},{"lineNumber":31,"author":{"gitId":"Andrewzhang217"},"content":"    public void initialize() {"},{"lineNumber":32,"author":{"gitId":"Andrewzhang217"},"content":"        scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());"},{"lineNumber":33,"author":{"gitId":"Andrewzhang217"},"content":"    }"},{"lineNumber":34,"author":{"gitId":"Andrewzhang217"},"content":""},{"lineNumber":35,"author":{"gitId":"Andrewzhang217"},"content":"    public void setDuke(IDuke d) {"},{"lineNumber":36,"author":{"gitId":"Andrewzhang217"},"content":"        duke \u003d d;"},{"lineNumber":37,"author":{"gitId":"Andrewzhang217"},"content":"    }"},{"lineNumber":38,"author":{"gitId":"Andrewzhang217"},"content":""},{"lineNumber":39,"author":{"gitId":"Andrewzhang217"},"content":"    /**"},{"lineNumber":40,"author":{"gitId":"Andrewzhang217"},"content":"     * Creates two dialog boxes, one echoing user input and the other containing Duke\u0027s reply and then appends them to"},{"lineNumber":41,"author":{"gitId":"Andrewzhang217"},"content":"     * the dialog container. Clears the user input after processing."},{"lineNumber":42,"author":{"gitId":"Andrewzhang217"},"content":"     * Also exits the program in 5 seconds if bye is inputted."},{"lineNumber":43,"author":{"gitId":"Andrewzhang217"},"content":"     */"},{"lineNumber":44,"author":{"gitId":"Andrewzhang217"},"content":"    @FXML"},{"lineNumber":45,"author":{"gitId":"Andrewzhang217"},"content":"    private void handleUserInput() {"},{"lineNumber":46,"author":{"gitId":"Andrewzhang217"},"content":"        String input \u003d userInput.getText();"},{"lineNumber":47,"author":{"gitId":"Andrewzhang217"},"content":"        if (input.equals(\"bye\")) {"},{"lineNumber":48,"author":{"gitId":"Andrewzhang217"},"content":"            Timer timer \u003d new Timer();"},{"lineNumber":49,"author":{"gitId":"Andrewzhang217"},"content":"            timer.schedule(new TimerTask() {"},{"lineNumber":50,"author":{"gitId":"Andrewzhang217"},"content":"                @Override"},{"lineNumber":51,"author":{"gitId":"Andrewzhang217"},"content":"                public void run() {"},{"lineNumber":52,"author":{"gitId":"Andrewzhang217"},"content":"                    Platform.exit();"},{"lineNumber":53,"author":{"gitId":"Andrewzhang217"},"content":"                    System.exit(0);"},{"lineNumber":54,"author":{"gitId":"Andrewzhang217"},"content":"                }"},{"lineNumber":55,"author":{"gitId":"Andrewzhang217"},"content":"            }, 5000);"},{"lineNumber":56,"author":{"gitId":"Andrewzhang217"},"content":"        }"},{"lineNumber":57,"author":{"gitId":"Andrewzhang217"},"content":"        String response \u003d duke.getResponse(input);"},{"lineNumber":58,"author":{"gitId":"Andrewzhang217"},"content":"        dialogContainer.getChildren().addAll("},{"lineNumber":59,"author":{"gitId":"Andrewzhang217"},"content":"                DialogBox.getUserDialog(input, userImage),"},{"lineNumber":60,"author":{"gitId":"Andrewzhang217"},"content":"                DialogBox.getDukeDialog(response, dukeImage)"},{"lineNumber":61,"author":{"gitId":"Andrewzhang217"},"content":"        );"},{"lineNumber":62,"author":{"gitId":"Andrewzhang217"},"content":"        userInput.clear();"},{"lineNumber":63,"author":{"gitId":"Andrewzhang217"},"content":"    }"},{"lineNumber":64,"author":{"gitId":"Andrewzhang217"},"content":"} "}],"authorContributionMap":{"Andrewzhang217":64}},{"path":"src/main/java/commands/ByeCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Andrewzhang217"},"content":"package commands;"},{"lineNumber":2,"author":{"gitId":"Andrewzhang217"},"content":""},{"lineNumber":3,"author":{"gitId":"Andrewzhang217"},"content":"public class ByeCommand {"},{"lineNumber":4,"author":{"gitId":"Andrewzhang217"},"content":"}"}],"authorContributionMap":{"Andrewzhang217":4}},{"path":"src/main/java/commands/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Andrewzhang217"},"content":"package commands;"},{"lineNumber":2,"author":{"gitId":"Andrewzhang217"},"content":""},{"lineNumber":3,"author":{"gitId":"Andrewzhang217"},"content":"import data.IDuke;"},{"lineNumber":4,"author":{"gitId":"Andrewzhang217"},"content":"import data.Duke;"},{"lineNumber":5,"author":{"gitId":"Andrewzhang217"},"content":""},{"lineNumber":6,"author":{"gitId":"Andrewzhang217"},"content":"public class Command {"},{"lineNumber":7,"author":{"gitId":"Andrewzhang217"},"content":"    protected final int targetIndex;"},{"lineNumber":8,"author":{"gitId":"Andrewzhang217"},"content":"    protected final IDuke duke;"},{"lineNumber":9,"author":{"gitId":"Andrewzhang217"},"content":""},{"lineNumber":10,"author":{"gitId":"Andrewzhang217"},"content":"    protected Command(int targetIndex, IDuke duke) {"},{"lineNumber":11,"author":{"gitId":"Andrewzhang217"},"content":"        this.targetIndex \u003d targetIndex;"},{"lineNumber":12,"author":{"gitId":"Andrewzhang217"},"content":"        this.duke \u003d duke;"},{"lineNumber":13,"author":{"gitId":"Andrewzhang217"},"content":"    }"},{"lineNumber":14,"author":{"gitId":"Andrewzhang217"},"content":""},{"lineNumber":15,"author":{"gitId":"Andrewzhang217"},"content":"    public String execute() {"},{"lineNumber":16,"author":{"gitId":"Andrewzhang217"},"content":"        throw new UnsupportedOperationException(\"This method is to\""},{"lineNumber":17,"author":{"gitId":"Andrewzhang217"},"content":"                + \" be implemented by child classes.\");"},{"lineNumber":18,"author":{"gitId":"Andrewzhang217"},"content":"    }"},{"lineNumber":19,"author":{"gitId":"Andrewzhang217"},"content":""},{"lineNumber":20,"author":{"gitId":"Andrewzhang217"},"content":"    Command setDuke(IDuke duke) {"},{"lineNumber":21,"author":{"gitId":"Andrewzhang217"},"content":"        return new Command(targetIndex, duke);"},{"lineNumber":22,"author":{"gitId":"Andrewzhang217"},"content":"    }"},{"lineNumber":23,"author":{"gitId":"Andrewzhang217"},"content":""},{"lineNumber":24,"author":{"gitId":"Andrewzhang217"},"content":"}"},{"lineNumber":25,"author":{"gitId":"Andrewzhang217"},"content":""},{"lineNumber":26,"author":{"gitId":"Andrewzhang217"},"content":""}],"authorContributionMap":{"Andrewzhang217":26}},{"path":"src/main/java/commands/DeadlineCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Andrewzhang217"},"content":"package commands;"},{"lineNumber":2,"author":{"gitId":"Andrewzhang217"},"content":""},{"lineNumber":3,"author":{"gitId":"Andrewzhang217"},"content":"import common.Message;"},{"lineNumber":4,"author":{"gitId":"Andrewzhang217"},"content":"import data.IDuke;"},{"lineNumber":5,"author":{"gitId":"Andrewzhang217"},"content":"import data.exception.DukeIllegalArgumentException;"},{"lineNumber":6,"author":{"gitId":"Andrewzhang217"},"content":"import data.task.Deadline;"},{"lineNumber":7,"author":{"gitId":"Andrewzhang217"},"content":"import data.task.ITask;"},{"lineNumber":8,"author":{"gitId":"Andrewzhang217"},"content":""},{"lineNumber":9,"author":{"gitId":"Andrewzhang217"},"content":"public class DeadlineCommand extends StoreCommand{"},{"lineNumber":10,"author":{"gitId":"Andrewzhang217"},"content":""},{"lineNumber":11,"author":{"gitId":"Andrewzhang217"},"content":"    private final String description;"},{"lineNumber":12,"author":{"gitId":"Andrewzhang217"},"content":"    private final String time;"},{"lineNumber":13,"author":{"gitId":"Andrewzhang217"},"content":""},{"lineNumber":14,"author":{"gitId":"Andrewzhang217"},"content":"    private DeadlineCommand(String description, String time, IDuke duke) {"},{"lineNumber":15,"author":{"gitId":"Andrewzhang217"},"content":"        super(-1, duke);"},{"lineNumber":16,"author":{"gitId":"Andrewzhang217"},"content":"        this.description \u003d description;"},{"lineNumber":17,"author":{"gitId":"Andrewzhang217"},"content":"        this.time \u003d time;"},{"lineNumber":18,"author":{"gitId":"Andrewzhang217"},"content":"    }"},{"lineNumber":19,"author":{"gitId":"Andrewzhang217"},"content":""},{"lineNumber":20,"author":{"gitId":"Andrewzhang217"},"content":"    public static DeadlineCommand getDeadlineCommand(String description, String time) {"},{"lineNumber":21,"author":{"gitId":"Andrewzhang217"},"content":"        return new DeadlineCommand(description, time, null);"},{"lineNumber":22,"author":{"gitId":"Andrewzhang217"},"content":"    }"},{"lineNumber":23,"author":{"gitId":"Andrewzhang217"},"content":""},{"lineNumber":24,"author":{"gitId":"Andrewzhang217"},"content":"    private String handleDeadline(String description, String time)"},{"lineNumber":25,"author":{"gitId":"Andrewzhang217"},"content":"            throws DukeIllegalArgumentException {"},{"lineNumber":26,"author":{"gitId":"Andrewzhang217"},"content":"        if (description.matches(\"\\\\s*\")) {"},{"lineNumber":27,"author":{"gitId":"Andrewzhang217"},"content":"            throw new DukeIllegalArgumentException("},{"lineNumber":28,"author":{"gitId":"Andrewzhang217"},"content":"                    \"The description of deadline cannot be empty!\");"},{"lineNumber":29,"author":{"gitId":"Andrewzhang217"},"content":"        }"},{"lineNumber":30,"author":{"gitId":"Andrewzhang217"},"content":"        if (time.matches(\"\\\\s*\")) {"},{"lineNumber":31,"author":{"gitId":"Andrewzhang217"},"content":"            throw new DukeIllegalArgumentException("},{"lineNumber":32,"author":{"gitId":"Andrewzhang217"},"content":"                    \"The time of deadline cannot be empty!\");"},{"lineNumber":33,"author":{"gitId":"Andrewzhang217"},"content":"        }"},{"lineNumber":34,"author":{"gitId":"Andrewzhang217"},"content":""},{"lineNumber":35,"author":{"gitId":"Andrewzhang217"},"content":"        ITask task \u003d Deadline.getDeadline(description, time);"},{"lineNumber":36,"author":{"gitId":"Andrewzhang217"},"content":"        storeTask(task);"},{"lineNumber":37,"author":{"gitId":"Andrewzhang217"},"content":"        String output \u003d \"Got it. I\u0027ve added this task:\\n\\t\" + task.toString()"},{"lineNumber":38,"author":{"gitId":"Andrewzhang217"},"content":"                + \"\\nNow you have \" + duke.numOfTasks() + \" task(s) in the list.\";"},{"lineNumber":39,"author":{"gitId":"Andrewzhang217"},"content":"        System.out.print(output);"},{"lineNumber":40,"author":{"gitId":"Andrewzhang217"},"content":"        return output;"},{"lineNumber":41,"author":{"gitId":"Andrewzhang217"},"content":"    }"},{"lineNumber":42,"author":{"gitId":"Andrewzhang217"},"content":""},{"lineNumber":43,"author":{"gitId":"Andrewzhang217"},"content":"    @Override"},{"lineNumber":44,"author":{"gitId":"Andrewzhang217"},"content":"    public String execute() {"},{"lineNumber":45,"author":{"gitId":"Andrewzhang217"},"content":"        if (duke \u003d\u003d null) {"},{"lineNumber":46,"author":{"gitId":"Andrewzhang217"},"content":"            throw new RuntimeException(Message.ERR_DUKE_NOT_INIT.toString());"},{"lineNumber":47,"author":{"gitId":"Andrewzhang217"},"content":"        }"},{"lineNumber":48,"author":{"gitId":"Andrewzhang217"},"content":"        return handleDeadline(description, time);"},{"lineNumber":49,"author":{"gitId":"Andrewzhang217"},"content":"    }"},{"lineNumber":50,"author":{"gitId":"Andrewzhang217"},"content":""},{"lineNumber":51,"author":{"gitId":"Andrewzhang217"},"content":""},{"lineNumber":52,"author":{"gitId":"Andrewzhang217"},"content":""},{"lineNumber":53,"author":{"gitId":"Andrewzhang217"},"content":""},{"lineNumber":54,"author":{"gitId":"Andrewzhang217"},"content":"}"}],"authorContributionMap":{"Andrewzhang217":54}},{"path":"src/main/java/commands/DeleteCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Andrewzhang217"},"content":"package commands;"},{"lineNumber":2,"author":{"gitId":"Andrewzhang217"},"content":""},{"lineNumber":3,"author":{"gitId":"Andrewzhang217"},"content":"public class DeleteCommand {"},{"lineNumber":4,"author":{"gitId":"Andrewzhang217"},"content":"}"}],"authorContributionMap":{"Andrewzhang217":4}},{"path":"src/main/java/commands/DoneCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Andrewzhang217"},"content":"package commands;"},{"lineNumber":2,"author":{"gitId":"Andrewzhang217"},"content":""},{"lineNumber":3,"author":{"gitId":"Andrewzhang217"},"content":"public class DoneCommand {"},{"lineNumber":4,"author":{"gitId":"Andrewzhang217"},"content":"}"}],"authorContributionMap":{"Andrewzhang217":4}},{"path":"src/main/java/commands/EventCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Andrewzhang217"},"content":"package commands;"},{"lineNumber":2,"author":{"gitId":"Andrewzhang217"},"content":""},{"lineNumber":3,"author":{"gitId":"Andrewzhang217"},"content":"import common.Message;"},{"lineNumber":4,"author":{"gitId":"Andrewzhang217"},"content":"import data.IDuke;"},{"lineNumber":5,"author":{"gitId":"Andrewzhang217"},"content":"import data.exception.DukeIllegalArgumentException;"},{"lineNumber":6,"author":{"gitId":"Andrewzhang217"},"content":"import data.task.Event;"},{"lineNumber":7,"author":{"gitId":"Andrewzhang217"},"content":"import data.task.ITask;"},{"lineNumber":8,"author":{"gitId":"Andrewzhang217"},"content":""},{"lineNumber":9,"author":{"gitId":"Andrewzhang217"},"content":"public class EventCommand extends StoreCommand {"},{"lineNumber":10,"author":{"gitId":"Andrewzhang217"},"content":""},{"lineNumber":11,"author":{"gitId":"Andrewzhang217"},"content":"    private final String description;"},{"lineNumber":12,"author":{"gitId":"Andrewzhang217"},"content":"    private final String time;"},{"lineNumber":13,"author":{"gitId":"Andrewzhang217"},"content":""},{"lineNumber":14,"author":{"gitId":"Andrewzhang217"},"content":"    private EventCommand(String description, String time, IDuke duke) {"},{"lineNumber":15,"author":{"gitId":"Andrewzhang217"},"content":"        super(-1, duke);"},{"lineNumber":16,"author":{"gitId":"Andrewzhang217"},"content":"        this.description \u003d description;"},{"lineNumber":17,"author":{"gitId":"Andrewzhang217"},"content":"        this.time \u003d time;"},{"lineNumber":18,"author":{"gitId":"Andrewzhang217"},"content":"    }"},{"lineNumber":19,"author":{"gitId":"Andrewzhang217"},"content":""},{"lineNumber":20,"author":{"gitId":"Andrewzhang217"},"content":"    public static EventCommand getEventCommand(String description, String time) {"},{"lineNumber":21,"author":{"gitId":"Andrewzhang217"},"content":"        return new EventCommand(description, time, null);"},{"lineNumber":22,"author":{"gitId":"Andrewzhang217"},"content":"    }"},{"lineNumber":23,"author":{"gitId":"Andrewzhang217"},"content":""},{"lineNumber":24,"author":{"gitId":"Andrewzhang217"},"content":"    private String handleEvent(String description, String time)"},{"lineNumber":25,"author":{"gitId":"Andrewzhang217"},"content":"            throws DukeIllegalArgumentException {"},{"lineNumber":26,"author":{"gitId":"Andrewzhang217"},"content":"        if (description.matches(\"\\\\s*\")) {"},{"lineNumber":27,"author":{"gitId":"Andrewzhang217"},"content":"            throw new DukeIllegalArgumentException("},{"lineNumber":28,"author":{"gitId":"Andrewzhang217"},"content":"                    \"The description of event cannot be empty!\");"},{"lineNumber":29,"author":{"gitId":"Andrewzhang217"},"content":"        }"},{"lineNumber":30,"author":{"gitId":"Andrewzhang217"},"content":"        if (time.matches(\"\\\\s*\")) {"},{"lineNumber":31,"author":{"gitId":"Andrewzhang217"},"content":"            throw new DukeIllegalArgumentException("},{"lineNumber":32,"author":{"gitId":"Andrewzhang217"},"content":"                    \"The time of event cannot be empty!\");"},{"lineNumber":33,"author":{"gitId":"Andrewzhang217"},"content":"        }"},{"lineNumber":34,"author":{"gitId":"Andrewzhang217"},"content":""},{"lineNumber":35,"author":{"gitId":"Andrewzhang217"},"content":"        ITask task \u003d Event.getEvent(description, time);"},{"lineNumber":36,"author":{"gitId":"Andrewzhang217"},"content":"        storeTask(task);"},{"lineNumber":37,"author":{"gitId":"Andrewzhang217"},"content":"        String output \u003d \"Got it. I\u0027ve added this task:\\n\\t\" + task.toString()"},{"lineNumber":38,"author":{"gitId":"Andrewzhang217"},"content":"                + \"\\nNow you have \" + duke.numOfTasks() + \" task(s) in the list.\";"},{"lineNumber":39,"author":{"gitId":"Andrewzhang217"},"content":"        System.out.print(output);"},{"lineNumber":40,"author":{"gitId":"Andrewzhang217"},"content":"        return output;"},{"lineNumber":41,"author":{"gitId":"Andrewzhang217"},"content":"    }"},{"lineNumber":42,"author":{"gitId":"Andrewzhang217"},"content":""},{"lineNumber":43,"author":{"gitId":"Andrewzhang217"},"content":""},{"lineNumber":44,"author":{"gitId":"Andrewzhang217"},"content":"    @Override"},{"lineNumber":45,"author":{"gitId":"Andrewzhang217"},"content":"    public String execute() {"},{"lineNumber":46,"author":{"gitId":"Andrewzhang217"},"content":"        if (duke \u003d\u003d null) {"},{"lineNumber":47,"author":{"gitId":"Andrewzhang217"},"content":"            throw new RuntimeException(Message.ERR_DUKE_NOT_INIT.toString());"},{"lineNumber":48,"author":{"gitId":"Andrewzhang217"},"content":"        }"},{"lineNumber":49,"author":{"gitId":"Andrewzhang217"},"content":"        return handleEvent(description, time);"},{"lineNumber":50,"author":{"gitId":"Andrewzhang217"},"content":"    }"},{"lineNumber":51,"author":{"gitId":"Andrewzhang217"},"content":""},{"lineNumber":52,"author":{"gitId":"Andrewzhang217"},"content":"    @Override"},{"lineNumber":53,"author":{"gitId":"Andrewzhang217"},"content":"    public Command setDuke(IDuke duke) {"},{"lineNumber":54,"author":{"gitId":"Andrewzhang217"},"content":"        return new EventCommand(description, time, duke);"},{"lineNumber":55,"author":{"gitId":"Andrewzhang217"},"content":"    }"},{"lineNumber":56,"author":{"gitId":"Andrewzhang217"},"content":""},{"lineNumber":57,"author":{"gitId":"Andrewzhang217"},"content":"}"}],"authorContributionMap":{"Andrewzhang217":57}},{"path":"src/main/java/commands/ListCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Andrewzhang217"},"content":"package commands;"},{"lineNumber":2,"author":{"gitId":"Andrewzhang217"},"content":""},{"lineNumber":3,"author":{"gitId":"Andrewzhang217"},"content":"import common.Message;"},{"lineNumber":4,"author":{"gitId":"Andrewzhang217"},"content":"import data.IDuke;"},{"lineNumber":5,"author":{"gitId":"Andrewzhang217"},"content":"import data.task.TaskList;"},{"lineNumber":6,"author":{"gitId":"Andrewzhang217"},"content":"import ui.Ui;"},{"lineNumber":7,"author":{"gitId":"Andrewzhang217"},"content":""},{"lineNumber":8,"author":{"gitId":"Andrewzhang217"},"content":"import java.util.stream.IntStream;"},{"lineNumber":9,"author":{"gitId":"Andrewzhang217"},"content":""},{"lineNumber":10,"author":{"gitId":"Andrewzhang217"},"content":"public class ListCommand extends Command {"},{"lineNumber":11,"author":{"gitId":"Andrewzhang217"},"content":""},{"lineNumber":12,"author":{"gitId":"Andrewzhang217"},"content":"    private final String date;"},{"lineNumber":13,"author":{"gitId":"Andrewzhang217"},"content":""},{"lineNumber":14,"author":{"gitId":"Andrewzhang217"},"content":"    private ListCommand(String date, IDuke duke) {"},{"lineNumber":15,"author":{"gitId":"Andrewzhang217"},"content":"        super(-1, duke);"},{"lineNumber":16,"author":{"gitId":"Andrewzhang217"},"content":"        this.date \u003d date;"},{"lineNumber":17,"author":{"gitId":"Andrewzhang217"},"content":"    }"},{"lineNumber":18,"author":{"gitId":"Andrewzhang217"},"content":""},{"lineNumber":19,"author":{"gitId":"Andrewzhang217"},"content":""},{"lineNumber":20,"author":{"gitId":"Andrewzhang217"},"content":"    public static ListCommand getListCommand(String date) {"},{"lineNumber":21,"author":{"gitId":"Andrewzhang217"},"content":"        return new ListCommand(date, null);"},{"lineNumber":22,"author":{"gitId":"Andrewzhang217"},"content":"    }"},{"lineNumber":23,"author":{"gitId":"Andrewzhang217"},"content":""},{"lineNumber":24,"author":{"gitId":"Andrewzhang217"},"content":"    @Override"},{"lineNumber":25,"author":{"gitId":"Andrewzhang217"},"content":"    public String execute() {"},{"lineNumber":26,"author":{"gitId":"Andrewzhang217"},"content":"        if (duke \u003d\u003d null) {"},{"lineNumber":27,"author":{"gitId":"Andrewzhang217"},"content":"            throw new RuntimeException(Message.ERR_DUKE_NOT_INIT.toString());"},{"lineNumber":28,"author":{"gitId":"Andrewzhang217"},"content":"        }"},{"lineNumber":29,"author":{"gitId":"Andrewzhang217"},"content":"        if (date \u003d\u003d null) {"},{"lineNumber":30,"author":{"gitId":"Andrewzhang217"},"content":"            return handleDisplay();"},{"lineNumber":31,"author":{"gitId":"Andrewzhang217"},"content":"        } else {"},{"lineNumber":32,"author":{"gitId":"Andrewzhang217"},"content":"            return handleDisplay(date);"},{"lineNumber":33,"author":{"gitId":"Andrewzhang217"},"content":"        }"},{"lineNumber":34,"author":{"gitId":"Andrewzhang217"},"content":"    }"},{"lineNumber":35,"author":{"gitId":"Andrewzhang217"},"content":""},{"lineNumber":36,"author":{"gitId":"Andrewzhang217"},"content":"    private String handleDisplay() {"},{"lineNumber":37,"author":{"gitId":"Andrewzhang217"},"content":"       // assert duke !\u003d null : Message.ERR_DUKE_NOT_INIT.toString();"},{"lineNumber":38,"author":{"gitId":"Andrewzhang217"},"content":"        TaskList list \u003d duke.getTasks();"},{"lineNumber":39,"author":{"gitId":"Andrewzhang217"},"content":"        return Ui.display(list);"},{"lineNumber":40,"author":{"gitId":"Andrewzhang217"},"content":"    }"},{"lineNumber":41,"author":{"gitId":"Andrewzhang217"},"content":""},{"lineNumber":42,"author":{"gitId":"Andrewzhang217"},"content":"    private String handleDisplay(String date) {"},{"lineNumber":43,"author":{"gitId":"Andrewzhang217"},"content":"        //assert duke !\u003d null : Message.ERR_DUKE_NOT_INIT.toString();"},{"lineNumber":44,"author":{"gitId":"Andrewzhang217"},"content":"        TaskList list \u003d duke.getTasks();"},{"lineNumber":45,"author":{"gitId":"Andrewzhang217"},"content":"        int[] indexes \u003d IntStream"},{"lineNumber":46,"author":{"gitId":"Andrewzhang217"},"content":"                .range(0, list.size())"},{"lineNumber":47,"author":{"gitId":"Andrewzhang217"},"content":"                .filter(x -\u003e list.get(x).isSameTime(date))"},{"lineNumber":48,"author":{"gitId":"Andrewzhang217"},"content":"                .toArray();"},{"lineNumber":49,"author":{"gitId":"Andrewzhang217"},"content":"        return Ui.display(list, indexes);"},{"lineNumber":50,"author":{"gitId":"Andrewzhang217"},"content":"    }"},{"lineNumber":51,"author":{"gitId":"Andrewzhang217"},"content":""},{"lineNumber":52,"author":{"gitId":"Andrewzhang217"},"content":"    @Override"},{"lineNumber":53,"author":{"gitId":"Andrewzhang217"},"content":"    public Command setDuke(IDuke duke) {"},{"lineNumber":54,"author":{"gitId":"Andrewzhang217"},"content":"        return new ListCommand(date, duke);"},{"lineNumber":55,"author":{"gitId":"Andrewzhang217"},"content":"    }"},{"lineNumber":56,"author":{"gitId":"Andrewzhang217"},"content":"}"},{"lineNumber":57,"author":{"gitId":"Andrewzhang217"},"content":""}],"authorContributionMap":{"Andrewzhang217":57}},{"path":"src/main/java/commands/StoreCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Andrewzhang217"},"content":"package commands;"},{"lineNumber":2,"author":{"gitId":"Andrewzhang217"},"content":""},{"lineNumber":3,"author":{"gitId":"Andrewzhang217"},"content":""},{"lineNumber":4,"author":{"gitId":"Andrewzhang217"},"content":"import data.IDuke;"},{"lineNumber":5,"author":{"gitId":"Andrewzhang217"},"content":"import data.task.ITask;"},{"lineNumber":6,"author":{"gitId":"Andrewzhang217"},"content":"import data.task.TaskList;"},{"lineNumber":7,"author":{"gitId":"Andrewzhang217"},"content":"import storage.TaskManager;"},{"lineNumber":8,"author":{"gitId":"Andrewzhang217"},"content":""},{"lineNumber":9,"author":{"gitId":"Andrewzhang217"},"content":""},{"lineNumber":10,"author":{"gitId":"Andrewzhang217"},"content":"public abstract class StoreCommand extends Command {"},{"lineNumber":11,"author":{"gitId":"Andrewzhang217"},"content":""},{"lineNumber":12,"author":{"gitId":"Andrewzhang217"},"content":"    protected StoreCommand(int targetIndex, IDuke duke) {"},{"lineNumber":13,"author":{"gitId":"Andrewzhang217"},"content":"        super(targetIndex, duke);"},{"lineNumber":14,"author":{"gitId":"Andrewzhang217"},"content":"    }"},{"lineNumber":15,"author":{"gitId":"Andrewzhang217"},"content":""},{"lineNumber":16,"author":{"gitId":"Andrewzhang217"},"content":"    /**"},{"lineNumber":17,"author":{"gitId":"Andrewzhang217"},"content":"     * Adds task in Duke object."},{"lineNumber":18,"author":{"gitId":"Andrewzhang217"},"content":"     * Also invokes storage class to store task list on disk."},{"lineNumber":19,"author":{"gitId":"Andrewzhang217"},"content":"     *"},{"lineNumber":20,"author":{"gitId":"Andrewzhang217"},"content":"     * @param task The tasks to be stored."},{"lineNumber":21,"author":{"gitId":"Andrewzhang217"},"content":"     */"},{"lineNumber":22,"author":{"gitId":"Andrewzhang217"},"content":"    protected void storeTask(ITask task) {"},{"lineNumber":23,"author":{"gitId":"Andrewzhang217"},"content":"        TaskManager tm \u003d duke.getTaskManager();"},{"lineNumber":24,"author":{"gitId":"Andrewzhang217"},"content":"        TaskList list \u003d duke.getTasks();"},{"lineNumber":25,"author":{"gitId":"Andrewzhang217"},"content":"        list.add(task);"},{"lineNumber":26,"author":{"gitId":"Andrewzhang217"},"content":"        tm.save(list.getList());"},{"lineNumber":27,"author":{"gitId":"Andrewzhang217"},"content":"    }"},{"lineNumber":28,"author":{"gitId":"Andrewzhang217"},"content":""},{"lineNumber":29,"author":{"gitId":"Andrewzhang217"},"content":"}"}],"authorContributionMap":{"Andrewzhang217":29}},{"path":"src/main/java/commands/TodoCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Andrewzhang217"},"content":"package commands;"},{"lineNumber":2,"author":{"gitId":"Andrewzhang217"},"content":""},{"lineNumber":3,"author":{"gitId":"Andrewzhang217"},"content":"import common.Message;"},{"lineNumber":4,"author":{"gitId":"Andrewzhang217"},"content":"import data.IDuke;"},{"lineNumber":5,"author":{"gitId":"Andrewzhang217"},"content":"import data.exception.DukeIllegalArgumentException;"},{"lineNumber":6,"author":{"gitId":"Andrewzhang217"},"content":"import data.task.ITask;"},{"lineNumber":7,"author":{"gitId":"Andrewzhang217"},"content":"import data.task.Todo;"},{"lineNumber":8,"author":{"gitId":"Andrewzhang217"},"content":""},{"lineNumber":9,"author":{"gitId":"Andrewzhang217"},"content":"public class TodoCommand extends StoreCommand{"},{"lineNumber":10,"author":{"gitId":"Andrewzhang217"},"content":""},{"lineNumber":11,"author":{"gitId":"Andrewzhang217"},"content":"    private final String description;"},{"lineNumber":12,"author":{"gitId":"Andrewzhang217"},"content":"    private TodoCommand(String description, IDuke duke) {"},{"lineNumber":13,"author":{"gitId":"Andrewzhang217"},"content":"        super(-1, duke);"},{"lineNumber":14,"author":{"gitId":"Andrewzhang217"},"content":"        this.description \u003d description;"},{"lineNumber":15,"author":{"gitId":"Andrewzhang217"},"content":"    }"},{"lineNumber":16,"author":{"gitId":"Andrewzhang217"},"content":""},{"lineNumber":17,"author":{"gitId":"Andrewzhang217"},"content":""},{"lineNumber":18,"author":{"gitId":"Andrewzhang217"},"content":"    public static TodoCommand getTodoCommand(String description) {"},{"lineNumber":19,"author":{"gitId":"Andrewzhang217"},"content":"        return new TodoCommand(description, null);"},{"lineNumber":20,"author":{"gitId":"Andrewzhang217"},"content":"    }"},{"lineNumber":21,"author":{"gitId":"Andrewzhang217"},"content":""},{"lineNumber":22,"author":{"gitId":"Andrewzhang217"},"content":""},{"lineNumber":23,"author":{"gitId":"Andrewzhang217"},"content":"    @Override"},{"lineNumber":24,"author":{"gitId":"Andrewzhang217"},"content":"    public String execute() {"},{"lineNumber":25,"author":{"gitId":"Andrewzhang217"},"content":"        if (duke \u003d\u003d null) {"},{"lineNumber":26,"author":{"gitId":"Andrewzhang217"},"content":"            throw new RuntimeException(Message.ERR_DUKE_NOT_INIT.toString());"},{"lineNumber":27,"author":{"gitId":"Andrewzhang217"},"content":"        }"},{"lineNumber":28,"author":{"gitId":"Andrewzhang217"},"content":"        return handleTodo(description);"},{"lineNumber":29,"author":{"gitId":"Andrewzhang217"},"content":"    }"},{"lineNumber":30,"author":{"gitId":"Andrewzhang217"},"content":""},{"lineNumber":31,"author":{"gitId":"Andrewzhang217"},"content":""},{"lineNumber":32,"author":{"gitId":"Andrewzhang217"},"content":"    private String handleTodo(String description) throws DukeIllegalArgumentException {"},{"lineNumber":33,"author":{"gitId":"Andrewzhang217"},"content":"        //assert duke !\u003d null : Message.ERR_DUKE_NOT_INIT.toString();"},{"lineNumber":34,"author":{"gitId":"Andrewzhang217"},"content":"        if (description.matches(\"\\\\s*\")) {"},{"lineNumber":35,"author":{"gitId":"Andrewzhang217"},"content":"            throw new DukeIllegalArgumentException("},{"lineNumber":36,"author":{"gitId":"Andrewzhang217"},"content":"                    \"The description of todo cannot be empty!\");"},{"lineNumber":37,"author":{"gitId":"Andrewzhang217"},"content":"        }"},{"lineNumber":38,"author":{"gitId":"Andrewzhang217"},"content":"        ITask task \u003d Todo.getTodo(description);"},{"lineNumber":39,"author":{"gitId":"Andrewzhang217"},"content":"        storeTask(task);"},{"lineNumber":40,"author":{"gitId":"Andrewzhang217"},"content":"        String output \u003d \"Got it. I\u0027ve added this task:\\n\\t\" + task.toString()"},{"lineNumber":41,"author":{"gitId":"Andrewzhang217"},"content":"                + \"\\nNow you have \" + duke.numOfTasks() + \" task(s) in the list.\";"},{"lineNumber":42,"author":{"gitId":"Andrewzhang217"},"content":"        System.out.print(output);"},{"lineNumber":43,"author":{"gitId":"Andrewzhang217"},"content":"        return output;"},{"lineNumber":44,"author":{"gitId":"Andrewzhang217"},"content":"    }"},{"lineNumber":45,"author":{"gitId":"Andrewzhang217"},"content":""},{"lineNumber":46,"author":{"gitId":"Andrewzhang217"},"content":""},{"lineNumber":47,"author":{"gitId":"Andrewzhang217"},"content":"    @Override"},{"lineNumber":48,"author":{"gitId":"Andrewzhang217"},"content":"    public Command setDuke(IDuke duke) {"},{"lineNumber":49,"author":{"gitId":"Andrewzhang217"},"content":"        return new TodoCommand(description, duke);"},{"lineNumber":50,"author":{"gitId":"Andrewzhang217"},"content":"    }"},{"lineNumber":51,"author":{"gitId":"Andrewzhang217"},"content":"}"},{"lineNumber":52,"author":{"gitId":"Andrewzhang217"},"content":""},{"lineNumber":53,"author":{"gitId":"Andrewzhang217"},"content":"}"}],"authorContributionMap":{"Andrewzhang217":53}},{"path":"src/main/java/common/Message.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Andrewzhang217"},"content":"package common;"},{"lineNumber":2,"author":{"gitId":"Andrewzhang217"},"content":""},{"lineNumber":3,"author":{"gitId":"Andrewzhang217"},"content":"public enum Message {"},{"lineNumber":4,"author":{"gitId":"Andrewzhang217"},"content":""},{"lineNumber":5,"author":{"gitId":"Andrewzhang217"},"content":"        GREETING (\"Hi I\u0027m Duke.\\nWhat can I do for you?\\n\"),"},{"lineNumber":6,"author":{"gitId":"Andrewzhang217"},"content":"        BYE (\"Bye! Hope to see you again!\\n\"),"},{"lineNumber":7,"author":{"gitId":"Andrewzhang217"},"content":"        LIST (\"Here are the tasks in your list:\\n\"),"},{"lineNumber":8,"author":{"gitId":"Andrewzhang217"},"content":"        MARKED_DONE (\"Naisu! I\u0027ve marked this task done!\\n\"),"},{"lineNumber":9,"author":{"gitId":"Andrewzhang217"},"content":"        REMOVED_TASK (\"Hmmm~! I\u0027ve removed this task:\\n\"),"},{"lineNumber":10,"author":{"gitId":"Andrewzhang217"},"content":"        ERR_NO_TASK_IN_LIST (\"There\u0027s no task in the list!\\n\"),"},{"lineNumber":11,"author":{"gitId":"Andrewzhang217"},"content":"        ERR_NO_MATCHING_TASK (\"Oops! Looks like there\u0027s no matching task!\\n\"),"},{"lineNumber":12,"author":{"gitId":"Andrewzhang217"},"content":"        ERR_WRONG_LIST_CMD (\"Wrong list command!\\nFormat: list Optional:\u003cdate\u003e\\n\"),"},{"lineNumber":13,"author":{"gitId":"Andrewzhang217"},"content":"        ERR_WRONG_DONE_CMD (\"Wrong done command!\\nFormat: done \u003ctaskId\u003e\\n\"),"},{"lineNumber":14,"author":{"gitId":"Andrewzhang217"},"content":"        ERR_WRONG_TODO_CMD (\"Wrong todo command!\\nFormat: todo \u003ctaskName\u003e\\n\"),"},{"lineNumber":15,"author":{"gitId":"Andrewzhang217"},"content":"        ERR_WRONG_DEADLINE_CMD (\"Wrong deadline command!\\nFormat: deadline \u003ctaskName\u003e /by \u003ctime\u003e\\n\"),"},{"lineNumber":16,"author":{"gitId":"Andrewzhang217"},"content":"        ERR_WRONG_EVENT_CMD (\"Wrong event command!\\nFormat: event \u003ctaskName\u003e /at \u003ctime\u003e\\n\"),"},{"lineNumber":17,"author":{"gitId":"Andrewzhang217"},"content":"        ERR_WRONG_DELETE_CMD (\"Wrong delete command!\\nFormat: delete \u003ctaskId\u003e\\n\"),"},{"lineNumber":18,"author":{"gitId":"Andrewzhang217"},"content":"        ERR_WRONG_CMD (\"Unrecognizable command!\\n\"),"},{"lineNumber":19,"author":{"gitId":"Andrewzhang217"},"content":"        ERR_DUKE_NOT_INIT(\"Duke is not initialised yet in execute command\"),"},{"lineNumber":20,"author":{"gitId":"Andrewzhang217"},"content":"        CAT_DOUBT (\"Meow? Sorry I don\u0027t know what you are talking about...\\n\"),"},{"lineNumber":21,"author":{"gitId":"Andrewzhang217"},"content":"        CAT_CRY (\"Meow!!! Something terrible happened!\\n\");"},{"lineNumber":22,"author":{"gitId":"Andrewzhang217"},"content":""},{"lineNumber":23,"author":{"gitId":"Andrewzhang217"},"content":"        private final String message;"},{"lineNumber":24,"author":{"gitId":"Andrewzhang217"},"content":"        Message(String message) {"},{"lineNumber":25,"author":{"gitId":"Andrewzhang217"},"content":"            this.message \u003d message;"},{"lineNumber":26,"author":{"gitId":"Andrewzhang217"},"content":"        }"},{"lineNumber":27,"author":{"gitId":"Andrewzhang217"},"content":""},{"lineNumber":28,"author":{"gitId":"Andrewzhang217"},"content":"        @Override"},{"lineNumber":29,"author":{"gitId":"Andrewzhang217"},"content":"        public String toString() {"},{"lineNumber":30,"author":{"gitId":"Andrewzhang217"},"content":"            return this.message;"},{"lineNumber":31,"author":{"gitId":"Andrewzhang217"},"content":"        }"},{"lineNumber":32,"author":{"gitId":"Andrewzhang217"},"content":""},{"lineNumber":33,"author":{"gitId":"Andrewzhang217"},"content":"}"},{"lineNumber":34,"author":{"gitId":"Andrewzhang217"},"content":""}],"authorContributionMap":{"Andrewzhang217":34}},{"path":"src/main/java/common/TimeWrapper.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Andrewzhang217"},"content":"package common;"},{"lineNumber":2,"author":{"gitId":"Andrewzhang217"},"content":""},{"lineNumber":3,"author":{"gitId":"Andrewzhang217"},"content":"import java.time.LocalDate;"},{"lineNumber":4,"author":{"gitId":"Andrewzhang217"},"content":"import java.time.LocalDateTime;"},{"lineNumber":5,"author":{"gitId":"Andrewzhang217"},"content":""},{"lineNumber":6,"author":{"gitId":"Andrewzhang217"},"content":""},{"lineNumber":7,"author":{"gitId":"Andrewzhang217"},"content":"public class TimeWrapper {"},{"lineNumber":8,"author":{"gitId":"Andrewzhang217"},"content":"    private final LocalDate date;"},{"lineNumber":9,"author":{"gitId":"Andrewzhang217"},"content":"    private final LocalDateTime dateTime;"},{"lineNumber":10,"author":{"gitId":"Andrewzhang217"},"content":"    private final String message;"},{"lineNumber":11,"author":{"gitId":"Andrewzhang217"},"content":""},{"lineNumber":12,"author":{"gitId":"Andrewzhang217"},"content":"    private TimeWrapper(LocalDate date, LocalDateTime dateTime, String message) {"},{"lineNumber":13,"author":{"gitId":"Andrewzhang217"},"content":"        this.date \u003d date;"},{"lineNumber":14,"author":{"gitId":"Andrewzhang217"},"content":"        this.dateTime \u003d dateTime;"},{"lineNumber":15,"author":{"gitId":"Andrewzhang217"},"content":"        this.message \u003d message;"},{"lineNumber":16,"author":{"gitId":"Andrewzhang217"},"content":"    }"},{"lineNumber":17,"author":{"gitId":"Andrewzhang217"},"content":""},{"lineNumber":18,"author":{"gitId":"Andrewzhang217"},"content":"    public static TimeWrapper getTimeWrapper(String string) {"},{"lineNumber":19,"author":{"gitId":"Andrewzhang217"},"content":"        if (TimeParser.isDateTime(string)) {"},{"lineNumber":20,"author":{"gitId":"Andrewzhang217"},"content":"            LocalDateTime ldt \u003d TimeParser.parseDateTime(string);"},{"lineNumber":21,"author":{"gitId":"Andrewzhang217"},"content":"            return new TimeWrapper(ldt.toLocalDate(), ldt, null);"},{"lineNumber":22,"author":{"gitId":"Andrewzhang217"},"content":"        } else if (TimeParser.isDate(string)) {"},{"lineNumber":23,"author":{"gitId":"Andrewzhang217"},"content":"            return new TimeWrapper(TimeParser.parseDate(string), null, null);"},{"lineNumber":24,"author":{"gitId":"Andrewzhang217"},"content":"        }"},{"lineNumber":25,"author":{"gitId":"Andrewzhang217"},"content":"        return new TimeWrapper(null, null, string);"},{"lineNumber":26,"author":{"gitId":"Andrewzhang217"},"content":"    }"},{"lineNumber":27,"author":{"gitId":"Andrewzhang217"},"content":"    "},{"lineNumber":28,"author":{"gitId":"Andrewzhang217"},"content":"    @Override"},{"lineNumber":29,"author":{"gitId":"Andrewzhang217"},"content":"    public boolean equals(Object obj) {"},{"lineNumber":30,"author":{"gitId":"Andrewzhang217"},"content":"        if (obj \u003d\u003d null) {"},{"lineNumber":31,"author":{"gitId":"Andrewzhang217"},"content":"            return false;"},{"lineNumber":32,"author":{"gitId":"Andrewzhang217"},"content":"        } else if (obj \u003d\u003d this) {"},{"lineNumber":33,"author":{"gitId":"Andrewzhang217"},"content":"            return true;"},{"lineNumber":34,"author":{"gitId":"Andrewzhang217"},"content":"        } else if (!(obj instanceof TimeWrapper)) {"},{"lineNumber":35,"author":{"gitId":"Andrewzhang217"},"content":"            return false;"},{"lineNumber":36,"author":{"gitId":"Andrewzhang217"},"content":"        }"},{"lineNumber":37,"author":{"gitId":"Andrewzhang217"},"content":"        TimeWrapper tw \u003d (TimeWrapper) obj;"},{"lineNumber":38,"author":{"gitId":"Andrewzhang217"},"content":"        if (this.dateTime !\u003d null \u0026\u0026 tw.dateTime !\u003d null) {"},{"lineNumber":39,"author":{"gitId":"Andrewzhang217"},"content":"            return this.dateTime.equals(tw.dateTime);"},{"lineNumber":40,"author":{"gitId":"Andrewzhang217"},"content":"        }"},{"lineNumber":41,"author":{"gitId":"Andrewzhang217"},"content":"        if (this.date !\u003d null \u0026\u0026 tw.date !\u003d null) {"},{"lineNumber":42,"author":{"gitId":"Andrewzhang217"},"content":"            return this.date.equals(tw.date);"},{"lineNumber":43,"author":{"gitId":"Andrewzhang217"},"content":"        }"},{"lineNumber":44,"author":{"gitId":"Andrewzhang217"},"content":"        if (this.message !\u003d null \u0026\u0026 tw.message !\u003d null) {"},{"lineNumber":45,"author":{"gitId":"Andrewzhang217"},"content":"            return this.message.equals(tw.message);"},{"lineNumber":46,"author":{"gitId":"Andrewzhang217"},"content":"        }"},{"lineNumber":47,"author":{"gitId":"Andrewzhang217"},"content":"        return false;"},{"lineNumber":48,"author":{"gitId":"Andrewzhang217"},"content":"    }"},{"lineNumber":49,"author":{"gitId":"Andrewzhang217"},"content":""},{"lineNumber":50,"author":{"gitId":"Andrewzhang217"},"content":"    @Override"},{"lineNumber":51,"author":{"gitId":"Andrewzhang217"},"content":"    public String toString() {"},{"lineNumber":52,"author":{"gitId":"Andrewzhang217"},"content":"        if (dateTime !\u003d null) {"},{"lineNumber":53,"author":{"gitId":"Andrewzhang217"},"content":"            return dateTime.toString();"},{"lineNumber":54,"author":{"gitId":"Andrewzhang217"},"content":"        }"},{"lineNumber":55,"author":{"gitId":"Andrewzhang217"},"content":"        if (date !\u003d null) {"},{"lineNumber":56,"author":{"gitId":"Andrewzhang217"},"content":"            return date.toString();"},{"lineNumber":57,"author":{"gitId":"Andrewzhang217"},"content":"        }"},{"lineNumber":58,"author":{"gitId":"Andrewzhang217"},"content":"        if (message !\u003d null) {"},{"lineNumber":59,"author":{"gitId":"Andrewzhang217"},"content":"            return message;"},{"lineNumber":60,"author":{"gitId":"Andrewzhang217"},"content":"        }"},{"lineNumber":61,"author":{"gitId":"Andrewzhang217"},"content":"        return \"No data found.\";"},{"lineNumber":62,"author":{"gitId":"Andrewzhang217"},"content":"    }"},{"lineNumber":63,"author":{"gitId":"Andrewzhang217"},"content":"}"}],"authorContributionMap":{"Andrewzhang217":63}},{"path":"src/main/java/data/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Andrewzhang217"},"content":"package data;"},{"lineNumber":2,"author":{"gitId":"Andrewzhang217"},"content":""},{"lineNumber":3,"author":{"gitId":"Andrewzhang217"},"content":"import commands.Command;"},{"lineNumber":4,"author":{"gitId":"Andrewzhang217"},"content":"import data.exception.DukeIllegalArgumentException;"},{"lineNumber":5,"author":{"gitId":"Andrewzhang217"},"content":"import data.exception.DukeUnrecognizedArgumentException;"},{"lineNumber":6,"author":{"gitId":"Andrewzhang217"},"content":"import data.task.*;"},{"lineNumber":7,"author":{"gitId":"Andrewzhang217"},"content":""},{"lineNumber":8,"author":{"gitId":"Andrewzhang217"},"content":"import storage.TaskManager;"},{"lineNumber":9,"author":{"gitId":"Andrewzhang217"},"content":""},{"lineNumber":10,"author":{"gitId":"Andrewzhang217"},"content":"/**"},{"lineNumber":11,"author":{"gitId":"Andrewzhang217"},"content":" * Main data.Duke chatbot class."},{"lineNumber":12,"author":{"gitId":"Andrewzhang217"},"content":" */"},{"lineNumber":13,"author":{"gitId":"Andrewzhang217"},"content":"public class Duke implements IDuke{"},{"lineNumber":14,"author":{"gitId":"Andrewzhang217"},"content":"    /** List of Tasks */"},{"lineNumber":15,"author":{"gitId":"Andrewzhang217"},"content":"    private final TaskList list;"},{"lineNumber":16,"author":{"gitId":"Andrewzhang217"},"content":"    private final TaskManager tm;"},{"lineNumber":17,"author":{"gitId":"Andrewzhang217"},"content":""},{"lineNumber":18,"author":{"gitId":"Andrewzhang217"},"content":"    private Duke(TaskList lst, TaskManager tm){"},{"lineNumber":19,"author":{"gitId":"Andrewzhang217"},"content":"        this.list \u003d new TaskList(lst.getList());"},{"lineNumber":20,"author":{"gitId":"Andrewzhang217"},"content":"        this.tm \u003d tm;"},{"lineNumber":21,"author":{"gitId":"Andrewzhang217"},"content":"    }"},{"lineNumber":22,"author":{"gitId":"Andrewzhang217"},"content":""},{"lineNumber":23,"author":{"gitId":"Andrewzhang217"},"content":"    /**"},{"lineNumber":24,"author":{"gitId":"Andrewzhang217"},"content":"     * Returns a new data.Duke chatbot object."},{"lineNumber":25,"author":{"gitId":"Andrewzhang217"},"content":"     *"},{"lineNumber":26,"author":{"gitId":"Andrewzhang217"},"content":"     * @return New data.Duke chatbot object."},{"lineNumber":27,"author":{"gitId":"Andrewzhang217"},"content":"     */"},{"lineNumber":28,"author":{"gitId":"Andrewzhang217"},"content":"    public static Duke getDuke(String filePath) {"},{"lineNumber":29,"author":{"gitId":"Andrewzhang217"},"content":"        TaskManager tm \u003d TaskManager.getTaskManager(filePath);"},{"lineNumber":30,"author":{"gitId":"Andrewzhang217"},"content":"        return new Duke(new TaskList(tm.read()), tm);"},{"lineNumber":31,"author":{"gitId":"Andrewzhang217"},"content":"    }"},{"lineNumber":32,"author":{"gitId":"Andrewzhang217"},"content":""},{"lineNumber":33,"author":{"gitId":"Andrewzhang217"},"content":"    @Override"},{"lineNumber":34,"author":{"gitId":"Andrewzhang217"},"content":"    public TaskManager getTaskManager(){"},{"lineNumber":35,"author":{"gitId":"Andrewzhang217"},"content":"        return tm;"},{"lineNumber":36,"author":{"gitId":"Andrewzhang217"},"content":"    }"},{"lineNumber":37,"author":{"gitId":"Andrewzhang217"},"content":""},{"lineNumber":38,"author":{"gitId":"Andrewzhang217"},"content":"    /**"},{"lineNumber":39,"author":{"gitId":"Andrewzhang217"},"content":"     * {@inheritDoc}"},{"lineNumber":40,"author":{"gitId":"Andrewzhang217"},"content":"     */"},{"lineNumber":41,"author":{"gitId":"Andrewzhang217"},"content":"    @Override"},{"lineNumber":42,"author":{"gitId":"Andrewzhang217"},"content":"    public String greeting() {"},{"lineNumber":43,"author":{"gitId":"Andrewzhang217"},"content":"        return Ui.greet();"},{"lineNumber":44,"author":{"gitId":"Andrewzhang217"},"content":"    }"},{"lineNumber":45,"author":{"gitId":"Andrewzhang217"},"content":""},{"lineNumber":46,"author":{"gitId":"Andrewzhang217"},"content":"    /**"},{"lineNumber":47,"author":{"gitId":"Andrewzhang217"},"content":"     * {@inheritDoc}"},{"lineNumber":48,"author":{"gitId":"Andrewzhang217"},"content":"     */"},{"lineNumber":49,"author":{"gitId":"Andrewzhang217"},"content":"    @Override"},{"lineNumber":50,"author":{"gitId":"Andrewzhang217"},"content":"    public void addTask(ITask task) {"},{"lineNumber":51,"author":{"gitId":"Andrewzhang217"},"content":"        this.list.add(task);"},{"lineNumber":52,"author":{"gitId":"Andrewzhang217"},"content":"    }"},{"lineNumber":53,"author":{"gitId":"Andrewzhang217"},"content":""},{"lineNumber":54,"author":{"gitId":"Andrewzhang217"},"content":""},{"lineNumber":55,"author":{"gitId":"Andrewzhang217"},"content":"    /**"},{"lineNumber":56,"author":{"gitId":"Andrewzhang217"},"content":"     * {@inheritDoc}"},{"lineNumber":57,"author":{"gitId":"Andrewzhang217"},"content":"     * @throws IllegalArgumentException"},{"lineNumber":58,"author":{"gitId":"Andrewzhang217"},"content":"     */"},{"lineNumber":59,"author":{"gitId":"Andrewzhang217"},"content":"    @Override"},{"lineNumber":60,"author":{"gitId":"Andrewzhang217"},"content":"    public ITask getTask(int id) {"},{"lineNumber":61,"author":{"gitId":"Andrewzhang217"},"content":"        if (id - 1 \u003e list.size() || id \u003c 0) {"},{"lineNumber":62,"author":{"gitId":"Andrewzhang217"},"content":"            throw new IllegalArgumentException(\"Task id out of bound!\");"},{"lineNumber":63,"author":{"gitId":"Andrewzhang217"},"content":"        }"},{"lineNumber":64,"author":{"gitId":"Andrewzhang217"},"content":"        return list.get(id - 1);"},{"lineNumber":65,"author":{"gitId":"Andrewzhang217"},"content":"    }"},{"lineNumber":66,"author":{"gitId":"Andrewzhang217"},"content":""},{"lineNumber":67,"author":{"gitId":"Andrewzhang217"},"content":"    /**"},{"lineNumber":68,"author":{"gitId":"Andrewzhang217"},"content":"     * {@inheritDoc}"},{"lineNumber":69,"author":{"gitId":"Andrewzhang217"},"content":"     */"},{"lineNumber":70,"author":{"gitId":"Andrewzhang217"},"content":"    @Override"},{"lineNumber":71,"author":{"gitId":"Andrewzhang217"},"content":"    public TaskList getTasks() {"},{"lineNumber":72,"author":{"gitId":"Andrewzhang217"},"content":"        return list;"},{"lineNumber":73,"author":{"gitId":"Andrewzhang217"},"content":"    }"},{"lineNumber":74,"author":{"gitId":"Andrewzhang217"},"content":""},{"lineNumber":75,"author":{"gitId":"Andrewzhang217"},"content":"    /**"},{"lineNumber":76,"author":{"gitId":"Andrewzhang217"},"content":"     * {@inheritDoc}"},{"lineNumber":77,"author":{"gitId":"Andrewzhang217"},"content":"     */"},{"lineNumber":78,"author":{"gitId":"Andrewzhang217"},"content":""},{"lineNumber":79,"author":{"gitId":"Andrewzhang217"},"content":"    @Override"},{"lineNumber":80,"author":{"gitId":"Andrewzhang217"},"content":"    public int numOfTasks() {"},{"lineNumber":81,"author":{"gitId":"Andrewzhang217"},"content":"        return list.size();"},{"lineNumber":82,"author":{"gitId":"Andrewzhang217"},"content":"    }"},{"lineNumber":83,"author":{"gitId":"Andrewzhang217"},"content":""},{"lineNumber":84,"author":{"gitId":"Andrewzhang217"},"content":"    /**"},{"lineNumber":85,"author":{"gitId":"Andrewzhang217"},"content":"     * {@inheritDoc}"},{"lineNumber":86,"author":{"gitId":"Andrewzhang217"},"content":"     */"},{"lineNumber":87,"author":{"gitId":"Andrewzhang217"},"content":"    @Override"},{"lineNumber":88,"author":{"gitId":"Andrewzhang217"},"content":"    public String handleCommand(String command) {"},{"lineNumber":89,"author":{"gitId":"Andrewzhang217"},"content":"        try {"},{"lineNumber":90,"author":{"gitId":"Andrewzhang217"},"content":"            Command c \u003d Parser.parse(command);"},{"lineNumber":91,"author":{"gitId":"Andrewzhang217"},"content":"            return c.setDuke(this).execute();"},{"lineNumber":92,"author":{"gitId":"Andrewzhang217"},"content":"        } catch (DukeIllegalArgumentException e) {"},{"lineNumber":93,"author":{"gitId":"Andrewzhang217"},"content":"            String output \u003d \"Meow?!! \" + e.getMessage();"},{"lineNumber":94,"author":{"gitId":"Andrewzhang217"},"content":"            System.out.print(output);"},{"lineNumber":95,"author":{"gitId":"Andrewzhang217"},"content":"            return output;"},{"lineNumber":96,"author":{"gitId":"Andrewzhang217"},"content":"        } catch (DukeUnrecognizedArgumentException e) {"},{"lineNumber":97,"author":{"gitId":"Andrewzhang217"},"content":"            String output \u003d Message.CAT_DOUBT.toString();"},{"lineNumber":98,"author":{"gitId":"Andrewzhang217"},"content":"            System.out.print(TextFormatter.getFormattedText(output));"},{"lineNumber":99,"author":{"gitId":"Andrewzhang217"},"content":"            return output;"},{"lineNumber":100,"author":{"gitId":"Andrewzhang217"},"content":"        } catch (Exception e) {"},{"lineNumber":101,"author":{"gitId":"Andrewzhang217"},"content":"            String output \u003d Message.CAT_CRY.toString() + e;"},{"lineNumber":102,"author":{"gitId":"Andrewzhang217"},"content":"            System.out.print(TextFormatter.getFormattedText(output));"},{"lineNumber":103,"author":{"gitId":"Andrewzhang217"},"content":"            return output;"},{"lineNumber":104,"author":{"gitId":"Andrewzhang217"},"content":"        }"},{"lineNumber":105,"author":{"gitId":"Andrewzhang217"},"content":"    }"},{"lineNumber":106,"author":{"gitId":"Andrewzhang217"},"content":""},{"lineNumber":107,"author":{"gitId":"Andrewzhang217"},"content":""},{"lineNumber":108,"author":{"gitId":"Andrewzhang217"},"content":""},{"lineNumber":109,"author":{"gitId":"Andrewzhang217"},"content":"    @Override"},{"lineNumber":110,"author":{"gitId":"Andrewzhang217"},"content":"    public String getResponse(String input) {"},{"lineNumber":111,"author":{"gitId":"Andrewzhang217"},"content":"        return handleCommand(input);"},{"lineNumber":112,"author":{"gitId":"Andrewzhang217"},"content":"    }"},{"lineNumber":113,"author":{"gitId":"Andrewzhang217"},"content":""},{"lineNumber":114,"author":{"gitId":"Andrewzhang217"},"content":"}"}],"authorContributionMap":{"Andrewzhang217":114}},{"path":"src/main/java/data/IDuke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Andrewzhang217"},"content":"package data;"},{"lineNumber":2,"author":{"gitId":"Andrewzhang217"},"content":""},{"lineNumber":3,"author":{"gitId":"Andrewzhang217"},"content":"import data.task.ITask;"},{"lineNumber":4,"author":{"gitId":"Andrewzhang217"},"content":"import data.task.TaskList;"},{"lineNumber":5,"author":{"gitId":"Andrewzhang217"},"content":"import storage.TaskManager;"},{"lineNumber":6,"author":{"gitId":"Andrewzhang217"},"content":""},{"lineNumber":7,"author":{"gitId":"Andrewzhang217"},"content":"import java.util.List;"},{"lineNumber":8,"author":{"gitId":"Andrewzhang217"},"content":"public interface IDuke {"},{"lineNumber":9,"author":{"gitId":"Andrewzhang217"},"content":""},{"lineNumber":10,"author":{"gitId":"Andrewzhang217"},"content":"    /**"},{"lineNumber":11,"author":{"gitId":"Andrewzhang217"},"content":"     * Prints greeting message."},{"lineNumber":12,"author":{"gitId":"Andrewzhang217"},"content":"     */"},{"lineNumber":13,"author":{"gitId":"Andrewzhang217"},"content":"    public String greeting();"},{"lineNumber":14,"author":{"gitId":"Andrewzhang217"},"content":""},{"lineNumber":15,"author":{"gitId":"Andrewzhang217"},"content":""},{"lineNumber":16,"author":{"gitId":"Andrewzhang217"},"content":"    /**"},{"lineNumber":17,"author":{"gitId":"Andrewzhang217"},"content":"     *"},{"lineNumber":18,"author":{"gitId":"Andrewzhang217"},"content":"     * @param command User command"},{"lineNumber":19,"author":{"gitId":"Andrewzhang217"},"content":"     * @return data.IDuke object"},{"lineNumber":20,"author":{"gitId":"Andrewzhang217"},"content":"     */"},{"lineNumber":21,"author":{"gitId":"Andrewzhang217"},"content":"    String handleCommand(String command);"},{"lineNumber":22,"author":{"gitId":"Andrewzhang217"},"content":""},{"lineNumber":23,"author":{"gitId":"Andrewzhang217"},"content":"    /**"},{"lineNumber":24,"author":{"gitId":"Andrewzhang217"},"content":"     *"},{"lineNumber":25,"author":{"gitId":"Andrewzhang217"},"content":"     * @param task a task"},{"lineNumber":26,"author":{"gitId":"Andrewzhang217"},"content":"     * IDuke object with the adding task"},{"lineNumber":27,"author":{"gitId":"Andrewzhang217"},"content":"     */"},{"lineNumber":28,"author":{"gitId":"Andrewzhang217"},"content":"    void addTask(ITask task);"},{"lineNumber":29,"author":{"gitId":"Andrewzhang217"},"content":""},{"lineNumber":30,"author":{"gitId":"Andrewzhang217"},"content":"    /**"},{"lineNumber":31,"author":{"gitId":"Andrewzhang217"},"content":"     * Prints the task list"},{"lineNumber":32,"author":{"gitId":"Andrewzhang217"},"content":"     */"},{"lineNumber":33,"author":{"gitId":"Andrewzhang217"},"content":""},{"lineNumber":34,"author":{"gitId":"Andrewzhang217"},"content":"    ITask getTask(int id);"},{"lineNumber":35,"author":{"gitId":"Andrewzhang217"},"content":""},{"lineNumber":36,"author":{"gitId":"Andrewzhang217"},"content":"    /**"},{"lineNumber":37,"author":{"gitId":"Andrewzhang217"},"content":"     *"},{"lineNumber":38,"author":{"gitId":"Andrewzhang217"},"content":"     * @return number of tasks in the list"},{"lineNumber":39,"author":{"gitId":"Andrewzhang217"},"content":"     */"},{"lineNumber":40,"author":{"gitId":"Andrewzhang217"},"content":"    int numOfTasks();"},{"lineNumber":41,"author":{"gitId":"Andrewzhang217"},"content":""},{"lineNumber":42,"author":{"gitId":"Andrewzhang217"},"content":"    TaskManager getTaskManager();"},{"lineNumber":43,"author":{"gitId":"Andrewzhang217"},"content":""},{"lineNumber":44,"author":{"gitId":"Andrewzhang217"},"content":"    TaskList  getTasks();"},{"lineNumber":45,"author":{"gitId":"Andrewzhang217"},"content":""},{"lineNumber":46,"author":{"gitId":"Andrewzhang217"},"content":"    String getResponse(String input);"},{"lineNumber":47,"author":{"gitId":"Andrewzhang217"},"content":""},{"lineNumber":48,"author":{"gitId":"Andrewzhang217"},"content":"}"}],"authorContributionMap":{"Andrewzhang217":48}},{"path":"src/main/java/data/exception/DukeEmptyCommandException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Andrewzhang217"},"content":"package data.exception;"},{"lineNumber":2,"author":{"gitId":"Andrewzhang217"},"content":""},{"lineNumber":3,"author":{"gitId":"Andrewzhang217"},"content":"public class DukeEmptyCommandException extends IllegalArgumentException{"},{"lineNumber":4,"author":{"gitId":"Andrewzhang217"},"content":"    public DukeEmptyCommandException(String s){"},{"lineNumber":5,"author":{"gitId":"Andrewzhang217"},"content":"        super(s);"},{"lineNumber":6,"author":{"gitId":"Andrewzhang217"},"content":"    }"},{"lineNumber":7,"author":{"gitId":"Andrewzhang217"},"content":"}"}],"authorContributionMap":{"Andrewzhang217":7}},{"path":"src/main/java/data/exception/DukeIllegalArgumentException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Andrewzhang217"},"content":"package data.exception;"},{"lineNumber":2,"author":{"gitId":"Andrewzhang217"},"content":""},{"lineNumber":3,"author":{"gitId":"Andrewzhang217"},"content":"public class DukeIllegalArgumentException extends IllegalArgumentException{"},{"lineNumber":4,"author":{"gitId":"Andrewzhang217"},"content":"    public DukeIllegalArgumentException(String s){"},{"lineNumber":5,"author":{"gitId":"Andrewzhang217"},"content":"        super(s);"},{"lineNumber":6,"author":{"gitId":"Andrewzhang217"},"content":"    }"},{"lineNumber":7,"author":{"gitId":"Andrewzhang217"},"content":"}"}],"authorContributionMap":{"Andrewzhang217":7}},{"path":"src/main/java/data/exception/DukeUnrecognizedArgumentException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Andrewzhang217"},"content":"package data.exception;"},{"lineNumber":2,"author":{"gitId":"Andrewzhang217"},"content":""},{"lineNumber":3,"author":{"gitId":"Andrewzhang217"},"content":"public class DukeUnrecognizedArgumentException extends IllegalArgumentException{"},{"lineNumber":4,"author":{"gitId":"Andrewzhang217"},"content":"    public DukeUnrecognizedArgumentException(String s){"},{"lineNumber":5,"author":{"gitId":"Andrewzhang217"},"content":"        super(s);"},{"lineNumber":6,"author":{"gitId":"Andrewzhang217"},"content":"    }"},{"lineNumber":7,"author":{"gitId":"Andrewzhang217"},"content":"}"}],"authorContributionMap":{"Andrewzhang217":7}},{"path":"src/main/java/data/exception/DukeWrongCommandException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Andrewzhang217"},"content":"package data.exception;"},{"lineNumber":2,"author":{"gitId":"Andrewzhang217"},"content":""},{"lineNumber":3,"author":{"gitId":"Andrewzhang217"},"content":"public class DukeWrongCommandException extends IllegalArgumentException{"},{"lineNumber":4,"author":{"gitId":"Andrewzhang217"},"content":"    public DukeWrongCommandException (String s){"},{"lineNumber":5,"author":{"gitId":"Andrewzhang217"},"content":"        super(s);"},{"lineNumber":6,"author":{"gitId":"Andrewzhang217"},"content":"    }"},{"lineNumber":7,"author":{"gitId":"Andrewzhang217"},"content":"}"}],"authorContributionMap":{"Andrewzhang217":7}},{"path":"src/main/java/data/task/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Andrewzhang217"},"content":"package data.task;"},{"lineNumber":2,"author":{"gitId":"Andrewzhang217"},"content":""},{"lineNumber":3,"author":{"gitId":"Andrewzhang217"},"content":"import common.TimeWrapper;"},{"lineNumber":4,"author":{"gitId":"Andrewzhang217"},"content":""},{"lineNumber":5,"author":{"gitId":"Andrewzhang217"},"content":"public class Deadline extends Task{"},{"lineNumber":6,"author":{"gitId":"Andrewzhang217"},"content":""},{"lineNumber":7,"author":{"gitId":"Andrewzhang217"},"content":"    protected TimeWrapper by;"},{"lineNumber":8,"author":{"gitId":"Andrewzhang217"},"content":""},{"lineNumber":9,"author":{"gitId":"Andrewzhang217"},"content":"    public Deadline(String description, TimeWrapper by, boolean isDone) {"},{"lineNumber":10,"author":{"gitId":"Andrewzhang217"},"content":"        super(description, isDone);"},{"lineNumber":11,"author":{"gitId":"Andrewzhang217"},"content":"        this.by \u003d by;"},{"lineNumber":12,"author":{"gitId":"Andrewzhang217"},"content":"    }"},{"lineNumber":13,"author":{"gitId":"Andrewzhang217"},"content":""},{"lineNumber":14,"author":{"gitId":"Andrewzhang217"},"content":"    public static Deadline getDeadline(String description, String by) {"},{"lineNumber":15,"author":{"gitId":"Andrewzhang217"},"content":"        return new Deadline(description, TimeWrapper.getTimeWrapper(by), false);"},{"lineNumber":16,"author":{"gitId":"Andrewzhang217"},"content":"    }"},{"lineNumber":17,"author":{"gitId":"Andrewzhang217"},"content":""},{"lineNumber":18,"author":{"gitId":"Andrewzhang217"},"content":"    @Override"},{"lineNumber":19,"author":{"gitId":"Andrewzhang217"},"content":"    public String getContentString(){"},{"lineNumber":20,"author":{"gitId":"Andrewzhang217"},"content":"        return String.format(\"D|%d|%S|%S\",isDone ? 1 : 0, this.description, this.by);"},{"lineNumber":21,"author":{"gitId":"Andrewzhang217"},"content":""},{"lineNumber":22,"author":{"gitId":"Andrewzhang217"},"content":"    }"},{"lineNumber":23,"author":{"gitId":"Andrewzhang217"},"content":""},{"lineNumber":24,"author":{"gitId":"Andrewzhang217"},"content":"    @Override"},{"lineNumber":25,"author":{"gitId":"Andrewzhang217"},"content":"    public Task markDone(){"},{"lineNumber":26,"author":{"gitId":"Andrewzhang217"},"content":"        return new Deadline(description,by,true);"},{"lineNumber":27,"author":{"gitId":"Andrewzhang217"},"content":"    }"},{"lineNumber":28,"author":{"gitId":"Andrewzhang217"},"content":""},{"lineNumber":29,"author":{"gitId":"Andrewzhang217"},"content":"    @Override"},{"lineNumber":30,"author":{"gitId":"Andrewzhang217"},"content":"    public boolean isSameTime(String time) {"},{"lineNumber":31,"author":{"gitId":"Andrewzhang217"},"content":"        return by.equals(TimeWrapper.getTimeWrapper(time));"},{"lineNumber":32,"author":{"gitId":"Andrewzhang217"},"content":"    }"},{"lineNumber":33,"author":{"gitId":"Andrewzhang217"},"content":""},{"lineNumber":34,"author":{"gitId":"Andrewzhang217"},"content":"    @Override"},{"lineNumber":35,"author":{"gitId":"Andrewzhang217"},"content":"    public String toString() {"},{"lineNumber":36,"author":{"gitId":"Andrewzhang217"},"content":"        return \"[D]\" + super.toString() + \" (by: \" + by + \")\";"},{"lineNumber":37,"author":{"gitId":"Andrewzhang217"},"content":"    }"},{"lineNumber":38,"author":{"gitId":"Andrewzhang217"},"content":"}"},{"lineNumber":39,"author":{"gitId":"Andrewzhang217"},"content":""}],"authorContributionMap":{"Andrewzhang217":39}},{"path":"src/main/java/data/task/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Andrewzhang217"},"content":"package data.task;"},{"lineNumber":2,"author":{"gitId":"Andrewzhang217"},"content":""},{"lineNumber":3,"author":{"gitId":"Andrewzhang217"},"content":"import common.TimeWrapper;"},{"lineNumber":4,"author":{"gitId":"Andrewzhang217"},"content":""},{"lineNumber":5,"author":{"gitId":"Andrewzhang217"},"content":"public class Event extends Task {"},{"lineNumber":6,"author":{"gitId":"Andrewzhang217"},"content":""},{"lineNumber":7,"author":{"gitId":"Andrewzhang217"},"content":"    protected TimeWrapper at;"},{"lineNumber":8,"author":{"gitId":"Andrewzhang217"},"content":""},{"lineNumber":9,"author":{"gitId":"Andrewzhang217"},"content":"    public Event(String description, TimeWrapper at, boolean isDone) {"},{"lineNumber":10,"author":{"gitId":"Andrewzhang217"},"content":"        super(description, isDone);"},{"lineNumber":11,"author":{"gitId":"Andrewzhang217"},"content":"        this.at \u003d at;"},{"lineNumber":12,"author":{"gitId":"Andrewzhang217"},"content":"    }"},{"lineNumber":13,"author":{"gitId":"Andrewzhang217"},"content":""},{"lineNumber":14,"author":{"gitId":"Andrewzhang217"},"content":"    public static Event getEvent(String description, String at) {"},{"lineNumber":15,"author":{"gitId":"Andrewzhang217"},"content":"        return new Event(description, TimeWrapper.getTimeWrapper(at), false);"},{"lineNumber":16,"author":{"gitId":"Andrewzhang217"},"content":"    }"},{"lineNumber":17,"author":{"gitId":"Andrewzhang217"},"content":""},{"lineNumber":18,"author":{"gitId":"Andrewzhang217"},"content":"    @Override"},{"lineNumber":19,"author":{"gitId":"Andrewzhang217"},"content":"    public String getContentString(){"},{"lineNumber":20,"author":{"gitId":"Andrewzhang217"},"content":"        return String.format(\"E|%d|%S|%S\",isDone ? 1 : 0, this.description, this.at);"},{"lineNumber":21,"author":{"gitId":"Andrewzhang217"},"content":""},{"lineNumber":22,"author":{"gitId":"Andrewzhang217"},"content":"    }"},{"lineNumber":23,"author":{"gitId":"Andrewzhang217"},"content":"    @Override"},{"lineNumber":24,"author":{"gitId":"Andrewzhang217"},"content":"    public Task markDone(){"},{"lineNumber":25,"author":{"gitId":"Andrewzhang217"},"content":"        return new Event(description,at,true);"},{"lineNumber":26,"author":{"gitId":"Andrewzhang217"},"content":"    }"},{"lineNumber":27,"author":{"gitId":"Andrewzhang217"},"content":""},{"lineNumber":28,"author":{"gitId":"Andrewzhang217"},"content":"    @Override"},{"lineNumber":29,"author":{"gitId":"Andrewzhang217"},"content":"    public boolean isSameTime(String time) {"},{"lineNumber":30,"author":{"gitId":"Andrewzhang217"},"content":"        return at.equals(TimeWrapper.getTimeWrapper(time));"},{"lineNumber":31,"author":{"gitId":"Andrewzhang217"},"content":"    }"},{"lineNumber":32,"author":{"gitId":"Andrewzhang217"},"content":""},{"lineNumber":33,"author":{"gitId":"Andrewzhang217"},"content":"    @Override"},{"lineNumber":34,"author":{"gitId":"Andrewzhang217"},"content":"    public String toString() {"},{"lineNumber":35,"author":{"gitId":"Andrewzhang217"},"content":"        return \"[E]\" + super.toString() + \" (at: \" + this.at + \")\";"},{"lineNumber":36,"author":{"gitId":"Andrewzhang217"},"content":"    }"},{"lineNumber":37,"author":{"gitId":"Andrewzhang217"},"content":"}"}],"authorContributionMap":{"Andrewzhang217":37}},{"path":"src/main/java/data/task/ITask.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Andrewzhang217"},"content":"package data.task;"},{"lineNumber":2,"author":{"gitId":"Andrewzhang217"},"content":""},{"lineNumber":3,"author":{"gitId":"Andrewzhang217"},"content":"public interface ITask {"},{"lineNumber":4,"author":{"gitId":"Andrewzhang217"},"content":""},{"lineNumber":5,"author":{"gitId":"Andrewzhang217"},"content":"    /**"},{"lineNumber":6,"author":{"gitId":"Andrewzhang217"},"content":"     *"},{"lineNumber":7,"author":{"gitId":"Andrewzhang217"},"content":"     * @return data.task.ITask object with a true isDone status"},{"lineNumber":8,"author":{"gitId":"Andrewzhang217"},"content":"     */"},{"lineNumber":9,"author":{"gitId":"Andrewzhang217"},"content":"    ITask markDone();"},{"lineNumber":10,"author":{"gitId":"Andrewzhang217"},"content":""},{"lineNumber":11,"author":{"gitId":"Andrewzhang217"},"content":"    /**"},{"lineNumber":12,"author":{"gitId":"Andrewzhang217"},"content":"     *"},{"lineNumber":13,"author":{"gitId":"Andrewzhang217"},"content":"     * @return the status of the data.task.ITask object"},{"lineNumber":14,"author":{"gitId":"Andrewzhang217"},"content":"     */"},{"lineNumber":15,"author":{"gitId":"Andrewzhang217"},"content":"    boolean isDone();"},{"lineNumber":16,"author":{"gitId":"Andrewzhang217"},"content":""},{"lineNumber":17,"author":{"gitId":"Andrewzhang217"},"content":"    String getContentString();"},{"lineNumber":18,"author":{"gitId":"Andrewzhang217"},"content":""},{"lineNumber":19,"author":{"gitId":"Andrewzhang217"},"content":"    boolean isSameTime(String date);"},{"lineNumber":20,"author":{"gitId":"Andrewzhang217"},"content":""},{"lineNumber":21,"author":{"gitId":"Andrewzhang217"},"content":"}"}],"authorContributionMap":{"Andrewzhang217":21}},{"path":"src/main/java/data/task/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Andrewzhang217"},"content":"package data.task;"},{"lineNumber":2,"author":{"gitId":"Andrewzhang217"},"content":""},{"lineNumber":3,"author":{"gitId":"Andrewzhang217"},"content":"public class Task implements ITask {"},{"lineNumber":4,"author":{"gitId":"Andrewzhang217"},"content":""},{"lineNumber":5,"author":{"gitId":"Andrewzhang217"},"content":"    protected String description;"},{"lineNumber":6,"author":{"gitId":"Andrewzhang217"},"content":"    protected boolean isDone;"},{"lineNumber":7,"author":{"gitId":"Andrewzhang217"},"content":""},{"lineNumber":8,"author":{"gitId":"Andrewzhang217"},"content":""},{"lineNumber":9,"author":{"gitId":"Andrewzhang217"},"content":"    public Task(String description, boolean isDone){"},{"lineNumber":10,"author":{"gitId":"Andrewzhang217"},"content":"        this.description \u003d description;"},{"lineNumber":11,"author":{"gitId":"Andrewzhang217"},"content":"        this.isDone \u003d isDone;"},{"lineNumber":12,"author":{"gitId":"Andrewzhang217"},"content":"    }"},{"lineNumber":13,"author":{"gitId":"Andrewzhang217"},"content":""},{"lineNumber":14,"author":{"gitId":"Andrewzhang217"},"content":"    public static Task getTask(String description){"},{"lineNumber":15,"author":{"gitId":"Andrewzhang217"},"content":"        return new Task(description, false);"},{"lineNumber":16,"author":{"gitId":"Andrewzhang217"},"content":"    }"},{"lineNumber":17,"author":{"gitId":"Andrewzhang217"},"content":""},{"lineNumber":18,"author":{"gitId":"Andrewzhang217"},"content":"    @Override"},{"lineNumber":19,"author":{"gitId":"Andrewzhang217"},"content":"    public boolean isSameTime(String time) {"},{"lineNumber":20,"author":{"gitId":"Andrewzhang217"},"content":"        return false;"},{"lineNumber":21,"author":{"gitId":"Andrewzhang217"},"content":"    }"},{"lineNumber":22,"author":{"gitId":"Andrewzhang217"},"content":""},{"lineNumber":23,"author":{"gitId":"Andrewzhang217"},"content":"    @Override"},{"lineNumber":24,"author":{"gitId":"Andrewzhang217"},"content":"    public boolean isDone() {"},{"lineNumber":25,"author":{"gitId":"Andrewzhang217"},"content":"        return this.isDone;"},{"lineNumber":26,"author":{"gitId":"Andrewzhang217"},"content":"    }"},{"lineNumber":27,"author":{"gitId":"Andrewzhang217"},"content":""},{"lineNumber":28,"author":{"gitId":"Andrewzhang217"},"content":"    @Override"},{"lineNumber":29,"author":{"gitId":"Andrewzhang217"},"content":"    public ITask markDone(){"},{"lineNumber":30,"author":{"gitId":"Andrewzhang217"},"content":"        return new Task(this.description,true);"},{"lineNumber":31,"author":{"gitId":"Andrewzhang217"},"content":"    }"},{"lineNumber":32,"author":{"gitId":"Andrewzhang217"},"content":""},{"lineNumber":33,"author":{"gitId":"Andrewzhang217"},"content":"    @Override"},{"lineNumber":34,"author":{"gitId":"Andrewzhang217"},"content":"    public String getContentString(){"},{"lineNumber":35,"author":{"gitId":"Andrewzhang217"},"content":"        return String.format(\"TASK|%d|%s\", this.isDone() ? 1 : 0, this.description);"},{"lineNumber":36,"author":{"gitId":"Andrewzhang217"},"content":"    }"},{"lineNumber":37,"author":{"gitId":"Andrewzhang217"},"content":"    "},{"lineNumber":38,"author":{"gitId":"Andrewzhang217"},"content":"    @Override"},{"lineNumber":39,"author":{"gitId":"Andrewzhang217"},"content":"    public String toString(){"},{"lineNumber":40,"author":{"gitId":"Andrewzhang217"},"content":"        return \"[\" + (isDone ? \"V\" : \"X\") + \"]\" + this.description;"},{"lineNumber":41,"author":{"gitId":"Andrewzhang217"},"content":"    }"},{"lineNumber":42,"author":{"gitId":"Andrewzhang217"},"content":""},{"lineNumber":43,"author":{"gitId":"Andrewzhang217"},"content":"}"}],"authorContributionMap":{"Andrewzhang217":43}},{"path":"src/main/java/data/task/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Andrewzhang217"},"content":"package data.task;"},{"lineNumber":2,"author":{"gitId":"Andrewzhang217"},"content":""},{"lineNumber":3,"author":{"gitId":"Andrewzhang217"},"content":"import java.util.ArrayList;"},{"lineNumber":4,"author":{"gitId":"Andrewzhang217"},"content":"import java.util.List;"},{"lineNumber":5,"author":{"gitId":"Andrewzhang217"},"content":""},{"lineNumber":6,"author":{"gitId":"Andrewzhang217"},"content":"/**"},{"lineNumber":7,"author":{"gitId":"Andrewzhang217"},"content":" * TaskList class to encapsulate a list of tasks."},{"lineNumber":8,"author":{"gitId":"Andrewzhang217"},"content":" */"},{"lineNumber":9,"author":{"gitId":"Andrewzhang217"},"content":"public class TaskList {"},{"lineNumber":10,"author":{"gitId":"Andrewzhang217"},"content":"    private final List\u003cITask\u003e taskList;"},{"lineNumber":11,"author":{"gitId":"Andrewzhang217"},"content":""},{"lineNumber":12,"author":{"gitId":"Andrewzhang217"},"content":"    /**"},{"lineNumber":13,"author":{"gitId":"Andrewzhang217"},"content":"     * Returns a TaskList using a list of tasks."},{"lineNumber":14,"author":{"gitId":"Andrewzhang217"},"content":"     *"},{"lineNumber":15,"author":{"gitId":"Andrewzhang217"},"content":"     * @param taskList A list of tasks."},{"lineNumber":16,"author":{"gitId":"Andrewzhang217"},"content":"     */"},{"lineNumber":17,"author":{"gitId":"Andrewzhang217"},"content":"    public TaskList(List\u003cITask\u003e taskList) {"},{"lineNumber":18,"author":{"gitId":"Andrewzhang217"},"content":"        this.taskList \u003d new ArrayList\u003c\u003e(taskList);"},{"lineNumber":19,"author":{"gitId":"Andrewzhang217"},"content":"    }"},{"lineNumber":20,"author":{"gitId":"Andrewzhang217"},"content":""},{"lineNumber":21,"author":{"gitId":"Andrewzhang217"},"content":"    /**"},{"lineNumber":22,"author":{"gitId":"Andrewzhang217"},"content":"     * Adds a task to the task list."},{"lineNumber":23,"author":{"gitId":"Andrewzhang217"},"content":"     *"},{"lineNumber":24,"author":{"gitId":"Andrewzhang217"},"content":"     * @param task Task to be added."},{"lineNumber":25,"author":{"gitId":"Andrewzhang217"},"content":"     */"},{"lineNumber":26,"author":{"gitId":"Andrewzhang217"},"content":"    public void add(ITask task) {"},{"lineNumber":27,"author":{"gitId":"Andrewzhang217"},"content":"        taskList.add(task);"},{"lineNumber":28,"author":{"gitId":"Andrewzhang217"},"content":"    }"},{"lineNumber":29,"author":{"gitId":"Andrewzhang217"},"content":""},{"lineNumber":30,"author":{"gitId":"Andrewzhang217"},"content":"    /**"},{"lineNumber":31,"author":{"gitId":"Andrewzhang217"},"content":"     * Removes a task in the task list."},{"lineNumber":32,"author":{"gitId":"Andrewzhang217"},"content":"     *"},{"lineNumber":33,"author":{"gitId":"Andrewzhang217"},"content":"     * @param index Task index to be removed."},{"lineNumber":34,"author":{"gitId":"Andrewzhang217"},"content":"     */"},{"lineNumber":35,"author":{"gitId":"Andrewzhang217"},"content":"    public void remove(int index) {"},{"lineNumber":36,"author":{"gitId":"Andrewzhang217"},"content":"        taskList.remove(index);"},{"lineNumber":37,"author":{"gitId":"Andrewzhang217"},"content":"    }"},{"lineNumber":38,"author":{"gitId":"Andrewzhang217"},"content":""},{"lineNumber":39,"author":{"gitId":"Andrewzhang217"},"content":"    /**"},{"lineNumber":40,"author":{"gitId":"Andrewzhang217"},"content":"     * Replaces a task in the task list."},{"lineNumber":41,"author":{"gitId":"Andrewzhang217"},"content":"     *"},{"lineNumber":42,"author":{"gitId":"Andrewzhang217"},"content":"     * @param index Task index to be removed."},{"lineNumber":43,"author":{"gitId":"Andrewzhang217"},"content":"     * @param newTask Task used to replace the old task."},{"lineNumber":44,"author":{"gitId":"Andrewzhang217"},"content":"     */"},{"lineNumber":45,"author":{"gitId":"Andrewzhang217"},"content":"    public void replace(int index, ITask newTask) {"},{"lineNumber":46,"author":{"gitId":"Andrewzhang217"},"content":"        taskList.set(index, newTask);"},{"lineNumber":47,"author":{"gitId":"Andrewzhang217"},"content":"    }"},{"lineNumber":48,"author":{"gitId":"Andrewzhang217"},"content":""},{"lineNumber":49,"author":{"gitId":"Andrewzhang217"},"content":"    /**"},{"lineNumber":50,"author":{"gitId":"Andrewzhang217"},"content":"     * Return the task at index {@code index}."},{"lineNumber":51,"author":{"gitId":"Andrewzhang217"},"content":"     *"},{"lineNumber":52,"author":{"gitId":"Andrewzhang217"},"content":"     * @param index Index of the task to be returned."},{"lineNumber":53,"author":{"gitId":"Andrewzhang217"},"content":"     * @return The task at index {@code index}."},{"lineNumber":54,"author":{"gitId":"Andrewzhang217"},"content":"     */"},{"lineNumber":55,"author":{"gitId":"Andrewzhang217"},"content":"    public ITask get(int index) {"},{"lineNumber":56,"author":{"gitId":"Andrewzhang217"},"content":"        return taskList.get(index);"},{"lineNumber":57,"author":{"gitId":"Andrewzhang217"},"content":"    }"},{"lineNumber":58,"author":{"gitId":"Andrewzhang217"},"content":""},{"lineNumber":59,"author":{"gitId":"Andrewzhang217"},"content":"    /**"},{"lineNumber":60,"author":{"gitId":"Andrewzhang217"},"content":"     * Returns the size of the task list."},{"lineNumber":61,"author":{"gitId":"Andrewzhang217"},"content":"     *"},{"lineNumber":62,"author":{"gitId":"Andrewzhang217"},"content":"     * @return Size of the task list."},{"lineNumber":63,"author":{"gitId":"Andrewzhang217"},"content":"     */"},{"lineNumber":64,"author":{"gitId":"Andrewzhang217"},"content":"    public int size() {"},{"lineNumber":65,"author":{"gitId":"Andrewzhang217"},"content":"        return taskList.size();"},{"lineNumber":66,"author":{"gitId":"Andrewzhang217"},"content":"    }"},{"lineNumber":67,"author":{"gitId":"Andrewzhang217"},"content":""},{"lineNumber":68,"author":{"gitId":"Andrewzhang217"},"content":"    /**"},{"lineNumber":69,"author":{"gitId":"Andrewzhang217"},"content":"     * Returns the list stored in the task list."},{"lineNumber":70,"author":{"gitId":"Andrewzhang217"},"content":"     *"},{"lineNumber":71,"author":{"gitId":"Andrewzhang217"},"content":"     * @return List stored in the task list."},{"lineNumber":72,"author":{"gitId":"Andrewzhang217"},"content":"     */"},{"lineNumber":73,"author":{"gitId":"Andrewzhang217"},"content":"    public List\u003cITask\u003e getList() {"},{"lineNumber":74,"author":{"gitId":"Andrewzhang217"},"content":"        return taskList;"},{"lineNumber":75,"author":{"gitId":"Andrewzhang217"},"content":"    }"},{"lineNumber":76,"author":{"gitId":"Andrewzhang217"},"content":"}"}],"authorContributionMap":{"Andrewzhang217":76}},{"path":"src/main/java/data/task/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Andrewzhang217"},"content":"package data.task;"},{"lineNumber":2,"author":{"gitId":"Andrewzhang217"},"content":""},{"lineNumber":3,"author":{"gitId":"Andrewzhang217"},"content":"public class Todo extends Task {"},{"lineNumber":4,"author":{"gitId":"Andrewzhang217"},"content":""},{"lineNumber":5,"author":{"gitId":"Andrewzhang217"},"content":""},{"lineNumber":6,"author":{"gitId":"Andrewzhang217"},"content":"    public Todo(String description, boolean isDone) {"},{"lineNumber":7,"author":{"gitId":"Andrewzhang217"},"content":"        super(description, isDone);"},{"lineNumber":8,"author":{"gitId":"Andrewzhang217"},"content":""},{"lineNumber":9,"author":{"gitId":"Andrewzhang217"},"content":"    }"},{"lineNumber":10,"author":{"gitId":"Andrewzhang217"},"content":""},{"lineNumber":11,"author":{"gitId":"Andrewzhang217"},"content":"    public static Todo getTodo(String description) {"},{"lineNumber":12,"author":{"gitId":"Andrewzhang217"},"content":"        return new Todo(description, false);"},{"lineNumber":13,"author":{"gitId":"Andrewzhang217"},"content":"    }"},{"lineNumber":14,"author":{"gitId":"Andrewzhang217"},"content":""},{"lineNumber":15,"author":{"gitId":"Andrewzhang217"},"content":"    @Override"},{"lineNumber":16,"author":{"gitId":"Andrewzhang217"},"content":"    public String getContentString(){"},{"lineNumber":17,"author":{"gitId":"Andrewzhang217"},"content":"        return String.format(\"T|%d|%S|%S\",isDone ? 1 : 0, this.description);"},{"lineNumber":18,"author":{"gitId":"Andrewzhang217"},"content":""},{"lineNumber":19,"author":{"gitId":"Andrewzhang217"},"content":"    }"},{"lineNumber":20,"author":{"gitId":"Andrewzhang217"},"content":""},{"lineNumber":21,"author":{"gitId":"Andrewzhang217"},"content":"    @Override"},{"lineNumber":22,"author":{"gitId":"Andrewzhang217"},"content":"    public Task markDone(){"},{"lineNumber":23,"author":{"gitId":"Andrewzhang217"},"content":"        return new Todo(description,true);"},{"lineNumber":24,"author":{"gitId":"Andrewzhang217"},"content":"    }"},{"lineNumber":25,"author":{"gitId":"Andrewzhang217"},"content":""},{"lineNumber":26,"author":{"gitId":"Andrewzhang217"},"content":"    @Override"},{"lineNumber":27,"author":{"gitId":"Andrewzhang217"},"content":"    public String toString() {"},{"lineNumber":28,"author":{"gitId":"Andrewzhang217"},"content":"        return \"[T]\" + super.toString();"},{"lineNumber":29,"author":{"gitId":"Andrewzhang217"},"content":"    }"},{"lineNumber":30,"author":{"gitId":"Andrewzhang217"},"content":"}"}],"authorContributionMap":{"Andrewzhang217":30}},{"path":"src/main/java/parser/CommandParser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Andrewzhang217"},"content":"package parser;"},{"lineNumber":2,"author":{"gitId":"Andrewzhang217"},"content":""},{"lineNumber":3,"author":{"gitId":"Andrewzhang217"},"content":"public class CommandParser {"},{"lineNumber":4,"author":{"gitId":"Andrewzhang217"},"content":""},{"lineNumber":5,"author":{"gitId":"Andrewzhang217"},"content":"}"}],"authorContributionMap":{"Andrewzhang217":5}},{"path":"src/main/java/parser/TimeParser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Andrewzhang217"},"content":"package parser;"},{"lineNumber":2,"author":{"gitId":"Andrewzhang217"},"content":""},{"lineNumber":3,"author":{"gitId":"Andrewzhang217"},"content":"import java.time.LocalDate;"},{"lineNumber":4,"author":{"gitId":"Andrewzhang217"},"content":"import java.time.LocalDateTime;"},{"lineNumber":5,"author":{"gitId":"Andrewzhang217"},"content":"import java.util.ArrayList;"},{"lineNumber":6,"author":{"gitId":"Andrewzhang217"},"content":"import java.util.List;"},{"lineNumber":7,"author":{"gitId":"Andrewzhang217"},"content":"import java.util.regex.Matcher;"},{"lineNumber":8,"author":{"gitId":"Andrewzhang217"},"content":"import java.util.regex.Pattern;"},{"lineNumber":9,"author":{"gitId":"Andrewzhang217"},"content":""},{"lineNumber":10,"author":{"gitId":"Andrewzhang217"},"content":"public class TimeParser {"},{"lineNumber":11,"author":{"gitId":"Andrewzhang217"},"content":"    // Accept YYYYMMDD, DDMMYYYY"},{"lineNumber":12,"author":{"gitId":"Andrewzhang217"},"content":"    private static final List\u003cPattern\u003e DATE_PATTERN_LIST \u003d new ArrayList\u003c\u003e("},{"lineNumber":13,"author":{"gitId":"Andrewzhang217"},"content":"            List.of(Pattern.compile(\"(?\u003cyear\u003e\\\\d{4})[\\\\s\\\\-.]?(?\u003cmonth\u003e\\\\d{1,2})[\\\\s\\\\-.]?(?\u003cday\u003e\\\\d{1,2})\"),"},{"lineNumber":14,"author":{"gitId":"Andrewzhang217"},"content":"                    Pattern.compile(\"(?\u003cday\u003e\\\\d{1,2})[\\\\s\\\\-.]?(?\u003cmonth\u003e\\\\d{1,2})[\\\\s\\\\-.]?(?\u003cyear\u003e\\\\d{4})\")));"},{"lineNumber":15,"author":{"gitId":"Andrewzhang217"},"content":"    // Accept YYYY MM DD HHMM, DD MM YYYY HHMM"},{"lineNumber":16,"author":{"gitId":"Andrewzhang217"},"content":"    private static final List\u003cPattern\u003e DATETIME_PATTERN_LIST \u003d new ArrayList\u003c\u003e("},{"lineNumber":17,"author":{"gitId":"Andrewzhang217"},"content":"            List.of(Pattern.compile(\"(?\u003cyear\u003e\\\\d{4})[\\\\s\\\\-.](?\u003cmonth\u003e\\\\d{1,2})[\\\\s\\\\-.](?\u003cday\u003e\\\\d{1,2})\""},{"lineNumber":18,"author":{"gitId":"Andrewzhang217"},"content":"                            + \"[\\\\s\\\\-.T](?\u003chour\u003e\\\\d{1,2})[\\\\s\\\\-.:]?(?\u003cminute\u003e\\\\d{2})\"),"},{"lineNumber":19,"author":{"gitId":"Andrewzhang217"},"content":"                    Pattern.compile(\"(?\u003cday\u003e\\\\d{1,2})[\\\\s\\\\-.](?\u003cmonth\u003e\\\\d{1,2})[\\\\s\\\\-.](?\u003cyear\u003e\\\\d{4})\""},{"lineNumber":20,"author":{"gitId":"Andrewzhang217"},"content":"                            + \"[\\\\s\\\\-.T](?\u003chour\u003e\\\\d{1,2})[\\\\s\\\\-.:]?(?\u003cminute\u003e\\\\d{2})\")));"},{"lineNumber":21,"author":{"gitId":"Andrewzhang217"},"content":""},{"lineNumber":22,"author":{"gitId":"Andrewzhang217"},"content":"    public static LocalDate parseDate(String string) {"},{"lineNumber":23,"author":{"gitId":"Andrewzhang217"},"content":"        if (!isDate(string)) {"},{"lineNumber":24,"author":{"gitId":"Andrewzhang217"},"content":"            throw new RuntimeException(string +\" does not have a date time!\");"},{"lineNumber":25,"author":{"gitId":"Andrewzhang217"},"content":"        }"},{"lineNumber":26,"author":{"gitId":"Andrewzhang217"},"content":""},{"lineNumber":27,"author":{"gitId":"Andrewzhang217"},"content":"        Pattern pattern \u003d DATE_PATTERN_LIST"},{"lineNumber":28,"author":{"gitId":"Andrewzhang217"},"content":"                .stream()"},{"lineNumber":29,"author":{"gitId":"Andrewzhang217"},"content":"                .filter(x -\u003e x.matcher(string).find())"},{"lineNumber":30,"author":{"gitId":"Andrewzhang217"},"content":"                .findFirst()"},{"lineNumber":31,"author":{"gitId":"Andrewzhang217"},"content":"                .orElseThrow();"},{"lineNumber":32,"author":{"gitId":"Andrewzhang217"},"content":"        Matcher matcher \u003d pattern.matcher(string);"},{"lineNumber":33,"author":{"gitId":"Andrewzhang217"},"content":"        if (!matcher.matches()) {"},{"lineNumber":34,"author":{"gitId":"Andrewzhang217"},"content":"            throw new RuntimeException(string +\" failed to match regex!\");"},{"lineNumber":35,"author":{"gitId":"Andrewzhang217"},"content":"        }"},{"lineNumber":36,"author":{"gitId":"Andrewzhang217"},"content":"        return LocalDate.of(Integer.parseInt(matcher.group(\"year\")),"},{"lineNumber":37,"author":{"gitId":"Andrewzhang217"},"content":"                Integer.parseInt(matcher.group(\"month\")),"},{"lineNumber":38,"author":{"gitId":"Andrewzhang217"},"content":"                Integer.parseInt(matcher.group(\"day\")));"},{"lineNumber":39,"author":{"gitId":"Andrewzhang217"},"content":"    }"},{"lineNumber":40,"author":{"gitId":"Andrewzhang217"},"content":""},{"lineNumber":41,"author":{"gitId":"Andrewzhang217"},"content":""},{"lineNumber":42,"author":{"gitId":"Andrewzhang217"},"content":"    public static LocalDateTime parseDateTime(String string) {"},{"lineNumber":43,"author":{"gitId":"Andrewzhang217"},"content":"        if (!isDateTime(string)) {"},{"lineNumber":44,"author":{"gitId":"Andrewzhang217"},"content":"            throw new RuntimeException(string +\" does not have a date time!\");"},{"lineNumber":45,"author":{"gitId":"Andrewzhang217"},"content":"        }"},{"lineNumber":46,"author":{"gitId":"Andrewzhang217"},"content":""},{"lineNumber":47,"author":{"gitId":"Andrewzhang217"},"content":"        Pattern pattern \u003d DATETIME_PATTERN_LIST"},{"lineNumber":48,"author":{"gitId":"Andrewzhang217"},"content":"                .stream()"},{"lineNumber":49,"author":{"gitId":"Andrewzhang217"},"content":"                .filter(x -\u003e x.matcher(string).find())"},{"lineNumber":50,"author":{"gitId":"Andrewzhang217"},"content":"                .findFirst()"},{"lineNumber":51,"author":{"gitId":"Andrewzhang217"},"content":"                .orElseThrow();"},{"lineNumber":52,"author":{"gitId":"Andrewzhang217"},"content":"        Matcher matcher \u003d pattern.matcher(string);"},{"lineNumber":53,"author":{"gitId":"Andrewzhang217"},"content":"        if (!matcher.matches()) {"},{"lineNumber":54,"author":{"gitId":"Andrewzhang217"},"content":"            throw new RuntimeException(string +\" failed to match regex!\");"},{"lineNumber":55,"author":{"gitId":"Andrewzhang217"},"content":"        }"},{"lineNumber":56,"author":{"gitId":"Andrewzhang217"},"content":"        return LocalDateTime.of(Integer.parseInt(matcher.group(\"year\")),"},{"lineNumber":57,"author":{"gitId":"Andrewzhang217"},"content":"                Integer.parseInt(matcher.group(\"month\")),"},{"lineNumber":58,"author":{"gitId":"Andrewzhang217"},"content":"                Integer.parseInt(matcher.group(\"day\")),"},{"lineNumber":59,"author":{"gitId":"Andrewzhang217"},"content":"                Integer.parseInt(matcher.group(\"hour\")),"},{"lineNumber":60,"author":{"gitId":"Andrewzhang217"},"content":"                Integer.parseInt(matcher.group(\"minute\")));"},{"lineNumber":61,"author":{"gitId":"Andrewzhang217"},"content":"    }"},{"lineNumber":62,"author":{"gitId":"Andrewzhang217"},"content":""},{"lineNumber":63,"author":{"gitId":"Andrewzhang217"},"content":""},{"lineNumber":64,"author":{"gitId":"Andrewzhang217"},"content":"    public static boolean isDateTime(String string) {"},{"lineNumber":65,"author":{"gitId":"Andrewzhang217"},"content":"        return DATETIME_PATTERN_LIST.stream().anyMatch(x -\u003e x.matcher(string).matches());"},{"lineNumber":66,"author":{"gitId":"Andrewzhang217"},"content":"    }"},{"lineNumber":67,"author":{"gitId":"Andrewzhang217"},"content":""},{"lineNumber":68,"author":{"gitId":"Andrewzhang217"},"content":""},{"lineNumber":69,"author":{"gitId":"Andrewzhang217"},"content":"    public static boolean isDate(String string) {"},{"lineNumber":70,"author":{"gitId":"Andrewzhang217"},"content":"        return DATE_PATTERN_LIST.stream().anyMatch(x -\u003e x.matcher(string).matches());"},{"lineNumber":71,"author":{"gitId":"Andrewzhang217"},"content":"    }"},{"lineNumber":72,"author":{"gitId":"Andrewzhang217"},"content":"}"}],"authorContributionMap":{"Andrewzhang217":72}},{"path":"src/main/java/storage/TaskDecoder.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Andrewzhang217"},"content":"package storage;"},{"lineNumber":2,"author":{"gitId":"Andrewzhang217"},"content":""},{"lineNumber":3,"author":{"gitId":"Andrewzhang217"},"content":"import data.task.Deadline;"},{"lineNumber":4,"author":{"gitId":"Andrewzhang217"},"content":"import data.task.Event;"},{"lineNumber":5,"author":{"gitId":"Andrewzhang217"},"content":"import data.task.ITask;"},{"lineNumber":6,"author":{"gitId":"Andrewzhang217"},"content":"import data.task.Todo;"},{"lineNumber":7,"author":{"gitId":"Andrewzhang217"},"content":""},{"lineNumber":8,"author":{"gitId":"Andrewzhang217"},"content":"import java.util.ArrayList;"},{"lineNumber":9,"author":{"gitId":"Andrewzhang217"},"content":"import java.util.List;"},{"lineNumber":10,"author":{"gitId":"Andrewzhang217"},"content":""},{"lineNumber":11,"author":{"gitId":"Andrewzhang217"},"content":"public class TaskDecoder {"},{"lineNumber":12,"author":{"gitId":"Andrewzhang217"},"content":""},{"lineNumber":13,"author":{"gitId":"Andrewzhang217"},"content":"    public static List\u003cITask\u003e decodeTask(List\u003cString\u003e encodedTasks){"},{"lineNumber":14,"author":{"gitId":"Andrewzhang217"},"content":"        List\u003cITask\u003e decodedTasks \u003d new ArrayList\u003c\u003e();"},{"lineNumber":15,"author":{"gitId":"Andrewzhang217"},"content":"        encodedTasks.forEach(x -\u003e decodedTasks.add(decode(x)));"},{"lineNumber":16,"author":{"gitId":"Andrewzhang217"},"content":"        return decodedTasks;"},{"lineNumber":17,"author":{"gitId":"Andrewzhang217"},"content":"    }"},{"lineNumber":18,"author":{"gitId":"Andrewzhang217"},"content":""},{"lineNumber":19,"author":{"gitId":"Andrewzhang217"},"content":"    static ITask decode(String encodedTask){"},{"lineNumber":20,"author":{"gitId":"Andrewzhang217"},"content":"        String[] list \u003d encodedTask.split(\"\\\\|\");"},{"lineNumber":21,"author":{"gitId":"Andrewzhang217"},"content":"        ITask task;"},{"lineNumber":22,"author":{"gitId":"Andrewzhang217"},"content":"        switch (list[0]) {"},{"lineNumber":23,"author":{"gitId":"Andrewzhang217"},"content":"            case \"T\":"},{"lineNumber":24,"author":{"gitId":"Andrewzhang217"},"content":"                task \u003d Todo.getTodo(list[2]);"},{"lineNumber":25,"author":{"gitId":"Andrewzhang217"},"content":"                break;"},{"lineNumber":26,"author":{"gitId":"Andrewzhang217"},"content":"            case \"D\":"},{"lineNumber":27,"author":{"gitId":"Andrewzhang217"},"content":"                task \u003d Deadline.getDeadline(list[2], list[3]);"},{"lineNumber":28,"author":{"gitId":"Andrewzhang217"},"content":"                break;"},{"lineNumber":29,"author":{"gitId":"Andrewzhang217"},"content":"            case \"E\":"},{"lineNumber":30,"author":{"gitId":"Andrewzhang217"},"content":"                task \u003d Event.getEvent(list[2], list[3]);"},{"lineNumber":31,"author":{"gitId":"Andrewzhang217"},"content":"                break;"},{"lineNumber":32,"author":{"gitId":"Andrewzhang217"},"content":"            default:"},{"lineNumber":33,"author":{"gitId":"Andrewzhang217"},"content":"                throw new IllegalArgumentException(\"Unable to decode!\");"},{"lineNumber":34,"author":{"gitId":"Andrewzhang217"},"content":"        }"},{"lineNumber":35,"author":{"gitId":"Andrewzhang217"},"content":""},{"lineNumber":36,"author":{"gitId":"Andrewzhang217"},"content":"        if (list[1].equals(\"1\")) {"},{"lineNumber":37,"author":{"gitId":"Andrewzhang217"},"content":"            task \u003d task.markDone();"},{"lineNumber":38,"author":{"gitId":"Andrewzhang217"},"content":"        }"},{"lineNumber":39,"author":{"gitId":"Andrewzhang217"},"content":""},{"lineNumber":40,"author":{"gitId":"Andrewzhang217"},"content":"        return task;"},{"lineNumber":41,"author":{"gitId":"Andrewzhang217"},"content":"    }"},{"lineNumber":42,"author":{"gitId":"Andrewzhang217"},"content":""},{"lineNumber":43,"author":{"gitId":"Andrewzhang217"},"content":""},{"lineNumber":44,"author":{"gitId":"Andrewzhang217"},"content":"}"}],"authorContributionMap":{"Andrewzhang217":44}},{"path":"src/main/java/storage/TaskEncoder.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Andrewzhang217"},"content":"package storage;"},{"lineNumber":2,"author":{"gitId":"Andrewzhang217"},"content":""},{"lineNumber":3,"author":{"gitId":"Andrewzhang217"},"content":"import data.task.ITask;"},{"lineNumber":4,"author":{"gitId":"Andrewzhang217"},"content":""},{"lineNumber":5,"author":{"gitId":"Andrewzhang217"},"content":"import java.util.List;"},{"lineNumber":6,"author":{"gitId":"Andrewzhang217"},"content":"import java.util.ArrayList;"},{"lineNumber":7,"author":{"gitId":"Andrewzhang217"},"content":""},{"lineNumber":8,"author":{"gitId":"Andrewzhang217"},"content":"public class TaskEncoder {"},{"lineNumber":9,"author":{"gitId":"Andrewzhang217"},"content":""},{"lineNumber":10,"author":{"gitId":"Andrewzhang217"},"content":"    static StringBuilder encodedTask \u003d new StringBuilder();"},{"lineNumber":11,"author":{"gitId":"Andrewzhang217"},"content":""},{"lineNumber":12,"author":{"gitId":"Andrewzhang217"},"content":"    public static List\u003cString\u003e encodeTask(List\u003cITask\u003e taskList){"},{"lineNumber":13,"author":{"gitId":"Andrewzhang217"},"content":"        List\u003cString\u003e encodedTasks \u003d new ArrayList\u003c\u003e();"},{"lineNumber":14,"author":{"gitId":"Andrewzhang217"},"content":"        taskList.forEach(x -\u003e encodedTasks.add(x.getContentString()));"},{"lineNumber":15,"author":{"gitId":"Andrewzhang217"},"content":"        return encodedTasks;"},{"lineNumber":16,"author":{"gitId":"Andrewzhang217"},"content":"    }"},{"lineNumber":17,"author":{"gitId":"Andrewzhang217"},"content":""},{"lineNumber":18,"author":{"gitId":"Andrewzhang217"},"content":""},{"lineNumber":19,"author":{"gitId":"Andrewzhang217"},"content":"}"}],"authorContributionMap":{"Andrewzhang217":19}},{"path":"src/main/java/storage/TaskManager.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Andrewzhang217"},"content":"package storage;"},{"lineNumber":2,"author":{"gitId":"Andrewzhang217"},"content":""},{"lineNumber":3,"author":{"gitId":"Andrewzhang217"},"content":"import data.task.ITask;"},{"lineNumber":4,"author":{"gitId":"Andrewzhang217"},"content":""},{"lineNumber":5,"author":{"gitId":"Andrewzhang217"},"content":"import java.io.File;"},{"lineNumber":6,"author":{"gitId":"Andrewzhang217"},"content":"import java.io.FileNotFoundException;"},{"lineNumber":7,"author":{"gitId":"Andrewzhang217"},"content":"import java.io.FileWriter;"},{"lineNumber":8,"author":{"gitId":"Andrewzhang217"},"content":"import java.io.IOException;"},{"lineNumber":9,"author":{"gitId":"Andrewzhang217"},"content":"import java.nio.file.Path;"},{"lineNumber":10,"author":{"gitId":"Andrewzhang217"},"content":"import java.nio.file.Files;"},{"lineNumber":11,"author":{"gitId":"Andrewzhang217"},"content":"import java.util.ArrayList;"},{"lineNumber":12,"author":{"gitId":"Andrewzhang217"},"content":"import java.util.List;"},{"lineNumber":13,"author":{"gitId":"Andrewzhang217"},"content":""},{"lineNumber":14,"author":{"gitId":"Andrewzhang217"},"content":"import java.util.Scanner;"},{"lineNumber":15,"author":{"gitId":"Andrewzhang217"},"content":""},{"lineNumber":16,"author":{"gitId":"Andrewzhang217"},"content":"public class TaskManager {"},{"lineNumber":17,"author":{"gitId":"Andrewzhang217"},"content":"    private final Path filePath;"},{"lineNumber":18,"author":{"gitId":"Andrewzhang217"},"content":""},{"lineNumber":19,"author":{"gitId":"Andrewzhang217"},"content":"    public TaskManager(Path filePath){"},{"lineNumber":20,"author":{"gitId":"Andrewzhang217"},"content":"        this.filePath \u003d filePath;"},{"lineNumber":21,"author":{"gitId":"Andrewzhang217"},"content":"    }"},{"lineNumber":22,"author":{"gitId":"Andrewzhang217"},"content":""},{"lineNumber":23,"author":{"gitId":"Andrewzhang217"},"content":"    public static TaskManager getTaskManager(String filePath) {"},{"lineNumber":24,"author":{"gitId":"Andrewzhang217"},"content":"        TaskManager tm \u003d new TaskManager(Path.of(filePath));"},{"lineNumber":25,"author":{"gitId":"Andrewzhang217"},"content":"        try {"},{"lineNumber":26,"author":{"gitId":"Andrewzhang217"},"content":"            tm.createPath();"},{"lineNumber":27,"author":{"gitId":"Andrewzhang217"},"content":"            return tm;"},{"lineNumber":28,"author":{"gitId":"Andrewzhang217"},"content":"        } catch (IOException e) {"},{"lineNumber":29,"author":{"gitId":"Andrewzhang217"},"content":"            System.out.println(\"Error creating file structure!\");"},{"lineNumber":30,"author":{"gitId":"Andrewzhang217"},"content":"        }"},{"lineNumber":31,"author":{"gitId":"Andrewzhang217"},"content":"        System.exit(1);"},{"lineNumber":32,"author":{"gitId":"Andrewzhang217"},"content":"        return null;"},{"lineNumber":33,"author":{"gitId":"Andrewzhang217"},"content":"    }"},{"lineNumber":34,"author":{"gitId":"Andrewzhang217"},"content":""},{"lineNumber":35,"author":{"gitId":"Andrewzhang217"},"content":"    private void writeFile(String fileContent) throws IOException {"},{"lineNumber":36,"author":{"gitId":"Andrewzhang217"},"content":"        FileWriter fileWriter \u003d new FileWriter(String.valueOf(this.filePath));"},{"lineNumber":37,"author":{"gitId":"Andrewzhang217"},"content":"        fileWriter.write(fileContent);"},{"lineNumber":38,"author":{"gitId":"Andrewzhang217"},"content":"        fileWriter.close();"},{"lineNumber":39,"author":{"gitId":"Andrewzhang217"},"content":"    }"},{"lineNumber":40,"author":{"gitId":"Andrewzhang217"},"content":""},{"lineNumber":41,"author":{"gitId":"Andrewzhang217"},"content":"    private List\u003cString\u003e readFile() throws FileNotFoundException {"},{"lineNumber":42,"author":{"gitId":"Andrewzhang217"},"content":"        File f \u003d new File(String.valueOf(filePath));"},{"lineNumber":43,"author":{"gitId":"Andrewzhang217"},"content":"        List\u003cString\u003e taskStringList \u003d new ArrayList\u003c\u003e();"},{"lineNumber":44,"author":{"gitId":"Andrewzhang217"},"content":"        Scanner s \u003d new Scanner(f);"},{"lineNumber":45,"author":{"gitId":"Andrewzhang217"},"content":"        while (s.hasNext()) {"},{"lineNumber":46,"author":{"gitId":"Andrewzhang217"},"content":"            taskStringList.add(s.nextLine());"},{"lineNumber":47,"author":{"gitId":"Andrewzhang217"},"content":"        }"},{"lineNumber":48,"author":{"gitId":"Andrewzhang217"},"content":"        return taskStringList;"},{"lineNumber":49,"author":{"gitId":"Andrewzhang217"},"content":"    }"},{"lineNumber":50,"author":{"gitId":"Andrewzhang217"},"content":""},{"lineNumber":51,"author":{"gitId":"Andrewzhang217"},"content":"    public List\u003cITask\u003e read() {"},{"lineNumber":52,"author":{"gitId":"Andrewzhang217"},"content":"        try {"},{"lineNumber":53,"author":{"gitId":"Andrewzhang217"},"content":"            return TaskDecoder.decodeTask(readFile());"},{"lineNumber":54,"author":{"gitId":"Andrewzhang217"},"content":"        } catch (FileNotFoundException e) {"},{"lineNumber":55,"author":{"gitId":"Andrewzhang217"},"content":"            System.out.println(\"Error reading from file!\");"},{"lineNumber":56,"author":{"gitId":"Andrewzhang217"},"content":"            e.printStackTrace();"},{"lineNumber":57,"author":{"gitId":"Andrewzhang217"},"content":"        }"},{"lineNumber":58,"author":{"gitId":"Andrewzhang217"},"content":"        throw new RuntimeException(\"Unable to read task list from disk, exiting...\");"},{"lineNumber":59,"author":{"gitId":"Andrewzhang217"},"content":"    }"},{"lineNumber":60,"author":{"gitId":"Andrewzhang217"},"content":""},{"lineNumber":61,"author":{"gitId":"Andrewzhang217"},"content":"    public void save(List\u003c? extends ITask\u003e list) {"},{"lineNumber":62,"author":{"gitId":"Andrewzhang217"},"content":"        StringBuilder sb \u003d new StringBuilder();"},{"lineNumber":63,"author":{"gitId":"Andrewzhang217"},"content":""},{"lineNumber":64,"author":{"gitId":"Andrewzhang217"},"content":"        list.forEach(x -\u003e sb.append(x).append(\"\\n\"));"},{"lineNumber":65,"author":{"gitId":"Andrewzhang217"},"content":"        try {"},{"lineNumber":66,"author":{"gitId":"Andrewzhang217"},"content":"            writeFile(sb.toString());"},{"lineNumber":67,"author":{"gitId":"Andrewzhang217"},"content":"        } catch (IOException e) {"},{"lineNumber":68,"author":{"gitId":"Andrewzhang217"},"content":"            System.out.println(\"Unable to save the task!\");"},{"lineNumber":69,"author":{"gitId":"Andrewzhang217"},"content":"            e.printStackTrace();"},{"lineNumber":70,"author":{"gitId":"Andrewzhang217"},"content":"        }"},{"lineNumber":71,"author":{"gitId":"Andrewzhang217"},"content":""},{"lineNumber":72,"author":{"gitId":"Andrewzhang217"},"content":"    }"},{"lineNumber":73,"author":{"gitId":"Andrewzhang217"},"content":""},{"lineNumber":74,"author":{"gitId":"Andrewzhang217"},"content":"    public void createPath() throws IOException{"},{"lineNumber":75,"author":{"gitId":"Andrewzhang217"},"content":"            if(!Files.exists(filePath.getParent())){"},{"lineNumber":76,"author":{"gitId":"Andrewzhang217"},"content":"                Files.createDirectory(filePath.getParent()) ;"},{"lineNumber":77,"author":{"gitId":"Andrewzhang217"},"content":"                Files.createFile(filePath);"},{"lineNumber":78,"author":{"gitId":"Andrewzhang217"},"content":"            } else if (!Files.exists(filePath)){"},{"lineNumber":79,"author":{"gitId":"Andrewzhang217"},"content":"                Files.createFile(filePath);"},{"lineNumber":80,"author":{"gitId":"Andrewzhang217"},"content":"            }"},{"lineNumber":81,"author":{"gitId":"Andrewzhang217"},"content":"    }"},{"lineNumber":82,"author":{"gitId":"Andrewzhang217"},"content":""},{"lineNumber":83,"author":{"gitId":"Andrewzhang217"},"content":""},{"lineNumber":84,"author":{"gitId":"Andrewzhang217"},"content":""},{"lineNumber":85,"author":{"gitId":"Andrewzhang217"},"content":"}"}],"authorContributionMap":{"Andrewzhang217":85}},{"path":"src/main/java/ui/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Andrewzhang217"},"content":"package ui;"},{"lineNumber":2,"author":{"gitId":"Andrewzhang217"},"content":""},{"lineNumber":3,"author":{"gitId":"Andrewzhang217"},"content":"import common.Message;"},{"lineNumber":4,"author":{"gitId":"Andrewzhang217"},"content":"import data.exception.DukeEmptyCommandException;"},{"lineNumber":5,"author":{"gitId":"Andrewzhang217"},"content":"import data.task.Task;"},{"lineNumber":6,"author":{"gitId":"Andrewzhang217"},"content":"import data.task.TaskList;"},{"lineNumber":7,"author":{"gitId":"Andrewzhang217"},"content":""},{"lineNumber":8,"author":{"gitId":"Andrewzhang217"},"content":"import java.util.ArrayList;"},{"lineNumber":9,"author":{"gitId":"Andrewzhang217"},"content":"import java.util.List;"},{"lineNumber":10,"author":{"gitId":"Andrewzhang217"},"content":""},{"lineNumber":11,"author":{"gitId":"Andrewzhang217"},"content":"public class Ui {"},{"lineNumber":12,"author":{"gitId":"Andrewzhang217"},"content":""},{"lineNumber":13,"author":{"gitId":"Andrewzhang217"},"content":"    public static String greeting(){"},{"lineNumber":14,"author":{"gitId":"Andrewzhang217"},"content":"        System.out.println(Message.GREETING.toString());"},{"lineNumber":15,"author":{"gitId":"Andrewzhang217"},"content":"        return Message.GREETING.toString();"},{"lineNumber":16,"author":{"gitId":"Andrewzhang217"},"content":"    }"},{"lineNumber":17,"author":{"gitId":"Andrewzhang217"},"content":""},{"lineNumber":18,"author":{"gitId":"Andrewzhang217"},"content":"    public static String bye(){"},{"lineNumber":19,"author":{"gitId":"Andrewzhang217"},"content":"        System.out.println(Message.BYE.toString());"},{"lineNumber":20,"author":{"gitId":"Andrewzhang217"},"content":"        return Message.BYE.toString();"},{"lineNumber":21,"author":{"gitId":"Andrewzhang217"},"content":"    }"},{"lineNumber":22,"author":{"gitId":"Andrewzhang217"},"content":""},{"lineNumber":23,"author":{"gitId":"Andrewzhang217"},"content":"    public static String display(TaskList taskList){"},{"lineNumber":24,"author":{"gitId":"Andrewzhang217"},"content":"        if (taskList.size() \u003d\u003d 0) {"},{"lineNumber":25,"author":{"gitId":"Andrewzhang217"},"content":"            System.out.print(Message.ERR_NO_TASK_IN_LIST.toString());"},{"lineNumber":26,"author":{"gitId":"Andrewzhang217"},"content":"            return Message.ERR_NO_TASK_IN_LIST.toString();"},{"lineNumber":27,"author":{"gitId":"Andrewzhang217"},"content":"        } else {"},{"lineNumber":28,"author":{"gitId":"Andrewzhang217"},"content":"            StringBuilder sb \u003d new StringBuilder(Message.LIST.toString());"},{"lineNumber":29,"author":{"gitId":"Andrewzhang217"},"content":"            for (int i \u003d 0; i \u003c taskList.size(); i++) {"},{"lineNumber":30,"author":{"gitId":"Andrewzhang217"},"content":"                sb.append(\" \").append(i + 1).append(\". \")"},{"lineNumber":31,"author":{"gitId":"Andrewzhang217"},"content":"                        .append(taskList.get(i).toString()).append(\"\\n\");"},{"lineNumber":32,"author":{"gitId":"Andrewzhang217"},"content":"            }"},{"lineNumber":33,"author":{"gitId":"Andrewzhang217"},"content":"            System.out.print(sb.toString());"},{"lineNumber":34,"author":{"gitId":"Andrewzhang217"},"content":"            return sb.toString();"},{"lineNumber":35,"author":{"gitId":"Andrewzhang217"},"content":"        }"},{"lineNumber":36,"author":{"gitId":"Andrewzhang217"},"content":"    }"},{"lineNumber":37,"author":{"gitId":"Andrewzhang217"},"content":""},{"lineNumber":38,"author":{"gitId":"Andrewzhang217"},"content":"    public static String display(TaskList taskList, int[] indexArr){"},{"lineNumber":39,"author":{"gitId":"Andrewzhang217"},"content":"        if (indexArr.length \u003d\u003d 0) {"},{"lineNumber":40,"author":{"gitId":"Andrewzhang217"},"content":"            System.out.print(Message.ERR_NO_MATCHING_TASK.toString());"},{"lineNumber":41,"author":{"gitId":"Andrewzhang217"},"content":"            return Message.ERR_NO_MATCHING_TASK.toString();"},{"lineNumber":42,"author":{"gitId":"Andrewzhang217"},"content":"        } else {"},{"lineNumber":43,"author":{"gitId":"Andrewzhang217"},"content":"            StringBuilder sb \u003d new StringBuilder("},{"lineNumber":44,"author":{"gitId":"Andrewzhang217"},"content":"                    \"Here are the task on you are looking for:\\n\");"},{"lineNumber":45,"author":{"gitId":"Andrewzhang217"},"content":"            for (int index : indexArr) {"},{"lineNumber":46,"author":{"gitId":"Andrewzhang217"},"content":"                sb.append(\" \").append(index + 1).append(\". \")"},{"lineNumber":47,"author":{"gitId":"Andrewzhang217"},"content":"                        .append(taskList.get(index).toString()).append(\"\\n\");"},{"lineNumber":48,"author":{"gitId":"Andrewzhang217"},"content":"            }"},{"lineNumber":49,"author":{"gitId":"Andrewzhang217"},"content":"            System.out.print(sb.toString());"},{"lineNumber":50,"author":{"gitId":"Andrewzhang217"},"content":"            return sb.toString();"},{"lineNumber":51,"author":{"gitId":"Andrewzhang217"},"content":"        }"},{"lineNumber":52,"author":{"gitId":"Andrewzhang217"},"content":"    }"},{"lineNumber":53,"author":{"gitId":"Andrewzhang217"},"content":""},{"lineNumber":54,"author":{"gitId":"Andrewzhang217"},"content":""},{"lineNumber":55,"author":{"gitId":"Andrewzhang217"},"content":"}"}],"authorContributionMap":{"Andrewzhang217":55}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"Andrewzhang217"},"content":"todo borrow book"},{"lineNumber":2,"author":{"gitId":"Andrewzhang217"},"content":"list"},{"lineNumber":3,"author":{"gitId":"Andrewzhang217"},"content":"deadline return book /by Sunday"},{"lineNumber":4,"author":{"gitId":"Andrewzhang217"},"content":"list"},{"lineNumber":5,"author":{"gitId":"Andrewzhang217"},"content":"event project meeting /at Mon 2-4pm"}],"authorContributionMap":{"Andrewzhang217":5}},{"path":"text-ui-test/runtest.sh","fileType":"sh","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"#!/usr/bin/env bash"},{"lineNumber":2,"author":{"gitId":"-"},"content":""},{"lineNumber":3,"author":{"gitId":"-"},"content":"# create bin directory if it doesn\u0027t exist"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if [ ! -d \"../bin\" ]"},{"lineNumber":5,"author":{"gitId":"-"},"content":"then"},{"lineNumber":6,"author":{"gitId":"-"},"content":"    mkdir ../bin"},{"lineNumber":7,"author":{"gitId":"-"},"content":"fi"},{"lineNumber":8,"author":{"gitId":"-"},"content":""},{"lineNumber":9,"author":{"gitId":"-"},"content":"# delete output from previous run"},{"lineNumber":10,"author":{"gitId":"Andrewzhang217"},"content":"if [ -e \"./output.TXT\" ]"},{"lineNumber":11,"author":{"gitId":"-"},"content":"then"},{"lineNumber":12,"author":{"gitId":"Andrewzhang217"},"content":"    rm output.txt"},{"lineNumber":13,"author":{"gitId":"-"},"content":"fi"},{"lineNumber":14,"author":{"gitId":"-"},"content":""},{"lineNumber":15,"author":{"gitId":"-"},"content":"# compile the code into the bin folder, terminates if error occurred"},{"lineNumber":16,"author":{"gitId":"-"},"content":"if ! javac -cp ../src/main/java -Xlint:none -d ../bin ../src/main/java/*.java"},{"lineNumber":17,"author":{"gitId":"-"},"content":"then"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    echo \"********** BUILD FAILURE **********\""},{"lineNumber":19,"author":{"gitId":"-"},"content":"    exit 1"},{"lineNumber":20,"author":{"gitId":"-"},"content":"fi"},{"lineNumber":21,"author":{"gitId":"-"},"content":""},{"lineNumber":22,"author":{"gitId":"-"},"content":"# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"},{"lineNumber":23,"author":{"gitId":"Andrewzhang217"},"content":"java -classpath ../bin Duke \u003c input.txt \u003e output.txt"},{"lineNumber":24,"author":{"gitId":"-"},"content":""},{"lineNumber":25,"author":{"gitId":"-"},"content":"# convert to UNIX format"},{"lineNumber":26,"author":{"gitId":"-"},"content":"cp EXPECTED.TXT EXPECTED-UNIX.TXT"},{"lineNumber":27,"author":{"gitId":"Andrewzhang217"},"content":"dos2unix output.txt OUTPUT-UNIX.TXT"},{"lineNumber":28,"author":{"gitId":"-"},"content":""},{"lineNumber":29,"author":{"gitId":"-"},"content":"# compare the output to the expected output"},{"lineNumber":30,"author":{"gitId":"Andrewzhang217"},"content":"diff output.txt EXPECTED-UNIX.TXT"},{"lineNumber":31,"author":{"gitId":"-"},"content":"if [ $? -eq 0 ]"},{"lineNumber":32,"author":{"gitId":"-"},"content":"then"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    echo \"Test result: PASSED\""},{"lineNumber":34,"author":{"gitId":"-"},"content":"    exit 0"},{"lineNumber":35,"author":{"gitId":"-"},"content":"else"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    echo \"Test result: FAILED\""},{"lineNumber":37,"author":{"gitId":"-"},"content":"    exit 1"},{"lineNumber":38,"author":{"gitId":"-"},"content":"fi"}],"authorContributionMap":{"-":33,"Andrewzhang217":5}}]
