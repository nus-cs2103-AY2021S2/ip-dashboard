[{"path":"README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"# Duke project template"},{"lineNumber":2,"author":{"gitId":"-"},"content":""},{"lineNumber":3,"author":{"gitId":"-"},"content":"This is a project template for a greenfield Java project. It\u0027s named after the Java mascot _Duke_. Given below are instructions on how to use it."},{"lineNumber":4,"author":{"gitId":"-"},"content":""},{"lineNumber":5,"author":{"gitId":"-"},"content":"## Setting up in Intellij"},{"lineNumber":6,"author":{"gitId":"-"},"content":""},{"lineNumber":7,"author":{"gitId":"-"},"content":"Prerequisites: JDK 11, update Intellij to the most recent version."},{"lineNumber":8,"author":{"gitId":"-"},"content":""},{"lineNumber":9,"author":{"gitId":"-"},"content":"1. Open Intellij (if you are not in the welcome screen, click `File` \u003e `Close Project` to close the existing project first)"},{"lineNumber":10,"author":{"gitId":"-"},"content":"1. Open the project into Intellij as follows:"},{"lineNumber":11,"author":{"gitId":"-"},"content":"   1. Click `Open`."},{"lineNumber":12,"author":{"gitId":"-"},"content":"   1. Select the project directory, and click `OK`."},{"lineNumber":13,"author":{"gitId":"-"},"content":"   1. If there are any further prompts, accept the defaults."},{"lineNumber":14,"author":{"gitId":"-"},"content":"1. Configure the project to use **JDK 11** (not other versions) as explained in [here](https://www.jetbrains.com/help/idea/sdk.html#set-up-jdk)."},{"lineNumber":15,"author":{"gitId":"seaniy"},"content":"1. After that, locate the `src/main/java/rick/Duke.java` file, right-click it, and choose `Run Duke.main()`. If the setup is correct, you should see something like the below:"},{"lineNumber":16,"author":{"gitId":"-"},"content":"   ```"},{"lineNumber":17,"author":{"gitId":"-"},"content":"   Hello from"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    ____        _        "},{"lineNumber":19,"author":{"gitId":"-"},"content":"   |  _ \\ _   _| | _____ "},{"lineNumber":20,"author":{"gitId":"-"},"content":"   | | | | | | | |/ / _ \\"},{"lineNumber":21,"author":{"gitId":"-"},"content":"   | |_| | |_| |   \u003c  __/"},{"lineNumber":22,"author":{"gitId":"-"},"content":"   |____/ \\__,_|_|\\_\\___|"},{"lineNumber":23,"author":{"gitId":"-"},"content":"   ```"}],"authorContributionMap":{"seaniy":1,"-":22}},{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027checkstyle\u0027"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027"},{"lineNumber":6,"author":{"gitId":"-"},"content":"}"},{"lineNumber":7,"author":{"gitId":"-"},"content":""},{"lineNumber":8,"author":{"gitId":"-"},"content":"repositories {"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    mavenCentral()"},{"lineNumber":10,"author":{"gitId":"-"},"content":"}"},{"lineNumber":11,"author":{"gitId":"-"},"content":""},{"lineNumber":12,"author":{"gitId":"-"},"content":"dependencies {"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.5.0\u0027"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.5.0\u0027"},{"lineNumber":15,"author":{"gitId":"seaniy"},"content":""},{"lineNumber":16,"author":{"gitId":"seaniy"},"content":"    String javaFxVersion \u003d \u002711\u0027"},{"lineNumber":17,"author":{"gitId":"seaniy"},"content":""},{"lineNumber":18,"author":{"gitId":"seaniy"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027"},{"lineNumber":19,"author":{"gitId":"seaniy"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"},{"lineNumber":20,"author":{"gitId":"seaniy"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"},{"lineNumber":21,"author":{"gitId":"seaniy"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027"},{"lineNumber":22,"author":{"gitId":"seaniy"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"},{"lineNumber":23,"author":{"gitId":"seaniy"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"},{"lineNumber":24,"author":{"gitId":"seaniy"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027"},{"lineNumber":25,"author":{"gitId":"seaniy"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"},{"lineNumber":26,"author":{"gitId":"seaniy"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"},{"lineNumber":27,"author":{"gitId":"seaniy"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027"},{"lineNumber":28,"author":{"gitId":"seaniy"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"},{"lineNumber":29,"author":{"gitId":"seaniy"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"},{"lineNumber":30,"author":{"gitId":"-"},"content":"}"},{"lineNumber":31,"author":{"gitId":"-"},"content":""},{"lineNumber":32,"author":{"gitId":"-"},"content":"test {"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    useJUnitPlatform()"},{"lineNumber":34,"author":{"gitId":"-"},"content":""},{"lineNumber":35,"author":{"gitId":"-"},"content":"    testLogging {"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\""},{"lineNumber":37,"author":{"gitId":"-"},"content":""},{"lineNumber":38,"author":{"gitId":"-"},"content":"        showExceptions true"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\""},{"lineNumber":40,"author":{"gitId":"-"},"content":"        showCauses true"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        showStackTraces true"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":44,"author":{"gitId":"-"},"content":"}"},{"lineNumber":45,"author":{"gitId":"-"},"content":""},{"lineNumber":46,"author":{"gitId":"-"},"content":"application {"},{"lineNumber":47,"author":{"gitId":"seaniy"},"content":"    mainClassName \u003d \"rick.Launcher\""},{"lineNumber":48,"author":{"gitId":"-"},"content":"}"},{"lineNumber":49,"author":{"gitId":"-"},"content":""},{"lineNumber":50,"author":{"gitId":"-"},"content":"shadowJar {"},{"lineNumber":51,"author":{"gitId":"seaniy"},"content":"    archiveBaseName \u003d \"rick\""},{"lineNumber":52,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null"},{"lineNumber":53,"author":{"gitId":"-"},"content":"}"},{"lineNumber":54,"author":{"gitId":"-"},"content":""},{"lineNumber":55,"author":{"gitId":"-"},"content":"checkstyle {"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    toolVersion \u003d \u00278.29\u0027"},{"lineNumber":57,"author":{"gitId":"-"},"content":"}"},{"lineNumber":58,"author":{"gitId":"-"},"content":""},{"lineNumber":59,"author":{"gitId":"-"},"content":"run{"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in"},{"lineNumber":61,"author":{"gitId":"-"},"content":"}"}],"authorContributionMap":{"seaniy":17,"-":44}},{"path":"docs/README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"# User Guide"},{"lineNumber":2,"author":{"gitId":"seaniy"},"content":"Rick is a Personal Chatbot that records and handles all your tasks."},{"lineNumber":3,"author":{"gitId":"seaniy"},"content":"This application"},{"lineNumber":4,"author":{"gitId":"-"},"content":""},{"lineNumber":5,"author":{"gitId":"seaniy"},"content":"---"},{"lineNumber":6,"author":{"gitId":"-"},"content":""},{"lineNumber":7,"author":{"gitId":"seaniy"},"content":"## Overview:"},{"lineNumber":8,"author":{"gitId":"-"},"content":""},{"lineNumber":9,"author":{"gitId":"seaniy"},"content":"Features | Syntax"},{"lineNumber":10,"author":{"gitId":"seaniy"},"content":"-------------- | --------------"},{"lineNumber":11,"author":{"gitId":"seaniy"},"content":"Show help menu | `help`"},{"lineNumber":12,"author":{"gitId":"seaniy"},"content":"Show all tasks | `list`"},{"lineNumber":13,"author":{"gitId":"seaniy"},"content":"Find tasks | `find \u003ckeyword/keyphrase\u003e`"},{"lineNumber":14,"author":{"gitId":"seaniy"},"content":"Add todo | `todo \u003cdescription\u003e`"},{"lineNumber":15,"author":{"gitId":"seaniy"},"content":"Add deadline | `deadline \u003cdescription\u003e /by \u003cdate\u003e`"},{"lineNumber":16,"author":{"gitId":"seaniy"},"content":"Add event | `event \u003cdescription\u003e /on \u003cdate\u003e`"},{"lineNumber":17,"author":{"gitId":"seaniy"},"content":"Delete a task | `delete \u003ctask index\u003e`"},{"lineNumber":18,"author":{"gitId":"seaniy"},"content":"Mark task as done | `done \u003ctask index\u003e`"},{"lineNumber":19,"author":{"gitId":"seaniy"},"content":"Exit application | `bye`"},{"lineNumber":20,"author":{"gitId":"-"},"content":""},{"lineNumber":21,"author":{"gitId":"seaniy"},"content":"---"},{"lineNumber":22,"author":{"gitId":"-"},"content":""},{"lineNumber":23,"author":{"gitId":"seaniy"},"content":"## Show Help Menu"},{"lineNumber":24,"author":{"gitId":"seaniy"},"content":""},{"lineNumber":25,"author":{"gitId":"seaniy"},"content":"### Usage"},{"lineNumber":26,"author":{"gitId":"seaniy"},"content":""},{"lineNumber":27,"author":{"gitId":"seaniy"},"content":"#### `help` - Displays the help menu"},{"lineNumber":28,"author":{"gitId":"seaniy"},"content":""},{"lineNumber":29,"author":{"gitId":"seaniy"},"content":"Users can view the help menu for the list of available commands."},{"lineNumber":30,"author":{"gitId":"-"},"content":""},{"lineNumber":31,"author":{"gitId":"-"},"content":"Example of usage: "},{"lineNumber":32,"author":{"gitId":"-"},"content":""},{"lineNumber":33,"author":{"gitId":"seaniy"},"content":"`help`"},{"lineNumber":34,"author":{"gitId":"seaniy"},"content":""},{"lineNumber":35,"author":{"gitId":"seaniy"},"content":"Expected outcome:"},{"lineNumber":36,"author":{"gitId":"seaniy"},"content":""},{"lineNumber":37,"author":{"gitId":"seaniy"},"content":"![help_image](images/help.png)"},{"lineNumber":38,"author":{"gitId":"seaniy"},"content":""},{"lineNumber":39,"author":{"gitId":"seaniy"},"content":"---"},{"lineNumber":40,"author":{"gitId":"seaniy"},"content":""},{"lineNumber":41,"author":{"gitId":"seaniy"},"content":"## Show List of All Tasks"},{"lineNumber":42,"author":{"gitId":"seaniy"},"content":""},{"lineNumber":43,"author":{"gitId":"seaniy"},"content":"### Usage"},{"lineNumber":44,"author":{"gitId":"seaniy"},"content":""},{"lineNumber":45,"author":{"gitId":"seaniy"},"content":"#### `list` - Displays the list of all tasks"},{"lineNumber":46,"author":{"gitId":"seaniy"},"content":""},{"lineNumber":47,"author":{"gitId":"seaniy"},"content":"Users can view the list of all tasks stored with Rick."},{"lineNumber":48,"author":{"gitId":"seaniy"},"content":""},{"lineNumber":49,"author":{"gitId":"seaniy"},"content":"Example of usage:"},{"lineNumber":50,"author":{"gitId":"seaniy"},"content":""},{"lineNumber":51,"author":{"gitId":"seaniy"},"content":"`list`"},{"lineNumber":52,"author":{"gitId":"seaniy"},"content":""},{"lineNumber":53,"author":{"gitId":"seaniy"},"content":"Expected outcome:"},{"lineNumber":54,"author":{"gitId":"seaniy"},"content":""},{"lineNumber":55,"author":{"gitId":"seaniy"},"content":"![list_image](images/list.png)"},{"lineNumber":56,"author":{"gitId":"seaniy"},"content":""},{"lineNumber":57,"author":{"gitId":"seaniy"},"content":"---"},{"lineNumber":58,"author":{"gitId":"seaniy"},"content":""},{"lineNumber":59,"author":{"gitId":"seaniy"},"content":"## Find Tasks"},{"lineNumber":60,"author":{"gitId":"seaniy"},"content":""},{"lineNumber":61,"author":{"gitId":"seaniy"},"content":"### Usage"},{"lineNumber":62,"author":{"gitId":"seaniy"},"content":""},{"lineNumber":63,"author":{"gitId":"seaniy"},"content":"#### `find \u003ckeyword/keyphrase\u003e` - Displays tasks with matching description"},{"lineNumber":64,"author":{"gitId":"seaniy"},"content":""},{"lineNumber":65,"author":{"gitId":"seaniy"},"content":"Users can search for tasks by keywords/keyphrase that match the task description."},{"lineNumber":66,"author":{"gitId":"seaniy"},"content":"Additionally, users can also search for tasks based on their type, such as `todo`, `deadline` and `event`."},{"lineNumber":67,"author":{"gitId":"seaniy"},"content":""},{"lineNumber":68,"author":{"gitId":"seaniy"},"content":"Example of usage:"},{"lineNumber":69,"author":{"gitId":"seaniy"},"content":""},{"lineNumber":70,"author":{"gitId":"seaniy"},"content":"`find book`"},{"lineNumber":71,"author":{"gitId":"seaniy"},"content":""},{"lineNumber":72,"author":{"gitId":"seaniy"},"content":"Expected outcome:"},{"lineNumber":73,"author":{"gitId":"seaniy"},"content":""},{"lineNumber":74,"author":{"gitId":"seaniy"},"content":"![find_image](images/find.png)"},{"lineNumber":75,"author":{"gitId":"seaniy"},"content":""},{"lineNumber":76,"author":{"gitId":"seaniy"},"content":"---"},{"lineNumber":77,"author":{"gitId":"seaniy"},"content":""},{"lineNumber":78,"author":{"gitId":"seaniy"},"content":"## Add Todo Task"},{"lineNumber":79,"author":{"gitId":"seaniy"},"content":""},{"lineNumber":80,"author":{"gitId":"seaniy"},"content":"### Usage"},{"lineNumber":81,"author":{"gitId":"seaniy"},"content":""},{"lineNumber":82,"author":{"gitId":"seaniy"},"content":"#### `todo \u003cdescription\u003e` - Adds a todo task"},{"lineNumber":83,"author":{"gitId":"seaniy"},"content":""},{"lineNumber":84,"author":{"gitId":"seaniy"},"content":"Users can add a Todo task."},{"lineNumber":85,"author":{"gitId":"seaniy"},"content":""},{"lineNumber":86,"author":{"gitId":"seaniy"},"content":"Example of usage:"},{"lineNumber":87,"author":{"gitId":"seaniy"},"content":""},{"lineNumber":88,"author":{"gitId":"seaniy"},"content":"`todo read book`"},{"lineNumber":89,"author":{"gitId":"seaniy"},"content":""},{"lineNumber":90,"author":{"gitId":"seaniy"},"content":"Expected outcome:"},{"lineNumber":91,"author":{"gitId":"seaniy"},"content":""},{"lineNumber":92,"author":{"gitId":"seaniy"},"content":"![todo_image](images/todo.png)"},{"lineNumber":93,"author":{"gitId":"seaniy"},"content":""},{"lineNumber":94,"author":{"gitId":"seaniy"},"content":"---"},{"lineNumber":95,"author":{"gitId":"seaniy"},"content":""},{"lineNumber":96,"author":{"gitId":"seaniy"},"content":"## Add Deadline Task"},{"lineNumber":97,"author":{"gitId":"seaniy"},"content":""},{"lineNumber":98,"author":{"gitId":"seaniy"},"content":"### Usage"},{"lineNumber":99,"author":{"gitId":"seaniy"},"content":""},{"lineNumber":100,"author":{"gitId":"seaniy"},"content":"#### `deadline \u003cdescription\u003e /by \u003cdate\u003e` - Adds a deadline task"},{"lineNumber":101,"author":{"gitId":"seaniy"},"content":""},{"lineNumber":102,"author":{"gitId":"seaniy"},"content":"Users can add a Deadline task with a specified due date."},{"lineNumber":103,"author":{"gitId":"seaniy"},"content":""},{"lineNumber":104,"author":{"gitId":"seaniy"},"content":"Example of usage:"},{"lineNumber":105,"author":{"gitId":"seaniy"},"content":""},{"lineNumber":106,"author":{"gitId":"seaniy"},"content":"`deadline CS2103 iP /by 2020-02-12`"},{"lineNumber":107,"author":{"gitId":"seaniy"},"content":""},{"lineNumber":108,"author":{"gitId":"seaniy"},"content":"Expected outcome:"},{"lineNumber":109,"author":{"gitId":"seaniy"},"content":""},{"lineNumber":110,"author":{"gitId":"seaniy"},"content":"![deadline_image](images/deadline.png)"},{"lineNumber":111,"author":{"gitId":"seaniy"},"content":""},{"lineNumber":112,"author":{"gitId":"seaniy"},"content":"---"},{"lineNumber":113,"author":{"gitId":"seaniy"},"content":""},{"lineNumber":114,"author":{"gitId":"seaniy"},"content":"## Add Event Task"},{"lineNumber":115,"author":{"gitId":"seaniy"},"content":""},{"lineNumber":116,"author":{"gitId":"seaniy"},"content":"### Usage"},{"lineNumber":117,"author":{"gitId":"seaniy"},"content":""},{"lineNumber":118,"author":{"gitId":"seaniy"},"content":"#### `event \u003cdescription\u003e /on \u003cdate\u003e` - Adds an Event task"},{"lineNumber":119,"author":{"gitId":"seaniy"},"content":""},{"lineNumber":120,"author":{"gitId":"seaniy"},"content":"Users can add an Event task with a specified date of event."},{"lineNumber":121,"author":{"gitId":"seaniy"},"content":""},{"lineNumber":122,"author":{"gitId":"seaniy"},"content":"Example of usage:"},{"lineNumber":123,"author":{"gitId":"seaniy"},"content":""},{"lineNumber":124,"author":{"gitId":"seaniy"},"content":"`event IPPT /on 2020-08-04`"},{"lineNumber":125,"author":{"gitId":"seaniy"},"content":""},{"lineNumber":126,"author":{"gitId":"seaniy"},"content":"Expected outcome:"},{"lineNumber":127,"author":{"gitId":"seaniy"},"content":""},{"lineNumber":128,"author":{"gitId":"seaniy"},"content":"![event_image](images/event.png)"},{"lineNumber":129,"author":{"gitId":"seaniy"},"content":""},{"lineNumber":130,"author":{"gitId":"seaniy"},"content":"---"},{"lineNumber":131,"author":{"gitId":"seaniy"},"content":""},{"lineNumber":132,"author":{"gitId":"seaniy"},"content":"## Delete A Task"},{"lineNumber":133,"author":{"gitId":"seaniy"},"content":""},{"lineNumber":134,"author":{"gitId":"seaniy"},"content":"### Usage"},{"lineNumber":135,"author":{"gitId":"seaniy"},"content":""},{"lineNumber":136,"author":{"gitId":"seaniy"},"content":"#### `delete \u003ctask index\u003e` - Delete a task"},{"lineNumber":137,"author":{"gitId":"seaniy"},"content":""},{"lineNumber":138,"author":{"gitId":"seaniy"},"content":"Users can delete a task by specifying the task index."},{"lineNumber":139,"author":{"gitId":"seaniy"},"content":""},{"lineNumber":140,"author":{"gitId":"seaniy"},"content":"Example of usage:"},{"lineNumber":141,"author":{"gitId":"seaniy"},"content":""},{"lineNumber":142,"author":{"gitId":"seaniy"},"content":"`delete 2`"},{"lineNumber":143,"author":{"gitId":"seaniy"},"content":""},{"lineNumber":144,"author":{"gitId":"seaniy"},"content":"Expected outcome:"},{"lineNumber":145,"author":{"gitId":"seaniy"},"content":""},{"lineNumber":146,"author":{"gitId":"seaniy"},"content":"![delete_image](images/delete.png)"},{"lineNumber":147,"author":{"gitId":"seaniy"},"content":""},{"lineNumber":148,"author":{"gitId":"seaniy"},"content":"---"},{"lineNumber":149,"author":{"gitId":"seaniy"},"content":""},{"lineNumber":150,"author":{"gitId":"seaniy"},"content":"## Mark Task As Done"},{"lineNumber":151,"author":{"gitId":"seaniy"},"content":""},{"lineNumber":152,"author":{"gitId":"seaniy"},"content":"### Usage"},{"lineNumber":153,"author":{"gitId":"seaniy"},"content":""},{"lineNumber":154,"author":{"gitId":"seaniy"},"content":"#### `done \u003ctask index\u003e` - Mark specified task as done"},{"lineNumber":155,"author":{"gitId":"seaniy"},"content":""},{"lineNumber":156,"author":{"gitId":"seaniy"},"content":"Users can mark a task as done by specifying the task index."},{"lineNumber":157,"author":{"gitId":"seaniy"},"content":""},{"lineNumber":158,"author":{"gitId":"seaniy"},"content":"Example of usage:"},{"lineNumber":159,"author":{"gitId":"seaniy"},"content":""},{"lineNumber":160,"author":{"gitId":"seaniy"},"content":"`done 2`"},{"lineNumber":161,"author":{"gitId":"seaniy"},"content":""},{"lineNumber":162,"author":{"gitId":"seaniy"},"content":"Expected outcome:"},{"lineNumber":163,"author":{"gitId":"seaniy"},"content":""},{"lineNumber":164,"author":{"gitId":"seaniy"},"content":"![done_image](images/done.png)"},{"lineNumber":165,"author":{"gitId":"seaniy"},"content":""},{"lineNumber":166,"author":{"gitId":"seaniy"},"content":"---"},{"lineNumber":167,"author":{"gitId":"-"},"content":""},{"lineNumber":168,"author":{"gitId":"seaniy"},"content":"## Exit Application"},{"lineNumber":169,"author":{"gitId":"-"},"content":""},{"lineNumber":170,"author":{"gitId":"seaniy"},"content":"### Usage"},{"lineNumber":171,"author":{"gitId":"-"},"content":""},{"lineNumber":172,"author":{"gitId":"seaniy"},"content":"#### `bye` - Exit the application"},{"lineNumber":173,"author":{"gitId":"-"},"content":""},{"lineNumber":174,"author":{"gitId":"seaniy"},"content":"Users can exit the application."},{"lineNumber":175,"author":{"gitId":"-"},"content":""},{"lineNumber":176,"author":{"gitId":"-"},"content":"Example of usage:"},{"lineNumber":177,"author":{"gitId":"-"},"content":""},{"lineNumber":178,"author":{"gitId":"seaniy"},"content":"`bye`"},{"lineNumber":179,"author":{"gitId":"-"},"content":""},{"lineNumber":180,"author":{"gitId":"-"},"content":"Expected outcome:"},{"lineNumber":181,"author":{"gitId":"-"},"content":""},{"lineNumber":182,"author":{"gitId":"seaniy"},"content":"![bye_image](images/bye.png)"}],"authorContributionMap":{"seaniy":163,"-":19}},{"path":"src/main/java/rick/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"seaniy"},"content":"package rick;"},{"lineNumber":2,"author":{"gitId":"seaniy"},"content":""},{"lineNumber":3,"author":{"gitId":"seaniy"},"content":"/**"},{"lineNumber":4,"author":{"gitId":"seaniy"},"content":" * Commands recognised by the application"},{"lineNumber":5,"author":{"gitId":"seaniy"},"content":" */"},{"lineNumber":6,"author":{"gitId":"seaniy"},"content":"public enum Command {"},{"lineNumber":7,"author":{"gitId":"seaniy"},"content":"    BYE,"},{"lineNumber":8,"author":{"gitId":"seaniy"},"content":"    LIST,"},{"lineNumber":9,"author":{"gitId":"seaniy"},"content":"    DONE,"},{"lineNumber":10,"author":{"gitId":"seaniy"},"content":"    DELETE,"},{"lineNumber":11,"author":{"gitId":"seaniy"},"content":"    TODO,"},{"lineNumber":12,"author":{"gitId":"seaniy"},"content":"    DEADLINE,"},{"lineNumber":13,"author":{"gitId":"seaniy"},"content":"    EVENT,"},{"lineNumber":14,"author":{"gitId":"seaniy"},"content":"    FIND,"},{"lineNumber":15,"author":{"gitId":"seaniy"},"content":"    HELP"},{"lineNumber":16,"author":{"gitId":"seaniy"},"content":"}"}],"authorContributionMap":{"seaniy":16}},{"path":"src/main/java/rick/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"seaniy"},"content":"package rick;"},{"lineNumber":2,"author":{"gitId":"seaniy"},"content":""},{"lineNumber":3,"author":{"gitId":"seaniy"},"content":"import java.time.LocalDate;"},{"lineNumber":4,"author":{"gitId":"seaniy"},"content":"import java.time.format.DateTimeFormatter;"},{"lineNumber":5,"author":{"gitId":"seaniy"},"content":""},{"lineNumber":6,"author":{"gitId":"seaniy"},"content":"/**"},{"lineNumber":7,"author":{"gitId":"seaniy"},"content":" * A child of \u003ccode\u003eTask\u003c/code\u003e object, corresponds to a deadline task with"},{"lineNumber":8,"author":{"gitId":"seaniy"},"content":" * description supplied by the user. eg., \u003ccode\u003ebuy cake /by 2019-10-19\u003c/code\u003e"},{"lineNumber":9,"author":{"gitId":"seaniy"},"content":" *"},{"lineNumber":10,"author":{"gitId":"seaniy"},"content":" * @see Task"},{"lineNumber":11,"author":{"gitId":"seaniy"},"content":" */"},{"lineNumber":12,"author":{"gitId":"seaniy"},"content":"public class Deadline extends Task {"},{"lineNumber":13,"author":{"gitId":"seaniy"},"content":"    private LocalDate date;"},{"lineNumber":14,"author":{"gitId":"seaniy"},"content":""},{"lineNumber":15,"author":{"gitId":"seaniy"},"content":"    public Deadline(String description, LocalDate date) {"},{"lineNumber":16,"author":{"gitId":"seaniy"},"content":"        super(description);"},{"lineNumber":17,"author":{"gitId":"seaniy"},"content":"        this.date \u003d date;"},{"lineNumber":18,"author":{"gitId":"seaniy"},"content":"    }"},{"lineNumber":19,"author":{"gitId":"seaniy"},"content":""},{"lineNumber":20,"author":{"gitId":"seaniy"},"content":"    public Deadline(String description, LocalDate date, boolean isDone) {"},{"lineNumber":21,"author":{"gitId":"seaniy"},"content":"        super(description, isDone);"},{"lineNumber":22,"author":{"gitId":"seaniy"},"content":"        this.date \u003d date;"},{"lineNumber":23,"author":{"gitId":"seaniy"},"content":"    }"},{"lineNumber":24,"author":{"gitId":"seaniy"},"content":""},{"lineNumber":25,"author":{"gitId":"seaniy"},"content":"    @Override"},{"lineNumber":26,"author":{"gitId":"seaniy"},"content":"    public String toString() {"},{"lineNumber":27,"author":{"gitId":"seaniy"},"content":"        return \"D | \" + super.toString() + \" | \" + date.format(DateTimeFormatter.ofPattern(\"dd MMM YYYY\"));"},{"lineNumber":28,"author":{"gitId":"seaniy"},"content":"    }"},{"lineNumber":29,"author":{"gitId":"seaniy"},"content":"}"}],"authorContributionMap":{"seaniy":29}},{"path":"src/main/java/rick/DialogBox.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"seaniy"},"content":"package rick;"},{"lineNumber":2,"author":{"gitId":"seaniy"},"content":""},{"lineNumber":3,"author":{"gitId":"seaniy"},"content":"import java.io.IOException;"},{"lineNumber":4,"author":{"gitId":"seaniy"},"content":""},{"lineNumber":5,"author":{"gitId":"seaniy"},"content":"import java.util.Collections;"},{"lineNumber":6,"author":{"gitId":"seaniy"},"content":""},{"lineNumber":7,"author":{"gitId":"seaniy"},"content":"import javafx.collections.FXCollections;"},{"lineNumber":8,"author":{"gitId":"seaniy"},"content":"import javafx.collections.ObservableList;"},{"lineNumber":9,"author":{"gitId":"seaniy"},"content":""},{"lineNumber":10,"author":{"gitId":"seaniy"},"content":"import javafx.fxml.FXML;"},{"lineNumber":11,"author":{"gitId":"seaniy"},"content":"import javafx.fxml.FXMLLoader;"},{"lineNumber":12,"author":{"gitId":"seaniy"},"content":""},{"lineNumber":13,"author":{"gitId":"seaniy"},"content":"import javafx.geometry.Pos;"},{"lineNumber":14,"author":{"gitId":"seaniy"},"content":""},{"lineNumber":15,"author":{"gitId":"seaniy"},"content":"import javafx.scene.Node;"},{"lineNumber":16,"author":{"gitId":"seaniy"},"content":"import javafx.scene.control.Label;"},{"lineNumber":17,"author":{"gitId":"seaniy"},"content":"import javafx.scene.image.Image;"},{"lineNumber":18,"author":{"gitId":"seaniy"},"content":"import javafx.scene.image.ImageView;"},{"lineNumber":19,"author":{"gitId":"seaniy"},"content":"import javafx.scene.layout.HBox;"},{"lineNumber":20,"author":{"gitId":"seaniy"},"content":""},{"lineNumber":21,"author":{"gitId":"seaniy"},"content":"/**"},{"lineNumber":22,"author":{"gitId":"seaniy"},"content":" * An example of a custom control using FXML."},{"lineNumber":23,"author":{"gitId":"seaniy"},"content":" * This control represents a dialog box consisting of an ImageView to represent the speaker\u0027s face and a label"},{"lineNumber":24,"author":{"gitId":"seaniy"},"content":" * containing text from the speaker."},{"lineNumber":25,"author":{"gitId":"seaniy"},"content":" */"},{"lineNumber":26,"author":{"gitId":"seaniy"},"content":"public class DialogBox extends HBox {"},{"lineNumber":27,"author":{"gitId":"seaniy"},"content":"    private static final String RICK_DIALOG_COLOR \u003d \"#D9D9D9\";"},{"lineNumber":28,"author":{"gitId":"seaniy"},"content":"    private static final String USER_DIALOG_COLOR \u003d \"#95EC69\";"},{"lineNumber":29,"author":{"gitId":"seaniy"},"content":""},{"lineNumber":30,"author":{"gitId":"seaniy"},"content":"    @FXML"},{"lineNumber":31,"author":{"gitId":"seaniy"},"content":"    private Label dialog;"},{"lineNumber":32,"author":{"gitId":"seaniy"},"content":"    @FXML"},{"lineNumber":33,"author":{"gitId":"seaniy"},"content":"    private ImageView displayPicture;"},{"lineNumber":34,"author":{"gitId":"seaniy"},"content":""},{"lineNumber":35,"author":{"gitId":"seaniy"},"content":"    private DialogBox(String text, Image img) {"},{"lineNumber":36,"author":{"gitId":"seaniy"},"content":"        try {"},{"lineNumber":37,"author":{"gitId":"seaniy"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(\"/views/DialogBox.fxml\"));"},{"lineNumber":38,"author":{"gitId":"seaniy"},"content":"            fxmlLoader.setController(this);"},{"lineNumber":39,"author":{"gitId":"seaniy"},"content":"            fxmlLoader.setRoot(this);"},{"lineNumber":40,"author":{"gitId":"seaniy"},"content":"            fxmlLoader.load();"},{"lineNumber":41,"author":{"gitId":"seaniy"},"content":"        } catch (IOException e) {"},{"lineNumber":42,"author":{"gitId":"seaniy"},"content":"            e.printStackTrace();"},{"lineNumber":43,"author":{"gitId":"seaniy"},"content":"        }"},{"lineNumber":44,"author":{"gitId":"seaniy"},"content":""},{"lineNumber":45,"author":{"gitId":"seaniy"},"content":"        dialog.setText(text);"},{"lineNumber":46,"author":{"gitId":"seaniy"},"content":"        displayPicture.setImage(img);"},{"lineNumber":47,"author":{"gitId":"seaniy"},"content":"    }"},{"lineNumber":48,"author":{"gitId":"seaniy"},"content":""},{"lineNumber":49,"author":{"gitId":"seaniy"},"content":"    /**"},{"lineNumber":50,"author":{"gitId":"seaniy"},"content":"     * Flips the dialog box such that the ImageView is on the left and text on the right."},{"lineNumber":51,"author":{"gitId":"seaniy"},"content":"     */"},{"lineNumber":52,"author":{"gitId":"seaniy"},"content":"    private void flip() {"},{"lineNumber":53,"author":{"gitId":"seaniy"},"content":"        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());"},{"lineNumber":54,"author":{"gitId":"seaniy"},"content":"        Collections.reverse(tmp);"},{"lineNumber":55,"author":{"gitId":"seaniy"},"content":"        getChildren().setAll(tmp);"},{"lineNumber":56,"author":{"gitId":"seaniy"},"content":"        setAlignment(Pos.TOP_LEFT);"},{"lineNumber":57,"author":{"gitId":"seaniy"},"content":"    }"},{"lineNumber":58,"author":{"gitId":"seaniy"},"content":""},{"lineNumber":59,"author":{"gitId":"seaniy"},"content":"    private void setDialogColor(String color) {"},{"lineNumber":60,"author":{"gitId":"seaniy"},"content":"        String currentStyle \u003d dialog.styleProperty().getValue();"},{"lineNumber":61,"author":{"gitId":"seaniy"},"content":"        dialog.setStyle(String.format(\"%s -fx-background-color: %s;\", currentStyle, color));"},{"lineNumber":62,"author":{"gitId":"seaniy"},"content":"    }"},{"lineNumber":63,"author":{"gitId":"seaniy"},"content":""},{"lineNumber":64,"author":{"gitId":"seaniy"},"content":"    public static DialogBox getUserDialog(String text, Image img) {"},{"lineNumber":65,"author":{"gitId":"seaniy"},"content":"        var userDialog \u003d new DialogBox(text, img);"},{"lineNumber":66,"author":{"gitId":"seaniy"},"content":"        userDialog.setDialogColor(USER_DIALOG_COLOR);"},{"lineNumber":67,"author":{"gitId":"seaniy"},"content":"        return userDialog;"},{"lineNumber":68,"author":{"gitId":"seaniy"},"content":"    }"},{"lineNumber":69,"author":{"gitId":"seaniy"},"content":""},{"lineNumber":70,"author":{"gitId":"seaniy"},"content":"    public static DialogBox getRickDialog(String text, Image img) {"},{"lineNumber":71,"author":{"gitId":"seaniy"},"content":"        var rickDialog \u003d new DialogBox(text, img);"},{"lineNumber":72,"author":{"gitId":"seaniy"},"content":"        rickDialog.setDialogColor(RICK_DIALOG_COLOR);"},{"lineNumber":73,"author":{"gitId":"seaniy"},"content":"        rickDialog.flip();"},{"lineNumber":74,"author":{"gitId":"seaniy"},"content":"        return rickDialog;"},{"lineNumber":75,"author":{"gitId":"seaniy"},"content":"    }"},{"lineNumber":76,"author":{"gitId":"seaniy"},"content":"}"}],"authorContributionMap":{"seaniy":76}},{"path":"src/main/java/rick/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"seaniy"},"content":"package rick;"},{"lineNumber":2,"author":{"gitId":"seaniy"},"content":""},{"lineNumber":3,"author":{"gitId":"seaniy"},"content":"import java.time.LocalDate;"},{"lineNumber":4,"author":{"gitId":"seaniy"},"content":"import java.time.format.DateTimeFormatter;"},{"lineNumber":5,"author":{"gitId":"seaniy"},"content":""},{"lineNumber":6,"author":{"gitId":"seaniy"},"content":"/**"},{"lineNumber":7,"author":{"gitId":"seaniy"},"content":" * A child of \u003ccode\u003eTask\u003c/code\u003e object, corresponds to an event task with"},{"lineNumber":8,"author":{"gitId":"seaniy"},"content":" * description supplied by the user. eg., \u003ccode\u003ealan\u0027s birthday /at 6 Aug 6-8pm\u003c/code\u003e"},{"lineNumber":9,"author":{"gitId":"seaniy"},"content":" *"},{"lineNumber":10,"author":{"gitId":"seaniy"},"content":" * @see Task"},{"lineNumber":11,"author":{"gitId":"seaniy"},"content":" */"},{"lineNumber":12,"author":{"gitId":"seaniy"},"content":"public class Event extends Task {"},{"lineNumber":13,"author":{"gitId":"seaniy"},"content":"    private LocalDate date;"},{"lineNumber":14,"author":{"gitId":"seaniy"},"content":""},{"lineNumber":15,"author":{"gitId":"seaniy"},"content":"    public Event(String description, LocalDate date) {"},{"lineNumber":16,"author":{"gitId":"seaniy"},"content":"        super(description);"},{"lineNumber":17,"author":{"gitId":"seaniy"},"content":"        this.date \u003d date;"},{"lineNumber":18,"author":{"gitId":"seaniy"},"content":"    }"},{"lineNumber":19,"author":{"gitId":"seaniy"},"content":""},{"lineNumber":20,"author":{"gitId":"seaniy"},"content":"    public Event(String description, LocalDate date, boolean isDone) {"},{"lineNumber":21,"author":{"gitId":"seaniy"},"content":"        super(description, isDone);"},{"lineNumber":22,"author":{"gitId":"seaniy"},"content":"        this.date \u003d date;"},{"lineNumber":23,"author":{"gitId":"seaniy"},"content":"    }"},{"lineNumber":24,"author":{"gitId":"seaniy"},"content":""},{"lineNumber":25,"author":{"gitId":"seaniy"},"content":"    @Override"},{"lineNumber":26,"author":{"gitId":"seaniy"},"content":"    public String toString() {"},{"lineNumber":27,"author":{"gitId":"seaniy"},"content":"        return \"E | \" + super.toString() + \" | \" + date.format(DateTimeFormatter.ofPattern(\"dd MMM YYYY\"));"},{"lineNumber":28,"author":{"gitId":"seaniy"},"content":"    }"},{"lineNumber":29,"author":{"gitId":"seaniy"},"content":"}"}],"authorContributionMap":{"seaniy":29}},{"path":"src/main/java/rick/Gui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"seaniy"},"content":"package rick;"},{"lineNumber":2,"author":{"gitId":"seaniy"},"content":""},{"lineNumber":3,"author":{"gitId":"seaniy"},"content":"/**"},{"lineNumber":4,"author":{"gitId":"seaniy"},"content":" * Handles interactions with the user on a graphical interface"},{"lineNumber":5,"author":{"gitId":"seaniy"},"content":" * using a \u003ccode\u003eGui\u003c/code\u003e object."},{"lineNumber":6,"author":{"gitId":"seaniy"},"content":" */"},{"lineNumber":7,"author":{"gitId":"seaniy"},"content":"public class Gui {"},{"lineNumber":8,"author":{"gitId":"seaniy"},"content":"    /**"},{"lineNumber":9,"author":{"gitId":"seaniy"},"content":"     * This method is used to output a loading file error message."},{"lineNumber":10,"author":{"gitId":"seaniy"},"content":"     */"},{"lineNumber":11,"author":{"gitId":"seaniy"},"content":"    public static String getLoadingErrorString() {"},{"lineNumber":12,"author":{"gitId":"seaniy"},"content":"        return \"Rick failed to load file. Rick failure. Exiting...\";"},{"lineNumber":13,"author":{"gitId":"seaniy"},"content":"    }"},{"lineNumber":14,"author":{"gitId":"seaniy"},"content":""},{"lineNumber":15,"author":{"gitId":"seaniy"},"content":"    /**"},{"lineNumber":16,"author":{"gitId":"seaniy"},"content":"     * This method is used to output a saving file error message."},{"lineNumber":17,"author":{"gitId":"seaniy"},"content":"     */"},{"lineNumber":18,"author":{"gitId":"seaniy"},"content":"    public static String getSavingErrorString() {"},{"lineNumber":19,"author":{"gitId":"seaniy"},"content":"        return \"Rick failed to save file. Rick failure. Exiting...\";"},{"lineNumber":20,"author":{"gitId":"seaniy"},"content":"    }"},{"lineNumber":21,"author":{"gitId":"seaniy"},"content":""},{"lineNumber":22,"author":{"gitId":"seaniy"},"content":"    /**"},{"lineNumber":23,"author":{"gitId":"seaniy"},"content":"     * This method is used to output the welcome message."},{"lineNumber":24,"author":{"gitId":"seaniy"},"content":"     */"},{"lineNumber":25,"author":{"gitId":"seaniy"},"content":"    public static String getWelcomeString() {"},{"lineNumber":26,"author":{"gitId":"seaniy"},"content":"        return \"Hello Morty! It\u0027s me, Rick!\\n\""},{"lineNumber":27,"author":{"gitId":"seaniy"},"content":"                + \"What can I do for you?\\n\""},{"lineNumber":28,"author":{"gitId":"seaniy"},"content":"                + \"Type \\\"help\\\" to view the list of available commands.\";"},{"lineNumber":29,"author":{"gitId":"seaniy"},"content":"    }"},{"lineNumber":30,"author":{"gitId":"seaniy"},"content":""},{"lineNumber":31,"author":{"gitId":"seaniy"},"content":"    /**"},{"lineNumber":32,"author":{"gitId":"seaniy"},"content":"     * This method is used to output the goodbye message."},{"lineNumber":33,"author":{"gitId":"seaniy"},"content":"     */"},{"lineNumber":34,"author":{"gitId":"seaniy"},"content":"    public static String getGoodbyeString() {"},{"lineNumber":35,"author":{"gitId":"seaniy"},"content":"        return \"Goodbye Morty. It\u0027s been fun while it lasted!\";"},{"lineNumber":36,"author":{"gitId":"seaniy"},"content":"    }"},{"lineNumber":37,"author":{"gitId":"seaniy"},"content":""},{"lineNumber":38,"author":{"gitId":"seaniy"},"content":"    /**"},{"lineNumber":39,"author":{"gitId":"seaniy"},"content":"     * This method is used to output the list of commands"},{"lineNumber":40,"author":{"gitId":"seaniy"},"content":"     * available on the application."},{"lineNumber":41,"author":{"gitId":"seaniy"},"content":"     */"},{"lineNumber":42,"author":{"gitId":"seaniy"},"content":"    public static String getHelpMessageString() {"},{"lineNumber":43,"author":{"gitId":"seaniy"},"content":"        return \"Here you go Morty! This is the list of available commands:\\n\""},{"lineNumber":44,"author":{"gitId":"seaniy"},"content":"                + \"bye -\u003e To exit application\\n\""},{"lineNumber":45,"author":{"gitId":"seaniy"},"content":"                + \"list -\u003e To list tasks\\n\""},{"lineNumber":46,"author":{"gitId":"seaniy"},"content":"                + \"done \u003cindex\u003e -\u003e To mark task as done \\n\""},{"lineNumber":47,"author":{"gitId":"seaniy"},"content":"                + \"delete \u003cindex\u003e -\u003e To delete task\\n\""},{"lineNumber":48,"author":{"gitId":"seaniy"},"content":"                + \"todo \u003cdescription\u003e -\u003e To create todo\\n\""},{"lineNumber":49,"author":{"gitId":"seaniy"},"content":"                + \"deadline \u003cdescription\u003e /by \u003cyyyy-mm-dd\u003e -\u003e To create deadline\\n\""},{"lineNumber":50,"author":{"gitId":"seaniy"},"content":"                + \"event \u003cdescription\u003e /on \u003cyyyy-mm-dd\u003e -\u003e To create event\";"},{"lineNumber":51,"author":{"gitId":"seaniy"},"content":"    }"},{"lineNumber":52,"author":{"gitId":"seaniy"},"content":""},{"lineNumber":53,"author":{"gitId":"seaniy"},"content":"    /**"},{"lineNumber":54,"author":{"gitId":"seaniy"},"content":"     * This method is used to output the list of tasks"},{"lineNumber":55,"author":{"gitId":"seaniy"},"content":"     * in the \u003ccode\u003eTaskList\u003c/code\u003e object."},{"lineNumber":56,"author":{"gitId":"seaniy"},"content":"     *"},{"lineNumber":57,"author":{"gitId":"seaniy"},"content":"     * @param tasks The \u003ccode\u003eTaskList\u003c/code\u003e object."},{"lineNumber":58,"author":{"gitId":"seaniy"},"content":"     * @see TaskList"},{"lineNumber":59,"author":{"gitId":"seaniy"},"content":"     */"},{"lineNumber":60,"author":{"gitId":"seaniy"},"content":"    public static String getTasksString(TaskList tasks) {"},{"lineNumber":61,"author":{"gitId":"seaniy"},"content":"        StringBuilder message \u003d new StringBuilder();"},{"lineNumber":62,"author":{"gitId":"seaniy"},"content":"        if(tasks.isEmpty()) {"},{"lineNumber":63,"author":{"gitId":"seaniy"},"content":"            message.append(\"List is empty Morty!\");"},{"lineNumber":64,"author":{"gitId":"seaniy"},"content":"        } else {"},{"lineNumber":65,"author":{"gitId":"seaniy"},"content":"            message.append(\"Okay Morty. Here are your list of tasks:\\n\");"},{"lineNumber":66,"author":{"gitId":"seaniy"},"content":"            for(int i \u003d 1; i \u003c\u003d tasks.getSize(); i++) {"},{"lineNumber":67,"author":{"gitId":"seaniy"},"content":"                message.append(\"  \" + i + \". \" + tasks.getTask(i - 1));"},{"lineNumber":68,"author":{"gitId":"seaniy"},"content":"                if(i \u003c tasks.getSize()) {"},{"lineNumber":69,"author":{"gitId":"seaniy"},"content":"                    message.append(\"\\n\");"},{"lineNumber":70,"author":{"gitId":"seaniy"},"content":"                }"},{"lineNumber":71,"author":{"gitId":"seaniy"},"content":"            }"},{"lineNumber":72,"author":{"gitId":"seaniy"},"content":"        }"},{"lineNumber":73,"author":{"gitId":"seaniy"},"content":"        return message.toString();"},{"lineNumber":74,"author":{"gitId":"seaniy"},"content":"    }"},{"lineNumber":75,"author":{"gitId":"seaniy"},"content":""},{"lineNumber":76,"author":{"gitId":"seaniy"},"content":"    /**"},{"lineNumber":77,"author":{"gitId":"seaniy"},"content":"     * This method is used to output the list of found tasks"},{"lineNumber":78,"author":{"gitId":"seaniy"},"content":"     * in the \u003ccode\u003eTaskList\u003c/code\u003e object."},{"lineNumber":79,"author":{"gitId":"seaniy"},"content":"     *"},{"lineNumber":80,"author":{"gitId":"seaniy"},"content":"     * @param tasks The \u003ccode\u003eTaskList\u003c/code\u003e object."},{"lineNumber":81,"author":{"gitId":"seaniy"},"content":"     * @see TaskList"},{"lineNumber":82,"author":{"gitId":"seaniy"},"content":"     */"},{"lineNumber":83,"author":{"gitId":"seaniy"},"content":"    public static String getFoundTasksString(TaskList tasks) {"},{"lineNumber":84,"author":{"gitId":"seaniy"},"content":"        StringBuilder message \u003d new StringBuilder();"},{"lineNumber":85,"author":{"gitId":"seaniy"},"content":"        if(tasks.isEmpty()) {"},{"lineNumber":86,"author":{"gitId":"seaniy"},"content":"            message.append(\"Sorry Morty. Task not found. Rick failure.\");"},{"lineNumber":87,"author":{"gitId":"seaniy"},"content":"        } else {"},{"lineNumber":88,"author":{"gitId":"seaniy"},"content":"            message.append(\"Okay Morty. Here are the matching tasks in your list:\\n\");"},{"lineNumber":89,"author":{"gitId":"seaniy"},"content":"            for(int i \u003d 1; i \u003c\u003d tasks.getSize(); i++) {"},{"lineNumber":90,"author":{"gitId":"seaniy"},"content":"                message.append(\"  \" + i + \". \" + tasks.getTask(i - 1));"},{"lineNumber":91,"author":{"gitId":"seaniy"},"content":"                if(i \u003c tasks.getSize()) {"},{"lineNumber":92,"author":{"gitId":"seaniy"},"content":"                    message.append(\"\\n\");"},{"lineNumber":93,"author":{"gitId":"seaniy"},"content":"                }"},{"lineNumber":94,"author":{"gitId":"seaniy"},"content":"            }"},{"lineNumber":95,"author":{"gitId":"seaniy"},"content":"        }"},{"lineNumber":96,"author":{"gitId":"seaniy"},"content":"        return message.toString();"},{"lineNumber":97,"author":{"gitId":"seaniy"},"content":"    }"},{"lineNumber":98,"author":{"gitId":"seaniy"},"content":""},{"lineNumber":99,"author":{"gitId":"seaniy"},"content":"    /**"},{"lineNumber":100,"author":{"gitId":"seaniy"},"content":"     * This method is used to output the message provided in a standardized"},{"lineNumber":101,"author":{"gitId":"seaniy"},"content":"     * styling with a divider before and after the message."},{"lineNumber":102,"author":{"gitId":"seaniy"},"content":"     *"},{"lineNumber":103,"author":{"gitId":"seaniy"},"content":"     * @param message The message to display within the dividers."},{"lineNumber":104,"author":{"gitId":"seaniy"},"content":"     */"},{"lineNumber":105,"author":{"gitId":"seaniy"},"content":"    public static String getMessageString(String message) {"},{"lineNumber":106,"author":{"gitId":"seaniy"},"content":"        return message;"},{"lineNumber":107,"author":{"gitId":"seaniy"},"content":"    }"},{"lineNumber":108,"author":{"gitId":"seaniy"},"content":""},{"lineNumber":109,"author":{"gitId":"seaniy"},"content":"    /**"},{"lineNumber":110,"author":{"gitId":"seaniy"},"content":"     * This method is used to output the generic error message."},{"lineNumber":111,"author":{"gitId":"seaniy"},"content":"     *"},{"lineNumber":112,"author":{"gitId":"seaniy"},"content":"     * @param errorMessage The error message to display."},{"lineNumber":113,"author":{"gitId":"seaniy"},"content":"     */"},{"lineNumber":114,"author":{"gitId":"seaniy"},"content":"    public static String getErrorMessageString(String errorMessage) {"},{"lineNumber":115,"author":{"gitId":"seaniy"},"content":"        return \"Error, Morty! Error! \" + errorMessage;"},{"lineNumber":116,"author":{"gitId":"seaniy"},"content":"    }"},{"lineNumber":117,"author":{"gitId":"seaniy"},"content":"}"}],"authorContributionMap":{"seaniy":117}},{"path":"src/main/java/rick/Launcher.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"seaniy"},"content":"package rick;"},{"lineNumber":2,"author":{"gitId":"seaniy"},"content":""},{"lineNumber":3,"author":{"gitId":"seaniy"},"content":"import javafx.application.Application;"},{"lineNumber":4,"author":{"gitId":"seaniy"},"content":""},{"lineNumber":5,"author":{"gitId":"seaniy"},"content":"/**"},{"lineNumber":6,"author":{"gitId":"seaniy"},"content":" * A launcher class to workaround classpath issues."},{"lineNumber":7,"author":{"gitId":"seaniy"},"content":" */"},{"lineNumber":8,"author":{"gitId":"seaniy"},"content":"public class Launcher {"},{"lineNumber":9,"author":{"gitId":"seaniy"},"content":"    public static void main(String[] args) {"},{"lineNumber":10,"author":{"gitId":"seaniy"},"content":"        Application.launch(Main.class, args);"},{"lineNumber":11,"author":{"gitId":"seaniy"},"content":"    }"},{"lineNumber":12,"author":{"gitId":"seaniy"},"content":"}"}],"authorContributionMap":{"seaniy":12}},{"path":"src/main/java/rick/Main.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"seaniy"},"content":"package rick;"},{"lineNumber":2,"author":{"gitId":"seaniy"},"content":""},{"lineNumber":3,"author":{"gitId":"seaniy"},"content":"import java.io.IOException;"},{"lineNumber":4,"author":{"gitId":"seaniy"},"content":""},{"lineNumber":5,"author":{"gitId":"seaniy"},"content":"import javafx.application.Application;"},{"lineNumber":6,"author":{"gitId":"seaniy"},"content":""},{"lineNumber":7,"author":{"gitId":"seaniy"},"content":"import javafx.scene.Scene;"},{"lineNumber":8,"author":{"gitId":"seaniy"},"content":"import javafx.scene.layout.AnchorPane;"},{"lineNumber":9,"author":{"gitId":"seaniy"},"content":""},{"lineNumber":10,"author":{"gitId":"seaniy"},"content":"import javafx.stage.Stage;"},{"lineNumber":11,"author":{"gitId":"seaniy"},"content":""},{"lineNumber":12,"author":{"gitId":"seaniy"},"content":"import javafx.fxml.FXMLLoader;"},{"lineNumber":13,"author":{"gitId":"seaniy"},"content":""},{"lineNumber":14,"author":{"gitId":"seaniy"},"content":"public class Main extends Application {"},{"lineNumber":15,"author":{"gitId":"seaniy"},"content":"    public static final String filePath \u003d \"data/duke.txt\";"},{"lineNumber":16,"author":{"gitId":"seaniy"},"content":"    public static final String resourcePath \u003d \"/views/MainWindow.fxml\";"},{"lineNumber":17,"author":{"gitId":"seaniy"},"content":"    public static final String styleSheetsPath \u003d \"/styles/stylesheets.css\";"},{"lineNumber":18,"author":{"gitId":"seaniy"},"content":"    private Rick rick \u003d new Rick(filePath);"},{"lineNumber":19,"author":{"gitId":"seaniy"},"content":""},{"lineNumber":20,"author":{"gitId":"seaniy"},"content":"    @Override"},{"lineNumber":21,"author":{"gitId":"seaniy"},"content":"    public void start(Stage stage) {"},{"lineNumber":22,"author":{"gitId":"seaniy"},"content":"        try {"},{"lineNumber":23,"author":{"gitId":"seaniy"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(Main.class.getResource(resourcePath));"},{"lineNumber":24,"author":{"gitId":"seaniy"},"content":"            AnchorPane ap \u003d fxmlLoader.load();"},{"lineNumber":25,"author":{"gitId":"seaniy"},"content":"            Scene scene \u003d new Scene(ap);"},{"lineNumber":26,"author":{"gitId":"seaniy"},"content":"            scene.getStylesheets().add(styleSheetsPath);"},{"lineNumber":27,"author":{"gitId":"seaniy"},"content":"            stage.setTitle(\"Rick \u0026 Morty\");"},{"lineNumber":28,"author":{"gitId":"seaniy"},"content":"            stage.setScene(scene);"},{"lineNumber":29,"author":{"gitId":"seaniy"},"content":"            stage.setResizable(false);"},{"lineNumber":30,"author":{"gitId":"seaniy"},"content":"            fxmlLoader.\u003cMainWindow\u003egetController().setDuke(rick);"},{"lineNumber":31,"author":{"gitId":"seaniy"},"content":"            stage.show();"},{"lineNumber":32,"author":{"gitId":"seaniy"},"content":"        } catch (IOException e) {"},{"lineNumber":33,"author":{"gitId":"seaniy"},"content":"            e.printStackTrace();"},{"lineNumber":34,"author":{"gitId":"seaniy"},"content":"        }"},{"lineNumber":35,"author":{"gitId":"seaniy"},"content":"    }"},{"lineNumber":36,"author":{"gitId":"seaniy"},"content":"}"}],"authorContributionMap":{"seaniy":36}},{"path":"src/main/java/rick/MainWindow.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"seaniy"},"content":"package rick;"},{"lineNumber":2,"author":{"gitId":"seaniy"},"content":""},{"lineNumber":3,"author":{"gitId":"seaniy"},"content":"import javafx.fxml.FXML;"},{"lineNumber":4,"author":{"gitId":"seaniy"},"content":"import javafx.scene.control.Button;"},{"lineNumber":5,"author":{"gitId":"seaniy"},"content":"import javafx.scene.control.ScrollPane;"},{"lineNumber":6,"author":{"gitId":"seaniy"},"content":"import javafx.scene.control.TextField;"},{"lineNumber":7,"author":{"gitId":"seaniy"},"content":"import javafx.scene.image.Image;"},{"lineNumber":8,"author":{"gitId":"seaniy"},"content":"import javafx.scene.layout.AnchorPane;"},{"lineNumber":9,"author":{"gitId":"seaniy"},"content":"import javafx.scene.layout.VBox;"},{"lineNumber":10,"author":{"gitId":"seaniy"},"content":""},{"lineNumber":11,"author":{"gitId":"seaniy"},"content":"import java.util.Timer;"},{"lineNumber":12,"author":{"gitId":"seaniy"},"content":"import java.util.TimerTask;"},{"lineNumber":13,"author":{"gitId":"seaniy"},"content":""},{"lineNumber":14,"author":{"gitId":"seaniy"},"content":"/**"},{"lineNumber":15,"author":{"gitId":"seaniy"},"content":" * Controller for duke.MainWindow. Provides the layout for the other controls."},{"lineNumber":16,"author":{"gitId":"seaniy"},"content":" */"},{"lineNumber":17,"author":{"gitId":"seaniy"},"content":"public class MainWindow extends AnchorPane {"},{"lineNumber":18,"author":{"gitId":"seaniy"},"content":"    @FXML"},{"lineNumber":19,"author":{"gitId":"seaniy"},"content":"    private ScrollPane scrollPane;"},{"lineNumber":20,"author":{"gitId":"seaniy"},"content":"    @FXML"},{"lineNumber":21,"author":{"gitId":"seaniy"},"content":"    private VBox dialogContainer;"},{"lineNumber":22,"author":{"gitId":"seaniy"},"content":"    @FXML"},{"lineNumber":23,"author":{"gitId":"seaniy"},"content":"    private TextField userInput;"},{"lineNumber":24,"author":{"gitId":"seaniy"},"content":"    @FXML"},{"lineNumber":25,"author":{"gitId":"seaniy"},"content":"    private Button sendButton;"},{"lineNumber":26,"author":{"gitId":"seaniy"},"content":""},{"lineNumber":27,"author":{"gitId":"seaniy"},"content":"    private Rick rick;"},{"lineNumber":28,"author":{"gitId":"seaniy"},"content":""},{"lineNumber":29,"author":{"gitId":"seaniy"},"content":"    private Image userImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/MortyAvatar.png\"));"},{"lineNumber":30,"author":{"gitId":"seaniy"},"content":"    private Image dukeImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/RickAvatar.png\"));"},{"lineNumber":31,"author":{"gitId":"seaniy"},"content":""},{"lineNumber":32,"author":{"gitId":"seaniy"},"content":"    @FXML"},{"lineNumber":33,"author":{"gitId":"seaniy"},"content":"    public void initialize() {"},{"lineNumber":34,"author":{"gitId":"seaniy"},"content":"        scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());"},{"lineNumber":35,"author":{"gitId":"seaniy"},"content":"        dialogContainer.getChildren().add(DialogBox.getRickDialog(Gui.getWelcomeString(), dukeImage));"},{"lineNumber":36,"author":{"gitId":"seaniy"},"content":"    }"},{"lineNumber":37,"author":{"gitId":"seaniy"},"content":""},{"lineNumber":38,"author":{"gitId":"seaniy"},"content":"    public void setDuke(Rick d) {"},{"lineNumber":39,"author":{"gitId":"seaniy"},"content":"        rick \u003d d;"},{"lineNumber":40,"author":{"gitId":"seaniy"},"content":"    }"},{"lineNumber":41,"author":{"gitId":"seaniy"},"content":""},{"lineNumber":42,"author":{"gitId":"seaniy"},"content":"    /**"},{"lineNumber":43,"author":{"gitId":"seaniy"},"content":"     * Creates two dialog boxes, one echoing user input and the other containing Duke\u0027s reply and then appends them to"},{"lineNumber":44,"author":{"gitId":"seaniy"},"content":"     * the dialog container. Clears the user input after processing."},{"lineNumber":45,"author":{"gitId":"seaniy"},"content":"     */"},{"lineNumber":46,"author":{"gitId":"seaniy"},"content":"    @FXML"},{"lineNumber":47,"author":{"gitId":"seaniy"},"content":"    private void handleUserInput() {"},{"lineNumber":48,"author":{"gitId":"seaniy"},"content":"        String input \u003d userInput.getText();"},{"lineNumber":49,"author":{"gitId":"seaniy"},"content":"        String response \u003d rick.getResponse(input);"},{"lineNumber":50,"author":{"gitId":"seaniy"},"content":"        dialogContainer.getChildren().addAll("},{"lineNumber":51,"author":{"gitId":"seaniy"},"content":"                DialogBox.getUserDialog(input, userImage),"},{"lineNumber":52,"author":{"gitId":"seaniy"},"content":"                DialogBox.getRickDialog(response, dukeImage)"},{"lineNumber":53,"author":{"gitId":"seaniy"},"content":"        );"},{"lineNumber":54,"author":{"gitId":"seaniy"},"content":"        if (input.equalsIgnoreCase(Command.BYE.name())) {"},{"lineNumber":55,"author":{"gitId":"seaniy"},"content":"            TimerTask closeApp \u003d new TimerTask() {"},{"lineNumber":56,"author":{"gitId":"seaniy"},"content":"                public void run() {"},{"lineNumber":57,"author":{"gitId":"seaniy"},"content":"                    System.exit(0);"},{"lineNumber":58,"author":{"gitId":"seaniy"},"content":"                }"},{"lineNumber":59,"author":{"gitId":"seaniy"},"content":"            };"},{"lineNumber":60,"author":{"gitId":"seaniy"},"content":"            new Timer().schedule(closeApp, 1500);"},{"lineNumber":61,"author":{"gitId":"seaniy"},"content":"        }"},{"lineNumber":62,"author":{"gitId":"seaniy"},"content":"        userInput.clear();"},{"lineNumber":63,"author":{"gitId":"seaniy"},"content":"    }"},{"lineNumber":64,"author":{"gitId":"seaniy"},"content":"}"}],"authorContributionMap":{"seaniy":64}},{"path":"src/main/java/rick/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"seaniy"},"content":"package rick;"},{"lineNumber":2,"author":{"gitId":"seaniy"},"content":""},{"lineNumber":3,"author":{"gitId":"seaniy"},"content":"import rick.exceptions.*;"},{"lineNumber":4,"author":{"gitId":"seaniy"},"content":""},{"lineNumber":5,"author":{"gitId":"seaniy"},"content":"import java.time.LocalDate;"},{"lineNumber":6,"author":{"gitId":"seaniy"},"content":""},{"lineNumber":7,"author":{"gitId":"seaniy"},"content":"public class Parser {"},{"lineNumber":8,"author":{"gitId":"seaniy"},"content":"    public Command parseCommand(String input) throws RickException {"},{"lineNumber":9,"author":{"gitId":"seaniy"},"content":"        String[] inputBreakdown \u003d input.split(\" \", 2);"},{"lineNumber":10,"author":{"gitId":"seaniy"},"content":"        try {"},{"lineNumber":11,"author":{"gitId":"seaniy"},"content":"            return Command.valueOf(inputBreakdown[0].toUpperCase());"},{"lineNumber":12,"author":{"gitId":"seaniy"},"content":"        } catch (IllegalArgumentException error) {"},{"lineNumber":13,"author":{"gitId":"seaniy"},"content":"            throw new RickException();"},{"lineNumber":14,"author":{"gitId":"seaniy"},"content":"        }"},{"lineNumber":15,"author":{"gitId":"seaniy"},"content":"    }"},{"lineNumber":16,"author":{"gitId":"seaniy"},"content":""},{"lineNumber":17,"author":{"gitId":"seaniy"},"content":"    public int parseDoneCommand(String input) throws InvalidDoneCommandException, NumberFormatException {"},{"lineNumber":18,"author":{"gitId":"seaniy"},"content":"        String[] inputBreakdown \u003d input.split(\" \");"},{"lineNumber":19,"author":{"gitId":"seaniy"},"content":"        if(inputBreakdown.length !\u003d 2) {"},{"lineNumber":20,"author":{"gitId":"seaniy"},"content":"            throw new InvalidDoneCommandException();"},{"lineNumber":21,"author":{"gitId":"seaniy"},"content":"        }"},{"lineNumber":22,"author":{"gitId":"seaniy"},"content":"        return Integer.parseInt(inputBreakdown[1]) - 1;"},{"lineNumber":23,"author":{"gitId":"seaniy"},"content":"    }"},{"lineNumber":24,"author":{"gitId":"seaniy"},"content":""},{"lineNumber":25,"author":{"gitId":"seaniy"},"content":"    public int parseDeleteCommand(String input) throws InvalidDeleteCommandException {"},{"lineNumber":26,"author":{"gitId":"seaniy"},"content":"        String[] inputBreakdown \u003d input.split(\" \");"},{"lineNumber":27,"author":{"gitId":"seaniy"},"content":"        if(inputBreakdown.length !\u003d 2) {"},{"lineNumber":28,"author":{"gitId":"seaniy"},"content":"            throw new InvalidDeleteCommandException();"},{"lineNumber":29,"author":{"gitId":"seaniy"},"content":"        }"},{"lineNumber":30,"author":{"gitId":"seaniy"},"content":"        return Integer.parseInt(inputBreakdown[1]) - 1;"},{"lineNumber":31,"author":{"gitId":"seaniy"},"content":"    }"},{"lineNumber":32,"author":{"gitId":"seaniy"},"content":""},{"lineNumber":33,"author":{"gitId":"seaniy"},"content":"    public Todo parseTodoCommand(String input) throws InvalidTodoCommandException {"},{"lineNumber":34,"author":{"gitId":"seaniy"},"content":"        if(checkEmptyInput(input)) {"},{"lineNumber":35,"author":{"gitId":"seaniy"},"content":"            throw new InvalidTodoCommandException();"},{"lineNumber":36,"author":{"gitId":"seaniy"},"content":"        }"},{"lineNumber":37,"author":{"gitId":"seaniy"},"content":"        return new Todo(input.substring(5));"},{"lineNumber":38,"author":{"gitId":"seaniy"},"content":"    }"},{"lineNumber":39,"author":{"gitId":"seaniy"},"content":""},{"lineNumber":40,"author":{"gitId":"seaniy"},"content":"    public Deadline parseDeadlineCommand(String input) throws InvalidDeadlineCommandException, MissingFlagException {"},{"lineNumber":41,"author":{"gitId":"seaniy"},"content":"        if(checkEmptyInput(input) || checkMissingFlag(input, \"/by\")) {"},{"lineNumber":42,"author":{"gitId":"seaniy"},"content":"            throw new InvalidDeadlineCommandException();"},{"lineNumber":43,"author":{"gitId":"seaniy"},"content":"        }"},{"lineNumber":44,"author":{"gitId":"seaniy"},"content":"        String[] args \u003d input.substring(9).split(\" /by \");"},{"lineNumber":45,"author":{"gitId":"seaniy"},"content":"        return new Deadline(args[0], LocalDate.parse(args[1]));"},{"lineNumber":46,"author":{"gitId":"seaniy"},"content":"    }"},{"lineNumber":47,"author":{"gitId":"seaniy"},"content":""},{"lineNumber":48,"author":{"gitId":"seaniy"},"content":"    public Event parseEventCommand(String input) throws InvalidEventCommandException, MissingFlagException {"},{"lineNumber":49,"author":{"gitId":"seaniy"},"content":"        if(checkEmptyInput(input) || checkMissingFlag(input, \"/on\")) {"},{"lineNumber":50,"author":{"gitId":"seaniy"},"content":"            throw new InvalidEventCommandException();"},{"lineNumber":51,"author":{"gitId":"seaniy"},"content":"        }"},{"lineNumber":52,"author":{"gitId":"seaniy"},"content":"        String[] args \u003d input.substring(6).split(\" /on \");"},{"lineNumber":53,"author":{"gitId":"seaniy"},"content":"        return new Event(args[0], LocalDate.parse(args[1]));"},{"lineNumber":54,"author":{"gitId":"seaniy"},"content":"    }"},{"lineNumber":55,"author":{"gitId":"seaniy"},"content":""},{"lineNumber":56,"author":{"gitId":"seaniy"},"content":"    public String parseFindCommand(String input) throws InvalidFindCommandException {"},{"lineNumber":57,"author":{"gitId":"seaniy"},"content":"        if(checkEmptyInput(input)) {"},{"lineNumber":58,"author":{"gitId":"seaniy"},"content":"            throw new InvalidFindCommandException();"},{"lineNumber":59,"author":{"gitId":"seaniy"},"content":"        }"},{"lineNumber":60,"author":{"gitId":"seaniy"},"content":"        String keywords \u003d input.substring(5).toUpperCase();"},{"lineNumber":61,"author":{"gitId":"seaniy"},"content":"        return keywords;"},{"lineNumber":62,"author":{"gitId":"seaniy"},"content":"    }"},{"lineNumber":63,"author":{"gitId":"seaniy"},"content":""},{"lineNumber":64,"author":{"gitId":"seaniy"},"content":"    public boolean checkEmptyInput(String input) {"},{"lineNumber":65,"author":{"gitId":"seaniy"},"content":"        String[] inputBreakdown \u003d input.split(\" \");"},{"lineNumber":66,"author":{"gitId":"seaniy"},"content":"        if(inputBreakdown.length \u003c\u003d 1) {"},{"lineNumber":67,"author":{"gitId":"seaniy"},"content":"            return true;"},{"lineNumber":68,"author":{"gitId":"seaniy"},"content":"        }"},{"lineNumber":69,"author":{"gitId":"seaniy"},"content":"        return false;"},{"lineNumber":70,"author":{"gitId":"seaniy"},"content":"    }"},{"lineNumber":71,"author":{"gitId":"seaniy"},"content":""},{"lineNumber":72,"author":{"gitId":"seaniy"},"content":"    public boolean checkMissingFlag(String input, String flag) {"},{"lineNumber":73,"author":{"gitId":"seaniy"},"content":"        if(!input.contains(flag)) {"},{"lineNumber":74,"author":{"gitId":"seaniy"},"content":"            return true;"},{"lineNumber":75,"author":{"gitId":"seaniy"},"content":"        }"},{"lineNumber":76,"author":{"gitId":"seaniy"},"content":"        return false;"},{"lineNumber":77,"author":{"gitId":"seaniy"},"content":"    }"},{"lineNumber":78,"author":{"gitId":"seaniy"},"content":"}"}],"authorContributionMap":{"seaniy":78}},{"path":"src/main/java/rick/Rick.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"seaniy"},"content":"package rick;"},{"lineNumber":2,"author":{"gitId":"seaniy"},"content":""},{"lineNumber":3,"author":{"gitId":"seaniy"},"content":"import rick.exceptions.RickException;"},{"lineNumber":4,"author":{"gitId":"seaniy"},"content":""},{"lineNumber":5,"author":{"gitId":"seaniy"},"content":"import java.io.IOException;"},{"lineNumber":6,"author":{"gitId":"seaniy"},"content":"import java.time.format.DateTimeParseException;"},{"lineNumber":7,"author":{"gitId":"seaniy"},"content":""},{"lineNumber":8,"author":{"gitId":"seaniy"},"content":"/**"},{"lineNumber":9,"author":{"gitId":"seaniy"},"content":" * \u003ch1\u003eDuke\u003c/h1\u003e"},{"lineNumber":10,"author":{"gitId":"seaniy"},"content":" * The Duke program implements an application that is able to"},{"lineNumber":11,"author":{"gitId":"seaniy"},"content":" * read user inputs to record and save user\u0027s tasks."},{"lineNumber":12,"author":{"gitId":"seaniy"},"content":" *"},{"lineNumber":13,"author":{"gitId":"seaniy"},"content":" * @author A0200357R Sean Iau Yang"},{"lineNumber":14,"author":{"gitId":"seaniy"},"content":" */"},{"lineNumber":15,"author":{"gitId":"seaniy"},"content":"public class Rick {"},{"lineNumber":16,"author":{"gitId":"seaniy"},"content":"    private Storage storage;"},{"lineNumber":17,"author":{"gitId":"seaniy"},"content":"    private TaskList tasks;"},{"lineNumber":18,"author":{"gitId":"seaniy"},"content":"    private Parser parser;"},{"lineNumber":19,"author":{"gitId":"seaniy"},"content":"    private Ui ui;"},{"lineNumber":20,"author":{"gitId":"seaniy"},"content":""},{"lineNumber":21,"author":{"gitId":"seaniy"},"content":"    public Rick(String filePath) {"},{"lineNumber":22,"author":{"gitId":"seaniy"},"content":"        ui \u003d new Ui();"},{"lineNumber":23,"author":{"gitId":"seaniy"},"content":"        parser \u003d new Parser();"},{"lineNumber":24,"author":{"gitId":"seaniy"},"content":"        try {"},{"lineNumber":25,"author":{"gitId":"seaniy"},"content":"            storage \u003d new Storage(filePath, ui);"},{"lineNumber":26,"author":{"gitId":"seaniy"},"content":"            tasks \u003d new TaskList(storage.load());"},{"lineNumber":27,"author":{"gitId":"seaniy"},"content":"        } catch(IOException error) {"},{"lineNumber":28,"author":{"gitId":"seaniy"},"content":"            tasks \u003d new TaskList();"},{"lineNumber":29,"author":{"gitId":"seaniy"},"content":"            ui.showLoadingError();"},{"lineNumber":30,"author":{"gitId":"seaniy"},"content":"        }"},{"lineNumber":31,"author":{"gitId":"seaniy"},"content":"    }"},{"lineNumber":32,"author":{"gitId":"seaniy"},"content":""},{"lineNumber":33,"author":{"gitId":"seaniy"},"content":"    public String getResponse(String input) {"},{"lineNumber":34,"author":{"gitId":"seaniy"},"content":"        String response \u003d \"\";"},{"lineNumber":35,"author":{"gitId":"seaniy"},"content":"        try {"},{"lineNumber":36,"author":{"gitId":"seaniy"},"content":"            Command command \u003d parser.parseCommand(input);"},{"lineNumber":37,"author":{"gitId":"seaniy"},"content":"            switch(command) {"},{"lineNumber":38,"author":{"gitId":"seaniy"},"content":"                case BYE:"},{"lineNumber":39,"author":{"gitId":"seaniy"},"content":"                    response \u003d Gui.getGoodbyeString();"},{"lineNumber":40,"author":{"gitId":"seaniy"},"content":"                    storage.save(tasks);"},{"lineNumber":41,"author":{"gitId":"seaniy"},"content":"                    break;"},{"lineNumber":42,"author":{"gitId":"seaniy"},"content":"                case LIST:"},{"lineNumber":43,"author":{"gitId":"seaniy"},"content":"                    response \u003d Gui.getTasksString(tasks);"},{"lineNumber":44,"author":{"gitId":"seaniy"},"content":"                    break;"},{"lineNumber":45,"author":{"gitId":"seaniy"},"content":"                case DONE:"},{"lineNumber":46,"author":{"gitId":"seaniy"},"content":"                    int taskToMarkAsDone \u003d parser.parseDoneCommand(input);"},{"lineNumber":47,"author":{"gitId":"seaniy"},"content":"                    response \u003d Gui.getMessageString(\"Good work, Morty! I\u0027ve marked this task as done:\\n  \" + tasks.markTaskAsDone(taskToMarkAsDone));"},{"lineNumber":48,"author":{"gitId":"seaniy"},"content":"                    storage.save(tasks);"},{"lineNumber":49,"author":{"gitId":"seaniy"},"content":"                    break;"},{"lineNumber":50,"author":{"gitId":"seaniy"},"content":"                case DELETE:"},{"lineNumber":51,"author":{"gitId":"seaniy"},"content":"                    int taskToDelete \u003d parser.parseDeleteCommand(input);"},{"lineNumber":52,"author":{"gitId":"seaniy"},"content":"                    response \u003d Gui.getMessageString(\"Got it. I\u0027ve removed this task:\\n  \" + tasks.deleteTask(taskToDelete) + \"\\nNow you have \" + tasks.getSize() + \" tasks in the list.\");"},{"lineNumber":53,"author":{"gitId":"seaniy"},"content":"                    storage.save(tasks);"},{"lineNumber":54,"author":{"gitId":"seaniy"},"content":"                    break;"},{"lineNumber":55,"author":{"gitId":"seaniy"},"content":"                case TODO:"},{"lineNumber":56,"author":{"gitId":"seaniy"},"content":"                    Todo newTodo \u003d parser.parseTodoCommand(input);"},{"lineNumber":57,"author":{"gitId":"seaniy"},"content":"                    tasks.addTask(newTodo);"},{"lineNumber":58,"author":{"gitId":"seaniy"},"content":"                    response \u003d Gui.getMessageString(\"Got it. I\u0027ve added this task:\\n  \" + newTodo + \"\\nNow you have \" + tasks.getSize() + \" tasks in the list.\");"},{"lineNumber":59,"author":{"gitId":"seaniy"},"content":"                    storage.save(tasks);"},{"lineNumber":60,"author":{"gitId":"seaniy"},"content":"                    break;"},{"lineNumber":61,"author":{"gitId":"seaniy"},"content":"                case DEADLINE:"},{"lineNumber":62,"author":{"gitId":"seaniy"},"content":"                    Deadline newDeadline \u003d parser.parseDeadlineCommand(input);"},{"lineNumber":63,"author":{"gitId":"seaniy"},"content":"                    tasks.addTask(newDeadline);"},{"lineNumber":64,"author":{"gitId":"seaniy"},"content":"                    response \u003d Gui.getMessageString(\"Got it. I\u0027ve added this task:\\n  \" + newDeadline + \"\\nNow you have \" + tasks.getSize() + \" tasks in the list.\");"},{"lineNumber":65,"author":{"gitId":"seaniy"},"content":"                    storage.save(tasks);"},{"lineNumber":66,"author":{"gitId":"seaniy"},"content":"                    break;"},{"lineNumber":67,"author":{"gitId":"seaniy"},"content":"                case EVENT:"},{"lineNumber":68,"author":{"gitId":"seaniy"},"content":"                    Event newEvent \u003d parser.parseEventCommand(input);"},{"lineNumber":69,"author":{"gitId":"seaniy"},"content":"                    tasks.addTask(newEvent);"},{"lineNumber":70,"author":{"gitId":"seaniy"},"content":"                    response \u003d Gui.getMessageString(\"Got it. I\u0027ve added this task:\\n  \" + newEvent + \"\\nNow you have \" + tasks.getSize() + \" tasks in the list.\");"},{"lineNumber":71,"author":{"gitId":"seaniy"},"content":"                    storage.save(tasks);"},{"lineNumber":72,"author":{"gitId":"seaniy"},"content":"                    break;"},{"lineNumber":73,"author":{"gitId":"seaniy"},"content":"                case FIND:"},{"lineNumber":74,"author":{"gitId":"seaniy"},"content":"                    String keywords \u003d parser.parseFindCommand(input);"},{"lineNumber":75,"author":{"gitId":"seaniy"},"content":"                    TaskList foundTasks \u003d tasks.findTasks(keywords);"},{"lineNumber":76,"author":{"gitId":"seaniy"},"content":"                    response \u003d Gui.getFoundTasksString(foundTasks);"},{"lineNumber":77,"author":{"gitId":"seaniy"},"content":"                    break;"},{"lineNumber":78,"author":{"gitId":"seaniy"},"content":"                case HELP:"},{"lineNumber":79,"author":{"gitId":"seaniy"},"content":"                    response \u003d Gui.getHelpMessageString();"},{"lineNumber":80,"author":{"gitId":"seaniy"},"content":"                    break;"},{"lineNumber":81,"author":{"gitId":"seaniy"},"content":"                default:"},{"lineNumber":82,"author":{"gitId":"seaniy"},"content":"                    assert false : command;"},{"lineNumber":83,"author":{"gitId":"seaniy"},"content":"                    break;"},{"lineNumber":84,"author":{"gitId":"seaniy"},"content":"            }"},{"lineNumber":85,"author":{"gitId":"seaniy"},"content":"        } catch(RickException error) {"},{"lineNumber":86,"author":{"gitId":"seaniy"},"content":"            response \u003d Gui.getErrorMessageString(error.getMessage());"},{"lineNumber":87,"author":{"gitId":"seaniy"},"content":"        } catch(DateTimeParseException error) {"},{"lineNumber":88,"author":{"gitId":"seaniy"},"content":"            response \u003d Gui.getErrorMessageString(\"The date provided is invalid.\\nValid format: yyyy-mm-dd\");"},{"lineNumber":89,"author":{"gitId":"seaniy"},"content":"        } catch (IndexOutOfBoundsException error) {"},{"lineNumber":90,"author":{"gitId":"seaniy"},"content":"            response \u003d Gui.getErrorMessageString(\"Selected item does not exist.\");"},{"lineNumber":91,"author":{"gitId":"seaniy"},"content":"        } catch (NumberFormatException error) {"},{"lineNumber":92,"author":{"gitId":"seaniy"},"content":"            response \u003d Gui.getErrorMessageString(\"Invalid task index number.\");"},{"lineNumber":93,"author":{"gitId":"seaniy"},"content":"        } catch (IOException error) {"},{"lineNumber":94,"author":{"gitId":"seaniy"},"content":"            response \u003d Gui.getSavingErrorString();"},{"lineNumber":95,"author":{"gitId":"seaniy"},"content":"        }"},{"lineNumber":96,"author":{"gitId":"seaniy"},"content":"        return response;"},{"lineNumber":97,"author":{"gitId":"seaniy"},"content":"    }"},{"lineNumber":98,"author":{"gitId":"seaniy"},"content":"}"}],"authorContributionMap":{"seaniy":98}},{"path":"src/main/java/rick/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"seaniy"},"content":"package rick;"},{"lineNumber":2,"author":{"gitId":"seaniy"},"content":""},{"lineNumber":3,"author":{"gitId":"seaniy"},"content":"import rick.exceptions.RickException;"},{"lineNumber":4,"author":{"gitId":"seaniy"},"content":""},{"lineNumber":5,"author":{"gitId":"seaniy"},"content":"import java.io.File;"},{"lineNumber":6,"author":{"gitId":"seaniy"},"content":"import java.io.FileWriter;"},{"lineNumber":7,"author":{"gitId":"seaniy"},"content":"import java.io.IOException;"},{"lineNumber":8,"author":{"gitId":"seaniy"},"content":"import java.time.LocalDate;"},{"lineNumber":9,"author":{"gitId":"seaniy"},"content":"import java.time.format.DateTimeFormatter;"},{"lineNumber":10,"author":{"gitId":"seaniy"},"content":"import java.time.format.DateTimeParseException;"},{"lineNumber":11,"author":{"gitId":"seaniy"},"content":"import java.util.ArrayList;"},{"lineNumber":12,"author":{"gitId":"seaniy"},"content":"import java.util.List;"},{"lineNumber":13,"author":{"gitId":"seaniy"},"content":"import java.util.Scanner;"},{"lineNumber":14,"author":{"gitId":"seaniy"},"content":""},{"lineNumber":15,"author":{"gitId":"seaniy"},"content":"public class Storage {"},{"lineNumber":16,"author":{"gitId":"seaniy"},"content":"    private String filePath;"},{"lineNumber":17,"author":{"gitId":"seaniy"},"content":"    private File file;"},{"lineNumber":18,"author":{"gitId":"seaniy"},"content":"    private Ui ui;"},{"lineNumber":19,"author":{"gitId":"seaniy"},"content":""},{"lineNumber":20,"author":{"gitId":"seaniy"},"content":"    public Storage(String filePath, Ui ui) throws IOException {"},{"lineNumber":21,"author":{"gitId":"seaniy"},"content":"        this.filePath \u003d filePath;"},{"lineNumber":22,"author":{"gitId":"seaniy"},"content":"        this.ui \u003d ui;"},{"lineNumber":23,"author":{"gitId":"seaniy"},"content":"        file \u003d new File(this.filePath);"},{"lineNumber":24,"author":{"gitId":"seaniy"},"content":"        if(!file.exists()) {"},{"lineNumber":25,"author":{"gitId":"seaniy"},"content":"            File parentDirectory \u003d file.getParentFile();"},{"lineNumber":26,"author":{"gitId":"seaniy"},"content":"            if(!parentDirectory.exists()) {"},{"lineNumber":27,"author":{"gitId":"seaniy"},"content":"                parentDirectory.mkdir();"},{"lineNumber":28,"author":{"gitId":"seaniy"},"content":"            }"},{"lineNumber":29,"author":{"gitId":"seaniy"},"content":"            file.createNewFile();"},{"lineNumber":30,"author":{"gitId":"seaniy"},"content":"        }"},{"lineNumber":31,"author":{"gitId":"seaniy"},"content":"    }"},{"lineNumber":32,"author":{"gitId":"seaniy"},"content":""},{"lineNumber":33,"author":{"gitId":"seaniy"},"content":"    public void save(TaskList taskList) throws IOException {"},{"lineNumber":34,"author":{"gitId":"seaniy"},"content":"        StringBuilder data \u003d new StringBuilder();"},{"lineNumber":35,"author":{"gitId":"seaniy"},"content":"        FileWriter writer \u003d new FileWriter(filePath);"},{"lineNumber":36,"author":{"gitId":"seaniy"},"content":"        for(int i \u003d 0; i \u003c taskList.getSize(); i++) {"},{"lineNumber":37,"author":{"gitId":"seaniy"},"content":"            data.append(taskList.getTask(i));"},{"lineNumber":38,"author":{"gitId":"seaniy"},"content":"            if(i \u003c taskList.getSize() - 1) {"},{"lineNumber":39,"author":{"gitId":"seaniy"},"content":"                data.append(\"\\n\");"},{"lineNumber":40,"author":{"gitId":"seaniy"},"content":"            }"},{"lineNumber":41,"author":{"gitId":"seaniy"},"content":"        }"},{"lineNumber":42,"author":{"gitId":"seaniy"},"content":"        writer.write(data.toString());"},{"lineNumber":43,"author":{"gitId":"seaniy"},"content":"        writer.close();"},{"lineNumber":44,"author":{"gitId":"seaniy"},"content":"    }"},{"lineNumber":45,"author":{"gitId":"seaniy"},"content":""},{"lineNumber":46,"author":{"gitId":"seaniy"},"content":"    public List\u003cTask\u003e load() throws IOException {"},{"lineNumber":47,"author":{"gitId":"seaniy"},"content":"        List\u003cTask\u003e data \u003d new ArrayList\u003c\u003e();"},{"lineNumber":48,"author":{"gitId":"seaniy"},"content":"        Scanner fileReader \u003d new Scanner(file);"},{"lineNumber":49,"author":{"gitId":"seaniy"},"content":"        while(fileReader.hasNextLine()) {"},{"lineNumber":50,"author":{"gitId":"seaniy"},"content":"            String[] taskInfo \u003d fileReader.nextLine().split(\" \\\\| \");"},{"lineNumber":51,"author":{"gitId":"seaniy"},"content":"            Task currentTask;"},{"lineNumber":52,"author":{"gitId":"seaniy"},"content":"            switch(taskInfo[0]) {"},{"lineNumber":53,"author":{"gitId":"seaniy"},"content":"                case \"T\":"},{"lineNumber":54,"author":{"gitId":"seaniy"},"content":"                    currentTask \u003d new Todo(taskInfo[2], taskInfo[1].equals(\"\\u2713\"));"},{"lineNumber":55,"author":{"gitId":"seaniy"},"content":"                    data.add(currentTask);"},{"lineNumber":56,"author":{"gitId":"seaniy"},"content":"                    break;"},{"lineNumber":57,"author":{"gitId":"seaniy"},"content":"                case \"D\":"},{"lineNumber":58,"author":{"gitId":"seaniy"},"content":"                    String deadlineDate \u003d taskInfo[3].replaceAll(\" \", \"-\");"},{"lineNumber":59,"author":{"gitId":"seaniy"},"content":"                    currentTask \u003d new Deadline(taskInfo[2], LocalDate.parse(deadlineDate, DateTimeFormatter.ofPattern(\"dd-MMM-yyyy\")), taskInfo[1].equals(\"\\u2713\"));"},{"lineNumber":60,"author":{"gitId":"seaniy"},"content":"                    data.add(currentTask);"},{"lineNumber":61,"author":{"gitId":"seaniy"},"content":"                    break;"},{"lineNumber":62,"author":{"gitId":"seaniy"},"content":"                case \"E\":"},{"lineNumber":63,"author":{"gitId":"seaniy"},"content":"                    String eventDate \u003d taskInfo[3].replaceAll(\" \", \"-\");"},{"lineNumber":64,"author":{"gitId":"seaniy"},"content":"                    currentTask \u003d new Event(taskInfo[2], LocalDate.parse(eventDate, DateTimeFormatter.ofPattern(\"dd-MMM-yyyy\")), taskInfo[1].equals(\"\\u2713\"));"},{"lineNumber":65,"author":{"gitId":"seaniy"},"content":"                    data.add(currentTask);"},{"lineNumber":66,"author":{"gitId":"seaniy"},"content":"                    break;"},{"lineNumber":67,"author":{"gitId":"seaniy"},"content":"                default:"},{"lineNumber":68,"author":{"gitId":"seaniy"},"content":"                    assert false : taskInfo[0];"},{"lineNumber":69,"author":{"gitId":"seaniy"},"content":"                    break;"},{"lineNumber":70,"author":{"gitId":"seaniy"},"content":"            }"},{"lineNumber":71,"author":{"gitId":"seaniy"},"content":"        }"},{"lineNumber":72,"author":{"gitId":"seaniy"},"content":"        return data;"},{"lineNumber":73,"author":{"gitId":"seaniy"},"content":"    }"},{"lineNumber":74,"author":{"gitId":"seaniy"},"content":"}"}],"authorContributionMap":{"seaniy":74}},{"path":"src/main/java/rick/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"seaniy"},"content":"package rick;"},{"lineNumber":2,"author":{"gitId":"seaniy"},"content":""},{"lineNumber":3,"author":{"gitId":"seaniy"},"content":"import rick.exceptions.TaskAlreadyDoneException;"},{"lineNumber":4,"author":{"gitId":"seaniy"},"content":""},{"lineNumber":5,"author":{"gitId":"seaniy"},"content":"/**"},{"lineNumber":6,"author":{"gitId":"seaniy"},"content":" * Represents a task. A \u003ccode\u003eTask\u003c/code\u003e object corresponds"},{"lineNumber":7,"author":{"gitId":"seaniy"},"content":" * to a task description supplied by the user. eg., \u003ccode\u003erunning\u003c/code\u003e"},{"lineNumber":8,"author":{"gitId":"seaniy"},"content":" */"},{"lineNumber":9,"author":{"gitId":"seaniy"},"content":"public class Task {"},{"lineNumber":10,"author":{"gitId":"seaniy"},"content":"    private String description;"},{"lineNumber":11,"author":{"gitId":"seaniy"},"content":"    private boolean isDone;"},{"lineNumber":12,"author":{"gitId":"seaniy"},"content":""},{"lineNumber":13,"author":{"gitId":"seaniy"},"content":"    public Task(String description) {"},{"lineNumber":14,"author":{"gitId":"seaniy"},"content":"        this.description \u003d description;"},{"lineNumber":15,"author":{"gitId":"seaniy"},"content":"        isDone \u003d false;"},{"lineNumber":16,"author":{"gitId":"seaniy"},"content":"    }"},{"lineNumber":17,"author":{"gitId":"seaniy"},"content":""},{"lineNumber":18,"author":{"gitId":"seaniy"},"content":"    public Task(String description, boolean isDone) {"},{"lineNumber":19,"author":{"gitId":"seaniy"},"content":"        this.description \u003d description;"},{"lineNumber":20,"author":{"gitId":"seaniy"},"content":"        this.isDone \u003d isDone;"},{"lineNumber":21,"author":{"gitId":"seaniy"},"content":"    }"},{"lineNumber":22,"author":{"gitId":"seaniy"},"content":""},{"lineNumber":23,"author":{"gitId":"seaniy"},"content":"    /**"},{"lineNumber":24,"author":{"gitId":"seaniy"},"content":"     * This method is used to return the status icon of the task."},{"lineNumber":25,"author":{"gitId":"seaniy"},"content":"     * If the task is done, ✓ is returned. Else, ✘ is returned."},{"lineNumber":26,"author":{"gitId":"seaniy"},"content":"     *"},{"lineNumber":27,"author":{"gitId":"seaniy"},"content":"     * @return String representation for the status icon."},{"lineNumber":28,"author":{"gitId":"seaniy"},"content":"     */"},{"lineNumber":29,"author":{"gitId":"seaniy"},"content":"    public String getStatusIcon() {"},{"lineNumber":30,"author":{"gitId":"seaniy"},"content":"        return (isDone ? \"\\u2713\" : \"\\u2718\");"},{"lineNumber":31,"author":{"gitId":"seaniy"},"content":"    }"},{"lineNumber":32,"author":{"gitId":"seaniy"},"content":""},{"lineNumber":33,"author":{"gitId":"seaniy"},"content":"    /**"},{"lineNumber":34,"author":{"gitId":"seaniy"},"content":"     * This method is used to return the \u003ccode\u003eTask\u003c/code\u003e object"},{"lineNumber":35,"author":{"gitId":"seaniy"},"content":"     * after setting isDone to true."},{"lineNumber":36,"author":{"gitId":"seaniy"},"content":"     *"},{"lineNumber":37,"author":{"gitId":"seaniy"},"content":"     * @return Current instance of \u003ccode\u003eTask\u003c/code\u003e object."},{"lineNumber":38,"author":{"gitId":"seaniy"},"content":"     */"},{"lineNumber":39,"author":{"gitId":"seaniy"},"content":"    public Task markAsDone() throws TaskAlreadyDoneException {"},{"lineNumber":40,"author":{"gitId":"seaniy"},"content":"        if(isDone) {"},{"lineNumber":41,"author":{"gitId":"seaniy"},"content":"            throw new TaskAlreadyDoneException();"},{"lineNumber":42,"author":{"gitId":"seaniy"},"content":"        }"},{"lineNumber":43,"author":{"gitId":"seaniy"},"content":"        assert isDone : \"Task is not marked as done yet\";"},{"lineNumber":44,"author":{"gitId":"seaniy"},"content":"        isDone \u003d true;"},{"lineNumber":45,"author":{"gitId":"seaniy"},"content":"        return this;"},{"lineNumber":46,"author":{"gitId":"seaniy"},"content":"    }"},{"lineNumber":47,"author":{"gitId":"seaniy"},"content":""},{"lineNumber":48,"author":{"gitId":"seaniy"},"content":"    /**"},{"lineNumber":49,"author":{"gitId":"seaniy"},"content":"     * This method is used to return the description of"},{"lineNumber":50,"author":{"gitId":"seaniy"},"content":"     * the \u003ccode\u003eTask\u003c/code\u003e."},{"lineNumber":51,"author":{"gitId":"seaniy"},"content":"     *"},{"lineNumber":52,"author":{"gitId":"seaniy"},"content":"     * @return Description of the current instance of"},{"lineNumber":53,"author":{"gitId":"seaniy"},"content":"     * \u003ccode\u003eTask\u003c/code\u003e object."},{"lineNumber":54,"author":{"gitId":"seaniy"},"content":"     */"},{"lineNumber":55,"author":{"gitId":"seaniy"},"content":"    public String getDescription() {"},{"lineNumber":56,"author":{"gitId":"seaniy"},"content":"        return description;"},{"lineNumber":57,"author":{"gitId":"seaniy"},"content":"    }"},{"lineNumber":58,"author":{"gitId":"seaniy"},"content":""},{"lineNumber":59,"author":{"gitId":"seaniy"},"content":"    @Override"},{"lineNumber":60,"author":{"gitId":"seaniy"},"content":"    public String toString() {"},{"lineNumber":61,"author":{"gitId":"seaniy"},"content":"        return getStatusIcon() + \" | \" + description;"},{"lineNumber":62,"author":{"gitId":"seaniy"},"content":"    }"},{"lineNumber":63,"author":{"gitId":"seaniy"},"content":"}"}],"authorContributionMap":{"seaniy":63}},{"path":"src/main/java/rick/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"seaniy"},"content":"package rick;"},{"lineNumber":2,"author":{"gitId":"seaniy"},"content":""},{"lineNumber":3,"author":{"gitId":"seaniy"},"content":"import rick.exceptions.TaskAlreadyDoneException;"},{"lineNumber":4,"author":{"gitId":"seaniy"},"content":""},{"lineNumber":5,"author":{"gitId":"seaniy"},"content":"import java.util.ArrayList;"},{"lineNumber":6,"author":{"gitId":"seaniy"},"content":"import java.util.List;"},{"lineNumber":7,"author":{"gitId":"seaniy"},"content":"import java.util.Locale;"},{"lineNumber":8,"author":{"gitId":"seaniy"},"content":""},{"lineNumber":9,"author":{"gitId":"seaniy"},"content":"/**"},{"lineNumber":10,"author":{"gitId":"seaniy"},"content":" * Represents a list of \u003ccode\u003eTask\u003c/code\u003e objects."},{"lineNumber":11,"author":{"gitId":"seaniy"},"content":" *"},{"lineNumber":12,"author":{"gitId":"seaniy"},"content":" * @see Task"},{"lineNumber":13,"author":{"gitId":"seaniy"},"content":" */"},{"lineNumber":14,"author":{"gitId":"seaniy"},"content":"public class TaskList {"},{"lineNumber":15,"author":{"gitId":"seaniy"},"content":"    private List\u003cTask\u003e tasks;"},{"lineNumber":16,"author":{"gitId":"seaniy"},"content":""},{"lineNumber":17,"author":{"gitId":"seaniy"},"content":"    public TaskList() {"},{"lineNumber":18,"author":{"gitId":"seaniy"},"content":"        tasks \u003d new ArrayList\u003c\u003e();"},{"lineNumber":19,"author":{"gitId":"seaniy"},"content":"    }"},{"lineNumber":20,"author":{"gitId":"seaniy"},"content":""},{"lineNumber":21,"author":{"gitId":"seaniy"},"content":"    public TaskList(List\u003cTask\u003e tasks) {"},{"lineNumber":22,"author":{"gitId":"seaniy"},"content":"        this.tasks \u003d tasks;"},{"lineNumber":23,"author":{"gitId":"seaniy"},"content":"    }"},{"lineNumber":24,"author":{"gitId":"seaniy"},"content":""},{"lineNumber":25,"author":{"gitId":"seaniy"},"content":"    /**"},{"lineNumber":26,"author":{"gitId":"seaniy"},"content":"     * This method adds a Task object to the list."},{"lineNumber":27,"author":{"gitId":"seaniy"},"content":"     *"},{"lineNumber":28,"author":{"gitId":"seaniy"},"content":"     * @param task A \u003ccode\u003eTask\u003c/code\u003e object."},{"lineNumber":29,"author":{"gitId":"seaniy"},"content":"     */"},{"lineNumber":30,"author":{"gitId":"seaniy"},"content":"    public void addTask(Task task) {"},{"lineNumber":31,"author":{"gitId":"seaniy"},"content":"        tasks.add(task);"},{"lineNumber":32,"author":{"gitId":"seaniy"},"content":"    }"},{"lineNumber":33,"author":{"gitId":"seaniy"},"content":""},{"lineNumber":34,"author":{"gitId":"seaniy"},"content":"    /**"},{"lineNumber":35,"author":{"gitId":"seaniy"},"content":"     * This method deletes the selected \u003ccode\u003eTask\u003c/code\u003e object."},{"lineNumber":36,"author":{"gitId":"seaniy"},"content":"     *"},{"lineNumber":37,"author":{"gitId":"seaniy"},"content":"     * @param index The index of the selected \u003ccode\u003eTask\u003c/code\u003e to delete."},{"lineNumber":38,"author":{"gitId":"seaniy"},"content":"     * @return The deleted \u003ccode\u003eTask\u003c/code\u003e object."},{"lineNumber":39,"author":{"gitId":"seaniy"},"content":"     */"},{"lineNumber":40,"author":{"gitId":"seaniy"},"content":"    public Task deleteTask(int index) {"},{"lineNumber":41,"author":{"gitId":"seaniy"},"content":"        Task deletedTask \u003d tasks.remove(index);"},{"lineNumber":42,"author":{"gitId":"seaniy"},"content":"        assert !tasks.contains(deletedTask) : \"Task is not deleted from list\";"},{"lineNumber":43,"author":{"gitId":"seaniy"},"content":"        return deletedTask;"},{"lineNumber":44,"author":{"gitId":"seaniy"},"content":"    }"},{"lineNumber":45,"author":{"gitId":"seaniy"},"content":""},{"lineNumber":46,"author":{"gitId":"seaniy"},"content":"    /**"},{"lineNumber":47,"author":{"gitId":"seaniy"},"content":"     * This method is used to mark the selected \u003ccode\u003eTask\u003c/code\u003e"},{"lineNumber":48,"author":{"gitId":"seaniy"},"content":"     * as done."},{"lineNumber":49,"author":{"gitId":"seaniy"},"content":"     *"},{"lineNumber":50,"author":{"gitId":"seaniy"},"content":"     * @param index The index of \u003ccode\u003eTask\u003c/code\u003e to mark as done."},{"lineNumber":51,"author":{"gitId":"seaniy"},"content":"     * @return The selected \u003ccode\u003eTask\u003c/code\u003e object."},{"lineNumber":52,"author":{"gitId":"seaniy"},"content":"     */"},{"lineNumber":53,"author":{"gitId":"seaniy"},"content":"    public Task markTaskAsDone(int index) throws TaskAlreadyDoneException {"},{"lineNumber":54,"author":{"gitId":"seaniy"},"content":"        return tasks.get(index).markAsDone();"},{"lineNumber":55,"author":{"gitId":"seaniy"},"content":"    }"},{"lineNumber":56,"author":{"gitId":"seaniy"},"content":""},{"lineNumber":57,"author":{"gitId":"seaniy"},"content":"    /**"},{"lineNumber":58,"author":{"gitId":"seaniy"},"content":"     * This method is used to get the selected \u003ccode\u003eTask\u003c/code\u003e object."},{"lineNumber":59,"author":{"gitId":"seaniy"},"content":"     *"},{"lineNumber":60,"author":{"gitId":"seaniy"},"content":"     * @param index The index of \u003ccode\u003eTask\u003c/code\u003e to get."},{"lineNumber":61,"author":{"gitId":"seaniy"},"content":"     * @return The selected \u003ccode\u003eTask\u003c/code\u003e object."},{"lineNumber":62,"author":{"gitId":"seaniy"},"content":"     */"},{"lineNumber":63,"author":{"gitId":"seaniy"},"content":"    public Task getTask(int index) {"},{"lineNumber":64,"author":{"gitId":"seaniy"},"content":"        return tasks.get(index);"},{"lineNumber":65,"author":{"gitId":"seaniy"},"content":"    }"},{"lineNumber":66,"author":{"gitId":"seaniy"},"content":""},{"lineNumber":67,"author":{"gitId":"seaniy"},"content":"    /**"},{"lineNumber":68,"author":{"gitId":"seaniy"},"content":"     * This method is used to find a list of tasks that match the specified keywords."},{"lineNumber":69,"author":{"gitId":"seaniy"},"content":"     *"},{"lineNumber":70,"author":{"gitId":"seaniy"},"content":"     * @param keywords The specified keywords to find tasks."},{"lineNumber":71,"author":{"gitId":"seaniy"},"content":"     * @return \u003ccode\u003eTaskList\u003c/code\u003e of tasks that match the specified keywords."},{"lineNumber":72,"author":{"gitId":"seaniy"},"content":"     * @see TaskList"},{"lineNumber":73,"author":{"gitId":"seaniy"},"content":"     */"},{"lineNumber":74,"author":{"gitId":"seaniy"},"content":"    public TaskList findTasks(String keywords) {"},{"lineNumber":75,"author":{"gitId":"seaniy"},"content":"        TaskList foundTasks \u003d new TaskList();"},{"lineNumber":76,"author":{"gitId":"seaniy"},"content":"        for(Task task : tasks) {"},{"lineNumber":77,"author":{"gitId":"seaniy"},"content":"            System.out.println(task.getClass().getName().substring(5));"},{"lineNumber":78,"author":{"gitId":"seaniy"},"content":"            if(task.getDescription().toUpperCase().contains(keywords) || task.getClass().getName().toUpperCase().substring(5).equals(keywords)) {"},{"lineNumber":79,"author":{"gitId":"seaniy"},"content":"                foundTasks.addTask(task);"},{"lineNumber":80,"author":{"gitId":"seaniy"},"content":"            }"},{"lineNumber":81,"author":{"gitId":"seaniy"},"content":"        }"},{"lineNumber":82,"author":{"gitId":"seaniy"},"content":"        return foundTasks;"},{"lineNumber":83,"author":{"gitId":"seaniy"},"content":"    }"},{"lineNumber":84,"author":{"gitId":"seaniy"},"content":""},{"lineNumber":85,"author":{"gitId":"seaniy"},"content":"    /**"},{"lineNumber":86,"author":{"gitId":"seaniy"},"content":"     * This method is used to check whether the list is empty."},{"lineNumber":87,"author":{"gitId":"seaniy"},"content":"     *"},{"lineNumber":88,"author":{"gitId":"seaniy"},"content":"     * @return True if list is empty. Else, false."},{"lineNumber":89,"author":{"gitId":"seaniy"},"content":"     */"},{"lineNumber":90,"author":{"gitId":"seaniy"},"content":"    public boolean isEmpty() {"},{"lineNumber":91,"author":{"gitId":"seaniy"},"content":"        return tasks.isEmpty();"},{"lineNumber":92,"author":{"gitId":"seaniy"},"content":"    }"},{"lineNumber":93,"author":{"gitId":"seaniy"},"content":""},{"lineNumber":94,"author":{"gitId":"seaniy"},"content":"    /**"},{"lineNumber":95,"author":{"gitId":"seaniy"},"content":"     * This method is used to get size of list."},{"lineNumber":96,"author":{"gitId":"seaniy"},"content":"     *"},{"lineNumber":97,"author":{"gitId":"seaniy"},"content":"     * @return Size of the list."},{"lineNumber":98,"author":{"gitId":"seaniy"},"content":"     */"},{"lineNumber":99,"author":{"gitId":"seaniy"},"content":"    public int getSize() {"},{"lineNumber":100,"author":{"gitId":"seaniy"},"content":"        return tasks.size();"},{"lineNumber":101,"author":{"gitId":"seaniy"},"content":"    }"},{"lineNumber":102,"author":{"gitId":"seaniy"},"content":"}"}],"authorContributionMap":{"seaniy":102}},{"path":"src/main/java/rick/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"seaniy"},"content":"package rick;"},{"lineNumber":2,"author":{"gitId":"seaniy"},"content":""},{"lineNumber":3,"author":{"gitId":"seaniy"},"content":"/**"},{"lineNumber":4,"author":{"gitId":"seaniy"},"content":" * A child of \u003ccode\u003eTask\u003c/code\u003e object, corresponds to a todo task with"},{"lineNumber":5,"author":{"gitId":"seaniy"},"content":" * description supplied by the user. eg., \u003ccode\u003ebuy cake\u003c/code\u003e"},{"lineNumber":6,"author":{"gitId":"seaniy"},"content":" *"},{"lineNumber":7,"author":{"gitId":"seaniy"},"content":" * @see Task"},{"lineNumber":8,"author":{"gitId":"seaniy"},"content":" */"},{"lineNumber":9,"author":{"gitId":"seaniy"},"content":"public class Todo extends Task {"},{"lineNumber":10,"author":{"gitId":"seaniy"},"content":"    public Todo(String description) {"},{"lineNumber":11,"author":{"gitId":"seaniy"},"content":"        super(description);"},{"lineNumber":12,"author":{"gitId":"seaniy"},"content":"    }"},{"lineNumber":13,"author":{"gitId":"seaniy"},"content":""},{"lineNumber":14,"author":{"gitId":"seaniy"},"content":"    public Todo(String description, boolean isDone) {"},{"lineNumber":15,"author":{"gitId":"seaniy"},"content":"        super(description, isDone);"},{"lineNumber":16,"author":{"gitId":"seaniy"},"content":"    }"},{"lineNumber":17,"author":{"gitId":"seaniy"},"content":""},{"lineNumber":18,"author":{"gitId":"seaniy"},"content":"    @Override"},{"lineNumber":19,"author":{"gitId":"seaniy"},"content":"    public String toString() {"},{"lineNumber":20,"author":{"gitId":"seaniy"},"content":"        return \"T | \" + super.toString();"},{"lineNumber":21,"author":{"gitId":"seaniy"},"content":"    }"},{"lineNumber":22,"author":{"gitId":"seaniy"},"content":"}"}],"authorContributionMap":{"seaniy":22}},{"path":"src/main/java/rick/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"seaniy"},"content":"package rick;"},{"lineNumber":2,"author":{"gitId":"seaniy"},"content":""},{"lineNumber":3,"author":{"gitId":"seaniy"},"content":"/**"},{"lineNumber":4,"author":{"gitId":"seaniy"},"content":" * Handles interactions with the user using a \u003ccode\u003eUi\u003c/code\u003e object."},{"lineNumber":5,"author":{"gitId":"seaniy"},"content":" */"},{"lineNumber":6,"author":{"gitId":"seaniy"},"content":"public class Ui {"},{"lineNumber":7,"author":{"gitId":"seaniy"},"content":"    public static final String logo \u003d \" ____        _\\n\""},{"lineNumber":8,"author":{"gitId":"seaniy"},"content":"            + \"|  _ \\\\ _   _| | _____ \\n\""},{"lineNumber":9,"author":{"gitId":"seaniy"},"content":"            + \"| | | | | | | |/ / _ \\\\\\n\""},{"lineNumber":10,"author":{"gitId":"seaniy"},"content":"            + \"| |_| | |_| |   \u003c  __/\\n\""},{"lineNumber":11,"author":{"gitId":"seaniy"},"content":"            + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\";"},{"lineNumber":12,"author":{"gitId":"seaniy"},"content":"    public static final String divider \u003d \"____________________________________________________________\\n\";"},{"lineNumber":13,"author":{"gitId":"seaniy"},"content":""},{"lineNumber":14,"author":{"gitId":"seaniy"},"content":"    /**"},{"lineNumber":15,"author":{"gitId":"seaniy"},"content":"     * This method is used to output an input error message."},{"lineNumber":16,"author":{"gitId":"seaniy"},"content":"     */"},{"lineNumber":17,"author":{"gitId":"seaniy"},"content":"    public void showInputError() {"},{"lineNumber":18,"author":{"gitId":"seaniy"},"content":"        showMessage(\"I\u0027m sorry, but I don\u0027t know what that means.\");"},{"lineNumber":19,"author":{"gitId":"seaniy"},"content":"    }"},{"lineNumber":20,"author":{"gitId":"seaniy"},"content":""},{"lineNumber":21,"author":{"gitId":"seaniy"},"content":"    /**"},{"lineNumber":22,"author":{"gitId":"seaniy"},"content":"     * This method is used to output a loading file error message."},{"lineNumber":23,"author":{"gitId":"seaniy"},"content":"     */"},{"lineNumber":24,"author":{"gitId":"seaniy"},"content":"    public void showLoadingError() {"},{"lineNumber":25,"author":{"gitId":"seaniy"},"content":"        showMessage(\"Failed to load file. Exiting...\");"},{"lineNumber":26,"author":{"gitId":"seaniy"},"content":"    }"},{"lineNumber":27,"author":{"gitId":"seaniy"},"content":""},{"lineNumber":28,"author":{"gitId":"seaniy"},"content":"    /**"},{"lineNumber":29,"author":{"gitId":"seaniy"},"content":"     * This method is used to output a saving file error message."},{"lineNumber":30,"author":{"gitId":"seaniy"},"content":"     */"},{"lineNumber":31,"author":{"gitId":"seaniy"},"content":"    public void showSavingError() {"},{"lineNumber":32,"author":{"gitId":"seaniy"},"content":"        showMessage(\"Failed to save file. Exiting...\");"},{"lineNumber":33,"author":{"gitId":"seaniy"},"content":"    }"},{"lineNumber":34,"author":{"gitId":"seaniy"},"content":""},{"lineNumber":35,"author":{"gitId":"seaniy"},"content":"    /**"},{"lineNumber":36,"author":{"gitId":"seaniy"},"content":"     * This method is used to output the welcome message."},{"lineNumber":37,"author":{"gitId":"seaniy"},"content":"     */"},{"lineNumber":38,"author":{"gitId":"seaniy"},"content":"    public void showWelcome() {"},{"lineNumber":39,"author":{"gitId":"seaniy"},"content":"        showMessage(logo + \"\\nHello! I\u0027m Duke!\\n\""},{"lineNumber":40,"author":{"gitId":"seaniy"},"content":"                + \"What can I do for you?\\n\""},{"lineNumber":41,"author":{"gitId":"seaniy"},"content":"                + \"Type \\\"help\\\" to view the list of available commands.\");"},{"lineNumber":42,"author":{"gitId":"seaniy"},"content":"    }"},{"lineNumber":43,"author":{"gitId":"seaniy"},"content":""},{"lineNumber":44,"author":{"gitId":"seaniy"},"content":"    /**"},{"lineNumber":45,"author":{"gitId":"seaniy"},"content":"     * This method is used to output the goodbye message."},{"lineNumber":46,"author":{"gitId":"seaniy"},"content":"     */"},{"lineNumber":47,"author":{"gitId":"seaniy"},"content":"    public void showGoodbye() {"},{"lineNumber":48,"author":{"gitId":"seaniy"},"content":"        showMessage(\"Bye. Hope to see you again soon!\");"},{"lineNumber":49,"author":{"gitId":"seaniy"},"content":"    }"},{"lineNumber":50,"author":{"gitId":"seaniy"},"content":""},{"lineNumber":51,"author":{"gitId":"seaniy"},"content":"    /**"},{"lineNumber":52,"author":{"gitId":"seaniy"},"content":"     * This method is used to output the list of commands available"},{"lineNumber":53,"author":{"gitId":"seaniy"},"content":"     * on the application."},{"lineNumber":54,"author":{"gitId":"seaniy"},"content":"     */"},{"lineNumber":55,"author":{"gitId":"seaniy"},"content":"    public void showHelpMessage() {"},{"lineNumber":56,"author":{"gitId":"seaniy"},"content":"        showMessage(\"List of Available Commands:\\n\""},{"lineNumber":57,"author":{"gitId":"seaniy"},"content":"                + \"bye -\u003e To exit application\\n\""},{"lineNumber":58,"author":{"gitId":"seaniy"},"content":"                + \"list -\u003e To list tasks\\n\""},{"lineNumber":59,"author":{"gitId":"seaniy"},"content":"                + \"done [index] -\u003e To mark task as done \\n\""},{"lineNumber":60,"author":{"gitId":"seaniy"},"content":"                + \"delete [index] -\u003e To delete task\\n\""},{"lineNumber":61,"author":{"gitId":"seaniy"},"content":"                + \"todo [description] -\u003e To create todo\\n\""},{"lineNumber":62,"author":{"gitId":"seaniy"},"content":"                + \"deadline [description] /by [date] -\u003e To create deadline\\n\""},{"lineNumber":63,"author":{"gitId":"seaniy"},"content":"                + \"event [description] /on [date] -\u003e To create event\");"},{"lineNumber":64,"author":{"gitId":"seaniy"},"content":"    }"},{"lineNumber":65,"author":{"gitId":"seaniy"},"content":""},{"lineNumber":66,"author":{"gitId":"seaniy"},"content":"    /**"},{"lineNumber":67,"author":{"gitId":"seaniy"},"content":"     * This method is used to output the list of tasks in"},{"lineNumber":68,"author":{"gitId":"seaniy"},"content":"     * the \u003ccode\u003eTaskList\u003c/code\u003e object."},{"lineNumber":69,"author":{"gitId":"seaniy"},"content":"     *"},{"lineNumber":70,"author":{"gitId":"seaniy"},"content":"     * @param tasks The \u003ccode\u003eTaskList\u003c/code\u003e object."},{"lineNumber":71,"author":{"gitId":"seaniy"},"content":"     * @see TaskList"},{"lineNumber":72,"author":{"gitId":"seaniy"},"content":"     */"},{"lineNumber":73,"author":{"gitId":"seaniy"},"content":"    public void showTasks(TaskList tasks) {"},{"lineNumber":74,"author":{"gitId":"seaniy"},"content":"        StringBuilder message \u003d new StringBuilder();"},{"lineNumber":75,"author":{"gitId":"seaniy"},"content":"        if(tasks.isEmpty()) {"},{"lineNumber":76,"author":{"gitId":"seaniy"},"content":"            message.append(\"List is empty.\");"},{"lineNumber":77,"author":{"gitId":"seaniy"},"content":"        } else {"},{"lineNumber":78,"author":{"gitId":"seaniy"},"content":"            message.append(\"Here are your list of tasks:\\n\");"},{"lineNumber":79,"author":{"gitId":"seaniy"},"content":"            for(int i \u003d 1; i \u003c\u003d tasks.getSize(); i++) {"},{"lineNumber":80,"author":{"gitId":"seaniy"},"content":"                message.append(\"  \" + i + \". \" + tasks.getTask(i - 1));"},{"lineNumber":81,"author":{"gitId":"seaniy"},"content":"                if(i \u003c tasks.getSize()) {"},{"lineNumber":82,"author":{"gitId":"seaniy"},"content":"                    message.append(\"\\n\");"},{"lineNumber":83,"author":{"gitId":"seaniy"},"content":"                }"},{"lineNumber":84,"author":{"gitId":"seaniy"},"content":"            }"},{"lineNumber":85,"author":{"gitId":"seaniy"},"content":"        }"},{"lineNumber":86,"author":{"gitId":"seaniy"},"content":"        showMessage(message.toString());"},{"lineNumber":87,"author":{"gitId":"seaniy"},"content":"    }"},{"lineNumber":88,"author":{"gitId":"seaniy"},"content":""},{"lineNumber":89,"author":{"gitId":"seaniy"},"content":"    /**"},{"lineNumber":90,"author":{"gitId":"seaniy"},"content":"     * This method is used to output the list of found tasks"},{"lineNumber":91,"author":{"gitId":"seaniy"},"content":"     * in the \u003ccode\u003eTaskList\u003c/code\u003e object."},{"lineNumber":92,"author":{"gitId":"seaniy"},"content":"     *"},{"lineNumber":93,"author":{"gitId":"seaniy"},"content":"     * @param tasks The \u003ccode\u003eTaskList\u003c/code\u003e object."},{"lineNumber":94,"author":{"gitId":"seaniy"},"content":"     * @see TaskList"},{"lineNumber":95,"author":{"gitId":"seaniy"},"content":"     */"},{"lineNumber":96,"author":{"gitId":"seaniy"},"content":"    public void showFoundTasks(TaskList tasks) {"},{"lineNumber":97,"author":{"gitId":"seaniy"},"content":"        StringBuilder message \u003d new StringBuilder();"},{"lineNumber":98,"author":{"gitId":"seaniy"},"content":"        if(tasks.isEmpty()) {"},{"lineNumber":99,"author":{"gitId":"seaniy"},"content":"            message.append(\"Sorry! Task not found.\");"},{"lineNumber":100,"author":{"gitId":"seaniy"},"content":"        } else {"},{"lineNumber":101,"author":{"gitId":"seaniy"},"content":"            message.append(\"Here are the matching tasks in your list:\\n\");"},{"lineNumber":102,"author":{"gitId":"seaniy"},"content":"            for(int i \u003d 1; i \u003c\u003d tasks.getSize(); i++) {"},{"lineNumber":103,"author":{"gitId":"seaniy"},"content":"                message.append(\"  \" + i + \". \" + tasks.getTask(i - 1));"},{"lineNumber":104,"author":{"gitId":"seaniy"},"content":"                if(i \u003c tasks.getSize()) {"},{"lineNumber":105,"author":{"gitId":"seaniy"},"content":"                    message.append(\"\\n\");"},{"lineNumber":106,"author":{"gitId":"seaniy"},"content":"                }"},{"lineNumber":107,"author":{"gitId":"seaniy"},"content":"            }"},{"lineNumber":108,"author":{"gitId":"seaniy"},"content":"        }"},{"lineNumber":109,"author":{"gitId":"seaniy"},"content":"        showMessage(message.toString());"},{"lineNumber":110,"author":{"gitId":"seaniy"},"content":"    }"},{"lineNumber":111,"author":{"gitId":"seaniy"},"content":""},{"lineNumber":112,"author":{"gitId":"seaniy"},"content":"    /**"},{"lineNumber":113,"author":{"gitId":"seaniy"},"content":"     * This method is used to output the message provided in a standardized"},{"lineNumber":114,"author":{"gitId":"seaniy"},"content":"     * styling with a divider before and after the message."},{"lineNumber":115,"author":{"gitId":"seaniy"},"content":"     *"},{"lineNumber":116,"author":{"gitId":"seaniy"},"content":"     * @param message The message to display within the dividers."},{"lineNumber":117,"author":{"gitId":"seaniy"},"content":"     */"},{"lineNumber":118,"author":{"gitId":"seaniy"},"content":"    public void showMessage(String message) {"},{"lineNumber":119,"author":{"gitId":"seaniy"},"content":"        System.out.println(divider + message + \"\\n\" + divider);"},{"lineNumber":120,"author":{"gitId":"seaniy"},"content":"    }"},{"lineNumber":121,"author":{"gitId":"seaniy"},"content":""},{"lineNumber":122,"author":{"gitId":"seaniy"},"content":"    /**"},{"lineNumber":123,"author":{"gitId":"seaniy"},"content":"     * This method is used to output the generic error message."},{"lineNumber":124,"author":{"gitId":"seaniy"},"content":"     * "},{"lineNumber":125,"author":{"gitId":"seaniy"},"content":"     * @param errorMessage The error message to display."},{"lineNumber":126,"author":{"gitId":"seaniy"},"content":"     */"},{"lineNumber":127,"author":{"gitId":"seaniy"},"content":"    public void showErrorMessage(String errorMessage) {"},{"lineNumber":128,"author":{"gitId":"seaniy"},"content":"        showMessage(\"Error! \" + errorMessage);"},{"lineNumber":129,"author":{"gitId":"seaniy"},"content":"    }"},{"lineNumber":130,"author":{"gitId":"seaniy"},"content":"}"}],"authorContributionMap":{"seaniy":130}},{"path":"src/main/java/rick/exceptions/InvalidDeadlineCommandException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"seaniy"},"content":"package rick.exceptions;"},{"lineNumber":2,"author":{"gitId":"seaniy"},"content":""},{"lineNumber":3,"author":{"gitId":"seaniy"},"content":"public class InvalidDeadlineCommandException extends RickException {"},{"lineNumber":4,"author":{"gitId":"seaniy"},"content":"    @Override"},{"lineNumber":5,"author":{"gitId":"seaniy"},"content":"    public String getMessage() {"},{"lineNumber":6,"author":{"gitId":"seaniy"},"content":"        return \"Invalid deadline command format!\\n\""},{"lineNumber":7,"author":{"gitId":"seaniy"},"content":"                + \"Valid format: deadline \u003cdescription\u003e /by \u003cyyyy-mm-dd\u003e\";"},{"lineNumber":8,"author":{"gitId":"seaniy"},"content":"    }"},{"lineNumber":9,"author":{"gitId":"seaniy"},"content":"}"}],"authorContributionMap":{"seaniy":9}},{"path":"src/main/java/rick/exceptions/InvalidDeleteCommandException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"seaniy"},"content":"package rick.exceptions;"},{"lineNumber":2,"author":{"gitId":"seaniy"},"content":""},{"lineNumber":3,"author":{"gitId":"seaniy"},"content":"public class InvalidDeleteCommandException extends RickException {"},{"lineNumber":4,"author":{"gitId":"seaniy"},"content":"    @Override"},{"lineNumber":5,"author":{"gitId":"seaniy"},"content":"    public String getMessage() {"},{"lineNumber":6,"author":{"gitId":"seaniy"},"content":"        return \"Invalid delete command format!\\n\""},{"lineNumber":7,"author":{"gitId":"seaniy"},"content":"                + \"Valid format: delete \u003ctask index\u003e\";"},{"lineNumber":8,"author":{"gitId":"seaniy"},"content":"    }"},{"lineNumber":9,"author":{"gitId":"seaniy"},"content":"}"}],"authorContributionMap":{"seaniy":9}},{"path":"src/main/java/rick/exceptions/InvalidDoneCommandException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"seaniy"},"content":"package rick.exceptions;"},{"lineNumber":2,"author":{"gitId":"seaniy"},"content":""},{"lineNumber":3,"author":{"gitId":"seaniy"},"content":"public class InvalidDoneCommandException extends RickException {"},{"lineNumber":4,"author":{"gitId":"seaniy"},"content":"    @Override"},{"lineNumber":5,"author":{"gitId":"seaniy"},"content":"    public String getMessage() {"},{"lineNumber":6,"author":{"gitId":"seaniy"},"content":"        return \"Invalid done command format!\\n\""},{"lineNumber":7,"author":{"gitId":"seaniy"},"content":"                + \"Valid format: done \u003ctask index\u003e\";"},{"lineNumber":8,"author":{"gitId":"seaniy"},"content":"    }"},{"lineNumber":9,"author":{"gitId":"seaniy"},"content":"}"}],"authorContributionMap":{"seaniy":9}},{"path":"src/main/java/rick/exceptions/InvalidEventCommandException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"seaniy"},"content":"package rick.exceptions;"},{"lineNumber":2,"author":{"gitId":"seaniy"},"content":""},{"lineNumber":3,"author":{"gitId":"seaniy"},"content":"public class InvalidEventCommandException extends RickException {"},{"lineNumber":4,"author":{"gitId":"seaniy"},"content":"    @Override"},{"lineNumber":5,"author":{"gitId":"seaniy"},"content":"    public String getMessage() {"},{"lineNumber":6,"author":{"gitId":"seaniy"},"content":"        return \"Invalid event command format!\\n\""},{"lineNumber":7,"author":{"gitId":"seaniy"},"content":"                + \"Valid format: event \u003cdescription\u003e /on \u003cyyyy-mm-dd\u003e\";"},{"lineNumber":8,"author":{"gitId":"seaniy"},"content":"    }"},{"lineNumber":9,"author":{"gitId":"seaniy"},"content":"}"}],"authorContributionMap":{"seaniy":9}},{"path":"src/main/java/rick/exceptions/InvalidFindCommandException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"seaniy"},"content":"package rick.exceptions;"},{"lineNumber":2,"author":{"gitId":"seaniy"},"content":""},{"lineNumber":3,"author":{"gitId":"seaniy"},"content":"public class InvalidFindCommandException extends RickException {"},{"lineNumber":4,"author":{"gitId":"seaniy"},"content":"    @Override"},{"lineNumber":5,"author":{"gitId":"seaniy"},"content":"    public String getMessage() {"},{"lineNumber":6,"author":{"gitId":"seaniy"},"content":"        return \"Invalid find command format!\\n\""},{"lineNumber":7,"author":{"gitId":"seaniy"},"content":"                + \"Valid format: find \u003ckeyword/keyphrase\u003e\";"},{"lineNumber":8,"author":{"gitId":"seaniy"},"content":"    }"},{"lineNumber":9,"author":{"gitId":"seaniy"},"content":"}"}],"authorContributionMap":{"seaniy":9}},{"path":"src/main/java/rick/exceptions/InvalidTodoCommandException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"seaniy"},"content":"package rick.exceptions;"},{"lineNumber":2,"author":{"gitId":"seaniy"},"content":""},{"lineNumber":3,"author":{"gitId":"seaniy"},"content":"public class InvalidTodoCommandException extends RickException {"},{"lineNumber":4,"author":{"gitId":"seaniy"},"content":"    @Override"},{"lineNumber":5,"author":{"gitId":"seaniy"},"content":"    public String getMessage() {"},{"lineNumber":6,"author":{"gitId":"seaniy"},"content":"        return \"Invalid todo command format!\\n\""},{"lineNumber":7,"author":{"gitId":"seaniy"},"content":"                + \"Valid format: todo \u003cdescription\u003e\";"},{"lineNumber":8,"author":{"gitId":"seaniy"},"content":"    }"},{"lineNumber":9,"author":{"gitId":"seaniy"},"content":"}"}],"authorContributionMap":{"seaniy":9}},{"path":"src/main/java/rick/exceptions/MissingFlagException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"seaniy"},"content":"package rick.exceptions;"},{"lineNumber":2,"author":{"gitId":"seaniy"},"content":""},{"lineNumber":3,"author":{"gitId":"seaniy"},"content":"public class MissingFlagException extends RickException {"},{"lineNumber":4,"author":{"gitId":"seaniy"},"content":"    @Override"},{"lineNumber":5,"author":{"gitId":"seaniy"},"content":"    public String getMessage() {"},{"lineNumber":6,"author":{"gitId":"seaniy"},"content":"        return \"Invalid Flag!\\n\""},{"lineNumber":7,"author":{"gitId":"seaniy"},"content":"                + \"Type \\\"help\\\" to view the list of available commands.\";"},{"lineNumber":8,"author":{"gitId":"seaniy"},"content":"    }"},{"lineNumber":9,"author":{"gitId":"seaniy"},"content":"}"}],"authorContributionMap":{"seaniy":9}},{"path":"src/main/java/rick/exceptions/RickException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"seaniy"},"content":"package rick.exceptions;"},{"lineNumber":2,"author":{"gitId":"seaniy"},"content":""},{"lineNumber":3,"author":{"gitId":"seaniy"},"content":"/**"},{"lineNumber":4,"author":{"gitId":"seaniy"},"content":" * Custom exception class"},{"lineNumber":5,"author":{"gitId":"seaniy"},"content":" */"},{"lineNumber":6,"author":{"gitId":"seaniy"},"content":"public class RickException extends Exception {"},{"lineNumber":7,"author":{"gitId":"seaniy"},"content":"    @Override"},{"lineNumber":8,"author":{"gitId":"seaniy"},"content":"    public String getMessage() {"},{"lineNumber":9,"author":{"gitId":"seaniy"},"content":"        return \"Rick\u0027s sorry, but Rick don\u0027t know what that means.\\n\""},{"lineNumber":10,"author":{"gitId":"seaniy"},"content":"                + \"Type \\\"help\\\" to view the list of available commands.\";"},{"lineNumber":11,"author":{"gitId":"seaniy"},"content":"    }"},{"lineNumber":12,"author":{"gitId":"seaniy"},"content":"}"}],"authorContributionMap":{"seaniy":12}},{"path":"src/main/java/rick/exceptions/TaskAlreadyDoneException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"seaniy"},"content":"package rick.exceptions;"},{"lineNumber":2,"author":{"gitId":"seaniy"},"content":""},{"lineNumber":3,"author":{"gitId":"seaniy"},"content":"public class TaskAlreadyDoneException  extends RickException {"},{"lineNumber":4,"author":{"gitId":"seaniy"},"content":"    @Override"},{"lineNumber":5,"author":{"gitId":"seaniy"},"content":"    public String getMessage() {"},{"lineNumber":6,"author":{"gitId":"seaniy"},"content":"        return \"Task already done!\";"},{"lineNumber":7,"author":{"gitId":"seaniy"},"content":"    }"},{"lineNumber":8,"author":{"gitId":"seaniy"},"content":"}"}],"authorContributionMap":{"seaniy":8}},{"path":"src/main/resources/views/DialogBox.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"seaniy"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"},{"lineNumber":2,"author":{"gitId":"seaniy"},"content":""},{"lineNumber":3,"author":{"gitId":"seaniy"},"content":"\u003c?import javafx.geometry.Insets?\u003e"},{"lineNumber":4,"author":{"gitId":"seaniy"},"content":"\u003c?import javafx.scene.control.Label?\u003e"},{"lineNumber":5,"author":{"gitId":"seaniy"},"content":"\u003c?import javafx.scene.image.ImageView?\u003e"},{"lineNumber":6,"author":{"gitId":"seaniy"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e"},{"lineNumber":7,"author":{"gitId":"seaniy"},"content":""},{"lineNumber":8,"author":{"gitId":"seaniy"},"content":"\u003cfx:root alignment\u003d\"TOP_RIGHT\" maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\" prefWidth\u003d\"400.0\" type\u003d\"javafx.scene.layout.HBox\" xmlns\u003d\"http://javafx.com/javafx/8.0.171\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e"},{"lineNumber":9,"author":{"gitId":"seaniy"},"content":"    \u003cpadding\u003e"},{"lineNumber":10,"author":{"gitId":"seaniy"},"content":"        \u003cInsets bottom\u003d\"15.0\" left\u003d\"10.0\" right\u003d\"5.0\" top\u003d\"10.0\" /\u003e"},{"lineNumber":11,"author":{"gitId":"seaniy"},"content":"    \u003c/padding\u003e"},{"lineNumber":12,"author":{"gitId":"seaniy"},"content":"    \u003cLabel fx:id\u003d\"dialog\" minHeight\u003d\"-Infinity\" text\u003d\"Label\" wrapText\u003d\"true\" styleClass\u003d\"dialog\"\u003e"},{"lineNumber":13,"author":{"gitId":"seaniy"},"content":"        \u003cpadding\u003e"},{"lineNumber":14,"author":{"gitId":"seaniy"},"content":"            \u003cInsets bottom\u003d\"0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"0\" /\u003e"},{"lineNumber":15,"author":{"gitId":"seaniy"},"content":"        \u003c/padding\u003e"},{"lineNumber":16,"author":{"gitId":"seaniy"},"content":"    \u003c/Label\u003e"},{"lineNumber":17,"author":{"gitId":"seaniy"},"content":"    \u003cImageView fx:id\u003d\"displayPicture\" fitHeight\u003d\"99.0\" fitWidth\u003d\"99.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\" /\u003e"},{"lineNumber":18,"author":{"gitId":"seaniy"},"content":"\u003c/fx:root\u003e"}],"authorContributionMap":{"seaniy":18}},{"path":"src/main/resources/views/MainWindow.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"seaniy"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"},{"lineNumber":2,"author":{"gitId":"seaniy"},"content":""},{"lineNumber":3,"author":{"gitId":"seaniy"},"content":"\u003c?import javafx.scene.control.Button?\u003e"},{"lineNumber":4,"author":{"gitId":"seaniy"},"content":"\u003c?import javafx.scene.control.ScrollPane?\u003e"},{"lineNumber":5,"author":{"gitId":"seaniy"},"content":"\u003c?import javafx.scene.control.TextField?\u003e"},{"lineNumber":6,"author":{"gitId":"seaniy"},"content":"\u003c?import javafx.scene.layout.AnchorPane?\u003e"},{"lineNumber":7,"author":{"gitId":"seaniy"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e"},{"lineNumber":8,"author":{"gitId":"seaniy"},"content":""},{"lineNumber":9,"author":{"gitId":"seaniy"},"content":"\u003cAnchorPane maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefHeight\u003d\"600.0\" prefWidth\u003d\"400.0\" xmlns\u003d\"http://javafx.com/javafx/8.0.171\" xmlns:fx\u003d\"http://javafx.com/fxml/1\" fx:controller\u003d\"rick.MainWindow\"\u003e"},{"lineNumber":10,"author":{"gitId":"seaniy"},"content":"    \u003cchildren\u003e"},{"lineNumber":11,"author":{"gitId":"seaniy"},"content":"        \u003cTextField fx:id\u003d\"userInput\" layoutY\u003d\"558.0\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"324.0\" AnchorPane.bottomAnchor\u003d\"1.0\" promptText\u003d\"Enter text message here!\"/\u003e"},{"lineNumber":12,"author":{"gitId":"seaniy"},"content":"        \u003cButton fx:id\u003d\"sendButton\" layoutX\u003d\"324.0\" layoutY\u003d\"558.0\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"76.0\" text\u003d\"Send\" /\u003e"},{"lineNumber":13,"author":{"gitId":"seaniy"},"content":"        \u003cScrollPane fx:id\u003d\"scrollPane\" hbarPolicy\u003d\"NEVER\" hvalue\u003d\"1.0\" prefHeight\u003d\"557.0\" prefWidth\u003d\"400.0\" vvalue\u003d\"1.0\"\u003e"},{"lineNumber":14,"author":{"gitId":"seaniy"},"content":"            \u003ccontent\u003e"},{"lineNumber":15,"author":{"gitId":"seaniy"},"content":"                \u003cVBox fx:id\u003d\"dialogContainer\" prefHeight\u003d\"560.0\" prefWidth\u003d\"388.0\" styleClass\u003d\"dialog-container\" /\u003e"},{"lineNumber":16,"author":{"gitId":"seaniy"},"content":"            \u003c/content\u003e"},{"lineNumber":17,"author":{"gitId":"seaniy"},"content":"        \u003c/ScrollPane\u003e"},{"lineNumber":18,"author":{"gitId":"seaniy"},"content":"    \u003c/children\u003e"},{"lineNumber":19,"author":{"gitId":"seaniy"},"content":"\u003c/AnchorPane\u003e"}],"authorContributionMap":{"seaniy":19}},{"path":"src/test/java/rick/GuiTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"seaniy"},"content":"package rick;"},{"lineNumber":2,"author":{"gitId":"seaniy"},"content":""},{"lineNumber":3,"author":{"gitId":"seaniy"},"content":"import org.junit.jupiter.api.BeforeEach;"},{"lineNumber":4,"author":{"gitId":"seaniy"},"content":"import org.junit.jupiter.api.Test;"},{"lineNumber":5,"author":{"gitId":"seaniy"},"content":""},{"lineNumber":6,"author":{"gitId":"seaniy"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;"},{"lineNumber":7,"author":{"gitId":"seaniy"},"content":""},{"lineNumber":8,"author":{"gitId":"seaniy"},"content":"public class GuiTest {"},{"lineNumber":9,"author":{"gitId":"seaniy"},"content":"    private final Gui gui \u003d new Gui();"},{"lineNumber":10,"author":{"gitId":"seaniy"},"content":""},{"lineNumber":11,"author":{"gitId":"seaniy"},"content":"    @Test"},{"lineNumber":12,"author":{"gitId":"seaniy"},"content":"    public void getLoadingErrorTest() {"},{"lineNumber":13,"author":{"gitId":"seaniy"},"content":"        assertEquals(\"Rick failed to load file. Rick failure. Exiting...\", gui.getLoadingErrorString());"},{"lineNumber":14,"author":{"gitId":"seaniy"},"content":"    }"},{"lineNumber":15,"author":{"gitId":"seaniy"},"content":""},{"lineNumber":16,"author":{"gitId":"seaniy"},"content":"    @Test"},{"lineNumber":17,"author":{"gitId":"seaniy"},"content":"    public void getSavingErrorTest() {"},{"lineNumber":18,"author":{"gitId":"seaniy"},"content":"        assertEquals(\"Rick failed to save file. Rick failure. Exiting...\", gui.getSavingErrorString());"},{"lineNumber":19,"author":{"gitId":"seaniy"},"content":"    }"},{"lineNumber":20,"author":{"gitId":"seaniy"},"content":""},{"lineNumber":21,"author":{"gitId":"seaniy"},"content":"    @Test"},{"lineNumber":22,"author":{"gitId":"seaniy"},"content":"    public void getErrorMessageStringTest() {"},{"lineNumber":23,"author":{"gitId":"seaniy"},"content":"        assertEquals(\"Error, Morty! Error! \", gui.getErrorMessageString(\"\"));"},{"lineNumber":24,"author":{"gitId":"seaniy"},"content":"    }"},{"lineNumber":25,"author":{"gitId":"seaniy"},"content":"}"}],"authorContributionMap":{"seaniy":25}},{"path":"src/test/java/rick/ParserTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"seaniy"},"content":"package rick;"},{"lineNumber":2,"author":{"gitId":"seaniy"},"content":""},{"lineNumber":3,"author":{"gitId":"seaniy"},"content":"import org.junit.jupiter.api.Test;"},{"lineNumber":4,"author":{"gitId":"seaniy"},"content":"import rick.exceptions.RickException;"},{"lineNumber":5,"author":{"gitId":"seaniy"},"content":""},{"lineNumber":6,"author":{"gitId":"seaniy"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;"},{"lineNumber":7,"author":{"gitId":"seaniy"},"content":"import static org.junit.jupiter.api.Assertions.fail;"},{"lineNumber":8,"author":{"gitId":"seaniy"},"content":""},{"lineNumber":9,"author":{"gitId":"seaniy"},"content":""},{"lineNumber":10,"author":{"gitId":"seaniy"},"content":"public class ParserTest {"},{"lineNumber":11,"author":{"gitId":"seaniy"},"content":"    private final Parser parser \u003d new Parser();"},{"lineNumber":12,"author":{"gitId":"seaniy"},"content":""},{"lineNumber":13,"author":{"gitId":"seaniy"},"content":"    @Test"},{"lineNumber":14,"author":{"gitId":"seaniy"},"content":"    public void parseCommandTest_success() throws Exception {"},{"lineNumber":15,"author":{"gitId":"seaniy"},"content":"        assertEquals(Command.TODO, parser.parseCommand(\"todo\"));"},{"lineNumber":16,"author":{"gitId":"seaniy"},"content":"    }"},{"lineNumber":17,"author":{"gitId":"seaniy"},"content":""},{"lineNumber":18,"author":{"gitId":"seaniy"},"content":"    @Test"},{"lineNumber":19,"author":{"gitId":"seaniy"},"content":"    public void parseCommandTest_exceptionThrown() {"},{"lineNumber":20,"author":{"gitId":"seaniy"},"content":"        try {"},{"lineNumber":21,"author":{"gitId":"seaniy"},"content":"            assertEquals(2, parser.parseCommand(\"gg\"));"},{"lineNumber":22,"author":{"gitId":"seaniy"},"content":"            fail();"},{"lineNumber":23,"author":{"gitId":"seaniy"},"content":"        } catch (RickException error) {"},{"lineNumber":24,"author":{"gitId":"seaniy"},"content":"            assertEquals(\"Rick\u0027s sorry, but Rick don\u0027t know what that means.\\n\" +"},{"lineNumber":25,"author":{"gitId":"seaniy"},"content":"                    \"Type \\\"help\\\" to view the list of available commands.\", error.getMessage());"},{"lineNumber":26,"author":{"gitId":"seaniy"},"content":"        }"},{"lineNumber":27,"author":{"gitId":"seaniy"},"content":"    }"},{"lineNumber":28,"author":{"gitId":"seaniy"},"content":""},{"lineNumber":29,"author":{"gitId":"seaniy"},"content":"    @Test"},{"lineNumber":30,"author":{"gitId":"seaniy"},"content":"    public void parseDoneCommandTest_success() throws Exception {"},{"lineNumber":31,"author":{"gitId":"seaniy"},"content":"        assertEquals(1, parser.parseDoneCommand(\"done 2\"));"},{"lineNumber":32,"author":{"gitId":"seaniy"},"content":"    }"},{"lineNumber":33,"author":{"gitId":"seaniy"},"content":""},{"lineNumber":34,"author":{"gitId":"seaniy"},"content":"    @Test"},{"lineNumber":35,"author":{"gitId":"seaniy"},"content":"    public void parseDoneCommandTest_exceptionThrown() {"},{"lineNumber":36,"author":{"gitId":"seaniy"},"content":"        try {"},{"lineNumber":37,"author":{"gitId":"seaniy"},"content":"            assertEquals(2, parser.parseDoneCommand(\"done\"));"},{"lineNumber":38,"author":{"gitId":"seaniy"},"content":"            fail();"},{"lineNumber":39,"author":{"gitId":"seaniy"},"content":"        } catch (RickException error) {"},{"lineNumber":40,"author":{"gitId":"seaniy"},"content":"            assertEquals(\"Invalid done command format!\\n\" +"},{"lineNumber":41,"author":{"gitId":"seaniy"},"content":"                    \"Valid format: done \u003ctask index\u003e\", error.getMessage());"},{"lineNumber":42,"author":{"gitId":"seaniy"},"content":"        }"},{"lineNumber":43,"author":{"gitId":"seaniy"},"content":"    }"},{"lineNumber":44,"author":{"gitId":"seaniy"},"content":"}"}],"authorContributionMap":{"seaniy":44}},{"path":"src/test/java/rick/UiTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"seaniy"},"content":"package rick;"},{"lineNumber":2,"author":{"gitId":"seaniy"},"content":""},{"lineNumber":3,"author":{"gitId":"seaniy"},"content":"import org.junit.jupiter.api.BeforeEach;"},{"lineNumber":4,"author":{"gitId":"seaniy"},"content":"import org.junit.jupiter.api.Test;"},{"lineNumber":5,"author":{"gitId":"seaniy"},"content":""},{"lineNumber":6,"author":{"gitId":"seaniy"},"content":"import java.io.ByteArrayOutputStream;"},{"lineNumber":7,"author":{"gitId":"seaniy"},"content":"import java.io.PrintStream;"},{"lineNumber":8,"author":{"gitId":"seaniy"},"content":""},{"lineNumber":9,"author":{"gitId":"seaniy"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;"},{"lineNumber":10,"author":{"gitId":"seaniy"},"content":""},{"lineNumber":11,"author":{"gitId":"seaniy"},"content":"public class UiTest {"},{"lineNumber":12,"author":{"gitId":"seaniy"},"content":"    private final ByteArrayOutputStream outputStreamCaptor \u003d new ByteArrayOutputStream();"},{"lineNumber":13,"author":{"gitId":"seaniy"},"content":"    private final Ui ui \u003d new Ui();"},{"lineNumber":14,"author":{"gitId":"seaniy"},"content":""},{"lineNumber":15,"author":{"gitId":"seaniy"},"content":"    @BeforeEach"},{"lineNumber":16,"author":{"gitId":"seaniy"},"content":"    public void setUp() {"},{"lineNumber":17,"author":{"gitId":"seaniy"},"content":"        System.setOut(new PrintStream(outputStreamCaptor));"},{"lineNumber":18,"author":{"gitId":"seaniy"},"content":"    }"},{"lineNumber":19,"author":{"gitId":"seaniy"},"content":""},{"lineNumber":20,"author":{"gitId":"seaniy"},"content":"    @Test"},{"lineNumber":21,"author":{"gitId":"seaniy"},"content":"    public void showInputErrorTest() {"},{"lineNumber":22,"author":{"gitId":"seaniy"},"content":"        ui.showInputError();"},{"lineNumber":23,"author":{"gitId":"seaniy"},"content":"        assertEquals(Ui.divider + \"I\u0027m sorry, but I don\u0027t know what that means.\\n\" + Ui.divider + \"\\n\", outputStreamCaptor.toString());"},{"lineNumber":24,"author":{"gitId":"seaniy"},"content":"    }"},{"lineNumber":25,"author":{"gitId":"seaniy"},"content":""},{"lineNumber":26,"author":{"gitId":"seaniy"},"content":"    @Test"},{"lineNumber":27,"author":{"gitId":"seaniy"},"content":"    public void showLoadingErrorTest() {"},{"lineNumber":28,"author":{"gitId":"seaniy"},"content":"        ui.showLoadingError();"},{"lineNumber":29,"author":{"gitId":"seaniy"},"content":"        assertEquals(Ui.divider + \"Failed to load file. Exiting...\\n\" + Ui.divider + \"\\n\", outputStreamCaptor.toString());"},{"lineNumber":30,"author":{"gitId":"seaniy"},"content":"    }"},{"lineNumber":31,"author":{"gitId":"seaniy"},"content":""},{"lineNumber":32,"author":{"gitId":"seaniy"},"content":"    @Test"},{"lineNumber":33,"author":{"gitId":"seaniy"},"content":"    public void showMessage() {"},{"lineNumber":34,"author":{"gitId":"seaniy"},"content":"        ui.showMessage(\"\");"},{"lineNumber":35,"author":{"gitId":"seaniy"},"content":"        assertEquals(Ui.divider + \"\\n\" + Ui.divider + \"\\n\", outputStreamCaptor.toString());"},{"lineNumber":36,"author":{"gitId":"seaniy"},"content":"    }"},{"lineNumber":37,"author":{"gitId":"seaniy"},"content":"}"}],"authorContributionMap":{"seaniy":37}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"seaniy"},"content":"todo read book"},{"lineNumber":2,"author":{"gitId":"seaniy"},"content":"deadline return book /by June 6th"},{"lineNumber":3,"author":{"gitId":"seaniy"},"content":"event project meeting /at Aug 6th 2-4pm"},{"lineNumber":4,"author":{"gitId":"seaniy"},"content":"todo join sports club"},{"lineNumber":5,"author":{"gitId":"seaniy"},"content":"todo borrow book"},{"lineNumber":6,"author":{"gitId":"seaniy"},"content":"done 1"},{"lineNumber":7,"author":{"gitId":"seaniy"},"content":"done 4"},{"lineNumber":8,"author":{"gitId":"seaniy"},"content":"done"},{"lineNumber":9,"author":{"gitId":"seaniy"},"content":"done 8"},{"lineNumber":10,"author":{"gitId":"seaniy"},"content":"list"},{"lineNumber":11,"author":{"gitId":"seaniy"},"content":"deadline return book /by Sunday"},{"lineNumber":12,"author":{"gitId":"seaniy"},"content":"event project meeting /at Mon 2-4pm"},{"lineNumber":13,"author":{"gitId":"seaniy"},"content":"delete"},{"lineNumber":14,"author":{"gitId":"seaniy"},"content":"delete 10"},{"lineNumber":15,"author":{"gitId":"seaniy"},"content":"delete 1"},{"lineNumber":16,"author":{"gitId":"seaniy"},"content":"bye"}],"authorContributionMap":{"seaniy":16}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF"},{"lineNumber":2,"author":{"gitId":"-"},"content":""},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin"},{"lineNumber":5,"author":{"gitId":"-"},"content":""},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run"},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT"},{"lineNumber":8,"author":{"gitId":"-"},"content":""},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder"},{"lineNumber":10,"author":{"gitId":"seaniy"},"content":"javac  -cp ..\\src\\main\\java\\rick -Xlint:none -d ..\\bin ..\\src\\main\\java\\rick\\*.java"},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 ("},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1"},{"lineNumber":14,"author":{"gitId":"-"},"content":")"},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0"},{"lineNumber":16,"author":{"gitId":"-"},"content":""},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"},{"lineNumber":18,"author":{"gitId":"-"},"content":"java -classpath ..\\bin Duke \u003c input.txt \u003e ACTUAL.TXT"},{"lineNumber":19,"author":{"gitId":"-"},"content":""},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM compare the output to the expected output"},{"lineNumber":21,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT"}],"authorContributionMap":{"seaniy":1,"-":20}}]
