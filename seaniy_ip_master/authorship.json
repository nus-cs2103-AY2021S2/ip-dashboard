[{"path":"src/main/java/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"seaniy"},"content":"public class Deadline extends Task {"},{"lineNumber":2,"author":{"gitId":"seaniy"},"content":"    protected String by;"},{"lineNumber":3,"author":{"gitId":"seaniy"},"content":""},{"lineNumber":4,"author":{"gitId":"seaniy"},"content":"    public Deadline(String description, String by) {"},{"lineNumber":5,"author":{"gitId":"seaniy"},"content":"        super(description);"},{"lineNumber":6,"author":{"gitId":"seaniy"},"content":"        this.by \u003d by;"},{"lineNumber":7,"author":{"gitId":"seaniy"},"content":"    }"},{"lineNumber":8,"author":{"gitId":"seaniy"},"content":""},{"lineNumber":9,"author":{"gitId":"seaniy"},"content":"    @Override"},{"lineNumber":10,"author":{"gitId":"seaniy"},"content":"    public String toString() {"},{"lineNumber":11,"author":{"gitId":"seaniy"},"content":"        return \"[D]\" + super.toString() + \" (by: \" + by + \")\";"},{"lineNumber":12,"author":{"gitId":"seaniy"},"content":"    }"},{"lineNumber":13,"author":{"gitId":"seaniy"},"content":"}"}],"authorContributionMap":{"seaniy":13}},{"path":"src/main/java/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"seaniy"},"content":"import java.util.*;"},{"lineNumber":2,"author":{"gitId":"seaniy"},"content":""},{"lineNumber":3,"author":{"gitId":"-"},"content":"public class Duke {"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    public static void main(String[] args) {"},{"lineNumber":5,"author":{"gitId":"-"},"content":"        String logo \u003d \" ____        _\\n\""},{"lineNumber":6,"author":{"gitId":"-"},"content":"                + \"|  _ \\\\ _   _| | _____ \\n\""},{"lineNumber":7,"author":{"gitId":"-"},"content":"                + \"| | | | | | | |/ / _ \\\\\\n\""},{"lineNumber":8,"author":{"gitId":"-"},"content":"                + \"| |_| | |_| |   \u003c  __/\\n\""},{"lineNumber":9,"author":{"gitId":"-"},"content":"                + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\";"},{"lineNumber":10,"author":{"gitId":"seaniy"},"content":"        String divider \u003d \"____________________________________________________________\\n\";"},{"lineNumber":11,"author":{"gitId":"seaniy"},"content":"        System.out.println(divider + logo + \"\\nHello! I\u0027m Duke\\nWhat can I do for you?\\n\" + divider);"},{"lineNumber":12,"author":{"gitId":"seaniy"},"content":""},{"lineNumber":13,"author":{"gitId":"seaniy"},"content":"        Scanner sc \u003d new Scanner(System.in);"},{"lineNumber":14,"author":{"gitId":"seaniy"},"content":"        List\u003cTask\u003e list \u003d new ArrayList\u003c\u003e();"},{"lineNumber":15,"author":{"gitId":"seaniy"},"content":""},{"lineNumber":16,"author":{"gitId":"seaniy"},"content":"        while(sc.hasNextLine()) {"},{"lineNumber":17,"author":{"gitId":"seaniy"},"content":"            String input \u003d sc.nextLine();"},{"lineNumber":18,"author":{"gitId":"seaniy"},"content":"            String[] check \u003d input.split(\" \");"},{"lineNumber":19,"author":{"gitId":"seaniy"},"content":"            if(input.equals(\"bye\")) {"},{"lineNumber":20,"author":{"gitId":"seaniy"},"content":"                System.out.println(divider + \"Bye. Hope to see you again soon!\\n\" + divider);"},{"lineNumber":21,"author":{"gitId":"seaniy"},"content":"                break;"},{"lineNumber":22,"author":{"gitId":"seaniy"},"content":"            } else if(input.equals(\"list\")) {"},{"lineNumber":23,"author":{"gitId":"seaniy"},"content":"                System.out.println(divider + \"Here are the tasks in your list:\");"},{"lineNumber":24,"author":{"gitId":"seaniy"},"content":"                for(int i \u003d 1; i \u003c\u003d list.size(); i++) {"},{"lineNumber":25,"author":{"gitId":"seaniy"},"content":"                    System.out.println(\"  \" + i + \". \" + list.get(i-1));"},{"lineNumber":26,"author":{"gitId":"seaniy"},"content":"                }"},{"lineNumber":27,"author":{"gitId":"seaniy"},"content":"                System.out.println(divider);"},{"lineNumber":28,"author":{"gitId":"seaniy"},"content":"            } else if(check[0].equals(\"done\")) {"},{"lineNumber":29,"author":{"gitId":"seaniy"},"content":"                try {"},{"lineNumber":30,"author":{"gitId":"seaniy"},"content":"                    checkEmptyInput(check);"},{"lineNumber":31,"author":{"gitId":"seaniy"},"content":"                    list.get(Integer.parseInt(check[1])-1).markAsDone();"},{"lineNumber":32,"author":{"gitId":"seaniy"},"content":"                    System.out.println(divider + \"Nice! I\u0027ve marked this task as done:\\n  \" + list.get(Integer.parseInt(check[1])-1) + \"\\n\" + divider);"},{"lineNumber":33,"author":{"gitId":"seaniy"},"content":"                } catch (DukeException e) {"},{"lineNumber":34,"author":{"gitId":"seaniy"},"content":"                    System.out.println(divider + \"OOPS!!! Please select an item to mark as done.\\n\" + divider);"},{"lineNumber":35,"author":{"gitId":"seaniy"},"content":"                } catch (IndexOutOfBoundsException e) {"},{"lineNumber":36,"author":{"gitId":"seaniy"},"content":"                    System.out.println(divider + \"OOPS!!! Selected item does not exist.\\n\" + divider);"},{"lineNumber":37,"author":{"gitId":"seaniy"},"content":"                }"},{"lineNumber":38,"author":{"gitId":"seaniy"},"content":"            } else if(check[0].equals(\"delete\")) {"},{"lineNumber":39,"author":{"gitId":"seaniy"},"content":"                try {"},{"lineNumber":40,"author":{"gitId":"seaniy"},"content":"                    checkEmptyInput(check);"},{"lineNumber":41,"author":{"gitId":"seaniy"},"content":"                    System.out.println(divider + \"Noted. I\u0027ve removed this task:\\n  \" + list.remove(Integer.parseInt(check[1])-1) + \"\\nNow you have \" + list.size() + \" tasks in the list.\\n\" + divider);"},{"lineNumber":42,"author":{"gitId":"seaniy"},"content":"                } catch (DukeException e) {"},{"lineNumber":43,"author":{"gitId":"seaniy"},"content":"                    System.out.println(divider + \"OOPS!!! Please select an item to delete.\\n\" + divider);"},{"lineNumber":44,"author":{"gitId":"seaniy"},"content":"                } catch (IndexOutOfBoundsException e) {"},{"lineNumber":45,"author":{"gitId":"seaniy"},"content":"                    System.out.println(divider + \"OOPS!!! Selected item does not exist.\\n\" + divider);"},{"lineNumber":46,"author":{"gitId":"seaniy"},"content":"                }"},{"lineNumber":47,"author":{"gitId":"seaniy"},"content":"            } else if(check[0].equals(\"todo\")) {"},{"lineNumber":48,"author":{"gitId":"seaniy"},"content":"                try {"},{"lineNumber":49,"author":{"gitId":"seaniy"},"content":"                    checkEmptyInput(check);"},{"lineNumber":50,"author":{"gitId":"seaniy"},"content":"                    Todo curr \u003d new Todo(input.substring(5,input.length()));"},{"lineNumber":51,"author":{"gitId":"seaniy"},"content":"                    list.add(curr);"},{"lineNumber":52,"author":{"gitId":"seaniy"},"content":"                    System.out.println(divider + \"Got it. I\u0027ve added this task:\\n  \" + curr + \"\\nNow you have \" + list.size() + \" tasks in the list.\\n\" + divider);"},{"lineNumber":53,"author":{"gitId":"seaniy"},"content":"                } catch (DukeException e) {"},{"lineNumber":54,"author":{"gitId":"seaniy"},"content":"                    System.out.println(divider + \"OOPS!!! The description of a todo cannot be empty.\\n\" + divider);"},{"lineNumber":55,"author":{"gitId":"seaniy"},"content":"                }"},{"lineNumber":56,"author":{"gitId":"seaniy"},"content":"            } else if(check[0].equals(\"deadline\")) {"},{"lineNumber":57,"author":{"gitId":"seaniy"},"content":"                try {"},{"lineNumber":58,"author":{"gitId":"seaniy"},"content":"                    checkEmptyInput(check);"},{"lineNumber":59,"author":{"gitId":"seaniy"},"content":"                    String[] temp \u003d input.substring(9, input.length()).split(\" /by \");"},{"lineNumber":60,"author":{"gitId":"seaniy"},"content":"                    Deadline curr \u003d new Deadline(temp[0], temp[1]);"},{"lineNumber":61,"author":{"gitId":"seaniy"},"content":"                    list.add(curr);"},{"lineNumber":62,"author":{"gitId":"seaniy"},"content":"                    System.out.println(divider + \"Got it. I\u0027ve added this task:\\n  \" + curr + \"\\nNow you have \" + list.size() + \" tasks in the list.\\n\" + divider);"},{"lineNumber":63,"author":{"gitId":"seaniy"},"content":"                } catch (DukeException e) {"},{"lineNumber":64,"author":{"gitId":"seaniy"},"content":"                    System.out.println(divider + \"OOPS!!! The description of a deadline cannot be empty\\n\" + divider);"},{"lineNumber":65,"author":{"gitId":"seaniy"},"content":"                }"},{"lineNumber":66,"author":{"gitId":"seaniy"},"content":"            } else if(check[0].equals(\"event\")) {"},{"lineNumber":67,"author":{"gitId":"seaniy"},"content":"                try {"},{"lineNumber":68,"author":{"gitId":"seaniy"},"content":"                    checkEmptyInput(check);"},{"lineNumber":69,"author":{"gitId":"seaniy"},"content":"                    String[] temp \u003d input.substring(6, input.length()).split(\" /at \");"},{"lineNumber":70,"author":{"gitId":"seaniy"},"content":"                    Event curr \u003d new Event(temp[0], temp[1]);"},{"lineNumber":71,"author":{"gitId":"seaniy"},"content":"                    list.add(curr);"},{"lineNumber":72,"author":{"gitId":"seaniy"},"content":"                    System.out.println(divider + \"Got it. I\u0027ve added this task:\\n  \" + curr + \"\\nNow you have \" + list.size() + \" tasks in the list.\\n\" + divider);"},{"lineNumber":73,"author":{"gitId":"seaniy"},"content":"                } catch (DukeException e) {"},{"lineNumber":74,"author":{"gitId":"seaniy"},"content":"                    System.out.println(divider + \"OOPS!!! The description of an event cannot be empty\\n\" + divider);"},{"lineNumber":75,"author":{"gitId":"seaniy"},"content":"                }"},{"lineNumber":76,"author":{"gitId":"seaniy"},"content":"            } else {"},{"lineNumber":77,"author":{"gitId":"seaniy"},"content":"                System.out.println(divider + \"OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\\n\" + divider);"},{"lineNumber":78,"author":{"gitId":"seaniy"},"content":"            }"},{"lineNumber":79,"author":{"gitId":"seaniy"},"content":"        }"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":81,"author":{"gitId":"seaniy"},"content":""},{"lineNumber":82,"author":{"gitId":"seaniy"},"content":"    private static boolean checkEmptyInput(String[] input) throws DukeException {"},{"lineNumber":83,"author":{"gitId":"seaniy"},"content":"        if(input.length \u003c\u003d 1) {"},{"lineNumber":84,"author":{"gitId":"seaniy"},"content":"            throw new DukeException();"},{"lineNumber":85,"author":{"gitId":"seaniy"},"content":"        }"},{"lineNumber":86,"author":{"gitId":"seaniy"},"content":"        return true;"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":88,"author":{"gitId":"-"},"content":"}"}],"authorContributionMap":{"seaniy":78,"-":10}},{"path":"src/main/java/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"seaniy"},"content":"public class DukeException extends Exception {"},{"lineNumber":2,"author":{"gitId":"seaniy"},"content":"}"}],"authorContributionMap":{"seaniy":2}},{"path":"src/main/java/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"seaniy"},"content":"public class Event extends Task {"},{"lineNumber":2,"author":{"gitId":"seaniy"},"content":"    protected String at;"},{"lineNumber":3,"author":{"gitId":"seaniy"},"content":""},{"lineNumber":4,"author":{"gitId":"seaniy"},"content":"    public Event(String description, String at) {"},{"lineNumber":5,"author":{"gitId":"seaniy"},"content":"        super(description);"},{"lineNumber":6,"author":{"gitId":"seaniy"},"content":"        this.at \u003d at;"},{"lineNumber":7,"author":{"gitId":"seaniy"},"content":"    }"},{"lineNumber":8,"author":{"gitId":"seaniy"},"content":""},{"lineNumber":9,"author":{"gitId":"seaniy"},"content":"    @Override"},{"lineNumber":10,"author":{"gitId":"seaniy"},"content":"    public String toString() {"},{"lineNumber":11,"author":{"gitId":"seaniy"},"content":"        return \"[E]\" + super.toString() + \" (at: \" + at + \")\";"},{"lineNumber":12,"author":{"gitId":"seaniy"},"content":"    }"},{"lineNumber":13,"author":{"gitId":"seaniy"},"content":"}"}],"authorContributionMap":{"seaniy":13}},{"path":"src/main/java/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"seaniy"},"content":"public class Task {"},{"lineNumber":2,"author":{"gitId":"seaniy"},"content":"    protected String description;"},{"lineNumber":3,"author":{"gitId":"seaniy"},"content":"    protected boolean isDone;"},{"lineNumber":4,"author":{"gitId":"seaniy"},"content":""},{"lineNumber":5,"author":{"gitId":"seaniy"},"content":"    public Task(String description) {"},{"lineNumber":6,"author":{"gitId":"seaniy"},"content":"        this.description \u003d description;"},{"lineNumber":7,"author":{"gitId":"seaniy"},"content":"        this.isDone \u003d false;"},{"lineNumber":8,"author":{"gitId":"seaniy"},"content":"    }"},{"lineNumber":9,"author":{"gitId":"seaniy"},"content":""},{"lineNumber":10,"author":{"gitId":"seaniy"},"content":"    public String getStatusIcon() {"},{"lineNumber":11,"author":{"gitId":"seaniy"},"content":"        return (isDone ? \"\\u2713\" : \"\\u2718\"); //return tick or X symbols"},{"lineNumber":12,"author":{"gitId":"seaniy"},"content":"    }"},{"lineNumber":13,"author":{"gitId":"seaniy"},"content":""},{"lineNumber":14,"author":{"gitId":"seaniy"},"content":"    public void markAsDone() {"},{"lineNumber":15,"author":{"gitId":"seaniy"},"content":"        this.isDone \u003d true;"},{"lineNumber":16,"author":{"gitId":"seaniy"},"content":"    }"},{"lineNumber":17,"author":{"gitId":"seaniy"},"content":""},{"lineNumber":18,"author":{"gitId":"seaniy"},"content":"    @Override"},{"lineNumber":19,"author":{"gitId":"seaniy"},"content":"    public String toString() {"},{"lineNumber":20,"author":{"gitId":"seaniy"},"content":"        return \"[\" + getStatusIcon() + \"] \" + description;"},{"lineNumber":21,"author":{"gitId":"seaniy"},"content":"    }"},{"lineNumber":22,"author":{"gitId":"seaniy"},"content":"}"}],"authorContributionMap":{"seaniy":22}},{"path":"src/main/java/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"seaniy"},"content":"public class Todo extends Task {"},{"lineNumber":2,"author":{"gitId":"seaniy"},"content":"    public Todo(String description) {"},{"lineNumber":3,"author":{"gitId":"seaniy"},"content":"        super(description);"},{"lineNumber":4,"author":{"gitId":"seaniy"},"content":"    }"},{"lineNumber":5,"author":{"gitId":"seaniy"},"content":""},{"lineNumber":6,"author":{"gitId":"seaniy"},"content":"    @Override"},{"lineNumber":7,"author":{"gitId":"seaniy"},"content":"    public String toString() {"},{"lineNumber":8,"author":{"gitId":"seaniy"},"content":"        return \"[T]\" + super.toString();"},{"lineNumber":9,"author":{"gitId":"seaniy"},"content":"    }"},{"lineNumber":10,"author":{"gitId":"seaniy"},"content":"}"}],"authorContributionMap":{"seaniy":10}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"seaniy"},"content":"todo read book"},{"lineNumber":2,"author":{"gitId":"seaniy"},"content":"deadline return book /by June 6th"},{"lineNumber":3,"author":{"gitId":"seaniy"},"content":"event project meeting /at Aug 6th 2-4pm"},{"lineNumber":4,"author":{"gitId":"seaniy"},"content":"todo join sports club"},{"lineNumber":5,"author":{"gitId":"seaniy"},"content":"todo borrow book"},{"lineNumber":6,"author":{"gitId":"seaniy"},"content":"done 1"},{"lineNumber":7,"author":{"gitId":"seaniy"},"content":"done 4"},{"lineNumber":8,"author":{"gitId":"seaniy"},"content":"done"},{"lineNumber":9,"author":{"gitId":"seaniy"},"content":"done 8"},{"lineNumber":10,"author":{"gitId":"seaniy"},"content":"list"},{"lineNumber":11,"author":{"gitId":"seaniy"},"content":"deadline return book /by Sunday"},{"lineNumber":12,"author":{"gitId":"seaniy"},"content":"event project meeting /at Mon 2-4pm"},{"lineNumber":13,"author":{"gitId":"seaniy"},"content":"delete"},{"lineNumber":14,"author":{"gitId":"seaniy"},"content":"delete 10"},{"lineNumber":15,"author":{"gitId":"seaniy"},"content":"delete 1"},{"lineNumber":16,"author":{"gitId":"seaniy"},"content":"bye"}],"authorContributionMap":{"seaniy":16}}]
