[{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027checkstyle\u0027"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027"},{"lineNumber":6,"author":{"gitId":"-"},"content":"}"},{"lineNumber":7,"author":{"gitId":"-"},"content":""},{"lineNumber":8,"author":{"gitId":"-"},"content":"repositories {"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    mavenCentral()"},{"lineNumber":10,"author":{"gitId":"-"},"content":"}"},{"lineNumber":11,"author":{"gitId":"pavz02"},"content":"/*"},{"lineNumber":12,"author":{"gitId":"-"},"content":"dependencies {"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.5.0\u0027"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.5.0\u0027"},{"lineNumber":15,"author":{"gitId":"-"},"content":"}"},{"lineNumber":16,"author":{"gitId":"pavz02"},"content":"*/"},{"lineNumber":17,"author":{"gitId":"pavz02"},"content":"dependencies {"},{"lineNumber":18,"author":{"gitId":"pavz02"},"content":"    String javaFxVersion \u003d \u002711\u0027"},{"lineNumber":19,"author":{"gitId":"pavz02"},"content":""},{"lineNumber":20,"author":{"gitId":"pavz02"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027"},{"lineNumber":21,"author":{"gitId":"pavz02"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"},{"lineNumber":22,"author":{"gitId":"pavz02"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"},{"lineNumber":23,"author":{"gitId":"pavz02"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027"},{"lineNumber":24,"author":{"gitId":"pavz02"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"},{"lineNumber":25,"author":{"gitId":"pavz02"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"},{"lineNumber":26,"author":{"gitId":"pavz02"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027"},{"lineNumber":27,"author":{"gitId":"pavz02"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"},{"lineNumber":28,"author":{"gitId":"pavz02"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"},{"lineNumber":29,"author":{"gitId":"pavz02"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027"},{"lineNumber":30,"author":{"gitId":"pavz02"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"},{"lineNumber":31,"author":{"gitId":"pavz02"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"},{"lineNumber":32,"author":{"gitId":"pavz02"},"content":"}"},{"lineNumber":33,"author":{"gitId":"-"},"content":""},{"lineNumber":34,"author":{"gitId":"-"},"content":"test {"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    useJUnitPlatform()"},{"lineNumber":36,"author":{"gitId":"-"},"content":""},{"lineNumber":37,"author":{"gitId":"-"},"content":"    testLogging {"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\""},{"lineNumber":39,"author":{"gitId":"-"},"content":""},{"lineNumber":40,"author":{"gitId":"-"},"content":"        showExceptions true"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\""},{"lineNumber":42,"author":{"gitId":"-"},"content":"        showCauses true"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        showStackTraces true"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":46,"author":{"gitId":"-"},"content":"}"},{"lineNumber":47,"author":{"gitId":"-"},"content":""},{"lineNumber":48,"author":{"gitId":"-"},"content":"application {"},{"lineNumber":49,"author":{"gitId":"pavz02"},"content":"    mainClassName \u003d \"Duke\""},{"lineNumber":50,"author":{"gitId":"-"},"content":"}"},{"lineNumber":51,"author":{"gitId":"-"},"content":""},{"lineNumber":52,"author":{"gitId":"-"},"content":"shadowJar {"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    archiveBaseName \u003d \"duke\""},{"lineNumber":54,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null"},{"lineNumber":55,"author":{"gitId":"-"},"content":"}"},{"lineNumber":56,"author":{"gitId":"-"},"content":""},{"lineNumber":57,"author":{"gitId":"-"},"content":"checkstyle {"},{"lineNumber":58,"author":{"gitId":"pavz02"},"content":"    toolVersion \u003d \u00278.32\u0027"},{"lineNumber":59,"author":{"gitId":"-"},"content":"}"},{"lineNumber":60,"author":{"gitId":"-"},"content":""},{"lineNumber":61,"author":{"gitId":"-"},"content":"run {"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in"},{"lineNumber":63,"author":{"gitId":"pavz02"},"content":"    enableAssertions \u003d true"},{"lineNumber":64,"author":{"gitId":"-"},"content":"}"}],"authorContributionMap":{"pavz02":21,"-":43}},{"path":"src/main/java/DialogBox.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"pavz02"},"content":"import javafx.collections.FXCollections;"},{"lineNumber":2,"author":{"gitId":"pavz02"},"content":"import javafx.collections.ObservableList;"},{"lineNumber":3,"author":{"gitId":"pavz02"},"content":"import javafx.geometry.Pos;"},{"lineNumber":4,"author":{"gitId":"pavz02"},"content":"import javafx.scene.Node;"},{"lineNumber":5,"author":{"gitId":"pavz02"},"content":"import javafx.scene.control.Label;"},{"lineNumber":6,"author":{"gitId":"pavz02"},"content":"import javafx.scene.image.ImageView;"},{"lineNumber":7,"author":{"gitId":"pavz02"},"content":"import javafx.scene.layout.HBox;"},{"lineNumber":8,"author":{"gitId":"pavz02"},"content":""},{"lineNumber":9,"author":{"gitId":"pavz02"},"content":"public class DialogBox extends HBox {"},{"lineNumber":10,"author":{"gitId":"pavz02"},"content":""},{"lineNumber":11,"author":{"gitId":"pavz02"},"content":"    private Label text;"},{"lineNumber":12,"author":{"gitId":"pavz02"},"content":"    private ImageView displayPicture;"},{"lineNumber":13,"author":{"gitId":"pavz02"},"content":""},{"lineNumber":14,"author":{"gitId":"pavz02"},"content":"    public DialogBox(Label l, ImageView iv) {"},{"lineNumber":15,"author":{"gitId":"pavz02"},"content":"        text \u003d l;"},{"lineNumber":16,"author":{"gitId":"pavz02"},"content":"        displayPicture \u003d iv;"},{"lineNumber":17,"author":{"gitId":"pavz02"},"content":""},{"lineNumber":18,"author":{"gitId":"pavz02"},"content":"        text.setWrapText(true);"},{"lineNumber":19,"author":{"gitId":"pavz02"},"content":"        displayPicture.setFitWidth(100.0);"},{"lineNumber":20,"author":{"gitId":"pavz02"},"content":"        displayPicture.setFitHeight(100.0);"},{"lineNumber":21,"author":{"gitId":"pavz02"},"content":""},{"lineNumber":22,"author":{"gitId":"pavz02"},"content":"        this.setAlignment(Pos.TOP_RIGHT);"},{"lineNumber":23,"author":{"gitId":"pavz02"},"content":"        this.getChildren().addAll(text, displayPicture);"},{"lineNumber":24,"author":{"gitId":"pavz02"},"content":"    }"},{"lineNumber":25,"author":{"gitId":"pavz02"},"content":""},{"lineNumber":26,"author":{"gitId":"pavz02"},"content":"    private void flip() {"},{"lineNumber":27,"author":{"gitId":"pavz02"},"content":"        this.setAlignment(Pos.TOP_LEFT);"},{"lineNumber":28,"author":{"gitId":"pavz02"},"content":"        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());"},{"lineNumber":29,"author":{"gitId":"pavz02"},"content":"        FXCollections.reverse(tmp);"},{"lineNumber":30,"author":{"gitId":"pavz02"},"content":"        this.getChildren().setAll(tmp);"},{"lineNumber":31,"author":{"gitId":"pavz02"},"content":"    }"},{"lineNumber":32,"author":{"gitId":"pavz02"},"content":""},{"lineNumber":33,"author":{"gitId":"pavz02"},"content":"    public static DialogBox getUserDialog(Label l, ImageView iv) {"},{"lineNumber":34,"author":{"gitId":"pavz02"},"content":"        return new DialogBox(l, iv);"},{"lineNumber":35,"author":{"gitId":"pavz02"},"content":"    }"},{"lineNumber":36,"author":{"gitId":"pavz02"},"content":""},{"lineNumber":37,"author":{"gitId":"pavz02"},"content":"    public static DialogBox getDukeDialog(Label l, ImageView iv) {"},{"lineNumber":38,"author":{"gitId":"pavz02"},"content":"        var db \u003d new DialogBox(l, iv);"},{"lineNumber":39,"author":{"gitId":"pavz02"},"content":"        db.flip();"},{"lineNumber":40,"author":{"gitId":"pavz02"},"content":"        return db;"},{"lineNumber":41,"author":{"gitId":"pavz02"},"content":"    }"},{"lineNumber":42,"author":{"gitId":"pavz02"},"content":"}"}],"authorContributionMap":{"pavz02":42}},{"path":"src/main/java/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"pavz02"},"content":"import javafx.application.Application;"},{"lineNumber":2,"author":{"gitId":"pavz02"},"content":"import javafx.application.Platform;"},{"lineNumber":3,"author":{"gitId":"pavz02"},"content":"import javafx.geometry.Pos;"},{"lineNumber":4,"author":{"gitId":"pavz02"},"content":"import javafx.scene.Node;"},{"lineNumber":5,"author":{"gitId":"pavz02"},"content":"import javafx.scene.Scene;"},{"lineNumber":6,"author":{"gitId":"pavz02"},"content":"import javafx.scene.control.Label;"},{"lineNumber":7,"author":{"gitId":"pavz02"},"content":"import javafx.scene.image.Image;"},{"lineNumber":8,"author":{"gitId":"pavz02"},"content":"import javafx.scene.image.ImageView;"},{"lineNumber":9,"author":{"gitId":"pavz02"},"content":"import javafx.scene.layout.HBox;"},{"lineNumber":10,"author":{"gitId":"pavz02"},"content":"import javafx.stage.Stage;"},{"lineNumber":11,"author":{"gitId":"pavz02"},"content":"import javafx.scene.control.Button;"},{"lineNumber":12,"author":{"gitId":"pavz02"},"content":"import javafx.scene.control.ScrollPane;"},{"lineNumber":13,"author":{"gitId":"pavz02"},"content":"import javafx.scene.control.TextField;"},{"lineNumber":14,"author":{"gitId":"pavz02"},"content":"import javafx.scene.layout.AnchorPane;"},{"lineNumber":15,"author":{"gitId":"pavz02"},"content":"import javafx.scene.layout.VBox;"},{"lineNumber":16,"author":{"gitId":"pavz02"},"content":"import javafx.scene.layout.Region;"},{"lineNumber":17,"author":{"gitId":"pavz02"},"content":""},{"lineNumber":18,"author":{"gitId":"pavz02"},"content":"/*"},{"lineNumber":19,"author":{"gitId":"pavz02"},"content":"Need to address:"},{"lineNumber":20,"author":{"gitId":"pavz02"},"content":"- make a package"},{"lineNumber":21,"author":{"gitId":"pavz02"},"content":"- add more j-unit tests"},{"lineNumber":22,"author":{"gitId":"pavz02"},"content":" */"},{"lineNumber":23,"author":{"gitId":"pavz02"},"content":""},{"lineNumber":24,"author":{"gitId":"pavz02"},"content":"/**"},{"lineNumber":25,"author":{"gitId":"pavz02"},"content":" * Main class which brings all the other classes together."},{"lineNumber":26,"author":{"gitId":"pavz02"},"content":" */"},{"lineNumber":27,"author":{"gitId":"pavz02"},"content":"public class Duke extends Application {"},{"lineNumber":28,"author":{"gitId":"pavz02"},"content":"    private Image user \u003d new Image(this.getClass().getResourceAsStream(\"/images/hermione.jpeg\"));"},{"lineNumber":29,"author":{"gitId":"pavz02"},"content":"    private Image duke \u003d new Image(this.getClass().getResourceAsStream(\"/images/lunz.jpeg\"));"},{"lineNumber":30,"author":{"gitId":"pavz02"},"content":"    ScrollPane scrollPane;"},{"lineNumber":31,"author":{"gitId":"pavz02"},"content":"    VBox dialogContainer;"},{"lineNumber":32,"author":{"gitId":"pavz02"},"content":"    TextField userInput;"},{"lineNumber":33,"author":{"gitId":"pavz02"},"content":"    Button sendButton;"},{"lineNumber":34,"author":{"gitId":"pavz02"},"content":"    AnchorPane mainLayout;"},{"lineNumber":35,"author":{"gitId":"pavz02"},"content":""},{"lineNumber":36,"author":{"gitId":"pavz02"},"content":"    @Override"},{"lineNumber":37,"author":{"gitId":"pavz02"},"content":"    public void start(Stage stage) {"},{"lineNumber":38,"author":{"gitId":"pavz02"},"content":""},{"lineNumber":39,"author":{"gitId":"pavz02"},"content":"        TaskList.checkFileFolderSpecifications();"},{"lineNumber":40,"author":{"gitId":"pavz02"},"content":""},{"lineNumber":41,"author":{"gitId":"pavz02"},"content":"        scrollPane \u003d new ScrollPane();"},{"lineNumber":42,"author":{"gitId":"pavz02"},"content":"        dialogContainer \u003d new VBox();"},{"lineNumber":43,"author":{"gitId":"pavz02"},"content":"        scrollPane.setContent(dialogContainer);"},{"lineNumber":44,"author":{"gitId":"pavz02"},"content":""},{"lineNumber":45,"author":{"gitId":"pavz02"},"content":"        userInput \u003d new TextField();"},{"lineNumber":46,"author":{"gitId":"pavz02"},"content":"        sendButton \u003d new Button(\"Send\");"},{"lineNumber":47,"author":{"gitId":"pavz02"},"content":""},{"lineNumber":48,"author":{"gitId":"pavz02"},"content":"        mainLayout \u003d new AnchorPane();"},{"lineNumber":49,"author":{"gitId":"pavz02"},"content":"        Label greeting \u003d new Label(Ui.greet());"},{"lineNumber":50,"author":{"gitId":"pavz02"},"content":"        dialogContainer.getChildren().add(DialogBox.getDukeDialog(greeting, new ImageView(duke)));"},{"lineNumber":51,"author":{"gitId":"pavz02"},"content":"        mainLayout.getChildren().addAll(scrollPane, userInput, sendButton);"},{"lineNumber":52,"author":{"gitId":"pavz02"},"content":""},{"lineNumber":53,"author":{"gitId":"pavz02"},"content":"        Scene scene \u003d new Scene(mainLayout);"},{"lineNumber":54,"author":{"gitId":"pavz02"},"content":""},{"lineNumber":55,"author":{"gitId":"pavz02"},"content":"        stage.setTitle(\"Duke\");"},{"lineNumber":56,"author":{"gitId":"pavz02"},"content":"        stage.setResizable(false);"},{"lineNumber":57,"author":{"gitId":"pavz02"},"content":"        stage.setMinHeight(600.0);"},{"lineNumber":58,"author":{"gitId":"pavz02"},"content":"        stage.setMinWidth(400.0);"},{"lineNumber":59,"author":{"gitId":"pavz02"},"content":""},{"lineNumber":60,"author":{"gitId":"pavz02"},"content":"        mainLayout.setPrefSize(600.0, 600.0);"},{"lineNumber":61,"author":{"gitId":"pavz02"},"content":""},{"lineNumber":62,"author":{"gitId":"pavz02"},"content":"        scrollPane.setPrefSize(535, 535);"},{"lineNumber":63,"author":{"gitId":"pavz02"},"content":"        scrollPane.setHbarPolicy(ScrollPane.ScrollBarPolicy.NEVER);"},{"lineNumber":64,"author":{"gitId":"pavz02"},"content":"        scrollPane.setVbarPolicy(ScrollPane.ScrollBarPolicy.ALWAYS);"},{"lineNumber":65,"author":{"gitId":"pavz02"},"content":""},{"lineNumber":66,"author":{"gitId":"pavz02"},"content":"        scrollPane.setVvalue(1.0);"},{"lineNumber":67,"author":{"gitId":"pavz02"},"content":"        scrollPane.setFitToWidth(true);"},{"lineNumber":68,"author":{"gitId":"pavz02"},"content":""},{"lineNumber":69,"author":{"gitId":"pavz02"},"content":"        dialogContainer.setPrefHeight(Region.USE_COMPUTED_SIZE);"},{"lineNumber":70,"author":{"gitId":"pavz02"},"content":"        dialogContainer.heightProperty().addListener((observable) -\u003e scrollPane.setVvalue(1.0));"},{"lineNumber":71,"author":{"gitId":"pavz02"},"content":"        userInput.setPrefWidth(535.0);"},{"lineNumber":72,"author":{"gitId":"pavz02"},"content":"        sendButton.setPrefWidth(60.0);"},{"lineNumber":73,"author":{"gitId":"pavz02"},"content":""},{"lineNumber":74,"author":{"gitId":"pavz02"},"content":"        AnchorPane.setTopAnchor(scrollPane, 1.0);"},{"lineNumber":75,"author":{"gitId":"pavz02"},"content":""},{"lineNumber":76,"author":{"gitId":"pavz02"},"content":"        AnchorPane.setBottomAnchor(sendButton, 1.0);"},{"lineNumber":77,"author":{"gitId":"pavz02"},"content":"        AnchorPane.setRightAnchor(sendButton, 1.0);"},{"lineNumber":78,"author":{"gitId":"pavz02"},"content":""},{"lineNumber":79,"author":{"gitId":"pavz02"},"content":"        AnchorPane.setLeftAnchor(userInput, 1.0);"},{"lineNumber":80,"author":{"gitId":"pavz02"},"content":"        AnchorPane.setBottomAnchor(userInput, 1.0);"},{"lineNumber":81,"author":{"gitId":"pavz02"},"content":""},{"lineNumber":82,"author":{"gitId":"pavz02"},"content":"        sendButton.setOnMouseClicked((event) -\u003e {"},{"lineNumber":83,"author":{"gitId":"pavz02"},"content":"            handleUserInput();"},{"lineNumber":84,"author":{"gitId":"pavz02"},"content":"        });"},{"lineNumber":85,"author":{"gitId":"pavz02"},"content":""},{"lineNumber":86,"author":{"gitId":"pavz02"},"content":"        userInput.setOnAction((event) -\u003e {"},{"lineNumber":87,"author":{"gitId":"pavz02"},"content":"            handleUserInput();"},{"lineNumber":88,"author":{"gitId":"pavz02"},"content":"        });"},{"lineNumber":89,"author":{"gitId":"pavz02"},"content":""},{"lineNumber":90,"author":{"gitId":"pavz02"},"content":"        stage.setScene(scene);"},{"lineNumber":91,"author":{"gitId":"pavz02"},"content":"        stage.show();"},{"lineNumber":92,"author":{"gitId":"pavz02"},"content":"    }"},{"lineNumber":93,"author":{"gitId":"pavz02"},"content":""},{"lineNumber":94,"author":{"gitId":"pavz02"},"content":"    private void handleUserInput() {"},{"lineNumber":95,"author":{"gitId":"pavz02"},"content":"        Label userText \u003d new Label(\"\\n\\n\" + userInput.getText());"},{"lineNumber":96,"author":{"gitId":"pavz02"},"content":"        Label dukeText \u003d new Label(getResponse(userInput.getText()) + \"     \");"},{"lineNumber":97,"author":{"gitId":"pavz02"},"content":"        dialogContainer.getChildren().addAll("},{"lineNumber":98,"author":{"gitId":"pavz02"},"content":"                DialogBox.getUserDialog(userText, new ImageView(user)),"},{"lineNumber":99,"author":{"gitId":"pavz02"},"content":"                DialogBox.getDukeDialog(dukeText, new ImageView(duke))"},{"lineNumber":100,"author":{"gitId":"pavz02"},"content":"        );"},{"lineNumber":101,"author":{"gitId":"pavz02"},"content":"        if (userInput.getText().equals(\"bye\")) {"},{"lineNumber":102,"author":{"gitId":"pavz02"},"content":"            Platform.exit();"},{"lineNumber":103,"author":{"gitId":"pavz02"},"content":"            System.exit(0);"},{"lineNumber":104,"author":{"gitId":"pavz02"},"content":"        }"},{"lineNumber":105,"author":{"gitId":"pavz02"},"content":"        userInput.clear();"},{"lineNumber":106,"author":{"gitId":"pavz02"},"content":"    }"},{"lineNumber":107,"author":{"gitId":"pavz02"},"content":""},{"lineNumber":108,"author":{"gitId":"pavz02"},"content":"    private String getResponse(String input) {"},{"lineNumber":109,"author":{"gitId":"pavz02"},"content":"        return Parser.parse(input);"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":111,"author":{"gitId":"-"},"content":"}"}],"authorContributionMap":{"pavz02":109,"-":2}},{"path":"src/main/java/InvalidKeywordException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"pavz02"},"content":"/**"},{"lineNumber":2,"author":{"gitId":"pavz02"},"content":" * Exception that occurs when the user inputs an unaccepted keyword."},{"lineNumber":3,"author":{"gitId":"pavz02"},"content":" */"},{"lineNumber":4,"author":{"gitId":"pavz02"},"content":"public class InvalidKeywordException extends Exception {"},{"lineNumber":5,"author":{"gitId":"pavz02"},"content":"    /**"},{"lineNumber":6,"author":{"gitId":"pavz02"},"content":"     * Constructor for the exception."},{"lineNumber":7,"author":{"gitId":"pavz02"},"content":"     */"},{"lineNumber":8,"author":{"gitId":"pavz02"},"content":"    public InvalidKeywordException(String message) {"},{"lineNumber":9,"author":{"gitId":"pavz02"},"content":"        super(message);"},{"lineNumber":10,"author":{"gitId":"pavz02"},"content":"    }"},{"lineNumber":11,"author":{"gitId":"pavz02"},"content":""},{"lineNumber":12,"author":{"gitId":"pavz02"},"content":"    /**"},{"lineNumber":13,"author":{"gitId":"pavz02"},"content":"     * Prints the error message."},{"lineNumber":14,"author":{"gitId":"pavz02"},"content":"     */"},{"lineNumber":15,"author":{"gitId":"pavz02"},"content":"    public String printMessage() {"},{"lineNumber":16,"author":{"gitId":"pavz02"},"content":"        return super.getMessage();"},{"lineNumber":17,"author":{"gitId":"pavz02"},"content":"    }"},{"lineNumber":18,"author":{"gitId":"pavz02"},"content":"}"}],"authorContributionMap":{"pavz02":18}},{"path":"src/main/java/InvalidNumberException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"pavz02"},"content":"/**"},{"lineNumber":2,"author":{"gitId":"pavz02"},"content":" * Exception that occurs when the user does not input a valid number."},{"lineNumber":3,"author":{"gitId":"pavz02"},"content":" */"},{"lineNumber":4,"author":{"gitId":"pavz02"},"content":"public class InvalidNumberException extends Exception {"},{"lineNumber":5,"author":{"gitId":"pavz02"},"content":"    /**"},{"lineNumber":6,"author":{"gitId":"pavz02"},"content":"     * Constructor for the exception."},{"lineNumber":7,"author":{"gitId":"pavz02"},"content":"     * @param message Error message to be printed out."},{"lineNumber":8,"author":{"gitId":"pavz02"},"content":"     */"},{"lineNumber":9,"author":{"gitId":"pavz02"},"content":"    public InvalidNumberException(String message) {"},{"lineNumber":10,"author":{"gitId":"pavz02"},"content":"        super(message);"},{"lineNumber":11,"author":{"gitId":"pavz02"},"content":"    }"},{"lineNumber":12,"author":{"gitId":"pavz02"},"content":""},{"lineNumber":13,"author":{"gitId":"pavz02"},"content":"    /**"},{"lineNumber":14,"author":{"gitId":"pavz02"},"content":"     * Prints the error message."},{"lineNumber":15,"author":{"gitId":"pavz02"},"content":"     */"},{"lineNumber":16,"author":{"gitId":"pavz02"},"content":"    public String printMessage() {"},{"lineNumber":17,"author":{"gitId":"pavz02"},"content":"        return super.getMessage();"},{"lineNumber":18,"author":{"gitId":"pavz02"},"content":"    }"},{"lineNumber":19,"author":{"gitId":"pavz02"},"content":"}"}],"authorContributionMap":{"pavz02":19}},{"path":"src/main/java/InvalidTaskFormatException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"pavz02"},"content":"/**"},{"lineNumber":2,"author":{"gitId":"pavz02"},"content":" * Exception that occurs when the input format is wrong."},{"lineNumber":3,"author":{"gitId":"pavz02"},"content":" */"},{"lineNumber":4,"author":{"gitId":"pavz02"},"content":"public class InvalidTaskFormatException extends Exception {"},{"lineNumber":5,"author":{"gitId":"pavz02"},"content":"    /**"},{"lineNumber":6,"author":{"gitId":"pavz02"},"content":"     * Constructor for the exception."},{"lineNumber":7,"author":{"gitId":"pavz02"},"content":"     */"},{"lineNumber":8,"author":{"gitId":"pavz02"},"content":"    public InvalidTaskFormatException(String message) {"},{"lineNumber":9,"author":{"gitId":"pavz02"},"content":"        super(message);"},{"lineNumber":10,"author":{"gitId":"pavz02"},"content":"    }"},{"lineNumber":11,"author":{"gitId":"pavz02"},"content":""},{"lineNumber":12,"author":{"gitId":"pavz02"},"content":"    /**"},{"lineNumber":13,"author":{"gitId":"pavz02"},"content":"     * Prints the error message."},{"lineNumber":14,"author":{"gitId":"pavz02"},"content":"     */"},{"lineNumber":15,"author":{"gitId":"pavz02"},"content":"    public String printMessage() {"},{"lineNumber":16,"author":{"gitId":"pavz02"},"content":"        return super.getMessage();"},{"lineNumber":17,"author":{"gitId":"pavz02"},"content":"    }"},{"lineNumber":18,"author":{"gitId":"pavz02"},"content":"}"}],"authorContributionMap":{"pavz02":18}},{"path":"src/main/java/Launcher.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"pavz02"},"content":"import javafx.application.Application;"},{"lineNumber":2,"author":{"gitId":"pavz02"},"content":""},{"lineNumber":3,"author":{"gitId":"pavz02"},"content":"public class Launcher {"},{"lineNumber":4,"author":{"gitId":"pavz02"},"content":"    public static void main(String[] args) {"},{"lineNumber":5,"author":{"gitId":"pavz02"},"content":"        Application.launch(Duke.class, args);"},{"lineNumber":6,"author":{"gitId":"pavz02"},"content":"    }"},{"lineNumber":7,"author":{"gitId":"pavz02"},"content":"}"}],"authorContributionMap":{"pavz02":7}},{"path":"src/main/java/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"pavz02"},"content":"import java.util.Scanner;"},{"lineNumber":2,"author":{"gitId":"pavz02"},"content":""},{"lineNumber":3,"author":{"gitId":"pavz02"},"content":"/**"},{"lineNumber":4,"author":{"gitId":"pavz02"},"content":" * Parses the inputs given by the user."},{"lineNumber":5,"author":{"gitId":"pavz02"},"content":" */"},{"lineNumber":6,"author":{"gitId":"pavz02"},"content":"public class Parser {"},{"lineNumber":7,"author":{"gitId":"pavz02"},"content":"    /**"},{"lineNumber":8,"author":{"gitId":"pavz02"},"content":"     * Determines the keyword and processes the input based on the keyword."},{"lineNumber":9,"author":{"gitId":"pavz02"},"content":"     */"},{"lineNumber":10,"author":{"gitId":"pavz02"},"content":"    static String parse(String inp) {"},{"lineNumber":11,"author":{"gitId":"pavz02"},"content":"        String[] spl \u003d inp.split(\" \", 2);"},{"lineNumber":12,"author":{"gitId":"pavz02"},"content":"        String output;"},{"lineNumber":13,"author":{"gitId":"pavz02"},"content":"        try {"},{"lineNumber":14,"author":{"gitId":"pavz02"},"content":"            switch (spl[0]) {"},{"lineNumber":15,"author":{"gitId":"pavz02"},"content":"            case \"todo\":"},{"lineNumber":16,"author":{"gitId":"pavz02"},"content":"                checkSplLength(spl, 2, \"todo\");"},{"lineNumber":17,"author":{"gitId":"pavz02"},"content":"                output \u003d TaskList.processTodo(spl);"},{"lineNumber":18,"author":{"gitId":"pavz02"},"content":"                break;"},{"lineNumber":19,"author":{"gitId":"pavz02"},"content":"            case \"deadline\":"},{"lineNumber":20,"author":{"gitId":"pavz02"},"content":"                checkSplLength(spl, 2, \"deadline\");"},{"lineNumber":21,"author":{"gitId":"pavz02"},"content":"                String[] spl2 \u003d spl[1].split(\" /by \", 2);"},{"lineNumber":22,"author":{"gitId":"pavz02"},"content":"                checkSplLength(spl2, 2, \"deadline\");"},{"lineNumber":23,"author":{"gitId":"pavz02"},"content":"                String[] spl3 \u003d spl2[1].split(\" \", 2);"},{"lineNumber":24,"author":{"gitId":"pavz02"},"content":"                checkSplLength(spl3, 2, \"deadline\");"},{"lineNumber":25,"author":{"gitId":"pavz02"},"content":"                output \u003d TaskList.processDeadline(spl2, spl3);"},{"lineNumber":26,"author":{"gitId":"pavz02"},"content":"                break;"},{"lineNumber":27,"author":{"gitId":"pavz02"},"content":"            case \"event\":"},{"lineNumber":28,"author":{"gitId":"pavz02"},"content":"                checkSplLength(spl, 2, \"event\");"},{"lineNumber":29,"author":{"gitId":"pavz02"},"content":"                String[] spl4 \u003d spl[1].split(\" /at \", 2);"},{"lineNumber":30,"author":{"gitId":"pavz02"},"content":"                checkSplLength(spl4, 2, \"event\");"},{"lineNumber":31,"author":{"gitId":"pavz02"},"content":"                String[] spl5 \u003d spl4[1].split(\" \", 2);"},{"lineNumber":32,"author":{"gitId":"pavz02"},"content":"                checkSplLength(spl5, 2, \"event\");"},{"lineNumber":33,"author":{"gitId":"pavz02"},"content":"                output \u003d TaskList.processEvent(spl4, spl5);"},{"lineNumber":34,"author":{"gitId":"pavz02"},"content":"                break;"},{"lineNumber":35,"author":{"gitId":"pavz02"},"content":"            case \"done\":"},{"lineNumber":36,"author":{"gitId":"pavz02"},"content":"                checkSplLength(spl, 2, \"done\");"},{"lineNumber":37,"author":{"gitId":"pavz02"},"content":"                isInt(spl[1]);"},{"lineNumber":38,"author":{"gitId":"pavz02"},"content":"                output \u003d TaskList.processDone(spl);"},{"lineNumber":39,"author":{"gitId":"pavz02"},"content":"                break;"},{"lineNumber":40,"author":{"gitId":"pavz02"},"content":"            case \"list\":"},{"lineNumber":41,"author":{"gitId":"pavz02"},"content":"                checkSplLength(spl, 1, \"list\");"},{"lineNumber":42,"author":{"gitId":"pavz02"},"content":"                output \u003d TaskList.processList();"},{"lineNumber":43,"author":{"gitId":"pavz02"},"content":"                break;"},{"lineNumber":44,"author":{"gitId":"pavz02"},"content":"            case \"delete\":"},{"lineNumber":45,"author":{"gitId":"pavz02"},"content":"                checkSplLength(spl, 2, \"delete\");"},{"lineNumber":46,"author":{"gitId":"pavz02"},"content":"                isInt(spl[1]);"},{"lineNumber":47,"author":{"gitId":"pavz02"},"content":"                output \u003d TaskList.processDelete(spl);"},{"lineNumber":48,"author":{"gitId":"pavz02"},"content":"                break;"},{"lineNumber":49,"author":{"gitId":"pavz02"},"content":"            case \"bye\":"},{"lineNumber":50,"author":{"gitId":"pavz02"},"content":"                checkSplLength(spl, 1, \"bye\");"},{"lineNumber":51,"author":{"gitId":"pavz02"},"content":"                output \u003d TaskList.processBye();"},{"lineNumber":52,"author":{"gitId":"pavz02"},"content":"                break;"},{"lineNumber":53,"author":{"gitId":"pavz02"},"content":"            case \"find\":"},{"lineNumber":54,"author":{"gitId":"pavz02"},"content":"                checkSplLength(spl, 2, \"find\");"},{"lineNumber":55,"author":{"gitId":"pavz02"},"content":"                output \u003d TaskList.processFind(spl);"},{"lineNumber":56,"author":{"gitId":"pavz02"},"content":"                break;"},{"lineNumber":57,"author":{"gitId":"pavz02"},"content":"            default:"},{"lineNumber":58,"author":{"gitId":"pavz02"},"content":"                throw new InvalidKeywordException(Ui.invalidKeywordExceptionMessage());"},{"lineNumber":59,"author":{"gitId":"pavz02"},"content":"            }"},{"lineNumber":60,"author":{"gitId":"pavz02"},"content":"        } catch (InvalidTaskFormatException e) {"},{"lineNumber":61,"author":{"gitId":"pavz02"},"content":"            output \u003d e.printMessage();"},{"lineNumber":62,"author":{"gitId":"pavz02"},"content":"        } catch (InvalidNumberException e) {"},{"lineNumber":63,"author":{"gitId":"pavz02"},"content":"            output \u003d e.printMessage();"},{"lineNumber":64,"author":{"gitId":"pavz02"},"content":"        } catch (InvalidKeywordException e) {"},{"lineNumber":65,"author":{"gitId":"pavz02"},"content":"            output \u003d e.printMessage();"},{"lineNumber":66,"author":{"gitId":"pavz02"},"content":"        }"},{"lineNumber":67,"author":{"gitId":"pavz02"},"content":"        return output;"},{"lineNumber":68,"author":{"gitId":"pavz02"},"content":"    }"},{"lineNumber":69,"author":{"gitId":"pavz02"},"content":""},{"lineNumber":70,"author":{"gitId":"pavz02"},"content":"    /**"},{"lineNumber":71,"author":{"gitId":"pavz02"},"content":"     * Checks whether a given String can be parsed as an Integer."},{"lineNumber":72,"author":{"gitId":"pavz02"},"content":"     * @param s A string."},{"lineNumber":73,"author":{"gitId":"pavz02"},"content":"     * @throws InvalidNumberException Thrown in the case where the String is not an Integer."},{"lineNumber":74,"author":{"gitId":"pavz02"},"content":"     */"},{"lineNumber":75,"author":{"gitId":"pavz02"},"content":"    static void isInt(String s) throws InvalidNumberException {"},{"lineNumber":76,"author":{"gitId":"pavz02"},"content":"        try {"},{"lineNumber":77,"author":{"gitId":"pavz02"},"content":"            int x \u003d Integer.parseInt(s);"},{"lineNumber":78,"author":{"gitId":"pavz02"},"content":"            if (x \u003e TaskList.getCount()) {"},{"lineNumber":79,"author":{"gitId":"pavz02"},"content":"                throw new InvalidNumberException(Ui.invalidNumberExceptionMessage());"},{"lineNumber":80,"author":{"gitId":"pavz02"},"content":"            }"},{"lineNumber":81,"author":{"gitId":"pavz02"},"content":"        } catch (NumberFormatException e) {"},{"lineNumber":82,"author":{"gitId":"pavz02"},"content":"            throw new InvalidNumberException(Ui.invalidNumberExceptionMessage());"},{"lineNumber":83,"author":{"gitId":"pavz02"},"content":"        }"},{"lineNumber":84,"author":{"gitId":"pavz02"},"content":"    }"},{"lineNumber":85,"author":{"gitId":"pavz02"},"content":""},{"lineNumber":86,"author":{"gitId":"pavz02"},"content":"    /**"},{"lineNumber":87,"author":{"gitId":"pavz02"},"content":"     * Checks whether an array (spl) is of the given length (x)."},{"lineNumber":88,"author":{"gitId":"pavz02"},"content":"     * This determines whether the format of the input is correct."},{"lineNumber":89,"author":{"gitId":"pavz02"},"content":"     * @param spl Array of strings."},{"lineNumber":90,"author":{"gitId":"pavz02"},"content":"     * @param x Length the array is supposed to be checked for."},{"lineNumber":91,"author":{"gitId":"pavz02"},"content":"     * @param task To throw an error message dependent on the type of task."},{"lineNumber":92,"author":{"gitId":"pavz02"},"content":"     * @throws InvalidTaskFormatException Thrown is the array is not of the given length."},{"lineNumber":93,"author":{"gitId":"pavz02"},"content":"     */"},{"lineNumber":94,"author":{"gitId":"pavz02"},"content":"    static void checkSplLength(String[] spl, int x, String task) throws InvalidTaskFormatException {"},{"lineNumber":95,"author":{"gitId":"pavz02"},"content":"        if (spl.length !\u003d x) {"},{"lineNumber":96,"author":{"gitId":"pavz02"},"content":"            throw new InvalidTaskFormatException(Ui.invalidTaskFormatExceptionMessage(task));"},{"lineNumber":97,"author":{"gitId":"pavz02"},"content":"        }"},{"lineNumber":98,"author":{"gitId":"pavz02"},"content":"    }"},{"lineNumber":99,"author":{"gitId":"pavz02"},"content":"}"}],"authorContributionMap":{"pavz02":99}},{"path":"src/main/java/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"pavz02"},"content":"import java.io.File;"},{"lineNumber":2,"author":{"gitId":"pavz02"},"content":"import java.io.FileNotFoundException;"},{"lineNumber":3,"author":{"gitId":"pavz02"},"content":"import java.io.FileWriter;"},{"lineNumber":4,"author":{"gitId":"pavz02"},"content":"import java.io.IOException;"},{"lineNumber":5,"author":{"gitId":"pavz02"},"content":"import java.time.LocalDate;"},{"lineNumber":6,"author":{"gitId":"pavz02"},"content":"import java.time.LocalTime;"},{"lineNumber":7,"author":{"gitId":"pavz02"},"content":"import java.util.Scanner;"},{"lineNumber":8,"author":{"gitId":"pavz02"},"content":""},{"lineNumber":9,"author":{"gitId":"pavz02"},"content":"/**"},{"lineNumber":10,"author":{"gitId":"pavz02"},"content":" * Stores the task list so that it can be recovered even after the user exits from the program."},{"lineNumber":11,"author":{"gitId":"pavz02"},"content":" */"},{"lineNumber":12,"author":{"gitId":"pavz02"},"content":"public class Storage {"},{"lineNumber":13,"author":{"gitId":"pavz02"},"content":""},{"lineNumber":14,"author":{"gitId":"pavz02"},"content":"    /**"},{"lineNumber":15,"author":{"gitId":"pavz02"},"content":"     * When the user starts the program the saved task list is recovered from the saved file."},{"lineNumber":16,"author":{"gitId":"pavz02"},"content":"     * @return Returns the number of tasks that is now in the Array List."},{"lineNumber":17,"author":{"gitId":"pavz02"},"content":"     * @throws FileNotFoundException In the case that the file where the task list was saved cannot be found."},{"lineNumber":18,"author":{"gitId":"pavz02"},"content":"     */"},{"lineNumber":19,"author":{"gitId":"pavz02"},"content":"    static int uploadFromHardDrive() throws FileNotFoundException {"},{"lineNumber":20,"author":{"gitId":"pavz02"},"content":"        int count \u003d 0;"},{"lineNumber":21,"author":{"gitId":"pavz02"},"content":"        File f \u003d new File(\"./data/tasks.txt\");"},{"lineNumber":22,"author":{"gitId":"pavz02"},"content":"        Scanner s \u003d new Scanner(f);"},{"lineNumber":23,"author":{"gitId":"pavz02"},"content":"        while (s.hasNext()) {"},{"lineNumber":24,"author":{"gitId":"pavz02"},"content":"            count++;"},{"lineNumber":25,"author":{"gitId":"pavz02"},"content":"            String[] spl \u003d s.nextLine().split(\"@@@\", 5);"},{"lineNumber":26,"author":{"gitId":"pavz02"},"content":"            Task toAdd;"},{"lineNumber":27,"author":{"gitId":"pavz02"},"content":"            switch(spl[0]) {"},{"lineNumber":28,"author":{"gitId":"pavz02"},"content":"            case \"T\":"},{"lineNumber":29,"author":{"gitId":"pavz02"},"content":"                toAdd \u003d new Todo(spl[2]);"},{"lineNumber":30,"author":{"gitId":"pavz02"},"content":"                break;"},{"lineNumber":31,"author":{"gitId":"pavz02"},"content":"            case \"D\":"},{"lineNumber":32,"author":{"gitId":"pavz02"},"content":"                toAdd \u003d new Deadline(spl[2], LocalDate.parse(spl[3]), LocalTime.parse(spl[4]));"},{"lineNumber":33,"author":{"gitId":"pavz02"},"content":"                break;"},{"lineNumber":34,"author":{"gitId":"pavz02"},"content":"            default: // Default is the case \"E\""},{"lineNumber":35,"author":{"gitId":"pavz02"},"content":"                toAdd \u003d new Event(spl[2], LocalDate.parse(spl[3]), LocalTime.parse(spl[4]));"},{"lineNumber":36,"author":{"gitId":"pavz02"},"content":"            }"},{"lineNumber":37,"author":{"gitId":"pavz02"},"content":""},{"lineNumber":38,"author":{"gitId":"pavz02"},"content":"            if (spl[1].equals(\"1\")) {"},{"lineNumber":39,"author":{"gitId":"pavz02"},"content":"                toAdd.finished();"},{"lineNumber":40,"author":{"gitId":"pavz02"},"content":"            }"},{"lineNumber":41,"author":{"gitId":"pavz02"},"content":"            TaskList.getStorage().add(toAdd);"},{"lineNumber":42,"author":{"gitId":"pavz02"},"content":"        }"},{"lineNumber":43,"author":{"gitId":"pavz02"},"content":"        return count;"},{"lineNumber":44,"author":{"gitId":"pavz02"},"content":"    }"},{"lineNumber":45,"author":{"gitId":"pavz02"},"content":""},{"lineNumber":46,"author":{"gitId":"pavz02"},"content":"    /**"},{"lineNumber":47,"author":{"gitId":"pavz02"},"content":"     * When the user exits a program the current task list is saved to a file."},{"lineNumber":48,"author":{"gitId":"pavz02"},"content":"     */"},{"lineNumber":49,"author":{"gitId":"pavz02"},"content":"    static void uploadToHardDrive() {"},{"lineNumber":50,"author":{"gitId":"pavz02"},"content":"        try {"},{"lineNumber":51,"author":{"gitId":"pavz02"},"content":"            FileWriter fw \u003d new FileWriter(\"./data/tasks.txt\");"},{"lineNumber":52,"author":{"gitId":"pavz02"},"content":"            String between \u003d \"@@@\";"},{"lineNumber":53,"author":{"gitId":"pavz02"},"content":"            for (Task t : TaskList.getStorage()) {"},{"lineNumber":54,"author":{"gitId":"pavz02"},"content":"                String zero \u003d t.getInitial();"},{"lineNumber":55,"author":{"gitId":"pavz02"},"content":"                String one \u003d t.getDone();"},{"lineNumber":56,"author":{"gitId":"pavz02"},"content":"                String two \u003d t.getDescription();"},{"lineNumber":57,"author":{"gitId":"pavz02"},"content":"                if (zero.equals(\"T\")) {"},{"lineNumber":58,"author":{"gitId":"pavz02"},"content":"                    fw.write(zero + between + one + between + two + \"\\n\");"},{"lineNumber":59,"author":{"gitId":"pavz02"},"content":"                } else {"},{"lineNumber":60,"author":{"gitId":"pavz02"},"content":"                    LocalDate three \u003d t.getDate();"},{"lineNumber":61,"author":{"gitId":"pavz02"},"content":"                    LocalTime four \u003d t.getTime();"},{"lineNumber":62,"author":{"gitId":"pavz02"},"content":"                    fw.write(zero + between + one + between + two + between + three + between + four + \"\\n\");"},{"lineNumber":63,"author":{"gitId":"pavz02"},"content":"                }"},{"lineNumber":64,"author":{"gitId":"pavz02"},"content":"            }"},{"lineNumber":65,"author":{"gitId":"pavz02"},"content":"            fw.close();"},{"lineNumber":66,"author":{"gitId":"pavz02"},"content":"        } catch (IOException e) {"},{"lineNumber":67,"author":{"gitId":"pavz02"},"content":"            System.out.println(\"ERROR! D: There has been some error in the hard drive.\");"},{"lineNumber":68,"author":{"gitId":"pavz02"},"content":"        }"},{"lineNumber":69,"author":{"gitId":"pavz02"},"content":"    }"},{"lineNumber":70,"author":{"gitId":"pavz02"},"content":"}"}],"authorContributionMap":{"pavz02":70}},{"path":"src/main/java/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"pavz02"},"content":"import java.time.LocalDate;"},{"lineNumber":2,"author":{"gitId":"pavz02"},"content":"import java.time.LocalTime;"},{"lineNumber":3,"author":{"gitId":"pavz02"},"content":"import java.time.format.DateTimeFormatter;"},{"lineNumber":4,"author":{"gitId":"pavz02"},"content":""},{"lineNumber":5,"author":{"gitId":"pavz02"},"content":"/**"},{"lineNumber":6,"author":{"gitId":"pavz02"},"content":" * An abstract class of the types of tasks an user can input."},{"lineNumber":7,"author":{"gitId":"pavz02"},"content":" */"},{"lineNumber":8,"author":{"gitId":"pavz02"},"content":"public abstract class Task {"},{"lineNumber":9,"author":{"gitId":"pavz02"},"content":"    /** Describes the Task that is to be done. */"},{"lineNumber":10,"author":{"gitId":"pavz02"},"content":"    protected String description;"},{"lineNumber":11,"author":{"gitId":"pavz02"},"content":""},{"lineNumber":12,"author":{"gitId":"pavz02"},"content":"    /** Shows whether the task is completed or not. */"},{"lineNumber":13,"author":{"gitId":"pavz02"},"content":"    protected boolean isDone \u003d false;"},{"lineNumber":14,"author":{"gitId":"pavz02"},"content":""},{"lineNumber":15,"author":{"gitId":"pavz02"},"content":"    /** The date when the Task is expected to occur. */"},{"lineNumber":16,"author":{"gitId":"pavz02"},"content":"    protected LocalDate date;"},{"lineNumber":17,"author":{"gitId":"pavz02"},"content":""},{"lineNumber":18,"author":{"gitId":"pavz02"},"content":"    /** The time when the Task is expected to occur. */"},{"lineNumber":19,"author":{"gitId":"pavz02"},"content":"    protected LocalTime time;"},{"lineNumber":20,"author":{"gitId":"pavz02"},"content":""},{"lineNumber":21,"author":{"gitId":"pavz02"},"content":"    /**"},{"lineNumber":22,"author":{"gitId":"pavz02"},"content":"     * Formats the output date for the String representation of some Task objects."},{"lineNumber":23,"author":{"gitId":"pavz02"},"content":"     */"},{"lineNumber":24,"author":{"gitId":"pavz02"},"content":"    protected DateTimeFormatter dateFormat \u003d DateTimeFormatter.ofPattern(\"MMM dd yyyy\");"},{"lineNumber":25,"author":{"gitId":"pavz02"},"content":""},{"lineNumber":26,"author":{"gitId":"pavz02"},"content":"    /**"},{"lineNumber":27,"author":{"gitId":"pavz02"},"content":"     * Formats the output date for the String representation of some Task objects."},{"lineNumber":28,"author":{"gitId":"pavz02"},"content":"     */"},{"lineNumber":29,"author":{"gitId":"pavz02"},"content":"    protected DateTimeFormatter timeFormat \u003d DateTimeFormatter.ofPattern(\"hh mm\");"},{"lineNumber":30,"author":{"gitId":"pavz02"},"content":""},{"lineNumber":31,"author":{"gitId":"pavz02"},"content":"    /**"},{"lineNumber":32,"author":{"gitId":"pavz02"},"content":"     * Constructor for a Task object."},{"lineNumber":33,"author":{"gitId":"pavz02"},"content":"     * @param description Describes what the task is."},{"lineNumber":34,"author":{"gitId":"pavz02"},"content":"     */"},{"lineNumber":35,"author":{"gitId":"pavz02"},"content":"    public Task(String description, LocalDate date, LocalTime time) {"},{"lineNumber":36,"author":{"gitId":"pavz02"},"content":"        this.description \u003d description;"},{"lineNumber":37,"author":{"gitId":"pavz02"},"content":"        this.date \u003d date;"},{"lineNumber":38,"author":{"gitId":"pavz02"},"content":"        this.time \u003d time;"},{"lineNumber":39,"author":{"gitId":"pavz02"},"content":"    }"},{"lineNumber":40,"author":{"gitId":"pavz02"},"content":""},{"lineNumber":41,"author":{"gitId":"pavz02"},"content":"    /**"},{"lineNumber":42,"author":{"gitId":"pavz02"},"content":"     * Abstract method that returns the first letter of the Task object type."},{"lineNumber":43,"author":{"gitId":"pavz02"},"content":"     * @return String with one letter."},{"lineNumber":44,"author":{"gitId":"pavz02"},"content":"     */"},{"lineNumber":45,"author":{"gitId":"pavz02"},"content":"    public abstract String getInitial();"},{"lineNumber":46,"author":{"gitId":"pavz02"},"content":""},{"lineNumber":47,"author":{"gitId":"pavz02"},"content":"    /**"},{"lineNumber":48,"author":{"gitId":"pavz02"},"content":"     * Getter that returns the date when the task is to be completed by."},{"lineNumber":49,"author":{"gitId":"pavz02"},"content":"     * @return The variable date;"},{"lineNumber":50,"author":{"gitId":"pavz02"},"content":"     */"},{"lineNumber":51,"author":{"gitId":"pavz02"},"content":"    public LocalDate getDate() {"},{"lineNumber":52,"author":{"gitId":"pavz02"},"content":"        return date;"},{"lineNumber":53,"author":{"gitId":"pavz02"},"content":"    }"},{"lineNumber":54,"author":{"gitId":"pavz02"},"content":""},{"lineNumber":55,"author":{"gitId":"pavz02"},"content":"    /**"},{"lineNumber":56,"author":{"gitId":"pavz02"},"content":"     * Getter that returns the date time the task is to be completed by."},{"lineNumber":57,"author":{"gitId":"pavz02"},"content":"     * @return The variable time;"},{"lineNumber":58,"author":{"gitId":"pavz02"},"content":"     */"},{"lineNumber":59,"author":{"gitId":"pavz02"},"content":"    public LocalTime getTime() {"},{"lineNumber":60,"author":{"gitId":"pavz02"},"content":"        return time;"},{"lineNumber":61,"author":{"gitId":"pavz02"},"content":"    }"},{"lineNumber":62,"author":{"gitId":"pavz02"},"content":""},{"lineNumber":63,"author":{"gitId":"pavz02"},"content":"    /**"},{"lineNumber":64,"author":{"gitId":"pavz02"},"content":"     * Returns the description of the Task."},{"lineNumber":65,"author":{"gitId":"pavz02"},"content":"     * @return The variable description."},{"lineNumber":66,"author":{"gitId":"pavz02"},"content":"     */"},{"lineNumber":67,"author":{"gitId":"pavz02"},"content":"    public String getDescription() {"},{"lineNumber":68,"author":{"gitId":"pavz02"},"content":"        return description;"},{"lineNumber":69,"author":{"gitId":"pavz02"},"content":"    }"},{"lineNumber":70,"author":{"gitId":"pavz02"},"content":""},{"lineNumber":71,"author":{"gitId":"pavz02"},"content":"    /**"},{"lineNumber":72,"author":{"gitId":"pavz02"},"content":"     * Setter that sets the value of isDone to indicate that the task has been completed."},{"lineNumber":73,"author":{"gitId":"pavz02"},"content":"     */"},{"lineNumber":74,"author":{"gitId":"pavz02"},"content":"    public void finished() {"},{"lineNumber":75,"author":{"gitId":"pavz02"},"content":"        isDone \u003d true;"},{"lineNumber":76,"author":{"gitId":"pavz02"},"content":"    }"},{"lineNumber":77,"author":{"gitId":"pavz02"},"content":""},{"lineNumber":78,"author":{"gitId":"pavz02"},"content":"    /**"},{"lineNumber":79,"author":{"gitId":"pavz02"},"content":"     * Visual representation for the toString() method that indicates whether a task is done or not."},{"lineNumber":80,"author":{"gitId":"pavz02"},"content":"     * @return String showing [X] if the Task is completed and [ ] otherwise."},{"lineNumber":81,"author":{"gitId":"pavz02"},"content":"     */"},{"lineNumber":82,"author":{"gitId":"pavz02"},"content":"    protected String statusIcon() {"},{"lineNumber":83,"author":{"gitId":"pavz02"},"content":"        if (isDone) {"},{"lineNumber":84,"author":{"gitId":"pavz02"},"content":"            return \"[X] \";"},{"lineNumber":85,"author":{"gitId":"pavz02"},"content":"        }"},{"lineNumber":86,"author":{"gitId":"pavz02"},"content":"        return \"[ ] \";"},{"lineNumber":87,"author":{"gitId":"pavz02"},"content":"    }"},{"lineNumber":88,"author":{"gitId":"pavz02"},"content":""},{"lineNumber":89,"author":{"gitId":"pavz02"},"content":"    /**"},{"lineNumber":90,"author":{"gitId":"pavz02"},"content":"     * Returns whether the Task is completed or not."},{"lineNumber":91,"author":{"gitId":"pavz02"},"content":"     * @return \"1\" if the Task is completed, and \"0\" otherwise."},{"lineNumber":92,"author":{"gitId":"pavz02"},"content":"     */"},{"lineNumber":93,"author":{"gitId":"pavz02"},"content":"    public String getDone() {"},{"lineNumber":94,"author":{"gitId":"pavz02"},"content":"        if (isDone) {"},{"lineNumber":95,"author":{"gitId":"pavz02"},"content":"            return \"1\";"},{"lineNumber":96,"author":{"gitId":"pavz02"},"content":"        }"},{"lineNumber":97,"author":{"gitId":"pavz02"},"content":"        return \"0\";"},{"lineNumber":98,"author":{"gitId":"pavz02"},"content":"    }"},{"lineNumber":99,"author":{"gitId":"pavz02"},"content":""},{"lineNumber":100,"author":{"gitId":"pavz02"},"content":"    /**"},{"lineNumber":101,"author":{"gitId":"pavz02"},"content":"     * String representation of a Task object."},{"lineNumber":102,"author":{"gitId":"pavz02"},"content":"     * @return A string with the Task description."},{"lineNumber":103,"author":{"gitId":"pavz02"},"content":"     */"},{"lineNumber":104,"author":{"gitId":"pavz02"},"content":"    @Override"},{"lineNumber":105,"author":{"gitId":"pavz02"},"content":"    public String toString() {"},{"lineNumber":106,"author":{"gitId":"pavz02"},"content":"        return \"[\" + this.getInitial() + \"]\" + this.statusIcon() + description;"},{"lineNumber":107,"author":{"gitId":"pavz02"},"content":"    }"},{"lineNumber":108,"author":{"gitId":"pavz02"},"content":""},{"lineNumber":109,"author":{"gitId":"pavz02"},"content":"}"}],"authorContributionMap":{"pavz02":109}},{"path":"src/main/java/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"pavz02"},"content":"import java.io.File;"},{"lineNumber":2,"author":{"gitId":"pavz02"},"content":"import java.io.IOException;"},{"lineNumber":3,"author":{"gitId":"pavz02"},"content":"import java.time.LocalDate;"},{"lineNumber":4,"author":{"gitId":"pavz02"},"content":"import java.time.LocalTime;"},{"lineNumber":5,"author":{"gitId":"pavz02"},"content":"import java.util.ArrayList;"},{"lineNumber":6,"author":{"gitId":"pavz02"},"content":""},{"lineNumber":7,"author":{"gitId":"pavz02"},"content":"/**"},{"lineNumber":8,"author":{"gitId":"pavz02"},"content":" * Records the list of Tasks that is to be done."},{"lineNumber":9,"author":{"gitId":"pavz02"},"content":" */"},{"lineNumber":10,"author":{"gitId":"pavz02"},"content":"public class TaskList {"},{"lineNumber":11,"author":{"gitId":"pavz02"},"content":"    private static final ArrayList\u003cTask\u003e storage \u003d new ArrayList\u003c\u003e();"},{"lineNumber":12,"author":{"gitId":"pavz02"},"content":"    private static int count \u003d 0;"},{"lineNumber":13,"author":{"gitId":"pavz02"},"content":""},{"lineNumber":14,"author":{"gitId":"pavz02"},"content":"    /**"},{"lineNumber":15,"author":{"gitId":"pavz02"},"content":"     * Getter that returns the number of tasks in the Array List."},{"lineNumber":16,"author":{"gitId":"pavz02"},"content":"     * @return The variable count."},{"lineNumber":17,"author":{"gitId":"pavz02"},"content":"     */"},{"lineNumber":18,"author":{"gitId":"pavz02"},"content":"    static int getCount() {"},{"lineNumber":19,"author":{"gitId":"pavz02"},"content":"        return count;"},{"lineNumber":20,"author":{"gitId":"pavz02"},"content":"    }"},{"lineNumber":21,"author":{"gitId":"pavz02"},"content":""},{"lineNumber":22,"author":{"gitId":"pavz02"},"content":"    /**"},{"lineNumber":23,"author":{"gitId":"pavz02"},"content":"     * Getter that returns the Array List of tasks."},{"lineNumber":24,"author":{"gitId":"pavz02"},"content":"     * @return The variable storage."},{"lineNumber":25,"author":{"gitId":"pavz02"},"content":"     */"},{"lineNumber":26,"author":{"gitId":"pavz02"},"content":"    static ArrayList\u003cTask\u003e getStorage() {"},{"lineNumber":27,"author":{"gitId":"pavz02"},"content":"        return storage;"},{"lineNumber":28,"author":{"gitId":"pavz02"},"content":"    }"},{"lineNumber":29,"author":{"gitId":"pavz02"},"content":""},{"lineNumber":30,"author":{"gitId":"pavz02"},"content":"    /**"},{"lineNumber":31,"author":{"gitId":"pavz02"},"content":"     * Checks if the folder and file to store the data are present."},{"lineNumber":32,"author":{"gitId":"pavz02"},"content":"     * Creates the folder and/or the file in case they are not there."},{"lineNumber":33,"author":{"gitId":"pavz02"},"content":"     */"},{"lineNumber":34,"author":{"gitId":"pavz02"},"content":"    static void checkFileFolderSpecifications() {"},{"lineNumber":35,"author":{"gitId":"pavz02"},"content":"        try {"},{"lineNumber":36,"author":{"gitId":"pavz02"},"content":"            File dir \u003d new File(\"./data\");"},{"lineNumber":37,"author":{"gitId":"pavz02"},"content":"            dir.mkdir();"},{"lineNumber":38,"author":{"gitId":"pavz02"},"content":"            File f \u003d new File(\"./data/tasks.txt\");"},{"lineNumber":39,"author":{"gitId":"pavz02"},"content":"            if (!f.createNewFile()) {"},{"lineNumber":40,"author":{"gitId":"pavz02"},"content":"                count \u003d Storage.uploadFromHardDrive();"},{"lineNumber":41,"author":{"gitId":"pavz02"},"content":"            }"},{"lineNumber":42,"author":{"gitId":"pavz02"},"content":""},{"lineNumber":43,"author":{"gitId":"pavz02"},"content":"        } catch (IOException e) {"},{"lineNumber":44,"author":{"gitId":"pavz02"},"content":"            System.out.println(\"error in making folder/file\");"},{"lineNumber":45,"author":{"gitId":"pavz02"},"content":"        }"},{"lineNumber":46,"author":{"gitId":"pavz02"},"content":"    }"},{"lineNumber":47,"author":{"gitId":"pavz02"},"content":""},{"lineNumber":48,"author":{"gitId":"pavz02"},"content":"    /**"},{"lineNumber":49,"author":{"gitId":"pavz02"},"content":"     * Process the Todo task by adding it to the Task list, updating the number of tasks,"},{"lineNumber":50,"author":{"gitId":"pavz02"},"content":"     * and printing the output message."},{"lineNumber":51,"author":{"gitId":"pavz02"},"content":"     * @param spl Contains the keyword and description in the array."},{"lineNumber":52,"author":{"gitId":"pavz02"},"content":"     */"},{"lineNumber":53,"author":{"gitId":"pavz02"},"content":"    static String processTodo(String[] spl) {"},{"lineNumber":54,"author":{"gitId":"pavz02"},"content":"        storage.add(new Todo(spl[1]));"},{"lineNumber":55,"author":{"gitId":"pavz02"},"content":"        count++;"},{"lineNumber":56,"author":{"gitId":"pavz02"},"content":"        return Ui.outputMessageTask(spl[0], storage.get(count - 1));"},{"lineNumber":57,"author":{"gitId":"pavz02"},"content":"    }"},{"lineNumber":58,"author":{"gitId":"pavz02"},"content":""},{"lineNumber":59,"author":{"gitId":"pavz02"},"content":"    /**"},{"lineNumber":60,"author":{"gitId":"pavz02"},"content":"     * Process the Deadline task by adding it to the Task list, updating the number of tasks,"},{"lineNumber":61,"author":{"gitId":"pavz02"},"content":"     * and printing the output message."},{"lineNumber":62,"author":{"gitId":"pavz02"},"content":"     * @param spl Contains the keyword, description and date in the array."},{"lineNumber":63,"author":{"gitId":"pavz02"},"content":"     */"},{"lineNumber":64,"author":{"gitId":"pavz02"},"content":"    static String processDeadline(String[] spl, String[] spl2) {"},{"lineNumber":65,"author":{"gitId":"pavz02"},"content":"        storage.add(new Deadline(spl[0], LocalDate.parse(spl2[0]), LocalTime.parse(spl2[1])));"},{"lineNumber":66,"author":{"gitId":"pavz02"},"content":"        count++;"},{"lineNumber":67,"author":{"gitId":"pavz02"},"content":"        return Ui.outputMessageTask(spl[0], storage.get(count - 1));"},{"lineNumber":68,"author":{"gitId":"pavz02"},"content":"    }"},{"lineNumber":69,"author":{"gitId":"pavz02"},"content":""},{"lineNumber":70,"author":{"gitId":"pavz02"},"content":"    /**"},{"lineNumber":71,"author":{"gitId":"pavz02"},"content":"     * Process the Event task by adding it to the Task list, updating the number of tasks,"},{"lineNumber":72,"author":{"gitId":"pavz02"},"content":"     * and printing the output message."},{"lineNumber":73,"author":{"gitId":"pavz02"},"content":"     * @param spl Contains the keyword, description and date in the array."},{"lineNumber":74,"author":{"gitId":"pavz02"},"content":"     */"},{"lineNumber":75,"author":{"gitId":"pavz02"},"content":"    static String processEvent(String[] spl, String[] spl2) {"},{"lineNumber":76,"author":{"gitId":"pavz02"},"content":"        storage.add(new Event(spl[0], LocalDate.parse(spl2[0]), LocalTime.parse(spl2[1])));"},{"lineNumber":77,"author":{"gitId":"pavz02"},"content":"        count++;"},{"lineNumber":78,"author":{"gitId":"pavz02"},"content":"        return Ui.outputMessageTask(spl[0], storage.get(count - 1));"},{"lineNumber":79,"author":{"gitId":"pavz02"},"content":"    }"},{"lineNumber":80,"author":{"gitId":"pavz02"},"content":""},{"lineNumber":81,"author":{"gitId":"pavz02"},"content":"    /**"},{"lineNumber":82,"author":{"gitId":"pavz02"},"content":"     * Process the done command by updating the Task to reflect that it has been completed."},{"lineNumber":83,"author":{"gitId":"pavz02"},"content":"     * It also prints an output message."},{"lineNumber":84,"author":{"gitId":"pavz02"},"content":"     * @param spl Contains the keyword and the number of the task which has been completed."},{"lineNumber":85,"author":{"gitId":"pavz02"},"content":"     */"},{"lineNumber":86,"author":{"gitId":"pavz02"},"content":"    static String processDone(String[] spl) {"},{"lineNumber":87,"author":{"gitId":"pavz02"},"content":"        int number \u003d Integer.parseInt(spl[1]);"},{"lineNumber":88,"author":{"gitId":"pavz02"},"content":"        Task current \u003d storage.get(number - 1);"},{"lineNumber":89,"author":{"gitId":"pavz02"},"content":"        current.finished();"},{"lineNumber":90,"author":{"gitId":"pavz02"},"content":"        return Ui.outputMessageDone(current);"},{"lineNumber":91,"author":{"gitId":"pavz02"},"content":"    }"},{"lineNumber":92,"author":{"gitId":"pavz02"},"content":""},{"lineNumber":93,"author":{"gitId":"pavz02"},"content":"    /**"},{"lineNumber":94,"author":{"gitId":"pavz02"},"content":"     * Prints the output message for a list of all the tasks which contain the keyword."},{"lineNumber":95,"author":{"gitId":"pavz02"},"content":"     * @param spl Contains the keyword and the word that is being searched in the array."},{"lineNumber":96,"author":{"gitId":"pavz02"},"content":"     */"},{"lineNumber":97,"author":{"gitId":"pavz02"},"content":"    static String processFind(String[] spl) {"},{"lineNumber":98,"author":{"gitId":"pavz02"},"content":"        return Ui.outputMessageFind(storage, spl);"},{"lineNumber":99,"author":{"gitId":"pavz02"},"content":"    }"},{"lineNumber":100,"author":{"gitId":"pavz02"},"content":""},{"lineNumber":101,"author":{"gitId":"pavz02"},"content":"    /**"},{"lineNumber":102,"author":{"gitId":"pavz02"},"content":"     * Prints the output message for a list of all the tasks to be printed out."},{"lineNumber":103,"author":{"gitId":"pavz02"},"content":"     */"},{"lineNumber":104,"author":{"gitId":"pavz02"},"content":"    static String processList() {"},{"lineNumber":105,"author":{"gitId":"pavz02"},"content":"        return Ui.outputMessageList(storage, count);"},{"lineNumber":106,"author":{"gitId":"pavz02"},"content":"    }"},{"lineNumber":107,"author":{"gitId":"pavz02"},"content":""},{"lineNumber":108,"author":{"gitId":"pavz02"},"content":"    /**"},{"lineNumber":109,"author":{"gitId":"pavz02"},"content":"     * Deletes the n-numbered Task from the task list, where n is the number given by the user."},{"lineNumber":110,"author":{"gitId":"pavz02"},"content":"     * @param spl Contains the keyword, and the Task number that has to be deleted (n) in the array."},{"lineNumber":111,"author":{"gitId":"pavz02"},"content":"     */"},{"lineNumber":112,"author":{"gitId":"pavz02"},"content":"    static String processDelete(String[] spl) {"},{"lineNumber":113,"author":{"gitId":"pavz02"},"content":"        int num \u003d Integer.parseInt(spl[1]);"},{"lineNumber":114,"author":{"gitId":"pavz02"},"content":"        Task t \u003d storage.get(num - 1);"},{"lineNumber":115,"author":{"gitId":"pavz02"},"content":"        storage.remove(num - 1);"},{"lineNumber":116,"author":{"gitId":"pavz02"},"content":"        count--;"},{"lineNumber":117,"author":{"gitId":"pavz02"},"content":"        return Ui.outputMessageDelete(t);"},{"lineNumber":118,"author":{"gitId":"pavz02"},"content":"    }"},{"lineNumber":119,"author":{"gitId":"pavz02"},"content":""},{"lineNumber":120,"author":{"gitId":"pavz02"},"content":"    /**"},{"lineNumber":121,"author":{"gitId":"pavz02"},"content":"     * Stores the task list once the user wants to leave the program."},{"lineNumber":122,"author":{"gitId":"pavz02"},"content":"     * Prints an output message as well."},{"lineNumber":123,"author":{"gitId":"pavz02"},"content":"     */"},{"lineNumber":124,"author":{"gitId":"pavz02"},"content":"    static String processBye() {"},{"lineNumber":125,"author":{"gitId":"pavz02"},"content":"        Storage.uploadToHardDrive();"},{"lineNumber":126,"author":{"gitId":"pavz02"},"content":"        return Ui.outputMessageBye();"},{"lineNumber":127,"author":{"gitId":"pavz02"},"content":"    }"},{"lineNumber":128,"author":{"gitId":"pavz02"},"content":"}"}],"authorContributionMap":{"pavz02":128}},{"path":"src/main/java/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"pavz02"},"content":"import java.util.ArrayList;"},{"lineNumber":2,"author":{"gitId":"pavz02"},"content":""},{"lineNumber":3,"author":{"gitId":"pavz02"},"content":"/**"},{"lineNumber":4,"author":{"gitId":"pavz02"},"content":" * Stores all the output and error messages printed by the program."},{"lineNumber":5,"author":{"gitId":"pavz02"},"content":" */"},{"lineNumber":6,"author":{"gitId":"pavz02"},"content":"public class Ui {"},{"lineNumber":7,"author":{"gitId":"pavz02"},"content":"    /** Constants that help in the formatting of the printed messages. */"},{"lineNumber":8,"author":{"gitId":"pavz02"},"content":"    private static final String SPACE \u003d \"     \";"},{"lineNumber":9,"author":{"gitId":"pavz02"},"content":"    private static final String LINE \u003d \"     \u003c\u003c\u003e\u003e\u003c\u003c\u003e\u003e\u003c\u003c\u003e\u003e\u003c\u003c\u003e\u003e\u003c\u003c\u003e\u003e\u003c\u003c\u003e\u003e\u003c\u003c\u003e\u003e\u003c\u003c\u003e\u003e\\n\";"},{"lineNumber":10,"author":{"gitId":"pavz02"},"content":""},{"lineNumber":11,"author":{"gitId":"pavz02"},"content":"    /**"},{"lineNumber":12,"author":{"gitId":"pavz02"},"content":"     * Message to be printed when the program starts."},{"lineNumber":13,"author":{"gitId":"pavz02"},"content":"     */"},{"lineNumber":14,"author":{"gitId":"pavz02"},"content":"    public static String greet() {"},{"lineNumber":15,"author":{"gitId":"pavz02"},"content":"        return LINE + SPACE + \"Heyyoo!! I am Luna :D\\n\" + SPACE + \"What can I do for you today?\\n\" + LINE;"},{"lineNumber":16,"author":{"gitId":"pavz02"},"content":"    }"},{"lineNumber":17,"author":{"gitId":"pavz02"},"content":""},{"lineNumber":18,"author":{"gitId":"pavz02"},"content":"    /**"},{"lineNumber":19,"author":{"gitId":"pavz02"},"content":"     * Message to be printed if any number that has to be inputted is invalid."},{"lineNumber":20,"author":{"gitId":"pavz02"},"content":"     * @return The error message string."},{"lineNumber":21,"author":{"gitId":"pavz02"},"content":"     */"},{"lineNumber":22,"author":{"gitId":"pavz02"},"content":"    public static String invalidNumberExceptionMessage() {"},{"lineNumber":23,"author":{"gitId":"pavz02"},"content":"        return LINE + SPACE + \"ERROR! D: Give a number greater than zero and smaller than the total number of tasks\\n\""},{"lineNumber":24,"author":{"gitId":"pavz02"},"content":"                + LINE;"},{"lineNumber":25,"author":{"gitId":"pavz02"},"content":"    }"},{"lineNumber":26,"author":{"gitId":"pavz02"},"content":""},{"lineNumber":27,"author":{"gitId":"pavz02"},"content":"    /**"},{"lineNumber":28,"author":{"gitId":"pavz02"},"content":"     * Message to be printed if the keyword that has been inputted is invalid."},{"lineNumber":29,"author":{"gitId":"pavz02"},"content":"     * @return The error message string."},{"lineNumber":30,"author":{"gitId":"pavz02"},"content":"     */"},{"lineNumber":31,"author":{"gitId":"pavz02"},"content":"    public static String invalidKeywordExceptionMessage() {"},{"lineNumber":32,"author":{"gitId":"pavz02"},"content":"        return LINE + SPACE + \"ERROR! D: The supported keywords are: \""},{"lineNumber":33,"author":{"gitId":"pavz02"},"content":"                + \"todo, deadline, event, done, list, delete, bye only.\\n\" + LINE;"},{"lineNumber":34,"author":{"gitId":"pavz02"},"content":"    }"},{"lineNumber":35,"author":{"gitId":"pavz02"},"content":""},{"lineNumber":36,"author":{"gitId":"pavz02"},"content":"    /**"},{"lineNumber":37,"author":{"gitId":"pavz02"},"content":"     * Message to be printed if the input format for a specific task is wrong."},{"lineNumber":38,"author":{"gitId":"pavz02"},"content":"     * @param task The type of task that had the wrong format."},{"lineNumber":39,"author":{"gitId":"pavz02"},"content":"     * @return The error message string."},{"lineNumber":40,"author":{"gitId":"pavz02"},"content":"     */"},{"lineNumber":41,"author":{"gitId":"pavz02"},"content":"    public static String invalidTaskFormatExceptionMessage(String task) {"},{"lineNumber":42,"author":{"gitId":"pavz02"},"content":"        return LINE + SPACE + \"ERROR! D: The format for the following task is wrong: \" + task"},{"lineNumber":43,"author":{"gitId":"pavz02"},"content":"                + \"\\n\" + SPACE + \"The expected format for the task is: \" + Ui.correctTaskFormat(task) + \"\\n\" + LINE;"},{"lineNumber":44,"author":{"gitId":"pavz02"},"content":"    }"},{"lineNumber":45,"author":{"gitId":"pavz02"},"content":""},{"lineNumber":46,"author":{"gitId":"pavz02"},"content":"    /**"},{"lineNumber":47,"author":{"gitId":"pavz02"},"content":"     * Prints the correct format of the given task."},{"lineNumber":48,"author":{"gitId":"pavz02"},"content":"     * @param task The task for which we want the format for."},{"lineNumber":49,"author":{"gitId":"pavz02"},"content":"     * @return A string explaining the format of the task."},{"lineNumber":50,"author":{"gitId":"pavz02"},"content":"     */"},{"lineNumber":51,"author":{"gitId":"pavz02"},"content":"    public static String correctTaskFormat(String task) {"},{"lineNumber":52,"author":{"gitId":"pavz02"},"content":"        switch(task) {"},{"lineNumber":53,"author":{"gitId":"pavz02"},"content":"        case \"todo\":"},{"lineNumber":54,"author":{"gitId":"pavz02"},"content":"            return \"todo *description of task*\";"},{"lineNumber":55,"author":{"gitId":"pavz02"},"content":"        case \"deadline\":"},{"lineNumber":56,"author":{"gitId":"pavz02"},"content":"            return \"deadline *description of task* /by *date and time*\";"},{"lineNumber":57,"author":{"gitId":"pavz02"},"content":"        default: //case \"event\""},{"lineNumber":58,"author":{"gitId":"pavz02"},"content":"            return \"event *description of task* /at *date and time*\";"},{"lineNumber":59,"author":{"gitId":"pavz02"},"content":"        }"},{"lineNumber":60,"author":{"gitId":"pavz02"},"content":"    }"},{"lineNumber":61,"author":{"gitId":"pavz02"},"content":""},{"lineNumber":62,"author":{"gitId":"pavz02"},"content":"    /**"},{"lineNumber":63,"author":{"gitId":"pavz02"},"content":"     * Message to be printed after a Task has been added."},{"lineNumber":64,"author":{"gitId":"pavz02"},"content":"     * @param keyword The type of Task added."},{"lineNumber":65,"author":{"gitId":"pavz02"},"content":"     * @param task The actual Task object that has been created with the user input."},{"lineNumber":66,"author":{"gitId":"pavz02"},"content":"     */"},{"lineNumber":67,"author":{"gitId":"pavz02"},"content":"    public static String outputMessageTask(String keyword, Task task) {"},{"lineNumber":68,"author":{"gitId":"pavz02"},"content":"        return LINE + SPACE + \"Done adding the \" + keyword + \" Task: \" + task + \"\\n\" + LINE;"},{"lineNumber":69,"author":{"gitId":"pavz02"},"content":"    }"},{"lineNumber":70,"author":{"gitId":"pavz02"},"content":""},{"lineNumber":71,"author":{"gitId":"pavz02"},"content":"    /**"},{"lineNumber":72,"author":{"gitId":"pavz02"},"content":"     * Message to be printed after a task is done."},{"lineNumber":73,"author":{"gitId":"pavz02"},"content":"     * @param task The Task object that has been created with the user input."},{"lineNumber":74,"author":{"gitId":"pavz02"},"content":"     */"},{"lineNumber":75,"author":{"gitId":"pavz02"},"content":"    public static String outputMessageDone(Task task) {"},{"lineNumber":76,"author":{"gitId":"pavz02"},"content":"        return LINE + SPACE + \"Good job! Another Task completed! I have marked it as done:\\n\""},{"lineNumber":77,"author":{"gitId":"pavz02"},"content":"                + SPACE + task + \"\\n\" + LINE;"},{"lineNumber":78,"author":{"gitId":"pavz02"},"content":"    }"},{"lineNumber":79,"author":{"gitId":"pavz02"},"content":""},{"lineNumber":80,"author":{"gitId":"pavz02"},"content":"    /**"},{"lineNumber":81,"author":{"gitId":"pavz02"},"content":"     * Message to be printed after a task is deleted."},{"lineNumber":82,"author":{"gitId":"pavz02"},"content":"     * @param task The task object that has been deleted according to the user input."},{"lineNumber":83,"author":{"gitId":"pavz02"},"content":"     */"},{"lineNumber":84,"author":{"gitId":"pavz02"},"content":"    public static String outputMessageDelete(Task task) {"},{"lineNumber":85,"author":{"gitId":"pavz02"},"content":"        return LINE + SPACE + \"Deleted the following task: \" + task + \"\\n\" + LINE;"},{"lineNumber":86,"author":{"gitId":"pavz02"},"content":"    }"},{"lineNumber":87,"author":{"gitId":"pavz02"},"content":""},{"lineNumber":88,"author":{"gitId":"pavz02"},"content":"    /**"},{"lineNumber":89,"author":{"gitId":"pavz02"},"content":"     * Lists all the tasks that are currently stored."},{"lineNumber":90,"author":{"gitId":"pavz02"},"content":"     * @param storage Array List of tasks."},{"lineNumber":91,"author":{"gitId":"pavz02"},"content":"     * @param count Number of tasks in the Array List."},{"lineNumber":92,"author":{"gitId":"pavz02"},"content":"     */"},{"lineNumber":93,"author":{"gitId":"pavz02"},"content":"    public static String outputMessageList(ArrayList\u003cTask\u003e storage, int count) {"},{"lineNumber":94,"author":{"gitId":"pavz02"},"content":"        String output \u003d LINE;"},{"lineNumber":95,"author":{"gitId":"pavz02"},"content":"        for (int i \u003d 1; i \u003c\u003d count; i++) {"},{"lineNumber":96,"author":{"gitId":"pavz02"},"content":"            output +\u003d SPACE + i + \". \" + storage.get(i - 1) + \"\\n\";"},{"lineNumber":97,"author":{"gitId":"pavz02"},"content":"        }"},{"lineNumber":98,"author":{"gitId":"pavz02"},"content":"        return output + LINE;"},{"lineNumber":99,"author":{"gitId":"pavz02"},"content":"    }"},{"lineNumber":100,"author":{"gitId":"pavz02"},"content":""},{"lineNumber":101,"author":{"gitId":"pavz02"},"content":"    /**"},{"lineNumber":102,"author":{"gitId":"pavz02"},"content":"     * Lists all the tasks with the searched for words."},{"lineNumber":103,"author":{"gitId":"pavz02"},"content":"     * @param storage Array List of tasks."},{"lineNumber":104,"author":{"gitId":"pavz02"},"content":"     * @param spl Array with the words that are being searched for in the Array List."},{"lineNumber":105,"author":{"gitId":"pavz02"},"content":"     */"},{"lineNumber":106,"author":{"gitId":"pavz02"},"content":"    public static String outputMessageFind(ArrayList\u003cTask\u003e storage, String[] spl) {"},{"lineNumber":107,"author":{"gitId":"pavz02"},"content":"        String output \u003d LINE;"},{"lineNumber":108,"author":{"gitId":"pavz02"},"content":"        int i \u003d 1;"},{"lineNumber":109,"author":{"gitId":"pavz02"},"content":"        for (Task t : storage) {"},{"lineNumber":110,"author":{"gitId":"pavz02"},"content":"            if (t.getDescription().contains(spl[1])) {"},{"lineNumber":111,"author":{"gitId":"pavz02"},"content":"                output +\u003d SPACE + i + \". \" + t + \"\\n\";"},{"lineNumber":112,"author":{"gitId":"pavz02"},"content":"                i++;"},{"lineNumber":113,"author":{"gitId":"pavz02"},"content":"            }"},{"lineNumber":114,"author":{"gitId":"pavz02"},"content":"        }"},{"lineNumber":115,"author":{"gitId":"pavz02"},"content":"        return output + LINE;"},{"lineNumber":116,"author":{"gitId":"pavz02"},"content":"    }"},{"lineNumber":117,"author":{"gitId":"pavz02"},"content":""},{"lineNumber":118,"author":{"gitId":"pavz02"},"content":"    /**"},{"lineNumber":119,"author":{"gitId":"pavz02"},"content":"     * Message to be printed when the program ends."},{"lineNumber":120,"author":{"gitId":"pavz02"},"content":"     */"},{"lineNumber":121,"author":{"gitId":"pavz02"},"content":"    public static String outputMessageBye() {"},{"lineNumber":122,"author":{"gitId":"pavz02"},"content":"        return LINE + SPACE + \"Byee, hope to see you again soon!\" + LINE;"},{"lineNumber":123,"author":{"gitId":"pavz02"},"content":"    }"},{"lineNumber":124,"author":{"gitId":"pavz02"},"content":"}"}],"authorContributionMap":{"pavz02":124}},{"path":"src/main/java/deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"pavz02"},"content":"import java.time.LocalDate;"},{"lineNumber":2,"author":{"gitId":"pavz02"},"content":"import java.time.LocalTime;"},{"lineNumber":3,"author":{"gitId":"pavz02"},"content":""},{"lineNumber":4,"author":{"gitId":"pavz02"},"content":"/**"},{"lineNumber":5,"author":{"gitId":"pavz02"},"content":" * Type of Task that the user can input."},{"lineNumber":6,"author":{"gitId":"pavz02"},"content":" */"},{"lineNumber":7,"author":{"gitId":"pavz02"},"content":"public class Deadline extends Task {"},{"lineNumber":8,"author":{"gitId":"pavz02"},"content":"    /**"},{"lineNumber":9,"author":{"gitId":"pavz02"},"content":"     * Constructor for Deadline objects"},{"lineNumber":10,"author":{"gitId":"pavz02"},"content":"     * @param description What the deadline is."},{"lineNumber":11,"author":{"gitId":"pavz02"},"content":"     * @param date The date by which it has to be completed."},{"lineNumber":12,"author":{"gitId":"pavz02"},"content":"     */"},{"lineNumber":13,"author":{"gitId":"pavz02"},"content":"    Deadline(String description, LocalDate date, LocalTime time) {"},{"lineNumber":14,"author":{"gitId":"pavz02"},"content":"        super(description, date, time);"},{"lineNumber":15,"author":{"gitId":"pavz02"},"content":"    }"},{"lineNumber":16,"author":{"gitId":"pavz02"},"content":""},{"lineNumber":17,"author":{"gitId":"pavz02"},"content":"    /**"},{"lineNumber":18,"author":{"gitId":"pavz02"},"content":"     * Getter which returns the identifier for the type of Task it is."},{"lineNumber":19,"author":{"gitId":"pavz02"},"content":"     * @return D for Deadline."},{"lineNumber":20,"author":{"gitId":"pavz02"},"content":"     */"},{"lineNumber":21,"author":{"gitId":"pavz02"},"content":"    @Override"},{"lineNumber":22,"author":{"gitId":"pavz02"},"content":"    public String getInitial() {"},{"lineNumber":23,"author":{"gitId":"pavz02"},"content":"        return \"D\";"},{"lineNumber":24,"author":{"gitId":"pavz02"},"content":"    }"},{"lineNumber":25,"author":{"gitId":"pavz02"},"content":""},{"lineNumber":26,"author":{"gitId":"pavz02"},"content":"    /**"},{"lineNumber":27,"author":{"gitId":"pavz02"},"content":"     * String representation of a Deadline object."},{"lineNumber":28,"author":{"gitId":"pavz02"},"content":"     * @return String with the description and date of the deadline."},{"lineNumber":29,"author":{"gitId":"pavz02"},"content":"     */"},{"lineNumber":30,"author":{"gitId":"pavz02"},"content":"    @Override"},{"lineNumber":31,"author":{"gitId":"pavz02"},"content":"    public String toString() {"},{"lineNumber":32,"author":{"gitId":"pavz02"},"content":"        return super.toString() + \" (By: \" + dateFormat.format(date) + \" by \" + timeFormat.format(time) + \")\";"},{"lineNumber":33,"author":{"gitId":"pavz02"},"content":"    }"},{"lineNumber":34,"author":{"gitId":"pavz02"},"content":"}"}],"authorContributionMap":{"pavz02":34}},{"path":"src/main/java/event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"pavz02"},"content":"import java.time.LocalDate;"},{"lineNumber":2,"author":{"gitId":"pavz02"},"content":"import java.time.LocalTime;"},{"lineNumber":3,"author":{"gitId":"pavz02"},"content":""},{"lineNumber":4,"author":{"gitId":"pavz02"},"content":"/**"},{"lineNumber":5,"author":{"gitId":"pavz02"},"content":" * Type of Task that the user can input."},{"lineNumber":6,"author":{"gitId":"pavz02"},"content":" */"},{"lineNumber":7,"author":{"gitId":"pavz02"},"content":"public class Event extends Task {"},{"lineNumber":8,"author":{"gitId":"pavz02"},"content":""},{"lineNumber":9,"author":{"gitId":"pavz02"},"content":"    /**"},{"lineNumber":10,"author":{"gitId":"pavz02"},"content":"     * Constructor for Event objects."},{"lineNumber":11,"author":{"gitId":"pavz02"},"content":"     * @param description What the event is."},{"lineNumber":12,"author":{"gitId":"pavz02"},"content":"     * @param date The date by which it has to be completed."},{"lineNumber":13,"author":{"gitId":"pavz02"},"content":"     */"},{"lineNumber":14,"author":{"gitId":"pavz02"},"content":"    Event(String description, LocalDate date, LocalTime time) {"},{"lineNumber":15,"author":{"gitId":"pavz02"},"content":"        super(description, date, time);"},{"lineNumber":16,"author":{"gitId":"pavz02"},"content":"    }"},{"lineNumber":17,"author":{"gitId":"pavz02"},"content":""},{"lineNumber":18,"author":{"gitId":"pavz02"},"content":"    /**"},{"lineNumber":19,"author":{"gitId":"pavz02"},"content":"     * Getter which returns the identifier for the type of Task it is."},{"lineNumber":20,"author":{"gitId":"pavz02"},"content":"     * @return E for Event."},{"lineNumber":21,"author":{"gitId":"pavz02"},"content":"     */"},{"lineNumber":22,"author":{"gitId":"pavz02"},"content":"    @Override"},{"lineNumber":23,"author":{"gitId":"pavz02"},"content":"    public String getInitial() {"},{"lineNumber":24,"author":{"gitId":"pavz02"},"content":"        return \"E\";"},{"lineNumber":25,"author":{"gitId":"pavz02"},"content":"    }"},{"lineNumber":26,"author":{"gitId":"pavz02"},"content":""},{"lineNumber":27,"author":{"gitId":"pavz02"},"content":"    /**"},{"lineNumber":28,"author":{"gitId":"pavz02"},"content":"     * String representation of an Event object."},{"lineNumber":29,"author":{"gitId":"pavz02"},"content":"     * @return String with the description and date of the deadline."},{"lineNumber":30,"author":{"gitId":"pavz02"},"content":"     */"},{"lineNumber":31,"author":{"gitId":"pavz02"},"content":"    @Override"},{"lineNumber":32,"author":{"gitId":"pavz02"},"content":"    public String toString() {"},{"lineNumber":33,"author":{"gitId":"pavz02"},"content":"        return super.toString() + \" (at: \" + dateFormat.format(date) + \" at \" + timeFormat.format(time) + \")\";"},{"lineNumber":34,"author":{"gitId":"pavz02"},"content":"    }"},{"lineNumber":35,"author":{"gitId":"pavz02"},"content":"}"}],"authorContributionMap":{"pavz02":35}},{"path":"src/main/java/todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"pavz02"},"content":"/**"},{"lineNumber":2,"author":{"gitId":"pavz02"},"content":" * Type of task that the user can input."},{"lineNumber":3,"author":{"gitId":"pavz02"},"content":" */"},{"lineNumber":4,"author":{"gitId":"pavz02"},"content":"public class Todo extends Task {"},{"lineNumber":5,"author":{"gitId":"pavz02"},"content":""},{"lineNumber":6,"author":{"gitId":"pavz02"},"content":"    /**"},{"lineNumber":7,"author":{"gitId":"pavz02"},"content":"     * Constructor for Todo objects."},{"lineNumber":8,"author":{"gitId":"pavz02"},"content":"     * @param description Describes what is to be done."},{"lineNumber":9,"author":{"gitId":"pavz02"},"content":"     */"},{"lineNumber":10,"author":{"gitId":"pavz02"},"content":"    Todo(String description) {"},{"lineNumber":11,"author":{"gitId":"pavz02"},"content":"        super(description, null, null);"},{"lineNumber":12,"author":{"gitId":"pavz02"},"content":"    }"},{"lineNumber":13,"author":{"gitId":"pavz02"},"content":""},{"lineNumber":14,"author":{"gitId":"pavz02"},"content":"    /**"},{"lineNumber":15,"author":{"gitId":"pavz02"},"content":"     * Getter which returns an identifier for the type of task it is."},{"lineNumber":16,"author":{"gitId":"pavz02"},"content":"     * @return T for Todo."},{"lineNumber":17,"author":{"gitId":"pavz02"},"content":"     */"},{"lineNumber":18,"author":{"gitId":"pavz02"},"content":"    @Override"},{"lineNumber":19,"author":{"gitId":"pavz02"},"content":"    public String getInitial() {"},{"lineNumber":20,"author":{"gitId":"pavz02"},"content":"        return \"T\";"},{"lineNumber":21,"author":{"gitId":"pavz02"},"content":"    }"},{"lineNumber":22,"author":{"gitId":"pavz02"},"content":"}"}],"authorContributionMap":{"pavz02":22}},{"path":"src/test/java/DukeTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"pavz02"},"content":"import org.junit.jupiter.api.Test;"},{"lineNumber":2,"author":{"gitId":"pavz02"},"content":""},{"lineNumber":3,"author":{"gitId":"pavz02"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;"},{"lineNumber":4,"author":{"gitId":"pavz02"},"content":""},{"lineNumber":5,"author":{"gitId":"pavz02"},"content":"public class DukeTest {"},{"lineNumber":6,"author":{"gitId":"pavz02"},"content":"    @Test"},{"lineNumber":7,"author":{"gitId":"pavz02"},"content":"    public void dummyTest() {"},{"lineNumber":8,"author":{"gitId":"pavz02"},"content":"        assertEquals(2, 2);"},{"lineNumber":9,"author":{"gitId":"pavz02"},"content":"    }"},{"lineNumber":10,"author":{"gitId":"pavz02"},"content":""},{"lineNumber":11,"author":{"gitId":"pavz02"},"content":"}"}],"authorContributionMap":{"pavz02":11}},{"path":"src/test/java/UiTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"pavz02"},"content":"import org.junit.jupiter.api.Test;"},{"lineNumber":2,"author":{"gitId":"pavz02"},"content":""},{"lineNumber":3,"author":{"gitId":"pavz02"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;"},{"lineNumber":4,"author":{"gitId":"pavz02"},"content":""},{"lineNumber":5,"author":{"gitId":"pavz02"},"content":"public class UiTest {"},{"lineNumber":6,"author":{"gitId":"pavz02"},"content":"    private static final String SPACE \u003d \"     \";"},{"lineNumber":7,"author":{"gitId":"pavz02"},"content":"    private static final String LINE \u003d \"\\n     \u003c\u003c\u003e\u003e\u003c\u003c\u003e\u003e\u003c\u003c\u003e\u003e\u003c\u003c\u003e\u003e\u003c\u003c\u003e\u003e\u003c\u003c\u003e\u003e\u003c\u003c\u003e\u003e\u003c\u003c\u003e\u003e\u003c\u003c\u003e\u003e\u003c\u003c\u003e\u003e\u003c\u003c\u003e\u003e\u003c\u003c\u003e\u003e\u003c\u003c\u003e\u003e\u003c\u003c\u003e\u003e\u003c\u003c\u003e\u003e\u003c\u003c\u003e\u003e\u003c\u003c\u003e\u003e\u003c\u003c\u003e\u003e\u003c\u003c\u003e\u003e\u003c\u003c\u003e\u003e\u003c\u003c\u003e\u003e\u003c\u003c\u003e\u003e\u003c\u003c\u003e\u003e\u003c\u003c\u003e\u003e\u003c\u003c\u003e\u003e\u003c\u003c\u003e\u003e\\n\";"},{"lineNumber":8,"author":{"gitId":"pavz02"},"content":""},{"lineNumber":9,"author":{"gitId":"pavz02"},"content":"    @Test"},{"lineNumber":10,"author":{"gitId":"pavz02"},"content":"    public void CorrectTaskFormat_TypesOfTasks_FormatOfTask() {"},{"lineNumber":11,"author":{"gitId":"pavz02"},"content":"        assertEquals(\"todo *description of task*\", Ui.correctTaskFormat(\"todo\"));"},{"lineNumber":12,"author":{"gitId":"pavz02"},"content":"    }"},{"lineNumber":13,"author":{"gitId":"pavz02"},"content":""},{"lineNumber":14,"author":{"gitId":"pavz02"},"content":"    @Test"},{"lineNumber":15,"author":{"gitId":"pavz02"},"content":"    public void InvalidNumberExceptionMessage_CorrectMessageOutput() {"},{"lineNumber":16,"author":{"gitId":"pavz02"},"content":"        assertEquals(LINE + SPACE + \"ERROR! D: Please give a number greater than zero and smaller than the total number of tasks\" + LINE,"},{"lineNumber":17,"author":{"gitId":"pavz02"},"content":"                Ui.invalidNumberExceptionMessage());"},{"lineNumber":18,"author":{"gitId":"pavz02"},"content":"    }"},{"lineNumber":19,"author":{"gitId":"pavz02"},"content":""},{"lineNumber":20,"author":{"gitId":"pavz02"},"content":"    @Test"},{"lineNumber":21,"author":{"gitId":"pavz02"},"content":"    public void InvalidKeywordExceptionMessage_CorrectMessageOutput() {"},{"lineNumber":22,"author":{"gitId":"pavz02"},"content":"        assertEquals(LINE + SPACE + \"The supported keywords are: todo, deadline, event, done, list, delete, bye only.\" + LINE,"},{"lineNumber":23,"author":{"gitId":"pavz02"},"content":"                Ui.invalidKeywordExceptionMessage());"},{"lineNumber":24,"author":{"gitId":"pavz02"},"content":"    }"},{"lineNumber":25,"author":{"gitId":"pavz02"},"content":""},{"lineNumber":26,"author":{"gitId":"pavz02"},"content":"}"}],"authorContributionMap":{"pavz02":26}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"pavz02"},"content":"todo a"},{"lineNumber":2,"author":{"gitId":"pavz02"},"content":"todo b"},{"lineNumber":3,"author":{"gitId":"pavz02"},"content":"deadline c /by 1"},{"lineNumber":4,"author":{"gitId":"pavz02"},"content":"list"},{"lineNumber":5,"author":{"gitId":"pavz02"},"content":"deadline d /by 2"},{"lineNumber":6,"author":{"gitId":"pavz02"},"content":"done 1"},{"lineNumber":7,"author":{"gitId":"pavz02"},"content":"done 2"},{"lineNumber":8,"author":{"gitId":"pavz02"},"content":"event e /at 3"},{"lineNumber":9,"author":{"gitId":"pavz02"},"content":"event f /at 4"},{"lineNumber":10,"author":{"gitId":"pavz02"},"content":"list"},{"lineNumber":11,"author":{"gitId":"pavz02"},"content":"delete 2"},{"lineNumber":12,"author":{"gitId":"pavz02"},"content":"delete 4"},{"lineNumber":13,"author":{"gitId":"pavz02"},"content":"bye"}],"authorContributionMap":{"pavz02":13}}]
