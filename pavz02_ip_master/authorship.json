[{"path":"data/tasks.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"pavz02"},"content":"T@@@0@@@aaa"},{"lineNumber":2,"author":{"gitId":"pavz02"},"content":"T@@@0@@@bbb"},{"lineNumber":3,"author":{"gitId":"pavz02"},"content":"T@@@0@@@aaa aaa"},{"lineNumber":4,"author":{"gitId":"pavz02"},"content":"T@@@0@@@aaa bbb"}],"authorContributionMap":{"pavz02":4}},{"path":"src/main/java/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"pavz02"},"content":"import java.io.IOException;"},{"lineNumber":2,"author":{"gitId":"pavz02"},"content":""},{"lineNumber":3,"author":{"gitId":"pavz02"},"content":"/*"},{"lineNumber":4,"author":{"gitId":"pavz02"},"content":"Need to address:"},{"lineNumber":5,"author":{"gitId":"pavz02"},"content":"- IO exception in process_bye"},{"lineNumber":6,"author":{"gitId":"pavz02"},"content":"- making task an abstract class"},{"lineNumber":7,"author":{"gitId":"pavz02"},"content":"- upload from hard drive default expression"},{"lineNumber":8,"author":{"gitId":"pavz02"},"content":"- declared get_date abstract even though todo doesn\u0027t use it"},{"lineNumber":9,"author":{"gitId":"pavz02"},"content":"- support different date formats and time also"},{"lineNumber":10,"author":{"gitId":"pavz02"},"content":"- split the code between the classes better"},{"lineNumber":11,"author":{"gitId":"pavz02"},"content":"- Inconsistencies in exception classes"},{"lineNumber":12,"author":{"gitId":"pavz02"},"content":"- default in switch-case is returning a random todo class -rectify"},{"lineNumber":13,"author":{"gitId":"pavz02"},"content":" */"},{"lineNumber":14,"author":{"gitId":"pavz02"},"content":""},{"lineNumber":15,"author":{"gitId":"pavz02"},"content":"/**"},{"lineNumber":16,"author":{"gitId":"pavz02"},"content":" * Main class which brings all the other classes together."},{"lineNumber":17,"author":{"gitId":"pavz02"},"content":" */"},{"lineNumber":18,"author":{"gitId":"-"},"content":"public class Duke {"},{"lineNumber":19,"author":{"gitId":"pavz02"},"content":"    /**"},{"lineNumber":20,"author":{"gitId":"pavz02"},"content":"     * Program starts in the main method here."},{"lineNumber":21,"author":{"gitId":"pavz02"},"content":"     * @param args No user input in this main method."},{"lineNumber":22,"author":{"gitId":"pavz02"},"content":"     * @throws IOException In case of input errors."},{"lineNumber":23,"author":{"gitId":"pavz02"},"content":"     */"},{"lineNumber":24,"author":{"gitId":"pavz02"},"content":"    public static void main(String[] args) throws IOException {"},{"lineNumber":25,"author":{"gitId":"pavz02"},"content":"        Ui.greet();"},{"lineNumber":26,"author":{"gitId":"pavz02"},"content":"        TaskList.checkFileFolderSpecifications();"},{"lineNumber":27,"author":{"gitId":"pavz02"},"content":"        Parser.parse();"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":29,"author":{"gitId":"-"},"content":"}"}],"authorContributionMap":{"pavz02":26,"-":3}},{"path":"src/main/java/InvalidKeywordException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"pavz02"},"content":"/**"},{"lineNumber":2,"author":{"gitId":"pavz02"},"content":" * Exception that occurs when the user inputs an unaccepted keyword."},{"lineNumber":3,"author":{"gitId":"pavz02"},"content":" */"},{"lineNumber":4,"author":{"gitId":"pavz02"},"content":"public class InvalidKeywordException extends Exception {"},{"lineNumber":5,"author":{"gitId":"pavz02"},"content":"    /** Helps the formatting of the output */"},{"lineNumber":6,"author":{"gitId":"pavz02"},"content":"    private static final String SPACE \u003d \"     \";"},{"lineNumber":7,"author":{"gitId":"pavz02"},"content":"    private static final String LINE \u003d \"\\n     \u003c\u003c\u003e\u003e\u003c\u003c\u003e\u003e\u003c\u003c\u003e\u003e\u003c\u003c\u003e\u003e\u003c\u003c\u003e\u003e\u003c\u003c\u003e\u003e\u003c\u003c\u003e\u003e\u003c\u003c\u003e\u003e\u003c\u003c\u003e\u003e\u003c\u003c\u003e\u003e\u003c\u003c\u003e\u003e\u003c\u003c\u003e\u003e\u003c\u003c\u003e\u003e\u003c\u003c\u003e\u003e\u003c\u003c\u003e\u003e\u003c\u003c\u003e\u003e\u003c\u003c\u003e\u003e\u003c\u003c\u003e\u003e\u003c\u003c\u003e\u003e\u003c\u003c\u003e\u003e\u003c\u003c\u003e\u003e\u003c\u003c\u003e\u003e\\n\";"},{"lineNumber":8,"author":{"gitId":"pavz02"},"content":""},{"lineNumber":9,"author":{"gitId":"pavz02"},"content":"    /**"},{"lineNumber":10,"author":{"gitId":"pavz02"},"content":"     * Constructor for the exception."},{"lineNumber":11,"author":{"gitId":"pavz02"},"content":"     */"},{"lineNumber":12,"author":{"gitId":"pavz02"},"content":"    public InvalidKeywordException() {"},{"lineNumber":13,"author":{"gitId":"pavz02"},"content":"        super(LINE + SPACE + \"The supported keywords are: todo, deadline, event, done, list, delete, bye only.\" + LINE);"},{"lineNumber":14,"author":{"gitId":"pavz02"},"content":"    }"},{"lineNumber":15,"author":{"gitId":"pavz02"},"content":""},{"lineNumber":16,"author":{"gitId":"pavz02"},"content":"    /**"},{"lineNumber":17,"author":{"gitId":"pavz02"},"content":"     * Prints the error message."},{"lineNumber":18,"author":{"gitId":"pavz02"},"content":"     */"},{"lineNumber":19,"author":{"gitId":"pavz02"},"content":"    public void printMessage() {"},{"lineNumber":20,"author":{"gitId":"pavz02"},"content":"        System.out.println(super.getMessage());"},{"lineNumber":21,"author":{"gitId":"pavz02"},"content":"    }"},{"lineNumber":22,"author":{"gitId":"pavz02"},"content":"}"}],"authorContributionMap":{"pavz02":22}},{"path":"src/main/java/InvalidNumberException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"pavz02"},"content":"/**"},{"lineNumber":2,"author":{"gitId":"pavz02"},"content":" * Exception that occurs when the user does not input a valid number."},{"lineNumber":3,"author":{"gitId":"pavz02"},"content":" */"},{"lineNumber":4,"author":{"gitId":"pavz02"},"content":"public class InvalidNumberException extends Exception {"},{"lineNumber":5,"author":{"gitId":"pavz02"},"content":"    /**"},{"lineNumber":6,"author":{"gitId":"pavz02"},"content":"     * Constructor for the exception."},{"lineNumber":7,"author":{"gitId":"pavz02"},"content":"     * @param message Error message to be printed out."},{"lineNumber":8,"author":{"gitId":"pavz02"},"content":"     */"},{"lineNumber":9,"author":{"gitId":"pavz02"},"content":"    public InvalidNumberException(String message) {"},{"lineNumber":10,"author":{"gitId":"pavz02"},"content":"        super(message);"},{"lineNumber":11,"author":{"gitId":"pavz02"},"content":"    }"},{"lineNumber":12,"author":{"gitId":"pavz02"},"content":""},{"lineNumber":13,"author":{"gitId":"pavz02"},"content":"    /**"},{"lineNumber":14,"author":{"gitId":"pavz02"},"content":"     * Prints the error message."},{"lineNumber":15,"author":{"gitId":"pavz02"},"content":"     */"},{"lineNumber":16,"author":{"gitId":"pavz02"},"content":"    public void printMessage() {"},{"lineNumber":17,"author":{"gitId":"pavz02"},"content":"        System.out.println(super.getMessage());"},{"lineNumber":18,"author":{"gitId":"pavz02"},"content":"    }"},{"lineNumber":19,"author":{"gitId":"pavz02"},"content":"}"}],"authorContributionMap":{"pavz02":19}},{"path":"src/main/java/InvalidTaskFormatException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"pavz02"},"content":"/**"},{"lineNumber":2,"author":{"gitId":"pavz02"},"content":" * Exception that occurs when the input format is wrong."},{"lineNumber":3,"author":{"gitId":"pavz02"},"content":" */"},{"lineNumber":4,"author":{"gitId":"pavz02"},"content":"public class InvalidTaskFormatException extends Exception {"},{"lineNumber":5,"author":{"gitId":"pavz02"},"content":"    /**"},{"lineNumber":6,"author":{"gitId":"pavz02"},"content":"     * Constructor for the exception."},{"lineNumber":7,"author":{"gitId":"pavz02"},"content":"     */"},{"lineNumber":8,"author":{"gitId":"pavz02"},"content":"    public InvalidTaskFormatException(String message) {"},{"lineNumber":9,"author":{"gitId":"pavz02"},"content":"        super(message);"},{"lineNumber":10,"author":{"gitId":"pavz02"},"content":"    }"},{"lineNumber":11,"author":{"gitId":"pavz02"},"content":""},{"lineNumber":12,"author":{"gitId":"pavz02"},"content":"    /**"},{"lineNumber":13,"author":{"gitId":"pavz02"},"content":"     * Prints the error message."},{"lineNumber":14,"author":{"gitId":"pavz02"},"content":"     */"},{"lineNumber":15,"author":{"gitId":"pavz02"},"content":"    public void printMessage() {"},{"lineNumber":16,"author":{"gitId":"pavz02"},"content":"        System.out.println(super.getMessage());"},{"lineNumber":17,"author":{"gitId":"pavz02"},"content":"    }"},{"lineNumber":18,"author":{"gitId":"pavz02"},"content":"}"}],"authorContributionMap":{"pavz02":18}},{"path":"src/main/java/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"pavz02"},"content":"import java.io.IOException;"},{"lineNumber":2,"author":{"gitId":"pavz02"},"content":"import java.util.Scanner;"},{"lineNumber":3,"author":{"gitId":"pavz02"},"content":""},{"lineNumber":4,"author":{"gitId":"pavz02"},"content":"/**"},{"lineNumber":5,"author":{"gitId":"pavz02"},"content":" * Parses the inputs given by the user."},{"lineNumber":6,"author":{"gitId":"pavz02"},"content":" */"},{"lineNumber":7,"author":{"gitId":"pavz02"},"content":"public class Parser {"},{"lineNumber":8,"author":{"gitId":"pavz02"},"content":"    /**"},{"lineNumber":9,"author":{"gitId":"pavz02"},"content":"     * Determines the keyword and processes the input based on the keyword."},{"lineNumber":10,"author":{"gitId":"pavz02"},"content":"     * @throws IOException In case of user errors."},{"lineNumber":11,"author":{"gitId":"pavz02"},"content":"     */"},{"lineNumber":12,"author":{"gitId":"pavz02"},"content":"    static void parse() throws IOException {"},{"lineNumber":13,"author":{"gitId":"pavz02"},"content":"        Scanner sc \u003d new Scanner(System.in);"},{"lineNumber":14,"author":{"gitId":"pavz02"},"content":"        boolean canExitNow \u003d false;"},{"lineNumber":15,"author":{"gitId":"pavz02"},"content":"        while (!canExitNow) {"},{"lineNumber":16,"author":{"gitId":"pavz02"},"content":"            String inp \u003d sc.nextLine();"},{"lineNumber":17,"author":{"gitId":"pavz02"},"content":"            String[] spl \u003d inp.split(\" \", 2);"},{"lineNumber":18,"author":{"gitId":"pavz02"},"content":"            try {"},{"lineNumber":19,"author":{"gitId":"pavz02"},"content":"                switch (spl[0]) {"},{"lineNumber":20,"author":{"gitId":"pavz02"},"content":"                case \"todo\":"},{"lineNumber":21,"author":{"gitId":"pavz02"},"content":"                    checkSplLength(spl, 2, \"todo\");"},{"lineNumber":22,"author":{"gitId":"pavz02"},"content":"                    TaskList.processTodo(spl);"},{"lineNumber":23,"author":{"gitId":"pavz02"},"content":"                    break;"},{"lineNumber":24,"author":{"gitId":"pavz02"},"content":"                case \"deadline\":"},{"lineNumber":25,"author":{"gitId":"pavz02"},"content":"                    checkSplLength(spl, 2, \"deadline\");"},{"lineNumber":26,"author":{"gitId":"pavz02"},"content":"                    String[] spl2 \u003d spl[1].split(\" /by \", 2);"},{"lineNumber":27,"author":{"gitId":"pavz02"},"content":"                    checkSplLength(spl2, 2, \"deadline\");"},{"lineNumber":28,"author":{"gitId":"pavz02"},"content":"                    TaskList.processDeadline(spl2);"},{"lineNumber":29,"author":{"gitId":"pavz02"},"content":"                case \"event\":"},{"lineNumber":30,"author":{"gitId":"pavz02"},"content":"                    checkSplLength(spl, 2, \"event\");"},{"lineNumber":31,"author":{"gitId":"pavz02"},"content":"                    String[] spl3 \u003dspl[1].split(\" /at \", 2);"},{"lineNumber":32,"author":{"gitId":"pavz02"},"content":"                    checkSplLength(spl3, 2, \"event\");"},{"lineNumber":33,"author":{"gitId":"pavz02"},"content":"                    TaskList.processEvent(spl3);"},{"lineNumber":34,"author":{"gitId":"pavz02"},"content":"                    break;"},{"lineNumber":35,"author":{"gitId":"pavz02"},"content":"                case \"done\":"},{"lineNumber":36,"author":{"gitId":"pavz02"},"content":"                    checkSplLength(spl, 2, \"done\");"},{"lineNumber":37,"author":{"gitId":"pavz02"},"content":"                    isInt(spl[1]);"},{"lineNumber":38,"author":{"gitId":"pavz02"},"content":"                    TaskList.processDone(spl);"},{"lineNumber":39,"author":{"gitId":"pavz02"},"content":"                case \"list\":"},{"lineNumber":40,"author":{"gitId":"pavz02"},"content":"                    checkSplLength(spl, 1, \"list\");"},{"lineNumber":41,"author":{"gitId":"pavz02"},"content":"                    TaskList.processList();"},{"lineNumber":42,"author":{"gitId":"pavz02"},"content":"                    break;"},{"lineNumber":43,"author":{"gitId":"pavz02"},"content":"                case \"delete\":"},{"lineNumber":44,"author":{"gitId":"pavz02"},"content":"                    checkSplLength(spl, 2, \"delete\");"},{"lineNumber":45,"author":{"gitId":"pavz02"},"content":"                    isInt(spl[1]);"},{"lineNumber":46,"author":{"gitId":"pavz02"},"content":"                    TaskList.processDelete(spl);"},{"lineNumber":47,"author":{"gitId":"pavz02"},"content":"                    break;"},{"lineNumber":48,"author":{"gitId":"pavz02"},"content":"                case \"bye\":"},{"lineNumber":49,"author":{"gitId":"pavz02"},"content":"                    checkSplLength(spl, 1, \"bye\");"},{"lineNumber":50,"author":{"gitId":"pavz02"},"content":"                    TaskList.processBye();"},{"lineNumber":51,"author":{"gitId":"pavz02"},"content":"                    canExitNow \u003d true;"},{"lineNumber":52,"author":{"gitId":"pavz02"},"content":"                    break;"},{"lineNumber":53,"author":{"gitId":"pavz02"},"content":"                case \"find\":"},{"lineNumber":54,"author":{"gitId":"pavz02"},"content":"                    checkSplLength(spl, 2, \"find\");"},{"lineNumber":55,"author":{"gitId":"pavz02"},"content":"                    TaskList.processFind(spl);"},{"lineNumber":56,"author":{"gitId":"pavz02"},"content":"                    break;"},{"lineNumber":57,"author":{"gitId":"pavz02"},"content":"                default:"},{"lineNumber":58,"author":{"gitId":"pavz02"},"content":"                    throw new InvalidKeywordException();"},{"lineNumber":59,"author":{"gitId":"pavz02"},"content":"                }"},{"lineNumber":60,"author":{"gitId":"pavz02"},"content":"            } catch (InvalidTaskFormatException e) {"},{"lineNumber":61,"author":{"gitId":"pavz02"},"content":"                e.printMessage();"},{"lineNumber":62,"author":{"gitId":"pavz02"},"content":"            } catch (InvalidNumberException e) {"},{"lineNumber":63,"author":{"gitId":"pavz02"},"content":"                e.printMessage();"},{"lineNumber":64,"author":{"gitId":"pavz02"},"content":"            } catch (InvalidKeywordException e) {"},{"lineNumber":65,"author":{"gitId":"pavz02"},"content":"                e.printMessage();"},{"lineNumber":66,"author":{"gitId":"pavz02"},"content":"            }"},{"lineNumber":67,"author":{"gitId":"pavz02"},"content":"        }"},{"lineNumber":68,"author":{"gitId":"pavz02"},"content":"    }"},{"lineNumber":69,"author":{"gitId":"pavz02"},"content":""},{"lineNumber":70,"author":{"gitId":"pavz02"},"content":"    /**"},{"lineNumber":71,"author":{"gitId":"pavz02"},"content":"     * Checks whether a given String can be parsed as an Integer."},{"lineNumber":72,"author":{"gitId":"pavz02"},"content":"     * @param s A string."},{"lineNumber":73,"author":{"gitId":"pavz02"},"content":"     * @throws InvalidNumberException Thrown in the case where the String is not an Integer."},{"lineNumber":74,"author":{"gitId":"pavz02"},"content":"     */"},{"lineNumber":75,"author":{"gitId":"pavz02"},"content":"    static void isInt(String s) throws InvalidNumberException {"},{"lineNumber":76,"author":{"gitId":"pavz02"},"content":"        try {"},{"lineNumber":77,"author":{"gitId":"pavz02"},"content":"            int x \u003d Integer.parseInt(s);"},{"lineNumber":78,"author":{"gitId":"pavz02"},"content":"            if (x \u003e TaskList.getCount()) {"},{"lineNumber":79,"author":{"gitId":"pavz02"},"content":"                throw new InvalidNumberException(Ui.InvalidNumberExceptionMessage());"},{"lineNumber":80,"author":{"gitId":"pavz02"},"content":"            }"},{"lineNumber":81,"author":{"gitId":"pavz02"},"content":"        } catch (NumberFormatException e){"},{"lineNumber":82,"author":{"gitId":"pavz02"},"content":"            throw new InvalidNumberException(Ui.InvalidNumberExceptionMessage());"},{"lineNumber":83,"author":{"gitId":"pavz02"},"content":"        }"},{"lineNumber":84,"author":{"gitId":"pavz02"},"content":"    }"},{"lineNumber":85,"author":{"gitId":"pavz02"},"content":""},{"lineNumber":86,"author":{"gitId":"pavz02"},"content":"    /**"},{"lineNumber":87,"author":{"gitId":"pavz02"},"content":"     * Checks whether an array (spl) is of the given length (x)."},{"lineNumber":88,"author":{"gitId":"pavz02"},"content":"     * This determines whether the format of the input is correct."},{"lineNumber":89,"author":{"gitId":"pavz02"},"content":"     * @param spl Array of strings."},{"lineNumber":90,"author":{"gitId":"pavz02"},"content":"     * @param x Length the array is supposed to be checked for."},{"lineNumber":91,"author":{"gitId":"pavz02"},"content":"     * @param task To throw an error message dependent on the type of task."},{"lineNumber":92,"author":{"gitId":"pavz02"},"content":"     * @throws InvalidTaskFormatException Thrown is the array is not of the given length."},{"lineNumber":93,"author":{"gitId":"pavz02"},"content":"     */"},{"lineNumber":94,"author":{"gitId":"pavz02"},"content":"    static void checkSplLength(String[] spl, int x, String task) throws InvalidTaskFormatException {"},{"lineNumber":95,"author":{"gitId":"pavz02"},"content":"        if (spl.length !\u003d x) {"},{"lineNumber":96,"author":{"gitId":"pavz02"},"content":"            throw new InvalidTaskFormatException(Ui.InvalidTaskFormatExceptionMessage(task));"},{"lineNumber":97,"author":{"gitId":"pavz02"},"content":"        }"},{"lineNumber":98,"author":{"gitId":"pavz02"},"content":"    }"},{"lineNumber":99,"author":{"gitId":"pavz02"},"content":"}"}],"authorContributionMap":{"pavz02":99}},{"path":"src/main/java/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"pavz02"},"content":"import java.io.File;"},{"lineNumber":2,"author":{"gitId":"pavz02"},"content":"import java.io.FileNotFoundException;"},{"lineNumber":3,"author":{"gitId":"pavz02"},"content":"import java.io.FileWriter;"},{"lineNumber":4,"author":{"gitId":"pavz02"},"content":"import java.io.IOException;"},{"lineNumber":5,"author":{"gitId":"pavz02"},"content":""},{"lineNumber":6,"author":{"gitId":"pavz02"},"content":"import java.util.ArrayList;"},{"lineNumber":7,"author":{"gitId":"pavz02"},"content":"import java.util.Scanner;"},{"lineNumber":8,"author":{"gitId":"pavz02"},"content":""},{"lineNumber":9,"author":{"gitId":"pavz02"},"content":"import java.time.LocalDate;"},{"lineNumber":10,"author":{"gitId":"pavz02"},"content":""},{"lineNumber":11,"author":{"gitId":"pavz02"},"content":"/**"},{"lineNumber":12,"author":{"gitId":"pavz02"},"content":" * Stores the task list so that it can be recovered even after the user exits from the program."},{"lineNumber":13,"author":{"gitId":"pavz02"},"content":" */"},{"lineNumber":14,"author":{"gitId":"pavz02"},"content":"public class Storage {"},{"lineNumber":15,"author":{"gitId":"pavz02"},"content":""},{"lineNumber":16,"author":{"gitId":"pavz02"},"content":"    /**"},{"lineNumber":17,"author":{"gitId":"pavz02"},"content":"     * When the user starts the program the saved task list is recovered from the saved file."},{"lineNumber":18,"author":{"gitId":"pavz02"},"content":"     * @param storage Array List to enter the saved task list into."},{"lineNumber":19,"author":{"gitId":"pavz02"},"content":"     * @return Returns the number of tasks that is now in the Array List."},{"lineNumber":20,"author":{"gitId":"pavz02"},"content":"     * @throws FileNotFoundException In the case that the file where the task list was saved cannot be found."},{"lineNumber":21,"author":{"gitId":"pavz02"},"content":"     */"},{"lineNumber":22,"author":{"gitId":"pavz02"},"content":"    static int uploadFromHardDrive(ArrayList\u003cTask\u003e storage) throws FileNotFoundException {"},{"lineNumber":23,"author":{"gitId":"pavz02"},"content":"        int count \u003d 0;"},{"lineNumber":24,"author":{"gitId":"pavz02"},"content":"        File f \u003d new File(\"./data/tasks.txt\");"},{"lineNumber":25,"author":{"gitId":"pavz02"},"content":"        Scanner s \u003d new Scanner(f);"},{"lineNumber":26,"author":{"gitId":"pavz02"},"content":"        while (s.hasNext()) {"},{"lineNumber":27,"author":{"gitId":"pavz02"},"content":"            count++;"},{"lineNumber":28,"author":{"gitId":"pavz02"},"content":"            String[] spl \u003d s.nextLine().split(\"@@@\", 4);"},{"lineNumber":29,"author":{"gitId":"pavz02"},"content":"            Task to_add;"},{"lineNumber":30,"author":{"gitId":"pavz02"},"content":"            switch(spl[0]) {"},{"lineNumber":31,"author":{"gitId":"pavz02"},"content":"            case \"T\":"},{"lineNumber":32,"author":{"gitId":"pavz02"},"content":"                to_add \u003d new Todo(spl[2]);"},{"lineNumber":33,"author":{"gitId":"pavz02"},"content":"                break;"},{"lineNumber":34,"author":{"gitId":"pavz02"},"content":"            case \"D\":"},{"lineNumber":35,"author":{"gitId":"pavz02"},"content":"                to_add \u003d new Deadline(spl[2], LocalDate.parse(spl[3]));"},{"lineNumber":36,"author":{"gitId":"pavz02"},"content":"                break;"},{"lineNumber":37,"author":{"gitId":"pavz02"},"content":"            case \"E\":"},{"lineNumber":38,"author":{"gitId":"pavz02"},"content":"                to_add \u003d new Event(spl[2], LocalDate.parse(spl[3]));"},{"lineNumber":39,"author":{"gitId":"pavz02"},"content":"                break;"},{"lineNumber":40,"author":{"gitId":"pavz02"},"content":"            default:"},{"lineNumber":41,"author":{"gitId":"pavz02"},"content":"                to_add \u003d new Todo(\"error\");"},{"lineNumber":42,"author":{"gitId":"pavz02"},"content":"            }"},{"lineNumber":43,"author":{"gitId":"pavz02"},"content":""},{"lineNumber":44,"author":{"gitId":"pavz02"},"content":"            if (spl[1].equals(\"1\")) {"},{"lineNumber":45,"author":{"gitId":"pavz02"},"content":"                to_add.finished();"},{"lineNumber":46,"author":{"gitId":"pavz02"},"content":"            }"},{"lineNumber":47,"author":{"gitId":"pavz02"},"content":"            storage.add(to_add);"},{"lineNumber":48,"author":{"gitId":"pavz02"},"content":"        }"},{"lineNumber":49,"author":{"gitId":"pavz02"},"content":"        return count;"},{"lineNumber":50,"author":{"gitId":"pavz02"},"content":"    }"},{"lineNumber":51,"author":{"gitId":"pavz02"},"content":""},{"lineNumber":52,"author":{"gitId":"pavz02"},"content":"    /**"},{"lineNumber":53,"author":{"gitId":"pavz02"},"content":"     * When the user exits a program the current task list is saved to a file."},{"lineNumber":54,"author":{"gitId":"pavz02"},"content":"     * @param storage An Array List containing the tasks to be saved to the file."},{"lineNumber":55,"author":{"gitId":"pavz02"},"content":"     * @throws IOException In case the file cannot be found."},{"lineNumber":56,"author":{"gitId":"pavz02"},"content":"     */"},{"lineNumber":57,"author":{"gitId":"pavz02"},"content":"    static void uploadToHardDrive(ArrayList\u003cTask\u003e"},{"lineNumber":58,"author":{"gitId":"pavz02"},"content":"                                             storage) throws IOException {"},{"lineNumber":59,"author":{"gitId":"pavz02"},"content":"        FileWriter fw \u003d new FileWriter(\"./data/tasks.txt\");"},{"lineNumber":60,"author":{"gitId":"pavz02"},"content":"        String between \u003d \"@@@\";"},{"lineNumber":61,"author":{"gitId":"pavz02"},"content":"        for (Task t : storage) {"},{"lineNumber":62,"author":{"gitId":"pavz02"},"content":"            String zero \u003d t.getInitial();"},{"lineNumber":63,"author":{"gitId":"pavz02"},"content":"            String one \u003d  t.getDone();"},{"lineNumber":64,"author":{"gitId":"pavz02"},"content":"            String two \u003d t.getDescription();"},{"lineNumber":65,"author":{"gitId":"pavz02"},"content":"            if (zero.equals(\"T\")) {"},{"lineNumber":66,"author":{"gitId":"pavz02"},"content":"                fw.write(zero + between + one + between + two + \"\\n\");"},{"lineNumber":67,"author":{"gitId":"pavz02"},"content":"            } else {"},{"lineNumber":68,"author":{"gitId":"pavz02"},"content":"                LocalDate three \u003d t.getDate();"},{"lineNumber":69,"author":{"gitId":"pavz02"},"content":"                fw.write(zero + between + one + between + two + between + three + \"\\n\");"},{"lineNumber":70,"author":{"gitId":"pavz02"},"content":"            }"},{"lineNumber":71,"author":{"gitId":"pavz02"},"content":"        }"},{"lineNumber":72,"author":{"gitId":"pavz02"},"content":"        fw.close();"},{"lineNumber":73,"author":{"gitId":"pavz02"},"content":"    }"},{"lineNumber":74,"author":{"gitId":"pavz02"},"content":"}"}],"authorContributionMap":{"pavz02":74}},{"path":"src/main/java/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"pavz02"},"content":"import java.time.LocalDate;"},{"lineNumber":2,"author":{"gitId":"pavz02"},"content":""},{"lineNumber":3,"author":{"gitId":"pavz02"},"content":"/**"},{"lineNumber":4,"author":{"gitId":"pavz02"},"content":" * An abstract class of the types of tasks an user can input."},{"lineNumber":5,"author":{"gitId":"pavz02"},"content":" */"},{"lineNumber":6,"author":{"gitId":"pavz02"},"content":"public abstract class Task {"},{"lineNumber":7,"author":{"gitId":"pavz02"},"content":"    /** Describes the Task that is to be done */"},{"lineNumber":8,"author":{"gitId":"pavz02"},"content":"    protected String description;"},{"lineNumber":9,"author":{"gitId":"pavz02"},"content":"    /** Shows whether the task is completed or not */"},{"lineNumber":10,"author":{"gitId":"pavz02"},"content":"    protected boolean isDone \u003d false;"},{"lineNumber":11,"author":{"gitId":"pavz02"},"content":""},{"lineNumber":12,"author":{"gitId":"pavz02"},"content":"    /**"},{"lineNumber":13,"author":{"gitId":"pavz02"},"content":"     * Constructor for a Task object."},{"lineNumber":14,"author":{"gitId":"pavz02"},"content":"     * @param description Describes what the task is."},{"lineNumber":15,"author":{"gitId":"pavz02"},"content":"     */"},{"lineNumber":16,"author":{"gitId":"pavz02"},"content":"    public Task(String description) {"},{"lineNumber":17,"author":{"gitId":"pavz02"},"content":"        this.description \u003d description;"},{"lineNumber":18,"author":{"gitId":"pavz02"},"content":"    }"},{"lineNumber":19,"author":{"gitId":"pavz02"},"content":""},{"lineNumber":20,"author":{"gitId":"pavz02"},"content":"    /**"},{"lineNumber":21,"author":{"gitId":"pavz02"},"content":"     * Abstract method that returns the first letter of the Task object type."},{"lineNumber":22,"author":{"gitId":"pavz02"},"content":"     * @return String with one letter."},{"lineNumber":23,"author":{"gitId":"pavz02"},"content":"     */"},{"lineNumber":24,"author":{"gitId":"pavz02"},"content":"    public abstract String getInitial();"},{"lineNumber":25,"author":{"gitId":"pavz02"},"content":""},{"lineNumber":26,"author":{"gitId":"pavz02"},"content":"    /**"},{"lineNumber":27,"author":{"gitId":"pavz02"},"content":"     * Getter that returns the date when the task is to be completed by."},{"lineNumber":28,"author":{"gitId":"pavz02"},"content":"     * @return The variable date;"},{"lineNumber":29,"author":{"gitId":"pavz02"},"content":"     */"},{"lineNumber":30,"author":{"gitId":"pavz02"},"content":"    public abstract LocalDate getDate();"},{"lineNumber":31,"author":{"gitId":"pavz02"},"content":""},{"lineNumber":32,"author":{"gitId":"pavz02"},"content":"    /**"},{"lineNumber":33,"author":{"gitId":"pavz02"},"content":"     * Setter that sets the value of isDone to indicate that the task has been completed."},{"lineNumber":34,"author":{"gitId":"pavz02"},"content":"     */"},{"lineNumber":35,"author":{"gitId":"pavz02"},"content":"    public void finished() {"},{"lineNumber":36,"author":{"gitId":"pavz02"},"content":"        isDone \u003d true;"},{"lineNumber":37,"author":{"gitId":"pavz02"},"content":"    }"},{"lineNumber":38,"author":{"gitId":"pavz02"},"content":""},{"lineNumber":39,"author":{"gitId":"pavz02"},"content":"    /**"},{"lineNumber":40,"author":{"gitId":"pavz02"},"content":"     * Visual representation for the toString() method that indicates whether a task is done or not."},{"lineNumber":41,"author":{"gitId":"pavz02"},"content":"     * @return String showing [X] if the Task is completed and [ ] otherwise."},{"lineNumber":42,"author":{"gitId":"pavz02"},"content":"     */"},{"lineNumber":43,"author":{"gitId":"pavz02"},"content":"    protected String statusIcon() {"},{"lineNumber":44,"author":{"gitId":"pavz02"},"content":"        if (isDone) {"},{"lineNumber":45,"author":{"gitId":"pavz02"},"content":"            return \"[X] \";"},{"lineNumber":46,"author":{"gitId":"pavz02"},"content":"        } else {"},{"lineNumber":47,"author":{"gitId":"pavz02"},"content":"            return \"[ ] \";"},{"lineNumber":48,"author":{"gitId":"pavz02"},"content":"        }"},{"lineNumber":49,"author":{"gitId":"pavz02"},"content":"    }"},{"lineNumber":50,"author":{"gitId":"pavz02"},"content":""},{"lineNumber":51,"author":{"gitId":"pavz02"},"content":"    /**"},{"lineNumber":52,"author":{"gitId":"pavz02"},"content":"     * Returns whether the Task is completed or not."},{"lineNumber":53,"author":{"gitId":"pavz02"},"content":"     * @return"},{"lineNumber":54,"author":{"gitId":"pavz02"},"content":"     */"},{"lineNumber":55,"author":{"gitId":"pavz02"},"content":"    public String getDone() {"},{"lineNumber":56,"author":{"gitId":"pavz02"},"content":"        if (isDone) {"},{"lineNumber":57,"author":{"gitId":"pavz02"},"content":"            return \"1\";"},{"lineNumber":58,"author":{"gitId":"pavz02"},"content":"        }"},{"lineNumber":59,"author":{"gitId":"pavz02"},"content":"        return \"0\";"},{"lineNumber":60,"author":{"gitId":"pavz02"},"content":"    }"},{"lineNumber":61,"author":{"gitId":"pavz02"},"content":""},{"lineNumber":62,"author":{"gitId":"pavz02"},"content":"    /**"},{"lineNumber":63,"author":{"gitId":"pavz02"},"content":"     * Returns the description of the Task."},{"lineNumber":64,"author":{"gitId":"pavz02"},"content":"     * @return The variable description."},{"lineNumber":65,"author":{"gitId":"pavz02"},"content":"     */"},{"lineNumber":66,"author":{"gitId":"pavz02"},"content":"    public String getDescription() {"},{"lineNumber":67,"author":{"gitId":"pavz02"},"content":"        return description;"},{"lineNumber":68,"author":{"gitId":"pavz02"},"content":"    }"},{"lineNumber":69,"author":{"gitId":"pavz02"},"content":""},{"lineNumber":70,"author":{"gitId":"pavz02"},"content":"    /**"},{"lineNumber":71,"author":{"gitId":"pavz02"},"content":"     * String representation of a Task object."},{"lineNumber":72,"author":{"gitId":"pavz02"},"content":"     * @return A string with the Task description."},{"lineNumber":73,"author":{"gitId":"pavz02"},"content":"     */"},{"lineNumber":74,"author":{"gitId":"pavz02"},"content":"    @Override"},{"lineNumber":75,"author":{"gitId":"pavz02"},"content":"    public String toString() {"},{"lineNumber":76,"author":{"gitId":"pavz02"},"content":"        return this.statusIcon() + description;"},{"lineNumber":77,"author":{"gitId":"pavz02"},"content":"    }"},{"lineNumber":78,"author":{"gitId":"pavz02"},"content":"}"}],"authorContributionMap":{"pavz02":78}},{"path":"src/main/java/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"pavz02"},"content":"import java.io.File;"},{"lineNumber":2,"author":{"gitId":"pavz02"},"content":"import java.io.IOException;"},{"lineNumber":3,"author":{"gitId":"pavz02"},"content":"import java.time.LocalDate;"},{"lineNumber":4,"author":{"gitId":"pavz02"},"content":"import java.util.ArrayList;"},{"lineNumber":5,"author":{"gitId":"pavz02"},"content":""},{"lineNumber":6,"author":{"gitId":"pavz02"},"content":"/**"},{"lineNumber":7,"author":{"gitId":"pavz02"},"content":" * Records the list of Tasks that is to be done."},{"lineNumber":8,"author":{"gitId":"pavz02"},"content":" */"},{"lineNumber":9,"author":{"gitId":"pavz02"},"content":"public class TaskList {"},{"lineNumber":10,"author":{"gitId":"pavz02"},"content":"    private static final ArrayList\u003cTask\u003e storage \u003d new ArrayList\u003c\u003e();"},{"lineNumber":11,"author":{"gitId":"pavz02"},"content":"    private static int count \u003d 0;"},{"lineNumber":12,"author":{"gitId":"pavz02"},"content":""},{"lineNumber":13,"author":{"gitId":"pavz02"},"content":"    /**"},{"lineNumber":14,"author":{"gitId":"pavz02"},"content":"     * Getter that returns the number of tasks in the Array List."},{"lineNumber":15,"author":{"gitId":"pavz02"},"content":"     * @return The variable count."},{"lineNumber":16,"author":{"gitId":"pavz02"},"content":"     */"},{"lineNumber":17,"author":{"gitId":"pavz02"},"content":"    static int getCount() {"},{"lineNumber":18,"author":{"gitId":"pavz02"},"content":"        return count;"},{"lineNumber":19,"author":{"gitId":"pavz02"},"content":"    }"},{"lineNumber":20,"author":{"gitId":"pavz02"},"content":""},{"lineNumber":21,"author":{"gitId":"pavz02"},"content":"    /**"},{"lineNumber":22,"author":{"gitId":"pavz02"},"content":"     * Checks if the folder and file to store the data are present."},{"lineNumber":23,"author":{"gitId":"pavz02"},"content":"     * Creates the folder and/or the file in case they are not there."},{"lineNumber":24,"author":{"gitId":"pavz02"},"content":"     */"},{"lineNumber":25,"author":{"gitId":"pavz02"},"content":"    static void checkFileFolderSpecifications() {"},{"lineNumber":26,"author":{"gitId":"pavz02"},"content":"        try {"},{"lineNumber":27,"author":{"gitId":"pavz02"},"content":"            File dir \u003d new File(\"./data\");"},{"lineNumber":28,"author":{"gitId":"pavz02"},"content":"            dir.mkdir();"},{"lineNumber":29,"author":{"gitId":"pavz02"},"content":"            File f \u003d new File(\"./data/tasks.txt\");"},{"lineNumber":30,"author":{"gitId":"pavz02"},"content":"            if (!f.createNewFile()) {"},{"lineNumber":31,"author":{"gitId":"pavz02"},"content":"                count \u003d Storage.uploadFromHardDrive(storage);"},{"lineNumber":32,"author":{"gitId":"pavz02"},"content":"            }"},{"lineNumber":33,"author":{"gitId":"pavz02"},"content":""},{"lineNumber":34,"author":{"gitId":"pavz02"},"content":"        } catch (IOException e) {"},{"lineNumber":35,"author":{"gitId":"pavz02"},"content":"            System.out.println(\"error in making folder/file\");"},{"lineNumber":36,"author":{"gitId":"pavz02"},"content":"        }"},{"lineNumber":37,"author":{"gitId":"pavz02"},"content":"    }"},{"lineNumber":38,"author":{"gitId":"pavz02"},"content":""},{"lineNumber":39,"author":{"gitId":"pavz02"},"content":"    /**"},{"lineNumber":40,"author":{"gitId":"pavz02"},"content":"     * Process the Todo task by adding it to the Task list, updating the number of tasks,"},{"lineNumber":41,"author":{"gitId":"pavz02"},"content":"     * and printing the output message."},{"lineNumber":42,"author":{"gitId":"pavz02"},"content":"     * @param spl Contains the keyword and description in the array."},{"lineNumber":43,"author":{"gitId":"pavz02"},"content":"     */"},{"lineNumber":44,"author":{"gitId":"pavz02"},"content":"    static void processTodo(String[] spl) {"},{"lineNumber":45,"author":{"gitId":"pavz02"},"content":"        storage.add(new Todo(spl[1]));"},{"lineNumber":46,"author":{"gitId":"pavz02"},"content":"        count++;"},{"lineNumber":47,"author":{"gitId":"pavz02"},"content":"        Ui.outputMessageTask(spl[0], storage.get(count - 1));"},{"lineNumber":48,"author":{"gitId":"pavz02"},"content":"    }"},{"lineNumber":49,"author":{"gitId":"pavz02"},"content":""},{"lineNumber":50,"author":{"gitId":"pavz02"},"content":"    /**"},{"lineNumber":51,"author":{"gitId":"pavz02"},"content":"     * Process the Deadline task by adding it to the Task list, updating the number of tasks,"},{"lineNumber":52,"author":{"gitId":"pavz02"},"content":"     * and printing the output message."},{"lineNumber":53,"author":{"gitId":"pavz02"},"content":"     * @param spl Contains the keyword, description and date in the array."},{"lineNumber":54,"author":{"gitId":"pavz02"},"content":"     */"},{"lineNumber":55,"author":{"gitId":"pavz02"},"content":"    static void processDeadline(String[] spl) {"},{"lineNumber":56,"author":{"gitId":"pavz02"},"content":"        storage.add(new Deadline(spl[0], LocalDate.parse(spl[1])));"},{"lineNumber":57,"author":{"gitId":"pavz02"},"content":"        count++;"},{"lineNumber":58,"author":{"gitId":"pavz02"},"content":"        Ui.outputMessageTask(spl[0], storage.get(count - 1));"},{"lineNumber":59,"author":{"gitId":"pavz02"},"content":"    }"},{"lineNumber":60,"author":{"gitId":"pavz02"},"content":""},{"lineNumber":61,"author":{"gitId":"pavz02"},"content":"    /**"},{"lineNumber":62,"author":{"gitId":"pavz02"},"content":"     * Process the Event task by adding it to the Task list, updating the number of tasks,"},{"lineNumber":63,"author":{"gitId":"pavz02"},"content":"     * and printing the output message."},{"lineNumber":64,"author":{"gitId":"pavz02"},"content":"     * @param spl Contains the keyword, description and date in the array."},{"lineNumber":65,"author":{"gitId":"pavz02"},"content":"     */"},{"lineNumber":66,"author":{"gitId":"pavz02"},"content":"    static void processEvent(String[] spl) {"},{"lineNumber":67,"author":{"gitId":"pavz02"},"content":"        storage.add(new Event(spl[0], LocalDate.parse(spl[1])));"},{"lineNumber":68,"author":{"gitId":"pavz02"},"content":"        count++;"},{"lineNumber":69,"author":{"gitId":"pavz02"},"content":"        Ui.outputMessageTask(spl[0], storage.get(count - 1));"},{"lineNumber":70,"author":{"gitId":"pavz02"},"content":"    }"},{"lineNumber":71,"author":{"gitId":"pavz02"},"content":""},{"lineNumber":72,"author":{"gitId":"pavz02"},"content":"    /**"},{"lineNumber":73,"author":{"gitId":"pavz02"},"content":"     * Process the done command by updating the Task to reflect that it has been completed."},{"lineNumber":74,"author":{"gitId":"pavz02"},"content":"     * It also prints an output message."},{"lineNumber":75,"author":{"gitId":"pavz02"},"content":"     * @param spl Contains the keyword and the number of the task which has been completed."},{"lineNumber":76,"author":{"gitId":"pavz02"},"content":"     */"},{"lineNumber":77,"author":{"gitId":"pavz02"},"content":"    static void processDone(String[] spl) {"},{"lineNumber":78,"author":{"gitId":"pavz02"},"content":"        int number \u003d Integer.parseInt(spl[1]);"},{"lineNumber":79,"author":{"gitId":"pavz02"},"content":"        Task current \u003d storage.get(number - 1);"},{"lineNumber":80,"author":{"gitId":"pavz02"},"content":"        current.finished();"},{"lineNumber":81,"author":{"gitId":"pavz02"},"content":"        Ui.outputMessageDone(current);"},{"lineNumber":82,"author":{"gitId":"pavz02"},"content":"    }"},{"lineNumber":83,"author":{"gitId":"pavz02"},"content":""},{"lineNumber":84,"author":{"gitId":"pavz02"},"content":"    /**"},{"lineNumber":85,"author":{"gitId":"pavz02"},"content":"     * Prints the output message for a list of all the tasks which contain the keyword."},{"lineNumber":86,"author":{"gitId":"pavz02"},"content":"     * @param spl Contains the keyword and the word that is being searched in the array."},{"lineNumber":87,"author":{"gitId":"pavz02"},"content":"     */"},{"lineNumber":88,"author":{"gitId":"pavz02"},"content":"    static void processFind(String[] spl) {"},{"lineNumber":89,"author":{"gitId":"pavz02"},"content":"        Ui.outputMessageFind(storage, spl);"},{"lineNumber":90,"author":{"gitId":"pavz02"},"content":"    }"},{"lineNumber":91,"author":{"gitId":"pavz02"},"content":""},{"lineNumber":92,"author":{"gitId":"pavz02"},"content":"    /**"},{"lineNumber":93,"author":{"gitId":"pavz02"},"content":"     * Prints the output message for a list of all the tasks to be printed out."},{"lineNumber":94,"author":{"gitId":"pavz02"},"content":"     */"},{"lineNumber":95,"author":{"gitId":"pavz02"},"content":"    static void processList() {"},{"lineNumber":96,"author":{"gitId":"pavz02"},"content":"        Ui.outputMessageList(storage, count);"},{"lineNumber":97,"author":{"gitId":"pavz02"},"content":"    }"},{"lineNumber":98,"author":{"gitId":"pavz02"},"content":""},{"lineNumber":99,"author":{"gitId":"pavz02"},"content":"    /**"},{"lineNumber":100,"author":{"gitId":"pavz02"},"content":"     * Deletes the n-numbered Task from the task list, where n is the number given by the user."},{"lineNumber":101,"author":{"gitId":"pavz02"},"content":"     * @param spl Contains the keyword, and the Task number that has to be deleted (n) in the array."},{"lineNumber":102,"author":{"gitId":"pavz02"},"content":"     */"},{"lineNumber":103,"author":{"gitId":"pavz02"},"content":"    static void processDelete(String[] spl) {"},{"lineNumber":104,"author":{"gitId":"pavz02"},"content":"        int num \u003d Integer.parseInt(spl[1]);"},{"lineNumber":105,"author":{"gitId":"pavz02"},"content":"        Task t \u003d storage.get(num-1);"},{"lineNumber":106,"author":{"gitId":"pavz02"},"content":"        storage.remove(num-1);"},{"lineNumber":107,"author":{"gitId":"pavz02"},"content":"        count--;"},{"lineNumber":108,"author":{"gitId":"pavz02"},"content":"        Ui.outputMessageDelete(t);"},{"lineNumber":109,"author":{"gitId":"pavz02"},"content":"    }"},{"lineNumber":110,"author":{"gitId":"pavz02"},"content":""},{"lineNumber":111,"author":{"gitId":"pavz02"},"content":"    /**"},{"lineNumber":112,"author":{"gitId":"pavz02"},"content":"     * Stores the task list once the user wants to leave the program."},{"lineNumber":113,"author":{"gitId":"pavz02"},"content":"     * Prints an output message as well."},{"lineNumber":114,"author":{"gitId":"pavz02"},"content":"     * @throws IOException In case of errors while uploading the Task List to an external file."},{"lineNumber":115,"author":{"gitId":"pavz02"},"content":"     */"},{"lineNumber":116,"author":{"gitId":"pavz02"},"content":"    static void processBye() throws IOException {"},{"lineNumber":117,"author":{"gitId":"pavz02"},"content":"        Storage.uploadToHardDrive(storage);"},{"lineNumber":118,"author":{"gitId":"pavz02"},"content":"        Ui.outputMessageBye();"},{"lineNumber":119,"author":{"gitId":"pavz02"},"content":"    }"},{"lineNumber":120,"author":{"gitId":"pavz02"},"content":"}"}],"authorContributionMap":{"pavz02":120}},{"path":"src/main/java/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"pavz02"},"content":"import java.util.ArrayList;"},{"lineNumber":2,"author":{"gitId":"pavz02"},"content":""},{"lineNumber":3,"author":{"gitId":"pavz02"},"content":"/**"},{"lineNumber":4,"author":{"gitId":"pavz02"},"content":" * Stores all the output and error messages printed by the program."},{"lineNumber":5,"author":{"gitId":"pavz02"},"content":" */"},{"lineNumber":6,"author":{"gitId":"pavz02"},"content":"public class Ui {"},{"lineNumber":7,"author":{"gitId":"pavz02"},"content":"    /** Constants that help in the formatting of the printed messages. */"},{"lineNumber":8,"author":{"gitId":"pavz02"},"content":"    private static final String SPACE \u003d \"     \";"},{"lineNumber":9,"author":{"gitId":"pavz02"},"content":"    private static final String LINE \u003d \"\\n     \u003c\u003c\u003e\u003e\u003c\u003c\u003e\u003e\u003c\u003c\u003e\u003e\u003c\u003c\u003e\u003e\u003c\u003c\u003e\u003e\u003c\u003c\u003e\u003e\u003c\u003c\u003e\u003e\u003c\u003c\u003e\u003e\u003c\u003c\u003e\u003e\u003c\u003c\u003e\u003e\u003c\u003c\u003e\u003e\u003c\u003c\u003e\u003e\u003c\u003c\u003e\u003e\u003c\u003c\u003e\u003e\u003c\u003c\u003e\u003e\u003c\u003c\u003e\u003e\u003c\u003c\u003e\u003e\u003c\u003c\u003e\u003e\u003c\u003c\u003e\u003e\u003c\u003c\u003e\u003e\u003c\u003c\u003e\u003e\u003c\u003c\u003e\u003e\u003c\u003c\u003e\u003e\u003c\u003c\u003e\u003e\u003c\u003c\u003e\u003e\u003c\u003c\u003e\u003e\\n\";"},{"lineNumber":10,"author":{"gitId":"pavz02"},"content":""},{"lineNumber":11,"author":{"gitId":"pavz02"},"content":"    /**"},{"lineNumber":12,"author":{"gitId":"pavz02"},"content":"     * Message to be printed when the program starts."},{"lineNumber":13,"author":{"gitId":"pavz02"},"content":"     */"},{"lineNumber":14,"author":{"gitId":"pavz02"},"content":"    public static void greet() {"},{"lineNumber":15,"author":{"gitId":"pavz02"},"content":"        System.out.println(LINE + SPACE + \"Heyyoo!! I am Luna :D\\n\" + SPACE + \"What can I do for you today?\" + LINE);"},{"lineNumber":16,"author":{"gitId":"pavz02"},"content":"    }"},{"lineNumber":17,"author":{"gitId":"pavz02"},"content":""},{"lineNumber":18,"author":{"gitId":"pavz02"},"content":"    /**"},{"lineNumber":19,"author":{"gitId":"pavz02"},"content":"     * Message to printed if any number that has to be inputted is invalid."},{"lineNumber":20,"author":{"gitId":"pavz02"},"content":"     * @return"},{"lineNumber":21,"author":{"gitId":"pavz02"},"content":"     */"},{"lineNumber":22,"author":{"gitId":"pavz02"},"content":"    public static String  InvalidNumberExceptionMessage() {"},{"lineNumber":23,"author":{"gitId":"pavz02"},"content":"        return LINE + SPACE + \"ERROR! D: Please give a number greater than zero and smaller than the total number of tasks\" + LINE;"},{"lineNumber":24,"author":{"gitId":"pavz02"},"content":"    }"},{"lineNumber":25,"author":{"gitId":"pavz02"},"content":""},{"lineNumber":26,"author":{"gitId":"pavz02"},"content":"    /**"},{"lineNumber":27,"author":{"gitId":"pavz02"},"content":"     * Message to be printed if the input format for a specific task is wrong."},{"lineNumber":28,"author":{"gitId":"pavz02"},"content":"     * @param task The type of task that had the wrong format."},{"lineNumber":29,"author":{"gitId":"pavz02"},"content":"     * @return The error message string."},{"lineNumber":30,"author":{"gitId":"pavz02"},"content":"     */"},{"lineNumber":31,"author":{"gitId":"pavz02"},"content":"    public static String  InvalidTaskFormatExceptionMessage(String task) {"},{"lineNumber":32,"author":{"gitId":"pavz02"},"content":"        return LINE + SPACE + \"ERROR! D: The format for the following task is wrong: \" + task + LINE;"},{"lineNumber":33,"author":{"gitId":"pavz02"},"content":"    }"},{"lineNumber":34,"author":{"gitId":"pavz02"},"content":""},{"lineNumber":35,"author":{"gitId":"pavz02"},"content":"    /**"},{"lineNumber":36,"author":{"gitId":"pavz02"},"content":"     * Message to be printed after a Task has been added."},{"lineNumber":37,"author":{"gitId":"pavz02"},"content":"     * @param keyword The type of Task added."},{"lineNumber":38,"author":{"gitId":"pavz02"},"content":"     * @param task The actual Task object that has been created with the user input."},{"lineNumber":39,"author":{"gitId":"pavz02"},"content":"     */"},{"lineNumber":40,"author":{"gitId":"pavz02"},"content":"    public static void outputMessageTask(String keyword, Task task) {"},{"lineNumber":41,"author":{"gitId":"pavz02"},"content":"        System.out.println(LINE + SPACE + \"Done adding the \" + keyword + \" Task: \" + task + LINE);"},{"lineNumber":42,"author":{"gitId":"pavz02"},"content":"    }"},{"lineNumber":43,"author":{"gitId":"pavz02"},"content":""},{"lineNumber":44,"author":{"gitId":"pavz02"},"content":"    /**"},{"lineNumber":45,"author":{"gitId":"pavz02"},"content":"     * Message to be printed after a task is done."},{"lineNumber":46,"author":{"gitId":"pavz02"},"content":"     * @param task The Task object that has been created with the user input."},{"lineNumber":47,"author":{"gitId":"pavz02"},"content":"     */"},{"lineNumber":48,"author":{"gitId":"pavz02"},"content":"    public static void outputMessageDone(Task task) {"},{"lineNumber":49,"author":{"gitId":"pavz02"},"content":"        System.out.println(LINE + SPACE + \"Good job! Another Task completed! I have marked it as done:\\n\" + SPACE + task + LINE);"},{"lineNumber":50,"author":{"gitId":"pavz02"},"content":"    }"},{"lineNumber":51,"author":{"gitId":"pavz02"},"content":""},{"lineNumber":52,"author":{"gitId":"pavz02"},"content":"    /**"},{"lineNumber":53,"author":{"gitId":"pavz02"},"content":"     * Message to be printed after a task is deleted."},{"lineNumber":54,"author":{"gitId":"pavz02"},"content":"     * @param task The task object that has been deleted according to the user input."},{"lineNumber":55,"author":{"gitId":"pavz02"},"content":"     */"},{"lineNumber":56,"author":{"gitId":"pavz02"},"content":"    public static void outputMessageDelete(Task task) {"},{"lineNumber":57,"author":{"gitId":"pavz02"},"content":"        System.out.println(LINE + SPACE + \"Deleted the following task: \" + task + LINE);"},{"lineNumber":58,"author":{"gitId":"pavz02"},"content":"    }"},{"lineNumber":59,"author":{"gitId":"pavz02"},"content":""},{"lineNumber":60,"author":{"gitId":"pavz02"},"content":"    /**"},{"lineNumber":61,"author":{"gitId":"pavz02"},"content":"     * Lists all the tasks that are currently stored."},{"lineNumber":62,"author":{"gitId":"pavz02"},"content":"     * @param storage Array List of tasks."},{"lineNumber":63,"author":{"gitId":"pavz02"},"content":"     * @param count Number of tasks in the Array List."},{"lineNumber":64,"author":{"gitId":"pavz02"},"content":"     */"},{"lineNumber":65,"author":{"gitId":"pavz02"},"content":"    public static void outputMessageList(ArrayList\u003cTask\u003e storage, int count) {"},{"lineNumber":66,"author":{"gitId":"pavz02"},"content":"        System.out.println(LINE);"},{"lineNumber":67,"author":{"gitId":"pavz02"},"content":"        for (int i \u003d 1; i \u003c\u003d count; i++) {"},{"lineNumber":68,"author":{"gitId":"pavz02"},"content":"            System.out.println(SPACE + i + \". \" + storage.get(i-1));"},{"lineNumber":69,"author":{"gitId":"pavz02"},"content":"        }"},{"lineNumber":70,"author":{"gitId":"pavz02"},"content":"        System.out.println(LINE);"},{"lineNumber":71,"author":{"gitId":"pavz02"},"content":"    }"},{"lineNumber":72,"author":{"gitId":"pavz02"},"content":""},{"lineNumber":73,"author":{"gitId":"pavz02"},"content":"    /**"},{"lineNumber":74,"author":{"gitId":"pavz02"},"content":"     * Lists all the tasks with the searched for words."},{"lineNumber":75,"author":{"gitId":"pavz02"},"content":"     * @param storage Array List of tasks."},{"lineNumber":76,"author":{"gitId":"pavz02"},"content":"     * @param spl Array with the words that are being searched for in the Array List."},{"lineNumber":77,"author":{"gitId":"pavz02"},"content":"     */"},{"lineNumber":78,"author":{"gitId":"pavz02"},"content":"    public static void outputMessageFind(ArrayList\u003cTask\u003e storage, String[] spl) {"},{"lineNumber":79,"author":{"gitId":"pavz02"},"content":"        System.out.println(LINE);"},{"lineNumber":80,"author":{"gitId":"pavz02"},"content":"        int i \u003d 1;"},{"lineNumber":81,"author":{"gitId":"pavz02"},"content":"        for (Task t : storage) {"},{"lineNumber":82,"author":{"gitId":"pavz02"},"content":"            if (t.getDescription().contains(spl[1])) {"},{"lineNumber":83,"author":{"gitId":"pavz02"},"content":"                System.out.println(SPACE + i + \". \" + t);"},{"lineNumber":84,"author":{"gitId":"pavz02"},"content":"                i++;"},{"lineNumber":85,"author":{"gitId":"pavz02"},"content":"            }"},{"lineNumber":86,"author":{"gitId":"pavz02"},"content":"        }"},{"lineNumber":87,"author":{"gitId":"pavz02"},"content":"        System.out.println(LINE);"},{"lineNumber":88,"author":{"gitId":"pavz02"},"content":"    }"},{"lineNumber":89,"author":{"gitId":"pavz02"},"content":""},{"lineNumber":90,"author":{"gitId":"pavz02"},"content":"    /**"},{"lineNumber":91,"author":{"gitId":"pavz02"},"content":"     * Message to be printed when the program ends."},{"lineNumber":92,"author":{"gitId":"pavz02"},"content":"     */"},{"lineNumber":93,"author":{"gitId":"pavz02"},"content":"    public static void outputMessageBye() {"},{"lineNumber":94,"author":{"gitId":"pavz02"},"content":"        System.out.println(LINE + SPACE + \"Byee, hope to see you again soon!\" + LINE);"},{"lineNumber":95,"author":{"gitId":"pavz02"},"content":"    }"},{"lineNumber":96,"author":{"gitId":"pavz02"},"content":"}"}],"authorContributionMap":{"pavz02":96}},{"path":"src/main/java/deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"pavz02"},"content":"import java.time.LocalDate;"},{"lineNumber":2,"author":{"gitId":"pavz02"},"content":""},{"lineNumber":3,"author":{"gitId":"pavz02"},"content":"/**"},{"lineNumber":4,"author":{"gitId":"pavz02"},"content":" * Type of Task that the user can input."},{"lineNumber":5,"author":{"gitId":"pavz02"},"content":" */"},{"lineNumber":6,"author":{"gitId":"pavz02"},"content":"public class Deadline extends Task {"},{"lineNumber":7,"author":{"gitId":"pavz02"},"content":"    /** Date and deadline of the Deadline */"},{"lineNumber":8,"author":{"gitId":"pavz02"},"content":"    protected LocalDate date;"},{"lineNumber":9,"author":{"gitId":"pavz02"},"content":""},{"lineNumber":10,"author":{"gitId":"pavz02"},"content":"    /**"},{"lineNumber":11,"author":{"gitId":"pavz02"},"content":"     * Constructor for Deadline objects"},{"lineNumber":12,"author":{"gitId":"pavz02"},"content":"     * @param description What the deadline is."},{"lineNumber":13,"author":{"gitId":"pavz02"},"content":"     * @param date The date by which it has to be completed."},{"lineNumber":14,"author":{"gitId":"pavz02"},"content":"     */"},{"lineNumber":15,"author":{"gitId":"pavz02"},"content":"    Deadline(String description, LocalDate date) {"},{"lineNumber":16,"author":{"gitId":"pavz02"},"content":"        super(description);"},{"lineNumber":17,"author":{"gitId":"pavz02"},"content":"        this.date \u003d date;"},{"lineNumber":18,"author":{"gitId":"pavz02"},"content":"    }"},{"lineNumber":19,"author":{"gitId":"pavz02"},"content":""},{"lineNumber":20,"author":{"gitId":"pavz02"},"content":"    /**"},{"lineNumber":21,"author":{"gitId":"pavz02"},"content":"     * Getter which returns the date the deadline should be completed be by."},{"lineNumber":22,"author":{"gitId":"pavz02"},"content":"     * @return the deadline by which the Task should be completed."},{"lineNumber":23,"author":{"gitId":"pavz02"},"content":"     */"},{"lineNumber":24,"author":{"gitId":"pavz02"},"content":"    public LocalDate getDate() {"},{"lineNumber":25,"author":{"gitId":"pavz02"},"content":"        return date;"},{"lineNumber":26,"author":{"gitId":"pavz02"},"content":"    }"},{"lineNumber":27,"author":{"gitId":"pavz02"},"content":""},{"lineNumber":28,"author":{"gitId":"pavz02"},"content":"    /**"},{"lineNumber":29,"author":{"gitId":"pavz02"},"content":"     * Getter which returns the identifier for the type of Task it is."},{"lineNumber":30,"author":{"gitId":"pavz02"},"content":"     * @return D for Deadline."},{"lineNumber":31,"author":{"gitId":"pavz02"},"content":"     */"},{"lineNumber":32,"author":{"gitId":"pavz02"},"content":"    @Override"},{"lineNumber":33,"author":{"gitId":"pavz02"},"content":"    public String getInitial() {"},{"lineNumber":34,"author":{"gitId":"pavz02"},"content":"        return \"D\";"},{"lineNumber":35,"author":{"gitId":"pavz02"},"content":"    }"},{"lineNumber":36,"author":{"gitId":"pavz02"},"content":""},{"lineNumber":37,"author":{"gitId":"pavz02"},"content":"    /**"},{"lineNumber":38,"author":{"gitId":"pavz02"},"content":"     * String representation of a Deadline object."},{"lineNumber":39,"author":{"gitId":"pavz02"},"content":"     * @return String with the description and date of the deadline."},{"lineNumber":40,"author":{"gitId":"pavz02"},"content":"     */"},{"lineNumber":41,"author":{"gitId":"pavz02"},"content":"    @Override"},{"lineNumber":42,"author":{"gitId":"pavz02"},"content":"    public String toString() {"},{"lineNumber":43,"author":{"gitId":"pavz02"},"content":"        return \"[D]\" + super.toString() + \" (By: \" + date + \")\";"},{"lineNumber":44,"author":{"gitId":"pavz02"},"content":"    }"},{"lineNumber":45,"author":{"gitId":"pavz02"},"content":"}"}],"authorContributionMap":{"pavz02":45}},{"path":"src/main/java/event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"pavz02"},"content":"import java.time.LocalDate;"},{"lineNumber":2,"author":{"gitId":"pavz02"},"content":""},{"lineNumber":3,"author":{"gitId":"pavz02"},"content":"/**"},{"lineNumber":4,"author":{"gitId":"pavz02"},"content":" * Type of Task that the user can input."},{"lineNumber":5,"author":{"gitId":"pavz02"},"content":" */"},{"lineNumber":6,"author":{"gitId":"pavz02"},"content":"public class Event extends Task {"},{"lineNumber":7,"author":{"gitId":"pavz02"},"content":"    /** Date and duration of the event */"},{"lineNumber":8,"author":{"gitId":"pavz02"},"content":"    protected LocalDate date;"},{"lineNumber":9,"author":{"gitId":"pavz02"},"content":""},{"lineNumber":10,"author":{"gitId":"pavz02"},"content":"    /**"},{"lineNumber":11,"author":{"gitId":"pavz02"},"content":"     * Constructor for Event objects."},{"lineNumber":12,"author":{"gitId":"pavz02"},"content":"     * @param description What the event is."},{"lineNumber":13,"author":{"gitId":"pavz02"},"content":"     * @param date The date by which it has to be completed."},{"lineNumber":14,"author":{"gitId":"pavz02"},"content":"     */"},{"lineNumber":15,"author":{"gitId":"pavz02"},"content":"    Event(String description, LocalDate date) {"},{"lineNumber":16,"author":{"gitId":"pavz02"},"content":"        super(description);"},{"lineNumber":17,"author":{"gitId":"pavz02"},"content":"        this.date \u003d date;"},{"lineNumber":18,"author":{"gitId":"pavz02"},"content":"    }"},{"lineNumber":19,"author":{"gitId":"pavz02"},"content":""},{"lineNumber":20,"author":{"gitId":"pavz02"},"content":"    /**"},{"lineNumber":21,"author":{"gitId":"pavz02"},"content":"     * Getter which returns the date the Event occurs on."},{"lineNumber":22,"author":{"gitId":"pavz02"},"content":"     * @return The date and duration of the Event."},{"lineNumber":23,"author":{"gitId":"pavz02"},"content":"     */"},{"lineNumber":24,"author":{"gitId":"pavz02"},"content":"    public LocalDate getDate() {"},{"lineNumber":25,"author":{"gitId":"pavz02"},"content":"        return date;"},{"lineNumber":26,"author":{"gitId":"pavz02"},"content":"    }"},{"lineNumber":27,"author":{"gitId":"pavz02"},"content":""},{"lineNumber":28,"author":{"gitId":"pavz02"},"content":"    /**"},{"lineNumber":29,"author":{"gitId":"pavz02"},"content":"     * Getter which returns the identifier for the type of Task it is."},{"lineNumber":30,"author":{"gitId":"pavz02"},"content":"     * @return E for Event."},{"lineNumber":31,"author":{"gitId":"pavz02"},"content":"     */"},{"lineNumber":32,"author":{"gitId":"pavz02"},"content":"    @Override"},{"lineNumber":33,"author":{"gitId":"pavz02"},"content":"    public String getInitial() {"},{"lineNumber":34,"author":{"gitId":"pavz02"},"content":"        return \"E\";"},{"lineNumber":35,"author":{"gitId":"pavz02"},"content":"    }"},{"lineNumber":36,"author":{"gitId":"pavz02"},"content":""},{"lineNumber":37,"author":{"gitId":"pavz02"},"content":"    /**"},{"lineNumber":38,"author":{"gitId":"pavz02"},"content":"     * String representation of an Event object."},{"lineNumber":39,"author":{"gitId":"pavz02"},"content":"     * @return String with the description and date of the deadline."},{"lineNumber":40,"author":{"gitId":"pavz02"},"content":"     */"},{"lineNumber":41,"author":{"gitId":"pavz02"},"content":"    @Override"},{"lineNumber":42,"author":{"gitId":"pavz02"},"content":"    public String toString() {"},{"lineNumber":43,"author":{"gitId":"pavz02"},"content":"        return \"[E]\" + super.toString() + \" (at: \" + date + \")\";"},{"lineNumber":44,"author":{"gitId":"pavz02"},"content":"    }"},{"lineNumber":45,"author":{"gitId":"pavz02"},"content":"}"}],"authorContributionMap":{"pavz02":45}},{"path":"src/main/java/todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"pavz02"},"content":"import java.time.LocalDate;"},{"lineNumber":2,"author":{"gitId":"pavz02"},"content":"import java.time.Month;"},{"lineNumber":3,"author":{"gitId":"pavz02"},"content":""},{"lineNumber":4,"author":{"gitId":"pavz02"},"content":"/**"},{"lineNumber":5,"author":{"gitId":"pavz02"},"content":" * Type of task that the user can input."},{"lineNumber":6,"author":{"gitId":"pavz02"},"content":" */"},{"lineNumber":7,"author":{"gitId":"pavz02"},"content":"public class Todo extends Task {"},{"lineNumber":8,"author":{"gitId":"pavz02"},"content":""},{"lineNumber":9,"author":{"gitId":"pavz02"},"content":"    /**"},{"lineNumber":10,"author":{"gitId":"pavz02"},"content":"     * Constructor for Todo objects."},{"lineNumber":11,"author":{"gitId":"pavz02"},"content":"     * @param description Describes what is to be done."},{"lineNumber":12,"author":{"gitId":"pavz02"},"content":"     */"},{"lineNumber":13,"author":{"gitId":"pavz02"},"content":"    Todo(String description) {"},{"lineNumber":14,"author":{"gitId":"pavz02"},"content":"        super(description);"},{"lineNumber":15,"author":{"gitId":"pavz02"},"content":"    }"},{"lineNumber":16,"author":{"gitId":"pavz02"},"content":""},{"lineNumber":17,"author":{"gitId":"pavz02"},"content":"    /**"},{"lineNumber":18,"author":{"gitId":"pavz02"},"content":"     * Getter that returns when the Todo is to be done by."},{"lineNumber":19,"author":{"gitId":"pavz02"},"content":"     * @return The date."},{"lineNumber":20,"author":{"gitId":"pavz02"},"content":"     */"},{"lineNumber":21,"author":{"gitId":"pavz02"},"content":"    @Override"},{"lineNumber":22,"author":{"gitId":"pavz02"},"content":"    public LocalDate getDate() {"},{"lineNumber":23,"author":{"gitId":"pavz02"},"content":"        return LocalDate.of(2020, 1, 25);"},{"lineNumber":24,"author":{"gitId":"pavz02"},"content":"    }"},{"lineNumber":25,"author":{"gitId":"pavz02"},"content":""},{"lineNumber":26,"author":{"gitId":"pavz02"},"content":"    /**"},{"lineNumber":27,"author":{"gitId":"pavz02"},"content":"     * Getter which returns an identifier for the type of task it is."},{"lineNumber":28,"author":{"gitId":"pavz02"},"content":"     * @return T for Todo."},{"lineNumber":29,"author":{"gitId":"pavz02"},"content":"     */"},{"lineNumber":30,"author":{"gitId":"pavz02"},"content":"    @Override"},{"lineNumber":31,"author":{"gitId":"pavz02"},"content":"    public String getInitial() {"},{"lineNumber":32,"author":{"gitId":"pavz02"},"content":"        return \"T\";"},{"lineNumber":33,"author":{"gitId":"pavz02"},"content":"    }"},{"lineNumber":34,"author":{"gitId":"pavz02"},"content":""},{"lineNumber":35,"author":{"gitId":"pavz02"},"content":"    /**"},{"lineNumber":36,"author":{"gitId":"pavz02"},"content":"     * String representation of a Todo object."},{"lineNumber":37,"author":{"gitId":"pavz02"},"content":"     * @return String with the description of the Todo object."},{"lineNumber":38,"author":{"gitId":"pavz02"},"content":"     */"},{"lineNumber":39,"author":{"gitId":"pavz02"},"content":"    @Override"},{"lineNumber":40,"author":{"gitId":"pavz02"},"content":"    public String toString() {"},{"lineNumber":41,"author":{"gitId":"pavz02"},"content":"        return \"[T]\" + super.toString();"},{"lineNumber":42,"author":{"gitId":"pavz02"},"content":"    }"},{"lineNumber":43,"author":{"gitId":"pavz02"},"content":"}"}],"authorContributionMap":{"pavz02":43}},{"path":"src/test/java/DukeTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"pavz02"},"content":"import org.junit.jupiter.api.Test;"},{"lineNumber":2,"author":{"gitId":"pavz02"},"content":""},{"lineNumber":3,"author":{"gitId":"pavz02"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;"},{"lineNumber":4,"author":{"gitId":"pavz02"},"content":""},{"lineNumber":5,"author":{"gitId":"pavz02"},"content":"public class DukeTest {"},{"lineNumber":6,"author":{"gitId":"pavz02"},"content":"    @Test"},{"lineNumber":7,"author":{"gitId":"pavz02"},"content":"    public void dummyTest() {"},{"lineNumber":8,"author":{"gitId":"pavz02"},"content":"        assertEquals(2, 2);"},{"lineNumber":9,"author":{"gitId":"pavz02"},"content":"    }"},{"lineNumber":10,"author":{"gitId":"pavz02"},"content":""},{"lineNumber":11,"author":{"gitId":"pavz02"},"content":"}"}],"authorContributionMap":{"pavz02":11}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"pavz02"},"content":"todo a"},{"lineNumber":2,"author":{"gitId":"pavz02"},"content":"todo b"},{"lineNumber":3,"author":{"gitId":"pavz02"},"content":"deadline c /by 1"},{"lineNumber":4,"author":{"gitId":"pavz02"},"content":"list"},{"lineNumber":5,"author":{"gitId":"pavz02"},"content":"deadline d /by 2"},{"lineNumber":6,"author":{"gitId":"pavz02"},"content":"done 1"},{"lineNumber":7,"author":{"gitId":"pavz02"},"content":"done 2"},{"lineNumber":8,"author":{"gitId":"pavz02"},"content":"event e /at 3"},{"lineNumber":9,"author":{"gitId":"pavz02"},"content":"event f /at 4"},{"lineNumber":10,"author":{"gitId":"pavz02"},"content":"list"},{"lineNumber":11,"author":{"gitId":"pavz02"},"content":"delete 2"},{"lineNumber":12,"author":{"gitId":"pavz02"},"content":"delete 4"},{"lineNumber":13,"author":{"gitId":"pavz02"},"content":"bye"}],"authorContributionMap":{"pavz02":13}}]
