[{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027checkstyle\u0027"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027"},{"lineNumber":6,"author":{"gitId":"-"},"content":"}"},{"lineNumber":7,"author":{"gitId":"-"},"content":""},{"lineNumber":8,"author":{"gitId":"-"},"content":"repositories {"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    mavenCentral()"},{"lineNumber":10,"author":{"gitId":"-"},"content":"}"},{"lineNumber":11,"author":{"gitId":"pavz02"},"content":"/*"},{"lineNumber":12,"author":{"gitId":"-"},"content":"dependencies {"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.5.0\u0027"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.5.0\u0027"},{"lineNumber":15,"author":{"gitId":"-"},"content":"}"},{"lineNumber":16,"author":{"gitId":"pavz02"},"content":"*/"},{"lineNumber":17,"author":{"gitId":"pavz02"},"content":"dependencies {"},{"lineNumber":18,"author":{"gitId":"pavz02"},"content":"    String javaFxVersion \u003d \u002711\u0027"},{"lineNumber":19,"author":{"gitId":"pavz02"},"content":""},{"lineNumber":20,"author":{"gitId":"pavz02"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027"},{"lineNumber":21,"author":{"gitId":"pavz02"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"},{"lineNumber":22,"author":{"gitId":"pavz02"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"},{"lineNumber":23,"author":{"gitId":"pavz02"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027"},{"lineNumber":24,"author":{"gitId":"pavz02"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"},{"lineNumber":25,"author":{"gitId":"pavz02"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"},{"lineNumber":26,"author":{"gitId":"pavz02"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027"},{"lineNumber":27,"author":{"gitId":"pavz02"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"},{"lineNumber":28,"author":{"gitId":"pavz02"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"},{"lineNumber":29,"author":{"gitId":"pavz02"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027"},{"lineNumber":30,"author":{"gitId":"pavz02"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"},{"lineNumber":31,"author":{"gitId":"pavz02"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"},{"lineNumber":32,"author":{"gitId":"pavz02"},"content":"}"},{"lineNumber":33,"author":{"gitId":"-"},"content":""},{"lineNumber":34,"author":{"gitId":"-"},"content":"test {"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    useJUnitPlatform()"},{"lineNumber":36,"author":{"gitId":"-"},"content":""},{"lineNumber":37,"author":{"gitId":"-"},"content":"    testLogging {"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\""},{"lineNumber":39,"author":{"gitId":"-"},"content":""},{"lineNumber":40,"author":{"gitId":"-"},"content":"        showExceptions true"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\""},{"lineNumber":42,"author":{"gitId":"-"},"content":"        showCauses true"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        showStackTraces true"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":46,"author":{"gitId":"-"},"content":"}"},{"lineNumber":47,"author":{"gitId":"-"},"content":""},{"lineNumber":48,"author":{"gitId":"-"},"content":"application {"},{"lineNumber":49,"author":{"gitId":"pavz02"},"content":"    mainClassName \u003d \"Launcher\""},{"lineNumber":50,"author":{"gitId":"-"},"content":"}"},{"lineNumber":51,"author":{"gitId":"-"},"content":""},{"lineNumber":52,"author":{"gitId":"-"},"content":"shadowJar {"},{"lineNumber":53,"author":{"gitId":"pavz02"},"content":"    archiveBaseName \u003d \"Launcher\""},{"lineNumber":54,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null"},{"lineNumber":55,"author":{"gitId":"-"},"content":"}"},{"lineNumber":56,"author":{"gitId":"-"},"content":""},{"lineNumber":57,"author":{"gitId":"-"},"content":"checkstyle {"},{"lineNumber":58,"author":{"gitId":"pavz02"},"content":"    toolVersion \u003d \u00278.32\u0027"},{"lineNumber":59,"author":{"gitId":"-"},"content":"}"},{"lineNumber":60,"author":{"gitId":"-"},"content":""},{"lineNumber":61,"author":{"gitId":"-"},"content":"run {"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in"},{"lineNumber":63,"author":{"gitId":"pavz02"},"content":"    enableAssertions \u003d true"},{"lineNumber":64,"author":{"gitId":"-"},"content":"}"}],"authorContributionMap":{"pavz02":22,"-":42}},{"path":"data/tasks.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"pavz02"},"content":"T@@@0@@@a@@@bye"},{"lineNumber":2,"author":{"gitId":"pavz02"},"content":"D@@@0@@@a@@@2020-11-11@@@19:00@@@b"},{"lineNumber":3,"author":{"gitId":"pavz02"},"content":"D@@@0@@@c@@@2020-11-11@@@20:00@@@"}],"authorContributionMap":{"pavz02":3}},{"path":"docs/README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"pavz02"},"content":"# **User Guide**"},{"lineNumber":2,"author":{"gitId":"-"},"content":""},{"lineNumber":3,"author":{"gitId":"pavz02"},"content":"## **Chatbox: Luna**"},{"lineNumber":4,"author":{"gitId":"-"},"content":""},{"lineNumber":5,"author":{"gitId":"pavz02"},"content":"### Luna is an app that uses the CLI to manage tasks."},{"lineNumber":6,"author":{"gitId":"-"},"content":""},{"lineNumber":7,"author":{"gitId":"pavz02"},"content":"## **Features**"},{"lineNumber":8,"author":{"gitId":"-"},"content":""},{"lineNumber":9,"author":{"gitId":"-"},"content":""},{"lineNumber":10,"author":{"gitId":"pavz02"},"content":"### **Adding a todo task: `todo`**"},{"lineNumber":11,"author":{"gitId":"-"},"content":""},{"lineNumber":12,"author":{"gitId":"pavz02"},"content":"#### Adds a new `todo` task."},{"lineNumber":13,"author":{"gitId":"pavz02"},"content":"1. Format: `todo NAME_OF_TASK`"},{"lineNumber":14,"author":{"gitId":"pavz02"},"content":"1. Example of usage: `todo work`"},{"lineNumber":15,"author":{"gitId":"-"},"content":""},{"lineNumber":16,"author":{"gitId":"-"},"content":""},{"lineNumber":17,"author":{"gitId":"pavz02"},"content":"### **Adding a deadline task: `deadline`**"},{"lineNumber":18,"author":{"gitId":"-"},"content":""},{"lineNumber":19,"author":{"gitId":"pavz02"},"content":"#### Adds a new `deadline` task."},{"lineNumber":20,"author":{"gitId":"pavz02"},"content":"1. Format: `deadline NAME_OF_TASK /by yyyy-mm-dd hh:mm`"},{"lineNumber":21,"author":{"gitId":"pavz02"},"content":"1. Example of usage: `deadline work /by 2021-02-28 19:00`"},{"lineNumber":22,"author":{"gitId":"pavz02"},"content":""},{"lineNumber":23,"author":{"gitId":"pavz02"},"content":""},{"lineNumber":24,"author":{"gitId":"pavz02"},"content":"### **Adding an `event` task: `event`**"},{"lineNumber":25,"author":{"gitId":"pavz02"},"content":""},{"lineNumber":26,"author":{"gitId":"pavz02"},"content":"#### Adds a new `event` task."},{"lineNumber":27,"author":{"gitId":"pavz02"},"content":"1. Format: `event` NAME_OF_TASK /at yyyy-mm-dd hh:mm"},{"lineNumber":28,"author":{"gitId":"pavz02"},"content":"1. Example of usage: `event` work /at 2021-02-28 19:00"},{"lineNumber":29,"author":{"gitId":"pavz02"},"content":""},{"lineNumber":30,"author":{"gitId":"pavz02"},"content":""},{"lineNumber":31,"author":{"gitId":"pavz02"},"content":"### **Marking a task as `done`: `done`**"},{"lineNumber":32,"author":{"gitId":"pavz02"},"content":""},{"lineNumber":33,"author":{"gitId":"pavz02"},"content":"#### Updates a task by marking it as `done`."},{"lineNumber":34,"author":{"gitId":"pavz02"},"content":"1. Format: `done INDEX_OF_TASK_IN_LIST`"},{"lineNumber":35,"author":{"gitId":"pavz02"},"content":"1. Example of usage: `done 5`"},{"lineNumber":36,"author":{"gitId":"pavz02"},"content":""},{"lineNumber":37,"author":{"gitId":"-"},"content":""},{"lineNumber":38,"author":{"gitId":"pavz02"},"content":"### **Listing down all the tasks: `list`**"},{"lineNumber":39,"author":{"gitId":"-"},"content":""},{"lineNumber":40,"author":{"gitId":"pavz02"},"content":"#### Lists down all the previously entered tasks."},{"lineNumber":41,"author":{"gitId":"pavz02"},"content":"1. Format: `list`"},{"lineNumber":42,"author":{"gitId":"pavz02"},"content":"1. Example of usage: `list`"},{"lineNumber":43,"author":{"gitId":"-"},"content":""},{"lineNumber":44,"author":{"gitId":"-"},"content":""},{"lineNumber":45,"author":{"gitId":"pavz02"},"content":"### **Finding a task using specific keywords: `find`**"},{"lineNumber":46,"author":{"gitId":"-"},"content":""},{"lineNumber":47,"author":{"gitId":"pavz02"},"content":"#### Lists tasks which contain the keywords."},{"lineNumber":48,"author":{"gitId":"pavz02"},"content":"1. Format: `find KEYWORDS`"},{"lineNumber":49,"author":{"gitId":"pavz02"},"content":"1. Example of usage: `find work`"},{"lineNumber":50,"author":{"gitId":"-"},"content":""},{"lineNumber":51,"author":{"gitId":"-"},"content":""},{"lineNumber":52,"author":{"gitId":"pavz02"},"content":"### **Tagging an existing task: tag**"},{"lineNumber":53,"author":{"gitId":"pavz02"},"content":""},{"lineNumber":54,"author":{"gitId":"pavz02"},"content":"#### Adds a `tag` to the intended task."},{"lineNumber":55,"author":{"gitId":"pavz02"},"content":"1. Format: `tag INDEX_OF_TASK_IN_LIST`"},{"lineNumber":56,"author":{"gitId":"pavz02"},"content":"1. Example of usage: `tag 5`"},{"lineNumber":57,"author":{"gitId":"pavz02"},"content":""},{"lineNumber":58,"author":{"gitId":"pavz02"},"content":""},{"lineNumber":59,"author":{"gitId":"pavz02"},"content":"### **Finding a task which has a tag of specific keywords: `tagged`**"},{"lineNumber":60,"author":{"gitId":"pavz02"},"content":""},{"lineNumber":61,"author":{"gitId":"pavz02"},"content":"#### Lists tasks which contain the keywords in the tag."},{"lineNumber":62,"author":{"gitId":"pavz02"},"content":"1. Format: `tagged KEYWORDS`"},{"lineNumber":63,"author":{"gitId":"pavz02"},"content":"1. Example of usage: `tagged work`"},{"lineNumber":64,"author":{"gitId":"pavz02"},"content":""},{"lineNumber":65,"author":{"gitId":"pavz02"},"content":""},{"lineNumber":66,"author":{"gitId":"pavz02"},"content":"### **Deleting a task: `delete`**"},{"lineNumber":67,"author":{"gitId":"pavz02"},"content":""},{"lineNumber":68,"author":{"gitId":"pavz02"},"content":"#### Removes a task from the task list."},{"lineNumber":69,"author":{"gitId":"pavz02"},"content":"1. Format: `delete INDEX_OF_TASK_IN_LIST`"},{"lineNumber":70,"author":{"gitId":"pavz02"},"content":"1. Example of usage: `delete 5`"},{"lineNumber":71,"author":{"gitId":"pavz02"},"content":""},{"lineNumber":72,"author":{"gitId":"pavz02"},"content":""},{"lineNumber":73,"author":{"gitId":"pavz02"},"content":"### **Exiting the app: `bye`**"},{"lineNumber":74,"author":{"gitId":"pavz02"},"content":""},{"lineNumber":75,"author":{"gitId":"pavz02"},"content":"#### Leaves the app and saves the existing list."},{"lineNumber":76,"author":{"gitId":"pavz02"},"content":"1. Format: `bye`"},{"lineNumber":77,"author":{"gitId":"pavz02"},"content":"1. Example of usage: `bye`"}],"authorContributionMap":{"pavz02":61,"-":16}},{"path":"src/main/java/DialogBox.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"pavz02"},"content":"import javafx.collections.FXCollections;"},{"lineNumber":2,"author":{"gitId":"pavz02"},"content":"import javafx.collections.ObservableList;"},{"lineNumber":3,"author":{"gitId":"pavz02"},"content":"import javafx.geometry.Insets;"},{"lineNumber":4,"author":{"gitId":"pavz02"},"content":"import javafx.geometry.Pos;"},{"lineNumber":5,"author":{"gitId":"pavz02"},"content":"import javafx.scene.Node;"},{"lineNumber":6,"author":{"gitId":"pavz02"},"content":"import javafx.scene.control.Label;"},{"lineNumber":7,"author":{"gitId":"pavz02"},"content":"import javafx.scene.layout.HBox;"},{"lineNumber":8,"author":{"gitId":"pavz02"},"content":"import javafx.scene.layout.StackPane;"},{"lineNumber":9,"author":{"gitId":"pavz02"},"content":"import javafx.scene.paint.Color;"},{"lineNumber":10,"author":{"gitId":"pavz02"},"content":"import javafx.scene.shape.Circle;"},{"lineNumber":11,"author":{"gitId":"pavz02"},"content":"import javafx.scene.shape.Rectangle;"},{"lineNumber":12,"author":{"gitId":"pavz02"},"content":""},{"lineNumber":13,"author":{"gitId":"pavz02"},"content":"public class DialogBox extends HBox {"},{"lineNumber":14,"author":{"gitId":"pavz02"},"content":""},{"lineNumber":15,"author":{"gitId":"pavz02"},"content":"    /**"},{"lineNumber":16,"author":{"gitId":"pavz02"},"content":"     * Represents the output dialog box."},{"lineNumber":17,"author":{"gitId":"pavz02"},"content":"     * @param l The text to be displayed."},{"lineNumber":18,"author":{"gitId":"pavz02"},"content":"     * @param c Circle with the image to be displayed."},{"lineNumber":19,"author":{"gitId":"pavz02"},"content":"     */"},{"lineNumber":20,"author":{"gitId":"pavz02"},"content":"    public DialogBox(Label l, Circle c, String who) {"},{"lineNumber":21,"author":{"gitId":"pavz02"},"content":"        Rectangle r \u003d new Rectangle(200, 200, 500, 80);"},{"lineNumber":22,"author":{"gitId":"pavz02"},"content":"        r.setFill(Color.POWDERBLUE);"},{"lineNumber":23,"author":{"gitId":"pavz02"},"content":"        r.setArcWidth(30.0);"},{"lineNumber":24,"author":{"gitId":"pavz02"},"content":"        r.setArcHeight(20.0);"},{"lineNumber":25,"author":{"gitId":"pavz02"},"content":""},{"lineNumber":26,"author":{"gitId":"pavz02"},"content":"        StackPane sp \u003d new StackPane(r, l);"},{"lineNumber":27,"author":{"gitId":"pavz02"},"content":"        HBox hb;"},{"lineNumber":28,"author":{"gitId":"pavz02"},"content":"        if (who.equals(\"d\")) {"},{"lineNumber":29,"author":{"gitId":"pavz02"},"content":"            if (l.getText().equals(Ui.invalidKeywordExceptionMessage())) {"},{"lineNumber":30,"author":{"gitId":"pavz02"},"content":"                r.setFill(Color.YELLOW);"},{"lineNumber":31,"author":{"gitId":"pavz02"},"content":"            }"},{"lineNumber":32,"author":{"gitId":"pavz02"},"content":""},{"lineNumber":33,"author":{"gitId":"pavz02"},"content":"            if (l.getText().contains(Ui.invalidTaskFormatBasicExceptionMessage())) {"},{"lineNumber":34,"author":{"gitId":"pavz02"},"content":"                r.setFill(Color.RED);"},{"lineNumber":35,"author":{"gitId":"pavz02"},"content":"            }"},{"lineNumber":36,"author":{"gitId":"pavz02"},"content":"            hb \u003d new HBox(c, sp);"},{"lineNumber":37,"author":{"gitId":"pavz02"},"content":"        } else {"},{"lineNumber":38,"author":{"gitId":"pavz02"},"content":"            hb \u003d new HBox(sp, c);"},{"lineNumber":39,"author":{"gitId":"pavz02"},"content":"        }"},{"lineNumber":40,"author":{"gitId":"pavz02"},"content":"        hb.setPadding(new Insets(15, 0, 15, 0));"},{"lineNumber":41,"author":{"gitId":"pavz02"},"content":"        this.setAlignment(Pos.TOP_RIGHT);"},{"lineNumber":42,"author":{"gitId":"pavz02"},"content":"        this.getChildren().addAll(hb);"},{"lineNumber":43,"author":{"gitId":"pavz02"},"content":"    }"},{"lineNumber":44,"author":{"gitId":"pavz02"},"content":""},{"lineNumber":45,"author":{"gitId":"pavz02"},"content":"    private void flip() {"},{"lineNumber":46,"author":{"gitId":"pavz02"},"content":"        this.setAlignment(Pos.TOP_LEFT);"},{"lineNumber":47,"author":{"gitId":"pavz02"},"content":"        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());"},{"lineNumber":48,"author":{"gitId":"pavz02"},"content":"        FXCollections.reverse(tmp);"},{"lineNumber":49,"author":{"gitId":"pavz02"},"content":"        this.getChildren().setAll(tmp);"},{"lineNumber":50,"author":{"gitId":"pavz02"},"content":"    }"},{"lineNumber":51,"author":{"gitId":"pavz02"},"content":""},{"lineNumber":52,"author":{"gitId":"pavz02"},"content":"    public static DialogBox getUserDialog(Label l, Circle c) {"},{"lineNumber":53,"author":{"gitId":"pavz02"},"content":"        //l.setPadding(new Insets(30, 20, 30, 20));"},{"lineNumber":54,"author":{"gitId":"pavz02"},"content":"        return new DialogBox(l, c, \"u\");"},{"lineNumber":55,"author":{"gitId":"pavz02"},"content":"    }"},{"lineNumber":56,"author":{"gitId":"pavz02"},"content":""},{"lineNumber":57,"author":{"gitId":"pavz02"},"content":"    public static DialogBox getDukeDialog(Label l, Circle c) {"},{"lineNumber":58,"author":{"gitId":"pavz02"},"content":"        //l.setPadding(new Insets(30, 20, 30, 20));"},{"lineNumber":59,"author":{"gitId":"pavz02"},"content":"        var db \u003d new DialogBox(l, c, \"d\");"},{"lineNumber":60,"author":{"gitId":"pavz02"},"content":"        db.flip();"},{"lineNumber":61,"author":{"gitId":"pavz02"},"content":"        return db;"},{"lineNumber":62,"author":{"gitId":"pavz02"},"content":"    }"},{"lineNumber":63,"author":{"gitId":"pavz02"},"content":"}"}],"authorContributionMap":{"pavz02":63}},{"path":"src/main/java/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"pavz02"},"content":"import javafx.application.Application;"},{"lineNumber":2,"author":{"gitId":"pavz02"},"content":"import javafx.application.Platform;"},{"lineNumber":3,"author":{"gitId":"pavz02"},"content":"import javafx.scene.Scene;"},{"lineNumber":4,"author":{"gitId":"pavz02"},"content":"import javafx.scene.control.Button;"},{"lineNumber":5,"author":{"gitId":"pavz02"},"content":"import javafx.scene.control.Label;"},{"lineNumber":6,"author":{"gitId":"pavz02"},"content":"import javafx.scene.control.ScrollPane;"},{"lineNumber":7,"author":{"gitId":"pavz02"},"content":"import javafx.scene.control.TextField;"},{"lineNumber":8,"author":{"gitId":"pavz02"},"content":"import javafx.scene.image.Image;"},{"lineNumber":9,"author":{"gitId":"pavz02"},"content":"import javafx.scene.layout.AnchorPane;"},{"lineNumber":10,"author":{"gitId":"pavz02"},"content":"import javafx.scene.layout.Region;"},{"lineNumber":11,"author":{"gitId":"pavz02"},"content":"import javafx.scene.layout.VBox;"},{"lineNumber":12,"author":{"gitId":"pavz02"},"content":"import javafx.scene.paint.ImagePattern;"},{"lineNumber":13,"author":{"gitId":"pavz02"},"content":"import javafx.scene.shape.Circle;"},{"lineNumber":14,"author":{"gitId":"pavz02"},"content":"import javafx.scene.text.Font;"},{"lineNumber":15,"author":{"gitId":"pavz02"},"content":"import javafx.stage.Stage;"},{"lineNumber":16,"author":{"gitId":"pavz02"},"content":""},{"lineNumber":17,"author":{"gitId":"pavz02"},"content":"/*"},{"lineNumber":18,"author":{"gitId":"pavz02"},"content":"Need to address:"},{"lineNumber":19,"author":{"gitId":"pavz02"},"content":"- make a package"},{"lineNumber":20,"author":{"gitId":"pavz02"},"content":"- add more j-unit tests"},{"lineNumber":21,"author":{"gitId":"pavz02"},"content":" */"},{"lineNumber":22,"author":{"gitId":"pavz02"},"content":""},{"lineNumber":23,"author":{"gitId":"pavz02"},"content":"/**"},{"lineNumber":24,"author":{"gitId":"pavz02"},"content":" * Main class which brings all the other classes together."},{"lineNumber":25,"author":{"gitId":"pavz02"},"content":" */"},{"lineNumber":26,"author":{"gitId":"pavz02"},"content":"public class Duke extends Application {"},{"lineNumber":27,"author":{"gitId":"pavz02"},"content":"    private final Image user \u003d new Image(this.getClass().getResourceAsStream(\"/images/user2.jpg\"));"},{"lineNumber":28,"author":{"gitId":"pavz02"},"content":"    private final Image duke \u003d new Image(this.getClass().getResourceAsStream(\"/images/luna.jpg\"));"},{"lineNumber":29,"author":{"gitId":"pavz02"},"content":"    private ScrollPane scrollPane;"},{"lineNumber":30,"author":{"gitId":"pavz02"},"content":"    private VBox dialogContainer;"},{"lineNumber":31,"author":{"gitId":"pavz02"},"content":"    private TextField userInput;"},{"lineNumber":32,"author":{"gitId":"pavz02"},"content":""},{"lineNumber":33,"author":{"gitId":"pavz02"},"content":"    @Override"},{"lineNumber":34,"author":{"gitId":"pavz02"},"content":"    public void start(Stage stage) {"},{"lineNumber":35,"author":{"gitId":"pavz02"},"content":""},{"lineNumber":36,"author":{"gitId":"pavz02"},"content":"        TaskList.checkFileFolderSpecifications();"},{"lineNumber":37,"author":{"gitId":"pavz02"},"content":""},{"lineNumber":38,"author":{"gitId":"pavz02"},"content":"        scrollPane \u003d new ScrollPane();"},{"lineNumber":39,"author":{"gitId":"pavz02"},"content":"        dialogContainer \u003d new VBox();"},{"lineNumber":40,"author":{"gitId":"pavz02"},"content":"        scrollPane.setContent(dialogContainer);"},{"lineNumber":41,"author":{"gitId":"pavz02"},"content":""},{"lineNumber":42,"author":{"gitId":"pavz02"},"content":"        userInput \u003d new TextField();"},{"lineNumber":43,"author":{"gitId":"pavz02"},"content":"        Button sendButton \u003d new Button(\"Send\");"},{"lineNumber":44,"author":{"gitId":"pavz02"},"content":""},{"lineNumber":45,"author":{"gitId":"pavz02"},"content":"        AnchorPane mainLayout \u003d new AnchorPane();"},{"lineNumber":46,"author":{"gitId":"pavz02"},"content":""},{"lineNumber":47,"author":{"gitId":"pavz02"},"content":"        Label greeting \u003d new Label(Ui.greet());"},{"lineNumber":48,"author":{"gitId":"pavz02"},"content":"        greeting.setFont(new Font(\"Didact Gothic\", 12));"},{"lineNumber":49,"author":{"gitId":"pavz02"},"content":""},{"lineNumber":50,"author":{"gitId":"pavz02"},"content":"        Circle c \u003d new Circle(200, 200, 40);"},{"lineNumber":51,"author":{"gitId":"pavz02"},"content":"        c.setFill(new ImagePattern(duke));"},{"lineNumber":52,"author":{"gitId":"pavz02"},"content":""},{"lineNumber":53,"author":{"gitId":"pavz02"},"content":"        dialogContainer.getChildren().add(DialogBox.getDukeDialog(greeting, c));"},{"lineNumber":54,"author":{"gitId":"pavz02"},"content":"        mainLayout.getChildren().addAll(scrollPane, userInput, sendButton);"},{"lineNumber":55,"author":{"gitId":"pavz02"},"content":""},{"lineNumber":56,"author":{"gitId":"pavz02"},"content":"        Scene scene \u003d new Scene(mainLayout);"},{"lineNumber":57,"author":{"gitId":"pavz02"},"content":""},{"lineNumber":58,"author":{"gitId":"pavz02"},"content":"        stage.setTitle(\"Duke\");"},{"lineNumber":59,"author":{"gitId":"pavz02"},"content":"        stage.setResizable(false);"},{"lineNumber":60,"author":{"gitId":"pavz02"},"content":"        stage.setMinHeight(600.0);"},{"lineNumber":61,"author":{"gitId":"pavz02"},"content":"        stage.setMinWidth(400.0);"},{"lineNumber":62,"author":{"gitId":"pavz02"},"content":""},{"lineNumber":63,"author":{"gitId":"pavz02"},"content":"        mainLayout.setPrefSize(600.0, 630.0);"},{"lineNumber":64,"author":{"gitId":"pavz02"},"content":""},{"lineNumber":65,"author":{"gitId":"pavz02"},"content":"        scrollPane.setPrefSize(600, 610);"},{"lineNumber":66,"author":{"gitId":"pavz02"},"content":"        scrollPane.setHbarPolicy(ScrollPane.ScrollBarPolicy.NEVER);"},{"lineNumber":67,"author":{"gitId":"pavz02"},"content":"        scrollPane.setVbarPolicy(ScrollPane.ScrollBarPolicy.ALWAYS);"},{"lineNumber":68,"author":{"gitId":"pavz02"},"content":""},{"lineNumber":69,"author":{"gitId":"pavz02"},"content":"        scrollPane.setVvalue(1.0);"},{"lineNumber":70,"author":{"gitId":"pavz02"},"content":"        scrollPane.setFitToWidth(true);"},{"lineNumber":71,"author":{"gitId":"pavz02"},"content":""},{"lineNumber":72,"author":{"gitId":"pavz02"},"content":"        dialogContainer.setPrefHeight(Region.USE_COMPUTED_SIZE);"},{"lineNumber":73,"author":{"gitId":"pavz02"},"content":"        dialogContainer.heightProperty().addListener((observable) -\u003e scrollPane.setVvalue(1.0));"},{"lineNumber":74,"author":{"gitId":"pavz02"},"content":"        userInput.setPrefWidth(535.0);"},{"lineNumber":75,"author":{"gitId":"pavz02"},"content":"        sendButton.setPrefWidth(60.0);"},{"lineNumber":76,"author":{"gitId":"pavz02"},"content":""},{"lineNumber":77,"author":{"gitId":"pavz02"},"content":"        AnchorPane.setTopAnchor(scrollPane, 1.0);"},{"lineNumber":78,"author":{"gitId":"pavz02"},"content":""},{"lineNumber":79,"author":{"gitId":"pavz02"},"content":"        AnchorPane.setBottomAnchor(sendButton, 1.0);"},{"lineNumber":80,"author":{"gitId":"pavz02"},"content":"        AnchorPane.setRightAnchor(sendButton, 1.0);"},{"lineNumber":81,"author":{"gitId":"pavz02"},"content":""},{"lineNumber":82,"author":{"gitId":"pavz02"},"content":"        AnchorPane.setLeftAnchor(userInput, 1.0);"},{"lineNumber":83,"author":{"gitId":"pavz02"},"content":"        AnchorPane.setBottomAnchor(userInput, 1.0);"},{"lineNumber":84,"author":{"gitId":"pavz02"},"content":""},{"lineNumber":85,"author":{"gitId":"pavz02"},"content":""},{"lineNumber":86,"author":{"gitId":"pavz02"},"content":"        sendButton.setOnMouseClicked((event) -\u003e handleUserInput());"},{"lineNumber":87,"author":{"gitId":"pavz02"},"content":""},{"lineNumber":88,"author":{"gitId":"pavz02"},"content":"        userInput.setOnAction((event) -\u003e handleUserInput());"},{"lineNumber":89,"author":{"gitId":"pavz02"},"content":""},{"lineNumber":90,"author":{"gitId":"pavz02"},"content":"        stage.setScene(scene);"},{"lineNumber":91,"author":{"gitId":"pavz02"},"content":"        stage.show();"},{"lineNumber":92,"author":{"gitId":"pavz02"},"content":"    }"},{"lineNumber":93,"author":{"gitId":"pavz02"},"content":""},{"lineNumber":94,"author":{"gitId":"pavz02"},"content":"    private void handleUserInput() {"},{"lineNumber":95,"author":{"gitId":"pavz02"},"content":"        String userInp \u003d userInput.getText();"},{"lineNumber":96,"author":{"gitId":"pavz02"},"content":"        String userInpResponse \u003d getResponse(userInp);"},{"lineNumber":97,"author":{"gitId":"pavz02"},"content":""},{"lineNumber":98,"author":{"gitId":"pavz02"},"content":"        Label userText \u003d new Label(userInp);"},{"lineNumber":99,"author":{"gitId":"pavz02"},"content":"        userText.setFont(new Font(\"Courier new\", 18));"},{"lineNumber":100,"author":{"gitId":"pavz02"},"content":""},{"lineNumber":101,"author":{"gitId":"pavz02"},"content":"        Label dukeText \u003d new Label(userInpResponse);"},{"lineNumber":102,"author":{"gitId":"pavz02"},"content":"        dukeText.setFont(new Font(\"Didact Gothic\", 11));"},{"lineNumber":103,"author":{"gitId":"pavz02"},"content":""},{"lineNumber":104,"author":{"gitId":"pavz02"},"content":"        Circle c \u003d new Circle(200, 200, 40);"},{"lineNumber":105,"author":{"gitId":"pavz02"},"content":"        c.setFill(new ImagePattern(duke));"},{"lineNumber":106,"author":{"gitId":"pavz02"},"content":""},{"lineNumber":107,"author":{"gitId":"pavz02"},"content":"        Circle c2 \u003d new Circle(200, 200, 40);"},{"lineNumber":108,"author":{"gitId":"pavz02"},"content":"        c2.setFill(new ImagePattern(user));"},{"lineNumber":109,"author":{"gitId":"pavz02"},"content":""},{"lineNumber":110,"author":{"gitId":"pavz02"},"content":"        dialogContainer.getChildren().addAll("},{"lineNumber":111,"author":{"gitId":"pavz02"},"content":"                DialogBox.getUserDialog(userText, c2),"},{"lineNumber":112,"author":{"gitId":"pavz02"},"content":"                DialogBox.getDukeDialog(dukeText, c)"},{"lineNumber":113,"author":{"gitId":"pavz02"},"content":"        );"},{"lineNumber":114,"author":{"gitId":"pavz02"},"content":""},{"lineNumber":115,"author":{"gitId":"pavz02"},"content":"        if (userInput.getText().equals(\"bye\")) {"},{"lineNumber":116,"author":{"gitId":"pavz02"},"content":"            Platform.exit();"},{"lineNumber":117,"author":{"gitId":"pavz02"},"content":"            System.exit(0);"},{"lineNumber":118,"author":{"gitId":"pavz02"},"content":"        }"},{"lineNumber":119,"author":{"gitId":"pavz02"},"content":""},{"lineNumber":120,"author":{"gitId":"pavz02"},"content":"        userInput.clear();"},{"lineNumber":121,"author":{"gitId":"pavz02"},"content":"    }"},{"lineNumber":122,"author":{"gitId":"pavz02"},"content":""},{"lineNumber":123,"author":{"gitId":"pavz02"},"content":"    private String getResponse(String input) {"},{"lineNumber":124,"author":{"gitId":"pavz02"},"content":"        return Parser.parse(input);"},{"lineNumber":125,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":126,"author":{"gitId":"-"},"content":"}"}],"authorContributionMap":{"pavz02":124,"-":2}},{"path":"src/main/java/InvalidKeywordException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"pavz02"},"content":"/**"},{"lineNumber":2,"author":{"gitId":"pavz02"},"content":" * Exception that occurs when the user inputs an unaccepted keyword."},{"lineNumber":3,"author":{"gitId":"pavz02"},"content":" */"},{"lineNumber":4,"author":{"gitId":"pavz02"},"content":"public class InvalidKeywordException extends Exception {"},{"lineNumber":5,"author":{"gitId":"pavz02"},"content":"    /**"},{"lineNumber":6,"author":{"gitId":"pavz02"},"content":"     * Constructor for the exception."},{"lineNumber":7,"author":{"gitId":"pavz02"},"content":"     */"},{"lineNumber":8,"author":{"gitId":"pavz02"},"content":"    public InvalidKeywordException(String message) {"},{"lineNumber":9,"author":{"gitId":"pavz02"},"content":"        super(message);"},{"lineNumber":10,"author":{"gitId":"pavz02"},"content":"    }"},{"lineNumber":11,"author":{"gitId":"pavz02"},"content":""},{"lineNumber":12,"author":{"gitId":"pavz02"},"content":"    /**"},{"lineNumber":13,"author":{"gitId":"pavz02"},"content":"     * Prints the error message."},{"lineNumber":14,"author":{"gitId":"pavz02"},"content":"     */"},{"lineNumber":15,"author":{"gitId":"pavz02"},"content":"    public String printMessage() {"},{"lineNumber":16,"author":{"gitId":"pavz02"},"content":"        return super.getMessage();"},{"lineNumber":17,"author":{"gitId":"pavz02"},"content":"    }"},{"lineNumber":18,"author":{"gitId":"pavz02"},"content":"}"}],"authorContributionMap":{"pavz02":18}},{"path":"src/main/java/InvalidNumberException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"pavz02"},"content":"/**"},{"lineNumber":2,"author":{"gitId":"pavz02"},"content":" * Exception that occurs when the user does not input a valid number."},{"lineNumber":3,"author":{"gitId":"pavz02"},"content":" */"},{"lineNumber":4,"author":{"gitId":"pavz02"},"content":"public class InvalidNumberException extends Exception {"},{"lineNumber":5,"author":{"gitId":"pavz02"},"content":"    /**"},{"lineNumber":6,"author":{"gitId":"pavz02"},"content":"     * Constructor for the exception."},{"lineNumber":7,"author":{"gitId":"pavz02"},"content":"     * @param message Error message to be printed out."},{"lineNumber":8,"author":{"gitId":"pavz02"},"content":"     */"},{"lineNumber":9,"author":{"gitId":"pavz02"},"content":"    public InvalidNumberException(String message) {"},{"lineNumber":10,"author":{"gitId":"pavz02"},"content":"        super(message);"},{"lineNumber":11,"author":{"gitId":"pavz02"},"content":"    }"},{"lineNumber":12,"author":{"gitId":"pavz02"},"content":""},{"lineNumber":13,"author":{"gitId":"pavz02"},"content":"    /**"},{"lineNumber":14,"author":{"gitId":"pavz02"},"content":"     * Prints the error message."},{"lineNumber":15,"author":{"gitId":"pavz02"},"content":"     */"},{"lineNumber":16,"author":{"gitId":"pavz02"},"content":"    public String printMessage() {"},{"lineNumber":17,"author":{"gitId":"pavz02"},"content":"        return super.getMessage();"},{"lineNumber":18,"author":{"gitId":"pavz02"},"content":"    }"},{"lineNumber":19,"author":{"gitId":"pavz02"},"content":"}"}],"authorContributionMap":{"pavz02":19}},{"path":"src/main/java/InvalidTaskFormatException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"pavz02"},"content":"/**"},{"lineNumber":2,"author":{"gitId":"pavz02"},"content":" * Exception that occurs when the input format is wrong."},{"lineNumber":3,"author":{"gitId":"pavz02"},"content":" */"},{"lineNumber":4,"author":{"gitId":"pavz02"},"content":"public class InvalidTaskFormatException extends Exception {"},{"lineNumber":5,"author":{"gitId":"pavz02"},"content":"    /**"},{"lineNumber":6,"author":{"gitId":"pavz02"},"content":"     * Constructor for the exception."},{"lineNumber":7,"author":{"gitId":"pavz02"},"content":"     */"},{"lineNumber":8,"author":{"gitId":"pavz02"},"content":"    public InvalidTaskFormatException(String message) {"},{"lineNumber":9,"author":{"gitId":"pavz02"},"content":"        super(message);"},{"lineNumber":10,"author":{"gitId":"pavz02"},"content":"    }"},{"lineNumber":11,"author":{"gitId":"pavz02"},"content":""},{"lineNumber":12,"author":{"gitId":"pavz02"},"content":"    /**"},{"lineNumber":13,"author":{"gitId":"pavz02"},"content":"     * Prints the error message."},{"lineNumber":14,"author":{"gitId":"pavz02"},"content":"     */"},{"lineNumber":15,"author":{"gitId":"pavz02"},"content":"    public String printMessage() {"},{"lineNumber":16,"author":{"gitId":"pavz02"},"content":"        return super.getMessage();"},{"lineNumber":17,"author":{"gitId":"pavz02"},"content":"    }"},{"lineNumber":18,"author":{"gitId":"pavz02"},"content":"}"}],"authorContributionMap":{"pavz02":18}},{"path":"src/main/java/Launcher.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"pavz02"},"content":"import javafx.application.Application;"},{"lineNumber":2,"author":{"gitId":"pavz02"},"content":""},{"lineNumber":3,"author":{"gitId":"pavz02"},"content":"public class Launcher {"},{"lineNumber":4,"author":{"gitId":"pavz02"},"content":"    public static void main(String[] args) {"},{"lineNumber":5,"author":{"gitId":"pavz02"},"content":"        Application.launch(Duke.class, args);"},{"lineNumber":6,"author":{"gitId":"pavz02"},"content":"    }"},{"lineNumber":7,"author":{"gitId":"pavz02"},"content":"}"}],"authorContributionMap":{"pavz02":7}},{"path":"src/main/java/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"pavz02"},"content":"import java.time.LocalDate;"},{"lineNumber":2,"author":{"gitId":"pavz02"},"content":"import java.time.LocalTime;"},{"lineNumber":3,"author":{"gitId":"pavz02"},"content":"import java.time.format.DateTimeParseException;"},{"lineNumber":4,"author":{"gitId":"pavz02"},"content":""},{"lineNumber":5,"author":{"gitId":"pavz02"},"content":"/**"},{"lineNumber":6,"author":{"gitId":"pavz02"},"content":" * Parses the inputs given by the user."},{"lineNumber":7,"author":{"gitId":"pavz02"},"content":" */"},{"lineNumber":8,"author":{"gitId":"pavz02"},"content":"public class Parser {"},{"lineNumber":9,"author":{"gitId":"pavz02"},"content":"    private static String[] splitArray;"},{"lineNumber":10,"author":{"gitId":"pavz02"},"content":"    /**"},{"lineNumber":11,"author":{"gitId":"pavz02"},"content":"     * Determines the keyword and processes the input based on the keyword."},{"lineNumber":12,"author":{"gitId":"pavz02"},"content":"     */"},{"lineNumber":13,"author":{"gitId":"pavz02"},"content":"    static String parse(String inp) {"},{"lineNumber":14,"author":{"gitId":"pavz02"},"content":""},{"lineNumber":15,"author":{"gitId":"pavz02"},"content":"        splitArray \u003d inp.split(\" \", 2);"},{"lineNumber":16,"author":{"gitId":"pavz02"},"content":"        assert splitArray.length \u003e 0 : \"Impossible input\";"},{"lineNumber":17,"author":{"gitId":"pavz02"},"content":""},{"lineNumber":18,"author":{"gitId":"pavz02"},"content":"        String output;"},{"lineNumber":19,"author":{"gitId":"pavz02"},"content":"        try {"},{"lineNumber":20,"author":{"gitId":"pavz02"},"content":"            switch (splitArray[0]) {"},{"lineNumber":21,"author":{"gitId":"pavz02"},"content":"            case \"todo\":"},{"lineNumber":22,"author":{"gitId":"pavz02"},"content":"                output \u003d processTodo();"},{"lineNumber":23,"author":{"gitId":"pavz02"},"content":"                break;"},{"lineNumber":24,"author":{"gitId":"pavz02"},"content":"            case \"deadline\":"},{"lineNumber":25,"author":{"gitId":"pavz02"},"content":"                output \u003d processDeadlineAndEvent(\" /by \");"},{"lineNumber":26,"author":{"gitId":"pavz02"},"content":"                break;"},{"lineNumber":27,"author":{"gitId":"pavz02"},"content":"            case \"event\":"},{"lineNumber":28,"author":{"gitId":"pavz02"},"content":"                output \u003d processDeadlineAndEvent(\" /at \");"},{"lineNumber":29,"author":{"gitId":"pavz02"},"content":"                break;"},{"lineNumber":30,"author":{"gitId":"pavz02"},"content":"            case \"done\":"},{"lineNumber":31,"author":{"gitId":"pavz02"},"content":"                output \u003d processDone();"},{"lineNumber":32,"author":{"gitId":"pavz02"},"content":"                break;"},{"lineNumber":33,"author":{"gitId":"pavz02"},"content":"            case \"list\":"},{"lineNumber":34,"author":{"gitId":"pavz02"},"content":"                output \u003d processList();"},{"lineNumber":35,"author":{"gitId":"pavz02"},"content":"                break;"},{"lineNumber":36,"author":{"gitId":"pavz02"},"content":"            case \"tagged\":"},{"lineNumber":37,"author":{"gitId":"pavz02"},"content":"                output \u003d processTagged();"},{"lineNumber":38,"author":{"gitId":"pavz02"},"content":"                break;"},{"lineNumber":39,"author":{"gitId":"pavz02"},"content":"            case \"find\":"},{"lineNumber":40,"author":{"gitId":"pavz02"},"content":"                output \u003d processFind();"},{"lineNumber":41,"author":{"gitId":"pavz02"},"content":"                break;"},{"lineNumber":42,"author":{"gitId":"pavz02"},"content":"            case \"tag\":"},{"lineNumber":43,"author":{"gitId":"pavz02"},"content":"                output \u003d processTag();"},{"lineNumber":44,"author":{"gitId":"pavz02"},"content":"                break;"},{"lineNumber":45,"author":{"gitId":"pavz02"},"content":"            case \"delete\":"},{"lineNumber":46,"author":{"gitId":"pavz02"},"content":"                output \u003d processDelete();"},{"lineNumber":47,"author":{"gitId":"pavz02"},"content":"                break;"},{"lineNumber":48,"author":{"gitId":"pavz02"},"content":"            case \"bye\":"},{"lineNumber":49,"author":{"gitId":"pavz02"},"content":"                output \u003d processBye();"},{"lineNumber":50,"author":{"gitId":"pavz02"},"content":"                break;"},{"lineNumber":51,"author":{"gitId":"pavz02"},"content":"            default:"},{"lineNumber":52,"author":{"gitId":"pavz02"},"content":"                throw new InvalidKeywordException(Ui.invalidKeywordExceptionMessage());"},{"lineNumber":53,"author":{"gitId":"pavz02"},"content":"            }"},{"lineNumber":54,"author":{"gitId":"pavz02"},"content":"        } catch (InvalidTaskFormatException e) {"},{"lineNumber":55,"author":{"gitId":"pavz02"},"content":"            output \u003d e.printMessage();"},{"lineNumber":56,"author":{"gitId":"pavz02"},"content":"        } catch (InvalidNumberException e) {"},{"lineNumber":57,"author":{"gitId":"pavz02"},"content":"            output \u003d e.printMessage();"},{"lineNumber":58,"author":{"gitId":"pavz02"},"content":"        } catch (InvalidKeywordException e) {"},{"lineNumber":59,"author":{"gitId":"pavz02"},"content":"            output \u003d e.printMessage();"},{"lineNumber":60,"author":{"gitId":"pavz02"},"content":"        }"},{"lineNumber":61,"author":{"gitId":"pavz02"},"content":"        return output;"},{"lineNumber":62,"author":{"gitId":"pavz02"},"content":"    }"},{"lineNumber":63,"author":{"gitId":"pavz02"},"content":""},{"lineNumber":64,"author":{"gitId":"pavz02"},"content":"    /**"},{"lineNumber":65,"author":{"gitId":"pavz02"},"content":"     * Checks whether a given String can be parsed as an Integer."},{"lineNumber":66,"author":{"gitId":"pavz02"},"content":"     * @param s A string."},{"lineNumber":67,"author":{"gitId":"pavz02"},"content":"     * @throws InvalidNumberException Thrown in the case where the String is not an Integer."},{"lineNumber":68,"author":{"gitId":"pavz02"},"content":"     */"},{"lineNumber":69,"author":{"gitId":"pavz02"},"content":"    static void isInt(String s) throws InvalidNumberException {"},{"lineNumber":70,"author":{"gitId":"pavz02"},"content":"        try {"},{"lineNumber":71,"author":{"gitId":"pavz02"},"content":"            int x \u003d Integer.parseInt(s);"},{"lineNumber":72,"author":{"gitId":"pavz02"},"content":"            if (x \u003e TaskList.getCount()) {"},{"lineNumber":73,"author":{"gitId":"pavz02"},"content":"                throw new NumberFormatException();"},{"lineNumber":74,"author":{"gitId":"pavz02"},"content":"            }"},{"lineNumber":75,"author":{"gitId":"pavz02"},"content":"        } catch (NumberFormatException e) {"},{"lineNumber":76,"author":{"gitId":"pavz02"},"content":"            throw new InvalidNumberException(Ui.invalidNumberExceptionMessage());"},{"lineNumber":77,"author":{"gitId":"pavz02"},"content":"        }"},{"lineNumber":78,"author":{"gitId":"pavz02"},"content":"    }"},{"lineNumber":79,"author":{"gitId":"pavz02"},"content":""},{"lineNumber":80,"author":{"gitId":"pavz02"},"content":"    /**"},{"lineNumber":81,"author":{"gitId":"pavz02"},"content":"     * Checks whether an array (spl) is of the given length (x)."},{"lineNumber":82,"author":{"gitId":"pavz02"},"content":"     * This determines whether the format of the input is correct."},{"lineNumber":83,"author":{"gitId":"pavz02"},"content":"     * @param spl Array of strings."},{"lineNumber":84,"author":{"gitId":"pavz02"},"content":"     * @param x Length the array is supposed to be checked for."},{"lineNumber":85,"author":{"gitId":"pavz02"},"content":"     * @param task To throw an error message dependent on the type of task."},{"lineNumber":86,"author":{"gitId":"pavz02"},"content":"     * @throws InvalidTaskFormatException Thrown is the array is not of the given length."},{"lineNumber":87,"author":{"gitId":"pavz02"},"content":"     */"},{"lineNumber":88,"author":{"gitId":"pavz02"},"content":"    static void checkSplLength(String[] spl, int x, String task) throws InvalidTaskFormatException {"},{"lineNumber":89,"author":{"gitId":"pavz02"},"content":"        if (spl.length !\u003d x) {"},{"lineNumber":90,"author":{"gitId":"pavz02"},"content":"            throw new InvalidTaskFormatException(Ui.invalidTaskFormatExceptionMessage(task));"},{"lineNumber":91,"author":{"gitId":"pavz02"},"content":"        }"},{"lineNumber":92,"author":{"gitId":"pavz02"},"content":"    }"},{"lineNumber":93,"author":{"gitId":"pavz02"},"content":""},{"lineNumber":94,"author":{"gitId":"pavz02"},"content":"    static String processTodo() throws InvalidTaskFormatException {"},{"lineNumber":95,"author":{"gitId":"pavz02"},"content":"        checkSplLength(splitArray, 2, \"todo\");"},{"lineNumber":96,"author":{"gitId":"pavz02"},"content":"        String task \u003d splitArray[0];"},{"lineNumber":97,"author":{"gitId":"pavz02"},"content":"        String[] splitDescriptionAndTag \u003d splitArray[1].split(\" /tag \", 2);"},{"lineNumber":98,"author":{"gitId":"pavz02"},"content":"        String description \u003d splitDescriptionAndTag[0];"},{"lineNumber":99,"author":{"gitId":"pavz02"},"content":"        String tag \u003d null;"},{"lineNumber":100,"author":{"gitId":"pavz02"},"content":"        if (splitDescriptionAndTag.length \u003d\u003d 2) {"},{"lineNumber":101,"author":{"gitId":"pavz02"},"content":"            tag \u003d splitDescriptionAndTag[1];"},{"lineNumber":102,"author":{"gitId":"pavz02"},"content":"        }"},{"lineNumber":103,"author":{"gitId":"pavz02"},"content":"        return TaskList.processTaskOutput(task, description, null, null, tag);"},{"lineNumber":104,"author":{"gitId":"pavz02"},"content":"    }"},{"lineNumber":105,"author":{"gitId":"pavz02"},"content":""},{"lineNumber":106,"author":{"gitId":"pavz02"},"content":"    static String processDeadlineAndEvent(String regex) throws InvalidTaskFormatException {"},{"lineNumber":107,"author":{"gitId":"pavz02"},"content":"        String task \u003d splitArray[0];"},{"lineNumber":108,"author":{"gitId":"pavz02"},"content":"        checkSplLength(splitArray, 2, task);"},{"lineNumber":109,"author":{"gitId":"pavz02"},"content":""},{"lineNumber":110,"author":{"gitId":"pavz02"},"content":"        String[] splitDescriptionAndTimeDateTag \u003d splitArray[1].split(regex, 2);"},{"lineNumber":111,"author":{"gitId":"pavz02"},"content":"        checkSplLength(splitDescriptionAndTimeDateTag, 2, task);"},{"lineNumber":112,"author":{"gitId":"pavz02"},"content":""},{"lineNumber":113,"author":{"gitId":"pavz02"},"content":"        String[] splitTimeDateAndTag \u003d splitDescriptionAndTimeDateTag[1].split(\" /tag \", 2);"},{"lineNumber":114,"author":{"gitId":"pavz02"},"content":""},{"lineNumber":115,"author":{"gitId":"pavz02"},"content":"        String[] splitDateAndTime \u003d splitTimeDateAndTag[0].split(\" \", 2);"},{"lineNumber":116,"author":{"gitId":"pavz02"},"content":"        checkSplLength(splitDateAndTime, 2, task);"},{"lineNumber":117,"author":{"gitId":"pavz02"},"content":""},{"lineNumber":118,"author":{"gitId":"pavz02"},"content":"        String description \u003d splitDescriptionAndTimeDateTag[0];"},{"lineNumber":119,"author":{"gitId":"pavz02"},"content":"        String tag \u003d null;"},{"lineNumber":120,"author":{"gitId":"pavz02"},"content":""},{"lineNumber":121,"author":{"gitId":"pavz02"},"content":"        if (splitTimeDateAndTag.length \u003d\u003d 2) {"},{"lineNumber":122,"author":{"gitId":"pavz02"},"content":"            tag \u003d splitTimeDateAndTag[1];"},{"lineNumber":123,"author":{"gitId":"pavz02"},"content":"        }"},{"lineNumber":124,"author":{"gitId":"pavz02"},"content":""},{"lineNumber":125,"author":{"gitId":"pavz02"},"content":"        LocalDate date;"},{"lineNumber":126,"author":{"gitId":"pavz02"},"content":"        LocalTime time;"},{"lineNumber":127,"author":{"gitId":"pavz02"},"content":"        try {"},{"lineNumber":128,"author":{"gitId":"pavz02"},"content":"            date \u003d LocalDate.parse(splitDateAndTime[0]);"},{"lineNumber":129,"author":{"gitId":"pavz02"},"content":"            time \u003d LocalTime.parse(splitDateAndTime[1]);"},{"lineNumber":130,"author":{"gitId":"pavz02"},"content":"        } catch (DateTimeParseException e){"},{"lineNumber":131,"author":{"gitId":"pavz02"},"content":"            throw new InvalidTaskFormatException(Ui.invalidTaskFormatExceptionMessage(task));"},{"lineNumber":132,"author":{"gitId":"pavz02"},"content":"        }"},{"lineNumber":133,"author":{"gitId":"pavz02"},"content":""},{"lineNumber":134,"author":{"gitId":"pavz02"},"content":"        return TaskList.processTaskOutput(task, description, date, time, tag);"},{"lineNumber":135,"author":{"gitId":"pavz02"},"content":"    }"},{"lineNumber":136,"author":{"gitId":"pavz02"},"content":""},{"lineNumber":137,"author":{"gitId":"pavz02"},"content":"    static String processDone() throws InvalidTaskFormatException, InvalidNumberException {"},{"lineNumber":138,"author":{"gitId":"pavz02"},"content":"        checkSplLength(splitArray, 2, \"done\");"},{"lineNumber":139,"author":{"gitId":"pavz02"},"content":"        isInt(splitArray[1]);"},{"lineNumber":140,"author":{"gitId":"pavz02"},"content":"        int doneWithIndexNumber \u003d Integer.parseInt(splitArray[1]);"},{"lineNumber":141,"author":{"gitId":"pavz02"},"content":"        return TaskList.processDoneOutput(doneWithIndexNumber);"},{"lineNumber":142,"author":{"gitId":"pavz02"},"content":"    }"},{"lineNumber":143,"author":{"gitId":"pavz02"},"content":""},{"lineNumber":144,"author":{"gitId":"pavz02"},"content":"    static String processList() throws InvalidTaskFormatException {"},{"lineNumber":145,"author":{"gitId":"pavz02"},"content":"        checkSplLength(splitArray, 1, \"list\");"},{"lineNumber":146,"author":{"gitId":"pavz02"},"content":"        return TaskList.processListOutput();"},{"lineNumber":147,"author":{"gitId":"pavz02"},"content":"    }"},{"lineNumber":148,"author":{"gitId":"pavz02"},"content":""},{"lineNumber":149,"author":{"gitId":"pavz02"},"content":"    static String processFind() throws InvalidTaskFormatException {"},{"lineNumber":150,"author":{"gitId":"pavz02"},"content":"        checkSplLength(splitArray, 2, \"find\");"},{"lineNumber":151,"author":{"gitId":"pavz02"},"content":"        String description \u003d splitArray[1];"},{"lineNumber":152,"author":{"gitId":"pavz02"},"content":"        return TaskList.processFindOutput(description);"},{"lineNumber":153,"author":{"gitId":"pavz02"},"content":"    }"},{"lineNumber":154,"author":{"gitId":"pavz02"},"content":""},{"lineNumber":155,"author":{"gitId":"pavz02"},"content":"    static String processTagged() throws InvalidTaskFormatException {"},{"lineNumber":156,"author":{"gitId":"pavz02"},"content":"        checkSplLength(splitArray, 2, \"tagged\");"},{"lineNumber":157,"author":{"gitId":"pavz02"},"content":"        String description \u003d splitArray[1];"},{"lineNumber":158,"author":{"gitId":"pavz02"},"content":"        return TaskList.processTaggedOutput(description);"},{"lineNumber":159,"author":{"gitId":"pavz02"},"content":"    }"},{"lineNumber":160,"author":{"gitId":"pavz02"},"content":""},{"lineNumber":161,"author":{"gitId":"pavz02"},"content":"    static String processTag() throws InvalidTaskFormatException {"},{"lineNumber":162,"author":{"gitId":"pavz02"},"content":"        checkSplLength(splitArray, 2, \"tag\");"},{"lineNumber":163,"author":{"gitId":"pavz02"},"content":"        String[] splitIndexAndDescription \u003d splitArray[1].split(\" \");"},{"lineNumber":164,"author":{"gitId":"pavz02"},"content":"        checkSplLength(splitIndexAndDescription, 2, \"tag\");"},{"lineNumber":165,"author":{"gitId":"pavz02"},"content":"        int index \u003d Integer.parseInt(splitIndexAndDescription[0]);"},{"lineNumber":166,"author":{"gitId":"pavz02"},"content":"        String description \u003d splitIndexAndDescription[1];"},{"lineNumber":167,"author":{"gitId":"pavz02"},"content":"        return TaskList.processTagOutput(index, description);"},{"lineNumber":168,"author":{"gitId":"pavz02"},"content":"    }"},{"lineNumber":169,"author":{"gitId":"pavz02"},"content":""},{"lineNumber":170,"author":{"gitId":"pavz02"},"content":"    static String processDelete() throws InvalidTaskFormatException, InvalidNumberException {"},{"lineNumber":171,"author":{"gitId":"pavz02"},"content":"        checkSplLength(splitArray, 2, \"delete\");"},{"lineNumber":172,"author":{"gitId":"pavz02"},"content":"        isInt(splitArray[1]);"},{"lineNumber":173,"author":{"gitId":"pavz02"},"content":"        int deleteThisIndexNumber \u003d Integer.parseInt(splitArray[1]);"},{"lineNumber":174,"author":{"gitId":"pavz02"},"content":"        return TaskList.processDeleteOutput(deleteThisIndexNumber);"},{"lineNumber":175,"author":{"gitId":"pavz02"},"content":"    }"},{"lineNumber":176,"author":{"gitId":"pavz02"},"content":""},{"lineNumber":177,"author":{"gitId":"pavz02"},"content":"    static String processBye() throws InvalidTaskFormatException {"},{"lineNumber":178,"author":{"gitId":"pavz02"},"content":"        checkSplLength(splitArray, 1, \"bye\");"},{"lineNumber":179,"author":{"gitId":"pavz02"},"content":"        return TaskList.processBye();"},{"lineNumber":180,"author":{"gitId":"pavz02"},"content":"    }"},{"lineNumber":181,"author":{"gitId":"pavz02"},"content":"}"}],"authorContributionMap":{"pavz02":181}},{"path":"src/main/java/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"pavz02"},"content":"import java.io.File;"},{"lineNumber":2,"author":{"gitId":"pavz02"},"content":"import java.io.FileNotFoundException;"},{"lineNumber":3,"author":{"gitId":"pavz02"},"content":"import java.io.FileWriter;"},{"lineNumber":4,"author":{"gitId":"pavz02"},"content":"import java.io.IOException;"},{"lineNumber":5,"author":{"gitId":"pavz02"},"content":"import java.time.LocalDate;"},{"lineNumber":6,"author":{"gitId":"pavz02"},"content":"import java.time.LocalTime;"},{"lineNumber":7,"author":{"gitId":"pavz02"},"content":"import java.util.Scanner;"},{"lineNumber":8,"author":{"gitId":"pavz02"},"content":""},{"lineNumber":9,"author":{"gitId":"pavz02"},"content":"/**"},{"lineNumber":10,"author":{"gitId":"pavz02"},"content":" * Stores the task list so that it can be recovered even after the user exits from the program."},{"lineNumber":11,"author":{"gitId":"pavz02"},"content":" */"},{"lineNumber":12,"author":{"gitId":"pavz02"},"content":"public class Storage {"},{"lineNumber":13,"author":{"gitId":"pavz02"},"content":""},{"lineNumber":14,"author":{"gitId":"pavz02"},"content":"    /**"},{"lineNumber":15,"author":{"gitId":"pavz02"},"content":"     * When the user starts the program the saved task list is recovered from the saved file."},{"lineNumber":16,"author":{"gitId":"pavz02"},"content":"     * @return Returns the number of tasks that is now in the Array List."},{"lineNumber":17,"author":{"gitId":"pavz02"},"content":"     * @throws FileNotFoundException In the case that the file where the task list was saved cannot be found."},{"lineNumber":18,"author":{"gitId":"pavz02"},"content":"     */"},{"lineNumber":19,"author":{"gitId":"pavz02"},"content":"    static int uploadFromHardDrive() throws FileNotFoundException {"},{"lineNumber":20,"author":{"gitId":"pavz02"},"content":"        int count \u003d 0;"},{"lineNumber":21,"author":{"gitId":"pavz02"},"content":"        File f \u003d new File(\"./data/tasks.txt\");"},{"lineNumber":22,"author":{"gitId":"pavz02"},"content":"        Scanner s \u003d new Scanner(f);"},{"lineNumber":23,"author":{"gitId":"pavz02"},"content":"        while (s.hasNext()) {"},{"lineNumber":24,"author":{"gitId":"pavz02"},"content":"            count++;"},{"lineNumber":25,"author":{"gitId":"pavz02"},"content":"            String[] spl \u003d s.nextLine().split(\"@@@\", 6);"},{"lineNumber":26,"author":{"gitId":"pavz02"},"content":"            assert spl.length \u003e 0 : \"Impossible input. Error uploading to/from hardDrive.\";"},{"lineNumber":27,"author":{"gitId":"pavz02"},"content":"            Task toAdd;"},{"lineNumber":28,"author":{"gitId":"pavz02"},"content":"            switch(spl[0]) {"},{"lineNumber":29,"author":{"gitId":"pavz02"},"content":"            case \"T\":"},{"lineNumber":30,"author":{"gitId":"pavz02"},"content":"                toAdd \u003d new Todo(spl[2]);"},{"lineNumber":31,"author":{"gitId":"pavz02"},"content":"                if (spl.length \u003d\u003d 4 \u0026\u0026 !spl[3].equals(\"\")) {"},{"lineNumber":32,"author":{"gitId":"pavz02"},"content":"                    toAdd.addTag(spl[3]);"},{"lineNumber":33,"author":{"gitId":"pavz02"},"content":"                }"},{"lineNumber":34,"author":{"gitId":"pavz02"},"content":"                break;"},{"lineNumber":35,"author":{"gitId":"pavz02"},"content":"            case \"D\":"},{"lineNumber":36,"author":{"gitId":"pavz02"},"content":"                toAdd \u003d new Deadline(spl[2], LocalDate.parse(spl[3]), LocalTime.parse(spl[4]));"},{"lineNumber":37,"author":{"gitId":"pavz02"},"content":"                break;"},{"lineNumber":38,"author":{"gitId":"pavz02"},"content":"            case \"E\":"},{"lineNumber":39,"author":{"gitId":"pavz02"},"content":"                toAdd \u003d new Event(spl[2], LocalDate.parse(spl[3]), LocalTime.parse(spl[4]));"},{"lineNumber":40,"author":{"gitId":"pavz02"},"content":"                break;"},{"lineNumber":41,"author":{"gitId":"pavz02"},"content":"            default:"},{"lineNumber":42,"author":{"gitId":"pavz02"},"content":"                System.out.println(\"Error in uploading from hardDrive.\");"},{"lineNumber":43,"author":{"gitId":"pavz02"},"content":"                return -1;"},{"lineNumber":44,"author":{"gitId":"pavz02"},"content":"            }"},{"lineNumber":45,"author":{"gitId":"pavz02"},"content":""},{"lineNumber":46,"author":{"gitId":"pavz02"},"content":"            if (spl[1].equals(\"1\")) {"},{"lineNumber":47,"author":{"gitId":"pavz02"},"content":"                toAdd.finished();"},{"lineNumber":48,"author":{"gitId":"pavz02"},"content":"            }"},{"lineNumber":49,"author":{"gitId":"pavz02"},"content":""},{"lineNumber":50,"author":{"gitId":"pavz02"},"content":"            if (spl.length \u003d\u003d 6 \u0026\u0026 !spl[5].equals(\"\")) {"},{"lineNumber":51,"author":{"gitId":"pavz02"},"content":"                toAdd.addTag(spl[5]);"},{"lineNumber":52,"author":{"gitId":"pavz02"},"content":"            }"},{"lineNumber":53,"author":{"gitId":"pavz02"},"content":""},{"lineNumber":54,"author":{"gitId":"pavz02"},"content":"            TaskList.getStorage().add(toAdd);"},{"lineNumber":55,"author":{"gitId":"pavz02"},"content":"        }"},{"lineNumber":56,"author":{"gitId":"pavz02"},"content":"        return count;"},{"lineNumber":57,"author":{"gitId":"pavz02"},"content":"    }"},{"lineNumber":58,"author":{"gitId":"pavz02"},"content":""},{"lineNumber":59,"author":{"gitId":"pavz02"},"content":"    /**"},{"lineNumber":60,"author":{"gitId":"pavz02"},"content":"     * When the user exits a program the current task list is saved to a file."},{"lineNumber":61,"author":{"gitId":"pavz02"},"content":"     */"},{"lineNumber":62,"author":{"gitId":"pavz02"},"content":"    static void uploadToHardDrive() {"},{"lineNumber":63,"author":{"gitId":"pavz02"},"content":"        try {"},{"lineNumber":64,"author":{"gitId":"pavz02"},"content":"            File file \u003d new File(\"./data/tasks.txt\");"},{"lineNumber":65,"author":{"gitId":"pavz02"},"content":"            assert file.exists() : \"Impossible for the file to vanish right after the program finishes.\";"},{"lineNumber":66,"author":{"gitId":"pavz02"},"content":"            FileWriter fw \u003d new FileWriter(file);"},{"lineNumber":67,"author":{"gitId":"pavz02"},"content":"            String between \u003d \"@@@\";"},{"lineNumber":68,"author":{"gitId":"pavz02"},"content":"            for (Task t : TaskList.getStorage()) {"},{"lineNumber":69,"author":{"gitId":"pavz02"},"content":"                String initial \u003d t.getInitial();"},{"lineNumber":70,"author":{"gitId":"pavz02"},"content":"                String done \u003d t.getDone();"},{"lineNumber":71,"author":{"gitId":"pavz02"},"content":"                String description \u003d t.getDescription();"},{"lineNumber":72,"author":{"gitId":"pavz02"},"content":"                String tag \u003d \"\";"},{"lineNumber":73,"author":{"gitId":"pavz02"},"content":"                if (t.getIsTagged()) {"},{"lineNumber":74,"author":{"gitId":"pavz02"},"content":"                    System.out.println(\"yes\");"},{"lineNumber":75,"author":{"gitId":"pavz02"},"content":"                    tag \u003d t.getTag();"},{"lineNumber":76,"author":{"gitId":"pavz02"},"content":"                }"},{"lineNumber":77,"author":{"gitId":"pavz02"},"content":""},{"lineNumber":78,"author":{"gitId":"pavz02"},"content":"                if (initial.equals(\"T\")) {"},{"lineNumber":79,"author":{"gitId":"pavz02"},"content":"                    fw.write(initial + between + done + between + description + between + tag + \"\\n\");"},{"lineNumber":80,"author":{"gitId":"pavz02"},"content":"                } else {"},{"lineNumber":81,"author":{"gitId":"pavz02"},"content":"                    LocalDate date \u003d t.getDate();"},{"lineNumber":82,"author":{"gitId":"pavz02"},"content":"                    LocalTime time \u003d t.getTime();"},{"lineNumber":83,"author":{"gitId":"pavz02"},"content":"                    fw.write(initial + between + done + between + description"},{"lineNumber":84,"author":{"gitId":"pavz02"},"content":"                            + between + date + between + time + between + tag + \"\\n\");"},{"lineNumber":85,"author":{"gitId":"pavz02"},"content":"                }"},{"lineNumber":86,"author":{"gitId":"pavz02"},"content":"            }"},{"lineNumber":87,"author":{"gitId":"pavz02"},"content":"            fw.close();"},{"lineNumber":88,"author":{"gitId":"pavz02"},"content":"        } catch (IOException e) {"},{"lineNumber":89,"author":{"gitId":"pavz02"},"content":"            System.out.println(\"ERROR! D: There has been some error in the hard drive.\");"},{"lineNumber":90,"author":{"gitId":"pavz02"},"content":"        }"},{"lineNumber":91,"author":{"gitId":"pavz02"},"content":"    }"},{"lineNumber":92,"author":{"gitId":"pavz02"},"content":"}"}],"authorContributionMap":{"pavz02":92}},{"path":"src/main/java/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"pavz02"},"content":"import java.time.LocalDate;"},{"lineNumber":2,"author":{"gitId":"pavz02"},"content":"import java.time.LocalTime;"},{"lineNumber":3,"author":{"gitId":"pavz02"},"content":"import java.time.format.DateTimeFormatter;"},{"lineNumber":4,"author":{"gitId":"pavz02"},"content":""},{"lineNumber":5,"author":{"gitId":"pavz02"},"content":"/**"},{"lineNumber":6,"author":{"gitId":"pavz02"},"content":" * An abstract class of the types of tasks an user can input."},{"lineNumber":7,"author":{"gitId":"pavz02"},"content":" */"},{"lineNumber":8,"author":{"gitId":"pavz02"},"content":"public abstract class Task {"},{"lineNumber":9,"author":{"gitId":"pavz02"},"content":"    /** Describes the Task that is to be done. */"},{"lineNumber":10,"author":{"gitId":"pavz02"},"content":"    protected String description;"},{"lineNumber":11,"author":{"gitId":"pavz02"},"content":""},{"lineNumber":12,"author":{"gitId":"pavz02"},"content":"    /** Shows whether the task is completed or not. */"},{"lineNumber":13,"author":{"gitId":"pavz02"},"content":"    protected boolean isDone \u003d false;"},{"lineNumber":14,"author":{"gitId":"pavz02"},"content":""},{"lineNumber":15,"author":{"gitId":"pavz02"},"content":"    protected boolean isTagged \u003d false;"},{"lineNumber":16,"author":{"gitId":"pavz02"},"content":""},{"lineNumber":17,"author":{"gitId":"pavz02"},"content":"    /** The date when the Task is expected to occur. */"},{"lineNumber":18,"author":{"gitId":"pavz02"},"content":"    protected LocalDate date;"},{"lineNumber":19,"author":{"gitId":"pavz02"},"content":""},{"lineNumber":20,"author":{"gitId":"pavz02"},"content":"    /** The time when the Task is expected to occur. */"},{"lineNumber":21,"author":{"gitId":"pavz02"},"content":"    protected LocalTime time;"},{"lineNumber":22,"author":{"gitId":"pavz02"},"content":""},{"lineNumber":23,"author":{"gitId":"pavz02"},"content":"    protected String tag \u003d null;"},{"lineNumber":24,"author":{"gitId":"pavz02"},"content":""},{"lineNumber":25,"author":{"gitId":"pavz02"},"content":"    /**"},{"lineNumber":26,"author":{"gitId":"pavz02"},"content":"     * Formats the output date for the String representation of some Task objects."},{"lineNumber":27,"author":{"gitId":"pavz02"},"content":"     */"},{"lineNumber":28,"author":{"gitId":"pavz02"},"content":"    protected DateTimeFormatter dateFormat \u003d DateTimeFormatter.ofPattern(\"MMM dd yyyy\");"},{"lineNumber":29,"author":{"gitId":"pavz02"},"content":""},{"lineNumber":30,"author":{"gitId":"pavz02"},"content":"    /**"},{"lineNumber":31,"author":{"gitId":"pavz02"},"content":"     * Formats the output date for the String representation of some Task objects."},{"lineNumber":32,"author":{"gitId":"pavz02"},"content":"     */"},{"lineNumber":33,"author":{"gitId":"pavz02"},"content":"    protected DateTimeFormatter timeFormat \u003d DateTimeFormatter.ofPattern(\"hh mm\");"},{"lineNumber":34,"author":{"gitId":"pavz02"},"content":""},{"lineNumber":35,"author":{"gitId":"pavz02"},"content":"    /**"},{"lineNumber":36,"author":{"gitId":"pavz02"},"content":"     * Constructor for a Task object."},{"lineNumber":37,"author":{"gitId":"pavz02"},"content":"     * @param description Describes what the task is."},{"lineNumber":38,"author":{"gitId":"pavz02"},"content":"     */"},{"lineNumber":39,"author":{"gitId":"pavz02"},"content":"    public Task(String description, LocalDate date, LocalTime time) {"},{"lineNumber":40,"author":{"gitId":"pavz02"},"content":"        this.description \u003d description;"},{"lineNumber":41,"author":{"gitId":"pavz02"},"content":"        this.date \u003d date;"},{"lineNumber":42,"author":{"gitId":"pavz02"},"content":"        this.time \u003d time;"},{"lineNumber":43,"author":{"gitId":"pavz02"},"content":"    }"},{"lineNumber":44,"author":{"gitId":"pavz02"},"content":""},{"lineNumber":45,"author":{"gitId":"pavz02"},"content":"    /**"},{"lineNumber":46,"author":{"gitId":"pavz02"},"content":"     * Abstract method that returns the first letter of the Task object type."},{"lineNumber":47,"author":{"gitId":"pavz02"},"content":"     * @return String with one letter."},{"lineNumber":48,"author":{"gitId":"pavz02"},"content":"     */"},{"lineNumber":49,"author":{"gitId":"pavz02"},"content":"    public abstract String getInitial();"},{"lineNumber":50,"author":{"gitId":"pavz02"},"content":""},{"lineNumber":51,"author":{"gitId":"pavz02"},"content":"    /**"},{"lineNumber":52,"author":{"gitId":"pavz02"},"content":"     * Getter that returns the date when the task is to be completed by."},{"lineNumber":53,"author":{"gitId":"pavz02"},"content":"     * @return The variable date;"},{"lineNumber":54,"author":{"gitId":"pavz02"},"content":"     */"},{"lineNumber":55,"author":{"gitId":"pavz02"},"content":"    public LocalDate getDate() {"},{"lineNumber":56,"author":{"gitId":"pavz02"},"content":"        return date;"},{"lineNumber":57,"author":{"gitId":"pavz02"},"content":"    }"},{"lineNumber":58,"author":{"gitId":"pavz02"},"content":""},{"lineNumber":59,"author":{"gitId":"pavz02"},"content":"    /**"},{"lineNumber":60,"author":{"gitId":"pavz02"},"content":"     * Getter that returns the date time the task is to be completed by."},{"lineNumber":61,"author":{"gitId":"pavz02"},"content":"     * @return The variable time;"},{"lineNumber":62,"author":{"gitId":"pavz02"},"content":"     */"},{"lineNumber":63,"author":{"gitId":"pavz02"},"content":"    public LocalTime getTime() {"},{"lineNumber":64,"author":{"gitId":"pavz02"},"content":"        return time;"},{"lineNumber":65,"author":{"gitId":"pavz02"},"content":"    }"},{"lineNumber":66,"author":{"gitId":"pavz02"},"content":""},{"lineNumber":67,"author":{"gitId":"pavz02"},"content":"    /**"},{"lineNumber":68,"author":{"gitId":"pavz02"},"content":"     * Returns the description of the Task."},{"lineNumber":69,"author":{"gitId":"pavz02"},"content":"     * @return The variable description."},{"lineNumber":70,"author":{"gitId":"pavz02"},"content":"     */"},{"lineNumber":71,"author":{"gitId":"pavz02"},"content":"    public String getDescription() {"},{"lineNumber":72,"author":{"gitId":"pavz02"},"content":"        return description;"},{"lineNumber":73,"author":{"gitId":"pavz02"},"content":"    }"},{"lineNumber":74,"author":{"gitId":"pavz02"},"content":""},{"lineNumber":75,"author":{"gitId":"pavz02"},"content":"    public boolean getIsTagged() {"},{"lineNumber":76,"author":{"gitId":"pavz02"},"content":"        return isTagged;"},{"lineNumber":77,"author":{"gitId":"pavz02"},"content":"    }"},{"lineNumber":78,"author":{"gitId":"pavz02"},"content":""},{"lineNumber":79,"author":{"gitId":"pavz02"},"content":"    public String getTag() {"},{"lineNumber":80,"author":{"gitId":"pavz02"},"content":"        return tag;"},{"lineNumber":81,"author":{"gitId":"pavz02"},"content":"    }"},{"lineNumber":82,"author":{"gitId":"pavz02"},"content":""},{"lineNumber":83,"author":{"gitId":"pavz02"},"content":"    /**"},{"lineNumber":84,"author":{"gitId":"pavz02"},"content":"     * Setter that sets the value of isDone to indicate that the task has been completed."},{"lineNumber":85,"author":{"gitId":"pavz02"},"content":"     */"},{"lineNumber":86,"author":{"gitId":"pavz02"},"content":"    public void finished() {"},{"lineNumber":87,"author":{"gitId":"pavz02"},"content":"        isDone \u003d true;"},{"lineNumber":88,"author":{"gitId":"pavz02"},"content":"    }"},{"lineNumber":89,"author":{"gitId":"pavz02"},"content":""},{"lineNumber":90,"author":{"gitId":"pavz02"},"content":"    /**"},{"lineNumber":91,"author":{"gitId":"pavz02"},"content":"     * Adds a tag to the current task."},{"lineNumber":92,"author":{"gitId":"pavz02"},"content":"     * @param description The tag that is to be added."},{"lineNumber":93,"author":{"gitId":"pavz02"},"content":"     */"},{"lineNumber":94,"author":{"gitId":"pavz02"},"content":"    public void addTag(String description) {"},{"lineNumber":95,"author":{"gitId":"pavz02"},"content":"        isTagged \u003d true;"},{"lineNumber":96,"author":{"gitId":"pavz02"},"content":"        tag \u003d description;"},{"lineNumber":97,"author":{"gitId":"pavz02"},"content":"    }"},{"lineNumber":98,"author":{"gitId":"pavz02"},"content":""},{"lineNumber":99,"author":{"gitId":"pavz02"},"content":"    /**"},{"lineNumber":100,"author":{"gitId":"pavz02"},"content":"     * Visual representation for the toString() method that indicates whether a task is done or not."},{"lineNumber":101,"author":{"gitId":"pavz02"},"content":"     * @return String showing [X] if the Task is completed and [ ] otherwise."},{"lineNumber":102,"author":{"gitId":"pavz02"},"content":"     */"},{"lineNumber":103,"author":{"gitId":"pavz02"},"content":"    protected String statusIcon() {"},{"lineNumber":104,"author":{"gitId":"pavz02"},"content":"        if (isDone) {"},{"lineNumber":105,"author":{"gitId":"pavz02"},"content":"            return \"[X] \";"},{"lineNumber":106,"author":{"gitId":"pavz02"},"content":"        }"},{"lineNumber":107,"author":{"gitId":"pavz02"},"content":"        return \"[ ] \";"},{"lineNumber":108,"author":{"gitId":"pavz02"},"content":"    }"},{"lineNumber":109,"author":{"gitId":"pavz02"},"content":""},{"lineNumber":110,"author":{"gitId":"pavz02"},"content":"    /**"},{"lineNumber":111,"author":{"gitId":"pavz02"},"content":"     * Returns whether the Task is completed or not."},{"lineNumber":112,"author":{"gitId":"pavz02"},"content":"     * @return \"1\" if the Task is completed, and \"0\" otherwise."},{"lineNumber":113,"author":{"gitId":"pavz02"},"content":"     */"},{"lineNumber":114,"author":{"gitId":"pavz02"},"content":"    public String getDone() {"},{"lineNumber":115,"author":{"gitId":"pavz02"},"content":"        if (isDone) {"},{"lineNumber":116,"author":{"gitId":"pavz02"},"content":"            return \"1\";"},{"lineNumber":117,"author":{"gitId":"pavz02"},"content":"        }"},{"lineNumber":118,"author":{"gitId":"pavz02"},"content":"        return \"0\";"},{"lineNumber":119,"author":{"gitId":"pavz02"},"content":"    }"},{"lineNumber":120,"author":{"gitId":"pavz02"},"content":""},{"lineNumber":121,"author":{"gitId":"pavz02"},"content":"    /**"},{"lineNumber":122,"author":{"gitId":"pavz02"},"content":"     * String representation of a Task object."},{"lineNumber":123,"author":{"gitId":"pavz02"},"content":"     * @return A string with the Task description."},{"lineNumber":124,"author":{"gitId":"pavz02"},"content":"     */"},{"lineNumber":125,"author":{"gitId":"pavz02"},"content":"    @Override"},{"lineNumber":126,"author":{"gitId":"pavz02"},"content":"    public String toString() {"},{"lineNumber":127,"author":{"gitId":"pavz02"},"content":"        String outputLine \u003d  \"[\" + this.getInitial() + \"]\" + this.statusIcon() + description;"},{"lineNumber":128,"author":{"gitId":"pavz02"},"content":"        if (this.getIsTagged()) {"},{"lineNumber":129,"author":{"gitId":"pavz02"},"content":"            outputLine +\u003d \" (Tag: \" + this.tag + \")\";"},{"lineNumber":130,"author":{"gitId":"pavz02"},"content":"        }"},{"lineNumber":131,"author":{"gitId":"pavz02"},"content":"        return outputLine;"},{"lineNumber":132,"author":{"gitId":"pavz02"},"content":"    }"},{"lineNumber":133,"author":{"gitId":"pavz02"},"content":""},{"lineNumber":134,"author":{"gitId":"pavz02"},"content":"}"}],"authorContributionMap":{"pavz02":134}},{"path":"src/main/java/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"pavz02"},"content":"import java.io.File;"},{"lineNumber":2,"author":{"gitId":"pavz02"},"content":"import java.io.IOException;"},{"lineNumber":3,"author":{"gitId":"pavz02"},"content":"import java.time.LocalDate;"},{"lineNumber":4,"author":{"gitId":"pavz02"},"content":"import java.time.LocalTime;"},{"lineNumber":5,"author":{"gitId":"pavz02"},"content":"import java.util.ArrayList;"},{"lineNumber":6,"author":{"gitId":"pavz02"},"content":""},{"lineNumber":7,"author":{"gitId":"pavz02"},"content":"/**"},{"lineNumber":8,"author":{"gitId":"pavz02"},"content":" * Records the list of Tasks that is to be done."},{"lineNumber":9,"author":{"gitId":"pavz02"},"content":" */"},{"lineNumber":10,"author":{"gitId":"pavz02"},"content":"public class TaskList {"},{"lineNumber":11,"author":{"gitId":"pavz02"},"content":"    private static final ArrayList\u003cTask\u003e storage \u003d new ArrayList\u003c\u003e();"},{"lineNumber":12,"author":{"gitId":"pavz02"},"content":"    private static int count \u003d 0;"},{"lineNumber":13,"author":{"gitId":"pavz02"},"content":""},{"lineNumber":14,"author":{"gitId":"pavz02"},"content":"    /**"},{"lineNumber":15,"author":{"gitId":"pavz02"},"content":"     * Getter that returns the number of tasks in the Array List."},{"lineNumber":16,"author":{"gitId":"pavz02"},"content":"     * @return The variable count."},{"lineNumber":17,"author":{"gitId":"pavz02"},"content":"     */"},{"lineNumber":18,"author":{"gitId":"pavz02"},"content":"    static int getCount() {"},{"lineNumber":19,"author":{"gitId":"pavz02"},"content":"        return count;"},{"lineNumber":20,"author":{"gitId":"pavz02"},"content":"    }"},{"lineNumber":21,"author":{"gitId":"pavz02"},"content":""},{"lineNumber":22,"author":{"gitId":"pavz02"},"content":"    /**"},{"lineNumber":23,"author":{"gitId":"pavz02"},"content":"     * Getter that returns the Array List of tasks."},{"lineNumber":24,"author":{"gitId":"pavz02"},"content":"     * @return The variable storage."},{"lineNumber":25,"author":{"gitId":"pavz02"},"content":"     */"},{"lineNumber":26,"author":{"gitId":"pavz02"},"content":"    static ArrayList\u003cTask\u003e getStorage() {"},{"lineNumber":27,"author":{"gitId":"pavz02"},"content":"        return storage;"},{"lineNumber":28,"author":{"gitId":"pavz02"},"content":"    }"},{"lineNumber":29,"author":{"gitId":"pavz02"},"content":""},{"lineNumber":30,"author":{"gitId":"pavz02"},"content":"    /**"},{"lineNumber":31,"author":{"gitId":"pavz02"},"content":"     * Checks if the folder and file to store the data are present."},{"lineNumber":32,"author":{"gitId":"pavz02"},"content":"     * Creates the folder and/or the file in case they are not there."},{"lineNumber":33,"author":{"gitId":"pavz02"},"content":"     */"},{"lineNumber":34,"author":{"gitId":"pavz02"},"content":"    static void checkFileFolderSpecifications() {"},{"lineNumber":35,"author":{"gitId":"pavz02"},"content":"        try {"},{"lineNumber":36,"author":{"gitId":"pavz02"},"content":"            File dir \u003d new File(\"./data\");"},{"lineNumber":37,"author":{"gitId":"pavz02"},"content":"            dir.mkdir();"},{"lineNumber":38,"author":{"gitId":"pavz02"},"content":"            File f \u003d new File(\"./data/tasks.txt\");"},{"lineNumber":39,"author":{"gitId":"pavz02"},"content":"            if (!f.createNewFile()) {"},{"lineNumber":40,"author":{"gitId":"pavz02"},"content":"                count \u003d Storage.uploadFromHardDrive();"},{"lineNumber":41,"author":{"gitId":"pavz02"},"content":"            }"},{"lineNumber":42,"author":{"gitId":"pavz02"},"content":""},{"lineNumber":43,"author":{"gitId":"pavz02"},"content":"        } catch (IOException e) {"},{"lineNumber":44,"author":{"gitId":"pavz02"},"content":"            System.out.println(\"error in making folder/file\");"},{"lineNumber":45,"author":{"gitId":"pavz02"},"content":"        }"},{"lineNumber":46,"author":{"gitId":"pavz02"},"content":"    }"},{"lineNumber":47,"author":{"gitId":"pavz02"},"content":""},{"lineNumber":48,"author":{"gitId":"pavz02"},"content":"    static String processTaskOutput(String task, String description, LocalDate date, LocalTime time, String tag) {"},{"lineNumber":49,"author":{"gitId":"pavz02"},"content":"        Task toAdd;"},{"lineNumber":50,"author":{"gitId":"pavz02"},"content":"        switch (task) {"},{"lineNumber":51,"author":{"gitId":"pavz02"},"content":"        case \"todo\":"},{"lineNumber":52,"author":{"gitId":"pavz02"},"content":"            toAdd \u003d new Todo(description);"},{"lineNumber":53,"author":{"gitId":"pavz02"},"content":"            break;"},{"lineNumber":54,"author":{"gitId":"pavz02"},"content":"        case \"deadline\":"},{"lineNumber":55,"author":{"gitId":"pavz02"},"content":"            toAdd \u003d new Deadline(description, date, time);"},{"lineNumber":56,"author":{"gitId":"pavz02"},"content":"            break;"},{"lineNumber":57,"author":{"gitId":"pavz02"},"content":"        case \"event\":"},{"lineNumber":58,"author":{"gitId":"pavz02"},"content":"            toAdd \u003d new Event(description, date, time);"},{"lineNumber":59,"author":{"gitId":"pavz02"},"content":"            break;"},{"lineNumber":60,"author":{"gitId":"pavz02"},"content":"        default:"},{"lineNumber":61,"author":{"gitId":"pavz02"},"content":"            return \"Error in Task processing.\";"},{"lineNumber":62,"author":{"gitId":"pavz02"},"content":"        }"},{"lineNumber":63,"author":{"gitId":"pavz02"},"content":""},{"lineNumber":64,"author":{"gitId":"pavz02"},"content":"        if (tag !\u003d null) {"},{"lineNumber":65,"author":{"gitId":"pavz02"},"content":"            toAdd.addTag(tag);"},{"lineNumber":66,"author":{"gitId":"pavz02"},"content":"        }"},{"lineNumber":67,"author":{"gitId":"pavz02"},"content":"        storage.add(toAdd);"},{"lineNumber":68,"author":{"gitId":"pavz02"},"content":"        count++;"},{"lineNumber":69,"author":{"gitId":"pavz02"},"content":"        return Ui.outputMessageTask(task, storage.get(count - 1));"},{"lineNumber":70,"author":{"gitId":"pavz02"},"content":"    }"},{"lineNumber":71,"author":{"gitId":"pavz02"},"content":""},{"lineNumber":72,"author":{"gitId":"pavz02"},"content":"    /**"},{"lineNumber":73,"author":{"gitId":"pavz02"},"content":"     * Process the done command by updating the Task to reflect that it has been completed."},{"lineNumber":74,"author":{"gitId":"pavz02"},"content":"     * It also prints an output message."},{"lineNumber":75,"author":{"gitId":"pavz02"},"content":"     * @param doneWithIndexNumber The index number of the Task which has been done by the user."},{"lineNumber":76,"author":{"gitId":"pavz02"},"content":"     */"},{"lineNumber":77,"author":{"gitId":"pavz02"},"content":"    static String processDoneOutput(int doneWithIndexNumber) {"},{"lineNumber":78,"author":{"gitId":"pavz02"},"content":"        Task current \u003d storage.get(doneWithIndexNumber - 1);"},{"lineNumber":79,"author":{"gitId":"pavz02"},"content":"        current.finished();"},{"lineNumber":80,"author":{"gitId":"pavz02"},"content":"        return Ui.outputMessageDone(current);"},{"lineNumber":81,"author":{"gitId":"pavz02"},"content":"    }"},{"lineNumber":82,"author":{"gitId":"pavz02"},"content":""},{"lineNumber":83,"author":{"gitId":"pavz02"},"content":"    /**"},{"lineNumber":84,"author":{"gitId":"pavz02"},"content":"     * Prints the output message for a list of all the tasks which contain the keyword."},{"lineNumber":85,"author":{"gitId":"pavz02"},"content":"     * @param description Contains the keywords that are being searched for in the array."},{"lineNumber":86,"author":{"gitId":"pavz02"},"content":"     */"},{"lineNumber":87,"author":{"gitId":"pavz02"},"content":"    static String processFindOutput(String description) {"},{"lineNumber":88,"author":{"gitId":"pavz02"},"content":"        return Ui.outputMessageFind(storage, description);"},{"lineNumber":89,"author":{"gitId":"pavz02"},"content":"    }"},{"lineNumber":90,"author":{"gitId":"pavz02"},"content":""},{"lineNumber":91,"author":{"gitId":"pavz02"},"content":"    /**"},{"lineNumber":92,"author":{"gitId":"pavz02"},"content":"     * Prints the output message for a list of all the tasks to be printed out."},{"lineNumber":93,"author":{"gitId":"pavz02"},"content":"     */"},{"lineNumber":94,"author":{"gitId":"pavz02"},"content":"    static String processListOutput() {"},{"lineNumber":95,"author":{"gitId":"pavz02"},"content":"        return Ui.outputMessageList(storage, count);"},{"lineNumber":96,"author":{"gitId":"pavz02"},"content":"    }"},{"lineNumber":97,"author":{"gitId":"pavz02"},"content":""},{"lineNumber":98,"author":{"gitId":"pavz02"},"content":"    static String processTaggedOutput(String description) {"},{"lineNumber":99,"author":{"gitId":"pavz02"},"content":"        return Ui.outputMessageTagged(storage, description);"},{"lineNumber":100,"author":{"gitId":"pavz02"},"content":"    }"},{"lineNumber":101,"author":{"gitId":"pavz02"},"content":""},{"lineNumber":102,"author":{"gitId":"pavz02"},"content":"    /**"},{"lineNumber":103,"author":{"gitId":"pavz02"},"content":"     * Deletes the n-numbered Task from the task list, where n is the number given by the user."},{"lineNumber":104,"author":{"gitId":"pavz02"},"content":"     * @param deleteThisIndexNumber The index number of the Task which the user wants to delete."},{"lineNumber":105,"author":{"gitId":"pavz02"},"content":"     */"},{"lineNumber":106,"author":{"gitId":"pavz02"},"content":"    static String processDeleteOutput(int deleteThisIndexNumber) {"},{"lineNumber":107,"author":{"gitId":"pavz02"},"content":"        Task toDelete \u003d storage.get(deleteThisIndexNumber - 1);"},{"lineNumber":108,"author":{"gitId":"pavz02"},"content":"        storage.remove(deleteThisIndexNumber - 1);"},{"lineNumber":109,"author":{"gitId":"pavz02"},"content":"        count--;"},{"lineNumber":110,"author":{"gitId":"pavz02"},"content":"        return Ui.outputMessageDelete(toDelete);"},{"lineNumber":111,"author":{"gitId":"pavz02"},"content":"    }"},{"lineNumber":112,"author":{"gitId":"pavz02"},"content":""},{"lineNumber":113,"author":{"gitId":"pavz02"},"content":"    static String processTagOutput(int index, String description) {"},{"lineNumber":114,"author":{"gitId":"pavz02"},"content":"        Task toTag \u003d storage.get(index - 1);"},{"lineNumber":115,"author":{"gitId":"pavz02"},"content":"        toTag.addTag(description);"},{"lineNumber":116,"author":{"gitId":"pavz02"},"content":"        return Ui.outputMessageTag(toTag, description);"},{"lineNumber":117,"author":{"gitId":"pavz02"},"content":"    }"},{"lineNumber":118,"author":{"gitId":"pavz02"},"content":""},{"lineNumber":119,"author":{"gitId":"pavz02"},"content":"    /**"},{"lineNumber":120,"author":{"gitId":"pavz02"},"content":"     * Stores the task list once the user wants to leave the program."},{"lineNumber":121,"author":{"gitId":"pavz02"},"content":"     * Prints an output message as well."},{"lineNumber":122,"author":{"gitId":"pavz02"},"content":"     */"},{"lineNumber":123,"author":{"gitId":"pavz02"},"content":"    static String processBye() {"},{"lineNumber":124,"author":{"gitId":"pavz02"},"content":"        Storage.uploadToHardDrive();"},{"lineNumber":125,"author":{"gitId":"pavz02"},"content":"        return Ui.outputMessageBye();"},{"lineNumber":126,"author":{"gitId":"pavz02"},"content":"    }"},{"lineNumber":127,"author":{"gitId":"pavz02"},"content":""},{"lineNumber":128,"author":{"gitId":"pavz02"},"content":"}"}],"authorContributionMap":{"pavz02":128}},{"path":"src/main/java/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"pavz02"},"content":"import java.util.ArrayList;"},{"lineNumber":2,"author":{"gitId":"pavz02"},"content":""},{"lineNumber":3,"author":{"gitId":"pavz02"},"content":"/**"},{"lineNumber":4,"author":{"gitId":"pavz02"},"content":" * Stores all the output and error messages printed by the program."},{"lineNumber":5,"author":{"gitId":"pavz02"},"content":" */"},{"lineNumber":6,"author":{"gitId":"pavz02"},"content":"public class Ui {"},{"lineNumber":7,"author":{"gitId":"pavz02"},"content":"    /** Constants that help in the formatting of the printed messages. */"},{"lineNumber":8,"author":{"gitId":"pavz02"},"content":"    private static final String LINE \u003d \"\u003c\u003c\u003e\u003e\u003c\u003c\u003e\u003e\u003c\u003c\u003e\u003e\u003c\u003c\u003e\u003e\u003c\u003c\u003e\u003e\u003c\u003c\u003e\u003e\u003c\u003c\u003e\u003e\u003c\u003c\u003e\u003e\u003c\u003c\u003e\u003e\u003c\u003c\u003e\u003e\u003c\u003c\u003e\u003e\u003c\u003c\u003e\u003e\u003c\u003c\u003e\u003e\u003c\u003c\u003e\u003e\\n\";"},{"lineNumber":9,"author":{"gitId":"pavz02"},"content":""},{"lineNumber":10,"author":{"gitId":"pavz02"},"content":"    /**"},{"lineNumber":11,"author":{"gitId":"pavz02"},"content":"     * Message to be printed when the program starts."},{"lineNumber":12,"author":{"gitId":"pavz02"},"content":"     */"},{"lineNumber":13,"author":{"gitId":"pavz02"},"content":"    public static String greet() {"},{"lineNumber":14,"author":{"gitId":"pavz02"},"content":"        return LINE + \"Heyyoo!! I am Luna :D\\n\" + \"What can I do for you today?\\n\" + LINE;"},{"lineNumber":15,"author":{"gitId":"pavz02"},"content":"    }"},{"lineNumber":16,"author":{"gitId":"pavz02"},"content":""},{"lineNumber":17,"author":{"gitId":"pavz02"},"content":"    /**"},{"lineNumber":18,"author":{"gitId":"pavz02"},"content":"     * Message to be printed if any number that has to be inputted is invalid."},{"lineNumber":19,"author":{"gitId":"pavz02"},"content":"     * @return The error message string."},{"lineNumber":20,"author":{"gitId":"pavz02"},"content":"     */"},{"lineNumber":21,"author":{"gitId":"pavz02"},"content":"    public static String invalidNumberExceptionMessage() {"},{"lineNumber":22,"author":{"gitId":"pavz02"},"content":"        return LINE + \"ERROR! D: Give a number greater than zero and smaller than the total number of tasks\\n\" + LINE;"},{"lineNumber":23,"author":{"gitId":"pavz02"},"content":"    }"},{"lineNumber":24,"author":{"gitId":"pavz02"},"content":""},{"lineNumber":25,"author":{"gitId":"pavz02"},"content":"    /**"},{"lineNumber":26,"author":{"gitId":"pavz02"},"content":"     * Message to be printed if the keyword that has been inputted is invalid."},{"lineNumber":27,"author":{"gitId":"pavz02"},"content":"     * @return The error message string."},{"lineNumber":28,"author":{"gitId":"pavz02"},"content":"     */"},{"lineNumber":29,"author":{"gitId":"pavz02"},"content":"    public static String invalidKeywordExceptionMessage() {"},{"lineNumber":30,"author":{"gitId":"pavz02"},"content":"        return LINE + \"ERROR! D: The supported keywords are: \""},{"lineNumber":31,"author":{"gitId":"pavz02"},"content":"                + \"todo, deadline, event, done, list, delete, bye, tag only.\\n\" + LINE;"},{"lineNumber":32,"author":{"gitId":"pavz02"},"content":"    }"},{"lineNumber":33,"author":{"gitId":"pavz02"},"content":""},{"lineNumber":34,"author":{"gitId":"pavz02"},"content":"    /**"},{"lineNumber":35,"author":{"gitId":"pavz02"},"content":"     * Message to be printed if the input format for a specific task is wrong."},{"lineNumber":36,"author":{"gitId":"pavz02"},"content":"     * @param task The type of task that had the wrong format."},{"lineNumber":37,"author":{"gitId":"pavz02"},"content":"     * @return The error message string."},{"lineNumber":38,"author":{"gitId":"pavz02"},"content":"     */"},{"lineNumber":39,"author":{"gitId":"pavz02"},"content":"    public static String invalidTaskFormatExceptionMessage(String task) {"},{"lineNumber":40,"author":{"gitId":"pavz02"},"content":"        return LINE + \"ERROR! D: The format for the following task is wrong: \" + task"},{"lineNumber":41,"author":{"gitId":"pavz02"},"content":"                + \"\\n\" + \"The expected format for the task is: \" + Ui.correctTaskFormat(task) + \"\\n\" + LINE;"},{"lineNumber":42,"author":{"gitId":"pavz02"},"content":"    }"},{"lineNumber":43,"author":{"gitId":"pavz02"},"content":""},{"lineNumber":44,"author":{"gitId":"pavz02"},"content":"    /**"},{"lineNumber":45,"author":{"gitId":"pavz02"},"content":"     * To return part of the common part of the error message for easy identification of response."},{"lineNumber":46,"author":{"gitId":"pavz02"},"content":"     * @return String with the first part of the invalidTaskFormatExceptionMessage() method."},{"lineNumber":47,"author":{"gitId":"pavz02"},"content":"     */"},{"lineNumber":48,"author":{"gitId":"pavz02"},"content":"    public static String invalidTaskFormatBasicExceptionMessage() {"},{"lineNumber":49,"author":{"gitId":"pavz02"},"content":"        return LINE + \"ERROR! D: The format for the following task is wrong: \";"},{"lineNumber":50,"author":{"gitId":"pavz02"},"content":"    }"},{"lineNumber":51,"author":{"gitId":"pavz02"},"content":""},{"lineNumber":52,"author":{"gitId":"pavz02"},"content":"    /**"},{"lineNumber":53,"author":{"gitId":"pavz02"},"content":"     * Prints the correct format of the given task."},{"lineNumber":54,"author":{"gitId":"pavz02"},"content":"     * @param task The task for which we want the format for."},{"lineNumber":55,"author":{"gitId":"pavz02"},"content":"     * @return A string explaining the format of the task."},{"lineNumber":56,"author":{"gitId":"pavz02"},"content":"     */"},{"lineNumber":57,"author":{"gitId":"pavz02"},"content":"    public static String correctTaskFormat(String task) {"},{"lineNumber":58,"author":{"gitId":"pavz02"},"content":"        switch(task) {"},{"lineNumber":59,"author":{"gitId":"pavz02"},"content":"        case \"todo\":"},{"lineNumber":60,"author":{"gitId":"pavz02"},"content":"            return \"todo *description of task*\";"},{"lineNumber":61,"author":{"gitId":"pavz02"},"content":"        case \"deadline\":"},{"lineNumber":62,"author":{"gitId":"pavz02"},"content":"            return \"deadline *description of task* /by *yyyy-mm-dd hh:mm*\";"},{"lineNumber":63,"author":{"gitId":"pavz02"},"content":"        case \"event\":"},{"lineNumber":64,"author":{"gitId":"pavz02"},"content":"            return \"event *description of task* /at *yyyy-mm-dd hh:mm*\";"},{"lineNumber":65,"author":{"gitId":"pavz02"},"content":"        case \"done\":"},{"lineNumber":66,"author":{"gitId":"pavz02"},"content":"            return \"done *index of task according to the list*\";"},{"lineNumber":67,"author":{"gitId":"pavz02"},"content":"        case \"list\":"},{"lineNumber":68,"author":{"gitId":"pavz02"},"content":"            return \"list\";"},{"lineNumber":69,"author":{"gitId":"pavz02"},"content":"        case \"find\":"},{"lineNumber":70,"author":{"gitId":"pavz02"},"content":"            return \"find *keywords you want to find\";"},{"lineNumber":71,"author":{"gitId":"pavz02"},"content":"        case \"delete\":"},{"lineNumber":72,"author":{"gitId":"pavz02"},"content":"            return \"delete *index of task according to the list*\";"},{"lineNumber":73,"author":{"gitId":"pavz02"},"content":"        case \"tag\":"},{"lineNumber":74,"author":{"gitId":"pavz02"},"content":"            return \"tag *index number of task according to the list* *description of the tag*\";"},{"lineNumber":75,"author":{"gitId":"pavz02"},"content":"        case \"tagged\":"},{"lineNumber":76,"author":{"gitId":"pavz02"},"content":"            return \"tagged *keywords of the tag you want to find in the tasks that have been tagged*\";"},{"lineNumber":77,"author":{"gitId":"pavz02"},"content":"        case \"bye\":"},{"lineNumber":78,"author":{"gitId":"pavz02"},"content":"            return \"bye\";"},{"lineNumber":79,"author":{"gitId":"pavz02"},"content":"        default:"},{"lineNumber":80,"author":{"gitId":"pavz02"},"content":"            return \"Impossible output. Error in code.\";"},{"lineNumber":81,"author":{"gitId":"pavz02"},"content":"        }"},{"lineNumber":82,"author":{"gitId":"pavz02"},"content":"    }"},{"lineNumber":83,"author":{"gitId":"pavz02"},"content":""},{"lineNumber":84,"author":{"gitId":"pavz02"},"content":"    /**"},{"lineNumber":85,"author":{"gitId":"pavz02"},"content":"     * Message to be printed after a Task has been added."},{"lineNumber":86,"author":{"gitId":"pavz02"},"content":"     * @param keyword The type of Task added."},{"lineNumber":87,"author":{"gitId":"pavz02"},"content":"     * @param task The actual Task object that has been created with the user input."},{"lineNumber":88,"author":{"gitId":"pavz02"},"content":"     */"},{"lineNumber":89,"author":{"gitId":"pavz02"},"content":"    public static String outputMessageTask(String keyword, Task task) {"},{"lineNumber":90,"author":{"gitId":"pavz02"},"content":"        return LINE + \"Done adding the \" + keyword + \" Task: \" + task + \"\\n\" + LINE;"},{"lineNumber":91,"author":{"gitId":"pavz02"},"content":"    }"},{"lineNumber":92,"author":{"gitId":"pavz02"},"content":""},{"lineNumber":93,"author":{"gitId":"pavz02"},"content":"    /**"},{"lineNumber":94,"author":{"gitId":"pavz02"},"content":"     * Message to be printed after a task is done."},{"lineNumber":95,"author":{"gitId":"pavz02"},"content":"     * @param task The Task object that has been created with the user input."},{"lineNumber":96,"author":{"gitId":"pavz02"},"content":"     */"},{"lineNumber":97,"author":{"gitId":"pavz02"},"content":"    public static String outputMessageDone(Task task) {"},{"lineNumber":98,"author":{"gitId":"pavz02"},"content":"        return LINE + \"Good job! Another Task completed! I have marked it as done:\\n\" + task + \"\\n\" + LINE;"},{"lineNumber":99,"author":{"gitId":"pavz02"},"content":"    }"},{"lineNumber":100,"author":{"gitId":"pavz02"},"content":""},{"lineNumber":101,"author":{"gitId":"pavz02"},"content":"    /**"},{"lineNumber":102,"author":{"gitId":"pavz02"},"content":"     * Message to be printed after a task is deleted."},{"lineNumber":103,"author":{"gitId":"pavz02"},"content":"     * @param task The task object that has been deleted according to the user input."},{"lineNumber":104,"author":{"gitId":"pavz02"},"content":"     */"},{"lineNumber":105,"author":{"gitId":"pavz02"},"content":"    public static String outputMessageDelete(Task task) {"},{"lineNumber":106,"author":{"gitId":"pavz02"},"content":"        return LINE + \"Deleted the following task: \" + task + \"\\n\" + LINE;"},{"lineNumber":107,"author":{"gitId":"pavz02"},"content":"    }"},{"lineNumber":108,"author":{"gitId":"pavz02"},"content":""},{"lineNumber":109,"author":{"gitId":"pavz02"},"content":"    /**"},{"lineNumber":110,"author":{"gitId":"pavz02"},"content":"     * Lists all the tasks that are currently stored."},{"lineNumber":111,"author":{"gitId":"pavz02"},"content":"     * @param storage Array List of tasks."},{"lineNumber":112,"author":{"gitId":"pavz02"},"content":"     * @param count Number of tasks in the Array List."},{"lineNumber":113,"author":{"gitId":"pavz02"},"content":"     */"},{"lineNumber":114,"author":{"gitId":"pavz02"},"content":"    public static String outputMessageList(ArrayList\u003cTask\u003e storage, int count) {"},{"lineNumber":115,"author":{"gitId":"pavz02"},"content":"        String output \u003d LINE;"},{"lineNumber":116,"author":{"gitId":"pavz02"},"content":"        for (int i \u003d 1; i \u003c\u003d count; i++) {"},{"lineNumber":117,"author":{"gitId":"pavz02"},"content":"            output +\u003d i + \". \" + storage.get(i - 1) + \"\\n\";"},{"lineNumber":118,"author":{"gitId":"pavz02"},"content":"        }"},{"lineNumber":119,"author":{"gitId":"pavz02"},"content":"        return output + LINE;"},{"lineNumber":120,"author":{"gitId":"pavz02"},"content":"    }"},{"lineNumber":121,"author":{"gitId":"pavz02"},"content":""},{"lineNumber":122,"author":{"gitId":"pavz02"},"content":"    /**"},{"lineNumber":123,"author":{"gitId":"pavz02"},"content":"     * Lists all the tasks with the searched for words."},{"lineNumber":124,"author":{"gitId":"pavz02"},"content":"     * @param storage Array List of tasks."},{"lineNumber":125,"author":{"gitId":"pavz02"},"content":"     * @param description The word/phrase the user wants to find in the currentlist."},{"lineNumber":126,"author":{"gitId":"pavz02"},"content":"     */"},{"lineNumber":127,"author":{"gitId":"pavz02"},"content":"    public static String outputMessageFind(ArrayList\u003cTask\u003e storage, String description) {"},{"lineNumber":128,"author":{"gitId":"pavz02"},"content":"        String output \u003d LINE;"},{"lineNumber":129,"author":{"gitId":"pavz02"},"content":"        int index \u003d 1;"},{"lineNumber":130,"author":{"gitId":"pavz02"},"content":"        for (Task task : storage) {"},{"lineNumber":131,"author":{"gitId":"pavz02"},"content":"            if (task.getDescription().contains(description)) {"},{"lineNumber":132,"author":{"gitId":"pavz02"},"content":"                output +\u003d index + \". \" + task + \"\\n\";"},{"lineNumber":133,"author":{"gitId":"pavz02"},"content":"                index++;"},{"lineNumber":134,"author":{"gitId":"pavz02"},"content":"            }"},{"lineNumber":135,"author":{"gitId":"pavz02"},"content":"        }"},{"lineNumber":136,"author":{"gitId":"pavz02"},"content":"        return output + LINE;"},{"lineNumber":137,"author":{"gitId":"pavz02"},"content":"    }"},{"lineNumber":138,"author":{"gitId":"pavz02"},"content":""},{"lineNumber":139,"author":{"gitId":"pavz02"},"content":"    /**"},{"lineNumber":140,"author":{"gitId":"pavz02"},"content":"     * Outputs all the tasks with the description in their tags, if there are tags available."},{"lineNumber":141,"author":{"gitId":"pavz02"},"content":"     * @param storage The list of tasks to search from"},{"lineNumber":142,"author":{"gitId":"pavz02"},"content":"     * @param description The keywords in the tags that are being searched for."},{"lineNumber":143,"author":{"gitId":"pavz02"},"content":"     * @return The list of all tasks with the given description in their tags."},{"lineNumber":144,"author":{"gitId":"pavz02"},"content":"     */"},{"lineNumber":145,"author":{"gitId":"pavz02"},"content":"    public static String outputMessageTagged(ArrayList\u003cTask\u003e storage, String description) {"},{"lineNumber":146,"author":{"gitId":"pavz02"},"content":"        String output \u003d LINE;"},{"lineNumber":147,"author":{"gitId":"pavz02"},"content":"        int index \u003d 1;"},{"lineNumber":148,"author":{"gitId":"pavz02"},"content":"        for (Task task : storage) {"},{"lineNumber":149,"author":{"gitId":"pavz02"},"content":"            if (task.getIsTagged() \u0026\u0026 task.getTag().contains(description)) {"},{"lineNumber":150,"author":{"gitId":"pavz02"},"content":"                output +\u003d index + \". \" + task + \"\\n\";"},{"lineNumber":151,"author":{"gitId":"pavz02"},"content":"                index++;"},{"lineNumber":152,"author":{"gitId":"pavz02"},"content":"            }"},{"lineNumber":153,"author":{"gitId":"pavz02"},"content":"        }"},{"lineNumber":154,"author":{"gitId":"pavz02"},"content":"        return output + LINE;"},{"lineNumber":155,"author":{"gitId":"pavz02"},"content":"    }"},{"lineNumber":156,"author":{"gitId":"pavz02"},"content":""},{"lineNumber":157,"author":{"gitId":"pavz02"},"content":"    public static String outputMessageTag(Task toTag, String description) {"},{"lineNumber":158,"author":{"gitId":"pavz02"},"content":"        return LINE + \"The following tag: (\" + description + \") has been added to the follwing task:\" + toTag + LINE;"},{"lineNumber":159,"author":{"gitId":"pavz02"},"content":"    }"},{"lineNumber":160,"author":{"gitId":"pavz02"},"content":""},{"lineNumber":161,"author":{"gitId":"pavz02"},"content":"    /**"},{"lineNumber":162,"author":{"gitId":"pavz02"},"content":"     * Message to be printed when the program ends."},{"lineNumber":163,"author":{"gitId":"pavz02"},"content":"     */"},{"lineNumber":164,"author":{"gitId":"pavz02"},"content":"    public static String outputMessageBye() {"},{"lineNumber":165,"author":{"gitId":"pavz02"},"content":"        return LINE + \"Byee, hope to see you again soon!\" + LINE;"},{"lineNumber":166,"author":{"gitId":"pavz02"},"content":"    }"},{"lineNumber":167,"author":{"gitId":"pavz02"},"content":"}"}],"authorContributionMap":{"pavz02":167}},{"path":"src/main/java/deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"pavz02"},"content":"import java.time.LocalDate;"},{"lineNumber":2,"author":{"gitId":"pavz02"},"content":"import java.time.LocalTime;"},{"lineNumber":3,"author":{"gitId":"pavz02"},"content":""},{"lineNumber":4,"author":{"gitId":"pavz02"},"content":"/**"},{"lineNumber":5,"author":{"gitId":"pavz02"},"content":" * Type of Task that the user can input."},{"lineNumber":6,"author":{"gitId":"pavz02"},"content":" */"},{"lineNumber":7,"author":{"gitId":"pavz02"},"content":"public class Deadline extends Task {"},{"lineNumber":8,"author":{"gitId":"pavz02"},"content":"    /**"},{"lineNumber":9,"author":{"gitId":"pavz02"},"content":"     * Constructor for Deadline objects"},{"lineNumber":10,"author":{"gitId":"pavz02"},"content":"     * @param description What the deadline is."},{"lineNumber":11,"author":{"gitId":"pavz02"},"content":"     * @param date The date by which it has to be completed."},{"lineNumber":12,"author":{"gitId":"pavz02"},"content":"     */"},{"lineNumber":13,"author":{"gitId":"pavz02"},"content":"    Deadline(String description, LocalDate date, LocalTime time) {"},{"lineNumber":14,"author":{"gitId":"pavz02"},"content":"        super(description, date, time);"},{"lineNumber":15,"author":{"gitId":"pavz02"},"content":"    }"},{"lineNumber":16,"author":{"gitId":"pavz02"},"content":""},{"lineNumber":17,"author":{"gitId":"pavz02"},"content":"    /**"},{"lineNumber":18,"author":{"gitId":"pavz02"},"content":"     * Getter which returns the identifier for the type of Task it is."},{"lineNumber":19,"author":{"gitId":"pavz02"},"content":"     * @return D for Deadline."},{"lineNumber":20,"author":{"gitId":"pavz02"},"content":"     */"},{"lineNumber":21,"author":{"gitId":"pavz02"},"content":"    @Override"},{"lineNumber":22,"author":{"gitId":"pavz02"},"content":"    public String getInitial() {"},{"lineNumber":23,"author":{"gitId":"pavz02"},"content":"        return \"D\";"},{"lineNumber":24,"author":{"gitId":"pavz02"},"content":"    }"},{"lineNumber":25,"author":{"gitId":"pavz02"},"content":""},{"lineNumber":26,"author":{"gitId":"pavz02"},"content":"    /**"},{"lineNumber":27,"author":{"gitId":"pavz02"},"content":"     * String representation of a Deadline object."},{"lineNumber":28,"author":{"gitId":"pavz02"},"content":"     * @return String with the description and date of the deadline."},{"lineNumber":29,"author":{"gitId":"pavz02"},"content":"     */"},{"lineNumber":30,"author":{"gitId":"pavz02"},"content":"    @Override"},{"lineNumber":31,"author":{"gitId":"pavz02"},"content":"    public String toString() {"},{"lineNumber":32,"author":{"gitId":"pavz02"},"content":"        String formattedDate \u003d dateFormat.format(date);"},{"lineNumber":33,"author":{"gitId":"pavz02"},"content":"        String formattedTime \u003d timeFormat.format(time);"},{"lineNumber":34,"author":{"gitId":"pavz02"},"content":"        return super.toString() + \" (By: \" + formattedDate + \" by \" + formattedTime + \")\";"},{"lineNumber":35,"author":{"gitId":"pavz02"},"content":"    }"},{"lineNumber":36,"author":{"gitId":"pavz02"},"content":"}"}],"authorContributionMap":{"pavz02":36}},{"path":"src/main/java/event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"pavz02"},"content":"import java.time.LocalDate;"},{"lineNumber":2,"author":{"gitId":"pavz02"},"content":"import java.time.LocalTime;"},{"lineNumber":3,"author":{"gitId":"pavz02"},"content":""},{"lineNumber":4,"author":{"gitId":"pavz02"},"content":"/**"},{"lineNumber":5,"author":{"gitId":"pavz02"},"content":" * Type of Task that the user can input."},{"lineNumber":6,"author":{"gitId":"pavz02"},"content":" */"},{"lineNumber":7,"author":{"gitId":"pavz02"},"content":"public class Event extends Task {"},{"lineNumber":8,"author":{"gitId":"pavz02"},"content":""},{"lineNumber":9,"author":{"gitId":"pavz02"},"content":"    /**"},{"lineNumber":10,"author":{"gitId":"pavz02"},"content":"     * Constructor for Event objects."},{"lineNumber":11,"author":{"gitId":"pavz02"},"content":"     * @param description What the event is."},{"lineNumber":12,"author":{"gitId":"pavz02"},"content":"     * @param date The date by which it has to be completed."},{"lineNumber":13,"author":{"gitId":"pavz02"},"content":"     */"},{"lineNumber":14,"author":{"gitId":"pavz02"},"content":"    Event(String description, LocalDate date, LocalTime time) {"},{"lineNumber":15,"author":{"gitId":"pavz02"},"content":"        super(description, date, time);"},{"lineNumber":16,"author":{"gitId":"pavz02"},"content":"    }"},{"lineNumber":17,"author":{"gitId":"pavz02"},"content":""},{"lineNumber":18,"author":{"gitId":"pavz02"},"content":"    /**"},{"lineNumber":19,"author":{"gitId":"pavz02"},"content":"     * Getter which returns the identifier for the type of Task it is."},{"lineNumber":20,"author":{"gitId":"pavz02"},"content":"     * @return E for Event."},{"lineNumber":21,"author":{"gitId":"pavz02"},"content":"     */"},{"lineNumber":22,"author":{"gitId":"pavz02"},"content":"    @Override"},{"lineNumber":23,"author":{"gitId":"pavz02"},"content":"    public String getInitial() {"},{"lineNumber":24,"author":{"gitId":"pavz02"},"content":"        return \"E\";"},{"lineNumber":25,"author":{"gitId":"pavz02"},"content":"    }"},{"lineNumber":26,"author":{"gitId":"pavz02"},"content":""},{"lineNumber":27,"author":{"gitId":"pavz02"},"content":"    /**"},{"lineNumber":28,"author":{"gitId":"pavz02"},"content":"     * String representation of an Event object."},{"lineNumber":29,"author":{"gitId":"pavz02"},"content":"     * @return String with the description and date of the deadline."},{"lineNumber":30,"author":{"gitId":"pavz02"},"content":"     */"},{"lineNumber":31,"author":{"gitId":"pavz02"},"content":"    @Override"},{"lineNumber":32,"author":{"gitId":"pavz02"},"content":"    public String toString() {"},{"lineNumber":33,"author":{"gitId":"pavz02"},"content":"        String formattedDate \u003d dateFormat.format(date);"},{"lineNumber":34,"author":{"gitId":"pavz02"},"content":"        String formattedTime \u003d timeFormat.format(time);"},{"lineNumber":35,"author":{"gitId":"pavz02"},"content":"        return super.toString() + \" (at: \" + formattedDate + \" at \" + formattedTime + \")\";"},{"lineNumber":36,"author":{"gitId":"pavz02"},"content":"    }"},{"lineNumber":37,"author":{"gitId":"pavz02"},"content":"}"}],"authorContributionMap":{"pavz02":37}},{"path":"src/main/java/todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"pavz02"},"content":"/**"},{"lineNumber":2,"author":{"gitId":"pavz02"},"content":" * Type of task that the user can input."},{"lineNumber":3,"author":{"gitId":"pavz02"},"content":" */"},{"lineNumber":4,"author":{"gitId":"pavz02"},"content":"public class Todo extends Task {"},{"lineNumber":5,"author":{"gitId":"pavz02"},"content":""},{"lineNumber":6,"author":{"gitId":"pavz02"},"content":"    /**"},{"lineNumber":7,"author":{"gitId":"pavz02"},"content":"     * Constructor for Todo objects."},{"lineNumber":8,"author":{"gitId":"pavz02"},"content":"     * @param description Describes what is to be done."},{"lineNumber":9,"author":{"gitId":"pavz02"},"content":"     */"},{"lineNumber":10,"author":{"gitId":"pavz02"},"content":"    Todo(String description) {"},{"lineNumber":11,"author":{"gitId":"pavz02"},"content":"        super(description, null, null);"},{"lineNumber":12,"author":{"gitId":"pavz02"},"content":"    }"},{"lineNumber":13,"author":{"gitId":"pavz02"},"content":""},{"lineNumber":14,"author":{"gitId":"pavz02"},"content":"    /**"},{"lineNumber":15,"author":{"gitId":"pavz02"},"content":"     * Getter which returns an identifier for the type of task it is."},{"lineNumber":16,"author":{"gitId":"pavz02"},"content":"     * @return T for Todo."},{"lineNumber":17,"author":{"gitId":"pavz02"},"content":"     */"},{"lineNumber":18,"author":{"gitId":"pavz02"},"content":"    @Override"},{"lineNumber":19,"author":{"gitId":"pavz02"},"content":"    public String getInitial() {"},{"lineNumber":20,"author":{"gitId":"pavz02"},"content":"        return \"T\";"},{"lineNumber":21,"author":{"gitId":"pavz02"},"content":"    }"},{"lineNumber":22,"author":{"gitId":"pavz02"},"content":"}"}],"authorContributionMap":{"pavz02":22}},{"path":"src/test/java/DukeTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"pavz02"},"content":"import org.junit.jupiter.api.Test;"},{"lineNumber":2,"author":{"gitId":"pavz02"},"content":""},{"lineNumber":3,"author":{"gitId":"pavz02"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;"},{"lineNumber":4,"author":{"gitId":"pavz02"},"content":""},{"lineNumber":5,"author":{"gitId":"pavz02"},"content":"public class DukeTest {"},{"lineNumber":6,"author":{"gitId":"pavz02"},"content":"    @Test"},{"lineNumber":7,"author":{"gitId":"pavz02"},"content":"    public void dummyTest() {"},{"lineNumber":8,"author":{"gitId":"pavz02"},"content":"        assertEquals(2, 2);"},{"lineNumber":9,"author":{"gitId":"pavz02"},"content":"    }"},{"lineNumber":10,"author":{"gitId":"pavz02"},"content":""},{"lineNumber":11,"author":{"gitId":"pavz02"},"content":"}"}],"authorContributionMap":{"pavz02":11}},{"path":"src/test/java/UiTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"pavz02"},"content":"import org.junit.jupiter.api.Test;"},{"lineNumber":2,"author":{"gitId":"pavz02"},"content":""},{"lineNumber":3,"author":{"gitId":"pavz02"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;"},{"lineNumber":4,"author":{"gitId":"pavz02"},"content":""},{"lineNumber":5,"author":{"gitId":"pavz02"},"content":"public class UiTest {"},{"lineNumber":6,"author":{"gitId":"pavz02"},"content":"    private static final String SPACE \u003d \"     \";"},{"lineNumber":7,"author":{"gitId":"pavz02"},"content":"    private static final String LINE \u003d \"\\n     \u003c\u003c\u003e\u003e\u003c\u003c\u003e\u003e\u003c\u003c\u003e\u003e\u003c\u003c\u003e\u003e\u003c\u003c\u003e\u003e\u003c\u003c\u003e\u003e\u003c\u003c\u003e\u003e\u003c\u003c\u003e\u003e\u003c\u003c\u003e\u003e\u003c\u003c\u003e\u003e\u003c\u003c\u003e\u003e\u003c\u003c\u003e\u003e\u003c\u003c\u003e\u003e\u003c\u003c\u003e\u003e\u003c\u003c\u003e\u003e\u003c\u003c\u003e\u003e\u003c\u003c\u003e\u003e\u003c\u003c\u003e\u003e\u003c\u003c\u003e\u003e\u003c\u003c\u003e\u003e\u003c\u003c\u003e\u003e\u003c\u003c\u003e\u003e\u003c\u003c\u003e\u003e\u003c\u003c\u003e\u003e\u003c\u003c\u003e\u003e\u003c\u003c\u003e\u003e\\n\";"},{"lineNumber":8,"author":{"gitId":"pavz02"},"content":""},{"lineNumber":9,"author":{"gitId":"pavz02"},"content":"    @Test"},{"lineNumber":10,"author":{"gitId":"pavz02"},"content":"    public void CorrectTaskFormat_TypesOfTasks_FormatOfTask() {"},{"lineNumber":11,"author":{"gitId":"pavz02"},"content":"        assertEquals(\"todo *description of task*\", Ui.correctTaskFormat(\"todo\"));"},{"lineNumber":12,"author":{"gitId":"pavz02"},"content":"    }"},{"lineNumber":13,"author":{"gitId":"pavz02"},"content":""},{"lineNumber":14,"author":{"gitId":"pavz02"},"content":"    @Test"},{"lineNumber":15,"author":{"gitId":"pavz02"},"content":"    public void InvalidNumberExceptionMessage_CorrectMessageOutput() {"},{"lineNumber":16,"author":{"gitId":"pavz02"},"content":"        assertEquals(LINE + SPACE + \"ERROR! D: Please give a number greater than zero and smaller than the total number of tasks\" + LINE,"},{"lineNumber":17,"author":{"gitId":"pavz02"},"content":"                Ui.invalidNumberExceptionMessage());"},{"lineNumber":18,"author":{"gitId":"pavz02"},"content":"    }"},{"lineNumber":19,"author":{"gitId":"pavz02"},"content":""},{"lineNumber":20,"author":{"gitId":"pavz02"},"content":"    @Test"},{"lineNumber":21,"author":{"gitId":"pavz02"},"content":"    public void InvalidKeywordExceptionMessage_CorrectMessageOutput() {"},{"lineNumber":22,"author":{"gitId":"pavz02"},"content":"        assertEquals(LINE + SPACE + \"The supported keywords are: todo, deadline, event, done, list, delete, bye only.\" + LINE,"},{"lineNumber":23,"author":{"gitId":"pavz02"},"content":"                Ui.invalidKeywordExceptionMessage());"},{"lineNumber":24,"author":{"gitId":"pavz02"},"content":"    }"},{"lineNumber":25,"author":{"gitId":"pavz02"},"content":""},{"lineNumber":26,"author":{"gitId":"pavz02"},"content":"}"}],"authorContributionMap":{"pavz02":26}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"pavz02"},"content":"todo a"},{"lineNumber":2,"author":{"gitId":"pavz02"},"content":"todo b"},{"lineNumber":3,"author":{"gitId":"pavz02"},"content":"deadline c /by 1"},{"lineNumber":4,"author":{"gitId":"pavz02"},"content":"list"},{"lineNumber":5,"author":{"gitId":"pavz02"},"content":"deadline d /by 2"},{"lineNumber":6,"author":{"gitId":"pavz02"},"content":"done 1"},{"lineNumber":7,"author":{"gitId":"pavz02"},"content":"done 2"},{"lineNumber":8,"author":{"gitId":"pavz02"},"content":"event e /at 3"},{"lineNumber":9,"author":{"gitId":"pavz02"},"content":"event f /at 4"},{"lineNumber":10,"author":{"gitId":"pavz02"},"content":"list"},{"lineNumber":11,"author":{"gitId":"pavz02"},"content":"delete 2"},{"lineNumber":12,"author":{"gitId":"pavz02"},"content":"delete 4"},{"lineNumber":13,"author":{"gitId":"pavz02"},"content":"bye"}],"authorContributionMap":{"pavz02":13}}]
