[{"path":"PreviousTaskList.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"Sidney011100"},"content":"class Todo, false,  ice cream"},{"lineNumber":2,"author":{"gitId":"Sidney011100"},"content":"class Deadline, false, 2105 , 2021-02-14T23:59"},{"lineNumber":3,"author":{"gitId":"Sidney011100"},"content":"class Event, false, mary\u0027s wedding , 2021-02-14T18:00"}],"authorContributionMap":{"Sidney011100":3}},{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027checkstyle\u0027"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027"},{"lineNumber":6,"author":{"gitId":"-"},"content":"}"},{"lineNumber":7,"author":{"gitId":"-"},"content":""},{"lineNumber":8,"author":{"gitId":"-"},"content":"repositories {"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    mavenCentral()"},{"lineNumber":10,"author":{"gitId":"-"},"content":"}"},{"lineNumber":11,"author":{"gitId":"-"},"content":""},{"lineNumber":12,"author":{"gitId":"-"},"content":"dependencies {"},{"lineNumber":13,"author":{"gitId":"Sidney011100"},"content":"    String javaFxVersion \u003d \u002711\u0027"},{"lineNumber":14,"author":{"gitId":"Sidney011100"},"content":""},{"lineNumber":15,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.5.0\u0027"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.5.0\u0027"},{"lineNumber":17,"author":{"gitId":"Sidney011100"},"content":""},{"lineNumber":18,"author":{"gitId":"Sidney011100"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027"},{"lineNumber":19,"author":{"gitId":"Sidney011100"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"},{"lineNumber":20,"author":{"gitId":"Sidney011100"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"},{"lineNumber":21,"author":{"gitId":"Sidney011100"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027"},{"lineNumber":22,"author":{"gitId":"Sidney011100"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"},{"lineNumber":23,"author":{"gitId":"Sidney011100"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"},{"lineNumber":24,"author":{"gitId":"Sidney011100"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027"},{"lineNumber":25,"author":{"gitId":"Sidney011100"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"},{"lineNumber":26,"author":{"gitId":"Sidney011100"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"},{"lineNumber":27,"author":{"gitId":"Sidney011100"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027"},{"lineNumber":28,"author":{"gitId":"Sidney011100"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"},{"lineNumber":29,"author":{"gitId":"Sidney011100"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"},{"lineNumber":30,"author":{"gitId":"Sidney011100"},"content":""},{"lineNumber":31,"author":{"gitId":"-"},"content":"}"},{"lineNumber":32,"author":{"gitId":"-"},"content":""},{"lineNumber":33,"author":{"gitId":"-"},"content":"test {"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    useJUnitPlatform()"},{"lineNumber":35,"author":{"gitId":"-"},"content":""},{"lineNumber":36,"author":{"gitId":"-"},"content":"    testLogging {"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\""},{"lineNumber":38,"author":{"gitId":"-"},"content":""},{"lineNumber":39,"author":{"gitId":"-"},"content":"        showExceptions true"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\""},{"lineNumber":41,"author":{"gitId":"-"},"content":"        showCauses true"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        showStackTraces true"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":45,"author":{"gitId":"-"},"content":"}"},{"lineNumber":46,"author":{"gitId":"-"},"content":""},{"lineNumber":47,"author":{"gitId":"-"},"content":"application {"},{"lineNumber":48,"author":{"gitId":"Sidney011100"},"content":"    mainClassName \u003d \"Launcher\""},{"lineNumber":49,"author":{"gitId":"-"},"content":"}"},{"lineNumber":50,"author":{"gitId":"-"},"content":""},{"lineNumber":51,"author":{"gitId":"-"},"content":"shadowJar {"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    archiveBaseName \u003d \"duke\""},{"lineNumber":53,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null"},{"lineNumber":54,"author":{"gitId":"-"},"content":"}"},{"lineNumber":55,"author":{"gitId":"-"},"content":""},{"lineNumber":56,"author":{"gitId":"-"},"content":"checkstyle {"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    toolVersion \u003d \u00278.29\u0027"},{"lineNumber":58,"author":{"gitId":"-"},"content":"}"},{"lineNumber":59,"author":{"gitId":"-"},"content":""},{"lineNumber":60,"author":{"gitId":"-"},"content":"run{"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in"},{"lineNumber":62,"author":{"gitId":"-"},"content":"}"}],"authorContributionMap":{"Sidney011100":17,"-":45}},{"path":"data/duke.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"Sidney011100"},"content":"class Todo, false,  eat"}],"authorContributionMap":{"Sidney011100":1}},{"path":"docs/README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"# User Guide"},{"lineNumber":2,"author":{"gitId":"-"},"content":""},{"lineNumber":3,"author":{"gitId":"-"},"content":"## Features "},{"lineNumber":4,"author":{"gitId":"-"},"content":""},{"lineNumber":5,"author":{"gitId":"Sidney011100"},"content":"#### Add a task to do"},{"lineNumber":6,"author":{"gitId":"Sidney011100"},"content":""},{"lineNumber":7,"author":{"gitId":"Sidney011100"},"content":"#### Add an event to attend"},{"lineNumber":8,"author":{"gitId":"Sidney011100"},"content":""},{"lineNumber":9,"author":{"gitId":"Sidney011100"},"content":"#### Add a task with a deadline"},{"lineNumber":10,"author":{"gitId":"Sidney011100"},"content":""},{"lineNumber":11,"author":{"gitId":"Sidney011100"},"content":"#### Save planner"},{"lineNumber":12,"author":{"gitId":"Sidney011100"},"content":""},{"lineNumber":13,"author":{"gitId":"Sidney011100"},"content":"#### Mark tasks as completed"},{"lineNumber":14,"author":{"gitId":"Sidney011100"},"content":""},{"lineNumber":15,"author":{"gitId":"Sidney011100"},"content":"#### Delete tasks"},{"lineNumber":16,"author":{"gitId":"-"},"content":""},{"lineNumber":17,"author":{"gitId":"-"},"content":"## Usage"},{"lineNumber":18,"author":{"gitId":"-"},"content":""},{"lineNumber":19,"author":{"gitId":"Sidney011100"},"content":"### `todo` - adds a todo task "},{"lineNumber":20,"author":{"gitId":"Sidney011100"},"content":""},{"lineNumber":21,"author":{"gitId":"Sidney011100"},"content":"Adds a task to the list. "},{"lineNumber":22,"author":{"gitId":"Sidney011100"},"content":""},{"lineNumber":23,"author":{"gitId":"Sidney011100"},"content":"Example: `todo sleep`"},{"lineNumber":24,"author":{"gitId":"Sidney011100"},"content":""},{"lineNumber":25,"author":{"gitId":"Sidney011100"},"content":"Expected outcome:"},{"lineNumber":26,"author":{"gitId":"Sidney011100"},"content":""},{"lineNumber":27,"author":{"gitId":"Sidney011100"},"content":"`Got it. I\u0027ve added this task:`"},{"lineNumber":28,"author":{"gitId":"Sidney011100"},"content":""},{"lineNumber":29,"author":{"gitId":"Sidney011100"},"content":"`       [T][ ] sleep`"},{"lineNumber":30,"author":{"gitId":"Sidney011100"},"content":""},{"lineNumber":31,"author":{"gitId":"Sidney011100"},"content":"`   now you have 1 task in the list.`"},{"lineNumber":32,"author":{"gitId":"Sidney011100"},"content":"________"},{"lineNumber":33,"author":{"gitId":"Sidney011100"},"content":"### `event` adds a event task `/at` adds date and time "},{"lineNumber":34,"author":{"gitId":"Sidney011100"},"content":""},{"lineNumber":35,"author":{"gitId":"Sidney011100"},"content":"Adds an event with date and time to the list"},{"lineNumber":36,"author":{"gitId":"Sidney011100"},"content":""},{"lineNumber":37,"author":{"gitId":"Sidney011100"},"content":"Example: `event mary\u0027s wedding /at 14/02/2021 1800`"},{"lineNumber":38,"author":{"gitId":"Sidney011100"},"content":""},{"lineNumber":39,"author":{"gitId":"Sidney011100"},"content":"Expected outcome:"},{"lineNumber":40,"author":{"gitId":"Sidney011100"},"content":""},{"lineNumber":41,"author":{"gitId":"Sidney011100"},"content":"`Got it. I\u0027ve added this task:`"},{"lineNumber":42,"author":{"gitId":"Sidney011100"},"content":""},{"lineNumber":43,"author":{"gitId":"Sidney011100"},"content":"`       [E][ ] mary\u0027s wedding (at: 14 Feb 2021 06:00pm`"},{"lineNumber":44,"author":{"gitId":"Sidney011100"},"content":""},{"lineNumber":45,"author":{"gitId":"Sidney011100"},"content":"`   now you have 2 task in the list.`"},{"lineNumber":46,"author":{"gitId":"Sidney011100"},"content":"________"},{"lineNumber":47,"author":{"gitId":"Sidney011100"},"content":"### `deadline` adds a deadline task `/by` adds date and time"},{"lineNumber":48,"author":{"gitId":"Sidney011100"},"content":""},{"lineNumber":49,"author":{"gitId":"Sidney011100"},"content":"Adds a deadline with date and time to the list"},{"lineNumber":50,"author":{"gitId":"Sidney011100"},"content":""},{"lineNumber":51,"author":{"gitId":"Sidney011100"},"content":"Example: `event cs2105 assignment 1 /by 24/02/2021 2359`"},{"lineNumber":52,"author":{"gitId":"-"},"content":""},{"lineNumber":53,"author":{"gitId":"Sidney011100"},"content":"Expected outcome:"},{"lineNumber":54,"author":{"gitId":"Sidney011100"},"content":""},{"lineNumber":55,"author":{"gitId":"Sidney011100"},"content":"`Got it. I\u0027ve added this task:`"},{"lineNumber":56,"author":{"gitId":"Sidney011100"},"content":""},{"lineNumber":57,"author":{"gitId":"Sidney011100"},"content":"`       [D][ ] cs2105 assignment 1 (at: 14 Feb 2021 11:59pm)`"},{"lineNumber":58,"author":{"gitId":"-"},"content":""},{"lineNumber":59,"author":{"gitId":"Sidney011100"},"content":"`   now you have 3 task in the list.`"},{"lineNumber":60,"author":{"gitId":"Sidney011100"},"content":"________"},{"lineNumber":61,"author":{"gitId":"Sidney011100"},"content":"### `delete` deletes a task at `index` "},{"lineNumber":62,"author":{"gitId":"-"},"content":""},{"lineNumber":63,"author":{"gitId":"Sidney011100"},"content":"Deletes a task at index given"},{"lineNumber":64,"author":{"gitId":"Sidney011100"},"content":""},{"lineNumber":65,"author":{"gitId":"Sidney011100"},"content":"Example:"},{"lineNumber":66,"author":{"gitId":"Sidney011100"},"content":"`delete 3`"},{"lineNumber":67,"author":{"gitId":"-"},"content":""},{"lineNumber":68,"author":{"gitId":"-"},"content":"Expected outcome:"},{"lineNumber":69,"author":{"gitId":"-"},"content":""},{"lineNumber":70,"author":{"gitId":"Sidney011100"},"content":"`Got it. I\u0027ve removed this task:`"},{"lineNumber":71,"author":{"gitId":"Sidney011100"},"content":""},{"lineNumber":72,"author":{"gitId":"Sidney011100"},"content":"`       [D][ ] cs2105 assignment 1 (at: 14 Feb 2021 11:59pm)`"},{"lineNumber":73,"author":{"gitId":"Sidney011100"},"content":""},{"lineNumber":74,"author":{"gitId":"Sidney011100"},"content":"`   now you have 2 task in the list.`"},{"lineNumber":75,"author":{"gitId":"Sidney011100"},"content":"________"},{"lineNumber":76,"author":{"gitId":"Sidney011100"},"content":"### `list` -list all current tasks"},{"lineNumber":77,"author":{"gitId":"Sidney011100"},"content":""},{"lineNumber":78,"author":{"gitId":"Sidney011100"},"content":"Example: `list`"},{"lineNumber":79,"author":{"gitId":"Sidney011100"},"content":""},{"lineNumber":80,"author":{"gitId":"Sidney011100"},"content":"Expected outcome:"},{"lineNumber":81,"author":{"gitId":"Sidney011100"},"content":""},{"lineNumber":82,"author":{"gitId":"Sidney011100"},"content":"`Got it. I\u0027ve removed this task:`"},{"lineNumber":83,"author":{"gitId":"Sidney011100"},"content":""},{"lineNumber":84,"author":{"gitId":"Sidney011100"},"content":"`       [T][ ] sleep`"},{"lineNumber":85,"author":{"gitId":"Sidney011100"},"content":""},{"lineNumber":86,"author":{"gitId":"Sidney011100"},"content":"`       [E][ ] mary\u0027s wedding (at: 14 Feb 2021 06:00pm`"},{"lineNumber":87,"author":{"gitId":"Sidney011100"},"content":""},{"lineNumber":88,"author":{"gitId":"Sidney011100"},"content":"`   now you have 2 task in the list.`"},{"lineNumber":89,"author":{"gitId":"Sidney011100"},"content":"________"},{"lineNumber":90,"author":{"gitId":"Sidney011100"},"content":"### `done` mark complete task at `index`"},{"lineNumber":91,"author":{"gitId":"Sidney011100"},"content":""},{"lineNumber":92,"author":{"gitId":"Sidney011100"},"content":"Example: `list`"},{"lineNumber":93,"author":{"gitId":"Sidney011100"},"content":""},{"lineNumber":94,"author":{"gitId":"Sidney011100"},"content":"Expected outcome:"},{"lineNumber":95,"author":{"gitId":"Sidney011100"},"content":""},{"lineNumber":96,"author":{"gitId":"Sidney011100"},"content":"`Bye! Hope to see you `"},{"lineNumber":97,"author":{"gitId":"Sidney011100"},"content":"________"},{"lineNumber":98,"author":{"gitId":"Sidney011100"},"content":"### `bye` - saves all tasks in the list"},{"lineNumber":99,"author":{"gitId":"Sidney011100"},"content":""},{"lineNumber":100,"author":{"gitId":"Sidney011100"},"content":"Expected outcome:"},{"lineNumber":101,"author":{"gitId":"Sidney011100"},"content":""},{"lineNumber":102,"author":{"gitId":"Sidney011100"},"content":"`Bye! Hope to see you `"},{"lineNumber":103,"author":{"gitId":"Sidney011100"},"content":""},{"lineNumber":104,"author":{"gitId":"Sidney011100"},"content":"![User interface](Ui.png)"}],"authorContributionMap":{"Sidney011100":91,"-":13}},{"path":"src/main/java/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Sidney011100"},"content":"import java.sql.Timestamp;"},{"lineNumber":2,"author":{"gitId":"Sidney011100"},"content":"import java.text.SimpleDateFormat;"},{"lineNumber":3,"author":{"gitId":"Sidney011100"},"content":"import java.time.LocalDateTime;"},{"lineNumber":4,"author":{"gitId":"Sidney011100"},"content":""},{"lineNumber":5,"author":{"gitId":"Sidney011100"},"content":"class Deadline extends Task {"},{"lineNumber":6,"author":{"gitId":"Sidney011100"},"content":"    private LocalDateTime date;"},{"lineNumber":7,"author":{"gitId":"Sidney011100"},"content":""},{"lineNumber":8,"author":{"gitId":"Sidney011100"},"content":"    Deadline(String t, LocalDateTime due) {"},{"lineNumber":9,"author":{"gitId":"Sidney011100"},"content":"        super(t);"},{"lineNumber":10,"author":{"gitId":"Sidney011100"},"content":"        this.date \u003d due;"},{"lineNumber":11,"author":{"gitId":"Sidney011100"},"content":"    }"},{"lineNumber":12,"author":{"gitId":"Sidney011100"},"content":""},{"lineNumber":13,"author":{"gitId":"Sidney011100"},"content":"    Deadline(String task, Boolean isCompleted, LocalDateTime dueDate) {"},{"lineNumber":14,"author":{"gitId":"Sidney011100"},"content":"        super(task, isCompleted);"},{"lineNumber":15,"author":{"gitId":"Sidney011100"},"content":"        this.date \u003d dueDate;"},{"lineNumber":16,"author":{"gitId":"Sidney011100"},"content":"    }"},{"lineNumber":17,"author":{"gitId":"Sidney011100"},"content":""},{"lineNumber":18,"author":{"gitId":"Sidney011100"},"content":"    /**"},{"lineNumber":19,"author":{"gitId":"Sidney011100"},"content":"     * returns a Deadline if the line stored in Storage of a Task is of type Deadline"},{"lineNumber":20,"author":{"gitId":"Sidney011100"},"content":"     * @param input"},{"lineNumber":21,"author":{"gitId":"Sidney011100"},"content":"     * @return Deadline created with reading from Storage file"},{"lineNumber":22,"author":{"gitId":"Sidney011100"},"content":"     */"},{"lineNumber":23,"author":{"gitId":"Sidney011100"},"content":"    public static Deadline readTaskFromStorage(String input) {"},{"lineNumber":24,"author":{"gitId":"Sidney011100"},"content":"        String[] list \u003d input.split(\", \", 4);"},{"lineNumber":25,"author":{"gitId":"Sidney011100"},"content":"        assert list.length \u003d\u003d 4 : \"Todo was stored from previous user visit is corrupted.\";"},{"lineNumber":26,"author":{"gitId":"Sidney011100"},"content":"        return new Deadline(list[2], Boolean.parseBoolean(list[1]), LocalDateTime.parse(list[3]));"},{"lineNumber":27,"author":{"gitId":"Sidney011100"},"content":"    }"},{"lineNumber":28,"author":{"gitId":"Sidney011100"},"content":""},{"lineNumber":29,"author":{"gitId":"Sidney011100"},"content":"    /**"},{"lineNumber":30,"author":{"gitId":"Sidney011100"},"content":"     * Gives a format of saving a Deadline into storage"},{"lineNumber":31,"author":{"gitId":"Sidney011100"},"content":"     *"},{"lineNumber":32,"author":{"gitId":"Sidney011100"},"content":"     * @return String formatted to save a Deadline into storage"},{"lineNumber":33,"author":{"gitId":"Sidney011100"},"content":"     */"},{"lineNumber":34,"author":{"gitId":"Sidney011100"},"content":"    public String saveInStorageAs() {"},{"lineNumber":35,"author":{"gitId":"Sidney011100"},"content":"        return super.saveInStorageAs() + \", \" + this.date;"},{"lineNumber":36,"author":{"gitId":"Sidney011100"},"content":"    }"},{"lineNumber":37,"author":{"gitId":"Sidney011100"},"content":""},{"lineNumber":38,"author":{"gitId":"Sidney011100"},"content":"    @Override"},{"lineNumber":39,"author":{"gitId":"Sidney011100"},"content":"    public String toString() {"},{"lineNumber":40,"author":{"gitId":"Sidney011100"},"content":"        SimpleDateFormat dateFormatter \u003d new SimpleDateFormat(\"MMM dd YYYY hh:mm a\");"},{"lineNumber":41,"author":{"gitId":"Sidney011100"},"content":"        return \"[D]\" + this.completedBox() + this.getTask()"},{"lineNumber":42,"author":{"gitId":"Sidney011100"},"content":"                + \"(by: \" + dateFormatter.format(Timestamp.valueOf(this.date)) + \")\";"},{"lineNumber":43,"author":{"gitId":"Sidney011100"},"content":"    }"},{"lineNumber":44,"author":{"gitId":"Sidney011100"},"content":""},{"lineNumber":45,"author":{"gitId":"Sidney011100"},"content":"}"}],"authorContributionMap":{"Sidney011100":45}},{"path":"src/main/java/DialogBox.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Sidney011100"},"content":"import java.io.IOException;"},{"lineNumber":2,"author":{"gitId":"Sidney011100"},"content":"import java.util.Collections;"},{"lineNumber":3,"author":{"gitId":"Sidney011100"},"content":""},{"lineNumber":4,"author":{"gitId":"Sidney011100"},"content":"import javafx.collections.FXCollections;"},{"lineNumber":5,"author":{"gitId":"Sidney011100"},"content":"import javafx.collections.ObservableList;"},{"lineNumber":6,"author":{"gitId":"Sidney011100"},"content":"import javafx.fxml.FXML;"},{"lineNumber":7,"author":{"gitId":"Sidney011100"},"content":"import javafx.fxml.FXMLLoader;"},{"lineNumber":8,"author":{"gitId":"Sidney011100"},"content":"import javafx.geometry.Insets;"},{"lineNumber":9,"author":{"gitId":"Sidney011100"},"content":"import javafx.geometry.Pos;"},{"lineNumber":10,"author":{"gitId":"Sidney011100"},"content":"import javafx.scene.Node;"},{"lineNumber":11,"author":{"gitId":"Sidney011100"},"content":"import javafx.scene.control.Label;"},{"lineNumber":12,"author":{"gitId":"Sidney011100"},"content":"import javafx.scene.image.Image;"},{"lineNumber":13,"author":{"gitId":"Sidney011100"},"content":"import javafx.scene.image.ImageView;"},{"lineNumber":14,"author":{"gitId":"Sidney011100"},"content":"import javafx.scene.layout.Background;"},{"lineNumber":15,"author":{"gitId":"Sidney011100"},"content":"import javafx.scene.layout.BackgroundFill;"},{"lineNumber":16,"author":{"gitId":"Sidney011100"},"content":"import javafx.scene.layout.CornerRadii;"},{"lineNumber":17,"author":{"gitId":"Sidney011100"},"content":"import javafx.scene.layout.HBox;"},{"lineNumber":18,"author":{"gitId":"Sidney011100"},"content":"import javafx.scene.paint.Color;"},{"lineNumber":19,"author":{"gitId":"Sidney011100"},"content":""},{"lineNumber":20,"author":{"gitId":"Sidney011100"},"content":""},{"lineNumber":21,"author":{"gitId":"Sidney011100"},"content":"public class DialogBox extends HBox {"},{"lineNumber":22,"author":{"gitId":"Sidney011100"},"content":""},{"lineNumber":23,"author":{"gitId":"Sidney011100"},"content":"    private Label text;"},{"lineNumber":24,"author":{"gitId":"Sidney011100"},"content":""},{"lineNumber":25,"author":{"gitId":"Sidney011100"},"content":"    @FXML"},{"lineNumber":26,"author":{"gitId":"Sidney011100"},"content":"    private Label dialog;"},{"lineNumber":27,"author":{"gitId":"Sidney011100"},"content":"    @FXML"},{"lineNumber":28,"author":{"gitId":"Sidney011100"},"content":"    private ImageView displayPicture;"},{"lineNumber":29,"author":{"gitId":"Sidney011100"},"content":""},{"lineNumber":30,"author":{"gitId":"Sidney011100"},"content":"    private DialogBox(String text, Image img) {"},{"lineNumber":31,"author":{"gitId":"Sidney011100"},"content":"        try {"},{"lineNumber":32,"author":{"gitId":"Sidney011100"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(\"/view/DialogBox.fxml\"));"},{"lineNumber":33,"author":{"gitId":"Sidney011100"},"content":"            fxmlLoader.setController(this);"},{"lineNumber":34,"author":{"gitId":"Sidney011100"},"content":"            fxmlLoader.setRoot(this);"},{"lineNumber":35,"author":{"gitId":"Sidney011100"},"content":"            fxmlLoader.load();"},{"lineNumber":36,"author":{"gitId":"Sidney011100"},"content":"        } catch (IOException e) {"},{"lineNumber":37,"author":{"gitId":"Sidney011100"},"content":"            e.printStackTrace();"},{"lineNumber":38,"author":{"gitId":"Sidney011100"},"content":"        }"},{"lineNumber":39,"author":{"gitId":"Sidney011100"},"content":""},{"lineNumber":40,"author":{"gitId":"Sidney011100"},"content":"        customiseBox();"},{"lineNumber":41,"author":{"gitId":"Sidney011100"},"content":"        dialog.setText(text);"},{"lineNumber":42,"author":{"gitId":"Sidney011100"},"content":"        displayPicture.setImage(img);"},{"lineNumber":43,"author":{"gitId":"Sidney011100"},"content":"    }"},{"lineNumber":44,"author":{"gitId":"Sidney011100"},"content":""},{"lineNumber":45,"author":{"gitId":"Sidney011100"},"content":"    /**"},{"lineNumber":46,"author":{"gitId":"Sidney011100"},"content":"     * Customise dialog box in terms of colour and spacing"},{"lineNumber":47,"author":{"gitId":"Sidney011100"},"content":"     * For a more aesthetic looking dialog boc"},{"lineNumber":48,"author":{"gitId":"Sidney011100"},"content":"     */"},{"lineNumber":49,"author":{"gitId":"Sidney011100"},"content":"    private void customiseBox() {"},{"lineNumber":50,"author":{"gitId":"Sidney011100"},"content":"        this.setBackground(new Background(new BackgroundFill(Color.LIGHTBLUE, new CornerRadii(5), null)));"},{"lineNumber":51,"author":{"gitId":"Sidney011100"},"content":"        this.setPadding(new Insets(15, 12, 15, 12));"},{"lineNumber":52,"author":{"gitId":"Sidney011100"},"content":"        this.setSpacing(10);"},{"lineNumber":53,"author":{"gitId":"Sidney011100"},"content":"    }"},{"lineNumber":54,"author":{"gitId":"Sidney011100"},"content":""},{"lineNumber":55,"author":{"gitId":"Sidney011100"},"content":"    private static void customiseUserBox(DialogBox userDialogBox) {"},{"lineNumber":56,"author":{"gitId":"Sidney011100"},"content":"        userDialogBox.setBackground(new Background(new BackgroundFill(Color.web(\"#eaffd0\"), new CornerRadii(5), null)));"},{"lineNumber":57,"author":{"gitId":"Sidney011100"},"content":"        userDialogBox.setPadding(new Insets(15, 12, 15, 12));"},{"lineNumber":58,"author":{"gitId":"Sidney011100"},"content":"        userDialogBox.setSpacing(10);"},{"lineNumber":59,"author":{"gitId":"Sidney011100"},"content":"    }"},{"lineNumber":60,"author":{"gitId":"Sidney011100"},"content":""},{"lineNumber":61,"author":{"gitId":"Sidney011100"},"content":"    private static void customiseWormBox(DialogBox wormDialogBox) {"},{"lineNumber":62,"author":{"gitId":"Sidney011100"},"content":"        wormDialogBox.setBackground(new Background(new BackgroundFill(Color.web(\"#ffb4b4\"), new CornerRadii(5), null)));"},{"lineNumber":63,"author":{"gitId":"Sidney011100"},"content":"        wormDialogBox.setPadding(new Insets(15, 12, 15, 12));"},{"lineNumber":64,"author":{"gitId":"Sidney011100"},"content":"        wormDialogBox.setSpacing(10);"},{"lineNumber":65,"author":{"gitId":"Sidney011100"},"content":"    }"},{"lineNumber":66,"author":{"gitId":"Sidney011100"},"content":""},{"lineNumber":67,"author":{"gitId":"Sidney011100"},"content":"    /**"},{"lineNumber":68,"author":{"gitId":"Sidney011100"},"content":"     * Flips the dialog box such that the ImageView is on the left and text on the right."},{"lineNumber":69,"author":{"gitId":"Sidney011100"},"content":"     */"},{"lineNumber":70,"author":{"gitId":"Sidney011100"},"content":"    private void flip() {"},{"lineNumber":71,"author":{"gitId":"Sidney011100"},"content":"        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());"},{"lineNumber":72,"author":{"gitId":"Sidney011100"},"content":"        Collections.reverse(tmp);"},{"lineNumber":73,"author":{"gitId":"Sidney011100"},"content":"        getChildren().setAll(tmp);"},{"lineNumber":74,"author":{"gitId":"Sidney011100"},"content":"        setAlignment(Pos.TOP_LEFT);"},{"lineNumber":75,"author":{"gitId":"Sidney011100"},"content":"    }"},{"lineNumber":76,"author":{"gitId":"Sidney011100"},"content":""},{"lineNumber":77,"author":{"gitId":"Sidney011100"},"content":"    public static DialogBox getUserDialog(String text, Image img) {"},{"lineNumber":78,"author":{"gitId":"Sidney011100"},"content":"        DialogBox userBox \u003d new DialogBox(text, img);"},{"lineNumber":79,"author":{"gitId":"Sidney011100"},"content":"        customiseUserBox(userBox);"},{"lineNumber":80,"author":{"gitId":"Sidney011100"},"content":"        return userBox;"},{"lineNumber":81,"author":{"gitId":"Sidney011100"},"content":"    }"},{"lineNumber":82,"author":{"gitId":"Sidney011100"},"content":""},{"lineNumber":83,"author":{"gitId":"Sidney011100"},"content":"    public static DialogBox getDukeDialog(String text, Image img) {"},{"lineNumber":84,"author":{"gitId":"Sidney011100"},"content":"        var db \u003d new DialogBox(text, img);"},{"lineNumber":85,"author":{"gitId":"Sidney011100"},"content":"        db.flip();"},{"lineNumber":86,"author":{"gitId":"Sidney011100"},"content":"        customiseWormBox(db);"},{"lineNumber":87,"author":{"gitId":"Sidney011100"},"content":"        return db;"},{"lineNumber":88,"author":{"gitId":"Sidney011100"},"content":"    }"},{"lineNumber":89,"author":{"gitId":"Sidney011100"},"content":"}"}],"authorContributionMap":{"Sidney011100":89}},{"path":"src/main/java/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Sidney011100"},"content":"import java.io.FileNotFoundException;"},{"lineNumber":2,"author":{"gitId":"Sidney011100"},"content":"import java.io.IOException;"},{"lineNumber":3,"author":{"gitId":"Sidney011100"},"content":""},{"lineNumber":4,"author":{"gitId":"Sidney011100"},"content":"/**"},{"lineNumber":5,"author":{"gitId":"Sidney011100"},"content":" * Class initialises Duke Bot to take in input from user"},{"lineNumber":6,"author":{"gitId":"Sidney011100"},"content":" */"},{"lineNumber":7,"author":{"gitId":"Sidney011100"},"content":""},{"lineNumber":8,"author":{"gitId":"-"},"content":"public class Duke {"},{"lineNumber":9,"author":{"gitId":"Sidney011100"},"content":""},{"lineNumber":10,"author":{"gitId":"Sidney011100"},"content":"    private static final Storage storage \u003d new Storage();"},{"lineNumber":11,"author":{"gitId":"Sidney011100"},"content":"    private static final TaskList list \u003d new TaskList();"},{"lineNumber":12,"author":{"gitId":"Sidney011100"},"content":"    private static final Parser parser \u003d new Parser();"},{"lineNumber":13,"author":{"gitId":"Sidney011100"},"content":""},{"lineNumber":14,"author":{"gitId":"Sidney011100"},"content":"    /**"},{"lineNumber":15,"author":{"gitId":"Sidney011100"},"content":"     * Presents saved history via Storage and"},{"lineNumber":16,"author":{"gitId":"Sidney011100"},"content":"     * reads input from users."},{"lineNumber":17,"author":{"gitId":"Sidney011100"},"content":"     * @param args arguments"},{"lineNumber":18,"author":{"gitId":"Sidney011100"},"content":"     * @throws Exception thrown when Duke cannot handle user input."},{"lineNumber":19,"author":{"gitId":"Sidney011100"},"content":"     */"},{"lineNumber":20,"author":{"gitId":"Sidney011100"},"content":"    public static void main(String[] args) throws Exception {"},{"lineNumber":21,"author":{"gitId":"Sidney011100"},"content":"        if (storage.isSavedHistory()) {"},{"lineNumber":22,"author":{"gitId":"Sidney011100"},"content":"            storage.initialise(list);"},{"lineNumber":23,"author":{"gitId":"Sidney011100"},"content":"        }"},{"lineNumber":24,"author":{"gitId":"Sidney011100"},"content":"        try {"},{"lineNumber":25,"author":{"gitId":"Sidney011100"},"content":"            byeCommand();"},{"lineNumber":26,"author":{"gitId":"Sidney011100"},"content":"        } catch (IOException io) {"},{"lineNumber":27,"author":{"gitId":"Sidney011100"},"content":"            System.out.print(\"Could not save list!\");"},{"lineNumber":28,"author":{"gitId":"Sidney011100"},"content":"        }"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":30,"author":{"gitId":"Sidney011100"},"content":""},{"lineNumber":31,"author":{"gitId":"Sidney011100"},"content":"    /**"},{"lineNumber":32,"author":{"gitId":"Sidney011100"},"content":"     * You should have your own function to generate a response to user input."},{"lineNumber":33,"author":{"gitId":"Sidney011100"},"content":"     * Replace this stub with your completed method."},{"lineNumber":34,"author":{"gitId":"Sidney011100"},"content":"     */"},{"lineNumber":35,"author":{"gitId":"Sidney011100"},"content":"    String getResponse(String input) throws Exception {"},{"lineNumber":36,"author":{"gitId":"Sidney011100"},"content":"        return parser.respondToInput(input, list);"},{"lineNumber":37,"author":{"gitId":"Sidney011100"},"content":"    }"},{"lineNumber":38,"author":{"gitId":"Sidney011100"},"content":""},{"lineNumber":39,"author":{"gitId":"Sidney011100"},"content":"    /**"},{"lineNumber":40,"author":{"gitId":"Sidney011100"},"content":"     * Creates a new TaskList if Storage is present"},{"lineNumber":41,"author":{"gitId":"Sidney011100"},"content":"     * to initialise the system"},{"lineNumber":42,"author":{"gitId":"Sidney011100"},"content":"     * @return greeting String to be displayed to User"},{"lineNumber":43,"author":{"gitId":"Sidney011100"},"content":"     * @throws FileNotFoundException"},{"lineNumber":44,"author":{"gitId":"Sidney011100"},"content":"     */"},{"lineNumber":45,"author":{"gitId":"Sidney011100"},"content":"    public String welcomeMessage() throws FileNotFoundException {"},{"lineNumber":46,"author":{"gitId":"Sidney011100"},"content":"        if (storage.isSavedHistory()) {"},{"lineNumber":47,"author":{"gitId":"Sidney011100"},"content":"            storage.initialise(list);"},{"lineNumber":48,"author":{"gitId":"Sidney011100"},"content":"        }"},{"lineNumber":49,"author":{"gitId":"Sidney011100"},"content":"        return \"Hello! I\u0027m Duke \\n What can I do for you?\";"},{"lineNumber":50,"author":{"gitId":"Sidney011100"},"content":"    }"},{"lineNumber":51,"author":{"gitId":"Sidney011100"},"content":""},{"lineNumber":52,"author":{"gitId":"Sidney011100"},"content":""},{"lineNumber":53,"author":{"gitId":"Sidney011100"},"content":"    /**"},{"lineNumber":54,"author":{"gitId":"Sidney011100"},"content":"     * Function to call when we want to end main, to store the TaskList into storage"},{"lineNumber":55,"author":{"gitId":"Sidney011100"},"content":"     *"},{"lineNumber":56,"author":{"gitId":"Sidney011100"},"content":"     * @throws IOException from Storage."},{"lineNumber":57,"author":{"gitId":"Sidney011100"},"content":"     */"},{"lineNumber":58,"author":{"gitId":"Sidney011100"},"content":"    static void byeCommand() throws IOException {"},{"lineNumber":59,"author":{"gitId":"Sidney011100"},"content":"        storage.saveHistory(list);"},{"lineNumber":60,"author":{"gitId":"Sidney011100"},"content":"    }"},{"lineNumber":61,"author":{"gitId":"Sidney011100"},"content":""},{"lineNumber":62,"author":{"gitId":"-"},"content":"}"}],"authorContributionMap":{"Sidney011100":59,"-":3}},{"path":"src/main/java/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Sidney011100"},"content":"import java.sql.Timestamp;"},{"lineNumber":2,"author":{"gitId":"Sidney011100"},"content":"import java.text.SimpleDateFormat;"},{"lineNumber":3,"author":{"gitId":"Sidney011100"},"content":"import java.time.LocalDateTime;"},{"lineNumber":4,"author":{"gitId":"Sidney011100"},"content":""},{"lineNumber":5,"author":{"gitId":"Sidney011100"},"content":"class Event extends Task {"},{"lineNumber":6,"author":{"gitId":"Sidney011100"},"content":"    private LocalDateTime date;"},{"lineNumber":7,"author":{"gitId":"Sidney011100"},"content":""},{"lineNumber":8,"author":{"gitId":"Sidney011100"},"content":"    Event(String task, LocalDateTime date) {"},{"lineNumber":9,"author":{"gitId":"Sidney011100"},"content":"        super(task);"},{"lineNumber":10,"author":{"gitId":"Sidney011100"},"content":"        this.date \u003d date;"},{"lineNumber":11,"author":{"gitId":"Sidney011100"},"content":"    }"},{"lineNumber":12,"author":{"gitId":"Sidney011100"},"content":""},{"lineNumber":13,"author":{"gitId":"Sidney011100"},"content":"    Event(String task, Boolean isCompleted, LocalDateTime date) {"},{"lineNumber":14,"author":{"gitId":"Sidney011100"},"content":"        super(task, isCompleted);"},{"lineNumber":15,"author":{"gitId":"Sidney011100"},"content":"        this.date \u003d date;"},{"lineNumber":16,"author":{"gitId":"Sidney011100"},"content":"    }"},{"lineNumber":17,"author":{"gitId":"Sidney011100"},"content":""},{"lineNumber":18,"author":{"gitId":"Sidney011100"},"content":"    /**"},{"lineNumber":19,"author":{"gitId":"Sidney011100"},"content":"     * returns a Event if the line stored in Storage of a Task is of type Event"},{"lineNumber":20,"author":{"gitId":"Sidney011100"},"content":"     *"},{"lineNumber":21,"author":{"gitId":"Sidney011100"},"content":"     * @param input"},{"lineNumber":22,"author":{"gitId":"Sidney011100"},"content":"     * @return Event created with reading from Storage file"},{"lineNumber":23,"author":{"gitId":"Sidney011100"},"content":"     */"},{"lineNumber":24,"author":{"gitId":"Sidney011100"},"content":"    public static Event readTaskFromStorage(String input) {"},{"lineNumber":25,"author":{"gitId":"Sidney011100"},"content":"        String[] list \u003d input.split(\", \", 4);"},{"lineNumber":26,"author":{"gitId":"Sidney011100"},"content":"        assert list.length \u003d\u003d 4 : \"Todo was stored from previous user visit is corrupted.\";"},{"lineNumber":27,"author":{"gitId":"Sidney011100"},"content":"        return new Event(list[2], Boolean.parseBoolean(list[1]), LocalDateTime.parse(list[3]));"},{"lineNumber":28,"author":{"gitId":"Sidney011100"},"content":"    }"},{"lineNumber":29,"author":{"gitId":"Sidney011100"},"content":""},{"lineNumber":30,"author":{"gitId":"Sidney011100"},"content":"    /**"},{"lineNumber":31,"author":{"gitId":"Sidney011100"},"content":"     * Gives a format of saving a Event into storage"},{"lineNumber":32,"author":{"gitId":"Sidney011100"},"content":"     *"},{"lineNumber":33,"author":{"gitId":"Sidney011100"},"content":"     * @return String formatted to save a Event into storage"},{"lineNumber":34,"author":{"gitId":"Sidney011100"},"content":"     */"},{"lineNumber":35,"author":{"gitId":"Sidney011100"},"content":"    public String saveInStorageAs() {"},{"lineNumber":36,"author":{"gitId":"Sidney011100"},"content":"        return this.getClass().toString() + \", \" + this.getCompleted() + \", \" + this.getTask() + \", \" + this.date;"},{"lineNumber":37,"author":{"gitId":"Sidney011100"},"content":"    }"},{"lineNumber":38,"author":{"gitId":"Sidney011100"},"content":"    @Override"},{"lineNumber":39,"author":{"gitId":"Sidney011100"},"content":"    public String toString() {"},{"lineNumber":40,"author":{"gitId":"Sidney011100"},"content":"        SimpleDateFormat dateFormatter \u003d new SimpleDateFormat(\"MMM dd YYYY hh:mm a\");"},{"lineNumber":41,"author":{"gitId":"Sidney011100"},"content":"        return \"[E]\" + super.toString()"},{"lineNumber":42,"author":{"gitId":"Sidney011100"},"content":"                + \"(at: \" + dateFormatter.format(Timestamp.valueOf(this.date)) + \")\";"},{"lineNumber":43,"author":{"gitId":"Sidney011100"},"content":"    }"},{"lineNumber":44,"author":{"gitId":"Sidney011100"},"content":"}"}],"authorContributionMap":{"Sidney011100":44}},{"path":"src/main/java/Launcher.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Sidney011100"},"content":"import javafx.application.Application;"},{"lineNumber":2,"author":{"gitId":"Sidney011100"},"content":""},{"lineNumber":3,"author":{"gitId":"Sidney011100"},"content":"/**"},{"lineNumber":4,"author":{"gitId":"Sidney011100"},"content":" * A launcher class to workaround classpath issues."},{"lineNumber":5,"author":{"gitId":"Sidney011100"},"content":" */"},{"lineNumber":6,"author":{"gitId":"Sidney011100"},"content":"public class Launcher {"},{"lineNumber":7,"author":{"gitId":"Sidney011100"},"content":"    public static void main(String[] args) {"},{"lineNumber":8,"author":{"gitId":"Sidney011100"},"content":"        Application.launch(Main.class, args);"},{"lineNumber":9,"author":{"gitId":"Sidney011100"},"content":"    }"},{"lineNumber":10,"author":{"gitId":"Sidney011100"},"content":"}"}],"authorContributionMap":{"Sidney011100":10}},{"path":"src/main/java/Main.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Sidney011100"},"content":"import java.io.IOException;"},{"lineNumber":2,"author":{"gitId":"Sidney011100"},"content":""},{"lineNumber":3,"author":{"gitId":"Sidney011100"},"content":"import javafx.application.Application;"},{"lineNumber":4,"author":{"gitId":"Sidney011100"},"content":"import javafx.fxml.FXMLLoader;"},{"lineNumber":5,"author":{"gitId":"Sidney011100"},"content":"import javafx.scene.Scene;"},{"lineNumber":6,"author":{"gitId":"Sidney011100"},"content":"import javafx.scene.layout.AnchorPane;"},{"lineNumber":7,"author":{"gitId":"Sidney011100"},"content":"import javafx.stage.Stage;"},{"lineNumber":8,"author":{"gitId":"Sidney011100"},"content":""},{"lineNumber":9,"author":{"gitId":"Sidney011100"},"content":"/**"},{"lineNumber":10,"author":{"gitId":"Sidney011100"},"content":" * A GUI for Duke using FXML."},{"lineNumber":11,"author":{"gitId":"Sidney011100"},"content":" */"},{"lineNumber":12,"author":{"gitId":"Sidney011100"},"content":"public class Main extends Application {"},{"lineNumber":13,"author":{"gitId":"Sidney011100"},"content":""},{"lineNumber":14,"author":{"gitId":"Sidney011100"},"content":"    private Duke duke \u003d new Duke();"},{"lineNumber":15,"author":{"gitId":"Sidney011100"},"content":""},{"lineNumber":16,"author":{"gitId":"Sidney011100"},"content":"    @Override"},{"lineNumber":17,"author":{"gitId":"Sidney011100"},"content":"    public void start(Stage stage) {"},{"lineNumber":18,"author":{"gitId":"Sidney011100"},"content":"        try {"},{"lineNumber":19,"author":{"gitId":"Sidney011100"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(Main.class.getResource(\"/view/MainWindow.fxml\"));"},{"lineNumber":20,"author":{"gitId":"Sidney011100"},"content":"            AnchorPane ap \u003d fxmlLoader.load();"},{"lineNumber":21,"author":{"gitId":"Sidney011100"},"content":"            Scene scene \u003d new Scene(ap);"},{"lineNumber":22,"author":{"gitId":"Sidney011100"},"content":"            stage.setScene(scene);"},{"lineNumber":23,"author":{"gitId":"Sidney011100"},"content":"            stage.setTitle(\"Planner\");"},{"lineNumber":24,"author":{"gitId":"Sidney011100"},"content":"            assert duke !\u003d null : \"Did not initialise duke in main\";"},{"lineNumber":25,"author":{"gitId":"Sidney011100"},"content":"            fxmlLoader.\u003cMainWindow\u003egetController().setDuke(duke);"},{"lineNumber":26,"author":{"gitId":"Sidney011100"},"content":"            fxmlLoader.\u003cMainWindow\u003egetController().welcomeUser();"},{"lineNumber":27,"author":{"gitId":"Sidney011100"},"content":"            stage.show();"},{"lineNumber":28,"author":{"gitId":"Sidney011100"},"content":"        } catch (IOException e) {"},{"lineNumber":29,"author":{"gitId":"Sidney011100"},"content":"            e.printStackTrace();"},{"lineNumber":30,"author":{"gitId":"Sidney011100"},"content":"        }"},{"lineNumber":31,"author":{"gitId":"Sidney011100"},"content":"    }"},{"lineNumber":32,"author":{"gitId":"Sidney011100"},"content":"}"}],"authorContributionMap":{"Sidney011100":32}},{"path":"src/main/java/MainWindow.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Sidney011100"},"content":"import java.io.FileNotFoundException;"},{"lineNumber":2,"author":{"gitId":"Sidney011100"},"content":""},{"lineNumber":3,"author":{"gitId":"Sidney011100"},"content":"import javafx.fxml.FXML;"},{"lineNumber":4,"author":{"gitId":"Sidney011100"},"content":"import javafx.scene.control.Button;"},{"lineNumber":5,"author":{"gitId":"Sidney011100"},"content":"import javafx.scene.control.ScrollPane;"},{"lineNumber":6,"author":{"gitId":"Sidney011100"},"content":"import javafx.scene.control.TextField;"},{"lineNumber":7,"author":{"gitId":"Sidney011100"},"content":"import javafx.scene.image.Image;"},{"lineNumber":8,"author":{"gitId":"Sidney011100"},"content":"import javafx.scene.layout.AnchorPane;"},{"lineNumber":9,"author":{"gitId":"Sidney011100"},"content":"import javafx.scene.layout.VBox;"},{"lineNumber":10,"author":{"gitId":"Sidney011100"},"content":""},{"lineNumber":11,"author":{"gitId":"Sidney011100"},"content":"/**"},{"lineNumber":12,"author":{"gitId":"Sidney011100"},"content":" * Controller for MainWindow. Provides the layout for the other controls."},{"lineNumber":13,"author":{"gitId":"Sidney011100"},"content":" */"},{"lineNumber":14,"author":{"gitId":"Sidney011100"},"content":"public class MainWindow extends AnchorPane {"},{"lineNumber":15,"author":{"gitId":"Sidney011100"},"content":"    @FXML"},{"lineNumber":16,"author":{"gitId":"Sidney011100"},"content":"    private ScrollPane scrollPane;"},{"lineNumber":17,"author":{"gitId":"Sidney011100"},"content":"    @FXML"},{"lineNumber":18,"author":{"gitId":"Sidney011100"},"content":"    private VBox dialogContainer;"},{"lineNumber":19,"author":{"gitId":"Sidney011100"},"content":"    @FXML"},{"lineNumber":20,"author":{"gitId":"Sidney011100"},"content":"    private TextField userInput;"},{"lineNumber":21,"author":{"gitId":"Sidney011100"},"content":"    @FXML"},{"lineNumber":22,"author":{"gitId":"Sidney011100"},"content":"    private Button sendButton;"},{"lineNumber":23,"author":{"gitId":"Sidney011100"},"content":""},{"lineNumber":24,"author":{"gitId":"Sidney011100"},"content":"    private Duke duke;"},{"lineNumber":25,"author":{"gitId":"Sidney011100"},"content":""},{"lineNumber":26,"author":{"gitId":"Sidney011100"},"content":"    private Image userImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaUser.png\"));"},{"lineNumber":27,"author":{"gitId":"Sidney011100"},"content":"    private Image dukeImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaDuke.png\"));"},{"lineNumber":28,"author":{"gitId":"Sidney011100"},"content":""},{"lineNumber":29,"author":{"gitId":"Sidney011100"},"content":"    @FXML"},{"lineNumber":30,"author":{"gitId":"Sidney011100"},"content":"    public void initialize() {"},{"lineNumber":31,"author":{"gitId":"Sidney011100"},"content":"        scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());"},{"lineNumber":32,"author":{"gitId":"Sidney011100"},"content":"    }"},{"lineNumber":33,"author":{"gitId":"Sidney011100"},"content":""},{"lineNumber":34,"author":{"gitId":"Sidney011100"},"content":"    public void setDuke(Duke d) {"},{"lineNumber":35,"author":{"gitId":"Sidney011100"},"content":"        duke \u003d d;"},{"lineNumber":36,"author":{"gitId":"Sidney011100"},"content":"    }"},{"lineNumber":37,"author":{"gitId":"Sidney011100"},"content":""},{"lineNumber":38,"author":{"gitId":"Sidney011100"},"content":"    /**"},{"lineNumber":39,"author":{"gitId":"Sidney011100"},"content":"     * Creates two dialog boxes, one echoing user input and the other containing Duke\u0027s reply and then appends them to"},{"lineNumber":40,"author":{"gitId":"Sidney011100"},"content":"     * the dialog container. Clears the user input after processing."},{"lineNumber":41,"author":{"gitId":"Sidney011100"},"content":"     */"},{"lineNumber":42,"author":{"gitId":"Sidney011100"},"content":"    @FXML"},{"lineNumber":43,"author":{"gitId":"Sidney011100"},"content":"    private void handleUserInput() throws Exception {"},{"lineNumber":44,"author":{"gitId":"Sidney011100"},"content":"        String input \u003d userInput.getText();"},{"lineNumber":45,"author":{"gitId":"Sidney011100"},"content":"        String response \u003d duke.getResponse(input);"},{"lineNumber":46,"author":{"gitId":"Sidney011100"},"content":"        assert response !\u003d null : \"Response in handleUserInput\";"},{"lineNumber":47,"author":{"gitId":"Sidney011100"},"content":"        dialogContainer.getChildren().addAll("},{"lineNumber":48,"author":{"gitId":"Sidney011100"},"content":"                DialogBox.getUserDialog(input, userImage),"},{"lineNumber":49,"author":{"gitId":"Sidney011100"},"content":"                DialogBox.getDukeDialog(response, dukeImage)"},{"lineNumber":50,"author":{"gitId":"Sidney011100"},"content":"        );"},{"lineNumber":51,"author":{"gitId":"Sidney011100"},"content":"        userInput.clear();"},{"lineNumber":52,"author":{"gitId":"Sidney011100"},"content":"    }"},{"lineNumber":53,"author":{"gitId":"Sidney011100"},"content":""},{"lineNumber":54,"author":{"gitId":"Sidney011100"},"content":"    /**"},{"lineNumber":55,"author":{"gitId":"Sidney011100"},"content":"     * Creates a dialog box where Duke welcomes user"},{"lineNumber":56,"author":{"gitId":"Sidney011100"},"content":"     */"},{"lineNumber":57,"author":{"gitId":"Sidney011100"},"content":"    public void welcomeUser() throws FileNotFoundException {"},{"lineNumber":58,"author":{"gitId":"Sidney011100"},"content":"        dialogContainer.getChildren().addAll("},{"lineNumber":59,"author":{"gitId":"Sidney011100"},"content":"                DialogBox.getDukeDialog(duke.welcomeMessage(), dukeImage)"},{"lineNumber":60,"author":{"gitId":"Sidney011100"},"content":"        );"},{"lineNumber":61,"author":{"gitId":"Sidney011100"},"content":"    }"},{"lineNumber":62,"author":{"gitId":"Sidney011100"},"content":"}"}],"authorContributionMap":{"Sidney011100":62}},{"path":"src/main/java/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Sidney011100"},"content":"import java.time.LocalDate;"},{"lineNumber":2,"author":{"gitId":"Sidney011100"},"content":"import java.time.LocalDateTime;"},{"lineNumber":3,"author":{"gitId":"Sidney011100"},"content":"import java.time.LocalTime;"},{"lineNumber":4,"author":{"gitId":"Sidney011100"},"content":""},{"lineNumber":5,"author":{"gitId":"Sidney011100"},"content":"public class Parser {"},{"lineNumber":6,"author":{"gitId":"Sidney011100"},"content":"    private static String input;"},{"lineNumber":7,"author":{"gitId":"Sidney011100"},"content":"    private final Ui userInterface;"},{"lineNumber":8,"author":{"gitId":"Sidney011100"},"content":"    private Storage storage \u003d new Storage();"},{"lineNumber":9,"author":{"gitId":"Sidney011100"},"content":""},{"lineNumber":10,"author":{"gitId":"Sidney011100"},"content":"    Parser() {"},{"lineNumber":11,"author":{"gitId":"Sidney011100"},"content":"        userInterface \u003d new Ui();"},{"lineNumber":12,"author":{"gitId":"Sidney011100"},"content":"        userInterface.welcomeUser();"},{"lineNumber":13,"author":{"gitId":"Sidney011100"},"content":"    }"},{"lineNumber":14,"author":{"gitId":"Sidney011100"},"content":""},{"lineNumber":15,"author":{"gitId":"Sidney011100"},"content":"    private String removeExtraLinesAndSpacesFromInput(String input) {"},{"lineNumber":16,"author":{"gitId":"Sidney011100"},"content":"        String cleanedInput \u003d input.replaceAll(\"\\n\", \"\");"},{"lineNumber":17,"author":{"gitId":"Sidney011100"},"content":"        cleanedInput \u003d cleanedInput.toLowerCase();"},{"lineNumber":18,"author":{"gitId":"Sidney011100"},"content":"        return cleanedInput;"},{"lineNumber":19,"author":{"gitId":"Sidney011100"},"content":"    }"},{"lineNumber":20,"author":{"gitId":"Sidney011100"},"content":""},{"lineNumber":21,"author":{"gitId":"Sidney011100"},"content":"    /**"},{"lineNumber":22,"author":{"gitId":"Sidney011100"},"content":"     * Decides which command to call given the input"},{"lineNumber":23,"author":{"gitId":"Sidney011100"},"content":"     * by parsing the input into analyseInput()."},{"lineNumber":24,"author":{"gitId":"Sidney011100"},"content":"     * @param userInput User\u0027s command given to the system"},{"lineNumber":25,"author":{"gitId":"Sidney011100"},"content":"     * @param list of TaskList for reference and so changes can be made"},{"lineNumber":26,"author":{"gitId":"Sidney011100"},"content":"     * @return respond to the user\u0027s input"},{"lineNumber":27,"author":{"gitId":"Sidney011100"},"content":"     * @throws Exception"},{"lineNumber":28,"author":{"gitId":"Sidney011100"},"content":"     */"},{"lineNumber":29,"author":{"gitId":"Sidney011100"},"content":"    public String respondToInput(String userInput, TaskList list) throws Exception {"},{"lineNumber":30,"author":{"gitId":"Sidney011100"},"content":"        input \u003d removeExtraLinesAndSpacesFromInput(userInput);"},{"lineNumber":31,"author":{"gitId":"Sidney011100"},"content":"        if (inputDoesNotContainBye()) {"},{"lineNumber":32,"author":{"gitId":"Sidney011100"},"content":"            return analyseInput(list);"},{"lineNumber":33,"author":{"gitId":"Sidney011100"},"content":"        } else {"},{"lineNumber":34,"author":{"gitId":"Sidney011100"},"content":"            assert input.contains(\"bye\") : \"Oh no! You keyed in something I couldn\u0027t read :(\";"},{"lineNumber":35,"author":{"gitId":"Sidney011100"},"content":"            if (list.size() !\u003d 0) {"},{"lineNumber":36,"author":{"gitId":"Sidney011100"},"content":"                assert storage !\u003d null : \"did not initialise storage!\";"},{"lineNumber":37,"author":{"gitId":"Sidney011100"},"content":"                storage.saveHistory(list);"},{"lineNumber":38,"author":{"gitId":"Sidney011100"},"content":"            }"},{"lineNumber":39,"author":{"gitId":"Sidney011100"},"content":"            return userInterface.userLeaving();"},{"lineNumber":40,"author":{"gitId":"Sidney011100"},"content":"        }"},{"lineNumber":41,"author":{"gitId":"Sidney011100"},"content":"    }"},{"lineNumber":42,"author":{"gitId":"Sidney011100"},"content":""},{"lineNumber":43,"author":{"gitId":"Sidney011100"},"content":"    /**"},{"lineNumber":44,"author":{"gitId":"Sidney011100"},"content":"     * Method checks if input contains string \"bye\""},{"lineNumber":45,"author":{"gitId":"Sidney011100"},"content":"     *"},{"lineNumber":46,"author":{"gitId":"Sidney011100"},"content":"     * @return Boolean that whether input contains \"bye\""},{"lineNumber":47,"author":{"gitId":"Sidney011100"},"content":"     */"},{"lineNumber":48,"author":{"gitId":"Sidney011100"},"content":"    public Boolean inputDoesNotContainBye() {"},{"lineNumber":49,"author":{"gitId":"Sidney011100"},"content":"        return !input.contains(\"bye\");"},{"lineNumber":50,"author":{"gitId":"Sidney011100"},"content":"    }"},{"lineNumber":51,"author":{"gitId":"Sidney011100"},"content":""},{"lineNumber":52,"author":{"gitId":"Sidney011100"},"content":"    private Boolean inputContainsDone() {"},{"lineNumber":53,"author":{"gitId":"Sidney011100"},"content":"        return input.contains(\"done\");"},{"lineNumber":54,"author":{"gitId":"Sidney011100"},"content":"    }"},{"lineNumber":55,"author":{"gitId":"Sidney011100"},"content":""},{"lineNumber":56,"author":{"gitId":"Sidney011100"},"content":"    private Boolean inputContainsTodo() {"},{"lineNumber":57,"author":{"gitId":"Sidney011100"},"content":"        return input.contains(\"todo\");"},{"lineNumber":58,"author":{"gitId":"Sidney011100"},"content":"    }"},{"lineNumber":59,"author":{"gitId":"Sidney011100"},"content":""},{"lineNumber":60,"author":{"gitId":"Sidney011100"},"content":"    private Boolean inputContainsEvent() {"},{"lineNumber":61,"author":{"gitId":"Sidney011100"},"content":"        return input.contains(\"event\");"},{"lineNumber":62,"author":{"gitId":"Sidney011100"},"content":"    }"},{"lineNumber":63,"author":{"gitId":"Sidney011100"},"content":""},{"lineNumber":64,"author":{"gitId":"Sidney011100"},"content":"    private Boolean inputContainsDeadline() {"},{"lineNumber":65,"author":{"gitId":"Sidney011100"},"content":"        return input.contains(\"deadline\");"},{"lineNumber":66,"author":{"gitId":"Sidney011100"},"content":"    }"},{"lineNumber":67,"author":{"gitId":"Sidney011100"},"content":""},{"lineNumber":68,"author":{"gitId":"Sidney011100"},"content":"    private Boolean inputContainsDelete() {"},{"lineNumber":69,"author":{"gitId":"Sidney011100"},"content":"        return input.contains(\"delete\");"},{"lineNumber":70,"author":{"gitId":"Sidney011100"},"content":"    }"},{"lineNumber":71,"author":{"gitId":"Sidney011100"},"content":""},{"lineNumber":72,"author":{"gitId":"Sidney011100"},"content":"    private Boolean inputContainsList() {"},{"lineNumber":73,"author":{"gitId":"Sidney011100"},"content":"        return input.contains(\"list\");"},{"lineNumber":74,"author":{"gitId":"Sidney011100"},"content":"    }"},{"lineNumber":75,"author":{"gitId":"Sidney011100"},"content":""},{"lineNumber":76,"author":{"gitId":"Sidney011100"},"content":"    private Boolean inputContainsFind() {"},{"lineNumber":77,"author":{"gitId":"Sidney011100"},"content":"        return input.contains(\"find\");"},{"lineNumber":78,"author":{"gitId":"Sidney011100"},"content":"    }"},{"lineNumber":79,"author":{"gitId":"Sidney011100"},"content":""},{"lineNumber":80,"author":{"gitId":"Sidney011100"},"content":""},{"lineNumber":81,"author":{"gitId":"Sidney011100"},"content":"    /**"},{"lineNumber":82,"author":{"gitId":"Sidney011100"},"content":"     * Method reads which number in list user wants to mark done."},{"lineNumber":83,"author":{"gitId":"Sidney011100"},"content":"     *"},{"lineNumber":84,"author":{"gitId":"Sidney011100"},"content":"     * @return int val index in the list that user wants to mark as completed."},{"lineNumber":85,"author":{"gitId":"Sidney011100"},"content":"     */"},{"lineNumber":86,"author":{"gitId":"Sidney011100"},"content":"    public int inputDoneAtIndex() throws ArrayIndexOutOfBoundsException {"},{"lineNumber":87,"author":{"gitId":"Sidney011100"},"content":"        String[] stringArray \u003d input.split(\" \");"},{"lineNumber":88,"author":{"gitId":"Sidney011100"},"content":"        assert stringArray.length \u003d\u003d 2 : \"Oh no! I don\u0027t understand what you want to be marked as done :(\";"},{"lineNumber":89,"author":{"gitId":"Sidney011100"},"content":"        String value \u003d stringArray[1];"},{"lineNumber":90,"author":{"gitId":"Sidney011100"},"content":"        int val \u003d Integer.parseInt(value) - 1;"},{"lineNumber":91,"author":{"gitId":"Sidney011100"},"content":"        return val;"},{"lineNumber":92,"author":{"gitId":"Sidney011100"},"content":"    }"},{"lineNumber":93,"author":{"gitId":"Sidney011100"},"content":""},{"lineNumber":94,"author":{"gitId":"Sidney011100"},"content":"    /**"},{"lineNumber":95,"author":{"gitId":"Sidney011100"},"content":"     * Method enters TaskList and marks the task at the value user indicated to mark as complete."},{"lineNumber":96,"author":{"gitId":"Sidney011100"},"content":"     */"},{"lineNumber":97,"author":{"gitId":"Sidney011100"},"content":"    public String markDoneAtIndex(TaskList list) {"},{"lineNumber":98,"author":{"gitId":"Sidney011100"},"content":"        int index \u003d inputDoneAtIndex();"},{"lineNumber":99,"author":{"gitId":"Sidney011100"},"content":"        assert index \u003c list.size() \u0026\u0026 index \u003e\u003d 0 : \"The number you want marked done is not in the list!\";"},{"lineNumber":100,"author":{"gitId":"Sidney011100"},"content":"        list.markDone(index);"},{"lineNumber":101,"author":{"gitId":"Sidney011100"},"content":"        return userInterface.userDoneTask(list.getTaskAtIndex(index).toString());"},{"lineNumber":102,"author":{"gitId":"Sidney011100"},"content":"    }"},{"lineNumber":103,"author":{"gitId":"Sidney011100"},"content":""},{"lineNumber":104,"author":{"gitId":"Sidney011100"},"content":"    /**"},{"lineNumber":105,"author":{"gitId":"Sidney011100"},"content":"     * Method reads the Todo Task that user has input and removes the unnecessary string to be saved in Todo"},{"lineNumber":106,"author":{"gitId":"Sidney011100"},"content":"     *"},{"lineNumber":107,"author":{"gitId":"Sidney011100"},"content":"     * @return task that user has input."},{"lineNumber":108,"author":{"gitId":"Sidney011100"},"content":"     */"},{"lineNumber":109,"author":{"gitId":"Sidney011100"},"content":"    public String inputTaskToDoIs() throws ArrayIndexOutOfBoundsException {"},{"lineNumber":110,"author":{"gitId":"Sidney011100"},"content":"        String task \u003d input.replaceFirst(\"todo\", \"\");"},{"lineNumber":111,"author":{"gitId":"Sidney011100"},"content":"        task \u003d task.stripTrailing();"},{"lineNumber":112,"author":{"gitId":"Sidney011100"},"content":"        if (task.isEmpty()) {"},{"lineNumber":113,"author":{"gitId":"Sidney011100"},"content":"            throw new ArrayIndexOutOfBoundsException(\"☹ OOPS!!! The description of a todo cannot be empty.\");"},{"lineNumber":114,"author":{"gitId":"Sidney011100"},"content":"        }"},{"lineNumber":115,"author":{"gitId":"Sidney011100"},"content":"        return task;"},{"lineNumber":116,"author":{"gitId":"Sidney011100"},"content":"    }"},{"lineNumber":117,"author":{"gitId":"Sidney011100"},"content":""},{"lineNumber":118,"author":{"gitId":"Sidney011100"},"content":"    /**"},{"lineNumber":119,"author":{"gitId":"Sidney011100"},"content":"     * Method adds the Todo task user indicated into a TaskList."},{"lineNumber":120,"author":{"gitId":"Sidney011100"},"content":"     */"},{"lineNumber":121,"author":{"gitId":"Sidney011100"},"content":"    public String addTodoTask(TaskList list) {"},{"lineNumber":122,"author":{"gitId":"Sidney011100"},"content":"        Task toAddIntoList \u003d list.addTodo(inputTaskToDoIs());"},{"lineNumber":123,"author":{"gitId":"Sidney011100"},"content":"        return userInterface.userAddTask(list, toAddIntoList);"},{"lineNumber":124,"author":{"gitId":"Sidney011100"},"content":"    }"},{"lineNumber":125,"author":{"gitId":"Sidney011100"},"content":""},{"lineNumber":126,"author":{"gitId":"Sidney011100"},"content":"    /**"},{"lineNumber":127,"author":{"gitId":"Sidney011100"},"content":"     * Method takes in the Date and Time that user input and returns an array of size 2 with date and time respectively"},{"lineNumber":128,"author":{"gitId":"Sidney011100"},"content":"     *"},{"lineNumber":129,"author":{"gitId":"Sidney011100"},"content":"     * @return String[] of size 2 with string relevant to date and time."},{"lineNumber":130,"author":{"gitId":"Sidney011100"},"content":"     */"},{"lineNumber":131,"author":{"gitId":"Sidney011100"},"content":"    public String[] findTaskWithDate() {"},{"lineNumber":132,"author":{"gitId":"Sidney011100"},"content":"        if (inputContainsEvent()) {"},{"lineNumber":133,"author":{"gitId":"Sidney011100"},"content":"            input \u003d input.replaceFirst(\"event\", \"\");"},{"lineNumber":134,"author":{"gitId":"Sidney011100"},"content":"        } else {"},{"lineNumber":135,"author":{"gitId":"Sidney011100"},"content":"            input \u003d input.replaceFirst(\"deadline\", \"\");"},{"lineNumber":136,"author":{"gitId":"Sidney011100"},"content":"        }"},{"lineNumber":137,"author":{"gitId":"Sidney011100"},"content":"        input \u003d input.stripLeading();"},{"lineNumber":138,"author":{"gitId":"Sidney011100"},"content":"        return input.split(\"/\", 2);"},{"lineNumber":139,"author":{"gitId":"Sidney011100"},"content":"    }"},{"lineNumber":140,"author":{"gitId":"Sidney011100"},"content":""},{"lineNumber":141,"author":{"gitId":"Sidney011100"},"content":"    /**"},{"lineNumber":142,"author":{"gitId":"Sidney011100"},"content":"     * Method formats user input of time into LocalDateTime"},{"lineNumber":143,"author":{"gitId":"Sidney011100"},"content":"     *"},{"lineNumber":144,"author":{"gitId":"Sidney011100"},"content":"     * @param inputDate of type String"},{"lineNumber":145,"author":{"gitId":"Sidney011100"},"content":"     * @return LocalDateTime of the user input"},{"lineNumber":146,"author":{"gitId":"Sidney011100"},"content":"     */"},{"lineNumber":147,"author":{"gitId":"Sidney011100"},"content":"    static LocalDateTime inputDateAndTime(String inputDate) {"},{"lineNumber":148,"author":{"gitId":"Sidney011100"},"content":"        String[] dataArray \u003d inputDate.split(\" \");"},{"lineNumber":149,"author":{"gitId":"Sidney011100"},"content":"        assert dataArray.length \u003d\u003d 3 : \"Invalid input for date and time taken\";"},{"lineNumber":150,"author":{"gitId":"Sidney011100"},"content":"        LocalDate formatDate \u003d inputDate(dataArray[1]);"},{"lineNumber":151,"author":{"gitId":"Sidney011100"},"content":"        LocalTime formatTime \u003d inputTime(dataArray[2]);"},{"lineNumber":152,"author":{"gitId":"Sidney011100"},"content":"        return LocalDateTime.of(formatDate, formatTime);"},{"lineNumber":153,"author":{"gitId":"Sidney011100"},"content":"    }"},{"lineNumber":154,"author":{"gitId":"Sidney011100"},"content":""},{"lineNumber":155,"author":{"gitId":"Sidney011100"},"content":"    /**"},{"lineNumber":156,"author":{"gitId":"Sidney011100"},"content":"     * Method formats user input of time into LocalDate"},{"lineNumber":157,"author":{"gitId":"Sidney011100"},"content":"     *"},{"lineNumber":158,"author":{"gitId":"Sidney011100"},"content":"     * @return LocalDate of the user input"},{"lineNumber":159,"author":{"gitId":"Sidney011100"},"content":"     */"},{"lineNumber":160,"author":{"gitId":"Sidney011100"},"content":"    static LocalDate inputDate(String input) {"},{"lineNumber":161,"author":{"gitId":"Sidney011100"},"content":"        String[] dateArray \u003d input.split(\"/\");"},{"lineNumber":162,"author":{"gitId":"Sidney011100"},"content":"        LocalDate date \u003d LocalDate.of(Integer.parseInt(dateArray[2]),"},{"lineNumber":163,"author":{"gitId":"Sidney011100"},"content":"                                            Integer.parseInt(dateArray[1]),"},{"lineNumber":164,"author":{"gitId":"Sidney011100"},"content":"                                            Integer.parseInt(dateArray[0]));"},{"lineNumber":165,"author":{"gitId":"Sidney011100"},"content":"        return date;"},{"lineNumber":166,"author":{"gitId":"Sidney011100"},"content":"    }"},{"lineNumber":167,"author":{"gitId":"Sidney011100"},"content":""},{"lineNumber":168,"author":{"gitId":"Sidney011100"},"content":"    /**"},{"lineNumber":169,"author":{"gitId":"Sidney011100"},"content":"     * Formats user input of time into LocalDateTime"},{"lineNumber":170,"author":{"gitId":"Sidney011100"},"content":"     *"},{"lineNumber":171,"author":{"gitId":"Sidney011100"},"content":"     * @return LocalDateTime of the user input"},{"lineNumber":172,"author":{"gitId":"Sidney011100"},"content":"     */"},{"lineNumber":173,"author":{"gitId":"Sidney011100"},"content":"    static LocalTime inputTime(String input) {"},{"lineNumber":174,"author":{"gitId":"Sidney011100"},"content":"        String hour \u003d input.substring(0, 2);"},{"lineNumber":175,"author":{"gitId":"Sidney011100"},"content":"        String minutes \u003d input.substring(2);"},{"lineNumber":176,"author":{"gitId":"Sidney011100"},"content":"        LocalTime time \u003d LocalTime.of(Integer.parseInt(hour), Integer.parseInt(minutes));"},{"lineNumber":177,"author":{"gitId":"Sidney011100"},"content":"        return time;"},{"lineNumber":178,"author":{"gitId":"Sidney011100"},"content":"    }"},{"lineNumber":179,"author":{"gitId":"Sidney011100"},"content":""},{"lineNumber":180,"author":{"gitId":"Sidney011100"},"content":"    /**"},{"lineNumber":181,"author":{"gitId":"Sidney011100"},"content":"     * Adds the Event created from input into TaskList"},{"lineNumber":182,"author":{"gitId":"Sidney011100"},"content":"     * after reading what the input was"},{"lineNumber":183,"author":{"gitId":"Sidney011100"},"content":"     * @param list TaskList that stores user\u0027s Tasks"},{"lineNumber":184,"author":{"gitId":"Sidney011100"},"content":"     */"},{"lineNumber":185,"author":{"gitId":"Sidney011100"},"content":"    public String addEventTask(TaskList list) {"},{"lineNumber":186,"author":{"gitId":"Sidney011100"},"content":"        try {"},{"lineNumber":187,"author":{"gitId":"Sidney011100"},"content":"            String[] taskAndDate \u003d findTaskWithDate();"},{"lineNumber":188,"author":{"gitId":"Sidney011100"},"content":"            Event eventToAdd \u003d list.addEvent(taskAndDate[0], inputDateAndTime(taskAndDate[1]));"},{"lineNumber":189,"author":{"gitId":"Sidney011100"},"content":"            return userInterface.userAddTask(list, eventToAdd);"},{"lineNumber":190,"author":{"gitId":"Sidney011100"},"content":"        } catch (ArrayIndexOutOfBoundsException e) {"},{"lineNumber":191,"author":{"gitId":"Sidney011100"},"content":"            return \"I could not understand your deadline task.\\n\""},{"lineNumber":192,"author":{"gitId":"Sidney011100"},"content":"                    + \"Try format it as \\n\""},{"lineNumber":193,"author":{"gitId":"Sidney011100"},"content":"                    + \"Eg event conference call /at 2/12/2020 0800\";"},{"lineNumber":194,"author":{"gitId":"Sidney011100"},"content":"        }"},{"lineNumber":195,"author":{"gitId":"Sidney011100"},"content":""},{"lineNumber":196,"author":{"gitId":"Sidney011100"},"content":"    }"},{"lineNumber":197,"author":{"gitId":"Sidney011100"},"content":""},{"lineNumber":198,"author":{"gitId":"Sidney011100"},"content":"    /**"},{"lineNumber":199,"author":{"gitId":"Sidney011100"},"content":"     * Adds a Deadline into TaskList passed into method"},{"lineNumber":200,"author":{"gitId":"Sidney011100"},"content":"     * Deadline comes from input by user to be saved into TaskList"},{"lineNumber":201,"author":{"gitId":"Sidney011100"},"content":"     * @param list TaskList that stores user\u0027s Tasks"},{"lineNumber":202,"author":{"gitId":"Sidney011100"},"content":"     */"},{"lineNumber":203,"author":{"gitId":"Sidney011100"},"content":"    public String addDeadlineTask(TaskList list) {"},{"lineNumber":204,"author":{"gitId":"Sidney011100"},"content":"        String[] taskAndDate \u003d findTaskWithDate();"},{"lineNumber":205,"author":{"gitId":"Sidney011100"},"content":"        try {"},{"lineNumber":206,"author":{"gitId":"Sidney011100"},"content":"            Deadline deadlineToAdd \u003d list.addDeadline(taskAndDate[0], inputDateAndTime(taskAndDate[1]));"},{"lineNumber":207,"author":{"gitId":"Sidney011100"},"content":"            return userInterface.userAddTask(list, deadlineToAdd);"},{"lineNumber":208,"author":{"gitId":"Sidney011100"},"content":"        } catch (ArrayIndexOutOfBoundsException e) {"},{"lineNumber":209,"author":{"gitId":"Sidney011100"},"content":"            return \"I could not understand your deadline task.\\n\""},{"lineNumber":210,"author":{"gitId":"Sidney011100"},"content":"                    + \"Try format it as \\n\""},{"lineNumber":211,"author":{"gitId":"Sidney011100"},"content":"                    + \"Eg deadline return book /by 2/12/2019 1800\";"},{"lineNumber":212,"author":{"gitId":"Sidney011100"},"content":"        }"},{"lineNumber":213,"author":{"gitId":"Sidney011100"},"content":""},{"lineNumber":214,"author":{"gitId":"Sidney011100"},"content":"    }"},{"lineNumber":215,"author":{"gitId":"Sidney011100"},"content":""},{"lineNumber":216,"author":{"gitId":"Sidney011100"},"content":"    /**"},{"lineNumber":217,"author":{"gitId":"Sidney011100"},"content":"     * Deletes the requested Task given in input"},{"lineNumber":218,"author":{"gitId":"Sidney011100"},"content":"     * from TaskList passed into method"},{"lineNumber":219,"author":{"gitId":"Sidney011100"},"content":"     * @param list TaskList that contains Task to be deleted"},{"lineNumber":220,"author":{"gitId":"Sidney011100"},"content":"     */"},{"lineNumber":221,"author":{"gitId":"Sidney011100"},"content":"    public String commandDelete(TaskList list) {"},{"lineNumber":222,"author":{"gitId":"Sidney011100"},"content":"        String value \u003d input.replaceFirst(\"delete\", \"\");"},{"lineNumber":223,"author":{"gitId":"Sidney011100"},"content":"        value \u003d value.strip();"},{"lineNumber":224,"author":{"gitId":"Sidney011100"},"content":"        try {"},{"lineNumber":225,"author":{"gitId":"Sidney011100"},"content":"            int val \u003d Integer.parseInt(value);"},{"lineNumber":226,"author":{"gitId":"Sidney011100"},"content":"            assert list !\u003d null : \"List not initiliased\";"},{"lineNumber":227,"author":{"gitId":"Sidney011100"},"content":"            Task delete \u003d list.deleteTaskAtIndex(val - 1);"},{"lineNumber":228,"author":{"gitId":"Sidney011100"},"content":"            return userInterface.userDeleteTask(delete, list);"},{"lineNumber":229,"author":{"gitId":"Sidney011100"},"content":"        } catch (NumberFormatException e) {"},{"lineNumber":230,"author":{"gitId":"Sidney011100"},"content":"            return \"Index Value input is not a number, try again!\";"},{"lineNumber":231,"author":{"gitId":"Sidney011100"},"content":"        }"},{"lineNumber":232,"author":{"gitId":"Sidney011100"},"content":"    }"},{"lineNumber":233,"author":{"gitId":"Sidney011100"},"content":""},{"lineNumber":234,"author":{"gitId":"Sidney011100"},"content":""},{"lineNumber":235,"author":{"gitId":"Sidney011100"},"content":"    /**"},{"lineNumber":236,"author":{"gitId":"Sidney011100"},"content":"     * Method formats input to content that user wishes to search for"},{"lineNumber":237,"author":{"gitId":"Sidney011100"},"content":"     */"},{"lineNumber":238,"author":{"gitId":"Sidney011100"},"content":"    private void contentToFind() {"},{"lineNumber":239,"author":{"gitId":"Sidney011100"},"content":"        input \u003d input.replaceFirst(\"find\", \"\");"},{"lineNumber":240,"author":{"gitId":"Sidney011100"},"content":"        input \u003d input.strip();"},{"lineNumber":241,"author":{"gitId":"Sidney011100"},"content":"    }"},{"lineNumber":242,"author":{"gitId":"Sidney011100"},"content":""},{"lineNumber":243,"author":{"gitId":"Sidney011100"},"content":""},{"lineNumber":244,"author":{"gitId":"Sidney011100"},"content":"    private String displayFindList(TaskList list) {"},{"lineNumber":245,"author":{"gitId":"Sidney011100"},"content":"        contentToFind();"},{"lineNumber":246,"author":{"gitId":"Sidney011100"},"content":"        if (input.equals(\"\")) {"},{"lineNumber":247,"author":{"gitId":"Sidney011100"},"content":"            return \"\u0027Find\u0027 was entered with no content\";"},{"lineNumber":248,"author":{"gitId":"Sidney011100"},"content":"        }"},{"lineNumber":249,"author":{"gitId":"Sidney011100"},"content":"        TaskList filteredList \u003d list.filterFind(input);"},{"lineNumber":250,"author":{"gitId":"Sidney011100"},"content":"        String result \u003d \"\";"},{"lineNumber":251,"author":{"gitId":"Sidney011100"},"content":"        if (filteredList.size() \u003d\u003d 0) {"},{"lineNumber":252,"author":{"gitId":"Sidney011100"},"content":"            result \u003d result.concat(\"No similar matched found.\");"},{"lineNumber":253,"author":{"gitId":"Sidney011100"},"content":"        } else {"},{"lineNumber":254,"author":{"gitId":"Sidney011100"},"content":"            result \u003d result.concat(userInterface.tellUserListFound());"},{"lineNumber":255,"author":{"gitId":"Sidney011100"},"content":"            result \u003d result.concat(filteredList.listAllTasks());"},{"lineNumber":256,"author":{"gitId":"Sidney011100"},"content":"        }"},{"lineNumber":257,"author":{"gitId":"Sidney011100"},"content":"        assert !result.equals(\"\") : \"Something in displayFindList went wrong for find result.\";"},{"lineNumber":258,"author":{"gitId":"Sidney011100"},"content":"        return result;"},{"lineNumber":259,"author":{"gitId":"Sidney011100"},"content":"    }"},{"lineNumber":260,"author":{"gitId":"Sidney011100"},"content":""},{"lineNumber":261,"author":{"gitId":"Sidney011100"},"content":"    private String analyseInput(TaskList list) throws Exception {"},{"lineNumber":262,"author":{"gitId":"Sidney011100"},"content":"        String result \u003d \"\";"},{"lineNumber":263,"author":{"gitId":"Sidney011100"},"content":"        if (inputContainsDone()) {"},{"lineNumber":264,"author":{"gitId":"Sidney011100"},"content":"            result \u003d markDoneAtIndex(list);"},{"lineNumber":265,"author":{"gitId":"Sidney011100"},"content":"        } else if (inputContainsTodo()) {"},{"lineNumber":266,"author":{"gitId":"Sidney011100"},"content":"            result \u003d addTodoTask(list);"},{"lineNumber":267,"author":{"gitId":"Sidney011100"},"content":"        } else if (inputContainsDeadline()) {"},{"lineNumber":268,"author":{"gitId":"Sidney011100"},"content":"            result \u003d addDeadlineTask(list);"},{"lineNumber":269,"author":{"gitId":"Sidney011100"},"content":"        } else if (inputContainsEvent()) {"},{"lineNumber":270,"author":{"gitId":"Sidney011100"},"content":"            result \u003d addEventTask(list);"},{"lineNumber":271,"author":{"gitId":"Sidney011100"},"content":"        } else if (inputContainsDelete()) {"},{"lineNumber":272,"author":{"gitId":"Sidney011100"},"content":"            result \u003d commandDelete(list);"},{"lineNumber":273,"author":{"gitId":"Sidney011100"},"content":"        } else if (inputContainsList()) {"},{"lineNumber":274,"author":{"gitId":"Sidney011100"},"content":"            result \u003d list.listAllTasks();"},{"lineNumber":275,"author":{"gitId":"Sidney011100"},"content":"        } else if (inputContainsFind()) {"},{"lineNumber":276,"author":{"gitId":"Sidney011100"},"content":"            result \u003d displayFindList(list);"},{"lineNumber":277,"author":{"gitId":"Sidney011100"},"content":"        } else {"},{"lineNumber":278,"author":{"gitId":"Sidney011100"},"content":"            result \u003d \"Please enter a valid command!\";"},{"lineNumber":279,"author":{"gitId":"Sidney011100"},"content":"        }"},{"lineNumber":280,"author":{"gitId":"Sidney011100"},"content":"        return result;"},{"lineNumber":281,"author":{"gitId":"Sidney011100"},"content":"    }"},{"lineNumber":282,"author":{"gitId":"Sidney011100"},"content":"}"}],"authorContributionMap":{"Sidney011100":282}},{"path":"src/main/java/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Sidney011100"},"content":"import java.io.File;"},{"lineNumber":2,"author":{"gitId":"Sidney011100"},"content":"import java.io.FileNotFoundException;"},{"lineNumber":3,"author":{"gitId":"Sidney011100"},"content":"import java.io.FileWriter;"},{"lineNumber":4,"author":{"gitId":"Sidney011100"},"content":"import java.io.IOException;"},{"lineNumber":5,"author":{"gitId":"Sidney011100"},"content":"import java.nio.file.Files;"},{"lineNumber":6,"author":{"gitId":"Sidney011100"},"content":"import java.nio.file.Paths;"},{"lineNumber":7,"author":{"gitId":"Sidney011100"},"content":"import java.util.Scanner;"},{"lineNumber":8,"author":{"gitId":"Sidney011100"},"content":""},{"lineNumber":9,"author":{"gitId":"Sidney011100"},"content":"public class Storage {"},{"lineNumber":10,"author":{"gitId":"Sidney011100"},"content":"    private File file;"},{"lineNumber":11,"author":{"gitId":"Sidney011100"},"content":"    private final String dirPath \u003d System.getProperty(\"user.dir\") + \"/data\";"},{"lineNumber":12,"author":{"gitId":"Sidney011100"},"content":"    private final String filePath \u003d System.getProperty(\"user.dir\") + \"/data/duke.txt\";"},{"lineNumber":13,"author":{"gitId":"Sidney011100"},"content":""},{"lineNumber":14,"author":{"gitId":"Sidney011100"},"content":"    public Storage() {"},{"lineNumber":15,"author":{"gitId":"Sidney011100"},"content":"        this.file \u003d new File(System.getProperty(\"user.dir\") + \"/data/duke.txt\");"},{"lineNumber":16,"author":{"gitId":"Sidney011100"},"content":"    }"},{"lineNumber":17,"author":{"gitId":"Sidney011100"},"content":""},{"lineNumber":18,"author":{"gitId":"Sidney011100"},"content":"    private void print(String toString) {"},{"lineNumber":19,"author":{"gitId":"Sidney011100"},"content":"    }"},{"lineNumber":20,"author":{"gitId":"Sidney011100"},"content":""},{"lineNumber":21,"author":{"gitId":"Sidney011100"},"content":"    public boolean isSavedHistory() {"},{"lineNumber":22,"author":{"gitId":"Sidney011100"},"content":"        return this.file.exists();"},{"lineNumber":23,"author":{"gitId":"Sidney011100"},"content":"    }"},{"lineNumber":24,"author":{"gitId":"Sidney011100"},"content":""},{"lineNumber":25,"author":{"gitId":"Sidney011100"},"content":"    /**"},{"lineNumber":26,"author":{"gitId":"Sidney011100"},"content":"     * Takes in an empty TaskList and adds the stored tasks into it."},{"lineNumber":27,"author":{"gitId":"Sidney011100"},"content":"     *"},{"lineNumber":28,"author":{"gitId":"Sidney011100"},"content":"     * @param tasklist"},{"lineNumber":29,"author":{"gitId":"Sidney011100"},"content":"     * @throws FileNotFoundException"},{"lineNumber":30,"author":{"gitId":"Sidney011100"},"content":"     */"},{"lineNumber":31,"author":{"gitId":"Sidney011100"},"content":"    public void initialise(TaskList tasklist) throws FileNotFoundException {"},{"lineNumber":32,"author":{"gitId":"Sidney011100"},"content":"        if (isSavedHistory()) {"},{"lineNumber":33,"author":{"gitId":"Sidney011100"},"content":"            Scanner s \u003d new Scanner(this.file);"},{"lineNumber":34,"author":{"gitId":"Sidney011100"},"content":"            while (s.hasNext()) {"},{"lineNumber":35,"author":{"gitId":"Sidney011100"},"content":"                String current \u003d s.nextLine().toLowerCase();"},{"lineNumber":36,"author":{"gitId":"Sidney011100"},"content":"                assert current !\u003d null : \"current at initialise in Storage\";"},{"lineNumber":37,"author":{"gitId":"Sidney011100"},"content":"                if (current.contains(\"todo\")) {"},{"lineNumber":38,"author":{"gitId":"Sidney011100"},"content":"                    Task task \u003d Todo.readTaskFromStorage(current);"},{"lineNumber":39,"author":{"gitId":"Sidney011100"},"content":"                    tasklist.add(task);"},{"lineNumber":40,"author":{"gitId":"Sidney011100"},"content":"                } else if (current.contains(\"deadline\")) {"},{"lineNumber":41,"author":{"gitId":"Sidney011100"},"content":"                    tasklist.add(Deadline.readTaskFromStorage(current));"},{"lineNumber":42,"author":{"gitId":"Sidney011100"},"content":"                } else if (current.contains(\"event\")) {"},{"lineNumber":43,"author":{"gitId":"Sidney011100"},"content":"                    tasklist.add(Event.readTaskFromStorage(current));"},{"lineNumber":44,"author":{"gitId":"Sidney011100"},"content":"                } else {"},{"lineNumber":45,"author":{"gitId":"Sidney011100"},"content":"                    if (s.hasNext()) {"},{"lineNumber":46,"author":{"gitId":"Sidney011100"},"content":"                        current \u003d s.nextLine();"},{"lineNumber":47,"author":{"gitId":"Sidney011100"},"content":"                    } else {"},{"lineNumber":48,"author":{"gitId":"Sidney011100"},"content":"                        throw new FileNotFoundException(\"History saved corrupted\");"},{"lineNumber":49,"author":{"gitId":"Sidney011100"},"content":"                    }"},{"lineNumber":50,"author":{"gitId":"Sidney011100"},"content":"                }"},{"lineNumber":51,"author":{"gitId":"Sidney011100"},"content":"            }"},{"lineNumber":52,"author":{"gitId":"Sidney011100"},"content":"            s.close();"},{"lineNumber":53,"author":{"gitId":"Sidney011100"},"content":"        } else {"},{"lineNumber":54,"author":{"gitId":"Sidney011100"},"content":"            this.file.mkdirs();"},{"lineNumber":55,"author":{"gitId":"Sidney011100"},"content":"        }"},{"lineNumber":56,"author":{"gitId":"Sidney011100"},"content":"    }"},{"lineNumber":57,"author":{"gitId":"Sidney011100"},"content":""},{"lineNumber":58,"author":{"gitId":"Sidney011100"},"content":"    /**"},{"lineNumber":59,"author":{"gitId":"Sidney011100"},"content":"     * Takes a TaskList that has been added with various Task to store those tasks"},{"lineNumber":60,"author":{"gitId":"Sidney011100"},"content":"     *"},{"lineNumber":61,"author":{"gitId":"Sidney011100"},"content":"     * @param tasklist"},{"lineNumber":62,"author":{"gitId":"Sidney011100"},"content":"     * @throws IOException"},{"lineNumber":63,"author":{"gitId":"Sidney011100"},"content":"     */"},{"lineNumber":64,"author":{"gitId":"Sidney011100"},"content":"    public void saveHistory(TaskList tasklist) throws IOException {"},{"lineNumber":65,"author":{"gitId":"Sidney011100"},"content":"        File file \u003d new File(filePath);"},{"lineNumber":66,"author":{"gitId":"Sidney011100"},"content":"        File dir \u003d new File(dirPath);"},{"lineNumber":67,"author":{"gitId":"Sidney011100"},"content":"        handleNonExistentFiles(file, dir);"},{"lineNumber":68,"author":{"gitId":"Sidney011100"},"content":"        FileWriter fw \u003d new FileWriter(file, false);"},{"lineNumber":69,"author":{"gitId":"Sidney011100"},"content":"        tasklist.forEach(x -\u003e {"},{"lineNumber":70,"author":{"gitId":"Sidney011100"},"content":"            try {"},{"lineNumber":71,"author":{"gitId":"Sidney011100"},"content":"                fw.write(x.saveInStorageAs() + \"\\n\");"},{"lineNumber":72,"author":{"gitId":"Sidney011100"},"content":"            } catch (IOException e) {"},{"lineNumber":73,"author":{"gitId":"Sidney011100"},"content":"                e.printStackTrace();"},{"lineNumber":74,"author":{"gitId":"Sidney011100"},"content":"            }"},{"lineNumber":75,"author":{"gitId":"Sidney011100"},"content":"        });"},{"lineNumber":76,"author":{"gitId":"Sidney011100"},"content":"        fw.close();"},{"lineNumber":77,"author":{"gitId":"Sidney011100"},"content":"    }"},{"lineNumber":78,"author":{"gitId":"Sidney011100"},"content":""},{"lineNumber":79,"author":{"gitId":"Sidney011100"},"content":"    private void handleNonExistentFiles(File file, File dir) throws IOException {"},{"lineNumber":80,"author":{"gitId":"Sidney011100"},"content":"        if (!Files.isDirectory(Paths.get(dirPath))) {"},{"lineNumber":81,"author":{"gitId":"Sidney011100"},"content":"            // Create data folder and duke.txt if do not exist"},{"lineNumber":82,"author":{"gitId":"Sidney011100"},"content":"            dir.mkdir();"},{"lineNumber":83,"author":{"gitId":"Sidney011100"},"content":"            assert Files.isDirectory(Paths.get(dirPath)) : \"Directory does not exist\";"},{"lineNumber":84,"author":{"gitId":"Sidney011100"},"content":"            file.createNewFile();"},{"lineNumber":85,"author":{"gitId":"Sidney011100"},"content":"        } else if (!file.exists()) {"},{"lineNumber":86,"author":{"gitId":"Sidney011100"},"content":"            // Create duke.txt if do not exist"},{"lineNumber":87,"author":{"gitId":"Sidney011100"},"content":"            file.createNewFile();"},{"lineNumber":88,"author":{"gitId":"Sidney011100"},"content":"        }"},{"lineNumber":89,"author":{"gitId":"Sidney011100"},"content":"    }"},{"lineNumber":90,"author":{"gitId":"Sidney011100"},"content":"}"}],"authorContributionMap":{"Sidney011100":90}},{"path":"src/main/java/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Sidney011100"},"content":"public abstract class Task {"},{"lineNumber":2,"author":{"gitId":"Sidney011100"},"content":"    private String task;"},{"lineNumber":3,"author":{"gitId":"Sidney011100"},"content":"    private Boolean completed;"},{"lineNumber":4,"author":{"gitId":"Sidney011100"},"content":""},{"lineNumber":5,"author":{"gitId":"Sidney011100"},"content":"    Task(String t) {"},{"lineNumber":6,"author":{"gitId":"Sidney011100"},"content":"        this.task \u003d t;"},{"lineNumber":7,"author":{"gitId":"Sidney011100"},"content":"        this.completed \u003d false;"},{"lineNumber":8,"author":{"gitId":"Sidney011100"},"content":"    }"},{"lineNumber":9,"author":{"gitId":"Sidney011100"},"content":""},{"lineNumber":10,"author":{"gitId":"Sidney011100"},"content":"    Task(String t, Boolean completed) {"},{"lineNumber":11,"author":{"gitId":"Sidney011100"},"content":"        this.task \u003d t;"},{"lineNumber":12,"author":{"gitId":"Sidney011100"},"content":"        this.completed \u003d completed;"},{"lineNumber":13,"author":{"gitId":"Sidney011100"},"content":"    }"},{"lineNumber":14,"author":{"gitId":"Sidney011100"},"content":""},{"lineNumber":15,"author":{"gitId":"Sidney011100"},"content":"    protected boolean getCompleted() {"},{"lineNumber":16,"author":{"gitId":"Sidney011100"},"content":"        return this.completed;"},{"lineNumber":17,"author":{"gitId":"Sidney011100"},"content":"    }"},{"lineNumber":18,"author":{"gitId":"Sidney011100"},"content":""},{"lineNumber":19,"author":{"gitId":"Sidney011100"},"content":"    protected String getTask() {"},{"lineNumber":20,"author":{"gitId":"Sidney011100"},"content":"        return this.task;"},{"lineNumber":21,"author":{"gitId":"Sidney011100"},"content":"    }"},{"lineNumber":22,"author":{"gitId":"Sidney011100"},"content":""},{"lineNumber":23,"author":{"gitId":"Sidney011100"},"content":"    public void setCompleted() {"},{"lineNumber":24,"author":{"gitId":"Sidney011100"},"content":"        this.completed \u003d true;"},{"lineNumber":25,"author":{"gitId":"Sidney011100"},"content":"    }"},{"lineNumber":26,"author":{"gitId":"Sidney011100"},"content":""},{"lineNumber":27,"author":{"gitId":"Sidney011100"},"content":"    /**"},{"lineNumber":28,"author":{"gitId":"Sidney011100"},"content":"     * Decides how to present the box based on"},{"lineNumber":29,"author":{"gitId":"Sidney011100"},"content":"     * if the task is completed"},{"lineNumber":30,"author":{"gitId":"Sidney011100"},"content":"     * @return string box that is checked or unchecked"},{"lineNumber":31,"author":{"gitId":"Sidney011100"},"content":"     */"},{"lineNumber":32,"author":{"gitId":"Sidney011100"},"content":"    public String completedBox() {"},{"lineNumber":33,"author":{"gitId":"Sidney011100"},"content":"        if (this.getCompleted()) {"},{"lineNumber":34,"author":{"gitId":"Sidney011100"},"content":"            return \"[X] \";"},{"lineNumber":35,"author":{"gitId":"Sidney011100"},"content":"        } else {"},{"lineNumber":36,"author":{"gitId":"Sidney011100"},"content":"            return \"[ ] \";"},{"lineNumber":37,"author":{"gitId":"Sidney011100"},"content":"        }"},{"lineNumber":38,"author":{"gitId":"Sidney011100"},"content":"    }"},{"lineNumber":39,"author":{"gitId":"Sidney011100"},"content":""},{"lineNumber":40,"author":{"gitId":"Sidney011100"},"content":"    boolean doesTaskMatchKeyword(String keyword) {"},{"lineNumber":41,"author":{"gitId":"Sidney011100"},"content":"        return this.getTask().contains(keyword);"},{"lineNumber":42,"author":{"gitId":"Sidney011100"},"content":"    }"},{"lineNumber":43,"author":{"gitId":"Sidney011100"},"content":""},{"lineNumber":44,"author":{"gitId":"Sidney011100"},"content":"    /**"},{"lineNumber":45,"author":{"gitId":"Sidney011100"},"content":"     * Format Task into format to be saved into storage"},{"lineNumber":46,"author":{"gitId":"Sidney011100"},"content":"     * so that user can view Task on next return"},{"lineNumber":47,"author":{"gitId":"Sidney011100"},"content":"     * @return"},{"lineNumber":48,"author":{"gitId":"Sidney011100"},"content":"     */"},{"lineNumber":49,"author":{"gitId":"Sidney011100"},"content":"    public String saveInStorageAs() {"},{"lineNumber":50,"author":{"gitId":"Sidney011100"},"content":"        return this.getClass().toString() + \", \""},{"lineNumber":51,"author":{"gitId":"Sidney011100"},"content":"                + this.getCompleted() + \", \" + this.getTask();"},{"lineNumber":52,"author":{"gitId":"Sidney011100"},"content":"    }"},{"lineNumber":53,"author":{"gitId":"Sidney011100"},"content":""},{"lineNumber":54,"author":{"gitId":"Sidney011100"},"content":"    @Override"},{"lineNumber":55,"author":{"gitId":"Sidney011100"},"content":"    public String toString() {"},{"lineNumber":56,"author":{"gitId":"Sidney011100"},"content":"        return this.completedBox() + this.getTask();"},{"lineNumber":57,"author":{"gitId":"Sidney011100"},"content":"    }"},{"lineNumber":58,"author":{"gitId":"Sidney011100"},"content":"}"}],"authorContributionMap":{"Sidney011100":58}},{"path":"src/main/java/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Sidney011100"},"content":"import java.time.LocalDateTime;"},{"lineNumber":2,"author":{"gitId":"Sidney011100"},"content":"import java.util.ArrayList;"},{"lineNumber":3,"author":{"gitId":"Sidney011100"},"content":"import java.util.concurrent.atomic.AtomicBoolean;"},{"lineNumber":4,"author":{"gitId":"Sidney011100"},"content":"import java.util.function.Consumer;"},{"lineNumber":5,"author":{"gitId":"Sidney011100"},"content":""},{"lineNumber":6,"author":{"gitId":"Sidney011100"},"content":"public class TaskList {"},{"lineNumber":7,"author":{"gitId":"Sidney011100"},"content":"    private ArrayList\u003cTask\u003e list;"},{"lineNumber":8,"author":{"gitId":"Sidney011100"},"content":""},{"lineNumber":9,"author":{"gitId":"Sidney011100"},"content":"    TaskList() {"},{"lineNumber":10,"author":{"gitId":"Sidney011100"},"content":"        this.list \u003d new ArrayList\u003cTask\u003e();"},{"lineNumber":11,"author":{"gitId":"Sidney011100"},"content":"    }"},{"lineNumber":12,"author":{"gitId":"Sidney011100"},"content":""},{"lineNumber":13,"author":{"gitId":"Sidney011100"},"content":"    protected ArrayList\u003cTask\u003e getList() {"},{"lineNumber":14,"author":{"gitId":"Sidney011100"},"content":"        return this.list;"},{"lineNumber":15,"author":{"gitId":"Sidney011100"},"content":"    }"},{"lineNumber":16,"author":{"gitId":"Sidney011100"},"content":""},{"lineNumber":17,"author":{"gitId":"Sidney011100"},"content":"    public void add(Task task) {"},{"lineNumber":18,"author":{"gitId":"Sidney011100"},"content":"        this.list.add(task);"},{"lineNumber":19,"author":{"gitId":"Sidney011100"},"content":"    }"},{"lineNumber":20,"author":{"gitId":"Sidney011100"},"content":""},{"lineNumber":21,"author":{"gitId":"Sidney011100"},"content":"    /**"},{"lineNumber":22,"author":{"gitId":"Sidney011100"},"content":"     * Adds Todo into TaskList when it is given a string that is the Todo task attribute"},{"lineNumber":23,"author":{"gitId":"Sidney011100"},"content":"     * returns the added Todo"},{"lineNumber":24,"author":{"gitId":"Sidney011100"},"content":"     * @param task"},{"lineNumber":25,"author":{"gitId":"Sidney011100"},"content":"     * @return Todo that is added into TaskList"},{"lineNumber":26,"author":{"gitId":"Sidney011100"},"content":"     */"},{"lineNumber":27,"author":{"gitId":"Sidney011100"},"content":"    protected Todo addTodo(String task) {"},{"lineNumber":28,"author":{"gitId":"Sidney011100"},"content":"        Todo todoToAddInList \u003d createToDo(task);"},{"lineNumber":29,"author":{"gitId":"Sidney011100"},"content":"        if (isDuplicateAbsent(todoToAddInList)) {"},{"lineNumber":30,"author":{"gitId":"Sidney011100"},"content":"            this.list.add(new Todo(task));"},{"lineNumber":31,"author":{"gitId":"Sidney011100"},"content":"        }"},{"lineNumber":32,"author":{"gitId":"Sidney011100"},"content":"        return todoToAddInList;"},{"lineNumber":33,"author":{"gitId":"Sidney011100"},"content":"    }"},{"lineNumber":34,"author":{"gitId":"Sidney011100"},"content":""},{"lineNumber":35,"author":{"gitId":"Sidney011100"},"content":"    /**"},{"lineNumber":36,"author":{"gitId":"Sidney011100"},"content":"     * Adds Deadline into TaskList when it is given a string that is the Deadline task attribute"},{"lineNumber":37,"author":{"gitId":"Sidney011100"},"content":"     * returns the added Deadline"},{"lineNumber":38,"author":{"gitId":"Sidney011100"},"content":"     * @param task of Deadline"},{"lineNumber":39,"author":{"gitId":"Sidney011100"},"content":"     * @param date of Deadline"},{"lineNumber":40,"author":{"gitId":"Sidney011100"},"content":"     * @return Deadline that is added into TaskList"},{"lineNumber":41,"author":{"gitId":"Sidney011100"},"content":"     */"},{"lineNumber":42,"author":{"gitId":"Sidney011100"},"content":"    public Deadline addDeadline(String task, LocalDateTime date) {"},{"lineNumber":43,"author":{"gitId":"Sidney011100"},"content":"        Deadline deadlineToAddInList \u003d createDeadline(task, date);"},{"lineNumber":44,"author":{"gitId":"Sidney011100"},"content":"        if (isDuplicateAbsent(deadlineToAddInList)) {"},{"lineNumber":45,"author":{"gitId":"Sidney011100"},"content":"            this.list.add(new Deadline(task, date));"},{"lineNumber":46,"author":{"gitId":"Sidney011100"},"content":"        }"},{"lineNumber":47,"author":{"gitId":"Sidney011100"},"content":"        return deadlineToAddInList;"},{"lineNumber":48,"author":{"gitId":"Sidney011100"},"content":"    }"},{"lineNumber":49,"author":{"gitId":"Sidney011100"},"content":""},{"lineNumber":50,"author":{"gitId":"Sidney011100"},"content":"    /**"},{"lineNumber":51,"author":{"gitId":"Sidney011100"},"content":"     * Adds Event into TaskList when it is given a string that is the Event task attribute"},{"lineNumber":52,"author":{"gitId":"Sidney011100"},"content":"     * returns the added Event"},{"lineNumber":53,"author":{"gitId":"Sidney011100"},"content":"     * @param task of Event"},{"lineNumber":54,"author":{"gitId":"Sidney011100"},"content":"     * @param date of Event"},{"lineNumber":55,"author":{"gitId":"Sidney011100"},"content":"     * @return Event that is added into TaskList"},{"lineNumber":56,"author":{"gitId":"Sidney011100"},"content":"     */"},{"lineNumber":57,"author":{"gitId":"Sidney011100"},"content":"    public Event addEvent(String task, LocalDateTime date) {"},{"lineNumber":58,"author":{"gitId":"Sidney011100"},"content":"        Event eventToAddInList \u003d createEvent(task, date);"},{"lineNumber":59,"author":{"gitId":"Sidney011100"},"content":"        if (isDuplicateAbsent(eventToAddInList)) {"},{"lineNumber":60,"author":{"gitId":"Sidney011100"},"content":"            this.list.add(new Event(task, date));"},{"lineNumber":61,"author":{"gitId":"Sidney011100"},"content":"        }"},{"lineNumber":62,"author":{"gitId":"Sidney011100"},"content":"        return eventToAddInList;"},{"lineNumber":63,"author":{"gitId":"Sidney011100"},"content":"    }"},{"lineNumber":64,"author":{"gitId":"Sidney011100"},"content":""},{"lineNumber":65,"author":{"gitId":"Sidney011100"},"content":"    /**"},{"lineNumber":66,"author":{"gitId":"Sidney011100"},"content":"     * Check if TaskList has a duplicate of Task y"},{"lineNumber":67,"author":{"gitId":"Sidney011100"},"content":"     * @param y task to check"},{"lineNumber":68,"author":{"gitId":"Sidney011100"},"content":"     * @return boolean"},{"lineNumber":69,"author":{"gitId":"Sidney011100"},"content":"     */"},{"lineNumber":70,"author":{"gitId":"Sidney011100"},"content":"    public boolean isDuplicateAbsent (Task y) {"},{"lineNumber":71,"author":{"gitId":"Sidney011100"},"content":"        AtomicBoolean isDuplicateAbsent \u003d new AtomicBoolean(true);"},{"lineNumber":72,"author":{"gitId":"Sidney011100"},"content":"        this.forEach(x -\u003e {"},{"lineNumber":73,"author":{"gitId":"Sidney011100"},"content":"            if (x.getTask().equals(y.getTask())) {"},{"lineNumber":74,"author":{"gitId":"Sidney011100"},"content":"                isDuplicateAbsent.set(false);"},{"lineNumber":75,"author":{"gitId":"Sidney011100"},"content":"            }"},{"lineNumber":76,"author":{"gitId":"Sidney011100"},"content":"        });"},{"lineNumber":77,"author":{"gitId":"Sidney011100"},"content":"        return isDuplicateAbsent.get();"},{"lineNumber":78,"author":{"gitId":"Sidney011100"},"content":"    }"},{"lineNumber":79,"author":{"gitId":"Sidney011100"},"content":""},{"lineNumber":80,"author":{"gitId":"Sidney011100"},"content":"    public Todo createToDo(String task) {"},{"lineNumber":81,"author":{"gitId":"Sidney011100"},"content":"        return new Todo(task);"},{"lineNumber":82,"author":{"gitId":"Sidney011100"},"content":"    }"},{"lineNumber":83,"author":{"gitId":"Sidney011100"},"content":""},{"lineNumber":84,"author":{"gitId":"Sidney011100"},"content":"    public Deadline createDeadline(String task, LocalDateTime date) {"},{"lineNumber":85,"author":{"gitId":"Sidney011100"},"content":"        return new Deadline(task, date);"},{"lineNumber":86,"author":{"gitId":"Sidney011100"},"content":"    }"},{"lineNumber":87,"author":{"gitId":"Sidney011100"},"content":""},{"lineNumber":88,"author":{"gitId":"Sidney011100"},"content":"    public Event createEvent(String task, LocalDateTime date) {"},{"lineNumber":89,"author":{"gitId":"Sidney011100"},"content":"        return new Event(task, date);"},{"lineNumber":90,"author":{"gitId":"Sidney011100"},"content":"    }"},{"lineNumber":91,"author":{"gitId":"Sidney011100"},"content":""},{"lineNumber":92,"author":{"gitId":"Sidney011100"},"content":"    /**"},{"lineNumber":93,"author":{"gitId":"Sidney011100"},"content":"     * Deletes Task located at provided index"},{"lineNumber":94,"author":{"gitId":"Sidney011100"},"content":"     * @param index"},{"lineNumber":95,"author":{"gitId":"Sidney011100"},"content":"     * @return Task that was deleted"},{"lineNumber":96,"author":{"gitId":"Sidney011100"},"content":"     */"},{"lineNumber":97,"author":{"gitId":"Sidney011100"},"content":"    public Task deleteTaskAtIndex(int index) {"},{"lineNumber":98,"author":{"gitId":"Sidney011100"},"content":"        Task toDelete \u003d this.list.get(index);"},{"lineNumber":99,"author":{"gitId":"Sidney011100"},"content":"        this.list.remove(index);"},{"lineNumber":100,"author":{"gitId":"Sidney011100"},"content":"        return toDelete;"},{"lineNumber":101,"author":{"gitId":"Sidney011100"},"content":"    }"},{"lineNumber":102,"author":{"gitId":"Sidney011100"},"content":""},{"lineNumber":103,"author":{"gitId":"Sidney011100"},"content":"    public int size() {"},{"lineNumber":104,"author":{"gitId":"Sidney011100"},"content":"        return this.list.size();"},{"lineNumber":105,"author":{"gitId":"Sidney011100"},"content":"    }"},{"lineNumber":106,"author":{"gitId":"Sidney011100"},"content":""},{"lineNumber":107,"author":{"gitId":"Sidney011100"},"content":"    public String write(int index) {"},{"lineNumber":108,"author":{"gitId":"Sidney011100"},"content":"        return this.list.get(index).saveInStorageAs();"},{"lineNumber":109,"author":{"gitId":"Sidney011100"},"content":"    }"},{"lineNumber":110,"author":{"gitId":"Sidney011100"},"content":""},{"lineNumber":111,"author":{"gitId":"Sidney011100"},"content":"    public void markDone(int index) {"},{"lineNumber":112,"author":{"gitId":"Sidney011100"},"content":"        this.list.get(index).setCompleted();"},{"lineNumber":113,"author":{"gitId":"Sidney011100"},"content":"    }"},{"lineNumber":114,"author":{"gitId":"Sidney011100"},"content":""},{"lineNumber":115,"author":{"gitId":"Sidney011100"},"content":"    /**"},{"lineNumber":116,"author":{"gitId":"Sidney011100"},"content":"     * Returns Task at given index"},{"lineNumber":117,"author":{"gitId":"Sidney011100"},"content":"     * @param index"},{"lineNumber":118,"author":{"gitId":"Sidney011100"},"content":"     * @return Task at index"},{"lineNumber":119,"author":{"gitId":"Sidney011100"},"content":"     */"},{"lineNumber":120,"author":{"gitId":"Sidney011100"},"content":"    public Task getTaskAtIndex(int index) {"},{"lineNumber":121,"author":{"gitId":"Sidney011100"},"content":"        return this.list.get(index);"},{"lineNumber":122,"author":{"gitId":"Sidney011100"},"content":"    }"},{"lineNumber":123,"author":{"gitId":"Sidney011100"},"content":""},{"lineNumber":124,"author":{"gitId":"Sidney011100"},"content":"    public Task getLastAddedTask() {"},{"lineNumber":125,"author":{"gitId":"Sidney011100"},"content":"        return this.list.get(this.list.size() - 1);"},{"lineNumber":126,"author":{"gitId":"Sidney011100"},"content":"    }"},{"lineNumber":127,"author":{"gitId":"Sidney011100"},"content":""},{"lineNumber":128,"author":{"gitId":"Sidney011100"},"content":"    public void forEach(Consumer\u003cTask\u003e t) {"},{"lineNumber":129,"author":{"gitId":"Sidney011100"},"content":"        list.forEach(t);"},{"lineNumber":130,"author":{"gitId":"Sidney011100"},"content":"    }"},{"lineNumber":131,"author":{"gitId":"Sidney011100"},"content":""},{"lineNumber":132,"author":{"gitId":"Sidney011100"},"content":"    /**"},{"lineNumber":133,"author":{"gitId":"Sidney011100"},"content":"     * Prints the list of all task"},{"lineNumber":134,"author":{"gitId":"Sidney011100"},"content":"     */"},{"lineNumber":135,"author":{"gitId":"Sidney011100"},"content":"    public String listAllTasks() {"},{"lineNumber":136,"author":{"gitId":"Sidney011100"},"content":"        String result \u003d \"\";"},{"lineNumber":137,"author":{"gitId":"Sidney011100"},"content":"        if (list.size() \u003d\u003d 0) {"},{"lineNumber":138,"author":{"gitId":"Sidney011100"},"content":"            result \u003d result.concat(\"You have 0 tasks in your list. \");"},{"lineNumber":139,"author":{"gitId":"Sidney011100"},"content":"        } else {"},{"lineNumber":140,"author":{"gitId":"Sidney011100"},"content":"            result \u003d result.concat(\"Here are the tasks in your list:\\n\");"},{"lineNumber":141,"author":{"gitId":"Sidney011100"},"content":"            for (int i \u003d 0; i \u003c list.size(); i++) {"},{"lineNumber":142,"author":{"gitId":"Sidney011100"},"content":"                Task current \u003d list.get(i);"},{"lineNumber":143,"author":{"gitId":"Sidney011100"},"content":"                result \u003d result.concat(i + 1 + \". \" + current + \"\\n\");"},{"lineNumber":144,"author":{"gitId":"Sidney011100"},"content":"            }"},{"lineNumber":145,"author":{"gitId":"Sidney011100"},"content":"        }"},{"lineNumber":146,"author":{"gitId":"Sidney011100"},"content":"        return result;"},{"lineNumber":147,"author":{"gitId":"Sidney011100"},"content":"    }"},{"lineNumber":148,"author":{"gitId":"Sidney011100"},"content":""},{"lineNumber":149,"author":{"gitId":"Sidney011100"},"content":"    /**"},{"lineNumber":150,"author":{"gitId":"Sidney011100"},"content":"     * Finds all the Tasks in the list that have the keyword input"},{"lineNumber":151,"author":{"gitId":"Sidney011100"},"content":"     * @param keyword"},{"lineNumber":152,"author":{"gitId":"Sidney011100"},"content":"     * @return TaskList of Tasks that contains the keyword"},{"lineNumber":153,"author":{"gitId":"Sidney011100"},"content":"     */"},{"lineNumber":154,"author":{"gitId":"Sidney011100"},"content":"    public TaskList filterFind(String keyword) {"},{"lineNumber":155,"author":{"gitId":"Sidney011100"},"content":"        TaskList filteredList \u003d new TaskList();"},{"lineNumber":156,"author":{"gitId":"Sidney011100"},"content":"        this.forEach(x -\u003e {"},{"lineNumber":157,"author":{"gitId":"Sidney011100"},"content":"            if (x.doesTaskMatchKeyword(keyword)) {"},{"lineNumber":158,"author":{"gitId":"Sidney011100"},"content":"                filteredList.add(x);"},{"lineNumber":159,"author":{"gitId":"Sidney011100"},"content":"            }"},{"lineNumber":160,"author":{"gitId":"Sidney011100"},"content":"        });"},{"lineNumber":161,"author":{"gitId":"Sidney011100"},"content":"        return filteredList;"},{"lineNumber":162,"author":{"gitId":"Sidney011100"},"content":"    }"},{"lineNumber":163,"author":{"gitId":"Sidney011100"},"content":"}"}],"authorContributionMap":{"Sidney011100":163}},{"path":"src/main/java/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Sidney011100"},"content":"class Todo extends Task {"},{"lineNumber":2,"author":{"gitId":"Sidney011100"},"content":"    Todo(String t) {"},{"lineNumber":3,"author":{"gitId":"Sidney011100"},"content":"        super(t);"},{"lineNumber":4,"author":{"gitId":"Sidney011100"},"content":"    }"},{"lineNumber":5,"author":{"gitId":"Sidney011100"},"content":""},{"lineNumber":6,"author":{"gitId":"Sidney011100"},"content":"    Todo(String task, boolean completed) {"},{"lineNumber":7,"author":{"gitId":"Sidney011100"},"content":"        super(task, completed);"},{"lineNumber":8,"author":{"gitId":"Sidney011100"},"content":"    }"},{"lineNumber":9,"author":{"gitId":"Sidney011100"},"content":""},{"lineNumber":10,"author":{"gitId":"Sidney011100"},"content":"    public static Todo readTaskFromStorage(String input) {"},{"lineNumber":11,"author":{"gitId":"Sidney011100"},"content":"        String[] list \u003d input.split(\", \", 3);"},{"lineNumber":12,"author":{"gitId":"Sidney011100"},"content":"        assert list.length \u003d\u003d 3 : \"Todo was stored from previous user visit is corrupted.\";"},{"lineNumber":13,"author":{"gitId":"Sidney011100"},"content":"        Todo result \u003d new Todo(list[2], Boolean.parseBoolean(list[1]));"},{"lineNumber":14,"author":{"gitId":"Sidney011100"},"content":"        return result;"},{"lineNumber":15,"author":{"gitId":"Sidney011100"},"content":"    }"},{"lineNumber":16,"author":{"gitId":"Sidney011100"},"content":""},{"lineNumber":17,"author":{"gitId":"Sidney011100"},"content":"    public String saveInStorageAs() {"},{"lineNumber":18,"author":{"gitId":"Sidney011100"},"content":"        return this.getClass().toString() + \", \" + this.getCompleted() + \", \" + this.getTask();"},{"lineNumber":19,"author":{"gitId":"Sidney011100"},"content":"    }"},{"lineNumber":20,"author":{"gitId":"Sidney011100"},"content":""},{"lineNumber":21,"author":{"gitId":"Sidney011100"},"content":"    @Override"},{"lineNumber":22,"author":{"gitId":"Sidney011100"},"content":"    public String toString() {"},{"lineNumber":23,"author":{"gitId":"Sidney011100"},"content":"        return \"[T]\" + this.completedBox() + this.getTask();"},{"lineNumber":24,"author":{"gitId":"Sidney011100"},"content":"    }"},{"lineNumber":25,"author":{"gitId":"Sidney011100"},"content":"}"}],"authorContributionMap":{"Sidney011100":25}},{"path":"src/main/java/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Sidney011100"},"content":"import javafx.scene.control.Label;"},{"lineNumber":2,"author":{"gitId":"Sidney011100"},"content":"import javafx.scene.image.Image;"},{"lineNumber":3,"author":{"gitId":"Sidney011100"},"content":""},{"lineNumber":4,"author":{"gitId":"Sidney011100"},"content":"public class Ui {"},{"lineNumber":5,"author":{"gitId":"Sidney011100"},"content":"    private final String greet \u003d \"Hello! I\u0027m Duke \\n What can I do for you?\";"},{"lineNumber":6,"author":{"gitId":"Sidney011100"},"content":"    private final String bye \u003d \"Bye. Hope to see you again soon!\";"},{"lineNumber":7,"author":{"gitId":"Sidney011100"},"content":""},{"lineNumber":8,"author":{"gitId":"Sidney011100"},"content":"    private Label botText;"},{"lineNumber":9,"author":{"gitId":"Sidney011100"},"content":"    private final Image duke \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaDuke.png\"));"},{"lineNumber":10,"author":{"gitId":"Sidney011100"},"content":""},{"lineNumber":11,"author":{"gitId":"Sidney011100"},"content":"    Ui() {"},{"lineNumber":12,"author":{"gitId":"Sidney011100"},"content":""},{"lineNumber":13,"author":{"gitId":"Sidney011100"},"content":"    }"},{"lineNumber":14,"author":{"gitId":"Sidney011100"},"content":""},{"lineNumber":15,"author":{"gitId":"Sidney011100"},"content":"    public String welcomeUser() {"},{"lineNumber":16,"author":{"gitId":"Sidney011100"},"content":"        return greet;"},{"lineNumber":17,"author":{"gitId":"Sidney011100"},"content":"    }"},{"lineNumber":18,"author":{"gitId":"Sidney011100"},"content":""},{"lineNumber":19,"author":{"gitId":"Sidney011100"},"content":"    public String userLeaving() {"},{"lineNumber":20,"author":{"gitId":"Sidney011100"},"content":"        return bye;"},{"lineNumber":21,"author":{"gitId":"Sidney011100"},"content":"    }"},{"lineNumber":22,"author":{"gitId":"Sidney011100"},"content":""},{"lineNumber":23,"author":{"gitId":"Sidney011100"},"content":"    /**"},{"lineNumber":24,"author":{"gitId":"Sidney011100"},"content":"     * String to print when a user is done with the given task in the list."},{"lineNumber":25,"author":{"gitId":"Sidney011100"},"content":"     * @param task"},{"lineNumber":26,"author":{"gitId":"Sidney011100"},"content":"     */"},{"lineNumber":27,"author":{"gitId":"Sidney011100"},"content":"    public String userDoneTask(String task) {"},{"lineNumber":28,"author":{"gitId":"Sidney011100"},"content":"        return \"Nice! I\u0027ve marked this task as done:\\n \" + task + \")\";"},{"lineNumber":29,"author":{"gitId":"Sidney011100"},"content":"    }"},{"lineNumber":30,"author":{"gitId":"Sidney011100"},"content":""},{"lineNumber":31,"author":{"gitId":"Sidney011100"},"content":"    /**"},{"lineNumber":32,"author":{"gitId":"Sidney011100"},"content":"     * String to print when a user adds a new Task to the list."},{"lineNumber":33,"author":{"gitId":"Sidney011100"},"content":"     * @param list"},{"lineNumber":34,"author":{"gitId":"Sidney011100"},"content":"     */"},{"lineNumber":35,"author":{"gitId":"Sidney011100"},"content":"    public String userAddTask(TaskList list, Task task) {"},{"lineNumber":36,"author":{"gitId":"Sidney011100"},"content":"        return \"Got it. I\u0027ve added this task: \\n  \""},{"lineNumber":37,"author":{"gitId":"Sidney011100"},"content":"                            + task"},{"lineNumber":38,"author":{"gitId":"Sidney011100"},"content":"                            + \"\\nnow you have \" + String.valueOf(list.size())"},{"lineNumber":39,"author":{"gitId":"Sidney011100"},"content":"                            + \" tasks in the list.\";"},{"lineNumber":40,"author":{"gitId":"Sidney011100"},"content":"    }"},{"lineNumber":41,"author":{"gitId":"Sidney011100"},"content":""},{"lineNumber":42,"author":{"gitId":"Sidney011100"},"content":"    /**"},{"lineNumber":43,"author":{"gitId":"Sidney011100"},"content":"     * String to print when a user deletes the given task from the given list."},{"lineNumber":44,"author":{"gitId":"Sidney011100"},"content":"     * @param task that user deleted"},{"lineNumber":45,"author":{"gitId":"Sidney011100"},"content":"     * @param list that user deleted from"},{"lineNumber":46,"author":{"gitId":"Sidney011100"},"content":"     */"},{"lineNumber":47,"author":{"gitId":"Sidney011100"},"content":"    public String userDeleteTask(Task task, TaskList list) {"},{"lineNumber":48,"author":{"gitId":"Sidney011100"},"content":"        return \"Noted. I\u0027ve removed this task: \\n \""},{"lineNumber":49,"author":{"gitId":"Sidney011100"},"content":"                + task"},{"lineNumber":50,"author":{"gitId":"Sidney011100"},"content":"                + \"\\nNow you have \" + list.size() + \" tasks in the list.\";"},{"lineNumber":51,"author":{"gitId":"Sidney011100"},"content":"    }"},{"lineNumber":52,"author":{"gitId":"Sidney011100"},"content":""},{"lineNumber":53,"author":{"gitId":"Sidney011100"},"content":"    /**"},{"lineNumber":54,"author":{"gitId":"Sidney011100"},"content":"     * Prints header string before the filtered list of task is printed."},{"lineNumber":55,"author":{"gitId":"Sidney011100"},"content":"     */"},{"lineNumber":56,"author":{"gitId":"Sidney011100"},"content":"    public String tellUserListFound() {"},{"lineNumber":57,"author":{"gitId":"Sidney011100"},"content":"        return \"Here are the matching tasks in your list: \";"},{"lineNumber":58,"author":{"gitId":"Sidney011100"},"content":"    }"},{"lineNumber":59,"author":{"gitId":"Sidney011100"},"content":""},{"lineNumber":60,"author":{"gitId":"Sidney011100"},"content":"}"}],"authorContributionMap":{"Sidney011100":60}},{"path":"src/main/resources/view/DialogBox.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"Sidney011100"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"},{"lineNumber":2,"author":{"gitId":"Sidney011100"},"content":""},{"lineNumber":3,"author":{"gitId":"Sidney011100"},"content":"\u003c?import javafx.geometry.*?\u003e"},{"lineNumber":4,"author":{"gitId":"Sidney011100"},"content":"\u003c?import javafx.scene.control.*?\u003e"},{"lineNumber":5,"author":{"gitId":"Sidney011100"},"content":"\u003c?import javafx.scene.image.*?\u003e"},{"lineNumber":6,"author":{"gitId":"Sidney011100"},"content":"\u003c?import javafx.scene.layout.*?\u003e"},{"lineNumber":7,"author":{"gitId":"Sidney011100"},"content":""},{"lineNumber":8,"author":{"gitId":"Sidney011100"},"content":"\u003cfx:root alignment\u003d\"TOP_RIGHT\" maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\" prefWidth\u003d\"400.0\" type\u003d\"javafx.scene.layout.HBox\" xmlns\u003d\"http://javafx.com/javafx/11\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e"},{"lineNumber":9,"author":{"gitId":"Sidney011100"},"content":"    \u003cchildren\u003e"},{"lineNumber":10,"author":{"gitId":"Sidney011100"},"content":"        \u003cLabel fx:id\u003d\"dialog\" text\u003d\"Label\" wrapText\u003d\"true\" /\u003e"},{"lineNumber":11,"author":{"gitId":"Sidney011100"},"content":"        \u003cImageView fx:id\u003d\"displayPicture\" fitWidth\u003d\"99.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\" /\u003e"},{"lineNumber":12,"author":{"gitId":"Sidney011100"},"content":"    \u003c/children\u003e"},{"lineNumber":13,"author":{"gitId":"Sidney011100"},"content":"    \u003cpadding\u003e"},{"lineNumber":14,"author":{"gitId":"Sidney011100"},"content":"        \u003cInsets bottom\u003d\"15.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"15.0\" /\u003e"},{"lineNumber":15,"author":{"gitId":"Sidney011100"},"content":"    \u003c/padding\u003e"},{"lineNumber":16,"author":{"gitId":"Sidney011100"},"content":"\u003c/fx:root\u003e"}],"authorContributionMap":{"Sidney011100":16}},{"path":"src/main/resources/view/MainWindow.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"Sidney011100"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"},{"lineNumber":2,"author":{"gitId":"Sidney011100"},"content":""},{"lineNumber":3,"author":{"gitId":"Sidney011100"},"content":"\u003c?import javafx.scene.*?\u003e"},{"lineNumber":4,"author":{"gitId":"Sidney011100"},"content":"\u003c?import javafx.scene.control.*?\u003e"},{"lineNumber":5,"author":{"gitId":"Sidney011100"},"content":"\u003c?import javafx.scene.layout.*?\u003e"},{"lineNumber":6,"author":{"gitId":"Sidney011100"},"content":""},{"lineNumber":7,"author":{"gitId":"Sidney011100"},"content":"\u003cAnchorPane maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefHeight\u003d\"600.0\" prefWidth\u003d\"400.0\" xmlns\u003d\"http://javafx.com/javafx/11\" xmlns:fx\u003d\"http://javafx.com/fxml/1\" fx:controller\u003d\"MainWindow\"\u003e"},{"lineNumber":8,"author":{"gitId":"Sidney011100"},"content":"    \u003cchildren\u003e"},{"lineNumber":9,"author":{"gitId":"Sidney011100"},"content":"        \u003cTextField fx:id\u003d\"userInput\" layoutY\u003d\"558.0\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"324.0\" AnchorPane.bottomAnchor\u003d\"1.0\"\u003e"},{"lineNumber":10,"author":{"gitId":"Sidney011100"},"content":"         \u003ccursor\u003e"},{"lineNumber":11,"author":{"gitId":"Sidney011100"},"content":"            \u003cCursor fx:constant\u003d\"TEXT\" /\u003e"},{"lineNumber":12,"author":{"gitId":"Sidney011100"},"content":"         \u003c/cursor\u003e\u003c/TextField\u003e"},{"lineNumber":13,"author":{"gitId":"Sidney011100"},"content":"        \u003cButton fx:id\u003d\"sendButton\" layoutX\u003d\"324.0\" layoutY\u003d\"558.0\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"76.0\" text\u003d\"Send\" /\u003e"},{"lineNumber":14,"author":{"gitId":"Sidney011100"},"content":"        \u003cScrollPane fx:id\u003d\"scrollPane\" hbarPolicy\u003d\"NEVER\" hvalue\u003d\"1.0\" prefHeight\u003d\"557.0\" prefWidth\u003d\"400.0\" vvalue\u003d\"1.0\"\u003e"},{"lineNumber":15,"author":{"gitId":"Sidney011100"},"content":"            \u003ccontent\u003e"},{"lineNumber":16,"author":{"gitId":"Sidney011100"},"content":"                \u003cVBox fx:id\u003d\"dialogContainer\" prefWidth\u003d\"388.0\" /\u003e"},{"lineNumber":17,"author":{"gitId":"Sidney011100"},"content":"            \u003c/content\u003e"},{"lineNumber":18,"author":{"gitId":"Sidney011100"},"content":"        \u003c/ScrollPane\u003e"},{"lineNumber":19,"author":{"gitId":"Sidney011100"},"content":"    \u003c/children\u003e"},{"lineNumber":20,"author":{"gitId":"Sidney011100"},"content":"\u003c/AnchorPane\u003e"}],"authorContributionMap":{"Sidney011100":20}},{"path":"src/test/java/TaskListTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Sidney011100"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;"},{"lineNumber":2,"author":{"gitId":"Sidney011100"},"content":""},{"lineNumber":3,"author":{"gitId":"Sidney011100"},"content":"import org.junit.jupiter.api.Test;"},{"lineNumber":4,"author":{"gitId":"Sidney011100"},"content":""},{"lineNumber":5,"author":{"gitId":"Sidney011100"},"content":"public class TaskListTest {"},{"lineNumber":6,"author":{"gitId":"Sidney011100"},"content":"    @Test"},{"lineNumber":7,"author":{"gitId":"Sidney011100"},"content":"    public void getTest() {"},{"lineNumber":8,"author":{"gitId":"Sidney011100"},"content":"        TaskList list \u003d new TaskList();"},{"lineNumber":9,"author":{"gitId":"Sidney011100"},"content":"        Task task \u003d new Todo(\"return books\");"},{"lineNumber":10,"author":{"gitId":"Sidney011100"},"content":"        list.add(task);"},{"lineNumber":11,"author":{"gitId":"Sidney011100"},"content":"        assertEquals(list.getList().get(0), task);"},{"lineNumber":12,"author":{"gitId":"Sidney011100"},"content":""},{"lineNumber":13,"author":{"gitId":"Sidney011100"},"content":"    }"},{"lineNumber":14,"author":{"gitId":"Sidney011100"},"content":""},{"lineNumber":15,"author":{"gitId":"Sidney011100"},"content":"    @Test"},{"lineNumber":16,"author":{"gitId":"Sidney011100"},"content":"    public void addTodoTest() {"},{"lineNumber":17,"author":{"gitId":"Sidney011100"},"content":"        TaskList list \u003d new TaskList();"},{"lineNumber":18,"author":{"gitId":"Sidney011100"},"content":"        list.addTodo(\"testcase2\");"},{"lineNumber":19,"author":{"gitId":"Sidney011100"},"content":"        assertEquals(list.getList().get(0).getTask() , \"testcase2\");"},{"lineNumber":20,"author":{"gitId":"Sidney011100"},"content":"    }"},{"lineNumber":21,"author":{"gitId":"Sidney011100"},"content":"}"}],"authorContributionMap":{"Sidney011100":21}},{"path":"test-jar-file/PreviousTaskList.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"Sidney011100"},"content":"class Todo, false,  ice cream"},{"lineNumber":2,"author":{"gitId":"Sidney011100"},"content":"class Deadline, false, 2105 , 2021-02-14T23:59"},{"lineNumber":3,"author":{"gitId":"Sidney011100"},"content":"class Event, false, mary\u0027s wedding , 2021-02-14T18:00"}],"authorContributionMap":{"Sidney011100":3}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"Sidney011100"},"content":"todo borrow book"},{"lineNumber":2,"author":{"gitId":"Sidney011100"},"content":"list"}],"authorContributionMap":{"Sidney011100":2}}]
