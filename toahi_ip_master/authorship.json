[{"path":"gradlew.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"toahi"},"content":"@rem"},{"lineNumber":2,"author":{"gitId":"toahi"},"content":"@rem Copyright 2015 the original author or authors."},{"lineNumber":3,"author":{"gitId":"toahi"},"content":"@rem"},{"lineNumber":4,"author":{"gitId":"toahi"},"content":"@rem Licensed under the Apache License, Version 2.0 (the \"License\");"},{"lineNumber":5,"author":{"gitId":"toahi"},"content":"@rem you may not use this file except in compliance with the License."},{"lineNumber":6,"author":{"gitId":"toahi"},"content":"@rem You may obtain a copy of the License at"},{"lineNumber":7,"author":{"gitId":"toahi"},"content":"@rem"},{"lineNumber":8,"author":{"gitId":"toahi"},"content":"@rem      https://www.apache.org/licenses/LICENSE-2.0"},{"lineNumber":9,"author":{"gitId":"toahi"},"content":"@rem"},{"lineNumber":10,"author":{"gitId":"toahi"},"content":"@rem Unless required by applicable law or agreed to in writing, software"},{"lineNumber":11,"author":{"gitId":"toahi"},"content":"@rem distributed under the License is distributed on an \"AS IS\" BASIS,"},{"lineNumber":12,"author":{"gitId":"toahi"},"content":"@rem WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied."},{"lineNumber":13,"author":{"gitId":"toahi"},"content":"@rem See the License for the specific language governing permissions and"},{"lineNumber":14,"author":{"gitId":"toahi"},"content":"@rem limitations under the License."},{"lineNumber":15,"author":{"gitId":"toahi"},"content":"@rem"},{"lineNumber":16,"author":{"gitId":"toahi"},"content":""},{"lineNumber":17,"author":{"gitId":"toahi"},"content":"@if \"%DEBUG%\" \u003d\u003d \"\" @echo off"},{"lineNumber":18,"author":{"gitId":"toahi"},"content":"@rem ##########################################################################"},{"lineNumber":19,"author":{"gitId":"toahi"},"content":"@rem"},{"lineNumber":20,"author":{"gitId":"toahi"},"content":"@rem  Gradle startup script for Windows"},{"lineNumber":21,"author":{"gitId":"toahi"},"content":"@rem"},{"lineNumber":22,"author":{"gitId":"toahi"},"content":"@rem ##########################################################################"},{"lineNumber":23,"author":{"gitId":"toahi"},"content":""},{"lineNumber":24,"author":{"gitId":"toahi"},"content":"@rem Set local scope for the variables with windows NT shell"},{"lineNumber":25,"author":{"gitId":"toahi"},"content":"if \"%OS%\"\u003d\u003d\"Windows_NT\" setlocal"},{"lineNumber":26,"author":{"gitId":"toahi"},"content":""},{"lineNumber":27,"author":{"gitId":"toahi"},"content":"set DIRNAME\u003d%~dp0"},{"lineNumber":28,"author":{"gitId":"toahi"},"content":"if \"%DIRNAME%\" \u003d\u003d \"\" set DIRNAME\u003d."},{"lineNumber":29,"author":{"gitId":"toahi"},"content":"set APP_BASE_NAME\u003d%~n0"},{"lineNumber":30,"author":{"gitId":"toahi"},"content":"set APP_HOME\u003d%DIRNAME%"},{"lineNumber":31,"author":{"gitId":"toahi"},"content":""},{"lineNumber":32,"author":{"gitId":"toahi"},"content":"@rem Resolve any \".\" and \"..\" in APP_HOME to make it shorter."},{"lineNumber":33,"author":{"gitId":"toahi"},"content":"for %%i in (\"%APP_HOME%\") do set APP_HOME\u003d%%~fi"},{"lineNumber":34,"author":{"gitId":"toahi"},"content":""},{"lineNumber":35,"author":{"gitId":"toahi"},"content":"@rem Add default JVM options here. You can also use JAVA_OPTS and GRADLE_OPTS to pass JVM options to this script."},{"lineNumber":36,"author":{"gitId":"toahi"},"content":"set DEFAULT_JVM_OPTS\u003d\"-Xmx64m\" \"-Xms64m\""},{"lineNumber":37,"author":{"gitId":"toahi"},"content":""},{"lineNumber":38,"author":{"gitId":"toahi"},"content":"@rem Find java.exe"},{"lineNumber":39,"author":{"gitId":"toahi"},"content":"if defined JAVA_HOME goto findJavaFromJavaHome"},{"lineNumber":40,"author":{"gitId":"toahi"},"content":""},{"lineNumber":41,"author":{"gitId":"toahi"},"content":"set JAVA_EXE\u003djava.exe"},{"lineNumber":42,"author":{"gitId":"toahi"},"content":"%JAVA_EXE% -version \u003eNUL 2\u003e\u00261"},{"lineNumber":43,"author":{"gitId":"toahi"},"content":"if \"%ERRORLEVEL%\" \u003d\u003d \"0\" goto execute"},{"lineNumber":44,"author":{"gitId":"toahi"},"content":""},{"lineNumber":45,"author":{"gitId":"toahi"},"content":"echo."},{"lineNumber":46,"author":{"gitId":"toahi"},"content":"echo ERROR: JAVA_HOME is not set and no \u0027java\u0027 command could be found in your PATH."},{"lineNumber":47,"author":{"gitId":"toahi"},"content":"echo."},{"lineNumber":48,"author":{"gitId":"toahi"},"content":"echo Please set the JAVA_HOME variable in your environment to match the"},{"lineNumber":49,"author":{"gitId":"toahi"},"content":"echo location of your Java installation."},{"lineNumber":50,"author":{"gitId":"toahi"},"content":""},{"lineNumber":51,"author":{"gitId":"toahi"},"content":"goto fail"},{"lineNumber":52,"author":{"gitId":"toahi"},"content":""},{"lineNumber":53,"author":{"gitId":"toahi"},"content":":findJavaFromJavaHome"},{"lineNumber":54,"author":{"gitId":"toahi"},"content":"set JAVA_HOME\u003d%JAVA_HOME:\"\u003d%"},{"lineNumber":55,"author":{"gitId":"toahi"},"content":"set JAVA_EXE\u003d%JAVA_HOME%/bin/java.exe"},{"lineNumber":56,"author":{"gitId":"toahi"},"content":""},{"lineNumber":57,"author":{"gitId":"toahi"},"content":"if exist \"%JAVA_EXE%\" goto execute"},{"lineNumber":58,"author":{"gitId":"toahi"},"content":""},{"lineNumber":59,"author":{"gitId":"toahi"},"content":"echo."},{"lineNumber":60,"author":{"gitId":"toahi"},"content":"echo ERROR: JAVA_HOME is set to an invalid directory: %JAVA_HOME%"},{"lineNumber":61,"author":{"gitId":"toahi"},"content":"echo."},{"lineNumber":62,"author":{"gitId":"toahi"},"content":"echo Please set the JAVA_HOME variable in your environment to match the"},{"lineNumber":63,"author":{"gitId":"toahi"},"content":"echo location of your Java installation."},{"lineNumber":64,"author":{"gitId":"toahi"},"content":""},{"lineNumber":65,"author":{"gitId":"toahi"},"content":"goto fail"},{"lineNumber":66,"author":{"gitId":"toahi"},"content":""},{"lineNumber":67,"author":{"gitId":"toahi"},"content":":execute"},{"lineNumber":68,"author":{"gitId":"toahi"},"content":"@rem Setup the command line"},{"lineNumber":69,"author":{"gitId":"toahi"},"content":""},{"lineNumber":70,"author":{"gitId":"toahi"},"content":"set CLASSPATH\u003d%APP_HOME%\\gradle\\wrapper\\gradle-wrapper.jar"},{"lineNumber":71,"author":{"gitId":"toahi"},"content":""},{"lineNumber":72,"author":{"gitId":"toahi"},"content":""},{"lineNumber":73,"author":{"gitId":"toahi"},"content":"@rem Execute Gradle"},{"lineNumber":74,"author":{"gitId":"toahi"},"content":"\"%JAVA_EXE%\" %DEFAULT_JVM_OPTS% %JAVA_OPTS% %GRADLE_OPTS% \"-Dorg.gradle.appname\u003d%APP_BASE_NAME%\" -classpath \"%CLASSPATH%\" org.gradle.wrapper.GradleWrapperMain %*"},{"lineNumber":75,"author":{"gitId":"toahi"},"content":""},{"lineNumber":76,"author":{"gitId":"toahi"},"content":":end"},{"lineNumber":77,"author":{"gitId":"toahi"},"content":"@rem End local scope for the variables with windows NT shell"},{"lineNumber":78,"author":{"gitId":"toahi"},"content":"if \"%ERRORLEVEL%\"\u003d\u003d\"0\" goto mainEnd"},{"lineNumber":79,"author":{"gitId":"toahi"},"content":""},{"lineNumber":80,"author":{"gitId":"toahi"},"content":":fail"},{"lineNumber":81,"author":{"gitId":"toahi"},"content":"rem Set variable GRADLE_EXIT_CONSOLE if you need the _script_ return code instead of"},{"lineNumber":82,"author":{"gitId":"toahi"},"content":"rem the _cmd.exe /c_ return code!"},{"lineNumber":83,"author":{"gitId":"toahi"},"content":"if  not \"\" \u003d\u003d \"%GRADLE_EXIT_CONSOLE%\" exit 1"},{"lineNumber":84,"author":{"gitId":"toahi"},"content":"exit /b 1"},{"lineNumber":85,"author":{"gitId":"toahi"},"content":""},{"lineNumber":86,"author":{"gitId":"toahi"},"content":":mainEnd"},{"lineNumber":87,"author":{"gitId":"toahi"},"content":"if \"%OS%\"\u003d\u003d\"Windows_NT\" endlocal"},{"lineNumber":88,"author":{"gitId":"toahi"},"content":""},{"lineNumber":89,"author":{"gitId":"toahi"},"content":":omega"}],"authorContributionMap":{"toahi":89}},{"path":"src/main/java/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"toahi"},"content":""},{"lineNumber":2,"author":{"gitId":"toahi"},"content":"import java.time.LocalDate;"},{"lineNumber":3,"author":{"gitId":"toahi"},"content":"import java.time.format.DateTimeFormatter;"},{"lineNumber":4,"author":{"gitId":"toahi"},"content":""},{"lineNumber":5,"author":{"gitId":"toahi"},"content":"public class Deadline extends Task {"},{"lineNumber":6,"author":{"gitId":"toahi"},"content":""},{"lineNumber":7,"author":{"gitId":"toahi"},"content":"    private LocalDate deadline;"},{"lineNumber":8,"author":{"gitId":"toahi"},"content":"    private DateTimeFormatter format \u003d DateTimeFormatter.ofPattern(\"yyyy-M-dd\");"},{"lineNumber":9,"author":{"gitId":"toahi"},"content":""},{"lineNumber":10,"author":{"gitId":"toahi"},"content":""},{"lineNumber":11,"author":{"gitId":"toahi"},"content":"    Deadline(String name, String time) {"},{"lineNumber":12,"author":{"gitId":"toahi"},"content":"        super(name);"},{"lineNumber":13,"author":{"gitId":"toahi"},"content":"        this.deadline \u003d LocalDate.parse(time, format);"},{"lineNumber":14,"author":{"gitId":"toahi"},"content":"    }"},{"lineNumber":15,"author":{"gitId":"toahi"},"content":""},{"lineNumber":16,"author":{"gitId":"toahi"},"content":"    @Override"},{"lineNumber":17,"author":{"gitId":"toahi"},"content":"    public String toString(){"},{"lineNumber":18,"author":{"gitId":"toahi"},"content":"        return \"[D]\" + super.toString() + \" (by:\" + this.deadline.format(DateTimeFormatter.ofPattern(\"MMM dd YYYY\")) + \")\";"},{"lineNumber":19,"author":{"gitId":"toahi"},"content":"    }"},{"lineNumber":20,"author":{"gitId":"toahi"},"content":"}"}],"authorContributionMap":{"toahi":20}},{"path":"src/main/java/DescriptionException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"toahi"},"content":"public class DescriptionException extends DukeException {"},{"lineNumber":2,"author":{"gitId":"toahi"},"content":"    public DescriptionException(String event){"},{"lineNumber":3,"author":{"gitId":"toahi"},"content":"        super(\"The description of a \" + event + \" cannot be empty\");"},{"lineNumber":4,"author":{"gitId":"toahi"},"content":"    }"},{"lineNumber":5,"author":{"gitId":"toahi"},"content":"}"}],"authorContributionMap":{"toahi":5}},{"path":"src/main/java/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"toahi"},"content":""},{"lineNumber":2,"author":{"gitId":"toahi"},"content":"import java.io.FileNotFoundException;"},{"lineNumber":3,"author":{"gitId":"toahi"},"content":"import java.io.PrintWriter;"},{"lineNumber":4,"author":{"gitId":"toahi"},"content":"import  java.util.Scanner;"},{"lineNumber":5,"author":{"gitId":"toahi"},"content":"import java.util.ArrayList;"},{"lineNumber":6,"author":{"gitId":"toahi"},"content":"import java.io.File;"},{"lineNumber":7,"author":{"gitId":"toahi"},"content":"import java.io.IOException;"},{"lineNumber":8,"author":{"gitId":"toahi"},"content":"import java.nio.file.Files;"},{"lineNumber":9,"author":{"gitId":"toahi"},"content":"import java.nio.file.Paths;"},{"lineNumber":10,"author":{"gitId":"toahi"},"content":""},{"lineNumber":11,"author":{"gitId":"toahi"},"content":""},{"lineNumber":12,"author":{"gitId":"toahi"},"content":""},{"lineNumber":13,"author":{"gitId":"-"},"content":"public class Duke {"},{"lineNumber":14,"author":{"gitId":"toahi"},"content":""},{"lineNumber":15,"author":{"gitId":"toahi"},"content":"    public static String line\u003d \"__________________________________________________\";"},{"lineNumber":16,"author":{"gitId":"toahi"},"content":"    private Storage storage;"},{"lineNumber":17,"author":{"gitId":"toahi"},"content":"    private UI ui;"},{"lineNumber":18,"author":{"gitId":"toahi"},"content":"    private TaskList taskList;"},{"lineNumber":19,"author":{"gitId":"toahi"},"content":"    private int count;"},{"lineNumber":20,"author":{"gitId":"toahi"},"content":""},{"lineNumber":21,"author":{"gitId":"toahi"},"content":"    public Duke(String path)"},{"lineNumber":22,"author":{"gitId":"toahi"},"content":"    {"},{"lineNumber":23,"author":{"gitId":"toahi"},"content":"        this.storage \u003d new Storage(path);"},{"lineNumber":24,"author":{"gitId":"toahi"},"content":"        this.taskList \u003d new TaskList(this.storage);"},{"lineNumber":25,"author":{"gitId":"toahi"},"content":"        this.count\u003d 0;"},{"lineNumber":26,"author":{"gitId":"toahi"},"content":"        this.ui \u003d new UI();"},{"lineNumber":27,"author":{"gitId":"toahi"},"content":"    }"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public static void main(String[] args) {"},{"lineNumber":29,"author":{"gitId":"toahi"},"content":""},{"lineNumber":30,"author":{"gitId":"toahi"},"content":""},{"lineNumber":31,"author":{"gitId":"toahi"},"content":""},{"lineNumber":32,"author":{"gitId":"toahi"},"content":""},{"lineNumber":33,"author":{"gitId":"toahi"},"content":"        File logFile \u003d new File(\"./logs\");"},{"lineNumber":34,"author":{"gitId":"toahi"},"content":"        try{"},{"lineNumber":35,"author":{"gitId":"toahi"},"content":"            if (logFile.isFile()){"},{"lineNumber":36,"author":{"gitId":"toahi"},"content":"                Scanner logger \u003d new Scanner(logFile);"},{"lineNumber":37,"author":{"gitId":"toahi"},"content":"                while (logger.hasNextLine()){"},{"lineNumber":38,"author":{"gitId":"toahi"},"content":"                    System.out.println(logger.nextLine());"},{"lineNumber":39,"author":{"gitId":"toahi"},"content":"                }"},{"lineNumber":40,"author":{"gitId":"toahi"},"content":"                logger.close();"},{"lineNumber":41,"author":{"gitId":"toahi"},"content":"            }else{"},{"lineNumber":42,"author":{"gitId":"toahi"},"content":"                logFile.createNewFile();"},{"lineNumber":43,"author":{"gitId":"toahi"},"content":"            }"},{"lineNumber":44,"author":{"gitId":"toahi"},"content":""},{"lineNumber":45,"author":{"gitId":"toahi"},"content":""},{"lineNumber":46,"author":{"gitId":"toahi"},"content":"        }catch (IOException e){"},{"lineNumber":47,"author":{"gitId":"toahi"},"content":"            System.out.println(\"Problem with creating new file:\"+ e);"},{"lineNumber":48,"author":{"gitId":"toahi"},"content":"        }"},{"lineNumber":49,"author":{"gitId":"toahi"},"content":""},{"lineNumber":50,"author":{"gitId":"toahi"},"content":""},{"lineNumber":51,"author":{"gitId":"toahi"},"content":"        new Duke(\"./logs\").run();"},{"lineNumber":52,"author":{"gitId":"toahi"},"content":""},{"lineNumber":53,"author":{"gitId":"toahi"},"content":""},{"lineNumber":54,"author":{"gitId":"toahi"},"content":"    }"},{"lineNumber":55,"author":{"gitId":"toahi"},"content":"    private void readParse(ParserOutput parserOutput) throws DukeException {"},{"lineNumber":56,"author":{"gitId":"toahi"},"content":"        switch (parserOutput.getAction()) {"},{"lineNumber":57,"author":{"gitId":"toahi"},"content":"            case 1: //remove"},{"lineNumber":58,"author":{"gitId":"toahi"},"content":"                this.taskList.remove(parserOutput.getIndex());"},{"lineNumber":59,"author":{"gitId":"toahi"},"content":"                ui.printRemoved(parserOutput.getIndex());"},{"lineNumber":60,"author":{"gitId":"toahi"},"content":"                break;"},{"lineNumber":61,"author":{"gitId":"toahi"},"content":"            case 2: //done"},{"lineNumber":62,"author":{"gitId":"toahi"},"content":"                Task doneTask \u003d this.taskList.get(parserOutput.getIndex());"},{"lineNumber":63,"author":{"gitId":"toahi"},"content":"                doneTask.setDone(true);"},{"lineNumber":64,"author":{"gitId":"toahi"},"content":"                this.taskList.set(parserOutput.getIndex(), doneTask);"},{"lineNumber":65,"author":{"gitId":"toahi"},"content":"                ui.printDone(doneTask);"},{"lineNumber":66,"author":{"gitId":"toahi"},"content":"                break;"},{"lineNumber":67,"author":{"gitId":"toahi"},"content":"            case 3: //add"},{"lineNumber":68,"author":{"gitId":"toahi"},"content":"                this.taskList.add(parserOutput.getTask());"},{"lineNumber":69,"author":{"gitId":"toahi"},"content":"                ui.printAdded(parserOutput.getTask(), this.taskList.getSize());"},{"lineNumber":70,"author":{"gitId":"toahi"},"content":"                break;"},{"lineNumber":71,"author":{"gitId":"toahi"},"content":"            case 4: //set"},{"lineNumber":72,"author":{"gitId":"toahi"},"content":"                this.taskList.set(parserOutput.getIndex(), parserOutput.getTask());"},{"lineNumber":73,"author":{"gitId":"toahi"},"content":"                break;"},{"lineNumber":74,"author":{"gitId":"toahi"},"content":"            case 5: //list"},{"lineNumber":75,"author":{"gitId":"toahi"},"content":"                ui.printList(this.taskList);"},{"lineNumber":76,"author":{"gitId":"toahi"},"content":"                break;"},{"lineNumber":77,"author":{"gitId":"toahi"},"content":"            default:"},{"lineNumber":78,"author":{"gitId":"toahi"},"content":"                throw new DukeException(\"action not found\");"},{"lineNumber":79,"author":{"gitId":"toahi"},"content":"        }"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":81,"author":{"gitId":"toahi"},"content":"    public int run() {"},{"lineNumber":82,"author":{"gitId":"toahi"},"content":"        UI.printHello();"},{"lineNumber":83,"author":{"gitId":"toahi"},"content":"        while(true){"},{"lineNumber":84,"author":{"gitId":"toahi"},"content":"            String userInput \u003d ui.getInputFromUser();"},{"lineNumber":85,"author":{"gitId":"toahi"},"content":"            ParserOutput parserOutput \u003d null;"},{"lineNumber":86,"author":{"gitId":"toahi"},"content":"            try {"},{"lineNumber":87,"author":{"gitId":"toahi"},"content":"                parserOutput \u003d Parser.parse(userInput);"},{"lineNumber":88,"author":{"gitId":"toahi"},"content":"            } catch (DukeException e) {"},{"lineNumber":89,"author":{"gitId":"toahi"},"content":"                System.out.println(e.getMessage());"},{"lineNumber":90,"author":{"gitId":"toahi"},"content":"                continue;"},{"lineNumber":91,"author":{"gitId":"toahi"},"content":"            }"},{"lineNumber":92,"author":{"gitId":"toahi"},"content":"            UI.printHRule();"},{"lineNumber":93,"author":{"gitId":"toahi"},"content":"            if (ParserOutput.byeOutput().isBye()) {"},{"lineNumber":94,"author":{"gitId":"toahi"},"content":"                break;"},{"lineNumber":95,"author":{"gitId":"toahi"},"content":"            }"},{"lineNumber":96,"author":{"gitId":"toahi"},"content":"            UI.printHRule();"},{"lineNumber":97,"author":{"gitId":"toahi"},"content":"        }"},{"lineNumber":98,"author":{"gitId":"toahi"},"content":"        UI.printGoodbye();"},{"lineNumber":99,"author":{"gitId":"toahi"},"content":"        return 0;"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":101,"author":{"gitId":"-"},"content":"}"}],"authorContributionMap":{"toahi":96,"-":5}},{"path":"src/main/java/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"toahi"},"content":""},{"lineNumber":2,"author":{"gitId":"toahi"},"content":"public class DukeException extends Exception {"},{"lineNumber":3,"author":{"gitId":"toahi"},"content":"    public DukeException(String error){"},{"lineNumber":4,"author":{"gitId":"toahi"},"content":"        super(\"Uh Oh, there seems to be an error somewhere \\n\" + error);"},{"lineNumber":5,"author":{"gitId":"toahi"},"content":"    }"},{"lineNumber":6,"author":{"gitId":"toahi"},"content":"}"}],"authorContributionMap":{"toahi":6}},{"path":"src/main/java/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"toahi"},"content":"import java.time.LocalDate;"},{"lineNumber":2,"author":{"gitId":"toahi"},"content":"import java.time.format.DateTimeFormatter;"},{"lineNumber":3,"author":{"gitId":"toahi"},"content":"import java.util.Date;"},{"lineNumber":4,"author":{"gitId":"toahi"},"content":""},{"lineNumber":5,"author":{"gitId":"toahi"},"content":""},{"lineNumber":6,"author":{"gitId":"toahi"},"content":"public class Event extends Task {"},{"lineNumber":7,"author":{"gitId":"toahi"},"content":""},{"lineNumber":8,"author":{"gitId":"toahi"},"content":"    private LocalDate time;"},{"lineNumber":9,"author":{"gitId":"toahi"},"content":"    private DateTimeFormatter format \u003d DateTimeFormatter.ofPattern(\"yyyy-M-dd\");"},{"lineNumber":10,"author":{"gitId":"toahi"},"content":""},{"lineNumber":11,"author":{"gitId":"toahi"},"content":"    Event(String name, String time) {"},{"lineNumber":12,"author":{"gitId":"toahi"},"content":"        super(name);"},{"lineNumber":13,"author":{"gitId":"toahi"},"content":"        this.time \u003d LocalDate.parse(time, format);"},{"lineNumber":14,"author":{"gitId":"toahi"},"content":"    }"},{"lineNumber":15,"author":{"gitId":"toahi"},"content":""},{"lineNumber":16,"author":{"gitId":"toahi"},"content":"    @Override"},{"lineNumber":17,"author":{"gitId":"toahi"},"content":"    public String toString(){"},{"lineNumber":18,"author":{"gitId":"toahi"},"content":"        return \"[E]\" + super.toString() + \" (at:\" + this.time.format(DateTimeFormatter.ofPattern(\"MMM dd YYYY\")) + \")\";"},{"lineNumber":19,"author":{"gitId":"toahi"},"content":"    }"},{"lineNumber":20,"author":{"gitId":"toahi"},"content":"}"}],"authorContributionMap":{"toahi":20}},{"path":"src/main/java/NotFoundException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"toahi"},"content":"public class NotFoundException extends DukeException {"},{"lineNumber":2,"author":{"gitId":"toahi"},"content":"    public NotFoundException(){"},{"lineNumber":3,"author":{"gitId":"toahi"},"content":"        super(\"OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\" );"},{"lineNumber":4,"author":{"gitId":"toahi"},"content":"    }"},{"lineNumber":5,"author":{"gitId":"toahi"},"content":"}"}],"authorContributionMap":{"toahi":5}},{"path":"src/main/java/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"toahi"},"content":""},{"lineNumber":2,"author":{"gitId":"toahi"},"content":"public class Parser {"},{"lineNumber":3,"author":{"gitId":"toahi"},"content":""},{"lineNumber":4,"author":{"gitId":"toahi"},"content":"    public Parser() {"},{"lineNumber":5,"author":{"gitId":"toahi"},"content":"    }"},{"lineNumber":6,"author":{"gitId":"toahi"},"content":""},{"lineNumber":7,"author":{"gitId":"toahi"},"content":"    // entirely for parsing uer input"},{"lineNumber":8,"author":{"gitId":"toahi"},"content":""},{"lineNumber":9,"author":{"gitId":"toahi"},"content":"    public static ParserOutput parse(String raw_in) throws DescriptionException, TimeException, NotFoundException {"},{"lineNumber":10,"author":{"gitId":"toahi"},"content":"        String joined \u003d \"\";"},{"lineNumber":11,"author":{"gitId":"toahi"},"content":"        String timing \u003d \"\";"},{"lineNumber":12,"author":{"gitId":"toahi"},"content":"        String[] input \u003d raw_in.split(\" \");"},{"lineNumber":13,"author":{"gitId":"toahi"},"content":"        if (raw_in.equals(\"bye\")) {"},{"lineNumber":14,"author":{"gitId":"toahi"},"content":"            return ParserOutput.byeOutput();"},{"lineNumber":15,"author":{"gitId":"toahi"},"content":"        } else {"},{"lineNumber":16,"author":{"gitId":"toahi"},"content":"            switch (input[0]) {"},{"lineNumber":17,"author":{"gitId":"toahi"},"content":"                case \"list\":"},{"lineNumber":18,"author":{"gitId":"toahi"},"content":"                    return ParserOutput.listOutput();"},{"lineNumber":19,"author":{"gitId":"toahi"},"content":"                case \"done\":"},{"lineNumber":20,"author":{"gitId":"toahi"},"content":"                    int itemToBeUpdatedIndex \u003d Integer.parseInt(input[1]);"},{"lineNumber":21,"author":{"gitId":"toahi"},"content":"                    return ParserOutput.doneOutput(itemToBeUpdatedIndex);"},{"lineNumber":22,"author":{"gitId":"toahi"},"content":""},{"lineNumber":23,"author":{"gitId":"toahi"},"content":""},{"lineNumber":24,"author":{"gitId":"toahi"},"content":"                case \"todo\":"},{"lineNumber":25,"author":{"gitId":"toahi"},"content":"                    for (int i \u003d 1; i \u003c input.length; i++) {"},{"lineNumber":26,"author":{"gitId":"toahi"},"content":"                        joined \u003d joined + \" \" + input[i];"},{"lineNumber":27,"author":{"gitId":"toahi"},"content":"                    }"},{"lineNumber":28,"author":{"gitId":"toahi"},"content":""},{"lineNumber":29,"author":{"gitId":"toahi"},"content":"                    return ParserOutput.addOutput(new Todo(joined));"},{"lineNumber":30,"author":{"gitId":"toahi"},"content":""},{"lineNumber":31,"author":{"gitId":"toahi"},"content":"                case \"deadline\":"},{"lineNumber":32,"author":{"gitId":"toahi"},"content":"                    int seq \u003d 0;"},{"lineNumber":33,"author":{"gitId":"toahi"},"content":"                    while (!input[seq].equals(\"/by\")) {"},{"lineNumber":34,"author":{"gitId":"toahi"},"content":"                        joined \u003d joined + \" \" + input[seq];"},{"lineNumber":35,"author":{"gitId":"toahi"},"content":"                        seq++;"},{"lineNumber":36,"author":{"gitId":"toahi"},"content":"                        if (seq \u003d\u003d input.length) {"},{"lineNumber":37,"author":{"gitId":"toahi"},"content":"                            throw new DescriptionException(input[0]);"},{"lineNumber":38,"author":{"gitId":"toahi"},"content":"                        }"},{"lineNumber":39,"author":{"gitId":"toahi"},"content":"                    }"},{"lineNumber":40,"author":{"gitId":"toahi"},"content":""},{"lineNumber":41,"author":{"gitId":"toahi"},"content":"                    if (seq + 1 \u003d\u003d input.length) {"},{"lineNumber":42,"author":{"gitId":"toahi"},"content":"                        throw new TimeException(input[0]);"},{"lineNumber":43,"author":{"gitId":"toahi"},"content":"                    }"},{"lineNumber":44,"author":{"gitId":"toahi"},"content":""},{"lineNumber":45,"author":{"gitId":"toahi"},"content":"                    for (int i \u003d seq + 1; i \u003c input.length; i++) {"},{"lineNumber":46,"author":{"gitId":"toahi"},"content":"                        timing \u003d timing + \" \" + input[i];"},{"lineNumber":47,"author":{"gitId":"toahi"},"content":"                    }"},{"lineNumber":48,"author":{"gitId":"toahi"},"content":"                    return ParserOutput.addOutput(new Deadline(joined, timing.trim()));"},{"lineNumber":49,"author":{"gitId":"toahi"},"content":""},{"lineNumber":50,"author":{"gitId":"toahi"},"content":"                case \"event\":"},{"lineNumber":51,"author":{"gitId":"toahi"},"content":"                    int seq2 \u003d 0;"},{"lineNumber":52,"author":{"gitId":"toahi"},"content":"                    while (!input[seq2].equals(\"/at\")) {"},{"lineNumber":53,"author":{"gitId":"toahi"},"content":"                        joined \u003d joined + \" \" + input[seq2];"},{"lineNumber":54,"author":{"gitId":"toahi"},"content":"                        seq2++;"},{"lineNumber":55,"author":{"gitId":"toahi"},"content":"                        if (seq2 \u003d\u003d input.length) {"},{"lineNumber":56,"author":{"gitId":"toahi"},"content":"                            throw new DescriptionException(input[0]);"},{"lineNumber":57,"author":{"gitId":"toahi"},"content":"                        }"},{"lineNumber":58,"author":{"gitId":"toahi"},"content":"                    }"},{"lineNumber":59,"author":{"gitId":"toahi"},"content":""},{"lineNumber":60,"author":{"gitId":"toahi"},"content":"                    if (seq2 + 1 \u003d\u003d input.length) {"},{"lineNumber":61,"author":{"gitId":"toahi"},"content":"                        throw new TimeException(input[0]);"},{"lineNumber":62,"author":{"gitId":"toahi"},"content":"                    }"},{"lineNumber":63,"author":{"gitId":"toahi"},"content":""},{"lineNumber":64,"author":{"gitId":"toahi"},"content":"                    for (int i \u003d seq2 + 1; i \u003c input.length; i++) {"},{"lineNumber":65,"author":{"gitId":"toahi"},"content":"                        timing \u003d timing + \" \" + input[i];"},{"lineNumber":66,"author":{"gitId":"toahi"},"content":"                    }"},{"lineNumber":67,"author":{"gitId":"toahi"},"content":"                    return ParserOutput.addOutput(new Event(joined, timing.trim()));"},{"lineNumber":68,"author":{"gitId":"toahi"},"content":""},{"lineNumber":69,"author":{"gitId":"toahi"},"content":"                case \"delete\":"},{"lineNumber":70,"author":{"gitId":"toahi"},"content":"                    return ParserOutput.removeOutput(Integer.parseInt(input[1]));"},{"lineNumber":71,"author":{"gitId":"toahi"},"content":""},{"lineNumber":72,"author":{"gitId":"toahi"},"content":"                default:"},{"lineNumber":73,"author":{"gitId":"toahi"},"content":"                    throw new NotFoundException();"},{"lineNumber":74,"author":{"gitId":"toahi"},"content":"            }"},{"lineNumber":75,"author":{"gitId":"toahi"},"content":"        }"},{"lineNumber":76,"author":{"gitId":"toahi"},"content":"    }"},{"lineNumber":77,"author":{"gitId":"toahi"},"content":""},{"lineNumber":78,"author":{"gitId":"toahi"},"content":"}"}],"authorContributionMap":{"toahi":78}},{"path":"src/main/java/ParserOutput.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"toahi"},"content":""},{"lineNumber":2,"author":{"gitId":"toahi"},"content":"public class ParserOutput {"},{"lineNumber":3,"author":{"gitId":"toahi"},"content":"    private boolean bye;"},{"lineNumber":4,"author":{"gitId":"toahi"},"content":"    private Task task;"},{"lineNumber":5,"author":{"gitId":"toahi"},"content":"    private int index;"},{"lineNumber":6,"author":{"gitId":"toahi"},"content":"    private int action;"},{"lineNumber":7,"author":{"gitId":"toahi"},"content":""},{"lineNumber":8,"author":{"gitId":"toahi"},"content":"    private ParserOutput(boolean bye, Task task, int action, int index) {"},{"lineNumber":9,"author":{"gitId":"toahi"},"content":"        this.bye \u003d bye;"},{"lineNumber":10,"author":{"gitId":"toahi"},"content":"        this.task \u003d task;"},{"lineNumber":11,"author":{"gitId":"toahi"},"content":"        this.action \u003d action;"},{"lineNumber":12,"author":{"gitId":"toahi"},"content":"        this.index \u003d index;"},{"lineNumber":13,"author":{"gitId":"toahi"},"content":"    }"},{"lineNumber":14,"author":{"gitId":"toahi"},"content":""},{"lineNumber":15,"author":{"gitId":"toahi"},"content":"    public static ParserOutput byeOutput() {"},{"lineNumber":16,"author":{"gitId":"toahi"},"content":"        return new ParserOutput(true, null, 0, 0);"},{"lineNumber":17,"author":{"gitId":"toahi"},"content":"    }"},{"lineNumber":18,"author":{"gitId":"toahi"},"content":""},{"lineNumber":19,"author":{"gitId":"toahi"},"content":"    public static ParserOutput removeOutput(int index) {"},{"lineNumber":20,"author":{"gitId":"toahi"},"content":"        return new ParserOutput(false, null, 1, index);"},{"lineNumber":21,"author":{"gitId":"toahi"},"content":"    }"},{"lineNumber":22,"author":{"gitId":"toahi"},"content":""},{"lineNumber":23,"author":{"gitId":"toahi"},"content":"    public static ParserOutput doneOutput(int index) {"},{"lineNumber":24,"author":{"gitId":"toahi"},"content":"        return new ParserOutput(false, null, 2, index);"},{"lineNumber":25,"author":{"gitId":"toahi"},"content":"    }"},{"lineNumber":26,"author":{"gitId":"toahi"},"content":""},{"lineNumber":27,"author":{"gitId":"toahi"},"content":"    public static ParserOutput addOutput(Task task) {"},{"lineNumber":28,"author":{"gitId":"toahi"},"content":"        return new ParserOutput(false, task, 3, 0);"},{"lineNumber":29,"author":{"gitId":"toahi"},"content":"    }"},{"lineNumber":30,"author":{"gitId":"toahi"},"content":""},{"lineNumber":31,"author":{"gitId":"toahi"},"content":"    public static ParserOutput setOutput(Task task, int index) {"},{"lineNumber":32,"author":{"gitId":"toahi"},"content":"        return new ParserOutput(false, task, 4, index);"},{"lineNumber":33,"author":{"gitId":"toahi"},"content":"    }"},{"lineNumber":34,"author":{"gitId":"toahi"},"content":""},{"lineNumber":35,"author":{"gitId":"toahi"},"content":"    public static ParserOutput listOutput() {"},{"lineNumber":36,"author":{"gitId":"toahi"},"content":"        return new ParserOutput(false, null, 5, 0);"},{"lineNumber":37,"author":{"gitId":"toahi"},"content":"    }"},{"lineNumber":38,"author":{"gitId":"toahi"},"content":""},{"lineNumber":39,"author":{"gitId":"toahi"},"content":"    public boolean isBye() {"},{"lineNumber":40,"author":{"gitId":"toahi"},"content":"        return bye;"},{"lineNumber":41,"author":{"gitId":"toahi"},"content":"    }"},{"lineNumber":42,"author":{"gitId":"toahi"},"content":""},{"lineNumber":43,"author":{"gitId":"toahi"},"content":"    public int getIndex() {"},{"lineNumber":44,"author":{"gitId":"toahi"},"content":"        return index;"},{"lineNumber":45,"author":{"gitId":"toahi"},"content":"    }"},{"lineNumber":46,"author":{"gitId":"toahi"},"content":""},{"lineNumber":47,"author":{"gitId":"toahi"},"content":"    public int getAction() {"},{"lineNumber":48,"author":{"gitId":"toahi"},"content":"        return action;"},{"lineNumber":49,"author":{"gitId":"toahi"},"content":"    }"},{"lineNumber":50,"author":{"gitId":"toahi"},"content":""},{"lineNumber":51,"author":{"gitId":"toahi"},"content":"    public Task getTask() {"},{"lineNumber":52,"author":{"gitId":"toahi"},"content":"        return task;"},{"lineNumber":53,"author":{"gitId":"toahi"},"content":"    }"},{"lineNumber":54,"author":{"gitId":"toahi"},"content":"}"}],"authorContributionMap":{"toahi":54}},{"path":"src/main/java/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"toahi"},"content":""},{"lineNumber":2,"author":{"gitId":"toahi"},"content":""},{"lineNumber":3,"author":{"gitId":"toahi"},"content":"import java.io.FileNotFoundException;"},{"lineNumber":4,"author":{"gitId":"toahi"},"content":"import java.io.IOException;"},{"lineNumber":5,"author":{"gitId":"toahi"},"content":"import java.io.PrintWriter;"},{"lineNumber":6,"author":{"gitId":"toahi"},"content":"import java.nio.file.Files;"},{"lineNumber":7,"author":{"gitId":"toahi"},"content":"import java.nio.file.Paths;"},{"lineNumber":8,"author":{"gitId":"toahi"},"content":"import java.util.ArrayList;"},{"lineNumber":9,"author":{"gitId":"toahi"},"content":""},{"lineNumber":10,"author":{"gitId":"toahi"},"content":"public class Storage {"},{"lineNumber":11,"author":{"gitId":"toahi"},"content":"    private ArrayList\u003cString\u003e itemList;"},{"lineNumber":12,"author":{"gitId":"toahi"},"content":"    private String path;"},{"lineNumber":13,"author":{"gitId":"toahi"},"content":""},{"lineNumber":14,"author":{"gitId":"toahi"},"content":"    public Storage (String path) {"},{"lineNumber":15,"author":{"gitId":"toahi"},"content":"        this.path \u003d path;"},{"lineNumber":16,"author":{"gitId":"toahi"},"content":"        try {"},{"lineNumber":17,"author":{"gitId":"toahi"},"content":"            this.itemList \u003d new ArrayList\u003c\u003e(Files.readAllLines(Paths.get(path)));"},{"lineNumber":18,"author":{"gitId":"toahi"},"content":"        } catch (IOException e) {"},{"lineNumber":19,"author":{"gitId":"toahi"},"content":"            System.out.println(e);"},{"lineNumber":20,"author":{"gitId":"toahi"},"content":"            this.itemList \u003d new ArrayList\u003c\u003e();"},{"lineNumber":21,"author":{"gitId":"toahi"},"content":"        }"},{"lineNumber":22,"author":{"gitId":"toahi"},"content":"    }"},{"lineNumber":23,"author":{"gitId":"toahi"},"content":"    public void add(Task task) {"},{"lineNumber":24,"author":{"gitId":"toahi"},"content":"        this.itemList.add(task.toString());"},{"lineNumber":25,"author":{"gitId":"toahi"},"content":"        this.update();"},{"lineNumber":26,"author":{"gitId":"toahi"},"content":"    }"},{"lineNumber":27,"author":{"gitId":"toahi"},"content":"    public void set(int index, Task newTask) {"},{"lineNumber":28,"author":{"gitId":"toahi"},"content":"        this.itemList.set(index -1, newTask.toString());"},{"lineNumber":29,"author":{"gitId":"toahi"},"content":"        this.update();"},{"lineNumber":30,"author":{"gitId":"toahi"},"content":"    }"},{"lineNumber":31,"author":{"gitId":"toahi"},"content":"    public void remove(int index) {"},{"lineNumber":32,"author":{"gitId":"toahi"},"content":"        this.itemList.remove(index -1);"},{"lineNumber":33,"author":{"gitId":"toahi"},"content":"        this.update();"},{"lineNumber":34,"author":{"gitId":"toahi"},"content":"    }"},{"lineNumber":35,"author":{"gitId":"toahi"},"content":""},{"lineNumber":36,"author":{"gitId":"toahi"},"content":"    public ArrayList\u003cString\u003e readStorage () {"},{"lineNumber":37,"author":{"gitId":"toahi"},"content":"        return this.itemList;"},{"lineNumber":38,"author":{"gitId":"toahi"},"content":"    }"},{"lineNumber":39,"author":{"gitId":"toahi"},"content":"    public void update() {"},{"lineNumber":40,"author":{"gitId":"toahi"},"content":"        try {"},{"lineNumber":41,"author":{"gitId":"toahi"},"content":"            PrintWriter writer \u003d new PrintWriter(path);"},{"lineNumber":42,"author":{"gitId":"toahi"},"content":"            for (String line : this.itemList) {"},{"lineNumber":43,"author":{"gitId":"toahi"},"content":"                writer.println(line);"},{"lineNumber":44,"author":{"gitId":"toahi"},"content":"            }"},{"lineNumber":45,"author":{"gitId":"toahi"},"content":"            writer.close();"},{"lineNumber":46,"author":{"gitId":"toahi"},"content":"        } catch (FileNotFoundException e) {"},{"lineNumber":47,"author":{"gitId":"toahi"},"content":"            System.out.println(e);"},{"lineNumber":48,"author":{"gitId":"toahi"},"content":"        }"},{"lineNumber":49,"author":{"gitId":"toahi"},"content":"    }"},{"lineNumber":50,"author":{"gitId":"toahi"},"content":"}"},{"lineNumber":51,"author":{"gitId":"toahi"},"content":""}],"authorContributionMap":{"toahi":51}},{"path":"src/main/java/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"toahi"},"content":""},{"lineNumber":2,"author":{"gitId":"toahi"},"content":"public class Task {"},{"lineNumber":3,"author":{"gitId":"toahi"},"content":"    String name;"},{"lineNumber":4,"author":{"gitId":"toahi"},"content":"    boolean done;"},{"lineNumber":5,"author":{"gitId":"toahi"},"content":""},{"lineNumber":6,"author":{"gitId":"toahi"},"content":"    Task( String name){"},{"lineNumber":7,"author":{"gitId":"toahi"},"content":"        this.name \u003d name;"},{"lineNumber":8,"author":{"gitId":"toahi"},"content":"        this.done \u003d false;"},{"lineNumber":9,"author":{"gitId":"toahi"},"content":"    }"},{"lineNumber":10,"author":{"gitId":"toahi"},"content":""},{"lineNumber":11,"author":{"gitId":"toahi"},"content":"    public boolean getDone(){"},{"lineNumber":12,"author":{"gitId":"toahi"},"content":"        return this.done;"},{"lineNumber":13,"author":{"gitId":"toahi"},"content":"    }"},{"lineNumber":14,"author":{"gitId":"toahi"},"content":""},{"lineNumber":15,"author":{"gitId":"toahi"},"content":"    public String getName() {"},{"lineNumber":16,"author":{"gitId":"toahi"},"content":"        return name;"},{"lineNumber":17,"author":{"gitId":"toahi"},"content":"    }"},{"lineNumber":18,"author":{"gitId":"toahi"},"content":""},{"lineNumber":19,"author":{"gitId":"toahi"},"content":"    public void setDone(boolean bool){"},{"lineNumber":20,"author":{"gitId":"toahi"},"content":"        this.done \u003d bool;"},{"lineNumber":21,"author":{"gitId":"toahi"},"content":"    }"},{"lineNumber":22,"author":{"gitId":"toahi"},"content":""},{"lineNumber":23,"author":{"gitId":"toahi"},"content":"    @Override"},{"lineNumber":24,"author":{"gitId":"toahi"},"content":"    public String toString() {"},{"lineNumber":25,"author":{"gitId":"toahi"},"content":"        if (done) {"},{"lineNumber":26,"author":{"gitId":"toahi"},"content":"            return \"[X]    \" + name;"},{"lineNumber":27,"author":{"gitId":"toahi"},"content":"        } else {"},{"lineNumber":28,"author":{"gitId":"toahi"},"content":"            return \"[ ]    \" + name;"},{"lineNumber":29,"author":{"gitId":"toahi"},"content":"        }"},{"lineNumber":30,"author":{"gitId":"toahi"},"content":"    }"},{"lineNumber":31,"author":{"gitId":"toahi"},"content":""},{"lineNumber":32,"author":{"gitId":"toahi"},"content":"}"}],"authorContributionMap":{"toahi":32}},{"path":"src/main/java/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"toahi"},"content":"import java.util.ArrayList;"},{"lineNumber":2,"author":{"gitId":"toahi"},"content":"import java.util.List;"},{"lineNumber":3,"author":{"gitId":"toahi"},"content":""},{"lineNumber":4,"author":{"gitId":"toahi"},"content":""},{"lineNumber":5,"author":{"gitId":"toahi"},"content":"public class TaskList {"},{"lineNumber":6,"author":{"gitId":"toahi"},"content":"    private Storage storage;"},{"lineNumber":7,"author":{"gitId":"toahi"},"content":"    private List\u003cTask\u003e tasks;"},{"lineNumber":8,"author":{"gitId":"toahi"},"content":"    private int count;"},{"lineNumber":9,"author":{"gitId":"toahi"},"content":""},{"lineNumber":10,"author":{"gitId":"toahi"},"content":"    public TaskList(Storage storage) {"},{"lineNumber":11,"author":{"gitId":"toahi"},"content":"        this.storage \u003d storage;"},{"lineNumber":12,"author":{"gitId":"toahi"},"content":"        this.tasks \u003d new ArrayList\u003c\u003e();"},{"lineNumber":13,"author":{"gitId":"toahi"},"content":""},{"lineNumber":14,"author":{"gitId":"toahi"},"content":"        ArrayList\u003cString\u003e storageStrings \u003d this.storage.readStorage();"},{"lineNumber":15,"author":{"gitId":"toahi"},"content":"        for (String s : storageStrings) {"},{"lineNumber":16,"author":{"gitId":"toahi"},"content":"            this.tasks.add(parseStorageString(s));"},{"lineNumber":17,"author":{"gitId":"toahi"},"content":"        }"},{"lineNumber":18,"author":{"gitId":"toahi"},"content":""},{"lineNumber":19,"author":{"gitId":"toahi"},"content":"        this.count \u003d this.tasks.size();"},{"lineNumber":20,"author":{"gitId":"toahi"},"content":"    }"},{"lineNumber":21,"author":{"gitId":"toahi"},"content":""},{"lineNumber":22,"author":{"gitId":"toahi"},"content":"    private Task parseStorageString(String storageString) {"},{"lineNumber":23,"author":{"gitId":"toahi"},"content":"        String[] splitStorageString \u003d storageString.split(\"\\\\|\");"},{"lineNumber":24,"author":{"gitId":"toahi"},"content":"        for (String s : splitStorageString) {"},{"lineNumber":25,"author":{"gitId":"toahi"},"content":"            System.out.println(s);"},{"lineNumber":26,"author":{"gitId":"toahi"},"content":"        }"},{"lineNumber":27,"author":{"gitId":"toahi"},"content":"        Task task;"},{"lineNumber":28,"author":{"gitId":"toahi"},"content":"        if (splitStorageString[0].equals(\"T\")) {"},{"lineNumber":29,"author":{"gitId":"toahi"},"content":"            task \u003d new Todo(splitStorageString[2]);"},{"lineNumber":30,"author":{"gitId":"toahi"},"content":"        } else if (splitStorageString[0].equals(\"D\")) {"},{"lineNumber":31,"author":{"gitId":"toahi"},"content":"            task \u003d new Deadline(splitStorageString[2], splitStorageString[3]);"},{"lineNumber":32,"author":{"gitId":"toahi"},"content":"        } else {"},{"lineNumber":33,"author":{"gitId":"toahi"},"content":"            task \u003d new Event(splitStorageString[2], splitStorageString[3]);"},{"lineNumber":34,"author":{"gitId":"toahi"},"content":"        }"},{"lineNumber":35,"author":{"gitId":"toahi"},"content":""},{"lineNumber":36,"author":{"gitId":"toahi"},"content":"        if (splitStorageString[1].equals(\"Y\")) {"},{"lineNumber":37,"author":{"gitId":"toahi"},"content":"            task.setDone(true);"},{"lineNumber":38,"author":{"gitId":"toahi"},"content":"        }"},{"lineNumber":39,"author":{"gitId":"toahi"},"content":""},{"lineNumber":40,"author":{"gitId":"toahi"},"content":"        return task;"},{"lineNumber":41,"author":{"gitId":"toahi"},"content":"    }"},{"lineNumber":42,"author":{"gitId":"toahi"},"content":""},{"lineNumber":43,"author":{"gitId":"toahi"},"content":"    public Task get(int index) {"},{"lineNumber":44,"author":{"gitId":"toahi"},"content":"        return this.tasks.get(index - 1);"},{"lineNumber":45,"author":{"gitId":"toahi"},"content":"    }"},{"lineNumber":46,"author":{"gitId":"toahi"},"content":""},{"lineNumber":47,"author":{"gitId":"toahi"},"content":"    public void remove(int index) {"},{"lineNumber":48,"author":{"gitId":"toahi"},"content":"        this.storage.remove(index);"},{"lineNumber":49,"author":{"gitId":"toahi"},"content":"        this.tasks.remove(index -1);"},{"lineNumber":50,"author":{"gitId":"toahi"},"content":"        this.count--;"},{"lineNumber":51,"author":{"gitId":"toahi"},"content":"    }"},{"lineNumber":52,"author":{"gitId":"toahi"},"content":""},{"lineNumber":53,"author":{"gitId":"toahi"},"content":"    public void set(int index, Task task) {"},{"lineNumber":54,"author":{"gitId":"toahi"},"content":"        this.storage.set(index, task);"},{"lineNumber":55,"author":{"gitId":"toahi"},"content":"        this.tasks.set(index -1, task );"},{"lineNumber":56,"author":{"gitId":"toahi"},"content":"    }"},{"lineNumber":57,"author":{"gitId":"toahi"},"content":""},{"lineNumber":58,"author":{"gitId":"toahi"},"content":"    public void add(Task task) {"},{"lineNumber":59,"author":{"gitId":"toahi"},"content":"        this.storage.add(task);"},{"lineNumber":60,"author":{"gitId":"toahi"},"content":"        this.tasks.add(task);"},{"lineNumber":61,"author":{"gitId":"toahi"},"content":"        this.count++;"},{"lineNumber":62,"author":{"gitId":"toahi"},"content":"    }"},{"lineNumber":63,"author":{"gitId":"toahi"},"content":""},{"lineNumber":64,"author":{"gitId":"toahi"},"content":"    public int getSize() {"},{"lineNumber":65,"author":{"gitId":"toahi"},"content":"        return this.count;"},{"lineNumber":66,"author":{"gitId":"toahi"},"content":"    }"},{"lineNumber":67,"author":{"gitId":"toahi"},"content":""},{"lineNumber":68,"author":{"gitId":"toahi"},"content":"}"}],"authorContributionMap":{"toahi":68}},{"path":"src/main/java/TimeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"toahi"},"content":""},{"lineNumber":2,"author":{"gitId":"toahi"},"content":"public class TimeException extends DukeException {"},{"lineNumber":3,"author":{"gitId":"toahi"},"content":"    public TimeException(String event){"},{"lineNumber":4,"author":{"gitId":"toahi"},"content":"        super(\"The timing of \" + event + \"cannot be empty\");"},{"lineNumber":5,"author":{"gitId":"toahi"},"content":"    }"},{"lineNumber":6,"author":{"gitId":"toahi"},"content":"}"}],"authorContributionMap":{"toahi":6}},{"path":"src/main/java/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"toahi"},"content":"public class Todo extends Task {"},{"lineNumber":2,"author":{"gitId":"toahi"},"content":""},{"lineNumber":3,"author":{"gitId":"toahi"},"content":""},{"lineNumber":4,"author":{"gitId":"toahi"},"content":"    Todo(String name) {"},{"lineNumber":5,"author":{"gitId":"toahi"},"content":"        super(name);"},{"lineNumber":6,"author":{"gitId":"toahi"},"content":"    }"},{"lineNumber":7,"author":{"gitId":"toahi"},"content":""},{"lineNumber":8,"author":{"gitId":"toahi"},"content":"    @Override"},{"lineNumber":9,"author":{"gitId":"toahi"},"content":"    public String toString(){"},{"lineNumber":10,"author":{"gitId":"toahi"},"content":"        return \"[T]\" + super.toString();"},{"lineNumber":11,"author":{"gitId":"toahi"},"content":"    }"},{"lineNumber":12,"author":{"gitId":"toahi"},"content":"}"}],"authorContributionMap":{"toahi":12}},{"path":"src/main/java/UI.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"toahi"},"content":"import java.util.Scanner;"},{"lineNumber":2,"author":{"gitId":"toahi"},"content":""},{"lineNumber":3,"author":{"gitId":"toahi"},"content":"public class UI {"},{"lineNumber":4,"author":{"gitId":"toahi"},"content":"    private static final String H_RULE \u003d \"────────────────────────────────────────────────────────────────────\";"},{"lineNumber":5,"author":{"gitId":"toahi"},"content":"    private Scanner sc;"},{"lineNumber":6,"author":{"gitId":"toahi"},"content":"    private String raw_in;"},{"lineNumber":7,"author":{"gitId":"toahi"},"content":"    private String[] input;"},{"lineNumber":8,"author":{"gitId":"toahi"},"content":""},{"lineNumber":9,"author":{"gitId":"toahi"},"content":"    public UI() {"},{"lineNumber":10,"author":{"gitId":"toahi"},"content":"        this.sc \u003d new Scanner(System.in);"},{"lineNumber":11,"author":{"gitId":"toahi"},"content":"    }"},{"lineNumber":12,"author":{"gitId":"toahi"},"content":""},{"lineNumber":13,"author":{"gitId":"toahi"},"content":"    public String getInputFromUser() {"},{"lineNumber":14,"author":{"gitId":"toahi"},"content":"        this.raw_in \u003d this.sc.nextLine().trim();"},{"lineNumber":15,"author":{"gitId":"toahi"},"content":"        return raw_in;"},{"lineNumber":16,"author":{"gitId":"toahi"},"content":"    }"},{"lineNumber":17,"author":{"gitId":"toahi"},"content":""},{"lineNumber":18,"author":{"gitId":"toahi"},"content":"    public static void printHello() {"},{"lineNumber":19,"author":{"gitId":"toahi"},"content":"        String logo \u003d \" ____        _        \\n\""},{"lineNumber":20,"author":{"gitId":"toahi"},"content":"                + \"|  _ \\\\ _   _| | _____ \\n\""},{"lineNumber":21,"author":{"gitId":"toahi"},"content":"                + \"| | | | | | | |/ / _ \\\\\\n\""},{"lineNumber":22,"author":{"gitId":"toahi"},"content":"                + \"| |_| | |_| |   \u003c  __/\\n\""},{"lineNumber":23,"author":{"gitId":"toahi"},"content":"                + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\";"},{"lineNumber":24,"author":{"gitId":"toahi"},"content":"        System.out.println(\"Hello from\\n\" + logo);"},{"lineNumber":25,"author":{"gitId":"toahi"},"content":""},{"lineNumber":26,"author":{"gitId":"toahi"},"content":"        System.out.println(\"Greetings! I am Duke! How may I assist you?\\n\" + H_RULE);"},{"lineNumber":27,"author":{"gitId":"toahi"},"content":"    }"},{"lineNumber":28,"author":{"gitId":"toahi"},"content":""},{"lineNumber":29,"author":{"gitId":"toahi"},"content":"    public static void printGoodbye() {"},{"lineNumber":30,"author":{"gitId":"toahi"},"content":"        System.out.println(\"\\nGoodbye! Have a nice day!\\n\");"},{"lineNumber":31,"author":{"gitId":"toahi"},"content":"    }"},{"lineNumber":32,"author":{"gitId":"toahi"},"content":""},{"lineNumber":33,"author":{"gitId":"toahi"},"content":"    public static void printList(TaskList tasks) {"},{"lineNumber":34,"author":{"gitId":"toahi"},"content":"        for (int i \u003d 1; i \u003c\u003d tasks.getSize(); i++) {"},{"lineNumber":35,"author":{"gitId":"toahi"},"content":"            System.out.println(i + \". \" + tasks.get(i).toString());"},{"lineNumber":36,"author":{"gitId":"toahi"},"content":"        }"},{"lineNumber":37,"author":{"gitId":"toahi"},"content":"    }"},{"lineNumber":38,"author":{"gitId":"toahi"},"content":""},{"lineNumber":39,"author":{"gitId":"toahi"},"content":"    public static void printHRule() {"},{"lineNumber":40,"author":{"gitId":"toahi"},"content":"        System.out.println(H_RULE);"},{"lineNumber":41,"author":{"gitId":"toahi"},"content":"    }"},{"lineNumber":42,"author":{"gitId":"toahi"},"content":""},{"lineNumber":43,"author":{"gitId":"toahi"},"content":"    public void printDone(Task task) {"},{"lineNumber":44,"author":{"gitId":"toahi"},"content":"        System.out.println(\"Alright, I will mark this as done.\\n\" + task.toString());"},{"lineNumber":45,"author":{"gitId":"toahi"},"content":"    }"},{"lineNumber":46,"author":{"gitId":"toahi"},"content":""},{"lineNumber":47,"author":{"gitId":"toahi"},"content":"    public void printAdded(Task task, int count) {"},{"lineNumber":48,"author":{"gitId":"toahi"},"content":"        System.out.println(\"Added \" + task.getName() + \". \\nYou now have \" + count + \" items in your list.\");"},{"lineNumber":49,"author":{"gitId":"toahi"},"content":"    }"},{"lineNumber":50,"author":{"gitId":"toahi"},"content":""},{"lineNumber":51,"author":{"gitId":"toahi"},"content":"    public void printRemoved(int index) {"},{"lineNumber":52,"author":{"gitId":"toahi"},"content":"        System.out.println(\"I have removed item \" + index + \".\");"},{"lineNumber":53,"author":{"gitId":"toahi"},"content":"    }"},{"lineNumber":54,"author":{"gitId":"toahi"},"content":""},{"lineNumber":55,"author":{"gitId":"toahi"},"content":"}"}],"authorContributionMap":{"toahi":55}},{"path":"src/test/java/ParserTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"toahi"},"content":"import org.junit.jupiter.api.BeforeEach;"},{"lineNumber":2,"author":{"gitId":"toahi"},"content":"import org.junit.jupiter.api.DisplayName;"},{"lineNumber":3,"author":{"gitId":"toahi"},"content":"import org.junit.jupiter.api.Test;"},{"lineNumber":4,"author":{"gitId":"toahi"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;"},{"lineNumber":5,"author":{"gitId":"toahi"},"content":"//import static org.hamcrest.MatcherAssert.assertThat;"},{"lineNumber":6,"author":{"gitId":"toahi"},"content":"//import static org.hamcrest.CoreMatchers.instanceOf;"},{"lineNumber":7,"author":{"gitId":"toahi"},"content":""},{"lineNumber":8,"author":{"gitId":"toahi"},"content":"public class ParserTest {"},{"lineNumber":9,"author":{"gitId":"toahi"},"content":""},{"lineNumber":10,"author":{"gitId":"toahi"},"content":"    @DisplayName(\"Test for list. \")"},{"lineNumber":11,"author":{"gitId":"toahi"},"content":"    @Test"},{"lineNumber":12,"author":{"gitId":"toahi"},"content":"    public void listTest() throws DukeException {"},{"lineNumber":13,"author":{"gitId":"toahi"},"content":"        ParserOutput out \u003d Parser.parse(\"list\");"},{"lineNumber":14,"author":{"gitId":"toahi"},"content":"        assertEquals(out.getAction(), 5);"},{"lineNumber":15,"author":{"gitId":"toahi"},"content":"    }"},{"lineNumber":16,"author":{"gitId":"toahi"},"content":""},{"lineNumber":17,"author":{"gitId":"toahi"},"content":"    @DisplayName(\"Test for add. \")"},{"lineNumber":18,"author":{"gitId":"toahi"},"content":"    @Test"},{"lineNumber":19,"author":{"gitId":"toahi"},"content":"    public void addTest() throws DukeException {"},{"lineNumber":20,"author":{"gitId":"toahi"},"content":"        ParserOutput out \u003d Parser.parse(\"todo do something\");"},{"lineNumber":21,"author":{"gitId":"toahi"},"content":"        assertEquals(out.getAction(), 3);"},{"lineNumber":22,"author":{"gitId":"toahi"},"content":"    }"},{"lineNumber":23,"author":{"gitId":"toahi"},"content":""},{"lineNumber":24,"author":{"gitId":"toahi"},"content":"    @DisplayName(\"Test if parser creates Todo object when todo is added. \")"},{"lineNumber":25,"author":{"gitId":"toahi"},"content":"    @Test"},{"lineNumber":26,"author":{"gitId":"toahi"},"content":"    public void addTodoTest() throws DukeException {"},{"lineNumber":27,"author":{"gitId":"toahi"},"content":"        ParserOutput out \u003d Parser.parse(\"todo do something\");"},{"lineNumber":28,"author":{"gitId":"toahi"},"content":"        assertThat(out.getTask(), instanceOf(Todo.class));"},{"lineNumber":29,"author":{"gitId":"toahi"},"content":"    }"},{"lineNumber":30,"author":{"gitId":"toahi"},"content":""},{"lineNumber":31,"author":{"gitId":"toahi"},"content":"    @DisplayName(\"Test if parser creates Event object when todo is added. \")"},{"lineNumber":32,"author":{"gitId":"toahi"},"content":"    @Test"},{"lineNumber":33,"author":{"gitId":"toahi"},"content":"    public void addEventTest() throws DukeException {"},{"lineNumber":34,"author":{"gitId":"toahi"},"content":"        ParserOutput out \u003d Parser.parse(\"event do something /at 2021-1-11\");"},{"lineNumber":35,"author":{"gitId":"toahi"},"content":"        assertThat(out.getTask(), instanceOf(Event.class));"},{"lineNumber":36,"author":{"gitId":"toahi"},"content":"    }"},{"lineNumber":37,"author":{"gitId":"toahi"},"content":""},{"lineNumber":38,"author":{"gitId":"toahi"},"content":"    @DisplayName(\"Test if parser creates Deadline object when todo is added. \")"},{"lineNumber":39,"author":{"gitId":"toahi"},"content":"    @Test"},{"lineNumber":40,"author":{"gitId":"toahi"},"content":"    public void addDeadlineTest() throws DukeException {"},{"lineNumber":41,"author":{"gitId":"toahi"},"content":"        ParserOutput out \u003d Parser.parse(\"deadline abc /by 2021-1-11\");"},{"lineNumber":42,"author":{"gitId":"toahi"},"content":"        assertThat(out.getTask(), instanceOf(Deadline.class));"},{"lineNumber":43,"author":{"gitId":"toahi"},"content":"    }"},{"lineNumber":44,"author":{"gitId":"toahi"},"content":""},{"lineNumber":45,"author":{"gitId":"toahi"},"content":"    @DisplayName(\"Test for delete. \")"},{"lineNumber":46,"author":{"gitId":"toahi"},"content":"    @Test"},{"lineNumber":47,"author":{"gitId":"toahi"},"content":"    public void deleteTest() throws DukeException {"},{"lineNumber":48,"author":{"gitId":"toahi"},"content":"        ParserOutput out \u003d Parser.parse(\"delete 1\");"},{"lineNumber":49,"author":{"gitId":"toahi"},"content":"        assertEquals(out.getAction(), 1);"},{"lineNumber":50,"author":{"gitId":"toahi"},"content":"    }"},{"lineNumber":51,"author":{"gitId":"toahi"},"content":""},{"lineNumber":52,"author":{"gitId":"toahi"},"content":"    @DisplayName(\"Test for done. \")"},{"lineNumber":53,"author":{"gitId":"toahi"},"content":"    @Test"},{"lineNumber":54,"author":{"gitId":"toahi"},"content":"    public void doneTest() throws DukeException {"},{"lineNumber":55,"author":{"gitId":"toahi"},"content":"        ParserOutput out \u003d Parser.parse(\"done 1\");"},{"lineNumber":56,"author":{"gitId":"toahi"},"content":"        assertEquals(out.getAction(), 2);"},{"lineNumber":57,"author":{"gitId":"toahi"},"content":"    }"},{"lineNumber":58,"author":{"gitId":"toahi"},"content":""},{"lineNumber":59,"author":{"gitId":"toahi"},"content":"    @DisplayName(\"Test for bye. \")"},{"lineNumber":60,"author":{"gitId":"toahi"},"content":"    @Test"},{"lineNumber":61,"author":{"gitId":"toahi"},"content":"    public void byeTest() throws DukeException {"},{"lineNumber":62,"author":{"gitId":"toahi"},"content":"        ParserOutput out \u003d Parser.parse(\"bye\");"},{"lineNumber":63,"author":{"gitId":"toahi"},"content":"        assertEquals(out.isBye(), true);"},{"lineNumber":64,"author":{"gitId":"toahi"},"content":"    }"},{"lineNumber":65,"author":{"gitId":"toahi"},"content":"}"}],"authorContributionMap":{"toahi":65}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"toahi"},"content":"todo meet friends"},{"lineNumber":2,"author":{"gitId":"toahi"},"content":"deadline do 2103 /by 123"},{"lineNumber":3,"author":{"gitId":"toahi"},"content":"event lecture /at 456"},{"lineNumber":4,"author":{"gitId":"toahi"},"content":"list"},{"lineNumber":5,"author":{"gitId":"toahi"},"content":"done 1"},{"lineNumber":6,"author":{"gitId":"toahi"},"content":"list"},{"lineNumber":7,"author":{"gitId":"toahi"},"content":"bye"}],"authorContributionMap":{"toahi":7}}]
