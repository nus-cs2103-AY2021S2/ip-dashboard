[{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027checkstyle\u0027"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027"},{"lineNumber":6,"author":{"gitId":"-"},"content":"}"},{"lineNumber":7,"author":{"gitId":"-"},"content":""},{"lineNumber":8,"author":{"gitId":"-"},"content":"repositories {"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    mavenCentral()"},{"lineNumber":10,"author":{"gitId":"-"},"content":"}"},{"lineNumber":11,"author":{"gitId":"-"},"content":""},{"lineNumber":12,"author":{"gitId":"-"},"content":"dependencies {"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.5.0\u0027"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.5.0\u0027"},{"lineNumber":15,"author":{"gitId":"noelmathewisaac"},"content":""},{"lineNumber":16,"author":{"gitId":"noelmathewisaac"},"content":"    String javaFxVersion \u003d \u002711\u0027"},{"lineNumber":17,"author":{"gitId":"noelmathewisaac"},"content":""},{"lineNumber":18,"author":{"gitId":"noelmathewisaac"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027"},{"lineNumber":19,"author":{"gitId":"noelmathewisaac"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"},{"lineNumber":20,"author":{"gitId":"noelmathewisaac"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"},{"lineNumber":21,"author":{"gitId":"noelmathewisaac"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027"},{"lineNumber":22,"author":{"gitId":"noelmathewisaac"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"},{"lineNumber":23,"author":{"gitId":"noelmathewisaac"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"},{"lineNumber":24,"author":{"gitId":"noelmathewisaac"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027"},{"lineNumber":25,"author":{"gitId":"noelmathewisaac"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"},{"lineNumber":26,"author":{"gitId":"noelmathewisaac"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"},{"lineNumber":27,"author":{"gitId":"noelmathewisaac"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027"},{"lineNumber":28,"author":{"gitId":"noelmathewisaac"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"},{"lineNumber":29,"author":{"gitId":"noelmathewisaac"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"},{"lineNumber":30,"author":{"gitId":"-"},"content":"}"},{"lineNumber":31,"author":{"gitId":"-"},"content":""},{"lineNumber":32,"author":{"gitId":"-"},"content":"test {"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    useJUnitPlatform()"},{"lineNumber":34,"author":{"gitId":"-"},"content":""},{"lineNumber":35,"author":{"gitId":"-"},"content":"    testLogging {"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\""},{"lineNumber":37,"author":{"gitId":"-"},"content":""},{"lineNumber":38,"author":{"gitId":"-"},"content":"        showExceptions true"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\""},{"lineNumber":40,"author":{"gitId":"-"},"content":"        showCauses true"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        showStackTraces true"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":44,"author":{"gitId":"-"},"content":"}"},{"lineNumber":45,"author":{"gitId":"-"},"content":""},{"lineNumber":46,"author":{"gitId":"-"},"content":"application {"},{"lineNumber":47,"author":{"gitId":"noelmathewisaac"},"content":"    mainClassName \u003d \"Duke\""},{"lineNumber":48,"author":{"gitId":"-"},"content":"}"},{"lineNumber":49,"author":{"gitId":"-"},"content":""},{"lineNumber":50,"author":{"gitId":"-"},"content":"shadowJar {"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    archiveBaseName \u003d \"duke\""},{"lineNumber":52,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null"},{"lineNumber":53,"author":{"gitId":"-"},"content":"}"},{"lineNumber":54,"author":{"gitId":"-"},"content":""},{"lineNumber":55,"author":{"gitId":"-"},"content":"checkstyle {"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    toolVersion \u003d \u00278.29\u0027"},{"lineNumber":57,"author":{"gitId":"-"},"content":"}"},{"lineNumber":58,"author":{"gitId":"-"},"content":""},{"lineNumber":59,"author":{"gitId":"-"},"content":"run{"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in"},{"lineNumber":61,"author":{"gitId":"-"},"content":"}"}],"authorContributionMap":{"-":45,"noelmathewisaac":16}},{"path":"data/duke.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"noelmathewisaac"},"content":"T | 1 | Finishproject"},{"lineNumber":2,"author":{"gitId":"noelmathewisaac"},"content":"T | 0 | readbook"},{"lineNumber":3,"author":{"gitId":"noelmathewisaac"},"content":"E | 1 | careerfair | 2020-02-03"},{"lineNumber":4,"author":{"gitId":"noelmathewisaac"},"content":"D | 0 | presentationsubmission | 2021-09-09"},{"lineNumber":5,"author":{"gitId":"noelmathewisaac"},"content":"D | 0 | retiurnbook | 2021-03-04"},{"lineNumber":6,"author":{"gitId":"noelmathewisaac"},"content":"T | 0 |  eat"}],"authorContributionMap":{"noelmathewisaac":6}},{"path":"src/main/java/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"noelmathewisaac"},"content":"import java.time.LocalDate;"},{"lineNumber":2,"author":{"gitId":"noelmathewisaac"},"content":"import java.time.format.DateTimeFormatter;"},{"lineNumber":3,"author":{"gitId":"noelmathewisaac"},"content":""},{"lineNumber":4,"author":{"gitId":"noelmathewisaac"},"content":"/**"},{"lineNumber":5,"author":{"gitId":"noelmathewisaac"},"content":" * Represents a Deadline task that needs to be done before a specific date/time."},{"lineNumber":6,"author":{"gitId":"noelmathewisaac"},"content":" */"},{"lineNumber":7,"author":{"gitId":"noelmathewisaac"},"content":"public class Deadline extends Task {"},{"lineNumber":8,"author":{"gitId":"noelmathewisaac"},"content":""},{"lineNumber":9,"author":{"gitId":"noelmathewisaac"},"content":"    protected LocalDate by;"},{"lineNumber":10,"author":{"gitId":"noelmathewisaac"},"content":""},{"lineNumber":11,"author":{"gitId":"noelmathewisaac"},"content":"    /**"},{"lineNumber":12,"author":{"gitId":"noelmathewisaac"},"content":"     * Creates an deadline instance."},{"lineNumber":13,"author":{"gitId":"noelmathewisaac"},"content":"     *"},{"lineNumber":14,"author":{"gitId":"noelmathewisaac"},"content":"     * @param description String describing the deadline"},{"lineNumber":15,"author":{"gitId":"noelmathewisaac"},"content":"     * @param by          String containing the deadline time"},{"lineNumber":16,"author":{"gitId":"noelmathewisaac"},"content":"     */"},{"lineNumber":17,"author":{"gitId":"noelmathewisaac"},"content":"    public Deadline(String description, LocalDate by) {"},{"lineNumber":18,"author":{"gitId":"noelmathewisaac"},"content":"        super(description);"},{"lineNumber":19,"author":{"gitId":"noelmathewisaac"},"content":"        this.by \u003d by;"},{"lineNumber":20,"author":{"gitId":"noelmathewisaac"},"content":"    }"},{"lineNumber":21,"author":{"gitId":"noelmathewisaac"},"content":""},{"lineNumber":22,"author":{"gitId":"noelmathewisaac"},"content":"    /**"},{"lineNumber":23,"author":{"gitId":"noelmathewisaac"},"content":"     * Returns a String which gives information about the deadline."},{"lineNumber":24,"author":{"gitId":"noelmathewisaac"},"content":"     *"},{"lineNumber":25,"author":{"gitId":"noelmathewisaac"},"content":"     * @return A String containing information about the deadline."},{"lineNumber":26,"author":{"gitId":"noelmathewisaac"},"content":"     */"},{"lineNumber":27,"author":{"gitId":"noelmathewisaac"},"content":"    @Override"},{"lineNumber":28,"author":{"gitId":"noelmathewisaac"},"content":"    public String toString() {"},{"lineNumber":29,"author":{"gitId":"noelmathewisaac"},"content":"        return \"[D]\" + super.toString() + \" (by: \""},{"lineNumber":30,"author":{"gitId":"noelmathewisaac"},"content":"                + this.by.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\")) + \")\";"},{"lineNumber":31,"author":{"gitId":"noelmathewisaac"},"content":"    }"},{"lineNumber":32,"author":{"gitId":"noelmathewisaac"},"content":""},{"lineNumber":33,"author":{"gitId":"noelmathewisaac"},"content":"    /**"},{"lineNumber":34,"author":{"gitId":"noelmathewisaac"},"content":"     * Returns a String which gives information about the deadline in the"},{"lineNumber":35,"author":{"gitId":"noelmathewisaac"},"content":"     * format to be stored in a file."},{"lineNumber":36,"author":{"gitId":"noelmathewisaac"},"content":"     *"},{"lineNumber":37,"author":{"gitId":"noelmathewisaac"},"content":"     * @return A String containing information about the deadline."},{"lineNumber":38,"author":{"gitId":"noelmathewisaac"},"content":"     */"},{"lineNumber":39,"author":{"gitId":"noelmathewisaac"},"content":"    @Override"},{"lineNumber":40,"author":{"gitId":"noelmathewisaac"},"content":"    public String fileString() {"},{"lineNumber":41,"author":{"gitId":"noelmathewisaac"},"content":"        int statusNum \u003d this.getStatus() ? 1 : 0;"},{"lineNumber":42,"author":{"gitId":"noelmathewisaac"},"content":"        return \"D | \" + statusNum + \" | \" + this.getDescription() + \" | \" + this.by;"},{"lineNumber":43,"author":{"gitId":"noelmathewisaac"},"content":"    }"},{"lineNumber":44,"author":{"gitId":"noelmathewisaac"},"content":"}"}],"authorContributionMap":{"noelmathewisaac":44}},{"path":"src/main/java/DialogBox.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"noelmathewisaac"},"content":"import javafx.collections.FXCollections;"},{"lineNumber":2,"author":{"gitId":"noelmathewisaac"},"content":"import javafx.collections.ObservableList;"},{"lineNumber":3,"author":{"gitId":"noelmathewisaac"},"content":"import javafx.fxml.FXML;"},{"lineNumber":4,"author":{"gitId":"noelmathewisaac"},"content":"import javafx.fxml.FXMLLoader;"},{"lineNumber":5,"author":{"gitId":"noelmathewisaac"},"content":"import javafx.geometry.Pos;"},{"lineNumber":6,"author":{"gitId":"noelmathewisaac"},"content":"import javafx.scene.Node;"},{"lineNumber":7,"author":{"gitId":"noelmathewisaac"},"content":"import javafx.scene.control.Label;"},{"lineNumber":8,"author":{"gitId":"noelmathewisaac"},"content":"import javafx.scene.image.Image;"},{"lineNumber":9,"author":{"gitId":"noelmathewisaac"},"content":"import javafx.scene.image.ImageView;"},{"lineNumber":10,"author":{"gitId":"noelmathewisaac"},"content":"import javafx.scene.layout.HBox;"},{"lineNumber":11,"author":{"gitId":"noelmathewisaac"},"content":""},{"lineNumber":12,"author":{"gitId":"noelmathewisaac"},"content":"import java.io.IOException;"},{"lineNumber":13,"author":{"gitId":"noelmathewisaac"},"content":"import java.util.Collections;"},{"lineNumber":14,"author":{"gitId":"noelmathewisaac"},"content":""},{"lineNumber":15,"author":{"gitId":"noelmathewisaac"},"content":""},{"lineNumber":16,"author":{"gitId":"noelmathewisaac"},"content":"/**"},{"lineNumber":17,"author":{"gitId":"noelmathewisaac"},"content":" * An example of a custom control using FXML."},{"lineNumber":18,"author":{"gitId":"noelmathewisaac"},"content":" * This control represents a dialog box consisting of an ImageView to represent the speaker\u0027s face and a label"},{"lineNumber":19,"author":{"gitId":"noelmathewisaac"},"content":" * containing text from the speaker."},{"lineNumber":20,"author":{"gitId":"noelmathewisaac"},"content":" */"},{"lineNumber":21,"author":{"gitId":"noelmathewisaac"},"content":"public class DialogBox extends HBox {"},{"lineNumber":22,"author":{"gitId":"noelmathewisaac"},"content":"    @FXML"},{"lineNumber":23,"author":{"gitId":"noelmathewisaac"},"content":"    private Label dialog;"},{"lineNumber":24,"author":{"gitId":"noelmathewisaac"},"content":"    @FXML"},{"lineNumber":25,"author":{"gitId":"noelmathewisaac"},"content":"    private ImageView displayPicture;"},{"lineNumber":26,"author":{"gitId":"noelmathewisaac"},"content":""},{"lineNumber":27,"author":{"gitId":"noelmathewisaac"},"content":"    private DialogBox(String text, Image img) {"},{"lineNumber":28,"author":{"gitId":"noelmathewisaac"},"content":"        try {"},{"lineNumber":29,"author":{"gitId":"noelmathewisaac"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(\"/view/DialogBox.fxml\"));"},{"lineNumber":30,"author":{"gitId":"noelmathewisaac"},"content":"            fxmlLoader.setController(this);"},{"lineNumber":31,"author":{"gitId":"noelmathewisaac"},"content":"            fxmlLoader.setRoot(this);"},{"lineNumber":32,"author":{"gitId":"noelmathewisaac"},"content":"            fxmlLoader.load();"},{"lineNumber":33,"author":{"gitId":"noelmathewisaac"},"content":"        } catch (IOException e) {"},{"lineNumber":34,"author":{"gitId":"noelmathewisaac"},"content":"            e.printStackTrace();"},{"lineNumber":35,"author":{"gitId":"noelmathewisaac"},"content":"        }"},{"lineNumber":36,"author":{"gitId":"noelmathewisaac"},"content":""},{"lineNumber":37,"author":{"gitId":"noelmathewisaac"},"content":"        dialog.setText(text);"},{"lineNumber":38,"author":{"gitId":"noelmathewisaac"},"content":"        displayPicture.setImage(img);"},{"lineNumber":39,"author":{"gitId":"noelmathewisaac"},"content":"    }"},{"lineNumber":40,"author":{"gitId":"noelmathewisaac"},"content":""},{"lineNumber":41,"author":{"gitId":"noelmathewisaac"},"content":"    /**"},{"lineNumber":42,"author":{"gitId":"noelmathewisaac"},"content":"     * Flips the dialog box such that the ImageView is on the left and text on the right."},{"lineNumber":43,"author":{"gitId":"noelmathewisaac"},"content":"     */"},{"lineNumber":44,"author":{"gitId":"noelmathewisaac"},"content":"    private void flip() {"},{"lineNumber":45,"author":{"gitId":"noelmathewisaac"},"content":"        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());"},{"lineNumber":46,"author":{"gitId":"noelmathewisaac"},"content":"        Collections.reverse(tmp);"},{"lineNumber":47,"author":{"gitId":"noelmathewisaac"},"content":"        getChildren().setAll(tmp);"},{"lineNumber":48,"author":{"gitId":"noelmathewisaac"},"content":"        setAlignment(Pos.CENTER_LEFT);"},{"lineNumber":49,"author":{"gitId":"noelmathewisaac"},"content":"    }"},{"lineNumber":50,"author":{"gitId":"noelmathewisaac"},"content":""},{"lineNumber":51,"author":{"gitId":"noelmathewisaac"},"content":"    public static DialogBox getUserDialog(String text, Image img) {"},{"lineNumber":52,"author":{"gitId":"noelmathewisaac"},"content":"        return new DialogBox(text, img);"},{"lineNumber":53,"author":{"gitId":"noelmathewisaac"},"content":"    }"},{"lineNumber":54,"author":{"gitId":"noelmathewisaac"},"content":""},{"lineNumber":55,"author":{"gitId":"noelmathewisaac"},"content":"    public static DialogBox getDukeDialog(String text, Image img) {"},{"lineNumber":56,"author":{"gitId":"noelmathewisaac"},"content":"        var db \u003d new DialogBox(text, img);"},{"lineNumber":57,"author":{"gitId":"noelmathewisaac"},"content":"        db.flip();"},{"lineNumber":58,"author":{"gitId":"noelmathewisaac"},"content":"        return db;"},{"lineNumber":59,"author":{"gitId":"noelmathewisaac"},"content":"    }"},{"lineNumber":60,"author":{"gitId":"noelmathewisaac"},"content":"}"},{"lineNumber":61,"author":{"gitId":"noelmathewisaac"},"content":""}],"authorContributionMap":{"noelmathewisaac":61}},{"path":"src/main/java/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"noelmathewisaac"},"content":"import java.io.FileNotFoundException;"},{"lineNumber":2,"author":{"gitId":"noelmathewisaac"},"content":""},{"lineNumber":3,"author":{"gitId":"noelmathewisaac"},"content":"/**"},{"lineNumber":4,"author":{"gitId":"noelmathewisaac"},"content":" * A personal task managing chatbot project."},{"lineNumber":5,"author":{"gitId":"noelmathewisaac"},"content":" */"},{"lineNumber":6,"author":{"gitId":"-"},"content":"public class Duke {"},{"lineNumber":7,"author":{"gitId":"noelmathewisaac"},"content":"    private TaskList tasks;"},{"lineNumber":8,"author":{"gitId":"noelmathewisaac"},"content":"    private Storage storage;"},{"lineNumber":9,"author":{"gitId":"noelmathewisaac"},"content":"    private Ui ui;"},{"lineNumber":10,"author":{"gitId":"noelmathewisaac"},"content":""},{"lineNumber":11,"author":{"gitId":"noelmathewisaac"},"content":"    Duke() {"},{"lineNumber":12,"author":{"gitId":"noelmathewisaac"},"content":"        this.ui \u003d new Ui();"},{"lineNumber":13,"author":{"gitId":"noelmathewisaac"},"content":"        this.storage \u003d new Storage(\"data/duke.txt\");"},{"lineNumber":14,"author":{"gitId":"noelmathewisaac"},"content":"        try {"},{"lineNumber":15,"author":{"gitId":"noelmathewisaac"},"content":"            this.tasks \u003d new TaskList(this.storage.readTasksFromFile());"},{"lineNumber":16,"author":{"gitId":"noelmathewisaac"},"content":"        } catch (FileNotFoundException fileException) {"},{"lineNumber":17,"author":{"gitId":"noelmathewisaac"},"content":"            this.tasks \u003d new TaskList();"},{"lineNumber":18,"author":{"gitId":"noelmathewisaac"},"content":"        }"},{"lineNumber":19,"author":{"gitId":"noelmathewisaac"},"content":"    }"},{"lineNumber":20,"author":{"gitId":"noelmathewisaac"},"content":""},{"lineNumber":21,"author":{"gitId":"noelmathewisaac"},"content":"    /**"},{"lineNumber":22,"author":{"gitId":"noelmathewisaac"},"content":"     * @param input String representing input entered by user."},{"lineNumber":23,"author":{"gitId":"noelmathewisaac"},"content":"     * @return String representing Gets the response from Duke to be shown to the user."},{"lineNumber":24,"author":{"gitId":"noelmathewisaac"},"content":"     */"},{"lineNumber":25,"author":{"gitId":"noelmathewisaac"},"content":"    public String getResponse(String input) {"},{"lineNumber":26,"author":{"gitId":"noelmathewisaac"},"content":"        return Parser.parseInput(input, this.tasks, this.storage);"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":28,"author":{"gitId":"-"},"content":"}"}],"authorContributionMap":{"-":3,"noelmathewisaac":25}},{"path":"src/main/java/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"noelmathewisaac"},"content":"/**"},{"lineNumber":2,"author":{"gitId":"noelmathewisaac"},"content":" * Class to handle Exceptions specific to Duke"},{"lineNumber":3,"author":{"gitId":"noelmathewisaac"},"content":" */"},{"lineNumber":4,"author":{"gitId":"noelmathewisaac"},"content":"public class DukeException extends Exception {"},{"lineNumber":5,"author":{"gitId":"noelmathewisaac"},"content":""},{"lineNumber":6,"author":{"gitId":"noelmathewisaac"},"content":"    /**"},{"lineNumber":7,"author":{"gitId":"noelmathewisaac"},"content":"     * Creates an DukeException instance."},{"lineNumber":8,"author":{"gitId":"noelmathewisaac"},"content":"     *"},{"lineNumber":9,"author":{"gitId":"noelmathewisaac"},"content":"     * @param errorMessage String describing the error"},{"lineNumber":10,"author":{"gitId":"noelmathewisaac"},"content":"     */"},{"lineNumber":11,"author":{"gitId":"noelmathewisaac"},"content":"    public DukeException(String errorMessage) {"},{"lineNumber":12,"author":{"gitId":"noelmathewisaac"},"content":"        super(errorMessage);"},{"lineNumber":13,"author":{"gitId":"noelmathewisaac"},"content":"    }"},{"lineNumber":14,"author":{"gitId":"noelmathewisaac"},"content":"}"}],"authorContributionMap":{"noelmathewisaac":14}},{"path":"src/main/java/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"noelmathewisaac"},"content":"import java.time.LocalDate;"},{"lineNumber":2,"author":{"gitId":"noelmathewisaac"},"content":"import java.time.format.DateTimeFormatter;"},{"lineNumber":3,"author":{"gitId":"noelmathewisaac"},"content":""},{"lineNumber":4,"author":{"gitId":"noelmathewisaac"},"content":"/**"},{"lineNumber":5,"author":{"gitId":"noelmathewisaac"},"content":" * Represents an Event task that start at a specific time and ends at a specific time."},{"lineNumber":6,"author":{"gitId":"noelmathewisaac"},"content":" */"},{"lineNumber":7,"author":{"gitId":"noelmathewisaac"},"content":"public class Event extends Task {"},{"lineNumber":8,"author":{"gitId":"noelmathewisaac"},"content":""},{"lineNumber":9,"author":{"gitId":"noelmathewisaac"},"content":"    private LocalDate at;"},{"lineNumber":10,"author":{"gitId":"noelmathewisaac"},"content":""},{"lineNumber":11,"author":{"gitId":"noelmathewisaac"},"content":"    /**"},{"lineNumber":12,"author":{"gitId":"noelmathewisaac"},"content":"     * Creates an event instance."},{"lineNumber":13,"author":{"gitId":"noelmathewisaac"},"content":"     *"},{"lineNumber":14,"author":{"gitId":"noelmathewisaac"},"content":"     * @param description String describing the event"},{"lineNumber":15,"author":{"gitId":"noelmathewisaac"},"content":"     * @param at          String containing the event time"},{"lineNumber":16,"author":{"gitId":"noelmathewisaac"},"content":"     */"},{"lineNumber":17,"author":{"gitId":"noelmathewisaac"},"content":"    public Event(String description, LocalDate at) {"},{"lineNumber":18,"author":{"gitId":"noelmathewisaac"},"content":"        super(description);"},{"lineNumber":19,"author":{"gitId":"noelmathewisaac"},"content":"        this.at \u003d at;"},{"lineNumber":20,"author":{"gitId":"noelmathewisaac"},"content":"    }"},{"lineNumber":21,"author":{"gitId":"noelmathewisaac"},"content":""},{"lineNumber":22,"author":{"gitId":"noelmathewisaac"},"content":"    /**"},{"lineNumber":23,"author":{"gitId":"noelmathewisaac"},"content":"     * Returns a String which gives information about the event."},{"lineNumber":24,"author":{"gitId":"noelmathewisaac"},"content":"     *"},{"lineNumber":25,"author":{"gitId":"noelmathewisaac"},"content":"     * @return A String containing information about the event."},{"lineNumber":26,"author":{"gitId":"noelmathewisaac"},"content":"     */"},{"lineNumber":27,"author":{"gitId":"noelmathewisaac"},"content":"    @Override"},{"lineNumber":28,"author":{"gitId":"noelmathewisaac"},"content":"    public String toString() {"},{"lineNumber":29,"author":{"gitId":"noelmathewisaac"},"content":"        return \"[E]\" + super.toString() + \" (at: \""},{"lineNumber":30,"author":{"gitId":"noelmathewisaac"},"content":"                + this.at.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\")) + \")\";"},{"lineNumber":31,"author":{"gitId":"noelmathewisaac"},"content":"    }"},{"lineNumber":32,"author":{"gitId":"noelmathewisaac"},"content":""},{"lineNumber":33,"author":{"gitId":"noelmathewisaac"},"content":"    /**"},{"lineNumber":34,"author":{"gitId":"noelmathewisaac"},"content":"     * Returns a String which gives information about the event in the"},{"lineNumber":35,"author":{"gitId":"noelmathewisaac"},"content":"     * format to be stored in a file."},{"lineNumber":36,"author":{"gitId":"noelmathewisaac"},"content":"     *"},{"lineNumber":37,"author":{"gitId":"noelmathewisaac"},"content":"     * @return A String containing information about the event."},{"lineNumber":38,"author":{"gitId":"noelmathewisaac"},"content":"     */"},{"lineNumber":39,"author":{"gitId":"noelmathewisaac"},"content":"    @Override"},{"lineNumber":40,"author":{"gitId":"noelmathewisaac"},"content":"    public String fileString() {"},{"lineNumber":41,"author":{"gitId":"noelmathewisaac"},"content":"        int statusNum \u003d this.getStatus() ? 1 : 0;"},{"lineNumber":42,"author":{"gitId":"noelmathewisaac"},"content":"        return \"E | \" + statusNum + \" | \" + this.getDescription() + \" | \" + this.at;"},{"lineNumber":43,"author":{"gitId":"noelmathewisaac"},"content":"    }"},{"lineNumber":44,"author":{"gitId":"noelmathewisaac"},"content":"}"}],"authorContributionMap":{"noelmathewisaac":44}},{"path":"src/main/java/Launcher.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"noelmathewisaac"},"content":"import javafx.application.Application;"},{"lineNumber":2,"author":{"gitId":"noelmathewisaac"},"content":""},{"lineNumber":3,"author":{"gitId":"noelmathewisaac"},"content":"/**"},{"lineNumber":4,"author":{"gitId":"noelmathewisaac"},"content":" * A launcher class to workaround classpath issues."},{"lineNumber":5,"author":{"gitId":"noelmathewisaac"},"content":" */"},{"lineNumber":6,"author":{"gitId":"noelmathewisaac"},"content":"public class Launcher {"},{"lineNumber":7,"author":{"gitId":"noelmathewisaac"},"content":"    public static void main(String[] args) {"},{"lineNumber":8,"author":{"gitId":"noelmathewisaac"},"content":"        Application.launch(Main.class, args);"},{"lineNumber":9,"author":{"gitId":"noelmathewisaac"},"content":"    }"},{"lineNumber":10,"author":{"gitId":"noelmathewisaac"},"content":"}"}],"authorContributionMap":{"noelmathewisaac":10}},{"path":"src/main/java/Main.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"noelmathewisaac"},"content":"import javafx.application.Application;"},{"lineNumber":2,"author":{"gitId":"noelmathewisaac"},"content":"import javafx.fxml.FXMLLoader;"},{"lineNumber":3,"author":{"gitId":"noelmathewisaac"},"content":"import javafx.scene.Scene;"},{"lineNumber":4,"author":{"gitId":"noelmathewisaac"},"content":"import javafx.scene.layout.AnchorPane;"},{"lineNumber":5,"author":{"gitId":"noelmathewisaac"},"content":"import javafx.stage.Stage;"},{"lineNumber":6,"author":{"gitId":"noelmathewisaac"},"content":""},{"lineNumber":7,"author":{"gitId":"noelmathewisaac"},"content":"import java.io.IOException;"},{"lineNumber":8,"author":{"gitId":"noelmathewisaac"},"content":""},{"lineNumber":9,"author":{"gitId":"noelmathewisaac"},"content":"/**"},{"lineNumber":10,"author":{"gitId":"noelmathewisaac"},"content":" * A GUI for Duke using FXML."},{"lineNumber":11,"author":{"gitId":"noelmathewisaac"},"content":" */"},{"lineNumber":12,"author":{"gitId":"noelmathewisaac"},"content":"public class Main extends Application {"},{"lineNumber":13,"author":{"gitId":"noelmathewisaac"},"content":""},{"lineNumber":14,"author":{"gitId":"noelmathewisaac"},"content":"    private Duke duke \u003d new Duke();"},{"lineNumber":15,"author":{"gitId":"noelmathewisaac"},"content":""},{"lineNumber":16,"author":{"gitId":"noelmathewisaac"},"content":"    @Override"},{"lineNumber":17,"author":{"gitId":"noelmathewisaac"},"content":"    public void start(Stage stage) {"},{"lineNumber":18,"author":{"gitId":"noelmathewisaac"},"content":"        try {"},{"lineNumber":19,"author":{"gitId":"noelmathewisaac"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(Main.class.getResource(\"/view/MainWindow.fxml\"));"},{"lineNumber":20,"author":{"gitId":"noelmathewisaac"},"content":"            AnchorPane ap \u003d fxmlLoader.load();"},{"lineNumber":21,"author":{"gitId":"noelmathewisaac"},"content":"            Scene scene \u003d new Scene(ap);"},{"lineNumber":22,"author":{"gitId":"noelmathewisaac"},"content":"            stage.setScene(scene);"},{"lineNumber":23,"author":{"gitId":"noelmathewisaac"},"content":"            fxmlLoader.\u003cMainWindow\u003egetController().setDuke(duke);"},{"lineNumber":24,"author":{"gitId":"noelmathewisaac"},"content":"            stage.show();"},{"lineNumber":25,"author":{"gitId":"noelmathewisaac"},"content":"        } catch (IOException e) {"},{"lineNumber":26,"author":{"gitId":"noelmathewisaac"},"content":"            e.printStackTrace();"},{"lineNumber":27,"author":{"gitId":"noelmathewisaac"},"content":"        }"},{"lineNumber":28,"author":{"gitId":"noelmathewisaac"},"content":"    }"},{"lineNumber":29,"author":{"gitId":"noelmathewisaac"},"content":"}"}],"authorContributionMap":{"noelmathewisaac":29}},{"path":"src/main/java/MainWindow.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"noelmathewisaac"},"content":"import javafx.fxml.FXML;"},{"lineNumber":2,"author":{"gitId":"noelmathewisaac"},"content":"import javafx.scene.control.Button;"},{"lineNumber":3,"author":{"gitId":"noelmathewisaac"},"content":"import javafx.scene.control.ScrollPane;"},{"lineNumber":4,"author":{"gitId":"noelmathewisaac"},"content":"import javafx.scene.control.TextField;"},{"lineNumber":5,"author":{"gitId":"noelmathewisaac"},"content":"import javafx.scene.image.Image;"},{"lineNumber":6,"author":{"gitId":"noelmathewisaac"},"content":"import javafx.scene.layout.AnchorPane;"},{"lineNumber":7,"author":{"gitId":"noelmathewisaac"},"content":"import javafx.scene.layout.VBox;"},{"lineNumber":8,"author":{"gitId":"noelmathewisaac"},"content":"/**"},{"lineNumber":9,"author":{"gitId":"noelmathewisaac"},"content":" * Controller for MainWindow. Provides the layout for the other controls."},{"lineNumber":10,"author":{"gitId":"noelmathewisaac"},"content":" */"},{"lineNumber":11,"author":{"gitId":"noelmathewisaac"},"content":"public class MainWindow extends AnchorPane {"},{"lineNumber":12,"author":{"gitId":"noelmathewisaac"},"content":"    @FXML"},{"lineNumber":13,"author":{"gitId":"noelmathewisaac"},"content":"    private ScrollPane scrollPane;"},{"lineNumber":14,"author":{"gitId":"noelmathewisaac"},"content":"    @FXML"},{"lineNumber":15,"author":{"gitId":"noelmathewisaac"},"content":"    private VBox dialogContainer;"},{"lineNumber":16,"author":{"gitId":"noelmathewisaac"},"content":"    @FXML"},{"lineNumber":17,"author":{"gitId":"noelmathewisaac"},"content":"    private TextField userInput;"},{"lineNumber":18,"author":{"gitId":"noelmathewisaac"},"content":"    @FXML"},{"lineNumber":19,"author":{"gitId":"noelmathewisaac"},"content":"    private Button sendButton;"},{"lineNumber":20,"author":{"gitId":"noelmathewisaac"},"content":""},{"lineNumber":21,"author":{"gitId":"noelmathewisaac"},"content":"    private Duke duke;"},{"lineNumber":22,"author":{"gitId":"noelmathewisaac"},"content":""},{"lineNumber":23,"author":{"gitId":"noelmathewisaac"},"content":"    private Image userImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaUser.png\"));"},{"lineNumber":24,"author":{"gitId":"noelmathewisaac"},"content":"    private Image dukeImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaDuke.png\"));"},{"lineNumber":25,"author":{"gitId":"noelmathewisaac"},"content":""},{"lineNumber":26,"author":{"gitId":"noelmathewisaac"},"content":"    /**"},{"lineNumber":27,"author":{"gitId":"noelmathewisaac"},"content":"     * Initialize the JavaFX UI."},{"lineNumber":28,"author":{"gitId":"noelmathewisaac"},"content":"     */"},{"lineNumber":29,"author":{"gitId":"noelmathewisaac"},"content":"    @FXML"},{"lineNumber":30,"author":{"gitId":"noelmathewisaac"},"content":"    public void initialize() {"},{"lineNumber":31,"author":{"gitId":"noelmathewisaac"},"content":"        scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());"},{"lineNumber":32,"author":{"gitId":"noelmathewisaac"},"content":"        greetUser();"},{"lineNumber":33,"author":{"gitId":"noelmathewisaac"},"content":"    }"},{"lineNumber":34,"author":{"gitId":"noelmathewisaac"},"content":""},{"lineNumber":35,"author":{"gitId":"noelmathewisaac"},"content":"    public void setDuke(Duke d) {"},{"lineNumber":36,"author":{"gitId":"noelmathewisaac"},"content":"        duke \u003d d;"},{"lineNumber":37,"author":{"gitId":"noelmathewisaac"},"content":"    }"},{"lineNumber":38,"author":{"gitId":"noelmathewisaac"},"content":""},{"lineNumber":39,"author":{"gitId":"noelmathewisaac"},"content":"    /**"},{"lineNumber":40,"author":{"gitId":"noelmathewisaac"},"content":"     * Greets the user"},{"lineNumber":41,"author":{"gitId":"noelmathewisaac"},"content":"     */"},{"lineNumber":42,"author":{"gitId":"noelmathewisaac"},"content":"    public void greetUser() {"},{"lineNumber":43,"author":{"gitId":"noelmathewisaac"},"content":"        String greeting \u003d \"Hey I am Duke! How can I help you?\";"},{"lineNumber":44,"author":{"gitId":"noelmathewisaac"},"content":"        dialogContainer.getChildren().addAll("},{"lineNumber":45,"author":{"gitId":"noelmathewisaac"},"content":"                DialogBox.getDukeDialog(greeting, dukeImage)"},{"lineNumber":46,"author":{"gitId":"noelmathewisaac"},"content":"        );"},{"lineNumber":47,"author":{"gitId":"noelmathewisaac"},"content":"    }"},{"lineNumber":48,"author":{"gitId":"noelmathewisaac"},"content":""},{"lineNumber":49,"author":{"gitId":"noelmathewisaac"},"content":"    /**"},{"lineNumber":50,"author":{"gitId":"noelmathewisaac"},"content":"     * Creates two dialog boxes, one echoing user input and the other containing Duke\u0027s reply and then appends them to"},{"lineNumber":51,"author":{"gitId":"noelmathewisaac"},"content":"     * the dialog container. Clears the user input after processing."},{"lineNumber":52,"author":{"gitId":"noelmathewisaac"},"content":"     */"},{"lineNumber":53,"author":{"gitId":"noelmathewisaac"},"content":"    @FXML"},{"lineNumber":54,"author":{"gitId":"noelmathewisaac"},"content":"    private void handleUserInput() {"},{"lineNumber":55,"author":{"gitId":"noelmathewisaac"},"content":"        String input \u003d userInput.getText();"},{"lineNumber":56,"author":{"gitId":"noelmathewisaac"},"content":"        String response \u003d duke.getResponse(input);"},{"lineNumber":57,"author":{"gitId":"noelmathewisaac"},"content":"        dialogContainer.getChildren().addAll("},{"lineNumber":58,"author":{"gitId":"noelmathewisaac"},"content":"                DialogBox.getUserDialog(input, userImage),"},{"lineNumber":59,"author":{"gitId":"noelmathewisaac"},"content":"                DialogBox.getDukeDialog(response, dukeImage)"},{"lineNumber":60,"author":{"gitId":"noelmathewisaac"},"content":"        );"},{"lineNumber":61,"author":{"gitId":"noelmathewisaac"},"content":"        userInput.clear();"},{"lineNumber":62,"author":{"gitId":"noelmathewisaac"},"content":"    }"},{"lineNumber":63,"author":{"gitId":"noelmathewisaac"},"content":"}"}],"authorContributionMap":{"noelmathewisaac":63}},{"path":"src/main/java/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"noelmathewisaac"},"content":"import java.time.LocalDate;"},{"lineNumber":2,"author":{"gitId":"noelmathewisaac"},"content":""},{"lineNumber":3,"author":{"gitId":"noelmathewisaac"},"content":"/**"},{"lineNumber":4,"author":{"gitId":"noelmathewisaac"},"content":" * Represents a Parser which deals with making sense of user commands"},{"lineNumber":5,"author":{"gitId":"noelmathewisaac"},"content":" */"},{"lineNumber":6,"author":{"gitId":"noelmathewisaac"},"content":"public class Parser {"},{"lineNumber":7,"author":{"gitId":"noelmathewisaac"},"content":"    /**"},{"lineNumber":8,"author":{"gitId":"noelmathewisaac"},"content":"     * Extracts information from the user input and performs the appropriate actions"},{"lineNumber":9,"author":{"gitId":"noelmathewisaac"},"content":"     *"},{"lineNumber":10,"author":{"gitId":"noelmathewisaac"},"content":"     * @param input   String representing input entered by user"},{"lineNumber":11,"author":{"gitId":"noelmathewisaac"},"content":"     * @param tasks   Class containing the list of tasks being tracked"},{"lineNumber":12,"author":{"gitId":"noelmathewisaac"},"content":"     * @param storage Class dealing with loading tasks from the file and saving tasks in the file"},{"lineNumber":13,"author":{"gitId":"noelmathewisaac"},"content":"     * @return String with the output of the requested action / error message."},{"lineNumber":14,"author":{"gitId":"noelmathewisaac"},"content":"     */"},{"lineNumber":15,"author":{"gitId":"noelmathewisaac"},"content":"    public static String parseInput(String input, TaskList tasks, Storage storage) {"},{"lineNumber":16,"author":{"gitId":"noelmathewisaac"},"content":"        String output \u003d \"\";"},{"lineNumber":17,"author":{"gitId":"noelmathewisaac"},"content":"        try {"},{"lineNumber":18,"author":{"gitId":"noelmathewisaac"},"content":"            if (input.equals(\"list\")) {"},{"lineNumber":19,"author":{"gitId":"noelmathewisaac"},"content":"                output \u003d tasks.listTasks();"},{"lineNumber":20,"author":{"gitId":"noelmathewisaac"},"content":"            } else if (input.startsWith(\"done\")) {"},{"lineNumber":21,"author":{"gitId":"noelmathewisaac"},"content":"                int index \u003d Integer.parseInt(input.replaceAll(\"[^-0-9]\", \"\"));"},{"lineNumber":22,"author":{"gitId":"noelmathewisaac"},"content":"                if (index \u003e tasks.size() || index \u003c\u003d 0) {"},{"lineNumber":23,"author":{"gitId":"noelmathewisaac"},"content":"                    throw new DukeException(\"The list item number provided is invalid\");"},{"lineNumber":24,"author":{"gitId":"noelmathewisaac"},"content":"                }"},{"lineNumber":25,"author":{"gitId":"noelmathewisaac"},"content":"                output \u003d tasks.markAsDone(index - 1);"},{"lineNumber":26,"author":{"gitId":"noelmathewisaac"},"content":"                storage.writeTasksToFile(tasks.getTaskList());"},{"lineNumber":27,"author":{"gitId":"noelmathewisaac"},"content":"            } else if (input.startsWith(\"todo\")) {"},{"lineNumber":28,"author":{"gitId":"noelmathewisaac"},"content":"                String description \u003d input.replace(\"todo\", \"\");"},{"lineNumber":29,"author":{"gitId":"noelmathewisaac"},"content":"                ToDo todo \u003d new ToDo(description);"},{"lineNumber":30,"author":{"gitId":"noelmathewisaac"},"content":"                if (description.strip().equals(\"\")) {"},{"lineNumber":31,"author":{"gitId":"noelmathewisaac"},"content":"                    throw new DukeException(\"todo description cannot be empty\");"},{"lineNumber":32,"author":{"gitId":"noelmathewisaac"},"content":"                }"},{"lineNumber":33,"author":{"gitId":"noelmathewisaac"},"content":"                tasks.addTask(todo);"},{"lineNumber":34,"author":{"gitId":"noelmathewisaac"},"content":"                output \u003d tasks.printAddedTask(todo);"},{"lineNumber":35,"author":{"gitId":"noelmathewisaac"},"content":"                storage.writeTasksToFile(tasks.getTaskList());"},{"lineNumber":36,"author":{"gitId":"noelmathewisaac"},"content":"            } else if (input.startsWith(\"deadline\")) {"},{"lineNumber":37,"author":{"gitId":"noelmathewisaac"},"content":"                if (input.strip().equals(\"deadline\")) {"},{"lineNumber":38,"author":{"gitId":"noelmathewisaac"},"content":"                    throw new DukeException(\"deadline description cannot be empty\");"},{"lineNumber":39,"author":{"gitId":"noelmathewisaac"},"content":"                }"},{"lineNumber":40,"author":{"gitId":"noelmathewisaac"},"content":"                if (!input.contains(\"/by\")) {"},{"lineNumber":41,"author":{"gitId":"noelmathewisaac"},"content":"                    throw new DukeException(\"Wrong command format: Missing `/by`\");"},{"lineNumber":42,"author":{"gitId":"noelmathewisaac"},"content":"                }"},{"lineNumber":43,"author":{"gitId":"noelmathewisaac"},"content":"                if (input.split(\"/by\").length \u003c 2) {"},{"lineNumber":44,"author":{"gitId":"noelmathewisaac"},"content":"                    throw new DukeException(\"deadline date/time cannot be empty\");"},{"lineNumber":45,"author":{"gitId":"noelmathewisaac"},"content":"                }"},{"lineNumber":46,"author":{"gitId":"noelmathewisaac"},"content":"                String description \u003d input.split(\"/by\", 2)[0].replace(\"deadline\", \"\");"},{"lineNumber":47,"author":{"gitId":"noelmathewisaac"},"content":"                LocalDate date \u003d LocalDate.parse(input.split(\"/by\", 2)[1].strip());"},{"lineNumber":48,"author":{"gitId":"noelmathewisaac"},"content":"                Deadline deadline \u003d new Deadline(description, date);"},{"lineNumber":49,"author":{"gitId":"noelmathewisaac"},"content":"                tasks.addTask(deadline);"},{"lineNumber":50,"author":{"gitId":"noelmathewisaac"},"content":"                output \u003d tasks.printAddedTask(deadline);"},{"lineNumber":51,"author":{"gitId":"noelmathewisaac"},"content":"                storage.writeTasksToFile(tasks.getTaskList());"},{"lineNumber":52,"author":{"gitId":"noelmathewisaac"},"content":"            } else if (input.startsWith(\"event\")) {"},{"lineNumber":53,"author":{"gitId":"noelmathewisaac"},"content":""},{"lineNumber":54,"author":{"gitId":"noelmathewisaac"},"content":"                if (input.strip().equals(\"event\")) {"},{"lineNumber":55,"author":{"gitId":"noelmathewisaac"},"content":"                    throw new DukeException(\"event description cannot be empty\");"},{"lineNumber":56,"author":{"gitId":"noelmathewisaac"},"content":"                }"},{"lineNumber":57,"author":{"gitId":"noelmathewisaac"},"content":"                if (!input.contains(\"/at\")) {"},{"lineNumber":58,"author":{"gitId":"noelmathewisaac"},"content":"                    throw new DukeException(\"Wrong command format: Missing `/at`\");"},{"lineNumber":59,"author":{"gitId":"noelmathewisaac"},"content":"                }"},{"lineNumber":60,"author":{"gitId":"noelmathewisaac"},"content":"                if (input.split(\"/at\").length \u003c 2) {"},{"lineNumber":61,"author":{"gitId":"noelmathewisaac"},"content":"                    throw new DukeException(\"event date/time cannot be empty\");"},{"lineNumber":62,"author":{"gitId":"noelmathewisaac"},"content":"                }"},{"lineNumber":63,"author":{"gitId":"noelmathewisaac"},"content":"                String description \u003d input.split(\"/at\", 2)[0].replace(\"event\", \"\");"},{"lineNumber":64,"author":{"gitId":"noelmathewisaac"},"content":"                LocalDate date \u003d LocalDate.parse(input.split(\"/at\", 2)[1].strip());"},{"lineNumber":65,"author":{"gitId":"noelmathewisaac"},"content":""},{"lineNumber":66,"author":{"gitId":"noelmathewisaac"},"content":"                Event event \u003d new Event(description, date);"},{"lineNumber":67,"author":{"gitId":"noelmathewisaac"},"content":"                tasks.addTask(event);"},{"lineNumber":68,"author":{"gitId":"noelmathewisaac"},"content":"                output \u003d tasks.printAddedTask(event);"},{"lineNumber":69,"author":{"gitId":"noelmathewisaac"},"content":"                storage.writeTasksToFile(tasks.getTaskList());"},{"lineNumber":70,"author":{"gitId":"noelmathewisaac"},"content":""},{"lineNumber":71,"author":{"gitId":"noelmathewisaac"},"content":"            } else if (input.startsWith(\"delete\")) {"},{"lineNumber":72,"author":{"gitId":"noelmathewisaac"},"content":"                int index \u003d Integer.parseInt(input.replaceAll(\"[^-0-9]\", \"\"));"},{"lineNumber":73,"author":{"gitId":"noelmathewisaac"},"content":"                if (index \u003e tasks.size() || index \u003c\u003d 0) {"},{"lineNumber":74,"author":{"gitId":"noelmathewisaac"},"content":"                    throw new DukeException(\"The list item number provided is invalid\");"},{"lineNumber":75,"author":{"gitId":"noelmathewisaac"},"content":"                }"},{"lineNumber":76,"author":{"gitId":"noelmathewisaac"},"content":"                output \u003d tasks.deleteTask(index - 1);"},{"lineNumber":77,"author":{"gitId":"noelmathewisaac"},"content":"                storage.writeTasksToFile(tasks.getTaskList());"},{"lineNumber":78,"author":{"gitId":"noelmathewisaac"},"content":"            } else if (input.startsWith(\"find\")) {"},{"lineNumber":79,"author":{"gitId":"noelmathewisaac"},"content":"                if (input.split(\" \").length \u003c 2) {"},{"lineNumber":80,"author":{"gitId":"noelmathewisaac"},"content":"                    throw new DukeException(\"Please enter a keyword to search for\");"},{"lineNumber":81,"author":{"gitId":"noelmathewisaac"},"content":"                }"},{"lineNumber":82,"author":{"gitId":"noelmathewisaac"},"content":"                output \u003d tasks.findTask(input.split(\" \")[1]);"},{"lineNumber":83,"author":{"gitId":"noelmathewisaac"},"content":""},{"lineNumber":84,"author":{"gitId":"noelmathewisaac"},"content":"            } else if (input.startsWith(\"bye\")) {"},{"lineNumber":85,"author":{"gitId":"noelmathewisaac"},"content":"                output \u003d \"Goodbye and see you soon!\";"},{"lineNumber":86,"author":{"gitId":"noelmathewisaac"},"content":"            } else {"},{"lineNumber":87,"author":{"gitId":"noelmathewisaac"},"content":"                throw new DukeException(\"I\u0027m sorry, but I don\u0027t know what that means :-(\");"},{"lineNumber":88,"author":{"gitId":"noelmathewisaac"},"content":"            }"},{"lineNumber":89,"author":{"gitId":"noelmathewisaac"},"content":"        } catch (Exception e) {"},{"lineNumber":90,"author":{"gitId":"noelmathewisaac"},"content":"            return e.getMessage();"},{"lineNumber":91,"author":{"gitId":"noelmathewisaac"},"content":"        }"},{"lineNumber":92,"author":{"gitId":"noelmathewisaac"},"content":"        return output;"},{"lineNumber":93,"author":{"gitId":"noelmathewisaac"},"content":""},{"lineNumber":94,"author":{"gitId":"noelmathewisaac"},"content":"    }"},{"lineNumber":95,"author":{"gitId":"noelmathewisaac"},"content":"}"}],"authorContributionMap":{"noelmathewisaac":95}},{"path":"src/main/java/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"noelmathewisaac"},"content":"import java.io.File;"},{"lineNumber":2,"author":{"gitId":"noelmathewisaac"},"content":"import java.io.FileNotFoundException;"},{"lineNumber":3,"author":{"gitId":"noelmathewisaac"},"content":"import java.io.FileWriter;"},{"lineNumber":4,"author":{"gitId":"noelmathewisaac"},"content":"import java.io.IOException;"},{"lineNumber":5,"author":{"gitId":"noelmathewisaac"},"content":"import java.time.LocalDate;"},{"lineNumber":6,"author":{"gitId":"noelmathewisaac"},"content":"import java.util.ArrayList;"},{"lineNumber":7,"author":{"gitId":"noelmathewisaac"},"content":"import java.util.Scanner;"},{"lineNumber":8,"author":{"gitId":"noelmathewisaac"},"content":""},{"lineNumber":9,"author":{"gitId":"noelmathewisaac"},"content":""},{"lineNumber":10,"author":{"gitId":"noelmathewisaac"},"content":"/**"},{"lineNumber":11,"author":{"gitId":"noelmathewisaac"},"content":" * Class which deals with loading tasks from the file and saving tasks in the file"},{"lineNumber":12,"author":{"gitId":"noelmathewisaac"},"content":" */"},{"lineNumber":13,"author":{"gitId":"noelmathewisaac"},"content":"public class Storage {"},{"lineNumber":14,"author":{"gitId":"noelmathewisaac"},"content":""},{"lineNumber":15,"author":{"gitId":"noelmathewisaac"},"content":"    private String filePath;"},{"lineNumber":16,"author":{"gitId":"noelmathewisaac"},"content":""},{"lineNumber":17,"author":{"gitId":"noelmathewisaac"},"content":"    public Storage(String filePath) {"},{"lineNumber":18,"author":{"gitId":"noelmathewisaac"},"content":"        this.filePath \u003d filePath;"},{"lineNumber":19,"author":{"gitId":"noelmathewisaac"},"content":"    }"},{"lineNumber":20,"author":{"gitId":"noelmathewisaac"},"content":""},{"lineNumber":21,"author":{"gitId":"noelmathewisaac"},"content":"    /**"},{"lineNumber":22,"author":{"gitId":"noelmathewisaac"},"content":"     * Reads tasks from a file."},{"lineNumber":23,"author":{"gitId":"noelmathewisaac"},"content":"     *"},{"lineNumber":24,"author":{"gitId":"noelmathewisaac"},"content":"     * @return An ArrayList of Task Objects containing the tasks read from the file."},{"lineNumber":25,"author":{"gitId":"noelmathewisaac"},"content":"     */"},{"lineNumber":26,"author":{"gitId":"noelmathewisaac"},"content":"    public ArrayList\u003cTask\u003e readTasksFromFile() throws FileNotFoundException {"},{"lineNumber":27,"author":{"gitId":"noelmathewisaac"},"content":"        File f \u003d new File(this.filePath); // create a File for the given file path"},{"lineNumber":28,"author":{"gitId":"noelmathewisaac"},"content":"        Scanner s \u003d new Scanner(f); // create a Scanner using the File as the source"},{"lineNumber":29,"author":{"gitId":"noelmathewisaac"},"content":"        ArrayList\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();"},{"lineNumber":30,"author":{"gitId":"noelmathewisaac"},"content":"        while (s.hasNext()) {"},{"lineNumber":31,"author":{"gitId":"noelmathewisaac"},"content":"            String line \u003d s.nextLine();"},{"lineNumber":32,"author":{"gitId":"noelmathewisaac"},"content":"            String[] elements \u003d line.replace(\" \", \"\").split(\"\\\\|\", -2);"},{"lineNumber":33,"author":{"gitId":"noelmathewisaac"},"content":"            if (elements[0].equals(\"D\")) {"},{"lineNumber":34,"author":{"gitId":"noelmathewisaac"},"content":"                boolean isDone \u003d convertToBool(elements[1]);"},{"lineNumber":35,"author":{"gitId":"noelmathewisaac"},"content":"                String description \u003d elements[2];"},{"lineNumber":36,"author":{"gitId":"noelmathewisaac"},"content":"                LocalDate by \u003d LocalDate.parse(elements[3]);"},{"lineNumber":37,"author":{"gitId":"noelmathewisaac"},"content":"                Task task \u003d new Deadline(description, by);"},{"lineNumber":38,"author":{"gitId":"noelmathewisaac"},"content":"                if (isDone) {"},{"lineNumber":39,"author":{"gitId":"noelmathewisaac"},"content":"                    task.markAsDone();"},{"lineNumber":40,"author":{"gitId":"noelmathewisaac"},"content":"                }"},{"lineNumber":41,"author":{"gitId":"noelmathewisaac"},"content":"                tasks.add(task);"},{"lineNumber":42,"author":{"gitId":"noelmathewisaac"},"content":"            } else if (elements[0].equals(\"E\")) {"},{"lineNumber":43,"author":{"gitId":"noelmathewisaac"},"content":"                boolean isDone \u003d convertToBool(elements[1]);"},{"lineNumber":44,"author":{"gitId":"noelmathewisaac"},"content":"                String description \u003d elements[2];"},{"lineNumber":45,"author":{"gitId":"noelmathewisaac"},"content":"                LocalDate at \u003d LocalDate.parse(elements[3]);"},{"lineNumber":46,"author":{"gitId":"noelmathewisaac"},"content":"                Task task \u003d new Event(description, at);"},{"lineNumber":47,"author":{"gitId":"noelmathewisaac"},"content":"                if (isDone) {"},{"lineNumber":48,"author":{"gitId":"noelmathewisaac"},"content":"                    task.markAsDone();"},{"lineNumber":49,"author":{"gitId":"noelmathewisaac"},"content":"                }"},{"lineNumber":50,"author":{"gitId":"noelmathewisaac"},"content":"                tasks.add(task);"},{"lineNumber":51,"author":{"gitId":"noelmathewisaac"},"content":"            } else if (elements[0].equals(\"T\")) {"},{"lineNumber":52,"author":{"gitId":"noelmathewisaac"},"content":"                boolean isDone \u003d convertToBool(elements[1]);"},{"lineNumber":53,"author":{"gitId":"noelmathewisaac"},"content":"                String description \u003d elements[2];"},{"lineNumber":54,"author":{"gitId":"noelmathewisaac"},"content":"                Task task \u003d new ToDo(description);"},{"lineNumber":55,"author":{"gitId":"noelmathewisaac"},"content":"                if (isDone) {"},{"lineNumber":56,"author":{"gitId":"noelmathewisaac"},"content":"                    task.markAsDone();"},{"lineNumber":57,"author":{"gitId":"noelmathewisaac"},"content":"                }"},{"lineNumber":58,"author":{"gitId":"noelmathewisaac"},"content":"                tasks.add(task);"},{"lineNumber":59,"author":{"gitId":"noelmathewisaac"},"content":"            }"},{"lineNumber":60,"author":{"gitId":"noelmathewisaac"},"content":""},{"lineNumber":61,"author":{"gitId":"noelmathewisaac"},"content":""},{"lineNumber":62,"author":{"gitId":"noelmathewisaac"},"content":"        }"},{"lineNumber":63,"author":{"gitId":"noelmathewisaac"},"content":"        return tasks;"},{"lineNumber":64,"author":{"gitId":"noelmathewisaac"},"content":"    }"},{"lineNumber":65,"author":{"gitId":"noelmathewisaac"},"content":""},{"lineNumber":66,"author":{"gitId":"noelmathewisaac"},"content":"    /**"},{"lineNumber":67,"author":{"gitId":"noelmathewisaac"},"content":"     * Writes tasks to a file."},{"lineNumber":68,"author":{"gitId":"noelmathewisaac"},"content":"     *"},{"lineNumber":69,"author":{"gitId":"noelmathewisaac"},"content":"     * @param tasks An ArrayList of Task objects containing the tasks to be written to the file."},{"lineNumber":70,"author":{"gitId":"noelmathewisaac"},"content":"     */"},{"lineNumber":71,"author":{"gitId":"noelmathewisaac"},"content":"    public void writeTasksToFile(ArrayList\u003cTask\u003e tasks) throws IOException {"},{"lineNumber":72,"author":{"gitId":"noelmathewisaac"},"content":""},{"lineNumber":73,"author":{"gitId":"noelmathewisaac"},"content":"        File dir \u003d new File(\"data\");"},{"lineNumber":74,"author":{"gitId":"noelmathewisaac"},"content":"        if (!dir.exists()) {"},{"lineNumber":75,"author":{"gitId":"noelmathewisaac"},"content":"            dir.mkdirs();"},{"lineNumber":76,"author":{"gitId":"noelmathewisaac"},"content":"        }"},{"lineNumber":77,"author":{"gitId":"noelmathewisaac"},"content":"        FileWriter fw \u003d new FileWriter(this.filePath);"},{"lineNumber":78,"author":{"gitId":"noelmathewisaac"},"content":""},{"lineNumber":79,"author":{"gitId":"noelmathewisaac"},"content":"        String fileString \u003d \"\";"},{"lineNumber":80,"author":{"gitId":"noelmathewisaac"},"content":""},{"lineNumber":81,"author":{"gitId":"noelmathewisaac"},"content":"        for (Task task : tasks) {"},{"lineNumber":82,"author":{"gitId":"noelmathewisaac"},"content":"            fileString +\u003d task.fileString() + \"\\n\";"},{"lineNumber":83,"author":{"gitId":"noelmathewisaac"},"content":"        }"},{"lineNumber":84,"author":{"gitId":"noelmathewisaac"},"content":"        fw.write(fileString);"},{"lineNumber":85,"author":{"gitId":"noelmathewisaac"},"content":"        fw.close();"},{"lineNumber":86,"author":{"gitId":"noelmathewisaac"},"content":"    }"},{"lineNumber":87,"author":{"gitId":"noelmathewisaac"},"content":""},{"lineNumber":88,"author":{"gitId":"noelmathewisaac"},"content":"    /**"},{"lineNumber":89,"author":{"gitId":"noelmathewisaac"},"content":"     * Convert the String of a number into a boolean."},{"lineNumber":90,"author":{"gitId":"noelmathewisaac"},"content":"     *"},{"lineNumber":91,"author":{"gitId":"noelmathewisaac"},"content":"     * @param numString String having value \"1\" or \"0\"."},{"lineNumber":92,"author":{"gitId":"noelmathewisaac"},"content":"     * */"},{"lineNumber":93,"author":{"gitId":"noelmathewisaac"},"content":"    public Boolean convertToBool(String numString) {"},{"lineNumber":94,"author":{"gitId":"noelmathewisaac"},"content":"        if (numString.equals(\"1\")) {"},{"lineNumber":95,"author":{"gitId":"noelmathewisaac"},"content":"            return true;"},{"lineNumber":96,"author":{"gitId":"noelmathewisaac"},"content":"        } else {"},{"lineNumber":97,"author":{"gitId":"noelmathewisaac"},"content":"            return false;"},{"lineNumber":98,"author":{"gitId":"noelmathewisaac"},"content":"        }"},{"lineNumber":99,"author":{"gitId":"noelmathewisaac"},"content":""},{"lineNumber":100,"author":{"gitId":"noelmathewisaac"},"content":"    }"},{"lineNumber":101,"author":{"gitId":"noelmathewisaac"},"content":""},{"lineNumber":102,"author":{"gitId":"noelmathewisaac"},"content":"}"}],"authorContributionMap":{"noelmathewisaac":102}},{"path":"src/main/java/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"noelmathewisaac"},"content":"/**"},{"lineNumber":2,"author":{"gitId":"noelmathewisaac"},"content":" * Represents a Task consisting of a description and completion status."},{"lineNumber":3,"author":{"gitId":"noelmathewisaac"},"content":" */"},{"lineNumber":4,"author":{"gitId":"noelmathewisaac"},"content":"public class Task {"},{"lineNumber":5,"author":{"gitId":"noelmathewisaac"},"content":"    private String description;"},{"lineNumber":6,"author":{"gitId":"noelmathewisaac"},"content":"    private boolean isDone;"},{"lineNumber":7,"author":{"gitId":"noelmathewisaac"},"content":""},{"lineNumber":8,"author":{"gitId":"noelmathewisaac"},"content":"    /**"},{"lineNumber":9,"author":{"gitId":"noelmathewisaac"},"content":"     * Creates a task instance."},{"lineNumber":10,"author":{"gitId":"noelmathewisaac"},"content":"     *"},{"lineNumber":11,"author":{"gitId":"noelmathewisaac"},"content":"     * @param description String describing the task"},{"lineNumber":12,"author":{"gitId":"noelmathewisaac"},"content":"     */"},{"lineNumber":13,"author":{"gitId":"noelmathewisaac"},"content":"    public Task(String description) {"},{"lineNumber":14,"author":{"gitId":"noelmathewisaac"},"content":"        this.description \u003d description;"},{"lineNumber":15,"author":{"gitId":"noelmathewisaac"},"content":"        this.isDone \u003d false;"},{"lineNumber":16,"author":{"gitId":"noelmathewisaac"},"content":"    }"},{"lineNumber":17,"author":{"gitId":"noelmathewisaac"},"content":""},{"lineNumber":18,"author":{"gitId":"noelmathewisaac"},"content":"    /**"},{"lineNumber":19,"author":{"gitId":"noelmathewisaac"},"content":"     * Retrieves the completion status of the task"},{"lineNumber":20,"author":{"gitId":"noelmathewisaac"},"content":"     *"},{"lineNumber":21,"author":{"gitId":"noelmathewisaac"},"content":"     * @return Boolean indicating the completion status of the task"},{"lineNumber":22,"author":{"gitId":"noelmathewisaac"},"content":"     */"},{"lineNumber":23,"author":{"gitId":"noelmathewisaac"},"content":"    public boolean getStatus() {"},{"lineNumber":24,"author":{"gitId":"noelmathewisaac"},"content":"        return this.isDone;"},{"lineNumber":25,"author":{"gitId":"noelmathewisaac"},"content":"    }"},{"lineNumber":26,"author":{"gitId":"noelmathewisaac"},"content":""},{"lineNumber":27,"author":{"gitId":"noelmathewisaac"},"content":"    /**"},{"lineNumber":28,"author":{"gitId":"noelmathewisaac"},"content":"     * Retrieves the status symbol of the task depending on the completion status"},{"lineNumber":29,"author":{"gitId":"noelmathewisaac"},"content":"     *"},{"lineNumber":30,"author":{"gitId":"noelmathewisaac"},"content":"     * @return String with ths status character"},{"lineNumber":31,"author":{"gitId":"noelmathewisaac"},"content":"     */"},{"lineNumber":32,"author":{"gitId":"noelmathewisaac"},"content":"    public String getStatusIcon() {"},{"lineNumber":33,"author":{"gitId":"noelmathewisaac"},"content":"        return (this.isDone ? \"X\" : \" \");"},{"lineNumber":34,"author":{"gitId":"noelmathewisaac"},"content":"    }"},{"lineNumber":35,"author":{"gitId":"noelmathewisaac"},"content":""},{"lineNumber":36,"author":{"gitId":"noelmathewisaac"},"content":"    /**"},{"lineNumber":37,"author":{"gitId":"noelmathewisaac"},"content":"     * Retrieves the task description."},{"lineNumber":38,"author":{"gitId":"noelmathewisaac"},"content":"     *"},{"lineNumber":39,"author":{"gitId":"noelmathewisaac"},"content":"     * @return String with ths task description."},{"lineNumber":40,"author":{"gitId":"noelmathewisaac"},"content":"     */"},{"lineNumber":41,"author":{"gitId":"noelmathewisaac"},"content":"    public String getDescription() {"},{"lineNumber":42,"author":{"gitId":"noelmathewisaac"},"content":"        return this.description;"},{"lineNumber":43,"author":{"gitId":"noelmathewisaac"},"content":"    }"},{"lineNumber":44,"author":{"gitId":"noelmathewisaac"},"content":""},{"lineNumber":45,"author":{"gitId":"noelmathewisaac"},"content":"    /**"},{"lineNumber":46,"author":{"gitId":"noelmathewisaac"},"content":"     * Marks task as done"},{"lineNumber":47,"author":{"gitId":"noelmathewisaac"},"content":"     */"},{"lineNumber":48,"author":{"gitId":"noelmathewisaac"},"content":"    public void markAsDone() {"},{"lineNumber":49,"author":{"gitId":"noelmathewisaac"},"content":"        this.isDone \u003d true;"},{"lineNumber":50,"author":{"gitId":"noelmathewisaac"},"content":"    }"},{"lineNumber":51,"author":{"gitId":"noelmathewisaac"},"content":""},{"lineNumber":52,"author":{"gitId":"noelmathewisaac"},"content":"    /**"},{"lineNumber":53,"author":{"gitId":"noelmathewisaac"},"content":"     * Returns a String which gives information about the task."},{"lineNumber":54,"author":{"gitId":"noelmathewisaac"},"content":"     *"},{"lineNumber":55,"author":{"gitId":"noelmathewisaac"},"content":"     * @return A String containing information about the task."},{"lineNumber":56,"author":{"gitId":"noelmathewisaac"},"content":"     */"},{"lineNumber":57,"author":{"gitId":"noelmathewisaac"},"content":"    @Override"},{"lineNumber":58,"author":{"gitId":"noelmathewisaac"},"content":"    public String toString() {"},{"lineNumber":59,"author":{"gitId":"noelmathewisaac"},"content":"        return \"[\" + this.getStatusIcon() + \"] \" + this.description;"},{"lineNumber":60,"author":{"gitId":"noelmathewisaac"},"content":"    }"},{"lineNumber":61,"author":{"gitId":"noelmathewisaac"},"content":""},{"lineNumber":62,"author":{"gitId":"noelmathewisaac"},"content":"    /**"},{"lineNumber":63,"author":{"gitId":"noelmathewisaac"},"content":"     * Returns a String which gives information about the task in the"},{"lineNumber":64,"author":{"gitId":"noelmathewisaac"},"content":"     * format to be stored in a file."},{"lineNumber":65,"author":{"gitId":"noelmathewisaac"},"content":"     *"},{"lineNumber":66,"author":{"gitId":"noelmathewisaac"},"content":"     * @return A String containing information about the task."},{"lineNumber":67,"author":{"gitId":"noelmathewisaac"},"content":"     */"},{"lineNumber":68,"author":{"gitId":"noelmathewisaac"},"content":"    public String fileString() {"},{"lineNumber":69,"author":{"gitId":"noelmathewisaac"},"content":"        return this.description;"},{"lineNumber":70,"author":{"gitId":"noelmathewisaac"},"content":"    }"},{"lineNumber":71,"author":{"gitId":"noelmathewisaac"},"content":"}"}],"authorContributionMap":{"noelmathewisaac":71}},{"path":"src/main/java/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"noelmathewisaac"},"content":"import java.util.ArrayList;"},{"lineNumber":2,"author":{"gitId":"noelmathewisaac"},"content":""},{"lineNumber":3,"author":{"gitId":"noelmathewisaac"},"content":"/**"},{"lineNumber":4,"author":{"gitId":"noelmathewisaac"},"content":" * Class containing the task list along with its associated functions."},{"lineNumber":5,"author":{"gitId":"noelmathewisaac"},"content":" */"},{"lineNumber":6,"author":{"gitId":"noelmathewisaac"},"content":"class TaskList {"},{"lineNumber":7,"author":{"gitId":"noelmathewisaac"},"content":""},{"lineNumber":8,"author":{"gitId":"noelmathewisaac"},"content":"    private ArrayList\u003cTask\u003e tasks;"},{"lineNumber":9,"author":{"gitId":"noelmathewisaac"},"content":"    private Ui ui \u003d new Ui();"},{"lineNumber":10,"author":{"gitId":"noelmathewisaac"},"content":""},{"lineNumber":11,"author":{"gitId":"noelmathewisaac"},"content":"    public TaskList(ArrayList\u003cTask\u003e tasks) {"},{"lineNumber":12,"author":{"gitId":"noelmathewisaac"},"content":"        this.tasks \u003d tasks;"},{"lineNumber":13,"author":{"gitId":"noelmathewisaac"},"content":"    }"},{"lineNumber":14,"author":{"gitId":"noelmathewisaac"},"content":""},{"lineNumber":15,"author":{"gitId":"noelmathewisaac"},"content":"    public TaskList() {"},{"lineNumber":16,"author":{"gitId":"noelmathewisaac"},"content":"        this.tasks \u003d new ArrayList\u003c\u003e();"},{"lineNumber":17,"author":{"gitId":"noelmathewisaac"},"content":"    }"},{"lineNumber":18,"author":{"gitId":"noelmathewisaac"},"content":""},{"lineNumber":19,"author":{"gitId":"noelmathewisaac"},"content":"    public ArrayList\u003cTask\u003e getTaskList() {"},{"lineNumber":20,"author":{"gitId":"noelmathewisaac"},"content":"        return this.tasks;"},{"lineNumber":21,"author":{"gitId":"noelmathewisaac"},"content":"    }"},{"lineNumber":22,"author":{"gitId":"noelmathewisaac"},"content":""},{"lineNumber":23,"author":{"gitId":"noelmathewisaac"},"content":"    /**"},{"lineNumber":24,"author":{"gitId":"noelmathewisaac"},"content":"     * Get the length of the tasks list."},{"lineNumber":25,"author":{"gitId":"noelmathewisaac"},"content":"     *"},{"lineNumber":26,"author":{"gitId":"noelmathewisaac"},"content":"     * @return An Integer representing the length of the tasks list."},{"lineNumber":27,"author":{"gitId":"noelmathewisaac"},"content":"     */"},{"lineNumber":28,"author":{"gitId":"noelmathewisaac"},"content":"    public int size() {"},{"lineNumber":29,"author":{"gitId":"noelmathewisaac"},"content":"        return this.tasks.size();"},{"lineNumber":30,"author":{"gitId":"noelmathewisaac"},"content":"    }"},{"lineNumber":31,"author":{"gitId":"noelmathewisaac"},"content":""},{"lineNumber":32,"author":{"gitId":"noelmathewisaac"},"content":"    /**"},{"lineNumber":33,"author":{"gitId":"noelmathewisaac"},"content":"     * Prints all the tasks in the task list."},{"lineNumber":34,"author":{"gitId":"noelmathewisaac"},"content":"     */"},{"lineNumber":35,"author":{"gitId":"noelmathewisaac"},"content":"    public String listTasks() {"},{"lineNumber":36,"author":{"gitId":"noelmathewisaac"},"content":"        String output \u003d \"\";"},{"lineNumber":37,"author":{"gitId":"noelmathewisaac"},"content":"        output +\u003d this.ui.FORMAT_LINE + \"\\n\";"},{"lineNumber":38,"author":{"gitId":"noelmathewisaac"},"content":"        output +\u003d \"You have the following task(s) in your list.\\n\";"},{"lineNumber":39,"author":{"gitId":"noelmathewisaac"},"content":"        for (int i \u003d 0; i \u003c this.tasks.size(); i++) {"},{"lineNumber":40,"author":{"gitId":"noelmathewisaac"},"content":"            Task task \u003d this.tasks.get(i);"},{"lineNumber":41,"author":{"gitId":"noelmathewisaac"},"content":"            output +\u003d i + 1 + \".\" + task.toString() + \"\\n\";"},{"lineNumber":42,"author":{"gitId":"noelmathewisaac"},"content":""},{"lineNumber":43,"author":{"gitId":"noelmathewisaac"},"content":"        }"},{"lineNumber":44,"author":{"gitId":"noelmathewisaac"},"content":"        output +\u003d \"\\n\" + this.ui.FORMAT_LINE;"},{"lineNumber":45,"author":{"gitId":"noelmathewisaac"},"content":""},{"lineNumber":46,"author":{"gitId":"noelmathewisaac"},"content":"        return output;"},{"lineNumber":47,"author":{"gitId":"noelmathewisaac"},"content":"    }"},{"lineNumber":48,"author":{"gitId":"noelmathewisaac"},"content":""},{"lineNumber":49,"author":{"gitId":"noelmathewisaac"},"content":"    /**"},{"lineNumber":50,"author":{"gitId":"noelmathewisaac"},"content":"     * Adds a task to the task list."},{"lineNumber":51,"author":{"gitId":"noelmathewisaac"},"content":"     *"},{"lineNumber":52,"author":{"gitId":"noelmathewisaac"},"content":"     * @param task An instance of Task representing the newly added task."},{"lineNumber":53,"author":{"gitId":"noelmathewisaac"},"content":"     */"},{"lineNumber":54,"author":{"gitId":"noelmathewisaac"},"content":"    public void addTask(Task task) {"},{"lineNumber":55,"author":{"gitId":"noelmathewisaac"},"content":"        this.tasks.add(task);"},{"lineNumber":56,"author":{"gitId":"noelmathewisaac"},"content":""},{"lineNumber":57,"author":{"gitId":"noelmathewisaac"},"content":"    }"},{"lineNumber":58,"author":{"gitId":"noelmathewisaac"},"content":""},{"lineNumber":59,"author":{"gitId":"noelmathewisaac"},"content":"    /**"},{"lineNumber":60,"author":{"gitId":"noelmathewisaac"},"content":"     * Prints the newly added task details along with the new size of the task list"},{"lineNumber":61,"author":{"gitId":"noelmathewisaac"},"content":"     *"},{"lineNumber":62,"author":{"gitId":"noelmathewisaac"},"content":"     * @param task An instance of Task representing the newly added task"},{"lineNumber":63,"author":{"gitId":"noelmathewisaac"},"content":"     */"},{"lineNumber":64,"author":{"gitId":"noelmathewisaac"},"content":"    public String printAddedTask(Task task) {"},{"lineNumber":65,"author":{"gitId":"noelmathewisaac"},"content":"        String output \u003d \"\";"},{"lineNumber":66,"author":{"gitId":"noelmathewisaac"},"content":"        output +\u003d this.ui.FORMAT_LINE;"},{"lineNumber":67,"author":{"gitId":"noelmathewisaac"},"content":"        output +\u003d \"\\nGot it. I\u0027ve added this task to your list:\\n\""},{"lineNumber":68,"author":{"gitId":"noelmathewisaac"},"content":"                + \"   \" + task.toString();"},{"lineNumber":69,"author":{"gitId":"noelmathewisaac"},"content":"        output +\u003d \"\\nNow you have \" + this.tasks.size() + \" task(s) in the list.\\n\";"},{"lineNumber":70,"author":{"gitId":"noelmathewisaac"},"content":"        output +\u003d this.ui.FORMAT_LINE;"},{"lineNumber":71,"author":{"gitId":"noelmathewisaac"},"content":""},{"lineNumber":72,"author":{"gitId":"noelmathewisaac"},"content":"        return output;"},{"lineNumber":73,"author":{"gitId":"noelmathewisaac"},"content":""},{"lineNumber":74,"author":{"gitId":"noelmathewisaac"},"content":""},{"lineNumber":75,"author":{"gitId":"noelmathewisaac"},"content":"    }"},{"lineNumber":76,"author":{"gitId":"noelmathewisaac"},"content":""},{"lineNumber":77,"author":{"gitId":"noelmathewisaac"},"content":"    /**"},{"lineNumber":78,"author":{"gitId":"noelmathewisaac"},"content":"     * Marks the indicated given task as done."},{"lineNumber":79,"author":{"gitId":"noelmathewisaac"},"content":"     *"},{"lineNumber":80,"author":{"gitId":"noelmathewisaac"},"content":"     * @param index An integer representing the index of the task to be marked as done."},{"lineNumber":81,"author":{"gitId":"noelmathewisaac"},"content":"     */"},{"lineNumber":82,"author":{"gitId":"noelmathewisaac"},"content":"    public String markAsDone(int index) {"},{"lineNumber":83,"author":{"gitId":"noelmathewisaac"},"content":"        Task task \u003d this.tasks.get(index);"},{"lineNumber":84,"author":{"gitId":"noelmathewisaac"},"content":"        task.markAsDone();"},{"lineNumber":85,"author":{"gitId":"noelmathewisaac"},"content":"        String output \u003d \"\";"},{"lineNumber":86,"author":{"gitId":"noelmathewisaac"},"content":"        output +\u003d this.ui.FORMAT_LINE;"},{"lineNumber":87,"author":{"gitId":"noelmathewisaac"},"content":"        output +\u003d \"\\n Good job! I\u0027ve marked this task as done:\\n\""},{"lineNumber":88,"author":{"gitId":"noelmathewisaac"},"content":"                + \"   \" + task.toString() + \"\\n\";"},{"lineNumber":89,"author":{"gitId":"noelmathewisaac"},"content":"        output +\u003d this.ui.FORMAT_LINE;"},{"lineNumber":90,"author":{"gitId":"noelmathewisaac"},"content":"        return output;"},{"lineNumber":91,"author":{"gitId":"noelmathewisaac"},"content":""},{"lineNumber":92,"author":{"gitId":"noelmathewisaac"},"content":"    }"},{"lineNumber":93,"author":{"gitId":"noelmathewisaac"},"content":""},{"lineNumber":94,"author":{"gitId":"noelmathewisaac"},"content":"    /**"},{"lineNumber":95,"author":{"gitId":"noelmathewisaac"},"content":"     * Deletes the indicated task from the task list."},{"lineNumber":96,"author":{"gitId":"noelmathewisaac"},"content":"     *"},{"lineNumber":97,"author":{"gitId":"noelmathewisaac"},"content":"     * @param index An integer representing the index of the task to be deleted."},{"lineNumber":98,"author":{"gitId":"noelmathewisaac"},"content":"     */"},{"lineNumber":99,"author":{"gitId":"noelmathewisaac"},"content":"    public String deleteTask(int index) {"},{"lineNumber":100,"author":{"gitId":"noelmathewisaac"},"content":"        Task task \u003d this.tasks.get(index);"},{"lineNumber":101,"author":{"gitId":"noelmathewisaac"},"content":"        this.tasks.remove(index);"},{"lineNumber":102,"author":{"gitId":"noelmathewisaac"},"content":"        String output \u003d \"\";"},{"lineNumber":103,"author":{"gitId":"noelmathewisaac"},"content":"        output +\u003d this.ui.FORMAT_LINE;"},{"lineNumber":104,"author":{"gitId":"noelmathewisaac"},"content":"        output +\u003d \"\\n Noted. I\u0027ve removed this task:\\n\""},{"lineNumber":105,"author":{"gitId":"noelmathewisaac"},"content":"                + \"   \" + task.toString() + \"\\n\";"},{"lineNumber":106,"author":{"gitId":"noelmathewisaac"},"content":"        output +\u003d \"Now you have \" + this.tasks.size() + \" task(s) in the list.\\n\";"},{"lineNumber":107,"author":{"gitId":"noelmathewisaac"},"content":"        output +\u003d this.ui.FORMAT_LINE;"},{"lineNumber":108,"author":{"gitId":"noelmathewisaac"},"content":"        return output;"},{"lineNumber":109,"author":{"gitId":"noelmathewisaac"},"content":""},{"lineNumber":110,"author":{"gitId":"noelmathewisaac"},"content":"    }"},{"lineNumber":111,"author":{"gitId":"noelmathewisaac"},"content":""},{"lineNumber":112,"author":{"gitId":"noelmathewisaac"},"content":"    /**"},{"lineNumber":113,"author":{"gitId":"noelmathewisaac"},"content":"     * Searches for tasks based on a keyword."},{"lineNumber":114,"author":{"gitId":"noelmathewisaac"},"content":"     *"},{"lineNumber":115,"author":{"gitId":"noelmathewisaac"},"content":"     * @param keyword A String indicating the keyword to search for."},{"lineNumber":116,"author":{"gitId":"noelmathewisaac"},"content":"     */"},{"lineNumber":117,"author":{"gitId":"noelmathewisaac"},"content":"    public String findTask(String keyword) {"},{"lineNumber":118,"author":{"gitId":"noelmathewisaac"},"content":"        ArrayList\u003cTask\u003e filteredTasks \u003d new ArrayList\u003c\u003e();"},{"lineNumber":119,"author":{"gitId":"noelmathewisaac"},"content":"        String output \u003d \"\";"},{"lineNumber":120,"author":{"gitId":"noelmathewisaac"},"content":"        for (Task task : this.tasks) {"},{"lineNumber":121,"author":{"gitId":"noelmathewisaac"},"content":"            if (task.getDescription().toLowerCase().contains(keyword.toLowerCase())) {"},{"lineNumber":122,"author":{"gitId":"noelmathewisaac"},"content":"                filteredTasks.add(task);"},{"lineNumber":123,"author":{"gitId":"noelmathewisaac"},"content":"            }"},{"lineNumber":124,"author":{"gitId":"noelmathewisaac"},"content":"        }"},{"lineNumber":125,"author":{"gitId":"noelmathewisaac"},"content":"        if (filteredTasks.size() \u003d\u003d 0) {"},{"lineNumber":126,"author":{"gitId":"noelmathewisaac"},"content":"            output +\u003d \"Sorry I could not find any matching tasks in your list.\\n\";"},{"lineNumber":127,"author":{"gitId":"noelmathewisaac"},"content":"        } else {"},{"lineNumber":128,"author":{"gitId":"noelmathewisaac"},"content":"            output +\u003d this.ui.FORMAT_LINE;"},{"lineNumber":129,"author":{"gitId":"noelmathewisaac"},"content":"            output +\u003d \"\\nHere are the matching tasks in your list:\\n\";"},{"lineNumber":130,"author":{"gitId":"noelmathewisaac"},"content":"            for (int i \u003d 0; i \u003c filteredTasks.size(); i++) {"},{"lineNumber":131,"author":{"gitId":"noelmathewisaac"},"content":"                Task task \u003d filteredTasks.get(i);"},{"lineNumber":132,"author":{"gitId":"noelmathewisaac"},"content":"                output +\u003d i + 1 + \".\" + task.toString() + \"\\n\";"},{"lineNumber":133,"author":{"gitId":"noelmathewisaac"},"content":""},{"lineNumber":134,"author":{"gitId":"noelmathewisaac"},"content":"            }"},{"lineNumber":135,"author":{"gitId":"noelmathewisaac"},"content":"            output +\u003d \"\\n\" + this.ui.FORMAT_LINE;"},{"lineNumber":136,"author":{"gitId":"noelmathewisaac"},"content":"        }"},{"lineNumber":137,"author":{"gitId":"noelmathewisaac"},"content":"        return output;"},{"lineNumber":138,"author":{"gitId":"noelmathewisaac"},"content":"    }"},{"lineNumber":139,"author":{"gitId":"noelmathewisaac"},"content":"}"}],"authorContributionMap":{"noelmathewisaac":139}},{"path":"src/main/java/ToDo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"noelmathewisaac"},"content":"/**"},{"lineNumber":2,"author":{"gitId":"noelmathewisaac"},"content":" * Represents a todo task without any date/time attached to it."},{"lineNumber":3,"author":{"gitId":"noelmathewisaac"},"content":" */"},{"lineNumber":4,"author":{"gitId":"noelmathewisaac"},"content":"public class ToDo extends Task {"},{"lineNumber":5,"author":{"gitId":"noelmathewisaac"},"content":""},{"lineNumber":6,"author":{"gitId":"noelmathewisaac"},"content":"    /**"},{"lineNumber":7,"author":{"gitId":"noelmathewisaac"},"content":"     * Creates an todo instance."},{"lineNumber":8,"author":{"gitId":"noelmathewisaac"},"content":"     *"},{"lineNumber":9,"author":{"gitId":"noelmathewisaac"},"content":"     * @param description String describing the todo."},{"lineNumber":10,"author":{"gitId":"noelmathewisaac"},"content":"     */"},{"lineNumber":11,"author":{"gitId":"noelmathewisaac"},"content":"    public ToDo(String description) {"},{"lineNumber":12,"author":{"gitId":"noelmathewisaac"},"content":"        super(description);"},{"lineNumber":13,"author":{"gitId":"noelmathewisaac"},"content":"    }"},{"lineNumber":14,"author":{"gitId":"noelmathewisaac"},"content":""},{"lineNumber":15,"author":{"gitId":"noelmathewisaac"},"content":"    /**"},{"lineNumber":16,"author":{"gitId":"noelmathewisaac"},"content":"     * Returns a String which gives information about the todo."},{"lineNumber":17,"author":{"gitId":"noelmathewisaac"},"content":"     *"},{"lineNumber":18,"author":{"gitId":"noelmathewisaac"},"content":"     * @return A String containing information about the todo."},{"lineNumber":19,"author":{"gitId":"noelmathewisaac"},"content":"     */"},{"lineNumber":20,"author":{"gitId":"noelmathewisaac"},"content":"    @Override"},{"lineNumber":21,"author":{"gitId":"noelmathewisaac"},"content":"    public String toString() {"},{"lineNumber":22,"author":{"gitId":"noelmathewisaac"},"content":"        return \"[T]\" + super.toString();"},{"lineNumber":23,"author":{"gitId":"noelmathewisaac"},"content":"    }"},{"lineNumber":24,"author":{"gitId":"noelmathewisaac"},"content":""},{"lineNumber":25,"author":{"gitId":"noelmathewisaac"},"content":"    /**"},{"lineNumber":26,"author":{"gitId":"noelmathewisaac"},"content":"     * Returns a String which gives information about the todo in the"},{"lineNumber":27,"author":{"gitId":"noelmathewisaac"},"content":"     * format to be stored in a file."},{"lineNumber":28,"author":{"gitId":"noelmathewisaac"},"content":"     *"},{"lineNumber":29,"author":{"gitId":"noelmathewisaac"},"content":"     * @return A String containing information about the todo."},{"lineNumber":30,"author":{"gitId":"noelmathewisaac"},"content":"     */"},{"lineNumber":31,"author":{"gitId":"noelmathewisaac"},"content":"    @Override"},{"lineNumber":32,"author":{"gitId":"noelmathewisaac"},"content":"    public String fileString() {"},{"lineNumber":33,"author":{"gitId":"noelmathewisaac"},"content":"        int statusNum \u003d this.getStatus() ? 1 : 0;"},{"lineNumber":34,"author":{"gitId":"noelmathewisaac"},"content":"        return \"T | \" + statusNum + \" | \" + this.getDescription();"},{"lineNumber":35,"author":{"gitId":"noelmathewisaac"},"content":"    }"},{"lineNumber":36,"author":{"gitId":"noelmathewisaac"},"content":"}"}],"authorContributionMap":{"noelmathewisaac":36}},{"path":"src/main/java/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"noelmathewisaac"},"content":"/**"},{"lineNumber":2,"author":{"gitId":"noelmathewisaac"},"content":" * Class which deals with the UI interactions with the user."},{"lineNumber":3,"author":{"gitId":"noelmathewisaac"},"content":" */"},{"lineNumber":4,"author":{"gitId":"noelmathewisaac"},"content":"class Ui {"},{"lineNumber":5,"author":{"gitId":"noelmathewisaac"},"content":"    static final String FORMAT_LINE \u003d \"....................................................\";"},{"lineNumber":6,"author":{"gitId":"noelmathewisaac"},"content":""},{"lineNumber":7,"author":{"gitId":"noelmathewisaac"},"content":"    /**"},{"lineNumber":8,"author":{"gitId":"noelmathewisaac"},"content":"     * Greets the user"},{"lineNumber":9,"author":{"gitId":"noelmathewisaac"},"content":"     */"},{"lineNumber":10,"author":{"gitId":"noelmathewisaac"},"content":"    public void greetUser() {"},{"lineNumber":11,"author":{"gitId":"noelmathewisaac"},"content":"        System.out.println(FORMAT_LINE + \"\\nHey, \""},{"lineNumber":12,"author":{"gitId":"noelmathewisaac"},"content":"                + \"I am Duke.\\nHow can I help you?\\n\""},{"lineNumber":13,"author":{"gitId":"noelmathewisaac"},"content":"                + FORMAT_LINE);"},{"lineNumber":14,"author":{"gitId":"noelmathewisaac"},"content":"    }"},{"lineNumber":15,"author":{"gitId":"noelmathewisaac"},"content":""},{"lineNumber":16,"author":{"gitId":"noelmathewisaac"},"content":"    /**"},{"lineNumber":17,"author":{"gitId":"noelmathewisaac"},"content":"     * Echoes the command input by the user for better UI clarity."},{"lineNumber":18,"author":{"gitId":"noelmathewisaac"},"content":"     */"},{"lineNumber":19,"author":{"gitId":"noelmathewisaac"},"content":"    public void echoCommand(String input) {"},{"lineNumber":20,"author":{"gitId":"noelmathewisaac"},"content":"        System.out.println(\"\\n\u003e\u003e\u003e \" + input);"},{"lineNumber":21,"author":{"gitId":"noelmathewisaac"},"content":"    }"},{"lineNumber":22,"author":{"gitId":"noelmathewisaac"},"content":""},{"lineNumber":23,"author":{"gitId":"noelmathewisaac"},"content":"}"}],"authorContributionMap":{"noelmathewisaac":23}},{"path":"src/main/resources/view/DialogBox.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"noelmathewisaac"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"},{"lineNumber":2,"author":{"gitId":"noelmathewisaac"},"content":""},{"lineNumber":3,"author":{"gitId":"noelmathewisaac"},"content":"\u003c?import javafx.geometry.Insets?\u003e"},{"lineNumber":4,"author":{"gitId":"noelmathewisaac"},"content":"\u003c?import javafx.scene.control.Label?\u003e"},{"lineNumber":5,"author":{"gitId":"noelmathewisaac"},"content":"\u003c?import javafx.scene.image.ImageView?\u003e"},{"lineNumber":6,"author":{"gitId":"noelmathewisaac"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e"},{"lineNumber":7,"author":{"gitId":"noelmathewisaac"},"content":""},{"lineNumber":8,"author":{"gitId":"noelmathewisaac"},"content":"\u003cfx:root alignment\u003d\"TOP_RIGHT\" maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\" prefWidth\u003d\"400.0\" type\u003d\"javafx.scene.layout.HBox\" xmlns\u003d\"http://javafx.com/javafx/15.0.1\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e"},{"lineNumber":9,"author":{"gitId":"noelmathewisaac"},"content":"    \u003cchildren\u003e"},{"lineNumber":10,"author":{"gitId":"noelmathewisaac"},"content":"        \u003cLabel fx:id\u003d\"dialog\" maxHeight\u003d\"1.7976931348623157E308\" minHeight\u003d\"-Infinity\" text\u003d\"Label\" wrapText\u003d\"true\" /\u003e"},{"lineNumber":11,"author":{"gitId":"noelmathewisaac"},"content":"        \u003cImageView fx:id\u003d\"displayPicture\" fitHeight\u003d\"99.0\" fitWidth\u003d\"99.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\" /\u003e"},{"lineNumber":12,"author":{"gitId":"noelmathewisaac"},"content":"    \u003c/children\u003e"},{"lineNumber":13,"author":{"gitId":"noelmathewisaac"},"content":"    \u003cpadding\u003e"},{"lineNumber":14,"author":{"gitId":"noelmathewisaac"},"content":"        \u003cInsets bottom\u003d\"15.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"15.0\" /\u003e"},{"lineNumber":15,"author":{"gitId":"noelmathewisaac"},"content":"    \u003c/padding\u003e"},{"lineNumber":16,"author":{"gitId":"noelmathewisaac"},"content":"\u003c/fx:root\u003e"}],"authorContributionMap":{"noelmathewisaac":16}},{"path":"src/main/resources/view/MainWindow.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"noelmathewisaac"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"},{"lineNumber":2,"author":{"gitId":"noelmathewisaac"},"content":""},{"lineNumber":3,"author":{"gitId":"noelmathewisaac"},"content":"\u003c?import javafx.scene.control.Button?\u003e"},{"lineNumber":4,"author":{"gitId":"noelmathewisaac"},"content":"\u003c?import javafx.scene.control.ScrollPane?\u003e"},{"lineNumber":5,"author":{"gitId":"noelmathewisaac"},"content":"\u003c?import javafx.scene.control.TextField?\u003e"},{"lineNumber":6,"author":{"gitId":"noelmathewisaac"},"content":"\u003c?import javafx.scene.layout.AnchorPane?\u003e"},{"lineNumber":7,"author":{"gitId":"noelmathewisaac"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e"},{"lineNumber":8,"author":{"gitId":"noelmathewisaac"},"content":""},{"lineNumber":9,"author":{"gitId":"noelmathewisaac"},"content":"\u003cAnchorPane maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefHeight\u003d\"600.0\" prefWidth\u003d\"400.0\" xmlns\u003d\"http://javafx.com/javafx/8.0.171\" xmlns:fx\u003d\"http://javafx.com/fxml/1\" fx:controller\u003d\"MainWindow\"\u003e"},{"lineNumber":10,"author":{"gitId":"noelmathewisaac"},"content":"    \u003cchildren\u003e"},{"lineNumber":11,"author":{"gitId":"noelmathewisaac"},"content":"        \u003cTextField fx:id\u003d\"userInput\" layoutY\u003d\"558.0\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"324.0\" AnchorPane.bottomAnchor\u003d\"1.0\" /\u003e"},{"lineNumber":12,"author":{"gitId":"noelmathewisaac"},"content":"        \u003cButton fx:id\u003d\"sendButton\" layoutX\u003d\"324.0\" layoutY\u003d\"558.0\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"76.0\" text\u003d\"Send\" /\u003e"},{"lineNumber":13,"author":{"gitId":"noelmathewisaac"},"content":"        \u003cScrollPane fx:id\u003d\"scrollPane\" hbarPolicy\u003d\"NEVER\" hvalue\u003d\"1.0\" prefHeight\u003d\"557.0\" prefWidth\u003d\"400.0\" vvalue\u003d\"1.0\"\u003e"},{"lineNumber":14,"author":{"gitId":"noelmathewisaac"},"content":"            \u003ccontent\u003e"},{"lineNumber":15,"author":{"gitId":"noelmathewisaac"},"content":"                \u003cVBox fx:id\u003d\"dialogContainer\" prefHeight\u003d\"552.0\" prefWidth\u003d\"388.0\" /\u003e"},{"lineNumber":16,"author":{"gitId":"noelmathewisaac"},"content":"            \u003c/content\u003e"},{"lineNumber":17,"author":{"gitId":"noelmathewisaac"},"content":"        \u003c/ScrollPane\u003e"},{"lineNumber":18,"author":{"gitId":"noelmathewisaac"},"content":"    \u003c/children\u003e"},{"lineNumber":19,"author":{"gitId":"noelmathewisaac"},"content":"\u003c/AnchorPane\u003e"}],"authorContributionMap":{"noelmathewisaac":19}},{"path":"src/test/java/DeadlineTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"noelmathewisaac"},"content":"import org.junit.jupiter.api.Test;"},{"lineNumber":2,"author":{"gitId":"noelmathewisaac"},"content":""},{"lineNumber":3,"author":{"gitId":"noelmathewisaac"},"content":"import java.time.LocalDate;"},{"lineNumber":4,"author":{"gitId":"noelmathewisaac"},"content":""},{"lineNumber":5,"author":{"gitId":"noelmathewisaac"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;"},{"lineNumber":6,"author":{"gitId":"noelmathewisaac"},"content":""},{"lineNumber":7,"author":{"gitId":"noelmathewisaac"},"content":"public class DeadlineTest {"},{"lineNumber":8,"author":{"gitId":"noelmathewisaac"},"content":"    @Test"},{"lineNumber":9,"author":{"gitId":"noelmathewisaac"},"content":"    public void correctDescription() {"},{"lineNumber":10,"author":{"gitId":"noelmathewisaac"},"content":"        Deadline deadline \u003d new Deadline(\"task1\", LocalDate.parse(\"2020-02-02\"));"},{"lineNumber":11,"author":{"gitId":"noelmathewisaac"},"content":"        assertEquals(\"task1\", deadline.getDescription());"},{"lineNumber":12,"author":{"gitId":"noelmathewisaac"},"content":"    }"},{"lineNumber":13,"author":{"gitId":"noelmathewisaac"},"content":""},{"lineNumber":14,"author":{"gitId":"noelmathewisaac"},"content":"    @Test"},{"lineNumber":15,"author":{"gitId":"noelmathewisaac"},"content":"    public void correctFileStringConversion() {"},{"lineNumber":16,"author":{"gitId":"noelmathewisaac"},"content":"        Deadline deadline \u003d new Deadline(\"task1\", LocalDate.parse(\"2020-02-02\"));"},{"lineNumber":17,"author":{"gitId":"noelmathewisaac"},"content":"        deadline.markAsDone();"},{"lineNumber":18,"author":{"gitId":"noelmathewisaac"},"content":"        assertEquals(\"D | 1 | task1 | 2020-02-02\", deadline.fileString());"},{"lineNumber":19,"author":{"gitId":"noelmathewisaac"},"content":"    }"},{"lineNumber":20,"author":{"gitId":"noelmathewisaac"},"content":""},{"lineNumber":21,"author":{"gitId":"noelmathewisaac"},"content":"}"}],"authorContributionMap":{"noelmathewisaac":21}},{"path":"src/test/java/EventTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"noelmathewisaac"},"content":"import org.junit.jupiter.api.Test;"},{"lineNumber":2,"author":{"gitId":"noelmathewisaac"},"content":""},{"lineNumber":3,"author":{"gitId":"noelmathewisaac"},"content":"import java.time.LocalDate;"},{"lineNumber":4,"author":{"gitId":"noelmathewisaac"},"content":""},{"lineNumber":5,"author":{"gitId":"noelmathewisaac"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;"},{"lineNumber":6,"author":{"gitId":"noelmathewisaac"},"content":""},{"lineNumber":7,"author":{"gitId":"noelmathewisaac"},"content":"public class EventTest {"},{"lineNumber":8,"author":{"gitId":"noelmathewisaac"},"content":"    @Test"},{"lineNumber":9,"author":{"gitId":"noelmathewisaac"},"content":"    public void correctDescription() {"},{"lineNumber":10,"author":{"gitId":"noelmathewisaac"},"content":"        Event event \u003d new Event(\"task1\", LocalDate.parse(\"2020-02-02\"));"},{"lineNumber":11,"author":{"gitId":"noelmathewisaac"},"content":"        assertEquals(\"task1\", event.getDescription());"},{"lineNumber":12,"author":{"gitId":"noelmathewisaac"},"content":"    }"},{"lineNumber":13,"author":{"gitId":"noelmathewisaac"},"content":""},{"lineNumber":14,"author":{"gitId":"noelmathewisaac"},"content":"    @Test"},{"lineNumber":15,"author":{"gitId":"noelmathewisaac"},"content":"    public void correctFileStringConversion() {"},{"lineNumber":16,"author":{"gitId":"noelmathewisaac"},"content":"        Event event \u003d new Event(\"task1\", LocalDate.parse(\"2020-02-02\"));"},{"lineNumber":17,"author":{"gitId":"noelmathewisaac"},"content":"        assertEquals(\"E | 0 | task1 | 2020-02-02\", event.fileString());"},{"lineNumber":18,"author":{"gitId":"noelmathewisaac"},"content":"    }"},{"lineNumber":19,"author":{"gitId":"noelmathewisaac"},"content":""},{"lineNumber":20,"author":{"gitId":"noelmathewisaac"},"content":"}"}],"authorContributionMap":{"noelmathewisaac":20}},{"path":"text-ui-test/data/duke.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"noelmathewisaac"},"content":"D | 1 | returnbook | 2020-01-02"},{"lineNumber":2,"author":{"gitId":"noelmathewisaac"},"content":"E | 0 | projectmeeting | 2020-03-04"},{"lineNumber":3,"author":{"gitId":"noelmathewisaac"},"content":"T | 1 | borrowbook"},{"lineNumber":4,"author":{"gitId":"noelmathewisaac"},"content":"T | 0 | study"},{"lineNumber":5,"author":{"gitId":"noelmathewisaac"},"content":"T | 0 | exercise"},{"lineNumber":6,"author":{"gitId":"noelmathewisaac"},"content":"D | 0 | returnbook | 2020-01-02"},{"lineNumber":7,"author":{"gitId":"noelmathewisaac"},"content":"E | 0 | projectmeeting | 2020-03-04"},{"lineNumber":8,"author":{"gitId":"noelmathewisaac"},"content":"T | 0 |  borrow book"},{"lineNumber":9,"author":{"gitId":"noelmathewisaac"},"content":"T | 0 |  study"},{"lineNumber":10,"author":{"gitId":"noelmathewisaac"},"content":"T | 0 |  exercise"},{"lineNumber":11,"author":{"gitId":"noelmathewisaac"},"content":"D | 0 |  return book  | 2020-01-02"},{"lineNumber":12,"author":{"gitId":"noelmathewisaac"},"content":"E | 0 |  project meeting  | 2020-03-04"}],"authorContributionMap":{"noelmathewisaac":12}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"noelmathewisaac"},"content":"todo borrow book"},{"lineNumber":2,"author":{"gitId":"noelmathewisaac"},"content":"todo study"},{"lineNumber":3,"author":{"gitId":"noelmathewisaac"},"content":"todo exercise"},{"lineNumber":4,"author":{"gitId":"noelmathewisaac"},"content":"deadline return book /by 2020-01-02"},{"lineNumber":5,"author":{"gitId":"noelmathewisaac"},"content":"event project meeting /at 2020-03-04"},{"lineNumber":6,"author":{"gitId":"noelmathewisaac"},"content":"done 1"},{"lineNumber":7,"author":{"gitId":"noelmathewisaac"},"content":"done 2"},{"lineNumber":8,"author":{"gitId":"noelmathewisaac"},"content":"list"},{"lineNumber":9,"author":{"gitId":"noelmathewisaac"},"content":"done 4"},{"lineNumber":10,"author":{"gitId":"noelmathewisaac"},"content":"done 500"},{"lineNumber":11,"author":{"gitId":"noelmathewisaac"},"content":"todo"},{"lineNumber":12,"author":{"gitId":"noelmathewisaac"},"content":"event No date"},{"lineNumber":13,"author":{"gitId":"noelmathewisaac"},"content":"delete 1"},{"lineNumber":14,"author":{"gitId":"noelmathewisaac"},"content":"list"},{"lineNumber":15,"author":{"gitId":"noelmathewisaac"},"content":"hi"},{"lineNumber":16,"author":{"gitId":"noelmathewisaac"},"content":"bye"}],"authorContributionMap":{"noelmathewisaac":16}}]
