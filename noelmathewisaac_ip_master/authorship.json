[{"path":"src/main/java/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"noelmathewisaac"},"content":"/**"},{"lineNumber":2,"author":{"gitId":"noelmathewisaac"},"content":" * Represents a Deadline task that needs to be done before a specific date/time."},{"lineNumber":3,"author":{"gitId":"noelmathewisaac"},"content":" */"},{"lineNumber":4,"author":{"gitId":"noelmathewisaac"},"content":"public class Deadline extends Task {"},{"lineNumber":5,"author":{"gitId":"noelmathewisaac"},"content":""},{"lineNumber":6,"author":{"gitId":"noelmathewisaac"},"content":"    protected String by;"},{"lineNumber":7,"author":{"gitId":"noelmathewisaac"},"content":""},{"lineNumber":8,"author":{"gitId":"noelmathewisaac"},"content":"    /**"},{"lineNumber":9,"author":{"gitId":"noelmathewisaac"},"content":"     * Creates an deadline instance."},{"lineNumber":10,"author":{"gitId":"noelmathewisaac"},"content":"     *"},{"lineNumber":11,"author":{"gitId":"noelmathewisaac"},"content":"     * @param description String describing the deadline"},{"lineNumber":12,"author":{"gitId":"noelmathewisaac"},"content":"     * @param by          String containing the deadline time"},{"lineNumber":13,"author":{"gitId":"noelmathewisaac"},"content":"     */"},{"lineNumber":14,"author":{"gitId":"noelmathewisaac"},"content":"    public Deadline(String description, String by) {"},{"lineNumber":15,"author":{"gitId":"noelmathewisaac"},"content":"        super(description);"},{"lineNumber":16,"author":{"gitId":"noelmathewisaac"},"content":"        this.by \u003d by;"},{"lineNumber":17,"author":{"gitId":"noelmathewisaac"},"content":"    }"},{"lineNumber":18,"author":{"gitId":"noelmathewisaac"},"content":""},{"lineNumber":19,"author":{"gitId":"noelmathewisaac"},"content":"    /**"},{"lineNumber":20,"author":{"gitId":"noelmathewisaac"},"content":"     * Returns a String which gives information about the deadline."},{"lineNumber":21,"author":{"gitId":"noelmathewisaac"},"content":"     *"},{"lineNumber":22,"author":{"gitId":"noelmathewisaac"},"content":"     * @return A String containing information about the deadline."},{"lineNumber":23,"author":{"gitId":"noelmathewisaac"},"content":"     */"},{"lineNumber":24,"author":{"gitId":"noelmathewisaac"},"content":"    @Override"},{"lineNumber":25,"author":{"gitId":"noelmathewisaac"},"content":"    public String toString() {"},{"lineNumber":26,"author":{"gitId":"noelmathewisaac"},"content":"        return \"[D]\" + super.toString() + \" (by: \" + by + \")\";"},{"lineNumber":27,"author":{"gitId":"noelmathewisaac"},"content":"    }"},{"lineNumber":28,"author":{"gitId":"noelmathewisaac"},"content":"}"}],"authorContributionMap":{"noelmathewisaac":28}},{"path":"src/main/java/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"noelmathewisaac"},"content":"import java.util.ArrayList;"},{"lineNumber":2,"author":{"gitId":"noelmathewisaac"},"content":"import java.util.Scanner;"},{"lineNumber":3,"author":{"gitId":"noelmathewisaac"},"content":""},{"lineNumber":4,"author":{"gitId":"noelmathewisaac"},"content":"/**"},{"lineNumber":5,"author":{"gitId":"noelmathewisaac"},"content":" * A personal task managing chatbot project."},{"lineNumber":6,"author":{"gitId":"noelmathewisaac"},"content":" */"},{"lineNumber":7,"author":{"gitId":"-"},"content":"public class Duke {"},{"lineNumber":8,"author":{"gitId":"noelmathewisaac"},"content":"    static final String FORMAT_LINE \u003d \"....................................................\";"},{"lineNumber":9,"author":{"gitId":"noelmathewisaac"},"content":""},{"lineNumber":10,"author":{"gitId":"noelmathewisaac"},"content":"    /**"},{"lineNumber":11,"author":{"gitId":"noelmathewisaac"},"content":"     * Greets the user"},{"lineNumber":12,"author":{"gitId":"noelmathewisaac"},"content":"     */"},{"lineNumber":13,"author":{"gitId":"noelmathewisaac"},"content":"    public static void greetUser() {"},{"lineNumber":14,"author":{"gitId":"noelmathewisaac"},"content":"        System.out.println(FORMAT_LINE + \"\\nHey, \" +"},{"lineNumber":15,"author":{"gitId":"noelmathewisaac"},"content":"                \"I am Duke.\\nHow can I help you?\\n\" +"},{"lineNumber":16,"author":{"gitId":"noelmathewisaac"},"content":"                FORMAT_LINE);"},{"lineNumber":17,"author":{"gitId":"noelmathewisaac"},"content":"    }"},{"lineNumber":18,"author":{"gitId":"noelmathewisaac"},"content":""},{"lineNumber":19,"author":{"gitId":"noelmathewisaac"},"content":"    /**"},{"lineNumber":20,"author":{"gitId":"noelmathewisaac"},"content":"     * Bids farewell to the user"},{"lineNumber":21,"author":{"gitId":"noelmathewisaac"},"content":"     */"},{"lineNumber":22,"author":{"gitId":"noelmathewisaac"},"content":"    public static void farewellUser() {"},{"lineNumber":23,"author":{"gitId":"noelmathewisaac"},"content":"        System.out.println(FORMAT_LINE +"},{"lineNumber":24,"author":{"gitId":"noelmathewisaac"},"content":"                \"\\nGoodbye and see you soon!\\n\" +"},{"lineNumber":25,"author":{"gitId":"noelmathewisaac"},"content":"                FORMAT_LINE);"},{"lineNumber":26,"author":{"gitId":"noelmathewisaac"},"content":"    }"},{"lineNumber":27,"author":{"gitId":"noelmathewisaac"},"content":""},{"lineNumber":28,"author":{"gitId":"noelmathewisaac"},"content":"    /**"},{"lineNumber":29,"author":{"gitId":"noelmathewisaac"},"content":"     * Prints all the tasks in the task list"},{"lineNumber":30,"author":{"gitId":"noelmathewisaac"},"content":"     *"},{"lineNumber":31,"author":{"gitId":"noelmathewisaac"},"content":"     * @param tasks A list of Task objects"},{"lineNumber":32,"author":{"gitId":"noelmathewisaac"},"content":"     */"},{"lineNumber":33,"author":{"gitId":"noelmathewisaac"},"content":"    public static void listTasks(ArrayList\u003cTask\u003e tasks) {"},{"lineNumber":34,"author":{"gitId":"noelmathewisaac"},"content":"        System.out.println(FORMAT_LINE);"},{"lineNumber":35,"author":{"gitId":"noelmathewisaac"},"content":"        System.out.println(\"You have the following task(s) in your list.\");"},{"lineNumber":36,"author":{"gitId":"noelmathewisaac"},"content":"        for (int i \u003d 0; i \u003c tasks.size(); i++) {"},{"lineNumber":37,"author":{"gitId":"noelmathewisaac"},"content":"            Task task \u003d tasks.get(i);"},{"lineNumber":38,"author":{"gitId":"noelmathewisaac"},"content":"            System.out.println(i + 1 + \".\" + task.toString());"},{"lineNumber":39,"author":{"gitId":"noelmathewisaac"},"content":""},{"lineNumber":40,"author":{"gitId":"noelmathewisaac"},"content":"        }"},{"lineNumber":41,"author":{"gitId":"noelmathewisaac"},"content":"        System.out.println(FORMAT_LINE);"},{"lineNumber":42,"author":{"gitId":"noelmathewisaac"},"content":""},{"lineNumber":43,"author":{"gitId":"noelmathewisaac"},"content":"    }"},{"lineNumber":44,"author":{"gitId":"noelmathewisaac"},"content":""},{"lineNumber":45,"author":{"gitId":"noelmathewisaac"},"content":"    /**"},{"lineNumber":46,"author":{"gitId":"noelmathewisaac"},"content":"     * Prints the newly added task details along with the new size of the task list"},{"lineNumber":47,"author":{"gitId":"noelmathewisaac"},"content":"     *"},{"lineNumber":48,"author":{"gitId":"noelmathewisaac"},"content":"     * @param tasks A list of Task objects"},{"lineNumber":49,"author":{"gitId":"noelmathewisaac"},"content":"     * @param task  An instance of Task representing the newly added task"},{"lineNumber":50,"author":{"gitId":"noelmathewisaac"},"content":"     */"},{"lineNumber":51,"author":{"gitId":"noelmathewisaac"},"content":"    public static void printAddedTask(ArrayList\u003cTask\u003e tasks, Task task) {"},{"lineNumber":52,"author":{"gitId":"noelmathewisaac"},"content":"        System.out.println(FORMAT_LINE);"},{"lineNumber":53,"author":{"gitId":"noelmathewisaac"},"content":"        System.out.println(\"Got it. I\u0027ve added this task to your list:\\n\" +"},{"lineNumber":54,"author":{"gitId":"noelmathewisaac"},"content":"                \"   \" + task.toString());"},{"lineNumber":55,"author":{"gitId":"noelmathewisaac"},"content":"        System.out.println(\"Now you have \" + tasks.size() + \" task(s) in the list.\");"},{"lineNumber":56,"author":{"gitId":"noelmathewisaac"},"content":"        System.out.println(FORMAT_LINE);"},{"lineNumber":57,"author":{"gitId":"noelmathewisaac"},"content":""},{"lineNumber":58,"author":{"gitId":"noelmathewisaac"},"content":""},{"lineNumber":59,"author":{"gitId":"noelmathewisaac"},"content":"    }"},{"lineNumber":60,"author":{"gitId":"noelmathewisaac"},"content":""},{"lineNumber":61,"author":{"gitId":"noelmathewisaac"},"content":"    /**"},{"lineNumber":62,"author":{"gitId":"noelmathewisaac"},"content":"     * Marks the indicated given task as done"},{"lineNumber":63,"author":{"gitId":"noelmathewisaac"},"content":"     *"},{"lineNumber":64,"author":{"gitId":"noelmathewisaac"},"content":"     * @param tasks A list of Task objects"},{"lineNumber":65,"author":{"gitId":"noelmathewisaac"},"content":"     * @param index An integer representing the index of the task to be marked as done"},{"lineNumber":66,"author":{"gitId":"noelmathewisaac"},"content":"     */"},{"lineNumber":67,"author":{"gitId":"noelmathewisaac"},"content":"    public static void markAsDone(ArrayList\u003cTask\u003e tasks, int index) {"},{"lineNumber":68,"author":{"gitId":"noelmathewisaac"},"content":"        Task task \u003d tasks.get(index);"},{"lineNumber":69,"author":{"gitId":"noelmathewisaac"},"content":"        task.markAsDone();"},{"lineNumber":70,"author":{"gitId":"noelmathewisaac"},"content":"        System.out.println(FORMAT_LINE);"},{"lineNumber":71,"author":{"gitId":"noelmathewisaac"},"content":"        System.out.println(\" Good job! I\u0027ve marked this task as done:\\n\" +"},{"lineNumber":72,"author":{"gitId":"noelmathewisaac"},"content":"                \"   \" + task.toString());"},{"lineNumber":73,"author":{"gitId":"noelmathewisaac"},"content":"        System.out.println(FORMAT_LINE);"},{"lineNumber":74,"author":{"gitId":"noelmathewisaac"},"content":""},{"lineNumber":75,"author":{"gitId":"noelmathewisaac"},"content":"    }"},{"lineNumber":76,"author":{"gitId":"noelmathewisaac"},"content":""},{"lineNumber":77,"author":{"gitId":"noelmathewisaac"},"content":"    /**"},{"lineNumber":78,"author":{"gitId":"noelmathewisaac"},"content":"     * Deletes the indicated task from the task list"},{"lineNumber":79,"author":{"gitId":"noelmathewisaac"},"content":"     *"},{"lineNumber":80,"author":{"gitId":"noelmathewisaac"},"content":"     * @param tasks A list of Task objects"},{"lineNumber":81,"author":{"gitId":"noelmathewisaac"},"content":"     * @param index An integer representing the index of the task to be deleted"},{"lineNumber":82,"author":{"gitId":"noelmathewisaac"},"content":"     */"},{"lineNumber":83,"author":{"gitId":"noelmathewisaac"},"content":"    public static void deleteTask(ArrayList\u003cTask\u003e tasks, int index) {"},{"lineNumber":84,"author":{"gitId":"noelmathewisaac"},"content":"        Task task \u003d tasks.get(index);"},{"lineNumber":85,"author":{"gitId":"noelmathewisaac"},"content":"        tasks.remove(index);"},{"lineNumber":86,"author":{"gitId":"noelmathewisaac"},"content":"        System.out.println(FORMAT_LINE);"},{"lineNumber":87,"author":{"gitId":"noelmathewisaac"},"content":"        System.out.println(\" Noted. I\u0027ve removed this task:\\n\" +"},{"lineNumber":88,"author":{"gitId":"noelmathewisaac"},"content":"                \"   \" + task.toString());"},{"lineNumber":89,"author":{"gitId":"noelmathewisaac"},"content":"        System.out.println(\"Now you have \" + tasks.size() + \" task(s) in the list.\");"},{"lineNumber":90,"author":{"gitId":"noelmathewisaac"},"content":"        System.out.println(FORMAT_LINE);"},{"lineNumber":91,"author":{"gitId":"noelmathewisaac"},"content":""},{"lineNumber":92,"author":{"gitId":"noelmathewisaac"},"content":"    }"},{"lineNumber":93,"author":{"gitId":"noelmathewisaac"},"content":""},{"lineNumber":94,"author":{"gitId":"noelmathewisaac"},"content":"    /**"},{"lineNumber":95,"author":{"gitId":"noelmathewisaac"},"content":"     * main method which runs the chatbot."},{"lineNumber":96,"author":{"gitId":"noelmathewisaac"},"content":"     *"},{"lineNumber":97,"author":{"gitId":"noelmathewisaac"},"content":"     * @param args empty string array."},{"lineNumber":98,"author":{"gitId":"noelmathewisaac"},"content":"     */"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    public static void main(String[] args) {"},{"lineNumber":100,"author":{"gitId":"noelmathewisaac"},"content":""},{"lineNumber":101,"author":{"gitId":"noelmathewisaac"},"content":"        Scanner sc \u003d new Scanner(System.in);"},{"lineNumber":102,"author":{"gitId":"noelmathewisaac"},"content":"        ArrayList\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();"},{"lineNumber":103,"author":{"gitId":"noelmathewisaac"},"content":""},{"lineNumber":104,"author":{"gitId":"noelmathewisaac"},"content":"        greetUser();"},{"lineNumber":105,"author":{"gitId":"noelmathewisaac"},"content":""},{"lineNumber":106,"author":{"gitId":"noelmathewisaac"},"content":"        while (sc.hasNext()) {"},{"lineNumber":107,"author":{"gitId":"noelmathewisaac"},"content":""},{"lineNumber":108,"author":{"gitId":"noelmathewisaac"},"content":"            String input \u003d sc.nextLine();"},{"lineNumber":109,"author":{"gitId":"noelmathewisaac"},"content":""},{"lineNumber":110,"author":{"gitId":"noelmathewisaac"},"content":"            try {"},{"lineNumber":111,"author":{"gitId":"noelmathewisaac"},"content":"                System.out.println(\"\\n\u003e\u003e\u003e \" + input);"},{"lineNumber":112,"author":{"gitId":"noelmathewisaac"},"content":"                if (input.equals(\"list\")) {"},{"lineNumber":113,"author":{"gitId":"noelmathewisaac"},"content":"                    listTasks(tasks);"},{"lineNumber":114,"author":{"gitId":"noelmathewisaac"},"content":"                } else if (input.startsWith(\"done\")) {"},{"lineNumber":115,"author":{"gitId":"noelmathewisaac"},"content":"                    int index \u003d Integer.parseInt(input.replaceAll(\"[^-0-9]\", \"\"));"},{"lineNumber":116,"author":{"gitId":"noelmathewisaac"},"content":"                    if (index \u003e tasks.size() || index \u003c\u003d 0) {"},{"lineNumber":117,"author":{"gitId":"noelmathewisaac"},"content":"                        throw new DukeException(\"The list item number provided is invalid\");"},{"lineNumber":118,"author":{"gitId":"noelmathewisaac"},"content":"                    }"},{"lineNumber":119,"author":{"gitId":"noelmathewisaac"},"content":"                    markAsDone(tasks, index - 1);"},{"lineNumber":120,"author":{"gitId":"noelmathewisaac"},"content":"                } else if (input.startsWith(\"todo\")) {"},{"lineNumber":121,"author":{"gitId":"noelmathewisaac"},"content":"                    String description \u003d input.replace(\"todo\", \"\");"},{"lineNumber":122,"author":{"gitId":"noelmathewisaac"},"content":"                    ToDo todo \u003d new ToDo(description);"},{"lineNumber":123,"author":{"gitId":"noelmathewisaac"},"content":"                    if (description.strip().equals(\"\")) {"},{"lineNumber":124,"author":{"gitId":"noelmathewisaac"},"content":"                        throw new DukeException(\"todo description cannot be empty\");"},{"lineNumber":125,"author":{"gitId":"noelmathewisaac"},"content":"                    }"},{"lineNumber":126,"author":{"gitId":"noelmathewisaac"},"content":"                    tasks.add(todo);"},{"lineNumber":127,"author":{"gitId":"noelmathewisaac"},"content":"                    printAddedTask(tasks, todo);"},{"lineNumber":128,"author":{"gitId":"noelmathewisaac"},"content":"                } else if (input.startsWith(\"deadline\")) {"},{"lineNumber":129,"author":{"gitId":"noelmathewisaac"},"content":"                    if (input.strip().equals(\"deadline\")) {"},{"lineNumber":130,"author":{"gitId":"noelmathewisaac"},"content":"                        throw new DukeException(\"deadline description cannot be empty\");"},{"lineNumber":131,"author":{"gitId":"noelmathewisaac"},"content":"                    }"},{"lineNumber":132,"author":{"gitId":"noelmathewisaac"},"content":"                    if (!input.contains(\"/by\")) {"},{"lineNumber":133,"author":{"gitId":"noelmathewisaac"},"content":"                        throw new DukeException(\"Wrong command format: Missing `/by`\");"},{"lineNumber":134,"author":{"gitId":"noelmathewisaac"},"content":"                    }"},{"lineNumber":135,"author":{"gitId":"noelmathewisaac"},"content":"                    if (input.split(\"/by\").length \u003c 2) {"},{"lineNumber":136,"author":{"gitId":"noelmathewisaac"},"content":"                        throw new DukeException(\"deadline date/time cannot be empty\");"},{"lineNumber":137,"author":{"gitId":"noelmathewisaac"},"content":"                    }"},{"lineNumber":138,"author":{"gitId":"noelmathewisaac"},"content":"                    String description \u003d input.split(\"/by\", 2)[0].replace(\"deadline\", \"\");"},{"lineNumber":139,"author":{"gitId":"noelmathewisaac"},"content":"                    String date \u003d input.split(\"/by\", 2)[1].strip();"},{"lineNumber":140,"author":{"gitId":"noelmathewisaac"},"content":"                    Deadline deadline \u003d new Deadline(description, date);"},{"lineNumber":141,"author":{"gitId":"noelmathewisaac"},"content":"                    tasks.add(deadline);"},{"lineNumber":142,"author":{"gitId":"noelmathewisaac"},"content":"                    printAddedTask(tasks, deadline);"},{"lineNumber":143,"author":{"gitId":"noelmathewisaac"},"content":"                } else if (input.startsWith(\"event\")) {"},{"lineNumber":144,"author":{"gitId":"noelmathewisaac"},"content":""},{"lineNumber":145,"author":{"gitId":"noelmathewisaac"},"content":"                    if (input.strip().equals(\"event\")) {"},{"lineNumber":146,"author":{"gitId":"noelmathewisaac"},"content":"                        throw new DukeException(\"event description cannot be empty\");"},{"lineNumber":147,"author":{"gitId":"noelmathewisaac"},"content":"                    }"},{"lineNumber":148,"author":{"gitId":"noelmathewisaac"},"content":"                    if (!input.contains(\"/at\")) {"},{"lineNumber":149,"author":{"gitId":"noelmathewisaac"},"content":"                        throw new DukeException(\"Wrong command format: Missing `/at`\");"},{"lineNumber":150,"author":{"gitId":"noelmathewisaac"},"content":"                    }"},{"lineNumber":151,"author":{"gitId":"noelmathewisaac"},"content":"                    if (input.split(\"/at\").length \u003c 2) {"},{"lineNumber":152,"author":{"gitId":"noelmathewisaac"},"content":"                        throw new DukeException(\"event date/time cannot be empty\");"},{"lineNumber":153,"author":{"gitId":"noelmathewisaac"},"content":"                    }"},{"lineNumber":154,"author":{"gitId":"noelmathewisaac"},"content":"                    String description \u003d input.split(\"/at\", 2)[0].replace(\"event\", \"\");"},{"lineNumber":155,"author":{"gitId":"noelmathewisaac"},"content":"                    String date \u003d input.split(\"/at\", 2)[1].strip();"},{"lineNumber":156,"author":{"gitId":"noelmathewisaac"},"content":""},{"lineNumber":157,"author":{"gitId":"noelmathewisaac"},"content":"                    Event event \u003d new Event(description, date);"},{"lineNumber":158,"author":{"gitId":"noelmathewisaac"},"content":"                    tasks.add(event);"},{"lineNumber":159,"author":{"gitId":"noelmathewisaac"},"content":"                    printAddedTask(tasks, event);"},{"lineNumber":160,"author":{"gitId":"noelmathewisaac"},"content":""},{"lineNumber":161,"author":{"gitId":"noelmathewisaac"},"content":"                } else if (input.startsWith(\"delete\")) {"},{"lineNumber":162,"author":{"gitId":"noelmathewisaac"},"content":"                    int index \u003d Integer.parseInt(input.replaceAll(\"[^-0-9]\", \"\"));"},{"lineNumber":163,"author":{"gitId":"noelmathewisaac"},"content":"                    if (index \u003e tasks.size() || index \u003c\u003d 0) {"},{"lineNumber":164,"author":{"gitId":"noelmathewisaac"},"content":"                        throw new DukeException(\"The list item number provided is invalid\");"},{"lineNumber":165,"author":{"gitId":"noelmathewisaac"},"content":"                    }"},{"lineNumber":166,"author":{"gitId":"noelmathewisaac"},"content":"                    deleteTask(tasks, index - 1);"},{"lineNumber":167,"author":{"gitId":"noelmathewisaac"},"content":""},{"lineNumber":168,"author":{"gitId":"noelmathewisaac"},"content":"                } else if (input.equals(\"bye\")) {"},{"lineNumber":169,"author":{"gitId":"noelmathewisaac"},"content":"                    farewellUser();"},{"lineNumber":170,"author":{"gitId":"noelmathewisaac"},"content":"                    break;"},{"lineNumber":171,"author":{"gitId":"noelmathewisaac"},"content":"                } else {"},{"lineNumber":172,"author":{"gitId":"noelmathewisaac"},"content":"                    throw new DukeException(\"I\u0027m sorry, but I don\u0027t know what that means :-(\");"},{"lineNumber":173,"author":{"gitId":"noelmathewisaac"},"content":"                }"},{"lineNumber":174,"author":{"gitId":"noelmathewisaac"},"content":"            } catch (Exception e) {"},{"lineNumber":175,"author":{"gitId":"noelmathewisaac"},"content":"                System.out.println(e.getMessage());"},{"lineNumber":176,"author":{"gitId":"noelmathewisaac"},"content":"            }"},{"lineNumber":177,"author":{"gitId":"noelmathewisaac"},"content":""},{"lineNumber":178,"author":{"gitId":"noelmathewisaac"},"content":"        }"},{"lineNumber":179,"author":{"gitId":"noelmathewisaac"},"content":""},{"lineNumber":180,"author":{"gitId":"noelmathewisaac"},"content":""},{"lineNumber":181,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":182,"author":{"gitId":"-"},"content":"}"}],"authorContributionMap":{"-":4,"noelmathewisaac":178}},{"path":"src/main/java/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"noelmathewisaac"},"content":"/**"},{"lineNumber":2,"author":{"gitId":"noelmathewisaac"},"content":" * Class to handle Exceptions specific to Duke"},{"lineNumber":3,"author":{"gitId":"noelmathewisaac"},"content":" */"},{"lineNumber":4,"author":{"gitId":"noelmathewisaac"},"content":"public class DukeException extends Exception {"},{"lineNumber":5,"author":{"gitId":"noelmathewisaac"},"content":""},{"lineNumber":6,"author":{"gitId":"noelmathewisaac"},"content":"    /**"},{"lineNumber":7,"author":{"gitId":"noelmathewisaac"},"content":"     * Creates an DukeException instance."},{"lineNumber":8,"author":{"gitId":"noelmathewisaac"},"content":"     *"},{"lineNumber":9,"author":{"gitId":"noelmathewisaac"},"content":"     * @param errorMessage String describing the error"},{"lineNumber":10,"author":{"gitId":"noelmathewisaac"},"content":"     */"},{"lineNumber":11,"author":{"gitId":"noelmathewisaac"},"content":"    public DukeException(String errorMessage) {"},{"lineNumber":12,"author":{"gitId":"noelmathewisaac"},"content":"        super(errorMessage);"},{"lineNumber":13,"author":{"gitId":"noelmathewisaac"},"content":"    }"},{"lineNumber":14,"author":{"gitId":"noelmathewisaac"},"content":"}"}],"authorContributionMap":{"noelmathewisaac":14}},{"path":"src/main/java/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"noelmathewisaac"},"content":"/**"},{"lineNumber":2,"author":{"gitId":"noelmathewisaac"},"content":" * Represents an Event task that start at a specific time and ends at a specific time."},{"lineNumber":3,"author":{"gitId":"noelmathewisaac"},"content":" */"},{"lineNumber":4,"author":{"gitId":"noelmathewisaac"},"content":"public class Event extends Task {"},{"lineNumber":5,"author":{"gitId":"noelmathewisaac"},"content":""},{"lineNumber":6,"author":{"gitId":"noelmathewisaac"},"content":"    protected String at;"},{"lineNumber":7,"author":{"gitId":"noelmathewisaac"},"content":""},{"lineNumber":8,"author":{"gitId":"noelmathewisaac"},"content":"    /**"},{"lineNumber":9,"author":{"gitId":"noelmathewisaac"},"content":"     * Creates an event instance."},{"lineNumber":10,"author":{"gitId":"noelmathewisaac"},"content":"     *"},{"lineNumber":11,"author":{"gitId":"noelmathewisaac"},"content":"     * @param description String describing the event"},{"lineNumber":12,"author":{"gitId":"noelmathewisaac"},"content":"     * @param at          String containing the event time"},{"lineNumber":13,"author":{"gitId":"noelmathewisaac"},"content":"     */"},{"lineNumber":14,"author":{"gitId":"noelmathewisaac"},"content":"    public Event(String description, String at) {"},{"lineNumber":15,"author":{"gitId":"noelmathewisaac"},"content":"        super(description);"},{"lineNumber":16,"author":{"gitId":"noelmathewisaac"},"content":"        this.at \u003d at;"},{"lineNumber":17,"author":{"gitId":"noelmathewisaac"},"content":"    }"},{"lineNumber":18,"author":{"gitId":"noelmathewisaac"},"content":""},{"lineNumber":19,"author":{"gitId":"noelmathewisaac"},"content":"    /**"},{"lineNumber":20,"author":{"gitId":"noelmathewisaac"},"content":"     * Returns a String which gives information about the event."},{"lineNumber":21,"author":{"gitId":"noelmathewisaac"},"content":"     *"},{"lineNumber":22,"author":{"gitId":"noelmathewisaac"},"content":"     * @return A String containing information about the event."},{"lineNumber":23,"author":{"gitId":"noelmathewisaac"},"content":"     */"},{"lineNumber":24,"author":{"gitId":"noelmathewisaac"},"content":"    @Override"},{"lineNumber":25,"author":{"gitId":"noelmathewisaac"},"content":"    public String toString() {"},{"lineNumber":26,"author":{"gitId":"noelmathewisaac"},"content":"        return \"[E]\" + super.toString() + \" (at: \" + at + \")\";"},{"lineNumber":27,"author":{"gitId":"noelmathewisaac"},"content":"    }"},{"lineNumber":28,"author":{"gitId":"noelmathewisaac"},"content":"}"}],"authorContributionMap":{"noelmathewisaac":28}},{"path":"src/main/java/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"noelmathewisaac"},"content":"/**"},{"lineNumber":2,"author":{"gitId":"noelmathewisaac"},"content":" * Represents a Task consisting of a description and completion status."},{"lineNumber":3,"author":{"gitId":"noelmathewisaac"},"content":" */"},{"lineNumber":4,"author":{"gitId":"noelmathewisaac"},"content":"public class Task {"},{"lineNumber":5,"author":{"gitId":"noelmathewisaac"},"content":"    protected String description;"},{"lineNumber":6,"author":{"gitId":"noelmathewisaac"},"content":"    protected boolean isDone;"},{"lineNumber":7,"author":{"gitId":"noelmathewisaac"},"content":""},{"lineNumber":8,"author":{"gitId":"noelmathewisaac"},"content":"    /** Creates a task instance."},{"lineNumber":9,"author":{"gitId":"noelmathewisaac"},"content":"     @param description String describing the task"},{"lineNumber":10,"author":{"gitId":"noelmathewisaac"},"content":"     */"},{"lineNumber":11,"author":{"gitId":"noelmathewisaac"},"content":"    public Task(String description){"},{"lineNumber":12,"author":{"gitId":"noelmathewisaac"},"content":"        this.description \u003d description;"},{"lineNumber":13,"author":{"gitId":"noelmathewisaac"},"content":"        this.isDone \u003d false;"},{"lineNumber":14,"author":{"gitId":"noelmathewisaac"},"content":"    }"},{"lineNumber":15,"author":{"gitId":"noelmathewisaac"},"content":""},{"lineNumber":16,"author":{"gitId":"noelmathewisaac"},"content":"    /** Retrieves the status symbol of the task depending on the completion status"},{"lineNumber":17,"author":{"gitId":"noelmathewisaac"},"content":"     * @return String with ths status character"},{"lineNumber":18,"author":{"gitId":"noelmathewisaac"},"content":"     */"},{"lineNumber":19,"author":{"gitId":"noelmathewisaac"},"content":"    public String getStatusIcon() {"},{"lineNumber":20,"author":{"gitId":"noelmathewisaac"},"content":"        return (isDone ? \"X\" : \" \"); //return tick or X symbols"},{"lineNumber":21,"author":{"gitId":"noelmathewisaac"},"content":"    }"},{"lineNumber":22,"author":{"gitId":"noelmathewisaac"},"content":""},{"lineNumber":23,"author":{"gitId":"noelmathewisaac"},"content":"    /** Marks task as done"},{"lineNumber":24,"author":{"gitId":"noelmathewisaac"},"content":"     */"},{"lineNumber":25,"author":{"gitId":"noelmathewisaac"},"content":"    public void markAsDone(){"},{"lineNumber":26,"author":{"gitId":"noelmathewisaac"},"content":"        this.isDone \u003d true;"},{"lineNumber":27,"author":{"gitId":"noelmathewisaac"},"content":"    }"},{"lineNumber":28,"author":{"gitId":"noelmathewisaac"},"content":""},{"lineNumber":29,"author":{"gitId":"noelmathewisaac"},"content":"    /**"},{"lineNumber":30,"author":{"gitId":"noelmathewisaac"},"content":"     * Returns a String which gives information about the task."},{"lineNumber":31,"author":{"gitId":"noelmathewisaac"},"content":"     *"},{"lineNumber":32,"author":{"gitId":"noelmathewisaac"},"content":"     * @return A String containing information about the task."},{"lineNumber":33,"author":{"gitId":"noelmathewisaac"},"content":"     */"},{"lineNumber":34,"author":{"gitId":"noelmathewisaac"},"content":"    public String toString() {"},{"lineNumber":35,"author":{"gitId":"noelmathewisaac"},"content":"        return \"[\" + this.getStatusIcon() + \"] \" + this.description;"},{"lineNumber":36,"author":{"gitId":"noelmathewisaac"},"content":"    }"},{"lineNumber":37,"author":{"gitId":"noelmathewisaac"},"content":"}"}],"authorContributionMap":{"noelmathewisaac":37}},{"path":"src/main/java/ToDo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"noelmathewisaac"},"content":"/**"},{"lineNumber":2,"author":{"gitId":"noelmathewisaac"},"content":" * Represents a todo task without any date/time attached to it."},{"lineNumber":3,"author":{"gitId":"noelmathewisaac"},"content":" */"},{"lineNumber":4,"author":{"gitId":"noelmathewisaac"},"content":"public class ToDo extends Task {"},{"lineNumber":5,"author":{"gitId":"noelmathewisaac"},"content":""},{"lineNumber":6,"author":{"gitId":"noelmathewisaac"},"content":"    /**"},{"lineNumber":7,"author":{"gitId":"noelmathewisaac"},"content":"     * Creates an todo instance."},{"lineNumber":8,"author":{"gitId":"noelmathewisaac"},"content":"     *"},{"lineNumber":9,"author":{"gitId":"noelmathewisaac"},"content":"     * @param description String describing the todo"},{"lineNumber":10,"author":{"gitId":"noelmathewisaac"},"content":"     */"},{"lineNumber":11,"author":{"gitId":"noelmathewisaac"},"content":"    public ToDo(String description) {"},{"lineNumber":12,"author":{"gitId":"noelmathewisaac"},"content":"        super(description);"},{"lineNumber":13,"author":{"gitId":"noelmathewisaac"},"content":"    }"},{"lineNumber":14,"author":{"gitId":"noelmathewisaac"},"content":""},{"lineNumber":15,"author":{"gitId":"noelmathewisaac"},"content":"    /**"},{"lineNumber":16,"author":{"gitId":"noelmathewisaac"},"content":"     * Returns a String which gives information about the todo."},{"lineNumber":17,"author":{"gitId":"noelmathewisaac"},"content":"     *"},{"lineNumber":18,"author":{"gitId":"noelmathewisaac"},"content":"     * @return A String containing information about the todo."},{"lineNumber":19,"author":{"gitId":"noelmathewisaac"},"content":"     */"},{"lineNumber":20,"author":{"gitId":"noelmathewisaac"},"content":"    @Override"},{"lineNumber":21,"author":{"gitId":"noelmathewisaac"},"content":"    public String toString() {"},{"lineNumber":22,"author":{"gitId":"noelmathewisaac"},"content":"        return \"[T]\" + super.toString();"},{"lineNumber":23,"author":{"gitId":"noelmathewisaac"},"content":"    }"},{"lineNumber":24,"author":{"gitId":"noelmathewisaac"},"content":"}"}],"authorContributionMap":{"noelmathewisaac":24}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"noelmathewisaac"},"content":"todo borrow book"},{"lineNumber":2,"author":{"gitId":"noelmathewisaac"},"content":"todo study"},{"lineNumber":3,"author":{"gitId":"noelmathewisaac"},"content":"todo exercise"},{"lineNumber":4,"author":{"gitId":"noelmathewisaac"},"content":"deadline return book /by Sunday"},{"lineNumber":5,"author":{"gitId":"noelmathewisaac"},"content":"event project meeting /at Mon 2-4pm"},{"lineNumber":6,"author":{"gitId":"noelmathewisaac"},"content":"done 1"},{"lineNumber":7,"author":{"gitId":"noelmathewisaac"},"content":"done 2"},{"lineNumber":8,"author":{"gitId":"noelmathewisaac"},"content":"list"},{"lineNumber":9,"author":{"gitId":"noelmathewisaac"},"content":"done 4"},{"lineNumber":10,"author":{"gitId":"noelmathewisaac"},"content":"done 500"},{"lineNumber":11,"author":{"gitId":"noelmathewisaac"},"content":"todo"},{"lineNumber":12,"author":{"gitId":"noelmathewisaac"},"content":"event No date"},{"lineNumber":13,"author":{"gitId":"noelmathewisaac"},"content":"delete 1"},{"lineNumber":14,"author":{"gitId":"noelmathewisaac"},"content":"list"},{"lineNumber":15,"author":{"gitId":"noelmathewisaac"},"content":"hi"},{"lineNumber":16,"author":{"gitId":"noelmathewisaac"},"content":"bye"}],"authorContributionMap":{"noelmathewisaac":16}}]
