[{"path":"data/duke.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"noelmathewisaac"},"content":"T | 1 | ooeobew"},{"lineNumber":2,"author":{"gitId":"noelmathewisaac"},"content":"D | 1 | lol | 2019-09-09"},{"lineNumber":3,"author":{"gitId":"noelmathewisaac"},"content":"T | 1 | fnej"},{"lineNumber":4,"author":{"gitId":"noelmathewisaac"},"content":"D | 0 | hi | 2019-09-12"},{"lineNumber":5,"author":{"gitId":"noelmathewisaac"},"content":"T | 1 | 1morw"},{"lineNumber":6,"author":{"gitId":"noelmathewisaac"},"content":"T | 0 |  book find "},{"lineNumber":7,"author":{"gitId":"noelmathewisaac"},"content":"T | 0 |  book sell"}],"authorContributionMap":{"noelmathewisaac":7}},{"path":"src/main/java/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"noelmathewisaac"},"content":"import java.time.LocalDate;"},{"lineNumber":2,"author":{"gitId":"noelmathewisaac"},"content":"import java.time.format.DateTimeFormatter;"},{"lineNumber":3,"author":{"gitId":"noelmathewisaac"},"content":""},{"lineNumber":4,"author":{"gitId":"noelmathewisaac"},"content":"/**"},{"lineNumber":5,"author":{"gitId":"noelmathewisaac"},"content":" * Represents a Deadline task that needs to be done before a specific date/time."},{"lineNumber":6,"author":{"gitId":"noelmathewisaac"},"content":" */"},{"lineNumber":7,"author":{"gitId":"noelmathewisaac"},"content":"public class Deadline extends Task {"},{"lineNumber":8,"author":{"gitId":"noelmathewisaac"},"content":""},{"lineNumber":9,"author":{"gitId":"noelmathewisaac"},"content":"    protected LocalDate by;"},{"lineNumber":10,"author":{"gitId":"noelmathewisaac"},"content":""},{"lineNumber":11,"author":{"gitId":"noelmathewisaac"},"content":"    /**"},{"lineNumber":12,"author":{"gitId":"noelmathewisaac"},"content":"     * Creates an deadline instance."},{"lineNumber":13,"author":{"gitId":"noelmathewisaac"},"content":"     *"},{"lineNumber":14,"author":{"gitId":"noelmathewisaac"},"content":"     * @param description String describing the deadline"},{"lineNumber":15,"author":{"gitId":"noelmathewisaac"},"content":"     * @param by          String containing the deadline time"},{"lineNumber":16,"author":{"gitId":"noelmathewisaac"},"content":"     */"},{"lineNumber":17,"author":{"gitId":"noelmathewisaac"},"content":"    public Deadline(String description, LocalDate by) {"},{"lineNumber":18,"author":{"gitId":"noelmathewisaac"},"content":"        super(description);"},{"lineNumber":19,"author":{"gitId":"noelmathewisaac"},"content":"        this.by \u003d by;"},{"lineNumber":20,"author":{"gitId":"noelmathewisaac"},"content":"    }"},{"lineNumber":21,"author":{"gitId":"noelmathewisaac"},"content":""},{"lineNumber":22,"author":{"gitId":"noelmathewisaac"},"content":"    /**"},{"lineNumber":23,"author":{"gitId":"noelmathewisaac"},"content":"     * Returns a String which gives information about the deadline."},{"lineNumber":24,"author":{"gitId":"noelmathewisaac"},"content":"     *"},{"lineNumber":25,"author":{"gitId":"noelmathewisaac"},"content":"     * @return A String containing information about the deadline."},{"lineNumber":26,"author":{"gitId":"noelmathewisaac"},"content":"     */"},{"lineNumber":27,"author":{"gitId":"noelmathewisaac"},"content":"    @Override"},{"lineNumber":28,"author":{"gitId":"noelmathewisaac"},"content":"    public String toString() {"},{"lineNumber":29,"author":{"gitId":"noelmathewisaac"},"content":"        return \"[D]\" + super.toString() + \" (by: \""},{"lineNumber":30,"author":{"gitId":"noelmathewisaac"},"content":"                + this.by.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\")) + \")\";"},{"lineNumber":31,"author":{"gitId":"noelmathewisaac"},"content":"    }"},{"lineNumber":32,"author":{"gitId":"noelmathewisaac"},"content":""},{"lineNumber":33,"author":{"gitId":"noelmathewisaac"},"content":"    /**"},{"lineNumber":34,"author":{"gitId":"noelmathewisaac"},"content":"     * Returns a String which gives information about the deadline in the"},{"lineNumber":35,"author":{"gitId":"noelmathewisaac"},"content":"     * format to be stored in a file."},{"lineNumber":36,"author":{"gitId":"noelmathewisaac"},"content":"     *"},{"lineNumber":37,"author":{"gitId":"noelmathewisaac"},"content":"     * @return A String containing information about the deadline."},{"lineNumber":38,"author":{"gitId":"noelmathewisaac"},"content":"     */"},{"lineNumber":39,"author":{"gitId":"noelmathewisaac"},"content":"    @Override"},{"lineNumber":40,"author":{"gitId":"noelmathewisaac"},"content":"    public String fileString() {"},{"lineNumber":41,"author":{"gitId":"noelmathewisaac"},"content":"        int statusNum \u003d this.isDone ? 1 : 0;"},{"lineNumber":42,"author":{"gitId":"noelmathewisaac"},"content":"        return \"D | \" + statusNum + \" | \" + this.description + \" | \" + this.by;"},{"lineNumber":43,"author":{"gitId":"noelmathewisaac"},"content":"    }"},{"lineNumber":44,"author":{"gitId":"noelmathewisaac"},"content":"}"}],"authorContributionMap":{"noelmathewisaac":44}},{"path":"src/main/java/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"noelmathewisaac"},"content":"import java.io.FileNotFoundException;"},{"lineNumber":2,"author":{"gitId":"noelmathewisaac"},"content":"import java.util.Scanner;"},{"lineNumber":3,"author":{"gitId":"noelmathewisaac"},"content":""},{"lineNumber":4,"author":{"gitId":"noelmathewisaac"},"content":""},{"lineNumber":5,"author":{"gitId":"noelmathewisaac"},"content":"/**"},{"lineNumber":6,"author":{"gitId":"noelmathewisaac"},"content":" * A personal task managing chatbot project."},{"lineNumber":7,"author":{"gitId":"noelmathewisaac"},"content":" */"},{"lineNumber":8,"author":{"gitId":"-"},"content":"public class Duke {"},{"lineNumber":9,"author":{"gitId":"noelmathewisaac"},"content":"    public TaskList tasks;"},{"lineNumber":10,"author":{"gitId":"noelmathewisaac"},"content":"    public Storage storage;"},{"lineNumber":11,"author":{"gitId":"noelmathewisaac"},"content":"    public Ui ui;"},{"lineNumber":12,"author":{"gitId":"noelmathewisaac"},"content":""},{"lineNumber":13,"author":{"gitId":"noelmathewisaac"},"content":"    Duke() {"},{"lineNumber":14,"author":{"gitId":"noelmathewisaac"},"content":"        this.ui \u003d new Ui();"},{"lineNumber":15,"author":{"gitId":"noelmathewisaac"},"content":"        this.storage \u003d new Storage(\"data/duke.txt\");"},{"lineNumber":16,"author":{"gitId":"noelmathewisaac"},"content":"        try {"},{"lineNumber":17,"author":{"gitId":"noelmathewisaac"},"content":"            this.tasks \u003d new TaskList(this.storage.readTasksFromFile());"},{"lineNumber":18,"author":{"gitId":"noelmathewisaac"},"content":"        } catch (FileNotFoundException fileException) {"},{"lineNumber":19,"author":{"gitId":"noelmathewisaac"},"content":"            this.tasks \u003d new TaskList();"},{"lineNumber":20,"author":{"gitId":"noelmathewisaac"},"content":"        }"},{"lineNumber":21,"author":{"gitId":"noelmathewisaac"},"content":"    }"},{"lineNumber":22,"author":{"gitId":"noelmathewisaac"},"content":""},{"lineNumber":23,"author":{"gitId":"noelmathewisaac"},"content":"    /**"},{"lineNumber":24,"author":{"gitId":"noelmathewisaac"},"content":"     * Main method which serves as the entry point into the chatbot."},{"lineNumber":25,"author":{"gitId":"noelmathewisaac"},"content":"     *"},{"lineNumber":26,"author":{"gitId":"noelmathewisaac"},"content":"     * @param args empty string array."},{"lineNumber":27,"author":{"gitId":"noelmathewisaac"},"content":"     */"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public static void main(String[] args) {"},{"lineNumber":29,"author":{"gitId":"noelmathewisaac"},"content":"        new Duke().run();"},{"lineNumber":30,"author":{"gitId":"noelmathewisaac"},"content":"    }"},{"lineNumber":31,"author":{"gitId":"noelmathewisaac"},"content":""},{"lineNumber":32,"author":{"gitId":"noelmathewisaac"},"content":"    /**"},{"lineNumber":33,"author":{"gitId":"noelmathewisaac"},"content":"     * Runs the chatbot by taking in user input and processing it."},{"lineNumber":34,"author":{"gitId":"noelmathewisaac"},"content":"     */"},{"lineNumber":35,"author":{"gitId":"noelmathewisaac"},"content":"    public void run() {"},{"lineNumber":36,"author":{"gitId":"noelmathewisaac"},"content":"        this.ui.greetUser();"},{"lineNumber":37,"author":{"gitId":"noelmathewisaac"},"content":""},{"lineNumber":38,"author":{"gitId":"noelmathewisaac"},"content":"        Scanner sc \u003d new Scanner(System.in);"},{"lineNumber":39,"author":{"gitId":"noelmathewisaac"},"content":""},{"lineNumber":40,"author":{"gitId":"noelmathewisaac"},"content":"        while (sc.hasNext()) {"},{"lineNumber":41,"author":{"gitId":"noelmathewisaac"},"content":"            String input \u003d sc.nextLine();"},{"lineNumber":42,"author":{"gitId":"noelmathewisaac"},"content":""},{"lineNumber":43,"author":{"gitId":"noelmathewisaac"},"content":"            try {"},{"lineNumber":44,"author":{"gitId":"noelmathewisaac"},"content":"                this.ui.echoCommand(input);"},{"lineNumber":45,"author":{"gitId":"noelmathewisaac"},"content":"                if (input.equals(\"bye\")) {"},{"lineNumber":46,"author":{"gitId":"noelmathewisaac"},"content":"                    this.ui.farewellUser();"},{"lineNumber":47,"author":{"gitId":"noelmathewisaac"},"content":"                    break;"},{"lineNumber":48,"author":{"gitId":"noelmathewisaac"},"content":"                }"},{"lineNumber":49,"author":{"gitId":"noelmathewisaac"},"content":"                Parser.parseInput(input, this.tasks, this.storage);"},{"lineNumber":50,"author":{"gitId":"noelmathewisaac"},"content":""},{"lineNumber":51,"author":{"gitId":"noelmathewisaac"},"content":"            } catch (Exception e) {"},{"lineNumber":52,"author":{"gitId":"noelmathewisaac"},"content":"                System.out.println(e.getMessage());"},{"lineNumber":53,"author":{"gitId":"noelmathewisaac"},"content":"            }"},{"lineNumber":54,"author":{"gitId":"noelmathewisaac"},"content":""},{"lineNumber":55,"author":{"gitId":"noelmathewisaac"},"content":"        }"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":57,"author":{"gitId":"-"},"content":"}"}],"authorContributionMap":{"-":4,"noelmathewisaac":53}},{"path":"src/main/java/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"noelmathewisaac"},"content":"/**"},{"lineNumber":2,"author":{"gitId":"noelmathewisaac"},"content":" * Class to handle Exceptions specific to Duke"},{"lineNumber":3,"author":{"gitId":"noelmathewisaac"},"content":" */"},{"lineNumber":4,"author":{"gitId":"noelmathewisaac"},"content":"public class DukeException extends Exception {"},{"lineNumber":5,"author":{"gitId":"noelmathewisaac"},"content":""},{"lineNumber":6,"author":{"gitId":"noelmathewisaac"},"content":"    /**"},{"lineNumber":7,"author":{"gitId":"noelmathewisaac"},"content":"     * Creates an DukeException instance."},{"lineNumber":8,"author":{"gitId":"noelmathewisaac"},"content":"     *"},{"lineNumber":9,"author":{"gitId":"noelmathewisaac"},"content":"     * @param errorMessage String describing the error"},{"lineNumber":10,"author":{"gitId":"noelmathewisaac"},"content":"     */"},{"lineNumber":11,"author":{"gitId":"noelmathewisaac"},"content":"    public DukeException(String errorMessage) {"},{"lineNumber":12,"author":{"gitId":"noelmathewisaac"},"content":"        super(errorMessage);"},{"lineNumber":13,"author":{"gitId":"noelmathewisaac"},"content":"    }"},{"lineNumber":14,"author":{"gitId":"noelmathewisaac"},"content":"}"}],"authorContributionMap":{"noelmathewisaac":14}},{"path":"src/main/java/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"noelmathewisaac"},"content":"import java.time.LocalDate;"},{"lineNumber":2,"author":{"gitId":"noelmathewisaac"},"content":"import java.time.format.DateTimeFormatter;"},{"lineNumber":3,"author":{"gitId":"noelmathewisaac"},"content":""},{"lineNumber":4,"author":{"gitId":"noelmathewisaac"},"content":"/**"},{"lineNumber":5,"author":{"gitId":"noelmathewisaac"},"content":" * Represents an Event task that start at a specific time and ends at a specific time."},{"lineNumber":6,"author":{"gitId":"noelmathewisaac"},"content":" */"},{"lineNumber":7,"author":{"gitId":"noelmathewisaac"},"content":"public class Event extends Task {"},{"lineNumber":8,"author":{"gitId":"noelmathewisaac"},"content":""},{"lineNumber":9,"author":{"gitId":"noelmathewisaac"},"content":"    public LocalDate at;"},{"lineNumber":10,"author":{"gitId":"noelmathewisaac"},"content":""},{"lineNumber":11,"author":{"gitId":"noelmathewisaac"},"content":"    /**"},{"lineNumber":12,"author":{"gitId":"noelmathewisaac"},"content":"     * Creates an event instance."},{"lineNumber":13,"author":{"gitId":"noelmathewisaac"},"content":"     *"},{"lineNumber":14,"author":{"gitId":"noelmathewisaac"},"content":"     * @param description String describing the event"},{"lineNumber":15,"author":{"gitId":"noelmathewisaac"},"content":"     * @param at          String containing the event time"},{"lineNumber":16,"author":{"gitId":"noelmathewisaac"},"content":"     */"},{"lineNumber":17,"author":{"gitId":"noelmathewisaac"},"content":"    public Event(String description, LocalDate at) {"},{"lineNumber":18,"author":{"gitId":"noelmathewisaac"},"content":"        super(description);"},{"lineNumber":19,"author":{"gitId":"noelmathewisaac"},"content":"        this.at \u003d at;"},{"lineNumber":20,"author":{"gitId":"noelmathewisaac"},"content":"    }"},{"lineNumber":21,"author":{"gitId":"noelmathewisaac"},"content":""},{"lineNumber":22,"author":{"gitId":"noelmathewisaac"},"content":"    /**"},{"lineNumber":23,"author":{"gitId":"noelmathewisaac"},"content":"     * Returns a String which gives information about the event."},{"lineNumber":24,"author":{"gitId":"noelmathewisaac"},"content":"     *"},{"lineNumber":25,"author":{"gitId":"noelmathewisaac"},"content":"     * @return A String containing information about the event."},{"lineNumber":26,"author":{"gitId":"noelmathewisaac"},"content":"     */"},{"lineNumber":27,"author":{"gitId":"noelmathewisaac"},"content":"    @Override"},{"lineNumber":28,"author":{"gitId":"noelmathewisaac"},"content":"    public String toString() {"},{"lineNumber":29,"author":{"gitId":"noelmathewisaac"},"content":"        return \"[E]\" + super.toString() + \" (at: \" +"},{"lineNumber":30,"author":{"gitId":"noelmathewisaac"},"content":"                this.at.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\")) + \")\";"},{"lineNumber":31,"author":{"gitId":"noelmathewisaac"},"content":"    }"},{"lineNumber":32,"author":{"gitId":"noelmathewisaac"},"content":""},{"lineNumber":33,"author":{"gitId":"noelmathewisaac"},"content":"    /**"},{"lineNumber":34,"author":{"gitId":"noelmathewisaac"},"content":"     * Returns a String which gives information about the event in the"},{"lineNumber":35,"author":{"gitId":"noelmathewisaac"},"content":"     * format to be stored in a file."},{"lineNumber":36,"author":{"gitId":"noelmathewisaac"},"content":"     *"},{"lineNumber":37,"author":{"gitId":"noelmathewisaac"},"content":"     * @return A String containing information about the event."},{"lineNumber":38,"author":{"gitId":"noelmathewisaac"},"content":"     */"},{"lineNumber":39,"author":{"gitId":"noelmathewisaac"},"content":"    @Override"},{"lineNumber":40,"author":{"gitId":"noelmathewisaac"},"content":"    public String fileString() {"},{"lineNumber":41,"author":{"gitId":"noelmathewisaac"},"content":"        int statusNum \u003d this.isDone ? 1 : 0;"},{"lineNumber":42,"author":{"gitId":"noelmathewisaac"},"content":"        return \"E | \" + statusNum + \" | \" + this.description + \" | \" + this.at;"},{"lineNumber":43,"author":{"gitId":"noelmathewisaac"},"content":"    }"},{"lineNumber":44,"author":{"gitId":"noelmathewisaac"},"content":"}"}],"authorContributionMap":{"noelmathewisaac":44}},{"path":"src/main/java/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"noelmathewisaac"},"content":"import java.time.LocalDate;"},{"lineNumber":2,"author":{"gitId":"noelmathewisaac"},"content":""},{"lineNumber":3,"author":{"gitId":"noelmathewisaac"},"content":"/**"},{"lineNumber":4,"author":{"gitId":"noelmathewisaac"},"content":" * Represents a Parser which deals with making sense of user commands"},{"lineNumber":5,"author":{"gitId":"noelmathewisaac"},"content":" */"},{"lineNumber":6,"author":{"gitId":"noelmathewisaac"},"content":"public class Parser {"},{"lineNumber":7,"author":{"gitId":"noelmathewisaac"},"content":"    /**"},{"lineNumber":8,"author":{"gitId":"noelmathewisaac"},"content":"     * Extracts information from the user input and performs the appropriate actions"},{"lineNumber":9,"author":{"gitId":"noelmathewisaac"},"content":"     *"},{"lineNumber":10,"author":{"gitId":"noelmathewisaac"},"content":"     * @param input   String representing input entered by user"},{"lineNumber":11,"author":{"gitId":"noelmathewisaac"},"content":"     * @param tasks   Class containing the list of tasks being tracked"},{"lineNumber":12,"author":{"gitId":"noelmathewisaac"},"content":"     * @param storage Class dealing with loading tasks from the file and saving tasks in the file"},{"lineNumber":13,"author":{"gitId":"noelmathewisaac"},"content":"     */"},{"lineNumber":14,"author":{"gitId":"noelmathewisaac"},"content":"    public static void parseInput(String input, TaskList tasks, Storage storage) {"},{"lineNumber":15,"author":{"gitId":"noelmathewisaac"},"content":"        try {"},{"lineNumber":16,"author":{"gitId":"noelmathewisaac"},"content":"            if (input.equals(\"list\")) {"},{"lineNumber":17,"author":{"gitId":"noelmathewisaac"},"content":"                tasks.listTasks();"},{"lineNumber":18,"author":{"gitId":"noelmathewisaac"},"content":"            } else if (input.startsWith(\"done\")) {"},{"lineNumber":19,"author":{"gitId":"noelmathewisaac"},"content":"                int index \u003d Integer.parseInt(input.replaceAll(\"[^-0-9]\", \"\"));"},{"lineNumber":20,"author":{"gitId":"noelmathewisaac"},"content":"                if (index \u003e tasks.size() || index \u003c\u003d 0) {"},{"lineNumber":21,"author":{"gitId":"noelmathewisaac"},"content":"                    throw new DukeException(\"The list item number provided is invalid\");"},{"lineNumber":22,"author":{"gitId":"noelmathewisaac"},"content":"                }"},{"lineNumber":23,"author":{"gitId":"noelmathewisaac"},"content":"                tasks.markAsDone(index - 1);"},{"lineNumber":24,"author":{"gitId":"noelmathewisaac"},"content":"                storage.writeTasksToFile(tasks.getTaskList());"},{"lineNumber":25,"author":{"gitId":"noelmathewisaac"},"content":"            } else if (input.startsWith(\"todo\")) {"},{"lineNumber":26,"author":{"gitId":"noelmathewisaac"},"content":"                String description \u003d input.replace(\"todo\", \"\");"},{"lineNumber":27,"author":{"gitId":"noelmathewisaac"},"content":"                ToDo todo \u003d new ToDo(description);"},{"lineNumber":28,"author":{"gitId":"noelmathewisaac"},"content":"                if (description.strip().equals(\"\")) {"},{"lineNumber":29,"author":{"gitId":"noelmathewisaac"},"content":"                    throw new DukeException(\"todo description cannot be empty\");"},{"lineNumber":30,"author":{"gitId":"noelmathewisaac"},"content":"                }"},{"lineNumber":31,"author":{"gitId":"noelmathewisaac"},"content":"                tasks.addTask(todo);"},{"lineNumber":32,"author":{"gitId":"noelmathewisaac"},"content":"                tasks.printAddedTask(todo);"},{"lineNumber":33,"author":{"gitId":"noelmathewisaac"},"content":"                storage.writeTasksToFile(tasks.getTaskList());"},{"lineNumber":34,"author":{"gitId":"noelmathewisaac"},"content":"            } else if (input.startsWith(\"deadline\")) {"},{"lineNumber":35,"author":{"gitId":"noelmathewisaac"},"content":"                if (input.strip().equals(\"deadline\")) {"},{"lineNumber":36,"author":{"gitId":"noelmathewisaac"},"content":"                    throw new DukeException(\"deadline description cannot be empty\");"},{"lineNumber":37,"author":{"gitId":"noelmathewisaac"},"content":"                }"},{"lineNumber":38,"author":{"gitId":"noelmathewisaac"},"content":"                if (!input.contains(\"/by\")) {"},{"lineNumber":39,"author":{"gitId":"noelmathewisaac"},"content":"                    throw new DukeException(\"Wrong command format: Missing `/by`\");"},{"lineNumber":40,"author":{"gitId":"noelmathewisaac"},"content":"                }"},{"lineNumber":41,"author":{"gitId":"noelmathewisaac"},"content":"                if (input.split(\"/by\").length \u003c 2) {"},{"lineNumber":42,"author":{"gitId":"noelmathewisaac"},"content":"                    throw new DukeException(\"deadline date/time cannot be empty\");"},{"lineNumber":43,"author":{"gitId":"noelmathewisaac"},"content":"                }"},{"lineNumber":44,"author":{"gitId":"noelmathewisaac"},"content":"                String description \u003d input.split(\"/by\", 2)[0].replace(\"deadline\", \"\");"},{"lineNumber":45,"author":{"gitId":"noelmathewisaac"},"content":"                LocalDate date \u003d LocalDate.parse(input.split(\"/by\", 2)[1].strip());"},{"lineNumber":46,"author":{"gitId":"noelmathewisaac"},"content":"                Deadline deadline \u003d new Deadline(description, date);"},{"lineNumber":47,"author":{"gitId":"noelmathewisaac"},"content":"                tasks.addTask(deadline);"},{"lineNumber":48,"author":{"gitId":"noelmathewisaac"},"content":"                tasks.printAddedTask(deadline);"},{"lineNumber":49,"author":{"gitId":"noelmathewisaac"},"content":"                storage.writeTasksToFile(tasks.getTaskList());"},{"lineNumber":50,"author":{"gitId":"noelmathewisaac"},"content":"            } else if (input.startsWith(\"event\")) {"},{"lineNumber":51,"author":{"gitId":"noelmathewisaac"},"content":""},{"lineNumber":52,"author":{"gitId":"noelmathewisaac"},"content":"                if (input.strip().equals(\"event\")) {"},{"lineNumber":53,"author":{"gitId":"noelmathewisaac"},"content":"                    throw new DukeException(\"event description cannot be empty\");"},{"lineNumber":54,"author":{"gitId":"noelmathewisaac"},"content":"                }"},{"lineNumber":55,"author":{"gitId":"noelmathewisaac"},"content":"                if (!input.contains(\"/at\")) {"},{"lineNumber":56,"author":{"gitId":"noelmathewisaac"},"content":"                    throw new DukeException(\"Wrong command format: Missing `/at`\");"},{"lineNumber":57,"author":{"gitId":"noelmathewisaac"},"content":"                }"},{"lineNumber":58,"author":{"gitId":"noelmathewisaac"},"content":"                if (input.split(\"/at\").length \u003c 2) {"},{"lineNumber":59,"author":{"gitId":"noelmathewisaac"},"content":"                    throw new DukeException(\"event date/time cannot be empty\");"},{"lineNumber":60,"author":{"gitId":"noelmathewisaac"},"content":"                }"},{"lineNumber":61,"author":{"gitId":"noelmathewisaac"},"content":"                String description \u003d input.split(\"/at\", 2)[0].replace(\"event\", \"\");"},{"lineNumber":62,"author":{"gitId":"noelmathewisaac"},"content":"                LocalDate date \u003d LocalDate.parse(input.split(\"/at\", 2)[1].strip());"},{"lineNumber":63,"author":{"gitId":"noelmathewisaac"},"content":""},{"lineNumber":64,"author":{"gitId":"noelmathewisaac"},"content":"                Event event \u003d new Event(description, date);"},{"lineNumber":65,"author":{"gitId":"noelmathewisaac"},"content":"                tasks.addTask(event);"},{"lineNumber":66,"author":{"gitId":"noelmathewisaac"},"content":"                tasks.printAddedTask(event);"},{"lineNumber":67,"author":{"gitId":"noelmathewisaac"},"content":"                storage.writeTasksToFile(tasks.getTaskList());"},{"lineNumber":68,"author":{"gitId":"noelmathewisaac"},"content":""},{"lineNumber":69,"author":{"gitId":"noelmathewisaac"},"content":"            } else if (input.startsWith(\"delete\")) {"},{"lineNumber":70,"author":{"gitId":"noelmathewisaac"},"content":"                int index \u003d Integer.parseInt(input.replaceAll(\"[^-0-9]\", \"\"));"},{"lineNumber":71,"author":{"gitId":"noelmathewisaac"},"content":"                if (index \u003e tasks.size() || index \u003c\u003d 0) {"},{"lineNumber":72,"author":{"gitId":"noelmathewisaac"},"content":"                    throw new DukeException(\"The list item number provided is invalid\");"},{"lineNumber":73,"author":{"gitId":"noelmathewisaac"},"content":"                }"},{"lineNumber":74,"author":{"gitId":"noelmathewisaac"},"content":"                tasks.deleteTask(index - 1);"},{"lineNumber":75,"author":{"gitId":"noelmathewisaac"},"content":"                storage.writeTasksToFile(tasks.getTaskList());"},{"lineNumber":76,"author":{"gitId":"noelmathewisaac"},"content":"            } else if (input.startsWith(\"find\")) {"},{"lineNumber":77,"author":{"gitId":"noelmathewisaac"},"content":"                if (input.split(\" \").length \u003c 2) {"},{"lineNumber":78,"author":{"gitId":"noelmathewisaac"},"content":"                    throw new DukeException(\"Please enter a keyword to search for\");"},{"lineNumber":79,"author":{"gitId":"noelmathewisaac"},"content":"                }"},{"lineNumber":80,"author":{"gitId":"noelmathewisaac"},"content":"                tasks.findTask(input.split(\" \")[1]);"},{"lineNumber":81,"author":{"gitId":"noelmathewisaac"},"content":""},{"lineNumber":82,"author":{"gitId":"noelmathewisaac"},"content":"            } else {"},{"lineNumber":83,"author":{"gitId":"noelmathewisaac"},"content":"                throw new DukeException(\"I\u0027m sorry, but I don\u0027t know what that means :-(\");"},{"lineNumber":84,"author":{"gitId":"noelmathewisaac"},"content":"            }"},{"lineNumber":85,"author":{"gitId":"noelmathewisaac"},"content":"        } catch (Exception e) {"},{"lineNumber":86,"author":{"gitId":"noelmathewisaac"},"content":"            System.out.println(e.getMessage());"},{"lineNumber":87,"author":{"gitId":"noelmathewisaac"},"content":"        }"},{"lineNumber":88,"author":{"gitId":"noelmathewisaac"},"content":""},{"lineNumber":89,"author":{"gitId":"noelmathewisaac"},"content":"    }"},{"lineNumber":90,"author":{"gitId":"noelmathewisaac"},"content":"}"}],"authorContributionMap":{"noelmathewisaac":90}},{"path":"src/main/java/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"noelmathewisaac"},"content":"import java.io.File;"},{"lineNumber":2,"author":{"gitId":"noelmathewisaac"},"content":"import java.io.FileNotFoundException;"},{"lineNumber":3,"author":{"gitId":"noelmathewisaac"},"content":"import java.io.FileWriter;"},{"lineNumber":4,"author":{"gitId":"noelmathewisaac"},"content":"import java.io.IOException;"},{"lineNumber":5,"author":{"gitId":"noelmathewisaac"},"content":"import java.time.LocalDate;"},{"lineNumber":6,"author":{"gitId":"noelmathewisaac"},"content":"import java.util.ArrayList;"},{"lineNumber":7,"author":{"gitId":"noelmathewisaac"},"content":"import java.util.Scanner;"},{"lineNumber":8,"author":{"gitId":"noelmathewisaac"},"content":""},{"lineNumber":9,"author":{"gitId":"noelmathewisaac"},"content":""},{"lineNumber":10,"author":{"gitId":"noelmathewisaac"},"content":"/**"},{"lineNumber":11,"author":{"gitId":"noelmathewisaac"},"content":" * Class which deals with loading tasks from the file and saving tasks in the file"},{"lineNumber":12,"author":{"gitId":"noelmathewisaac"},"content":" */"},{"lineNumber":13,"author":{"gitId":"noelmathewisaac"},"content":"public class Storage {"},{"lineNumber":14,"author":{"gitId":"noelmathewisaac"},"content":""},{"lineNumber":15,"author":{"gitId":"noelmathewisaac"},"content":"    public String filePath;"},{"lineNumber":16,"author":{"gitId":"noelmathewisaac"},"content":""},{"lineNumber":17,"author":{"gitId":"noelmathewisaac"},"content":"    public Storage(String filePath) {"},{"lineNumber":18,"author":{"gitId":"noelmathewisaac"},"content":"        this.filePath \u003d filePath;"},{"lineNumber":19,"author":{"gitId":"noelmathewisaac"},"content":"    }"},{"lineNumber":20,"author":{"gitId":"noelmathewisaac"},"content":""},{"lineNumber":21,"author":{"gitId":"noelmathewisaac"},"content":"    /**"},{"lineNumber":22,"author":{"gitId":"noelmathewisaac"},"content":"     * Reads tasks from a file."},{"lineNumber":23,"author":{"gitId":"noelmathewisaac"},"content":"     *"},{"lineNumber":24,"author":{"gitId":"noelmathewisaac"},"content":"     * @return An ArrayList\u003cTask\u003e containing the tasks read from the file."},{"lineNumber":25,"author":{"gitId":"noelmathewisaac"},"content":"     */"},{"lineNumber":26,"author":{"gitId":"noelmathewisaac"},"content":"    public ArrayList\u003cTask\u003e readTasksFromFile() throws FileNotFoundException {"},{"lineNumber":27,"author":{"gitId":"noelmathewisaac"},"content":"        File f \u003d new File(this.filePath); // create a File for the given file path"},{"lineNumber":28,"author":{"gitId":"noelmathewisaac"},"content":"        Scanner s \u003d new Scanner(f); // create a Scanner using the File as the source"},{"lineNumber":29,"author":{"gitId":"noelmathewisaac"},"content":"        ArrayList\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();"},{"lineNumber":30,"author":{"gitId":"noelmathewisaac"},"content":"        while (s.hasNext()) {"},{"lineNumber":31,"author":{"gitId":"noelmathewisaac"},"content":"            String line \u003d s.nextLine();"},{"lineNumber":32,"author":{"gitId":"noelmathewisaac"},"content":"            String[] elements \u003d line.replace(\" \", \"\").split(\"\\\\|\", -2);"},{"lineNumber":33,"author":{"gitId":"noelmathewisaac"},"content":"            if (elements[0].equals(\"D\")) {"},{"lineNumber":34,"author":{"gitId":"noelmathewisaac"},"content":"                boolean isDone \u003d convertToBool(elements[1]);"},{"lineNumber":35,"author":{"gitId":"noelmathewisaac"},"content":"                String description \u003d elements[2];"},{"lineNumber":36,"author":{"gitId":"noelmathewisaac"},"content":"                LocalDate by \u003d LocalDate.parse(elements[3]);"},{"lineNumber":37,"author":{"gitId":"noelmathewisaac"},"content":"                Task task \u003d new Deadline(description, by);"},{"lineNumber":38,"author":{"gitId":"noelmathewisaac"},"content":"                if (isDone) {"},{"lineNumber":39,"author":{"gitId":"noelmathewisaac"},"content":"                    task.markAsDone();"},{"lineNumber":40,"author":{"gitId":"noelmathewisaac"},"content":"                }"},{"lineNumber":41,"author":{"gitId":"noelmathewisaac"},"content":"                tasks.add(task);"},{"lineNumber":42,"author":{"gitId":"noelmathewisaac"},"content":"            } else if (elements[0].equals(\"E\")) {"},{"lineNumber":43,"author":{"gitId":"noelmathewisaac"},"content":"                boolean isDone \u003d convertToBool(elements[1]);"},{"lineNumber":44,"author":{"gitId":"noelmathewisaac"},"content":"                String description \u003d elements[2];"},{"lineNumber":45,"author":{"gitId":"noelmathewisaac"},"content":"                LocalDate at \u003d LocalDate.parse(elements[3]);"},{"lineNumber":46,"author":{"gitId":"noelmathewisaac"},"content":"                Task task \u003d new Event(description, at);"},{"lineNumber":47,"author":{"gitId":"noelmathewisaac"},"content":"                if (isDone) {"},{"lineNumber":48,"author":{"gitId":"noelmathewisaac"},"content":"                    task.markAsDone();"},{"lineNumber":49,"author":{"gitId":"noelmathewisaac"},"content":"                }"},{"lineNumber":50,"author":{"gitId":"noelmathewisaac"},"content":"                tasks.add(task);"},{"lineNumber":51,"author":{"gitId":"noelmathewisaac"},"content":"            } else if (elements[0].equals(\"T\")) {"},{"lineNumber":52,"author":{"gitId":"noelmathewisaac"},"content":"                boolean isDone \u003d convertToBool(elements[1]);"},{"lineNumber":53,"author":{"gitId":"noelmathewisaac"},"content":"                String description \u003d elements[2];"},{"lineNumber":54,"author":{"gitId":"noelmathewisaac"},"content":"                Task task \u003d new ToDo(description);"},{"lineNumber":55,"author":{"gitId":"noelmathewisaac"},"content":"                if (isDone) {"},{"lineNumber":56,"author":{"gitId":"noelmathewisaac"},"content":"                    task.markAsDone();"},{"lineNumber":57,"author":{"gitId":"noelmathewisaac"},"content":"                }"},{"lineNumber":58,"author":{"gitId":"noelmathewisaac"},"content":"                tasks.add(task);"},{"lineNumber":59,"author":{"gitId":"noelmathewisaac"},"content":"            }"},{"lineNumber":60,"author":{"gitId":"noelmathewisaac"},"content":""},{"lineNumber":61,"author":{"gitId":"noelmathewisaac"},"content":""},{"lineNumber":62,"author":{"gitId":"noelmathewisaac"},"content":"        }"},{"lineNumber":63,"author":{"gitId":"noelmathewisaac"},"content":"        return tasks;"},{"lineNumber":64,"author":{"gitId":"noelmathewisaac"},"content":"    }"},{"lineNumber":65,"author":{"gitId":"noelmathewisaac"},"content":""},{"lineNumber":66,"author":{"gitId":"noelmathewisaac"},"content":"    /**"},{"lineNumber":67,"author":{"gitId":"noelmathewisaac"},"content":"     * Writes tasks to a file."},{"lineNumber":68,"author":{"gitId":"noelmathewisaac"},"content":"     *"},{"lineNumber":69,"author":{"gitId":"noelmathewisaac"},"content":"     * @param tasks An ArrayList\u003cTask\u003e containing the tasks to be written to the file."},{"lineNumber":70,"author":{"gitId":"noelmathewisaac"},"content":"     */"},{"lineNumber":71,"author":{"gitId":"noelmathewisaac"},"content":"    public void writeTasksToFile(ArrayList\u003cTask\u003e tasks) throws IOException {"},{"lineNumber":72,"author":{"gitId":"noelmathewisaac"},"content":""},{"lineNumber":73,"author":{"gitId":"noelmathewisaac"},"content":"        File dir \u003d new File(\"data\");"},{"lineNumber":74,"author":{"gitId":"noelmathewisaac"},"content":"        if (!dir.exists()) {"},{"lineNumber":75,"author":{"gitId":"noelmathewisaac"},"content":"            dir.mkdirs();"},{"lineNumber":76,"author":{"gitId":"noelmathewisaac"},"content":"        }"},{"lineNumber":77,"author":{"gitId":"noelmathewisaac"},"content":"        FileWriter fw \u003d new FileWriter(this.filePath);"},{"lineNumber":78,"author":{"gitId":"noelmathewisaac"},"content":""},{"lineNumber":79,"author":{"gitId":"noelmathewisaac"},"content":"        String fileString \u003d \"\";"},{"lineNumber":80,"author":{"gitId":"noelmathewisaac"},"content":""},{"lineNumber":81,"author":{"gitId":"noelmathewisaac"},"content":"        for (Task task : tasks) {"},{"lineNumber":82,"author":{"gitId":"noelmathewisaac"},"content":"            fileString +\u003d task.fileString() + \"\\n\";"},{"lineNumber":83,"author":{"gitId":"noelmathewisaac"},"content":"        }"},{"lineNumber":84,"author":{"gitId":"noelmathewisaac"},"content":"        fw.write(fileString);"},{"lineNumber":85,"author":{"gitId":"noelmathewisaac"},"content":"        fw.close();"},{"lineNumber":86,"author":{"gitId":"noelmathewisaac"},"content":"    }"},{"lineNumber":87,"author":{"gitId":"noelmathewisaac"},"content":""},{"lineNumber":88,"author":{"gitId":"noelmathewisaac"},"content":"    public Boolean convertToBool(String numString) {"},{"lineNumber":89,"author":{"gitId":"noelmathewisaac"},"content":"        if (numString.equals(\"1\")) {"},{"lineNumber":90,"author":{"gitId":"noelmathewisaac"},"content":"            return true;"},{"lineNumber":91,"author":{"gitId":"noelmathewisaac"},"content":"        } else {"},{"lineNumber":92,"author":{"gitId":"noelmathewisaac"},"content":"            return false;"},{"lineNumber":93,"author":{"gitId":"noelmathewisaac"},"content":"        }"},{"lineNumber":94,"author":{"gitId":"noelmathewisaac"},"content":""},{"lineNumber":95,"author":{"gitId":"noelmathewisaac"},"content":"    }"},{"lineNumber":96,"author":{"gitId":"noelmathewisaac"},"content":""},{"lineNumber":97,"author":{"gitId":"noelmathewisaac"},"content":"}"}],"authorContributionMap":{"noelmathewisaac":97}},{"path":"src/main/java/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"noelmathewisaac"},"content":"/**"},{"lineNumber":2,"author":{"gitId":"noelmathewisaac"},"content":" * Represents a Task consisting of a description and completion status."},{"lineNumber":3,"author":{"gitId":"noelmathewisaac"},"content":" */"},{"lineNumber":4,"author":{"gitId":"noelmathewisaac"},"content":"public class Task {"},{"lineNumber":5,"author":{"gitId":"noelmathewisaac"},"content":"    public String description;"},{"lineNumber":6,"author":{"gitId":"noelmathewisaac"},"content":"    public boolean isDone;"},{"lineNumber":7,"author":{"gitId":"noelmathewisaac"},"content":""},{"lineNumber":8,"author":{"gitId":"noelmathewisaac"},"content":"    /**"},{"lineNumber":9,"author":{"gitId":"noelmathewisaac"},"content":"     * Creates a task instance."},{"lineNumber":10,"author":{"gitId":"noelmathewisaac"},"content":"     *"},{"lineNumber":11,"author":{"gitId":"noelmathewisaac"},"content":"     * @param description String describing the task"},{"lineNumber":12,"author":{"gitId":"noelmathewisaac"},"content":"     */"},{"lineNumber":13,"author":{"gitId":"noelmathewisaac"},"content":"    public Task(String description) {"},{"lineNumber":14,"author":{"gitId":"noelmathewisaac"},"content":"        this.description \u003d description;"},{"lineNumber":15,"author":{"gitId":"noelmathewisaac"},"content":"        this.isDone \u003d false;"},{"lineNumber":16,"author":{"gitId":"noelmathewisaac"},"content":"    }"},{"lineNumber":17,"author":{"gitId":"noelmathewisaac"},"content":""},{"lineNumber":18,"author":{"gitId":"noelmathewisaac"},"content":"    /**"},{"lineNumber":19,"author":{"gitId":"noelmathewisaac"},"content":"     * Retrieves the status symbol of the task depending on the completion status"},{"lineNumber":20,"author":{"gitId":"noelmathewisaac"},"content":"     *"},{"lineNumber":21,"author":{"gitId":"noelmathewisaac"},"content":"     * @return String with ths status character"},{"lineNumber":22,"author":{"gitId":"noelmathewisaac"},"content":"     */"},{"lineNumber":23,"author":{"gitId":"noelmathewisaac"},"content":"    public String getStatusIcon() {"},{"lineNumber":24,"author":{"gitId":"noelmathewisaac"},"content":"        return (this.isDone ? \"X\" : \" \"); //return tick or X symbols"},{"lineNumber":25,"author":{"gitId":"noelmathewisaac"},"content":"    }"},{"lineNumber":26,"author":{"gitId":"noelmathewisaac"},"content":""},{"lineNumber":27,"author":{"gitId":"noelmathewisaac"},"content":"    /**"},{"lineNumber":28,"author":{"gitId":"noelmathewisaac"},"content":"     * Retrieves the task description."},{"lineNumber":29,"author":{"gitId":"noelmathewisaac"},"content":"     *"},{"lineNumber":30,"author":{"gitId":"noelmathewisaac"},"content":"     * @return String with ths task description."},{"lineNumber":31,"author":{"gitId":"noelmathewisaac"},"content":"     */"},{"lineNumber":32,"author":{"gitId":"noelmathewisaac"},"content":"    public String getDescription() {"},{"lineNumber":33,"author":{"gitId":"noelmathewisaac"},"content":"        return this.description;"},{"lineNumber":34,"author":{"gitId":"noelmathewisaac"},"content":"    }"},{"lineNumber":35,"author":{"gitId":"noelmathewisaac"},"content":""},{"lineNumber":36,"author":{"gitId":"noelmathewisaac"},"content":"    /**"},{"lineNumber":37,"author":{"gitId":"noelmathewisaac"},"content":"     * Marks task as done"},{"lineNumber":38,"author":{"gitId":"noelmathewisaac"},"content":"     */"},{"lineNumber":39,"author":{"gitId":"noelmathewisaac"},"content":"    public void markAsDone() {"},{"lineNumber":40,"author":{"gitId":"noelmathewisaac"},"content":"        this.isDone \u003d true;"},{"lineNumber":41,"author":{"gitId":"noelmathewisaac"},"content":"    }"},{"lineNumber":42,"author":{"gitId":"noelmathewisaac"},"content":""},{"lineNumber":43,"author":{"gitId":"noelmathewisaac"},"content":"    /**"},{"lineNumber":44,"author":{"gitId":"noelmathewisaac"},"content":"     * Returns a String which gives information about the task."},{"lineNumber":45,"author":{"gitId":"noelmathewisaac"},"content":"     *"},{"lineNumber":46,"author":{"gitId":"noelmathewisaac"},"content":"     * @return A String containing information about the task."},{"lineNumber":47,"author":{"gitId":"noelmathewisaac"},"content":"     */"},{"lineNumber":48,"author":{"gitId":"noelmathewisaac"},"content":"    @Override"},{"lineNumber":49,"author":{"gitId":"noelmathewisaac"},"content":"    public String toString() {"},{"lineNumber":50,"author":{"gitId":"noelmathewisaac"},"content":"        return \"[\" + this.getStatusIcon() + \"] \" + this.description;"},{"lineNumber":51,"author":{"gitId":"noelmathewisaac"},"content":"    }"},{"lineNumber":52,"author":{"gitId":"noelmathewisaac"},"content":""},{"lineNumber":53,"author":{"gitId":"noelmathewisaac"},"content":"    /**"},{"lineNumber":54,"author":{"gitId":"noelmathewisaac"},"content":"     * Returns a String which gives information about the task in the"},{"lineNumber":55,"author":{"gitId":"noelmathewisaac"},"content":"     * format to be stored in a file."},{"lineNumber":56,"author":{"gitId":"noelmathewisaac"},"content":"     *"},{"lineNumber":57,"author":{"gitId":"noelmathewisaac"},"content":"     * @return A String containing information about the task."},{"lineNumber":58,"author":{"gitId":"noelmathewisaac"},"content":"     */"},{"lineNumber":59,"author":{"gitId":"noelmathewisaac"},"content":"    public String fileString() {"},{"lineNumber":60,"author":{"gitId":"noelmathewisaac"},"content":"        return this.description;"},{"lineNumber":61,"author":{"gitId":"noelmathewisaac"},"content":"    }"},{"lineNumber":62,"author":{"gitId":"noelmathewisaac"},"content":"}"}],"authorContributionMap":{"noelmathewisaac":62}},{"path":"src/main/java/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"noelmathewisaac"},"content":"import java.util.ArrayList;"},{"lineNumber":2,"author":{"gitId":"noelmathewisaac"},"content":""},{"lineNumber":3,"author":{"gitId":"noelmathewisaac"},"content":"/**"},{"lineNumber":4,"author":{"gitId":"noelmathewisaac"},"content":" * Class containing the task list along with its associated functions."},{"lineNumber":5,"author":{"gitId":"noelmathewisaac"},"content":" */"},{"lineNumber":6,"author":{"gitId":"noelmathewisaac"},"content":"class TaskList {"},{"lineNumber":7,"author":{"gitId":"noelmathewisaac"},"content":""},{"lineNumber":8,"author":{"gitId":"noelmathewisaac"},"content":"    ArrayList\u003cTask\u003e tasks;"},{"lineNumber":9,"author":{"gitId":"noelmathewisaac"},"content":"    Ui ui \u003d new Ui();"},{"lineNumber":10,"author":{"gitId":"noelmathewisaac"},"content":""},{"lineNumber":11,"author":{"gitId":"noelmathewisaac"},"content":"    public TaskList(ArrayList\u003cTask\u003e tasks) {"},{"lineNumber":12,"author":{"gitId":"noelmathewisaac"},"content":"        this.tasks \u003d tasks;"},{"lineNumber":13,"author":{"gitId":"noelmathewisaac"},"content":"    }"},{"lineNumber":14,"author":{"gitId":"noelmathewisaac"},"content":""},{"lineNumber":15,"author":{"gitId":"noelmathewisaac"},"content":"    public TaskList() {"},{"lineNumber":16,"author":{"gitId":"noelmathewisaac"},"content":"        this.tasks \u003d new ArrayList\u003c\u003e();"},{"lineNumber":17,"author":{"gitId":"noelmathewisaac"},"content":"    }"},{"lineNumber":18,"author":{"gitId":"noelmathewisaac"},"content":""},{"lineNumber":19,"author":{"gitId":"noelmathewisaac"},"content":"    public ArrayList\u003cTask\u003e getTaskList() {"},{"lineNumber":20,"author":{"gitId":"noelmathewisaac"},"content":"        return this.tasks;"},{"lineNumber":21,"author":{"gitId":"noelmathewisaac"},"content":"    }"},{"lineNumber":22,"author":{"gitId":"noelmathewisaac"},"content":""},{"lineNumber":23,"author":{"gitId":"noelmathewisaac"},"content":"    /**"},{"lineNumber":24,"author":{"gitId":"noelmathewisaac"},"content":"     * Get the length of the tasks list."},{"lineNumber":25,"author":{"gitId":"noelmathewisaac"},"content":"     *"},{"lineNumber":26,"author":{"gitId":"noelmathewisaac"},"content":"     * @return An Integer representing the length of the tasks list."},{"lineNumber":27,"author":{"gitId":"noelmathewisaac"},"content":"     */"},{"lineNumber":28,"author":{"gitId":"noelmathewisaac"},"content":"    public int size() {"},{"lineNumber":29,"author":{"gitId":"noelmathewisaac"},"content":"        return this.tasks.size();"},{"lineNumber":30,"author":{"gitId":"noelmathewisaac"},"content":"    }"},{"lineNumber":31,"author":{"gitId":"noelmathewisaac"},"content":""},{"lineNumber":32,"author":{"gitId":"noelmathewisaac"},"content":"    /**"},{"lineNumber":33,"author":{"gitId":"noelmathewisaac"},"content":"     * Prints all the tasks in the task list."},{"lineNumber":34,"author":{"gitId":"noelmathewisaac"},"content":"     */"},{"lineNumber":35,"author":{"gitId":"noelmathewisaac"},"content":"    public void listTasks() {"},{"lineNumber":36,"author":{"gitId":"noelmathewisaac"},"content":"        System.out.println(this.ui.FORMAT_LINE);"},{"lineNumber":37,"author":{"gitId":"noelmathewisaac"},"content":"        System.out.println(\"You have the following task(s) in your list.\");"},{"lineNumber":38,"author":{"gitId":"noelmathewisaac"},"content":"        for (int i \u003d 0; i \u003c this.tasks.size(); i++) {"},{"lineNumber":39,"author":{"gitId":"noelmathewisaac"},"content":"            Task task \u003d this.tasks.get(i);"},{"lineNumber":40,"author":{"gitId":"noelmathewisaac"},"content":"            System.out.println(i + 1 + \".\" + task.toString());"},{"lineNumber":41,"author":{"gitId":"noelmathewisaac"},"content":""},{"lineNumber":42,"author":{"gitId":"noelmathewisaac"},"content":"        }"},{"lineNumber":43,"author":{"gitId":"noelmathewisaac"},"content":"        System.out.println(this.ui.FORMAT_LINE);"},{"lineNumber":44,"author":{"gitId":"noelmathewisaac"},"content":""},{"lineNumber":45,"author":{"gitId":"noelmathewisaac"},"content":"    }"},{"lineNumber":46,"author":{"gitId":"noelmathewisaac"},"content":""},{"lineNumber":47,"author":{"gitId":"noelmathewisaac"},"content":"    /**"},{"lineNumber":48,"author":{"gitId":"noelmathewisaac"},"content":"     * Adds a task to the task list."},{"lineNumber":49,"author":{"gitId":"noelmathewisaac"},"content":"     *"},{"lineNumber":50,"author":{"gitId":"noelmathewisaac"},"content":"     * @param task An instance of Task representing the newly added task."},{"lineNumber":51,"author":{"gitId":"noelmathewisaac"},"content":"     */"},{"lineNumber":52,"author":{"gitId":"noelmathewisaac"},"content":"    public void addTask(Task task) {"},{"lineNumber":53,"author":{"gitId":"noelmathewisaac"},"content":"        this.tasks.add(task);"},{"lineNumber":54,"author":{"gitId":"noelmathewisaac"},"content":""},{"lineNumber":55,"author":{"gitId":"noelmathewisaac"},"content":"    }"},{"lineNumber":56,"author":{"gitId":"noelmathewisaac"},"content":""},{"lineNumber":57,"author":{"gitId":"noelmathewisaac"},"content":"    /**"},{"lineNumber":58,"author":{"gitId":"noelmathewisaac"},"content":"     * Prints the newly added task details along with the new size of the task list"},{"lineNumber":59,"author":{"gitId":"noelmathewisaac"},"content":"     *"},{"lineNumber":60,"author":{"gitId":"noelmathewisaac"},"content":"     * @param task An instance of Task representing the newly added task"},{"lineNumber":61,"author":{"gitId":"noelmathewisaac"},"content":"     */"},{"lineNumber":62,"author":{"gitId":"noelmathewisaac"},"content":"    public void printAddedTask(Task task) {"},{"lineNumber":63,"author":{"gitId":"noelmathewisaac"},"content":"        System.out.println(this.ui.FORMAT_LINE);"},{"lineNumber":64,"author":{"gitId":"noelmathewisaac"},"content":"        System.out.println(\"Got it. I\u0027ve added this task to your list:\\n\" +"},{"lineNumber":65,"author":{"gitId":"noelmathewisaac"},"content":"                \"   \" + task.toString());"},{"lineNumber":66,"author":{"gitId":"noelmathewisaac"},"content":"        System.out.println(\"Now you have \" + this.tasks.size() + \" task(s) in the list.\");"},{"lineNumber":67,"author":{"gitId":"noelmathewisaac"},"content":"        System.out.println(this.ui.FORMAT_LINE);"},{"lineNumber":68,"author":{"gitId":"noelmathewisaac"},"content":""},{"lineNumber":69,"author":{"gitId":"noelmathewisaac"},"content":""},{"lineNumber":70,"author":{"gitId":"noelmathewisaac"},"content":"    }"},{"lineNumber":71,"author":{"gitId":"noelmathewisaac"},"content":""},{"lineNumber":72,"author":{"gitId":"noelmathewisaac"},"content":"    /**"},{"lineNumber":73,"author":{"gitId":"noelmathewisaac"},"content":"     * Marks the indicated given task as done."},{"lineNumber":74,"author":{"gitId":"noelmathewisaac"},"content":"     *"},{"lineNumber":75,"author":{"gitId":"noelmathewisaac"},"content":"     * @param index An integer representing the index of the task to be marked as done."},{"lineNumber":76,"author":{"gitId":"noelmathewisaac"},"content":"     */"},{"lineNumber":77,"author":{"gitId":"noelmathewisaac"},"content":"    public void markAsDone(int index) {"},{"lineNumber":78,"author":{"gitId":"noelmathewisaac"},"content":"        Task task \u003d this.tasks.get(index);"},{"lineNumber":79,"author":{"gitId":"noelmathewisaac"},"content":"        task.markAsDone();"},{"lineNumber":80,"author":{"gitId":"noelmathewisaac"},"content":"        System.out.println(this.ui.FORMAT_LINE);"},{"lineNumber":81,"author":{"gitId":"noelmathewisaac"},"content":"        System.out.println(\" Good job! I\u0027ve marked this task as done:\\n\" +"},{"lineNumber":82,"author":{"gitId":"noelmathewisaac"},"content":"                \"   \" + task.toString());"},{"lineNumber":83,"author":{"gitId":"noelmathewisaac"},"content":"        System.out.println(this.ui.FORMAT_LINE);"},{"lineNumber":84,"author":{"gitId":"noelmathewisaac"},"content":""},{"lineNumber":85,"author":{"gitId":"noelmathewisaac"},"content":"    }"},{"lineNumber":86,"author":{"gitId":"noelmathewisaac"},"content":""},{"lineNumber":87,"author":{"gitId":"noelmathewisaac"},"content":"    /**"},{"lineNumber":88,"author":{"gitId":"noelmathewisaac"},"content":"     * Deletes the indicated task from the task list."},{"lineNumber":89,"author":{"gitId":"noelmathewisaac"},"content":"     *"},{"lineNumber":90,"author":{"gitId":"noelmathewisaac"},"content":"     * @param index An integer representing the index of the task to be deleted."},{"lineNumber":91,"author":{"gitId":"noelmathewisaac"},"content":"     */"},{"lineNumber":92,"author":{"gitId":"noelmathewisaac"},"content":"    public void deleteTask(int index) {"},{"lineNumber":93,"author":{"gitId":"noelmathewisaac"},"content":"        Task task \u003d this.tasks.get(index);"},{"lineNumber":94,"author":{"gitId":"noelmathewisaac"},"content":"        this.tasks.remove(index);"},{"lineNumber":95,"author":{"gitId":"noelmathewisaac"},"content":"        System.out.println(this.ui.FORMAT_LINE);"},{"lineNumber":96,"author":{"gitId":"noelmathewisaac"},"content":"        System.out.println(\" Noted. I\u0027ve removed this task:\\n\" +"},{"lineNumber":97,"author":{"gitId":"noelmathewisaac"},"content":"                \"   \" + task.toString());"},{"lineNumber":98,"author":{"gitId":"noelmathewisaac"},"content":"        System.out.println(\"Now you have \" + this.tasks.size() + \" task(s) in the list.\");"},{"lineNumber":99,"author":{"gitId":"noelmathewisaac"},"content":"        System.out.println(this.ui.FORMAT_LINE);"},{"lineNumber":100,"author":{"gitId":"noelmathewisaac"},"content":""},{"lineNumber":101,"author":{"gitId":"noelmathewisaac"},"content":"    }"},{"lineNumber":102,"author":{"gitId":"noelmathewisaac"},"content":""},{"lineNumber":103,"author":{"gitId":"noelmathewisaac"},"content":"    /**"},{"lineNumber":104,"author":{"gitId":"noelmathewisaac"},"content":"     * Searches for tasks based on a keyword."},{"lineNumber":105,"author":{"gitId":"noelmathewisaac"},"content":"     *"},{"lineNumber":106,"author":{"gitId":"noelmathewisaac"},"content":"     * @param keyword A String indicating the keyword to search for."},{"lineNumber":107,"author":{"gitId":"noelmathewisaac"},"content":"     */"},{"lineNumber":108,"author":{"gitId":"noelmathewisaac"},"content":"    public void findTask(String keyword) {"},{"lineNumber":109,"author":{"gitId":"noelmathewisaac"},"content":"        ArrayList\u003cTask\u003e filteredTasks \u003d new ArrayList\u003c\u003e();"},{"lineNumber":110,"author":{"gitId":"noelmathewisaac"},"content":"        for (Task task : this.tasks) {"},{"lineNumber":111,"author":{"gitId":"noelmathewisaac"},"content":"            if (task.getDescription().toLowerCase().contains(keyword.toLowerCase())) {"},{"lineNumber":112,"author":{"gitId":"noelmathewisaac"},"content":"                filteredTasks.add(task);"},{"lineNumber":113,"author":{"gitId":"noelmathewisaac"},"content":"            }"},{"lineNumber":114,"author":{"gitId":"noelmathewisaac"},"content":"        }"},{"lineNumber":115,"author":{"gitId":"noelmathewisaac"},"content":"        if (filteredTasks.size() \u003d\u003d 0) {"},{"lineNumber":116,"author":{"gitId":"noelmathewisaac"},"content":"            System.out.println(\"Sorry I could not find any matching tasks in your list.\");"},{"lineNumber":117,"author":{"gitId":"noelmathewisaac"},"content":"        } else {"},{"lineNumber":118,"author":{"gitId":"noelmathewisaac"},"content":"            System.out.println(this.ui.FORMAT_LINE);"},{"lineNumber":119,"author":{"gitId":"noelmathewisaac"},"content":"            System.out.println(\"Here are the matching tasks in your list:\");"},{"lineNumber":120,"author":{"gitId":"noelmathewisaac"},"content":"            for (int i \u003d 0; i \u003c filteredTasks.size(); i++) {"},{"lineNumber":121,"author":{"gitId":"noelmathewisaac"},"content":"                Task task \u003d filteredTasks.get(i);"},{"lineNumber":122,"author":{"gitId":"noelmathewisaac"},"content":"                System.out.println(i + 1 + \".\" + task.toString());"},{"lineNumber":123,"author":{"gitId":"noelmathewisaac"},"content":""},{"lineNumber":124,"author":{"gitId":"noelmathewisaac"},"content":"            }"},{"lineNumber":125,"author":{"gitId":"noelmathewisaac"},"content":"            System.out.println(this.ui.FORMAT_LINE);"},{"lineNumber":126,"author":{"gitId":"noelmathewisaac"},"content":"        }"},{"lineNumber":127,"author":{"gitId":"noelmathewisaac"},"content":"    }"},{"lineNumber":128,"author":{"gitId":"noelmathewisaac"},"content":"}"}],"authorContributionMap":{"noelmathewisaac":128}},{"path":"src/main/java/ToDo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"noelmathewisaac"},"content":"/**"},{"lineNumber":2,"author":{"gitId":"noelmathewisaac"},"content":" * Represents a todo task without any date/time attached to it."},{"lineNumber":3,"author":{"gitId":"noelmathewisaac"},"content":" */"},{"lineNumber":4,"author":{"gitId":"noelmathewisaac"},"content":"public class ToDo extends Task {"},{"lineNumber":5,"author":{"gitId":"noelmathewisaac"},"content":""},{"lineNumber":6,"author":{"gitId":"noelmathewisaac"},"content":"    /**"},{"lineNumber":7,"author":{"gitId":"noelmathewisaac"},"content":"     * Creates an todo instance."},{"lineNumber":8,"author":{"gitId":"noelmathewisaac"},"content":"     *"},{"lineNumber":9,"author":{"gitId":"noelmathewisaac"},"content":"     * @param description String describing the todo."},{"lineNumber":10,"author":{"gitId":"noelmathewisaac"},"content":"     */"},{"lineNumber":11,"author":{"gitId":"noelmathewisaac"},"content":"    public ToDo(String description) {"},{"lineNumber":12,"author":{"gitId":"noelmathewisaac"},"content":"        super(description);"},{"lineNumber":13,"author":{"gitId":"noelmathewisaac"},"content":"    }"},{"lineNumber":14,"author":{"gitId":"noelmathewisaac"},"content":""},{"lineNumber":15,"author":{"gitId":"noelmathewisaac"},"content":"    /**"},{"lineNumber":16,"author":{"gitId":"noelmathewisaac"},"content":"     * Returns a String which gives information about the todo."},{"lineNumber":17,"author":{"gitId":"noelmathewisaac"},"content":"     *"},{"lineNumber":18,"author":{"gitId":"noelmathewisaac"},"content":"     * @return A String containing information about the todo."},{"lineNumber":19,"author":{"gitId":"noelmathewisaac"},"content":"     */"},{"lineNumber":20,"author":{"gitId":"noelmathewisaac"},"content":"    @Override"},{"lineNumber":21,"author":{"gitId":"noelmathewisaac"},"content":"    public String toString() {"},{"lineNumber":22,"author":{"gitId":"noelmathewisaac"},"content":"        return \"[T]\" + super.toString();"},{"lineNumber":23,"author":{"gitId":"noelmathewisaac"},"content":"    }"},{"lineNumber":24,"author":{"gitId":"noelmathewisaac"},"content":""},{"lineNumber":25,"author":{"gitId":"noelmathewisaac"},"content":"    /**"},{"lineNumber":26,"author":{"gitId":"noelmathewisaac"},"content":"     * Returns a String which gives information about the todo in the"},{"lineNumber":27,"author":{"gitId":"noelmathewisaac"},"content":"     * format to be stored in a file."},{"lineNumber":28,"author":{"gitId":"noelmathewisaac"},"content":"     *"},{"lineNumber":29,"author":{"gitId":"noelmathewisaac"},"content":"     * @return A String containing information about the todo."},{"lineNumber":30,"author":{"gitId":"noelmathewisaac"},"content":"     */"},{"lineNumber":31,"author":{"gitId":"noelmathewisaac"},"content":"    @Override"},{"lineNumber":32,"author":{"gitId":"noelmathewisaac"},"content":"    public String fileString() {"},{"lineNumber":33,"author":{"gitId":"noelmathewisaac"},"content":"        int statusNum \u003d this.isDone ? 1 : 0;"},{"lineNumber":34,"author":{"gitId":"noelmathewisaac"},"content":"        return \"T | \" + statusNum + \" | \" + this.description;"},{"lineNumber":35,"author":{"gitId":"noelmathewisaac"},"content":"    }"},{"lineNumber":36,"author":{"gitId":"noelmathewisaac"},"content":"}"}],"authorContributionMap":{"noelmathewisaac":36}},{"path":"src/main/java/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"noelmathewisaac"},"content":"/**"},{"lineNumber":2,"author":{"gitId":"noelmathewisaac"},"content":" * Class which deals with the UI interactions with the user."},{"lineNumber":3,"author":{"gitId":"noelmathewisaac"},"content":" */"},{"lineNumber":4,"author":{"gitId":"noelmathewisaac"},"content":"class Ui {"},{"lineNumber":5,"author":{"gitId":"noelmathewisaac"},"content":"    static final String FORMAT_LINE \u003d \"....................................................\";"},{"lineNumber":6,"author":{"gitId":"noelmathewisaac"},"content":""},{"lineNumber":7,"author":{"gitId":"noelmathewisaac"},"content":"    /**"},{"lineNumber":8,"author":{"gitId":"noelmathewisaac"},"content":"     * Greets the user"},{"lineNumber":9,"author":{"gitId":"noelmathewisaac"},"content":"     */"},{"lineNumber":10,"author":{"gitId":"noelmathewisaac"},"content":"    public void greetUser() {"},{"lineNumber":11,"author":{"gitId":"noelmathewisaac"},"content":"        System.out.println(FORMAT_LINE + \"\\nHey, \" +"},{"lineNumber":12,"author":{"gitId":"noelmathewisaac"},"content":"                \"I am Duke.\\nHow can I help you?\\n\" +"},{"lineNumber":13,"author":{"gitId":"noelmathewisaac"},"content":"                FORMAT_LINE);"},{"lineNumber":14,"author":{"gitId":"noelmathewisaac"},"content":"    }"},{"lineNumber":15,"author":{"gitId":"noelmathewisaac"},"content":""},{"lineNumber":16,"author":{"gitId":"noelmathewisaac"},"content":"    /**"},{"lineNumber":17,"author":{"gitId":"noelmathewisaac"},"content":"     * Bids farewell to the user"},{"lineNumber":18,"author":{"gitId":"noelmathewisaac"},"content":"     */"},{"lineNumber":19,"author":{"gitId":"noelmathewisaac"},"content":"    public void farewellUser() {"},{"lineNumber":20,"author":{"gitId":"noelmathewisaac"},"content":"        System.out.println(FORMAT_LINE +"},{"lineNumber":21,"author":{"gitId":"noelmathewisaac"},"content":"                \"\\nGoodbye and see you soon!\\n\" +"},{"lineNumber":22,"author":{"gitId":"noelmathewisaac"},"content":"                FORMAT_LINE);"},{"lineNumber":23,"author":{"gitId":"noelmathewisaac"},"content":"    }"},{"lineNumber":24,"author":{"gitId":"noelmathewisaac"},"content":""},{"lineNumber":25,"author":{"gitId":"noelmathewisaac"},"content":"    /**"},{"lineNumber":26,"author":{"gitId":"noelmathewisaac"},"content":"     * Echoes the command input by the user for better UI clairty"},{"lineNumber":27,"author":{"gitId":"noelmathewisaac"},"content":"     */"},{"lineNumber":28,"author":{"gitId":"noelmathewisaac"},"content":"    public void echoCommand(String input) {"},{"lineNumber":29,"author":{"gitId":"noelmathewisaac"},"content":"        System.out.println(\"\\n\u003e\u003e\u003e \" + input);"},{"lineNumber":30,"author":{"gitId":"noelmathewisaac"},"content":"    }"},{"lineNumber":31,"author":{"gitId":"noelmathewisaac"},"content":""},{"lineNumber":32,"author":{"gitId":"noelmathewisaac"},"content":"}"}],"authorContributionMap":{"noelmathewisaac":32}},{"path":"src/test/java/DeadlineTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"noelmathewisaac"},"content":"import org.junit.jupiter.api.Test;"},{"lineNumber":2,"author":{"gitId":"noelmathewisaac"},"content":""},{"lineNumber":3,"author":{"gitId":"noelmathewisaac"},"content":"import java.time.LocalDate;"},{"lineNumber":4,"author":{"gitId":"noelmathewisaac"},"content":""},{"lineNumber":5,"author":{"gitId":"noelmathewisaac"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;"},{"lineNumber":6,"author":{"gitId":"noelmathewisaac"},"content":""},{"lineNumber":7,"author":{"gitId":"noelmathewisaac"},"content":"public class DeadlineTest {"},{"lineNumber":8,"author":{"gitId":"noelmathewisaac"},"content":"    @Test"},{"lineNumber":9,"author":{"gitId":"noelmathewisaac"},"content":"    public void correctDescription() {"},{"lineNumber":10,"author":{"gitId":"noelmathewisaac"},"content":"        Deadline deadline \u003d new Deadline(\"task1\", LocalDate.parse(\"2020-02-02\"));"},{"lineNumber":11,"author":{"gitId":"noelmathewisaac"},"content":"        assertEquals(\"task1\", deadline.description);"},{"lineNumber":12,"author":{"gitId":"noelmathewisaac"},"content":"    }"},{"lineNumber":13,"author":{"gitId":"noelmathewisaac"},"content":""},{"lineNumber":14,"author":{"gitId":"noelmathewisaac"},"content":"    @Test"},{"lineNumber":15,"author":{"gitId":"noelmathewisaac"},"content":"    public void correctFileStringConversion() {"},{"lineNumber":16,"author":{"gitId":"noelmathewisaac"},"content":"        Deadline deadline \u003d new Deadline(\"task1\", LocalDate.parse(\"2020-02-02\"));"},{"lineNumber":17,"author":{"gitId":"noelmathewisaac"},"content":"        deadline.markAsDone();"},{"lineNumber":18,"author":{"gitId":"noelmathewisaac"},"content":"        assertEquals(\"D | 1 | task1 | 2020-02-02\", deadline.fileString());"},{"lineNumber":19,"author":{"gitId":"noelmathewisaac"},"content":"    }"},{"lineNumber":20,"author":{"gitId":"noelmathewisaac"},"content":""},{"lineNumber":21,"author":{"gitId":"noelmathewisaac"},"content":"}"}],"authorContributionMap":{"noelmathewisaac":21}},{"path":"src/test/java/EventTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"noelmathewisaac"},"content":"import org.junit.jupiter.api.Test;"},{"lineNumber":2,"author":{"gitId":"noelmathewisaac"},"content":""},{"lineNumber":3,"author":{"gitId":"noelmathewisaac"},"content":"import java.time.LocalDate;"},{"lineNumber":4,"author":{"gitId":"noelmathewisaac"},"content":""},{"lineNumber":5,"author":{"gitId":"noelmathewisaac"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;"},{"lineNumber":6,"author":{"gitId":"noelmathewisaac"},"content":""},{"lineNumber":7,"author":{"gitId":"noelmathewisaac"},"content":"public class EventTest {"},{"lineNumber":8,"author":{"gitId":"noelmathewisaac"},"content":"    @Test"},{"lineNumber":9,"author":{"gitId":"noelmathewisaac"},"content":"    public void correctDescription() {"},{"lineNumber":10,"author":{"gitId":"noelmathewisaac"},"content":"        Event event \u003d new Event(\"task1\", LocalDate.parse(\"2020-02-02\"));"},{"lineNumber":11,"author":{"gitId":"noelmathewisaac"},"content":"        assertEquals(\"task1\", event.description);"},{"lineNumber":12,"author":{"gitId":"noelmathewisaac"},"content":"    }"},{"lineNumber":13,"author":{"gitId":"noelmathewisaac"},"content":""},{"lineNumber":14,"author":{"gitId":"noelmathewisaac"},"content":"    @Test"},{"lineNumber":15,"author":{"gitId":"noelmathewisaac"},"content":"    public void correctFileStringConversion() {"},{"lineNumber":16,"author":{"gitId":"noelmathewisaac"},"content":"        Event event \u003d new Event(\"task1\", LocalDate.parse(\"2020-02-02\"));"},{"lineNumber":17,"author":{"gitId":"noelmathewisaac"},"content":"        assertEquals(\"E | 0 | task1 | 2020-02-02\", event.fileString());"},{"lineNumber":18,"author":{"gitId":"noelmathewisaac"},"content":"    }"},{"lineNumber":19,"author":{"gitId":"noelmathewisaac"},"content":""},{"lineNumber":20,"author":{"gitId":"noelmathewisaac"},"content":"}"}],"authorContributionMap":{"noelmathewisaac":20}},{"path":"text-ui-test/data/duke.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"noelmathewisaac"},"content":"D | 1 | returnbook | 2020-01-02"},{"lineNumber":2,"author":{"gitId":"noelmathewisaac"},"content":"E | 0 | projectmeeting | 2020-03-04"},{"lineNumber":3,"author":{"gitId":"noelmathewisaac"},"content":"T | 1 | borrowbook"},{"lineNumber":4,"author":{"gitId":"noelmathewisaac"},"content":"T | 0 | study"},{"lineNumber":5,"author":{"gitId":"noelmathewisaac"},"content":"T | 0 | exercise"},{"lineNumber":6,"author":{"gitId":"noelmathewisaac"},"content":"D | 0 | returnbook | 2020-01-02"},{"lineNumber":7,"author":{"gitId":"noelmathewisaac"},"content":"E | 0 | projectmeeting | 2020-03-04"},{"lineNumber":8,"author":{"gitId":"noelmathewisaac"},"content":"T | 0 |  borrow book"},{"lineNumber":9,"author":{"gitId":"noelmathewisaac"},"content":"T | 0 |  study"},{"lineNumber":10,"author":{"gitId":"noelmathewisaac"},"content":"T | 0 |  exercise"},{"lineNumber":11,"author":{"gitId":"noelmathewisaac"},"content":"D | 0 |  return book  | 2020-01-02"},{"lineNumber":12,"author":{"gitId":"noelmathewisaac"},"content":"E | 0 |  project meeting  | 2020-03-04"}],"authorContributionMap":{"noelmathewisaac":12}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"noelmathewisaac"},"content":"todo borrow book"},{"lineNumber":2,"author":{"gitId":"noelmathewisaac"},"content":"todo study"},{"lineNumber":3,"author":{"gitId":"noelmathewisaac"},"content":"todo exercise"},{"lineNumber":4,"author":{"gitId":"noelmathewisaac"},"content":"deadline return book /by 2020-01-02"},{"lineNumber":5,"author":{"gitId":"noelmathewisaac"},"content":"event project meeting /at 2020-03-04"},{"lineNumber":6,"author":{"gitId":"noelmathewisaac"},"content":"done 1"},{"lineNumber":7,"author":{"gitId":"noelmathewisaac"},"content":"done 2"},{"lineNumber":8,"author":{"gitId":"noelmathewisaac"},"content":"list"},{"lineNumber":9,"author":{"gitId":"noelmathewisaac"},"content":"done 4"},{"lineNumber":10,"author":{"gitId":"noelmathewisaac"},"content":"done 500"},{"lineNumber":11,"author":{"gitId":"noelmathewisaac"},"content":"todo"},{"lineNumber":12,"author":{"gitId":"noelmathewisaac"},"content":"event No date"},{"lineNumber":13,"author":{"gitId":"noelmathewisaac"},"content":"delete 1"},{"lineNumber":14,"author":{"gitId":"noelmathewisaac"},"content":"list"},{"lineNumber":15,"author":{"gitId":"noelmathewisaac"},"content":"hi"},{"lineNumber":16,"author":{"gitId":"noelmathewisaac"},"content":"bye"}],"authorContributionMap":{"noelmathewisaac":16}}]
