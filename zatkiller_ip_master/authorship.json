[{"path":"src/main/java/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"zatkiller"},"content":"import java.util.Scanner;"},{"lineNumber":2,"author":{"gitId":"zatkiller"},"content":""},{"lineNumber":3,"author":{"gitId":"zatkiller"},"content":"import exceptions.DukeException;"},{"lineNumber":4,"author":{"gitId":"zatkiller"},"content":"import exceptions.MissingInputException;"},{"lineNumber":5,"author":{"gitId":"zatkiller"},"content":"import exceptions.UnknownInputException;"},{"lineNumber":6,"author":{"gitId":"zatkiller"},"content":""},{"lineNumber":7,"author":{"gitId":"-"},"content":"public class Duke {"},{"lineNumber":8,"author":{"gitId":"zatkiller"},"content":""},{"lineNumber":9,"author":{"gitId":"zatkiller"},"content":"    public static void printDivider() {"},{"lineNumber":10,"author":{"gitId":"zatkiller"},"content":"        String divider \u003d \"    ___________________________________________\";"},{"lineNumber":11,"author":{"gitId":"zatkiller"},"content":"        System.out.println(divider);"},{"lineNumber":12,"author":{"gitId":"zatkiller"},"content":"    }"},{"lineNumber":13,"author":{"gitId":"zatkiller"},"content":""},{"lineNumber":14,"author":{"gitId":"zatkiller"},"content":"    public static void welcome() {"},{"lineNumber":15,"author":{"gitId":"zatkiller"},"content":"        System.out.println(\"     Hello! I\u0027m Duke\");"},{"lineNumber":16,"author":{"gitId":"zatkiller"},"content":"        System.out.println(\"     What can I do for you?\");"},{"lineNumber":17,"author":{"gitId":"zatkiller"},"content":"    }"},{"lineNumber":18,"author":{"gitId":"zatkiller"},"content":""},{"lineNumber":19,"author":{"gitId":"zatkiller"},"content":"    public static void bye() {"},{"lineNumber":20,"author":{"gitId":"zatkiller"},"content":"        System.out.println(\"     Bye. Hope to see you again soon!\");"},{"lineNumber":21,"author":{"gitId":"zatkiller"},"content":"    }"},{"lineNumber":22,"author":{"gitId":"zatkiller"},"content":""},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public static void main(String[] args) {"},{"lineNumber":24,"author":{"gitId":"zatkiller"},"content":"        printDivider();"},{"lineNumber":25,"author":{"gitId":"zatkiller"},"content":"        welcome();"},{"lineNumber":26,"author":{"gitId":"zatkiller"},"content":"        printDivider();"},{"lineNumber":27,"author":{"gitId":"zatkiller"},"content":""},{"lineNumber":28,"author":{"gitId":"zatkiller"},"content":"        Scanner sc \u003d new Scanner(System.in);"},{"lineNumber":29,"author":{"gitId":"zatkiller"},"content":""},{"lineNumber":30,"author":{"gitId":"zatkiller"},"content":"        boolean carryOn \u003d true;"},{"lineNumber":31,"author":{"gitId":"zatkiller"},"content":"        TaskHandler handler \u003d new TaskHandler();"},{"lineNumber":32,"author":{"gitId":"zatkiller"},"content":""},{"lineNumber":33,"author":{"gitId":"zatkiller"},"content":"        while (carryOn) {"},{"lineNumber":34,"author":{"gitId":"zatkiller"},"content":"            String action \u003d sc.nextLine();"},{"lineNumber":35,"author":{"gitId":"zatkiller"},"content":"            String[] arr \u003d action.split(\" \");"},{"lineNumber":36,"author":{"gitId":"zatkiller"},"content":"            try {"},{"lineNumber":37,"author":{"gitId":"zatkiller"},"content":"                switch(arr[0]) {"},{"lineNumber":38,"author":{"gitId":"zatkiller"},"content":"                    case \"todo\":"},{"lineNumber":39,"author":{"gitId":"zatkiller"},"content":"                        if (arr.length \u003c\u003d 1)"},{"lineNumber":40,"author":{"gitId":"zatkiller"},"content":"                            throw new MissingInputException(arr[0]);"},{"lineNumber":41,"author":{"gitId":"zatkiller"},"content":"                        printDivider();"},{"lineNumber":42,"author":{"gitId":"zatkiller"},"content":"                        handler.handleToDoTask(action);"},{"lineNumber":43,"author":{"gitId":"zatkiller"},"content":"                        printDivider();"},{"lineNumber":44,"author":{"gitId":"zatkiller"},"content":"                        break;"},{"lineNumber":45,"author":{"gitId":"zatkiller"},"content":"                    case \"deadline\":"},{"lineNumber":46,"author":{"gitId":"zatkiller"},"content":"                        if (arr.length \u003c\u003d 1)"},{"lineNumber":47,"author":{"gitId":"zatkiller"},"content":"                            throw new MissingInputException(arr[0]);"},{"lineNumber":48,"author":{"gitId":"zatkiller"},"content":"                        printDivider();"},{"lineNumber":49,"author":{"gitId":"zatkiller"},"content":"                        handler.handleDeadlineTask(action);"},{"lineNumber":50,"author":{"gitId":"zatkiller"},"content":"                        printDivider();"},{"lineNumber":51,"author":{"gitId":"zatkiller"},"content":"                        break;"},{"lineNumber":52,"author":{"gitId":"zatkiller"},"content":"                    case \"event\":"},{"lineNumber":53,"author":{"gitId":"zatkiller"},"content":"                        if (arr.length \u003c\u003d 1)"},{"lineNumber":54,"author":{"gitId":"zatkiller"},"content":"                            throw new MissingInputException(arr[0]);"},{"lineNumber":55,"author":{"gitId":"zatkiller"},"content":"                        printDivider();"},{"lineNumber":56,"author":{"gitId":"zatkiller"},"content":"                        handler.handleEventTask(action);"},{"lineNumber":57,"author":{"gitId":"zatkiller"},"content":"                        printDivider();"},{"lineNumber":58,"author":{"gitId":"zatkiller"},"content":"                        break;"},{"lineNumber":59,"author":{"gitId":"zatkiller"},"content":"                    case \"list\":"},{"lineNumber":60,"author":{"gitId":"zatkiller"},"content":"                        printDivider();"},{"lineNumber":61,"author":{"gitId":"zatkiller"},"content":"                        handler.printStored();"},{"lineNumber":62,"author":{"gitId":"zatkiller"},"content":"                        printDivider();"},{"lineNumber":63,"author":{"gitId":"zatkiller"},"content":"                        break;"},{"lineNumber":64,"author":{"gitId":"zatkiller"},"content":"                    case \"done\":"},{"lineNumber":65,"author":{"gitId":"zatkiller"},"content":"                        int number \u003d Integer.valueOf(arr[1]);"},{"lineNumber":66,"author":{"gitId":"zatkiller"},"content":"                        printDivider();"},{"lineNumber":67,"author":{"gitId":"zatkiller"},"content":"                        handler.handleDone(number);"},{"lineNumber":68,"author":{"gitId":"zatkiller"},"content":"                        printDivider();"},{"lineNumber":69,"author":{"gitId":"zatkiller"},"content":"                        break;"},{"lineNumber":70,"author":{"gitId":"zatkiller"},"content":"                    case \"bye\":"},{"lineNumber":71,"author":{"gitId":"zatkiller"},"content":"                        carryOn \u003d false;"},{"lineNumber":72,"author":{"gitId":"zatkiller"},"content":"                        break;"},{"lineNumber":73,"author":{"gitId":"zatkiller"},"content":"                    case \"delete\":"},{"lineNumber":74,"author":{"gitId":"zatkiller"},"content":"                        int index \u003d Integer.valueOf(arr[1]);"},{"lineNumber":75,"author":{"gitId":"zatkiller"},"content":"                        printDivider();"},{"lineNumber":76,"author":{"gitId":"zatkiller"},"content":"                        handler.handleDelete(index);"},{"lineNumber":77,"author":{"gitId":"zatkiller"},"content":"                        printDivider();"},{"lineNumber":78,"author":{"gitId":"zatkiller"},"content":"                        break;"},{"lineNumber":79,"author":{"gitId":"zatkiller"},"content":"                    default:"},{"lineNumber":80,"author":{"gitId":"zatkiller"},"content":"                        throw new UnknownInputException();"},{"lineNumber":81,"author":{"gitId":"zatkiller"},"content":"                }"},{"lineNumber":82,"author":{"gitId":"zatkiller"},"content":"            } catch (MissingInputException e) {"},{"lineNumber":83,"author":{"gitId":"zatkiller"},"content":"                printDivider();"},{"lineNumber":84,"author":{"gitId":"zatkiller"},"content":"                System.out.println(e.getMessage());"},{"lineNumber":85,"author":{"gitId":"zatkiller"},"content":"                printDivider();"},{"lineNumber":86,"author":{"gitId":"zatkiller"},"content":"            } catch (UnknownInputException e) {"},{"lineNumber":87,"author":{"gitId":"zatkiller"},"content":"                printDivider();"},{"lineNumber":88,"author":{"gitId":"zatkiller"},"content":"                System.out.println(e.getMessage());"},{"lineNumber":89,"author":{"gitId":"zatkiller"},"content":"                printDivider();"},{"lineNumber":90,"author":{"gitId":"zatkiller"},"content":"            } catch (DukeException e) {"},{"lineNumber":91,"author":{"gitId":"zatkiller"},"content":"                printDivider();"},{"lineNumber":92,"author":{"gitId":"zatkiller"},"content":"                System.out.println(e.getMessage());"},{"lineNumber":93,"author":{"gitId":"zatkiller"},"content":"                printDivider();"},{"lineNumber":94,"author":{"gitId":"zatkiller"},"content":"            }"},{"lineNumber":95,"author":{"gitId":"zatkiller"},"content":"        }"},{"lineNumber":96,"author":{"gitId":"zatkiller"},"content":""},{"lineNumber":97,"author":{"gitId":"zatkiller"},"content":"        printDivider();"},{"lineNumber":98,"author":{"gitId":"zatkiller"},"content":"        bye();"},{"lineNumber":99,"author":{"gitId":"zatkiller"},"content":"        printDivider();"},{"lineNumber":100,"author":{"gitId":"zatkiller"},"content":""},{"lineNumber":101,"author":{"gitId":"zatkiller"},"content":"        sc.close();"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":103,"author":{"gitId":"-"},"content":"}"}],"authorContributionMap":{"zatkiller":99,"-":4}},{"path":"src/main/java/TaskHandler.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"zatkiller"},"content":"import java.util.List;"},{"lineNumber":2,"author":{"gitId":"zatkiller"},"content":"import java.util.ArrayList;"},{"lineNumber":3,"author":{"gitId":"zatkiller"},"content":""},{"lineNumber":4,"author":{"gitId":"zatkiller"},"content":"import tasks.DeadlineTask;"},{"lineNumber":5,"author":{"gitId":"zatkiller"},"content":"import tasks.EventTask;"},{"lineNumber":6,"author":{"gitId":"zatkiller"},"content":"import tasks.Task;"},{"lineNumber":7,"author":{"gitId":"zatkiller"},"content":"import tasks.ToDoTask;"},{"lineNumber":8,"author":{"gitId":"zatkiller"},"content":""},{"lineNumber":9,"author":{"gitId":"zatkiller"},"content":"public class TaskHandler {"},{"lineNumber":10,"author":{"gitId":"zatkiller"},"content":"    public List\u003cTask\u003e inputList;"},{"lineNumber":11,"author":{"gitId":"zatkiller"},"content":""},{"lineNumber":12,"author":{"gitId":"zatkiller"},"content":"    public TaskHandler() {"},{"lineNumber":13,"author":{"gitId":"zatkiller"},"content":"        inputList \u003d new ArrayList\u003c\u003e();"},{"lineNumber":14,"author":{"gitId":"zatkiller"},"content":"    }"},{"lineNumber":15,"author":{"gitId":"zatkiller"},"content":""},{"lineNumber":16,"author":{"gitId":"zatkiller"},"content":"    public void add(Task task) {"},{"lineNumber":17,"author":{"gitId":"zatkiller"},"content":"        this.inputList.add(task);"},{"lineNumber":18,"author":{"gitId":"zatkiller"},"content":"    }"},{"lineNumber":19,"author":{"gitId":"zatkiller"},"content":""},{"lineNumber":20,"author":{"gitId":"zatkiller"},"content":"    public Task get(int index) {"},{"lineNumber":21,"author":{"gitId":"zatkiller"},"content":"        return this.inputList.get(index);"},{"lineNumber":22,"author":{"gitId":"zatkiller"},"content":"    }"},{"lineNumber":23,"author":{"gitId":"zatkiller"},"content":""},{"lineNumber":24,"author":{"gitId":"zatkiller"},"content":"    public void printStored() {"},{"lineNumber":25,"author":{"gitId":"zatkiller"},"content":"        System.out.println(\"     Here are the tasks in your list:\");"},{"lineNumber":26,"author":{"gitId":"zatkiller"},"content":"        for (int i \u003d 0; i \u003c inputList.size(); i++) {"},{"lineNumber":27,"author":{"gitId":"zatkiller"},"content":"            Task task \u003d inputList.get(i);"},{"lineNumber":28,"author":{"gitId":"zatkiller"},"content":"            System.out.println(\"      \" + (i + 1) + \".\" + task.toString().trim());"},{"lineNumber":29,"author":{"gitId":"zatkiller"},"content":"        }"},{"lineNumber":30,"author":{"gitId":"zatkiller"},"content":"    }"},{"lineNumber":31,"author":{"gitId":"zatkiller"},"content":""},{"lineNumber":32,"author":{"gitId":"zatkiller"},"content":"    public void addPrint() {"},{"lineNumber":33,"author":{"gitId":"zatkiller"},"content":"        System.out.println(\"     Got it. I\u0027ve added this task: \");"},{"lineNumber":34,"author":{"gitId":"zatkiller"},"content":"    }"},{"lineNumber":35,"author":{"gitId":"zatkiller"},"content":""},{"lineNumber":36,"author":{"gitId":"zatkiller"},"content":"    public static void printMarked() {"},{"lineNumber":37,"author":{"gitId":"zatkiller"},"content":"        System.out.println(\"     \" + \"Nice! I\u0027ve marked this task as done:\");"},{"lineNumber":38,"author":{"gitId":"zatkiller"},"content":"    }"},{"lineNumber":39,"author":{"gitId":"zatkiller"},"content":""},{"lineNumber":40,"author":{"gitId":"zatkiller"},"content":"    public static void printRemoved() {"},{"lineNumber":41,"author":{"gitId":"zatkiller"},"content":"        System.out.println(\"     Noted. I\u0027ve removed this task: \");"},{"lineNumber":42,"author":{"gitId":"zatkiller"},"content":"    }"},{"lineNumber":43,"author":{"gitId":"zatkiller"},"content":""},{"lineNumber":44,"author":{"gitId":"zatkiller"},"content":"    public void handleToDoTask(String action) {"},{"lineNumber":45,"author":{"gitId":"zatkiller"},"content":"        int index \u003d action.indexOf(\" \");"},{"lineNumber":46,"author":{"gitId":"zatkiller"},"content":"        String description \u003d action.substring(index + 1);"},{"lineNumber":47,"author":{"gitId":"zatkiller"},"content":""},{"lineNumber":48,"author":{"gitId":"zatkiller"},"content":"        ToDoTask toDoTask \u003d new ToDoTask(description);"},{"lineNumber":49,"author":{"gitId":"zatkiller"},"content":""},{"lineNumber":50,"author":{"gitId":"zatkiller"},"content":"        this.add(toDoTask);"},{"lineNumber":51,"author":{"gitId":"zatkiller"},"content":"        this.addPrint();"},{"lineNumber":52,"author":{"gitId":"zatkiller"},"content":""},{"lineNumber":53,"author":{"gitId":"zatkiller"},"content":"        System.out.println(toDoTask);"},{"lineNumber":54,"author":{"gitId":"zatkiller"},"content":""},{"lineNumber":55,"author":{"gitId":"zatkiller"},"content":"        this.countTasks();"},{"lineNumber":56,"author":{"gitId":"zatkiller"},"content":"    }"},{"lineNumber":57,"author":{"gitId":"zatkiller"},"content":""},{"lineNumber":58,"author":{"gitId":"zatkiller"},"content":"    public void handleEventTask(String action) {"},{"lineNumber":59,"author":{"gitId":"zatkiller"},"content":"        int actionIndex \u003d action.indexOf(\" \");"},{"lineNumber":60,"author":{"gitId":"zatkiller"},"content":"        int descriptionIndex \u003d action.indexOf(\"/\");"},{"lineNumber":61,"author":{"gitId":"zatkiller"},"content":""},{"lineNumber":62,"author":{"gitId":"zatkiller"},"content":"        String description \u003d action.substring(actionIndex + 1, descriptionIndex - 1);"},{"lineNumber":63,"author":{"gitId":"zatkiller"},"content":"        String event \u003d  action.substring(descriptionIndex + 1);"},{"lineNumber":64,"author":{"gitId":"zatkiller"},"content":"        EventTask eventTask\u003d new EventTask(description, event);"},{"lineNumber":65,"author":{"gitId":"zatkiller"},"content":""},{"lineNumber":66,"author":{"gitId":"zatkiller"},"content":"        this.add(eventTask);"},{"lineNumber":67,"author":{"gitId":"zatkiller"},"content":"        addPrint();"},{"lineNumber":68,"author":{"gitId":"zatkiller"},"content":""},{"lineNumber":69,"author":{"gitId":"zatkiller"},"content":"        System.out.println(eventTask);"},{"lineNumber":70,"author":{"gitId":"zatkiller"},"content":""},{"lineNumber":71,"author":{"gitId":"zatkiller"},"content":"        this.countTasks();"},{"lineNumber":72,"author":{"gitId":"zatkiller"},"content":"    }"},{"lineNumber":73,"author":{"gitId":"zatkiller"},"content":""},{"lineNumber":74,"author":{"gitId":"zatkiller"},"content":"    public void handleDeadlineTask(String action) {"},{"lineNumber":75,"author":{"gitId":"zatkiller"},"content":"        int actionIndex \u003d action.indexOf(\" \");"},{"lineNumber":76,"author":{"gitId":"zatkiller"},"content":"        int descriptionIndex \u003d action.indexOf(\"/\");"},{"lineNumber":77,"author":{"gitId":"zatkiller"},"content":""},{"lineNumber":78,"author":{"gitId":"zatkiller"},"content":"        String description \u003d action.substring(actionIndex + 1, descriptionIndex - 1);"},{"lineNumber":79,"author":{"gitId":"zatkiller"},"content":"        String deadline \u003d  action.substring(descriptionIndex + 1);"},{"lineNumber":80,"author":{"gitId":"zatkiller"},"content":"        DeadlineTask deadlineTask\u003d new DeadlineTask(description, deadline);"},{"lineNumber":81,"author":{"gitId":"zatkiller"},"content":""},{"lineNumber":82,"author":{"gitId":"zatkiller"},"content":"        this.add(deadlineTask);"},{"lineNumber":83,"author":{"gitId":"zatkiller"},"content":"        addPrint();"},{"lineNumber":84,"author":{"gitId":"zatkiller"},"content":""},{"lineNumber":85,"author":{"gitId":"zatkiller"},"content":"        System.out.println(deadlineTask);"},{"lineNumber":86,"author":{"gitId":"zatkiller"},"content":"        this.countTasks();"},{"lineNumber":87,"author":{"gitId":"zatkiller"},"content":"    }"},{"lineNumber":88,"author":{"gitId":"zatkiller"},"content":""},{"lineNumber":89,"author":{"gitId":"zatkiller"},"content":""},{"lineNumber":90,"author":{"gitId":"zatkiller"},"content":"    public void handleDone(int index) {"},{"lineNumber":91,"author":{"gitId":"zatkiller"},"content":"        printMarked();"},{"lineNumber":92,"author":{"gitId":"zatkiller"},"content":"        Task markDone \u003d this.inputList.get(index - 1);"},{"lineNumber":93,"author":{"gitId":"zatkiller"},"content":""},{"lineNumber":94,"author":{"gitId":"zatkiller"},"content":"        markDone.markAsDone();"},{"lineNumber":95,"author":{"gitId":"zatkiller"},"content":"        markDone.getStatusAndTask();"},{"lineNumber":96,"author":{"gitId":"zatkiller"},"content":"    }"},{"lineNumber":97,"author":{"gitId":"zatkiller"},"content":""},{"lineNumber":98,"author":{"gitId":"zatkiller"},"content":"    public void handleDelete(int index) {"},{"lineNumber":99,"author":{"gitId":"zatkiller"},"content":"        printMarked();"},{"lineNumber":100,"author":{"gitId":"zatkiller"},"content":"        Task task \u003d this.inputList.remove(index - 1);"},{"lineNumber":101,"author":{"gitId":"zatkiller"},"content":"        System.out.println(task);"},{"lineNumber":102,"author":{"gitId":"zatkiller"},"content":""},{"lineNumber":103,"author":{"gitId":"zatkiller"},"content":"        this.countTasks();"},{"lineNumber":104,"author":{"gitId":"zatkiller"},"content":"    }"},{"lineNumber":105,"author":{"gitId":"zatkiller"},"content":""},{"lineNumber":106,"author":{"gitId":"zatkiller"},"content":"    public void countTasks() {"},{"lineNumber":107,"author":{"gitId":"zatkiller"},"content":"        System.out.println(\"     Now you have \" + inputList.size() + \" tasks in the list.\");"},{"lineNumber":108,"author":{"gitId":"zatkiller"},"content":"    }"},{"lineNumber":109,"author":{"gitId":"zatkiller"},"content":"}"}],"authorContributionMap":{"zatkiller":109}},{"path":"src/main/java/exceptions/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"zatkiller"},"content":"package exceptions;"},{"lineNumber":2,"author":{"gitId":"zatkiller"},"content":"import java.lang.Exception;"},{"lineNumber":3,"author":{"gitId":"zatkiller"},"content":""},{"lineNumber":4,"author":{"gitId":"zatkiller"},"content":"public class DukeException extends Exception{"},{"lineNumber":5,"author":{"gitId":"zatkiller"},"content":"    public DukeException(String message) {"},{"lineNumber":6,"author":{"gitId":"zatkiller"},"content":"        super(message);"},{"lineNumber":7,"author":{"gitId":"zatkiller"},"content":"    }"},{"lineNumber":8,"author":{"gitId":"zatkiller"},"content":"}"}],"authorContributionMap":{"zatkiller":8}},{"path":"src/main/java/exceptions/MissingInputException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"zatkiller"},"content":"package exceptions;"},{"lineNumber":2,"author":{"gitId":"zatkiller"},"content":""},{"lineNumber":3,"author":{"gitId":"zatkiller"},"content":"public class MissingInputException extends DukeException{"},{"lineNumber":4,"author":{"gitId":"zatkiller"},"content":"    public MissingInputException(String action) {"},{"lineNumber":5,"author":{"gitId":"zatkiller"},"content":"        super(\"     ☹ OOPS!!! The description of a \" + action + \" cannot be empty.\");"},{"lineNumber":6,"author":{"gitId":"zatkiller"},"content":"    }"},{"lineNumber":7,"author":{"gitId":"zatkiller"},"content":"}"}],"authorContributionMap":{"zatkiller":7}},{"path":"src/main/java/exceptions/UnknownInputException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"zatkiller"},"content":"package exceptions;"},{"lineNumber":2,"author":{"gitId":"zatkiller"},"content":""},{"lineNumber":3,"author":{"gitId":"zatkiller"},"content":"public class UnknownInputException  extends DukeException{"},{"lineNumber":4,"author":{"gitId":"zatkiller"},"content":"    public UnknownInputException () {"},{"lineNumber":5,"author":{"gitId":"zatkiller"},"content":"        super(\"     ☹ OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\");"},{"lineNumber":6,"author":{"gitId":"zatkiller"},"content":"    }"},{"lineNumber":7,"author":{"gitId":"zatkiller"},"content":"}"}],"authorContributionMap":{"zatkiller":7}},{"path":"src/main/java/tasks/DeadlineTask.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"zatkiller"},"content":"package tasks;"},{"lineNumber":2,"author":{"gitId":"zatkiller"},"content":""},{"lineNumber":3,"author":{"gitId":"zatkiller"},"content":"public class DeadlineTask extends Task{"},{"lineNumber":4,"author":{"gitId":"zatkiller"},"content":"    private String type;"},{"lineNumber":5,"author":{"gitId":"zatkiller"},"content":"    private String deadline;"},{"lineNumber":6,"author":{"gitId":"zatkiller"},"content":""},{"lineNumber":7,"author":{"gitId":"zatkiller"},"content":"    public DeadlineTask(String description, String deadline) {"},{"lineNumber":8,"author":{"gitId":"zatkiller"},"content":"        super(description);"},{"lineNumber":9,"author":{"gitId":"zatkiller"},"content":"        this.type \u003d \"[D]\";"},{"lineNumber":10,"author":{"gitId":"zatkiller"},"content":"        this.deadline \u003d deadline;"},{"lineNumber":11,"author":{"gitId":"zatkiller"},"content":"    }"},{"lineNumber":12,"author":{"gitId":"zatkiller"},"content":""},{"lineNumber":13,"author":{"gitId":"zatkiller"},"content":"    public String getDeadline() {"},{"lineNumber":14,"author":{"gitId":"zatkiller"},"content":"        int index \u003d deadline.indexOf(\" \");"},{"lineNumber":15,"author":{"gitId":"zatkiller"},"content":"        return \"(\" + this.deadline.substring(0, index) + \":\" + this.deadline.substring(index) + \")\";"},{"lineNumber":16,"author":{"gitId":"zatkiller"},"content":"    }"},{"lineNumber":17,"author":{"gitId":"zatkiller"},"content":""},{"lineNumber":18,"author":{"gitId":"zatkiller"},"content":"    @Override"},{"lineNumber":19,"author":{"gitId":"zatkiller"},"content":"    public void getStatusAndTask() {"},{"lineNumber":20,"author":{"gitId":"zatkiller"},"content":"        System.out.println(\"      \" + this.type + this.getStatus() + this.description + this.getDeadline());"},{"lineNumber":21,"author":{"gitId":"zatkiller"},"content":"    }"},{"lineNumber":22,"author":{"gitId":"zatkiller"},"content":""},{"lineNumber":23,"author":{"gitId":"zatkiller"},"content":"    @Override"},{"lineNumber":24,"author":{"gitId":"zatkiller"},"content":"    public String toString() {"},{"lineNumber":25,"author":{"gitId":"zatkiller"},"content":"        return \"       \" + this.type + super.toString().trim() + \" \" + this.getDeadline();"},{"lineNumber":26,"author":{"gitId":"zatkiller"},"content":"    }"},{"lineNumber":27,"author":{"gitId":"zatkiller"},"content":"}"}],"authorContributionMap":{"zatkiller":27}},{"path":"src/main/java/tasks/EventTask.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"zatkiller"},"content":"package tasks;"},{"lineNumber":2,"author":{"gitId":"zatkiller"},"content":""},{"lineNumber":3,"author":{"gitId":"zatkiller"},"content":"public class EventTask extends Task{"},{"lineNumber":4,"author":{"gitId":"zatkiller"},"content":"    private String type;"},{"lineNumber":5,"author":{"gitId":"zatkiller"},"content":"    private String timing;"},{"lineNumber":6,"author":{"gitId":"zatkiller"},"content":""},{"lineNumber":7,"author":{"gitId":"zatkiller"},"content":"    public EventTask(String description, String timing) {"},{"lineNumber":8,"author":{"gitId":"zatkiller"},"content":"        super(description);"},{"lineNumber":9,"author":{"gitId":"zatkiller"},"content":"        this.type \u003d \"[E]\";"},{"lineNumber":10,"author":{"gitId":"zatkiller"},"content":"        this.timing \u003d timing;"},{"lineNumber":11,"author":{"gitId":"zatkiller"},"content":"    }"},{"lineNumber":12,"author":{"gitId":"zatkiller"},"content":""},{"lineNumber":13,"author":{"gitId":"zatkiller"},"content":"    public String getTiming() {"},{"lineNumber":14,"author":{"gitId":"zatkiller"},"content":"        int splitIndex \u003d this.timing.indexOf(\" \");"},{"lineNumber":15,"author":{"gitId":"zatkiller"},"content":"        String at \u003d this.timing.substring(0, splitIndex);"},{"lineNumber":16,"author":{"gitId":"zatkiller"},"content":"        String time \u003d this.timing.substring(splitIndex);"},{"lineNumber":17,"author":{"gitId":"zatkiller"},"content":"        return \"(\" + at + \":\" + time + \")\";"},{"lineNumber":18,"author":{"gitId":"zatkiller"},"content":"    }"},{"lineNumber":19,"author":{"gitId":"zatkiller"},"content":""},{"lineNumber":20,"author":{"gitId":"zatkiller"},"content":"    @Override"},{"lineNumber":21,"author":{"gitId":"zatkiller"},"content":"    public void getStatusAndTask() {"},{"lineNumber":22,"author":{"gitId":"zatkiller"},"content":"        System.out.println(\"      \" + this.type + this.getStatus() + this.description + this.getTiming());"},{"lineNumber":23,"author":{"gitId":"zatkiller"},"content":"    }"},{"lineNumber":24,"author":{"gitId":"zatkiller"},"content":""},{"lineNumber":25,"author":{"gitId":"zatkiller"},"content":"    @Override"},{"lineNumber":26,"author":{"gitId":"zatkiller"},"content":"    public String toString() {"},{"lineNumber":27,"author":{"gitId":"zatkiller"},"content":""},{"lineNumber":28,"author":{"gitId":"zatkiller"},"content":"        return \"       \" + this.type + super.toString().trim() + \" \" + getTiming();"},{"lineNumber":29,"author":{"gitId":"zatkiller"},"content":"    }"},{"lineNumber":30,"author":{"gitId":"zatkiller"},"content":"}"}],"authorContributionMap":{"zatkiller":30}},{"path":"src/main/java/tasks/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"zatkiller"},"content":"package tasks;"},{"lineNumber":2,"author":{"gitId":"zatkiller"},"content":""},{"lineNumber":3,"author":{"gitId":"zatkiller"},"content":"public class Task {"},{"lineNumber":4,"author":{"gitId":"zatkiller"},"content":"    protected String description;"},{"lineNumber":5,"author":{"gitId":"zatkiller"},"content":"    protected boolean isDone;"},{"lineNumber":6,"author":{"gitId":"zatkiller"},"content":""},{"lineNumber":7,"author":{"gitId":"zatkiller"},"content":"    public Task(String description) {"},{"lineNumber":8,"author":{"gitId":"zatkiller"},"content":"        this.description \u003d description;"},{"lineNumber":9,"author":{"gitId":"zatkiller"},"content":"        this.isDone \u003d false;"},{"lineNumber":10,"author":{"gitId":"zatkiller"},"content":"    }"},{"lineNumber":11,"author":{"gitId":"zatkiller"},"content":""},{"lineNumber":12,"author":{"gitId":"zatkiller"},"content":"    public String getStatusIcon() {"},{"lineNumber":13,"author":{"gitId":"zatkiller"},"content":"        return (isDone ? \"\\u2718\" : \" \");"},{"lineNumber":14,"author":{"gitId":"zatkiller"},"content":"    }"},{"lineNumber":15,"author":{"gitId":"zatkiller"},"content":""},{"lineNumber":16,"author":{"gitId":"zatkiller"},"content":"    public String getStatus() {"},{"lineNumber":17,"author":{"gitId":"zatkiller"},"content":"        return \"[\" + getStatusIcon() + \"]\";"},{"lineNumber":18,"author":{"gitId":"zatkiller"},"content":"    }"},{"lineNumber":19,"author":{"gitId":"zatkiller"},"content":""},{"lineNumber":20,"author":{"gitId":"zatkiller"},"content":"    public void markAsDone() {"},{"lineNumber":21,"author":{"gitId":"zatkiller"},"content":"        this.isDone \u003d true;"},{"lineNumber":22,"author":{"gitId":"zatkiller"},"content":"    }"},{"lineNumber":23,"author":{"gitId":"zatkiller"},"content":""},{"lineNumber":24,"author":{"gitId":"zatkiller"},"content":"    public void getStatusAndTask() {"},{"lineNumber":25,"author":{"gitId":"zatkiller"},"content":"        System.out.println(\"       \" + getStatus() + \" \" + this.description);"},{"lineNumber":26,"author":{"gitId":"zatkiller"},"content":"    }"},{"lineNumber":27,"author":{"gitId":"zatkiller"},"content":""},{"lineNumber":28,"author":{"gitId":"zatkiller"},"content":"    @Override"},{"lineNumber":29,"author":{"gitId":"zatkiller"},"content":"    public String toString() {"},{"lineNumber":30,"author":{"gitId":"zatkiller"},"content":"        return \"       \" + this.getStatus() + \" \" + this.description;"},{"lineNumber":31,"author":{"gitId":"zatkiller"},"content":"    }"},{"lineNumber":32,"author":{"gitId":"zatkiller"},"content":"}"}],"authorContributionMap":{"zatkiller":32}},{"path":"src/main/java/tasks/ToDoTask.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"zatkiller"},"content":"package tasks;"},{"lineNumber":2,"author":{"gitId":"zatkiller"},"content":""},{"lineNumber":3,"author":{"gitId":"zatkiller"},"content":"public class ToDoTask extends Task{"},{"lineNumber":4,"author":{"gitId":"zatkiller"},"content":"    private String type;"},{"lineNumber":5,"author":{"gitId":"zatkiller"},"content":""},{"lineNumber":6,"author":{"gitId":"zatkiller"},"content":"    public ToDoTask(String description) {"},{"lineNumber":7,"author":{"gitId":"zatkiller"},"content":"        super(description);"},{"lineNumber":8,"author":{"gitId":"zatkiller"},"content":"        this.type \u003d \"[T]\";"},{"lineNumber":9,"author":{"gitId":"zatkiller"},"content":"    }"},{"lineNumber":10,"author":{"gitId":"zatkiller"},"content":""},{"lineNumber":11,"author":{"gitId":"zatkiller"},"content":"    @Override"},{"lineNumber":12,"author":{"gitId":"zatkiller"},"content":"    public void getStatusAndTask() {"},{"lineNumber":13,"author":{"gitId":"zatkiller"},"content":"        System.out.println(\"      \" + this.type + this.getStatus() + this.description);"},{"lineNumber":14,"author":{"gitId":"zatkiller"},"content":"    }"},{"lineNumber":15,"author":{"gitId":"zatkiller"},"content":""},{"lineNumber":16,"author":{"gitId":"zatkiller"},"content":"    @Override"},{"lineNumber":17,"author":{"gitId":"zatkiller"},"content":"    public String toString() {"},{"lineNumber":18,"author":{"gitId":"zatkiller"},"content":"        return \"       \" + this.type + super.toString().trim();"},{"lineNumber":19,"author":{"gitId":"zatkiller"},"content":"    }"},{"lineNumber":20,"author":{"gitId":"zatkiller"},"content":"}"}],"authorContributionMap":{"zatkiller":20}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"zatkiller"},"content":"todo borrow book"},{"lineNumber":2,"author":{"gitId":"zatkiller"},"content":"deadline return book /by Sunday"},{"lineNumber":3,"author":{"gitId":"zatkiller"},"content":"event project meeting /at Mon 2-4pm"},{"lineNumber":4,"author":{"gitId":"zatkiller"},"content":"list"},{"lineNumber":5,"author":{"gitId":"zatkiller"},"content":"bye"}],"authorContributionMap":{"zatkiller":5}},{"path":"text-ui-test/runtest.sh","fileType":"sh","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"#!/usr/bin/env bash"},{"lineNumber":2,"author":{"gitId":"-"},"content":""},{"lineNumber":3,"author":{"gitId":"-"},"content":"# create bin directory if it doesn\u0027t exist"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if [ ! -d \"../bin\" ]"},{"lineNumber":5,"author":{"gitId":"-"},"content":"then"},{"lineNumber":6,"author":{"gitId":"-"},"content":"    mkdir ../bin"},{"lineNumber":7,"author":{"gitId":"-"},"content":"fi"},{"lineNumber":8,"author":{"gitId":"-"},"content":""},{"lineNumber":9,"author":{"gitId":"-"},"content":"# delete output from previous run"},{"lineNumber":10,"author":{"gitId":"-"},"content":"if [ -e \"./ACTUAL.TXT\" ]"},{"lineNumber":11,"author":{"gitId":"-"},"content":"then"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    rm ACTUAL.TXT"},{"lineNumber":13,"author":{"gitId":"-"},"content":"fi"},{"lineNumber":14,"author":{"gitId":"-"},"content":""},{"lineNumber":15,"author":{"gitId":"-"},"content":"# compile the code into the bin folder, terminates if error occurred"},{"lineNumber":16,"author":{"gitId":"-"},"content":"if ! javac -cp ../src/main/java -Xlint:none -d ../bin ../src/main/java/*.java"},{"lineNumber":17,"author":{"gitId":"-"},"content":"then"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    echo \"********** BUILD FAILURE **********\""},{"lineNumber":19,"author":{"gitId":"-"},"content":"    exit 1"},{"lineNumber":20,"author":{"gitId":"-"},"content":"fi"},{"lineNumber":21,"author":{"gitId":"-"},"content":""},{"lineNumber":22,"author":{"gitId":"-"},"content":"# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"},{"lineNumber":23,"author":{"gitId":"-"},"content":"java -classpath ../bin Duke \u003c input.txt \u003e ACTUAL.TXT"},{"lineNumber":24,"author":{"gitId":"-"},"content":""},{"lineNumber":25,"author":{"gitId":"-"},"content":"# compare the output to the expected output"},{"lineNumber":26,"author":{"gitId":"zatkiller"},"content":"diff ACTUAL.TXT EXPECTED.TXT"},{"lineNumber":27,"author":{"gitId":"-"},"content":"if [ $? -eq 0 ]"},{"lineNumber":28,"author":{"gitId":"-"},"content":"then"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    echo \"Test result: PASSED\""},{"lineNumber":30,"author":{"gitId":"-"},"content":"    exit 0"},{"lineNumber":31,"author":{"gitId":"-"},"content":"else"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    echo \"Test result: FAILED\""},{"lineNumber":33,"author":{"gitId":"-"},"content":"    exit 1"},{"lineNumber":34,"author":{"gitId":"-"},"content":"fi"}],"authorContributionMap":{"zatkiller":1,"-":33}}]
