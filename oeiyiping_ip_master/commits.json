{"authorDailyContributionsMap":{"oeiyiping":[{"date":"2021-01-20","commitResults":[{"hash":"ca92c56902efdebbecf18053f9f7aa035c9c387c","messageTitle":"Duke class: Add greet() and listen() instance methods","messageBody":"greet() prints the designated message.\n\nlisten() accepts a user command and echoes said command.\nAfter the printing the previous command, Duke then waits for a new\ncommand. Active listening via a while-loop allows Duke to repeatedly\ncarry out the above cycle until \"bye\" command is received.\n\nUpon initiating Duke object, greet() and listen() are called to\nimmediately greet and accept commands.\n","tags":["Level-1"],"fileTypesAndContributionMap":{"java":{"insertions":34,"deletions":0}}},{"hash":"417a3c3a2b3c1e032560cb302963e2820be81e58","messageTitle":"Duke class: add list attribute; add bye(), addToList(), printList()","messageBody":"Add list attribute to Duke class to support String storage.\n\nPackage actions to be done upon \"bye\" command into bye() method,\nhelps with modularity and SLAP principle.\n\naddToList() adds input String into the list attribute of Duke\nobject.\n\nprintList() prints all elements in list.\n\nChange listen() implementation from if-else to switch, for better\nsupport of handling numerous types of commands.\n","tags":["Level-2","A-Collections"],"fileTypesAndContributionMap":{"java":{"insertions":34,"deletions":7}}},{"hash":"ba2b3405c93b93efec80b46889eb7ff7454e38b6","messageTitle":"Add Task class","messageBody":"Add Task class for better representation of added tasks, instead of\nmerely using String. Task class can support the various required\nattributes of the tasks such as Done status.\n","tags":["A-Classes"],"fileTypesAndContributionMap":{"java":{"insertions":18,"deletions":0}}},{"hash":"278e86ec639d3b57650fc649b8b0dfb49c5e8a84","messageTitle":"Duke class: add taskDone() method, change list to list of Task","messageBody":"Change list of String to list of Task, rename list to tasks.\n\nPackage actions to be done upon \"done\" command into taskDone()\nmethod, helps with modularity and SLAP principle.\n","tags":["Level-3"],"fileTypesAndContributionMap":{"java":{"insertions":21,"deletions":8}}},{"hash":"df531f653c29a49f8a4345e2a6b4b19a83ecd1c4","messageTitle":"Add subclasses of Task: ToDo, Event, Deadline","messageBody":"","tags":["A-Inheritance"],"fileTypesAndContributionMap":{"java":{"insertions":33,"deletions":0}}},{"hash":"54f5268a7a113f5eecc4b66f139145186026b1f9","messageTitle":"Duke class: Add todo, event, deadline as supported commands","messageBody":"Add the above commands to specifically create the corresponding\nobject.\n\ntaskDone(): fix off-by-one bug\n\nFix minor typo in Deadline and Event class\n","tags":["Level-4"],"fileTypesAndContributionMap":{"java":{"insertions":32,"deletions":10}}},{"hash":"e1dac58a506d938dbca2f40ddf92e34a759fb6a1","messageTitle":"Change while-loop condition, and shift input prompt to end of loop","messageBody":"Change while-loop condition from while Duke isActive to\nscanner.hasNext(), as the former condition throws\nNoSuchElementException.\n\nShift the input prompt from start of while-loop to end of loop\ndue to the above loop condition change, as scanner.hasNext() blocks\nat the condition check, thus leading to the input prompt incorrectly\nappearing after the input has been given.\n","fileTypesAndContributionMap":{"java":{"insertions":6,"deletions":10}}},{"hash":"9aff544ba077745009b59b1f2438e4ebc8f00eb8","messageTitle":"Update test cases in input.txt, and expected output in EXPECTED.TXT","messageBody":"The input test cases tests for all the necessary functionalities as\ndefined in Levels 1 to 4. Test cases do not test for unsupported\ninput (eg. \"event assignment\", where the expected \"/at time\" is not\nprovided.\n","tags":["A-TextUiTesting"],"fileTypesAndContributionMap":{"txt":{"insertions":7,"deletions":0},"bat":{"insertions":2,"deletions":2}}},{"hash":"43aa62544a7e16cf4b28f2cbc46e9402c9183164","messageTitle":"Shift while-loop to outside of listen()","messageBody":"listen() now takes in a string argument to carry out the command.\nIt makes more sense for listen() to be responsible only for command\nexecution, without handling any of the while-loop logic. while-loop\nlogic should be handled by the caller (Duke) instead.\n","fileTypesAndContributionMap":{"java":{"insertions":43,"deletions":40}}},{"hash":"c269ad5fdbed51bbd564e54a4c783b00f8e3f491","messageTitle":"Add Exception for each of the Task subclasses","messageBody":"The above change is to facilitate customized handling of the errors\nthat arise from each of the Task subclasses.\n","tags":["A-Exceptions"],"fileTypesAndContributionMap":{"java":{"insertions":25,"deletions":0}}},{"hash":"b1ae8ba04ff7007d6ac05a526387f06e94640a56","messageTitle":"Add exception handling to Duke class","messageBody":"All the Task subclasses throw their corresponding exceptions, with\neach of the exceptions handled by the Duke object.\n","tags":["Level-5"],"fileTypesAndContributionMap":{"java":{"insertions":41,"deletions":15}}},{"hash":"f92b3b3da9685838f8e002bbc14b026273e4c99f","messageTitle":"Duke class: Add delete function","messageBody":"Add the capability to delete previously added tasks from the list.\n","tags":["Level-6"],"fileTypesAndContributionMap":{"java":{"insertions":17,"deletions":7}}}]},{"date":"2021-01-26","commitResults":[{"hash":"59ad8b9919d76cbcf2512a96cfc85998c84cf391","messageTitle":"DukeException subclasses: Unify all subclasses as DukeException","messageBody":"All DukeException subclasses seem redundant at the moment.\nTo account for the removal, exception handling in Duke.listen() has\nbeen modified.\n","fileTypesAndContributionMap":{"java":{"insertions":16,"deletions":42}}},{"hash":"071909a24298e9d8a94a0329a80f116eba147302","messageTitle":"Add fluff","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":10,"deletions":6}}},{"hash":"f21ab0e6958fbb530a3076894047c1d0f0d8b55d","messageTitle":"Change Task to abstract","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":14,"deletions":16}}},{"hash":"ea608b122877f8ef778b6583b8dec455906cc9d4","messageTitle":"Add save functionality","messageBody":"Add .toLog() method to all tasks to support save functionality by\nprint each task in save string format.\n","tags":["Level-7"],"fileTypesAndContributionMap":{"java":{"insertions":56,"deletions":21}}},{"hash":"2d2b7637ebcc02d9bc349f656c6255f6deb5082b","messageTitle":"Change date in Event and Deadline classes","messageBody":"Change date in Event and Deadline classes from String to\nLocalDateTime.\n","tags":["Level-8"],"fileTypesAndContributionMap":{"java":{"insertions":33,"deletions":17}}}]},{"date":"2021-01-27","commitResults":[{"hash":"45c71500b9009bb5520ab42322ec7e32e6972426","messageTitle":"Merge with Branch-Level-7","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":0,"deletions":4}}}]},{"date":"2021-01-28","commitResults":[{"hash":"85495e93083e52e97e941c31bb76e5cd5140063b","messageTitle":"Add classes and rework existing classes to support more OOP.","messageBody":"Add new Command class, with a subclass for each valid command type.\nAdd Parser class to process user input into Command.\nAdd Storage class to handle save function.\nAdd TaskList class to handle task lists.\nAdd Ui class to handle user interface actions such as reading input\nand printing output.\n","tags":["A-MoreOOP"],"fileTypesAndContributionMap":{"java":{"insertions":430,"deletions":150}}},{"hash":"a3afdf767788a00500ceedb297c895b7cb123ce1","messageTitle":"TaskList: Add findTasks() method to support finding matching tasks","messageBody":"","tags":["Level-9"],"fileTypesAndContributionMap":{"java":{"insertions":54,"deletions":15}}}]},{"date":"2021-01-30","commitResults":[{"hash":"1657e533cf4605368a8dd0417a5da69b7f5e3e21","messageTitle":"Add JUnit tests for ToDo, Deadline, Event, TaskList","messageBody":"","tags":["A-JUnit"],"fileTypesAndContributionMap":{"java":{"insertions":214,"deletions":19}}},{"hash":"bdcba0ea3266d27b061a6fb06dfe223038e5d56a","messageTitle":"Add load function to Storage class","messageBody":"Add the ability to load tasks saved in an existing save file.\n","tags":["A-Jar"],"fileTypesAndContributionMap":{"java":{"insertions":79,"deletions":18}}},{"hash":"8963326e0e63d2bd4618f812bc58b08799fbd458","messageTitle":"Add Javadoc and change codes to be compliant with CS2103 Checkstyle","messageBody":"","tags":["A-JavaDoc"],"fileTypesAndContributionMap":{"java":{"insertions":83,"deletions":37}}},{"hash":"76e4070b3d817476f06bcabee5c1cb415db08522","messageTitle":"Add load function to Storage class","messageBody":"Add the ability to load tasks saved in an existing save file.\n","fileTypesAndContributionMap":{"java":{"insertions":79,"deletions":18}}},{"hash":"00ce37129322394bbf029fb996cd088ed4176855","messageTitle":"Edit to comply with CS2103 Checkstyle","messageBody":"","tags":["A-CodingStandard"],"fileTypesAndContributionMap":{"java":{"insertions":0,"deletions":5}}}]},{"date":"2021-02-04","commitResults":[{"hash":"c4bacf585984d0f6390c3382eee3fa34efe2e71a","messageTitle":"Add gradle support to project","messageBody":"","tags":["A-Gradle"],"fileTypesAndContributionMap":{"gradle":{"insertions":1,"deletions":0},"java":{"insertions":20,"deletions":20}}},{"hash":"61f14a30e01123959da043416d08708304af5d8c","messageTitle":"Set up Gradle Checkstyle and edit Javadoc comments.","messageBody":"","tags":["Text-UI","A-Checkstyle"],"fileTypesAndContributionMap":{"java":{"insertions":32,"deletions":10}}}]},{"date":"2021-02-05","commitResults":[{"hash":"0462de0128d8d34fffd628199b602dae1634a22d","messageTitle":"Change UI from text to graphical","messageBody":"","tags":["Level-10"],"fileTypesAndContributionMap":{"gradle":{"insertions":14,"deletions":1},"java":{"insertions":226,"deletions":66}}}]},{"date":"2021-02-08","commitResults":[{"hash":"fe33c9e465ad3a3d45e7f40bcea2fc08b9f39cce","messageTitle":"Add exit on bye command","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":5,"deletions":11}}},{"hash":"75bef5961104a0f300ed9f6ea2a3a3a8f6c2297a","messageTitle":"Add handling of IndexOutOfBoundsException to done and delete","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":16,"deletions":7}}}]},{"date":"2021-02-09","commitResults":[{"hash":"98844e8521a7635f4714daa53f1781708de013d4","messageTitle":"Add assertions","messageBody":"","tags":["A-Assertions"],"fileTypesAndContributionMap":{"java":{"insertions":10,"deletions":12}}},{"hash":"2c31cea72f91aa99bc208430942799ee312a0728","messageTitle":"Refactor Parse.parse() to comply with SLAP.","messageBody":"","tags":["A-CodeQuality"],"fileTypesAndContributionMap":{"java":{"insertions":85,"deletions":76}}},{"hash":"17cea3b152ecd532a41578264b21b00e0bfa536f","messageTitle":"Add TimedTask class which extends from Task class","messageBody":"Refactor Event and Deadline class to extend from TimedTask.\n","fileTypesAndContributionMap":{"java":{"insertions":34,"deletions":16}}},{"hash":"1804b8dfb3793e9e67b3f332a0352f9465a6f233","messageTitle":"Add Update command to Duke","messageBody":"Update command changes the specified fields of the task specified by\nthe input index.\n","tags":["C-Update"],"fileTypesAndContributionMap":{"java":{"insertions":113,"deletions":10}}}]},{"date":"2021-02-18","commitResults":[{"hash":"8e72f5b132127b6d56188feb57bba58fb7549f71","messageTitle":"Update README to include introduction and features of the bot","messageBody":"","fileTypesAndContributionMap":{"md":{"insertions":51,"deletions":16}}},{"hash":"be28f5172772ca6ffd3a3d59101b1ab3e7e7e063","messageTitle":"Add sorting of Task, by date created, description, isDone, icon","messageBody":"","tags":["C-Sort","BCD-Extension"],"fileTypesAndContributionMap":{"java":{"insertions":171,"deletions":25}}},{"hash":"2111087dfc840a5d59b0e2a4fd9348a2ff29f7ab","messageTitle":"Rename all Duke to Henchman","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":40,"deletions":40},"bat":{"insertions":1,"deletions":1},"md":{"insertions":2,"deletions":2}}}]},{"date":"2021-02-19","commitResults":[{"hash":"3d9ac43e2b96565833012db76c155f1819b547f2","messageTitle":"Search term in TaskList.findTasks() is now case-insensitive Update README","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":2,"deletions":1},"md":{"insertions":15,"deletions":8}}},{"hash":"7a62750514d439450284925a5aba68c596b869ff","messageTitle":"Update main README","messageBody":"","fileTypesAndContributionMap":{"md":{"insertions":62,"deletions":23}}},{"hash":"8d8c40a00a75b93f556529c826141557e685fc26","messageTitle":"Add app title and icon","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":5,"deletions":1}}},{"hash":"fb5ab89be253b74de958872afa4a71ff91345ee1","messageTitle":"Edit README to correct format","messageBody":"","tags":["A-UserGuide"],"fileTypesAndContributionMap":{"md":{"insertions":24,"deletions":12}}},{"hash":"3ea494e0b2dc532a925ca4d5982cd82e24ebc66d","messageTitle":"Update README with an example picture","messageBody":"","fileTypesAndContributionMap":{"md":{"insertions":4,"deletions":4}}},{"hash":"6dac949fe3824f5068ff44d5550145fbe132224e","messageTitle":"Change image format in README","messageBody":"","fileTypesAndContributionMap":{"md":{"insertions":1,"deletions":1}}},{"hash":"19b68a6b8d56fb45ce3c5d1b0d75df3b9d5d38a0","messageTitle":"Change all jpg to png","messageBody":"","fileTypesAndContributionMap":{"md":{"insertions":2,"deletions":2}}},{"hash":"a1b21198c1b8f916d321723b64c473066c45b5b9","messageTitle":"Add image into README","messageBody":"","fileTypesAndContributionMap":{"md":{"insertions":8,"deletions":2}}},{"hash":"9b7f2c73f21b7625473e1bf306f0a862f83b22c2","messageTitle":"Add image into README","messageBody":"","fileTypesAndContributionMap":{"md":{"insertions":2,"deletions":2}}},{"hash":"ac943c21aff903f38c1243df6c4b90000edc161a","messageTitle":"Change image size","messageBody":"","fileTypesAndContributionMap":{"md":{"insertions":2,"deletions":2}}},{"hash":"96c8499599c02d5036fdbb44bd9db3920db8933d","messageTitle":"Add all images into README","messageBody":"","fileTypesAndContributionMap":{"md":{"insertions":46,"deletions":4}}},{"hash":"e131f737ec5415b8c72d868aa77500f3fa5ffa92","messageTitle":"Add linebreaks to README for better formatting","messageBody":"","fileTypesAndContributionMap":{"md":{"insertions":16,"deletions":0}}},{"hash":"315b0e1399067a8f57daa3d27a1194fb5e8d2655","messageTitle":"Add more linebreaks for better formatting","messageBody":"","fileTypesAndContributionMap":{"md":{"insertions":12,"deletions":0}}},{"hash":"5eb343700c30723de9368658cd174c13801d276b","messageTitle":"Further format README","messageBody":"","tags":["v0.2"],"fileTypesAndContributionMap":{"md":{"insertions":4,"deletions":4}}},{"hash":"104696eb6d1d455ac5ee65a56613e0944b94bed3","messageTitle":"Change mainclass in build.gradle to build proper jar","messageBody":"","fileTypesAndContributionMap":{"gradle":{"insertions":2,"deletions":2}}},{"hash":"e52c913b99683b8b3ca8d5b53b53e84432795703","messageTitle":"Add JavaDoc for public classes and methods","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":213,"deletions":171}}},{"hash":"bd61d5d570d5f73be77ff3b44d03c629103c7d8c","messageTitle":"Capitalize all constants","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":73,"deletions":72}}},{"hash":"75dcdc549ca11e40e583719a2a6097fc810c12b2","messageTitle":"Format code to comply with checkstyle","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":91,"deletions":86}}},{"hash":"33d1e7c1a2475c90ae4c6d303197c591c28e9780","messageTitle":"Remove irrelevant test cases","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":4,"deletions":69}}}]}]},"authorFileTypeContributionMap":{"oeiyiping":{"java":1310,"md":202,"fxml":47,"sh":0,"bat":1,"gradle":17,"txt":7}},"authorContributionVariance":{"oeiyiping":50097.64},"authorDisplayNameMap":{"oeiyiping":"CS2103T-T12-3 OEI ..PING"}}
