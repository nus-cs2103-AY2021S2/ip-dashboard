{"authorDailyContributionsMap":{"oeiyiping":[{"date":"2021-01-20","commitResults":[{"hash":"ca92c56902efdebbecf18053f9f7aa035c9c387c","messageTitle":"Duke class: Add greet() and listen() instance methods","messageBody":"greet() prints the designated message.\n\nlisten() accepts a user command and echoes said command.\nAfter the printing the previous command, Duke then waits for a new\ncommand. Active listening via a while-loop allows Duke to repeatedly\ncarry out the above cycle until \"bye\" command is received.\n\nUpon initiating Duke object, greet() and listen() are called to\nimmediately greet and accept commands.\n","tags":["Level-1"],"fileTypesAndContributionMap":{"java":{"insertions":34,"deletions":0}}},{"hash":"417a3c3a2b3c1e032560cb302963e2820be81e58","messageTitle":"Duke class: add list attribute; add bye(), addToList(), printList()","messageBody":"Add list attribute to Duke class to support String storage.\n\nPackage actions to be done upon \"bye\" command into bye() method,\nhelps with modularity and SLAP principle.\n\naddToList() adds input String into the list attribute of Duke\nobject.\n\nprintList() prints all elements in list.\n\nChange listen() implementation from if-else to switch, for better\nsupport of handling numerous types of commands.\n","tags":["Level-2","A-Collections"],"fileTypesAndContributionMap":{"java":{"insertions":34,"deletions":7}}},{"hash":"ba2b3405c93b93efec80b46889eb7ff7454e38b6","messageTitle":"Add Task class","messageBody":"Add Task class for better representation of added tasks, instead of\nmerely using String. Task class can support the various required\nattributes of the tasks such as Done status.\n","tags":["A-Classes"],"fileTypesAndContributionMap":{"java":{"insertions":18,"deletions":0}}},{"hash":"278e86ec639d3b57650fc649b8b0dfb49c5e8a84","messageTitle":"Duke class: add taskDone() method, change list to list of Task","messageBody":"Change list of String to list of Task, rename list to tasks.\n\nPackage actions to be done upon \"done\" command into taskDone()\nmethod, helps with modularity and SLAP principle.\n","tags":["Level-3"],"fileTypesAndContributionMap":{"java":{"insertions":21,"deletions":8}}},{"hash":"df531f653c29a49f8a4345e2a6b4b19a83ecd1c4","messageTitle":"Add subclasses of Task: ToDo, Event, Deadline","messageBody":"","tags":["A-Inheritance"],"fileTypesAndContributionMap":{"java":{"insertions":33,"deletions":0}}},{"hash":"54f5268a7a113f5eecc4b66f139145186026b1f9","messageTitle":"Duke class: Add todo, event, deadline as supported commands","messageBody":"Add the above commands to specifically create the corresponding\nobject.\n\ntaskDone(): fix off-by-one bug\n\nFix minor typo in Deadline and Event class\n","tags":["Level-4"],"fileTypesAndContributionMap":{"java":{"insertions":32,"deletions":10}}},{"hash":"e1dac58a506d938dbca2f40ddf92e34a759fb6a1","messageTitle":"Change while-loop condition, and shift input prompt to end of loop","messageBody":"Change while-loop condition from while Duke isActive to\nscanner.hasNext(), as the former condition throws\nNoSuchElementException.\n\nShift the input prompt from start of while-loop to end of loop\ndue to the above loop condition change, as scanner.hasNext() blocks\nat the condition check, thus leading to the input prompt incorrectly\nappearing after the input has been given.\n","fileTypesAndContributionMap":{"java":{"insertions":6,"deletions":10}}},{"hash":"9aff544ba077745009b59b1f2438e4ebc8f00eb8","messageTitle":"Update test cases in input.txt, and expected output in EXPECTED.TXT","messageBody":"The input test cases tests for all the necessary functionalities as\ndefined in Levels 1 to 4. Test cases do not test for unsupported\ninput (eg. \"event assignment\", where the expected \"/at time\" is not\nprovided.\n","tags":["A-TextUiTesting"],"fileTypesAndContributionMap":{"txt":{"insertions":7,"deletions":0},"bat":{"insertions":2,"deletions":2}}},{"hash":"43aa62544a7e16cf4b28f2cbc46e9402c9183164","messageTitle":"Shift while-loop to outside of listen()","messageBody":"listen() now takes in a string argument to carry out the command.\nIt makes more sense for listen() to be responsible only for command\nexecution, without handling any of the while-loop logic. while-loop\nlogic should be handled by the caller (Duke) instead.\n","fileTypesAndContributionMap":{"java":{"insertions":43,"deletions":40}}},{"hash":"c269ad5fdbed51bbd564e54a4c783b00f8e3f491","messageTitle":"Add Exception for each of the Task subclasses","messageBody":"The above change is to facilitate customized handling of the errors\nthat arise from each of the Task subclasses.\n","tags":["A-Exceptions"],"fileTypesAndContributionMap":{"java":{"insertions":25,"deletions":0}}},{"hash":"b1ae8ba04ff7007d6ac05a526387f06e94640a56","messageTitle":"Add exception handling to Duke class","messageBody":"All the Task subclasses throw their corresponding exceptions, with\neach of the exceptions handled by the Duke object.\n","tags":["Level-5"],"fileTypesAndContributionMap":{"java":{"insertions":41,"deletions":15}}},{"hash":"f92b3b3da9685838f8e002bbc14b026273e4c99f","messageTitle":"Duke class: Add delete function","messageBody":"Add the capability to delete previously added tasks from the list.\n","tags":["Level-6"],"fileTypesAndContributionMap":{"java":{"insertions":17,"deletions":7}}}]}]},"authorFileTypeContributionMap":{"oeiyiping":{"java":206,"md":0,"fxml":0,"sh":0,"bat":1,"gradle":0,"txt":7}},"authorContributionVariance":{"oeiyiping":15276.959},"authorDisplayNameMap":{"oeiyiping":"OEI ..PING"}}
