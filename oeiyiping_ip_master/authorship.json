[{"path":"README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"oeiyiping"},"content":"# User Guide"},{"lineNumber":2,"author":{"gitId":"oeiyiping"},"content":"Henchman is your loyal Task Manager application built using Java 11."},{"lineNumber":3,"author":{"gitId":"oeiyiping"},"content":"Henchman can help track all your tasks and their deadlines, so feel free to order him around. Go on to the **Features** section to test out the commands! "},{"lineNumber":4,"author":{"gitId":"oeiyiping"},"content":"---"},{"lineNumber":5,"author":{"gitId":"oeiyiping"},"content":"## Features "},{"lineNumber":6,"author":{"gitId":"oeiyiping"},"content":"Note: All commands are case insensitive."},{"lineNumber":7,"author":{"gitId":"oeiyiping"},"content":""},{"lineNumber":8,"author":{"gitId":"oeiyiping"},"content":"### Create a ToDo task:"},{"lineNumber":9,"author":{"gitId":"oeiyiping"},"content":"* Description: Adds new ToDo task to your list of tasks."},{"lineNumber":10,"author":{"gitId":"oeiyiping"},"content":"* Command: `todo`"},{"lineNumber":11,"author":{"gitId":"oeiyiping"},"content":"* Format: `todo \u003cdescription\u003e`"},{"lineNumber":12,"author":{"gitId":"oeiyiping"},"content":"* Note: `\u003cdescription\u003e` cannot be empty."},{"lineNumber":13,"author":{"gitId":"oeiyiping"},"content":"* Example: "},{"lineNumber":14,"author":{"gitId":"oeiyiping"},"content":"\u003cp align\u003d\"left\"\u003e"},{"lineNumber":15,"author":{"gitId":"oeiyiping"},"content":"  \u003cimg width\u003d\"50%\" src\u003d\"https://github.com/oeiyiping/ip/blob/master/screenshots/todo.png?raw\u003dtrue\"\u003e"},{"lineNumber":16,"author":{"gitId":"oeiyiping"},"content":"  \u003cbr /\u003e"},{"lineNumber":17,"author":{"gitId":"oeiyiping"},"content":"  \u003cbr /\u003e"},{"lineNumber":18,"author":{"gitId":"oeiyiping"},"content":"\u003c/p\u003e"},{"lineNumber":19,"author":{"gitId":"oeiyiping"},"content":""},{"lineNumber":20,"author":{"gitId":"oeiyiping"},"content":"### Create an Event task:"},{"lineNumber":21,"author":{"gitId":"oeiyiping"},"content":"* Description: Adds new Event, with the specified event time, task to your list of tasks."},{"lineNumber":22,"author":{"gitId":"oeiyiping"},"content":"* Command: `event`"},{"lineNumber":23,"author":{"gitId":"oeiyiping"},"content":"* Format: `event \u003cdescription\u003e /at \u003cYYYY-MM-DD\u003e \u003cHH:mm\u003e`"},{"lineNumber":24,"author":{"gitId":"oeiyiping"},"content":"* Note: `\u003cdescription\u003e` and `\u003cdate\u003e` cannot be empty; `\u003ctime\u003e` is optional."},{"lineNumber":25,"author":{"gitId":"oeiyiping"},"content":"* Example:"},{"lineNumber":26,"author":{"gitId":"oeiyiping"},"content":"\u003cp align\u003d\"left\"\u003e"},{"lineNumber":27,"author":{"gitId":"oeiyiping"},"content":"  \u003cimg width\u003d\"50%\" src\u003d\"https://github.com/oeiyiping/ip/blob/master/screenshots/event.png?raw\u003dtrue\"\u003e"},{"lineNumber":28,"author":{"gitId":"oeiyiping"},"content":"  \u003cbr /\u003e"},{"lineNumber":29,"author":{"gitId":"oeiyiping"},"content":"  \u003cbr /\u003e"},{"lineNumber":30,"author":{"gitId":"oeiyiping"},"content":"\u003c/p\u003e"},{"lineNumber":31,"author":{"gitId":"oeiyiping"},"content":""},{"lineNumber":32,"author":{"gitId":"oeiyiping"},"content":"### Create a Deadline task:"},{"lineNumber":33,"author":{"gitId":"oeiyiping"},"content":"* Description: Adds new Deadline task, with the specified deadline, to your list of tasks."},{"lineNumber":34,"author":{"gitId":"oeiyiping"},"content":"* Command: `deadline`"},{"lineNumber":35,"author":{"gitId":"oeiyiping"},"content":"* Format: `deadline \u003cdescription\u003e /by \u003cYYYY-MM-DD\u003e \u003cHH:mm\u003e`"},{"lineNumber":36,"author":{"gitId":"oeiyiping"},"content":"* Note: `\u003cdescription\u003e` and `\u003cdate\u003e` cannot be empty; `\u003ctime\u003e` is optional."},{"lineNumber":37,"author":{"gitId":"oeiyiping"},"content":"* Example:"},{"lineNumber":38,"author":{"gitId":"oeiyiping"},"content":"\u003cp align\u003d\"left\"\u003e"},{"lineNumber":39,"author":{"gitId":"oeiyiping"},"content":"  \u003cimg width\u003d\"50%\" src\u003d\"https://github.com/oeiyiping/ip/blob/master/screenshots/deadline.png?raw\u003dtrue\"\u003e"},{"lineNumber":40,"author":{"gitId":"oeiyiping"},"content":"  \u003cbr /\u003e"},{"lineNumber":41,"author":{"gitId":"oeiyiping"},"content":"  \u003cbr /\u003e"},{"lineNumber":42,"author":{"gitId":"oeiyiping"},"content":"\u003c/p\u003e"},{"lineNumber":43,"author":{"gitId":"oeiyiping"},"content":""},{"lineNumber":44,"author":{"gitId":"oeiyiping"},"content":"### Delete a task:"},{"lineNumber":45,"author":{"gitId":"oeiyiping"},"content":"* Description: Deletes the task specified by its input index."},{"lineNumber":46,"author":{"gitId":"oeiyiping"},"content":"* Command: `delete`"},{"lineNumber":47,"author":{"gitId":"oeiyiping"},"content":"* Format: `delete \u003ctask index\u003e`"},{"lineNumber":48,"author":{"gitId":"oeiyiping"},"content":"* Note: `\u003ctask index\u003e` cannot be empty."},{"lineNumber":49,"author":{"gitId":"oeiyiping"},"content":"* Example: "},{"lineNumber":50,"author":{"gitId":"oeiyiping"},"content":"\u003cp align\u003d\"left\"\u003e"},{"lineNumber":51,"author":{"gitId":"oeiyiping"},"content":"  \u003cimg width\u003d\"50%\" src\u003d\"https://github.com/oeiyiping/ip/blob/master/screenshots/delete.png?raw\u003dtrue\"\u003e"},{"lineNumber":52,"author":{"gitId":"oeiyiping"},"content":"  \u003cbr /\u003e"},{"lineNumber":53,"author":{"gitId":"oeiyiping"},"content":"  \u003cbr /\u003e"},{"lineNumber":54,"author":{"gitId":"oeiyiping"},"content":"\u003c/p\u003e"},{"lineNumber":55,"author":{"gitId":"oeiyiping"},"content":""},{"lineNumber":56,"author":{"gitId":"oeiyiping"},"content":"### Mark a task as done:"},{"lineNumber":57,"author":{"gitId":"oeiyiping"},"content":"* Description: Marks the task specified by its input index as done."},{"lineNumber":58,"author":{"gitId":"oeiyiping"},"content":"* Command: `done`"},{"lineNumber":59,"author":{"gitId":"oeiyiping"},"content":"* Format: `done \u003ctask index\u003e`"},{"lineNumber":60,"author":{"gitId":"oeiyiping"},"content":"* Note: `\u003ctask index\u003e` cannot be empty."},{"lineNumber":61,"author":{"gitId":"oeiyiping"},"content":"* Example:"},{"lineNumber":62,"author":{"gitId":"oeiyiping"},"content":"\u003cp align\u003d\"left\"\u003e"},{"lineNumber":63,"author":{"gitId":"oeiyiping"},"content":"  \u003cimg width\u003d\"50%\" src\u003d\"https://github.com/oeiyiping/ip/blob/master/screenshots/done.png?raw\u003dtrue\"\u003e"},{"lineNumber":64,"author":{"gitId":"oeiyiping"},"content":"  \u003cbr /\u003e"},{"lineNumber":65,"author":{"gitId":"oeiyiping"},"content":"  \u003cbr /\u003e"},{"lineNumber":66,"author":{"gitId":"oeiyiping"},"content":"\u003c/p\u003e"},{"lineNumber":67,"author":{"gitId":"oeiyiping"},"content":""},{"lineNumber":68,"author":{"gitId":"oeiyiping"},"content":"### List all tasks:"},{"lineNumber":69,"author":{"gitId":"oeiyiping"},"content":"* Description: Lists all tasks currently in the task list."},{"lineNumber":70,"author":{"gitId":"oeiyiping"},"content":"* Command: `list`"},{"lineNumber":71,"author":{"gitId":"oeiyiping"},"content":"* Format: `list`"},{"lineNumber":72,"author":{"gitId":"oeiyiping"},"content":"* Note: Just `list` is enough."},{"lineNumber":73,"author":{"gitId":"oeiyiping"},"content":"* Example: "},{"lineNumber":74,"author":{"gitId":"oeiyiping"},"content":"\u003cp align\u003d\"left\"\u003e"},{"lineNumber":75,"author":{"gitId":"oeiyiping"},"content":"  \u003cimg width\u003d\"50%\" src\u003d\"https://github.com/oeiyiping/ip/blob/master/screenshots/list.png?raw\u003dtrue\"\u003e"},{"lineNumber":76,"author":{"gitId":"oeiyiping"},"content":"  \u003cbr /\u003e"},{"lineNumber":77,"author":{"gitId":"oeiyiping"},"content":"  \u003cbr /\u003e"},{"lineNumber":78,"author":{"gitId":"oeiyiping"},"content":"\u003c/p\u003e"},{"lineNumber":79,"author":{"gitId":"oeiyiping"},"content":""},{"lineNumber":80,"author":{"gitId":"oeiyiping"},"content":"### Find tasks: "},{"lineNumber":81,"author":{"gitId":"oeiyiping"},"content":"* Description: Finds all tasks containing the specified search term."},{"lineNumber":82,"author":{"gitId":"oeiyiping"},"content":"* Command: `find`"},{"lineNumber":83,"author":{"gitId":"oeiyiping"},"content":"* Format: `find \u003csearch term\u003e`"},{"lineNumber":84,"author":{"gitId":"oeiyiping"},"content":"* Note: `\u003csearch term\u003e` can even be a phrase, and is case insensitive."},{"lineNumber":85,"author":{"gitId":"oeiyiping"},"content":"* Example:"},{"lineNumber":86,"author":{"gitId":"oeiyiping"},"content":"\u003cp align\u003d\"left\"\u003e"},{"lineNumber":87,"author":{"gitId":"oeiyiping"},"content":"  \u003cimg width\u003d\"50%\" src\u003d\"https://github.com/oeiyiping/ip/blob/master/screenshots/find.png?raw\u003dtrue\"\u003e"},{"lineNumber":88,"author":{"gitId":"oeiyiping"},"content":"  \u003cbr /\u003e"},{"lineNumber":89,"author":{"gitId":"oeiyiping"},"content":"  \u003cbr /\u003e"},{"lineNumber":90,"author":{"gitId":"oeiyiping"},"content":"\u003c/p\u003e"},{"lineNumber":91,"author":{"gitId":"oeiyiping"},"content":""},{"lineNumber":92,"author":{"gitId":"oeiyiping"},"content":"### Sort tasks: "},{"lineNumber":93,"author":{"gitId":"oeiyiping"},"content":"* Description: Sort all tasks according to the sort key."},{"lineNumber":94,"author":{"gitId":"oeiyiping"},"content":"* Command: `sort`"},{"lineNumber":95,"author":{"gitId":"oeiyiping"},"content":"* Format: `sort \u003csort key\u003e`"},{"lineNumber":96,"author":{"gitId":"oeiyiping"},"content":"* Key (case insensitive):"},{"lineNumber":97,"author":{"gitId":"oeiyiping"},"content":"    *  `created`: sort by task created date"},{"lineNumber":98,"author":{"gitId":"oeiyiping"},"content":"    *  `description`: sort by task description"},{"lineNumber":99,"author":{"gitId":"oeiyiping"},"content":"    *  `done`: sort by task done status, with unfinished tasks first"},{"lineNumber":100,"author":{"gitId":"oeiyiping"},"content":"    *  `end`: sort by task end date"},{"lineNumber":101,"author":{"gitId":"oeiyiping"},"content":"    *  `type`: sort by task type"},{"lineNumber":102,"author":{"gitId":"oeiyiping"},"content":"* Note: If no sort key is provided, sort by task created date by default. "},{"lineNumber":103,"author":{"gitId":"oeiyiping"},"content":"* Example:"},{"lineNumber":104,"author":{"gitId":"oeiyiping"},"content":"\u003cp align\u003d\"left\"\u003e"},{"lineNumber":105,"author":{"gitId":"oeiyiping"},"content":"  \u003cimg width\u003d\"50%\" src\u003d\"https://github.com/oeiyiping/ip/blob/master/screenshots/sort.png?raw\u003dtrue\"\u003e"},{"lineNumber":106,"author":{"gitId":"oeiyiping"},"content":"\u003c/p\u003e"}],"authorContributionMap":{"oeiyiping":106}},{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027checkstyle\u0027"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027"},{"lineNumber":6,"author":{"gitId":"-"},"content":"}"},{"lineNumber":7,"author":{"gitId":"-"},"content":""},{"lineNumber":8,"author":{"gitId":"-"},"content":"repositories {"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    mavenCentral()"},{"lineNumber":10,"author":{"gitId":"-"},"content":"}"},{"lineNumber":11,"author":{"gitId":"-"},"content":""},{"lineNumber":12,"author":{"gitId":"-"},"content":"dependencies {"},{"lineNumber":13,"author":{"gitId":"oeiyiping"},"content":"    implementation \u0027junit:junit:4.12\u0027"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.5.0\u0027"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.5.0\u0027"},{"lineNumber":16,"author":{"gitId":"oeiyiping"},"content":""},{"lineNumber":17,"author":{"gitId":"oeiyiping"},"content":"    String javaFxVersion \u003d \u002711\u0027"},{"lineNumber":18,"author":{"gitId":"oeiyiping"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027"},{"lineNumber":19,"author":{"gitId":"oeiyiping"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"},{"lineNumber":20,"author":{"gitId":"oeiyiping"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"},{"lineNumber":21,"author":{"gitId":"oeiyiping"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027"},{"lineNumber":22,"author":{"gitId":"oeiyiping"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"},{"lineNumber":23,"author":{"gitId":"oeiyiping"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"},{"lineNumber":24,"author":{"gitId":"oeiyiping"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027"},{"lineNumber":25,"author":{"gitId":"oeiyiping"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"},{"lineNumber":26,"author":{"gitId":"oeiyiping"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"},{"lineNumber":27,"author":{"gitId":"oeiyiping"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027"},{"lineNumber":28,"author":{"gitId":"oeiyiping"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"},{"lineNumber":29,"author":{"gitId":"oeiyiping"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"},{"lineNumber":30,"author":{"gitId":"-"},"content":"}"},{"lineNumber":31,"author":{"gitId":"-"},"content":""},{"lineNumber":32,"author":{"gitId":"-"},"content":"test {"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    useJUnitPlatform()"},{"lineNumber":34,"author":{"gitId":"-"},"content":""},{"lineNumber":35,"author":{"gitId":"-"},"content":"    testLogging {"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\""},{"lineNumber":37,"author":{"gitId":"-"},"content":"        showExceptions true"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\""},{"lineNumber":39,"author":{"gitId":"-"},"content":"        showCauses true"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        showStackTraces true"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":43,"author":{"gitId":"-"},"content":"}"},{"lineNumber":44,"author":{"gitId":"-"},"content":""},{"lineNumber":45,"author":{"gitId":"-"},"content":"application {"},{"lineNumber":46,"author":{"gitId":"oeiyiping"},"content":"    mainClassName \u003d \"HenchmanLauncher\""},{"lineNumber":47,"author":{"gitId":"-"},"content":"}"},{"lineNumber":48,"author":{"gitId":"-"},"content":""},{"lineNumber":49,"author":{"gitId":"-"},"content":"shadowJar {"},{"lineNumber":50,"author":{"gitId":"oeiyiping"},"content":"    archiveBaseName \u003d \"Henchman\""},{"lineNumber":51,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null"},{"lineNumber":52,"author":{"gitId":"-"},"content":"}"},{"lineNumber":53,"author":{"gitId":"-"},"content":""},{"lineNumber":54,"author":{"gitId":"-"},"content":"checkstyle {"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    toolVersion \u003d \u00278.29\u0027"},{"lineNumber":56,"author":{"gitId":"-"},"content":"}"},{"lineNumber":57,"author":{"gitId":"-"},"content":""},{"lineNumber":58,"author":{"gitId":"-"},"content":"run{"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in"},{"lineNumber":60,"author":{"gitId":"-"},"content":"}"}],"authorContributionMap":{"oeiyiping":17,"-":43}},{"path":"docs/README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"# User Guide"},{"lineNumber":2,"author":{"gitId":"oeiyiping"},"content":"Henchman is your loyal Task Manager application built using Java 11."},{"lineNumber":3,"author":{"gitId":"oeiyiping"},"content":"Henchman can help track all your tasks and their deadlines, so feel free to order him around. Go on to the **Features** section to test out the commands! "},{"lineNumber":4,"author":{"gitId":"oeiyiping"},"content":"---"},{"lineNumber":5,"author":{"gitId":"-"},"content":"## Features "},{"lineNumber":6,"author":{"gitId":"oeiyiping"},"content":"Note: All commands are case insensitive."},{"lineNumber":7,"author":{"gitId":"-"},"content":""},{"lineNumber":8,"author":{"gitId":"oeiyiping"},"content":"### Create a ToDo task:"},{"lineNumber":9,"author":{"gitId":"oeiyiping"},"content":"* Description: Adds new ToDo task to your list of tasks."},{"lineNumber":10,"author":{"gitId":"oeiyiping"},"content":"* Command: `todo`"},{"lineNumber":11,"author":{"gitId":"oeiyiping"},"content":"* Format: `todo \u003cdescription\u003e`"},{"lineNumber":12,"author":{"gitId":"oeiyiping"},"content":"* Note: `\u003cdescription\u003e` cannot be empty."},{"lineNumber":13,"author":{"gitId":"oeiyiping"},"content":"* Example: "},{"lineNumber":14,"author":{"gitId":"oeiyiping"},"content":"\u003cp align\u003d\"left\"\u003e"},{"lineNumber":15,"author":{"gitId":"oeiyiping"},"content":"  \u003cimg width\u003d\"50%\" src\u003d\"https://github.com/oeiyiping/ip/blob/master/screenshots/todo.png?raw\u003dtrue\"\u003e"},{"lineNumber":16,"author":{"gitId":"oeiyiping"},"content":"  \u003cbr /\u003e"},{"lineNumber":17,"author":{"gitId":"oeiyiping"},"content":"  \u003cbr /\u003e"},{"lineNumber":18,"author":{"gitId":"oeiyiping"},"content":"\u003c/p\u003e"},{"lineNumber":19,"author":{"gitId":"-"},"content":""},{"lineNumber":20,"author":{"gitId":"oeiyiping"},"content":"### Create an Event task:"},{"lineNumber":21,"author":{"gitId":"oeiyiping"},"content":"* Description: Adds new Event, with the specified event time, task to your list of tasks."},{"lineNumber":22,"author":{"gitId":"oeiyiping"},"content":"* Command: `event`"},{"lineNumber":23,"author":{"gitId":"oeiyiping"},"content":"* Format: `event \u003cdescription\u003e /at \u003cYYYY-MM-DD\u003e \u003cHH:mm\u003e`"},{"lineNumber":24,"author":{"gitId":"oeiyiping"},"content":"* Note: `\u003cdescription\u003e` and `\u003cdate\u003e` cannot be empty; `\u003ctime\u003e` is optional."},{"lineNumber":25,"author":{"gitId":"oeiyiping"},"content":"* Example:"},{"lineNumber":26,"author":{"gitId":"oeiyiping"},"content":"\u003cp align\u003d\"left\"\u003e"},{"lineNumber":27,"author":{"gitId":"oeiyiping"},"content":"  \u003cimg width\u003d\"50%\" src\u003d\"https://github.com/oeiyiping/ip/blob/master/screenshots/event.png?raw\u003dtrue\"\u003e"},{"lineNumber":28,"author":{"gitId":"oeiyiping"},"content":"  \u003cbr /\u003e"},{"lineNumber":29,"author":{"gitId":"oeiyiping"},"content":"  \u003cbr /\u003e"},{"lineNumber":30,"author":{"gitId":"oeiyiping"},"content":"\u003c/p\u003e"},{"lineNumber":31,"author":{"gitId":"-"},"content":""},{"lineNumber":32,"author":{"gitId":"oeiyiping"},"content":"### Create a Deadline task:"},{"lineNumber":33,"author":{"gitId":"oeiyiping"},"content":"* Description: Adds new Deadline task, with the specified deadline, to your list of tasks."},{"lineNumber":34,"author":{"gitId":"oeiyiping"},"content":"* Command: `deadline`"},{"lineNumber":35,"author":{"gitId":"oeiyiping"},"content":"* Format: `deadline \u003cdescription\u003e /by \u003cYYYY-MM-DD\u003e \u003cHH:mm\u003e`"},{"lineNumber":36,"author":{"gitId":"oeiyiping"},"content":"* Note: `\u003cdescription\u003e` and `\u003cdate\u003e` cannot be empty; `\u003ctime\u003e` is optional."},{"lineNumber":37,"author":{"gitId":"oeiyiping"},"content":"* Example:"},{"lineNumber":38,"author":{"gitId":"oeiyiping"},"content":"\u003cp align\u003d\"left\"\u003e"},{"lineNumber":39,"author":{"gitId":"oeiyiping"},"content":"  \u003cimg width\u003d\"50%\" src\u003d\"https://github.com/oeiyiping/ip/blob/master/screenshots/deadline.png?raw\u003dtrue\"\u003e"},{"lineNumber":40,"author":{"gitId":"oeiyiping"},"content":"  \u003cbr /\u003e"},{"lineNumber":41,"author":{"gitId":"oeiyiping"},"content":"  \u003cbr /\u003e"},{"lineNumber":42,"author":{"gitId":"oeiyiping"},"content":"\u003c/p\u003e"},{"lineNumber":43,"author":{"gitId":"-"},"content":""},{"lineNumber":44,"author":{"gitId":"oeiyiping"},"content":"### Delete a task:"},{"lineNumber":45,"author":{"gitId":"oeiyiping"},"content":"* Description: Deletes the task specified by its input index."},{"lineNumber":46,"author":{"gitId":"oeiyiping"},"content":"* Command: `delete`"},{"lineNumber":47,"author":{"gitId":"oeiyiping"},"content":"* Format: `delete \u003ctask index\u003e`"},{"lineNumber":48,"author":{"gitId":"oeiyiping"},"content":"* Note: `\u003ctask index\u003e` cannot be empty."},{"lineNumber":49,"author":{"gitId":"oeiyiping"},"content":"* Example: "},{"lineNumber":50,"author":{"gitId":"oeiyiping"},"content":"\u003cp align\u003d\"left\"\u003e"},{"lineNumber":51,"author":{"gitId":"oeiyiping"},"content":"  \u003cimg width\u003d\"50%\" src\u003d\"https://github.com/oeiyiping/ip/blob/master/screenshots/delete.png?raw\u003dtrue\"\u003e"},{"lineNumber":52,"author":{"gitId":"oeiyiping"},"content":"  \u003cbr /\u003e"},{"lineNumber":53,"author":{"gitId":"oeiyiping"},"content":"  \u003cbr /\u003e"},{"lineNumber":54,"author":{"gitId":"oeiyiping"},"content":"\u003c/p\u003e"},{"lineNumber":55,"author":{"gitId":"-"},"content":""},{"lineNumber":56,"author":{"gitId":"oeiyiping"},"content":"### Mark a task as done:"},{"lineNumber":57,"author":{"gitId":"oeiyiping"},"content":"* Description: Marks the task specified by its input index as done."},{"lineNumber":58,"author":{"gitId":"oeiyiping"},"content":"* Command: `done`"},{"lineNumber":59,"author":{"gitId":"oeiyiping"},"content":"* Format: `done \u003ctask index\u003e`"},{"lineNumber":60,"author":{"gitId":"oeiyiping"},"content":"* Note: `\u003ctask index\u003e` cannot be empty."},{"lineNumber":61,"author":{"gitId":"oeiyiping"},"content":"* Example:"},{"lineNumber":62,"author":{"gitId":"oeiyiping"},"content":"\u003cp align\u003d\"left\"\u003e"},{"lineNumber":63,"author":{"gitId":"oeiyiping"},"content":"  \u003cimg width\u003d\"50%\" src\u003d\"https://github.com/oeiyiping/ip/blob/master/screenshots/done.png?raw\u003dtrue\"\u003e"},{"lineNumber":64,"author":{"gitId":"oeiyiping"},"content":"  \u003cbr /\u003e"},{"lineNumber":65,"author":{"gitId":"oeiyiping"},"content":"  \u003cbr /\u003e"},{"lineNumber":66,"author":{"gitId":"oeiyiping"},"content":"\u003c/p\u003e"},{"lineNumber":67,"author":{"gitId":"-"},"content":""},{"lineNumber":68,"author":{"gitId":"oeiyiping"},"content":"### List all tasks:"},{"lineNumber":69,"author":{"gitId":"oeiyiping"},"content":"* Description: Lists all tasks currently in the task list."},{"lineNumber":70,"author":{"gitId":"oeiyiping"},"content":"* Command: `list`"},{"lineNumber":71,"author":{"gitId":"oeiyiping"},"content":"* Format: `list`"},{"lineNumber":72,"author":{"gitId":"oeiyiping"},"content":"* Note: Just `list` is enough."},{"lineNumber":73,"author":{"gitId":"oeiyiping"},"content":"* Example: "},{"lineNumber":74,"author":{"gitId":"oeiyiping"},"content":"\u003cp align\u003d\"left\"\u003e"},{"lineNumber":75,"author":{"gitId":"oeiyiping"},"content":"  \u003cimg width\u003d\"50%\" src\u003d\"https://github.com/oeiyiping/ip/blob/master/screenshots/list.png?raw\u003dtrue\"\u003e"},{"lineNumber":76,"author":{"gitId":"oeiyiping"},"content":"  \u003cbr /\u003e"},{"lineNumber":77,"author":{"gitId":"oeiyiping"},"content":"  \u003cbr /\u003e"},{"lineNumber":78,"author":{"gitId":"oeiyiping"},"content":"\u003c/p\u003e"},{"lineNumber":79,"author":{"gitId":"-"},"content":""},{"lineNumber":80,"author":{"gitId":"oeiyiping"},"content":"### Find tasks: "},{"lineNumber":81,"author":{"gitId":"oeiyiping"},"content":"* Description: Finds all tasks containing the specified search term."},{"lineNumber":82,"author":{"gitId":"oeiyiping"},"content":"* Command: `find`"},{"lineNumber":83,"author":{"gitId":"oeiyiping"},"content":"* Format: `find \u003csearch term\u003e`"},{"lineNumber":84,"author":{"gitId":"oeiyiping"},"content":"* Note: `\u003csearch term\u003e` can even be a phrase, and is case insensitive."},{"lineNumber":85,"author":{"gitId":"oeiyiping"},"content":"* Example:"},{"lineNumber":86,"author":{"gitId":"oeiyiping"},"content":"\u003cp align\u003d\"left\"\u003e"},{"lineNumber":87,"author":{"gitId":"oeiyiping"},"content":"  \u003cimg width\u003d\"50%\" src\u003d\"https://github.com/oeiyiping/ip/blob/master/screenshots/find.png?raw\u003dtrue\"\u003e"},{"lineNumber":88,"author":{"gitId":"oeiyiping"},"content":"  \u003cbr /\u003e"},{"lineNumber":89,"author":{"gitId":"oeiyiping"},"content":"  \u003cbr /\u003e"},{"lineNumber":90,"author":{"gitId":"oeiyiping"},"content":"\u003c/p\u003e"},{"lineNumber":91,"author":{"gitId":"-"},"content":""},{"lineNumber":92,"author":{"gitId":"oeiyiping"},"content":"### Sort tasks: "},{"lineNumber":93,"author":{"gitId":"oeiyiping"},"content":"* Description: Sort all tasks according to the sort key."},{"lineNumber":94,"author":{"gitId":"oeiyiping"},"content":"* Command: `sort`"},{"lineNumber":95,"author":{"gitId":"oeiyiping"},"content":"* Format: `sort \u003csort key\u003e`"},{"lineNumber":96,"author":{"gitId":"oeiyiping"},"content":"* Key (case insensitive):"},{"lineNumber":97,"author":{"gitId":"oeiyiping"},"content":"    *  `created`: sort by task created date"},{"lineNumber":98,"author":{"gitId":"oeiyiping"},"content":"    *  `description`: sort by task description"},{"lineNumber":99,"author":{"gitId":"oeiyiping"},"content":"    *  `done`: sort by task done status, with unfinished tasks first"},{"lineNumber":100,"author":{"gitId":"oeiyiping"},"content":"    *  `end`: sort by task end date"},{"lineNumber":101,"author":{"gitId":"oeiyiping"},"content":"    *  `type`: sort by task type"},{"lineNumber":102,"author":{"gitId":"oeiyiping"},"content":"* Note: If no sort key is provided, sort by task created date by default. "},{"lineNumber":103,"author":{"gitId":"oeiyiping"},"content":"* Example:"},{"lineNumber":104,"author":{"gitId":"oeiyiping"},"content":"\u003cp align\u003d\"left\"\u003e"},{"lineNumber":105,"author":{"gitId":"oeiyiping"},"content":"  \u003cimg width\u003d\"50%\" src\u003d\"https://github.com/oeiyiping/ip/blob/master/screenshots/sort.png?raw\u003dtrue\"\u003e"},{"lineNumber":106,"author":{"gitId":"oeiyiping"},"content":"\u003c/p\u003e"}],"authorContributionMap":{"oeiyiping":96,"-":10}},{"path":"src/main/java/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"oeiyiping"},"content":"/**"},{"lineNumber":2,"author":{"gitId":"oeiyiping"},"content":" * Represents a valid Command for the Henchman object."},{"lineNumber":3,"author":{"gitId":"oeiyiping"},"content":" */"},{"lineNumber":4,"author":{"gitId":"oeiyiping"},"content":"public abstract class Command {"},{"lineNumber":5,"author":{"gitId":"oeiyiping"},"content":"    public abstract String execute(TaskList tasks, Storage storage);"},{"lineNumber":6,"author":{"gitId":"oeiyiping"},"content":"    public abstract String toHenchmanOutput();"},{"lineNumber":7,"author":{"gitId":"oeiyiping"},"content":"}"}],"authorContributionMap":{"oeiyiping":7}},{"path":"src/main/java/CommandBye.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"oeiyiping"},"content":"/**"},{"lineNumber":2,"author":{"gitId":"oeiyiping"},"content":" * Represents the Command for \"bye\" for the Henchman object. CommandBye helps to close and prepare Duke object for"},{"lineNumber":3,"author":{"gitId":"oeiyiping"},"content":" * ending the run."},{"lineNumber":4,"author":{"gitId":"oeiyiping"},"content":" */"},{"lineNumber":5,"author":{"gitId":"oeiyiping"},"content":"public class CommandBye extends Command {"},{"lineNumber":6,"author":{"gitId":"oeiyiping"},"content":"    /**"},{"lineNumber":7,"author":{"gitId":"oeiyiping"},"content":"     * Prints bye message."},{"lineNumber":8,"author":{"gitId":"oeiyiping"},"content":"     *"},{"lineNumber":9,"author":{"gitId":"oeiyiping"},"content":"     * @param tasks TaskList of Henchman object"},{"lineNumber":10,"author":{"gitId":"oeiyiping"},"content":"     * @param storage Storage of Henchman object"},{"lineNumber":11,"author":{"gitId":"oeiyiping"},"content":"     */"},{"lineNumber":12,"author":{"gitId":"oeiyiping"},"content":"    @Override"},{"lineNumber":13,"author":{"gitId":"oeiyiping"},"content":"    public String execute(TaskList tasks, Storage storage) {"},{"lineNumber":14,"author":{"gitId":"oeiyiping"},"content":"        return this.toHenchmanOutput();"},{"lineNumber":15,"author":{"gitId":"oeiyiping"},"content":"    }"},{"lineNumber":16,"author":{"gitId":"oeiyiping"},"content":""},{"lineNumber":17,"author":{"gitId":"oeiyiping"},"content":"    /**"},{"lineNumber":18,"author":{"gitId":"oeiyiping"},"content":"     * Returns the string representation of the message to be printed."},{"lineNumber":19,"author":{"gitId":"oeiyiping"},"content":"     *"},{"lineNumber":20,"author":{"gitId":"oeiyiping"},"content":"     * @return String representation of the message to be printed."},{"lineNumber":21,"author":{"gitId":"oeiyiping"},"content":"     */"},{"lineNumber":22,"author":{"gitId":"oeiyiping"},"content":"    @Override"},{"lineNumber":23,"author":{"gitId":"oeiyiping"},"content":"    public String toHenchmanOutput() {"},{"lineNumber":24,"author":{"gitId":"oeiyiping"},"content":"        return \"I see you\u0027re done for now boss, see you soon!\";"},{"lineNumber":25,"author":{"gitId":"oeiyiping"},"content":"    }"},{"lineNumber":26,"author":{"gitId":"oeiyiping"},"content":"}"}],"authorContributionMap":{"oeiyiping":26}},{"path":"src/main/java/CommandClear.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"oeiyiping"},"content":"/**"},{"lineNumber":2,"author":{"gitId":"oeiyiping"},"content":" * Represents the Command for \"clear\" for the Henchman object. CommandClear helps to clear all tasks in TaskList."},{"lineNumber":3,"author":{"gitId":"oeiyiping"},"content":" */"},{"lineNumber":4,"author":{"gitId":"oeiyiping"},"content":"public class CommandClear extends Command {"},{"lineNumber":5,"author":{"gitId":"oeiyiping"},"content":"    /**"},{"lineNumber":6,"author":{"gitId":"oeiyiping"},"content":"     * Removes all tasks in tasks and saves the new empty list via storage"},{"lineNumber":7,"author":{"gitId":"oeiyiping"},"content":"     *"},{"lineNumber":8,"author":{"gitId":"oeiyiping"},"content":"     * @param tasks TaskList of in which all tasks are cleared."},{"lineNumber":9,"author":{"gitId":"oeiyiping"},"content":"     * @param storage Storage of Henchman object."},{"lineNumber":10,"author":{"gitId":"oeiyiping"},"content":"     * @return Return message upon successful clearing of tasks."},{"lineNumber":11,"author":{"gitId":"oeiyiping"},"content":"     */"},{"lineNumber":12,"author":{"gitId":"oeiyiping"},"content":"    @Override"},{"lineNumber":13,"author":{"gitId":"oeiyiping"},"content":"    public String execute(TaskList tasks, Storage storage) {"},{"lineNumber":14,"author":{"gitId":"oeiyiping"},"content":"        tasks.clearAllTasks();"},{"lineNumber":15,"author":{"gitId":"oeiyiping"},"content":"        storage.save(tasks);"},{"lineNumber":16,"author":{"gitId":"oeiyiping"},"content":""},{"lineNumber":17,"author":{"gitId":"oeiyiping"},"content":"        assert tasks.getTasks().isEmpty() : \"task list not cleared!\";"},{"lineNumber":18,"author":{"gitId":"oeiyiping"},"content":"        return toHenchmanOutput();"},{"lineNumber":19,"author":{"gitId":"oeiyiping"},"content":"    }"},{"lineNumber":20,"author":{"gitId":"oeiyiping"},"content":""},{"lineNumber":21,"author":{"gitId":"oeiyiping"},"content":"    /**"},{"lineNumber":22,"author":{"gitId":"oeiyiping"},"content":"     * Returns the string representation of the message to be printed."},{"lineNumber":23,"author":{"gitId":"oeiyiping"},"content":"     *"},{"lineNumber":24,"author":{"gitId":"oeiyiping"},"content":"     * @return String representation of the message to be printed."},{"lineNumber":25,"author":{"gitId":"oeiyiping"},"content":"     */"},{"lineNumber":26,"author":{"gitId":"oeiyiping"},"content":"    @Override"},{"lineNumber":27,"author":{"gitId":"oeiyiping"},"content":"    public String toHenchmanOutput() {"},{"lineNumber":28,"author":{"gitId":"oeiyiping"},"content":"        return \"Clear complete, the task list is now empty.\";"},{"lineNumber":29,"author":{"gitId":"oeiyiping"},"content":"    }"},{"lineNumber":30,"author":{"gitId":"oeiyiping"},"content":"}"}],"authorContributionMap":{"oeiyiping":30}},{"path":"src/main/java/CommandDeadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"oeiyiping"},"content":"import java.time.LocalDateTime;"},{"lineNumber":2,"author":{"gitId":"oeiyiping"},"content":""},{"lineNumber":3,"author":{"gitId":"oeiyiping"},"content":"/**"},{"lineNumber":4,"author":{"gitId":"oeiyiping"},"content":" * Represents the Command for \"deadline\" for the Henchman object. CommandDeadline helps to initiate creation and adding"},{"lineNumber":5,"author":{"gitId":"oeiyiping"},"content":" * of the Deadline Task with the specified attributes into the provided TaskList."},{"lineNumber":6,"author":{"gitId":"oeiyiping"},"content":" */"},{"lineNumber":7,"author":{"gitId":"oeiyiping"},"content":"public class CommandDeadline extends Command {"},{"lineNumber":8,"author":{"gitId":"oeiyiping"},"content":"    private final String description;"},{"lineNumber":9,"author":{"gitId":"oeiyiping"},"content":"    private final LocalDateTime dateTime;"},{"lineNumber":10,"author":{"gitId":"oeiyiping"},"content":""},{"lineNumber":11,"author":{"gitId":"oeiyiping"},"content":"    /**"},{"lineNumber":12,"author":{"gitId":"oeiyiping"},"content":"     * Initialize the CommandDeadline object to represent the Deadline Task with the specified description and datetime."},{"lineNumber":13,"author":{"gitId":"oeiyiping"},"content":"     *"},{"lineNumber":14,"author":{"gitId":"oeiyiping"},"content":"     * @param description Description of the Deadline Task."},{"lineNumber":15,"author":{"gitId":"oeiyiping"},"content":"     * @param dateTime Date and time the Deadline Task should be done by."},{"lineNumber":16,"author":{"gitId":"oeiyiping"},"content":"     */"},{"lineNumber":17,"author":{"gitId":"oeiyiping"},"content":"    public CommandDeadline(String description, LocalDateTime dateTime) {"},{"lineNumber":18,"author":{"gitId":"oeiyiping"},"content":"        this.description \u003d description;"},{"lineNumber":19,"author":{"gitId":"oeiyiping"},"content":"        this.dateTime \u003d dateTime;"},{"lineNumber":20,"author":{"gitId":"oeiyiping"},"content":"    }"},{"lineNumber":21,"author":{"gitId":"oeiyiping"},"content":""},{"lineNumber":22,"author":{"gitId":"oeiyiping"},"content":"    /**"},{"lineNumber":23,"author":{"gitId":"oeiyiping"},"content":"     * Creates a Deadline Task with the specified attributes and adds it into the provided TaskList. Then, save the"},{"lineNumber":24,"author":{"gitId":"oeiyiping"},"content":"     * updated TaskList."},{"lineNumber":25,"author":{"gitId":"oeiyiping"},"content":"     *"},{"lineNumber":26,"author":{"gitId":"oeiyiping"},"content":"     * @param tasks TaskList of Henchman object, contains all the Tasks that were added."},{"lineNumber":27,"author":{"gitId":"oeiyiping"},"content":"     * @param storage Storage of Henchman object, saves the TaskList into a text file."},{"lineNumber":28,"author":{"gitId":"oeiyiping"},"content":"     */"},{"lineNumber":29,"author":{"gitId":"oeiyiping"},"content":"    @Override"},{"lineNumber":30,"author":{"gitId":"oeiyiping"},"content":"    public String execute(TaskList tasks, Storage storage) {"},{"lineNumber":31,"author":{"gitId":"oeiyiping"},"content":"        Deadline deadline \u003d new Deadline(description, dateTime);"},{"lineNumber":32,"author":{"gitId":"oeiyiping"},"content":"        tasks.addTask(deadline);"},{"lineNumber":33,"author":{"gitId":"oeiyiping"},"content":"        storage.save(tasks);"},{"lineNumber":34,"author":{"gitId":"oeiyiping"},"content":"        return this.toHenchmanOutput() + \"\\n\" + deadline.toString();"},{"lineNumber":35,"author":{"gitId":"oeiyiping"},"content":"    }"},{"lineNumber":36,"author":{"gitId":"oeiyiping"},"content":""},{"lineNumber":37,"author":{"gitId":"oeiyiping"},"content":"    /**"},{"lineNumber":38,"author":{"gitId":"oeiyiping"},"content":"     * Returns the string representation of the message to be printed."},{"lineNumber":39,"author":{"gitId":"oeiyiping"},"content":"     *"},{"lineNumber":40,"author":{"gitId":"oeiyiping"},"content":"     * @return String representation of the message to be printed."},{"lineNumber":41,"author":{"gitId":"oeiyiping"},"content":"     */"},{"lineNumber":42,"author":{"gitId":"oeiyiping"},"content":"    @Override"},{"lineNumber":43,"author":{"gitId":"oeiyiping"},"content":"    public String toHenchmanOutput() {"},{"lineNumber":44,"author":{"gitId":"oeiyiping"},"content":"        return \"Roger that boss, I\u0027ve added a new Deadline: \";"},{"lineNumber":45,"author":{"gitId":"oeiyiping"},"content":"    }"},{"lineNumber":46,"author":{"gitId":"oeiyiping"},"content":"}"}],"authorContributionMap":{"oeiyiping":46}},{"path":"src/main/java/CommandDelete.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"oeiyiping"},"content":"/**"},{"lineNumber":2,"author":{"gitId":"oeiyiping"},"content":" * Represents the Command for \"delete\" for the Henchman object. CommandDelete helps to deletes the task specified by"},{"lineNumber":3,"author":{"gitId":"oeiyiping"},"content":" * the index from the TaskList."},{"lineNumber":4,"author":{"gitId":"oeiyiping"},"content":" */"},{"lineNumber":5,"author":{"gitId":"oeiyiping"},"content":"public class CommandDelete extends Command {"},{"lineNumber":6,"author":{"gitId":"oeiyiping"},"content":"    private final int index;"},{"lineNumber":7,"author":{"gitId":"oeiyiping"},"content":""},{"lineNumber":8,"author":{"gitId":"oeiyiping"},"content":"    public CommandDelete (int index) {"},{"lineNumber":9,"author":{"gitId":"oeiyiping"},"content":"        this.index \u003d index;"},{"lineNumber":10,"author":{"gitId":"oeiyiping"},"content":"    }"},{"lineNumber":11,"author":{"gitId":"oeiyiping"},"content":""},{"lineNumber":12,"author":{"gitId":"oeiyiping"},"content":"    /**"},{"lineNumber":13,"author":{"gitId":"oeiyiping"},"content":"     * Delete task specified by index from tasks, and saves the updated tasks."},{"lineNumber":14,"author":{"gitId":"oeiyiping"},"content":"     *"},{"lineNumber":15,"author":{"gitId":"oeiyiping"},"content":"     * @param tasks TaskList of Henchman object."},{"lineNumber":16,"author":{"gitId":"oeiyiping"},"content":"     * @param storage Storage of Henchman object."},{"lineNumber":17,"author":{"gitId":"oeiyiping"},"content":"     * @return Message to return upon deletion of task specified by index."},{"lineNumber":18,"author":{"gitId":"oeiyiping"},"content":"     */"},{"lineNumber":19,"author":{"gitId":"oeiyiping"},"content":"    @Override"},{"lineNumber":20,"author":{"gitId":"oeiyiping"},"content":"    public String execute(TaskList tasks, Storage storage) {"},{"lineNumber":21,"author":{"gitId":"oeiyiping"},"content":"        try {"},{"lineNumber":22,"author":{"gitId":"oeiyiping"},"content":"            Task task \u003d tasks.deleteTask(index);"},{"lineNumber":23,"author":{"gitId":"oeiyiping"},"content":"            storage.save(tasks);"},{"lineNumber":24,"author":{"gitId":"oeiyiping"},"content":"            return this.toHenchmanOutput() + \"\\n\" + task.toString();"},{"lineNumber":25,"author":{"gitId":"oeiyiping"},"content":"        } catch (IndexOutOfBoundsException e) {"},{"lineNumber":26,"author":{"gitId":"oeiyiping"},"content":"            return \"Index provided is out of bounds! Please provide a valid index (1 to \""},{"lineNumber":27,"author":{"gitId":"oeiyiping"},"content":"                    + tasks.getTasks().size() + \").\";"},{"lineNumber":28,"author":{"gitId":"oeiyiping"},"content":"        }"},{"lineNumber":29,"author":{"gitId":"oeiyiping"},"content":"    }"},{"lineNumber":30,"author":{"gitId":"oeiyiping"},"content":""},{"lineNumber":31,"author":{"gitId":"oeiyiping"},"content":"    /**"},{"lineNumber":32,"author":{"gitId":"oeiyiping"},"content":"     * Returns the string representation of the message to be printed."},{"lineNumber":33,"author":{"gitId":"oeiyiping"},"content":"     *"},{"lineNumber":34,"author":{"gitId":"oeiyiping"},"content":"     * @return String representation of the message to be printed."},{"lineNumber":35,"author":{"gitId":"oeiyiping"},"content":"     */"},{"lineNumber":36,"author":{"gitId":"oeiyiping"},"content":"    @Override"},{"lineNumber":37,"author":{"gitId":"oeiyiping"},"content":"    public String toHenchmanOutput() {"},{"lineNumber":38,"author":{"gitId":"oeiyiping"},"content":"        return \"Alrighty bossman. I shall wipe this task off the face of the earth: \";"},{"lineNumber":39,"author":{"gitId":"oeiyiping"},"content":"    }"},{"lineNumber":40,"author":{"gitId":"oeiyiping"},"content":"}"}],"authorContributionMap":{"oeiyiping":40}},{"path":"src/main/java/CommandDone.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"oeiyiping"},"content":"/**"},{"lineNumber":2,"author":{"gitId":"oeiyiping"},"content":" * Represents the Command for \"done\" for the Henchman object. CommandDone helps to mark the task specified by"},{"lineNumber":3,"author":{"gitId":"oeiyiping"},"content":" * the index as done."},{"lineNumber":4,"author":{"gitId":"oeiyiping"},"content":" */"},{"lineNumber":5,"author":{"gitId":"oeiyiping"},"content":"public class CommandDone extends Command {"},{"lineNumber":6,"author":{"gitId":"oeiyiping"},"content":"    private final int index;"},{"lineNumber":7,"author":{"gitId":"oeiyiping"},"content":""},{"lineNumber":8,"author":{"gitId":"oeiyiping"},"content":"    public CommandDone(int index) {"},{"lineNumber":9,"author":{"gitId":"oeiyiping"},"content":"        this.index \u003d index;"},{"lineNumber":10,"author":{"gitId":"oeiyiping"},"content":"    }"},{"lineNumber":11,"author":{"gitId":"oeiyiping"},"content":""},{"lineNumber":12,"author":{"gitId":"oeiyiping"},"content":"    /**"},{"lineNumber":13,"author":{"gitId":"oeiyiping"},"content":"     * Marks task specified by index as done, and saves the updated tasks."},{"lineNumber":14,"author":{"gitId":"oeiyiping"},"content":"     *"},{"lineNumber":15,"author":{"gitId":"oeiyiping"},"content":"     * @param tasks TaskList of Henchman object."},{"lineNumber":16,"author":{"gitId":"oeiyiping"},"content":"     * @param storage Storage of Henchman object."},{"lineNumber":17,"author":{"gitId":"oeiyiping"},"content":"     * @return Message to return upon marking of task specified by index as done."},{"lineNumber":18,"author":{"gitId":"oeiyiping"},"content":"     */"},{"lineNumber":19,"author":{"gitId":"oeiyiping"},"content":"    @Override"},{"lineNumber":20,"author":{"gitId":"oeiyiping"},"content":"    public String execute(TaskList tasks, Storage storage) {"},{"lineNumber":21,"author":{"gitId":"oeiyiping"},"content":"        try {"},{"lineNumber":22,"author":{"gitId":"oeiyiping"},"content":"            Task task \u003d tasks.doneTask(index);"},{"lineNumber":23,"author":{"gitId":"oeiyiping"},"content":"            storage.save(tasks);"},{"lineNumber":24,"author":{"gitId":"oeiyiping"},"content":"            return this.toHenchmanOutput() + \"\\n\" + task.toString();"},{"lineNumber":25,"author":{"gitId":"oeiyiping"},"content":"        } catch (IndexOutOfBoundsException e) {"},{"lineNumber":26,"author":{"gitId":"oeiyiping"},"content":"            return \"Index provided is out of bounds! Please provide a valid index (1 to \""},{"lineNumber":27,"author":{"gitId":"oeiyiping"},"content":"                    + tasks.getTasks().size() + \").\";"},{"lineNumber":28,"author":{"gitId":"oeiyiping"},"content":"        }"},{"lineNumber":29,"author":{"gitId":"oeiyiping"},"content":"    }"},{"lineNumber":30,"author":{"gitId":"oeiyiping"},"content":""},{"lineNumber":31,"author":{"gitId":"oeiyiping"},"content":"    /**"},{"lineNumber":32,"author":{"gitId":"oeiyiping"},"content":"     * Returns the string representation of the message to be printed."},{"lineNumber":33,"author":{"gitId":"oeiyiping"},"content":"     *"},{"lineNumber":34,"author":{"gitId":"oeiyiping"},"content":"     * @return String representation of the message to be printed."},{"lineNumber":35,"author":{"gitId":"oeiyiping"},"content":"     */"},{"lineNumber":36,"author":{"gitId":"oeiyiping"},"content":"    @Override"},{"lineNumber":37,"author":{"gitId":"oeiyiping"},"content":"    public String toHenchmanOutput() {"},{"lineNumber":38,"author":{"gitId":"oeiyiping"},"content":"        return \"Impressive, yet another task has been done: \";"},{"lineNumber":39,"author":{"gitId":"oeiyiping"},"content":"    }"},{"lineNumber":40,"author":{"gitId":"oeiyiping"},"content":"}"}],"authorContributionMap":{"oeiyiping":40}},{"path":"src/main/java/CommandEvent.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"oeiyiping"},"content":"import java.time.LocalDateTime;"},{"lineNumber":2,"author":{"gitId":"oeiyiping"},"content":""},{"lineNumber":3,"author":{"gitId":"oeiyiping"},"content":"/**"},{"lineNumber":4,"author":{"gitId":"oeiyiping"},"content":" * Represents the Command for \"event\" for the Henchman object. CommandEvent helps to initiate creation and adding of"},{"lineNumber":5,"author":{"gitId":"oeiyiping"},"content":" * the Event Task with the specified attributes into the provided TaskList."},{"lineNumber":6,"author":{"gitId":"oeiyiping"},"content":" */"},{"lineNumber":7,"author":{"gitId":"oeiyiping"},"content":"public class CommandEvent extends Command {"},{"lineNumber":8,"author":{"gitId":"oeiyiping"},"content":"    private final String description;"},{"lineNumber":9,"author":{"gitId":"oeiyiping"},"content":"    private final LocalDateTime dateTime;"},{"lineNumber":10,"author":{"gitId":"oeiyiping"},"content":""},{"lineNumber":11,"author":{"gitId":"oeiyiping"},"content":"    /**"},{"lineNumber":12,"author":{"gitId":"oeiyiping"},"content":"     * Initialize the CommandEvent object to represent the Event Task with the specified description and datetime."},{"lineNumber":13,"author":{"gitId":"oeiyiping"},"content":"     *"},{"lineNumber":14,"author":{"gitId":"oeiyiping"},"content":"     * @param description Description of the Event Task."},{"lineNumber":15,"author":{"gitId":"oeiyiping"},"content":"     * @param dateTime Date and time the Event Task will occur on."},{"lineNumber":16,"author":{"gitId":"oeiyiping"},"content":"     */"},{"lineNumber":17,"author":{"gitId":"oeiyiping"},"content":"    public CommandEvent(String description, LocalDateTime dateTime) {"},{"lineNumber":18,"author":{"gitId":"oeiyiping"},"content":"        this.description \u003d description;"},{"lineNumber":19,"author":{"gitId":"oeiyiping"},"content":"        this.dateTime \u003d dateTime;"},{"lineNumber":20,"author":{"gitId":"oeiyiping"},"content":"    }"},{"lineNumber":21,"author":{"gitId":"oeiyiping"},"content":""},{"lineNumber":22,"author":{"gitId":"oeiyiping"},"content":"    /**"},{"lineNumber":23,"author":{"gitId":"oeiyiping"},"content":"     * Creates an Event Task with the specified attributes and adds it into the provided TaskList. Then, save the"},{"lineNumber":24,"author":{"gitId":"oeiyiping"},"content":"     * updated TaskList."},{"lineNumber":25,"author":{"gitId":"oeiyiping"},"content":"     *"},{"lineNumber":26,"author":{"gitId":"oeiyiping"},"content":"     * @param tasks TaskList of Henchman object, contains all the Tasks that were added."},{"lineNumber":27,"author":{"gitId":"oeiyiping"},"content":"     * @param storage Storage of Henchman object, saves the TaskList into a text file."},{"lineNumber":28,"author":{"gitId":"oeiyiping"},"content":"     */"},{"lineNumber":29,"author":{"gitId":"oeiyiping"},"content":"    @Override"},{"lineNumber":30,"author":{"gitId":"oeiyiping"},"content":"    public String execute(TaskList tasks, Storage storage) {"},{"lineNumber":31,"author":{"gitId":"oeiyiping"},"content":"        Event event \u003d new Event(description, dateTime);"},{"lineNumber":32,"author":{"gitId":"oeiyiping"},"content":"        tasks.addTask(event);"},{"lineNumber":33,"author":{"gitId":"oeiyiping"},"content":"        storage.save(tasks);"},{"lineNumber":34,"author":{"gitId":"oeiyiping"},"content":"        return this.toHenchmanOutput() + \"\\n\" + event.toString();"},{"lineNumber":35,"author":{"gitId":"oeiyiping"},"content":"    }"},{"lineNumber":36,"author":{"gitId":"oeiyiping"},"content":""},{"lineNumber":37,"author":{"gitId":"oeiyiping"},"content":"    /**"},{"lineNumber":38,"author":{"gitId":"oeiyiping"},"content":"     * Returns the string representation of the message to be printed."},{"lineNumber":39,"author":{"gitId":"oeiyiping"},"content":"     *"},{"lineNumber":40,"author":{"gitId":"oeiyiping"},"content":"     * @return String representation of the message to be printed."},{"lineNumber":41,"author":{"gitId":"oeiyiping"},"content":"     */"},{"lineNumber":42,"author":{"gitId":"oeiyiping"},"content":"    @Override"},{"lineNumber":43,"author":{"gitId":"oeiyiping"},"content":"    public String toHenchmanOutput() {"},{"lineNumber":44,"author":{"gitId":"oeiyiping"},"content":"        return \"Roger that boss, I\u0027ve added a new Event: \";"},{"lineNumber":45,"author":{"gitId":"oeiyiping"},"content":"    }"},{"lineNumber":46,"author":{"gitId":"oeiyiping"},"content":"}"}],"authorContributionMap":{"oeiyiping":46}},{"path":"src/main/java/CommandFind.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"oeiyiping"},"content":"/**"},{"lineNumber":2,"author":{"gitId":"oeiyiping"},"content":" * Represents the Command for \"find\" for the Henchman object. CommandFind helps find mark the task specified by"},{"lineNumber":3,"author":{"gitId":"oeiyiping"},"content":" * the search term, and returns the list of task containing said term."},{"lineNumber":4,"author":{"gitId":"oeiyiping"},"content":" */"},{"lineNumber":5,"author":{"gitId":"oeiyiping"},"content":"public class CommandFind extends Command {"},{"lineNumber":6,"author":{"gitId":"oeiyiping"},"content":"    private final String query;"},{"lineNumber":7,"author":{"gitId":"oeiyiping"},"content":""},{"lineNumber":8,"author":{"gitId":"oeiyiping"},"content":"    public CommandFind(String query) {"},{"lineNumber":9,"author":{"gitId":"oeiyiping"},"content":"        this.query \u003d query;"},{"lineNumber":10,"author":{"gitId":"oeiyiping"},"content":"    }"},{"lineNumber":11,"author":{"gitId":"oeiyiping"},"content":""},{"lineNumber":12,"author":{"gitId":"oeiyiping"},"content":"    /**"},{"lineNumber":13,"author":{"gitId":"oeiyiping"},"content":"     * find mark the task specified by query, and returns the list of task containing said term."},{"lineNumber":14,"author":{"gitId":"oeiyiping"},"content":"     *"},{"lineNumber":15,"author":{"gitId":"oeiyiping"},"content":"     * @param tasks TaskList of Henchman object."},{"lineNumber":16,"author":{"gitId":"oeiyiping"},"content":"     * @param storage Storage of Henchman object"},{"lineNumber":17,"author":{"gitId":"oeiyiping"},"content":"     * @return Return message containing all found tasks."},{"lineNumber":18,"author":{"gitId":"oeiyiping"},"content":"     */"},{"lineNumber":19,"author":{"gitId":"oeiyiping"},"content":"    @Override"},{"lineNumber":20,"author":{"gitId":"oeiyiping"},"content":"    public String execute(TaskList tasks, Storage storage) {"},{"lineNumber":21,"author":{"gitId":"oeiyiping"},"content":"        return this.toHenchmanOutput() + \"\\n\" + tasks.findTasks(query);"},{"lineNumber":22,"author":{"gitId":"oeiyiping"},"content":"    }"},{"lineNumber":23,"author":{"gitId":"oeiyiping"},"content":""},{"lineNumber":24,"author":{"gitId":"oeiyiping"},"content":"    /**"},{"lineNumber":25,"author":{"gitId":"oeiyiping"},"content":"     * Returns the string representation of the message to be printed."},{"lineNumber":26,"author":{"gitId":"oeiyiping"},"content":"     *"},{"lineNumber":27,"author":{"gitId":"oeiyiping"},"content":"     * @return String representation of the message to be printed."},{"lineNumber":28,"author":{"gitId":"oeiyiping"},"content":"     */"},{"lineNumber":29,"author":{"gitId":"oeiyiping"},"content":"    @Override"},{"lineNumber":30,"author":{"gitId":"oeiyiping"},"content":"    public String toHenchmanOutput() {"},{"lineNumber":31,"author":{"gitId":"oeiyiping"},"content":"        return \"Sure thing boss, I\u0027ll find them in a jiffy.\";"},{"lineNumber":32,"author":{"gitId":"oeiyiping"},"content":"    }"},{"lineNumber":33,"author":{"gitId":"oeiyiping"},"content":"}"}],"authorContributionMap":{"oeiyiping":33}},{"path":"src/main/java/CommandList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"oeiyiping"},"content":"/**"},{"lineNumber":2,"author":{"gitId":"oeiyiping"},"content":" * Represents the Command for \"list\" for the Henchman object. CommandList helps list and return all the tasks in tasks."},{"lineNumber":3,"author":{"gitId":"oeiyiping"},"content":" */"},{"lineNumber":4,"author":{"gitId":"oeiyiping"},"content":"public class CommandList extends Command {"},{"lineNumber":5,"author":{"gitId":"oeiyiping"},"content":""},{"lineNumber":6,"author":{"gitId":"oeiyiping"},"content":"    /**"},{"lineNumber":7,"author":{"gitId":"oeiyiping"},"content":"     * Lists all tasks in TaskList."},{"lineNumber":8,"author":{"gitId":"oeiyiping"},"content":"     *"},{"lineNumber":9,"author":{"gitId":"oeiyiping"},"content":"     * @param tasks TaskList of Henchman object."},{"lineNumber":10,"author":{"gitId":"oeiyiping"},"content":"     * @param storage Storage of Henchman object."},{"lineNumber":11,"author":{"gitId":"oeiyiping"},"content":"     * @return Return message containing all tasks in tasks."},{"lineNumber":12,"author":{"gitId":"oeiyiping"},"content":"     */"},{"lineNumber":13,"author":{"gitId":"oeiyiping"},"content":"    @Override"},{"lineNumber":14,"author":{"gitId":"oeiyiping"},"content":"    public String execute(TaskList tasks, Storage storage) {"},{"lineNumber":15,"author":{"gitId":"oeiyiping"},"content":"        return this.toHenchmanOutput() + \"\\n\" + tasks.printTasks();"},{"lineNumber":16,"author":{"gitId":"oeiyiping"},"content":""},{"lineNumber":17,"author":{"gitId":"oeiyiping"},"content":"    }"},{"lineNumber":18,"author":{"gitId":"oeiyiping"},"content":""},{"lineNumber":19,"author":{"gitId":"oeiyiping"},"content":"    /**"},{"lineNumber":20,"author":{"gitId":"oeiyiping"},"content":"     * Returns the string representation of the message to be printed."},{"lineNumber":21,"author":{"gitId":"oeiyiping"},"content":"     *"},{"lineNumber":22,"author":{"gitId":"oeiyiping"},"content":"     * @return String representation of the message to be printed."},{"lineNumber":23,"author":{"gitId":"oeiyiping"},"content":"     */"},{"lineNumber":24,"author":{"gitId":"oeiyiping"},"content":"    @Override"},{"lineNumber":25,"author":{"gitId":"oeiyiping"},"content":"    public String toHenchmanOutput() {"},{"lineNumber":26,"author":{"gitId":"oeiyiping"},"content":"        return \"Aye boss, here to see your \\\"collection\\\" eh?\";"},{"lineNumber":27,"author":{"gitId":"oeiyiping"},"content":"    }"},{"lineNumber":28,"author":{"gitId":"oeiyiping"},"content":"}"}],"authorContributionMap":{"oeiyiping":28}},{"path":"src/main/java/CommandSort.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"oeiyiping"},"content":"/**"},{"lineNumber":2,"author":{"gitId":"oeiyiping"},"content":" * Represents the Command for \"sort\" for the Henchman object. Sorts the tasks in TaskList according to the sort key."},{"lineNumber":3,"author":{"gitId":"oeiyiping"},"content":" */"},{"lineNumber":4,"author":{"gitId":"oeiyiping"},"content":"public class CommandSort extends Command {"},{"lineNumber":5,"author":{"gitId":"oeiyiping"},"content":"    private final String sortBy;"},{"lineNumber":6,"author":{"gitId":"oeiyiping"},"content":""},{"lineNumber":7,"author":{"gitId":"oeiyiping"},"content":"    public CommandSort(String sortBy) {"},{"lineNumber":8,"author":{"gitId":"oeiyiping"},"content":"        this.sortBy \u003d sortBy;"},{"lineNumber":9,"author":{"gitId":"oeiyiping"},"content":"    }"},{"lineNumber":10,"author":{"gitId":"oeiyiping"},"content":""},{"lineNumber":11,"author":{"gitId":"oeiyiping"},"content":"    /**"},{"lineNumber":12,"author":{"gitId":"oeiyiping"},"content":"     * Sorts the tasks in TaskList according to the sort key and returns the newly sorted tasks."},{"lineNumber":13,"author":{"gitId":"oeiyiping"},"content":"     *"},{"lineNumber":14,"author":{"gitId":"oeiyiping"},"content":"     * @param tasks TaskList of Henchman object."},{"lineNumber":15,"author":{"gitId":"oeiyiping"},"content":"     * @param storage Storage of Henchman object."},{"lineNumber":16,"author":{"gitId":"oeiyiping"},"content":"     * @return Return message containing all tasks in the newly-sorted tasks."},{"lineNumber":17,"author":{"gitId":"oeiyiping"},"content":"     */"},{"lineNumber":18,"author":{"gitId":"oeiyiping"},"content":"    @Override"},{"lineNumber":19,"author":{"gitId":"oeiyiping"},"content":"    public String execute(TaskList tasks, Storage storage) {"},{"lineNumber":20,"author":{"gitId":"oeiyiping"},"content":"        boolean isSorted \u003d tasks.sortTasks(sortBy);"},{"lineNumber":21,"author":{"gitId":"oeiyiping"},"content":"        if (isSorted) {"},{"lineNumber":22,"author":{"gitId":"oeiyiping"},"content":"            storage.save(tasks);"},{"lineNumber":23,"author":{"gitId":"oeiyiping"},"content":"            StringBuilder sortedTasks \u003d new StringBuilder(toHenchmanOutput()).append(sortBy).append(\"!\\n\");"},{"lineNumber":24,"author":{"gitId":"oeiyiping"},"content":"            sortedTasks.append(tasks.printTasks());"},{"lineNumber":25,"author":{"gitId":"oeiyiping"},"content":""},{"lineNumber":26,"author":{"gitId":"oeiyiping"},"content":"            return sortedTasks.toString();"},{"lineNumber":27,"author":{"gitId":"oeiyiping"},"content":"        } else {"},{"lineNumber":28,"author":{"gitId":"oeiyiping"},"content":"            return \"Invalid sort key, task remains unsorted.\";"},{"lineNumber":29,"author":{"gitId":"oeiyiping"},"content":"        }"},{"lineNumber":30,"author":{"gitId":"oeiyiping"},"content":"    }"},{"lineNumber":31,"author":{"gitId":"oeiyiping"},"content":""},{"lineNumber":32,"author":{"gitId":"oeiyiping"},"content":"    /**"},{"lineNumber":33,"author":{"gitId":"oeiyiping"},"content":"     * Returns the string representation of the message to be printed."},{"lineNumber":34,"author":{"gitId":"oeiyiping"},"content":"     *"},{"lineNumber":35,"author":{"gitId":"oeiyiping"},"content":"     * @return String representation of the message to be printed."},{"lineNumber":36,"author":{"gitId":"oeiyiping"},"content":"     */"},{"lineNumber":37,"author":{"gitId":"oeiyiping"},"content":"    @Override"},{"lineNumber":38,"author":{"gitId":"oeiyiping"},"content":"    public String toHenchmanOutput() {"},{"lineNumber":39,"author":{"gitId":"oeiyiping"},"content":"        return \"Task sorted by: \";"},{"lineNumber":40,"author":{"gitId":"oeiyiping"},"content":"    }"},{"lineNumber":41,"author":{"gitId":"oeiyiping"},"content":"}"}],"authorContributionMap":{"oeiyiping":41}},{"path":"src/main/java/CommandToDo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"oeiyiping"},"content":"/**"},{"lineNumber":2,"author":{"gitId":"oeiyiping"},"content":" * Represents the Command for \"todo\" for the Henchman object. CommandToDo helps to initiate creation and adding"},{"lineNumber":3,"author":{"gitId":"oeiyiping"},"content":" * of the ToDo Task with the specified attributes into the provided TaskList."},{"lineNumber":4,"author":{"gitId":"oeiyiping"},"content":" */"},{"lineNumber":5,"author":{"gitId":"oeiyiping"},"content":"public class CommandToDo extends Command {"},{"lineNumber":6,"author":{"gitId":"oeiyiping"},"content":"    private final String description;"},{"lineNumber":7,"author":{"gitId":"oeiyiping"},"content":""},{"lineNumber":8,"author":{"gitId":"oeiyiping"},"content":"    public CommandToDo(String description) {"},{"lineNumber":9,"author":{"gitId":"oeiyiping"},"content":"        this.description \u003d description;"},{"lineNumber":10,"author":{"gitId":"oeiyiping"},"content":"    }"},{"lineNumber":11,"author":{"gitId":"oeiyiping"},"content":""},{"lineNumber":12,"author":{"gitId":"oeiyiping"},"content":"    /**"},{"lineNumber":13,"author":{"gitId":"oeiyiping"},"content":"     * Creates an ToDo Task with the specified description and adds it into the provided TaskList. Then, save the"},{"lineNumber":14,"author":{"gitId":"oeiyiping"},"content":"     * updated TaskList."},{"lineNumber":15,"author":{"gitId":"oeiyiping"},"content":"     *"},{"lineNumber":16,"author":{"gitId":"oeiyiping"},"content":"     * @param tasks TaskList of Henchman object, contains all the Tasks that were added."},{"lineNumber":17,"author":{"gitId":"oeiyiping"},"content":"     * @param storage Storage of Henchman object, saves the TaskList into a text file."},{"lineNumber":18,"author":{"gitId":"oeiyiping"},"content":"     */"},{"lineNumber":19,"author":{"gitId":"oeiyiping"},"content":"    @Override"},{"lineNumber":20,"author":{"gitId":"oeiyiping"},"content":"    public String execute(TaskList tasks, Storage storage) {"},{"lineNumber":21,"author":{"gitId":"oeiyiping"},"content":"        ToDo toDo \u003d new ToDo(description);"},{"lineNumber":22,"author":{"gitId":"oeiyiping"},"content":"        tasks.addTask(toDo);"},{"lineNumber":23,"author":{"gitId":"oeiyiping"},"content":"        storage.save(tasks);"},{"lineNumber":24,"author":{"gitId":"oeiyiping"},"content":"        return this.toHenchmanOutput() + \"\\n\" + toDo.toString();"},{"lineNumber":25,"author":{"gitId":"oeiyiping"},"content":"    }"},{"lineNumber":26,"author":{"gitId":"oeiyiping"},"content":""},{"lineNumber":27,"author":{"gitId":"oeiyiping"},"content":"    /**"},{"lineNumber":28,"author":{"gitId":"oeiyiping"},"content":"     * Returns the string representation of the message to be printed."},{"lineNumber":29,"author":{"gitId":"oeiyiping"},"content":"     *"},{"lineNumber":30,"author":{"gitId":"oeiyiping"},"content":"     * @return String representation of the message to be printed."},{"lineNumber":31,"author":{"gitId":"oeiyiping"},"content":"     */"},{"lineNumber":32,"author":{"gitId":"oeiyiping"},"content":"    @Override"},{"lineNumber":33,"author":{"gitId":"oeiyiping"},"content":"    public String toHenchmanOutput() {"},{"lineNumber":34,"author":{"gitId":"oeiyiping"},"content":"        return \"Roger that boss, I\u0027ve added a new ToDo: \";"},{"lineNumber":35,"author":{"gitId":"oeiyiping"},"content":"    }"},{"lineNumber":36,"author":{"gitId":"oeiyiping"},"content":"}"}],"authorContributionMap":{"oeiyiping":36}},{"path":"src/main/java/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"oeiyiping"},"content":"import java.time.LocalDateTime;"},{"lineNumber":2,"author":{"gitId":"oeiyiping"},"content":""},{"lineNumber":3,"author":{"gitId":"oeiyiping"},"content":"/**"},{"lineNumber":4,"author":{"gitId":"oeiyiping"},"content":" * Represents the Deadline Task."},{"lineNumber":5,"author":{"gitId":"oeiyiping"},"content":" */"},{"lineNumber":6,"author":{"gitId":"oeiyiping"},"content":""},{"lineNumber":7,"author":{"gitId":"oeiyiping"},"content":"public class Deadline extends TimedTask {"},{"lineNumber":8,"author":{"gitId":"oeiyiping"},"content":""},{"lineNumber":9,"author":{"gitId":"oeiyiping"},"content":"    /**"},{"lineNumber":10,"author":{"gitId":"oeiyiping"},"content":"     * Initializes a Deadline Task with the specified description and dateTime."},{"lineNumber":11,"author":{"gitId":"oeiyiping"},"content":"     *"},{"lineNumber":12,"author":{"gitId":"oeiyiping"},"content":"     * @param description Description of the Deadline Task."},{"lineNumber":13,"author":{"gitId":"oeiyiping"},"content":"     * @param dateTime Date and Time the Deadline Task should be done by."},{"lineNumber":14,"author":{"gitId":"oeiyiping"},"content":"     */"},{"lineNumber":15,"author":{"gitId":"oeiyiping"},"content":"    public Deadline(String description, LocalDateTime dateTime) {"},{"lineNumber":16,"author":{"gitId":"oeiyiping"},"content":"        super(description, dateTime, \"D\");"},{"lineNumber":17,"author":{"gitId":"oeiyiping"},"content":"    }"},{"lineNumber":18,"author":{"gitId":"oeiyiping"},"content":""},{"lineNumber":19,"author":{"gitId":"oeiyiping"},"content":"    /**"},{"lineNumber":20,"author":{"gitId":"oeiyiping"},"content":"     * Initializes a Deadline Task with the specified description, timeCreated, and dateTime."},{"lineNumber":21,"author":{"gitId":"oeiyiping"},"content":"     *"},{"lineNumber":22,"author":{"gitId":"oeiyiping"},"content":"     * @param description Description of the Deadline Task."},{"lineNumber":23,"author":{"gitId":"oeiyiping"},"content":"     * @param timeCreated DateTime when this Deadline object was created."},{"lineNumber":24,"author":{"gitId":"oeiyiping"},"content":"     * @param dateTime Date and Time the Deadline Task should be done by."},{"lineNumber":25,"author":{"gitId":"oeiyiping"},"content":"     */"},{"lineNumber":26,"author":{"gitId":"oeiyiping"},"content":"    public Deadline(String description, LocalDateTime timeCreated, LocalDateTime dateTime) {"},{"lineNumber":27,"author":{"gitId":"oeiyiping"},"content":"        super(description, timeCreated, dateTime, \"D\");"},{"lineNumber":28,"author":{"gitId":"oeiyiping"},"content":"    }"},{"lineNumber":29,"author":{"gitId":"oeiyiping"},"content":""},{"lineNumber":30,"author":{"gitId":"oeiyiping"},"content":"    public String toString() {"},{"lineNumber":31,"author":{"gitId":"oeiyiping"},"content":"        return super.toString() + \" (by: \" + dateTime.format(DATE_TIME_FORMAT) + \")\";"},{"lineNumber":32,"author":{"gitId":"oeiyiping"},"content":"    }"},{"lineNumber":33,"author":{"gitId":"oeiyiping"},"content":"}"}],"authorContributionMap":{"oeiyiping":33}},{"path":"src/main/java/DialogBox.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"oeiyiping"},"content":"import java.io.IOException;"},{"lineNumber":2,"author":{"gitId":"oeiyiping"},"content":"import java.util.Collections;"},{"lineNumber":3,"author":{"gitId":"oeiyiping"},"content":""},{"lineNumber":4,"author":{"gitId":"oeiyiping"},"content":"import javafx.collections.FXCollections;"},{"lineNumber":5,"author":{"gitId":"oeiyiping"},"content":"import javafx.collections.ObservableList;"},{"lineNumber":6,"author":{"gitId":"oeiyiping"},"content":"import javafx.fxml.FXML;"},{"lineNumber":7,"author":{"gitId":"oeiyiping"},"content":"import javafx.fxml.FXMLLoader;"},{"lineNumber":8,"author":{"gitId":"oeiyiping"},"content":"import javafx.geometry.Pos;"},{"lineNumber":9,"author":{"gitId":"oeiyiping"},"content":"import javafx.scene.Node;"},{"lineNumber":10,"author":{"gitId":"oeiyiping"},"content":"import javafx.scene.control.Label;"},{"lineNumber":11,"author":{"gitId":"oeiyiping"},"content":"import javafx.scene.image.Image;"},{"lineNumber":12,"author":{"gitId":"oeiyiping"},"content":"import javafx.scene.image.ImageView;"},{"lineNumber":13,"author":{"gitId":"oeiyiping"},"content":"import javafx.scene.layout.HBox;"},{"lineNumber":14,"author":{"gitId":"oeiyiping"},"content":""},{"lineNumber":15,"author":{"gitId":"oeiyiping"},"content":"/**"},{"lineNumber":16,"author":{"gitId":"oeiyiping"},"content":" * An example of a custom control using FXML."},{"lineNumber":17,"author":{"gitId":"oeiyiping"},"content":" * This control represents a dialog box consisting of an ImageView to represent the speaker\u0027s face and a label"},{"lineNumber":18,"author":{"gitId":"oeiyiping"},"content":" * containing text from the speaker."},{"lineNumber":19,"author":{"gitId":"oeiyiping"},"content":" */"},{"lineNumber":20,"author":{"gitId":"oeiyiping"},"content":"public class DialogBox extends HBox {"},{"lineNumber":21,"author":{"gitId":"oeiyiping"},"content":"    @FXML"},{"lineNumber":22,"author":{"gitId":"oeiyiping"},"content":"    private Label dialog;"},{"lineNumber":23,"author":{"gitId":"oeiyiping"},"content":"    @FXML"},{"lineNumber":24,"author":{"gitId":"oeiyiping"},"content":"    private ImageView displayPicture;"},{"lineNumber":25,"author":{"gitId":"oeiyiping"},"content":""},{"lineNumber":26,"author":{"gitId":"oeiyiping"},"content":"    private DialogBox(String text, Image img) {"},{"lineNumber":27,"author":{"gitId":"oeiyiping"},"content":"        try {"},{"lineNumber":28,"author":{"gitId":"oeiyiping"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(HenchmanUi.class.getResource(\"/view/DialogBox.fxml\"));"},{"lineNumber":29,"author":{"gitId":"oeiyiping"},"content":"            fxmlLoader.setController(this);"},{"lineNumber":30,"author":{"gitId":"oeiyiping"},"content":"            fxmlLoader.setRoot(this);"},{"lineNumber":31,"author":{"gitId":"oeiyiping"},"content":"            fxmlLoader.load();"},{"lineNumber":32,"author":{"gitId":"oeiyiping"},"content":"        } catch (IOException e) {"},{"lineNumber":33,"author":{"gitId":"oeiyiping"},"content":"            e.printStackTrace();"},{"lineNumber":34,"author":{"gitId":"oeiyiping"},"content":"        }"},{"lineNumber":35,"author":{"gitId":"oeiyiping"},"content":""},{"lineNumber":36,"author":{"gitId":"oeiyiping"},"content":"        dialog.setText(text);"},{"lineNumber":37,"author":{"gitId":"oeiyiping"},"content":"        displayPicture.setImage(img);"},{"lineNumber":38,"author":{"gitId":"oeiyiping"},"content":"    }"},{"lineNumber":39,"author":{"gitId":"oeiyiping"},"content":""},{"lineNumber":40,"author":{"gitId":"oeiyiping"},"content":"    /**"},{"lineNumber":41,"author":{"gitId":"oeiyiping"},"content":"     * Flips the dialog box such that the ImageView is on the left and text on the right."},{"lineNumber":42,"author":{"gitId":"oeiyiping"},"content":"     */"},{"lineNumber":43,"author":{"gitId":"oeiyiping"},"content":"    private void flip() {"},{"lineNumber":44,"author":{"gitId":"oeiyiping"},"content":"        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());"},{"lineNumber":45,"author":{"gitId":"oeiyiping"},"content":"        Collections.reverse(tmp);"},{"lineNumber":46,"author":{"gitId":"oeiyiping"},"content":"        getChildren().setAll(tmp);"},{"lineNumber":47,"author":{"gitId":"oeiyiping"},"content":"        setAlignment(Pos.TOP_LEFT);"},{"lineNumber":48,"author":{"gitId":"oeiyiping"},"content":"    }"},{"lineNumber":49,"author":{"gitId":"oeiyiping"},"content":""},{"lineNumber":50,"author":{"gitId":"oeiyiping"},"content":"    public static DialogBox getUserDialog(String text, Image img) {"},{"lineNumber":51,"author":{"gitId":"oeiyiping"},"content":"        return new DialogBox(text, img);"},{"lineNumber":52,"author":{"gitId":"oeiyiping"},"content":"    }"},{"lineNumber":53,"author":{"gitId":"oeiyiping"},"content":""},{"lineNumber":54,"author":{"gitId":"oeiyiping"},"content":"    public static DialogBox getHenchmanDialog(String text, Image img) {"},{"lineNumber":55,"author":{"gitId":"oeiyiping"},"content":"        var db \u003d new DialogBox(text, img);"},{"lineNumber":56,"author":{"gitId":"oeiyiping"},"content":"        db.flip();"},{"lineNumber":57,"author":{"gitId":"oeiyiping"},"content":"        return db;"},{"lineNumber":58,"author":{"gitId":"oeiyiping"},"content":"    }"},{"lineNumber":59,"author":{"gitId":"oeiyiping"},"content":"}"}],"authorContributionMap":{"oeiyiping":59}},{"path":"src/main/java/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"oeiyiping"},"content":"import java.time.LocalDateTime;"},{"lineNumber":2,"author":{"gitId":"oeiyiping"},"content":""},{"lineNumber":3,"author":{"gitId":"oeiyiping"},"content":"/**"},{"lineNumber":4,"author":{"gitId":"oeiyiping"},"content":" * Represents the Event Task."},{"lineNumber":5,"author":{"gitId":"oeiyiping"},"content":" */"},{"lineNumber":6,"author":{"gitId":"oeiyiping"},"content":"public class Event extends TimedTask {"},{"lineNumber":7,"author":{"gitId":"oeiyiping"},"content":""},{"lineNumber":8,"author":{"gitId":"oeiyiping"},"content":"    /**"},{"lineNumber":9,"author":{"gitId":"oeiyiping"},"content":"     * Initializes an Event Task with the specified description and dateTime."},{"lineNumber":10,"author":{"gitId":"oeiyiping"},"content":"     *"},{"lineNumber":11,"author":{"gitId":"oeiyiping"},"content":"     * @param description Description of the Event Task."},{"lineNumber":12,"author":{"gitId":"oeiyiping"},"content":"     * @param dateTime Date and Time the Event Task occurs at."},{"lineNumber":13,"author":{"gitId":"oeiyiping"},"content":"     */"},{"lineNumber":14,"author":{"gitId":"oeiyiping"},"content":"    public Event(String description, LocalDateTime dateTime) {"},{"lineNumber":15,"author":{"gitId":"oeiyiping"},"content":"        super(description, dateTime, \"E\");"},{"lineNumber":16,"author":{"gitId":"oeiyiping"},"content":"    }"},{"lineNumber":17,"author":{"gitId":"oeiyiping"},"content":""},{"lineNumber":18,"author":{"gitId":"oeiyiping"},"content":"    /**"},{"lineNumber":19,"author":{"gitId":"oeiyiping"},"content":"     * Initializes an Event Task with the specified description, timeCreated, and dateTime."},{"lineNumber":20,"author":{"gitId":"oeiyiping"},"content":"     *"},{"lineNumber":21,"author":{"gitId":"oeiyiping"},"content":"     * @param description Description of the Event Task."},{"lineNumber":22,"author":{"gitId":"oeiyiping"},"content":"     * @param timeCreated DateTime when this Event object was created."},{"lineNumber":23,"author":{"gitId":"oeiyiping"},"content":"     * @param dateTime Date and Time the Event Task occurs at."},{"lineNumber":24,"author":{"gitId":"oeiyiping"},"content":"     */"},{"lineNumber":25,"author":{"gitId":"oeiyiping"},"content":"    public Event(String description, LocalDateTime timeCreated, LocalDateTime dateTime) {"},{"lineNumber":26,"author":{"gitId":"oeiyiping"},"content":"        super(description, timeCreated, dateTime, \"E\");"},{"lineNumber":27,"author":{"gitId":"oeiyiping"},"content":"    }"},{"lineNumber":28,"author":{"gitId":"oeiyiping"},"content":""},{"lineNumber":29,"author":{"gitId":"oeiyiping"},"content":"    public String toString() {"},{"lineNumber":30,"author":{"gitId":"oeiyiping"},"content":"        return super.toString() + \" (at: \" + dateTime.format(DATE_TIME_FORMAT) + \")\";"},{"lineNumber":31,"author":{"gitId":"oeiyiping"},"content":"    }"},{"lineNumber":32,"author":{"gitId":"oeiyiping"},"content":"}"}],"authorContributionMap":{"oeiyiping":32}},{"path":"src/main/java/Henchman.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"oeiyiping"},"content":"public class Henchman {"},{"lineNumber":2,"author":{"gitId":"oeiyiping"},"content":"    private final Storage storage;"},{"lineNumber":3,"author":{"gitId":"oeiyiping"},"content":"    private final TaskList tasks;"},{"lineNumber":4,"author":{"gitId":"oeiyiping"},"content":""},{"lineNumber":5,"author":{"gitId":"oeiyiping"},"content":"    /**"},{"lineNumber":6,"author":{"gitId":"oeiyiping"},"content":"     * Constructs Henchman object, which immediately attempts to load previously save tasks (if save file exists)."},{"lineNumber":7,"author":{"gitId":"oeiyiping"},"content":"     */"},{"lineNumber":8,"author":{"gitId":"oeiyiping"},"content":"    public Henchman() {"},{"lineNumber":9,"author":{"gitId":"oeiyiping"},"content":"        storage \u003d new Storage();"},{"lineNumber":10,"author":{"gitId":"oeiyiping"},"content":""},{"lineNumber":11,"author":{"gitId":"oeiyiping"},"content":"        TaskList tempTasks;"},{"lineNumber":12,"author":{"gitId":"oeiyiping"},"content":"        try {"},{"lineNumber":13,"author":{"gitId":"oeiyiping"},"content":"            tempTasks \u003d new TaskList(storage.load());"},{"lineNumber":14,"author":{"gitId":"oeiyiping"},"content":"        } catch (HenchmanException e) {"},{"lineNumber":15,"author":{"gitId":"oeiyiping"},"content":"            tempTasks \u003d new TaskList(); // case where save file does not exist"},{"lineNumber":16,"author":{"gitId":"oeiyiping"},"content":"        }"},{"lineNumber":17,"author":{"gitId":"oeiyiping"},"content":""},{"lineNumber":18,"author":{"gitId":"oeiyiping"},"content":"        assert tempTasks !\u003d null : \"Error: Attempt to construct Henchman without valid Storage.\";"},{"lineNumber":19,"author":{"gitId":"oeiyiping"},"content":"        this.tasks \u003d tempTasks;"},{"lineNumber":20,"author":{"gitId":"oeiyiping"},"content":"    }"},{"lineNumber":21,"author":{"gitId":"oeiyiping"},"content":""},{"lineNumber":22,"author":{"gitId":"oeiyiping"},"content":"    /**"},{"lineNumber":23,"author":{"gitId":"oeiyiping"},"content":"     * Accepts the input and returns a String output representing the command execution message."},{"lineNumber":24,"author":{"gitId":"oeiyiping"},"content":"     *"},{"lineNumber":25,"author":{"gitId":"oeiyiping"},"content":"     * @param input String input of user."},{"lineNumber":26,"author":{"gitId":"oeiyiping"},"content":"     * @return String output of command completion."},{"lineNumber":27,"author":{"gitId":"oeiyiping"},"content":"     */"},{"lineNumber":28,"author":{"gitId":"oeiyiping"},"content":"    public String run(String input) {"},{"lineNumber":29,"author":{"gitId":"oeiyiping"},"content":"        try {"},{"lineNumber":30,"author":{"gitId":"oeiyiping"},"content":"            Command command \u003d Parser.parse(input);"},{"lineNumber":31,"author":{"gitId":"oeiyiping"},"content":"            return command.execute(tasks, storage);"},{"lineNumber":32,"author":{"gitId":"oeiyiping"},"content":"        } catch (HenchmanException e) {"},{"lineNumber":33,"author":{"gitId":"oeiyiping"},"content":"            return e.getMessage();"},{"lineNumber":34,"author":{"gitId":"oeiyiping"},"content":"        }"},{"lineNumber":35,"author":{"gitId":"oeiyiping"},"content":"    }"},{"lineNumber":36,"author":{"gitId":"-"},"content":"}"}],"authorContributionMap":{"oeiyiping":35,"-":1}},{"path":"src/main/java/HenchmanException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"oeiyiping"},"content":"public class HenchmanException extends Exception {"},{"lineNumber":2,"author":{"gitId":"oeiyiping"},"content":"    public HenchmanException(String s) {"},{"lineNumber":3,"author":{"gitId":"oeiyiping"},"content":"        super(s);"},{"lineNumber":4,"author":{"gitId":"oeiyiping"},"content":"    }"},{"lineNumber":5,"author":{"gitId":"oeiyiping"},"content":"}"}],"authorContributionMap":{"oeiyiping":5}},{"path":"src/main/java/HenchmanLauncher.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"oeiyiping"},"content":"import javafx.application.Application;"},{"lineNumber":2,"author":{"gitId":"oeiyiping"},"content":""},{"lineNumber":3,"author":{"gitId":"oeiyiping"},"content":"public class HenchmanLauncher {"},{"lineNumber":4,"author":{"gitId":"oeiyiping"},"content":"    public static void main(String[] args) {"},{"lineNumber":5,"author":{"gitId":"oeiyiping"},"content":"        Application.launch(HenchmanMain.class, args);"},{"lineNumber":6,"author":{"gitId":"oeiyiping"},"content":"    }"},{"lineNumber":7,"author":{"gitId":"oeiyiping"},"content":"}"}],"authorContributionMap":{"oeiyiping":7}},{"path":"src/main/java/HenchmanMain.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"oeiyiping"},"content":"import java.io.IOException;"},{"lineNumber":2,"author":{"gitId":"oeiyiping"},"content":""},{"lineNumber":3,"author":{"gitId":"oeiyiping"},"content":"import javafx.application.Application;"},{"lineNumber":4,"author":{"gitId":"oeiyiping"},"content":"import javafx.fxml.FXMLLoader;"},{"lineNumber":5,"author":{"gitId":"oeiyiping"},"content":"import javafx.scene.Scene;"},{"lineNumber":6,"author":{"gitId":"oeiyiping"},"content":"import javafx.scene.image.Image;"},{"lineNumber":7,"author":{"gitId":"oeiyiping"},"content":"import javafx.scene.layout.AnchorPane;"},{"lineNumber":8,"author":{"gitId":"oeiyiping"},"content":"import javafx.stage.Stage;"},{"lineNumber":9,"author":{"gitId":"oeiyiping"},"content":""},{"lineNumber":10,"author":{"gitId":"oeiyiping"},"content":"/**"},{"lineNumber":11,"author":{"gitId":"oeiyiping"},"content":" * A GUI for Henchman using FXML."},{"lineNumber":12,"author":{"gitId":"oeiyiping"},"content":" */"},{"lineNumber":13,"author":{"gitId":"oeiyiping"},"content":"public class HenchmanMain extends Application {"},{"lineNumber":14,"author":{"gitId":"oeiyiping"},"content":""},{"lineNumber":15,"author":{"gitId":"oeiyiping"},"content":"    private final Henchman henchman \u003d new Henchman();"},{"lineNumber":16,"author":{"gitId":"oeiyiping"},"content":""},{"lineNumber":17,"author":{"gitId":"oeiyiping"},"content":"    @Override"},{"lineNumber":18,"author":{"gitId":"oeiyiping"},"content":"    public void start(Stage stage) {"},{"lineNumber":19,"author":{"gitId":"oeiyiping"},"content":"        try {"},{"lineNumber":20,"author":{"gitId":"oeiyiping"},"content":"            stage.setTitle(\"Henchman Task Manager\");"},{"lineNumber":21,"author":{"gitId":"oeiyiping"},"content":"            stage.getIcons().add(new Image(\"/images/henchman.png\"));"},{"lineNumber":22,"author":{"gitId":"oeiyiping"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(HenchmanMain.class.getResource(\"/view/MainWindow.fxml\"));"},{"lineNumber":23,"author":{"gitId":"oeiyiping"},"content":""},{"lineNumber":24,"author":{"gitId":"oeiyiping"},"content":"            AnchorPane ap \u003d fxmlLoader.load();"},{"lineNumber":25,"author":{"gitId":"oeiyiping"},"content":"            Scene scene \u003d new Scene(ap);"},{"lineNumber":26,"author":{"gitId":"oeiyiping"},"content":"            stage.setScene(scene);"},{"lineNumber":27,"author":{"gitId":"oeiyiping"},"content":"            fxmlLoader.\u003cHenchmanUi\u003egetController().setHenchman(henchman);"},{"lineNumber":28,"author":{"gitId":"oeiyiping"},"content":"            stage.show();"},{"lineNumber":29,"author":{"gitId":"oeiyiping"},"content":"        } catch (IOException e) {"},{"lineNumber":30,"author":{"gitId":"oeiyiping"},"content":"            e.printStackTrace();"},{"lineNumber":31,"author":{"gitId":"oeiyiping"},"content":"        }"},{"lineNumber":32,"author":{"gitId":"oeiyiping"},"content":"    }"},{"lineNumber":33,"author":{"gitId":"oeiyiping"},"content":"}"}],"authorContributionMap":{"oeiyiping":33}},{"path":"src/main/java/HenchmanUi.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"oeiyiping"},"content":"import javafx.fxml.FXML;"},{"lineNumber":2,"author":{"gitId":"oeiyiping"},"content":"import javafx.scene.control.Button;"},{"lineNumber":3,"author":{"gitId":"oeiyiping"},"content":"import javafx.scene.control.ScrollPane;"},{"lineNumber":4,"author":{"gitId":"oeiyiping"},"content":"import javafx.scene.control.TextField;"},{"lineNumber":5,"author":{"gitId":"oeiyiping"},"content":"import javafx.scene.image.Image;"},{"lineNumber":6,"author":{"gitId":"oeiyiping"},"content":"import javafx.scene.layout.AnchorPane;"},{"lineNumber":7,"author":{"gitId":"oeiyiping"},"content":"import javafx.scene.layout.VBox;"},{"lineNumber":8,"author":{"gitId":"oeiyiping"},"content":"/**"},{"lineNumber":9,"author":{"gitId":"oeiyiping"},"content":" * Controller for MainWindow. Provides the layout for the other controls."},{"lineNumber":10,"author":{"gitId":"oeiyiping"},"content":" */"},{"lineNumber":11,"author":{"gitId":"oeiyiping"},"content":"public class HenchmanUi extends AnchorPane {"},{"lineNumber":12,"author":{"gitId":"oeiyiping"},"content":"    @FXML"},{"lineNumber":13,"author":{"gitId":"oeiyiping"},"content":"    private ScrollPane scrollPane;"},{"lineNumber":14,"author":{"gitId":"oeiyiping"},"content":"    @FXML"},{"lineNumber":15,"author":{"gitId":"oeiyiping"},"content":"    private VBox dialogContainer;"},{"lineNumber":16,"author":{"gitId":"oeiyiping"},"content":"    @FXML"},{"lineNumber":17,"author":{"gitId":"oeiyiping"},"content":"    private TextField userInput;"},{"lineNumber":18,"author":{"gitId":"oeiyiping"},"content":"    @FXML"},{"lineNumber":19,"author":{"gitId":"oeiyiping"},"content":"    private Button sendButton;"},{"lineNumber":20,"author":{"gitId":"oeiyiping"},"content":""},{"lineNumber":21,"author":{"gitId":"oeiyiping"},"content":"    private Henchman henchman;"},{"lineNumber":22,"author":{"gitId":"oeiyiping"},"content":""},{"lineNumber":23,"author":{"gitId":"oeiyiping"},"content":"    private Image userImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaUser.png\"));"},{"lineNumber":24,"author":{"gitId":"oeiyiping"},"content":"    private Image dukeImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaDuke.png\"));"},{"lineNumber":25,"author":{"gitId":"oeiyiping"},"content":""},{"lineNumber":26,"author":{"gitId":"oeiyiping"},"content":"    @FXML"},{"lineNumber":27,"author":{"gitId":"oeiyiping"},"content":"    public void initialize() {"},{"lineNumber":28,"author":{"gitId":"oeiyiping"},"content":"        scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());"},{"lineNumber":29,"author":{"gitId":"oeiyiping"},"content":"    }"},{"lineNumber":30,"author":{"gitId":"oeiyiping"},"content":""},{"lineNumber":31,"author":{"gitId":"oeiyiping"},"content":"    public void setHenchman(Henchman d) {"},{"lineNumber":32,"author":{"gitId":"oeiyiping"},"content":"        henchman \u003d d;"},{"lineNumber":33,"author":{"gitId":"oeiyiping"},"content":"        dialogContainer.getChildren().add(DialogBox.getHenchmanDialog(printGreetings(), dukeImage));"},{"lineNumber":34,"author":{"gitId":"oeiyiping"},"content":"    }"},{"lineNumber":35,"author":{"gitId":"oeiyiping"},"content":""},{"lineNumber":36,"author":{"gitId":"oeiyiping"},"content":"    /**"},{"lineNumber":37,"author":{"gitId":"oeiyiping"},"content":"     * Creates two dialog boxes, one echoing user input and the other containing Duke\u0027s reply and then appends them to"},{"lineNumber":38,"author":{"gitId":"oeiyiping"},"content":"     * the dialog container. Clears the user input after processing."},{"lineNumber":39,"author":{"gitId":"oeiyiping"},"content":"     */"},{"lineNumber":40,"author":{"gitId":"oeiyiping"},"content":"    @FXML"},{"lineNumber":41,"author":{"gitId":"oeiyiping"},"content":"    private void handleUserInput() {"},{"lineNumber":42,"author":{"gitId":"oeiyiping"},"content":"        String input \u003d userInput.getText();"},{"lineNumber":43,"author":{"gitId":"oeiyiping"},"content":"        String response \u003d henchman.run(input);"},{"lineNumber":44,"author":{"gitId":"oeiyiping"},"content":"        dialogContainer.getChildren().addAll("},{"lineNumber":45,"author":{"gitId":"oeiyiping"},"content":"                DialogBox.getUserDialog(input, userImage),"},{"lineNumber":46,"author":{"gitId":"oeiyiping"},"content":"                DialogBox.getHenchmanDialog(response, dukeImage)"},{"lineNumber":47,"author":{"gitId":"oeiyiping"},"content":"        );"},{"lineNumber":48,"author":{"gitId":"oeiyiping"},"content":"        userInput.clear();"},{"lineNumber":49,"author":{"gitId":"oeiyiping"},"content":""},{"lineNumber":50,"author":{"gitId":"oeiyiping"},"content":"        if (input.equals(\"bye\")) {"},{"lineNumber":51,"author":{"gitId":"oeiyiping"},"content":"            System.exit(0);"},{"lineNumber":52,"author":{"gitId":"oeiyiping"},"content":"        }"},{"lineNumber":53,"author":{"gitId":"oeiyiping"},"content":"    }"},{"lineNumber":54,"author":{"gitId":"oeiyiping"},"content":""},{"lineNumber":55,"author":{"gitId":"oeiyiping"},"content":"    /**"},{"lineNumber":56,"author":{"gitId":"oeiyiping"},"content":"     * Prints the greeting message."},{"lineNumber":57,"author":{"gitId":"oeiyiping"},"content":"     */"},{"lineNumber":58,"author":{"gitId":"oeiyiping"},"content":"    public String printGreetings() {"},{"lineNumber":59,"author":{"gitId":"oeiyiping"},"content":"        String logo \u003d \"$$    $$                                $$\\n\""},{"lineNumber":60,"author":{"gitId":"oeiyiping"},"content":"                    + \"$$    $$                                $$\\n\""},{"lineNumber":61,"author":{"gitId":"oeiyiping"},"content":"                    + \"$$    $$   $$$$$$   $$$$$$$    $$$$$$$  $$$$$$$   $$$$$$ $$$$    $$$$$$   $$$$$$$\\n\""},{"lineNumber":62,"author":{"gitId":"oeiyiping"},"content":"                    + \"$$$$$$$$  $$    $$  $$    $$  $$        $$    $$  $$   $$   $$        $$  $$    $$\\n\""},{"lineNumber":63,"author":{"gitId":"oeiyiping"},"content":"                    + \"$$    $$  $$$$$$$$  $$    $$  $$        $$    $$  $$   $$   $$   $$$$$$$  $$    $$\\n\""},{"lineNumber":64,"author":{"gitId":"oeiyiping"},"content":"                    + \"$$    $$  $$        $$    $$  $$        $$    $$  $$   $$   $$  $$    $$  $$    $$\\n\""},{"lineNumber":65,"author":{"gitId":"oeiyiping"},"content":"                    + \"$$    $$   $$$$$$$  $$    $$   $$$$$$$  $$    $$  $$   $$   $$   $$$$$$$  $$    $$\\n\";"},{"lineNumber":66,"author":{"gitId":"oeiyiping"},"content":""},{"lineNumber":67,"author":{"gitId":"oeiyiping"},"content":"        return \"Greetings Boss, good to see you.\\n\" + \"What can I do for you?\\n\";"},{"lineNumber":68,"author":{"gitId":"oeiyiping"},"content":"    }"},{"lineNumber":69,"author":{"gitId":"oeiyiping"},"content":""},{"lineNumber":70,"author":{"gitId":"oeiyiping"},"content":"    public String printInputPrompt() {"},{"lineNumber":71,"author":{"gitId":"oeiyiping"},"content":"        return \"Hit me up boss.\";"},{"lineNumber":72,"author":{"gitId":"oeiyiping"},"content":"    }"},{"lineNumber":73,"author":{"gitId":"oeiyiping"},"content":""},{"lineNumber":74,"author":{"gitId":"oeiyiping"},"content":"    public String printCommand(Command command) {"},{"lineNumber":75,"author":{"gitId":"oeiyiping"},"content":"        return command.toHenchmanOutput();"},{"lineNumber":76,"author":{"gitId":"oeiyiping"},"content":"    }"},{"lineNumber":77,"author":{"gitId":"oeiyiping"},"content":""},{"lineNumber":78,"author":{"gitId":"oeiyiping"},"content":"    public String printTask(Task task) {"},{"lineNumber":79,"author":{"gitId":"oeiyiping"},"content":"        return task.toString();"},{"lineNumber":80,"author":{"gitId":"oeiyiping"},"content":"    }"},{"lineNumber":81,"author":{"gitId":"oeiyiping"},"content":""},{"lineNumber":82,"author":{"gitId":"oeiyiping"},"content":"    /**"},{"lineNumber":83,"author":{"gitId":"oeiyiping"},"content":"     * Prints the error message of the input exception."},{"lineNumber":84,"author":{"gitId":"oeiyiping"},"content":"     *"},{"lineNumber":85,"author":{"gitId":"oeiyiping"},"content":"     * @param e The caught error to be printed."},{"lineNumber":86,"author":{"gitId":"oeiyiping"},"content":"     */"},{"lineNumber":87,"author":{"gitId":"oeiyiping"},"content":"    public String printErrorMessage(Exception e) {"},{"lineNumber":88,"author":{"gitId":"oeiyiping"},"content":"        return \"Sorry boss something went wrong:\\n\" + e.getMessage();"},{"lineNumber":89,"author":{"gitId":"oeiyiping"},"content":"    }"},{"lineNumber":90,"author":{"gitId":"oeiyiping"},"content":"}"}],"authorContributionMap":{"oeiyiping":90}},{"path":"src/main/java/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"oeiyiping"},"content":"import java.time.LocalDateTime;"},{"lineNumber":2,"author":{"gitId":"oeiyiping"},"content":"import java.time.format.DateTimeParseException;"},{"lineNumber":3,"author":{"gitId":"oeiyiping"},"content":""},{"lineNumber":4,"author":{"gitId":"oeiyiping"},"content":"public class Parser {"},{"lineNumber":5,"author":{"gitId":"oeiyiping"},"content":"    /**"},{"lineNumber":6,"author":{"gitId":"oeiyiping"},"content":"     * Parses a valid input string into the corresponding valid Commmand."},{"lineNumber":7,"author":{"gitId":"oeiyiping"},"content":"     *"},{"lineNumber":8,"author":{"gitId":"oeiyiping"},"content":"     * @param input Input string to be parsed."},{"lineNumber":9,"author":{"gitId":"oeiyiping"},"content":"     * @return The corresponding Command of the input string."},{"lineNumber":10,"author":{"gitId":"oeiyiping"},"content":"     * @throws HenchmanException Thrown exception caused by the reason specified in its error body."},{"lineNumber":11,"author":{"gitId":"oeiyiping"},"content":"     */"},{"lineNumber":12,"author":{"gitId":"oeiyiping"},"content":"    public static Command parse(String input) throws HenchmanException {"},{"lineNumber":13,"author":{"gitId":"oeiyiping"},"content":"        String[] commandAndParams \u003d input.split(\" \", 2);"},{"lineNumber":14,"author":{"gitId":"oeiyiping"},"content":"        String command \u003d commandAndParams[0].toUpperCase();"},{"lineNumber":15,"author":{"gitId":"oeiyiping"},"content":"        Command parsed \u003d null;"},{"lineNumber":16,"author":{"gitId":"oeiyiping"},"content":"        boolean hasParams \u003d commandAndParams.length \u003e 1 \u0026\u0026 !commandAndParams[1].isBlank();"},{"lineNumber":17,"author":{"gitId":"oeiyiping"},"content":""},{"lineNumber":18,"author":{"gitId":"oeiyiping"},"content":"        switch (command) {"},{"lineNumber":19,"author":{"gitId":"oeiyiping"},"content":"        case \"BYE\":"},{"lineNumber":20,"author":{"gitId":"oeiyiping"},"content":"            parsed \u003d new CommandBye();"},{"lineNumber":21,"author":{"gitId":"oeiyiping"},"content":"            break;"},{"lineNumber":22,"author":{"gitId":"oeiyiping"},"content":""},{"lineNumber":23,"author":{"gitId":"oeiyiping"},"content":"        case \"CLEAR\":"},{"lineNumber":24,"author":{"gitId":"oeiyiping"},"content":"            parsed \u003d new CommandClear();"},{"lineNumber":25,"author":{"gitId":"oeiyiping"},"content":"            break;"},{"lineNumber":26,"author":{"gitId":"oeiyiping"},"content":""},{"lineNumber":27,"author":{"gitId":"oeiyiping"},"content":"        case \"DEADLINE\":"},{"lineNumber":28,"author":{"gitId":"oeiyiping"},"content":"            if (!hasParams) {"},{"lineNumber":29,"author":{"gitId":"oeiyiping"},"content":"                throw new HenchmanException(\"DEADLINE description and date cannot be empty!\");"},{"lineNumber":30,"author":{"gitId":"oeiyiping"},"content":"            }"},{"lineNumber":31,"author":{"gitId":"oeiyiping"},"content":""},{"lineNumber":32,"author":{"gitId":"oeiyiping"},"content":"            parsed \u003d parseTimedTaskInput(commandAndParams[1], command);"},{"lineNumber":33,"author":{"gitId":"oeiyiping"},"content":"            break;"},{"lineNumber":34,"author":{"gitId":"oeiyiping"},"content":""},{"lineNumber":35,"author":{"gitId":"oeiyiping"},"content":"        case \"DELETE\":"},{"lineNumber":36,"author":{"gitId":"oeiyiping"},"content":"            if (!hasParams) {"},{"lineNumber":37,"author":{"gitId":"oeiyiping"},"content":"                throw new HenchmanException(\"Task index cannot be empty!\");"},{"lineNumber":38,"author":{"gitId":"oeiyiping"},"content":"            }"},{"lineNumber":39,"author":{"gitId":"oeiyiping"},"content":""},{"lineNumber":40,"author":{"gitId":"oeiyiping"},"content":"            parsed \u003d new CommandDelete(Integer.parseInt(commandAndParams[1]));"},{"lineNumber":41,"author":{"gitId":"oeiyiping"},"content":"            break;"},{"lineNumber":42,"author":{"gitId":"oeiyiping"},"content":""},{"lineNumber":43,"author":{"gitId":"oeiyiping"},"content":"        case \"DONE\":"},{"lineNumber":44,"author":{"gitId":"oeiyiping"},"content":"            if (!hasParams) {"},{"lineNumber":45,"author":{"gitId":"oeiyiping"},"content":"                throw new HenchmanException(\"Task index cannot be empty!\");"},{"lineNumber":46,"author":{"gitId":"oeiyiping"},"content":"            }"},{"lineNumber":47,"author":{"gitId":"oeiyiping"},"content":""},{"lineNumber":48,"author":{"gitId":"oeiyiping"},"content":"            parsed \u003d new CommandDone(Integer.parseInt(commandAndParams[1]));"},{"lineNumber":49,"author":{"gitId":"oeiyiping"},"content":"            break;"},{"lineNumber":50,"author":{"gitId":"oeiyiping"},"content":""},{"lineNumber":51,"author":{"gitId":"oeiyiping"},"content":"        case \"EVENT\":"},{"lineNumber":52,"author":{"gitId":"oeiyiping"},"content":"            if (!hasParams) {"},{"lineNumber":53,"author":{"gitId":"oeiyiping"},"content":"                throw new HenchmanException(\"EVENT description and date cannot be empty!\");"},{"lineNumber":54,"author":{"gitId":"oeiyiping"},"content":"            }"},{"lineNumber":55,"author":{"gitId":"oeiyiping"},"content":""},{"lineNumber":56,"author":{"gitId":"oeiyiping"},"content":"            parsed \u003d parseTimedTaskInput(commandAndParams[1], command);"},{"lineNumber":57,"author":{"gitId":"oeiyiping"},"content":"            break;"},{"lineNumber":58,"author":{"gitId":"oeiyiping"},"content":""},{"lineNumber":59,"author":{"gitId":"oeiyiping"},"content":"        case \"FIND\":"},{"lineNumber":60,"author":{"gitId":"oeiyiping"},"content":"            if (!hasParams) {"},{"lineNumber":61,"author":{"gitId":"oeiyiping"},"content":"                throw new HenchmanException(\"Search term cannot be empty!\");"},{"lineNumber":62,"author":{"gitId":"oeiyiping"},"content":"            }"},{"lineNumber":63,"author":{"gitId":"oeiyiping"},"content":""},{"lineNumber":64,"author":{"gitId":"oeiyiping"},"content":"            parsed \u003d new CommandFind(commandAndParams[1]);"},{"lineNumber":65,"author":{"gitId":"oeiyiping"},"content":"            break;"},{"lineNumber":66,"author":{"gitId":"oeiyiping"},"content":""},{"lineNumber":67,"author":{"gitId":"oeiyiping"},"content":"        case \"LIST\":"},{"lineNumber":68,"author":{"gitId":"oeiyiping"},"content":"            parsed \u003d new CommandList();"},{"lineNumber":69,"author":{"gitId":"oeiyiping"},"content":"            break;"},{"lineNumber":70,"author":{"gitId":"oeiyiping"},"content":""},{"lineNumber":71,"author":{"gitId":"oeiyiping"},"content":"        case \"SORT\":"},{"lineNumber":72,"author":{"gitId":"oeiyiping"},"content":"            if (hasParams) {"},{"lineNumber":73,"author":{"gitId":"oeiyiping"},"content":"                parsed \u003d new CommandSort(commandAndParams[1]);"},{"lineNumber":74,"author":{"gitId":"oeiyiping"},"content":"            } else {"},{"lineNumber":75,"author":{"gitId":"oeiyiping"},"content":"                parsed \u003d new CommandSort(\"CREATED\");"},{"lineNumber":76,"author":{"gitId":"oeiyiping"},"content":"            }"},{"lineNumber":77,"author":{"gitId":"oeiyiping"},"content":"            break;"},{"lineNumber":78,"author":{"gitId":"oeiyiping"},"content":""},{"lineNumber":79,"author":{"gitId":"oeiyiping"},"content":"        case \"TODO\":"},{"lineNumber":80,"author":{"gitId":"oeiyiping"},"content":"            if (!hasParams) {"},{"lineNumber":81,"author":{"gitId":"oeiyiping"},"content":"                throw new HenchmanException(\"TODO description cannot be empty!\");"},{"lineNumber":82,"author":{"gitId":"oeiyiping"},"content":"            }"},{"lineNumber":83,"author":{"gitId":"oeiyiping"},"content":""},{"lineNumber":84,"author":{"gitId":"oeiyiping"},"content":"            parsed \u003d new CommandToDo(commandAndParams[1]);"},{"lineNumber":85,"author":{"gitId":"oeiyiping"},"content":"            break;"},{"lineNumber":86,"author":{"gitId":"oeiyiping"},"content":""},{"lineNumber":87,"author":{"gitId":"oeiyiping"},"content":"        default:"},{"lineNumber":88,"author":{"gitId":"oeiyiping"},"content":"            throw new HenchmanException(\"Invalid command, please provide a supported command.\");"},{"lineNumber":89,"author":{"gitId":"oeiyiping"},"content":"        }"},{"lineNumber":90,"author":{"gitId":"oeiyiping"},"content":""},{"lineNumber":91,"author":{"gitId":"oeiyiping"},"content":"        assert parsed !\u003d null : \"Error in parsed command: parsed command is null\";"},{"lineNumber":92,"author":{"gitId":"oeiyiping"},"content":""},{"lineNumber":93,"author":{"gitId":"oeiyiping"},"content":"        return parsed;"},{"lineNumber":94,"author":{"gitId":"oeiyiping"},"content":"    }"},{"lineNumber":95,"author":{"gitId":"oeiyiping"},"content":""},{"lineNumber":96,"author":{"gitId":"oeiyiping"},"content":"    private static Command parseTimedTaskInput(String input, String taskType) throws HenchmanException,"},{"lineNumber":97,"author":{"gitId":"oeiyiping"},"content":"            DateTimeParseException {"},{"lineNumber":98,"author":{"gitId":"oeiyiping"},"content":""},{"lineNumber":99,"author":{"gitId":"oeiyiping"},"content":"        char taskIcon \u003d taskType.charAt(0);"},{"lineNumber":100,"author":{"gitId":"oeiyiping"},"content":"        String delimiter \u003d null;"},{"lineNumber":101,"author":{"gitId":"oeiyiping"},"content":"        String defaultTime \u003d null;"},{"lineNumber":102,"author":{"gitId":"oeiyiping"},"content":""},{"lineNumber":103,"author":{"gitId":"oeiyiping"},"content":"        switch (taskIcon) {"},{"lineNumber":104,"author":{"gitId":"oeiyiping"},"content":"        case \u0027D\u0027:"},{"lineNumber":105,"author":{"gitId":"oeiyiping"},"content":"            delimiter \u003d \" /by \";"},{"lineNumber":106,"author":{"gitId":"oeiyiping"},"content":"            defaultTime \u003d \"23:59:59\";"},{"lineNumber":107,"author":{"gitId":"oeiyiping"},"content":"            break;"},{"lineNumber":108,"author":{"gitId":"oeiyiping"},"content":"        case \u0027E\u0027:"},{"lineNumber":109,"author":{"gitId":"oeiyiping"},"content":"            delimiter \u003d \" /at \";"},{"lineNumber":110,"author":{"gitId":"oeiyiping"},"content":"            defaultTime \u003d \"00:00:00\";"},{"lineNumber":111,"author":{"gitId":"oeiyiping"},"content":"            break;"},{"lineNumber":112,"author":{"gitId":"oeiyiping"},"content":"        default:"},{"lineNumber":113,"author":{"gitId":"oeiyiping"},"content":"            // do nothing on default"},{"lineNumber":114,"author":{"gitId":"oeiyiping"},"content":"            break;"},{"lineNumber":115,"author":{"gitId":"oeiyiping"},"content":"        }"},{"lineNumber":116,"author":{"gitId":"oeiyiping"},"content":""},{"lineNumber":117,"author":{"gitId":"oeiyiping"},"content":"        assert delimiter !\u003d null : \"Split key is invalid.\";"},{"lineNumber":118,"author":{"gitId":"oeiyiping"},"content":"        String[] arguments \u003d input.split(delimiter, 2);"},{"lineNumber":119,"author":{"gitId":"oeiyiping"},"content":""},{"lineNumber":120,"author":{"gitId":"oeiyiping"},"content":"        if (arguments.length !\u003d 2) {"},{"lineNumber":121,"author":{"gitId":"oeiyiping"},"content":"            String errorMsg \u003d taskType + \" command must follow the format: description\" + delimiter + \"date\";"},{"lineNumber":122,"author":{"gitId":"oeiyiping"},"content":"            throw new HenchmanException(errorMsg);"},{"lineNumber":123,"author":{"gitId":"oeiyiping"},"content":"        }"},{"lineNumber":124,"author":{"gitId":"oeiyiping"},"content":""},{"lineNumber":125,"author":{"gitId":"oeiyiping"},"content":"        String[] dateAndTime \u003d arguments[1].split(\" \");"},{"lineNumber":126,"author":{"gitId":"oeiyiping"},"content":"        String date \u003d dateAndTime[0];"},{"lineNumber":127,"author":{"gitId":"oeiyiping"},"content":"        String time \u003d dateAndTime.length \u003e 1 // if time is not provided, use default time"},{"lineNumber":128,"author":{"gitId":"oeiyiping"},"content":"                ? dateAndTime[1].substring(0, 2) + \":\" + dateAndTime[1].substring(2, 4)"},{"lineNumber":129,"author":{"gitId":"oeiyiping"},"content":"                : defaultTime;"},{"lineNumber":130,"author":{"gitId":"oeiyiping"},"content":""},{"lineNumber":131,"author":{"gitId":"oeiyiping"},"content":"        try {"},{"lineNumber":132,"author":{"gitId":"oeiyiping"},"content":"            LocalDateTime parsedDateAndTime \u003d LocalDateTime.parse(date + \"T\" + time);"},{"lineNumber":133,"author":{"gitId":"oeiyiping"},"content":"            Command timedTaskCommand \u003d null;"},{"lineNumber":134,"author":{"gitId":"oeiyiping"},"content":"            switch (taskIcon) {"},{"lineNumber":135,"author":{"gitId":"oeiyiping"},"content":"            case \u0027D\u0027:"},{"lineNumber":136,"author":{"gitId":"oeiyiping"},"content":"                timedTaskCommand \u003d new CommandDeadline(arguments[0], parsedDateAndTime);"},{"lineNumber":137,"author":{"gitId":"oeiyiping"},"content":"                break;"},{"lineNumber":138,"author":{"gitId":"oeiyiping"},"content":""},{"lineNumber":139,"author":{"gitId":"oeiyiping"},"content":"            case \u0027E\u0027:"},{"lineNumber":140,"author":{"gitId":"oeiyiping"},"content":"                timedTaskCommand \u003d new CommandEvent(arguments[0], parsedDateAndTime);"},{"lineNumber":141,"author":{"gitId":"oeiyiping"},"content":"                break;"},{"lineNumber":142,"author":{"gitId":"oeiyiping"},"content":""},{"lineNumber":143,"author":{"gitId":"oeiyiping"},"content":"            default:"},{"lineNumber":144,"author":{"gitId":"oeiyiping"},"content":"                break; // do nothing on default"},{"lineNumber":145,"author":{"gitId":"oeiyiping"},"content":"            }"},{"lineNumber":146,"author":{"gitId":"oeiyiping"},"content":""},{"lineNumber":147,"author":{"gitId":"oeiyiping"},"content":"            assert timedTaskCommand !\u003d null : \"Error in creating timedTaskCommand.\";"},{"lineNumber":148,"author":{"gitId":"oeiyiping"},"content":"            return timedTaskCommand;"},{"lineNumber":149,"author":{"gitId":"oeiyiping"},"content":""},{"lineNumber":150,"author":{"gitId":"oeiyiping"},"content":"        } catch (DateTimeParseException e) {"},{"lineNumber":151,"author":{"gitId":"oeiyiping"},"content":"            throw new HenchmanException(\"Please follow the Date-Time format: YYYY-MM-DD TIME\");"},{"lineNumber":152,"author":{"gitId":"oeiyiping"},"content":"        }"},{"lineNumber":153,"author":{"gitId":"oeiyiping"},"content":"    }"},{"lineNumber":154,"author":{"gitId":"oeiyiping"},"content":"}"}],"authorContributionMap":{"oeiyiping":154}},{"path":"src/main/java/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"oeiyiping"},"content":"import java.io.BufferedReader;"},{"lineNumber":2,"author":{"gitId":"oeiyiping"},"content":"import java.io.BufferedWriter;"},{"lineNumber":3,"author":{"gitId":"oeiyiping"},"content":"import java.io.File;"},{"lineNumber":4,"author":{"gitId":"oeiyiping"},"content":"import java.io.FileReader;"},{"lineNumber":5,"author":{"gitId":"oeiyiping"},"content":"import java.io.FileWriter;"},{"lineNumber":6,"author":{"gitId":"oeiyiping"},"content":"import java.io.IOException;"},{"lineNumber":7,"author":{"gitId":"oeiyiping"},"content":"import java.time.LocalDateTime;"},{"lineNumber":8,"author":{"gitId":"oeiyiping"},"content":"import java.util.ArrayList;"},{"lineNumber":9,"author":{"gitId":"oeiyiping"},"content":""},{"lineNumber":10,"author":{"gitId":"oeiyiping"},"content":"/**"},{"lineNumber":11,"author":{"gitId":"oeiyiping"},"content":" * Storage uses current directory as save/load location."},{"lineNumber":12,"author":{"gitId":"oeiyiping"},"content":" */"},{"lineNumber":13,"author":{"gitId":"oeiyiping"},"content":"public class Storage {"},{"lineNumber":14,"author":{"gitId":"oeiyiping"},"content":""},{"lineNumber":15,"author":{"gitId":"oeiyiping"},"content":"    /**"},{"lineNumber":16,"author":{"gitId":"oeiyiping"},"content":"     * Saves the tasks in taskList into save file \"henchman_saved_tasks\" in the same directory."},{"lineNumber":17,"author":{"gitId":"oeiyiping"},"content":"     *"},{"lineNumber":18,"author":{"gitId":"oeiyiping"},"content":"     * @param taskList TaskList containing the tasks to be saved."},{"lineNumber":19,"author":{"gitId":"oeiyiping"},"content":"     */"},{"lineNumber":20,"author":{"gitId":"oeiyiping"},"content":"    public void save(TaskList taskList) {"},{"lineNumber":21,"author":{"gitId":"oeiyiping"},"content":"        try {"},{"lineNumber":22,"author":{"gitId":"oeiyiping"},"content":"            FileWriter fileWriter \u003d new FileWriter(\"henchman_saved_tasks\");"},{"lineNumber":23,"author":{"gitId":"oeiyiping"},"content":"            BufferedWriter bufferedWriter \u003d new BufferedWriter(fileWriter);"},{"lineNumber":24,"author":{"gitId":"oeiyiping"},"content":""},{"lineNumber":25,"author":{"gitId":"oeiyiping"},"content":"            ArrayList\u003cTask\u003e tasks \u003d taskList.getTasks();"},{"lineNumber":26,"author":{"gitId":"oeiyiping"},"content":"            for (Task t : tasks) {"},{"lineNumber":27,"author":{"gitId":"oeiyiping"},"content":"                bufferedWriter.write(t.toLog() + \"\\n\");"},{"lineNumber":28,"author":{"gitId":"oeiyiping"},"content":"            }"},{"lineNumber":29,"author":{"gitId":"oeiyiping"},"content":""},{"lineNumber":30,"author":{"gitId":"oeiyiping"},"content":"            bufferedWriter.flush();"},{"lineNumber":31,"author":{"gitId":"oeiyiping"},"content":""},{"lineNumber":32,"author":{"gitId":"oeiyiping"},"content":"        } catch (IOException e) {"},{"lineNumber":33,"author":{"gitId":"oeiyiping"},"content":"            System.out.println(e);"},{"lineNumber":34,"author":{"gitId":"oeiyiping"},"content":"        }"},{"lineNumber":35,"author":{"gitId":"oeiyiping"},"content":"    }"},{"lineNumber":36,"author":{"gitId":"oeiyiping"},"content":""},{"lineNumber":37,"author":{"gitId":"oeiyiping"},"content":"    /**"},{"lineNumber":38,"author":{"gitId":"oeiyiping"},"content":"     * Builds and return an ArrayList of Tasks from the saved tasks in the save file \"henchman_saved_tasks\" in the same"},{"lineNumber":39,"author":{"gitId":"oeiyiping"},"content":"     * directory."},{"lineNumber":40,"author":{"gitId":"oeiyiping"},"content":"     *"},{"lineNumber":41,"author":{"gitId":"oeiyiping"},"content":"     * @return ArrayList of Tasks from the saved tasks in the save file \"henchman_saved_tasks\""},{"lineNumber":42,"author":{"gitId":"oeiyiping"},"content":"     * @throws HenchmanException Thrown exception when an error occurs during loading, according to the reason specified"},{"lineNumber":43,"author":{"gitId":"oeiyiping"},"content":"     * in error body."},{"lineNumber":44,"author":{"gitId":"oeiyiping"},"content":"     */"},{"lineNumber":45,"author":{"gitId":"oeiyiping"},"content":"    public ArrayList\u003cTask\u003e load() throws HenchmanException {"},{"lineNumber":46,"author":{"gitId":"oeiyiping"},"content":"        try {"},{"lineNumber":47,"author":{"gitId":"oeiyiping"},"content":"            File file \u003d new File(\"henchman_saved_tasks\");"},{"lineNumber":48,"author":{"gitId":"oeiyiping"},"content":"            boolean fileIsAlreadyPresent \u003d !file.createNewFile();"},{"lineNumber":49,"author":{"gitId":"oeiyiping"},"content":""},{"lineNumber":50,"author":{"gitId":"oeiyiping"},"content":"            if (fileIsAlreadyPresent) {"},{"lineNumber":51,"author":{"gitId":"oeiyiping"},"content":"                FileReader fileReader \u003d new FileReader(file);"},{"lineNumber":52,"author":{"gitId":"oeiyiping"},"content":"                BufferedReader bufferedReader \u003d new BufferedReader(fileReader);"},{"lineNumber":53,"author":{"gitId":"oeiyiping"},"content":"                String currLine \u003d bufferedReader.readLine();"},{"lineNumber":54,"author":{"gitId":"oeiyiping"},"content":"                ArrayList\u003cTask\u003e loadedTasks \u003d new ArrayList\u003c\u003e();"},{"lineNumber":55,"author":{"gitId":"oeiyiping"},"content":""},{"lineNumber":56,"author":{"gitId":"oeiyiping"},"content":"                while (currLine !\u003d null) {"},{"lineNumber":57,"author":{"gitId":"oeiyiping"},"content":"                    String[] split \u003d currLine.split(\" \\\\| \");"},{"lineNumber":58,"author":{"gitId":"oeiyiping"},"content":"                    String icon \u003d split[0];"},{"lineNumber":59,"author":{"gitId":"oeiyiping"},"content":"                    String isDone \u003d split[1];"},{"lineNumber":60,"author":{"gitId":"oeiyiping"},"content":"                    String description \u003d split[2];"},{"lineNumber":61,"author":{"gitId":"oeiyiping"},"content":"                    String timeCreated \u003d split[3];"},{"lineNumber":62,"author":{"gitId":"oeiyiping"},"content":""},{"lineNumber":63,"author":{"gitId":"oeiyiping"},"content":"                    switch (icon) {"},{"lineNumber":64,"author":{"gitId":"oeiyiping"},"content":"                    case \"D\":"},{"lineNumber":65,"author":{"gitId":"oeiyiping"},"content":"                        Deadline deadline \u003d new Deadline(description, LocalDateTime.parse(timeCreated),"},{"lineNumber":66,"author":{"gitId":"oeiyiping"},"content":"                                LocalDateTime.parse(split[4]));"},{"lineNumber":67,"author":{"gitId":"oeiyiping"},"content":"                        setDoneStatus(deadline, isDone);"},{"lineNumber":68,"author":{"gitId":"oeiyiping"},"content":"                        loadedTasks.add(deadline);"},{"lineNumber":69,"author":{"gitId":"oeiyiping"},"content":"                        break;"},{"lineNumber":70,"author":{"gitId":"oeiyiping"},"content":""},{"lineNumber":71,"author":{"gitId":"oeiyiping"},"content":"                    case \"E\":"},{"lineNumber":72,"author":{"gitId":"oeiyiping"},"content":"                        Event event \u003d new Event(description, LocalDateTime.parse(timeCreated),"},{"lineNumber":73,"author":{"gitId":"oeiyiping"},"content":"                                LocalDateTime.parse(split[4]));"},{"lineNumber":74,"author":{"gitId":"oeiyiping"},"content":"                        setDoneStatus(event, isDone);"},{"lineNumber":75,"author":{"gitId":"oeiyiping"},"content":"                        loadedTasks.add(event);"},{"lineNumber":76,"author":{"gitId":"oeiyiping"},"content":"                        break;"},{"lineNumber":77,"author":{"gitId":"oeiyiping"},"content":""},{"lineNumber":78,"author":{"gitId":"oeiyiping"},"content":"                    case \"T\":"},{"lineNumber":79,"author":{"gitId":"oeiyiping"},"content":"                        ToDo toDo \u003d new ToDo(description, LocalDateTime.parse(timeCreated));"},{"lineNumber":80,"author":{"gitId":"oeiyiping"},"content":"                        setDoneStatus(toDo, isDone);"},{"lineNumber":81,"author":{"gitId":"oeiyiping"},"content":"                        loadedTasks.add(toDo);"},{"lineNumber":82,"author":{"gitId":"oeiyiping"},"content":"                        break;"},{"lineNumber":83,"author":{"gitId":"oeiyiping"},"content":""},{"lineNumber":84,"author":{"gitId":"oeiyiping"},"content":"                    default:"},{"lineNumber":85,"author":{"gitId":"oeiyiping"},"content":"                        throw new HenchmanException(\"Wrong save format, unable to load.\");"},{"lineNumber":86,"author":{"gitId":"oeiyiping"},"content":"                    }"},{"lineNumber":87,"author":{"gitId":"oeiyiping"},"content":""},{"lineNumber":88,"author":{"gitId":"oeiyiping"},"content":"                    currLine \u003d bufferedReader.readLine();"},{"lineNumber":89,"author":{"gitId":"oeiyiping"},"content":"                }"},{"lineNumber":90,"author":{"gitId":"oeiyiping"},"content":""},{"lineNumber":91,"author":{"gitId":"oeiyiping"},"content":"                return loadedTasks;"},{"lineNumber":92,"author":{"gitId":"oeiyiping"},"content":""},{"lineNumber":93,"author":{"gitId":"oeiyiping"},"content":"            } else {"},{"lineNumber":94,"author":{"gitId":"oeiyiping"},"content":"                throw new HenchmanException(\"No existing save file, creating new save now.\\n\");"},{"lineNumber":95,"author":{"gitId":"oeiyiping"},"content":"            }"},{"lineNumber":96,"author":{"gitId":"oeiyiping"},"content":""},{"lineNumber":97,"author":{"gitId":"oeiyiping"},"content":"        } catch (IOException e) {"},{"lineNumber":98,"author":{"gitId":"oeiyiping"},"content":"            throw new HenchmanException(\"Error loading file, creating new save now.\\n\");"},{"lineNumber":99,"author":{"gitId":"oeiyiping"},"content":"        }"},{"lineNumber":100,"author":{"gitId":"oeiyiping"},"content":""},{"lineNumber":101,"author":{"gitId":"oeiyiping"},"content":"    }"},{"lineNumber":102,"author":{"gitId":"oeiyiping"},"content":""},{"lineNumber":103,"author":{"gitId":"oeiyiping"},"content":"    private void setDoneStatus(Task task, String isDone) {"},{"lineNumber":104,"author":{"gitId":"oeiyiping"},"content":"        if (isDone.equals(\"T\")) {"},{"lineNumber":105,"author":{"gitId":"oeiyiping"},"content":"            task.setDone();"},{"lineNumber":106,"author":{"gitId":"oeiyiping"},"content":"        }"},{"lineNumber":107,"author":{"gitId":"oeiyiping"},"content":"    }"},{"lineNumber":108,"author":{"gitId":"oeiyiping"},"content":"}"},{"lineNumber":109,"author":{"gitId":"oeiyiping"},"content":""}],"authorContributionMap":{"oeiyiping":109}},{"path":"src/main/java/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"oeiyiping"},"content":"import java.time.LocalDateTime;"},{"lineNumber":2,"author":{"gitId":"oeiyiping"},"content":""},{"lineNumber":3,"author":{"gitId":"oeiyiping"},"content":"/**"},{"lineNumber":4,"author":{"gitId":"oeiyiping"},"content":" * Represents Task object."},{"lineNumber":5,"author":{"gitId":"oeiyiping"},"content":" */"},{"lineNumber":6,"author":{"gitId":"oeiyiping"},"content":"public abstract class Task implements Comparable\u003cTask\u003e {"},{"lineNumber":7,"author":{"gitId":"oeiyiping"},"content":"    protected String description;"},{"lineNumber":8,"author":{"gitId":"oeiyiping"},"content":"    protected boolean isDone;"},{"lineNumber":9,"author":{"gitId":"oeiyiping"},"content":"    protected final String icon;"},{"lineNumber":10,"author":{"gitId":"oeiyiping"},"content":"    protected final LocalDateTime timeCreated;"},{"lineNumber":11,"author":{"gitId":"oeiyiping"},"content":""},{"lineNumber":12,"author":{"gitId":"oeiyiping"},"content":"    protected Task(String description, String icon) {"},{"lineNumber":13,"author":{"gitId":"oeiyiping"},"content":"        this.description \u003d description;"},{"lineNumber":14,"author":{"gitId":"oeiyiping"},"content":"        this.icon \u003d icon;"},{"lineNumber":15,"author":{"gitId":"oeiyiping"},"content":"        isDone \u003d false;"},{"lineNumber":16,"author":{"gitId":"oeiyiping"},"content":"        this.timeCreated \u003d LocalDateTime.now();"},{"lineNumber":17,"author":{"gitId":"oeiyiping"},"content":"    }"},{"lineNumber":18,"author":{"gitId":"oeiyiping"},"content":""},{"lineNumber":19,"author":{"gitId":"oeiyiping"},"content":"    protected Task(String description, LocalDateTime timeCreated, String icon) {"},{"lineNumber":20,"author":{"gitId":"oeiyiping"},"content":"        this.description \u003d description;"},{"lineNumber":21,"author":{"gitId":"oeiyiping"},"content":"        this.icon \u003d icon;"},{"lineNumber":22,"author":{"gitId":"oeiyiping"},"content":"        isDone \u003d false;"},{"lineNumber":23,"author":{"gitId":"oeiyiping"},"content":"        this.timeCreated \u003d timeCreated;"},{"lineNumber":24,"author":{"gitId":"oeiyiping"},"content":"    }"},{"lineNumber":25,"author":{"gitId":"oeiyiping"},"content":""},{"lineNumber":26,"author":{"gitId":"oeiyiping"},"content":"    public String getDescription() {"},{"lineNumber":27,"author":{"gitId":"oeiyiping"},"content":"        return description;"},{"lineNumber":28,"author":{"gitId":"oeiyiping"},"content":"    }"},{"lineNumber":29,"author":{"gitId":"oeiyiping"},"content":""},{"lineNumber":30,"author":{"gitId":"oeiyiping"},"content":"    public LocalDateTime getTimeCreated() {"},{"lineNumber":31,"author":{"gitId":"oeiyiping"},"content":"        return timeCreated;"},{"lineNumber":32,"author":{"gitId":"oeiyiping"},"content":"    }"},{"lineNumber":33,"author":{"gitId":"oeiyiping"},"content":""},{"lineNumber":34,"author":{"gitId":"oeiyiping"},"content":"    public String getIcon() {"},{"lineNumber":35,"author":{"gitId":"oeiyiping"},"content":"        return icon;"},{"lineNumber":36,"author":{"gitId":"oeiyiping"},"content":"    }"},{"lineNumber":37,"author":{"gitId":"oeiyiping"},"content":""},{"lineNumber":38,"author":{"gitId":"oeiyiping"},"content":"    public boolean isDone() {"},{"lineNumber":39,"author":{"gitId":"oeiyiping"},"content":"        return isDone;"},{"lineNumber":40,"author":{"gitId":"oeiyiping"},"content":"    }"},{"lineNumber":41,"author":{"gitId":"oeiyiping"},"content":""},{"lineNumber":42,"author":{"gitId":"oeiyiping"},"content":"    public void setDone() {"},{"lineNumber":43,"author":{"gitId":"oeiyiping"},"content":"        this.isDone \u003d true;"},{"lineNumber":44,"author":{"gitId":"oeiyiping"},"content":"    }"},{"lineNumber":45,"author":{"gitId":"oeiyiping"},"content":""},{"lineNumber":46,"author":{"gitId":"oeiyiping"},"content":"    public void changeDescription(String newDescription) {"},{"lineNumber":47,"author":{"gitId":"oeiyiping"},"content":"        this.description \u003d newDescription;"},{"lineNumber":48,"author":{"gitId":"oeiyiping"},"content":"    }"},{"lineNumber":49,"author":{"gitId":"oeiyiping"},"content":""},{"lineNumber":50,"author":{"gitId":"oeiyiping"},"content":"    /**"},{"lineNumber":51,"author":{"gitId":"oeiyiping"},"content":"     * Returns the String representation of the Task."},{"lineNumber":52,"author":{"gitId":"oeiyiping"},"content":"     *"},{"lineNumber":53,"author":{"gitId":"oeiyiping"},"content":"     * @return String representation of the Task."},{"lineNumber":54,"author":{"gitId":"oeiyiping"},"content":"     */"},{"lineNumber":55,"author":{"gitId":"oeiyiping"},"content":"    public String toString() {"},{"lineNumber":56,"author":{"gitId":"oeiyiping"},"content":"        String doneIcon \u003d isDone ? \"[X]\" : \"[ ]\";"},{"lineNumber":57,"author":{"gitId":"oeiyiping"},"content":"        return \"[\" + icon + \"]\" + doneIcon + \" \" + this.description;"},{"lineNumber":58,"author":{"gitId":"oeiyiping"},"content":"    }"},{"lineNumber":59,"author":{"gitId":"oeiyiping"},"content":""},{"lineNumber":60,"author":{"gitId":"oeiyiping"},"content":"    /**"},{"lineNumber":61,"author":{"gitId":"oeiyiping"},"content":"     * Returns the save format of the Task."},{"lineNumber":62,"author":{"gitId":"oeiyiping"},"content":"     *"},{"lineNumber":63,"author":{"gitId":"oeiyiping"},"content":"     * @return Save format of the Task."},{"lineNumber":64,"author":{"gitId":"oeiyiping"},"content":"     */"},{"lineNumber":65,"author":{"gitId":"oeiyiping"},"content":"    public String toLog() {"},{"lineNumber":66,"author":{"gitId":"oeiyiping"},"content":"        String doneIcon \u003d isDone ? \"T\" : \"F\";"},{"lineNumber":67,"author":{"gitId":"oeiyiping"},"content":"        return icon + \" | \" + doneIcon + \" | \" + this.description + \" | \" + this.timeCreated.toString();"},{"lineNumber":68,"author":{"gitId":"oeiyiping"},"content":"    }"},{"lineNumber":69,"author":{"gitId":"oeiyiping"},"content":""},{"lineNumber":70,"author":{"gitId":"oeiyiping"},"content":"    // by default compare by timeCreated"},{"lineNumber":71,"author":{"gitId":"oeiyiping"},"content":"    public int compareTo(Task that) {"},{"lineNumber":72,"author":{"gitId":"oeiyiping"},"content":"        return this.timeCreated.compareTo(that.timeCreated);"},{"lineNumber":73,"author":{"gitId":"oeiyiping"},"content":"    }"},{"lineNumber":74,"author":{"gitId":"oeiyiping"},"content":""},{"lineNumber":75,"author":{"gitId":"oeiyiping"},"content":"    public boolean isTimed() {"},{"lineNumber":76,"author":{"gitId":"oeiyiping"},"content":"        return false;"},{"lineNumber":77,"author":{"gitId":"oeiyiping"},"content":"    }"},{"lineNumber":78,"author":{"gitId":"oeiyiping"},"content":"}"}],"authorContributionMap":{"oeiyiping":78}},{"path":"src/main/java/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"oeiyiping"},"content":"import java.time.LocalDateTime;"},{"lineNumber":2,"author":{"gitId":"oeiyiping"},"content":"import java.util.ArrayList;"},{"lineNumber":3,"author":{"gitId":"oeiyiping"},"content":"import java.util.Comparator;"},{"lineNumber":4,"author":{"gitId":"oeiyiping"},"content":""},{"lineNumber":5,"author":{"gitId":"oeiyiping"},"content":"/**"},{"lineNumber":6,"author":{"gitId":"oeiyiping"},"content":" * Represents the list of Tasks in Henchman object. Supports operations that deal with modifying of the tasks."},{"lineNumber":7,"author":{"gitId":"oeiyiping"},"content":" */"},{"lineNumber":8,"author":{"gitId":"oeiyiping"},"content":"public class TaskList {"},{"lineNumber":9,"author":{"gitId":"oeiyiping"},"content":"    private final ArrayList\u003cTask\u003e tasks;"},{"lineNumber":10,"author":{"gitId":"oeiyiping"},"content":""},{"lineNumber":11,"author":{"gitId":"oeiyiping"},"content":"    public TaskList() {"},{"lineNumber":12,"author":{"gitId":"oeiyiping"},"content":"        this.tasks \u003d new ArrayList\u003c\u003e();"},{"lineNumber":13,"author":{"gitId":"oeiyiping"},"content":"    }"},{"lineNumber":14,"author":{"gitId":"oeiyiping"},"content":""},{"lineNumber":15,"author":{"gitId":"oeiyiping"},"content":"    public TaskList(ArrayList\u003cTask\u003e tasks) {"},{"lineNumber":16,"author":{"gitId":"oeiyiping"},"content":"        this.tasks \u003d tasks;"},{"lineNumber":17,"author":{"gitId":"oeiyiping"},"content":"    }"},{"lineNumber":18,"author":{"gitId":"oeiyiping"},"content":""},{"lineNumber":19,"author":{"gitId":"oeiyiping"},"content":"    public void addTask(Task task) {"},{"lineNumber":20,"author":{"gitId":"oeiyiping"},"content":"        tasks.add(task);"},{"lineNumber":21,"author":{"gitId":"oeiyiping"},"content":"    }"},{"lineNumber":22,"author":{"gitId":"oeiyiping"},"content":""},{"lineNumber":23,"author":{"gitId":"oeiyiping"},"content":"    /**"},{"lineNumber":24,"author":{"gitId":"oeiyiping"},"content":"     * Removes the task specified by the input index from the TaskList."},{"lineNumber":25,"author":{"gitId":"oeiyiping"},"content":"     *"},{"lineNumber":26,"author":{"gitId":"oeiyiping"},"content":"     * @param index Index of the file to be deleted."},{"lineNumber":27,"author":{"gitId":"oeiyiping"},"content":"     * @return The deleted task."},{"lineNumber":28,"author":{"gitId":"oeiyiping"},"content":"     */"},{"lineNumber":29,"author":{"gitId":"oeiyiping"},"content":"    public Task deleteTask(int index) {"},{"lineNumber":30,"author":{"gitId":"oeiyiping"},"content":"        Task task \u003d tasks.get(index - 1);"},{"lineNumber":31,"author":{"gitId":"oeiyiping"},"content":"        tasks.remove(index - 1);"},{"lineNumber":32,"author":{"gitId":"oeiyiping"},"content":""},{"lineNumber":33,"author":{"gitId":"oeiyiping"},"content":"        return task;"},{"lineNumber":34,"author":{"gitId":"oeiyiping"},"content":"    }"},{"lineNumber":35,"author":{"gitId":"oeiyiping"},"content":""},{"lineNumber":36,"author":{"gitId":"oeiyiping"},"content":"    /**"},{"lineNumber":37,"author":{"gitId":"oeiyiping"},"content":"     * Sets the task specified by the input index from the TaskList as done."},{"lineNumber":38,"author":{"gitId":"oeiyiping"},"content":"     *"},{"lineNumber":39,"author":{"gitId":"oeiyiping"},"content":"     * @param index Index of the file to be set as done."},{"lineNumber":40,"author":{"gitId":"oeiyiping"},"content":"     * @return The done task."},{"lineNumber":41,"author":{"gitId":"oeiyiping"},"content":"     */"},{"lineNumber":42,"author":{"gitId":"oeiyiping"},"content":"    public Task doneTask(int index) {"},{"lineNumber":43,"author":{"gitId":"oeiyiping"},"content":"        Task task \u003d tasks.get(index - 1);"},{"lineNumber":44,"author":{"gitId":"oeiyiping"},"content":"        task.setDone();"},{"lineNumber":45,"author":{"gitId":"oeiyiping"},"content":""},{"lineNumber":46,"author":{"gitId":"oeiyiping"},"content":"        return task;"},{"lineNumber":47,"author":{"gitId":"oeiyiping"},"content":"    }"},{"lineNumber":48,"author":{"gitId":"oeiyiping"},"content":""},{"lineNumber":49,"author":{"gitId":"oeiyiping"},"content":"    /**"},{"lineNumber":50,"author":{"gitId":"oeiyiping"},"content":"     * Prints all the tasks in the TaskList."},{"lineNumber":51,"author":{"gitId":"oeiyiping"},"content":"     */"},{"lineNumber":52,"author":{"gitId":"oeiyiping"},"content":"    public String printTasks() {"},{"lineNumber":53,"author":{"gitId":"oeiyiping"},"content":"        if (tasks.isEmpty()) {"},{"lineNumber":54,"author":{"gitId":"oeiyiping"},"content":"            return \"The task list is empty boss.\";"},{"lineNumber":55,"author":{"gitId":"oeiyiping"},"content":"        }"},{"lineNumber":56,"author":{"gitId":"oeiyiping"},"content":""},{"lineNumber":57,"author":{"gitId":"oeiyiping"},"content":"        StringBuilder allTasks \u003d new StringBuilder(\"You have \")"},{"lineNumber":58,"author":{"gitId":"oeiyiping"},"content":"                .append(tasks.size())"},{"lineNumber":59,"author":{"gitId":"oeiyiping"},"content":"                .append(\" task(s) in the list:\\n\");"},{"lineNumber":60,"author":{"gitId":"oeiyiping"},"content":""},{"lineNumber":61,"author":{"gitId":"oeiyiping"},"content":"        int i \u003d 1;"},{"lineNumber":62,"author":{"gitId":"oeiyiping"},"content":"        for (Task task : tasks) {"},{"lineNumber":63,"author":{"gitId":"oeiyiping"},"content":"            allTasks.append(i).append(\". \").append(task).append(\"\\n\");"},{"lineNumber":64,"author":{"gitId":"oeiyiping"},"content":""},{"lineNumber":65,"author":{"gitId":"oeiyiping"},"content":"            i++;"},{"lineNumber":66,"author":{"gitId":"oeiyiping"},"content":"        }"},{"lineNumber":67,"author":{"gitId":"oeiyiping"},"content":""},{"lineNumber":68,"author":{"gitId":"oeiyiping"},"content":"        return allTasks.toString();"},{"lineNumber":69,"author":{"gitId":"oeiyiping"},"content":"    }"},{"lineNumber":70,"author":{"gitId":"oeiyiping"},"content":""},{"lineNumber":71,"author":{"gitId":"oeiyiping"},"content":"    /**"},{"lineNumber":72,"author":{"gitId":"oeiyiping"},"content":"     * Prints all the Tasks with String representation that contains the query term."},{"lineNumber":73,"author":{"gitId":"oeiyiping"},"content":"     *"},{"lineNumber":74,"author":{"gitId":"oeiyiping"},"content":"     * @param query The query term that the command string must include."},{"lineNumber":75,"author":{"gitId":"oeiyiping"},"content":"     */"},{"lineNumber":76,"author":{"gitId":"oeiyiping"},"content":"    public String findTasks(String query) {"},{"lineNumber":77,"author":{"gitId":"oeiyiping"},"content":"        if (tasks.isEmpty()) {"},{"lineNumber":78,"author":{"gitId":"oeiyiping"},"content":"            return \"Oops, the task list is empty boss, there\u0027s nothing to find!\";"},{"lineNumber":79,"author":{"gitId":"oeiyiping"},"content":"        }"},{"lineNumber":80,"author":{"gitId":"oeiyiping"},"content":""},{"lineNumber":81,"author":{"gitId":"oeiyiping"},"content":"        query \u003d query.toLowerCase();"},{"lineNumber":82,"author":{"gitId":"oeiyiping"},"content":"        StringBuilder foundTasks \u003d new StringBuilder(\"Here you go boss:\\n\");"},{"lineNumber":83,"author":{"gitId":"oeiyiping"},"content":""},{"lineNumber":84,"author":{"gitId":"oeiyiping"},"content":"        int i \u003d 1;"},{"lineNumber":85,"author":{"gitId":"oeiyiping"},"content":"        for (Task task : tasks) {"},{"lineNumber":86,"author":{"gitId":"oeiyiping"},"content":"            String string \u003d task.toString();"},{"lineNumber":87,"author":{"gitId":"oeiyiping"},"content":"            if (string.toLowerCase().contains(query)) {"},{"lineNumber":88,"author":{"gitId":"oeiyiping"},"content":"                foundTasks.append(i).append(\". \").append(string).append(\"\\n\");"},{"lineNumber":89,"author":{"gitId":"oeiyiping"},"content":"            }"},{"lineNumber":90,"author":{"gitId":"oeiyiping"},"content":"            i++;"},{"lineNumber":91,"author":{"gitId":"oeiyiping"},"content":"        }"},{"lineNumber":92,"author":{"gitId":"oeiyiping"},"content":"        return foundTasks.toString();"},{"lineNumber":93,"author":{"gitId":"oeiyiping"},"content":""},{"lineNumber":94,"author":{"gitId":"oeiyiping"},"content":"    }"},{"lineNumber":95,"author":{"gitId":"oeiyiping"},"content":""},{"lineNumber":96,"author":{"gitId":"oeiyiping"},"content":"    /**"},{"lineNumber":97,"author":{"gitId":"oeiyiping"},"content":"     * Sorts the tasks according to the sort key."},{"lineNumber":98,"author":{"gitId":"oeiyiping"},"content":"     *"},{"lineNumber":99,"author":{"gitId":"oeiyiping"},"content":"     * @param sortBy Sort key which dictates how the tasks should be sorted."},{"lineNumber":100,"author":{"gitId":"oeiyiping"},"content":"     * @return Returns true if tasks are sorted, false otherwise."},{"lineNumber":101,"author":{"gitId":"oeiyiping"},"content":"     */"},{"lineNumber":102,"author":{"gitId":"oeiyiping"},"content":"    public boolean sortTasks(String sortBy) {"},{"lineNumber":103,"author":{"gitId":"oeiyiping"},"content":"        Comparator\u003cTask\u003e comparator;"},{"lineNumber":104,"author":{"gitId":"oeiyiping"},"content":"        boolean isSorted \u003d true;"},{"lineNumber":105,"author":{"gitId":"oeiyiping"},"content":""},{"lineNumber":106,"author":{"gitId":"oeiyiping"},"content":"        switch (sortBy.toUpperCase()) {"},{"lineNumber":107,"author":{"gitId":"oeiyiping"},"content":"        case \"CREATED\":"},{"lineNumber":108,"author":{"gitId":"oeiyiping"},"content":"            comparator \u003d null;"},{"lineNumber":109,"author":{"gitId":"oeiyiping"},"content":"            break;"},{"lineNumber":110,"author":{"gitId":"oeiyiping"},"content":""},{"lineNumber":111,"author":{"gitId":"oeiyiping"},"content":"        case \"DESCRIPTION\":"},{"lineNumber":112,"author":{"gitId":"oeiyiping"},"content":"            comparator \u003d Comparator.comparing(Task::getDescription);"},{"lineNumber":113,"author":{"gitId":"oeiyiping"},"content":"            break;"},{"lineNumber":114,"author":{"gitId":"oeiyiping"},"content":""},{"lineNumber":115,"author":{"gitId":"oeiyiping"},"content":"        case \"DONE\":"},{"lineNumber":116,"author":{"gitId":"oeiyiping"},"content":"            comparator \u003d Comparator.comparing(Task::isDone);"},{"lineNumber":117,"author":{"gitId":"oeiyiping"},"content":"            break;"},{"lineNumber":118,"author":{"gitId":"oeiyiping"},"content":""},{"lineNumber":119,"author":{"gitId":"oeiyiping"},"content":"        case \"END\":"},{"lineNumber":120,"author":{"gitId":"oeiyiping"},"content":"            comparator \u003d new Comparator\u003cTask\u003e() {"},{"lineNumber":121,"author":{"gitId":"oeiyiping"},"content":"                @Override"},{"lineNumber":122,"author":{"gitId":"oeiyiping"},"content":"                public int compare(Task t1, Task t2) {"},{"lineNumber":123,"author":{"gitId":"oeiyiping"},"content":"                    LocalDateTime t1DateTime \u003d t1.isTimed() ? ((TimedTask) t1).getDateTime() : LocalDateTime.MAX;"},{"lineNumber":124,"author":{"gitId":"oeiyiping"},"content":"                    LocalDateTime t2DateTime \u003d t2.isTimed() ? ((TimedTask) t2).getDateTime() : LocalDateTime.MAX;"},{"lineNumber":125,"author":{"gitId":"oeiyiping"},"content":"                    return t1DateTime.compareTo(t2DateTime);"},{"lineNumber":126,"author":{"gitId":"oeiyiping"},"content":"                }"},{"lineNumber":127,"author":{"gitId":"oeiyiping"},"content":"            };"},{"lineNumber":128,"author":{"gitId":"oeiyiping"},"content":"            break;"},{"lineNumber":129,"author":{"gitId":"oeiyiping"},"content":""},{"lineNumber":130,"author":{"gitId":"oeiyiping"},"content":"        case \"TYPE\":"},{"lineNumber":131,"author":{"gitId":"oeiyiping"},"content":"            comparator \u003d Comparator.comparing(Task::getIcon);"},{"lineNumber":132,"author":{"gitId":"oeiyiping"},"content":"            break;"},{"lineNumber":133,"author":{"gitId":"oeiyiping"},"content":""},{"lineNumber":134,"author":{"gitId":"oeiyiping"},"content":"        default:"},{"lineNumber":135,"author":{"gitId":"oeiyiping"},"content":"            comparator \u003d null;"},{"lineNumber":136,"author":{"gitId":"oeiyiping"},"content":"            isSorted \u003d false; // set isSorted to false upon invalid sort key"},{"lineNumber":137,"author":{"gitId":"oeiyiping"},"content":"            break;"},{"lineNumber":138,"author":{"gitId":"oeiyiping"},"content":"        }"},{"lineNumber":139,"author":{"gitId":"oeiyiping"},"content":""},{"lineNumber":140,"author":{"gitId":"oeiyiping"},"content":"        if (isSorted) { // only sort if sort key is valid"},{"lineNumber":141,"author":{"gitId":"oeiyiping"},"content":"            tasks.sort(comparator);"},{"lineNumber":142,"author":{"gitId":"oeiyiping"},"content":"        }"},{"lineNumber":143,"author":{"gitId":"oeiyiping"},"content":""},{"lineNumber":144,"author":{"gitId":"oeiyiping"},"content":"        return isSorted;"},{"lineNumber":145,"author":{"gitId":"oeiyiping"},"content":"    }"},{"lineNumber":146,"author":{"gitId":"oeiyiping"},"content":""},{"lineNumber":147,"author":{"gitId":"oeiyiping"},"content":"    /**"},{"lineNumber":148,"author":{"gitId":"oeiyiping"},"content":"     * Removes all tasks in the task list."},{"lineNumber":149,"author":{"gitId":"oeiyiping"},"content":"     */"},{"lineNumber":150,"author":{"gitId":"oeiyiping"},"content":"    public void clearAllTasks() {"},{"lineNumber":151,"author":{"gitId":"oeiyiping"},"content":"        tasks.clear();"},{"lineNumber":152,"author":{"gitId":"oeiyiping"},"content":"    }"},{"lineNumber":153,"author":{"gitId":"oeiyiping"},"content":""},{"lineNumber":154,"author":{"gitId":"oeiyiping"},"content":""},{"lineNumber":155,"author":{"gitId":"oeiyiping"},"content":"    public ArrayList\u003cTask\u003e getTasks() {"},{"lineNumber":156,"author":{"gitId":"oeiyiping"},"content":"        return tasks;"},{"lineNumber":157,"author":{"gitId":"oeiyiping"},"content":"    }"},{"lineNumber":158,"author":{"gitId":"oeiyiping"},"content":"}"}],"authorContributionMap":{"oeiyiping":158}},{"path":"src/main/java/TimedTask.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"oeiyiping"},"content":"import java.time.LocalDate;"},{"lineNumber":2,"author":{"gitId":"oeiyiping"},"content":"import java.time.LocalDateTime;"},{"lineNumber":3,"author":{"gitId":"oeiyiping"},"content":"import java.time.LocalTime;"},{"lineNumber":4,"author":{"gitId":"oeiyiping"},"content":"import java.time.format.DateTimeFormatter;"},{"lineNumber":5,"author":{"gitId":"oeiyiping"},"content":""},{"lineNumber":6,"author":{"gitId":"oeiyiping"},"content":"/**"},{"lineNumber":7,"author":{"gitId":"oeiyiping"},"content":" * Represents a timed task."},{"lineNumber":8,"author":{"gitId":"oeiyiping"},"content":" */"},{"lineNumber":9,"author":{"gitId":"oeiyiping"},"content":"public abstract class TimedTask extends Task {"},{"lineNumber":10,"author":{"gitId":"oeiyiping"},"content":"    protected static final DateTimeFormatter DATE_TIME_FORMAT \u003d DateTimeFormatter.ofPattern(\"dd MMM yyyy, HH:mm\");"},{"lineNumber":11,"author":{"gitId":"oeiyiping"},"content":"    protected LocalDateTime dateTime;"},{"lineNumber":12,"author":{"gitId":"oeiyiping"},"content":""},{"lineNumber":13,"author":{"gitId":"oeiyiping"},"content":"    protected TimedTask(String description, LocalDateTime dateTime, String icon) {"},{"lineNumber":14,"author":{"gitId":"oeiyiping"},"content":"        super(description, icon);"},{"lineNumber":15,"author":{"gitId":"oeiyiping"},"content":"        this.dateTime \u003d dateTime;"},{"lineNumber":16,"author":{"gitId":"oeiyiping"},"content":"    }"},{"lineNumber":17,"author":{"gitId":"oeiyiping"},"content":""},{"lineNumber":18,"author":{"gitId":"oeiyiping"},"content":"    protected TimedTask(String description, LocalDateTime timeCreated, LocalDateTime dateTime, String icon) {"},{"lineNumber":19,"author":{"gitId":"oeiyiping"},"content":"        super(description, timeCreated, icon);"},{"lineNumber":20,"author":{"gitId":"oeiyiping"},"content":"        this.dateTime \u003d dateTime;"},{"lineNumber":21,"author":{"gitId":"oeiyiping"},"content":"    }"},{"lineNumber":22,"author":{"gitId":"oeiyiping"},"content":""},{"lineNumber":23,"author":{"gitId":"oeiyiping"},"content":"    public LocalDateTime getDateTime() {"},{"lineNumber":24,"author":{"gitId":"oeiyiping"},"content":"        return dateTime;"},{"lineNumber":25,"author":{"gitId":"oeiyiping"},"content":"    }"},{"lineNumber":26,"author":{"gitId":"oeiyiping"},"content":""},{"lineNumber":27,"author":{"gitId":"oeiyiping"},"content":"    public void setDate(LocalDate newDate) {"},{"lineNumber":28,"author":{"gitId":"oeiyiping"},"content":"        this.dateTime \u003d LocalDateTime.of(newDate, this.dateTime.toLocalTime());"},{"lineNumber":29,"author":{"gitId":"oeiyiping"},"content":"    }"},{"lineNumber":30,"author":{"gitId":"oeiyiping"},"content":""},{"lineNumber":31,"author":{"gitId":"oeiyiping"},"content":"    public void setTime(LocalTime newTime) {"},{"lineNumber":32,"author":{"gitId":"oeiyiping"},"content":"        this.dateTime \u003d LocalDateTime.of(this.dateTime.toLocalDate(), newTime);"},{"lineNumber":33,"author":{"gitId":"oeiyiping"},"content":"    }"},{"lineNumber":34,"author":{"gitId":"oeiyiping"},"content":""},{"lineNumber":35,"author":{"gitId":"oeiyiping"},"content":"    public String toLog() {"},{"lineNumber":36,"author":{"gitId":"oeiyiping"},"content":"        return super.toLog() + \" | \" + dateTime;"},{"lineNumber":37,"author":{"gitId":"oeiyiping"},"content":"    }"},{"lineNumber":38,"author":{"gitId":"oeiyiping"},"content":""},{"lineNumber":39,"author":{"gitId":"oeiyiping"},"content":"    @Override"},{"lineNumber":40,"author":{"gitId":"oeiyiping"},"content":"    public boolean isTimed() {"},{"lineNumber":41,"author":{"gitId":"oeiyiping"},"content":"        return true;"},{"lineNumber":42,"author":{"gitId":"oeiyiping"},"content":"    }"},{"lineNumber":43,"author":{"gitId":"oeiyiping"},"content":"}"}],"authorContributionMap":{"oeiyiping":43}},{"path":"src/main/java/ToDo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"oeiyiping"},"content":"import java.time.LocalDateTime;"},{"lineNumber":2,"author":{"gitId":"oeiyiping"},"content":""},{"lineNumber":3,"author":{"gitId":"oeiyiping"},"content":"/**"},{"lineNumber":4,"author":{"gitId":"oeiyiping"},"content":" * Represents the ToDo Task."},{"lineNumber":5,"author":{"gitId":"oeiyiping"},"content":" */"},{"lineNumber":6,"author":{"gitId":"oeiyiping"},"content":"public class ToDo extends Task {"},{"lineNumber":7,"author":{"gitId":"oeiyiping"},"content":"    public ToDo(String description) {"},{"lineNumber":8,"author":{"gitId":"oeiyiping"},"content":"        super(description, \"T\");"},{"lineNumber":9,"author":{"gitId":"oeiyiping"},"content":"    }"},{"lineNumber":10,"author":{"gitId":"oeiyiping"},"content":""},{"lineNumber":11,"author":{"gitId":"oeiyiping"},"content":"    /**"},{"lineNumber":12,"author":{"gitId":"oeiyiping"},"content":"     * Initializes a ToDo Task with the specified description, timeCreated, and dateTime."},{"lineNumber":13,"author":{"gitId":"oeiyiping"},"content":"     *"},{"lineNumber":14,"author":{"gitId":"oeiyiping"},"content":"     * @param description Description of the ToDo Task."},{"lineNumber":15,"author":{"gitId":"oeiyiping"},"content":"     * @param timeCreated DateTime when this ToDo object was created."},{"lineNumber":16,"author":{"gitId":"oeiyiping"},"content":"     */"},{"lineNumber":17,"author":{"gitId":"oeiyiping"},"content":"    public ToDo(String description, LocalDateTime timeCreated) {"},{"lineNumber":18,"author":{"gitId":"oeiyiping"},"content":"        super(description, timeCreated, \"T\");"},{"lineNumber":19,"author":{"gitId":"oeiyiping"},"content":"    }"},{"lineNumber":20,"author":{"gitId":"oeiyiping"},"content":"}"},{"lineNumber":21,"author":{"gitId":"oeiyiping"},"content":""}],"authorContributionMap":{"oeiyiping":21}},{"path":"src/main/resources/view/DialogBox.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"oeiyiping"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"},{"lineNumber":2,"author":{"gitId":"oeiyiping"},"content":""},{"lineNumber":3,"author":{"gitId":"oeiyiping"},"content":"\u003c?import javafx.geometry.Insets?\u003e"},{"lineNumber":4,"author":{"gitId":"oeiyiping"},"content":"\u003c?import javafx.scene.control.Label?\u003e"},{"lineNumber":5,"author":{"gitId":"oeiyiping"},"content":"\u003c?import javafx.scene.image.ImageView?\u003e"},{"lineNumber":6,"author":{"gitId":"oeiyiping"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e"},{"lineNumber":7,"author":{"gitId":"oeiyiping"},"content":"\u003c?import javafx.scene.text.Font?\u003e"},{"lineNumber":8,"author":{"gitId":"oeiyiping"},"content":""},{"lineNumber":9,"author":{"gitId":"oeiyiping"},"content":"\u003cfx:root alignment\u003d\"TOP_RIGHT\" maxHeight\u003d\"1.7976931348623157E308\" type\u003d\"javafx.scene.layout.HBox\" xmlns\u003d\"http://javafx.com/javafx/11.0.0\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e"},{"lineNumber":10,"author":{"gitId":"oeiyiping"},"content":"  \u003cchildren\u003e"},{"lineNumber":11,"author":{"gitId":"oeiyiping"},"content":"    \u003cLabel fx:id\u003d\"dialog\" alignment\u003d\"CENTER\" maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" prefWidth\u003d\"350.0\" style\u003d\"-fx-background-color: #cbf3f0; -fx-border-color: #2ec4b6; -fx-background-radius: 15; -fx-border-radius: 15; -fx-border-width: 1.5px;\" text\u003d\"LabelLabelLabelLabelLabelLabelLabelLabelLabelLabelLabelLabelLabelLabelLabelLabelLabelLabelLabelLabelLabelLabelLabelLabelLabelLabelLabelLabelLabelLabelLabelLabelLabelLabelLabelLabelLabelLabelLabelLabelLabelLabelLabelLabelLabelLabelLabelLabelLabelLabelLabelLabelLabelLabelLabelLabelLabelLabelLabelLabelLabelLabelLabelLabelLabelLabelLabelLabelLabelLabelLabelLabelLabelLabelLabelLabelLabelLabelLabelLabelLabelLabelLabelLabelLabelLabelLabelLabelLabelLabelLabelLabelLabelLabelLabelLabelLabelLabelLabelLabelLabelLabelLabelLabelLabelLabelLabelLabelLabelLabelLabelLabelLabelLabelLabelLabelLabelLabelLabelLabelLabelLabelLabelLabelLabelLabelLabelLabelLabelLabelLabelLabelLabelLabelLabelLabelLabelLabelLabelLabelLabelLabelLabelLabelLabelLabelLabelLabelLabelLabelLabelLabelLabelLabelLabelLabelLabelLabelLabelLabelLabelLabelLabelLabelLabelLabelLabelLabelLabelLabelLabelLabelLabelLabelLabelLabelLabelLabelLabelLabelLabelLabelLabelLabelLabelLabelLabelLabelLabelLabelLabelLabelLabelLabelLabelLabelLabelLabelLabelLabelLabelLabelLabelLabelLabelLabelLabelLabelLabelLabelLabelLabelLabelLabelLabelLabelLabelLabelLabelLabelLabelLabelLabelLabelLabelLabelLabelLabelLabelLabelLabelLabelLabelLabelLabelLabelLabelLabelLabelLabelLabelLabelLabelLabelLabelLabelLabelLabelLabelLabelLabelLabelLabelLabelLabelLabelLabelLabelLabelLabelLabelLabelLabelLabelLabelLabelLabelLabelLabelLabelLabelLabelLabelLabelLabelLabelLabelLabelLabelLabelLabelLabelLabelLabelLabelLabelLabelLabelLabelLabelLabelLabelLabelLabelLabelLabelLabelLabelLabelLabelLabelLabelLabelLabelLabelLabelLabelLabelLabelLabelLabelLabelLabelLabelLabelLabelLabelLabelLabelLabelLabelLabelLabelLabelLabelLabelLabelLabelLabelLabelLabelLabelLabelLabelLabelLabelLabelLabelLabelLabelLabelLabelLabelLabelLabelLabelLabelLabelLabelLabelLabelLabelLabelLabelLabelLabelLabelLabelLabelLabelLabelLabelLabelLabelLabelLabelLabelLabelLabelLabelLabelLabelLabelLabelLabelLabelLabelLabelLabelLabelLabelLabelLabelLabelLabelLabelLabelLabelLabelLabelLabelLabelLabelLabelLabelLabelLabelLabelLabelLabelLabelLabelLabelLabelLabelLabelLabelLabelLabelLabelLabelLabelLabelLabelLabelLabelLabelLabelLabelLabelLabelLabelLabelLabelLabelLabelLabelLabelLabelLabelLabelLabelLabelLabelLabelLabelLabelLabelLabelLabelLabelLabelLabelLabelLabelLabelLabelLabelLabelLabelLabelLabelLabelLabelLabelLabelLabelLabelLabelLabelLabelLabelLabelLabelLabelLabelLabelLabelLabelLabelLabelLabelLabelLabelLabelLabelLabelLabelLabelLabelLabelLabelLabelLabelLabelLabelLabelLabelLabelLabelLabelLabelLabelLabelLabelLabelLabelLabelLabelLabelLabelLabelLabelLabelLabelLabelLabelLabelLabelLabelLabelLabelLabelLabelLabelLabelLabelLabelLabelLabelLabelLabelLabelLabelLabelLabelLabelLabel\" wrapText\u003d\"true\" HBox.hgrow\u003d\"ALWAYS\"\u003e"},{"lineNumber":12,"author":{"gitId":"oeiyiping"},"content":"         \u003cpadding\u003e"},{"lineNumber":13,"author":{"gitId":"oeiyiping"},"content":"            \u003cInsets bottom\u003d\"5.0\" left\u003d\"15.0\" right\u003d\"15.0\" top\u003d\"5.0\" /\u003e"},{"lineNumber":14,"author":{"gitId":"oeiyiping"},"content":"         \u003c/padding\u003e"},{"lineNumber":15,"author":{"gitId":"oeiyiping"},"content":"         \u003cfont\u003e"},{"lineNumber":16,"author":{"gitId":"oeiyiping"},"content":"            \u003cFont name\u003d\"SansSerif Regular\" size\u003d\"12.0\" /\u003e"},{"lineNumber":17,"author":{"gitId":"oeiyiping"},"content":"         \u003c/font\u003e"},{"lineNumber":18,"author":{"gitId":"oeiyiping"},"content":"         \u003cHBox.margin\u003e"},{"lineNumber":19,"author":{"gitId":"oeiyiping"},"content":"            \u003cInsets left\u003d\"15.0\" right\u003d\"15.0\" /\u003e"},{"lineNumber":20,"author":{"gitId":"oeiyiping"},"content":"         \u003c/HBox.margin\u003e"},{"lineNumber":21,"author":{"gitId":"oeiyiping"},"content":"      \u003c/Label\u003e"},{"lineNumber":22,"author":{"gitId":"oeiyiping"},"content":"    \u003cImageView fx:id\u003d\"displayPicture\" fitHeight\u003d\"99.0\" fitWidth\u003d\"99.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\" /\u003e"},{"lineNumber":23,"author":{"gitId":"oeiyiping"},"content":"  \u003c/children\u003e"},{"lineNumber":24,"author":{"gitId":"oeiyiping"},"content":"  \u003cpadding\u003e"},{"lineNumber":25,"author":{"gitId":"oeiyiping"},"content":"    \u003cInsets bottom\u003d\"15.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"15.0\" /\u003e"},{"lineNumber":26,"author":{"gitId":"oeiyiping"},"content":"  \u003c/padding\u003e"},{"lineNumber":27,"author":{"gitId":"oeiyiping"},"content":"\u003c/fx:root\u003e"}],"authorContributionMap":{"oeiyiping":27}},{"path":"src/main/resources/view/MainWindow.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"oeiyiping"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"},{"lineNumber":2,"author":{"gitId":"oeiyiping"},"content":""},{"lineNumber":3,"author":{"gitId":"oeiyiping"},"content":"\u003c?import javafx.scene.control.Button?\u003e"},{"lineNumber":4,"author":{"gitId":"oeiyiping"},"content":"\u003c?import javafx.scene.control.ScrollPane?\u003e"},{"lineNumber":5,"author":{"gitId":"oeiyiping"},"content":"\u003c?import javafx.scene.control.TextField?\u003e"},{"lineNumber":6,"author":{"gitId":"oeiyiping"},"content":"\u003c?import javafx.scene.layout.AnchorPane?\u003e"},{"lineNumber":7,"author":{"gitId":"oeiyiping"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e"},{"lineNumber":8,"author":{"gitId":"oeiyiping"},"content":""},{"lineNumber":9,"author":{"gitId":"oeiyiping"},"content":"\u003cAnchorPane maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefHeight\u003d\"600.0\" prefWidth\u003d\"400.0\" xmlns\u003d\"http://javafx.com/javafx/11.0.0\" xmlns:fx\u003d\"http://javafx.com/fxml/1\" fx:controller\u003d\"HenchmanUi\"\u003e"},{"lineNumber":10,"author":{"gitId":"oeiyiping"},"content":"  \u003cchildren\u003e"},{"lineNumber":11,"author":{"gitId":"oeiyiping"},"content":"    \u003cTextField fx:id\u003d\"userInput\" layoutY\u003d\"558.0\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"324.0\" AnchorPane.bottomAnchor\u003d\"1.0\" /\u003e"},{"lineNumber":12,"author":{"gitId":"oeiyiping"},"content":"    \u003cButton fx:id\u003d\"sendButton\" layoutX\u003d\"324.0\" layoutY\u003d\"558.0\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"76.0\" text\u003d\"Send\" /\u003e"},{"lineNumber":13,"author":{"gitId":"oeiyiping"},"content":"    \u003cScrollPane fx:id\u003d\"scrollPane\" fitToHeight\u003d\"true\" fitToWidth\u003d\"true\" hbarPolicy\u003d\"NEVER\" hvalue\u003d\"1.0\" prefHeight\u003d\"557.0\" prefWidth\u003d\"400.0\" vvalue\u003d\"1.0\"\u003e"},{"lineNumber":14,"author":{"gitId":"oeiyiping"},"content":"      \u003ccontent\u003e"},{"lineNumber":15,"author":{"gitId":"oeiyiping"},"content":"        \u003cVBox fx:id\u003d\"dialogContainer\" prefHeight\u003d\"559.0\" prefWidth\u003d\"400.0\" /\u003e"},{"lineNumber":16,"author":{"gitId":"oeiyiping"},"content":"      \u003c/content\u003e"},{"lineNumber":17,"author":{"gitId":"oeiyiping"},"content":"    \u003c/ScrollPane\u003e"},{"lineNumber":18,"author":{"gitId":"oeiyiping"},"content":"  \u003c/children\u003e"},{"lineNumber":19,"author":{"gitId":"oeiyiping"},"content":"\u003c/AnchorPane\u003e"},{"lineNumber":20,"author":{"gitId":"oeiyiping"},"content":""}],"authorContributionMap":{"oeiyiping":20}},{"path":"src/test/java/DeadlineTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"oeiyiping"},"content":"import org.junit.jupiter.api.Assertions;"},{"lineNumber":2,"author":{"gitId":"oeiyiping"},"content":"import org.junit.jupiter.api.Test;"},{"lineNumber":3,"author":{"gitId":"oeiyiping"},"content":""},{"lineNumber":4,"author":{"gitId":"oeiyiping"},"content":"import java.time.LocalDateTime;"},{"lineNumber":5,"author":{"gitId":"oeiyiping"},"content":""},{"lineNumber":6,"author":{"gitId":"oeiyiping"},"content":"public class DeadlineTest {"},{"lineNumber":7,"author":{"gitId":"oeiyiping"},"content":"    @Test"},{"lineNumber":8,"author":{"gitId":"oeiyiping"},"content":"    public void testInitialization() {"},{"lineNumber":9,"author":{"gitId":"oeiyiping"},"content":"        Deadline deadline \u003d new Deadline(\"description\", LocalDateTime.parse(\"2021-01-01T00:00\"));"},{"lineNumber":10,"author":{"gitId":"oeiyiping"},"content":"        Assertions.assertEquals(\"[D][ ] description (by: 01 Jan 2021, 00:00)\", deadline.toString());"},{"lineNumber":11,"author":{"gitId":"oeiyiping"},"content":""},{"lineNumber":12,"author":{"gitId":"oeiyiping"},"content":"        Deadline deadline2 \u003d new Deadline(\"description with space\", LocalDateTime.parse(\"2021-01-01T00:00\"));"},{"lineNumber":13,"author":{"gitId":"oeiyiping"},"content":"        Assertions.assertEquals(\"[D][ ] description with space (by: 01 Jan 2021, 00:00)\", deadline2.toString());"},{"lineNumber":14,"author":{"gitId":"oeiyiping"},"content":"    }"},{"lineNumber":15,"author":{"gitId":"oeiyiping"},"content":""},{"lineNumber":16,"author":{"gitId":"oeiyiping"},"content":"    @Test"},{"lineNumber":17,"author":{"gitId":"oeiyiping"},"content":"    public void testDone() {"},{"lineNumber":18,"author":{"gitId":"oeiyiping"},"content":"        Deadline deadline \u003d new Deadline(\"description\", LocalDateTime.parse(\"2021-01-01T00:00\"));"},{"lineNumber":19,"author":{"gitId":"oeiyiping"},"content":"        deadline.setDone();"},{"lineNumber":20,"author":{"gitId":"oeiyiping"},"content":"        Assertions.assertEquals(\"[D][X] description (by: 01 Jan 2021, 00:00)\", deadline.toString());"},{"lineNumber":21,"author":{"gitId":"oeiyiping"},"content":"    }"},{"lineNumber":22,"author":{"gitId":"oeiyiping"},"content":"}"}],"authorContributionMap":{"oeiyiping":22}},{"path":"src/test/java/TaskListTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"oeiyiping"},"content":"import java.io.ByteArrayOutputStream;"},{"lineNumber":2,"author":{"gitId":"oeiyiping"},"content":"import java.io.PrintStream;"},{"lineNumber":3,"author":{"gitId":"oeiyiping"},"content":"import java.util.ArrayList;"},{"lineNumber":4,"author":{"gitId":"oeiyiping"},"content":""},{"lineNumber":5,"author":{"gitId":"oeiyiping"},"content":"import org.junit.jupiter.api.AfterEach;"},{"lineNumber":6,"author":{"gitId":"oeiyiping"},"content":"import org.junit.jupiter.api.Assertions;"},{"lineNumber":7,"author":{"gitId":"oeiyiping"},"content":"import org.junit.jupiter.api.BeforeEach;"},{"lineNumber":8,"author":{"gitId":"oeiyiping"},"content":"import org.junit.jupiter.api.Test;"},{"lineNumber":9,"author":{"gitId":"oeiyiping"},"content":""},{"lineNumber":10,"author":{"gitId":"oeiyiping"},"content":"public class TaskListTest {"},{"lineNumber":11,"author":{"gitId":"oeiyiping"},"content":"    private final PrintStream standardOut \u003d System.out;"},{"lineNumber":12,"author":{"gitId":"oeiyiping"},"content":"    private final ByteArrayOutputStream outputStreamCaptor \u003d new ByteArrayOutputStream();"},{"lineNumber":13,"author":{"gitId":"oeiyiping"},"content":""},{"lineNumber":14,"author":{"gitId":"oeiyiping"},"content":"    @BeforeEach"},{"lineNumber":15,"author":{"gitId":"oeiyiping"},"content":"    public void setUp() {"},{"lineNumber":16,"author":{"gitId":"oeiyiping"},"content":"        System.setOut(new PrintStream(outputStreamCaptor));"},{"lineNumber":17,"author":{"gitId":"oeiyiping"},"content":"    }"},{"lineNumber":18,"author":{"gitId":"oeiyiping"},"content":""},{"lineNumber":19,"author":{"gitId":"oeiyiping"},"content":"    @AfterEach"},{"lineNumber":20,"author":{"gitId":"oeiyiping"},"content":"    public void tearDown() {"},{"lineNumber":21,"author":{"gitId":"oeiyiping"},"content":"        System.setOut(standardOut);"},{"lineNumber":22,"author":{"gitId":"oeiyiping"},"content":"    }"},{"lineNumber":23,"author":{"gitId":"oeiyiping"},"content":""},{"lineNumber":24,"author":{"gitId":"oeiyiping"},"content":"    @Test"},{"lineNumber":25,"author":{"gitId":"oeiyiping"},"content":"    public void testInitialization() {"},{"lineNumber":26,"author":{"gitId":"oeiyiping"},"content":"        TaskList tasks \u003d new TaskList();"},{"lineNumber":27,"author":{"gitId":"oeiyiping"},"content":"        ArrayList\u003cTask\u003e expected \u003d new ArrayList\u003c\u003e();"},{"lineNumber":28,"author":{"gitId":"oeiyiping"},"content":"        Assertions.assertEquals(expected, tasks.getTasks());"},{"lineNumber":29,"author":{"gitId":"oeiyiping"},"content":"    }"},{"lineNumber":30,"author":{"gitId":"oeiyiping"},"content":""},{"lineNumber":31,"author":{"gitId":"oeiyiping"},"content":"    @Test"},{"lineNumber":32,"author":{"gitId":"oeiyiping"},"content":"    public void testAddAndDelete() {"},{"lineNumber":33,"author":{"gitId":"oeiyiping"},"content":"        TaskList tasks \u003d new TaskList();"},{"lineNumber":34,"author":{"gitId":"oeiyiping"},"content":"        ArrayList\u003cTask\u003e expected \u003d new ArrayList\u003c\u003e();"},{"lineNumber":35,"author":{"gitId":"oeiyiping"},"content":""},{"lineNumber":36,"author":{"gitId":"oeiyiping"},"content":"        // test case 1: test add"},{"lineNumber":37,"author":{"gitId":"oeiyiping"},"content":"        tasks.addTask(new ToDo(\"description\"));"},{"lineNumber":38,"author":{"gitId":"oeiyiping"},"content":"        expected.add(new ToDo(\"description\"));"},{"lineNumber":39,"author":{"gitId":"oeiyiping"},"content":"        tasks.addTask(new ToDo(\"description 2\"));"},{"lineNumber":40,"author":{"gitId":"oeiyiping"},"content":"        expected.add(new ToDo(\"description 2\"));"},{"lineNumber":41,"author":{"gitId":"oeiyiping"},"content":"        Assertions.assertEquals(expected.toString(), tasks.getTasks().toString());"},{"lineNumber":42,"author":{"gitId":"oeiyiping"},"content":""},{"lineNumber":43,"author":{"gitId":"oeiyiping"},"content":"        // test case 2: test delete"},{"lineNumber":44,"author":{"gitId":"oeiyiping"},"content":"        tasks.deleteTask(1);"},{"lineNumber":45,"author":{"gitId":"oeiyiping"},"content":"        expected.remove(0);"},{"lineNumber":46,"author":{"gitId":"oeiyiping"},"content":"        Assertions.assertEquals(expected.toString(), tasks.getTasks().toString());"},{"lineNumber":47,"author":{"gitId":"oeiyiping"},"content":"    }"},{"lineNumber":48,"author":{"gitId":"oeiyiping"},"content":""},{"lineNumber":49,"author":{"gitId":"oeiyiping"},"content":"    @Test"},{"lineNumber":50,"author":{"gitId":"oeiyiping"},"content":"    public void testDone() {"},{"lineNumber":51,"author":{"gitId":"oeiyiping"},"content":"        TaskList tasks \u003d new TaskList();"},{"lineNumber":52,"author":{"gitId":"oeiyiping"},"content":""},{"lineNumber":53,"author":{"gitId":"oeiyiping"},"content":"        tasks.addTask(new ToDo(\"description\"));"},{"lineNumber":54,"author":{"gitId":"oeiyiping"},"content":"        tasks.doneTask(1);"},{"lineNumber":55,"author":{"gitId":"oeiyiping"},"content":""},{"lineNumber":56,"author":{"gitId":"oeiyiping"},"content":"        Assertions.assertEquals(\"[[T][X] description]\", tasks.getTasks().toString());"},{"lineNumber":57,"author":{"gitId":"oeiyiping"},"content":"    }"},{"lineNumber":58,"author":{"gitId":"oeiyiping"},"content":"}"}],"authorContributionMap":{"oeiyiping":58}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"oeiyiping"},"content":"todo buy bread"},{"lineNumber":2,"author":{"gitId":"oeiyiping"},"content":"event have breakfast /at 9am"},{"lineNumber":3,"author":{"gitId":"oeiyiping"},"content":"deadline wash the dishes /by 10am"},{"lineNumber":4,"author":{"gitId":"oeiyiping"},"content":"list"},{"lineNumber":5,"author":{"gitId":"oeiyiping"},"content":"done 2"},{"lineNumber":6,"author":{"gitId":"oeiyiping"},"content":"list"},{"lineNumber":7,"author":{"gitId":"oeiyiping"},"content":"bye"}],"authorContributionMap":{"oeiyiping":7}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF"},{"lineNumber":2,"author":{"gitId":"-"},"content":""},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin"},{"lineNumber":5,"author":{"gitId":"-"},"content":""},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run"},{"lineNumber":7,"author":{"gitId":"-"},"content":"del ACTUAL.TXT"},{"lineNumber":8,"author":{"gitId":"-"},"content":""},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder"},{"lineNumber":10,"author":{"gitId":"-"},"content":"javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\*.java"},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 ("},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1"},{"lineNumber":14,"author":{"gitId":"-"},"content":")"},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0"},{"lineNumber":16,"author":{"gitId":"-"},"content":""},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"},{"lineNumber":18,"author":{"gitId":"oeiyiping"},"content":"java -classpath ..\\bin Henchman \u003c input.txt \u003e ACTUAL.TXT"},{"lineNumber":19,"author":{"gitId":"-"},"content":""},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM compare the output to the expected output"},{"lineNumber":21,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT"}],"authorContributionMap":{"oeiyiping":1,"-":20}}]
