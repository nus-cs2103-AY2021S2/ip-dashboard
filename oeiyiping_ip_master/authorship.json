[{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027checkstyle\u0027"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027"},{"lineNumber":6,"author":{"gitId":"-"},"content":"}"},{"lineNumber":7,"author":{"gitId":"-"},"content":""},{"lineNumber":8,"author":{"gitId":"-"},"content":"repositories {"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    mavenCentral()"},{"lineNumber":10,"author":{"gitId":"-"},"content":"}"},{"lineNumber":11,"author":{"gitId":"-"},"content":""},{"lineNumber":12,"author":{"gitId":"-"},"content":"dependencies {"},{"lineNumber":13,"author":{"gitId":"oeiyiping"},"content":"    implementation \u0027junit:junit:4.12\u0027"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.5.0\u0027"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.5.0\u0027"},{"lineNumber":16,"author":{"gitId":"-"},"content":"}"},{"lineNumber":17,"author":{"gitId":"-"},"content":""},{"lineNumber":18,"author":{"gitId":"-"},"content":"test {"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    useJUnitPlatform()"},{"lineNumber":20,"author":{"gitId":"-"},"content":""},{"lineNumber":21,"author":{"gitId":"-"},"content":"    testLogging {"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\""},{"lineNumber":23,"author":{"gitId":"-"},"content":""},{"lineNumber":24,"author":{"gitId":"-"},"content":"        showExceptions true"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\""},{"lineNumber":26,"author":{"gitId":"-"},"content":"        showCauses true"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        showStackTraces true"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":30,"author":{"gitId":"-"},"content":"}"},{"lineNumber":31,"author":{"gitId":"-"},"content":""},{"lineNumber":32,"author":{"gitId":"-"},"content":"application {"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    mainClassName \u003d \"seedu.duke.Duke\""},{"lineNumber":34,"author":{"gitId":"-"},"content":"}"},{"lineNumber":35,"author":{"gitId":"-"},"content":""},{"lineNumber":36,"author":{"gitId":"-"},"content":"shadowJar {"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    archiveBaseName \u003d \"duke\""},{"lineNumber":38,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null"},{"lineNumber":39,"author":{"gitId":"-"},"content":"}"},{"lineNumber":40,"author":{"gitId":"-"},"content":""},{"lineNumber":41,"author":{"gitId":"-"},"content":"checkstyle {"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    toolVersion \u003d \u00278.29\u0027"},{"lineNumber":43,"author":{"gitId":"-"},"content":"}"},{"lineNumber":44,"author":{"gitId":"-"},"content":""},{"lineNumber":45,"author":{"gitId":"-"},"content":"run{"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in"},{"lineNumber":47,"author":{"gitId":"-"},"content":"}"}],"authorContributionMap":{"oeiyiping":1,"-":46}},{"path":"src/main/java/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"oeiyiping"},"content":"/**"},{"lineNumber":2,"author":{"gitId":"oeiyiping"},"content":" * Represents a valid Command for the Duke object."},{"lineNumber":3,"author":{"gitId":"oeiyiping"},"content":" */"},{"lineNumber":4,"author":{"gitId":"oeiyiping"},"content":""},{"lineNumber":5,"author":{"gitId":"oeiyiping"},"content":"public abstract class Command {"},{"lineNumber":6,"author":{"gitId":"oeiyiping"},"content":"    public abstract void execute(TaskList tasks, Ui ui, Storage storage);"},{"lineNumber":7,"author":{"gitId":"oeiyiping"},"content":"    public abstract String toDukeOutput();"},{"lineNumber":8,"author":{"gitId":"oeiyiping"},"content":"}"}],"authorContributionMap":{"oeiyiping":8}},{"path":"src/main/java/CommandBye.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"oeiyiping"},"content":"/**"},{"lineNumber":2,"author":{"gitId":"oeiyiping"},"content":" * Represents the Command for \"bye\" for the Duke object. CommandBye helps to close and prepare Duke object for ending"},{"lineNumber":3,"author":{"gitId":"oeiyiping"},"content":" * the run."},{"lineNumber":4,"author":{"gitId":"oeiyiping"},"content":" */"},{"lineNumber":5,"author":{"gitId":"oeiyiping"},"content":"public class CommandBye extends Command {"},{"lineNumber":6,"author":{"gitId":"oeiyiping"},"content":"    /**"},{"lineNumber":7,"author":{"gitId":"oeiyiping"},"content":"     * Closes the provided attributes of Duke object in preparation of ending the run."},{"lineNumber":8,"author":{"gitId":"oeiyiping"},"content":"     *"},{"lineNumber":9,"author":{"gitId":"oeiyiping"},"content":"     * @param tasks TaskList of Duke object"},{"lineNumber":10,"author":{"gitId":"oeiyiping"},"content":"     * @param ui Ui of Duke object"},{"lineNumber":11,"author":{"gitId":"oeiyiping"},"content":"     * @param storage Storage of Duke object"},{"lineNumber":12,"author":{"gitId":"oeiyiping"},"content":"     */"},{"lineNumber":13,"author":{"gitId":"oeiyiping"},"content":"    @Override"},{"lineNumber":14,"author":{"gitId":"oeiyiping"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage) {"},{"lineNumber":15,"author":{"gitId":"oeiyiping"},"content":"        // TODO INITIATE SHUTDOWN IN ALL ARGUMENTS"},{"lineNumber":16,"author":{"gitId":"oeiyiping"},"content":"        ui.printCommand(this);"},{"lineNumber":17,"author":{"gitId":"oeiyiping"},"content":"    }"},{"lineNumber":18,"author":{"gitId":"oeiyiping"},"content":""},{"lineNumber":19,"author":{"gitId":"oeiyiping"},"content":"    /**"},{"lineNumber":20,"author":{"gitId":"oeiyiping"},"content":"     * Returns the string representation of the message to be printed by the Duke object\u0027s Ui."},{"lineNumber":21,"author":{"gitId":"oeiyiping"},"content":"     *"},{"lineNumber":22,"author":{"gitId":"oeiyiping"},"content":"     * @return String representation of the message to be printed by the Duke object\u0027s Ui."},{"lineNumber":23,"author":{"gitId":"oeiyiping"},"content":"     */"},{"lineNumber":24,"author":{"gitId":"oeiyiping"},"content":"    @Override"},{"lineNumber":25,"author":{"gitId":"oeiyiping"},"content":"    public String toDukeOutput() {"},{"lineNumber":26,"author":{"gitId":"oeiyiping"},"content":"        return \"I see you\u0027re done for now boss, see you soon!\";"},{"lineNumber":27,"author":{"gitId":"oeiyiping"},"content":"    }"},{"lineNumber":28,"author":{"gitId":"oeiyiping"},"content":"}"}],"authorContributionMap":{"oeiyiping":28}},{"path":"src/main/java/CommandDeadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"oeiyiping"},"content":"import java.time.LocalDateTime;"},{"lineNumber":2,"author":{"gitId":"oeiyiping"},"content":""},{"lineNumber":3,"author":{"gitId":"oeiyiping"},"content":"/**"},{"lineNumber":4,"author":{"gitId":"oeiyiping"},"content":" * Represents the Command for \"deadline\" for the Duke object. CommandDeadline helps to initiate creation and adding of"},{"lineNumber":5,"author":{"gitId":"oeiyiping"},"content":" * the Deadline Task with the specified attributes into the provided TaskList."},{"lineNumber":6,"author":{"gitId":"oeiyiping"},"content":" */"},{"lineNumber":7,"author":{"gitId":"oeiyiping"},"content":"public class CommandDeadline extends Command {"},{"lineNumber":8,"author":{"gitId":"oeiyiping"},"content":"    private final String description;"},{"lineNumber":9,"author":{"gitId":"oeiyiping"},"content":"    private final LocalDateTime dateTime;"},{"lineNumber":10,"author":{"gitId":"oeiyiping"},"content":""},{"lineNumber":11,"author":{"gitId":"oeiyiping"},"content":"    /**"},{"lineNumber":12,"author":{"gitId":"oeiyiping"},"content":"     * Initialize the CommandDeadline object to represent the Deadline Task with the specified description and datetime."},{"lineNumber":13,"author":{"gitId":"oeiyiping"},"content":"     *"},{"lineNumber":14,"author":{"gitId":"oeiyiping"},"content":"     * @param description Description of the Deadline Task."},{"lineNumber":15,"author":{"gitId":"oeiyiping"},"content":"     * @param dateTime Date and time the Deadline Task should be done by."},{"lineNumber":16,"author":{"gitId":"oeiyiping"},"content":"     */"},{"lineNumber":17,"author":{"gitId":"oeiyiping"},"content":"    public CommandDeadline(String description, LocalDateTime dateTime) {"},{"lineNumber":18,"author":{"gitId":"oeiyiping"},"content":"        this.description \u003d description;"},{"lineNumber":19,"author":{"gitId":"oeiyiping"},"content":"        this.dateTime \u003d dateTime;"},{"lineNumber":20,"author":{"gitId":"oeiyiping"},"content":"    }"},{"lineNumber":21,"author":{"gitId":"oeiyiping"},"content":""},{"lineNumber":22,"author":{"gitId":"oeiyiping"},"content":"    /**"},{"lineNumber":23,"author":{"gitId":"oeiyiping"},"content":"     * Creates a Deadline Task with the specified attributes and adds it into the provided TaskList. Then, save the"},{"lineNumber":24,"author":{"gitId":"oeiyiping"},"content":"     * updated TaskList."},{"lineNumber":25,"author":{"gitId":"oeiyiping"},"content":"     *"},{"lineNumber":26,"author":{"gitId":"oeiyiping"},"content":"     * @param tasks TaskList of Duke object, contains all the Tasks that were added."},{"lineNumber":27,"author":{"gitId":"oeiyiping"},"content":"     * @param ui Ui of Duke object, prints the message of CommandDeadline and Deadline Task."},{"lineNumber":28,"author":{"gitId":"oeiyiping"},"content":"     * @param storage Storage of Duke object, saves the TaskList into a text file."},{"lineNumber":29,"author":{"gitId":"oeiyiping"},"content":"     */"},{"lineNumber":30,"author":{"gitId":"oeiyiping"},"content":"    @Override"},{"lineNumber":31,"author":{"gitId":"oeiyiping"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage) {"},{"lineNumber":32,"author":{"gitId":"oeiyiping"},"content":"        Deadline deadline \u003d new Deadline(description, dateTime);"},{"lineNumber":33,"author":{"gitId":"oeiyiping"},"content":"        tasks.addTask(deadline);"},{"lineNumber":34,"author":{"gitId":"oeiyiping"},"content":"        storage.save(tasks);"},{"lineNumber":35,"author":{"gitId":"oeiyiping"},"content":"        ui.printCommand(this);"},{"lineNumber":36,"author":{"gitId":"oeiyiping"},"content":"        ui.printTask(deadline);"},{"lineNumber":37,"author":{"gitId":"oeiyiping"},"content":"    }"},{"lineNumber":38,"author":{"gitId":"oeiyiping"},"content":""},{"lineNumber":39,"author":{"gitId":"oeiyiping"},"content":"    /**"},{"lineNumber":40,"author":{"gitId":"oeiyiping"},"content":"     * Returns the string representation of the message to be printed by the Duke object\u0027s Ui."},{"lineNumber":41,"author":{"gitId":"oeiyiping"},"content":"     *"},{"lineNumber":42,"author":{"gitId":"oeiyiping"},"content":"     * @return String representation of the message to be printed by the Duke object\u0027s Ui."},{"lineNumber":43,"author":{"gitId":"oeiyiping"},"content":"     */"},{"lineNumber":44,"author":{"gitId":"oeiyiping"},"content":"    @Override"},{"lineNumber":45,"author":{"gitId":"oeiyiping"},"content":"    public String toDukeOutput() {"},{"lineNumber":46,"author":{"gitId":"oeiyiping"},"content":"        return \"Roger that boss, I\u0027ve added a new Deadline: \";"},{"lineNumber":47,"author":{"gitId":"oeiyiping"},"content":"    }"},{"lineNumber":48,"author":{"gitId":"oeiyiping"},"content":"}"}],"authorContributionMap":{"oeiyiping":48}},{"path":"src/main/java/CommandDelete.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"oeiyiping"},"content":"public class CommandDelete extends Command {"},{"lineNumber":2,"author":{"gitId":"oeiyiping"},"content":"    private final int index;"},{"lineNumber":3,"author":{"gitId":"oeiyiping"},"content":""},{"lineNumber":4,"author":{"gitId":"oeiyiping"},"content":"    public CommandDelete (int index) {"},{"lineNumber":5,"author":{"gitId":"oeiyiping"},"content":"        this.index \u003d index;"},{"lineNumber":6,"author":{"gitId":"oeiyiping"},"content":"    }"},{"lineNumber":7,"author":{"gitId":"oeiyiping"},"content":""},{"lineNumber":8,"author":{"gitId":"oeiyiping"},"content":"    @Override"},{"lineNumber":9,"author":{"gitId":"oeiyiping"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage) {"},{"lineNumber":10,"author":{"gitId":"oeiyiping"},"content":"        Task task \u003d tasks.deleteTask(index);"},{"lineNumber":11,"author":{"gitId":"oeiyiping"},"content":"        storage.save(tasks);"},{"lineNumber":12,"author":{"gitId":"oeiyiping"},"content":"        ui.printCommand(this);"},{"lineNumber":13,"author":{"gitId":"oeiyiping"},"content":"        ui.printTask(task);"},{"lineNumber":14,"author":{"gitId":"oeiyiping"},"content":"    }"},{"lineNumber":15,"author":{"gitId":"oeiyiping"},"content":""},{"lineNumber":16,"author":{"gitId":"oeiyiping"},"content":"    @Override"},{"lineNumber":17,"author":{"gitId":"oeiyiping"},"content":"    public String toDukeOutput() {"},{"lineNumber":18,"author":{"gitId":"oeiyiping"},"content":"        return \"Alrighty bossman. I shall wipe this task off the face of the earth: \";"},{"lineNumber":19,"author":{"gitId":"oeiyiping"},"content":"    }"},{"lineNumber":20,"author":{"gitId":"oeiyiping"},"content":"}"}],"authorContributionMap":{"oeiyiping":20}},{"path":"src/main/java/CommandDone.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"oeiyiping"},"content":"public class CommandDone extends Command {"},{"lineNumber":2,"author":{"gitId":"oeiyiping"},"content":"    private final int index;"},{"lineNumber":3,"author":{"gitId":"oeiyiping"},"content":""},{"lineNumber":4,"author":{"gitId":"oeiyiping"},"content":"    public CommandDone(int index) {"},{"lineNumber":5,"author":{"gitId":"oeiyiping"},"content":"        this.index \u003d index;"},{"lineNumber":6,"author":{"gitId":"oeiyiping"},"content":"    }"},{"lineNumber":7,"author":{"gitId":"oeiyiping"},"content":""},{"lineNumber":8,"author":{"gitId":"oeiyiping"},"content":"    @Override"},{"lineNumber":9,"author":{"gitId":"oeiyiping"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage) {"},{"lineNumber":10,"author":{"gitId":"oeiyiping"},"content":"        Task task \u003d tasks.doneTask(index);"},{"lineNumber":11,"author":{"gitId":"oeiyiping"},"content":"        storage.save(tasks);"},{"lineNumber":12,"author":{"gitId":"oeiyiping"},"content":"        ui.printCommand(this);"},{"lineNumber":13,"author":{"gitId":"oeiyiping"},"content":"        ui.printTask(task);"},{"lineNumber":14,"author":{"gitId":"oeiyiping"},"content":"    }"},{"lineNumber":15,"author":{"gitId":"oeiyiping"},"content":""},{"lineNumber":16,"author":{"gitId":"oeiyiping"},"content":"    @Override"},{"lineNumber":17,"author":{"gitId":"oeiyiping"},"content":"    public String toDukeOutput() {"},{"lineNumber":18,"author":{"gitId":"oeiyiping"},"content":"        return \"Impressive, yet another task has been done: \";"},{"lineNumber":19,"author":{"gitId":"oeiyiping"},"content":"    }"},{"lineNumber":20,"author":{"gitId":"oeiyiping"},"content":"}"}],"authorContributionMap":{"oeiyiping":20}},{"path":"src/main/java/CommandEvent.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"oeiyiping"},"content":"import java.time.LocalDateTime;"},{"lineNumber":2,"author":{"gitId":"oeiyiping"},"content":""},{"lineNumber":3,"author":{"gitId":"oeiyiping"},"content":"/**"},{"lineNumber":4,"author":{"gitId":"oeiyiping"},"content":" * Represents the Command for \"event\" for the Duke object. CommandEvent helps to initiate creation and adding of"},{"lineNumber":5,"author":{"gitId":"oeiyiping"},"content":" * the Event Task with the specified attributes into the provided TaskList."},{"lineNumber":6,"author":{"gitId":"oeiyiping"},"content":" */"},{"lineNumber":7,"author":{"gitId":"oeiyiping"},"content":"public class CommandEvent extends Command {"},{"lineNumber":8,"author":{"gitId":"oeiyiping"},"content":"    private final String description;"},{"lineNumber":9,"author":{"gitId":"oeiyiping"},"content":"    private final LocalDateTime dateTime;"},{"lineNumber":10,"author":{"gitId":"oeiyiping"},"content":""},{"lineNumber":11,"author":{"gitId":"oeiyiping"},"content":"    /**"},{"lineNumber":12,"author":{"gitId":"oeiyiping"},"content":"     * Initialize the CommandEvent object to represent the Event Task with the specified description and datetime."},{"lineNumber":13,"author":{"gitId":"oeiyiping"},"content":"     *"},{"lineNumber":14,"author":{"gitId":"oeiyiping"},"content":"     * @param description Description of the Event Task."},{"lineNumber":15,"author":{"gitId":"oeiyiping"},"content":"     * @param dateTime Date and time the Event Task will occur on."},{"lineNumber":16,"author":{"gitId":"oeiyiping"},"content":"     */"},{"lineNumber":17,"author":{"gitId":"oeiyiping"},"content":"    public CommandEvent(String description, LocalDateTime dateTime) {"},{"lineNumber":18,"author":{"gitId":"oeiyiping"},"content":"        this.description \u003d description;"},{"lineNumber":19,"author":{"gitId":"oeiyiping"},"content":"        this.dateTime \u003d dateTime;"},{"lineNumber":20,"author":{"gitId":"oeiyiping"},"content":"    }"},{"lineNumber":21,"author":{"gitId":"oeiyiping"},"content":""},{"lineNumber":22,"author":{"gitId":"oeiyiping"},"content":"    /**"},{"lineNumber":23,"author":{"gitId":"oeiyiping"},"content":"     * Creates an Event Task with the specified attributes and adds it into the provided TaskList. Then, save the"},{"lineNumber":24,"author":{"gitId":"oeiyiping"},"content":"     * updated TaskList."},{"lineNumber":25,"author":{"gitId":"oeiyiping"},"content":"     *"},{"lineNumber":26,"author":{"gitId":"oeiyiping"},"content":"     * @param tasks TaskList of Duke object, contains all the Tasks that were added."},{"lineNumber":27,"author":{"gitId":"oeiyiping"},"content":"     * @param ui Ui of Duke object, prints the message of CommandEvent and Event Task."},{"lineNumber":28,"author":{"gitId":"oeiyiping"},"content":"     * @param storage Storage of Duke object, saves the TaskList into a text file."},{"lineNumber":29,"author":{"gitId":"oeiyiping"},"content":"     */"},{"lineNumber":30,"author":{"gitId":"oeiyiping"},"content":"    @Override"},{"lineNumber":31,"author":{"gitId":"oeiyiping"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage) {"},{"lineNumber":32,"author":{"gitId":"oeiyiping"},"content":"        Event event \u003d new Event(description, dateTime);"},{"lineNumber":33,"author":{"gitId":"oeiyiping"},"content":"        tasks.addTask(event);"},{"lineNumber":34,"author":{"gitId":"oeiyiping"},"content":"        storage.save(tasks);"},{"lineNumber":35,"author":{"gitId":"oeiyiping"},"content":"        ui.printCommand(this);"},{"lineNumber":36,"author":{"gitId":"oeiyiping"},"content":"        ui.printTask(event);"},{"lineNumber":37,"author":{"gitId":"oeiyiping"},"content":"    }"},{"lineNumber":38,"author":{"gitId":"oeiyiping"},"content":""},{"lineNumber":39,"author":{"gitId":"oeiyiping"},"content":"    /**"},{"lineNumber":40,"author":{"gitId":"oeiyiping"},"content":"     * Returns the string representation of the message to be printed by the Duke object\u0027s Ui."},{"lineNumber":41,"author":{"gitId":"oeiyiping"},"content":"     *"},{"lineNumber":42,"author":{"gitId":"oeiyiping"},"content":"     * @return String representation of the message to be printed by the Duke object\u0027s Ui."},{"lineNumber":43,"author":{"gitId":"oeiyiping"},"content":"     */"},{"lineNumber":44,"author":{"gitId":"oeiyiping"},"content":"    @Override"},{"lineNumber":45,"author":{"gitId":"oeiyiping"},"content":"    public String toDukeOutput() {"},{"lineNumber":46,"author":{"gitId":"oeiyiping"},"content":"        return \"Roger that boss, I\u0027ve added a new Event: \";"},{"lineNumber":47,"author":{"gitId":"oeiyiping"},"content":"    }"},{"lineNumber":48,"author":{"gitId":"oeiyiping"},"content":"}"}],"authorContributionMap":{"oeiyiping":48}},{"path":"src/main/java/CommandFind.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"oeiyiping"},"content":"public class CommandFind extends Command {"},{"lineNumber":2,"author":{"gitId":"oeiyiping"},"content":"    private final String query;"},{"lineNumber":3,"author":{"gitId":"oeiyiping"},"content":""},{"lineNumber":4,"author":{"gitId":"oeiyiping"},"content":"    public CommandFind(String query) {"},{"lineNumber":5,"author":{"gitId":"oeiyiping"},"content":"        this.query \u003d query;"},{"lineNumber":6,"author":{"gitId":"oeiyiping"},"content":"    }"},{"lineNumber":7,"author":{"gitId":"oeiyiping"},"content":""},{"lineNumber":8,"author":{"gitId":"oeiyiping"},"content":"    @Override"},{"lineNumber":9,"author":{"gitId":"oeiyiping"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage) {"},{"lineNumber":10,"author":{"gitId":"oeiyiping"},"content":"        ui.printCommand(this);"},{"lineNumber":11,"author":{"gitId":"oeiyiping"},"content":"        tasks.findTasks(query);"},{"lineNumber":12,"author":{"gitId":"oeiyiping"},"content":"    }"},{"lineNumber":13,"author":{"gitId":"oeiyiping"},"content":""},{"lineNumber":14,"author":{"gitId":"oeiyiping"},"content":"    @Override"},{"lineNumber":15,"author":{"gitId":"oeiyiping"},"content":"    public String toDukeOutput() {"},{"lineNumber":16,"author":{"gitId":"oeiyiping"},"content":"        return \"Sure thing boss, I\u0027ll find them in a jiffy. \";"},{"lineNumber":17,"author":{"gitId":"oeiyiping"},"content":"    }"},{"lineNumber":18,"author":{"gitId":"oeiyiping"},"content":"}"}],"authorContributionMap":{"oeiyiping":18}},{"path":"src/main/java/CommandList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"oeiyiping"},"content":"public class CommandList extends Command {"},{"lineNumber":2,"author":{"gitId":"oeiyiping"},"content":"    @Override"},{"lineNumber":3,"author":{"gitId":"oeiyiping"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage) {"},{"lineNumber":4,"author":{"gitId":"oeiyiping"},"content":"        ui.printCommand(this);"},{"lineNumber":5,"author":{"gitId":"oeiyiping"},"content":"        tasks.printTasks();"},{"lineNumber":6,"author":{"gitId":"oeiyiping"},"content":"    }"},{"lineNumber":7,"author":{"gitId":"oeiyiping"},"content":""},{"lineNumber":8,"author":{"gitId":"oeiyiping"},"content":"    @Override"},{"lineNumber":9,"author":{"gitId":"oeiyiping"},"content":"    public String toDukeOutput() {"},{"lineNumber":10,"author":{"gitId":"oeiyiping"},"content":"        return \"Aye boss, here to see your \\\"collection\\\" eh?\";"},{"lineNumber":11,"author":{"gitId":"oeiyiping"},"content":"    }"},{"lineNumber":12,"author":{"gitId":"oeiyiping"},"content":"}"}],"authorContributionMap":{"oeiyiping":12}},{"path":"src/main/java/CommandToDo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"oeiyiping"},"content":"public class CommandToDo extends Command {"},{"lineNumber":2,"author":{"gitId":"oeiyiping"},"content":"    private final String description;"},{"lineNumber":3,"author":{"gitId":"oeiyiping"},"content":""},{"lineNumber":4,"author":{"gitId":"oeiyiping"},"content":"    public CommandToDo(String description) {"},{"lineNumber":5,"author":{"gitId":"oeiyiping"},"content":"        this.description \u003d description;"},{"lineNumber":6,"author":{"gitId":"oeiyiping"},"content":"    }"},{"lineNumber":7,"author":{"gitId":"oeiyiping"},"content":""},{"lineNumber":8,"author":{"gitId":"oeiyiping"},"content":"    @Override"},{"lineNumber":9,"author":{"gitId":"oeiyiping"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage) {"},{"lineNumber":10,"author":{"gitId":"oeiyiping"},"content":"        ToDo toDo \u003d new ToDo(description);"},{"lineNumber":11,"author":{"gitId":"oeiyiping"},"content":"        tasks.addTask(toDo);"},{"lineNumber":12,"author":{"gitId":"oeiyiping"},"content":"        storage.save(tasks);"},{"lineNumber":13,"author":{"gitId":"oeiyiping"},"content":"        ui.printCommand(this);"},{"lineNumber":14,"author":{"gitId":"oeiyiping"},"content":"        ui.printTask(toDo);"},{"lineNumber":15,"author":{"gitId":"oeiyiping"},"content":"    }"},{"lineNumber":16,"author":{"gitId":"oeiyiping"},"content":""},{"lineNumber":17,"author":{"gitId":"oeiyiping"},"content":"    @Override"},{"lineNumber":18,"author":{"gitId":"oeiyiping"},"content":"    public String toDukeOutput() {"},{"lineNumber":19,"author":{"gitId":"oeiyiping"},"content":"        return \"Roger that boss, I\u0027ve added a new ToDo: \";"},{"lineNumber":20,"author":{"gitId":"oeiyiping"},"content":"    }"},{"lineNumber":21,"author":{"gitId":"oeiyiping"},"content":"}"}],"authorContributionMap":{"oeiyiping":21}},{"path":"src/main/java/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"oeiyiping"},"content":"import java.time.LocalDateTime;"},{"lineNumber":2,"author":{"gitId":"oeiyiping"},"content":"import java.time.format.DateTimeFormatter;"},{"lineNumber":3,"author":{"gitId":"oeiyiping"},"content":""},{"lineNumber":4,"author":{"gitId":"oeiyiping"},"content":"public class Deadline extends Task {"},{"lineNumber":5,"author":{"gitId":"oeiyiping"},"content":"    protected static final DateTimeFormatter DATE_TIME_FORMAT \u003d DateTimeFormatter.ofPattern(\"dd MMM yyyy, HH:mm\");"},{"lineNumber":6,"author":{"gitId":"oeiyiping"},"content":"    private final LocalDateTime by;"},{"lineNumber":7,"author":{"gitId":"oeiyiping"},"content":""},{"lineNumber":8,"author":{"gitId":"oeiyiping"},"content":"    /**"},{"lineNumber":9,"author":{"gitId":"oeiyiping"},"content":"     * Initializes a Deadline Task with the specified description and dateTime."},{"lineNumber":10,"author":{"gitId":"oeiyiping"},"content":"     *"},{"lineNumber":11,"author":{"gitId":"oeiyiping"},"content":"     * @param description Description of the Deadline Task."},{"lineNumber":12,"author":{"gitId":"oeiyiping"},"content":"     * @param dateTime Date and Time the Deadline Task should be done by."},{"lineNumber":13,"author":{"gitId":"oeiyiping"},"content":"     */"},{"lineNumber":14,"author":{"gitId":"oeiyiping"},"content":"    public Deadline(String description, LocalDateTime dateTime) {"},{"lineNumber":15,"author":{"gitId":"oeiyiping"},"content":"        super(description, \"D\");"},{"lineNumber":16,"author":{"gitId":"oeiyiping"},"content":"        by \u003d dateTime;"},{"lineNumber":17,"author":{"gitId":"oeiyiping"},"content":"    }"},{"lineNumber":18,"author":{"gitId":"oeiyiping"},"content":""},{"lineNumber":19,"author":{"gitId":"oeiyiping"},"content":"    public String toString() {"},{"lineNumber":20,"author":{"gitId":"oeiyiping"},"content":"        return super.toString() + \" (by: \" + by.format(DATE_TIME_FORMAT) + \")\";"},{"lineNumber":21,"author":{"gitId":"oeiyiping"},"content":"    }"},{"lineNumber":22,"author":{"gitId":"oeiyiping"},"content":""},{"lineNumber":23,"author":{"gitId":"oeiyiping"},"content":"    public String toLog() {"},{"lineNumber":24,"author":{"gitId":"oeiyiping"},"content":"        return super.toLog() + \" | \" + by;"},{"lineNumber":25,"author":{"gitId":"oeiyiping"},"content":"    }"},{"lineNumber":26,"author":{"gitId":"oeiyiping"},"content":"}"}],"authorContributionMap":{"oeiyiping":26}},{"path":"src/main/java/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"public class Duke {"},{"lineNumber":2,"author":{"gitId":"oeiyiping"},"content":"    private final Ui ui;"},{"lineNumber":3,"author":{"gitId":"oeiyiping"},"content":"    private final Storage storage;"},{"lineNumber":4,"author":{"gitId":"oeiyiping"},"content":"    private final TaskList tasks;"},{"lineNumber":5,"author":{"gitId":"oeiyiping"},"content":""},{"lineNumber":6,"author":{"gitId":"oeiyiping"},"content":"    /**"},{"lineNumber":7,"author":{"gitId":"oeiyiping"},"content":"     * Constructs Duke object, which immediately runs and starts accepting"},{"lineNumber":8,"author":{"gitId":"oeiyiping"},"content":"     * user input."},{"lineNumber":9,"author":{"gitId":"oeiyiping"},"content":"     */"},{"lineNumber":10,"author":{"gitId":"oeiyiping"},"content":"    public Duke() {"},{"lineNumber":11,"author":{"gitId":"oeiyiping"},"content":"        ui \u003d new Ui();"},{"lineNumber":12,"author":{"gitId":"oeiyiping"},"content":"        storage \u003d new Storage();"},{"lineNumber":13,"author":{"gitId":"oeiyiping"},"content":""},{"lineNumber":14,"author":{"gitId":"oeiyiping"},"content":"        TaskList tempTasks;"},{"lineNumber":15,"author":{"gitId":"oeiyiping"},"content":"        try {"},{"lineNumber":16,"author":{"gitId":"oeiyiping"},"content":"            tempTasks \u003d new TaskList(storage.load());"},{"lineNumber":17,"author":{"gitId":"oeiyiping"},"content":"        } catch (DukeException e) {"},{"lineNumber":18,"author":{"gitId":"oeiyiping"},"content":"            ui.printErrorMessage(e);"},{"lineNumber":19,"author":{"gitId":"oeiyiping"},"content":"            tempTasks \u003d new TaskList();"},{"lineNumber":20,"author":{"gitId":"oeiyiping"},"content":"        }"},{"lineNumber":21,"author":{"gitId":"oeiyiping"},"content":""},{"lineNumber":22,"author":{"gitId":"oeiyiping"},"content":"        this.tasks \u003d tempTasks;"},{"lineNumber":23,"author":{"gitId":"oeiyiping"},"content":"        run();"},{"lineNumber":24,"author":{"gitId":"oeiyiping"},"content":"    }"},{"lineNumber":25,"author":{"gitId":"oeiyiping"},"content":""},{"lineNumber":26,"author":{"gitId":"oeiyiping"},"content":"    /**"},{"lineNumber":27,"author":{"gitId":"oeiyiping"},"content":"     * Main method of Duke, entry point to run the program."},{"lineNumber":28,"author":{"gitId":"oeiyiping"},"content":"     *"},{"lineNumber":29,"author":{"gitId":"oeiyiping"},"content":"     * @param args arguments provided when running the program."},{"lineNumber":30,"author":{"gitId":"oeiyiping"},"content":"     */"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public static void main(String[] args) {"},{"lineNumber":32,"author":{"gitId":"oeiyiping"},"content":"        Duke duke \u003d new Duke();"},{"lineNumber":33,"author":{"gitId":"oeiyiping"},"content":"    }"},{"lineNumber":34,"author":{"gitId":"oeiyiping"},"content":""},{"lineNumber":35,"author":{"gitId":"oeiyiping"},"content":"    private void run() {"},{"lineNumber":36,"author":{"gitId":"oeiyiping"},"content":"        boolean isRunning \u003d true;"},{"lineNumber":37,"author":{"gitId":"oeiyiping"},"content":"        ui.printGreetings();"},{"lineNumber":38,"author":{"gitId":"oeiyiping"},"content":""},{"lineNumber":39,"author":{"gitId":"oeiyiping"},"content":"        while (isRunning) {"},{"lineNumber":40,"author":{"gitId":"oeiyiping"},"content":"            try {"},{"lineNumber":41,"author":{"gitId":"oeiyiping"},"content":"                String input \u003d ui.readInput();"},{"lineNumber":42,"author":{"gitId":"oeiyiping"},"content":"                Command command \u003d Parser.parse(input);"},{"lineNumber":43,"author":{"gitId":"oeiyiping"},"content":"                command.execute(tasks, ui, storage);"},{"lineNumber":44,"author":{"gitId":"oeiyiping"},"content":""},{"lineNumber":45,"author":{"gitId":"oeiyiping"},"content":"                if (command instanceof CommandBye) {"},{"lineNumber":46,"author":{"gitId":"oeiyiping"},"content":"                    isRunning \u003d false;"},{"lineNumber":47,"author":{"gitId":"oeiyiping"},"content":"                }"},{"lineNumber":48,"author":{"gitId":"oeiyiping"},"content":"            } catch (DukeException e) {"},{"lineNumber":49,"author":{"gitId":"oeiyiping"},"content":"                ui.printErrorMessage(e);"},{"lineNumber":50,"author":{"gitId":"oeiyiping"},"content":""},{"lineNumber":51,"author":{"gitId":"oeiyiping"},"content":"            } finally {"},{"lineNumber":52,"author":{"gitId":"oeiyiping"},"content":"                if (isRunning) {"},{"lineNumber":53,"author":{"gitId":"oeiyiping"},"content":"                    ui.printInputPrompt();"},{"lineNumber":54,"author":{"gitId":"oeiyiping"},"content":"                }"},{"lineNumber":55,"author":{"gitId":"oeiyiping"},"content":"            }"},{"lineNumber":56,"author":{"gitId":"oeiyiping"},"content":"        }"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":58,"author":{"gitId":"-"},"content":"}"}],"authorContributionMap":{"oeiyiping":54,"-":4}},{"path":"src/main/java/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"oeiyiping"},"content":"public class DukeException extends Exception {"},{"lineNumber":2,"author":{"gitId":"oeiyiping"},"content":"    public DukeException(String s) {"},{"lineNumber":3,"author":{"gitId":"oeiyiping"},"content":"        super(s);"},{"lineNumber":4,"author":{"gitId":"oeiyiping"},"content":"    }"},{"lineNumber":5,"author":{"gitId":"oeiyiping"},"content":"}"}],"authorContributionMap":{"oeiyiping":5}},{"path":"src/main/java/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"oeiyiping"},"content":"import java.time.LocalDateTime;"},{"lineNumber":2,"author":{"gitId":"oeiyiping"},"content":"import java.time.format.DateTimeFormatter;"},{"lineNumber":3,"author":{"gitId":"oeiyiping"},"content":""},{"lineNumber":4,"author":{"gitId":"oeiyiping"},"content":"public class Event extends Task {"},{"lineNumber":5,"author":{"gitId":"oeiyiping"},"content":"    protected static final DateTimeFormatter DATE_TIME_FORMAT \u003d DateTimeFormatter.ofPattern(\"dd MMM yyyy, HH:mm\");"},{"lineNumber":6,"author":{"gitId":"oeiyiping"},"content":"    protected LocalDateTime at;"},{"lineNumber":7,"author":{"gitId":"oeiyiping"},"content":""},{"lineNumber":8,"author":{"gitId":"oeiyiping"},"content":"    /**"},{"lineNumber":9,"author":{"gitId":"oeiyiping"},"content":"     * Initializes an Event Task with the specified description and dateTime."},{"lineNumber":10,"author":{"gitId":"oeiyiping"},"content":"     *"},{"lineNumber":11,"author":{"gitId":"oeiyiping"},"content":"     * @param description Description of the Event Task."},{"lineNumber":12,"author":{"gitId":"oeiyiping"},"content":"     * @param dateTime Date and Time the Event Task occurs at."},{"lineNumber":13,"author":{"gitId":"oeiyiping"},"content":"     */"},{"lineNumber":14,"author":{"gitId":"oeiyiping"},"content":"    public Event(String description, LocalDateTime dateTime) {"},{"lineNumber":15,"author":{"gitId":"oeiyiping"},"content":"        super(description, \"E\");"},{"lineNumber":16,"author":{"gitId":"oeiyiping"},"content":"        at \u003d dateTime;"},{"lineNumber":17,"author":{"gitId":"oeiyiping"},"content":"    }"},{"lineNumber":18,"author":{"gitId":"oeiyiping"},"content":""},{"lineNumber":19,"author":{"gitId":"oeiyiping"},"content":"    public String toString() {"},{"lineNumber":20,"author":{"gitId":"oeiyiping"},"content":"        return super.toString() + \" (at: \" + at.format(DATE_TIME_FORMAT) + \")\";"},{"lineNumber":21,"author":{"gitId":"oeiyiping"},"content":"    }"},{"lineNumber":22,"author":{"gitId":"oeiyiping"},"content":""},{"lineNumber":23,"author":{"gitId":"oeiyiping"},"content":"    public String toLog() {"},{"lineNumber":24,"author":{"gitId":"oeiyiping"},"content":"        return super.toLog() + \" | \" + at;"},{"lineNumber":25,"author":{"gitId":"oeiyiping"},"content":"    }"},{"lineNumber":26,"author":{"gitId":"oeiyiping"},"content":"}"}],"authorContributionMap":{"oeiyiping":26}},{"path":"src/main/java/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"oeiyiping"},"content":"import java.time.LocalDateTime;"},{"lineNumber":2,"author":{"gitId":"oeiyiping"},"content":"import java.time.format.DateTimeParseException;"},{"lineNumber":3,"author":{"gitId":"oeiyiping"},"content":""},{"lineNumber":4,"author":{"gitId":"oeiyiping"},"content":"public class Parser {"},{"lineNumber":5,"author":{"gitId":"oeiyiping"},"content":"    /**"},{"lineNumber":6,"author":{"gitId":"oeiyiping"},"content":"     * Parses a valid input string into the corresponding valid Commmand."},{"lineNumber":7,"author":{"gitId":"oeiyiping"},"content":"     *"},{"lineNumber":8,"author":{"gitId":"oeiyiping"},"content":"     * @param input Input string to be parsed."},{"lineNumber":9,"author":{"gitId":"oeiyiping"},"content":"     * @return The corresponding Command of the input string."},{"lineNumber":10,"author":{"gitId":"oeiyiping"},"content":"     * @throws DukeException Thrown exception caused by the reason specified in its error body."},{"lineNumber":11,"author":{"gitId":"oeiyiping"},"content":"     */"},{"lineNumber":12,"author":{"gitId":"oeiyiping"},"content":"    public static Command parse(String input) throws DukeException {"},{"lineNumber":13,"author":{"gitId":"oeiyiping"},"content":"        String[] commandAndParams \u003d input.split(\" \", 2);"},{"lineNumber":14,"author":{"gitId":"oeiyiping"},"content":"        String command \u003d commandAndParams[0].toLowerCase();"},{"lineNumber":15,"author":{"gitId":"oeiyiping"},"content":"        Command parsed \u003d null;"},{"lineNumber":16,"author":{"gitId":"oeiyiping"},"content":"        boolean hasParams \u003d commandAndParams.length \u003e 1 \u0026\u0026 !commandAndParams[1].isBlank();"},{"lineNumber":17,"author":{"gitId":"oeiyiping"},"content":""},{"lineNumber":18,"author":{"gitId":"oeiyiping"},"content":"        switch (command) {"},{"lineNumber":19,"author":{"gitId":"oeiyiping"},"content":"        case \"bye\":"},{"lineNumber":20,"author":{"gitId":"oeiyiping"},"content":"            parsed \u003d new CommandBye();"},{"lineNumber":21,"author":{"gitId":"oeiyiping"},"content":"            break;"},{"lineNumber":22,"author":{"gitId":"oeiyiping"},"content":""},{"lineNumber":23,"author":{"gitId":"oeiyiping"},"content":"        case \"deadline\":"},{"lineNumber":24,"author":{"gitId":"oeiyiping"},"content":"            if (!hasParams) {"},{"lineNumber":25,"author":{"gitId":"oeiyiping"},"content":"                throw new DukeException(\"Deadline description and date cannot be empty!\");"},{"lineNumber":26,"author":{"gitId":"oeiyiping"},"content":"            }"},{"lineNumber":27,"author":{"gitId":"oeiyiping"},"content":""},{"lineNumber":28,"author":{"gitId":"oeiyiping"},"content":"            String[] deadlineArgs \u003d commandAndParams[1].split(\" /by \", 2);"},{"lineNumber":29,"author":{"gitId":"oeiyiping"},"content":"            if (deadlineArgs.length !\u003d 2) {"},{"lineNumber":30,"author":{"gitId":"oeiyiping"},"content":"                throw new DukeException(\"Deadline command must follow the format: description /by time\");"},{"lineNumber":31,"author":{"gitId":"oeiyiping"},"content":"            }"},{"lineNumber":32,"author":{"gitId":"oeiyiping"},"content":""},{"lineNumber":33,"author":{"gitId":"oeiyiping"},"content":"            String[] deadlineDateTime \u003d deadlineArgs[1].split(\" \");"},{"lineNumber":34,"author":{"gitId":"oeiyiping"},"content":"            String deadlineDate \u003d deadlineDateTime[0];"},{"lineNumber":35,"author":{"gitId":"oeiyiping"},"content":"            String deadlineTime \u003d deadlineDateTime.length \u003e 1 // if time is not provided, default time is 23:59:59"},{"lineNumber":36,"author":{"gitId":"oeiyiping"},"content":"                    ? deadlineDateTime[1].substring(0, 2) + \":\" + deadlineDateTime[1].substring(2, 4)"},{"lineNumber":37,"author":{"gitId":"oeiyiping"},"content":"                    : \"23:59:59\";"},{"lineNumber":38,"author":{"gitId":"oeiyiping"},"content":"            try {"},{"lineNumber":39,"author":{"gitId":"oeiyiping"},"content":"                LocalDateTime parsedDeadlineDateTime \u003d LocalDateTime.parse(deadlineDate + \"T\" + deadlineTime);"},{"lineNumber":40,"author":{"gitId":"oeiyiping"},"content":"                parsed \u003d new CommandDeadline(deadlineArgs[0], parsedDeadlineDateTime);"},{"lineNumber":41,"author":{"gitId":"oeiyiping"},"content":"            } catch (DateTimeParseException e) {"},{"lineNumber":42,"author":{"gitId":"oeiyiping"},"content":"                throw new DukeException(\"Please follow the Date-Time format: YYYY-MM-DD TIME\");"},{"lineNumber":43,"author":{"gitId":"oeiyiping"},"content":"            }"},{"lineNumber":44,"author":{"gitId":"oeiyiping"},"content":""},{"lineNumber":45,"author":{"gitId":"oeiyiping"},"content":"            break;"},{"lineNumber":46,"author":{"gitId":"oeiyiping"},"content":""},{"lineNumber":47,"author":{"gitId":"oeiyiping"},"content":"        case \"delete\":"},{"lineNumber":48,"author":{"gitId":"oeiyiping"},"content":"            if (!hasParams) {"},{"lineNumber":49,"author":{"gitId":"oeiyiping"},"content":"                throw new DukeException(\"Task index cannot be empty!\");"},{"lineNumber":50,"author":{"gitId":"oeiyiping"},"content":"            }"},{"lineNumber":51,"author":{"gitId":"oeiyiping"},"content":""},{"lineNumber":52,"author":{"gitId":"oeiyiping"},"content":"            parsed \u003d new CommandDelete(Integer.parseInt(commandAndParams[1]));"},{"lineNumber":53,"author":{"gitId":"oeiyiping"},"content":"            break;"},{"lineNumber":54,"author":{"gitId":"oeiyiping"},"content":""},{"lineNumber":55,"author":{"gitId":"oeiyiping"},"content":"        case \"done\":"},{"lineNumber":56,"author":{"gitId":"oeiyiping"},"content":"            if (!hasParams) {"},{"lineNumber":57,"author":{"gitId":"oeiyiping"},"content":"                throw new DukeException(\"Task index cannot be empty!\");"},{"lineNumber":58,"author":{"gitId":"oeiyiping"},"content":"            }"},{"lineNumber":59,"author":{"gitId":"oeiyiping"},"content":""},{"lineNumber":60,"author":{"gitId":"oeiyiping"},"content":"            parsed \u003d new CommandDone(Integer.parseInt(commandAndParams[1]));"},{"lineNumber":61,"author":{"gitId":"oeiyiping"},"content":"            break;"},{"lineNumber":62,"author":{"gitId":"oeiyiping"},"content":""},{"lineNumber":63,"author":{"gitId":"oeiyiping"},"content":"        case \"event\":"},{"lineNumber":64,"author":{"gitId":"oeiyiping"},"content":"            if (!hasParams) {"},{"lineNumber":65,"author":{"gitId":"oeiyiping"},"content":"                throw new DukeException(\"Event description and date cannot be empty!\");"},{"lineNumber":66,"author":{"gitId":"oeiyiping"},"content":"            }"},{"lineNumber":67,"author":{"gitId":"oeiyiping"},"content":""},{"lineNumber":68,"author":{"gitId":"oeiyiping"},"content":"            String[] eventArgs \u003d commandAndParams[1].split(\" /at \", 2);"},{"lineNumber":69,"author":{"gitId":"oeiyiping"},"content":"            if (eventArgs.length !\u003d 2) {"},{"lineNumber":70,"author":{"gitId":"oeiyiping"},"content":"                throw new DukeException(\"Event command must follow the format: description /at time\");"},{"lineNumber":71,"author":{"gitId":"oeiyiping"},"content":"            }"},{"lineNumber":72,"author":{"gitId":"oeiyiping"},"content":""},{"lineNumber":73,"author":{"gitId":"oeiyiping"},"content":"            String[] eventDateTime \u003d eventArgs[1].split(\" \");"},{"lineNumber":74,"author":{"gitId":"oeiyiping"},"content":"            String eventDate \u003d eventDateTime[0];"},{"lineNumber":75,"author":{"gitId":"oeiyiping"},"content":"            String eventTime \u003d eventDateTime.length \u003e 1 // if time is not provided, default time is 00:00"},{"lineNumber":76,"author":{"gitId":"oeiyiping"},"content":"                    ? eventDateTime[1].substring(0, 2) + \":\" + eventDateTime[1].substring(2, 4)"},{"lineNumber":77,"author":{"gitId":"oeiyiping"},"content":"                    : \"00:00:00\";"},{"lineNumber":78,"author":{"gitId":"oeiyiping"},"content":"            try {"},{"lineNumber":79,"author":{"gitId":"oeiyiping"},"content":"                LocalDateTime parsedEventDateTime \u003d LocalDateTime.parse(eventDate + \"T\" + eventTime);"},{"lineNumber":80,"author":{"gitId":"oeiyiping"},"content":"                parsed \u003d new CommandEvent(eventArgs[0], parsedEventDateTime);"},{"lineNumber":81,"author":{"gitId":"oeiyiping"},"content":"            } catch (DateTimeParseException e) {"},{"lineNumber":82,"author":{"gitId":"oeiyiping"},"content":"                throw new DukeException(\"Please follow the Date-Time format: YYYY-MM-DD TIME\");"},{"lineNumber":83,"author":{"gitId":"oeiyiping"},"content":"            }"},{"lineNumber":84,"author":{"gitId":"oeiyiping"},"content":""},{"lineNumber":85,"author":{"gitId":"oeiyiping"},"content":"            break;"},{"lineNumber":86,"author":{"gitId":"oeiyiping"},"content":""},{"lineNumber":87,"author":{"gitId":"oeiyiping"},"content":"        case \"find\":"},{"lineNumber":88,"author":{"gitId":"oeiyiping"},"content":"            if (!hasParams) {"},{"lineNumber":89,"author":{"gitId":"oeiyiping"},"content":"                throw new DukeException(\"Search term cannot be empty!\");"},{"lineNumber":90,"author":{"gitId":"oeiyiping"},"content":"            }"},{"lineNumber":91,"author":{"gitId":"oeiyiping"},"content":""},{"lineNumber":92,"author":{"gitId":"oeiyiping"},"content":"            parsed \u003d new CommandFind(commandAndParams[1]);"},{"lineNumber":93,"author":{"gitId":"oeiyiping"},"content":"            break;"},{"lineNumber":94,"author":{"gitId":"oeiyiping"},"content":""},{"lineNumber":95,"author":{"gitId":"oeiyiping"},"content":"        case \"list\":"},{"lineNumber":96,"author":{"gitId":"oeiyiping"},"content":"            parsed \u003d new CommandList();"},{"lineNumber":97,"author":{"gitId":"oeiyiping"},"content":"            break;"},{"lineNumber":98,"author":{"gitId":"oeiyiping"},"content":""},{"lineNumber":99,"author":{"gitId":"oeiyiping"},"content":"        case \"todo\":"},{"lineNumber":100,"author":{"gitId":"oeiyiping"},"content":"            if (!hasParams) {"},{"lineNumber":101,"author":{"gitId":"oeiyiping"},"content":"                throw new DukeException(\"ToDo description cannot be empty!\");"},{"lineNumber":102,"author":{"gitId":"oeiyiping"},"content":"            }"},{"lineNumber":103,"author":{"gitId":"oeiyiping"},"content":""},{"lineNumber":104,"author":{"gitId":"oeiyiping"},"content":"            parsed \u003d new CommandToDo(commandAndParams[1]);"},{"lineNumber":105,"author":{"gitId":"oeiyiping"},"content":"            break;"},{"lineNumber":106,"author":{"gitId":"oeiyiping"},"content":""},{"lineNumber":107,"author":{"gitId":"oeiyiping"},"content":"        default:"},{"lineNumber":108,"author":{"gitId":"oeiyiping"},"content":"            throw new DukeException(\"Invalid command, please provide a supported command.\");"},{"lineNumber":109,"author":{"gitId":"oeiyiping"},"content":"        }"},{"lineNumber":110,"author":{"gitId":"oeiyiping"},"content":""},{"lineNumber":111,"author":{"gitId":"oeiyiping"},"content":"        if (parsed \u003d\u003d null) {"},{"lineNumber":112,"author":{"gitId":"oeiyiping"},"content":"            throw new DukeException(\"Error in parsed command\");"},{"lineNumber":113,"author":{"gitId":"oeiyiping"},"content":"        }"},{"lineNumber":114,"author":{"gitId":"oeiyiping"},"content":""},{"lineNumber":115,"author":{"gitId":"oeiyiping"},"content":"        return parsed;"},{"lineNumber":116,"author":{"gitId":"oeiyiping"},"content":"    }"},{"lineNumber":117,"author":{"gitId":"oeiyiping"},"content":"}"}],"authorContributionMap":{"oeiyiping":117}},{"path":"src/main/java/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"oeiyiping"},"content":"import java.io.BufferedReader;"},{"lineNumber":2,"author":{"gitId":"oeiyiping"},"content":"import java.io.BufferedWriter;"},{"lineNumber":3,"author":{"gitId":"oeiyiping"},"content":"import java.io.File;"},{"lineNumber":4,"author":{"gitId":"oeiyiping"},"content":"import java.io.FileReader;"},{"lineNumber":5,"author":{"gitId":"oeiyiping"},"content":"import java.io.FileWriter;"},{"lineNumber":6,"author":{"gitId":"oeiyiping"},"content":"import java.io.IOException;"},{"lineNumber":7,"author":{"gitId":"oeiyiping"},"content":"import java.time.LocalDateTime;"},{"lineNumber":8,"author":{"gitId":"oeiyiping"},"content":"import java.util.ArrayList;"},{"lineNumber":9,"author":{"gitId":"oeiyiping"},"content":""},{"lineNumber":10,"author":{"gitId":"oeiyiping"},"content":"public class Storage {"},{"lineNumber":11,"author":{"gitId":"oeiyiping"},"content":"    public Storage() { // default Storage uses current directory as save/load location"},{"lineNumber":12,"author":{"gitId":"oeiyiping"},"content":"    }"},{"lineNumber":13,"author":{"gitId":"oeiyiping"},"content":""},{"lineNumber":14,"author":{"gitId":"oeiyiping"},"content":"    /**"},{"lineNumber":15,"author":{"gitId":"oeiyiping"},"content":"     * Saves the tasks in taskList into save file \"duke_saved_tasks\" in the same directory."},{"lineNumber":16,"author":{"gitId":"oeiyiping"},"content":"     *"},{"lineNumber":17,"author":{"gitId":"oeiyiping"},"content":"     * @param taskList TaskList containing the tasks to be saved."},{"lineNumber":18,"author":{"gitId":"oeiyiping"},"content":"     */"},{"lineNumber":19,"author":{"gitId":"oeiyiping"},"content":"    public void save(TaskList taskList) {"},{"lineNumber":20,"author":{"gitId":"oeiyiping"},"content":"        try {"},{"lineNumber":21,"author":{"gitId":"oeiyiping"},"content":"            FileWriter fileWriter \u003d new FileWriter(\"duke_saved_tasks\");"},{"lineNumber":22,"author":{"gitId":"oeiyiping"},"content":"            BufferedWriter bufferedWriter \u003d new BufferedWriter(fileWriter);"},{"lineNumber":23,"author":{"gitId":"oeiyiping"},"content":""},{"lineNumber":24,"author":{"gitId":"oeiyiping"},"content":"            ArrayList\u003cTask\u003e tasks \u003d taskList.getTasks();"},{"lineNumber":25,"author":{"gitId":"oeiyiping"},"content":"            for (Task t : tasks) {"},{"lineNumber":26,"author":{"gitId":"oeiyiping"},"content":"                bufferedWriter.write(t.toLog() + \"\\n\");"},{"lineNumber":27,"author":{"gitId":"oeiyiping"},"content":"            }"},{"lineNumber":28,"author":{"gitId":"oeiyiping"},"content":""},{"lineNumber":29,"author":{"gitId":"oeiyiping"},"content":"            bufferedWriter.flush();"},{"lineNumber":30,"author":{"gitId":"oeiyiping"},"content":""},{"lineNumber":31,"author":{"gitId":"oeiyiping"},"content":"        } catch (IOException e) {"},{"lineNumber":32,"author":{"gitId":"oeiyiping"},"content":"            System.out.println(e);"},{"lineNumber":33,"author":{"gitId":"oeiyiping"},"content":"        }"},{"lineNumber":34,"author":{"gitId":"oeiyiping"},"content":"    }"},{"lineNumber":35,"author":{"gitId":"oeiyiping"},"content":""},{"lineNumber":36,"author":{"gitId":"oeiyiping"},"content":"    /**"},{"lineNumber":37,"author":{"gitId":"oeiyiping"},"content":"     * Builds and return an ArrayList of Tasks from the saved tasks in the save file \"duke_saved_tasks\" in the same"},{"lineNumber":38,"author":{"gitId":"oeiyiping"},"content":"     * directory."},{"lineNumber":39,"author":{"gitId":"oeiyiping"},"content":"     *"},{"lineNumber":40,"author":{"gitId":"oeiyiping"},"content":"     * @return ArrayList of Tasks from the saved tasks in the save file \"duke_saved_tasks\""},{"lineNumber":41,"author":{"gitId":"oeiyiping"},"content":"     * @throws DukeException Thrown exception when an error occurs during loading, according to the reason specified in"},{"lineNumber":42,"author":{"gitId":"oeiyiping"},"content":"     * error body."},{"lineNumber":43,"author":{"gitId":"oeiyiping"},"content":"     */"},{"lineNumber":44,"author":{"gitId":"oeiyiping"},"content":"    public ArrayList\u003cTask\u003e load() throws DukeException {"},{"lineNumber":45,"author":{"gitId":"oeiyiping"},"content":"        try {"},{"lineNumber":46,"author":{"gitId":"oeiyiping"},"content":"            File file \u003d new File(\"duke_saved_tasks\");"},{"lineNumber":47,"author":{"gitId":"oeiyiping"},"content":"            boolean isAlreadyPresent \u003d !file.createNewFile();"},{"lineNumber":48,"author":{"gitId":"oeiyiping"},"content":""},{"lineNumber":49,"author":{"gitId":"oeiyiping"},"content":"            if (isAlreadyPresent) {"},{"lineNumber":50,"author":{"gitId":"oeiyiping"},"content":"                FileReader fileReader \u003d new FileReader(file);"},{"lineNumber":51,"author":{"gitId":"oeiyiping"},"content":"                BufferedReader bufferedReader \u003d new BufferedReader(fileReader);"},{"lineNumber":52,"author":{"gitId":"oeiyiping"},"content":"                String currLine \u003d bufferedReader.readLine();"},{"lineNumber":53,"author":{"gitId":"oeiyiping"},"content":"                ArrayList\u003cTask\u003e ret \u003d new ArrayList\u003c\u003e();"},{"lineNumber":54,"author":{"gitId":"oeiyiping"},"content":""},{"lineNumber":55,"author":{"gitId":"oeiyiping"},"content":"                while (currLine !\u003d null) {"},{"lineNumber":56,"author":{"gitId":"oeiyiping"},"content":"                    String[] split \u003d currLine.split(\" \\\\| \");"},{"lineNumber":57,"author":{"gitId":"oeiyiping"},"content":"                    String icon \u003d split[0];"},{"lineNumber":58,"author":{"gitId":"oeiyiping"},"content":"                    String isDone \u003d split[1];"},{"lineNumber":59,"author":{"gitId":"oeiyiping"},"content":"                    String description \u003d split[2];"},{"lineNumber":60,"author":{"gitId":"oeiyiping"},"content":""},{"lineNumber":61,"author":{"gitId":"oeiyiping"},"content":"                    switch (icon) {"},{"lineNumber":62,"author":{"gitId":"oeiyiping"},"content":"                    case \"D\":"},{"lineNumber":63,"author":{"gitId":"oeiyiping"},"content":"                        Deadline deadline \u003d new Deadline(description, LocalDateTime.parse(split[3]));"},{"lineNumber":64,"author":{"gitId":"oeiyiping"},"content":"                        if (isDone.equals(\"T\")) {"},{"lineNumber":65,"author":{"gitId":"oeiyiping"},"content":"                            deadline.setDone();"},{"lineNumber":66,"author":{"gitId":"oeiyiping"},"content":"                        }"},{"lineNumber":67,"author":{"gitId":"oeiyiping"},"content":"                        ret.add(deadline);"},{"lineNumber":68,"author":{"gitId":"oeiyiping"},"content":"                        break;"},{"lineNumber":69,"author":{"gitId":"oeiyiping"},"content":""},{"lineNumber":70,"author":{"gitId":"oeiyiping"},"content":"                    case \"E\":"},{"lineNumber":71,"author":{"gitId":"oeiyiping"},"content":"                        Event event \u003d new Event(description, LocalDateTime.parse(split[3]));"},{"lineNumber":72,"author":{"gitId":"oeiyiping"},"content":"                        if (isDone.equals(\"T\")) {"},{"lineNumber":73,"author":{"gitId":"oeiyiping"},"content":"                            event.setDone();"},{"lineNumber":74,"author":{"gitId":"oeiyiping"},"content":"                        }"},{"lineNumber":75,"author":{"gitId":"oeiyiping"},"content":"                        ret.add(event);"},{"lineNumber":76,"author":{"gitId":"oeiyiping"},"content":"                        break;"},{"lineNumber":77,"author":{"gitId":"oeiyiping"},"content":""},{"lineNumber":78,"author":{"gitId":"oeiyiping"},"content":"                    case \"T\":"},{"lineNumber":79,"author":{"gitId":"oeiyiping"},"content":"                        ToDo toDo \u003d new ToDo(description);"},{"lineNumber":80,"author":{"gitId":"oeiyiping"},"content":"                        if (isDone.equals(\"T\")) {"},{"lineNumber":81,"author":{"gitId":"oeiyiping"},"content":"                            toDo.setDone();"},{"lineNumber":82,"author":{"gitId":"oeiyiping"},"content":"                        }"},{"lineNumber":83,"author":{"gitId":"oeiyiping"},"content":"                        ret.add(toDo);"},{"lineNumber":84,"author":{"gitId":"oeiyiping"},"content":"                        break;"},{"lineNumber":85,"author":{"gitId":"oeiyiping"},"content":""},{"lineNumber":86,"author":{"gitId":"oeiyiping"},"content":"                    default:"},{"lineNumber":87,"author":{"gitId":"oeiyiping"},"content":"                        throw new DukeException(\"Wrong save format, unable to load.\");"},{"lineNumber":88,"author":{"gitId":"oeiyiping"},"content":"                    }"},{"lineNumber":89,"author":{"gitId":"oeiyiping"},"content":""},{"lineNumber":90,"author":{"gitId":"oeiyiping"},"content":"                    currLine \u003d bufferedReader.readLine();"},{"lineNumber":91,"author":{"gitId":"oeiyiping"},"content":"                }"},{"lineNumber":92,"author":{"gitId":"oeiyiping"},"content":""},{"lineNumber":93,"author":{"gitId":"oeiyiping"},"content":"                return ret;"},{"lineNumber":94,"author":{"gitId":"oeiyiping"},"content":""},{"lineNumber":95,"author":{"gitId":"oeiyiping"},"content":"            } else {"},{"lineNumber":96,"author":{"gitId":"oeiyiping"},"content":"                throw new DukeException(\"No existing save file, creating new save now.\\n\");"},{"lineNumber":97,"author":{"gitId":"oeiyiping"},"content":"            }"},{"lineNumber":98,"author":{"gitId":"oeiyiping"},"content":""},{"lineNumber":99,"author":{"gitId":"oeiyiping"},"content":"        } catch (IOException e) {"},{"lineNumber":100,"author":{"gitId":"oeiyiping"},"content":"            throw new DukeException(\"Error loading file, creating new save now.\\n\");"},{"lineNumber":101,"author":{"gitId":"oeiyiping"},"content":"        }"},{"lineNumber":102,"author":{"gitId":"oeiyiping"},"content":""},{"lineNumber":103,"author":{"gitId":"oeiyiping"},"content":"    }"},{"lineNumber":104,"author":{"gitId":"oeiyiping"},"content":"}"},{"lineNumber":105,"author":{"gitId":"oeiyiping"},"content":""}],"authorContributionMap":{"oeiyiping":105}},{"path":"src/main/java/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"oeiyiping"},"content":"public abstract class Task {"},{"lineNumber":2,"author":{"gitId":"oeiyiping"},"content":"    protected String description;"},{"lineNumber":3,"author":{"gitId":"oeiyiping"},"content":"    protected boolean isDone;"},{"lineNumber":4,"author":{"gitId":"oeiyiping"},"content":"    protected final String icon;"},{"lineNumber":5,"author":{"gitId":"oeiyiping"},"content":""},{"lineNumber":6,"author":{"gitId":"oeiyiping"},"content":"    protected Task(String description, String icon) {"},{"lineNumber":7,"author":{"gitId":"oeiyiping"},"content":"        this.description \u003d description;"},{"lineNumber":8,"author":{"gitId":"oeiyiping"},"content":"        this.icon \u003d icon;"},{"lineNumber":9,"author":{"gitId":"oeiyiping"},"content":"        isDone \u003d false;"},{"lineNumber":10,"author":{"gitId":"oeiyiping"},"content":"    }"},{"lineNumber":11,"author":{"gitId":"oeiyiping"},"content":""},{"lineNumber":12,"author":{"gitId":"oeiyiping"},"content":"    public void setDone() {"},{"lineNumber":13,"author":{"gitId":"oeiyiping"},"content":"        this.isDone \u003d true;"},{"lineNumber":14,"author":{"gitId":"oeiyiping"},"content":"    }"},{"lineNumber":15,"author":{"gitId":"oeiyiping"},"content":""},{"lineNumber":16,"author":{"gitId":"oeiyiping"},"content":"    /**"},{"lineNumber":17,"author":{"gitId":"oeiyiping"},"content":"     * Returns the String representation of the Task."},{"lineNumber":18,"author":{"gitId":"oeiyiping"},"content":"     *"},{"lineNumber":19,"author":{"gitId":"oeiyiping"},"content":"     * @return String representation of the Task."},{"lineNumber":20,"author":{"gitId":"oeiyiping"},"content":"     */"},{"lineNumber":21,"author":{"gitId":"oeiyiping"},"content":"    public String toString() {"},{"lineNumber":22,"author":{"gitId":"oeiyiping"},"content":"        String doneIcon \u003d isDone ? \"[X]\" : \"[ ]\";"},{"lineNumber":23,"author":{"gitId":"oeiyiping"},"content":"        return \"[\" + icon + \"]\" + doneIcon + \" \" + this.description;"},{"lineNumber":24,"author":{"gitId":"oeiyiping"},"content":"    }"},{"lineNumber":25,"author":{"gitId":"oeiyiping"},"content":""},{"lineNumber":26,"author":{"gitId":"oeiyiping"},"content":"    /**"},{"lineNumber":27,"author":{"gitId":"oeiyiping"},"content":"     * Returns the save format of the Task."},{"lineNumber":28,"author":{"gitId":"oeiyiping"},"content":"     * "},{"lineNumber":29,"author":{"gitId":"oeiyiping"},"content":"     * @return Save format of the Task."},{"lineNumber":30,"author":{"gitId":"oeiyiping"},"content":"     */"},{"lineNumber":31,"author":{"gitId":"oeiyiping"},"content":"    public String toLog() {"},{"lineNumber":32,"author":{"gitId":"oeiyiping"},"content":"        String doneIcon \u003d isDone ? \"T\" : \"F\";"},{"lineNumber":33,"author":{"gitId":"oeiyiping"},"content":"        return icon + \" | \" + doneIcon + \" | \" + this.description;"},{"lineNumber":34,"author":{"gitId":"oeiyiping"},"content":"    }"},{"lineNumber":35,"author":{"gitId":"oeiyiping"},"content":""},{"lineNumber":36,"author":{"gitId":"oeiyiping"},"content":"    public String getDescription() {"},{"lineNumber":37,"author":{"gitId":"oeiyiping"},"content":"        return description;"},{"lineNumber":38,"author":{"gitId":"oeiyiping"},"content":"    }"},{"lineNumber":39,"author":{"gitId":"oeiyiping"},"content":"}"}],"authorContributionMap":{"oeiyiping":39}},{"path":"src/main/java/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"oeiyiping"},"content":"import java.util.ArrayList;"},{"lineNumber":2,"author":{"gitId":"oeiyiping"},"content":""},{"lineNumber":3,"author":{"gitId":"oeiyiping"},"content":"public class TaskList {"},{"lineNumber":4,"author":{"gitId":"oeiyiping"},"content":"    private final ArrayList\u003cTask\u003e tasks;"},{"lineNumber":5,"author":{"gitId":"oeiyiping"},"content":""},{"lineNumber":6,"author":{"gitId":"oeiyiping"},"content":"    public TaskList() {"},{"lineNumber":7,"author":{"gitId":"oeiyiping"},"content":"        this.tasks \u003d new ArrayList\u003c\u003e();"},{"lineNumber":8,"author":{"gitId":"oeiyiping"},"content":"    }"},{"lineNumber":9,"author":{"gitId":"oeiyiping"},"content":""},{"lineNumber":10,"author":{"gitId":"oeiyiping"},"content":"    public TaskList(ArrayList\u003cTask\u003e tasks) {"},{"lineNumber":11,"author":{"gitId":"oeiyiping"},"content":"        this.tasks \u003d tasks;"},{"lineNumber":12,"author":{"gitId":"oeiyiping"},"content":"    }"},{"lineNumber":13,"author":{"gitId":"oeiyiping"},"content":""},{"lineNumber":14,"author":{"gitId":"oeiyiping"},"content":"    public void addTask(Task task) {"},{"lineNumber":15,"author":{"gitId":"oeiyiping"},"content":"        tasks.add(task);"},{"lineNumber":16,"author":{"gitId":"oeiyiping"},"content":"    }"},{"lineNumber":17,"author":{"gitId":"oeiyiping"},"content":""},{"lineNumber":18,"author":{"gitId":"oeiyiping"},"content":"    /**"},{"lineNumber":19,"author":{"gitId":"oeiyiping"},"content":"     * Removes the task specified by the input index from the TaskList."},{"lineNumber":20,"author":{"gitId":"oeiyiping"},"content":"     *"},{"lineNumber":21,"author":{"gitId":"oeiyiping"},"content":"     * @param index Index of the file to be deleted."},{"lineNumber":22,"author":{"gitId":"oeiyiping"},"content":"     * @return The deleted task."},{"lineNumber":23,"author":{"gitId":"oeiyiping"},"content":"     */"},{"lineNumber":24,"author":{"gitId":"oeiyiping"},"content":"    public Task deleteTask(int index) {"},{"lineNumber":25,"author":{"gitId":"oeiyiping"},"content":"        Task task \u003d tasks.get(index - 1);"},{"lineNumber":26,"author":{"gitId":"oeiyiping"},"content":"        tasks.remove(index - 1);"},{"lineNumber":27,"author":{"gitId":"oeiyiping"},"content":""},{"lineNumber":28,"author":{"gitId":"oeiyiping"},"content":"        return task;"},{"lineNumber":29,"author":{"gitId":"oeiyiping"},"content":"    }"},{"lineNumber":30,"author":{"gitId":"oeiyiping"},"content":""},{"lineNumber":31,"author":{"gitId":"oeiyiping"},"content":"    /**"},{"lineNumber":32,"author":{"gitId":"oeiyiping"},"content":"     * Sets the task specified by the input index from the TaskList as done."},{"lineNumber":33,"author":{"gitId":"oeiyiping"},"content":"     *"},{"lineNumber":34,"author":{"gitId":"oeiyiping"},"content":"     * @param index Index of the file to be set as done."},{"lineNumber":35,"author":{"gitId":"oeiyiping"},"content":"     * @return The done task."},{"lineNumber":36,"author":{"gitId":"oeiyiping"},"content":"     */"},{"lineNumber":37,"author":{"gitId":"oeiyiping"},"content":"    public Task doneTask(int index) {"},{"lineNumber":38,"author":{"gitId":"oeiyiping"},"content":"        Task task \u003d tasks.get(index - 1);"},{"lineNumber":39,"author":{"gitId":"oeiyiping"},"content":"        task.setDone();"},{"lineNumber":40,"author":{"gitId":"oeiyiping"},"content":""},{"lineNumber":41,"author":{"gitId":"oeiyiping"},"content":"        return task;"},{"lineNumber":42,"author":{"gitId":"oeiyiping"},"content":"    }"},{"lineNumber":43,"author":{"gitId":"oeiyiping"},"content":""},{"lineNumber":44,"author":{"gitId":"oeiyiping"},"content":"    /**"},{"lineNumber":45,"author":{"gitId":"oeiyiping"},"content":"     * Prints all the tasks in the TaskList."},{"lineNumber":46,"author":{"gitId":"oeiyiping"},"content":"     */"},{"lineNumber":47,"author":{"gitId":"oeiyiping"},"content":"    public void printTasks() {"},{"lineNumber":48,"author":{"gitId":"oeiyiping"},"content":"        if (tasks.isEmpty()) {"},{"lineNumber":49,"author":{"gitId":"oeiyiping"},"content":"            System.out.println(\"It is empty boss.\");"},{"lineNumber":50,"author":{"gitId":"oeiyiping"},"content":"        } else {"},{"lineNumber":51,"author":{"gitId":"oeiyiping"},"content":"            System.out.println(\"You have \" + tasks.size() + \" task(s) in the list:\");"},{"lineNumber":52,"author":{"gitId":"oeiyiping"},"content":""},{"lineNumber":53,"author":{"gitId":"oeiyiping"},"content":"            int i \u003d 1;"},{"lineNumber":54,"author":{"gitId":"oeiyiping"},"content":"            for (Task task : tasks) {"},{"lineNumber":55,"author":{"gitId":"oeiyiping"},"content":"                System.out.println(i + \". \" + task);"},{"lineNumber":56,"author":{"gitId":"oeiyiping"},"content":"                i++;"},{"lineNumber":57,"author":{"gitId":"oeiyiping"},"content":"            }"},{"lineNumber":58,"author":{"gitId":"oeiyiping"},"content":"        }"},{"lineNumber":59,"author":{"gitId":"oeiyiping"},"content":"    }"},{"lineNumber":60,"author":{"gitId":"oeiyiping"},"content":""},{"lineNumber":61,"author":{"gitId":"oeiyiping"},"content":"    /**"},{"lineNumber":62,"author":{"gitId":"oeiyiping"},"content":"     * Prints all the Tasks with String representation that contains the query term."},{"lineNumber":63,"author":{"gitId":"oeiyiping"},"content":"     * @param query The query term that the command string must include."},{"lineNumber":64,"author":{"gitId":"oeiyiping"},"content":"     */"},{"lineNumber":65,"author":{"gitId":"oeiyiping"},"content":"    public void findTasks(String query) {"},{"lineNumber":66,"author":{"gitId":"oeiyiping"},"content":"        if (tasks.isEmpty()) {"},{"lineNumber":67,"author":{"gitId":"oeiyiping"},"content":"            System.out.println(\"Oops, the task list is empty boss, there\u0027s nothing to find!\");"},{"lineNumber":68,"author":{"gitId":"oeiyiping"},"content":"        } else {"},{"lineNumber":69,"author":{"gitId":"oeiyiping"},"content":"            System.out.println(\"Here you go boss: \");"},{"lineNumber":70,"author":{"gitId":"oeiyiping"},"content":""},{"lineNumber":71,"author":{"gitId":"oeiyiping"},"content":"            int i \u003d 1;"},{"lineNumber":72,"author":{"gitId":"oeiyiping"},"content":"            for (Task task : tasks) {"},{"lineNumber":73,"author":{"gitId":"oeiyiping"},"content":"                String string \u003d task.toString();"},{"lineNumber":74,"author":{"gitId":"oeiyiping"},"content":"                if (string.contains(query)) {"},{"lineNumber":75,"author":{"gitId":"oeiyiping"},"content":"                    System.out.println(i + \". \" + string);"},{"lineNumber":76,"author":{"gitId":"oeiyiping"},"content":"                }"},{"lineNumber":77,"author":{"gitId":"oeiyiping"},"content":"                i++;"},{"lineNumber":78,"author":{"gitId":"oeiyiping"},"content":"            }"},{"lineNumber":79,"author":{"gitId":"oeiyiping"},"content":"        }"},{"lineNumber":80,"author":{"gitId":"oeiyiping"},"content":"    }"},{"lineNumber":81,"author":{"gitId":"oeiyiping"},"content":""},{"lineNumber":82,"author":{"gitId":"oeiyiping"},"content":"    public ArrayList\u003cTask\u003e getTasks() {"},{"lineNumber":83,"author":{"gitId":"oeiyiping"},"content":"        return tasks;"},{"lineNumber":84,"author":{"gitId":"oeiyiping"},"content":"    }"},{"lineNumber":85,"author":{"gitId":"oeiyiping"},"content":"}"}],"authorContributionMap":{"oeiyiping":85}},{"path":"src/main/java/ToDo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"oeiyiping"},"content":"public class ToDo extends Task {"},{"lineNumber":2,"author":{"gitId":"oeiyiping"},"content":"    public ToDo(String description) {"},{"lineNumber":3,"author":{"gitId":"oeiyiping"},"content":"        super(description, \"T\");"},{"lineNumber":4,"author":{"gitId":"oeiyiping"},"content":"    }"},{"lineNumber":5,"author":{"gitId":"oeiyiping"},"content":"}"},{"lineNumber":6,"author":{"gitId":"oeiyiping"},"content":""}],"authorContributionMap":{"oeiyiping":6}},{"path":"src/main/java/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"oeiyiping"},"content":"import java.util.Scanner;"},{"lineNumber":2,"author":{"gitId":"oeiyiping"},"content":""},{"lineNumber":3,"author":{"gitId":"oeiyiping"},"content":"public class Ui {"},{"lineNumber":4,"author":{"gitId":"oeiyiping"},"content":"    private final Scanner scanner;"},{"lineNumber":5,"author":{"gitId":"oeiyiping"},"content":""},{"lineNumber":6,"author":{"gitId":"oeiyiping"},"content":"    public Ui() {"},{"lineNumber":7,"author":{"gitId":"oeiyiping"},"content":"        scanner \u003d new Scanner(System.in);"},{"lineNumber":8,"author":{"gitId":"oeiyiping"},"content":"    }"},{"lineNumber":9,"author":{"gitId":"oeiyiping"},"content":""},{"lineNumber":10,"author":{"gitId":"oeiyiping"},"content":"    public String readInput() {"},{"lineNumber":11,"author":{"gitId":"oeiyiping"},"content":"        return scanner.nextLine();"},{"lineNumber":12,"author":{"gitId":"oeiyiping"},"content":"    }"},{"lineNumber":13,"author":{"gitId":"oeiyiping"},"content":""},{"lineNumber":14,"author":{"gitId":"oeiyiping"},"content":"    /**"},{"lineNumber":15,"author":{"gitId":"oeiyiping"},"content":"     * Prints the greeting message."},{"lineNumber":16,"author":{"gitId":"oeiyiping"},"content":"     */"},{"lineNumber":17,"author":{"gitId":"oeiyiping"},"content":"    public void printGreetings() {"},{"lineNumber":18,"author":{"gitId":"oeiyiping"},"content":"        String logo \u003d \"$$    $$                                $$\\n\""},{"lineNumber":19,"author":{"gitId":"oeiyiping"},"content":"                    + \"$$    $$                                $$\\n\""},{"lineNumber":20,"author":{"gitId":"oeiyiping"},"content":"                    + \"$$    $$   $$$$$$   $$$$$$$    $$$$$$$  $$$$$$$   $$$$$$ $$$$    $$$$$$   $$$$$$$\\n\""},{"lineNumber":21,"author":{"gitId":"oeiyiping"},"content":"                    + \"$$$$$$$$  $$    $$  $$    $$  $$        $$    $$  $$   $$   $$        $$  $$    $$\\n\""},{"lineNumber":22,"author":{"gitId":"oeiyiping"},"content":"                    + \"$$    $$  $$$$$$$$  $$    $$  $$        $$    $$  $$   $$   $$   $$$$$$$  $$    $$\\n\""},{"lineNumber":23,"author":{"gitId":"oeiyiping"},"content":"                    + \"$$    $$  $$        $$    $$  $$        $$    $$  $$   $$   $$  $$    $$  $$    $$\\n\""},{"lineNumber":24,"author":{"gitId":"oeiyiping"},"content":"                    + \"$$    $$   $$$$$$$  $$    $$   $$$$$$$  $$    $$  $$   $$   $$   $$$$$$$  $$    $$\\n\";"},{"lineNumber":25,"author":{"gitId":"oeiyiping"},"content":""},{"lineNumber":26,"author":{"gitId":"oeiyiping"},"content":"        System.out.println(\"Hello from\\n\" + logo);"},{"lineNumber":27,"author":{"gitId":"oeiyiping"},"content":"        System.out.println(\"Greetings Boss, good to see you.\\n\" + \"What can I do for you?\\n\");"},{"lineNumber":28,"author":{"gitId":"oeiyiping"},"content":"    }"},{"lineNumber":29,"author":{"gitId":"oeiyiping"},"content":""},{"lineNumber":30,"author":{"gitId":"oeiyiping"},"content":"    public void printInputPrompt() {"},{"lineNumber":31,"author":{"gitId":"oeiyiping"},"content":"        System.out.println(\"\\nHit me up boss.\");"},{"lineNumber":32,"author":{"gitId":"oeiyiping"},"content":"    }"},{"lineNumber":33,"author":{"gitId":"oeiyiping"},"content":""},{"lineNumber":34,"author":{"gitId":"oeiyiping"},"content":"    public void printCommand(Command command) {"},{"lineNumber":35,"author":{"gitId":"oeiyiping"},"content":"        System.out.println(command.toDukeOutput());"},{"lineNumber":36,"author":{"gitId":"oeiyiping"},"content":"    }"},{"lineNumber":37,"author":{"gitId":"oeiyiping"},"content":""},{"lineNumber":38,"author":{"gitId":"oeiyiping"},"content":"    public void printTask(Task task) {"},{"lineNumber":39,"author":{"gitId":"oeiyiping"},"content":"        System.out.println(task);"},{"lineNumber":40,"author":{"gitId":"oeiyiping"},"content":"    }"},{"lineNumber":41,"author":{"gitId":"oeiyiping"},"content":""},{"lineNumber":42,"author":{"gitId":"oeiyiping"},"content":"    /**"},{"lineNumber":43,"author":{"gitId":"oeiyiping"},"content":"     * Prints the error message of the input exception."},{"lineNumber":44,"author":{"gitId":"oeiyiping"},"content":"     *"},{"lineNumber":45,"author":{"gitId":"oeiyiping"},"content":"     * @param e The caught error to be printed."},{"lineNumber":46,"author":{"gitId":"oeiyiping"},"content":"     */"},{"lineNumber":47,"author":{"gitId":"oeiyiping"},"content":"    public void printErrorMessage(Exception e) {"},{"lineNumber":48,"author":{"gitId":"oeiyiping"},"content":"        System.out.println(\"Sorry boss something went wrong: \");"},{"lineNumber":49,"author":{"gitId":"oeiyiping"},"content":"        System.out.println(e.getMessage());"},{"lineNumber":50,"author":{"gitId":"oeiyiping"},"content":"    }"},{"lineNumber":51,"author":{"gitId":"oeiyiping"},"content":"}"}],"authorContributionMap":{"oeiyiping":51}},{"path":"src/test/java/DeadlineTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"oeiyiping"},"content":"import org.junit.jupiter.api.Assertions;"},{"lineNumber":2,"author":{"gitId":"oeiyiping"},"content":"import org.junit.jupiter.api.Test;"},{"lineNumber":3,"author":{"gitId":"oeiyiping"},"content":""},{"lineNumber":4,"author":{"gitId":"oeiyiping"},"content":"import java.time.LocalDateTime;"},{"lineNumber":5,"author":{"gitId":"oeiyiping"},"content":""},{"lineNumber":6,"author":{"gitId":"oeiyiping"},"content":"public class DeadlineTest {"},{"lineNumber":7,"author":{"gitId":"oeiyiping"},"content":"    @Test"},{"lineNumber":8,"author":{"gitId":"oeiyiping"},"content":"    public void testInitialization() {"},{"lineNumber":9,"author":{"gitId":"oeiyiping"},"content":"        Deadline deadline \u003d new Deadline(\"description\", LocalDateTime.parse(\"2021-01-01T00:00\"));"},{"lineNumber":10,"author":{"gitId":"oeiyiping"},"content":"        Assertions.assertEquals(\"[D][ ] description (by: 01 Jan 2021, 00:00)\", deadline.toString());"},{"lineNumber":11,"author":{"gitId":"oeiyiping"},"content":""},{"lineNumber":12,"author":{"gitId":"oeiyiping"},"content":"        Deadline deadline2 \u003d new Deadline(\"description with space\", LocalDateTime.parse(\"2021-01-01T00:00\"));"},{"lineNumber":13,"author":{"gitId":"oeiyiping"},"content":"        Assertions.assertEquals(\"[D][ ] description with space (by: 01 Jan 2021, 00:00)\", deadline2.toString());"},{"lineNumber":14,"author":{"gitId":"oeiyiping"},"content":"    }"},{"lineNumber":15,"author":{"gitId":"oeiyiping"},"content":""},{"lineNumber":16,"author":{"gitId":"oeiyiping"},"content":"    @Test"},{"lineNumber":17,"author":{"gitId":"oeiyiping"},"content":"    public void testDone() {"},{"lineNumber":18,"author":{"gitId":"oeiyiping"},"content":"        Deadline deadline \u003d new Deadline(\"description\", LocalDateTime.parse(\"2021-01-01T00:00\"));"},{"lineNumber":19,"author":{"gitId":"oeiyiping"},"content":"        deadline.setDone();"},{"lineNumber":20,"author":{"gitId":"oeiyiping"},"content":"        Assertions.assertEquals(\"[D][X] description (by: 01 Jan 2021, 00:00)\", deadline.toString());"},{"lineNumber":21,"author":{"gitId":"oeiyiping"},"content":"    }"},{"lineNumber":22,"author":{"gitId":"oeiyiping"},"content":"}"}],"authorContributionMap":{"oeiyiping":22}},{"path":"src/test/java/EventTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"oeiyiping"},"content":"import org.junit.Test;"},{"lineNumber":2,"author":{"gitId":"oeiyiping"},"content":"import org.junit.jupiter.api.Assertions;"},{"lineNumber":3,"author":{"gitId":"oeiyiping"},"content":""},{"lineNumber":4,"author":{"gitId":"oeiyiping"},"content":"import java.time.LocalDateTime;"},{"lineNumber":5,"author":{"gitId":"oeiyiping"},"content":""},{"lineNumber":6,"author":{"gitId":"oeiyiping"},"content":"public class EventTest {"},{"lineNumber":7,"author":{"gitId":"oeiyiping"},"content":"    @Test"},{"lineNumber":8,"author":{"gitId":"oeiyiping"},"content":"    public void testInitialization() {"},{"lineNumber":9,"author":{"gitId":"oeiyiping"},"content":"        Event event \u003d new Event(\"description\", LocalDateTime.parse(\"2021-01-01T00:00\"));"},{"lineNumber":10,"author":{"gitId":"oeiyiping"},"content":"        Assertions.assertEquals(\"[E][ ] description (at: 01 Jan 2021, 00:00)\", event.toString());"},{"lineNumber":11,"author":{"gitId":"oeiyiping"},"content":""},{"lineNumber":12,"author":{"gitId":"oeiyiping"},"content":"        Event event2 \u003d new Event(\"description with space\", LocalDateTime.parse(\"2021-01-01T00:00\"));"},{"lineNumber":13,"author":{"gitId":"oeiyiping"},"content":"        Assertions.assertEquals(\"[E][ ] description with space (at: 01 Jan 2021, 00:00)\", event2.toString());"},{"lineNumber":14,"author":{"gitId":"oeiyiping"},"content":"    }"},{"lineNumber":15,"author":{"gitId":"oeiyiping"},"content":""},{"lineNumber":16,"author":{"gitId":"oeiyiping"},"content":"    @Test"},{"lineNumber":17,"author":{"gitId":"oeiyiping"},"content":"    public void testDone() {"},{"lineNumber":18,"author":{"gitId":"oeiyiping"},"content":"        Event event \u003d new Event(\"description\", LocalDateTime.parse(\"2021-01-01T00:00\"));"},{"lineNumber":19,"author":{"gitId":"oeiyiping"},"content":"        event.setDone();"},{"lineNumber":20,"author":{"gitId":"oeiyiping"},"content":"        Assertions.assertEquals(\"[E][X] description (at: 01 Jan 2021, 00:00)\", event.toString());"},{"lineNumber":21,"author":{"gitId":"oeiyiping"},"content":"    }"},{"lineNumber":22,"author":{"gitId":"oeiyiping"},"content":"}"}],"authorContributionMap":{"oeiyiping":22}},{"path":"src/test/java/TaskListTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"oeiyiping"},"content":"import org.junit.jupiter.api.AfterEach;"},{"lineNumber":2,"author":{"gitId":"oeiyiping"},"content":"import org.junit.jupiter.api.Assertions;"},{"lineNumber":3,"author":{"gitId":"oeiyiping"},"content":"import org.junit.jupiter.api.BeforeEach;"},{"lineNumber":4,"author":{"gitId":"oeiyiping"},"content":"import org.junit.jupiter.api.Test;"},{"lineNumber":5,"author":{"gitId":"oeiyiping"},"content":""},{"lineNumber":6,"author":{"gitId":"oeiyiping"},"content":"import java.io.ByteArrayOutputStream;"},{"lineNumber":7,"author":{"gitId":"oeiyiping"},"content":"import java.io.PrintStream;"},{"lineNumber":8,"author":{"gitId":"oeiyiping"},"content":"import java.util.ArrayList;"},{"lineNumber":9,"author":{"gitId":"oeiyiping"},"content":""},{"lineNumber":10,"author":{"gitId":"oeiyiping"},"content":"public class TaskListTest {"},{"lineNumber":11,"author":{"gitId":"oeiyiping"},"content":"    private final PrintStream standardOut \u003d System.out;"},{"lineNumber":12,"author":{"gitId":"oeiyiping"},"content":"    private final ByteArrayOutputStream outputStreamCaptor \u003d new ByteArrayOutputStream();"},{"lineNumber":13,"author":{"gitId":"oeiyiping"},"content":""},{"lineNumber":14,"author":{"gitId":"oeiyiping"},"content":"    @BeforeEach"},{"lineNumber":15,"author":{"gitId":"oeiyiping"},"content":"    public void setUp() {"},{"lineNumber":16,"author":{"gitId":"oeiyiping"},"content":"        System.setOut(new PrintStream(outputStreamCaptor));"},{"lineNumber":17,"author":{"gitId":"oeiyiping"},"content":"    }"},{"lineNumber":18,"author":{"gitId":"oeiyiping"},"content":""},{"lineNumber":19,"author":{"gitId":"oeiyiping"},"content":"    @AfterEach"},{"lineNumber":20,"author":{"gitId":"oeiyiping"},"content":"    public void tearDown() {"},{"lineNumber":21,"author":{"gitId":"oeiyiping"},"content":"        System.setOut(standardOut);"},{"lineNumber":22,"author":{"gitId":"oeiyiping"},"content":"    }"},{"lineNumber":23,"author":{"gitId":"oeiyiping"},"content":""},{"lineNumber":24,"author":{"gitId":"oeiyiping"},"content":"    @Test"},{"lineNumber":25,"author":{"gitId":"oeiyiping"},"content":"    public void testInitialization() {"},{"lineNumber":26,"author":{"gitId":"oeiyiping"},"content":"        TaskList tasks \u003d new TaskList();"},{"lineNumber":27,"author":{"gitId":"oeiyiping"},"content":"        ArrayList\u003cTask\u003e expected \u003d new ArrayList\u003c\u003e();"},{"lineNumber":28,"author":{"gitId":"oeiyiping"},"content":"        Assertions.assertEquals(expected, tasks.getTasks());"},{"lineNumber":29,"author":{"gitId":"oeiyiping"},"content":"    }"},{"lineNumber":30,"author":{"gitId":"oeiyiping"},"content":""},{"lineNumber":31,"author":{"gitId":"oeiyiping"},"content":"    @Test"},{"lineNumber":32,"author":{"gitId":"oeiyiping"},"content":"    public void testAddAndDelete() {"},{"lineNumber":33,"author":{"gitId":"oeiyiping"},"content":"        TaskList tasks \u003d new TaskList();"},{"lineNumber":34,"author":{"gitId":"oeiyiping"},"content":"        ArrayList\u003cTask\u003e expected \u003d new ArrayList\u003c\u003e();"},{"lineNumber":35,"author":{"gitId":"oeiyiping"},"content":""},{"lineNumber":36,"author":{"gitId":"oeiyiping"},"content":"        // test case 1: test add"},{"lineNumber":37,"author":{"gitId":"oeiyiping"},"content":"        tasks.addTask(new ToDo(\"description\"));"},{"lineNumber":38,"author":{"gitId":"oeiyiping"},"content":"        expected.add(new ToDo(\"description\"));"},{"lineNumber":39,"author":{"gitId":"oeiyiping"},"content":"        tasks.addTask(new ToDo(\"description 2\"));"},{"lineNumber":40,"author":{"gitId":"oeiyiping"},"content":"        expected.add(new ToDo(\"description 2\"));"},{"lineNumber":41,"author":{"gitId":"oeiyiping"},"content":"        Assertions.assertEquals(expected.toString(), tasks.getTasks().toString());"},{"lineNumber":42,"author":{"gitId":"oeiyiping"},"content":""},{"lineNumber":43,"author":{"gitId":"oeiyiping"},"content":"        // test case 2: test delete"},{"lineNumber":44,"author":{"gitId":"oeiyiping"},"content":"        tasks.deleteTask(1);"},{"lineNumber":45,"author":{"gitId":"oeiyiping"},"content":"        expected.remove(0);"},{"lineNumber":46,"author":{"gitId":"oeiyiping"},"content":"        Assertions.assertEquals(expected.toString(), tasks.getTasks().toString());"},{"lineNumber":47,"author":{"gitId":"oeiyiping"},"content":"    }"},{"lineNumber":48,"author":{"gitId":"oeiyiping"},"content":""},{"lineNumber":49,"author":{"gitId":"oeiyiping"},"content":"    @Test"},{"lineNumber":50,"author":{"gitId":"oeiyiping"},"content":"    public void testDone() {"},{"lineNumber":51,"author":{"gitId":"oeiyiping"},"content":"        TaskList tasks \u003d new TaskList();"},{"lineNumber":52,"author":{"gitId":"oeiyiping"},"content":""},{"lineNumber":53,"author":{"gitId":"oeiyiping"},"content":"        tasks.addTask(new ToDo(\"description\"));"},{"lineNumber":54,"author":{"gitId":"oeiyiping"},"content":"        tasks.doneTask(1);"},{"lineNumber":55,"author":{"gitId":"oeiyiping"},"content":""},{"lineNumber":56,"author":{"gitId":"oeiyiping"},"content":"        Assertions.assertEquals(\"[[T][X] description]\", tasks.getTasks().toString());"},{"lineNumber":57,"author":{"gitId":"oeiyiping"},"content":"    }"},{"lineNumber":58,"author":{"gitId":"oeiyiping"},"content":""},{"lineNumber":59,"author":{"gitId":"oeiyiping"},"content":"    @Test"},{"lineNumber":60,"author":{"gitId":"oeiyiping"},"content":"    public void testList() {"},{"lineNumber":61,"author":{"gitId":"oeiyiping"},"content":"        TaskList tasks \u003d new TaskList();"},{"lineNumber":62,"author":{"gitId":"oeiyiping"},"content":"        tasks.addTask(new ToDo(\"description\"));"},{"lineNumber":63,"author":{"gitId":"oeiyiping"},"content":"        tasks.addTask(new ToDo(\"description 2\"));"},{"lineNumber":64,"author":{"gitId":"oeiyiping"},"content":"        String expected \u003d \"You have 2 task(s) in the list:\\r\\n\" +"},{"lineNumber":65,"author":{"gitId":"oeiyiping"},"content":"        \"1. [T][ ] description\\r\\n\" +"},{"lineNumber":66,"author":{"gitId":"oeiyiping"},"content":"        \"2. [T][ ] description 2\";"},{"lineNumber":67,"author":{"gitId":"oeiyiping"},"content":"        tasks.printTasks();"},{"lineNumber":68,"author":{"gitId":"oeiyiping"},"content":"        Assertions.assertEquals(expected, outputStreamCaptor.toString().trim());"},{"lineNumber":69,"author":{"gitId":"oeiyiping"},"content":"    }"},{"lineNumber":70,"author":{"gitId":"oeiyiping"},"content":""},{"lineNumber":71,"author":{"gitId":"oeiyiping"},"content":"    @Test"},{"lineNumber":72,"author":{"gitId":"oeiyiping"},"content":"    public void testFind() {"},{"lineNumber":73,"author":{"gitId":"oeiyiping"},"content":"        TaskList tasks \u003d new TaskList();"},{"lineNumber":74,"author":{"gitId":"oeiyiping"},"content":"        tasks.addTask(new ToDo(\"description\"));"},{"lineNumber":75,"author":{"gitId":"oeiyiping"},"content":"        tasks.addTask(new ToDo(\"description 2\"));"},{"lineNumber":76,"author":{"gitId":"oeiyiping"},"content":"        String expected \u003d \"Here you go boss: \\r\\n\" +"},{"lineNumber":77,"author":{"gitId":"oeiyiping"},"content":"                \"2. [T][ ] description 2\";"},{"lineNumber":78,"author":{"gitId":"oeiyiping"},"content":"        tasks.findTasks(\"2\");"},{"lineNumber":79,"author":{"gitId":"oeiyiping"},"content":"        Assertions.assertEquals(expected, outputStreamCaptor.toString().trim());"},{"lineNumber":80,"author":{"gitId":"oeiyiping"},"content":"    }"},{"lineNumber":81,"author":{"gitId":"oeiyiping"},"content":"}"}],"authorContributionMap":{"oeiyiping":81}},{"path":"src/test/java/ToDoTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"oeiyiping"},"content":"import org.junit.Test;"},{"lineNumber":2,"author":{"gitId":"oeiyiping"},"content":"import org.junit.jupiter.api.Assertions;"},{"lineNumber":3,"author":{"gitId":"oeiyiping"},"content":""},{"lineNumber":4,"author":{"gitId":"oeiyiping"},"content":"public class ToDoTest {"},{"lineNumber":5,"author":{"gitId":"oeiyiping"},"content":"    @Test"},{"lineNumber":6,"author":{"gitId":"oeiyiping"},"content":"    public void testInitialization() {"},{"lineNumber":7,"author":{"gitId":"oeiyiping"},"content":"        ToDo toDo \u003d new ToDo(\"description\");"},{"lineNumber":8,"author":{"gitId":"oeiyiping"},"content":"        Assertions.assertEquals(\"[T][ ] description\", toDo.toString());"},{"lineNumber":9,"author":{"gitId":"oeiyiping"},"content":""},{"lineNumber":10,"author":{"gitId":"oeiyiping"},"content":"        ToDo toDo2 \u003d new ToDo(\"description with space\");"},{"lineNumber":11,"author":{"gitId":"oeiyiping"},"content":"        Assertions.assertEquals(\"[T][ ] description with space\", toDo2.toString());"},{"lineNumber":12,"author":{"gitId":"oeiyiping"},"content":"    }"},{"lineNumber":13,"author":{"gitId":"oeiyiping"},"content":""},{"lineNumber":14,"author":{"gitId":"oeiyiping"},"content":"    @Test"},{"lineNumber":15,"author":{"gitId":"oeiyiping"},"content":"    public void testDone() {"},{"lineNumber":16,"author":{"gitId":"oeiyiping"},"content":"        ToDo toDo \u003d new ToDo(\"description\");"},{"lineNumber":17,"author":{"gitId":"oeiyiping"},"content":"        toDo.setDone();"},{"lineNumber":18,"author":{"gitId":"oeiyiping"},"content":"        Assertions.assertEquals(\"[T][X] description\", toDo.toString());"},{"lineNumber":19,"author":{"gitId":"oeiyiping"},"content":"    }"},{"lineNumber":20,"author":{"gitId":"oeiyiping"},"content":"}"}],"authorContributionMap":{"oeiyiping":20}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"oeiyiping"},"content":"todo buy bread"},{"lineNumber":2,"author":{"gitId":"oeiyiping"},"content":"event have breakfast /at 9am"},{"lineNumber":3,"author":{"gitId":"oeiyiping"},"content":"deadline wash the dishes /by 10am"},{"lineNumber":4,"author":{"gitId":"oeiyiping"},"content":"list"},{"lineNumber":5,"author":{"gitId":"oeiyiping"},"content":"done 2"},{"lineNumber":6,"author":{"gitId":"oeiyiping"},"content":"list"},{"lineNumber":7,"author":{"gitId":"oeiyiping"},"content":"bye"}],"authorContributionMap":{"oeiyiping":7}}]
