[{"path":"data/tasks.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"yutingzou"},"content":"T | ✘ | read"},{"lineNumber":2,"author":{"gitId":"yutingzou"},"content":"T | ✘ | coding"},{"lineNumber":3,"author":{"gitId":"yutingzou"},"content":"D | ✘ | read | Oct 25 2019 07:00 pm"},{"lineNumber":4,"author":{"gitId":"yutingzou"},"content":"D | ✘ | read | Jan 1 2020 10:00 am"},{"lineNumber":5,"author":{"gitId":"yutingzou"},"content":"D | ✘ | read | Jan 1 2020 10:00 am"}],"authorContributionMap":{"yutingzou":5}},{"path":"src/main/java/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yutingzou"},"content":"import java.text.DateFormat;"},{"lineNumber":2,"author":{"gitId":"yutingzou"},"content":"import java.text.SimpleDateFormat;"},{"lineNumber":3,"author":{"gitId":"yutingzou"},"content":"import java.time.LocalDate;"},{"lineNumber":4,"author":{"gitId":"yutingzou"},"content":"import java.time.LocalDateTime;"},{"lineNumber":5,"author":{"gitId":"yutingzou"},"content":"import java.time.format.DateTimeFormatter;"},{"lineNumber":6,"author":{"gitId":"yutingzou"},"content":"import java.time.LocalDate;"},{"lineNumber":7,"author":{"gitId":"yutingzou"},"content":"import java.util.Locale;"},{"lineNumber":8,"author":{"gitId":"yutingzou"},"content":""},{"lineNumber":9,"author":{"gitId":"yutingzou"},"content":"public class Deadline extends Task {"},{"lineNumber":10,"author":{"gitId":"yutingzou"},"content":""},{"lineNumber":11,"author":{"gitId":"yutingzou"},"content":"    private LocalDateTime by;"},{"lineNumber":12,"author":{"gitId":"yutingzou"},"content":"    private String type \u003d \"D\";"},{"lineNumber":13,"author":{"gitId":"yutingzou"},"content":""},{"lineNumber":14,"author":{"gitId":"yutingzou"},"content":"    public Deadline(String description, String by) {"},{"lineNumber":15,"author":{"gitId":"yutingzou"},"content":"        this(description, by, false);"},{"lineNumber":16,"author":{"gitId":"yutingzou"},"content":"    }"},{"lineNumber":17,"author":{"gitId":"yutingzou"},"content":""},{"lineNumber":18,"author":{"gitId":"yutingzou"},"content":"    public Deadline(String description, String by, boolean isDone) {"},{"lineNumber":19,"author":{"gitId":"yutingzou"},"content":"        super(description, isDone);"},{"lineNumber":20,"author":{"gitId":"yutingzou"},"content":"        setTime(by);"},{"lineNumber":21,"author":{"gitId":"yutingzou"},"content":"    }"},{"lineNumber":22,"author":{"gitId":"yutingzou"},"content":""},{"lineNumber":23,"author":{"gitId":"yutingzou"},"content":"    /**"},{"lineNumber":24,"author":{"gitId":"yutingzou"},"content":"     * Return the due time of a Deadline task."},{"lineNumber":25,"author":{"gitId":"yutingzou"},"content":"     *"},{"lineNumber":26,"author":{"gitId":"yutingzou"},"content":"     * @return Due time in String."},{"lineNumber":27,"author":{"gitId":"yutingzou"},"content":"     */"},{"lineNumber":28,"author":{"gitId":"yutingzou"},"content":"    public String getTime(){"},{"lineNumber":29,"author":{"gitId":"yutingzou"},"content":"        String time \u003d this.by.format(DateTimeFormatter.ofPattern(\"MMM d yyyy hh:mm a\")).replace(\"T\", \" \");"},{"lineNumber":30,"author":{"gitId":"yutingzou"},"content":"        return time;"},{"lineNumber":31,"author":{"gitId":"yutingzou"},"content":"    }"},{"lineNumber":32,"author":{"gitId":"yutingzou"},"content":""},{"lineNumber":33,"author":{"gitId":"yutingzou"},"content":"    private void setTime(String time) {"},{"lineNumber":34,"author":{"gitId":"yutingzou"},"content":"        DateTimeFormatter inputFormat \u003d DateTimeFormatter.ofPattern(\"yyyy-M-d H:mm\");"},{"lineNumber":35,"author":{"gitId":"yutingzou"},"content":"        LocalDateTime dateTime \u003d LocalDateTime.parse(time, inputFormat);"},{"lineNumber":36,"author":{"gitId":"yutingzou"},"content":"        this.by \u003d dateTime;"},{"lineNumber":37,"author":{"gitId":"yutingzou"},"content":"    }"},{"lineNumber":38,"author":{"gitId":"yutingzou"},"content":""},{"lineNumber":39,"author":{"gitId":"yutingzou"},"content":"    @Override"},{"lineNumber":40,"author":{"gitId":"yutingzou"},"content":"    public String toString() {"},{"lineNumber":41,"author":{"gitId":"yutingzou"},"content":"        String time \u003d this.getTime();"},{"lineNumber":42,"author":{"gitId":"yutingzou"},"content":"        return type + separator + super.toString() + separator + time;"},{"lineNumber":43,"author":{"gitId":"yutingzou"},"content":"    }"},{"lineNumber":44,"author":{"gitId":"yutingzou"},"content":"}"}],"authorContributionMap":{"yutingzou":44}},{"path":"src/main/java/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yutingzou"},"content":"//import java.lang.reflect.Array;"},{"lineNumber":2,"author":{"gitId":"yutingzou"},"content":"import java.io.File;"},{"lineNumber":3,"author":{"gitId":"yutingzou"},"content":"import java.io.FileNotFoundException;"},{"lineNumber":4,"author":{"gitId":"yutingzou"},"content":"import java.util.ArrayList;"},{"lineNumber":5,"author":{"gitId":"yutingzou"},"content":"import java.util.Properties;"},{"lineNumber":6,"author":{"gitId":"yutingzou"},"content":"import java.util.Scanner;"},{"lineNumber":7,"author":{"gitId":"yutingzou"},"content":""},{"lineNumber":8,"author":{"gitId":"yutingzou"},"content":""},{"lineNumber":9,"author":{"gitId":"-"},"content":"public class Duke {"},{"lineNumber":10,"author":{"gitId":"yutingzou"},"content":""},{"lineNumber":11,"author":{"gitId":"yutingzou"},"content":"    private Storage storage;"},{"lineNumber":12,"author":{"gitId":"yutingzou"},"content":"    private TaskList tasks;"},{"lineNumber":13,"author":{"gitId":"yutingzou"},"content":"    private Ui ui;"},{"lineNumber":14,"author":{"gitId":"yutingzou"},"content":"    private String filePath;"},{"lineNumber":15,"author":{"gitId":"yutingzou"},"content":""},{"lineNumber":16,"author":{"gitId":"yutingzou"},"content":"    public Duke(String filePath) throws DukeException {"},{"lineNumber":17,"author":{"gitId":"yutingzou"},"content":"        this.filePath \u003d filePath;"},{"lineNumber":18,"author":{"gitId":"yutingzou"},"content":"        this.ui \u003d new Ui();"},{"lineNumber":19,"author":{"gitId":"yutingzou"},"content":"        this.storage \u003d new Storage(filePath);"},{"lineNumber":20,"author":{"gitId":"yutingzou"},"content":"        try {"},{"lineNumber":21,"author":{"gitId":"yutingzou"},"content":"            this.tasks \u003d new TaskList(storage.load());"},{"lineNumber":22,"author":{"gitId":"yutingzou"},"content":"        } catch (DukeException e) {"},{"lineNumber":23,"author":{"gitId":"yutingzou"},"content":"            ui.showLoadingError();"},{"lineNumber":24,"author":{"gitId":"yutingzou"},"content":"            tasks \u003d new TaskList();"},{"lineNumber":25,"author":{"gitId":"yutingzou"},"content":"        }"},{"lineNumber":26,"author":{"gitId":"yutingzou"},"content":"    }"},{"lineNumber":27,"author":{"gitId":"yutingzou"},"content":""},{"lineNumber":28,"author":{"gitId":"yutingzou"},"content":"    public static void main(String[] launchArgs) throws Exception {"},{"lineNumber":29,"author":{"gitId":"yutingzou"},"content":"        new Duke(System.getProperty(\"user.dir\") + \"/data/tasks.txt\").run();"},{"lineNumber":30,"author":{"gitId":"yutingzou"},"content":"    }"},{"lineNumber":31,"author":{"gitId":"yutingzou"},"content":""},{"lineNumber":32,"author":{"gitId":"yutingzou"},"content":"    private void run() throws DukeException {"},{"lineNumber":33,"author":{"gitId":"yutingzou"},"content":"        runCommandLoopUntilExitCommand();"},{"lineNumber":34,"author":{"gitId":"yutingzou"},"content":"        exit();"},{"lineNumber":35,"author":{"gitId":"yutingzou"},"content":"    }"},{"lineNumber":36,"author":{"gitId":"yutingzou"},"content":""},{"lineNumber":37,"author":{"gitId":"yutingzou"},"content":"    private void runCommandLoopUntilExitCommand() {"},{"lineNumber":38,"author":{"gitId":"yutingzou"},"content":"        String commandText \u003d \"\";"},{"lineNumber":39,"author":{"gitId":"yutingzou"},"content":"        while (!commandText.equals(\"bye\")){"},{"lineNumber":40,"author":{"gitId":"yutingzou"},"content":"            // take user input"},{"lineNumber":41,"author":{"gitId":"yutingzou"},"content":"            commandText \u003d ui.getUserCommand();"},{"lineNumber":42,"author":{"gitId":"yutingzou"},"content":""},{"lineNumber":43,"author":{"gitId":"yutingzou"},"content":"            // identify operator and execute command accordingly"},{"lineNumber":44,"author":{"gitId":"yutingzou"},"content":"            try {"},{"lineNumber":45,"author":{"gitId":"yutingzou"},"content":"                Parser commandParser \u003d new Parser();"},{"lineNumber":46,"author":{"gitId":"yutingzou"},"content":"                String operator \u003d commandParser.parseOperator(commandText);"},{"lineNumber":47,"author":{"gitId":"yutingzou"},"content":"                executeCommand(operator, commandText);"},{"lineNumber":48,"author":{"gitId":"yutingzou"},"content":"            } catch (DukeException e){"},{"lineNumber":49,"author":{"gitId":"yutingzou"},"content":"                ui.showErrorMessage(e.getMessage());"},{"lineNumber":50,"author":{"gitId":"yutingzou"},"content":"            }"},{"lineNumber":51,"author":{"gitId":"yutingzou"},"content":"        }"},{"lineNumber":52,"author":{"gitId":"yutingzou"},"content":"    }"},{"lineNumber":53,"author":{"gitId":"yutingzou"},"content":""},{"lineNumber":54,"author":{"gitId":"yutingzou"},"content":"    private void executeCommand(String operator, String commandText) throws DukeException {"},{"lineNumber":55,"author":{"gitId":"yutingzou"},"content":"        Parser commandParser \u003d new Parser();"},{"lineNumber":56,"author":{"gitId":"yutingzou"},"content":""},{"lineNumber":57,"author":{"gitId":"yutingzou"},"content":"        try {"},{"lineNumber":58,"author":{"gitId":"yutingzou"},"content":"            // parse command details according to their operator"},{"lineNumber":59,"author":{"gitId":"yutingzou"},"content":"            switch (operator) {"},{"lineNumber":60,"author":{"gitId":"yutingzou"},"content":"            case \"done\":"},{"lineNumber":61,"author":{"gitId":"yutingzou"},"content":"                int taskNumberToComplete \u003d commandParser.parseDone(commandText);"},{"lineNumber":62,"author":{"gitId":"yutingzou"},"content":"                completeTask(taskNumberToComplete);"},{"lineNumber":63,"author":{"gitId":"yutingzou"},"content":"                break;"},{"lineNumber":64,"author":{"gitId":"yutingzou"},"content":"            case \"delete\":"},{"lineNumber":65,"author":{"gitId":"yutingzou"},"content":"                int taskNumberToDelete \u003d commandParser.parseDelete(commandText);"},{"lineNumber":66,"author":{"gitId":"yutingzou"},"content":"                deleteTask(taskNumberToDelete);"},{"lineNumber":67,"author":{"gitId":"yutingzou"},"content":"                break;"},{"lineNumber":68,"author":{"gitId":"yutingzou"},"content":"            case \"todo\":"},{"lineNumber":69,"author":{"gitId":"yutingzou"},"content":"                String description \u003d commandParser.parseAddToDo(commandText);"},{"lineNumber":70,"author":{"gitId":"yutingzou"},"content":"                addToDo(description);"},{"lineNumber":71,"author":{"gitId":"yutingzou"},"content":"                break;"},{"lineNumber":72,"author":{"gitId":"yutingzou"},"content":"            case \"deadline\":"},{"lineNumber":73,"author":{"gitId":"yutingzou"},"content":"                String[] detailsDeadline \u003d commandParser.parseAddDeadline(commandText);"},{"lineNumber":74,"author":{"gitId":"yutingzou"},"content":"                addDeadline(detailsDeadline);"},{"lineNumber":75,"author":{"gitId":"yutingzou"},"content":"                break;"},{"lineNumber":76,"author":{"gitId":"yutingzou"},"content":"            case \"event\":"},{"lineNumber":77,"author":{"gitId":"yutingzou"},"content":"                String[] detailsEvent \u003d commandParser.parseAddEvent(commandText);"},{"lineNumber":78,"author":{"gitId":"yutingzou"},"content":"                addEvent(detailsEvent);"},{"lineNumber":79,"author":{"gitId":"yutingzou"},"content":"                break;"},{"lineNumber":80,"author":{"gitId":"yutingzou"},"content":"            case \"list\":"},{"lineNumber":81,"author":{"gitId":"yutingzou"},"content":"                displayList();"},{"lineNumber":82,"author":{"gitId":"yutingzou"},"content":"                break;"},{"lineNumber":83,"author":{"gitId":"yutingzou"},"content":"            case \"find\":"},{"lineNumber":84,"author":{"gitId":"yutingzou"},"content":"                String keyword \u003d commandParser.parseFindTask(commandText);"},{"lineNumber":85,"author":{"gitId":"yutingzou"},"content":"                findTask(keyword);"},{"lineNumber":86,"author":{"gitId":"yutingzou"},"content":"            }"},{"lineNumber":87,"author":{"gitId":"yutingzou"},"content":"        } catch (DukeException e){"},{"lineNumber":88,"author":{"gitId":"yutingzou"},"content":"            ui.showErrorMessage(e.getMessage());"},{"lineNumber":89,"author":{"gitId":"yutingzou"},"content":"        }"},{"lineNumber":90,"author":{"gitId":"yutingzou"},"content":"        storage.updateTaskList(tasks);"},{"lineNumber":91,"author":{"gitId":"yutingzou"},"content":"    }"},{"lineNumber":92,"author":{"gitId":"yutingzou"},"content":""},{"lineNumber":93,"author":{"gitId":"yutingzou"},"content":"    private void addEvent(String[] details) {"},{"lineNumber":94,"author":{"gitId":"yutingzou"},"content":"        // create a new Event"},{"lineNumber":95,"author":{"gitId":"yutingzou"},"content":"        String description \u003d details[0];"},{"lineNumber":96,"author":{"gitId":"yutingzou"},"content":"        String time \u003d details[1];"},{"lineNumber":97,"author":{"gitId":"yutingzou"},"content":"        Event newTask \u003d new Event(description, time);"},{"lineNumber":98,"author":{"gitId":"yutingzou"},"content":""},{"lineNumber":99,"author":{"gitId":"yutingzou"},"content":"        // add Event to tasks"},{"lineNumber":100,"author":{"gitId":"yutingzou"},"content":"        tasks.addTask(newTask);"},{"lineNumber":101,"author":{"gitId":"yutingzou"},"content":"        ui.showAddMessage(newTask, tasks.getSize());"},{"lineNumber":102,"author":{"gitId":"yutingzou"},"content":"    }"},{"lineNumber":103,"author":{"gitId":"yutingzou"},"content":""},{"lineNumber":104,"author":{"gitId":"yutingzou"},"content":"    private void addDeadline(String[] details) {"},{"lineNumber":105,"author":{"gitId":"yutingzou"},"content":"        // create a new Deadline"},{"lineNumber":106,"author":{"gitId":"yutingzou"},"content":"        String description \u003d details[0];"},{"lineNumber":107,"author":{"gitId":"yutingzou"},"content":"        String time \u003d details[1];"},{"lineNumber":108,"author":{"gitId":"yutingzou"},"content":"        Deadline newTask \u003d new Deadline(description, time);"},{"lineNumber":109,"author":{"gitId":"yutingzou"},"content":""},{"lineNumber":110,"author":{"gitId":"yutingzou"},"content":"        // add Deadline to tasks"},{"lineNumber":111,"author":{"gitId":"yutingzou"},"content":"        tasks.addTask(newTask);"},{"lineNumber":112,"author":{"gitId":"yutingzou"},"content":"        ui.showAddMessage(newTask, tasks.getSize());"},{"lineNumber":113,"author":{"gitId":"yutingzou"},"content":"    }"},{"lineNumber":114,"author":{"gitId":"yutingzou"},"content":""},{"lineNumber":115,"author":{"gitId":"yutingzou"},"content":"    private void addToDo(String description) {"},{"lineNumber":116,"author":{"gitId":"yutingzou"},"content":"        // create a new ToDo"},{"lineNumber":117,"author":{"gitId":"yutingzou"},"content":"        ToDo newTask \u003d new ToDo(description);"},{"lineNumber":118,"author":{"gitId":"yutingzou"},"content":""},{"lineNumber":119,"author":{"gitId":"yutingzou"},"content":"        // add ToDo to tasks"},{"lineNumber":120,"author":{"gitId":"yutingzou"},"content":"        tasks.addTask(newTask);"},{"lineNumber":121,"author":{"gitId":"yutingzou"},"content":"        ui.showAddMessage(newTask, tasks.getSize());"},{"lineNumber":122,"author":{"gitId":"yutingzou"},"content":"    }"},{"lineNumber":123,"author":{"gitId":"yutingzou"},"content":""},{"lineNumber":124,"author":{"gitId":"yutingzou"},"content":"    private void completeTask(int taskNumber) {"},{"lineNumber":125,"author":{"gitId":"yutingzou"},"content":"        Task task \u003d tasks.markTaskAsDone(taskNumber);"},{"lineNumber":126,"author":{"gitId":"yutingzou"},"content":"        ui.showCompleteMessage(task);"},{"lineNumber":127,"author":{"gitId":"yutingzou"},"content":"    }"},{"lineNumber":128,"author":{"gitId":"yutingzou"},"content":""},{"lineNumber":129,"author":{"gitId":"yutingzou"},"content":"    private void deleteTask(int taskNumber) {"},{"lineNumber":130,"author":{"gitId":"yutingzou"},"content":"        Task task \u003d tasks.deleteTask(taskNumber);"},{"lineNumber":131,"author":{"gitId":"yutingzou"},"content":"        ui.showDeleteMessage(task, tasks.getSize());"},{"lineNumber":132,"author":{"gitId":"yutingzou"},"content":"    }"},{"lineNumber":133,"author":{"gitId":"yutingzou"},"content":""},{"lineNumber":134,"author":{"gitId":"yutingzou"},"content":"    private void displayList(){"},{"lineNumber":135,"author":{"gitId":"yutingzou"},"content":"        ui.printMyTask(tasks);"},{"lineNumber":136,"author":{"gitId":"yutingzou"},"content":"    }"},{"lineNumber":137,"author":{"gitId":"yutingzou"},"content":""},{"lineNumber":138,"author":{"gitId":"yutingzou"},"content":"    private void findTask(String keyword) {"},{"lineNumber":139,"author":{"gitId":"yutingzou"},"content":"        ArrayList\u003cTask\u003e matchingTask \u003d tasks.findMatchingTask(keyword);"},{"lineNumber":140,"author":{"gitId":"yutingzou"},"content":"        ui.printMatchingTask(matchingTask);"},{"lineNumber":141,"author":{"gitId":"yutingzou"},"content":"    }"},{"lineNumber":142,"author":{"gitId":"yutingzou"},"content":""},{"lineNumber":143,"author":{"gitId":"yutingzou"},"content":"    private void exit() {"},{"lineNumber":144,"author":{"gitId":"yutingzou"},"content":"        ui.showGoodbyeMessage();"},{"lineNumber":145,"author":{"gitId":"yutingzou"},"content":"        System.exit(0);"},{"lineNumber":146,"author":{"gitId":"yutingzou"},"content":"    }"},{"lineNumber":147,"author":{"gitId":"yutingzou"},"content":"}"}],"authorContributionMap":{"yutingzou":146,"-":1}},{"path":"src/main/java/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yutingzou"},"content":"public class DukeException extends Exception {"},{"lineNumber":2,"author":{"gitId":"yutingzou"},"content":"    public DukeException(String errorMessage) {"},{"lineNumber":3,"author":{"gitId":"yutingzou"},"content":"        super(errorMessage);"},{"lineNumber":4,"author":{"gitId":"yutingzou"},"content":"    }"},{"lineNumber":5,"author":{"gitId":"yutingzou"},"content":"}"}],"authorContributionMap":{"yutingzou":5}},{"path":"src/main/java/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yutingzou"},"content":"import java.time.LocalDate;"},{"lineNumber":2,"author":{"gitId":"yutingzou"},"content":"import java.time.LocalDateTime;"},{"lineNumber":3,"author":{"gitId":"yutingzou"},"content":"import java.time.format.DateTimeFormatter;"},{"lineNumber":4,"author":{"gitId":"yutingzou"},"content":""},{"lineNumber":5,"author":{"gitId":"yutingzou"},"content":"public class Event extends Task {"},{"lineNumber":6,"author":{"gitId":"yutingzou"},"content":""},{"lineNumber":7,"author":{"gitId":"yutingzou"},"content":"    private LocalDateTime at;"},{"lineNumber":8,"author":{"gitId":"yutingzou"},"content":"    private String type \u003d \"E\";"},{"lineNumber":9,"author":{"gitId":"yutingzou"},"content":""},{"lineNumber":10,"author":{"gitId":"yutingzou"},"content":"    public Event(String description, String at) {"},{"lineNumber":11,"author":{"gitId":"yutingzou"},"content":"       this(description, at, false);"},{"lineNumber":12,"author":{"gitId":"yutingzou"},"content":"    }"},{"lineNumber":13,"author":{"gitId":"yutingzou"},"content":""},{"lineNumber":14,"author":{"gitId":"yutingzou"},"content":"    public Event(String description, String at, boolean isDone) {"},{"lineNumber":15,"author":{"gitId":"yutingzou"},"content":"        super(description, isDone);"},{"lineNumber":16,"author":{"gitId":"yutingzou"},"content":"        setTime(at);"},{"lineNumber":17,"author":{"gitId":"yutingzou"},"content":"    }"},{"lineNumber":18,"author":{"gitId":"yutingzou"},"content":""},{"lineNumber":19,"author":{"gitId":"yutingzou"},"content":"    private void setTime(String time) {"},{"lineNumber":20,"author":{"gitId":"yutingzou"},"content":"        // convert time from String to LocalDateTime in specified format"},{"lineNumber":21,"author":{"gitId":"yutingzou"},"content":"        DateTimeFormatter inputFormat \u003d DateTimeFormatter.ofPattern(\"yyyy-M-d H:mm\");"},{"lineNumber":22,"author":{"gitId":"yutingzou"},"content":"        LocalDateTime dateTime \u003d LocalDateTime.parse(time, inputFormat);"},{"lineNumber":23,"author":{"gitId":"yutingzou"},"content":"        this.at \u003d dateTime;"},{"lineNumber":24,"author":{"gitId":"yutingzou"},"content":"    }"},{"lineNumber":25,"author":{"gitId":"yutingzou"},"content":""},{"lineNumber":26,"author":{"gitId":"yutingzou"},"content":"    @Override"},{"lineNumber":27,"author":{"gitId":"yutingzou"},"content":"    public String toString() {"},{"lineNumber":28,"author":{"gitId":"yutingzou"},"content":"        String time \u003d this.at.format(DateTimeFormatter.ofPattern(\"MMM d yyyy hh:mm a\")).replace(\"T\", \" \");"},{"lineNumber":29,"author":{"gitId":"yutingzou"},"content":"        return type + separator + super.toString() + separator + time;"},{"lineNumber":30,"author":{"gitId":"yutingzou"},"content":"    }"},{"lineNumber":31,"author":{"gitId":"yutingzou"},"content":"}"}],"authorContributionMap":{"yutingzou":31}},{"path":"src/main/java/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yutingzou"},"content":"import java.time.LocalDate;"},{"lineNumber":2,"author":{"gitId":"yutingzou"},"content":"import java.time.LocalDateTime;"},{"lineNumber":3,"author":{"gitId":"yutingzou"},"content":"import java.time.format.DateTimeFormatter;"},{"lineNumber":4,"author":{"gitId":"yutingzou"},"content":"import java.time.format.DateTimeParseException;"},{"lineNumber":5,"author":{"gitId":"yutingzou"},"content":"import java.util.ArrayList;"},{"lineNumber":6,"author":{"gitId":"yutingzou"},"content":"import java.util.Locale;"},{"lineNumber":7,"author":{"gitId":"yutingzou"},"content":""},{"lineNumber":8,"author":{"gitId":"yutingzou"},"content":"public class Parser {"},{"lineNumber":9,"author":{"gitId":"yutingzou"},"content":"    private ArrayList\u003cString\u003e validOperators;"},{"lineNumber":10,"author":{"gitId":"yutingzou"},"content":"    private static final String timeFormat \u003d \"yyyy-M-d H:mm\";"},{"lineNumber":11,"author":{"gitId":"yutingzou"},"content":""},{"lineNumber":12,"author":{"gitId":"yutingzou"},"content":"    public Parser(){"},{"lineNumber":13,"author":{"gitId":"yutingzou"},"content":"        this.validOperators \u003d initialiseOperators();"},{"lineNumber":14,"author":{"gitId":"yutingzou"},"content":"    }"},{"lineNumber":15,"author":{"gitId":"yutingzou"},"content":""},{"lineNumber":16,"author":{"gitId":"yutingzou"},"content":"    private ArrayList\u003cString\u003e initialiseOperators(){"},{"lineNumber":17,"author":{"gitId":"yutingzou"},"content":"        ArrayList\u003cString\u003e operators \u003d new ArrayList\u003c\u003e();"},{"lineNumber":18,"author":{"gitId":"yutingzou"},"content":"        // add valid operators into list"},{"lineNumber":19,"author":{"gitId":"yutingzou"},"content":"        operators .add(\"bye\");"},{"lineNumber":20,"author":{"gitId":"yutingzou"},"content":"        operators .add(\"list\");"},{"lineNumber":21,"author":{"gitId":"yutingzou"},"content":"        operators .add(\"todo\");"},{"lineNumber":22,"author":{"gitId":"yutingzou"},"content":"        operators .add(\"deadline\");"},{"lineNumber":23,"author":{"gitId":"yutingzou"},"content":"        operators .add(\"event\");"},{"lineNumber":24,"author":{"gitId":"yutingzou"},"content":"        operators .add(\"done\");"},{"lineNumber":25,"author":{"gitId":"yutingzou"},"content":"        operators .add(\"delete\");"},{"lineNumber":26,"author":{"gitId":"yutingzou"},"content":"        operators .add(\"find\");"},{"lineNumber":27,"author":{"gitId":"yutingzou"},"content":"        return operators ;"},{"lineNumber":28,"author":{"gitId":"yutingzou"},"content":"    }"},{"lineNumber":29,"author":{"gitId":"yutingzou"},"content":""},{"lineNumber":30,"author":{"gitId":"yutingzou"},"content":"    /**"},{"lineNumber":31,"author":{"gitId":"yutingzou"},"content":"     * Parse the operator input by user."},{"lineNumber":32,"author":{"gitId":"yutingzou"},"content":"     *"},{"lineNumber":33,"author":{"gitId":"yutingzou"},"content":"     * @param userInput full text command input by user."},{"lineNumber":34,"author":{"gitId":"yutingzou"},"content":"     * @return Extracted operator."},{"lineNumber":35,"author":{"gitId":"yutingzou"},"content":"     * @throws DukeException If operator is not valid."},{"lineNumber":36,"author":{"gitId":"yutingzou"},"content":"     */"},{"lineNumber":37,"author":{"gitId":"yutingzou"},"content":"    public String parseOperator(String userInput) throws DukeException {"},{"lineNumber":38,"author":{"gitId":"yutingzou"},"content":"        // split command text by its first space into 2 parts"},{"lineNumber":39,"author":{"gitId":"yutingzou"},"content":"        String[] commandParts \u003d userInput.split(\" \", 2);"},{"lineNumber":40,"author":{"gitId":"yutingzou"},"content":""},{"lineNumber":41,"author":{"gitId":"yutingzou"},"content":"        // parse operator in the first word of a text command"},{"lineNumber":42,"author":{"gitId":"yutingzou"},"content":"        String operator \u003d commandParts[0];"},{"lineNumber":43,"author":{"gitId":"yutingzou"},"content":""},{"lineNumber":44,"author":{"gitId":"yutingzou"},"content":"        if (!isValidOperator(operator)) {"},{"lineNumber":45,"author":{"gitId":"yutingzou"},"content":"            throw new DukeException(\"OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\");"},{"lineNumber":46,"author":{"gitId":"yutingzou"},"content":"        }"},{"lineNumber":47,"author":{"gitId":"yutingzou"},"content":"        return operator;"},{"lineNumber":48,"author":{"gitId":"yutingzou"},"content":"    }"},{"lineNumber":49,"author":{"gitId":"yutingzou"},"content":""},{"lineNumber":50,"author":{"gitId":"yutingzou"},"content":"    private boolean isValidOperator(String operator){"},{"lineNumber":51,"author":{"gitId":"yutingzou"},"content":"        return validOperators.contains(operator.toLowerCase());"},{"lineNumber":52,"author":{"gitId":"yutingzou"},"content":"    }"},{"lineNumber":53,"author":{"gitId":"yutingzou"},"content":""},{"lineNumber":54,"author":{"gitId":"yutingzou"},"content":"    private String[] parseCommand(String userInput){"},{"lineNumber":55,"author":{"gitId":"yutingzou"},"content":"        String[] commandParts \u003d userInput.split(\" \", 2);"},{"lineNumber":56,"author":{"gitId":"yutingzou"},"content":"        return commandParts;"},{"lineNumber":57,"author":{"gitId":"yutingzou"},"content":"}"},{"lineNumber":58,"author":{"gitId":"yutingzou"},"content":""},{"lineNumber":59,"author":{"gitId":"yutingzou"},"content":"    /**"},{"lineNumber":60,"author":{"gitId":"yutingzou"},"content":"     * Return the task number to be marked as done."},{"lineNumber":61,"author":{"gitId":"yutingzou"},"content":"     *"},{"lineNumber":62,"author":{"gitId":"yutingzou"},"content":"     * @param commandText full text command input by user."},{"lineNumber":63,"author":{"gitId":"yutingzou"},"content":"     * @return Task number."},{"lineNumber":64,"author":{"gitId":"yutingzou"},"content":"     * @throws DukeException If task number is empty or a non-integer is entered."},{"lineNumber":65,"author":{"gitId":"yutingzou"},"content":"     */"},{"lineNumber":66,"author":{"gitId":"yutingzou"},"content":"    public int parseDone(String commandText) throws DukeException{"},{"lineNumber":67,"author":{"gitId":"yutingzou"},"content":"        // split command text by its first space into 2 parts"},{"lineNumber":68,"author":{"gitId":"yutingzou"},"content":"        String[] commandParts \u003d commandText.split(\" \", 2);"},{"lineNumber":69,"author":{"gitId":"yutingzou"},"content":""},{"lineNumber":70,"author":{"gitId":"yutingzou"},"content":"        // parse task number"},{"lineNumber":71,"author":{"gitId":"yutingzou"},"content":"        if (commandParts.length \u003d\u003d 1) {"},{"lineNumber":72,"author":{"gitId":"yutingzou"},"content":"            throw new DukeException(\"OOPS!!! Please specify the task number.\");"},{"lineNumber":73,"author":{"gitId":"yutingzou"},"content":"        } else {"},{"lineNumber":74,"author":{"gitId":"yutingzou"},"content":"            try {"},{"lineNumber":75,"author":{"gitId":"yutingzou"},"content":"                int taskNo \u003d Integer.valueOf(commandParts[1]);"},{"lineNumber":76,"author":{"gitId":"yutingzou"},"content":"                return taskNo;"},{"lineNumber":77,"author":{"gitId":"yutingzou"},"content":"            } catch (Exception e) {"},{"lineNumber":78,"author":{"gitId":"yutingzou"},"content":"                throw new DukeException(\"OOPS!!! The task cannot be found.\");"},{"lineNumber":79,"author":{"gitId":"yutingzou"},"content":"            }"},{"lineNumber":80,"author":{"gitId":"yutingzou"},"content":"        }"},{"lineNumber":81,"author":{"gitId":"yutingzou"},"content":"    }"},{"lineNumber":82,"author":{"gitId":"yutingzou"},"content":""},{"lineNumber":83,"author":{"gitId":"yutingzou"},"content":"    /**"},{"lineNumber":84,"author":{"gitId":"yutingzou"},"content":"     * Return the task number to be deleted."},{"lineNumber":85,"author":{"gitId":"yutingzou"},"content":"     *"},{"lineNumber":86,"author":{"gitId":"yutingzou"},"content":"     * @param commandText full text command input by user."},{"lineNumber":87,"author":{"gitId":"yutingzou"},"content":"     * @return Task number."},{"lineNumber":88,"author":{"gitId":"yutingzou"},"content":"     * @throws DukeException If task number is empty or a non-integer is entered."},{"lineNumber":89,"author":{"gitId":"yutingzou"},"content":"     */"},{"lineNumber":90,"author":{"gitId":"yutingzou"},"content":"    public int parseDelete(String commandText) throws DukeException {"},{"lineNumber":91,"author":{"gitId":"yutingzou"},"content":"        // split command text by its first space into 2 parts"},{"lineNumber":92,"author":{"gitId":"yutingzou"},"content":"        String[] commandParts \u003d commandText.split(\" \", 2);"},{"lineNumber":93,"author":{"gitId":"yutingzou"},"content":""},{"lineNumber":94,"author":{"gitId":"yutingzou"},"content":"        // parse task number"},{"lineNumber":95,"author":{"gitId":"yutingzou"},"content":"        if (commandParts.length \u003d\u003d 1) {"},{"lineNumber":96,"author":{"gitId":"yutingzou"},"content":"            throw new DukeException(\"OOPS!!! Please specify the task number.\");"},{"lineNumber":97,"author":{"gitId":"yutingzou"},"content":"        } else {"},{"lineNumber":98,"author":{"gitId":"yutingzou"},"content":"            try {"},{"lineNumber":99,"author":{"gitId":"yutingzou"},"content":"                int taskNo \u003d Integer.valueOf(commandParts[1]);"},{"lineNumber":100,"author":{"gitId":"yutingzou"},"content":"                return taskNo;"},{"lineNumber":101,"author":{"gitId":"yutingzou"},"content":"            } catch (Exception e) {"},{"lineNumber":102,"author":{"gitId":"yutingzou"},"content":"                throw new DukeException(\"OOPS!!! The task cannot be found.\");"},{"lineNumber":103,"author":{"gitId":"yutingzou"},"content":"            }"},{"lineNumber":104,"author":{"gitId":"yutingzou"},"content":"        }"},{"lineNumber":105,"author":{"gitId":"yutingzou"},"content":"    }"},{"lineNumber":106,"author":{"gitId":"yutingzou"},"content":""},{"lineNumber":107,"author":{"gitId":"yutingzou"},"content":"    /**"},{"lineNumber":108,"author":{"gitId":"yutingzou"},"content":"     * Return the description of a ToDo task to be added specified by user."},{"lineNumber":109,"author":{"gitId":"yutingzou"},"content":"     *"},{"lineNumber":110,"author":{"gitId":"yutingzou"},"content":"     * @param commandText full text command input by user."},{"lineNumber":111,"author":{"gitId":"yutingzou"},"content":"     * @return Description of ToDo."},{"lineNumber":112,"author":{"gitId":"yutingzou"},"content":"     * @throws DukeException If description is empty."},{"lineNumber":113,"author":{"gitId":"yutingzou"},"content":"     */"},{"lineNumber":114,"author":{"gitId":"yutingzou"},"content":"    public String parseAddToDo(String commandText) throws DukeException {"},{"lineNumber":115,"author":{"gitId":"yutingzou"},"content":"        // split command text by its first space into 2 parts"},{"lineNumber":116,"author":{"gitId":"yutingzou"},"content":"        String[] commandParts \u003d commandText.split(\" \", 2);"},{"lineNumber":117,"author":{"gitId":"yutingzou"},"content":""},{"lineNumber":118,"author":{"gitId":"yutingzou"},"content":"        // parse description of ToDo"},{"lineNumber":119,"author":{"gitId":"yutingzou"},"content":"        if(commandParts.length \u003d\u003d 1 || commandParts[1].isBlank()) {"},{"lineNumber":120,"author":{"gitId":"yutingzou"},"content":"            throw new DukeException(\"OOPS!!! The description of a todo cannot be empty.\");"},{"lineNumber":121,"author":{"gitId":"yutingzou"},"content":"        } else{"},{"lineNumber":122,"author":{"gitId":"yutingzou"},"content":"            String description \u003d commandParts[1];"},{"lineNumber":123,"author":{"gitId":"yutingzou"},"content":"            return description;"},{"lineNumber":124,"author":{"gitId":"yutingzou"},"content":"        }"},{"lineNumber":125,"author":{"gitId":"yutingzou"},"content":"    }"},{"lineNumber":126,"author":{"gitId":"yutingzou"},"content":""},{"lineNumber":127,"author":{"gitId":"yutingzou"},"content":"    /**"},{"lineNumber":128,"author":{"gitId":"yutingzou"},"content":"     * Return the description and due time of a Deadline task to be added specified by user."},{"lineNumber":129,"author":{"gitId":"yutingzou"},"content":"     *"},{"lineNumber":130,"author":{"gitId":"yutingzou"},"content":"     * @param commandText full text command input by user."},{"lineNumber":131,"author":{"gitId":"yutingzou"},"content":"     * @return List containing description and due time of Deadline."},{"lineNumber":132,"author":{"gitId":"yutingzou"},"content":"     * @throws DukeException If description is empty or due time does not follow \u0027yyyy-M-d H:mm\u0027 format."},{"lineNumber":133,"author":{"gitId":"yutingzou"},"content":"     */"},{"lineNumber":134,"author":{"gitId":"yutingzou"},"content":"    public String[] parseAddDeadline(String commandText) throws DukeException {"},{"lineNumber":135,"author":{"gitId":"yutingzou"},"content":"        // split command text by its first space into 2 parts"},{"lineNumber":136,"author":{"gitId":"yutingzou"},"content":"        String[] commandParts \u003d commandText.split(\" \", 2);"},{"lineNumber":137,"author":{"gitId":"yutingzou"},"content":""},{"lineNumber":138,"author":{"gitId":"yutingzou"},"content":"        // parse details of Deadline"},{"lineNumber":139,"author":{"gitId":"yutingzou"},"content":"        if(commandParts.length \u003d\u003d 1 || commandParts[1].isBlank()) {"},{"lineNumber":140,"author":{"gitId":"yutingzou"},"content":"            throw new DukeException(\"OOPS!!! The description of a deadline cannot be empty.\");"},{"lineNumber":141,"author":{"gitId":"yutingzou"},"content":"        } else{"},{"lineNumber":142,"author":{"gitId":"yutingzou"},"content":""},{"lineNumber":143,"author":{"gitId":"yutingzou"},"content":"            // split details to description and time"},{"lineNumber":144,"author":{"gitId":"yutingzou"},"content":"            String[] details \u003d commandParts[1].split(\" /by \", 2);"},{"lineNumber":145,"author":{"gitId":"yutingzou"},"content":"            if (details.length \u003d\u003d 1 || !isValidTime(details[1])){"},{"lineNumber":146,"author":{"gitId":"yutingzou"},"content":"                throw new DukeException(\"OOPS!! Please follow the correct data/time format: yyyy-M-d H:mm\");"},{"lineNumber":147,"author":{"gitId":"yutingzou"},"content":"            }"},{"lineNumber":148,"author":{"gitId":"yutingzou"},"content":""},{"lineNumber":149,"author":{"gitId":"yutingzou"},"content":"            String description \u003d details[0];"},{"lineNumber":150,"author":{"gitId":"yutingzou"},"content":"            String by \u003d details[1];"},{"lineNumber":151,"author":{"gitId":"yutingzou"},"content":"            return new String[] {description, by};"},{"lineNumber":152,"author":{"gitId":"yutingzou"},"content":"        }"},{"lineNumber":153,"author":{"gitId":"yutingzou"},"content":"    }"},{"lineNumber":154,"author":{"gitId":"yutingzou"},"content":""},{"lineNumber":155,"author":{"gitId":"yutingzou"},"content":"    /**"},{"lineNumber":156,"author":{"gitId":"yutingzou"},"content":"     * Return the description and time of an Event task to be added specified by user."},{"lineNumber":157,"author":{"gitId":"yutingzou"},"content":"     *"},{"lineNumber":158,"author":{"gitId":"yutingzou"},"content":"     * @param commandText full text command input by user."},{"lineNumber":159,"author":{"gitId":"yutingzou"},"content":"     * @return List containing description and time of event."},{"lineNumber":160,"author":{"gitId":"yutingzou"},"content":"     * @throws DukeException If description is empty or time does not follow \u0027yyyy-M-d H:mm\u0027 format."},{"lineNumber":161,"author":{"gitId":"yutingzou"},"content":"     */"},{"lineNumber":162,"author":{"gitId":"yutingzou"},"content":"    public String[] parseAddEvent(String commandText) throws DukeException {"},{"lineNumber":163,"author":{"gitId":"yutingzou"},"content":"        // split command text by its first space into 2 parts"},{"lineNumber":164,"author":{"gitId":"yutingzou"},"content":"        String[] commandParts \u003d commandText.split(\" \", 2);"},{"lineNumber":165,"author":{"gitId":"yutingzou"},"content":""},{"lineNumber":166,"author":{"gitId":"yutingzou"},"content":"        // parse details of Event"},{"lineNumber":167,"author":{"gitId":"yutingzou"},"content":"        if(commandParts.length \u003d\u003d 1 || commandParts[1].isBlank()) {"},{"lineNumber":168,"author":{"gitId":"yutingzou"},"content":"            throw new DukeException(\"OOPS!!! The description of an event cannot be empty.\");"},{"lineNumber":169,"author":{"gitId":"yutingzou"},"content":"        } else{"},{"lineNumber":170,"author":{"gitId":"yutingzou"},"content":""},{"lineNumber":171,"author":{"gitId":"yutingzou"},"content":"            // split details to description and time"},{"lineNumber":172,"author":{"gitId":"yutingzou"},"content":"            String[] details \u003d commandParts[1].split(\" /at \", 2);"},{"lineNumber":173,"author":{"gitId":"yutingzou"},"content":"            if (details.length \u003d\u003d 1 || !isValidTime(details[1])){"},{"lineNumber":174,"author":{"gitId":"yutingzou"},"content":"                throw new DukeException(\"OOPS!! Please follow the correct data/time format: yyyy-MM-dd HH:mm\");"},{"lineNumber":175,"author":{"gitId":"yutingzou"},"content":"            }"},{"lineNumber":176,"author":{"gitId":"yutingzou"},"content":""},{"lineNumber":177,"author":{"gitId":"yutingzou"},"content":"            String description \u003d details[0];"},{"lineNumber":178,"author":{"gitId":"yutingzou"},"content":"            String at \u003d details[1];"},{"lineNumber":179,"author":{"gitId":"yutingzou"},"content":"            return new String[] {description, at};"},{"lineNumber":180,"author":{"gitId":"yutingzou"},"content":"        }"},{"lineNumber":181,"author":{"gitId":"yutingzou"},"content":"    }"},{"lineNumber":182,"author":{"gitId":"yutingzou"},"content":""},{"lineNumber":183,"author":{"gitId":"yutingzou"},"content":"    /**"},{"lineNumber":184,"author":{"gitId":"yutingzou"},"content":"     * Return the keyword specified by user."},{"lineNumber":185,"author":{"gitId":"yutingzou"},"content":"     *"},{"lineNumber":186,"author":{"gitId":"yutingzou"},"content":"     * @param commandText full text command input by user."},{"lineNumber":187,"author":{"gitId":"yutingzou"},"content":"     * @return Keyword to be used for finding matching tasks."},{"lineNumber":188,"author":{"gitId":"yutingzou"},"content":"     * @throws DukeException If keyword is empty."},{"lineNumber":189,"author":{"gitId":"yutingzou"},"content":"     */"},{"lineNumber":190,"author":{"gitId":"yutingzou"},"content":"    public String parseFindTask(String commandText) throws DukeException {"},{"lineNumber":191,"author":{"gitId":"yutingzou"},"content":"        // split command text by its first space into 2 parts"},{"lineNumber":192,"author":{"gitId":"yutingzou"},"content":"        String[] commandParts \u003d commandText.split(\" \", 2);"},{"lineNumber":193,"author":{"gitId":"yutingzou"},"content":""},{"lineNumber":194,"author":{"gitId":"yutingzou"},"content":"        // parse keyword of task"},{"lineNumber":195,"author":{"gitId":"yutingzou"},"content":"        if(commandParts.length \u003d\u003d 1 || commandParts[1].isBlank()) {"},{"lineNumber":196,"author":{"gitId":"yutingzou"},"content":"            throw new DukeException(\"OOPS!!! There is no matching task.\");"},{"lineNumber":197,"author":{"gitId":"yutingzou"},"content":"        } else{"},{"lineNumber":198,"author":{"gitId":"yutingzou"},"content":"            String keyword \u003d commandParts[1];"},{"lineNumber":199,"author":{"gitId":"yutingzou"},"content":"            return commandParts[1];"},{"lineNumber":200,"author":{"gitId":"yutingzou"},"content":"        }"},{"lineNumber":201,"author":{"gitId":"yutingzou"},"content":"    }"},{"lineNumber":202,"author":{"gitId":"yutingzou"},"content":""},{"lineNumber":203,"author":{"gitId":"yutingzou"},"content":"    /**"},{"lineNumber":204,"author":{"gitId":"yutingzou"},"content":"     * Return if the time entered by user is valid."},{"lineNumber":205,"author":{"gitId":"yutingzou"},"content":"     *"},{"lineNumber":206,"author":{"gitId":"yutingzou"},"content":"     * @param time Time of Deadline or Event."},{"lineNumber":207,"author":{"gitId":"yutingzou"},"content":"     * @return True if the time follows \"yyyy-M-d H:mm\"; else, return false."},{"lineNumber":208,"author":{"gitId":"yutingzou"},"content":"     * @throws DateTimeParseException If time is in invalid format."},{"lineNumber":209,"author":{"gitId":"yutingzou"},"content":"     */"},{"lineNumber":210,"author":{"gitId":"yutingzou"},"content":"    public boolean isValidTime(String time) throws DateTimeParseException {"},{"lineNumber":211,"author":{"gitId":"yutingzou"},"content":"        try {"},{"lineNumber":212,"author":{"gitId":"yutingzou"},"content":"            // convert time from String to LocalDateTime"},{"lineNumber":213,"author":{"gitId":"yutingzou"},"content":"            DateTimeFormatter inputFormat \u003d DateTimeFormatter.ofPattern(\"yyyy-M-d H:mm\", Locale.ENGLISH);"},{"lineNumber":214,"author":{"gitId":"yutingzou"},"content":"            inputFormat.parse(time);"},{"lineNumber":215,"author":{"gitId":"yutingzou"},"content":"        } catch (DateTimeParseException e){"},{"lineNumber":216,"author":{"gitId":"yutingzou"},"content":"            return false;"},{"lineNumber":217,"author":{"gitId":"yutingzou"},"content":"        }"},{"lineNumber":218,"author":{"gitId":"yutingzou"},"content":"        return true;"},{"lineNumber":219,"author":{"gitId":"yutingzou"},"content":"    }"},{"lineNumber":220,"author":{"gitId":"yutingzou"},"content":"}"}],"authorContributionMap":{"yutingzou":220}},{"path":"src/main/java/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yutingzou"},"content":"import java.io.File;"},{"lineNumber":2,"author":{"gitId":"yutingzou"},"content":"import java.io.FileNotFoundException;"},{"lineNumber":3,"author":{"gitId":"yutingzou"},"content":"import java.io.FileWriter;"},{"lineNumber":4,"author":{"gitId":"yutingzou"},"content":"import java.io.IOException;"},{"lineNumber":5,"author":{"gitId":"yutingzou"},"content":"import java.lang.reflect.Array;"},{"lineNumber":6,"author":{"gitId":"yutingzou"},"content":"import java.util.ArrayList;"},{"lineNumber":7,"author":{"gitId":"yutingzou"},"content":"import java.util.Scanner;"},{"lineNumber":8,"author":{"gitId":"yutingzou"},"content":""},{"lineNumber":9,"author":{"gitId":"yutingzou"},"content":"public class Storage {"},{"lineNumber":10,"author":{"gitId":"yutingzou"},"content":""},{"lineNumber":11,"author":{"gitId":"yutingzou"},"content":"    private String filePath;"},{"lineNumber":12,"author":{"gitId":"yutingzou"},"content":""},{"lineNumber":13,"author":{"gitId":"yutingzou"},"content":"    public Storage(String filePath){"},{"lineNumber":14,"author":{"gitId":"yutingzou"},"content":"        this.filePath \u003d filePath;"},{"lineNumber":15,"author":{"gitId":"yutingzou"},"content":"    }"},{"lineNumber":16,"author":{"gitId":"yutingzou"},"content":""},{"lineNumber":17,"author":{"gitId":"yutingzou"},"content":"    public String getPath(){"},{"lineNumber":18,"author":{"gitId":"yutingzou"},"content":"        return this.filePath;"},{"lineNumber":19,"author":{"gitId":"yutingzou"},"content":"    }"},{"lineNumber":20,"author":{"gitId":"yutingzou"},"content":""},{"lineNumber":21,"author":{"gitId":"yutingzou"},"content":"    /**"},{"lineNumber":22,"author":{"gitId":"yutingzou"},"content":"     * Return list of existing tasks stored in local text file."},{"lineNumber":23,"author":{"gitId":"yutingzou"},"content":"     *"},{"lineNumber":24,"author":{"gitId":"yutingzou"},"content":"     * @return List of task details (type, status, description and time)."},{"lineNumber":25,"author":{"gitId":"yutingzou"},"content":"     * @throws DukeException If local file is not found."},{"lineNumber":26,"author":{"gitId":"yutingzou"},"content":"     */"},{"lineNumber":27,"author":{"gitId":"yutingzou"},"content":"    public ArrayList\u003cString\u003e load() throws DukeException {"},{"lineNumber":28,"author":{"gitId":"yutingzou"},"content":"        try {"},{"lineNumber":29,"author":{"gitId":"yutingzou"},"content":"            ArrayList\u003cString\u003e tasks \u003d new ArrayList\u003c\u003e();"},{"lineNumber":30,"author":{"gitId":"yutingzou"},"content":""},{"lineNumber":31,"author":{"gitId":"yutingzou"},"content":"            // open the file"},{"lineNumber":32,"author":{"gitId":"yutingzou"},"content":"            File f \u003d new File(this.filePath);"},{"lineNumber":33,"author":{"gitId":"yutingzou"},"content":"            Scanner scanner \u003d new Scanner(f);"},{"lineNumber":34,"author":{"gitId":"yutingzou"},"content":""},{"lineNumber":35,"author":{"gitId":"yutingzou"},"content":"            // scan the file by line"},{"lineNumber":36,"author":{"gitId":"yutingzou"},"content":"            while (scanner.hasNext()) {"},{"lineNumber":37,"author":{"gitId":"yutingzou"},"content":"                tasks.add(scanner.nextLine());"},{"lineNumber":38,"author":{"gitId":"yutingzou"},"content":"            }"},{"lineNumber":39,"author":{"gitId":"yutingzou"},"content":"            return tasks;"},{"lineNumber":40,"author":{"gitId":"yutingzou"},"content":"        } catch (FileNotFoundException e){"},{"lineNumber":41,"author":{"gitId":"yutingzou"},"content":"            throw new DukeException(\"OOPS!! File is not found.\");"},{"lineNumber":42,"author":{"gitId":"yutingzou"},"content":"        }"},{"lineNumber":43,"author":{"gitId":"yutingzou"},"content":"    }"},{"lineNumber":44,"author":{"gitId":"yutingzou"},"content":""},{"lineNumber":45,"author":{"gitId":"yutingzou"},"content":"    /**"},{"lineNumber":46,"author":{"gitId":"yutingzou"},"content":"     * Store the TaskList in local text file."},{"lineNumber":47,"author":{"gitId":"yutingzou"},"content":"     *"},{"lineNumber":48,"author":{"gitId":"yutingzou"},"content":"     * @param taskList TaskList containing Task objects."},{"lineNumber":49,"author":{"gitId":"yutingzou"},"content":"     * @throws DukeException If fail to write the file."},{"lineNumber":50,"author":{"gitId":"yutingzou"},"content":"     */"},{"lineNumber":51,"author":{"gitId":"yutingzou"},"content":"    public void updateTaskList(TaskList taskList) throws DukeException {"},{"lineNumber":52,"author":{"gitId":"yutingzou"},"content":"        try {"},{"lineNumber":53,"author":{"gitId":"yutingzou"},"content":"            ArrayList\u003cTask\u003e tasks \u003d taskList.getTaskList();"},{"lineNumber":54,"author":{"gitId":"yutingzou"},"content":""},{"lineNumber":55,"author":{"gitId":"yutingzou"},"content":"            // open the file and initialise a file writer"},{"lineNumber":56,"author":{"gitId":"yutingzou"},"content":"            FileWriter writer \u003d new FileWriter(filePath);"},{"lineNumber":57,"author":{"gitId":"yutingzou"},"content":""},{"lineNumber":58,"author":{"gitId":"yutingzou"},"content":"            // write tasks into file by line"},{"lineNumber":59,"author":{"gitId":"yutingzou"},"content":"            for (Task t : tasks) {"},{"lineNumber":60,"author":{"gitId":"yutingzou"},"content":"                writer.write(t.toString() + System.lineSeparator());"},{"lineNumber":61,"author":{"gitId":"yutingzou"},"content":"            }"},{"lineNumber":62,"author":{"gitId":"yutingzou"},"content":"            writer.close();"},{"lineNumber":63,"author":{"gitId":"yutingzou"},"content":"        } catch (IOException e){"},{"lineNumber":64,"author":{"gitId":"yutingzou"},"content":"            throw new DukeException(\"OOPS!! Task list failed to update.\");"},{"lineNumber":65,"author":{"gitId":"yutingzou"},"content":"        }"},{"lineNumber":66,"author":{"gitId":"yutingzou"},"content":"    }"},{"lineNumber":67,"author":{"gitId":"yutingzou"},"content":"}"}],"authorContributionMap":{"yutingzou":67}},{"path":"src/main/java/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yutingzou"},"content":"public class Task {"},{"lineNumber":2,"author":{"gitId":"yutingzou"},"content":"    private String description;"},{"lineNumber":3,"author":{"gitId":"yutingzou"},"content":"    private boolean isDone;"},{"lineNumber":4,"author":{"gitId":"yutingzou"},"content":"    private String type;"},{"lineNumber":5,"author":{"gitId":"yutingzou"},"content":"    protected String separator \u003d \" | \";"},{"lineNumber":6,"author":{"gitId":"yutingzou"},"content":""},{"lineNumber":7,"author":{"gitId":"yutingzou"},"content":"    public Task(String description) {"},{"lineNumber":8,"author":{"gitId":"yutingzou"},"content":"        this(description, false);"},{"lineNumber":9,"author":{"gitId":"yutingzou"},"content":"    }"},{"lineNumber":10,"author":{"gitId":"yutingzou"},"content":""},{"lineNumber":11,"author":{"gitId":"yutingzou"},"content":"    public Task(String description, boolean isDone) {"},{"lineNumber":12,"author":{"gitId":"yutingzou"},"content":"        this.description \u003d description;"},{"lineNumber":13,"author":{"gitId":"yutingzou"},"content":"        this.isDone \u003d isDone;"},{"lineNumber":14,"author":{"gitId":"yutingzou"},"content":"    }"},{"lineNumber":15,"author":{"gitId":"yutingzou"},"content":""},{"lineNumber":16,"author":{"gitId":"yutingzou"},"content":"    private String getStatusIcon() {"},{"lineNumber":17,"author":{"gitId":"yutingzou"},"content":"        return (isDone ? \"\\u2713\" : \"\\u2718\");"},{"lineNumber":18,"author":{"gitId":"yutingzou"},"content":"    }"},{"lineNumber":19,"author":{"gitId":"yutingzou"},"content":""},{"lineNumber":20,"author":{"gitId":"yutingzou"},"content":"    public String getDescription() {"},{"lineNumber":21,"author":{"gitId":"yutingzou"},"content":"        return this.description;"},{"lineNumber":22,"author":{"gitId":"yutingzou"},"content":"    }"},{"lineNumber":23,"author":{"gitId":"yutingzou"},"content":""},{"lineNumber":24,"author":{"gitId":"yutingzou"},"content":"    public void markAsDone() {"},{"lineNumber":25,"author":{"gitId":"yutingzou"},"content":"        this.isDone \u003d true;"},{"lineNumber":26,"author":{"gitId":"yutingzou"},"content":"    }"},{"lineNumber":27,"author":{"gitId":"yutingzou"},"content":""},{"lineNumber":28,"author":{"gitId":"yutingzou"},"content":"    public boolean getStatus() { return this.isDone; }"},{"lineNumber":29,"author":{"gitId":"yutingzou"},"content":""},{"lineNumber":30,"author":{"gitId":"yutingzou"},"content":"    @Override"},{"lineNumber":31,"author":{"gitId":"yutingzou"},"content":"    public String toString() {"},{"lineNumber":32,"author":{"gitId":"yutingzou"},"content":"        return this.getStatusIcon() + separator + this.getDescription();"},{"lineNumber":33,"author":{"gitId":"yutingzou"},"content":"    }"},{"lineNumber":34,"author":{"gitId":"yutingzou"},"content":"}"}],"authorContributionMap":{"yutingzou":34}},{"path":"src/main/java/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yutingzou"},"content":"import java.lang.reflect.Array;"},{"lineNumber":2,"author":{"gitId":"yutingzou"},"content":"import java.time.LocalDateTime;"},{"lineNumber":3,"author":{"gitId":"yutingzou"},"content":"import java.time.format.DateTimeFormatter;"},{"lineNumber":4,"author":{"gitId":"yutingzou"},"content":"import java.util.ArrayList;"},{"lineNumber":5,"author":{"gitId":"yutingzou"},"content":""},{"lineNumber":6,"author":{"gitId":"yutingzou"},"content":"public class TaskList {"},{"lineNumber":7,"author":{"gitId":"yutingzou"},"content":""},{"lineNumber":8,"author":{"gitId":"yutingzou"},"content":"    private ArrayList\u003cTask\u003e taskList;"},{"lineNumber":9,"author":{"gitId":"yutingzou"},"content":""},{"lineNumber":10,"author":{"gitId":"yutingzou"},"content":"    public TaskList() {"},{"lineNumber":11,"author":{"gitId":"yutingzou"},"content":"        this.taskList \u003d new ArrayList\u003cTask\u003e();"},{"lineNumber":12,"author":{"gitId":"yutingzou"},"content":"    }"},{"lineNumber":13,"author":{"gitId":"yutingzou"},"content":""},{"lineNumber":14,"author":{"gitId":"yutingzou"},"content":"    public TaskList(ArrayList\u003cString\u003e myTasks) {"},{"lineNumber":15,"author":{"gitId":"yutingzou"},"content":"        this.taskList \u003d initialiseList(myTasks);"},{"lineNumber":16,"author":{"gitId":"yutingzou"},"content":"    }"},{"lineNumber":17,"author":{"gitId":"yutingzou"},"content":""},{"lineNumber":18,"author":{"gitId":"yutingzou"},"content":"    private boolean isDone(String icon){"},{"lineNumber":19,"author":{"gitId":"yutingzou"},"content":"        if (icon.equals(\"\\u2713\")){"},{"lineNumber":20,"author":{"gitId":"yutingzou"},"content":"            return true;"},{"lineNumber":21,"author":{"gitId":"yutingzou"},"content":"        }"},{"lineNumber":22,"author":{"gitId":"yutingzou"},"content":"        return false;"},{"lineNumber":23,"author":{"gitId":"yutingzou"},"content":"    }"},{"lineNumber":24,"author":{"gitId":"yutingzou"},"content":""},{"lineNumber":25,"author":{"gitId":"yutingzou"},"content":"    private ArrayList\u003cTask\u003e initialiseList(ArrayList\u003cString\u003e myTasks) {"},{"lineNumber":26,"author":{"gitId":"yutingzou"},"content":"        ArrayList\u003cTask\u003e taskList \u003d new ArrayList\u003c\u003e();"},{"lineNumber":27,"author":{"gitId":"yutingzou"},"content":""},{"lineNumber":28,"author":{"gitId":"yutingzou"},"content":"        // loop through every task in the list"},{"lineNumber":29,"author":{"gitId":"yutingzou"},"content":"        for (String s : myTasks) {"},{"lineNumber":30,"author":{"gitId":"yutingzou"},"content":"            String[] taskByParts \u003d s.split(\" \\\\| \", 3);"},{"lineNumber":31,"author":{"gitId":"yutingzou"},"content":"            String type \u003d taskByParts[0];"},{"lineNumber":32,"author":{"gitId":"yutingzou"},"content":""},{"lineNumber":33,"author":{"gitId":"yutingzou"},"content":"            // check if task type is ToDo"},{"lineNumber":34,"author":{"gitId":"yutingzou"},"content":"            if (type.equals(\"T\")) {"},{"lineNumber":35,"author":{"gitId":"yutingzou"},"content":""},{"lineNumber":36,"author":{"gitId":"yutingzou"},"content":"                // specify details of ToDo"},{"lineNumber":37,"author":{"gitId":"yutingzou"},"content":"                boolean isCompleted \u003d isDone(taskByParts[1]);"},{"lineNumber":38,"author":{"gitId":"yutingzou"},"content":"                String description \u003d taskByParts[2];"},{"lineNumber":39,"author":{"gitId":"yutingzou"},"content":"                Task newTask \u003d new ToDo(description, isCompleted);"},{"lineNumber":40,"author":{"gitId":"yutingzou"},"content":""},{"lineNumber":41,"author":{"gitId":"yutingzou"},"content":"                // add ToDo to list"},{"lineNumber":42,"author":{"gitId":"yutingzou"},"content":"                taskList.add(newTask);"},{"lineNumber":43,"author":{"gitId":"yutingzou"},"content":"            }"},{"lineNumber":44,"author":{"gitId":"yutingzou"},"content":""},{"lineNumber":45,"author":{"gitId":"yutingzou"},"content":"            // check if task type is Deadline"},{"lineNumber":46,"author":{"gitId":"yutingzou"},"content":"            if (type.equals(\"D\")) {"},{"lineNumber":47,"author":{"gitId":"yutingzou"},"content":""},{"lineNumber":48,"author":{"gitId":"yutingzou"},"content":"                // specify details of Deadline"},{"lineNumber":49,"author":{"gitId":"yutingzou"},"content":"                boolean isCompleted \u003d isDone(taskByParts[1]);"},{"lineNumber":50,"author":{"gitId":"yutingzou"},"content":"                String[] details \u003d taskByParts[2].split(\" \\\\| \", 2);"},{"lineNumber":51,"author":{"gitId":"yutingzou"},"content":"                String description \u003d details[0];"},{"lineNumber":52,"author":{"gitId":"yutingzou"},"content":"                String time \u003d details[1];"},{"lineNumber":53,"author":{"gitId":"yutingzou"},"content":""},{"lineNumber":54,"author":{"gitId":"yutingzou"},"content":"                // convert time from String in \"yyyy-M-dd H:mm\" format to LocalDateTime in \"MMM d yyyy hh:mm a\" format"},{"lineNumber":55,"author":{"gitId":"yutingzou"},"content":"                DateTimeFormatter inputFormat \u003d DateTimeFormatter.ofPattern(\"MMM d yyyy hh:mm a\");"},{"lineNumber":56,"author":{"gitId":"yutingzou"},"content":"                LocalDateTime dateTime \u003d LocalDateTime.parse(time, inputFormat);"},{"lineNumber":57,"author":{"gitId":"yutingzou"},"content":"                String by \u003d dateTime.format(DateTimeFormatter.ofPattern(\"yyyy-M-dd H:mm\"));"},{"lineNumber":58,"author":{"gitId":"yutingzou"},"content":""},{"lineNumber":59,"author":{"gitId":"yutingzou"},"content":"                // create new Deadline"},{"lineNumber":60,"author":{"gitId":"yutingzou"},"content":"                Task newTask \u003d new Deadline(description, by, isCompleted);"},{"lineNumber":61,"author":{"gitId":"yutingzou"},"content":"                taskList.add(newTask);"},{"lineNumber":62,"author":{"gitId":"yutingzou"},"content":"            }"},{"lineNumber":63,"author":{"gitId":"yutingzou"},"content":""},{"lineNumber":64,"author":{"gitId":"yutingzou"},"content":"            // check if task type is Event"},{"lineNumber":65,"author":{"gitId":"yutingzou"},"content":"            if (type.equals(\"E\")) {"},{"lineNumber":66,"author":{"gitId":"yutingzou"},"content":""},{"lineNumber":67,"author":{"gitId":"yutingzou"},"content":"                // specify details of Event"},{"lineNumber":68,"author":{"gitId":"yutingzou"},"content":"                boolean isCompleted \u003d isDone(taskByParts[1]);"},{"lineNumber":69,"author":{"gitId":"yutingzou"},"content":"                String[] details \u003d taskByParts[2].split(\" \\\\| \", 2);"},{"lineNumber":70,"author":{"gitId":"yutingzou"},"content":"                String description \u003d details[0];"},{"lineNumber":71,"author":{"gitId":"yutingzou"},"content":"                String time \u003d details[1];"},{"lineNumber":72,"author":{"gitId":"yutingzou"},"content":""},{"lineNumber":73,"author":{"gitId":"yutingzou"},"content":"                // convert time from String in \"yyyy-M-dd H:mm\" format to LocalDateTime in \"MMM d yyyy hh:mm a\" format"},{"lineNumber":74,"author":{"gitId":"yutingzou"},"content":"                DateTimeFormatter inputFormat \u003d DateTimeFormatter.ofPattern(\"MMM d yyyy hh:mm a\");"},{"lineNumber":75,"author":{"gitId":"yutingzou"},"content":"                LocalDateTime dateTime \u003d LocalDateTime.parse(time, inputFormat);"},{"lineNumber":76,"author":{"gitId":"yutingzou"},"content":"                String by \u003d dateTime.format(DateTimeFormatter.ofPattern(\"yyyy-M-dd H:mm\"));"},{"lineNumber":77,"author":{"gitId":"yutingzou"},"content":""},{"lineNumber":78,"author":{"gitId":"yutingzou"},"content":"                // create new Event"},{"lineNumber":79,"author":{"gitId":"yutingzou"},"content":"                Task newTask \u003d new Event(description, by, isCompleted);"},{"lineNumber":80,"author":{"gitId":"yutingzou"},"content":"                taskList.add(newTask);"},{"lineNumber":81,"author":{"gitId":"yutingzou"},"content":"            }"},{"lineNumber":82,"author":{"gitId":"yutingzou"},"content":"        }"},{"lineNumber":83,"author":{"gitId":"yutingzou"},"content":"        return taskList;"},{"lineNumber":84,"author":{"gitId":"yutingzou"},"content":"    }"},{"lineNumber":85,"author":{"gitId":"yutingzou"},"content":""},{"lineNumber":86,"author":{"gitId":"yutingzou"},"content":"    /**"},{"lineNumber":87,"author":{"gitId":"yutingzou"},"content":"     * Return the size of a TaskList."},{"lineNumber":88,"author":{"gitId":"yutingzou"},"content":"     *"},{"lineNumber":89,"author":{"gitId":"yutingzou"},"content":"     * @return Number of tasks in the TaskList."},{"lineNumber":90,"author":{"gitId":"yutingzou"},"content":"     */"},{"lineNumber":91,"author":{"gitId":"yutingzou"},"content":"    public int getSize() {"},{"lineNumber":92,"author":{"gitId":"yutingzou"},"content":"        return this.taskList.size();"},{"lineNumber":93,"author":{"gitId":"yutingzou"},"content":"    }"},{"lineNumber":94,"author":{"gitId":"yutingzou"},"content":""},{"lineNumber":95,"author":{"gitId":"yutingzou"},"content":"    /**"},{"lineNumber":96,"author":{"gitId":"yutingzou"},"content":"     * Return the task by its order number in a TaskList."},{"lineNumber":97,"author":{"gitId":"yutingzou"},"content":"     *"},{"lineNumber":98,"author":{"gitId":"yutingzou"},"content":"     * @param taskNumber Order number of the task of interest."},{"lineNumber":99,"author":{"gitId":"yutingzou"},"content":"     * @return Task of specified order number."},{"lineNumber":100,"author":{"gitId":"yutingzou"},"content":"     */"},{"lineNumber":101,"author":{"gitId":"yutingzou"},"content":"    public Task getTask(int taskNumber) {"},{"lineNumber":102,"author":{"gitId":"yutingzou"},"content":"        Task task \u003d this.taskList.get(taskNumber);"},{"lineNumber":103,"author":{"gitId":"yutingzou"},"content":"        return task;"},{"lineNumber":104,"author":{"gitId":"yutingzou"},"content":"    }"},{"lineNumber":105,"author":{"gitId":"yutingzou"},"content":""},{"lineNumber":106,"author":{"gitId":"yutingzou"},"content":"    /**"},{"lineNumber":107,"author":{"gitId":"yutingzou"},"content":"     * Return the list of tasks in a TaskList."},{"lineNumber":108,"author":{"gitId":"yutingzou"},"content":"     *"},{"lineNumber":109,"author":{"gitId":"yutingzou"},"content":"     * @return List of tasks."},{"lineNumber":110,"author":{"gitId":"yutingzou"},"content":"     */"},{"lineNumber":111,"author":{"gitId":"yutingzou"},"content":"    public ArrayList\u003cTask\u003e getTaskList() {"},{"lineNumber":112,"author":{"gitId":"yutingzou"},"content":"        return this.taskList;"},{"lineNumber":113,"author":{"gitId":"yutingzou"},"content":"    }"},{"lineNumber":114,"author":{"gitId":"yutingzou"},"content":""},{"lineNumber":115,"author":{"gitId":"yutingzou"},"content":"    /**"},{"lineNumber":116,"author":{"gitId":"yutingzou"},"content":"     * Add task into a TaskList."},{"lineNumber":117,"author":{"gitId":"yutingzou"},"content":"     *"},{"lineNumber":118,"author":{"gitId":"yutingzou"},"content":"     * @param task Task to be added."},{"lineNumber":119,"author":{"gitId":"yutingzou"},"content":"     */"},{"lineNumber":120,"author":{"gitId":"yutingzou"},"content":"    public void addTask(Task task) {"},{"lineNumber":121,"author":{"gitId":"yutingzou"},"content":"        this.taskList.add(task);"},{"lineNumber":122,"author":{"gitId":"yutingzou"},"content":"    }"},{"lineNumber":123,"author":{"gitId":"yutingzou"},"content":""},{"lineNumber":124,"author":{"gitId":"yutingzou"},"content":"    /**"},{"lineNumber":125,"author":{"gitId":"yutingzou"},"content":"     * Delete task by its order number from a TaskList."},{"lineNumber":126,"author":{"gitId":"yutingzou"},"content":"     *"},{"lineNumber":127,"author":{"gitId":"yutingzou"},"content":"     * @param taskNumber Order number of the task to be deleted."},{"lineNumber":128,"author":{"gitId":"yutingzou"},"content":"     * @return Task deleted."},{"lineNumber":129,"author":{"gitId":"yutingzou"},"content":"     */"},{"lineNumber":130,"author":{"gitId":"yutingzou"},"content":"    public Task deleteTask(int taskNumber) {"},{"lineNumber":131,"author":{"gitId":"yutingzou"},"content":"        Task curTask \u003d this.taskList.remove(taskNumber - 1);"},{"lineNumber":132,"author":{"gitId":"yutingzou"},"content":"        return curTask;"},{"lineNumber":133,"author":{"gitId":"yutingzou"},"content":"    }"},{"lineNumber":134,"author":{"gitId":"yutingzou"},"content":""},{"lineNumber":135,"author":{"gitId":"yutingzou"},"content":"    /**"},{"lineNumber":136,"author":{"gitId":"yutingzou"},"content":"     * Mark a task in a TaskList as done."},{"lineNumber":137,"author":{"gitId":"yutingzou"},"content":"     *"},{"lineNumber":138,"author":{"gitId":"yutingzou"},"content":"     * @param taskNumber Order number of the task to be completed."},{"lineNumber":139,"author":{"gitId":"yutingzou"},"content":"     * @return Task marked as done."},{"lineNumber":140,"author":{"gitId":"yutingzou"},"content":"     */"},{"lineNumber":141,"author":{"gitId":"yutingzou"},"content":"    public Task markTaskAsDone(int taskNumber) {"},{"lineNumber":142,"author":{"gitId":"yutingzou"},"content":"        Task curTask \u003d this.taskList.get(taskNumber - 1);"},{"lineNumber":143,"author":{"gitId":"yutingzou"},"content":"        curTask.markAsDone();"},{"lineNumber":144,"author":{"gitId":"yutingzou"},"content":"        return curTask;"},{"lineNumber":145,"author":{"gitId":"yutingzou"},"content":"    }"},{"lineNumber":146,"author":{"gitId":"yutingzou"},"content":""},{"lineNumber":147,"author":{"gitId":"yutingzou"},"content":"    /**"},{"lineNumber":148,"author":{"gitId":"yutingzou"},"content":"     * Find tasks with description that contains a keyword specified by user."},{"lineNumber":149,"author":{"gitId":"yutingzou"},"content":"     *"},{"lineNumber":150,"author":{"gitId":"yutingzou"},"content":"     * @param keyword Keyword to look for in tasks\u0027 description."},{"lineNumber":151,"author":{"gitId":"yutingzou"},"content":"     * @return List of tasks that have the keyword in their description."},{"lineNumber":152,"author":{"gitId":"yutingzou"},"content":"     */"},{"lineNumber":153,"author":{"gitId":"yutingzou"},"content":"    public ArrayList\u003cTask\u003e findMatchingTask(String keyword){"},{"lineNumber":154,"author":{"gitId":"yutingzou"},"content":"        ArrayList\u003cTask\u003e matchingTasks \u003d new ArrayList\u003c\u003e ();"},{"lineNumber":155,"author":{"gitId":"yutingzou"},"content":""},{"lineNumber":156,"author":{"gitId":"yutingzou"},"content":"        // loop through every task in the list"},{"lineNumber":157,"author":{"gitId":"yutingzou"},"content":"        for (Task t: this.taskList){"},{"lineNumber":158,"author":{"gitId":"yutingzou"},"content":""},{"lineNumber":159,"author":{"gitId":"yutingzou"},"content":"            // add task to list if its description contains the keyword"},{"lineNumber":160,"author":{"gitId":"yutingzou"},"content":"            if (t.getDescription().contains(keyword)){"},{"lineNumber":161,"author":{"gitId":"yutingzou"},"content":"                matchingTasks.add(t);"},{"lineNumber":162,"author":{"gitId":"yutingzou"},"content":"            }"},{"lineNumber":163,"author":{"gitId":"yutingzou"},"content":"        }"},{"lineNumber":164,"author":{"gitId":"yutingzou"},"content":"        return matchingTasks;"},{"lineNumber":165,"author":{"gitId":"yutingzou"},"content":"    }"},{"lineNumber":166,"author":{"gitId":"yutingzou"},"content":"}"},{"lineNumber":167,"author":{"gitId":"yutingzou"},"content":""}],"authorContributionMap":{"yutingzou":167}},{"path":"src/main/java/ToDo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yutingzou"},"content":"public class ToDo extends Task {"},{"lineNumber":2,"author":{"gitId":"yutingzou"},"content":""},{"lineNumber":3,"author":{"gitId":"yutingzou"},"content":"    private final String type \u003d \"T\";"},{"lineNumber":4,"author":{"gitId":"yutingzou"},"content":""},{"lineNumber":5,"author":{"gitId":"yutingzou"},"content":"    public ToDo(String description) {"},{"lineNumber":6,"author":{"gitId":"yutingzou"},"content":"        this(description, false);"},{"lineNumber":7,"author":{"gitId":"yutingzou"},"content":"    }"},{"lineNumber":8,"author":{"gitId":"yutingzou"},"content":""},{"lineNumber":9,"author":{"gitId":"yutingzou"},"content":"    public ToDo(String description, boolean isDone) {"},{"lineNumber":10,"author":{"gitId":"yutingzou"},"content":"        super(description, isDone);"},{"lineNumber":11,"author":{"gitId":"yutingzou"},"content":"    }"},{"lineNumber":12,"author":{"gitId":"yutingzou"},"content":""},{"lineNumber":13,"author":{"gitId":"yutingzou"},"content":"    public String getType(){"},{"lineNumber":14,"author":{"gitId":"yutingzou"},"content":"        return this.type;"},{"lineNumber":15,"author":{"gitId":"yutingzou"},"content":"    }"},{"lineNumber":16,"author":{"gitId":"yutingzou"},"content":""},{"lineNumber":17,"author":{"gitId":"yutingzou"},"content":"    @Override"},{"lineNumber":18,"author":{"gitId":"yutingzou"},"content":"    public String toString() {"},{"lineNumber":19,"author":{"gitId":"yutingzou"},"content":"        return type + separator + super.toString();"},{"lineNumber":20,"author":{"gitId":"yutingzou"},"content":"    }"},{"lineNumber":21,"author":{"gitId":"yutingzou"},"content":"}"}],"authorContributionMap":{"yutingzou":21}},{"path":"src/main/java/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yutingzou"},"content":"import java.io.InputStream;"},{"lineNumber":2,"author":{"gitId":"yutingzou"},"content":"import java.util.ArrayList;"},{"lineNumber":3,"author":{"gitId":"yutingzou"},"content":"import java.util.Scanner;"},{"lineNumber":4,"author":{"gitId":"yutingzou"},"content":""},{"lineNumber":5,"author":{"gitId":"yutingzou"},"content":"public class Ui {"},{"lineNumber":6,"author":{"gitId":"yutingzou"},"content":"    private final Scanner in \u003d new Scanner(System.in);"},{"lineNumber":7,"author":{"gitId":"yutingzou"},"content":""},{"lineNumber":8,"author":{"gitId":"yutingzou"},"content":"    public Ui(){"},{"lineNumber":9,"author":{"gitId":"yutingzou"},"content":"        startDuke();"},{"lineNumber":10,"author":{"gitId":"yutingzou"},"content":"    }"},{"lineNumber":11,"author":{"gitId":"yutingzou"},"content":""},{"lineNumber":12,"author":{"gitId":"yutingzou"},"content":"    private static void startDuke() {"},{"lineNumber":13,"author":{"gitId":"yutingzou"},"content":"        String logo \u003d \" ____        _        \\n\""},{"lineNumber":14,"author":{"gitId":"yutingzou"},"content":"                + \"|  _ \\\\ _   _| | _____ \\n\""},{"lineNumber":15,"author":{"gitId":"yutingzou"},"content":"                + \"| | | | | | | |/ / _ \\\\\\n\""},{"lineNumber":16,"author":{"gitId":"yutingzou"},"content":"                + \"| |_| | |_| |   \u003c  __/\\n\""},{"lineNumber":17,"author":{"gitId":"yutingzou"},"content":"                + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\";"},{"lineNumber":18,"author":{"gitId":"yutingzou"},"content":"        System.out.println(\"Hello from\\n\" + logo);"},{"lineNumber":19,"author":{"gitId":"yutingzou"},"content":"        System.out.println(\"---------------------------------------------\");"},{"lineNumber":20,"author":{"gitId":"yutingzou"},"content":"        System.out.println(\"Hello! I\u0027m Duke\\n\" + \"What can I do for you?\");"},{"lineNumber":21,"author":{"gitId":"yutingzou"},"content":"        System.out.println(\"---------------------------------------------\");"},{"lineNumber":22,"author":{"gitId":"yutingzou"},"content":"    }"},{"lineNumber":23,"author":{"gitId":"yutingzou"},"content":""},{"lineNumber":24,"author":{"gitId":"yutingzou"},"content":""},{"lineNumber":25,"author":{"gitId":"yutingzou"},"content":"    /**"},{"lineNumber":26,"author":{"gitId":"yutingzou"},"content":"     * Returns text input command by user."},{"lineNumber":27,"author":{"gitId":"yutingzou"},"content":"     * If the user input is null, empty String is returned."},{"lineNumber":28,"author":{"gitId":"yutingzou"},"content":"     *"},{"lineNumber":29,"author":{"gitId":"yutingzou"},"content":"     * @return Input command Line."},{"lineNumber":30,"author":{"gitId":"yutingzou"},"content":"     */"},{"lineNumber":31,"author":{"gitId":"yutingzou"},"content":"    public String getUserCommand(){"},{"lineNumber":32,"author":{"gitId":"yutingzou"},"content":"        String fullInputLine \u003d in.nextLine();"},{"lineNumber":33,"author":{"gitId":"yutingzou"},"content":"        return fullInputLine;"},{"lineNumber":34,"author":{"gitId":"yutingzou"},"content":"    }"},{"lineNumber":35,"author":{"gitId":"yutingzou"},"content":""},{"lineNumber":36,"author":{"gitId":"yutingzou"},"content":"    /**"},{"lineNumber":37,"author":{"gitId":"yutingzou"},"content":"     * Print all tasks contained in a TaskList object."},{"lineNumber":38,"author":{"gitId":"yutingzou"},"content":"     *"},{"lineNumber":39,"author":{"gitId":"yutingzou"},"content":"     * @param taskList TaskList object to be printed."},{"lineNumber":40,"author":{"gitId":"yutingzou"},"content":"     */"},{"lineNumber":41,"author":{"gitId":"yutingzou"},"content":"    public void printMyTask(TaskList taskList) {"},{"lineNumber":42,"author":{"gitId":"yutingzou"},"content":"        System.out.println(\"---------------------------------------------\");"},{"lineNumber":43,"author":{"gitId":"yutingzou"},"content":"        System.out.println(\"Here are the tasks in your list:\");"},{"lineNumber":44,"author":{"gitId":"yutingzou"},"content":""},{"lineNumber":45,"author":{"gitId":"yutingzou"},"content":"        // loop through list and print every task in a new line"},{"lineNumber":46,"author":{"gitId":"yutingzou"},"content":"        int len \u003d taskList.getSize();"},{"lineNumber":47,"author":{"gitId":"yutingzou"},"content":"        for (int i \u003d 1; i \u003c len + 1; i++) {"},{"lineNumber":48,"author":{"gitId":"yutingzou"},"content":"            Task curTask \u003d taskList.getTask(i-1);"},{"lineNumber":49,"author":{"gitId":"yutingzou"},"content":"            System.out.println(i + \". \" + curTask);"},{"lineNumber":50,"author":{"gitId":"yutingzou"},"content":"        }"},{"lineNumber":51,"author":{"gitId":"yutingzou"},"content":""},{"lineNumber":52,"author":{"gitId":"yutingzou"},"content":"        System.out.println(\"---------------------------------------------\");"},{"lineNumber":53,"author":{"gitId":"yutingzou"},"content":"    }"},{"lineNumber":54,"author":{"gitId":"yutingzou"},"content":""},{"lineNumber":55,"author":{"gitId":"yutingzou"},"content":"    /**"},{"lineNumber":56,"author":{"gitId":"yutingzou"},"content":"     * Print matching tasks contained in an ArrayList."},{"lineNumber":57,"author":{"gitId":"yutingzou"},"content":"     *"},{"lineNumber":58,"author":{"gitId":"yutingzou"},"content":"     * @param matchingTask List of tasks to be printed."},{"lineNumber":59,"author":{"gitId":"yutingzou"},"content":"     */"},{"lineNumber":60,"author":{"gitId":"yutingzou"},"content":"    public void printMatchingTask(ArrayList\u003cTask\u003e matchingTask) {"},{"lineNumber":61,"author":{"gitId":"yutingzou"},"content":"        System.out.println(\"---------------------------------------------\");"},{"lineNumber":62,"author":{"gitId":"yutingzou"},"content":"        System.out.println(\"Here are the matching tasks in your list:\");"},{"lineNumber":63,"author":{"gitId":"yutingzou"},"content":""},{"lineNumber":64,"author":{"gitId":"yutingzou"},"content":"        // loop through list and print every task in a new line"},{"lineNumber":65,"author":{"gitId":"yutingzou"},"content":"        int len \u003d matchingTask.size();"},{"lineNumber":66,"author":{"gitId":"yutingzou"},"content":"        for (int i \u003d 1; i \u003c len + 1; i++) {"},{"lineNumber":67,"author":{"gitId":"yutingzou"},"content":"            Task curTask \u003d matchingTask.get(i-1);"},{"lineNumber":68,"author":{"gitId":"yutingzou"},"content":"            System.out.println(i + \". \" + curTask);"},{"lineNumber":69,"author":{"gitId":"yutingzou"},"content":"        }"},{"lineNumber":70,"author":{"gitId":"yutingzou"},"content":""},{"lineNumber":71,"author":{"gitId":"yutingzou"},"content":"        System.out.println(\"---------------------------------------------\");"},{"lineNumber":72,"author":{"gitId":"yutingzou"},"content":"    }"},{"lineNumber":73,"author":{"gitId":"yutingzou"},"content":""},{"lineNumber":74,"author":{"gitId":"yutingzou"},"content":"    public void showGoodbyeMessage(){"},{"lineNumber":75,"author":{"gitId":"yutingzou"},"content":"        System.out.println(\"---------------------------------------------\");"},{"lineNumber":76,"author":{"gitId":"yutingzou"},"content":"        System.out.println(\"Bye. Hope to see you again soon!\");"},{"lineNumber":77,"author":{"gitId":"yutingzou"},"content":"        System.out.println(\"---------------------------------------------\");"},{"lineNumber":78,"author":{"gitId":"yutingzou"},"content":"    }"},{"lineNumber":79,"author":{"gitId":"yutingzou"},"content":""},{"lineNumber":80,"author":{"gitId":"yutingzou"},"content":"    public void showCompleteMessage(Task task){"},{"lineNumber":81,"author":{"gitId":"yutingzou"},"content":"        System.out.println(\"---------------------------------------------\");"},{"lineNumber":82,"author":{"gitId":"yutingzou"},"content":"        System.out.println(\"Nice! I\u0027ve marked this task as done:\");"},{"lineNumber":83,"author":{"gitId":"yutingzou"},"content":"        System.out.println(task);"},{"lineNumber":84,"author":{"gitId":"yutingzou"},"content":"        System.out.println(\"---------------------------------------------\");"},{"lineNumber":85,"author":{"gitId":"yutingzou"},"content":"    }"},{"lineNumber":86,"author":{"gitId":"yutingzou"},"content":""},{"lineNumber":87,"author":{"gitId":"yutingzou"},"content":"    public void showDeleteMessage(Task task, int listSize){"},{"lineNumber":88,"author":{"gitId":"yutingzou"},"content":"        System.out.println(\"---------------------------------------------\");"},{"lineNumber":89,"author":{"gitId":"yutingzou"},"content":"        System.out.println(\"Noted. I\u0027ve removed this task:\");"},{"lineNumber":90,"author":{"gitId":"yutingzou"},"content":"        System.out.println(\"  \" + task);"},{"lineNumber":91,"author":{"gitId":"yutingzou"},"content":"        System.out.println(\"Now you have \" + listSize + \" tasks in the list.\");"},{"lineNumber":92,"author":{"gitId":"yutingzou"},"content":"        System.out.println(\"---------------------------------------------\");"},{"lineNumber":93,"author":{"gitId":"yutingzou"},"content":"    }"},{"lineNumber":94,"author":{"gitId":"yutingzou"},"content":""},{"lineNumber":95,"author":{"gitId":"yutingzou"},"content":"    public void showAddMessage(Task task, int listSize){"},{"lineNumber":96,"author":{"gitId":"yutingzou"},"content":"        System.out.println(\"---------------------------------------------\");"},{"lineNumber":97,"author":{"gitId":"yutingzou"},"content":"        System.out.println(\"Got it. I\u0027ve added this task:\");"},{"lineNumber":98,"author":{"gitId":"yutingzou"},"content":"        System.out.println(\"  \" + task);"},{"lineNumber":99,"author":{"gitId":"yutingzou"},"content":"        System.out.println(\"Now you have \" + listSize + \" tasks in the list.\");"},{"lineNumber":100,"author":{"gitId":"yutingzou"},"content":"        System.out.println(\"---------------------------------------------\");"},{"lineNumber":101,"author":{"gitId":"yutingzou"},"content":"    }"},{"lineNumber":102,"author":{"gitId":"yutingzou"},"content":""},{"lineNumber":103,"author":{"gitId":"yutingzou"},"content":"    public void showLoadingError(){"},{"lineNumber":104,"author":{"gitId":"yutingzou"},"content":"        System.out.println(\"---------------------------------------------\");"},{"lineNumber":105,"author":{"gitId":"yutingzou"},"content":"        System.out.println(\"OOPS!! Duke fails to load, please restart!\");"},{"lineNumber":106,"author":{"gitId":"yutingzou"},"content":"        System.out.println(\"---------------------------------------------\");"},{"lineNumber":107,"author":{"gitId":"yutingzou"},"content":"    }"},{"lineNumber":108,"author":{"gitId":"yutingzou"},"content":""},{"lineNumber":109,"author":{"gitId":"yutingzou"},"content":"    public void showErrorMessage(String message){"},{"lineNumber":110,"author":{"gitId":"yutingzou"},"content":"        System.out.println(\"---------------------------------------------\");"},{"lineNumber":111,"author":{"gitId":"yutingzou"},"content":"        System.out.println(message);"},{"lineNumber":112,"author":{"gitId":"yutingzou"},"content":"        System.out.println(\"---------------------------------------------\");"},{"lineNumber":113,"author":{"gitId":"yutingzou"},"content":"    }"},{"lineNumber":114,"author":{"gitId":"yutingzou"},"content":"}"}],"authorContributionMap":{"yutingzou":114}},{"path":"src/test/java/DukeTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yutingzou"},"content":"import org.junit.jupiter.api.BeforeEach;"},{"lineNumber":2,"author":{"gitId":"yutingzou"},"content":"import org.junit.jupiter.api.Test;"},{"lineNumber":3,"author":{"gitId":"yutingzou"},"content":""},{"lineNumber":4,"author":{"gitId":"yutingzou"},"content":"import java.util.ArrayList;"},{"lineNumber":5,"author":{"gitId":"yutingzou"},"content":""},{"lineNumber":6,"author":{"gitId":"yutingzou"},"content":"import static org.junit.jupiter.api.Assertions.*;"},{"lineNumber":7,"author":{"gitId":"yutingzou"},"content":""},{"lineNumber":8,"author":{"gitId":"yutingzou"},"content":"public class DukeTest {"},{"lineNumber":9,"author":{"gitId":"yutingzou"},"content":""},{"lineNumber":10,"author":{"gitId":"yutingzou"},"content":"    private Parser parser;"},{"lineNumber":11,"author":{"gitId":"yutingzou"},"content":""},{"lineNumber":12,"author":{"gitId":"yutingzou"},"content":"    @BeforeEach"},{"lineNumber":13,"author":{"gitId":"yutingzou"},"content":"    public void setUp() {"},{"lineNumber":14,"author":{"gitId":"yutingzou"},"content":"        parser \u003d new Parser();"},{"lineNumber":15,"author":{"gitId":"yutingzou"},"content":"    }"},{"lineNumber":16,"author":{"gitId":"yutingzou"},"content":""},{"lineNumber":17,"author":{"gitId":"yutingzou"},"content":"    @Test"},{"lineNumber":18,"author":{"gitId":"yutingzou"},"content":"    public void parserOperator_invalidOperator_exceptionThrown() {"},{"lineNumber":19,"author":{"gitId":"yutingzou"},"content":"        try {"},{"lineNumber":20,"author":{"gitId":"yutingzou"},"content":"            String[] invalidInputs \u003d {\"\", \" \", \"abc\", \"hello\", \"add meeting /at 2pm\"};"},{"lineNumber":21,"author":{"gitId":"yutingzou"},"content":""},{"lineNumber":22,"author":{"gitId":"yutingzou"},"content":"            for (String input: invalidInputs){"},{"lineNumber":23,"author":{"gitId":"yutingzou"},"content":"                parser.parseOperator(input);"},{"lineNumber":24,"author":{"gitId":"yutingzou"},"content":"                fail(\"OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\");"},{"lineNumber":25,"author":{"gitId":"yutingzou"},"content":"            }"},{"lineNumber":26,"author":{"gitId":"yutingzou"},"content":"        } catch (DukeException e ) {"},{"lineNumber":27,"author":{"gitId":"yutingzou"},"content":"            String msg \u003d \"OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\";"},{"lineNumber":28,"author":{"gitId":"yutingzou"},"content":"            assertEquals(msg, e.getMessage());"},{"lineNumber":29,"author":{"gitId":"yutingzou"},"content":"        }"},{"lineNumber":30,"author":{"gitId":"yutingzou"},"content":"    }"},{"lineNumber":31,"author":{"gitId":"yutingzou"},"content":""},{"lineNumber":32,"author":{"gitId":"yutingzou"},"content":"    @Test"},{"lineNumber":33,"author":{"gitId":"yutingzou"},"content":"    public void parserAddDeadline_invalidDeadlineDate_exceptionThrown() {"},{"lineNumber":34,"author":{"gitId":"yutingzou"},"content":"        try {"},{"lineNumber":35,"author":{"gitId":"yutingzou"},"content":"            String deadlineDescription \u003d \"deadline homework /by\";"},{"lineNumber":36,"author":{"gitId":"yutingzou"},"content":"            String[] invalidDates \u003d {\"\", \" \", \"abc\", \" 10/1/2020\"};"},{"lineNumber":37,"author":{"gitId":"yutingzou"},"content":""},{"lineNumber":38,"author":{"gitId":"yutingzou"},"content":"            for (String date: invalidDates){"},{"lineNumber":39,"author":{"gitId":"yutingzou"},"content":"                String testCommandText \u003d deadlineDescription + date;"},{"lineNumber":40,"author":{"gitId":"yutingzou"},"content":"                parser.parseAddDeadline(testCommandText);"},{"lineNumber":41,"author":{"gitId":"yutingzou"},"content":"                fail(\"OOPS!! Please follow the correct data/time format: yyyy-M-d H:mm\");"},{"lineNumber":42,"author":{"gitId":"yutingzou"},"content":"            }"},{"lineNumber":43,"author":{"gitId":"yutingzou"},"content":"        } catch (DukeException e ) {"},{"lineNumber":44,"author":{"gitId":"yutingzou"},"content":"            String msg \u003d \"OOPS!! Please follow the correct data/time format: yyyy-M-d H:mm\";"},{"lineNumber":45,"author":{"gitId":"yutingzou"},"content":"            assertEquals(msg, e.getMessage());"},{"lineNumber":46,"author":{"gitId":"yutingzou"},"content":"        }"},{"lineNumber":47,"author":{"gitId":"yutingzou"},"content":"    }"},{"lineNumber":48,"author":{"gitId":"yutingzou"},"content":""},{"lineNumber":49,"author":{"gitId":"yutingzou"},"content":"    @Test"},{"lineNumber":50,"author":{"gitId":"yutingzou"},"content":"    //featureUnderTest_testScenario_expectedBehavior()"},{"lineNumber":51,"author":{"gitId":"yutingzou"},"content":"    public void addTask_addTaskInTestList_containedInTestList(){"},{"lineNumber":52,"author":{"gitId":"yutingzou"},"content":"        TaskList tasks \u003d new TaskList();"},{"lineNumber":53,"author":{"gitId":"yutingzou"},"content":"        Task testTask \u003d new Task(\"homework\");"},{"lineNumber":54,"author":{"gitId":"yutingzou"},"content":"        tasks.addTask(testTask);"},{"lineNumber":55,"author":{"gitId":"yutingzou"},"content":"        assertTrue(tasks.getTaskList().contains(testTask));"},{"lineNumber":56,"author":{"gitId":"yutingzou"},"content":"    }"},{"lineNumber":57,"author":{"gitId":"yutingzou"},"content":"}"}],"authorContributionMap":{"yutingzou":57}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"yutingzou"},"content":"todo have lunch"},{"lineNumber":2,"author":{"gitId":"yutingzou"},"content":"todo borrow a book"},{"lineNumber":3,"author":{"gitId":"yutingzou"},"content":"deadline submit homework /by Sunday"},{"lineNumber":4,"author":{"gitId":"yutingzou"},"content":"list"},{"lineNumber":5,"author":{"gitId":"yutingzou"},"content":"event project meeting /at Mon 2-4pm"},{"lineNumber":6,"author":{"gitId":"yutingzou"},"content":"deadline return book /by Sat 12pm"},{"lineNumber":7,"author":{"gitId":"yutingzou"},"content":"done 2"},{"lineNumber":8,"author":{"gitId":"yutingzou"},"content":"done 5"},{"lineNumber":9,"author":{"gitId":"yutingzou"},"content":"delete 4"},{"lineNumber":10,"author":{"gitId":"yutingzou"},"content":"delete 5"},{"lineNumber":11,"author":{"gitId":"yutingzou"},"content":"list"},{"lineNumber":12,"author":{"gitId":"yutingzou"},"content":"bye"}],"authorContributionMap":{"yutingzou":12}},{"path":"text-ui-test/runtest.sh","fileType":"sh","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"#!/usr/bin/env bash"},{"lineNumber":2,"author":{"gitId":"-"},"content":""},{"lineNumber":3,"author":{"gitId":"-"},"content":"# create bin directory if it doesn\u0027t exist"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if [ ! -d \"../bin\" ]"},{"lineNumber":5,"author":{"gitId":"-"},"content":"then"},{"lineNumber":6,"author":{"gitId":"-"},"content":"    mkdir ../bin"},{"lineNumber":7,"author":{"gitId":"-"},"content":"fi"},{"lineNumber":8,"author":{"gitId":"-"},"content":""},{"lineNumber":9,"author":{"gitId":"-"},"content":"# delete output from previous run"},{"lineNumber":10,"author":{"gitId":"-"},"content":"if [ -e \"./ACTUAL.TXT\" ]"},{"lineNumber":11,"author":{"gitId":"-"},"content":"then"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    rm ACTUAL.TXT"},{"lineNumber":13,"author":{"gitId":"-"},"content":"fi"},{"lineNumber":14,"author":{"gitId":"-"},"content":""},{"lineNumber":15,"author":{"gitId":"-"},"content":"# compile the code into the bin folder, terminates if error occurred"},{"lineNumber":16,"author":{"gitId":"yutingzou"},"content":"if ! javac -cp /Users/zouyuting/CS2103_iP/src/main/java -Xlint:none -d /Users/zouyuting/CS2103_iP/src/main/java /Users/zouyuting/CS2103_iP/src/main/java/Duke.java"},{"lineNumber":17,"author":{"gitId":"-"},"content":"then"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    echo \"********** BUILD FAILURE **********\""},{"lineNumber":19,"author":{"gitId":"-"},"content":"    exit 1"},{"lineNumber":20,"author":{"gitId":"-"},"content":"fi"},{"lineNumber":21,"author":{"gitId":"-"},"content":""},{"lineNumber":22,"author":{"gitId":"-"},"content":"# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"},{"lineNumber":23,"author":{"gitId":"yutingzou"},"content":"java -classpath /Users/zouyuting/CS2103_iP/src/main/java Duke \u003c input.txt \u003e ACTUAL.TXT"},{"lineNumber":24,"author":{"gitId":"-"},"content":""},{"lineNumber":25,"author":{"gitId":"-"},"content":"# convert to UNIX format"},{"lineNumber":26,"author":{"gitId":"-"},"content":"cp EXPECTED.TXT EXPECTED-UNIX.TXT"},{"lineNumber":27,"author":{"gitId":"-"},"content":"dos2unix ACTUAL.TXT EXPECTED-UNIX.TXT"},{"lineNumber":28,"author":{"gitId":"-"},"content":""},{"lineNumber":29,"author":{"gitId":"-"},"content":"# compare the output to the expected output"},{"lineNumber":30,"author":{"gitId":"-"},"content":"diff ACTUAL.TXT EXPECTED-UNIX.TXT"},{"lineNumber":31,"author":{"gitId":"-"},"content":"if [ $? -eq 0 ]"},{"lineNumber":32,"author":{"gitId":"-"},"content":"then"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    echo \"Test result: PASSED\""},{"lineNumber":34,"author":{"gitId":"-"},"content":"    exit 0"},{"lineNumber":35,"author":{"gitId":"-"},"content":"else"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    echo \"Test result: FAILED\""},{"lineNumber":37,"author":{"gitId":"-"},"content":"    exit 1"},{"lineNumber":38,"author":{"gitId":"-"},"content":"fi"}],"authorContributionMap":{"yutingzou":2,"-":36}}]
