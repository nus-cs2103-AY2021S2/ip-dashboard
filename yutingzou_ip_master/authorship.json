[{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027checkstyle\u0027"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027"},{"lineNumber":6,"author":{"gitId":"-"},"content":"}"},{"lineNumber":7,"author":{"gitId":"-"},"content":""},{"lineNumber":8,"author":{"gitId":"-"},"content":"repositories {"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    mavenCentral()"},{"lineNumber":10,"author":{"gitId":"-"},"content":"}"},{"lineNumber":11,"author":{"gitId":"-"},"content":""},{"lineNumber":12,"author":{"gitId":"-"},"content":"dependencies {"},{"lineNumber":13,"author":{"gitId":"yutingzou"},"content":"    implementation \u0027org.junit.jupiter:junit-jupiter:5.4.2\u0027"},{"lineNumber":14,"author":{"gitId":"yutingzou"},"content":"    String javaFxVersion \u003d \u002711\u0027"},{"lineNumber":15,"author":{"gitId":"yutingzou"},"content":""},{"lineNumber":16,"author":{"gitId":"yutingzou"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027"},{"lineNumber":17,"author":{"gitId":"yutingzou"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"},{"lineNumber":18,"author":{"gitId":"yutingzou"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"},{"lineNumber":19,"author":{"gitId":"yutingzou"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027"},{"lineNumber":20,"author":{"gitId":"yutingzou"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"},{"lineNumber":21,"author":{"gitId":"yutingzou"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"},{"lineNumber":22,"author":{"gitId":"yutingzou"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027"},{"lineNumber":23,"author":{"gitId":"yutingzou"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"},{"lineNumber":24,"author":{"gitId":"yutingzou"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"},{"lineNumber":25,"author":{"gitId":"yutingzou"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027"},{"lineNumber":26,"author":{"gitId":"yutingzou"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"},{"lineNumber":27,"author":{"gitId":"yutingzou"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.5.0\u0027"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.5.0\u0027"},{"lineNumber":30,"author":{"gitId":"-"},"content":"}"},{"lineNumber":31,"author":{"gitId":"-"},"content":""},{"lineNumber":32,"author":{"gitId":"-"},"content":"test {"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    useJUnitPlatform()"},{"lineNumber":34,"author":{"gitId":"-"},"content":""},{"lineNumber":35,"author":{"gitId":"-"},"content":"    testLogging {"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\""},{"lineNumber":37,"author":{"gitId":"-"},"content":""},{"lineNumber":38,"author":{"gitId":"-"},"content":"        showExceptions true"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\""},{"lineNumber":40,"author":{"gitId":"-"},"content":"        showCauses true"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        showStackTraces true"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":44,"author":{"gitId":"-"},"content":"}"},{"lineNumber":45,"author":{"gitId":"-"},"content":""},{"lineNumber":46,"author":{"gitId":"-"},"content":"application {"},{"lineNumber":47,"author":{"gitId":"yutingzou"},"content":"    mainClassName \u003d \"Launcher\""},{"lineNumber":48,"author":{"gitId":"-"},"content":"}"},{"lineNumber":49,"author":{"gitId":"-"},"content":""},{"lineNumber":50,"author":{"gitId":"-"},"content":"shadowJar {"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    archiveBaseName \u003d \"duke\""},{"lineNumber":52,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null"},{"lineNumber":53,"author":{"gitId":"-"},"content":"}"},{"lineNumber":54,"author":{"gitId":"-"},"content":""},{"lineNumber":55,"author":{"gitId":"-"},"content":"checkstyle {"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    toolVersion \u003d \u00278.29\u0027"},{"lineNumber":57,"author":{"gitId":"-"},"content":"}"},{"lineNumber":58,"author":{"gitId":"-"},"content":""},{"lineNumber":59,"author":{"gitId":"-"},"content":"run{"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in"},{"lineNumber":61,"author":{"gitId":"-"},"content":"}"}],"authorContributionMap":{"yutingzou":16,"-":45}},{"path":"docs/README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"# User Guide"},{"lineNumber":2,"author":{"gitId":"yutingzou"},"content":"**Duke** is a desktop app for managing personal tasks and schedule, "},{"lineNumber":3,"author":{"gitId":"yutingzou"},"content":"optimised for use via a **Command Line Interface** (CLI) while still having the benefits of a Graphical User Interface (GUI). "},{"lineNumber":4,"author":{"gitId":"yutingzou"},"content":"If you can type fast, Duke can get your tasks management done faster than traditional GUI apps."},{"lineNumber":5,"author":{"gitId":"-"},"content":""},{"lineNumber":6,"author":{"gitId":"-"},"content":"## Features "},{"lineNumber":7,"author":{"gitId":"-"},"content":""},{"lineNumber":8,"author":{"gitId":"yutingzou"},"content":"### Notes about the Command Format"},{"lineNumber":9,"author":{"gitId":"yutingzou"},"content":"* Words in `UPPER_CASE` are the parameters to be supplied by the user. "},{"lineNumber":10,"author":{"gitId":"yutingzou"},"content":"e.g. in `todo DESCRIPTION`, `DESCRIPTION` is a parameter which can be used as `todo read a book`."},{"lineNumber":11,"author":{"gitId":"yutingzou"},"content":""},{"lineNumber":12,"author":{"gitId":"yutingzou"},"content":""},{"lineNumber":13,"author":{"gitId":"yutingzou"},"content":"* The datetime format for add commands that takes in a datetime parameter (such as`deadline DESCRIPTION /by yyyy-mm-dd hh:mm`, `event DESCRIPTION /at yyyy-mm-dd hh:mm`) must strictly follow `yyyy-mm-dd hh:mm`. "},{"lineNumber":14,"author":{"gitId":"yutingzou"},"content":"e.g. Duke will not understand `deadline homework /by 2021/2/28 10:00`."},{"lineNumber":15,"author":{"gitId":"yutingzou"},"content":""},{"lineNumber":16,"author":{"gitId":"yutingzou"},"content":""},{"lineNumber":17,"author":{"gitId":"yutingzou"},"content":"* Similarly, the date format for command `schedule yyyy-mm-dd` must strictly follow `yyyy-mm-dd`. "},{"lineNumber":18,"author":{"gitId":"yutingzou"},"content":""},{"lineNumber":19,"author":{"gitId":"yutingzou"},"content":""},{"lineNumber":20,"author":{"gitId":"yutingzou"},"content":"* Extraneous parameters for commands that do not take in parameters (such as `list`, `bye`) will cause the program to misinterpret the command."},{"lineNumber":21,"author":{"gitId":"yutingzou"},"content":"e.g. if the command specifies `list 123`, Duke will NOT understand it as `list` but will return `OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(`."},{"lineNumber":22,"author":{"gitId":"yutingzou"},"content":"  "},{"lineNumber":23,"author":{"gitId":"yutingzou"},"content":""},{"lineNumber":24,"author":{"gitId":"yutingzou"},"content":"* `N` in duke response `Now you have N tasks in the list.` is arbitrary, and it represents the total number of tasks in the Task List immediately after the current command is executed."},{"lineNumber":25,"author":{"gitId":"yutingzou"},"content":"  "},{"lineNumber":26,"author":{"gitId":"yutingzou"},"content":"### Adding ToDo"},{"lineNumber":27,"author":{"gitId":"yutingzou"},"content":"Adds a ToDo task to the task list."},{"lineNumber":28,"author":{"gitId":"yutingzou"},"content":"### Adding Deadline"},{"lineNumber":29,"author":{"gitId":"yutingzou"},"content":"Adds a Deadline task to the task list."},{"lineNumber":30,"author":{"gitId":"yutingzou"},"content":"### Adding Event"},{"lineNumber":31,"author":{"gitId":"yutingzou"},"content":"Adds an Event task to the task list."},{"lineNumber":32,"author":{"gitId":"yutingzou"},"content":"### Marking Task as Done"},{"lineNumber":33,"author":{"gitId":"yutingzou"},"content":"Marks a task in the task list as done by its order."},{"lineNumber":34,"author":{"gitId":"yutingzou"},"content":"### Deleting Task"},{"lineNumber":35,"author":{"gitId":"yutingzou"},"content":"Deletes a task in the task list by its order."},{"lineNumber":36,"author":{"gitId":"yutingzou"},"content":"### Viewing All Tasks"},{"lineNumber":37,"author":{"gitId":"yutingzou"},"content":"Views all tasks in the task list."},{"lineNumber":38,"author":{"gitId":"yutingzou"},"content":"### Finding Task"},{"lineNumber":39,"author":{"gitId":"yutingzou"},"content":"Finds all tasks that contains a specific keyword in their descriptions in the task list."},{"lineNumber":40,"author":{"gitId":"yutingzou"},"content":"### Viewing Schedule"},{"lineNumber":41,"author":{"gitId":"yutingzou"},"content":"Views all the tasks of a specific date."},{"lineNumber":42,"author":{"gitId":"yutingzou"},"content":"### Exiting the programme"},{"lineNumber":43,"author":{"gitId":"yutingzou"},"content":"Exits the programme."},{"lineNumber":44,"author":{"gitId":"-"},"content":""},{"lineNumber":45,"author":{"gitId":"-"},"content":"## Usage"},{"lineNumber":46,"author":{"gitId":"yutingzou"},"content":"### `todo` - Adding ToDo"},{"lineNumber":47,"author":{"gitId":"yutingzou"},"content":"Adds a ToDo task to the task list."},{"lineNumber":48,"author":{"gitId":"yutingzou"},"content":""},{"lineNumber":49,"author":{"gitId":"yutingzou"},"content":"Example of usage: `todo DESCRIPTION`"},{"lineNumber":50,"author":{"gitId":"-"},"content":""},{"lineNumber":51,"author":{"gitId":"yutingzou"},"content":"Expected outcome:"},{"lineNumber":52,"author":{"gitId":"-"},"content":""},{"lineNumber":53,"author":{"gitId":"yutingzou"},"content":"    Got it. I\u0027ve added this task:"},{"lineNumber":54,"author":{"gitId":"yutingzou"},"content":"      T | ✘ | DESCRIPTION"},{"lineNumber":55,"author":{"gitId":"yutingzou"},"content":"    Now you have N tasks in the list."},{"lineNumber":56,"author":{"gitId":"-"},"content":""},{"lineNumber":57,"author":{"gitId":"yutingzou"},"content":"### `deadline` - Adding Deadline"},{"lineNumber":58,"author":{"gitId":"yutingzou"},"content":"Adds a Deadline task to the task list."},{"lineNumber":59,"author":{"gitId":"-"},"content":""},{"lineNumber":60,"author":{"gitId":"yutingzou"},"content":"Example of usage: `deadline DESCRIPTION /by yyyy-mm-dd hh:mm`"},{"lineNumber":61,"author":{"gitId":"-"},"content":""},{"lineNumber":62,"author":{"gitId":"-"},"content":"Expected outcome:"},{"lineNumber":63,"author":{"gitId":"-"},"content":""},{"lineNumber":64,"author":{"gitId":"yutingzou"},"content":"    Got it. I\u0027ve added this task:"},{"lineNumber":65,"author":{"gitId":"yutingzou"},"content":"      D | ✘ | DESCRIPTION MMM dd yyyy hh:mm"},{"lineNumber":66,"author":{"gitId":"yutingzou"},"content":"    Now you have N tasks in the list."},{"lineNumber":67,"author":{"gitId":"yutingzou"},"content":""},{"lineNumber":68,"author":{"gitId":"yutingzou"},"content":"### `event` - Adding Event"},{"lineNumber":69,"author":{"gitId":"yutingzou"},"content":"Adds an event task to the task list."},{"lineNumber":70,"author":{"gitId":"yutingzou"},"content":""},{"lineNumber":71,"author":{"gitId":"yutingzou"},"content":"Example of usage: `event DESCRIPTION /at yyyy-mm-dd hh:mm`"},{"lineNumber":72,"author":{"gitId":"yutingzou"},"content":""},{"lineNumber":73,"author":{"gitId":"yutingzou"},"content":"Expected outcome:"},{"lineNumber":74,"author":{"gitId":"yutingzou"},"content":""},{"lineNumber":75,"author":{"gitId":"yutingzou"},"content":"    Got it. I\u0027ve added this task:"},{"lineNumber":76,"author":{"gitId":"yutingzou"},"content":"      E | ✘ | DESCRIPTION MMM dd yyyy hh:mm"},{"lineNumber":77,"author":{"gitId":"yutingzou"},"content":"    Now you have N tasks in the list."},{"lineNumber":78,"author":{"gitId":"yutingzou"},"content":""},{"lineNumber":79,"author":{"gitId":"yutingzou"},"content":"### `done` - Marking Task as Done"},{"lineNumber":80,"author":{"gitId":"yutingzou"},"content":"Marks a task in the task list as done by its order."},{"lineNumber":81,"author":{"gitId":"yutingzou"},"content":""},{"lineNumber":82,"author":{"gitId":"yutingzou"},"content":"Example of usage: `done TASK_NUMBER`"},{"lineNumber":83,"author":{"gitId":"yutingzou"},"content":""},{"lineNumber":84,"author":{"gitId":"yutingzou"},"content":"Expected outcome:"},{"lineNumber":85,"author":{"gitId":"yutingzou"},"content":""},{"lineNumber":86,"author":{"gitId":"yutingzou"},"content":"    Nice! I\u0027ve marked this task as done:"},{"lineNumber":87,"author":{"gitId":"yutingzou"},"content":"      T | ✘ | DESCRIPTION"},{"lineNumber":88,"author":{"gitId":"yutingzou"},"content":""},{"lineNumber":89,"author":{"gitId":"yutingzou"},"content":"### `delete` - Deleting Task"},{"lineNumber":90,"author":{"gitId":"yutingzou"},"content":"Deletes a task in the task list by its order."},{"lineNumber":91,"author":{"gitId":"yutingzou"},"content":""},{"lineNumber":92,"author":{"gitId":"yutingzou"},"content":"Example of usage: `delete TASK_NUMBER`"},{"lineNumber":93,"author":{"gitId":"yutingzou"},"content":""},{"lineNumber":94,"author":{"gitId":"yutingzou"},"content":"Expected outcome:"},{"lineNumber":95,"author":{"gitId":"yutingzou"},"content":""},{"lineNumber":96,"author":{"gitId":"yutingzou"},"content":"    Noted. I\u0027ve removed this task:"},{"lineNumber":97,"author":{"gitId":"yutingzou"},"content":"      T | ✘ | DESCRIPTION"},{"lineNumber":98,"author":{"gitId":"yutingzou"},"content":"    Now you have N tasks in the list."},{"lineNumber":99,"author":{"gitId":"yutingzou"},"content":""},{"lineNumber":100,"author":{"gitId":"yutingzou"},"content":"### `list` - Viewing All Tasks"},{"lineNumber":101,"author":{"gitId":"yutingzou"},"content":"Views all tasks in the task list."},{"lineNumber":102,"author":{"gitId":"yutingzou"},"content":""},{"lineNumber":103,"author":{"gitId":"yutingzou"},"content":"Example of usage: `list`"},{"lineNumber":104,"author":{"gitId":"yutingzou"},"content":""},{"lineNumber":105,"author":{"gitId":"yutingzou"},"content":"Expected outcome:"},{"lineNumber":106,"author":{"gitId":"yutingzou"},"content":""},{"lineNumber":107,"author":{"gitId":"yutingzou"},"content":"    Here are the tasks in your list:"},{"lineNumber":108,"author":{"gitId":"yutingzou"},"content":"    1. T | ✘ | DESCRIPTION"},{"lineNumber":109,"author":{"gitId":"yutingzou"},"content":"    2. D | ✘ | DESCRIPTION MMM dd yyyy hh:mm"},{"lineNumber":110,"author":{"gitId":"yutingzou"},"content":"    ..."},{"lineNumber":111,"author":{"gitId":"yutingzou"},"content":""},{"lineNumber":112,"author":{"gitId":"yutingzou"},"content":"### `find` - Finding Task"},{"lineNumber":113,"author":{"gitId":"yutingzou"},"content":"Finds all tasks that contains a specific keyword in their descriptions in the task list."},{"lineNumber":114,"author":{"gitId":"yutingzou"},"content":""},{"lineNumber":115,"author":{"gitId":"yutingzou"},"content":"Example of usage: `find KEYWORD`"},{"lineNumber":116,"author":{"gitId":"yutingzou"},"content":""},{"lineNumber":117,"author":{"gitId":"yutingzou"},"content":"Expected outcome:"},{"lineNumber":118,"author":{"gitId":"yutingzou"},"content":""},{"lineNumber":119,"author":{"gitId":"yutingzou"},"content":"    Here are the matching tasks in your list:"},{"lineNumber":120,"author":{"gitId":"yutingzou"},"content":"    1. T | ✘ | DESCRIPTION"},{"lineNumber":121,"author":{"gitId":"yutingzou"},"content":"    2. D | ✘ | DESCRIPTION MMM dd yyyy hh:mm"},{"lineNumber":122,"author":{"gitId":"yutingzou"},"content":"    ..."},{"lineNumber":123,"author":{"gitId":"yutingzou"},"content":""},{"lineNumber":124,"author":{"gitId":"yutingzou"},"content":"### `schedule` - Viewing Schedule"},{"lineNumber":125,"author":{"gitId":"yutingzou"},"content":"Views all the tasks of a specific date."},{"lineNumber":126,"author":{"gitId":"yutingzou"},"content":""},{"lineNumber":127,"author":{"gitId":"yutingzou"},"content":"Example of usage: `schedule yyyy-mm-dd`"},{"lineNumber":128,"author":{"gitId":"yutingzou"},"content":""},{"lineNumber":129,"author":{"gitId":"yutingzou"},"content":"Expected outcome:"},{"lineNumber":130,"author":{"gitId":"yutingzou"},"content":""},{"lineNumber":131,"author":{"gitId":"yutingzou"},"content":"    Here are the tasks due/on this date: "},{"lineNumber":132,"author":{"gitId":"yutingzou"},"content":"    1. D | ✘ | DESCRIPTION MMM dd yyyy hh:mm"},{"lineNumber":133,"author":{"gitId":"yutingzou"},"content":"    2. E | ✘ | DESCRIPTION MMM dd yyyy hh:mm"},{"lineNumber":134,"author":{"gitId":"yutingzou"},"content":"    ..."},{"lineNumber":135,"author":{"gitId":"yutingzou"},"content":""},{"lineNumber":136,"author":{"gitId":"yutingzou"},"content":"#### or "},{"lineNumber":137,"author":{"gitId":"yutingzou"},"content":""},{"lineNumber":138,"author":{"gitId":"yutingzou"},"content":"    Congrats! It\u0027s a FREE day."},{"lineNumber":139,"author":{"gitId":"yutingzou"},"content":""},{"lineNumber":140,"author":{"gitId":"yutingzou"},"content":"### `bye` - Exiting the programme"},{"lineNumber":141,"author":{"gitId":"yutingzou"},"content":"Exits the programme."},{"lineNumber":142,"author":{"gitId":"yutingzou"},"content":""},{"lineNumber":143,"author":{"gitId":"yutingzou"},"content":"Example of usage: `bye`"},{"lineNumber":144,"author":{"gitId":"-"},"content":""},{"lineNumber":145,"author":{"gitId":"yutingzou"},"content":"### Saving the data"},{"lineNumber":146,"author":{"gitId":"yutingzou"},"content":"TaskList data are saved in the hard disk automatically after any command that changes the data. There is no need to save manually."},{"lineNumber":147,"author":{"gitId":"-"},"content":""}],"authorContributionMap":{"yutingzou":132,"-":15}},{"path":"src/main/java/AddCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yutingzou"},"content":"public class AddCommand extends Command {"},{"lineNumber":2,"author":{"gitId":"yutingzou"},"content":"    public static final String COMMAND_WORD \u003d \"add\";"},{"lineNumber":3,"author":{"gitId":"yutingzou"},"content":"    private String taskType;"},{"lineNumber":4,"author":{"gitId":"yutingzou"},"content":"    private Task taskToAdd;"},{"lineNumber":5,"author":{"gitId":"yutingzou"},"content":"    private String successMessage;"},{"lineNumber":6,"author":{"gitId":"yutingzou"},"content":""},{"lineNumber":7,"author":{"gitId":"yutingzou"},"content":"    /**"},{"lineNumber":8,"author":{"gitId":"yutingzou"},"content":"     * Construct an AddCommand."},{"lineNumber":9,"author":{"gitId":"yutingzou"},"content":"     * @param operator Type of task to be added."},{"lineNumber":10,"author":{"gitId":"yutingzou"},"content":"     * @param taskDetail Details of task to be added."},{"lineNumber":11,"author":{"gitId":"yutingzou"},"content":"     */"},{"lineNumber":12,"author":{"gitId":"yutingzou"},"content":"    public AddCommand(String operator, String... taskDetail) {"},{"lineNumber":13,"author":{"gitId":"yutingzou"},"content":"        String description;"},{"lineNumber":14,"author":{"gitId":"yutingzou"},"content":"        String time;"},{"lineNumber":15,"author":{"gitId":"yutingzou"},"content":""},{"lineNumber":16,"author":{"gitId":"yutingzou"},"content":"        assert taskDetail.length \u003e 0;"},{"lineNumber":17,"author":{"gitId":"yutingzou"},"content":"        // initialise AddCommand with a specific task"},{"lineNumber":18,"author":{"gitId":"yutingzou"},"content":"        switch(operator) {"},{"lineNumber":19,"author":{"gitId":"yutingzou"},"content":"        case \"todo\":"},{"lineNumber":20,"author":{"gitId":"yutingzou"},"content":"            this.taskType \u003d \"todo\";"},{"lineNumber":21,"author":{"gitId":"yutingzou"},"content":"            description \u003d taskDetail[0];"},{"lineNumber":22,"author":{"gitId":"yutingzou"},"content":"            taskToAdd \u003d new ToDo(description);"},{"lineNumber":23,"author":{"gitId":"yutingzou"},"content":"            break;"},{"lineNumber":24,"author":{"gitId":"yutingzou"},"content":"        case \"deadline\":"},{"lineNumber":25,"author":{"gitId":"yutingzou"},"content":"            this.taskType \u003d \"deadline\";"},{"lineNumber":26,"author":{"gitId":"yutingzou"},"content":"            description \u003d taskDetail[0];"},{"lineNumber":27,"author":{"gitId":"yutingzou"},"content":"            time \u003d taskDetail[1];"},{"lineNumber":28,"author":{"gitId":"yutingzou"},"content":"            taskToAdd \u003d new Deadline(description, time);"},{"lineNumber":29,"author":{"gitId":"yutingzou"},"content":"            break;"},{"lineNumber":30,"author":{"gitId":"yutingzou"},"content":"        case \"event\":"},{"lineNumber":31,"author":{"gitId":"yutingzou"},"content":"            this.taskType \u003d \"event\";"},{"lineNumber":32,"author":{"gitId":"yutingzou"},"content":"            description \u003d taskDetail[0];"},{"lineNumber":33,"author":{"gitId":"yutingzou"},"content":"            time \u003d taskDetail[1];"},{"lineNumber":34,"author":{"gitId":"yutingzou"},"content":"            taskToAdd \u003d new Event(description, time);"},{"lineNumber":35,"author":{"gitId":"yutingzou"},"content":"            break;"},{"lineNumber":36,"author":{"gitId":"yutingzou"},"content":"        default:"},{"lineNumber":37,"author":{"gitId":"yutingzou"},"content":"            taskToAdd \u003d new Task(\"\");"},{"lineNumber":38,"author":{"gitId":"yutingzou"},"content":"        }"},{"lineNumber":39,"author":{"gitId":"yutingzou"},"content":"    }"},{"lineNumber":40,"author":{"gitId":"yutingzou"},"content":""},{"lineNumber":41,"author":{"gitId":"yutingzou"},"content":"    @Override"},{"lineNumber":42,"author":{"gitId":"yutingzou"},"content":"    public CommandResult execute() {"},{"lineNumber":43,"author":{"gitId":"yutingzou"},"content":"        super.tasks.addTask(this.taskToAdd);"},{"lineNumber":44,"author":{"gitId":"yutingzou"},"content":"        successMessage \u003d \"Got it. I\u0027ve added this task:\" + \"\\n\" + this.taskToAdd.toString() + \"\\n\""},{"lineNumber":45,"author":{"gitId":"yutingzou"},"content":"                + \"Now you have \" + tasks.getSize() + \" tasks in the list.\";"},{"lineNumber":46,"author":{"gitId":"yutingzou"},"content":"        return new CommandResult(successMessage);"},{"lineNumber":47,"author":{"gitId":"yutingzou"},"content":"    }"},{"lineNumber":48,"author":{"gitId":"yutingzou"},"content":"}"}],"authorContributionMap":{"yutingzou":48}},{"path":"src/main/java/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yutingzou"},"content":"public class Command {"},{"lineNumber":2,"author":{"gitId":"yutingzou"},"content":"    protected TaskList tasks;"},{"lineNumber":3,"author":{"gitId":"yutingzou"},"content":""},{"lineNumber":4,"author":{"gitId":"yutingzou"},"content":"    public Command() {}"},{"lineNumber":5,"author":{"gitId":"yutingzou"},"content":""},{"lineNumber":6,"author":{"gitId":"yutingzou"},"content":"    public void setData(TaskList tasks) {"},{"lineNumber":7,"author":{"gitId":"yutingzou"},"content":"        this.tasks \u003d tasks;"},{"lineNumber":8,"author":{"gitId":"yutingzou"},"content":"    }"},{"lineNumber":9,"author":{"gitId":"yutingzou"},"content":""},{"lineNumber":10,"author":{"gitId":"yutingzou"},"content":"    public CommandResult execute() throws DukeException {"},{"lineNumber":11,"author":{"gitId":"yutingzou"},"content":"        return new CommandResult();"},{"lineNumber":12,"author":{"gitId":"yutingzou"},"content":"    }"},{"lineNumber":13,"author":{"gitId":"yutingzou"},"content":"}"}],"authorContributionMap":{"yutingzou":13}},{"path":"src/main/java/CommandResult.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yutingzou"},"content":"public class CommandResult {"},{"lineNumber":2,"author":{"gitId":"yutingzou"},"content":"    private String feedbackToUser;"},{"lineNumber":3,"author":{"gitId":"yutingzou"},"content":""},{"lineNumber":4,"author":{"gitId":"yutingzou"},"content":"    public CommandResult() {}"},{"lineNumber":5,"author":{"gitId":"yutingzou"},"content":""},{"lineNumber":6,"author":{"gitId":"yutingzou"},"content":"    public CommandResult(String feedbackToUser) {"},{"lineNumber":7,"author":{"gitId":"yutingzou"},"content":"        this.feedbackToUser \u003d feedbackToUser;"},{"lineNumber":8,"author":{"gitId":"yutingzou"},"content":"    }"},{"lineNumber":9,"author":{"gitId":"yutingzou"},"content":""},{"lineNumber":10,"author":{"gitId":"yutingzou"},"content":"    public String getFeedbackToUser() {"},{"lineNumber":11,"author":{"gitId":"yutingzou"},"content":"        return this.feedbackToUser;"},{"lineNumber":12,"author":{"gitId":"yutingzou"},"content":"    }"},{"lineNumber":13,"author":{"gitId":"yutingzou"},"content":"}"}],"authorContributionMap":{"yutingzou":13}},{"path":"src/main/java/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yutingzou"},"content":"import java.time.format.DateTimeFormatter;"},{"lineNumber":2,"author":{"gitId":"yutingzou"},"content":""},{"lineNumber":3,"author":{"gitId":"yutingzou"},"content":"public class Deadline extends Task {"},{"lineNumber":4,"author":{"gitId":"yutingzou"},"content":"    private String type \u003d \"D\";"},{"lineNumber":5,"author":{"gitId":"yutingzou"},"content":""},{"lineNumber":6,"author":{"gitId":"yutingzou"},"content":"    public Deadline(String description, String by) {"},{"lineNumber":7,"author":{"gitId":"yutingzou"},"content":"        this(description, by, false);"},{"lineNumber":8,"author":{"gitId":"yutingzou"},"content":"    }"},{"lineNumber":9,"author":{"gitId":"yutingzou"},"content":""},{"lineNumber":10,"author":{"gitId":"yutingzou"},"content":"    public Deadline(String description, String by, boolean isDone) {"},{"lineNumber":11,"author":{"gitId":"yutingzou"},"content":"        super(description, by, isDone);"},{"lineNumber":12,"author":{"gitId":"yutingzou"},"content":"    }"},{"lineNumber":13,"author":{"gitId":"yutingzou"},"content":""},{"lineNumber":14,"author":{"gitId":"yutingzou"},"content":"    /**"},{"lineNumber":15,"author":{"gitId":"yutingzou"},"content":"     * Return the due time of a Deadline task."},{"lineNumber":16,"author":{"gitId":"yutingzou"},"content":"     *"},{"lineNumber":17,"author":{"gitId":"yutingzou"},"content":"     * @return Due time in String."},{"lineNumber":18,"author":{"gitId":"yutingzou"},"content":"     */"},{"lineNumber":19,"author":{"gitId":"yutingzou"},"content":"    private String getTime() {"},{"lineNumber":20,"author":{"gitId":"yutingzou"},"content":"        // convert dateTime from \"yyyy-m-d hh:mm\" to \"MMM d yyyy hh:mm a\""},{"lineNumber":21,"author":{"gitId":"yutingzou"},"content":"        DateTimeFormatter format \u003d DateTimeFormatter.ofPattern(\"MMM d yyyy hh:mm a\");"},{"lineNumber":22,"author":{"gitId":"yutingzou"},"content":"        String time \u003d this.dateTime.format(format).replace(\"T\", \" \");"},{"lineNumber":23,"author":{"gitId":"yutingzou"},"content":"        return time;"},{"lineNumber":24,"author":{"gitId":"yutingzou"},"content":"    }"},{"lineNumber":25,"author":{"gitId":"yutingzou"},"content":""},{"lineNumber":26,"author":{"gitId":"yutingzou"},"content":"    @Override"},{"lineNumber":27,"author":{"gitId":"yutingzou"},"content":"    public String toString() {"},{"lineNumber":28,"author":{"gitId":"yutingzou"},"content":"        return type + separator + super.toString() + separator + this.getTime();"},{"lineNumber":29,"author":{"gitId":"yutingzou"},"content":"    }"},{"lineNumber":30,"author":{"gitId":"yutingzou"},"content":"}"}],"authorContributionMap":{"yutingzou":30}},{"path":"src/main/java/DeleteCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yutingzou"},"content":"public class DeleteCommand extends Command {"},{"lineNumber":2,"author":{"gitId":"yutingzou"},"content":"    public static final String COMMAND_WORD \u003d \"delete\";"},{"lineNumber":3,"author":{"gitId":"yutingzou"},"content":"    protected String errorMessage;"},{"lineNumber":4,"author":{"gitId":"yutingzou"},"content":"    protected String successMessage;"},{"lineNumber":5,"author":{"gitId":"yutingzou"},"content":"    private int taskNumberToDelete;"},{"lineNumber":6,"author":{"gitId":"yutingzou"},"content":""},{"lineNumber":7,"author":{"gitId":"yutingzou"},"content":"    public DeleteCommand(int taskNumber) {"},{"lineNumber":8,"author":{"gitId":"yutingzou"},"content":"        this.taskNumberToDelete \u003d taskNumber;"},{"lineNumber":9,"author":{"gitId":"yutingzou"},"content":"    }"},{"lineNumber":10,"author":{"gitId":"yutingzou"},"content":""},{"lineNumber":11,"author":{"gitId":"yutingzou"},"content":"    @Override"},{"lineNumber":12,"author":{"gitId":"yutingzou"},"content":"    public CommandResult execute() throws DukeException {"},{"lineNumber":13,"author":{"gitId":"yutingzou"},"content":"        try {"},{"lineNumber":14,"author":{"gitId":"yutingzou"},"content":"            Task taskToDelete \u003d tasks.deleteTask(this.taskNumberToDelete);"},{"lineNumber":15,"author":{"gitId":"yutingzou"},"content":"            successMessage \u003d \"Noted. I\u0027ve removed this task:\" + \"\\n\" + taskToDelete.toString() + \"\\n\""},{"lineNumber":16,"author":{"gitId":"yutingzou"},"content":"                    + \"Now you have \" + tasks.getSize() + \" tasks in the list.\";"},{"lineNumber":17,"author":{"gitId":"yutingzou"},"content":"            return new CommandResult(successMessage);"},{"lineNumber":18,"author":{"gitId":"yutingzou"},"content":"        } catch (DukeException e) {"},{"lineNumber":19,"author":{"gitId":"yutingzou"},"content":"            errorMessage \u003d e.getMessage();"},{"lineNumber":20,"author":{"gitId":"yutingzou"},"content":"            return new CommandResult(errorMessage);"},{"lineNumber":21,"author":{"gitId":"yutingzou"},"content":"        }"},{"lineNumber":22,"author":{"gitId":"yutingzou"},"content":"    }"},{"lineNumber":23,"author":{"gitId":"yutingzou"},"content":"}"}],"authorContributionMap":{"yutingzou":23}},{"path":"src/main/java/DialogBox.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yutingzou"},"content":"import java.io.IOException;"},{"lineNumber":2,"author":{"gitId":"yutingzou"},"content":"import java.util.Collections;"},{"lineNumber":3,"author":{"gitId":"yutingzou"},"content":""},{"lineNumber":4,"author":{"gitId":"yutingzou"},"content":"import javafx.collections.FXCollections;"},{"lineNumber":5,"author":{"gitId":"yutingzou"},"content":"import javafx.collections.ObservableList;"},{"lineNumber":6,"author":{"gitId":"yutingzou"},"content":"import javafx.fxml.FXML;"},{"lineNumber":7,"author":{"gitId":"yutingzou"},"content":"import javafx.fxml.FXMLLoader;"},{"lineNumber":8,"author":{"gitId":"yutingzou"},"content":"import javafx.geometry.Pos;"},{"lineNumber":9,"author":{"gitId":"yutingzou"},"content":"import javafx.scene.Node;"},{"lineNumber":10,"author":{"gitId":"yutingzou"},"content":"import javafx.scene.control.Label;"},{"lineNumber":11,"author":{"gitId":"yutingzou"},"content":"import javafx.scene.control.ScrollPane;"},{"lineNumber":12,"author":{"gitId":"yutingzou"},"content":"import javafx.scene.image.Image;"},{"lineNumber":13,"author":{"gitId":"yutingzou"},"content":"import javafx.scene.image.ImageView;"},{"lineNumber":14,"author":{"gitId":"yutingzou"},"content":"import javafx.scene.layout.HBox;"},{"lineNumber":15,"author":{"gitId":"yutingzou"},"content":"import javafx.scene.layout.VBox;"},{"lineNumber":16,"author":{"gitId":"yutingzou"},"content":""},{"lineNumber":17,"author":{"gitId":"yutingzou"},"content":"/**"},{"lineNumber":18,"author":{"gitId":"yutingzou"},"content":" * An example of a custom control using FXML."},{"lineNumber":19,"author":{"gitId":"yutingzou"},"content":" * This control represents a dialog box consisting of an ImageView to represent the speaker\u0027s face and a label"},{"lineNumber":20,"author":{"gitId":"yutingzou"},"content":" * containing text from the speaker."},{"lineNumber":21,"author":{"gitId":"yutingzou"},"content":" */"},{"lineNumber":22,"author":{"gitId":"yutingzou"},"content":"public class DialogBox extends HBox {"},{"lineNumber":23,"author":{"gitId":"yutingzou"},"content":"    @FXML"},{"lineNumber":24,"author":{"gitId":"yutingzou"},"content":"    private Label dialog;"},{"lineNumber":25,"author":{"gitId":"yutingzou"},"content":"    @FXML"},{"lineNumber":26,"author":{"gitId":"yutingzou"},"content":"    private ImageView displayPicture;"},{"lineNumber":27,"author":{"gitId":"yutingzou"},"content":"    @FXML"},{"lineNumber":28,"author":{"gitId":"yutingzou"},"content":"    private ScrollPane scrollPane;"},{"lineNumber":29,"author":{"gitId":"yutingzou"},"content":"    @FXML"},{"lineNumber":30,"author":{"gitId":"yutingzou"},"content":"    private VBox dialogContainer;"},{"lineNumber":31,"author":{"gitId":"yutingzou"},"content":""},{"lineNumber":32,"author":{"gitId":"yutingzou"},"content":"    private DialogBox(String text, Image img) {"},{"lineNumber":33,"author":{"gitId":"yutingzou"},"content":"        try {"},{"lineNumber":34,"author":{"gitId":"yutingzou"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(\"/view/DialogBox.fxml\"));"},{"lineNumber":35,"author":{"gitId":"yutingzou"},"content":"            fxmlLoader.setController(this);"},{"lineNumber":36,"author":{"gitId":"yutingzou"},"content":"            fxmlLoader.setRoot(this);"},{"lineNumber":37,"author":{"gitId":"yutingzou"},"content":"            fxmlLoader.load();"},{"lineNumber":38,"author":{"gitId":"yutingzou"},"content":"        } catch (IOException e) {"},{"lineNumber":39,"author":{"gitId":"yutingzou"},"content":"            e.printStackTrace();"},{"lineNumber":40,"author":{"gitId":"yutingzou"},"content":"        }"},{"lineNumber":41,"author":{"gitId":"yutingzou"},"content":""},{"lineNumber":42,"author":{"gitId":"yutingzou"},"content":"        dialog.setText(text);"},{"lineNumber":43,"author":{"gitId":"yutingzou"},"content":"        displayPicture.setImage(img);"},{"lineNumber":44,"author":{"gitId":"yutingzou"},"content":"    }"},{"lineNumber":45,"author":{"gitId":"yutingzou"},"content":""},{"lineNumber":46,"author":{"gitId":"yutingzou"},"content":"    /**"},{"lineNumber":47,"author":{"gitId":"yutingzou"},"content":"     * Flips the dialog box such that the ImageView is on the left and text on the right."},{"lineNumber":48,"author":{"gitId":"yutingzou"},"content":"     */"},{"lineNumber":49,"author":{"gitId":"yutingzou"},"content":"    private void flip() {"},{"lineNumber":50,"author":{"gitId":"yutingzou"},"content":"        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());"},{"lineNumber":51,"author":{"gitId":"yutingzou"},"content":"        Collections.reverse(tmp);"},{"lineNumber":52,"author":{"gitId":"yutingzou"},"content":"        getChildren().setAll(tmp);"},{"lineNumber":53,"author":{"gitId":"yutingzou"},"content":"        setAlignment(Pos.TOP_LEFT);"},{"lineNumber":54,"author":{"gitId":"yutingzou"},"content":"    }"},{"lineNumber":55,"author":{"gitId":"yutingzou"},"content":""},{"lineNumber":56,"author":{"gitId":"yutingzou"},"content":"    public static DialogBox getUserDialog(String text, Image img) {"},{"lineNumber":57,"author":{"gitId":"yutingzou"},"content":"        return new DialogBox(text, img);"},{"lineNumber":58,"author":{"gitId":"yutingzou"},"content":"    }"},{"lineNumber":59,"author":{"gitId":"yutingzou"},"content":""},{"lineNumber":60,"author":{"gitId":"yutingzou"},"content":"    public static DialogBox getDukeDialog(String text, Image img) {"},{"lineNumber":61,"author":{"gitId":"yutingzou"},"content":"        var db \u003d new DialogBox(text, img);"},{"lineNumber":62,"author":{"gitId":"yutingzou"},"content":"        db.flip();"},{"lineNumber":63,"author":{"gitId":"yutingzou"},"content":"        return db;"},{"lineNumber":64,"author":{"gitId":"yutingzou"},"content":"    }"},{"lineNumber":65,"author":{"gitId":"yutingzou"},"content":"}"}],"authorContributionMap":{"yutingzou":65}},{"path":"src/main/java/DoneCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yutingzou"},"content":"public class DoneCommand extends Command {"},{"lineNumber":2,"author":{"gitId":"yutingzou"},"content":"    public static final String COMMAND_WORD \u003d \"done\";"},{"lineNumber":3,"author":{"gitId":"yutingzou"},"content":"    private int taskNumberToDone;"},{"lineNumber":4,"author":{"gitId":"yutingzou"},"content":"    private String successMessage;"},{"lineNumber":5,"author":{"gitId":"yutingzou"},"content":"    private String errorMessage;"},{"lineNumber":6,"author":{"gitId":"yutingzou"},"content":""},{"lineNumber":7,"author":{"gitId":"yutingzou"},"content":"    public DoneCommand(int taskNumber) {"},{"lineNumber":8,"author":{"gitId":"yutingzou"},"content":"        this.taskNumberToDone \u003d taskNumber;"},{"lineNumber":9,"author":{"gitId":"yutingzou"},"content":"    }"},{"lineNumber":10,"author":{"gitId":"yutingzou"},"content":""},{"lineNumber":11,"author":{"gitId":"yutingzou"},"content":"    @Override"},{"lineNumber":12,"author":{"gitId":"yutingzou"},"content":"    public CommandResult execute() throws DukeException {"},{"lineNumber":13,"author":{"gitId":"yutingzou"},"content":"        try {"},{"lineNumber":14,"author":{"gitId":"yutingzou"},"content":"            Task taskToDone \u003d tasks.markTaskAsDone(this.taskNumberToDone);"},{"lineNumber":15,"author":{"gitId":"yutingzou"},"content":"            successMessage \u003d \"Nice! I\u0027ve marked this task as done:\" + \"\\n\" + taskToDone.toString();"},{"lineNumber":16,"author":{"gitId":"yutingzou"},"content":"            return new CommandResult(successMessage);"},{"lineNumber":17,"author":{"gitId":"yutingzou"},"content":"        } catch (DukeException e) {"},{"lineNumber":18,"author":{"gitId":"yutingzou"},"content":"            errorMessage \u003d e.getMessage();"},{"lineNumber":19,"author":{"gitId":"yutingzou"},"content":"            return new CommandResult(errorMessage);"},{"lineNumber":20,"author":{"gitId":"yutingzou"},"content":"        }"},{"lineNumber":21,"author":{"gitId":"yutingzou"},"content":"    }"},{"lineNumber":22,"author":{"gitId":"yutingzou"},"content":"}"}],"authorContributionMap":{"yutingzou":22}},{"path":"src/main/java/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"public class Duke {"},{"lineNumber":2,"author":{"gitId":"yutingzou"},"content":""},{"lineNumber":3,"author":{"gitId":"yutingzou"},"content":"    private Storage storage;"},{"lineNumber":4,"author":{"gitId":"yutingzou"},"content":"    private TaskList tasks;"},{"lineNumber":5,"author":{"gitId":"yutingzou"},"content":"    private Ui ui;"},{"lineNumber":6,"author":{"gitId":"yutingzou"},"content":"    private String filePath;"},{"lineNumber":7,"author":{"gitId":"yutingzou"},"content":""},{"lineNumber":8,"author":{"gitId":"yutingzou"},"content":"    /**"},{"lineNumber":9,"author":{"gitId":"yutingzou"},"content":"     * Construct a Duke object."},{"lineNumber":10,"author":{"gitId":"yutingzou"},"content":"     * @param filePath File Path of data storage in hard disk."},{"lineNumber":11,"author":{"gitId":"yutingzou"},"content":"     */"},{"lineNumber":12,"author":{"gitId":"yutingzou"},"content":"    public Duke(String filePath) {"},{"lineNumber":13,"author":{"gitId":"yutingzou"},"content":"        this.filePath \u003d filePath;"},{"lineNumber":14,"author":{"gitId":"yutingzou"},"content":"        this.ui \u003d new Ui();"},{"lineNumber":15,"author":{"gitId":"yutingzou"},"content":"        this.storage \u003d new Storage(filePath);"},{"lineNumber":16,"author":{"gitId":"yutingzou"},"content":"        try {"},{"lineNumber":17,"author":{"gitId":"yutingzou"},"content":"            this.tasks \u003d new TaskList(storage.load());"},{"lineNumber":18,"author":{"gitId":"yutingzou"},"content":"        } catch (DukeException e) {"},{"lineNumber":19,"author":{"gitId":"yutingzou"},"content":"            ui.showLoadingError();"},{"lineNumber":20,"author":{"gitId":"yutingzou"},"content":"            tasks \u003d new TaskList();"},{"lineNumber":21,"author":{"gitId":"yutingzou"},"content":"        }"},{"lineNumber":22,"author":{"gitId":"yutingzou"},"content":"    }"},{"lineNumber":23,"author":{"gitId":"yutingzou"},"content":""},{"lineNumber":24,"author":{"gitId":"yutingzou"},"content":"    private CommandResult executeCommand(Command command) throws DukeException {"},{"lineNumber":25,"author":{"gitId":"yutingzou"},"content":"        command.setData(tasks);"},{"lineNumber":26,"author":{"gitId":"yutingzou"},"content":"        CommandResult result \u003d command.execute();"},{"lineNumber":27,"author":{"gitId":"yutingzou"},"content":"        return result;"},{"lineNumber":28,"author":{"gitId":"yutingzou"},"content":"    }"},{"lineNumber":29,"author":{"gitId":"yutingzou"},"content":""},{"lineNumber":30,"author":{"gitId":"yutingzou"},"content":"    private void exit() {"},{"lineNumber":31,"author":{"gitId":"yutingzou"},"content":"        ui.showGoodbyeMessage();"},{"lineNumber":32,"author":{"gitId":"yutingzou"},"content":"        System.exit(0);"},{"lineNumber":33,"author":{"gitId":"yutingzou"},"content":"    }"},{"lineNumber":34,"author":{"gitId":"yutingzou"},"content":""},{"lineNumber":35,"author":{"gitId":"yutingzou"},"content":"    public String getResponse(String userInput) throws DukeException {"},{"lineNumber":36,"author":{"gitId":"yutingzou"},"content":"        Command command;"},{"lineNumber":37,"author":{"gitId":"yutingzou"},"content":"        try {"},{"lineNumber":38,"author":{"gitId":"yutingzou"},"content":"            Parser commandParser \u003d new Parser();"},{"lineNumber":39,"author":{"gitId":"yutingzou"},"content":"            command \u003d commandParser.parseCommand(userInput);"},{"lineNumber":40,"author":{"gitId":"yutingzou"},"content":"            if (ExitCommand.isExit(command)) {"},{"lineNumber":41,"author":{"gitId":"yutingzou"},"content":"                exit();"},{"lineNumber":42,"author":{"gitId":"yutingzou"},"content":"            }"},{"lineNumber":43,"author":{"gitId":"yutingzou"},"content":"            CommandResult result \u003d executeCommand(command);"},{"lineNumber":44,"author":{"gitId":"yutingzou"},"content":"            storage.updateTaskList(tasks);"},{"lineNumber":45,"author":{"gitId":"yutingzou"},"content":"            String response \u003d ui.showResultToUser(result);"},{"lineNumber":46,"author":{"gitId":"yutingzou"},"content":"            return response;"},{"lineNumber":47,"author":{"gitId":"yutingzou"},"content":"        } catch (DukeException e) {"},{"lineNumber":48,"author":{"gitId":"yutingzou"},"content":"            return ui.showErrorMessage(e.getMessage());"},{"lineNumber":49,"author":{"gitId":"yutingzou"},"content":"        }"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":51,"author":{"gitId":"-"},"content":"}"}],"authorContributionMap":{"yutingzou":48,"-":3}},{"path":"src/main/java/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yutingzou"},"content":"public class DukeException extends Exception {"},{"lineNumber":2,"author":{"gitId":"yutingzou"},"content":"    public DukeException(String errorMessage) {"},{"lineNumber":3,"author":{"gitId":"yutingzou"},"content":"        super(errorMessage);"},{"lineNumber":4,"author":{"gitId":"yutingzou"},"content":"    }"},{"lineNumber":5,"author":{"gitId":"yutingzou"},"content":"}"}],"authorContributionMap":{"yutingzou":5}},{"path":"src/main/java/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yutingzou"},"content":"import java.time.format.DateTimeFormatter;"},{"lineNumber":2,"author":{"gitId":"yutingzou"},"content":""},{"lineNumber":3,"author":{"gitId":"yutingzou"},"content":"public class Event extends Task {"},{"lineNumber":4,"author":{"gitId":"yutingzou"},"content":"    private String type \u003d \"E\";"},{"lineNumber":5,"author":{"gitId":"yutingzou"},"content":""},{"lineNumber":6,"author":{"gitId":"yutingzou"},"content":"    public Event(String description, String at) {"},{"lineNumber":7,"author":{"gitId":"yutingzou"},"content":"        this(description, at, false);"},{"lineNumber":8,"author":{"gitId":"yutingzou"},"content":"    }"},{"lineNumber":9,"author":{"gitId":"yutingzou"},"content":""},{"lineNumber":10,"author":{"gitId":"yutingzou"},"content":"    public Event(String description, String at, boolean isDone) {"},{"lineNumber":11,"author":{"gitId":"yutingzou"},"content":"        super(description, at, isDone);"},{"lineNumber":12,"author":{"gitId":"yutingzou"},"content":"    }"},{"lineNumber":13,"author":{"gitId":"yutingzou"},"content":""},{"lineNumber":14,"author":{"gitId":"yutingzou"},"content":"    /**"},{"lineNumber":15,"author":{"gitId":"yutingzou"},"content":"     * Return the due time of a Deadline task."},{"lineNumber":16,"author":{"gitId":"yutingzou"},"content":"     *"},{"lineNumber":17,"author":{"gitId":"yutingzou"},"content":"     * @return Due time in String."},{"lineNumber":18,"author":{"gitId":"yutingzou"},"content":"     */"},{"lineNumber":19,"author":{"gitId":"yutingzou"},"content":"    private String getTime() {"},{"lineNumber":20,"author":{"gitId":"yutingzou"},"content":"        // convert dateTime from \"yyyy-m-d hh:mm\" to \"MMM d yyyy hh:mm a\""},{"lineNumber":21,"author":{"gitId":"yutingzou"},"content":"        DateTimeFormatter format \u003d DateTimeFormatter.ofPattern(\"MMM d yyyy hh:mm a\");"},{"lineNumber":22,"author":{"gitId":"yutingzou"},"content":"        String time \u003d this.dateTime.format(format).replace(\"T\", \" \");"},{"lineNumber":23,"author":{"gitId":"yutingzou"},"content":"        return time;"},{"lineNumber":24,"author":{"gitId":"yutingzou"},"content":"    }"},{"lineNumber":25,"author":{"gitId":"yutingzou"},"content":""},{"lineNumber":26,"author":{"gitId":"yutingzou"},"content":"    @Override"},{"lineNumber":27,"author":{"gitId":"yutingzou"},"content":"    public String toString() {"},{"lineNumber":28,"author":{"gitId":"yutingzou"},"content":"        return type + separator + super.toString() + separator + getTime();"},{"lineNumber":29,"author":{"gitId":"yutingzou"},"content":"    }"},{"lineNumber":30,"author":{"gitId":"yutingzou"},"content":"}"}],"authorContributionMap":{"yutingzou":30}},{"path":"src/main/java/ExitCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yutingzou"},"content":"public class ExitCommand extends Command {"},{"lineNumber":2,"author":{"gitId":"yutingzou"},"content":"    public static final String COMMAND_WORD \u003d \"exit\";"},{"lineNumber":3,"author":{"gitId":"yutingzou"},"content":"    private static final String EXIT_MESSAGE \u003d \"Bye. Hope to see you again soon!\";"},{"lineNumber":4,"author":{"gitId":"yutingzou"},"content":""},{"lineNumber":5,"author":{"gitId":"yutingzou"},"content":"    public ExitCommand() {}"},{"lineNumber":6,"author":{"gitId":"yutingzou"},"content":""},{"lineNumber":7,"author":{"gitId":"yutingzou"},"content":"    /**"},{"lineNumber":8,"author":{"gitId":"yutingzou"},"content":"     * Check if command is a ExitCommand."},{"lineNumber":9,"author":{"gitId":"yutingzou"},"content":"     * @param command command to be checked."},{"lineNumber":10,"author":{"gitId":"yutingzou"},"content":"     * @return true if command is a ExitCommand; otherwise, false."},{"lineNumber":11,"author":{"gitId":"yutingzou"},"content":"     */"},{"lineNumber":12,"author":{"gitId":"yutingzou"},"content":"    public static boolean isExit(Command command) {"},{"lineNumber":13,"author":{"gitId":"yutingzou"},"content":"        // instanceof returns false if it is null"},{"lineNumber":14,"author":{"gitId":"yutingzou"},"content":"        return command instanceof ExitCommand;"},{"lineNumber":15,"author":{"gitId":"yutingzou"},"content":"    }"},{"lineNumber":16,"author":{"gitId":"yutingzou"},"content":""},{"lineNumber":17,"author":{"gitId":"yutingzou"},"content":"    @Override"},{"lineNumber":18,"author":{"gitId":"yutingzou"},"content":"    public CommandResult execute() throws DukeException {"},{"lineNumber":19,"author":{"gitId":"yutingzou"},"content":"        return new CommandResult(EXIT_MESSAGE);"},{"lineNumber":20,"author":{"gitId":"yutingzou"},"content":"    }"},{"lineNumber":21,"author":{"gitId":"yutingzou"},"content":"}"}],"authorContributionMap":{"yutingzou":21}},{"path":"src/main/java/FindCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yutingzou"},"content":"import java.util.ArrayList;"},{"lineNumber":2,"author":{"gitId":"yutingzou"},"content":""},{"lineNumber":3,"author":{"gitId":"yutingzou"},"content":"public class FindCommand extends Command {"},{"lineNumber":4,"author":{"gitId":"yutingzou"},"content":"    public static final String COMMAND_WORD \u003d \"find\";"},{"lineNumber":5,"author":{"gitId":"yutingzou"},"content":"    private String keyword;"},{"lineNumber":6,"author":{"gitId":"yutingzou"},"content":"    private String successMessage;"},{"lineNumber":7,"author":{"gitId":"yutingzou"},"content":""},{"lineNumber":8,"author":{"gitId":"yutingzou"},"content":"    public FindCommand (String keyword) {"},{"lineNumber":9,"author":{"gitId":"yutingzou"},"content":"        this.keyword \u003d keyword;"},{"lineNumber":10,"author":{"gitId":"yutingzou"},"content":"    }"},{"lineNumber":11,"author":{"gitId":"yutingzou"},"content":""},{"lineNumber":12,"author":{"gitId":"yutingzou"},"content":"    @Override"},{"lineNumber":13,"author":{"gitId":"yutingzou"},"content":"    public CommandResult execute() throws DukeException {"},{"lineNumber":14,"author":{"gitId":"yutingzou"},"content":"        TaskList matchingTasks \u003d tasks.findMatchingTask(this.keyword);"},{"lineNumber":15,"author":{"gitId":"yutingzou"},"content":"        String responseToUser \u003d \"Here are the matching tasks in your list:\";"},{"lineNumber":16,"author":{"gitId":"yutingzou"},"content":""},{"lineNumber":17,"author":{"gitId":"yutingzou"},"content":"        // loop through list and print every task in a new line"},{"lineNumber":18,"author":{"gitId":"yutingzou"},"content":"        int len \u003d matchingTasks.getSize();"},{"lineNumber":19,"author":{"gitId":"yutingzou"},"content":"        ArrayList\u003cTask\u003e tasks \u003d matchingTasks.getTaskList();"},{"lineNumber":20,"author":{"gitId":"yutingzou"},"content":"        for (int i \u003d 1; i \u003c len + 1; i++) {"},{"lineNumber":21,"author":{"gitId":"yutingzou"},"content":"            Task curTask \u003d tasks.get(i - 1);"},{"lineNumber":22,"author":{"gitId":"yutingzou"},"content":"            String toAdd \u003d \"\\n\" + i + \". \" + curTask.toString();"},{"lineNumber":23,"author":{"gitId":"yutingzou"},"content":"            responseToUser +\u003d toAdd;"},{"lineNumber":24,"author":{"gitId":"yutingzou"},"content":"        }"},{"lineNumber":25,"author":{"gitId":"yutingzou"},"content":"        successMessage \u003d responseToUser;"},{"lineNumber":26,"author":{"gitId":"yutingzou"},"content":"        return new CommandResult(successMessage);"},{"lineNumber":27,"author":{"gitId":"yutingzou"},"content":"    }"},{"lineNumber":28,"author":{"gitId":"yutingzou"},"content":"}"}],"authorContributionMap":{"yutingzou":28}},{"path":"src/main/java/Launcher.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yutingzou"},"content":"import javafx.application.Application;"},{"lineNumber":2,"author":{"gitId":"yutingzou"},"content":""},{"lineNumber":3,"author":{"gitId":"yutingzou"},"content":"/**"},{"lineNumber":4,"author":{"gitId":"yutingzou"},"content":" * A launcher class to workaround classpath issues."},{"lineNumber":5,"author":{"gitId":"yutingzou"},"content":" */"},{"lineNumber":6,"author":{"gitId":"yutingzou"},"content":"public class Launcher {"},{"lineNumber":7,"author":{"gitId":"yutingzou"},"content":"    public static void main(String[] args) {"},{"lineNumber":8,"author":{"gitId":"yutingzou"},"content":"        Application.launch(Main.class, args);"},{"lineNumber":9,"author":{"gitId":"yutingzou"},"content":"    }"},{"lineNumber":10,"author":{"gitId":"yutingzou"},"content":"}"}],"authorContributionMap":{"yutingzou":10}},{"path":"src/main/java/ListCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yutingzou"},"content":"import java.util.ArrayList;"},{"lineNumber":2,"author":{"gitId":"yutingzou"},"content":""},{"lineNumber":3,"author":{"gitId":"yutingzou"},"content":"public class ListCommand extends Command {"},{"lineNumber":4,"author":{"gitId":"yutingzou"},"content":"    public static final String COMMAND_WORD \u003d \"list\";"},{"lineNumber":5,"author":{"gitId":"yutingzou"},"content":"    private String successMessage;"},{"lineNumber":6,"author":{"gitId":"yutingzou"},"content":""},{"lineNumber":7,"author":{"gitId":"yutingzou"},"content":"    public ListCommand() {}"},{"lineNumber":8,"author":{"gitId":"yutingzou"},"content":""},{"lineNumber":9,"author":{"gitId":"yutingzou"},"content":"    @Override"},{"lineNumber":10,"author":{"gitId":"yutingzou"},"content":"    public CommandResult execute() {"},{"lineNumber":11,"author":{"gitId":"yutingzou"},"content":"        String responseToUser \u003d \"Here are the tasks in your list:\";"},{"lineNumber":12,"author":{"gitId":"yutingzou"},"content":"        // loop through list and print every task in a new line"},{"lineNumber":13,"author":{"gitId":"yutingzou"},"content":"        int len \u003d tasks.getSize();"},{"lineNumber":14,"author":{"gitId":"yutingzou"},"content":"        ArrayList\u003cTask\u003e myTasks \u003d tasks.getTaskList();"},{"lineNumber":15,"author":{"gitId":"yutingzou"},"content":"        for (int i \u003d 1; i \u003c len + 1; i++) {"},{"lineNumber":16,"author":{"gitId":"yutingzou"},"content":"            Task curTask \u003d myTasks.get(i - 1);"},{"lineNumber":17,"author":{"gitId":"yutingzou"},"content":"            String toAdd \u003d \"\\n\" + i + \". \" + curTask.toString();"},{"lineNumber":18,"author":{"gitId":"yutingzou"},"content":"            responseToUser +\u003d toAdd;"},{"lineNumber":19,"author":{"gitId":"yutingzou"},"content":"        }"},{"lineNumber":20,"author":{"gitId":"yutingzou"},"content":"        successMessage \u003d responseToUser;"},{"lineNumber":21,"author":{"gitId":"yutingzou"},"content":"        return new CommandResult(successMessage);"},{"lineNumber":22,"author":{"gitId":"yutingzou"},"content":"    }"},{"lineNumber":23,"author":{"gitId":"yutingzou"},"content":"}"}],"authorContributionMap":{"yutingzou":23}},{"path":"src/main/java/Main.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yutingzou"},"content":"import java.io.IOException;"},{"lineNumber":2,"author":{"gitId":"yutingzou"},"content":""},{"lineNumber":3,"author":{"gitId":"yutingzou"},"content":"import javafx.application.Application;"},{"lineNumber":4,"author":{"gitId":"yutingzou"},"content":"import javafx.fxml.FXMLLoader;"},{"lineNumber":5,"author":{"gitId":"yutingzou"},"content":"import javafx.scene.Scene;"},{"lineNumber":6,"author":{"gitId":"yutingzou"},"content":"import javafx.scene.layout.AnchorPane;"},{"lineNumber":7,"author":{"gitId":"yutingzou"},"content":"import javafx.stage.Stage;"},{"lineNumber":8,"author":{"gitId":"yutingzou"},"content":""},{"lineNumber":9,"author":{"gitId":"yutingzou"},"content":"/**"},{"lineNumber":10,"author":{"gitId":"yutingzou"},"content":" * A GUI for Duke using FXML."},{"lineNumber":11,"author":{"gitId":"yutingzou"},"content":" */"},{"lineNumber":12,"author":{"gitId":"yutingzou"},"content":"public class Main extends Application {"},{"lineNumber":13,"author":{"gitId":"yutingzou"},"content":"    private Duke duke \u003d new Duke(\"tasks.txt\");"},{"lineNumber":14,"author":{"gitId":"yutingzou"},"content":""},{"lineNumber":15,"author":{"gitId":"yutingzou"},"content":"    @Override"},{"lineNumber":16,"author":{"gitId":"yutingzou"},"content":"    public void start(Stage stage) throws Exception {"},{"lineNumber":17,"author":{"gitId":"yutingzou"},"content":"        try {"},{"lineNumber":18,"author":{"gitId":"yutingzou"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(Main.class.getResource(\"/view/MainWindow.fxml\"));"},{"lineNumber":19,"author":{"gitId":"yutingzou"},"content":"            AnchorPane ap \u003d fxmlLoader.load();"},{"lineNumber":20,"author":{"gitId":"yutingzou"},"content":"            Scene scene \u003d new Scene(ap);"},{"lineNumber":21,"author":{"gitId":"yutingzou"},"content":"            stage.setScene(scene);"},{"lineNumber":22,"author":{"gitId":"yutingzou"},"content":"            stage.setTitle(\"Duke\");"},{"lineNumber":23,"author":{"gitId":"yutingzou"},"content":"            fxmlLoader.\u003cMainWindow\u003egetController().setDuke(duke);"},{"lineNumber":24,"author":{"gitId":"yutingzou"},"content":"            stage.show();"},{"lineNumber":25,"author":{"gitId":"yutingzou"},"content":"        } catch (IOException e) {"},{"lineNumber":26,"author":{"gitId":"yutingzou"},"content":"            e.printStackTrace();"},{"lineNumber":27,"author":{"gitId":"yutingzou"},"content":"        }"},{"lineNumber":28,"author":{"gitId":"yutingzou"},"content":"    }"},{"lineNumber":29,"author":{"gitId":"yutingzou"},"content":"}"}],"authorContributionMap":{"yutingzou":29}},{"path":"src/main/java/MainWindow.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yutingzou"},"content":"import javafx.fxml.FXML;"},{"lineNumber":2,"author":{"gitId":"yutingzou"},"content":"import javafx.scene.control.Button;"},{"lineNumber":3,"author":{"gitId":"yutingzou"},"content":"import javafx.scene.control.ScrollPane;"},{"lineNumber":4,"author":{"gitId":"yutingzou"},"content":"import javafx.scene.control.TextField;"},{"lineNumber":5,"author":{"gitId":"yutingzou"},"content":"import javafx.scene.image.Image;"},{"lineNumber":6,"author":{"gitId":"yutingzou"},"content":"import javafx.scene.layout.AnchorPane;"},{"lineNumber":7,"author":{"gitId":"yutingzou"},"content":"import javafx.scene.layout.VBox;"},{"lineNumber":8,"author":{"gitId":"yutingzou"},"content":""},{"lineNumber":9,"author":{"gitId":"yutingzou"},"content":"/**"},{"lineNumber":10,"author":{"gitId":"yutingzou"},"content":" * Controller for MainWindow. Provides the layout for the other controls."},{"lineNumber":11,"author":{"gitId":"yutingzou"},"content":" */"},{"lineNumber":12,"author":{"gitId":"yutingzou"},"content":"public class MainWindow extends AnchorPane {"},{"lineNumber":13,"author":{"gitId":"yutingzou"},"content":"    @FXML"},{"lineNumber":14,"author":{"gitId":"yutingzou"},"content":"    private ScrollPane scrollPane;"},{"lineNumber":15,"author":{"gitId":"yutingzou"},"content":"    @FXML"},{"lineNumber":16,"author":{"gitId":"yutingzou"},"content":"    private VBox dialogContainer;"},{"lineNumber":17,"author":{"gitId":"yutingzou"},"content":"    @FXML"},{"lineNumber":18,"author":{"gitId":"yutingzou"},"content":"    private VBox dukeGreeting;"},{"lineNumber":19,"author":{"gitId":"yutingzou"},"content":"    @FXML"},{"lineNumber":20,"author":{"gitId":"yutingzou"},"content":"    private TextField userInput;"},{"lineNumber":21,"author":{"gitId":"yutingzou"},"content":"    @FXML"},{"lineNumber":22,"author":{"gitId":"yutingzou"},"content":"    private Button sendButton;"},{"lineNumber":23,"author":{"gitId":"yutingzou"},"content":""},{"lineNumber":24,"author":{"gitId":"yutingzou"},"content":"    private Duke duke;"},{"lineNumber":25,"author":{"gitId":"yutingzou"},"content":""},{"lineNumber":26,"author":{"gitId":"yutingzou"},"content":"    private Image userImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaUser.png\"));"},{"lineNumber":27,"author":{"gitId":"yutingzou"},"content":"    private Image dukeImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaDuke.png\"));"},{"lineNumber":28,"author":{"gitId":"yutingzou"},"content":""},{"lineNumber":29,"author":{"gitId":"yutingzou"},"content":"    /**"},{"lineNumber":30,"author":{"gitId":"yutingzou"},"content":"     * Initialize the main window, with a greeting message from Duke."},{"lineNumber":31,"author":{"gitId":"yutingzou"},"content":"     * The main window contains a scroll bar and dialog boxes."},{"lineNumber":32,"author":{"gitId":"yutingzou"},"content":"     */"},{"lineNumber":33,"author":{"gitId":"yutingzou"},"content":"    @FXML"},{"lineNumber":34,"author":{"gitId":"yutingzou"},"content":"    public void initialize() {"},{"lineNumber":35,"author":{"gitId":"yutingzou"},"content":"        String greetingMessage \u003d \"Hello! I\u0027m Duke\\n\" + \"What can I do for you?\";"},{"lineNumber":36,"author":{"gitId":"yutingzou"},"content":"        dialogContainer.getChildren().add(DialogBox.getDukeDialog(greetingMessage, dukeImage));"},{"lineNumber":37,"author":{"gitId":"yutingzou"},"content":"        scrollPane.setVbarPolicy(ScrollPane.ScrollBarPolicy.ALWAYS);"},{"lineNumber":38,"author":{"gitId":"yutingzou"},"content":"        scrollPane.setFitToWidth(true);"},{"lineNumber":39,"author":{"gitId":"yutingzou"},"content":"        scrollPane.setPannable(true);"},{"lineNumber":40,"author":{"gitId":"yutingzou"},"content":"        scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());"},{"lineNumber":41,"author":{"gitId":"yutingzou"},"content":"    }"},{"lineNumber":42,"author":{"gitId":"yutingzou"},"content":""},{"lineNumber":43,"author":{"gitId":"yutingzou"},"content":"    public void setDuke(Duke d) {"},{"lineNumber":44,"author":{"gitId":"yutingzou"},"content":"        duke \u003d d;"},{"lineNumber":45,"author":{"gitId":"yutingzou"},"content":"    }"},{"lineNumber":46,"author":{"gitId":"yutingzou"},"content":""},{"lineNumber":47,"author":{"gitId":"yutingzou"},"content":"    /**"},{"lineNumber":48,"author":{"gitId":"yutingzou"},"content":"     * Creates two dialog boxes, one echoing user input and the other containing Duke\u0027s reply and then appends them to"},{"lineNumber":49,"author":{"gitId":"yutingzou"},"content":"     * the dialog container. Clears the user input after processing."},{"lineNumber":50,"author":{"gitId":"yutingzou"},"content":"     */"},{"lineNumber":51,"author":{"gitId":"yutingzou"},"content":"    @FXML"},{"lineNumber":52,"author":{"gitId":"yutingzou"},"content":"    private void handleUserInput() throws DukeException {"},{"lineNumber":53,"author":{"gitId":"yutingzou"},"content":"        String input \u003d userInput.getText();"},{"lineNumber":54,"author":{"gitId":"yutingzou"},"content":"        String response \u003d duke.getResponse(input);"},{"lineNumber":55,"author":{"gitId":"yutingzou"},"content":"        dialogContainer.getChildren().addAll("},{"lineNumber":56,"author":{"gitId":"yutingzou"},"content":"                DialogBox.getUserDialog(input, userImage),"},{"lineNumber":57,"author":{"gitId":"yutingzou"},"content":"                DialogBox.getDukeDialog(response, dukeImage)"},{"lineNumber":58,"author":{"gitId":"yutingzou"},"content":"        );"},{"lineNumber":59,"author":{"gitId":"yutingzou"},"content":""},{"lineNumber":60,"author":{"gitId":"yutingzou"},"content":"        userInput.clear();"},{"lineNumber":61,"author":{"gitId":"yutingzou"},"content":"    }"},{"lineNumber":62,"author":{"gitId":"yutingzou"},"content":"}"}],"authorContributionMap":{"yutingzou":62}},{"path":"src/main/java/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yutingzou"},"content":"import java.time.LocalDate;"},{"lineNumber":2,"author":{"gitId":"yutingzou"},"content":"import java.time.format.DateTimeFormatter;"},{"lineNumber":3,"author":{"gitId":"yutingzou"},"content":"import java.time.format.DateTimeParseException;"},{"lineNumber":4,"author":{"gitId":"yutingzou"},"content":"import java.util.ArrayList;"},{"lineNumber":5,"author":{"gitId":"yutingzou"},"content":"import java.util.Locale;"},{"lineNumber":6,"author":{"gitId":"yutingzou"},"content":""},{"lineNumber":7,"author":{"gitId":"yutingzou"},"content":"public class Parser {"},{"lineNumber":8,"author":{"gitId":"yutingzou"},"content":"    private final ArrayList\u003cString\u003e validOperators;"},{"lineNumber":9,"author":{"gitId":"yutingzou"},"content":""},{"lineNumber":10,"author":{"gitId":"yutingzou"},"content":"    public Parser() {"},{"lineNumber":11,"author":{"gitId":"yutingzou"},"content":"        this.validOperators \u003d initialiseOperators();"},{"lineNumber":12,"author":{"gitId":"yutingzou"},"content":"    }"},{"lineNumber":13,"author":{"gitId":"yutingzou"},"content":""},{"lineNumber":14,"author":{"gitId":"yutingzou"},"content":"    private ArrayList\u003cString\u003e initialiseOperators() {"},{"lineNumber":15,"author":{"gitId":"yutingzou"},"content":"        ArrayList\u003cString\u003e operators \u003d new ArrayList\u003c\u003e();"},{"lineNumber":16,"author":{"gitId":"yutingzou"},"content":"        // add valid operators into list"},{"lineNumber":17,"author":{"gitId":"yutingzou"},"content":"        operators.add(\"bye\");"},{"lineNumber":18,"author":{"gitId":"yutingzou"},"content":"        operators.add(\"list\");"},{"lineNumber":19,"author":{"gitId":"yutingzou"},"content":"        operators.add(\"todo\");"},{"lineNumber":20,"author":{"gitId":"yutingzou"},"content":"        operators.add(\"deadline\");"},{"lineNumber":21,"author":{"gitId":"yutingzou"},"content":"        operators.add(\"event\");"},{"lineNumber":22,"author":{"gitId":"yutingzou"},"content":"        operators.add(\"done\");"},{"lineNumber":23,"author":{"gitId":"yutingzou"},"content":"        operators.add(\"delete\");"},{"lineNumber":24,"author":{"gitId":"yutingzou"},"content":"        operators.add(\"find\");"},{"lineNumber":25,"author":{"gitId":"yutingzou"},"content":"        operators.add(\"schedule\");"},{"lineNumber":26,"author":{"gitId":"yutingzou"},"content":"        return operators;"},{"lineNumber":27,"author":{"gitId":"yutingzou"},"content":"    }"},{"lineNumber":28,"author":{"gitId":"yutingzou"},"content":""},{"lineNumber":29,"author":{"gitId":"yutingzou"},"content":"    /**"},{"lineNumber":30,"author":{"gitId":"yutingzou"},"content":"     * Parse the user input to determine what command to execute later."},{"lineNumber":31,"author":{"gitId":"yutingzou"},"content":"     * @param userInput full text command input by user"},{"lineNumber":32,"author":{"gitId":"yutingzou"},"content":"     * @return TaskManager object that contains extracted information from user input."},{"lineNumber":33,"author":{"gitId":"yutingzou"},"content":"     * @throws DukeException If operator or task details are not valid."},{"lineNumber":34,"author":{"gitId":"yutingzou"},"content":"     */"},{"lineNumber":35,"author":{"gitId":"yutingzou"},"content":"    public Command parseCommand(String userInput) throws DukeException {"},{"lineNumber":36,"author":{"gitId":"yutingzou"},"content":"        String operator \u003d parseOperator(userInput);"},{"lineNumber":37,"author":{"gitId":"yutingzou"},"content":"        assert validOperators.contains(operator);"},{"lineNumber":38,"author":{"gitId":"yutingzou"},"content":""},{"lineNumber":39,"author":{"gitId":"yutingzou"},"content":"        // split command text by its first space into 2 parts"},{"lineNumber":40,"author":{"gitId":"yutingzou"},"content":"        String[] taskDetail \u003d userInput.split(\" \", 2);"},{"lineNumber":41,"author":{"gitId":"yutingzou"},"content":"        Command command;"},{"lineNumber":42,"author":{"gitId":"yutingzou"},"content":""},{"lineNumber":43,"author":{"gitId":"yutingzou"},"content":"        // parse command details according to their operator"},{"lineNumber":44,"author":{"gitId":"yutingzou"},"content":"        switch (operator) {"},{"lineNumber":45,"author":{"gitId":"yutingzou"},"content":"        case \"bye\":"},{"lineNumber":46,"author":{"gitId":"yutingzou"},"content":"            command \u003d new ExitCommand();"},{"lineNumber":47,"author":{"gitId":"yutingzou"},"content":"            break;"},{"lineNumber":48,"author":{"gitId":"yutingzou"},"content":"        case \"done\":"},{"lineNumber":49,"author":{"gitId":"yutingzou"},"content":"            int taskNumberToComplete \u003d parseDone(taskDetail);"},{"lineNumber":50,"author":{"gitId":"yutingzou"},"content":"            command \u003d new DoneCommand(taskNumberToComplete);"},{"lineNumber":51,"author":{"gitId":"yutingzou"},"content":"            break;"},{"lineNumber":52,"author":{"gitId":"yutingzou"},"content":"        case \"delete\":"},{"lineNumber":53,"author":{"gitId":"yutingzou"},"content":"            int taskNumberToDelete \u003d parseDelete(taskDetail);"},{"lineNumber":54,"author":{"gitId":"yutingzou"},"content":"            command \u003d new DeleteCommand(taskNumberToDelete);"},{"lineNumber":55,"author":{"gitId":"yutingzou"},"content":"            break;"},{"lineNumber":56,"author":{"gitId":"yutingzou"},"content":"        case \"todo\":"},{"lineNumber":57,"author":{"gitId":"yutingzou"},"content":"            String description \u003d parseAddToDo(taskDetail);"},{"lineNumber":58,"author":{"gitId":"yutingzou"},"content":"            command \u003d new AddCommand(operator, description);"},{"lineNumber":59,"author":{"gitId":"yutingzou"},"content":"            break;"},{"lineNumber":60,"author":{"gitId":"yutingzou"},"content":"        case \"deadline\":"},{"lineNumber":61,"author":{"gitId":"yutingzou"},"content":"            String[] detailsDeadline \u003d parseAddDeadline(taskDetail);"},{"lineNumber":62,"author":{"gitId":"yutingzou"},"content":"            command \u003d new AddCommand(operator, detailsDeadline);"},{"lineNumber":63,"author":{"gitId":"yutingzou"},"content":"            break;"},{"lineNumber":64,"author":{"gitId":"yutingzou"},"content":"        case \"event\":"},{"lineNumber":65,"author":{"gitId":"yutingzou"},"content":"            String[] detailsEvent \u003d parseAddEvent(taskDetail);"},{"lineNumber":66,"author":{"gitId":"yutingzou"},"content":"            command \u003d new AddCommand(operator, detailsEvent);"},{"lineNumber":67,"author":{"gitId":"yutingzou"},"content":"            break;"},{"lineNumber":68,"author":{"gitId":"yutingzou"},"content":"        case \"list\":"},{"lineNumber":69,"author":{"gitId":"yutingzou"},"content":"            command \u003d new ListCommand();"},{"lineNumber":70,"author":{"gitId":"yutingzou"},"content":"            break;"},{"lineNumber":71,"author":{"gitId":"yutingzou"},"content":"        case \"find\":"},{"lineNumber":72,"author":{"gitId":"yutingzou"},"content":"            String keyword \u003d parseFindTask(taskDetail);"},{"lineNumber":73,"author":{"gitId":"yutingzou"},"content":"            command \u003d new FindCommand(keyword);"},{"lineNumber":74,"author":{"gitId":"yutingzou"},"content":"            break;"},{"lineNumber":75,"author":{"gitId":"yutingzou"},"content":"        case \"schedule\":"},{"lineNumber":76,"author":{"gitId":"yutingzou"},"content":"            String targetDate \u003d parseSchedule(taskDetail);"},{"lineNumber":77,"author":{"gitId":"yutingzou"},"content":"            command \u003d new ScheduleCommand(targetDate);"},{"lineNumber":78,"author":{"gitId":"yutingzou"},"content":"            break;"},{"lineNumber":79,"author":{"gitId":"yutingzou"},"content":"        default:"},{"lineNumber":80,"author":{"gitId":"yutingzou"},"content":"            command \u003d new Command();"},{"lineNumber":81,"author":{"gitId":"yutingzou"},"content":"        }"},{"lineNumber":82,"author":{"gitId":"yutingzou"},"content":"        return command;"},{"lineNumber":83,"author":{"gitId":"yutingzou"},"content":"    }"},{"lineNumber":84,"author":{"gitId":"yutingzou"},"content":""},{"lineNumber":85,"author":{"gitId":"yutingzou"},"content":"    /**"},{"lineNumber":86,"author":{"gitId":"yutingzou"},"content":"     * Parse the operator input by user."},{"lineNumber":87,"author":{"gitId":"yutingzou"},"content":"     *"},{"lineNumber":88,"author":{"gitId":"yutingzou"},"content":"     * @param userInput full text command input by user."},{"lineNumber":89,"author":{"gitId":"yutingzou"},"content":"     * @return Extracted operator."},{"lineNumber":90,"author":{"gitId":"yutingzou"},"content":"     * @throws DukeException If operator is not valid."},{"lineNumber":91,"author":{"gitId":"yutingzou"},"content":"     */"},{"lineNumber":92,"author":{"gitId":"yutingzou"},"content":"    private String parseOperator(String userInput) throws DukeException {"},{"lineNumber":93,"author":{"gitId":"yutingzou"},"content":"        // split command text by its first space into 2 parts"},{"lineNumber":94,"author":{"gitId":"yutingzou"},"content":"        String[] commandParts \u003d userInput.split(\" \", 2);"},{"lineNumber":95,"author":{"gitId":"yutingzou"},"content":"        // parse operator in the first word of a text command"},{"lineNumber":96,"author":{"gitId":"yutingzou"},"content":"        String operator \u003d commandParts[0];"},{"lineNumber":97,"author":{"gitId":"yutingzou"},"content":"        if (!isValidOperator(operator)) {"},{"lineNumber":98,"author":{"gitId":"yutingzou"},"content":"            throw new DukeException(\"OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\");"},{"lineNumber":99,"author":{"gitId":"yutingzou"},"content":"        }"},{"lineNumber":100,"author":{"gitId":"yutingzou"},"content":"        return operator;"},{"lineNumber":101,"author":{"gitId":"yutingzou"},"content":"    }"},{"lineNumber":102,"author":{"gitId":"yutingzou"},"content":""},{"lineNumber":103,"author":{"gitId":"yutingzou"},"content":"    private boolean isValidOperator(String operator) {"},{"lineNumber":104,"author":{"gitId":"yutingzou"},"content":"        return validOperators.contains(operator.toLowerCase());"},{"lineNumber":105,"author":{"gitId":"yutingzou"},"content":"    }"},{"lineNumber":106,"author":{"gitId":"yutingzou"},"content":""},{"lineNumber":107,"author":{"gitId":"yutingzou"},"content":""},{"lineNumber":108,"author":{"gitId":"yutingzou"},"content":"    /**"},{"lineNumber":109,"author":{"gitId":"yutingzou"},"content":"     * Return the task number to be marked as done."},{"lineNumber":110,"author":{"gitId":"yutingzou"},"content":"     *"},{"lineNumber":111,"author":{"gitId":"yutingzou"},"content":"     * @param taskDetail full text command input by user."},{"lineNumber":112,"author":{"gitId":"yutingzou"},"content":"     * @return Task number."},{"lineNumber":113,"author":{"gitId":"yutingzou"},"content":"     * @throws DukeException If task number is empty or a non-integer is entered."},{"lineNumber":114,"author":{"gitId":"yutingzou"},"content":"     */"},{"lineNumber":115,"author":{"gitId":"yutingzou"},"content":"    private int parseDone(String[] taskDetail) throws DukeException {"},{"lineNumber":116,"author":{"gitId":"yutingzou"},"content":"        // parse task number"},{"lineNumber":117,"author":{"gitId":"yutingzou"},"content":"        assert taskDetail.length \u003e 0;"},{"lineNumber":118,"author":{"gitId":"yutingzou"},"content":"        if (taskDetail.length \u003d\u003d 1) {"},{"lineNumber":119,"author":{"gitId":"yutingzou"},"content":"            throw new DukeException(\"OOPS!!! Please specify the task number.\");"},{"lineNumber":120,"author":{"gitId":"yutingzou"},"content":"        } else {"},{"lineNumber":121,"author":{"gitId":"yutingzou"},"content":"            try {"},{"lineNumber":122,"author":{"gitId":"yutingzou"},"content":"                int taskNo \u003d Integer.valueOf(taskDetail[1]);"},{"lineNumber":123,"author":{"gitId":"yutingzou"},"content":"                return taskNo;"},{"lineNumber":124,"author":{"gitId":"yutingzou"},"content":"            } catch (Exception e) {"},{"lineNumber":125,"author":{"gitId":"yutingzou"},"content":"                throw new DukeException(\"OOPS!!! The task cannot be found.\");"},{"lineNumber":126,"author":{"gitId":"yutingzou"},"content":"            }"},{"lineNumber":127,"author":{"gitId":"yutingzou"},"content":"        }"},{"lineNumber":128,"author":{"gitId":"yutingzou"},"content":"    }"},{"lineNumber":129,"author":{"gitId":"yutingzou"},"content":""},{"lineNumber":130,"author":{"gitId":"yutingzou"},"content":"    /**"},{"lineNumber":131,"author":{"gitId":"yutingzou"},"content":"     * Return the task number to be deleted."},{"lineNumber":132,"author":{"gitId":"yutingzou"},"content":"     *"},{"lineNumber":133,"author":{"gitId":"yutingzou"},"content":"     * @param taskDetail full text command input by user."},{"lineNumber":134,"author":{"gitId":"yutingzou"},"content":"     * @return Task number."},{"lineNumber":135,"author":{"gitId":"yutingzou"},"content":"     * @throws DukeException If task number is empty or a non-integer is entered."},{"lineNumber":136,"author":{"gitId":"yutingzou"},"content":"     */"},{"lineNumber":137,"author":{"gitId":"yutingzou"},"content":"    private int parseDelete(String[] taskDetail) throws DukeException {"},{"lineNumber":138,"author":{"gitId":"yutingzou"},"content":"        // parse task number"},{"lineNumber":139,"author":{"gitId":"yutingzou"},"content":"        assert taskDetail.length \u003e 0;"},{"lineNumber":140,"author":{"gitId":"yutingzou"},"content":"        if (taskDetail.length \u003d\u003d 1) {"},{"lineNumber":141,"author":{"gitId":"yutingzou"},"content":"            throw new DukeException(\"OOPS!!! Please specify the task number.\");"},{"lineNumber":142,"author":{"gitId":"yutingzou"},"content":"        } else {"},{"lineNumber":143,"author":{"gitId":"yutingzou"},"content":"            try {"},{"lineNumber":144,"author":{"gitId":"yutingzou"},"content":"                int taskNo \u003d Integer.valueOf(taskDetail[1]);"},{"lineNumber":145,"author":{"gitId":"yutingzou"},"content":"                return taskNo;"},{"lineNumber":146,"author":{"gitId":"yutingzou"},"content":"            } catch (Exception e) {"},{"lineNumber":147,"author":{"gitId":"yutingzou"},"content":"                throw new DukeException(\"OOPS!!! The task cannot be found.\");"},{"lineNumber":148,"author":{"gitId":"yutingzou"},"content":"            }"},{"lineNumber":149,"author":{"gitId":"yutingzou"},"content":"        }"},{"lineNumber":150,"author":{"gitId":"yutingzou"},"content":"    }"},{"lineNumber":151,"author":{"gitId":"yutingzou"},"content":""},{"lineNumber":152,"author":{"gitId":"yutingzou"},"content":"    /**"},{"lineNumber":153,"author":{"gitId":"yutingzou"},"content":"     * Return the description of a ToDo task to be added specified by user."},{"lineNumber":154,"author":{"gitId":"yutingzou"},"content":"     *"},{"lineNumber":155,"author":{"gitId":"yutingzou"},"content":"     * @param taskDetail full text command input by user."},{"lineNumber":156,"author":{"gitId":"yutingzou"},"content":"     * @return Description of ToDo."},{"lineNumber":157,"author":{"gitId":"yutingzou"},"content":"     * @throws DukeException If description is empty."},{"lineNumber":158,"author":{"gitId":"yutingzou"},"content":"     */"},{"lineNumber":159,"author":{"gitId":"yutingzou"},"content":"    private String parseAddToDo(String[] taskDetail) throws DukeException {"},{"lineNumber":160,"author":{"gitId":"yutingzou"},"content":"        // parse description of ToDo"},{"lineNumber":161,"author":{"gitId":"yutingzou"},"content":"        assert taskDetail.length \u003e 0;"},{"lineNumber":162,"author":{"gitId":"yutingzou"},"content":"        if (taskDetail.length \u003d\u003d 1 || taskDetail[1].isBlank()) {"},{"lineNumber":163,"author":{"gitId":"yutingzou"},"content":"            throw new DukeException(\"OOPS!!! The description of a todo cannot be empty.\");"},{"lineNumber":164,"author":{"gitId":"yutingzou"},"content":"        } else {"},{"lineNumber":165,"author":{"gitId":"yutingzou"},"content":"            String description \u003d taskDetail[1];"},{"lineNumber":166,"author":{"gitId":"yutingzou"},"content":"            return description;"},{"lineNumber":167,"author":{"gitId":"yutingzou"},"content":"        }"},{"lineNumber":168,"author":{"gitId":"yutingzou"},"content":"    }"},{"lineNumber":169,"author":{"gitId":"yutingzou"},"content":""},{"lineNumber":170,"author":{"gitId":"yutingzou"},"content":"    /**"},{"lineNumber":171,"author":{"gitId":"yutingzou"},"content":"     * Return the description and due time of a Deadline task to be added specified by user."},{"lineNumber":172,"author":{"gitId":"yutingzou"},"content":"     *"},{"lineNumber":173,"author":{"gitId":"yutingzou"},"content":"     * @param taskDetail full text command input by user."},{"lineNumber":174,"author":{"gitId":"yutingzou"},"content":"     * @return List containing description and due time of Deadline."},{"lineNumber":175,"author":{"gitId":"yutingzou"},"content":"     * @throws DukeException If description is empty or due time does not follow \u0027yyyy-M-d H:mm\u0027 format."},{"lineNumber":176,"author":{"gitId":"yutingzou"},"content":"     */"},{"lineNumber":177,"author":{"gitId":"yutingzou"},"content":"    private String[] parseAddDeadline(String[] taskDetail) throws DukeException {"},{"lineNumber":178,"author":{"gitId":"yutingzou"},"content":"        // parse details of Deadline"},{"lineNumber":179,"author":{"gitId":"yutingzou"},"content":"        assert taskDetail.length \u003e 0;"},{"lineNumber":180,"author":{"gitId":"yutingzou"},"content":"        if (taskDetail.length \u003d\u003d 1 || taskDetail[1].isBlank()) {"},{"lineNumber":181,"author":{"gitId":"yutingzou"},"content":"            throw new DukeException(\"OOPS!!! The description of a deadline cannot be empty.\");"},{"lineNumber":182,"author":{"gitId":"yutingzou"},"content":"        } else {"},{"lineNumber":183,"author":{"gitId":"yutingzou"},"content":"            // split details to description and time"},{"lineNumber":184,"author":{"gitId":"yutingzou"},"content":"            String[] details \u003d taskDetail[1].split(\" /by \", 2);"},{"lineNumber":185,"author":{"gitId":"yutingzou"},"content":"            if (details.length \u003d\u003d 1 || !isValidTime(details[1])) {"},{"lineNumber":186,"author":{"gitId":"yutingzou"},"content":"                throw new DukeException(\"OOPS!! Please follow the correct date/time format: yyyy-MM-dd HH:mm\");"},{"lineNumber":187,"author":{"gitId":"yutingzou"},"content":"            }"},{"lineNumber":188,"author":{"gitId":"yutingzou"},"content":"            String description \u003d details[0];"},{"lineNumber":189,"author":{"gitId":"yutingzou"},"content":"            String by \u003d details[1];"},{"lineNumber":190,"author":{"gitId":"yutingzou"},"content":"            return new String[] {description, by};"},{"lineNumber":191,"author":{"gitId":"yutingzou"},"content":"        }"},{"lineNumber":192,"author":{"gitId":"yutingzou"},"content":"    }"},{"lineNumber":193,"author":{"gitId":"yutingzou"},"content":""},{"lineNumber":194,"author":{"gitId":"yutingzou"},"content":"    /**"},{"lineNumber":195,"author":{"gitId":"yutingzou"},"content":"     * Return the description and time of an Event task to be added specified by user."},{"lineNumber":196,"author":{"gitId":"yutingzou"},"content":"     *"},{"lineNumber":197,"author":{"gitId":"yutingzou"},"content":"     * @param taskDetail full text command input by user."},{"lineNumber":198,"author":{"gitId":"yutingzou"},"content":"     * @return List containing description and time of event."},{"lineNumber":199,"author":{"gitId":"yutingzou"},"content":"     * @throws DukeException If description is empty or time does not follow \u0027yyyy-M-d H:mm\u0027 format."},{"lineNumber":200,"author":{"gitId":"yutingzou"},"content":"     */"},{"lineNumber":201,"author":{"gitId":"yutingzou"},"content":"    private String[] parseAddEvent(String[] taskDetail) throws DukeException {"},{"lineNumber":202,"author":{"gitId":"yutingzou"},"content":"        // parse details of Event"},{"lineNumber":203,"author":{"gitId":"yutingzou"},"content":"        assert taskDetail.length \u003e 0;"},{"lineNumber":204,"author":{"gitId":"yutingzou"},"content":"        if (taskDetail.length \u003d\u003d 1 || taskDetail[1].isBlank()) {"},{"lineNumber":205,"author":{"gitId":"yutingzou"},"content":"            throw new DukeException(\"OOPS!!! The description of an event cannot be empty.\");"},{"lineNumber":206,"author":{"gitId":"yutingzou"},"content":"        } else {"},{"lineNumber":207,"author":{"gitId":"yutingzou"},"content":"            // split details to description and time"},{"lineNumber":208,"author":{"gitId":"yutingzou"},"content":"            String[] details \u003d taskDetail[1].split(\" /at \", 2);"},{"lineNumber":209,"author":{"gitId":"yutingzou"},"content":"            if (details.length \u003d\u003d 1 || !isValidTime(details[1])) {"},{"lineNumber":210,"author":{"gitId":"yutingzou"},"content":"                throw new DukeException(\"OOPS!! Please follow the correct date/time format: yyyy-MM-dd HH:mm\");"},{"lineNumber":211,"author":{"gitId":"yutingzou"},"content":"            }"},{"lineNumber":212,"author":{"gitId":"yutingzou"},"content":"            String description \u003d details[0];"},{"lineNumber":213,"author":{"gitId":"yutingzou"},"content":"            String at \u003d details[1];"},{"lineNumber":214,"author":{"gitId":"yutingzou"},"content":"            return new String[] {description, at};"},{"lineNumber":215,"author":{"gitId":"yutingzou"},"content":"        }"},{"lineNumber":216,"author":{"gitId":"yutingzou"},"content":"    }"},{"lineNumber":217,"author":{"gitId":"yutingzou"},"content":""},{"lineNumber":218,"author":{"gitId":"yutingzou"},"content":"    /**"},{"lineNumber":219,"author":{"gitId":"yutingzou"},"content":"     * Return the keyword specified by user."},{"lineNumber":220,"author":{"gitId":"yutingzou"},"content":"     *"},{"lineNumber":221,"author":{"gitId":"yutingzou"},"content":"     * @param taskDetail full text command input by user."},{"lineNumber":222,"author":{"gitId":"yutingzou"},"content":"     * @return Keyword to be used for finding matching tasks."},{"lineNumber":223,"author":{"gitId":"yutingzou"},"content":"     * @throws DukeException If keyword is empty."},{"lineNumber":224,"author":{"gitId":"yutingzou"},"content":"     */"},{"lineNumber":225,"author":{"gitId":"yutingzou"},"content":"    private String parseFindTask(String[] taskDetail) throws DukeException {"},{"lineNumber":226,"author":{"gitId":"yutingzou"},"content":"        // parse keyword of task"},{"lineNumber":227,"author":{"gitId":"yutingzou"},"content":"        assert taskDetail.length \u003e 0;"},{"lineNumber":228,"author":{"gitId":"yutingzou"},"content":"        if (taskDetail.length \u003d\u003d 1 || taskDetail[1].isBlank()) {"},{"lineNumber":229,"author":{"gitId":"yutingzou"},"content":"            throw new DukeException(\"OOPS!!! Keyword cannot be empty.\");"},{"lineNumber":230,"author":{"gitId":"yutingzou"},"content":"        } else {"},{"lineNumber":231,"author":{"gitId":"yutingzou"},"content":"            String keyword \u003d taskDetail[1];"},{"lineNumber":232,"author":{"gitId":"yutingzou"},"content":"            return keyword;"},{"lineNumber":233,"author":{"gitId":"yutingzou"},"content":"        }"},{"lineNumber":234,"author":{"gitId":"yutingzou"},"content":"    }"},{"lineNumber":235,"author":{"gitId":"yutingzou"},"content":""},{"lineNumber":236,"author":{"gitId":"yutingzou"},"content":"    private String parseSchedule(String[] taskDetail) throws DukeException {"},{"lineNumber":237,"author":{"gitId":"yutingzou"},"content":"        if (taskDetail.length \u003d\u003d 1 || !isValidDate(taskDetail[1])) {"},{"lineNumber":238,"author":{"gitId":"yutingzou"},"content":"            throw new DukeException(\"OOPS!! Please follow the correct date format: yyyy-MM-dd\");"},{"lineNumber":239,"author":{"gitId":"yutingzou"},"content":"        }"},{"lineNumber":240,"author":{"gitId":"yutingzou"},"content":"        String time \u003d taskDetail[1];"},{"lineNumber":241,"author":{"gitId":"yutingzou"},"content":"        return time;"},{"lineNumber":242,"author":{"gitId":"yutingzou"},"content":"    }"},{"lineNumber":243,"author":{"gitId":"yutingzou"},"content":""},{"lineNumber":244,"author":{"gitId":"yutingzou"},"content":"    /**"},{"lineNumber":245,"author":{"gitId":"yutingzou"},"content":"     * Return if the time entered by user is valid."},{"lineNumber":246,"author":{"gitId":"yutingzou"},"content":"     *"},{"lineNumber":247,"author":{"gitId":"yutingzou"},"content":"     * @param time Time of Deadline or Event."},{"lineNumber":248,"author":{"gitId":"yutingzou"},"content":"     * @return True if the time follows \"yyyy-M-d H:mm\"; else, return false."},{"lineNumber":249,"author":{"gitId":"yutingzou"},"content":"     * @throws DateTimeParseException If time is in invalid format."},{"lineNumber":250,"author":{"gitId":"yutingzou"},"content":"     */"},{"lineNumber":251,"author":{"gitId":"yutingzou"},"content":"    private boolean isValidTime(String time) throws DateTimeParseException {"},{"lineNumber":252,"author":{"gitId":"yutingzou"},"content":"        try {"},{"lineNumber":253,"author":{"gitId":"yutingzou"},"content":"            // convert time from String to LocalDateTime"},{"lineNumber":254,"author":{"gitId":"yutingzou"},"content":"            DateTimeFormatter inputFormat \u003d DateTimeFormatter.ofPattern(\"yyyy-M-d H:mm\", Locale.ENGLISH);"},{"lineNumber":255,"author":{"gitId":"yutingzou"},"content":"            inputFormat.parse(time);"},{"lineNumber":256,"author":{"gitId":"yutingzou"},"content":"        } catch (DateTimeParseException e) {"},{"lineNumber":257,"author":{"gitId":"yutingzou"},"content":"            return false;"},{"lineNumber":258,"author":{"gitId":"yutingzou"},"content":"        }"},{"lineNumber":259,"author":{"gitId":"yutingzou"},"content":"        return true;"},{"lineNumber":260,"author":{"gitId":"yutingzou"},"content":"    }"},{"lineNumber":261,"author":{"gitId":"yutingzou"},"content":""},{"lineNumber":262,"author":{"gitId":"yutingzou"},"content":"    private boolean isValidDate(String time) throws DateTimeParseException {"},{"lineNumber":263,"author":{"gitId":"yutingzou"},"content":"        try {"},{"lineNumber":264,"author":{"gitId":"yutingzou"},"content":"            DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"yyyy-M-d\");"},{"lineNumber":265,"author":{"gitId":"yutingzou"},"content":"            LocalDate.parse(time, formatter);"},{"lineNumber":266,"author":{"gitId":"yutingzou"},"content":"        } catch (DateTimeParseException e) {"},{"lineNumber":267,"author":{"gitId":"yutingzou"},"content":"            return false;"},{"lineNumber":268,"author":{"gitId":"yutingzou"},"content":"        }"},{"lineNumber":269,"author":{"gitId":"yutingzou"},"content":"        return true;"},{"lineNumber":270,"author":{"gitId":"yutingzou"},"content":"    }"},{"lineNumber":271,"author":{"gitId":"yutingzou"},"content":"}"}],"authorContributionMap":{"yutingzou":271}},{"path":"src/main/java/ScheduleCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yutingzou"},"content":"import java.time.LocalDate;"},{"lineNumber":2,"author":{"gitId":"yutingzou"},"content":"import java.time.format.DateTimeFormatter;"},{"lineNumber":3,"author":{"gitId":"yutingzou"},"content":"import java.util.ArrayList;"},{"lineNumber":4,"author":{"gitId":"yutingzou"},"content":""},{"lineNumber":5,"author":{"gitId":"yutingzou"},"content":"public class ScheduleCommand extends Command {"},{"lineNumber":6,"author":{"gitId":"yutingzou"},"content":""},{"lineNumber":7,"author":{"gitId":"yutingzou"},"content":"    public static final String COMMAND_WORD \u003d \"find\";"},{"lineNumber":8,"author":{"gitId":"yutingzou"},"content":"    private LocalDate targetDate;"},{"lineNumber":9,"author":{"gitId":"yutingzou"},"content":"    private String successMessage;"},{"lineNumber":10,"author":{"gitId":"yutingzou"},"content":""},{"lineNumber":11,"author":{"gitId":"yutingzou"},"content":"    public ScheduleCommand(String time) {"},{"lineNumber":12,"author":{"gitId":"yutingzou"},"content":"        this.targetDate \u003d convertToDate(time);"},{"lineNumber":13,"author":{"gitId":"yutingzou"},"content":"    }"},{"lineNumber":14,"author":{"gitId":"yutingzou"},"content":""},{"lineNumber":15,"author":{"gitId":"yutingzou"},"content":"    private LocalDate convertToDate(String time) {"},{"lineNumber":16,"author":{"gitId":"yutingzou"},"content":"        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"yyyy-M-d\");"},{"lineNumber":17,"author":{"gitId":"yutingzou"},"content":"        LocalDate dateTime \u003d LocalDate.parse(time, formatter);"},{"lineNumber":18,"author":{"gitId":"yutingzou"},"content":"        return dateTime;"},{"lineNumber":19,"author":{"gitId":"yutingzou"},"content":"    }"},{"lineNumber":20,"author":{"gitId":"yutingzou"},"content":""},{"lineNumber":21,"author":{"gitId":"yutingzou"},"content":"    @Override"},{"lineNumber":22,"author":{"gitId":"yutingzou"},"content":"    public CommandResult execute() {"},{"lineNumber":23,"author":{"gitId":"yutingzou"},"content":"        ArrayList\u003cTask\u003e tasksByDate \u003d tasks.getScheduleByDate(this.targetDate);"},{"lineNumber":24,"author":{"gitId":"yutingzou"},"content":"        String responseToUser \u003d \"\";"},{"lineNumber":25,"author":{"gitId":"yutingzou"},"content":""},{"lineNumber":26,"author":{"gitId":"yutingzou"},"content":"        if (tasksByDate.size() \u003c 1) {"},{"lineNumber":27,"author":{"gitId":"yutingzou"},"content":"            responseToUser \u003d \"Congrats! It\u0027s a FREE day.\";"},{"lineNumber":28,"author":{"gitId":"yutingzou"},"content":"        } else {"},{"lineNumber":29,"author":{"gitId":"yutingzou"},"content":"            responseToUser \u003d \"Here are the tasks due/on this date: \";"},{"lineNumber":30,"author":{"gitId":"yutingzou"},"content":"            // loop through list and print every task in a new line"},{"lineNumber":31,"author":{"gitId":"yutingzou"},"content":"            for (int i \u003d 1; i \u003c tasksByDate.size() + 1; i++) {"},{"lineNumber":32,"author":{"gitId":"yutingzou"},"content":"                Task curTask \u003d tasksByDate.get(i - 1);"},{"lineNumber":33,"author":{"gitId":"yutingzou"},"content":"                String toAdd \u003d \"\\n\" + i + \". \" + curTask.toString();"},{"lineNumber":34,"author":{"gitId":"yutingzou"},"content":"                responseToUser +\u003d toAdd;"},{"lineNumber":35,"author":{"gitId":"yutingzou"},"content":"            }"},{"lineNumber":36,"author":{"gitId":"yutingzou"},"content":"        }"},{"lineNumber":37,"author":{"gitId":"yutingzou"},"content":"        this.successMessage \u003d responseToUser;"},{"lineNumber":38,"author":{"gitId":"yutingzou"},"content":"        return new CommandResult(successMessage);"},{"lineNumber":39,"author":{"gitId":"yutingzou"},"content":"    }"},{"lineNumber":40,"author":{"gitId":"yutingzou"},"content":"}"}],"authorContributionMap":{"yutingzou":40}},{"path":"src/main/java/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yutingzou"},"content":"import java.io.File;"},{"lineNumber":2,"author":{"gitId":"yutingzou"},"content":"import java.io.FileNotFoundException;"},{"lineNumber":3,"author":{"gitId":"yutingzou"},"content":"import java.io.FileWriter;"},{"lineNumber":4,"author":{"gitId":"yutingzou"},"content":"import java.io.IOException;"},{"lineNumber":5,"author":{"gitId":"yutingzou"},"content":"import java.time.LocalDateTime;"},{"lineNumber":6,"author":{"gitId":"yutingzou"},"content":"import java.time.format.DateTimeFormatter;"},{"lineNumber":7,"author":{"gitId":"yutingzou"},"content":"import java.util.ArrayList;"},{"lineNumber":8,"author":{"gitId":"yutingzou"},"content":"import java.util.Locale;"},{"lineNumber":9,"author":{"gitId":"yutingzou"},"content":"import java.util.Scanner;"},{"lineNumber":10,"author":{"gitId":"yutingzou"},"content":""},{"lineNumber":11,"author":{"gitId":"yutingzou"},"content":"public class Storage {"},{"lineNumber":12,"author":{"gitId":"yutingzou"},"content":""},{"lineNumber":13,"author":{"gitId":"yutingzou"},"content":"    private String filePath;"},{"lineNumber":14,"author":{"gitId":"yutingzou"},"content":""},{"lineNumber":15,"author":{"gitId":"yutingzou"},"content":"    public Storage(String filePath) {"},{"lineNumber":16,"author":{"gitId":"yutingzou"},"content":"        this.filePath \u003d filePath;"},{"lineNumber":17,"author":{"gitId":"yutingzou"},"content":"    }"},{"lineNumber":18,"author":{"gitId":"yutingzou"},"content":""},{"lineNumber":19,"author":{"gitId":"yutingzou"},"content":"    /**"},{"lineNumber":20,"author":{"gitId":"yutingzou"},"content":"     * Return list of existing tasks stored in local text file."},{"lineNumber":21,"author":{"gitId":"yutingzou"},"content":"     *"},{"lineNumber":22,"author":{"gitId":"yutingzou"},"content":"     * @return List of task details (type, status, description and time)."},{"lineNumber":23,"author":{"gitId":"yutingzou"},"content":"     * @throws DukeException If local file is not found."},{"lineNumber":24,"author":{"gitId":"yutingzou"},"content":"     */"},{"lineNumber":25,"author":{"gitId":"yutingzou"},"content":"    public ArrayList\u003cTask\u003e load() throws DukeException {"},{"lineNumber":26,"author":{"gitId":"yutingzou"},"content":"        try {"},{"lineNumber":27,"author":{"gitId":"yutingzou"},"content":"            ArrayList\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();"},{"lineNumber":28,"author":{"gitId":"yutingzou"},"content":"            File f \u003d new File(this.filePath);"},{"lineNumber":29,"author":{"gitId":"yutingzou"},"content":"            Scanner scanner \u003d new Scanner(f);"},{"lineNumber":30,"author":{"gitId":"yutingzou"},"content":""},{"lineNumber":31,"author":{"gitId":"yutingzou"},"content":"            while (scanner.hasNext()) {"},{"lineNumber":32,"author":{"gitId":"yutingzou"},"content":"                String[] taskDetails \u003d scanner.nextLine().split(\" \\\\| \", 4);"},{"lineNumber":33,"author":{"gitId":"yutingzou"},"content":"                Task newTask \u003d loadTask(taskDetails);"},{"lineNumber":34,"author":{"gitId":"yutingzou"},"content":"                tasks.add(newTask);"},{"lineNumber":35,"author":{"gitId":"yutingzou"},"content":"            }"},{"lineNumber":36,"author":{"gitId":"yutingzou"},"content":"            return tasks;"},{"lineNumber":37,"author":{"gitId":"yutingzou"},"content":"        } catch (FileNotFoundException e) {"},{"lineNumber":38,"author":{"gitId":"yutingzou"},"content":"            throw new DukeException(\"OOPS!! File is not found.\");"},{"lineNumber":39,"author":{"gitId":"yutingzou"},"content":"        }"},{"lineNumber":40,"author":{"gitId":"yutingzou"},"content":"    }"},{"lineNumber":41,"author":{"gitId":"yutingzou"},"content":""},{"lineNumber":42,"author":{"gitId":"yutingzou"},"content":"    /**"},{"lineNumber":43,"author":{"gitId":"yutingzou"},"content":"     * Store the TaskList in local text file."},{"lineNumber":44,"author":{"gitId":"yutingzou"},"content":"     *"},{"lineNumber":45,"author":{"gitId":"yutingzou"},"content":"     * @param taskList TaskList containing Task objects."},{"lineNumber":46,"author":{"gitId":"yutingzou"},"content":"     * @throws DukeException If fail to write the file."},{"lineNumber":47,"author":{"gitId":"yutingzou"},"content":"     */"},{"lineNumber":48,"author":{"gitId":"yutingzou"},"content":"    public void updateTaskList(TaskList taskList) throws DukeException {"},{"lineNumber":49,"author":{"gitId":"yutingzou"},"content":"        try {"},{"lineNumber":50,"author":{"gitId":"yutingzou"},"content":"            ArrayList\u003cTask\u003e tasks \u003d taskList.getTaskList();"},{"lineNumber":51,"author":{"gitId":"yutingzou"},"content":"            FileWriter writer \u003d new FileWriter(filePath);"},{"lineNumber":52,"author":{"gitId":"yutingzou"},"content":"            assert writer !\u003d null;"},{"lineNumber":53,"author":{"gitId":"yutingzou"},"content":"            // write tasks into file by line"},{"lineNumber":54,"author":{"gitId":"yutingzou"},"content":"            for (Task t : tasks) {"},{"lineNumber":55,"author":{"gitId":"yutingzou"},"content":"                writer.write(t.toString() + System.lineSeparator());"},{"lineNumber":56,"author":{"gitId":"yutingzou"},"content":"            }"},{"lineNumber":57,"author":{"gitId":"yutingzou"},"content":"            writer.close();"},{"lineNumber":58,"author":{"gitId":"yutingzou"},"content":"        } catch (IOException e) {"},{"lineNumber":59,"author":{"gitId":"yutingzou"},"content":"            throw new DukeException(\"OOPS!! Task list failed to update.\");"},{"lineNumber":60,"author":{"gitId":"yutingzou"},"content":"        }"},{"lineNumber":61,"author":{"gitId":"yutingzou"},"content":"    }"},{"lineNumber":62,"author":{"gitId":"yutingzou"},"content":""},{"lineNumber":63,"author":{"gitId":"yutingzou"},"content":"    private Task loadTask(String[] taskDetails) {"},{"lineNumber":64,"author":{"gitId":"yutingzou"},"content":"        String taskType \u003d taskDetails[0];"},{"lineNumber":65,"author":{"gitId":"yutingzou"},"content":"        boolean isCompleted \u003d isDone(taskDetails[1]);"},{"lineNumber":66,"author":{"gitId":"yutingzou"},"content":"        String description \u003d taskDetails[2];"},{"lineNumber":67,"author":{"gitId":"yutingzou"},"content":"        String time \u003d \"\";"},{"lineNumber":68,"author":{"gitId":"yutingzou"},"content":"        Task newTask \u003d new Task(\"\");"},{"lineNumber":69,"author":{"gitId":"yutingzou"},"content":""},{"lineNumber":70,"author":{"gitId":"yutingzou"},"content":"        DateTimeFormatter inputFormat \u003d DateTimeFormatter.ofPattern(\"MMM d yyyy hh:mm a\", Locale.ENGLISH);"},{"lineNumber":71,"author":{"gitId":"yutingzou"},"content":"        DateTimeFormatter outputFormat \u003d DateTimeFormatter.ofPattern(\"yyyy-M-d H:mm\");"},{"lineNumber":72,"author":{"gitId":"yutingzou"},"content":"        LocalDateTime dateTime \u003d null;"},{"lineNumber":73,"author":{"gitId":"yutingzou"},"content":""},{"lineNumber":74,"author":{"gitId":"yutingzou"},"content":"        switch (taskType) {"},{"lineNumber":75,"author":{"gitId":"yutingzou"},"content":"        case \"T\":"},{"lineNumber":76,"author":{"gitId":"yutingzou"},"content":"            newTask \u003d new ToDo(description, isCompleted);"},{"lineNumber":77,"author":{"gitId":"yutingzou"},"content":"            break;"},{"lineNumber":78,"author":{"gitId":"yutingzou"},"content":"        case \"D\":"},{"lineNumber":79,"author":{"gitId":"yutingzou"},"content":"            time \u003d taskDetails[3].replace(\"am\", \"AM\").replace(\"pm\", \"PM\");"},{"lineNumber":80,"author":{"gitId":"yutingzou"},"content":"            // re-format time from \"MMM d yyyy hh:mm a\" to \"yyyy-m-d hh:mm\""},{"lineNumber":81,"author":{"gitId":"yutingzou"},"content":"            dateTime \u003d LocalDateTime.parse(time, inputFormat);"},{"lineNumber":82,"author":{"gitId":"yutingzou"},"content":"            time \u003d dateTime.format(outputFormat).replace(\"T\", \" \");"},{"lineNumber":83,"author":{"gitId":"yutingzou"},"content":"            newTask \u003d new Deadline(description, time, isCompleted);"},{"lineNumber":84,"author":{"gitId":"yutingzou"},"content":"            break;"},{"lineNumber":85,"author":{"gitId":"yutingzou"},"content":"        case \"E\":"},{"lineNumber":86,"author":{"gitId":"yutingzou"},"content":"            time \u003d taskDetails[3].replace(\"am\", \"AM\").replace(\"pm\", \"PM\");"},{"lineNumber":87,"author":{"gitId":"yutingzou"},"content":"            // re-format time from \"MMM d yyyy hh:mm a\" to \"yyyy-m-d hh:mm\""},{"lineNumber":88,"author":{"gitId":"yutingzou"},"content":"            dateTime \u003d LocalDateTime.parse(time, inputFormat);"},{"lineNumber":89,"author":{"gitId":"yutingzou"},"content":"            time \u003d dateTime.format(outputFormat).replace(\"T\", \" \");"},{"lineNumber":90,"author":{"gitId":"yutingzou"},"content":"            newTask \u003d new Event(description, time, isCompleted);"},{"lineNumber":91,"author":{"gitId":"yutingzou"},"content":"            break;"},{"lineNumber":92,"author":{"gitId":"yutingzou"},"content":"        default:"},{"lineNumber":93,"author":{"gitId":"yutingzou"},"content":"            newTask \u003d new Task(\"\");"},{"lineNumber":94,"author":{"gitId":"yutingzou"},"content":"        }"},{"lineNumber":95,"author":{"gitId":"yutingzou"},"content":"        return newTask;"},{"lineNumber":96,"author":{"gitId":"yutingzou"},"content":"    }"},{"lineNumber":97,"author":{"gitId":"yutingzou"},"content":""},{"lineNumber":98,"author":{"gitId":"yutingzou"},"content":"    private boolean isDone(String icon) {"},{"lineNumber":99,"author":{"gitId":"yutingzou"},"content":"        if (icon.equals(\"\\u2713\")) {"},{"lineNumber":100,"author":{"gitId":"yutingzou"},"content":"            return true;"},{"lineNumber":101,"author":{"gitId":"yutingzou"},"content":"        }"},{"lineNumber":102,"author":{"gitId":"yutingzou"},"content":"        return false;"},{"lineNumber":103,"author":{"gitId":"yutingzou"},"content":"    }"},{"lineNumber":104,"author":{"gitId":"yutingzou"},"content":"}"}],"authorContributionMap":{"yutingzou":104}},{"path":"src/main/java/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yutingzou"},"content":"import java.time.LocalDate;"},{"lineNumber":2,"author":{"gitId":"yutingzou"},"content":"import java.time.LocalDateTime;"},{"lineNumber":3,"author":{"gitId":"yutingzou"},"content":"import java.time.format.DateTimeFormatter;"},{"lineNumber":4,"author":{"gitId":"yutingzou"},"content":""},{"lineNumber":5,"author":{"gitId":"yutingzou"},"content":"public class Task {"},{"lineNumber":6,"author":{"gitId":"yutingzou"},"content":"    protected String separator \u003d \" | \";"},{"lineNumber":7,"author":{"gitId":"yutingzou"},"content":"    protected LocalDateTime dateTime;"},{"lineNumber":8,"author":{"gitId":"yutingzou"},"content":"    private String description;"},{"lineNumber":9,"author":{"gitId":"yutingzou"},"content":"    private boolean isDone;"},{"lineNumber":10,"author":{"gitId":"yutingzou"},"content":""},{"lineNumber":11,"author":{"gitId":"yutingzou"},"content":"    public Task(String description) {"},{"lineNumber":12,"author":{"gitId":"yutingzou"},"content":"        this(description, false);"},{"lineNumber":13,"author":{"gitId":"yutingzou"},"content":"    }"},{"lineNumber":14,"author":{"gitId":"yutingzou"},"content":""},{"lineNumber":15,"author":{"gitId":"yutingzou"},"content":"    /**"},{"lineNumber":16,"author":{"gitId":"yutingzou"},"content":"     * Construct a Task with description and its completeness status."},{"lineNumber":17,"author":{"gitId":"yutingzou"},"content":"     * @param description description of the task to be constructed."},{"lineNumber":18,"author":{"gitId":"yutingzou"},"content":"     * @param isDone true if the task is marked as done; otherwise, false."},{"lineNumber":19,"author":{"gitId":"yutingzou"},"content":"     */"},{"lineNumber":20,"author":{"gitId":"yutingzou"},"content":"    public Task(String description, boolean isDone) {"},{"lineNumber":21,"author":{"gitId":"yutingzou"},"content":"        this.description \u003d description;"},{"lineNumber":22,"author":{"gitId":"yutingzou"},"content":"        this.dateTime \u003d null;"},{"lineNumber":23,"author":{"gitId":"yutingzou"},"content":"        this.isDone \u003d isDone;"},{"lineNumber":24,"author":{"gitId":"yutingzou"},"content":"    }"},{"lineNumber":25,"author":{"gitId":"yutingzou"},"content":""},{"lineNumber":26,"author":{"gitId":"yutingzou"},"content":"    /**"},{"lineNumber":27,"author":{"gitId":"yutingzou"},"content":"     * Construct a Task with description, time and its completeness status."},{"lineNumber":28,"author":{"gitId":"yutingzou"},"content":"     * @param description description of the task to be constructed."},{"lineNumber":29,"author":{"gitId":"yutingzou"},"content":"     * @param time time of the task in \"yyyy-mm-dd hh:mm\" format."},{"lineNumber":30,"author":{"gitId":"yutingzou"},"content":"     * @param isDone true if the task is marked as done; otherwise, false."},{"lineNumber":31,"author":{"gitId":"yutingzou"},"content":"     */"},{"lineNumber":32,"author":{"gitId":"yutingzou"},"content":"    public Task(String description, String time, boolean isDone) {"},{"lineNumber":33,"author":{"gitId":"yutingzou"},"content":"        this.description \u003d description;"},{"lineNumber":34,"author":{"gitId":"yutingzou"},"content":"        this.dateTime \u003d formatToDateTime(time);"},{"lineNumber":35,"author":{"gitId":"yutingzou"},"content":"        this.isDone \u003d isDone;"},{"lineNumber":36,"author":{"gitId":"yutingzou"},"content":"    }"},{"lineNumber":37,"author":{"gitId":"yutingzou"},"content":""},{"lineNumber":38,"author":{"gitId":"yutingzou"},"content":"    private String getStatusIcon() {"},{"lineNumber":39,"author":{"gitId":"yutingzou"},"content":"        return (isDone ? \"\\u2713\" : \"\\u2718\");"},{"lineNumber":40,"author":{"gitId":"yutingzou"},"content":"    }"},{"lineNumber":41,"author":{"gitId":"yutingzou"},"content":""},{"lineNumber":42,"author":{"gitId":"yutingzou"},"content":"    public String getDescription() {"},{"lineNumber":43,"author":{"gitId":"yutingzou"},"content":"        return this.description;"},{"lineNumber":44,"author":{"gitId":"yutingzou"},"content":"    }"},{"lineNumber":45,"author":{"gitId":"yutingzou"},"content":""},{"lineNumber":46,"author":{"gitId":"yutingzou"},"content":"    public boolean isDone() {"},{"lineNumber":47,"author":{"gitId":"yutingzou"},"content":"        return this.isDone;"},{"lineNumber":48,"author":{"gitId":"yutingzou"},"content":"    }"},{"lineNumber":49,"author":{"gitId":"yutingzou"},"content":""},{"lineNumber":50,"author":{"gitId":"yutingzou"},"content":"    public void markAsDone() {"},{"lineNumber":51,"author":{"gitId":"yutingzou"},"content":"        this.isDone \u003d true;"},{"lineNumber":52,"author":{"gitId":"yutingzou"},"content":"    }"},{"lineNumber":53,"author":{"gitId":"yutingzou"},"content":""},{"lineNumber":54,"author":{"gitId":"yutingzou"},"content":"    public boolean isSameDay(LocalDate targetDate) {"},{"lineNumber":55,"author":{"gitId":"yutingzou"},"content":"        return this.dateTime.toLocalDate().isEqual(targetDate);"},{"lineNumber":56,"author":{"gitId":"yutingzou"},"content":"    }"},{"lineNumber":57,"author":{"gitId":"yutingzou"},"content":""},{"lineNumber":58,"author":{"gitId":"yutingzou"},"content":"    private LocalDateTime formatToDateTime(String time) {"},{"lineNumber":59,"author":{"gitId":"yutingzou"},"content":"        DateTimeFormatter format \u003d DateTimeFormatter.ofPattern(\"yyyy-M-d H:mm\");"},{"lineNumber":60,"author":{"gitId":"yutingzou"},"content":"        LocalDateTime dateTime \u003d LocalDateTime.parse(time, format);"},{"lineNumber":61,"author":{"gitId":"yutingzou"},"content":"        return dateTime;"},{"lineNumber":62,"author":{"gitId":"yutingzou"},"content":"    }"},{"lineNumber":63,"author":{"gitId":"yutingzou"},"content":""},{"lineNumber":64,"author":{"gitId":"yutingzou"},"content":"    @Override"},{"lineNumber":65,"author":{"gitId":"yutingzou"},"content":"    public String toString() {"},{"lineNumber":66,"author":{"gitId":"yutingzou"},"content":"        return this.getStatusIcon() + separator + this.getDescription();"},{"lineNumber":67,"author":{"gitId":"yutingzou"},"content":"    }"},{"lineNumber":68,"author":{"gitId":"yutingzou"},"content":"}"}],"authorContributionMap":{"yutingzou":68}},{"path":"src/main/java/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yutingzou"},"content":"import java.time.LocalDate;"},{"lineNumber":2,"author":{"gitId":"yutingzou"},"content":"import java.util.ArrayList;"},{"lineNumber":3,"author":{"gitId":"yutingzou"},"content":""},{"lineNumber":4,"author":{"gitId":"yutingzou"},"content":"public class TaskList {"},{"lineNumber":5,"author":{"gitId":"yutingzou"},"content":""},{"lineNumber":6,"author":{"gitId":"yutingzou"},"content":"    private ArrayList\u003cTask\u003e taskList;"},{"lineNumber":7,"author":{"gitId":"yutingzou"},"content":""},{"lineNumber":8,"author":{"gitId":"yutingzou"},"content":"    public TaskList() {"},{"lineNumber":9,"author":{"gitId":"yutingzou"},"content":"        this.taskList \u003d new ArrayList\u003cTask\u003e();"},{"lineNumber":10,"author":{"gitId":"yutingzou"},"content":"    }"},{"lineNumber":11,"author":{"gitId":"yutingzou"},"content":""},{"lineNumber":12,"author":{"gitId":"yutingzou"},"content":"    public TaskList(ArrayList\u003cTask\u003e myTasks) {"},{"lineNumber":13,"author":{"gitId":"yutingzou"},"content":"        this.taskList \u003d myTasks;"},{"lineNumber":14,"author":{"gitId":"yutingzou"},"content":"    }"},{"lineNumber":15,"author":{"gitId":"yutingzou"},"content":""},{"lineNumber":16,"author":{"gitId":"yutingzou"},"content":"    /**"},{"lineNumber":17,"author":{"gitId":"yutingzou"},"content":"     * Return the size of a TaskList."},{"lineNumber":18,"author":{"gitId":"yutingzou"},"content":"     *"},{"lineNumber":19,"author":{"gitId":"yutingzou"},"content":"     * @return Number of tasks in the TaskList."},{"lineNumber":20,"author":{"gitId":"yutingzou"},"content":"     */"},{"lineNumber":21,"author":{"gitId":"yutingzou"},"content":"    public int getSize() {"},{"lineNumber":22,"author":{"gitId":"yutingzou"},"content":"        return this.taskList.size();"},{"lineNumber":23,"author":{"gitId":"yutingzou"},"content":"    }"},{"lineNumber":24,"author":{"gitId":"yutingzou"},"content":""},{"lineNumber":25,"author":{"gitId":"yutingzou"},"content":"    /**"},{"lineNumber":26,"author":{"gitId":"yutingzou"},"content":"     * Return the list of tasks in a TaskList."},{"lineNumber":27,"author":{"gitId":"yutingzou"},"content":"     *"},{"lineNumber":28,"author":{"gitId":"yutingzou"},"content":"     * @return List of tasks."},{"lineNumber":29,"author":{"gitId":"yutingzou"},"content":"     */"},{"lineNumber":30,"author":{"gitId":"yutingzou"},"content":"    public ArrayList\u003cTask\u003e getTaskList() {"},{"lineNumber":31,"author":{"gitId":"yutingzou"},"content":"        return this.taskList;"},{"lineNumber":32,"author":{"gitId":"yutingzou"},"content":"    }"},{"lineNumber":33,"author":{"gitId":"yutingzou"},"content":""},{"lineNumber":34,"author":{"gitId":"yutingzou"},"content":"    /**"},{"lineNumber":35,"author":{"gitId":"yutingzou"},"content":"     * Add task into a TaskList."},{"lineNumber":36,"author":{"gitId":"yutingzou"},"content":"     *"},{"lineNumber":37,"author":{"gitId":"yutingzou"},"content":"     * @param task Task to be added."},{"lineNumber":38,"author":{"gitId":"yutingzou"},"content":"     */"},{"lineNumber":39,"author":{"gitId":"yutingzou"},"content":"    public void addTask(Task task) {"},{"lineNumber":40,"author":{"gitId":"yutingzou"},"content":"        this.taskList.add(task);"},{"lineNumber":41,"author":{"gitId":"yutingzou"},"content":"    }"},{"lineNumber":42,"author":{"gitId":"yutingzou"},"content":""},{"lineNumber":43,"author":{"gitId":"yutingzou"},"content":"    /**"},{"lineNumber":44,"author":{"gitId":"yutingzou"},"content":"     * Delete task by its order number from a TaskList."},{"lineNumber":45,"author":{"gitId":"yutingzou"},"content":"     *"},{"lineNumber":46,"author":{"gitId":"yutingzou"},"content":"     * @param taskNumber Order number of the task to be deleted."},{"lineNumber":47,"author":{"gitId":"yutingzou"},"content":"     * @return Task deleted."},{"lineNumber":48,"author":{"gitId":"yutingzou"},"content":"     */"},{"lineNumber":49,"author":{"gitId":"yutingzou"},"content":"    public Task deleteTask(int taskNumber) throws DukeException {"},{"lineNumber":50,"author":{"gitId":"yutingzou"},"content":"        try {"},{"lineNumber":51,"author":{"gitId":"yutingzou"},"content":"            Task curTask \u003d this.taskList.remove(taskNumber - 1);"},{"lineNumber":52,"author":{"gitId":"yutingzou"},"content":"            return curTask;"},{"lineNumber":53,"author":{"gitId":"yutingzou"},"content":"        } catch (IndexOutOfBoundsException e) {"},{"lineNumber":54,"author":{"gitId":"yutingzou"},"content":"            throw new DukeException(\"OOPS!! The task number is invalid.\");"},{"lineNumber":55,"author":{"gitId":"yutingzou"},"content":"        }"},{"lineNumber":56,"author":{"gitId":"yutingzou"},"content":"    }"},{"lineNumber":57,"author":{"gitId":"yutingzou"},"content":""},{"lineNumber":58,"author":{"gitId":"yutingzou"},"content":"    /**"},{"lineNumber":59,"author":{"gitId":"yutingzou"},"content":"     * Mark a task in a TaskList as done."},{"lineNumber":60,"author":{"gitId":"yutingzou"},"content":"     *"},{"lineNumber":61,"author":{"gitId":"yutingzou"},"content":"     * @param taskNumber Order number of the task to be completed."},{"lineNumber":62,"author":{"gitId":"yutingzou"},"content":"     * @return Task marked as done."},{"lineNumber":63,"author":{"gitId":"yutingzou"},"content":"     */"},{"lineNumber":64,"author":{"gitId":"yutingzou"},"content":"    public Task markTaskAsDone(int taskNumber) throws DukeException {"},{"lineNumber":65,"author":{"gitId":"yutingzou"},"content":"        try {"},{"lineNumber":66,"author":{"gitId":"yutingzou"},"content":"            Task curTask \u003d this.taskList.get(taskNumber - 1);"},{"lineNumber":67,"author":{"gitId":"yutingzou"},"content":"            curTask.markAsDone();"},{"lineNumber":68,"author":{"gitId":"yutingzou"},"content":"            return curTask;"},{"lineNumber":69,"author":{"gitId":"yutingzou"},"content":"        } catch (IndexOutOfBoundsException e) {"},{"lineNumber":70,"author":{"gitId":"yutingzou"},"content":"            throw new DukeException(\"OOPS!! The task number is invalid.\");"},{"lineNumber":71,"author":{"gitId":"yutingzou"},"content":"        }"},{"lineNumber":72,"author":{"gitId":"yutingzou"},"content":"    }"},{"lineNumber":73,"author":{"gitId":"yutingzou"},"content":""},{"lineNumber":74,"author":{"gitId":"yutingzou"},"content":"    /**"},{"lineNumber":75,"author":{"gitId":"yutingzou"},"content":"     * Find tasks with description that contains a keyword specified by user."},{"lineNumber":76,"author":{"gitId":"yutingzou"},"content":"     *"},{"lineNumber":77,"author":{"gitId":"yutingzou"},"content":"     * @param keyword Keyword to look for in tasks\u0027 description."},{"lineNumber":78,"author":{"gitId":"yutingzou"},"content":"     * @return List of tasks that have the keyword in their description."},{"lineNumber":79,"author":{"gitId":"yutingzou"},"content":"     */"},{"lineNumber":80,"author":{"gitId":"yutingzou"},"content":"    public TaskList findMatchingTask(String keyword) {"},{"lineNumber":81,"author":{"gitId":"yutingzou"},"content":"        ArrayList\u003cTask\u003e matchingTasks \u003d new ArrayList\u003c\u003e ();"},{"lineNumber":82,"author":{"gitId":"yutingzou"},"content":"        // loop through every task in the list"},{"lineNumber":83,"author":{"gitId":"yutingzou"},"content":"        for (Task t: this.taskList) {"},{"lineNumber":84,"author":{"gitId":"yutingzou"},"content":"            // add task to list if its description contains the keyword"},{"lineNumber":85,"author":{"gitId":"yutingzou"},"content":"            if (t.getDescription().contains(keyword)) {"},{"lineNumber":86,"author":{"gitId":"yutingzou"},"content":"                matchingTasks.add(t);"},{"lineNumber":87,"author":{"gitId":"yutingzou"},"content":"            }"},{"lineNumber":88,"author":{"gitId":"yutingzou"},"content":"        }"},{"lineNumber":89,"author":{"gitId":"yutingzou"},"content":"        return new TaskList(matchingTasks);"},{"lineNumber":90,"author":{"gitId":"yutingzou"},"content":"    }"},{"lineNumber":91,"author":{"gitId":"yutingzou"},"content":""},{"lineNumber":92,"author":{"gitId":"yutingzou"},"content":"    /**"},{"lineNumber":93,"author":{"gitId":"yutingzou"},"content":"     * View all tasks scheduled on a specific date."},{"lineNumber":94,"author":{"gitId":"yutingzou"},"content":"     * @param targetDate The target date on which the schedule is viewed."},{"lineNumber":95,"author":{"gitId":"yutingzou"},"content":"     * @return List of all tasks schedule on the date."},{"lineNumber":96,"author":{"gitId":"yutingzou"},"content":"     */"},{"lineNumber":97,"author":{"gitId":"yutingzou"},"content":"    public ArrayList\u003cTask\u003e getScheduleByDate(LocalDate targetDate) {"},{"lineNumber":98,"author":{"gitId":"yutingzou"},"content":"        ArrayList\u003cTask\u003e tasksOnDate \u003d new ArrayList\u003c\u003e();"},{"lineNumber":99,"author":{"gitId":"yutingzou"},"content":"        // loop through every task in the list"},{"lineNumber":100,"author":{"gitId":"yutingzou"},"content":"        for (Task task : this.taskList) {"},{"lineNumber":101,"author":{"gitId":"yutingzou"},"content":"            // do not check ToDo tasks"},{"lineNumber":102,"author":{"gitId":"yutingzou"},"content":"            if (task instanceof ToDo) {"},{"lineNumber":103,"author":{"gitId":"yutingzou"},"content":"                continue;"},{"lineNumber":104,"author":{"gitId":"yutingzou"},"content":"            }"},{"lineNumber":105,"author":{"gitId":"yutingzou"},"content":"            if (task.isSameDay(targetDate)) {"},{"lineNumber":106,"author":{"gitId":"yutingzou"},"content":"                tasksOnDate.add(task);"},{"lineNumber":107,"author":{"gitId":"yutingzou"},"content":"            }"},{"lineNumber":108,"author":{"gitId":"yutingzou"},"content":"        }"},{"lineNumber":109,"author":{"gitId":"yutingzou"},"content":"        return tasksOnDate;"},{"lineNumber":110,"author":{"gitId":"yutingzou"},"content":"    }"},{"lineNumber":111,"author":{"gitId":"yutingzou"},"content":"}"},{"lineNumber":112,"author":{"gitId":"yutingzou"},"content":""}],"authorContributionMap":{"yutingzou":112}},{"path":"src/main/java/ToDo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yutingzou"},"content":"public class ToDo extends Task {"},{"lineNumber":2,"author":{"gitId":"yutingzou"},"content":""},{"lineNumber":3,"author":{"gitId":"yutingzou"},"content":"    private final String type \u003d \"T\";"},{"lineNumber":4,"author":{"gitId":"yutingzou"},"content":""},{"lineNumber":5,"author":{"gitId":"yutingzou"},"content":"    public ToDo(String description) {"},{"lineNumber":6,"author":{"gitId":"yutingzou"},"content":"        this(description, false);"},{"lineNumber":7,"author":{"gitId":"yutingzou"},"content":"    }"},{"lineNumber":8,"author":{"gitId":"yutingzou"},"content":""},{"lineNumber":9,"author":{"gitId":"yutingzou"},"content":"    public ToDo(String description, boolean isDone) {"},{"lineNumber":10,"author":{"gitId":"yutingzou"},"content":"        super(description, isDone);"},{"lineNumber":11,"author":{"gitId":"yutingzou"},"content":"    }"},{"lineNumber":12,"author":{"gitId":"yutingzou"},"content":""},{"lineNumber":13,"author":{"gitId":"yutingzou"},"content":"    @Override"},{"lineNumber":14,"author":{"gitId":"yutingzou"},"content":"    public String toString() {"},{"lineNumber":15,"author":{"gitId":"yutingzou"},"content":"        return type + separator + super.toString();"},{"lineNumber":16,"author":{"gitId":"yutingzou"},"content":"    }"},{"lineNumber":17,"author":{"gitId":"yutingzou"},"content":"}"}],"authorContributionMap":{"yutingzou":17}},{"path":"src/main/java/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yutingzou"},"content":"import java.util.Scanner;"},{"lineNumber":2,"author":{"gitId":"yutingzou"},"content":""},{"lineNumber":3,"author":{"gitId":"yutingzou"},"content":"public class Ui {"},{"lineNumber":4,"author":{"gitId":"yutingzou"},"content":"    private final Scanner in \u003d new Scanner(System.in);"},{"lineNumber":5,"author":{"gitId":"yutingzou"},"content":""},{"lineNumber":6,"author":{"gitId":"yutingzou"},"content":"    public Ui(){ }"},{"lineNumber":7,"author":{"gitId":"yutingzou"},"content":""},{"lineNumber":8,"author":{"gitId":"yutingzou"},"content":"    public String showResultToUser(CommandResult result) {"},{"lineNumber":9,"author":{"gitId":"yutingzou"},"content":"        return result.getFeedbackToUser();"},{"lineNumber":10,"author":{"gitId":"yutingzou"},"content":"    }"},{"lineNumber":11,"author":{"gitId":"yutingzou"},"content":""},{"lineNumber":12,"author":{"gitId":"yutingzou"},"content":"    public String showGoodbyeMessage() {"},{"lineNumber":13,"author":{"gitId":"yutingzou"},"content":"        return \"Bye. Hope to see you again soon!\";"},{"lineNumber":14,"author":{"gitId":"yutingzou"},"content":"    }"},{"lineNumber":15,"author":{"gitId":"yutingzou"},"content":""},{"lineNumber":16,"author":{"gitId":"yutingzou"},"content":"    public String showLoadingError() {"},{"lineNumber":17,"author":{"gitId":"yutingzou"},"content":"        return \"OOPS!! Duke fails to load, please restart!\";"},{"lineNumber":18,"author":{"gitId":"yutingzou"},"content":"    }"},{"lineNumber":19,"author":{"gitId":"yutingzou"},"content":""},{"lineNumber":20,"author":{"gitId":"yutingzou"},"content":"    public String showErrorMessage(String message) {"},{"lineNumber":21,"author":{"gitId":"yutingzou"},"content":"        return message;"},{"lineNumber":22,"author":{"gitId":"yutingzou"},"content":"    }"},{"lineNumber":23,"author":{"gitId":"yutingzou"},"content":"}"}],"authorContributionMap":{"yutingzou":23}},{"path":"src/main/resources/view/DialogBox.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"yutingzou"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"},{"lineNumber":2,"author":{"gitId":"yutingzou"},"content":""},{"lineNumber":3,"author":{"gitId":"yutingzou"},"content":"\u003c?import javafx.geometry.Insets?\u003e"},{"lineNumber":4,"author":{"gitId":"yutingzou"},"content":"\u003c?import javafx.scene.control.Label?\u003e"},{"lineNumber":5,"author":{"gitId":"yutingzou"},"content":"\u003c?import javafx.scene.image.ImageView?\u003e"},{"lineNumber":6,"author":{"gitId":"yutingzou"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e"},{"lineNumber":7,"author":{"gitId":"yutingzou"},"content":""},{"lineNumber":8,"author":{"gitId":"yutingzou"},"content":"\u003cfx:root alignment\u003d\"TOP_RIGHT\" maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\" prefWidth\u003d\"400.0\" type\u003d\"javafx.scene.layout.HBox\" xmlns\u003d\"http://javafx.com/javafx/8.0.171\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e"},{"lineNumber":9,"author":{"gitId":"yutingzou"},"content":"    \u003cchildren\u003e"},{"lineNumber":10,"author":{"gitId":"yutingzou"},"content":"        \u003cLabel fx:id\u003d\"dialog\" text\u003d\"Label\" wrapText\u003d\"true\" /\u003e"},{"lineNumber":11,"author":{"gitId":"yutingzou"},"content":"        \u003cImageView fx:id\u003d\"displayPicture\" fitHeight\u003d\"99.0\" fitWidth\u003d\"99.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\" /\u003e"},{"lineNumber":12,"author":{"gitId":"yutingzou"},"content":"    \u003c/children\u003e"},{"lineNumber":13,"author":{"gitId":"yutingzou"},"content":"    \u003cpadding\u003e"},{"lineNumber":14,"author":{"gitId":"yutingzou"},"content":"        \u003cInsets bottom\u003d\"15.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"15.0\" /\u003e"},{"lineNumber":15,"author":{"gitId":"yutingzou"},"content":"    \u003c/padding\u003e"},{"lineNumber":16,"author":{"gitId":"yutingzou"},"content":"\u003c/fx:root\u003e"},{"lineNumber":17,"author":{"gitId":"yutingzou"},"content":""}],"authorContributionMap":{"yutingzou":17}},{"path":"src/main/resources/view/MainWindow.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"yutingzou"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"},{"lineNumber":2,"author":{"gitId":"yutingzou"},"content":""},{"lineNumber":3,"author":{"gitId":"yutingzou"},"content":"\u003c?import javafx.scene.control.Button?\u003e"},{"lineNumber":4,"author":{"gitId":"yutingzou"},"content":"\u003c?import javafx.scene.control.ScrollPane?\u003e"},{"lineNumber":5,"author":{"gitId":"yutingzou"},"content":"\u003c?import javafx.scene.control.TextField?\u003e"},{"lineNumber":6,"author":{"gitId":"yutingzou"},"content":"\u003c?import javafx.scene.layout.AnchorPane?\u003e"},{"lineNumber":7,"author":{"gitId":"yutingzou"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e"},{"lineNumber":8,"author":{"gitId":"yutingzou"},"content":""},{"lineNumber":9,"author":{"gitId":"yutingzou"},"content":"\u003cAnchorPane maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefHeight\u003d\"600.0\" prefWidth\u003d\"400.0\" xmlns\u003d\"http://javafx.com/javafx/8.0.171\" xmlns:fx\u003d\"http://javafx.com/fxml/1\" fx:controller\u003d\"MainWindow\"\u003e"},{"lineNumber":10,"author":{"gitId":"yutingzou"},"content":"    \u003cchildren\u003e"},{"lineNumber":11,"author":{"gitId":"yutingzou"},"content":"        \u003cTextField fx:id\u003d\"userInput\" layoutY\u003d\"558.0\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"324.0\" AnchorPane.bottomAnchor\u003d\"1.0\" /\u003e"},{"lineNumber":12,"author":{"gitId":"yutingzou"},"content":"        \u003cButton fx:id\u003d\"sendButton\" layoutX\u003d\"324.0\" layoutY\u003d\"558.0\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"76.0\" text\u003d\"Send\" /\u003e"},{"lineNumber":13,"author":{"gitId":"yutingzou"},"content":"        \u003cScrollPane fx:id\u003d\"scrollPane\" hbarPolicy\u003d\"NEVER\" hvalue\u003d\"1.0\" prefHeight\u003d\"557.0\" prefWidth\u003d\"400.0\" vvalue\u003d\"1.0\"\u003e"},{"lineNumber":14,"author":{"gitId":"yutingzou"},"content":"            \u003ccontent\u003e"},{"lineNumber":15,"author":{"gitId":"yutingzou"},"content":"                \u003cVBox fx:id\u003d\"dialogContainer\" prefWidth\u003d\"388.0\" /\u003e"},{"lineNumber":16,"author":{"gitId":"yutingzou"},"content":"            \u003c/content\u003e"},{"lineNumber":17,"author":{"gitId":"yutingzou"},"content":"        \u003c/ScrollPane\u003e"},{"lineNumber":18,"author":{"gitId":"yutingzou"},"content":"    \u003c/children\u003e"},{"lineNumber":19,"author":{"gitId":"yutingzou"},"content":"\u003c/AnchorPane\u003e"}],"authorContributionMap":{"yutingzou":19}},{"path":"src/test/java/ParserTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yutingzou"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;"},{"lineNumber":2,"author":{"gitId":"yutingzou"},"content":"import static org.junit.jupiter.api.Assertions.fail;"},{"lineNumber":3,"author":{"gitId":"yutingzou"},"content":""},{"lineNumber":4,"author":{"gitId":"yutingzou"},"content":"import org.junit.jupiter.api.Test;"},{"lineNumber":5,"author":{"gitId":"yutingzou"},"content":""},{"lineNumber":6,"author":{"gitId":"yutingzou"},"content":"public class ParserTest {"},{"lineNumber":7,"author":{"gitId":"yutingzou"},"content":"    @Test"},{"lineNumber":8,"author":{"gitId":"yutingzou"},"content":"    public void parseCommand_invalidDeadlineTime_exceptionThrown() {"},{"lineNumber":9,"author":{"gitId":"yutingzou"},"content":"        Parser parser \u003d new Parser();"},{"lineNumber":10,"author":{"gitId":"yutingzou"},"content":"        try {"},{"lineNumber":11,"author":{"gitId":"yutingzou"},"content":"            String[] invalidInputs \u003d {\"deadline homework /by 2021/1/1 12:00\","},{"lineNumber":12,"author":{"gitId":"yutingzou"},"content":"                                      \"deadline homework /by 2021-1-1\","},{"lineNumber":13,"author":{"gitId":"yutingzou"},"content":"                                      \"deadline homework /by 1-1-2021\"};"},{"lineNumber":14,"author":{"gitId":"yutingzou"},"content":""},{"lineNumber":15,"author":{"gitId":"yutingzou"},"content":"            for (String testInput : invalidInputs) {"},{"lineNumber":16,"author":{"gitId":"yutingzou"},"content":"                parser.parseCommand(testInput);"},{"lineNumber":17,"author":{"gitId":"yutingzou"},"content":"                fail(\"OOPS!! Please follow the correct date/time format: yyyy-MM-dd HH:mm\");"},{"lineNumber":18,"author":{"gitId":"yutingzou"},"content":"            }"},{"lineNumber":19,"author":{"gitId":"yutingzou"},"content":"        } catch (DukeException e) {"},{"lineNumber":20,"author":{"gitId":"yutingzou"},"content":"            String expectedMessage \u003d \"OOPS!! Please follow the correct date/time format: yyyy-MM-dd HH:mm\";"},{"lineNumber":21,"author":{"gitId":"yutingzou"},"content":"            assertEquals(expectedMessage, e.getMessage());"},{"lineNumber":22,"author":{"gitId":"yutingzou"},"content":"        }"},{"lineNumber":23,"author":{"gitId":"yutingzou"},"content":"    }"},{"lineNumber":24,"author":{"gitId":"yutingzou"},"content":"}"}],"authorContributionMap":{"yutingzou":24}},{"path":"src/test/java/TaskListTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yutingzou"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;"},{"lineNumber":2,"author":{"gitId":"yutingzou"},"content":"import static org.junit.jupiter.api.Assertions.fail;"},{"lineNumber":3,"author":{"gitId":"yutingzou"},"content":""},{"lineNumber":4,"author":{"gitId":"yutingzou"},"content":"import java.util.ArrayList;"},{"lineNumber":5,"author":{"gitId":"yutingzou"},"content":""},{"lineNumber":6,"author":{"gitId":"yutingzou"},"content":"import org.junit.jupiter.api.Test;"},{"lineNumber":7,"author":{"gitId":"yutingzou"},"content":""},{"lineNumber":8,"author":{"gitId":"yutingzou"},"content":"public class TaskListTest {"},{"lineNumber":9,"author":{"gitId":"yutingzou"},"content":"    @Test"},{"lineNumber":10,"author":{"gitId":"yutingzou"},"content":"    public void deleteTask_invalidTaskNumber_exceptionThrown() {"},{"lineNumber":11,"author":{"gitId":"yutingzou"},"content":"        try {"},{"lineNumber":12,"author":{"gitId":"yutingzou"},"content":"            ArrayList\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();"},{"lineNumber":13,"author":{"gitId":"yutingzou"},"content":"            tasks.add(new ToDo(\"homework\"));"},{"lineNumber":14,"author":{"gitId":"yutingzou"},"content":"            TaskList testTaskList \u003d new TaskList(tasks);"},{"lineNumber":15,"author":{"gitId":"yutingzou"},"content":"            int invalidTaskNumber \u003d tasks.size() + 1;"},{"lineNumber":16,"author":{"gitId":"yutingzou"},"content":"            testTaskList.deleteTask(invalidTaskNumber);"},{"lineNumber":17,"author":{"gitId":"yutingzou"},"content":"            fail(\"OOPS!! The task number is invalid.\");"},{"lineNumber":18,"author":{"gitId":"yutingzou"},"content":"        } catch (DukeException e) {"},{"lineNumber":19,"author":{"gitId":"yutingzou"},"content":"            String msg \u003d \"OOPS!! The task number is invalid.\";"},{"lineNumber":20,"author":{"gitId":"yutingzou"},"content":"            assertEquals(msg, e.getMessage());"},{"lineNumber":21,"author":{"gitId":"yutingzou"},"content":"        }"},{"lineNumber":22,"author":{"gitId":"yutingzou"},"content":"    }"},{"lineNumber":23,"author":{"gitId":"yutingzou"},"content":"}"}],"authorContributionMap":{"yutingzou":23}},{"path":"src/test/java/TaskTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yutingzou"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;"},{"lineNumber":2,"author":{"gitId":"yutingzou"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;"},{"lineNumber":3,"author":{"gitId":"yutingzou"},"content":""},{"lineNumber":4,"author":{"gitId":"yutingzou"},"content":"import java.time.LocalDate;"},{"lineNumber":5,"author":{"gitId":"yutingzou"},"content":"import java.time.format.DateTimeFormatter;"},{"lineNumber":6,"author":{"gitId":"yutingzou"},"content":""},{"lineNumber":7,"author":{"gitId":"yutingzou"},"content":"import org.junit.jupiter.api.Test;"},{"lineNumber":8,"author":{"gitId":"yutingzou"},"content":""},{"lineNumber":9,"author":{"gitId":"yutingzou"},"content":"public class TaskTest {"},{"lineNumber":10,"author":{"gitId":"yutingzou"},"content":"    @Test"},{"lineNumber":11,"author":{"gitId":"yutingzou"},"content":"    public void isSameDayTest() {"},{"lineNumber":12,"author":{"gitId":"yutingzou"},"content":"        Task testTask \u003d new Task(\"homework\", \"2021-2-16 10:00\", false);"},{"lineNumber":13,"author":{"gitId":"yutingzou"},"content":"        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"yyyy-M-d\");"},{"lineNumber":14,"author":{"gitId":"yutingzou"},"content":""},{"lineNumber":15,"author":{"gitId":"yutingzou"},"content":"        LocalDate testDate1 \u003d LocalDate.parse(\"2021-2-16\", formatter);"},{"lineNumber":16,"author":{"gitId":"yutingzou"},"content":"        assertTrue(testTask.isSameDay(testDate1));"},{"lineNumber":17,"author":{"gitId":"yutingzou"},"content":""},{"lineNumber":18,"author":{"gitId":"yutingzou"},"content":"        LocalDate testDate2 \u003d LocalDate.parse(\"2020-2-16\", formatter);"},{"lineNumber":19,"author":{"gitId":"yutingzou"},"content":"        assertFalse(testTask.isSameDay(testDate2));"},{"lineNumber":20,"author":{"gitId":"yutingzou"},"content":"    }"},{"lineNumber":21,"author":{"gitId":"yutingzou"},"content":""},{"lineNumber":22,"author":{"gitId":"yutingzou"},"content":"    @Test"},{"lineNumber":23,"author":{"gitId":"yutingzou"},"content":"    public void markAsDoneTest() {"},{"lineNumber":24,"author":{"gitId":"yutingzou"},"content":"        Task testTask \u003d new Task(\"homework\", false);"},{"lineNumber":25,"author":{"gitId":"yutingzou"},"content":"        assertFalse(testTask.isDone());"},{"lineNumber":26,"author":{"gitId":"yutingzou"},"content":""},{"lineNumber":27,"author":{"gitId":"yutingzou"},"content":"        testTask.markAsDone();"},{"lineNumber":28,"author":{"gitId":"yutingzou"},"content":"        assertTrue(testTask.isDone());"},{"lineNumber":29,"author":{"gitId":"yutingzou"},"content":"    }"},{"lineNumber":30,"author":{"gitId":"yutingzou"},"content":"}"}],"authorContributionMap":{"yutingzou":30}},{"path":"tasks.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"yutingzou"},"content":"D | ✓ | hw1 | Feb 4 2021 12:00 pm"},{"lineNumber":2,"author":{"gitId":"yutingzou"},"content":"E | ✓ | project meeting | Feb 18 2021 08:00 pm"},{"lineNumber":3,"author":{"gitId":"yutingzou"},"content":"T | ✘ | shopping"},{"lineNumber":4,"author":{"gitId":"yutingzou"},"content":"D | ✘ | quiz | Feb 18 2021 02:00 pm"},{"lineNumber":5,"author":{"gitId":"yutingzou"},"content":"T | ✓ | read a book"}],"authorContributionMap":{"yutingzou":5}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"yutingzou"},"content":"todo have lunch"},{"lineNumber":2,"author":{"gitId":"yutingzou"},"content":"todo borrow a book"},{"lineNumber":3,"author":{"gitId":"yutingzou"},"content":"deadline submit homework /by Sunday"},{"lineNumber":4,"author":{"gitId":"yutingzou"},"content":"list"},{"lineNumber":5,"author":{"gitId":"yutingzou"},"content":"event project meeting /at Mon 2-4pm"},{"lineNumber":6,"author":{"gitId":"yutingzou"},"content":"deadline return book /by Sat 12pm"},{"lineNumber":7,"author":{"gitId":"yutingzou"},"content":"done 2"},{"lineNumber":8,"author":{"gitId":"yutingzou"},"content":"done 5"},{"lineNumber":9,"author":{"gitId":"yutingzou"},"content":"delete 4"},{"lineNumber":10,"author":{"gitId":"yutingzou"},"content":"delete 5"},{"lineNumber":11,"author":{"gitId":"yutingzou"},"content":"list"},{"lineNumber":12,"author":{"gitId":"yutingzou"},"content":"bye"}],"authorContributionMap":{"yutingzou":12}},{"path":"text-ui-test/runtest.sh","fileType":"sh","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"#!/usr/bin/env bash"},{"lineNumber":2,"author":{"gitId":"-"},"content":""},{"lineNumber":3,"author":{"gitId":"-"},"content":"# create bin directory if it doesn\u0027t exist"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if [ ! -d \"../bin\" ]"},{"lineNumber":5,"author":{"gitId":"-"},"content":"then"},{"lineNumber":6,"author":{"gitId":"-"},"content":"    mkdir ../bin"},{"lineNumber":7,"author":{"gitId":"-"},"content":"fi"},{"lineNumber":8,"author":{"gitId":"-"},"content":""},{"lineNumber":9,"author":{"gitId":"-"},"content":"# delete output from previous run"},{"lineNumber":10,"author":{"gitId":"-"},"content":"if [ -e \"./ACTUAL.TXT\" ]"},{"lineNumber":11,"author":{"gitId":"-"},"content":"then"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    rm ACTUAL.TXT"},{"lineNumber":13,"author":{"gitId":"-"},"content":"fi"},{"lineNumber":14,"author":{"gitId":"-"},"content":""},{"lineNumber":15,"author":{"gitId":"-"},"content":"# compile the code into the bin folder, terminates if error occurred"},{"lineNumber":16,"author":{"gitId":"yutingzou"},"content":"if ! javac -cp /Users/zouyuting/CS2103_iP/src/main/java -Xlint:none -d /Users/zouyuting/CS2103_iP/src/main/java /Users/zouyuting/CS2103_iP/src/main/java/Duke.java"},{"lineNumber":17,"author":{"gitId":"-"},"content":"then"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    echo \"********** BUILD FAILURE **********\""},{"lineNumber":19,"author":{"gitId":"-"},"content":"    exit 1"},{"lineNumber":20,"author":{"gitId":"-"},"content":"fi"},{"lineNumber":21,"author":{"gitId":"-"},"content":""},{"lineNumber":22,"author":{"gitId":"-"},"content":"# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"},{"lineNumber":23,"author":{"gitId":"yutingzou"},"content":"java -classpath /Users/zouyuting/CS2103_iP/src/main/java Duke \u003c input.txt \u003e ACTUAL.TXT"},{"lineNumber":24,"author":{"gitId":"-"},"content":""},{"lineNumber":25,"author":{"gitId":"-"},"content":"# convert to UNIX format"},{"lineNumber":26,"author":{"gitId":"-"},"content":"cp EXPECTED.TXT EXPECTED-UNIX.TXT"},{"lineNumber":27,"author":{"gitId":"-"},"content":"dos2unix ACTUAL.TXT EXPECTED-UNIX.TXT"},{"lineNumber":28,"author":{"gitId":"-"},"content":""},{"lineNumber":29,"author":{"gitId":"-"},"content":"# compare the output to the expected output"},{"lineNumber":30,"author":{"gitId":"-"},"content":"diff ACTUAL.TXT EXPECTED-UNIX.TXT"},{"lineNumber":31,"author":{"gitId":"-"},"content":"if [ $? -eq 0 ]"},{"lineNumber":32,"author":{"gitId":"-"},"content":"then"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    echo \"Test result: PASSED\""},{"lineNumber":34,"author":{"gitId":"-"},"content":"    exit 0"},{"lineNumber":35,"author":{"gitId":"-"},"content":"else"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    echo \"Test result: FAILED\""},{"lineNumber":37,"author":{"gitId":"-"},"content":"    exit 1"},{"lineNumber":38,"author":{"gitId":"-"},"content":"fi"}],"authorContributionMap":{"yutingzou":2,"-":36}}]
