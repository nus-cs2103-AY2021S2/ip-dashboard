[{"path":"src/main/java/duke/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yeoutzer"},"content":"package duke;"},{"lineNumber":2,"author":{"gitId":"yeoutzer"},"content":""},{"lineNumber":3,"author":{"gitId":"yeoutzer"},"content":"import duke.commands.*;"},{"lineNumber":4,"author":{"gitId":"yeoutzer"},"content":""},{"lineNumber":5,"author":{"gitId":"yeoutzer"},"content":"import duke.parser.Parser;"},{"lineNumber":6,"author":{"gitId":"yeoutzer"},"content":""},{"lineNumber":7,"author":{"gitId":"yeoutzer"},"content":"import duke.exceptions.*;"},{"lineNumber":8,"author":{"gitId":"yeoutzer"},"content":""},{"lineNumber":9,"author":{"gitId":"yeoutzer"},"content":"import duke.storage.Storage;"},{"lineNumber":10,"author":{"gitId":"yeoutzer"},"content":""},{"lineNumber":11,"author":{"gitId":"yeoutzer"},"content":"import duke.tasks.TaskList;"},{"lineNumber":12,"author":{"gitId":"yeoutzer"},"content":""},{"lineNumber":13,"author":{"gitId":"yeoutzer"},"content":"import duke.ui.Ui;"},{"lineNumber":14,"author":{"gitId":"yeoutzer"},"content":""},{"lineNumber":15,"author":{"gitId":"yeoutzer"},"content":"import java.io.FileNotFoundException;"},{"lineNumber":16,"author":{"gitId":"yeoutzer"},"content":"import java.io.IOException;"},{"lineNumber":17,"author":{"gitId":"yeoutzer"},"content":""},{"lineNumber":18,"author":{"gitId":"yeoutzer"},"content":"import java.time.format.DateTimeParseException;"},{"lineNumber":19,"author":{"gitId":"yeoutzer"},"content":""},{"lineNumber":20,"author":{"gitId":"yeoutzer"},"content":"/**"},{"lineNumber":21,"author":{"gitId":"yeoutzer"},"content":" * This class processes command line inputs and edit list of task."},{"lineNumber":22,"author":{"gitId":"yeoutzer"},"content":" */"},{"lineNumber":23,"author":{"gitId":"-"},"content":"public class Duke {"},{"lineNumber":24,"author":{"gitId":"yeoutzer"},"content":"    private Storage storage;"},{"lineNumber":25,"author":{"gitId":"yeoutzer"},"content":"    private TaskList tasks;"},{"lineNumber":26,"author":{"gitId":"yeoutzer"},"content":"    private Ui ui;"},{"lineNumber":27,"author":{"gitId":"yeoutzer"},"content":""},{"lineNumber":28,"author":{"gitId":"yeoutzer"},"content":"    /**"},{"lineNumber":29,"author":{"gitId":"yeoutzer"},"content":"     * Constructs a Duke with specified save file location."},{"lineNumber":30,"author":{"gitId":"yeoutzer"},"content":"     *"},{"lineNumber":31,"author":{"gitId":"yeoutzer"},"content":"     * @param filePath File path of the save file."},{"lineNumber":32,"author":{"gitId":"yeoutzer"},"content":"     */"},{"lineNumber":33,"author":{"gitId":"yeoutzer"},"content":"    public Duke(String filePath) {"},{"lineNumber":34,"author":{"gitId":"yeoutzer"},"content":"        try {"},{"lineNumber":35,"author":{"gitId":"yeoutzer"},"content":"            ui \u003d new Ui();"},{"lineNumber":36,"author":{"gitId":"yeoutzer"},"content":"            storage \u003d new Storage(filePath);"},{"lineNumber":37,"author":{"gitId":"yeoutzer"},"content":"            storage.initialize();"},{"lineNumber":38,"author":{"gitId":"yeoutzer"},"content":"            tasks \u003d new TaskList(storage.load());"},{"lineNumber":39,"author":{"gitId":"yeoutzer"},"content":"        } catch (FileNotFoundException e) {"},{"lineNumber":40,"author":{"gitId":"yeoutzer"},"content":"            System.out.println(\"Error: File does not exists.\");"},{"lineNumber":41,"author":{"gitId":"yeoutzer"},"content":"            System.exit(1);"},{"lineNumber":42,"author":{"gitId":"yeoutzer"},"content":"        } catch (SaveFileInvalidFormatException e) {"},{"lineNumber":43,"author":{"gitId":"yeoutzer"},"content":"            System.out.println(\"Error: Invalid content format in save file\");"},{"lineNumber":44,"author":{"gitId":"yeoutzer"},"content":"            System.exit(1);"},{"lineNumber":45,"author":{"gitId":"yeoutzer"},"content":"        } catch (DateTimeParseException e) {"},{"lineNumber":46,"author":{"gitId":"yeoutzer"},"content":"            System.out.println(\"Error: Invalid date time format in save file or no date time stated\");"},{"lineNumber":47,"author":{"gitId":"yeoutzer"},"content":"            System.exit(1);"},{"lineNumber":48,"author":{"gitId":"yeoutzer"},"content":"        } catch (IOException e) {"},{"lineNumber":49,"author":{"gitId":"yeoutzer"},"content":"            System.out.println(\"Error happened while trying to create save file\");"},{"lineNumber":50,"author":{"gitId":"yeoutzer"},"content":"            System.exit(1);"},{"lineNumber":51,"author":{"gitId":"yeoutzer"},"content":"        }"},{"lineNumber":52,"author":{"gitId":"yeoutzer"},"content":"    }"},{"lineNumber":53,"author":{"gitId":"yeoutzer"},"content":""},{"lineNumber":54,"author":{"gitId":"yeoutzer"},"content":"    /**"},{"lineNumber":55,"author":{"gitId":"yeoutzer"},"content":"     * Start the program of Duke that edits a lists of task."},{"lineNumber":56,"author":{"gitId":"yeoutzer"},"content":"     */"},{"lineNumber":57,"author":{"gitId":"yeoutzer"},"content":"    public void run() {"},{"lineNumber":58,"author":{"gitId":"yeoutzer"},"content":"        ui.showWelcome();"},{"lineNumber":59,"author":{"gitId":"yeoutzer"},"content":"        boolean isExit \u003d false;"},{"lineNumber":60,"author":{"gitId":"yeoutzer"},"content":"        while (!isExit) {"},{"lineNumber":61,"author":{"gitId":"yeoutzer"},"content":"            try {"},{"lineNumber":62,"author":{"gitId":"yeoutzer"},"content":"                String fullCommand \u003d ui.readCommand();"},{"lineNumber":63,"author":{"gitId":"yeoutzer"},"content":"                Command command \u003d Parser.parse(fullCommand);"},{"lineNumber":64,"author":{"gitId":"yeoutzer"},"content":"                command.execute(tasks, ui, storage);"},{"lineNumber":65,"author":{"gitId":"yeoutzer"},"content":"                isExit \u003d command.isExit();"},{"lineNumber":66,"author":{"gitId":"yeoutzer"},"content":"            } catch (DukeException e) {"},{"lineNumber":67,"author":{"gitId":"yeoutzer"},"content":"                ui.showError(e.getMessage());"},{"lineNumber":68,"author":{"gitId":"yeoutzer"},"content":"            } catch (IOException e) {"},{"lineNumber":69,"author":{"gitId":"yeoutzer"},"content":"                ui.showIOError();"},{"lineNumber":70,"author":{"gitId":"yeoutzer"},"content":"            } catch (StringIndexOutOfBoundsException e) {"},{"lineNumber":71,"author":{"gitId":"yeoutzer"},"content":"                ui.showOutOfBoundsError();"},{"lineNumber":72,"author":{"gitId":"yeoutzer"},"content":"            } catch (DateTimeParseException e) {"},{"lineNumber":73,"author":{"gitId":"yeoutzer"},"content":"                ui.showDateTimeParseError();"},{"lineNumber":74,"author":{"gitId":"yeoutzer"},"content":"            }"},{"lineNumber":75,"author":{"gitId":"yeoutzer"},"content":"        }"},{"lineNumber":76,"author":{"gitId":"yeoutzer"},"content":"    }"},{"lineNumber":77,"author":{"gitId":"yeoutzer"},"content":""},{"lineNumber":78,"author":{"gitId":"yeoutzer"},"content":"    public static void main(String[] args) {"},{"lineNumber":79,"author":{"gitId":"yeoutzer"},"content":"        String dir \u003d System.getProperty(\"user.dir\");"},{"lineNumber":80,"author":{"gitId":"yeoutzer"},"content":"        new Duke(dir + \"/data/Duke.txt\").run();"},{"lineNumber":81,"author":{"gitId":"yeoutzer"},"content":"    }"},{"lineNumber":82,"author":{"gitId":"-"},"content":"}"}],"authorContributionMap":{"yeoutzer":80,"-":2}},{"path":"src/main/java/duke/commands/AddCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yeoutzer"},"content":"package duke.commands;"},{"lineNumber":2,"author":{"gitId":"yeoutzer"},"content":""},{"lineNumber":3,"author":{"gitId":"yeoutzer"},"content":"import duke.tasks.*;"},{"lineNumber":4,"author":{"gitId":"yeoutzer"},"content":""},{"lineNumber":5,"author":{"gitId":"yeoutzer"},"content":"import duke.ui.Ui;"},{"lineNumber":6,"author":{"gitId":"yeoutzer"},"content":""},{"lineNumber":7,"author":{"gitId":"yeoutzer"},"content":"import duke.storage.Storage;"},{"lineNumber":8,"author":{"gitId":"yeoutzer"},"content":""},{"lineNumber":9,"author":{"gitId":"yeoutzer"},"content":"import duke.exceptions.*;"},{"lineNumber":10,"author":{"gitId":"yeoutzer"},"content":""},{"lineNumber":11,"author":{"gitId":"yeoutzer"},"content":"import java.io.IOException;"},{"lineNumber":12,"author":{"gitId":"yeoutzer"},"content":"import java.time.LocalDate;"},{"lineNumber":13,"author":{"gitId":"yeoutzer"},"content":"import java.time.LocalTime;"},{"lineNumber":14,"author":{"gitId":"yeoutzer"},"content":"import java.time.format.DateTimeFormatter;"},{"lineNumber":15,"author":{"gitId":"yeoutzer"},"content":"import java.time.format.DateTimeParseException;"},{"lineNumber":16,"author":{"gitId":"yeoutzer"},"content":""},{"lineNumber":17,"author":{"gitId":"yeoutzer"},"content":"/**"},{"lineNumber":18,"author":{"gitId":"yeoutzer"},"content":" * Responsible for dealing with the addition of tasks."},{"lineNumber":19,"author":{"gitId":"yeoutzer"},"content":" */"},{"lineNumber":20,"author":{"gitId":"yeoutzer"},"content":"public class AddCommand extends Command {"},{"lineNumber":21,"author":{"gitId":"yeoutzer"},"content":"    private String fullCommand;"},{"lineNumber":22,"author":{"gitId":"yeoutzer"},"content":"    private String[] checkCommands;"},{"lineNumber":23,"author":{"gitId":"yeoutzer"},"content":""},{"lineNumber":24,"author":{"gitId":"yeoutzer"},"content":"    /**"},{"lineNumber":25,"author":{"gitId":"yeoutzer"},"content":"     * Constructs a AddCommand with the given full command line."},{"lineNumber":26,"author":{"gitId":"yeoutzer"},"content":"     *"},{"lineNumber":27,"author":{"gitId":"yeoutzer"},"content":"     * @param fullCommand Full command line input."},{"lineNumber":28,"author":{"gitId":"yeoutzer"},"content":"     */"},{"lineNumber":29,"author":{"gitId":"yeoutzer"},"content":"    public AddCommand(String fullCommand) {"},{"lineNumber":30,"author":{"gitId":"yeoutzer"},"content":"        this.fullCommand \u003d fullCommand;"},{"lineNumber":31,"author":{"gitId":"yeoutzer"},"content":"        this.checkCommands \u003d fullCommand.split(\" \");"},{"lineNumber":32,"author":{"gitId":"yeoutzer"},"content":"    }"},{"lineNumber":33,"author":{"gitId":"yeoutzer"},"content":""},{"lineNumber":34,"author":{"gitId":"yeoutzer"},"content":"    /**"},{"lineNumber":35,"author":{"gitId":"yeoutzer"},"content":"     * Adds the specified task into the TaskList given by command line"},{"lineNumber":36,"author":{"gitId":"yeoutzer"},"content":"     * and save changes into the save file."},{"lineNumber":37,"author":{"gitId":"yeoutzer"},"content":"     *"},{"lineNumber":38,"author":{"gitId":"yeoutzer"},"content":"     * @param tasks TaskList to add task into."},{"lineNumber":39,"author":{"gitId":"yeoutzer"},"content":"     * @param ui Ui for system outputs."},{"lineNumber":40,"author":{"gitId":"yeoutzer"},"content":"     * @param storage Storage for saving contents into file."},{"lineNumber":41,"author":{"gitId":"yeoutzer"},"content":"     * @throws DukeException If error happens while adding task."},{"lineNumber":42,"author":{"gitId":"yeoutzer"},"content":"     * @throws DateTimeParseException If date and time format in command is incorrect."},{"lineNumber":43,"author":{"gitId":"yeoutzer"},"content":"     * @throws StringIndexOutOfBoundsException If format in command is incorrect."},{"lineNumber":44,"author":{"gitId":"yeoutzer"},"content":"     * @throws IOException If error happens while saving contents into file."},{"lineNumber":45,"author":{"gitId":"yeoutzer"},"content":"     */"},{"lineNumber":46,"author":{"gitId":"yeoutzer"},"content":"    @Override"},{"lineNumber":47,"author":{"gitId":"yeoutzer"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage) throws DukeException,"},{"lineNumber":48,"author":{"gitId":"yeoutzer"},"content":"            DateTimeParseException, StringIndexOutOfBoundsException, IOException {"},{"lineNumber":49,"author":{"gitId":"yeoutzer"},"content":"        Task temp;"},{"lineNumber":50,"author":{"gitId":"yeoutzer"},"content":"        String description;"},{"lineNumber":51,"author":{"gitId":"yeoutzer"},"content":"        String dateTime;"},{"lineNumber":52,"author":{"gitId":"yeoutzer"},"content":""},{"lineNumber":53,"author":{"gitId":"yeoutzer"},"content":"        if (checkCommands[0].equals(\"todo\") || checkCommands[0].equals(\"deadline\") || checkCommands[0].equals(\"event\")) {"},{"lineNumber":54,"author":{"gitId":"yeoutzer"},"content":"            if (checkCommands.length \u003d\u003d 1) {"},{"lineNumber":55,"author":{"gitId":"yeoutzer"},"content":"                throw new DescriptionNotFoundException();"},{"lineNumber":56,"author":{"gitId":"yeoutzer"},"content":"            }"},{"lineNumber":57,"author":{"gitId":"yeoutzer"},"content":"            if (checkCommands[0].equals(\"todo\")) {"},{"lineNumber":58,"author":{"gitId":"yeoutzer"},"content":"                description \u003d fullCommand.substring(5).trim();"},{"lineNumber":59,"author":{"gitId":"yeoutzer"},"content":"                temp \u003d new TodoTask(description);"},{"lineNumber":60,"author":{"gitId":"yeoutzer"},"content":"            } else if (checkCommands[0].equals(\"deadline\")) {"},{"lineNumber":61,"author":{"gitId":"yeoutzer"},"content":"                int index \u003d fullCommand.indexOf(\"/by\");"},{"lineNumber":62,"author":{"gitId":"yeoutzer"},"content":"                if (index \u003d\u003d -1) {"},{"lineNumber":63,"author":{"gitId":"yeoutzer"},"content":"                    throw new DateTimeNotFoundException();"},{"lineNumber":64,"author":{"gitId":"yeoutzer"},"content":"                }"},{"lineNumber":65,"author":{"gitId":"yeoutzer"},"content":""},{"lineNumber":66,"author":{"gitId":"yeoutzer"},"content":"                description \u003d fullCommand.substring(9, index).trim();"},{"lineNumber":67,"author":{"gitId":"yeoutzer"},"content":"                if (description.isEmpty()) {"},{"lineNumber":68,"author":{"gitId":"yeoutzer"},"content":"                    throw new DescriptionNotFoundException();"},{"lineNumber":69,"author":{"gitId":"yeoutzer"},"content":"                }"},{"lineNumber":70,"author":{"gitId":"yeoutzer"},"content":""},{"lineNumber":71,"author":{"gitId":"yeoutzer"},"content":"                dateTime \u003d fullCommand.substring(index + 3).trim();"},{"lineNumber":72,"author":{"gitId":"yeoutzer"},"content":"                if (dateTime.isEmpty()) {"},{"lineNumber":73,"author":{"gitId":"yeoutzer"},"content":"                    throw new DateTimeNotFoundException();"},{"lineNumber":74,"author":{"gitId":"yeoutzer"},"content":"                }"},{"lineNumber":75,"author":{"gitId":"yeoutzer"},"content":""},{"lineNumber":76,"author":{"gitId":"yeoutzer"},"content":"                String dateString \u003d dateTime.substring(0, 10);"},{"lineNumber":77,"author":{"gitId":"yeoutzer"},"content":"                LocalDate date \u003d LocalDate."},{"lineNumber":78,"author":{"gitId":"yeoutzer"},"content":"                        parse(dateString, DateTimeFormatter.ofPattern(\"dd/MM/yyyy\"));"},{"lineNumber":79,"author":{"gitId":"yeoutzer"},"content":"                String timeString \u003d dateTime.substring(10).trim();"},{"lineNumber":80,"author":{"gitId":"yeoutzer"},"content":"                if (timeString.isEmpty()) {"},{"lineNumber":81,"author":{"gitId":"yeoutzer"},"content":"                    temp \u003d new DeadlineTask(description, date);"},{"lineNumber":82,"author":{"gitId":"yeoutzer"},"content":"                } else {"},{"lineNumber":83,"author":{"gitId":"yeoutzer"},"content":"                    LocalTime time \u003d LocalTime."},{"lineNumber":84,"author":{"gitId":"yeoutzer"},"content":"                            parse(dateTime.substring(10).trim(), DateTimeFormatter.ofPattern(\"HHmm\"));"},{"lineNumber":85,"author":{"gitId":"yeoutzer"},"content":"                    temp \u003d new DeadlineTask(description, date, time);"},{"lineNumber":86,"author":{"gitId":"yeoutzer"},"content":"                }"},{"lineNumber":87,"author":{"gitId":"yeoutzer"},"content":"            } else {"},{"lineNumber":88,"author":{"gitId":"yeoutzer"},"content":"                int index \u003d fullCommand.indexOf(\"/at\");"},{"lineNumber":89,"author":{"gitId":"yeoutzer"},"content":"                if (index \u003d\u003d -1) {"},{"lineNumber":90,"author":{"gitId":"yeoutzer"},"content":"                    throw new DateTimeNotFoundException();"},{"lineNumber":91,"author":{"gitId":"yeoutzer"},"content":"                }"},{"lineNumber":92,"author":{"gitId":"yeoutzer"},"content":""},{"lineNumber":93,"author":{"gitId":"yeoutzer"},"content":"                description \u003d fullCommand.substring(6, index).trim();"},{"lineNumber":94,"author":{"gitId":"yeoutzer"},"content":"                if (description.isEmpty()) {"},{"lineNumber":95,"author":{"gitId":"yeoutzer"},"content":"                    throw new DescriptionNotFoundException();"},{"lineNumber":96,"author":{"gitId":"yeoutzer"},"content":"                }"},{"lineNumber":97,"author":{"gitId":"yeoutzer"},"content":""},{"lineNumber":98,"author":{"gitId":"yeoutzer"},"content":"                dateTime \u003d fullCommand.substring(index + 3).trim();"},{"lineNumber":99,"author":{"gitId":"yeoutzer"},"content":"                if (dateTime.isEmpty()) {"},{"lineNumber":100,"author":{"gitId":"yeoutzer"},"content":"                    throw new DateTimeNotFoundException();"},{"lineNumber":101,"author":{"gitId":"yeoutzer"},"content":"                }"},{"lineNumber":102,"author":{"gitId":"yeoutzer"},"content":""},{"lineNumber":103,"author":{"gitId":"yeoutzer"},"content":"                String dateString \u003d dateTime.substring(0, 10);"},{"lineNumber":104,"author":{"gitId":"yeoutzer"},"content":"                LocalDate date \u003d LocalDate."},{"lineNumber":105,"author":{"gitId":"yeoutzer"},"content":"                        parse(dateString, DateTimeFormatter.ofPattern(\"dd/MM/yyyy\"));"},{"lineNumber":106,"author":{"gitId":"yeoutzer"},"content":"                String timeString \u003d dateTime.substring(10).trim();"},{"lineNumber":107,"author":{"gitId":"yeoutzer"},"content":"                if (timeString.isEmpty()) {"},{"lineNumber":108,"author":{"gitId":"yeoutzer"},"content":"                    temp \u003d new EventTask(description, date);"},{"lineNumber":109,"author":{"gitId":"yeoutzer"},"content":"                } else {"},{"lineNumber":110,"author":{"gitId":"yeoutzer"},"content":"                    String startTimeString \u003d timeString.substring(0, 4);"},{"lineNumber":111,"author":{"gitId":"yeoutzer"},"content":"                    LocalTime startTime \u003d LocalTime."},{"lineNumber":112,"author":{"gitId":"yeoutzer"},"content":"                            parse(startTimeString, DateTimeFormatter.ofPattern(\"HHmm\"));"},{"lineNumber":113,"author":{"gitId":"yeoutzer"},"content":"                    String endTimeString \u003d timeString.substring(4).trim();"},{"lineNumber":114,"author":{"gitId":"yeoutzer"},"content":"                    if (endTimeString.isEmpty()) {"},{"lineNumber":115,"author":{"gitId":"yeoutzer"},"content":"                        temp \u003d new EventTask(description, date, startTime);"},{"lineNumber":116,"author":{"gitId":"yeoutzer"},"content":"                    } else {"},{"lineNumber":117,"author":{"gitId":"yeoutzer"},"content":"                        LocalTime endTime \u003d LocalTime."},{"lineNumber":118,"author":{"gitId":"yeoutzer"},"content":"                                parse(endTimeString, DateTimeFormatter.ofPattern(\"HHmm\"));"},{"lineNumber":119,"author":{"gitId":"yeoutzer"},"content":"                        if (endTime.compareTo(startTime) \u003c 0) {"},{"lineNumber":120,"author":{"gitId":"yeoutzer"},"content":"                            throw new TimeDurationInvalidException();"},{"lineNumber":121,"author":{"gitId":"yeoutzer"},"content":"                        }"},{"lineNumber":122,"author":{"gitId":"yeoutzer"},"content":"                        temp \u003d new EventTask(description, date, startTime, endTime);"},{"lineNumber":123,"author":{"gitId":"yeoutzer"},"content":"                    }"},{"lineNumber":124,"author":{"gitId":"yeoutzer"},"content":"                }"},{"lineNumber":125,"author":{"gitId":"yeoutzer"},"content":"            }"},{"lineNumber":126,"author":{"gitId":"yeoutzer"},"content":"        } else {"},{"lineNumber":127,"author":{"gitId":"yeoutzer"},"content":"            throw new CommandNotValidException();"},{"lineNumber":128,"author":{"gitId":"yeoutzer"},"content":"        }"},{"lineNumber":129,"author":{"gitId":"yeoutzer"},"content":"        tasks.add(temp);"},{"lineNumber":130,"author":{"gitId":"yeoutzer"},"content":"        ui.showAddTask(tasks, temp);"},{"lineNumber":131,"author":{"gitId":"yeoutzer"},"content":"        storage.save(tasks);"},{"lineNumber":132,"author":{"gitId":"yeoutzer"},"content":"    }"},{"lineNumber":133,"author":{"gitId":"yeoutzer"},"content":""},{"lineNumber":134,"author":{"gitId":"yeoutzer"},"content":"    /**"},{"lineNumber":135,"author":{"gitId":"yeoutzer"},"content":"     * Returns if program should exit after this command."},{"lineNumber":136,"author":{"gitId":"yeoutzer"},"content":"     *"},{"lineNumber":137,"author":{"gitId":"yeoutzer"},"content":"     * @return false."},{"lineNumber":138,"author":{"gitId":"yeoutzer"},"content":"     */"},{"lineNumber":139,"author":{"gitId":"yeoutzer"},"content":"    @Override"},{"lineNumber":140,"author":{"gitId":"yeoutzer"},"content":"    public boolean isExit() {"},{"lineNumber":141,"author":{"gitId":"yeoutzer"},"content":"        return false;"},{"lineNumber":142,"author":{"gitId":"yeoutzer"},"content":"    }"},{"lineNumber":143,"author":{"gitId":"yeoutzer"},"content":"}"}],"authorContributionMap":{"yeoutzer":143}},{"path":"src/main/java/duke/commands/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yeoutzer"},"content":"package duke.commands;"},{"lineNumber":2,"author":{"gitId":"yeoutzer"},"content":""},{"lineNumber":3,"author":{"gitId":"yeoutzer"},"content":"import duke.exceptions.*;"},{"lineNumber":4,"author":{"gitId":"yeoutzer"},"content":""},{"lineNumber":5,"author":{"gitId":"yeoutzer"},"content":"import duke.tasks.TaskList;"},{"lineNumber":6,"author":{"gitId":"yeoutzer"},"content":""},{"lineNumber":7,"author":{"gitId":"yeoutzer"},"content":"import duke.ui.Ui;"},{"lineNumber":8,"author":{"gitId":"yeoutzer"},"content":""},{"lineNumber":9,"author":{"gitId":"yeoutzer"},"content":"import duke.storage.Storage;"},{"lineNumber":10,"author":{"gitId":"yeoutzer"},"content":""},{"lineNumber":11,"author":{"gitId":"yeoutzer"},"content":"import java.io.IOException;"},{"lineNumber":12,"author":{"gitId":"yeoutzer"},"content":""},{"lineNumber":13,"author":{"gitId":"yeoutzer"},"content":"/**"},{"lineNumber":14,"author":{"gitId":"yeoutzer"},"content":" * Abstract class responsible for executing command line inputs."},{"lineNumber":15,"author":{"gitId":"yeoutzer"},"content":" */"},{"lineNumber":16,"author":{"gitId":"yeoutzer"},"content":"public abstract class Command {"},{"lineNumber":17,"author":{"gitId":"yeoutzer"},"content":"    /**"},{"lineNumber":18,"author":{"gitId":"yeoutzer"},"content":"     * Executes the command specified in the commannd line input."},{"lineNumber":19,"author":{"gitId":"yeoutzer"},"content":"     *"},{"lineNumber":20,"author":{"gitId":"yeoutzer"},"content":"     * @param tasks TaskList containing tasks."},{"lineNumber":21,"author":{"gitId":"yeoutzer"},"content":"     * @param ui Ui for system outputs."},{"lineNumber":22,"author":{"gitId":"yeoutzer"},"content":"     * @param storage Storage for saving contents into file."},{"lineNumber":23,"author":{"gitId":"yeoutzer"},"content":"     * @throws IOException If error happens while saving contents into save file."},{"lineNumber":24,"author":{"gitId":"yeoutzer"},"content":"     * @throws DukeException If error happens while executing command."},{"lineNumber":25,"author":{"gitId":"yeoutzer"},"content":"     */"},{"lineNumber":26,"author":{"gitId":"yeoutzer"},"content":"    public abstract void execute(TaskList tasks, Ui ui, Storage storage) throws IOException, DukeException;"},{"lineNumber":27,"author":{"gitId":"yeoutzer"},"content":""},{"lineNumber":28,"author":{"gitId":"yeoutzer"},"content":"    /**"},{"lineNumber":29,"author":{"gitId":"yeoutzer"},"content":"     * Returns if program should exit after this command."},{"lineNumber":30,"author":{"gitId":"yeoutzer"},"content":"     *"},{"lineNumber":31,"author":{"gitId":"yeoutzer"},"content":"     * @return true if should program should exit after command, false otherwise."},{"lineNumber":32,"author":{"gitId":"yeoutzer"},"content":"     */"},{"lineNumber":33,"author":{"gitId":"yeoutzer"},"content":"    public abstract boolean isExit();"},{"lineNumber":34,"author":{"gitId":"yeoutzer"},"content":"}"}],"authorContributionMap":{"yeoutzer":34}},{"path":"src/main/java/duke/commands/DeleteCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yeoutzer"},"content":"package duke.commands;"},{"lineNumber":2,"author":{"gitId":"yeoutzer"},"content":""},{"lineNumber":3,"author":{"gitId":"yeoutzer"},"content":"import duke.exceptions.*;"},{"lineNumber":4,"author":{"gitId":"yeoutzer"},"content":""},{"lineNumber":5,"author":{"gitId":"yeoutzer"},"content":"import duke.tasks.TaskList;"},{"lineNumber":6,"author":{"gitId":"yeoutzer"},"content":"import duke.tasks.Task;"},{"lineNumber":7,"author":{"gitId":"yeoutzer"},"content":""},{"lineNumber":8,"author":{"gitId":"yeoutzer"},"content":"import duke.ui.Ui;"},{"lineNumber":9,"author":{"gitId":"yeoutzer"},"content":""},{"lineNumber":10,"author":{"gitId":"yeoutzer"},"content":"import duke.storage.Storage;"},{"lineNumber":11,"author":{"gitId":"yeoutzer"},"content":""},{"lineNumber":12,"author":{"gitId":"yeoutzer"},"content":"import java.io.IOException;"},{"lineNumber":13,"author":{"gitId":"yeoutzer"},"content":""},{"lineNumber":14,"author":{"gitId":"yeoutzer"},"content":"/**"},{"lineNumber":15,"author":{"gitId":"yeoutzer"},"content":" * Responsible for dealing with the deletion of tasks."},{"lineNumber":16,"author":{"gitId":"yeoutzer"},"content":" */"},{"lineNumber":17,"author":{"gitId":"yeoutzer"},"content":"public class DeleteCommand extends Command {"},{"lineNumber":18,"author":{"gitId":"yeoutzer"},"content":"    private String[] checkCommands;"},{"lineNumber":19,"author":{"gitId":"yeoutzer"},"content":""},{"lineNumber":20,"author":{"gitId":"yeoutzer"},"content":"    /**"},{"lineNumber":21,"author":{"gitId":"yeoutzer"},"content":"     * Constructs a DeleteCommand with the given full command line."},{"lineNumber":22,"author":{"gitId":"yeoutzer"},"content":"     *"},{"lineNumber":23,"author":{"gitId":"yeoutzer"},"content":"     * @param fullCommand Full command line input."},{"lineNumber":24,"author":{"gitId":"yeoutzer"},"content":"     */"},{"lineNumber":25,"author":{"gitId":"yeoutzer"},"content":"    public DeleteCommand(String fullCommand) {"},{"lineNumber":26,"author":{"gitId":"yeoutzer"},"content":"        this.checkCommands \u003d fullCommand.split(\" \");"},{"lineNumber":27,"author":{"gitId":"yeoutzer"},"content":"    }"},{"lineNumber":28,"author":{"gitId":"yeoutzer"},"content":""},{"lineNumber":29,"author":{"gitId":"yeoutzer"},"content":"    /**"},{"lineNumber":30,"author":{"gitId":"yeoutzer"},"content":"     * Deletes the indicated task from TaskList given by command line"},{"lineNumber":31,"author":{"gitId":"yeoutzer"},"content":"     * and save changes into the save file."},{"lineNumber":32,"author":{"gitId":"yeoutzer"},"content":"     *"},{"lineNumber":33,"author":{"gitId":"yeoutzer"},"content":"     * @param tasks TaskList to delete task from."},{"lineNumber":34,"author":{"gitId":"yeoutzer"},"content":"     * @param ui Ui for system outputs."},{"lineNumber":35,"author":{"gitId":"yeoutzer"},"content":"     * @param storage Storage for saving contents into file."},{"lineNumber":36,"author":{"gitId":"yeoutzer"},"content":"     * @throws DukeException If error happens while deleting tasks."},{"lineNumber":37,"author":{"gitId":"yeoutzer"},"content":"     * @throws IOException If error happens while saving contents into file."},{"lineNumber":38,"author":{"gitId":"yeoutzer"},"content":"     */"},{"lineNumber":39,"author":{"gitId":"yeoutzer"},"content":"    @Override"},{"lineNumber":40,"author":{"gitId":"yeoutzer"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage) throws DukeException, IOException {"},{"lineNumber":41,"author":{"gitId":"yeoutzer"},"content":"        if (checkCommands.length \u003d\u003d 1 || !isNumber(checkCommands[1])) {"},{"lineNumber":42,"author":{"gitId":"yeoutzer"},"content":"            throw new TaskSelectionInvalidException();"},{"lineNumber":43,"author":{"gitId":"yeoutzer"},"content":"        }"},{"lineNumber":44,"author":{"gitId":"yeoutzer"},"content":"        int num \u003d Integer.parseInt(checkCommands[1]);"},{"lineNumber":45,"author":{"gitId":"yeoutzer"},"content":"        if (num \u003e 0 \u0026\u0026 num \u003c\u003d tasks.size()) {"},{"lineNumber":46,"author":{"gitId":"yeoutzer"},"content":"            Task deleted \u003d tasks.getTask(num - 1);"},{"lineNumber":47,"author":{"gitId":"yeoutzer"},"content":"            tasks.remove(num - 1);"},{"lineNumber":48,"author":{"gitId":"yeoutzer"},"content":"            ui.showDeleteTask(tasks, deleted);"},{"lineNumber":49,"author":{"gitId":"yeoutzer"},"content":"        } else {"},{"lineNumber":50,"author":{"gitId":"yeoutzer"},"content":"            throw new TaskNotFoundException();"},{"lineNumber":51,"author":{"gitId":"yeoutzer"},"content":"        }"},{"lineNumber":52,"author":{"gitId":"yeoutzer"},"content":"        storage.save(tasks);"},{"lineNumber":53,"author":{"gitId":"yeoutzer"},"content":"    }"},{"lineNumber":54,"author":{"gitId":"yeoutzer"},"content":""},{"lineNumber":55,"author":{"gitId":"yeoutzer"},"content":"    /**"},{"lineNumber":56,"author":{"gitId":"yeoutzer"},"content":"     * Returns if program should exit after this command."},{"lineNumber":57,"author":{"gitId":"yeoutzer"},"content":"     *"},{"lineNumber":58,"author":{"gitId":"yeoutzer"},"content":"     * @return false."},{"lineNumber":59,"author":{"gitId":"yeoutzer"},"content":"     */"},{"lineNumber":60,"author":{"gitId":"yeoutzer"},"content":"    @Override"},{"lineNumber":61,"author":{"gitId":"yeoutzer"},"content":"    public boolean isExit() {"},{"lineNumber":62,"author":{"gitId":"yeoutzer"},"content":"        return false;"},{"lineNumber":63,"author":{"gitId":"yeoutzer"},"content":"    }"},{"lineNumber":64,"author":{"gitId":"yeoutzer"},"content":""},{"lineNumber":65,"author":{"gitId":"yeoutzer"},"content":"    private boolean isNumber(String checkString) {"},{"lineNumber":66,"author":{"gitId":"yeoutzer"},"content":"        try {"},{"lineNumber":67,"author":{"gitId":"yeoutzer"},"content":"            Integer.parseInt(checkString);"},{"lineNumber":68,"author":{"gitId":"yeoutzer"},"content":"            return true;"},{"lineNumber":69,"author":{"gitId":"yeoutzer"},"content":"        } catch (NumberFormatException e) {"},{"lineNumber":70,"author":{"gitId":"yeoutzer"},"content":"            return false;"},{"lineNumber":71,"author":{"gitId":"yeoutzer"},"content":"        }"},{"lineNumber":72,"author":{"gitId":"yeoutzer"},"content":"    }"},{"lineNumber":73,"author":{"gitId":"yeoutzer"},"content":"}"}],"authorContributionMap":{"yeoutzer":73}},{"path":"src/main/java/duke/commands/DoneCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yeoutzer"},"content":"package duke.commands;"},{"lineNumber":2,"author":{"gitId":"yeoutzer"},"content":""},{"lineNumber":3,"author":{"gitId":"yeoutzer"},"content":"import duke.storage.Storage;"},{"lineNumber":4,"author":{"gitId":"yeoutzer"},"content":""},{"lineNumber":5,"author":{"gitId":"yeoutzer"},"content":"import duke.ui.Ui;"},{"lineNumber":6,"author":{"gitId":"yeoutzer"},"content":""},{"lineNumber":7,"author":{"gitId":"yeoutzer"},"content":"import duke.exceptions.*;"},{"lineNumber":8,"author":{"gitId":"yeoutzer"},"content":""},{"lineNumber":9,"author":{"gitId":"yeoutzer"},"content":"import duke.tasks.TaskList;"},{"lineNumber":10,"author":{"gitId":"yeoutzer"},"content":""},{"lineNumber":11,"author":{"gitId":"yeoutzer"},"content":"import java.io.IOException;"},{"lineNumber":12,"author":{"gitId":"yeoutzer"},"content":""},{"lineNumber":13,"author":{"gitId":"yeoutzer"},"content":"/**"},{"lineNumber":14,"author":{"gitId":"yeoutzer"},"content":" * Responsible for dealing with the completion of tasks."},{"lineNumber":15,"author":{"gitId":"yeoutzer"},"content":" */"},{"lineNumber":16,"author":{"gitId":"yeoutzer"},"content":"public class DoneCommand extends Command {"},{"lineNumber":17,"author":{"gitId":"yeoutzer"},"content":"    private String[] checkCommands;"},{"lineNumber":18,"author":{"gitId":"yeoutzer"},"content":""},{"lineNumber":19,"author":{"gitId":"yeoutzer"},"content":"    /**"},{"lineNumber":20,"author":{"gitId":"yeoutzer"},"content":"     * Constructs a DoneCommand with the given full command line."},{"lineNumber":21,"author":{"gitId":"yeoutzer"},"content":"     *"},{"lineNumber":22,"author":{"gitId":"yeoutzer"},"content":"     * @param fullCommand Full command line input."},{"lineNumber":23,"author":{"gitId":"yeoutzer"},"content":"     */"},{"lineNumber":24,"author":{"gitId":"yeoutzer"},"content":"    public DoneCommand(String fullCommand) {"},{"lineNumber":25,"author":{"gitId":"yeoutzer"},"content":"        this.checkCommands \u003d fullCommand.split(\" \");"},{"lineNumber":26,"author":{"gitId":"yeoutzer"},"content":"    }"},{"lineNumber":27,"author":{"gitId":"yeoutzer"},"content":""},{"lineNumber":28,"author":{"gitId":"yeoutzer"},"content":"    /**"},{"lineNumber":29,"author":{"gitId":"yeoutzer"},"content":"     * Changes the completion status of indicated task in TaskList"},{"lineNumber":30,"author":{"gitId":"yeoutzer"},"content":"     * given by command line and save changes into the save file."},{"lineNumber":31,"author":{"gitId":"yeoutzer"},"content":"     *"},{"lineNumber":32,"author":{"gitId":"yeoutzer"},"content":"     * @param tasks TaskList containing the task."},{"lineNumber":33,"author":{"gitId":"yeoutzer"},"content":"     * @param ui Ui for system outputs."},{"lineNumber":34,"author":{"gitId":"yeoutzer"},"content":"     * @param storage Storage for saving contents into file."},{"lineNumber":35,"author":{"gitId":"yeoutzer"},"content":"     * @throws IOException If error happens while saving contents into file."},{"lineNumber":36,"author":{"gitId":"yeoutzer"},"content":"     * @throws DukeException If error happens while changing status of task."},{"lineNumber":37,"author":{"gitId":"yeoutzer"},"content":"     */"},{"lineNumber":38,"author":{"gitId":"yeoutzer"},"content":"    @Override"},{"lineNumber":39,"author":{"gitId":"yeoutzer"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage) throws IOException, DukeException {"},{"lineNumber":40,"author":{"gitId":"yeoutzer"},"content":"        if (checkCommands.length \u003d\u003d 1 || !isNumber(checkCommands[1])) {"},{"lineNumber":41,"author":{"gitId":"yeoutzer"},"content":"            throw new TaskSelectionInvalidException();"},{"lineNumber":42,"author":{"gitId":"yeoutzer"},"content":"        }"},{"lineNumber":43,"author":{"gitId":"yeoutzer"},"content":"        int num \u003d Integer.parseInt(checkCommands[1]);"},{"lineNumber":44,"author":{"gitId":"yeoutzer"},"content":"        if (num \u003e 0 \u0026\u0026 num \u003c\u003d tasks.size()) {"},{"lineNumber":45,"author":{"gitId":"yeoutzer"},"content":"            tasks.getTask(num - 1).markAsDone();"},{"lineNumber":46,"author":{"gitId":"yeoutzer"},"content":"            ui.showDoneTask(tasks, num);"},{"lineNumber":47,"author":{"gitId":"yeoutzer"},"content":""},{"lineNumber":48,"author":{"gitId":"yeoutzer"},"content":"        } else {"},{"lineNumber":49,"author":{"gitId":"yeoutzer"},"content":"            throw new TaskNotFoundException();"},{"lineNumber":50,"author":{"gitId":"yeoutzer"},"content":"        }"},{"lineNumber":51,"author":{"gitId":"yeoutzer"},"content":"        storage.save(tasks);"},{"lineNumber":52,"author":{"gitId":"yeoutzer"},"content":"    }"},{"lineNumber":53,"author":{"gitId":"yeoutzer"},"content":""},{"lineNumber":54,"author":{"gitId":"yeoutzer"},"content":"    /**"},{"lineNumber":55,"author":{"gitId":"yeoutzer"},"content":"     * Returns if program should exit after this command."},{"lineNumber":56,"author":{"gitId":"yeoutzer"},"content":"     *"},{"lineNumber":57,"author":{"gitId":"yeoutzer"},"content":"     * @return false."},{"lineNumber":58,"author":{"gitId":"yeoutzer"},"content":"     */"},{"lineNumber":59,"author":{"gitId":"yeoutzer"},"content":"    @Override"},{"lineNumber":60,"author":{"gitId":"yeoutzer"},"content":"    public boolean isExit() {"},{"lineNumber":61,"author":{"gitId":"yeoutzer"},"content":"        return false;"},{"lineNumber":62,"author":{"gitId":"yeoutzer"},"content":"    }"},{"lineNumber":63,"author":{"gitId":"yeoutzer"},"content":""},{"lineNumber":64,"author":{"gitId":"yeoutzer"},"content":"    private boolean isNumber(String checkString) {"},{"lineNumber":65,"author":{"gitId":"yeoutzer"},"content":"        try {"},{"lineNumber":66,"author":{"gitId":"yeoutzer"},"content":"            Integer.parseInt(checkString);"},{"lineNumber":67,"author":{"gitId":"yeoutzer"},"content":"            return true;"},{"lineNumber":68,"author":{"gitId":"yeoutzer"},"content":"        } catch (NumberFormatException e) {"},{"lineNumber":69,"author":{"gitId":"yeoutzer"},"content":"            return false;"},{"lineNumber":70,"author":{"gitId":"yeoutzer"},"content":"        }"},{"lineNumber":71,"author":{"gitId":"yeoutzer"},"content":"    }"},{"lineNumber":72,"author":{"gitId":"yeoutzer"},"content":"}"}],"authorContributionMap":{"yeoutzer":72}},{"path":"src/main/java/duke/commands/ExitCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yeoutzer"},"content":"package duke.commands;"},{"lineNumber":2,"author":{"gitId":"yeoutzer"},"content":""},{"lineNumber":3,"author":{"gitId":"yeoutzer"},"content":"import duke.tasks.TaskList;"},{"lineNumber":4,"author":{"gitId":"yeoutzer"},"content":""},{"lineNumber":5,"author":{"gitId":"yeoutzer"},"content":"import duke.ui.Ui;"},{"lineNumber":6,"author":{"gitId":"yeoutzer"},"content":""},{"lineNumber":7,"author":{"gitId":"yeoutzer"},"content":"import duke.storage.Storage;"},{"lineNumber":8,"author":{"gitId":"yeoutzer"},"content":""},{"lineNumber":9,"author":{"gitId":"yeoutzer"},"content":"/**"},{"lineNumber":10,"author":{"gitId":"yeoutzer"},"content":" * Responsible for stopping the program."},{"lineNumber":11,"author":{"gitId":"yeoutzer"},"content":" */"},{"lineNumber":12,"author":{"gitId":"yeoutzer"},"content":"public class ExitCommand extends Command {"},{"lineNumber":13,"author":{"gitId":"yeoutzer"},"content":"    /**"},{"lineNumber":14,"author":{"gitId":"yeoutzer"},"content":"     * Constructs a ExitCommand object."},{"lineNumber":15,"author":{"gitId":"yeoutzer"},"content":"     */"},{"lineNumber":16,"author":{"gitId":"yeoutzer"},"content":"    public ExitCommand() {}"},{"lineNumber":17,"author":{"gitId":"yeoutzer"},"content":""},{"lineNumber":18,"author":{"gitId":"yeoutzer"},"content":"    /**"},{"lineNumber":19,"author":{"gitId":"yeoutzer"},"content":"     * Prints goodbye message before stopping the program."},{"lineNumber":20,"author":{"gitId":"yeoutzer"},"content":"     *"},{"lineNumber":21,"author":{"gitId":"yeoutzer"},"content":"     * @param tasks TaskList containing tasks."},{"lineNumber":22,"author":{"gitId":"yeoutzer"},"content":"     * @param ui Ui for system outputs."},{"lineNumber":23,"author":{"gitId":"yeoutzer"},"content":"     * @param storage Storage for saving contents into file."},{"lineNumber":24,"author":{"gitId":"yeoutzer"},"content":"     */"},{"lineNumber":25,"author":{"gitId":"yeoutzer"},"content":"    @Override"},{"lineNumber":26,"author":{"gitId":"yeoutzer"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage) {"},{"lineNumber":27,"author":{"gitId":"yeoutzer"},"content":"        ui.showByeMessage();"},{"lineNumber":28,"author":{"gitId":"yeoutzer"},"content":"    }"},{"lineNumber":29,"author":{"gitId":"yeoutzer"},"content":""},{"lineNumber":30,"author":{"gitId":"yeoutzer"},"content":"    /**"},{"lineNumber":31,"author":{"gitId":"yeoutzer"},"content":"     * Returns if program should exit after this command."},{"lineNumber":32,"author":{"gitId":"yeoutzer"},"content":"     *"},{"lineNumber":33,"author":{"gitId":"yeoutzer"},"content":"     * @return true."},{"lineNumber":34,"author":{"gitId":"yeoutzer"},"content":"     */"},{"lineNumber":35,"author":{"gitId":"yeoutzer"},"content":"    @Override"},{"lineNumber":36,"author":{"gitId":"yeoutzer"},"content":"    public boolean isExit() {"},{"lineNumber":37,"author":{"gitId":"yeoutzer"},"content":"        return true;"},{"lineNumber":38,"author":{"gitId":"yeoutzer"},"content":"    }"},{"lineNumber":39,"author":{"gitId":"yeoutzer"},"content":"}"}],"authorContributionMap":{"yeoutzer":39}},{"path":"src/main/java/duke/commands/FindCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yeoutzer"},"content":"package duke.commands;"},{"lineNumber":2,"author":{"gitId":"yeoutzer"},"content":""},{"lineNumber":3,"author":{"gitId":"yeoutzer"},"content":"import duke.exceptions.DukeException;"},{"lineNumber":4,"author":{"gitId":"yeoutzer"},"content":"import duke.exceptions.MatchStringNotFoundException;"},{"lineNumber":5,"author":{"gitId":"yeoutzer"},"content":""},{"lineNumber":6,"author":{"gitId":"yeoutzer"},"content":"import duke.ui.Ui;"},{"lineNumber":7,"author":{"gitId":"yeoutzer"},"content":""},{"lineNumber":8,"author":{"gitId":"yeoutzer"},"content":"import duke.storage.Storage;"},{"lineNumber":9,"author":{"gitId":"yeoutzer"},"content":""},{"lineNumber":10,"author":{"gitId":"yeoutzer"},"content":"import duke.tasks.TaskList;"},{"lineNumber":11,"author":{"gitId":"yeoutzer"},"content":"import duke.tasks.Task;"},{"lineNumber":12,"author":{"gitId":"yeoutzer"},"content":""},{"lineNumber":13,"author":{"gitId":"yeoutzer"},"content":"import java.util.ArrayList;"},{"lineNumber":14,"author":{"gitId":"yeoutzer"},"content":""},{"lineNumber":15,"author":{"gitId":"yeoutzer"},"content":"/**"},{"lineNumber":16,"author":{"gitId":"yeoutzer"},"content":" * Responsible for finding task."},{"lineNumber":17,"author":{"gitId":"yeoutzer"},"content":" */"},{"lineNumber":18,"author":{"gitId":"yeoutzer"},"content":"public class FindCommand extends Command {"},{"lineNumber":19,"author":{"gitId":"yeoutzer"},"content":"    private String fullCommand;"},{"lineNumber":20,"author":{"gitId":"yeoutzer"},"content":""},{"lineNumber":21,"author":{"gitId":"yeoutzer"},"content":"    /**"},{"lineNumber":22,"author":{"gitId":"yeoutzer"},"content":"     * Constructs a FindCommand with given full command line."},{"lineNumber":23,"author":{"gitId":"yeoutzer"},"content":"     *"},{"lineNumber":24,"author":{"gitId":"yeoutzer"},"content":"     * @param fullCommand Full command line input."},{"lineNumber":25,"author":{"gitId":"yeoutzer"},"content":"     */"},{"lineNumber":26,"author":{"gitId":"yeoutzer"},"content":"    public FindCommand(String fullCommand) {"},{"lineNumber":27,"author":{"gitId":"yeoutzer"},"content":"        this.fullCommand \u003d fullCommand;"},{"lineNumber":28,"author":{"gitId":"yeoutzer"},"content":"    }"},{"lineNumber":29,"author":{"gitId":"yeoutzer"},"content":""},{"lineNumber":30,"author":{"gitId":"yeoutzer"},"content":"    /**"},{"lineNumber":31,"author":{"gitId":"yeoutzer"},"content":"     * Prints a list of tasks that matches given word in command line."},{"lineNumber":32,"author":{"gitId":"yeoutzer"},"content":"     *"},{"lineNumber":33,"author":{"gitId":"yeoutzer"},"content":"     * @param tasks TasksList to find from."},{"lineNumber":34,"author":{"gitId":"yeoutzer"},"content":"     * @param ui Ui for system outputs."},{"lineNumber":35,"author":{"gitId":"yeoutzer"},"content":"     * @param storage Storage for saving contents into file."},{"lineNumber":36,"author":{"gitId":"yeoutzer"},"content":"     */"},{"lineNumber":37,"author":{"gitId":"yeoutzer"},"content":"    @Override"},{"lineNumber":38,"author":{"gitId":"yeoutzer"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage) throws DukeException {"},{"lineNumber":39,"author":{"gitId":"yeoutzer"},"content":"        TaskList matchList \u003d new TaskList(new ArrayList\u003cTask\u003e());"},{"lineNumber":40,"author":{"gitId":"yeoutzer"},"content":"        String matchString \u003d fullCommand.substring(4).trim();"},{"lineNumber":41,"author":{"gitId":"yeoutzer"},"content":"        if (matchString.isEmpty()) {"},{"lineNumber":42,"author":{"gitId":"yeoutzer"},"content":"            throw new MatchStringNotFoundException();"},{"lineNumber":43,"author":{"gitId":"yeoutzer"},"content":"        }"},{"lineNumber":44,"author":{"gitId":"yeoutzer"},"content":"        for (int i \u003d 0; i \u003c tasks.size(); i++) {"},{"lineNumber":45,"author":{"gitId":"yeoutzer"},"content":"            Task temp \u003d tasks.getTask(i);"},{"lineNumber":46,"author":{"gitId":"yeoutzer"},"content":"            if (temp.getDescription().contains(matchString)) {"},{"lineNumber":47,"author":{"gitId":"yeoutzer"},"content":"                matchList.add(temp);"},{"lineNumber":48,"author":{"gitId":"yeoutzer"},"content":"            }"},{"lineNumber":49,"author":{"gitId":"yeoutzer"},"content":"        }"},{"lineNumber":50,"author":{"gitId":"yeoutzer"},"content":"        if (matchList.size() !\u003d 0) {"},{"lineNumber":51,"author":{"gitId":"yeoutzer"},"content":"            ui.showMatchList(matchList);"},{"lineNumber":52,"author":{"gitId":"yeoutzer"},"content":"        } else {"},{"lineNumber":53,"author":{"gitId":"yeoutzer"},"content":"            ui.showNoMatch();"},{"lineNumber":54,"author":{"gitId":"yeoutzer"},"content":"        }"},{"lineNumber":55,"author":{"gitId":"yeoutzer"},"content":"    }"},{"lineNumber":56,"author":{"gitId":"yeoutzer"},"content":""},{"lineNumber":57,"author":{"gitId":"yeoutzer"},"content":"    /**"},{"lineNumber":58,"author":{"gitId":"yeoutzer"},"content":"     * Returns if program should exit after this command."},{"lineNumber":59,"author":{"gitId":"yeoutzer"},"content":"     *"},{"lineNumber":60,"author":{"gitId":"yeoutzer"},"content":"     * @return false."},{"lineNumber":61,"author":{"gitId":"yeoutzer"},"content":"     */"},{"lineNumber":62,"author":{"gitId":"yeoutzer"},"content":"    @Override"},{"lineNumber":63,"author":{"gitId":"yeoutzer"},"content":"    public boolean isExit() {"},{"lineNumber":64,"author":{"gitId":"yeoutzer"},"content":"        return false;"},{"lineNumber":65,"author":{"gitId":"yeoutzer"},"content":"    }"},{"lineNumber":66,"author":{"gitId":"yeoutzer"},"content":"}"}],"authorContributionMap":{"yeoutzer":66}},{"path":"src/main/java/duke/commands/ListCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yeoutzer"},"content":"package duke.commands;"},{"lineNumber":2,"author":{"gitId":"yeoutzer"},"content":""},{"lineNumber":3,"author":{"gitId":"yeoutzer"},"content":"import duke.tasks.TaskList;"},{"lineNumber":4,"author":{"gitId":"yeoutzer"},"content":""},{"lineNumber":5,"author":{"gitId":"yeoutzer"},"content":"import duke.ui.Ui;"},{"lineNumber":6,"author":{"gitId":"yeoutzer"},"content":""},{"lineNumber":7,"author":{"gitId":"yeoutzer"},"content":"import duke.storage.Storage;"},{"lineNumber":8,"author":{"gitId":"yeoutzer"},"content":""},{"lineNumber":9,"author":{"gitId":"yeoutzer"},"content":"/**"},{"lineNumber":10,"author":{"gitId":"yeoutzer"},"content":" * Responsible for listing the contents of TaskList."},{"lineNumber":11,"author":{"gitId":"yeoutzer"},"content":" */"},{"lineNumber":12,"author":{"gitId":"yeoutzer"},"content":"public class ListCommand extends Command {"},{"lineNumber":13,"author":{"gitId":"yeoutzer"},"content":"    /**"},{"lineNumber":14,"author":{"gitId":"yeoutzer"},"content":"     * Constructs a ListCommand object."},{"lineNumber":15,"author":{"gitId":"yeoutzer"},"content":"     */"},{"lineNumber":16,"author":{"gitId":"yeoutzer"},"content":"    public ListCommand() {}"},{"lineNumber":17,"author":{"gitId":"yeoutzer"},"content":""},{"lineNumber":18,"author":{"gitId":"yeoutzer"},"content":"    /**"},{"lineNumber":19,"author":{"gitId":"yeoutzer"},"content":"     * Lists the tasks in TaskList, shows the overview of all tasks."},{"lineNumber":20,"author":{"gitId":"yeoutzer"},"content":"     *"},{"lineNumber":21,"author":{"gitId":"yeoutzer"},"content":"     * @param tasks TaskList to be listed."},{"lineNumber":22,"author":{"gitId":"yeoutzer"},"content":"     * @param ui Ui for system outputs."},{"lineNumber":23,"author":{"gitId":"yeoutzer"},"content":"     * @param storage Storage for saving contents into file."},{"lineNumber":24,"author":{"gitId":"yeoutzer"},"content":"     */"},{"lineNumber":25,"author":{"gitId":"yeoutzer"},"content":"    @Override"},{"lineNumber":26,"author":{"gitId":"yeoutzer"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage) {"},{"lineNumber":27,"author":{"gitId":"yeoutzer"},"content":"        if (tasks.size() \u003d\u003d 0) {"},{"lineNumber":28,"author":{"gitId":"yeoutzer"},"content":"            ui.showEmptyList();"},{"lineNumber":29,"author":{"gitId":"yeoutzer"},"content":"        } else {"},{"lineNumber":30,"author":{"gitId":"yeoutzer"},"content":"            ui.showTasks(tasks);"},{"lineNumber":31,"author":{"gitId":"yeoutzer"},"content":"        }"},{"lineNumber":32,"author":{"gitId":"yeoutzer"},"content":"    }"},{"lineNumber":33,"author":{"gitId":"yeoutzer"},"content":""},{"lineNumber":34,"author":{"gitId":"yeoutzer"},"content":"    /**"},{"lineNumber":35,"author":{"gitId":"yeoutzer"},"content":"     * Returns if program should exit after this command."},{"lineNumber":36,"author":{"gitId":"yeoutzer"},"content":"     *"},{"lineNumber":37,"author":{"gitId":"yeoutzer"},"content":"     * @return false."},{"lineNumber":38,"author":{"gitId":"yeoutzer"},"content":"     */"},{"lineNumber":39,"author":{"gitId":"yeoutzer"},"content":"    @Override"},{"lineNumber":40,"author":{"gitId":"yeoutzer"},"content":"    public boolean isExit() {"},{"lineNumber":41,"author":{"gitId":"yeoutzer"},"content":"        return false;"},{"lineNumber":42,"author":{"gitId":"yeoutzer"},"content":"    }"},{"lineNumber":43,"author":{"gitId":"yeoutzer"},"content":"}"}],"authorContributionMap":{"yeoutzer":43}},{"path":"src/main/java/duke/exceptions/CommandNotValidException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yeoutzer"},"content":"package duke.exceptions;"},{"lineNumber":2,"author":{"gitId":"yeoutzer"},"content":""},{"lineNumber":3,"author":{"gitId":"yeoutzer"},"content":"/**"},{"lineNumber":4,"author":{"gitId":"yeoutzer"},"content":" * Error class for invalid commands."},{"lineNumber":5,"author":{"gitId":"yeoutzer"},"content":" */"},{"lineNumber":6,"author":{"gitId":"yeoutzer"},"content":"public class CommandNotValidException extends DukeException {"},{"lineNumber":7,"author":{"gitId":"yeoutzer"},"content":"    /**"},{"lineNumber":8,"author":{"gitId":"yeoutzer"},"content":"     * Constructs a CommandNotValidException with specific message for invalid commands."},{"lineNumber":9,"author":{"gitId":"yeoutzer"},"content":"     */"},{"lineNumber":10,"author":{"gitId":"yeoutzer"},"content":"    public CommandNotValidException() {"},{"lineNumber":11,"author":{"gitId":"yeoutzer"},"content":"        super(\"\\tCommand not valid. Please use \\\"todo\\\", \\\"deadline\\\"\\n\""},{"lineNumber":12,"author":{"gitId":"yeoutzer"},"content":"                + \"\\tor \\\"event\\\" followed by task description to add new tasks.\\n\""},{"lineNumber":13,"author":{"gitId":"yeoutzer"},"content":"                + \"\\tPlease use \\\"list\\\" to view your list of tasks.\\\"\\n\""},{"lineNumber":14,"author":{"gitId":"yeoutzer"},"content":"                + \"\\tPlease use \\\"done\\\" followed by index to mark completed tasks.\\n\""},{"lineNumber":15,"author":{"gitId":"yeoutzer"},"content":"                + \"\\tPlease use \\\"delete\\\" followed by index to delete tasks.\\n\""},{"lineNumber":16,"author":{"gitId":"yeoutzer"},"content":"                + \"\\tPlease use \\\"bye\\\" to exit.\\n\");"},{"lineNumber":17,"author":{"gitId":"yeoutzer"},"content":"    }"},{"lineNumber":18,"author":{"gitId":"yeoutzer"},"content":"}"}],"authorContributionMap":{"yeoutzer":18}},{"path":"src/main/java/duke/exceptions/DateTimeNotFoundException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yeoutzer"},"content":"package duke.exceptions;"},{"lineNumber":2,"author":{"gitId":"yeoutzer"},"content":""},{"lineNumber":3,"author":{"gitId":"yeoutzer"},"content":"/**"},{"lineNumber":4,"author":{"gitId":"yeoutzer"},"content":" * Error class for no indication of date and time."},{"lineNumber":5,"author":{"gitId":"yeoutzer"},"content":" */"},{"lineNumber":6,"author":{"gitId":"yeoutzer"},"content":"public class DateTimeNotFoundException extends DukeException {"},{"lineNumber":7,"author":{"gitId":"yeoutzer"},"content":"    /**"},{"lineNumber":8,"author":{"gitId":"yeoutzer"},"content":"     * Constructs a DateTimeNotFoundException with specific message for"},{"lineNumber":9,"author":{"gitId":"yeoutzer"},"content":"     * no indication of date and time."},{"lineNumber":10,"author":{"gitId":"yeoutzer"},"content":"     */"},{"lineNumber":11,"author":{"gitId":"yeoutzer"},"content":"    public DateTimeNotFoundException() {"},{"lineNumber":12,"author":{"gitId":"yeoutzer"},"content":"        super(\"\\tPlease enter the date (DD/MM/YYYY) with optional\\n\""},{"lineNumber":13,"author":{"gitId":"yeoutzer"},"content":"                + \"\\ttime (in 24 hours format) after \\\"/by\\\" for Deadline Tasks\\n\""},{"lineNumber":14,"author":{"gitId":"yeoutzer"},"content":"                + \"\\tor date with optional start and end time after \\\"/at\\\"\\n\""},{"lineNumber":15,"author":{"gitId":"yeoutzer"},"content":"                + \"\\tfor Event Tasks.\\n\");"},{"lineNumber":16,"author":{"gitId":"yeoutzer"},"content":"    }"},{"lineNumber":17,"author":{"gitId":"yeoutzer"},"content":"}"}],"authorContributionMap":{"yeoutzer":17}},{"path":"src/main/java/duke/exceptions/DescriptionNotFoundException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yeoutzer"},"content":"package duke.exceptions;"},{"lineNumber":2,"author":{"gitId":"yeoutzer"},"content":""},{"lineNumber":3,"author":{"gitId":"yeoutzer"},"content":"/**"},{"lineNumber":4,"author":{"gitId":"yeoutzer"},"content":" * Error class for no indication of task description."},{"lineNumber":5,"author":{"gitId":"yeoutzer"},"content":" */"},{"lineNumber":6,"author":{"gitId":"yeoutzer"},"content":"public class DescriptionNotFoundException extends DukeException {"},{"lineNumber":7,"author":{"gitId":"yeoutzer"},"content":"    /**"},{"lineNumber":8,"author":{"gitId":"yeoutzer"},"content":"     * Constructs a DescriptionNotFoundException with specific message for"},{"lineNumber":9,"author":{"gitId":"yeoutzer"},"content":"     * no indication of task description."},{"lineNumber":10,"author":{"gitId":"yeoutzer"},"content":"     */"},{"lineNumber":11,"author":{"gitId":"yeoutzer"},"content":"    public DescriptionNotFoundException() {"},{"lineNumber":12,"author":{"gitId":"yeoutzer"},"content":"        super(\"\\tPlease provide description for your task.\\n\");"},{"lineNumber":13,"author":{"gitId":"yeoutzer"},"content":"    }"},{"lineNumber":14,"author":{"gitId":"yeoutzer"},"content":"}"}],"authorContributionMap":{"yeoutzer":14}},{"path":"src/main/java/duke/exceptions/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yeoutzer"},"content":"package duke.exceptions;"},{"lineNumber":2,"author":{"gitId":"yeoutzer"},"content":""},{"lineNumber":3,"author":{"gitId":"yeoutzer"},"content":"/**"},{"lineNumber":4,"author":{"gitId":"yeoutzer"},"content":" * Error class for all exceptions thrown in Duke."},{"lineNumber":5,"author":{"gitId":"yeoutzer"},"content":" */"},{"lineNumber":6,"author":{"gitId":"yeoutzer"},"content":"public class DukeException extends Exception {"},{"lineNumber":7,"author":{"gitId":"yeoutzer"},"content":"    /**"},{"lineNumber":8,"author":{"gitId":"yeoutzer"},"content":"     * Constructs a DukeException with the specified message."},{"lineNumber":9,"author":{"gitId":"yeoutzer"},"content":"     *"},{"lineNumber":10,"author":{"gitId":"yeoutzer"},"content":"     * @param message Message of exception."},{"lineNumber":11,"author":{"gitId":"yeoutzer"},"content":"     */"},{"lineNumber":12,"author":{"gitId":"yeoutzer"},"content":"    public DukeException(String message) {"},{"lineNumber":13,"author":{"gitId":"yeoutzer"},"content":"        super(message);"},{"lineNumber":14,"author":{"gitId":"yeoutzer"},"content":"    }"},{"lineNumber":15,"author":{"gitId":"yeoutzer"},"content":"}"}],"authorContributionMap":{"yeoutzer":15}},{"path":"src/main/java/duke/exceptions/MatchStringNotFoundException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yeoutzer"},"content":"package duke.exceptions;"},{"lineNumber":2,"author":{"gitId":"yeoutzer"},"content":""},{"lineNumber":3,"author":{"gitId":"yeoutzer"},"content":"public class MatchStringNotFoundException extends DukeException {"},{"lineNumber":4,"author":{"gitId":"yeoutzer"},"content":"    public MatchStringNotFoundException() {"},{"lineNumber":5,"author":{"gitId":"yeoutzer"},"content":"        super(\"\\tPlease enter keyword of task description to find.\\n\");"},{"lineNumber":6,"author":{"gitId":"yeoutzer"},"content":"    }"},{"lineNumber":7,"author":{"gitId":"yeoutzer"},"content":"}"}],"authorContributionMap":{"yeoutzer":7}},{"path":"src/main/java/duke/exceptions/SaveFileInvalidFormatException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yeoutzer"},"content":"package duke.exceptions;"},{"lineNumber":2,"author":{"gitId":"yeoutzer"},"content":""},{"lineNumber":3,"author":{"gitId":"yeoutzer"},"content":"public class SaveFileInvalidFormatException extends DukeException {"},{"lineNumber":4,"author":{"gitId":"yeoutzer"},"content":"    public SaveFileInvalidFormatException() {"},{"lineNumber":5,"author":{"gitId":"yeoutzer"},"content":"        super(\"\\tInvalid content format in save file.\\t\");"},{"lineNumber":6,"author":{"gitId":"yeoutzer"},"content":"    }"},{"lineNumber":7,"author":{"gitId":"yeoutzer"},"content":"}"}],"authorContributionMap":{"yeoutzer":7}},{"path":"src/main/java/duke/exceptions/TaskNotFoundException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yeoutzer"},"content":"package duke.exceptions;"},{"lineNumber":2,"author":{"gitId":"yeoutzer"},"content":""},{"lineNumber":3,"author":{"gitId":"yeoutzer"},"content":"/**"},{"lineNumber":4,"author":{"gitId":"yeoutzer"},"content":" * Error class for selecting task index outside of TaskList size."},{"lineNumber":5,"author":{"gitId":"yeoutzer"},"content":" */"},{"lineNumber":6,"author":{"gitId":"yeoutzer"},"content":"public class TaskNotFoundException extends DukeException {"},{"lineNumber":7,"author":{"gitId":"yeoutzer"},"content":"    /**"},{"lineNumber":8,"author":{"gitId":"yeoutzer"},"content":"     * Constructs a CommandNotValidException with specific message"},{"lineNumber":9,"author":{"gitId":"yeoutzer"},"content":"     * for selecting task index outside of TaskList size."},{"lineNumber":10,"author":{"gitId":"yeoutzer"},"content":"     */"},{"lineNumber":11,"author":{"gitId":"yeoutzer"},"content":"    public TaskNotFoundException() {"},{"lineNumber":12,"author":{"gitId":"yeoutzer"},"content":"        super(\"\\tTask not in list.\\n\");"},{"lineNumber":13,"author":{"gitId":"yeoutzer"},"content":"    }"},{"lineNumber":14,"author":{"gitId":"yeoutzer"},"content":"}"}],"authorContributionMap":{"yeoutzer":14}},{"path":"src/main/java/duke/exceptions/TaskSelectionInvalidException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yeoutzer"},"content":"package duke.exceptions;"},{"lineNumber":2,"author":{"gitId":"yeoutzer"},"content":""},{"lineNumber":3,"author":{"gitId":"yeoutzer"},"content":"public class TaskSelectionInvalidException extends DukeException {"},{"lineNumber":4,"author":{"gitId":"yeoutzer"},"content":"    public TaskSelectionInvalidException() {"},{"lineNumber":5,"author":{"gitId":"yeoutzer"},"content":"        super(\"\\tPlease enter task number after command.\\n\");"},{"lineNumber":6,"author":{"gitId":"yeoutzer"},"content":"    }"},{"lineNumber":7,"author":{"gitId":"yeoutzer"},"content":"}"}],"authorContributionMap":{"yeoutzer":7}},{"path":"src/main/java/duke/exceptions/TimeDurationInvalidException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yeoutzer"},"content":"package duke.exceptions;"},{"lineNumber":2,"author":{"gitId":"yeoutzer"},"content":""},{"lineNumber":3,"author":{"gitId":"yeoutzer"},"content":"/**"},{"lineNumber":4,"author":{"gitId":"yeoutzer"},"content":" * Error class for invalid start and end time of task."},{"lineNumber":5,"author":{"gitId":"yeoutzer"},"content":" */"},{"lineNumber":6,"author":{"gitId":"yeoutzer"},"content":"public class TimeDurationInvalidException extends DukeException {"},{"lineNumber":7,"author":{"gitId":"yeoutzer"},"content":"    /**"},{"lineNumber":8,"author":{"gitId":"yeoutzer"},"content":"     * Constructs a TimeDurationInvalidException with specific message"},{"lineNumber":9,"author":{"gitId":"yeoutzer"},"content":"     * for invalid start and end time of task."},{"lineNumber":10,"author":{"gitId":"yeoutzer"},"content":"     */"},{"lineNumber":11,"author":{"gitId":"yeoutzer"},"content":"    public TimeDurationInvalidException() {"},{"lineNumber":12,"author":{"gitId":"yeoutzer"},"content":"        super(\"\\tPlease enter a valid start and end time duration\\n\\t(start time \u003c end time).\\n\");"},{"lineNumber":13,"author":{"gitId":"yeoutzer"},"content":"    }"},{"lineNumber":14,"author":{"gitId":"yeoutzer"},"content":"}"}],"authorContributionMap":{"yeoutzer":14}},{"path":"src/main/java/duke/parser/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yeoutzer"},"content":"package duke.parser;"},{"lineNumber":2,"author":{"gitId":"yeoutzer"},"content":""},{"lineNumber":3,"author":{"gitId":"yeoutzer"},"content":"import duke.commands.*;"},{"lineNumber":4,"author":{"gitId":"yeoutzer"},"content":""},{"lineNumber":5,"author":{"gitId":"yeoutzer"},"content":"/**"},{"lineNumber":6,"author":{"gitId":"yeoutzer"},"content":" * Responsible for parsing command line inputs."},{"lineNumber":7,"author":{"gitId":"yeoutzer"},"content":" */"},{"lineNumber":8,"author":{"gitId":"yeoutzer"},"content":"public class Parser {"},{"lineNumber":9,"author":{"gitId":"yeoutzer"},"content":"    /**"},{"lineNumber":10,"author":{"gitId":"yeoutzer"},"content":"     * Constructs a Parser object."},{"lineNumber":11,"author":{"gitId":"yeoutzer"},"content":"     */"},{"lineNumber":12,"author":{"gitId":"yeoutzer"},"content":"    public Parser() {}"},{"lineNumber":13,"author":{"gitId":"yeoutzer"},"content":""},{"lineNumber":14,"author":{"gitId":"yeoutzer"},"content":"    /**"},{"lineNumber":15,"author":{"gitId":"yeoutzer"},"content":"     * Returns the type of Command indicated by the user input."},{"lineNumber":16,"author":{"gitId":"yeoutzer"},"content":"     *"},{"lineNumber":17,"author":{"gitId":"yeoutzer"},"content":"     * @param fullCommand User input to be parsed."},{"lineNumber":18,"author":{"gitId":"yeoutzer"},"content":"     * @return Command indicated by user input."},{"lineNumber":19,"author":{"gitId":"yeoutzer"},"content":"     */"},{"lineNumber":20,"author":{"gitId":"yeoutzer"},"content":"    public static Command parse(String fullCommand) {"},{"lineNumber":21,"author":{"gitId":"yeoutzer"},"content":"        Command command;"},{"lineNumber":22,"author":{"gitId":"yeoutzer"},"content":"        if (fullCommand.equals(\"bye\")) {"},{"lineNumber":23,"author":{"gitId":"yeoutzer"},"content":"            command \u003d new ExitCommand();"},{"lineNumber":24,"author":{"gitId":"yeoutzer"},"content":"        } else if (fullCommand.equals(\"list\")) {"},{"lineNumber":25,"author":{"gitId":"yeoutzer"},"content":"            command \u003d new ListCommand();"},{"lineNumber":26,"author":{"gitId":"yeoutzer"},"content":"        } else {"},{"lineNumber":27,"author":{"gitId":"yeoutzer"},"content":"            String[] splitComands \u003d fullCommand.split(\" \");"},{"lineNumber":28,"author":{"gitId":"yeoutzer"},"content":"            if (splitComands[0].equals(\"done\")) {"},{"lineNumber":29,"author":{"gitId":"yeoutzer"},"content":"                command \u003d new DoneCommand(fullCommand);"},{"lineNumber":30,"author":{"gitId":"yeoutzer"},"content":"            } else if (splitComands[0].equals(\"delete\")) {"},{"lineNumber":31,"author":{"gitId":"yeoutzer"},"content":"                command \u003d new DeleteCommand(fullCommand);"},{"lineNumber":32,"author":{"gitId":"yeoutzer"},"content":"            } else if (splitComands[0].equals(\"find\")) {"},{"lineNumber":33,"author":{"gitId":"yeoutzer"},"content":"                command \u003d new FindCommand(fullCommand);"},{"lineNumber":34,"author":{"gitId":"yeoutzer"},"content":"            } else {"},{"lineNumber":35,"author":{"gitId":"yeoutzer"},"content":"                command \u003d new AddCommand(fullCommand);"},{"lineNumber":36,"author":{"gitId":"yeoutzer"},"content":"            }"},{"lineNumber":37,"author":{"gitId":"yeoutzer"},"content":"        }"},{"lineNumber":38,"author":{"gitId":"yeoutzer"},"content":"        return command;"},{"lineNumber":39,"author":{"gitId":"yeoutzer"},"content":"    }"},{"lineNumber":40,"author":{"gitId":"yeoutzer"},"content":"}"}],"authorContributionMap":{"yeoutzer":40}},{"path":"src/main/java/duke/storage/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yeoutzer"},"content":"package duke.storage;"},{"lineNumber":2,"author":{"gitId":"yeoutzer"},"content":""},{"lineNumber":3,"author":{"gitId":"yeoutzer"},"content":"import duke.exceptions.*;"},{"lineNumber":4,"author":{"gitId":"yeoutzer"},"content":""},{"lineNumber":5,"author":{"gitId":"yeoutzer"},"content":"import duke.tasks.*;"},{"lineNumber":6,"author":{"gitId":"yeoutzer"},"content":""},{"lineNumber":7,"author":{"gitId":"yeoutzer"},"content":"import java.util.List;"},{"lineNumber":8,"author":{"gitId":"yeoutzer"},"content":"import java.util.ArrayList;"},{"lineNumber":9,"author":{"gitId":"yeoutzer"},"content":"import java.util.Scanner;"},{"lineNumber":10,"author":{"gitId":"yeoutzer"},"content":""},{"lineNumber":11,"author":{"gitId":"yeoutzer"},"content":"import java.io.File;"},{"lineNumber":12,"author":{"gitId":"yeoutzer"},"content":"import java.io.FileWriter;"},{"lineNumber":13,"author":{"gitId":"yeoutzer"},"content":"import java.io.IOException;"},{"lineNumber":14,"author":{"gitId":"yeoutzer"},"content":"import java.io.FileNotFoundException;"},{"lineNumber":15,"author":{"gitId":"yeoutzer"},"content":""},{"lineNumber":16,"author":{"gitId":"yeoutzer"},"content":"import java.time.LocalDate;"},{"lineNumber":17,"author":{"gitId":"yeoutzer"},"content":"import java.time.LocalTime;"},{"lineNumber":18,"author":{"gitId":"yeoutzer"},"content":"import java.time.format.DateTimeFormatter;"},{"lineNumber":19,"author":{"gitId":"yeoutzer"},"content":"import java.time.format.DateTimeParseException;"},{"lineNumber":20,"author":{"gitId":"yeoutzer"},"content":""},{"lineNumber":21,"author":{"gitId":"yeoutzer"},"content":"/**"},{"lineNumber":22,"author":{"gitId":"yeoutzer"},"content":" * Responsible for reading and editing save file contents."},{"lineNumber":23,"author":{"gitId":"yeoutzer"},"content":" */"},{"lineNumber":24,"author":{"gitId":"yeoutzer"},"content":"public class Storage {"},{"lineNumber":25,"author":{"gitId":"yeoutzer"},"content":"    private String filePath;"},{"lineNumber":26,"author":{"gitId":"yeoutzer"},"content":""},{"lineNumber":27,"author":{"gitId":"yeoutzer"},"content":"    /**"},{"lineNumber":28,"author":{"gitId":"yeoutzer"},"content":"     * Constructs a Storage with the given save file location."},{"lineNumber":29,"author":{"gitId":"yeoutzer"},"content":"     *"},{"lineNumber":30,"author":{"gitId":"yeoutzer"},"content":"     * @param filePath File path of the save file"},{"lineNumber":31,"author":{"gitId":"yeoutzer"},"content":"     */"},{"lineNumber":32,"author":{"gitId":"yeoutzer"},"content":"    public Storage(String filePath) {"},{"lineNumber":33,"author":{"gitId":"yeoutzer"},"content":"        this.filePath \u003d filePath;"},{"lineNumber":34,"author":{"gitId":"yeoutzer"},"content":"    }"},{"lineNumber":35,"author":{"gitId":"yeoutzer"},"content":""},{"lineNumber":36,"author":{"gitId":"yeoutzer"},"content":"    /**"},{"lineNumber":37,"author":{"gitId":"yeoutzer"},"content":"     * Creates the directory and save file if it does not exist."},{"lineNumber":38,"author":{"gitId":"yeoutzer"},"content":"     *"},{"lineNumber":39,"author":{"gitId":"yeoutzer"},"content":"     * @throws IOException If there is error while creating directory or file."},{"lineNumber":40,"author":{"gitId":"yeoutzer"},"content":"     */"},{"lineNumber":41,"author":{"gitId":"yeoutzer"},"content":"    public void initialize() throws IOException {"},{"lineNumber":42,"author":{"gitId":"yeoutzer"},"content":"        File file \u003d new File(filePath);"},{"lineNumber":43,"author":{"gitId":"yeoutzer"},"content":"        File directory \u003d new File(file.getParent());"},{"lineNumber":44,"author":{"gitId":"yeoutzer"},"content":"        directory.mkdirs();"},{"lineNumber":45,"author":{"gitId":"yeoutzer"},"content":"        file.createNewFile();"},{"lineNumber":46,"author":{"gitId":"yeoutzer"},"content":"    }"},{"lineNumber":47,"author":{"gitId":"yeoutzer"},"content":""},{"lineNumber":48,"author":{"gitId":"yeoutzer"},"content":"    /**"},{"lineNumber":49,"author":{"gitId":"yeoutzer"},"content":"     * Returns the List of Task saved in the save file."},{"lineNumber":50,"author":{"gitId":"yeoutzer"},"content":"     *"},{"lineNumber":51,"author":{"gitId":"yeoutzer"},"content":"     * @return List of Task saved in the save file."},{"lineNumber":52,"author":{"gitId":"yeoutzer"},"content":"     * @throws SaveFileInvalidFormatException If format of save file is invalid."},{"lineNumber":53,"author":{"gitId":"yeoutzer"},"content":"     * @throws FileNotFoundException If save file is not found."},{"lineNumber":54,"author":{"gitId":"yeoutzer"},"content":"     * @throws DateTimeParseException If format of date and time is invalid."},{"lineNumber":55,"author":{"gitId":"yeoutzer"},"content":"     */"},{"lineNumber":56,"author":{"gitId":"yeoutzer"},"content":"    public List\u003cTask\u003e load() throws SaveFileInvalidFormatException,"},{"lineNumber":57,"author":{"gitId":"yeoutzer"},"content":"            FileNotFoundException, DateTimeParseException {"},{"lineNumber":58,"author":{"gitId":"yeoutzer"},"content":"        List\u003cTask\u003e taskList \u003d new ArrayList\u003c\u003e();"},{"lineNumber":59,"author":{"gitId":"yeoutzer"},"content":"        File file \u003d new File(filePath);"},{"lineNumber":60,"author":{"gitId":"yeoutzer"},"content":"        Scanner reader \u003d new Scanner(file);"},{"lineNumber":61,"author":{"gitId":"yeoutzer"},"content":"        while (reader.hasNextLine()) {"},{"lineNumber":62,"author":{"gitId":"yeoutzer"},"content":"            String taskString \u003d reader.nextLine();"},{"lineNumber":63,"author":{"gitId":"yeoutzer"},"content":"            if (taskString.length() \u003c 9) {"},{"lineNumber":64,"author":{"gitId":"yeoutzer"},"content":"                throw new SaveFileInvalidFormatException();"},{"lineNumber":65,"author":{"gitId":"yeoutzer"},"content":"            }"},{"lineNumber":66,"author":{"gitId":"yeoutzer"},"content":""},{"lineNumber":67,"author":{"gitId":"yeoutzer"},"content":"            Task task;"},{"lineNumber":68,"author":{"gitId":"yeoutzer"},"content":"            char taskType \u003d taskString.charAt(0);"},{"lineNumber":69,"author":{"gitId":"yeoutzer"},"content":"            char taskCompletion \u003d taskString.charAt(4);"},{"lineNumber":70,"author":{"gitId":"yeoutzer"},"content":"            String taskDescription;"},{"lineNumber":71,"author":{"gitId":"yeoutzer"},"content":"            String taskDateTime;"},{"lineNumber":72,"author":{"gitId":"yeoutzer"},"content":""},{"lineNumber":73,"author":{"gitId":"yeoutzer"},"content":"            if (taskCompletion !\u003d \u00271\u0027 \u0026\u0026 taskCompletion !\u003d \u00270\u0027) {"},{"lineNumber":74,"author":{"gitId":"yeoutzer"},"content":"                throw new SaveFileInvalidFormatException();"},{"lineNumber":75,"author":{"gitId":"yeoutzer"},"content":"            }"},{"lineNumber":76,"author":{"gitId":"yeoutzer"},"content":""},{"lineNumber":77,"author":{"gitId":"yeoutzer"},"content":"            if (taskType \u003d\u003d \u0027T\u0027) {"},{"lineNumber":78,"author":{"gitId":"yeoutzer"},"content":"                taskDescription \u003d taskString.substring(8);"},{"lineNumber":79,"author":{"gitId":"yeoutzer"},"content":"                task \u003d new TodoTask(taskDescription);"},{"lineNumber":80,"author":{"gitId":"yeoutzer"},"content":"            } else if (taskType \u003d\u003d \u0027D\u0027) {"},{"lineNumber":81,"author":{"gitId":"yeoutzer"},"content":"                int dateTimeIndex \u003d taskString.substring(8).indexOf(\u0027|\u0027);"},{"lineNumber":82,"author":{"gitId":"yeoutzer"},"content":"                if (dateTimeIndex \u003d\u003d -1) {"},{"lineNumber":83,"author":{"gitId":"yeoutzer"},"content":"                    throw new SaveFileInvalidFormatException();"},{"lineNumber":84,"author":{"gitId":"yeoutzer"},"content":"                }"},{"lineNumber":85,"author":{"gitId":"yeoutzer"},"content":""},{"lineNumber":86,"author":{"gitId":"yeoutzer"},"content":"                taskDescription \u003d taskString.substring(8, dateTimeIndex + 8).trim();"},{"lineNumber":87,"author":{"gitId":"yeoutzer"},"content":"                taskDateTime \u003d taskString.substring(dateTimeIndex + 9).trim();"},{"lineNumber":88,"author":{"gitId":"yeoutzer"},"content":"                if (taskDateTime.isEmpty()) {"},{"lineNumber":89,"author":{"gitId":"yeoutzer"},"content":"                    throw new SaveFileInvalidFormatException();"},{"lineNumber":90,"author":{"gitId":"yeoutzer"},"content":"                }"},{"lineNumber":91,"author":{"gitId":"yeoutzer"},"content":""},{"lineNumber":92,"author":{"gitId":"yeoutzer"},"content":"                int timeIndex \u003d taskDateTime.indexOf(\u0027|\u0027);"},{"lineNumber":93,"author":{"gitId":"yeoutzer"},"content":"                if (timeIndex \u003d\u003d -1) {"},{"lineNumber":94,"author":{"gitId":"yeoutzer"},"content":"                    LocalDate taskDate \u003d LocalDate.parse(taskDateTime);"},{"lineNumber":95,"author":{"gitId":"yeoutzer"},"content":"                    task \u003d new DeadlineTask(taskDescription, taskDate);"},{"lineNumber":96,"author":{"gitId":"yeoutzer"},"content":"                } else {"},{"lineNumber":97,"author":{"gitId":"yeoutzer"},"content":"                    String taskDateString \u003d taskDateTime.substring(0, timeIndex).trim();"},{"lineNumber":98,"author":{"gitId":"yeoutzer"},"content":"                    LocalDate taskDate \u003d LocalDate.parse(taskDateString);"},{"lineNumber":99,"author":{"gitId":"yeoutzer"},"content":"                    String taskTimeString \u003d taskDateTime.substring(timeIndex + 1).trim();"},{"lineNumber":100,"author":{"gitId":"yeoutzer"},"content":"                    LocalTime taskTime \u003d LocalTime."},{"lineNumber":101,"author":{"gitId":"yeoutzer"},"content":"                            parse(taskTimeString, DateTimeFormatter.ofPattern(\"HHmm\"));"},{"lineNumber":102,"author":{"gitId":"yeoutzer"},"content":"                    task \u003d new DeadlineTask(taskDescription, taskDate, taskTime);"},{"lineNumber":103,"author":{"gitId":"yeoutzer"},"content":"                }"},{"lineNumber":104,"author":{"gitId":"yeoutzer"},"content":"            } else if (taskType \u003d\u003d \u0027E\u0027) {"},{"lineNumber":105,"author":{"gitId":"yeoutzer"},"content":"                int dateIndex \u003d taskString.substring(8).indexOf(\u0027|\u0027);"},{"lineNumber":106,"author":{"gitId":"yeoutzer"},"content":"                if (dateIndex \u003d\u003d -1) {"},{"lineNumber":107,"author":{"gitId":"yeoutzer"},"content":"                    throw new SaveFileInvalidFormatException();"},{"lineNumber":108,"author":{"gitId":"yeoutzer"},"content":"                }"},{"lineNumber":109,"author":{"gitId":"yeoutzer"},"content":""},{"lineNumber":110,"author":{"gitId":"yeoutzer"},"content":"                taskDescription \u003d taskString.substring(8, dateIndex + 8).trim();"},{"lineNumber":111,"author":{"gitId":"yeoutzer"},"content":"                taskDateTime \u003d taskString.substring(dateIndex + 9).trim();"},{"lineNumber":112,"author":{"gitId":"yeoutzer"},"content":"                if (taskDateTime.isEmpty()) {"},{"lineNumber":113,"author":{"gitId":"yeoutzer"},"content":"                    throw new SaveFileInvalidFormatException();"},{"lineNumber":114,"author":{"gitId":"yeoutzer"},"content":"                }"},{"lineNumber":115,"author":{"gitId":"yeoutzer"},"content":""},{"lineNumber":116,"author":{"gitId":"yeoutzer"},"content":"                int timeIndex \u003d taskDateTime.indexOf(\u0027|\u0027);"},{"lineNumber":117,"author":{"gitId":"yeoutzer"},"content":"                if (timeIndex \u003d\u003d -1) {"},{"lineNumber":118,"author":{"gitId":"yeoutzer"},"content":"                    LocalDate taskDate \u003d LocalDate.parse(taskDateTime);"},{"lineNumber":119,"author":{"gitId":"yeoutzer"},"content":"                    task \u003d new EventTask(taskDescription, taskDate);"},{"lineNumber":120,"author":{"gitId":"yeoutzer"},"content":"                } else {"},{"lineNumber":121,"author":{"gitId":"yeoutzer"},"content":"                    String taskDateString \u003d taskDateTime.substring(0, timeIndex).trim();"},{"lineNumber":122,"author":{"gitId":"yeoutzer"},"content":"                    LocalDate taskDate \u003d LocalDate.parse(taskDateString);"},{"lineNumber":123,"author":{"gitId":"yeoutzer"},"content":"                    String taskTimeString \u003d taskDateTime.substring(timeIndex + 1).trim();"},{"lineNumber":124,"author":{"gitId":"yeoutzer"},"content":""},{"lineNumber":125,"author":{"gitId":"yeoutzer"},"content":"                    int endTimeIndex \u003d taskTimeString.indexOf(\u0027|\u0027);"},{"lineNumber":126,"author":{"gitId":"yeoutzer"},"content":"                    if (endTimeIndex \u003d\u003d -1) {"},{"lineNumber":127,"author":{"gitId":"yeoutzer"},"content":"                        LocalTime taskStartTime \u003d LocalTime."},{"lineNumber":128,"author":{"gitId":"yeoutzer"},"content":"                                parse(taskTimeString, DateTimeFormatter.ofPattern(\"HHmm\"));"},{"lineNumber":129,"author":{"gitId":"yeoutzer"},"content":"                        task \u003d new EventTask(taskDescription, taskDate, taskStartTime);"},{"lineNumber":130,"author":{"gitId":"yeoutzer"},"content":"                    } else {"},{"lineNumber":131,"author":{"gitId":"yeoutzer"},"content":"                        String taskStartTimeString \u003d taskTimeString.substring(0, endTimeIndex).trim();"},{"lineNumber":132,"author":{"gitId":"yeoutzer"},"content":"                        LocalTime taskStartTime \u003d LocalTime."},{"lineNumber":133,"author":{"gitId":"yeoutzer"},"content":"                                parse(taskStartTimeString, DateTimeFormatter.ofPattern(\"HHmm\"));"},{"lineNumber":134,"author":{"gitId":"yeoutzer"},"content":"                        String taskEndTimeString \u003d taskTimeString.substring(endTimeIndex + 1).trim();"},{"lineNumber":135,"author":{"gitId":"yeoutzer"},"content":"                        LocalTime taskEndTime \u003d LocalTime."},{"lineNumber":136,"author":{"gitId":"yeoutzer"},"content":"                                parse(taskEndTimeString, DateTimeFormatter.ofPattern(\"HHmm\"));"},{"lineNumber":137,"author":{"gitId":"yeoutzer"},"content":"                        task \u003d new EventTask(taskDescription, taskDate, taskStartTime, taskEndTime);"},{"lineNumber":138,"author":{"gitId":"yeoutzer"},"content":"                    }"},{"lineNumber":139,"author":{"gitId":"yeoutzer"},"content":"                }"},{"lineNumber":140,"author":{"gitId":"yeoutzer"},"content":"            } else {"},{"lineNumber":141,"author":{"gitId":"yeoutzer"},"content":"                throw new SaveFileInvalidFormatException();"},{"lineNumber":142,"author":{"gitId":"yeoutzer"},"content":"            }"},{"lineNumber":143,"author":{"gitId":"yeoutzer"},"content":""},{"lineNumber":144,"author":{"gitId":"yeoutzer"},"content":"            if (taskCompletion \u003d\u003d \u00271\u0027) {"},{"lineNumber":145,"author":{"gitId":"yeoutzer"},"content":"                task.markAsDone();"},{"lineNumber":146,"author":{"gitId":"yeoutzer"},"content":"            }"},{"lineNumber":147,"author":{"gitId":"yeoutzer"},"content":""},{"lineNumber":148,"author":{"gitId":"yeoutzer"},"content":"            taskList.add(task);"},{"lineNumber":149,"author":{"gitId":"yeoutzer"},"content":"        }"},{"lineNumber":150,"author":{"gitId":"yeoutzer"},"content":"        return taskList;"},{"lineNumber":151,"author":{"gitId":"yeoutzer"},"content":"    }"},{"lineNumber":152,"author":{"gitId":"yeoutzer"},"content":""},{"lineNumber":153,"author":{"gitId":"yeoutzer"},"content":"    /**"},{"lineNumber":154,"author":{"gitId":"yeoutzer"},"content":"     * Saves the contents of TaskList into save file in the valid format."},{"lineNumber":155,"author":{"gitId":"yeoutzer"},"content":"     *"},{"lineNumber":156,"author":{"gitId":"yeoutzer"},"content":"     * @param tasks TaskList to be saved."},{"lineNumber":157,"author":{"gitId":"yeoutzer"},"content":"     * @throws IOException If there is error while saving the contents."},{"lineNumber":158,"author":{"gitId":"yeoutzer"},"content":"     */"},{"lineNumber":159,"author":{"gitId":"yeoutzer"},"content":"    public void save(TaskList tasks) throws IOException {"},{"lineNumber":160,"author":{"gitId":"yeoutzer"},"content":"        FileWriter fileWriter \u003d new FileWriter(filePath);"},{"lineNumber":161,"author":{"gitId":"yeoutzer"},"content":"        List\u003cTask\u003e taskList \u003d tasks.getTaskList();"},{"lineNumber":162,"author":{"gitId":"yeoutzer"},"content":"        for (Task task : taskList) {"},{"lineNumber":163,"author":{"gitId":"yeoutzer"},"content":"            String saveLine \u003d task.getSaveString() + \u0027\\n\u0027;"},{"lineNumber":164,"author":{"gitId":"yeoutzer"},"content":"            fileWriter.write(saveLine);"},{"lineNumber":165,"author":{"gitId":"yeoutzer"},"content":"        }"},{"lineNumber":166,"author":{"gitId":"yeoutzer"},"content":"        fileWriter.close();"},{"lineNumber":167,"author":{"gitId":"yeoutzer"},"content":"    }"},{"lineNumber":168,"author":{"gitId":"yeoutzer"},"content":""},{"lineNumber":169,"author":{"gitId":"yeoutzer"},"content":"}"}],"authorContributionMap":{"yeoutzer":169}},{"path":"src/main/java/duke/tasks/DeadlineTask.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yeoutzer"},"content":"package duke.tasks;"},{"lineNumber":2,"author":{"gitId":"yeoutzer"},"content":""},{"lineNumber":3,"author":{"gitId":"yeoutzer"},"content":"import java.time.LocalDate;"},{"lineNumber":4,"author":{"gitId":"yeoutzer"},"content":"import java.time.LocalTime;"},{"lineNumber":5,"author":{"gitId":"yeoutzer"},"content":"import java.time.format.DateTimeFormatter;"},{"lineNumber":6,"author":{"gitId":"yeoutzer"},"content":""},{"lineNumber":7,"author":{"gitId":"yeoutzer"},"content":"/**"},{"lineNumber":8,"author":{"gitId":"yeoutzer"},"content":" * Responsible for containing deadline tasks."},{"lineNumber":9,"author":{"gitId":"yeoutzer"},"content":" */"},{"lineNumber":10,"author":{"gitId":"yeoutzer"},"content":"public class DeadlineTask extends Task {"},{"lineNumber":11,"author":{"gitId":"yeoutzer"},"content":"    protected LocalDate date;"},{"lineNumber":12,"author":{"gitId":"yeoutzer"},"content":"    protected LocalTime time;"},{"lineNumber":13,"author":{"gitId":"yeoutzer"},"content":""},{"lineNumber":14,"author":{"gitId":"yeoutzer"},"content":"    /**"},{"lineNumber":15,"author":{"gitId":"yeoutzer"},"content":"     * Constructs a DeadlineTask with the given description and deadline."},{"lineNumber":16,"author":{"gitId":"yeoutzer"},"content":"     *"},{"lineNumber":17,"author":{"gitId":"yeoutzer"},"content":"     * @param description Description of task."},{"lineNumber":18,"author":{"gitId":"yeoutzer"},"content":"     * @param date Deadline of task."},{"lineNumber":19,"author":{"gitId":"yeoutzer"},"content":"     */"},{"lineNumber":20,"author":{"gitId":"yeoutzer"},"content":"    public DeadlineTask(String description, LocalDate date) {"},{"lineNumber":21,"author":{"gitId":"yeoutzer"},"content":"        super(description, \u0027D\u0027);"},{"lineNumber":22,"author":{"gitId":"yeoutzer"},"content":"        this.date \u003d date;"},{"lineNumber":23,"author":{"gitId":"yeoutzer"},"content":"        this.time \u003d null;"},{"lineNumber":24,"author":{"gitId":"yeoutzer"},"content":"    }"},{"lineNumber":25,"author":{"gitId":"yeoutzer"},"content":""},{"lineNumber":26,"author":{"gitId":"yeoutzer"},"content":"    /**"},{"lineNumber":27,"author":{"gitId":"yeoutzer"},"content":"     * Constructs a DeadlineTask with the given description, deadline and time."},{"lineNumber":28,"author":{"gitId":"yeoutzer"},"content":"     *"},{"lineNumber":29,"author":{"gitId":"yeoutzer"},"content":"     * @param description Description of task."},{"lineNumber":30,"author":{"gitId":"yeoutzer"},"content":"     * @param date Deadline of task."},{"lineNumber":31,"author":{"gitId":"yeoutzer"},"content":"     * @param time Deadline timing of task."},{"lineNumber":32,"author":{"gitId":"yeoutzer"},"content":"     */"},{"lineNumber":33,"author":{"gitId":"yeoutzer"},"content":"    public DeadlineTask(String description, LocalDate date, LocalTime time) {"},{"lineNumber":34,"author":{"gitId":"yeoutzer"},"content":"        super(description, \u0027D\u0027);"},{"lineNumber":35,"author":{"gitId":"yeoutzer"},"content":"        this.date \u003d date;"},{"lineNumber":36,"author":{"gitId":"yeoutzer"},"content":"        this.time \u003d time;"},{"lineNumber":37,"author":{"gitId":"yeoutzer"},"content":"    }"},{"lineNumber":38,"author":{"gitId":"yeoutzer"},"content":""},{"lineNumber":39,"author":{"gitId":"yeoutzer"},"content":"    private String getDateSaveString() {"},{"lineNumber":40,"author":{"gitId":"yeoutzer"},"content":"        return this.date.format(DateTimeFormatter.ofPattern(\"yyyy-MM-dd\"));"},{"lineNumber":41,"author":{"gitId":"yeoutzer"},"content":"    }"},{"lineNumber":42,"author":{"gitId":"yeoutzer"},"content":""},{"lineNumber":43,"author":{"gitId":"yeoutzer"},"content":"    private String getTimeSaveString() {"},{"lineNumber":44,"author":{"gitId":"yeoutzer"},"content":"        return this.time \u003d\u003d null"},{"lineNumber":45,"author":{"gitId":"yeoutzer"},"content":"        ? \"\""},{"lineNumber":46,"author":{"gitId":"yeoutzer"},"content":"        : \" | \" + this.time.format(DateTimeFormatter.ofPattern(\"HHmm\"));"},{"lineNumber":47,"author":{"gitId":"yeoutzer"},"content":"    }"},{"lineNumber":48,"author":{"gitId":"yeoutzer"},"content":""},{"lineNumber":49,"author":{"gitId":"yeoutzer"},"content":"    /**"},{"lineNumber":50,"author":{"gitId":"yeoutzer"},"content":"     * Returns the format of string of task to be saved."},{"lineNumber":51,"author":{"gitId":"yeoutzer"},"content":"     *"},{"lineNumber":52,"author":{"gitId":"yeoutzer"},"content":"     * @return String of task to be saved."},{"lineNumber":53,"author":{"gitId":"yeoutzer"},"content":"     */"},{"lineNumber":54,"author":{"gitId":"yeoutzer"},"content":"    @Override"},{"lineNumber":55,"author":{"gitId":"yeoutzer"},"content":"    public String getSaveString() {"},{"lineNumber":56,"author":{"gitId":"yeoutzer"},"content":"        return super.getSaveString() + \" | \" + getDateSaveString() + getTimeSaveString();"},{"lineNumber":57,"author":{"gitId":"yeoutzer"},"content":"    }"},{"lineNumber":58,"author":{"gitId":"yeoutzer"},"content":""},{"lineNumber":59,"author":{"gitId":"yeoutzer"},"content":"    /**"},{"lineNumber":60,"author":{"gitId":"yeoutzer"},"content":"     * Returns the string of the task."},{"lineNumber":61,"author":{"gitId":"yeoutzer"},"content":"     *"},{"lineNumber":62,"author":{"gitId":"yeoutzer"},"content":"     * @return string of the task."},{"lineNumber":63,"author":{"gitId":"yeoutzer"},"content":"     */"},{"lineNumber":64,"author":{"gitId":"yeoutzer"},"content":"    @Override"},{"lineNumber":65,"author":{"gitId":"yeoutzer"},"content":"    public String toString() {"},{"lineNumber":66,"author":{"gitId":"yeoutzer"},"content":"        return \"[D]\" + super.toString() + \" (by: \""},{"lineNumber":67,"author":{"gitId":"yeoutzer"},"content":"                + this.date.format(DateTimeFormatter.ofPattern(\"dd MMM yyyy\"))"},{"lineNumber":68,"author":{"gitId":"yeoutzer"},"content":"                + (this.time \u003d\u003d null"},{"lineNumber":69,"author":{"gitId":"yeoutzer"},"content":"                ? \"\""},{"lineNumber":70,"author":{"gitId":"yeoutzer"},"content":"                : \" \" + this.time.format(DateTimeFormatter.ofPattern(\"hh:mm a\")))"},{"lineNumber":71,"author":{"gitId":"yeoutzer"},"content":"                + \")\";"},{"lineNumber":72,"author":{"gitId":"yeoutzer"},"content":"    }"},{"lineNumber":73,"author":{"gitId":"yeoutzer"},"content":"}"}],"authorContributionMap":{"yeoutzer":73}},{"path":"src/main/java/duke/tasks/EventTask.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yeoutzer"},"content":"package duke.tasks;"},{"lineNumber":2,"author":{"gitId":"yeoutzer"},"content":""},{"lineNumber":3,"author":{"gitId":"yeoutzer"},"content":"import java.time.LocalDate;"},{"lineNumber":4,"author":{"gitId":"yeoutzer"},"content":"import java.time.LocalTime;"},{"lineNumber":5,"author":{"gitId":"yeoutzer"},"content":"import java.time.format.DateTimeFormatter;"},{"lineNumber":6,"author":{"gitId":"yeoutzer"},"content":""},{"lineNumber":7,"author":{"gitId":"yeoutzer"},"content":"/**"},{"lineNumber":8,"author":{"gitId":"yeoutzer"},"content":" * Responsible for containing event tasks."},{"lineNumber":9,"author":{"gitId":"yeoutzer"},"content":" */"},{"lineNumber":10,"author":{"gitId":"yeoutzer"},"content":"public class EventTask extends Task {"},{"lineNumber":11,"author":{"gitId":"yeoutzer"},"content":"    protected LocalDate date;"},{"lineNumber":12,"author":{"gitId":"yeoutzer"},"content":"    protected LocalTime startTime;"},{"lineNumber":13,"author":{"gitId":"yeoutzer"},"content":"    protected LocalTime endTime;"},{"lineNumber":14,"author":{"gitId":"yeoutzer"},"content":""},{"lineNumber":15,"author":{"gitId":"yeoutzer"},"content":"    /**"},{"lineNumber":16,"author":{"gitId":"yeoutzer"},"content":"     * Constructs a EventTask with the given description and date."},{"lineNumber":17,"author":{"gitId":"yeoutzer"},"content":"     *"},{"lineNumber":18,"author":{"gitId":"yeoutzer"},"content":"     * @param description Description of the event."},{"lineNumber":19,"author":{"gitId":"yeoutzer"},"content":"     * @param date Date of the event."},{"lineNumber":20,"author":{"gitId":"yeoutzer"},"content":"     */"},{"lineNumber":21,"author":{"gitId":"yeoutzer"},"content":"    public EventTask(String description, LocalDate date) {"},{"lineNumber":22,"author":{"gitId":"yeoutzer"},"content":"        super(description, \u0027E\u0027);"},{"lineNumber":23,"author":{"gitId":"yeoutzer"},"content":"        this.date \u003d date;"},{"lineNumber":24,"author":{"gitId":"yeoutzer"},"content":"        this.startTime \u003d null;"},{"lineNumber":25,"author":{"gitId":"yeoutzer"},"content":"        this.endTime \u003d null;"},{"lineNumber":26,"author":{"gitId":"yeoutzer"},"content":"    }"},{"lineNumber":27,"author":{"gitId":"yeoutzer"},"content":""},{"lineNumber":28,"author":{"gitId":"yeoutzer"},"content":"    /**"},{"lineNumber":29,"author":{"gitId":"yeoutzer"},"content":"     * Constructs a EventTask with the given description, date and starting time."},{"lineNumber":30,"author":{"gitId":"yeoutzer"},"content":"     *"},{"lineNumber":31,"author":{"gitId":"yeoutzer"},"content":"     * @param description Description of the event."},{"lineNumber":32,"author":{"gitId":"yeoutzer"},"content":"     * @param date Date of the event."},{"lineNumber":33,"author":{"gitId":"yeoutzer"},"content":"     * @param startTime Starting time of the event."},{"lineNumber":34,"author":{"gitId":"yeoutzer"},"content":"     */"},{"lineNumber":35,"author":{"gitId":"yeoutzer"},"content":"    public EventTask(String description, LocalDate date, LocalTime startTime) {"},{"lineNumber":36,"author":{"gitId":"yeoutzer"},"content":"        super(description, \u0027E\u0027);"},{"lineNumber":37,"author":{"gitId":"yeoutzer"},"content":"        this.date \u003d date;"},{"lineNumber":38,"author":{"gitId":"yeoutzer"},"content":"        this.startTime \u003d startTime;"},{"lineNumber":39,"author":{"gitId":"yeoutzer"},"content":"        this.endTime \u003d null;"},{"lineNumber":40,"author":{"gitId":"yeoutzer"},"content":"    }"},{"lineNumber":41,"author":{"gitId":"yeoutzer"},"content":""},{"lineNumber":42,"author":{"gitId":"yeoutzer"},"content":"    /**"},{"lineNumber":43,"author":{"gitId":"yeoutzer"},"content":"     * Constructs a EventTask with the given description, date, starting and ending time."},{"lineNumber":44,"author":{"gitId":"yeoutzer"},"content":"     *"},{"lineNumber":45,"author":{"gitId":"yeoutzer"},"content":"     * @param description Description of the event."},{"lineNumber":46,"author":{"gitId":"yeoutzer"},"content":"     * @param date Date of the event."},{"lineNumber":47,"author":{"gitId":"yeoutzer"},"content":"     * @param startTime Starting time of the event."},{"lineNumber":48,"author":{"gitId":"yeoutzer"},"content":"     * @param endTime Ending time of the event."},{"lineNumber":49,"author":{"gitId":"yeoutzer"},"content":"     */"},{"lineNumber":50,"author":{"gitId":"yeoutzer"},"content":"    public EventTask(String description, LocalDate date, LocalTime startTime, LocalTime endTime) {"},{"lineNumber":51,"author":{"gitId":"yeoutzer"},"content":"        super(description, \u0027E\u0027);"},{"lineNumber":52,"author":{"gitId":"yeoutzer"},"content":"        this.date \u003d date;"},{"lineNumber":53,"author":{"gitId":"yeoutzer"},"content":"        this.startTime \u003d startTime;"},{"lineNumber":54,"author":{"gitId":"yeoutzer"},"content":"        this.endTime \u003d endTime;"},{"lineNumber":55,"author":{"gitId":"yeoutzer"},"content":"    }"},{"lineNumber":56,"author":{"gitId":"yeoutzer"},"content":""},{"lineNumber":57,"author":{"gitId":"yeoutzer"},"content":"    private String getDateSaveString() {"},{"lineNumber":58,"author":{"gitId":"yeoutzer"},"content":"        return this.date.format(DateTimeFormatter.ofPattern(\"yyyy-MM-dd\"));"},{"lineNumber":59,"author":{"gitId":"yeoutzer"},"content":"    }"},{"lineNumber":60,"author":{"gitId":"yeoutzer"},"content":""},{"lineNumber":61,"author":{"gitId":"yeoutzer"},"content":"    private String getStartTimeString() {"},{"lineNumber":62,"author":{"gitId":"yeoutzer"},"content":"        return this.startTime \u003d\u003d null"},{"lineNumber":63,"author":{"gitId":"yeoutzer"},"content":"                ? \"\""},{"lineNumber":64,"author":{"gitId":"yeoutzer"},"content":"                : \" | \" + this.startTime.format(DateTimeFormatter.ofPattern(\"HHmm\"));"},{"lineNumber":65,"author":{"gitId":"yeoutzer"},"content":"    }"},{"lineNumber":66,"author":{"gitId":"yeoutzer"},"content":""},{"lineNumber":67,"author":{"gitId":"yeoutzer"},"content":"    private String getEndTimeString() {"},{"lineNumber":68,"author":{"gitId":"yeoutzer"},"content":"        return this.endTime \u003d\u003d null"},{"lineNumber":69,"author":{"gitId":"yeoutzer"},"content":"                ? \"\""},{"lineNumber":70,"author":{"gitId":"yeoutzer"},"content":"                : \" | \" + this.endTime.format(DateTimeFormatter.ofPattern(\"HHmm\"));"},{"lineNumber":71,"author":{"gitId":"yeoutzer"},"content":"    }"},{"lineNumber":72,"author":{"gitId":"yeoutzer"},"content":""},{"lineNumber":73,"author":{"gitId":"yeoutzer"},"content":"    /**"},{"lineNumber":74,"author":{"gitId":"yeoutzer"},"content":"     * Returns the format of string of event to be saved."},{"lineNumber":75,"author":{"gitId":"yeoutzer"},"content":"     *"},{"lineNumber":76,"author":{"gitId":"yeoutzer"},"content":"     * @return String of event to be saved."},{"lineNumber":77,"author":{"gitId":"yeoutzer"},"content":"     */"},{"lineNumber":78,"author":{"gitId":"yeoutzer"},"content":"    @Override"},{"lineNumber":79,"author":{"gitId":"yeoutzer"},"content":"    public String getSaveString() {"},{"lineNumber":80,"author":{"gitId":"yeoutzer"},"content":"        return super.getSaveString() + \" | \" + getDateSaveString()"},{"lineNumber":81,"author":{"gitId":"yeoutzer"},"content":"                + getStartTimeString() + getEndTimeString();"},{"lineNumber":82,"author":{"gitId":"yeoutzer"},"content":"    }"},{"lineNumber":83,"author":{"gitId":"yeoutzer"},"content":""},{"lineNumber":84,"author":{"gitId":"yeoutzer"},"content":"    /**"},{"lineNumber":85,"author":{"gitId":"yeoutzer"},"content":"     * Returns the string of the event."},{"lineNumber":86,"author":{"gitId":"yeoutzer"},"content":"     *"},{"lineNumber":87,"author":{"gitId":"yeoutzer"},"content":"     * @return string of the event."},{"lineNumber":88,"author":{"gitId":"yeoutzer"},"content":"     */"},{"lineNumber":89,"author":{"gitId":"yeoutzer"},"content":"    @Override"},{"lineNumber":90,"author":{"gitId":"yeoutzer"},"content":"    public String toString() {"},{"lineNumber":91,"author":{"gitId":"yeoutzer"},"content":"        return \"[E]\" + super.toString() + \" (at: \""},{"lineNumber":92,"author":{"gitId":"yeoutzer"},"content":"                + this.date.format(DateTimeFormatter.ofPattern(\"dd MMM yyyy\"))"},{"lineNumber":93,"author":{"gitId":"yeoutzer"},"content":"                + (this.startTime \u003d\u003d null"},{"lineNumber":94,"author":{"gitId":"yeoutzer"},"content":"                ? \"\""},{"lineNumber":95,"author":{"gitId":"yeoutzer"},"content":"                : \" \" + this.startTime.format(DateTimeFormatter.ofPattern(\"hh:mm a\")))"},{"lineNumber":96,"author":{"gitId":"yeoutzer"},"content":"                + (this.endTime \u003d\u003d null"},{"lineNumber":97,"author":{"gitId":"yeoutzer"},"content":"                ? \"\""},{"lineNumber":98,"author":{"gitId":"yeoutzer"},"content":"                : \"-\" + this.endTime.format(DateTimeFormatter.ofPattern(\"hh:mm a\")))"},{"lineNumber":99,"author":{"gitId":"yeoutzer"},"content":"                + \")\";"},{"lineNumber":100,"author":{"gitId":"yeoutzer"},"content":"    }"},{"lineNumber":101,"author":{"gitId":"yeoutzer"},"content":"}"}],"authorContributionMap":{"yeoutzer":101}},{"path":"src/main/java/duke/tasks/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yeoutzer"},"content":"package duke.tasks;"},{"lineNumber":2,"author":{"gitId":"yeoutzer"},"content":""},{"lineNumber":3,"author":{"gitId":"yeoutzer"},"content":"/**"},{"lineNumber":4,"author":{"gitId":"yeoutzer"},"content":" * Responsible for containing different types of tasks."},{"lineNumber":5,"author":{"gitId":"yeoutzer"},"content":" */"},{"lineNumber":6,"author":{"gitId":"yeoutzer"},"content":"public class Task {"},{"lineNumber":7,"author":{"gitId":"yeoutzer"},"content":"    protected String description;"},{"lineNumber":8,"author":{"gitId":"yeoutzer"},"content":"    protected boolean isDone;"},{"lineNumber":9,"author":{"gitId":"yeoutzer"},"content":"    protected char type;"},{"lineNumber":10,"author":{"gitId":"yeoutzer"},"content":""},{"lineNumber":11,"author":{"gitId":"yeoutzer"},"content":"    /**"},{"lineNumber":12,"author":{"gitId":"yeoutzer"},"content":"     * Constructs a Task with the given description."},{"lineNumber":13,"author":{"gitId":"yeoutzer"},"content":"     *"},{"lineNumber":14,"author":{"gitId":"yeoutzer"},"content":"     * @param description Description of task."},{"lineNumber":15,"author":{"gitId":"yeoutzer"},"content":"     */"},{"lineNumber":16,"author":{"gitId":"yeoutzer"},"content":"    public Task(String description) {"},{"lineNumber":17,"author":{"gitId":"yeoutzer"},"content":"        this.description \u003d description;"},{"lineNumber":18,"author":{"gitId":"yeoutzer"},"content":"        this.isDone \u003d false;"},{"lineNumber":19,"author":{"gitId":"yeoutzer"},"content":"        this.type \u003d \u0027 \u0027;"},{"lineNumber":20,"author":{"gitId":"yeoutzer"},"content":"    }"},{"lineNumber":21,"author":{"gitId":"yeoutzer"},"content":""},{"lineNumber":22,"author":{"gitId":"yeoutzer"},"content":"    /**"},{"lineNumber":23,"author":{"gitId":"yeoutzer"},"content":"     * Constructs a Task with the given description and type of Task."},{"lineNumber":24,"author":{"gitId":"yeoutzer"},"content":"     *"},{"lineNumber":25,"author":{"gitId":"yeoutzer"},"content":"     * @param description Description of task."},{"lineNumber":26,"author":{"gitId":"yeoutzer"},"content":"     * @param type Type of task."},{"lineNumber":27,"author":{"gitId":"yeoutzer"},"content":"     */"},{"lineNumber":28,"author":{"gitId":"yeoutzer"},"content":"    public Task(String description, char type) {"},{"lineNumber":29,"author":{"gitId":"yeoutzer"},"content":"        this.description \u003d description;"},{"lineNumber":30,"author":{"gitId":"yeoutzer"},"content":"        this.isDone \u003d false;"},{"lineNumber":31,"author":{"gitId":"yeoutzer"},"content":"        this.type \u003d type;"},{"lineNumber":32,"author":{"gitId":"yeoutzer"},"content":"    }"},{"lineNumber":33,"author":{"gitId":"yeoutzer"},"content":""},{"lineNumber":34,"author":{"gitId":"yeoutzer"},"content":"    /**"},{"lineNumber":35,"author":{"gitId":"yeoutzer"},"content":"     * Returns a string indicating the completion status of task."},{"lineNumber":36,"author":{"gitId":"yeoutzer"},"content":"     *"},{"lineNumber":37,"author":{"gitId":"yeoutzer"},"content":"     * @return string indicating completion status of task."},{"lineNumber":38,"author":{"gitId":"yeoutzer"},"content":"     */"},{"lineNumber":39,"author":{"gitId":"yeoutzer"},"content":"    public String getStatusIcon() {"},{"lineNumber":40,"author":{"gitId":"yeoutzer"},"content":"        return (isDone ? \"X\" : \" \");"},{"lineNumber":41,"author":{"gitId":"yeoutzer"},"content":"    }"},{"lineNumber":42,"author":{"gitId":"yeoutzer"},"content":""},{"lineNumber":43,"author":{"gitId":"yeoutzer"},"content":"    /**"},{"lineNumber":44,"author":{"gitId":"yeoutzer"},"content":"     * Changes the completion status of task."},{"lineNumber":45,"author":{"gitId":"yeoutzer"},"content":"     */"},{"lineNumber":46,"author":{"gitId":"yeoutzer"},"content":"    public void markAsDone() {"},{"lineNumber":47,"author":{"gitId":"yeoutzer"},"content":"        this.isDone \u003d true;"},{"lineNumber":48,"author":{"gitId":"yeoutzer"},"content":"    }"},{"lineNumber":49,"author":{"gitId":"yeoutzer"},"content":""},{"lineNumber":50,"author":{"gitId":"yeoutzer"},"content":"    /**"},{"lineNumber":51,"author":{"gitId":"yeoutzer"},"content":"     * Returns the description of task."},{"lineNumber":52,"author":{"gitId":"yeoutzer"},"content":"     *"},{"lineNumber":53,"author":{"gitId":"yeoutzer"},"content":"     * @return Description of task."},{"lineNumber":54,"author":{"gitId":"yeoutzer"},"content":"     */"},{"lineNumber":55,"author":{"gitId":"yeoutzer"},"content":"    public String getDescription() {"},{"lineNumber":56,"author":{"gitId":"yeoutzer"},"content":"        return this.description;"},{"lineNumber":57,"author":{"gitId":"yeoutzer"},"content":"    }"},{"lineNumber":58,"author":{"gitId":"yeoutzer"},"content":""},{"lineNumber":59,"author":{"gitId":"yeoutzer"},"content":"    /** Returns the format of string of task to be saved."},{"lineNumber":60,"author":{"gitId":"yeoutzer"},"content":"     *"},{"lineNumber":61,"author":{"gitId":"yeoutzer"},"content":"     * @return String of task to be saved."},{"lineNumber":62,"author":{"gitId":"yeoutzer"},"content":"     */"},{"lineNumber":63,"author":{"gitId":"yeoutzer"},"content":"    public String getSaveString() {"},{"lineNumber":64,"author":{"gitId":"yeoutzer"},"content":"        return this.type + \" | \" + (this.isDone ? \"1\" : \"0\") + \" | \" + this.description;"},{"lineNumber":65,"author":{"gitId":"yeoutzer"},"content":"    }"},{"lineNumber":66,"author":{"gitId":"yeoutzer"},"content":""},{"lineNumber":67,"author":{"gitId":"yeoutzer"},"content":"    /**"},{"lineNumber":68,"author":{"gitId":"yeoutzer"},"content":"     * Returns the string of the task."},{"lineNumber":69,"author":{"gitId":"yeoutzer"},"content":"     *"},{"lineNumber":70,"author":{"gitId":"yeoutzer"},"content":"     * @return string of the task."},{"lineNumber":71,"author":{"gitId":"yeoutzer"},"content":"     */"},{"lineNumber":72,"author":{"gitId":"yeoutzer"},"content":"    @Override"},{"lineNumber":73,"author":{"gitId":"yeoutzer"},"content":"    public String toString() {"},{"lineNumber":74,"author":{"gitId":"yeoutzer"},"content":"        return \"[\" + getStatusIcon() + \"] \" + this.description;"},{"lineNumber":75,"author":{"gitId":"yeoutzer"},"content":"    }"},{"lineNumber":76,"author":{"gitId":"yeoutzer"},"content":"}"}],"authorContributionMap":{"yeoutzer":76}},{"path":"src/main/java/duke/tasks/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yeoutzer"},"content":"package duke.tasks;"},{"lineNumber":2,"author":{"gitId":"yeoutzer"},"content":""},{"lineNumber":3,"author":{"gitId":"yeoutzer"},"content":"import java.util.List;"},{"lineNumber":4,"author":{"gitId":"yeoutzer"},"content":""},{"lineNumber":5,"author":{"gitId":"yeoutzer"},"content":"/**"},{"lineNumber":6,"author":{"gitId":"yeoutzer"},"content":" * Responsible for storing all tasks in a list."},{"lineNumber":7,"author":{"gitId":"yeoutzer"},"content":" */"},{"lineNumber":8,"author":{"gitId":"yeoutzer"},"content":"public class TaskList {"},{"lineNumber":9,"author":{"gitId":"yeoutzer"},"content":"    private List\u003cTask\u003e tasks;"},{"lineNumber":10,"author":{"gitId":"yeoutzer"},"content":""},{"lineNumber":11,"author":{"gitId":"yeoutzer"},"content":"    /**"},{"lineNumber":12,"author":{"gitId":"yeoutzer"},"content":"     * Constructs a TaskList with given list of Task."},{"lineNumber":13,"author":{"gitId":"yeoutzer"},"content":"     *"},{"lineNumber":14,"author":{"gitId":"yeoutzer"},"content":"     * @param tasks List of Task."},{"lineNumber":15,"author":{"gitId":"yeoutzer"},"content":"     */"},{"lineNumber":16,"author":{"gitId":"yeoutzer"},"content":"    public TaskList(List\u003cTask\u003e tasks) {"},{"lineNumber":17,"author":{"gitId":"yeoutzer"},"content":"        this.tasks \u003d tasks;"},{"lineNumber":18,"author":{"gitId":"yeoutzer"},"content":"    }"},{"lineNumber":19,"author":{"gitId":"yeoutzer"},"content":""},{"lineNumber":20,"author":{"gitId":"yeoutzer"},"content":"    /**"},{"lineNumber":21,"author":{"gitId":"yeoutzer"},"content":"     * Adds given Task to TaskList."},{"lineNumber":22,"author":{"gitId":"yeoutzer"},"content":"     *"},{"lineNumber":23,"author":{"gitId":"yeoutzer"},"content":"     * @param task Task to be added."},{"lineNumber":24,"author":{"gitId":"yeoutzer"},"content":"     */"},{"lineNumber":25,"author":{"gitId":"yeoutzer"},"content":"    public void add(Task task) {"},{"lineNumber":26,"author":{"gitId":"yeoutzer"},"content":"        this.tasks.add(task);"},{"lineNumber":27,"author":{"gitId":"yeoutzer"},"content":"    }"},{"lineNumber":28,"author":{"gitId":"yeoutzer"},"content":""},{"lineNumber":29,"author":{"gitId":"yeoutzer"},"content":"    /**"},{"lineNumber":30,"author":{"gitId":"yeoutzer"},"content":"     * Removes Task from TaskList."},{"lineNumber":31,"author":{"gitId":"yeoutzer"},"content":"     *"},{"lineNumber":32,"author":{"gitId":"yeoutzer"},"content":"     * @param index Index of Task to be removed."},{"lineNumber":33,"author":{"gitId":"yeoutzer"},"content":"     */"},{"lineNumber":34,"author":{"gitId":"yeoutzer"},"content":"    public void remove(int index) {"},{"lineNumber":35,"author":{"gitId":"yeoutzer"},"content":"        this.tasks.remove(index);"},{"lineNumber":36,"author":{"gitId":"yeoutzer"},"content":"    }"},{"lineNumber":37,"author":{"gitId":"yeoutzer"},"content":""},{"lineNumber":38,"author":{"gitId":"yeoutzer"},"content":"    /**"},{"lineNumber":39,"author":{"gitId":"yeoutzer"},"content":"     * Returns the Task indicated in TaskList."},{"lineNumber":40,"author":{"gitId":"yeoutzer"},"content":"     *"},{"lineNumber":41,"author":{"gitId":"yeoutzer"},"content":"     * @param index Index of the Task to be returned."},{"lineNumber":42,"author":{"gitId":"yeoutzer"},"content":"     * @return Task indicated."},{"lineNumber":43,"author":{"gitId":"yeoutzer"},"content":"     */"},{"lineNumber":44,"author":{"gitId":"yeoutzer"},"content":"    public Task getTask(int index) {"},{"lineNumber":45,"author":{"gitId":"yeoutzer"},"content":"        return this.tasks.get(index);"},{"lineNumber":46,"author":{"gitId":"yeoutzer"},"content":"    }"},{"lineNumber":47,"author":{"gitId":"yeoutzer"},"content":""},{"lineNumber":48,"author":{"gitId":"yeoutzer"},"content":"    /**"},{"lineNumber":49,"author":{"gitId":"yeoutzer"},"content":"     * Returns the list of Task."},{"lineNumber":50,"author":{"gitId":"yeoutzer"},"content":"     *"},{"lineNumber":51,"author":{"gitId":"yeoutzer"},"content":"     * @return List of Task."},{"lineNumber":52,"author":{"gitId":"yeoutzer"},"content":"     */"},{"lineNumber":53,"author":{"gitId":"yeoutzer"},"content":"    public List\u003cTask\u003e getTaskList() {"},{"lineNumber":54,"author":{"gitId":"yeoutzer"},"content":"        return this.tasks;"},{"lineNumber":55,"author":{"gitId":"yeoutzer"},"content":"    }"},{"lineNumber":56,"author":{"gitId":"yeoutzer"},"content":""},{"lineNumber":57,"author":{"gitId":"yeoutzer"},"content":"    /**"},{"lineNumber":58,"author":{"gitId":"yeoutzer"},"content":"     * Returns the size of TaskList."},{"lineNumber":59,"author":{"gitId":"yeoutzer"},"content":"     *"},{"lineNumber":60,"author":{"gitId":"yeoutzer"},"content":"     * @return size of TaskList."},{"lineNumber":61,"author":{"gitId":"yeoutzer"},"content":"     */"},{"lineNumber":62,"author":{"gitId":"yeoutzer"},"content":"    public int size() {"},{"lineNumber":63,"author":{"gitId":"yeoutzer"},"content":"        return this.tasks.size();"},{"lineNumber":64,"author":{"gitId":"yeoutzer"},"content":"    }"},{"lineNumber":65,"author":{"gitId":"yeoutzer"},"content":"}"}],"authorContributionMap":{"yeoutzer":65}},{"path":"src/main/java/duke/tasks/TodoTask.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yeoutzer"},"content":"package duke.tasks;"},{"lineNumber":2,"author":{"gitId":"yeoutzer"},"content":""},{"lineNumber":3,"author":{"gitId":"yeoutzer"},"content":"/**"},{"lineNumber":4,"author":{"gitId":"yeoutzer"},"content":" * Responsible for containing todo tasks."},{"lineNumber":5,"author":{"gitId":"yeoutzer"},"content":" */"},{"lineNumber":6,"author":{"gitId":"yeoutzer"},"content":"public class TodoTask extends Task {"},{"lineNumber":7,"author":{"gitId":"yeoutzer"},"content":"    /**"},{"lineNumber":8,"author":{"gitId":"yeoutzer"},"content":"     * Constructs a TodoTask with the given description."},{"lineNumber":9,"author":{"gitId":"yeoutzer"},"content":"     *"},{"lineNumber":10,"author":{"gitId":"yeoutzer"},"content":"     * @param description Description of the task."},{"lineNumber":11,"author":{"gitId":"yeoutzer"},"content":"     */"},{"lineNumber":12,"author":{"gitId":"yeoutzer"},"content":"    public TodoTask(String description) {"},{"lineNumber":13,"author":{"gitId":"yeoutzer"},"content":"        super(description, \u0027T\u0027);"},{"lineNumber":14,"author":{"gitId":"yeoutzer"},"content":"    }"},{"lineNumber":15,"author":{"gitId":"yeoutzer"},"content":""},{"lineNumber":16,"author":{"gitId":"yeoutzer"},"content":"    /**"},{"lineNumber":17,"author":{"gitId":"yeoutzer"},"content":"     * Returns the string of the task."},{"lineNumber":18,"author":{"gitId":"yeoutzer"},"content":"     *"},{"lineNumber":19,"author":{"gitId":"yeoutzer"},"content":"     * @return string of the task."},{"lineNumber":20,"author":{"gitId":"yeoutzer"},"content":"     */"},{"lineNumber":21,"author":{"gitId":"yeoutzer"},"content":"    @Override"},{"lineNumber":22,"author":{"gitId":"yeoutzer"},"content":"    public String toString() {"},{"lineNumber":23,"author":{"gitId":"yeoutzer"},"content":"        return \"[T]\" + super.toString();"},{"lineNumber":24,"author":{"gitId":"yeoutzer"},"content":"    }"},{"lineNumber":25,"author":{"gitId":"yeoutzer"},"content":"}"}],"authorContributionMap":{"yeoutzer":25}},{"path":"src/main/java/duke/ui/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yeoutzer"},"content":"package duke.ui;"},{"lineNumber":2,"author":{"gitId":"yeoutzer"},"content":""},{"lineNumber":3,"author":{"gitId":"yeoutzer"},"content":"import duke.tasks.TaskList;"},{"lineNumber":4,"author":{"gitId":"yeoutzer"},"content":"import duke.tasks.Task;"},{"lineNumber":5,"author":{"gitId":"yeoutzer"},"content":""},{"lineNumber":6,"author":{"gitId":"yeoutzer"},"content":"import java.util.Scanner;"},{"lineNumber":7,"author":{"gitId":"yeoutzer"},"content":""},{"lineNumber":8,"author":{"gitId":"yeoutzer"},"content":"public class Ui {"},{"lineNumber":9,"author":{"gitId":"yeoutzer"},"content":"    public Ui() {}"},{"lineNumber":10,"author":{"gitId":"yeoutzer"},"content":""},{"lineNumber":11,"author":{"gitId":"yeoutzer"},"content":"    /**"},{"lineNumber":12,"author":{"gitId":"yeoutzer"},"content":"     * Prints the welcome message."},{"lineNumber":13,"author":{"gitId":"yeoutzer"},"content":"     */"},{"lineNumber":14,"author":{"gitId":"yeoutzer"},"content":"    public void showWelcome() {"},{"lineNumber":15,"author":{"gitId":"yeoutzer"},"content":"        String logo \u003d \" ____        _        \\n\""},{"lineNumber":16,"author":{"gitId":"yeoutzer"},"content":"                + \"|  _ \\\\ _   _| | _____ \\n\""},{"lineNumber":17,"author":{"gitId":"yeoutzer"},"content":"                + \"| | | | | | | |/ / _ \\\\\\n\""},{"lineNumber":18,"author":{"gitId":"yeoutzer"},"content":"                + \"| |_| | |_| |   \u003c  __/\\n\""},{"lineNumber":19,"author":{"gitId":"yeoutzer"},"content":"                + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\";"},{"lineNumber":20,"author":{"gitId":"yeoutzer"},"content":"        System.out.println(\"Hello from\\n\" + logo);"},{"lineNumber":21,"author":{"gitId":"yeoutzer"},"content":"        showGreeting();"},{"lineNumber":22,"author":{"gitId":"yeoutzer"},"content":"    }"},{"lineNumber":23,"author":{"gitId":"yeoutzer"},"content":""},{"lineNumber":24,"author":{"gitId":"yeoutzer"},"content":"    private void showGreeting() {"},{"lineNumber":25,"author":{"gitId":"yeoutzer"},"content":"        System.out.println(\"\\t____________________________________________________________\\n\""},{"lineNumber":26,"author":{"gitId":"yeoutzer"},"content":"                + \"\\tHello! I\u0027m Duke\\n\\tWhat can I do for you?\\n\""},{"lineNumber":27,"author":{"gitId":"yeoutzer"},"content":"                + \"\\t____________________________________________________________\\n\");"},{"lineNumber":28,"author":{"gitId":"yeoutzer"},"content":"    }"},{"lineNumber":29,"author":{"gitId":"yeoutzer"},"content":""},{"lineNumber":30,"author":{"gitId":"yeoutzer"},"content":"    /**"},{"lineNumber":31,"author":{"gitId":"yeoutzer"},"content":"     * Prints the specified error message."},{"lineNumber":32,"author":{"gitId":"yeoutzer"},"content":"     *"},{"lineNumber":33,"author":{"gitId":"yeoutzer"},"content":"     * @param message Message given by the error."},{"lineNumber":34,"author":{"gitId":"yeoutzer"},"content":"     */"},{"lineNumber":35,"author":{"gitId":"yeoutzer"},"content":"    public void showError(String message) {"},{"lineNumber":36,"author":{"gitId":"yeoutzer"},"content":"        System.out.println(\"\\t____________________________________________________________\\n\""},{"lineNumber":37,"author":{"gitId":"yeoutzer"},"content":"                + message + \"\\t____________________________________________________________\\n\");"},{"lineNumber":38,"author":{"gitId":"yeoutzer"},"content":"    }"},{"lineNumber":39,"author":{"gitId":"yeoutzer"},"content":""},{"lineNumber":40,"author":{"gitId":"yeoutzer"},"content":"    /**"},{"lineNumber":41,"author":{"gitId":"yeoutzer"},"content":"     * Returns the user input as a string."},{"lineNumber":42,"author":{"gitId":"yeoutzer"},"content":"     *"},{"lineNumber":43,"author":{"gitId":"yeoutzer"},"content":"     * @return user input string."},{"lineNumber":44,"author":{"gitId":"yeoutzer"},"content":"     */"},{"lineNumber":45,"author":{"gitId":"yeoutzer"},"content":"    public String readCommand() {"},{"lineNumber":46,"author":{"gitId":"yeoutzer"},"content":"        Scanner reader \u003d new Scanner(System.in);"},{"lineNumber":47,"author":{"gitId":"yeoutzer"},"content":"        return reader.nextLine();"},{"lineNumber":48,"author":{"gitId":"yeoutzer"},"content":"    }"},{"lineNumber":49,"author":{"gitId":"yeoutzer"},"content":""},{"lineNumber":50,"author":{"gitId":"yeoutzer"},"content":"    /**"},{"lineNumber":51,"author":{"gitId":"yeoutzer"},"content":"     * Prints the full list of Task in TaskList, numbered in increasing order."},{"lineNumber":52,"author":{"gitId":"yeoutzer"},"content":"     *"},{"lineNumber":53,"author":{"gitId":"yeoutzer"},"content":"     * @param tasks TaskList to be printed."},{"lineNumber":54,"author":{"gitId":"yeoutzer"},"content":"     */"},{"lineNumber":55,"author":{"gitId":"yeoutzer"},"content":"    public void showTasks(TaskList tasks) {"},{"lineNumber":56,"author":{"gitId":"yeoutzer"},"content":"        System.out.println(\"\\t____________________________________________________________\\n\""},{"lineNumber":57,"author":{"gitId":"yeoutzer"},"content":"                + \"\\tHere are the tasks in your list:\");"},{"lineNumber":58,"author":{"gitId":"yeoutzer"},"content":"        for (int i \u003d 0; i \u003c tasks.size(); i++) {"},{"lineNumber":59,"author":{"gitId":"yeoutzer"},"content":"            System.out.println(\"\\t\" + (i + 1) + \".\" + tasks.getTask(i).toString());"},{"lineNumber":60,"author":{"gitId":"yeoutzer"},"content":"        }"},{"lineNumber":61,"author":{"gitId":"yeoutzer"},"content":"        System.out.println(\"\\t____________________________________________________________\\n\");"},{"lineNumber":62,"author":{"gitId":"yeoutzer"},"content":"    }"},{"lineNumber":63,"author":{"gitId":"yeoutzer"},"content":""},{"lineNumber":64,"author":{"gitId":"yeoutzer"},"content":"    /**"},{"lineNumber":65,"author":{"gitId":"yeoutzer"},"content":"     * Prints a message to indicate TaskList is empty."},{"lineNumber":66,"author":{"gitId":"yeoutzer"},"content":"     */"},{"lineNumber":67,"author":{"gitId":"yeoutzer"},"content":"    public void showEmptyList() {"},{"lineNumber":68,"author":{"gitId":"yeoutzer"},"content":"        System.out.println(\"\\t____________________________________________________________\\n\""},{"lineNumber":69,"author":{"gitId":"yeoutzer"},"content":"                + \"\\tThere are no items in your list.\\n\""},{"lineNumber":70,"author":{"gitId":"yeoutzer"},"content":"                + \"\\t____________________________________________________________\\n\");"},{"lineNumber":71,"author":{"gitId":"yeoutzer"},"content":"    }"},{"lineNumber":72,"author":{"gitId":"yeoutzer"},"content":""},{"lineNumber":73,"author":{"gitId":"yeoutzer"},"content":"    /**"},{"lineNumber":74,"author":{"gitId":"yeoutzer"},"content":"     * Prints a message to indicate error when editing save file."},{"lineNumber":75,"author":{"gitId":"yeoutzer"},"content":"     */"},{"lineNumber":76,"author":{"gitId":"yeoutzer"},"content":"    public void showIOError() {"},{"lineNumber":77,"author":{"gitId":"yeoutzer"},"content":"        System.out.println(\"\\t____________________________________________________________\\n\""},{"lineNumber":78,"author":{"gitId":"yeoutzer"},"content":"                + \"\\tError happened while trying to edit save file.\\n\""},{"lineNumber":79,"author":{"gitId":"yeoutzer"},"content":"                + \"\\t____________________________________________________________\\n\");"},{"lineNumber":80,"author":{"gitId":"yeoutzer"},"content":"    }"},{"lineNumber":81,"author":{"gitId":"yeoutzer"},"content":""},{"lineNumber":82,"author":{"gitId":"yeoutzer"},"content":"    /**"},{"lineNumber":83,"author":{"gitId":"yeoutzer"},"content":"     * Prints a message to indicate invalid date input."},{"lineNumber":84,"author":{"gitId":"yeoutzer"},"content":"     */"},{"lineNumber":85,"author":{"gitId":"yeoutzer"},"content":"    public void showOutOfBoundsError() {"},{"lineNumber":86,"author":{"gitId":"yeoutzer"},"content":"        System.out.println(\"\\t____________________________________________________________\\n\""},{"lineNumber":87,"author":{"gitId":"yeoutzer"},"content":"                + \"\\tPlease enter the date (DD/MM/YYYY) with optional\\n\""},{"lineNumber":88,"author":{"gitId":"yeoutzer"},"content":"                + \"\\ttime (in 24 hours format) after \\\"/by\\\" for Deadline Tasks\\n\""},{"lineNumber":89,"author":{"gitId":"yeoutzer"},"content":"                + \"\\tor date with optional start and end time after \\\"/at\\\" \\n\""},{"lineNumber":90,"author":{"gitId":"yeoutzer"},"content":"                + \"\\tfor Event Tasks.\\n\""},{"lineNumber":91,"author":{"gitId":"yeoutzer"},"content":"                + \"\\t____________________________________________________________\\n\");"},{"lineNumber":92,"author":{"gitId":"yeoutzer"},"content":"    }"},{"lineNumber":93,"author":{"gitId":"yeoutzer"},"content":""},{"lineNumber":94,"author":{"gitId":"yeoutzer"},"content":"    /**"},{"lineNumber":95,"author":{"gitId":"yeoutzer"},"content":"     * Prints a message to indicate invalid date input format."},{"lineNumber":96,"author":{"gitId":"yeoutzer"},"content":"     */"},{"lineNumber":97,"author":{"gitId":"yeoutzer"},"content":"    public void showDateTimeParseError() {"},{"lineNumber":98,"author":{"gitId":"yeoutzer"},"content":"        System.out.println(\"\\t____________________________________________________________\\n\""},{"lineNumber":99,"author":{"gitId":"yeoutzer"},"content":"                + \"\\tPlease enter in DD/MM/YYYY format (eg. 02/04/2000) for dates\\n\""},{"lineNumber":100,"author":{"gitId":"yeoutzer"},"content":"                + \"\\tand in 24 hour format (eg. 1830) for times.\\n\""},{"lineNumber":101,"author":{"gitId":"yeoutzer"},"content":"                + \"\\t____________________________________________________________\\n\");"},{"lineNumber":102,"author":{"gitId":"yeoutzer"},"content":"    }"},{"lineNumber":103,"author":{"gitId":"yeoutzer"},"content":""},{"lineNumber":104,"author":{"gitId":"yeoutzer"},"content":"    /**"},{"lineNumber":105,"author":{"gitId":"yeoutzer"},"content":"     * Prints a message to indicate successful task addition."},{"lineNumber":106,"author":{"gitId":"yeoutzer"},"content":"     *"},{"lineNumber":107,"author":{"gitId":"yeoutzer"},"content":"     * @param tasks TaskList containing the Task."},{"lineNumber":108,"author":{"gitId":"yeoutzer"},"content":"     * @param task Task that is added."},{"lineNumber":109,"author":{"gitId":"yeoutzer"},"content":"     */"},{"lineNumber":110,"author":{"gitId":"yeoutzer"},"content":"    public void showAddTask(TaskList tasks, Task task) {"},{"lineNumber":111,"author":{"gitId":"yeoutzer"},"content":"        System.out.println(\"\\t____________________________________________________________\\n\""},{"lineNumber":112,"author":{"gitId":"yeoutzer"},"content":"                + \"\\tGot it. I\u0027ve added this task:\\n\""},{"lineNumber":113,"author":{"gitId":"yeoutzer"},"content":"                + \"\\t   \" + task.toString() + \"\\n\""},{"lineNumber":114,"author":{"gitId":"yeoutzer"},"content":"                + \"\\tNow you have \" + tasks.size() + \" tasks in the list.\\n\""},{"lineNumber":115,"author":{"gitId":"yeoutzer"},"content":"                + \"\\t____________________________________________________________\\n\");"},{"lineNumber":116,"author":{"gitId":"yeoutzer"},"content":"    }"},{"lineNumber":117,"author":{"gitId":"yeoutzer"},"content":""},{"lineNumber":118,"author":{"gitId":"yeoutzer"},"content":"    /**"},{"lineNumber":119,"author":{"gitId":"yeoutzer"},"content":"     * Prints a message to indicate successful task deletion."},{"lineNumber":120,"author":{"gitId":"yeoutzer"},"content":"     *"},{"lineNumber":121,"author":{"gitId":"yeoutzer"},"content":"     * @param tasks TaskList that contained the Task."},{"lineNumber":122,"author":{"gitId":"yeoutzer"},"content":"     * @param task Task that has been deleted."},{"lineNumber":123,"author":{"gitId":"yeoutzer"},"content":"     */"},{"lineNumber":124,"author":{"gitId":"yeoutzer"},"content":"    public void showDeleteTask(TaskList tasks, Task task) {"},{"lineNumber":125,"author":{"gitId":"yeoutzer"},"content":"        System.out.println(\"\\t____________________________________________________________\\n\""},{"lineNumber":126,"author":{"gitId":"yeoutzer"},"content":"                + \"\\tNoted. I\u0027ve removed this task:\\n\""},{"lineNumber":127,"author":{"gitId":"yeoutzer"},"content":"                + \"\\t   \" + task.toString() + \"\\n\""},{"lineNumber":128,"author":{"gitId":"yeoutzer"},"content":"                + \"\\tNow you have \" + tasks.size() + \" tasks in the list.\\n\""},{"lineNumber":129,"author":{"gitId":"yeoutzer"},"content":"                + \"\\t____________________________________________________________\\n\");"},{"lineNumber":130,"author":{"gitId":"yeoutzer"},"content":"    }"},{"lineNumber":131,"author":{"gitId":"yeoutzer"},"content":""},{"lineNumber":132,"author":{"gitId":"yeoutzer"},"content":"    /**"},{"lineNumber":133,"author":{"gitId":"yeoutzer"},"content":"     * Prints a message to indicate successful task completion."},{"lineNumber":134,"author":{"gitId":"yeoutzer"},"content":"     *"},{"lineNumber":135,"author":{"gitId":"yeoutzer"},"content":"     * @param tasks TaskList containing the Task to be completed."},{"lineNumber":136,"author":{"gitId":"yeoutzer"},"content":"     * @param index Index of the task in TaskList."},{"lineNumber":137,"author":{"gitId":"yeoutzer"},"content":"     */"},{"lineNumber":138,"author":{"gitId":"yeoutzer"},"content":"    public void showDoneTask(TaskList tasks, int index) {"},{"lineNumber":139,"author":{"gitId":"yeoutzer"},"content":"        System.out.println(\"\\t____________________________________________________________\\n\""},{"lineNumber":140,"author":{"gitId":"yeoutzer"},"content":"                + \"\\tNice! I\u0027ve marked this task as done:\\n\\t\\t\""},{"lineNumber":141,"author":{"gitId":"yeoutzer"},"content":"                + tasks.getTask(index - 1).toString() + \"\\n\""},{"lineNumber":142,"author":{"gitId":"yeoutzer"},"content":"                + \"\\t____________________________________________________________\\n\");"},{"lineNumber":143,"author":{"gitId":"yeoutzer"},"content":"    }"},{"lineNumber":144,"author":{"gitId":"yeoutzer"},"content":""},{"lineNumber":145,"author":{"gitId":"yeoutzer"},"content":"    /**"},{"lineNumber":146,"author":{"gitId":"yeoutzer"},"content":"     * Prints the goodbye message."},{"lineNumber":147,"author":{"gitId":"yeoutzer"},"content":"     */"},{"lineNumber":148,"author":{"gitId":"yeoutzer"},"content":"    public void showByeMessage() {"},{"lineNumber":149,"author":{"gitId":"yeoutzer"},"content":"        System.out.println(\"\\t____________________________________________________________\\n\""},{"lineNumber":150,"author":{"gitId":"yeoutzer"},"content":"                + \"\\tBye. Hope to see you again soon!\\n\""},{"lineNumber":151,"author":{"gitId":"yeoutzer"},"content":"                + \"\\t____________________________________________________________\\n\");"},{"lineNumber":152,"author":{"gitId":"yeoutzer"},"content":"    }"},{"lineNumber":153,"author":{"gitId":"yeoutzer"},"content":""},{"lineNumber":154,"author":{"gitId":"yeoutzer"},"content":"    /**"},{"lineNumber":155,"author":{"gitId":"yeoutzer"},"content":"     * Prints the list of tasks matching specified input."},{"lineNumber":156,"author":{"gitId":"yeoutzer"},"content":"     *"},{"lineNumber":157,"author":{"gitId":"yeoutzer"},"content":"     * @param tasks List of task that contains the matched input."},{"lineNumber":158,"author":{"gitId":"yeoutzer"},"content":"     */"},{"lineNumber":159,"author":{"gitId":"yeoutzer"},"content":"    public void showMatchList(TaskList tasks) {"},{"lineNumber":160,"author":{"gitId":"yeoutzer"},"content":"        System.out.println(\"\\t____________________________________________________________\\n\""},{"lineNumber":161,"author":{"gitId":"yeoutzer"},"content":"                + \"\\tHere are the matching tasks in your list:\");"},{"lineNumber":162,"author":{"gitId":"yeoutzer"},"content":"        for (int i \u003d 0; i \u003c tasks.size(); i++) {"},{"lineNumber":163,"author":{"gitId":"yeoutzer"},"content":"            System.out.println(\"\\t\" + (i + 1) + \".\" + tasks.getTask(i).toString());"},{"lineNumber":164,"author":{"gitId":"yeoutzer"},"content":"        }"},{"lineNumber":165,"author":{"gitId":"yeoutzer"},"content":"        System.out.println(\"\\t____________________________________________________________\\n\");"},{"lineNumber":166,"author":{"gitId":"yeoutzer"},"content":"    }"},{"lineNumber":167,"author":{"gitId":"yeoutzer"},"content":""},{"lineNumber":168,"author":{"gitId":"yeoutzer"},"content":"    /**"},{"lineNumber":169,"author":{"gitId":"yeoutzer"},"content":"     * Prints a message indicating no match in TaskList."},{"lineNumber":170,"author":{"gitId":"yeoutzer"},"content":"     */"},{"lineNumber":171,"author":{"gitId":"yeoutzer"},"content":"    public void showNoMatch() {"},{"lineNumber":172,"author":{"gitId":"yeoutzer"},"content":"        System.out.println(\"\\t____________________________________________________________\\n\""},{"lineNumber":173,"author":{"gitId":"yeoutzer"},"content":"                + \"\\tNo tasks matched your word.\\n\""},{"lineNumber":174,"author":{"gitId":"yeoutzer"},"content":"                + \"\\t____________________________________________________________\\n\");"},{"lineNumber":175,"author":{"gitId":"yeoutzer"},"content":"    }"},{"lineNumber":176,"author":{"gitId":"yeoutzer"},"content":"}"}],"authorContributionMap":{"yeoutzer":176}},{"path":"src/test/java/duke/commands/AddCommandTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yeoutzer"},"content":"package duke.commands;"},{"lineNumber":2,"author":{"gitId":"yeoutzer"},"content":""},{"lineNumber":3,"author":{"gitId":"yeoutzer"},"content":"import duke.exceptions.DateTimeNotFoundException;"},{"lineNumber":4,"author":{"gitId":"yeoutzer"},"content":"import duke.exceptions.DescriptionNotFoundException;"},{"lineNumber":5,"author":{"gitId":"yeoutzer"},"content":"import duke.storage.Storage;"},{"lineNumber":6,"author":{"gitId":"yeoutzer"},"content":"import duke.tasks.Task;"},{"lineNumber":7,"author":{"gitId":"yeoutzer"},"content":"import duke.tasks.TaskList;"},{"lineNumber":8,"author":{"gitId":"yeoutzer"},"content":"import duke.ui.Ui;"},{"lineNumber":9,"author":{"gitId":"yeoutzer"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;"},{"lineNumber":10,"author":{"gitId":"yeoutzer"},"content":"import org.junit.jupiter.api.Test;"},{"lineNumber":11,"author":{"gitId":"yeoutzer"},"content":""},{"lineNumber":12,"author":{"gitId":"yeoutzer"},"content":"import java.time.format.DateTimeParseException;"},{"lineNumber":13,"author":{"gitId":"yeoutzer"},"content":"import java.util.ArrayList;"},{"lineNumber":14,"author":{"gitId":"yeoutzer"},"content":""},{"lineNumber":15,"author":{"gitId":"yeoutzer"},"content":"public class AddCommandTest {"},{"lineNumber":16,"author":{"gitId":"yeoutzer"},"content":""},{"lineNumber":17,"author":{"gitId":"yeoutzer"},"content":"    @Test"},{"lineNumber":18,"author":{"gitId":"yeoutzer"},"content":"    public void testAddCommand_noDescriptionGiven_throwsDescriptionNotFoundException() {"},{"lineNumber":19,"author":{"gitId":"yeoutzer"},"content":"        String testCommand \u003d \"deadline /by\";"},{"lineNumber":20,"author":{"gitId":"yeoutzer"},"content":"        TaskList tasks \u003d new TaskList(new ArrayList\u003cTask\u003e());"},{"lineNumber":21,"author":{"gitId":"yeoutzer"},"content":"        Storage storage \u003d new Storage(\"AddCommandTest.txt\");"},{"lineNumber":22,"author":{"gitId":"yeoutzer"},"content":"        Ui ui \u003d new Ui();"},{"lineNumber":23,"author":{"gitId":"yeoutzer"},"content":"        AddCommand addCommand \u003d new AddCommand(testCommand);"},{"lineNumber":24,"author":{"gitId":"yeoutzer"},"content":"        assertThrows(DescriptionNotFoundException.class, () -\u003e addCommand.execute(tasks, ui, storage));"},{"lineNumber":25,"author":{"gitId":"yeoutzer"},"content":"    }"},{"lineNumber":26,"author":{"gitId":"yeoutzer"},"content":""},{"lineNumber":27,"author":{"gitId":"yeoutzer"},"content":"    @Test"},{"lineNumber":28,"author":{"gitId":"yeoutzer"},"content":"    public void testAddCommand_noDateGiven_throwsDateTimeNotFoundException() {"},{"lineNumber":29,"author":{"gitId":"yeoutzer"},"content":"        String testCommand \u003d \"deadline testing /by\";"},{"lineNumber":30,"author":{"gitId":"yeoutzer"},"content":"        TaskList tasks \u003d new TaskList(new ArrayList\u003cTask\u003e());"},{"lineNumber":31,"author":{"gitId":"yeoutzer"},"content":"        Storage storage \u003d new Storage(\"AddCommandTest.txt\");"},{"lineNumber":32,"author":{"gitId":"yeoutzer"},"content":"        Ui ui \u003d new Ui();"},{"lineNumber":33,"author":{"gitId":"yeoutzer"},"content":"        AddCommand addCommand \u003d new AddCommand(testCommand);"},{"lineNumber":34,"author":{"gitId":"yeoutzer"},"content":"        assertThrows(DateTimeNotFoundException.class, () -\u003e addCommand.execute(tasks, ui, storage));"},{"lineNumber":35,"author":{"gitId":"yeoutzer"},"content":"    }"},{"lineNumber":36,"author":{"gitId":"yeoutzer"},"content":""},{"lineNumber":37,"author":{"gitId":"yeoutzer"},"content":"    @Test"},{"lineNumber":38,"author":{"gitId":"yeoutzer"},"content":"    public void testAddCommand_invalidDateTimeFormatGiven_throwsDateTimeParseException() {"},{"lineNumber":39,"author":{"gitId":"yeoutzer"},"content":"        String testCommand \u003d \"deadline testing /by 20/20/2020\";"},{"lineNumber":40,"author":{"gitId":"yeoutzer"},"content":"        TaskList tasks \u003d new TaskList(new ArrayList\u003cTask\u003e());"},{"lineNumber":41,"author":{"gitId":"yeoutzer"},"content":"        Storage storage \u003d new Storage(\"AddCommandTest.txt\");"},{"lineNumber":42,"author":{"gitId":"yeoutzer"},"content":"        Ui ui \u003d new Ui();"},{"lineNumber":43,"author":{"gitId":"yeoutzer"},"content":"        AddCommand addCommand \u003d new AddCommand(testCommand);"},{"lineNumber":44,"author":{"gitId":"yeoutzer"},"content":"        assertThrows(DateTimeParseException.class, () -\u003e addCommand.execute(tasks, ui, storage));"},{"lineNumber":45,"author":{"gitId":"yeoutzer"},"content":"    }"},{"lineNumber":46,"author":{"gitId":"yeoutzer"},"content":"}"}],"authorContributionMap":{"yeoutzer":46}},{"path":"src/test/java/duke/storage/StorageTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yeoutzer"},"content":"package duke.storage;"},{"lineNumber":2,"author":{"gitId":"yeoutzer"},"content":""},{"lineNumber":3,"author":{"gitId":"yeoutzer"},"content":"import duke.exceptions.SaveFileInvalidFormatException;"},{"lineNumber":4,"author":{"gitId":"yeoutzer"},"content":"import org.junit.jupiter.api.Test;"},{"lineNumber":5,"author":{"gitId":"yeoutzer"},"content":""},{"lineNumber":6,"author":{"gitId":"yeoutzer"},"content":"import java.io.FileNotFoundException;"},{"lineNumber":7,"author":{"gitId":"yeoutzer"},"content":""},{"lineNumber":8,"author":{"gitId":"yeoutzer"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;"},{"lineNumber":9,"author":{"gitId":"yeoutzer"},"content":""},{"lineNumber":10,"author":{"gitId":"yeoutzer"},"content":"public class StorageTest {"},{"lineNumber":11,"author":{"gitId":"yeoutzer"},"content":"    @Test"},{"lineNumber":12,"author":{"gitId":"yeoutzer"},"content":"    public void testStorage_invalidFile_throwsFileNotFoundException() {"},{"lineNumber":13,"author":{"gitId":"yeoutzer"},"content":"       Storage storage \u003d new Storage(\"invalidFile.abc\");"},{"lineNumber":14,"author":{"gitId":"yeoutzer"},"content":"       assertThrows(FileNotFoundException.class, () -\u003e storage.load());"},{"lineNumber":15,"author":{"gitId":"yeoutzer"},"content":"    }"},{"lineNumber":16,"author":{"gitId":"yeoutzer"},"content":""},{"lineNumber":17,"author":{"gitId":"yeoutzer"},"content":"    @Test"},{"lineNumber":18,"author":{"gitId":"yeoutzer"},"content":"    public void testStorage_invalidSaveTextFormat_throwsInvalidSaveFileFormatException() {"},{"lineNumber":19,"author":{"gitId":"yeoutzer"},"content":"        Storage storage \u003d new Storage(System.getProperty(\"user.dir\") + \"/java/duke/storage/StorageTest.txt\");"},{"lineNumber":20,"author":{"gitId":"yeoutzer"},"content":"        assertThrows(SaveFileInvalidFormatException.class, () -\u003e storage.load());"},{"lineNumber":21,"author":{"gitId":"yeoutzer"},"content":"    }"},{"lineNumber":22,"author":{"gitId":"yeoutzer"},"content":""},{"lineNumber":23,"author":{"gitId":"yeoutzer"},"content":"}"}],"authorContributionMap":{"yeoutzer":23}},{"path":"src/test/java/duke/storage/StorageTest.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"yeoutzer"},"content":"testing invalid save"}],"authorContributionMap":{"yeoutzer":1}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"yeoutzer"},"content":"todo read book"},{"lineNumber":2,"author":{"gitId":"yeoutzer"},"content":"deadline return book /by June 6th"},{"lineNumber":3,"author":{"gitId":"yeoutzer"},"content":"event project meeting /at Aug 6th 2-4pm"},{"lineNumber":4,"author":{"gitId":"yeoutzer"},"content":"todo join sports club"},{"lineNumber":5,"author":{"gitId":"yeoutzer"},"content":"todo borrow book"},{"lineNumber":6,"author":{"gitId":"yeoutzer"},"content":"done 1"},{"lineNumber":7,"author":{"gitId":"yeoutzer"},"content":"done 4"},{"lineNumber":8,"author":{"gitId":"yeoutzer"},"content":"list"},{"lineNumber":9,"author":{"gitId":"yeoutzer"},"content":"deadline return book /by Sunday"},{"lineNumber":10,"author":{"gitId":"yeoutzer"},"content":"event project meeting /at Mon 2-4pm"},{"lineNumber":11,"author":{"gitId":"yeoutzer"},"content":"deadline do homework /by no idea :-p"},{"lineNumber":12,"author":{"gitId":"yeoutzer"},"content":"bye"}],"authorContributionMap":{"yeoutzer":12}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF"},{"lineNumber":2,"author":{"gitId":"-"},"content":""},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin"},{"lineNumber":5,"author":{"gitId":"-"},"content":""},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run"},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT"},{"lineNumber":8,"author":{"gitId":"-"},"content":""},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder"},{"lineNumber":10,"author":{"gitId":"-"},"content":"javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\*.java"},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 ("},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1"},{"lineNumber":14,"author":{"gitId":"-"},"content":")"},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0"},{"lineNumber":16,"author":{"gitId":"-"},"content":""},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"},{"lineNumber":18,"author":{"gitId":"-"},"content":"java -classpath ..\\bin Duke \u003c input.txt \u003e ACTUAL.TXT"},{"lineNumber":19,"author":{"gitId":"-"},"content":""},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM compare the output to the expected output"},{"lineNumber":21,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT"},{"lineNumber":22,"author":{"gitId":"yeoutzer"},"content":""},{"lineNumber":23,"author":{"gitId":"yeoutzer"},"content":"REM add a timeout to see file comparison result"},{"lineNumber":24,"author":{"gitId":"yeoutzer"},"content":"timeout /t 10"}],"authorContributionMap":{"yeoutzer":3,"-":21}}]
