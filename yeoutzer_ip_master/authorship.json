[{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027checkstyle\u0027"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027"},{"lineNumber":6,"author":{"gitId":"-"},"content":"}"},{"lineNumber":7,"author":{"gitId":"-"},"content":""},{"lineNumber":8,"author":{"gitId":"-"},"content":"repositories {"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    mavenCentral()"},{"lineNumber":10,"author":{"gitId":"-"},"content":"}"},{"lineNumber":11,"author":{"gitId":"-"},"content":""},{"lineNumber":12,"author":{"gitId":"-"},"content":"dependencies {"},{"lineNumber":13,"author":{"gitId":"yeoutzer"},"content":"    String javaFxVersion \u003d \u002711\u0027"},{"lineNumber":14,"author":{"gitId":"yeoutzer"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027"},{"lineNumber":15,"author":{"gitId":"yeoutzer"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"},{"lineNumber":16,"author":{"gitId":"yeoutzer"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"},{"lineNumber":17,"author":{"gitId":"yeoutzer"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027"},{"lineNumber":18,"author":{"gitId":"yeoutzer"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"},{"lineNumber":19,"author":{"gitId":"yeoutzer"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"},{"lineNumber":20,"author":{"gitId":"yeoutzer"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027"},{"lineNumber":21,"author":{"gitId":"yeoutzer"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"},{"lineNumber":22,"author":{"gitId":"yeoutzer"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"},{"lineNumber":23,"author":{"gitId":"yeoutzer"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027"},{"lineNumber":24,"author":{"gitId":"yeoutzer"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"},{"lineNumber":25,"author":{"gitId":"yeoutzer"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.5.0\u0027"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.5.0\u0027"},{"lineNumber":28,"author":{"gitId":"-"},"content":"}"},{"lineNumber":29,"author":{"gitId":"-"},"content":""},{"lineNumber":30,"author":{"gitId":"-"},"content":"application {"},{"lineNumber":31,"author":{"gitId":"yeoutzer"},"content":"    mainClassName \u003d \"duke.Launcher\""},{"lineNumber":32,"author":{"gitId":"yeoutzer"},"content":"    applicationDefaultJvmArgs \u003d [\u0027-ea\u0027]"},{"lineNumber":33,"author":{"gitId":"-"},"content":"}"},{"lineNumber":34,"author":{"gitId":"-"},"content":""},{"lineNumber":35,"author":{"gitId":"-"},"content":"shadowJar {"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    archiveBaseName \u003d \"duke\""},{"lineNumber":37,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null"},{"lineNumber":38,"author":{"gitId":"-"},"content":"}"},{"lineNumber":39,"author":{"gitId":"-"},"content":""},{"lineNumber":40,"author":{"gitId":"yeoutzer"},"content":""},{"lineNumber":41,"author":{"gitId":"-"},"content":"checkstyle {"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    toolVersion \u003d \u00278.29\u0027"},{"lineNumber":43,"author":{"gitId":"-"},"content":"}"},{"lineNumber":44,"author":{"gitId":"-"},"content":""},{"lineNumber":45,"author":{"gitId":"yeoutzer"},"content":""},{"lineNumber":46,"author":{"gitId":"-"},"content":"run{"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in"},{"lineNumber":48,"author":{"gitId":"-"},"content":"}"}],"authorContributionMap":{"yeoutzer":17,"-":31}},{"path":"docs/README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"# User Guide"},{"lineNumber":2,"author":{"gitId":"-"},"content":""},{"lineNumber":3,"author":{"gitId":"-"},"content":"## Features "},{"lineNumber":4,"author":{"gitId":"yeoutzer"},"content":"1. Add tasks to task list."},{"lineNumber":5,"author":{"gitId":"yeoutzer"},"content":"1. View all tasks in task list."},{"lineNumber":6,"author":{"gitId":"yeoutzer"},"content":"1. Mark completed tasks in task list."},{"lineNumber":7,"author":{"gitId":"yeoutzer"},"content":"1. Delete tasks from task list."},{"lineNumber":8,"author":{"gitId":"yeoutzer"},"content":"1. Exit the application."},{"lineNumber":9,"author":{"gitId":"-"},"content":""},{"lineNumber":10,"author":{"gitId":"yeoutzer"},"content":"## Adding task into task list"},{"lineNumber":11,"author":{"gitId":"yeoutzer"},"content":"To add todo, deadline or event tasks into task list."},{"lineNumber":12,"author":{"gitId":"-"},"content":""},{"lineNumber":13,"author":{"gitId":"yeoutzer"},"content":"### Usage"},{"lineNumber":14,"author":{"gitId":"-"},"content":""},{"lineNumber":15,"author":{"gitId":"yeoutzer"},"content":"#### `todo (task name)` - To add todo task into task list."},{"lineNumber":16,"author":{"gitId":"-"},"content":""},{"lineNumber":17,"author":{"gitId":"yeoutzer"},"content":"Example of usage: "},{"lineNumber":18,"author":{"gitId":"yeoutzer"},"content":""},{"lineNumber":19,"author":{"gitId":"yeoutzer"},"content":"```"},{"lineNumber":20,"author":{"gitId":"yeoutzer"},"content":"todo task1"},{"lineNumber":21,"author":{"gitId":"yeoutzer"},"content":"```"},{"lineNumber":22,"author":{"gitId":"yeoutzer"},"content":""},{"lineNumber":23,"author":{"gitId":"yeoutzer"},"content":"Expected outcome:"},{"lineNumber":24,"author":{"gitId":"yeoutzer"},"content":""},{"lineNumber":25,"author":{"gitId":"yeoutzer"},"content":"```"},{"lineNumber":26,"author":{"gitId":"yeoutzer"},"content":"Got it. I\u0027ve added this task:"},{"lineNumber":27,"author":{"gitId":"yeoutzer"},"content":"[T][] task1"},{"lineNumber":28,"author":{"gitId":"yeoutzer"},"content":"Now you have 1 tasks in the list."},{"lineNumber":29,"author":{"gitId":"yeoutzer"},"content":"```"},{"lineNumber":30,"author":{"gitId":"yeoutzer"},"content":""},{"lineNumber":31,"author":{"gitId":"yeoutzer"},"content":"#### `deadline (task name) /by (date in dd/mm/yyyy) (optional time in 24 hour format)` - To add deadline task into task list."},{"lineNumber":32,"author":{"gitId":"yeoutzer"},"content":""},{"lineNumber":33,"author":{"gitId":"yeoutzer"},"content":"Example of usage: "},{"lineNumber":34,"author":{"gitId":"yeoutzer"},"content":""},{"lineNumber":35,"author":{"gitId":"yeoutzer"},"content":"```"},{"lineNumber":36,"author":{"gitId":"yeoutzer"},"content":"deadline task2 /by 20/02/2020 1400"},{"lineNumber":37,"author":{"gitId":"yeoutzer"},"content":"```"},{"lineNumber":38,"author":{"gitId":"yeoutzer"},"content":""},{"lineNumber":39,"author":{"gitId":"yeoutzer"},"content":"Expected outcome:"},{"lineNumber":40,"author":{"gitId":"yeoutzer"},"content":""},{"lineNumber":41,"author":{"gitId":"yeoutzer"},"content":"```"},{"lineNumber":42,"author":{"gitId":"yeoutzer"},"content":"Got it. I\u0027ve added this task:"},{"lineNumber":43,"author":{"gitId":"yeoutzer"},"content":"[D][] task2 (by: 20 Feb 2020 02:00 PM)"},{"lineNumber":44,"author":{"gitId":"yeoutzer"},"content":"Now you have 2 tasks in the list."},{"lineNumber":45,"author":{"gitId":"yeoutzer"},"content":"```"},{"lineNumber":46,"author":{"gitId":"yeoutzer"},"content":""},{"lineNumber":47,"author":{"gitId":"yeoutzer"},"content":"#### `event (task name) /at (date in dd/mm/yyyy) (optional starting time in 24 hour format) (optional ending time in 24 hour format)` - To add event task into task list."},{"lineNumber":48,"author":{"gitId":"yeoutzer"},"content":""},{"lineNumber":49,"author":{"gitId":"yeoutzer"},"content":"Example of usage: "},{"lineNumber":50,"author":{"gitId":"yeoutzer"},"content":""},{"lineNumber":51,"author":{"gitId":"yeoutzer"},"content":"```"},{"lineNumber":52,"author":{"gitId":"yeoutzer"},"content":"event task3 /at 20/02/2020 1400 1500"},{"lineNumber":53,"author":{"gitId":"yeoutzer"},"content":"```"},{"lineNumber":54,"author":{"gitId":"yeoutzer"},"content":""},{"lineNumber":55,"author":{"gitId":"yeoutzer"},"content":"Expected outcome:"},{"lineNumber":56,"author":{"gitId":"yeoutzer"},"content":""},{"lineNumber":57,"author":{"gitId":"yeoutzer"},"content":"```"},{"lineNumber":58,"author":{"gitId":"yeoutzer"},"content":"Got it. I\u0027ve added this task:"},{"lineNumber":59,"author":{"gitId":"yeoutzer"},"content":"[E][] task3 (at: 20 Feb 2020 02:00 PM-03:00 PM)"},{"lineNumber":60,"author":{"gitId":"yeoutzer"},"content":"Now you have 3 tasks in the list."},{"lineNumber":61,"author":{"gitId":"yeoutzer"},"content":"```"},{"lineNumber":62,"author":{"gitId":"yeoutzer"},"content":""},{"lineNumber":63,"author":{"gitId":"yeoutzer"},"content":"## Viewing all tasks in task list."},{"lineNumber":64,"author":{"gitId":"yeoutzer"},"content":""},{"lineNumber":65,"author":{"gitId":"yeoutzer"},"content":"### Usage"},{"lineNumber":66,"author":{"gitId":"yeoutzer"},"content":""},{"lineNumber":67,"author":{"gitId":"yeoutzer"},"content":"#### `list` - To list and view all tasks in task list."},{"lineNumber":68,"author":{"gitId":"yeoutzer"},"content":""},{"lineNumber":69,"author":{"gitId":"yeoutzer"},"content":"Example of usage: "},{"lineNumber":70,"author":{"gitId":"yeoutzer"},"content":""},{"lineNumber":71,"author":{"gitId":"yeoutzer"},"content":"```"},{"lineNumber":72,"author":{"gitId":"yeoutzer"},"content":"list"},{"lineNumber":73,"author":{"gitId":"yeoutzer"},"content":"```"},{"lineNumber":74,"author":{"gitId":"yeoutzer"},"content":""},{"lineNumber":75,"author":{"gitId":"yeoutzer"},"content":"Expected outcome:"},{"lineNumber":76,"author":{"gitId":"yeoutzer"},"content":""},{"lineNumber":77,"author":{"gitId":"yeoutzer"},"content":"```"},{"lineNumber":78,"author":{"gitId":"yeoutzer"},"content":"Here are the tasks in your list:"},{"lineNumber":79,"author":{"gitId":"yeoutzer"},"content":"1.[T][] task1"},{"lineNumber":80,"author":{"gitId":"yeoutzer"},"content":"2.[D][] task2 (at: 20 Feb 2020 02:00 PM)"},{"lineNumber":81,"author":{"gitId":"yeoutzer"},"content":"3.[E][] task3 (at: 20 Feb 2020 02:00 PM-03:00 PM)"},{"lineNumber":82,"author":{"gitId":"yeoutzer"},"content":"```"},{"lineNumber":83,"author":{"gitId":"yeoutzer"},"content":""},{"lineNumber":84,"author":{"gitId":"yeoutzer"},"content":"## Marking completed task in task list."},{"lineNumber":85,"author":{"gitId":"yeoutzer"},"content":""},{"lineNumber":86,"author":{"gitId":"yeoutzer"},"content":"### Usage"},{"lineNumber":87,"author":{"gitId":"yeoutzer"},"content":""},{"lineNumber":88,"author":{"gitId":"yeoutzer"},"content":"#### `done (task number)` - To mark task as completed in task list."},{"lineNumber":89,"author":{"gitId":"yeoutzer"},"content":""},{"lineNumber":90,"author":{"gitId":"yeoutzer"},"content":"Example of usage: "},{"lineNumber":91,"author":{"gitId":"yeoutzer"},"content":""},{"lineNumber":92,"author":{"gitId":"yeoutzer"},"content":"```"},{"lineNumber":93,"author":{"gitId":"yeoutzer"},"content":"done 1"},{"lineNumber":94,"author":{"gitId":"yeoutzer"},"content":"```"},{"lineNumber":95,"author":{"gitId":"yeoutzer"},"content":""},{"lineNumber":96,"author":{"gitId":"yeoutzer"},"content":"Expected outcome:"},{"lineNumber":97,"author":{"gitId":"yeoutzer"},"content":""},{"lineNumber":98,"author":{"gitId":"yeoutzer"},"content":"```"},{"lineNumber":99,"author":{"gitId":"yeoutzer"},"content":"Nice! I\u0027ve marked this task as done:"},{"lineNumber":100,"author":{"gitId":"yeoutzer"},"content":"[T][X] task1"},{"lineNumber":101,"author":{"gitId":"yeoutzer"},"content":"```"},{"lineNumber":102,"author":{"gitId":"yeoutzer"},"content":""},{"lineNumber":103,"author":{"gitId":"yeoutzer"},"content":"## Deleting tasks from task list."},{"lineNumber":104,"author":{"gitId":"yeoutzer"},"content":""},{"lineNumber":105,"author":{"gitId":"yeoutzer"},"content":"### Usage"},{"lineNumber":106,"author":{"gitId":"yeoutzer"},"content":""},{"lineNumber":107,"author":{"gitId":"yeoutzer"},"content":"#### `delete (task number)` - To delete task from task list."},{"lineNumber":108,"author":{"gitId":"yeoutzer"},"content":""},{"lineNumber":109,"author":{"gitId":"yeoutzer"},"content":"Example of usage: "},{"lineNumber":110,"author":{"gitId":"yeoutzer"},"content":""},{"lineNumber":111,"author":{"gitId":"yeoutzer"},"content":"```"},{"lineNumber":112,"author":{"gitId":"yeoutzer"},"content":"delete 2"},{"lineNumber":113,"author":{"gitId":"yeoutzer"},"content":"```"},{"lineNumber":114,"author":{"gitId":"yeoutzer"},"content":""},{"lineNumber":115,"author":{"gitId":"yeoutzer"},"content":"Expected outcome:"},{"lineNumber":116,"author":{"gitId":"yeoutzer"},"content":""},{"lineNumber":117,"author":{"gitId":"yeoutzer"},"content":"```"},{"lineNumber":118,"author":{"gitId":"yeoutzer"},"content":"Noted. I\u0027ve removed this task:"},{"lineNumber":119,"author":{"gitId":"yeoutzer"},"content":"[D][] task2 (at: 20 Feb 2020 02:00 PM)"},{"lineNumber":120,"author":{"gitId":"yeoutzer"},"content":"Now you have 2 tasks in the list."},{"lineNumber":121,"author":{"gitId":"yeoutzer"},"content":"```"},{"lineNumber":122,"author":{"gitId":"yeoutzer"},"content":""},{"lineNumber":123,"author":{"gitId":"yeoutzer"},"content":"## Exiting from application."},{"lineNumber":124,"author":{"gitId":"yeoutzer"},"content":""},{"lineNumber":125,"author":{"gitId":"yeoutzer"},"content":"### Usage"},{"lineNumber":126,"author":{"gitId":"yeoutzer"},"content":""},{"lineNumber":127,"author":{"gitId":"yeoutzer"},"content":"#### `bye` - To exit from the application."},{"lineNumber":128,"author":{"gitId":"-"},"content":""},{"lineNumber":129,"author":{"gitId":"-"},"content":"Example of usage: "},{"lineNumber":130,"author":{"gitId":"-"},"content":""},{"lineNumber":131,"author":{"gitId":"yeoutzer"},"content":"```"},{"lineNumber":132,"author":{"gitId":"yeoutzer"},"content":"bye"},{"lineNumber":133,"author":{"gitId":"yeoutzer"},"content":"```"},{"lineNumber":134,"author":{"gitId":"-"},"content":""},{"lineNumber":135,"author":{"gitId":"-"},"content":"Expected outcome:"},{"lineNumber":136,"author":{"gitId":"-"},"content":""},{"lineNumber":137,"author":{"gitId":"yeoutzer"},"content":"```"},{"lineNumber":138,"author":{"gitId":"yeoutzer"},"content":"Bye. Hope to see you again soon!"},{"lineNumber":139,"author":{"gitId":"yeoutzer"},"content":"```"}],"authorContributionMap":{"yeoutzer":126,"-":13}},{"path":"src/main/java/duke/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yeoutzer"},"content":"package duke;"},{"lineNumber":2,"author":{"gitId":"yeoutzer"},"content":""},{"lineNumber":3,"author":{"gitId":"yeoutzer"},"content":"import java.io.FileNotFoundException;"},{"lineNumber":4,"author":{"gitId":"yeoutzer"},"content":"import java.io.IOException;"},{"lineNumber":5,"author":{"gitId":"yeoutzer"},"content":"import java.time.format.DateTimeParseException;"},{"lineNumber":6,"author":{"gitId":"yeoutzer"},"content":""},{"lineNumber":7,"author":{"gitId":"yeoutzer"},"content":"import duke.commands.Command;"},{"lineNumber":8,"author":{"gitId":"yeoutzer"},"content":"import duke.exceptions.DukeException;"},{"lineNumber":9,"author":{"gitId":"yeoutzer"},"content":"import duke.exceptions.SaveFileInvalidFormatException;"},{"lineNumber":10,"author":{"gitId":"yeoutzer"},"content":"import duke.parser.Parser;"},{"lineNumber":11,"author":{"gitId":"yeoutzer"},"content":"import duke.storage.Storage;"},{"lineNumber":12,"author":{"gitId":"yeoutzer"},"content":"import duke.tasks.TaskList;"},{"lineNumber":13,"author":{"gitId":"yeoutzer"},"content":"import duke.ui.Ui;"},{"lineNumber":14,"author":{"gitId":"yeoutzer"},"content":""},{"lineNumber":15,"author":{"gitId":"yeoutzer"},"content":""},{"lineNumber":16,"author":{"gitId":"yeoutzer"},"content":""},{"lineNumber":17,"author":{"gitId":"yeoutzer"},"content":"/**"},{"lineNumber":18,"author":{"gitId":"yeoutzer"},"content":" * This class processes command line inputs and edit list of task."},{"lineNumber":19,"author":{"gitId":"yeoutzer"},"content":" */"},{"lineNumber":20,"author":{"gitId":"-"},"content":"public class Duke {"},{"lineNumber":21,"author":{"gitId":"yeoutzer"},"content":"    private Storage storage;"},{"lineNumber":22,"author":{"gitId":"yeoutzer"},"content":"    private TaskList tasks;"},{"lineNumber":23,"author":{"gitId":"yeoutzer"},"content":"    private Ui ui;"},{"lineNumber":24,"author":{"gitId":"yeoutzer"},"content":""},{"lineNumber":25,"author":{"gitId":"yeoutzer"},"content":"    /**"},{"lineNumber":26,"author":{"gitId":"yeoutzer"},"content":"     * Constructs a Duke with specified save file location."},{"lineNumber":27,"author":{"gitId":"yeoutzer"},"content":"     *"},{"lineNumber":28,"author":{"gitId":"yeoutzer"},"content":"     * @param filePath File path of the save file."},{"lineNumber":29,"author":{"gitId":"yeoutzer"},"content":"     */"},{"lineNumber":30,"author":{"gitId":"yeoutzer"},"content":"    public Duke(String filePath) {"},{"lineNumber":31,"author":{"gitId":"yeoutzer"},"content":"        try {"},{"lineNumber":32,"author":{"gitId":"yeoutzer"},"content":"            ui \u003d new Ui();"},{"lineNumber":33,"author":{"gitId":"yeoutzer"},"content":"            storage \u003d new Storage(filePath);"},{"lineNumber":34,"author":{"gitId":"yeoutzer"},"content":"            storage.initialize();"},{"lineNumber":35,"author":{"gitId":"yeoutzer"},"content":"            tasks \u003d new TaskList(storage.load());"},{"lineNumber":36,"author":{"gitId":"yeoutzer"},"content":"        } catch (FileNotFoundException e) {"},{"lineNumber":37,"author":{"gitId":"yeoutzer"},"content":"            ui.showFileNotFound();"},{"lineNumber":38,"author":{"gitId":"yeoutzer"},"content":"            System.exit(1);"},{"lineNumber":39,"author":{"gitId":"yeoutzer"},"content":"        } catch (SaveFileInvalidFormatException e) {"},{"lineNumber":40,"author":{"gitId":"yeoutzer"},"content":"            ui.showInvalidSaveFileFormat();"},{"lineNumber":41,"author":{"gitId":"yeoutzer"},"content":"            System.exit(1);"},{"lineNumber":42,"author":{"gitId":"yeoutzer"},"content":"        } catch (DateTimeParseException e) {"},{"lineNumber":43,"author":{"gitId":"yeoutzer"},"content":"            ui.showInvalidSaveFileDateTimeFormat();"},{"lineNumber":44,"author":{"gitId":"yeoutzer"},"content":"            System.exit(1);"},{"lineNumber":45,"author":{"gitId":"yeoutzer"},"content":"        } catch (IOException e) {"},{"lineNumber":46,"author":{"gitId":"yeoutzer"},"content":"            ui.showFileCreationError();"},{"lineNumber":47,"author":{"gitId":"yeoutzer"},"content":"            System.exit(1);"},{"lineNumber":48,"author":{"gitId":"yeoutzer"},"content":"        } catch (NumberFormatException e) {"},{"lineNumber":49,"author":{"gitId":"yeoutzer"},"content":"            ui.showInvalidSaveFileDurationFormat();"},{"lineNumber":50,"author":{"gitId":"yeoutzer"},"content":"            System.exit(1);"},{"lineNumber":51,"author":{"gitId":"yeoutzer"},"content":"        }"},{"lineNumber":52,"author":{"gitId":"yeoutzer"},"content":"    }"},{"lineNumber":53,"author":{"gitId":"yeoutzer"},"content":""},{"lineNumber":54,"author":{"gitId":"yeoutzer"},"content":"    /** Returns a response message according to the command given."},{"lineNumber":55,"author":{"gitId":"yeoutzer"},"content":"     *"},{"lineNumber":56,"author":{"gitId":"yeoutzer"},"content":"     * @param fullCommand Command given to Duke bot."},{"lineNumber":57,"author":{"gitId":"yeoutzer"},"content":"     * @return Message string according to the command given."},{"lineNumber":58,"author":{"gitId":"yeoutzer"},"content":"     */"},{"lineNumber":59,"author":{"gitId":"yeoutzer"},"content":"    public String getResponse(String fullCommand) {"},{"lineNumber":60,"author":{"gitId":"yeoutzer"},"content":"        try {"},{"lineNumber":61,"author":{"gitId":"yeoutzer"},"content":"            Command command \u003d Parser.parse(fullCommand);"},{"lineNumber":62,"author":{"gitId":"yeoutzer"},"content":"            return command.execute(tasks, ui, storage);"},{"lineNumber":63,"author":{"gitId":"yeoutzer"},"content":"        } catch (DukeException e) {"},{"lineNumber":64,"author":{"gitId":"yeoutzer"},"content":"            return e.getMessage();"},{"lineNumber":65,"author":{"gitId":"yeoutzer"},"content":"        } catch (IOException e) {"},{"lineNumber":66,"author":{"gitId":"yeoutzer"},"content":"            return ui.getIoErrorString();"},{"lineNumber":67,"author":{"gitId":"yeoutzer"},"content":"        } catch (StringIndexOutOfBoundsException e) {"},{"lineNumber":68,"author":{"gitId":"yeoutzer"},"content":"            return ui.getOutOfBoundsErrorString();"},{"lineNumber":69,"author":{"gitId":"yeoutzer"},"content":"        } catch (DateTimeParseException e) {"},{"lineNumber":70,"author":{"gitId":"yeoutzer"},"content":"            return ui.getDateTimeParseErrorString();"},{"lineNumber":71,"author":{"gitId":"yeoutzer"},"content":"        } catch (NumberFormatException e) {"},{"lineNumber":72,"author":{"gitId":"yeoutzer"},"content":"            return ui.getWrongDurationFormatString();"},{"lineNumber":73,"author":{"gitId":"yeoutzer"},"content":"        }"},{"lineNumber":74,"author":{"gitId":"yeoutzer"},"content":"    }"},{"lineNumber":75,"author":{"gitId":"-"},"content":"}"}],"authorContributionMap":{"yeoutzer":73,"-":2}},{"path":"src/main/java/duke/Launcher.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yeoutzer"},"content":"package duke;"},{"lineNumber":2,"author":{"gitId":"yeoutzer"},"content":""},{"lineNumber":3,"author":{"gitId":"yeoutzer"},"content":"import duke.fxml.Main;"},{"lineNumber":4,"author":{"gitId":"yeoutzer"},"content":"import javafx.application.Application;"},{"lineNumber":5,"author":{"gitId":"yeoutzer"},"content":""},{"lineNumber":6,"author":{"gitId":"yeoutzer"},"content":"/**"},{"lineNumber":7,"author":{"gitId":"yeoutzer"},"content":" * A launcher class to start Duke program."},{"lineNumber":8,"author":{"gitId":"yeoutzer"},"content":" */"},{"lineNumber":9,"author":{"gitId":"yeoutzer"},"content":"public class Launcher {"},{"lineNumber":10,"author":{"gitId":"yeoutzer"},"content":"    /**"},{"lineNumber":11,"author":{"gitId":"yeoutzer"},"content":"     * Main method to start the Duke program."},{"lineNumber":12,"author":{"gitId":"yeoutzer"},"content":"     *"},{"lineNumber":13,"author":{"gitId":"yeoutzer"},"content":"     * @param args"},{"lineNumber":14,"author":{"gitId":"yeoutzer"},"content":"     */"},{"lineNumber":15,"author":{"gitId":"yeoutzer"},"content":"    public static void main(String[] args) {"},{"lineNumber":16,"author":{"gitId":"yeoutzer"},"content":"        Application.launch(Main.class, args);"},{"lineNumber":17,"author":{"gitId":"yeoutzer"},"content":"    }"},{"lineNumber":18,"author":{"gitId":"yeoutzer"},"content":"}"}],"authorContributionMap":{"yeoutzer":18}},{"path":"src/main/java/duke/commands/AddCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yeoutzer"},"content":"package duke.commands;"},{"lineNumber":2,"author":{"gitId":"yeoutzer"},"content":""},{"lineNumber":3,"author":{"gitId":"yeoutzer"},"content":"import java.io.IOException;"},{"lineNumber":4,"author":{"gitId":"yeoutzer"},"content":"import java.time.LocalDate;"},{"lineNumber":5,"author":{"gitId":"yeoutzer"},"content":"import java.time.LocalTime;"},{"lineNumber":6,"author":{"gitId":"yeoutzer"},"content":"import java.time.format.DateTimeFormatter;"},{"lineNumber":7,"author":{"gitId":"yeoutzer"},"content":"import java.time.format.DateTimeParseException;"},{"lineNumber":8,"author":{"gitId":"yeoutzer"},"content":""},{"lineNumber":9,"author":{"gitId":"yeoutzer"},"content":"import duke.exceptions.CommandNotValidException;"},{"lineNumber":10,"author":{"gitId":"yeoutzer"},"content":"import duke.exceptions.DateTimeNotFoundException;"},{"lineNumber":11,"author":{"gitId":"yeoutzer"},"content":"import duke.exceptions.DescriptionNotFoundException;"},{"lineNumber":12,"author":{"gitId":"yeoutzer"},"content":"import duke.exceptions.DukeException;"},{"lineNumber":13,"author":{"gitId":"yeoutzer"},"content":"import duke.exceptions.DurationNotFoundException;"},{"lineNumber":14,"author":{"gitId":"yeoutzer"},"content":"import duke.exceptions.TimeDurationInvalidException;"},{"lineNumber":15,"author":{"gitId":"yeoutzer"},"content":"import duke.storage.Storage;"},{"lineNumber":16,"author":{"gitId":"yeoutzer"},"content":"import duke.tasks.DeadlineTask;"},{"lineNumber":17,"author":{"gitId":"yeoutzer"},"content":"import duke.tasks.EventTask;"},{"lineNumber":18,"author":{"gitId":"yeoutzer"},"content":"import duke.tasks.FixedDurationTask;"},{"lineNumber":19,"author":{"gitId":"yeoutzer"},"content":"import duke.tasks.Task;"},{"lineNumber":20,"author":{"gitId":"yeoutzer"},"content":"import duke.tasks.TaskList;"},{"lineNumber":21,"author":{"gitId":"yeoutzer"},"content":"import duke.tasks.TodoTask;"},{"lineNumber":22,"author":{"gitId":"yeoutzer"},"content":"import duke.ui.Ui;"},{"lineNumber":23,"author":{"gitId":"yeoutzer"},"content":""},{"lineNumber":24,"author":{"gitId":"yeoutzer"},"content":"/**"},{"lineNumber":25,"author":{"gitId":"yeoutzer"},"content":" * Responsible for dealing with the addition of tasks."},{"lineNumber":26,"author":{"gitId":"yeoutzer"},"content":" */"},{"lineNumber":27,"author":{"gitId":"yeoutzer"},"content":"public class AddCommand extends Command {"},{"lineNumber":28,"author":{"gitId":"yeoutzer"},"content":"    private String fullCommand;"},{"lineNumber":29,"author":{"gitId":"yeoutzer"},"content":"    private String[] checkCommands;"},{"lineNumber":30,"author":{"gitId":"yeoutzer"},"content":""},{"lineNumber":31,"author":{"gitId":"yeoutzer"},"content":"    /**"},{"lineNumber":32,"author":{"gitId":"yeoutzer"},"content":"     * Constructs a AddCommand with the given full command line."},{"lineNumber":33,"author":{"gitId":"yeoutzer"},"content":"     *"},{"lineNumber":34,"author":{"gitId":"yeoutzer"},"content":"     * @param fullCommand Full command line input."},{"lineNumber":35,"author":{"gitId":"yeoutzer"},"content":"     */"},{"lineNumber":36,"author":{"gitId":"yeoutzer"},"content":"    public AddCommand(String fullCommand) {"},{"lineNumber":37,"author":{"gitId":"yeoutzer"},"content":"        this.fullCommand \u003d fullCommand;"},{"lineNumber":38,"author":{"gitId":"yeoutzer"},"content":"        this.checkCommands \u003d fullCommand.split(\" \");"},{"lineNumber":39,"author":{"gitId":"yeoutzer"},"content":"    }"},{"lineNumber":40,"author":{"gitId":"yeoutzer"},"content":""},{"lineNumber":41,"author":{"gitId":"yeoutzer"},"content":"    /**"},{"lineNumber":42,"author":{"gitId":"yeoutzer"},"content":"     * Returns the string to indicate successful addition of task."},{"lineNumber":43,"author":{"gitId":"yeoutzer"},"content":"     * Adds the specified task into the TaskList given by command line"},{"lineNumber":44,"author":{"gitId":"yeoutzer"},"content":"     * and save changes into the save file."},{"lineNumber":45,"author":{"gitId":"yeoutzer"},"content":"     *"},{"lineNumber":46,"author":{"gitId":"yeoutzer"},"content":"     * @param tasks TaskList to add task into."},{"lineNumber":47,"author":{"gitId":"yeoutzer"},"content":"     * @param ui Ui for system outputs."},{"lineNumber":48,"author":{"gitId":"yeoutzer"},"content":"     * @param storage Storage for saving contents into file."},{"lineNumber":49,"author":{"gitId":"yeoutzer"},"content":"     * @return Successful addition of task string."},{"lineNumber":50,"author":{"gitId":"yeoutzer"},"content":"     * @throws DukeException If error happens while adding task."},{"lineNumber":51,"author":{"gitId":"yeoutzer"},"content":"     * @throws DateTimeParseException If date and time format in command is incorrect."},{"lineNumber":52,"author":{"gitId":"yeoutzer"},"content":"     * @throws StringIndexOutOfBoundsException If format in command is incorrect."},{"lineNumber":53,"author":{"gitId":"yeoutzer"},"content":"     * @throws IOException If error happens while saving contents into file."},{"lineNumber":54,"author":{"gitId":"yeoutzer"},"content":"     */"},{"lineNumber":55,"author":{"gitId":"yeoutzer"},"content":"    @Override"},{"lineNumber":56,"author":{"gitId":"yeoutzer"},"content":"    public String execute(TaskList tasks, Ui ui, Storage storage) throws DukeException,"},{"lineNumber":57,"author":{"gitId":"yeoutzer"},"content":"            DateTimeParseException, StringIndexOutOfBoundsException, IOException,"},{"lineNumber":58,"author":{"gitId":"yeoutzer"},"content":"            NumberFormatException {"},{"lineNumber":59,"author":{"gitId":"yeoutzer"},"content":""},{"lineNumber":60,"author":{"gitId":"yeoutzer"},"content":"        Task task \u003d createTasks();"},{"lineNumber":61,"author":{"gitId":"yeoutzer"},"content":"        tasks.add(task);"},{"lineNumber":62,"author":{"gitId":"yeoutzer"},"content":"        storage.save(tasks);"},{"lineNumber":63,"author":{"gitId":"yeoutzer"},"content":"        return ui.getAddTaskString(tasks, task);"},{"lineNumber":64,"author":{"gitId":"yeoutzer"},"content":"    }"},{"lineNumber":65,"author":{"gitId":"yeoutzer"},"content":""},{"lineNumber":66,"author":{"gitId":"yeoutzer"},"content":"    private Task createTasks() throws DukeException,"},{"lineNumber":67,"author":{"gitId":"yeoutzer"},"content":"            DateTimeParseException, StringIndexOutOfBoundsException {"},{"lineNumber":68,"author":{"gitId":"yeoutzer"},"content":"        if (isValidCommand()) {"},{"lineNumber":69,"author":{"gitId":"yeoutzer"},"content":"            assert checkCommands.length \u003e 0;"},{"lineNumber":70,"author":{"gitId":"yeoutzer"},"content":"            if (hasNoDescription()) {"},{"lineNumber":71,"author":{"gitId":"yeoutzer"},"content":"                throw new DescriptionNotFoundException();"},{"lineNumber":72,"author":{"gitId":"yeoutzer"},"content":"            }"},{"lineNumber":73,"author":{"gitId":"yeoutzer"},"content":"            if (isTodoCommand()) {"},{"lineNumber":74,"author":{"gitId":"yeoutzer"},"content":"                return createTodoTask();"},{"lineNumber":75,"author":{"gitId":"yeoutzer"},"content":"            } else if (isDeadlineCommand()) {"},{"lineNumber":76,"author":{"gitId":"yeoutzer"},"content":"                return createDeadlineTask();"},{"lineNumber":77,"author":{"gitId":"yeoutzer"},"content":"            } else if (isEventCommand()) {"},{"lineNumber":78,"author":{"gitId":"yeoutzer"},"content":"                return createEventTask();"},{"lineNumber":79,"author":{"gitId":"yeoutzer"},"content":"            } else {"},{"lineNumber":80,"author":{"gitId":"yeoutzer"},"content":"                return createFixedDurationTask();"},{"lineNumber":81,"author":{"gitId":"yeoutzer"},"content":"            }"},{"lineNumber":82,"author":{"gitId":"yeoutzer"},"content":"        } else {"},{"lineNumber":83,"author":{"gitId":"yeoutzer"},"content":"            throw new CommandNotValidException();"},{"lineNumber":84,"author":{"gitId":"yeoutzer"},"content":"        }"},{"lineNumber":85,"author":{"gitId":"yeoutzer"},"content":"    }"},{"lineNumber":86,"author":{"gitId":"yeoutzer"},"content":""},{"lineNumber":87,"author":{"gitId":"yeoutzer"},"content":"    private boolean isValidCommand() {"},{"lineNumber":88,"author":{"gitId":"yeoutzer"},"content":"        return checkCommands[0].equals(\"todo\") || checkCommands[0].equals(\"deadline\")"},{"lineNumber":89,"author":{"gitId":"yeoutzer"},"content":"                || checkCommands[0].equals(\"event\") || checkCommands[0].equals(\"duration\");"},{"lineNumber":90,"author":{"gitId":"yeoutzer"},"content":"    }"},{"lineNumber":91,"author":{"gitId":"yeoutzer"},"content":""},{"lineNumber":92,"author":{"gitId":"yeoutzer"},"content":"    private boolean hasNoDescription() {"},{"lineNumber":93,"author":{"gitId":"yeoutzer"},"content":"        return checkCommands.length \u003d\u003d 1;"},{"lineNumber":94,"author":{"gitId":"yeoutzer"},"content":"    }"},{"lineNumber":95,"author":{"gitId":"yeoutzer"},"content":""},{"lineNumber":96,"author":{"gitId":"yeoutzer"},"content":"    private boolean hasNoDescription(String description) {"},{"lineNumber":97,"author":{"gitId":"yeoutzer"},"content":"        return description.isEmpty();"},{"lineNumber":98,"author":{"gitId":"yeoutzer"},"content":"    }"},{"lineNumber":99,"author":{"gitId":"yeoutzer"},"content":""},{"lineNumber":100,"author":{"gitId":"yeoutzer"},"content":"    private boolean isTodoCommand() {"},{"lineNumber":101,"author":{"gitId":"yeoutzer"},"content":"        return checkCommands[0].equals(\"todo\");"},{"lineNumber":102,"author":{"gitId":"yeoutzer"},"content":"    }"},{"lineNumber":103,"author":{"gitId":"yeoutzer"},"content":""},{"lineNumber":104,"author":{"gitId":"yeoutzer"},"content":"    private boolean isDeadlineCommand() {"},{"lineNumber":105,"author":{"gitId":"yeoutzer"},"content":"        return checkCommands[0].equals(\"deadline\");"},{"lineNumber":106,"author":{"gitId":"yeoutzer"},"content":"    }"},{"lineNumber":107,"author":{"gitId":"yeoutzer"},"content":""},{"lineNumber":108,"author":{"gitId":"yeoutzer"},"content":"    private boolean isEventCommand() {"},{"lineNumber":109,"author":{"gitId":"yeoutzer"},"content":"        return checkCommands[0].equals(\"event\");"},{"lineNumber":110,"author":{"gitId":"yeoutzer"},"content":"    }"},{"lineNumber":111,"author":{"gitId":"yeoutzer"},"content":""},{"lineNumber":112,"author":{"gitId":"yeoutzer"},"content":"    private TodoTask createTodoTask() {"},{"lineNumber":113,"author":{"gitId":"yeoutzer"},"content":"        String description \u003d fullCommand.substring(5).trim();"},{"lineNumber":114,"author":{"gitId":"yeoutzer"},"content":"        return new TodoTask(description);"},{"lineNumber":115,"author":{"gitId":"yeoutzer"},"content":"    }"},{"lineNumber":116,"author":{"gitId":"yeoutzer"},"content":""},{"lineNumber":117,"author":{"gitId":"yeoutzer"},"content":"    private DeadlineTask createDeadlineTask() throws DukeException {"},{"lineNumber":118,"author":{"gitId":"yeoutzer"},"content":"        int timeIndex \u003d fullCommand.indexOf(\"/by\");"},{"lineNumber":119,"author":{"gitId":"yeoutzer"},"content":"        if (hasNoDateTime(timeIndex)) {"},{"lineNumber":120,"author":{"gitId":"yeoutzer"},"content":"            throw new DateTimeNotFoundException();"},{"lineNumber":121,"author":{"gitId":"yeoutzer"},"content":"        }"},{"lineNumber":122,"author":{"gitId":"yeoutzer"},"content":""},{"lineNumber":123,"author":{"gitId":"yeoutzer"},"content":"        String description \u003d fullCommand.substring(9, timeIndex).trim();"},{"lineNumber":124,"author":{"gitId":"yeoutzer"},"content":"        if (hasNoDescription(description)) {"},{"lineNumber":125,"author":{"gitId":"yeoutzer"},"content":"            throw new DescriptionNotFoundException();"},{"lineNumber":126,"author":{"gitId":"yeoutzer"},"content":"        }"},{"lineNumber":127,"author":{"gitId":"yeoutzer"},"content":""},{"lineNumber":128,"author":{"gitId":"yeoutzer"},"content":"        String dateTime \u003d fullCommand.substring(timeIndex + 3).trim();"},{"lineNumber":129,"author":{"gitId":"yeoutzer"},"content":"        if (hasNoDateTime(dateTime)) {"},{"lineNumber":130,"author":{"gitId":"yeoutzer"},"content":"            throw new DateTimeNotFoundException();"},{"lineNumber":131,"author":{"gitId":"yeoutzer"},"content":"        }"},{"lineNumber":132,"author":{"gitId":"yeoutzer"},"content":""},{"lineNumber":133,"author":{"gitId":"yeoutzer"},"content":"        String dateString \u003d dateTime.substring(0, 10);"},{"lineNumber":134,"author":{"gitId":"yeoutzer"},"content":"        LocalDate date \u003d LocalDate"},{"lineNumber":135,"author":{"gitId":"yeoutzer"},"content":"                .parse(dateString, DateTimeFormatter.ofPattern(\"dd/MM/yyyy\"));"},{"lineNumber":136,"author":{"gitId":"yeoutzer"},"content":"        String timeString \u003d dateTime.substring(10).trim();"},{"lineNumber":137,"author":{"gitId":"yeoutzer"},"content":"        if (timeString.isEmpty()) {"},{"lineNumber":138,"author":{"gitId":"yeoutzer"},"content":"            return new DeadlineTask(description, date);"},{"lineNumber":139,"author":{"gitId":"yeoutzer"},"content":"        } else {"},{"lineNumber":140,"author":{"gitId":"yeoutzer"},"content":"            return createDeadlineTaskWithTime(dateTime, description, date);"},{"lineNumber":141,"author":{"gitId":"yeoutzer"},"content":"        }"},{"lineNumber":142,"author":{"gitId":"yeoutzer"},"content":"    }"},{"lineNumber":143,"author":{"gitId":"yeoutzer"},"content":""},{"lineNumber":144,"author":{"gitId":"yeoutzer"},"content":"    private DeadlineTask createDeadlineTaskWithTime(String dateTime, String description, LocalDate date) {"},{"lineNumber":145,"author":{"gitId":"yeoutzer"},"content":"        LocalTime time \u003d LocalTime"},{"lineNumber":146,"author":{"gitId":"yeoutzer"},"content":"                .parse(dateTime.substring(10).trim(), DateTimeFormatter.ofPattern(\"HHmm\"));"},{"lineNumber":147,"author":{"gitId":"yeoutzer"},"content":"        return new DeadlineTask(description, date, time);"},{"lineNumber":148,"author":{"gitId":"yeoutzer"},"content":"    }"},{"lineNumber":149,"author":{"gitId":"yeoutzer"},"content":""},{"lineNumber":150,"author":{"gitId":"yeoutzer"},"content":"    private boolean hasNoDateTime(int timeIndex) {"},{"lineNumber":151,"author":{"gitId":"yeoutzer"},"content":"        return timeIndex \u003d\u003d -1;"},{"lineNumber":152,"author":{"gitId":"yeoutzer"},"content":"    }"},{"lineNumber":153,"author":{"gitId":"yeoutzer"},"content":""},{"lineNumber":154,"author":{"gitId":"yeoutzer"},"content":"    private boolean hasNoDateTime(String dateTime) {"},{"lineNumber":155,"author":{"gitId":"yeoutzer"},"content":"        return dateTime.isEmpty();"},{"lineNumber":156,"author":{"gitId":"yeoutzer"},"content":"    }"},{"lineNumber":157,"author":{"gitId":"yeoutzer"},"content":""},{"lineNumber":158,"author":{"gitId":"yeoutzer"},"content":""},{"lineNumber":159,"author":{"gitId":"yeoutzer"},"content":""},{"lineNumber":160,"author":{"gitId":"yeoutzer"},"content":"    private EventTask createEventTask() throws DukeException {"},{"lineNumber":161,"author":{"gitId":"yeoutzer"},"content":"        int timeIndex \u003d fullCommand.indexOf(\"/at\");"},{"lineNumber":162,"author":{"gitId":"yeoutzer"},"content":"        if (hasNoDateTime(timeIndex)) {"},{"lineNumber":163,"author":{"gitId":"yeoutzer"},"content":"            throw new DateTimeNotFoundException();"},{"lineNumber":164,"author":{"gitId":"yeoutzer"},"content":"        }"},{"lineNumber":165,"author":{"gitId":"yeoutzer"},"content":""},{"lineNumber":166,"author":{"gitId":"yeoutzer"},"content":"        String description \u003d fullCommand.substring(6, timeIndex).trim();"},{"lineNumber":167,"author":{"gitId":"yeoutzer"},"content":"        if (hasNoDescription(description)) {"},{"lineNumber":168,"author":{"gitId":"yeoutzer"},"content":"            throw new DescriptionNotFoundException();"},{"lineNumber":169,"author":{"gitId":"yeoutzer"},"content":"        }"},{"lineNumber":170,"author":{"gitId":"yeoutzer"},"content":""},{"lineNumber":171,"author":{"gitId":"yeoutzer"},"content":"        String dateTime \u003d fullCommand.substring(timeIndex + 3).trim();"},{"lineNumber":172,"author":{"gitId":"yeoutzer"},"content":"        if (hasNoDateTime(dateTime)) {"},{"lineNumber":173,"author":{"gitId":"yeoutzer"},"content":"            throw new DateTimeNotFoundException();"},{"lineNumber":174,"author":{"gitId":"yeoutzer"},"content":"        }"},{"lineNumber":175,"author":{"gitId":"yeoutzer"},"content":""},{"lineNumber":176,"author":{"gitId":"yeoutzer"},"content":"        String dateString \u003d dateTime.substring(0, 10);"},{"lineNumber":177,"author":{"gitId":"yeoutzer"},"content":"        LocalDate date \u003d LocalDate"},{"lineNumber":178,"author":{"gitId":"yeoutzer"},"content":"                .parse(dateString, DateTimeFormatter.ofPattern(\"dd/MM/yyyy\"));"},{"lineNumber":179,"author":{"gitId":"yeoutzer"},"content":"        String timeString \u003d dateTime.substring(10).trim();"},{"lineNumber":180,"author":{"gitId":"yeoutzer"},"content":"        if (hasNoTime(timeString)) {"},{"lineNumber":181,"author":{"gitId":"yeoutzer"},"content":"            return new EventTask(description, date);"},{"lineNumber":182,"author":{"gitId":"yeoutzer"},"content":"        } else {"},{"lineNumber":183,"author":{"gitId":"yeoutzer"},"content":"            return createEventTaskWithTime(timeString, description, date);"},{"lineNumber":184,"author":{"gitId":"yeoutzer"},"content":"        }"},{"lineNumber":185,"author":{"gitId":"yeoutzer"},"content":"    }"},{"lineNumber":186,"author":{"gitId":"yeoutzer"},"content":""},{"lineNumber":187,"author":{"gitId":"yeoutzer"},"content":"    private boolean hasNoTime(String timeString) {"},{"lineNumber":188,"author":{"gitId":"yeoutzer"},"content":"        return timeString.isEmpty();"},{"lineNumber":189,"author":{"gitId":"yeoutzer"},"content":"    }"},{"lineNumber":190,"author":{"gitId":"yeoutzer"},"content":""},{"lineNumber":191,"author":{"gitId":"yeoutzer"},"content":"    private EventTask createEventTaskWithTime(String timeString, String description, LocalDate date)"},{"lineNumber":192,"author":{"gitId":"yeoutzer"},"content":"            throws TimeDurationInvalidException {"},{"lineNumber":193,"author":{"gitId":"yeoutzer"},"content":"        String startTimeString \u003d timeString.substring(0, 4);"},{"lineNumber":194,"author":{"gitId":"yeoutzer"},"content":"        LocalTime startTime \u003d LocalTime"},{"lineNumber":195,"author":{"gitId":"yeoutzer"},"content":"                .parse(startTimeString, DateTimeFormatter.ofPattern(\"HHmm\"));"},{"lineNumber":196,"author":{"gitId":"yeoutzer"},"content":"        String endTimeString \u003d timeString.substring(4).trim();"},{"lineNumber":197,"author":{"gitId":"yeoutzer"},"content":"        if (endTimeString.isEmpty()) {"},{"lineNumber":198,"author":{"gitId":"yeoutzer"},"content":"            return createEventTaskWithStartTime(description, date, startTime);"},{"lineNumber":199,"author":{"gitId":"yeoutzer"},"content":"        } else {"},{"lineNumber":200,"author":{"gitId":"yeoutzer"},"content":"            return createEventTaskWithEndTime(description, endTimeString, date, startTime);"},{"lineNumber":201,"author":{"gitId":"yeoutzer"},"content":"        }"},{"lineNumber":202,"author":{"gitId":"yeoutzer"},"content":"    }"},{"lineNumber":203,"author":{"gitId":"yeoutzer"},"content":""},{"lineNumber":204,"author":{"gitId":"yeoutzer"},"content":"    private EventTask createEventTaskWithStartTime(String description, LocalDate date, LocalTime startTime) {"},{"lineNumber":205,"author":{"gitId":"yeoutzer"},"content":"        return new EventTask(description, date, startTime);"},{"lineNumber":206,"author":{"gitId":"yeoutzer"},"content":"    }"},{"lineNumber":207,"author":{"gitId":"yeoutzer"},"content":""},{"lineNumber":208,"author":{"gitId":"yeoutzer"},"content":"    private EventTask createEventTaskWithEndTime(String description,"},{"lineNumber":209,"author":{"gitId":"yeoutzer"},"content":"            String endTimeString, LocalDate date, LocalTime startTime) throws TimeDurationInvalidException {"},{"lineNumber":210,"author":{"gitId":"yeoutzer"},"content":"        LocalTime endTime \u003d LocalTime"},{"lineNumber":211,"author":{"gitId":"yeoutzer"},"content":"                .parse(endTimeString, DateTimeFormatter.ofPattern(\"HHmm\"));"},{"lineNumber":212,"author":{"gitId":"yeoutzer"},"content":"        if (endTime.compareTo(startTime) \u003c 0) {"},{"lineNumber":213,"author":{"gitId":"yeoutzer"},"content":"            throw new TimeDurationInvalidException();"},{"lineNumber":214,"author":{"gitId":"yeoutzer"},"content":"        }"},{"lineNumber":215,"author":{"gitId":"yeoutzer"},"content":"        return new EventTask(description, date, startTime, endTime);"},{"lineNumber":216,"author":{"gitId":"yeoutzer"},"content":"    }"},{"lineNumber":217,"author":{"gitId":"yeoutzer"},"content":""},{"lineNumber":218,"author":{"gitId":"yeoutzer"},"content":"    private FixedDurationTask createFixedDurationTask() throws DukeException, NumberFormatException {"},{"lineNumber":219,"author":{"gitId":"yeoutzer"},"content":"        int durationIndex \u003d fullCommand.indexOf(\"/within\");"},{"lineNumber":220,"author":{"gitId":"yeoutzer"},"content":"        if (hasNoDuration(durationIndex)) {"},{"lineNumber":221,"author":{"gitId":"yeoutzer"},"content":"            throw new DurationNotFoundException();"},{"lineNumber":222,"author":{"gitId":"yeoutzer"},"content":"        }"},{"lineNumber":223,"author":{"gitId":"yeoutzer"},"content":""},{"lineNumber":224,"author":{"gitId":"yeoutzer"},"content":"        String description \u003d fullCommand.substring(9, durationIndex).trim();"},{"lineNumber":225,"author":{"gitId":"yeoutzer"},"content":"        if (hasNoDescription(description)) {"},{"lineNumber":226,"author":{"gitId":"yeoutzer"},"content":"            throw new DescriptionNotFoundException();"},{"lineNumber":227,"author":{"gitId":"yeoutzer"},"content":"        }"},{"lineNumber":228,"author":{"gitId":"yeoutzer"},"content":""},{"lineNumber":229,"author":{"gitId":"yeoutzer"},"content":"        String durationString \u003d fullCommand.substring(durationIndex + 7).trim();"},{"lineNumber":230,"author":{"gitId":"yeoutzer"},"content":"        if (hasNoDuration(durationString)) {"},{"lineNumber":231,"author":{"gitId":"yeoutzer"},"content":"            throw new DurationNotFoundException();"},{"lineNumber":232,"author":{"gitId":"yeoutzer"},"content":"        }"},{"lineNumber":233,"author":{"gitId":"yeoutzer"},"content":""},{"lineNumber":234,"author":{"gitId":"yeoutzer"},"content":"        int duration \u003d Integer.parseInt(durationString);"},{"lineNumber":235,"author":{"gitId":"yeoutzer"},"content":"        return new FixedDurationTask(description, duration);"},{"lineNumber":236,"author":{"gitId":"yeoutzer"},"content":"    }"},{"lineNumber":237,"author":{"gitId":"yeoutzer"},"content":""},{"lineNumber":238,"author":{"gitId":"yeoutzer"},"content":"    private boolean hasNoDuration(int durationIndex) {"},{"lineNumber":239,"author":{"gitId":"yeoutzer"},"content":"        return durationIndex \u003d\u003d -1;"},{"lineNumber":240,"author":{"gitId":"yeoutzer"},"content":"    }"},{"lineNumber":241,"author":{"gitId":"yeoutzer"},"content":""},{"lineNumber":242,"author":{"gitId":"yeoutzer"},"content":"    private boolean hasNoDuration(String durationString) {"},{"lineNumber":243,"author":{"gitId":"yeoutzer"},"content":"        return durationString.isEmpty();"},{"lineNumber":244,"author":{"gitId":"yeoutzer"},"content":"    }"},{"lineNumber":245,"author":{"gitId":"yeoutzer"},"content":"}"}],"authorContributionMap":{"yeoutzer":245}},{"path":"src/main/java/duke/commands/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yeoutzer"},"content":"package duke.commands;"},{"lineNumber":2,"author":{"gitId":"yeoutzer"},"content":""},{"lineNumber":3,"author":{"gitId":"yeoutzer"},"content":"import java.io.IOException;"},{"lineNumber":4,"author":{"gitId":"yeoutzer"},"content":""},{"lineNumber":5,"author":{"gitId":"yeoutzer"},"content":"import duke.exceptions.DukeException;"},{"lineNumber":6,"author":{"gitId":"yeoutzer"},"content":"import duke.storage.Storage;"},{"lineNumber":7,"author":{"gitId":"yeoutzer"},"content":"import duke.tasks.TaskList;"},{"lineNumber":8,"author":{"gitId":"yeoutzer"},"content":"import duke.ui.Ui;"},{"lineNumber":9,"author":{"gitId":"yeoutzer"},"content":""},{"lineNumber":10,"author":{"gitId":"yeoutzer"},"content":"/**"},{"lineNumber":11,"author":{"gitId":"yeoutzer"},"content":" * Abstract class responsible for executing command line inputs."},{"lineNumber":12,"author":{"gitId":"yeoutzer"},"content":" */"},{"lineNumber":13,"author":{"gitId":"yeoutzer"},"content":"public abstract class Command {"},{"lineNumber":14,"author":{"gitId":"yeoutzer"},"content":"    /**"},{"lineNumber":15,"author":{"gitId":"yeoutzer"},"content":"     * Executes the command specified in the command line input and returns"},{"lineNumber":16,"author":{"gitId":"yeoutzer"},"content":"     * appropriate message string."},{"lineNumber":17,"author":{"gitId":"yeoutzer"},"content":"     *"},{"lineNumber":18,"author":{"gitId":"yeoutzer"},"content":"     * @param tasks TaskList containing tasks."},{"lineNumber":19,"author":{"gitId":"yeoutzer"},"content":"     * @param ui Ui for system outputs."},{"lineNumber":20,"author":{"gitId":"yeoutzer"},"content":"     * @param storage Storage for saving contents into file."},{"lineNumber":21,"author":{"gitId":"yeoutzer"},"content":"     * @return Message string."},{"lineNumber":22,"author":{"gitId":"yeoutzer"},"content":"     * @throws IOException If error happens while saving contents into save file."},{"lineNumber":23,"author":{"gitId":"yeoutzer"},"content":"     * @throws DukeException If error happens while executing command."},{"lineNumber":24,"author":{"gitId":"yeoutzer"},"content":"     */"},{"lineNumber":25,"author":{"gitId":"yeoutzer"},"content":"    public abstract String execute(TaskList tasks, Ui ui, Storage storage) throws IOException, DukeException;"},{"lineNumber":26,"author":{"gitId":"yeoutzer"},"content":"}"}],"authorContributionMap":{"yeoutzer":26}},{"path":"src/main/java/duke/commands/DeleteCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yeoutzer"},"content":"package duke.commands;"},{"lineNumber":2,"author":{"gitId":"yeoutzer"},"content":""},{"lineNumber":3,"author":{"gitId":"yeoutzer"},"content":"import java.io.IOException;"},{"lineNumber":4,"author":{"gitId":"yeoutzer"},"content":""},{"lineNumber":5,"author":{"gitId":"yeoutzer"},"content":"import duke.exceptions.DukeException;"},{"lineNumber":6,"author":{"gitId":"yeoutzer"},"content":"import duke.exceptions.TaskNotFoundException;"},{"lineNumber":7,"author":{"gitId":"yeoutzer"},"content":"import duke.exceptions.TaskSelectionInvalidException;"},{"lineNumber":8,"author":{"gitId":"yeoutzer"},"content":"import duke.storage.Storage;"},{"lineNumber":9,"author":{"gitId":"yeoutzer"},"content":"import duke.tasks.Task;"},{"lineNumber":10,"author":{"gitId":"yeoutzer"},"content":"import duke.tasks.TaskList;"},{"lineNumber":11,"author":{"gitId":"yeoutzer"},"content":"import duke.ui.Ui;"},{"lineNumber":12,"author":{"gitId":"yeoutzer"},"content":""},{"lineNumber":13,"author":{"gitId":"yeoutzer"},"content":"/**"},{"lineNumber":14,"author":{"gitId":"yeoutzer"},"content":" * Responsible for dealing with the deletion of tasks."},{"lineNumber":15,"author":{"gitId":"yeoutzer"},"content":" */"},{"lineNumber":16,"author":{"gitId":"yeoutzer"},"content":"public class DeleteCommand extends Command {"},{"lineNumber":17,"author":{"gitId":"yeoutzer"},"content":"    private String[] checkCommands;"},{"lineNumber":18,"author":{"gitId":"yeoutzer"},"content":""},{"lineNumber":19,"author":{"gitId":"yeoutzer"},"content":"    /**"},{"lineNumber":20,"author":{"gitId":"yeoutzer"},"content":"     * Constructs a DeleteCommand with the given full command line."},{"lineNumber":21,"author":{"gitId":"yeoutzer"},"content":"     *"},{"lineNumber":22,"author":{"gitId":"yeoutzer"},"content":"     * @param fullCommand Full command line input."},{"lineNumber":23,"author":{"gitId":"yeoutzer"},"content":"     */"},{"lineNumber":24,"author":{"gitId":"yeoutzer"},"content":"    public DeleteCommand(String fullCommand) {"},{"lineNumber":25,"author":{"gitId":"yeoutzer"},"content":"        assert fullCommand.length() \u003e 0;"},{"lineNumber":26,"author":{"gitId":"yeoutzer"},"content":""},{"lineNumber":27,"author":{"gitId":"yeoutzer"},"content":"        this.checkCommands \u003d fullCommand.split(\" \");"},{"lineNumber":28,"author":{"gitId":"yeoutzer"},"content":"    }"},{"lineNumber":29,"author":{"gitId":"yeoutzer"},"content":""},{"lineNumber":30,"author":{"gitId":"yeoutzer"},"content":"    /**"},{"lineNumber":31,"author":{"gitId":"yeoutzer"},"content":"     * Returns a message to indicate successful task deletion."},{"lineNumber":32,"author":{"gitId":"yeoutzer"},"content":"     * Deletes the indicated task from TaskList given by command line"},{"lineNumber":33,"author":{"gitId":"yeoutzer"},"content":"     * and save changes into the save file."},{"lineNumber":34,"author":{"gitId":"yeoutzer"},"content":"     *"},{"lineNumber":35,"author":{"gitId":"yeoutzer"},"content":"     * @param tasks TaskList to delete task from."},{"lineNumber":36,"author":{"gitId":"yeoutzer"},"content":"     * @param ui Ui for system outputs."},{"lineNumber":37,"author":{"gitId":"yeoutzer"},"content":"     * @param storage Storage for saving contents into file."},{"lineNumber":38,"author":{"gitId":"yeoutzer"},"content":"     * @return Successful deletion of task string."},{"lineNumber":39,"author":{"gitId":"yeoutzer"},"content":"     * @throws DukeException If error happens while deleting tasks."},{"lineNumber":40,"author":{"gitId":"yeoutzer"},"content":"     * @throws IOException If error happens while saving contents into file."},{"lineNumber":41,"author":{"gitId":"yeoutzer"},"content":"     */"},{"lineNumber":42,"author":{"gitId":"yeoutzer"},"content":"    @Override"},{"lineNumber":43,"author":{"gitId":"yeoutzer"},"content":"    public String execute(TaskList tasks, Ui ui, Storage storage) throws DukeException, IOException {"},{"lineNumber":44,"author":{"gitId":"yeoutzer"},"content":"        if (checkCommands.length \u003d\u003d 1 || !isNumber(checkCommands[1])) {"},{"lineNumber":45,"author":{"gitId":"yeoutzer"},"content":"            throw new TaskSelectionInvalidException();"},{"lineNumber":46,"author":{"gitId":"yeoutzer"},"content":"        }"},{"lineNumber":47,"author":{"gitId":"yeoutzer"},"content":"        int num \u003d Integer.parseInt(checkCommands[1]);"},{"lineNumber":48,"author":{"gitId":"yeoutzer"},"content":"        if (num \u003e 0 \u0026\u0026 num \u003c\u003d tasks.size()) {"},{"lineNumber":49,"author":{"gitId":"yeoutzer"},"content":"            Task deleted \u003d tasks.getTask(num - 1);"},{"lineNumber":50,"author":{"gitId":"yeoutzer"},"content":"            tasks.remove(num - 1);"},{"lineNumber":51,"author":{"gitId":"yeoutzer"},"content":"            storage.save(tasks);"},{"lineNumber":52,"author":{"gitId":"yeoutzer"},"content":"            return ui.getDeleteTaskString(tasks, deleted);"},{"lineNumber":53,"author":{"gitId":"yeoutzer"},"content":"        } else {"},{"lineNumber":54,"author":{"gitId":"yeoutzer"},"content":"            throw new TaskNotFoundException();"},{"lineNumber":55,"author":{"gitId":"yeoutzer"},"content":"        }"},{"lineNumber":56,"author":{"gitId":"yeoutzer"},"content":"    }"},{"lineNumber":57,"author":{"gitId":"yeoutzer"},"content":""},{"lineNumber":58,"author":{"gitId":"yeoutzer"},"content":"    private boolean isNumber(String checkString) {"},{"lineNumber":59,"author":{"gitId":"yeoutzer"},"content":"        try {"},{"lineNumber":60,"author":{"gitId":"yeoutzer"},"content":"            Integer.parseInt(checkString);"},{"lineNumber":61,"author":{"gitId":"yeoutzer"},"content":"            return true;"},{"lineNumber":62,"author":{"gitId":"yeoutzer"},"content":"        } catch (NumberFormatException e) {"},{"lineNumber":63,"author":{"gitId":"yeoutzer"},"content":"            return false;"},{"lineNumber":64,"author":{"gitId":"yeoutzer"},"content":"        }"},{"lineNumber":65,"author":{"gitId":"yeoutzer"},"content":"    }"},{"lineNumber":66,"author":{"gitId":"yeoutzer"},"content":"}"}],"authorContributionMap":{"yeoutzer":66}},{"path":"src/main/java/duke/commands/DoneCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yeoutzer"},"content":"package duke.commands;"},{"lineNumber":2,"author":{"gitId":"yeoutzer"},"content":""},{"lineNumber":3,"author":{"gitId":"yeoutzer"},"content":"import java.io.IOException;"},{"lineNumber":4,"author":{"gitId":"yeoutzer"},"content":""},{"lineNumber":5,"author":{"gitId":"yeoutzer"},"content":"import duke.exceptions.DukeException;"},{"lineNumber":6,"author":{"gitId":"yeoutzer"},"content":"import duke.exceptions.TaskNotFoundException;"},{"lineNumber":7,"author":{"gitId":"yeoutzer"},"content":"import duke.exceptions.TaskSelectionInvalidException;"},{"lineNumber":8,"author":{"gitId":"yeoutzer"},"content":"import duke.storage.Storage;"},{"lineNumber":9,"author":{"gitId":"yeoutzer"},"content":"import duke.tasks.TaskList;"},{"lineNumber":10,"author":{"gitId":"yeoutzer"},"content":"import duke.ui.Ui;"},{"lineNumber":11,"author":{"gitId":"yeoutzer"},"content":""},{"lineNumber":12,"author":{"gitId":"yeoutzer"},"content":"/**"},{"lineNumber":13,"author":{"gitId":"yeoutzer"},"content":" * Responsible for dealing with the completion of tasks."},{"lineNumber":14,"author":{"gitId":"yeoutzer"},"content":" */"},{"lineNumber":15,"author":{"gitId":"yeoutzer"},"content":"public class DoneCommand extends Command {"},{"lineNumber":16,"author":{"gitId":"yeoutzer"},"content":"    private String[] checkCommands;"},{"lineNumber":17,"author":{"gitId":"yeoutzer"},"content":""},{"lineNumber":18,"author":{"gitId":"yeoutzer"},"content":"    /**"},{"lineNumber":19,"author":{"gitId":"yeoutzer"},"content":"     * Constructs a DoneCommand with the given full command line."},{"lineNumber":20,"author":{"gitId":"yeoutzer"},"content":"     *"},{"lineNumber":21,"author":{"gitId":"yeoutzer"},"content":"     * @param fullCommand Full command line input."},{"lineNumber":22,"author":{"gitId":"yeoutzer"},"content":"     */"},{"lineNumber":23,"author":{"gitId":"yeoutzer"},"content":"    public DoneCommand(String fullCommand) {"},{"lineNumber":24,"author":{"gitId":"yeoutzer"},"content":"        assert fullCommand.length() \u003e 0;"},{"lineNumber":25,"author":{"gitId":"yeoutzer"},"content":""},{"lineNumber":26,"author":{"gitId":"yeoutzer"},"content":"        this.checkCommands \u003d fullCommand.split(\" \");"},{"lineNumber":27,"author":{"gitId":"yeoutzer"},"content":"    }"},{"lineNumber":28,"author":{"gitId":"yeoutzer"},"content":""},{"lineNumber":29,"author":{"gitId":"yeoutzer"},"content":"    /**"},{"lineNumber":30,"author":{"gitId":"yeoutzer"},"content":"     * Returns a message to indicate successful task completion."},{"lineNumber":31,"author":{"gitId":"yeoutzer"},"content":"     * Changes the completion status of indicated task in TaskList"},{"lineNumber":32,"author":{"gitId":"yeoutzer"},"content":"     * given by command line and save changes into the save file."},{"lineNumber":33,"author":{"gitId":"yeoutzer"},"content":"     *"},{"lineNumber":34,"author":{"gitId":"yeoutzer"},"content":"     * @param tasks TaskList containing the task."},{"lineNumber":35,"author":{"gitId":"yeoutzer"},"content":"     * @param ui Ui for system outputs."},{"lineNumber":36,"author":{"gitId":"yeoutzer"},"content":"     * @param storage Storage for saving contents into file."},{"lineNumber":37,"author":{"gitId":"yeoutzer"},"content":"     * @return Successful completion of task string."},{"lineNumber":38,"author":{"gitId":"yeoutzer"},"content":"     * @throws IOException If error happens while saving contents into file."},{"lineNumber":39,"author":{"gitId":"yeoutzer"},"content":"     * @throws DukeException If error happens while changing status of task."},{"lineNumber":40,"author":{"gitId":"yeoutzer"},"content":"     */"},{"lineNumber":41,"author":{"gitId":"yeoutzer"},"content":"    @Override"},{"lineNumber":42,"author":{"gitId":"yeoutzer"},"content":"    public String execute(TaskList tasks, Ui ui, Storage storage) throws IOException, DukeException {"},{"lineNumber":43,"author":{"gitId":"yeoutzer"},"content":"        if (checkCommands.length \u003d\u003d 1 || !isNumber(checkCommands[1])) {"},{"lineNumber":44,"author":{"gitId":"yeoutzer"},"content":"            throw new TaskSelectionInvalidException();"},{"lineNumber":45,"author":{"gitId":"yeoutzer"},"content":"        }"},{"lineNumber":46,"author":{"gitId":"yeoutzer"},"content":"        int num \u003d Integer.parseInt(checkCommands[1]);"},{"lineNumber":47,"author":{"gitId":"yeoutzer"},"content":"        if (num \u003e 0 \u0026\u0026 num \u003c\u003d tasks.size()) {"},{"lineNumber":48,"author":{"gitId":"yeoutzer"},"content":"            tasks.getTask(num - 1).markAsDone();"},{"lineNumber":49,"author":{"gitId":"yeoutzer"},"content":"            storage.save(tasks);"},{"lineNumber":50,"author":{"gitId":"yeoutzer"},"content":"            return ui.getDoneTaskString(tasks, num);"},{"lineNumber":51,"author":{"gitId":"yeoutzer"},"content":"        } else {"},{"lineNumber":52,"author":{"gitId":"yeoutzer"},"content":"            throw new TaskNotFoundException();"},{"lineNumber":53,"author":{"gitId":"yeoutzer"},"content":"        }"},{"lineNumber":54,"author":{"gitId":"yeoutzer"},"content":"    }"},{"lineNumber":55,"author":{"gitId":"yeoutzer"},"content":""},{"lineNumber":56,"author":{"gitId":"yeoutzer"},"content":"    private boolean isNumber(String checkString) {"},{"lineNumber":57,"author":{"gitId":"yeoutzer"},"content":"        try {"},{"lineNumber":58,"author":{"gitId":"yeoutzer"},"content":"            Integer.parseInt(checkString);"},{"lineNumber":59,"author":{"gitId":"yeoutzer"},"content":"            return true;"},{"lineNumber":60,"author":{"gitId":"yeoutzer"},"content":"        } catch (NumberFormatException e) {"},{"lineNumber":61,"author":{"gitId":"yeoutzer"},"content":"            return false;"},{"lineNumber":62,"author":{"gitId":"yeoutzer"},"content":"        }"},{"lineNumber":63,"author":{"gitId":"yeoutzer"},"content":"    }"},{"lineNumber":64,"author":{"gitId":"yeoutzer"},"content":"}"}],"authorContributionMap":{"yeoutzer":64}},{"path":"src/main/java/duke/commands/ExitCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yeoutzer"},"content":"package duke.commands;"},{"lineNumber":2,"author":{"gitId":"yeoutzer"},"content":""},{"lineNumber":3,"author":{"gitId":"yeoutzer"},"content":"import duke.storage.Storage;"},{"lineNumber":4,"author":{"gitId":"yeoutzer"},"content":"import duke.tasks.TaskList;"},{"lineNumber":5,"author":{"gitId":"yeoutzer"},"content":"import duke.ui.Ui;"},{"lineNumber":6,"author":{"gitId":"yeoutzer"},"content":""},{"lineNumber":7,"author":{"gitId":"yeoutzer"},"content":"/**"},{"lineNumber":8,"author":{"gitId":"yeoutzer"},"content":" * Responsible for stopping the program."},{"lineNumber":9,"author":{"gitId":"yeoutzer"},"content":" */"},{"lineNumber":10,"author":{"gitId":"yeoutzer"},"content":"public class ExitCommand extends Command {"},{"lineNumber":11,"author":{"gitId":"yeoutzer"},"content":"    /**"},{"lineNumber":12,"author":{"gitId":"yeoutzer"},"content":"     * Returns goodbye message before stopping the program."},{"lineNumber":13,"author":{"gitId":"yeoutzer"},"content":"     *"},{"lineNumber":14,"author":{"gitId":"yeoutzer"},"content":"     * @param tasks TaskList containing tasks."},{"lineNumber":15,"author":{"gitId":"yeoutzer"},"content":"     * @param ui Ui for system outputs."},{"lineNumber":16,"author":{"gitId":"yeoutzer"},"content":"     * @param storage Storage for saving contents into file."},{"lineNumber":17,"author":{"gitId":"yeoutzer"},"content":"     * @return Goodbye message string."},{"lineNumber":18,"author":{"gitId":"yeoutzer"},"content":"     */"},{"lineNumber":19,"author":{"gitId":"yeoutzer"},"content":"    @Override"},{"lineNumber":20,"author":{"gitId":"yeoutzer"},"content":"    public String execute(TaskList tasks, Ui ui, Storage storage) {"},{"lineNumber":21,"author":{"gitId":"yeoutzer"},"content":"        return ui.getByeMessage();"},{"lineNumber":22,"author":{"gitId":"yeoutzer"},"content":"    }"},{"lineNumber":23,"author":{"gitId":"yeoutzer"},"content":"}"}],"authorContributionMap":{"yeoutzer":23}},{"path":"src/main/java/duke/commands/FindCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yeoutzer"},"content":"package duke.commands;"},{"lineNumber":2,"author":{"gitId":"yeoutzer"},"content":""},{"lineNumber":3,"author":{"gitId":"yeoutzer"},"content":"import java.util.ArrayList;"},{"lineNumber":4,"author":{"gitId":"yeoutzer"},"content":""},{"lineNumber":5,"author":{"gitId":"yeoutzer"},"content":"import duke.exceptions.DukeException;"},{"lineNumber":6,"author":{"gitId":"yeoutzer"},"content":"import duke.exceptions.MatchStringNotFoundException;"},{"lineNumber":7,"author":{"gitId":"yeoutzer"},"content":"import duke.storage.Storage;"},{"lineNumber":8,"author":{"gitId":"yeoutzer"},"content":"import duke.tasks.Task;"},{"lineNumber":9,"author":{"gitId":"yeoutzer"},"content":"import duke.tasks.TaskList;"},{"lineNumber":10,"author":{"gitId":"yeoutzer"},"content":"import duke.ui.Ui;"},{"lineNumber":11,"author":{"gitId":"yeoutzer"},"content":""},{"lineNumber":12,"author":{"gitId":"yeoutzer"},"content":"/**"},{"lineNumber":13,"author":{"gitId":"yeoutzer"},"content":" * Responsible for finding task."},{"lineNumber":14,"author":{"gitId":"yeoutzer"},"content":" */"},{"lineNumber":15,"author":{"gitId":"yeoutzer"},"content":"public class FindCommand extends Command {"},{"lineNumber":16,"author":{"gitId":"yeoutzer"},"content":"    private String fullCommand;"},{"lineNumber":17,"author":{"gitId":"yeoutzer"},"content":""},{"lineNumber":18,"author":{"gitId":"yeoutzer"},"content":"    /**"},{"lineNumber":19,"author":{"gitId":"yeoutzer"},"content":"     * Constructs a FindCommand with given full command line."},{"lineNumber":20,"author":{"gitId":"yeoutzer"},"content":"     *"},{"lineNumber":21,"author":{"gitId":"yeoutzer"},"content":"     * @param fullCommand Full command line input."},{"lineNumber":22,"author":{"gitId":"yeoutzer"},"content":"     */"},{"lineNumber":23,"author":{"gitId":"yeoutzer"},"content":"    public FindCommand(String fullCommand) {"},{"lineNumber":24,"author":{"gitId":"yeoutzer"},"content":"        assert fullCommand.length() \u003e 0;"},{"lineNumber":25,"author":{"gitId":"yeoutzer"},"content":""},{"lineNumber":26,"author":{"gitId":"yeoutzer"},"content":"        this.fullCommand \u003d fullCommand;"},{"lineNumber":27,"author":{"gitId":"yeoutzer"},"content":"    }"},{"lineNumber":28,"author":{"gitId":"yeoutzer"},"content":""},{"lineNumber":29,"author":{"gitId":"yeoutzer"},"content":"    /**"},{"lineNumber":30,"author":{"gitId":"yeoutzer"},"content":"     * Returns a string listing the tasks that matches given word in command line."},{"lineNumber":31,"author":{"gitId":"yeoutzer"},"content":"     *"},{"lineNumber":32,"author":{"gitId":"yeoutzer"},"content":"     * @param tasks TasksList to find from."},{"lineNumber":33,"author":{"gitId":"yeoutzer"},"content":"     * @param ui Ui for system outputs."},{"lineNumber":34,"author":{"gitId":"yeoutzer"},"content":"     * @param storage Storage for saving contents into file."},{"lineNumber":35,"author":{"gitId":"yeoutzer"},"content":"     * @return String of tasks matching given word in command line."},{"lineNumber":36,"author":{"gitId":"yeoutzer"},"content":"     */"},{"lineNumber":37,"author":{"gitId":"yeoutzer"},"content":"    @Override"},{"lineNumber":38,"author":{"gitId":"yeoutzer"},"content":"    public String execute(TaskList tasks, Ui ui, Storage storage) throws DukeException {"},{"lineNumber":39,"author":{"gitId":"yeoutzer"},"content":"        TaskList matchList \u003d new TaskList(new ArrayList\u003cTask\u003e());"},{"lineNumber":40,"author":{"gitId":"yeoutzer"},"content":"        String matchString \u003d fullCommand.substring(4).trim();"},{"lineNumber":41,"author":{"gitId":"yeoutzer"},"content":"        if (matchString.isEmpty()) {"},{"lineNumber":42,"author":{"gitId":"yeoutzer"},"content":"            throw new MatchStringNotFoundException();"},{"lineNumber":43,"author":{"gitId":"yeoutzer"},"content":"        }"},{"lineNumber":44,"author":{"gitId":"yeoutzer"},"content":"        for (int i \u003d 0; i \u003c tasks.size(); i++) {"},{"lineNumber":45,"author":{"gitId":"yeoutzer"},"content":"            Task temp \u003d tasks.getTask(i);"},{"lineNumber":46,"author":{"gitId":"yeoutzer"},"content":"            if (temp.getDescription().contains(matchString)) {"},{"lineNumber":47,"author":{"gitId":"yeoutzer"},"content":"                matchList.add(temp);"},{"lineNumber":48,"author":{"gitId":"yeoutzer"},"content":"            }"},{"lineNumber":49,"author":{"gitId":"yeoutzer"},"content":"        }"},{"lineNumber":50,"author":{"gitId":"yeoutzer"},"content":"        if (matchList.size() !\u003d 0) {"},{"lineNumber":51,"author":{"gitId":"yeoutzer"},"content":"            return ui.getMatchList(matchList);"},{"lineNumber":52,"author":{"gitId":"yeoutzer"},"content":"        } else {"},{"lineNumber":53,"author":{"gitId":"yeoutzer"},"content":"            return ui.getNoMatchString();"},{"lineNumber":54,"author":{"gitId":"yeoutzer"},"content":"        }"},{"lineNumber":55,"author":{"gitId":"yeoutzer"},"content":"    }"},{"lineNumber":56,"author":{"gitId":"yeoutzer"},"content":"}"}],"authorContributionMap":{"yeoutzer":56}},{"path":"src/main/java/duke/commands/ListCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yeoutzer"},"content":"package duke.commands;"},{"lineNumber":2,"author":{"gitId":"yeoutzer"},"content":""},{"lineNumber":3,"author":{"gitId":"yeoutzer"},"content":"import duke.storage.Storage;"},{"lineNumber":4,"author":{"gitId":"yeoutzer"},"content":"import duke.tasks.TaskList;"},{"lineNumber":5,"author":{"gitId":"yeoutzer"},"content":"import duke.ui.Ui;"},{"lineNumber":6,"author":{"gitId":"yeoutzer"},"content":""},{"lineNumber":7,"author":{"gitId":"yeoutzer"},"content":"/**"},{"lineNumber":8,"author":{"gitId":"yeoutzer"},"content":" * Responsible for listing the contents of TaskList."},{"lineNumber":9,"author":{"gitId":"yeoutzer"},"content":" */"},{"lineNumber":10,"author":{"gitId":"yeoutzer"},"content":"public class ListCommand extends Command {"},{"lineNumber":11,"author":{"gitId":"yeoutzer"},"content":"    /**"},{"lineNumber":12,"author":{"gitId":"yeoutzer"},"content":"     * Returns the list of tasks in TaskList."},{"lineNumber":13,"author":{"gitId":"yeoutzer"},"content":"     *"},{"lineNumber":14,"author":{"gitId":"yeoutzer"},"content":"     * @param tasks TaskList to be listed."},{"lineNumber":15,"author":{"gitId":"yeoutzer"},"content":"     * @param ui Ui for system outputs."},{"lineNumber":16,"author":{"gitId":"yeoutzer"},"content":"     * @param storage Storage for saving contents into file."},{"lineNumber":17,"author":{"gitId":"yeoutzer"},"content":"     * @return String listing the tasks in TaskList."},{"lineNumber":18,"author":{"gitId":"yeoutzer"},"content":"     */"},{"lineNumber":19,"author":{"gitId":"yeoutzer"},"content":"    @Override"},{"lineNumber":20,"author":{"gitId":"yeoutzer"},"content":"    public String execute(TaskList tasks, Ui ui, Storage storage) {"},{"lineNumber":21,"author":{"gitId":"yeoutzer"},"content":"        if (tasks.size() \u003d\u003d 0) {"},{"lineNumber":22,"author":{"gitId":"yeoutzer"},"content":"            return ui.getEmptyListString();"},{"lineNumber":23,"author":{"gitId":"yeoutzer"},"content":"        } else {"},{"lineNumber":24,"author":{"gitId":"yeoutzer"},"content":"            return ui.getListOfTasks(tasks);"},{"lineNumber":25,"author":{"gitId":"yeoutzer"},"content":"        }"},{"lineNumber":26,"author":{"gitId":"yeoutzer"},"content":"    }"},{"lineNumber":27,"author":{"gitId":"yeoutzer"},"content":"}"}],"authorContributionMap":{"yeoutzer":27}},{"path":"src/main/java/duke/exceptions/CommandNotValidException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yeoutzer"},"content":"package duke.exceptions;"},{"lineNumber":2,"author":{"gitId":"yeoutzer"},"content":""},{"lineNumber":3,"author":{"gitId":"yeoutzer"},"content":"/**"},{"lineNumber":4,"author":{"gitId":"yeoutzer"},"content":" * Error class for invalid commands."},{"lineNumber":5,"author":{"gitId":"yeoutzer"},"content":" */"},{"lineNumber":6,"author":{"gitId":"yeoutzer"},"content":"public class CommandNotValidException extends DukeException {"},{"lineNumber":7,"author":{"gitId":"yeoutzer"},"content":"    /**"},{"lineNumber":8,"author":{"gitId":"yeoutzer"},"content":"     * Constructs a CommandNotValidException with specific message for invalid commands."},{"lineNumber":9,"author":{"gitId":"yeoutzer"},"content":"     */"},{"lineNumber":10,"author":{"gitId":"yeoutzer"},"content":"    public CommandNotValidException() {"},{"lineNumber":11,"author":{"gitId":"yeoutzer"},"content":"        super(\"Command not valid. Please use \\\"todo\\\", \\\"deadline\\\"\""},{"lineNumber":12,"author":{"gitId":"yeoutzer"},"content":"                + \"or \\\"event\\\" followed by task description to add new tasks.\\n\""},{"lineNumber":13,"author":{"gitId":"yeoutzer"},"content":"                + \"Please use \\\"list\\\" to view your list of tasks.\\n\""},{"lineNumber":14,"author":{"gitId":"yeoutzer"},"content":"                + \"Please use \\\"done\\\" followed by index to mark completed tasks.\\n\""},{"lineNumber":15,"author":{"gitId":"yeoutzer"},"content":"                + \"Please use \\\"delete\\\" followed by index to delete tasks.\\n\""},{"lineNumber":16,"author":{"gitId":"yeoutzer"},"content":"                + \"Please use \\\"bye\\\" to exit.\");"},{"lineNumber":17,"author":{"gitId":"yeoutzer"},"content":"    }"},{"lineNumber":18,"author":{"gitId":"yeoutzer"},"content":"}"}],"authorContributionMap":{"yeoutzer":18}},{"path":"src/main/java/duke/exceptions/DateTimeNotFoundException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yeoutzer"},"content":"package duke.exceptions;"},{"lineNumber":2,"author":{"gitId":"yeoutzer"},"content":""},{"lineNumber":3,"author":{"gitId":"yeoutzer"},"content":"/**"},{"lineNumber":4,"author":{"gitId":"yeoutzer"},"content":" * Error class for no indication of date and time."},{"lineNumber":5,"author":{"gitId":"yeoutzer"},"content":" */"},{"lineNumber":6,"author":{"gitId":"yeoutzer"},"content":"public class DateTimeNotFoundException extends DukeException {"},{"lineNumber":7,"author":{"gitId":"yeoutzer"},"content":"    /**"},{"lineNumber":8,"author":{"gitId":"yeoutzer"},"content":"     * Constructs a DateTimeNotFoundException with specific message for"},{"lineNumber":9,"author":{"gitId":"yeoutzer"},"content":"     * no indication of date and time."},{"lineNumber":10,"author":{"gitId":"yeoutzer"},"content":"     */"},{"lineNumber":11,"author":{"gitId":"yeoutzer"},"content":"    public DateTimeNotFoundException() {"},{"lineNumber":12,"author":{"gitId":"yeoutzer"},"content":"        super(\"Please enter the date (DD/MM/YYYY) with optional \""},{"lineNumber":13,"author":{"gitId":"yeoutzer"},"content":"                + \"time (in 24 hours format) after \\\"/by\\\" for Deadline Tasks \""},{"lineNumber":14,"author":{"gitId":"yeoutzer"},"content":"                + \"or date with optional start and end time after \\\"/at\\\"\""},{"lineNumber":15,"author":{"gitId":"yeoutzer"},"content":"                + \"for Event Tasks.\");"},{"lineNumber":16,"author":{"gitId":"yeoutzer"},"content":"    }"},{"lineNumber":17,"author":{"gitId":"yeoutzer"},"content":"}"}],"authorContributionMap":{"yeoutzer":17}},{"path":"src/main/java/duke/exceptions/DescriptionNotFoundException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yeoutzer"},"content":"package duke.exceptions;"},{"lineNumber":2,"author":{"gitId":"yeoutzer"},"content":""},{"lineNumber":3,"author":{"gitId":"yeoutzer"},"content":"/**"},{"lineNumber":4,"author":{"gitId":"yeoutzer"},"content":" * Error class for no indication of task description."},{"lineNumber":5,"author":{"gitId":"yeoutzer"},"content":" */"},{"lineNumber":6,"author":{"gitId":"yeoutzer"},"content":"public class DescriptionNotFoundException extends DukeException {"},{"lineNumber":7,"author":{"gitId":"yeoutzer"},"content":"    /**"},{"lineNumber":8,"author":{"gitId":"yeoutzer"},"content":"     * Constructs a DescriptionNotFoundException with specific message for"},{"lineNumber":9,"author":{"gitId":"yeoutzer"},"content":"     * no indication of task description."},{"lineNumber":10,"author":{"gitId":"yeoutzer"},"content":"     */"},{"lineNumber":11,"author":{"gitId":"yeoutzer"},"content":"    public DescriptionNotFoundException() {"},{"lineNumber":12,"author":{"gitId":"yeoutzer"},"content":"        super(\"Please provide description for your task.\");"},{"lineNumber":13,"author":{"gitId":"yeoutzer"},"content":"    }"},{"lineNumber":14,"author":{"gitId":"yeoutzer"},"content":"}"}],"authorContributionMap":{"yeoutzer":14}},{"path":"src/main/java/duke/exceptions/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yeoutzer"},"content":"package duke.exceptions;"},{"lineNumber":2,"author":{"gitId":"yeoutzer"},"content":""},{"lineNumber":3,"author":{"gitId":"yeoutzer"},"content":"/**"},{"lineNumber":4,"author":{"gitId":"yeoutzer"},"content":" * Error class for all exceptions thrown in Duke."},{"lineNumber":5,"author":{"gitId":"yeoutzer"},"content":" */"},{"lineNumber":6,"author":{"gitId":"yeoutzer"},"content":"public class DukeException extends Exception {"},{"lineNumber":7,"author":{"gitId":"yeoutzer"},"content":"    /**"},{"lineNumber":8,"author":{"gitId":"yeoutzer"},"content":"     * Constructs a DukeException with the specified message."},{"lineNumber":9,"author":{"gitId":"yeoutzer"},"content":"     *"},{"lineNumber":10,"author":{"gitId":"yeoutzer"},"content":"     * @param message Message of exception."},{"lineNumber":11,"author":{"gitId":"yeoutzer"},"content":"     */"},{"lineNumber":12,"author":{"gitId":"yeoutzer"},"content":"    public DukeException(String message) {"},{"lineNumber":13,"author":{"gitId":"yeoutzer"},"content":"        super(message);"},{"lineNumber":14,"author":{"gitId":"yeoutzer"},"content":"    }"},{"lineNumber":15,"author":{"gitId":"yeoutzer"},"content":"}"}],"authorContributionMap":{"yeoutzer":15}},{"path":"src/main/java/duke/exceptions/DurationNotFoundException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yeoutzer"},"content":"package duke.exceptions;"},{"lineNumber":2,"author":{"gitId":"yeoutzer"},"content":""},{"lineNumber":3,"author":{"gitId":"yeoutzer"},"content":"/**"},{"lineNumber":4,"author":{"gitId":"yeoutzer"},"content":" * Error class for no duration input."},{"lineNumber":5,"author":{"gitId":"yeoutzer"},"content":" */"},{"lineNumber":6,"author":{"gitId":"yeoutzer"},"content":"public class DurationNotFoundException extends DukeException {"},{"lineNumber":7,"author":{"gitId":"yeoutzer"},"content":"    private static String message \u003d \"Please enter duration of task in minutes (whole number) after \\\"/within\\\".\";"},{"lineNumber":8,"author":{"gitId":"yeoutzer"},"content":"    /**"},{"lineNumber":9,"author":{"gitId":"yeoutzer"},"content":"     * Constructs a DurationNotFoundException with specific message for no duration input."},{"lineNumber":10,"author":{"gitId":"yeoutzer"},"content":"     */"},{"lineNumber":11,"author":{"gitId":"yeoutzer"},"content":"    public DurationNotFoundException() {"},{"lineNumber":12,"author":{"gitId":"yeoutzer"},"content":"        super(message);"},{"lineNumber":13,"author":{"gitId":"yeoutzer"},"content":"    }"},{"lineNumber":14,"author":{"gitId":"yeoutzer"},"content":"}"}],"authorContributionMap":{"yeoutzer":14}},{"path":"src/main/java/duke/exceptions/MatchStringNotFoundException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yeoutzer"},"content":"package duke.exceptions;"},{"lineNumber":2,"author":{"gitId":"yeoutzer"},"content":""},{"lineNumber":3,"author":{"gitId":"yeoutzer"},"content":"public class MatchStringNotFoundException extends DukeException {"},{"lineNumber":4,"author":{"gitId":"yeoutzer"},"content":"    public MatchStringNotFoundException() {"},{"lineNumber":5,"author":{"gitId":"yeoutzer"},"content":"        super(\"Please enter keyword of task description to find.\");"},{"lineNumber":6,"author":{"gitId":"yeoutzer"},"content":"    }"},{"lineNumber":7,"author":{"gitId":"yeoutzer"},"content":"}"}],"authorContributionMap":{"yeoutzer":7}},{"path":"src/main/java/duke/exceptions/SaveFileInvalidFormatException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yeoutzer"},"content":"package duke.exceptions;"},{"lineNumber":2,"author":{"gitId":"yeoutzer"},"content":""},{"lineNumber":3,"author":{"gitId":"yeoutzer"},"content":"public class SaveFileInvalidFormatException extends DukeException {"},{"lineNumber":4,"author":{"gitId":"yeoutzer"},"content":"    public SaveFileInvalidFormatException() {"},{"lineNumber":5,"author":{"gitId":"yeoutzer"},"content":"        super(\"Invalid content format in save file.\");"},{"lineNumber":6,"author":{"gitId":"yeoutzer"},"content":"    }"},{"lineNumber":7,"author":{"gitId":"yeoutzer"},"content":"}"}],"authorContributionMap":{"yeoutzer":7}},{"path":"src/main/java/duke/exceptions/TaskNotFoundException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yeoutzer"},"content":"package duke.exceptions;"},{"lineNumber":2,"author":{"gitId":"yeoutzer"},"content":""},{"lineNumber":3,"author":{"gitId":"yeoutzer"},"content":"/**"},{"lineNumber":4,"author":{"gitId":"yeoutzer"},"content":" * Error class for selecting task index outside of TaskList size."},{"lineNumber":5,"author":{"gitId":"yeoutzer"},"content":" */"},{"lineNumber":6,"author":{"gitId":"yeoutzer"},"content":"public class TaskNotFoundException extends DukeException {"},{"lineNumber":7,"author":{"gitId":"yeoutzer"},"content":"    /**"},{"lineNumber":8,"author":{"gitId":"yeoutzer"},"content":"     * Constructs a CommandNotValidException with specific message"},{"lineNumber":9,"author":{"gitId":"yeoutzer"},"content":"     * for selecting task index outside of TaskList size."},{"lineNumber":10,"author":{"gitId":"yeoutzer"},"content":"     */"},{"lineNumber":11,"author":{"gitId":"yeoutzer"},"content":"    public TaskNotFoundException() {"},{"lineNumber":12,"author":{"gitId":"yeoutzer"},"content":"        super(\"Task not in list.\");"},{"lineNumber":13,"author":{"gitId":"yeoutzer"},"content":"    }"},{"lineNumber":14,"author":{"gitId":"yeoutzer"},"content":"}"}],"authorContributionMap":{"yeoutzer":14}},{"path":"src/main/java/duke/exceptions/TaskSelectionInvalidException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yeoutzer"},"content":"package duke.exceptions;"},{"lineNumber":2,"author":{"gitId":"yeoutzer"},"content":""},{"lineNumber":3,"author":{"gitId":"yeoutzer"},"content":"public class TaskSelectionInvalidException extends DukeException {"},{"lineNumber":4,"author":{"gitId":"yeoutzer"},"content":"    public TaskSelectionInvalidException() {"},{"lineNumber":5,"author":{"gitId":"yeoutzer"},"content":"        super(\"Please enter task number after command.\");"},{"lineNumber":6,"author":{"gitId":"yeoutzer"},"content":"    }"},{"lineNumber":7,"author":{"gitId":"yeoutzer"},"content":"}"}],"authorContributionMap":{"yeoutzer":7}},{"path":"src/main/java/duke/exceptions/TimeDurationInvalidException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yeoutzer"},"content":"package duke.exceptions;"},{"lineNumber":2,"author":{"gitId":"yeoutzer"},"content":""},{"lineNumber":3,"author":{"gitId":"yeoutzer"},"content":"/**"},{"lineNumber":4,"author":{"gitId":"yeoutzer"},"content":" * Error class for invalid start and end time of task."},{"lineNumber":5,"author":{"gitId":"yeoutzer"},"content":" */"},{"lineNumber":6,"author":{"gitId":"yeoutzer"},"content":"public class TimeDurationInvalidException extends DukeException {"},{"lineNumber":7,"author":{"gitId":"yeoutzer"},"content":"    /**"},{"lineNumber":8,"author":{"gitId":"yeoutzer"},"content":"     * Constructs a TimeDurationInvalidException with specific message"},{"lineNumber":9,"author":{"gitId":"yeoutzer"},"content":"     * for invalid start and end time of task."},{"lineNumber":10,"author":{"gitId":"yeoutzer"},"content":"     */"},{"lineNumber":11,"author":{"gitId":"yeoutzer"},"content":"    public TimeDurationInvalidException() {"},{"lineNumber":12,"author":{"gitId":"yeoutzer"},"content":"        super(\"Please enter a valid start and end time duration (start time \u003c end time).\");"},{"lineNumber":13,"author":{"gitId":"yeoutzer"},"content":"    }"},{"lineNumber":14,"author":{"gitId":"yeoutzer"},"content":"}"}],"authorContributionMap":{"yeoutzer":14}},{"path":"src/main/java/duke/fxml/DialogBox.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yeoutzer"},"content":"package duke.fxml;"},{"lineNumber":2,"author":{"gitId":"yeoutzer"},"content":""},{"lineNumber":3,"author":{"gitId":"yeoutzer"},"content":"import java.io.IOException;"},{"lineNumber":4,"author":{"gitId":"yeoutzer"},"content":"import java.util.Collections;"},{"lineNumber":5,"author":{"gitId":"yeoutzer"},"content":""},{"lineNumber":6,"author":{"gitId":"yeoutzer"},"content":"import javafx.collections.FXCollections;"},{"lineNumber":7,"author":{"gitId":"yeoutzer"},"content":"import javafx.collections.ObservableList;"},{"lineNumber":8,"author":{"gitId":"yeoutzer"},"content":"import javafx.fxml.FXML;"},{"lineNumber":9,"author":{"gitId":"yeoutzer"},"content":"import javafx.fxml.FXMLLoader;"},{"lineNumber":10,"author":{"gitId":"yeoutzer"},"content":"import javafx.geometry.Pos;"},{"lineNumber":11,"author":{"gitId":"yeoutzer"},"content":"import javafx.scene.Node;"},{"lineNumber":12,"author":{"gitId":"yeoutzer"},"content":"import javafx.scene.image.Image;"},{"lineNumber":13,"author":{"gitId":"yeoutzer"},"content":"import javafx.scene.image.ImageView;"},{"lineNumber":14,"author":{"gitId":"yeoutzer"},"content":"import javafx.scene.layout.HBox;"},{"lineNumber":15,"author":{"gitId":"yeoutzer"},"content":"import javafx.scene.text.Text;"},{"lineNumber":16,"author":{"gitId":"yeoutzer"},"content":"import javafx.scene.text.TextAlignment;"},{"lineNumber":17,"author":{"gitId":"yeoutzer"},"content":""},{"lineNumber":18,"author":{"gitId":"yeoutzer"},"content":"/**"},{"lineNumber":19,"author":{"gitId":"yeoutzer"},"content":" * This control represents a dialog box consisting of an ImageView to represent the speaker\u0027s face and a Text"},{"lineNumber":20,"author":{"gitId":"yeoutzer"},"content":" * containing text from the speaker."},{"lineNumber":21,"author":{"gitId":"yeoutzer"},"content":" */"},{"lineNumber":22,"author":{"gitId":"yeoutzer"},"content":"public class DialogBox extends HBox {"},{"lineNumber":23,"author":{"gitId":"yeoutzer"},"content":"    @FXML"},{"lineNumber":24,"author":{"gitId":"yeoutzer"},"content":"    private Text dialog;"},{"lineNumber":25,"author":{"gitId":"yeoutzer"},"content":"    @FXML"},{"lineNumber":26,"author":{"gitId":"yeoutzer"},"content":"    private ImageView displayPicture;"},{"lineNumber":27,"author":{"gitId":"yeoutzer"},"content":""},{"lineNumber":28,"author":{"gitId":"yeoutzer"},"content":"    private DialogBox(String text, Image image) {"},{"lineNumber":29,"author":{"gitId":"yeoutzer"},"content":"        try {"},{"lineNumber":30,"author":{"gitId":"yeoutzer"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class"},{"lineNumber":31,"author":{"gitId":"yeoutzer"},"content":"                    .getResource(\"/view/DialogBox.fxml\"));"},{"lineNumber":32,"author":{"gitId":"yeoutzer"},"content":"            fxmlLoader.setController(this);"},{"lineNumber":33,"author":{"gitId":"yeoutzer"},"content":"            fxmlLoader.setRoot(this);"},{"lineNumber":34,"author":{"gitId":"yeoutzer"},"content":"            fxmlLoader.load();"},{"lineNumber":35,"author":{"gitId":"yeoutzer"},"content":"        } catch (IOException e) {"},{"lineNumber":36,"author":{"gitId":"yeoutzer"},"content":"            e.printStackTrace();"},{"lineNumber":37,"author":{"gitId":"yeoutzer"},"content":"        }"},{"lineNumber":38,"author":{"gitId":"yeoutzer"},"content":""},{"lineNumber":39,"author":{"gitId":"yeoutzer"},"content":"        dialog.setText(text);"},{"lineNumber":40,"author":{"gitId":"yeoutzer"},"content":"        dialog.setTextAlignment(TextAlignment.RIGHT);"},{"lineNumber":41,"author":{"gitId":"yeoutzer"},"content":"        displayPicture.setImage(image);"},{"lineNumber":42,"author":{"gitId":"yeoutzer"},"content":"    }"},{"lineNumber":43,"author":{"gitId":"yeoutzer"},"content":""},{"lineNumber":44,"author":{"gitId":"yeoutzer"},"content":"    /**"},{"lineNumber":45,"author":{"gitId":"yeoutzer"},"content":"     * Flips the dialog box such that the ImageView is on the left and text on the right."},{"lineNumber":46,"author":{"gitId":"yeoutzer"},"content":"     */"},{"lineNumber":47,"author":{"gitId":"yeoutzer"},"content":"    private void flip() {"},{"lineNumber":48,"author":{"gitId":"yeoutzer"},"content":"        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());"},{"lineNumber":49,"author":{"gitId":"yeoutzer"},"content":"        Collections.reverse(tmp);"},{"lineNumber":50,"author":{"gitId":"yeoutzer"},"content":"        getChildren().setAll(tmp);"},{"lineNumber":51,"author":{"gitId":"yeoutzer"},"content":"        setAlignment(Pos.TOP_LEFT);"},{"lineNumber":52,"author":{"gitId":"yeoutzer"},"content":"        this.dialog.setTextAlignment(TextAlignment.LEFT);"},{"lineNumber":53,"author":{"gitId":"yeoutzer"},"content":"    }"},{"lineNumber":54,"author":{"gitId":"yeoutzer"},"content":""},{"lineNumber":55,"author":{"gitId":"yeoutzer"},"content":"    /**"},{"lineNumber":56,"author":{"gitId":"yeoutzer"},"content":"     * Returns a user DialogBox from user text input and given image of user."},{"lineNumber":57,"author":{"gitId":"yeoutzer"},"content":"     *"},{"lineNumber":58,"author":{"gitId":"yeoutzer"},"content":"     * @param text Text input by user."},{"lineNumber":59,"author":{"gitId":"yeoutzer"},"content":"     * @param image Image of user."},{"lineNumber":60,"author":{"gitId":"yeoutzer"},"content":"     * @return User DialogBox."},{"lineNumber":61,"author":{"gitId":"yeoutzer"},"content":"     */"},{"lineNumber":62,"author":{"gitId":"yeoutzer"},"content":"    public static DialogBox getUserDialog(String text, Image image) {"},{"lineNumber":63,"author":{"gitId":"yeoutzer"},"content":"        return new DialogBox(text, image);"},{"lineNumber":64,"author":{"gitId":"yeoutzer"},"content":"    }"},{"lineNumber":65,"author":{"gitId":"yeoutzer"},"content":""},{"lineNumber":66,"author":{"gitId":"yeoutzer"},"content":"    /**"},{"lineNumber":67,"author":{"gitId":"yeoutzer"},"content":"     * Returns a duke DialogBox from response text and given image of duke."},{"lineNumber":68,"author":{"gitId":"yeoutzer"},"content":"     *"},{"lineNumber":69,"author":{"gitId":"yeoutzer"},"content":"     * @param text Response text from user input."},{"lineNumber":70,"author":{"gitId":"yeoutzer"},"content":"     * @param image Image of duke."},{"lineNumber":71,"author":{"gitId":"yeoutzer"},"content":"     * @return Duke DialogBox."},{"lineNumber":72,"author":{"gitId":"yeoutzer"},"content":"     */"},{"lineNumber":73,"author":{"gitId":"yeoutzer"},"content":"    public static DialogBox getDukeDialog(String text, Image image) {"},{"lineNumber":74,"author":{"gitId":"yeoutzer"},"content":"        var dialogBox \u003d new DialogBox(text, image);"},{"lineNumber":75,"author":{"gitId":"yeoutzer"},"content":"        dialogBox.flip();"},{"lineNumber":76,"author":{"gitId":"yeoutzer"},"content":"        return dialogBox;"},{"lineNumber":77,"author":{"gitId":"yeoutzer"},"content":"    }"},{"lineNumber":78,"author":{"gitId":"yeoutzer"},"content":""},{"lineNumber":79,"author":{"gitId":"yeoutzer"},"content":"}"}],"authorContributionMap":{"yeoutzer":79}},{"path":"src/main/java/duke/fxml/Main.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yeoutzer"},"content":"package duke.fxml;"},{"lineNumber":2,"author":{"gitId":"yeoutzer"},"content":""},{"lineNumber":3,"author":{"gitId":"yeoutzer"},"content":"import java.io.IOException;"},{"lineNumber":4,"author":{"gitId":"yeoutzer"},"content":""},{"lineNumber":5,"author":{"gitId":"yeoutzer"},"content":"import duke.Duke;"},{"lineNumber":6,"author":{"gitId":"yeoutzer"},"content":"import javafx.application.Application;"},{"lineNumber":7,"author":{"gitId":"yeoutzer"},"content":"import javafx.fxml.FXMLLoader;"},{"lineNumber":8,"author":{"gitId":"yeoutzer"},"content":"import javafx.scene.Scene;"},{"lineNumber":9,"author":{"gitId":"yeoutzer"},"content":"import javafx.scene.image.Image;"},{"lineNumber":10,"author":{"gitId":"yeoutzer"},"content":"import javafx.scene.layout.AnchorPane;"},{"lineNumber":11,"author":{"gitId":"yeoutzer"},"content":"import javafx.stage.Stage;"},{"lineNumber":12,"author":{"gitId":"yeoutzer"},"content":""},{"lineNumber":13,"author":{"gitId":"yeoutzer"},"content":"/**"},{"lineNumber":14,"author":{"gitId":"yeoutzer"},"content":" * A GUI for Duke using FXML."},{"lineNumber":15,"author":{"gitId":"yeoutzer"},"content":" */"},{"lineNumber":16,"author":{"gitId":"yeoutzer"},"content":"public class Main extends Application {"},{"lineNumber":17,"author":{"gitId":"yeoutzer"},"content":""},{"lineNumber":18,"author":{"gitId":"yeoutzer"},"content":"    private Duke duke \u003d new Duke(\"./data/Duke.txt\");"},{"lineNumber":19,"author":{"gitId":"yeoutzer"},"content":"    private Image icon \u003d new Image(this.getClass().getResourceAsStream(\"/images/Dook.png\"));"},{"lineNumber":20,"author":{"gitId":"yeoutzer"},"content":""},{"lineNumber":21,"author":{"gitId":"yeoutzer"},"content":"    @Override"},{"lineNumber":22,"author":{"gitId":"yeoutzer"},"content":"    public void start(Stage stage) {"},{"lineNumber":23,"author":{"gitId":"yeoutzer"},"content":"        try {"},{"lineNumber":24,"author":{"gitId":"yeoutzer"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(Main.class"},{"lineNumber":25,"author":{"gitId":"yeoutzer"},"content":"                    .getResource(\"/view/MainWindow.fxml\"));"},{"lineNumber":26,"author":{"gitId":"yeoutzer"},"content":"            AnchorPane anchorPane \u003d fxmlLoader.load();"},{"lineNumber":27,"author":{"gitId":"yeoutzer"},"content":"            Scene scene \u003d new Scene(anchorPane);"},{"lineNumber":28,"author":{"gitId":"yeoutzer"},"content":"            stage.setScene(scene);"},{"lineNumber":29,"author":{"gitId":"yeoutzer"},"content":"            stage.getIcons().add(icon);"},{"lineNumber":30,"author":{"gitId":"yeoutzer"},"content":"            stage.setTitle(\"Dook\");"},{"lineNumber":31,"author":{"gitId":"yeoutzer"},"content":"            fxmlLoader.\u003cMainWindow\u003egetController().setDuke(duke);"},{"lineNumber":32,"author":{"gitId":"yeoutzer"},"content":"            stage.setResizable(false);"},{"lineNumber":33,"author":{"gitId":"yeoutzer"},"content":"            stage.show();"},{"lineNumber":34,"author":{"gitId":"yeoutzer"},"content":"        } catch (IOException e) {"},{"lineNumber":35,"author":{"gitId":"yeoutzer"},"content":"            e.printStackTrace();"},{"lineNumber":36,"author":{"gitId":"yeoutzer"},"content":"        }"},{"lineNumber":37,"author":{"gitId":"yeoutzer"},"content":"    }"},{"lineNumber":38,"author":{"gitId":"yeoutzer"},"content":"}"}],"authorContributionMap":{"yeoutzer":38}},{"path":"src/main/java/duke/fxml/MainWindow.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yeoutzer"},"content":"package duke.fxml;"},{"lineNumber":2,"author":{"gitId":"yeoutzer"},"content":""},{"lineNumber":3,"author":{"gitId":"yeoutzer"},"content":"import java.util.Timer;"},{"lineNumber":4,"author":{"gitId":"yeoutzer"},"content":"import java.util.TimerTask;"},{"lineNumber":5,"author":{"gitId":"yeoutzer"},"content":""},{"lineNumber":6,"author":{"gitId":"yeoutzer"},"content":"import duke.Duke;"},{"lineNumber":7,"author":{"gitId":"yeoutzer"},"content":"import duke.ui.Ui;"},{"lineNumber":8,"author":{"gitId":"yeoutzer"},"content":"import javafx.application.Platform;"},{"lineNumber":9,"author":{"gitId":"yeoutzer"},"content":"import javafx.fxml.FXML;"},{"lineNumber":10,"author":{"gitId":"yeoutzer"},"content":"import javafx.scene.control.Button;"},{"lineNumber":11,"author":{"gitId":"yeoutzer"},"content":"import javafx.scene.control.ScrollPane;"},{"lineNumber":12,"author":{"gitId":"yeoutzer"},"content":"import javafx.scene.control.TextField;"},{"lineNumber":13,"author":{"gitId":"yeoutzer"},"content":"import javafx.scene.image.Image;"},{"lineNumber":14,"author":{"gitId":"yeoutzer"},"content":"import javafx.scene.layout.AnchorPane;"},{"lineNumber":15,"author":{"gitId":"yeoutzer"},"content":"import javafx.scene.layout.VBox;"},{"lineNumber":16,"author":{"gitId":"yeoutzer"},"content":""},{"lineNumber":17,"author":{"gitId":"yeoutzer"},"content":"/**"},{"lineNumber":18,"author":{"gitId":"yeoutzer"},"content":" * Controller for MainWindow. Provides the layout for the other controls."},{"lineNumber":19,"author":{"gitId":"yeoutzer"},"content":" */"},{"lineNumber":20,"author":{"gitId":"yeoutzer"},"content":"public class MainWindow extends AnchorPane {"},{"lineNumber":21,"author":{"gitId":"yeoutzer"},"content":"    @FXML"},{"lineNumber":22,"author":{"gitId":"yeoutzer"},"content":"    private ScrollPane scrollPane;"},{"lineNumber":23,"author":{"gitId":"yeoutzer"},"content":"    @FXML"},{"lineNumber":24,"author":{"gitId":"yeoutzer"},"content":"    private VBox dialogContainer;"},{"lineNumber":25,"author":{"gitId":"yeoutzer"},"content":"    @FXML"},{"lineNumber":26,"author":{"gitId":"yeoutzer"},"content":"    private TextField userInput;"},{"lineNumber":27,"author":{"gitId":"yeoutzer"},"content":"    @FXML"},{"lineNumber":28,"author":{"gitId":"yeoutzer"},"content":"    private Button sendButton;"},{"lineNumber":29,"author":{"gitId":"yeoutzer"},"content":""},{"lineNumber":30,"author":{"gitId":"yeoutzer"},"content":"    private Duke duke;"},{"lineNumber":31,"author":{"gitId":"yeoutzer"},"content":""},{"lineNumber":32,"author":{"gitId":"yeoutzer"},"content":"    private Image userImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/User.png\"));"},{"lineNumber":33,"author":{"gitId":"yeoutzer"},"content":"    private Image dukeImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/Duke.png\"));"},{"lineNumber":34,"author":{"gitId":"yeoutzer"},"content":""},{"lineNumber":35,"author":{"gitId":"yeoutzer"},"content":"    /**"},{"lineNumber":36,"author":{"gitId":"yeoutzer"},"content":"     * Initializes the MainWindow. Displays the Duke greeting."},{"lineNumber":37,"author":{"gitId":"yeoutzer"},"content":"     */"},{"lineNumber":38,"author":{"gitId":"yeoutzer"},"content":"    @FXML"},{"lineNumber":39,"author":{"gitId":"yeoutzer"},"content":"    public void initialize() {"},{"lineNumber":40,"author":{"gitId":"yeoutzer"},"content":"        scrollPaneSetup();"},{"lineNumber":41,"author":{"gitId":"yeoutzer"},"content":"        showGreetings();"},{"lineNumber":42,"author":{"gitId":"yeoutzer"},"content":"    }"},{"lineNumber":43,"author":{"gitId":"yeoutzer"},"content":""},{"lineNumber":44,"author":{"gitId":"yeoutzer"},"content":"    private void scrollPaneSetup() {"},{"lineNumber":45,"author":{"gitId":"yeoutzer"},"content":"        scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());"},{"lineNumber":46,"author":{"gitId":"yeoutzer"},"content":"    }"},{"lineNumber":47,"author":{"gitId":"yeoutzer"},"content":""},{"lineNumber":48,"author":{"gitId":"yeoutzer"},"content":"    private void showGreetings() {"},{"lineNumber":49,"author":{"gitId":"yeoutzer"},"content":"        Ui ui \u003d new Ui();"},{"lineNumber":50,"author":{"gitId":"yeoutzer"},"content":"        dialogContainer.getChildren().add(DialogBox.getDukeDialog(ui.getGreeting(), dukeImage));"},{"lineNumber":51,"author":{"gitId":"yeoutzer"},"content":"    }"},{"lineNumber":52,"author":{"gitId":"yeoutzer"},"content":""},{"lineNumber":53,"author":{"gitId":"yeoutzer"},"content":"    public void setDuke(Duke d) {"},{"lineNumber":54,"author":{"gitId":"yeoutzer"},"content":"        duke \u003d d;"},{"lineNumber":55,"author":{"gitId":"yeoutzer"},"content":"    }"},{"lineNumber":56,"author":{"gitId":"yeoutzer"},"content":""},{"lineNumber":57,"author":{"gitId":"yeoutzer"},"content":"    /**"},{"lineNumber":58,"author":{"gitId":"yeoutzer"},"content":"     * Creates two dialog boxes, one echoing user input and the other containing Duke\u0027s reply and then appends them to"},{"lineNumber":59,"author":{"gitId":"yeoutzer"},"content":"     * the dialog container. Clears the user input after processing."},{"lineNumber":60,"author":{"gitId":"yeoutzer"},"content":"     */"},{"lineNumber":61,"author":{"gitId":"yeoutzer"},"content":"    @FXML"},{"lineNumber":62,"author":{"gitId":"yeoutzer"},"content":"    private void handleUserInput() {"},{"lineNumber":63,"author":{"gitId":"yeoutzer"},"content":"        String input \u003d userInput.getText();"},{"lineNumber":64,"author":{"gitId":"yeoutzer"},"content":"        String response \u003d duke.getResponse(input);"},{"lineNumber":65,"author":{"gitId":"yeoutzer"},"content":"        DialogBox userDialog \u003d DialogBox.getUserDialog(input, userImage);"},{"lineNumber":66,"author":{"gitId":"yeoutzer"},"content":"        DialogBox dukeDialog \u003d DialogBox.getDukeDialog(response, dukeImage);"},{"lineNumber":67,"author":{"gitId":"yeoutzer"},"content":"        addToDialogContainer(userDialog, dukeDialog);"},{"lineNumber":68,"author":{"gitId":"yeoutzer"},"content":"        userInput.clear();"},{"lineNumber":69,"author":{"gitId":"yeoutzer"},"content":"        handleExit(input);"},{"lineNumber":70,"author":{"gitId":"yeoutzer"},"content":"    }"},{"lineNumber":71,"author":{"gitId":"yeoutzer"},"content":""},{"lineNumber":72,"author":{"gitId":"yeoutzer"},"content":"    private void addToDialogContainer(DialogBox userDialog, DialogBox dukeDialog) {"},{"lineNumber":73,"author":{"gitId":"yeoutzer"},"content":"        dialogContainer.getChildren().addAll(userDialog, dukeDialog);"},{"lineNumber":74,"author":{"gitId":"yeoutzer"},"content":"    }"},{"lineNumber":75,"author":{"gitId":"yeoutzer"},"content":""},{"lineNumber":76,"author":{"gitId":"yeoutzer"},"content":"    private void handleExit(String input) {"},{"lineNumber":77,"author":{"gitId":"yeoutzer"},"content":"        if (input.equals(\"bye\")) {"},{"lineNumber":78,"author":{"gitId":"yeoutzer"},"content":"            Timer timer \u003d new Timer();"},{"lineNumber":79,"author":{"gitId":"yeoutzer"},"content":"            TimerTask timerTask \u003d new TimerTask() {"},{"lineNumber":80,"author":{"gitId":"yeoutzer"},"content":"                @Override"},{"lineNumber":81,"author":{"gitId":"yeoutzer"},"content":"                public void run() {"},{"lineNumber":82,"author":{"gitId":"yeoutzer"},"content":"                    Platform.exit();"},{"lineNumber":83,"author":{"gitId":"yeoutzer"},"content":"                    System.exit(0);"},{"lineNumber":84,"author":{"gitId":"yeoutzer"},"content":"                }"},{"lineNumber":85,"author":{"gitId":"yeoutzer"},"content":"            };"},{"lineNumber":86,"author":{"gitId":"yeoutzer"},"content":"            timer.schedule(timerTask, 700);"},{"lineNumber":87,"author":{"gitId":"yeoutzer"},"content":"        }"},{"lineNumber":88,"author":{"gitId":"yeoutzer"},"content":"    }"},{"lineNumber":89,"author":{"gitId":"yeoutzer"},"content":"}"}],"authorContributionMap":{"yeoutzer":89}},{"path":"src/main/java/duke/parser/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yeoutzer"},"content":"package duke.parser;"},{"lineNumber":2,"author":{"gitId":"yeoutzer"},"content":""},{"lineNumber":3,"author":{"gitId":"yeoutzer"},"content":"import duke.commands.AddCommand;"},{"lineNumber":4,"author":{"gitId":"yeoutzer"},"content":"import duke.commands.Command;"},{"lineNumber":5,"author":{"gitId":"yeoutzer"},"content":"import duke.commands.DeleteCommand;"},{"lineNumber":6,"author":{"gitId":"yeoutzer"},"content":"import duke.commands.DoneCommand;"},{"lineNumber":7,"author":{"gitId":"yeoutzer"},"content":"import duke.commands.ExitCommand;"},{"lineNumber":8,"author":{"gitId":"yeoutzer"},"content":"import duke.commands.FindCommand;"},{"lineNumber":9,"author":{"gitId":"yeoutzer"},"content":"import duke.commands.ListCommand;"},{"lineNumber":10,"author":{"gitId":"yeoutzer"},"content":""},{"lineNumber":11,"author":{"gitId":"yeoutzer"},"content":"/**"},{"lineNumber":12,"author":{"gitId":"yeoutzer"},"content":" * Responsible for parsing command line inputs."},{"lineNumber":13,"author":{"gitId":"yeoutzer"},"content":" */"},{"lineNumber":14,"author":{"gitId":"yeoutzer"},"content":"public class Parser {"},{"lineNumber":15,"author":{"gitId":"yeoutzer"},"content":"    /**"},{"lineNumber":16,"author":{"gitId":"yeoutzer"},"content":"     * Returns the type of Command indicated by the user input."},{"lineNumber":17,"author":{"gitId":"yeoutzer"},"content":"     *"},{"lineNumber":18,"author":{"gitId":"yeoutzer"},"content":"     * @param fullCommand User input to be parsed."},{"lineNumber":19,"author":{"gitId":"yeoutzer"},"content":"     * @return Command indicated by user input."},{"lineNumber":20,"author":{"gitId":"yeoutzer"},"content":"     */"},{"lineNumber":21,"author":{"gitId":"yeoutzer"},"content":"    public static Command parse(String fullCommand) {"},{"lineNumber":22,"author":{"gitId":"yeoutzer"},"content":"        Command command;"},{"lineNumber":23,"author":{"gitId":"yeoutzer"},"content":"        if (isExitCommand(fullCommand)) {"},{"lineNumber":24,"author":{"gitId":"yeoutzer"},"content":"            command \u003d new ExitCommand();"},{"lineNumber":25,"author":{"gitId":"yeoutzer"},"content":"        } else if (isListCommand(fullCommand)) {"},{"lineNumber":26,"author":{"gitId":"yeoutzer"},"content":"            command \u003d new ListCommand();"},{"lineNumber":27,"author":{"gitId":"yeoutzer"},"content":"        } else {"},{"lineNumber":28,"author":{"gitId":"yeoutzer"},"content":"            String[] splitCommands \u003d fullCommand.split(\" \");"},{"lineNumber":29,"author":{"gitId":"yeoutzer"},"content":"            if (isDoneCommand(splitCommands[0])) {"},{"lineNumber":30,"author":{"gitId":"yeoutzer"},"content":"                command \u003d new DoneCommand(fullCommand);"},{"lineNumber":31,"author":{"gitId":"yeoutzer"},"content":"            } else if (isDeleteCommand(splitCommands[0])) {"},{"lineNumber":32,"author":{"gitId":"yeoutzer"},"content":"                command \u003d new DeleteCommand(fullCommand);"},{"lineNumber":33,"author":{"gitId":"yeoutzer"},"content":"            } else if (isFindCommand(splitCommands[0])) {"},{"lineNumber":34,"author":{"gitId":"yeoutzer"},"content":"                command \u003d new FindCommand(fullCommand);"},{"lineNumber":35,"author":{"gitId":"yeoutzer"},"content":"            } else {"},{"lineNumber":36,"author":{"gitId":"yeoutzer"},"content":"                command \u003d new AddCommand(fullCommand);"},{"lineNumber":37,"author":{"gitId":"yeoutzer"},"content":"            }"},{"lineNumber":38,"author":{"gitId":"yeoutzer"},"content":"        }"},{"lineNumber":39,"author":{"gitId":"yeoutzer"},"content":"        return command;"},{"lineNumber":40,"author":{"gitId":"yeoutzer"},"content":"    }"},{"lineNumber":41,"author":{"gitId":"yeoutzer"},"content":""},{"lineNumber":42,"author":{"gitId":"yeoutzer"},"content":"    private static boolean isExitCommand(String fullCommand) {"},{"lineNumber":43,"author":{"gitId":"yeoutzer"},"content":"        return fullCommand.equals(\"bye\");"},{"lineNumber":44,"author":{"gitId":"yeoutzer"},"content":"    }"},{"lineNumber":45,"author":{"gitId":"yeoutzer"},"content":""},{"lineNumber":46,"author":{"gitId":"yeoutzer"},"content":"    private static boolean isListCommand(String fullCommand) {"},{"lineNumber":47,"author":{"gitId":"yeoutzer"},"content":"        return fullCommand.equals(\"list\");"},{"lineNumber":48,"author":{"gitId":"yeoutzer"},"content":"    }"},{"lineNumber":49,"author":{"gitId":"yeoutzer"},"content":""},{"lineNumber":50,"author":{"gitId":"yeoutzer"},"content":"    private static boolean isDoneCommand(String command) {"},{"lineNumber":51,"author":{"gitId":"yeoutzer"},"content":"        return command.equals(\"done\");"},{"lineNumber":52,"author":{"gitId":"yeoutzer"},"content":"    }"},{"lineNumber":53,"author":{"gitId":"yeoutzer"},"content":""},{"lineNumber":54,"author":{"gitId":"yeoutzer"},"content":"    private static boolean isDeleteCommand(String command) {"},{"lineNumber":55,"author":{"gitId":"yeoutzer"},"content":"        return command.equals(\"delete\");"},{"lineNumber":56,"author":{"gitId":"yeoutzer"},"content":"    }"},{"lineNumber":57,"author":{"gitId":"yeoutzer"},"content":""},{"lineNumber":58,"author":{"gitId":"yeoutzer"},"content":"    private static boolean isFindCommand(String command) {"},{"lineNumber":59,"author":{"gitId":"yeoutzer"},"content":"        return command.equals(\"find\");"},{"lineNumber":60,"author":{"gitId":"yeoutzer"},"content":"    }"},{"lineNumber":61,"author":{"gitId":"yeoutzer"},"content":"}"}],"authorContributionMap":{"yeoutzer":61}},{"path":"src/main/java/duke/storage/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yeoutzer"},"content":"package duke.storage;"},{"lineNumber":2,"author":{"gitId":"yeoutzer"},"content":""},{"lineNumber":3,"author":{"gitId":"yeoutzer"},"content":"import java.io.File;"},{"lineNumber":4,"author":{"gitId":"yeoutzer"},"content":"import java.io.FileNotFoundException;"},{"lineNumber":5,"author":{"gitId":"yeoutzer"},"content":"import java.io.FileWriter;"},{"lineNumber":6,"author":{"gitId":"yeoutzer"},"content":"import java.io.IOException;"},{"lineNumber":7,"author":{"gitId":"yeoutzer"},"content":"import java.time.LocalDate;"},{"lineNumber":8,"author":{"gitId":"yeoutzer"},"content":"import java.time.LocalTime;"},{"lineNumber":9,"author":{"gitId":"yeoutzer"},"content":"import java.time.format.DateTimeFormatter;"},{"lineNumber":10,"author":{"gitId":"yeoutzer"},"content":"import java.time.format.DateTimeParseException;"},{"lineNumber":11,"author":{"gitId":"yeoutzer"},"content":"import java.util.ArrayList;"},{"lineNumber":12,"author":{"gitId":"yeoutzer"},"content":"import java.util.List;"},{"lineNumber":13,"author":{"gitId":"yeoutzer"},"content":"import java.util.Scanner;"},{"lineNumber":14,"author":{"gitId":"yeoutzer"},"content":""},{"lineNumber":15,"author":{"gitId":"yeoutzer"},"content":"import duke.exceptions.SaveFileInvalidFormatException;"},{"lineNumber":16,"author":{"gitId":"yeoutzer"},"content":"import duke.tasks.DeadlineTask;"},{"lineNumber":17,"author":{"gitId":"yeoutzer"},"content":"import duke.tasks.EventTask;"},{"lineNumber":18,"author":{"gitId":"yeoutzer"},"content":"import duke.tasks.FixedDurationTask;"},{"lineNumber":19,"author":{"gitId":"yeoutzer"},"content":"import duke.tasks.Task;"},{"lineNumber":20,"author":{"gitId":"yeoutzer"},"content":"import duke.tasks.TaskList;"},{"lineNumber":21,"author":{"gitId":"yeoutzer"},"content":"import duke.tasks.TodoTask;"},{"lineNumber":22,"author":{"gitId":"yeoutzer"},"content":""},{"lineNumber":23,"author":{"gitId":"yeoutzer"},"content":"/**"},{"lineNumber":24,"author":{"gitId":"yeoutzer"},"content":" * Responsible for reading and editing save file contents."},{"lineNumber":25,"author":{"gitId":"yeoutzer"},"content":" */"},{"lineNumber":26,"author":{"gitId":"yeoutzer"},"content":"public class Storage {"},{"lineNumber":27,"author":{"gitId":"yeoutzer"},"content":"    private String filePath;"},{"lineNumber":28,"author":{"gitId":"yeoutzer"},"content":"    private final char complete \u003d \u00271\u0027;"},{"lineNumber":29,"author":{"gitId":"yeoutzer"},"content":"    private final char incomplete \u003d \u00270\u0027;"},{"lineNumber":30,"author":{"gitId":"yeoutzer"},"content":""},{"lineNumber":31,"author":{"gitId":"yeoutzer"},"content":"    /**"},{"lineNumber":32,"author":{"gitId":"yeoutzer"},"content":"     * Constructs a Storage with the given save file location."},{"lineNumber":33,"author":{"gitId":"yeoutzer"},"content":"     *"},{"lineNumber":34,"author":{"gitId":"yeoutzer"},"content":"     * @param filePath File path of the save file."},{"lineNumber":35,"author":{"gitId":"yeoutzer"},"content":"     */"},{"lineNumber":36,"author":{"gitId":"yeoutzer"},"content":"    public Storage(String filePath) {"},{"lineNumber":37,"author":{"gitId":"yeoutzer"},"content":"        assert filePath.length() \u003e 0;"},{"lineNumber":38,"author":{"gitId":"yeoutzer"},"content":""},{"lineNumber":39,"author":{"gitId":"yeoutzer"},"content":"        this.filePath \u003d filePath;"},{"lineNumber":40,"author":{"gitId":"yeoutzer"},"content":"    }"},{"lineNumber":41,"author":{"gitId":"yeoutzer"},"content":""},{"lineNumber":42,"author":{"gitId":"yeoutzer"},"content":"    /**"},{"lineNumber":43,"author":{"gitId":"yeoutzer"},"content":"     * Creates the directory and save file if it does not exist."},{"lineNumber":44,"author":{"gitId":"yeoutzer"},"content":"     *"},{"lineNumber":45,"author":{"gitId":"yeoutzer"},"content":"     * @throws IOException If there is error while creating directory or file."},{"lineNumber":46,"author":{"gitId":"yeoutzer"},"content":"     */"},{"lineNumber":47,"author":{"gitId":"yeoutzer"},"content":"    public void initialize() throws IOException {"},{"lineNumber":48,"author":{"gitId":"yeoutzer"},"content":"        File file \u003d new File(filePath);"},{"lineNumber":49,"author":{"gitId":"yeoutzer"},"content":"        File directory \u003d new File(file.getParent());"},{"lineNumber":50,"author":{"gitId":"yeoutzer"},"content":"        createDirectory(directory);"},{"lineNumber":51,"author":{"gitId":"yeoutzer"},"content":"        createFile(file);"},{"lineNumber":52,"author":{"gitId":"yeoutzer"},"content":"    }"},{"lineNumber":53,"author":{"gitId":"yeoutzer"},"content":""},{"lineNumber":54,"author":{"gitId":"yeoutzer"},"content":"    private void createDirectory(File directory) {"},{"lineNumber":55,"author":{"gitId":"yeoutzer"},"content":"        directory.mkdirs();"},{"lineNumber":56,"author":{"gitId":"yeoutzer"},"content":"    }"},{"lineNumber":57,"author":{"gitId":"yeoutzer"},"content":""},{"lineNumber":58,"author":{"gitId":"yeoutzer"},"content":"    private void createFile(File file) throws IOException {"},{"lineNumber":59,"author":{"gitId":"yeoutzer"},"content":"        file.createNewFile();"},{"lineNumber":60,"author":{"gitId":"yeoutzer"},"content":"    }"},{"lineNumber":61,"author":{"gitId":"yeoutzer"},"content":""},{"lineNumber":62,"author":{"gitId":"yeoutzer"},"content":"    /**"},{"lineNumber":63,"author":{"gitId":"yeoutzer"},"content":"     * Returns the List of Task saved in the save file."},{"lineNumber":64,"author":{"gitId":"yeoutzer"},"content":"     *"},{"lineNumber":65,"author":{"gitId":"yeoutzer"},"content":"     * @return List of Task saved in the save file."},{"lineNumber":66,"author":{"gitId":"yeoutzer"},"content":"     * @throws SaveFileInvalidFormatException If format of save file is invalid."},{"lineNumber":67,"author":{"gitId":"yeoutzer"},"content":"     * @throws FileNotFoundException If save file is not found."},{"lineNumber":68,"author":{"gitId":"yeoutzer"},"content":"     * @throws DateTimeParseException If format of date and time is invalid."},{"lineNumber":69,"author":{"gitId":"yeoutzer"},"content":"     */"},{"lineNumber":70,"author":{"gitId":"yeoutzer"},"content":"    public List\u003cTask\u003e load() throws SaveFileInvalidFormatException,"},{"lineNumber":71,"author":{"gitId":"yeoutzer"},"content":"            FileNotFoundException, DateTimeParseException {"},{"lineNumber":72,"author":{"gitId":"yeoutzer"},"content":"        List\u003cTask\u003e taskList \u003d new ArrayList\u003c\u003e();"},{"lineNumber":73,"author":{"gitId":"yeoutzer"},"content":"        File file \u003d new File(filePath);"},{"lineNumber":74,"author":{"gitId":"yeoutzer"},"content":"        Scanner reader \u003d new Scanner(file);"},{"lineNumber":75,"author":{"gitId":"yeoutzer"},"content":""},{"lineNumber":76,"author":{"gitId":"yeoutzer"},"content":"        while (reader.hasNextLine()) {"},{"lineNumber":77,"author":{"gitId":"yeoutzer"},"content":"            String taskString \u003d reader.nextLine();"},{"lineNumber":78,"author":{"gitId":"yeoutzer"},"content":"            checkSaveStringLength(taskString);"},{"lineNumber":79,"author":{"gitId":"yeoutzer"},"content":""},{"lineNumber":80,"author":{"gitId":"yeoutzer"},"content":"            char taskCompletion \u003d taskString.charAt(4);"},{"lineNumber":81,"author":{"gitId":"yeoutzer"},"content":"            checkTaskCompletionFormat(taskCompletion);"},{"lineNumber":82,"author":{"gitId":"yeoutzer"},"content":""},{"lineNumber":83,"author":{"gitId":"yeoutzer"},"content":"            Task task \u003d createTasks(taskString);"},{"lineNumber":84,"author":{"gitId":"yeoutzer"},"content":""},{"lineNumber":85,"author":{"gitId":"yeoutzer"},"content":"            assert (taskCompletion \u003d\u003d \u00270\u0027 || taskCompletion \u003d\u003d \u00271\u0027);"},{"lineNumber":86,"author":{"gitId":"yeoutzer"},"content":"            markTaskAsDone(task, taskCompletion);"},{"lineNumber":87,"author":{"gitId":"yeoutzer"},"content":""},{"lineNumber":88,"author":{"gitId":"yeoutzer"},"content":""},{"lineNumber":89,"author":{"gitId":"yeoutzer"},"content":"            taskList.add(task);"},{"lineNumber":90,"author":{"gitId":"yeoutzer"},"content":"        }"},{"lineNumber":91,"author":{"gitId":"yeoutzer"},"content":"        return taskList;"},{"lineNumber":92,"author":{"gitId":"yeoutzer"},"content":"    }"},{"lineNumber":93,"author":{"gitId":"yeoutzer"},"content":""},{"lineNumber":94,"author":{"gitId":"yeoutzer"},"content":"    private void markTaskAsDone(Task task, char taskCompletion) {"},{"lineNumber":95,"author":{"gitId":"yeoutzer"},"content":"        if (taskCompletion \u003d\u003d complete) {"},{"lineNumber":96,"author":{"gitId":"yeoutzer"},"content":"            task.markAsDone();"},{"lineNumber":97,"author":{"gitId":"yeoutzer"},"content":"        }"},{"lineNumber":98,"author":{"gitId":"yeoutzer"},"content":"    }"},{"lineNumber":99,"author":{"gitId":"yeoutzer"},"content":""},{"lineNumber":100,"author":{"gitId":"yeoutzer"},"content":"    private Task createTasks(String taskString) throws SaveFileInvalidFormatException {"},{"lineNumber":101,"author":{"gitId":"yeoutzer"},"content":"        char taskType \u003d taskString.charAt(0);"},{"lineNumber":102,"author":{"gitId":"yeoutzer"},"content":"        if (isTodoTask(taskType)) {"},{"lineNumber":103,"author":{"gitId":"yeoutzer"},"content":"            return createTodoTask(taskString);"},{"lineNumber":104,"author":{"gitId":"yeoutzer"},"content":"        } else if (isDeadlineTask(taskType)) {"},{"lineNumber":105,"author":{"gitId":"yeoutzer"},"content":"            return createDeadlineTask(taskString);"},{"lineNumber":106,"author":{"gitId":"yeoutzer"},"content":"        } else if (isEventTask(taskType)) {"},{"lineNumber":107,"author":{"gitId":"yeoutzer"},"content":"            return createEventTask(taskString);"},{"lineNumber":108,"author":{"gitId":"yeoutzer"},"content":"        } else if (isFixedDurationTask(taskType)) {"},{"lineNumber":109,"author":{"gitId":"yeoutzer"},"content":"            return createFixedDurationTask(taskString);"},{"lineNumber":110,"author":{"gitId":"yeoutzer"},"content":"        } else {"},{"lineNumber":111,"author":{"gitId":"yeoutzer"},"content":"            throw new SaveFileInvalidFormatException();"},{"lineNumber":112,"author":{"gitId":"yeoutzer"},"content":"        }"},{"lineNumber":113,"author":{"gitId":"yeoutzer"},"content":"    }"},{"lineNumber":114,"author":{"gitId":"yeoutzer"},"content":""},{"lineNumber":115,"author":{"gitId":"yeoutzer"},"content":"    private boolean isTodoTask(char taskType) {"},{"lineNumber":116,"author":{"gitId":"yeoutzer"},"content":"        return taskType \u003d\u003d \u0027T\u0027;"},{"lineNumber":117,"author":{"gitId":"yeoutzer"},"content":"    }"},{"lineNumber":118,"author":{"gitId":"yeoutzer"},"content":""},{"lineNumber":119,"author":{"gitId":"yeoutzer"},"content":"    private boolean isDeadlineTask(char taskType) {"},{"lineNumber":120,"author":{"gitId":"yeoutzer"},"content":"        return taskType \u003d\u003d \u0027D\u0027;"},{"lineNumber":121,"author":{"gitId":"yeoutzer"},"content":"    }"},{"lineNumber":122,"author":{"gitId":"yeoutzer"},"content":""},{"lineNumber":123,"author":{"gitId":"yeoutzer"},"content":"    private boolean isEventTask(char taskType) {"},{"lineNumber":124,"author":{"gitId":"yeoutzer"},"content":"        return taskType \u003d\u003d \u0027E\u0027;"},{"lineNumber":125,"author":{"gitId":"yeoutzer"},"content":"    }"},{"lineNumber":126,"author":{"gitId":"yeoutzer"},"content":""},{"lineNumber":127,"author":{"gitId":"yeoutzer"},"content":"    private boolean isFixedDurationTask(char taskType) {"},{"lineNumber":128,"author":{"gitId":"yeoutzer"},"content":"        return taskType \u003d\u003d \u0027F\u0027;"},{"lineNumber":129,"author":{"gitId":"yeoutzer"},"content":"    }"},{"lineNumber":130,"author":{"gitId":"yeoutzer"},"content":""},{"lineNumber":131,"author":{"gitId":"yeoutzer"},"content":"    private void checkSaveStringLength(String taskString) throws SaveFileInvalidFormatException {"},{"lineNumber":132,"author":{"gitId":"yeoutzer"},"content":"        if (taskString.length() \u003c 9) {"},{"lineNumber":133,"author":{"gitId":"yeoutzer"},"content":"            throw new SaveFileInvalidFormatException();"},{"lineNumber":134,"author":{"gitId":"yeoutzer"},"content":"        }"},{"lineNumber":135,"author":{"gitId":"yeoutzer"},"content":"    }"},{"lineNumber":136,"author":{"gitId":"yeoutzer"},"content":""},{"lineNumber":137,"author":{"gitId":"yeoutzer"},"content":"    private void checkTaskCompletionFormat(char taskCompletion) throws SaveFileInvalidFormatException {"},{"lineNumber":138,"author":{"gitId":"yeoutzer"},"content":"        if (isWrongTaskCompletionFormat(taskCompletion)) {"},{"lineNumber":139,"author":{"gitId":"yeoutzer"},"content":"            throw new SaveFileInvalidFormatException();"},{"lineNumber":140,"author":{"gitId":"yeoutzer"},"content":"        }"},{"lineNumber":141,"author":{"gitId":"yeoutzer"},"content":"    }"},{"lineNumber":142,"author":{"gitId":"yeoutzer"},"content":""},{"lineNumber":143,"author":{"gitId":"yeoutzer"},"content":"    private boolean isWrongTaskCompletionFormat(char taskCompletion) {"},{"lineNumber":144,"author":{"gitId":"yeoutzer"},"content":"        return taskCompletion !\u003d complete \u0026\u0026 taskCompletion !\u003d incomplete;"},{"lineNumber":145,"author":{"gitId":"yeoutzer"},"content":"    }"},{"lineNumber":146,"author":{"gitId":"yeoutzer"},"content":""},{"lineNumber":147,"author":{"gitId":"yeoutzer"},"content":"    private TodoTask createTodoTask(String taskString) {"},{"lineNumber":148,"author":{"gitId":"yeoutzer"},"content":"        String taskDescription \u003d taskString.substring(8);"},{"lineNumber":149,"author":{"gitId":"yeoutzer"},"content":"        return new TodoTask(taskDescription);"},{"lineNumber":150,"author":{"gitId":"yeoutzer"},"content":"    }"},{"lineNumber":151,"author":{"gitId":"yeoutzer"},"content":""},{"lineNumber":152,"author":{"gitId":"yeoutzer"},"content":"    private DeadlineTask createDeadlineTask(String taskString) throws SaveFileInvalidFormatException {"},{"lineNumber":153,"author":{"gitId":"yeoutzer"},"content":"        int dateTimeIndex \u003d taskString.substring(8).indexOf(\u0027|\u0027);"},{"lineNumber":154,"author":{"gitId":"yeoutzer"},"content":"        if (hasNoDateTimeGiven(dateTimeIndex)) {"},{"lineNumber":155,"author":{"gitId":"yeoutzer"},"content":"            throw new SaveFileInvalidFormatException();"},{"lineNumber":156,"author":{"gitId":"yeoutzer"},"content":"        }"},{"lineNumber":157,"author":{"gitId":"yeoutzer"},"content":""},{"lineNumber":158,"author":{"gitId":"yeoutzer"},"content":"        String taskDescription \u003d taskString.substring(8, dateTimeIndex + 8).trim();"},{"lineNumber":159,"author":{"gitId":"yeoutzer"},"content":"        String taskDateTime \u003d taskString.substring(dateTimeIndex + 9).trim();"},{"lineNumber":160,"author":{"gitId":"yeoutzer"},"content":"        if (hasNoDateGiven(taskDateTime)) {"},{"lineNumber":161,"author":{"gitId":"yeoutzer"},"content":"            throw new SaveFileInvalidFormatException();"},{"lineNumber":162,"author":{"gitId":"yeoutzer"},"content":"        }"},{"lineNumber":163,"author":{"gitId":"yeoutzer"},"content":""},{"lineNumber":164,"author":{"gitId":"yeoutzer"},"content":"        int timeIndex \u003d taskDateTime.indexOf(\u0027|\u0027);"},{"lineNumber":165,"author":{"gitId":"yeoutzer"},"content":"        if (hasNoTimeGiven(timeIndex)) {"},{"lineNumber":166,"author":{"gitId":"yeoutzer"},"content":"            return createDeadlineTaskWithDate(taskDateTime, taskDescription);"},{"lineNumber":167,"author":{"gitId":"yeoutzer"},"content":"        } else {"},{"lineNumber":168,"author":{"gitId":"yeoutzer"},"content":"            return createDeadlineTaskWithDateTime(taskDateTime, taskDescription, timeIndex);"},{"lineNumber":169,"author":{"gitId":"yeoutzer"},"content":"        }"},{"lineNumber":170,"author":{"gitId":"yeoutzer"},"content":"    }"},{"lineNumber":171,"author":{"gitId":"yeoutzer"},"content":""},{"lineNumber":172,"author":{"gitId":"yeoutzer"},"content":"    private boolean hasNoDateTimeGiven(int dateTimeIndex) {"},{"lineNumber":173,"author":{"gitId":"yeoutzer"},"content":"        return dateTimeIndex \u003d\u003d -1;"},{"lineNumber":174,"author":{"gitId":"yeoutzer"},"content":"    }"},{"lineNumber":175,"author":{"gitId":"yeoutzer"},"content":""},{"lineNumber":176,"author":{"gitId":"yeoutzer"},"content":"    private boolean hasNoDateGiven(String taskDateTime) {"},{"lineNumber":177,"author":{"gitId":"yeoutzer"},"content":"        return taskDateTime.isEmpty();"},{"lineNumber":178,"author":{"gitId":"yeoutzer"},"content":"    }"},{"lineNumber":179,"author":{"gitId":"yeoutzer"},"content":""},{"lineNumber":180,"author":{"gitId":"yeoutzer"},"content":"    private boolean hasNoTimeGiven(int timeIndex) {"},{"lineNumber":181,"author":{"gitId":"yeoutzer"},"content":"        return timeIndex \u003d\u003d -1;"},{"lineNumber":182,"author":{"gitId":"yeoutzer"},"content":"    }"},{"lineNumber":183,"author":{"gitId":"yeoutzer"},"content":""},{"lineNumber":184,"author":{"gitId":"yeoutzer"},"content":"    private DeadlineTask createDeadlineTaskWithDate(String taskDateTime, String taskDescription) {"},{"lineNumber":185,"author":{"gitId":"yeoutzer"},"content":"        LocalDate taskDate \u003d LocalDate.parse(taskDateTime);"},{"lineNumber":186,"author":{"gitId":"yeoutzer"},"content":"        return new DeadlineTask(taskDescription, taskDate);"},{"lineNumber":187,"author":{"gitId":"yeoutzer"},"content":"    }"},{"lineNumber":188,"author":{"gitId":"yeoutzer"},"content":""},{"lineNumber":189,"author":{"gitId":"yeoutzer"},"content":"    private DeadlineTask createDeadlineTaskWithDateTime(String taskDateTime,"},{"lineNumber":190,"author":{"gitId":"yeoutzer"},"content":"            String taskDescription, int timeIndex) {"},{"lineNumber":191,"author":{"gitId":"yeoutzer"},"content":"        String taskDateString \u003d taskDateTime.substring(0, timeIndex).trim();"},{"lineNumber":192,"author":{"gitId":"yeoutzer"},"content":"        LocalDate taskDate \u003d LocalDate.parse(taskDateString);"},{"lineNumber":193,"author":{"gitId":"yeoutzer"},"content":"        String taskTimeString \u003d taskDateTime.substring(timeIndex + 1).trim();"},{"lineNumber":194,"author":{"gitId":"yeoutzer"},"content":"        LocalTime taskTime \u003d LocalTime"},{"lineNumber":195,"author":{"gitId":"yeoutzer"},"content":"                .parse(taskTimeString, DateTimeFormatter.ofPattern(\"HHmm\"));"},{"lineNumber":196,"author":{"gitId":"yeoutzer"},"content":"        return new DeadlineTask(taskDescription, taskDate, taskTime);"},{"lineNumber":197,"author":{"gitId":"yeoutzer"},"content":"    }"},{"lineNumber":198,"author":{"gitId":"yeoutzer"},"content":""},{"lineNumber":199,"author":{"gitId":"yeoutzer"},"content":"    private EventTask createEventTask(String taskString) throws SaveFileInvalidFormatException {"},{"lineNumber":200,"author":{"gitId":"yeoutzer"},"content":"        int dateTimeIndex \u003d taskString.substring(8).indexOf(\u0027|\u0027);"},{"lineNumber":201,"author":{"gitId":"yeoutzer"},"content":"        if (hasNoDateTimeGiven(dateTimeIndex)) {"},{"lineNumber":202,"author":{"gitId":"yeoutzer"},"content":"            throw new SaveFileInvalidFormatException();"},{"lineNumber":203,"author":{"gitId":"yeoutzer"},"content":"        }"},{"lineNumber":204,"author":{"gitId":"yeoutzer"},"content":""},{"lineNumber":205,"author":{"gitId":"yeoutzer"},"content":"        String taskDescription \u003d taskString.substring(8, dateTimeIndex + 8).trim();"},{"lineNumber":206,"author":{"gitId":"yeoutzer"},"content":"        String taskDateTime \u003d taskString.substring(dateTimeIndex + 9).trim();"},{"lineNumber":207,"author":{"gitId":"yeoutzer"},"content":"        if (hasNoDateGiven(taskDateTime)) {"},{"lineNumber":208,"author":{"gitId":"yeoutzer"},"content":"            throw new SaveFileInvalidFormatException();"},{"lineNumber":209,"author":{"gitId":"yeoutzer"},"content":"        }"},{"lineNumber":210,"author":{"gitId":"yeoutzer"},"content":""},{"lineNumber":211,"author":{"gitId":"yeoutzer"},"content":"        int timeIndex \u003d taskDateTime.indexOf(\u0027|\u0027);"},{"lineNumber":212,"author":{"gitId":"yeoutzer"},"content":"        if (hasNoTimeGiven(timeIndex)) {"},{"lineNumber":213,"author":{"gitId":"yeoutzer"},"content":"            return createEventTaskWithDate(taskDateTime, taskDescription);"},{"lineNumber":214,"author":{"gitId":"yeoutzer"},"content":"        } else {"},{"lineNumber":215,"author":{"gitId":"yeoutzer"},"content":"            String taskDateString \u003d taskDateTime.substring(0, timeIndex).trim();"},{"lineNumber":216,"author":{"gitId":"yeoutzer"},"content":"            LocalDate taskDate \u003d LocalDate.parse(taskDateString);"},{"lineNumber":217,"author":{"gitId":"yeoutzer"},"content":"            String taskTimeString \u003d taskDateTime.substring(timeIndex + 1).trim();"},{"lineNumber":218,"author":{"gitId":"yeoutzer"},"content":""},{"lineNumber":219,"author":{"gitId":"yeoutzer"},"content":"            int endTimeIndex \u003d taskTimeString.indexOf(\u0027|\u0027);"},{"lineNumber":220,"author":{"gitId":"yeoutzer"},"content":"            if (hasNoEndTime(endTimeIndex)) {"},{"lineNumber":221,"author":{"gitId":"yeoutzer"},"content":"                return createEventTaskWithStartTime(taskTimeString, taskDescription, taskDate);"},{"lineNumber":222,"author":{"gitId":"yeoutzer"},"content":"            } else {"},{"lineNumber":223,"author":{"gitId":"yeoutzer"},"content":"                return createEventTaskWithEndTime(taskTimeString, taskDescription, taskDate, endTimeIndex);"},{"lineNumber":224,"author":{"gitId":"yeoutzer"},"content":"            }"},{"lineNumber":225,"author":{"gitId":"yeoutzer"},"content":"        }"},{"lineNumber":226,"author":{"gitId":"yeoutzer"},"content":"    }"},{"lineNumber":227,"author":{"gitId":"yeoutzer"},"content":""},{"lineNumber":228,"author":{"gitId":"yeoutzer"},"content":"    private boolean hasNoEndTime(int endTimeIndex) {"},{"lineNumber":229,"author":{"gitId":"yeoutzer"},"content":"        return endTimeIndex \u003d\u003d -1;"},{"lineNumber":230,"author":{"gitId":"yeoutzer"},"content":"    }"},{"lineNumber":231,"author":{"gitId":"yeoutzer"},"content":""},{"lineNumber":232,"author":{"gitId":"yeoutzer"},"content":"    private EventTask createEventTaskWithDate(String taskDateTime, String taskDescription) {"},{"lineNumber":233,"author":{"gitId":"yeoutzer"},"content":"        LocalDate taskDate \u003d LocalDate.parse(taskDateTime);"},{"lineNumber":234,"author":{"gitId":"yeoutzer"},"content":"        return new EventTask(taskDescription, taskDate);"},{"lineNumber":235,"author":{"gitId":"yeoutzer"},"content":"    }"},{"lineNumber":236,"author":{"gitId":"yeoutzer"},"content":""},{"lineNumber":237,"author":{"gitId":"yeoutzer"},"content":"    private EventTask createEventTaskWithStartTime(String taskTimeString,"},{"lineNumber":238,"author":{"gitId":"yeoutzer"},"content":"            String taskDescription, LocalDate taskDate) {"},{"lineNumber":239,"author":{"gitId":"yeoutzer"},"content":"        LocalTime taskStartTime \u003d LocalTime"},{"lineNumber":240,"author":{"gitId":"yeoutzer"},"content":"                .parse(taskTimeString, DateTimeFormatter.ofPattern(\"HHmm\"));"},{"lineNumber":241,"author":{"gitId":"yeoutzer"},"content":"        return new EventTask(taskDescription, taskDate, taskStartTime);"},{"lineNumber":242,"author":{"gitId":"yeoutzer"},"content":"    }"},{"lineNumber":243,"author":{"gitId":"yeoutzer"},"content":""},{"lineNumber":244,"author":{"gitId":"yeoutzer"},"content":"    private EventTask createEventTaskWithEndTime(String taskTimeString,"},{"lineNumber":245,"author":{"gitId":"yeoutzer"},"content":"            String taskDescription, LocalDate taskDate, int endTimeIndex) {"},{"lineNumber":246,"author":{"gitId":"yeoutzer"},"content":"        String taskStartTimeString \u003d taskTimeString.substring(0, endTimeIndex).trim();"},{"lineNumber":247,"author":{"gitId":"yeoutzer"},"content":"        LocalTime taskStartTime \u003d LocalTime"},{"lineNumber":248,"author":{"gitId":"yeoutzer"},"content":"                .parse(taskStartTimeString, DateTimeFormatter.ofPattern(\"HHmm\"));"},{"lineNumber":249,"author":{"gitId":"yeoutzer"},"content":"        String taskEndTimeString \u003d taskTimeString.substring(endTimeIndex + 1).trim();"},{"lineNumber":250,"author":{"gitId":"yeoutzer"},"content":"        LocalTime taskEndTime \u003d LocalTime"},{"lineNumber":251,"author":{"gitId":"yeoutzer"},"content":"                .parse(taskEndTimeString, DateTimeFormatter.ofPattern(\"HHmm\"));"},{"lineNumber":252,"author":{"gitId":"yeoutzer"},"content":"        return new EventTask(taskDescription, taskDate, taskStartTime, taskEndTime);"},{"lineNumber":253,"author":{"gitId":"yeoutzer"},"content":"    }"},{"lineNumber":254,"author":{"gitId":"yeoutzer"},"content":""},{"lineNumber":255,"author":{"gitId":"yeoutzer"},"content":"    private FixedDurationTask createFixedDurationTask(String taskString) throws SaveFileInvalidFormatException {"},{"lineNumber":256,"author":{"gitId":"yeoutzer"},"content":"        int durationIndex \u003d taskString.substring(8).indexOf(\u0027|\u0027);"},{"lineNumber":257,"author":{"gitId":"yeoutzer"},"content":"        if (hasNoDurationGiven(durationIndex)) {"},{"lineNumber":258,"author":{"gitId":"yeoutzer"},"content":"            throw new SaveFileInvalidFormatException();"},{"lineNumber":259,"author":{"gitId":"yeoutzer"},"content":"        }"},{"lineNumber":260,"author":{"gitId":"yeoutzer"},"content":""},{"lineNumber":261,"author":{"gitId":"yeoutzer"},"content":"        String taskDescription \u003d taskString.substring(8, durationIndex + 8).trim();"},{"lineNumber":262,"author":{"gitId":"yeoutzer"},"content":"        String taskDurationString \u003d taskString.substring(durationIndex + 9).trim();"},{"lineNumber":263,"author":{"gitId":"yeoutzer"},"content":"        if (hasNoDurationGiven(taskDurationString)) {"},{"lineNumber":264,"author":{"gitId":"yeoutzer"},"content":"            throw new SaveFileInvalidFormatException();"},{"lineNumber":265,"author":{"gitId":"yeoutzer"},"content":"        }"},{"lineNumber":266,"author":{"gitId":"yeoutzer"},"content":""},{"lineNumber":267,"author":{"gitId":"yeoutzer"},"content":"        int taskDuration \u003d Integer.parseInt(taskDurationString);"},{"lineNumber":268,"author":{"gitId":"yeoutzer"},"content":"        return new FixedDurationTask(taskDescription, taskDuration);"},{"lineNumber":269,"author":{"gitId":"yeoutzer"},"content":"    }"},{"lineNumber":270,"author":{"gitId":"yeoutzer"},"content":""},{"lineNumber":271,"author":{"gitId":"yeoutzer"},"content":"    private boolean hasNoDurationGiven(int durationIndex) {"},{"lineNumber":272,"author":{"gitId":"yeoutzer"},"content":"        return durationIndex \u003d\u003d -1;"},{"lineNumber":273,"author":{"gitId":"yeoutzer"},"content":"    }"},{"lineNumber":274,"author":{"gitId":"yeoutzer"},"content":""},{"lineNumber":275,"author":{"gitId":"yeoutzer"},"content":"    private boolean hasNoDurationGiven(String taskDurationString) {"},{"lineNumber":276,"author":{"gitId":"yeoutzer"},"content":"        return taskDurationString.isEmpty();"},{"lineNumber":277,"author":{"gitId":"yeoutzer"},"content":"    }"},{"lineNumber":278,"author":{"gitId":"yeoutzer"},"content":""},{"lineNumber":279,"author":{"gitId":"yeoutzer"},"content":"    /**"},{"lineNumber":280,"author":{"gitId":"yeoutzer"},"content":"     * Saves the contents of TaskList into save file in the valid format."},{"lineNumber":281,"author":{"gitId":"yeoutzer"},"content":"     *"},{"lineNumber":282,"author":{"gitId":"yeoutzer"},"content":"     * @param tasks TaskList to be saved."},{"lineNumber":283,"author":{"gitId":"yeoutzer"},"content":"     * @throws IOException If there is error while saving the contents."},{"lineNumber":284,"author":{"gitId":"yeoutzer"},"content":"     */"},{"lineNumber":285,"author":{"gitId":"yeoutzer"},"content":"    public void save(TaskList tasks) throws IOException {"},{"lineNumber":286,"author":{"gitId":"yeoutzer"},"content":"        FileWriter fileWriter \u003d new FileWriter(filePath);"},{"lineNumber":287,"author":{"gitId":"yeoutzer"},"content":"        saveContents(fileWriter, tasks);"},{"lineNumber":288,"author":{"gitId":"yeoutzer"},"content":"        fileWriter.close();"},{"lineNumber":289,"author":{"gitId":"yeoutzer"},"content":"    }"},{"lineNumber":290,"author":{"gitId":"yeoutzer"},"content":""},{"lineNumber":291,"author":{"gitId":"yeoutzer"},"content":"    private void saveContents(FileWriter fileWriter, TaskList tasks) throws IOException {"},{"lineNumber":292,"author":{"gitId":"yeoutzer"},"content":"        List\u003cTask\u003e taskList \u003d tasks.getTaskList();"},{"lineNumber":293,"author":{"gitId":"yeoutzer"},"content":"        for (Task task : taskList) {"},{"lineNumber":294,"author":{"gitId":"yeoutzer"},"content":"            String saveLine \u003d task.getSaveString() + \u0027\\n\u0027;"},{"lineNumber":295,"author":{"gitId":"yeoutzer"},"content":"            fileWriter.write(saveLine);"},{"lineNumber":296,"author":{"gitId":"yeoutzer"},"content":"        }"},{"lineNumber":297,"author":{"gitId":"yeoutzer"},"content":"    }"},{"lineNumber":298,"author":{"gitId":"yeoutzer"},"content":""},{"lineNumber":299,"author":{"gitId":"yeoutzer"},"content":""},{"lineNumber":300,"author":{"gitId":"yeoutzer"},"content":""},{"lineNumber":301,"author":{"gitId":"yeoutzer"},"content":"}"}],"authorContributionMap":{"yeoutzer":301}},{"path":"src/main/java/duke/tasks/DeadlineTask.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yeoutzer"},"content":"package duke.tasks;"},{"lineNumber":2,"author":{"gitId":"yeoutzer"},"content":""},{"lineNumber":3,"author":{"gitId":"yeoutzer"},"content":"import java.time.LocalDate;"},{"lineNumber":4,"author":{"gitId":"yeoutzer"},"content":"import java.time.LocalTime;"},{"lineNumber":5,"author":{"gitId":"yeoutzer"},"content":"import java.time.format.DateTimeFormatter;"},{"lineNumber":6,"author":{"gitId":"yeoutzer"},"content":""},{"lineNumber":7,"author":{"gitId":"yeoutzer"},"content":"/**"},{"lineNumber":8,"author":{"gitId":"yeoutzer"},"content":" * Responsible for containing deadline tasks."},{"lineNumber":9,"author":{"gitId":"yeoutzer"},"content":" */"},{"lineNumber":10,"author":{"gitId":"yeoutzer"},"content":"public class DeadlineTask extends Task {"},{"lineNumber":11,"author":{"gitId":"yeoutzer"},"content":"    protected LocalDate date;"},{"lineNumber":12,"author":{"gitId":"yeoutzer"},"content":"    protected LocalTime time;"},{"lineNumber":13,"author":{"gitId":"yeoutzer"},"content":""},{"lineNumber":14,"author":{"gitId":"yeoutzer"},"content":"    /**"},{"lineNumber":15,"author":{"gitId":"yeoutzer"},"content":"     * Constructs a DeadlineTask with the given description and deadline."},{"lineNumber":16,"author":{"gitId":"yeoutzer"},"content":"     *"},{"lineNumber":17,"author":{"gitId":"yeoutzer"},"content":"     * @param description Description of task."},{"lineNumber":18,"author":{"gitId":"yeoutzer"},"content":"     * @param date Deadline of task."},{"lineNumber":19,"author":{"gitId":"yeoutzer"},"content":"     */"},{"lineNumber":20,"author":{"gitId":"yeoutzer"},"content":"    public DeadlineTask(String description, LocalDate date) {"},{"lineNumber":21,"author":{"gitId":"yeoutzer"},"content":"        super(description, \u0027D\u0027);"},{"lineNumber":22,"author":{"gitId":"yeoutzer"},"content":"        this.date \u003d date;"},{"lineNumber":23,"author":{"gitId":"yeoutzer"},"content":"        this.time \u003d null;"},{"lineNumber":24,"author":{"gitId":"yeoutzer"},"content":"    }"},{"lineNumber":25,"author":{"gitId":"yeoutzer"},"content":""},{"lineNumber":26,"author":{"gitId":"yeoutzer"},"content":"    /**"},{"lineNumber":27,"author":{"gitId":"yeoutzer"},"content":"     * Constructs a DeadlineTask with the given description, deadline and time."},{"lineNumber":28,"author":{"gitId":"yeoutzer"},"content":"     *"},{"lineNumber":29,"author":{"gitId":"yeoutzer"},"content":"     * @param description Description of task."},{"lineNumber":30,"author":{"gitId":"yeoutzer"},"content":"     * @param date Deadline of task."},{"lineNumber":31,"author":{"gitId":"yeoutzer"},"content":"     * @param time Deadline timing of task."},{"lineNumber":32,"author":{"gitId":"yeoutzer"},"content":"     */"},{"lineNumber":33,"author":{"gitId":"yeoutzer"},"content":"    public DeadlineTask(String description, LocalDate date, LocalTime time) {"},{"lineNumber":34,"author":{"gitId":"yeoutzer"},"content":"        super(description, \u0027D\u0027);"},{"lineNumber":35,"author":{"gitId":"yeoutzer"},"content":"        this.date \u003d date;"},{"lineNumber":36,"author":{"gitId":"yeoutzer"},"content":"        this.time \u003d time;"},{"lineNumber":37,"author":{"gitId":"yeoutzer"},"content":"    }"},{"lineNumber":38,"author":{"gitId":"yeoutzer"},"content":""},{"lineNumber":39,"author":{"gitId":"yeoutzer"},"content":"    private String getDateSaveString() {"},{"lineNumber":40,"author":{"gitId":"yeoutzer"},"content":"        return this.date.format(DateTimeFormatter.ofPattern(\"yyyy-MM-dd\"));"},{"lineNumber":41,"author":{"gitId":"yeoutzer"},"content":"    }"},{"lineNumber":42,"author":{"gitId":"yeoutzer"},"content":""},{"lineNumber":43,"author":{"gitId":"yeoutzer"},"content":"    private String getTimeSaveString() {"},{"lineNumber":44,"author":{"gitId":"yeoutzer"},"content":"        return this.time \u003d\u003d null"},{"lineNumber":45,"author":{"gitId":"yeoutzer"},"content":"                ? \"\""},{"lineNumber":46,"author":{"gitId":"yeoutzer"},"content":"                : \" | \" + this.time.format(DateTimeFormatter.ofPattern(\"HHmm\"));"},{"lineNumber":47,"author":{"gitId":"yeoutzer"},"content":"    }"},{"lineNumber":48,"author":{"gitId":"yeoutzer"},"content":""},{"lineNumber":49,"author":{"gitId":"yeoutzer"},"content":"    /**"},{"lineNumber":50,"author":{"gitId":"yeoutzer"},"content":"     * Returns the format of string of task to be saved."},{"lineNumber":51,"author":{"gitId":"yeoutzer"},"content":"     *"},{"lineNumber":52,"author":{"gitId":"yeoutzer"},"content":"     * @return String of task to be saved."},{"lineNumber":53,"author":{"gitId":"yeoutzer"},"content":"     */"},{"lineNumber":54,"author":{"gitId":"yeoutzer"},"content":"    @Override"},{"lineNumber":55,"author":{"gitId":"yeoutzer"},"content":"    public String getSaveString() {"},{"lineNumber":56,"author":{"gitId":"yeoutzer"},"content":"        return super.getSaveString() + \" | \" + getDateSaveString() + getTimeSaveString();"},{"lineNumber":57,"author":{"gitId":"yeoutzer"},"content":"    }"},{"lineNumber":58,"author":{"gitId":"yeoutzer"},"content":""},{"lineNumber":59,"author":{"gitId":"yeoutzer"},"content":"    /**"},{"lineNumber":60,"author":{"gitId":"yeoutzer"},"content":"     * Returns the string of the task."},{"lineNumber":61,"author":{"gitId":"yeoutzer"},"content":"     *"},{"lineNumber":62,"author":{"gitId":"yeoutzer"},"content":"     * @return string of the task."},{"lineNumber":63,"author":{"gitId":"yeoutzer"},"content":"     */"},{"lineNumber":64,"author":{"gitId":"yeoutzer"},"content":"    @Override"},{"lineNumber":65,"author":{"gitId":"yeoutzer"},"content":"    public String toString() {"},{"lineNumber":66,"author":{"gitId":"yeoutzer"},"content":"        return \"[D]\" + super.toString() + \" (by: \""},{"lineNumber":67,"author":{"gitId":"yeoutzer"},"content":"                + getDateString()"},{"lineNumber":68,"author":{"gitId":"yeoutzer"},"content":"                + getTimeString() + \")\";"},{"lineNumber":69,"author":{"gitId":"yeoutzer"},"content":"    }"},{"lineNumber":70,"author":{"gitId":"yeoutzer"},"content":""},{"lineNumber":71,"author":{"gitId":"yeoutzer"},"content":"    private String getDateString() {"},{"lineNumber":72,"author":{"gitId":"yeoutzer"},"content":"        return this.date.format(DateTimeFormatter.ofPattern(\"dd MMM yyyy\"));"},{"lineNumber":73,"author":{"gitId":"yeoutzer"},"content":"    }"},{"lineNumber":74,"author":{"gitId":"yeoutzer"},"content":""},{"lineNumber":75,"author":{"gitId":"yeoutzer"},"content":"    private String getTimeString() {"},{"lineNumber":76,"author":{"gitId":"yeoutzer"},"content":"        return this.time \u003d\u003d null"},{"lineNumber":77,"author":{"gitId":"yeoutzer"},"content":"                ? \"\""},{"lineNumber":78,"author":{"gitId":"yeoutzer"},"content":"                : \" \" + this.time.format(DateTimeFormatter.ofPattern(\"hh:mm a\"));"},{"lineNumber":79,"author":{"gitId":"yeoutzer"},"content":"    }"},{"lineNumber":80,"author":{"gitId":"yeoutzer"},"content":"}"}],"authorContributionMap":{"yeoutzer":80}},{"path":"src/main/java/duke/tasks/EventTask.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yeoutzer"},"content":"package duke.tasks;"},{"lineNumber":2,"author":{"gitId":"yeoutzer"},"content":""},{"lineNumber":3,"author":{"gitId":"yeoutzer"},"content":"import java.time.LocalDate;"},{"lineNumber":4,"author":{"gitId":"yeoutzer"},"content":"import java.time.LocalTime;"},{"lineNumber":5,"author":{"gitId":"yeoutzer"},"content":"import java.time.format.DateTimeFormatter;"},{"lineNumber":6,"author":{"gitId":"yeoutzer"},"content":""},{"lineNumber":7,"author":{"gitId":"yeoutzer"},"content":"/**"},{"lineNumber":8,"author":{"gitId":"yeoutzer"},"content":" * Responsible for containing event tasks."},{"lineNumber":9,"author":{"gitId":"yeoutzer"},"content":" */"},{"lineNumber":10,"author":{"gitId":"yeoutzer"},"content":"public class EventTask extends Task {"},{"lineNumber":11,"author":{"gitId":"yeoutzer"},"content":"    protected LocalDate date;"},{"lineNumber":12,"author":{"gitId":"yeoutzer"},"content":"    protected LocalTime startTime;"},{"lineNumber":13,"author":{"gitId":"yeoutzer"},"content":"    protected LocalTime endTime;"},{"lineNumber":14,"author":{"gitId":"yeoutzer"},"content":""},{"lineNumber":15,"author":{"gitId":"yeoutzer"},"content":"    /**"},{"lineNumber":16,"author":{"gitId":"yeoutzer"},"content":"     * Constructs a EventTask with the given description and date."},{"lineNumber":17,"author":{"gitId":"yeoutzer"},"content":"     *"},{"lineNumber":18,"author":{"gitId":"yeoutzer"},"content":"     * @param description Description of the event."},{"lineNumber":19,"author":{"gitId":"yeoutzer"},"content":"     * @param date Date of the event."},{"lineNumber":20,"author":{"gitId":"yeoutzer"},"content":"     */"},{"lineNumber":21,"author":{"gitId":"yeoutzer"},"content":"    public EventTask(String description, LocalDate date) {"},{"lineNumber":22,"author":{"gitId":"yeoutzer"},"content":"        super(description, \u0027E\u0027);"},{"lineNumber":23,"author":{"gitId":"yeoutzer"},"content":"        this.date \u003d date;"},{"lineNumber":24,"author":{"gitId":"yeoutzer"},"content":"        this.startTime \u003d null;"},{"lineNumber":25,"author":{"gitId":"yeoutzer"},"content":"        this.endTime \u003d null;"},{"lineNumber":26,"author":{"gitId":"yeoutzer"},"content":"    }"},{"lineNumber":27,"author":{"gitId":"yeoutzer"},"content":""},{"lineNumber":28,"author":{"gitId":"yeoutzer"},"content":"    /**"},{"lineNumber":29,"author":{"gitId":"yeoutzer"},"content":"     * Constructs a EventTask with the given description, date and starting time."},{"lineNumber":30,"author":{"gitId":"yeoutzer"},"content":"     *"},{"lineNumber":31,"author":{"gitId":"yeoutzer"},"content":"     * @param description Description of the event."},{"lineNumber":32,"author":{"gitId":"yeoutzer"},"content":"     * @param date Date of the event."},{"lineNumber":33,"author":{"gitId":"yeoutzer"},"content":"     * @param startTime Starting time of the event."},{"lineNumber":34,"author":{"gitId":"yeoutzer"},"content":"     */"},{"lineNumber":35,"author":{"gitId":"yeoutzer"},"content":"    public EventTask(String description, LocalDate date, LocalTime startTime) {"},{"lineNumber":36,"author":{"gitId":"yeoutzer"},"content":"        super(description, \u0027E\u0027);"},{"lineNumber":37,"author":{"gitId":"yeoutzer"},"content":"        this.date \u003d date;"},{"lineNumber":38,"author":{"gitId":"yeoutzer"},"content":"        this.startTime \u003d startTime;"},{"lineNumber":39,"author":{"gitId":"yeoutzer"},"content":"        this.endTime \u003d null;"},{"lineNumber":40,"author":{"gitId":"yeoutzer"},"content":"    }"},{"lineNumber":41,"author":{"gitId":"yeoutzer"},"content":""},{"lineNumber":42,"author":{"gitId":"yeoutzer"},"content":"    /**"},{"lineNumber":43,"author":{"gitId":"yeoutzer"},"content":"     * Constructs a EventTask with the given description, date, starting and ending time."},{"lineNumber":44,"author":{"gitId":"yeoutzer"},"content":"     *"},{"lineNumber":45,"author":{"gitId":"yeoutzer"},"content":"     * @param description Description of the event."},{"lineNumber":46,"author":{"gitId":"yeoutzer"},"content":"     * @param date Date of the event."},{"lineNumber":47,"author":{"gitId":"yeoutzer"},"content":"     * @param startTime Starting time of the event."},{"lineNumber":48,"author":{"gitId":"yeoutzer"},"content":"     * @param endTime Ending time of the event."},{"lineNumber":49,"author":{"gitId":"yeoutzer"},"content":"     */"},{"lineNumber":50,"author":{"gitId":"yeoutzer"},"content":"    public EventTask(String description, LocalDate date, LocalTime startTime, LocalTime endTime) {"},{"lineNumber":51,"author":{"gitId":"yeoutzer"},"content":"        super(description, \u0027E\u0027);"},{"lineNumber":52,"author":{"gitId":"yeoutzer"},"content":"        this.date \u003d date;"},{"lineNumber":53,"author":{"gitId":"yeoutzer"},"content":"        this.startTime \u003d startTime;"},{"lineNumber":54,"author":{"gitId":"yeoutzer"},"content":"        this.endTime \u003d endTime;"},{"lineNumber":55,"author":{"gitId":"yeoutzer"},"content":"    }"},{"lineNumber":56,"author":{"gitId":"yeoutzer"},"content":""},{"lineNumber":57,"author":{"gitId":"yeoutzer"},"content":"    private String getDateSaveString() {"},{"lineNumber":58,"author":{"gitId":"yeoutzer"},"content":"        return this.date.format(DateTimeFormatter.ofPattern(\"yyyy-MM-dd\"));"},{"lineNumber":59,"author":{"gitId":"yeoutzer"},"content":"    }"},{"lineNumber":60,"author":{"gitId":"yeoutzer"},"content":""},{"lineNumber":61,"author":{"gitId":"yeoutzer"},"content":"    private String getStartTimeSaveString() {"},{"lineNumber":62,"author":{"gitId":"yeoutzer"},"content":"        return this.startTime \u003d\u003d null"},{"lineNumber":63,"author":{"gitId":"yeoutzer"},"content":"                ? \"\""},{"lineNumber":64,"author":{"gitId":"yeoutzer"},"content":"                : \" | \" + this.startTime.format(DateTimeFormatter.ofPattern(\"HHmm\"));"},{"lineNumber":65,"author":{"gitId":"yeoutzer"},"content":"    }"},{"lineNumber":66,"author":{"gitId":"yeoutzer"},"content":""},{"lineNumber":67,"author":{"gitId":"yeoutzer"},"content":"    private String getEndTimeSaveString() {"},{"lineNumber":68,"author":{"gitId":"yeoutzer"},"content":"        return this.endTime \u003d\u003d null"},{"lineNumber":69,"author":{"gitId":"yeoutzer"},"content":"                ? \"\""},{"lineNumber":70,"author":{"gitId":"yeoutzer"},"content":"                : \" | \" + this.endTime.format(DateTimeFormatter.ofPattern(\"HHmm\"));"},{"lineNumber":71,"author":{"gitId":"yeoutzer"},"content":"    }"},{"lineNumber":72,"author":{"gitId":"yeoutzer"},"content":""},{"lineNumber":73,"author":{"gitId":"yeoutzer"},"content":"    /**"},{"lineNumber":74,"author":{"gitId":"yeoutzer"},"content":"     * Returns the format of string of event to be saved."},{"lineNumber":75,"author":{"gitId":"yeoutzer"},"content":"     *"},{"lineNumber":76,"author":{"gitId":"yeoutzer"},"content":"     * @return String of event to be saved."},{"lineNumber":77,"author":{"gitId":"yeoutzer"},"content":"     */"},{"lineNumber":78,"author":{"gitId":"yeoutzer"},"content":"    @Override"},{"lineNumber":79,"author":{"gitId":"yeoutzer"},"content":"    public String getSaveString() {"},{"lineNumber":80,"author":{"gitId":"yeoutzer"},"content":"        return super.getSaveString() + \" | \" + getDateSaveString()"},{"lineNumber":81,"author":{"gitId":"yeoutzer"},"content":"                + getStartTimeSaveString() + getEndTimeSaveString();"},{"lineNumber":82,"author":{"gitId":"yeoutzer"},"content":"    }"},{"lineNumber":83,"author":{"gitId":"yeoutzer"},"content":""},{"lineNumber":84,"author":{"gitId":"yeoutzer"},"content":"    /**"},{"lineNumber":85,"author":{"gitId":"yeoutzer"},"content":"     * Returns the string of the event."},{"lineNumber":86,"author":{"gitId":"yeoutzer"},"content":"     *"},{"lineNumber":87,"author":{"gitId":"yeoutzer"},"content":"     * @return string of the event."},{"lineNumber":88,"author":{"gitId":"yeoutzer"},"content":"     */"},{"lineNumber":89,"author":{"gitId":"yeoutzer"},"content":"    @Override"},{"lineNumber":90,"author":{"gitId":"yeoutzer"},"content":"    public String toString() {"},{"lineNumber":91,"author":{"gitId":"yeoutzer"},"content":"        return \"[E]\" + super.toString() + \" (at: \""},{"lineNumber":92,"author":{"gitId":"yeoutzer"},"content":"                + getDateString()"},{"lineNumber":93,"author":{"gitId":"yeoutzer"},"content":"                + getStartTimeString()"},{"lineNumber":94,"author":{"gitId":"yeoutzer"},"content":"                + getEndTimeString()"},{"lineNumber":95,"author":{"gitId":"yeoutzer"},"content":"                + \")\";"},{"lineNumber":96,"author":{"gitId":"yeoutzer"},"content":"    }"},{"lineNumber":97,"author":{"gitId":"yeoutzer"},"content":""},{"lineNumber":98,"author":{"gitId":"yeoutzer"},"content":"    private String getDateString() {"},{"lineNumber":99,"author":{"gitId":"yeoutzer"},"content":"        return this.date.format(DateTimeFormatter.ofPattern(\"dd MMM yyyy\"));"},{"lineNumber":100,"author":{"gitId":"yeoutzer"},"content":"    }"},{"lineNumber":101,"author":{"gitId":"yeoutzer"},"content":""},{"lineNumber":102,"author":{"gitId":"yeoutzer"},"content":"    private String getStartTimeString() {"},{"lineNumber":103,"author":{"gitId":"yeoutzer"},"content":"        return this.startTime \u003d\u003d null"},{"lineNumber":104,"author":{"gitId":"yeoutzer"},"content":"                ? \"\""},{"lineNumber":105,"author":{"gitId":"yeoutzer"},"content":"                : \" \" + this.startTime.format(DateTimeFormatter.ofPattern(\"hh:mm a\"));"},{"lineNumber":106,"author":{"gitId":"yeoutzer"},"content":"    }"},{"lineNumber":107,"author":{"gitId":"yeoutzer"},"content":""},{"lineNumber":108,"author":{"gitId":"yeoutzer"},"content":"    private String getEndTimeString() {"},{"lineNumber":109,"author":{"gitId":"yeoutzer"},"content":"        return this.endTime \u003d\u003d null"},{"lineNumber":110,"author":{"gitId":"yeoutzer"},"content":"                ? \"\""},{"lineNumber":111,"author":{"gitId":"yeoutzer"},"content":"                : \"-\" + this.endTime.format(DateTimeFormatter.ofPattern(\"hh:mm a\"));"},{"lineNumber":112,"author":{"gitId":"yeoutzer"},"content":"    }"},{"lineNumber":113,"author":{"gitId":"yeoutzer"},"content":"}"}],"authorContributionMap":{"yeoutzer":113}},{"path":"src/main/java/duke/tasks/FixedDurationTask.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yeoutzer"},"content":"package duke.tasks;"},{"lineNumber":2,"author":{"gitId":"yeoutzer"},"content":""},{"lineNumber":3,"author":{"gitId":"yeoutzer"},"content":"/**"},{"lineNumber":4,"author":{"gitId":"yeoutzer"},"content":" * Responsible for containing fixed duration tasks."},{"lineNumber":5,"author":{"gitId":"yeoutzer"},"content":" */"},{"lineNumber":6,"author":{"gitId":"yeoutzer"},"content":"public class FixedDurationTask extends Task {"},{"lineNumber":7,"author":{"gitId":"yeoutzer"},"content":"    protected int duration;"},{"lineNumber":8,"author":{"gitId":"yeoutzer"},"content":""},{"lineNumber":9,"author":{"gitId":"yeoutzer"},"content":"    /**"},{"lineNumber":10,"author":{"gitId":"yeoutzer"},"content":"     * Constructs a FixedDurationTask with the given description and duration in minutes."},{"lineNumber":11,"author":{"gitId":"yeoutzer"},"content":"     *"},{"lineNumber":12,"author":{"gitId":"yeoutzer"},"content":"     * @param description Description of task."},{"lineNumber":13,"author":{"gitId":"yeoutzer"},"content":"     * @param duration Duration for task to be done in."},{"lineNumber":14,"author":{"gitId":"yeoutzer"},"content":"     */"},{"lineNumber":15,"author":{"gitId":"yeoutzer"},"content":"    public FixedDurationTask(String description, int duration) {"},{"lineNumber":16,"author":{"gitId":"yeoutzer"},"content":"        super(description, \u0027F\u0027);"},{"lineNumber":17,"author":{"gitId":"yeoutzer"},"content":"        this.duration \u003d duration;"},{"lineNumber":18,"author":{"gitId":"yeoutzer"},"content":"    }"},{"lineNumber":19,"author":{"gitId":"yeoutzer"},"content":""},{"lineNumber":20,"author":{"gitId":"yeoutzer"},"content":"    /**"},{"lineNumber":21,"author":{"gitId":"yeoutzer"},"content":"     * Returns the format of string of task to be saved."},{"lineNumber":22,"author":{"gitId":"yeoutzer"},"content":"     *"},{"lineNumber":23,"author":{"gitId":"yeoutzer"},"content":"     * @return String of task to be saved."},{"lineNumber":24,"author":{"gitId":"yeoutzer"},"content":"     */"},{"lineNumber":25,"author":{"gitId":"yeoutzer"},"content":"    @Override"},{"lineNumber":26,"author":{"gitId":"yeoutzer"},"content":"    public String getSaveString() {"},{"lineNumber":27,"author":{"gitId":"yeoutzer"},"content":"        return super.getSaveString() + \" | \" + this.duration;"},{"lineNumber":28,"author":{"gitId":"yeoutzer"},"content":"    }"},{"lineNumber":29,"author":{"gitId":"yeoutzer"},"content":""},{"lineNumber":30,"author":{"gitId":"yeoutzer"},"content":"    /**"},{"lineNumber":31,"author":{"gitId":"yeoutzer"},"content":"     * Returns the string of the task."},{"lineNumber":32,"author":{"gitId":"yeoutzer"},"content":"     *"},{"lineNumber":33,"author":{"gitId":"yeoutzer"},"content":"     * @return string of the task."},{"lineNumber":34,"author":{"gitId":"yeoutzer"},"content":"     */"},{"lineNumber":35,"author":{"gitId":"yeoutzer"},"content":"    @Override"},{"lineNumber":36,"author":{"gitId":"yeoutzer"},"content":"    public String toString() {"},{"lineNumber":37,"author":{"gitId":"yeoutzer"},"content":"        return \"[F]\" + super.toString() + \" (within: \""},{"lineNumber":38,"author":{"gitId":"yeoutzer"},"content":"                + getDuration() + \")\";"},{"lineNumber":39,"author":{"gitId":"yeoutzer"},"content":"    }"},{"lineNumber":40,"author":{"gitId":"yeoutzer"},"content":""},{"lineNumber":41,"author":{"gitId":"yeoutzer"},"content":"    private String getDuration() {"},{"lineNumber":42,"author":{"gitId":"yeoutzer"},"content":"        int hours \u003d this.duration / 60;"},{"lineNumber":43,"author":{"gitId":"yeoutzer"},"content":"        int minutes \u003d this.duration % 60;"},{"lineNumber":44,"author":{"gitId":"yeoutzer"},"content":"        return String.format(\"%d hours %02d minutes\", hours, minutes);"},{"lineNumber":45,"author":{"gitId":"yeoutzer"},"content":"    }"},{"lineNumber":46,"author":{"gitId":"yeoutzer"},"content":""},{"lineNumber":47,"author":{"gitId":"yeoutzer"},"content":""},{"lineNumber":48,"author":{"gitId":"yeoutzer"},"content":"}"}],"authorContributionMap":{"yeoutzer":48}},{"path":"src/main/java/duke/tasks/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yeoutzer"},"content":"package duke.tasks;"},{"lineNumber":2,"author":{"gitId":"yeoutzer"},"content":""},{"lineNumber":3,"author":{"gitId":"yeoutzer"},"content":"/**"},{"lineNumber":4,"author":{"gitId":"yeoutzer"},"content":" * Responsible for containing different types of tasks."},{"lineNumber":5,"author":{"gitId":"yeoutzer"},"content":" */"},{"lineNumber":6,"author":{"gitId":"yeoutzer"},"content":"public class Task {"},{"lineNumber":7,"author":{"gitId":"yeoutzer"},"content":"    protected String description;"},{"lineNumber":8,"author":{"gitId":"yeoutzer"},"content":"    protected boolean isDone;"},{"lineNumber":9,"author":{"gitId":"yeoutzer"},"content":"    protected char type;"},{"lineNumber":10,"author":{"gitId":"yeoutzer"},"content":""},{"lineNumber":11,"author":{"gitId":"yeoutzer"},"content":"    /**"},{"lineNumber":12,"author":{"gitId":"yeoutzer"},"content":"     * Constructs a Task with the given description."},{"lineNumber":13,"author":{"gitId":"yeoutzer"},"content":"     *"},{"lineNumber":14,"author":{"gitId":"yeoutzer"},"content":"     * @param description Description of task."},{"lineNumber":15,"author":{"gitId":"yeoutzer"},"content":"     */"},{"lineNumber":16,"author":{"gitId":"yeoutzer"},"content":"    public Task(String description) {"},{"lineNumber":17,"author":{"gitId":"yeoutzer"},"content":"        this.description \u003d description;"},{"lineNumber":18,"author":{"gitId":"yeoutzer"},"content":"        this.isDone \u003d false;"},{"lineNumber":19,"author":{"gitId":"yeoutzer"},"content":"        this.type \u003d \u0027 \u0027;"},{"lineNumber":20,"author":{"gitId":"yeoutzer"},"content":"    }"},{"lineNumber":21,"author":{"gitId":"yeoutzer"},"content":""},{"lineNumber":22,"author":{"gitId":"yeoutzer"},"content":"    /**"},{"lineNumber":23,"author":{"gitId":"yeoutzer"},"content":"     * Constructs a Task with the given description and type of Task."},{"lineNumber":24,"author":{"gitId":"yeoutzer"},"content":"     *"},{"lineNumber":25,"author":{"gitId":"yeoutzer"},"content":"     * @param description Description of task."},{"lineNumber":26,"author":{"gitId":"yeoutzer"},"content":"     * @param type Type of task."},{"lineNumber":27,"author":{"gitId":"yeoutzer"},"content":"     */"},{"lineNumber":28,"author":{"gitId":"yeoutzer"},"content":"    public Task(String description, char type) {"},{"lineNumber":29,"author":{"gitId":"yeoutzer"},"content":"        this.description \u003d description;"},{"lineNumber":30,"author":{"gitId":"yeoutzer"},"content":"        this.isDone \u003d false;"},{"lineNumber":31,"author":{"gitId":"yeoutzer"},"content":"        this.type \u003d type;"},{"lineNumber":32,"author":{"gitId":"yeoutzer"},"content":"    }"},{"lineNumber":33,"author":{"gitId":"yeoutzer"},"content":""},{"lineNumber":34,"author":{"gitId":"yeoutzer"},"content":"    /**"},{"lineNumber":35,"author":{"gitId":"yeoutzer"},"content":"     * Returns a string indicating the completion status of task."},{"lineNumber":36,"author":{"gitId":"yeoutzer"},"content":"     *"},{"lineNumber":37,"author":{"gitId":"yeoutzer"},"content":"     * @return string indicating completion status of task."},{"lineNumber":38,"author":{"gitId":"yeoutzer"},"content":"     */"},{"lineNumber":39,"author":{"gitId":"yeoutzer"},"content":"    public String getStatusIcon() {"},{"lineNumber":40,"author":{"gitId":"yeoutzer"},"content":"        return (isDone ? \"X\" : \" \");"},{"lineNumber":41,"author":{"gitId":"yeoutzer"},"content":"    }"},{"lineNumber":42,"author":{"gitId":"yeoutzer"},"content":""},{"lineNumber":43,"author":{"gitId":"yeoutzer"},"content":"    /**"},{"lineNumber":44,"author":{"gitId":"yeoutzer"},"content":"     * Changes the completion status of task."},{"lineNumber":45,"author":{"gitId":"yeoutzer"},"content":"     */"},{"lineNumber":46,"author":{"gitId":"yeoutzer"},"content":"    public void markAsDone() {"},{"lineNumber":47,"author":{"gitId":"yeoutzer"},"content":"        this.isDone \u003d true;"},{"lineNumber":48,"author":{"gitId":"yeoutzer"},"content":"    }"},{"lineNumber":49,"author":{"gitId":"yeoutzer"},"content":""},{"lineNumber":50,"author":{"gitId":"yeoutzer"},"content":"    /**"},{"lineNumber":51,"author":{"gitId":"yeoutzer"},"content":"     * Returns the description of task."},{"lineNumber":52,"author":{"gitId":"yeoutzer"},"content":"     *"},{"lineNumber":53,"author":{"gitId":"yeoutzer"},"content":"     * @return Description of task."},{"lineNumber":54,"author":{"gitId":"yeoutzer"},"content":"     */"},{"lineNumber":55,"author":{"gitId":"yeoutzer"},"content":"    public String getDescription() {"},{"lineNumber":56,"author":{"gitId":"yeoutzer"},"content":"        return this.description;"},{"lineNumber":57,"author":{"gitId":"yeoutzer"},"content":"    }"},{"lineNumber":58,"author":{"gitId":"yeoutzer"},"content":""},{"lineNumber":59,"author":{"gitId":"yeoutzer"},"content":"    /** Returns the format of string of task to be saved."},{"lineNumber":60,"author":{"gitId":"yeoutzer"},"content":"     *"},{"lineNumber":61,"author":{"gitId":"yeoutzer"},"content":"     * @return String of task to be saved."},{"lineNumber":62,"author":{"gitId":"yeoutzer"},"content":"     */"},{"lineNumber":63,"author":{"gitId":"yeoutzer"},"content":"    public String getSaveString() {"},{"lineNumber":64,"author":{"gitId":"yeoutzer"},"content":"        return this.type + \" | \" + getIsDoneString() + \" | \" + this.description;"},{"lineNumber":65,"author":{"gitId":"yeoutzer"},"content":"    }"},{"lineNumber":66,"author":{"gitId":"yeoutzer"},"content":""},{"lineNumber":67,"author":{"gitId":"yeoutzer"},"content":"    private String getIsDoneString() {"},{"lineNumber":68,"author":{"gitId":"yeoutzer"},"content":"        return (this.isDone ? \"1\" : \"0\");"},{"lineNumber":69,"author":{"gitId":"yeoutzer"},"content":"    }"},{"lineNumber":70,"author":{"gitId":"yeoutzer"},"content":""},{"lineNumber":71,"author":{"gitId":"yeoutzer"},"content":"    /**"},{"lineNumber":72,"author":{"gitId":"yeoutzer"},"content":"     * Returns the string of the task."},{"lineNumber":73,"author":{"gitId":"yeoutzer"},"content":"     *"},{"lineNumber":74,"author":{"gitId":"yeoutzer"},"content":"     * @return string of the task."},{"lineNumber":75,"author":{"gitId":"yeoutzer"},"content":"     */"},{"lineNumber":76,"author":{"gitId":"yeoutzer"},"content":"    @Override"},{"lineNumber":77,"author":{"gitId":"yeoutzer"},"content":"    public String toString() {"},{"lineNumber":78,"author":{"gitId":"yeoutzer"},"content":"        return \"[\" + getStatusIcon() + \"] \" + this.description;"},{"lineNumber":79,"author":{"gitId":"yeoutzer"},"content":"    }"},{"lineNumber":80,"author":{"gitId":"yeoutzer"},"content":"}"}],"authorContributionMap":{"yeoutzer":80}},{"path":"src/main/java/duke/tasks/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yeoutzer"},"content":"package duke.tasks;"},{"lineNumber":2,"author":{"gitId":"yeoutzer"},"content":""},{"lineNumber":3,"author":{"gitId":"yeoutzer"},"content":"import java.util.List;"},{"lineNumber":4,"author":{"gitId":"yeoutzer"},"content":""},{"lineNumber":5,"author":{"gitId":"yeoutzer"},"content":"/**"},{"lineNumber":6,"author":{"gitId":"yeoutzer"},"content":" * Responsible for storing all tasks in a list."},{"lineNumber":7,"author":{"gitId":"yeoutzer"},"content":" */"},{"lineNumber":8,"author":{"gitId":"yeoutzer"},"content":"public class TaskList {"},{"lineNumber":9,"author":{"gitId":"yeoutzer"},"content":"    private List\u003cTask\u003e tasks;"},{"lineNumber":10,"author":{"gitId":"yeoutzer"},"content":""},{"lineNumber":11,"author":{"gitId":"yeoutzer"},"content":"    /**"},{"lineNumber":12,"author":{"gitId":"yeoutzer"},"content":"     * Constructs a TaskList with given list of Task."},{"lineNumber":13,"author":{"gitId":"yeoutzer"},"content":"     *"},{"lineNumber":14,"author":{"gitId":"yeoutzer"},"content":"     * @param tasks List of Task."},{"lineNumber":15,"author":{"gitId":"yeoutzer"},"content":"     */"},{"lineNumber":16,"author":{"gitId":"yeoutzer"},"content":"    public TaskList(List\u003cTask\u003e tasks) {"},{"lineNumber":17,"author":{"gitId":"yeoutzer"},"content":"        this.tasks \u003d tasks;"},{"lineNumber":18,"author":{"gitId":"yeoutzer"},"content":"    }"},{"lineNumber":19,"author":{"gitId":"yeoutzer"},"content":""},{"lineNumber":20,"author":{"gitId":"yeoutzer"},"content":"    /**"},{"lineNumber":21,"author":{"gitId":"yeoutzer"},"content":"     * Adds given Task to TaskList."},{"lineNumber":22,"author":{"gitId":"yeoutzer"},"content":"     *"},{"lineNumber":23,"author":{"gitId":"yeoutzer"},"content":"     * @param task Task to be added."},{"lineNumber":24,"author":{"gitId":"yeoutzer"},"content":"     */"},{"lineNumber":25,"author":{"gitId":"yeoutzer"},"content":"    public void add(Task task) {"},{"lineNumber":26,"author":{"gitId":"yeoutzer"},"content":"        this.tasks.add(task);"},{"lineNumber":27,"author":{"gitId":"yeoutzer"},"content":"    }"},{"lineNumber":28,"author":{"gitId":"yeoutzer"},"content":""},{"lineNumber":29,"author":{"gitId":"yeoutzer"},"content":"    /**"},{"lineNumber":30,"author":{"gitId":"yeoutzer"},"content":"     * Removes Task from TaskList."},{"lineNumber":31,"author":{"gitId":"yeoutzer"},"content":"     *"},{"lineNumber":32,"author":{"gitId":"yeoutzer"},"content":"     * @param index Index of Task to be removed."},{"lineNumber":33,"author":{"gitId":"yeoutzer"},"content":"     */"},{"lineNumber":34,"author":{"gitId":"yeoutzer"},"content":"    public void remove(int index) {"},{"lineNumber":35,"author":{"gitId":"yeoutzer"},"content":"        this.tasks.remove(index);"},{"lineNumber":36,"author":{"gitId":"yeoutzer"},"content":"    }"},{"lineNumber":37,"author":{"gitId":"yeoutzer"},"content":""},{"lineNumber":38,"author":{"gitId":"yeoutzer"},"content":"    /**"},{"lineNumber":39,"author":{"gitId":"yeoutzer"},"content":"     * Returns the Task indicated in TaskList."},{"lineNumber":40,"author":{"gitId":"yeoutzer"},"content":"     *"},{"lineNumber":41,"author":{"gitId":"yeoutzer"},"content":"     * @param index Index of the Task to be returned."},{"lineNumber":42,"author":{"gitId":"yeoutzer"},"content":"     * @return Task indicated."},{"lineNumber":43,"author":{"gitId":"yeoutzer"},"content":"     */"},{"lineNumber":44,"author":{"gitId":"yeoutzer"},"content":"    public Task getTask(int index) {"},{"lineNumber":45,"author":{"gitId":"yeoutzer"},"content":"        return this.tasks.get(index);"},{"lineNumber":46,"author":{"gitId":"yeoutzer"},"content":"    }"},{"lineNumber":47,"author":{"gitId":"yeoutzer"},"content":""},{"lineNumber":48,"author":{"gitId":"yeoutzer"},"content":"    /**"},{"lineNumber":49,"author":{"gitId":"yeoutzer"},"content":"     * Returns the list of Task."},{"lineNumber":50,"author":{"gitId":"yeoutzer"},"content":"     *"},{"lineNumber":51,"author":{"gitId":"yeoutzer"},"content":"     * @return List of Task."},{"lineNumber":52,"author":{"gitId":"yeoutzer"},"content":"     */"},{"lineNumber":53,"author":{"gitId":"yeoutzer"},"content":"    public List\u003cTask\u003e getTaskList() {"},{"lineNumber":54,"author":{"gitId":"yeoutzer"},"content":"        return this.tasks;"},{"lineNumber":55,"author":{"gitId":"yeoutzer"},"content":"    }"},{"lineNumber":56,"author":{"gitId":"yeoutzer"},"content":""},{"lineNumber":57,"author":{"gitId":"yeoutzer"},"content":"    /**"},{"lineNumber":58,"author":{"gitId":"yeoutzer"},"content":"     * Returns the size of TaskList."},{"lineNumber":59,"author":{"gitId":"yeoutzer"},"content":"     *"},{"lineNumber":60,"author":{"gitId":"yeoutzer"},"content":"     * @return size of TaskList."},{"lineNumber":61,"author":{"gitId":"yeoutzer"},"content":"     */"},{"lineNumber":62,"author":{"gitId":"yeoutzer"},"content":"    public int size() {"},{"lineNumber":63,"author":{"gitId":"yeoutzer"},"content":"        return this.tasks.size();"},{"lineNumber":64,"author":{"gitId":"yeoutzer"},"content":"    }"},{"lineNumber":65,"author":{"gitId":"yeoutzer"},"content":"}"}],"authorContributionMap":{"yeoutzer":65}},{"path":"src/main/java/duke/tasks/TodoTask.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yeoutzer"},"content":"package duke.tasks;"},{"lineNumber":2,"author":{"gitId":"yeoutzer"},"content":""},{"lineNumber":3,"author":{"gitId":"yeoutzer"},"content":"/**"},{"lineNumber":4,"author":{"gitId":"yeoutzer"},"content":" * Responsible for containing todo tasks."},{"lineNumber":5,"author":{"gitId":"yeoutzer"},"content":" */"},{"lineNumber":6,"author":{"gitId":"yeoutzer"},"content":"public class TodoTask extends Task {"},{"lineNumber":7,"author":{"gitId":"yeoutzer"},"content":"    /**"},{"lineNumber":8,"author":{"gitId":"yeoutzer"},"content":"     * Constructs a TodoTask with the given description."},{"lineNumber":9,"author":{"gitId":"yeoutzer"},"content":"     *"},{"lineNumber":10,"author":{"gitId":"yeoutzer"},"content":"     * @param description Description of the task."},{"lineNumber":11,"author":{"gitId":"yeoutzer"},"content":"     */"},{"lineNumber":12,"author":{"gitId":"yeoutzer"},"content":"    public TodoTask(String description) {"},{"lineNumber":13,"author":{"gitId":"yeoutzer"},"content":"        super(description, \u0027T\u0027);"},{"lineNumber":14,"author":{"gitId":"yeoutzer"},"content":"    }"},{"lineNumber":15,"author":{"gitId":"yeoutzer"},"content":""},{"lineNumber":16,"author":{"gitId":"yeoutzer"},"content":"    /**"},{"lineNumber":17,"author":{"gitId":"yeoutzer"},"content":"     * Returns the string of the task."},{"lineNumber":18,"author":{"gitId":"yeoutzer"},"content":"     *"},{"lineNumber":19,"author":{"gitId":"yeoutzer"},"content":"     * @return string of the task."},{"lineNumber":20,"author":{"gitId":"yeoutzer"},"content":"     */"},{"lineNumber":21,"author":{"gitId":"yeoutzer"},"content":"    @Override"},{"lineNumber":22,"author":{"gitId":"yeoutzer"},"content":"    public String toString() {"},{"lineNumber":23,"author":{"gitId":"yeoutzer"},"content":"        return \"[T]\" + super.toString();"},{"lineNumber":24,"author":{"gitId":"yeoutzer"},"content":"    }"},{"lineNumber":25,"author":{"gitId":"yeoutzer"},"content":"}"}],"authorContributionMap":{"yeoutzer":25}},{"path":"src/main/java/duke/ui/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yeoutzer"},"content":"package duke.ui;"},{"lineNumber":2,"author":{"gitId":"yeoutzer"},"content":""},{"lineNumber":3,"author":{"gitId":"yeoutzer"},"content":"import duke.tasks.Task;"},{"lineNumber":4,"author":{"gitId":"yeoutzer"},"content":"import duke.tasks.TaskList;"},{"lineNumber":5,"author":{"gitId":"yeoutzer"},"content":""},{"lineNumber":6,"author":{"gitId":"yeoutzer"},"content":"/**"},{"lineNumber":7,"author":{"gitId":"yeoutzer"},"content":" * Responsible for handling output messages."},{"lineNumber":8,"author":{"gitId":"yeoutzer"},"content":" */"},{"lineNumber":9,"author":{"gitId":"yeoutzer"},"content":"public class Ui {"},{"lineNumber":10,"author":{"gitId":"yeoutzer"},"content":"    /**"},{"lineNumber":11,"author":{"gitId":"yeoutzer"},"content":"     * Returns the Duke greeting message."},{"lineNumber":12,"author":{"gitId":"yeoutzer"},"content":"     *"},{"lineNumber":13,"author":{"gitId":"yeoutzer"},"content":"     * @return Duke greeting message."},{"lineNumber":14,"author":{"gitId":"yeoutzer"},"content":"     */"},{"lineNumber":15,"author":{"gitId":"yeoutzer"},"content":"    public String getGreeting() {"},{"lineNumber":16,"author":{"gitId":"yeoutzer"},"content":"        return \"Hello! I\u0027m Dook.\\nWhat can I do for you?\";"},{"lineNumber":17,"author":{"gitId":"yeoutzer"},"content":"    }"},{"lineNumber":18,"author":{"gitId":"yeoutzer"},"content":""},{"lineNumber":19,"author":{"gitId":"yeoutzer"},"content":"    /**"},{"lineNumber":20,"author":{"gitId":"yeoutzer"},"content":"     * Returns the string listing tasks in TaskList, numbered in increasing order."},{"lineNumber":21,"author":{"gitId":"yeoutzer"},"content":"     *"},{"lineNumber":22,"author":{"gitId":"yeoutzer"},"content":"     * @param tasks TaskList to be printed."},{"lineNumber":23,"author":{"gitId":"yeoutzer"},"content":"     * @return String listing tasks in TaskList."},{"lineNumber":24,"author":{"gitId":"yeoutzer"},"content":"     */"},{"lineNumber":25,"author":{"gitId":"yeoutzer"},"content":"    public String getListOfTasks(TaskList tasks) {"},{"lineNumber":26,"author":{"gitId":"yeoutzer"},"content":"        String taskListString \u003d \"Here are the tasks in your list:\\n\";"},{"lineNumber":27,"author":{"gitId":"yeoutzer"},"content":"        for (int i \u003d 0; i \u003c tasks.size(); i++) {"},{"lineNumber":28,"author":{"gitId":"yeoutzer"},"content":"            taskListString +\u003d (i + 1) + \".\" + tasks.getTask(i).toString() + \"\\n\";"},{"lineNumber":29,"author":{"gitId":"yeoutzer"},"content":"        }"},{"lineNumber":30,"author":{"gitId":"yeoutzer"},"content":"        return taskListString;"},{"lineNumber":31,"author":{"gitId":"yeoutzer"},"content":"    }"},{"lineNumber":32,"author":{"gitId":"yeoutzer"},"content":""},{"lineNumber":33,"author":{"gitId":"yeoutzer"},"content":"    /**"},{"lineNumber":34,"author":{"gitId":"yeoutzer"},"content":"     * Returns a message to indicate TaskList is empty."},{"lineNumber":35,"author":{"gitId":"yeoutzer"},"content":"     *"},{"lineNumber":36,"author":{"gitId":"yeoutzer"},"content":"     * @return String indicating an empty TaskList."},{"lineNumber":37,"author":{"gitId":"yeoutzer"},"content":"     */"},{"lineNumber":38,"author":{"gitId":"yeoutzer"},"content":"    public String getEmptyListString() {"},{"lineNumber":39,"author":{"gitId":"yeoutzer"},"content":"        return \"There are no items in your list.\";"},{"lineNumber":40,"author":{"gitId":"yeoutzer"},"content":"    }"},{"lineNumber":41,"author":{"gitId":"yeoutzer"},"content":""},{"lineNumber":42,"author":{"gitId":"yeoutzer"},"content":"    /**"},{"lineNumber":43,"author":{"gitId":"yeoutzer"},"content":"     * Returns a message to indicate error when editing save file."},{"lineNumber":44,"author":{"gitId":"yeoutzer"},"content":"     *"},{"lineNumber":45,"author":{"gitId":"yeoutzer"},"content":"     * @return String indicating error when editing save file."},{"lineNumber":46,"author":{"gitId":"yeoutzer"},"content":"     */"},{"lineNumber":47,"author":{"gitId":"yeoutzer"},"content":"    public String getIoErrorString() {"},{"lineNumber":48,"author":{"gitId":"yeoutzer"},"content":"        return \"Error happened while trying to edit save file.\";"},{"lineNumber":49,"author":{"gitId":"yeoutzer"},"content":"    }"},{"lineNumber":50,"author":{"gitId":"yeoutzer"},"content":""},{"lineNumber":51,"author":{"gitId":"yeoutzer"},"content":"    /**"},{"lineNumber":52,"author":{"gitId":"yeoutzer"},"content":"     * Returns a message to indicate invalid date input."},{"lineNumber":53,"author":{"gitId":"yeoutzer"},"content":"     *"},{"lineNumber":54,"author":{"gitId":"yeoutzer"},"content":"     * @return String to indicating invalid date input."},{"lineNumber":55,"author":{"gitId":"yeoutzer"},"content":"     */"},{"lineNumber":56,"author":{"gitId":"yeoutzer"},"content":"    public String getOutOfBoundsErrorString() {"},{"lineNumber":57,"author":{"gitId":"yeoutzer"},"content":"        return \"Please enter the date (DD/MM/YYYY) with optional\""},{"lineNumber":58,"author":{"gitId":"yeoutzer"},"content":"                + \"time (in 24 hours format) after \\\"/by\\\" for Deadline Tasks \""},{"lineNumber":59,"author":{"gitId":"yeoutzer"},"content":"                + \"or date with optional start and end time after \\\"/at\\\" \""},{"lineNumber":60,"author":{"gitId":"yeoutzer"},"content":"                + \"for Event Tasks.\";"},{"lineNumber":61,"author":{"gitId":"yeoutzer"},"content":"    }"},{"lineNumber":62,"author":{"gitId":"yeoutzer"},"content":""},{"lineNumber":63,"author":{"gitId":"yeoutzer"},"content":"    /**"},{"lineNumber":64,"author":{"gitId":"yeoutzer"},"content":"     * Returns a message to indicate invalid date input format."},{"lineNumber":65,"author":{"gitId":"yeoutzer"},"content":"     *"},{"lineNumber":66,"author":{"gitId":"yeoutzer"},"content":"     * @return String indicating invalid date input format."},{"lineNumber":67,"author":{"gitId":"yeoutzer"},"content":"     */"},{"lineNumber":68,"author":{"gitId":"yeoutzer"},"content":"    public String getDateTimeParseErrorString() {"},{"lineNumber":69,"author":{"gitId":"yeoutzer"},"content":"        return \"Please enter in DD/MM/YYYY format (eg. 02/04/2000) for dates \""},{"lineNumber":70,"author":{"gitId":"yeoutzer"},"content":"                + \"and in 24 hour format (eg. 1830) for times.\";"},{"lineNumber":71,"author":{"gitId":"yeoutzer"},"content":"    }"},{"lineNumber":72,"author":{"gitId":"yeoutzer"},"content":""},{"lineNumber":73,"author":{"gitId":"yeoutzer"},"content":"    /**"},{"lineNumber":74,"author":{"gitId":"yeoutzer"},"content":"     * Returns a message to indicate successful task addition."},{"lineNumber":75,"author":{"gitId":"yeoutzer"},"content":"     *"},{"lineNumber":76,"author":{"gitId":"yeoutzer"},"content":"     * @param tasks TaskList containing the Task."},{"lineNumber":77,"author":{"gitId":"yeoutzer"},"content":"     * @param task Task that is added."},{"lineNumber":78,"author":{"gitId":"yeoutzer"},"content":"     * @return String to indicate successful task addition."},{"lineNumber":79,"author":{"gitId":"yeoutzer"},"content":"     */"},{"lineNumber":80,"author":{"gitId":"yeoutzer"},"content":"    public String getAddTaskString(TaskList tasks, Task task) {"},{"lineNumber":81,"author":{"gitId":"yeoutzer"},"content":"        return \"Got it. I\u0027ve added this task:\\n\""},{"lineNumber":82,"author":{"gitId":"yeoutzer"},"content":"                + task.toString() + \"\\n\""},{"lineNumber":83,"author":{"gitId":"yeoutzer"},"content":"                + \"Now you have \" + tasks.size() + \" tasks in the list.\";"},{"lineNumber":84,"author":{"gitId":"yeoutzer"},"content":"    }"},{"lineNumber":85,"author":{"gitId":"yeoutzer"},"content":""},{"lineNumber":86,"author":{"gitId":"yeoutzer"},"content":"    /**"},{"lineNumber":87,"author":{"gitId":"yeoutzer"},"content":"     * Returns a message to indicate successful task deletion."},{"lineNumber":88,"author":{"gitId":"yeoutzer"},"content":"     *"},{"lineNumber":89,"author":{"gitId":"yeoutzer"},"content":"     * @param tasks TaskList that contained the Task."},{"lineNumber":90,"author":{"gitId":"yeoutzer"},"content":"     * @param task Task that has been deleted."},{"lineNumber":91,"author":{"gitId":"yeoutzer"},"content":"     * @return String to indicate successful task deletion."},{"lineNumber":92,"author":{"gitId":"yeoutzer"},"content":"     */"},{"lineNumber":93,"author":{"gitId":"yeoutzer"},"content":"    public String getDeleteTaskString(TaskList tasks, Task task) {"},{"lineNumber":94,"author":{"gitId":"yeoutzer"},"content":"        return \"Noted. I\u0027ve removed this task:\\n\""},{"lineNumber":95,"author":{"gitId":"yeoutzer"},"content":"                + task.toString() + \"\\n\""},{"lineNumber":96,"author":{"gitId":"yeoutzer"},"content":"                + \"Now you have \" + tasks.size() + \" tasks in the list.\";"},{"lineNumber":97,"author":{"gitId":"yeoutzer"},"content":"    }"},{"lineNumber":98,"author":{"gitId":"yeoutzer"},"content":""},{"lineNumber":99,"author":{"gitId":"yeoutzer"},"content":"    /**"},{"lineNumber":100,"author":{"gitId":"yeoutzer"},"content":"     * Returns a message to indicate successful task completion."},{"lineNumber":101,"author":{"gitId":"yeoutzer"},"content":"     *"},{"lineNumber":102,"author":{"gitId":"yeoutzer"},"content":"     * @param tasks TaskList containing the Task to be completed."},{"lineNumber":103,"author":{"gitId":"yeoutzer"},"content":"     * @param index Index of the task in TaskList."},{"lineNumber":104,"author":{"gitId":"yeoutzer"},"content":"     * @return String to indicate successful task completion."},{"lineNumber":105,"author":{"gitId":"yeoutzer"},"content":"     */"},{"lineNumber":106,"author":{"gitId":"yeoutzer"},"content":"    public String getDoneTaskString(TaskList tasks, int index) {"},{"lineNumber":107,"author":{"gitId":"yeoutzer"},"content":"        return \"Nice! I\u0027ve marked this task as done:\\n\""},{"lineNumber":108,"author":{"gitId":"yeoutzer"},"content":"                + tasks.getTask(index - 1).toString();"},{"lineNumber":109,"author":{"gitId":"yeoutzer"},"content":"    }"},{"lineNumber":110,"author":{"gitId":"yeoutzer"},"content":""},{"lineNumber":111,"author":{"gitId":"yeoutzer"},"content":"    /**"},{"lineNumber":112,"author":{"gitId":"yeoutzer"},"content":"     * Returns the goodbye message."},{"lineNumber":113,"author":{"gitId":"yeoutzer"},"content":"     *"},{"lineNumber":114,"author":{"gitId":"yeoutzer"},"content":"     * @return Goodbye message string."},{"lineNumber":115,"author":{"gitId":"yeoutzer"},"content":"     */"},{"lineNumber":116,"author":{"gitId":"yeoutzer"},"content":"    public String getByeMessage() {"},{"lineNumber":117,"author":{"gitId":"yeoutzer"},"content":"        return \"Bye. Hope to see you again soon!\";"},{"lineNumber":118,"author":{"gitId":"yeoutzer"},"content":"    }"},{"lineNumber":119,"author":{"gitId":"yeoutzer"},"content":""},{"lineNumber":120,"author":{"gitId":"yeoutzer"},"content":"    /**"},{"lineNumber":121,"author":{"gitId":"yeoutzer"},"content":"     * Returns a string listing the tasks matching specified input."},{"lineNumber":122,"author":{"gitId":"yeoutzer"},"content":"     *"},{"lineNumber":123,"author":{"gitId":"yeoutzer"},"content":"     * @param tasks List of task that contains the matched input."},{"lineNumber":124,"author":{"gitId":"yeoutzer"},"content":"     * @return String listing the tasks matching specified input."},{"lineNumber":125,"author":{"gitId":"yeoutzer"},"content":"     */"},{"lineNumber":126,"author":{"gitId":"yeoutzer"},"content":"    public String getMatchList(TaskList tasks) {"},{"lineNumber":127,"author":{"gitId":"yeoutzer"},"content":"        String matchString \u003d \"Here are the matching tasks in your list:\\n\";"},{"lineNumber":128,"author":{"gitId":"yeoutzer"},"content":"        for (int i \u003d 0; i \u003c tasks.size(); i++) {"},{"lineNumber":129,"author":{"gitId":"yeoutzer"},"content":"            matchString +\u003d (i + 1) + \".\" + tasks.getTask(i).toString() + \"\\n\";"},{"lineNumber":130,"author":{"gitId":"yeoutzer"},"content":"        }"},{"lineNumber":131,"author":{"gitId":"yeoutzer"},"content":"        return matchString;"},{"lineNumber":132,"author":{"gitId":"yeoutzer"},"content":"    }"},{"lineNumber":133,"author":{"gitId":"yeoutzer"},"content":""},{"lineNumber":134,"author":{"gitId":"yeoutzer"},"content":"    /**"},{"lineNumber":135,"author":{"gitId":"yeoutzer"},"content":"     * Returns a message indicating no match in TaskList."},{"lineNumber":136,"author":{"gitId":"yeoutzer"},"content":"     *"},{"lineNumber":137,"author":{"gitId":"yeoutzer"},"content":"     * @return String to indicate no match in TaskList."},{"lineNumber":138,"author":{"gitId":"yeoutzer"},"content":"     */"},{"lineNumber":139,"author":{"gitId":"yeoutzer"},"content":"    public String getNoMatchString() {"},{"lineNumber":140,"author":{"gitId":"yeoutzer"},"content":"        return \"No tasks matched your word.\";"},{"lineNumber":141,"author":{"gitId":"yeoutzer"},"content":"    }"},{"lineNumber":142,"author":{"gitId":"yeoutzer"},"content":""},{"lineNumber":143,"author":{"gitId":"yeoutzer"},"content":"    /**"},{"lineNumber":144,"author":{"gitId":"yeoutzer"},"content":"     * Prints a message indicating file does not exists."},{"lineNumber":145,"author":{"gitId":"yeoutzer"},"content":"     */"},{"lineNumber":146,"author":{"gitId":"yeoutzer"},"content":"    public void showFileNotFound() {"},{"lineNumber":147,"author":{"gitId":"yeoutzer"},"content":"        System.out.println(\"Error: File does not exists.\");"},{"lineNumber":148,"author":{"gitId":"yeoutzer"},"content":"    }"},{"lineNumber":149,"author":{"gitId":"yeoutzer"},"content":""},{"lineNumber":150,"author":{"gitId":"yeoutzer"},"content":"    /**"},{"lineNumber":151,"author":{"gitId":"yeoutzer"},"content":"     * Prints a message indicating invalid content format in save file."},{"lineNumber":152,"author":{"gitId":"yeoutzer"},"content":"     */"},{"lineNumber":153,"author":{"gitId":"yeoutzer"},"content":"    public void showInvalidSaveFileFormat() {"},{"lineNumber":154,"author":{"gitId":"yeoutzer"},"content":"        System.out.println(\"Error: Invalid content format in save file\");"},{"lineNumber":155,"author":{"gitId":"yeoutzer"},"content":"    }"},{"lineNumber":156,"author":{"gitId":"yeoutzer"},"content":""},{"lineNumber":157,"author":{"gitId":"yeoutzer"},"content":"    /**"},{"lineNumber":158,"author":{"gitId":"yeoutzer"},"content":"     * Prints a message indicating invalid date time format in save file."},{"lineNumber":159,"author":{"gitId":"yeoutzer"},"content":"     */"},{"lineNumber":160,"author":{"gitId":"yeoutzer"},"content":"    public void showInvalidSaveFileDateTimeFormat() {"},{"lineNumber":161,"author":{"gitId":"yeoutzer"},"content":"        System.out.println(\"Error: Invalid date time format in save file or no date time stated\");"},{"lineNumber":162,"author":{"gitId":"yeoutzer"},"content":"    }"},{"lineNumber":163,"author":{"gitId":"yeoutzer"},"content":""},{"lineNumber":164,"author":{"gitId":"yeoutzer"},"content":"    /**"},{"lineNumber":165,"author":{"gitId":"yeoutzer"},"content":"     * Prints a message indicating error while creating save file."},{"lineNumber":166,"author":{"gitId":"yeoutzer"},"content":"     */"},{"lineNumber":167,"author":{"gitId":"yeoutzer"},"content":"    public void showFileCreationError() {"},{"lineNumber":168,"author":{"gitId":"yeoutzer"},"content":"        System.out.println(\"Error happened while trying to create save file\");"},{"lineNumber":169,"author":{"gitId":"yeoutzer"},"content":"    }"},{"lineNumber":170,"author":{"gitId":"yeoutzer"},"content":""},{"lineNumber":171,"author":{"gitId":"yeoutzer"},"content":"    /**"},{"lineNumber":172,"author":{"gitId":"yeoutzer"},"content":"     * Returns a message to indicate wrong duration format."},{"lineNumber":173,"author":{"gitId":"yeoutzer"},"content":"     *"},{"lineNumber":174,"author":{"gitId":"yeoutzer"},"content":"     * @return String indicating wrong duration format."},{"lineNumber":175,"author":{"gitId":"yeoutzer"},"content":"     */"},{"lineNumber":176,"author":{"gitId":"yeoutzer"},"content":"    public String getWrongDurationFormatString() {"},{"lineNumber":177,"author":{"gitId":"yeoutzer"},"content":"        return \"Please enter an integer value in minutes for duration.\";"},{"lineNumber":178,"author":{"gitId":"yeoutzer"},"content":"    }"},{"lineNumber":179,"author":{"gitId":"yeoutzer"},"content":""},{"lineNumber":180,"author":{"gitId":"yeoutzer"},"content":"    /**"},{"lineNumber":181,"author":{"gitId":"yeoutzer"},"content":"     * Prints a message indicating invalid duration format in save file."},{"lineNumber":182,"author":{"gitId":"yeoutzer"},"content":"     */"},{"lineNumber":183,"author":{"gitId":"yeoutzer"},"content":"    public void showInvalidSaveFileDurationFormat() {"},{"lineNumber":184,"author":{"gitId":"yeoutzer"},"content":"        System.out.println(\"Error: Invalid duration format in save file.\");"},{"lineNumber":185,"author":{"gitId":"yeoutzer"},"content":"    }"},{"lineNumber":186,"author":{"gitId":"yeoutzer"},"content":"}"}],"authorContributionMap":{"yeoutzer":186}},{"path":"src/main/resources/view/DialogBox.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"yeoutzer"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"},{"lineNumber":2,"author":{"gitId":"yeoutzer"},"content":""},{"lineNumber":3,"author":{"gitId":"yeoutzer"},"content":"\u003c?import javafx.geometry.Insets?\u003e"},{"lineNumber":4,"author":{"gitId":"yeoutzer"},"content":"\u003c?import javafx.scene.image.ImageView?\u003e"},{"lineNumber":5,"author":{"gitId":"yeoutzer"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e"},{"lineNumber":6,"author":{"gitId":"yeoutzer"},"content":"\u003c?import javafx.scene.text.Text?\u003e"},{"lineNumber":7,"author":{"gitId":"yeoutzer"},"content":""},{"lineNumber":8,"author":{"gitId":"yeoutzer"},"content":"\u003cfx:root alignment\u003d\"TOP_RIGHT\" maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\" prefWidth\u003d\"400.0\" type\u003d\"javafx.scene.layout.HBox\" xmlns\u003d\"http://javafx.com/javafx/8.0.171\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e"},{"lineNumber":9,"author":{"gitId":"yeoutzer"},"content":"    \u003cchildren\u003e"},{"lineNumber":10,"author":{"gitId":"yeoutzer"},"content":"        \u003cText fx:id \u003d \"dialog\" strokeType\u003d\"OUTSIDE\" strokeWidth\u003d\"0.0\" text\u003d\"Text\" textOrigin\u003d\"TOP\" wrappingWidth\u003d\"275.0\"\u003e"},{"lineNumber":11,"author":{"gitId":"yeoutzer"},"content":"         \u003cHBox.margin\u003e"},{"lineNumber":12,"author":{"gitId":"yeoutzer"},"content":"            \u003cInsets left\u003d\"10.0\" right\u003d\"10.0\" /\u003e"},{"lineNumber":13,"author":{"gitId":"yeoutzer"},"content":"         \u003c/HBox.margin\u003e\u003c/Text\u003e"},{"lineNumber":14,"author":{"gitId":"yeoutzer"},"content":"        \u003cImageView fx:id\u003d\"displayPicture\" fitHeight\u003d\"75.0\" fitWidth\u003d\"75.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\" /\u003e"},{"lineNumber":15,"author":{"gitId":"yeoutzer"},"content":"    \u003c/children\u003e"},{"lineNumber":16,"author":{"gitId":"yeoutzer"},"content":"    \u003cpadding\u003e"},{"lineNumber":17,"author":{"gitId":"yeoutzer"},"content":"        \u003cInsets bottom\u003d\"15.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"15.0\" /\u003e"},{"lineNumber":18,"author":{"gitId":"yeoutzer"},"content":"    \u003c/padding\u003e"},{"lineNumber":19,"author":{"gitId":"yeoutzer"},"content":"\u003c/fx:root\u003e"}],"authorContributionMap":{"yeoutzer":19}},{"path":"src/main/resources/view/MainWindow.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"yeoutzer"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"},{"lineNumber":2,"author":{"gitId":"yeoutzer"},"content":""},{"lineNumber":3,"author":{"gitId":"yeoutzer"},"content":"\u003c?import javafx.scene.control.Button?\u003e"},{"lineNumber":4,"author":{"gitId":"yeoutzer"},"content":"\u003c?import javafx.scene.control.ScrollPane?\u003e"},{"lineNumber":5,"author":{"gitId":"yeoutzer"},"content":"\u003c?import javafx.scene.control.TextField?\u003e"},{"lineNumber":6,"author":{"gitId":"yeoutzer"},"content":"\u003c?import javafx.scene.layout.AnchorPane?\u003e"},{"lineNumber":7,"author":{"gitId":"yeoutzer"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e"},{"lineNumber":8,"author":{"gitId":"yeoutzer"},"content":""},{"lineNumber":9,"author":{"gitId":"yeoutzer"},"content":"\u003cAnchorPane maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefHeight\u003d\"600.0\" prefWidth\u003d\"400.0\" xmlns\u003d\"http://javafx.com/javafx/8.0.171\" xmlns:fx\u003d\"http://javafx.com/fxml/1\" fx:controller\u003d\"duke.fxml.MainWindow\"\u003e"},{"lineNumber":10,"author":{"gitId":"yeoutzer"},"content":"    \u003cchildren\u003e"},{"lineNumber":11,"author":{"gitId":"yeoutzer"},"content":"        \u003cTextField fx:id\u003d\"userInput\" layoutY\u003d\"558.0\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"324.0\" AnchorPane.bottomAnchor\u003d\"1.0\" /\u003e"},{"lineNumber":12,"author":{"gitId":"yeoutzer"},"content":"        \u003cButton fx:id\u003d\"sendButton\" layoutX\u003d\"324.0\" layoutY\u003d\"558.0\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"76.0\" text\u003d\"Send\" /\u003e"},{"lineNumber":13,"author":{"gitId":"yeoutzer"},"content":"        \u003cScrollPane fx:id\u003d\"scrollPane\" hbarPolicy\u003d\"NEVER\" hvalue\u003d\"1.0\" prefHeight\u003d\"557.0\" prefWidth\u003d\"400.0\" vvalue\u003d\"1.0\"\u003e"},{"lineNumber":14,"author":{"gitId":"yeoutzer"},"content":"            \u003ccontent\u003e"},{"lineNumber":15,"author":{"gitId":"yeoutzer"},"content":"                \u003cVBox fx:id\u003d\"dialogContainer\" prefHeight\u003d\"552.0\" prefWidth\u003d\"388.0\" /\u003e"},{"lineNumber":16,"author":{"gitId":"yeoutzer"},"content":"            \u003c/content\u003e"},{"lineNumber":17,"author":{"gitId":"yeoutzer"},"content":"        \u003c/ScrollPane\u003e"},{"lineNumber":18,"author":{"gitId":"yeoutzer"},"content":"    \u003c/children\u003e"},{"lineNumber":19,"author":{"gitId":"yeoutzer"},"content":"\u003c/AnchorPane\u003e"}],"authorContributionMap":{"yeoutzer":19}},{"path":"src/test/java/duke/commands/AddCommandTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yeoutzer"},"content":"package duke.commands;"},{"lineNumber":2,"author":{"gitId":"yeoutzer"},"content":""},{"lineNumber":3,"author":{"gitId":"yeoutzer"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;"},{"lineNumber":4,"author":{"gitId":"yeoutzer"},"content":""},{"lineNumber":5,"author":{"gitId":"yeoutzer"},"content":"import java.time.format.DateTimeParseException;"},{"lineNumber":6,"author":{"gitId":"yeoutzer"},"content":"import java.util.ArrayList;"},{"lineNumber":7,"author":{"gitId":"yeoutzer"},"content":""},{"lineNumber":8,"author":{"gitId":"yeoutzer"},"content":"import org.junit.jupiter.api.Test;"},{"lineNumber":9,"author":{"gitId":"yeoutzer"},"content":""},{"lineNumber":10,"author":{"gitId":"yeoutzer"},"content":"import duke.exceptions.DateTimeNotFoundException;"},{"lineNumber":11,"author":{"gitId":"yeoutzer"},"content":"import duke.exceptions.DescriptionNotFoundException;"},{"lineNumber":12,"author":{"gitId":"yeoutzer"},"content":"import duke.storage.Storage;"},{"lineNumber":13,"author":{"gitId":"yeoutzer"},"content":"import duke.tasks.Task;"},{"lineNumber":14,"author":{"gitId":"yeoutzer"},"content":"import duke.tasks.TaskList;"},{"lineNumber":15,"author":{"gitId":"yeoutzer"},"content":"import duke.ui.Ui;"},{"lineNumber":16,"author":{"gitId":"yeoutzer"},"content":""},{"lineNumber":17,"author":{"gitId":"yeoutzer"},"content":"public class AddCommandTest {"},{"lineNumber":18,"author":{"gitId":"yeoutzer"},"content":""},{"lineNumber":19,"author":{"gitId":"yeoutzer"},"content":"    @Test"},{"lineNumber":20,"author":{"gitId":"yeoutzer"},"content":"    public void testAddCommand_noDescriptionGiven_throwsDescriptionNotFoundException() {"},{"lineNumber":21,"author":{"gitId":"yeoutzer"},"content":"        String testCommand \u003d \"deadline /by\";"},{"lineNumber":22,"author":{"gitId":"yeoutzer"},"content":"        TaskList tasks \u003d new TaskList(new ArrayList\u003cTask\u003e());"},{"lineNumber":23,"author":{"gitId":"yeoutzer"},"content":"        Storage storage \u003d new Storage(\"AddCommandTest.txt\");"},{"lineNumber":24,"author":{"gitId":"yeoutzer"},"content":"        Ui ui \u003d new Ui();"},{"lineNumber":25,"author":{"gitId":"yeoutzer"},"content":"        AddCommand addCommand \u003d new AddCommand(testCommand);"},{"lineNumber":26,"author":{"gitId":"yeoutzer"},"content":"        assertThrows(DescriptionNotFoundException.class, () -\u003e addCommand.execute(tasks, ui, storage));"},{"lineNumber":27,"author":{"gitId":"yeoutzer"},"content":"    }"},{"lineNumber":28,"author":{"gitId":"yeoutzer"},"content":""},{"lineNumber":29,"author":{"gitId":"yeoutzer"},"content":"    @Test"},{"lineNumber":30,"author":{"gitId":"yeoutzer"},"content":"    public void testAddCommand_noDateGiven_throwsDateTimeNotFoundException() {"},{"lineNumber":31,"author":{"gitId":"yeoutzer"},"content":"        String testCommand \u003d \"deadline testing /by\";"},{"lineNumber":32,"author":{"gitId":"yeoutzer"},"content":"        TaskList tasks \u003d new TaskList(new ArrayList\u003cTask\u003e());"},{"lineNumber":33,"author":{"gitId":"yeoutzer"},"content":"        Storage storage \u003d new Storage(\"AddCommandTest.txt\");"},{"lineNumber":34,"author":{"gitId":"yeoutzer"},"content":"        Ui ui \u003d new Ui();"},{"lineNumber":35,"author":{"gitId":"yeoutzer"},"content":"        AddCommand addCommand \u003d new AddCommand(testCommand);"},{"lineNumber":36,"author":{"gitId":"yeoutzer"},"content":"        assertThrows(DateTimeNotFoundException.class, () -\u003e addCommand.execute(tasks, ui, storage));"},{"lineNumber":37,"author":{"gitId":"yeoutzer"},"content":"    }"},{"lineNumber":38,"author":{"gitId":"yeoutzer"},"content":""},{"lineNumber":39,"author":{"gitId":"yeoutzer"},"content":"    @Test"},{"lineNumber":40,"author":{"gitId":"yeoutzer"},"content":"    public void testAddCommand_invalidDateTimeFormatGiven_throwsDateTimeParseException() {"},{"lineNumber":41,"author":{"gitId":"yeoutzer"},"content":"        String testCommand \u003d \"deadline testing /by 20/20/2020\";"},{"lineNumber":42,"author":{"gitId":"yeoutzer"},"content":"        TaskList tasks \u003d new TaskList(new ArrayList\u003cTask\u003e());"},{"lineNumber":43,"author":{"gitId":"yeoutzer"},"content":"        Storage storage \u003d new Storage(\"AddCommandTest.txt\");"},{"lineNumber":44,"author":{"gitId":"yeoutzer"},"content":"        Ui ui \u003d new Ui();"},{"lineNumber":45,"author":{"gitId":"yeoutzer"},"content":"        AddCommand addCommand \u003d new AddCommand(testCommand);"},{"lineNumber":46,"author":{"gitId":"yeoutzer"},"content":"        assertThrows(DateTimeParseException.class, () -\u003e addCommand.execute(tasks, ui, storage));"},{"lineNumber":47,"author":{"gitId":"yeoutzer"},"content":"    }"},{"lineNumber":48,"author":{"gitId":"yeoutzer"},"content":"}"}],"authorContributionMap":{"yeoutzer":48}},{"path":"src/test/java/duke/storage/StorageTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yeoutzer"},"content":"package duke.storage;"},{"lineNumber":2,"author":{"gitId":"yeoutzer"},"content":""},{"lineNumber":3,"author":{"gitId":"yeoutzer"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;"},{"lineNumber":4,"author":{"gitId":"yeoutzer"},"content":""},{"lineNumber":5,"author":{"gitId":"yeoutzer"},"content":"import java.io.FileNotFoundException;"},{"lineNumber":6,"author":{"gitId":"yeoutzer"},"content":""},{"lineNumber":7,"author":{"gitId":"yeoutzer"},"content":"import org.junit.jupiter.api.Test;"},{"lineNumber":8,"author":{"gitId":"yeoutzer"},"content":""},{"lineNumber":9,"author":{"gitId":"yeoutzer"},"content":"import duke.exceptions.SaveFileInvalidFormatException;"},{"lineNumber":10,"author":{"gitId":"yeoutzer"},"content":""},{"lineNumber":11,"author":{"gitId":"yeoutzer"},"content":"public class StorageTest {"},{"lineNumber":12,"author":{"gitId":"yeoutzer"},"content":"    @Test"},{"lineNumber":13,"author":{"gitId":"yeoutzer"},"content":"    public void testStorage_invalidFile_throwsFileNotFoundException() {"},{"lineNumber":14,"author":{"gitId":"yeoutzer"},"content":"        Storage storage \u003d new Storage(\"invalidFile.abc\");"},{"lineNumber":15,"author":{"gitId":"yeoutzer"},"content":"        assertThrows(FileNotFoundException.class, () -\u003e storage.load());"},{"lineNumber":16,"author":{"gitId":"yeoutzer"},"content":"    }"},{"lineNumber":17,"author":{"gitId":"yeoutzer"},"content":""},{"lineNumber":18,"author":{"gitId":"yeoutzer"},"content":"    @Test"},{"lineNumber":19,"author":{"gitId":"yeoutzer"},"content":"    public void testStorage_invalidSaveTextFormat_throwsInvalidSaveFileFormatException() {"},{"lineNumber":20,"author":{"gitId":"yeoutzer"},"content":"        Storage storage \u003d new Storage(System.getProperty(\"user.dir\") + \"/java/duke/storage/StorageTest.txt\");"},{"lineNumber":21,"author":{"gitId":"yeoutzer"},"content":"        assertThrows(SaveFileInvalidFormatException.class, () -\u003e storage.load());"},{"lineNumber":22,"author":{"gitId":"yeoutzer"},"content":"    }"},{"lineNumber":23,"author":{"gitId":"yeoutzer"},"content":""},{"lineNumber":24,"author":{"gitId":"yeoutzer"},"content":"}"}],"authorContributionMap":{"yeoutzer":24}},{"path":"src/test/java/duke/storage/StorageTest.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"yeoutzer"},"content":"testing invalid save"}],"authorContributionMap":{"yeoutzer":1}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"yeoutzer"},"content":"todo read book"},{"lineNumber":2,"author":{"gitId":"yeoutzer"},"content":"deadline return book /by June 6th"},{"lineNumber":3,"author":{"gitId":"yeoutzer"},"content":"event project meeting /at Aug 6th 2-4pm"},{"lineNumber":4,"author":{"gitId":"yeoutzer"},"content":"todo join sports club"},{"lineNumber":5,"author":{"gitId":"yeoutzer"},"content":"todo borrow book"},{"lineNumber":6,"author":{"gitId":"yeoutzer"},"content":"done 1"},{"lineNumber":7,"author":{"gitId":"yeoutzer"},"content":"done 4"},{"lineNumber":8,"author":{"gitId":"yeoutzer"},"content":"list"},{"lineNumber":9,"author":{"gitId":"yeoutzer"},"content":"deadline return book /by Sunday"},{"lineNumber":10,"author":{"gitId":"yeoutzer"},"content":"event project meeting /at Mon 2-4pm"},{"lineNumber":11,"author":{"gitId":"yeoutzer"},"content":"deadline do homework /by no idea :-p"},{"lineNumber":12,"author":{"gitId":"yeoutzer"},"content":"bye"}],"authorContributionMap":{"yeoutzer":12}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF"},{"lineNumber":2,"author":{"gitId":"-"},"content":""},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin"},{"lineNumber":5,"author":{"gitId":"-"},"content":""},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run"},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT"},{"lineNumber":8,"author":{"gitId":"-"},"content":""},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder"},{"lineNumber":10,"author":{"gitId":"-"},"content":"javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\*.java"},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 ("},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1"},{"lineNumber":14,"author":{"gitId":"-"},"content":")"},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0"},{"lineNumber":16,"author":{"gitId":"-"},"content":""},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"},{"lineNumber":18,"author":{"gitId":"-"},"content":"java -classpath ..\\bin Duke \u003c input.txt \u003e ACTUAL.TXT"},{"lineNumber":19,"author":{"gitId":"-"},"content":""},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM compare the output to the expected output"},{"lineNumber":21,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT"},{"lineNumber":22,"author":{"gitId":"yeoutzer"},"content":""},{"lineNumber":23,"author":{"gitId":"yeoutzer"},"content":"REM add a timeout to see file comparison result"},{"lineNumber":24,"author":{"gitId":"yeoutzer"},"content":"timeout /t 10"}],"authorContributionMap":{"yeoutzer":3,"-":21}}]
