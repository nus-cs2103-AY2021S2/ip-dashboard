[{"path":"src/main/java/Chatbot.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kingsleykuan"},"content":"/**"},{"lineNumber":2,"author":{"gitId":"kingsleykuan"},"content":" * Interface for a chatbot."},{"lineNumber":3,"author":{"gitId":"kingsleykuan"},"content":" */"},{"lineNumber":4,"author":{"gitId":"kingsleykuan"},"content":"public interface Chatbot {"},{"lineNumber":5,"author":{"gitId":"kingsleykuan"},"content":"    /**"},{"lineNumber":6,"author":{"gitId":"kingsleykuan"},"content":"     * Shutsdown the chatbot and sets a goodbye response."},{"lineNumber":7,"author":{"gitId":"kingsleykuan"},"content":"     * @return Chatbot that has been shut down."},{"lineNumber":8,"author":{"gitId":"kingsleykuan"},"content":"     */"},{"lineNumber":9,"author":{"gitId":"kingsleykuan"},"content":"    public Chatbot shutdown();"},{"lineNumber":10,"author":{"gitId":"kingsleykuan"},"content":""},{"lineNumber":11,"author":{"gitId":"kingsleykuan"},"content":"    /**"},{"lineNumber":12,"author":{"gitId":"kingsleykuan"},"content":"     * Checks if the chatbot is currently running."},{"lineNumber":13,"author":{"gitId":"kingsleykuan"},"content":"     * @return Boolean indicating if chatbot is running."},{"lineNumber":14,"author":{"gitId":"kingsleykuan"},"content":"     */"},{"lineNumber":15,"author":{"gitId":"kingsleykuan"},"content":"    public boolean isRunning();"},{"lineNumber":16,"author":{"gitId":"kingsleykuan"},"content":""},{"lineNumber":17,"author":{"gitId":"kingsleykuan"},"content":"    /**"},{"lineNumber":18,"author":{"gitId":"kingsleykuan"},"content":"     * Gets latest response from the chatbot."},{"lineNumber":19,"author":{"gitId":"kingsleykuan"},"content":"     * @return Latest formatted response from the chatbot."},{"lineNumber":20,"author":{"gitId":"kingsleykuan"},"content":"     */"},{"lineNumber":21,"author":{"gitId":"kingsleykuan"},"content":"    public Response getResponse();"},{"lineNumber":22,"author":{"gitId":"kingsleykuan"},"content":""},{"lineNumber":23,"author":{"gitId":"kingsleykuan"},"content":"    /**"},{"lineNumber":24,"author":{"gitId":"kingsleykuan"},"content":"     * Parses command and returns chatbot with updated state."},{"lineNumber":25,"author":{"gitId":"kingsleykuan"},"content":"     * @param command String command to parse."},{"lineNumber":26,"author":{"gitId":"kingsleykuan"},"content":"     * @return Chatbot with updated internal state."},{"lineNumber":27,"author":{"gitId":"kingsleykuan"},"content":"     */"},{"lineNumber":28,"author":{"gitId":"kingsleykuan"},"content":"    public Chatbot parseCommand(String command);"},{"lineNumber":29,"author":{"gitId":"kingsleykuan"},"content":"}"}],"authorContributionMap":{"kingsleykuan":29}},{"path":"src/main/java/DeadlineTask.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kingsleykuan"},"content":"/**"},{"lineNumber":2,"author":{"gitId":"kingsleykuan"},"content":" * Deadline task that need to be done before a specific date/time."},{"lineNumber":3,"author":{"gitId":"kingsleykuan"},"content":" */"},{"lineNumber":4,"author":{"gitId":"kingsleykuan"},"content":"public class DeadlineTask extends Task {"},{"lineNumber":5,"author":{"gitId":"kingsleykuan"},"content":"    private final String deadline;"},{"lineNumber":6,"author":{"gitId":"kingsleykuan"},"content":""},{"lineNumber":7,"author":{"gitId":"kingsleykuan"},"content":"    public DeadlineTask(String taskArgs) throws OwenException {"},{"lineNumber":8,"author":{"gitId":"kingsleykuan"},"content":"        super();"},{"lineNumber":9,"author":{"gitId":"kingsleykuan"},"content":""},{"lineNumber":10,"author":{"gitId":"kingsleykuan"},"content":"        String[] taskArgsSplit \u003d taskArgs.split(\" /by \", 2);"},{"lineNumber":11,"author":{"gitId":"kingsleykuan"},"content":""},{"lineNumber":12,"author":{"gitId":"kingsleykuan"},"content":"        if (taskArgsSplit.length \u003c 2) {"},{"lineNumber":13,"author":{"gitId":"kingsleykuan"},"content":"            throw new OwenException(\"Deadline task must have a description and due date/time...\");"},{"lineNumber":14,"author":{"gitId":"kingsleykuan"},"content":"        }"},{"lineNumber":15,"author":{"gitId":"kingsleykuan"},"content":""},{"lineNumber":16,"author":{"gitId":"kingsleykuan"},"content":"        this.description \u003d taskArgsSplit[0];"},{"lineNumber":17,"author":{"gitId":"kingsleykuan"},"content":"        this.deadline \u003d taskArgsSplit[1];"},{"lineNumber":18,"author":{"gitId":"kingsleykuan"},"content":"    }"},{"lineNumber":19,"author":{"gitId":"kingsleykuan"},"content":""},{"lineNumber":20,"author":{"gitId":"kingsleykuan"},"content":"    private DeadlineTask(String description, boolean isDone, String deadline) {"},{"lineNumber":21,"author":{"gitId":"kingsleykuan"},"content":"        super(description, isDone);"},{"lineNumber":22,"author":{"gitId":"kingsleykuan"},"content":"        this.deadline \u003d deadline;"},{"lineNumber":23,"author":{"gitId":"kingsleykuan"},"content":"    }"},{"lineNumber":24,"author":{"gitId":"kingsleykuan"},"content":""},{"lineNumber":25,"author":{"gitId":"kingsleykuan"},"content":"    @Override"},{"lineNumber":26,"author":{"gitId":"kingsleykuan"},"content":"    public DeadlineTask markAsDone() {"},{"lineNumber":27,"author":{"gitId":"kingsleykuan"},"content":"        return new DeadlineTask(this.description, true, this.deadline);"},{"lineNumber":28,"author":{"gitId":"kingsleykuan"},"content":"    }"},{"lineNumber":29,"author":{"gitId":"kingsleykuan"},"content":""},{"lineNumber":30,"author":{"gitId":"kingsleykuan"},"content":"    @Override"},{"lineNumber":31,"author":{"gitId":"kingsleykuan"},"content":"    public String toString() {"},{"lineNumber":32,"author":{"gitId":"kingsleykuan"},"content":"        String taskFormat \u003d \"[%s][%s] %s (by: %s)\";"},{"lineNumber":33,"author":{"gitId":"kingsleykuan"},"content":"        return String.format("},{"lineNumber":34,"author":{"gitId":"kingsleykuan"},"content":"                taskFormat,"},{"lineNumber":35,"author":{"gitId":"kingsleykuan"},"content":"                this.getTypeIcon(),"},{"lineNumber":36,"author":{"gitId":"kingsleykuan"},"content":"                this.getStatusIcon(),"},{"lineNumber":37,"author":{"gitId":"kingsleykuan"},"content":"                this.description,"},{"lineNumber":38,"author":{"gitId":"kingsleykuan"},"content":"                this.deadline);"},{"lineNumber":39,"author":{"gitId":"kingsleykuan"},"content":"    }"},{"lineNumber":40,"author":{"gitId":"kingsleykuan"},"content":""},{"lineNumber":41,"author":{"gitId":"kingsleykuan"},"content":"    @Override"},{"lineNumber":42,"author":{"gitId":"kingsleykuan"},"content":"    protected String getTypeIcon() {"},{"lineNumber":43,"author":{"gitId":"kingsleykuan"},"content":"        return \"D\";"},{"lineNumber":44,"author":{"gitId":"kingsleykuan"},"content":"    }"},{"lineNumber":45,"author":{"gitId":"kingsleykuan"},"content":"}"}],"authorContributionMap":{"kingsleykuan":45}},{"path":"src/main/java/DefaultResponse.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kingsleykuan"},"content":"/**"},{"lineNumber":2,"author":{"gitId":"kingsleykuan"},"content":" * A default formatted chatbot response."},{"lineNumber":3,"author":{"gitId":"kingsleykuan"},"content":" */"},{"lineNumber":4,"author":{"gitId":"kingsleykuan"},"content":"public class DefaultResponse implements Response {"},{"lineNumber":5,"author":{"gitId":"kingsleykuan"},"content":"    private final String response;"},{"lineNumber":6,"author":{"gitId":"kingsleykuan"},"content":""},{"lineNumber":7,"author":{"gitId":"kingsleykuan"},"content":"    /**"},{"lineNumber":8,"author":{"gitId":"kingsleykuan"},"content":"     * Creates a default formatted chatbot response from a String."},{"lineNumber":9,"author":{"gitId":"kingsleykuan"},"content":"     * "},{"lineNumber":10,"author":{"gitId":"kingsleykuan"},"content":"     * @param response Raw unformatted response string."},{"lineNumber":11,"author":{"gitId":"kingsleykuan"},"content":"     */"},{"lineNumber":12,"author":{"gitId":"kingsleykuan"},"content":"    public DefaultResponse(String response) {"},{"lineNumber":13,"author":{"gitId":"kingsleykuan"},"content":"        this.response \u003d response;"},{"lineNumber":14,"author":{"gitId":"kingsleykuan"},"content":"    }"},{"lineNumber":15,"author":{"gitId":"kingsleykuan"},"content":""},{"lineNumber":16,"author":{"gitId":"kingsleykuan"},"content":"    @Override"},{"lineNumber":17,"author":{"gitId":"kingsleykuan"},"content":"    public String getUnformattedResponse() {"},{"lineNumber":18,"author":{"gitId":"kingsleykuan"},"content":"        return this.response;"},{"lineNumber":19,"author":{"gitId":"kingsleykuan"},"content":"    }"},{"lineNumber":20,"author":{"gitId":"kingsleykuan"},"content":""},{"lineNumber":21,"author":{"gitId":"kingsleykuan"},"content":"    @Override"},{"lineNumber":22,"author":{"gitId":"kingsleykuan"},"content":"    public String getFormattedResponse() {"},{"lineNumber":23,"author":{"gitId":"kingsleykuan"},"content":"        String responseFormat \u003d"},{"lineNumber":24,"author":{"gitId":"kingsleykuan"},"content":"                \"____________________________________________________________\\n\""},{"lineNumber":25,"author":{"gitId":"kingsleykuan"},"content":"                + \"%s\\n\""},{"lineNumber":26,"author":{"gitId":"kingsleykuan"},"content":"                + \"____________________________________________________________\\n\";"},{"lineNumber":27,"author":{"gitId":"kingsleykuan"},"content":""},{"lineNumber":28,"author":{"gitId":"kingsleykuan"},"content":"        String formattedResponse \u003d String.format(responseFormat, this.getUnformattedResponse());"},{"lineNumber":29,"author":{"gitId":"kingsleykuan"},"content":"        // Indent response by 4 spaces"},{"lineNumber":30,"author":{"gitId":"kingsleykuan"},"content":"        formattedResponse \u003d formattedResponse.replaceAll(\"(?m)^\", \"    \");"},{"lineNumber":31,"author":{"gitId":"kingsleykuan"},"content":"        return formattedResponse;"},{"lineNumber":32,"author":{"gitId":"kingsleykuan"},"content":"    }"},{"lineNumber":33,"author":{"gitId":"kingsleykuan"},"content":""},{"lineNumber":34,"author":{"gitId":"kingsleykuan"},"content":"    @Override"},{"lineNumber":35,"author":{"gitId":"kingsleykuan"},"content":"    public String toString() {"},{"lineNumber":36,"author":{"gitId":"kingsleykuan"},"content":"        return this.getFormattedResponse();"},{"lineNumber":37,"author":{"gitId":"kingsleykuan"},"content":"    }"},{"lineNumber":38,"author":{"gitId":"kingsleykuan"},"content":"}"}],"authorContributionMap":{"kingsleykuan":38}},{"path":"src/main/java/EventTask.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kingsleykuan"},"content":"/**"},{"lineNumber":2,"author":{"gitId":"kingsleykuan"},"content":" * Event task that start and ends at specific times."},{"lineNumber":3,"author":{"gitId":"kingsleykuan"},"content":" */"},{"lineNumber":4,"author":{"gitId":"kingsleykuan"},"content":"public class EventTask extends Task {"},{"lineNumber":5,"author":{"gitId":"kingsleykuan"},"content":"    private final String startEndTime;"},{"lineNumber":6,"author":{"gitId":"kingsleykuan"},"content":""},{"lineNumber":7,"author":{"gitId":"kingsleykuan"},"content":"    public EventTask(String taskArgs) throws OwenException {"},{"lineNumber":8,"author":{"gitId":"kingsleykuan"},"content":"        super();"},{"lineNumber":9,"author":{"gitId":"kingsleykuan"},"content":""},{"lineNumber":10,"author":{"gitId":"kingsleykuan"},"content":"        String[] taskArgsSplit \u003d taskArgs.split(\" /at \", 2);"},{"lineNumber":11,"author":{"gitId":"kingsleykuan"},"content":""},{"lineNumber":12,"author":{"gitId":"kingsleykuan"},"content":"        if (taskArgsSplit.length \u003c 2) {"},{"lineNumber":13,"author":{"gitId":"kingsleykuan"},"content":"            throw new OwenException(\"Event task must have a description and start/end time...\");"},{"lineNumber":14,"author":{"gitId":"kingsleykuan"},"content":"        }"},{"lineNumber":15,"author":{"gitId":"kingsleykuan"},"content":""},{"lineNumber":16,"author":{"gitId":"kingsleykuan"},"content":"        this.description \u003d taskArgsSplit[0];"},{"lineNumber":17,"author":{"gitId":"kingsleykuan"},"content":"        this.startEndTime \u003d taskArgsSplit[1];"},{"lineNumber":18,"author":{"gitId":"kingsleykuan"},"content":"    }"},{"lineNumber":19,"author":{"gitId":"kingsleykuan"},"content":""},{"lineNumber":20,"author":{"gitId":"kingsleykuan"},"content":"    private EventTask(String description, boolean isDone, String startEndTime) {"},{"lineNumber":21,"author":{"gitId":"kingsleykuan"},"content":"        super(description, isDone);"},{"lineNumber":22,"author":{"gitId":"kingsleykuan"},"content":"        this.startEndTime \u003d startEndTime;"},{"lineNumber":23,"author":{"gitId":"kingsleykuan"},"content":"    }"},{"lineNumber":24,"author":{"gitId":"kingsleykuan"},"content":""},{"lineNumber":25,"author":{"gitId":"kingsleykuan"},"content":"    @Override"},{"lineNumber":26,"author":{"gitId":"kingsleykuan"},"content":"    public EventTask markAsDone() {"},{"lineNumber":27,"author":{"gitId":"kingsleykuan"},"content":"        return new EventTask(this.description, true, this.startEndTime);"},{"lineNumber":28,"author":{"gitId":"kingsleykuan"},"content":"    }"},{"lineNumber":29,"author":{"gitId":"kingsleykuan"},"content":""},{"lineNumber":30,"author":{"gitId":"kingsleykuan"},"content":"    @Override"},{"lineNumber":31,"author":{"gitId":"kingsleykuan"},"content":"    public String toString() {"},{"lineNumber":32,"author":{"gitId":"kingsleykuan"},"content":"        String taskFormat \u003d \"[%s][%s] %s (at: %s)\";"},{"lineNumber":33,"author":{"gitId":"kingsleykuan"},"content":"        return String.format("},{"lineNumber":34,"author":{"gitId":"kingsleykuan"},"content":"                taskFormat,"},{"lineNumber":35,"author":{"gitId":"kingsleykuan"},"content":"                this.getTypeIcon(),"},{"lineNumber":36,"author":{"gitId":"kingsleykuan"},"content":"                this.getStatusIcon(),"},{"lineNumber":37,"author":{"gitId":"kingsleykuan"},"content":"                this.description,"},{"lineNumber":38,"author":{"gitId":"kingsleykuan"},"content":"                this.startEndTime);"},{"lineNumber":39,"author":{"gitId":"kingsleykuan"},"content":"    }"},{"lineNumber":40,"author":{"gitId":"kingsleykuan"},"content":""},{"lineNumber":41,"author":{"gitId":"kingsleykuan"},"content":"    @Override"},{"lineNumber":42,"author":{"gitId":"kingsleykuan"},"content":"    protected String getTypeIcon() {"},{"lineNumber":43,"author":{"gitId":"kingsleykuan"},"content":"        return \"E\";"},{"lineNumber":44,"author":{"gitId":"kingsleykuan"},"content":"    }"},{"lineNumber":45,"author":{"gitId":"kingsleykuan"},"content":"}"}],"authorContributionMap":{"kingsleykuan":45}},{"path":"src/main/java/Main.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kingsleykuan"},"content":"import java.util.Scanner;"},{"lineNumber":2,"author":{"gitId":"kingsleykuan"},"content":""},{"lineNumber":3,"author":{"gitId":"kingsleykuan"},"content":"public class Main {"},{"lineNumber":4,"author":{"gitId":"kingsleykuan"},"content":"    public static void main(String[] args) {"},{"lineNumber":5,"author":{"gitId":"kingsleykuan"},"content":"        Chatbot owen \u003d new Owen();"},{"lineNumber":6,"author":{"gitId":"kingsleykuan"},"content":"        Response response \u003d owen.getResponse();"},{"lineNumber":7,"author":{"gitId":"kingsleykuan"},"content":"        System.out.println(response);"},{"lineNumber":8,"author":{"gitId":"kingsleykuan"},"content":""},{"lineNumber":9,"author":{"gitId":"kingsleykuan"},"content":"        Scanner scanner \u003d new Scanner(System.in);"},{"lineNumber":10,"author":{"gitId":"kingsleykuan"},"content":""},{"lineNumber":11,"author":{"gitId":"kingsleykuan"},"content":"        while (owen.isRunning()) {"},{"lineNumber":12,"author":{"gitId":"kingsleykuan"},"content":"            String command \u003d scanner.nextLine();"},{"lineNumber":13,"author":{"gitId":"kingsleykuan"},"content":"            owen \u003d owen.parseCommand(command);"},{"lineNumber":14,"author":{"gitId":"kingsleykuan"},"content":"            System.out.println(owen.getResponse().getFormattedResponse());"},{"lineNumber":15,"author":{"gitId":"kingsleykuan"},"content":"        }"},{"lineNumber":16,"author":{"gitId":"kingsleykuan"},"content":""},{"lineNumber":17,"author":{"gitId":"kingsleykuan"},"content":"        scanner.close();"},{"lineNumber":18,"author":{"gitId":"kingsleykuan"},"content":"    }"},{"lineNumber":19,"author":{"gitId":"kingsleykuan"},"content":"}"}],"authorContributionMap":{"kingsleykuan":19}},{"path":"src/main/java/Owen.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kingsleykuan"},"content":"/**"},{"lineNumber":2,"author":{"gitId":"kingsleykuan"},"content":" * Owen is a personal assistant chatbot."},{"lineNumber":3,"author":{"gitId":"kingsleykuan"},"content":" * "},{"lineNumber":4,"author":{"gitId":"kingsleykuan"},"content":" * As Owen is an immutable class, modifications will return a copy"},{"lineNumber":5,"author":{"gitId":"kingsleykuan"},"content":" * with updated internal state."},{"lineNumber":6,"author":{"gitId":"kingsleykuan"},"content":" */"},{"lineNumber":7,"author":{"gitId":"kingsleykuan"},"content":"public class Owen implements Chatbot {"},{"lineNumber":8,"author":{"gitId":"kingsleykuan"},"content":"    private enum Command {"},{"lineNumber":9,"author":{"gitId":"kingsleykuan"},"content":"        TODO,"},{"lineNumber":10,"author":{"gitId":"kingsleykuan"},"content":"        EVENT,"},{"lineNumber":11,"author":{"gitId":"kingsleykuan"},"content":"        DEADLINE,"},{"lineNumber":12,"author":{"gitId":"kingsleykuan"},"content":"        LIST,"},{"lineNumber":13,"author":{"gitId":"kingsleykuan"},"content":"        DONE,"},{"lineNumber":14,"author":{"gitId":"kingsleykuan"},"content":"        DELETE,"},{"lineNumber":15,"author":{"gitId":"kingsleykuan"},"content":"        BYE,"},{"lineNumber":16,"author":{"gitId":"kingsleykuan"},"content":"    }"},{"lineNumber":17,"author":{"gitId":"kingsleykuan"},"content":""},{"lineNumber":18,"author":{"gitId":"kingsleykuan"},"content":"    private final boolean isRunning;"},{"lineNumber":19,"author":{"gitId":"kingsleykuan"},"content":"    private final Response latestResponse;"},{"lineNumber":20,"author":{"gitId":"kingsleykuan"},"content":"    private final TaskList taskList;"},{"lineNumber":21,"author":{"gitId":"kingsleykuan"},"content":""},{"lineNumber":22,"author":{"gitId":"kingsleykuan"},"content":"    /**"},{"lineNumber":23,"author":{"gitId":"kingsleykuan"},"content":"     * Creates an Owen chatbot with a hello response."},{"lineNumber":24,"author":{"gitId":"kingsleykuan"},"content":"     */"},{"lineNumber":25,"author":{"gitId":"kingsleykuan"},"content":"    public Owen() {"},{"lineNumber":26,"author":{"gitId":"kingsleykuan"},"content":"        this.isRunning \u003d true;"},{"lineNumber":27,"author":{"gitId":"kingsleykuan"},"content":""},{"lineNumber":28,"author":{"gitId":"kingsleykuan"},"content":"        StringBuilder stringBuilder \u003d new StringBuilder();"},{"lineNumber":29,"author":{"gitId":"kingsleykuan"},"content":"        String logo \u003d \"\""},{"lineNumber":30,"author":{"gitId":"kingsleykuan"},"content":"                + \" /\\\\_/\\\\ \\n\""},{"lineNumber":31,"author":{"gitId":"kingsleykuan"},"content":"                + \"((OvO))\\n\""},{"lineNumber":32,"author":{"gitId":"kingsleykuan"},"content":"                + \"():::()\\n\""},{"lineNumber":33,"author":{"gitId":"kingsleykuan"},"content":"                + \" VV-VV \\n\";"},{"lineNumber":34,"author":{"gitId":"kingsleykuan"},"content":"        stringBuilder.append(logo);"},{"lineNumber":35,"author":{"gitId":"kingsleykuan"},"content":"        stringBuilder.append(\"\\nHello I am Owen the Owl!\");"},{"lineNumber":36,"author":{"gitId":"kingsleykuan"},"content":"        this.latestResponse \u003d new DefaultResponse(stringBuilder.toString());"},{"lineNumber":37,"author":{"gitId":"kingsleykuan"},"content":""},{"lineNumber":38,"author":{"gitId":"kingsleykuan"},"content":"        this.taskList \u003d new TaskList();"},{"lineNumber":39,"author":{"gitId":"kingsleykuan"},"content":"    }"},{"lineNumber":40,"author":{"gitId":"kingsleykuan"},"content":""},{"lineNumber":41,"author":{"gitId":"kingsleykuan"},"content":"    private Owen(boolean isRunning, Response latestResponse, TaskList taskList) {"},{"lineNumber":42,"author":{"gitId":"kingsleykuan"},"content":"        this.isRunning \u003d isRunning;"},{"lineNumber":43,"author":{"gitId":"kingsleykuan"},"content":"        this.latestResponse \u003d latestResponse;"},{"lineNumber":44,"author":{"gitId":"kingsleykuan"},"content":"        this.taskList \u003d taskList;"},{"lineNumber":45,"author":{"gitId":"kingsleykuan"},"content":"    }"},{"lineNumber":46,"author":{"gitId":"kingsleykuan"},"content":""},{"lineNumber":47,"author":{"gitId":"kingsleykuan"},"content":"    @Override"},{"lineNumber":48,"author":{"gitId":"kingsleykuan"},"content":"    public Owen shutdown() {"},{"lineNumber":49,"author":{"gitId":"kingsleykuan"},"content":"        Response shutdownResponse \u003d new DefaultResponse(\"Bye. Hope to see you again soon!\");"},{"lineNumber":50,"author":{"gitId":"kingsleykuan"},"content":"        return new Owen(false, shutdownResponse, this.taskList);"},{"lineNumber":51,"author":{"gitId":"kingsleykuan"},"content":"    }"},{"lineNumber":52,"author":{"gitId":"kingsleykuan"},"content":""},{"lineNumber":53,"author":{"gitId":"kingsleykuan"},"content":"    @Override"},{"lineNumber":54,"author":{"gitId":"kingsleykuan"},"content":"    public boolean isRunning() {"},{"lineNumber":55,"author":{"gitId":"kingsleykuan"},"content":"        return this.isRunning;"},{"lineNumber":56,"author":{"gitId":"kingsleykuan"},"content":"    }"},{"lineNumber":57,"author":{"gitId":"kingsleykuan"},"content":""},{"lineNumber":58,"author":{"gitId":"kingsleykuan"},"content":"    @Override"},{"lineNumber":59,"author":{"gitId":"kingsleykuan"},"content":"    public Response getResponse() {"},{"lineNumber":60,"author":{"gitId":"kingsleykuan"},"content":"        return this.latestResponse;"},{"lineNumber":61,"author":{"gitId":"kingsleykuan"},"content":"    }"},{"lineNumber":62,"author":{"gitId":"kingsleykuan"},"content":""},{"lineNumber":63,"author":{"gitId":"kingsleykuan"},"content":"    @Override"},{"lineNumber":64,"author":{"gitId":"kingsleykuan"},"content":"    public Owen parseCommand(String command) {"},{"lineNumber":65,"author":{"gitId":"kingsleykuan"},"content":"        String[] splitCommand \u003d command.split(\" \", 2);"},{"lineNumber":66,"author":{"gitId":"kingsleykuan"},"content":"        String parsedCommandString \u003d splitCommand[0];"},{"lineNumber":67,"author":{"gitId":"kingsleykuan"},"content":""},{"lineNumber":68,"author":{"gitId":"kingsleykuan"},"content":"        try {"},{"lineNumber":69,"author":{"gitId":"kingsleykuan"},"content":"            // Try converting command to enum"},{"lineNumber":70,"author":{"gitId":"kingsleykuan"},"content":"            Command parsedCommand;"},{"lineNumber":71,"author":{"gitId":"kingsleykuan"},"content":"            try {"},{"lineNumber":72,"author":{"gitId":"kingsleykuan"},"content":"                parsedCommand \u003d Command.valueOf(parsedCommandString.toUpperCase());"},{"lineNumber":73,"author":{"gitId":"kingsleykuan"},"content":"            } catch (IllegalArgumentException exception) {"},{"lineNumber":74,"author":{"gitId":"kingsleykuan"},"content":"                throw new OwenException(\"I\u0027m sorry, but I don\u0027t know what that means...\");"},{"lineNumber":75,"author":{"gitId":"kingsleykuan"},"content":"            }"},{"lineNumber":76,"author":{"gitId":"kingsleykuan"},"content":""},{"lineNumber":77,"author":{"gitId":"kingsleykuan"},"content":"            switch (parsedCommand) {"},{"lineNumber":78,"author":{"gitId":"kingsleykuan"},"content":"            case TODO:"},{"lineNumber":79,"author":{"gitId":"kingsleykuan"},"content":"            case EVENT:"},{"lineNumber":80,"author":{"gitId":"kingsleykuan"},"content":"            case DEADLINE:"},{"lineNumber":81,"author":{"gitId":"kingsleykuan"},"content":"                return this.addTask(command);"},{"lineNumber":82,"author":{"gitId":"kingsleykuan"},"content":"            case LIST:"},{"lineNumber":83,"author":{"gitId":"kingsleykuan"},"content":"                return this.listTasks();"},{"lineNumber":84,"author":{"gitId":"kingsleykuan"},"content":"            case DONE:"},{"lineNumber":85,"author":{"gitId":"kingsleykuan"},"content":"                if (splitCommand.length \u003c 2) {"},{"lineNumber":86,"author":{"gitId":"kingsleykuan"},"content":"                    throw new OwenException(\"Task number must be specified...\");"},{"lineNumber":87,"author":{"gitId":"kingsleykuan"},"content":"                }"},{"lineNumber":88,"author":{"gitId":"kingsleykuan"},"content":"                return this.doneTask(this.parseTaskNumber(splitCommand[1]));"},{"lineNumber":89,"author":{"gitId":"kingsleykuan"},"content":"            case DELETE:"},{"lineNumber":90,"author":{"gitId":"kingsleykuan"},"content":"                if (splitCommand.length \u003c 2) {"},{"lineNumber":91,"author":{"gitId":"kingsleykuan"},"content":"                    throw new OwenException(\"Task number must be specified...\");"},{"lineNumber":92,"author":{"gitId":"kingsleykuan"},"content":"                }"},{"lineNumber":93,"author":{"gitId":"kingsleykuan"},"content":"                return this.deleteTask(this.parseTaskNumber(splitCommand[1]));"},{"lineNumber":94,"author":{"gitId":"kingsleykuan"},"content":"            case BYE:"},{"lineNumber":95,"author":{"gitId":"kingsleykuan"},"content":"                return this.shutdown();"},{"lineNumber":96,"author":{"gitId":"kingsleykuan"},"content":"            default:"},{"lineNumber":97,"author":{"gitId":"kingsleykuan"},"content":"                throw new OwenException(\"I\u0027m sorry, but I don\u0027t know what that means...\");"},{"lineNumber":98,"author":{"gitId":"kingsleykuan"},"content":"            }"},{"lineNumber":99,"author":{"gitId":"kingsleykuan"},"content":"        } catch (OwenException exception) {"},{"lineNumber":100,"author":{"gitId":"kingsleykuan"},"content":"            Response exceptionResponse \u003d new DefaultResponse(exception.getMessage());"},{"lineNumber":101,"author":{"gitId":"kingsleykuan"},"content":"            return new Owen(this.isRunning, exceptionResponse, this.taskList);"},{"lineNumber":102,"author":{"gitId":"kingsleykuan"},"content":"        }"},{"lineNumber":103,"author":{"gitId":"kingsleykuan"},"content":"    }"},{"lineNumber":104,"author":{"gitId":"kingsleykuan"},"content":""},{"lineNumber":105,"author":{"gitId":"kingsleykuan"},"content":"    private int parseTaskNumber(String taskNumber) throws OwenException {"},{"lineNumber":106,"author":{"gitId":"kingsleykuan"},"content":"        try {"},{"lineNumber":107,"author":{"gitId":"kingsleykuan"},"content":"            return Integer.parseInt(taskNumber);"},{"lineNumber":108,"author":{"gitId":"kingsleykuan"},"content":"        } catch (NumberFormatException exception) {"},{"lineNumber":109,"author":{"gitId":"kingsleykuan"},"content":"            throw new OwenException(\"Task number must be specified...\");"},{"lineNumber":110,"author":{"gitId":"kingsleykuan"},"content":"        }"},{"lineNumber":111,"author":{"gitId":"kingsleykuan"},"content":"    }"},{"lineNumber":112,"author":{"gitId":"kingsleykuan"},"content":""},{"lineNumber":113,"author":{"gitId":"kingsleykuan"},"content":"    private Owen addTask(String task) throws OwenException {"},{"lineNumber":114,"author":{"gitId":"kingsleykuan"},"content":"        TaskList addedTaskList \u003d this.taskList.addTask(task);"},{"lineNumber":115,"author":{"gitId":"kingsleykuan"},"content":"        int numTasks \u003d addedTaskList.getNumTasks();"},{"lineNumber":116,"author":{"gitId":"kingsleykuan"},"content":"        String addedFormat \u003d \"\""},{"lineNumber":117,"author":{"gitId":"kingsleykuan"},"content":"                + \"Got it. I\u0027ve added this task:\\n\""},{"lineNumber":118,"author":{"gitId":"kingsleykuan"},"content":"                + \"    %s\\n\""},{"lineNumber":119,"author":{"gitId":"kingsleykuan"},"content":"                + \"Now you have %d tasks in the list.\";"},{"lineNumber":120,"author":{"gitId":"kingsleykuan"},"content":"        Response addResponse \u003d new DefaultResponse(String.format("},{"lineNumber":121,"author":{"gitId":"kingsleykuan"},"content":"                addedFormat, addedTaskList.getTask(numTasks), numTasks));"},{"lineNumber":122,"author":{"gitId":"kingsleykuan"},"content":"        return new Owen(this.isRunning, addResponse, addedTaskList);"},{"lineNumber":123,"author":{"gitId":"kingsleykuan"},"content":"    }"},{"lineNumber":124,"author":{"gitId":"kingsleykuan"},"content":""},{"lineNumber":125,"author":{"gitId":"kingsleykuan"},"content":"    private Owen listTasks() {"},{"lineNumber":126,"author":{"gitId":"kingsleykuan"},"content":"        Response listResponse \u003d new DefaultResponse(this.taskList.toString());"},{"lineNumber":127,"author":{"gitId":"kingsleykuan"},"content":"        return new Owen(this.isRunning, listResponse, this.taskList);"},{"lineNumber":128,"author":{"gitId":"kingsleykuan"},"content":"    }"},{"lineNumber":129,"author":{"gitId":"kingsleykuan"},"content":""},{"lineNumber":130,"author":{"gitId":"kingsleykuan"},"content":"    private Owen doneTask(int taskNumber) throws OwenException {"},{"lineNumber":131,"author":{"gitId":"kingsleykuan"},"content":"        TaskList doneTaskList \u003d this.taskList.markAsDone(taskNumber);"},{"lineNumber":132,"author":{"gitId":"kingsleykuan"},"content":"        String doneFormat \u003d \"Nice! I\u0027ve marked this task as done:\\n    %s\";"},{"lineNumber":133,"author":{"gitId":"kingsleykuan"},"content":"        Response doneResponse \u003d new DefaultResponse(String.format("},{"lineNumber":134,"author":{"gitId":"kingsleykuan"},"content":"                doneFormat, doneTaskList.getTask(taskNumber).toString()));"},{"lineNumber":135,"author":{"gitId":"kingsleykuan"},"content":"        return new Owen(this.isRunning, doneResponse, doneTaskList);"},{"lineNumber":136,"author":{"gitId":"kingsleykuan"},"content":"    }"},{"lineNumber":137,"author":{"gitId":"kingsleykuan"},"content":""},{"lineNumber":138,"author":{"gitId":"kingsleykuan"},"content":"    private Owen deleteTask(int taskNumber) throws OwenException {"},{"lineNumber":139,"author":{"gitId":"kingsleykuan"},"content":"        TaskList deleteTaskList \u003d this.taskList.deleteTask(taskNumber);"},{"lineNumber":140,"author":{"gitId":"kingsleykuan"},"content":"        String deleteFormat \u003d \"\""},{"lineNumber":141,"author":{"gitId":"kingsleykuan"},"content":"                + \"Noted. I\u0027ve removed this task:\\n\""},{"lineNumber":142,"author":{"gitId":"kingsleykuan"},"content":"                + \"    %s\\n\""},{"lineNumber":143,"author":{"gitId":"kingsleykuan"},"content":"                + \"Now you have %d tasks in the list.\";"},{"lineNumber":144,"author":{"gitId":"kingsleykuan"},"content":"        int newNumTasks \u003d deleteTaskList.getNumTasks();"},{"lineNumber":145,"author":{"gitId":"kingsleykuan"},"content":"        Response deleteResponse \u003d new DefaultResponse(String.format("},{"lineNumber":146,"author":{"gitId":"kingsleykuan"},"content":"                deleteFormat, this.taskList.getTask(taskNumber), newNumTasks));"},{"lineNumber":147,"author":{"gitId":"kingsleykuan"},"content":"        return new Owen(this.isRunning, deleteResponse, deleteTaskList);"},{"lineNumber":148,"author":{"gitId":"kingsleykuan"},"content":"    }"},{"lineNumber":149,"author":{"gitId":"kingsleykuan"},"content":"}"}],"authorContributionMap":{"kingsleykuan":149}},{"path":"src/main/java/OwenException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kingsleykuan"},"content":"public class OwenException extends Exception {"},{"lineNumber":2,"author":{"gitId":"kingsleykuan"},"content":"    public OwenException(String message) {"},{"lineNumber":3,"author":{"gitId":"kingsleykuan"},"content":"        super(\"Ooooo noo...\\n\" + message);"},{"lineNumber":4,"author":{"gitId":"kingsleykuan"},"content":"    }"},{"lineNumber":5,"author":{"gitId":"kingsleykuan"},"content":"}"}],"authorContributionMap":{"kingsleykuan":5}},{"path":"src/main/java/Response.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kingsleykuan"},"content":"/**"},{"lineNumber":2,"author":{"gitId":"kingsleykuan"},"content":" * Interface for a formatted chatbot response."},{"lineNumber":3,"author":{"gitId":"kingsleykuan"},"content":" */"},{"lineNumber":4,"author":{"gitId":"kingsleykuan"},"content":"public interface Response {"},{"lineNumber":5,"author":{"gitId":"kingsleykuan"},"content":"    /**"},{"lineNumber":6,"author":{"gitId":"kingsleykuan"},"content":"     * Returns plain unformatted response as a String."},{"lineNumber":7,"author":{"gitId":"kingsleykuan"},"content":"     * "},{"lineNumber":8,"author":{"gitId":"kingsleykuan"},"content":"     * @return Unformatted response string."},{"lineNumber":9,"author":{"gitId":"kingsleykuan"},"content":"     */"},{"lineNumber":10,"author":{"gitId":"kingsleykuan"},"content":"    public String getUnformattedResponse();"},{"lineNumber":11,"author":{"gitId":"kingsleykuan"},"content":""},{"lineNumber":12,"author":{"gitId":"kingsleykuan"},"content":"    /**"},{"lineNumber":13,"author":{"gitId":"kingsleykuan"},"content":"     * Returns formatted response as a String."},{"lineNumber":14,"author":{"gitId":"kingsleykuan"},"content":"     * "},{"lineNumber":15,"author":{"gitId":"kingsleykuan"},"content":"     * @return Formatted response string."},{"lineNumber":16,"author":{"gitId":"kingsleykuan"},"content":"     */"},{"lineNumber":17,"author":{"gitId":"kingsleykuan"},"content":"    public String getFormattedResponse();"},{"lineNumber":18,"author":{"gitId":"kingsleykuan"},"content":"}"}],"authorContributionMap":{"kingsleykuan":18}},{"path":"src/main/java/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kingsleykuan"},"content":"/**"},{"lineNumber":2,"author":{"gitId":"kingsleykuan"},"content":" * An abstract task with a description and a status."},{"lineNumber":3,"author":{"gitId":"kingsleykuan"},"content":" */"},{"lineNumber":4,"author":{"gitId":"kingsleykuan"},"content":"public abstract class Task {"},{"lineNumber":5,"author":{"gitId":"kingsleykuan"},"content":"    protected String description;"},{"lineNumber":6,"author":{"gitId":"kingsleykuan"},"content":"    protected boolean isDone;"},{"lineNumber":7,"author":{"gitId":"kingsleykuan"},"content":""},{"lineNumber":8,"author":{"gitId":"kingsleykuan"},"content":"    protected Task() {"},{"lineNumber":9,"author":{"gitId":"kingsleykuan"},"content":"        this.description \u003d \"\";"},{"lineNumber":10,"author":{"gitId":"kingsleykuan"},"content":"        this.isDone \u003d false;"},{"lineNumber":11,"author":{"gitId":"kingsleykuan"},"content":"    }"},{"lineNumber":12,"author":{"gitId":"kingsleykuan"},"content":""},{"lineNumber":13,"author":{"gitId":"kingsleykuan"},"content":"    protected Task(String description) {"},{"lineNumber":14,"author":{"gitId":"kingsleykuan"},"content":"        this.description \u003d description;"},{"lineNumber":15,"author":{"gitId":"kingsleykuan"},"content":"        this.isDone \u003d false;"},{"lineNumber":16,"author":{"gitId":"kingsleykuan"},"content":"    }"},{"lineNumber":17,"author":{"gitId":"kingsleykuan"},"content":""},{"lineNumber":18,"author":{"gitId":"kingsleykuan"},"content":"    protected Task(String description, boolean isDone) {"},{"lineNumber":19,"author":{"gitId":"kingsleykuan"},"content":"        this.description \u003d description;"},{"lineNumber":20,"author":{"gitId":"kingsleykuan"},"content":"        this.isDone \u003d isDone;"},{"lineNumber":21,"author":{"gitId":"kingsleykuan"},"content":"    }"},{"lineNumber":22,"author":{"gitId":"kingsleykuan"},"content":""},{"lineNumber":23,"author":{"gitId":"kingsleykuan"},"content":"    /**"},{"lineNumber":24,"author":{"gitId":"kingsleykuan"},"content":"     * Mark task as done and return copy with updated state."},{"lineNumber":25,"author":{"gitId":"kingsleykuan"},"content":"     * @return Copy of task with the state updated to done."},{"lineNumber":26,"author":{"gitId":"kingsleykuan"},"content":"     */"},{"lineNumber":27,"author":{"gitId":"kingsleykuan"},"content":"    public abstract Task markAsDone();"},{"lineNumber":28,"author":{"gitId":"kingsleykuan"},"content":""},{"lineNumber":29,"author":{"gitId":"kingsleykuan"},"content":"    protected abstract String getTypeIcon();"},{"lineNumber":30,"author":{"gitId":"kingsleykuan"},"content":""},{"lineNumber":31,"author":{"gitId":"kingsleykuan"},"content":"    protected String getStatusIcon() {"},{"lineNumber":32,"author":{"gitId":"kingsleykuan"},"content":"        return (isDone ? \"X\" : \" \");"},{"lineNumber":33,"author":{"gitId":"kingsleykuan"},"content":"    }"},{"lineNumber":34,"author":{"gitId":"kingsleykuan"},"content":"}"}],"authorContributionMap":{"kingsleykuan":34}},{"path":"src/main/java/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kingsleykuan"},"content":"import java.util.List;"},{"lineNumber":2,"author":{"gitId":"kingsleykuan"},"content":"import java.util.ArrayList;"},{"lineNumber":3,"author":{"gitId":"kingsleykuan"},"content":""},{"lineNumber":4,"author":{"gitId":"kingsleykuan"},"content":"/**"},{"lineNumber":5,"author":{"gitId":"kingsleykuan"},"content":" * A list that keeps track of tasks."},{"lineNumber":6,"author":{"gitId":"kingsleykuan"},"content":" */"},{"lineNumber":7,"author":{"gitId":"kingsleykuan"},"content":"public class TaskList {"},{"lineNumber":8,"author":{"gitId":"kingsleykuan"},"content":"    private enum TaskType {"},{"lineNumber":9,"author":{"gitId":"kingsleykuan"},"content":"        TODO,"},{"lineNumber":10,"author":{"gitId":"kingsleykuan"},"content":"        EVENT,"},{"lineNumber":11,"author":{"gitId":"kingsleykuan"},"content":"        DEADLINE,"},{"lineNumber":12,"author":{"gitId":"kingsleykuan"},"content":"    }"},{"lineNumber":13,"author":{"gitId":"kingsleykuan"},"content":""},{"lineNumber":14,"author":{"gitId":"kingsleykuan"},"content":"    private final List\u003cTask\u003e taskList;"},{"lineNumber":15,"author":{"gitId":"kingsleykuan"},"content":""},{"lineNumber":16,"author":{"gitId":"kingsleykuan"},"content":"    public TaskList() {"},{"lineNumber":17,"author":{"gitId":"kingsleykuan"},"content":"        this.taskList \u003d new ArrayList\u003c\u003e();"},{"lineNumber":18,"author":{"gitId":"kingsleykuan"},"content":"    }"},{"lineNumber":19,"author":{"gitId":"kingsleykuan"},"content":""},{"lineNumber":20,"author":{"gitId":"kingsleykuan"},"content":"    private TaskList(List\u003cTask\u003e taskList) {"},{"lineNumber":21,"author":{"gitId":"kingsleykuan"},"content":"        this.taskList \u003d taskList;"},{"lineNumber":22,"author":{"gitId":"kingsleykuan"},"content":"    }"},{"lineNumber":23,"author":{"gitId":"kingsleykuan"},"content":""},{"lineNumber":24,"author":{"gitId":"kingsleykuan"},"content":"    /**"},{"lineNumber":25,"author":{"gitId":"kingsleykuan"},"content":"     * Gets number of tasks in task list."},{"lineNumber":26,"author":{"gitId":"kingsleykuan"},"content":"     * @return Number of tasks in task list."},{"lineNumber":27,"author":{"gitId":"kingsleykuan"},"content":"     */"},{"lineNumber":28,"author":{"gitId":"kingsleykuan"},"content":"    public int getNumTasks() {"},{"lineNumber":29,"author":{"gitId":"kingsleykuan"},"content":"        return this.taskList.size();"},{"lineNumber":30,"author":{"gitId":"kingsleykuan"},"content":"    }"},{"lineNumber":31,"author":{"gitId":"kingsleykuan"},"content":""},{"lineNumber":32,"author":{"gitId":"kingsleykuan"},"content":"    /**"},{"lineNumber":33,"author":{"gitId":"kingsleykuan"},"content":"     * Adds a task to the task list."},{"lineNumber":34,"author":{"gitId":"kingsleykuan"},"content":"     * @param task Task to add to the list."},{"lineNumber":35,"author":{"gitId":"kingsleykuan"},"content":"     * @return Copy of the task list with the new task added."},{"lineNumber":36,"author":{"gitId":"kingsleykuan"},"content":"     */"},{"lineNumber":37,"author":{"gitId":"kingsleykuan"},"content":"    public TaskList addTask(String task) throws OwenException {"},{"lineNumber":38,"author":{"gitId":"kingsleykuan"},"content":"        String[] taskSplit \u003d task.split(\" \", 2);"},{"lineNumber":39,"author":{"gitId":"kingsleykuan"},"content":"        String taskTypeString \u003d taskSplit[0];"},{"lineNumber":40,"author":{"gitId":"kingsleykuan"},"content":""},{"lineNumber":41,"author":{"gitId":"kingsleykuan"},"content":"        TaskType taskType;"},{"lineNumber":42,"author":{"gitId":"kingsleykuan"},"content":"        try {"},{"lineNumber":43,"author":{"gitId":"kingsleykuan"},"content":"            taskType \u003d TaskType.valueOf(taskTypeString.toUpperCase());"},{"lineNumber":44,"author":{"gitId":"kingsleykuan"},"content":"        } catch (IllegalArgumentException exception) {"},{"lineNumber":45,"author":{"gitId":"kingsleykuan"},"content":"            throw new OwenException(\"Unknown task type...\");"},{"lineNumber":46,"author":{"gitId":"kingsleykuan"},"content":"        }"},{"lineNumber":47,"author":{"gitId":"kingsleykuan"},"content":""},{"lineNumber":48,"author":{"gitId":"kingsleykuan"},"content":"        String taskArgs;"},{"lineNumber":49,"author":{"gitId":"kingsleykuan"},"content":"        if (taskSplit.length \u003e 1) {"},{"lineNumber":50,"author":{"gitId":"kingsleykuan"},"content":"            taskArgs \u003d taskSplit[1];"},{"lineNumber":51,"author":{"gitId":"kingsleykuan"},"content":"        } else {"},{"lineNumber":52,"author":{"gitId":"kingsleykuan"},"content":"            taskArgs \u003d \"\";"},{"lineNumber":53,"author":{"gitId":"kingsleykuan"},"content":"        }"},{"lineNumber":54,"author":{"gitId":"kingsleykuan"},"content":""},{"lineNumber":55,"author":{"gitId":"kingsleykuan"},"content":"        Task newTask;"},{"lineNumber":56,"author":{"gitId":"kingsleykuan"},"content":"        switch (taskType) {"},{"lineNumber":57,"author":{"gitId":"kingsleykuan"},"content":"        case TODO:"},{"lineNumber":58,"author":{"gitId":"kingsleykuan"},"content":"            newTask \u003d new TodoTask(taskArgs);"},{"lineNumber":59,"author":{"gitId":"kingsleykuan"},"content":"            break;"},{"lineNumber":60,"author":{"gitId":"kingsleykuan"},"content":"        case EVENT:"},{"lineNumber":61,"author":{"gitId":"kingsleykuan"},"content":"            newTask \u003d new EventTask(taskArgs);"},{"lineNumber":62,"author":{"gitId":"kingsleykuan"},"content":"            break;"},{"lineNumber":63,"author":{"gitId":"kingsleykuan"},"content":"        case DEADLINE:"},{"lineNumber":64,"author":{"gitId":"kingsleykuan"},"content":"            newTask \u003d new DeadlineTask(taskArgs);"},{"lineNumber":65,"author":{"gitId":"kingsleykuan"},"content":"            break;"},{"lineNumber":66,"author":{"gitId":"kingsleykuan"},"content":"        default:"},{"lineNumber":67,"author":{"gitId":"kingsleykuan"},"content":"            newTask \u003d null;"},{"lineNumber":68,"author":{"gitId":"kingsleykuan"},"content":"        }"},{"lineNumber":69,"author":{"gitId":"kingsleykuan"},"content":""},{"lineNumber":70,"author":{"gitId":"kingsleykuan"},"content":"        List\u003cTask\u003e newTaskList \u003d new ArrayList\u003c\u003e(this.taskList);"},{"lineNumber":71,"author":{"gitId":"kingsleykuan"},"content":"        newTaskList.add(newTask);"},{"lineNumber":72,"author":{"gitId":"kingsleykuan"},"content":"        return new TaskList(newTaskList);"},{"lineNumber":73,"author":{"gitId":"kingsleykuan"},"content":"    }"},{"lineNumber":74,"author":{"gitId":"kingsleykuan"},"content":""},{"lineNumber":75,"author":{"gitId":"kingsleykuan"},"content":"    /**"},{"lineNumber":76,"author":{"gitId":"kingsleykuan"},"content":"     * Gets the nth task from the list."},{"lineNumber":77,"author":{"gitId":"kingsleykuan"},"content":"     * @param taskNumber The number of the task to get."},{"lineNumber":78,"author":{"gitId":"kingsleykuan"},"content":"     * @return The nth task of the list."},{"lineNumber":79,"author":{"gitId":"kingsleykuan"},"content":"     */"},{"lineNumber":80,"author":{"gitId":"kingsleykuan"},"content":"    public Task getTask(int taskNumber) {"},{"lineNumber":81,"author":{"gitId":"kingsleykuan"},"content":"        taskNumber -\u003d 1;"},{"lineNumber":82,"author":{"gitId":"kingsleykuan"},"content":"        return this.taskList.get(taskNumber);"},{"lineNumber":83,"author":{"gitId":"kingsleykuan"},"content":"    }"},{"lineNumber":84,"author":{"gitId":"kingsleykuan"},"content":""},{"lineNumber":85,"author":{"gitId":"kingsleykuan"},"content":"    /**"},{"lineNumber":86,"author":{"gitId":"kingsleykuan"},"content":"     * Marks the nth task as done."},{"lineNumber":87,"author":{"gitId":"kingsleykuan"},"content":"     * @param taskNumber The number of the task to mark as done."},{"lineNumber":88,"author":{"gitId":"kingsleykuan"},"content":"     * @return Copy of the task list with the nth task marked as done."},{"lineNumber":89,"author":{"gitId":"kingsleykuan"},"content":"     */"},{"lineNumber":90,"author":{"gitId":"kingsleykuan"},"content":"    public TaskList markAsDone(int taskNumber) throws OwenException {"},{"lineNumber":91,"author":{"gitId":"kingsleykuan"},"content":"        if (this.taskList.size() \u003c taskNumber || taskNumber \u003c\u003d 0) {"},{"lineNumber":92,"author":{"gitId":"kingsleykuan"},"content":"            throw new OwenException(\"Task \" + taskNumber + \" does not exist...\");"},{"lineNumber":93,"author":{"gitId":"kingsleykuan"},"content":"        }"},{"lineNumber":94,"author":{"gitId":"kingsleykuan"},"content":""},{"lineNumber":95,"author":{"gitId":"kingsleykuan"},"content":"        taskNumber -\u003d 1;"},{"lineNumber":96,"author":{"gitId":"kingsleykuan"},"content":"        List\u003cTask\u003e newTaskList \u003d new ArrayList\u003c\u003e(this.taskList);"},{"lineNumber":97,"author":{"gitId":"kingsleykuan"},"content":"        newTaskList.set(taskNumber, newTaskList.get(taskNumber).markAsDone());"},{"lineNumber":98,"author":{"gitId":"kingsleykuan"},"content":"        return new TaskList(newTaskList);"},{"lineNumber":99,"author":{"gitId":"kingsleykuan"},"content":"    }"},{"lineNumber":100,"author":{"gitId":"kingsleykuan"},"content":""},{"lineNumber":101,"author":{"gitId":"kingsleykuan"},"content":"    /**"},{"lineNumber":102,"author":{"gitId":"kingsleykuan"},"content":"     * Deletes the nth task from the task list."},{"lineNumber":103,"author":{"gitId":"kingsleykuan"},"content":"     * @param taskNumber The number of the task to delete."},{"lineNumber":104,"author":{"gitId":"kingsleykuan"},"content":"     * @return Copy of the task list with the nth task deleted."},{"lineNumber":105,"author":{"gitId":"kingsleykuan"},"content":"     */"},{"lineNumber":106,"author":{"gitId":"kingsleykuan"},"content":"    public TaskList deleteTask(int taskNumber) throws OwenException {"},{"lineNumber":107,"author":{"gitId":"kingsleykuan"},"content":"        if (this.taskList.size() \u003c taskNumber || taskNumber \u003c\u003d 0) {"},{"lineNumber":108,"author":{"gitId":"kingsleykuan"},"content":"            throw new OwenException(\"Task \" + taskNumber + \" does not exist...\");"},{"lineNumber":109,"author":{"gitId":"kingsleykuan"},"content":"        }"},{"lineNumber":110,"author":{"gitId":"kingsleykuan"},"content":""},{"lineNumber":111,"author":{"gitId":"kingsleykuan"},"content":"        taskNumber -\u003d 1;"},{"lineNumber":112,"author":{"gitId":"kingsleykuan"},"content":"        List\u003cTask\u003e newTaskList \u003d new ArrayList\u003c\u003e(this.taskList);"},{"lineNumber":113,"author":{"gitId":"kingsleykuan"},"content":"        newTaskList.remove(taskNumber);"},{"lineNumber":114,"author":{"gitId":"kingsleykuan"},"content":"        return new TaskList(newTaskList);"},{"lineNumber":115,"author":{"gitId":"kingsleykuan"},"content":"    }"},{"lineNumber":116,"author":{"gitId":"kingsleykuan"},"content":""},{"lineNumber":117,"author":{"gitId":"kingsleykuan"},"content":"    @Override"},{"lineNumber":118,"author":{"gitId":"kingsleykuan"},"content":"    public String toString() {"},{"lineNumber":119,"author":{"gitId":"kingsleykuan"},"content":"        String[] taskListStrings \u003d new String[this.taskList.size()];"},{"lineNumber":120,"author":{"gitId":"kingsleykuan"},"content":"        String taskListFormat \u003d \"%d. %s\";"},{"lineNumber":121,"author":{"gitId":"kingsleykuan"},"content":"        for (int i \u003d 0; i \u003c this.taskList.size(); i++) {"},{"lineNumber":122,"author":{"gitId":"kingsleykuan"},"content":"            taskListStrings[i] \u003d String.format(taskListFormat, i + 1, this.taskList.get(i));"},{"lineNumber":123,"author":{"gitId":"kingsleykuan"},"content":"        }"},{"lineNumber":124,"author":{"gitId":"kingsleykuan"},"content":"        return String.join(\"\\n\", taskListStrings);"},{"lineNumber":125,"author":{"gitId":"kingsleykuan"},"content":"    }"},{"lineNumber":126,"author":{"gitId":"kingsleykuan"},"content":"}"}],"authorContributionMap":{"kingsleykuan":126}},{"path":"src/main/java/TodoTask.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kingsleykuan"},"content":"/**"},{"lineNumber":2,"author":{"gitId":"kingsleykuan"},"content":" * Todo task without any date/time attached to it."},{"lineNumber":3,"author":{"gitId":"kingsleykuan"},"content":" */"},{"lineNumber":4,"author":{"gitId":"kingsleykuan"},"content":"public class TodoTask extends Task {"},{"lineNumber":5,"author":{"gitId":"kingsleykuan"},"content":"    public TodoTask(String taskArgs) throws OwenException {"},{"lineNumber":6,"author":{"gitId":"kingsleykuan"},"content":"        super(taskArgs);"},{"lineNumber":7,"author":{"gitId":"kingsleykuan"},"content":""},{"lineNumber":8,"author":{"gitId":"kingsleykuan"},"content":"        if (taskArgs.equals(\"\")) {"},{"lineNumber":9,"author":{"gitId":"kingsleykuan"},"content":"            throw new OwenException(\"The description of a todo cannot be empty...\");"},{"lineNumber":10,"author":{"gitId":"kingsleykuan"},"content":"        }"},{"lineNumber":11,"author":{"gitId":"kingsleykuan"},"content":"    }"},{"lineNumber":12,"author":{"gitId":"kingsleykuan"},"content":""},{"lineNumber":13,"author":{"gitId":"kingsleykuan"},"content":"    private TodoTask(String description, boolean isDone) {"},{"lineNumber":14,"author":{"gitId":"kingsleykuan"},"content":"        super(description, isDone);"},{"lineNumber":15,"author":{"gitId":"kingsleykuan"},"content":"    }"},{"lineNumber":16,"author":{"gitId":"kingsleykuan"},"content":""},{"lineNumber":17,"author":{"gitId":"kingsleykuan"},"content":"    @Override"},{"lineNumber":18,"author":{"gitId":"kingsleykuan"},"content":"    public TodoTask markAsDone() {"},{"lineNumber":19,"author":{"gitId":"kingsleykuan"},"content":"        return new TodoTask(this.description, true);"},{"lineNumber":20,"author":{"gitId":"kingsleykuan"},"content":"    }"},{"lineNumber":21,"author":{"gitId":"kingsleykuan"},"content":""},{"lineNumber":22,"author":{"gitId":"kingsleykuan"},"content":"    @Override"},{"lineNumber":23,"author":{"gitId":"kingsleykuan"},"content":"    public String toString() {"},{"lineNumber":24,"author":{"gitId":"kingsleykuan"},"content":"        String taskFormat \u003d \"[%s][%s] %s\";"},{"lineNumber":25,"author":{"gitId":"kingsleykuan"},"content":"        return String.format("},{"lineNumber":26,"author":{"gitId":"kingsleykuan"},"content":"                taskFormat,"},{"lineNumber":27,"author":{"gitId":"kingsleykuan"},"content":"                this.getTypeIcon(),"},{"lineNumber":28,"author":{"gitId":"kingsleykuan"},"content":"                this.getStatusIcon(),"},{"lineNumber":29,"author":{"gitId":"kingsleykuan"},"content":"                this.description);"},{"lineNumber":30,"author":{"gitId":"kingsleykuan"},"content":"    }"},{"lineNumber":31,"author":{"gitId":"kingsleykuan"},"content":""},{"lineNumber":32,"author":{"gitId":"kingsleykuan"},"content":"    @Override"},{"lineNumber":33,"author":{"gitId":"kingsleykuan"},"content":"    protected String getTypeIcon() {"},{"lineNumber":34,"author":{"gitId":"kingsleykuan"},"content":"        return \"T\";"},{"lineNumber":35,"author":{"gitId":"kingsleykuan"},"content":"    }"},{"lineNumber":36,"author":{"gitId":"kingsleykuan"},"content":"}"}],"authorContributionMap":{"kingsleykuan":36}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"kingsleykuan"},"content":"todo borrow book"},{"lineNumber":2,"author":{"gitId":"kingsleykuan"},"content":"deadline return book /by Sunday"},{"lineNumber":3,"author":{"gitId":"kingsleykuan"},"content":"event project meeting /at Mon 2-4pm"},{"lineNumber":4,"author":{"gitId":"kingsleykuan"},"content":"todo"},{"lineNumber":5,"author":{"gitId":"kingsleykuan"},"content":"deadline"},{"lineNumber":6,"author":{"gitId":"kingsleykuan"},"content":"event project meeting"},{"lineNumber":7,"author":{"gitId":"kingsleykuan"},"content":"list"},{"lineNumber":8,"author":{"gitId":"kingsleykuan"},"content":"done 2"},{"lineNumber":9,"author":{"gitId":"kingsleykuan"},"content":"done 0"},{"lineNumber":10,"author":{"gitId":"kingsleykuan"},"content":"done 4"},{"lineNumber":11,"author":{"gitId":"kingsleykuan"},"content":"list"},{"lineNumber":12,"author":{"gitId":"kingsleykuan"},"content":"delete 3"},{"lineNumber":13,"author":{"gitId":"kingsleykuan"},"content":"delete 0"},{"lineNumber":14,"author":{"gitId":"kingsleykuan"},"content":"delete 3"},{"lineNumber":15,"author":{"gitId":"kingsleykuan"},"content":"list"},{"lineNumber":16,"author":{"gitId":"kingsleykuan"},"content":"bye"}],"authorContributionMap":{"kingsleykuan":16}},{"path":"text-ui-test/runtest.sh","fileType":"sh","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"#!/usr/bin/env bash"},{"lineNumber":2,"author":{"gitId":"-"},"content":""},{"lineNumber":3,"author":{"gitId":"-"},"content":"# create bin directory if it doesn\u0027t exist"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if [ ! -d \"../bin\" ]"},{"lineNumber":5,"author":{"gitId":"-"},"content":"then"},{"lineNumber":6,"author":{"gitId":"-"},"content":"    mkdir ../bin"},{"lineNumber":7,"author":{"gitId":"-"},"content":"fi"},{"lineNumber":8,"author":{"gitId":"-"},"content":""},{"lineNumber":9,"author":{"gitId":"-"},"content":"# delete output from previous run"},{"lineNumber":10,"author":{"gitId":"-"},"content":"if [ -e \"./ACTUAL.TXT\" ]"},{"lineNumber":11,"author":{"gitId":"-"},"content":"then"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    rm ACTUAL.TXT"},{"lineNumber":13,"author":{"gitId":"-"},"content":"fi"},{"lineNumber":14,"author":{"gitId":"-"},"content":""},{"lineNumber":15,"author":{"gitId":"-"},"content":"# compile the code into the bin folder, terminates if error occurred"},{"lineNumber":16,"author":{"gitId":"-"},"content":"if ! javac -cp ../src/main/java -Xlint:none -d ../bin ../src/main/java/*.java"},{"lineNumber":17,"author":{"gitId":"-"},"content":"then"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    echo \"********** BUILD FAILURE **********\""},{"lineNumber":19,"author":{"gitId":"-"},"content":"    exit 1"},{"lineNumber":20,"author":{"gitId":"-"},"content":"fi"},{"lineNumber":21,"author":{"gitId":"-"},"content":""},{"lineNumber":22,"author":{"gitId":"-"},"content":"# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"},{"lineNumber":23,"author":{"gitId":"kingsleykuan"},"content":"java -classpath ../bin Main \u003c input.txt \u003e ACTUAL.TXT"},{"lineNumber":24,"author":{"gitId":"-"},"content":""},{"lineNumber":25,"author":{"gitId":"-"},"content":"# convert to UNIX format"},{"lineNumber":26,"author":{"gitId":"-"},"content":"cp EXPECTED.TXT EXPECTED-UNIX.TXT"},{"lineNumber":27,"author":{"gitId":"-"},"content":"dos2unix ACTUAL.TXT EXPECTED-UNIX.TXT"},{"lineNumber":28,"author":{"gitId":"-"},"content":""},{"lineNumber":29,"author":{"gitId":"-"},"content":"# compare the output to the expected output"},{"lineNumber":30,"author":{"gitId":"-"},"content":"diff ACTUAL.TXT EXPECTED-UNIX.TXT"},{"lineNumber":31,"author":{"gitId":"-"},"content":"if [ $? -eq 0 ]"},{"lineNumber":32,"author":{"gitId":"-"},"content":"then"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    echo \"Test result: PASSED\""},{"lineNumber":34,"author":{"gitId":"-"},"content":"    exit 0"},{"lineNumber":35,"author":{"gitId":"-"},"content":"else"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    echo \"Test result: FAILED\""},{"lineNumber":37,"author":{"gitId":"-"},"content":"    exit 1"},{"lineNumber":38,"author":{"gitId":"-"},"content":"fi"}],"authorContributionMap":{"kingsleykuan":1,"-":37}}]
