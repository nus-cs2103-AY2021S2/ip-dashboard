[{"path":"data/duke.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"austenjs"},"content":"T|1|makan"},{"lineNumber":2,"author":{"gitId":"austenjs"},"content":"E|1|mencari|20 June"},{"lineNumber":3,"author":{"gitId":"austenjs"},"content":"E|0|makan2|10 nov"},{"lineNumber":4,"author":{"gitId":"austenjs"},"content":"D|1|belajar|2020-10-03"}],"authorContributionMap":{"austenjs":4}},{"path":"src/main/java/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"austenjs"},"content":"import java.time.format.DateTimeFormatter;"},{"lineNumber":2,"author":{"gitId":"austenjs"},"content":"import java.time.format.DateTimeParseException;"},{"lineNumber":3,"author":{"gitId":"austenjs"},"content":""},{"lineNumber":4,"author":{"gitId":"austenjs"},"content":"import java.time.LocalDate;"},{"lineNumber":5,"author":{"gitId":"austenjs"},"content":""},{"lineNumber":6,"author":{"gitId":"austenjs"},"content":"/**"},{"lineNumber":7,"author":{"gitId":"austenjs"},"content":" * Represents a Deadline task. Represented by the task, the LocalDate object of the deadline,"},{"lineNumber":8,"author":{"gitId":"austenjs"},"content":" * and a boolean state denoting whether the task has been done or not."},{"lineNumber":9,"author":{"gitId":"austenjs"},"content":" */"},{"lineNumber":10,"author":{"gitId":"austenjs"},"content":""},{"lineNumber":11,"author":{"gitId":"austenjs"},"content":"public class Deadline extends Task {"},{"lineNumber":12,"author":{"gitId":"austenjs"},"content":"    private static final String OUTPUT_DATE_FORMAT \u003d \"MMM dd yyyy\";"},{"lineNumber":13,"author":{"gitId":"austenjs"},"content":"    private final LocalDate deadline;"},{"lineNumber":14,"author":{"gitId":"austenjs"},"content":""},{"lineNumber":15,"author":{"gitId":"austenjs"},"content":"    /**"},{"lineNumber":16,"author":{"gitId":"austenjs"},"content":"     * Constructor of a Deadline object"},{"lineNumber":17,"author":{"gitId":"austenjs"},"content":"     * @param task Task need to be done"},{"lineNumber":18,"author":{"gitId":"austenjs"},"content":"     * @param deadline Date when the task need to be done"},{"lineNumber":19,"author":{"gitId":"austenjs"},"content":"     * @throws DukeExceptionDeadline The date format is not in \"yyyy-MM-dd\""},{"lineNumber":20,"author":{"gitId":"austenjs"},"content":"     */"},{"lineNumber":21,"author":{"gitId":"austenjs"},"content":"    Deadline(String task, String deadline) throws DukeExceptionDeadline {"},{"lineNumber":22,"author":{"gitId":"austenjs"},"content":"        super(task);"},{"lineNumber":23,"author":{"gitId":"austenjs"},"content":"        try {"},{"lineNumber":24,"author":{"gitId":"austenjs"},"content":"            DateTimeFormatter formatter \u003d DateTimeFormatter.ISO_LOCAL_DATE;"},{"lineNumber":25,"author":{"gitId":"austenjs"},"content":"            this.deadline \u003d LocalDate.parse(deadline, formatter);"},{"lineNumber":26,"author":{"gitId":"austenjs"},"content":"        } catch (DateTimeParseException e) {"},{"lineNumber":27,"author":{"gitId":"austenjs"},"content":"            System.out.println(e.getMessage());"},{"lineNumber":28,"author":{"gitId":"austenjs"},"content":"            throw new DukeExceptionDeadline(\"Wrong format of date.\" +"},{"lineNumber":29,"author":{"gitId":"austenjs"},"content":"                    \" The format should be yyyy-MM-dd\");"},{"lineNumber":30,"author":{"gitId":"austenjs"},"content":"        }"},{"lineNumber":31,"author":{"gitId":"austenjs"},"content":"    }"},{"lineNumber":32,"author":{"gitId":"austenjs"},"content":""},{"lineNumber":33,"author":{"gitId":"austenjs"},"content":"    /**"},{"lineNumber":34,"author":{"gitId":"austenjs"},"content":"     * Constructor of a deadline object"},{"lineNumber":35,"author":{"gitId":"austenjs"},"content":"     * @param task Task need to be done"},{"lineNumber":36,"author":{"gitId":"austenjs"},"content":"     * @param deadline Date when the task need to be done"},{"lineNumber":37,"author":{"gitId":"austenjs"},"content":"     * @param done A boolean representing the state of the task (done or not)"},{"lineNumber":38,"author":{"gitId":"austenjs"},"content":"     * @throws DukeExceptionDeadline The date format is not in \"yyyy-MM-dd\""},{"lineNumber":39,"author":{"gitId":"austenjs"},"content":"     */"},{"lineNumber":40,"author":{"gitId":"austenjs"},"content":"    Deadline(String task, String deadline, boolean done) throws DukeExceptionDeadline {"},{"lineNumber":41,"author":{"gitId":"austenjs"},"content":"        super(task, done);"},{"lineNumber":42,"author":{"gitId":"austenjs"},"content":"        try {"},{"lineNumber":43,"author":{"gitId":"austenjs"},"content":"            DateTimeFormatter formatter \u003d DateTimeFormatter.ISO_LOCAL_DATE;"},{"lineNumber":44,"author":{"gitId":"austenjs"},"content":"            this.deadline \u003d LocalDate.parse(deadline, formatter);"},{"lineNumber":45,"author":{"gitId":"austenjs"},"content":"        } catch (DateTimeParseException e) {"},{"lineNumber":46,"author":{"gitId":"austenjs"},"content":"            throw new DukeExceptionDeadline(\"Wrong format of date. \" +"},{"lineNumber":47,"author":{"gitId":"austenjs"},"content":"                    \"The format should be yyyy-mm-dd\");"},{"lineNumber":48,"author":{"gitId":"austenjs"},"content":"        }"},{"lineNumber":49,"author":{"gitId":"austenjs"},"content":"    }"},{"lineNumber":50,"author":{"gitId":"austenjs"},"content":""},{"lineNumber":51,"author":{"gitId":"austenjs"},"content":"    /**"},{"lineNumber":52,"author":{"gitId":"austenjs"},"content":"     * Constructor of a deadline Object"},{"lineNumber":53,"author":{"gitId":"austenjs"},"content":"     * @param task Task need to be done"},{"lineNumber":54,"author":{"gitId":"austenjs"},"content":"     * @param deadline Date when the task need to be done"},{"lineNumber":55,"author":{"gitId":"austenjs"},"content":"     * @param done A boolean representing the state of the task (done or not)"},{"lineNumber":56,"author":{"gitId":"austenjs"},"content":"     */"},{"lineNumber":57,"author":{"gitId":"austenjs"},"content":"    Deadline(String task, LocalDate deadline, boolean done) {"},{"lineNumber":58,"author":{"gitId":"austenjs"},"content":"        super(task, done);"},{"lineNumber":59,"author":{"gitId":"austenjs"},"content":"        this.deadline \u003d deadline;"},{"lineNumber":60,"author":{"gitId":"austenjs"},"content":"    }"},{"lineNumber":61,"author":{"gitId":"austenjs"},"content":""},{"lineNumber":62,"author":{"gitId":"austenjs"},"content":"    /**"},{"lineNumber":63,"author":{"gitId":"austenjs"},"content":"     * Overriden method from the parent class Task. The purpose is to"},{"lineNumber":64,"author":{"gitId":"austenjs"},"content":"     * return a new done Task."},{"lineNumber":65,"author":{"gitId":"austenjs"},"content":"     * @return a Task that has been done."},{"lineNumber":66,"author":{"gitId":"austenjs"},"content":"     */"},{"lineNumber":67,"author":{"gitId":"austenjs"},"content":"    @Override"},{"lineNumber":68,"author":{"gitId":"austenjs"},"content":"    public Task finishTask() {"},{"lineNumber":69,"author":{"gitId":"austenjs"},"content":"        return new Deadline(this.task, this.deadline,true);"},{"lineNumber":70,"author":{"gitId":"austenjs"},"content":"    }"},{"lineNumber":71,"author":{"gitId":"austenjs"},"content":""},{"lineNumber":72,"author":{"gitId":"austenjs"},"content":"    /**"},{"lineNumber":73,"author":{"gitId":"austenjs"},"content":"     * An overriden method from the parent class Task. The purpose is to"},{"lineNumber":74,"author":{"gitId":"austenjs"},"content":"     * return a string representation for txt files."},{"lineNumber":75,"author":{"gitId":"austenjs"},"content":"     * @return String representation for txt files."},{"lineNumber":76,"author":{"gitId":"austenjs"},"content":"     */"},{"lineNumber":77,"author":{"gitId":"austenjs"},"content":"    @Override"},{"lineNumber":78,"author":{"gitId":"austenjs"},"content":"    public String saveString() {"},{"lineNumber":79,"author":{"gitId":"austenjs"},"content":"        return \"D|\" + super.saveString() + \"|\" + this.deadline;"},{"lineNumber":80,"author":{"gitId":"austenjs"},"content":"    }"},{"lineNumber":81,"author":{"gitId":"austenjs"},"content":""},{"lineNumber":82,"author":{"gitId":"austenjs"},"content":"    /**"},{"lineNumber":83,"author":{"gitId":"austenjs"},"content":"     * Overriden method from the object class."},{"lineNumber":84,"author":{"gitId":"austenjs"},"content":"     * @return String representation of Deadline."},{"lineNumber":85,"author":{"gitId":"austenjs"},"content":"     */"},{"lineNumber":86,"author":{"gitId":"austenjs"},"content":"    @Override"},{"lineNumber":87,"author":{"gitId":"austenjs"},"content":"    public String toString() {"},{"lineNumber":88,"author":{"gitId":"austenjs"},"content":"        String date \u003d this.deadline.format(DateTimeFormatter.ofPattern(OUTPUT_DATE_FORMAT));"},{"lineNumber":89,"author":{"gitId":"austenjs"},"content":"        return \"[D]\" + super.toString() + \" (by: \" + date + \")\";"},{"lineNumber":90,"author":{"gitId":"austenjs"},"content":"    }"},{"lineNumber":91,"author":{"gitId":"austenjs"},"content":"}"}],"authorContributionMap":{"austenjs":91}},{"path":"src/main/java/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"austenjs"},"content":"import java.util.Scanner;"},{"lineNumber":2,"author":{"gitId":"austenjs"},"content":""},{"lineNumber":3,"author":{"gitId":"austenjs"},"content":"/**"},{"lineNumber":4,"author":{"gitId":"austenjs"},"content":" * An app that interacts with the users and help them list down tasks"},{"lineNumber":5,"author":{"gitId":"austenjs"},"content":" * they need to do."},{"lineNumber":6,"author":{"gitId":"austenjs"},"content":" */"},{"lineNumber":7,"author":{"gitId":"-"},"content":"public class Duke {"},{"lineNumber":8,"author":{"gitId":"austenjs"},"content":"    private Storage storage;"},{"lineNumber":9,"author":{"gitId":"austenjs"},"content":"    private TaskList taskList;"},{"lineNumber":10,"author":{"gitId":"austenjs"},"content":"    private Parser parser;"},{"lineNumber":11,"author":{"gitId":"austenjs"},"content":""},{"lineNumber":12,"author":{"gitId":"austenjs"},"content":"    /**"},{"lineNumber":13,"author":{"gitId":"austenjs"},"content":"     * Main function of the class."},{"lineNumber":14,"author":{"gitId":"austenjs"},"content":"     */"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    public static void main(String[] args) {"},{"lineNumber":16,"author":{"gitId":"austenjs"},"content":"        try {"},{"lineNumber":17,"author":{"gitId":"austenjs"},"content":"            new Duke(\"./data/duke.txt\").run();"},{"lineNumber":18,"author":{"gitId":"austenjs"},"content":"        } catch (DukeExceptionFolder e) {"},{"lineNumber":19,"author":{"gitId":"austenjs"},"content":"            Ui.showMessage(e.getMessage());"},{"lineNumber":20,"author":{"gitId":"austenjs"},"content":"            return;"},{"lineNumber":21,"author":{"gitId":"austenjs"},"content":"        } catch (DukeExceptionCorruptedData e) {"},{"lineNumber":22,"author":{"gitId":"austenjs"},"content":"            Ui.showMessage(e.getMessage());"},{"lineNumber":23,"author":{"gitId":"austenjs"},"content":"            return;"},{"lineNumber":24,"author":{"gitId":"austenjs"},"content":"        }"},{"lineNumber":25,"author":{"gitId":"austenjs"},"content":"    }"},{"lineNumber":26,"author":{"gitId":"austenjs"},"content":""},{"lineNumber":27,"author":{"gitId":"austenjs"},"content":"    /**"},{"lineNumber":28,"author":{"gitId":"austenjs"},"content":"     * Constructor of the Duke app"},{"lineNumber":29,"author":{"gitId":"austenjs"},"content":"     * @param filepath A string showing the path of the txt file"},{"lineNumber":30,"author":{"gitId":"austenjs"},"content":"     * @throws DukeExceptionFolder The \u0027data\u0027 folder doesn\u0027t exist"},{"lineNumber":31,"author":{"gitId":"austenjs"},"content":"     * @throws DukeExceptionCorruptedData The txt file format is corrupted"},{"lineNumber":32,"author":{"gitId":"austenjs"},"content":"     */"},{"lineNumber":33,"author":{"gitId":"austenjs"},"content":"    public Duke(String filepath) throws DukeExceptionFolder, DukeExceptionCorruptedData {"},{"lineNumber":34,"author":{"gitId":"austenjs"},"content":"        this.storage \u003d new Storage(filepath);"},{"lineNumber":35,"author":{"gitId":"austenjs"},"content":"        this.taskList \u003d new TaskList(storage.load());"},{"lineNumber":36,"author":{"gitId":"austenjs"},"content":"    }"},{"lineNumber":37,"author":{"gitId":"austenjs"},"content":""},{"lineNumber":38,"author":{"gitId":"austenjs"},"content":"    /**"},{"lineNumber":39,"author":{"gitId":"austenjs"},"content":"     * After loading the data from the storage, run Duke application."},{"lineNumber":40,"author":{"gitId":"austenjs"},"content":"     */"},{"lineNumber":41,"author":{"gitId":"austenjs"},"content":"    public void run() {"},{"lineNumber":42,"author":{"gitId":"austenjs"},"content":"        Ui.showWelcomeMessage();"},{"lineNumber":43,"author":{"gitId":"austenjs"},"content":"        Scanner scanner \u003d new Scanner(System.in);"},{"lineNumber":44,"author":{"gitId":"austenjs"},"content":"        while (scanner.hasNext()) {"},{"lineNumber":45,"author":{"gitId":"austenjs"},"content":"            String command \u003d scanner.nextLine();"},{"lineNumber":46,"author":{"gitId":"austenjs"},"content":"            if (command.equals(\"bye\")) {"},{"lineNumber":47,"author":{"gitId":"austenjs"},"content":"                Ui.doBye();"},{"lineNumber":48,"author":{"gitId":"austenjs"},"content":"                break;"},{"lineNumber":49,"author":{"gitId":"austenjs"},"content":"            }"},{"lineNumber":50,"author":{"gitId":"austenjs"},"content":"            Ui.printLine();"},{"lineNumber":51,"author":{"gitId":"austenjs"},"content":"            String[] inputs \u003d command.split(\" \");"},{"lineNumber":52,"author":{"gitId":"austenjs"},"content":"            try {"},{"lineNumber":53,"author":{"gitId":"austenjs"},"content":"                this.parser \u003d new Parser(command);"},{"lineNumber":54,"author":{"gitId":"austenjs"},"content":"                command \u003d this.parser.getCommand();"},{"lineNumber":55,"author":{"gitId":"austenjs"},"content":"                String description \u003d this.parser.getDescription();"},{"lineNumber":56,"author":{"gitId":"austenjs"},"content":"                String deadline \u003d this.parser.getDeadLine();"},{"lineNumber":57,"author":{"gitId":"austenjs"},"content":"                if (command.equals(\"list\")) {"},{"lineNumber":58,"author":{"gitId":"austenjs"},"content":"                    taskList.iterateList();"},{"lineNumber":59,"author":{"gitId":"austenjs"},"content":"                    continue;"},{"lineNumber":60,"author":{"gitId":"austenjs"},"content":"                } else if (command.equals(\"done\")) {"},{"lineNumber":61,"author":{"gitId":"austenjs"},"content":"                    taskList.finishATask(description);"},{"lineNumber":62,"author":{"gitId":"austenjs"},"content":"                } else if (command.equals(\"delete\")) {"},{"lineNumber":63,"author":{"gitId":"austenjs"},"content":"                    taskList.deleteATask(description);"},{"lineNumber":64,"author":{"gitId":"austenjs"},"content":"                } else if (command.equals(\"find\")) {"},{"lineNumber":65,"author":{"gitId":"austenjs"},"content":"                    taskList.findTasks(description);"},{"lineNumber":66,"author":{"gitId":"austenjs"},"content":"                } else {"},{"lineNumber":67,"author":{"gitId":"austenjs"},"content":"                    Task task \u003d processTask(command, description, deadline);"},{"lineNumber":68,"author":{"gitId":"austenjs"},"content":"                    taskList.addTask(task);"},{"lineNumber":69,"author":{"gitId":"austenjs"},"content":"                }"},{"lineNumber":70,"author":{"gitId":"austenjs"},"content":"            } catch (DukeException e) {"},{"lineNumber":71,"author":{"gitId":"austenjs"},"content":"                Ui.showMessage(e.getMessage());"},{"lineNumber":72,"author":{"gitId":"austenjs"},"content":"                continue;"},{"lineNumber":73,"author":{"gitId":"austenjs"},"content":"            } catch (DukeExceptionDeadline e) {"},{"lineNumber":74,"author":{"gitId":"austenjs"},"content":"                Ui.showMessage(e.getMessage());"},{"lineNumber":75,"author":{"gitId":"austenjs"},"content":"                continue;"},{"lineNumber":76,"author":{"gitId":"austenjs"},"content":"            }"},{"lineNumber":77,"author":{"gitId":"austenjs"},"content":"            try {"},{"lineNumber":78,"author":{"gitId":"austenjs"},"content":"                storage.writeFile(taskList);"},{"lineNumber":79,"author":{"gitId":"austenjs"},"content":"            } catch (DukeException e) {"},{"lineNumber":80,"author":{"gitId":"austenjs"},"content":"                Ui.showMessage(e.getMessage());"},{"lineNumber":81,"author":{"gitId":"austenjs"},"content":"            }"},{"lineNumber":82,"author":{"gitId":"austenjs"},"content":"        }"},{"lineNumber":83,"author":{"gitId":"austenjs"},"content":"    }"},{"lineNumber":84,"author":{"gitId":"austenjs"},"content":""},{"lineNumber":85,"author":{"gitId":"austenjs"},"content":"    /**"},{"lineNumber":86,"author":{"gitId":"austenjs"},"content":"     * A function that process the command from the users"},{"lineNumber":87,"author":{"gitId":"austenjs"},"content":"     * @param command The type of task given"},{"lineNumber":88,"author":{"gitId":"austenjs"},"content":"     * @param description The description of the task need to be done"},{"lineNumber":89,"author":{"gitId":"austenjs"},"content":"     * @param deadline The deadline of the task (if any)"},{"lineNumber":90,"author":{"gitId":"austenjs"},"content":"     * @return Task object based on the command"},{"lineNumber":91,"author":{"gitId":"austenjs"},"content":"     * @throws DukeException Command is not valid"},{"lineNumber":92,"author":{"gitId":"austenjs"},"content":"     * @throws DukeExceptionDeadline Deadline given is not in \"yyyy-MM-dd\""},{"lineNumber":93,"author":{"gitId":"austenjs"},"content":"     */"},{"lineNumber":94,"author":{"gitId":"austenjs"},"content":""},{"lineNumber":95,"author":{"gitId":"austenjs"},"content":"    public static Task processTask(String command, String description, String deadline)"},{"lineNumber":96,"author":{"gitId":"austenjs"},"content":"            throws DukeException, DukeExceptionDeadline {"},{"lineNumber":97,"author":{"gitId":"austenjs"},"content":"        if (command.equals(\"todo\")) {"},{"lineNumber":98,"author":{"gitId":"austenjs"},"content":"            return new Todo(description);"},{"lineNumber":99,"author":{"gitId":"austenjs"},"content":"        } else if (command.equals(\"deadline\")) {"},{"lineNumber":100,"author":{"gitId":"austenjs"},"content":"            return new Deadline(description, deadline);"},{"lineNumber":101,"author":{"gitId":"austenjs"},"content":"        } else if (command.equals(\"event\")) {"},{"lineNumber":102,"author":{"gitId":"austenjs"},"content":"            return new Event(description, deadline);"},{"lineNumber":103,"author":{"gitId":"austenjs"},"content":"        }"},{"lineNumber":104,"author":{"gitId":"austenjs"},"content":"        throw new DukeException(\"Invalid Command\");"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":106,"author":{"gitId":"-"},"content":"}"}],"authorContributionMap":{"austenjs":102,"-":4}},{"path":"src/main/java/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"austenjs"},"content":"/**"},{"lineNumber":2,"author":{"gitId":"austenjs"},"content":" * A class that represents common error in Duke application."},{"lineNumber":3,"author":{"gitId":"austenjs"},"content":" */"},{"lineNumber":4,"author":{"gitId":"austenjs"},"content":"public class DukeException extends Exception {"},{"lineNumber":5,"author":{"gitId":"austenjs"},"content":"    DukeException(String e) {"},{"lineNumber":6,"author":{"gitId":"austenjs"},"content":"        super(e);"},{"lineNumber":7,"author":{"gitId":"austenjs"},"content":"    }"},{"lineNumber":8,"author":{"gitId":"austenjs"},"content":"}"}],"authorContributionMap":{"austenjs":8}},{"path":"src/main/java/DukeExceptionCorruptedData.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"austenjs"},"content":"/**"},{"lineNumber":2,"author":{"gitId":"austenjs"},"content":" * A class that represents corrupted data error in Duke Application."},{"lineNumber":3,"author":{"gitId":"austenjs"},"content":" */"},{"lineNumber":4,"author":{"gitId":"austenjs"},"content":"public class DukeExceptionCorruptedData extends Exception {"},{"lineNumber":5,"author":{"gitId":"austenjs"},"content":"    DukeExceptionCorruptedData(String e) {"},{"lineNumber":6,"author":{"gitId":"austenjs"},"content":"        super(e);"},{"lineNumber":7,"author":{"gitId":"austenjs"},"content":"    }"},{"lineNumber":8,"author":{"gitId":"austenjs"},"content":"}"}],"authorContributionMap":{"austenjs":8}},{"path":"src/main/java/DukeExceptionDeadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"austenjs"},"content":"/**"},{"lineNumber":2,"author":{"gitId":"austenjs"},"content":" * A class that represents Dateline format error in Duke Application."},{"lineNumber":3,"author":{"gitId":"austenjs"},"content":" */"},{"lineNumber":4,"author":{"gitId":"austenjs"},"content":""},{"lineNumber":5,"author":{"gitId":"austenjs"},"content":"public class DukeExceptionDeadline extends Exception {"},{"lineNumber":6,"author":{"gitId":"austenjs"},"content":"    DukeExceptionDeadline(String e) {"},{"lineNumber":7,"author":{"gitId":"austenjs"},"content":"        super(e);"},{"lineNumber":8,"author":{"gitId":"austenjs"},"content":"    }"},{"lineNumber":9,"author":{"gitId":"austenjs"},"content":"}"},{"lineNumber":10,"author":{"gitId":"austenjs"},"content":""}],"authorContributionMap":{"austenjs":10}},{"path":"src/main/java/DukeExceptionFolder.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"austenjs"},"content":"/**"},{"lineNumber":2,"author":{"gitId":"austenjs"},"content":" * A class that represents folder existance error in Duke Application."},{"lineNumber":3,"author":{"gitId":"austenjs"},"content":" */"},{"lineNumber":4,"author":{"gitId":"austenjs"},"content":"public class DukeExceptionFolder extends Exception {"},{"lineNumber":5,"author":{"gitId":"austenjs"},"content":"    DukeExceptionFolder(String e) {"},{"lineNumber":6,"author":{"gitId":"austenjs"},"content":"        super(e);"},{"lineNumber":7,"author":{"gitId":"austenjs"},"content":"    }"},{"lineNumber":8,"author":{"gitId":"austenjs"},"content":"}"}],"authorContributionMap":{"austenjs":8}},{"path":"src/main/java/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"austenjs"},"content":"/**"},{"lineNumber":2,"author":{"gitId":"austenjs"},"content":" * Represents an Event task. Consists of task to do, as well as"},{"lineNumber":3,"author":{"gitId":"austenjs"},"content":" * deadline of the task."},{"lineNumber":4,"author":{"gitId":"austenjs"},"content":" */"},{"lineNumber":5,"author":{"gitId":"austenjs"},"content":"public class Event extends Task{"},{"lineNumber":6,"author":{"gitId":"austenjs"},"content":"    private final String deadline;"},{"lineNumber":7,"author":{"gitId":"austenjs"},"content":""},{"lineNumber":8,"author":{"gitId":"austenjs"},"content":"    /**"},{"lineNumber":9,"author":{"gitId":"austenjs"},"content":"     * Constructor of an Event object"},{"lineNumber":10,"author":{"gitId":"austenjs"},"content":"     * @param task Task need to be done"},{"lineNumber":11,"author":{"gitId":"austenjs"},"content":"     * @param deadline Deadline when to be done"},{"lineNumber":12,"author":{"gitId":"austenjs"},"content":"     */"},{"lineNumber":13,"author":{"gitId":"austenjs"},"content":"    Event(String task, String deadline) {"},{"lineNumber":14,"author":{"gitId":"austenjs"},"content":"        super(task);"},{"lineNumber":15,"author":{"gitId":"austenjs"},"content":"        this.deadline \u003d deadline;"},{"lineNumber":16,"author":{"gitId":"austenjs"},"content":"    }"},{"lineNumber":17,"author":{"gitId":"austenjs"},"content":""},{"lineNumber":18,"author":{"gitId":"austenjs"},"content":"    /**"},{"lineNumber":19,"author":{"gitId":"austenjs"},"content":"     * Constructor of an Event object"},{"lineNumber":20,"author":{"gitId":"austenjs"},"content":"     * @param task Task need to be done"},{"lineNumber":21,"author":{"gitId":"austenjs"},"content":"     * @param deadline Deadline when to be done"},{"lineNumber":22,"author":{"gitId":"austenjs"},"content":"     * @param done Boolean representing whether the task has been done or not"},{"lineNumber":23,"author":{"gitId":"austenjs"},"content":"     */"},{"lineNumber":24,"author":{"gitId":"austenjs"},"content":"    Event(String task, String deadline, boolean done) {"},{"lineNumber":25,"author":{"gitId":"austenjs"},"content":"        super(task, done);"},{"lineNumber":26,"author":{"gitId":"austenjs"},"content":"        this.deadline \u003d deadline;"},{"lineNumber":27,"author":{"gitId":"austenjs"},"content":"    }"},{"lineNumber":28,"author":{"gitId":"austenjs"},"content":""},{"lineNumber":29,"author":{"gitId":"austenjs"},"content":"    /**"},{"lineNumber":30,"author":{"gitId":"austenjs"},"content":"     * An overriden method from parent class Task. The purpose is to marked the"},{"lineNumber":31,"author":{"gitId":"austenjs"},"content":"     * current Event as done."},{"lineNumber":32,"author":{"gitId":"austenjs"},"content":"     * @return A new Event that has been done"},{"lineNumber":33,"author":{"gitId":"austenjs"},"content":"     */"},{"lineNumber":34,"author":{"gitId":"austenjs"},"content":"    @Override"},{"lineNumber":35,"author":{"gitId":"austenjs"},"content":"    public Task finishTask() {"},{"lineNumber":36,"author":{"gitId":"austenjs"},"content":"        return new Event(this.task, this.deadline, true);"},{"lineNumber":37,"author":{"gitId":"austenjs"},"content":"    }"},{"lineNumber":38,"author":{"gitId":"austenjs"},"content":""},{"lineNumber":39,"author":{"gitId":"austenjs"},"content":"    /**"},{"lineNumber":40,"author":{"gitId":"austenjs"},"content":"     * An overriden method from parent class Task. The purpose is to represents"},{"lineNumber":41,"author":{"gitId":"austenjs"},"content":"     * a String for later saved in txt files"},{"lineNumber":42,"author":{"gitId":"austenjs"},"content":"     * @return String representation in txt files"},{"lineNumber":43,"author":{"gitId":"austenjs"},"content":"     */"},{"lineNumber":44,"author":{"gitId":"austenjs"},"content":"    @Override"},{"lineNumber":45,"author":{"gitId":"austenjs"},"content":"    public String saveString() {"},{"lineNumber":46,"author":{"gitId":"austenjs"},"content":"        return \"E|\" + super.saveString() + \"|\" + this.deadline;"},{"lineNumber":47,"author":{"gitId":"austenjs"},"content":"    }"},{"lineNumber":48,"author":{"gitId":"austenjs"},"content":""},{"lineNumber":49,"author":{"gitId":"austenjs"},"content":"    /**"},{"lineNumber":50,"author":{"gitId":"austenjs"},"content":"     * String representation of an Event class"},{"lineNumber":51,"author":{"gitId":"austenjs"},"content":"     * @return String representation of an Event class."},{"lineNumber":52,"author":{"gitId":"austenjs"},"content":"     */"},{"lineNumber":53,"author":{"gitId":"austenjs"},"content":"    @Override"},{"lineNumber":54,"author":{"gitId":"austenjs"},"content":"    public String toString() {"},{"lineNumber":55,"author":{"gitId":"austenjs"},"content":"        return \"[E]\" + super.toString() + \" (at: \" + this.deadline + \")\";"},{"lineNumber":56,"author":{"gitId":"austenjs"},"content":"    }"},{"lineNumber":57,"author":{"gitId":"austenjs"},"content":"}"}],"authorContributionMap":{"austenjs":57}},{"path":"src/main/java/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"austenjs"},"content":"/**"},{"lineNumber":2,"author":{"gitId":"austenjs"},"content":" * A class that intended to parse the command from the users in DUke application."},{"lineNumber":3,"author":{"gitId":"austenjs"},"content":" */"},{"lineNumber":4,"author":{"gitId":"austenjs"},"content":"public class Parser {"},{"lineNumber":5,"author":{"gitId":"austenjs"},"content":"    private String command;"},{"lineNumber":6,"author":{"gitId":"austenjs"},"content":"    private String description;"},{"lineNumber":7,"author":{"gitId":"austenjs"},"content":""},{"lineNumber":8,"author":{"gitId":"austenjs"},"content":"    /**"},{"lineNumber":9,"author":{"gitId":"austenjs"},"content":"     * Constructor"},{"lineNumber":10,"author":{"gitId":"austenjs"},"content":"     * @param input String given by the user"},{"lineNumber":11,"author":{"gitId":"austenjs"},"content":"     */"},{"lineNumber":12,"author":{"gitId":"austenjs"},"content":"    Parser(String input) {"},{"lineNumber":13,"author":{"gitId":"austenjs"},"content":"        String[] tokens \u003d input.split(\" \");"},{"lineNumber":14,"author":{"gitId":"austenjs"},"content":"        this.command \u003d tokens[0];"},{"lineNumber":15,"author":{"gitId":"austenjs"},"content":"        this.description \u003d input;"},{"lineNumber":16,"author":{"gitId":"austenjs"},"content":"    }"},{"lineNumber":17,"author":{"gitId":"austenjs"},"content":""},{"lineNumber":18,"author":{"gitId":"austenjs"},"content":"    /**"},{"lineNumber":19,"author":{"gitId":"austenjs"},"content":"     * Get the type of command from the user"},{"lineNumber":20,"author":{"gitId":"austenjs"},"content":"     * @return Type of command from the user"},{"lineNumber":21,"author":{"gitId":"austenjs"},"content":"     */"},{"lineNumber":22,"author":{"gitId":"austenjs"},"content":"    public String getCommand() {"},{"lineNumber":23,"author":{"gitId":"austenjs"},"content":"        return this.command;"},{"lineNumber":24,"author":{"gitId":"austenjs"},"content":"    }"},{"lineNumber":25,"author":{"gitId":"austenjs"},"content":""},{"lineNumber":26,"author":{"gitId":"austenjs"},"content":"    /**"},{"lineNumber":27,"author":{"gitId":"austenjs"},"content":"     * Get the description of the task"},{"lineNumber":28,"author":{"gitId":"austenjs"},"content":"     * @return String representing the description of the task"},{"lineNumber":29,"author":{"gitId":"austenjs"},"content":"     * @throws DukeException Empty description or unknown command"},{"lineNumber":30,"author":{"gitId":"austenjs"},"content":"     */"},{"lineNumber":31,"author":{"gitId":"austenjs"},"content":"    public String getDescription() throws DukeException{"},{"lineNumber":32,"author":{"gitId":"austenjs"},"content":"        try {"},{"lineNumber":33,"author":{"gitId":"austenjs"},"content":"            if (this.command.equals(\"list\")) {"},{"lineNumber":34,"author":{"gitId":"austenjs"},"content":"                return command;"},{"lineNumber":35,"author":{"gitId":"austenjs"},"content":"            } else if (this.command.equals(\"done\") || this.command.equals(\"delete\")"},{"lineNumber":36,"author":{"gitId":"austenjs"},"content":"                    || this.command.equals(\"todo\") || this.command.equals(\"find\")) {"},{"lineNumber":37,"author":{"gitId":"austenjs"},"content":"                return this.description.substring(this.command.length() + 1);"},{"lineNumber":38,"author":{"gitId":"austenjs"},"content":"            } else if (this.command.equals(\"deadline\")) {"},{"lineNumber":39,"author":{"gitId":"austenjs"},"content":"                String[] phrases \u003d this.description.split(\" /by \");"},{"lineNumber":40,"author":{"gitId":"austenjs"},"content":"                return phrases[0].substring(this.command.length() + 1);"},{"lineNumber":41,"author":{"gitId":"austenjs"},"content":"            } else if (this.command.equals(\"event\")) {"},{"lineNumber":42,"author":{"gitId":"austenjs"},"content":"                String[] phrases \u003d this.description.split(\" /at \");"},{"lineNumber":43,"author":{"gitId":"austenjs"},"content":"                return phrases[0].substring(this.command.length() + 1);"},{"lineNumber":44,"author":{"gitId":"austenjs"},"content":"            }"},{"lineNumber":45,"author":{"gitId":"austenjs"},"content":"        } catch (StringIndexOutOfBoundsException e) {"},{"lineNumber":46,"author":{"gitId":"austenjs"},"content":"            throw new DukeException(\"☹ OOPS!!! I\u0027m sorry, but the \""},{"lineNumber":47,"author":{"gitId":"austenjs"},"content":"                    + this.command +\" must have description :-(\");"},{"lineNumber":48,"author":{"gitId":"austenjs"},"content":"        } catch (ArrayIndexOutOfBoundsException e) {"},{"lineNumber":49,"author":{"gitId":"austenjs"},"content":"            throw new DukeException(\"☹ OOPS!!! I\u0027m sorry, but the input is kinda faulty :-(\");"},{"lineNumber":50,"author":{"gitId":"austenjs"},"content":"        }"},{"lineNumber":51,"author":{"gitId":"austenjs"},"content":"        throw new DukeException(\"☹ OOPS!!! I\u0027m sorry, but I cannot understand the input :-(\");"},{"lineNumber":52,"author":{"gitId":"austenjs"},"content":"    }"},{"lineNumber":53,"author":{"gitId":"austenjs"},"content":""},{"lineNumber":54,"author":{"gitId":"austenjs"},"content":"    /**"},{"lineNumber":55,"author":{"gitId":"austenjs"},"content":"     * Get the deadline of the task (if any)"},{"lineNumber":56,"author":{"gitId":"austenjs"},"content":"     * @return String representing the deadline of the task"},{"lineNumber":57,"author":{"gitId":"austenjs"},"content":"     * @throws DukeException Empty description or unknown command"},{"lineNumber":58,"author":{"gitId":"austenjs"},"content":"     */"},{"lineNumber":59,"author":{"gitId":"austenjs"},"content":"    public String getDeadLine() throws DukeException {"},{"lineNumber":60,"author":{"gitId":"austenjs"},"content":"        try {"},{"lineNumber":61,"author":{"gitId":"austenjs"},"content":"            if (this.command.equals(\"done\") || this.command.equals(\"delete\")"},{"lineNumber":62,"author":{"gitId":"austenjs"},"content":"                    || this.command.equals(\"todo\") || this.command.equals(\"list\")"},{"lineNumber":63,"author":{"gitId":"austenjs"},"content":"                    || this.command.equals(\"find\")) {"},{"lineNumber":64,"author":{"gitId":"austenjs"},"content":"                return \"\";"},{"lineNumber":65,"author":{"gitId":"austenjs"},"content":"            } else if (this.command.equals(\"deadline\")) {"},{"lineNumber":66,"author":{"gitId":"austenjs"},"content":"                String[] phrases \u003d this.description.split(\" /by \");"},{"lineNumber":67,"author":{"gitId":"austenjs"},"content":"                return phrases[1];"},{"lineNumber":68,"author":{"gitId":"austenjs"},"content":"            } else if (this.command.equals(\"event\")) {"},{"lineNumber":69,"author":{"gitId":"austenjs"},"content":"                String[] phrases \u003d this.description.split(\" /at \");"},{"lineNumber":70,"author":{"gitId":"austenjs"},"content":"                return phrases[1];"},{"lineNumber":71,"author":{"gitId":"austenjs"},"content":"            }"},{"lineNumber":72,"author":{"gitId":"austenjs"},"content":"        }"},{"lineNumber":73,"author":{"gitId":"austenjs"},"content":"        catch (StringIndexOutOfBoundsException e) {"},{"lineNumber":74,"author":{"gitId":"austenjs"},"content":"            throw new DukeException(\"☹ OOPS!!! I\u0027m sorry, but the \""},{"lineNumber":75,"author":{"gitId":"austenjs"},"content":"                    + this.command +\" must have description :-(\");"},{"lineNumber":76,"author":{"gitId":"austenjs"},"content":"        }"},{"lineNumber":77,"author":{"gitId":"austenjs"},"content":"        catch (ArrayIndexOutOfBoundsException e) {"},{"lineNumber":78,"author":{"gitId":"austenjs"},"content":"            throw new DukeException(\"☹ OOPS!!! I\u0027m sorry, but the input is kinda faulty :-(\");"},{"lineNumber":79,"author":{"gitId":"austenjs"},"content":"        }"},{"lineNumber":80,"author":{"gitId":"austenjs"},"content":"        throw new DukeException(\"☹ OOPS!!! I\u0027m sorry, but I cannot understand the input :-(\");"},{"lineNumber":81,"author":{"gitId":"austenjs"},"content":"    }"},{"lineNumber":82,"author":{"gitId":"austenjs"},"content":"}"}],"authorContributionMap":{"austenjs":82}},{"path":"src/main/java/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"austenjs"},"content":"import java.io.File;"},{"lineNumber":2,"author":{"gitId":"austenjs"},"content":"import java.io.FileNotFoundException;"},{"lineNumber":3,"author":{"gitId":"austenjs"},"content":"import java.io.FileWriter;"},{"lineNumber":4,"author":{"gitId":"austenjs"},"content":"import java.util.Arrays;"},{"lineNumber":5,"author":{"gitId":"austenjs"},"content":"import java.util.Scanner;"},{"lineNumber":6,"author":{"gitId":"austenjs"},"content":"import java.util.List;"},{"lineNumber":7,"author":{"gitId":"austenjs"},"content":"import java.util.ArrayList;"},{"lineNumber":8,"author":{"gitId":"austenjs"},"content":"import java.io.IOException;"},{"lineNumber":9,"author":{"gitId":"austenjs"},"content":""},{"lineNumber":10,"author":{"gitId":"austenjs"},"content":"/**"},{"lineNumber":11,"author":{"gitId":"austenjs"},"content":" * A class that control the data saving and loading in Duke Application."},{"lineNumber":12,"author":{"gitId":"austenjs"},"content":" */"},{"lineNumber":13,"author":{"gitId":"austenjs"},"content":"public class Storage {"},{"lineNumber":14,"author":{"gitId":"austenjs"},"content":"    private final String filePath;"},{"lineNumber":15,"author":{"gitId":"austenjs"},"content":""},{"lineNumber":16,"author":{"gitId":"austenjs"},"content":"    /**"},{"lineNumber":17,"author":{"gitId":"austenjs"},"content":"     * Constructor for Storage object"},{"lineNumber":18,"author":{"gitId":"austenjs"},"content":"     * @param filePath String representing relative path of the txt file"},{"lineNumber":19,"author":{"gitId":"austenjs"},"content":"     */"},{"lineNumber":20,"author":{"gitId":"austenjs"},"content":"    Storage(String filePath) {"},{"lineNumber":21,"author":{"gitId":"austenjs"},"content":"        this.filePath \u003d filePath;"},{"lineNumber":22,"author":{"gitId":"austenjs"},"content":"    }"},{"lineNumber":23,"author":{"gitId":"austenjs"},"content":""},{"lineNumber":24,"author":{"gitId":"austenjs"},"content":"    /**"},{"lineNumber":25,"author":{"gitId":"austenjs"},"content":"     * Load the data from a line of text to be a Task object"},{"lineNumber":26,"author":{"gitId":"austenjs"},"content":"     * @param type String representing type of Task"},{"lineNumber":27,"author":{"gitId":"austenjs"},"content":"     * @param bool String representing the state of the Task"},{"lineNumber":28,"author":{"gitId":"austenjs"},"content":"     * @param commands Description of the task"},{"lineNumber":29,"author":{"gitId":"austenjs"},"content":"     * @return Task corresponding to the type, bool, abd commands"},{"lineNumber":30,"author":{"gitId":"austenjs"},"content":"     * @throws DukeExceptionCorruptedData The data format is incompatible"},{"lineNumber":31,"author":{"gitId":"austenjs"},"content":"     */"},{"lineNumber":32,"author":{"gitId":"austenjs"},"content":"    private Task processData(String type, String bool, String[] commands)"},{"lineNumber":33,"author":{"gitId":"austenjs"},"content":"            throws DukeExceptionCorruptedData {"},{"lineNumber":34,"author":{"gitId":"austenjs"},"content":"        if (type.equals(\"T\")) {"},{"lineNumber":35,"author":{"gitId":"austenjs"},"content":"            return bool.equals(\"1\") ? new Todo(commands[0], true) : new Todo(commands[0]);"},{"lineNumber":36,"author":{"gitId":"austenjs"},"content":"        } else if (type.equals(\"D\")) {"},{"lineNumber":37,"author":{"gitId":"austenjs"},"content":"            try {"},{"lineNumber":38,"author":{"gitId":"austenjs"},"content":"                return bool.equals(\"1\") ? new Deadline(commands[0], commands[1], true)"},{"lineNumber":39,"author":{"gitId":"austenjs"},"content":"                        : new Deadline(commands[0], commands[1]);"},{"lineNumber":40,"author":{"gitId":"austenjs"},"content":"            } catch (DukeExceptionDeadline e) {"},{"lineNumber":41,"author":{"gitId":"austenjs"},"content":"                throw new DukeExceptionCorruptedData(\"The deadline task in the txt file corrupted\");"},{"lineNumber":42,"author":{"gitId":"austenjs"},"content":"            }"},{"lineNumber":43,"author":{"gitId":"austenjs"},"content":"        } else if (type.equals(\"E\")) {"},{"lineNumber":44,"author":{"gitId":"austenjs"},"content":"            return bool.equals(\"1\") ? new Event(commands[0], commands[1], true)"},{"lineNumber":45,"author":{"gitId":"austenjs"},"content":"                    : new Event(commands[0], commands[1]);"},{"lineNumber":46,"author":{"gitId":"austenjs"},"content":"        }"},{"lineNumber":47,"author":{"gitId":"austenjs"},"content":"        throw new DukeExceptionCorruptedData(\"The txt file is corrupted\");"},{"lineNumber":48,"author":{"gitId":"austenjs"},"content":"    }"},{"lineNumber":49,"author":{"gitId":"austenjs"},"content":""},{"lineNumber":50,"author":{"gitId":"austenjs"},"content":"    /**"},{"lineNumber":51,"author":{"gitId":"austenjs"},"content":"     * Load data from the txt file"},{"lineNumber":52,"author":{"gitId":"austenjs"},"content":"     * @return List of Task object"},{"lineNumber":53,"author":{"gitId":"austenjs"},"content":"     * @throws DukeExceptionFolder The folder doesn\u0027t exist"},{"lineNumber":54,"author":{"gitId":"austenjs"},"content":"     * @throws DukeExceptionCorruptedData The data format is incompatible"},{"lineNumber":55,"author":{"gitId":"austenjs"},"content":"     */"},{"lineNumber":56,"author":{"gitId":"austenjs"},"content":"    public List\u003cTask\u003e load() throws DukeExceptionFolder,DukeExceptionCorruptedData {"},{"lineNumber":57,"author":{"gitId":"austenjs"},"content":"        List\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();"},{"lineNumber":58,"author":{"gitId":"austenjs"},"content":"        File file \u003d new File(this.filePath);"},{"lineNumber":59,"author":{"gitId":"austenjs"},"content":"        try {"},{"lineNumber":60,"author":{"gitId":"austenjs"},"content":"            Scanner scanner \u003d new Scanner(file);"},{"lineNumber":61,"author":{"gitId":"austenjs"},"content":"            while(scanner.hasNextLine()) {"},{"lineNumber":62,"author":{"gitId":"austenjs"},"content":"                String line \u003d scanner.nextLine();"},{"lineNumber":63,"author":{"gitId":"austenjs"},"content":"                String[] commands \u003d line.split(\"\\\\|\");"},{"lineNumber":64,"author":{"gitId":"austenjs"},"content":"                tasks.add(processData(commands[0], commands[1], Arrays.copyOfRange(commands, 2, 5)));"},{"lineNumber":65,"author":{"gitId":"austenjs"},"content":"            }"},{"lineNumber":66,"author":{"gitId":"austenjs"},"content":"            return tasks;"},{"lineNumber":67,"author":{"gitId":"austenjs"},"content":"        } catch (FileNotFoundException e) {"},{"lineNumber":68,"author":{"gitId":"austenjs"},"content":"            try {"},{"lineNumber":69,"author":{"gitId":"austenjs"},"content":"                file.createNewFile();"},{"lineNumber":70,"author":{"gitId":"austenjs"},"content":"            } catch(IOException error) {"},{"lineNumber":71,"author":{"gitId":"austenjs"},"content":"                throw new DukeExceptionFolder(\"No \u0027data\u0027 folder in this directory\");"},{"lineNumber":72,"author":{"gitId":"austenjs"},"content":"            }"},{"lineNumber":73,"author":{"gitId":"austenjs"},"content":"        }"},{"lineNumber":74,"author":{"gitId":"austenjs"},"content":"        return tasks;"},{"lineNumber":75,"author":{"gitId":"austenjs"},"content":"    }"},{"lineNumber":76,"author":{"gitId":"austenjs"},"content":""},{"lineNumber":77,"author":{"gitId":"austenjs"},"content":"    /**"},{"lineNumber":78,"author":{"gitId":"austenjs"},"content":"     * Write file to the existing file (if doesn\u0027t exist, create a new one)"},{"lineNumber":79,"author":{"gitId":"austenjs"},"content":"     * @param tasks TaskList wanted to be written"},{"lineNumber":80,"author":{"gitId":"austenjs"},"content":"     * @throws DukeException Wrong path"},{"lineNumber":81,"author":{"gitId":"austenjs"},"content":"     */"},{"lineNumber":82,"author":{"gitId":"austenjs"},"content":"    public void writeFile(TaskList tasks) throws DukeException {"},{"lineNumber":83,"author":{"gitId":"austenjs"},"content":"        try {"},{"lineNumber":84,"author":{"gitId":"austenjs"},"content":"            FileWriter file \u003d new FileWriter(this.filePath, false);"},{"lineNumber":85,"author":{"gitId":"austenjs"},"content":"            for (Task task: tasks.getTasks()) {"},{"lineNumber":86,"author":{"gitId":"austenjs"},"content":"                file.write(String.format(task.saveString() + \"%n\"));"},{"lineNumber":87,"author":{"gitId":"austenjs"},"content":"            }"},{"lineNumber":88,"author":{"gitId":"austenjs"},"content":"            file.close();"},{"lineNumber":89,"author":{"gitId":"austenjs"},"content":"        } catch(IOException e) {"},{"lineNumber":90,"author":{"gitId":"austenjs"},"content":"            throw new DukeException(\"Wrong path\");"},{"lineNumber":91,"author":{"gitId":"austenjs"},"content":"        }"},{"lineNumber":92,"author":{"gitId":"austenjs"},"content":"    }"},{"lineNumber":93,"author":{"gitId":"austenjs"},"content":""},{"lineNumber":94,"author":{"gitId":"austenjs"},"content":"}"}],"authorContributionMap":{"austenjs":94}},{"path":"src/main/java/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"austenjs"},"content":"/**"},{"lineNumber":2,"author":{"gitId":"austenjs"},"content":" * A class representing a common Task object. Consists of the description"},{"lineNumber":3,"author":{"gitId":"austenjs"},"content":" * of the task as well as the state."},{"lineNumber":4,"author":{"gitId":"austenjs"},"content":" */"},{"lineNumber":5,"author":{"gitId":"austenjs"},"content":""},{"lineNumber":6,"author":{"gitId":"austenjs"},"content":"public class Task {"},{"lineNumber":7,"author":{"gitId":"austenjs"},"content":"    protected final String task;"},{"lineNumber":8,"author":{"gitId":"austenjs"},"content":"    protected final boolean isDone;"},{"lineNumber":9,"author":{"gitId":"austenjs"},"content":""},{"lineNumber":10,"author":{"gitId":"austenjs"},"content":"    /**"},{"lineNumber":11,"author":{"gitId":"austenjs"},"content":"     * Constructor of a Task object"},{"lineNumber":12,"author":{"gitId":"austenjs"},"content":"     * @param task Task need to be done"},{"lineNumber":13,"author":{"gitId":"austenjs"},"content":"     */"},{"lineNumber":14,"author":{"gitId":"austenjs"},"content":"    Task(String task) {"},{"lineNumber":15,"author":{"gitId":"austenjs"},"content":"        this.task \u003d task;"},{"lineNumber":16,"author":{"gitId":"austenjs"},"content":"        this.isDone \u003d false;"},{"lineNumber":17,"author":{"gitId":"austenjs"},"content":"    }"},{"lineNumber":18,"author":{"gitId":"austenjs"},"content":""},{"lineNumber":19,"author":{"gitId":"austenjs"},"content":"    Task(String task, boolean isDone) {"},{"lineNumber":20,"author":{"gitId":"austenjs"},"content":"        this.task \u003d task;"},{"lineNumber":21,"author":{"gitId":"austenjs"},"content":"        this.isDone \u003d isDone;"},{"lineNumber":22,"author":{"gitId":"austenjs"},"content":"    }"},{"lineNumber":23,"author":{"gitId":"austenjs"},"content":""},{"lineNumber":24,"author":{"gitId":"austenjs"},"content":"    /**"},{"lineNumber":25,"author":{"gitId":"austenjs"},"content":"     * Finish the current Task"},{"lineNumber":26,"author":{"gitId":"austenjs"},"content":"     * @return New Task object that has been done"},{"lineNumber":27,"author":{"gitId":"austenjs"},"content":"     */"},{"lineNumber":28,"author":{"gitId":"austenjs"},"content":"    public Task finishTask() {"},{"lineNumber":29,"author":{"gitId":"austenjs"},"content":"        return new Task(this.task, true);"},{"lineNumber":30,"author":{"gitId":"austenjs"},"content":"    }"},{"lineNumber":31,"author":{"gitId":"austenjs"},"content":""},{"lineNumber":32,"author":{"gitId":"austenjs"},"content":"    /**"},{"lineNumber":33,"author":{"gitId":"austenjs"},"content":"     * Return a String representation for saving in txt files"},{"lineNumber":34,"author":{"gitId":"austenjs"},"content":"     * @return String representation in txt files"},{"lineNumber":35,"author":{"gitId":"austenjs"},"content":"     */"},{"lineNumber":36,"author":{"gitId":"austenjs"},"content":"    public String saveString() {"},{"lineNumber":37,"author":{"gitId":"austenjs"},"content":"        if (this.isDone) {"},{"lineNumber":38,"author":{"gitId":"austenjs"},"content":"            return \"1|\" + this.task;"},{"lineNumber":39,"author":{"gitId":"austenjs"},"content":"        }"},{"lineNumber":40,"author":{"gitId":"austenjs"},"content":"        return \"0|\" + this.task;"},{"lineNumber":41,"author":{"gitId":"austenjs"},"content":"    }"},{"lineNumber":42,"author":{"gitId":"austenjs"},"content":""},{"lineNumber":43,"author":{"gitId":"austenjs"},"content":"    /**"},{"lineNumber":44,"author":{"gitId":"austenjs"},"content":"     * String representation of Task object"},{"lineNumber":45,"author":{"gitId":"austenjs"},"content":"     * @return String representation of Task object"},{"lineNumber":46,"author":{"gitId":"austenjs"},"content":"     */"},{"lineNumber":47,"author":{"gitId":"austenjs"},"content":"    @Override"},{"lineNumber":48,"author":{"gitId":"austenjs"},"content":"    public String toString() {"},{"lineNumber":49,"author":{"gitId":"austenjs"},"content":"        String tick \u003d \" \";"},{"lineNumber":50,"author":{"gitId":"austenjs"},"content":"        if (this.isDone){"},{"lineNumber":51,"author":{"gitId":"austenjs"},"content":"            tick \u003d \"X\";"},{"lineNumber":52,"author":{"gitId":"austenjs"},"content":"        }"},{"lineNumber":53,"author":{"gitId":"austenjs"},"content":"        return \"[\" + tick + \"]\" + \" \" + this.task;"},{"lineNumber":54,"author":{"gitId":"austenjs"},"content":"    }"},{"lineNumber":55,"author":{"gitId":"austenjs"},"content":"}"}],"authorContributionMap":{"austenjs":55}},{"path":"src/main/java/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"austenjs"},"content":"import java.util.ArrayList;"},{"lineNumber":2,"author":{"gitId":"austenjs"},"content":"import java.util.List;"},{"lineNumber":3,"author":{"gitId":"austenjs"},"content":""},{"lineNumber":4,"author":{"gitId":"austenjs"},"content":"/**"},{"lineNumber":5,"author":{"gitId":"austenjs"},"content":" * Class that encapsulate, control, and evaluate a list of task."},{"lineNumber":6,"author":{"gitId":"austenjs"},"content":" */"},{"lineNumber":7,"author":{"gitId":"austenjs"},"content":"public class TaskList {"},{"lineNumber":8,"author":{"gitId":"austenjs"},"content":"    private final List\u003cTask\u003e tasks;"},{"lineNumber":9,"author":{"gitId":"austenjs"},"content":""},{"lineNumber":10,"author":{"gitId":"austenjs"},"content":"    /**"},{"lineNumber":11,"author":{"gitId":"austenjs"},"content":"     * Constructor of TaskList object"},{"lineNumber":12,"author":{"gitId":"austenjs"},"content":"     */"},{"lineNumber":13,"author":{"gitId":"austenjs"},"content":"    TaskList() {"},{"lineNumber":14,"author":{"gitId":"austenjs"},"content":"        this.tasks \u003d new ArrayList\u003cTask\u003e();"},{"lineNumber":15,"author":{"gitId":"austenjs"},"content":"    }"},{"lineNumber":16,"author":{"gitId":"austenjs"},"content":""},{"lineNumber":17,"author":{"gitId":"austenjs"},"content":"    /**"},{"lineNumber":18,"author":{"gitId":"austenjs"},"content":"     * Constructor of TaskList object"},{"lineNumber":19,"author":{"gitId":"austenjs"},"content":"     * @param tasks List of Task"},{"lineNumber":20,"author":{"gitId":"austenjs"},"content":"     */"},{"lineNumber":21,"author":{"gitId":"austenjs"},"content":"    TaskList(List\u003cTask\u003e tasks) {"},{"lineNumber":22,"author":{"gitId":"austenjs"},"content":"        List\u003cTask\u003e newTasks \u003d new ArrayList\u003cTask\u003e();"},{"lineNumber":23,"author":{"gitId":"austenjs"},"content":"        for (Task task : tasks) {"},{"lineNumber":24,"author":{"gitId":"austenjs"},"content":"            newTasks.add(task);"},{"lineNumber":25,"author":{"gitId":"austenjs"},"content":"        }"},{"lineNumber":26,"author":{"gitId":"austenjs"},"content":"        this.tasks \u003d newTasks;"},{"lineNumber":27,"author":{"gitId":"austenjs"},"content":"    }"},{"lineNumber":28,"author":{"gitId":"austenjs"},"content":""},{"lineNumber":29,"author":{"gitId":"austenjs"},"content":"    /**"},{"lineNumber":30,"author":{"gitId":"austenjs"},"content":"     * Iterate Task object in list and ask Ui to print them"},{"lineNumber":31,"author":{"gitId":"austenjs"},"content":"     */"},{"lineNumber":32,"author":{"gitId":"austenjs"},"content":"    public void iterateList() {"},{"lineNumber":33,"author":{"gitId":"austenjs"},"content":"        if (this.tasks.size() \u003d\u003d 0) {"},{"lineNumber":34,"author":{"gitId":"austenjs"},"content":"            Ui.showMessage(\"There are no task in your list\");"},{"lineNumber":35,"author":{"gitId":"austenjs"},"content":"            return;"},{"lineNumber":36,"author":{"gitId":"austenjs"},"content":"        }"},{"lineNumber":37,"author":{"gitId":"austenjs"},"content":"        Ui.showMessageInALine(\"Here are the tasks in your list:\");"},{"lineNumber":38,"author":{"gitId":"austenjs"},"content":"        for (int i \u003d 0; i \u003c this.tasks.size(); i++) {"},{"lineNumber":39,"author":{"gitId":"austenjs"},"content":"            Ui.showMessageInALine(String.valueOf(i + 1) + \".\" + this.tasks.get(i));"},{"lineNumber":40,"author":{"gitId":"austenjs"},"content":"        }"},{"lineNumber":41,"author":{"gitId":"austenjs"},"content":"        Ui.printLine();"},{"lineNumber":42,"author":{"gitId":"austenjs"},"content":"    }"},{"lineNumber":43,"author":{"gitId":"austenjs"},"content":""},{"lineNumber":44,"author":{"gitId":"austenjs"},"content":"    /**"},{"lineNumber":45,"author":{"gitId":"austenjs"},"content":"     * Set a task to be done"},{"lineNumber":46,"author":{"gitId":"austenjs"},"content":"     * @param input The String representation of the index of the task"},{"lineNumber":47,"author":{"gitId":"austenjs"},"content":"     * @throws DukeException Index out of bound"},{"lineNumber":48,"author":{"gitId":"austenjs"},"content":"     */"},{"lineNumber":49,"author":{"gitId":"austenjs"},"content":"    public void finishATask(String input) throws DukeException {"},{"lineNumber":50,"author":{"gitId":"austenjs"},"content":"        try {"},{"lineNumber":51,"author":{"gitId":"austenjs"},"content":"            int index \u003d Integer.parseInt(input) - 1;"},{"lineNumber":52,"author":{"gitId":"austenjs"},"content":"            this.tasks.set(index, this.tasks.get(index).finishTask());"},{"lineNumber":53,"author":{"gitId":"austenjs"},"content":"            Ui.finishTaskMessage(this.tasks.get(index).toString());"},{"lineNumber":54,"author":{"gitId":"austenjs"},"content":"        } catch (ArrayIndexOutOfBoundsException e) {"},{"lineNumber":55,"author":{"gitId":"austenjs"},"content":"            throw new DukeException(\"☹ OOPS!!! The index of done cannot be empty.\");"},{"lineNumber":56,"author":{"gitId":"austenjs"},"content":"        }"},{"lineNumber":57,"author":{"gitId":"austenjs"},"content":"        catch(IndexOutOfBoundsException e) {"},{"lineNumber":58,"author":{"gitId":"austenjs"},"content":"            throw new DukeException(\"☹ OOPS!!! The index of done exceed the tasks\u0027 list.\");"},{"lineNumber":59,"author":{"gitId":"austenjs"},"content":"        }"},{"lineNumber":60,"author":{"gitId":"austenjs"},"content":"    }"},{"lineNumber":61,"author":{"gitId":"austenjs"},"content":""},{"lineNumber":62,"author":{"gitId":"austenjs"},"content":"    /**"},{"lineNumber":63,"author":{"gitId":"austenjs"},"content":"     * Delete a task"},{"lineNumber":64,"author":{"gitId":"austenjs"},"content":"     * @param input The String representation of the index of the task"},{"lineNumber":65,"author":{"gitId":"austenjs"},"content":"     * @throws DukeException Index out of bound"},{"lineNumber":66,"author":{"gitId":"austenjs"},"content":"     */"},{"lineNumber":67,"author":{"gitId":"austenjs"},"content":"    public void deleteATask(String input) throws DukeException {"},{"lineNumber":68,"author":{"gitId":"austenjs"},"content":"        try {"},{"lineNumber":69,"author":{"gitId":"austenjs"},"content":"            int index \u003d Integer.parseInt(input) - 1;"},{"lineNumber":70,"author":{"gitId":"austenjs"},"content":"            Task deleted \u003d this.tasks.get(index);"},{"lineNumber":71,"author":{"gitId":"austenjs"},"content":"            this.tasks.remove(index);"},{"lineNumber":72,"author":{"gitId":"austenjs"},"content":"            Ui.deleteTaskMessage(deleted.toString(), this.tasks.size());"},{"lineNumber":73,"author":{"gitId":"austenjs"},"content":"        }"},{"lineNumber":74,"author":{"gitId":"austenjs"},"content":"        catch(ArrayIndexOutOfBoundsException e) {"},{"lineNumber":75,"author":{"gitId":"austenjs"},"content":"            throw new DukeException(\"☹ OOPS!!! The index of delete cannot be empty.\");"},{"lineNumber":76,"author":{"gitId":"austenjs"},"content":"        }"},{"lineNumber":77,"author":{"gitId":"austenjs"},"content":"        catch(IndexOutOfBoundsException e) {"},{"lineNumber":78,"author":{"gitId":"austenjs"},"content":"            throw new DukeException(\"☹ OOPS!!! The index of delete exceed the tasks\u0027 list.\");"},{"lineNumber":79,"author":{"gitId":"austenjs"},"content":"        }"},{"lineNumber":80,"author":{"gitId":"austenjs"},"content":"    }"},{"lineNumber":81,"author":{"gitId":"austenjs"},"content":""},{"lineNumber":82,"author":{"gitId":"austenjs"},"content":"    /**"},{"lineNumber":83,"author":{"gitId":"austenjs"},"content":"     * Add task to the current TaskList"},{"lineNumber":84,"author":{"gitId":"austenjs"},"content":"     * @param task Task that is going to be added"},{"lineNumber":85,"author":{"gitId":"austenjs"},"content":"     */"},{"lineNumber":86,"author":{"gitId":"austenjs"},"content":"    public void addTask(Task task) {"},{"lineNumber":87,"author":{"gitId":"austenjs"},"content":"        this.tasks.add(task);"},{"lineNumber":88,"author":{"gitId":"austenjs"},"content":"        Ui.addTaskMessage(task.toString(), this.tasks.size());"},{"lineNumber":89,"author":{"gitId":"austenjs"},"content":"    }"},{"lineNumber":90,"author":{"gitId":"austenjs"},"content":""},{"lineNumber":91,"author":{"gitId":"austenjs"},"content":"    /**"},{"lineNumber":92,"author":{"gitId":"austenjs"},"content":"     * Finding Tasks that match the keyword"},{"lineNumber":93,"author":{"gitId":"austenjs"},"content":"     * @param keyword Keyword to find in list of Tasks"},{"lineNumber":94,"author":{"gitId":"austenjs"},"content":"     */"},{"lineNumber":95,"author":{"gitId":"austenjs"},"content":"    public void findTasks(String keyword) {"},{"lineNumber":96,"author":{"gitId":"austenjs"},"content":"        List\u003cTask\u003e temp \u003d new ArrayList\u003c\u003e();"},{"lineNumber":97,"author":{"gitId":"austenjs"},"content":"        for (Task task: this.tasks) {"},{"lineNumber":98,"author":{"gitId":"austenjs"},"content":"            if (task.toString().contains(keyword)) {"},{"lineNumber":99,"author":{"gitId":"austenjs"},"content":"                temp.add(task);"},{"lineNumber":100,"author":{"gitId":"austenjs"},"content":"            }"},{"lineNumber":101,"author":{"gitId":"austenjs"},"content":"        }"},{"lineNumber":102,"author":{"gitId":"austenjs"},"content":"        if (temp.size() \u003d\u003d 0) {"},{"lineNumber":103,"author":{"gitId":"austenjs"},"content":"            Ui.showMessage(\"No matching task\");"},{"lineNumber":104,"author":{"gitId":"austenjs"},"content":"            return;"},{"lineNumber":105,"author":{"gitId":"austenjs"},"content":"        }"},{"lineNumber":106,"author":{"gitId":"austenjs"},"content":"        Ui.showMessageInALine(\"Here are the matching tasks in your list:\");"},{"lineNumber":107,"author":{"gitId":"austenjs"},"content":"        for (int i \u003d 0; i \u003c temp.size(); i++) {"},{"lineNumber":108,"author":{"gitId":"austenjs"},"content":"            Ui.showMessageInALine(String.valueOf(i + 1) + \".\" + temp.get(i));"},{"lineNumber":109,"author":{"gitId":"austenjs"},"content":"        }"},{"lineNumber":110,"author":{"gitId":"austenjs"},"content":"        Ui.printLine();"},{"lineNumber":111,"author":{"gitId":"austenjs"},"content":""},{"lineNumber":112,"author":{"gitId":"austenjs"},"content":"    }"},{"lineNumber":113,"author":{"gitId":"austenjs"},"content":""},{"lineNumber":114,"author":{"gitId":"austenjs"},"content":"    /**"},{"lineNumber":115,"author":{"gitId":"austenjs"},"content":"     * Get List of Task"},{"lineNumber":116,"author":{"gitId":"austenjs"},"content":"     * @return List of Task"},{"lineNumber":117,"author":{"gitId":"austenjs"},"content":"     */"},{"lineNumber":118,"author":{"gitId":"austenjs"},"content":"    public List\u003cTask\u003e getTasks() {"},{"lineNumber":119,"author":{"gitId":"austenjs"},"content":"        return this.tasks;"},{"lineNumber":120,"author":{"gitId":"austenjs"},"content":"    }"},{"lineNumber":121,"author":{"gitId":"austenjs"},"content":""},{"lineNumber":122,"author":{"gitId":"austenjs"},"content":""},{"lineNumber":123,"author":{"gitId":"austenjs"},"content":"}"},{"lineNumber":124,"author":{"gitId":"austenjs"},"content":""}],"authorContributionMap":{"austenjs":124}},{"path":"src/main/java/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"austenjs"},"content":"/**"},{"lineNumber":2,"author":{"gitId":"austenjs"},"content":" * A class represents a Todo event. Consists of task description and state"},{"lineNumber":3,"author":{"gitId":"austenjs"},"content":" * of the task"},{"lineNumber":4,"author":{"gitId":"austenjs"},"content":" */"},{"lineNumber":5,"author":{"gitId":"austenjs"},"content":"public class Todo extends Task {"},{"lineNumber":6,"author":{"gitId":"austenjs"},"content":""},{"lineNumber":7,"author":{"gitId":"austenjs"},"content":"    /**"},{"lineNumber":8,"author":{"gitId":"austenjs"},"content":"     * Constructor of Todo object"},{"lineNumber":9,"author":{"gitId":"austenjs"},"content":"     * @param task Description of the task"},{"lineNumber":10,"author":{"gitId":"austenjs"},"content":"     */"},{"lineNumber":11,"author":{"gitId":"austenjs"},"content":"    Todo (String task) {"},{"lineNumber":12,"author":{"gitId":"austenjs"},"content":"        super(task);"},{"lineNumber":13,"author":{"gitId":"austenjs"},"content":"    }"},{"lineNumber":14,"author":{"gitId":"austenjs"},"content":""},{"lineNumber":15,"author":{"gitId":"austenjs"},"content":"    /**"},{"lineNumber":16,"author":{"gitId":"austenjs"},"content":"     * Constructor of Todo object"},{"lineNumber":17,"author":{"gitId":"austenjs"},"content":"     * @param task Description of the task"},{"lineNumber":18,"author":{"gitId":"austenjs"},"content":"     * @param done State of the task"},{"lineNumber":19,"author":{"gitId":"austenjs"},"content":"     */"},{"lineNumber":20,"author":{"gitId":"austenjs"},"content":"    Todo (String task, boolean done) {"},{"lineNumber":21,"author":{"gitId":"austenjs"},"content":"        super(task, done);"},{"lineNumber":22,"author":{"gitId":"austenjs"},"content":"    }"},{"lineNumber":23,"author":{"gitId":"austenjs"},"content":""},{"lineNumber":24,"author":{"gitId":"austenjs"},"content":"    /**"},{"lineNumber":25,"author":{"gitId":"austenjs"},"content":"     * An overriden method from the parent class Task. The purpose is to"},{"lineNumber":26,"author":{"gitId":"austenjs"},"content":"     * return a new finished Task."},{"lineNumber":27,"author":{"gitId":"austenjs"},"content":"     * @return Finished Todo object."},{"lineNumber":28,"author":{"gitId":"austenjs"},"content":"     */"},{"lineNumber":29,"author":{"gitId":"austenjs"},"content":"    @Override"},{"lineNumber":30,"author":{"gitId":"austenjs"},"content":"    public Task finishTask() {"},{"lineNumber":31,"author":{"gitId":"austenjs"},"content":"        return new Todo(this.task, true);"},{"lineNumber":32,"author":{"gitId":"austenjs"},"content":"    }"},{"lineNumber":33,"author":{"gitId":"austenjs"},"content":""},{"lineNumber":34,"author":{"gitId":"austenjs"},"content":"    /**"},{"lineNumber":35,"author":{"gitId":"austenjs"},"content":"     * An overriden method from the parent class Task. The purpose is to"},{"lineNumber":36,"author":{"gitId":"austenjs"},"content":"     * return a String representation for txt files"},{"lineNumber":37,"author":{"gitId":"austenjs"},"content":"     * @return String for txt files"},{"lineNumber":38,"author":{"gitId":"austenjs"},"content":"     */"},{"lineNumber":39,"author":{"gitId":"austenjs"},"content":"    @Override"},{"lineNumber":40,"author":{"gitId":"austenjs"},"content":"    public String saveString() {"},{"lineNumber":41,"author":{"gitId":"austenjs"},"content":"        return \"T|\" + super.saveString();"},{"lineNumber":42,"author":{"gitId":"austenjs"},"content":"    }"},{"lineNumber":43,"author":{"gitId":"austenjs"},"content":""},{"lineNumber":44,"author":{"gitId":"austenjs"},"content":"    /**"},{"lineNumber":45,"author":{"gitId":"austenjs"},"content":"     * String representation of Todo object"},{"lineNumber":46,"author":{"gitId":"austenjs"},"content":"     * @return String representation of Todo object"},{"lineNumber":47,"author":{"gitId":"austenjs"},"content":"     */"},{"lineNumber":48,"author":{"gitId":"austenjs"},"content":"    @Override"},{"lineNumber":49,"author":{"gitId":"austenjs"},"content":"    public String toString() {"},{"lineNumber":50,"author":{"gitId":"austenjs"},"content":"        return \"[T]\" + super.toString();"},{"lineNumber":51,"author":{"gitId":"austenjs"},"content":"    }"},{"lineNumber":52,"author":{"gitId":"austenjs"},"content":"}"}],"authorContributionMap":{"austenjs":52}},{"path":"src/main/java/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"austenjs"},"content":"/**"},{"lineNumber":2,"author":{"gitId":"austenjs"},"content":" * Class that control how Duke interacts with user."},{"lineNumber":3,"author":{"gitId":"austenjs"},"content":" */"},{"lineNumber":4,"author":{"gitId":"austenjs"},"content":"public class Ui {"},{"lineNumber":5,"author":{"gitId":"austenjs"},"content":"    static final String LINE_AFTER_COMMAND \u003d \"___________________________________\" +"},{"lineNumber":6,"author":{"gitId":"austenjs"},"content":"            \"_________________________\";"},{"lineNumber":7,"author":{"gitId":"austenjs"},"content":""},{"lineNumber":8,"author":{"gitId":"austenjs"},"content":"    /**"},{"lineNumber":9,"author":{"gitId":"austenjs"},"content":"     * Show a message added with a line"},{"lineNumber":10,"author":{"gitId":"austenjs"},"content":"     * @param message Message wanted to be shown"},{"lineNumber":11,"author":{"gitId":"austenjs"},"content":"     */"},{"lineNumber":12,"author":{"gitId":"austenjs"},"content":"    public static void showMessage(String message) {"},{"lineNumber":13,"author":{"gitId":"austenjs"},"content":"        System.out.println(message);"},{"lineNumber":14,"author":{"gitId":"austenjs"},"content":"        System.out.println(LINE_AFTER_COMMAND);"},{"lineNumber":15,"author":{"gitId":"austenjs"},"content":"    }"},{"lineNumber":16,"author":{"gitId":"austenjs"},"content":""},{"lineNumber":17,"author":{"gitId":"austenjs"},"content":"    /**"},{"lineNumber":18,"author":{"gitId":"austenjs"},"content":"     * Show message (without line)"},{"lineNumber":19,"author":{"gitId":"austenjs"},"content":"     * @param item Message wanted to be shown"},{"lineNumber":20,"author":{"gitId":"austenjs"},"content":"     */"},{"lineNumber":21,"author":{"gitId":"austenjs"},"content":"    public static void showMessageInALine(String item) {"},{"lineNumber":22,"author":{"gitId":"austenjs"},"content":"        System.out.println(item);"},{"lineNumber":23,"author":{"gitId":"austenjs"},"content":"    }"},{"lineNumber":24,"author":{"gitId":"austenjs"},"content":""},{"lineNumber":25,"author":{"gitId":"austenjs"},"content":"    /**"},{"lineNumber":26,"author":{"gitId":"austenjs"},"content":"     * Welcome message when starting Duke"},{"lineNumber":27,"author":{"gitId":"austenjs"},"content":"     */"},{"lineNumber":28,"author":{"gitId":"austenjs"},"content":"    public static void showWelcomeMessage() {"},{"lineNumber":29,"author":{"gitId":"austenjs"},"content":"        String logo \u003d \" ____        _        \\n\""},{"lineNumber":30,"author":{"gitId":"austenjs"},"content":"                + \"|  _ \\\\ _   _| | _____ \\n\""},{"lineNumber":31,"author":{"gitId":"austenjs"},"content":"                + \"| | | | | | | |/ / _ \\\\\\n\""},{"lineNumber":32,"author":{"gitId":"austenjs"},"content":"                + \"| |_| | |_| |   \u003c  __/\\n\""},{"lineNumber":33,"author":{"gitId":"austenjs"},"content":"                + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\";"},{"lineNumber":34,"author":{"gitId":"austenjs"},"content":"        System.out.println(\"Hello from\\n\" + logo);"},{"lineNumber":35,"author":{"gitId":"austenjs"},"content":"        System.out.println(LINE_AFTER_COMMAND + \"\\nHello! I\u0027m  Duke\");"},{"lineNumber":36,"author":{"gitId":"austenjs"},"content":"        System.out.println(\"What can I do for you?\\n\" + LINE_AFTER_COMMAND + \"\\n\");"},{"lineNumber":37,"author":{"gitId":"austenjs"},"content":"    }"},{"lineNumber":38,"author":{"gitId":"austenjs"},"content":""},{"lineNumber":39,"author":{"gitId":"austenjs"},"content":"    /**"},{"lineNumber":40,"author":{"gitId":"austenjs"},"content":"     * Closing message when closing Duke"},{"lineNumber":41,"author":{"gitId":"austenjs"},"content":"     */"},{"lineNumber":42,"author":{"gitId":"austenjs"},"content":"    public static void doBye() {"},{"lineNumber":43,"author":{"gitId":"austenjs"},"content":"        System.out.println(LINE_AFTER_COMMAND + \"\\nBye. Hope to see you again soon!\\n\""},{"lineNumber":44,"author":{"gitId":"austenjs"},"content":"                + LINE_AFTER_COMMAND + \"\\n\");"},{"lineNumber":45,"author":{"gitId":"austenjs"},"content":"    }"},{"lineNumber":46,"author":{"gitId":"austenjs"},"content":""},{"lineNumber":47,"author":{"gitId":"austenjs"},"content":"    /**"},{"lineNumber":48,"author":{"gitId":"austenjs"},"content":"     * Print a line"},{"lineNumber":49,"author":{"gitId":"austenjs"},"content":"     */"},{"lineNumber":50,"author":{"gitId":"austenjs"},"content":"    public static void printLine() {"},{"lineNumber":51,"author":{"gitId":"austenjs"},"content":"        System.out.println(LINE_AFTER_COMMAND);"},{"lineNumber":52,"author":{"gitId":"austenjs"},"content":"    }"},{"lineNumber":53,"author":{"gitId":"austenjs"},"content":""},{"lineNumber":54,"author":{"gitId":"austenjs"},"content":"    /**"},{"lineNumber":55,"author":{"gitId":"austenjs"},"content":"     * Message when finishing a Task"},{"lineNumber":56,"author":{"gitId":"austenjs"},"content":"     * @param message message of finishing a task"},{"lineNumber":57,"author":{"gitId":"austenjs"},"content":"     */"},{"lineNumber":58,"author":{"gitId":"austenjs"},"content":"    public static void finishTaskMessage(String message) {"},{"lineNumber":59,"author":{"gitId":"austenjs"},"content":"        Ui.showMessageInALine(\"Nice! I\u0027ve marked this task as done: \");"},{"lineNumber":60,"author":{"gitId":"austenjs"},"content":"        System.out.println(\" \" + message);"},{"lineNumber":61,"author":{"gitId":"austenjs"},"content":"        System.out.println(LINE_AFTER_COMMAND);"},{"lineNumber":62,"author":{"gitId":"austenjs"},"content":"    }"},{"lineNumber":63,"author":{"gitId":"austenjs"},"content":""},{"lineNumber":64,"author":{"gitId":"austenjs"},"content":"    /**"},{"lineNumber":65,"author":{"gitId":"austenjs"},"content":"     * Message when deleting a Task"},{"lineNumber":66,"author":{"gitId":"austenjs"},"content":"     * @param message message of deleting a task"},{"lineNumber":67,"author":{"gitId":"austenjs"},"content":"     * @param newSize new size of the TaskList"},{"lineNumber":68,"author":{"gitId":"austenjs"},"content":"     */"},{"lineNumber":69,"author":{"gitId":"austenjs"},"content":"    public static void deleteTaskMessage(String message, int newSize) {"},{"lineNumber":70,"author":{"gitId":"austenjs"},"content":"        System.out.println(\"Noted. I\u0027ve removed this task:\");"},{"lineNumber":71,"author":{"gitId":"austenjs"},"content":"        System.out.println(\"  \" + message);"},{"lineNumber":72,"author":{"gitId":"austenjs"},"content":"        System.out.println(\"Now you have \" + newSize + \" tasks in the list.\");"},{"lineNumber":73,"author":{"gitId":"austenjs"},"content":"        System.out.println(LINE_AFTER_COMMAND + \"\\n\");"},{"lineNumber":74,"author":{"gitId":"austenjs"},"content":"    }"},{"lineNumber":75,"author":{"gitId":"austenjs"},"content":""},{"lineNumber":76,"author":{"gitId":"austenjs"},"content":"    /**"},{"lineNumber":77,"author":{"gitId":"austenjs"},"content":"     * Message when adding a Task"},{"lineNumber":78,"author":{"gitId":"austenjs"},"content":"     * @param message messsage of adding a task"},{"lineNumber":79,"author":{"gitId":"austenjs"},"content":"     * @param newSize new size of the TaskList"},{"lineNumber":80,"author":{"gitId":"austenjs"},"content":"     */"},{"lineNumber":81,"author":{"gitId":"austenjs"},"content":"    public static void addTaskMessage(String message, int newSize) {"},{"lineNumber":82,"author":{"gitId":"austenjs"},"content":"        System.out.println(\"Got it. I\u0027ve added this task:\");"},{"lineNumber":83,"author":{"gitId":"austenjs"},"content":"        System.out.println(\"  \" + message);"},{"lineNumber":84,"author":{"gitId":"austenjs"},"content":"        System.out.println(\"Now you have \" + newSize + \" tasks in the list.\");"},{"lineNumber":85,"author":{"gitId":"austenjs"},"content":"        System.out.println(LINE_AFTER_COMMAND + \"\\n\");"},{"lineNumber":86,"author":{"gitId":"austenjs"},"content":"    }"},{"lineNumber":87,"author":{"gitId":"austenjs"},"content":"}"}],"authorContributionMap":{"austenjs":87}},{"path":"src/test/java/EventTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"austenjs"},"content":"import org.junit.jupiter.api.Test;"},{"lineNumber":2,"author":{"gitId":"austenjs"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;"},{"lineNumber":3,"author":{"gitId":"austenjs"},"content":""},{"lineNumber":4,"author":{"gitId":"austenjs"},"content":"public class EventTest {"},{"lineNumber":5,"author":{"gitId":"austenjs"},"content":"    @Test"},{"lineNumber":6,"author":{"gitId":"austenjs"},"content":"    public void EventTesting() {"},{"lineNumber":7,"author":{"gitId":"austenjs"},"content":"        Event event \u003d new Event(\"marriage\", \"June 2020\", false);"},{"lineNumber":8,"author":{"gitId":"austenjs"},"content":"        assertEquals(event.toString(), \"[E][ ] marriage (at: June 2020)\");"},{"lineNumber":9,"author":{"gitId":"austenjs"},"content":"        assertEquals(event.saveString(), \"E|0|marriage|June 2020\");"},{"lineNumber":10,"author":{"gitId":"austenjs"},"content":"        assertEquals(event.finishTask().toString(), \"[E][X] marriage (at: June 2020)\");"},{"lineNumber":11,"author":{"gitId":"austenjs"},"content":"    }"},{"lineNumber":12,"author":{"gitId":"austenjs"},"content":"}"}],"authorContributionMap":{"austenjs":12}},{"path":"src/test/java/TodoTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"austenjs"},"content":"import org.junit.jupiter.api.Test;"},{"lineNumber":2,"author":{"gitId":"austenjs"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;"},{"lineNumber":3,"author":{"gitId":"austenjs"},"content":""},{"lineNumber":4,"author":{"gitId":"austenjs"},"content":"public class TodoTest {"},{"lineNumber":5,"author":{"gitId":"austenjs"},"content":"    @Test"},{"lineNumber":6,"author":{"gitId":"austenjs"},"content":"    public void TodoTesting() {"},{"lineNumber":7,"author":{"gitId":"austenjs"},"content":"        Todo task \u003d new Todo(\"eating\", false);"},{"lineNumber":8,"author":{"gitId":"austenjs"},"content":"        String expected \u003d \"[T][ ] eating\";"},{"lineNumber":9,"author":{"gitId":"austenjs"},"content":"        assertEquals(expected,task.toString());"},{"lineNumber":10,"author":{"gitId":"austenjs"},"content":"        String expected2 \u003d \"[T][X] eating\";"},{"lineNumber":11,"author":{"gitId":"austenjs"},"content":"        assertEquals(task.finishTask().toString(), expected2);"},{"lineNumber":12,"author":{"gitId":"austenjs"},"content":"        String expected3 \u003d \"T|1|eating\";"},{"lineNumber":13,"author":{"gitId":"austenjs"},"content":"        assertEquals(task.finishTask().saveString(), expected3.toString());"},{"lineNumber":14,"author":{"gitId":"austenjs"},"content":"    }"},{"lineNumber":15,"author":{"gitId":"austenjs"},"content":"}"}],"authorContributionMap":{"austenjs":15}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF"},{"lineNumber":2,"author":{"gitId":"-"},"content":""},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin"},{"lineNumber":5,"author":{"gitId":"-"},"content":""},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run"},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT"},{"lineNumber":8,"author":{"gitId":"-"},"content":""},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder"},{"lineNumber":10,"author":{"gitId":"austenjs"},"content":"javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\Duke.java"},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 ("},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1"},{"lineNumber":14,"author":{"gitId":"-"},"content":")"},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0"},{"lineNumber":16,"author":{"gitId":"-"},"content":""},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"},{"lineNumber":18,"author":{"gitId":"-"},"content":"java -classpath ..\\bin Duke \u003c input.txt \u003e ACTUAL.TXT"},{"lineNumber":19,"author":{"gitId":"-"},"content":""},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM compare the output to the expected output"},{"lineNumber":21,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT"}],"authorContributionMap":{"-":20,"austenjs":1}}]
